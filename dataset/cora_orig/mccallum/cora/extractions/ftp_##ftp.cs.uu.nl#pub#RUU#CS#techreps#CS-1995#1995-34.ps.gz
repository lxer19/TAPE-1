URL: ftp://ftp.cs.uu.nl/pub/RUU/CS/techreps/CS-1995/1995-34.ps.gz
Refering-URL: http://www.cs.ruu.nl/docs/research/publication/TechList1.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Treewidth and minimum fill-in on d-trapezoid graphs a consequence, the minimum fill-in and the minimum
Author: Hans L. Bodlaender Ton Kloks Dieter Kratsch Haiko Muller 
Note: As  
Address: P.O. Box 80.089, 3508 TB Utrecht, The Netherlands.  P.O.Box 513, 5600 MB Eindhoven, The Netherlands.  07740 Jena, Germany.  
Affiliation: Department of Computer Science, Utrecht University  Department of Mathematics and Computing Science Eindhoven University of Technology  Friedrich-Schiller-Universit at, Fakult at f ur Mathematik und Informatik  
Abstract: We show that the minimum fill-in and the minimum interval graph completion of a d-trapezoid graph can be computed in time O(n d ). We also show that the treewidth and the pathwidth of a d-trapezoid graph can be computed by an O(n tw(G) d1 ) time algorithm. For both algorithms, d is supposed to be a fixed positive integer and it is required that a suitable intersection model of the given d-trapezoid graph is part of the input. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Arnborg, </author> <title> Efficient algorithms for combinatorial problems on graphs with bounded decomposability A survey. </title> <journal> BIT 25, </journal> <volume> 2 23, </volume> <year> 1985. </year>
Reference-contexts: One reason for this interest is that many graph problems, including many well known and important problems, become polynomial time, and usually even linear time solvable (and become member of NC), when restricted to a class of graphs with bounded tree- or pathwidth <ref> [1, 3, 4, 5, 7, 27] </ref>. In general, such algorithms need to have a tree-decomposition or path-decomposition of suitable width given together with the input graph. Hence, an important problem is to find tree-decompositions (or path-decompositions) of minimum width.
Reference: [2] <author> S. Arnborg, D.G. Corneil and A. Proskurowski, </author> <title> Complexity of finding embed-dings in a k-tree, </title> <journal> SIAM Journal on Algebraic and Discrete Methods 8, </journal> <volume> 277 284, </volume> <year> 1987. </year>
Reference-contexts: The problem `Given a graph G and a positive integer k, decide whether the treewidth (resp. pathwidth) of G is at most k' remains NP-complete on cobipartite graphs <ref> [2] </ref> and on bipartite graphs [21]. (The reader is refered to the preliminaries section for definitions.) For some special classes of graphs, it has been shown that the treewidth can be computed in polynomial time, as e.g. cographs [9], circular-arc graphs [35], chordal bipartite graphs [23], permutation graphs [10], circle graphs <p> The decision problems TREEWIDTH and PATHWIDTH are NP-complete <ref> [2] </ref>. However, for constant k, graphs with treewidth at most k are recognizable in O (n) time [6]. The large constants involved in these algorithms make them usually not very practical. <p> Our algorithms for d-trapezoid graphs require an intersection model as part of the input. This is not surprising. On one hand, all four problems that we considered are NP-complete on cocomparability graphs <ref> [2, 38] </ref>, hence there is no polynomial time algorithm for d-trapezoid graphs if the parameter d is unbounded, unless P=NP. On the other hand, the recognition problem for d-trapezoid graphs, d 3, is NP-complete [37].
Reference: [3] <author> S. Arnborg, J. Lagergren and D. Seese, </author> <title> Easy problems for tree-decomposable graphs, </title> <journal> Journal of Algorithms 12, </journal> <volume> 308 340, </volume> <year> 1991. </year>
Reference-contexts: One reason for this interest is that many graph problems, including many well known and important problems, become polynomial time, and usually even linear time solvable (and become member of NC), when restricted to a class of graphs with bounded tree- or pathwidth <ref> [1, 3, 4, 5, 7, 27] </ref>. In general, such algorithms need to have a tree-decomposition or path-decomposition of suitable width given together with the input graph. Hence, an important problem is to find tree-decompositions (or path-decompositions) of minimum width.
Reference: [4] <author> S. Arnborg and A. Proskurowski, </author> <title> Linear time algorithms for NP-hard problems restricted to partial k-trees. </title> <journal> Discrete Applied Mathematics 23, </journal> <volume> 11 24, </volume> <year> 1989. </year> <month> 20 </month>
Reference-contexts: One reason for this interest is that many graph problems, including many well known and important problems, become polynomial time, and usually even linear time solvable (and become member of NC), when restricted to a class of graphs with bounded tree- or pathwidth <ref> [1, 3, 4, 5, 7, 27] </ref>. In general, such algorithms need to have a tree-decomposition or path-decomposition of suitable width given together with the input graph. Hence, an important problem is to find tree-decompositions (or path-decompositions) of minimum width.
Reference: [5] <author> H.L. Bodlaender, </author> <title> Dynamic programming algorithms on graphs with bounded treewidth, </title> <booktitle> Proceedings of the 15th International Colloquium on Automata, Languages and Programming, </booktitle> <volume> 105 119, </volume> <editor> Springer-Verlag, </editor> <booktitle> Lecture Notes in Computer Science 317, </booktitle> <year> 1988. </year>
Reference-contexts: One reason for this interest is that many graph problems, including many well known and important problems, become polynomial time, and usually even linear time solvable (and become member of NC), when restricted to a class of graphs with bounded tree- or pathwidth <ref> [1, 3, 4, 5, 7, 27] </ref>. In general, such algorithms need to have a tree-decomposition or path-decomposition of suitable width given together with the input graph. Hence, an important problem is to find tree-decompositions (or path-decompositions) of minimum width.
Reference: [6] <author> H.L. Bodlaender, </author> <title> A linear time algorithm for finding tree-decompositions of small treewidth, </title> <booktitle> Proceedings of the 25th Annual ACM Symposium on Theory of Computing, </booktitle> <volume> 226 234, </volume> <year> 1993. </year> <note> To appear in SIAM Journal on Computing. </note>
Reference-contexts: Hence, an important problem is to find tree-decompositions (or path-decompositions) of minimum width. When the desired width of the tree-decomposition is bounded by a constant, then this problem can be solved in linear time <ref> [6] </ref>. However, the constant factor of this algorithm is exponential in the treewidth (of yes-instances), which limits its practicality. <p> The decision problems TREEWIDTH and PATHWIDTH are NP-complete [2]. However, for constant k, graphs with treewidth at most k are recognizable in O (n) time <ref> [6] </ref>. The large constants involved in these algorithms make them usually not very practical. It is therefore of importance to find fully polynomial algorithms for treewidth and pathwidth for special classes of graphs which are as large as possible.
Reference: [7] <author> H.L. Bodlaender, </author> <title> A tourist guide through treewidth, </title> <journal> Acta Cybernetica 11, </journal> <volume> 1 23, </volume> <year> 1993. </year>
Reference-contexts: One reason for this interest is that many graph problems, including many well known and important problems, become polynomial time, and usually even linear time solvable (and become member of NC), when restricted to a class of graphs with bounded tree- or pathwidth <ref> [1, 3, 4, 5, 7, 27] </ref>. In general, such algorithms need to have a tree-decomposition or path-decomposition of suitable width given together with the input graph. Hence, an important problem is to find tree-decompositions (or path-decompositions) of minimum width. <p> There are different ways to define the treewidth of a graph. The original definition by Robertson and Seymour uses the concept of a tree-decomposition. For more information on tree-decompositions the reader is refered to the survey paper <ref> [7] </ref>. In this paper we introduce the treewidth by means of triangulations. This turned out to be a fruitful approach for many of the recently designed efficient treewidth algorithms for special graph classes (see, e.g., [21]).
Reference: [8] <author> H.L. Bodlaender. </author> <title> A partial k-arboretum of graphs with bounded treewidth. </title> <type> Technical Report UU-CS-1996-02, </type> <institution> Department of Computer Science, Utrecht University, </institution> <address> Utrecht, the Netherlands, </address> <year> 1996. </year> <note> URL: ftp://ftp.cs.ruu.nl/pub/RUU/CS/techreps/CS-1996/1996-02.ps.gz </note>
Reference-contexts: The following lemma shows the equivalence of the above definition of pathwidth and the original one in terms of path-decompositions by Robertson and Seymour. For a proof see for example <ref> [8, Theorem 29] </ref> and [21, Lemma 2.2.8]. Lemma 2.1 A graph G has a path-decomposition of width at most k if and only if there is a triangulation of G into an interval graph H such that !(H) k + 1.
Reference: [9] <author> H. Bodlaender and R.H. Mohring, </author> <title> The pathwidth and treewidth of cographs, </title> <journal> SIAM Journal on Discrete Mathematics 6, </journal> <volume> 181 188, </volume> <year> 1993. </year>
Reference-contexts: pathwidth) of G is at most k' remains NP-complete on cobipartite graphs [2] and on bipartite graphs [21]. (The reader is refered to the preliminaries section for definitions.) For some special classes of graphs, it has been shown that the treewidth can be computed in polynomial time, as e.g. cographs <ref> [9] </ref>, circular-arc graphs [35], chordal bipartite graphs [23], permutation graphs [10], circle graphs [19], cocomparability graphs of bounded dimension [25], cointerval graphs [16] and d-trapezoid graphs [31]. The algorithm for d-trapezoid graphs assumes that a d-trapezoid intersection model is part of the input.
Reference: [10] <author> H. Bodlaender, T. Kloks and D. Kratsch, </author> <title> Treewidth and pathwidth of permutation graphs, </title> <journal> SIAM Journal on Discrete Mathematics 8, </journal> <volume> 606 616, </volume> <year> 1995. </year>
Reference-contexts: cobipartite graphs [2] and on bipartite graphs [21]. (The reader is refered to the preliminaries section for definitions.) For some special classes of graphs, it has been shown that the treewidth can be computed in polynomial time, as e.g. cographs [9], circular-arc graphs [35], chordal bipartite graphs [23], permutation graphs <ref> [10] </ref>, circle graphs [19], cocomparability graphs of bounded dimension [25], cointerval graphs [16] and d-trapezoid graphs [31]. The algorithm for d-trapezoid graphs assumes that a d-trapezoid intersection model is part of the input. <p> Now polynomial time algorithms for chordal bipartite graphs [20], multilolerance graphs [30] as well as circle and circular-arc graphs [26] are available. We claimed in [22] that the scanline approach used for designing an efficient treewidth algorithm for permutation graphs in <ref> [10] </ref> can as well be used for the minimum fill-in problem on permutation graphs and cocomparability graphs of dimension at most d (with an intersection model as part of the input) leading to O (n 2 ) and O (n d ) algorithms, respectively. <p> completion for a given d-trapezoid graph in time O (n d ), d a fixed positive integer, where a d-trapezoid diagram is supposed to be part of the input. 2 It is worth to mention that our algorithms are indeed natural extensions of the treewidth algorithm for permutation graphs in <ref> [10] </ref>. (Note that each permutation graph is a 2-trapezoid graph.) Finally, we emphasize that for trapezoid graphs we indeed obtain fast algorithms, namely an O (n tw (G)) algorithm computing the treewidth and pathwidth, and an O (n 2 ) algorithm computing the minimum fill-in and the minimum interval graph completion. <p> For designing efficient treewidth algorithms on special graph classes that do not have bounded treewidth, vertex separators of bounded size have been replaced by minimal separators (see, e.g., <ref> [10, 21] </ref>). Definition 2.9 Let G = (V; E) be a graph. A subset S V is an a; b-separator for nonadjacent vertices a and b, if the removal of S separates a and b in distinct connected components. <p> Then the minimal separators of G are the sets A i " A i+1 , i 2 f1; 2; : : : ; q 1g. For designing efficient treewidth algorithms on special graph classes, the restriction to certain types of triangulations has been used by different authors (see, e.g., <ref> [10, 21, 25, 31] </ref>). Definition 2.10 A triangulation H of a graph G is a minimal triangulation of G if no proper subgraph of H is a triangulation of G. Minimal triangulations have already been studied in [33]. Among others, the authors give the following characterization of minimal triangulations. <p> Consequently, by Theorem 2.2, the treewidth and pathwidth of a d-trapezoid graph coincide, and the minimum fill-in and the minimum interval graph completion of a d-trapezoid graph coincide. The concept of a scanline is crucial to various efficient treewidth algorithms developed in the last years <ref> [10, 19, 21, 31] </ref>. <p> Then S (s) is the set of those vertices v for which the scanline s has a nonempty intersection with Q v . The following results can easily be obtained in the same fashion as the corresponding result for permutation graphs given in <ref> [10] </ref>. Lemma 3.1 Let G be a d-trapezoid graph with d-trapezoid diagram D (G). For every minimal x; y-separator S of G there is a scanline s in D (G), which is between the d-trapezoids Q x and Q y , such that S = S (s). <p> Consequently, we obtain mic (G) = mfi (G) = P l1 i=1 jfirst (s 0 i )j. 2 5 Small scanlines and dense sequences The notion of a small scanline has been introduced in <ref> [10] </ref>. It is useful in a treewidth algorithm since a minimal separator S with jSj &gt; k + 1 can not be made into a clique for obtaining a minimal triangulation H with !(H) k + 1. Definition 5.1 Consider a d-trapezoid diagram. <p> Let s be a scanline with endpoints s i and s j on D i and D j , respectively. Similar to the argumentation in the corresponding proof for permutation graphs in <ref> [10] </ref> the number of d-trapezoids having empty intersection with the scanline s is at most min (s i ; s j ) 1=2 + 2 js i s j j : Hence the number of d-trapezoids intersecting the scanline s is at least 1=2 js i s j j. <p> Hence the overall running time of the algorithm is O (n d ). 2 19 7 Conclusions In this paper we described two algorithms designed by a `scanline approach' that has been introduced in <ref> [10] </ref>. Both polynomial time algorithms solve NP-complete problems when these problems are restricted to d-trapezoid graphs, if a d-trapezoid diagram of the given graph is part of the input (d a fixed positive integer). An O (n tw (G) d1 ) algorithm computes the treewidth and the pathwidth.
Reference: [11] <author> K.S. Booth and G.S. Lueker, </author> <title> Testing for the consecutive ones property, interval graphs, and graph planarity using PQ-tree algorithms, </title> <journal> Journal of Computer and System Sciences 13, </journal> <volume> 335 379, </volume> <year> 1976. </year>
Reference-contexts: The 1-trapezoid graphs are exactly the interval graphs and the 2-trapezoid graphs are exactly the trapezoid graphs by Theorem 3.1. There is a linear time recognition algorithm for interval graphs computing an interval model if the input graph is an interval graph <ref> [11] </ref>. There is an O (n 2 ) recognition algorithm for trapezoid graphs computing a trapezoid model if the input graph is a trapezoid graph [28]. Moreover, Theorem 3.1 shows that for any fixed d the d-trapezoid graphs form a subclass of the cocomparability graphs.
Reference: [12] <author> A. Brandstadt, </author> <title> Special graph classes a survey, </title> <institution> Schriftenreihe des Fachbereichs Mathematik, SM-DU-199, Universitat Duisburg Gesamthochschule, </institution> <year> 1991. </year>
Reference-contexts: Definition 2.1 A graph is chordal if it has no induced chordless cycle of length at least four. Chordal graphs (also called triangulated graphs) form a subclass of the perfect graphs. For detailed information on classes of perfect graphs the reader is refered to <ref> [12, 18] </ref>. There are different ways to define the treewidth of a graph. The original definition by Robertson and Seymour uses the concept of a tree-decomposition. For more information on tree-decompositions the reader is refered to the survey paper [7].
Reference: [13] <author> D.G. Corneil, Y. Perl and L.K. Stewart, </author> <title> Cographs: recognition, applications and algorithms, </title> <journal> Congressus Numerantium 43, </journal> <volume> 249 258, </volume> <year> 1984. </year>
Reference-contexts: The only known graph classes for which the minimum fill-in can be computed by a polynomial time algorithm were for almost ten years the relatively small classes of cographs <ref> [13] </ref> and bipartite permutation graphs [34]. Now polynomial time algorithms for chordal bipartite graphs [20], multilolerance graphs [30] as well as circle and circular-arc graphs [26] are available.
Reference: [14] <author> D.G. Corneil, S. Olariu and L. Stewart, </author> <title> Asteroidal triple-free graphs, </title> <booktitle> Proceedings of the 19th International Workshop on Graph-Theoretic Concepts in Computer Science, </booktitle> <volume> 211 224, </volume> <editor> Springer-Verlag, </editor> <booktitle> Lecture Notes in Computer Science 790, </booktitle> <year> 1994. </year>
Reference-contexts: The following theorem of M ohring, given in [29], is important for us. Theorem 2.2 Any minimal triangulation of an asteroidal triple-free graph is an interval graph. Hence pw (G) = tw (G) and mfi (G) = mic (G) for each asteroidal triple-free graph. 5 (See <ref> [14] </ref> for more informations on asteroidal triple-free graphs.) The d-trapezoid graphs are a subclass of the asteroidal triple-free graphs for any fixed d.
Reference: [15] <author> S. Felsner, R. M uller and L. Wernisch, </author> <title> Trapezoid graphs and generalizations, geometry and algorithms, </title> <booktitle> Proceedings of the 4th Scandinavian Workshop on Algorithm Theory, </booktitle> <volume> 143 154, </volume> <editor> Springer-Verlag, </editor> <booktitle> Lecture Notes in Computer Science 842, </booktitle> <year> 1994. </year>
Reference-contexts: However for various graph classes refinements of this approach lead to efficient algorithms. 6 3 The d-trapezoid graphs In this section we define d-trapezoid graphs and d-trapezoid diagrams. Our definition of d-trapezoid graphs is a mixture of the definitions in <ref> [15, 31] </ref>, chosen such that it generalizes the definition of cocomparability graphs of dimension d, given in [25], and such that d-trapezoid graphs are exactly the cocomparability graphs of partially ordered sets of interval dimension at most d. Definition 3.1 Let d be a fixed positive integer, d 1. <p> Consequently fv; wg 2 E if and only if Q v and Q w have nonempty intersection. (See Fig. 1 for an example.) Definition 3.2 A graph G is a d-trapezoid graph if it has a d-trapezoid diagram. The following theorem is a consequence of Definition 3.1 (see <ref> [15, 31] </ref>). Theorem 3.1 The d-trapezoid graphs are exactly the cocomparability graphs of partially ordered sets of interval dimension at most d.
Reference: [16] <author> R. Garbe, </author> <title> Tree-width and path-width of comparability graphs of interval orders, </title> <booktitle> Proceedings of the 20th International Workshop on Graph-Theoretic Concepts in Computer Science, </booktitle> <volume> 26 37, </volume> <editor> Springer-Verlag, </editor> <booktitle> Lecture Notes in Computer Science 903, </booktitle> <year> 1995. </year>
Reference-contexts: to the preliminaries section for definitions.) For some special classes of graphs, it has been shown that the treewidth can be computed in polynomial time, as e.g. cographs [9], circular-arc graphs [35], chordal bipartite graphs [23], permutation graphs [10], circle graphs [19], cocomparability graphs of bounded dimension [25], cointerval graphs <ref> [16] </ref> and d-trapezoid graphs [31]. The algorithm for d-trapezoid graphs assumes that a d-trapezoid intersection model is part of the input.
Reference: [17] <author> P.C. Gilmore, A.J. Hoffman, </author> <title> A characterization of comparability graphs and interval graphs, </title> <journal> Canadian Journal of Mathematics 16, </journal> <volume> 539 548, </volume> <year> 1964. </year> <month> 21 </month>
Reference-contexts: Lemma 2.1 A graph G has a path-decomposition of width at most k if and only if there is a triangulation of G into an interval graph H such that !(H) k + 1. The following characterization of interval graphs is due to Gilmore and Hoffman <ref> [17] </ref>. Lemma 2.2 G is an interval graph if and only if the maximal cliques of G can be ordered so that for every vertex the maximal cliques containing it occur consecutively. Such an ordering of the maximal cliques is said to be a consecutive clique arrangement (abbr.
Reference: [18] <author> M.C. Golumbic, </author> <title> Algorithmic Graph Theory and Perfect Graphs, </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1980. </year>
Reference-contexts: Definition 2.1 A graph is chordal if it has no induced chordless cycle of length at least four. Chordal graphs (also called triangulated graphs) form a subclass of the perfect graphs. For detailed information on classes of perfect graphs the reader is refered to <ref> [12, 18] </ref>. There are different ways to define the treewidth of a graph. The original definition by Robertson and Seymour uses the concept of a tree-decomposition. For more information on tree-decompositions the reader is refered to the survey paper [7]. <p> Notice that the interval graphs form a proper subclass of the chordal graphs <ref> [18] </ref>. <p> A minimal separator S is a subset S V such that S is a minimal a; b-separator for some nonadjacent vertices a and b. The following lemmas must have been rediscovered many times (see, e.g., <ref> [18] </ref>). Lemma 2.4 Let S be a minimal a; b-separator of G = (V; E), and let C a and C b be the connected components of G [V n S], containing a and b respectively.
Reference: [19] <author> T. Kloks, </author> <title> Treewidth of circle graphs, </title> <booktitle> Proceedings of the 4th International Symposium on Algorithms and Computation, </booktitle> <volume> 108 117, </volume> <editor> Springer-Verlag, </editor> <booktitle> Lecture Notes in Computer Science 762, </booktitle> <year> 1993. </year>
Reference-contexts: and on bipartite graphs [21]. (The reader is refered to the preliminaries section for definitions.) For some special classes of graphs, it has been shown that the treewidth can be computed in polynomial time, as e.g. cographs [9], circular-arc graphs [35], chordal bipartite graphs [23], permutation graphs [10], circle graphs <ref> [19] </ref>, cocomparability graphs of bounded dimension [25], cointerval graphs [16] and d-trapezoid graphs [31]. The algorithm for d-trapezoid graphs assumes that a d-trapezoid intersection model is part of the input. <p> Consequently, by Theorem 2.2, the treewidth and pathwidth of a d-trapezoid graph coincide, and the minimum fill-in and the minimum interval graph completion of a d-trapezoid graph coincide. The concept of a scanline is crucial to various efficient treewidth algorithms developed in the last years <ref> [10, 19, 21, 31] </ref>.
Reference: [20] <author> T. Kloks, </author> <title> Minimum fill-in for chordal bipartite graphs, </title> <type> Technical Report RUU-CS-93-11, </type> <institution> Department of Computer Science, Utrecht University, </institution> <address> The Netherlands, </address> <year> 1993. </year>
Reference-contexts: The only known graph classes for which the minimum fill-in can be computed by a polynomial time algorithm were for almost ten years the relatively small classes of cographs [13] and bipartite permutation graphs [34]. Now polynomial time algorithms for chordal bipartite graphs <ref> [20] </ref>, multilolerance graphs [30] as well as circle and circular-arc graphs [26] are available.
Reference: [21] <author> T. Kloks, </author> <title> Treewidth Computations and Approximations, Springer-Verlag, </title> <booktitle> Lecture Notes in Computer Science 842, </booktitle> <year> 1994. </year>
Reference-contexts: The problem `Given a graph G and a positive integer k, decide whether the treewidth (resp. pathwidth) of G is at most k' remains NP-complete on cobipartite graphs [2] and on bipartite graphs <ref> [21] </ref>. (The reader is refered to the preliminaries section for definitions.) For some special classes of graphs, it has been shown that the treewidth can be computed in polynomial time, as e.g. cographs [9], circular-arc graphs [35], chordal bipartite graphs [23], permutation graphs [10], circle graphs [19], cocomparability graphs of bounded <p> For more information on tree-decompositions the reader is refered to the survey paper [7]. In this paper we introduce the treewidth by means of triangulations. This turned out to be a fruitful approach for many of the recently designed efficient treewidth algorithms for special graph classes (see, e.g., <ref> [21] </ref>). Definition 2.2 A triangulation of a graph G is a graph H with the same vertex set as G, such that G is a subgraph of H and H is chordal. We denote the maximum cardinality of a clique in a graph G by !(G). <p> The following lemma shows the equivalence of the above definition of pathwidth and the original one in terms of path-decompositions by Robertson and Seymour. For a proof see for example [8, Theorem 29] and <ref> [21, Lemma 2.2.8] </ref>. Lemma 2.1 A graph G has a path-decomposition of width at most k if and only if there is a triangulation of G into an interval graph H such that !(H) k + 1. The following characterization of interval graphs is due to Gilmore and Hoffman [17]. <p> For designing efficient treewidth algorithms on special graph classes that do not have bounded treewidth, vertex separators of bounded size have been replaced by minimal separators (see, e.g., <ref> [10, 21] </ref>). Definition 2.9 Let G = (V; E) be a graph. A subset S V is an a; b-separator for nonadjacent vertices a and b, if the removal of S separates a and b in distinct connected components. <p> Then the minimal separators of G are the sets A i " A i+1 , i 2 f1; 2; : : : ; q 1g. For designing efficient treewidth algorithms on special graph classes, the restriction to certain types of triangulations has been used by different authors (see, e.g., <ref> [10, 21, 25, 31] </ref>). Definition 2.10 A triangulation H of a graph G is a minimal triangulation of G if no proper subgraph of H is a triangulation of G. Minimal triangulations have already been studied in [33]. Among others, the authors give the following characterization of minimal triangulations. <p> Consequently, by Theorem 2.2, the treewidth and pathwidth of a d-trapezoid graph coincide, and the minimum fill-in and the minimum interval graph completion of a d-trapezoid graph coincide. The concept of a scanline is crucial to various efficient treewidth algorithms developed in the last years <ref> [10, 19, 21, 31] </ref>. <p> Nevertheless it has been shown that using a different approach an O (n 3d+3 ) time algorithm computing the treewidth and pathwidth for d-trapezoid graphs, d 3, can be designed that does not require an intersection model as part of the input <ref> [21, 25] </ref>.
Reference: [22] <author> T. Kloks, H. Bodlaender, H. M uller and D. Kratsch, </author> <title> Computing treewidth and minimum fill-in: all you need are the minimal separators, </title> <booktitle> Proceedings of the First Annual European Symposium on Algorithms, </booktitle> <volume> 260 271, </volume> <editor> Springer-Verlag, </editor> <booktitle> Lecture Notes in Computer Science 726, 1993. Erratum: Proceedings of the Second Annual European Symposium on Algorithms, 508, Springer-Verlag, Lecture Notes in Computer Science 855, </booktitle> <year> 1994. </year>
Reference-contexts: Now polynomial time algorithms for chordal bipartite graphs [20], multilolerance graphs [30] as well as circle and circular-arc graphs [26] are available. We claimed in <ref> [22] </ref> that the scanline approach used for designing an efficient treewidth algorithm for permutation graphs in [10] can as well be used for the minimum fill-in problem on permutation graphs and cocomparability graphs of dimension at most d (with an intersection model as part of the input) leading to O (n <p> Hence we obtain O (n 2 ) algorithms, even if no trapezoid diagram is part of the input. Furthermore we obtain an O (n 2 ) algorithm for computing the minimum fill-in of permutation graphs, as announced in <ref> [22] </ref>, since permutation graphs are a subclass of the trapezoid graphs. (Notice that the known minimum fill-in algorithm for bipartite permutation graphs of [34] has running time O (n 5 ).) Clearly our algorithms also apply to cocomparability graphs of dimension at most d if they are given with a suitable
Reference: [23] <author> T. Kloks and D. Kratsch, </author> <title> Treewidth of chordal bipartite graphs, </title> <journal> Journal of Algorithms 19, </journal> <volume> 266 281, </volume> <year> 1995. </year>
Reference-contexts: remains NP-complete on cobipartite graphs [2] and on bipartite graphs [21]. (The reader is refered to the preliminaries section for definitions.) For some special classes of graphs, it has been shown that the treewidth can be computed in polynomial time, as e.g. cographs [9], circular-arc graphs [35], chordal bipartite graphs <ref> [23] </ref>, permutation graphs [10], circle graphs [19], cocomparability graphs of bounded dimension [25], cointerval graphs [16] and d-trapezoid graphs [31]. The algorithm for d-trapezoid graphs assumes that a d-trapezoid intersection model is part of the input.
Reference: [24] <author> T. Kloks, D. Kratsch and H. M uller, </author> <title> Approximating the bandwidth of asteroidal-triple free graphs, </title> <booktitle> Proceedings of the Third Annual European Symposium on Algorithms, </booktitle> <volume> 434 447, </volume> <editor> Springer-Verlag, </editor> <booktitle> Lecture Notes in Computer Science 979, </booktitle> <year> 1995. </year>
Reference-contexts: Hence we may concentrate on designing an algorithm solving the TREEWIDTH (and hence the PATHWIDTH) problem as well as an algorithm solving the MINIMUM FILL-IN (and hence the INTERVAL GRAPH COMPLETION) problem. The following characterization of minimal triangulations has been shown in <ref> [24] </ref>. Theorem 2.3 Let H be a triangulation of G = (V; E) and let (H) be the set of minimal separators of H. Then H is a minimal triangulation of the graph G if and only if the following three conditions are satisfied: 1.
Reference: [25] <author> T. Kloks, D. Kratsch and J. Spinrad, </author> <title> On treewidth and minimum fill-in of asteroidal triple-free graphs, </title> <note> to appear in Theoretical Computer Science. </note>
Reference-contexts: reader is refered to the preliminaries section for definitions.) For some special classes of graphs, it has been shown that the treewidth can be computed in polynomial time, as e.g. cographs [9], circular-arc graphs [35], chordal bipartite graphs [23], permutation graphs [10], circle graphs [19], cocomparability graphs of bounded dimension <ref> [25] </ref>, cointerval graphs [16] and d-trapezoid graphs [31]. The algorithm for d-trapezoid graphs assumes that a d-trapezoid intersection model is part of the input. <p> On the other hand, there is an O (n 5 R + n 3 R 3 ) algorithm computing the treewidth and pathwidth of a given asteroidal triple-free graph on n vertices with R minimal separators <ref> [25] </ref>. This implies that the treewidth and the pathwidth of a d-trapezoid graph can be computed by an O (n 3d+3 ) algorithm that does not require an intersection model as part of the input. <p> Using the characterization in Lemma 2.2, one can easily identify the minimal separators of an interval graph which has been shown in <ref> [25] </ref>. Lemma 2.6 Let A 1 ; A 2 ; : : : ; A q be a consecutive clique arrangement of an interval graph G. <p> Then the minimal separators of G are the sets A i " A i+1 , i 2 f1; 2; : : : ; q 1g. For designing efficient treewidth algorithms on special graph classes, the restriction to certain types of triangulations has been used by different authors (see, e.g., <ref> [10, 21, 25, 31] </ref>). Definition 2.10 A triangulation H of a graph G is a minimal triangulation of G if no proper subgraph of H is a triangulation of G. Minimal triangulations have already been studied in [33]. Among others, the authors give the following characterization of minimal triangulations. <p> The graph obtained from G [S [ C] by making a clique of S is called the realization of B and is denoted by R (S; C). The treewidth of a graph can be computed from the treewidth of the realizations of all 1-blocks of the graph (see also <ref> [25] </ref>). Lemma 2.7 Let G = (V; E) be a graph which is not complete. <p> A similar lemma can be obtained for the minimum fill-in of a graph (see <ref> [25] </ref>). Lemma 2.8 Let G = (V; E) be a graph which is not complete. <p> Our definition of d-trapezoid graphs is a mixture of the definitions in [15, 31], chosen such that it generalizes the definition of cocomparability graphs of dimension d, given in <ref> [25] </ref>, and such that d-trapezoid graphs are exactly the cocomparability graphs of partially ordered sets of interval dimension at most d. Definition 3.1 Let d be a fixed positive integer, d 1. <p> are a subclass of the trapezoid graphs. (Notice that the known minimum fill-in algorithm for bipartite permutation graphs of [34] has running time O (n 5 ).) Clearly our algorithms also apply to cocomparability graphs of dimension at most d if they are given with a suitable intersection model (see <ref> [25] </ref>) since they are a subclass of the d-trapezoid graphs. Our algorithms for d-trapezoid graphs require an intersection model as part of the input. This is not surprising. <p> Nevertheless it has been shown that using a different approach an O (n 3d+3 ) time algorithm computing the treewidth and pathwidth for d-trapezoid graphs, d 3, can be designed that does not require an intersection model as part of the input <ref> [21, 25] </ref>.
Reference: [26] <author> T. Kloks, D. Kratsch and C.K.Wong, </author> <title> Minimum fill-in on circle and circular-arc graphs, </title> <booktitle> Proceedings of the 23 International Colloquium on Automata, Languages and Programming, </booktitle> <volume> 256 267, </volume> <editor> Springer-Verlag, </editor> <booktitle> Lecture Notes in Computer Science 1099, </booktitle> <year> 1996. </year>
Reference-contexts: Now polynomial time algorithms for chordal bipartite graphs [20], multilolerance graphs [30] as well as circle and circular-arc graphs <ref> [26] </ref> are available.
Reference: [27] <editor> J. van Leeuwen, </editor> <booktitle> Graph algorithms, Handbook of Theoretical Computer Science, A: Algorithms and Complexity Theory, </booktitle> <volume> 527 631, </volume> <publisher> North Holland Publishing Company, </publisher> <address> Amsterdam, </address> <year> 1990. </year>
Reference-contexts: One reason for this interest is that many graph problems, including many well known and important problems, become polynomial time, and usually even linear time solvable (and become member of NC), when restricted to a class of graphs with bounded tree- or pathwidth <ref> [1, 3, 4, 5, 7, 27] </ref>. In general, such algorithms need to have a tree-decomposition or path-decomposition of suitable width given together with the input graph. Hence, an important problem is to find tree-decompositions (or path-decompositions) of minimum width.
Reference: [28] <author> T.-H. Ma and J.P. Spinrad, </author> <title> An O(n 2 ) Algorithm for the 2-Chain Cover Problem and Related Problems, </title> <booktitle> Proceedings of the 2nd Symposium on Discrete Algorithms, </booktitle> <volume> 363 372, </volume> <year> 1991. </year>
Reference-contexts: Here it is used that the known O (n 2 ) recognition algorithm for trapezoid graphs, given in <ref> [28] </ref>, also computes a trapezoid diagram, if the input is indeed a trapezoid graph. 2 Preliminaries 2.1 Preliminaries on treewidth, pathwidth and minimum fill-in The concept of a chordal graph is fundamental for the treewidth and the minimum fill-in of graphs. <p> There is a linear time recognition algorithm for interval graphs computing an interval model if the input graph is an interval graph [11]. There is an O (n 2 ) recognition algorithm for trapezoid graphs computing a trapezoid model if the input graph is a trapezoid graph <ref> [28] </ref>. Moreover, Theorem 3.1 shows that for any fixed d the d-trapezoid graphs form a subclass of the cocomparability graphs. Hence the class of d-trapezoid graphs is a subclass of the asteroidal triple-free graphs for any fixed d. <p> Our algorithms are simple and efficient for small d, in particular for d = 2. The 2-trapezoid graphs are exactly the trapezoid graphs and there is an O (n 2 ) algorithm computing a trapezoid diagram for a given trapezoid graph <ref> [28] </ref>. Hence we obtain O (n 2 ) algorithms, even if no trapezoid diagram is part of the input.
Reference: [29] <author> R.H. M ohring, </author> <title> Triangulating graphs without asteroidal triples, </title> <journal> Discrete Applied Mathematics 64, </journal> <volume> 281 287, </volume> <year> 1996. </year>
Reference-contexts: Theorem 2.1 Let H be a triangulation of a graph G. Then H is a minimal triangulation of G if and only if for all edges e 2 E (H) n E (G) the graph H e is not chordal. The following theorem of M ohring, given in <ref> [29] </ref>, is important for us. Theorem 2.2 Any minimal triangulation of an asteroidal triple-free graph is an interval graph.
Reference: [30] <author> A. </author> <title> Parra, Triangulating multitolerance graphs, </title> <type> Technical Report 392=1994, </type> <address> Tech-nische Universitat Berlin, Germany, </address> <year> 1994. </year> <month> 22 </month>
Reference-contexts: The only known graph classes for which the minimum fill-in can be computed by a polynomial time algorithm were for almost ten years the relatively small classes of cographs [13] and bipartite permutation graphs [34]. Now polynomial time algorithms for chordal bipartite graphs [20], multilolerance graphs <ref> [30] </ref> as well as circle and circular-arc graphs [26] are available.
Reference: [31] <author> A. Parra and P. Scheffler, </author> <title> How to use the minimal separators of a graph for its chordal triangulation, </title> <booktitle> Proceedings of the 22nd International Colloquium on Automata, Languages and Programming, 123134, Springer-Verlag, Lecture Notes in Computer Science 944, </booktitle> <year> 1995. </year>
Reference-contexts: for definitions.) For some special classes of graphs, it has been shown that the treewidth can be computed in polynomial time, as e.g. cographs [9], circular-arc graphs [35], chordal bipartite graphs [23], permutation graphs [10], circle graphs [19], cocomparability graphs of bounded dimension [25], cointerval graphs [16] and d-trapezoid graphs <ref> [31] </ref>. The algorithm for d-trapezoid graphs assumes that a d-trapezoid intersection model is part of the input. <p> Note that the best timebound known up to now is O (max (n 2:376 d ; n 2d+2 )) <ref> [31] </ref>. On the other hand, there is an O (n 5 R + n 3 R 3 ) algorithm computing the treewidth and pathwidth of a given asteroidal triple-free graph on n vertices with R minimal separators [25]. <p> By now the best known algorithm for the minimum fill-in problem on d-trapezoid graphs with given intersection model has running time O (max (n 2:376 d ; n 2d+2 )) <ref> [31] </ref>. <p> Then the minimal separators of G are the sets A i " A i+1 , i 2 f1; 2; : : : ; q 1g. For designing efficient treewidth algorithms on special graph classes, the restriction to certain types of triangulations has been used by different authors (see, e.g., <ref> [10, 21, 25, 31] </ref>). Definition 2.10 A triangulation H of a graph G is a minimal triangulation of G if no proper subgraph of H is a triangulation of G. Minimal triangulations have already been studied in [33]. Among others, the authors give the following characterization of minimal triangulations. <p> However for various graph classes refinements of this approach lead to efficient algorithms. 6 3 The d-trapezoid graphs In this section we define d-trapezoid graphs and d-trapezoid diagrams. Our definition of d-trapezoid graphs is a mixture of the definitions in <ref> [15, 31] </ref>, chosen such that it generalizes the definition of cocomparability graphs of dimension d, given in [25], and such that d-trapezoid graphs are exactly the cocomparability graphs of partially ordered sets of interval dimension at most d. Definition 3.1 Let d be a fixed positive integer, d 1. <p> Consequently fv; wg 2 E if and only if Q v and Q w have nonempty intersection. (See Fig. 1 for an example.) Definition 3.2 A graph G is a d-trapezoid graph if it has a d-trapezoid diagram. The following theorem is a consequence of Definition 3.1 (see <ref> [15, 31] </ref>). Theorem 3.1 The d-trapezoid graphs are exactly the cocomparability graphs of partially ordered sets of interval dimension at most d. <p> Consequently, by Theorem 2.2, the treewidth and pathwidth of a d-trapezoid graph coincide, and the minimum fill-in and the minimum interval graph completion of a d-trapezoid graph coincide. The concept of a scanline is crucial to various efficient treewidth algorithms developed in the last years <ref> [10, 19, 21, 31] </ref>. <p> An O (n d ) algorithm computes the minimum fill-in and the minimum interval completion of the input graph. Both algorithms have running times that are significantly better than the best known up to know, i.e., O (max (n 2:376 d ; n 2d+2 )) <ref> [31] </ref> (giving running time O (n 6 ) for trapezoid graphs).
Reference: [32] <author> D.J. Rose, </author> <title> A graph-theoretic study of the numerical solution of sparse positive definite systems of linear equations, in: R.C. </title> <editor> Reed, (ed.); </editor> <booktitle> Graph Theory and Computing, </booktitle> <volume> 183 217, </volume> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1972. </year>
Reference-contexts: The importance of this problem lies mainly in the fact that it is equivalent to finding an order of Gaussian elimination steps of a (usually sparse) symmetric matrix, minimizing the number of generated non-zero entries <ref> [32] </ref>.
Reference: [33] <author> D.J. Rose, R.E. Tarjan and G.S. Lueker, </author> <title> Algorithmic aspects of vertex elimination on graphs, </title> <journal> SIAM Journal on Computing 5, </journal> <volume> 266 283, </volume> <year> 1976. </year>
Reference-contexts: Definition 2.10 A triangulation H of a graph G is a minimal triangulation of G if no proper subgraph of H is a triangulation of G. Minimal triangulations have already been studied in <ref> [33] </ref>. Among others, the authors give the following characterization of minimal triangulations. Theorem 2.1 Let H be a triangulation of a graph G.
Reference: [34] <author> J. Spinrad, A. Brandstadt and L. Stewart, </author> <title> Bipartite permutation graphs, </title> <journal> Discrete Applied Mathematics 18, </journal> <volume> 279 292, </volume> <year> 1987. </year>
Reference-contexts: The only known graph classes for which the minimum fill-in can be computed by a polynomial time algorithm were for almost ten years the relatively small classes of cographs [13] and bipartite permutation graphs <ref> [34] </ref>. Now polynomial time algorithms for chordal bipartite graphs [20], multilolerance graphs [30] as well as circle and circular-arc graphs [26] are available. <p> Furthermore we obtain an O (n 2 ) algorithm for computing the minimum fill-in of permutation graphs, as announced in [22], since permutation graphs are a subclass of the trapezoid graphs. (Notice that the known minimum fill-in algorithm for bipartite permutation graphs of <ref> [34] </ref> has running time O (n 5 ).) Clearly our algorithms also apply to cocomparability graphs of dimension at most d if they are given with a suitable intersection model (see [25]) since they are a subclass of the d-trapezoid graphs.
Reference: [35] <author> R. Sundaram, K. Sher Singh and C. Pandu Rangan, </author> <title> Treewidth of circular arc graphs, </title> <journal> SIAM Journal on Discrete Mathematics 7, </journal> <volume> 647 655, </volume> <year> 1994. </year>
Reference-contexts: is at most k' remains NP-complete on cobipartite graphs [2] and on bipartite graphs [21]. (The reader is refered to the preliminaries section for definitions.) For some special classes of graphs, it has been shown that the treewidth can be computed in polynomial time, as e.g. cographs [9], circular-arc graphs <ref> [35] </ref>, chordal bipartite graphs [23], permutation graphs [10], circle graphs [19], cocomparability graphs of bounded dimension [25], cointerval graphs [16] and d-trapezoid graphs [31]. The algorithm for d-trapezoid graphs assumes that a d-trapezoid intersection model is part of the input.
Reference: [36] <author> R.E. Tarjan, </author> <title> Decomposition by clique separators, </title> <journal> Discrete Mathematics 55, </journal> <volume> 221 232, </volume> <year> 1985. </year>
Reference-contexts: The problem `Given a graph G and a positive integer k, decide whether there is a fill-in of G with at most k edges' remains NP-complete on cobipartite graphs [38] and on bipartite graphs <ref> [36] </ref>. The only known graph classes for which the minimum fill-in can be computed by a polynomial time algorithm were for almost ten years the relatively small classes of cographs [13] and bipartite permutation graphs [34].
Reference: [37] <author> M. Yannakakis, </author> <title> The complexity of the partial order dimension problem, </title> <journal> SIAM Journal on Algebraic and Discrete Methods 3, </journal> <volume> 351 358, </volume> <year> 1982. </year>
Reference-contexts: Theorem 3.1 The d-trapezoid graphs are exactly the cocomparability graphs of partially ordered sets of interval dimension at most d. Unfortunately, the problem `Given a partially ordered set P , decide whether the interval dimension of P is at most d' is NP-complete for any fixed d 3 <ref> [37] </ref>. Hence for fixed d 3, computing a d-trapezoid diagram of the given graph, if it is indeed a d-trapezoid graph, means solving an NP-complete problem. Moreover, at the present not even reasonable approximation algorithms for the interval dimension of a partially ordered set are known. <p> On one hand, all four problems that we considered are NP-complete on cocomparability graphs [2, 38], hence there is no polynomial time algorithm for d-trapezoid graphs if the parameter d is unbounded, unless P=NP. On the other hand, the recognition problem for d-trapezoid graphs, d 3, is NP-complete <ref> [37] </ref>. Nevertheless it has been shown that using a different approach an O (n 3d+3 ) time algorithm computing the treewidth and pathwidth for d-trapezoid graphs, d 3, can be designed that does not require an intersection model as part of the input [21, 25].
Reference: [38] <author> M. Yannakakis, </author> <title> Computing the minimum fill-in is NP-complete, </title> <journal> SIAM Journal on Algebraic and Discrete Methods 2, </journal> <volume> 77 79, </volume> <year> 1981. </year> <month> 23 </month>
Reference-contexts: The problem `Given a graph G and a positive integer k, decide whether there is a fill-in of G with at most k edges' remains NP-complete on cobipartite graphs <ref> [38] </ref> and on bipartite graphs [36]. The only known graph classes for which the minimum fill-in can be computed by a polynomial time algorithm were for almost ten years the relatively small classes of cographs [13] and bipartite permutation graphs [34]. <p> Our algorithms for d-trapezoid graphs require an intersection model as part of the input. This is not surprising. On one hand, all four problems that we considered are NP-complete on cocomparability graphs <ref> [2, 38] </ref>, hence there is no polynomial time algorithm for d-trapezoid graphs if the parameter d is unbounded, unless P=NP. On the other hand, the recognition problem for d-trapezoid graphs, d 3, is NP-complete [37].
References-found: 38

