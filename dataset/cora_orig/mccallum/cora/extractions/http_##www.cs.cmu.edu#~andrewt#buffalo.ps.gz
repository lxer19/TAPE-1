URL: http://www.cs.cmu.edu/~andrewt/buffalo.ps.gz
Refering-URL: http://www.cs.cmu.edu/~andrewt/papers.html
Root-URL: 
Email: dpl@mitl.com andrewt@mitl.com  
Title: Approximate Matching of Hand-Drawn Pictograms  
Author: Daniel P. Lopresti Andrew Tomkins 
Address: 182 Nassau Street Princeton, NJ 08542-7072 USA  
Affiliation: Matsushita Information Technology Laboratory  
Abstract: We describe a new naming paradigm for pen-based computing which we call Pictographic Naming. Using our approach, traditional character-by-character handwriting recognition (HWX) is avoided. Instead, we use a combination of user interface conventions and approximate matching techniques. Since pictographic names incorporate pen-stroke data, they can never be reproduced exactly, so name lookup becomes a small-dictionary recognition problem. We give efficient algorithms for this problem, and show that we can accurately look up handwritten names in English and Japanese over a reasonably sized dictionary. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Chimnoy B. Bose and Shyh-shiaw Kuo. </author> <title> Connected and degraded text recognition using Hidden Markov Model. </title> <booktitle> In International Conference on Pattern Recognition, </booktitle> <address> pages B-116 - B-119, </address> <month> August - September </month> <year> 1992. </year>
Reference-contexts: For brevity, we omit a detailed description here, but an introduction to HMM's in general can be found in [4], and a more complete description of our algorithms appears in [3]. Related work using HMM's for text recognition can be found in <ref> [1] </ref> and [2]. In this section we discuss HMM's informally and show how they can be used to solve the matching problem. In Section 6 we give detailed results for HMM's and others algorithms over several databases of English and Japanese script. Consider again the browser shown in Figure 3.
Reference: [2] <author> Jonathan J. Hull. </author> <title> A Hidden Markov Model for language syntax in text recognition. </title> <booktitle> In International Conference on Pattern Recognition, </booktitle> <address> pages B-124 - B-127, </address> <month> August - September </month> <year> 1992. </year>
Reference-contexts: For brevity, we omit a detailed description here, but an introduction to HMM's in general can be found in [4], and a more complete description of our algorithms appears in [3]. Related work using HMM's for text recognition can be found in [1] and <ref> [2] </ref>. In this section we discuss HMM's informally and show how they can be used to solve the matching problem. In Section 6 we give detailed results for HMM's and others algorithms over several databases of English and Japanese script. Consider again the browser shown in Figure 3.
Reference: [3] <author> Daniel P. Lopresti and Andrew Tomkins. </author> <title> Applications of Hidden Markov Models to pen-based computing. </title> <type> Technical Report MITL-TR-32-92, </type> <institution> Matsushita Information Technology Laboratory, </institution> <year> 1992. </year>
Reference-contexts: For brevity, we omit a detailed description here, but an introduction to HMM's in general can be found in [4], and a more complete description of our algorithms appears in <ref> [3] </ref>. Related work using HMM's for text recognition can be found in [1] and [2]. In this section we discuss HMM's informally and show how they can be used to solve the matching problem.
Reference: [4] <author> L.R. Rabiner and B.H. Juang. </author> <title> An introduction to Hidden Markov Models. </title> <journal> IEEE ASSP Magazine January, </journal> <pages> pages 4-16, </pages> <year> 1986. </year>
Reference-contexts: For brevity, we omit a detailed description here, but an introduction to HMM's in general can be found in <ref> [4] </ref>, and a more complete description of our algorithms appears in [3]. Related work using HMM's for text recognition can be found in [1] and [2]. In this section we discuss HMM's informally and show how they can be used to solve the matching problem.
Reference: [5] <author> Dean Rubine. </author> <title> The Automatic Recognition of Gestures. </title> <type> PhD thesis, </type> <institution> School of Computer Science, Carnegie Mellon University, </institution> <year> 1991. </year>
Reference-contexts: it seems natural to investigate faster approaches that can be used in conjunction with HMM's For a detailed discussion of the accuracy of HMM's, please refer to Section 6. 4 Discriminants We turn now to a much simpler set of techniques, which we call discriminants, similar to the features of <ref> [5] </ref>. We have found that, while extremely simple to compute, discriminants alone cannot provide an effective solution to the matching problem (see Section 6). In the following section, we show how discriminants can be combined with HMM's in a hybrid scheme to retain key advantages of both.
Reference: [6] <author> Charles C. Tappert, Ching Y. Suen, and Toru Wakahara. </author> <title> The state of the art in on-line handwriting recognition. </title> <journal> IEEE Transaction on Pattern Analysis and Machine Intelligence, </journal> <volume> Volume 12, No. 8 </volume> <pages> 179-190, </pages> <month> August, </month> <year> 1990. </year>
Reference-contexts: If the combiner function is not COMBINE, we give that also. 4.1 Definitions Downstrokes: The downstroke extraction function counts the number of downstrokes in a picture. There are indications that information in English script exists primarily in the downstrokes <ref> [6] </ref>, with the rest of the script essentially providing connectives. We make the trivial observation that an English word drawn many times will always tend to have a similar number of downstrokes.
References-found: 6

