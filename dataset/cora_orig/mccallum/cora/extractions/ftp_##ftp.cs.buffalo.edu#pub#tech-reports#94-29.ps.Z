URL: ftp://ftp.cs.buffalo.edu/pub/tech-reports/94-29.ps.Z
Refering-URL: ftp://ftp.cs.buffalo.edu/pub/tech-reports/README.html
Root-URL: 
Email: Email: regan@cs.buffalo.edu,  
Phone: tel.: (716) 645-3189, fax: (716) 645-3464.  
Title: Index Sets and Presentations of Complexity Classes (revised version)  
Author: Kenneth W. Regan 
Address: 1 Author's current address:  Hall, UB North Campus, Buffalo, NY 14260-2000.  
Affiliation: State University of New York at Buffalo  Computer Science Department, 226 Bell  
Abstract-found: 0
Intro-found: 1
Reference: [AFH87] <author> K. Ambos-Spies, H. Fleischhack, and H. Huwig. </author> <title> Diagonalizations over polynomial computable sets. </title> <journal> Theor. Comp. Sci., </journal> <volume> 51 </volume> <pages> 177-204, </pages> <year> 1987. </year>
Reference-contexts: Section 5 presents a new and useful technique for proving that certain classes C are not recursively presentable. It defines a natural algorithmic mechanism for what we call "diagonalization by rote," and gives a detailed comparison to diagonalization methods formulated by Ambos-Spies, Fleischhack, and Huwig <ref> [AFH87, AFH88] </ref>. Both the mechanism and its relation to non-r.p. classes appear to have applications beyond the results in this paper. Section 6 considers provability in certain formal systems, studied by Lipton and DeMillo [Lip78, DL80] and Leivant [Lei82], that are not recursively axiomatizable.
Reference: [AFH88] <author> K. Ambos-Spies, H. Fleischhack, and H. Huwig. </author> <title> Diagonalizing over deterministic polynomial time. </title> <booktitle> In Proc. 1st Workshop on Computer Science Logic, volume 329 of Lect. Notes in Comp. Sci., </booktitle> <pages> pages 1-16. </pages> <publisher> Springer Verlag, </publisher> <year> 1988. </year> <note> A full version is Forschungs-bericht Nr. 1/88, </note> <institution> Fachbereich Informatik der Universitat Oldenburg. </institution>
Reference-contexts: Section 5 presents a new and useful technique for proving that certain classes C are not recursively presentable. It defines a natural algorithmic mechanism for what we call "diagonalization by rote," and gives a detailed comparison to diagonalization methods formulated by Ambos-Spies, Fleischhack, and Huwig <ref> [AFH87, AFH88] </ref>. Both the mechanism and its relation to non-r.p. classes appear to have applications beyond the results in this paper. Section 6 considers provability in certain formal systems, studied by Lipton and DeMillo [Lip78, DL80] and Leivant [Lei82], that are not recursively axiomatizable. <p> satisfied at some stage s remains satisfied at all stages s 0 &gt; s. 10 We define a particular kind of argument that we call "diagonalization by rote." This is related to, but different from, the formulations of P-1 , P-2 , and P-3 diagonalizations by Ambos-Spies, Fleischhack, and Huwig <ref> [AFH88] </ref>. The argument is divided into stages so that at the end of each stage s, the membership or non-membership in L of each of the first s strings in fl is determined. <p> Lemma 5.1 Given any unbounded monotone computable function f , one can construct an unbounded, monotone h in linear time and log space such that for all s 2 N + , h (s) f (s). The closest comparison is with the notion of P-2 diagonalization in <ref> [AFH88] </ref>. A P-2 diag-onalization is defined by a recursive language U that presents some subclass of P (i.e. for all e, U e 2 P). <p> The point of these remarks is that rote-priority is more-widely applicable than P-2 diagonal-ization, and whereas the implication (4) is ineffective, Definition 5.1 brings out the algorithmic content. P-1 diagonalization in <ref> [AFH88] </ref> maps into the special case of rote-priority where S (e; ff) has the extension property and depends on only one bit of ff. <p> The problem is that k (e) need not be bounded by any fixed constant, and indeed <ref> [AFH88] </ref> shows that whenever U presents all of P no language with the P-2 -enforced property belongs to EXPTIME. In the examples that follow, however, not all of the bits of ff need to be examined, and we can meet the following time bounds. <p> 0; 1 g n ) [S (e; ff0) _ S (e; ff1)] in this zero-injury setting, so that the requirement for f e eventually receives attention and is satisfied. 15 Strong P-biimmunity is not enforcible by a P-1 diagonalization, since P-biimmunity is shown to be the strongest such property in <ref> [AFH88] </ref>. Here, computing S (e; ff) requires examining at least two bits of ff rather than one, and the time is jffj 2 (log jffj) e . Lemma 5.3 still applies, so the "rote" strongly P-biimmune sets do belong to EXPTIME. However, [AFH88] shows that there is a strongest property that <p> shown to be the strongest such property in <ref> [AFH88] </ref>. Here, computing S (e; ff) requires examining at least two bits of ff rather than one, and the time is jffj 2 (log jffj) e . Lemma 5.3 still applies, so the "rote" strongly P-biimmune sets do belong to EXPTIME. However, [AFH88] shows that there is a strongest property that is enforcible by P-2 diagonalization, and that no language in EXPTIME has this . 5.2 Rote-priority classes are not r.p. <p> Section 6 may prompt further investigation of the theory T 2 . Theorem 5.4 makes a contribution in this direction: no recursively presentable property can be enforced by a rote-priority argument. The rote-priority mechanism deserves attention in its own right, in light of recent interest in <ref> [AFH88] </ref> and concepts important to [Lut92, Lut93, AS94, BT94]. We look forward to further work on the formal difficulty of complexity-theoretic arguments. Acknowledgments All of this research except Section 5 was conducted while I was at Merton College, Oxford University, as a student and then a Junior Fellow.
Reference: [AS94] <author> E. Allender and M. Strauss. </author> <title> Measure on small complexity classes, with applications for BPP. </title> <type> Technical Report DIMACS TR 94-18, </type> <institution> Rutgers University and DIMACS, </institution> <year> 1994. </year> <note> To appear in the proceedings of FOCS'94. </note>
Reference-contexts: For simplicity we do not do so here (but cf. [BT94]). Our formalism seems well suited for analyzing problems about "martingale" functions defined on characteristic prefixes and "word-decreasing self reducible sets" raised in recent work; see <ref> [Lut92, Lut93, AS94] </ref>. Our scheme also makes it easier to analyze time bounds. <p> Theorem 5.4 makes a contribution in this direction: no recursively presentable property can be enforced by a rote-priority argument. The rote-priority mechanism deserves attention in its own right, in light of recent interest in [AFH88] and concepts important to <ref> [Lut92, Lut93, AS94, BT94] </ref>. We look forward to further work on the formal difficulty of complexity-theoretic arguments. Acknowledgments All of this research except Section 5 was conducted while I was at Merton College, Oxford University, as a student and then a Junior Fellow.
Reference: [Bak79] <author> T. Baker. </author> <title> On `provable' analogs of P and NP. </title> <journal> Math. Sys. Thy., </journal> <volume> 12 </volume> <pages> 213-218, </pages> <year> 1979. </year>
Reference-contexts: Nevertheless, we can say that membership in P is a provable property (cf. <ref> [Bak79] </ref>), on account of the provable representation 3 .
Reference: [BH77] <author> L. Berman and J. Hartmanis. </author> <title> On isomorphisms and density of NP and other complete sets. </title> <journal> SIAM J. Comput., </journal> <volume> 6 </volume> <pages> 305-321, </pages> <year> 1977. </year>
Reference-contexts: By Lemma 5.3, the property of P-biimunity within EXPTIME is also enforcible by rote zero-injury priority. Example 5.4. Strong P-biimmunity: A language A is strongly P-biimmune ([BS85]; see also <ref> [BH77] </ref> and "incompressible" in [Lut93]) if for every polynomial-time computable function f , either f is 1-1 a.e. or there exist strings x; y such that x 2 A, y =2 A, and f (x) = f (y).
Reference: [BJ74] <author> G. Boolos and R. Jeffrey. </author> <title> Computability and Logic. </title> <publisher> Cambridge University Press, </publisher> <year> 1974. </year> <month> 22 </month>
Reference-contexts: k denotes the set of pure Q k -sentences over L A that are true in the standard model of arithmetic. (b) Q is the theory over L A whose axioms are those of Peano Arithmetic minus the induction schema, but including `(8n)[n 6= 0 ! (9m)(n = m+1)]' (see <ref> [BJ74] </ref>). (c) T 2 is the theory obtained by adding A 2 to the axioms of Q. The analogous collections of true pure P k -sentences are called `V k ' in [Rog67].
Reference: [BS85] <author> J. Balcazar and U. Schoning. </author> <title> Bi-immune sets for complexity classes. </title> <journal> Math. Sys. Thy., </journal> <volume> 18 </volume> <pages> 1-10, </pages> <year> 1985. </year>
Reference-contexts: Earlier versions of the results in sections 2-4 and 6 appeared in the conference paper [Reg84], and in the dissertation [Reg86]. The results in section 5 are new, and solve open problems in <ref> [BS85, Reg88] </ref>. 2 Notation and Basic Results Turing machines in this paper will use alphabet = f 0; 1 g. For each x 2 fl define num (x) to be the natural number having binary representation 1x.
Reference: [BT94] <author> H. Buhrman and L. Torenvliet. </author> <title> On the cutting edge of relativization: the resource-bounded injury method. </title> <booktitle> In Proc. 21st Annual International Conference on Automata, Languages, and Programming, Lect. Notes in Comp. </booktitle> <publisher> Sci. Springer Verlag, </publisher> <year> 1994. </year> <note> to appear. </note>
Reference-contexts: For simplicity we do not do so here (but cf. <ref> [BT94] </ref>). Our formalism seems well suited for analyzing problems about "martingale" functions defined on characteristic prefixes and "word-decreasing self reducible sets" raised in recent work; see [Lut92, Lut93, AS94]. Our scheme also makes it easier to analyze time bounds. <p> Theorem 5.4 makes a contribution in this direction: no recursively presentable property can be enforced by a rote-priority argument. The rote-priority mechanism deserves attention in its own right, in light of recent interest in [AFH88] and concepts important to <ref> [Lut92, Lut93, AS94, BT94] </ref>. We look forward to further work on the formal difficulty of complexity-theoretic arguments. Acknowledgments All of this research except Section 5 was conducted while I was at Merton College, Oxford University, as a student and then a Junior Fellow.
Reference: [CM81] <author> P. Chew and M. Machtey. </author> <title> A note on structure and looking-back applied to the relative complexity of computable functions. </title> <journal> J. Comp. Sys. Sci., </journal> <volume> 22 </volume> <pages> 53-59, </pages> <year> 1981. </year>
Reference: [DL80] <author> R. DeMillo and R. Lipton. </author> <title> The consistency of "P=NP" and related problems with fragments of number theory. </title> <booktitle> In Proc. 12th Annual ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 45-57, </pages> <year> 1980. </year>
Reference-contexts: Both the mechanism and its relation to non-r.p. classes appear to have applications beyond the results in this paper. Section 6 considers provability in certain formal systems, studied by Lipton and DeMillo <ref> [Lip78, DL80] </ref> and Leivant [Lei82], that are not recursively axiomatizable. It concludes with the speculative possibility that certain proofs of I C =2 P 0 help to solve major open problems in complexity theory. <p> T 2 is a superset of several theories studied in the literature, including 17 Basic Number Theory as described by Lipton and DeMillo <ref> [Lip78, DL80] </ref>. This is interesting because of the contention by the authors of these papers, rebutted in [Lei82] and [JY85], that all constructive methods that computer scientists would ever use are formalizable in this theory. Before defining T 2 , we note some technical aspects of formalizing predicates in arithmetic.
Reference: [FOL83] <author> S. Fortune, M. O'Donnell, and D. Leivant. </author> <title> The expressiveness of simple and second-order type structures. </title> <journal> J. ACM, </journal> <volume> 30 </volume> <pages> 151-185, </pages> <year> 1983. </year>
Reference-contexts: Homer and Reif [HR86] studied the analogously-defined theory with V 2 as axiom set; for similar reasons, they could just as well have taken A 1 as the axiom set, giving the same theory studied by O'Donnell et al. <ref> [O'D79, FOL83, KOR87] </ref>. T 2 is weaker than full Peano Arithmetic in that the PA induction schema ( (0) ^ (8n)[ (n) ! (n+1)]) ! (8n) (n) is a true P 3 -sentence generally only when (n) is a Q 2 -sentence.
Reference: [Haj79] <author> P. Hajek. </author> <title> Arithmetical hierarchy and complexity of computation. </title> <journal> Theor. Comp. Sci., </journal> <volume> 8 </volume> <pages> 227-237, </pages> <year> 1979. </year>
Reference-contexts: 1 Introduction This paper extends work by Hajek <ref> [Haj79] </ref>, who analyzed complexity classes in terms of their definitions in the familiar first-order language L A of arithmetic. Finite "names" for r.e. languages are obtained by fixing a standard effective enumeration M 1 ; M 2 ; M 3 ; : : : of Turing machine acceptors. <p> In particular, I P is P 0 3 -complete <ref> [Haj79] </ref>, as are the full index sets of NP, PSPACE, EXPTIME, and so on. The condition C REC is needed because e.g. taking C = RE n P gives I C 2 Q 0 3 , so I C cannot be P 0 3 -hard with respect to m . <p> But by hypothesis, U hk;ai belongs to C anyway. This proves the claim, giving C = f U ` g. While every r.p. class is bounded, there do exist nontrivial unbounded classes C that have J C 2 2 . Two examples, the former shown in <ref> [Haj79] </ref> and the latter in [Reg88], are EQ := f A 2 REC : NP A = P A g; and the "upper cone" f L 2 REC : A p m L g of any fixed recursive language A, where p m stands for polynomial-time many-one reducibility.
Reference: [HR86] <author> S. Homer and J. Reif. </author> <title> Arithmetic theories for computational complexity problems. </title> <journal> Inform. and Control, </journal> <volume> 69 </volume> <pages> 1-11, </pages> <year> 1986. </year>
Reference-contexts: In fact, T 2 has all true P 3 -sentences as theorems, since (9n) (n) logically follows from (n 0 ) for some fixed n 0 that makes (n 0 ) true. Homer and Reif <ref> [HR86] </ref> studied the analogously-defined theory with V 2 as axiom set; for similar reasons, they could just as well have taken A 1 as the axiom set, giving the same theory studied by O'Donnell et al. [O'D79, FOL83, KOR87].
Reference: [JY85] <author> D. Joseph and P. Young. </author> <title> A survey of some recent results on computational complexity in weak theories of arithmetic. </title> <journal> Fundamenta Informatica, </journal> <volume> 8 </volume> <pages> 104-121, </pages> <year> 1985. </year>
Reference-contexts: T 2 is a superset of several theories studied in the literature, including 17 Basic Number Theory as described by Lipton and DeMillo [Lip78, DL80]. This is interesting because of the contention by the authors of these papers, rebutted in [Lei82] and <ref> [JY85] </ref>, that all constructive methods that computer scientists would ever use are formalizable in this theory. Before defining T 2 , we note some technical aspects of formalizing predicates in arithmetic. The following should be contrasted with Definition 2.1. Definition 6.1.
Reference: [Kle43] <author> S. Kleene. </author> <title> Recursive predicates and quantifiers. </title> <journal> Trans. AMS, </journal> <volume> 53 </volume> <pages> 41-73, </pages> <year> 1943. </year>
Reference-contexts: P 0 0 -predicate or Q 0 0 -predicate is the same as a decidable predicate. For every P 0 k -predicate P , its negation :P is a Q 0 k -predicate, and L :P = ~L P . Definition 2.2. (after Kleene <ref> [Kle43] </ref>): For all k 0, P 0 k denotes the class of languages defined by k -predicates, Q 0 k the class of languages defined by Q 0 k -predicates, and 0 k stands for P 0 Q 0 P 0 Q 0 0 are all synonyms for REC. <p> Taken together, these classes form the levels of the arithmetical hierarchy, and we set AH = [ 1 k=0 k . What is sometimes called the weak hierarchy theorem of Kleene <ref> [Kle43] </ref> shows that the above classes defined by quantifiers are the same as those defined by oracles: for all k 1, P 0 P 0 and 0 P 0 k1 . In particular, 0 1 also equals REC, P 0 P 0 2 = RE RE .
Reference: [Ko89] <author> K. Ko. </author> <title> Relativized polynomial time hierarchies having exactly k levels. </title> <journal> SIAM J. Com-put., </journal> <volume> 18 </volume> <pages> 392-408, </pages> <year> 1989. </year>
Reference-contexts: Since PSPACE PSPACE A for all A, this would cast more light on the construction by Ko <ref> [Ko89] </ref> of an oracle set A such that P A = NP A 6= PSPACE A . 7 Conclusion and Prospects It is a truism to say that the easiest concepts to study are those with the simplest definitions.
Reference: [KOR87] <author> S. Kurtz, M. O'Donnell, and J. Royer. </author> <title> How to prove representation-independent independence results. </title> <journal> Inf. Proc. Lett., </journal> <volume> 24 </volume> <pages> 5-10, </pages> <year> 1987. </year>
Reference-contexts: Homer and Reif [HR86] studied the analogously-defined theory with V 2 as axiom set; for similar reasons, they could just as well have taken A 1 as the axiom set, giving the same theory studied by O'Donnell et al. <ref> [O'D79, FOL83, KOR87] </ref>. T 2 is weaker than full Peano Arithmetic in that the PA induction schema ( (0) ^ (8n)[ (n) ! (n+1)]) ! (8n) (n) is a true P 3 -sentence generally only when (n) is a Q 2 -sentence.
Reference: [Lei82] <author> D. Leivant. </author> <title> Unprovability of theorems of complexity theory in weak number theories. </title> <journal> Theor. Comp. Sci., </journal> <volume> 18 </volume> <pages> 259-268, </pages> <year> 1982. </year>
Reference-contexts: Both the mechanism and its relation to non-r.p. classes appear to have applications beyond the results in this paper. Section 6 considers provability in certain formal systems, studied by Lipton and DeMillo [Lip78, DL80] and Leivant <ref> [Lei82] </ref>, that are not recursively axiomatizable. It concludes with the speculative possibility that certain proofs of I C =2 P 0 help to solve major open problems in complexity theory. <p> T 2 is a superset of several theories studied in the literature, including 17 Basic Number Theory as described by Lipton and DeMillo [Lip78, DL80]. This is interesting because of the contention by the authors of these papers, rebutted in <ref> [Lei82] </ref> and [JY85], that all constructive methods that computer scientists would ever use are formalizable in this theory. Before defining T 2 , we note some technical aspects of formalizing predicates in arithmetic. The following should be contrasted with Definition 2.1. Definition 6.1.
Reference: [Lip78] <author> R. Lipton. </author> <title> Model-theoretic aspects of computational complexity. </title> <booktitle> In Proc. 19th Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 191-200, </pages> <year> 1978. </year>
Reference-contexts: Both the mechanism and its relation to non-r.p. classes appear to have applications beyond the results in this paper. Section 6 considers provability in certain formal systems, studied by Lipton and DeMillo <ref> [Lip78, DL80] </ref> and Leivant [Lei82], that are not recursively axiomatizable. It concludes with the speculative possibility that certain proofs of I C =2 P 0 help to solve major open problems in complexity theory. <p> T 2 is a superset of several theories studied in the literature, including 17 Basic Number Theory as described by Lipton and DeMillo <ref> [Lip78, DL80] </ref>. This is interesting because of the contention by the authors of these papers, rebutted in [Lei82] and [JY85], that all constructive methods that computer scientists would ever use are formalizable in this theory. Before defining T 2 , we note some technical aspects of formalizing predicates in arithmetic.
Reference: [LLR81] <author> L. Landweber, R. Lipton, and E. Robertson. </author> <title> On the structure of sets in NP and other complexity classes. </title> <journal> Theor. Comp. Sci., </journal> <volume> 15 </volume> <pages> 181-200, </pages> <year> 1981. </year>
Reference: [LR72] <author> L. Landweber and E. Robertson. </author> <title> Recursive properties of abstract complexity classes. </title> <journal> J. ACM, </journal> <volume> 19 </volume> <pages> 286-308, </pages> <year> 1972. </year>
Reference-contexts: We do not know how far the other condition, namely that C be scfv, may be weakened. Landweber and Robertson <ref> [LR72] </ref> showed that it is needed in another situation: whereas C " D is r.p. whenever C and D are r.p. and C " D is scfv, they give r.p. classes C; D such that C " D is nonempty and not even r.e.-presentable. (Note: their use of the term "recursively
Reference: [Lut92] <author> J. Lutz. </author> <title> Almost everywhere high nonuniform complexity. </title> <journal> J. Comp. Sys. Sci., </journal> <volume> 44 </volume> <pages> 220-258, </pages> <year> 1992. </year>
Reference-contexts: For simplicity we do not do so here (but cf. [BT94]). Our formalism seems well suited for analyzing problems about "martingale" functions defined on characteristic prefixes and "word-decreasing self reducible sets" raised in recent work; see <ref> [Lut92, Lut93, AS94] </ref>. Our scheme also makes it easier to analyze time bounds. <p> Theorem 5.4 makes a contribution in this direction: no recursively presentable property can be enforced by a rote-priority argument. The rote-priority mechanism deserves attention in its own right, in light of recent interest in [AFH88] and concepts important to <ref> [Lut92, Lut93, AS94, BT94] </ref>. We look forward to further work on the formal difficulty of complexity-theoretic arguments. Acknowledgments All of this research except Section 5 was conducted while I was at Merton College, Oxford University, as a student and then a Junior Fellow.
Reference: [Lut93] <author> J. Lutz. </author> <title> The quantitative structure of exponential time. </title> <booktitle> In Proc. 8th Annual IEEE Conference on Structure in Complexity Theory, </booktitle> <pages> pages 158-175, </pages> <year> 1993. </year>
Reference-contexts: For simplicity we do not do so here (but cf. [BT94]). Our formalism seems well suited for analyzing problems about "martingale" functions defined on characteristic prefixes and "word-decreasing self reducible sets" raised in recent work; see <ref> [Lut92, Lut93, AS94] </ref>. Our scheme also makes it easier to analyze time bounds. <p> By Lemma 5.3, the property of P-biimunity within EXPTIME is also enforcible by rote zero-injury priority. Example 5.4. Strong P-biimmunity: A language A is strongly P-biimmune ([BS85]; see also [BH77] and "incompressible" in <ref> [Lut93] </ref>) if for every polynomial-time computable function f , either f is 1-1 a.e. or there exist strings x; y such that x 2 A, y =2 A, and f (x) = f (y). <p> Theorem 5.4 makes a contribution in this direction: no recursively presentable property can be enforced by a rote-priority argument. The rote-priority mechanism deserves attention in its own right, in light of recent interest in [AFH88] and concepts important to <ref> [Lut92, Lut93, AS94, BT94] </ref>. We look forward to further work on the formal difficulty of complexity-theoretic arguments. Acknowledgments All of this research except Section 5 was conducted while I was at Merton College, Oxford University, as a student and then a Junior Fellow.
Reference: [Mat73] <author> Y. Matijasevic. </author> <title> On recursive unsolvability of Hilbert's tenth problem. </title> <editor> In L. Henkin, A. Joja, G. Moisil, and P. Suppes, editors, </editor> <booktitle> Logic, Methodology, and Philosophy of Science IV. </booktitle> <publisher> North-Holland, </publisher> <year> 1973. </year>
Reference-contexts: If is allowed to contain bounded quantifiers of the form (9y &lt; t) or (8y &lt; t) where t is an arithmetical term, then it is customary to call a 0 -formula and a P 0 k -formula. The Matijasevic-Robinson-Davis-Putnam Theorem (see <ref> [Mat73, MR75, Smo91] </ref>) implies that for every r.e. language L there is a pure P 1 -formula such that L = L (), in fact where has the form p (x; y 1 ; y 2 ; : : : ; y 12 ) = 0 for some polynomial p in
Reference: [MR75] <author> Y. Matijasevic and J. Robinson. </author> <title> Reduction of an arbitrary Diophantine equation to one in 13 unknowns. </title> <journal> Acta Arithmetica, </journal> <volume> 27 </volume> <pages> 521-553, </pages> <year> 1975. </year>
Reference-contexts: If is allowed to contain bounded quantifiers of the form (9y &lt; t) or (8y &lt; t) where t is an arithmetical term, then it is customary to call a 0 -formula and a P 0 k -formula. The Matijasevic-Robinson-Davis-Putnam Theorem (see <ref> [Mat73, MR75, Smo91] </ref>) implies that for every r.e. language L there is a pure P 1 -formula such that L = L (), in fact where has the form p (x; y 1 ; y 2 ; : : : ; y 12 ) = 0 for some polynomial p in
Reference: [MY78] <author> M. Machtey and P. Young. </author> <title> An Introduction to the General theory of Algorithms. </title> <publisher> North-Holland, </publisher> <address> New York, </address> <year> 1978. </year>
Reference-contexts: Then such a provable representation can be found iff C has a recursive universal language. Thus the question becomes: Which classes are recursively presentable? Which are r.e.-presentable? In terms of Machtey and Young <ref> [MY78] </ref>, which classes have effective programming systems? What this paper does is supply new techniques for answering these questions, by going back to two particular index sets associated to C: the full index set I C = f i : L (M i ) 2 C g, and the "J index
Reference: [NW88] <author> N. Nisan and A. Wigderson. </author> <title> Hardness vs. randomness. </title> <booktitle> In Proc. 29th Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 2-11, </pages> <year> 1988. </year>
Reference-contexts: We actually conjecture that H = PH, which is rendered more plausible but not proven by the result of Nisan and Wigderson <ref> [NW88] </ref> that for any L =2 PH, the class of oracles A putting L 2 PH A has measure zero.
Reference: [O'D79] <author> M. O'Donnell. </author> <title> A programming language theorem which is independent of Peano arithmetic. </title> <booktitle> In Proc. 11th Annual ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 176-188, </pages> <year> 1979. </year>
Reference-contexts: Homer and Reif [HR86] studied the analogously-defined theory with V 2 as axiom set; for similar reasons, they could just as well have taken A 1 as the axiom set, giving the same theory studied by O'Donnell et al. <ref> [O'D79, FOL83, KOR87] </ref>. T 2 is weaker than full Peano Arithmetic in that the PA induction schema ( (0) ^ (8n)[ (n) ! (n+1)]) ! (8n) (n) is a true P 3 -sentence generally only when (n) is a Q 2 -sentence.
Reference: [Reg84] <author> K. Regan. </author> <title> Arithmetical degrees of index sets for complexity classes. </title> <booktitle> In Proceedings, Logic and Machines, </booktitle> <address> Munster, Germany, </address> <month> May </month> <year> 1983, </year> <booktitle> volume 171 of Lect. Notes in Comp. Sci., </booktitle> <pages> pages 118-130. </pages> <publisher> Springer Verlag, </publisher> <year> 1984. </year>
Reference-contexts: It concludes with the speculative possibility that certain proofs of I C =2 P 0 help to solve major open problems in complexity theory. Earlier versions of the results in sections 2-4 and 6 appeared in the conference paper <ref> [Reg84] </ref>, and in the dissertation [Reg86]. The results in section 5 are new, and solve open problems in [BS85, Reg88]. 2 Notation and Basic Results Turing machines in this paper will use alphabet = f 0; 1 g.
Reference: [Reg86] <author> K. Regan. </author> <title> On the Separation of Complexity Classes, 1986. Dissertation, </title> <publisher> Oxford University. </publisher>
Reference-contexts: It concludes with the speculative possibility that certain proofs of I C =2 P 0 help to solve major open problems in complexity theory. Earlier versions of the results in sections 2-4 and 6 appeared in the conference paper [Reg84], and in the dissertation <ref> [Reg86] </ref>. The results in section 5 are new, and solve open problems in [BS85, Reg88]. 2 Notation and Basic Results Turing machines in this paper will use alphabet = f 0; 1 g. For each x 2 fl define num (x) to be the natural number having binary representation 1x.
Reference: [Reg88] <author> K. Regan. </author> <title> The topology of provability in complexity theory. </title> <journal> J. Comp. Sys. Sci., </journal> <volume> 3 </volume> <pages> 384-432, </pages> <year> 1988. </year>
Reference-contexts: Moreover, PA proves that all finite sets belong to UP, so every language L named by an i such that (i) holds provably belongs to UP. This author's earlier work <ref> [Reg88, Reg92] </ref> tied the above problems to the complexity of universal languages U that define presentations of C. <p> Earlier versions of the results in sections 2-4 and 6 appeared in the conference paper [Reg84], and in the dissertation [Reg86]. The results in section 5 are new, and solve open problems in <ref> [BS85, Reg88] </ref>. 2 Notation and Basic Results Turing machines in this paper will use alphabet = f 0; 1 g. For each x 2 fl define num (x) to be the natural number having binary representation 1x. <p> This proves the claim, giving C = f U ` g. While every r.p. class is bounded, there do exist nontrivial unbounded classes C that have J C 2 2 . Two examples, the former shown in [Haj79] and the latter in <ref> [Reg88] </ref>, are EQ := f A 2 REC : NP A = P A g; and the "upper cone" f L 2 REC : A p m L g of any fixed recursive language A, where p m stands for polynomial-time many-one reducibility. <p> James Royer gave me an example of a class C that is a recursively presented intersection of r.p. classes and has J C P 0 3 -complete (see <ref> [Reg88] </ref>), and this prompted me to do some of the new research in Section 5.
Reference: [Reg92] <author> K. Regan. </author> <title> Diagonalization, uniformity, and fixed-point theorems. </title> <journal> Inform. and Comp., </journal> <volume> 98 </volume> <pages> 1-40, </pages> <year> 1992. </year>
Reference-contexts: Moreover, PA proves that all finite sets belong to UP, so every language L named by an i such that (i) holds provably belongs to UP. This author's earlier work <ref> [Reg88, Reg92] </ref> tied the above problems to the complexity of universal languages U that define presentations of C. <p> Remark. A stronger construction that makes each h i computable in real time (i.e., time n+1) and log space follows from the proof of Theorem 4.1 (a) in <ref> [Reg92] </ref>. The same applies to h in Lemma 5.1. Via Theorem 4.1 and Example 5.1 above, this yields another proof that EXPTIME n P is not recursively presentable; ditto (EXPTIME n P) [ FIN. Likewise, the class of P-immune sets is EXPTIME (or in any larger class) is not r.p.
Reference: [Rog58] <author> H. Rogers. </author> <title> Godel-numberings of the partial recursive functions. </title> <journal> J. Symb. Logic, </journal> <volume> 23 </volume> <pages> 331-341, </pages> <year> 1958. </year>
Reference: [Rog67] <author> H. Rogers. </author> <title> Theory of Recursive Functions and Effective Computability. </title> <publisher> McGraw-Hill, </publisher> <address> 1967. </address> <publisher> Reprinted, MIT Press, </publisher> <year> 1987. </year>
Reference-contexts: The familiar Rice's Theorem states that the only recursive full index sets are I RE = N + and I = ;. The Rice-Shapiro Theorem (see <ref> [Rog67] </ref>) shows that the only other classes C with r.e. full index sets are precisely those of the form C = [ 1 k=1 f L 2 RE : U k L g, where U is a recursive language such that U k is finite for each k. <p> Proof. (a) Let C = f U k g for some U 2 REC. By the S-m-n Theorem (see <ref> [Rog67] </ref>) there is a recursive function : N + ! N + such that for all k, M (k) is total and accepts U k . <p> By (a), I NPnP is P 0 3 -complete. 9 By the generalization of Myhill's Theorem to higher levels of the arithmetical hierarchy (see <ref> [Rog67] </ref>), all 3 -complete sets are recursively isomorphic, and so I NPnP is mapped onto I P by some recursive permutation of N + . This gives a sense in which NP n P is "recursively isomorphic" to P, if and only if NP 6= P. <p> The analogous collections of true pure P k -sentences are called `V k ' in <ref> [Rog67] </ref>. Since the axioms of Q are themselves pure Q 2 -sentences, we could just have said that T 2 has A 2 as axiom set. <p> The axiom set A 2 is not recursive; instead, it belongs to Q 0 2 and is complete under many-one reduction (see chapter 14 of <ref> [Rog67] </ref>). In fact, T 2 has all true P 3 -sentences as theorems, since (9n) (n) logically follows from (n 0 ) for some fixed n 0 that makes (n 0 ) true. <p> It is stronger in that its axiom set includes many statements not provable or known to be provable in PA or in set theory (ZF). In particular, the Riemann Hypothesis is provably (in ZF; see <ref> [Rog67] </ref>) equivalent to a Q 1 -statement over L A , and `P 6= NP' can be put into Q 2 -prenex form, so it is decided in T 2 . 18 What matters for us is the observation that any P 0 3 -class C can be defined by a
Reference: [Sch82] <author> U. Schoning. </author> <title> A uniform approach to obtain diagonal sets in complexity classes. </title> <journal> Theor. Comp. Sci., </journal> <volume> 18 </volume> <pages> 95-103, </pages> <year> 1982. </year>
Reference-contexts: The same obtains for REC n P and EXPTIME n P, without needing any assumptions. While the `I' index set cannot distinguish between P and NP n P, the `J' index set can. The following is obtained using the technique of "delayed diagonalization." Theorem 4.5 ([Reg88], after <ref> [Sch82] </ref>) Let D be closed downward under many-one reductions computable by Turing machines that run in linear time and log space. Let C 1 ; C 2 be such that D C 1 [ C 2 and both D n C 1 and D n C 2 are scfv.
Reference: [Smo91] <author> C. Smorynski. </author> <title> Logical Number Theory I: An Introduction. </title> <publisher> Springer Verlag, </publisher> <year> 1991. </year>
Reference-contexts: If is allowed to contain bounded quantifiers of the form (9y &lt; t) or (8y &lt; t) where t is an arithmetical term, then it is customary to call a 0 -formula and a P 0 k -formula. The Matijasevic-Robinson-Davis-Putnam Theorem (see <ref> [Mat73, MR75, Smo91] </ref>) implies that for every r.e. language L there is a pure P 1 -formula such that L = L (), in fact where has the form p (x; y 1 ; y 2 ; : : : ; y 12 ) = 0 for some polynomial p in
Reference: [Soa87] <author> R. Soare. </author> <title> Recursively Enumerable Sets and Degrees. </title> <publisher> Springer Verlag, </publisher> <address> New York, </address> <year> 1987. </year>
Reference-contexts: In view of the common opinion that more-sophisticated techniques than we currently know will be needed to resolve P =? NP and similar hard questions, however, we contend that such classes should be explored more. The class H in the last section is a rather blunt candidate. In <ref> [Soa87] </ref> one may find arguments of noticeably greater difficulty applied to show that certain full index sets I C are not in P 0 3 , and perhaps these arguments have the right level of sophistication.
Reference: [Sto77] <author> L. Stockmeyer. </author> <title> The polynomial time hierarchy. </title> <journal> Theor. Comp. Sci., </journal> <volume> 3 </volume> <pages> 1-22, </pages> <year> 1977. </year>
Reference-contexts: P p P p <ref> [Sto77, Wra77] </ref>). However, whether a corresponding strong theorem holds subsumes `P =? NP' and many other major open questions in complexity theory.
Reference: [Wra77] <author> C. Wrathall. </author> <title> Complete sets and the polynomial-time hierarchy. </title> <journal> Theor. Comp. Sci., </journal> <volume> 3 </volume> <pages> 23-33, </pages> <year> 1977. </year>
Reference-contexts: P p P p <ref> [Sto77, Wra77] </ref>). However, whether a corresponding strong theorem holds subsumes `P =? NP' and many other major open questions in complexity theory. <p> Moreover, if A is chosen to be the known PSPACE-complete language QBF , then P A = NP A = PSPACE, so H PSPACE. (b) If PH = k , then using the P p k -complete sets B k from <ref> [Wra77] </ref>, we have NP B k = P B k = P p k , whence H = P p (c) Clearly H [ L2H P L [ L2H NP L . Suppose B 2 [ L2H NP L ; then B 2 NP L for some L 2 H.
References-found: 39

