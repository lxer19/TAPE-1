URL: http://www.cs.uni-bonn.de/IV/blum/papers/rspeedup5.ps.Z
Refering-URL: http://www.cs.uni-bonn.de/IV/blum/blum.html
Root-URL: http://cs.uni-bonn.de
Email: email: blum@cs.uni-bonn.de  
Title: Speeding up Dynamic Programming without Omitting any Optimal Solution and some Applications in Molecular Biology  
Author: Norbert Blum 
Date: December 15, 1998  
Address: Romerstr. 164, D-53117 Bonn, Germany  
Affiliation: Informatik IV, Universitat Bonn  
Abstract: We extend the algorithm of Galil and Giancarlo, which speeds up dynamic programming in the case of concave cost functions, such that a compact representation of all optimal solutions is computed. Compared to the Galil-Giancarlo algorithm our time bound grows only by a small constant factor. With a compact representation, we develop efficient algorithms for the solution of problems in molecular biology concerning the computation of all optimal local alignments and all optimal subalignments in genetic sequences. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. F. Altschul, and B. W. </author> <title> Erickson [1986] Optimal sequence alignment using affine gap costs, </title> <journal> Bull. math. Biol. </journal> <volume> 48, </volume> <pages> 603-616. </pages>
Reference-contexts: A theoretical improvement is given by Klawe and Kleitman [9]. They reduce the time bound to O (mnff (m + n)), where ff is the inverse of the Ackermann function. For linear and piecewise linear cost functions, Altschul and Erickson <ref> [1] </ref> and Gotoh [7] have developed algorithms for the computation of a compact representation of the DP -graph. <p> Let RIN ([i; j]) = f [i; k] j ([i; k]; [i; j]) 2 E DP g denote the set of tails (heads) of the incoming (outgoing) row-edges of [i; j] in E DP . Our goal is to compute a compact representation of RIN (i) = <ref> [RIN ([i; 1] </ref>); RIN ([i; 2]); : : : ; RIN ([i; n])]: Note that RIN ([i; j]) 6= ; iff rmin (i; j) = v (i; j).
Reference: [2] <author> N. </author> <title> Blum [1992] On locally optimal alignments in genetic sequences, </title> <booktitle> 9th STACS , 425-436. </booktitle>
Reference-contexts: Then the corresponding paths P and P 0 must cross. Since M 1 is the operation set, they must cross in a node of the graph. Hence, the path oriented local optimality implies the sequence oriented optimality. 2 In <ref> [2] </ref> it is observed that y can most resemble ~x ae x locally, although there exists a subsequence x 0 of x such that 42 a) ~x " x 0 6= ;, i.e., ~x and x 0 overlap, and b) d (x 0 ; y) &lt; d (~x; y). <p> It might be useless to compute such a substring ~x. Hence, in <ref> [2] </ref>, the following stronger version of locally minimal distance is given. <p> In <ref> [2] </ref> some slightly modified versions of that local optimality notion are also given. As shown in Theorem 11 and Theorem 12, we cannot extend the new local optimality notion given in [2] to the operation sets M 2 and M 3 , respectively, and use path oriented algorithms only. <p> In <ref> [2] </ref> some slightly modified versions of that local optimality notion are also given. As shown in Theorem 11 and Theorem 12, we cannot extend the new local optimality notion given in [2] to the operation sets M 2 and M 3 , respectively, and use path oriented algorithms only.
Reference: [3] <author> H. N. Gabow, and R. E. </author> <title> Tarjan [1985] A linear-time algorithm for a special case of disjoint set union, </title> <journal> J. Comput. System Sci. </journal> <volume> 30, </volume> <pages> 209-221. </pages>
Reference-contexts: Since the UNION-tree is equal F row i , the UNION-tree is known in advance. Hence, we can use static tree set union as developed by Gabow and Tarjan <ref> [3] </ref>. Then, U F (n) = O (n). For the efficient computation of the graph E l , we need a compact representation of the incoming edges of E hl , too. Knowing the compact representation of the outgoing edges of E hl , this computation is simple.
Reference: [4] <author> Z. Galil, and R. </author> <title> Giancarlo [1989] Speeding up dynamic programming with applications to molecular biology, </title> <journal> TCS 64, </journal> <pages> 107-118. </pages>
Reference-contexts: The concavity of the cost function c means that for the same extension of two edges with the same head [i; j], the additional cost of the longer edge does not exceed the additional amount with respect to the shorter edge. Galil and Giancarlo <ref> [4] </ref> and, independently, Miller and Myers [10] have shown how to compute RM IN (i) = [rmin (i; 0); rmin (i; 1); : : : ; rmin (i; n)] in O (n log n) time if c is concave with respect to the ith row. <p> Instead of storing the smallest p such that [i; k] is hj; pi-dominant, Galil and Giancarlo store the largest p such that [i; k] can become dominant with respect to [i; p]. The algorithm sketched below differs in this respect slightly from the algorithm presented in <ref> [4] </ref>. RM IN (i) is computed by scanning the ith row of the matrix from left to right.
Reference: [5] <author> W. B. Goad, and M. I. </author> <title> Kanehisa [1982] Pattern recognition in nucleic acid sequences. I. A general method for finding local homologies and symmetries, Nucl. </title> <journal> Acids Res. </journal> <volume> 10, </volume> <pages> 247-263. </pages>
Reference-contexts: No weight for equal corresponding substrings is counted. Since it is not possible to describe this notion within a few lines, as too many subalignments not of interest are computed <ref> [5] </ref>, and since Sellers himself gave a more accurate notion later on [15], no description of this notion is given here. Goad and Kanehisa [5] consider the operation set M 2 and compute only subalignments which fulfill density properties. <p> Since it is not possible to describe this notion within a few lines, as too many subalignments not of interest are computed <ref> [5] </ref>, and since Sellers himself gave a more accurate notion later on [15], no description of this notion is given here. Goad and Kanehisa [5] consider the operation set M 2 and compute only subalignments which fulfill density properties. <p> Analogously, a match can obtain a single right bonus. We have described the measure of similarity of a given subalignment with respect to two genetic sequences x and y. Next we will describe the local optimality notion used in the three papers cited above. In <ref> [5] </ref>, the local optimality notion is hidden in the description of the algorithm and seems to be similiar to the notion used in the other two papers.
Reference: [6] <author> O. </author> <title> Gotoh [1982] An improved algorithm for matching biological sequences, </title> <journal> J. Mol. Biol. </journal> <volume> 162, </volume> <pages> 705-708. </pages>
Reference: [7] <author> O. </author> <title> Gotoh [1990] Optimal sequence alignment allowing for long gaps, </title> <journal> Bull. math. Biol. </journal> <volume> 52, </volume> <pages> 359-373. </pages>
Reference-contexts: A theoretical improvement is given by Klawe and Kleitman [9]. They reduce the time bound to O (mnff (m + n)), where ff is the inverse of the Ackermann function. For linear and piecewise linear cost functions, Altschul and Erickson [1] and Gotoh <ref> [7] </ref> have developed algorithms for the computation of a compact representation of the DP -graph. We will extend the algorithm of Galil and Giancarlo such that a compact representation of the DP -graph G DP is also computed, increasing the time bound only by a small constant factor.
Reference: [8] <author> X. </author> <title> Huang [1994] A context dependent method for comparing sequences, </title> <type> 5th CPM , 54-63. </type>
Reference-contexts: The operation set M 3 , introduced in Section 4, has never been considered before. Using M 3 , all similarity measures sketched above can be obtained by using M 3 in combination with an appropriate concave cost function. Recently, Huang <ref> [8] </ref> has given a new scoring scheme which gives a match in a substitution block a single left bonus if another match occurs in this substitution block within l positions to the left. Analogously, a match can obtain a single right bonus.
Reference: [9] <author> M. M. Klawe and D. J. </author> <title> Kleitman [1990] An almost linear time algorithm for generalized matrix searching, </title> <journal> SIAM J. Disc. Math. </journal> <volume> 3, </volume> <pages> 81-97. </pages>
Reference-contexts: If c satisfies the closest zero property, the time bound reduces to O (mn). A theoretical improvement is given by Klawe and Kleitman <ref> [9] </ref>. They reduce the time bound to O (mnff (m + n)), where ff is the inverse of the Ackermann function. For linear and piecewise linear cost functions, Altschul and Erickson [1] and Gotoh [7] have developed algorithms for the computation of a compact representation of the DP -graph.
Reference: [10] <author> W. Miller, and E. W. </author> <title> Myers [1988] Sequence comparision with concave weighting functions, </title> <journal> Bull. math. Biol. </journal> <volume> 50, </volume> <pages> 97-120. 44 </pages>
Reference-contexts: Galil and Giancarlo [4] and, independently, Miller and Myers <ref> [10] </ref> have shown how to compute RM IN (i) = [rmin (i; 0); rmin (i; 1); : : : ; rmin (i; n)] in O (n log n) time if c is concave with respect to the ith row.
Reference: [11] <author> D. Naor, and D. L. </author> <title> Brutlag [1994] On near-optimal alignments of bio-logical sequences, </title> <journal> J. Comp. Biol. </journal> <volume> 1, </volume> <pages> 349-366. </pages>
Reference-contexts: With an alignment A (x; y) we associate the cost c M 1 (A (x; y)) of a corresponding derivation. Alignments are the usual representation of a derivation of y from x in molecular biology. With respect to the operation set M 1 , Naor and Brutlag <ref> [11] </ref> have developed algorithms for the computation of all alignments whose cost are within any given from the optimal cost. In the evolutionary history of a genetic sequence, one possible single mutation is the insertion or the deletion of a string of length k 2.
Reference: [12] <author> S. B. Needleman, and C. D. </author> <title> Wunsch [1970] A general method applicable to the search for similarities in the amino-acid sequence of two proteins, </title> <journal> Journal of Molecular Biology 48, </journal> <pages> 443-453. </pages>
Reference: [13] <author> P. H. </author> <title> Sellers [1974] On the theory and computation of evolutionary distances, </title> <journal> SIAM J. Appl. Math. </journal> <volume> 26, </volume> <pages> 787-793. </pages>
Reference: [14] <author> P. H. </author> <title> Sellers [1980] The theory and computation of evolutionary distances: </title> <journal> Pattern recognition, Journal of Algorithms 1, </journal> <pages> 359-373. </pages>
Reference-contexts: G DP s , a compact representation of the locally optimal subalignment graph E ls = (V ls ; E ls ) can be computed in O (mn) time. 38 7 Some remarks on the accurate notion of local optimality The first notion of local optimality was given by Sellers <ref> [14] </ref>. He considers the operation set M 1 .
Reference: [15] <author> P. H. </author> <title> Sellers [1984] Pattern recognition in genetic sequences by mismatch density, </title> <journal> Bull. math. Biol. </journal> <volume> 46, </volume> <pages> 501-514. </pages>
Reference-contexts: No weight for equal corresponding substrings is counted. Since it is not possible to describe this notion within a few lines, as too many subalignments not of interest are computed [5], and since Sellers himself gave a more accurate notion later on <ref> [15] </ref>, no description of this notion is given here. Goad and Kanehisa [5] consider the operation set M 2 and compute only subalignments which fulfill density properties. <p> A similar approach is taken by Smith and Waterman [16]. In both papers, the exact definition of the notion of similarity is given implicitly in the description of the algorithm. The first more formal description of this approach was given by Sellers <ref> [15] </ref>. He considers the operation set M 2 and gives the following definition for the similarity measure of a subalignment: 39 Let x and y be two genetic sequences and let A (~x; ~y) be a subalignment with respect to x and y. <p> Smith, Waterman and Sellers consider a subalignment as locally optimal if there is no other subalignment of larger similarity such that both corresponding paths have a node in common <ref> [15, 16, 19, 20] </ref>. We denote this local optimality notion path oriented . Note that in contrast with Sellers' first definition of "locally most resembles", this local optimality notion depends on the computed alignments and not only on the sequences x and y.
Reference: [16] <author> T. F. Smith, and M. S. </author> <title> Waterman [1981] Identification of common molecular subsequences, </title> <journal> J. Mol. Biol. </journal> <volume> 147, </volume> <pages> 195-197. </pages>
Reference-contexts: More precisely, they consider the quotient of the cost of the involved edit operations and the number of equal bases in the subalignment, and compute only subalignments where this value is less than a specified threshold. A similar approach is taken by Smith and Waterman <ref> [16] </ref>. In both papers, the exact definition of the notion of similarity is given implicitly in the description of the algorithm. The first more formal description of this approach was given by Sellers [15]. <p> Smith, Waterman and Sellers consider a subalignment as locally optimal if there is no other subalignment of larger similarity such that both corresponding paths have a node in common <ref> [15, 16, 19, 20] </ref>. We denote this local optimality notion path oriented . Note that in contrast with Sellers' first definition of "locally most resembles", this local optimality notion depends on the computed alignments and not only on the sequences x and y.
Reference: [17] <author> J. E. </author> <title> Tarjan [1983] Data Structures and Network Algorithms, </title> <publisher> SIAM. </publisher>
Reference-contexts: This can easily be done by using well-known data structures supporting UNION-FIND operations as described for instance in <ref> [17] </ref>. The whole process is terminated. 31 3. e i;q &gt; M IN k j ;k Possibly, [i; q] will be the first node of a new potential maximal path. Hence, we perform k j+1 := q and M IN k j+1 ;k := e i;q .
Reference: [18] <author> M. S. </author> <title> Waterman [1984] Efficient sequence alignment algorithms, </title> <journal> J. theor. Biol. </journal> <volume> 108, </volume> <pages> 333-337. </pages>
Reference-contexts: For the computation of the evolutionary distance of genetic sequences, concave cost functions seem to include most cost functions of biological relevance <ref> [18, 19] </ref>. <p> Formally, concave cost functions were first introduced with respect to the analysis of genetic sequences by Waterman <ref> [18] </ref>. Usually, c M 2 (a; a) = 0 for all a 2 . In some cases, it is useful if the reward for equal subsequences in the two considered sequences increases with the length of the equal subsequences.
Reference: [19] <author> M. S. </author> <title> Waterman [1984] General methods of sequence comparison, </title> <journal> Bull. math. Biol. </journal> <volume> 46, </volume> <pages> 473-500. </pages>
Reference-contexts: For the computation of the evolutionary distance of genetic sequences, concave cost functions seem to include most cost functions of biological relevance <ref> [18, 19] </ref>. <p> Smith, Waterman and Sellers consider a subalignment as locally optimal if there is no other subalignment of larger similarity such that both corresponding paths have a node in common <ref> [15, 16, 19, 20] </ref>. We denote this local optimality notion path oriented . Note that in contrast with Sellers' first definition of "locally most resembles", this local optimality notion depends on the computed alignments and not only on the sequences x and y.
Reference: [20] <author> M. S. </author> <title> Waterman [1989] Sequence alignments, </title> <editor> in ed. M. S. Waterman, </editor> <title> Mathematical methods for DNA sequences, </title> <publisher> CRC Press, </publisher> <pages> 53-92. </pages>
Reference-contexts: Smith, Waterman and Sellers consider a subalignment as locally optimal if there is no other subalignment of larger similarity such that both corresponding paths have a node in common <ref> [15, 16, 19, 20] </ref>. We denote this local optimality notion path oriented . Note that in contrast with Sellers' first definition of "locally most resembles", this local optimality notion depends on the computed alignments and not only on the sequences x and y.
Reference: [21] <author> M. S. Waterman, and M. </author> <title> Eggert [1987] A new algorithm for best subsequence alignments with application to tRNA-rRNA comparisions, </title> <journal> J. Mol. Biol. </journal> <volume> 197, </volume> <pages> 723-728. </pages>
Reference: [22] <author> M. S. Waterman, T. F. Smith, and W. A. </author> <title> Beyer [1976] Some biological sequence metrics, </title> <journal> Adv. Math. </journal> <volume> 20, </volume> <pages> 367-387. 45 </pages>
References-found: 22

