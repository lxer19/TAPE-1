URL: ftp://ftp.cs.wisc.edu/math-prog/tech-reports/98-10.ps
Refering-URL: http://www.cs.wisc.edu/~cs719-1/cs719.html
Root-URL: http://www.cs.wisc.edu
Email: eager@cs.usask.ca fferris, vernong@cs.wisc.edu  
Title: Optimized Regional Caching for On-Demand Data Delivery  
Author: Derek L. Eager Michael C. Ferris Mary K. Vernon 
Address: Saskatoon, SK Canada S7N 5A9 Madison, WI 53706  
Affiliation: University of Saskatchewan University of Wisconsin Madison  
Abstract: Systems for on-demand delivery of large, widely-shared data can be expected to have a hierarchical architecture containing one or more (remote) shared central servers and multiple (local) regional servers. This paper develops two significant advances in the state-of-the-art design of such systems. The first advance is an extension to the dynamic skyscraper delivery technique, recently proposed for single-server video-on-demand systems and shown to have considerable cost/performance advantages over conventional delivery, so that it can be applied in hierarchical systems. The extension allows objects to be partially stored at the regional servers and makes use of a new construct that can also be employed to improve performance in single-server systems. The second advance is an analytic model for determining optimal allocations of objects, within the context of the proposed hierarchical delivery scheme. Results of the model show it is often more cost-effective to store the initial segments of many data objects, rather than the complete data for fewer objects, at the local servers. The results also show how the basic structure of suitable object/segment allocations depends on key system and workload parameters, including the relative constraints of disk bandwidth and storage capacity at the local servers, and the relative cost of local and global channel resources.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. C. Bisdikian and B. V. Patel, </author> <title> "Cost-Based Program Allocation for Distributed Multimedia-on-Demand Systems", </title> <booktitle> IEEE MultiMedia 3, 3 (Fall 1996), </booktitle> <pages> pp. 62-72. 17 </pages>
Reference-contexts: Prior work on distributed video-on-demand (VOD) architectures has focused on the problem of determining on which server (s) to allocate each entire video object so as to optimize system cost/performance <ref> [13, 1, 3] </ref>. However, caching the initial segments of a large number of objects at the regional servers, rather than the complete data for a much smaller set of (popular) objects, can provide quick response to the client while hiding the latency of communication with the central server.
Reference: [2] <author> A. Brooke, D. Kendrick, and A. Meeraus. </author> <title> GAMS: A User's Guide. </title> <publisher> The Scientific Press, </publisher> <address> South San Francisco, CA, </address> <year> 1988. </year>
Reference-contexts: The optimization model was formulated in an algebraic modeling language, GAMS <ref> [2] </ref>, to enable solution using a variety of MIP solvers. The most effective algorithms currently implemented are branch and bound (branch and cut) methods with subproblems solved using a variant of the simplex method for linear programming [5].
Reference: [3] <author> D. W. Brubeck and L. W. Rowe, </author> <title> "Hierarchical Storage Management in a Distributed VOD System", </title> <booktitle> IEEE MultiMedia 3, 3 (Fall 1996), </booktitle> <pages> pp. 37-47. </pages>
Reference-contexts: Prior work on distributed video-on-demand (VOD) architectures has focused on the problem of determining on which server (s) to allocate each entire video object so as to optimize system cost/performance <ref> [13, 1, 3] </ref>. However, caching the initial segments of a large number of objects at the regional servers, rather than the complete data for a much smaller set of (popular) objects, can provide quick response to the client while hiding the latency of communication with the central server.
Reference: [4] <author> A. Dan, D. Sitaram and P. Shahabuddin, </author> <title> "Scheduling Policies for an On-demand Video Server with Batching", </title> <booktitle> Proceedings of the ACM Multimedia Conference, </booktitle> <address> San Francisco, CA, </address> <month> October </month> <year> 1994, </year> <pages> pp. 15-23. </pages>
Reference-contexts: used n=224 because if there are 1000 objects in the system and the object selection frequencies are modeled by the Zipf (0) distribution, then (1) the popularities of the first 100 objects matches reasonably well with a particular measurement of the 100 most popular objects in a video rental outlet <ref> [4] </ref>, and (2) 80% of the requests are for the 224 most popular objects, which is a popular definition of the hot set. 8 k, w), and that each object can have 0, k or K segments stored regionally.
Reference: [5] <author> G. B. Dantzig. </author> <title> Linear Programming and Extensions. </title> <publisher> Princeton University Press, </publisher> <address> Princeton, New Jersey, </address> <year> 1963. </year>
Reference-contexts: The optimization model was formulated in an algebraic modeling language, GAMS [2], to enable solution using a variety of MIP solvers. The most effective algorithms currently implemented are branch and bound (branch and cut) methods with subproblems solved using a variant of the simplex method for linear programming <ref> [5] </ref>. After some experimentation with the model formulation and solvers, we used the XPRESS [6] code with default settings. The figures were produced in MATLAB using a generic interface [8] linking GAMS and MATLAB.
Reference: [6] <author> Dash Associates, Blisworth House, Blisworth, Northants, </author> <title> UK. XPRESS-MP User Guide, </title> <year> 1997. </year>
Reference-contexts: The most effective algorithms currently implemented are branch and bound (branch and cut) methods with subproblems solved using a variant of the simplex method for linear programming [5]. After some experimentation with the model formulation and solvers, we used the XPRESS <ref> [6] </ref> code with default settings. The figures were produced in MATLAB using a generic interface [8] linking GAMS and MATLAB. The GAMS system is appropriate for the speed of model development and analysis required in this research.
Reference: [7] <author> D. L. Eager and M. K. Vernon, </author> <title> "Dynamic Skyscraper Broadcasts for Video-on-Demand", </title> <booktitle> to appear in Proceedings of the 4th International Workshop on Multimedia Information Systems (MIS '98), Istanbul, Turkey, </booktitle> <month> September </month> <year> 1998. </year>
Reference-contexts: Except as noted, the distinction among these alternatives is immaterial to the discussion. There are two principal questions addressed in this research. The first is whether the recently proposed dynamic skyscraper delivery technique <ref> [7] </ref> can be adapted for a hierarchical system. <p> In a single-server dynamic skyscraper system <ref> [7] </ref> the C channels that are provided for broadcasting a set of objects that have the same size and delivery rate are organized into N groups of K channels each. Each object is divided into K segments with a particular progression of relative sizes to be described shortly. <p> The (smaller) initial segments of the objects will be broadcast multiple times on their respective channels in the group, in order to serve new clients who may arrive and join the active full broadcast, as described further below. Many different relative segment size progressions are possible <ref> [7, 9] </ref>. Whichever progression is employed, it may be bounded by a parameter, W , and padded with W values up to length K, in order to limit the storage capacity required in the client settop. <p> This buffering capability is easily accommodated by a single commodity disk <ref> [7] </ref>. 3 Hierarchical Skyscraper Architecture This section considers the extension of the above single-server dynamic skyscraper delivery scheme to a hierarchical system. For simplicity, we describe the hierarchical system in terms of a single shared central server and multiple regional servers. The extension to multiple shared remote servers is straightforward.
Reference: [8] <author> M. C. Ferris. </author> <title> MATLAB and GAMS: Interfacing optimization and visualization software. </title> <type> Technical report, </type> <institution> Computer Sciences Department, University of Wisconsin, Madison, Wisconsin, </institution> <year> 1998. </year>
Reference-contexts: After some experimentation with the model formulation and solvers, we used the XPRESS [6] code with default settings. The figures were produced in MATLAB using a generic interface <ref> [8] </ref> linking GAMS and MATLAB. The GAMS system is appropriate for the speed of model development and analysis required in this research.
Reference: [9] <author> L. Gao, J. Kurose and D. Towsley, </author> <title> "Efficient Schemes for Broadcasting Popular Videos", </title> <booktitle> Proceedings of the 8th International Workshop on Network and Operating Systems Support for Digital Audio and Video (NOSSDAV 98), </booktitle> <address> Cambridge, UK, </address> <month> July </month> <year> 1998. </year>
Reference-contexts: The (smaller) initial segments of the objects will be broadcast multiple times on their respective channels in the group, in order to serve new clients who may arrive and join the active full broadcast, as described further below. Many different relative segment size progressions are possible <ref> [7, 9] </ref>. Whichever progression is employed, it may be bounded by a parameter, W , and padded with W values up to length K, in order to limit the storage capacity required in the client settop.
Reference: [10] <author> K. A. Hua and S. Sheu, </author> <title> "Skyscraper Broadcasting: A New Broadcasting Scheme for Metropolitan Video-on-Demand Systems", </title> <booktitle> Proceedings of the ACM SIGCOMM'97 Conference, </booktitle> <address> Cannes, France, </address> <month> September </month> <year> 1997, </year> <pages> pp. 89-100. </pages>
Reference: [11] <author> E. D. Lazowska, J. Zahorjan, G. S. Graham, and K. C. Sevcik, </author> <title> Quantitative System Performance, </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1984. </year>
Reference-contexts: Nevertheless, we develop a fairly simple optimization model, owing partly to the use of asymptotic bounds analysis <ref> [11] </ref> to obtain a simple estimate of the bandwidth (i.e., number of channels) that is required for a system to support a given assignment of objects. <p> Let C fl = K fi N fl denote the number of channels at the knee of the curve of mean client waiting time versus the inverse of the number of channels (see Figure 2). Letting i denote the rate of requests for object i, asymptotic bounds analysis <ref> [11] </ref> yields the following estimate for C fl : C fl = K fi N fl K i=1 (W 1)T 1 + 1 7 The intuition behind the above formula is as follows.
Reference: [12] <author> G. L. Nemhauser and L. A. Wolsey. </author> <title> Integer and Combinatorial Optimization. </title> <publisher> Wiley, </publisher> <address> New York, NY, </address> <year> 1988. </year>
Reference-contexts: Finally, C central , C regional and D regional are linear functions of the binary variables fl i . Thus, the optimization model is a mixed integer linear program (MIP) <ref> [12] </ref>, for which reliable solution techniques exist. 5 Results In this section we provide results that illustrate the capabilities of the optimization model as a tool for designing hierarchical systems for on-demand delivery of large widely-shared data files.
Reference: [13] <author> J.-P. Nussbaumer, B. V. Patel, F. Schaffa, and J. P. G. Sterbenz, </author> <title> "Networking Requirements for Interactive Video on Demand", </title> <journal> IEEE Journal on Selected Areas in Communications 13, </journal> <month> 5 (June </month> <year> 1995), </year> <pages> pp. 779-787. </pages>
Reference-contexts: Prior work on distributed video-on-demand (VOD) architectures has focused on the problem of determining on which server (s) to allocate each entire video object so as to optimize system cost/performance <ref> [13, 1, 3] </ref>. However, caching the initial segments of a large number of objects at the regional servers, rather than the complete data for a much smaller set of (popular) objects, can provide quick response to the client while hiding the latency of communication with the central server.

References-found: 13

