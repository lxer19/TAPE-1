URL: http://www-cs-faculty.stanford.edu/~koza/icec-96.ps
Refering-URL: http://www.cs.bham.ac.uk/~wbl/biblio/gp-bibliography.html
Root-URL: 
Email: koza@cs.stanford.edu  fhb3@slip.net  andre@flamingo.stanford.edu  makeane@ix.netcom.com  
Title: Four Problems for which a Computer Program Evolved by Genetic Programming is Competitive with Human
Author: John R. Koza Forrest H Bennett III David Andre Martin A. Keane 
Note: I INTRODUCTION  Genetic programming breeds computer  
Web: http://www-cs faculty.stanford.edu/~koza/  
Address: 258 Gates Building  Stanford, California 94305  Stanford, California 94305  Stanford, California 94305  5733 West Grover Chicago, IL 60630  
Affiliation: Computer Science Dept.  Stanford University  Visiting Scholar Computer Science Dept. Stanford University  Visiting Scholar Computer Science Dept. Stanford University  Econometrics Inc.  
Abstract: It would be desirable if computers could solve problems without the need for a human to write the detailed programmatic steps. That is, it would be desirable to have a domain-independent automatic programming technique in which "What You Want Is What You Get" ("WYWIWYG" pronounced "wow-eee-wig"). Genetic programming is such a technique. This paper surveys three recent examples of problems (from the fields of cellular automata and m o l e c u l a r b i o l o g y ) i n w h i c h g e n e t i c programming evolved a computer program that produced results that were slightly better than human performance for the same problem. This paper then discusses the problem of electronic circuit synthesis in greater detail. It shows how genetic programming can evolve b o t h the topology of a desired electrical circuit and the sizing (numerical values) for each component in a crossover (woofer and tweeter) filter. Genetic programming has also evolved the design for a lowpass filter, the design of an amplifier, and the design for an asymmetric bandpass filter that was described as being difficult-to-design in an article in a leading electrical engineering journal. Programs (Koza 1994a) describe an extension to Holland's genetic algorithm in which the genetic population consists of computer programs (that is, compositions of primitive functions and terminals). Genetic programming starts with a primordial ooze of randomly generated computer programs composed of the available programmatic ingredients and then applies the principles of animal husbandry to breed a new (and often improved) population of programs. The breeding is done in a domain-independent way using the Darwinian principle of survival of the fittest, an analog of the naturally-occurring genetic operation of crossover (sexual recombination), and occasional mutation. The crossover operation is designed to create syntactically valid offspring programs (given closure amongst the set of ingredients). Genetic programming combines the expressive high-level symbolic representations of computer programs with the near-optimal efficiency of learning of Holland's genetic algorithm. A computer program that solves (or approximately solves) a given problem often emerges from this process. (See also Koza and Rice 1992 and Koza 1994b). 
Abstract-found: 1
Intro-found: 1
Reference: <author> Andre, David, Bennett III, Forrest H, and Koza, John R. </author> <year> 1996. </year> <title> Discovery by genetic programming of a cellular automata rule that is better than any known rule for the majority classification problem. </title> <editor> In Koza, John R., Goldberg, David E., Fogel, David B., and Riolo, Rick L. (editors). </editor> <booktitle> Genetic Programming 1996: Proceedings of the First Annual Conference, </booktitle> <month> July 28-31, </month> <year> 1996, </year> <institution> Stanford University. </institution> <address> Cambridge, MA: </address> <publisher> MIT Press. In Press. </publisher>
Reference: <author> Andre, David and Koza, John R. </author> <year> 1996. </year> <title> Parallel genetic programming: A scalable implementation using the transputer architecture. </title> <editor> In Angeline, P. J. and Kinnear, </editor> <publisher> K. </publisher>
Reference: <editor> E. Jr. (editors). </editor> <booktitle> Advances in Genetic Programming 2. </booktitle> <address> Cambridge: </address> <publisher> MIT Press. </publisher>
Reference: <author> Degrauwe, M. </author> <year> 1987. </year> <title> IDAC: An interactive design tool for analog integrated circuits. </title> <journal> IEEE Journal of Solid State Circuits. 22:11061116. </journal>
Reference: <author> Gruau, Frederic. </author> <year> 1992. </year> <title> Cellular Encoding of Genetic Neural Networks. </title> <type> Technical report 92-21. </type> <institution> Laboratoire de l'Informatique du Paralllisme. Ecole Normale Suprieure de Lyon. </institution> <month> May </month> <year> 1992. </year>
Reference: <author> Harjani, R., Rutenbar, R. A., and Carley, L. R. </author> <year> 1989. </year> <title> OASYS: A framework for analog circuit synthesis. </title> <journal> IEEE Transactions on Computer Aided Design. 8:12471266. </journal>
Reference: <author> Hemmi, Hitoshi, Mizoguchi, Jun'ichi, and Shimohara, Katsunori. </author> <year> 1994. </year> <title> Development and evolution of hardware behaviors. </title> <editor> In Brooks, R. and Maes, P. (editors). </editor> <booktitle> Artificial Life IV: Proceedings of the Fourth International Workshop on the Synthesis and Simulation of Living Systems. </booktitle> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher> <pages> Pages 371376. </pages>
Reference: <author> Higuchi, T., Niwa, T., Tanaka, H., Iba, H., de Garis, H. and Furuya, T. </author> <year> 1993. </year> <title> Evolvable hardware Genetic-based generation of electric circuitry at gate and hardware description language (HDL) levels. </title> <type> Electrotechnical Laboratory technical report 93-4, </type> <institution> Tsukuba, </institution> <address> Ibaraki, Japan. </address>
Reference: <author> Holland, John H. </author> <year> 1975. </year> <title> Adaptation in Natural and Artificial System. </title> <address> Ann Arbor, MI: </address> <publisher> University of Michigan Press. </publisher>
Reference: <author> Koh, H. Y., Sequin, C. H. and Gray, P. R. </author> <year> 1990. </year> <title> OPASYN: A compiler for MOS operational amplifiers. </title> <journal> IEEE Transactions on Computer Aided Design. </journal> <volume> 9:113 125. </volume>
Reference: <author> Koza, John R. </author> <year> 1992. </year> <title> Genetic Programming: On the Programming of Computers by Means of Natural Selection. </title> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference: <author> Koza, John R. </author> <year> 1994a. </year> <title> Genetic Programming II: Automatic Discovery of Reusable Programs. </title> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference: <author> Koza, John R. </author> <year> 1994b. </year> <title> Genetic Programming II Videotape: The Next Generation. </title> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference: <author> Koza, John R. and Andre, David. </author> <year> 1996a. </year> <title> Classifying protein segments as transmembrane domains using architecture-altering operations in genetic programming. </title>
Reference: <editor> In Angeline, Peter J. and Kinnear, Kenneth E. Jr. (editors). </editor> <booktitle> 1996. Advances in Genetic Programming II. </booktitle> <address> Cambridge, MA: </address> <publisher> MIT Press. In Press. </publisher>
Reference: <author> Koza, John R. and Andre, David. </author> <year> 1996b. </year> <title> Evolution of iteration in genetic programming. </title> <booktitle> In Evolutionary Programming V: Proceedings of the Fifth Annual Conference on Evolutionary Programming. </booktitle> <address> Cambridge, MA: </address> <publisher> MIT Press. In Press. </publisher>
Reference: <author> Koza, John R. and Andre, David. </author> <year> 1996c. </year> <title> Automatic discovery of protein motifs using genetic programming. </title> <editor> In Yao, Xin (editor). </editor> <booktitle> 1996. Evolutionary Computation: Theory and Applications. </booktitle> <address> Singapore: </address> <publisher> World Scientific. In Press. </publisher>
Reference: <author> Koza, John R., Bennett III, Forrest H, Andre, David, and Keane, Martin A. </author> <year> 1996. </year> <title> Automated WYWIWYG design of both the topology and component values of analog electrical circuits using genetic programming. </title> <editor> In Koza, John R., Goldberg, David E., Fogel, David B., and Riolo, Rick L. (editors). </editor> <booktitle> Genetic Programming 1996: Proceedings of the First Annual Conference, </booktitle> <month> July 28-31, </month> <year> 1996, </year> <institution> Stanford University. </institution> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference: <author> Koza, John R., Andre, David, Bennett III, Forrest H, and Keane, Martin A. </author> <year> 1996. </year> <title> Automated design of both the topology and sizing of analog electrical circuits using genetic programming. </title> <booktitle> In Proceedings of the Fourth International Conference on Artificial Intelligence in Design. </booktitle> <publisher> Kluwer. In Press. </publisher>
Reference: <author> Koza, John R., and Rice, James P. </author> <year> 1992. </year> <title> G e n e t i c Programming: The Movie. </title> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher> <editor> Kruiskamp, Wim and Leenaerts, Domine. </editor> <year> 1995. </year> <title> DARWIN: CMOS opamp synthesis by means of a genetic algorithm. </title> <booktitle> Proceedings of the 32nd Design Automation Conference. </booktitle> <address> New York, NY: </address> <publisher> Association for Computing Machinery. </publisher> <pages> Pages 433438. </pages>
Reference: <author> Maulik, P. C. Carley, L. R., and Rutenbar, R. A. </author> <year> 1992. </year> <title> A mixed-integer nonlinear programming approach to analog circuit synthesis. </title> <booktitle> Proceedings of the 29th Design Automation Conference. </booktitle> <address> Los Alamitos, CA: </address> <publisher> IEEE Press. </publisher> <pages> Pages 698703. </pages>
Reference: <author> Mizoguchi, Junichi, Hemmi, Hitoshi, and Shimohara, Katsunori. </author> <year> 1994. </year> <title> Production genetic algorithms for automated hardware design through an evolutionary process. </title> <booktitle> Proceedings of the First IEEE Conference on Evolutionary Computation. </booktitle> <publisher> IEEE Press. Vol. I. </publisher> <pages> 661-664. </pages>
Reference: <author> Nielsen, Ivan Riis. </author> <year> 1995. </year> <title> A C-T filter compiler - From specification to layout. Analog Integrated Circuits and Signal Processing. </title> <publisher> 7(1):2133. </publisher>
Reference: <author> Ning, Z., Kole, M., Mouthaan, T., and Wallings, H. </author> <year> 1992. </year> <title> Analog circuit design automation for performance. </title> <booktitle> Proceedings of the 14th IEEE CICC. </booktitle> <address> New York: </address> <publisher> IEEE Press. </publisher> <pages> Pages 8.2.18.2.4. </pages>
Reference: <author> Quarles, Thomas, Newton, A. R., Pederson, D. O., and Sangiovanni-Vincentelli, A. </author> <year> 1994. </year> <note> SPICE 3 Version 3F5 User's Manual. </note> <institution> Department of Electrical Engineering and Computer Science, University of California, Berkeley, California. </institution> <month> March </month> <year> 1994. </year>
Reference: <author> Rutenbar, R. A. </author> <year> 1993. </year> <title> Analog design automation: Where are we? Where are we going? Proceedings of the l5th IEEE CICC. </title> <address> New York: </address> <publisher> IEEE Press. 13.1.1-13.1.8. </publisher>
Reference: <author> Samuel, Arthur L. </author> <year> 1959. </year> <title> Some studies in machine learning using the game of checkers. </title> <journal> IBM Journal of Research and Development. </journal> <volume> 3(3) 210229. </volume>
References-found: 27

