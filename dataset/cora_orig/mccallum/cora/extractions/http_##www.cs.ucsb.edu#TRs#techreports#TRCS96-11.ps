URL: http://www.cs.ucsb.edu/TRs/techreports/TRCS96-11.ps
Refering-URL: http://www.cs.ucsb.edu/TRs/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Analysis of Quorum-Based Protocols for Distributed (k+1)-Exclusion  
Author: Divyakant Agrawal, Omer Egecioglu, and Amr El Abbadi 
Address: Santa Barbara, CA 93106, USA  
Affiliation: Department of Computer Science, University of California  
Abstract: A generalization of the majority quorum for the solution of the distributed (k + 1)-exclusion problem is proposed. This scheme produces a family of quorums of varying sizes and availabilities indexed by integral divisors r of k. The cases r = 1 and r = k correspond to known majority based quorum generation algorithms M AJ and DIV , whereas intermediate values of r interpolate between these two extremes. A cost and availability analysis of the proposed methods is also presented. An interesting result of this analysis is that in a reasonably reliable environment with a large number of sites, even protocols with low communication costs attain high availability.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> D. Agrawal and A. El Abbadi. </author> <title> Exploiting Logical Structures of Replicated Databases. </title> <journal> IPL, </journal> <volume> 33(5) </volume> <pages> 255-260, </pages> <month> Jan. </month> <year> 1990. </year>
Reference-contexts: The majority quorum algorithm [20, 7] for distributed mutual exclusion has been widely used to develop various quorum-based protocols for mutual exclusion as well as for (k + 1)-exclusion by a suitable partitioning of the sites. Agrawal and El Abbadi <ref> [1] </ref> partition the sites in a network to construct majority based quorums defined on hybrid logical structures such as a grid [12] and a tree [2]. Rangarajan and Tripathi [13] partition the sites into N classes and organize the classes to form a finite projective plane.
Reference: 2. <author> D. Agrawal and A. El Abbadi. </author> <title> An Efficient and Fault-tolerant Solution for Distributed Mutual Exclusion. </title> <journal> ACM Trans. on Computer Sys., </journal> <pages> pp. 1-20, </pages> <month> Feb. </month> <year> 1991. </year>
Reference-contexts: Agrawal and El Abbadi [1] partition the sites in a network to construct majority based quorums defined on hybrid logical structures such as a grid [12] and a tree <ref> [2] </ref>. Rangarajan and Tripathi [13] partition the sites into N classes and organize the classes to form a finite projective plane. Quorums are then defined using p N classes and within each class a majority of sites is chosen.
Reference: 3. <author> M. Ahamad and M. H. Ammar. </author> <title> Performance Characterization of Quorum-Consensus Algorithms for Replicated Data. </title> <journal> IEEE Trans. on Software Engineering, </journal> <volume> 15(4) </volume> <pages> 492-495, </pages> <month> Apr. </month> <year> 1989. </year>
Reference-contexts: For intermediate values of r, a sliding tradeoff between the number of quorum sets and quorum size is achieved. Our analysis of availability is based on estimates for truncated binomial sums <ref> [3, 13] </ref>, and the Vandermonde convolution identity.
Reference: 4. <author> D. Cohen. </author> <title> Basic Techniques of Combinatorial Theory. </title> <publisher> John Wiley & Sons, </publisher> <year> 1978. </year>
Reference-contexts: inequality (7) can be written in terms of q as 4 j=0 6m 3 2 4m X j q j : (8) Write 2 4 j=0 6m 3 2 6m X c j q j : c j = i=0 6m j i = 12m by the Vandermonde convolution identity <ref> [4, 16] </ref>. This means that the terms involving powers q j up to j = 3m on both sides of (8) are identical. <p> write D r (p) = (1 p) n fi fi fi j=0 n 2 q r 1 X j q j 5 fi fi fi Consider the coefficients c j in the expansion 2 q r 1 X j q j 5 = j=0 7 By the Vandermonde convolution identity <ref> [4, 16] </ref>, c j n , with equality in the range 0 j q r 1.
Reference: 5. <author> S. Fujita, M. Yamashita, and T. Ae. </author> <title> Distributed k-mutual exclusion problem and k-coteries. </title> <booktitle> In Proc. on the Symp. on Algorithms, </booktitle> <pages> pp. 22-31, </pages> <year> 1991. </year>
Reference-contexts: This solution reduces the number of required messages to achieve mutual exclusion. Recently, there has been a significant interest in fault-tolerant methods to solve the (k + 1)-exclusion problem based on the notion of quorums [7]. Fujita et al. <ref> [5] </ref> discuss some simple techniques and then propose a scheme with small quorum sizes. Huang et al. [8] propose an alternative method with small quorums and high availability in the presence of failures. <p> Quorums are then defined using p N classes and within each class a majority of sites is chosen. Kumar [11] uses the partitioning approach to recursively define hierarchical quorums based on the majority rule and quorums. Fujita et al. <ref> [5] </ref> also use a partitioning approach for (k + 1)-exclusion in which the sites are partitioned into k clusters and quorums are constructed so that mutual exclusion is ensured within each cluster. <p> When r = 1, the quorums correspond to those produced by M AJ (which partitions the sites into a single class), and when r = k, the quorums correspond to the quorums produced by DIV (which partitions the sites into k classes) <ref> [5] </ref>. For intermediate values of r, a sliding tradeoff between the number of quorum sets and quorum size is achieved. Our analysis of availability is based on estimates for truncated binomial sums [3, 13], and the Vandermonde convolution identity. <p> Note that quorums constructed to ensure the traditional mutual exclusion condition also ensure the above property. Hence, in order to eliminate trivial solutions to the (k + 1)-exclusion problem we add an additional restriction <ref> [5, 8] </ref>. (II) The k-Non-intersection Property. There exist k sets S 1 ; S 2 ; ; S k such that for any two distinct sets S i and S j , S i " S j = . The second property above is desirable for all values of k. <p> For (k + 1)-exclusion, it suffices to take the quorum size to be b n k+1 c + 1. This majority based construction for the (k + 1)-exclusion problem is referred to as M AJ <ref> [5] </ref>. Another approach for achieving (k + 1)-exclusion is to consider k instances of any mutual exclusion solution. A process wishing (k + 1) exclusive access to a resource acquires permission from any of the k instances. <p> Similarly, the k-non-intersection property is satisfied if each of the k processes choose a quorum from different instances of the mutual exclusion solution. This construction for the (k + 1)-exclusion problem is referred to as DIV <ref> [5] </ref>. The two generalizations M AJ and DIV of majority quorums for the solution of the (k + 1)-exclusion problem are at the opposite ends of a spectrum. <p> However, if the evaluation criterion includes the number of quorum sets produced, the outcome is not so trivial. Fujita et al. <ref> [5] </ref> conjectured that the partitioned approach restricts the number of ways a quorum can be selected and hence will provide inferior availability. First we explore this issue in the context of these two approaches and isolate the instances in which DIV actually performs better than M AJ.
Reference: 6. <author> H. Garcia-Molina and D. Barbara. </author> <title> How to assign votes in a distributed system. </title> <journal> J. of the ACM, </journal> <volume> 32(4) </volume> <pages> 841-860, </pages> <month> Oct. </month> <year> 1985. </year>
Reference-contexts: To ensure mutual exclusion the sets S i are required to satisfy the intersection property: For any i 6= j, S i " S j 6= . These and related concepts were formalized and analyzed in terms of the notions of quorums and coteries <ref> [7, 12, 6] </ref>. In (k + 1)-exclusion, up to k processes are allowed to access the resource simultaneously.
Reference: 7. <author> D. K. Gifford. </author> <title> Weighted Voting for Replicated Data. </title> <booktitle> In Proc. of 7th ACM Symp. on Operating Systems Principles, </booktitle> <pages> pp. 150-159, </pages> <month> Dec. </month> <year> 1979. </year>
Reference-contexts: This solution reduces the number of required messages to achieve mutual exclusion. Recently, there has been a significant interest in fault-tolerant methods to solve the (k + 1)-exclusion problem based on the notion of quorums <ref> [7] </ref>. Fujita et al. [5] discuss some simple techniques and then propose a scheme with small quorum sizes. Huang et al. [8] propose an alternative method with small quorums and high availability in the presence of failures. <p> Fujita et al. [5] discuss some simple techniques and then propose a scheme with small quorum sizes. Huang et al. [8] propose an alternative method with small quorums and high availability in the presence of failures. The majority quorum algorithm <ref> [20, 7] </ref> for distributed mutual exclusion has been widely used to develop various quorum-based protocols for mutual exclusion as well as for (k + 1)-exclusion by a suitable partitioning of the sites. <p> To ensure mutual exclusion the sets S i are required to satisfy the intersection property: For any i 6= j, S i " S j 6= . These and related concepts were formalized and analyzed in terms of the notions of quorums and coteries <ref> [7, 12, 6] </ref>. In (k + 1)-exclusion, up to k processes are allowed to access the resource simultaneously. <p> When k = 1, i.e., in the case of mutual exclusion, it is satisfied vacuously. 3 A General Paradigm for (k + 1)-Exclusion One of the simplest approaches to ensure mutual exclusion in a distributed system is to use majority quorums <ref> [7, 20] </ref> of size b n 2 c + 1. For 3-exclusion, we can reduce the size of the permission sets to b n 3 c + 1.
Reference: 8. <author> S. Huang, J. Jiang, and Y. Kuo. </author> <title> K-coteries for fault-tolerant k entries to a critical section. </title> <booktitle> In Proc. of 13th Int. Conf. on Dist. Comp. Sys., </booktitle> <pages> pp. 74-81, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: Recently, there has been a significant interest in fault-tolerant methods to solve the (k + 1)-exclusion problem based on the notion of quorums [7]. Fujita et al. [5] discuss some simple techniques and then propose a scheme with small quorum sizes. Huang et al. <ref> [8] </ref> propose an alternative method with small quorums and high availability in the presence of failures. <p> Note that quorums constructed to ensure the traditional mutual exclusion condition also ensure the above property. Hence, in order to eliminate trivial solutions to the (k + 1)-exclusion problem we add an additional restriction <ref> [5, 8] </ref>. (II) The k-Non-intersection Property. There exist k sets S 1 ; S 2 ; ; S k such that for any two distinct sets S i and S j , S i " S j = . The second property above is desirable for all values of k.
Reference: 9. <author> H. Kakugawa, S. Fujita, M. Yamashita, and T. Ae. </author> <title> Availability of k-Coteries. </title> <journal> IEEE Trans. on Computers, </journal> <volume> 42(5) </volume> <pages> 553-558, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: For intermediate values of r, a sliding tradeoff between the number of quorum sets and quorum size is achieved. Our analysis of availability is based on estimates for truncated binomial sums [3, 13], and the Vandermonde convolution identity. Recently, Kakugawa et al. <ref> [9] </ref> analyzed M AJ versus a centralized site solution adapted for (k + 1)-exclusion called SGL, and showed that for networks with low probability of site failure, M AJ provides optimal availability performance over all quorum-based mechanisms, whereas for sites with a high probability of failures SGL gives higher availability than <p> The sites are either fail-stop or may fail to send or receive messages. Communication links may fail by crashing, or by failing to deliver messages. Although quorum-based protocols are resilient both site and communication failures, our analysis assumes site failures only <ref> [13, 9] </ref>. Distributed mutual exclusion is a classical technique for providing access to shared resources. We postulate the existence of a resource in the network, which may be accessed by a single process at a time.
Reference: 10. <author> N. Krishnakumar and A. J. Bernstein. </author> <title> Bounded Ignorance in Replicated Systems. </title> <booktitle> In Proc. of 10th ACM Symp. on Prin. of Database Sys., </booktitle> <pages> pp. 63-74, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: In such a case, the system may restrict the number of broadcasting processes so as to control the level of congestion. Another application is in the context of replicated databases that allow bounded ignorance <ref> [10] </ref>, i.e., when transactions may specify that they do not need to be aware of the k most recent updates to the database.
Reference: 11. <author> A. Kumar. </author> <title> Hierarchical Quorum Consensus ANew Algorithm for Managing Replicated Data. </title> <journal> IEEE Trans. on Computers, </journal> <volume> 39(9) </volume> <pages> 996-1004, </pages> <month> Sep. </month> <year> 1991. </year>
Reference-contexts: Rangarajan and Tripathi [13] partition the sites into N classes and organize the classes to form a finite projective plane. Quorums are then defined using p N classes and within each class a majority of sites is chosen. Kumar <ref> [11] </ref> uses the partitioning approach to recursively define hierarchical quorums based on the majority rule and quorums.
Reference: 12. <author> M. Maekawa. </author> <title> A p n algorithm for mutual exclusion in decentralized systems. </title> <journal> ACM Trans. on Computer Systems, </journal> <volume> 3(2) </volume> <pages> 145-159, </pages> <month> May </month> <year> 1985. </year>
Reference-contexts: Agrawal and El Abbadi [1] partition the sites in a network to construct majority based quorums defined on hybrid logical structures such as a grid <ref> [12] </ref> and a tree [2]. Rangarajan and Tripathi [13] partition the sites into N classes and organize the classes to form a finite projective plane. Quorums are then defined using p N classes and within each class a majority of sites is chosen. <p> To ensure mutual exclusion the sets S i are required to satisfy the intersection property: For any i 6= j, S i " S j 6= . These and related concepts were formalized and analyzed in terms of the notions of quorums and coteries <ref> [7, 12, 6] </ref>. In (k + 1)-exclusion, up to k processes are allowed to access the resource simultaneously.
Reference: 13. <author> S. Ranagarajan and S. Tripathi. </author> <title> Robust Distributed Mutual Exclusion Algorithms. </title> <booktitle> In Proc. of 5th Int. Workshop on Distributed Algorithms, </booktitle> <pages> pp. 295-308, </pages> <month> Oct. </month> <year> 1991. </year> <booktitle> Lecture Notes in Computer Science, </booktitle> <volume> 579, </volume> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Agrawal and El Abbadi [1] partition the sites in a network to construct majority based quorums defined on hybrid logical structures such as a grid [12] and a tree [2]. Rangarajan and Tripathi <ref> [13] </ref> partition the sites into N classes and organize the classes to form a finite projective plane. Quorums are then defined using p N classes and within each class a majority of sites is chosen. <p> For intermediate values of r, a sliding tradeoff between the number of quorum sets and quorum size is achieved. Our analysis of availability is based on estimates for truncated binomial sums <ref> [3, 13] </ref>, and the Vandermonde convolution identity. <p> The sites are either fail-stop or may fail to send or receive messages. Communication links may fail by crashing, or by failing to deliver messages. Although quorum-based protocols are resilient both site and communication failures, our analysis assumes site failures only <ref> [13, 9] </ref>. Distributed mutual exclusion is a classical technique for providing access to shared resources. We postulate the existence of a resource in the network, which may be accessed by a single process at a time.
Reference: 14. <author> K. Raymond. </author> <title> A distributed algorithm for multiple entries to a critical section. </title> <journal> IPL, </journal> <volume> 30(4) </volume> <pages> 189-193, </pages> <month> Feb. </month> <year> 1989. </year>
Reference-contexts: Efficient and highly available solutions to the distributed (k + 1)-exclusion problem would be particularly useful for such applications. The distributed (k + 1)-exclusion problem was first solved by Raymond <ref> [14] </ref>, who provided a simple extension to the Ricart and Agrawala's mutual exclusion algorithm [15]. Srimani and Reddy [18] improved on this protocol by using the notion of privilege of Suzuki and Kasami [19]. This solution reduces the number of required messages to achieve mutual exclusion.
Reference: 15. <author> G. Ricart and A. K. Agrawala. </author> <title> An optimal algorithm for mutual exclusion in computer networks. </title> <journal> Communications of the ACM, </journal> <volume> 24(1) </volume> <pages> 9-17, </pages> <month> January </month> <year> 1981. </year>
Reference-contexts: Efficient and highly available solutions to the distributed (k + 1)-exclusion problem would be particularly useful for such applications. The distributed (k + 1)-exclusion problem was first solved by Raymond [14], who provided a simple extension to the Ricart and Agrawala's mutual exclusion algorithm <ref> [15] </ref>. Srimani and Reddy [18] improved on this protocol by using the notion of privilege of Suzuki and Kasami [19]. This solution reduces the number of required messages to achieve mutual exclusion.
Reference: 16. <author> J. Riordan. </author> <title> An Introduction to Combinatorial Analysis. </title> <publisher> Princeton Univ. Press, </publisher> <year> 1978. </year>
Reference-contexts: inequality (7) can be written in terms of q as 4 j=0 6m 3 2 4m X j q j : (8) Write 2 4 j=0 6m 3 2 6m X c j q j : c j = i=0 6m j i = 12m by the Vandermonde convolution identity <ref> [4, 16] </ref>. This means that the terms involving powers q j up to j = 3m on both sides of (8) are identical. <p> write D r (p) = (1 p) n fi fi fi j=0 n 2 q r 1 X j q j 5 fi fi fi Consider the coefficients c j in the expansion 2 q r 1 X j q j 5 = j=0 7 By the Vandermonde convolution identity <ref> [4, 16] </ref>, c j n , with equality in the range 0 j q r 1.
Reference: 17. <author> R. Schlichting and F. B. Schneider. </author> <title> Fail-Stop Processors: An Approach to Designing Fault-Tolerant Computing Systems. </title> <journal> ACM Trans. on Computer Systems, </journal> <volume> 1(3) </volume> <pages> 222-238, </pages> <month> Aug. </month> <year> 1982. </year>
Reference: 18. <author> P. K. Srimani and R. L. N. Reddy. </author> <title> Another distributed algorithm for multiple entries to a critical section. </title> <journal> IPL, </journal> <volume> 41(1) </volume> <pages> 51-57, </pages> <month> Jan. </month> <year> 1992. </year>
Reference-contexts: Efficient and highly available solutions to the distributed (k + 1)-exclusion problem would be particularly useful for such applications. The distributed (k + 1)-exclusion problem was first solved by Raymond [14], who provided a simple extension to the Ricart and Agrawala's mutual exclusion algorithm [15]. Srimani and Reddy <ref> [18] </ref> improved on this protocol by using the notion of privilege of Suzuki and Kasami [19]. This solution reduces the number of required messages to achieve mutual exclusion.
Reference: 19. <author> I. Suzuki and T. Kasami. </author> <title> A Distributed Mutual Exclusion Algorithm. </title> <journal> ACM Trans. on Computer Systems, </journal> <volume> 3(4) </volume> <pages> 344-349, </pages> <month> Nov. </month> <year> 1985. </year>
Reference-contexts: The distributed (k + 1)-exclusion problem was first solved by Raymond [14], who provided a simple extension to the Ricart and Agrawala's mutual exclusion algorithm [15]. Srimani and Reddy [18] improved on this protocol by using the notion of privilege of Suzuki and Kasami <ref> [19] </ref>. This solution reduces the number of required messages to achieve mutual exclusion. Recently, there has been a significant interest in fault-tolerant methods to solve the (k + 1)-exclusion problem based on the notion of quorums [7].
Reference: 20. <author> R. H. Thomas. </author> <title> A Majority Consensus Approach to Concurrency Control for Multiple Copy Databases. </title> <journal> ACM Trans. on Database Systems, </journal> <volume> 4(2) </volume> <pages> 180-209, </pages> <month> June </month> <year> 1979. </year>
Reference-contexts: Fujita et al. [5] discuss some simple techniques and then propose a scheme with small quorum sizes. Huang et al. [8] propose an alternative method with small quorums and high availability in the presence of failures. The majority quorum algorithm <ref> [20, 7] </ref> for distributed mutual exclusion has been widely used to develop various quorum-based protocols for mutual exclusion as well as for (k + 1)-exclusion by a suitable partitioning of the sites. <p> When k = 1, i.e., in the case of mutual exclusion, it is satisfied vacuously. 3 A General Paradigm for (k + 1)-Exclusion One of the simplest approaches to ensure mutual exclusion in a distributed system is to use majority quorums <ref> [7, 20] </ref> of size b n 2 c + 1. For 3-exclusion, we can reduce the size of the permission sets to b n 3 c + 1.

References-found: 20

