URL: http://wwwis.win.tue.nl/~wsinatma/Step.ps
Refering-URL: http://wwwis.win.tue.nl/~wsinatma/
Root-URL: http://www.win.tue.nl
Email: wsinlou@win.tue.nl  
Title: Project Performance Indicator Workbench (PPIW)  
Author: A.T.M. Aerts J. Blijenberg F.J. Heemstra R.J. Kusters L.J. Somers 
Keyword: Multi-project management, Process assessment and improvement, Software process metrics, Software process modeling, Software quality.  
Address: P.O. Box 513, 5600 MB Eindhoven, the Netherlands  
Affiliation: Eindhoven University of Technology  
Abstract:  
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> ABT Corporation, </institution> <address> http://www.abtcorp.com/pmw.html, New York. Project Workbench PMW. </address>
Reference-contexts: This statement holds for the (operational) project management responsible for the execution of IT-projects and for the multi-project management responsible for initiating, planning, assessing and evaluating projects. Project managers in most software development organizations use various methods, tools, and procedures. Examples are Function Point Analysis [2], Project Management Workbench <ref> [1] </ref> and Work Breakdown Structures [7]. Despite all these existing tools and aids, project assessment in the end relies mainly on experience from the past of the people involved. This is a highly subjective ground on which to base decisions. <p> Another requirement was that the tool should be able to access also data from a number of tools for collecting other kinds of project data, such as ESTEEM (the commercial successor of the MERMAID estimation tool set [11]), PMW <ref> [1] </ref> and SQUID [14]. The PPIW data model therefore should contain as a specialization the relevant parts of the data models of these tools. This led to the data model displayed in figure 2. General data model: generic part.
Reference: [2] <author> A. Albrecht and J. Gaffney. </author> <title> Software function, source lines of code, and development effort prediction: a software science validation. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 9(6) </volume> <pages> 639-647, </pages> <year> 1983. </year>
Reference-contexts: This statement holds for the (operational) project management responsible for the execution of IT-projects and for the multi-project management responsible for initiating, planning, assessing and evaluating projects. Project managers in most software development organizations use various methods, tools, and procedures. Examples are Function Point Analysis <ref> [2] </ref>, Project Management Workbench [1] and Work Breakdown Structures [7]. Despite all these existing tools and aids, project assessment in the end relies mainly on experience from the past of the people involved. This is a highly subjective ground on which to base decisions.
Reference: [3] <author> AMI Consortium c/o The AMI User Group. </author> <title> AMI Application of Metric in Industry, Metric Users' Handbook. </title> <type> ISBN 0 9522262 0 0. </type>
Reference-contexts: However, they do not provide a guide for identifying the data that need to be gathered in order to support assessment, evaluation, and benchmarking of projects. Apart from ISO and CMM, AMI (Application of Metric in Industry) is a successful approach to assess projects on a quantified basis <ref> [3] </ref>. One of the basic AMI assumptions is that measuring increases management insight in results and problems and employee's insight in business goals.
Reference: [4] <author> V. Basili and H. Rombach. </author> <title> The tame project: Towards improvement oriented software environments. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 14(6) </volume> <pages> 758-773, </pages> <year> 1988. </year>
Reference-contexts: The AMI approach leads to a goal-driven approach of which attribute to measure. This goal-driven approach is based on the Goal-Question-Metric approach <ref> [4] </ref>, which in turn has much in common with Deming's quality improvement cycle [8]. However, AMI does not provide the support needed to identify and gather relevant project data either. In particular, AMI is aimed at running projects in detail.
Reference: [5] <author> J. Blijenberg. </author> <title> Developing a project performance indicator workbench. </title> <type> Technical report, </type> <institution> Stan Ackermans Instituut, </institution> <year> 1996. </year> <note> ISBN 90-5282-671-4. </note>
Reference-contexts: Because of the exclu-sion on these relations, they can only be related to exactly one of the other entities. Prototype data model. The data model of the prototype (called Collest <ref> [5] </ref>) used in the pilots was a specialization of the general model, suited for IAD-projects. It is the data model in figure 3.
Reference: [6] <author> B. Boehm. </author> <title> Software engineering economics. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Clifs NJ, </address> <year> 1981. </year>
Reference-contexts: Within each type of life cycle a number of objects can be distinguished that are relevant for control purposes. These controlled objects will include items such as the project itself, subprojects, and project phases. Using a critical success factor approach [13] and taking into account relevant cost drivers <ref> [6] </ref> for each of these controlled objects, one is able to identify a number of performance indicators. These indicators provide sufficient information to serve as a basis for tracking and benchmark-ing purposes. Based on the framework methods, techniques, tools and procedures can be developed.
Reference: [7] <author> A. </author> <title> Case. </title> <booktitle> Information systems development: principles of computer aided software engineering. </booktitle> <publisher> Prentice-Hall, </publisher> <address> Engle-wood Clifs NJ, </address> <year> 1986. </year>
Reference-contexts: Project managers in most software development organizations use various methods, tools, and procedures. Examples are Function Point Analysis [2], Project Management Workbench [1] and Work Breakdown Structures <ref> [7] </ref>. Despite all these existing tools and aids, project assessment in the end relies mainly on experience from the past of the people involved. This is a highly subjective ground on which to base decisions.
Reference: [8] <author> W. </author> <title> Deming. Out of Crisis. </title> <institution> MIT Center for Advanced Engineering Study, </institution> <year> 1986. </year>
Reference-contexts: The AMI approach leads to a goal-driven approach of which attribute to measure. This goal-driven approach is based on the Goal-Question-Metric approach [4], which in turn has much in common with Deming's quality improvement cycle <ref> [8] </ref>. However, AMI does not provide the support needed to identify and gather relevant project data either. In particular, AMI is aimed at running projects in detail. The problems described above are focused at a higher level of abstraction.
Reference: [9] <author> F. Heemstra, R. Kusters, H. Ruys, O. Salomons, and W. Aen-denroomer. Vitaal: </author> <title> a framework for designing metrics. </title> <editor> In A. Cowderoy, editor, </editor> <booktitle> Proceedings of the 7th European Software Control and Metrics Conference, </booktitle> <pages> pages 39-64, </pages> <address> Lon-don, </address> <year> 1996. </year> <pages> CSR. </pages>
Reference-contexts: In this way the PPIW gives a contribution toward making projects more visible. 3. Development The first step in realising the PPIW objectives is the development of a so-called conceptual framework <ref> [9] </ref>. This framework shows on a high level of abstraction what assessment and control of an information system development project means for the target group. <p> The finished tool set will provide the generic PPIW this project was aimed at: a generic tool set and accompanying methods that enable a local for local approach towards project tracking and benchmarking. From the experience gained in this project we conclude that the framework proposed in <ref> [9] </ref> provides the right information for controlling projects. Note that the kind of met-rics needed at the multi-project level is rather different from the more quantitative metrics used to measure daily progress in a project.
Reference: [10] <author> W. Humphrey. </author> <title> Managing the Software Process. </title> <publisher> Addison Wesley, </publisher> <address> Reading MA, </address> <year> 1989. </year>
Reference-contexts: The main focus in ISO is structuring and formalizing the business processes by means of the development of manuals, guidelines and procedures. Also, the IT-world pays much attention to `process-assessments' [17], that is to the determination of the maturity level of an IT-development process. The Capability Maturity Model <ref> [10] </ref> is the best known example in this area. Depending on the maturity level specific actions have to be carried out in the field of project control and/or information system development. ISO- and CMM-activities try to give customers insight into the performance level of the development organization.
Reference: [11] <author> P. Kok, B. Kitchenham, and J. Kirakowski. </author> <title> The mermaid approach to software cost estimation, esprit project 2046. </title> <booktitle> In ESPRIT'90, </booktitle> <pages> pages 296-314. </pages> <publisher> Kluwer Academic Press, </publisher> <year> 1990. </year>
Reference-contexts: Another requirement was that the tool should be able to access also data from a number of tools for collecting other kinds of project data, such as ESTEEM (the commercial successor of the MERMAID estimation tool set <ref> [11] </ref>), PMW [1] and SQUID [14]. The PPIW data model therefore should contain as a specialization the relevant parts of the data models of these tools. This led to the data model displayed in figure 2. General data model: generic part.
Reference: [12] <author> R. Rock-Evans. </author> <title> Analysis within the systems development life-cycle. </title> <publisher> Pergamon Infotech, </publisher> <address> Maidenhead, </address> <year> 1987. </year>
Reference: [13] <author> J. Rockard. </author> <title> Critical success factors. </title> <booktitle> Harvard Business Review, </booktitle> <pages> pages 81-91, </pages> <month> March-April </month> <year> 1979. </year>
Reference-contexts: Within each type of life cycle a number of objects can be distinguished that are relevant for control purposes. These controlled objects will include items such as the project itself, subprojects, and project phases. Using a critical success factor approach <ref> [13] </ref> and taking into account relevant cost drivers [6] for each of these controlled objects, one is able to identify a number of performance indicators. These indicators provide sufficient information to serve as a basis for tracking and benchmark-ing purposes.
Reference: [14] <author> Squid, </author> <title> esprit project 8436. </title>
Reference-contexts: Another requirement was that the tool should be able to access also data from a number of tools for collecting other kinds of project data, such as ESTEEM (the commercial successor of the MERMAID estimation tool set [11]), PMW [1] and SQUID <ref> [14] </ref>. The PPIW data model therefore should contain as a specialization the relevant parts of the data models of these tools. This led to the data model displayed in figure 2. General data model: generic part.
Reference: [15] <editor> R. Tolido. IAD. </editor> <publisher> Academic Service, </publisher> <year> 1995. </year>
Reference-contexts: This led to the data model displayed in figure 2. General data model: generic part. The left hand side of figure 2 represents the generic description of life cycles and their composition. Life Cycle defines a number of Controlled Objects. An example of a Life Cycle is IAD <ref> [15, 18] </ref>, which defines the Controlled Objects (phases) `Definition Study', `Pilot Development', and `Pilot Introduction'. A Controlled Object may contain a number of Measurements. Objects defined by Measurement could be the moments of measurement that are defined by the measurement framework.
Reference: [16] <author> J. Trienekens. </author> <title> Time for Quality. </title> <type> PhD thesis, </type> <institution> Eindhoven University of Technology, Eindhoven, </institution> <address> the Netherlands, </address> <year> 1994. </year> <note> (In Dutch). </note>
Reference-contexts: If we look at the current state of affairs with this in mind, we notice that the IT-industry recently has invested much effort in process improvement. There is an increased interest in ISO certification (ISO 9000-3) <ref> [16] </ref>. The main focus in ISO is structuring and formalizing the business processes by means of the development of manuals, guidelines and procedures. Also, the IT-world pays much attention to `process-assessments' [17], that is to the determination of the maturity level of an IT-development process.
Reference: [17] <author> M. Van Genuchten and F. Heemstra. </author> <title> Surviving is not a must. </title> <institution> De Automatiseringsgids, </institution> <month> November </month> <year> 1993. </year> <note> (In Dutch). </note>
Reference-contexts: There is an increased interest in ISO certification (ISO 9000-3) [16]. The main focus in ISO is structuring and formalizing the business processes by means of the development of manuals, guidelines and procedures. Also, the IT-world pays much attention to `process-assessments' <ref> [17] </ref>, that is to the determination of the maturity level of an IT-development process. The Capability Maturity Model [10] is the best known example in this area. Depending on the maturity level specific actions have to be carried out in the field of project control and/or information system development.
Reference: [18] <author> E. Yourdon. </author> <title> The decline and fall of the American programmer. </title> <publisher> Prentice-Hall, </publisher> <year> 1993. </year> <month> 9 </month>
Reference-contexts: This led to the data model displayed in figure 2. General data model: generic part. The left hand side of figure 2 represents the generic description of life cycles and their composition. Life Cycle defines a number of Controlled Objects. An example of a Life Cycle is IAD <ref> [15, 18] </ref>, which defines the Controlled Objects (phases) `Definition Study', `Pilot Development', and `Pilot Introduction'. A Controlled Object may contain a number of Measurements. Objects defined by Measurement could be the moments of measurement that are defined by the measurement framework.
References-found: 18

