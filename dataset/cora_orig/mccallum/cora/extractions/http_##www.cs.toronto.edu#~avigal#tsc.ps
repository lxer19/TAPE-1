URL: http://www.cs.toronto.edu/~avigal/tsc.ps
Refering-URL: http://www.cs.toronto.edu/~avigal/publications.html
Root-URL: http://www.cs.toronto.edu
Title: A Language for the Support of Constraints in Temporal Active Databases  
Author: Avigdor Gal Opher Etzion Arie Segev 
Keyword: Constraint languages, Active databases, Temporal databases, Database languages  
Note: The work was conducted while the author was in the Technion. He is currently at the  The work of this author was supported by the fund for the promotion of research at the Technion. The work of this author was supported by the Applied Mathematical Sciences Research Program of the Office of Energy Research, U.S. Department of Energy under Contract DE-AC03-76SF00098.  
Address: 32000, Israel  Berkeley, CA 94720, USA  Toronto, Toronto, Ontario, M5S 1A4 CANADA.  
Affiliation: Department of Information Systems Engineering Faculty of Industrial Engineering and Management Technion, Haifa  Haas School of Business, University of California and Information Computing Sciences Division, Lawrence Berkeley Laboratory  Department of Computer Science, University of  
Abstract: Complex applications in domains such as decision analysis and real time systems require a database that supports active enforcement of constraints with temporal aspects. In this paper we present a temporal active language for the support of constraints in temporal active databases. The language primitives are presented using examples and an EBNF, followed by a discussion of the language properties. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Chakravarthy and D. Mishra. </author> <title> An expressive event specification language for active databases. </title> <journal> Data & Knowledge Engineering, </journal> <volume> 13(3), </volume> <month> Oct. </month> <year> 1994. </year>
Reference-contexts: These extensions are discussed in [10]. 3 Points= (val1) 2, Dec 1 1994, [Dec 1 1994; Dec 1 1996) (val3) 2, N ov 12 1995; t x | -z - discussion of events' classification and detection techniques can be found in <ref> [1] </ref>, [3]. An update operation in a temporal active database updates a single object in a given temporal element. For example, an object can be inserted to the database or deleted from it. Object's variables can be modified as part of an update operation.
Reference: [2] <author> U.S. Chakravarthy. </author> <title> Rule management and evaluation: An active dbms perspective. </title> <booktitle> SIGMOD RECORD, </booktitle> <volume> 18(3) </volume> <pages> 20-28, </pages> <month> Sept. </month> <year> 1989. </year>
Reference-contexts: The inter-relationships of active and temporal capabilities were discussed in both research areas. Several works (e.g., <ref> [2] </ref>, and [11]) in the active database research area discuss the use of temporal events in active databases. Temporal models (e.g., [14], [18], [20], [17]) discuss the propagation of the temporal effect on the results of reactive activation of programs. <p> Consequently, the expressive power of the language is as powerful as the ECA model. The advantage of this language over other active database languages is its ability to represent time dependent operations. 3 The term ECA statement refers to a generic rule in HiPaC style <ref> [2] </ref>. 10 4.2 Types of temporal effect The temporal active model defines the following three types of temporal effect on operations: Temporal activation: Temporal activation of a temporal data dependency results in the generation of values with bounded temporal validity.
Reference: [3] <author> K.R. Dittrich and S. Gatziu. </author> <title> Time issues in active database systems. In R.T. </title> <editor> Snod-grass, editor, </editor> <booktitle> Proceedings of the International Workshop on Infrastructure for Temporal Databases, </booktitle> <address> Arlington, TX, </address> <month> June </month> <year> 1993. </year>
Reference-contexts: These extensions are discussed in [10]. 3 Points= (val1) 2, Dec 1 1994, [Dec 1 1994; Dec 1 1996) (val3) 2, N ov 12 1995; t x | -z - discussion of events' classification and detection techniques can be found in [1], <ref> [3] </ref>. An update operation in a temporal active database updates a single object in a given temporal element. For example, an object can be inserted to the database or deleted from it. Object's variables can be modified as part of an update operation.
Reference: [4] <author> O. Etzion. </author> <title> Active interdatabase dependencies. </title> <journal> Information Sciences, </journal> <volume> 75 </volume> <pages> 133-163, </pages> <year> 1993. </year>
Reference-contexts: In this paper we assume that both the matching clauses and the stabilizer clauses are given explicitly. Discussions of implicit matching and stabilizers clauses can be found in <ref> [4] </ref>, [6]. 3.2 Derive A derive operation is an operation that maintains a data dependency by deriving the values of variables. For example, Fine-Due:=15 * (Violating-Speed Speed-Limit) defines an operation that derives the fine that is due for a given traffic violation.
Reference: [5] <author> O. Etzion. </author> <title> PARDES | a data-driven oriented active database model. </title> <booktitle> SIGMOD RECORD, </booktitle> <volume> 22(1) </volume> <pages> 7-14, </pages> <month> Mar </month> <year> 1993. </year>
Reference: [6] <author> O. Etzion and B. Dahav. </author> <title> Self-stabilization in databse consistency maintenance. </title> <type> Technical Report ISE-TR-95-1, </type> <institution> Technion-Israel Institute of Technology, </institution> <month> Feb </month> <year> 1995. </year>
Reference-contexts: A stabilizer is an alternative operation activated in the wake of a constraint violation to restore the database's consistency. The trivial, and most conservative stabilizer is abort, in which a transaction that violates the constraint fails. In the example given above we can use another mechanism, repair transaction <ref> [6] </ref>, that would change the input transaction's value to be exactly $500. When the participants of an operation clause are not of the same class, we use a matching process to identify the objects that are involved in the operation. <p> In this paper we assume that both the matching clauses and the stabilizer clauses are given explicitly. Discussions of implicit matching and stabilizers clauses can be found in [4], <ref> [6] </ref>. 3.2 Derive A derive operation is an operation that maintains a data dependency by deriving the values of variables. For example, Fine-Due:=15 * (Violating-Speed Speed-Limit) defines an operation that derives the fine that is due for a given traffic violation. <p> In case of a violation of the assertion, the Fine-Due variable receives the maximal possible fine, using a repair transaction stabilizer <ref> [6] </ref>. The Violation-Points are computed in (o 3 ). If the driver passes a traffic school course, then all of the driver's previous points are erased. Otherwise, the number of the points is set to be 2.
Reference: [7] <author> O. Etzion, A. Gal, and A. Segev. </author> <title> Temporal active databases. </title> <booktitle> In Proceedings of the International Workshop on an Infrastructure for Temporal Database, </booktitle> <month> June </month> <year> 1993. </year>
Reference-contexts: Rules that affect past or future valid times where briefly discussed in the temporal infrastructure recommendations report [16]. A more thorough discussion of possible inter-relationships of rules and temporal elements was presented in <ref> [7] </ref>. In this paper we introduce a temporal active language that encapsulates a wide range of temporal constraints and active capabilities. The main contribution of this paper, as discussed in sections 3 and 4, is the clear and precise description of the semantics of the language.
Reference: [8] <author> S.K. Gadia. </author> <title> The role of temporal elements in temporal databases. </title> <journal> Data Engineering Bulletin, </journal> <volume> 7 </volume> <pages> 197-203, </pages> <year> 1988. </year> <month> 12 </month>
Reference-contexts: These time types are expressed using a temporal element <ref> [8] </ref>, which is a finite union of time intervals (e.g., [Jan 1 1995, May 12 1995) [ [Aug 22 1995, Jan 3 1996)). In the rest of the paper we assume that the granularity of all time variables is a single day.
Reference: [9] <author> A. Gal, O. Etzion, and A. Segev. </author> <title> Extended update functionality in temporal databases. </title> <type> Technical Report ISE-TR-94-1, </type> <institution> Technion|Israel Institute of Technology, </institution> <month> Sept. </month> <year> 1994. </year>
Reference: [10] <author> A. Gal, O. Etzion, and A. Segev. </author> <title> Representation of highly-complex knowledge in a database. </title> <journal> Journal of Intelligent Information Systems, </journal> <volume> 3(2) </volume> <pages> 185-203, </pages> <month> Mar </month> <year> 1994. </year>
Reference-contexts: A thorough 1 Additional attributes of information about source, validity, accessibility, etc., can be added to a state-element. These extensions are discussed in <ref> [10] </ref>. 3 Points= (val1) 2, Dec 1 1994, [Dec 1 1994; Dec 1 1996) (val3) 2, N ov 12 1995; t x | -z - discussion of events' classification and detection techniques can be found in [1], [3].
Reference: [11] <author> N. Gehani, H.V. Jagadish, and O. Shmueli. </author> <title> Composite event specification in active databases. </title> <booktitle> In International Conference on Very Large Databases, </booktitle> <address> Vancouver, Canada, </address> <month> Aug </month> <year> 1992. </year>
Reference-contexts: The inter-relationships of active and temporal capabilities were discussed in both research areas. Several works (e.g., [2], and <ref> [11] </ref>) in the active database research area discuss the use of temporal events in active databases. Temporal models (e.g., [14], [18], [20], [17]) discuss the propagation of the temporal effect on the results of reactive activation of programs.
Reference: [12] <author> C.S. Jensen et al. </author> <title> A consensus glossary of temporal database concepts. </title> <journal> ACM SIGMOD Record, </journal> <volume> 23(1) </volume> <pages> 52-63, </pages> <year> 1994. </year>
Reference-contexts: We use a bi-temporal database <ref> [12] </ref> with a valid time (t v ), designating the time points at which the value is considered to be true in the modeled reality, and transaction time (t x ), designating the time when a value becomes current in the database.
Reference: [13] <author> C.S. Jensen and L. Mark. </author> <title> A framework for vacuuming temporal databases. </title> <type> Technical Report CS-TR-2516, </type> <institution> University of Maryland, Dept of CS, College Park, MD 20742, </institution> <month> August </month> <year> 1990. </year>
Reference: [14] <author> M.R. </author> <title> Klopprogge and P.C. Lockmann. Modeling information preserving databases; consequences of the concept of time. </title> <booktitle> In Proceedings of the International Conference of VLDB, </booktitle> <address> Florence, Italy, </address> <year> 1983. </year>
Reference-contexts: The inter-relationships of active and temporal capabilities were discussed in both research areas. Several works (e.g., [2], and [11]) in the active database research area discuss the use of temporal events in active databases. Temporal models (e.g., <ref> [14] </ref>, [18], [20], [17]) discuss the propagation of the temporal effect on the results of reactive activation of programs. Rules that affect past or future valid times where briefly discussed in the temporal infrastructure recommendations report [16].
Reference: [15] <author> S.B. Navathe and R. Ahmed. </author> <title> A temporal relational model and a query language. </title> <journal> Information Sciences, </journal> <volume> 49 </volume> <pages> 147-175, </pages> <year> 1989. </year>
Reference: [16] <author> N. Pissinou et al. </author> <title> Towards an infrastructure for temporal databases. </title> <type> Technical Report TR 94-01, </type> <institution> The University of Arizona, </institution> <month> Mar </month> <year> 1994. </year>
Reference-contexts: Temporal models (e.g., [14], [18], [20], [17]) discuss the propagation of the temporal effect on the results of reactive activation of programs. Rules that affect past or future valid times where briefly discussed in the temporal infrastructure recommendations report <ref> [16] </ref>. A more thorough discussion of possible inter-relationships of rules and temporal elements was presented in [7]. In this paper we introduce a temporal active language that encapsulates a wide range of temporal constraints and active capabilities.
Reference: [17] <author> N.L. Sarda. HSQL: </author> <title> Historical query language. In Temporal Databases, </title> <booktitle> chapter 5, </booktitle> <pages> pages 110-140. </pages> <publisher> The Benjamin/Commings Publishing Company, Inc., </publisher> <address> Redwood City, CA., </address> <year> 1993. </year>
Reference-contexts: The inter-relationships of active and temporal capabilities were discussed in both research areas. Several works (e.g., [2], and [11]) in the active database research area discuss the use of temporal events in active databases. Temporal models (e.g., [14], [18], [20], <ref> [17] </ref>) discuss the propagation of the temporal effect on the results of reactive activation of programs. Rules that affect past or future valid times where briefly discussed in the temporal infrastructure recommendations report [16]. A more thorough discussion of possible inter-relationships of rules and temporal elements was presented in [7].
Reference: [18] <author> S.Y.W. Su and H.M. Chen. </author> <title> A temporal knowledge representation model OSAM*/T and its query language OQL/T. </title> <booktitle> In Proceedings of the International Conference on VLDB, </booktitle> <year> 1991. </year>
Reference-contexts: The inter-relationships of active and temporal capabilities were discussed in both research areas. Several works (e.g., [2], and [11]) in the active database research area discuss the use of temporal events in active databases. Temporal models (e.g., [14], <ref> [18] </ref>, [20], [17]) discuss the propagation of the temporal effect on the results of reactive activation of programs. Rules that affect past or future valid times where briefly discussed in the temporal infrastructure recommendations report [16].
Reference: [19] <author> G. Wiederhold, S. Jajodia, and W. Litwin. </author> <title> Dealing with granularity of time in temporal databases. </title> <editor> In R. Anderson et al., editors, </editor> <booktitle> Lecture Notes in Computer Science 498, </booktitle> <pages> pages 124-140. </pages> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference-contexts: In the rest of the paper we assume that the granularity of all time variables is a single day. A discussion regarding the handling of different granularities can be found in <ref> [19] </ref>. The data model employed in this paper can augment any data model that supports operations at the attribute level. In particular, one may assume an object-oriented model, in which each class has its properties, or a relational model, in which each relation has its columns.
Reference: [20] <author> G.T.J. Wuu. SERQL: </author> <title> An ER query language supporting temporal data retrieval. </title> <booktitle> In The Proceedings of the 10th International Pheonix Conference on Computers and Communications, </booktitle> <month> Mar </month> <year> 1991. </year> <month> 13 </month>
Reference-contexts: The inter-relationships of active and temporal capabilities were discussed in both research areas. Several works (e.g., [2], and [11]) in the active database research area discuss the use of temporal events in active databases. Temporal models (e.g., [14], [18], <ref> [20] </ref>, [17]) discuss the propagation of the temporal effect on the results of reactive activation of programs. Rules that affect past or future valid times where briefly discussed in the temporal infrastructure recommendations report [16].
References-found: 20

