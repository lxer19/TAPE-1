URL: http://www.cse.ogi.edu/DISC/DIOM/online_pub/papers/cikm95.ps
Refering-URL: http://www.cse.ogi.edu/DISC/DIOM/publication.html
Root-URL: http://www.cse.ogi.edu
Email: email: lingliu@cs.ualberta.ca  email: calton@cse.ogi.edu  
Title: The Distributed Interoperable Object Model and Its Application to Large-scale Interoperable Database Systems  
Author: Ling Liu Calton Pu 
Address: GSB 615, Edmonton, Alberta T6G 2H1 Canada  P.O.Box 91000 Portland, Oregon 97291-1000 USA  
Affiliation: Department of Computing Science University of Alberta  Dept. of Computer Science and Engineering Oregon Graduate Institute  
Abstract: A large-scale interoperable database system operating in a dynamic environment should provide uniform access user interface to its components, scalability to larger networks, evolution of database schema and applications, composabil-ity of client and server components, and preserve component autonomy. To address the research issues presented by such systems, we introduce the Distributed Interopera-ble Object Model (DIOM). DIOM's main features include the explicit representation of and access to semantics in data sources through the DIOM base interfaces, the use of interface abstraction mechanisms such as import, specialization, generalization, and aggregation. 
Abstract-found: 1
Intro-found: 1
Reference: [harvest:95] <author> C.M. Bowman and P.B. Danzig and D.R. Hardy and Udi Manber and Michael F. Schwartz. </author> <title> The Harvest information discovery and access system. </title> <booktitle> Proceedings of the Second International World Wide Web Conference, </booktitle> <month> Oct. </month> <year> 1994 </year>
Reference-contexts: Diorama approach allows new sources to become useful to the DIOM users as soon as a wrapper is supplied. This approach allows a flexible integration of information resources gathered by other mediators or resource discovery systems <ref> [harvest:95, Hector:95, Wie:92] </ref>. For a further discussion, refer to [LP:95]. In the middle right of Figure 1, the DIOM meta object library consists of DIOM interface repository and DIOM implementation repository.
Reference: [BHP:92] <author> M.W.Bright and A.R. Hurson and Simin H. Pakzad. </author> <title> A Taxonomy and Current Issues in Multidatabase Systems. </title> <booktitle> IEEE Computer, </booktitle> <year> 1988. </year>
Reference-contexts: 1 Introduction Many papers on multidatabase systems or federated database systems <ref> [BHP:92, AS:90, SL:90] </ref>, focused on the resolution of schematic and semantic incompatibilities among autonomous and heterogeneous component databases in relatively static system configurations.
Reference: [garlic:95] <author> M.J. Carey and L.M. Haas and P.M. Schwarz et al.. </author> <title> Towards heterogeneous multimedia information systems: the Garlic approach. </title> <type> Technical Report, </type> <institution> IBM Almaden Research Center, </institution> <year> 1994. </year>
Reference-contexts: Recent research in database interoperability has started to pay more attention to interoperation architectures that may support both tight-coupling and loose-coupling [FM:93, Hector:95, Pu:93]. A few prototype systems are under development. Examples include the Garlic project at IBM Almaden Research Center <ref> [garlic:95] </ref>, which targets at developing a system and tools for the management of large quantities of heterogeneous multimedia information, and the TSIMMIS project at Stanford [Hector:95], which proposes an object exchange model (OEM) and a declarative language (LOREL) to intelligent information mediation.
Reference: [ODMG:93] <author> R. Cattell and et al.. </author> <title> The Object Database Standard: ODMG-93 (Release 1.1). </title> <publisher> Morgan Kauf-mann, </publisher> <year> 1994. </year>
Reference-contexts: Recently, a consortium of major OODBMS vendors proposed a candidate for such a model, called ODMG-93 object database standard <ref> [ODMG:93] </ref>, which was developed by adding database features to the OMG object model standard. Therefore, we adopt the ODMG-93 proposal as a starting point, and add a number of extensions in order to build integrated views of data across multiple data repositories and to support USECA properties.
Reference: [AS:90] <author> Ahmed K. Elmagarmid and Calton Pu. </author> <title> Special Issue on Heterogeneous Databases. </title> <journal> ACM Computing Surveys, Vol.24, </journal> <volume> No.12, </volume> <year> 1990. </year>
Reference-contexts: 1 Introduction Many papers on multidatabase systems or federated database systems <ref> [BHP:92, AS:90, SL:90] </ref>, focused on the resolution of schematic and semantic incompatibilities among autonomous and heterogeneous component databases in relatively static system configurations.
Reference: [FM:93] <author> D.Fang, S.Ghandeharizadeh, D.Mcleod and A. </author> <title> Si. The design, implementation, and evaluation of an object-based sharing mechanism for federated database systems. </title> <booktitle> Proc. </booktitle> <address> ICDE, </address> <year> 1993. </year>
Reference-contexts: Recent research in database interoperability has started to pay more attention to interoperation architectures that may support both tight-coupling and loose-coupling <ref> [FM:93, Hector:95, Pu:93] </ref>. A few prototype systems are under development.
Reference: [GMS:94] <author> C. Goh and S. Madnick and M. Siege. </author> <title> Context interchange: overcoming the challenges of large-scale interoperable database systems in a dynamic environment. </title> <booktitle> Proc. of CIKM 1994. </booktitle>
Reference-contexts: DIOM is mainly motivated by the mediator architecture [Wie:92] and the Context Interchange approach <ref> [GMS:94] </ref>. For example, the idea of using repository wrapper to bridge between the interoperable database system and the individual component repositories is to some extent encouraged by the mediator approach.
Reference: [Hector:95] <author> Hector Garcia-Molina and et al.. </author> <title> The TSIMMIS approach to Mediation: data models and language. </title> <institution> Stanford Univ. </institution> <type> Technical Report, </type> <year> 1994. </year>
Reference-contexts: Diorama approach allows new sources to become useful to the DIOM users as soon as a wrapper is supplied. This approach allows a flexible integration of information resources gathered by other mediators or resource discovery systems <ref> [harvest:95, Hector:95, Wie:92] </ref>. For a further discussion, refer to [LP:95]. In the middle right of Figure 1, the DIOM meta object library consists of DIOM interface repository and DIOM implementation repository. <p> Recent research in database interoperability has started to pay more attention to interoperation architectures that may support both tight-coupling and loose-coupling <ref> [FM:93, Hector:95, Pu:93] </ref>. A few prototype systems are under development. <p> A few prototype systems are under development. Examples include the Garlic project at IBM Almaden Research Center [garlic:95], which targets at developing a system and tools for the management of large quantities of heterogeneous multimedia information, and the TSIMMIS project at Stanford <ref> [Hector:95] </ref>, which proposes an object exchange model (OEM) and a declarative language (LOREL) to intelligent information mediation. DIOM is mainly motivated by the mediator architecture [Wie:92] and the Context Interchange approach [GMS:94].
Reference: [KS:91] <author> W. Kim and J. Seo. </author> <title> Classifying schematic and data heterogeneity in multidatabase systems. </title> <journal> IEEE Computer, Vol.24, No.2, </journal> <year> 1991. </year>
Reference-contexts: Consider Scalability. A large-scale interoperable database environment (e.g., three hundreds databases as opposed to three databases) presents challenging questions to the viability of loose-coupling approach to system development [KLK:91] and the tight-coupling integration framework that concentrates primarily on circumventing schematic and semantic heterogeneity <ref> [KS:91, SL:90] </ref>. As the number of databases participating the interoperable database system increases, the design of an integrated schema involving n different systems requires to reconcile an order of n 2 possibly conflicting representations (i.e., heterogeneity in semantics or in data formats).
Reference: [KLK:91] <author> T. Landers and W. Litwin and W. Kent. </author> <title> Language features for interoperability of databases with schematic discrepancies. </title> <booktitle> Proceedings of ACM SIGMOD, </booktitle> <year> 1991. </year>
Reference-contexts: Consider Scalability. A large-scale interoperable database environment (e.g., three hundreds databases as opposed to three databases) presents challenging questions to the viability of loose-coupling approach to system development <ref> [KLK:91] </ref> and the tight-coupling integration framework that concentrates primarily on circumventing schematic and semantic heterogeneity [KS:91, SL:90]. <p> In contrast, loose-coupling goes to another extreme by favoring zero schema integration, for example, by promoting integration and interoperability via a multidatabase query language <ref> [KLK:91] </ref>. It does not require the existence of an integrated schema, leaving many responsibilities, such as resolving semantic mismatch, dealing with multiple representations of data, and coping with dynamic system evolution, to the users.
Reference: [LP:95] <author> Ling Liu and Calton Pu. </author> <title> The distributed inter-operable object model and its application to large scale interoperable database systems. </title> <type> OGI Technical Report OGI-CSE-95-003. </type>
Reference-contexts: The distributed interoperable object model (DIOM) and the interface abstraction mechanisms are described in Section 3. Due to space constraints, illustrative examples and query compilation in DIOM databases are omitted here. Readers may refer to our technical report <ref> [LP:95] </ref> for further details. <p> Diorama approach allows new sources to become useful to the DIOM users as soon as a wrapper is supplied. This approach allows a flexible integration of information resources gathered by other mediators or resource discovery systems [harvest:95, Hector:95, Wie:92]. For a further discussion, refer to <ref> [LP:95] </ref>. In the middle right of Figure 1, the DIOM meta object library consists of DIOM interface repository and DIOM implementation repository. The interface repository supports dynamic linking of object interfaces (e.g., which data sources provide relevant information requested by a given application). <p> A DIOM database consists of a collection of DIOM objects. DIOM objects are composed through dynamically binding data from multiple data repositories provided by the underlying component systems. All queries and request for data and services may be formulated using DIOM interface query language (IQL) <ref> [LP:95] </ref>. The DIOM-IDL compiler first check the validity and the type-closure of each import specification in the DIOM interfaces, generates the complete import schema, and then performs mapping of IDL syntax into the DIOM repository implementation language. <p> Finally, the distinction allows a better control to the addition of new data types. Due to the space limit, in what follows, we briefly describe the DIOM compound interface composition mechanisms and omit the DIOM type hierarchy and the illustrative examples. Readers may refer to our technical report <ref> [LP:95] </ref> for details. 3.3 Interface Abstraction Mechanism: Aggregation The aggregation abstraction is a mechanism that allows to compose a new interface from a number of existing interfaces such that objects of the container interface may access the objects of component interfaces directly. <p> In the first phase of DIOM implementation, the specialization abstraction is only supported for construction of a new interface based on one or more base interfaces whose scope is the same data repository (see <ref> [LP:95] </ref> for more detail). 3.6 The Import Mechanism The import mechanism is designed for importing selected portions of the data from a given export schema, instead of importing everything that is available. <p> For a data repository that manages complex objects, the import mechanism performs the automatic checking of type closure property and referential integrity of the imported types/classes. Using the import mechanism, a number of benefits (such as simplicity, adaptability, extensibility, and robustness) can be obtained. Readers may Refer to <ref> [LP:95] </ref> for further detail and examples. 4 Related Work Over the last decade, many published results on database interoperability have primarily focused on resolving schematic and semantic incompatibilities arising from autonomy of the underlying databases [DOM92]. They use two integration strategies: tight-coupling and loose-coupling [SL:90]. <p> Third, the design of both the DIOM interfaces and the Diorama architecture have given the full respect to the autonomy of component systems. Technical details can be found in our technical report <ref> [LP:95] </ref>. In addition, conflict resolution is considered secondary to the explicit representation of disparate data semantics in DIOM. Thus, the DIOM approach does not require any commitment to a canonical, predefined integration representation of component databases.
Reference: [DOM92] <author> Ozsu, M.T. and Dayal, U. and Valduriez, P. </author> <title> Distributed Object Management. </title> <publisher> Morgan Kaufman. </publisher>
Reference-contexts: Readers may Refer to [LP:95] for further detail and examples. 4 Related Work Over the last decade, many published results on database interoperability have primarily focused on resolving schematic and semantic incompatibilities arising from autonomy of the underlying databases <ref> [DOM92] </ref>. They use two integration strategies: tight-coupling and loose-coupling [SL:90]. Tight-coupling insists on total schema integration. Since the creation and maintenance of such an integrated schema has been recognized as a fundamental roadblock towards system scalability and evolution, tight-coupling is generally considered a small-system strategy.
Reference: [Pu:93] <author> Calton Pu. </author> <title> Superdatabases for composition of heterogeneous databases. Multidatabase Systems: An Advanced Solutions for Global Information Sharing, </title> <editor> ed. A.R. Hurson, M.W. Bright, and S.Pakza, </editor> <publisher> IEEE CS, </publisher> <year> 1993. </year>
Reference-contexts: Recent research in database interoperability has started to pay more attention to interoperation architectures that may support both tight-coupling and loose-coupling <ref> [FM:93, Hector:95, Pu:93] </ref>. A few prototype systems are under development.
Reference: [SL:90] <author> A. Sheth and J.A. Larson. </author> <title> Federated database systems for managing distributed, heterogeneous, and autonomous databases. </title> <journal> ACM TODS, Vol.22, </journal> <volume> No.3, </volume> <year> 1990. </year>
Reference-contexts: 1 Introduction Many papers on multidatabase systems or federated database systems <ref> [BHP:92, AS:90, SL:90] </ref>, focused on the resolution of schematic and semantic incompatibilities among autonomous and heterogeneous component databases in relatively static system configurations. <p> Consider Scalability. A large-scale interoperable database environment (e.g., three hundreds databases as opposed to three databases) presents challenging questions to the viability of loose-coupling approach to system development [KLK:91] and the tight-coupling integration framework that concentrates primarily on circumventing schematic and semantic heterogeneity <ref> [KS:91, SL:90] </ref>. As the number of databases participating the interoperable database system increases, the design of an integrated schema involving n different systems requires to reconcile an order of n 2 possibly conflicting representations (i.e., heterogeneity in semantics or in data formats). <p> Readers may Refer to [LP:95] for further detail and examples. 4 Related Work Over the last decade, many published results on database interoperability have primarily focused on resolving schematic and semantic incompatibilities arising from autonomy of the underlying databases [DOM92]. They use two integration strategies: tight-coupling and loose-coupling <ref> [SL:90] </ref>. Tight-coupling insists on total schema integration. Since the creation and maintenance of such an integrated schema has been recognized as a fundamental roadblock towards system scalability and evolution, tight-coupling is generally considered a small-system strategy.
Reference: [Wie:92] <author> Gio Wiederhold. </author> <booktitle> Mediators in the Architecture of Future Information System. IEEE Computer 1992. </booktitle>
Reference-contexts: Diorama approach allows new sources to become useful to the DIOM users as soon as a wrapper is supplied. This approach allows a flexible integration of information resources gathered by other mediators or resource discovery systems <ref> [harvest:95, Hector:95, Wie:92] </ref>. For a further discussion, refer to [LP:95]. In the middle right of Figure 1, the DIOM meta object library consists of DIOM interface repository and DIOM implementation repository. <p> DIOM is mainly motivated by the mediator architecture <ref> [Wie:92] </ref> and the Context Interchange approach [GMS:94]. For example, the idea of using repository wrapper to bridge between the interoperable database system and the individual component repositories is to some extent encouraged by the mediator approach.
References-found: 15

