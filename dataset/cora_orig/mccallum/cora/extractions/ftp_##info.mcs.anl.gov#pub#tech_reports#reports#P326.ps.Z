URL: ftp://info.mcs.anl.gov/pub/tech_reports/reports/P326.ps.Z
Refering-URL: http://www.mcs.anl.gov/publications/abstracts/abstracts92.htm
Root-URL: http://www.mcs.anl.gov
Title: Fast Numerical Determination of Symmetric Sparsity Patterns  
Author: Richard G. Carter 
Note: Argonne Laboratory Preprint MCS-P326-0992  
Date: October 1992  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> B. Averick, R. Carter, and J. Mor e, </author> <title> The MINPACK-2 test problem collection (preliminary version), </title> <type> Tech. Report 91-76, </type> <institution> AHPCRC, University of Minnesota, </institution> <year> 1991. </year> <note> Also report ANL/MCS-TM-150. </note>
Reference-contexts: These systems are particularly common when the variables in the optimization problem correspond to mesh points in a discretization. For instance, Figure 1 represents the sparsity pattern arising from the optimal design of a composite material when regular triangular finite elements are used in the model discretization <ref> [1] </ref>, while Figure 2 represents the more complex sparsity pattern arising from the solution of the Ginzburg-Landau equations in two dimensions for superconducting materials [1],[7]. In many applications one can generate extremely efficient algorithms by taking advantage of the sparsity structure of rg if this structure is known. <p> We have successfully tested our algorithm on a number of real-world examples from the MINPACK-2 test collection <ref> [1] </ref>, such as the composite optimal design problem 1, but for brevity we present only the most interesting. Consider the sparsity structure shown in Figure 2, representing the fairly complex sparsity 24 pattern arising from the solution of the Ginzburg-Landau equations in two dimensions for super--conducting materials [1],[7].
Reference: [2] <author> T. Coleman and J. Cai, </author> <title> The cyclic coloring problem and estimation of sparse Hessian matrices, </title> <journal> SIAM J. Alg. Disc. Meth., </journal> <volume> 7 (1986), </volume> <pages> pp. 221-235. </pages>
Reference-contexts: For the nonsymmetric case we refer to this procedure as the CPR method. (Specialized methods exist for reducing work even further in the symmetric case (see, for instance, [8], [5], and <ref> [2] </ref>), but for reasons that will become clear later, we use the CPR method as the foundation of our algorithm.) Unfortunately, correctly specifying the sparsity structure by hand calculation is often difficult, tedious, and prone to error.
Reference: [3] <author> T. F. Coleman, B. S. Garbow, and J. J. Mor e, </author> <title> Software for estimating sparse Jacobian matrices, </title> <journal> ACM Trans. Math. Software, </journal> <volume> 10 (1984), </volume> <pages> pp. 329-345. </pages>
Reference-contexts: Efficient software for computing a nearly optimal partition and using it for determining rg is widely available in the public domain <ref> [3] </ref>. <p> Coleman and More [4] have established that the task of efficiently partitioning the columns is a graph coloring problem and have published software <ref> [3] </ref> that computes a nearly optimal partition (coloring) for a given pattern. <p> A description of their coloring algorithm is beyond the scope of this paper, but we remark that if a pattern has a maximum of k nonzeros per row, (a) the best we can expect is a partitioning into k groups, and (b) the Coleman-Garbow-More code <ref> [3] </ref> typically does almost this well. The reader is cautioned that pathological examples do exist for which the number of groups is as large as n, but such cases are rare in practice. Example 1. The best way to understand the CPR algorithm is to consider an actual example. <p> Software for fast sorting of integer arrays is crucial to any implementation. We used a heapsort for most sorting tasks. We selected Fortran 77 for our trial implementation to be easily compatible with existing code <ref> [3] </ref> for the graph coloring subproblem. Unfortunately, the variable storage requirements of our algorithm made this a poor decision. Storage capacity on a given computer was definitely the limiting factor on most of our test runs. We suggest C or Fortran 90 for future implementations.
Reference: [4] <author> T. Coleman and J. Mor e, </author> <title> Estimation of sparse Jacobian matrices and graph coloring problems, </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 20 (1983), </volume> <pages> pp. </pages> <month> 187-209. </month> <title> [5] , Estimation of sparse Hessian matrices and graph coloring problems, </title> <journal> Math. Programming, </journal> <volume> 28 (1984), </volume> <pages> pp. 243-270. </pages>
Reference-contexts: of the Office of Energy Research of the US Department of Energy under contract W-31-109-Eng-38. y Army High Performance Computing Research Center, Institute of Technology, University of Minnesota, 1100 Washington Avenue South, Minneapolis, Minnesota 55415 1 0 20 40 60 80 100 20 60 100 has been well analyzed [6], <ref> [4] </ref>. Efficient software for computing a nearly optimal partition and using it for determining rg is widely available in the public domain [3]. <p> Coleman and More <ref> [4] </ref> have established that the task of efficiently partitioning the columns is a graph coloring problem and have published software [3] that computes a nearly optimal partition (coloring) for a given pattern.
Reference: [6] <author> A. Curtis, M. Powell, and J. Reid, </author> <title> On the estimation of sparse Jacobian matrices, </title> <journal> IMA J. Appl. Math., </journal> <volume> 13 (1974), </volume> <pages> pp. 117-120. </pages>
Reference-contexts: Subprogram of the Office of Energy Research of the US Department of Energy under contract W-31-109-Eng-38. y Army High Performance Computing Research Center, Institute of Technology, University of Minnesota, 1100 Washington Avenue South, Minneapolis, Minnesota 55415 1 0 20 40 60 80 100 20 60 100 has been well analyzed <ref> [6] </ref>, [4]. Efficient software for computing a nearly optimal partition and using it for determining rg is widely available in the public domain [3]. <p> Curtis, Powell, and Reid <ref> [6] </ref> observed in 1974 that if d has components d j = ffi j 6= 0 if j 2 C and d j = 0 otherwise, then d and y uniquely determine H fl C .
Reference: [7] <author> J. Garner, M. Spanbauer, R. Benedek, K. Strandburg, S. Wright, and P. Plass-mann, </author> <title> Critical fields of Josephson-coupled superconducting multilayers, Physical Review B (to appear,1992). </title>
Reference: [8] <author> M. Powell and P. L. Toint, </author> <title> On the estimation of sparse Hessian matrices, </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 16 (1979), </volume> <pages> pp. 1060-1074. 28 </pages>
Reference-contexts: For the nonsymmetric case we refer to this procedure as the CPR method. (Specialized methods exist for reducing work even further in the symmetric case (see, for instance, <ref> [8] </ref>, [5], and [2]), but for reasons that will become clear later, we use the CPR method as the foundation of our algorithm.) Unfortunately, correctly specifying the sparsity structure by hand calculation is often difficult, tedious, and prone to error.
References-found: 7

