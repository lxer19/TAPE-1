URL: http://www.cs.brandeis.edu/~tim/Papers/Contours/QvEH.ps.Z
Refering-URL: http://www.cs.brandeis.edu/~tim/Papers/Contours/
Root-URL: http://www.cs.brandeis.edu
Email: tim@cs.brandeis.edu  ZHE QIU zqiu@csr.uvic.ca  vanemden@csr.uvic.ca  
Title: Interval Constraint Plotting for Interactive Visual Exploration of Implicitly Defined Relations  
Author: TIMOTHY J. HICKEY MAARTEN H. VAN EMDEN 
Keyword: interval constraints, constraint propagation, interval arithmetic, implicitly defined relations, honest plotting, interactive plotting  
Address: Waltham, MA 02254  Victoria, B.C., Canada V8W 3P6  
Affiliation: Michtom School of Computer Science, Brandeis University  Department of Computer Science, University of Victoria  
Note: Reliable Computing, 1-12 c Kluwer Academic Publishers, Boston. Manufactured in The Netherlands.  
Abstract: Conventional plotting programs adopt techniques such as adaptive sampling to approximate, but not to guarantee, correctness and completeness in graphing functions. Moreover, implicitly defined mathematical relations can impose an even greater challenge as they either cannot be plotted directly, or otherwise are likely to be misrepresented. In this paper, we address these problems by investigating interval constraint plotting as an alternative approach that plots a hull of the specified curve. We present some empirical evidence that this hull property can be achieved by a O(n) algorithm. Practical experience shows that the hull obtained is the narrowest possible whenever the precision of the underlying floating-point arithmetic is adequate. We describe IASolver, a Java applet [10], that serves as testbed for this idea. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Alefeld, G. and J. Herzberger, </author> <title> Introduction to Interval Computations, </title> <publisher> Academic Press, </publisher> <year> 1983. </year>
Reference-contexts: Let us consider as example the problem of computing x and y in a circle defined as x 2 + y 2 = 1. As is clear by inspection, all pairs of feasible x and y values occur in the range <ref> [1; 1] </ref>. Suppose that we have obtained additional information of x and y lying within [0:7; 0:8]. <p> Similar considerations rule out values less than 1 for v and values greater than 4 for w. Removing all inconsistent values from the a priori given intervals leaves the intervals <ref> [1; 2] </ref> for u and v and [3; 4] for w. The new bounds 1 and 3 are computed according to the rules of interval arithmetic and require rounding direction to be set appropriately. Thus interval constraints depends on interval arithmetic [1, 9, 11]. <p> The new bounds 1 and 3 are computed according to the rules of interval arithmetic and require rounding direction to be set appropriately. Thus interval constraints depends on interval arithmetic <ref> [1, 9, 11] </ref>. An interval constraint system performs such a constraint contraction for each of the primitive constraints. <p> The constraint relaxation algorithm terminates when this is found to be the case. For example, let us solve the system (1) with the IASolver implementation, starting with two-way infinite intervals for all variables. The system stabilizes with an interval contained in <ref> [1; 1] </ref> for x, and similarly for y. Adding the additional constraints that x 2 [0:7; 0:8] and y 2 [0:7; 0:8] results x and y to be narrowed to [0:7; 0:7141428429]. <p> These two lines are almost linear with slopes of about 14 and 12, respectively. grid size from 1 to 1024. The lower line in that Figure shows the corresponding data for the relation x 2 + y 2 = 1 with x; y initially in the interval <ref> [1; 1] </ref>. These data suggests that the growth rate is linear; a worthwhile improvement over the quadratic nature of the version directly derived from the raster-scan method. There is also a heurstic argument for linearity in the interval constraint plotting method.
Reference: 2. <author> Avitzur, R., G. Robbins and S. Newman, </author> <type> Graphing Calculator, </type> <institution> Apple MacOS desktop accessory. </institution>
Reference-contexts: Then one iterates among the primitive constraints, reducing interval to subinterval as far as necessary to remove values that are inconsistent with the constraint under consideration. Consider, for example, constraints of the form u + v = w. Suppose that the intervals for u; v and w are <ref> [0; 2] </ref>; [0; 2] and [3; 5] respectively, then all three intervals contain inconsistent values. Now v 2 and w 3 imply that u = w v 1. <p> Consider, for example, constraints of the form u + v = w. Suppose that the intervals for u; v and w are <ref> [0; 2] </ref>; [0; 2] and [3; 5] respectively, then all three intervals contain inconsistent values. Now v 2 and w 3 imply that u = w v 1. <p> Similar considerations rule out values less than 1 for v and values greater than 4 for w. Removing all inconsistent values from the a priori given intervals leaves the intervals <ref> [1; 2] </ref> for u and v and [3; 4] for w. The new bounds 1 and 3 are computed according to the rules of interval arithmetic and require rounding direction to be set appropriately. Thus interval constraints depends on interval arithmetic [1, 9, 11]. <p> Compared with the graph in problematic region near x = 0, but also allows more interesting features of the curve to be displayed at a higher resolution. an IAsolver interval constraint plot (on the right) of the relation sin (x cos y) = cos (y sin x) over the range <ref> [0; 2] </ref>. There exist a certain number of discrepancies where some regions are disjoint in the Mathematica plot, but not in the IAsolover plot.
Reference: 3. <author> Avitzur, R., O. Bachmann and N. Kajler, </author> <title> "From Honest to Intelligent Plotting," </title> <booktitle> Proc. of ISSAC'95, </booktitle> <address> July 1995, Montreal, Canada, </address> <pages> pp. 32-41, </pages> <publisher> ACM Press. </publisher>
Reference-contexts: Consider, for example, constraints of the form u + v = w. Suppose that the intervals for u; v and w are [0; 2]; [0; 2] and <ref> [3; 5] </ref> respectively, then all three intervals contain inconsistent values. Now v 2 and w 3 imply that u = w v 1. <p> Similar considerations rule out values less than 1 for v and values greater than 4 for w. Removing all inconsistent values from the a priori given intervals leaves the intervals [1; 2] for u and v and <ref> [3; 4] </ref> for w. The new bounds 1 and 3 are computed according to the rules of interval arithmetic and require rounding direction to be set appropriately. Thus interval constraints depends on interval arithmetic [1, 9, 11].
Reference: 4. <author> Bajaj, C., C. Hoffman, J. Hopcroft and R. Lynch, </author> <title> "Tracing Surface Intersections," </title> <booktitle> Computer Aided Geometric Design, </booktitle> <volume> 5, </volume> <year> 1988, </year> <pages> pp. 285-307. </pages>
Reference-contexts: Similar considerations rule out values less than 1 for v and values greater than 4 for w. Removing all inconsistent values from the a priori given intervals leaves the intervals [1; 2] for u and v and <ref> [3; 4] </ref> for w. The new bounds 1 and 3 are computed according to the rules of interval arithmetic and require rounding direction to be set appropriately. Thus interval constraints depends on interval arithmetic [1, 9, 11].
Reference: 5. <author> Benhamou, F. and W. </author> <title> Older, "Applying Interval Arithmetic to Real, Integer, and Boolean Constraints," </title> <journal> Journal of Logic Programming, </journal> <volume> 32(1), </volume> <year> 1997, </year> <pages> pp. 1-24. </pages>
Reference-contexts: Consider, for example, constraints of the form u + v = w. Suppose that the intervals for u; v and w are [0; 2]; [0; 2] and <ref> [3; 5] </ref> respectively, then all three intervals contain inconsistent values. Now v 2 and w 3 imply that u = w v 1. <p> Thus, results in the consistency method have the meaning: if a solution exists, then it is in the intervals found. Some references to interval constraints are <ref> [5, 6, 16, 17] </ref>. 3.3. Interval Constraint Plotting Conventional plotting, because of the single for loop, is linear, but restricted to functions. Raster-scan plotting handles relations, but is quadratic. It might be thought that quadraticity is inherent in the ability to handle relations. This is not so.
Reference: 6. <author> BNR, </author> <title> BNR Prolog User Guide and Reference Manual, </title> <institution> Software Engineering Center, Bell-Northern Research, </institution> <address> Ottawa, Canada, </address> <year> 1988. </year>
Reference-contexts: Thus, results in the consistency method have the meaning: if a solution exists, then it is in the intervals found. Some references to interval constraints are <ref> [5, 6, 16, 17] </ref>. 3.3. Interval Constraint Plotting Conventional plotting, because of the single for loop, is linear, but restricted to functions. Raster-scan plotting handles relations, but is quadratic. It might be thought that quadraticity is inherent in the ability to handle relations. This is not so.
Reference: 7. <author> Fateman, R., </author> <title> "Honest Plotting, Global Extrema and Interval Arithmetic," </title> <booktitle> Proc. of IS-SAC'92, </booktitle> <month> July </month> <year> 1992, </year> <title> Berkeley, CA, </title> <editor> U. S. </editor> <publisher> A., </publisher> <pages> pp. 216-223, </pages> <publisher> ACM Press. </publisher>
Reference-contexts: The method uses discrete points in a grid, hence is subject to the problem of undersampling. There is no guarantee of obtaining a hull of the contour. Several papers have used interval methods in plotting. Fateman <ref> [7] </ref> implemented interval arithmetic for the plotting of functions in Mathematica to enhance its plotting facilities. He pointed out that interval methods can give the hull property for graphs of functions, a property he referred to as "honest" plotting. 11 6.
Reference: 8. <author> Forsythe, G., </author> <title> "Pitfalls in Computation, or Why a Math Book isn't Enough," </title> <journal> Amer. Math. Monthly, </journal> <volume> 77, </volume> <year> 1970, </year> <pages> pp. 931-956. </pages>
Reference-contexts: In other words, "false positives" are possible. In our experience, the latter only arises in situations where rectangles are too large or where the precision of the underlying floating-point system is inadequate. The famous horrors of numerical analysis, the Wilkinson polynomial and other examples in <ref> [8] </ref> tend to show up as false positives in interval constraints. In interval constraint plotting the asymmetry between absence of false negatives and the possibility of false positives translates to the fact that a hull of the true plot is shown.
Reference: 9. <author> Hansen, E., </author> <title> Global Optimization Using Interval Analysis, </title> <publisher> Marcel Dekker, </publisher> <year> 1992. </year>
Reference-contexts: The new bounds 1 and 3 are computed according to the rules of interval arithmetic and require rounding direction to be set appropriately. Thus interval constraints depends on interval arithmetic <ref> [1, 9, 11] </ref>. An interval constraint system performs such a constraint contraction for each of the primitive constraints.
Reference: 10. <author> Hickey, T., IASolver, </author> <title> Java applet accessible via http://www.cs.brandeis.edu/~tim. </title>
Reference: 11. <author> Moore, R., </author> <title> Interval Analysis, </title> <publisher> Prentice-Hall, </publisher> <year> 1966. </year>
Reference-contexts: The new bounds 1 and 3 are computed according to the rules of interval arithmetic and require rounding direction to be set appropriately. Thus interval constraints depends on interval arithmetic <ref> [1, 9, 11] </ref>. An interval constraint system performs such a constraint contraction for each of the primitive constraints.
Reference: 12. <author> Snyder, J., </author> <title> "Interval Analysis for Computer Graphics," </title> <journal> Computer Graphics, </journal> <month> July </month> <year> 1992, </year> <pages> pp. 121-129. </pages>
Reference: 13. <author> Suffern, K., </author> <title> "Quadtree Algorithms for Contouring Functions of Two Variables," </title> <journal> The Computer Journal, </journal> <volume> 33, </volume> <year> 1990, </year> <pages> pp. 402-407. </pages>
Reference-contexts: The graph produced by IAsolver for this constraint, is identical to the graph in Figure 5 because IAsolver translates the constraint A=B = 1 into the equivalent constraint A = B fl 1. 5. Related Work Suffern <ref> [13] </ref> was concerned with the contouring of functions of two variables. This is an instance of an implicitly defined relation. This paper uses quadtrees to avoid the quadratic behaviour in the raster-scan plotting method. The illustrations suggest O (n) behaviour, but the paper is not concerned with this aspect.
Reference: 14. <author> Timmer, H., </author> <title> "Analytic Background for Computation of Surface Intersections," </title> <type> Douglas Aircraft Company Technical Memorandum CI-250-CAT-77-036, </type> <month> April </month> <year> 1977. </year>
Reference: 15. <author> Tupper, J., </author> <title> Graphing Equations with Generalized Interval Arithmetic. M. </title> <type> Sc thesis, </type> <institution> Department of Computer Science, University of Toronto, </institution> <year> 1996. </year> <note> 16. </note> <author> van Emden, M., </author> <title> "Value Constraints in the CLP Scheme," Constraints: </title> <journal> An International Journal, </journal> <volume> 2, </volume> <year> 1997, </year> <pages> pp. 163-183. </pages>
Reference: 17. <author> Van Hentenryck, P., L. Michel and Y. Deville, </author> <title> Numerica: A Modelling Language for Global Optimization, </title> <publisher> MIT Press, </publisher> <year> 1997. </year>
Reference-contexts: Thus, results in the consistency method have the meaning: if a solution exists, then it is in the intervals found. Some references to interval constraints are <ref> [5, 6, 16, 17] </ref>. 3.3. Interval Constraint Plotting Conventional plotting, because of the single for loop, is linear, but restricted to functions. Raster-scan plotting handles relations, but is quadratic. It might be thought that quadraticity is inherent in the ability to handle relations. This is not so.
Reference: 18. <author> Williams, R., </author> <title> "The Goblin Quadtree," </title> <journal> The Computer Journal, </journal> <volume> 31, </volume> <year> 1988, </year> <pages> pp. 358-363. </pages>
Reference-contexts: constraint system "r (x,y) && point (x,y) is in rect"; if (failure) -paint rect white; return;- if (rect small enough) -paint rect black; return;- split rect into four rectangles: nw, sw, se, ne; plot (nw); plot (sw); plot (se); plot (ne); - Execution of this algorithm follows a quad tree <ref> [18] </ref>, but only as far as necessary: interval constraint systems corresponding to large areas can fail and can then be painted in one step.
References-found: 17

