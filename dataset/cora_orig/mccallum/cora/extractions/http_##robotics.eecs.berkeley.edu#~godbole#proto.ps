URL: http://robotics.eecs.berkeley.edu/~godbole/proto.ps
Refering-URL: http://robotics.eecs.berkeley.edu/~godbole/protocol.html
Root-URL: 
Email: fgodbole,lygeros,ekta,akash,lind@eecs.berkeley.edug  
Title: Towards a Fault Tolerant AHS Design Part II: Design and Verification of Communication Protocols  
Author: D.N. Godbole, J. Lygeros, E. Singh, A. Deshpande, A.E. Lindsey 
Keyword: Automated Highway System Design, Fault Detection and Fault Tolerant Control, Safety, Verification, Coordination Layer  
Note: Research supported by the California PATH program, Institute of Transportation  under MOU 135  
Address: Berkeley, CA 94720  
Affiliation: Department of Electrical Engineering and Computer Sciences University of California  Studies, University of California, Berkeley  
Abstract: We present the design and verification of inter-vehicle communication protocols for degraded modes of operation on the Automated Highway System (AHS). We consider various hardware and sensor faults that can develop on the automated vehicle in an AHS and design discrete event supervisory controllers to stop the faulty vehicle or take it out of the highway in a safe manner. The protocols are verified for logical correctness by using automatic formal verification tools. This work presents an important step towards analyzing the safety of the AHS. 
Abstract-found: 1
Intro-found: 1
Reference: [Eskafi et al.1994] <author> Farokh Eskafi, Delnaz Khorramabadi, and Pravin Varaiya. SmartPath: </author> <title> An automated highway system simulator. </title> <type> PATH Technical Report UCB-ITS-94-4. </type> <institution> Institute of Transportation Studies, University of California, Berkeley, </institution> <year> 1994. </year>
Reference-contexts: But the performance of such a scheme is impossible to analyze discretely. Further tuning of this design, especially of the priorities and alternate strategies of Figure 8 should be performed after comparing the performance degradation of various schemes in AHS simulation such as SmartPath <ref> [Eskafi et al.1994] </ref>. Another factor that might lead to performance degradation is the aborting of normal mode maneuvers by faulty vehicles. This is unavoidable in case of many safety critical faults (those in classes A and B) as safety must take precedence over performance. <p> We proposed a refinement of this specification. We have also implemented our scheme on the highway simulator SmartPath <ref> [Eskafi et al.1994] </ref> and are using it to get performance estimates. It should be noted that the control of automated highways involves both continuous parameter and discrete parameter dynamics and it must be addressed in the hybrid systems framework. This is a topic for future research.
Reference: [Godbole et al.1994] <author> Datta N. Godbole, John Lygeros, and Shankar Sastry. </author> <title> Hierarchical hybrid control: An IVHS case study. </title> <booktitle> In IEEE Control and Decision Conference, </booktitle> <pages> pages 1592-1597, </pages> <year> 1994. </year>
Reference-contexts: The verification would be complete if we could show that this finite state description is indeed an abstraction of the regulation layer behavior. However, this task is not trivial, as indicated by the results in <ref> [Godbole et al.1994] </ref>. Similar problems are encountered when trying to verify claims about the improvement in throughput produced by our design.
Reference: [Godbole et al.1995] <author> Datta N. Godbole, Farokh Eskafi, Ekta Singh, and Pravin Varaiya. </author> <title> Design of an entry and exit maneuvers for AHS. </title> <booktitle> In American Control Conference, </booktitle> <pages> pages 3576-3580, </pages> <year> 1995. </year>
Reference-contexts: The controller is hierarchically organized into four layers and is distributed between the vehicle and the roadside. The backbone of the hierarchical controller is the design and verification of five basic maneuvers; join, split, lane change, entry and exit <ref> [Hsu et al.1994, Godbole et al.1995] </ref> that form an alphabet for describing the behavior of an automated vehicle on an AHS. The normal mode controller design is nearing completion by designing feedback control laws for each maneuver and design of roadside controllers to optimize the flow of traffic.
Reference: [Har'El and Kurshan1987] <author> Z. Har'El and R.P. Kurshan. </author> <title> Cospan User's Guide. </title> <institution> AT&T Bell Laboratories, </institution> <year> 1987. </year>
Reference-contexts: SUPR-TIE consists of two protocol processes: SUPR-FS, SUPR-ELC, and three environment processes: IP, LANE, and FSTYPE. The supervisor for TIE is shown in Figure 25. 3.3.4 Verification Results The formal FSM described in the previous section were transcribed into the language used by the verification software, COSPAN <ref> [Har'El and Kurshan1987] </ref>. The design was verified by using a set of monitors. The monitors themselves are finite state machines whose transitions depend on the states 13 and transitions of the design FSM.
Reference: [Hitchcock1994] <author> A. Hitchcock. </author> <title> A specification of an automated freeway with vehicle-borne intelligence. </title> <type> PATH Technical Report UCB-ITS-PRR-92-18, </type> <institution> Institute of Transportation Studies, University of California, Berkeley, </institution> <year> 1994. </year>
Reference-contexts: A safety requirement can be formalized using the following definitions, proposed in <ref> [Hitchcock1994] </ref>: Definition 1 A Catastrophe is a high speed collision. A possible catastrophe is a situation that can give rise to a high speed collision without an additional fault developing in the system. Definition 2 A Hazard is a situation in which one additional fault leads to a possible catastrophe. <p> Definition 2 A Hazard is a situation in which one additional fault leads to a possible catastrophe. Using the above definitions the following safety specification was proposed in <ref> [Hitchcock1994] </ref>: Definition 3 The AHS is safe if a hazard does not arise without two simultaneous faults of system components in a small neighborhood in space and time. Thus, the system is safe if up to 3 faults in any neighborhood cannot result in a catastrophe. <p> Such a probabilistic analysis was done by means of monte carlo simulations by Hitchcock <ref> [Hitchcock1994] </ref>. We would like to use analytical methods as much as possible, and use simulation to verify our predictions. It should also be noted that the above analysis does not take into account redundant hardware/equipment used for obtaining the same functional capability. <p> We formally verified that under certain assumptions on environment, regulation and physical layer responses, our design does not deadlock and either brings the faulty vehicle to a stop or takes it to the exit safely. 23 We showed that the original safety specification proposed in <ref> [Hitchcock1994] </ref>, that up to three faults in a neighborhood do not lead to a catastrophe, cannot be met. We proposed a refinement of this specification. We have also implemented our scheme on the highway simulator SmartPath [Eskafi et al.1994] and are using it to get performance estimates.
Reference: [Hsu et al.1994] <author> Ann Hsu, Farokh Eskafi, Sonia Sachs, and Pravin Varaiya. </author> <title> Protocol design for an automated highway system. Discrete Event Dynamic Systems, </title> <booktitle> 2(1) </booktitle> <pages> 183-206, </pages> <year> 1994. </year>
Reference-contexts: The controller is hierarchically organized into four layers and is distributed between the vehicle and the roadside. The backbone of the hierarchical controller is the design and verification of five basic maneuvers; join, split, lane change, entry and exit <ref> [Hsu et al.1994, Godbole et al.1995] </ref> that form an alphabet for describing the behavior of an automated vehicle on an AHS. The normal mode controller design is nearing completion by designing feedback control laws for each maneuver and design of roadside controllers to optimize the flow of traffic. <p> Take Immediate Exit Normal (TIE-N): This strategy is similar to the TIE strategy except the faulty vehicle uses normal lane change and split protocols of <ref> [Hsu et al.1994] </ref> instead of emergency lane change. The FSM diagram for TIE-N is similar to Figure 10, except the state ELC is replaced by LC. <p> The finite state machines (Appendix A) represent the inter-vehicle coordination required to carry out these maneuvers. Forced Split: This maneuver is similar to the split maneuver of <ref> [Hsu et al.1994] </ref>. It is used by a faulty vehicle to become a free agent. If the faulty vehicle is a follower it requests the leader of the platoon to initiate a forced split . The leader breaks the platoon at any desired location (see Figure 13). <p> Front Dock: This maneuver (Figure 15) is initiated by a platoon leader that wants to join with the vehicle in front but, because of a fault, it cannot execute the join maneuver of <ref> [Hsu et al.1994] </ref> which requires accelerating to close the gap and then decelerating to match the speed. The initiating vehicle requests the leader of the preceding platoon for a front dock . <p> In addition, we use the fact that the protocols for the normal mode of operation have been verified <ref> [Hsu et al.1994] </ref>, to abstract their behavior into smaller FSM. verification of three of the DM strategies; TIE, TIE-E and TIE-N. The panel on the left consists 11 of the informal state machines for the maneuvers and the supervisors introduced for verification. <p> Extensive work has already been done on fault detection, while [Lygeros et al.1995] presents a possible emergency procedure initiation scheme. 18 2. The normal mode protocols have been properly designed and verified. This is a valid assumption based on the results of <ref> [Hsu et al.1994] </ref>. 3. The regulation layer behavior is adequately summarized by the corresponding environment machine used in our verification.
Reference: [Lygeros and Godbole1994] <author> John Lygeros and Datta N. Godbole. </author> <title> An interface between continuous and discrete-event controllers for vehicle automation. </title> <booktitle> In American Control Conference, </booktitle> <pages> pages 801-805, </pages> <year> 1994. </year>
Reference-contexts: This proof will involve the interface between the coordination and regulation layers. We hope to be able to show this by means of automatic verification, under minimal and realistic assumptions about the regulation layer (see <ref> [Lygeros and Godbole1994] </ref> for related ideas for normal mode operation). Using the above definition we can now define the extent of a fault. Assume that the entire highway has been divided into cells like the ones discussed above and let l be the number of lanes.
Reference: [Lygeros et al.1995] <author> John Lygeros, Datta N. Godbole, and Mireille E. Broucke. </author> <title> Design of an extended architecture for degraded modes of operation of IVHS. </title> <booktitle> In American Control Conference, </booktitle> <pages> pages 3592-3596, </pages> <year> 1995. </year>
Reference-contexts: The normal mode controller design is nearing completion by designing feedback control laws for each maneuver and design of roadside controllers to optimize the flow of traffic. In <ref> [Lygeros et al.1995] </ref> the normal mode controller hierarchy was extended to deal with a wide range of faults and adverse environmental conditions. The work presented here forms the backbone for this extended architecture. The extended design of [Lygeros et al.1995] defines a set of new maneuvers used for safely removing the <p> In <ref> [Lygeros et al.1995] </ref> the normal mode controller hierarchy was extended to deal with a wide range of faults and adverse environmental conditions. The work presented here forms the backbone for this extended architecture. The extended design of [Lygeros et al.1995] defines a set of new maneuvers used for safely removing the faulty vehicles from the system. The maneuvers aim at producing minimal degradation of the highway throughput. The functional description of these maneuvers is outlined in [Lygeros et al.1995]. <p> The extended design of <ref> [Lygeros et al.1995] </ref> defines a set of new maneuvers used for safely removing the faulty vehicles from the system. The maneuvers aim at producing minimal degradation of the highway throughput. The functional description of these maneuvers is outlined in [Lygeros et al.1995]. In this paper, we formally specify each of the new maneuvers and mathematically prove that the design is logically correct. 1.1 Problem Formulation The extended architecture of [Lygeros et al.1995] requires additional control laws for each layer of the control hierarchy as the current normal mode design is <p> The functional description of these maneuvers is outlined in <ref> [Lygeros et al.1995] </ref>. In this paper, we formally specify each of the new maneuvers and mathematically prove that the design is logically correct. 1.1 Problem Formulation The extended architecture of [Lygeros et al.1995] requires additional control laws for each layer of the control hierarchy as the current normal mode design is insufficient to deal with all cases of interest. <p> We assume that faults are irreversible so that, once a fault occurs, the vehicle must exit the highway system. According to the extended architecture of <ref> [Lygeros et al.1995] </ref>, in case of severe faults (such as steering failure) the vehicle has to stop and wait to be towed while for less severe faults it may be possible for the vehicle to exit the highway on its own 1 . <p> Proving such a claim is not easy, however, as it involves the ill-understood interaction between the link and coordination layer models. The increased complexity of the design also gives rise to increased complexity of verification of the safety of the overall hybrid system. We refer the reader to <ref> [Lygeros et al.1995] </ref> for a more thorough discussion of optimality and design tradeoffs for the extended controller. 1.2 Outline The paper is arranged in four sections. <p> In Section 2 we describe in detail the protocol design and show how it fits in the framework for emergency maneuver initiation and fault classification presented in <ref> [Lygeros et al.1995] </ref>. In Section 3 we describe how the design was modeled formally using finite state machines and verified using automatic verification tools. We explore the implications of the verification results and relate them to the original goals set for the design. <p> We explore the implications of the verification results and relate them to the original goals set for the design. This indicates directions in which our work can be extended or modified; these are summarized in the concluding section. 2 2 Design of Coordination Protocols The fault classification of <ref> [Lygeros et al.1995] </ref> considers vehicle as well as infrastructure faults including adverse weather conditions. As this paper deals with extended coordination layer protocols, we consider only vehicle faults. 2.1 Structure of the controller According to the framework of [Lygeros et al.1995], the extended coordination layer controller is divided into two levels <p> concluding section. 2 2 Design of Coordination Protocols The fault classification of <ref> [Lygeros et al.1995] </ref> considers vehicle as well as infrastructure faults including adverse weather conditions. As this paper deals with extended coordination layer protocols, we consider only vehicle faults. 2.1 Structure of the controller According to the framework of [Lygeros et al.1995], the extended coordination layer controller is divided into two levels (Figure 1): a strategic planning level called coordination supervisor and an execution level called coordination maneuver . Once a fault is detected the capability and performance monitors of [Lygeros et al.1995] uniquely classify it into one of the <p> Structure of the controller According to the framework of <ref> [Lygeros et al.1995] </ref>, the extended coordination layer controller is divided into two levels (Figure 1): a strategic planning level called coordination supervisor and an execution level called coordination maneuver . Once a fault is detected the capability and performance monitors of [Lygeros et al.1995] uniquely classify it into one of the fault classes. Depending on the class or subclass the fault belongs to, the coordination supervisor selects an appropriate strategy. The extended architecture design of [Lygeros et al.1995] outlines new strategies and maneuvers to be used for each fault class. <p> Once a fault is detected the capability and performance monitors of <ref> [Lygeros et al.1995] </ref> uniquely classify it into one of the fault classes. Depending on the class or subclass the fault belongs to, the coordination supervisor selects an appropriate strategy. The extended architecture design of [Lygeros et al.1995] outlines new strategies and maneuvers to be used for each fault class. The objective of the design is to guarantee safe operation of vehicles on the AHS in the presence of faults. This must be achieved without large negative effect on overall system capacity. <p> The objective of the design is to guarantee safe operation of vehicles on the AHS in the presence of faults. This must be achieved without large negative effect on overall system capacity. For safety reasons, the faulty vehicle should be taken off the AHS. The degraded mode design of <ref> [Lygeros et al.1995] </ref> consists of new strategies and maneuvers that either stop the faulty 3 vehicle or take it to the nearest exit. Execution of the strategies depends upon certain capabilities of the neighbors. The control strategies are executed by following a sequence of maneuvers. <p> For the most severe faults, strategies are required to stop the vehicle on the highway. Three strategies are defined for this purpose in <ref> [Lygeros et al.1995] </ref>, namely, Gentle Stop, Crash Stop, and Aided Stop. Once the vehicle comes to rest, the link layer employs specific control laws to ease congestion, divert traffic away from the incident, assist emergency vehicles, and get the queued vehicles out. <p> Three such strategies are defined in <ref> [Lygeros et al.1995] </ref>, namely, Take Immediate Exit , Take Immediate Exit Escorted and Take Immediate Exit Normal. Gentle Stop and Crash Stop Strategies: The goal of these control strategies is to bring the faulty vehicle to a complete stop on the highway. <p> On the other hand, if a degraded mode maneuver gets aborted, the faulty vehicle has to choose another strategy to safely exit the highway. Thus for a complete specification of 2 <ref> [Lygeros et al.1995] </ref> contains details of the degraded mode link layer design for queue dissipation. 6 the extended coordination layer, we need a priority assignment (possibly dynamic) and an algorithm to determine a new strategy after a maneuver gets aborted. These problems are addressed in Section 3.4.2. <p> Important questions concerning the safety of the design and the resulting system performance cannot be formulated in a discrete event framework. These questions relate to the hybrid nature of the system; they are discussed further in the companion paper <ref> [Lygeros et al.1995] </ref>. 3.2 Verification Framework Examination of the degraded mode protocols reveals that platoons in the neighborhood of a faulty vehicle can be classified based on the messages they transmit or receive during the execution of the chosen strategy. <p> This is a reasonable assumption and will be fundamental in stating our claims, as the verification results presented here are concerned only with the execution of the emergency maneuvers and not their initiation. Extensive work has already been done on fault detection, while <ref> [Lygeros et al.1995] </ref> presents a possible emergency procedure initiation scheme. 18 2. The normal mode protocols have been properly designed and verified. This is a valid assumption based on the results of [Hsu et al.1994]. 3. <p> Depending on the severity, we assign following priorities to the faults, making use of the classification scheme of <ref> [Lygeros et al.1995] </ref>: faults in class A have the highest priority followed by faults in class B, C and D in that order. The priorities within each class are as follows: A2 and A3 have equal priority which is higher than that of A1. <p> In class B, B2 has higher priority than all other subclasses, which have equal priority. Every subclass in class C has the same priority. A static map between fault class and strategy to be used was described in <ref> [Lygeros et al.1995] </ref> and is also shown in Figure 8. This static map along with the fault priorities also defines priority structure among the extended coordination layer strategies. In case of more than one faults on the same vehicle, the strategy corresponding to the fault with higher priority is followed. <p> The only problem is that this scheme may be infeasible in real life, as the design of strategies is based upon reduction in individual capabilities. Multiple faults on the same vehicle will result in loss of many capabilities of the vehicle which might make many of the strategies unusable. <ref> [Lygeros et al.1995] </ref> describes a systematic way of keeping track of the capabilities of the vehicle. Based on the remaining capability of the vehicle, the best possible strategy among the possible ones can be chosen. 2 It should be noted that this claim is not very informative.
Reference: [Varaiya1993] <author> Pravin Varaiya. </author> <title> Smart cars on smart roads: problems of control. </title> <journal> IEEE Transactions on Automatic Control, </journal> <volume> AC-38(2):195-207, </volume> <year> 1993. </year> <month> 24 </month>
Reference-contexts: Platoons are isolated from one another by large gaps, of the order of 30 meters. Packing the vehicles tightly yields significant improvement in highway capacity (estimated to be up to 4 times the current value). Preliminary studies <ref> [Varaiya1993] </ref> also show that this can be done without an adverse effect on passenger safety. In order to implement such a scheme automatic control of the vehicles is necessary, as human drivers cannot reliably produce the inputs necessary for platooning. <p> In order to implement such a scheme automatic control of the vehicles is necessary, as human drivers cannot reliably produce the inputs necessary for platooning. The control and coordination of a large number of vehicles poses a formidable problem. In <ref> [Varaiya1993] </ref> a hierarchical controller was proposed for platooning under normal conditions of operation, i.e., when environmental conditions are benign and the operation of the vehicles is faultless. The controller is hierarchically organized into four layers and is distributed between the vehicle and the roadside. <p> The FSM diagram for TIE-N is similar to Figure 10, except the state ELC is replaced by LC. Normal: This is the normal mode strategy defined by the normal mode AHS architecture of <ref> [Varaiya1993] </ref>. 2.3 Atomic Maneuvers The following atomic maneuvers are designed to execute the strategies. The finite state machines (Appendix A) represent the inter-vehicle coordination required to carry out these maneuvers. Forced Split: This maneuver is similar to the split maneuver of [Hsu et al.1994]. <p> The backup distance depends on the speed of the approaching gap and the constraints on acceleration and jerk (see Figures 20, 21). 2.4 Priorities and mutual exclusion In the normal mode architecture of <ref> [Varaiya1993] </ref>, mutual exclusion between maneuvers was achieved by imposing the constraint that each platoon leader can be engaged in at most one maneuver at a time. Any other request received during this time is discarded. This constraint assures basic level of safety while carrying out the maneuvers.
References-found: 9

