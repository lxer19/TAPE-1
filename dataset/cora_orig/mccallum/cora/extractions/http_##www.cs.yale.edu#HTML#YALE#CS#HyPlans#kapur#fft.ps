URL: http://www.cs.yale.edu/HTML/YALE/CS/HyPlans/kapur/fft.ps
Refering-URL: http://www.cs.yale.edu/HTML/YALE/CS/HyPlans/kapur/
Root-URL: http://www.cs.yale.edu
Title: Applications of high-order quadratures to the evaluation of Fourier integrals of functions with singularities  
Author: Sharad Kapur 
Date: October 11, 1995  
Abstract: Accurate numerical evaluation of Fourier integrals of singular functions usually requires either adaptivity or a large degree of oversampling; both interfere with the use of the fast Fourier transform for rapid summation and thus hamper large-scale computations in engineering, computational physics and potential theory. In this paper, we present a method for the rapid evaluation of Fourier integrals of functions with singularities based on a combination of the fast Fourier transform (FFT) with a high-order quadrature scheme tailored to the singularity. More specifically, given a singularity, we construct a set of quadrature weights (based on the approach developed in [7]) to achieve rapid convergence on singular functions. Then a trapezoidal approximation to the Fourier integrals is rapidly computed by means of the FFT. Finally, the quadrature weights are used to correct this trapezoidal approximation. Numerical results are presented which demonstrate the accuracy and speed of the scheme. Tables of quadrature weights are included for singularities of the form s(x) = jxj for a variety of values of 1 &lt; &lt; 1, and s(x) = log jxj.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> B. Alpert, </author> <title> Sparse representation of smooth linear operators, </title> <type> Ph.D. Thesis, </type> <institution> Yale University, </institution> <year> (1990). </year>
Reference-contexts: Moreover, the algorithms of this paper can be generalized, in a simple and straightforward manner to functions with singularities. In recent years, a class of quadrature formulae has been constructed for functions with singularities, generalizing the classical end-point corrected trapezoidal quadrature rules (see, for example, [13], <ref> [1] </ref>, [16], [7], [9]) . <p> In this section we summarize several results obtained in <ref> [1] </ref> and [7] for end-point corrections based on the Euler-Maclaurin formula. The derivatives at the end points a and b appearing in the Euler-Maclaurin formula are computed to the necessary order by finite difference approximations of the integrand. <p> trapezoidal rule T C n is of order at least k + 1, i.e., for any f 2 C k [a; b] there exists a real number c &gt; 0 such that j T C Z b f (x)dx j&lt; n k+1 : (12) Remark 2.1 The approach developed in <ref> [1] </ref> assumes that the functional information is only available inside the interval of integration (see Figure 1). <p> The use of correction nodes outside the interval suppresses the growth of correction weights, enabling the construction of end-point corrected trapezoidal rules of arbitrarily high order. In xA.1.1 and xA.1.2 we tabulate the correction weights for constructed in <ref> [1] </ref> and [7] respectively. 2.3 End-point corrections for singular functions In [7], [13], [1] end-point corrected trapezoidal quadrature rules are constructed to ap proximate definite integrals of singular functions f : [a; b] ! R of the form f (x) = (x)s (x) + (x); (13) and where (x); (x) 2 <p> In xA.1.1 and xA.1.2 we tabulate the correction weights for constructed in <ref> [1] </ref> and [7] respectively. 2.3 End-point corrections for singular functions In [7], [13], [1] end-point corrected trapezoidal quadrature rules are constructed to ap proximate definite integrals of singular functions f : [a; b] ! R of the form f (x) = (x)s (x) + (x); (13) and where (x); (x) 2 C k [a; b], and s is an integrable function with a singularity <p> Moreover, the scheme obviates the programming inconvenience associated with the procedure developed in [13] and <ref> [1] </ref>, which requires that functional information be tabulated on a grid finer than that required for the uncorrected trapezoidal rule.
Reference: [2] <author> M. Abramovitz and I. </author> <title> Stegun, Handbook of Mathematical Functions. </title> <institution> National Bureau of Standards, </institution> <address> Washington, DC., </address> <year> 1964. </year>
Reference-contexts: It can be found, for example, in <ref> [2] </ref>. Theorem 2.1 (Euler-Maclaurin formula) Suppose that a; b are a pair of real numbers such that a &lt; b, and that m 1 is an integer. <p> Clearly, the FFT can be used of the evaluation of the sums (16). Observation 2.5 Suppose that n 2 is an integer and f 2 C 2 <ref> [0; 2] </ref>. Suppose further that h = 2 N and the function f is tabulated at the equispaced nodes, f i = f (ih), for i = 0; 1; : : : N . Finally, suppose that fF k g is defined in (16). <p> More specifically, the correction weights are constructed so that the corrected trapezoidal rule T C n (defined in (10)) is m-th order convergent, i.e., for any non-periodic f 2 C m <ref> [0; 2] </ref> there exists some real c &gt; 0 such that, j T C Z 2 f (x)dx j&lt; n m : (19) Theorem 3.1 Suppose that n 2 is an integer and f 2 C m [0; 2]. <p> (10)) is m-th order convergent, i.e., for any non-periodic f 2 C m <ref> [0; 2] </ref> there exists some real c &gt; 0 such that, j T C Z 2 f (x)dx j&lt; n m : (19) Theorem 3.1 Suppose that n 2 is an integer and f 2 C m [0; 2]. Suppose further that h = 2 N and the function f is tabulated at the equispaced nodes, f i = f (ih), for i = 0; 1; : : : n. Finally, suppose that F C 1 k is defined in (16). <p> Proof. Let us define the functions g k <ref> [0; 2] </ref> ! R 1 by the formulae g k (x) = f (x)e ikx ; (21) for k = 0; 1; : : : ; n. Since f has m continuous derivatives on the interval [0; 2], it follows immediately from (21) that g also has m continuous derivatives on <p> Proof. Let us define the functions g k <ref> [0; 2] </ref> ! R 1 by the formulae g k (x) = f (x)e ikx ; (21) for k = 0; 1; : : : ; n. Since f has m continuous derivatives on the interval [0; 2], it follows immediately from (21) that g also has m continuous derivatives on the same interval. Now, since g 2 C m [0; 2] the corrected trapezoidal rule T C n (g k ) (see Definition 2.2) is m-th order convergent. <p> Since f has m continuous derivatives on the interval <ref> [0; 2] </ref>, it follows immediately from (21) that g also has m continuous derivatives on the same interval. Now, since g 2 C m [0; 2] the corrected trapezoidal rule T C n (g k ) (see Definition 2.2) is m-th order convergent. <p> More specifically, the correction weights are constructed so that the corrected two-sided trapezoidal rule T C n (see Remark 2.1) is 2m-th order convergent, i.e., for any f 2 C 2m <ref> [0; 2] </ref> there exists some real c &gt; 0 such that, j T C Z 2 f (x)dx j&lt; n 2m : (24) The proof of the following theorem is almost identical to the proof of Theorem 3.1. <p> Theorem 3.2 Suppose that n 2 is an integer and f 2 C m <ref> [0; 2] </ref>. Suppose further that h = 2 N and the function f is tabulated at the equispaced nodes, f i = f (ih), for i = m; : : : ; 0; 1; : : : n + m. <p> In this example, we choose n = 1024 equispaced points to discretize the interval <ref> [0; 2] </ref>. The integrals (33) were evaluated by four methods: A: Standard DFT without corrections. B: Combination of the DFT with a one-sided correction scheme using 12 correction weights (see xA.1.1). C: Combination of the DFT with a two-sided correction scheme using n=2 correction weights (see xA.1.2). <p> In this example, we choose n = 512 equispaced points to discretize the interval <ref> [0; 2] </ref>. The integrals (35) were evaluated by three methods: A: Standard DFT without corrections. B: Combination of the DFT with a one-sided correction scheme using 15 correction weights (see Section A.2.1). C: Combination of the DFT with a two-sided correction scheme using 20 correction weights (see Section A.2.2). <p> In this example, we choose n = 512 equispaced points to discretize the interval <ref> [0; 2] </ref>. The integrals (37) were evaluated by three methods: A: Standard DFT without corrections.
Reference: [3] <author> G. </author> <title> BeylkinOn Fast Fourier Transforms of Functions with Singularities. </title> <institution> University of Colorado. </institution>
Reference-contexts: They may be divided into two categories: low-order interpolatory quadrature schemes (see [12], [10]) and higher order schemes based on Gaussian quadratures and wavelets (see [14], <ref> [3] </ref>). Low-order interpolatory schemes are generally inaccurate and require a large degree of oversampling to obtain even single precision accuracy (see [12] for a detailed development of this approach). <p> These schemes, based on Filon's formula, provide satisfactory quadra-tures up to order 3; for higher orders the correction coefficients grow rapidly, rendering the quadrature useless. More importantly, they cannot be generalized for the evaluation of Fourier integrals of functions with singularities. In [14] and <ref> [3] </ref>, algorithms are described for the rapid and accurate computation of Fourier transforms of functions which are piecewise constant (both are quite easy to generalize to the piecewise smooth case). <p> The approach of [14] redistributes Gaussian integration weights on a uniform grid via Lagrange interpolation, bringing the data into a form suitable for the FFT. The approach of <ref> [3] </ref> is similar; a wavelet based scheme is devised to redistribute integration weights onto a uniform grid. However, both algorithms are involved, and not as general as the algorithms developed in this paper.
Reference: [4] <author> Brigham, </author> <title> E.The fast Fourier transform and its applications. </title> <publisher> Prentice Hill, </publisher> <year> 1988 </year>
Reference: [5] <author> E. </author> <title> BracewellThe Fourier transform and its applications. </title> <publisher> McGraw Hill, </publisher> <year> 1988 </year>
Reference: [6] <author> A. Dutt, </author> <title> Fast Fourier Transforms for Non-Equispaced Data, </title> <type> Ph.D. thesis Technical Report 981, </type> <institution> Yale Computer Science Department, </institution> <address> New Haven, CT, </address> <year> (1993) </year>
Reference-contexts: All the algorithms admit several straightforward generalizations. 1. There are classes of singularities not covered in this chapter for which versions of Theorem 3.1, and Theorem 3.2 can be easily proven. 2. In <ref> [6] </ref> a collection of algorithms is presented for the efficient computation of certain generalizations of the DFT, namely the application and inversion of the transformation F : C N ! C N defined by the formulae F (ff) j = k=N=2 for j = 1; : : : ; N ,
Reference: [7] <author> S. Kapur, V. Rokhlin, </author> <title> High-Order Corrected Trapezoidal Rules for Singular Functions, </title> <type> Technical Report 1042, </type> <institution> Yale Computer Science Department, </institution> <address> New Haven, CT, </address> <year> (1994) </year>
Reference-contexts: Moreover, the algorithms of this paper can be generalized, in a simple and straightforward manner to functions with singularities. In recent years, a class of quadrature formulae has been constructed for functions with singularities, generalizing the classical end-point corrected trapezoidal quadrature rules (see, for example, [13], [1], [16], <ref> [7] </ref>, [9]) . <p> In this section we summarize several results obtained in [1] and <ref> [7] </ref> for end-point corrections based on the Euler-Maclaurin formula. The derivatives at the end points a and b appearing in the Euler-Maclaurin formula are computed to the necessary order by finite difference approximations of the integrand. <p> : : ; w k g are appropriately chosen correction weights associated with these correction nodes. 4 s s s s s s s s ssss s s s s s s s s s s s s a b The proof of the following theorem can be found in <ref> [7] </ref>. Theorem 2.3 Suppose that k; n are a pair of integers and n 2. Suppose further that a; b are a pair of real numbers such that a &lt; b. <p> When this is the case, the scheme provides satisfactory quadratures up to order 12; for higher orders, both the correction weights fw k g and the constant c associated with the error grow rapidly, limiting the use of the procedure. An alternate approach in <ref> [7] </ref> assumes function tabulation outside the interval of integration (see Figure 2). The use of correction nodes outside the interval suppresses the growth of correction weights, enabling the construction of end-point corrected trapezoidal rules of arbitrarily high order. <p> The use of correction nodes outside the interval suppresses the growth of correction weights, enabling the construction of end-point corrected trapezoidal rules of arbitrarily high order. In xA.1.1 and xA.1.2 we tabulate the correction weights for constructed in [1] and <ref> [7] </ref> respectively. 2.3 End-point corrections for singular functions In [7], [13], [1] end-point corrected trapezoidal quadrature rules are constructed to ap proximate definite integrals of singular functions f : [a; b] ! R of the form f (x) = (x)s (x) + (x); (13) and where (x); (x) 2 C k <p> The use of correction nodes outside the interval suppresses the growth of correction weights, enabling the construction of end-point corrected trapezoidal rules of arbitrarily high order. In xA.1.1 and xA.1.2 we tabulate the correction weights for constructed in [1] and <ref> [7] </ref> respectively. 2.3 End-point corrections for singular functions In [7], [13], [1] end-point corrected trapezoidal quadrature rules are constructed to ap proximate definite integrals of singular functions f : [a; b] ! R of the form f (x) = (x)s (x) + (x); (13) and where (x); (x) 2 C k [a; b], and s is an integrable function with <p> At the singular end, corrections are made so that the functions x i s (t x) are integrated exactly, for i = 0; 1; : : : ; k. The correction weights are determined by solving an appropriate system of linear algebraic equations (see <ref> [7] </ref> for a more detailed discussion of this construction). Remark 2.2 In [7] the authors construct a class of end-point corrected trapezoidal rules, whereby the growth of quadrature weights is partially suppressed for functions of the form (13), obtaining useful quadratures of order upto 12; and completely suppressed for functions of <p> The correction weights are determined by solving an appropriate system of linear algebraic equations (see <ref> [7] </ref> for a more detailed discussion of this construction). Remark 2.2 In [7] the authors construct a class of end-point corrected trapezoidal rules, whereby the growth of quadrature weights is partially suppressed for functions of the form (13), obtaining useful quadratures of order upto 12; and completely suppressed for functions of the form (14), providing quadratures of arbitrarily high order. <p> In the following section, we obviate these limitations by taking advantage of functional information outside the interval of integration to construct a high-order corrected discrete Fourier transform. 3.2 The Fourier integrals of non-periodic functions using two sided corrections In <ref> [7] </ref> a class of high-order quadrature formulae are constructed for the evaluation of integrals of smooth, non-periodic functions (of the form specified in Theorem 2.3). <p> It is clear that the same approach can also be used for the rapid evaluation of Fourier integrals of functions with singularities. More specifically, suppose that we determine quadrature weights w k (based on the approach in <ref> [7] </ref>) to approximate definite integrals of singular functions f : [a; b] ! R of the form f (x) = (x)s (x) + (x); (30) f (x) = (x)s (x); (31) where (x); (x) 2 C k [a; b], and s is an integrable function with a singularity on the interval
Reference: [8] <author> S. Kapur, V. Rokhlin, </author> <title> An algorithm for the fast Hankel transform, </title> <type> Technical Report 1045, </type> <institution> Yale Computer Science Department, </institution> <address> New Haven, CT, </address> <year> (1994) </year>
Reference: [9] <author> S. Kapur, </author> <title> High-order quadratures for singular functions with applications to Fourier and Hankel transforms, </title> <type> Ph.D. Thesis, Technical Report 1085, </type> <institution> Yale Computer Science Department, </institution> <address> New Haven, CT, </address> <year> (1995) </year>
Reference-contexts: Moreover, the algorithms of this paper can be generalized, in a simple and straightforward manner to functions with singularities. In recent years, a class of quadrature formulae has been constructed for functions with singularities, generalizing the classical end-point corrected trapezoidal quadrature rules (see, for example, [13], [1], [16], [7], <ref> [9] </ref>) .
Reference: [10] <author> J.N. Lyness, T. Karper, </author> <note> SIAM Journal of Scientific computing (1987) </note>
Reference-contexts: Remark 1.1 A variety of numerical schemes have been developed for the rapid evaluation of the integrals of the form (1) for functions that are piecewise constant (or piecewise smooth), on the interval of integration. They may be divided into two categories: low-order interpolatory quadrature schemes (see [12], <ref> [10] </ref>) and higher order schemes based on Gaussian quadratures and wavelets (see [14], [3]). Low-order interpolatory schemes are generally inaccurate and require a large degree of oversampling to obtain even single precision accuracy (see [12] for a detailed development of this approach).
Reference: [11] <author> Allan V. Oppenheim, Alan S. Willsky, </author> <title> Signals and Systems. </title> <publisher> Prentice-Hall, Inc. </publisher> <address> Englewood Cliffs, NJ, </address> <year> (1983) </year>
Reference-contexts: Remark 2.3 The fast Fourier transform is an algorithm which employs a sequence of algebraic manipulations to reduce the number of operations, for the evaluation of DFT, from O (N 2 ) to O (N log N ) (see, for example, <ref> [11] </ref>, [17]).
Reference: [12] <author> W. Press, S. Teukolsky, W. Vettering, B. </author> <type> Flannery, </type> <institution> Numerical Recipies Cambridge University Press(1994) </institution>
Reference-contexts: Remark 1.1 A variety of numerical schemes have been developed for the rapid evaluation of the integrals of the form (1) for functions that are piecewise constant (or piecewise smooth), on the interval of integration. They may be divided into two categories: low-order interpolatory quadrature schemes (see <ref> [12] </ref>, [10]) and higher order schemes based on Gaussian quadratures and wavelets (see [14], [3]). Low-order interpolatory schemes are generally inaccurate and require a large degree of oversampling to obtain even single precision accuracy (see [12] for a detailed development of this approach). <p> They may be divided into two categories: low-order interpolatory quadrature schemes (see <ref> [12] </ref>, [10]) and higher order schemes based on Gaussian quadratures and wavelets (see [14], [3]). Low-order interpolatory schemes are generally inaccurate and require a large degree of oversampling to obtain even single precision accuracy (see [12] for a detailed development of this approach). These schemes, based on Filon's formula, provide satisfactory quadra-tures up to order 3; for higher orders the correction coefficients grow rapidly, rendering the quadrature useless. More importantly, they cannot be generalized for the evaluation of Fourier integrals of functions with singularities. <p> Finally, suppose that fF k g is defined in (16). It is well known that the DFT is a first order method, based on the rectangular rule, for the numerical approximation of Fourier integrals of non-periodic functions (see, for example <ref> [12] </ref>), i.e., there exists some c k &gt; 0 such that j h F k 0 c k ; (17) 3 The Fourier integrals of functions with singular ities 3.1 The Fourier integrals of non-periodic functions using one sided corrections For a real sequence ff 0 ; f 1 ; : <p> B: Combination of the DFT with a one-sided correction scheme using 12 correction weights (see xA.1.1). C: Combination of the DFT with a two-sided correction scheme using n=2 correction weights (see xA.1.2). D: Combination of the DFT with the correction subroutine dftcorr in <ref> [12] </ref>, implementing cubic end-point corrections (based on Filon's formula). <p> When n=2 two-sided corrections are used (both within and outside the inteval of integration) double precision accuracy is obtained for all frequencies less than n=4. 4. We compared the results of our end-point correction procedures to the end-point correction procedure based on Filon's formula (developed in <ref> [12] </ref>). In our experiments, we used the FORTRAN subroutine dftcorr implemented in [12](see pg. 580). For low frequencies, our one-sided end-point correction procedure is more accurate than that of [12]; for high frequencies, our one-sided correction scheme is inferior. <p> We compared the results of our end-point correction procedures to the end-point correction procedure based on Filon's formula (developed in <ref> [12] </ref>). In our experiments, we used the FORTRAN subroutine dftcorr implemented in [12](see pg. 580). For low frequencies, our one-sided end-point correction procedure is more accurate than that of [12]; for high frequencies, our one-sided correction scheme is inferior.
Reference: [13] <author> V. Rokhlin, </author> <title> End-point corrected trapezoidal quadrature rules for singular functions, Computers and Mathematics with Applications, </title> <year> 1990. </year>
Reference-contexts: Moreover, the algorithms of this paper can be generalized, in a simple and straightforward manner to functions with singularities. In recent years, a class of quadrature formulae has been constructed for functions with singularities, generalizing the classical end-point corrected trapezoidal quadrature rules (see, for example, <ref> [13] </ref>, [1], [16], [7], [9]) . <p> In xA.1.1 and xA.1.2 we tabulate the correction weights for constructed in [1] and [7] respectively. 2.3 End-point corrections for singular functions In [7], <ref> [13] </ref>, [1] end-point corrected trapezoidal quadrature rules are constructed to ap proximate definite integrals of singular functions f : [a; b] ! R of the form f (x) = (x)s (x) + (x); (13) and where (x); (x) 2 C k [a; b], and s is an integrable function with a <p> Moreover, the scheme obviates the programming inconvenience associated with the procedure developed in <ref> [13] </ref> and [1], which requires that functional information be tabulated on a grid finer than that required for the uncorrected trapezoidal rule.
Reference: [14] <author> E. Sorets, </author> <title> Fast Fourier Transforms of Piecewise Constant Functions. </title> <type> Yale Technical Report YALEU/DCS/RR-986. </type>
Reference-contexts: They may be divided into two categories: low-order interpolatory quadrature schemes (see [12], [10]) and higher order schemes based on Gaussian quadratures and wavelets (see <ref> [14] </ref>, [3]). Low-order interpolatory schemes are generally inaccurate and require a large degree of oversampling to obtain even single precision accuracy (see [12] for a detailed development of this approach). <p> These schemes, based on Filon's formula, provide satisfactory quadra-tures up to order 3; for higher orders the correction coefficients grow rapidly, rendering the quadrature useless. More importantly, they cannot be generalized for the evaluation of Fourier integrals of functions with singularities. In <ref> [14] </ref> and [3], algorithms are described for the rapid and accurate computation of Fourier transforms of functions which are piecewise constant (both are quite easy to generalize to the piecewise smooth case). The approach of [14] redistributes Gaussian integration weights on a uniform grid via Lagrange interpolation, bringing the data into <p> In <ref> [14] </ref> and [3], algorithms are described for the rapid and accurate computation of Fourier transforms of functions which are piecewise constant (both are quite easy to generalize to the piecewise smooth case). The approach of [14] redistributes Gaussian integration weights on a uniform grid via Lagrange interpolation, bringing the data into a form suitable for the FFT. The approach of [3] is similar; a wavelet based scheme is devised to redistribute integration weights onto a uniform grid.
Reference: [15] <author> J. Stoer and R. </author> <title> Bulirsch, Introduction to Numerical Analysis, </title> <publisher> Springer Verlag, </publisher> <address> New York, </address> <year> 1980. </year> <month> 24 </month>
Reference: [16] <author> John Strain, </author> <title> Locally-Corrected Multidimensional Quadrature Rules for Singular Functions, </title> <institution> Lawrence Berkeley Laboratory, </institution> <address> Berkley, CA, </address> <year> (1993) </year>
Reference-contexts: Moreover, the algorithms of this paper can be generalized, in a simple and straightforward manner to functions with singularities. In recent years, a class of quadrature formulae has been constructed for functions with singularities, generalizing the classical end-point corrected trapezoidal quadrature rules (see, for example, [13], [1], <ref> [16] </ref>, [7], [9]) .
Reference: [17] <author> J. Walker, </author> <title> Fast Fourier Transforms, </title> <publisher> CRC Press, </publisher> <address> Ann Arbor, </address> <year> 1991. </year> <month> 25 </month>
Reference-contexts: In xA.2 and xA.3 we tabulate both one-sided and two-sided quadrature weights for singularites of the form s (x) = jxj 1=2 and s (x) = log jxj respectively. 2.4 The fast Fourier transform The following definition of the discrete Fourier transform (DFT), can be found, for example, in <ref> [17] </ref>. <p> Remark 2.3 The fast Fourier transform is an algorithm which employs a sequence of algebraic manipulations to reduce the number of operations, for the evaluation of DFT, from O (N 2 ) to O (N log N ) (see, for example, [11], <ref> [17] </ref>).
References-found: 17

