URL: http://www.eecis.udel.edu:80/~mills/database/rfc/rfc1305/rfc1305b.ps
Refering-URL: http://www.eecis.udel.edu:80/~mills/reports.htm
Root-URL: http://www.cis.udel.edu
Abstract-found: 0
Intro-found: 1
Reference: [ABA89] <author> Abate, et al. </author> <title> AT&Ts new approach to the synchronization of telecommunication networks. </title> <journal> IEEE Communications Magazine (April 1989), </journal> <pages> 35-45. </pages> <note> RFC-1305 Network Time Protocol (Version 3) March 1992 Mills Page 46 </note>
Reference-contexts: Assuming the primary servers are synchronized to standard time within known accuracies, this provides a reliable, determistic specification on timekeeping accuracies throughout the synchronization subnet. Again drawing from the experience of the telephone industry, which learned such lessons at considerable cost <ref> [ABA89] </ref>, the synchronization subnet topology should be organized to produce the highest accuracy, but must never be allowed to form a loop.
Reference: [ALL74a] <author> Allan, D.W., J.H. Shoaf and D. Halford. </author> <title> Statistics of time and frequency data analysis. In: Blair, B.E. (Ed.). Time and Frequency Theory and Fundamentals . National Bureau of Standards Monograph 140, </title> <type> U.S. </type> <institution> Department of Commerce, </institution> <year> 1974, </year> <pages> 151-204. </pages>
Reference: [ALL74b] <author> Allan, D.W., J.E. Gray and H.E. Machlan. </author> <title> The National Bureau of Standards atomic time scale: generation, stability, accuracy and accessibility. In: Blair, B.E. (Ed.). Time and Frequency Theory and Fundamentals . National Bureau of Standards Monograph 140, </title> <type> U.S. </type> <institution> Department of Commerce, </institution> <year> 1974, </year> <pages> 205-231. </pages>
Reference: [BEL86] <institution> Bell Communications Research. Digital Synchronization Network Plan. Technical Advi sory TANPL-000436, </institution> <month> 1 November </month> <year> 1986. </year>
Reference-contexts: Under normal circumstances it is intended that the synchronization subnet of primary and secondary servers assumes a hierarchical-master-slave configuration with the primary servers at the root and secondary servers of decreasing accuracy at successive levels toward the leaves. Following conventions established by the telephone industry <ref> [BEL86] </ref>, the accuracy of each server is defined by a number called the stratum , with the topmost level (primary servers) assigned as one and each level downwards (secondary servers) in the hierarchy assigned as one greater than the preceding level. <p> Subsequently, the dispersion will be updated by the clock-filter procedure. The above method amounts to a continuously sampled, returnable-time system, which is used in some digital telephone networks <ref> [BEL86] </ref>. Among the advantages are that the order and timing of the messages are unimportant and that reliable delivery is not required. Obviously, the accuracies achievable depend upon the statistical properties of the outbound and inbound data paths.
Reference: [BER87] <author> Bertsekas, D., and R. </author> <title> Gallager. </title> <booktitle> Data Networks . Prentice-Hall, </booktitle> <address> Englewood Cliffs, NJ, </address> <year> 1987. </year>
Reference: [BLA74] <author> Blair, </author> <title> B.E. Time and frequency dissemination: an overview of principles and techniques. In: Blair, B.E. (Ed.). Time and Frequency Theory and Fundamentals . National Bureau of Standards Monograph 140, </title> <type> U.S. </type> <institution> Department of Commerce, </institution> <year> 1974, </year> <pages> 233-314. </pages>
Reference: [BRA80] <author> Braun, W.B. </author> <title> Short term frequency effects in networks of coupled oscillators. </title> <journal> IEEE Trans. Communications COM-28, </journal> <month> 8 (August </month> <year> 1980), </year> <pages> 1269-1275. </pages>
Reference-contexts: The clock filter and selection algorithms are designed so that the clock synchronization subnet self-organizes into a hierarchical-master-slave configuration [MIT80]. With respect to timekeeping accuracy and stability, the similarity of NTP to digital telephone systems is not accidental, since systems like this have been studied extensively [LIN80], <ref> [BRA80] </ref>. What makes the NTP model unique is the adaptive configuration, polling, filtering, selection and correctness mechanisms which tailor the dynamics of the system to fit the ubiquitous Internet environment. 2. <p> As the stratum increases from one, the singlesample accuracies achievable will degrade depending on the network paths and local-clock stabilities. In order to avoid the tedious calculations <ref> [BRA80] </ref> necessary to estimate errors in each specific configuration, it is useful to assume the mean measurement errors accumulate approximately in proportion to the measured delay and dispersion relative to the root of the synchronization subnet.
Reference: [COL88] <author> Cole, R., and C. Foxcroft. </author> <title> An experiment in clock synchronisation. </title> <journal> The Computer Journal 31, </journal> <volume> 6 (1988), </volume> <pages> 496-502. </pages>
Reference-contexts: Experimental results on measured clock offsets and roundtrip delays in the Internet are discussed in [MIL83a], [MIL85b], <ref> [COL88] </ref> and [MIL88a]. Other synchronization algorithms are discussed in [LAM78], [GUS84], [HAL84], [LUN84], [LAM85], [MAR85], [MIL85a], [MIL85b], [MIL85c], [GUS85b], [SCH86], [TRI86], [RIC88], [MIL88a], [DEC89] and [MIL91a], while protocols based on them are described in [MIL81a], [MIL81b], [MIL83b], [GUS85a], [MIL85c], [TRI86], [MIL88a], [DEC89] and [MIL91a].
Reference: [DAR81a] <institution> Defense Advanced Research Projects Agency. Internet Protocol. DARPA Network Working Group Report RFC-791, USC Information Sciences Institute, </institution> <month> September </month> <year> 1981. </year>
Reference-contexts: NTP was first described in RFC-958 [MIL85c], but has since evolved in significant ways, culminating in the most recent NTP Version 2 described in RFC-1119 [MIL89]. It is built on the Internet Protocol (IP) <ref> [DAR81a] </ref> and User Datagram Protocol (UDP) [POS80], which provide a connectionless transport mechanism; however, it is readily adaptable to other protocol suites.
Reference: [DAR81b] <institution> Defense Advanced Research Projects Agency. Internet Control Message Protocol. DARPA Network Working Group Report RFC-792, USC Information Sciences Institute, </institution> <month> September </month> <year> 1981. </year>
Reference-contexts: It is built on the Internet Protocol (IP) [DAR81a] and User Datagram Protocol (UDP) [POS80], which provide a connectionless transport mechanism; however, it is readily adaptable to other protocol suites. NTP is evolved from the Time Protocol [POS83b] and the ICMP Timestamp message <ref> [DAR81b] </ref>, but is specifically designed to maintain accuracy and robustness, even when used over typical Internet paths involving multiple gateways, highly dispersive delays and unreliable nets. The service environment consists of the implementation model and service model described in Section 2. <p> Related Technology Other mechanisms have been specified in the Internet protocol suite to record and transmit the time at which an event takes place, including the Daytime protocol [POS83a], Time Protocol [POS83b], ICMP Timestamp message <ref> [DAR81b] </ref> and IP Timestamp option [SU81]. Experimental results on measured clock offsets and roundtrip delays in the Internet are discussed in [MIL83a], [MIL85b], [COL88] and [MIL88a].
Reference: [DEC89] <institution> Digital Time Service Functional Specification Version T.1.0.5. Digital Equipment Cor poration, </institution> <year> 1989. </year>
Reference-contexts: In addition, as the result of experience in operating multiple-server subnets including radio clocks at several sites in the U.S. and with clients in the U.S. and Europe, reliable algorithms for selecting good clocks from a population possibly including broken ones have been developed <ref> [DEC89] </ref>, [MIL91a] and are described in Section 4. The accuracies achievable by NTP depend strongly on the precision of the local-clock hardware and stringent control of device and process latencies. Provisions must be included to adjust the software logical-clock time and frequency in response to corrections produced by NTP. <p> Experimental results on measured clock offsets and roundtrip delays in the Internet are discussed in [MIL83a], [MIL85b], [COL88] and [MIL88a]. Other synchronization algorithms are discussed in [LAM78], [GUS84], [HAL84], [LUN84], [LAM85], [MAR85], [MIL85a], [MIL85b], [MIL85c], [GUS85b], [SCH86], [TRI86], [RIC88], [MIL88a], <ref> [DEC89] </ref> and [MIL91a], while protocols based on them are described in [MIL81a], [MIL81b], [MIL83b], [GUS85a], [MIL85c], [TRI86], [MIL88a], [DEC89] and [MIL91a]. NTP uses techniques evolved from them and both linear-systems and agreement methodologies. <p> Other synchronization algorithms are discussed in [LAM78], [GUS84], [HAL84], [LUN84], [LAM85], [MAR85], [MIL85a], [MIL85b], [MIL85c], [GUS85b], [SCH86], [TRI86], [RIC88], [MIL88a], <ref> [DEC89] </ref> and [MIL91a], while protocols based on them are described in [MIL81a], [MIL81b], [MIL83b], [GUS85a], [MIL85c], [TRI86], [MIL88a], [DEC89] and [MIL91a]. NTP uses techniques evolved from them and both linear-systems and agreement methodologies. Linear methods for digital telephone network synchronization are summarized in [LIN80], while agreement methods for clock synchronization are summarized in [LAM85]. The Digital Time Service (DTS) [DEC89] has many of the same service objectives as NTP. <p> described in [MIL81a], [MIL81b], [MIL83b], [GUS85a], [MIL85c], [TRI86], [MIL88a], <ref> [DEC89] </ref> and [MIL91a]. NTP uses techniques evolved from them and both linear-systems and agreement methodologies. Linear methods for digital telephone network synchronization are summarized in [LIN80], while agreement methods for clock synchronization are summarized in [LAM85]. The Digital Time Service (DTS) [DEC89] has many of the same service objectives as NTP. The DTS design places heavy emphasis on configuration management and correctness principles when operated in a managed LAN or LAN-cluster environment, while NTP places heavy emphasis on the accuracy and stability of the service operated in an unmanaged, global-internet environment. <p> algorithms use statistical clustering RFC-1305 Network Time Protocol (Version 3) March 1992 Mills Page 3 techniques such as the fault-tolerant average algorithm of [HAL84], the CNV algorithm of [LUN84], the majority-subset algorithm of [MIL85a], the non-Byzantine algorithm of [RIC88], the egocentric algorithm of [SCH86], the intersection algorithm of [MAR85] and <ref> [DEC89] </ref> and the algorithms in Section 4 of this document. Interactive-consistency algorithms are designed to detect faulty clock processes which might indicate grossly inconsistent offsets in successive readings or to different readers. <p> m + 1; endif endfor if (m = 0) begin /* skedaddle if no candidates */ sys.peer NULL; sys.stratum 0 ( undefined ) ; exit; RFC-1305 Network Time Protocol (Version 3) March 1992 Mills Page 37 endif sort endpoint list by increasing endpoint||type; The following algorithm is adapted from DTS <ref> [DEC89] </ref> and is designed to produce the largest single intersection containing only truechimers. The algorithm begins by initializing a value f and counters i and c to zero.
Reference: [DER90] <author> Dershowitz, N., and E.M. Reingold. </author> <title> Calendrical Calculations. </title> <journal> Software Practice and Experience 20, </journal> <month> 9 (September </month> <year> 1990), </year> <pages> 899-928. </pages>
Reference: [FRA82] <author> Frank, </author> <title> R.L. </title> <booktitle> History of LORAN-C. Navigation 29, </booktitle> <month> 1 (Spring </month> <year> 1982). </year>
Reference: [GUS84] <author> Gusella, R., and S. Zatti. </author> <title> TEMPO - A network time controller for a distributed Berkeley UNIX system. </title> <note> IEEE Distributed Processing Technical Committee Newsletter 6, </note> <month> NoSI-2 (June </month> <year> 1984), </year> <pages> 7-15. </pages> <booktitle> Also in: Proc. Summer USENIX Conference (June 1984, </booktitle> <address> Salt Lake City). </address>
Reference-contexts: Experimental results on measured clock offsets and roundtrip delays in the Internet are discussed in [MIL83a], [MIL85b], [COL88] and [MIL88a]. Other synchronization algorithms are discussed in [LAM78], <ref> [GUS84] </ref>, [HAL84], [LUN84], [LAM85], [MAR85], [MIL85a], [MIL85b], [MIL85c], [GUS85b], [SCH86], [TRI86], [RIC88], [MIL88a], [DEC89] and [MIL91a], while protocols based on them are described in [MIL81a], [MIL81b], [MIL83b], [GUS85a], [MIL85c], [TRI86], [MIL88a], [DEC89] and [MIL91a]. NTP uses techniques evolved from them and both linear-systems and agreement methodologies.
Reference: [GUS85a] <author> Gusella, R., and S. Zatti. </author> <title> The Berkeley UNIX 4.3BSD time synchronization protocol: protocol specification. </title> <type> Technical Report UCB/CSD 85/250, </type> <institution> University of California, Berkeley, </institution> <month> June </month> <year> 1985. </year> <title> RFC-1305 Network Time Protocol (Version 3) March 1992 Mills Page 47 </title>
Reference-contexts: Other synchronization algorithms are discussed in [LAM78], [GUS84], [HAL84], [LUN84], [LAM85], [MAR85], [MIL85a], [MIL85b], [MIL85c], [GUS85b], [SCH86], [TRI86], [RIC88], [MIL88a], [DEC89] and [MIL91a], while protocols based on them are described in [MIL81a], [MIL81b], [MIL83b], <ref> [GUS85a] </ref>, [MIL85c], [TRI86], [MIL88a], [DEC89] and [MIL91a]. NTP uses techniques evolved from them and both linear-systems and agreement methodologies. Linear methods for digital telephone network synchronization are summarized in [LIN80], while agreement methods for clock synchronization are summarized in [LAM85]. <p> While it can be seen that the design of Hellospeak strongly influenced the design of NTP, Hellospeak itself is not an Internet protocol and is unsuited for use outside its local-net environment. The Unix 4.3bsd time daemon timed <ref> [GUS85a] </ref> uses a single master-time daemon to measure offsets of a number of slave hosts and send periodic corrections to them. In this model the master is determined using an election algorithm [GUS85b] designed to avoid situations where either no master is elected or more than one master is elected. <p> A logical clock is then constructed using these components plus software components that adjust the apparent time and frequency in response to periodic updates computed by NTP or some other timesynchronization protocol such as Hellospeak [MIL83b] or the Unix 4.3bsd TSP <ref> [GUS85a] </ref>. This section describes the Fuzzball local-clock model and implementation, which includes provisions for precise time and frequency adjustment and can maintain time to within 15 ns and frequency to within 0.3 ms per day.
Reference: [GUS85b] <author> Gusella, R., and S. Zatti. </author> <title> An election algorithm for a distributed clock synchronization program. </title> <type> Technical Report UCB/CSD 86/275, </type> <institution> University of California, Berkeley, </institution> <month> December </month> <year> 1985. </year>
Reference-contexts: Experimental results on measured clock offsets and roundtrip delays in the Internet are discussed in [MIL83a], [MIL85b], [COL88] and [MIL88a]. Other synchronization algorithms are discussed in [LAM78], [GUS84], [HAL84], [LUN84], [LAM85], [MAR85], [MIL85a], [MIL85b], [MIL85c], <ref> [GUS85b] </ref>, [SCH86], [TRI86], [RIC88], [MIL88a], [DEC89] and [MIL91a], while protocols based on them are described in [MIL81a], [MIL81b], [MIL83b], [GUS85a], [MIL85c], [TRI86], [MIL88a], [DEC89] and [MIL91a]. NTP uses techniques evolved from them and both linear-systems and agreement methodologies. <p> The Unix 4.3bsd time daemon timed [GUS85a] uses a single master-time daemon to measure offsets of a number of slave hosts and send periodic corrections to them. In this model the master is determined using an election algorithm <ref> [GUS85b] </ref> designed to avoid situations where either no master is elected or more than one master is elected. The election process requires a broadcast capability, which is not a ubiquitous feature of the Internet.
Reference: [HAL84] <author> Halpern, J.Y., B. Simons, R. Strong and D. Dolly. </author> <title> Fault-tolerant clock synchronization. </title> <booktitle> Proc. Third Annual ACM Symposium on Principles of Distributed Computing (August 1984), </booktitle> <pages> 89-102. </pages>
Reference-contexts: Experimental results on measured clock offsets and roundtrip delays in the Internet are discussed in [MIL83a], [MIL85b], [COL88] and [MIL88a]. Other synchronization algorithms are discussed in [LAM78], [GUS84], <ref> [HAL84] </ref>, [LUN84], [LAM85], [MAR85], [MIL85a], [MIL85b], [MIL85c], [GUS85b], [SCH86], [TRI86], [RIC88], [MIL88a], [DEC89] and [MIL91a], while protocols based on them are described in [MIL81a], [MIL81b], [MIL83b], [GUS85a], [MIL85c], [TRI86], [MIL88a], [DEC89] and [MIL91a]. NTP uses techniques evolved from them and both linear-systems and agreement methodologies. <p> There are two classes of convergence functions, those involving interactive-convergence algorithms and those involving interactive-consistency algorithms. Interactive-convergence algorithms use statistical clustering RFC-1305 Network Time Protocol (Version 3) March 1992 Mills Page 3 techniques such as the fault-tolerant average algorithm of <ref> [HAL84] </ref>, the CNV algorithm of [LUN84], the majority-subset algorithm of [MIL85a], the non-Byzantine algorithm of [RIC88], the egocentric algorithm of [SCH86], the intersection algorithm of [MAR85] and [DEC89] and the algorithms in Section 4 of this document. <p> Interactive-consistency algorithms are designed to detect faulty clock processes which might indicate grossly inconsistent offsets in successive readings or to different readers. These algorithms use an agreement protocol involving successive rounds of readings, possibly relayed and possibly augmented by digital signatures. Examples include the fireworks algorithm of <ref> [HAL84] </ref> and the optimum algorithm of [SRI87]. However, these algorithms require large numbers of messages, especially when large numbers of clocks are involved, and are designed to detect faults that have rarely been found in the Internet experience. For these reasons they are not considered further in this document.
Reference: [JOR85] <author> Jordan, </author> <title> E.C. (Ed). Reference Data for Engineers, Seventh Edition. </title> <publisher> H.W. Sams & Co., </publisher> <address> New York, </address> <year> 1985. </year>
Reference: [KOP87] <author> Kopetz, H., and W. Ochsenreiter. </author> <title> Clock synchronization in distributed real-time systems. </title> <journal> IEEE Trans. Computers C-36, </journal> <month> 8 (August </month> <year> 1987), </year> <pages> 933-939. </pages>
Reference-contexts: In addition to the burdensome, but presumably infrequent, overheads of the election process, the offset measurement/correction process requires twice as many messages as NTP per update. A scheme with features similar to NTP is described in <ref> [KOP87] </ref>. This scheme is intended for multi-server LANs where each of a set of possibly many time servers determines its local-time offset relative to each of the other servers in the set using periodic timestamped messages, then determines the local-clock correction using the Fault-Tolerant Average (FTA) algorithm of [LUN84].
Reference: [LAM78] <author> Lamport, L., </author> <title> Time, clocks and the ordering of events in a distributed system. </title> <journal> Comm. ACM 21, </journal> <month> 7 (July </month> <year> 1978), </year> <pages> 558-565. </pages>
Reference-contexts: Experimental results on measured clock offsets and roundtrip delays in the Internet are discussed in [MIL83a], [MIL85b], [COL88] and [MIL88a]. Other synchronization algorithms are discussed in <ref> [LAM78] </ref>, [GUS84], [HAL84], [LUN84], [LAM85], [MAR85], [MIL85a], [MIL85b], [MIL85c], [GUS85b], [SCH86], [TRI86], [RIC88], [MIL88a], [DEC89] and [MIL91a], while protocols based on them are described in [MIL81a], [MIL81b], [MIL83b], [GUS85a], [MIL85c], [TRI86], [MIL88a], [DEC89] and [MIL91a]. NTP uses techniques evolved from them and both linear-systems and agreement methodologies.
Reference: [LAM85] <author> Lamport, L., </author> <title> and P.M. Melliar-Smith. Synchronizing clocks in the presence of faults. </title> <journal> J. ACM 32, </journal> <month> 1 (January </month> <year> 1985), </year> <pages> 52-78. </pages>
Reference-contexts: Experimental results on measured clock offsets and roundtrip delays in the Internet are discussed in [MIL83a], [MIL85b], [COL88] and [MIL88a]. Other synchronization algorithms are discussed in [LAM78], [GUS84], [HAL84], [LUN84], <ref> [LAM85] </ref>, [MAR85], [MIL85a], [MIL85b], [MIL85c], [GUS85b], [SCH86], [TRI86], [RIC88], [MIL88a], [DEC89] and [MIL91a], while protocols based on them are described in [MIL81a], [MIL81b], [MIL83b], [GUS85a], [MIL85c], [TRI86], [MIL88a], [DEC89] and [MIL91a]. NTP uses techniques evolved from them and both linear-systems and agreement methodologies. <p> NTP uses techniques evolved from them and both linear-systems and agreement methodologies. Linear methods for digital telephone network synchronization are summarized in [LIN80], while agreement methods for clock synchronization are summarized in <ref> [LAM85] </ref>. The Digital Time Service (DTS) [DEC89] has many of the same service objectives as NTP. <p> A truechimer is a clock that maintains timekeeping accuracy to a previously published (and trusted) standard, while a falseticker is a clock that does not. Determining whether a particular clock is a truechimer or falseticker is an interesting abstract problem which can be attacked using agreement methods summarized in <ref> [LAM85] </ref> and [SRI87]. A convergence function operates upon the offsets between the clocks in a system to increase the accuracy by reducing or eliminating errors caused by falsetickers. There are two classes of convergence functions, those involving interactive-convergence algorithms and those involving interactive-consistency algorithms.
Reference: [LIN80] <author> Lindsay, W.C., and A.V. Kantak. </author> <title> Network synchronization of random signals. </title> <journal> IEEE Trans. Communications COM-28, </journal> <month> 8 (August </month> <year> 1980), </year> <pages> 1260-1266. </pages>
Reference-contexts: NTP uses techniques evolved from them and both linear-systems and agreement methodologies. Linear methods for digital telephone network synchronization are summarized in <ref> [LIN80] </ref>, while agreement methods for clock synchronization are summarized in [LAM85]. The Digital Time Service (DTS) [DEC89] has many of the same service objectives as NTP. <p> The particular choice of offset measurement and computation procedure described in Section 3 is a variant of the returnable-time system used in some digital telephone networks <ref> [LIN80] </ref>. The clock filter and selection algorithms are designed so that the clock synchronization subnet self-organizes into a hierarchical-master-slave configuration [MIT80]. With respect to timekeeping accuracy and stability, the similarity of NTP to digital telephone systems is not accidental, since systems like this have been studied extensively [LIN80], [BRA80]. <p> digital telephone networks <ref> [LIN80] </ref>. The clock filter and selection algorithms are designed so that the clock synchronization subnet self-organizes into a hierarchical-master-slave configuration [MIT80]. With respect to timekeeping accuracy and stability, the similarity of NTP to digital telephone systems is not accidental, since systems like this have been studied extensively [LIN80], [BRA80]. What makes the NTP model unique is the adaptive configuration, polling, filtering, selection and correctness mechanisms which tailor the dynamics of the system to fit the ubiquitous Internet environment. 2.
Reference: [LUN84] <author> Lundelius, J., and N.A. Lynch. </author> <title> A new fault-tolerant algorithm for clock synchronization. </title> <booktitle> Proc. Third Annual ACM Symposium on Principles of Distributed Computing (August 1984), </booktitle> <pages> 75-88. </pages>
Reference-contexts: Experimental results on measured clock offsets and roundtrip delays in the Internet are discussed in [MIL83a], [MIL85b], [COL88] and [MIL88a]. Other synchronization algorithms are discussed in [LAM78], [GUS84], [HAL84], <ref> [LUN84] </ref>, [LAM85], [MAR85], [MIL85a], [MIL85b], [MIL85c], [GUS85b], [SCH86], [TRI86], [RIC88], [MIL88a], [DEC89] and [MIL91a], while protocols based on them are described in [MIL81a], [MIL81b], [MIL83b], [GUS85a], [MIL85c], [TRI86], [MIL88a], [DEC89] and [MIL91a]. NTP uses techniques evolved from them and both linear-systems and agreement methodologies. <p> This scheme is intended for multi-server LANs where each of a set of possibly many time servers determines its local-time offset relative to each of the other servers in the set using periodic timestamped messages, then determines the local-clock correction using the Fault-Tolerant Average (FTA) algorithm of <ref> [LUN84] </ref>. The FTA algorithm, which is useful where up to k servers may be faulty, sorts the offsets, discards the k highest and lowest ones and averages the rest. <p> There are two classes of convergence functions, those involving interactive-convergence algorithms and those involving interactive-consistency algorithms. Interactive-convergence algorithms use statistical clustering RFC-1305 Network Time Protocol (Version 3) March 1992 Mills Page 3 techniques such as the fault-tolerant average algorithm of [HAL84], the CNV algorithm of <ref> [LUN84] </ref>, the majority-subset algorithm of [MIL85a], the non-Byzantine algorithm of [RIC88], the egocentric algorithm of [SCH86], the intersection algorithm of [MAR85] and [DEC89] and the algorithms in Section 4 of this document.
Reference: [MAR85] <author> Marzullo, K., and S. Owicki. </author> <title> Maintaining the time in a distributed system. </title> <booktitle> ACM Operating Systems Review 19, </booktitle> <month> 3 (July </month> <year> 1985), </year> <pages> 44-54. </pages>
Reference-contexts: Experimental results on measured clock offsets and roundtrip delays in the Internet are discussed in [MIL83a], [MIL85b], [COL88] and [MIL88a]. Other synchronization algorithms are discussed in [LAM78], [GUS84], [HAL84], [LUN84], [LAM85], <ref> [MAR85] </ref>, [MIL85a], [MIL85b], [MIL85c], [GUS85b], [SCH86], [TRI86], [RIC88], [MIL88a], [DEC89] and [MIL91a], while protocols based on them are described in [MIL81a], [MIL81b], [MIL83b], [GUS85a], [MIL85c], [TRI86], [MIL88a], [DEC89] and [MIL91a]. NTP uses techniques evolved from them and both linear-systems and agreement methodologies. <p> Interactive-convergence algorithms use statistical clustering RFC-1305 Network Time Protocol (Version 3) March 1992 Mills Page 3 techniques such as the fault-tolerant average algorithm of [HAL84], the CNV algorithm of [LUN84], the majority-subset algorithm of [MIL85a], the non-Byzantine algorithm of [RIC88], the egocentric algorithm of [SCH86], the intersection algorithm of <ref> [MAR85] </ref> and [DEC89] and the algorithms in Section 4 of this document. Interactive-consistency algorithms are designed to detect faulty clock processes which might indicate grossly inconsistent offsets in successive readings or to different readers. <p> It consists of two algorithms, the intersection algorithm and the clustering algorithm. The intersection algorithm constructs a list of candidate peers eligible to become the synchronization source, computes a confidence interval for each and casts out falsetickers using a technique adapted from Marzullo and Owicki <ref> [MAR85] </ref>. The clustering algorithm sorts the list of surviving candidates in order of stratum and synchronization distance and repeatedly casts out outlyers on the basis of select dispersion until only the most accurate, precise and stable survivors are left.
Reference: [MIL81a] <author> Mills, </author> <title> D.L. Time Synchronization in DCNET Hosts. DARPA Internet Project Report IEN-173, </title> <institution> COMSAT Laboratories, </institution> <month> February </month> <year> 1981. </year>
Reference-contexts: Other synchronization algorithms are discussed in [LAM78], [GUS84], [HAL84], [LUN84], [LAM85], [MAR85], [MIL85a], [MIL85b], [MIL85c], [GUS85b], [SCH86], [TRI86], [RIC88], [MIL88a], [DEC89] and [MIL91a], while protocols based on them are described in <ref> [MIL81a] </ref>, [MIL81b], [MIL83b], [GUS85a], [MIL85c], [TRI86], [MIL88a], [DEC89] and [MIL91a]. NTP uses techniques evolved from them and both linear-systems and agreement methodologies. Linear methods for digital telephone network synchronization are summarized in [LIN80], while agreement methods for clock synchronization are summarized in [LAM85].
Reference: [MIL81b] <author> Mills, </author> <type> D.L. </type> <institution> DCNET Internet Clock Service. DARPA Network Working Group Report RFC-778, COMSAT Laboratories, </institution> <month> April </month> <year> 1981. </year>
Reference-contexts: Other synchronization algorithms are discussed in [LAM78], [GUS84], [HAL84], [LUN84], [LAM85], [MAR85], [MIL85a], [MIL85b], [MIL85c], [GUS85b], [SCH86], [TRI86], [RIC88], [MIL88a], [DEC89] and [MIL91a], while protocols based on them are described in [MIL81a], <ref> [MIL81b] </ref>, [MIL83b], [GUS85a], [MIL85c], [TRI86], [MIL88a], [DEC89] and [MIL91a]. NTP uses techniques evolved from them and both linear-systems and agreement methodologies. Linear methods for digital telephone network synchronization are summarized in [LIN80], while agreement methods for clock synchronization are summarized in [LAM85].
Reference: [MIL83a] <author> Mills, </author> <title> D.L. Internet Delay Experiments. DARPA Network Working Group Report RFC-889, </title> <address> M/A-COM Linkabit, </address> <month> December </month> <year> 1983. </year>
Reference-contexts: Experimental results on measured clock offsets and roundtrip delays in the Internet are discussed in <ref> [MIL83a] </ref>, [MIL85b], [COL88] and [MIL88a]. Other synchronization algorithms are discussed in [LAM78], [GUS84], [HAL84], [LUN84], [LAM85], [MAR85], [MIL85a], [MIL85b], [MIL85c], [GUS85b], [SCH86], [TRI86], [RIC88], [MIL88a], [DEC89] and [MIL91a], while protocols based on them are described in [MIL81a], [MIL81b], [MIL83b], [GUS85a], [MIL85c], [TRI86], [MIL88a], [DEC89] and [MIL91a].
Reference: [MIL83b] <author> Mills, </author> <title> D.L. DCN local-network protocols. DARPA Network Working Group Report RFC-891, </title> <address> M/A-COM Linkabit, </address> <month> December </month> <year> 1983. </year>
Reference-contexts: Provisions must be included to adjust the software logical-clock time and frequency in response to corrections produced by NTP. Section 5 describes a local-clock design evolved from the Fuzzball implementation described in <ref> [MIL83b] </ref> and [MIL88b]. This design includes offsetslewing, frequency compensation and deglitching RFC-1305 Network Time Protocol (Version 3) March 1992 Mills Page 1 mechanisms capable of accuracies in the order of a millisecond, even after extended periods when synchronization to primary reference sources has been lost. <p> Other synchronization algorithms are discussed in [LAM78], [GUS84], [HAL84], [LUN84], [LAM85], [MAR85], [MIL85a], [MIL85b], [MIL85c], [GUS85b], [SCH86], [TRI86], [RIC88], [MIL88a], [DEC89] and [MIL91a], while protocols based on them are described in [MIL81a], [MIL81b], <ref> [MIL83b] </ref>, [GUS85a], [MIL85c], [TRI86], [MIL88a], [DEC89] and [MIL91a]. NTP uses techniques evolved from them and both linear-systems and agreement methodologies. Linear methods for digital telephone network synchronization are summarized in [LIN80], while agreement methods for clock synchronization are summarized in [LAM85]. <p> These features are described in Section 4 and Appendix H of this document. The Fuzzball routing protocol <ref> [MIL83b] </ref>, sometimes called Hellospeak, incorporates time synchronization directly into the routing-protocol design. One or more processes synchronize to an external reference source, such as a radio clock or NTP daemon, and the routing algorithm constructs a minimum-weight spanning tree rooted on these processes. <p> A logical clock is then constructed using these components plus software components that adjust the apparent time and frequency in response to periodic updates computed by NTP or some other timesynchronization protocol such as Hellospeak <ref> [MIL83b] </ref> or the Unix 4.3bsd TSP [GUS85a]. This section describes the Fuzzball local-clock model and implementation, which includes provisions for precise time and frequency adjustment and can maintain time to within 15 ns and frequency to within 0.3 ms per day.
Reference: [MIL85a] <author> Mills, </author> <title> D.L. Algorithms for synchronizing network clocks. DARPA Network Working Group Report RFC-956, </title> <address> M/A-COM Linkabit, </address> <month> September </month> <year> 1985. </year>
Reference-contexts: It also includes provisions for operation with a number of mutually suspicious, hierarchically distributed primary reference sources such as radiosynchronized clocks. Section 4 describes algorithms useful for deglitching and smoothing clock-offset samples collected on a continuous basis. These algorithms evolved from those suggested in <ref> [MIL85a] </ref>, were refined as the results of experiments described in [MIL85b] and further evolved under typical operating conditions over the last three years. <p> Experimental results on measured clock offsets and roundtrip delays in the Internet are discussed in [MIL83a], [MIL85b], [COL88] and [MIL88a]. Other synchronization algorithms are discussed in [LAM78], [GUS84], [HAL84], [LUN84], [LAM85], [MAR85], <ref> [MIL85a] </ref>, [MIL85b], [MIL85c], [GUS85b], [SCH86], [TRI86], [RIC88], [MIL88a], [DEC89] and [MIL91a], while protocols based on them are described in [MIL81a], [MIL81b], [MIL83b], [GUS85a], [MIL85c], [TRI86], [MIL88a], [DEC89] and [MIL91a]. NTP uses techniques evolved from them and both linear-systems and agreement methodologies. <p> Interactive-convergence algorithms use statistical clustering RFC-1305 Network Time Protocol (Version 3) March 1992 Mills Page 3 techniques such as the fault-tolerant average algorithm of [HAL84], the CNV algorithm of [LUN84], the majority-subset algorithm of <ref> [MIL85a] </ref>, the non-Byzantine algorithm of [RIC88], the egocentric algorithm of [SCH86], the intersection algorithm of [MAR85] and [DEC89] and the algorithms in Section 4 of this document. Interactive-consistency algorithms are designed to detect faulty clock processes which might indicate grossly inconsistent offsets in successive readings or to different readers.
Reference: [MIL85b] <author> Mills, </author> <title> D.L. Experiments in network clock synchronization. DARPA Network Working Group Report RFC-957, </title> <address> M/A-COM Linkabit, </address> <month> September </month> <year> 1985. </year> <title> RFC-1305 Network Time Protocol (Version 3) March 1992 Mills Page 48 </title>
Reference-contexts: Section 4 describes algorithms useful for deglitching and smoothing clock-offset samples collected on a continuous basis. These algorithms evolved from those suggested in [MIL85a], were refined as the results of experiments described in <ref> [MIL85b] </ref> and further evolved under typical operating conditions over the last three years. <p> Experimental results on measured clock offsets and roundtrip delays in the Internet are discussed in [MIL83a], <ref> [MIL85b] </ref>, [COL88] and [MIL88a]. Other synchronization algorithms are discussed in [LAM78], [GUS84], [HAL84], [LUN84], [LAM85], [MAR85], [MIL85a], [MIL85b], [MIL85c], [GUS85b], [SCH86], [TRI86], [RIC88], [MIL88a], [DEC89] and [MIL91a], while protocols based on them are described in [MIL81a], [MIL81b], [MIL83b], [GUS85a], [MIL85c], [TRI86], [MIL88a], [DEC89] and [MIL91a]. <p> Experimental results on measured clock offsets and roundtrip delays in the Internet are discussed in [MIL83a], <ref> [MIL85b] </ref>, [COL88] and [MIL88a]. Other synchronization algorithms are discussed in [LAM78], [GUS84], [HAL84], [LUN84], [LAM85], [MAR85], [MIL85a], [MIL85b], [MIL85c], [GUS85b], [SCH86], [TRI86], [RIC88], [MIL88a], [DEC89] and [MIL91a], while protocols based on them are described in [MIL81a], [MIL81b], [MIL83b], [GUS85a], [MIL85c], [TRI86], [MIL88a], [DEC89] and [MIL91a]. NTP uses techniques evolved from them and both linear-systems and agreement methodologies.
Reference: [MIL85c] <author> Mills, </author> <title> D.L. Network Time Protocol (NTP). DARPA Network Working Group Report RFC-958, </title> <address> M/A-COM Linkabit, </address> <month> September </month> <year> 1985. </year>
Reference-contexts: A companion document [MIL91a] summarizes the requirements, analytical models, algorithmic analysis and performance under typical Internet conditions. Another document [MIL91b] describes the NTP timescale and its relationship to other standard timescales now in use. NTP was first described in RFC-958 <ref> [MIL85c] </ref>, but has since evolved in significant ways, culminating in the most recent NTP Version 2 described in RFC-1119 [MIL89]. It is built on the Internet Protocol (IP) [DAR81a] and User Datagram Protocol (UDP) [POS80], which provide a connectionless transport mechanism; however, it is readily adaptable to other protocol suites. <p> Experimental results on measured clock offsets and roundtrip delays in the Internet are discussed in [MIL83a], [MIL85b], [COL88] and [MIL88a]. Other synchronization algorithms are discussed in [LAM78], [GUS84], [HAL84], [LUN84], [LAM85], [MAR85], [MIL85a], [MIL85b], <ref> [MIL85c] </ref>, [GUS85b], [SCH86], [TRI86], [RIC88], [MIL88a], [DEC89] and [MIL91a], while protocols based on them are described in [MIL81a], [MIL81b], [MIL83b], [GUS85a], [MIL85c], [TRI86], [MIL88a], [DEC89] and [MIL91a]. NTP uses techniques evolved from them and both linear-systems and agreement methodologies. <p> Other synchronization algorithms are discussed in [LAM78], [GUS84], [HAL84], [LUN84], [LAM85], [MAR85], [MIL85a], [MIL85b], <ref> [MIL85c] </ref>, [GUS85b], [SCH86], [TRI86], [RIC88], [MIL88a], [DEC89] and [MIL91a], while protocols based on them are described in [MIL81a], [MIL81b], [MIL83b], [GUS85a], [MIL85c], [TRI86], [MIL88a], [DEC89] and [MIL91a]. NTP uses techniques evolved from them and both linear-systems and agreement methodologies. Linear methods for digital telephone network synchronization are summarized in [LIN80], while agreement methods for clock synchronization are summarized in [LAM85].
Reference: [MIL88a] <author> Mills, </author> <title> D.L. Network Time Protocol (version 1) - specification and implementation. </title> <institution> DARPA Network Working Group Report RFC-1059, University of Delaware, </institution> <month> July </month> <year> 1988. </year>
Reference-contexts: Experimental results on measured clock offsets and roundtrip delays in the Internet are discussed in [MIL83a], [MIL85b], [COL88] and <ref> [MIL88a] </ref>. Other synchronization algorithms are discussed in [LAM78], [GUS84], [HAL84], [LUN84], [LAM85], [MAR85], [MIL85a], [MIL85b], [MIL85c], [GUS85b], [SCH86], [TRI86], [RIC88], [MIL88a], [DEC89] and [MIL91a], while protocols based on them are described in [MIL81a], [MIL81b], [MIL83b], [GUS85a], [MIL85c], [TRI86], [MIL88a], [DEC89] and [MIL91a]. <p> Experimental results on measured clock offsets and roundtrip delays in the Internet are discussed in [MIL83a], [MIL85b], [COL88] and <ref> [MIL88a] </ref>. Other synchronization algorithms are discussed in [LAM78], [GUS84], [HAL84], [LUN84], [LAM85], [MAR85], [MIL85a], [MIL85b], [MIL85c], [GUS85b], [SCH86], [TRI86], [RIC88], [MIL88a], [DEC89] and [MIL91a], while protocols based on them are described in [MIL81a], [MIL81b], [MIL83b], [GUS85a], [MIL85c], [TRI86], [MIL88a], [DEC89] and [MIL91a]. NTP uses techniques evolved from them and both linear-systems and agreement methodologies. <p> roundtrip delays in the Internet are discussed in [MIL83a], [MIL85b], [COL88] and <ref> [MIL88a] </ref>. Other synchronization algorithms are discussed in [LAM78], [GUS84], [HAL84], [LUN84], [LAM85], [MAR85], [MIL85a], [MIL85b], [MIL85c], [GUS85b], [SCH86], [TRI86], [RIC88], [MIL88a], [DEC89] and [MIL91a], while protocols based on them are described in [MIL81a], [MIL81b], [MIL83b], [GUS85a], [MIL85c], [TRI86], [MIL88a], [DEC89] and [MIL91a]. NTP uses techniques evolved from them and both linear-systems and agreement methodologies. Linear methods for digital telephone network synchronization are summarized in [LIN80], while agreement methods for clock synchronization are summarized in [LAM85].
Reference: [MIL88b] <author> Mills, </author> <title> D.L. </title> <booktitle> The Fuzzball. Proc. ACM SIGCOMM 88 Symposium (Palo Alto, </booktitle> <address> CA, </address> <month> August </month> <year> 1988), </year> <pages> 115-122. </pages>
Reference-contexts: Provisions must be included to adjust the software logical-clock time and frequency in response to corrections produced by NTP. Section 5 describes a local-clock design evolved from the Fuzzball implementation described in [MIL83b] and <ref> [MIL88b] </ref>. This design includes offsetslewing, frequency compensation and deglitching RFC-1305 Network Time Protocol (Version 3) March 1992 Mills Page 1 mechanisms capable of accuracies in the order of a millisecond, even after extended periods when synchronization to primary reference sources has been lost. <p> Another implementation for the Fuzzball operating system <ref> [MIL88b] </ref> was written by the author. Many individuals to numerous to mention meticulously tested the several beta-test prototype versions and ruthlessly smoked out the bugs, both in the code and the specification.
Reference: [MIL89] <author> Mills, </author> <title> D.L. Network Time Protocol (version 2) - specification and implementation. </title> <institution> DARPA Network Working Group Report RFC-1119, University of Delaware, </institution> <month> September </month> <year> 1989. </year>
Reference-contexts: Another document [MIL91b] describes the NTP timescale and its relationship to other standard timescales now in use. NTP was first described in RFC-958 [MIL85c], but has since evolved in significant ways, culminating in the most recent NTP Version 2 described in RFC-1119 <ref> [MIL89] </ref>. It is built on the Internet Protocol (IP) [DAR81a] and User Datagram Protocol (UDP) [POS80], which provide a connectionless transport mechanism; however, it is readily adaptable to other protocol suites.
Reference: [MIL90] <author> Mills, </author> <title> D.L. Measured performance of the Network Time Protocol in the Internet system. </title> <journal> ACM Computer Communication Review 20, </journal> <month> 1 (January </month> <year> 1990), </year> <pages> 65-75. </pages> <month> [MIL91a]Mills, </month> <title> D.L. Internet time synchronization: the Network Time Protocol. </title> <journal> IEEE Trans. Communications 39, </journal> <month> 10 (October </month> <year> 1991), </year> <pages> 1482-1493. </pages> <month> [MIL91b]Mills, </month> <title> D.L. On the chronology and metrology of computer network timescales and their application to the Network Time Protocol. </title> <journal> ACM Computer Communications Review 21, </journal> <month> 5 (October </month> <year> 1991), </year> <pages> 8-17. </pages>
Reference-contexts: Obviously, the accuracies achievable depend upon the statistical properties of the outbound and inbound data paths. Further analysis and experimental results bearing on this issue can be found in <ref> [MIL90] </ref> and in Appendix H. Test 4 requires that the calculated delay be within reasonable bounds: test4 ( | d | &lt; NTP.MAXDISPERSE and e &lt; NTP.MAXDISPERSE ) ; /* test 4 */ Test 5 is implemented only if the authentication mechanism described in Appendix C is implemented.
Reference: [MIT80] <author> Mitra, D. </author> <title> Network synchronization: analysis of a hybrid of masterslave and mutual synchronization. </title> <journal> IEEE Trans. Communications COM-28, </journal> <month> 8 (August </month> <year> 1980), </year> <pages> 1245-1259. </pages>
Reference-contexts: The particular choice of offset measurement and computation procedure described in Section 3 is a variant of the returnable-time system used in some digital telephone networks [LIN80]. The clock filter and selection algorithms are designed so that the clock synchronization subnet self-organizes into a hierarchical-master-slave configuration <ref> [MIT80] </ref>. With respect to timekeeping accuracy and stability, the similarity of NTP to digital telephone systems is not accidental, since systems like this have been studied extensively [LIN80], [BRA80].
Reference: [NBS77] <institution> Data Encryption Standard . Federal Information Processing Standards Publication 46. National Bureau of Standards, U.S. Department of Commerce, </institution> <year> 1977. </year>
Reference: [NBS79] <institution> Time and Frequency Dissemination Services . NBS Special Publication 432, U.S. Depart ment of Commerce, </institution> <year> 1979. </year>
Reference: [NBS80] <institution> DES Modes of Operation . Federal Information Processing Standards Publication 81. National Bureau of Standards, U.S. Department of Commerce, </institution> <month> December </month> <year> 1980. </year>
Reference: [POS80] <author> Postel, J. </author> <title> User Datagram Protocol. </title> <institution> DARPA Network Working Group Report RFC-768, USC Information Sciences Institute, </institution> <month> August </month> <year> 1980. </year>
Reference-contexts: NTP was first described in RFC-958 [MIL85c], but has since evolved in significant ways, culminating in the most recent NTP Version 2 described in RFC-1119 [MIL89]. It is built on the Internet Protocol (IP) [DAR81a] and User Datagram Protocol (UDP) <ref> [POS80] </ref>, which provide a connectionless transport mechanism; however, it is readily adaptable to other protocol suites.
Reference: [POS83a] <author> Postel, J. </author> <title> Daytime protocol. </title> <institution> DARPA Network Working Group Report RFC-867, USC Information Sciences Institute, </institution> <month> May </month> <year> 1983. </year>
Reference-contexts: Appendix I illustrates Clanguage code segments for the clock-filter, clock-selection and related algorithms described in Section 4. 1.1. Related Technology Other mechanisms have been specified in the Internet protocol suite to record and transmit the time at which an event takes place, including the Daytime protocol <ref> [POS83a] </ref>, Time Protocol [POS83b], ICMP Timestamp message [DAR81b] and IP Timestamp option [SU81]. Experimental results on measured clock offsets and roundtrip delays in the Internet are discussed in [MIL83a], [MIL85b], [COL88] and [MIL88a].
Reference: [POS83b] <author> Postel, J. </author> <title> Time protocol. </title> <institution> DARPA Network Working Group Report RFC-868, USC Information Sciences Institute, </institution> <month> May </month> <year> 1983. </year>
Reference-contexts: It is built on the Internet Protocol (IP) [DAR81a] and User Datagram Protocol (UDP) [POS80], which provide a connectionless transport mechanism; however, it is readily adaptable to other protocol suites. NTP is evolved from the Time Protocol <ref> [POS83b] </ref> and the ICMP Timestamp message [DAR81b], but is specifically designed to maintain accuracy and robustness, even when used over typical Internet paths involving multiple gateways, highly dispersive delays and unreliable nets. The service environment consists of the implementation model and service model described in Section 2. <p> Appendix I illustrates Clanguage code segments for the clock-filter, clock-selection and related algorithms described in Section 4. 1.1. Related Technology Other mechanisms have been specified in the Internet protocol suite to record and transmit the time at which an event takes place, including the Daytime protocol [POS83a], Time Protocol <ref> [POS83b] </ref>, ICMP Timestamp message [DAR81b] and IP Timestamp option [SU81]. Experimental results on measured clock offsets and roundtrip delays in the Internet are discussed in [MIL83a], [MIL85b], [COL88] and [MIL88a].
Reference: [RIC88] <author> Rickert, N.W. </author> <title> Non Byzantine clock synchronization - a programming experiment. </title> <booktitle> ACM Operating Systems Review 22, </booktitle> <month> 1 (January </month> <year> 1988), </year> <pages> 73-78. </pages>
Reference-contexts: Experimental results on measured clock offsets and roundtrip delays in the Internet are discussed in [MIL83a], [MIL85b], [COL88] and [MIL88a]. Other synchronization algorithms are discussed in [LAM78], [GUS84], [HAL84], [LUN84], [LAM85], [MAR85], [MIL85a], [MIL85b], [MIL85c], [GUS85b], [SCH86], [TRI86], <ref> [RIC88] </ref>, [MIL88a], [DEC89] and [MIL91a], while protocols based on them are described in [MIL81a], [MIL81b], [MIL83b], [GUS85a], [MIL85c], [TRI86], [MIL88a], [DEC89] and [MIL91a]. NTP uses techniques evolved from them and both linear-systems and agreement methodologies. <p> Interactive-convergence algorithms use statistical clustering RFC-1305 Network Time Protocol (Version 3) March 1992 Mills Page 3 techniques such as the fault-tolerant average algorithm of [HAL84], the CNV algorithm of [LUN84], the majority-subset algorithm of [MIL85a], the non-Byzantine algorithm of <ref> [RIC88] </ref>, the egocentric algorithm of [SCH86], the intersection algorithm of [MAR85] and [DEC89] and the algorithms in Section 4 of this document. Interactive-consistency algorithms are designed to detect faulty clock processes which might indicate grossly inconsistent offsets in successive readings or to different readers.
Reference: [SCH86] <author> Schneider, </author> <title> F.B. A paradigm for reliable clock synchronization. </title> <institution> Department of Computer Science Technical Report TR 86-735, Cornell University, </institution> <month> February </month> <year> 1986. </year>
Reference-contexts: Experimental results on measured clock offsets and roundtrip delays in the Internet are discussed in [MIL83a], [MIL85b], [COL88] and [MIL88a]. Other synchronization algorithms are discussed in [LAM78], [GUS84], [HAL84], [LUN84], [LAM85], [MAR85], [MIL85a], [MIL85b], [MIL85c], [GUS85b], <ref> [SCH86] </ref>, [TRI86], [RIC88], [MIL88a], [DEC89] and [MIL91a], while protocols based on them are described in [MIL81a], [MIL81b], [MIL83b], [GUS85a], [MIL85c], [TRI86], [MIL88a], [DEC89] and [MIL91a]. NTP uses techniques evolved from them and both linear-systems and agreement methodologies. <p> The FTA algorithm, which is useful where up to k servers may be faulty, sorts the offsets, discards the k highest and lowest ones and averages the rest. The scheme, as described in <ref> [SCH86] </ref>, is most suitable to LAN environments which support broadcast and would result in unacceptable overhead in an internet environment. <p> Interactive-convergence algorithms use statistical clustering RFC-1305 Network Time Protocol (Version 3) March 1992 Mills Page 3 techniques such as the fault-tolerant average algorithm of [HAL84], the CNV algorithm of [LUN84], the majority-subset algorithm of [MIL85a], the non-Byzantine algorithm of [RIC88], the egocentric algorithm of <ref> [SCH86] </ref>, the intersection algorithm of [MAR85] and [DEC89] and the algorithms in Section 4 of this document. Interactive-consistency algorithms are designed to detect faulty clock processes which might indicate grossly inconsistent offsets in successive readings or to different readers.
Reference: [SMI86] <author> Smith, J. </author> <title> Modern Communications Circuits . McGraw-Hill, </title> <address> New York, NY, </address> <year> 1986. </year> <title> RFC-1305 Network Time Protocol (Version 3) March 1992 Mills Page 49 </title>
Reference: [SRI87] <author> Srikanth, T.K., and S. Toueg. </author> <title> Optimal clock synchronization. </title> <journal> J. ACM 34, </journal> <month> 3 (July </month> <year> 1987), </year> <pages> 626-645. </pages>
Reference-contexts: Determining whether a particular clock is a truechimer or falseticker is an interesting abstract problem which can be attacked using agreement methods summarized in [LAM85] and <ref> [SRI87] </ref>. A convergence function operates upon the offsets between the clocks in a system to increase the accuracy by reducing or eliminating errors caused by falsetickers. There are two classes of convergence functions, those involving interactive-convergence algorithms and those involving interactive-consistency algorithms. <p> These algorithms use an agreement protocol involving successive rounds of readings, possibly relayed and possibly augmented by digital signatures. Examples include the fireworks algorithm of [HAL84] and the optimum algorithm of <ref> [SRI87] </ref>. However, these algorithms require large numbers of messages, especially when large numbers of clocks are involved, and are designed to detect faults that have rarely been found in the Internet experience. For these reasons they are not considered further in this document.
Reference: [STE88] <author> Steiner, J.G., C. Neuman, and J.I. Schiller. </author> <title> Kerberos: an authentication service for open network systems. </title> <booktitle> Proc. Winter USENIX Conference (February 1988). </booktitle>
Reference-contexts: For this purpose it is useful to distinguish between three categories of access: those that are preauthorized as trusted, preauthorized as friendly and all other (non-preauthorized) accesses. Presumably, preauthorization is accomplished by entries in the configuration file or some kind of ticket-management system such as Kerberos <ref> [STE88] </ref>. In this model only trusted accesses can result in the peer becoming the synchronization source. While friendly accesses cannot result in the peer becoming the synchronization source, NTP messages and timestamps are returned as specified.
Reference: [SU81] <author> Su, Z. </author> <title> A specification of the Internet protocol (IP) timestamp option. DARPA Network Working Group Report RFC-781. </title> <booktitle> SRI International, </booktitle> <month> May </month> <year> 1981. </year>
Reference-contexts: Related Technology Other mechanisms have been specified in the Internet protocol suite to record and transmit the time at which an event takes place, including the Daytime protocol [POS83a], Time Protocol [POS83b], ICMP Timestamp message [DAR81b] and IP Timestamp option <ref> [SU81] </ref>. Experimental results on measured clock offsets and roundtrip delays in the Internet are discussed in [MIL83a], [MIL85b], [COL88] and [MIL88a].
Reference: [TRI86] <author> Tripathi, S.K., and S.H. Chang. ETempo: </author> <title> a clock synchronization algorithm for hierarchical LANs - implementation and measurements. </title> <institution> Systems Research Center Technical Report TR-86-48, University of Maryland, </institution> <year> 1986. </year>
Reference-contexts: Experimental results on measured clock offsets and roundtrip delays in the Internet are discussed in [MIL83a], [MIL85b], [COL88] and [MIL88a]. Other synchronization algorithms are discussed in [LAM78], [GUS84], [HAL84], [LUN84], [LAM85], [MAR85], [MIL85a], [MIL85b], [MIL85c], [GUS85b], [SCH86], <ref> [TRI86] </ref>, [RIC88], [MIL88a], [DEC89] and [MIL91a], while protocols based on them are described in [MIL81a], [MIL81b], [MIL83b], [GUS85a], [MIL85c], [TRI86], [MIL88a], [DEC89] and [MIL91a]. NTP uses techniques evolved from them and both linear-systems and agreement methodologies. <p> Other synchronization algorithms are discussed in [LAM78], [GUS84], [HAL84], [LUN84], [LAM85], [MAR85], [MIL85a], [MIL85b], [MIL85c], [GUS85b], [SCH86], <ref> [TRI86] </ref>, [RIC88], [MIL88a], [DEC89] and [MIL91a], while protocols based on them are described in [MIL81a], [MIL81b], [MIL83b], [GUS85a], [MIL85c], [TRI86], [MIL88a], [DEC89] and [MIL91a]. NTP uses techniques evolved from them and both linear-systems and agreement methodologies. Linear methods for digital telephone network synchronization are summarized in [LIN80], while agreement methods for clock synchronization are summarized in [LAM85]. <p> The election process requires a broadcast capability, which is not a ubiquitous feature of the Internet. While this model has been extended to support hierarchical configurations in which a slave on one network serves as a master on the other <ref> [TRI86] </ref>, the model requires handcrafted configuration tables in order to establish the hierarchy and avoid loops. In addition to the burdensome, but presumably infrequent, overheads of the election process, the offset measurement/correction process requires twice as many messages as NTP per update.
Reference: [VAN84] <author> Van Dierendonck, A.J., and W.C. Melton. </author> <title> Applications of time transfer using NAVSTAR GPS. In: Global Positioning System, </title> <booktitle> Papers Published in Navigation, Vol. II , Institute of Navigation, </booktitle> <address> Washington, DC, </address> <year> 1984. </year>
Reference: [VAS78] <author> Vass, </author> <title> E.R. OMEGA navigation system: present status and plans 1977-1980. Navigation 25, 1 (Spring 1978). RFC-1305 Network Time Protocol (Version 3) March 1992 Mills Page 50 </title>
References-found: 51

