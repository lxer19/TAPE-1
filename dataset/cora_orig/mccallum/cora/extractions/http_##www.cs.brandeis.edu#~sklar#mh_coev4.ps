URL: http://www.cs.brandeis.edu/~sklar/mh_coev4.ps
Refering-URL: http://www.cs.brandeis.edu/~sklar/research.html
Root-URL: http://www.cs.brandeis.edu
Email: sklar@cs.brandeis.edu blair@cs.uq.edu.au pollack@cs.brandeis.edu  
Phone: +1-781-736-2741 +61-7-3365-1999 +1-781-736-2741  
Title: Co-evolutionary Learning: Machines and Humans Schooling Together  
Author: Elizabeth Sklar Alan D. Blair Jordan B. Pollack 
Address: Waltham, MA 02254, USA 4072, Australia Waltham, MA 02254, USA  
Affiliation: Dept. of Computer Science Dept. of Computer Science Dept. of Computer Science Brandeis University University of Queensland Brandeis University  
Abstract: We consider a new form of co-evolutionary learning in which human students and software tutors become partners in a cooperative learning process. While the students are learning from the tutors, the tutors will also be learning how to do their job more effectively through their interactions with the students. Earlier work on game-playing machine learners has brought to light important issues for co-evolutionary learning; in particular, that these interactions can be modeled as a meta-game between teachers and students, and that learning may fail due to suboptimal equilibria for example, because of collusion between the individual players in this meta-game of learning. We discuss some of the challenges that these issues may raise for the designers of intelligent software tutoring systems and describe a prototype Java applet that we have built in an effort to explore how these challenges may best be met. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Anderson, J. R. </author> <year> (1982). </year> <title> Acquisition of cognitive skill. </title> <journal> Psychology Review, </journal> <volume> 89. </volume>
Reference-contexts: Early work combined some or all of these, each emphasizing different issues, such as memory modelling (Schank, 1981; Kolod-ner, 1983), construction of rules (ACT) <ref> (Anderson, 1982) </ref>, modelling student's misconceptions (VanLehn, 1983; Soloway et al., 1981). But all of these require considerable engineering effort on the part of the system designer/programmer. More recent work is often still highly dependent on a large engineering effort.
Reference: <author> Angeline, P. J. & Pollack, J. B. </author> <year> (1993). </year> <title> Competitive environments evolve better solutions for complex tasks. </title> <editor> In Forrest, S. (Ed.), </editor> <booktitle> Genetic Algorithms: Proc. 5th Int'l Conference (GA93). </booktitle>
Reference-contexts: The subfield of co-evolutionary machine learning attempts to achieve just this, building on earlier work in genetic algorithms and genetic programming. Some pertinent applications include Prisoner's Dilemma (Axelrod, 1984; Haynes et al., 1995), the game of tag (Reynolds, 1994), tic-tac-toe <ref> (Angeline & Pollack, 1993) </ref>, and backgammon (Pollack et al., 1996).
Reference: <author> Axelrod, R. </author> <year> (1984). </year> <title> The Evolution of Cooperation. </title> <publisher> Basic Books. </publisher>
Reference: <author> Brown, J. S. & Burton, R. B. </author> <year> (1978). </year> <title> Diagnostic models for procedural bugs in basic mathematical skills. </title> <journal> Cognitive Science, </journal> <volume> 2(2). </volume>
Reference-contexts: Brown maintains that some combination of the two schools is best, but is also the hardest to build <ref> (Brown & Burton, 1978) </ref>. Intelligent Tutoring Systems (ITS) branch out from frame-based approaches, exhibiting such desirable characteristics as providing a trace of a problem-solving session, individualizing for each user, dynamically selecting what to do next and coaching the user at opportune times (Clancey, 1986).
Reference: <author> Clancey, W. J. </author> <year> (1986). </year> <title> Intelligent tutoring systems: A tutorial survey. </title> <type> Technical Report STAN-CS--87-1174, </type> <institution> Stanford University. </institution>
Reference-contexts: Intelligent Tutoring Systems (ITS) branch out from frame-based approaches, exhibiting such desirable characteristics as providing a trace of a problem-solving session, individualizing for each user, dynamically selecting what to do next and coaching the user at opportune times <ref> (Clancey, 1986) </ref>. Early work combined some or all of these, each emphasizing different issues, such as memory modelling (Schank, 1981; Kolod-ner, 1983), construction of rules (ACT) (Anderson, 1982), modelling student's misconceptions (VanLehn, 1983; Soloway et al., 1981).
Reference: <author> Conati, C. & VanLehn, K. </author> <year> (1996). </year> <title> Pola: a student modeling framework for probabilistic on-line assessment of problem solving performance. </title> <booktitle> In Proc. 5th Int'l Conf. User Modeling (UM-96). </booktitle>
Reference-contexts: But all of these require considerable engineering effort on the part of the system designer/programmer. More recent work is often still highly dependent on a large engineering effort. POLA <ref> (Conati & VanLehn, 1996) </ref> uses probabilistic methods to model students solving problems in introductory physics. This work involves complex analysis of the problems being solved and attempts to combine knowledge tracing and model tracing.
Reference: <author> Corte, E. D. </author> <year> (1995). </year> <title> Learning theory and instructional science. </title> <editor> In Reimann, P. & Spada, H. (Eds.), </editor> <title> Learning in Humans and Machines: Towards an Interdisciplinary Learning Science. </title> <publisher> Pergamon. </publisher>
Reference-contexts: How does the notion of co-evolutionary learning apply to human learning, and, in particular, fit into today's framework of intelligent tutoring? The current trend in educational culture transfers control away from the traditional teacher in favor of the student, the learner <ref> (Corte, 1995) </ref>. In this type of constructionist environment, students are able to explore ideas for themselves without having to stick to a fixed curriculum (Papert, 1993); and students at all levels of ability are provided with an opportunity to learn.
Reference: <author> Forrester, J. </author> <year> (1992). </year> <title> System dynamics and learner-centered-learning in kindergarten through 12th grade education. </title> <type> Technical Report D-4337, </type> <institution> MIT. </institution>
Reference-contexts: Forrester promotes learner-centered learning, where students are not considered "passive receptors". Students and teachers participate in the learning process together as colleagues <ref> (Forrester, 1992) </ref>. The issue of learner control is addressed by John Seely Brown. He describes systems where the "locus of control" belongs either solely to the computer (e.g. frame-based CAI) or solely to the student (e.g. LOGO (Papert, 1980)).
Reference: <author> Haynes, T., Wainwright, R., Sen, S., & Schoenefeld, D. </author> <year> (1995). </year> <title> Strongly typed genetic programming in evolving cooperative strategies. </title> <editor> In Eshelman, L. (Ed.), </editor> <booktitle> Genetic Algorithms: Proceedings of the Sixth International Conference (ICGA95), </booktitle> <address> San Francisco, CA. </address>
Reference: <author> Holland, J. H. </author> <year> (1975). </year> <booktitle> Adaption in Natural and Artificial Systems. </booktitle> <publisher> University of Michigan Press, </publisher> <address> MI. </address>
Reference-contexts: Users (students) are asked to provide the "missing elements" the input and/or output for a given set of addition, subtraction, or multiplication problems. We use ideas from genetic algorithms (GA) <ref> (Holland, 1975) </ref> to select tubots for students to work with. Each type of problem is encoded to form a chromosome that translates into a single tubot and an entire problem set is a population of tubots.
Reference: <author> Kinshuk & Patel, A. </author> <year> (1996). </year> <title> Intelligent tutoring tools: Redesigning itss for adequate knowledge transfer emphasis. </title> <booktitle> In Proc. 1996 Int'l Conf. on Intelligent and Cognitive Systems. </booktitle>
Reference-contexts: This work involves complex analysis of the problems being solved and attempts to combine knowledge tracing and model tracing. INSTRUCT (Mitrovic et al., 1996) tries to induce models of procedural skill by observing students and collecting information both implicitly and explicitly. Intelligent Tutoring Systems take on harsh criticism from <ref> (Kinshuk & Patel, 1996) </ref>, who state that "the absence of substantial and usable ITS after years of research and development activities should encourage a re-examination of the objectives and the design principles of a tutoring system." In this work, we are attempting just such a re-examination by considering a role for
Reference: <author> Kolodner, J. </author> <year> (1983). </year> <title> maintaining organization in a dynamic long-term memory.Cognitive Science, </title> <type> 7. </type>
Reference: <author> Langley, P. </author> <year> (1995). </year> <title> Order effects in incremental learning. </title> <editor> In Reimann, P. & Spada, H. (Eds.), </editor> <title> Learning in Humans and Machines: Towards an Interdisciplinary Learning Science. </title> <publisher> Pergamon. </publisher>
Reference-contexts: The success of a machine learning system depends very much on the learning environment in which it is placed. Typically, such a system extracts information from its environment, as it is ready; then it may need to be placed in a new environment in order to progress. Incremental learning <ref> (Langley, 1995) </ref> occurs when a learner is placed into a pre-defined series of environments one after the other, as it progresses. However, designing an appropriate series of environments is difficult and expensive.
Reference: <author> Michie, D. </author> <year> (1961). </year> <title> Trial and error. </title> <booktitle> Science Survey, </booktitle> <volume> part 2 </volume> <pages> 129-145. </pages>
Reference: <author> Mitrovic, A., Djordjevic, S., & Stoimenov, L. </author> <year> (1996). </year> <title> Instruct: Modeling students by asking questions. User Modeling and User-Adapted Interaction, </title> <type> 6(4). </type>
Reference-contexts: More recent work is often still highly dependent on a large engineering effort. POLA (Conati & VanLehn, 1996) uses probabilistic methods to model students solving problems in introductory physics. This work involves complex analysis of the problems being solved and attempts to combine knowledge tracing and model tracing. INSTRUCT <ref> (Mitrovic et al., 1996) </ref> tries to induce models of procedural skill by observing students and collecting information both implicitly and explicitly.
Reference: <author> Papert, S. </author> <year> (1980). </year> <title> Mindstorms: Children, Computers, and Powerful Ideas. </title> <publisher> BasicBooks. </publisher>
Reference-contexts: Students and teachers participate in the learning process together as colleagues (Forrester, 1992). The issue of learner control is addressed by John Seely Brown. He describes systems where the "locus of control" belongs either solely to the computer (e.g. frame-based CAI) or solely to the student (e.g. LOGO <ref> (Papert, 1980) </ref>). He cites disadvantages with both extremes with the former, the student is restricted to a fixed path and cannot explore different avenues of interest; with the latter, the student may get stuck and may not be exposed to the full range of problems in the domain being learned.
Reference: <author> Papert, S. </author> <year> (1993). </year> <note> The Children's Machine. BasicBooks. </note>
Reference-contexts: In this type of constructionist environment, students are able to explore ideas for themselves without having to stick to a fixed curriculum <ref> (Papert, 1993) </ref>; and students at all levels of ability are provided with an opportunity to learn. Forrester promotes learner-centered learning, where students are not considered "passive receptors". Students and teachers participate in the learning process together as colleagues (Forrester, 1992).
Reference: <author> Pollack, J. B. & Blair, A. D. </author> <year> (1998). </year> <title> Co-evolution in the successful learning of backgammon strategy. </title> <note> Machine Learning (to appear). </note>
Reference-contexts: to understand the nature of these difficulties, we have observed that a machine learning system can, in general, be modeled as an interaction between a teacher and a student (and possibly other participants) and that the manner in which these participants are rewarded defines a meta-game of learning, or MGL <ref> (Pollack & Blair, 1998) </ref>, to which we apply a game theoretical analysis. The game-playing machine learner could be thought of as the student, while its opponent assumes the role of the teacher. <p> Moreover, `draws' are impossible in backgammon and its particular dynamics work to prevent trading of easy wins <ref> (Pollack & Blair, 1998) </ref>. Both the backgammon and EVC domains provide a broad spectrum of opportunity such that the machine learner has available to it, at any given time, a number of avenues for improvement and a number of ways to proceed along each avenue.
Reference: <author> Pollack, J. B., Blair, A. D., & Land, M. </author> <year> (1996). </year> <title> Coevolution of a backgammon player. </title> <editor> In Langton, C. (Ed.), </editor> <booktitle> Proceedings Artificial Life V. </booktitle> <publisher> MIT Press. </publisher>
Reference-contexts: The subfield of co-evolutionary machine learning attempts to achieve just this, building on earlier work in genetic algorithms and genetic programming. Some pertinent applications include Prisoner's Dilemma (Axelrod, 1984; Haynes et al., 1995), the game of tag (Reynolds, 1994), tic-tac-toe (Angeline & Pollack, 1993), and backgammon <ref> (Pollack et al., 1996) </ref>. How does the notion of co-evolutionary learning apply to human learning, and, in particular, fit into today's framework of intelligent tutoring? The current trend in educational culture transfers control away from the traditional teacher in favor of the student, the learner (Corte, 1995).
Reference: <author> Reynolds, C. W. </author> <year> (1994). </year> <title> Competition, coevolution and the game of tag. </title> <editor> In Brooks, R. A. & Maes, P. (Eds.), </editor> <booktitle> Proceedings of the Fourth International Workshop on the Synthesis and Simulation of Living Systems, </booktitle> <address> Cambridge, MA. </address> <publisher> MIT Press. </publisher>
Reference-contexts: The subfield of co-evolutionary machine learning attempts to achieve just this, building on earlier work in genetic algorithms and genetic programming. Some pertinent applications include Prisoner's Dilemma (Axelrod, 1984; Haynes et al., 1995), the game of tag <ref> (Reynolds, 1994) </ref>, tic-tac-toe (Angeline & Pollack, 1993), and backgammon (Pollack et al., 1996).
Reference: <author> Samuel, A. L. </author> <year> (1959). </year> <title> Some studies in machine learning using the game of checkers. </title> <journal> IBM Journal of Research and Development, </journal> <volume> 3 </volume> <pages> 210-229. </pages>
Reference: <author> Schank, R. C. </author> <year> (1981). </year> <title> Failure-driven memory. </title> <journal> Cognition and Brain Theory, </journal> <volume> 4(1). </volume>
Reference: <author> Sims, K. </author> <year> (1995). </year> <title> Evolving 3d morphology and behavior by competition. </title> <booktitle> In Proceedings of the Fourth International Conference on Artificial Life. </booktitle> <publisher> MIT Press. </publisher>
Reference-contexts: A second example is provided by the evolving virtual creatures (EVC) domain. In a game devised by Karl Sims, two virtual creatures compete in a world with simulated physics for control of a cube initially placed between them <ref> (Sims, 1995) </ref>. In each round of competition, all creatures from one species played against the champion of the other species from the previous round.
Reference: <author> Soloway, E. M., Woolf, B., Rubin, E., & Barth, P. </author> <year> (1981). </year> <title> Meno-ii: An intelligent tutoring system for novice programmers. </title> <booktitle> In Proc. 7th Int'l Joint Conf. on Artificial Intelligence (IJCAI). </booktitle>
Reference: <author> Sutton, R. </author> <year> (1988). </year> <title> Learning to predict by the method of temporal differences. </title> <booktitle> Machine Learning 3. </booktitle>
Reference-contexts: trained on a large database of hand-crafted positions, with corresponding moves chosen by a human expert; the second network was trained by having it play against itself thousands of times and using the outcome of each game to make a small adjustment in its strategy according to the temporal difference <ref> (Sutton, 1988) </ref>. Surprisingly, the network that was trained by self-play, although initially playing a poor (essentially random) game, eventually surpassed the network trained on the expert database. A second example is provided by the evolving virtual creatures (EVC) domain.
Reference: <author> Tesauro, G. </author> <year> (1992). </year> <title> Practical issues in temporal difference learning. </title> <booktitle> Machine Learning 8. </booktitle>
Reference-contexts: Avoiding Suboptimal Equilibria and Collusion There have been a few notable cases of ML applications in which the problems of suboptimal equilibria and collusion have apparently been avoided. One such instance came to light when <ref> (Tesauro, 1992) </ref> compared two different methods for training neural networks to play the game of backgammon. <p> randomness of the dice rolls sometimes allows a weak player to score a victory over a strong one an experience from which both can learn and also tends to lead the learner into a much larger portion of the strategy space than would likely be explored in a deterministic game <ref> (Tesauro, 1992) </ref>. Moreover, `draws' are impossible in backgammon and its particular dynamics work to prevent trading of easy wins (Pollack & Blair, 1998).
Reference: <author> VanLehn, K. </author> <year> (1983). </year> <title> Human procedural skill acquisition: Theory, model, and psychological validation. </title> <booktitle> In Proceedings of the National Conference on AI. </booktitle>
Reference: <author> Wilensky, U. </author> <year> (1996). </year> <title> Making sense of probability through paradox and programming. </title> <editor> In Kafai, Y. & Resnick, M. (Eds.), </editor> <title> Constructionism in Practice: Designing, Thinking and Learning in a Digital World, </title> <address> Mahwah, NJ. </address> <publisher> Erlbaum. </publisher>
Reference-contexts: Perhaps these domains providing a broad spectrum of opportunity, where learners can explore in any order, may be compared with constructionist learning environments that allow the user to explore a problem from a number of different angles, and thus gain a more solid grasp of the fundamental concepts <ref> (Wilensky, 1996) </ref>. It would be interesting to see whether judicious attention to these attributes in the design of software tutoring systems might work to prevent collusion in the MGL. 5. The InOutMachine: A Prototype We have built an educational software tool as a prototype for exploring these concepts.
References-found: 28

