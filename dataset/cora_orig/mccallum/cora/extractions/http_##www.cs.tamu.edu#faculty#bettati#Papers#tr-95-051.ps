URL: http://www.cs.tamu.edu/faculty/bettati/Papers/tr-95-051.ps
Refering-URL: http://www.cs.tamu.edu/faculty/bettati/selected_papers.html
Root-URL: http://www.cs.tamu.edu
Title: A Security Architecture for Tenet Scheme 2  
Phone: (510) 643-9153 FAX (510) 643-7684  
Author: Rolf Oppliger Amit Gupta Mark Moran Riccardo Bettati 
Date: August 1995  
Address: I 1947 Center St. Suite 600 Berkeley, California 94704-1198  
Affiliation: INTERNATIONAL COMPUTER SCIENCE INSTITUTE  
Pubnum: TR-95-051  
Abstract: This report proposes a security architecture for Tenet Scheme 2. The basic ideas are (1) to use Internet layer security protocols, such as the IP Security Protocol (IPSP) and Internet Key Management Protocol (IKMP), to establish authentic communication channels between RCAP daemons, (2) to handle client authentication and authorization locally, and (3) to use a proxy-based mechanism to propagate access rights. The security architecture uses as its building blocks a collision-resistant one-way hash function to compute and verify message authentication codes, and a digital signature system. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Ferrari, A. Banerjea, and H. Zhang, </author> <title> "Network support for multimedia A discussion of the Tenet Approach", </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> vol. 26, </volume> <pages> pp. 1267 - 1280, </pages> <year> 1994. </year>
Reference-contexts: 1 Introduction The Tenet Group at the University of California and the International Computer Science Institute (ICSI) in Berkeley has been working since 1988 to provide practical solutions to the problem of realtime communications <ref> [1, 2] </ref>. The initial goal of the work was to devise and specify a set of algorithms that, when implemented in a network, would enable the network to offer a realtime communication service to its clients.
Reference: [2] <author> A. Banerjea, D. Ferrari, B.A. Mah, and M. Moran, </author> <title> "The Tenet Real-Time Protocol Suite: Design, Implementation, and Experiences", </title> <institution> TR-94-061, International Computer Science Institute (ICSI), Berkeley, </institution> <address> CA, </address> <month> November </month> <year> 1994. </year>
Reference-contexts: 1 Introduction The Tenet Group at the University of California and the International Computer Science Institute (ICSI) in Berkeley has been working since 1988 to provide practical solutions to the problem of realtime communications <ref> [1, 2] </ref>. The initial goal of the work was to devise and specify a set of algorithms that, when implemented in a network, would enable the network to offer a realtime communication service to its clients.
Reference: [3] <author> A. Gupta and M. Moran, </author> <title> "Channel Groups | A Unifying Abstraction for Specifying Inter-stream Relationships", </title> <institution> TR-93-015, International Computer Science Institute (ICSI), Berkeley, </institution> <address> CA, </address> <month> March </month> <year> 1993. </year>
Reference-contexts: Today, the Tenet Group is working on Scheme 2. The main focus of this work is to extend the basic realtime communication service provided by Tenet Suite 1 in two respects: To provide abstractions and techniques for efficient multi-party realtime communication, and to make the client-service interface more flexible <ref> [3, 4, 5] </ref>. In Tenet Scheme 2, the key networking abstraction is the target set, which is similar to the host group in IP multicast [6, 7].
Reference: [4] <author> A. Gupta, W. Howe, M. Moran, and Q. Nguyen, </author> <title> "Scalable resource reservation for multi-party real-time communication", </title> <institution> TR-94-050, International Computer Science Institute (ICSI), Berkeley, </institution> <address> CA, </address> <month> October </month> <year> 1994. </year>
Reference-contexts: Today, the Tenet Group is working on Scheme 2. The main focus of this work is to extend the basic realtime communication service provided by Tenet Suite 1 in two respects: To provide abstractions and techniques for efficient multi-party realtime communication, and to make the client-service interface more flexible <ref> [3, 4, 5] </ref>. In Tenet Scheme 2, the key networking abstraction is the target set, which is similar to the host group in IP multicast [6, 7].
Reference: [5] <author> A. Gupta and D. Ferrari, </author> <title> "Resource partitioning for multi-party real-time communication", </title> <institution> TR-94-061, International Computer Science Institute (ICSI), Berkeley, </institution> <address> CA, </address> <month> November </month> <year> 1994. </year>
Reference-contexts: Today, the Tenet Group is working on Scheme 2. The main focus of this work is to extend the basic realtime communication service provided by Tenet Suite 1 in two respects: To provide abstractions and techniques for efficient multi-party realtime communication, and to make the client-service interface more flexible <ref> [3, 4, 5] </ref>. In Tenet Scheme 2, the key networking abstraction is the target set, which is similar to the host group in IP multicast [6, 7].
Reference: [6] <author> S. Deering and D.R. Cheriton, </author> <title> "Multicast Routing in Datagram Internetworks and Extended LANs", </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> vol. 8, </volume> <pages> pp. 85 - 110, </pages> <year> 1990. </year>
Reference-contexts: In Tenet Scheme 2, the key networking abstraction is the target set, which is similar to the host group in IP multicast <ref> [6, 7] </ref>. Receivers join a target set depending on their interest in a certain transmission, and channels are established from data sources to the members of the target set accordingly. Join and leave primitives support dynamic membership in target sets, as well as the associated change in multicast channels.
Reference: [7] <author> S. Deering, </author> <title> Multicast Routing in a Datagram Internetwork, </title> <type> PhD thesis, </type> <institution> Stanford University, </institution> <month> December </month> <year> 1991. </year>
Reference-contexts: In Tenet Scheme 2, the key networking abstraction is the target set, which is similar to the host group in IP multicast <ref> [6, 7] </ref>. Receivers join a target set depending on their interest in a certain transmission, and channels are established from data sources to the members of the target set accordingly. Join and leave primitives support dynamic membership in target sets, as well as the associated change in multicast channels.
Reference: [8] <author> R.T. Morris, </author> <title> "A Weakness in the 4.2BSD UNIX TCP/IP Software", </title> <note> Computing Science Technical Report No. 117, </note> <institution> AT&T Bell Laboratories, </institution> <address> Murray Hill, N.J., </address> <month> February </month> <year> 1985. </year>
Reference-contexts: In particular, the use of the TCP/IP protocols does neither allow RCAP daemons to authenticate client requests, nor to protect the authenticity and integrity of messages in exchange. As a matter of fact, the TCP/IP protocols are known to be vulnerable and exposed to various attacks <ref> [8, 9] </ref>, and it is only due to the emerging use of the Internet for commercial purposes that TCP/IP security has quite recently become an issue [10]. This report proposes a security architecture for Tenet Scheme 2.
Reference: [9] <author> S.M. Bellovin, </author> <title> "Security Problems in the TCP/IP Protocol Suite", </title> <journal> ACM Computer Communication Review, </journal> <volume> vol. 19, </volume> <pages> pp. 32 - 48, </pages> <year> 1989. </year>
Reference-contexts: In particular, the use of the TCP/IP protocols does neither allow RCAP daemons to authenticate client requests, nor to protect the authenticity and integrity of messages in exchange. As a matter of fact, the TCP/IP protocols are known to be vulnerable and exposed to various attacks <ref> [8, 9] </ref>, and it is only due to the emerging use of the Internet for commercial purposes that TCP/IP security has quite recently become an issue [10]. This report proposes a security architecture for Tenet Scheme 2.
Reference: [10] <author> R. Braden, D. Clark, S. Crocker, and C. Huitema, </author> <booktitle> "Report of IAB Workshop on Security in the Internet Architecture, </booktitle> <month> February 8-10, </month> <year> 1994", </year> <title> Request for Comments 1636, </title> <month> June </month> <year> 1994. </year> <month> 10 </month>
Reference-contexts: As a matter of fact, the TCP/IP protocols are known to be vulnerable and exposed to various attacks [8, 9], and it is only due to the emerging use of the Internet for commercial purposes that TCP/IP security has quite recently become an issue <ref> [10] </ref>. This report proposes a security architecture for Tenet Scheme 2.
Reference: [11] <author> B. Schneier, </author> <title> Applied Cryptography: Protocols, Algorithms, and Source Code in C, </title> <publisher> John Wiley & Sons, Inc., </publisher> <address> New York, NY, </address> <year> 1994. </year>
Reference-contexts: Both the Internet layer security protocols and the protocols that are used for client authentication, authorization, and access rights propagation represent cryptographic protocols. The reader of this report is thus assumed to be familiar with cryptology, and the use of cryptographic protocols in computer networks and distributed systems <ref> [11] </ref>. The following notation is used in this report to describe cryptographic protocols: 2 * K is used to refer to a secret key, and the term fmgK is used to refer to a message m that is encrypted with this key.
Reference: [12] <author> R.L. Rivest, </author> <title> "The MD4 Message-Digest Algorithm", Request for Comments 1320, </title> <month> April </month> <year> 1992. </year>
Reference-contexts: An efficient way to compute and verify a MAC is to use a collision-resistant one-way hash function, such as MD4 <ref> [12] </ref>, MD5 [13] or the Secure Hash Standard (SHS) [14], and to key it with a secret key [15, 16]. * (k; k 1 ) is used to refer to a public key pair, with k being the public key, and k 1 being the corresponding private key.
Reference: [13] <author> R.L. Rivest and S. Dusse, </author> <title> "The MD5 Message-Digest Algorithm", Request for Comments 1321, </title> <month> April </month> <year> 1992. </year>
Reference-contexts: An efficient way to compute and verify a MAC is to use a collision-resistant one-way hash function, such as MD4 [12], MD5 <ref> [13] </ref> or the Secure Hash Standard (SHS) [14], and to key it with a secret key [15, 16]. * (k; k 1 ) is used to refer to a public key pair, with k being the public key, and k 1 being the corresponding private key. <p> The receiver extracts the AH, recalculates the MAC, and verifies, whether the value matches the AH that he has received from the sender. * The Encapsulating Security Payload (ESP) uses IP encapsulation to protect the data confidentiality of IPSP datagrams. The IETF IPSEC WG has proposed keyed MD5 <ref> [13] </ref> as a default algorithm for the AH mechanism, and the Data Encryption Standard (DES) in Cipher Block Chaining (CBC) mode [22, 23] for the ESP mechanism.
Reference: [14] <author> NIST, </author> <title> "Secure Hash Standard (SHS)", </title> <publisher> FIPS PUB 180, </publisher> <address> Gaithersburg, MD, </address> <month> May </month> <year> 1993. </year>
Reference-contexts: An efficient way to compute and verify a MAC is to use a collision-resistant one-way hash function, such as MD4 [12], MD5 [13] or the Secure Hash Standard (SHS) <ref> [14] </ref>, and to key it with a secret key [15, 16]. * (k; k 1 ) is used to refer to a public key pair, with k being the public key, and k 1 being the corresponding private key.
Reference: [15] <author> L. Gong, </author> <title> "Using One-Way Functions for Authentication", </title> <journal> ACM Computer Communication Review, </journal> <volume> vol. 19, </volume> <pages> pp. 8 - 11, </pages> <year> 1989. </year>
Reference-contexts: An efficient way to compute and verify a MAC is to use a collision-resistant one-way hash function, such as MD4 [12], MD5 [13] or the Secure Hash Standard (SHS) [14], and to key it with a secret key <ref> [15, 16] </ref>. * (k; k 1 ) is used to refer to a public key pair, with k being the public key, and k 1 being the corresponding private key. The term fmgk is used to refer to a message m that is encrypted with a public key k.
Reference: [16] <author> G. Tsudik, </author> <title> "Message Authentication with One-Way Hash Functions", </title> <journal> ACM Computer Communication Review, </journal> <volume> vol. 22, </volume> <pages> pp. 29 - 38, </pages> <year> 1992. </year>
Reference-contexts: An efficient way to compute and verify a MAC is to use a collision-resistant one-way hash function, such as MD4 [12], MD5 [13] or the Secure Hash Standard (SHS) [14], and to key it with a secret key <ref> [15, 16] </ref>. * (k; k 1 ) is used to refer to a public key pair, with k being the public key, and k 1 being the corresponding private key. The term fmgk is used to refer to a message m that is encrypted with a public key k.
Reference: [17] <author> R.L. Rivest, A. Shamir, and L. Adleman, </author> <title> "A Method for Obtaining Digital Signatures and Public-Key Cryptosystems", </title> <journal> Communications of the ACM, </journal> <volume> vol. 21, </volume> <pages> pp. 120 - 126, </pages> <year> 1978. </year>
Reference-contexts: The term fmgk is used to refer to a message m that is encrypted with a public key k. The message can be decrypted only with the corresponding private key k 1 . In a digital signature system, such as RSA <ref> [17] </ref>, ElGamal [18], or the Digital Signature Standard (DSS) proposed by the NIST [19], the user's private key is used to digitally sign messages, whereas the corresponding public key is used to verify the signatures.
Reference: [18] <author> T. ElGamal, </author> <title> "A Public Key Cryptosystem and a Signature Scheme Based on Discrete Logarithm", </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> vol. IT-31, </volume> <pages> pp. 469 - 472, </pages> <month> July </month> <year> 1985. </year>
Reference-contexts: The term fmgk is used to refer to a message m that is encrypted with a public key k. The message can be decrypted only with the corresponding private key k 1 . In a digital signature system, such as RSA [17], ElGamal <ref> [18] </ref>, or the Digital Signature Standard (DSS) proposed by the NIST [19], the user's private key is used to digitally sign messages, whereas the corresponding public key is used to verify the signatures.
Reference: [19] <author> NIST, </author> <title> "Digital Signature Standard (DSS)", </title> <publisher> FIPS PUB 186, </publisher> <address> Gaithersburg, MD, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: The message can be decrypted only with the corresponding private key k 1 . In a digital signature system, such as RSA [17], ElGamal [18], or the Digital Signature Standard (DSS) proposed by the NIST <ref> [19] </ref>, the user's private key is used to digitally sign messages, whereas the corresponding public key is used to verify the signatures.
Reference: [20] <author> ISO/IEC, </author> <title> "Information Processing Systems | Open Systems Interconnection Reference Model | Part 2: Security Architecture", </title> <address> ISO/IEC 7498-2, </address> <year> 1989. </year>
Reference-contexts: In this case, the term fmgk 1 is used to refer to a digital signature giving message recovery, and the term hmik 1 is used to refer to a digital signature with appendix <ref> [20] </ref>. In the latter case, hmik 1 abbreviates m; fh (m)gk 1 , with h being a collision-resistant one-way hash function. <p> The IRTF Privacy and Security Research Group (PSRG) is adapting the OSI security architecture <ref> [20] </ref> for the Internet, and the IETF has chartered an Internet Protocol Security Protocol (IPSEC) Working Group (WG) to standardize Internet layer security protocols.
Reference: [21] <author> R. Atkinson, </author> <title> "IPv6 Security Architecture", </title> <type> Internet Draft, </type> <month> February </month> <year> 1994, </year> <note> work in pogress. </note>
Reference-contexts: Based on these outer IP headers, the datagrams are then routed through an internet. At a peer systems, the outer IP headers are stripped off, and the IP datagrams are decrypted and forwarded to their final destinations. The current version of IPSP is based on IP encapsulation, too <ref> [21] </ref>. As a matter of fact, it suggests the use of two security mechanisms that may be used together or separately: * The Authentication Header (AH) provides data origin authentication services for IPSP datagrams.
Reference: [22] <author> NIST, </author> <title> "Data Encryption Standard", </title> <publisher> FIPS PUB 46, </publisher> <address> Gaithersburg, MD, </address> <month> January </month> <year> 1977, </year> <institution> Originally issued by National Bureau of Standards (NBS). </institution>
Reference-contexts: The IETF IPSEC WG has proposed keyed MD5 [13] as a default algorithm for the AH mechanism, and the Data Encryption Standard (DES) in Cipher Block Chaining (CBC) mode <ref> [22, 23] </ref> for the ESP mechanism.
Reference: [23] <author> NIST, </author> <title> "DES Modes of Operation", </title> <publisher> FIPS PUB 81, </publisher> <address> Gaithersburg, MD, </address> <month> December </month> <year> 1980, </year> <institution> Originally issued by National Bureau of Standards (NBS). </institution>
Reference-contexts: The IETF IPSEC WG has proposed keyed MD5 [13] as a default algorithm for the AH mechanism, and the Data Encryption Standard (DES) in Cipher Block Chaining (CBC) mode <ref> [22, 23] </ref> for the ESP mechanism.
Reference: [24] <author> P.C. Cheng, J.A. Garay, A. Herzberg, and H. Krawczyk, </author> <title> "Design and Implementation of Modular Key Management Protocol and IP Secure Tunnel on AIX", </title> <type> Technical report, </type> <institution> IBM, Thomas J. Watson Research Center, </institution> <address> Yorktown Heights, NY, </address> <month> May </month> <year> 1995. </year> <month> 11 </month>
Reference-contexts: algorithms and modes may be implemented, too. 3.2 IKMP With regard to a possible IKMP standard, several proposals have been submitted to the IETF IPSEC WG for further consideration: * The Modular Key Management Protocol (MKMP) uses long-term master keys to derive short-term session keys that provide perfect forward secrecy <ref> [24] </ref>. * The Simple Key-Management for Internet Protocols (SKIP) uses implicitely shared long-term Diffie-Hellman keys to derive keys on a per-session or per datagram basis [25]. * The Photuris 2 Key Management Protocol combines a Diffie-Hellman key ex change with a subsequent exchange of RSA signatures. 2 "Photuris" is the latin
Reference: [25] <author> A. Aziz, M. Patterson, and G Baehr, </author> <title> "Simple Key-Management for Internet Pro--tocols (SKIP)", </title> <booktitle> in Proceedings of the Internet Society International Networking Conference, </booktitle> <month> June </month> <year> 1995. </year>
Reference-contexts: WG for further consideration: * The Modular Key Management Protocol (MKMP) uses long-term master keys to derive short-term session keys that provide perfect forward secrecy [24]. * The Simple Key-Management for Internet Protocols (SKIP) uses implicitely shared long-term Diffie-Hellman keys to derive keys on a per-session or per datagram basis <ref> [25] </ref>. * The Photuris 2 Key Management Protocol combines a Diffie-Hellman key ex change with a subsequent exchange of RSA signatures. 2 "Photuris" is the latin name for the firefly, and "Firefly" is in turn the name for a classified key exchange protocol designed by the NSA for the STU-III secure
Reference: [26] <author> A. Liebl, </author> <title> "Authentication in Distributed Systems: A Bibliography", </title> <journal> ACM Operating Systems Review, </journal> <volume> vol. 27, </volume> <pages> pp. 31 - 41, </pages> <year> 1993. </year>
Reference-contexts: In principle, C ij has to show that he's acting on U i 's behalf, and D k has to show that he's U i 's (and thus C ij 's) home RCAP daemon. 5 There are many authentication protocols available that can be used for this purpose <ref> [26] </ref>.
Reference: [27] <author> B.C. Neuman, </author> <title> "Proxy-Based Authorization and Accounting for Distributed Systems", </title> <booktitle> in Proceedings of the 11th International Conference on Distributed Computing Systems, </booktitle> <pages> pp. 283 - 291, </pages> <month> May </month> <year> 1993. </year> <month> 12 </month>
Reference-contexts: The proxy-based authorization mechanism described in this report is similar to the restricted proxies proposed in <ref> [27] </ref>. Both mechanisms use a certificate that carries a public key, and a corresponding private key that links the proxy to its owner. The main difference between the two mechanisms is related to the way in which the private key is selected and distributed. <p> described in this report, the client that requests a proxy selects a public key pair and has the public key digitally signed by the proxy grantor, it is the grantor that selects a public key pair and provides the client with both the certificate and the corresponding private key in <ref> [27] </ref>. It is assumed that the mechanism described in this report is advantageous in situations that can't assume secret channels to be available between clients, as well as in situations in which non-repudiation is a topic. <p> Note that if the proxy grantor selects the client's private key, there is, in general, no possibility to provide non-repudiation. On the other hand, it is assumed that in situations that require a distribution of many proxies to various clients, the mechanism proposed in <ref> [27] </ref> has scalability advantages. It is, in general, more convenient for a client to be provided with the proxies he needs, instead of having to request them. Both mechanisms need further investigation. In fact, the mechanisms are not mutually exclusive, and both mechanisms could be used in Tenet Scheme 2. <p> Both mechanisms need further investigation. In fact, the mechanisms are not mutually exclusive, and both mechanisms could be used in Tenet Scheme 2. For example, one possibility would be to use the mechanism proposed in <ref> [27] </ref> to distribute bearer proxies that can be used by anyone, and to use the mechanism described in this report to distribute delegate proxies that can be used only by the clients they name. 5 Conclusions This report has proposed a security architecture for Tenet Scheme 2.
References-found: 27

