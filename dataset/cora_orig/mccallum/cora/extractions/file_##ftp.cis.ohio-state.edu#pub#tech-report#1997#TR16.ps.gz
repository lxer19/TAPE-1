URL: file://ftp.cis.ohio-state.edu/pub/tech-report/1997/TR16.ps.gz
Refering-URL: ftp://ftp.cis.ohio-state.edu/pub/tech-report/TRList.html
Root-URL: 
Title: Constructing Pairwise Disjoint Paths with Few Links using O(M) line segments where M is the
Author: Himanshu Gupta Rephael Wenger 
Note: paths  
Date: February 26, 1997  
Abstract: Let P be a simple polygon and let f(u i ; u 0 i )g be m pairs of distinct vertices of P where for every distinct i; j m, there exist pairwise disjoint paths connecting u i to u 0 i and u j to u 0 j . We wish to construct m pairwise disjoint paths in the interior of P connecting u i to u 0 i for i = 1; : : : ; m, with minimal total number of line segments. We give an approximation algorithm which in O(n log m + M log m) time constructs such a set of
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Aronov, B., Seidel, R., and Souvaine, D. </author> <title> On compatible triangulations of simple polygons. </title> <journal> Comput. Geom. Theory Appl. </journal> <volume> 3, 1 (1993), </volume> <pages> 27-35. </pages>
Reference-contexts: The size of a triangulation is the total number of vertices, edges and triangles in the triangulation. Algorithms for constructing isomorphic triangulations between labelled point sets are described in [8] and [9]. Algorithms for isomorphic triangulations between simple polygons are given in <ref> [1] </ref>, [7] and [5]. Our motivation for constructing pairwise disjoint paths using few line segments comes from our work on an approximation algorithm for constructing isomorphic triangulations between simple polygons in [5].
Reference: [2] <author> Arora, S. </author> <title> Polynomial time approximation schemes for euclidean tsp and other geometric problems. </title> <booktitle> In Proc. 37th Annu. IEEE Sympos. </booktitle> <institution> Found. Comput. Sci. </institution> <note> (FOCS 96) (1996). </note>
Reference-contexts: We still do not know if constructing pairwise disjoint paths using the fewest line segments is an NP-complete problem or whether it can be solved in polynomial time. We also do not know of an *-approximation scheme for constructing such paths. Possibly the techniques of Arora in <ref> [2] </ref> for the Euclidean Travelling Salesman Problem could apply. In [6], Kahan and Snoeyink show that a polygon on n vertices with bit com plexity n log n may have a minimal link path with fi (n 2 log n) bit complexity.
Reference: [3] <author> Chazelle, B. </author> <title> Triangulating a simple polygon in linear time. </title> <journal> Discrete Comput. Geom. </journal> <volume> 6 (1991), </volume> <pages> 485-524. </pages>
Reference-contexts: Note that Vis (p) and Vis (e) are closed sets while ^ Vis (p) and ^ Vis (e) are usually not closed. In <ref> [3] </ref>, Chazelle gives a linear time algorithm for constructing a triangulation T P of P (using no vertices other than those of P .) Using this triangulation, Guibas et al. in [4] give a linear time algorithm for constructing Vis (e). <p> The construction produces at most 3m line segments in , so the solution is at most 240 times the optimal. Finally, we analyze the running time of our algorithm. Constructing the initial triangulation T P takes O (n) time <ref> [3, 4] </ref>. Constructing the visibility region ^ Vis (e fl ) and the subpolygon e fl takes O (n fl ) time where n fl is the number of triangles of T P intersected by ^ Vis (e fl ).
Reference: [4] <author> Guibas, L. J., Hershberger, J., Leven, D., Sharir, M., and Tar-jan, R. E. </author> <title> Linear-time algorithms for visibility and shortest path problems inside triangulated simple polygons. </title> <booktitle> Algorithmica 2 (1987), </booktitle> <pages> 209-233. </pages>
Reference-contexts: In [3], Chazelle gives a linear time algorithm for constructing a triangulation T P of P (using no vertices other than those of P .) Using this triangulation, Guibas et al. in <ref> [4] </ref> give a linear time algorithm for constructing Vis (e). Their algorithm can be easily modified to construct ^ Vis (e). <p> (w 2 ; w 3 ) intersects the visibility polygon Vis (e) of e = (w 0 ; w 1 ) if and only if the shortest paths inside P from w 0 to w 2 and from w 1 to w 3 are outwardly convex or vice versa. (See <ref> [4] </ref> for the definition of outwardly convex and a complete discussion of the algorithm.) The algorithm by Guibas et al. constructs the shortest paths from w 0 and w 1 to each vertex of the polygon, checks for outward convexity, and then constructs Vis (e) from outward convex paths. <p> The construction produces at most 3m line segments in , so the solution is at most 240 times the optimal. Finally, we analyze the running time of our algorithm. Constructing the initial triangulation T P takes O (n) time <ref> [3, 4] </ref>. Constructing the visibility region ^ Vis (e fl ) and the subpolygon e fl takes O (n fl ) time where n fl is the number of triangles of T P intersected by ^ Vis (e fl ). <p> Instead of constructing ^ Vis (d i ) for each d i , construct ^ Vis (e fl ) in e fl using the algorithm in <ref> [4] </ref> modified to run in O (n fl ) time. For each edge e visible to e fl , this algorithm explicitly constructs the points on e visible to e fl and the points on e fl visible to e. <p> Constructing each ^ Vis (g j ) and j individually and merging the result to form would take an unacceptable O (n fl m) time. Instead we construct directly. As mentioned above, the algorithm in <ref> [4] </ref> can be used to determine the points on e fl visible to each diagonal d of T P and thus the points g j 0 ; g j+1 ; : : : ; g j 1 visible to d.
Reference: [5] <author> Gupta, H., and Wenger, R. </author> <title> Constructing piecewise linear homeomor-phisms of simple polygons. </title> <editor> J. </editor> <booktitle> Algorithms 22 (1997), </booktitle> <pages> 142-157. </pages>
Reference-contexts: In general, two additional line segments suffice to construct two such nonintersecting interior paths. (See <ref> [5] </ref>.) A set = f (u i ; u 0 i )g, i m, of m pairs of distinct vertices of P is untangled if some set of pairwise disjoint paths connects u i to u 0 i . <p> Clearly, L line segments are required to construct a set of pairwise disjoint interior paths connecting u i to u 0 i , for i = 1; : : : ; m. How many additional line segments are required? In <ref> [5] </ref> we proved that O (m log m) additional line segments suffice and claimed without proof that (m log m) additional line segments may be required. In Section 2 of this paper we prove the lower bound, presenting a construction which requires (m log m) line segments. <p> The size of a triangulation is the total number of vertices, edges and triangles in the triangulation. Algorithms for constructing isomorphic triangulations between labelled point sets are described in [8] and [9]. Algorithms for isomorphic triangulations between simple polygons are given in [1], [7] and <ref> [5] </ref>. Our motivation for constructing pairwise disjoint paths using few line segments comes from our work on an approximation algorithm for constructing isomorphic triangulations between simple polygons in [5]. <p> Algorithms for isomorphic triangulations between simple polygons are given in [1], [7] and <ref> [5] </ref>. Our motivation for constructing pairwise disjoint paths using few line segments comes from our work on an approximation algorithm for constructing isomorphic triangulations between simple polygons in [5]. The main result in this paper improves the output size of that algorithm from O (M 1 log n + n log 2 n) to O (M 1 log n) where n is the input size and M 1 is the size of the optimal solution. <p> (k 0 n c log m) + c2C 1 k 1 n fl X (k 0 n c log m) + c2C 1 +k 1 n fl X k 0 (n c log (2=3)) 1 c2C 1 k 0 n log m: We employ arguments similar to the ones in <ref> [5] </ref> to turn Lemma 1 into a theorem about connecting pairs of vertices. Theorem 1 Let P be a simple polygon on n vertices let = f (u; u 0 )g be an untangled set of m pairs of distinct vertices of P . <p> Proof: As in <ref> [5] </ref>, we start by considering the problem of connecting vertices to edges in a triangulation of P . Let P be a simple polygon on n vertices with triangulation T P and distinguished edge e fl . <p> The size of a triangulation is the total number of vertices, edges and triangles in the triangulation. The result in Theorem 1 leads directly to an improvement in the output size of the algorithm for constructing isomorphic triangulations in <ref> [5] </ref>. We outline the improved algorithm here. Readers are referred to [5] for more complete details and figures of the original algorithm. <p> The result in Theorem 1 leads directly to an improvement in the output size of the algorithm for constructing isomorphic triangulations in <ref> [5] </ref>. We outline the improved algorithm here. Readers are referred to [5] for more complete details and figures of the original algorithm. <p> Isomorphic triangulations mapping p i to q i using O (M 1 log n) edges can be constructed in O (M 1 log n) time. Moreover, no new vertices are added to the boundary of P and Q in these triangulations. Proof: As in <ref> [5] </ref>, construct a triangulation T P of P using no vertices other than those of P and choose a set of edges C from T P as follows. Arbitrarily, pick an edge e of P . <p> Each subpolygon P i has an edge e which lies within link distance two of every point in P i . Thus each P i has link diameter at most five. By Lemma 3.4 in <ref> [5] </ref>, isomorphic triangulations of P i and Q i can be constructed in O (n i log n i ) time using 40n i blog 2 n i c + O (n i ) edges, where n i is the number of vertices of P i and Q i . <p> As isomorphic triangulations define a piecewise linear mapping between P and Q <ref> [5] </ref>, each diagonal (p i ; p j ) 2 C has a mapping, induced by the isomorphic triangulations T fl Q , in Q. <p> As M 2 is the number of line segments in an optimal construction of link paths, M 2 3M 1 . Since M 1 n 2, we conclude that M 2 log n + n log n = O (M 1 log n). As in <ref> [5] </ref>, it can be shown that the running time of the above algorithm is O (M 1 log n). 2 6 Conclusions Let P be a simple polygon on n vertices, let be an untangled set of m pairs of distinct vertices of P , and let L be the sum <p> In <ref> [5] </ref> we proved that pairwise disjoint interior paths connecting the pairs can be constructed using L + O (m log m) line segments. In this paper we showed that L + (m log m) line segments are sometimes required. <p> We applied this approximation algorithm to construct isomorphic triangulations of two polygons in O (M 1 log n) time using O (M 1 log n) edges where M 1 is the size of the optimal solution. This improved our result in <ref> [5] </ref>. We still do not know if constructing pairwise disjoint paths using the fewest line segments is an NP-complete problem or whether it can be solved in polynomial time. We also do not know of an *-approximation scheme for constructing such paths.
Reference: [6] <author> Kahan, S., and Snoeyink, J. </author> <title> On the bit complexity of minimum link paths: Superquadratic algorithms for problems solvable in linear time. </title> <booktitle> In Proc. 12th Annu. ACM Sympos. </booktitle> <institution> Comput. Geom. </institution> <year> (1996), </year> <pages> pp. 151-158. </pages>
Reference-contexts: We also do not know of an *-approximation scheme for constructing such paths. Possibly the techniques of Arora in [2] for the Euclidean Travelling Salesman Problem could apply. In <ref> [6] </ref>, Kahan and Snoeyink show that a polygon on n vertices with bit com plexity n log n may have a minimal link path with fi (n 2 log n) bit complexity. Similar problems plague pairwise disjoint paths with the minimum number of line segments.
Reference: [7] <author> Kranakis, E., and Urrutia, J. </author> <title> Isomorphic triangulations with small number of Steiner points. </title> <booktitle> In Proc. 7th Canad. Conf. </booktitle> <institution> Comput. Geom. </institution> <year> (1995), </year> <pages> pp. 291-296. </pages>
Reference-contexts: The size of a triangulation is the total number of vertices, edges and triangles in the triangulation. Algorithms for constructing isomorphic triangulations between labelled point sets are described in [8] and [9]. Algorithms for isomorphic triangulations between simple polygons are given in [1], <ref> [7] </ref> and [5]. Our motivation for constructing pairwise disjoint paths using few line segments comes from our work on an approximation algorithm for constructing isomorphic triangulations between simple polygons in [5].
Reference: [8] <author> Saalfeld, A. </author> <title> Joint triangulations and triangulation maps. </title> <booktitle> In Proc. 3rd Annu. ACM Sympos. </booktitle> <institution> Comput. Geom. </institution> <year> (1987), </year> <pages> pp. 195-204. </pages>
Reference-contexts: An isomorphic triangulation of P and Q also defines a piecewise linear homeomorphism between P and Q. The size of a triangulation is the total number of vertices, edges and triangles in the triangulation. Algorithms for constructing isomorphic triangulations between labelled point sets are described in <ref> [8] </ref> and [9]. Algorithms for isomorphic triangulations between simple polygons are given in [1], [7] and [5]. Our motivation for constructing pairwise disjoint paths using few line segments comes from our work on an approximation algorithm for constructing isomorphic triangulations between simple polygons in [5].
Reference: [9] <author> Souvaine, D., and Wenger, R. </author> <title> Constructing piecewise linear home-omorphisms. </title> <type> Technical Report 94-52, </type> <institution> DIMACS, </institution> <address> New Brunswick, New Jersey, </address> <year> 1994. </year>
Reference-contexts: An isomorphic triangulation of P and Q also defines a piecewise linear homeomorphism between P and Q. The size of a triangulation is the total number of vertices, edges and triangles in the triangulation. Algorithms for constructing isomorphic triangulations between labelled point sets are described in [8] and <ref> [9] </ref>. Algorithms for isomorphic triangulations between simple polygons are given in [1], [7] and [5]. Our motivation for constructing pairwise disjoint paths using few line segments comes from our work on an approximation algorithm for constructing isomorphic triangulations between simple polygons in [5].
Reference: [10] <author> Suri, S. </author> <title> A linear time algorithm for minimum link paths inside a simple polygon. Comput. Vision Graph. Image Process. </title> <booktitle> 35 (1986), </booktitle> <pages> 99-110. 26 </pages>
Reference-contexts: A polygonal path which uses the minimum number of required line segments is called a minimum link path. Clearly, there may be more than one such path. Suri in <ref> [10] </ref> gave a linear time algorithm for determining the link distance and a minimal link path between two vertices. A minimum link path from u to u 0 may intersect the boundary of P at many points other than u and u 0 .
References-found: 10

