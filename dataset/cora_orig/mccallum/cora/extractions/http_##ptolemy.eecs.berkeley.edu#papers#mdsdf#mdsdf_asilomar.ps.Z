URL: http://ptolemy.eecs.berkeley.edu/papers/mdsdf/mdsdf_asilomar.ps.Z
Refering-URL: http://ptolemy.eecs.berkeley.edu/papers/publications.html/pubs_1994.html
Root-URL: http://www.cs.berkeley.edu
Title: Ptolemy: a Framework for Simulating and Prototyping Heterogeneous Systems, International Journal of Computer Simulation, special
Author: J. Buck, S. Ha, E.A. Lee, and D.G. Messerschmitt, [] E.A. Lee, E.A. Lee and D.G. Messerschmitt, [] E.A. Lee and D.G. Messerschmitt, [] S. Bhattacharyya and E.A. Lee, [] I.M. Verbauwhede, C.J. Scheers, and J.M. Rabaey, [] F.H.M. Franssen, F. Balasa, M.F.X.B. van Swaaij, F.V.M. Catthoor, and H.J. De Man, 
Affiliation: Electronics Research Laboratory, U.C. Berkeley,  
Date: September, 1987.  January, 1987.  November 18, 1992.  319-27, September 1993.  
Note: 4: Conclusion 5: References [1]  Jan 20-22, 1993, IFIP Transactions A (Computer Science and Technology), 1993, vol.A-23:295-306. [4]  Proceedings of the IEEE, Vol. 75, No. 9, pp. 1235-1245,  IEEE Transactions on Computers, Vol. C-36, No. 1, pp. 24-35,  IEEE Transactions on VLSI Systems, Vol. 1., No. 3, pp.  
Pubnum: Memorandum No. UCB/ ERL M02/128,  
Abstract: standard matrix operations. Similarly, a star that receives input from another star could access the data by requesting a submatrix to access the matrix acting as the buffer for the input connection. This is in contrast to the standard SDF style of working on the particles and the data they contain directly. No buffers of particles or submatrices are used at all in this implementation of the MDSDF simulation domain. The geodesic contains one matrix that acts as the buffer for the arc, and all accesses to that buffer are conducted through submatrices that are created and deleted as needed. Since submatrices are never buffered, the responsibility to delete them falls on the stars that requested them. This makes the code in MDSDF stars slightly more complex than those of standard SDF stars that rely on the system to recover particles that are no longer being used. Although it is possible to buffer the submatrices used by a star in the portholes for that star, which would give us the advantage of maintaining pointers to all the submatrices used so that the system could recover or reuse them instead of having the stars delete them after each use, this would involve an additional overhead of maintaining a two dimensional buffer. In our initial attempt at implementing a MDSDF simulation domain, we did not think the gains justified the additional complexity. In summary, this system of having only one matrix allocate memory for the buffer of an arc connection makes our system very efficient. A possible alternative implementation would have the source actor produce matrices with their own allocated storage. The problem with that system is that if a destination actor required inputs that differed in dimensions from those provided by the source actor, the mismatched dimensions would have to be reconciled by copying and/or merging inputs and then creating new output matrices. Our system avoids such excessive copying and shufing of data. Source and destination actors work directly with subsets of the larger buffer using the submatrix access structures. The buffer itself has a fixed size that can be determined and allocated at compile time from the information provided by the MDSDF graph. We have discussed various issues that arose during our implementation of a MDSDF domain in Ptolemy. There are numerous challenges in efficiently managing the large amounts of data that a typical MDSDF system would generate. We have presented the formal specifications of a workable MDSDF model, and presented some examples of its features. We have also presented a discussion of the complexities involved in implementing a simulation environment for MDSDF and the design decisions we made to simplify the implementation. Currently, a MDSDF single processor simulation domain has been implemented in Ptolemy. It has been tested on small simple systems such as 2D-FFT computation, and 2D FIR and IIR filters. Areas for future work include implementing a multiprocessor scheduling target and examining possible extensions of the system to greater than two dimensions. [3] M.J. Chen, Developing a MultidimensionalSynchronous Dataow Domain in Ptolemy, MS Report, ERL Technical Report UCB/ERL No. 94/16, University of California at Berke-ley, Berkeley, CA 94720, May 6, 1994. 
Abstract-found: 1
Intro-found: 0
Reference: [1] <author> J. Buck, S. Ha, E.A. Lee, and D.G. Messerschmitt, Ptolemy: </author> <title> a Framework for Simulating and Prototyping Heterogeneous Systems, </title> <journal> International Journal of Computer Simulation, special issue on Simulation Software Development, </journal> <month> January, </month> <year> 1994. </year>
Reference: [2] <author> E.A. Lee, </author> <title> Multidimensional Streams Rooted in Data-ow, Proceedings of the IFIP Working Conference on Architectures and Compilation Techniques for Fine and Medium Grain Parallelism, </title> <month> Jan 20-22, </month> <year> 1993, </year> <journal> IFIP Transactions A (Computer Science and Technology), </journal> <year> 1993, </year> <month> vol.A-23:295-306. </month>
Reference: [3] <author> M.J. Chen, </author> <title> Developing a MultidimensionalSynchronous Dataow Domain in Ptolemy, </title> <type> MS Report, ERL Technical Report UCB/ERL No. 94/16, </type> <institution> University of California at Berke-ley, Berkeley, </institution> <address> CA 94720, </address> <month> May 6, </month> <year> 1994. </year>
Reference: [4] <author> E.A. Lee and D.G. Messerschmitt, </author> <title> Synchronous Data Flow, </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> Vol. 75, No. 9, </volume> <pages> pp. 1235-1245, </pages> <month> September, </month> <year> 1987. </year>
Reference: [5] <author> E.A. Lee and D.G. Messerschmitt, </author> <title> Static Scheduling of Synchronous Data Flow Programs for Digital Signal Processing IEEE Transactions on Computers, </title> <journal> Vol. </journal> <volume> C-36, No. 1, </volume> <pages> pp. 24-35, </pages> <month> January, </month> <year> 1987. </year>
Reference: [6] <author> S. Bhattacharyya and E.A. Lee, </author> <title> Memory Management for Synchronous Dataow Programs, </title> <note> Memorandum No. UCB/ ERL M02/128, </note> <institution> Electronics Research Laboratory, U.C. Berkeley, </institution> <month> November 18, </month> <year> 1992. </year>
Reference: [7] <author> I.M. Verbauwhede, C.J. Scheers, and J.M. Rabaey, </author> <title> Specifications and Support for Multidimensional DSP in the Silage Language, </title> <address> ICAASP 94. </address>

References-found: 7

