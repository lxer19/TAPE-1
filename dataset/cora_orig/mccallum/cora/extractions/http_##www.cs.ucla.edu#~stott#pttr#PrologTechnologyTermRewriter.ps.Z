URL: http://www.cs.ucla.edu/~stott/pttr/PrologTechnologyTermRewriter.ps.Z
Refering-URL: http://www.cs.ucla.edu/~stott/pttr/
Root-URL: http://www.cs.ucla.edu
Title: test eq( prove: (p(X),l(a,X),not_l(f(a),X)), Proof), print_proof(Proof).  program_clause( p(a,b,c), true, 4  test eq( prove:p(b,a,c), Proof), print_proof(Proof).  
Author: program_clause( not_l(X,Y), l(Y,X), program_clause( not_l(X,Y), l(Y,X), program_clause( not_d(X,f(Y)), not_l(Y,X), program_clause( l(Y,X), d(X,f(Y)), program_clause( p(X), not_d(h(X),X), program_clause( p(X), not_p(h(X)), program_clause( p(h(X)), not_p(X), program_clause( p(X), not_l(h(X),X), program_clause( not_p(X), (l(a,X),not_l(f(a),X)), program_clause( not_l(a,X), (p(X),not_l(f(a),X)), program_clause( l(f(a),X), (p(X),l(a,X)), negative_literal( not_p(X), p(X) negative_literal( not_d(X,Y), d(X,Y) negative_literal( not_l(X,Y), l(X,Y) Chang Lee program_clause( p(U,Z,W), (p(X,Y,U),p(Y,Z,V),p(X,V,W)), program_clause( not_p(X,Y,U), (not_p(U,Z,W),p(Y,Z,V),p(X,V,W)), program_clause( not_p(Y,Z,V), (not_p(U,Z,W),p(X,Y,U),p(X,V,W)), program_clause( not_p(X,V,W), (not_p(U,Z,W),p(X,Y,U),p(Y,Z,V)), program_clause( p(X,V,W), (p(X,Y,U),p(Y,Z,V),p(U,Z,W)), program_clause( not_p(X,Y,U), (not_p(X,V,W),p(Y,Z,V),p(U,Z,W)), program_clause( not_p(Y,Z,V), (not_p(X,V,W),p(X,Y,U),p(U,Z,W)), program_clause( not_p(U,Z,W), (not_p(X,V,W),p(X,Y,U),p(Y,Z,V)), negative_literal( not_p(X,Y,Z), p(X,Y,Z) 
Keyword: query p(X) l(a,X) not_l(f(a),X)  
Web: unify(X1,X2).  
Note: 3. (not_l(X,Y) not_l(Y,X)) 5. (p(X) d(h(X),X)) 7. (p(X) l(h(X),X))  program_clause( l(X1,f(X2)), true, 1 unify(X1,X2). program_clause( not_l(X1,X2), true, 2  Example 2 (adapted from Stickel) original clauses: 1. p(e,X,X) 3. p(X,X,e) 5. (p(U,Z,W) p(X,Y,U) p(Y,Z,V) p(X,V,W)) query p(b,a,c) program_clause( p(e,X1,X2), true, 1 unify(X1,X2). program_clause( p(X1,e,X2), true, 2 unify(X1,X2). program_clause( p(X1,X2,e), true, 3 unify(X1,X2).  
Pubnum: program_clause( d(h(X1),X2), not_p(X1), 5 unify(X1,X2).  program_clause( l(h(X1),X2), not_p(X1), 7 unify(X1,X2).  
Abstract: Test theorems % % We have included contrapositives and sound unification % directly here for simplicity. All axioms are in clause form. %---------------------------------------------------- % Chang & Lee Example 9 (adapted from Stickel) % original clauses: % 1. l(X,f(X)) 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> H. At-Kaci. </author> <title> Warren's Abstract Machine: A Tutorial Reconstruction. </title> <address> Cambridge, MA: </address> <publisher> MIT Press, </publisher> <year> 1991. </year>
Reference: [2] <author> O.L. Astrachan, M.E. Stickel. </author> <title> Cacheing and Lemmaizing in Model Elimination Theorem Provers. </title> <booktitle> Proc. 11th CADE, </booktitle> <editor> D. Kapur (ed.), </editor> <publisher> Springer LNAI # 607, </publisher> <pages> 224-238, </pages> <year> 1992. </year>
Reference: [3] <author> L. Bachmair. </author> <title> Canonical Equational Proofs, </title> <address> Cambridge, MA: </address> <publisher> Birkhauser, </publisher> <year> 1991. </year>
Reference: [4] <author> L. Bachmair. </author> <title> Rewrite Techniques in Theorem Proving (invited talk). </title> <booktitle> Proc. 5th Conf. on Rewriting Techniques and Applications, </booktitle> <editor> C. Kirchner (ed.), </editor> <publisher> Springer LNAI # 814, </publisher> <year> 1993. </year>
Reference: [5] <author> J.A. Bergstra and J.W. Klop. </author> <title> Conditional rewrite rules: Confluence and termination. </title> <journal> J. Comput. System Sci., </journal> <volume> 32 </volume> <pages> 323-362, </pages> <year> 1986. </year>
Reference: [6] <author> C.-L. Chang and R.C.-T. Lee. </author> <title> Symbolic Logic and Mechanical Theorem Proving. </title> <publisher> Academic Press, </publisher> <year> 1973. </year>
Reference: [7] <author> Mantis H.M. Cheng and Keitaro Yukawa. </author> <title> AP: an assertional programming system. </title> <editor> In R.W. Wilkerson (ed.), </editor> <booktitle> Advances in Logic Programming and Automated Reasoning, </booktitle> <volume> volume 1. </volume> <publisher> Ablex Publishing. </publisher> <pages> pp. 120-134, </pages> <year> 1992. </year>
Reference: [8] <author> M.H.M. Cheng, M.H. van Emden, B. Richards, </author> <title> On Warren's Method for Functional Programming in Logic, </title> <booktitle> Proc. Seventh Intnl. Conf. on Logic Programming, </booktitle> <address> Jerusalem. </address> <publisher> MIT Press, </publisher> <month> 546-560 </month> <year> (1990). </year>
Reference: [9] <author> M.H.M. Cheng, D.S. Parker, M.H. van Emden. </author> <title> Prolog Technology Term Rewriting: Applicative Systems. </title> <booktitle> Proceedings of HOA'93, </booktitle> <address> Amsterdam, CWI, </address> <month> September </month> <year> 1993. </year> <note> Available as file://pop.cs.ucla.edu/pub/eq/HOA93.ps.Z. </note>
Reference: [10] <author> M.H.M. Cheng, M.H. van Emden, D.S. Parker. </author> <title> A Method for Implementing Equational Theories as Logic Programs. </title> <type> Technical Report, </type> <month> November </month> <year> 1994. </year> <note> Available as file://pop.cs.ucla.edu/pub/eq/equality.ps.Z. </note>
Reference: [11] <author> N. Dershowitz and J.-P. Jouannaud. </author> <title> Rewrite systems. </title> <editor> In Jan van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, </booktitle> <volume> volume B, </volume> <pages> pages 243-320. </pages> <publisher> North Holland, </publisher> <year> 1990. </year>

References-found: 11

