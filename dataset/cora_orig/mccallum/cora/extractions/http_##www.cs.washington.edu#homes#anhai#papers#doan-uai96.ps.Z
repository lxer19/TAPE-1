URL: http://www.cs.washington.edu/homes/anhai/papers/doan-uai96.ps.Z
Refering-URL: http://www.cs.washington.edu/homes/anhai/anhai-cv.html
Root-URL: 
Email: fanhai, haddawyg@cs.uwm.edu  
Title: Sound Abstraction of Probabilistic Actions in The Constraint Mass Assignment Framework  
Author: AnHai Doan Peter Haddawy 
Date: 1996  
Address: Portland, Oregon, USA,  Milwaukee, WI 53201  
Affiliation: Artificial Intelligence,  Decision Systems and Artificial Intelligence Laboratory Department of EE CS University of Wisconsin-Milwaukee  
Note: In Proceedings of the Twelfth Annual Conference on Uncertainty in  
Abstract: This paper provides a formal and practical framework for sound abstraction of probabilistic actions. We start by precisely defining the concept of sound abstraction within the context of finite-horizon planning (where each plan is a finite sequence of actions). Next we show that such abstraction cannot be performed within the traditional probabilistic action representation, which models a world with a single probability distribution over the state space. We then present the constraint mass assignment representation, which models the world with a set of probability distributions and is a generalization of mass assignment representations. Within this framework, we present sound abstraction procedures for three types of action abstraction. We end the paper with discussions and related work on sound and approximate abstraction. We give pointers to papers in which we discuss other sound abstraction-related issues, including applications, estimating loss due to abstraction, and automatically generating abstraction hierarchies. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. Boutilier and R. Dearden. </author> <title> Using abstractions for decision-theoretic planning with time constraints. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence, </booktitle> <pages> pages 1016-1022, </pages> <address> Seattle, </address> <month> July </month> <year> 1994. </year>
Reference-contexts: 1 INTRODUCTION Recently there have been a number of proposed techniques to reduce the running time complexity of probabilistic and decision-theoretic planning <ref> [ 2, 11, 8, 1, 7 ] </ref> . Most of these techniques are abstraction techniques or some variants of abstraction techniques. <p> In Markov Decision Process planning, for example, Dean et. al. [ 2 ] plan with an incrementally increasing envelope of states, while abstracting all remaining states those with low probability of being entered into a single state. Boutilier et. al. <ref> [ 1 ] </ref> reduce the number of states by collapsing states differing only in the values of "irrelevant" domain attributes. <p> Most proposed abstraction techniques deal with one of two categories of abstraction: approximate abstraction and sound abstraction. Approximate abstraction gives approximate solutions that sometimes can be shown to be within an estimated distance from the optimal, exact solutions. Examples of approximate abstraction approaches are <ref> [ 2, 1 ] </ref> . These approaches suggest that approximate abstraction is used to reduce the size of the input planning problem by abstracting away unimportant detail. <p> Since an understanding of mass assignments facilitates an understanding of constraint mass assignments, we start in the next subsection with a brief introduction to mass assignments Mass Assignments Let denote the state space; a mass assignment (MA) m : 2 ! <ref> [0; 1] </ref> assigns to each subset of a portion of the probability mass [ 12 ] . We have P and m (;) = 0. <p> This amounts to doing sequential abstraction in our framework. Their work, however, did not offer any formal abstraction theory or concrete application. Horvitz [ 10 ] also discussed utility-based state and action abstraction. In his framework abstraction is approximate, and utility is action-based, instead of plan-based. Boutilier et. al. <ref> [ 1 ] </ref> proposed an approximate abstraction method for Markov Decision Processes. In his method the complexity of the domain is reduced by first identifying a set of "irrelevant" domain attributes; abstract states and actions are then created by ignoring these attributes.
Reference: [2] <author> T. Dean, L. Pack Kaelbling, J. Kirman, and A. Nichol-son. </author> <title> Planning with deadlines in stochastic domains. </title> <booktitle> In Proceedings of the Eleventh National Conference on Artificial Intelligence, </booktitle> <pages> pages 574-579, </pages> <month> July </month> <year> 1993. </year>
Reference-contexts: 1 INTRODUCTION Recently there have been a number of proposed techniques to reduce the running time complexity of probabilistic and decision-theoretic planning <ref> [ 2, 11, 8, 1, 7 ] </ref> . Most of these techniques are abstraction techniques or some variants of abstraction techniques. <p> Most of these techniques are abstraction techniques or some variants of abstraction techniques. In Markov Decision Process planning, for example, Dean et. al. <ref> [ 2 ] </ref> plan with an incrementally increasing envelope of states, while abstracting all remaining states those with low probability of being entered into a single state. Boutilier et. al. [ 1 ] reduce the number of states by collapsing states differing only in the values of "irrelevant" domain attributes. <p> Most proposed abstraction techniques deal with one of two categories of abstraction: approximate abstraction and sound abstraction. Approximate abstraction gives approximate solutions that sometimes can be shown to be within an estimated distance from the optimal, exact solutions. Examples of approximate abstraction approaches are <ref> [ 2, 1 ] </ref> . These approaches suggest that approximate abstraction is used to reduce the size of the input planning problem by abstracting away unimportant detail. <p> Motivation We have to find a mechanism to represent worlds, that is, sets of probability distributions. A natural starting point is the SPD framework which is the underlying representation for the majority of existing probabilistic and decision-theoretic planning systems <ref> [ 11, 2 ] </ref> and is introduced in [ 11 ] . In this framework a world is modeled with a single probability distribution over the state space. Projecting a plan thus results in a probability distribution over the state space.
Reference: [3] <author> A. Doan. </author> <title> An abstraction-based approach to decision-theoretic planning for partially observable metric domains. </title> <type> Technical report, </type> <institution> Dept. of EE & CS, University of Wisconsin-Milwaukee, </institution> <month> January </month> <year> 1996. </year> <type> Masters Thesis. </type>
Reference-contexts: Sequential abstraction abstract a sequence of actions into an abstract action, thus reducing the number of actions in a plan. In this section we present abstraction procedures for the three abstraction types mentioned above. Due to space limitation we present only the abstraction procedures, but see <ref> [ 3 ] </ref> for examples and a detailed discussion of the derivation process (which is technically quite complicated).
Reference: [4] <author> A. Doan. </author> <title> Modeling probabilistic actions for practical decision-theoretic planning. </title> <booktitle> In The Third International Conference on AI Planning Systems, </booktitle> <year> 1996. </year> <note> To appear. </note>
Reference-contexts: To the best of our knowledge, most existing work on developing this framework presents projection rules that iterate through all subsets of the state space and so cannot be applied to domains with large state space. (For a discussion on this topic see <ref> [ 4, 5 ] </ref> .) We have found that a generalized representation of the mass assignment framework, which we call the constraint mass assignment framework, is well-suited for practical projection rules and sound abstraction. <p> So CMAs are well-defined representations of sets of probability distributions. CMAs with trees of depth one form a special subclass of CMAs that we term the class of interval mass assignments (IMAs). Figure 1.f shows for example an IMA M 2 . In a related paper <ref> [ 4 ] </ref> , we presented a framework for using IMAs to represent worlds and discussed in detail the advantages of the IMA framework over the MA framework. <p> That is, for any CMA M, plan p, and its concrete instantiation p', we have CM A project (p; M )exec (p 0 ; M ). 5 DISCUSSIONS AND RELATED WORKS The work presented here is a significant extension of two previous papers on the same subject <ref> [ 8, 4 ] </ref> . In [ 8 ] we derived intra- and inter-abstraction methods for action abstraction in the SPD framework. We proved the soundness of the derived abstraction procedures. <p> Unfortunately, the post-projection result can not be represented with a single probability distribution, so a sequence of actions cannot be projected. Our attempt at developing a more expressive representation framework that can accommodate sound abstraction resulted in the IMA framework presented in <ref> [ 4 ] </ref> . This framework differs from the CMA framework in that we use IMAs to represent worlds. So even though we use essentially the same projection rule as CMA-project to project actions, after each action projection the resulting CMA tree must be "flattened" into an IMA.
Reference: [5] <author> A. Doan and P. Haddawy. </author> <title> Sound abstraction of probabilistic actions in the constraint mass assignment framework. </title> <type> Technical report, </type> <institution> University of Wisconsin-Milwaukee, </institution> <month> March </month> <year> 1996. </year> <note> Available via anonymous FTP from pub/tech_reports at ftp.cs.uwm.edu. </note>
Reference-contexts: Third, we present sound abstraction procedures for three types of action abstraction. Finally, we end the paper with a discussion of related work on sound and approximate abstraction. Due to space limitation, the reader is referred to <ref> [ 5 ] </ref> for a more detailed discussion of the topics of this paper, as well as discussions of applications, estimating loss due to abstraction, and automatically constructing abstraction hierarchies. 2 SOUND PROBABILISTIC ACTION ABSTRACTION In this section we present a general representation framework for finite-horizon decision-theoretic planning. <p> To the best of our knowledge, most existing work on developing this framework presents projection rules that iterate through all subsets of the state space and so cannot be applied to domains with large state space. (For a discussion on this topic see <ref> [ 4, 5 ] </ref> .) We have found that a generalized representation of the mass assignment framework, which we call the constraint mass assignment framework, is well-suited for practical projection rules and sound abstraction. <p> The CMA framework inherits all these advantages. In addition, the CMA framework is more expressive and can accommodate better projection techniques than the IMA framework <ref> [ 5 ] </ref> . Because of all the above theoretical and practical advantages, we model worlds with CMAs. <p> As a result, the post-projection set of probability distributions in the CMA framework is a convex set that subsumes the post-execution set of probability distribution and is subsumed by the post-projection convex set obtained in the IMA framework through a similar projection process. In <ref> [ 5 ] </ref> we show that in the general case the post-projection convex set in the CMA framework is not the smallest convex set that subsumes the post-execution set. <p> <ref> [ 5 ] </ref> we show that in the general case the post-projection convex set in the CMA framework is not the smallest convex set that subsumes the post-execution set. We haven't been able to show in general how loose the post-projection set is compared to the post-execution set, but see [ 5 ] for some partial results, as well as preliminary results on estimating utility loss In Proceedings of the Twelfth Annual Conference on Uncertainty in Artificial Intelligence, Portland, Oregon, USA, 1996 due to abstraction and on methods to construct abstraction hierarchies.
Reference: [6] <author> V. Ha and P. Haddawy. </author> <title> Theoretical foundations for abstraction-based probabilistic planning. </title> <booktitle> In Proceedings of the Twelfth Conference on Uncertainty in Artificial Intelligence, </booktitle> <month> July </month> <year> 1996. </year> <note> To appear. </note>
Reference-contexts: This result suggests that the abstraction techniques, even though preliminary, are applicable in solving real-world problems. We have used a set-relational approach in defining CMAs as representing sets of probability distributions. For a different approach that uses affin-operators to construct CMAs, see <ref> [ 6 ] </ref> . In that paper the authors present essentially the same world representation, but a slightly different action representation, projection procedures, and action abstraction procedures. The presented abstraction procedures are weaker forms of the abstraction procedures presented in Section 4.
Reference: [7] <author> P. Haddawy, A. Doan, and R. Goodwin. </author> <title> Efficient decision-theoretic planning: Techniques and empirical analysis. </title> <booktitle> In Proceedings of the Eleventh Conference on Uncertainty in Artificial Intelligence, </booktitle> <pages> pages 229-236, </pages> <address> Montreal, </address> <month> August </month> <year> 1995. </year>
Reference-contexts: 1 INTRODUCTION Recently there have been a number of proposed techniques to reduce the running time complexity of probabilistic and decision-theoretic planning <ref> [ 2, 11, 8, 1, 7 ] </ref> . Most of these techniques are abstraction techniques or some variants of abstraction techniques. <p> In finite-horizon plan ning, the buridan planner [ 11 ] employs abstraction techniques in one of its plan-evaluation procedures; it bundles action branches deemed to be similar in terms of the final outcomes. The drips planner <ref> [ 7 ] </ref> uses a number of abstraction techniques to abstract plans and actions. Most proposed abstraction techniques deal with one of two categories of abstraction: approximate abstraction and sound abstraction. <p> The distinguishing characteristic of sound abstraction is that it guarantees the planner never jumps to false conclusions because inferences made at abstract levels must be consistent with those made at lower levels. Examples of sound abstraction approaches are buridan [ 11 ] and drips <ref> [ 7 ] </ref> . <p> We have implemented the drips planner that searches through a plan space to find the plan with the highest expected utility <ref> [ 7 ] </ref> . drips uses the abstraction techniques discussed in this paper to avoid explicitly examining every individual plan. We have applied drips to a variety of problems in medical decision making with good results [ 7 ] . <p> searches through a plan space to find the plan with the highest expected utility <ref> [ 7 ] </ref> . drips uses the abstraction techniques discussed in this paper to avoid explicitly examining every individual plan. We have applied drips to a variety of problems in medical decision making with good results [ 7 ] . For example in a domain of 6,206 plans, drips evaluates less than 600 plans to find the optimal plan. This result suggests that the abstraction techniques, even though preliminary, are applicable in solving real-world problems.
Reference: [8] <author> P. Haddawy and A.H. Doan. </author> <title> Abstracting probabilistic actions. </title> <booktitle> In Proceedings of the Tenth Conference on Uncertainty in Artificial Intelligence, </booktitle> <pages> pages 270-277, </pages> <address> Seattle, </address> <month> July </month> <year> 1994. </year>
Reference-contexts: 1 INTRODUCTION Recently there have been a number of proposed techniques to reduce the running time complexity of probabilistic and decision-theoretic planning <ref> [ 2, 11, 8, 1, 7 ] </ref> . Most of these techniques are abstraction techniques or some variants of abstraction techniques. <p> Procedures for creating an abstract entity from member entities such as creating the description of an abstract actions from the member actions must be developed. And fourth, procedures for estimating information loss due to abstraction must be developed. In a previous paper <ref> [ 8 ] </ref> , we attempted to address the first three issues. We gave justifications for sound action abstraction. We then identified several useful types of action abstraction and presented procedures for creating the abstractions. <p> When plan projection is used in the process of finding the best plans from a given set of plans, the complexity of planning also depends on the number of plans in the set. In a previous paper on action abstraction <ref> [ 8 ] </ref> we have indentified three types of sound abstraction that help reduce the complexity of planning: intra-action, inter-action, and sequential abstraction. Intra-action abstraction reduces the number of branches in an action by abstracting a set of branches in this action into an abstract branch. <p> That is, for any CMA M, plan p, and its concrete instantiation p', we have CM A project (p; M )exec (p 0 ; M ). 5 DISCUSSIONS AND RELATED WORKS The work presented here is a significant extension of two previous papers on the same subject <ref> [ 8, 4 ] </ref> . In [ 8 ] we derived intra- and inter-abstraction methods for action abstraction in the SPD framework. We proved the soundness of the derived abstraction procedures. <p> In <ref> [ 8 ] </ref> we derived intra- and inter-abstraction methods for action abstraction in the SPD framework. We proved the soundness of the derived abstraction procedures. Unfortunately, the post-projection result can not be represented with a single probability distribution, so a sequence of actions cannot be projected.
Reference: [9] <author> S. Hanks. </author> <title> Practical temporal projection. </title> <booktitle> In Proceedings of the Eighth National Conference on Artificial Intelligence, </booktitle> <pages> pages 158-163, </pages> <address> Boston, </address> <month> July </month> <year> 1990. </year>
Reference-contexts: The presented abstraction procedures are weaker forms of the abstraction procedures presented in Section 4. Our work on intra-action abstraction draws ideas from the work of Hanks <ref> [ 9 ] </ref> . In that work he suggested "bundling" action branches (i.e., intra-action abstraction) to reduce the complexity of projection. The buridan planner [ 11 ] implemented this bundling technique in one of its projection algorithms. No systematic procedure for bundling branches was presented.
Reference: [10] <author> E. Horvitz. </author> <title> Utility-based abstraction and categorization. </title> <booktitle> In Proceedings of the Ninth Conference on Uncertainty in Artificial Intelligence, </booktitle> <pages> pages 128-135, </pages> <year> 1993. </year>
Reference-contexts: This amounts to doing sequential abstraction in our framework. Their work, however, did not offer any formal abstraction theory or concrete application. Horvitz <ref> [ 10 ] </ref> also discussed utility-based state and action abstraction. In his framework abstraction is approximate, and utility is action-based, instead of plan-based. Boutilier et. al. [ 1 ] proposed an approximate abstraction method for Markov Decision Processes.
Reference: [11] <author> N. Kushmerick, S. Hanks, and D. Weld. </author> <title> An algorithm for probabilistic least-commitment planning. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence, </booktitle> <pages> pages 1073-1078, </pages> <address> Seattle, </address> <year> 1994. </year>
Reference-contexts: 1 INTRODUCTION Recently there have been a number of proposed techniques to reduce the running time complexity of probabilistic and decision-theoretic planning <ref> [ 2, 11, 8, 1, 7 ] </ref> . Most of these techniques are abstraction techniques or some variants of abstraction techniques. <p> Boutilier et. al. [ 1 ] reduce the number of states by collapsing states differing only in the values of "irrelevant" domain attributes. In finite-horizon plan ning, the buridan planner <ref> [ 11 ] </ref> employs abstraction techniques in one of its plan-evaluation procedures; it bundles action branches deemed to be similar in terms of the final outcomes. The drips planner [ 7 ] uses a number of abstraction techniques to abstract plans and actions. <p> The distinguishing characteristic of sound abstraction is that it guarantees the planner never jumps to false conclusions because inferences made at abstract levels must be consistent with those made at lower levels. Examples of sound abstraction approaches are buridan <ref> [ 11 ] </ref> and drips [ 7 ] . <p> An example of a sound projection procedure is the forward procedure presented in <ref> [ 11 ] </ref> . An abstract action is built from concrete or lower-level abstract actions using a number of abstraction operators; each concrete instantiation of an abstract action is a sequence of concrete actions. An abstract plan is a finite sequence of abstract and concrete actions. <p> Motivation We have to find a mechanism to represent worlds, that is, sets of probability distributions. A natural starting point is the SPD framework which is the underlying representation for the majority of existing probabilistic and decision-theoretic planning systems <ref> [ 11, 2 ] </ref> and is introduced in [ 11 ] . In this framework a world is modeled with a single probability distribution over the state space. Projecting a plan thus results in a probability distribution over the state space. <p> Motivation We have to find a mechanism to represent worlds, that is, sets of probability distributions. A natural starting point is the SPD framework which is the underlying representation for the majority of existing probabilistic and decision-theoretic planning systems [ 11, 2 ] and is introduced in <ref> [ 11 ] </ref> . In this framework a world is modeled with a single probability distribution over the state space. Projecting a plan thus results in a probability distribution over the state space. Unfortunately, the SPD framework does not accommodate sound abstraction as defined in Section 2. <p> SPD actions are special cases of CMA actions. When a CMA action a and CMA world M can also be represented in the SPD framework, projecting a on M using the procedure CMA-project is the same as using forward projections in the SPD framework (see <ref> [ 11 ] </ref> for descriptions of SPD forward projection procedures). In the CMA framework projection complexity can be roughly measured with the number of nodes in the tree of the last CMA that results from projection. <p> Our work on intra-action abstraction draws ideas from the work of Hanks [ 9 ] . In that work he suggested "bundling" action branches (i.e., intra-action abstraction) to reduce the complexity of projection. The buridan planner <ref> [ 11 ] </ref> implemented this bundling technique in one of its projection algorithms. No systematic procedure for bundling branches was presented.
Reference: [12] <author> Glenn Shafer. </author> <title> A mathematical theory of evidence. </title> <year> 1976. </year>
Reference-contexts: The definition of the function project (Section 2) implies that project (a fl ; w) can be represented with a world. But in the SPD framework a world cannot represent two different PDs! The next natural candidate mechanism for representing a set of probability distributions is mass assignments <ref> [ 12 ] </ref> , which constitute a subclass of lower probabilities. Mass assignments are very appealing because they have the intuitive interpretation of assigning probability masses to sets of states and can be very compactly represented in practice. <p> mass assignments facilitates an understanding of constraint mass assignments, we start in the next subsection with a brief introduction to mass assignments Mass Assignments Let denote the state space; a mass assignment (MA) m : 2 ! [0; 1] assigns to each subset of a portion of the probability mass <ref> [ 12 ] </ref> . We have P and m (;) = 0. The set B is called a focal element of m if m (B) &gt; 0; and we will say the pair hB; m (B)i forms a branch of m.
Reference: [13] <author> David E. Smith and Mike Williamson. </author> <title> Representation and evaluation of plans with loops. </title> <booktitle> In AAAI Spring Symposium 95 Extending Theories of Actions, </booktitle> <address> Stan-ford, CA, </address> <year> 1995. </year>
Reference-contexts: In that work he suggested "bundling" action branches (i.e., intra-action abstraction) to reduce the complexity of projection. The buridan planner [ 11 ] implemented this bundling technique in one of its projection algorithms. No systematic procedure for bundling branches was presented. Recently, Smith et. al. <ref> [ 13 ] </ref> proposed reducing the structural complexity of a plan represented as a directed diagram by replacing a sequence of actions with an aggregate action the effect of which is consistent with the end effect of the action sequence. This amounts to doing sequential abstraction in our framework.
References-found: 13

