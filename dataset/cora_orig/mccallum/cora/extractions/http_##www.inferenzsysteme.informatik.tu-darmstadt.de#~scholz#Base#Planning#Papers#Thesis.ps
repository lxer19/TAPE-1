URL: http://www.inferenzsysteme.informatik.tu-darmstadt.de/~scholz/Base/Planning/Papers/Thesis.ps
Refering-URL: http://www.inferenzsysteme.informatik.tu-darmstadt.de/~scholz/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Planning by Local Search  
Author: Ulrich Scholz Supervised by Thomas Stutzle Dr. Michael Thielscher Examined by Prof. Wolfgang Bibel 
Degree: Diploma Thesis by  
Date: December 1997  
Affiliation: Technische Universitat Darmstadt Fachbereich Informatik FG Intellektik  
Abstract-found: 0
Intro-found: 1
Reference: [BF95] <author> Avrim L. Blum and Merrick L. Furst. </author> <title> Fast planning through planning graph analysis. </title> <booktitle> In Proceedings of the International Joint Conference on Artificial Intelligence (IJCAI-95), </booktitle> <pages> pages 1636-1642, </pages> <address> San Mateo, CA, 1995. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: For example, in Russell's flat tire domain described in <ref> [BF95] </ref>, M fin boots nuts, have nuts, loose nuts, tight nutsg is a MPS. The first two and the second two propositions are also part of different MPSs, so for deducing (in boot nuts ! :tight nuts), it is necessary to find M. <p> These two facts are already determined as fixed by Goal, so C is always active and reports a failure. The special search technique used by Graphplan is not applicable for ProbaPla, because the latter is inherently incomplete. More information on Graphplan and its implementation can be found in <ref> [BF95] </ref>. Kambhampati [Kam97] explaines the relation of Graphplan to other planners. A.4 CNF-based Planning Besides Graphplan, ProbaPla is inspired by SatPlan, which is a CNF-based planner. This group of planners is related to deductive planning in that they axiomatize a planning domain as well as a specific problem instance.
Reference: [Bib85] <author> Wolfgang Bibel. </author> <title> A Deductive Solution for Plan Generation. </title> <journal> New Generation Computing, </journal> <volume> 4 </volume> <pages> 115-132, </pages> <year> 1985. </year>
Reference-contexts: This enlarges the axiomatization and is a reason for the intractability of many problem with this approach. 64 A.2 Partial-Order Planning 65 An example to overcome this problem is the known connection method proposed by Bibel <ref> [Bib85] </ref>, which describes planning problems similar to logic programming or program synthesis. The domain and the specific instance are described as set of formulas in first order logic. Actions are coded as combination of two formulas, antecedent implying consequences.
Reference: [Bib97] <editor> Wolfgang Bibel. Let's plan it deductively! In M. Pollack, editor, </editor> <booktitle> Proceedings of the International Joint Conference on Artificial Intelligence (IJCAI-97), </booktitle> <pages> pages 1549-1562, </pages> <address> San Mateo, CA, August 1997. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: This eliminates the need for frame axioms completely. They represent formulas as horn clauses which are used by many common theorem proofing systems, so they can be adapted to their method with only small changes. Bibel <ref> [Bib97] </ref> proposes the deductive view on planning as base of all other techniques and describes other approaches as specialized programming. A.2 Partial-Order Planning Partial-order planning is an attempt to use the fact that usually not all actions of a plan depend on or can conflict with each other.
Reference: [BK95] <author> Fahiem Bacchus and Froduald Kabanza. </author> <title> Using Temporal Logic to Control Search in a Forward Chaining Planner. </title> <booktitle> In Proceedings of the 3rd European Workshop on Planning, </booktitle> <year> 1995. </year> <note> Available via the URL ftp://logos.uwaterloo.ca:/pub/tlplan/tlplan.ps.Z. </note>
Reference-contexts: With this unified notion of planning it should be possible to combine the application of planning strategies and simplification with the process of planning itself. One formalism which could be helpful in achieving this, is temporal logic <ref> [BK95, BK96] </ref>. Another starting point for further improvement are the strong restrictions posed on the domains allowed by planner using local search. Other planners, like ucpop [Wel94], incorporate action schemata with variables, conditional effects, disjunction, and universal quantification.
Reference: [BK96] <author> Fahiem Bacchus and Froduald Kabanza. </author> <title> Planning for Temporally Extended Goals. </title> <booktitle> In Proc. National Conference on Artificial Intelligence (AAAI '96), </booktitle> <year> 1996. </year> <note> Available via the URL ftp://logos.uwaterloo.ca:/pub/tlplan/mitl.ps.Z. </note>
Reference-contexts: With this unified notion of planning it should be possible to combine the application of planning strategies and simplification with the process of planning itself. One formalism which could be helpful in achieving this, is temporal logic <ref> [BK95, BK96] </ref>. Another starting point for further improvement are the strong restrictions posed on the domains allowed by planner using local search. Other planners, like ucpop [Wel94], incorporate action schemata with variables, conditional effects, disjunction, and universal quantification.
Reference: [Boe95] <author> Kenneth D. Boese. </author> <title> Cost Versus Distance In the Traveling Salesman Problem. </title> <type> Technical Report CSD-950018, </type> <institution> UCLA Computer Science Department, </institution> <month> May </month> <year> 1995. </year>
Reference-contexts: The word, which denotes the intuitive meaning of solution, global optimum, is introduced in Definition 9. 14 3.1 Local Search 15 to be powerful in several NP-complete domains, like the traveling salesman problem <ref> [Boe95, SH97] </ref>, the quadratic assignment problem [Tai95, Stu97], and the graph coloring problem [SLM92]. A common property of these incomplete strategies is that they perform local search on the feasible set to find the optimal solution.
Reference: [BW94] <author> Anthony Barret and Daniel S. Weld. </author> <title> Partial-Order Planning: Evaluating Possible Efficiency Gains. </title> <journal> AI magazine, </journal> <volume> 67 </volume> <pages> 71-112, </pages> <year> 1994. </year>
Reference-contexts: Table 8.2 shows the total running time, the time for simplification, and the total running time of Graphplan for such problems. 54 8.2 Evaluating the Search 55 Table 8.1: Graph of several problem sizes of the artificial domain D m S 2 of Barret and Weld <ref> [BW94] </ref>. The table shows the total running time and the simplification time of problems of size 2 to 25. All problems use the same set of actions; the solution length is two times the problem size. All solutions are found by simplification, so no search is necessary. <p> The new action does not have to be placed before or after the other actions of the plan, but can possibly occur at any time or even in parallel to another action. As Barret and Weld <ref> [BW94] </ref> point out, this is not the main difference between partial-order and total-order planners. Total-order planners can also insert a new action at any place it does not cause a conflict, the difference is they commit to a specific order.
Reference: [Byl94] <author> Tom Bylander. </author> <title> The Computational Complexity of STRIPS Planning. </title> <journal> Artificial Intelligence Journal, </journal> <volume> 69 </volume> <pages> 165-204, </pages> <year> 1994. </year>
Reference-contexts: For this reason, the planning structure has to be bounded [KMS96], so any plan represented by it must be of length n for some fixed n. It is NP-complete to determine, if there is a solution of a certain length to a planning problem <ref> [Byl94] </ref>, so choosing a specific planning structure might discard all solutions. This problem is addressed in Section 4.5. The dependencies between the variables of a planning structure determine, which assignment is a solution. These dependencies are represented by a set of constraints which is part of the planning structure. <p> If the plan length becomes long enough, there is a possibility to find a solution. There are two draw-backs with this approach: * Although there are domains for which longer solutions are easier to find than solutions of the minimal length <ref> [Byl94] </ref>, there are planner which are distracted by long plans. The reason is the exponential explosion of possible plans by plan length. <p> Ein Grund f ur diese Schwierigkeit des Planens in traditionellen Systemen ist die Tatsache, da das allgemeine Problem PSPACE-vollst andig ist, und selbst Dom anen mit eingeschr ankter Ausdrucksf ahigkeit sind immer noch NP-vollst andig <ref> [Byl94] </ref>. Wir erwarten daher, da jeder vollst andige Planer exponentielle Zeit verglichen zur Problemgr oe ben otigt. Die Beobachtung, da nat urliche Systeme, wie Menschen, derartig komplexe Proble-me l osen k onnen, scheint zwei m ogliche Ans atze zum Uberwinden dieser momentanen Unl osbarkeit des generellen Planungsproblems aufzuzeigen.
Reference: [EMW97] <author> Michael D. Ernst, Todd D. Millstein, and Daniel S. Weld. </author> <title> Automatic SAT-Compilation of Planning Problems. </title> <booktitle> In Proceedings of the 15th International 89 BIBLIOGRAPHY 90 Joint Conference on Artificial Intelligence (IJCIA-97), </booktitle> <address> Nagoya, Aichi, Japan, </address> <month> August </month> <year> 1997. </year>
Reference-contexts: This reduction restricts the space of representations and optimizations. Current techniques of encoding consist either in the use of a compiler or in coding it by hand. Several ways of automatic SAT-compilation are explored by <ref> [EMW97] </ref>. They were mostly concerned about formula size and number of clauses, which are mainly an issue of the CNF encoding itself. Some constraints have to be expressed by formulas which cause an exponential explosion during conversion into CNF, so they are not appropriate for this approach. <p> For applying local search methods, including these variables in the definition of the feasible set often is a severe drawback, because all variables can be changed in course of finding the global optimum. Excluding variables with known value cuts the search space and can result in a significant speedup <ref> [EMW97] </ref>. Applying constraint propagation to the planning structure requires bookkeeping. The assignment of excluded variables has to be preserved to generate a complete solution, if there is one. <p> The second simplification of SatPlan uses a SAT-simplifier. These algorithms are a field of research by themselves and it was not aim of this thesis to build a constraint-propagation simplifier which can compete with it. An extended treatment of SatPlan and its features can be found in <ref> [EMW97] </ref>, while another approach to encode planning problems into propositional logic is covered in [KMS96]. Appendix B Zusammenfassung | Planen durch lokale Suche Dieser Anhang beinhaltet eine Zusammenfassung dieser Diplomarbeit in deutsch. B.1 Einleitung Planen ist eine allgegenw artige Aufgabe in unserer Welt. <p> Der zweite, durch nat urliche Systeme nahegelegte Ansatz ist die Verwendung von unvollst andigen Methoden. Ihre Leistungsf ahigkeit wurde durch Experimente demon-striert, die k urzlich mit dem Planer SatPlan <ref> [EMW97] </ref> durchgef uhrt wurden. Dieser kodiert ein Planungsproblem in konjunktive Normalform CNF [KS92, KS96] und l ost diese mit einem leistungsf ahigen SAT-Finder, wie GSAT [SLM92]. Das Ergebnis wird in eine L osung des Planungsproblems zur uck ubersetzt.
Reference: [FN71] <author> Richard E. Fikes and Nils J. Nilsson. </author> <title> STRIPS: A New Approach to the Application of Theorem Proving to Problem Solving. </title> <journal> Artificial Intelligence Journal, </journal> <volume> 2 </volume> <pages> 189-208, </pages> <year> 1971. </year>
Reference-contexts: A plan synthesizer does not have to reason about intermediate effects of actions. One representation of domains with these properties is STRIPS <ref> [FN71] </ref>. 9 2 Definitions 10 Definition 1. A STRIPS action consists of an operator name plus a precondition list, an add list and a delete list. The elements of the precondition, add, and delete lists are all positive propositions or facts. <p> Ein Planer braucht sich nicht mit den Zwischenzust anden der Aktionsausf uhrung zu besch aftigen. Eine Repr asentation von Dom anen dieser Art ist STRIPS <ref> [FN71] </ref>. Definition B.1. Eine STRIPS Aktion besteht aus einem Operatornamen, einer Liste von Vorbedingungen, einer Add-Liste und einer Delete-Liste. Jedes Element dieser Listen ist eine positive Proposition oder ein Fakt.
Reference: [FNP + 97] <author> Norman Y. Foo, Abhaya Nayak, Maurice Pagnucco, Pavleo Peppas, and Yan Zhang. </author> <title> Action Localness, Genericity and Invariants in STRIPS. </title> <booktitle> In Proceedings of the International Joint Conference on Artificial Intelligence (IJCAI-97), </booktitle> <pages> pages 549-554. </pages> <publisher> Morgan Kaufmann, </publisher> <month> August </month> <year> 1997. </year>
Reference-contexts: This version of a STRIPS representation is further simplified. The original con-ceptuation allows first order expressions in the precondition lists and quantified variables <ref> [Rei78, FNP + 97] </ref>. Example 3. Table 2.1 is an example for a blocks world domain with two blocks. The semantic meaning of the propositions is that blocks can be on top of each other and on the table. A block is either clear or covered by a single block. <p> B.2 Definitionen 72 Diese Version von STRIPS-Repr asentationen ist weiter vereinfacht. Die urspr ungliche Konzeption erlaubt weiterhin die Benutzung von logischen Formeln erster Stufe in den Vorbedingungen und quantifizierter Variablen <ref> [Rei78, FNP + 97] </ref>. Beispiel 3 auf Seite 10 zeigt eine Blocks World Dom ane mit zwei Bl ocken. Definition B.3. Ein Plan P ist eine endliche Liste von Mengen von Aktionen. Die Position eines Listenelements nennen wir seine Zeitstufe, wobei die erste Aktionsmenge in Zeitstufe 1 eingef ugt ist.
Reference: [FW96] <author> Marc Friedman and Danies S. Weld. </author> <title> Least-Commitment Action Selection. </title> <booktitle> In Proceedings of AIPS-96, </booktitle> <month> May </month> <year> 1996. </year>
Reference-contexts: Other planners, like ucpop [Wel94], incorporate action schemata with variables, conditional effects, disjunction, and universal quantification. Also there are planners, which use abstract actions to defer the commitment to specific actions as long as possible <ref> [FW96] </ref>. It seems promising to generalize the formalisms used for ProbaPla to incorporate these features, both by making them suitable for local search and by finding appropriate planning strategies. A third direction for conceptual improvement is the use of other calculi.
Reference: [Glo89] <author> F. Glover. </author> <title> Tabu Search Part I. </title> <journal> ORSA Journal on Computing, </journal> <volume> 1(3) </volume> <pages> 190-206, </pages> <year> 1989. </year>
Reference-contexts: These non-optimal steps are chosen with a certain probability. [MSK97] describe several heuristics and different strategies of this kind. * Taboo <ref> [Glo89, Glo90] </ref> is a strategy which prohibits repeatedly making the same choices when searching the feasible set. This can be applied to elements of the feasible set or to attributes of sets of elements.
Reference: [Glo90] <author> F. Glover. </author> <title> Tabu Search Part II. </title> <journal> ORSA Journal on Computing, </journal> <volume> 2(1) </volume> <pages> 4-32, </pages> <year> 1990. </year>
Reference-contexts: These non-optimal steps are chosen with a certain probability. [MSK97] describe several heuristics and different strategies of this kind. * Taboo <ref> [Glo89, Glo90] </ref> is a strategy which prohibits repeatedly making the same choices when searching the feasible set. This can be applied to elements of the feasible set or to attributes of sets of elements.
Reference: [Gre69] <author> C. Green. </author> <title> Application of Theorem Proving to Problem Solving. </title> <booktitle> In Proceedings of the International Joint Conference on Artificial Intelligence (IJCAI-69), </booktitle> <pages> pages 219-239, </pages> <address> Washington, D.C., </address> <year> 1969. </year>
Reference-contexts: The idea is to code domains and planning instances into a set of axioms. They express the dependencies between actions, their preconditions and effects, resp. Init and Goal. This can be done in several ways. While, for example, Green <ref> [Gre69] </ref> proposed that the occurrence of an action together with its preconditions implies its effects, in other ax-iomatizions [KS92], actions imply the union of their preconditions and effects.
Reference: [HS90] <author> Steffen Holldobler and Josef Schneeberger. </author> <title> A New Deductive Approach to Planning. </title> <journal> New Generation Computing, </journal> <volume> 8 </volume> <pages> 225-244, </pages> <year> 1990. </year>
Reference-contexts: Any slightly modified theorem proofer can find a proof for a problem stated in this way. Its output can easily transformed back into a plan which is the final result. Another approach to overcome the frame problem is given by Holldobler and Schnee-berger <ref> [HS90] </ref>, that uses a representation of plans and states as terms and thus as first class objects. This eliminates the need for frame axioms completely.
Reference: [Kam97] <author> Subbaro Kambhampati. </author> <title> Refinement Planning as a Unifying Framework for Plan Synthesis. </title> <journal> AI magazine, </journal> <volume> 18(2):48, </volume> <year> 1997. </year> <type> ASU CSE TR 97-018. </type>
Reference-contexts: The special search technique used by Graphplan is not applicable for ProbaPla, because the latter is inherently incomplete. More information on Graphplan and its implementation can be found in [BF95]. Kambhampati <ref> [Kam97] </ref> explaines the relation of Graphplan to other planners. A.4 CNF-based Planning Besides Graphplan, ProbaPla is inspired by SatPlan, which is a CNF-based planner. This group of planners is related to deductive planning in that they axiomatize a planning domain as well as a specific problem instance.
Reference: [KLP97] <author> Subbaro Kambhampati, Eric Lambrecht, and Eric Parker. </author> <title> Understanding and Extending Graphplan. </title> <type> Technical Report ASU CSE TR 97-005, </type> <institution> Arizona State University, </institution> <year> 1997. </year>
Reference-contexts: The recursive procedure takes a partial plan and tries to find a subset of the preceding level which, in combination with the partial plan, reaches the goals. Because of testing all subsets of all levels, this algorithm is complete. For more details about Graphplan, see <ref> [KLP97] </ref>. The search is speeded up by recognizing sets of fluents which cannot be part of a solution. For each level of the structure, such sets are stored in a hash-table and every new assignment is checked against it.
Reference: [KMS96] <author> Henry Kautz, David McAllester, and Bart Selman. </author> <title> Encoding Plans in Propositional Logic. </title> <editor> In L. C. Aiello, J. Doyle, and S. Shapiro, editors, </editor> <booktitle> Proceedings of the Fifth International Conference on Principles of Knowledge Representation and Reasoning (KR-96), </booktitle> <pages> pages 374-384, </pages> <address> Cambridge, MA, 1996. </address> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA. </address>
Reference-contexts: Otherwise, even finding an optimal solution to an easy problem could require changing the assignment of an infinite number of variables. For this reason, the planning structure has to be bounded <ref> [KMS96] </ref>, so any plan represented by it must be of length n for some fixed n. It is NP-complete to determine, if there is a solution of a certain length to a planning problem [Byl94], so choosing a specific planning structure might discard all solutions. <p> An extended treatment of SatPlan and its features can be found in [EMW97], while another approach to encode planning problems into propositional logic is covered in <ref> [KMS96] </ref>. Appendix B Zusammenfassung | Planen durch lokale Suche Dieser Anhang beinhaltet eine Zusammenfassung dieser Diplomarbeit in deutsch. B.1 Einleitung Planen ist eine allgegenw artige Aufgabe in unserer Welt. Wie beim einfachen Trinken aus einer Tasse wird es oft nicht bemerkt.
Reference: [KS92] <author> H. Kautz and B. Selman. </author> <title> Planning as Satisfiability. </title> <editor> In B. Neumann, editor, </editor> <booktitle> Proceedings of the European Conference on Artificial Intelligence (ECAI), </booktitle> <pages> pages 359-363. </pages> <publisher> John Wiley & Sons, Ltd, </publisher> <year> 1992. </year> <note> BIBLIOGRAPHY 91 </note>
Reference-contexts: They express the dependencies between actions, their preconditions and effects, resp. Init and Goal. This can be done in several ways. While, for example, Green [Gre69] proposed that the occurrence of an action together with its preconditions implies its effects, in other ax-iomatizions <ref> [KS92] </ref>, actions imply the union of their preconditions and effects. Together with the initial and goal state, these axioms result in a statement which can be proved, if and only if there is a plan for the planning problem. <p> They do not try to prove that the resulting statement is true, which is equivalent to the fact that there is an assignment which fulfills it. Instead they try the complementary by finding this assignment directly. This is called model finding <ref> [KS92] </ref>. As with ProbaPla, SatPlan encodes a planning problem into a planning structure and tries to find a solution by local search, but there are major differences between both approaches. <p> Der zweite, durch nat urliche Systeme nahegelegte Ansatz ist die Verwendung von unvollst andigen Methoden. Ihre Leistungsf ahigkeit wurde durch Experimente demon-striert, die k urzlich mit dem Planer SatPlan [EMW97] durchgef uhrt wurden. Dieser kodiert ein Planungsproblem in konjunktive Normalform CNF <ref> [KS92, KS96] </ref> und l ost diese mit einem leistungsf ahigen SAT-Finder, wie GSAT [SLM92]. Das Ergebnis wird in eine L osung des Planungsproblems zur uck ubersetzt. Dieser Umweg schr ankt den Raum 69 B.2 Definitionen 70 der m oglichen Repr asentierungen und Optimierungen ein.
Reference: [KS96] <author> Henry Kautz and Bart Selman. </author> <title> Pushing the envelope: Planning, propositional logic, and stochastic search. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence (AAAI-96), </booktitle> <pages> pages 1194-1201, </pages> <address> Portland, OR, 1996. </address> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA. </address>
Reference-contexts: Der zweite, durch nat urliche Systeme nahegelegte Ansatz ist die Verwendung von unvollst andigen Methoden. Ihre Leistungsf ahigkeit wurde durch Experimente demon-striert, die k urzlich mit dem Planer SatPlan [EMW97] durchgef uhrt wurden. Dieser kodiert ein Planungsproblem in konjunktive Normalform CNF <ref> [KS92, KS96] </ref> und l ost diese mit einem leistungsf ahigen SAT-Finder, wie GSAT [SLM92]. Das Ergebnis wird in eine L osung des Planungsproblems zur uck ubersetzt. Dieser Umweg schr ankt den Raum 69 B.2 Definitionen 70 der m oglichen Repr asentierungen und Optimierungen ein.
Reference: [Kum92] <author> V. Kumar. </author> <title> Algorithms for Constraint-Satisfaction Problems: A Survey. </title> <journal> AI Magazine, </journal> <volume> 13(1) </volume> <pages> 32-44, </pages> <year> 1992. </year>
Reference-contexts: For a planning structure VT , ST , C, PP, l max , a variable v i is fixed if it has the same value in all solutions of PP. A notation to formalize the process of determining fixed variables is given by the concept of constraint propagation <ref> [Mac87, Kum92] </ref>. Information about the values of variables, not present in any solution is distributed to other constraints, so they possibly can further restrain the domain of variables.
Reference: [Mac87] <author> Alan K. </author> <title> Mackworth. </title> <journal> Encyclopedia of Artificial Intelligence, </journal> <volume> volume 1, </volume> <booktitle> chapter Constraint Satisfaction, </booktitle> <pages> pages 205-211. </pages> <publisher> John Wiley & Sons, </publisher> <year> 1987. </year>
Reference-contexts: For a planning structure VT , ST , C, PP, l max , a variable v i is fixed if it has the same value in all solutions of PP. A notation to formalize the process of determining fixed variables is given by the concept of constraint propagation <ref> [Mac87, Kum92] </ref>. Information about the values of variables, not present in any solution is distributed to other constraints, so they possibly can further restrain the domain of variables.
Reference: [MH69] <author> John McCarthy and Patrick J. Hayes. </author> <title> Some Philosophical Problems from the Standpoint of Artificial Intelligence. </title> <journal> Machine Intelligence, </journal> <volume> 4 </volume> <pages> 463-502, </pages> <year> 1969. </year>
Reference-contexts: This structure should naturally support a neighborhood-relation, so that similar plans are close to each other. This can be done by axiomatizing a domain in situation calculus <ref> [MH69] </ref>, using logic formulas of first or second order logic. The expressiveness of general situation calculus is even higher than of general STRIPS, but the expressiveness of the reduced STRIPS introduced in Chapter 2 is subsumed by propositional logic. <p> Using first order calculus to axiomatize planning problems, one has to cope with the frame problem <ref> [MH69] </ref>. It denotes the fact that axioms for actions do not only have to state what changes if an action is applied but also what does not change.
Reference: [MSK97] <author> David McAllester, Bart Selman, and Henry Kautz. </author> <title> Evidence for Invariants in Local Search. </title> <editor> In B. Kuipers and B. Webber, editors, </editor> <booktitle> Proceedings of the AAAI National Conference on Artificial Intelligence, </booktitle> <pages> pages 321-326, </pages> <address> Providence, RI, July 1997. </address> <publisher> MIT Press. </publisher>
Reference-contexts: These non-optimal steps are chosen with a certain probability. <ref> [MSK97] </ref> describe several heuristics and different strategies of this kind. * Taboo [Glo89, Glo90] is a strategy which prohibits repeatedly making the same choices when searching the feasible set. This can be applied to elements of the feasible set or to attributes of sets of elements. <p> All these heuristics to escape local optima have parameters which determine when and how they have to be applied. Their performance is sensitive to the setting of these parameters and for each optimization problem their optimal value can be different. Although <ref> [MSK97] </ref> describe a heuristic to guess them for some strategies, they have to be found and confirmed by exhaustive experiments. 3.5 Incompleteness and Randomness 18 3.5 Incompleteness and Randomness Two common properties of local search strategies is the absence of backtracking and the use of randomness. <p> Besides strategies to escape local optima, randomness is used for finding the initial element. Also, if there are elements of the feasible set which have the same objective value, the objective function can be randomized to break ties. Not all local search strategies depend on the usage of randomness, <ref> [MSK97] </ref> describe a strategy which is close to deterministic. 3.6 Structure of the Feasible Set The feasible set of optimization problems often has a special structure. These problems consist of a set of parameters and the feasible set is the set of all assignments to these variables. <p> Durch die Verwendung des Zufalls k onnen schlechte Heuristiken oder Zyklen vermieden werden. Zus atzlich wird auch die Aus-gangssituation zuf allig bestimmt. Nicht alle Strategien basieren auf zuf alligen Entschei-dungen, <ref> [MSK97] </ref> beschreiben eine Strategie, die fast deterministisch ist. Die Struktur der Menge der zul assigen L osungen Die Menge der zul assigen L osungen hat oft eine spezielle Struktur, falls sie die Menge aller Wertekombinationen einer Menge von Variablen darstellt.
Reference: [PS82] <author> Christos H. Papandimitriou and Kenneth Steiglitz. </author> <title> Combinatiorial optimization: Algorithms and Complexity. </title> <publisher> Prentice-Hall, </publisher> <year> 1982. </year>
Reference-contexts: Chapter 3 Optimization Problems and Local Search One aim of this thesis is to show the reducibility of planning to an optimization problem in general. This chapter gives definitions and a short introduction to local search, which roughly follows <ref> [PS82] </ref>. An optimization problem is to find the `best' element in a set, with the quality of elements given by a function. Definition 7. An optimization problem is a tuple (F; o), where F is a set and o : F 7! R is the objective function.
Reference: [Rei78] <author> R. Reiter. </author> <title> On Closed World Data Bases. </title> <editor> In H. Gallaire and J. Minker, editors, </editor> <booktitle> Logic and Data Bases, </booktitle> <pages> pages 55-76. </pages> <publisher> Plenum Press, </publisher> <address> New York, </address> <year> 1978. </year>
Reference-contexts: At any time, a statement about the domain is true or false. * The planning system has global knowledge about the domain, so no hidden part can influence the execution of a plan. Specifically, the closed world assumption <ref> [Rei78] </ref> is used, which means that any proposition not mentioned in an initial situation of a planning problem is false in that situation. * Domains are finite in all its properties, so the number of plans is countable infinite and the number of states is finite. <p> This version of a STRIPS representation is further simplified. The original con-ceptuation allows first order expressions in the precondition lists and quantified variables <ref> [Rei78, FNP + 97] </ref>. Example 3. Table 2.1 is an example for a blocks world domain with two blocks. The semantic meaning of the propositions is that blocks can be on top of each other and on the table. A block is either clear or covered by a single block. <p> Zu jeder Zeit ist eine Aussage uber die Welt entweder wahr oder falsch. * Das Planungssystem hat globales Wissen uber die Dom ane, so da kein unbekann-ter Teil von ihr die Ausf uhrung eines Planes beeinflussen kann. Im Besonderen wird eine geschlossene Welt angenommen <ref> [Rei78] </ref>, in der alle Propositionen in ei-ner Ausgangssituation falsch sind, wenn sie nicht ausdr ucklich als wahr definiert sind. * Dom anen sind endlich in allen ihren Eigenschaften, mit der Konsequenz, da auch die Zahl der Pl ane ohne Wiederholung von Zust anden auch endlich ist. <p> B.2 Definitionen 72 Diese Version von STRIPS-Repr asentationen ist weiter vereinfacht. Die urspr ungliche Konzeption erlaubt weiterhin die Benutzung von logischen Formeln erster Stufe in den Vorbedingungen und quantifizierter Variablen <ref> [Rei78, FNP + 97] </ref>. Beispiel 3 auf Seite 10 zeigt eine Blocks World Dom ane mit zwei Bl ocken. Definition B.3. Ein Plan P ist eine endliche Liste von Mengen von Aktionen. Die Position eines Listenelements nennen wir seine Zeitstufe, wobei die erste Aktionsmenge in Zeitstufe 1 eingef ugt ist.
Reference: [Sch97] <author> Ulrich Scholz. </author> <title> Restraining and Complete Refinement Planning. </title> <note> Submitted to AIPS-98, </note> <month> December </month> <year> 1997. </year>
Reference-contexts: Usually any found solution is a valid result and some planning strategies, like the ones using local search, are not suitable to find all. For a deeper treatment of restraining strategies, see <ref> [Sch97] </ref>. The next sections present several dependencies which hold for propositions in solutions of planning problems. 5.1 A Proposition implies another One If all actions which add a proposition p also add a proposition q and all actions which delete q also delete p, p implies q. Definition 21.
Reference: [SH97] <author> Thomas Stutzle and Holger Hoos. </author> <title> The MAX MIN Ant System and Local Search for the Traveling Salesman Problem. </title> <booktitle> In Proceedings 1997 IEEE International Conference on Evolutionary Computation (ICEC'97), </booktitle> <pages> pages 309-314, </pages> <address> April 13-16, Indianapolis, Indiana, USA, </address> <year> 1997. </year>
Reference-contexts: The word, which denotes the intuitive meaning of solution, global optimum, is introduced in Definition 9. 14 3.1 Local Search 15 to be powerful in several NP-complete domains, like the traveling salesman problem <ref> [Boe95, SH97] </ref>, the quadratic assignment problem [Tai95, Stu97], and the graph coloring problem [SLM92]. A common property of these incomplete strategies is that they perform local search on the feasible set to find the optimal solution.
Reference: [SKC93] <author> Bart Selman, Henry A. Kautz, and Bram Cohen. </author> <title> Local Search Strategies for Satisfiability Testing. </title> <editor> In M. Trick and D. S. Johnson, editors, </editor> <title> Proceedings of DIMACS Challenge on Cliques, Coloring, and Satisfiability, </title> <month> October </month> <year> 1993. </year>
Reference-contexts: This version would have a fixed set of domain analysis strategies and an optimized local search method. 9.2 Improving the Implementation 63 Other ways for improving the current version of ProbaPla is to use better local search techniques, for example as described in <ref> [SKC93] </ref>, and to extend the set of accepted problem description languages. Appendix A Approaches to Planning Planning is clearly a part of Artificial Intelligence, although it can be attacked and solved by different methods. This chapter describes some important approaches.
Reference: [SLM92] <author> Bart Selman, Hector Levesque, and David Mitchell. </author> <title> A New Method for Solving Hard Satisfiability Problems. </title> <booktitle> In Proceedings of the AAAI National Conference on Artificial Intelligence, </booktitle> <pages> pages 440 - 446, </pages> <year> 1992. </year>
Reference-contexts: The word, which denotes the intuitive meaning of solution, global optimum, is introduced in Definition 9. 14 3.1 Local Search 15 to be powerful in several NP-complete domains, like the traveling salesman problem [Boe95, SH97], the quadratic assignment problem [Tai95, Stu97], and the graph coloring problem <ref> [SLM92] </ref>. A common property of these incomplete strategies is that they perform local search on the feasible set to find the optimal solution. The idea is, for a given solution f 2 F , to evaluate o for elements `close' to f . <p> Ihre Leistungsf ahigkeit wurde durch Experimente demon-striert, die k urzlich mit dem Planer SatPlan [EMW97] durchgef uhrt wurden. Dieser kodiert ein Planungsproblem in konjunktive Normalform CNF [KS92, KS96] und l ost diese mit einem leistungsf ahigen SAT-Finder, wie GSAT <ref> [SLM92] </ref>. Das Ergebnis wird in eine L osung des Planungsproblems zur uck ubersetzt. Dieser Umweg schr ankt den Raum 69 B.2 Definitionen 70 der m oglichen Repr asentierungen und Optimierungen ein.
Reference: [SSST97] <author> Ulrich Scholz, Olaf Steinmann, Thomas Stutzle, and Michael Thielscher. </author> <title> Planning by Local Search. </title> <editor> In C. Baral and R. Goldman, editors, </editor> <booktitle> Proceedings of the Workshop at AAAI on Robots, Softbots, Immobots: Theories of Action, Planning, and Control, </booktitle> <address> Providence, RI, </address> <month> July </month> <year> 1997. </year> <note> BIBLIOGRAPHY 92 </note>
Reference-contexts: Some constraints have to be expressed by formulas which cause an exponential explosion during conversion into CNF, so they are not appropriate for this approach. For this reason we present a different approach to planning by local search <ref> [SSST97] </ref>. The chosen encoding is much more direct than CNF and is similar to the planning graph of Graphplan. <p> Dieser Ansatz be-schr ankt die M oglichkeiten der Repr asentierung und Optimierung. Diese Diplomarbeit B.4 Planen durch lokale Suche 76 pr asentiert einen anderen Ansatz des Planens durch lokale Suche <ref> [SSST97] </ref>, in dem die Kodierung direkter ist als CNF und derjenigen ahnlich, die Graphplan verwendet. Repr asentieren des Plan-Raums Um ein Planungsproblem durch lokale Suche zu l osen, mu eine Repr asentierung des Raums der m oglichen Pl ane gefunden werden.
Reference: [Stu97] <author> Thomas Stutzle. </author> <title> MAX MIN Ant System for the Quadratic Assignment Problem. </title> <type> Technical Report AIDA-97-4, </type> <institution> FG Intellektik, TU Darmstadt, </institution> <month> July </month> <year> 1997. </year>
Reference-contexts: The word, which denotes the intuitive meaning of solution, global optimum, is introduced in Definition 9. 14 3.1 Local Search 15 to be powerful in several NP-complete domains, like the traveling salesman problem [Boe95, SH97], the quadratic assignment problem <ref> [Tai95, Stu97] </ref>, and the graph coloring problem [SLM92]. A common property of these incomplete strategies is that they perform local search on the feasible set to find the optimal solution. The idea is, for a given solution f 2 F , to evaluate o for elements `close' to f .
Reference: [Tai95] <author> Eric Taillard. </author> <title> Comparison of Iterative Searches for the Quadratic Assignment Problem. </title> <booktitle> Location science 3, </booktitle> <pages> pages 87-105, </pages> <year> 1995. </year>
Reference-contexts: The word, which denotes the intuitive meaning of solution, global optimum, is introduced in Definition 9. 14 3.1 Local Search 15 to be powerful in several NP-complete domains, like the traveling salesman problem [Boe95, SH97], the quadratic assignment problem <ref> [Tai95, Stu97] </ref>, and the graph coloring problem [SLM92]. A common property of these incomplete strategies is that they perform local search on the feasible set to find the optimal solution. The idea is, for a given solution f 2 F , to evaluate o for elements `close' to f .
Reference: [Wel94] <author> Daniel S. Weld. </author> <title> An Introduction to Least Commitment Planning. </title> <journal> AI magazine, </journal> <volume> 15(4) </volume> <pages> 27-61, </pages> <year> 1994. </year>
Reference-contexts: One formalism which could be helpful in achieving this, is temporal logic [BK95, BK96]. Another starting point for further improvement are the strong restrictions posed on the domains allowed by planner using local search. Other planners, like ucpop <ref> [Wel94] </ref>, incorporate action schemata with variables, conditional effects, disjunction, and universal quantification. Also there are planners, which use abstract actions to defer the commitment to specific actions as long as possible [FW96].
References-found: 35

