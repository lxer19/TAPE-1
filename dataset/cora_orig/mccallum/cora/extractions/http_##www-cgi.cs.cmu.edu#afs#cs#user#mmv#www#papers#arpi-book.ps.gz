URL: http://www-cgi.cs.cmu.edu/afs/cs/user/mmv/www/papers/arpi-book.ps.gz
Refering-URL: 
Root-URL: 
Email: veloso@cs.cmu.edu  
Title: Towards Mixed-Initiative Rationale-Supported Planning  
Author: Manuela M. Veloso 
Web: http://www.cs.cmu.edu/~mmv  
Address: Pittsburgh, PA 15213-3891  
Affiliation: Computer Science Department Carnegie Mellon University  
Abstract: This paper introduces our work on mixed-initiative, rationale-supported planning. The work centers on the principled reuse and modification of past plans by exploiting their justification structure. The goal is to record as much as possible of the rationale underlying each planning decision in a mixed-initiative framework where human and machine planners interact. This rationale is used to determine which past plans are relevant to a new situation, to focus user's modification and replanning on different relevant steps when external circumstances dictate, and to ensure consistency in multi-user distributed scenarios. We build upon our previous work in Prodigy/Analogy, which incorporates algorithms to capture and reuse the rationale of an automated planner during its plan generation. To support a mixed-initiative environment, we have developed user interactive capabilities in the Prodigy planning and learning system. We are also working towards the integration of the rationale-supported plan reuse in Prodigy/Analogy with the plan retrieval and modification tools of ForMAT. Finally, we have focused on the user's input into the process of plan reuse, in particular when conditional planning is needed. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Blythe, J., and Veloso, M. </author> <year> 1996. </year> <title> Using analogy in conditional planners. </title> <type> Technical Report forthcoming, </type> <institution> Computer Science Department, Carnegie Mellon University. </institution>
Reference-contexts: Within this system integration, Prodigy/Analogy will provide informed removal and insertion of new plan modules by following the rationale that links the different parts of the plans. User Interface Along the mixed-initiative paradigm, we have designed and developed a user interface for the Prodigy planning and learning system <ref> (Blythe, Veloso, & de Souza 1996) </ref>. The interface supports the process of both building and running a planning domain. <p> The architecture used for the prodigy user interface accomplishes these goals and the implementation details can be found in <ref> (Blythe, Veloso, & de Souza 1996) </ref>. In this paper, we focus on describing briefly how the user can control the planning choices and on the visualization support for Prodigy/Analogy. Control of planning choices prodigy is a completely open-controllable architecture.
Reference: <author> Blythe, J.; Veloso, M.; and de Souza, L. E. </author> <year> 1996. </year> <title> The Prodigy user interface. </title> <type> Technical Report forthcoming, </type> <institution> Computer Science Department, Carnegie Mellon University. </institution>
Reference-contexts: Within this system integration, Prodigy/Analogy will provide informed removal and insertion of new plan modules by following the rationale that links the different parts of the plans. User Interface Along the mixed-initiative paradigm, we have designed and developed a user interface for the Prodigy planning and learning system <ref> (Blythe, Veloso, & de Souza 1996) </ref>. The interface supports the process of both building and running a planning domain. <p> The architecture used for the prodigy user interface accomplishes these goals and the implementation details can be found in <ref> (Blythe, Veloso, & de Souza 1996) </ref>. In this paper, we focus on describing briefly how the user can control the planning choices and on the visualization support for Prodigy/Analogy. Control of planning choices prodigy is a completely open-controllable architecture.
Reference: <author> Blythe, J. </author> <year> 1994. </year> <title> Planning with external events. </title> <editor> In de Mantaras, R. L., and Poole, D., eds., </editor> <booktitle> Proceedings of the Tenth Conference on Uncertainty in Artificial Intelligence, </booktitle> <pages> 94-101. </pages> <address> Seattle, WA: </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Our experiments have been showing that analogical replay significantly reduces the complexity of conditional planning. Through its replay functionality, Prodigy/Analogy showed to be suitable to be combined with C-Prodigy, the conditional planner developed by Blythe. Table 1 introduces how conditional planning controlled by the probabilistic planner Weaver <ref> (Blythe 1994) </ref>, is integrated with Prodigy/Analogy. It is interesting to notice the smoothness of this integration which is made possible by the common underlying framework of the Prodigy planning and learning system. Procedure C-Prodigy-Analogy 1.
Reference: <author> Carbonell, J. G.; Blythe, J.; Etzioni, O.; Gil, Y.; Joseph, R.; Kahn, D.; Knoblock, C.; Minton, S.; Perez, A.; Reilly, S.; Veloso, M.; and Wang, X. </author> <year> 1992. </year> <title> PRODIGY4.0: The manual and tutorial. </title> <type> Technical Report CMU-CS-92-150, </type> <institution> Department of Computer Science, Carnegie Mellon University. </institution>
Reference-contexts: Learned knowledge is flexibly applied to new problem solving situations even if only a partial match exists among problems. of Prodigy/Analogy. Generative planning using an operator-based planner, Prodigy4.0 <ref> (Carbonell et al. 1992) </ref>, is used if additional planning is needed when replaying the past planning cases. planner is used as a generative planner when additional planning is needed.
Reference: <author> Carbonell, J. G.; Knoblock, C. A.; and Minton, S. </author> <year> 1990. </year> <title> Prodigy: An integrated architecture for planning and learning. </title> <editor> In VanLehn, K., ed., </editor> <booktitle> Architectures for Intelligence. </booktitle> <address> Hillsdale, NJ: </address> <note> Erlbaum. Also Technical Report CMU-CS-89-189. </note>
Reference-contexts: The planning cases are retrieved from a library of cases, similarities are evaluated, and appropriate substitutions are performed. In this integration of conditional planning and analogy, the analogical replay within the context of different branches of the same problem can be better framed as an instance of internal analogy <ref> (Hickman, Shell, & Carbonell 1990) </ref>. In fact, the accumulation of a library of cases is not required, and there is no need for an elaborated analysis of similarity between a new problem and a potentially large number of different cases.
Reference: <author> Carbonell, J. G. </author> <year> 1986. </year> <title> Derivational analogy: A theory of reconstructive problem solving and expertise acquisition. </title> <editor> In Michalski, R. S.; Carbonell, J. G.; and Mitchell, T. M., eds., </editor> <booktitle> Machine Learning, An Artificial Intelligence Approach, </booktitle> <volume> Volume II, </volume> <pages> 371-392. </pages> <publisher> Morgan Kaufman. </publisher>
Reference-contexts: Derivational analogy instead is a reconstructive method by which lines of reasoning are transferred and adapted to a new problem <ref> (Carbonell 1986) </ref> as opposed to only the final solutions. Automatic generation of the derivational episodes that become the planning cases occurs by extending the base-level planner with the ability to examine its internal decision cycle, recording the justifications for each decision during its search process.
Reference: <author> Fink, E., and Veloso, M. </author> <year> 1994. </year> <title> PRODIGY planning algorithm. </title> <type> Technical Report CMU-CS-94-123, </type> <institution> School of Computer Science, Carnegie Mellon University. </institution>
Reference: <author> Haigh, K. Z., and Veloso, M. </author> <year> 1995. </year> <title> Route planning by analogy. </title> <booktitle> In Case-Based Reasoning Research and Development, Proceedings of ICCBR-95, </booktitle> <pages> 169-180. </pages> <publisher> Springer-Verlag. </publisher>
Reference: <author> Haigh, K. Z.; Veloso, M. M.; and Shewchuk, J. </author> <year> 1996. </year> <title> Exploring geometry in analogical route planning. </title> <note> Submitted to Journal of Experimental and Theoretical Artificial Intelligence. </note>
Reference: <author> Hickman, A. K.; Shell, P.; and Carbonell, J. G. </author> <year> 1990. </year> <title> Internal analogy: Reducing search during problem solving. </title> <editor> In Copetas, C., ed., </editor> <booktitle> The Computer Science Research Review 1990. </booktitle> <institution> The School of Computer Science, Carnegie Mellon University. </institution>
Reference-contexts: The planning cases are retrieved from a library of cases, similarities are evaluated, and appropriate substitutions are performed. In this integration of conditional planning and analogy, the analogical replay within the context of different branches of the same problem can be better framed as an instance of internal analogy <ref> (Hickman, Shell, & Carbonell 1990) </ref>. In fact, the accumulation of a library of cases is not required, and there is no need for an elaborated analysis of similarity between a new problem and a potentially large number of different cases.
Reference: <author> Mulvehill, A. M. </author> <year> 1996. </year> <title> Building, remembering, and revising force deployment plans. In In this same volume. </title>
Reference: <author> Veloso, M. M., and Carbonell, J. G. </author> <year> 1993a. </year> <title> Derivational analogy in prodigy: Automating case acquisition, storage, and utilization. </title> <booktitle> Machine Learning 10 </booktitle> <pages> 249-278. </pages>
Reference-contexts: Prodigy/Analogy extends Prodigy4.0 with the capability of recording the context in which the decisions are made. Figure 2 shows the skeleton of the decision nodes. We created a language for the slot values to capture the reasons that support the choices <ref> (Veloso & Carbonell 1993a) </ref>.
Reference: <author> Veloso, M. M., and Carbonell, J. G. </author> <year> 1993b. </year> <title> Towards scaling up machine learning: A case study with derivational analogy in prodigy. </title> <editor> In Minton, S., ed., </editor> <title> Machine Learning Methods for Planning. </title> <publisher> Morgan Kaufmann. </publisher> <pages> 233-272. </pages>
Reference-contexts: Replay of multiple guiding cases When a new problem is proposed, prodigy/analogy retrieves from the case library one or more problem solving episodes that may partially cover the new problem solving situation. The system uses a similarity metric that weighs goal-relevant features <ref> (Veloso & Carbonell 1993b) </ref>. In a nutshell, it selects a set of past cases that solved subsets of the new goal statement. The initial state is partially matched in the features that were relevant to solving these goals in the past.
Reference: <author> Veloso, M.; Carbonell, J.; Perez, M. A.; Borrajo, D.; Fink, E.; and Blythe, J. </author> <year> 1995. </year> <title> Integrating planning and learning: The PRODIGY architecture. </title> <journal> Journal of Experimental and Theoretical Artificial Intelligence 7(1) </journal> <pages> 81-120. </pages>
Reference: <author> Veloso, M. M. </author> <year> 1994a. </year> <title> Flexible strategy learning: Analogical replay of problem solving episodes. </title> <booktitle> In Proceedings of Twelfth National Conference on Artificial Intelligence, </booktitle> <pages> 595-600. </pages> <address> Seattle, WA: </address> <publisher> AAAI Press. </publisher>
Reference: <author> Veloso, M. M. </author> <year> 1994b. </year> <title> Planning and Learning by Analogical Reasoning. </title> <type> Springer Verlag. (Monograph of Ph.D. thesis, </type> <institution> Carnegie Mellon University, </institution> <year> 1992). </year>
References-found: 16

