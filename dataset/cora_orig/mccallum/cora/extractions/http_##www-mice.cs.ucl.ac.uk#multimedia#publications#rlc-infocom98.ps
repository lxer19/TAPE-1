URL: http://www-mice.cs.ucl.ac.uk/multimedia/publications/rlc-infocom98.ps
Refering-URL: http://www-mice.cs.ucl.ac.uk/multimedia/publications/
Root-URL: http://www.cs.ucl.ac.uk
Email: email: fL.Vicisano,J.Crowcroftg@cs.ucl.ac.uk,  email: l.rizzo@iet.unipi.it  
Title: TCP-like Congestion Control for Layered Multicast Data Transfer  
Author: Lorenzo Vicisano, Jon Crowcroft Luigi Rizzo 
Address: College London, Gower Street, London WC1E 6BT, UK  Pisa, via Diotisalvi 2 56126 Pisa (Italy),  
Affiliation: Dept. of Computer Science, University  Dip. di Ing. dell'Informazione, Universita di  
Note: Appeared in Proceedings of IEEE INFOCOM'98, the Conference on Computer Communication, San Francisco, USA, March 29-April, 1998. Also UCL-CS Research Note RN/97/67.  
Abstract: We present a novel congestion control algorithm suitable for use with cumulative, layered data streams in the MBone. Our algorithm behaves similarly to TCP congestion control algorithms, and shares bandwidth fairly with other instances of the protocol and with TCP flows. It is entirely receiver driven and requires no per-receiver status at the sender, in order to scale to large numbers of receivers. It relies on standard functionalities of multicast routers, and is suitable for continuous stream and reliable bulk data transfer. In the paper we illustrate the algorithm, characterize its response to losses both analytically and by simulations, and analyse its behaviour using simulations and experiments in real networks. We also show how error recovery can be dealt with independently from congestion control by using FEC techniques, so as to provide reliable bulk data transfer. Keywords: congestion control, multicast. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R.E.Blahut, </author> <title> Theory and Practice of Error Control Codes Addison Wes-ley, </title> <address> MA, </address> <year> 1984 </year>
Reference-contexts: throughput: T o 0 p p (2) where s is the packet size, o 0 is the inter-packet time at layer L 0 , W is the number of packets between two bursts, P is the distance (in bursts) between synchronisation points at the lower level, and c 0 2 <ref> [1; 2] </ref> is a function of ff. p represents the burst loss rate, computed accounting closely spaced (i.e. closer than t D ) losses as a single one. <p> We also assume the existence of an upper level session management protocol which possibly collects feedback to decide how long to continue transmissions and select which packets to send. The approach we follow is based on the use of FEC techniques (see <ref> [1] </ref>, [12]). In principle, the problems of finding a suitable transmission order for the data, and achieving an effective recovery from losses, can be solved by passing all the k packets which make up the object to an encoder which can produce a large number n AE k of packets. <p> The main drawback of FEC consists in the potentially high encoding and decoding costs. However, this overhead can be reduced by making use of a number of techniques: * splitting files in blocks of small size, and applying FEC separately to each block; * using FFT techniques <ref> [1] </ref> to compute the FEC packets; * pre-computing the FEC packets at the server and storing them on disk; * using probabilistic, linear-time algorithms such as those presented in [7] for the FEC encoding. VI.
Reference: [2] <author> D-M.Chiu, </author> <title> R.Jain Analysis of the Increase and Decrease Algorithm hms for Congestion Avoidance in Computer Networks, Computer Networks and ISDN Systems, </title> <address> V.17, pp.1-14, </address> <year> 1989. </year>
Reference-contexts: With a proper choice of the bandwidth B i corresponding to each subscription level, and the delay t p (i) before moving to the next level, the above algorithm mimics the behaviour of TCP (additive increase, multiplicative decrease <ref> [2] </ref>) and yields a relation between throughput and loss rate similar to that of TCP, namely T / 1= p. Parameters can also be tuned to yield a response time comparable to that of TCP congestion control. <p> throughput: T o 0 p p (2) where s is the packet size, o 0 is the inter-packet time at layer L 0 , W is the number of packets between two bursts, P is the distance (in bursts) between synchronisation points at the lower level, and c 0 2 <ref> [1; 2] </ref> is a function of ff. p represents the burst loss rate, computed accounting closely spaced (i.e. closer than t D ) losses as a single one. <p> To evaluate better this feature, we have computed the fairness Fig. 4. Bandwidth sharing among one TCP connection (top) and 4 protocol in stances (bottom) on a real network. RT T ' 300ms, and TCP packet size of 1440 bytes. index 2 <ref> [2] </ref> from the results of the simulations. Simulations with 2 to 32 protocol instances resulted in f i in the range 0.978..0.998 with RED, and 0.779..0.986 with tail drop. In both cases, the f i values are satisfactory, and particularly good with RED.
Reference: [3] <author> S.Deering, </author> <title> Multicast Routing in a Datagram Internetwork, </title> <type> PhD Thesis, </type> <institution> Stanford University, Dec.1991. </institution>
Reference: [4] <author> W. Fenner, </author> <title> Internet Group Management Protocol, </title> <type> Version 2, INTERNET-DRAFT (working draft), </type> <month> Jan. 20, </month> <year> 1997, </year> <note> http://ds.internic.net/internet-drafts/- draft-ietf-idmr-igmp-v2-06.txt </note>
Reference: [5] <author> S.Floyd, K.Fall, </author> <title> Router Mechanisms to Support End-to-End Congestion Control, </title> <type> Technical report, </type> <institution> ftp://ftp.ee.lbl.gov/papers/collapse.ps. </institution>
Reference-contexts: As a consequence, we believe that the proper approach to deal with high losses lies in the use of appropriately low values of B 0 , and in the use of queue management mechanisms in the routers to deal with uncontrollable flows <ref> [5] </ref>. D. Validation of the model inter-protocol fairness To validate our analytical model, we have both simulated the behaviour of several instances of the protocol sharing a bottleneck link, and run an implementation of our protocol on a real Fig. 3.
Reference: [6] <author> V.Jacobson, </author> <title> Congestion Avoidance and Control, </title> <booktitle> ACM SIGCOMM'88, </booktitle> <month> August </month> <year> 1988, </year> <institution> Stanford, </institution> <address> CA, pp.314-329. </address>
Reference-contexts: The network topologies used in the simulations. the same share of bandwidth irrespective of the RTT. A second difference is that our protocol works by controlling the data rate, while TCP congestion control is based on the `conservation of packets' principle <ref> [6] </ref>: a new packet is not put into the network until an old packet leaves; this allows TCP to fine-tune its traffic generation and to react quickly in the face of short-term network load changes.
Reference: [7] <author> M.Luby, M.Mitzenmacher, A.Shokrollahi, D.Spielman, and V.Stemann. </author> <title> Practical loss-resilient codes, </title> <booktitle> Proc. of the Twenty-Ninth Annual ACM Symp. on Theory of Computing, </booktitle> <address> El Paso, Texas, </address> <month> 4-6 May </month> <year> 1997. </year>
Reference-contexts: of techniques: * splitting files in blocks of small size, and applying FEC separately to each block; * using FFT techniques [1] to compute the FEC packets; * pre-computing the FEC packets at the server and storing them on disk; * using probabilistic, linear-time algorithms such as those presented in <ref> [7] </ref> for the FEC encoding. VI. CONCLUSIONS We have presented a congestion control algorithm for multi-cast data transfer on the MBone, evaluated its performance, and shown its applicability to continuous stream and reliable bulk transfer.
Reference: [8] <author> M.Mathis, J.Semke, J.Mahdavi, T.Ott, </author> <title> The Macroscopic Behavior of the TCP Congestion Aviodance Algorithm, </title> <address> CCR, Vol.27 N.3, </address> <month> July </month> <year> 1997. </year>
Reference: [9] <author> S. McCanne, V. Jacobson, and M. Vetterli, Receiver-driven Layered Mul-ticast, SIGCOMM'96, </author> <month> August </month> <year> 1996, </year> <institution> Stanford, </institution> <address> CA, pp.1-14. </address>
Reference-contexts: In multicast communications, this approach would be problematic, since groups of receivers with different requirements may exist, and adapting to the needs of one set of receivers would penalize others with contrasting requirements. As in other proposals appeared in the literature <ref> [9] </ref>, we achieve the desired effect by using the multicast router driving the bottleneck to modulate the sending rate for the subtree. This is possible thanks to the layered data organisation, which gives receivers the possibility to modulate the receive rate by joining/leaving layers.
Reference: [10] <institution> UCB/LBNL Network Simulator - ns version 2, </institution> <year> 1997, </year> <note> http://- www-mash.cs.berkeley.edu/ns/. </note>
Reference-contexts: The main, and novel, elements of the algorithm are the use of synchronisation points and the rules for changing subscription levels. IV. PERFORMANCE ANALYSIS In this Section we evaluate the performance of our congestion control algorithm by means of analytical techniques, simulations using the ns simulator <ref> [10] </ref>, and experiments on real networks using a prototype implementation of the algorithm. We have investigated the start up and steady state behaviour, adaptation to changing network conditions, fairness among protocol instances and with TCP instances.
Reference: [11] <author> T.Ott, J.Kemperman, M.Mhathis, </author> <title> The stationary distribution of ideal TCP congestion avoidance, </title> <type> Technical Report, </type> <month> Aug. </month> <year> 1996. </year>
Reference: [12] <author> L. </author> <title> Rizzo, Effective erasure codes for reliable computer communication protocols, </title> <address> CCR, V.27 N.2, </address> <month> April </month> <year> 1997, </year> <note> pp.24-36. Source code at http://www.iet.unipi.it/luigi/vdm.tgz </note> . 
Reference-contexts: We also assume the existence of an upper level session management protocol which possibly collects feedback to decide how long to continue transmissions and select which packets to send. The approach we follow is based on the use of FEC techniques (see [1], <ref> [12] </ref>). In principle, the problems of finding a suitable transmission order for the data, and achieving an effective recovery from losses, can be solved by passing all the k packets which make up the object to an encoder which can produce a large number n AE k of packets.
Reference: [13] <author> L.Rizzo, L.Vicisano, </author> <title> A Reliable Multicast data Distribution Protocol based on software FEC techniques, </title> <booktitle> in Proc. of The Fourth IEEE Workshop on the Architecture and Implementation of High Performance Communication Systems (HPCS'97), </booktitle> <address> Sani Beach, Chalkidiki, Greece June 23-25, </address> <year> 1997. </year>
Reference-contexts: This approach has already been used by the authors in the RMDP protocol <ref> [13] </ref>, a reliable multicast protocol which can be easily extended with the congestion control algorithm described in this paper. The use of a FEC encoding with high redundancy makes all packets equivalent for data reconstruction, and solves many problems at once.
Reference: [14] <author> W. Stevens., </author> <title> TCP Slow Start, Congestion Avoidance, Fast Retransmit, and Fast Recovery Algorithms., </title> <address> RFC2001, </address> <month> January </month> <year> 1997. </year>
Reference: [15] <author> N.Shacham, </author> <title> Multipoint communication by hierarchically encoded data, </title> <booktitle> Proc. of IEEE Infocom'92, </booktitle> <year> (1992), </year> <month> pp.2107-2114. </month>
Reference: [16] <author> D.Taubman, A.Zakhor, </author> <title> Multi-rate 3-D subband coding of video, </title> <journal> IEEE Trans. on Image Processing 3, </journal> <volume> 5 (Sept.1994), </volume> <month> pp.572-588. </month>
Reference: [17] <author> L.Vicisano, </author> <title> Notes on a cumulative layered organisation of data packets across multiple streams with variable-rate, </title> <address> http://www.cs.ucl.ac.uk/staff/L.Vicisano/- layers.ps </address> . 
Reference-contexts: This is usually feasible for multimedia data streams; for bulk data such as a file, suitable data arrangements which minimize replications of data are shown in <ref> [17] </ref>. In both cases, however, the problem of finding a suitable data organisation becomes more and more complex as the number of layers grows.
Reference: [18] <author> L.Vicisano, L.Rizzo, J.Crowcroft, </author> <title> TCP-like congestion control for layered multicast data transfer, </title> <note> Research Note RN/97/67, UCL, July 1997. http://www.cs.ucl.ac.uk/staff/L.Vicisano/rlc.ps </note> . 
Reference-contexts: The protocol we evaluated used exponentially distributed bandwidths and parameters P = 1; W = 8. Due to space limitations, we only present the main results of our analysis; more detailed information is present in <ref> [18] </ref>. A. Throughput versus loss rate The relation between throughput and loss rate can be derived using an approximate steady state model of the system, in which a receiver oscillates among two subscription levels, i and i + 1, which surround the correct bandwidth. <p> In the approximate model, the throughput depends on the fraction ff of time which is spent at level i + 1, which in turn depends on the loss rate experienced by the connection. In <ref> [18] </ref> we derive the following approximation for the throughput: T o 0 p p (2) where s is the packet size, o 0 is the inter-packet time at layer L 0 , W is the number of packets between two bursts, P is the distance (in bursts) between synchronisation points at <p> We spread N pairs of sender/receiver on the two paths with different delays (n 0 n 5 and n 4 n 3 ). Senders were started at random times over an interval of N=2 seconds, and receivers had been kept active for 300 seconds. The results (see <ref> [18] </ref> for more details) matched very closely the model. In particular, simulations using RED routers produced values very close to the curve representing Eq. 2, whereas simulations with tail-drop routers gave slightly higher throughputs, similar to Fig. 3 (which refers to experiments on a real network).
References-found: 18

