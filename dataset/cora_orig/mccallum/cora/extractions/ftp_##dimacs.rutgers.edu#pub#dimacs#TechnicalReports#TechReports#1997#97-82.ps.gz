URL: ftp://dimacs.rutgers.edu/pub/dimacs/TechnicalReports/TechReports/1997/97-82.ps.gz
Refering-URL: http://dimacs.rutgers.edu/TechnicalReports/1997.html
Root-URL: http://www.cs.rutgers.edu
Author: Endre Boros ; Tongu~c Unluyurt ; 
Keyword: Diagnosing Double Regular Systems  
Address: New Brunswick, New Jersey  New Brunswick, New Jersey  
Affiliation: RUTCOR Rutgers University  RUTCOR Rutgers University  
Note: by  2 This research was partially supported by the ONR (Grants N00014-92-J-1375 and N00014-92-J 4083), by DARPA (Contract Number N66001-97-C-8537). 3 Affiliated Graduate Student Member 4 This research was partially supported by the ONR (Grants N00014-92-J-1375 and N00014-92-J 4083), by DARPA (Contract Number N66001-97-C-8537). DIMACS is a cooperative project of Rutgers University, Princeton University, AT&T Bell Laboratories and Bellcore. DIMACS is an NSF Science and Technology Center, funded under contract STC-91-19999; and also receives support from the New Jersey Commission on Science and Technology.  
Abstract: DIMACS Technical Report 97-82 December 1997 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> L. Arseneau. </author> <title> Optimal testing strategies for s,t-series parallel systems. </title> <type> Master's thesis, </type> <institution> Combinatorics and Optimization, University of Waterloo, </institution> <year> 1996. </year>
Reference-contexts: can be.) Other problems of interest of this type, which has been studied and solved under restrictive assumptions, includes the case where the components are identical, i.e. the cost of inspecting any of the components is c and the probability that a component is working is p for all components, <ref> [1] </ref>. Another interesting case is when there are precedence constraints on the tests [16, 26]. Also the case when f is the structure function of a series-parallel network is of special interest [2].
Reference: [2] <author> Y. Ben-Dov. </author> <title> Optimal testing procedures for special structures of coherent systems. </title> <journal> Management Science, </journal> <volume> 27(12) </volume> <pages> 1410-1420, </pages> <year> 1981. </year>
Reference-contexts: This result generalizes earlier results for k-out-of-n systems. <ref> [2, 10] </ref> 2 Definitions and Main Results A system is composed of a set N = fu 1 ; u 2 ; :::u n g of n components, each of which can be in one of the two states, working or failing. <p> This problem has been considered in various contexts, and was solved for series, parallel and k-out-of-n systems, see <ref> [2, 10] </ref>. (A k-out-of-n system is functioning if at least k of its n components work. Series (parallel) systems are special cases corresponding to k = n (k = 1).) We shall generalize these results for a larger class of coherent systems. <p> Since k out of n systems are regular with respect to any permutation, this result generalizes results of <ref> [2, 10] </ref>. - 5 - 3 Notations and basic properties Given a positive Boolean function f : IB n 7! IB, we shall say that the variable x i is stronger than x j (i 6= j) with respect to f, and write x i -f x j , if for <p> Another interesting case is when there are precedence constraints on the tests [16, 26]. Also the case when f is the structure function of a series-parallel network is of special interest <ref> [2] </ref>.
Reference: [3] <author> P. Bertolazzi and A. Sassano. </author> <title> An O(mn) time algorithm for regular set-covering problems. </title> <journal> Theoretical Computer Science, </journal> <volume> 54 </volume> <pages> 237-247, </pages> <year> 1987. </year>
Reference-contexts: It is well-known, however that for regular functions the above dualization problem can be solved efficiently, see e.g. <ref> [3, 12, 23] </ref>.
Reference: [4] <author> J. C. Bioch and T. Ibaraki. </author> <title> Complexity of identification and dualization of positive boolean functions. </title> <journal> Information and Computation, </journal> <note> to appear, </note> <year> 1995. </year>
Reference-contexts: Secondly, there is no known efficient algorithm to obtain J (f ) from I (f) in time polynomial in these sizes, not even in cases when the size of J (f) is proportional to the size of I (f ), see e.g. <ref> [4, 14, 15, 21] </ref>. It is well-known, however that for regular functions the above dualization problem can be solved efficiently, see e.g. [3, 12, 23].
Reference: [5] <author> E. Boros. </author> <title> Dualization of aligned boolean functions. </title> <type> RUTCOR Research Report RRR 9, </type> <institution> Rutgers University, RUTCOR, </institution> <month> February </month> <year> 1994. </year>
Reference-contexts: It is well-known, however that for regular functions the above dualization problem can be solved efficiently, see e.g. [3, 12, 23]. In particular, it is shown in <ref> [5] </ref> that Proposition 2 If f is a regular function (with respect to a permutation ), then jJ (f)j (n + 1 log 2 jI (f )j)jI (f )j; (12) furthermore, J (f ) can be generated in O (n 2 jI (f)j) time.
Reference: [6] <author> E. Boros, P. L. Hammer, T. Ibaraki, and K. Kawakami. </author> <title> Identifying 2-monotonic positive boolean functions in polynomial time. </title> <editor> In W. L. Hsu and R. C. T. Lee, editors, </editor> <booktitle> ISA'91 Algorithms, number 557 in Springer Lecture Notes in Computer Science, </booktitle> <pages> pages 104-115, </pages> <address> Berlin-Heidelberg, 1991. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Let us mention finally that if a regular function is given by an oracle, then its prime implicants can be generated efficiently, see e.g. <ref> [6, 7] </ref>. - 7 - 4 Strategies and binary decision trees As we noted earlier, inspection strategies can naturally be represented as binary decision trees, i.e. as rooted trees, in which every node has two or zero successors.
Reference: [7] <author> E. Boros, P. L. Hammer, T. Ibaraki, and K. Kawakami. </author> <title> Polynomial time recognition of 2-monotonic positive boolean functions given by an oracle. </title> <journal> SIAM Journal on Computing, </journal> <volume> 26 </volume> <pages> 93-109, </pages> <year> 1997. </year>
Reference-contexts: Let us mention finally that if a regular function is given by an oracle, then its prime implicants can be generated efficiently, see e.g. <ref> [6, 7] </ref>. - 7 - 4 Strategies and binary decision trees As we noted earlier, inspection strategies can naturally be represented as binary decision trees, i.e. as rooted trees, in which every node has two or zero successors.
Reference: [8] <author> R. </author> <title> Butterworth. Some reliability fault testing models. </title> <journal> Operations Research, </journal> <volume> 20 </volume> <pages> 335-343, </pages> <year> 1972. </year> <month> - 17 </month> - 
Reference-contexts: As it was shown in <ref> [8] </ref> is an optimal order of - 4 - inspection for a series system, while is an optimal order for a parallel system. We consider the following algorithm for our problem.
Reference: [9] <author> C. L. Chang and J. R. Slage. </author> <title> An admissible and optimal algorithm for searching and-or graphs. </title> <journal> Artificial Intelligence, </journal> <volume> 2 </volume> <pages> 117-128, </pages> <year> 1971. </year>
Reference-contexts: sequencing and checking tasks by their priorities on a computer (see e.g. [16]), at a service station (see e.g. [13]), choosing the right order of categories in a quiz show (see e.g. [18]), finding optimal derivation strategies in knowledge bases (see e.g. [17]), best-value (or satisficing) search algorithms (see e.g. <ref> [9, 19, 20, 22, 24, 26] </ref>), and medical applications, where incoming patients have to be tested against the possibility of some rare but dangerous disease (see e.g. [25]).
Reference: [10] <author> Ming-Feng Chang, Weiping Shi, and W. Kent Fuchs. </author> <title> Optimal diagnosis procedures for k-out-of-n structures. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 39(4) </volume> <pages> 559-564, </pages> <year> 1990. </year>
Reference-contexts: This result generalizes earlier results for k-out-of-n systems. <ref> [2, 10] </ref> 2 Definitions and Main Results A system is composed of a set N = fu 1 ; u 2 ; :::u n g of n components, each of which can be in one of the two states, working or failing. <p> This problem has been considered in various contexts, and was solved for series, parallel and k-out-of-n systems, see <ref> [2, 10] </ref>. (A k-out-of-n system is functioning if at least k of its n components work. Series (parallel) systems are special cases corresponding to k = n (k = 1).) We shall generalize these results for a larger class of coherent systems. <p> Since k out of n systems are regular with respect to any permutation, this result generalizes results of <ref> [2, 10] </ref>. - 5 - 3 Notations and basic properties Given a positive Boolean function f : IB n 7! IB, we shall say that the variable x i is stronger than x j (i 6= j) with respect to f, and write x i -f x j , if for
Reference: [11] <author> L. A. Cox, Jr., Yuping Qiu, and W. Kuehner. </author> <title> Heuristic least-cost computation of discrete classification functions with uncertain argument values. </title> <journal> Annals of Operations Research, </journal> <volume> 21 </volume> <pages> 1-21, </pages> <year> 1989. </year>
Reference-contexts: Such problems arise in a wide area of applications, including telecommunication (testing connectivity of networks, paging cellular phone customers, etc. see e.g. <ref> [11] </ref>), testing machines in manufacturing, or sequencing and checking tasks by their priorities on a computer (see e.g. [16]), at a service station (see e.g. [13]), choosing the right order of categories in a quiz show (see e.g. [18]), finding optimal derivation strategies in knowledge bases (see e.g. [17]), best-value (or
Reference: [12] <author> Y. Crama. </author> <title> Dualization of regular boolean functions. </title> <journal> Discrete Applied Mathematics, </journal> <volume> 16 </volume> <pages> 79-85, </pages> <year> 1987. </year>
Reference-contexts: It is well-known, however that for regular functions the above dualization problem can be solved efficiently, see e.g. <ref> [3, 12, 23] </ref>.
Reference: [13] <author> S. O. Duffua and A. Raouf. </author> <title> An optimal sequence in multicharacteristics inspection. </title> <journal> Journal of Optimization Theory and Applications, </journal> <volume> 67(1) </volume> <pages> 79-87, </pages> <year> 1990. </year>
Reference-contexts: Such problems arise in a wide area of applications, including telecommunication (testing connectivity of networks, paging cellular phone customers, etc. see e.g. [11]), testing machines in manufacturing, or sequencing and checking tasks by their priorities on a computer (see e.g. [16]), at a service station (see e.g. <ref> [13] </ref>), choosing the right order of categories in a quiz show (see e.g. [18]), finding optimal derivation strategies in knowledge bases (see e.g. [17]), best-value (or satisficing) search algorithms (see e.g. [9, 19, 20, 22, 24, 26]), and medical applications, where incoming patients have to be tested against the possibility of
Reference: [14] <author> T. Eiter and B. Gottlob. </author> <title> Identifying the minimal transversals of a hypergraph and related problems. </title> <type> Technical Report CD-TR 16, </type> <institution> Technische Universitat Wien, Christial Doppler Labor fur Expertensysteme, </institution> <year> 1991. </year>
Reference-contexts: Secondly, there is no known efficient algorithm to obtain J (f ) from I (f) in time polynomial in these sizes, not even in cases when the size of J (f) is proportional to the size of I (f ), see e.g. <ref> [4, 14, 15, 21] </ref>. It is well-known, however that for regular functions the above dualization problem can be solved efficiently, see e.g. [3, 12, 23].
Reference: [15] <author> M. Fredman and L. Khachiyan. </author> <title> On the complexity of dualization of monotone disjunctive normal forms. </title> <type> Technical Report LCSR-TR 225, </type> <institution> Rutgers University, Department of Computer Science, </institution> <year> 1994. </year>
Reference-contexts: Secondly, there is no known efficient algorithm to obtain J (f ) from I (f) in time polynomial in these sizes, not even in cases when the size of J (f) is proportional to the size of I (f ), see e.g. <ref> [4, 14, 15, 21] </ref>. It is well-known, however that for regular functions the above dualization problem can be solved efficiently, see e.g. [3, 12, 23].
Reference: [16] <author> M. R. Garey. </author> <title> Optimal task sequencing with precedence constraints. </title> <journal> Discrete Mathematics, </journal> <volume> 4 </volume> <pages> 37-56, </pages> <year> 1973. </year>
Reference-contexts: Such problems arise in a wide area of applications, including telecommunication (testing connectivity of networks, paging cellular phone customers, etc. see e.g. [11]), testing machines in manufacturing, or sequencing and checking tasks by their priorities on a computer (see e.g. <ref> [16] </ref>), at a service station (see e.g. [13]), choosing the right order of categories in a quiz show (see e.g. [18]), finding optimal derivation strategies in knowledge bases (see e.g. [17]), best-value (or satisficing) search algorithms (see e.g. [9, 19, 20, 22, 24, 26]), and medical applications, where incoming patients have <p> Another interesting case is when there are precedence constraints on the tests <ref> [16, 26] </ref>. Also the case when f is the structure function of a series-parallel network is of special interest [2].
Reference: [17] <author> R. Greiner. </author> <title> Finding optimal derivation strategies in redundant knowledge bases. </title> <journal> Artificial Intelligence, </journal> <volume> 50 </volume> <pages> 95-115, </pages> <year> 1990. </year>
Reference-contexts: see e.g. [11]), testing machines in manufacturing, or sequencing and checking tasks by their priorities on a computer (see e.g. [16]), at a service station (see e.g. [13]), choosing the right order of categories in a quiz show (see e.g. [18]), finding optimal derivation strategies in knowledge bases (see e.g. <ref> [17] </ref>), best-value (or satisficing) search algorithms (see e.g. [9, 19, 20, 22, 24, 26]), and medical applications, where incoming patients have to be tested against the possibility of some rare but dangerous disease (see e.g. [25]).
Reference: [18] <author> J. B. Kadane. </author> <title> Quiz show problems. </title> <journal> J. Math. Anal. Appl., </journal> <volume> 27 </volume> <pages> 609-623, </pages> <year> 1969. </year>
Reference-contexts: telecommunication (testing connectivity of networks, paging cellular phone customers, etc. see e.g. [11]), testing machines in manufacturing, or sequencing and checking tasks by their priorities on a computer (see e.g. [16]), at a service station (see e.g. [13]), choosing the right order of categories in a quiz show (see e.g. <ref> [18] </ref>), finding optimal derivation strategies in knowledge bases (see e.g. [17]), best-value (or satisficing) search algorithms (see e.g. [9, 19, 20, 22, 24, 26]), and medical applications, where incoming patients have to be tested against the possibility of some rare but dangerous disease (see e.g. [25]).
Reference: [19] <author> R. Kowalski. </author> <title> Search strategies for theorem proving. </title> <editor> In B. Meltzer and D. Mitchie, editors, </editor> <booktitle> Machine Intelligence, </booktitle> <volume> number 5, </volume> <pages> pages 181-201, </pages> <address> Edinburgh, 1969. </address> <publisher> Edinburgh University Press. </publisher>
Reference-contexts: sequencing and checking tasks by their priorities on a computer (see e.g. [16]), at a service station (see e.g. [13]), choosing the right order of categories in a quiz show (see e.g. [18]), finding optimal derivation strategies in knowledge bases (see e.g. [17]), best-value (or satisficing) search algorithms (see e.g. <ref> [9, 19, 20, 22, 24, 26] </ref>), and medical applications, where incoming patients have to be tested against the possibility of some rare but dangerous disease (see e.g. [25]).
Reference: [20] <author> R. Kowalski. </author> <title> And-or graphs, theorem proving graphs and bi-directional search. </title> <editor> In B. Meltzer and D. Mitchie, editors, </editor> <booktitle> Machine Intelligence, </booktitle> <volume> number 7, </volume> <pages> pages 167-194, </pages> <address> Edinburgh, 1972. </address> <publisher> Edinburgh University Press. </publisher>
Reference-contexts: sequencing and checking tasks by their priorities on a computer (see e.g. [16]), at a service station (see e.g. [13]), choosing the right order of categories in a quiz show (see e.g. [18]), finding optimal derivation strategies in knowledge bases (see e.g. [17]), best-value (or satisficing) search algorithms (see e.g. <ref> [9, 19, 20, 22, 24, 26] </ref>), and medical applications, where incoming patients have to be tested against the possibility of some rare but dangerous disease (see e.g. [25]).
Reference: [21] <author> K. Makino and T. Ibaraki. </author> <title> The maximum latency and identification of positive boolean functions. </title> <editor> In D. Z. Du and X. S. Zhang, editors, </editor> <booktitle> ISAAC'94 Algorithms and Computation, number 834 in Lecture Notes in Computer Science, </booktitle> <pages> pages 324-332, </pages> <address> Berlin-Heidelberg, 1994. </address> <publisher> Springer Verlag. </publisher>
Reference-contexts: Secondly, there is no known efficient algorithm to obtain J (f ) from I (f) in time polynomial in these sizes, not even in cases when the size of J (f) is proportional to the size of I (f ), see e.g. <ref> [4, 14, 15, 21] </ref>. It is well-known, however that for regular functions the above dualization problem can be solved efficiently, see e.g. [3, 12, 23].
Reference: [22] <author> N. J. </author> <title> Nilson. </title> <booktitle> Problem-solving Methods in Artificial Intelligence. </booktitle> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1971. </year> <month> - 18 </month> - 
Reference-contexts: sequencing and checking tasks by their priorities on a computer (see e.g. [16]), at a service station (see e.g. [13]), choosing the right order of categories in a quiz show (see e.g. [18]), finding optimal derivation strategies in knowledge bases (see e.g. [17]), best-value (or satisficing) search algorithms (see e.g. <ref> [9, 19, 20, 22, 24, 26] </ref>), and medical applications, where incoming patients have to be tested against the possibility of some rare but dangerous disease (see e.g. [25]).
Reference: [23] <author> U. N. Peled and B. Simeone. </author> <title> An O(nm)-time algorithm for computing the dual of a regular boolean function. </title> <journal> Discrete Applied Mathematics, </journal> <volume> 49 </volume> <pages> 309-323, </pages> <year> 1994. </year>
Reference-contexts: It is well-known, however that for regular functions the above dualization problem can be solved efficiently, see e.g. <ref> [3, 12, 23] </ref>.
Reference: [24] <author> I. Pohl. </author> <title> Bi-dircetional search. </title> <editor> In B. Meltzer and D. Mitchie, editors, </editor> <booktitle> Machine Intelligence, </booktitle> <volume> number 6, </volume> <pages> pages 127-140, </pages> <address> Edinburgh, 1971. </address> <publisher> Edinburgh University Press. </publisher>
Reference-contexts: sequencing and checking tasks by their priorities on a computer (see e.g. [16]), at a service station (see e.g. [13]), choosing the right order of categories in a quiz show (see e.g. [18]), finding optimal derivation strategies in knowledge bases (see e.g. [17]), best-value (or satisficing) search algorithms (see e.g. <ref> [9, 19, 20, 22, 24, 26] </ref>), and medical applications, where incoming patients have to be tested against the possibility of some rare but dangerous disease (see e.g. [25]).
Reference: [25] <author> Yuping Qiu, L. A. Cox, Jr., and Lawrence Davis. </author> <title> Guess-and-verify heuristics for reducing uncertainities in expert classification systems. </title> <booktitle> In Proceedings of the Eighth Conference on Uncertainity in Artificial Intelligence, </booktitle> <year> 1992. </year>
Reference-contexts: a quiz show (see e.g. [18]), finding optimal derivation strategies in knowledge bases (see e.g. [17]), best-value (or satisficing) search algorithms (see e.g. [9, 19, 20, 22, 24, 26]), and medical applications, where incoming patients have to be tested against the possibility of some rare but dangerous disease (see e.g. <ref> [25] </ref>). In this paper we shall consider double regular systems, in which the dependence of the state on its components states satisfies certain conditions (for definitons see Section 3), and show that an optimal testing policy can determined and carried out in polynomial time for such systems.
Reference: [26] <author> H. A. Simon and J. B. Kadane. </author> <title> Optimal problem-solving search: All-ornone solutions. </title> <journal> Artificial Intelligence, </journal> <volume> 6 </volume> <pages> 235-247, </pages> <year> 1975. </year>
Reference-contexts: sequencing and checking tasks by their priorities on a computer (see e.g. [16]), at a service station (see e.g. [13]), choosing the right order of categories in a quiz show (see e.g. [18]), finding optimal derivation strategies in knowledge bases (see e.g. [17]), best-value (or satisficing) search algorithms (see e.g. <ref> [9, 19, 20, 22, 24, 26] </ref>), and medical applications, where incoming patients have to be tested against the possibility of some rare but dangerous disease (see e.g. [25]). <p> Another interesting case is when there are precedence constraints on the tests <ref> [16, 26] </ref>. Also the case when f is the structure function of a series-parallel network is of special interest [2].
Reference: [27] <author> R. O. Winder. </author> <title> Threshold Logic. </title> <type> Ph.d. dissertation, </type> <institution> Princeton University, Department of Mathematics, </institution> <year> 1962. </year>
Reference-contexts: It is well-known that this strength relation is a preorder on the set of variables for any positive Boolean function f, (see e.g. <ref> [27] </ref>). Let us call f regular with respect to a permutation , if its strength preorder induces , i.e. if x 1 -f x 2 -f -f x n . <p> It is well-known that a positive Boolean function f and its dual f d are simultaneously regular (or not) with respect to a given permutation , see e.g. <ref> [27] </ref>. For a given Boolean function f let us denote by T (f ) and F (f ) the sets of binary vectors at which f takes value 1 and 0, respectively.
References-found: 27

