URL: http://www.aber.ac.uk/~jjh/objects/UML/uml_summary.ps
Refering-URL: http://www.aber.ac.uk/~jjh/objects/index.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: Email: jjh@aber.ac.uk  
Title: An Introduction to the Unified Modeling Language  
Author: John Hunt 
Web: URL: http://www.aber.ac.uk/~jjh  
Address: Penglais, Aberystwyth, Dyfed, SY23 3DB  
Affiliation: Department of Computer Science, Univeristy of Wales, Aberystwyth,  
Abstract-found: 0
Intro-found: 1
Reference: [Booch et al 1996] <author> G. Booch, I. Jacobson and J. Rumbaugh, </author> <title> The Unified Modeling Language for Object Oriented Development , Documentation Set, Version 0.91 Addendum, UML Update, Rational Software Corporation, </title> <note> (available at URL http://www.rational.com/ot/uml.html), 1996. </note>
Reference-contexts: 1. Introduction The Unified Modeling Language (or UML for short) is part of a development being carried out to merge the concepts in the Booch, Objectory and OMT methods <ref> [Booch and Rumbaugh 1995, Booch et al 1996] </ref>. This effort has been termed the Unified Method. The method is still under development (and has taken a much lower profile) however the notation underlying this method is nearing completion. <p> For example, the authors of the UML have considered the modeling of concurrent, distributed systems as well as more traditional systems. Thus the UML contains elements suitable for modeling such systems. At present the UML is in draft form <ref> [Booch et al 1996] </ref> however it is being presented to the OMG (Object Management Group) in the hope that it will be accepted as a standard (this is an on going process and is part of the OMGs call for information on objectoriented methods). 2 The UML already has a number
Reference: [Booch and Rumbaugh 1995] <author> Grady Booch and James Rumbaugh , The Unified Method Documentation Set , Version 0.8, </author> <title> Rational Software Corporation, </title> <note> (available on the web http://www.rational.com/ot/uml.html), 1995. </note>
Reference-contexts: 1. Introduction The Unified Modeling Language (or UML for short) is part of a development being carried out to merge the concepts in the Booch, Objectory and OMT methods <ref> [Booch and Rumbaugh 1995, Booch et al 1996] </ref>. This effort has been termed the Unified Method. The method is still under development (and has taken a much lower profile) however the notation underlying this method is nearing completion.
Reference: [Booch 1994] <author> Grady Booch, </author> <title> ObjectOriented Analysis and Design with Applications , 2nd Edition, </title> <publisher> Benjamin Cummings, </publisher> <address> Redwood City, California, </address> <year> (1994). </year>
Reference-contexts: For example, Microsoft Corporation, Hewlett Packard, Oracle, Texas Instruments have all endorsed the UML. The UML is a third generation objectoriented modeling language [Rational 1996] which adapts and extends the published notations used in the works of Booch, Rumbaugh and Jacobson <ref> [Booch 1994, Rumbaugh et al 1991, Jacobson 1992] </ref> as well as being influenced by many others (see Figure 1). It is intended that the UML will form a single, common, widely usable modeling language for a range of object oriented design methods (including Booch, Objectory and OMT).
Reference: [Harel et al 1987] <author> D. Harel, A. Pnueli, J. P. Schmidt and R. Sherman, </author> <year> 1987. </year> <title> On the formal semantics of Statecharts, </title> <booktitle> Proc. 2nd IEEE Sump. on Logic in Computer Science , pp 54-64. </booktitle>
Reference-contexts: Note that the class diagrams also encompass the object diagrams. Therefore in this book we will refer to them as the object model following the name used in OMT. State machine diagrams . These, like those in OMT, are based on the statecharts formalism of Harel <ref> [Harel et al 1987, Harel 1988] </ref>. They capture the dynamic behaviour of the system. Sequence diagrams . Sequence diagrams (formerly known as message-trace diagrams in version 0.8 of the Unified method draft) deal with the time ordered sequence of transactions between objects. 3 Collaboration diagrams . <p> That is, state diagrams relate events to state transitions and states. The transitions change the state of the system and are triggered by events. The notation used to document state diagrams is based that developed by Harel <ref> [Harel et al 1987, Harel 1988] </ref> are termed Statecharts. Statecharts are a variant of the finitestate machine formalism which reduces the apparent complexity of a graphical representation of a finitestate machine.
Reference: [Harel 1988] <author> D. Harel, </author> <title> On visual formalisms, </title> <booktitle> 1988. Coms of the ACM , Vol 31, </booktitle> <volume> No. 5., </volume> <pages> pp 514-530. </pages>
Reference-contexts: Note that the class diagrams also encompass the object diagrams. Therefore in this book we will refer to them as the object model following the name used in OMT. State machine diagrams . These, like those in OMT, are based on the statecharts formalism of Harel <ref> [Harel et al 1987, Harel 1988] </ref>. They capture the dynamic behaviour of the system. Sequence diagrams . Sequence diagrams (formerly known as message-trace diagrams in version 0.8 of the Unified method draft) deal with the time ordered sequence of transactions between objects. 3 Collaboration diagrams . <p> That is, state diagrams relate events to state transitions and states. The transitions change the state of the system and are triggered by events. The notation used to document state diagrams is based that developed by Harel <ref> [Harel et al 1987, Harel 1988] </ref> are termed Statecharts. Statecharts are a variant of the finitestate machine formalism which reduces the apparent complexity of a graphical representation of a finitestate machine.
Reference: [Jacobson 1992] <author> I. </author> <title> Jacobson, </title> <publisher> ObjectOriented Software Engineering , Addison-Wesley, </publisher> <address> MA, </address> <year> 1992. </year>
Reference-contexts: For example, Microsoft Corporation, Hewlett Packard, Oracle, Texas Instruments have all endorsed the UML. The UML is a third generation objectoriented modeling language [Rational 1996] which adapts and extends the published notations used in the works of Booch, Rumbaugh and Jacobson <ref> [Booch 1994, Rumbaugh et al 1991, Jacobson 1992] </ref> as well as being influenced by many others (see Figure 1). It is intended that the UML will form a single, common, widely usable modeling language for a range of object oriented design methods (including Booch, Objectory and OMT). <p> These diagrams are essentially the same as those found in the Objectory method <ref> [Jacobson 1992] </ref> and organize the use cases that encompass a systems behaviour. Class diagrams . These are derived form the Booch and OMT methods and express the static structure of the system. For example the part of the is a relationships between classes and objects.
Reference: [Rational 1996] <institution> Unified Modeling Language for Real-Time Systems Design , Rational Software Corporation, </institution> <note> (available at http://www.rational.com/ot/uml.html), 1996. </note>
Reference-contexts: This notation has now become the focus of current work and is receiving a great deal of interest. For example, Microsoft Corporation, Hewlett Packard, Oracle, Texas Instruments have all endorsed the UML. The UML is a third generation objectoriented modeling language <ref> [Rational 1996] </ref> which adapts and extends the published notations used in the works of Booch, Rumbaugh and Jacobson [Booch 1994, Rumbaugh et al 1991, Jacobson 1992] as well as being influenced by many others (see Figure 1).
Reference: [Rumbaugh et al 1991] <author> J. Rumbaugh, M. Blaha, W. Permerlani, F. Eddi and W. Lorensen, </author> <title> Object-oriented modeling and design , Prentice Hall, </title> <year> 1991. </year>
Reference-contexts: For example, Microsoft Corporation, Hewlett Packard, Oracle, Texas Instruments have all endorsed the UML. The UML is a third generation objectoriented modeling language [Rational 1996] which adapts and extends the published notations used in the works of Booch, Rumbaugh and Jacobson <ref> [Booch 1994, Rumbaugh et al 1991, Jacobson 1992] </ref> as well as being influenced by many others (see Figure 1). It is intended that the UML will form a single, common, widely usable modeling language for a range of object oriented design methods (including Booch, Objectory and OMT).
References-found: 8

