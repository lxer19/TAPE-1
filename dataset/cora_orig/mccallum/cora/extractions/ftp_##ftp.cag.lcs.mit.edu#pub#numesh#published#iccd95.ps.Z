URL: ftp://ftp.cag.lcs.mit.edu/pub/numesh/published/iccd95.ps.Z
Refering-URL: http://www.cag.lcs.mit.edu/numesh/rational/papers/iccd95abs.html
Root-URL: 
Title: Rational Clocking  
Author: Luis F. G. Sarmenta Gill A. Pratt Stephen A. Ward 
Address: Cambridge, MA 02139  
Affiliation: Laboratory for Computer Science Massachusetts Institute of Technology  
Abstract: Communication between independently-clocked digital subsystems typically involves a finite probability of synchronization failure whose minimization introduces delays and consequent performance costs. This paper explores a technique that eliminates both the inherent unreliability of such communication and the performance overhead it implies. Our approach maintains a known phase relationship between clocks whose frequencies are related by a rational factor, and exploits the predictability of their relative phases to algorithmically time communications without run-time arbitration contests. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T. J. Chaney and C. E. Molnar. </author> <title> Anomalous Behavior of Synchronizer and Arbiter Circuits. </title> <journal> IEEE Transactions on Computers, </journal> <month> April </month> <year> 1973. </year>
Reference-contexts: Asynchronous solutions to this problem, which assume the systems' clocks to be completely independent, are typically inefficient because they must allow for sufficiently long synchronization delays to attain acceptable levels of reliability <ref> [1, 2, 3, 4] </ref>. Synchronous solutions are more efficient and reliable, but have traditionally lacked flexibility because they require the clock frequencies to be related by integer factors [6, 7].
Reference: [2] <author> W. Fleischhammer and O. Dortok. </author> <title> The Anomalous Behavior of Flip-Flops in Synchronizer Circuits. </title> <journal> IEEE Transactions on Computers, </journal> <month> March </month> <year> 1979. </year>
Reference-contexts: Asynchronous solutions to this problem, which assume the systems' clocks to be completely independent, are typically inefficient because they must allow for sufficiently long synchronization delays to attain acceptable levels of reliability <ref> [1, 2, 3, 4] </ref>. Synchronous solutions are more efficient and reliable, but have traditionally lacked flexibility because they require the clock frequencies to be related by integer factors [6, 7].
Reference: [3] <author> M. Pechoucek. </author> <title> Anomalous Response Times of Input Synchronizers. </title> <journal> IEEE Transactions on Computers, </journal> <month> Feb. </month> <year> 1976. </year>
Reference-contexts: Asynchronous solutions to this problem, which assume the systems' clocks to be completely independent, are typically inefficient because they must allow for sufficiently long synchronization delays to attain acceptable levels of reliability <ref> [1, 2, 3, 4] </ref>. Synchronous solutions are more efficient and reliable, but have traditionally lacked flexibility because they require the clock frequencies to be related by integer factors [6, 7].
Reference: [4] <author> G. R. Couranz and D. F. Wann. </author> <title> Theoretical and Experimental Behavior of Synchronizers Operating in the Metastable Region. </title> <journal> IEEE Transactions on Computers, </journal> <month> June </month> <year> 1975. </year>
Reference-contexts: Asynchronous solutions to this problem, which assume the systems' clocks to be completely independent, are typically inefficient because they must allow for sufficiently long synchronization delays to attain acceptable levels of reliability <ref> [1, 2, 3, 4] </ref>. Synchronous solutions are more efficient and reliable, but have traditionally lacked flexibility because they require the clock frequencies to be related by integer factors [6, 7].
Reference: [5] <author> W. K. Stewart and S. A. Ward. </author> <title> A Solution to a Special Case of the Synchronization Problem. </title> <journal> IEEE Transactions on Computers, </journal> <month> Jan. </month> <year> 1988. </year>
Reference: [6] <author> M. Afghahi and C. Svensson. </author> <title> Peformance of Synchronous and Asynchronous Schemes for VLSI Systems. </title> <journal> IEEE Transactions on Computers, </journal> <month> July </month> <year> 1992. </year>
Reference-contexts: Synchronous solutions are more efficient and reliable, but have traditionally lacked flexibility because they require the clock frequencies to be related by integer factors <ref> [6, 7] </ref>. In this paper, we present an efficient and flexible solution, called rational clocking , that allows data to be transferred reliably and efficiently between two systems whose clock frequencies are related by the ratio of two small integers.
Reference: [7] <author> F. Anceau. </author> <title> A Synchronous Approach for Clocking VLSI Systems. </title> <journal> IEEE Journal of Solid-State Circuits, </journal> <month> Feb. </month> <year> 1982. </year>
Reference-contexts: Synchronous solutions are more efficient and reliable, but have traditionally lacked flexibility because they require the clock frequencies to be related by integer factors <ref> [6, 7] </ref>. In this paper, we present an efficient and flexible solution, called rational clocking , that allows data to be transferred reliably and efficiently between two systems whose clock frequencies are related by the ratio of two small integers.
Reference: [8] <author> D. F. Rogers. </author> <title> Procedural Elements for Computer Graphics. </title> <publisher> McGraw-Hill Book Company, </publisher> <year> 1985. </year>
Reference-contexts: This makes it possible to keep track of their positions on-the-fly using counters. This section shows how this is done for double-buffered communication. 4.1 The Algorithm The algorithm used for run-time scheduling is a graphical algorithm similar to Bresenham's algorithm for drawing lines on raster displays <ref> [8] </ref>. It works with a schedule plot such as that in Figure 8, which shows the algorithm being used for scheduling receptions on system n in the double-buffered slower transmitter case shown in Figure 5.
Reference: [9] <author> Luis F. G. Sarmenta. </author> <title> Synchronous Communication Techniques for Rationally Clocked Systems. </title> <type> Master's Thesis, </type> <institution> Department of Electrical Engineering and Computer Science, MIT. </institution> <month> May </month> <year> 1995. </year>
Reference-contexts: Used alone or with programmable lookup tables, this technique makes it possible to design a versatile "off-the-shelf" rational clocking chip, or to integrate the rational clocking hardware directly into target applications. Other variations of the rational clocking technique exist and are discussed in <ref> [9] </ref>.
References-found: 9

