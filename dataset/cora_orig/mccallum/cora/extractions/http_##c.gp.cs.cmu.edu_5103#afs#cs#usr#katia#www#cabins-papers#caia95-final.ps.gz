URL: http://c.gp.cs.cmu.edu:5103/afs/cs/usr/katia/www/cabins-papers/caia95-final.ps.gz
Refering-URL: http://c.gp.cs.cmu.edu:5103/afs/cs/usr/katia/www/cabins.html
Root-URL: http://www.cs.cmu.edu
Email: katia+@cs.cmu.edu, zeng+@cs.cmu.edu miyasita@mcec.ped.mei.co.jp  
Title: Using Case-Based Reasoning to Acquire User Scheduling Preferences that Change over Time  
Author: Katia Sycara, Dajun Zeng Kazuo Miyashita 
Address: Pittsburgh, PA 15213, U.S.A. Kadoma, Osaka 571, Japan  
Affiliation: The Robotics Institute Production Engineering Devision Carnegie Mellon University Matsushita Electric Industrial Co.  
Abstract: Production/Manufacturing scheduling typically involves the acquisition of user optimization preferences. The ill-structuredness of both the problem space and the desired objectives make practical scheduling problems difficult to formalize and costly to solve, especially when problem configurations and user optimization preferences change over time. This paper advocates an incremental revision framework for improving schedule quality and incorporating user dynamically changing preferences through Case-Based Reasoning. Our implemented system, called CABINS, records situation-dependent tradeoffs and consequences that result from schedule revision to guide schedule improvement. The preliminary experimental results show that CABINS is able to effectively capture both user static and dynamic preferences which are not known to the system and only exist implicitly in a extensional manner in the case base. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> K.R. Baker. </author> <title> Introduction to Sequencing and Scheduling. </title> <publisher> Wiley, </publisher> <year> 1974. </year>
Reference-contexts: 1 Introduction Scheduling deals with allocation of a limited set of resources to a number of activities <ref> [1] </ref>. One of the most difficult scheduling problem classes is job shop scheduling. In job shop scheduling, each task (interchangeably called an order or a job) consists of a set of activities to be scheduled according to a preset partial ordering which reflects precedence constraints. <p> The subscript j takes the value <ref> [1; 2; 3; 4; 5] </ref> to refer to one of the five subsets of the problems (each of them contains 5 problem instances), respectively.
Reference: [2] <author> Ray Bareiss. </author> <title> Exemplar-based knowledge acquisition : a unified approach to concept regression, classification, and learning. </title> <publisher> Academic Press, </publisher> <address> New York, NY, </address> <year> 1989. </year>
Reference-contexts: Contextual information is potentially useful to the user to understand the system's reasoning. CBR does keep all the contextual information. CABINS is different from other case-based learn ing systems. Current case-based knowledge acquisi-tion systems, (e.g., <ref> [2] </ref>) require causal explanations from an expert teacher to acquire domain knowledge. In our approach neither the user nor the program are assumed to possess causal domain knowledge. As a matter of fact, in ill-structured domains such as job shop scheduling, it is impossible to have causal knowledge. <p> The subscript j takes the value <ref> [1; 2; 3; 4; 5] </ref> to refer to one of the five subsets of the problems (each of them contains 5 problem instances), respectively.
Reference: [3] <author> J.M. Bradshaw and J.H. Boose. </author> <title> Decision analysis techniques for knowledge acquisition: Combining information and preferences using aquinea and axotl. </title> <journal> International Journal of Man-Machine Studies, </journal> <volume> 32 </volume> <pages> 121-186, </pages> <year> 1990. </year>
Reference-contexts: user's optimization preferences are not explicitly represented as case features or in terms of a cost function but are implicitly and extensionally represented in the case base. 3 User Optimization Preferences User preferences influence decision-making in many ways and can be reflected in knowledge-based systems in several levels of abstraction <ref> [3] </ref>. In particular, we identify three types of preferences: objectives, constraints and procedurals. Objectives are related to the positive and negative consequences of the alternatives that a decision maker wishes to maximize or minimize. In decisions with multiple objectives, usually there are trade-offs between the objectives. <p> The subscript j takes the value <ref> [1; 2; 3; 4; 5] </ref> to refer to one of the five subsets of the problems (each of them contains 5 problem instances), respectively.
Reference: [4] <author> A.R. Chaturvedi. </author> <title> Acquiring Implicit Knowledge in a Complex Domain. Expert Systems with Applications, </title> <year> 1992. </year>
Reference-contexts: CBR is the problem solving paradigm where previous experience are used to guide problem solving [8, 24, 9]. In CBR learning is an integral part of case based problem solving. Case-based reasoning has been successful in dealing with exceptional data [22], acquiring user knowledge in complex domains <ref> [4, 13] </ref>, and expending less effort in knowledge acquisition compared with knowledge acquisition for rule-based systems [23, 11]. CBR presents the following advantages as an appropriate framework for knowledge acquisition. <p> The subscript j takes the value <ref> [1; 2; 3; 4; 5] </ref> to refer to one of the five subsets of the problems (each of them contains 5 problem instances), respectively.
Reference: [5] <author> Belur V. Dasarathy, </author> <title> editor. Nearest Neighbor (NN) Norms: NN Pattern Classification Techniques. </title> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <address> CA, </address> <year> 1990. </year>
Reference-contexts: As a case retrieval mechanism, CABINS uses a variation of k-Nearest Neighbor method (k-NN) <ref> [5] </ref>. For the detailed formula for similarity calculation, see [17]. 5 Experimental Evaluation of Captur ing Changing Preferences Extensive experiments have been conducted with CABINS [16, 26, 25]. <p> The subscript j takes the value <ref> [1; 2; 3; 4; 5] </ref> to refer to one of the five subsets of the problems (each of them contains 5 problem instances), respectively.
Reference: [6] <author> Lisa Dent, Jesus Boticario, John McDermott, Tom Mitchell, and David Zabowski. </author> <title> A personal learning apprentice. </title> <booktitle> In Proceedings of the Tenth National Conference on Artificial Intelligence. AAAI, </booktitle> <year> 1992. </year>
Reference-contexts: This problem arises in a variety of application domains, such as office electronic secretary <ref> [6] </ref>, financial portfolio selection [10], digital circuit design [12] and production scheduling domain [19]. Automating the acquisition of user preferences is important in practice for the following reasons. First, for many ill-structured domains such as production scheduling, the overall objectives of the system typically are not explicitly available. <p> Several learning paradigms have been proposed to deal with capturing preferences. ID3 and Neural-Net-based learning algorithms have been successfully applied to capture user's preferences in mundane meeting scheduling domain <ref> [6] </ref>. Some general extensions of explanation-based learning have also reported [12, 14] to be effective for digit circuit design task. <p> an exact problem solving paradigm (it performs partial matching), and since it is difficult to determine such weights, we believe that reasoning based on a rolling time window of data, i.e., keeping an approximately constant number of the most recent cases is an effective way of reflecting user changing preferences <ref> [6, 15] </ref>. In order to make the idea of time window operational from the implementation point of view, the time window size must be determined. There exist some obvious trade-offs in terms of the window sizing.
Reference: [7] <author> Simon French. </author> <title> Sequencing and Scheduling: An Introduction to the Mathematics of the Job-Shop. </title> <publisher> Ellis Horwood, </publisher> <address> New York, NY, </address> <year> 1982. </year>
Reference-contexts: The scheduling problem is difficult to solve for a number of reasons. First, it is an NP-complete problem <ref> [7] </ref>. Second, scheduling objectives are typically not well-defined. For example, the user might want to minimize both weighted tardiness and work-in-process to meet due dates and to diminish the inventory cost.
Reference: [8] <author> Kristian J. Hammond. </author> <title> Case-Based Planning : Viewing Planning as a Memory Task. </title> <publisher> Academic Press, </publisher> <address> New York, NY, </address> <year> 1989. </year>
Reference-contexts: Instead of using ID3-like inductive learning algorithms or neural-net based approaches, we chose Case Based Reasoning (CBR) paradigm to capture user optimization preferences that change over time in job shop scheduling domain. CBR is the problem solving paradigm where previous experience are used to guide problem solving <ref> [8, 24, 9] </ref>. In CBR learning is an integral part of case based problem solving. Case-based reasoning has been successful in dealing with exceptional data [22], acquiring user knowledge in complex domains [4, 13], and expending less effort in knowledge acquisition compared with knowledge acquisition for rule-based systems [23, 11].
Reference: [9] <author> J. Kolodner. </author> <title> Case-Based Reasoning. </title> <publisher> Morgan Kaufmann Publishers, Inc., </publisher> <year> 1994. </year>
Reference-contexts: Instead of using ID3-like inductive learning algorithms or neural-net based approaches, we chose Case Based Reasoning (CBR) paradigm to capture user optimization preferences that change over time in job shop scheduling domain. CBR is the problem solving paradigm where previous experience are used to guide problem solving <ref> [8, 24, 9] </ref>. In CBR learning is an integral part of case based problem solving. Case-based reasoning has been successful in dealing with exceptional data [22], acquiring user knowledge in complex domains [4, 13], and expending less effort in knowledge acquisition compared with knowledge acquisition for rule-based systems [23, 11].
Reference: [10] <author> J.K. Lee, H.S. Kim, and S.C. Chu. </author> <title> Intelligent stock portfolio management system. </title> <journal> Expert Systems, </journal> <volume> 6(2) </volume> <pages> 74-87, </pages> <month> April </month> <year> 1989. </year>
Reference-contexts: This problem arises in a variety of application domains, such as office electronic secretary [6], financial portfolio selection <ref> [10] </ref>, digital circuit design [12] and production scheduling domain [19]. Automating the acquisition of user preferences is important in practice for the following reasons. First, for many ill-structured domains such as production scheduling, the overall objectives of the system typically are not explicitly available.
Reference: [11] <author> L.M. Lewis, D.V. Minior, and S.J. Brown. </author> <title> A Case-Based Reasoning Solution to the Problem of Redundant Engineering in Large Scale Manufacturing. </title> <journal> International Journal of Expert Systems, </journal> <volume> 4(2) </volume> <pages> 189-201, </pages> <year> 1991. </year>
Reference-contexts: In CBR learning is an integral part of case based problem solving. Case-based reasoning has been successful in dealing with exceptional data [22], acquiring user knowledge in complex domains [4, 13], and expending less effort in knowledge acquisition compared with knowledge acquisition for rule-based systems <ref> [23, 11] </ref>. CBR presents the following advantages as an appropriate framework for knowledge acquisition. First, rule induction require great computational effort to update the rule base and generate the new rules as well as to maintain consistency between acquired rules.
Reference: [12] <author> S. Mahadevan, T.M. Mitchell, J. Mostow, L. Steinberg, and P.V. Tadepalli. </author> <title> An apprentice-based approach to knowledge acquisition. </title> <journal> Artificial Intelligence, </journal> <volume> 64 </volume> <pages> 1-52, </pages> <year> 1993. </year>
Reference-contexts: This problem arises in a variety of application domains, such as office electronic secretary [6], financial portfolio selection [10], digital circuit design <ref> [12] </ref> and production scheduling domain [19]. Automating the acquisition of user preferences is important in practice for the following reasons. First, for many ill-structured domains such as production scheduling, the overall objectives of the system typically are not explicitly available. <p> Several learning paradigms have been proposed to deal with capturing preferences. ID3 and Neural-Net-based learning algorithms have been successfully applied to capture user's preferences in mundane meeting scheduling domain [6]. Some general extensions of explanation-based learning have also reported <ref> [12, 14] </ref> to be effective for digit circuit design task. Instead of using ID3-like inductive learning algorithms or neural-net based approaches, we chose Case Based Reasoning (CBR) paradigm to capture user optimization preferences that change over time in job shop scheduling domain.
Reference: [13] <author> K. Mckay, J. Buzacott, and F. Safayeni. </author> <title> The scheduler's knowledge of uncertainty: The missing link. </title> <booktitle> In Proceedings of IFIP Working Conference on Knowledge Based Production Management Systems, Galway, </booktitle> <address> Ireland, </address> <year> 1988. </year>
Reference-contexts: CBR is the problem solving paradigm where previous experience are used to guide problem solving [8, 24, 9]. In CBR learning is an integral part of case based problem solving. Case-based reasoning has been successful in dealing with exceptional data [22], acquiring user knowledge in complex domains <ref> [4, 13] </ref>, and expending less effort in knowledge acquisition compared with knowledge acquisition for rule-based systems [23, 11]. CBR presents the following advantages as an appropriate framework for knowledge acquisition.
Reference: [14] <author> T. M. Mitchell, S. Mahadevan, and L. Steinberg. </author> <title> Leap:a learning apprentice for vlsi design. </title> <booktitle> In Proceeding of the Ninth International Joint Conference on Aritificial Intelligence, </booktitle> <address> Los Angeles, CA, </address> <year> 1985. </year> <pages> IJCAI. </pages>
Reference-contexts: Several learning paradigms have been proposed to deal with capturing preferences. ID3 and Neural-Net-based learning algorithms have been successfully applied to capture user's preferences in mundane meeting scheduling domain [6]. Some general extensions of explanation-based learning have also reported <ref> [12, 14] </ref> to be effective for digit circuit design task. Instead of using ID3-like inductive learning algorithms or neural-net based approaches, we chose Case Based Reasoning (CBR) paradigm to capture user optimization preferences that change over time in job shop scheduling domain.
Reference: [15] <author> Tom Mitchell, Rich Caruana, Dayne Freitag, John McDermott, and David Zabowski. </author> <title> Experience with a learning personal assistant. </title> <journal> Communications of the ACM, </journal> <volume> 37(7), </volume> <month> July </month> <year> 1994. </year>
Reference-contexts: an exact problem solving paradigm (it performs partial matching), and since it is difficult to determine such weights, we believe that reasoning based on a rolling time window of data, i.e., keeping an approximately constant number of the most recent cases is an effective way of reflecting user changing preferences <ref> [6, 15] </ref>. In order to make the idea of time window operational from the implementation point of view, the time window size must be determined. There exist some obvious trade-offs in terms of the window sizing.
Reference: [16] <author> Kazuo Miyashita and Katia Sycara. </author> <title> Learning control knowledge through cases in schedule op-timiztion problems. </title> <booktitle> In CAIA. IEEE, </booktitle> <year> 1994. </year>
Reference-contexts: We have implemented our Case-Based iterative revision approach in the CABINS system to demonstrate the capability of acquiring user context-dependent and dynamically changing optimization preferences in job shop scheduling domains. The work reported here extends previous work on the CABINS system <ref> [26, 16, 17] </ref>. It tests the hypothesis that our CBR-based incremental revision methodology shows good potential for capturing user preferences in ill-structured domains that change over time and reuse them as control knowledge for solution improvement. <p> As a case retrieval mechanism, CABINS uses a variation of k-Nearest Neighbor method (k-NN) [5]. For the detailed formula for similarity calculation, see [17]. 5 Experimental Evaluation of Captur ing Changing Preferences Extensive experiments have been conducted with CABINS <ref> [16, 26, 25] </ref>.
Reference: [17] <author> Kazuo Miyashita and Katia Sycara. Cabins: </author> <title> A framework of knowledge acquisition and iterative revision for schedule improvement and reactive repair. </title> <journal> Artificial Intelligence, </journal> <note> To appear, </note> <year> 1995. </year>
Reference-contexts: We have implemented our Case-Based iterative revision approach in the CABINS system to demonstrate the capability of acquiring user context-dependent and dynamically changing optimization preferences in job shop scheduling domains. The work reported here extends previous work on the CABINS system <ref> [26, 16, 17] </ref>. It tests the hypothesis that our CBR-based incremental revision methodology shows good potential for capturing user preferences in ill-structured domains that change over time and reuse them as control knowledge for solution improvement. <p> Associated with the focal activity are local features that we have identified and which potentially are predictive of the effectiveness of applying a particular repair tactic. For details on case features, refer to <ref> [17] </ref>. In order to bound the ripple effects of repair, a repair tactic is used only within a bounded time horizon, the time interval between the end of the activity preceding the focal activity in the same focal job and the end of the focal activity. <p> As a case retrieval mechanism, CABINS uses a variation of k-Nearest Neighbor method (k-NN) [5]. For the detailed formula for similarity calculation, see <ref> [17] </ref>. 5 Experimental Evaluation of Captur ing Changing Preferences Extensive experiments have been conducted with CABINS [16, 26, 25].
Reference: [18] <author> D. S. Prerau. </author> <title> Developing and Managing Expert Systems: Proven Techniques for Business and Industry. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1990. </year>
Reference-contexts: Second, expert system approaches, while having the potential to capture context-dependent tradeoffs in rules, require considerable knowledge acquisition effort and traditionally have not dealt with optimization concerns <ref> [18] </ref>. Third, and equally important consideration is the fact that the problem solving environment and the preferences of the user could be changing over time. Therefore, approaches that capture preferences statically or require expensive knowledge-base updating are extremely limiting.
Reference: [19] <author> M. Prietula, P.S. Ow, B. Huguenard, and S. Vic-inanza. </author> <title> A critiquing model of flexible constraint evaluation for a scheduler's workbench. </title> <booktitle> In The First International Conference on Industrial and Engineering Applications of Artificial Intelligence and Expert Systems, </booktitle> <month> June </month> <year> 1988. </year>
Reference-contexts: This problem arises in a variety of application domains, such as office electronic secretary [6], financial portfolio selection [10], digital circuit design [12] and production scheduling domain <ref> [19] </ref>. Automating the acquisition of user preferences is important in practice for the following reasons. First, for many ill-structured domains such as production scheduling, the overall objectives of the system typically are not explicitly available.
Reference: [20] <author> C.R. Reeves, </author> <title> editor. Modern Heuristic Techniques for Combinatorial Problems. </title> <publisher> Halsted Press, </publisher> <address> New York, </address> <year> 1993. </year>
Reference-contexts: We believe that our approach will be effective in real-world optimization tasks for a variety of reasons. First, traditional search methods, both Operations Research-based and AI-based, that are used in combinatorial optimization, need explicit representation of the optimization objectives that are defined in advance of problem solving <ref> [20] </ref>. In many practical problems, such as scheduling and design, optimization criteria often involve context- and user-dependent tradeoffs which are impossible to represent as an explicit and static optimization function. For example, a user's preferences might depend on partial results obtained during problem solving.
Reference: [21] <author> E. Rich and K. Knight. </author> <booktitle> Artificial Intelligence. </booktitle> <publisher> McGraw-Hill, Inc., </publisher> <year> 1991. </year>
Reference-contexts: The understandability problem is much worse for neural-net based systems <ref> [21] </ref>. On the other hand, cases are understandable since they embody concrete experiences of user interactions. Third, after rule induction, contextual information associated with the underlying example instances is thrown away. Contextual information is potentially useful to the user to understand the system's reasoning.
Reference: [22] <author> David Ruby and Dennis Kibler. </author> <title> Learning Episodes for Optimization. </title> <booktitle> In Machine Learning : proceedings of the Ninth International Workshop (ML92), </booktitle> <pages> pages 379-384, </pages> <year> 1992. </year>
Reference-contexts: CBR is the problem solving paradigm where previous experience are used to guide problem solving [8, 24, 9]. In CBR learning is an integral part of case based problem solving. Case-based reasoning has been successful in dealing with exceptional data <ref> [22] </ref>, acquiring user knowledge in complex domains [4, 13], and expending less effort in knowledge acquisition compared with knowledge acquisition for rule-based systems [23, 11]. CBR presents the following advantages as an appropriate framework for knowledge acquisition.
Reference: [23] <author> E. Simoudis and J.S. Miller. </author> <title> The Application of CBR to Help Desk Applications. </title> <booktitle> In Proceedings: Case-Based Reasoning Workshop, </booktitle> <pages> pages 25-36, </pages> <year> 1991. </year>
Reference-contexts: In CBR learning is an integral part of case based problem solving. Case-based reasoning has been successful in dealing with exceptional data [22], acquiring user knowledge in complex domains [4, 13], and expending less effort in knowledge acquisition compared with knowledge acquisition for rule-based systems <ref> [23, 11] </ref>. CBR presents the following advantages as an appropriate framework for knowledge acquisition. First, rule induction require great computational effort to update the rule base and generate the new rules as well as to maintain consistency between acquired rules.
Reference: [24] <author> K. Sycara. </author> <title> Resolving Adversarial Conflicts: An Approach Integrating Case-Based and Analytic Methods. </title> <type> PhD thesis, </type> <institution> School of Information and Computer Science Georgia Institute of Technology, </institution> <address> Atlanta, GA, </address> <year> 1987. </year>
Reference-contexts: Instead of using ID3-like inductive learning algorithms or neural-net based approaches, we chose Case Based Reasoning (CBR) paradigm to capture user optimization preferences that change over time in job shop scheduling domain. CBR is the problem solving paradigm where previous experience are used to guide problem solving <ref> [8, 24, 9] </ref>. In CBR learning is an integral part of case based problem solving. Case-based reasoning has been successful in dealing with exceptional data [22], acquiring user knowledge in complex domains [4, 13], and expending less effort in knowledge acquisition compared with knowledge acquisition for rule-based systems [23, 11].
Reference: [25] <author> Katia Sycara and Kazuo Miyashita. </author> <title> Case-based acquisition of user preferences for solution improvement in ill-structured domains. </title> <booktitle> In Proceedings of AAAI-94, </booktitle> <address> Seattle, Washington, </address> <month> August </month> <year> 1994. </year> <note> AAAI. </note>
Reference-contexts: As a case retrieval mechanism, CABINS uses a variation of k-Nearest Neighbor method (k-NN) [5]. For the detailed formula for similarity calculation, see [17]. 5 Experimental Evaluation of Captur ing Changing Preferences Extensive experiments have been conducted with CABINS <ref> [16, 26, 25] </ref>.
Reference: [26] <author> Dajun Zeng. </author> <title> Combined machine learning techniques in predictive and reactive scheduling. </title> <institution> Graduate School of Industrial Administration, summer paper, Carnegie Mellon University, </institution> <year> 1993. </year>
Reference-contexts: We have implemented our Case-Based iterative revision approach in the CABINS system to demonstrate the capability of acquiring user context-dependent and dynamically changing optimization preferences in job shop scheduling domains. The work reported here extends previous work on the CABINS system <ref> [26, 16, 17] </ref>. It tests the hypothesis that our CBR-based incremental revision methodology shows good potential for capturing user preferences in ill-structured domains that change over time and reuse them as control knowledge for solution improvement. <p> As a case retrieval mechanism, CABINS uses a variation of k-Nearest Neighbor method (k-NN) [5]. For the detailed formula for similarity calculation, see [17]. 5 Experimental Evaluation of Captur ing Changing Preferences Extensive experiments have been conducted with CABINS <ref> [16, 26, 25] </ref>.
References-found: 26

