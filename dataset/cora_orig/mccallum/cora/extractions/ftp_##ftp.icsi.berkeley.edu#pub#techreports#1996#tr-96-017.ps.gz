URL: ftp://ftp.icsi.berkeley.edu/pub/techreports/1996/tr-96-017.ps.gz
Refering-URL: http://www.icsi.berkeley.edu/techreports/1996.html
Root-URL: http://www.icsi.berkeley.edu
Email: bernd@math.berkeley.edu  wiegelm@uni-trier.de  
Title: Structural Grobner Basis Detection  
Phone: (510) 643-9153 FAX (510) 643-7684  
Author: Bernd Sturmfels and Markus Wiegelmann 
Address: I 1947 Center St. Suite 600 Berkeley, California 94704-1198  Berkeley, California 94720, USA  Universitatsring 15, D-54286 Trier, Germany  
Affiliation: INTERNATIONAL COMPUTER SCIENCE INSTITUTE  Department of Mathematics, UC Berkeley  Fachbereich Mathematik, Universitat Trier  
Pubnum: TR-96-017  
Abstract: We determine the computational complexity of deciding whether m polynomials in n variables have relatively prime leading terms with respect to some term order. This problem is NP-complete in general, but solvable in polynomial time for m fixed and for nm fixed. Our new algorithm for the latter case determines a candidate set of leading terms by solving a maximum matching problem. This reduces the problem to linear programming. 
Abstract-found: 1
Intro-found: 1
Reference: [GS 93] <author> P. Gritzmann and B. Sturmfels, </author> <title> Minkowski Addition of Polytopes: Computational Complexity and Applications to Grobner Bases, </title> <journal> SIAM J. Discrete Math. </journal> <volume> 6 (1993), 246 - 269. </volume>
Reference-contexts: This means that X ff X fi , w T ff &lt; w T fi for any two monomials X ff and X fi occurring in F . The following Grobner Basis Detection problem was proposed in <ref> [GS 93] </ref>: (GBD) Given F = ff 1 ; : : : ; f m g S, decide if there exists and if "Yes" find a term order w 2 IR n + such that F is a Grobner basis with respect to w. In [GS 93] this problem is solved <p> Detection problem was proposed in <ref> [GS 93] </ref>: (GBD) Given F = ff 1 ; : : : ; f m g S, decide if there exists and if "Yes" find a term order w 2 IR n + such that F is a Grobner basis with respect to w. In [GS 93] this problem is solved using Minkowski addition of Newton polytopes. The running time of that algorithm depends not just on n and m but also on the maximal number k of terms and the maximal degree R of the polynomials f i . <p> We can list all choices in polynomial time. Polyhedral techniques for doing this efficiently are described in <ref> [GS 93] </ref>. To decide whether a given choice is induced 1 by a term order, we must decide the feasibility of a linear program. This can be done in polynomial time in the binary size of the input, for example by Khachian's Ellipsoid Method [Sc 86]. Corollary 3.
Reference: [LP 84] <author> L. Lovasz and M.D. Plummer, </author> <title> Matching Theory, </title> <publisher> North-Holland Mathematics Studies 121, </publisher> <year> 1986. </year>
Reference-contexts: Discussion: The correctness of Algorithm 7 follows from Lemma 5 and Lemma 6. The main subroutines are steps 3 and 6. The calculation of a maximum bipartite matching can be done in polynomial time, for example by the Hungarian method 3 <ref> [LP 84] </ref>. The linear programming feasibility problem only involves binary data which are part of the input. It can be solved in polynomial time in the size of the input, for example by Khachian's Ellipsoid method [Sc 86].
Reference: [Pa 94] <author> C.H. Papadimitriou, </author> <title> Computational Complexity, </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: Guess such a w and check that ff 1 ; : : :; ff m have pairwise disjoint supports. This proves that (SGBD) is in NP. In order to prove that (SGBD) is NP-hard, we reduce from the following known NP-complete problem, see for example <ref> [Pa 94] </ref>, page 201. (SET PACKING) Given a family S = fS 1 ; : : : ; S k g of subsets of f1; : : :; -g, and a goal m 2 IN .
Reference: [Sc 86] <author> A. Schrijver, </author> <title> Theory of Linear and Integer Programming, </title> <publisher> Wiley, </publisher> <address> New York, </address> <year> 1986. </year>
Reference-contexts: To decide whether a given choice is induced 1 by a term order, we must decide the feasibility of a linear program. This can be done in polynomial time in the binary size of the input, for example by Khachian's Ellipsoid Method <ref> [Sc 86] </ref>. Corollary 3. For fixed m, (SGBD) can be solved in polynomial time. We do not know if (SGBD) for fixed m can be solved in polynomial time in the RAM model of computation, in which each integer in the input is assumed to occupy unit space. <p> The linear programming feasibility problem only involves binary data which are part of the input. It can be solved in polynomial time in the size of the input, for example by Khachian's Ellipsoid method <ref> [Sc 86] </ref>. It follows that Algorithm 7 runs in polynomial time in the binary model of computation. We summarize a consequence which is specific to square systems. Corollary 8.
Reference: [St 86] <author> R. Stanley, </author> <title> Enumerative Combinatorics, </title> <publisher> Wadsworth & Brooks, </publisher> <address> Monterey, CA, </address> <year> 1986. </year>
Reference-contexts: Lemma 10. For d = n m fixed, the number of partitions of a set of n elements into m disjoint nonempty subsets is a polynomial of degree 2d in n. Proof: This follows from the discussion in Section 1.4 of <ref> [St 86] </ref>. In order to prove Theorem 1, we now just have to put things together. Proof of Theorem 1: Let d = n m be fixed. By Lemma 10 there is a polynomial number of partitions P of f1; : : :; ng into m nonempty subsets.
Reference: [St 95] <author> B. Sturmfels, </author> <title> Grobner Bases and Convex Polytopes, </title> <publisher> American Mathematical Society, </publisher> <address> Providence, </address> <year> 1995. </year> <month> 6 </month>
Reference-contexts: The most interesting special case is d = 0. It will be treated first in Subsection 2.1. 2.1 Square systems The following class of examples explains the combinatorial structure of our problem. See also Example 3.9 and Exercise (1) on page 29 in <ref> [St 95] </ref>. Example 4.
References-found: 6

