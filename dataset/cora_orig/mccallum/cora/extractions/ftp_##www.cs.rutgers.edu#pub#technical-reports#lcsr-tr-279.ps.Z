URL: ftp://www.cs.rutgers.edu/pub/technical-reports/lcsr-tr-279.ps.Z
Refering-URL: http://www.cs.rutgers.edu/pub/technical-reports/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: DESIGN AND IMPLEMENTATION OF INDIRECT PROTOCOLS FOR MOBILE WIRELESS ENVIRONMENTS  
Author: BY AJAY V. BAKRE 
Degree: A dissertation submitted to the Graduate School|New Brunswick  in partial fulfillment of the requirements for the degree of Doctor of Philosophy  
Date: October, 1996  
Note: Graduate Program in Computer Science Written under the direction of Prof. B.R. Badrinath and approved by  
Address: New Jersey  New Brunswick, New Jersey  
Affiliation: Rutgers, The State University of  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> M. Accetta, R. Baron, W. Bolosky, D. Golub, R. Rashid, A. Tevanian, and M. Young. </author> <title> Mach: a new kernel foundation for UNIX development. </title> <booktitle> In Proc. of the USENIX 1986 Summer Conference, </booktitle> <month> July </month> <year> 1986. </year>
Reference-contexts: The MSRs are also connected to 10 Mbps Ethernet segments which are part of a single administrative domain. The MSRs run the Mach 3.0 micro kernel from CMU with a Unix server (MK84/UX40) <ref> [1] </ref> that is patched with Columbia Mobile-IP source code dated July 1992. Additional modifications are needed in the MSR kernels (unix servers) to support our protocols as described in a later chapter.
Reference: [2] <author> E. Amir, H. Balakrishnan, S. Seshan, and R. Katz. </author> <title> Efficient TCP over networks with wireless links. </title> <booktitle> In Proc. of Fifth Workshop on Hot Topics in Operating Systems (HoTOS-V), </booktitle> <month> May </month> <year> 1995. </year>
Reference-contexts: A somewhat better approach that uses retransmissions on the (last) wireless link was suggested in <ref> [2] </ref> which falls somewhere between LLR and I-TCP. This approach has the advantage that end-to-end semantics of TCP are unchanged. In addition, separate (shorter) timeout 75 values are used for retransmissions on the wireless link which helps in early detection of lost segments. <p> Such an approach however, interferes with the end-to-end retransmissions of TCP and does not result in improved performance [26] for certain loss characteristics. A somewhat better approach that uses retransmissions on the (last) wireless link was suggested in <ref> [2] </ref> which falls somewhere between LLR and our approach. In this method, a snoop layer at the base station (MSR) caches TCP segments sent by a (fixed) sending host to the mobile host. The snoop layer also intercepts acknowledgments flowing from the MH to the sending host. <p> Handoff models in cellular systems and mobile IP schemes [41, 72, 73, 74, 87, 91] typically deal with lower layer handoffs which do not involve transport and higher layers. 153 A more recent scheme of handing off TCP related state information pertaining to the snoop layer <ref> [2] </ref> uses multicasting to propagate the TCP state to other mobility support routers in the vicinity. This is done to reduce the handoff delay when a mobile switches cells.
Reference: [3] <author> ANSA: </author> <title> An engineer's introduction to the architecture. Architecture Projects Management Limited, ANSA Release TR.03.02, </title> <month> November </month> <year> 1989. </year>
Reference-contexts: Wide area file systems analogous to Sun's network file system (NFS). 6. Distributed remote object invocation from mobile hosts. This may include obtaining a reference to a remote object and invoking operations on it. Such remote object invocation is the basis for structuring distributed applications in systems like ANSA <ref> [3] </ref> and Arjuna [78]. 6.3 Overview of M-RPC System We describe here an RPC system for mobile clients, which we call M-RPC. This RPC system has been designed to satisfy the needs of applications running in a mobile wireless environment. Some of these needs were outlined in the previous section.
Reference: [4] <author> A. Athan and D. Duchamp. </author> <title> Agent-mediated message passing for constrained environments. </title> <booktitle> In Proc. of the USENIX Symposium on Mobile and Location-Independent Computing, </booktitle> <month> August </month> <year> 1993. </year>
Reference-contexts: For mobile environments, an agent based model for message passing was suggested in <ref> [4] </ref>. In addition, the indirect approach where the intermediary (or a set of intermediaries) exists at the application layer for supporting the execution of distributed algorithms over mobile hosts, has been investigated by Badrinath et al. [8].
Reference: [5] <author> B. Awerbuch and D. Peleg. </author> <title> Concurrent online tracking of mobile users. </title> <booktitle> In Proc. of ACM SIGCOMM, </booktitle> <pages> pages 221-233, </pages> <month> September </month> <year> 1991. </year>
Reference-contexts: The location information can be used either by the home network or by the sending host, to correctly route data packets to a mobile host. One of the first schemes to track mobile hosts was proposed in 1991 by Awerbuch and Peleg <ref> [5] </ref>.
Reference: [6] <author> D. Bachmann, , P. Honeyman, </author> <title> and L.B. Huston. The Rx Hex. </title> <booktitle> In Proc. of the 1st Intl. Workshop on Services in Distributed and Networked Environments, </booktitle> <address> Prague, </address> <month> June </month> <year> 1994. </year>
Reference-contexts: As with thinwire protocols, this method also does not address the problems of lossy links and host mobility. A dynamic round trip time estimation scheme for the Rx RPC package used in AFS [34] was described in <ref> [6] </ref> to improve Rx performance over low speed SLIP links. 150 The proposed scheme also had a provision to compress Rx and UDP/IP headers to allow efficient use of a smaller MTU.
Reference: [7] <author> B.R. Badrinath, A. Acharya, and T. Imielinski. </author> <title> Impact of mobility on distributed computations. </title> <booktitle> In SIGOPS Review, </booktitle> <pages> pages 15-20, </pages> <month> April </month> <year> 1993. </year>
Reference-contexts: The indirect model also allows the fixed hosts (MSR) to maintain a large part of protocol related state on behalf of the mobile hosts. This model is thus consistent with the approach of pushing as much computation as possible to the fixed network <ref> [7, 8] </ref>.
Reference: [8] <author> B.R. Badrinath, A. Acharya, and T. Imielinski. </author> <title> Structuring distributed algorithms for mobile hosts. </title> <booktitle> In Proc. of the 14th Intl. Conf. on Distributed Computing Systems, </booktitle> <pages> pages 21-28, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: The indirect model also allows the fixed hosts (MSR) to maintain a large part of protocol related state on behalf of the mobile hosts. This model is thus consistent with the approach of pushing as much computation as possible to the fixed network <ref> [7, 8] </ref>. <p> For mobile environments, an agent based model for message passing was suggested in [4]. In addition, the indirect approach where the intermediary (or a set of intermediaries) exists at the application layer for supporting the execution of distributed algorithms over mobile hosts, has been investigated by Badrinath et al. <ref> [8] </ref>. Thekkath et al. [88] advocated the use of a server clerk on the client machine to separate control and data traffic in an RPC based file system.
Reference: [9] <author> B.R. Badrinath, A. Bakre, T. Imielinski, and R. Marantz. </author> <title> Handling mobile clients: A case for indirect interaction. </title> <booktitle> In Proc. of the 4th Workshop on Workstation Operating Systems (WWOS-IV), </booktitle> <pages> pages 91-97, </pages> <month> October </month> <year> 1993. </year>
Reference: [10] <author> B.R. Badrinath and T. Imielinski. </author> <title> Location management for networks with mobile users. </title> <editor> In T. Imielinski and H. Korth, editors, </editor> <booktitle> Mobile Computing, chapter 4, </booktitle> <pages> pages 129-152. </pages> <publisher> Kluwer Academic Publishers, </publisher> <year> 1996. </year>
Reference-contexts: One of the first schemes to track mobile hosts was proposed in 1991 by Awerbuch and Peleg [5]. Many other schemes for location management in the internetworking and cellular telephony environments have been discussed in <ref> [10] </ref>. 3.1.2 Effects of wireless medium The use of a wireless medium, which is the most natural choice for mobile computers 2 to connect to the fixed networks, presents another set of problems in designing network protocols.
Reference: [11] <author> A. Bakre and B.R. Badrinath. </author> <title> Handoff and system support for indirect TCP/IP. </title> <booktitle> In Proc. of the 2nd USENIX Symposium on Mobile and Location-Independent Computing, </booktitle> <pages> pages 11-24, </pages> <month> April </month> <year> 1995. </year>
Reference-contexts: Client applications on mobile hosts, such as NFS clients, that wish to access UDP services on the fixed network can utilize RDP/UDP to protect themselves against excessive wireless losses. One particular example of a higher layer protocol that uses RDP/UDP can be found in M-RPC <ref> [11] </ref>, which is an RPC service for mobile clients. <p> We have also developed an RDP/UDP indirect transport protocol which is suitable for request-response style of communication. This protocol uses RDP for increased reliability on an error-prone wireless link, and is used in our M-RPC system <ref> [11] </ref> as described in a later chapter. 78 Chapter 5 Transport Layer Implementation and Handoffs In the previous chapter we saw how an indirect transport layer protocol such as I-TCP allows the use of a separate protocol stack for mobile hosts without causing interoperability problems with the fixed network. <p> As part of client handle creation, buffer space is allocated at the client side for call and reply messages and the static part of call header is pre-serialized. 123 6.4.2 RDP/UDP indirect transport layer RDP/UDP indirect transport layer is implemented in a way similar to I-TCP <ref> [11, 12] </ref>. The M-RPC client side library uses the rudp connect call exported by the RDP/UDP indirect library in response to a clnt create request from the client application.
Reference: [12] <author> A. Bakre and B.R. Badrinath. I-TCP: </author> <title> Indirect TCP for mobile hosts. </title> <booktitle> In Proc. of the 15th Intl. Conf. on Distributed Computing Systems, </booktitle> <pages> pages 136-143, </pages> <month> May </month> <year> 1995. </year> <month> 168 </month>
Reference-contexts: Our approach first confines the mobility related performance problems to the wireless link and then attempts to alleviate such problems by adapting the transport layer protocols on the wireless link in a way that requires no modifications to the hosts on the fixed network. I-TCP <ref> [12] </ref>, a TCP compatible indirect protocol is particularly suited for applications which are throughput intensive. Experiments with I-TCP on our testbed showed greatly improved throughput in comparison to regular TCP under simulated mobility conditions and wireless losses. The performance improvement for wide-area connections was higher than for local-area connections. <p> As part of client handle creation, buffer space is allocated at the client side for call and reply messages and the static part of call header is pre-serialized. 123 6.4.2 RDP/UDP indirect transport layer RDP/UDP indirect transport layer is implemented in a way similar to I-TCP <ref> [11, 12] </ref>. The M-RPC client side library uses the rudp connect call exported by the RDP/UDP indirect library in response to a clnt create request from the client application.
Reference: [13] <author> A. Bakre and B.R. Badrinath. M-RPC: </author> <title> A remote procedure call service for mobile clients. </title> <booktitle> In Proc. of the 1st ACM Conf. on Mobile Computing and Networking (Mobicom-95), </booktitle> <pages> pages 97-110, </pages> <month> November </month> <year> 1995. </year>
Reference: [14] <author> A. Bakre and B.R. Badrinath. </author> <title> Indirect transport layer protocols for mobile wireless environment. </title> <editor> In T. Imielinski and H. Korth, editors, </editor> <booktitle> Mobile Computing, chapter 8, </booktitle> <pages> pages 229-252. </pages> <publisher> Kluwer Academic Publishers, </publisher> <year> 1996. </year>
Reference: [15] <author> H. Balakrishnan, S. Seshan, E. Amir, and R.H. Katz. </author> <title> Improving TCP/IP performance over wireless networks. </title> <booktitle> In Proc. of the 1st ACM Conf. on Mobile Computing and Networking (Mobicom-95), </booktitle> <pages> pages 2-11, </pages> <month> November </month> <year> 1995. </year>
Reference-contexts: Some such special measures were incorporated in the snoop layer protocol <ref> [15] </ref> for the wireless link resulting in large performance improvement over TCP. 4.6 Alternatives to Indirect Transport Protocols We list some of the approaches that other researchers have taken to solve mobility and wireless related problems that affect transport layer performance in a mobile environment. <p> Mechanisms for reducing handoff latency need to be explored. One such method uses multicasting to pre-notify other MSRs about the state information about TCP snoop layer <ref> [15] </ref>. This however results in extra traffic and locking of additional resources at MSRs because each potential MSR that a mobile can visit next needs to be ready with the state information for smooth handoffs.
Reference: [16] <author> R.J. Bates. </author> <title> Cellular communications. In Wireless Networked Communications: </title> <booktitle> Concepts, Technology and Implementation, chapter 4, </booktitle> <pages> pages 73-95. </pages> <address> McGraw Hill, </address> <year> 1994. </year>
Reference-contexts: This system was designed around high power mobile phones operating in the 150 MHz and 450 MHz bands with a range of 20-25 miles. Because of interference, frequency reuse was possible only at a distance of 100-150 miles <ref> [16] </ref>. This system could not meet the demand for mobile communications services because of limited channel capacity. 3 4 In the late 1970s, additional spectrum in the 800-900 MHz band was allocated by the Federal Communications Commission (FCC) for mobile telephony. Commercial telephone service based on the cellular concept [16] using <p> miles <ref> [16] </ref>. This system could not meet the demand for mobile communications services because of limited channel capacity. 3 4 In the late 1970s, additional spectrum in the 800-900 MHz band was allocated by the Federal Communications Commission (FCC) for mobile telephony. Commercial telephone service based on the cellular concept [16] using this newly allocated spectrum began in 1984. This was known as the Advanced Mobile Phone Service (AMPS). In a cellular system, the coverage area is broken into small cells as shown in figure 1.1.
Reference: [17] <author> T. Berners-Lee, R. Fielding, and H. Frystyk. </author> <title> Hypertext transfer protocol - HTTP/1.0. Internet Draft, </title> <month> February </month> <year> 1996. </year>
Reference-contexts: Chimera WWW browser Chimera 2 , which is a World Wide Web (WWW) browser, uses the Hypertext Transfer Protocol (HTTP) <ref> [17] </ref> to access WWW services over the Internet. HTTP itself uses TCP to transfer data.
Reference: [18] <author> A. Birell. </author> <title> Secure communication using remote procedure calls. </title> <journal> ACM Trans. on Computer Systems, </journal> <volume> 3(1), </volume> <month> February </month> <year> 1985. </year>
Reference-contexts: In this chapter we go further up in the ISO/OSI protocol stack and describe how the concept of indirection can be applied at the remote procedure call (RPC) layer which combines the functionality of session and presentation layers. 6.1 Introduction Remote Procedure Call (RPC) <ref> [18, 19] </ref> is used as a basis for structuring many client server applications. Conventional RPC implementations however, assume that all the hosts in a network are stationary and are always reachable except in case of failures.
Reference: [19] <author> A. Birell and B. Nelson. </author> <title> Implementing remote procedure calls. </title> <journal> ACM Trans. on Computer Systems, </journal> <volume> 2(1), </volume> <month> February </month> <year> 1984. </year>
Reference-contexts: In this chapter we go further up in the ISO/OSI protocol stack and describe how the concept of indirection can be applied at the remote procedure call (RPC) layer which combines the functionality of session and presentation layers. 6.1 Introduction Remote Procedure Call (RPC) <ref> [18, 19] </ref> is used as a basis for structuring many client server applications. Conventional RPC implementations however, assume that all the hosts in a network are stationary and are always reachable except in case of failures.
Reference: [20] <author> R. Caceres and L. Iftode. </author> <title> The effects of mobility on reliable transport protocols. </title> <booktitle> In Proc. of the 14th Intl. Conf. on Distributed Computing Systems, </booktitle> <pages> pages 12-20, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: It was not long before researchers realized that supporting mobile computers needed more than an adaptive routing layer that could track a mobile's location. In 1994 Caceres and Iftode showed with their experiments that host motion can significantly affect the end-to-end throughput of a TCP connection <ref> [20] </ref>. Other studies [26, 58] 11 published subsequently also pointed out the deficiency of TCP in handling mobility and wireless links. <p> The throughput of such protocols is thus adversely affected if one of the links between the end points is a wireless link. The increased packet loss over wireless also triggers congestion control at the transmitting host which further degrades the throughput <ref> [20] </ref>. <p> FH to MH communication involved only a few hops within the Rutgers LCSR administrative domain and ii) when the FH to MH communication involved a long-haul link over the Internet. 4.5.1 Experiments to study the effects of mobility Our experiments were inspired by similar experiments reported by Caceres and Iftode <ref> [20] </ref> to study the effect of mobility on reliable transport protocols. <p> Fast retransmission [46] coupled with modification of the TCP software on the mobile hosts <ref> [20] </ref> solves only part of the problem because the transmitting host still performs a slow start if more than one segment is lost per window, thus limiting the effective throughput. <p> UDP is clearly inadequate for error-prone wireless links. TCP, although it provides reliable delivery, is not suitable for request-response kind of communication. Further, in a mobile wireless environment, TCP performance degrades because of wireless errors and moves <ref> [20, 26, 58] </ref>. <p> Thus in the event of a packet loss, a retransmit timeout at the sending end, which typically sends an uncompressed packet, is required to reestablish the header compression protocol. 8.2 TCP over Wireless Links Caceres and Iftode <ref> [20] </ref> demonstrated in their experiments that TCP throughput deteriorates rapidly when a mobile host switches cells at a constant rate. Their experiments showed that the loss of throughput was much higher when there was a loss of link layer connectivity during the cell crossover than with overlapped wireless cells. <p> This method however, cannot in general deal with multiple segment losses per transmission window. Thus if a sequence of packets is dropped due to a burst of wireless errors, fast retransmissions are not enough to prevent the invocation of congestion control by a TCP sender. Caceres and Iftode <ref> [20] </ref> also suggested using duplicate acknowledgments from a mobile host after a move to trigger fast retransmission at the sending host to quickly bring the data rate over wireless to normal speed.
Reference: [21] <author> R. Chang and C. V. Ravishankar. </author> <title> A service acquisition mechanism for the client/service model in Cygnus. </title> <booktitle> In Proc. of the 11th Intl. Conf. on Distributed Computing Systems, </booktitle> <pages> pages 90-97, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: proxy functionality is always handled by the current MSR, whereas in the Rover system the remote proxy can be located anywhere in the vicinity of the mobile's point of attachment to the network infrastructure. 154 8.5 RPC and Dynamic Binding A method for dynamically obtaining client-service bindings was proposed in <ref> [21] </ref>. In that method, the bindings are changed by a client agent when the current server is no longer accessible. By contrast, in a mobile environment the server bindings may have to change just due to a move and not necessarily due to failures.
Reference: [22] <author> D. Cheriton. </author> <title> Exploiting recursion to simplify RPC communication architectures. </title> <booktitle> In Proc. of the ACM SIGCOMM, </booktitle> <pages> pages 76-87, </pages> <month> September </month> <year> 1988. </year>
Reference: [23] <author> D. Cheriton. </author> <title> Versatile message transaction protocol. Request for Comments 1045, </title> <month> February </month> <year> 1988. </year>
Reference: [24] <author> D. Cheriton. </author> <title> Dissemination-oriented communication systems. </title> <type> Technical report, </type> <institution> Stanford University, </institution> <address> Palo Alto, CA, </address> <year> 1992. </year>
Reference-contexts: A session layer protocol that is used for mobile hosts also needs to withstand frequent disconnections. Another requirement of broadcast and multicast based communication sessions is subject-based naming as described by Cheriton <ref> [24] </ref> which allows binding to a flow of information rather than to a particular server. 37 The presentation protocols currently used over fixed network are designed to process a data stream in the same manner once a session is established until the session is closed. <p> A related property property is subject based naming <ref> [24] </ref> whereby a client can be bound to a service rather than a server. This allows the supporting infrastructure to switch servers if needed or to employ multiple servers to provide the same service transparently for the sake of reliability and/or efficiency. <p> Therefore in our scheme, the agent at the MSR is responsible for providing switchable bindings. The need for subject based naming and binding in dissemination-oriented protocols was also emphasised by Cheriton <ref> [24] </ref>. Object request brokers (ORBs) which are part of the infrastructure in CORBA specifications [67] also behave as agents mapping client requests to servers.
Reference: [25] <author> E.C. Cooper and R.P. Draves. </author> <title> C threads. </title> <type> Technical Report CMU-CS-88-154, </type> <institution> School of Computer Science, Carnegie Mellon University, </institution> <address> Pittsburgh, PA, </address> <month> June </month> <year> 1988. </year>
Reference: [26] <author> A. DeSimone, M.C. Chuah, </author> <title> and O.C. Yue. Throughput performance of transport-layer protocols over wireless LANs. </title> <booktitle> In Proc. of Globecom '93, </booktitle> <month> December </month> <year> 1993. </year>
Reference-contexts: It was not long before researchers realized that supporting mobile computers needed more than an adaptive routing layer that could track a mobile's location. In 1994 Caceres and Iftode showed with their experiments that host motion can significantly affect the end-to-end throughput of a TCP connection [20]. Other studies <ref> [26, 58] </ref> 11 published subsequently also pointed out the deficiency of TCP in handling mobility and wireless links. <p> congestion control policies [44, 63] which have evolved for the wired network. 53 Congestion control and recovery in TCP The congestion control algorithm employed by TCP works well with high reliability wired links, but leads to poor performance when one of the links in an end-to-end TCP connection is wireless <ref> [26] </ref>. Recent modifications to the TCP sending algorithm [46], namely fast retransmission and recovery are useful for fast recovery from occasional losses. These modifications however do not help when more than one data segment is lost in a single transmission window. <p> Link layer retransmission (LLR) can be used on error-prone wireless links to bring their error rate on par with that on the wired networks but such an approach interferes with the end-to-end retransmissions of TCP and does not always result in improved performance <ref> [26] </ref>. Fast retransmission [46] coupled with modification of the TCP software on the mobile hosts [20] solves only part of the problem because the transmitting host still performs a slow start if more than one segment is lost per window, thus limiting the effective throughput. <p> UDP is clearly inadequate for error-prone wireless links. TCP, although it provides reliable delivery, is not suitable for request-response kind of communication. Further, in a mobile wireless environment, TCP performance degrades because of wireless errors and moves <ref> [20, 26, 58] </ref>. <p> Such an approach however, interferes with the end-to-end retransmissions of TCP and does not result in improved performance <ref> [26] </ref> for certain loss characteristics. A somewhat better approach that uses retransmissions on the (last) wireless link was suggested in [2] which falls somewhere between LLR and our approach.
Reference: [27] <author> F. Douglis and J. Ousterhout. </author> <title> Process migration in the Sprite operating system. </title> <booktitle> In Proc. of the 7th Intl. Conf. on Distributed Computing Systems, </booktitle> <pages> pages 18-25, </pages> <year> 1987. </year> <month> 169 </month>
Reference-contexts: The same TCP connection is however split at a mobility support gateway (MSG) when the MH moves away. 8.3 Handoffs and State Migration Although the idea of migrating objects and processes has been around for a while <ref> [27, 50] </ref>, we are not aware of any work preceding ours that allows migration of active transport and higher layer connections from one machine to another.
Reference: [28] <author> S.W. </author> <title> Edge. Comparison of the hop-by-hop and endpoint approaches to network interconnection. </title> <editor> In J.-L. Grange and M. Gien, editors, </editor> <booktitle> Flow Control in Computer Networks, </booktitle> <pages> pages 359-377. </pages> <publisher> North Holland, </publisher> <year> 1979. </year>
Reference-contexts: Separate flow control on wired and wireless links since the loss characteristics of the two kinds of links are very different. It has been shown that such a separation is desirable for high packet error probabilities <ref> [28] </ref>. 5. Ability to adapt to wireless links with different characteristics that may be found in different cells or by switching from an indoor wireless LAN (e.g. WaveLAN) to an outdoor cellular environment (e.g. CDPD). 6.
Reference: [29] <author> D.J. Farber, G.S. Delp, </author> <title> and T.M. Conte. A thinwire protocol for connecting personal computers to the internet. Request for Comments 914, </title> <month> September </month> <year> 1984. </year>
Reference-contexts: We also describe some of the desirable features that a transport protocol specially developed for mobile hosts should have. 4.6.1 Comparison with existing schemes Thinwire protocols <ref> [29] </ref> and TCP header compression [45] can help in improving the response time of interactive applications such as telnet on low speed links. However, these solutions do not deal with host mobility. <p> protocols in a low bandwidth and/or mobile environment. 8.1 Networking over Low Bandwidth Links One of the earliest attempts to design protocols for an environment where a low bandwidth (e.g. serial) link connects an end system (host machine) to a relatively high speed network was the proposal on thinwire protocols <ref> [29] </ref>.
Reference: [30] <author> D.J. Goodman, K.T Valenzuela, K.T. Gayliard, and B. Rammamurthi. </author> <title> Packet reservation multiple access for local wireless communications. </title> <journal> IEEE Transactions on Communications, </journal> <volume> 37(8) </volume> <pages> 885-890, </pages> <month> August </month> <year> 1989. </year>
Reference: [31] <institution> Graduate School, New Brunswick. </institution> <type> Manuscript Form, </type> <note> Style Guide for Thesis and Dissertation Preparation, </note> <year> 1984. </year>
Reference: [32] <author> G. Hamilton, M. Powell, and J. Mitchell. Subcontract: </author> <title> A flexible base for distributed programming. </title> <booktitle> In Proc. of the 14th Symposium on Operating Systems Principles (SOSP), </booktitle> <month> December </month> <year> 1993. </year>
Reference: [33] <author> J.S. Hansen, T. Reich, and B. Andersen. </author> <title> Semi-connected TCP/IP in a mobile computing environment. </title> <booktitle> In Proc. of Information Visualization and Mobile Computing Workshop (IMC '96), </booktitle> <month> February </month> <year> 1996. </year>
Reference-contexts: This scheme has the advantage that transport layer handoffs are not needed when a mobile switches cells since the intermediate point of the split TCP connection resides on a host within the cellular telephone network that is connected to multiple cellular base stations. Semi-connected TCP <ref> [33] </ref> provides a split TCP connection only when a mobile host is roaming away from its home network. In this scheme, the mobile host uses end-to-end TCP when it is connected to its home network. <p> Semi-connected TCP <ref> [33] </ref> also uses TCP state transfer from a mobile host to a mobility support gateway (MSG) to split a connection on the fly when the mobile moves away from its home network. 8.4 Use of Agents and Proxies Use of agents or intermediaries for protocols and applications based on the client-server <p> Thus short-lived disconnections may only cause a slight degradation in performance while longer disconnections may actually be propagated to the application layer for appropriate handling. Semi-connected TCP <ref> [33] </ref> provides for disconnection handling at the TCP layer by suspending TCP timer activity during disconnections. This is similar to our approach for handling disconnections at the transport layer. 156 Chapter 9 Conclusions and Future Work In this dissertation, we proposed a new indirect protocol model for mobile internet-working.
Reference: [34] <author> J.H. Howard. </author> <title> An overview of the Andrew File System. </title> <booktitle> In Proc. of the Winter 1988 USENIX Conference, </booktitle> <pages> pages 23-26, </pages> <month> February </month> <year> 1988. </year>
Reference-contexts: As with thinwire protocols, this method also does not address the problems of lossy links and host mobility. A dynamic round trip time estimation scheme for the Rx RPC package used in AFS <ref> [34] </ref> was described in [6] to improve Rx performance over low speed SLIP links. 150 The proposed scheme also had a provision to compress Rx and UDP/IP headers to allow efficient use of a smaller MTU.
Reference: [35] <author> L. Huston and P. Honeyman. </author> <title> Disconnected operation for AFS. </title> <booktitle> In Proc. of the USENIX Symposium on Mobile and Location-Independent Computing, </booktitle> <month> August </month> <year> 1993. </year>
Reference-contexts: The information about the mobile's location could then be used to correctly route datagrams which were addressed to the mobile computer. There were other proposals that would take care of disconnections, although at higher protocol layers e.g. in file systems <ref> [35, 53] </ref>. It was not long before researchers realized that supporting mobile computers needed more than an adaptive routing layer that could track a mobile's location. In 1994 Caceres and Iftode showed with their experiments that host motion can significantly affect the end-to-end throughput of a TCP connection [20]. <p> Long term disconnections have been dealt with extensively in Coda and similar systems <ref> [35, 53] </ref>, albeit in the limited context of file systems. We also do not deal with partial or weak connectivity [36, 61] which can essentially be treated as a combination of short term disconnections and reduced available bandwidth. <p> More recently, features have been added to Coda to handle weakly connected clients [61] exploiting links with low bandwidth and/or intermittent connectivity, which are common in mobile computing. Little Work <ref> [35, 36] </ref> is another system that handles disconnected and weakly connected file system clients using file caching and logging of updates. The logged updates are propagated to the file server whenever possible in an environment with intermittent connectivity. Both the systems described above handle disconnections at the file system level.
Reference: [36] <author> L. Huston and P. Honeyman. </author> <title> Partially connected operation. </title> <booktitle> In Proc. of the 2nd USENIX Symposium on Mobile and Location-Independent Computing, </booktitle> <pages> pages 11-24, </pages> <month> April </month> <year> 1995. </year>
Reference-contexts: Long term disconnections have been dealt with extensively in Coda and similar systems [35, 53], albeit in the limited context of file systems. We also do not deal with partial or weak connectivity <ref> [36, 61] </ref> which can essentially be treated as a combination of short term disconnections and reduced available bandwidth. We limit ourselves to dealing with mechanisms for handling short term and medium term disconnections at transport and RPC layers. <p> More recently, features have been added to Coda to handle weakly connected clients [61] exploiting links with low bandwidth and/or intermittent connectivity, which are common in mobile computing. Little Work <ref> [35, 36] </ref> is another system that handles disconnected and weakly connected file system clients using file caching and logging of updates. The logged updates are propagated to the file server whenever possible in an environment with intermittent connectivity. Both the systems described above handle disconnections at the file system level.
Reference: [37] <author> T. Imielinski and B. R.Badrinath. </author> <title> Mobile wireless computing: Challenges in data management. </title> <journal> Communications of the ACM, </journal> <volume> 37(10) </volume> <pages> 19-28, </pages> <month> October </month> <year> 1994. </year>
Reference-contexts: With an increase in the number of mobile hosts and the scale of the deployed support infrastructure, broadcast based information services are likely to become popular <ref> [37] </ref>. Such services are especially suitable for mobile clients since wireless is inherently a broadcast medium and a mobility support station consumes the same power for transmitting a packet on the wireless link regardless of the number of receivers in its cell. <p> Such a capability will also be needed by applications that access location dependent information such as traffic, weather, available services in a geographic area etc. <ref> [37] </ref>. In this chapter we describe M-RPC, which is an RPC service for mobile clients based on the indirect protocol model.
Reference: [38] <author> T. Imielinski, S. Viswanathan, and B. R. Badrinath. </author> <title> Energy efficient filtering of data on the air. </title> <booktitle> In Proc. of the ACM SIGMOD Conference, </booktitle> <month> May </month> <year> 1994. </year>
Reference-contexts: Alternatively, an external service mapper daemon can be consulted by the getmsrservbyname function. One possible implementation of a comprehensive scheme to advertise and access services over wireless can be based upon periodic publishing <ref> [38] </ref>. An MSR can advertise the services available in its vicinity by publishing the directory information in its cell using a well known multicast address. 125 A service mapper at the MH can keep track of available services by listening to this multicast address.
Reference: [39] <institution> Internet protocol. Request for Comments 791, </institution> <month> September </month> <year> 1981. </year> <note> J. Postel (editor). </note>
Reference-contexts: Mobility of end points raises routing concerns and should largely fall within the purview of the network layer in the ISO/OSI model or the IP <ref> [39] </ref> layer in TCP/IP. Problems related to the use of a wireless medium should ideally be handled by the data link layer in the ISO/OSI model. <p> In the Internet environment, and especially so with the Internet Protocol (IP) <ref> [39] </ref>, the network layer provides an addressing mechanism in addition to routing; whereas flow control is largely left to be taken care of by the transport layer. This makes the network layer simpler but places additional burden on the transport layer.
Reference: [40] <author> J. Ioannidis. </author> <title> Protocols for mobile internetworking. </title> <type> Ph.D. dissertation, </type> <institution> Columbia University, </institution> <year> 1993. </year>
Reference-contexts: We assume in our system model that a mobility aware IP layer protocol such as Columbia Mobile IP is available for routing and location management of mobile hosts. We make use of the Mobile Internetworking Control Protocol (MICP) <ref> [40] </ref>, which is part of Columbia Mobile IP, for notifying the MSRs when a mobile host moves from one wireless cell to another. 2.6.2 IETF and Other Mobile IP Schemes The basic IETF Mobile IP proposal [43] does not have an explicit notion of a campus and it does not distinguish <p> The mobile hosts in our testbed run a version of the UX server with minor modifications to support I-TCP connections. User lever mhmicp and msrmicp processes modified for I-TCP run on the mobile hosts and the MSRs respectively and execute the Mobile Internetworking Control Protocol (MICP) <ref> [40] </ref>, which takes care of beaconing and registration of mobile hosts in Columbia's Mobile IP. In addition, a user level I-TCP daemon running at each MSR manages I-TCP connections originating from all the MHs within its cell. <p> MICP module This module handles communication with the msrmicp process on the same machine (MSR). The msrmicp process executes the Mobile In-ternetworking Control Protocol (MICP), which is part of the Mobile-IP software from Columbia University <ref> [40] </ref>, to communicate with local MHs and msrmicp processes at other MSRs. The I-TCP daemon depends on the local msrmicp process for information about MHs entering and leaving the MSR's cell. <p> To allow binding addresses of 91 locally registered MHs to sockets at the MSR, we extended the in pcbbind function to also look in the mobinfo data structure maintained by mobile IP <ref> [40] </ref> to verify that the address named in a bind request belonged to a locally registered MH. For the wireless side of the I-TCP connection, the MSR uses its own IP address and port number. <p> For this purpose, at any MSR we also allow binding sockets to addresses and port numbers of other MSRs. The validity of an MSR address can be checked by consulting the msrinfo structure maintained by mobile IP <ref> [40] </ref>. A small change is needed to the IP input routine at the MSR which should send the IP packets that are addressed to MH address and I-TCP port numbers up to the TCP layer at the MSR instead of forwarding them to the MH using mobile IP routing. <p> A list of such I-TCP port numbers (which correspond to active connections) is maintained on a per MH basis by the MSR along with the mhinfo entry of the MH used for routing in mobile IP <ref> [40] </ref>. <p> We did not allocate a range of port numbers for I-TCP as it would have reduced the available port numbers for TCP connections. Primitives for I-TCP handoff If a mobile host with an open I-TCP connection switches cells, handoff in mobile IP <ref> [40] </ref> causes rerouting of IP packets addressed to the MH so that they are forwarded to the new MSR. To maintain the indirect nature of the I-TCP connection therefore, the I-TCP daemon at the new MSR must establish two sockets for the wired and the wireless parts of the connection. <p> The support for indirect transport layer protocols consists of daemon processes at the MSRs managing indirect connections and handoffs. We also described the integration of transport layer handoffs with handoffs at the IP layer using mobile IP <ref> [40] </ref>. Our measurements with I-TCP handoffs showed that operating system support in the form of suitable handoff mechanisms can help in achieving efficient transport layer handoffs. We also analyzed the handoff data to determine the time consuming activities in I-TCP handoffs. <p> Alternatively, the functionality related to maintaining and monitoring link layer connectivity over wireless can be programmed at the user level as in Columbia Mobile 136 IP <ref> [40] </ref>. It is also possible for a user level program to continuously probe the link layer for parameters such as signal strength and report any exceptional conditions to various protocol layers that may be interested in such information.
Reference: [41] <author> J. Ioannidis, D. Duchamp, and G.Q. Maguire. </author> <title> IP-based protocols for mobile in-ternetworking. </title> <booktitle> In Proc. of ACM SIGCOMM, </booktitle> <pages> pages 235-245, </pages> <month> September </month> <year> 1991. </year>
Reference-contexts: This was indeed the approach taken by all the initial proposals for accommodating mobile and wireless computers in the existing internetworks. These proposals <ref> [41, 74, 87, 91] </ref> argued for modifications in the routing functionality at the IP layer, which would allow IP routers to keep track of the location of a mobile computer as it wandered from one place to another. <p> We also assume that mobility and disconnection events are detected and communicated to interested entities on the mobile hosts as well as on the base stations (MSRs) by providing auxiliary functionality at higher layers. For example, in Columbia Mobile IP <ref> [41] </ref>, a special user level process monitors beacons from base stations (MSRs) and attempts to switch to a different MSR if the beacon from the current MSR is lost. <p> In a mobile computer the two clearly need to be separate 22 because the address of a mobile host may change as it changes its location but its name does not. A variety of schemes for routing and location management has been proposed for mobile hosts <ref> [41, 43, 74, 87, 91] </ref>. We will briefly discuss a few here which are important for the understanding of our protocol design. <p> Routing to and from mobile hosts. 2. Location management and tracking of mobile hosts. 3. Intimation of a cell crossover to the MSR that was earlier serving the mobile host that switched cells. 2.6.1 Columbia Mobile IP The Mobile IP proposal from Columbia University <ref> [41] </ref> provides for routing and location management of mobile hosts among a group of cells known as a campus. Each cell is controlled by a mobility support router (MSR) that is responsible for keeping track of mobiles in that cell and routing data packets to and from such mobiles. <p> of wireless equipment such as WaveLAN use simple checksums to detect and drop data packets arriving in error at the receiver, thus leaving it to the higher layers to take care of retransmitting lost data. 3.2.2 Network layer In the last few years, several mobile IP schemes have been proposed <ref> [41, 74, 87, 91] </ref>, which address the most important problem in supporting host mobility within the Internet, viz. that of routing data packets to mobile hosts. <p> A mobility aware IP layer is implemented by specialized routers which can forward data packets addressed to a mobile host to its current location. Such specialized routers are known as mobility support routers or MSRs in the Columbia mobile IP proposal <ref> [41] </ref>. The IETF draft uses the term home agent to designate a mobile IP router that keeps track of mobile hosts that belong to the same network as the home agent. <p> Furthermore, in a mobile environment a mobile host is more likely to suffer from failures than an MSR due to a crash or possibly a theft. 3.5 Handoffs When a mobile host moves from one wireless cell to another during an indirect interaction, the network layer protocol e.g. mobile IP <ref> [41] </ref> starts routing data packets addressed to the mobile host via the new MSR. These packets may or may not pass through the old MSR this depends upon the particular scheme being used to support routing to mobile hosts. <p> Handoff models in cellular systems and mobile IP schemes <ref> [41, 72, 73, 74, 87, 91] </ref> typically deal with lower layer handoffs which do not involve transport and higher layers. 153 A more recent scheme of handing off TCP related state information pertaining to the snoop layer [2] uses multicasting to propagate the TCP state to other mobility support routers in
Reference: [42] <author> J. Ioannidis and G.Q. Maguire. </author> <title> The design and implementation of a mobile inter-networking architecture. </title> <booktitle> In Proc. of USENIX Winter Technical Conference, </booktitle> <pages> pages 489-500, </pages> <month> January </month> <year> 1993. </year>
Reference: [43] <institution> IP mobility support. Internet Engineering Task Force, Internet Draft, </institution> <month> March </month> <year> 1995. </year> <editor> C. Perkins (editor). </editor> <volume> 170 </volume>
Reference-contexts: In a mobile computer the two clearly need to be separate 22 because the address of a mobile host may change as it changes its location but its name does not. A variety of schemes for routing and location management has been proposed for mobile hosts <ref> [41, 43, 74, 87, 91] </ref>. We will briefly discuss a few here which are important for the understanding of our protocol design. <p> We make use of the Mobile Internetworking Control Protocol (MICP) [40], which is part of Columbia Mobile IP, for notifying the MSRs when a mobile host moves from one wireless cell to another. 2.6.2 IETF and Other Mobile IP Schemes The basic IETF Mobile IP proposal <ref> [43] </ref> does not have an explicit notion of a campus and it does not distinguish between local and wide area moves by a mobile host. The MH needs to maintain a current registration with its home agent (analogous to a home MSR in Columbia Mobile IP) at all times. <p> The IP mobility group set up by the Internet Engineering Task Force (IETF) is currently in the process of standardizing a draft proposal to support host mobility at the IP layer <ref> [43] </ref>. A mobility aware IP layer is implemented by specialized routers which can forward data packets addressed to a mobile host to its current location. Such specialized routers are known as mobility support routers or MSRs in the Columbia mobile IP proposal [41]. <p> M-RPC, the MSR poses as the mobile to the rest of the wired network, which includes using the identity or the IP address of the mobile for such purposes. 9.2.2 Integration with IETF mobile IP The current standard proposal for IP mobility developed by the Internet Engineering Task Force (IETF) <ref> [43] </ref> does not require a new foreign agent (new MSR) to inform the old foreign agent (old MSR) when a mobile host moves from the cell of the old foreign agent to that of the new one.
Reference: [44] <author> V. Jacobson. </author> <title> Congestion avoidance and control. </title> <booktitle> In Proc. of ACM SIGCOMM, </booktitle> <pages> pages 314-329, </pages> <month> August </month> <year> 1988. </year>
Reference-contexts: Even after conditions improve on the TCP connection, as indicated by incoming acknowledgements, TCP avoids pumping data too fast into the network. Instead TCP employs what is known as slow start and congestion avoidance <ref> [44] </ref> and tries to bring a connection to normal speed in a very gradual manner, so that the network has enough time to recover from congestion related losses. <p> The increased packet loss over wireless also triggers congestion control at the transmitting host which further degrades the throughput [20]. This problem is made worse by the assumption of reliable links underlying the congestion control policies <ref> [44, 63] </ref> which have evolved for the wired network. 53 Congestion control and recovery in TCP The congestion control algorithm employed by TCP works well with high reliability wired links, but leads to poor performance when one of the links in an end-to-end TCP connection is wireless [26]. <p> In addition, since the MH has entered a new cell and thus has no idea about the congestion situation there, we employ the slow start algorithm of TCP <ref> [44] </ref> so as not to flood the new cell with retransmissions.
Reference: [45] <author> V. Jacobson. </author> <title> Compressing TCP/IP headers for low-speed serial links. Request for Comments 1144, </title> <month> February </month> <year> 1990. </year>
Reference-contexts: We also describe some of the desirable features that a transport protocol specially developed for mobile hosts should have. 4.6.1 Comparison with existing schemes Thinwire protocols [29] and TCP header compression <ref> [45] </ref> can help in improving the response time of interactive applications such as telnet on low speed links. However, these solutions do not deal with host mobility. <p> TCP header compression was also suggested in the same proposal to reduce bandwidth requirements for single character transmission over the serial line. A more effective method for compressing TCP headers for low speed serial links was suggested by Van Jacobson <ref> [45] </ref> in 1990. As with thinwire protocols, this method also does not address the problems of lossy links and host mobility.
Reference: [46] <author> V. Jacobson, R. Braden, and D. </author> <title> Borman. TCP extensions for high performance. Request for Comments 1323, </title> <month> May </month> <year> 1992. </year>
Reference-contexts: Recent modifications to the TCP sending algorithm <ref> [46] </ref>, namely fast retransmission and recovery are useful for fast recovery from occasional losses. These modifications however do not help when more than one data segment is lost in a single transmission window. <p> The TCP implementations used by the FH, as well as those used by the MSR and the MH in our experiments did not have the fast retransmit and fast recovery mechanisms recently proposed <ref> [46] </ref>. Also, the minimum TCP retransmission timeout was 500 msec. even for the wireless link, which clearly did not allow early detection of lost segments. <p> Link layer retransmission (LLR) can be used on error-prone wireless links to bring their error rate on par with that on the wired networks but such an approach interferes with the end-to-end retransmissions of TCP and does not always result in improved performance [26]. Fast retransmission <ref> [46] </ref> coupled with modification of the TCP software on the mobile hosts [20] solves only part of the problem because the transmitting host still performs a slow start if more than one segment is lost per window, thus limiting the effective throughput. <p> The loss of throughput can also occur because of packets lost over the wireless medium due to bit errors. 8.2.1 TCP extensions at the end points TCP extensions for high performance including fast retransmissions were proposed in <ref> [46] </ref> to deal with occasional losses over links with high bandwidth-delay products. Fast retransmission can also be used over wireless links to recover from packet loss due to occasional wireless errors. This method however, cannot in general deal with multiple segment losses per transmission window.
Reference: [47] <author> D.B. Johnson, C. Perkins, and A. Myles. </author> <title> Route optimization in Mobile IP. Network Working Group, </title> <type> Internet Draft, </type> <month> March </month> <year> 1995. </year>
Reference-contexts: It is possible however, to add the missing functionality to the IETF proposal, e.g. by a user level mechanism outside the Mobile IP protocol. A modified version of the IETF proposal based on short-cut routing <ref> [47] </ref> has a provision for notifying the previous MSR when an MH moves, and thus can be used as a network layer protocol for the transport and session layers described in this dissertation. <p> The current IETF draft version is not optimal in routing data packets to mobile hosts, although modifications to the IETF draft have been suggested <ref> [47] </ref> to support optimal routing. Another important issue with routing data packets to mobile hosts is that of forwarding packets addressed to a mobile that arrive at the old location of the mobile after it has moved to a new location. <p> However, another proposal that adds optimal routing to the basic IETF proposal is under development <ref> [47] </ref>. This proposal requires the new foreign agent to notify the old foreign agent when an MH moves to the new foreign agent's cell.
Reference: [48] <author> Anthony D. Joseph, Alan F. deLespinasse, Joshua A. Tauber, David K. Gifford, and M. Frans Kaashoek. </author> <title> Rover: A toolkit for mobile information access. </title> <booktitle> In Proc. of the 15th Symposium on Operating Systems Principles (SOSP), </booktitle> <month> December </month> <year> 1995. </year>
Reference-contexts: By contrast, the M-RPC agent in our system is a trusted representative of the mobile client and is authorized to make RPC requests and collect results on its behalf. Rover <ref> [48] </ref>, which is a toolkit for mobile applications uses a local and remote proxies for its transport layer that is quite similar to our indirect model. The local proxy resides on the mobile client whereas the remote proxy accesses HTTP servers with client requests.
Reference: [49] <author> J. Jubin and J.D. Tornow. </author> <title> The DARPA packet radio network protocols. </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> 75(1) </volume> <pages> 21-32, </pages> <month> January </month> <year> 1987. </year>
Reference-contexts: Another example is a network of communication satellites orbiting the earth in multiple planes with each plane moving with respect to the others thus forming a dynamic but predictably changing topology. Packet radio networks <ref> [49] </ref> are examples of a stable but entirely wireless network topology.
Reference: [50] <author> E. </author> <month> Jul. </month> <title> Object Mobility in a Distributed Object-Oriented System. </title> <type> Ph.D. dissertation, </type> <institution> Washington University, </institution> <address> Seattle, </address> <month> December </month> <year> 1988. </year>
Reference-contexts: The same TCP connection is however split at a mobility support gateway (MSG) when the MH moves away. 8.3 Handoffs and State Migration Although the idea of migrating objects and processes has been around for a while <ref> [27, 50] </ref>, we are not aware of any work preceding ours that allows migration of active transport and higher layer connections from one machine to another.
Reference: [51] <author> C.K. Kantarjiev, A. Demers, R. Frederick, R.T. Krivacic, and M. Weiser. </author> <title> Experiences with x in a wireless environment. </title> <booktitle> In Proc. of the USENIX Symposium on Mobile and Location-Independent Computing, </booktitle> <month> August </month> <year> 1983. </year>
Reference: [52] <author> K. Keeton, B. Mah, S. Seshan, and R.H. Katz. </author> <title> Providing connection-oriented network services to mobile hosts. </title> <booktitle> In Proc. of the USENIX Symposium on Mobile and Location-independent Computing, </booktitle> <month> August </month> <year> 1993. </year>
Reference: [53] <author> J. Kistler and M. Satyanarayanan. </author> <title> Disconnected operation in the Coda file system. </title> <journal> ACM Trans. on Computer Systems, </journal> <volume> 10(1), </volume> <month> February </month> <year> 1992. </year>
Reference-contexts: The information about the mobile's location could then be used to correctly route datagrams which were addressed to the mobile computer. There were other proposals that would take care of disconnections, although at higher protocol layers e.g. in file systems <ref> [35, 53] </ref>. It was not long before researchers realized that supporting mobile computers needed more than an adaptive routing layer that could track a mobile's location. In 1994 Caceres and Iftode showed with their experiments that host motion can significantly affect the end-to-end throughput of a TCP connection [20]. <p> A planned disconnection may occur when an MH goes into what is known as the doze mode to save battery power. One obvious way to handle disconnections is to leave individual applications to take care of them. One example of such an approach is Coda <ref> [53] </ref> which handles disconnections at the application support (file system) layer allowing stand-alone client file systems which can be integrated with the file server after reconnection. The above approach however is not general enough to be suitable for all kinds of mobile applications. <p> Applications that are unprepared for such disconnections will thus almost certainly exit with error status. Other applications may need to work solely with locally cached copies of remote objects. Long term disconnections can almost always be anticipated and thus mobile applications can benefit from hoarding <ref> [53] </ref> the data that will potentially be needed during a disconnection. 134 Reconnection after a long term disconnection can be fairly complex requiring user intervention in some cases to resolve update conflicts that cannot be automatically resolved. <p> Long term disconnections have been dealt with extensively in Coda and similar systems <ref> [35, 53] </ref>, albeit in the limited context of file systems. We also do not deal with partial or weak connectivity [36, 61] which can essentially be treated as a combination of short term disconnections and reduced available bandwidth. <p> occurs because we believe that longer (planned) disconnections should be handled by 2 We currently have only two kinds of intermediaries, one each for I-TCP and M-RPC. 142 higher layers possibly after preparing for them e.g. by hoarding files that will be needed in the stand alone mode of operation <ref> [53] </ref>. Freezing a reliable transport layer connection will cause an application that reads/writes data from/to a socket to hang, but a careful programmer will employ other means such as non-blocking read/write or the select system call to guard against this possibility. <p> A mobile application can ask for a binding to the nearest printer via the current MSR, and it is the responsibility of the MSRs to switch this binding to another printer in case the mobile changes cells causing a change in the nearest printer. 155 8.7 Disconnected Operation Coda <ref> [53] </ref> pioneered the concept of disconnected operation in a distributed file system environment. In Coda, disconnection handling is based on caching of those files on a client machine which will be needed during a disconnection, logging updates to such files and integrating the updates with the file server on reconnection.
Reference: [54] <author> M. Kojo, K. Raatikainen, and T. Alanko. </author> <title> Connecting mobile workstations to the internet over a digital cellular telephone network. </title> <booktitle> In Proc. of the Mobidata Workshop on Mobile and Wireless Information Systems, </booktitle> <month> November </month> <year> 1984. </year>
Reference-contexts: In this case that router will be our intermediary. A similar scheme has been used to connect mobile computers to public telephone networks via a cellular link and has been described in <ref> [54] </ref>. In such a case, the intermediary may actually control many wireless base stations in a geographic area. Thus in a CDPD setup, the MDIS can be the place of choice for the intermediary. <p> Experiments with split TCP [93] have shown performance improvement over regular TCP where a smaller MTU is used over the wireless part of the split connection. A similar scheme to connect mobile hosts to the Internet using a digital cellular network has been described in <ref> [54] </ref>. <p> A similar scheme to connect mobile hosts to the Internet using a digital cellular network has been described in <ref> [54] </ref>. This scheme has the advantage that transport layer handoffs are not needed when a mobile switches cells since the intermediate point of the split TCP connection resides on a host within the cellular telephone network that is connected to multiple cellular base stations.
Reference: [55] <author> Leslie Lamport. </author> <title> L A T E X: A Document Preparation System. </title> <publisher> Addison-Wesley, </publisher> <address> Reading Massachussetts, </address> <year> 1986. </year>
Reference: [56] <author> W. Lee. </author> <title> Overview of cellular CDMA. </title> <journal> IEEE Transactions on Vehicular Technology, </journal> <volume> 40(2) </volume> <pages> 291-302, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: Most digital cellular standards in use today employ Time Division Multiple Access (TDMA) to divide available channel capacity among different users. A competing technology based on Code Division Multiple Access (CDMA) <ref> [56] </ref> has been proposed by Qualcomm Inc. to provide digital cellular and PCS services in both 800 MHz and 1800 MHz bands. 5 1.2 Mobile Computing The popularity of cellular phones and a perceived demand for Personal Communications Services (PCS) has signaled the rising potential of mobile computing.
Reference: [57] <editor> S.J. Le*er, M.K. McKusick, M.J. Karels, and J.S. </editor> <title> Quarterman. The design and implementation of the 4.3BSD UNIX Operating System. </title> <publisher> Addison Wesley, </publisher> <year> 1989. </year>
Reference-contexts: These library calls are similar in the interface they provide and the function they perform, to the socket calls made by an applications using regular end-to-end TCP. The I-TCP library is currently available for Unix systems based on 4.3 BSD <ref> [57] </ref>. This library hides from the applications the communication needed with the MSR for the establishment and tearing down of an I-TCP connection. 2. MSR side Most of the functionality for supporting I-TCP connections lies with the MSR.
Reference: [58] <author> P. Manzoni, D. Ghosal, and G. </author> <title> Serazzi. Impact of mobility on TCP/IP: an integrated performance study. </title> <journal> IEEE Journal on Selected Areas in Communications (JSAC), </journal> <year> 1995. </year>
Reference-contexts: It was not long before researchers realized that supporting mobile computers needed more than an adaptive routing layer that could track a mobile's location. In 1994 Caceres and Iftode showed with their experiments that host motion can significantly affect the end-to-end throughput of a TCP connection [20]. Other studies <ref> [26, 58] </ref> 11 published subsequently also pointed out the deficiency of TCP in handling mobility and wireless links. <p> UDP is clearly inadequate for error-prone wireless links. TCP, although it provides reliable delivery, is not suitable for request-response kind of communication. Further, in a mobile wireless environment, TCP performance degrades because of wireless errors and moves <ref> [20, 26, 58] </ref>.
Reference: [59] <author> D. McDysan and D. Sphon. </author> <title> ATM Theory and Application. </title> <publisher> McGraw Hill, </publisher> <year> 1995. </year> <month> 171 </month>
Reference-contexts: With the deployment of 1 Assuming that network routers route packets looking at the destination address only. 2 Unless a mobile user is willing to plug in a connecting cord after every move. 29 ATM <ref> [59] </ref> LANs, the fixed network bandwidths are expected to go even higher in the Gigabit range. Wireless links also have higher error rates compared to the wired links. One reason for higher error rates is that wireless links are prone to interference from sources of electromagnetic energy in the vicinity.
Reference: [60] <author> G. Montenegro and S. Drach. </author> <title> System isolation and network fast fail capability in Solaris. </title> <booktitle> In Proc. of the 2nd USENIX Symposium on Mobile and Location-Independent Computing, </booktitle> <pages> pages 67-78, </pages> <month> April </month> <year> 1995. </year>
Reference-contexts: In BSD kernels, this upward propagation of notifications received by the ICMP layer is achieved through the ctl input interface between adjacent protocol layers. An example of the use of ICMP messages for reporting disconnections is the fast fail mechanism described in <ref> [60] </ref>. In this mechanism, applications on a mobile host are informed about a disconnection by means of a locally generated ICMP message, when they attempt to use the network. We use locally generated ICMP messages both at the MH and the MSR to report disconnections as well as reconnections. <p> At the MSR, these messages are sent by the msrmicp process. In both cases, the ICMP messages are sent to the local host address. Instead of taking the approach of overloading the existing ICMP types and codes as in <ref> [60] </ref>, we added a new type ICMP LINKSTAT to the ICMP protocol. We are planning to utilize this new type to inform the protocol layers at the MH and its MSR about changes in the 140 wireless link conditions as well. <p> The features supported in our system can be refined by individual applications (including file systems) to provide reasonable performance in the presence of disconnections. Our approach is similar to the fast fail approach described in <ref> [60] </ref> we also use ICMP [69] messages to report disconnections. The difference is that with the fast fail approach an application may fail and exit even with a temporary disconnection while in our scheme the duration of the disconnection determines how high the corresponding notification propagates in the protocol stack.
Reference: [61] <author> L.B. Mummert, M.R. Ebling, and M. Satyanarayanan. </author> <title> Exploiting weak connectivity for mobile file access. </title> <booktitle> In Proc. of the 15th Symposium on Operating Systems Principles (SOSP), </booktitle> <month> December </month> <year> 1995. </year>
Reference-contexts: Long term disconnections have been dealt with extensively in Coda and similar systems [35, 53], albeit in the limited context of file systems. We also do not deal with partial or weak connectivity <ref> [36, 61] </ref> which can essentially be treated as a combination of short term disconnections and reduced available bandwidth. We limit ourselves to dealing with mechanisms for handling short term and medium term disconnections at transport and RPC layers. <p> More recently, features have been added to Coda to handle weakly connected clients <ref> [61] </ref> exploiting links with low bandwidth and/or intermittent connectivity, which are common in mobile computing. Little Work [35, 36] is another system that handles disconnected and weakly connected file system clients using file caching and logging of updates.
Reference: [62] <author> A. Myles and D. Skellern. </author> <title> Comparison of mobile host protocols for IP. </title> <journal> Journal of Internetworking Research and Experience, </journal> <volume> 4(4), </volume> <month> December </month> <year> 1993. </year>
Reference: [63] <author> J. Nagle. </author> <title> Congestion control in IP/TCP internetworks. Request for Comments 896, </title> <month> January </month> <year> 1984. </year>
Reference-contexts: Due to these reasons TCP, which is the most popular transport layer protocol used over the Internet, treats packet loss as an indication of network congestion <ref> [63] </ref>. Typical response to packet loss in an end-to-end TCP conversation is that the sender slows down its transmitting rate until it starts receiving acknowledgments for retransmitted data. Even after conditions improve on the TCP connection, as indicated by incoming acknowledgements, TCP avoids pumping data too fast into the network. <p> The increased packet loss over wireless also triggers congestion control at the transmitting host which further degrades the throughput [20]. This problem is made worse by the assumption of reliable links underlying the congestion control policies <ref> [44, 63] </ref> which have evolved for the wired network. 53 Congestion control and recovery in TCP The congestion control algorithm employed by TCP works well with high reliability wired links, but leads to poor performance when one of the links in an end-to-end TCP connection is wireless [26].
Reference: [64] <author> M. Nelson and Y. Khalidi. </author> <title> Generic support for caching and disconnected operation. </title> <booktitle> In Proc. of the 4th Workshop on Workstation Operating Systems (WWOS-IV), </booktitle> <month> October </month> <year> 1993. </year>
Reference: [65] <author> B. Noble, M. Price, and M. Satyanarayanan. </author> <title> A programming interface for application-aware adaptation in mobile computing. </title> <booktitle> In Proc. of the Fifth Workshop on Hot Topics in Operating Systems (HoTOS-V), </booktitle> <month> May </month> <year> 1995. </year>
Reference-contexts: Agent based many-to-many RPC described in [92] allows integration of results from multiple servers and callbacks. 8.6 Dynamic Adaptation to Changes in the Environment Schemes for adaptive presentation of data to mobile clients have been described recently in <ref> [65] </ref> and [94]. Out of these two, the first describes an API that allows applications on a mobile client to monitor changes in their environment and request changes in the allocated resources based on the environment.
Reference: [66] <author> H.W. Nylund and R.M. Swanson. </author> <title> Improved mobile dial telephone system. </title> <journal> IEEE Transactions on Vehicular Communications, </journal> <volume> 12(1) </volume> <pages> 32-36, </pages> <year> 1963. </year>
Reference-contexts: In the U.S., a standard for mobile telephony, known as the Improved Mobile Telephone Service (IMTS), was proposed as early as 1963 <ref> [66] </ref>. A commercial system based on this proposal went into use in the mid-1960s. This system was designed around high power mobile phones operating in the 150 MHz and 450 MHz bands with a range of 20-25 miles.
Reference: [67] <institution> Common object request broker architecture and specification. Object Management Group, OMG document 91.12.1, </institution> <month> December </month> <year> 1991. </year>
Reference-contexts: Therefore in our scheme, the agent at the MSR is responsible for providing switchable bindings. The need for subject based naming and binding in dissemination-oriented protocols was also emphasised by Cheriton [24]. Object request brokers (ORBs) which are part of the infrastructure in CORBA specifications <ref> [67] </ref> also behave as agents mapping client requests to servers.
Reference: [68] <author> J. Postel. </author> <title> User datagram protocol. Request for Comments 768, </title> <month> August </month> <year> 1980. </year>
Reference-contexts: In the discussion that follows, we will use a conventional client-server application based on SunRPC for reference, even though the discussion is equally applicable to other similar RPC implementations. 6.2.1 Flexible transport layer SunRPC allows the use of both connectionless (e.g. UDP) <ref> [68] </ref> and connection oriented (e.g. TCP) [70] transport layers for network communication. Use of a connectionless transport protocol allows servers in an RPC application to be stateless. For example, NFS implementations using UDP work quite well over a LAN, even though UDP does not provide reliable delivery of datagrams.
Reference: [69] <author> J. Postel. </author> <title> Internet control message protocol. Request for Comments 777, </title> <month> April </month> <year> 1981. </year>
Reference-contexts: Applications running on mobile hosts. 2. Protocol related user level libraries, e.g. I-TCP and M-RPC MH side libraries. 3. Protocol layers in the MH and MSR kernels. 4. Mediating user level agents at the MSR, e.g. I-TCP and M-RPC daemons. We use the Internet Control Message Protocol (ICMP) <ref> [69] </ref> to send notification of disconnection and reconnection events to the MH and MSR kernels. In addition, user level applications and protocol libraries at the MH and protocol agents running on the MSR can discover disconnections and reconnections by subscribing to a notification 139 service exported by an event manager. <p> The features supported in our system can be refined by individual applications (including file systems) to provide reasonable performance in the presence of disconnections. Our approach is similar to the fast fail approach described in [60] we also use ICMP <ref> [69] </ref> messages to report disconnections. The difference is that with the fast fail approach an application may fail and exit even with a temporary disconnection while in our scheme the duration of the disconnection determines how high the corresponding notification propagates in the protocol stack. <p> Propagation of the events to the protocol layers is based on an extension of the ICMP protocol <ref> [69] </ref>. 9.2 Future Directions There are several different ways one can go to build upon the work presented in this dissertation. Some of what we describe below is related to improving the protocols that we presented in the previous chapters.
Reference: [70] <author> J. Postel. </author> <title> Transmission control protocol. Request for Comments 793, </title> <month> September </month> <year> 1981. </year>
Reference-contexts: The TCP/IP suite of protocols differs from the ISO/OSI model in the following respects. The transport layer (implemented by TCP <ref> [70] </ref>) provides reliable sequenced end-to-end delivery of data assuming that the underlying network and data link layers are unreliable. Thus TCP provides combined functionality of the transport and session layers in the ISO/OSI model. <p> Error control over wireless links can be implemented using either retransmissions at the link layer, or forward error correction (FEC). Both methods have disadvantages. Link layer retransmission (LLR) typically interferes with end-to-end retransmission of lost data by the transport layer in reliable transport protocols such as TCP <ref> [70] </ref>. LLR also makes accurate estimation of round trip delay difficult, which can cause performance problems with transport protocols that depend too heavily on such estimates. With unreliable stream protocols for audio or video applications, it may actually be possible to live with holes in data streams. <p> One example of a transport level protocol is TCP <ref> [70] </ref>, which provides support for stream oriented communication as well as reliable delivery. Reliable sequenced end-to-end communication requires retransmissions of lost data and associated timers. Transport layer performance often critically depends upon timely detection of lost segments using accurate estimation of round-trip delays. <p> In the discussion that follows, we will use a conventional client-server application based on SunRPC for reference, even though the discussion is equally applicable to other similar RPC implementations. 6.2.1 Flexible transport layer SunRPC allows the use of both connectionless (e.g. UDP) [68] and connection oriented (e.g. TCP) <ref> [70] </ref> transport layers for network communication. Use of a connectionless transport protocol allows servers in an RPC application to be stateless. For example, NFS implementations using UDP work quite well over a LAN, even though UDP does not provide reliable delivery of datagrams.
Reference: [71] <author> J. Postel. </author> <title> Simple mail transfer protocol. Request for Comments 821, </title> <month> August </month> <year> 1982. </year>
Reference-contexts: The local proxy resides on the mobile client whereas the remote proxy accesses HTTP servers with client requests. The transport layer between the proxies can use SMTP <ref> [71] </ref> whereas the transport layer between the remote proxy and the HTTP server uses TCP.
Reference: [72] <author> F. Quick and K. Balachandran. </author> <title> An overview of cellular digital packet data (CDPD) system. </title> <booktitle> In Proc. of the fourth Int'l Symposium on personal, indoor and mobile radio communications, </booktitle> <address> Yokohama, Japan, </address> <month> September </month> <year> 1993. </year>
Reference-contexts: If a mobile user crosses the boundary between two cells in the middle of a call, the telephone conversation is handed off to the new cell under the control of the MTSO. At present, digital cellular systems are being deployed in Europe, Japan and the U.S. <ref> [72, 73] </ref>, which are expected to increase the capacity manifold over the existing analog systems such as AMPS. These digital systems will provide data services suitable for users of mobile computers thus obviating the need of using cellular modems over analog channels for the transmission of data. <p> Wireless links used for personal communications and indoor LANs typically have lower bandwidth compared to the wired links. Currently cellular data services can support bandwidths up to 19.2 Kbps with CDPD <ref> [72] </ref> although the actual data rate is only about 9.6 Kbps. GSM [73], which is the European standard for digital cellular services also supports data rates up to 9.6 Kbps. Both CDPD and GSM provide wide area coverage for mobile users. <p> The link layer can also automatically register an MH with a base station or an MSR that is within the hearing range of the MH as in CDPD systems <ref> [72] </ref>. Alternatively, the functionality related to maintaining and monitoring link layer connectivity over wireless can be programmed at the user level as in Columbia Mobile 136 IP [40]. <p> Handoff models in cellular systems and mobile IP schemes <ref> [41, 72, 73, 74, 87, 91] </ref> typically deal with lower layer handoffs which do not involve transport and higher layers. 153 A more recent scheme of handing off TCP related state information pertaining to the snoop layer [2] uses multicasting to propagate the TCP state to other mobility support routers in
Reference: [73] <author> M. Rahnema. </author> <title> Overview of the GSM system and protocol architecture. </title> <journal> IEEE Communications Magazine, </journal> <volume> 31(4) </volume> <pages> 92-100, </pages> <month> April </month> <year> 1993. </year>
Reference-contexts: If a mobile user crosses the boundary between two cells in the middle of a call, the telephone conversation is handed off to the new cell under the control of the MTSO. At present, digital cellular systems are being deployed in Europe, Japan and the U.S. <ref> [72, 73] </ref>, which are expected to increase the capacity manifold over the existing analog systems such as AMPS. These digital systems will provide data services suitable for users of mobile computers thus obviating the need of using cellular modems over analog channels for the transmission of data. <p> Wireless links used for personal communications and indoor LANs typically have lower bandwidth compared to the wired links. Currently cellular data services can support bandwidths up to 19.2 Kbps with CDPD [72] although the actual data rate is only about 9.6 Kbps. GSM <ref> [73] </ref>, which is the European standard for digital cellular services also supports data rates up to 9.6 Kbps. Both CDPD and GSM provide wide area coverage for mobile users. <p> Handoff models in cellular systems and mobile IP schemes <ref> [41, 72, 73, 74, 87, 91] </ref> typically deal with lower layer handoffs which do not involve transport and higher layers. 153 A more recent scheme of handing off TCP related state information pertaining to the snoop layer [2] uses multicasting to propagate the TCP state to other mobility support routers in
Reference: [74] <author> Y. Rekhter and C. Perkins. </author> <title> Optimal routing for mobile hosts using IP's loose source route option. </title> <type> Internet Draft, </type> <month> October </month> <year> 1992. </year>
Reference-contexts: This was indeed the approach taken by all the initial proposals for accommodating mobile and wireless computers in the existing internetworks. These proposals <ref> [41, 74, 87, 91] </ref> argued for modifications in the routing functionality at the IP layer, which would allow IP routers to keep track of the location of a mobile computer as it wandered from one place to another. <p> In a mobile computer the two clearly need to be separate 22 because the address of a mobile host may change as it changes its location but its name does not. A variety of schemes for routing and location management has been proposed for mobile hosts <ref> [41, 43, 74, 87, 91] </ref>. We will briefly discuss a few here which are important for the understanding of our protocol design. <p> A modified version of the IETF proposal based on short-cut routing [47] has a provision for notifying the previous MSR when an MH moves, and thus can be used as a network layer protocol for the transport and session layers described in this dissertation. Other Mobile IP proposals <ref> [74, 87, 91] </ref> differ only slightly from the schemes described above in the two aspects of routing and location management and thus can be used 24 with our proposed protocols, possibly with minor modifications. 2.7 Application Layer The application layer in our system model utilizes the enhanced functionality provided by protocol <p> of wireless equipment such as WaveLAN use simple checksums to detect and drop data packets arriving in error at the receiver, thus leaving it to the higher layers to take care of retransmitting lost data. 3.2.2 Network layer In the last few years, several mobile IP schemes have been proposed <ref> [41, 74, 87, 91] </ref>, which address the most important problem in supporting host mobility within the Internet, viz. that of routing data packets to mobile hosts. <p> Handoff models in cellular systems and mobile IP schemes <ref> [41, 72, 73, 74, 87, 91] </ref> typically deal with lower layer handoffs which do not involve transport and higher layers. 153 A more recent scheme of handing off TCP related state information pertaining to the snoop layer [2] uses multicasting to propagate the TCP state to other mobility support routers in
Reference: [75] <author> J.H. Saltzer, D.P. Reed, and D.D. Clark. </author> <title> End-to-end arguments in system design. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 2(4), </volume> <year> 1984. </year>
Reference: [76] <author> B. Schilit, M. Theimer, and B. Welch. </author> <title> Customizing mobile applications. </title> <booktitle> In Proc. of the USENIX Symposium on Mobile and Location-independent Computing, </booktitle> <month> August </month> <year> 1993. </year> <month> 172 </month>
Reference-contexts: The second scheme describes installing filters at the MSRs under MH control using Mach IPC for communication between the MH and the MSR over the wireless medium. Another scheme supporting dynamic adaptation for mobile applications is presented in <ref> [76] </ref>. In this scheme, applications subscribe to an environment server to track changes in the dynamic environment variables such as LOCATION and NEAREST PRINTER. In our M-RPC system on the other hand, applications are not required to track such changes.
Reference: [77] <author> M. Schwartz. </author> <title> Telecommunication Networks: Protocols, Modeling and Analysis. </title> <publisher> Addison Wesley, </publisher> <year> 1987. </year>
Reference: [78] <author> K. Shrivastava, G.N. Dixon, and G.D. Parrington. </author> <title> An overview of the arjuna distributed programming system. </title> <journal> IEEE Software, </journal> <pages> pages 66-73, </pages> <month> January </month> <year> 1991. </year>
Reference-contexts: Distributed remote object invocation from mobile hosts. This may include obtaining a reference to a remote object and invoking operations on it. Such remote object invocation is the basis for structuring distributed applications in systems like ANSA [3] and Arjuna <ref> [78] </ref>. 6.3 Overview of M-RPC System We describe here an RPC system for mobile clients, which we call M-RPC. This RPC system has been designed to satisfy the needs of applications running in a mobile wireless environment. Some of these needs were outlined in the previous section.
Reference: [79] <author> C.K. Siew and D.J. Goodman. </author> <title> Packet data transmission over mobile radio channels. </title> <journal> IEEE Transactions on Vehicular Technology, </journal> <volume> 38(2) </volume> <pages> 95-101, </pages> <month> May </month> <year> 1989. </year>
Reference: [80] <author> W. Richard Stevens. </author> <title> UNIX network programming. </title> <publisher> Prentice Hall, </publisher> <year> 1990. </year>
Reference-contexts: The Open Systems Interconnection or the 7-layer protocol model proposed by the International Standards Organization, known popularly as the ISO/OSI model [95], is widely used as a reference model for protocol design. On the other hand the TCP/IP protocol suite <ref> [80] </ref> has become the de facto standard for internetworking today due to its widespread use. <p> Although the TCP/IP suite of protocols <ref> [80] </ref> does not follow the ISO/OSI model very closely, many similarities exist between the two. We will use the TCP/IP stack as an example protocol stack for the following discussion because it has become a de facto standard in the networking community.
Reference: [81] <author> W.T. Strayer, S. Gray, and R.E. Cline Jr. </author> <title> An object-oriented implementation of the Xpress Transfer Protocol. </title> <booktitle> In Proc. of the Second Intl. Workshop on Advanced Communications and Applications for High-Speed Networks (IWACA), </booktitle> <address> Heidelberg, Germany, </address> <month> September </month> <year> 1994. </year>
Reference: [82] <author> W.T. Strayer, M.J. Lewis, and R.E. Cline Jr. </author> <title> XTP as a transport protocol for distributed parallel processing. </title> <booktitle> In Proc. of the USENIX Symposium on High-Speed Networking, </booktitle> <address> Oakland, CA, </address> <month> August </month> <year> 1994. </year>
Reference: [83] <author> XDR: </author> <title> External data representation standard. Sun Microsystems, Request for Comments 1014, </title> <year> 1987. </year>
Reference-contexts: A simple name lookup mechanism is provided in the form of a portmapper running on the server machine. SunRPC implementations support External Data Representation standard (XDR) <ref> [83] </ref>, which is a presentation layer protocol and also a facility called rpcgen to generate stubs for clients and servers. For mobile clients, an RPC service should allow the switching of client-server binding from one server to another when a user moves from one location to another.
Reference: [84] <author> NFS: </author> <title> Network file system protocol specification. Sun Microsystems, Request for Comments 1094, </title> <year> 1988. </year>
Reference-contexts: Such applications thus do not attempt to optimize the number of messages exchanged between a client and a server. For example, control messages between clients and a server in Sun's network file system (NFS) <ref> [84] </ref>, to refresh a file system handle, form a significant portion of the overall file system traffic. <p> The RPC layer hides the network communication from the client and server applications thereby making the design of distributed applications easier. SunRPC [85] is one of the most commonly used RPC implementations which also forms the basis for Sun's network file system (NFS) <ref> [84] </ref>. Below we explore the limitations of current RPC implementations in supporting mobile client applications.
Reference: [85] <author> RPC: </author> <title> Remote procedure call, protocol specification, version 2. Sun Microsystems, Request for Comments 1057, </title> <year> 1988. </year>
Reference-contexts: An RPC layer also provides name lookup mechanisms and facility to bind to a server which processes remote call requests from client applications. As an example, SunRPC <ref> [85] </ref> can be considered a session layer protocol, which allows for binding to a server using the clnt create call. A simple name lookup mechanism is provided in the form of a portmapper running on the server machine. <p> Since client and server hosts are both stationary, there is rarely any need to change the server in such applications. The presence of mobile hosts within a network invalidates many assumptions that formed the basis for design and implementation of RPC systems in use today, e.g. 108 SunRPC <ref> [85] </ref>. Mobile hosts can move from one cell to another and can remain disconnected from the fixed network for extended periods to conserve scarce battery power. <p> The RPC layer hides the network communication from the client and server applications thereby making the design of distributed applications easier. SunRPC <ref> [85] </ref> is one of the most commonly used RPC implementations which also forms the basis for Sun's network file system (NFS) [84]. Below we explore the limitations of current RPC implementations in supporting mobile client applications. <p> These client stubs can be generated by an RPC stub generator such as rpcgen, which is part of the SunRPC distribution <ref> [85] </ref>. As in SunRPC, the client stubs in M-RPC perform the task of marshaling the arguments and unmarshaling the results for a remote procedure call. Before the client application can make any RPC requests, it has to obtain a client handle from the M-RPC system. <p> have, the sender retransmits 10 times before giving up waiting (# past retransmissions + 1) * RTT between successive retransmissions. 144 7.6.1 Asynchronous calls and retrievals Keeping in view the above mentioned difficulties and our desire to maintain backward compatibility as much as possible with existing applications based on SunRPC <ref> [85] </ref>, we extended SunRPC client side interface to allow asynchronous calls and retrievals. Asynchronous calls and retrievals allow an application to do useful work if a remote call takes a long time to return, especially so with mobile clients which may be often disconnected. <p> Thus we do not allow multiple outstanding remote procedure calls using the same client handle. Asynchronous calls and retrievals can be accessed on the client side of the M-RPC system using the low level RPC mechanism of clnt call <ref> [85] </ref>. This facility is available only on client handles created using the indirect RDP/UDP transport facility, i.e. by choosing "rdp" as the transport protocol in the clnt create request.
Reference: [86] <author> A. Tanenbaum. </author> <title> Computer Networks. </title> <publisher> Prentice Hall, </publisher> <address> second edition, </address> <year> 1989. </year>
Reference: [87] <author> F. Teraoka, Y. Yokote, and M. Tokoro. </author> <title> A network architecture providing host migration transparency. </title> <booktitle> In Proc. of ACM SIGCOMM, </booktitle> <pages> pages 209-220, </pages> <month> September </month> <year> 1991. </year>
Reference-contexts: This was indeed the approach taken by all the initial proposals for accommodating mobile and wireless computers in the existing internetworks. These proposals <ref> [41, 74, 87, 91] </ref> argued for modifications in the routing functionality at the IP layer, which would allow IP routers to keep track of the location of a mobile computer as it wandered from one place to another. <p> In a mobile computer the two clearly need to be separate 22 because the address of a mobile host may change as it changes its location but its name does not. A variety of schemes for routing and location management has been proposed for mobile hosts <ref> [41, 43, 74, 87, 91] </ref>. We will briefly discuss a few here which are important for the understanding of our protocol design. <p> A modified version of the IETF proposal based on short-cut routing [47] has a provision for notifying the previous MSR when an MH moves, and thus can be used as a network layer protocol for the transport and session layers described in this dissertation. Other Mobile IP proposals <ref> [74, 87, 91] </ref> differ only slightly from the schemes described above in the two aspects of routing and location management and thus can be used 24 with our proposed protocols, possibly with minor modifications. 2.7 Application Layer The application layer in our system model utilizes the enhanced functionality provided by protocol <p> of wireless equipment such as WaveLAN use simple checksums to detect and drop data packets arriving in error at the receiver, thus leaving it to the higher layers to take care of retransmitting lost data. 3.2.2 Network layer In the last few years, several mobile IP schemes have been proposed <ref> [41, 74, 87, 91] </ref>, which address the most important problem in supporting host mobility within the Internet, viz. that of routing data packets to mobile hosts. <p> Handoff models in cellular systems and mobile IP schemes <ref> [41, 72, 73, 74, 87, 91] </ref> typically deal with lower layer handoffs which do not involve transport and higher layers. 153 A more recent scheme of handing off TCP related state information pertaining to the snoop layer [2] uses multicasting to propagate the TCP state to other mobility support routers in
Reference: [88] <author> C.A. Thekkath, H.M. Levy, and E.D. Lazowska. </author> <title> Separating data and control transfer in distributed operating systems. </title> <booktitle> In Proc. of the 6th Intl. Conf. on Architectural Support for Programming Languages and Operating Systems (ASPLOS-VI), </booktitle> <pages> pages 2-11, </pages> <month> October </month> <year> 1994. </year>
Reference-contexts: In addition, the indirect approach where the intermediary (or a set of intermediaries) exists at the application layer for supporting the execution of distributed algorithms over mobile hosts, has been investigated by Badrinath et al. [8]. Thekkath et al. <ref> [88] </ref> advocated the use of a server clerk on the client machine to separate control and data traffic in an RPC based file system. In their system the clerk is a trusted representative of the server and it can access server memory directly without any control overhead.
Reference: [89] <author> C.A. Thekkath, T.D. Nguyen, E. Moy, and E.D. Lazowska. </author> <title> Implementing network protocols at user level. </title> <booktitle> In Proc. of ACM SIGCOMM, </booktitle> <pages> pages 64-73, </pages> <month> September </month> <year> 1993. </year>
Reference: [90] <author> D. Velten, R. Hinden, and J. Sax. </author> <title> Reliable data protocol. Request for Comments 908, </title> <month> July </month> <year> 1984. </year>
Reference-contexts: This indirect protocol provides a UDP interface to the fixed hosts while using a reliable data protocol (RDP) <ref> [90] </ref> on the wireless link. The translation from RDP to UDP is performed by a daemon process running at the MSR. Client applications on mobile hosts, such as NFS clients, that wish to access UDP services on the fixed network can utilize RDP/UDP to protect themselves against excessive wireless losses.
Reference: [91] <author> H. Wada, T. Yozawa, T. Ohnishi, and Y. Tanaka. </author> <title> Mobile computing environment based on internet packet forwarding. </title> <booktitle> In Proc. of the USENIX Winter Technical Conference, </booktitle> <month> January </month> <year> 1993. </year>
Reference-contexts: This was indeed the approach taken by all the initial proposals for accommodating mobile and wireless computers in the existing internetworks. These proposals <ref> [41, 74, 87, 91] </ref> argued for modifications in the routing functionality at the IP layer, which would allow IP routers to keep track of the location of a mobile computer as it wandered from one place to another. <p> In a mobile computer the two clearly need to be separate 22 because the address of a mobile host may change as it changes its location but its name does not. A variety of schemes for routing and location management has been proposed for mobile hosts <ref> [41, 43, 74, 87, 91] </ref>. We will briefly discuss a few here which are important for the understanding of our protocol design. <p> A modified version of the IETF proposal based on short-cut routing [47] has a provision for notifying the previous MSR when an MH moves, and thus can be used as a network layer protocol for the transport and session layers described in this dissertation. Other Mobile IP proposals <ref> [74, 87, 91] </ref> differ only slightly from the schemes described above in the two aspects of routing and location management and thus can be used 24 with our proposed protocols, possibly with minor modifications. 2.7 Application Layer The application layer in our system model utilizes the enhanced functionality provided by protocol <p> of wireless equipment such as WaveLAN use simple checksums to detect and drop data packets arriving in error at the receiver, thus leaving it to the higher layers to take care of retransmitting lost data. 3.2.2 Network layer In the last few years, several mobile IP schemes have been proposed <ref> [41, 74, 87, 91] </ref>, which address the most important problem in supporting host mobility within the Internet, viz. that of routing data packets to mobile hosts. <p> Handoff models in cellular systems and mobile IP schemes <ref> [41, 72, 73, 74, 87, 91] </ref> typically deal with lower layer handoffs which do not involve transport and higher layers. 153 A more recent scheme of handing off TCP related state information pertaining to the snoop layer [2] uses multicasting to propagate the TCP state to other mobility support routers in
Reference: [92] <author> G. Welling and B.R. Badrinath. </author> <title> An architecture of a threaded many-to-many remote procedure call. </title> <booktitle> In Proc. of the 12th Intl. Conf. on Distributed Computing Systems, </booktitle> <pages> pages 504-511, </pages> <month> June </month> <year> 1992. </year> <month> 173 </month>
Reference-contexts: The need for subject based naming and binding in dissemination-oriented protocols was also emphasised by Cheriton [24]. Object request brokers (ORBs) which are part of the infrastructure in CORBA specifications [67] also behave as agents mapping client requests to servers. Agent based many-to-many RPC described in <ref> [92] </ref> allows integration of results from multiple servers and callbacks. 8.6 Dynamic Adaptation to Changes in the Environment Schemes for adaptive presentation of data to mobile clients have been described recently in [65] and [94].
Reference: [93] <author> R. Yavatkar and N. Bhagwat. </author> <title> Improving end-to-end performance of TCP over mobile internetworks. </title> <booktitle> In Proc. of the IEEE Workshop on Mobile Computing, </booktitle> <month> De-cember </month> <year> 1994. </year>
Reference-contexts: The idea of multicasting TCP related state information to all the adjacent MSRs may not scale well either, especially with large TCP window sizes. Experiments with split TCP <ref> [93] </ref> have shown performance improvement over regular TCP where a smaller MTU is used over the wireless part of the split connection. A similar scheme to connect mobile hosts to the Internet using a digital cellular network has been described in [54]. <p> to add transport layer functionality to the IP layer at the base station thus forcing the IP layer, which essentially works as a data-gram forwarding layer, to maintain state information and buffer space for each TCP connection that passes through the base station. 8.2.3 Split TCP Experiments with split TCP <ref> [93] </ref> have shown performance improvement over regular TCP where smaller MTU is used over the wireless part of the split connection. A similar scheme to connect mobile hosts to the Internet using a digital cellular network has been described in [54].
Reference: [94] <author> B. Zenel and D. Duchamp. </author> <title> Intelligent communication filtering for limited bandwidth environments. </title> <booktitle> In Proc. of the Fifth Workshop on Hot Topics in Operating Systems (HoTOS-V), </booktitle> <month> May </month> <year> 1995. </year>
Reference-contexts: Agent based many-to-many RPC described in [92] allows integration of results from multiple servers and callbacks. 8.6 Dynamic Adaptation to Changes in the Environment Schemes for adaptive presentation of data to mobile clients have been described recently in [65] and <ref> [94] </ref>. Out of these two, the first describes an API that allows applications on a mobile client to monitor changes in their environment and request changes in the allocated resources based on the environment.
Reference: [95] <author> H. Zimmermann. </author> <title> OSI reference model the ISO model of architecture for Open Systems Interconnection. </title> <journal> IEEE Trans. Communications, </journal> <volume> COM-28(4):425-432, </volume> <month> April </month> <year> 1980. </year> <month> 174 </month>
Reference-contexts: The Open Systems Interconnection or the 7-layer protocol model proposed by the International Standards Organization, known popularly as the ISO/OSI model <ref> [95] </ref>, is widely used as a reference model for protocol design. On the other hand the TCP/IP protocol suite [80] has become the de facto standard for internetworking today due to its widespread use. <p> Link awareness can be built into network protocols making use of the information provided by the lowest layers about the characteristics of the wireless medium. 3.2 Mobile Hosts and the Existing Protocols The ISO/OSI reference model <ref> [95] </ref> discussed earlier in chapter 1, has been a guiding model for many of the protocol suites that are used today for computer networking. Although the TCP/IP suite of protocols [80] does not follow the ISO/OSI model very closely, many similarities exist between the two.
References-found: 95

