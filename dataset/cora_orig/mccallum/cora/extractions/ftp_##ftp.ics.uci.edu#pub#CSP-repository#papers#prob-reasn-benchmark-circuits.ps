URL: ftp://ftp.ics.uci.edu/pub/CSP-repository/papers/prob-reasn-benchmark-circuits.ps
Refering-URL: http://www.ics.uci.edu/~mlearn/MLPapers.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: An evaluation of structural parameters for probabilistic reasoning:  
Abstract: Results on benchmark circuits Abstract Many algorithms for processing probabilistic networks are dependent on the topological properties of the problem's structure. Such algorithms (e.g., clustering, conditioning) are effective only if the problem has a sparse graph captured by parameters such as tree width and cycle-cutset size. In this paper we initiate a study to determine the potential of structure-based algorithms in real-life applications. We analyze empirically the structural properties of problems coming from the circuit diagnosis domain. Specifically, we locate those properties that capture the effectiveness of clustering and conditioning as well as of a family of conditioning+clustering algorithms designed to gradually trade space for time. We perform our analysis on 11 benchmark circuits widely used in the testing community. We also report on the effect of ordering heuristics on tree-clustering and show that, on our benchmarks, the well-known max-cardinality ordering is substantially inferior to an ordering called min degree.
Abstract-found: 1
Intro-found: 1
Reference: [ Arnborg et al., 1987 ] <author> S.A. Arnborg, D.G. Corneil, and A. Proskurowski. </author> <title> Complexity of finding embed-dings in a k-tree. </title> <journal> SIAM Journal of Discrete Mathematics., </journal> <volume> 8 </volume> <pages> 277-284, </pages> <year> 1987. </year>
Reference-contexts: In this case, no edges were added to the induced graph. The induced width of ordering d is 3. Although finding the optimal induced width of a graph is NP-hard <ref> [ Arnborg, 1985; Arnborg et al., 1987 ] </ref> , there are many greedy ordering algorithms that provide reasonable upper bounds. We experimented with the or-derings min-width, causal ordering, min-degree, and max-cardinality on our benchmarks. In the last section we briefly report the results of these experiments.
Reference: [ Arnborg, 1985 ] <author> S.A. Arnborg. </author> <title> Efficient algorithms for combinatorial problems on graphs with bounded decomposability a survey. </title> <journal> BIT, </journal> <volume> 25 </volume> <pages> 2-23, </pages> <year> 1985. </year>
Reference-contexts: In this case, no edges were added to the induced graph. The induced width of ordering d is 3. Although finding the optimal induced width of a graph is NP-hard <ref> [ Arnborg, 1985; Arnborg et al., 1987 ] </ref> , there are many greedy ordering algorithms that provide reasonable upper bounds. We experimented with the or-derings min-width, causal ordering, min-degree, and max-cardinality on our benchmarks. In the last section we briefly report the results of these experiments.
Reference: [ Bertele and Brioschi, 1972 ] <author> U. Bertele and F. Brioschi. </author> <title> Nonserial Dynamic Programming. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1972. </year>
Reference-contexts: Conditioning requires linear space only and its time complexity is exponentially bounded by the cycle-cutset size of the network's graph. It is known that the tree width is always less than or equal to the minimum cycle-cutset size plus one <ref> [ Bertele and Brioschi, 1972 ] </ref> . Recently, we introduced a collection of algorithms incorporating conditioning into clustering which alleviate the space needs of clustering and we identified the refined topological parameters that control their effectiveness [ Dechter, 1996 ] . <p> For more details, see [ Dechter and Pearl, 1989 ] . There are many possible heuristics for ordering the nodes with the aim of obtaining a join-tree with small clusters. We used the ordering min-degree which was proposed in the context of non-serial dynamic programming <ref> [ Bertele and Brioschi, 1972 ] </ref> , defined earlier. 4 STRUCTURAL PARAMETERS OF THE PRIMARY JOIN-TREE For each primary join-tree generated, three parameters are computed: (1) the size of the cliques, (2) the size of the cutsets in each of the subgraphs defined by the cliques, and (3) the size of
Reference: [ Brglez and Fujiwara, 1985 ] <author> F. Brglez and H. Fuji-wara. </author> <title> A neutral netlist of 10 combinational benchmark circuits and a target translator in fortran. </title> <booktitle> Proceedings of the IEEE International Symposium on Circuits and Systems, </booktitle> <month> June </month> <year> 1985. </year>
Reference-contexts: This domain is frequently used as an application area in both probabilistic and deterministic reasoning [ Geffner and Pearl, 1987; Srinivas, 1994; El Fattah and Dechter, 1995 ] . The experiments are conducted on 11 benchmark combinatorial circuits widely used in the fault diagnosis and testing community <ref> [ Brglez and Fujiwara, 1985 ] </ref> .(See Table 1.) These experiments allow us to assess in advance by graph manipulation only the complexity of diagnosis and abduction tasks on the benchmark circuits and to determine the best combination of tree-clustering and conditioning for the memory resources available to carry out the <p> For circuit c6288 (2448 variables), the separator width is only 53 for min-degree while it is 276 for max-cardinality. 7 SUMMARY AND CONCLUSIONS The paper describes an empirical study into the structural parameters of 11 benchmark circuits widely used in the fault diagnosis and testing community <ref> [ Brglez and Fujiwara, 1985 ] </ref> . The motivation for the study was evaluation of the effectiveness of topology-based algorithms, trading space for time on real-world examples.
Reference: [ Dechter and Meiri, 1994 ] <author> R. Dechter and I. Meiri. </author> <title> Experimental evaluation of preprocessing algorithms for constraint satisfaction problems. </title> <journal> Artificial Intelligence, </journal> <volume> 68(2) </volume> <pages> 211-241, </pages> <year> 1994. </year>
Reference-contexts: Previous experimental work with clustering and conditioning shows that while clustering methods have average-case complexity quite close to the worst-case bound, conditioning methods are sometime much more effective than their worst-case predictions <ref> [ Dechter and Meiri, 1994 ] </ref> . Thus, the corresponding algorithms must be tested in practice. Acknowledgements This work was partially supported by NSF grant IRI-9157636, Rockwell MICRO grant #ACM-20775 and 95-043 and Air Force Office of Scientific Research grant F49620-96-1-0224.
Reference: [ Dechter and Pearl, 1989 ] <author> R. Dechter and J. Pearl. </author> <title> Tree clustering for constraint networks. </title> <booktitle> Artificial Intelligence, </booktitle> <pages> pages 353-366, </pages> <year> 1989. </year>
Reference-contexts: Table 2 gives the number of nodes and edges in the moral graph for each circuit. Tree-clustering is performed on the moral graphs by first selecting an ordering for the nodes, then triangulating the graph (making it chordal) and identifying its maximum cliques. For more details, see <ref> [ Dechter and Pearl, 1989 ] </ref> . There are many possible heuristics for ordering the nodes with the aim of obtaining a join-tree with small clusters.
Reference: [ Dechter, 1990 ] <author> R. Dechter. </author> <title> Enhancement schemes for constraint processing incorporating backjump-ing, learning, and cutset decomposition. </title> <journal> Artificial Intelligence, </journal> <year> 1990. </year>
Reference-contexts: 1 INTRODUCTION Topology-based algorithms for probabilistic and deterministic reasoning fall into two distinct classes. One class is centered on clustering and elimination [ Lauritzen and Spiegelhalter, 1988; Shachter, 1986; Dechter and Pearl, 1989 ] , the other on cutset conditioning <ref> [ Pearl, 1988; Dechter, 1990 ] </ref> . Clustering involves transforming the original network into a tree that can then be processed by a linear-time algorithm designed for trees [ Pearl, 1986; Mackworth and Freuder, 1985 ] .
Reference: [ Dechter, 1996 ] <author> R. Dechter. </author> <title> Topological parameters for time-space tradeoff. </title> <booktitle> In Uncertainty in Artificial Intelligence (UAI-96), </booktitle> <year> 1996. </year>
Reference-contexts: Recently, we introduced a collection of algorithms incorporating conditioning into clustering which alleviate the space needs of clustering and we identified the refined topological parameters that control their effectiveness <ref> [ Dechter, 1996 ] </ref> . In this paper we initiate a study for determining the applicability of such structure-based methods (e.g., pure clustering, pure conditioning, and their hybrids), to real-life applications. To that end we investigate empirically their potential in the domain of processing combinatorial circuits. <p> The time and space complexity of tree-clustering is governed by the time and space required to generate the probability matrices over the cliques, and it is, therefore, exponential in the clique-size or, in the induced width. A tighter bound on space complexity is obtained using the separator width (see <ref> [ Dechter, 1996 ] </ref> for details). The separator sets (or, simply sepsets) are the variables in the intersections of adjacent cliques. Algorithm cycle-cutset is based on the idea that an assignment of values frequently cuts the dependencies associated with the assigned variable. <p> Fortunately, enumerating all the cutset's assignments can be accomplished in linear space. Therefore, conditioning methods have time complexity that is worst-case exponential in the cycle-cutset size of the moral graph and are space linear. 2 In summary, Theorem 1: [time-space of clustering and conditioning] <ref> [ Pearl, 1988; Lauritzen and Spiegelhalter, 1988; Dechter, 1996 ] </ref> Given a belief network whose moral graph can be embedded in clique-tree having induced width r, separator width s, and cycle-cutset c, for determining both the beliefs and the MPE by clustering the time complexity is is O (nexp (r+1)) and <p> Additional names are hyper-tree or, if the induced width is k, partial k-tree. 2 Better cutset bounds can be obtained by cutting cycles until the resulting graph is a poly-tree. adhere to predetermined space constraints. In a companion paper <ref> [ Dechter, 1996 ] </ref> , we present a method of incorporating conditioning into clustering that trades space for time. We summarize this work next. Since the separator width of a join-tree controls the space required by clustering, it controls the tradeoff. <p> By combining cliques having separators of size 3, we get the secondary tree T 1 (Figure 1e), and by combining cliques joined by separators of size 2, we get T 2 (Figure 1f). In summary: Theorem 2 : <ref> [ Dechter, 1996 ] </ref> Given a belief network whose moral graph can be embedded in a primary clique-tree having separator sizes s 0 ; s 1 ; :::; s n = 0 listed in strictly decreasing order, with corresponding maximal cluster sizes of r 0 ; r 1 ; :::; r <p> This is clearly not feasible. We will next evaluate the potential of the trade-off scheme proposed in <ref> [ Dechter, 1996 ] </ref> on our benchmarks. Let s 0 ; s 1 ; . . . ; s n be the size of the separators in T 0 listed from largest to smallest.
Reference: [ El Fattah and Dechter, 1995 ] <author> Y. El Fattah and R. Dechter. </author> <title> Diagnosing tree-decomposable circuits. </title> <booktitle> In Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence (IJCAI-95), </booktitle> <address> Montreal, Quebec, Canada, </address> <year> 1995. </year>
Reference: [ El Fattah and Dechter, 1996 ] <author> Y. El Fattah and R. Dechter. </author> <title> An evaluation of structural parameters for probabilistic reasoning: Results on benchmark circuits. </title> <type> Technical report, </type> <institution> University of California Irvine, Department of Information and Computer Science, Irvine, California, </institution> <year> 1996. </year>
Reference-contexts: The nodes of the join-tree are labeled by the clique sizes. In this section we present the results on circuits c432 and c3540, which have 196 and 1719 variables, respectively. Results on other circuits are available in the full report <ref> [ El Fattah and Dechter, 1996 ] </ref> . Figures 2 and 3 show the frequencies of clique sizes, sepset sizes, and cutset sizes for the circuits.
Reference: [ Geffner and Pearl, 1987 ] <author> H. Geffner and J. Pearl. </author> <title> An improved constraint propagation algorithm for diagnosis. </title> <booktitle> In Proceedings of the Tenth International Joint Conference on Artificial Intelligence (IJCAI-87), </booktitle> <pages> pages 1105-1111, </pages> <address> Milan, Italy, </address> <year> 1987. </year>
Reference: [ Lauritzen and Spiegelhalter, 1988 ] <author> S.L. Lauritzen and D.J. Spiegelhalter. </author> <title> Local computations with probabilities on graphical structures and their applications to expert systems. </title> <journal> Journal of the Royal Statistical Society, </journal> <volume> B 50 </volume> <pages> 127-224, </pages> <year> 1988. </year>
Reference-contexts: Fortunately, enumerating all the cutset's assignments can be accomplished in linear space. Therefore, conditioning methods have time complexity that is worst-case exponential in the cycle-cutset size of the moral graph and are space linear. 2 In summary, Theorem 1: [time-space of clustering and conditioning] <ref> [ Pearl, 1988; Lauritzen and Spiegelhalter, 1988; Dechter, 1996 ] </ref> Given a belief network whose moral graph can be embedded in clique-tree having induced width r, separator width s, and cycle-cutset c, for determining both the beliefs and the MPE by clustering the time complexity is is O (nexp (r+1)) and
Reference: [ Mackworth and Freuder, 1985 ] <author> A.K. </author> <title> Mackworth and E.C. Freuder. The complexity of some polynomial network consistency algorithms for constraint satisfaction problems. </title> <journal> Artificial Intelligence, </journal> <volume> 25(1), </volume> <year> 1985. </year>
Reference-contexts: Clustering involves transforming the original network into a tree that can then be processed by a linear-time algorithm designed for trees <ref> [ Pearl, 1986; Mackworth and Freuder, 1985 ] </ref> . Conditioning eliminates cycles by fixing the assignment of certain variables until the network is singly-connected [ Pearl, 1988 ] and can be fl Currently at Rockwell Science Center, 1049 Camino Dos Rios, Thousand Oaks, CA 91360 solved by a tree algorithm.
Reference: [ Pearl, 1986 ] <author> J. Pearl. </author> <title> Fusion propagation and structuring in belief networks. </title> <journal> Artificial Intelligence, </journal> <volume> 29(3) </volume> <pages> 241-248, </pages> <year> 1986. </year>
Reference-contexts: Clustering involves transforming the original network into a tree that can then be processed by a linear-time algorithm designed for trees <ref> [ Pearl, 1986; Mackworth and Freuder, 1985 ] </ref> . Conditioning eliminates cycles by fixing the assignment of certain variables until the network is singly-connected [ Pearl, 1988 ] and can be fl Currently at Rockwell Science Center, 1049 Camino Dos Rios, Thousand Oaks, CA 91360 solved by a tree algorithm.
Reference: [ Pearl, 1988 ] <author> J. Pearl. </author> <title> Probabilistic Reasoning in Intelligent Systems. </title> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, California, </address> <year> 1988. </year>
Reference-contexts: 1 INTRODUCTION Topology-based algorithms for probabilistic and deterministic reasoning fall into two distinct classes. One class is centered on clustering and elimination [ Lauritzen and Spiegelhalter, 1988; Shachter, 1986; Dechter and Pearl, 1989 ] , the other on cutset conditioning <ref> [ Pearl, 1988; Dechter, 1990 ] </ref> . Clustering involves transforming the original network into a tree that can then be processed by a linear-time algorithm designed for trees [ Pearl, 1986; Mackworth and Freuder, 1985 ] . <p> Clustering involves transforming the original network into a tree that can then be processed by a linear-time algorithm designed for trees [ Pearl, 1986; Mackworth and Freuder, 1985 ] . Conditioning eliminates cycles by fixing the assignment of certain variables until the network is singly-connected <ref> [ Pearl, 1988 ] </ref> and can be fl Currently at Rockwell Science Center, 1049 Camino Dos Rios, Thousand Oaks, CA 91360 solved by a tree algorithm. This is repeated for each value combination of the cutset variables. <p> Fortunately, enumerating all the cutset's assignments can be accomplished in linear space. Therefore, conditioning methods have time complexity that is worst-case exponential in the cycle-cutset size of the moral graph and are space linear. 2 In summary, Theorem 1: [time-space of clustering and conditioning] <ref> [ Pearl, 1988; Lauritzen and Spiegelhalter, 1988; Dechter, 1996 ] </ref> Given a belief network whose moral graph can be embedded in clique-tree having induced width r, separator width s, and cycle-cutset c, for determining both the beliefs and the MPE by clustering the time complexity is is O (nexp (r+1)) and
Reference: [ Shachter, 1986 ] <author> R.D. Shachter. </author> <title> Evaluating influence diagrams. </title> <journal> Operations Research, </journal> <volume> 34(6), </volume> <year> 1986. </year>
Reference-contexts: A common query over belief networks is to find posterior beliefs or to find the most probable explanation (MPE) given a set of observations. When augmented with decision and utility information, the network is called an influence diagram <ref> [ Shachter, 1986 ] </ref> . The task defined over influence diagrams is to find a collection of decisions that maximizes the expected utility.
Reference: [ Srinivas, 1994 ] <author> S. Srinivas. </author> <title> A probabilistic approach to hierarchical model-based diagnosis. </title> <booktitle> In Working Notes of the Fifth International Workshop on Principles of Diagnosis, </booktitle> <pages> pages 305-311, </pages> <address> New Paltz, NY, USA, </address> <year> 1994. </year>
References-found: 17

