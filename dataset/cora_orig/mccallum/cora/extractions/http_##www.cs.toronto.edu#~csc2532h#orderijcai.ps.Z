URL: http://www.cs.toronto.edu/~csc2532h/orderijcai.ps.Z
Refering-URL: http://www.cs.toronto.edu/~csc2532h/
Root-URL: http://www.cs.toronto.edu
Email: @cs.toronto.edu  
Title: An Ordering on Goals for Planning Formalizing Control Information in the Situation Calculus  
Author: Fangzhen Lin 
Address: King's College Road  Toronto, Canada M5S 1A4  
Affiliation: 6  Department of Computer Science University of Toronto  
Abstract: In the situation calculus, plans and legal situations are isomorphic: a situation is legal iff it is the result of executing a plan in the initial situation. This isomorphism is important. It provides a basis on which certain control information in planning can be formalized in the situation calculus. As an application of this isomorphism, we investigate thoroughly a notion of goal ordering, and show its usefulness by applying it in a provably correct way to both linear and nonlinear planning. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Barrett and D. S. Weld. </author> <title> Characterizing subgoal interactions for planning. </title> <booktitle> In Proceedings of the Thirteenth International Joint Conference on Artificial Intelligence (IJCAI-93), </booktitle> <publisher> IJCAI Inc. Distributed by Morgan Kaufmann, </publisher> <address> San Mateo, CA., </address> <pages> pages 1388-1393, </pages> <year> 1993. </year>
Reference: [2] <author> J. Cheng and K. B. Irani. </author> <title> Ordering problem subgoals. </title> <booktitle> In Proceedings of the Eleventh International Joint Conference on Artificial Intelligence (IJCAI-89), </booktitle> <pages> pages 931-936, </pages> <year> 1989. </year>
Reference-contexts: We then consider in section 2 5 algorithms for using the ordering in both linear and nonlinear planning. As it turns out, similar orderings have been proposed in the literature, in particular those of Cheng and Irani's <ref> [7, 2] </ref>. We discuss this and other related work in section 7. <p> Similar remarks can be made about the work of Joslin and Roach ([8]), and that of Barrett and Weld ([1]). Although developed independently, it turns out that our ordering relation is closely related to that in (Etzioni [3]) and that in (Cheng and Irani <ref> [2] </ref>). It is fair to say that the intuitions behind all of these orderings are similar. The differences are mainly technical. For instance, although we consider only the space of legal 12 situations, Cheng and Irani ([2]) consider the space of all possible situations. 3 This difference is important.
Reference: [3] <author> O. Etzioni. </author> <title> Acquiring search-control knowledge via static analysis. </title> <journal> Artificial Intelligence, </journal> <volume> 62 </volume> <pages> 255-301, </pages> <year> 1993. </year> <title> 3 It seems that Etzioni ([3]) has an implicit notion of legality built into his algorithms by using partial evaluation and state constraints. </title> <type> 13 </type>
Reference-contexts: Similar remarks can be made about the work of Joslin and Roach ([8]), and that of Barrett and Weld ([1]). Although developed independently, it turns out that our ordering relation is closely related to that in (Etzioni <ref> [3] </ref>) and that in (Cheng and Irani [2]). It is fair to say that the intuitions behind all of these orderings are similar. The differences are mainly technical.
Reference: [4] <author> R. E. Fikes and N. J. Nilsson. </author> <title> STRIPS: A new approach to theorem proving in problem solving. </title> <journal> Artificial Intelligence, </journal> <volume> 2 </volume> <pages> 189-208, </pages> <year> 1971. </year>
Reference-contexts: We argue that this isomorphism is particularly useful to planning in that it facilitates the formalization of control information, which frequently involves quantifications over plans. As an example, this paper considers in detail the issue of goal ordering in classical planning. In classical planning (Fikes and Nilsson <ref> [4] </ref>), a goal consists of a set of subgoals. In searching for a plan, most planners assume by default that subgoals do not interact. When they do interact, however, the order in which they are solved may be important.
Reference: [5] <author> M. R. Genesereth and N. J. Nilsson. </author> <booktitle> The Logical Foundations of Artificial Intelligence. </booktitle> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos, CA., </address> <year> 1987. </year>
Reference-contexts: We consider two planners. One is a linear regression planner adapted from (Genesereth and Nilsson <ref> [5] </ref>). The other is the nonlinear planner SNLP of McAllester and Rosenblitt [13]. For ease of presentation, we shall consider only context-free actions. In the situation calculus, these actions are specified by a context-free action theory D (cf. <p> : * D S 0 , the initial database, is a finite set of first-order sentences that do not mention &lt;, P oss, and any situation term except the constant S 0 . 5.1 A Linear Regression Planner We consider here a linear regression planner adapted from (Genesereth and Nilsson <ref> [5] </ref>). Given a goal G 0 , the planner can be described as follows: 1. Initialize (for partial plans) to ;, and K (for subgoals) to the goal G 0 . 2. If K is satisfied in the initial situation, then output as the final plan. 3.
Reference: [6] <author> C. C. Green. </author> <title> Application of theorem proving to problem solving. </title> <booktitle> In Proceedings of the International Joint Conference on Artificial Intelligence (IJCAI-69), </booktitle> <pages> pages 219-239, </pages> <year> 1969. </year>
Reference-contexts: For SNLP, as shown in (Smith and Peot [18]), some non-trivial threat removal strategies are needed in order to avoid backtracking. 6 Related Work The situation calculus has been used for planning ever since it's introduced (Mc-Carthy [14], McCarthy and Hayes [15], Green <ref> [6] </ref>). However, to the best of our knowledge, this paper is the first attempt in using the situation calculus to formalize control knowledge in planning. We have pointed out some relationships between our ordering and Korf's taxonomy of subgoal interactions.
Reference: [7] <author> K. B. Irani and J. Cheng. </author> <title> Subgoal ordering and goal augmentation for heuristic problem solving. </title> <booktitle> In Proceedings of the Tenth International Joint Conference on Artificial Intelligence (IJCAI-87), </booktitle> <pages> pages 1018-1024, </pages> <year> 1987. </year>
Reference-contexts: We then consider in section 2 5 algorithms for using the ordering in both linear and nonlinear planning. As it turns out, similar orderings have been proposed in the literature, in particular those of Cheng and Irani's <ref> [7, 2] </ref>. We discuss this and other related work in section 7.
Reference: [8] <author> D. Joslin and J. Roach. </author> <title> A theoretical analysis of conjunctive-goal problems. </title> <journal> Artificial Intelligence, </journal> <volume> 41 </volume> <pages> 97-106, </pages> <year> 1989. </year>
Reference: [9] <author> R. E. Korf. </author> <title> Planning as search: A quantitative approach. </title> <journal> Artificial Intelligence, </journal> <volume> 33 </volume> <pages> 65-88, </pages> <year> 1987. </year>
Reference-contexts: In searching for a plan, most planners assume by default that subgoals do not interact. When they do interact, however, the order in which they are solved may be important. To address this problem, Korf <ref> [9] </ref> proposes a taxonomy of subgoal interactions. According to Korf, a set of subgoals can be either independent, serializable, or non-serializable.
Reference: [10] <author> F. Lin and R. Reiter. </author> <title> How to progress a database (and why) I. </title> <booktitle> Logical foundations. In Proceedings of the Fourth International Conference on Principles of Knowledge Representation and Reasoning (KR'94), </booktitle> <pages> pages 425-436, </pages> <year> 1994. </year>
Reference-contexts: The other is the nonlinear planner SNLP of McAllester and Rosenblitt [13]. For ease of presentation, we shall consider only context-free actions. In the situation calculus, these actions are specified by a context-free action theory D (cf. Lin and Reiter <ref> [10, 12] </ref>) of the following form: D = [ D ss [ D ap [ D una [ D S 0 ; where * is the set of the foundational axioms in Section 2.1. 6 * D ss is a set of context free successor state axioms, one for each fluent
Reference: [11] <author> F. Lin and R. Reiter. </author> <title> State constraints revisited. </title> <journal> Journal of Logic and Computation, Special Issue on Actions and Processes, </journal> <volume> 4(5) </volume> <pages> 655-678, </pages> <year> 1994. </year>
Reference-contexts: In this paper, we shall assume the following foundational axioms (Lin and Reiter <ref> [11] </ref>): 1 S 0 6= do (a; s); (8P )[P (S 0 ) ^ (8a; s)(P (s) oe P (do (a; s))) oe (8s)P (s)]; s &lt; do (a; s 0 ) j (P oss (a; s 0 ) ^ s s 0 ): The first two axioms are unique names
Reference: [12] <author> F. Lin and R. Reiter. </author> <title> How to progress a database II: The STRIPS connection. </title> <booktitle> In Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence (IJCAI-95), </booktitle> <publisher> IJCAI Inc. Distributed by Morgan Kaufmann, </publisher> <address> San Mateo, CA., </address> <pages> pages 2001-2007, </pages> <year> 1995. </year>
Reference-contexts: The other is the nonlinear planner SNLP of McAllester and Rosenblitt [13]. For ease of presentation, we shall consider only context-free actions. In the situation calculus, these actions are specified by a context-free action theory D (cf. Lin and Reiter <ref> [10, 12] </ref>) of the following form: D = [ D ss [ D ap [ D una [ D S 0 ; where * is the set of the foundational axioms in Section 2.1. 6 * D ss is a set of context free successor state axioms, one for each fluent
Reference: [13] <author> D. McAllester and D. Rosenblitt. </author> <title> Systematic nonlinear planning. </title> <booktitle> In Proceedings of the Ninth National Conference on Artificial Intelligence (AAAI-91), </booktitle> <pages> pages 634-639, </pages> <year> 1991. </year>
Reference-contexts: We consider two planners. One is a linear regression planner adapted from (Genesereth and Nilsson [5]). The other is the nonlinear planner SNLP of McAllester and Rosenblitt <ref> [13] </ref>. For ease of presentation, we shall consider only context-free actions. In the situation calculus, these actions are specified by a context-free action theory D (cf.
Reference: [14] <author> J. McCarthy. </author> <title> Situations, actions and causal laws. </title> <editor> In M. Minsky, editor, </editor> <booktitle> Semantic Information Processing, </booktitle> <pages> pages 410-417. </pages> <publisher> MIT Press, </publisher> <address> Cambridge, Mass., </address> <year> 1968. </year>
Reference-contexts: 1 Introduction One of the features of the situation calculus (McCarthy <ref> [14] </ref>) is that a situation carries information about its history. For example, from looking at the syntax of the situation do (move (B); do (move (A); S 0 )), we know that it is the result of executing move (B) after move (A) in the situation S 0 . <p> For SNLP, as shown in (Smith and Peot [18]), some non-trivial threat removal strategies are needed in order to avoid backtracking. 6 Related Work The situation calculus has been used for planning ever since it's introduced (Mc-Carthy <ref> [14] </ref>, McCarthy and Hayes [15], Green [6]). However, to the best of our knowledge, this paper is the first attempt in using the situation calculus to formalize control knowledge in planning. We have pointed out some relationships between our ordering and Korf's taxonomy of subgoal interactions.
Reference: [15] <author> J. McCarthy and P. Hayes. </author> <title> Some philosophical problems from the standpoint of artificial intelligence. </title> <editor> In B. Meltzer and D. Michie, editors, </editor> <booktitle> Machine Intelligence 4, </booktitle> <pages> pages 463-502. </pages> <publisher> Edinburgh University Press, Edinburgh, </publisher> <year> 1969. </year>
Reference-contexts: For SNLP, as shown in (Smith and Peot [18]), some non-trivial threat removal strategies are needed in order to avoid backtracking. 6 Related Work The situation calculus has been used for planning ever since it's introduced (Mc-Carthy [14], McCarthy and Hayes <ref> [15] </ref>, Green [6]). However, to the best of our knowledge, this paper is the first attempt in using the situation calculus to formalize control knowledge in planning. We have pointed out some relationships between our ordering and Korf's taxonomy of subgoal interactions.
Reference: [16] <author> J. Pinto and R. Reiter. </author> <title> Extending the situation calculus with event occurrences. </title> <booktitle> In Second Symposium on Logical Formalizations of Commonsense Reasoning, </booktitle> <year> 1993. </year>
Reference-contexts: As we shall see, induction will play an important role in this paper. 2 The last two axioms define &lt; inductively. 1 These axioms have their origin in (Reiter [17]). Similar axioms are used in (Pinto and Reiter <ref> [16] </ref>). 2 For a detailed discussion of the use of induction in the situation calculus, see (Reiter [17]). 3 Notice the similarity between these axioms and Peano foundational axioms for number theory.
Reference: [17] <author> R. Reiter. </author> <title> Proving properties of states in the situation calculus. </title> <journal> Artificial Intelligence, </journal> <volume> 64 </volume> <pages> 337-351, </pages> <year> 1993. </year>
Reference-contexts: As we shall see, induction will play an important role in this paper. 2 The last two axioms define &lt; inductively. 1 These axioms have their origin in (Reiter <ref> [17] </ref>). Similar axioms are used in (Pinto and Reiter [16]). 2 For a detailed discussion of the use of induction in the situation calculus, see (Reiter [17]). 3 Notice the similarity between these axioms and Peano foundational axioms for number theory. <p> will play an important role in this paper. 2 The last two axioms define &lt; inductively. 1 These axioms have their origin in (Reiter <ref> [17] </ref>). Similar axioms are used in (Pinto and Reiter [16]). 2 For a detailed discussion of the use of induction in the situation calculus, see (Reiter [17]). 3 Notice the similarity between these axioms and Peano foundational axioms for number theory.
Reference: [18] <author> D. E. Smith and M. A. Peot. </author> <title> Postponing threats in partial-order planning. </title> <booktitle> In Proceedings of the Eleventh National Conference on Artificial Intelligence (AAAI-93), </booktitle> <publisher> AAAI Press, </publisher> <address> Menlo Park, CA., </address> <pages> pages 500-506, </pages> <year> 1993. </year> <month> 14 </month>
Reference-contexts: It can be shown that this planner inherits many properties of SNLP. For instance, it is also sound and complete for ground goals. Let us now illustrate this planner using a machine shop scheduling domain adapted from (Smith and Peot <ref> [18] </ref>). There are three actions the agent can perform: 10 * shape (x): shape x and undo the effect of drill (x), provided x is free. * drill (x): drill x, provided x is free. * bolt (x; y): fasten x to y, provided both x and y are drilled. <p> When this is done, it has a complete, order consistent nonlinear plan. Notice that for this example, as long as the planner makes use of knowledge about OE, no threat removal strategies are needed. For SNLP, as shown in (Smith and Peot <ref> [18] </ref>), some non-trivial threat removal strategies are needed in order to avoid backtracking. 6 Related Work The situation calculus has been used for planning ever since it's introduced (Mc-Carthy [14], McCarthy and Hayes [15], Green [6]).
References-found: 18

