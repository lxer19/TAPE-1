URL: http://www.cs.brandeis.edu/~mairson/Seminar/abramsky-games.ps.gz
Refering-URL: http://www.cs.brandeis.edu/~mairson/PL-seminar.html
Root-URL: http://www.cs.brandeis.edu
Title: Semantics of Interaction  
Author: Samson Abramsky 
Abstract: The classical paradigm for denotational semantics models data types as domains, i.e. structured sets of some kind, and programs as (suitable) functions between domains. The semantic universe in which the denotational modelling is carried out is thus a category with domains as objects, functions as morphisms, and composition of morphisms given by function composition. A sharp distinction is then drawn between denotational and operational semantics. Denotational semantics is often referred to as mathematical semantics because it exhibits a high degree of mathematical structure; this is in part achieved by the fact that denotational semantics abstracts away from the dynamics of computationfrom time. By contrast, operational semantics is formulated in terms of the syntax of the language being modelled; it is highly intensional in character; and it is capable of expressing the dynamical aspects of computation. The classical denotational paradigm has been very successful, but has some definite limitations. Firstly, fine-structural features of computation, such as se-quentiality, computational complexity, and optimality of reduction strategies, have either not been captured at all denotationally, or not in a fully satisfactory fashion. Moreover, once languages with features beyond the purely functional are considered, the appropriateness of modelling programs by functions is increasingly open to question. Neither concurrency nor advanced imperative features such as local references have been captured denotationally in a fully convincing fashion. This analysis suggests a desideratum of Intensional Semantics, interpolating between denotational and operational semantics as traditionally conceived. This should combine the good mathematical structural properties of denotational semantics with the ability to capture dynamical aspects and to embody computational intuitions of operational semantics. Thus we may think of Intensional semantics as Denotational semantics + time (dynamics), or as Syntax-free operational semantics. A number of recent developments (and, with hindsight, some older ones) can be seen as contributing to this goal of Intensional Semantics. We will focus on the recent work on Game semantics, which has led to some striking advances in the Full Abstraction problem for PCF and other programming languages (Abramsky et al. 1995) (Abramsky and McCusker 1995) (Hyland and Ong 1995) (McCusker 1996a) (Ong 1996). Our aim is to give a genuinely elementary first introduction; we therefore present a simplified version of game semantics, which nonetheless 
Abstract-found: 1
Intro-found: 1
Reference: <author> Abramsky, S., Gay, S. J., Nagarajan, R., </author> <title> (1996a) `Specification structures and propositions-as-types for concurrency', </title> <editor> In G. Birtwhistle and F. Moller, editors, </editor> <title> Logics for Concur-rency: Structure vs. Automata, </title> <booktitle> Proceedings of the VIIIth Banff Higher Order Workshop, Lecture notes in Computer Science. </booktitle> <publisher> Springer Verlag. </publisher>
Reference-contexts: The approach we will pursue with strategies can be seen as a semantic analogue of this idea. Before introducing this approach, we make a brief digression to allow the ideas to be presented at an appropriate level of generality. For further references on specification structures see <ref> (Abramsky et al. 1996a) </ref>. Specification Structures Our aim is to refine a category C with a more subtle notion of type.
Reference: <author> Abramsky, S., Gay, S. J., Nagarajan, R., </author> <title> (1996b) `Interaction categories', </title> <booktitle> Marktoberdorf proceedings, </booktitle> <publisher> Springer Verlag. </publisher>
Reference-contexts: Note that, with this reading, the condition (1.1) generalizes the usual single-valuedness condition for (the graphs of) partial functions. Thus a useful slogan is: Strategies are (partial) functions extended in time. (cf. interaction categories <ref> (Abramsky, Gay and Nagarajan 1996b) </ref>).
Reference: <author> Abramsky, S., Jagadeesan, R., </author> <title> (1994) `Games and full completeness for multiplicative linear logic', </title> <journal> Journal of Symbolic Logic, </journal> <volume> 59(2), </volume> <pages> 543 574. </pages> <note> Also appeared as Technical Report 92/24 of the Department of Computing, </note> <institution> Imperial College of Science, Technology and Medicine. </institution>
Reference: <author> Abramsky, S., Jagadeesan, R., Malacaria, P., </author> <note> (1995) `Full abstraction for PCF', Submitted for publication, ftp-able at theory.doc.ic.ac.uk in directory papers/Malacaria. </note>
Reference: <author> Abramsky, S., McCusker, G., </author> <title> (1995) `Games for recursive types', </title> <editor> In C. L. Hankin, I. C. Mackie, and R. Nagarajan, editors, </editor> <booktitle> Theory and Formal Methods of Computing 1994: Proceedings of the Second Imperial College Department of Computing Workshop on Theory and Formal Methods. </booktitle> <publisher> Imperial College Press. </publisher>
Reference: <author> Abramsky, S., McCusker, G., </author> <title> (1995) `Games and full abstraction for the lazy -calculus', </title> <booktitle> in the LICS'95 proceedings. Semantics of Interaction 31 Crole, R., (1994) `Categories for Types', </booktitle> <publisher> Cambridge University Press. </publisher>
Reference: <author> Danos, V., Herbelin, H., Regnier, L., </author> <title> (1996) `Games and abstract machines', </title> <note> to appear in the LICS'96 proceedings. </note>
Reference: <author> Girard, J.-Y., Lafont, Y., Taylor, P., </author> <title> (1989) `Proofs and types', </title> <publisher> Cambridge University Press. </publisher>
Reference: <author> Girard, J.-Y., </author> <title> (1995) `A survey of Linear Logic', in Advances in Linear Logic, </title> <editor> ed. Y. La-font, </editor> <publisher> Cambridge University Press 1995. </publisher>
Reference: <author> Hyland, J. M. E., Ong, C.-H. </author> <title> L, (1995) `On full abstraction for PCF: I, II, and III', </title> <note> submitted for publication, ftp-able at theory.doc.ic.ac.uk in directory papers/Ong. </note>
Reference: <author> McCusker, G., </author> <title> (1996a) `Games and full abstraction for FPC', </title> <note> to appear in the LICS'96 proceedings. </note>
Reference: <author> McCusker, G., </author> <title> (1996b) `Games and full abstraction for a functional metalanguage with recursive types', </title> <type> Phd thesis, </type> <institution> University of London, </institution> <note> to appear. </note>
Reference: <author> Nickau, H., </author> <title> (1994) `Hereditarily sequential functionals', </title> <booktitle> Proceedings of the Symposium on Logical Fondations of Computer Science: Logic at St. Petersburg, Lecture notes in Computer Science. </booktitle> <publisher> Springer Verlag. </publisher>
Reference: <author> Ong, C.-H. L., </author> <title> (1996) `A semantic view of classical proofs', </title> <note> to appear in the LICS'96 proceedings. </note>
Reference: <author> Pitts, A. M., </author> <title> (1996) `Relational properties of domains', Information and Computation, </title> <publisher> in press. </publisher>
References-found: 15

