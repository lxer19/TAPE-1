URL: ftp://softlib.rice.edu/pub/CRPC-TRs/reports/CRPC-TR93343.ps
Refering-URL: http://www.cs.rice.edu/~ken/kennedy-vita.html
Root-URL: 
Title: Mathematical Models for the Speedup of Parallel Material Dynamics Codes  
Author: Darrell L. Hicks Ken Kennedy Lorie M. Liebrock 
Address: P.O. Box 1892 Houston, TX 77251-1892  
Affiliation: Rice University  
Note: Center for Research on Parallel Computation  This research was supported by: Center for Research on Parallel Computation, a National Science Foundation Science and Technology Center, through Cooperative Agreement No. CCR-9120008  
Date: November, 1993  
Pubnum: CRPC TR93343  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> G. M. </author> <title> Amdahl, Validity of the single processor approach to achieving large scale computer capabilities, </title> <booktitle> Proc. AFIPS Spring Joint Comp. Conf. </booktitle> <volume> 30 </volume> <pages> 483-485, </pages> <address> Atlantic City, NJ, </address> <year> 1967. </year>
Reference: [2] <author> B. L. Buzbee, </author> <title> The efficiency of parallel processing, </title> <address> Los Alamos Science #9, </address> <year> 1983. </year>
Reference: [3] <author> H. P. Flatt(1984), </author> <title> A simple model for parallel processing, </title> <booktitle> Computer 17(11):75, </booktitle> <year> 1984. </year>
Reference: [4] <author> H. P. Flatt and K. Kennedy, </author> <title> Performance of parallel processors, </title> <booktitle> Parallel Computing 12(1) </booktitle> <pages> 1-20, </pages> <year> 1989. </year>
Reference-contexts: Current conventional wisdom and recent opinion has been influenced by Amdahl (1967), Lee (1977,1980), Buzbee (1983), Flatt (1984), Lar-son (1984), Hwang & Briggs (1984). The producers of this paper have also been prone to proliferating the prose on parallelization paradigms <ref> [4, 8, 18, 19, 20, 21] </ref>. Examples of material (solid, liquid, gas, plasma, multiphase) dynamics applications and background references may be found in reference [9]. <p> We have used the T spO model along with empirical data from our computational experiments to predict the limits of the growth of such architectures as found in the HEP, ELXSI, Cray, Intel iPSC, et cetera on algorithms such as our parallelized vNR <ref> [4, 8, 18, 10, 11, 12, 13, 18, 19, 20, 21] </ref>. We also have used the T spO model to study the marginal gain efficiency and the number of processors to use for optimal cost effectiveness [4, 18]. <p> We also have used the T spO model to study the marginal gain efficiency and the number of processors to use for optimal cost effectiveness <ref> [4, 18] </ref>. Caveats: We have the following caveats to pronounce on the T spO model, related models and their prognostications. First, although it is not necessarily obvious, one can get into an ill-conditioned calculation in attempting to fit the T spO model to timing data [18].
Reference: [5] <author> K. E. Fletcher, C. A. Foulston, and L. M. Liebrock, </author> <title> A feasibility study of portable parallel programming using parallel language subroutines, </title> <note> term paper in Distributed Systems Course in Department of Computer Science at Rice University, Fall Semester 1989. 10 </note>
Reference-contexts: Examples of material (solid, liquid, gas, plasma, multiphase) dynamics applications and background references may be found in reference [9]. Computational experiments with a variety of parallel algorithms for material dynamics on a variety of parallel machines <ref> [5, 7, 8, 10, 11, 12, 13, 18, 19, 20, 21] </ref> suggest the speedup models presented here.
Reference: [6] <author> D. L. Hicks, </author> <title> Stability analysis of WONDY(a hydrocode based on the artificial viscosity method of von Neumann and Richtmyer) for a special case of Maxwell's material law, </title> <booktitle> Mathematics of Computation 32(144) </booktitle> <pages> 1123-1130, </pages> <year> 1978. </year>
Reference-contexts: Computational experiments with a variety of parallel algorithms for material dynamics on a variety of parallel machines [5, 7, 8, 10, 11, 12, 13, 18, 19, 20, 21] suggest the speedup models presented here. In particular, some results on parallelized versions of the von Neumann-Richtmyer (vNR) scheme <ref> [6] </ref> will be discussed. 2 Speedup Models Let T (n) be the run time of a parallel computation using n processors. <p> E - (n; z) = 1 + t max (n)= t z + nzr io =(-t z ) In a typical explicit code (such as those based on the original vNR), we have a CFL-type (Courant-Friedrichs-Lewy) timestep restriction which restricts stress-wave propagation distances to at most one zone per cycle <ref> [6] </ref>. It is typical in stress-wave propagation calculations to allow waves to make at least one transit of the material (or spatial) interval and more often the waves make multiple (say m) transits. <p> In the usual implementation of the original vNR algorithm, which involves an explicit discretization of the conservation laws of momentum and volume, there is a calculation for a stable timestep based on a constraint similar to the CFL inequality <ref> [6] </ref>. This leads to a global dependence, i.e., the timestep depends on quantities in every zone of the calculation and consequently requires information which must be gathered from every processor involved in the calculation. This is another potential contribution to T s .
Reference: [7] <author> D. L. Hicks, </author> <title> Parallel processing algorithms for hydrocodes on a computer with MIMD architecture(Denelcor's HEP), </title> <institution> Idaho National Engineering Labs., EGG-SAAM-6452, </institution> <year> 1983. </year>
Reference-contexts: Examples of material (solid, liquid, gas, plasma, multiphase) dynamics applications and background references may be found in reference [9]. Computational experiments with a variety of parallel algorithms for material dynamics on a variety of parallel machines <ref> [5, 7, 8, 10, 11, 12, 13, 18, 19, 20, 21] </ref> suggest the speedup models presented here.
Reference: [8] <author> D. L. Hicks, </author> <title> Hydrocodes on the HEP, </title> <editor> In J. S. Kowalik, </editor> <title> editor ,MIMD Computation: </title> <booktitle> HEP Supercomputer and its Applications, </booktitle> <pages> pages 309-330. </pages> <publisher> M.I.T. Press, </publisher> <year> 1985. </year>
Reference-contexts: Current conventional wisdom and recent opinion has been influenced by Amdahl (1967), Lee (1977,1980), Buzbee (1983), Flatt (1984), Lar-son (1984), Hwang & Briggs (1984). The producers of this paper have also been prone to proliferating the prose on parallelization paradigms <ref> [4, 8, 18, 19, 20, 21] </ref>. Examples of material (solid, liquid, gas, plasma, multiphase) dynamics applications and background references may be found in reference [9]. <p> Examples of material (solid, liquid, gas, plasma, multiphase) dynamics applications and background references may be found in reference [9]. Computational experiments with a variety of parallel algorithms for material dynamics on a variety of parallel machines <ref> [5, 7, 8, 10, 11, 12, 13, 18, 19, 20, 21] </ref> suggest the speedup models presented here. <p> We have used the T spO model along with empirical data from our computational experiments to predict the limits of the growth of such architectures as found in the HEP, ELXSI, Cray, Intel iPSC, et cetera on algorithms such as our parallelized vNR <ref> [4, 8, 18, 10, 11, 12, 13, 18, 19, 20, 21] </ref>. We also have used the T spO model to study the marginal gain efficiency and the number of processors to use for optimal cost effectiveness [4, 18].
Reference: [9] <author> D. L. Hicks, </author> <title> Introduction to computational continuum dynamics: A personal perspective, </title> <booktitle> Applied Mathematics and Computation 20(1) </booktitle> <pages> 5-19, </pages> <year> 1986. </year>
Reference-contexts: The producers of this paper have also been prone to proliferating the prose on parallelization paradigms [4, 8, 18, 19, 20, 21]. Examples of material (solid, liquid, gas, plasma, multiphase) dynamics applications and background references may be found in reference <ref> [9] </ref>. Computational experiments with a variety of parallel algorithms for material dynamics on a variety of parallel machines [5, 7, 8, 10, 11, 12, 13, 18, 19, 20, 21] suggest the speedup models presented here.
Reference: [10] <author> D. L. Hicks and L. M. Liebrock, </author> <title> Parallel algorithms for hydrocodes, </title> <journal> Transactions of the American Nuclear Society 55 </journal> <pages> 330-331, </pages> <year> 1987. </year>
Reference-contexts: Examples of material (solid, liquid, gas, plasma, multiphase) dynamics applications and background references may be found in reference [9]. Computational experiments with a variety of parallel algorithms for material dynamics on a variety of parallel machines <ref> [5, 7, 8, 10, 11, 12, 13, 18, 19, 20, 21] </ref> suggest the speedup models presented here. <p> We have used the T spO model along with empirical data from our computational experiments to predict the limits of the growth of such architectures as found in the HEP, ELXSI, Cray, Intel iPSC, et cetera on algorithms such as our parallelized vNR <ref> [4, 8, 18, 10, 11, 12, 13, 18, 19, 20, 21] </ref>. We also have used the T spO model to study the marginal gain efficiency and the number of processors to use for optimal cost effectiveness [4, 18].
Reference: [11] <author> D. L. Hicks, L. M. Liebrock, V. A. Mousseau and G. A. Mortensen, </author> <title> Par-allelization of hydrocodes on the Intel hypercube, </title> <type> part 1, </type> <institution> Idaho National Engineering Laboratories, EGG-SPAG-7682, </institution> <year> 1987. </year>
Reference-contexts: Examples of material (solid, liquid, gas, plasma, multiphase) dynamics applications and background references may be found in reference [9]. Computational experiments with a variety of parallel algorithms for material dynamics on a variety of parallel machines <ref> [5, 7, 8, 10, 11, 12, 13, 18, 19, 20, 21] </ref> suggest the speedup models presented here. <p> We have used the T spO model along with empirical data from our computational experiments to predict the limits of the growth of such architectures as found in the HEP, ELXSI, Cray, Intel iPSC, et cetera on algorithms such as our parallelized vNR <ref> [4, 8, 18, 10, 11, 12, 13, 18, 19, 20, 21] </ref>. We also have used the T spO model to study the marginal gain efficiency and the number of processors to use for optimal cost effectiveness [4, 18].
Reference: [12] <author> D. L. Hicks, L. M. Liebrock, V. A. Mousseau and G. A. Mortensen, </author> <title> Parallelization of hydrocodes on the Intel hypercube, </title> <type> part 2", </type> <institution> Idaho National Engineering Laboratories, EGG-SPAG-7818, </institution> <year> 1987. </year>
Reference-contexts: Examples of material (solid, liquid, gas, plasma, multiphase) dynamics applications and background references may be found in reference [9]. Computational experiments with a variety of parallel algorithms for material dynamics on a variety of parallel machines <ref> [5, 7, 8, 10, 11, 12, 13, 18, 19, 20, 21] </ref> suggest the speedup models presented here. <p> We have used the T spO model along with empirical data from our computational experiments to predict the limits of the growth of such architectures as found in the HEP, ELXSI, Cray, Intel iPSC, et cetera on algorithms such as our parallelized vNR <ref> [4, 8, 18, 10, 11, 12, 13, 18, 19, 20, 21] </ref>. We also have used the T spO model to study the marginal gain efficiency and the number of processors to use for optimal cost effectiveness [4, 18]. <p> Therefore, we can find a priori a timestep which is stable for the entire calculation. This modification of the usual implementation of the vNR scheme we call the APT (A Priori Timestep) modification <ref> [12] </ref>. Thus the APT modification obviates the explicit timestep computation's contribution to T s . Implicit versions of vNR also avoid a timestep calculation at the expense of introducing other surmountable parallelization difficulties [12]. 4 Summary and Conclusions The multiply-the-job speedup may be estimated by the computational rate ratio as shown <p> modification of the usual implementation of the vNR scheme we call the APT (A Priori Timestep) modification <ref> [12] </ref>. Thus the APT modification obviates the explicit timestep computation's contribution to T s . Implicit versions of vNR also avoid a timestep calculation at the expense of introducing other surmountable parallelization difficulties [12]. 4 Summary and Conclusions The multiply-the-job speedup may be estimated by the computational rate ratio as shown in (9) or computed by one of the procedures described in the remark following (9). In general, it is impossible to measure directly because of storage limitations. <p> Perhaps this at least partially explains the prevalent preoccupation with the divide-the-job speedups. In some computational experiments with a parallel, implicit vNR algorithm on the Intel iPSC <ref> [12] </ref> the 99% parallelization efficiency achieved in the multiply-the-job mode yields the result that the communication/computation 9 ratio was approximately given by t max (32)= t z = 0:01 In other symbols, t max (32) was about 1% of t z in the iPSC calculations of the implicit vNR code with
Reference: [13] <author> D. L. Hicks, J. F. McGrath and L. M. Liebrock, </author> <title> "Thermal-hydraulics algorithms for parallel processors", </title> <journal> Transactions of the American Nuclear Society, </journal> <volume> 50 </volume> <pages> 275-276, </pages> <year> 1985. </year>
Reference-contexts: Examples of material (solid, liquid, gas, plasma, multiphase) dynamics applications and background references may be found in reference [9]. Computational experiments with a variety of parallel algorithms for material dynamics on a variety of parallel machines <ref> [5, 7, 8, 10, 11, 12, 13, 18, 19, 20, 21] </ref> suggest the speedup models presented here. <p> We have used the T spO model along with empirical data from our computational experiments to predict the limits of the growth of such architectures as found in the HEP, ELXSI, Cray, Intel iPSC, et cetera on algorithms such as our parallelized vNR <ref> [4, 8, 18, 10, 11, 12, 13, 18, 19, 20, 21] </ref>. We also have used the T spO model to study the marginal gain efficiency and the number of processors to use for optimal cost effectiveness [4, 18].
Reference: [14] <author> K. Hwang and F. A. Briggs, </author> <title> Computer Architecture and Parallel Processing, </title> <publisher> McGraw-Hill, </publisher> <year> 1984. </year>
Reference: [15] <author> J. L. Larson, </author> <title> Multitasking on the Cray X/MP-2 multiprocessor, </title> <booktitle> Computer 17(7) </booktitle> <pages> 62-69, </pages> <year> 1984. </year>
Reference: [16] <author> R. B. L. Lee, </author> <title> Performance bounds in parallel processor organizations, </title> <editor> In D. J. Kuck, D. Lawrie, and A. Sameh, editors, </editor> <title> High Speed Computer and Algorithm Organization, </title> <publisher> Academic Press, </publisher> <year> 1977. </year> <month> 11 </month>
Reference: [17] <author> R. B. L. Lee, </author> <title> Empirical results on the speed, efficiency, redundancy, and quality of parallel computations, </title> <booktitle> International Conf. Parallel Proc. </booktitle> <pages> pages 91-96, </pages> <year> 1980. </year>
Reference: [18] <author> L. M. Liebrock, J. F. McGrath and D. L. Hicks, </author> <title> Experiments in concurrent computational dynamics on the CRAY X-MP, ELXSI and HEP parallel processors with recommendations for parallel architectures & languages", </title> <institution> KMS Fusion Inc., KMSF-U-1784, </institution> <year> 1986. </year>
Reference-contexts: Current conventional wisdom and recent opinion has been influenced by Amdahl (1967), Lee (1977,1980), Buzbee (1983), Flatt (1984), Lar-son (1984), Hwang & Briggs (1984). The producers of this paper have also been prone to proliferating the prose on parallelization paradigms <ref> [4, 8, 18, 19, 20, 21] </ref>. Examples of material (solid, liquid, gas, plasma, multiphase) dynamics applications and background references may be found in reference [9]. <p> Examples of material (solid, liquid, gas, plasma, multiphase) dynamics applications and background references may be found in reference [9]. Computational experiments with a variety of parallel algorithms for material dynamics on a variety of parallel machines <ref> [5, 7, 8, 10, 11, 12, 13, 18, 19, 20, 21] </ref> suggest the speedup models presented here. <p> We have used the T spO model along with empirical data from our computational experiments to predict the limits of the growth of such architectures as found in the HEP, ELXSI, Cray, Intel iPSC, et cetera on algorithms such as our parallelized vNR <ref> [4, 8, 18, 10, 11, 12, 13, 18, 19, 20, 21] </ref>. We also have used the T spO model to study the marginal gain efficiency and the number of processors to use for optimal cost effectiveness [4, 18]. <p> We also have used the T spO model to study the marginal gain efficiency and the number of processors to use for optimal cost effectiveness <ref> [4, 18] </ref>. Caveats: We have the following caveats to pronounce on the T spO model, related models and their prognostications. First, although it is not necessarily obvious, one can get into an ill-conditioned calculation in attempting to fit the T spO model to timing data [18]. <p> Caveats: We have the following caveats to pronounce on the T spO model, related models and their prognostications. First, although it is not necessarily obvious, one can get into an ill-conditioned calculation in attempting to fit the T spO model to timing data <ref> [18] </ref>. Thus the results of such exercises must be taken cum grano salis. Second, the amount of parallelization overhead is strongly influenced by the nature of the dependences in the parallel algorithm.
Reference: [19] <author> J. F. McGrath, D. L. Hicks and L. M. Liebrock, </author> <title> Parallel processing for computational continuum dynamics, </title> <editor> In S. Lakshmivarahan, editor, </editor> <title> Parallel Processing using the Heterogeneous Element Processor, </title> <publisher> University of Oklahoma Press, </publisher> <pages> pages 77-96, </pages> <year> 1985. </year>
Reference-contexts: Current conventional wisdom and recent opinion has been influenced by Amdahl (1967), Lee (1977,1980), Buzbee (1983), Flatt (1984), Lar-son (1984), Hwang & Briggs (1984). The producers of this paper have also been prone to proliferating the prose on parallelization paradigms <ref> [4, 8, 18, 19, 20, 21] </ref>. Examples of material (solid, liquid, gas, plasma, multiphase) dynamics applications and background references may be found in reference [9]. <p> Examples of material (solid, liquid, gas, plasma, multiphase) dynamics applications and background references may be found in reference [9]. Computational experiments with a variety of parallel algorithms for material dynamics on a variety of parallel machines <ref> [5, 7, 8, 10, 11, 12, 13, 18, 19, 20, 21] </ref> suggest the speedup models presented here. <p> We have used the T spO model along with empirical data from our computational experiments to predict the limits of the growth of such architectures as found in the HEP, ELXSI, Cray, Intel iPSC, et cetera on algorithms such as our parallelized vNR <ref> [4, 8, 18, 10, 11, 12, 13, 18, 19, 20, 21] </ref>. We also have used the T spO model to study the marginal gain efficiency and the number of processors to use for optimal cost effectiveness [4, 18].
Reference: [20] <author> J. F. McGrath, D. L. Hicks and L. M. Liebrock(1985b), </author> <title> Parallel algorithms for computational fluid dynamics", (final report on a project supported by AFOSR under contract # F49620-84-6-0111 ), KMS Fusion Inc., </title> <address> KMSF-U1601, </address> <year> 1985. </year>
Reference-contexts: Current conventional wisdom and recent opinion has been influenced by Amdahl (1967), Lee (1977,1980), Buzbee (1983), Flatt (1984), Lar-son (1984), Hwang & Briggs (1984). The producers of this paper have also been prone to proliferating the prose on parallelization paradigms <ref> [4, 8, 18, 19, 20, 21] </ref>. Examples of material (solid, liquid, gas, plasma, multiphase) dynamics applications and background references may be found in reference [9]. <p> Examples of material (solid, liquid, gas, plasma, multiphase) dynamics applications and background references may be found in reference [9]. Computational experiments with a variety of parallel algorithms for material dynamics on a variety of parallel machines <ref> [5, 7, 8, 10, 11, 12, 13, 18, 19, 20, 21] </ref> suggest the speedup models presented here. <p> We have used the T spO model along with empirical data from our computational experiments to predict the limits of the growth of such architectures as found in the HEP, ELXSI, Cray, Intel iPSC, et cetera on algorithms such as our parallelized vNR <ref> [4, 8, 18, 10, 11, 12, 13, 18, 19, 20, 21] </ref>. We also have used the T spO model to study the marginal gain efficiency and the number of processors to use for optimal cost effectiveness [4, 18].
Reference: [21] <author> J. F. McGrath, D. L. Hicks and L. M. Liebrock, </author> <title> Concurrent algorithms for computational continuum dynamics, </title> <booktitle> Applied Mathematics and Computation 20(2) </booktitle> <pages> 145-173, </pages> <year> 1986. </year> <month> 12 </month>
Reference-contexts: Current conventional wisdom and recent opinion has been influenced by Amdahl (1967), Lee (1977,1980), Buzbee (1983), Flatt (1984), Lar-son (1984), Hwang & Briggs (1984). The producers of this paper have also been prone to proliferating the prose on parallelization paradigms <ref> [4, 8, 18, 19, 20, 21] </ref>. Examples of material (solid, liquid, gas, plasma, multiphase) dynamics applications and background references may be found in reference [9]. <p> Examples of material (solid, liquid, gas, plasma, multiphase) dynamics applications and background references may be found in reference [9]. Computational experiments with a variety of parallel algorithms for material dynamics on a variety of parallel machines <ref> [5, 7, 8, 10, 11, 12, 13, 18, 19, 20, 21] </ref> suggest the speedup models presented here. <p> We have used the T spO model along with empirical data from our computational experiments to predict the limits of the growth of such architectures as found in the HEP, ELXSI, Cray, Intel iPSC, et cetera on algorithms such as our parallelized vNR <ref> [4, 8, 18, 10, 11, 12, 13, 18, 19, 20, 21] </ref>. We also have used the T spO model to study the marginal gain efficiency and the number of processors to use for optimal cost effectiveness [4, 18].
References-found: 21

