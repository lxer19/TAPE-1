URL: http://c.gp.cs.cmu.edu:5103/afs/cs.cmu.edu/user/avrim/www/Papers/ktree_constant.ps.gz
Refering-URL: http://c.gp.cs.cmu.edu:5103/afs/cs.cmu.edu/user/avrim/www/Papers/pubs.html
Root-URL: http://www.cs.cmu.edu
Email: Email: avrim@cs.cmu.edu.  Email: ravi@cmu.edu.  Email: svempala@cs.cmu.edu.  
Title: A Constant-factor Approximation Algorithm for the k-MST Problem  cost of the optimal k-MST. The running time  
Author: Avrim Blum R. Ravi Santosh Vempala 
Address: Pittsburgh PA  Pittsburgh PA  Pittsburgh PA 15213.  
Affiliation: School of Computer Science, Carnegie Mellon University,  Graduate School of Industrial Administration, Carnegie Mellon University,  School of Computer Science, Carnegie Mellon University,  
Note: (1ff)k where L is the  15213. Supported in part by NSF National Young Investigator grant CCR-9357793 and a Sloan Foundation Research Fellowship.  15213. Supported in part by NSF CAREER grant CCR-9625297.  
Abstract: Given an undirected graph with non-negative edge costs and an integer k, the k-MST problem is that of finding a tree of minimum cost on k nodes. This problem is known to be NP-hard. We present a simple approximation algorithm that finds a solution whose cost is less than 17 times the cost of the optimum. This improves upon previous performance ratios for this problem - O( k) due to Ravi et al., O(log 2 k) due to Awer-buch et al, and the previous best bound of O(log k) due to Rajagopalan and Vazirani. Given any 0 &lt; ff &lt; 1, we first present a bicriteria approximation algorithm that outputs a tree on p ffk vertices of total cost at most 2pL of the algorithm is O(n 2 log 2 n) on an n-node graph. We then show how to use this algorithm to derive a constant factor approximation algorithm for the k-MST problem. The main subroutine in our algorithm is an approximation algorithm of Goemans and Williamsom for the prize-collecting Steiner tree problem. p
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Arora. </author> <title> Plynomial-time approximation schemes for Euclidean TSP and other geometric problems. </title> <booktitle> In Proceedings of the 37th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 2-13, </pages> <year> 1996. </year>
Reference-contexts: For the case of the k-MST problem on points in the plane, polynomial-time approximation schemes have been derived independently by Arora <ref> [1] </ref> and Mitchell [13]. Acknowledgements. The authors thank Naveen Garg and Balaji Raghavachari for stimulating discussions on the k-MST problem. 13
Reference: [2] <author> B. Awerbuch, Y. Azar, A. Blum, and S. Vempala. </author> <title> Improved approximation guarantees for minimum-weight k-trees and prize-collecting salesmen. </title> <booktitle> In Proceedings of the 27th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 277-283, </pages> <month> May </month> <year> 1995. </year>
Reference-contexts: Other examples are the more general prize-collecting traveling salesman problem of Balas [3], and the orienteering problem of Golden, Levy and Vohra [11]. More details of the relation of these problems to the k-MST problem can be found in <ref> [2] </ref>. Previous work The k-MST problem was shown to be NP-hard by R. Ravi, Sundaram, Marathe, Rosenkrantz, and S. S. Ravi [15] and independently by Fischetti et al. [6], and also by Zelikovsky and Lozevanu [16]. <p> Ravi, Sundaram, Marathe, Rosenkrantz, and S. S. Ravi [15] and independently by Fischetti et al. [6], and also by Zelikovsky and Lozevanu [16]. Ravi et al. [15] also presented an O ( p approximation algorithm for this problem. This was improved by Awerbuch, Azar, Blum and Vempala <ref> [2] </ref> who gave an O (log 2 k)-approximation algorithm. Recently, Rajagopalan and Vazirani [14] obtained an O (log k)-approximation algorithm for the k-MST problem. For the k-MST problem arising from points in the plane, Ravi et al. [15] presented an O (k 1 4 )-approximation algorithm. <p> A smaller constant was obtained by Mitchell [12]. Main result The rooted version of the k-MST problem requires inclusion of a specific root node in the k-tree. As observed in <ref> [2] </ref>, solving the rooted and unrooted versions are essentially equivalent. We present a solution to the rooted version of the problem for simplicity. <p> Note that we do this for each of possibly O (log k) guess values for L. This gives the performance ratio and the running time claimed in Theorem 1. Proof of Theorem 6. The idea is similar to that used in <ref> [2] </ref> to reduce their performance ratio by a logarithmic factor. We are given a rooted tree with (1fl)k vertices. We know that in the graph obtained by contracting the current tree nodes into the root, there exists a rooted tree on flk vertices of total cost at most L.
Reference: [3] <author> E. Balas. </author> <title> The prize collecting traveling salesman problem. </title> <journal> Networks, </journal> <volume> 19 </volume> <pages> 621-636, </pages> <year> 1989. </year>
Reference-contexts: Our goal is to find a tour such that the sum of the values of the vertices reached is at least some specified quota, while minimizing the total distance traveled. Other examples are the more general prize-collecting traveling salesman problem of Balas <ref> [3] </ref>, and the orienteering problem of Golden, Levy and Vohra [11]. More details of the relation of these problems to the k-MST problem can be found in [2]. Previous work The k-MST problem was shown to be NP-hard by R. Ravi, Sundaram, Marathe, Rosenkrantz, and S. S.
Reference: [4] <author> A. Blum, P. Chalasani, D. Coppersmith, B. Pulleyblank, P. Raghavan, and M. Sudan. </author> <title> The minimum latency problem. </title> <booktitle> In Proceedings of the 26th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 163-171, </pages> <year> 1994. </year>
Reference-contexts: We now handle the second problem listed: that of boosting the tree found in the case that it is too small. We do this using the notion of an (a; b)-tree approximator following <ref> [4] </ref>. <p> It is easy to see (as noted in <ref> [4] </ref>) that the results of Goemans and Williamson on approximating the prize-collecting Steiner tree problem [10] yield a (3; 6)-tree approximator. Goemans and Kleinberg [9] show that the Goemans-Williamson algorithm in fact produces a (2; 4)-tree approximator.
Reference: [5] <author> A. Blum, P. Chalasani, and S. Vempala. </author> <title> A constant-factor approximation for the k-MST problem in the plane. </title> <booktitle> In Proceedings of the 27th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 294-302, </pages> <month> May </month> <year> 1995. </year>
Reference-contexts: For the k-MST problem arising from points in the plane, Ravi et al. [15] presented an O (k 1 4 )-approximation algorithm. The approximation ratio was improved to O (log k) by Garg and Hochbaum [8], and subsequently to a constant factor by Blum, Chalasani and Vempala <ref> [5] </ref>. A smaller constant was obtained by Mitchell [12]. Main result The rooted version of the k-MST problem requires inclusion of a specific root node in the k-tree. As observed in [2], solving the rooted and unrooted versions are essentially equivalent.
Reference: [6] <author> M. Fischetti, H.W. Hamacher, K. Jrnsten, F. Maffioli. </author> <title> Weighted k-cardinality trees:complexity and polyhedral structure. </title> <booktitle> In Networks, </booktitle> <volume> 24, </volume> <pages> pages 11-21, </pages> <year> 1994. </year>
Reference-contexts: More details of the relation of these problems to the k-MST problem can be found in [2]. Previous work The k-MST problem was shown to be NP-hard by R. Ravi, Sundaram, Marathe, Rosenkrantz, and S. S. Ravi [15] and independently by Fischetti et al. <ref> [6] </ref>, and also by Zelikovsky and Lozevanu [16]. Ravi et al. [15] also presented an O ( p approximation algorithm for this problem. This was improved by Awerbuch, Azar, Blum and Vempala [2] who gave an O (log 2 k)-approximation algorithm.
Reference: [7] <author> N. Garg. </author> <title> A 3-Approximation for the Minimum Tree Spanning k Vertices. </title> <booktitle> In Proceedings of the 37th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 302-309, </pages> <year> 1996. </year>
Reference-contexts: The bicriteria approximation has running time from Theorem 2. The procedure in Lemma 1 takes O (n 2 ) time. Thus the overall running time is as claimed. 5 Subsequent work Subsequent to our work, Garg <ref> [7] </ref> has shown how a variant of our approach achieves a 3-approximation algorithm for the k-MST problem.
Reference: [8] <author> N. Garg and D. Hochbaum. </author> <title> An O(log k) approximation algorithm for the k minimum spanning tree problem in the plane. </title> <booktitle> In Proceedings of the 26th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 432-438, </pages> <year> 1994. </year>
Reference-contexts: For the k-MST problem arising from points in the plane, Ravi et al. [15] presented an O (k 1 4 )-approximation algorithm. The approximation ratio was improved to O (log k) by Garg and Hochbaum <ref> [8] </ref>, and subsequently to a constant factor by Blum, Chalasani and Vempala [5]. A smaller constant was obtained by Mitchell [12]. Main result The rooted version of the k-MST problem requires inclusion of a specific root node in the k-tree.
Reference: [9] <author> M. Goemans and J. Kleinberg. </author> <title> An improved approximation ratio for the minimum latency problem. </title> <booktitle> In Proceedings of the 7th Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 152-158, </pages> <year> 1996. </year>
Reference-contexts: vertex v with label C is connected to r, then so is every vertex with label ^ C C. 23 C 0 is the set of vertices spanned by F 0 . a bicriteria k-MST. 7 3 Analysis Our analysis relies on the following observation which was made independently in <ref> [9] </ref>. Let OP T 0 be the cost of a minimum solution to the prize-collecting Steiner tree problem. <p> It is easy to see (as noted in [4]) that the results of Goemans and Williamson on approximating the prize-collecting Steiner tree problem [10] yield a (3; 6)-tree approximator. Goemans and Kleinberg <ref> [9] </ref> show that the Goemans-Williamson algorithm in fact produces a (2; 4)-tree approximator. These approximators work by calling the prize-collecting Steiner tree algorithm with a suitable choice of penalties. <p> To show the running time, note that we used at most two calls to our bicrite-ria approximator, one call to the (2; 4)-tree approximator of <ref> [9] </ref>, and one call to the procedure in the proof of Lemma 1. The tree approximator in [9] can be implemented using at most log n calls to the prize-collecting Steiner tree ap proximation algorithm of [10] giving a running time O (n 2 log 2 n). <p> To show the running time, note that we used at most two calls to our bicrite-ria approximator, one call to the (2; 4)-tree approximator of <ref> [9] </ref>, and one call to the procedure in the proof of Lemma 1. The tree approximator in [9] can be implemented using at most log n calls to the prize-collecting Steiner tree ap proximation algorithm of [10] giving a running time O (n 2 log 2 n). The bicriteria approximation has running time from Theorem 2. The procedure in Lemma 1 takes O (n 2 ) time.
Reference: [10] <author> M. Goemans and D. Williamson. </author> <title> A general approximation technique for constrained forest problems. </title> <journal> SIAM J. Computing 24, </journal> <pages> pages 296-317, 995. </pages>
Reference-contexts: We prove Theorem 2 by reducing our bicriteria problem to a version of a prize-collecting Steiner tree problem and applying an approximation algorithm of Goemans and Williamson <ref> [10] </ref> for the prize-collecting Steiner tree problem. However, the performance guarantee they prove for their algorithm is not sufficient for our purposes, and we prove a strengthening of it in Theorem 4. <p> The root node for the Steiner tree problem is the same as that for the k-MST problem. All nodes in the graph are designated terminal 3 nodes and assigned the same penalty value of = L (1ff)k . Next, we apply the approximation algorithm of Goemans and Williamson <ref> [10] </ref> to this prize-collecting problem. We include an intuitive overview and formal description of the prize-collecting approximation algorithm of Goemans and Williamson as applied to our problem for completeness 1 . <p> Then from Theorem 4 we have X c e + 2 (n p): (1 ff)k L ): Rearranging terms, X c e (1 ff)k whence the claim. Proof of Theorem 4. The proof of this theorem follows the proof of the analogous theorem in <ref> [10] </ref>. Recall that C r is the component containing the root at the termination of the first phase of the algorithm. After the pruning in the second phase, a subset of the nodes C 0 C r are retained in the final tree F 0 . <p> Then ` L k `, and we have the required bound. The running time of the algorithm then follows from noting that the basic algorithm can be implemented in O (n 2 log n) time using ideas from <ref> [10] </ref>. 4 Completion The algorithm presented so far has the following guarantee. Given an integer k, a bound L on the cost of the optimal k-MST, and ff 2 (0; 1), the algorithm finds a tree on p ffk vertices of cost at most p 2L (1ff)k . <p> It is easy to see (as noted in [4]) that the results of Goemans and Williamson on approximating the prize-collecting Steiner tree problem <ref> [10] </ref> yield a (3; 6)-tree approximator. Goemans and Kleinberg [9] show that the Goemans-Williamson algorithm in fact produces a (2; 4)-tree approximator. These approximators work by calling the prize-collecting Steiner tree algorithm with a suitable choice of penalties. <p> The tree approximator in [9] can be implemented using at most log n calls to the prize-collecting Steiner tree ap proximation algorithm of <ref> [10] </ref> giving a running time O (n 2 log 2 n). The bicriteria approximation has running time from Theorem 2. The procedure in Lemma 1 takes O (n 2 ) time.
Reference: [11] <author> B.L. Golden, L. Levy, and R. Vohra. </author> <title> The orienteering problem. </title> <journal> Naval Research Logistics, </journal> <volume> 34 </volume> <pages> 307-318, </pages> <year> 1987. </year>
Reference-contexts: Other examples are the more general prize-collecting traveling salesman problem of Balas [3], and the orienteering problem of Golden, Levy and Vohra <ref> [11] </ref>. More details of the relation of these problems to the k-MST problem can be found in [2]. Previous work The k-MST problem was shown to be NP-hard by R. Ravi, Sundaram, Marathe, Rosenkrantz, and S. S.
Reference: [12] <author> J.S.B. Mitchell. </author> <title> Guillotine subdivisions approximate polygonal subdivisions: A simple new method for the geometric k-MST problem. </title> <booktitle> In Proceedings of the 7th Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 402-408, </pages> <year> 1996. </year> <month> 14 </month>
Reference-contexts: The approximation ratio was improved to O (log k) by Garg and Hochbaum [8], and subsequently to a constant factor by Blum, Chalasani and Vempala [5]. A smaller constant was obtained by Mitchell <ref> [12] </ref>. Main result The rooted version of the k-MST problem requires inclusion of a specific root node in the k-tree. As observed in [2], solving the rooted and unrooted versions are essentially equivalent. We present a solution to the rooted version of the problem for simplicity.
Reference: [13] <author> J.S.B. Mitchell. </author> <title> Guillotine subdivisions approximate polygonal subdivi-sions: Part II A simple polynomial-time approximation scheme for geometric k-MST, TSP, and related problems. </title> <type> Manuscript, </type> <month> April 30, </month> <year> 1996. </year> <note> To appear, SIAM J. Comp. </note>
Reference-contexts: For the case of the k-MST problem on points in the plane, polynomial-time approximation schemes have been derived independently by Arora [1] and Mitchell <ref> [13] </ref>. Acknowledgements. The authors thank Naveen Garg and Balaji Raghavachari for stimulating discussions on the k-MST problem. 13
Reference: [14] <author> S. Rajagopalan and V. Vazirani. </author> <title> Logarithmic approximation of minimum weight k trees. </title> <type> Unpublished manuscript, </type> <month> August </month> <year> 1995. </year>
Reference-contexts: Ravi et al. [15] also presented an O ( p approximation algorithm for this problem. This was improved by Awerbuch, Azar, Blum and Vempala [2] who gave an O (log 2 k)-approximation algorithm. Recently, Rajagopalan and Vazirani <ref> [14] </ref> obtained an O (log k)-approximation algorithm for the k-MST problem. For the k-MST problem arising from points in the plane, Ravi et al. [15] presented an O (k 1 4 )-approximation algorithm.
Reference: [15] <author> R. Ravi, R. Sundaram, M.V. Marathe, D.J. Rosenkrantz, and S.S. Ravi. </author> <title> Spanning trees short and small. </title> <booktitle> In Proceedings of the 5th Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <year> 1994. </year>
Reference-contexts: We refer to a tree that spans k vertices as a k-tree. Note that we may assume that the edge costs satisfy the triangle inequality without loss of generality <ref> [15] </ref>. The main result of this paper is a constant factor approximation algorithm for the k-MST problem. This algorithm naturally extends to give constant factor approximations for several problems whose solution is based on the k-MST. <p> More details of the relation of these problems to the k-MST problem can be found in [2]. Previous work The k-MST problem was shown to be NP-hard by R. Ravi, Sundaram, Marathe, Rosenkrantz, and S. S. Ravi <ref> [15] </ref> and independently by Fischetti et al. [6], and also by Zelikovsky and Lozevanu [16]. Ravi et al. [15] also presented an O ( p approximation algorithm for this problem. This was improved by Awerbuch, Azar, Blum and Vempala [2] who gave an O (log 2 k)-approximation algorithm. <p> Previous work The k-MST problem was shown to be NP-hard by R. Ravi, Sundaram, Marathe, Rosenkrantz, and S. S. Ravi <ref> [15] </ref> and independently by Fischetti et al. [6], and also by Zelikovsky and Lozevanu [16]. Ravi et al. [15] also presented an O ( p approximation algorithm for this problem. This was improved by Awerbuch, Azar, Blum and Vempala [2] who gave an O (log 2 k)-approximation algorithm. Recently, Rajagopalan and Vazirani [14] obtained an O (log k)-approximation algorithm for the k-MST problem. <p> This was improved by Awerbuch, Azar, Blum and Vempala [2] who gave an O (log 2 k)-approximation algorithm. Recently, Rajagopalan and Vazirani [14] obtained an O (log k)-approximation algorithm for the k-MST problem. For the k-MST problem arising from points in the plane, Ravi et al. <ref> [15] </ref> presented an O (k 1 4 )-approximation algorithm. The approximation ratio was improved to O (log k) by Garg and Hochbaum [8], and subsequently to a constant factor by Blum, Chalasani and Vempala [5]. A smaller constant was obtained by Mitchell [12].
Reference: [16] <author> A. Zelikovsky and D. Lozevanu. </author> <title> Minimal and bounded trees. In Tezele Cong. </title> <journal> XVIII Acad. Romano-Americane, </journal> <volume> Kishinev, </volume> <pages> pages 25-26, </pages> <year> 1993. </year> <month> 15 </month>
Reference-contexts: Previous work The k-MST problem was shown to be NP-hard by R. Ravi, Sundaram, Marathe, Rosenkrantz, and S. S. Ravi [15] and independently by Fischetti et al. [6], and also by Zelikovsky and Lozevanu <ref> [16] </ref>. Ravi et al. [15] also presented an O ( p approximation algorithm for this problem. This was improved by Awerbuch, Azar, Blum and Vempala [2] who gave an O (log 2 k)-approximation algorithm. Recently, Rajagopalan and Vazirani [14] obtained an O (log k)-approximation algorithm for the k-MST problem.
References-found: 16

