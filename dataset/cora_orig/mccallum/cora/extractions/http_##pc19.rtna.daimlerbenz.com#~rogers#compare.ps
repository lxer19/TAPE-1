URL: http://pc19.rtna.daimlerbenz.com/~rogers/compare.ps
Refering-URL: http://ai.eecs.umich.edu/people/laird/airesearch.html
Root-URL: 
Email: srogers@eecs.umich.edu  
Phone: (313) 763-1572  
Title: Symbolic Performance Learning in Complex Environments Issues: Agent architectures; Coordinating perception, thought, and action; Adaptation
Author: Seth O. Rogers and John E. Laird Citation: Rogers, Seth O., Laird, John E., 
Date: July 1996,  
Note: Technical  "Symbolic Performance Learning in Continuous- valued Environments", unpublished,  http://www.eecs.umich.edu/ srogers/compare.ps.  
Address: 1101 Beal Avenue Ann Arbor, MI 48109-2110 USA  
Affiliation: University of Michigan AI Lab  
Abstract: The goal of this project is to enable an agent to learn to achieve desired states in complex environments using a symbolic architecture. We focus on environments in which the state variables available to the agent are members of large, totally ordered sets such as the integers or reals. One advantage of symbolic processing over traditional numeric regression techniques is the natural interface it provides with other sources of symbolic knowledge, such as natural language and planning domain theories. Our general approach is to endow an agent with a small amount of seed knowledge and allow it to learn about its environment through its own experience. Experiments with the agent show it to perform well in extremely complex environments, outperforming some traditional control algorithms in some environments. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Akima, H. </author> <year> 1984. </year> <title> On estimating partial derivatives for bivariate interpolation of scattered data. </title> <note> Rocky Mountain Journal of Mathematics 14(1). </note>
Reference-contexts: The second algorithm explicitly models the environment by fitting a spline surface (De- Boor 1978) to the data points, and updating the surface as new points are learned. The spline fitting procedure is part of the NCAR mathematical algorithms library, and was presented in <ref> (Akima 1984) </ref>. The third algorithm is Receptive Field Weighted Re- gression (RFWR), by Schaal and Atkeson. It is most similar to SPLICE because it also uses local models to fit the response surface, but it uses statistical techniques to create and update the local models.
Reference: <author> DeBoor, C. </author> <year> 1978. </year> <title> A Practical Guide to Splines. </title> <booktitle> Applied mathematical sciences. </booktitle> <address> New York: SpringerVerlag. </address>
Reference: <author> Dorf, R. C. </author> <year> 1989. </year> <title> Modern Control Systems. </title> <journal> AddisonWesley, </journal> <note> 5th edition edition. </note>
Reference-contexts: In addition, the action may modify internal state and, through learning, modify the agent. Figure 1 depicts the interaction between the agent and environment. This problem is analogous to control theory <ref> (Dorf 1989) </ref>, which attempts to design controllers which regulate a physical system to keep certain variables within safe operating limits. When the dynamics of the target system are unknown, adaptive controllers modify themselves to improve their performance. <p> Results In order to test the learning rate and accuracy of SPLICE against some popular numerical techniques, we created several complex environments and measured the performance of each control algorithm. We chose three numerical control algorithms. The first is a simple non-adaptive PID control algorithm <ref> (Dorf 1989) </ref>. The weights for each error measurement were manually tuned to perform as well as possible over the entire domain. The second algorithm explicitly models the environment by fitting a spline surface (De- Boor 1978) to the data points, and updating the surface as new points are learned.
Reference: <author> Fayyad, U. M. </author> <year> 1991. </year> <title> On the Induction of Decision Trees for Multiple Concept Learning. </title> <type> Ph.D. Dissertation, </type> <institution> The University of Michigan. </institution>
Reference-contexts: Finally, the environment responds to the action, providing SPLICE new input and initiating another performance cycle. The performance loop is illustrated in Figure 2. The symbol mapping process allows SPLICE to refer to a range of numbers as a single symbol, similar to the approach of <ref> (Fayyad 1991) </ref>. When the agent has little knowledge about its environment, it is forced to use very wide, or general regions. As the agent gains experience, it is able to take advantage of more and more specific regions, allowing more accurate performance.
Reference: <author> Forbus, K. D. </author> <year> 1988. </year> <title> Qualitative physics: Past, present, and future. </title> <editor> In Shrobe, H., ed., </editor> <booktitle> Exploring Artificial Intelligence. </booktitle> <publisher> Morgan Kaufmann. </publisher> <pages> 239-296. </pages>
Reference-contexts: However, approximate knowledge about these environments, such as a qualitative model <ref> (Forbus 1988) </ref> of the relevant variables and effects of actions, is often available, and it is exactly this knowledge that can dramatically speed up early learning in complex environments and direct the agent down productive paths. This paper will present an agent design that embodies these concepts.
Reference: <author> Laird, J. E.; Newell, A.; and Rosenbloom, P. S. </author> <year> 1987. </year> <title> Soar: An architecture for general intelligence. </title> <booktitle> Artificial Intelligence 33(1) </booktitle> <pages> 1-64. </pages>
Reference-contexts: This paper will present an agent design that embodies these concepts. SPLICE (Symbolic Performance & Learning In Complex Environments) is an agent based on the Soar <ref> (Laird, Newell, & Rosenbloom 1987) </ref> architecture, a symbolic rule-based AI system. SPLICE includes domain-independent performance and learning components, and a domain-dependent qualitative model (implemented as rules in Soar).
Reference: <author> Miller, C. M. </author> <year> 1993. </year> <title> A model of concept acquisition in the context of a unified theory of cognition. </title> <type> Ph.D. Dissertation, </type> <institution> The University of Michigan, Dept. of Computer Science and Electrical Engineering. </institution>
Reference-contexts: This computation takes the form of a search from specific to general through a generalized case database. This allows the agent to find the most specific case which matches the current situation. The search algorithm is based on SCA, described in <ref> (Miller 1993) </ref>. The case database is a set of generalized cases, each of which is composed of conditions and an action. The conditions are state and goal regions, which must exactly match some current state and goal regions.
Reference: <author> Newell, A. </author> <year> 1980. </year> <title> Physical symbol systems. </title> <booktitle> Cognitive Science 4 </booktitle> <pages> 135-183. </pages>
Reference-contexts: Also, complete agents may have additional capabilities, such as natural language and planning. Since these capabilities tend to have symbolic implementations, a symbolic control module encourages closer integration. Finally, attempting to implement a symbolic algorithm for control tests the Physical Symbol System Hypoth- esis <ref> (Newell 1980) </ref>, which states that a physical symbol system is capable of carrying out all intelligent behavior. Although the specific details of the symbolic implementation may be improved upon, we believe that it is valuable to investigate symbolic approaches to control.
Reference: <author> Pearson, D. J., and Laird, J. E. </author> <year> 1996. </year> <title> Toward incre-mental knowledge correction for agents in complex environments. </title> <booktitle> In Machine Intelligence, </booktitle> <volume> volume 15. </volume> <publisher> Oxford University Press. </publisher>
References-found: 9

