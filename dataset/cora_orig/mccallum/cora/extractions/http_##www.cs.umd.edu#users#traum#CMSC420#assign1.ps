URL: http://www.cs.umd.edu/users/traum/CMSC420/assign1.ps
Refering-URL: http://www.cs.umd.edu/users/traum/CMSC420/
Root-URL: 
Title: CMSC 420 PROGRAMMING ASSIGNMENT 1: A DATA STRUCTURE FOR POINT DATABASES  
Date: Spring 1997  
Abstract: In this assignment you are required to implement an information management system for handling multidimensional data similar to that used in database management systems. In such an environment the primary entities are points in a multidimensional space and the problem in which we are interested is how to manage a large collection of them. In the following, we describe a variant of the quadtree data structure that has been found to be useful for such a problem. Your task is to implement this data structure in such a way that a number of operations can be efficiently handled. This assignment is divided into three parts. You may program in PASCAL C, or C++. For the first two parts, you must read the attached description of the problem and data structure. A detailed explanation of the assignment including the specification of the operations which you are to implement is found at the end of the description. After you have done this, you are to turn in a proposed implementation of the data structure using PASCAL's record (or C or C++'s structure) definition facility. One week later you must turn in a program for the command decoder (i.e., a scanner for the commands corresponding to the operations which are to be performed on the data structure). For the third part, you are to write a program to implement the data structure and the specified operations.
Abstract-found: 1
Intro-found: 1
Reference: [ Finkel and Bentley, 1974 ] <author> R.A. Finkel and J.L. Bentley. </author> <title> Quad trees: a data structure for retrieval on composite keys. </title> <journal> Acta Informatica, </journal> <volume> 1 </volume> <pages> 1-9, </pages> <year> 1974. </year>
Reference-contexts: Please refer to [ Samet, 1990 ] or other references for more details. Note that this material will not be covered in class until well after the assignment is due. 1.1 POINT QUADTREES The point quadtree is a data structure for storing multidimensional point data developed by <ref> [ Finkel and Bentley, 1974 ] </ref> . It should be easy for you to understand it because it is fl Instructional Material Copyright 1997 by Hanan Samet. <p> Deletion of nodes from a point quadtree is not simple. <ref> [ Finkel and Bentley, 1974 ] </ref> suggest that all nodes of the tree rooted at the deleted node must be reinserted a sometimes expensive process. Nevertheless, you may (and most likely will want to!) use this process. <p> Similarly, if R is in region 7, then the subsequent search can be restricted to the NW and NE quadrants of R. Similar techniques can be used to search for data points in any connected figure. For example, <ref> [ Finkel and Bentley, 1974 ] </ref> give algorithms for searching within a rectangular window of arbitrary size. 2 ASSIGNMENT This assignment has three parts. It is to be programmed in PASCAL or C or C++. The first part is concerned with data structure selection.
Reference: [ Klinger, 1971 ] <author> A. Klinger. </author> <title> Patterns and search statistic. </title> <editor> In J.S. Rustagi, editor, </editor> <booktitle> Optimizing Methods in Statistics, </booktitle> <pages> pages 303-337. </pages> <publisher> Academic Press, </publisher> <year> 1971. </year>
Reference-contexts: Note that the regions are usually not of equal size. Requiring the regions to be of equal size leads to a variant of the region quadtree of <ref> [ Klinger, 1971 ] </ref> . This data structure was developed for representing homogeneous spatial data and is used in computer graphics, image processing, geographical information systems, pattern recognition, and other applications.
Reference: [ Samet, 1990 ] <author> H. Samet. </author> <title> The Design and Analysis of Spatial Data Structures. </title> <publisher> Addison-Wesley, </publisher> <year> 1990. </year>
Reference-contexts: 1 Background To do this assignment, you will need to learn about Quadtrees. The material presented here gives a brief introduction. Please refer to <ref> [ Samet, 1990 ] </ref> or other references for more details. <p> Its use in computer graphics is rooted in the work of [ Warnock, 1969 ] who applied it to hidden surface elimination. We shall not say more about the region quadtree. For more details on quadtrees, see <ref> [ Samet, 1990 ] </ref> . Records are inserted into point quadtrees in a manner similar to that done for binary search trees. In essence, we search for the desired record based on its x and y coordinates. <p> Equivalently, we say that the lower and left boundaries of each block are closed while the upper and right boundaries of each block are open. For example, in Figure 1 All figure numbers and page numbers refer to <ref> [ Samet, 1990 ] </ref> . 2 2.4, insertion of Memphis with coordinates (35,20) would lead to its placement somewhere in quadrant SE of the tree rooted at Chicago (i.e., at (35,40)). <p> Unfortunately, this involves a considerable amount of search. In fact, it is not uncommon that such a node fails to exist (e.g., when deleting node A in Figure 2.7). <ref> [ Samet, 1990 ] </ref> suggests an algorithm that proceeds in a manner analogous to the method for binary search trees. <p> Similarly, E and I would have to be reinserted along with some of their subtrees in the quadrant rooted at N. For more details about such a solution, see pp. 54-64 in <ref> [ Samet, 1990 ] </ref> . The point quadtree is especially attractive in applications that involve search. A typical query is one that requests the determination of all nodes within a specified distance of a given data point - i.e., all cities within 50 miles of Washington, D.C.
Reference: [ Warnock, 1969 ] <author> J.L. Warnock. </author> <title> A hidden surface algorithm for computer generated half tone pictures. </title> <type> TRAINS Technical Note 4-15, </type> <institution> Computer Science Dept. University of Utah, </institution> <year> 1969. </year>
Reference-contexts: This data structure was developed for representing homogeneous spatial data and is used in computer graphics, image processing, geographical information systems, pattern recognition, and other applications. Its use in computer graphics is rooted in the work of <ref> [ Warnock, 1969 ] </ref> who applied it to hidden surface elimination. We shall not say more about the region quadtree. For more details on quadtrees, see [ Samet, 1990 ] . Records are inserted into point quadtrees in a manner similar to that done for binary search trees.
References-found: 4

