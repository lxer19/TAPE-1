URL: ftp://theory.cs.uni-bonn.de/pub/reports/cs-reports/1990/8543-cs.ps.gz
Refering-URL: http://cs.uni-bonn.de/info5/publications/CS-1990-en.html
Root-URL: http://cs.uni-bonn.de
Email: andrzej@boulder.colorado.edu  marek@icsi.berkeley.edu  
Title: The Computational Complexity of (XOR; AND)-Counting Problems  
Author: Andrzej Ehrenfeucht Marek Karpinski 
Note: Supported in part by the Leibniz Center for Research in Computer Science, by DFG Grant KA 673/2-1, and by the SERC Grant GR-E 68297.  
Address: Boulder, Colorado 8030L  Berkeley, California  
Affiliation: Dept. of Computer Science University of Colorado,  Dept. of Computer Science University of Bonn, 5300 Bonn 1 and International Computer Science Institute  
Abstract: We characterize the computational complexity of counting the exact number of satisfying assignments in (XOR; AND)-formulas in their RSE-representation (i.e., equivalently, polynomials in GF [2][x 1 ; : : :; x n ]). This problem refrained for some time effords to find a polynomial time solution and the efforts to prove the problem to be #P -complete. Both main results can be generalized to the arbitrary finite fields GF[q]. Because counting the number of solutions of polynomials over finite fields is generic for many other algebraic counting problems, the results of this paper settle a border line for the algebraic problems with a polynomial time counting algorithms and for problems which are #P -complete. In [KL 89] the couting problem for arbitrary multivariate polynomials over GF[2] has been proved to have randomized polynomial time approximation algorithms. 
Abstract-found: 1
Intro-found: 1
Reference: [AW 85] <author> Ajtai, M. and Wigderson, A., </author> <title> Deterministic Simulation of Probabilistic Constant Depth Circuits, </title> <booktitle> Proc. 26 th IEEE FOCS (1985), </booktitle> <pages> pp. 11 - 19 </pages>
Reference: [G 77] <author> Gill, J., </author> <title> Computational Complexity of Probabilistic Turing Machines, </title> <journal> SIAM J. Comput. </journal> <volume> 6, </volume> <pages> pp. 675 - 694 </pages>
Reference-contexts: We characterize also Majority and Solutions' Equilibrium Problems for 4XOR-formulas. (SAT for polynomials f is equivalent with checking whether f j 0, trivially doable for explicitely given f .) For the corresponding results for the (^; _; :)-basis see <ref> [G 77] </ref>. Theorem 2. Given any 4XOR formula f 2 GF [2][x 1 ; : : : ; x n ], the problems of deciding whether #f &gt; 2 n1 and #f = 2 n1 are both NP-hard.
Reference: [GJ 79] <author> Garey, M.R. and Johnson, </author> <title> D.S., Computers and Intractability: A Guide to the Theory of NP-Completeness, </title> <publisher> Freeman and Company, </publisher> <address> New York (1979) </address>
Reference-contexts: For k = n + m, the problem of deciding 3CNF SAT is polynomial time reducible to the problem of checking whether #s (u) &gt; 2 k1 or #s (u) = 2 k1 . 2 Remark: Using Valiant's result (cf. <ref> [GJ 79] </ref>, p. 251) on systems of algebraic equations over GF [2], we can analogously prove that the Majority and Equilibrium Problems are NP-hard already for 3XOR-formulas. 4 2XOR-Counting Problem We are going to design an algorithm to count the number #f for arbitrary f 2 2XOR (f 2 F [2][x
Reference: [KL 83] <author> Karp, R.M. and Luby, M., </author> <title> Monte-Carlo Algorithms for Enumeration and Reliability Problems, </title> <booktitle> Proc. 24 th IEEE FOCS (1983), </booktitle> <pages> pp. 56-64 </pages>
Reference: [KL 85] <author> Karp, R.M. and Luby, M., </author> <title> Monte-Carlo Algorithms for the Planar Multiterminal Network Reliability Problem, </title> <editor> J. </editor> <booktitle> of Complexity 1 (1985), </booktitle> <pages> pp. 45 - 64 </pages>
Reference: [KL 89] <author> Karpinski, M. and Luby, M., </author> <title> Approximating the Number of Solutions of a GF[2]- Polynomial, </title> <type> manuscript, </type> <year> 1989 </year> <month> 7 </month>
Reference: [KLM 89] <author> Karp, R.M., Luby, M. and Madras, N., </author> <title> Monte-Carlo Approximation Algorithms for Enumeration Problems, </title> <editor> J. </editor> <booktitle> of Algorithms 10 (1989), </booktitle> <pages> pp. 429 - 448 </pages>
Reference: [V 79] <author> Valiant, L.G., </author> <title> The Complexity of Enumeration and Reliability Problems, </title> <journal> SIAM J. Com-put. </journal> <volume> 8, </volume> <pages> pp. 410 - 421 </pages>
Reference-contexts: The problem of computing #f for any given monotone 2DNF formula is #P -complete (cf., e.g. <ref> [V 79] </ref>). We define the system w i of polynomials by w i = a i b i ; i = 1; : : : ; m and construct the polynomial u = L m i=1 w i z i as in section 2.
Reference: [W 87] <author> Wegener, I., </author> <title> The Complexity of Boolean Functions, </title> <publisher> John Wiley, </publisher> <address> New York, </address> <year> 1987 </year> <month> 8 </month>
References-found: 9

