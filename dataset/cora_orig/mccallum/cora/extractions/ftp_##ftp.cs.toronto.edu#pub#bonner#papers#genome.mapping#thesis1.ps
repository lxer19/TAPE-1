URL: ftp://ftp.cs.toronto.edu/pub/bonner/papers/genome.mapping/thesis1.ps
Refering-URL: http://www.cs.toronto.edu/DB/people/bonner/papers.html
Root-URL: 
Title: Using Interval Graphs for Solving Map Assembly Problems  
Author: by James R. Randall 
Degree: A thesis submitted in conformity with the requirements of the degree of Master of Science  
Note: Copyright c by James R. Randall 1997  
Date: September 1997  
Address: Toronto, Ontario, Canada  Toronto  
Affiliation: Department of Computer Science University of Toronto  Graduate Department of Computer Science University of  
Abstract-found: 0
Intro-found: 1
Reference: <author> R. Arratia, E.S. Lander, S. Tavare and M.S. Waterman, </author> <title> Genomic mapping by anchoring random clones: a mathematical analysis, </title> <journal> Genomics, </journal> <volume> 11, </volume> <year> (1991), </year> <pages> 806-827. </pages>
Reference-contexts: With this, any two STSs must have at least two YACs in common before they are considered adjacent. This dramatically reduces the number of false adjacencies to a more manageable level, as the odds of having two chimeric YACs in the same area of the genome are very low <ref> (Arratia, Lander, Tavare and Waterman, 1991) </ref>. Unfortunately, this strategy tends to force data sets that are thin to become disconnected, but the resulting significant reduction in false positives is almost always worth it. False positives in the data greatly disrupt the structure of the corresponding graphs.
Reference: <author> K.S. Booth and G.S. Lueker, </author> <title> Testing for the consecutive ones property, interval graphs, and graph planarity using PQ-tree algorithms, </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 13, </volume> <year> (1976), </year> <pages> 335-379. </pages>
Reference: <author> C. Cantor, D. Casey and S. Spengler, </author> <title> Primer on Molecular Genetics, Department of Energy Human Genome 1991-1992 Program Report, </title> <month> (June </month> <year> 1992). </year>
Reference: <author> G.A. Cheston and D.G. Corneil, </author> <title> Graph property update algorithms and their application to distance matrices, </title> <journal> Informatics, </journal> <volume> 20, </volume> <year> (1982), </year> <pages> 178-201. </pages>
Reference: <author> D.G. Corneil, S. Olariu, and L. Stewart, </author> <title> Private communication, </title> <year> (1996). </year>
Reference-contexts: Proposition 2.3. (Corneil, Olariu and Stewart, 1998a) Let v be an arbitrary vertex of an AT-free graph G. The vertex numbered last by LBFS (v) is admissible in G. Proposition 2.4. <ref> (Corneil, Olariu and Stewart, 1996) </ref> For an interval graph G, for every i, j and k with 0 i &lt; j &lt; k p, if a vertex in Y i is adjacent to a vertex in Y k , then it is adjacent to all vertices in Y j . <p> Proposition 2.5. <ref> (Corneil, Olariu and Stewart, 1996) </ref> For an interval graph G, let i and 8 j be such that 0 i &lt; j p.
Reference: <author> D.G. Corneil, S. Olariu, and L. Stewart, </author> <title> Asteroidal triple-free graphs, </title> <journal> SIAM Journal of Discrete Mathematics, </journal> <volume> 10, </volume> <year> (1997), </year> <pages> 399-430. </pages>
Reference-contexts: The fact that interval graphs are based on intervals of a straight line would suggest that they should have some kind of linear structure. One potential description for this linearity is contained in asteroidal triple-free graphs <ref> (Corneil, Olariu and Stewart, 1997) </ref>. An asteroidal triple is a set of 3 pair-wise non-adjacent vertices such that between any two there is a path that avoids the neighbourhood of the third (Figure 2.3).
Reference: <author> D.G. Corneil, S. Olariu, and L. Stewart, </author> <title> Linear time algorithms for dominating pairs in asteroidal triple-free graphs, </title> <note> to appear, SIAM Journal on Computation, </note> <year> (1998). </year>
Reference: <author> D.G. Corneil, S. Olariu, and L. Stewart, </author> <title> The ultimate interval graph recognition algorithm? (extended abstract), to appear, </title> <booktitle> Proceedings of the Symposium on Discrete Algoritms, </booktitle> <year> (1998). </year>
Reference: <author> P.C. Gilmore and A.J. Hoffman, </author> <title> A characterization of comparibility graphs and interval graphs, </title> <journal> Canadian Journal of Mathematics, </journal> <volume> 16, </volume> <year> (1964), </year> <pages> 539-548. </pages>
Reference-contexts: They are chordal (or triangulated), meaning that every cycle of length four or greater has a chord. As well, there are numerous meaningful ways of ordering subcomponents of the interval graphs, as is evidenced by the following two theorems. Theorem 2.1. <ref> (Gilmore and Hoffman, 1964) </ref> A graph G is an interval graph if and only if the maximal cliques of G can be linearly ordered such that, for every vertex v of G, the maximal cliques containing x occur consecutively.
Reference: <author> M.C. Golumbic, </author> <title> Algorithmic Graph Theory and Perfect Graphs, </title> <publisher> Academic Press, </publisher> <year> (1980). </year>
Reference-contexts: An interval graph can be constructed by letting the nodes of the graph correspond to the STSs, and putting an edge between two nodes whenever the two STSs both occur in the same YAC (Figure 2.2). A good reference for learning more about interval and other related graphs is <ref> (Golumbic, 1980) </ref>. The vertical lines represent STS probes, the horizontal lines YACs Interval graphs have a number of interesting properties. They are chordal (or triangulated), meaning that every cycle of length four or greater has a chord.
Reference: <author> E. Harley and A.J. Bonner, </author> <title> A flexible approach to genome map assembly, </title> <booktitle> Proceedings of the International Symposium on Intelligent Systems for Molecular Biology, </booktitle> <year> (1994), </year> <pages> 161-169. </pages>
Reference: <author> E. Harley, A.J. Bonner and N. Goodman, </author> <title> Good Maps are Straight, </title> <booktitle> Proceedings of the Fourth International Conference on Intelligent Systems for Molecular Biology, </booktitle> <year> (1996), </year> <pages> 88-97. </pages>
Reference-contexts: In this thesis, a simulator developed by Lincoln Stein at the Whitehead Institute/MIT Centre for Genome Research and extended by Eric Harley at the University of Toronto was used to generate data sets <ref> (Harley and Stein, 1996) </ref>. This simulator produces STS-style adjacency data by building up a set of chromosomes, and randomly assigning them genetic properties in a way that models those found in real chromosomes. <p> If data from other types of genetic experiments could be used to help detect which branch is false, this would ameliorate the primary weakness of these algorithms. This kind of approach, very much like the one developed in <ref> (Harley, Bonner and Goodman, 1996) </ref>, is the type of solution that holds the most promise for dealing with this particularly pernicious type of noise. 29
Reference: <author> E. Harley and L.D. Stein, </author> <type> Personal communication, </type> <year> (1996). </year>
Reference-contexts: In this thesis, a simulator developed by Lincoln Stein at the Whitehead Institute/MIT Centre for Genome Research and extended by Eric Harley at the University of Toronto was used to generate data sets <ref> (Harley and Stein, 1996) </ref>. This simulator produces STS-style adjacency data by building up a set of chromosomes, and randomly assigning them genetic properties in a way that models those found in real chromosomes. <p> If data from other types of genetic experiments could be used to help detect which branch is false, this would ameliorate the primary weakness of these algorithms. This kind of approach, very much like the one developed in <ref> (Harley, Bonner and Goodman, 1996) </ref>, is the type of solution that holds the most promise for dealing with this particularly pernicious type of noise. 29
Reference: <author> N. Korte and R.H. Mohring, </author> <title> An incremental linear-time algorithm for recognizing interval graphs, </title> <journal> SIAM Journal on Computing, </journal> <volume> 18, </volume> <year> (1989), </year> <month> 68-81. </month> <title> 30 C.G. Lekkerkerker and J.C. Boland, Representation of a finite graph by a set of intervals on the real line, </title> <journal> Fundamenta Mathmaticae, </journal> <volume> 51, </volume> <year> (1962), </year> <pages> 45-64. </pages>
Reference: <author> S. Olariu, </author> <title> An optimal greedy heuristic to color interval graphs, </title> <journal> Information Processing Letters, </journal> <volume> 37, </volume> <year> (1991), </year> <pages> 65-80. </pages>
Reference-contexts: Theorem 2.1. (Gilmore and Hoffman, 1964) A graph G is an interval graph if and only if the maximal cliques of G can be linearly ordered such that, for every vertex v of G, the maximal cliques containing x occur consecutively. Theorem 2.2. <ref> (Olariu, 1991) </ref> A graph G is an interval graph if and only if its vertices can be ordered so that for all vertices u, v, and w, if u is less than v and v is less than w and if uw is an edge then uv is an edge.
Reference: <author> D.J. Rose, R.E. Tarjan and G.S. Lueker, </author> <title> Algorithmic aspects of vertex elimination of graphs, </title> <journal> SIAM Journal on Computing, </journal> <volume> 5, </volume> <year> (1976), </year> <pages> 266-283. </pages>
Reference-contexts: In particular, LBFS is a particularly promising algorithm. LBFS is extremely important for AT-free graphs (Corneil, Olariu and Stewart, 1998a), as well as for chordal graph recognition <ref> (Rose, Tarjan and Lueker, 1976) </ref>. Since interval graphs are the intersection of the AT-free and chordal graphs, one would expect LBFS to be important for interval graphs as well.
Reference: <author> D.R. Shier, </author> <title> Some aspects of perfect elimination orderings in chordal graphs, </title> <journal> Discrete Applied Mathematics, </journal> <volume> 7, </volume> <year> (1984), </year> <pages> 325-331. </pages>
Reference-contexts: This is sometimes called MCC, since it picks the vertex with the maximum cardinality neighbourhood in its connected component <ref> (Shier, 1984) </ref>. This is simple to implement, and while picking the most strongly connected vertex as the next to add is not biologically guaranteed to be the correct, it is a reasonable guess (Table 4.6).
Reference: <author> R. Tamarin and R.W. Leavitt, </author> <title> Principles of Genetics, Wm. </title> <address> C. </address> <publisher> Brown Publishers, </publisher> <year> (1991). </year>
Reference: <author> J.D. Watson, M. Gilman, J. Witkowski and M. Zoller, </author> <title> Recombinant DNA, </title> <publisher> Scientific American Books, </publisher> <year> (1992). </year> <month> 31 </month>
References-found: 19

