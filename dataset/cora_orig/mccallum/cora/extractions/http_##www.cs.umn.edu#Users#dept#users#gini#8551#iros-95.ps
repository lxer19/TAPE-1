URL: http://www.cs.umn.edu/Users/dept/users/gini/8551/iros-95.ps
Refering-URL: http://www.cs.umn.edu/Users/dept/users/gini/8551/
Root-URL: http://www.cs.umn.edu
Title: Moving Furniture with Teams of Autonomous Robots  
Author: Daniela Rus Bruce Donald Jim Jennings 
Address: Hanover, NH 03755 Ithaca, NY 14853  
Affiliation: Department of Computer Science Department of Computer Science Robotics Laboratory Robotics and Vision Laboratory Dartmouth College Cornell University  
Abstract: We wish to organize furniture in a room with a team of robots that can push objects. We show how coordinated pushing by robots can change the pose (position and orientation) of objects and then we ask whether planning, global control, and explicit communication are necessary for cooperatively changing the pose of objects. We answer in the negative and present, as witnesses, four cooperative manipulation protocols that use different amount of state, sensing, and communication. We analyze these protocols in the information invariant framework. We formalize the notion of resource tradeoffs for robot protocols and give the tradeoffs for the specific protocols discussed here. 
Abstract-found: 1
Intro-found: 1
Reference: [BR] <author> A. Back and D. </author> <title> Rus, Towards task-directed coordinated manipulation, </title> <booktitle> in Proceedings of the IEEE/RSJ 1993 International Conference on Intelligent Robots and Systems, </booktitle> <address> Yokohama, Japan, </address> <year> 1993. </year>
Reference-contexts: We present and analyze four pushing protocols that require different amount of communication and sensing. The final pushing protocol requires no explicit communication between the robots. Our previous work also considers the reorientation problem. In <ref> [Rus, BR] </ref> we present and analyze an off-line reorientation algorithm. 2 Reorienting Large Objects with Au tonomous Mobile Robots Consider the task whose goal is to change the orientation of a large object by a given amount. This is called the reorientation task.
Reference: [BHD] <author> R. Beckers, O. Holland, and J. Deneubourg, </author> <title> From local actions to global tasks: stigmergy and collective robotics, </title> <booktitle> in Artificial Life IV, </booktitle> <editor> R. Brooks and P. Maes eds., </editor> <publisher> MIT Press, </publisher> <year> 1994. </year>
Reference-contexts: robot projects without direct communication, the only previous system 1 SPMD = Single Program Multiple Data. 2 Informally one should imagine the "mechanical register" as the state (pose and velocity) of the single couch which the mobile robots jointly manipulate, in parallel. that has been successful in achieving this is <ref> [BHD] </ref>, who treat a foraging task 3 . In our lab we implemented and tested the final protocol. The intermediate, unimplemented protocols are hypothetical design constructs (i.e., parallel algorithms) that emerge from our methodology. At each step the transformations above are formalized using information invariants, [Don], which quantify resource trade-offs.
Reference: [BBDJR] <author> K. Bohringer, R. Brown, B. Donald, J. Jen-nings, and D. </author> <title> Rus, Distributed Robotic Manipulation: Experiments in Minimalism, </title> <booktitle> in Proceedings of the International Symposium on Experimental Robotics, </booktitle> <address> Stanford, CA, </address> <year> 1995. </year>
Reference-contexts: Hence, we present strongly cooperative protocols for the reorientation problem. Our research agenda is to investigate the information requirements for the reorientation task. This paper uses the theoretical framework of [Don] and the results and experiments have the flavor of [DJR]. Specifically, we treat manipulation from the minimalist stance <ref> [EM, Erd2, BBDJR] </ref> and we ask: (i) Can we do reorientations without communication? (ii) Can we do reorientations without planning? (iii) Can we do reorientations without global control? (iv) Can we do reorientations without geometric models? In [DJR] we show that we can answer questions (i)-(iv) affirmatively for the task of
Reference: [Bro] <author> R. Brown, </author> <title> Localization, Mapmaking, and Distributed Manipulation with Flexible, Robust Mobile Robots, </title> <type> PhD thesis, </type> <institution> Department of Computer Science, Cornell University, </institution> <note> available as technical report TR95-1485, </note> <year> 1995. </year>
Reference-contexts: In a distributed manipulation protocol, the computation is distributed among the robots in a way that qualifies as a distributed computation. Finally, Brown defines a strongly cooperative manipulation task as one that can only be performed by parallel manipulation protocols <ref> [Bro] </ref>. Hence, we present strongly cooperative protocols for the reorientation problem. Our research agenda is to investigate the information requirements for the reorientation task. This paper uses the theoretical framework of [Don] and the results and experiments have the flavor of [DJR]. <p> A system of robots executing this algorithm re quires the following skills of each robot: * (goto hpositioni) to contact the object during the setup phase in the areas computed by the planner. (goto hpositioni) can be implemented by using a trajectory generator and a localization system, or even dead-reckoning <ref> [Bro] </ref>. * (push-track) to control the pushing-tracking motion of each active robot.
Reference: [CFKM] <author> Y. Cao, A. Fukunaga, A. Kahng, and F. Meng, </author> <title> Cooperative Mobile Robots: Antecedents and Directions, </title> <type> Technical Report, </type> <institution> UCLA Department of Computer Science, </institution> <year> 1995. </year>
Reference-contexts: The analysis we advocate is complicated, but the final result is a simple protocol that use a near-optimal resource signature. 1.1 Previous work There has been a lot of work on cooperative systems of robots. For an excellent review see <ref> [CFKM] </ref>. Previous work on cooperative manipulation has focused on pushing. Cooperative pushing has been treated in the context of box-pushing with multiple robots. In [Par] a reinforcement learning strategy that focuses on task allocation is presented.
Reference: [Don] <author> B. Donald, </author> <title> Information Invariants in Robotics, </title> <booktitle> Artificial Intelligence (72), pg. </booktitle> <pages> 217-304. </pages>
Reference-contexts: Hence, we present strongly cooperative protocols for the reorientation problem. Our research agenda is to investigate the information requirements for the reorientation task. This paper uses the theoretical framework of <ref> [Don] </ref> and the results and experiments have the flavor of [DJR]. <p> In our lab we implemented and tested the final protocol. The intermediate, unimplemented protocols are hypothetical design constructs (i.e., parallel algorithms) that emerge from our methodology. At each step the transformations above are formalized using information invariants, <ref> [Don] </ref>, which quantify resource trade-offs. These trade-offs confess what resources (sensors, actuators, computation, communication, etc.) are added and deleted at each step. Furthermore, information invariants measure the resource distribution and the power thereby obtained. <p> Our notion of "equivalence" comes from looking at the task as a dynamical system. Consider the configuration space C of the manipulated couch. We call two manipulation protocols equivalent if the protocols have the same forward-attracting compact limit set in C <ref> [Don] </ref> (pg. 284) and [DJR]. All our protocols rely on the ability of robots to execute push-tracking motions. 2.1 An Off-line, Global Control Protocol The off-line global control strategy denoted by global-offline requires three robots and is described and analyzed in detail in [Rus]. <p> If the robot fails to align after several rotates, it reacquires contact by randomization. We now ask, how do we analyze our manipulation protocols? The idea is to carefully count the resources and to model the protocols as circuits <ref> [DJR, Don] </ref>. Protocol comparison can then be modeled as transformations between the circuits. [Don] describes how to model sensori-computational systems as circuits. The circuits are then modeled as graphs. Vertices correspond to different sensori-computational components of the system (resources) and edges correspond to data paths through which information passes. <p> We now ask, how do we analyze our manipulation protocols? The idea is to carefully count the resources and to model the protocols as circuits [DJR, Don]. Protocol comparison can then be modeled as transformations between the circuits. <ref> [Don] </ref> describes how to model sensori-computational systems as circuits. The circuits are then modeled as graphs. Vertices correspond to different sensori-computational components of the system (resources) and edges correspond to data paths through which information passes. Vertices can also correspond to actuators in which case we obtain manipulation circuits ([Don], pg <p> Here is what permute means: given circuits S and Q, suppose it is possible to redistribute the resources on Q to build a circuit with the functionality of S without consuming or adding new resources. This redistribution is called a permutation <ref> [Don] </ref> and it is denoted by Q fl . Each one of the skills required by a reorientation protocol can be modeled as a circuit. <p> It is important to note two things: (1) The circuits are direct translations of programs; and (2) they are not flowcharts, but are more analogous to electrical circuits or "circuits" in the theory of computation. 3.1 Reductions We now review some definitions from <ref> [Don] </ref>. Calibration exploits external state. Calibration complexity, measures how much information we add to a sensor system when we install and calibrate it. Installing a sensor system may require physically establishing some spatial relation between two components of the system. <p> The reduction 1 (Definition 3.3) is a "1-wire" reduction. It does not appear to be transitive. The reduction 0 (Definition 3.2) is a "0-wire" reduction. It is transitive for a particular class of circuits called simple systems in <ref> [Don] </ref>. <p> Equations (2) and (3) together argue that B A = 0, in other words, that B and A trade-off, or are equivalent. One caveat is that "B = A" is only valid for the task specified in the codesignation constraints <ref> [Don] </ref> of Q and S. For example, we prove resource tradeoffs for our four manipulation circuits; but we only claim these trade-offs for the reorientation task. For some other task, resources A and B may not function equivalently 5 . <p> and tradeoffs hold: 1. global-offline 0 local-offline + global-control + 3 (active-slip?) 3 (blocked?) 3 (align) 2. synch-online = 0 local-offline planner 3 (goto) + 3 (guarded-move) + 3 (end-of-face?) + 3 (spin) 5 To prove trade-offs across a class of tasks, we must use a mechanism called "universal reduction" <ref> [Don] </ref>, which is beyond the scope of this paper. 3. asynch-online 3 synch-online + 2 (graze) (end-of-face?) (spin) (guarded-move) (align) (push-track) (blocked?) 4. synch-online 3 asynch-online 2 (graze) + (end-of-face?) + (spin) + (guarded-move) + (align) + (push-track) + (blocked?) Note that in part 3 (4) of the theorem, the circuits
Reference: [DJR] <author> B. Donald, J. Jennings, and D. </author> <title> Rus, Information invariants for distributed manipulation, </title> <booktitle> in Procs of ISRR 1993. Also in The First Workshop on the Algorithmic Foundations of Robotics, </booktitle> <editor> A. K. Peters, Boston, MA ed. K. Goldberg, R.Wilson and J.-C. </editor> <booktitle> Latombe (1994). </booktitle>
Reference-contexts: Hence, we present strongly cooperative protocols for the reorientation problem. Our research agenda is to investigate the information requirements for the reorientation task. This paper uses the theoretical framework of [Don] and the results and experiments have the flavor of <ref> [DJR] </ref>. Specifically, we treat manipulation from the minimalist stance [EM, Erd2, BBDJR] and we ask: (i) Can we do reorientations without communication? (ii) Can we do reorientations without planning? (iii) Can we do reorientations without global control? (iv) Can we do reorientations without geometric models? In [DJR] we show that we <p> have the flavor of <ref> [DJR] </ref>. Specifically, we treat manipulation from the minimalist stance [EM, Erd2, BBDJR] and we ask: (i) Can we do reorientations without communication? (ii) Can we do reorientations without planning? (iii) Can we do reorientations without global control? (iv) Can we do reorientations without geometric models? In [DJR] we show that we can answer questions (i)-(iv) affirmatively for the task of pushing an object along a straight line with multiple robots. <p> We then postulated transforming this into a second, also hypothetical system: the transformation entailed replacing the explicit communication by reads and writes into a shared data structure. Finally a third system was designed by implementing the shared data structure as a real-valued "mechanical register" 2 <ref> [DJR] </ref>. <p> In [Par] a reinforcement learning strategy that focuses on task allocation is presented. We build on the ground-breaking work of [Mas1, EM] and others on planar sensorless manipulation. Inspired by [EM, Erd2] we focus on developing near-sensorless (i.e., that require only sparse sensing) manipulation protocols <ref> [Rus, JR, DJR] </ref>. Our previous work on cooperative manipulation treats pushing a large object from a minimalistic viewpoint [DJR]. We present and analyze four pushing protocols that require different amount of communication and sensing. The final pushing protocol requires no explicit communication between the robots. <p> Inspired by [EM, Erd2] we focus on developing near-sensorless (i.e., that require only sparse sensing) manipulation protocols [Rus, JR, DJR]. Our previous work on cooperative manipulation treats pushing a large object from a minimalistic viewpoint <ref> [DJR] </ref>. We present and analyze four pushing protocols that require different amount of communication and sensing. The final pushing protocol requires no explicit communication between the robots. Our previous work also considers the reorientation problem. <p> Our notion of "equivalence" comes from looking at the task as a dynamical system. Consider the configuration space C of the manipulated couch. We call two manipulation protocols equivalent if the protocols have the same forward-attracting compact limit set in C [Don] (pg. 284) and <ref> [DJR] </ref>. All our protocols rely on the ability of robots to execute push-tracking motions. 2.1 An Off-line, Global Control Protocol The off-line global control strategy denoted by global-offline requires three robots and is described and analyzed in detail in [Rus]. <p> If the robot fails to align after several rotates, it reacquires contact by randomization. We now ask, how do we analyze our manipulation protocols? The idea is to carefully count the resources and to model the protocols as circuits <ref> [DJR, Don] </ref>. Protocol comparison can then be modeled as transformations between the circuits. [Don] describes how to model sensori-computational systems as circuits. The circuits are then modeled as graphs. Vertices correspond to different sensori-computational components of the system (resources) and edges correspond to data paths through which information passes. <p> In the same spirit as [EM] who ask "can a robot do manipulation without sensing?", this work investigates "what manipulative tasks can robots do without global control, communication, planning, or synchronization?" We have shown how this methodology introduced in <ref> [DJR] </ref> can be used to develop and analyze parallel, on-line reorientation protocols. Acknowledgements This paper describes research done in the Robotics and Vision Laboratory at Cornell University. Support for our robotics research was provided in part by the National Science Foundation under grants No.
Reference: [EM] <author> M. Erdmann and M. Mason, </author> <title> An exploration of sensorless manipulation, </title> <journal> The IEEE Journal of Robotics and Automation, </journal> <volume> 4(4) </volume> <pages> 369-379, </pages> <year> 1988. </year>
Reference-contexts: Hence, we present strongly cooperative protocols for the reorientation problem. Our research agenda is to investigate the information requirements for the reorientation task. This paper uses the theoretical framework of [Don] and the results and experiments have the flavor of [DJR]. Specifically, we treat manipulation from the minimalist stance <ref> [EM, Erd2, BBDJR] </ref> and we ask: (i) Can we do reorientations without communication? (ii) Can we do reorientations without planning? (iii) Can we do reorientations without global control? (iv) Can we do reorientations without geometric models? In [DJR] we show that we can answer questions (i)-(iv) affirmatively for the task of <p> For an excellent review see [CFKM]. Previous work on cooperative manipulation has focused on pushing. Cooperative pushing has been treated in the context of box-pushing with multiple robots. In [Par] a reinforcement learning strategy that focuses on task allocation is presented. We build on the ground-breaking work of <ref> [Mas1, EM] </ref> and others on planar sensorless manipulation. Inspired by [EM, Erd2] we focus on developing near-sensorless (i.e., that require only sparse sensing) manipulation protocols [Rus, JR, DJR]. Our previous work on cooperative manipulation treats pushing a large object from a minimalistic viewpoint [DJR]. <p> Cooperative pushing has been treated in the context of box-pushing with multiple robots. In [Par] a reinforcement learning strategy that focuses on task allocation is presented. We build on the ground-breaking work of [Mas1, EM] and others on planar sensorless manipulation. Inspired by <ref> [EM, Erd2] </ref> we focus on developing near-sensorless (i.e., that require only sparse sensing) manipulation protocols [Rus, JR, DJR]. Our previous work on cooperative manipulation treats pushing a large object from a minimalistic viewpoint [DJR]. We present and analyze four pushing protocols that require different amount of communication and sensing. <p> In the same spirit as <ref> [EM] </ref> who ask "can a robot do manipulation without sensing?", this work investigates "what manipulative tasks can robots do without global control, communication, planning, or synchronization?" We have shown how this methodology introduced in [DJR] can be used to develop and analyze parallel, on-line reorientation protocols.
Reference: [Erd2] <author> M. Erdmann, </author> <title> Understanding Action and Sensing by Designing Action-Based Sensors International Journal of Robotics Research, </title> <publisher> in press. </publisher>
Reference-contexts: Hence, we present strongly cooperative protocols for the reorientation problem. Our research agenda is to investigate the information requirements for the reorientation task. This paper uses the theoretical framework of [Don] and the results and experiments have the flavor of [DJR]. Specifically, we treat manipulation from the minimalist stance <ref> [EM, Erd2, BBDJR] </ref> and we ask: (i) Can we do reorientations without communication? (ii) Can we do reorientations without planning? (iii) Can we do reorientations without global control? (iv) Can we do reorientations without geometric models? In [DJR] we show that we can answer questions (i)-(iv) affirmatively for the task of <p> Cooperative pushing has been treated in the context of box-pushing with multiple robots. In [Par] a reinforcement learning strategy that focuses on task allocation is presented. We build on the ground-breaking work of [Mas1, EM] and others on planar sensorless manipulation. Inspired by <ref> [EM, Erd2] </ref> we focus on developing near-sensorless (i.e., that require only sparse sensing) manipulation protocols [Rus, JR, DJR]. Our previous work on cooperative manipulation treats pushing a large object from a minimalistic viewpoint [DJR]. We present and analyze four pushing protocols that require different amount of communication and sensing.
Reference: [Jen] <author> J. Jennings, </author> <title> Distributed Manipulation with Mobile Robots, </title> <type> forthcoming PhD thesis, </type> <institution> Department of Computer Science, Cornell University (forthcoming, </institution> <month> August </month> <year> 1995.) </year>
Reference-contexts: Thus, a new skill is required of each robot, namely the ability to measure the relative orientation at a point of contact. We implemented the sensor for the termination of a pushing-tracking step (the "jamming" condition) by allowing the robots to detect impediment conditions thresholded by force <ref> [RD, Jen] </ref>. In summary, the following skills are required of each robot involved in this protocol. * (goto hpositioni) and (push-track) * (align) Each robot has a relative orientation sensor that allows it to align itself to a specified angle to the face of the object.
Reference: [JR] <author> J. Jennings and D. </author> <title> Rus, Active model acquisition for near-sensorless manipulation with mobile robots, </title> <booktitle> in Proceedings of the IASTED International Conference on Robotics and Manufacturing, </booktitle> <year> 1993. </year>
Reference-contexts: In [Par] a reinforcement learning strategy that focuses on task allocation is presented. We build on the ground-breaking work of [Mas1, EM] and others on planar sensorless manipulation. Inspired by [EM, Erd2] we focus on developing near-sensorless (i.e., that require only sparse sensing) manipulation protocols <ref> [Rus, JR, DJR] </ref>. Our previous work on cooperative manipulation treats pushing a large object from a minimalistic viewpoint [DJR]. We present and analyze four pushing protocols that require different amount of communication and sensing. The final pushing protocol requires no explicit communication between the robots. <p> Our wheeled robots are moving kinematic constraints (from a control point of view.) We implement the push-tracking by choosing a suitable velocity direction and then servo on the relative angle between the robot and the object, which our robots can measure directly <ref> [JR] </ref>. Thus, a new skill is required of each robot, namely the ability to measure the relative orientation at a point of contact. We implemented the sensor for the termination of a pushing-tracking step (the "jamming" condition) by allowing the robots to detect impediment conditions thresholded by force [RD, Jen]. <p> Hence, graze terminates in (I) reacquiring the object at a contact with a longer moment arm, or (II) missing altogether. (I) is detected with a guarded move. (II) is detected using a sonar-based wall-corner detection algorithm of <ref> [JR] </ref>. When (II) occurs, the robot executes a (spin). In the setup phase the robots contact the object using the same procedure as in protocol synch-online. The robots may reach the object at different times. <p> Each one of the skills required by a reorientation protocol can be modeled as a circuit. While the entire circuit for a protocol is too detailed to show here, we illustrate their flavor by an example: the circuit for (align) (see Figure 6 and <ref> [JR] </ref> for a detailed explanation and analysis). Briefly, the circuit is a pictorial representations of robot programs. These programs, while expressed easily and succinctly in Scheme, are shown in circuit form to highlight their resource usage.
Reference: [Mas1] <author> M. T. Mason, </author> <title> Manipulator grasping and pushing operations, </title> <journal> International Journal of Robotics Research, </journal> <volume> 5(3) </volume> <pages> 53-71, </pages> <year> 1986. </year>
Reference-contexts: For an excellent review see [CFKM]. Previous work on cooperative manipulation has focused on pushing. Cooperative pushing has been treated in the context of box-pushing with multiple robots. In [Par] a reinforcement learning strategy that focuses on task allocation is presented. We build on the ground-breaking work of <ref> [Mas1, EM] </ref> and others on planar sensorless manipulation. Inspired by [EM, Erd2] we focus on developing near-sensorless (i.e., that require only sparse sensing) manipulation protocols [Rus, JR, DJR]. Our previous work on cooperative manipulation treats pushing a large object from a minimalistic viewpoint [DJR]. <p> This is called the reorientation task. Figure 1 depicts one robot reorienting a large object. A robot can generate a rotation by applying a force that is displaced from the center of friction. This property relates the dynamics and the geometry or reorientations <ref> [Mas1] </ref> 3 A team of robots wander in search for "food" that is randomly distributed throughout their workspace. and it can be used to effect continuous reorientations with mobile robots. The idea is to compliantly apply a sliding force on the face of the object 4 .
Reference: [OY] <author> Y. Okawa, and K. Yokoyama, </author> <title> Control of a Mobile Robot for the Push-a-Box Operation, </title> <booktitle> in Proceedings of the IEEE ICRA, </booktitle> <address> Nice, France, </address> <year> 1992. </year>
Reference: [Par] <author> L. Parker, </author> <title> Heterogeneous Multi-Robot Cooperation, </title> <type> PhD thesis, </type> <institution> MIT EECS department, </institution> <year> 1994. </year>
Reference-contexts: For an excellent review see [CFKM]. Previous work on cooperative manipulation has focused on pushing. Cooperative pushing has been treated in the context of box-pushing with multiple robots. In <ref> [Par] </ref> a reinforcement learning strategy that focuses on task allocation is presented. We build on the ground-breaking work of [Mas1, EM] and others on planar sensorless manipulation. Inspired by [EM, Erd2] we focus on developing near-sensorless (i.e., that require only sparse sensing) manipulation protocols [Rus, JR, DJR].
Reference: [RC] <author> M. H. Raibert and J. J. Craig, </author> <title> Hybrid position/force control of manipulators, Journal of Dynamic Systems, </title> <booktitle> Measurement and Control, </booktitle> <address> vol.102, </address> <year> 1981. </year>
Reference-contexts: The algorithm 4 This strategy can be implemented by a force that forms an acute angle on the contacting edge. This is similar to hybrid control <ref> [RC] </ref> which would be used for a dexterous hand [Rus]. consists of a sequence of pushing-tracking steps, where one robot is active and two robots are stationary at all times (see Figure 2.) A global controller sends and receives control signals to the robots. <p> This entails exerting a force in the normal direction to the face of the object while commanding a velocity in the tangential direction (see Figures 2 and 1.) This can be implemented with a hybrid controller <ref> [RC] </ref> which servoes on the orientation of a face of the manipulated object. * (active-slip?) used by the stationary robots to detect slip at their points of contact.
Reference: [RD] <author> J. Rees and B. Donald, </author> <title> Program Mobile Robots in Scheme, </title> <booktitle> in Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <address> Nice, France, </address> <year> 1992. </year>
Reference-contexts: Thus, a new skill is required of each robot, namely the ability to measure the relative orientation at a point of contact. We implemented the sensor for the termination of a pushing-tracking step (the "jamming" condition) by allowing the robots to detect impediment conditions thresholded by force <ref> [RD, Jen] </ref>. In summary, the following skills are required of each robot involved in this protocol. * (goto hpositioni) and (push-track) * (align) Each robot has a relative orientation sensor that allows it to align itself to a specified angle to the face of the object.
Reference: [Rus] <author> D. </author> <title> Rus, Fine motion planning for dexterous manipulation, </title> <type> PhD thesis available as CU-CS-TR 92-1323, </type> <institution> Department of Computer Science, Cornell University, </institution> <year> 1992. </year>
Reference-contexts: In [Par] a reinforcement learning strategy that focuses on task allocation is presented. We build on the ground-breaking work of [Mas1, EM] and others on planar sensorless manipulation. Inspired by [EM, Erd2] we focus on developing near-sensorless (i.e., that require only sparse sensing) manipulation protocols <ref> [Rus, JR, DJR] </ref>. Our previous work on cooperative manipulation treats pushing a large object from a minimalistic viewpoint [DJR]. We present and analyze four pushing protocols that require different amount of communication and sensing. The final pushing protocol requires no explicit communication between the robots. <p> We present and analyze four pushing protocols that require different amount of communication and sensing. The final pushing protocol requires no explicit communication between the robots. Our previous work also considers the reorientation problem. In <ref> [Rus, BR] </ref> we present and analyze an off-line reorientation algorithm. 2 Reorienting Large Objects with Au tonomous Mobile Robots Consider the task whose goal is to change the orientation of a large object by a given amount. This is called the reorientation task. <p> All our protocols rely on the ability of robots to execute push-tracking motions. 2.1 An Off-line, Global Control Protocol The off-line global control strategy denoted by global-offline requires three robots and is described and analyzed in detail in <ref> [Rus] </ref>. The algorithm 4 This strategy can be implemented by a force that forms an acute angle on the contacting edge. This is similar to hybrid control [RC] which would be used for a dexterous hand [Rus]. consists of a sequence of pushing-tracking steps, where one robot is active and two <p> denoted by global-offline requires three robots and is described and analyzed in detail in <ref> [Rus] </ref>. The algorithm 4 This strategy can be implemented by a force that forms an acute angle on the contacting edge. This is similar to hybrid control [RC] which would be used for a dexterous hand [Rus]. consists of a sequence of pushing-tracking steps, where one robot is active and two robots are stationary at all times (see Figure 2.) A global controller sends and receives control signals to the robots. <p> The top line denotes three snapshots of the first step. The second line denotes three snapshots of the second step. The black circles denote stationary robots. The white circles denote active robots. A planner <ref> [Rus] </ref> that takes as input the geometric model of the object we wish to manipulate. It outputs the initial contact locations for the robots and the order in which the robots become active, which is called the push-tracking schedule.
References-found: 17

