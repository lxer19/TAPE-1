URL: http://www.cs.wustl.edu/cs/techreports/1997/wucs-97-13.ps.Z
Refering-URL: http://www.cs.wustl.edu/cs/cs/publications.html
Root-URL: http://www.cs.wustl.edu
Title: EUPHORIA Reference Manual  
Author: T. Paul McCartney, Kenneth J. Goldman 
Date: February 1997  
Address: Campus Box 1045 One Brookings Drive Saint Louis, MO 63130-4899  
Affiliation: Department of Computer Science Washington University  
Pubnum: WUCS-97-13  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Kenneth J. Goldman, T. Paul McCartney, Bala Swaminathan, and Ram Sethuraman. </author> <title> The Programmers Playground: A demonstration. </title> <booktitle> In Proceedings of the 1995 ACM International Conference on Multimedia, </booktitle> <pages> pp. 317-318, </pages> <month> November </month> <year> 1995. </year>
Reference-contexts: 1 Introduction The Programmers Playground is a software library and run-time system for creating distributed multimedia applications <ref> [1] </ref>, [2]. Playground is based on I/O abstraction, a programming model for distributed systems that provides a separation of communication and computation. A distributed application consists of a set of communicating modules, written as C++ programs, using special data types from the Playground library.
Reference: [2] <author> Kenneth J. Goldman, Bala Swaminathan, T. Paul McCartney, Michael D. Anderson, and Ram Sethuraman. </author> <title> The Programmers Playground: I/O Abstraction for User-Configurable Distributed Applications. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 21(9) </volume> <pages> 735-746, </pages> <month> September </month> <year> 1995. </year>
Reference-contexts: 1 Introduction The Programmers Playground is a software library and run-time system for creating distributed multimedia applications [1], <ref> [2] </ref>. Playground is based on I/O abstraction, a programming model for distributed systems that provides a separation of communication and computation. A distributed application consists of a set of communicating modules, written as C++ programs, using special data types from the Playground library.
Reference: [3] <author> Kenneth J. Goldman, T. Paul McCartney, Ram Sethuraman, Bala Swaminathan, and Todd Rodgers. </author> <title> Building Interactive Distributed Applications in C++ with The Programmers Playground. </title> <institution> Washington University Department of Computer Science technical report WUCS-95-20. </institution>
Reference-contexts: With EUPHORIA, end-users can create direct manipulation graphical user interfaces (GUIS) interactively through the use of an intuitive graphics editor. EUPHORIA, implemented as a Playground module, can be connected to other modules of a distributed application through the use of a visual configuration language <ref> [3] </ref>. This has the effect of associating an end-user GUI with its underlying application. Updates to published variables in external modules can change the properties of the end-user drawing in EUPHORIA. Manipulation of graphics components in EUPHORIA can change published variables, sending changes to external modules. <p> If the variables strength is set sufficiently high in relation to other system strengths (Section 4.5), updates from the variable take precedence over user actions. Each variable has protections that control the read/write permissions of the variable to external modules <ref> [3] </ref>. Note that having only write world protection is treated as a special case which allows external updates to the variable to be processed in the internal constraint network more efficiently. If the variables Skip Values attribute is enabled (default), some intermediate values of the variable may be disregarded. <p> Also, if other modules update their variables repeatedly at a rate faster than the update rate of EUPHORIA, time is still spent dealing with the intermediate values of the variables even though the values may be skipped over. External modules should utilize Playgrounds PGsleep <ref> [3] </ref> to adjust their speed to a reasonable rate, and should avoid resending redundant information. Q: Im updating the position of an object on the screen from an external module. <p> Q: Im updating the position of an object on the screen from an external module. Why does the object hop, first moving on the x-axis and then on the y-axis? A: The problem is that the external module should be using Playgrounds atomic step mechanism <ref> [3] </ref>. This ensures that changes to the x coordinate and the y coordinate occur together. Another way to make drawing more efficient is to have all changes for an iteration within an atomic step, eliminating redundant drawing.
Reference: [4] <author> T. Paul McCartney. </author> <title> User Interface Applications of a Multi-way Constraint Solver. </title> <institution> Washington University Department of Computer Science technical report WUCS-95-22, </institution> <month> July </month> <year> 1995. </year>
Reference-contexts: A tuple with two real fields is not compatible with a tuple with three real fields. 4.4 Formula Constraints With a calculator object one can specify a constraint relationship among graphics shapes in terms of an arbitrary algebraic formula. A multi-way constraint graph <ref> [4] </ref> is constructed from the formula, providing a means to compute any of the variables dynamically in terms of the others. After construction is completed, the calculator can be made imaginary (i.e., hidden, see Section 5.2).
Reference: [5] <author> Robert W. Scheifler, James Gettys. </author> <title> X Window System, Third Edition. </title> <publisher> Digital Press, </publisher> <year> 1992. </year>
Reference-contexts: Table 2: Optional command line arguments. argument default description -buffer 580x400 Size of offscreen buffer, used for screen updates. -colorDelta 200 Maximum color approximation distance in RGB space. -display no default X windows display name <ref> [5] </ref>. -file no default Saved EUPHORIA file to load on start-up. -geometry 580x400-0+0 Position and size of the EUPHORIA window [5]. -invalidAreas 3 Number of invalid rectangles maintained. -personalDir home directory Location of .euphoria directory to be created/used. -pollDuration 50 Event polling time before drawing, in msecs. -pollSleep 10 Sleep time <p> arguments. argument default description -buffer 580x400 Size of offscreen buffer, used for screen updates. -colorDelta 200 Maximum color approximation distance in RGB space. -display no default X windows display name <ref> [5] </ref>. -file no default Saved EUPHORIA file to load on start-up. -geometry 580x400-0+0 Position and size of the EUPHORIA window [5]. -invalidAreas 3 Number of invalid rectangles maintained. -personalDir home directory Location of .euphoria directory to be created/used. -pollDuration 50 Event polling time before drawing, in msecs. -pollSleep 10 Sleep time while polling for events, in msecs. -title EUPHORIA Title of EUPHORIA window and module name. -url no default WWW address
References-found: 5

