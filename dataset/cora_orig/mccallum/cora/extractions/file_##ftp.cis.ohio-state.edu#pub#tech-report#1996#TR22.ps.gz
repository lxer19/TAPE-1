URL: file://ftp.cis.ohio-state.edu/pub/tech-report/1996/TR22.ps.gz
Refering-URL: ftp://ftp.cis.ohio-state.edu/pub/tech-report/TRList.html
Root-URL: 
Email: E-mail: fprakash,singhalg@cis.ohio-state.edu  
Title: A Dynamic Approach to Location Management in Mobile Computing Systems  
Author: Ravi Prakash Mukesh Singhal 
Keyword: mobile computing, location management, hashing.  
Address: Columbus, Ohio 43210.  
Affiliation: Department of Computer and Information Science The Ohio State University  
Abstract: Managing location information of mobile nodes is an important issue in mobile computing systems. There is a trade-off between location update effort (when a node moves) and node finding effort. In this paper we present a dynamic location management strategy that has the following features: (i) all location servers need not maintain location information about every mobile node, (ii) a coterie based approach is adopted for location update and find, (iii) every node move does not result in location updates, (iv) location updates are done at a subset of location servers, (v) a subset of location servers are queried when a mobile node is to be located, (vi) the set of location servers, corresponding to a mobile node, for location update and find operations is dynamic, (vii) the dynamic nature of these sets helps alleviate situations of heavy burden on some location servers, when a large number of mobile nodes are concentrated in a small geographical area. Thus, location management is done efficiently, and responsibility is shared fairly among location servers.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> B. Awerbuch and D. Peleg. </author> <title> Online Tracking of Mobile Users. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 42(5) </volume> <pages> 1021-1058, </pages> <month> September </month> <year> 1995. </year>
Reference-contexts: However, an issue that needs to be addressed is how such a reporting center is determined. One simple solution would be to probe all reporting centers to determine the one with the latest update. However, this imposes high 3 communication overheads on the fixed network. In <ref> [1] </ref>, a hierarchy of distributed regional directories is maintained. The i th level regional directory enables a node, static or mobile, to track any mobile host within a distance of 2 i from it. <p> In such situations, the directory servers <ref> [1] </ref> and reporting centers [2] in the high density regions will be overburdened, while the directory servers and reporting centers in other regions will be comparatively lightly loaded. 2. Location of some M Hs will be queried more often than others. <p> Location of some M Hs will be queried more often than others. So, even when the M Hs are evenly distributed across the network, the location servers (directory servers in <ref> [1] </ref> and reporting centers in [2]) for these M Hs will be queried more often, increasing their load. If the identity of such M Hs were known a priori, appropriate actions could be taken to distribute the load. However, such is not the case.
Reference: [2] <author> A. Bar-Noy and I. Kessler. </author> <title> Tracking Mobile Users in Wireless Communication Networks. </title> <booktitle> In Proceedings of IEEE INFOCOM, </booktitle> <pages> pages 1232-1239, </pages> <year> 1993. </year>
Reference-contexts: Nodes in the working set are informed about the location update when an M H moves, while other nodes are made to search for the M H when they wish to communicate with the M H. In <ref> [2] </ref>, some M SSs are designated as reporting centers (similar to location servers). Location update is done when an M H moves into the cells corresponding to the reporting centers. <p> In such situations, the directory servers [1] and reporting centers <ref> [2] </ref> in the high density regions will be overburdened, while the directory servers and reporting centers in other regions will be comparatively lightly loaded. 2. Location of some M Hs will be queried more often than others. <p> Location of some M Hs will be queried more often than others. So, even when the M Hs are evenly distributed across the network, the location servers (directory servers in [1] and reporting centers in <ref> [2] </ref>) for these M Hs will be queried more often, increasing their load. If the identity of such M Hs were known a priori, appropriate actions could be taken to distribute the load. However, such is not the case.
Reference: [3] <author> A. Bar-Noy, I. Kessler, and M. Sidi. </author> <title> Mobile Users: To Update or not to Update? In Proceedings of IEEE INFOCOM, </title> <address> pages 570-576, </address> <year> 1994. </year>
Reference-contexts: Hence, all the M SSs collectively maintain the location directory. 3 Previous Work Updating the location directory each time an M H moves from one cell to another can be very expensive. Three alternatives, namely, time-based, number of movements-based, and distance-based strategies for directory updates have been proposed in <ref> [3] </ref>. The location updates are done less often, and impose lower overheads. A simple solution to location tracking is to have a centralized location server. However, if the node maintaining the directory crashes, location information about all the nodes becomes inaccessible.
Reference: [4] <author> T. H. Cormen, C. E. Leiserson, and R. L. Rivest. </author> <title> Introduction to Algorithms. </title> <publisher> MIT Press-McGraw-Hill Book Company, </publisher> <year> 1990. </year> <month> 14 </month>
Reference-contexts: Given an M SS id, denoting the cell in which the mobile host is present, and a V M H id for that mobile host, we employ the principle of open addressing hash function, specifically the double hashing <ref> [4] </ref>, as follows: h (M SS id; V M H id) = (h 1 (M SS id) + V M H id fi h 2 (M SS id)) mod m where m is the number of M SSs in the network, and h 1 and h 2 are auxiliary hash functions. <p> Given an (M SS id, V M H id) pair, h (M SS id; V M H id) will be uniformly spread over the range [0, m 1], i:e:, mapped uniformly over all the M SSs in the network <ref> [4] </ref>. 3.
Reference: [5] <author> M. Maekawa. </author> <title> A p N Algorithm for Mutual Exclusion in Decentralized Systems. </title> <journal> ACM Transactions on Computer Systems, </journal> <pages> pages 145-159, </pages> <month> May </month> <year> 1985. </year>
Reference-contexts: This leads to the generation of symmetric quorums of size 0:97m 0:63 . Another approach to constructing quorums, similar to that proposed in <ref> [5] </ref> in the context of the mutual exclusion problem, is as follows: Grid based scheme: Let m = l 2 for an integer l. Then an l fi l grid is constructed. The grid points are numbered from 0 to m 1.
Reference: [6] <author> W. K. Ng and C. V. Ravishankar. </author> <title> Coterie Templates: A New Quorum Construction Method. </title> <booktitle> In Proceedings of the 15 th International Conference on Distributed Computing Systems, </booktitle> <pages> pages 92-99, </pages> <month> May </month> <year> 1995. </year>
Reference-contexts: Also, to distribute the responsibility of storing the distributed location directory 11 in a fair manner among the M SSs, the quorums should be symmetric. One approach to constructing such quorums is proposed in <ref> [6] </ref>, and is described below: Iterative approach: Initially, the quorums are trivially constructed, each containing just over m=2 MSSs whose identities form a contiguous sequence. An iterative reduction of the quorum size is done.
Reference: [7] <author> S. Rajagopalan and B. R. Badrinath. </author> <title> An Adaptive Location Management Strategy for Mobile IP. </title> <booktitle> In Proceedings of First ACM Mobicom 95, </booktitle> <month> November </month> <year> 1995. </year> <month> 15 </month>
Reference-contexts: Also, a centralized directory is unable to exploit the geographical distribution of M Hs in the system, and locality of reference patterns to minimize the cost of directory update and query operations. The locality of reference patterns is exploited in <ref> [7] </ref>. The notion of working set for mobile hosts is introduced. Nodes in an M H's working set communicate with the M H more frequently than nodes that are not in the working set. A location management scheme has been described in [7] in which an M H can dynamically determine <p> The locality of reference patterns is exploited in <ref> [7] </ref>. The notion of working set for mobile hosts is introduced. Nodes in an M H's working set communicate with the M H more frequently than nodes that are not in the working set. A location management scheme has been described in [7] in which an M H can dynamically determine its working set depending on the call-to-mobility ratio between network node and M H pairs. <p> M Hs exhibit a spatial locality of reference: even though all nodes in the system can potentially communicate with the network, bulk of the references originate from only a subset of them (referred to as the working set in <ref> [7] </ref>). The nodes in the working set may be clustered in different parts of the network. So, to reduce query costs, it is advisable to have location servers for the M H in the vicinity of such clusters. 2.
References-found: 7

