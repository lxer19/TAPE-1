URL: http://www.research.microsoft.com/~mbj/papers/tr-95-16.ps
Refering-URL: http://www.research.microsoft.com/~mbj/papers.html
Root-URL: http://www.research.microsoft.com
Title: Modular Real-Time Resource Management in the Rialto Operating System  
Author: Michael B. Jones, Paul J. Leach, Richard P. Draves, Joseph S. Barrera, III 
Note: Paper presented at the Fifth Workshop on Hot Topics in Operating Systems (HotOS-V),  
Address: One Microsoft Way Redmond, WA 98052  
Affiliation: Microsoft Research Advanced Technology Division Microsoft Corporation  
Date: May, 1995  May, 1995.  
Abstract: Technical Report MSR-TR-95-16 
Abstract-found: 1
Intro-found: 1
Reference: [Anderson 93] <author> D. P. Anderson. </author> <title> Metascheduling for Continuous Media. </title> <journal> In ACM Transactions on Computer Systems, </journal> <volume> 11(3) </volume> <pages> 226-252, </pages> <month> August, </month> <year> 1993. </year>
Reference-contexts: This work is complementary to such mechanisms. Indeed, one result of distributed resource negotiation can be using these mechanisms to allocate any network resources needed by the activity. Anderson described a system for trading off buffer space and variabilities in network latency when delivering continuous media streams <ref> [Anderson 93] </ref>. The application resource self-awareness needed to analyze these tradeoffs is an example of the kind of self-awareness needed to be able to negotiate for and make tradeoffs among resources in our more general setting.
Reference: [Compton & Tennenhouse 93] <author> Charles L. Compton and David L. Tennenhouse. </author> <title> Collaborative Load Shedding. </title> <booktitle> In Proceedings of the Workshop on the Role of Real-Time in Multimedia/Interactive Computing Systems. IEEE Computer Society, </booktitle> <address> Raleigh-Durham, NC, </address> <month> November </month> <year> 1993. </year>
Reference-contexts: Indeed, if both are present, resource amounts derived from resource negotiation would be used to choose the values used for resource enforcement. Unlike Mercer, Compton and Tennenhouse believe that resource protection is inappropriate and that applications should dynamically and cooperatively shed load when necessary <ref> [Compton & Tennenhouse 93] </ref>, but they bemoan the crude measures available for deciding when to shed load. Rather than shedding load reactively, our work provides a means for programs to cooperatively reason about their resources in advance, proactively avoiding most dynamic load shedding situations.
Reference: [Druschel & Peterson 93] <author> Peter Druschel and Larry L. Peterson. Fbufs: </author> <title> A High-Bandwidth Cross-Domain Transfer Facility. </title> <booktitle> In Proceedings of the 14th ACM Symposium on Operating Systems Principles. </booktitle> <month> December, </month> <year> 1993. </year>
Reference-contexts: An I/O system that also schedules I/O operations using the same real-time scheduling constraints. A set of I/O and RPC abstractions designed to avoid data copies when transmitting and operating on large quantities of data. This mechanism is derived from Fbufs <ref> [Druschel & Peterson 93] </ref>. 2.2 The Rialto Approach Resource management can be viewed as a generalization of admission control. Unlike CPU or I/O scheduling decisions, resource management decisions occur infrequently typically at program startup, exit, or mode change.
Reference: [Jones 93] <author> Michael B. Jones. </author> <title> Adaptive Real-Time Resource Management Supporting Composition of Independently Authored Time-Critical Services. </title> <booktitle> In Proceedings of the Fourth Workshop on Workstation Operating Systems, </booktitle> <pages> pages 135-139. </pages> <publisher> IEEE Computer Society, </publisher> <address> Napa, CA, </address> <month> October, </month> <year> 1993. </year>
Reference-contexts: Actual time taken is reported back to the application, providing the basis for a realistic real-time feedback mechanism. This is a simplification of the mechanism described in <ref> [Jones 93] </ref>.
Reference: [Mercer et al. 94] <author> Clifford W. Mercer, Stefan Savage, Hideyuki Tokuda. </author> <title> Processor Capacity Reserves: Operating System Support for Multimedia Applications. </title> <booktitle> In Proceedings of the IEEE International Conference on Multimedia Computing and Systems (ICMCS), </booktitle> <month> May </month> <year> 1994. </year>
Reference-contexts: One of the research goals of this work is identifying which simplifying assumptions yield reasonable results, and under what circumstances they hold. 4. Related Work This section examines the relationships between this work and other related work. Mercer <ref> [Mercer et al. 94] </ref> has advocated a temporal protection scheme in which enforcement of CPU and possibly other resource reservations is provided between competing programs. Our resource management strategy is largely independent of whether hard enforcement of resource usage is provided, but is compatible with it.
Reference: [Microsoft 94] <author> OLE2 Programmers Reference, </author> <title> Volume One. </title> <publisher> Microsoft Press, </publisher> <year> 1994. </year>
Reference-contexts: An object invocation mechanism that propagates a threads real-time scheduling constraints to remote object invocations, both to remote processes and to remote machines. (The object invocation mechanism is a real-time implementation of the Component Object Model (COM), the invocation mechanism used by OLE2 <ref> [Microsoft 94] </ref>.) Taken together, these three facilities enable a consistent end-to-end treatment to be applied to real-time scheduling decisions. An I/O system that also schedules I/O operations using the same real-time scheduling constraints.
Reference: [Northcutt et al. 90] <author> J. D. Northcutt, R. K. Clark, D. P. Maynard, and J. E. Trull. </author> <title> Decentralized Real-Time Scheduling. </title> <note> Final Technical Report to RADC, </note> <institution> RADC-TR-90-182, School of Computer Science, Carnegie-Mellon University, </institution> <month> August, </month> <year> 1990. </year>
Reference-contexts: Finally, it should be stated that this work is intended to be complimentary to, and not a replacement for, algorithms which provide fine-grained CPU scheduling, whether classical priority-based schemes or more flexible schemes, such as those employed by Northcutt <ref> [Northcutt et al. 90, Wall et al. 92] </ref>. Even given sufficient resources, fine-grained scheduling decisions still must be made correctly to ensure that application deadlines are met. 5.
Reference: [Wall et al. 92] <author> Gerald A. Wall, James G. Hanko, and J. Duane Northcutt. </author> <title> Bus Bandwidth Management in a High Resolution Video Workstation. </title> <booktitle> In Proceedings of the Third International Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <pages> pages 236-250. </pages> <publisher> IEEE Computer Society, </publisher> <address> San Diego, CA, </address> <month> November, </month> <year> 1992. </year>
Reference-contexts: Finally, it should be stated that this work is intended to be complimentary to, and not a replacement for, algorithms which provide fine-grained CPU scheduling, whether classical priority-based schemes or more flexible schemes, such as those employed by Northcutt <ref> [Northcutt et al. 90, Wall et al. 92] </ref>. Even given sufficient resources, fine-grained scheduling decisions still must be made correctly to ensure that application deadlines are met. 5.
Reference: [Zhang et al. 93] <author> Lixia Zhang, Steve Deering, Deborah Estrin, Scott Shenker, and Daniel Zappala. RSVP: </author> <title> A New Resource ReSerVation Protocol. </title> <journal> IEEE Network 7(5), </journal> <month> Sept., </month> <year> 1993. </year>
Reference-contexts: Rather than shedding load reactively, our work provides a means for programs to cooperatively reason about their resources in advance, proactively avoiding most dynamic load shedding situations. A number of mechanisms are currently being proposed for reserving network bandwidth and related resources such as RSVP <ref> [Zhang et al. 93] </ref> and a number of ATM-specific schemes. This work is complementary to such mechanisms. Indeed, one result of distributed resource negotiation can be using these mechanisms to allocate any network resources needed by the activity.
References-found: 9

