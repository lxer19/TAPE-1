URL: http://www.cs.unc.edu/~zhu/paper/ijcai97.ps.Z
Refering-URL: http://www.cs.unc.edu/~zhu/prover.html
Root-URL: http://www.cs.unc.edu
Email: fplaisted,zhug@cs.unc.edu  
Phone: Fax: (919)962-1799  
Title: Equational Reasoning using AC Constraints  
Author: David A. Plaisted and Yunshan Zhu 
Address: Chapel Hill, NC 27599-3175  
Affiliation: Computer Science Department University of North Carolina  
Abstract: Unfailing completion is a commonly used technique for equational reasoning. For equational problems with associative and commutative functions, unfailing completion often generates a large number of rewrite rules. By comparing it with a ground completion procedure, we show that many of the rewrite rules generated are redundant. A set of consistency constraints is formulated to detect redundant rewrite rules. We propose a new completion algorithm, consistent unfailing completion, in which only consistent rewrite rules are used for critical pair generation and rewriting. Our approach does not need to use flattened terms. Thus it avoids the double exponential worst case complexity of AC unification. It also allows the use of more flexible termination order-ings. We present some sufficient conditions for detecting inconsistent rewrite rules. The pro posed algorithm is implemented in PROLOG.
Abstract-found: 1
Intro-found: 1
Reference: [ Bachmair and Plaisted, 1985 ] <author> L. Bachmair and D. Plaisted. </author> <title> Termination orderings for associative-commutative rewriting systems. </title> <journal> J. Symbolic Computation, </journal> <volume> 1 </volume> <pages> 329-349, </pages> <year> 1985. </year>
Reference: [ Bachmair et al., 1989 ] <author> Leo Bachmair, N. Dershowitz, and D. Plaisted. </author> <title> Completion without failure. </title> <editor> In Hassan A it-Kaci and Maurice Nivat, editors, </editor> <title> Resolution of Equations in Algebraic Structures 2: </title> <booktitle> Rewriting Techniques, </booktitle> <pages> pages 1-30, </pages> <address> New York, 1989. </address> <publisher> Academic Press. </publisher> [ <editor> Bachmair et al., 1992 ] L. Bachmair, H. Ganzinger, C. Lynch, and W. Snyder. </editor> <title> Basic paramodulation and basic strict superposition. </title> <booktitle> In Proceedings of the 11th International Conference on Automated Deduction, </booktitle> <pages> pages 462-476, </pages> <year> 1992. </year>
Reference-contexts: 1 Introduction Knuth-Bendix completion [ Knuth and Bendix, 1970 ] and its extensions <ref> [ Bachmair et al., 1989 ] </ref> have been widely used for equational reasoning. One of the main bottlenecks of completion-based inference strategies is the large number of critical pairs generated. This is particularly evident when dealing with equational problems involving associative and commutative functions, i.e. AC equational problems. <p> Sometimes, it is not possible to orient an equation, i.e. f (x; y) = f (y; x), in either direction while maintaining termina-tion. Thus Knuth- Bendix completion is extended to unfailing completion <ref> [ Bachmair et al., 1989 ] </ref> . In unfailing completion, if a critical pair (s; t) can not be oriented then it is added as an equation s = t. Equation s = t may participate in further critical pair generation.
Reference: [ Birkhoff, 1935 ] <author> G. Birkhoff. </author> <title> On the structure of abstract algebras. </title> <journal> Proc. Cambridge Philos. Soc., </journal> <volume> 31 </volume> <pages> 433-454, </pages> <year> 1935. </year> [ <editor> Boudet et al., 1996 ] A. Boudet, E. Contejean, and C Marche. </editor> <title> AC-complete unification and its application to theorem proving. </title> <booktitle> In Proceedings of the 7th International Conference on Rewriting Techniques and Applications, </booktitle> <pages> pages 18-32, </pages> <month> July </month> <year> 1996. </year>
Reference-contexts: By Birkhoff's theorem <ref> [ Birkhoff, 1935 ] </ref> , R = j= r = s iff r $ fl R s. This essentially shows the soundness and completeness of equational reasoning based on term rewriting.
Reference: [ Chang and Lee, 1973 ] <author> C. Chang and R. Lee. </author> <title> Symbolic Logic and Mechanical Theorem Proving. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1973. </year>
Reference: [ Dershowitz and Jouannaud, 1990 ] <author> N. Dershowitz and J.-P. Jouannaud. </author> <title> Rewrite systems. </title> <editor> In J. van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science. </booktitle> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1990. </year>
Reference-contexts: We then present the consistent unfailing completion algorithm and show its completeness. We then show how the algorithm can be refined and implemented. We give some test results in the end. 2 Background In this section, we define some relevant concepts. For surveys on equational reasoning, see <ref> [ Plaisted, 1993; Dershowitz and Jouannaud, 1990; Klop, 1992 ] </ref> . For introductions to the area of theorem proving, see [ Chang and Lee, 1973; Loveland, 1978; Wos et al., 1984 ] . We follow the conventions of [ Plaisted, 1993 ] in this paper.
Reference: [ Dershowitz et al., 1983 ] <author> Nachum Dershowitz, J. Hsiang, N. Josephson, and David A. Plaisted. </author> <title> Associative-commutative rewriting. </title> <booktitle> In Proceedings of the Eighth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 940-944, </pages> <month> August </month> <year> 1983. </year>
Reference: [ Domenjoud, 1991 ] <author> E. Domenjoud. </author> <title> Ac-unification through order-sorted ac1-unification. </title> <booktitle> In Proceedings of the 4th International Conference on rewriting techniques and applications. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference-contexts: A flattened term represents all terms equivalent up to the AC axioms. Since flattening breaks the original term structure, special unification techniques are needed. AC unification algorithms <ref> [ Stickel, 1981; Domenjoud, 1991; Boudet et al., 1996 ] </ref> are developed to compute all possible most general unifiers of two terms up to associativity and commutativity axioms. Special AC termination order-ings are also needed to show termination of AC rewriting systems.
Reference: [ Kapur et al., 1990 ] <author> D. Kapur, G. Sivakumar, and H. Zhang. </author> <title> A new method for proving termination of ac-rewrite systems. </title> <booktitle> In Proc. of Tenth Conference on Foundations of Software Technology and Theoretical Computer Science, </booktitle> <pages> pages 133-148, </pages> <address> December 1990. </address> <publisher> Springer Verlag LNCS 472. </publisher>
Reference: [ Klop, 1992 ] <author> Jan Willem Klop. </author> <title> Term rewriting systems. </title> <editor> In S. Abramsky, D. M. Gabbay, and T. S. E. Maibaum, editors, </editor> <booktitle> Handbook of Logic in Computer Science, </booktitle> <volume> volume 2, chapter 1, </volume> <pages> pages 1 - 117. </pages> <publisher> Oxford University Press, Oxford, </publisher> <year> 1992. </year>
Reference-contexts: We then present the consistent unfailing completion algorithm and show its completeness. We then show how the algorithm can be refined and implemented. We give some test results in the end. 2 Background In this section, we define some relevant concepts. For surveys on equational reasoning, see <ref> [ Plaisted, 1993; Dershowitz and Jouannaud, 1990; Klop, 1992 ] </ref> . For introductions to the area of theorem proving, see [ Chang and Lee, 1973; Loveland, 1978; Wos et al., 1984 ] . We follow the conventions of [ Plaisted, 1993 ] in this paper.
Reference: [ Knuth and Bendix, 1970 ] <author> D.E. Knuth and P.B. Bendix. </author> <title> Simple word problems in universal algebras. </title> <booktitle> In Computational Problems in Abstract Algebra, </booktitle> <pages> pages 263-297. </pages> <address> Perg-amon, Oxford, U.K., </address> <year> 1970. </year>
Reference-contexts: 1 Introduction Knuth-Bendix completion <ref> [ Knuth and Bendix, 1970 ] </ref> and its extensions [ Bachmair et al., 1989 ] have been widely used for equational reasoning. One of the main bottlenecks of completion-based inference strategies is the large number of critical pairs generated. <p> Theorem 2.2 can be used to generate such new rules. The idea is to add rule s ! t or s t to R while preserving termination for all critical pairs (s; t) in R. The algorithm was initially proposed in <ref> [ Knuth and Bendix, 1970 ] </ref> , and is often called Knuth-Bendix completion, or simply, completion. Sometimes, it is not possible to orient an equation, i.e. f (x; y) = f (y; x), in either direction while maintaining termina-tion.
Reference: [ Lankford and Ballantyne, 1977 ] <author> D. Lankford and A.M. Bal-lantyne. </author> <title> Decision problems for simple equational theories with commutative-associative axioms: Complete sets of commutative-associative reductions. </title> <type> Technical Report Memo ATP-39, </type> <institution> Department of Mathematics and Computer Science, University of Texas, Austin, TX, </institution> <year> 1977. </year>
Reference-contexts: Since commutativity axioms cannot be oriented in any termination ordering, many of these new rewrite rules generated from the AC axioms cannot be simplified. Special completion procedures are developed to handle AC equational problems <ref> [ Lankford and Ballantyne, 1977; Peterson and Stickel, 1981 ] </ref> . Most of the approaches in the literature use flattened terms. For example, +(a; +(b; c)) is represented as +(a; b; c), and terms +(a; c; b) and +(a; b; c) are considered identical.
Reference: [ Loveland, 1978 ] <author> D. Loveland. </author> <title> Automated Theorem Proving: </title>
References-found: 12

