URL: http://dna.stanford.edu/~cnevill/publications/ML96.ps.gz
Refering-URL: http://dna.stanford.edu/~cnevill/resume.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: ihw,cgn-@cs.waikato.ac.nz  maulsby@camis.stanford.edu  
Title: Interacting with learning agents: Implications for ML from HCI  
Author: Ian H. Witten, Craig G. Nevill-Manning David Maulsby 
Address: Hamilton, New Zealand  Palo Alto, California  
Affiliation: Department of Computer Science, University of Waikato,  CAMIS (Medical Information Section), Stanford University,  
Abstract-found: 0
Intro-found: 1
Reference: <author> Angluin, D. </author> <title> (1982) Inference of reversible languages. </title> <journal> J ACM 29(3), </journal> <pages> pp. 741765. </pages>
Reference: <author> Cypher, A. (ed.) </author> <title> (1993) Watch what I do: programming by demonstration. </title> <publisher> MIT Press. </publisher> <address> Cambridge MA. </address>
Reference-contexts: In principle, combining machine learning with instructional interaction should increase the speed with which tasks are acquired, and enhance reliability too. This meeting of learning and interaction is often called programming by demonstration (PBD). Although many PBD systems have been exhibited <ref> (Cypher, 1993) </ref>, they tend to place more emphasis on interaction than on learning. The problem is that mainstream machine learning schemes are not designed to deal with the additional constraints imposed by the interactive environment, nor capitalize on the extra resources it provides.
Reference: <author> Dietterich, T.G. and Michalski, </author> <title> R.S. (1986) Learning to predict sequences. In Machine learning: an artificial intelligence approach II, edited by R.S. </title> <editor> Michalski, J.G. Carbonell and T.M. Mitchell, </editor> <volume> 63106. </volume> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos, CA. </address>
Reference: <author> Kurlander, D. and Feiner, S. </author> <title> (1993) A history-based macro by example system. In Watch what I do: programming by demonstration., edited by A. Cypher, </title> <journal> pp. </journal> <volume> 320 338. </volume> <publisher> MIT Press. </publisher> <address> Cambridge MA. </address>
Reference: <author> Laird, R. and Saul, R. </author> <title> (1994) Discrete sequence prediction and its applications. </title> <booktitle> Machine Learning 15(1): </booktitle> <month> 4368; April. </month>
Reference: <author> Lieberman, H. </author> <year> (1993) </year> <month> Mondrian: </month> <title> a teachable graphical editor. In Watch what I do: programming by demonstration., edited by A. </title> <booktitle> Cypher, </booktitle> <pages> pp. 340357. </pages> <publisher> MIT Press. </publisher> <address> Cambridge MA. </address>
Reference: <author> Maulsby, D., Greenberg, S. and Mander, R. </author> <title> (1993) Prototyping an intelligent agent through Wizard of Oz, </title> <booktitle> in Proc InterCHI93, </booktitle> <pages> pp. 277285. </pages> <address> Amsterdam. </address>
Reference-contexts: Third, talking about the task helps to communicate the agents conceptual model to the user, increasing the chance that he or she will in future adopt terms that the agent understands. This has been observed in a study of user interaction with TURVY, a simulated agent <ref> (Maulsby et al., 1993) </ref>. The task is a set of repetitive editing operations on a bibliographic database. Users began by offering instructions in bibliographic terms, such as look for the last authors surname ....
Reference: <author> Maulsby, D. </author> <title> (1994) Instructible agents. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, University of Calgary. </institution>
Reference: <author> Mitchell, </author> <title> T.M. (1978) Version space: an approach to concept learning. </title> <type> PhD thesis, </type> <institution> Stanford University. </institution>
Reference: <author> Modugno, F. and Myers, </author> <title> B.A. (1993) Graphical representation and feedback in a PBD system. In Watch what I do: programming by demonstration., edited by A. </title> <booktitle> Cypher, </booktitle> <pages> pp. 415422. </pages> <publisher> MIT Press. </publisher> <address> Cambridge MA. </address>
Reference: <author> Nevill-Manning, C.G. and Witten, I.H. </author> <title> (1995) Detecting sequential structure. </title> <booktitle> Proc Workshop on Programming by Demonstration, ML 95, </booktitle> <address> Tahoe City, CA, </address> <pages> pp. 49 56. </pages>
Reference: <author> Quinlan, J.R. </author> <year> (1993) </year> <month> C4.5: </month> <title> programs for machine learning. </title> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA. </address>
Reference-contexts: In contrast, most widely-used ML schemes are non-incremental in nature. For example, top-down decision tree learners <ref> (like C4.5, Quinlan, 1993) </ref> require all examples to be presented at once. Although incremental versions have been investigated (e.g. ID4, Schlimmer and Fischer, 1986; ID5R, Utgoff, 1989), they have not found much application: they either make serious sacrifices in inductive power or appear to have heavy resource requirements.
Reference: <author> Sammut, C. and Banerji, R. </author> <title> (1986) Learning concepts by asking questions. In Machine Learning Vol II, edited by R.S. Michalski, J.G. Carbonell and T.M. </title>
Reference-contexts: In practice this still places a high premium on the users ability to select a well-ordered sequence of examples. Incremental learners have been investigated in the realm of inductive logic programming. MARVIN is an early example <ref> (Sammut and Banerji, 1986) </ref>. The user begins by presenting an example of the desired concept, whereupon MARVIN proceeds to ask questions to eliminate possible hypotheses. While learning a concept, it modifies its current hypothesis by generalization and specialization transforms until it converges to the target concept.
Reference: <author> Mitchell, </author> <title> pp. 167191. </title> <publisher> Morgan Kaufmann. </publisher>
Reference: <author> Sassin, M. and Bocionek, S. </author> <title> (1996) Meeting the users intention in programming by demonstration systems. </title> <booktitle> Proc Acquisition Learning and Demonstration Workshop, AAAI Spring Symposium, </booktitle> <address> Stanford, CA, </address> <pages> pp. 131135. </pages>
Reference-contexts: One obvious approach is to represent procedures as flowcharts composed of storyboard segments <ref> (Sassin and Bocionek, 1996) </ref>; however, nonspecialist users may be unable to comprehend a nontrivial flowchart even though its meaning is clear to a programmer. 3.4 Instructional hints can serve to alter the learners bias The dominant learning problem in intelligent agents is the determination of an appropriate subset of features to
Reference: <author> Schlimmer, J.C. and Fischer, D. </author> <title> (1986) A case study of incremental concept induction. </title> <booktitle> Proc Fifth Annual Conference on AI, </booktitle> <address> Philadelphia, PA, </address> <pages> pp. 496501. </pages>
Reference: <author> Schlimmer, J.C. and Hermens, L.A. </author> <title> (1993) Software agents: completing patterns and constructing user interfaces, </title> <journal> Journal of Artificial Intelligence Research, </journal> <volume> 1, </volume> <pages> pp. 61-89. </pages>
Reference: <author> Utgoff, P.E. </author> <title> (1989) Incremental induction of decision trees. </title> <booktitle> Machine Learning 4(2), </booktitle> <pages> pp. 161186. </pages>
Reference: <author> Winograd, T. and Flores, F. </author> <title> (1986) Understanding computers and cognition. </title> <publisher> Ablex, </publisher> <address> Norwood, NJ. </address>
References-found: 19

