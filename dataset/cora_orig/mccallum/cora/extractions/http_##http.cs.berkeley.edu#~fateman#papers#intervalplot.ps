URL: http://http.cs.berkeley.edu/~fateman/papers/intervalplot.ps
Refering-URL: http://http.cs.berkeley.edu/~fateman/algebra.html
Root-URL: 
Title: Honest Plotting, Global Extrema, and Interval Arithmetic  
Author: Richard Fateman 
Address: Berkeley  
Affiliation: University of California at  
Abstract: A computer program to honestly plot curves y = f(x) must locate maxima and minima in the domain of the graph. To do so it may have to solve a classic problem in computation global optimization. Reducing an easy problem to a hard one is usually not an advantage, but in fact there is a route to solving both problems if the function can be evaluated using interval arithmetic. Since some computer algebra systems supply a version of interval arithmetic, it seems we have the ingredients for a solution. In this paper we address a particular problem how to compute and display "honest" graphs of 2-D mathematical curves. By "honest" we mean that no significant features (such as the location of poles, the values at maxima or minima, or the behavior of a curve at asymptotes) are misrepresented. By "mathematical" we mean curves like those generally needed in scientific disciplines where functions are represented by composition of common mathematical operations: rational operations (+, -, *, /), exponential and log, trigonometric functions as well as continuous and differentiable functions from applied mathematics. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Tryg A. Ager and Robert Elton Maas. </author> <title> Generating "honest" mathematical graphs. </title> <type> IMSSS Technical Report 317. </type> <institution> Stanford Univ. </institution> <note> Draft. </note>
Reference-contexts: The Maple [5] program has a partial approach to this for plotting an infinite x-range; we show the same kind of approach works for an infinite y-range. Other proposals are briefly indicated in section 6. For a further discussion of "honesty" in plotting, see Ager and Maas <ref> [1] </ref> and Bedner and Fateman [3]. 1 It would be a mistake to assume Mathematica or other systems are necessarily correct in this regard. 4 Plotting With Interval Arith metic The simplest technique to write a program for graphing interval rectangles seemed to be to modify a plotting program in an <p> It is also advisable to check that functions being plotted can in fact be evaluated as intervals. (In Mathematica's terminology the interval <ref> [1; 2] </ref> is written RealInterval [-1, 2-]). 4.1 Using plot Observe the results of the following commands, illustrating the different sorts of graphs that can be produced. This command produces Figure 1. <p> This command produces Figure 1. In <ref> [1] </ref>:= plot [Tan [x],-x,-Pi,Pi-,PlotPoints-&gt;100] (* fig. 1*) Notice the light gray rectangle at =2, and =2 in rectangle as plotted extends vertically from 1 to 1 in these regions. <p> Consider plotting sin (1=x) near x = 0. Compare the graph in Figures 5 and 6, produced respectively by Mathematica's function and then our interval-arithmetic plot. In <ref> [1] </ref>:= Plot [Sin [1/x],-x,0,5-] (* fig. 5 *) In [2]:= plot [Sin [1/x],-x,0,5-,PlotRange-&gt;All] (* fig. 6 *) Notice in Figure 5 that the graph becomes erratic as x ! 0. This is a consequence of the sampling method. <p> Mathematica is calculating points and then connecting them, and can't "keep up" with the ever-more-rapid oscillation of sin (1=x) as x ! 0. In figure 6 the interval-plotting program portrays the region near x = 0 as a solid block with range <ref> [1; 1] </ref>. Choosing a higher value for PlotPoints will smooth out some of the curve, but the region near x = 0 will still be a block. This picture seems far more appropriate than the default plot. <p> Examples The following are some examples using the two functions, arcTanPlot [], and tanPlot [] Infinityg, plot, PlotPoints-&gt;60] In <ref> [1] </ref>:= arcTanPlot [Sin [x],x,-Infinity, Infinity, plot, PlotPoints-&gt;60] (*fig. 9 *) In [2]:= tanPlot [1/x, -x,-3,3-] (*fig. 10 *) Polynomials of high degree are tricky to understand.
Reference: [2] <author> G. Alefeld and J. Herzberger. </author> <title> Introduction to Interval Computations. </title> <publisher> Academic Press, </publisher> <year> 1983. </year>
Reference-contexts: in which case interesting small-scale phenomena might be obscured. 3 Directions for solutions An approach to plotting which in theory solves the problem of truncated extrema, as well as other errors caused by insufficient sampling, is to use interval arithmetic (for a general reference see, for example, Alefeld and Herzberger <ref> [2] </ref>). On the other hand, the usual technique for plotting a function y = f (x) mapping real numbers to real numbers is to choose n equally-spaced points between the finite real numbers a and b such that x 0 = a and x n1 = b. <p> It is also advisable to check that functions being plotted can in fact be evaluated as intervals. (In Mathematica's terminology the interval <ref> [1; 2] </ref> is written RealInterval [-1, 2-]). 4.1 Using plot Observe the results of the following commands, illustrating the different sorts of graphs that can be produced. This command produces Figure 1. <p> Consider plotting sin (1=x) near x = 0. Compare the graph in Figures 5 and 6, produced respectively by Mathematica's function and then our interval-arithmetic plot. In [1]:= Plot [Sin [1/x],-x,0,5-] (* fig. 5 *) In <ref> [2] </ref>:= plot [Sin [1/x],-x,0,5-,PlotRange-&gt;All] (* fig. 6 *) Notice in Figure 5 that the graph becomes erratic as x ! 0. This is a consequence of the sampling method. <p> Examples The following are some examples using the two functions, arcTanPlot [], and tanPlot [] Infinityg, plot, PlotPoints-&gt;60] In [1]:= arcTanPlot [Sin [x],x,-Infinity, Infinity, plot, PlotPoints-&gt;60] (*fig. 9 *) In <ref> [2] </ref>:= tanPlot [1/x, -x,-3,3-] (*fig. 10 *) Polynomials of high degree are tricky to understand. A good plot would show the asymptotic tendencies (to 1 but which direction at which end?) as well as the location of relative extrema and zeros.
Reference: [3] <author> I. Bedner and R. Fateman. </author> <title> "Adventures in the Honest Plotting of 2D Mathematical Functions." </title> <type> (Tech. </type> <institution> Rept. CS Division, EECS, UC Berkeley, </institution> <year> 1991). </year>
Reference-contexts: Other proposals are briefly indicated in section 6. For a further discussion of "honesty" in plotting, see Ager and Maas [1] and Bedner and Fateman <ref> [3] </ref>. 1 It would be a mistake to assume Mathematica or other systems are necessarily correct in this regard. 4 Plotting With Interval Arith metic The simplest technique to write a program for graphing interval rectangles seemed to be to modify a plotting program in an existing computer algebra system. <p> Experimentation with Mathematica 2.0's RealInterval data type except in the most naive fashion, met with unfortunate failures to conserve correctness <ref> [3] </ref>. * Mathematica's default plotting algorithm chooses to rescale, omitting outlier objects. Some of these objects must be forced at least partly into the frame 2 . * Unbounded intervals are sometimes generated. These are not "proper" graphics objects and therefore they must be truncated (clipped) before being plotted. <p> These are not "proper" graphics objects and therefore they must be truncated (clipped) before being plotted. Error messages must be intercepted. * Additional problems and some solutions are listed in a more complete report on this effort <ref> [3] </ref>. Some of them are particular to Mathematica's conventions, but others may be expected in any graphics package using PostScript. Here we report on two functions that approximate the default built-in ones by having lower-case names (plot, parametricPlot) and have similar usage. <p> It required substantial time to understand the subtle ways in which the user's intentions may be thwarted by the built-in algorithms. Some of the problems <ref> [3] </ref> could only be overcome by directly emitting PostScript instructions from Mathe-matica to the plotting engine. In spite of these difficulties, we found the representation of graphics objects to be quite expressive, and the rendering generally quite attractive. <p> A preliminary discussion of some of these issues (omitted from this paper for reasons of length) are contained in a draft report <ref> [3] </ref>. As a brief example, the anomaly in the function plotted in figures 7 and 8 can be easily detected by divided difference techniques. Although these tech-nques do not share the "guarantees" of interval arithmetic they do take advantage of the additional precision usually provided by most computations.
Reference: [4] <author> I. Bedner and R. Fateman. </author> <title> "Adventures in Plotting of 3D Mathematical Functions." </title> <type> (Tech. </type> <institution> Rept. CS Division, EECS, UC Berkeley, </institution> <year> 1991). </year>
Reference-contexts: We have experimented with "honesty" in higher dimensions (specifically projections of 3-D surfaces). The interval techniques are less appealing since the display of rectangular polyhedra in three-space is messy. We have, however, examined the use 7 of adaptive surface plotting as an approach to honest 3-D graphs <ref> [4] </ref>. The current (version 2.0) Mathemat-ica system offers surface plotting on rectangular meshes only; it is clear that a more flexible grid structure is advantageous for the display of surfaces where there are large smooth sections and small complex ones.
Reference: [5] <author> B. W. Char, K. O. Geddes, G. H. Gonnet, M. B. Monagan, S. M. Watt. </author> <title> MAPLE Reference Manual. Symbolic Computation Group, </title> <institution> Dept. of Cmpt. Sci., Univ. of Waterloo, Waterloo Maple Publ., </institution> <year> 1990; </year> <month> Springer-Verlag, </month> <year> 1991. </year>
Reference-contexts: An accurate portrayal then requires the plotting program to bring points at or near infinity into finite regions by functional mappings. The Maple <ref> [5] </ref> program has a partial approach to this for plotting an infinite x-range; we show the same kind of approach works for an infinite y-range. Other proposals are briefly indicated in section 6. <p> This picture seems far more appropriate than the default plot. A third example that may be of interest is a function suggested by W. Kahan to fool plotting programs. It features a narrow notch at x = 4=3 that drops to 1. In <ref> [5] </ref>:= f [x_]:= 1+x^2 +0.0125*Log [Abs [1-3*(x-1)]] In [7]:= Plot [f [x],-x,-2,10-](* fig 7*) In [6]:= plot [f [x],-x,-2,10-] (*fig 8*) 1. In our plot, shown in Figure 8, near x = 4=3 there is a dark grey box with a light grey line at the bottom. <p> There seems to be an acceptable ratio between y and x for about half the width of the plot. (see Figure 9). Naturally it compresses the x axis more and more severely as 1 represents 1. Maple <ref> [5] </ref> provides this kind of mapping for its so-called "infinity plots" if either of the supplied horizontal range end-points are infinite. For the y axis, another approach works. If the y extent of a function is very large, we plot = (2=) arctan (y) instead of y.
Reference: [6] <author> Theodore W. Gray and Jerry Glynn. </author> <title> Exploring Mathematics with Mathematica. </title> <publisher> Addison-Wesley Publishing Company, Inc., </publisher> <address> Redwood City, Califor-nia, </address> <year> 1991. </year>
Reference-contexts: A third example that may be of interest is a function suggested by W. Kahan to fool plotting programs. It features a narrow notch at x = 4=3 that drops to 1. In [5]:= f [x_]:= 1+x^2 +0.0125*Log [Abs [1-3*(x-1)]] In [7]:= Plot [f [x],-x,-2,10-](* fig 7*) In <ref> [6] </ref>:= plot [f [x],-x,-2,10-] (*fig 8*) 1. In our plot, shown in Figure 8, near x = 4=3 there is a dark grey box with a light grey line at the bottom. This indicates that the plot approaches 1.
Reference: [7] <author> W. Kahan. </author> <title> "Fear of Constants" (this symposium: </title> <address> ISSAC-92, Berkeley, CA). </address>
Reference-contexts: A third example that may be of interest is a function suggested by W. Kahan to fool plotting programs. It features a narrow notch at x = 4=3 that drops to 1. In [5]:= f [x_]:= 1+x^2 +0.0125*Log [Abs [1-3*(x-1)]] In <ref> [7] </ref>:= Plot [f [x],-x,-2,10-](* fig 7*) In [6]:= plot [f [x],-x,-2,10-] (*fig 8*) 1. In our plot, shown in Figure 8, near x = 4=3 there is a dark grey box with a light grey line at the bottom. This indicates that the plot approaches 1. <p> Given a correct implementation of intervals, the down-side risk is that one may have to wait longer for any answer whatsoever. Another plausible use of interval arithmetic in a symbolic context is for determining the sign of constants <ref> [7] </ref>.
Reference: [8] <author> Roman Maeder. </author> <title> Programming in Mathematica. </title> <publisher> Addison-Wesley Publishing Company, </publisher> <address> Redwood City, California, </address> <note> Second Edition, </note> <year> 1991. </year>
Reference: [9] <author> J. C. P. Miller. </author> <title> Checking by Differences. Mathematical Tables and Other Aids to Computation Vol. </title> <type> 4, </type> <year> 1950. </year> <pages> 3-11 </pages>
Reference-contexts: While this is not a decision procedure, it is an excellent heuristic that may succeed in bounding a non-zero constant away from zero. 6.4 Future work Other techniques for discovering "hidden" properties of y = f (x) at astonishingly low cost via divided differences <ref> [9] </ref> will be discussed in a future paper. A preliminary discussion of some of these issues (omitted from this paper for reasons of length) are contained in a draft report [3].
Reference: [10] <author> L. M. Milne-Thompson. </author> <title> The Calculus of Finite Differences. </title> <publisher> Macmillan and Co., </publisher> <address> London, </address> <year> 1933. </year>
Reference: [11] <author> Nancy Blachman. </author> <title> Mathematica: A Practical Approach. </title> <publisher> Prentice Hall, Inc., </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1991. </year>
Reference: [12] <author> Stephen Wolfram. </author> <title> Mathematica|A System for Doing Mathematics by Computer. </title> <publisher> Addison-Wesley Publishing Company, Inc., </publisher> <address> Redwood City, Califor-nia, </address> <note> Second Edition, 1991. 8 </note>
References-found: 12

