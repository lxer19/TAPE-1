URL: ftp://ftp.cs.utexas.edu/pub/boyer/cli-reports/051.ps
Refering-URL: ftp://ftp.cs.utexas.edu/pub/boyer/cli-reports/index.html
Root-URL: http://www.cs.utexas.edu
Phone: (512) 322-9951  
Title: The Partial Specification of Microprocessor Instruction Set Architectures  
Author: William R. Bevier 
Note: This work was sponsored in part at Computational Logic, Inc., by the Defense Advanced Research Projects Agency, ARPA Orders 6082 and 9151. The views and conclusions contained in this document are those of the authors and should not be interpreted as representing the official policies, either expressed or implied, of Computational Logic, Inc., the Defense Advanced Research Projects Agency or the U.S. Government.  
Address: 1717 W. 6th St. Suite 290 Austin, Texas 78703  
Affiliation: Computational Logic Inc.  
Abstract: Technical Report 51 November 1989 
Abstract-found: 1
Intro-found: 1
Reference: [Boyer & Moore 88] <author> R. S. Boyer and J S. </author> <note> Moore. </note>
Reference-contexts: In this paper we describe our approach to specification, giving examples which are drawn from our formal specification for an instruction set for a RISC architecture. Our specification is written in the Boyer-Moore logic <ref> [Boyer & Moore 88] </ref>. Appendix A contains a brief summary of the Boyer-Moore logic. 1.1 Overview of the Approach A machine instruction is modeled as a function I which takes a machine state to a machine state. <p> The techniques used by Hunt to verify a gate-level implementation of FM8502 can be used to verify an implementation of the X machine. 15 Appendix A The Boyer-Moore Logic A complete and precise definition of the logic can be found in <ref> [Boyer & Moore 88] </ref>. We use the prefix syntax of Pure Lisp to write down terms. For example, we write (PLUS I J) where others might write PLUS (I,J) or I+J.
References-found: 1

