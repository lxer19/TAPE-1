URL: http://www.cs.cmu.edu/~thrun/papers/thrun.map_learning.ps.gz
Refering-URL: http://www.cs.cmu.edu/~thrun/papers/thrun.map_learning.html
Root-URL: 
Title: Learning Maps for Indoor Mobile Robot Navigation  
Author: Sebastian Thrun 
Date: 15 September 1997  
Note: Accepted for Publication in Artificial Intelligence Preprint submitted to Elsevier Science  
Address: Pittsburgh  
Affiliation: Computer Science Department and Robotics Institute Carnegie Mellon University,  
Abstract: Autonomous robots must be able to learn and maintain models of their environments. Research on mobile robot navigation has produced two major paradigms for mapping indoor environments: grid-based and topological. While grid-based methods produce accurate metric maps, their complexity often prohibits efficient planning and problem solving in large-scale indoor environments. Topological maps, on the other hand, can be used much more efficiently, yet accurate and consistent topological maps are often difficult to learn and maintain in large-scale environments, particularly if momentary sensor data is highly ambiguous. This paper describes an approach that integrates both paradigms: grid-based and topological. Grid-based maps are learned using artificial neural networks and naive Bayesian integration. Topological maps are generated on top of the grid-based maps, by partitioning the latter into coherent regions. By combining both paradigms, the approach presented here gains advantages from both worlds: accuracy/consistency and efficiency. The paper gives results for autonomous exploration, mapping and operation of a mobile robot in populated multi-room environments. ? This research was sponsored in part by the National Science Foundation under award IRI-9313367, and by the Wright Laboratory, Aeronautical Systems Center, Air Force Materiel Command, USAF, and the Darpa Advanced Research Projects Agency (DARPA) under grant number F33615-93-1-1330. We also acknowledge financial support by Daimler Benz Corp. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T. Balch, G. Boone, T. Collins, H. Forbes, D. MacKenzie, and J. C. Santamaria. </author> <title> Io, ganymede and callisto a multiagent robot janitorial team. </title> <journal> AAAI Magazine, </journal> <volume> 16(1), </volume> <year> 1995. </year>
Reference-contexts: For each ray, one of the following options is chosen at random: (1) a random short value is reported, (2) the 6 Fig. 2. An artificial neural network maps sensor measurements to probabilities of occupancy. Once trained, the network generates values in <ref> [0; 1] </ref> that can be interpreted as probability of occupancy. <p> The University of Bonn's entry RHINO at the 1994 AAAI mobile robot competition, which won second price in the category clean-up an office and which was only defeated by a team of three collaborating robots <ref> [1] </ref>, relied crucially on the mapping and exploration algorithms described in this paper (see [9,102,103]). Parts of the approach are also an integral part of a museum tour-guide, a mobile robot which is currently being installed in 51 cooperation with the University of Bonn at the Deutsches Museum in Bonn.
Reference: [2] <author> A. G. Barto, S. J. Bradtke, and S. P. Singh. </author> <title> Learning to act using real-time dynamic programming. </title> <journal> Artificial Intelligence, </journal> <volume> 72:81138, </volume> <year> 1995. </year>
Reference: [3] <author> K. Basye, T. Dean, </author> <title> and L.P. Kaelbling. Learning dynamics: system identification for perceptually challenged agents. </title> <journal> Artificial Intelligence, </journal> <volume> 72:139171, </volume> <year> 1996. </year>
Reference: [4] <author> R. E. Bellman. </author> <title> Dynamic Programming. </title> <publisher> Princeton University Press, </publisher> <address> Princeton, NJ, </address> <year> 1957. </year>
Reference: [5] <author> M. Betke and L. Gurvits. </author> <title> Mobile robot localization using landmarks. </title> <type> Technical Report SCR-94-TR-474, </type> <institution> Siemens Corporate Research, Princeton, </institution> <month> December </month> <year> 1993. </year> <note> will also appear in the IEEE Transactions on Robotics and Automation. </note>
Reference: [6] <author> J. Bondy and U. Murty. </author> <title> Graph Theory with Applications. </title> <publisher> Elsevier, </publisher> <address> New York, </address> <year> 1976. </year> <month> 52 </month>
Reference-contexts: cells hx; yi do: V x;y min =1;0;1 V x+~;y+ + Prob (occ x+~;y+ ) Value iteration updates the value of all explored grid cells by the value of their best neighbors, plus the costs of moving to this neighbor (just like A* [75] or Dijkstra's famous shortest path algorithm <ref> [6] </ref>). Cost is here equivalent to the probability Prob (occ x;y ) that a grid cell hx; yi is occupied. The update rule is iterated. When the update converges, each value V x;y measures the cumulative cost for moving to the nearest unexplored cell. <p> First, paths are planned using the abstract, topological map. Shortest paths in the topological maps can easily be found using one of the standard graph search algorithms, such as Dijkstra's or Floyd/Warshal's shortest path algorithm <ref> [6] </ref>, A* [75], or dynamic programming. In our imple mentation, we used the value iteration approach described in Section 2.5. (ii) Triplet planning. To translate topological plans into motion commands, a so-called triplet planner generates (metric) paths for each set of three adjacent topological regions in the topological plan.
Reference: [7] <author> J. Borenstein, B. Everett, and L. Feng. </author> <title> Navigating Mobile Robots: Systems and Techniques. </title> <editor> A. K. Peters, </editor> <publisher> Ltd., </publisher> <address> Wellesley, MA, </address> <year> 1996. </year>
Reference-contexts: A recent survey by Borenstein and his colleagues <ref> [7] </ref> dedicated exclusively to this topic illustrates the importance of localization and illustrates the large number of existing approaches.
Reference: [8] <author> J. Borenstein and Koren. Y. </author> <title> The vector field histogram fast obstacle avoidance for mobile robots. </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> 7(3):278288, </volume> <month> June </month> <year> 1991. </year>
Reference-contexts: Recent research has produced two fundamental paradigms for modeling indoor robot environments: the grid-based (metric) paradigm and the topological paradigm. Grid-based approaches, such as those proposed by Moravec/Elfes [31,32,70] and Borenstein/Koren <ref> [8] </ref> and many others, represent environments by evenly-spaced grids. Each grid cell may, for example, indicate the presence of an obstacle in the corresponding region of the environment. Topological approaches, such a those proposed by Kuipers/Byun, Mataric and others [34,55,58,65,81,105,112,115], represent robot environments by graphs.
Reference: [9] <author> J. Buhmann, W. Burgard, A. B. Cremers, D. Fox, T. Hofmann, F. Schneider, J. Strikos, and S. Thrun. </author> <title> The mobile robot Rhino. </title> <journal> AI Magazine, </journal> <volume> 16(1), </volume> <year> 1995. </year>
Reference-contexts: Throughout this paper, we will restrict ourselves to the interpretation of proximity sensors, although the methods described here have (in a prototype version) also been operated using cameras and infrared light sensors in addition to sonar sensors, using the image segmentation approach described in <ref> [9] </ref>. The integrated approach to map building has been tested extensively using sonar sensors in various indoor environments. It is now distributed commercially by a leading mobile robot manufacturer (Real world Interface, Inc.) as the sole navigation software along with their B14 and B21 robots. <p> In an initial study, we extended the current approach by using a camera for floor segmentation and 24 infrared light sensors that measure proximity by measuring the intensity of reflected light <ref> [9] </ref>. The Bayesian approach to sensor integration described in this paper is flexible enough to accommodate other types of sensor information as well. In fact, in our initial experiments we found that the grid-based maps were more accurate when additional sensors were incorporated [103]. Dynamic environments.
Reference: [10] <author> W. Burgard, D. Fox, D. Hennig, and T. Schmidt. </author> <title> Estimating the absolute position of a mobile robot using position probability grids. </title> <booktitle> In Proceedings of the Thirteenth National Conference on Artificial Intelligence, </booktitle> <address> Menlo Park, </address> <month> August </month> <year> 1996. </year> <booktitle> AAAI, </booktitle> <publisher> AAAI Press/MIT Press. </publisher>
Reference: [11] <author> W. Burgard, D. Fox, D. Hennig, and T. Schmidt. </author> <title> Position tracking with position probability grids. </title> <booktitle> In Proceedings of the 1st Euromicro Workshop on Advanced Mobile Robots. </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1996. </year>
Reference: [12] <author> W. Burgard, D. Fox, and S. Thrun. </author> <title> Active mobile robot localization. </title> <booktitle> In Proceedings of IJCAI-97. IJCAI, </booktitle> <publisher> Inc., </publisher> <year> 1997. </year> <note> (to appear). </note>
Reference: [13] <author> J. Canny. </author> <title> The Complexity of Robot Motion Planning. </title> <publisher> The MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1987. </year>
Reference: [14] <author> J.F. Canny and B.R. Donald. </author> <title> Simplified voronoi diagrams. Discrete and Computational Geometry, </title> <address> 3:219236, </address> <year> 1988. </year>
Reference: [15] <author> R. Chatila and J.-P. Laumond. </author> <title> Position referencing and consistent world modeling for mobile robots. </title> <booktitle> In Proceedings of the 1985 IEEE International Conference on Robotics and Automation, </booktitle> <year> 1985. </year>
Reference-contexts: Occupancy grids, however, are not the only metric representation. Chatila/Laumond <ref> [15] </ref> proposed to represent objects by polyhedra in a global coordinate frame. Cox [23] proposed to constructs probabilistic trees to represent different, alternative models of the environment. In his work, Kalman filters and Bayesian methods are used for handling uncertainty. <p> They can also take momentary perceptual information such as landmark information into account, just like topological approaches. The importance of integrating metric and topological maps for scaling up mobile robot operation has long been recognized. Among the first to propose this idea was Elfes [32] and Chatila/Laumond <ref> [15] </ref>. Elfes devised algorithms for detecting and labeling occupied regions in occupancy maps, using techniques from computer vision [32,31]. He also proposed building large-scale topological maps, but he did not devise an algorithm for doing so. Chatila and Laumond [15] proposed 40 to represent objects by polyhedra in a global coordinate <p> the first to propose this idea was Elfes [32] and Chatila/Laumond <ref> [15] </ref>. Elfes devised algorithms for detecting and labeling occupied regions in occupancy maps, using techniques from computer vision [32,31]. He also proposed building large-scale topological maps, but he did not devise an algorithm for doing so. Chatila and Laumond [15] proposed 40 to represent objects by polyhedra in a global coordinate frame. From those they propose to decompose the free-space into a small number of cells that correspond to rooms, doors, corridors, and so on. <p> Model matching. Model matching algorithms extract geometric features from the sensor readings and match those to a model of the environment in order to identify errors in the robot's odometry [912,15,22,85,90,99,101,109]. Among the earliest work in this field is that of Moravec, Elfes, and Chatila/Laumond. Chatila and Laumond's approach <ref> [15] </ref> extracts geometric features such as line segments and polyhedral objects which are matched to a geometric map. Moravec 41 and Elfes, who pioneered the development of occupancy grids, were also the first to use occupancy grids for localization [31,71].
Reference: [16] <author> H. Choset. </author> <title> Sensor Based Motion Planning: The Hierarchical Generalized Voronoi Graph. </title> <type> PhD thesis, </type> <institution> California Institute of Technology, </institution> <year> 1996. </year>
Reference: [17] <author> H. Choset, I. Konuksven, and J.W. Burdick. </author> <title> Sensor Based Planning for a Planar Rod Robot. </title> <booktitle> In Proc. IEEE/SICE/RSJ Int. Conf. on Multisensor Fusion on Multisensor Fusion and Integration for Intelligent Systems, </booktitle> <address> Washington, DC, </address> <year> 1996. </year>
Reference: [18] <author> H. Choset, I. Konuksven, and A. Rizzi. </author> <title> Sensor Based Planning: A Control Law for Generating the Generalized Voronoi Graph. </title> <booktitle> In Submitted to Proc. IEEE Int. Advanced Robotics, </booktitle> <address> Washington, DC, </address> <year> 1996. </year>
Reference: [19] <author> E. Chown, S. Kaplan, and D. Kortenkamp. </author> <title> Prototypes, location, and associative networks (plan): Towards a unified theory of cognitive mapping. </title> <booktitle> Cognitive Science, </booktitle> <address> 19:151, </address> <year> 1995. </year>
Reference-contexts: Metric maps are used for localizing the robot (see discussion below). To determine the location of the robot within its map, the robot has to return close to its initial starting location (using only its wheel encoders), which imposes severe scaling limitations. Chown and colleagues <ref> [19] </ref> proposed a cognitively motivated approach to map learning, called PLAN. PLAN also learns a topological graph. Nodes in the topological graph are created whenever the robot enters a choice point (such as an intersection), or when new landmark comes into its field of view. <p> Landmark-based approaches use landmarks as references for determining a robot's position. It comprises by far the most popular family of approaches, partially because of its genuine computational simplicity, partially because landmarks appear to play a major role in human navigation <ref> [19] </ref>. Examples of successful algorithms for landmark-based localization can be found [5,21,52,47,50,74,76,80,95,111] and various chapters in [53]. Model matching. Model matching algorithms extract geometric features from the sensor readings and match those to a model of the environment in order to identify errors in the robot's odometry [912,15,22,85,90,99,101,109].
Reference: [20] <author> L. Chrisman. </author> <title> Reinforcement learning with perceptual aliasing: The perceptual distinction approach. </title> <booktitle> In Proceedings of 1992 AAAI Conference, </booktitle> <address> Menlo Park, CA, July 1992. </address> <publisher> AAAI Press / The MIT Press. </publisher> <pages> 53 </pages>
Reference: [21] <author> T.S. Collet and B.A. Cartwright. </author> <note> Landmark learning in bees. Journal of Comparative Physiology, </note> <month> January </month> <year> 1985. </year>
Reference: [22] <author> I.J. Cox. </author> <title> Blanchean experiment in guidance and navigation of an autonomous robot vehicle. </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> 7(2):193204, </volume> <year> 1991. </year>
Reference-contexts: A recent survey by Borenstein and his colleagues [7] dedicated exclusively to this topic illustrates the importance of localization and illustrates the large number of existing approaches. Cox <ref> [22] </ref> noted that Using sensory information to locate the robot in its environment is the most fundamental problem to providing a mobile robot with autonomous capabilitiesan assessment that we do not share, but which nevertheless demonstrates the importance of the problem.
Reference: [23] <author> I.J. Cox. </author> <title> Modeling a dynamic environment using a bayesian multiple hypothesis approach. </title> <journal> Artificial Intelligence, </journal> <volume> 66:311344, </volume> <year> 1994. </year>
Reference-contexts: Occupancy grids, however, are not the only metric representation. Chatila/Laumond [15] proposed to represent objects by polyhedra in a global coordinate frame. Cox <ref> [23] </ref> proposed to constructs probabilistic trees to represent different, alternative models of the environment. In his work, Kalman filters and Bayesian methods are used for handling uncertainty.
Reference: [24] <author> R.H. Crites and A.G. Barto. </author> <title> Improving elevator performance using reinforcement learning. </title> <editor> In D. Touretzky, M. Mozer, and M.E. Hasselmo, editors, </editor> <booktitle> Advances in Neural Information Processing Systems 8, </booktitle> <address> Cambridge, MA, 1996. </address> <publisher> MIT Press. </publisher>
Reference: [25] <author> J. Crowley. </author> <title> World modeling and position estimation for a mobile robot using ultrasonic ranging. </title> <booktitle> In Proceedings of the 1989 IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 674680, </pages> <address> Scottsdale, AZ, </address> <month> May </month> <year> 1989. </year>
Reference: [26] <author> P. Dayan and G. E. Hinton. </author> <title> Feudal reinforcement learning. </title> <editor> In J. E. Moody, S. J. Hanson, and R. P. Lippmann, editors, </editor> <booktitle> Advances in Neural Information Processing Systems 5, </booktitle> <address> San Mateo, CA, 1993. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Fixed decomposition. In [63,96,110] algorithms are presented that first learn solutions to sub-problems (using model-free reinforcement learning), then combine these solutions using a reinforcement learning algorithm. Sub-problems are specified through sub-goals or certain sub-reward functions, which have to be provided manually by the human designer. Dayan and Hinton <ref> [26] </ref> proposed a hierarchical reinforcement learning architecture which recursively decomposes the state space into squares of fixed size. At each level of control, policies are generated for moving from one square to a neighboring square. Their abstraction may be inconsistent. <p> A path planning approach for robots with excessive degrees of freedom that, similar to Kaelbling's approach, decomposes robot planning problems into sets of smaller problems by selecting a small number of random points can be found in [49]. Similar to Dayan and Hinton <ref> [26] </ref>, Moore [68] recently proposed an approach for decomposing space into a set of rectangles, called parti-game. In his approach, the resolution of the decomposition is variable. It maximal along the boundary between obstacles and free-space.
Reference: [27] <author> T. Dean and S.-H. Lin. </author> <title> Decomposition techniques for planning in stochastic domains. </title> <booktitle> In Proceedings of IJCAI-95, </booktitle> <address> Montreal, Canada, </address> <month> August </month> <year> 1995. </year> <title> IJCAI, </title> <publisher> Inc. </publisher>
Reference-contexts: Their abstraction may be inconsistent. At higher levels of abstraction perceptual detail is omitted, which can turn a Markovian problem into a non-Markovian one for which no solution may exist. Dean and Lin <ref> [27] </ref> derived more general algorithms for solving dynamic programming algorithms efficiently given arbitrary partitions of the state space. One of their algorithms, called Hierarchical Policy Construction method, generates policies for transitioning from one region in the state space to another.
Reference: [28] <author> T. L. Dean and M. Boddy. </author> <title> An analysis of time-dependent planning. </title> <booktitle> In Proceeding of Seventh National Conference on Artificial Intelligence AAAI-92, </booktitle> <pages> pages 4954, </pages> <address> Menlo Park, CA, 1988. </address> <publisher> AAAI, AAAI Press/The MIT Press. </publisher>
Reference-contexts: Gradient descent is an iterative search scheme, whose accuracy usually increases with the number of iterations. When a new sonar reading arrives, the previous gradient search is terminated and its result is incorporated into the current position estimation. Consequently, the position tracking algorithm is an anytime algorithm <ref> [28] </ref> whose accuracy depends on the available computation time. An example map of a competition ring constructed at the 1994 AAAI autonomous 16 23.1 meters ? 32.2 meters - Fig. 9. <p> The update rule is iterated. When the update converges, each value V x;y measures the cumulative cost for moving to the nearest unexplored cell. However, control can be generated at any time <ref> [28] </ref>, long before value iteration converges. in the worst case, the computation of V requires O (n 2 ) steps with n being the number of grid cells. (iii) Determine motion direction. To determine where to explore next, the robot generates a minimum-cost path to the unexplored. <p> The exploration of the map shown in Figure 4 required approximately 45 minutes. Value iteration is a very general procedure which has several properties that make it attractive for real-time mobile robot navigation: Any-time algorithm. As mentioned above, value iteration can be used as an anytime planner <ref> [28] </ref>. Any-time algorithms are able to make decisions regardless of the time spent for computation. The more time that is available, however, the better the results. Value iteration allows the robot to explore in real-time. Full exception handling. Value iteration pre-plans for arbitrary robot locations.
Reference: [29] <author> B.N. </author> <title> Delaunay. Sur la sphere vide. </title> <journal> Izvestia Akademii Nauk SSSR, Otdelenie Matematicheskii i Estestvennyka Nauk (Bulletin of Academy of Sciences of the USSR), </journal> <volume> 7:793800, </volume> <year> 1934. </year>
Reference: [30] <author> R.O. Duda and P.E. Hart. </author> <title> Pattern classification and scene analysis. </title> <publisher> Wiley, </publisher> <address> New York, </address> <year> 1973. </year>
Reference: [31] <author> A. Elfes. </author> <title> Sonar-based real-world mapping and navigation. </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> RA-3(3):249265, </volume> <month> June </month> <year> 1987. </year>
Reference: [32] <author> A. Elfes. </author> <title> Occupancy Grids: A Probabilistic Framework for Robot Perception and Navigation. </title> <type> PhD thesis, </type> <institution> Department of Electical and Computer Engineering, Carnegie Mellon University, </institution> <year> 1989. </year>
Reference-contexts: They can also take momentary perceptual information such as landmark information into account, just like topological approaches. The importance of integrating metric and topological maps for scaling up mobile robot operation has long been recognized. Among the first to propose this idea was Elfes <ref> [32] </ref> and Chatila/Laumond [15]. Elfes devised algorithms for detecting and labeling occupied regions in occupancy maps, using techniques from computer vision [32,31]. He also proposed building large-scale topological maps, but he did not devise an algorithm for doing so.
Reference: [33] <author> S. Engelson. </author> <title> Passive Map Learning and Visual Place Recognition. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, Yale University, </institution> <year> 1994. </year>
Reference-contexts: The reader should note that the current approach is only able to localize the robot when its initial position is known. It is not able to localize a robot under global uncertainty, a problem which is also known as the kidnaped robot problem <ref> [33] </ref>.
Reference: [34] <author> S. Engelson and D. McDermott. </author> <title> Error correction in mobile robot map learning. </title> <booktitle> In Proceedings of the 1992 IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 25552560, </pages> <address> Nice, France, </address> <month> May </month> <year> 1992. </year> <month> 54 </month>
Reference: [35] <author> C. Fedor. TCX. </author> <title> An interprocess communication system for building robotic architectures. programmer's guide to version 10.xx. </title> <institution> Carnegie Mellon University, </institution> <address> Pittsburgh, PA 15213, </address> <month> December </month> <year> 1993. </year>
Reference-contexts: He specifically thanks Arno Bucken for re-implementing the techniques described in Section 3 and verifying the results. Some of the low-level software (TCX <ref> [35] </ref> and device drivers) were provided by the XAVIER mobile robot group at Carnegie Mellon University, which is gratefully acknowledged. The author thanks three anonymous reviewers for helping him improving the presentation of the material.
Reference: [36] <author> D. Fox, W. Burgard, and S. Thrun. </author> <title> The dynamic window approach to collision avoidance. </title> <journal> IEEE Robotics and Automation, </journal> <note> to appear. (also appeared as Technical Report IAI-TR-95-13, </note> <institution> University of Bonn, </institution> <year> 1995). </year>
Reference-contexts: This is particularly important in our approach, since the robot uses a fast routine for avoiding collisions with obstacles, which may modify the motion direction commanded by the planner at its own whim <ref> [36] </ref>. Multi-agent exploration. Since value iteration generates values for all grid-cells, it can easily be used for collaborative multi-agent exploration. Point-to-point navigation. By changing the initialization of V (Step i), the same approach is used for point-to-point navigation [99]. <p> All these advances are substantial for the current approach, which enables mobile robots to learn large-scale maps in real-time while moving at a speed of up to 90 cm/sec <ref> [36] </ref>. 6 Discussion This paper proposes an integrated approach to mapping indoor robot environments. It combines the two major existing paradigms: grid-based and topological. Grid-based maps are learned using artificial neural networks and Bayes's rule. Topological maps are generated by partitioning the grid-based map into critical regions. <p> It is already in use at more than 10 academic and industrial sites, where it has successfully mapped many different environments. An essential part of the software package is a fast, reactive collision avoidance routine, which is described elsewhere <ref> [36] </ref>. The advantage of integrating a fast collision avoidance routine is that dynamic obstacles and inaccuracies in the map do not lead to collisions.
Reference: [37] <author> T. Frohlinghaus and J.M. Buhmann. </author> <title> Real-time phase-based stereo for a mobile robot. </title> <booktitle> In Proceedings of the 1st Euromicro Workshop on Advanced Mobile Robots. </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1996. </year>
Reference: [38] <author> T. Frohlinghaus and J.M. Buhmann. </author> <title> Regularizing phase-based stereo. </title> <booktitle> In Proceedings of the 13th International Conference on Pattern Recognition, </booktitle> <address> Vienna, Austria, </address> <year> 1996. </year>
Reference: [39] <author> L. J. Guibas, D. E. Knuth, and M. Sharir. </author> <title> Randomized incremental construction of Delaunay and Voronoi diagrams. </title> <journal> Algorithmica, </journal> <note> 7:381413, 1992. See also 17th Int. </note> <editor> Coll. </editor> <booktitle> on Automata, Languages and Programming, </booktitle> <year> 1990, </year> <pages> pp. 414431. </pages>
Reference: [40] <author> D. Guzzoni, A. Cheyer, L. Julia, and K. Konolige. </author> <title> Many robots make short work. </title> <journal> AI Magazine, </journal> <volume> 18(1):5564, </volume> <year> 1997. </year>
Reference: [41] <author> J. Hertz, A. Krogh, and R. G. Palmer. </author> <title> Introduction to the theory of neural computation. </title> <publisher> Addison-Wesley Pub. Co., </publisher> <address> Redwood City, California, </address> <year> 1991. </year>
Reference: [42] <author> R. Hinkel and T. Knieriemen. </author> <title> Environment perception with a laser radar in a fast moving robot. </title> <booktitle> In Proceedings of Symposium on Robot Control, pages 68.168.7, </booktitle> <address> Karlsruhe, Germany, </address> <month> October </month> <year> 1988. </year>
Reference: [43] <author> R. Holte. </author> <title> Speeding up problem-solving by abstraction: A graph-oriented approach. </title> <journal> Artificial Intelligence, </journal> <year> 1996. </year>
Reference: [44] <author> R. A. Howard. </author> <title> Dynamic Programming and Markov Processes. </title> <publisher> MIT Press and Wiley, </publisher> <year> 1960. </year>
Reference: [45] <author> L. P. Kaelbling. </author> <title> Hierarchical learning in stochastic domains: Preliminary results. </title> <editor> In P. E. Utgoff, editor, </editor> <booktitle> Proceedings of the Tenth International Conference on Machine Learning, </booktitle> <pages> pages 167173, </pages> <address> San Mateo, CA, 1993. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: This paper goes beyond most of the work in the field in that it presents some useful formal convergence results for learning hierarchical control. On-line decomposition. Recently, Kaelbling <ref> [45] </ref> proposed an approach that decomposes the state space automatically based on a small set of randomly chosen landmark states. In her approach, each landmark state defines a region and states other than landmark states are members of the region defined by the nearest landmark state.
Reference: [46] <author> L. P. Kaelbling, M. L. Littman, and A. W. Moore. </author> <title> An introduction to reinforcement learning. </title> <editor> In L. Steels, editor, </editor> <booktitle> The Biology and Technology of Intelligent Autonomous Agents, </booktitle> <pages> pages 90127, </pages> <address> Berlin, Heidelberg, March 1995. </address> <publisher> Springer Publishers. </publisher>
Reference: [47] <author> L.P. Kaelbling, A.R. Cassandra, and J.A. Kurien. </author> <title> Acting under uncertainty: Discrete bayesian models for mobile-robot navigation. </title> <booktitle> In Proceedings of the IEEE/RSJ International Conference on Intelligent Robots and Systems, </booktitle> <year> 1996. </year>
Reference: [48] <author> R. E. </author> <title> Kalman. A new approach to linear filtering and prediction problems. </title> <journal> Trans. ASME, Journal of Basic Engineering, </journal> <volume> 82:3545, </volume> <year> 1960. </year> <month> 55 </month>
Reference-contexts: Interleaving mapping and localization is significantly more difficult than either task in isolation [85]. There are several attempts to integrate localization and mapping. For example, Leonard, Durrant-Whyte, and Cox [62] proposed a method that interleaves localization and mapping using Kalman filters <ref> [48] </ref> for position tracking. In their experiments, however, only the mapping component of their approach is demonstrated, leaving open the question as to whether these methods work well together in practice. Yamauchi and Beer [112] also interleave both localization and mapping.
Reference: [49] <author> L. Kavraki and J.-C. Latombe. </author> <title> Randomized preprocessing of configuration space for fast path planning. </title> <booktitle> In IEEE International Conference on Robotics & Automation, </booktitle> <pages> pages 21382145, </pages> <address> San Diego, </address> <year> 1994. </year>
Reference-contexts: A path planning approach for robots with excessive degrees of freedom that, similar to Kaelbling's approach, decomposes robot planning problems into sets of smaller problems by selecting a small number of random points can be found in <ref> [49] </ref>. Similar to Dayan and Hinton [26], Moore [68] recently proposed an approach for decomposing space into a set of rectangles, called parti-game. In his approach, the resolution of the decomposition is variable. It maximal along the boundary between obstacles and free-space.
Reference: [50] <author> S. King and C. Weiman. </author> <title> Helpmate autonomous mobile robot navigation system. </title> <booktitle> In Proceedings of the SPIE Conference on Mobile Robots, pages 190198, </booktitle> <address> Boston, MA, </address> <month> November </month> <year> 1990. </year> <note> Volume 2352. </note>
Reference: [51] <author> C.A. Knoblock. </author> <title> Automatically generating abstractions for planning. </title> <journal> Artificial Intelligence, </journal> <volume> 68:2, </volume> <year> 1994. </year>
Reference: [52] <author> S. Koenig and R. Simmons. </author> <title> Passive distance learning for robot navigation. </title> <editor> In L. Saitta, editor, </editor> <booktitle> Proceedings of the Thirteenth International Conference on Machine Learning, </booktitle> <year> 1996. </year>
Reference: [53] <author> D. Kortenkamp, R.P. Bonassi, and R. Murphy, </author> <title> editors. AI-based Mobile Robots: Case studies of successful robot systems, </title> <address> Cambridge, MA, </address> <publisher> (to appear). MIT Press. </publisher>
Reference-contexts: It comprises by far the most popular family of approaches, partially because of its genuine computational simplicity, partially because landmarks appear to play a major role in human navigation [19]. Examples of successful algorithms for landmark-based localization can be found [5,21,52,47,50,74,76,80,95,111] and various chapters in <ref> [53] </ref>. Model matching. Model matching algorithms extract geometric features from the sensor readings and match those to a model of the environment in order to identify errors in the robot's odometry [912,15,22,85,90,99,101,109]. Among the earliest work in this field is that of Moravec, Elfes, and Chatila/Laumond.
Reference: [54] <author> D. Kortenkamp, I. Nourbakhsh, and D. Hinkle. </author> <title> The 1996 AAAI mobile robot competition and exhibition. </title> <journal> AI Magazine, </journal> <volume> 18(1):2532, </volume> <year> 1997. </year>
Reference-contexts: Cox [23] proposed to constructs probabilistic trees to represent different, alternative models of the environment. In his work, Kalman filters and Bayesian methods are used for handling uncertainty. Jeeves [101], an award-winning robot at the 1996 AAAI mobile robot competition <ref> [54] </ref>, constructs geometric maps incrementally by concatenating wall segments detected in temporal sequences of sonar measurements.
Reference: [55] <author> D. Kortenkamp and T. Weymouth. </author> <title> Topological mapping for mobile robots using a combination of sonar and vision sensing. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence, </booktitle> <pages> pages 979984, </pages> <address> Menlo Park, July 1994. </address> <publisher> AAAI, AAAI Press/MIT Press. </publisher>
Reference: [56] <author> R. Kuc and M.W. Siegel. </author> <title> Physically based simulation model for acoustic sensor robot navigation. </title> <journal> IEEE Transcation on PAMI, </journal> <year> 1987. </year>
Reference-contexts: This model was adopted based on a series of empirical measurements [108]. The current simulator does not model (1) cones other than the main cone, (2) reflections involving more than one obstacle, (3) cross-sonar interference, and (4) temporal dependencies in sensor noise (cf. <ref> [56] </ref>). Nevertheless, the networks trained with our simulator generate good interpretations, as demonstrated throughout of this paper. 7 (a) (b) (c) Fig. 3. Sensor interpretation: Three sample sonar scans (top row) and local occupancy maps (bottom row), as generated by the neural network.
Reference: [57] <author> B. Kuipers and Y.-T. Byun. </author> <title> A robust qualitative method for spatial learning in unknown environments. </title> <booktitle> In Proceeding of Eighth National Conference on Artificial Intelligence AAAI-88, </booktitle> <address> Menlo Park, Cambridge, 1988. </address> <publisher> AAAI Press / The MIT Press. </publisher>
Reference: [58] <author> B. Kuipers and Y.-T. Byun. </author> <title> A robot exploration and mapping strategy based on a semantic hierarchy of spatial representations. </title> <journal> Journal of Robotics and Autonomous Systems, </journal> <volume> 8:4763, </volume> <year> 1991. </year>
Reference: [59] <author> B.J. Kuipers and T.S. Levitt. </author> <title> Navigation and mapping in large-scale space. </title> <journal> AI Magazine, </journal> <month> Summer </month> <year> 1988. </year>
Reference: [60] <author> J.-C. Latombe. </author> <title> Robot Motion Planning. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, MA, </address> <year> 1991. </year>
Reference-contexts: Once the free-space is partitioned, the robot motion planning problem can be solved by search of a (finite) graph. Similar cell decomposition methods and further references can also be found in Latombe's book on this topic <ref> [60] </ref>, which provides an excellent survey on this topic. Most of these approaches assume that an accurate map of the environment is available prior to robot operation, in which obstacles are represented by polygons or circles.
Reference: [61] <author> J. J. Leonard and H. F. Durrant-Whyte. </author> <title> Directed Sonar Sensing for Mobile Robot Navigation. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, MA, </address> <year> 1992. </year>
Reference: [62] <author> J.J. Leonard, H.F. Durrant-Whyte, and I.J. Cox. </author> <title> Dynamic map building for an autonomous mobile robot. </title> <journal> International Journal of Robotics Research, </journal> <volume> 11(4):8996, </volume> <year> 1992. </year>
Reference-contexts: The vast majority of literature investigates mobile robot mapping and mobile robot localization separately. Interleaving mapping and localization is significantly more difficult than either task in isolation [85]. There are several attempts to integrate localization and mapping. For example, Leonard, Durrant-Whyte, and Cox <ref> [62] </ref> proposed a method that interleaves localization and mapping using Kalman filters [48] for position tracking. In their experiments, however, only the mapping component of their approach is demonstrated, leaving open the question as to whether these methods work well together in practice.
Reference: [63] <author> L.-J. Lin. </author> <title> Self-supervised Learning by Reinforcement and Artificial Neural Networks. </title> <type> PhD thesis, </type> <institution> Carnegie Mellon University, School of Computer Science, </institution> <address> Pittsburgh, PA, </address> <year> 1992. </year>
Reference: [64] <author> L. Ljung. </author> <title> System Identification Theory for the user. </title> <publisher> Prentice-Hall, </publisher> <address> New Jersey 07632, </address> <year> 1987. </year>
Reference-contexts: The reader should note that our approach is highly specialized to learning spatial maps, whereas methods for learning FSAs are targeted at different, more general problems of system identification <ref> [64] </ref>. Thus, while our approach is clearly better suited for learning maps, it lacks the generality of the FSA identification algorithms. 5.6 Contributions The major contribution of the current paper is a working method for integrating metric and topological maps in map learning.
Reference: [65] <author> M. J. Mataric. </author> <title> A distributed model for mobile robot environment-learning and navigation. </title> <type> Master's thesis, </type> <institution> MIT, </institution> <address> Cambridge, MA, </address> <month> January </month> <year> 1990. </year> <note> also available as MIT AI Lab Tech Report AITR-1228. </note>
Reference-contexts: In systematic simulations, this approach has been found to reliably learn large maps of indoor environments, even if sensor data is noisy. However, in these experiments the robot was equipped with a compass, which simplifies the localization problem significantly. A similar approach was proposed by Mataric <ref> [65] </ref>. Her algorithm acquires topological maps of the environment in which nodes correspond to pre-defined landmarks such as straight wall segments. Neighboring topological entities are connected by links. The topological representation is enriched by distance information to help keeping track of the location of the robot.
Reference: [66] <author> R. A. McCallum. </author> <title> Instance-based state identification for reinforcement learning. </title> <editor> In G. Tesauro, D. Touretzky, and T. Leen, editors, </editor> <booktitle> Advances in Neural Information Processing Systems 7, </booktitle> <address> Cambridge, MA, </address> <year> 1995. </year> <note> MIT Press. To appear. </note>
Reference: [67] <author> T.M. Mitchell. </author> <title> Machine Learning. </title> <publisher> McGraw-Hill, </publisher> <year> 1997. </year>
Reference-contexts: Formally, the interpretation of the network's output as conditional probability of a binary event is justified if the network is trained to minimize cross-entropy; we refer the interested reader to page 167 of Mitchell's textbook <ref> [67] </ref>, which demonstrates that networks trained in this way approximate the maximum likelihood hypothesis [30,107]. with their neural network interpretation (bottom row). The darker a value in the circular region around the robot, the larger the occupancy value computed by the network.
Reference: [68] <author> A. W. Moore. </author> <title> The parti-game algorithm for variable resolution reinforcement learning in multidimensional state-spaces. </title> <editor> In J.D. Cowan, G. Tesauro, and J. Alspector, editors, </editor> <booktitle> Advances in Neural Information Processing Systems 6, </booktitle> <pages> pages 711718, </pages> <address> San Mateo, CA, 1994. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: A path planning approach for robots with excessive degrees of freedom that, similar to Kaelbling's approach, decomposes robot planning problems into sets of smaller problems by selecting a small number of random points can be found in [49]. Similar to Dayan and Hinton [26], Moore <ref> [68] </ref> recently proposed an approach for decomposing space into a set of rectangles, called parti-game. In his approach, the resolution of the decomposition is variable. It maximal along the boundary between obstacles and free-space.
Reference: [69] <author> A.W. Moore and C.G. Atkeson. </author> <title> Prioritized sweeping: Reinforcement learning with less data and less time. </title> <booktitle> Machine Learning, </booktitle> <address> 13:103130, </address> <year> 1993. </year>
Reference-contexts: This box is easily maintained in the value iteration update. As a result, value iteration focuses only on a small fraction of the grid, hence it converges much faster. Notice that the bounding box bears some similarity to prioritized sweeping <ref> [69] </ref>. Prioritized sweeping determines the order of updates according the expected benefit of each particular update. Bounding boxes are a cheap implementation of the same idea.
Reference: [70] <author> H. P. Moravec. </author> <title> Sensor fusion in certainty grids for mobile robots. </title> <journal> AI Magazine, </journal> <pages> pages 6174, </pages> <month> Summer </month> <year> 1988. </year>
Reference: [71] <author> H. P. Moravec and A. Elfes. </author> <title> High resolution maps from wide angle sonar. </title> <booktitle> In Proc. IEEE Int. Conf. Robotics and Automation, </booktitle> <pages> pages 116121, </pages> <year> 1985. </year>
Reference: [72] <author> M. C. Mozer and J. R. Bachrach. </author> <title> Discovering the structure of a reactive environment by exploration. </title> <type> Technical Report CU-CS-451-89, </type> <institution> Dept. of Computer Science, University of Colorado, Boulder, </institution> <month> November </month> <year> 1989. </year>
Reference: [73] <author> U. Nehmzow, T. Smithers, and J. Hallam. </author> <title> Location recognition in a mobile robot using self-organizing feature maps. </title> <editor> In G. Schmidt, editor, </editor> <booktitle> Information Processing in Autonomous Mobile Robots. </booktitle> <publisher> springer Verlag, </publisher> <year> 1991. </year>
Reference: [74] <author> H. Neven and G. Schoner. </author> <title> Dynamics parametrically controlled by image correlations organize robot navigation. </title> <journal> Biological Cybernetics, </journal> <note> 1995. to appear. </note>
Reference: [75] <author> N. J. Nilsson. </author> <booktitle> Principles of Artificial Intelligence. </booktitle> <publisher> Springer Publisher, </publisher> <address> Berlin, New York, </address> <year> 1982. </year>
Reference-contexts: For all explored grid cells hx; yi do: V x;y min =1;0;1 V x+~;y+ + Prob (occ x+~;y+ ) Value iteration updates the value of all explored grid cells by the value of their best neighbors, plus the costs of moving to this neighbor (just like A* <ref> [75] </ref> or Dijkstra's famous shortest path algorithm [6]). Cost is here equivalent to the probability Prob (occ x;y ) that a grid cell hx; yi is occupied. The update rule is iterated. <p> First, paths are planned using the abstract, topological map. Shortest paths in the topological maps can easily be found using one of the standard graph search algorithms, such as Dijkstra's or Floyd/Warshal's shortest path algorithm [6], A* <ref> [75] </ref>, or dynamic programming. In our imple mentation, we used the value iteration approach described in Section 2.5. (ii) Triplet planning. To translate topological plans into motion commands, a so-called triplet planner generates (metric) paths for each set of three adjacent topological regions in the topological plan.
Reference: [76] <author> I. Nourbakhsh, R. Powers, and S. Birchfield. </author> <title> DERVISH an office-navigating robot. </title> <journal> AI Magazine, </journal> <volume> 16(2):5360, </volume> <month> Summer </month> <year> 1995. </year>
Reference: [77] <author> C. O'Dunlaing and C.K. Yap. </author> <title> A retraction method for planning the motion of a disk. Journals of Algorithms, </title> <address> 6:104111, </address> <year> 1982. </year> <month> 57 </month>
Reference: [78] <author> C.W. Omlin and Giles. C.L. </author> <title> Constructing deterministic finite-state automata in recurrent neural networks. </title> <journal> Journal of the ACM, </journal> <volume> 45(6):937, </volume> <year> 1996. </year>
Reference: [79] <author> J. Pearl. </author> <title> Probabilistic reasoning in intelligent systems: networks of plausible inference. </title> <publisher> Morgan Kaufmann Publishers, </publisher> <address> San Mateo, CA, </address> <year> 1988. </year>
Reference-contexts: This probabilistic update rule, which is sound given our conditional independence assumption, is frequently used for the accumulation of sensor evidence [70,79]. It differs from Bayes networks <ref> [79] </ref> in that albeit the fact that occupancy causally determines sensor readings fs (t) g t=1;:::;T and not the other way round, the networks 10 represent the inverse conditional probability: Prob (occ x;y js (t) ).
Reference: [80] <author> L. Peters, H. Surmann, S. Guo, K. Beck, and J. </author> <title> Huser. </title> <journal> Moria fuzzy logik gesteuertes, autonomes fahrzeug. </journal> <year> 1994. </year>
Reference: [81] <author> D. Pierce and B. Kuipers. </author> <title> Learning to explore and build maps. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence, </booktitle> <pages> pages 12641271, </pages> <address> Menlo Park, July 1994. </address> <publisher> AAAI, AAAI Press/MIT Press. </publisher>
Reference: [82] <author> D. A. Pomerleau. </author> <title> Knowledge-based training of artificial neural networks for autonomous robot driving. </title> <editor> In J. H. Connell and S. Mahadevan, editors, </editor> <title> Robot Learning, </title> <booktitle> pages 1943. </booktitle> <publisher> Kluwer Academic Publishers, </publisher> <year> 1993. </year>
Reference-contexts: Even though time was short, the neural network could quickly be retrained to accommodate this new situation. Others, such as Pomerleau <ref> [82] </ref>, also report a significant decrease in development time of integrated robotic systems through the use of machine learning algorithms. 8 (ii) Multiple sensor readings are interpreted simultaneously. To the best of our knowledge, all current approaches interpret each sensor reading individually, one at a time (see, e.g., [8,31,32,70]).
Reference: [83] <author> M.L. Puterman. </author> <title> Markov Decision Processes. </title> <publisher> John Wiley & Sons, </publisher> <address> New York, </address> <year> 1994. </year>
Reference: [84] <author> J.H. Reif. </author> <title> Complexity of the mover's problem and generalizations. </title> <booktitle> In Proceesings of the 20th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 421427, </pages> <year> 1979. </year>
Reference: [85] <author> W.D. Rencken. </author> <title> Concurrent localisation and map building for mobile robots using ultrasonic sensors. </title> <booktitle> In Proceedings of the IEEE/RSJ International Conference on Intelligent Robots and Systems, </booktitle> <pages> pages 21292197, </pages> <address> Yokohama, Japan, </address> <month> July </month> <year> 1993. </year>
Reference-contexts: The vast majority of literature investigates mobile robot mapping and mobile robot localization separately. Interleaving mapping and localization is significantly more difficult than either task in isolation <ref> [85] </ref>. There are several attempts to integrate localization and mapping. For example, Leonard, Durrant-Whyte, and Cox [62] proposed a method that interleaves localization and mapping using Kalman filters [48] for position tracking.
Reference: [86] <author> R. L. Rivest and R. E. Schapire. </author> <title> Diversity-based inference of finite automata. </title> <booktitle> In Proceedings of Foundations of Computer Science, </booktitle> <year> 1987. </year>
Reference: [87] <author> R. L. Rivest and R. E. Schapire. </author> <title> A new approach to unsupervised learning in deterministic environments. </title> <editor> In P. Langley, editor, </editor> <booktitle> Proceedings of the Fourth International Workshop on Machine Learning, </booktitle> <pages> pages 364375, </pages> <address> Irvine, California, </address> <month> June </month> <year> 1987. </year>
Reference: [88] <author> D. E. Rumelhart, G. E. Hinton, and R. J. Williams. </author> <title> Learning internal representations by error propagation. </title> <editor> In D. E. Rumelhart and J. L. McClelland, editors, </editor> <booktitle> Parallel Distributed Processing. </booktitle> <volume> Vol. I + II. </volume> <publisher> MIT Press, </publisher> <year> 1986. </year>
Reference-contexts: Examples of metric maps are shown in various places in this paper. 2.1 Sensor Interpretation To build metric maps, sensor reading must be translated into occupancy values occ x;y for each grid cell hx; yi. The idea here is to train an artificial neural network <ref> [88] </ref> using Back-Propagation to map sonar measurements to occupancy values [99].
Reference: [89] <author> S. Russell and P. Norvig. </author> <title> Artificial Intelligence: A Modern Approach. </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1995. </year>
Reference-contexts: For every abstract plan generated using the topological map, there exists a corresponding plan in the grid-based map (in other words, the abstraction has the downward solution property <ref> [89] </ref>). Conversely, every path that can be found in the grid-based map has an abstract representation which is a admissible plan in the topological map (upward solution property). <p> To the best of our knowledge, this use of Voronoi diagrams is new, yet it has an obvious advantage of increased efficiency. 5.4 Abstraction and Dynamic Programming As mentioned above, the topological maps described in this paper are a form of abstraction <ref> [89] </ref> and as such relate to the rich literature on abstraction in AI. The most closely related work on abstraction can be found in the literature on dynamic programming [4,44,83] and reinforcement learning [2,46,97].
Reference: [90] <author> B. Schiele and J. Crowley. </author> <title> A comparison of position estimation techniques using occupancy grids. </title> <booktitle> In Proceedings of the 1994 IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 16281634, </pages> <address> San Diego, CA, </address> <month> May </month> <year> 1994. </year>
Reference: [91] <author> F. E. Schneider. </author> <title> Sensorinterpretation und Kartenerstellung fur mobile Roboter. </title> <type> Master's thesis, </type> <institution> Dept. of Computer Science III, University of Bonn, </institution> <address> 53117 Bonn, </address> <month> December </month> <year> 1994. </year> <note> In German. 58 </note>
Reference-contexts: As a consequence, once a door has been recognized as being closed it will be assumed to be closed until the robot receives evidence to the contrary. Modeling dynamic environments using metric representations is largely an open research area. Schneider, in his M.Sc. thesis <ref> [91] </ref>, has extended our approach to detect certain types of regularities. His approach analyzed the variance and the auto-correlation of interpretations over time, enabling it to reliably identify and label regions in the map whose occupancy changed regularly over time. <p> Dynamic environments. While the current approach robustly handles dynamics in the environment (such as people, doors), it does not model them. It is an 50 open question as to how to incorporate models of moving objects into a grid--base representation. A recent study <ref> [91] </ref> has demonstrated that semi-dynamic obstacles (these are obstacles such as doors, whose presence might change but which are tight to a certain location) can be modeled by a variance analysis of grid-cell values.
Reference: [92] <author> J. T. Schwartz, M. Scharir, and J. Hopcroft. </author> <title> Planning, Geometry and Complexity of Robot Motion. </title> <publisher> Ablex Publishing Corporation, </publisher> <address> Norwood, NJ, </address> <year> 1987. </year>
Reference-contexts: There is a huge body of literature on cell decomposition for robot motion planning. For example, Schwartz and Sharir published a series of five seminal papers in which the motion planning problem for various simple objects (such as ladders and disks) were solved in two- and three-dimensional spaces (see <ref> [92] </ref>). In several of these papers, the free-space is divided into a finite number of coherent regions, similar to the approach proposed in this paper. Once the free-space is partitioned, the robot motion planning problem can be solved by search of a (finite) graph.
Reference: [93] <author> D. Shepard. </author> <title> A two-dimensional interpolation function for irregularly spaced data. </title> <booktitle> In 23rd National Conference ACM, </booktitle> <pages> pages 517523, </pages> <year> 1968. </year>
Reference-contexts: In other words, the coordinate of a global grid cell is projected into the local robot's coordinates, and the local occupancy value is obtained by interpolation. The interpolating function is similar in spirit to Shepard's interpolation <ref> [93] </ref>. It has several interesting properties, most notably it is smooth (continuous) and almost everywhere differentiable in hx fl robot ; y fl robot ; fl robot i.
Reference: [94] <author> R. Simmons. </author> <title> The 1994 AAAI robot competition and exhibition. </title> <journal> AI Magazine, </journal> <volume> 16(1), </volume> <month> Spring </month> <year> 1995. </year>
Reference-contexts: For example, the walls in the competition ring of the 1994 AAAI robot competition <ref> [94] </ref> were much smoother than the walls in the building in which the software was originally developed. Even though time was short, the neural network could quickly be retrained to accommodate this new situation. <p> Grid-based map, constructed at the 1994 AAAI autonomous mobile robot competition with the techniques described here. robot competition is shown in Figure 9. This map contains an open area, which was intentionally created by the competition organizers to test the robot's ability to navigate in large open spaces <ref> [94] </ref>. In [103], occupancy maps are constructed using stereo vision for depth estimation [37,38]. As shown there, sonar and stereo information have somewhat orthogonal sensor characteristics &lt;and thus can complement each other.
Reference: [95] <author> R. Simmons and S. Koenig. </author> <title> Probabilistic robot navigation in partially observable environments. </title> <booktitle> In Proceedings of IJCAI-95, </booktitle> <pages> pages 10801087, </pages> <address> Montreal, Canada, </address> <month> August </month> <year> 1995. </year> <title> IJCAI, </title> <publisher> Inc. </publisher>
Reference-contexts: In fact, sonar sensors can be understood as landmark detectors that indirectlythrough the grid-based maphelp determine the actual position in the topological map (cf. <ref> [95] </ref>). One of the key empirical results of this research concerns the cost-benefit analysis of topological representations. While grid-based maps yield more accurate control, planning with more abstract topological maps is several orders of magnitude more efficient.
Reference: [96] <author> S. P. Singh. </author> <title> Transfer of learning by composing solutions for elemental sequential tasks. </title> <journal> Machine Learning, </journal> <volume> 8, </volume> <year> 1992. </year>
Reference: [97] <author> R. S. Sutton, </author> <title> editor. Reinforcement Learning. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, MA, </address> <year> 1992. </year>
Reference: [98] <author> G. J. Tesauro. </author> <title> Practical issues in temporal difference learning. </title> <journal> Machine Learning, </journal> <volume> 8, </volume> <year> 1992. </year>
Reference: [99] <author> S. Thrun. </author> <title> Exploration and model building in mobile robot domains. </title> <editor> In E. Ruspini, editor, </editor> <booktitle> Proceedings of the ICNN-93, </booktitle> <pages> pages 175180, </pages> <address> San Francisco, CA, </address> <month> March </month> <year> 1993. </year> <institution> IEEE Neural Network Council. </institution>
Reference-contexts: The idea here is to train an artificial neural network [88] using Back-Propagation to map sonar measurements to occupancy values <ref> [99] </ref>. As shown in Figure 2, the input to the network consists of two values that encode hx; yi in polar coordinates relative to the robot (angle to the first of the four sensors, and distance), and the four sensor readings closest to hx; yi. <p> As shown there, sonar and stereo information have somewhat orthogonal sensor characteristics &lt;and thus can complement each other. Position control based on odometry and map correlation alone (items 1 and 2 above) works well if the robot travels through mapped terrain <ref> [99] </ref>, but fails to localize the robot if it explores and maps unknown terrain. The third mechanism, which arguably relies on a restrictive assumption concerning the nature of indoor environments, has proven extremely valuable when autonomously exploring and mapping large-scale indoor environments. <p> This is because if the cost function increases, previously adjusted values V might become too small. While value iteration quickly decreases values that are too large, increasing values can be arbitrarily slow <ref> [99] </ref>. Consequently, the basic value iteration algorithm requires that the value function be initialized completely (Step i) 22 whenever the mapand thus the cost functionis updated. This is very inefficient, since the map is updated almost constantly. <p> Multi-agent exploration. Since value iteration generates values for all grid-cells, it can easily be used for collaborative multi-agent exploration. Point-to-point navigation. By changing the initialization of V (Step i), the same approach is used for point-to-point navigation <ref> [99] </ref>. In grid maps of the size 30 by 30 meters, optimized value iteration, done from scratch, requires approximately 2 to 10 seconds on a SUN Sparc station. <p> Our approach differs from previous ones in that neural networks are used to learn the mapping from sensors to occupancy values; as a result, sensor readings are interpreted in the context of their neighbors, which increases the accuracy of the resulting maps <ref> [99] </ref>. Occupancy grids, however, are not the only metric representation. Chatila/Laumond [15] proposed to represent objects by polyhedra in a global coordinate frame. Cox [23] proposed to constructs probabilistic trees to represent different, alternative models of the environment.
Reference: [100] <author> S. Thrun. </author> <title> A bayesian approach to landmark discovery and active perception for mobile robot navigation. </title> <type> Technical Report CMU-CS-96-122, </type> <institution> Carnegie Mellon University, School of Computer Science, </institution> <address> Pittsburgh, PA 15213, </address> <month> April </month> <year> 1996. </year>
Reference: [101] <author> S. Thrun. </author> <title> To know or not to know: On the utility of models in mobile robotics. </title> <journal> AI Magazine, </journal> <volume> 18(1):4754, </volume> <year> 1997. </year>
Reference-contexts: Chatila/Laumond [15] proposed to represent objects by polyhedra in a global coordinate frame. Cox [23] proposed to constructs probabilistic trees to represent different, alternative models of the environment. In his work, Kalman filters and Bayesian methods are used for handling uncertainty. Jeeves <ref> [101] </ref>, an award-winning robot at the 1996 AAAI mobile robot competition [54], constructs geometric maps incrementally by concatenating wall segments detected in temporal sequences of sonar measurements.
Reference: [102] <author> S. Thrun and A. Bucken. </author> <title> Integrating grid-based and topological maps for mobile robot navigation. </title> <booktitle> In Proceedings of the Thirteenth National Conference on Artificial Intelligence, </booktitle> <address> Menlo Park, </address> <month> August </month> <year> 1996. </year> <booktitle> AAAI, </booktitle> <publisher> AAAI Press/MIT Press. </publisher>
Reference: [103] <author> S. Thrun, A. Bucken, W. Burgard, D. Fox, T. Frohlinghaus, D. Hennig, T. Hofmann, M. Krell, and T. Schimdt. </author> <title> Map learning and high-speed navigation in RHINO. </title> <editor> In D. Kortenkamp, R.P. Bonasso, and R. Murphy, editors, </editor> <title> AI-based Mobile Robots: Case studies of successful robot systems. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <note> to appear. </note>
Reference-contexts: This map contains an open area, which was intentionally created by the competition organizers to test the robot's ability to navigate in large open spaces [94]. In <ref> [103] </ref>, occupancy maps are constructed using stereo vision for depth estimation [37,38]. As shown there, sonar and stereo information have somewhat orthogonal sensor characteristics &lt;and thus can complement each other. <p> The Bayesian approach to sensor integration described in this paper is flexible enough to accommodate other types of sensor information as well. In fact, in our initial experiments we found that the grid-based maps were more accurate when additional sensors were incorporated <ref> [103] </ref>. Dynamic environments. While the current approach robustly handles dynamics in the environment (such as people, doors), it does not model them. It is an 50 open question as to how to incorporate models of moving objects into a grid--base representation.
Reference: [104] <author> S. Thrun and A. Schwartz. </author> <title> Finding structure in reinforcement learning. </title> <editor> In G. Tesauro, D. Touretzky, and T. Leen, editors, </editor> <booktitle> Advances in Neural Information Processing Systems 7, </booktitle> <address> Cambridge, MA, 1995. </address> <publisher> MIT Press. </publisher>
Reference-contexts: The parti-game algorithm does not take the actual path length into account during motion planning. A method which attempts to find an optimal cell decomposition during problem solving is found in <ref> [104] </ref>. The SKILLS approach identifies regions in the state space (skills) in which the same policy can be used across different problems (tasks). This work makes a minimum of assumptions on the nature of the state space. <p> The decomposition method proposed in this paper is specifically tailored towards mobile robot navigation, by placing the boundaries between adjacent topological regions at the narrow parts of the original state space. Neither of the existing approaches does this. With the exception of the SKILLS approach <ref> [104] </ref>, none of the above-mentioned approaches takes optimality into account when selecting the boundaries between different regions.
Reference: [105] <author> M. C. Torrance. </author> <title> Natural communication with robots. </title> <type> Master's thesis, </type> <institution> MIT Department of Electrical Engineering and Computer Science, </institution> <address> Cambridge, MA, </address> <month> January </month> <year> 1994. </year> <month> 59 </month>
Reference: [106] <author> S. Udupa. </author> <title> Collision Detection and Avoidance in Computer Controlled Manipulators. </title> <type> PhD thesis, </type> <institution> Department of Mechanical Engineering, California Institute of Technology, </institution> <year> 1977. </year>
Reference: [107] <author> V. Vapnik. </author> <title> Estimations of dependences based on statistical data. </title> <publisher> Springer Publisher, </publisher> <year> 1982. </year>
Reference-contexts: Technically speaking, this single value is a sufficient statistic for s (1) ; s (2) ; : : : ; s (t) <ref> [107] </ref>. the actual map is two-dimensional: The higher a point, the more likely it is to be occupied. This map was using a simulator in order to investigate map building in the absence of odometric errorsall other maps shown in this paper were constructed using a real robot.
Reference: [108] <author> P. Wallossek. </author> <title> Realistische Simulation eines Mobilen Roboters in Echtzeit. </title> <type> Master's thesis, </type> <institution> Dept. of Computer Science III, University of Bonn, </institution> <address> 53117 Bonn, </address> <month> July </month> <year> 1995. </year> <note> In German. </note>
Reference-contexts: For the area covered correct distance is returned, and (3) a random large value is returned. The probability of these events depends on the angle between the ray and the surface normal of the obstacle. This model was adopted based on a series of empirical measurements <ref> [108] </ref>. The current simulator does not model (1) cones other than the main cone, (2) reflections involving more than one obstacle, (3) cross-sonar interference, and (4) temporal dependencies in sensor noise (cf. [56]).
Reference: [109] <author> G. Wei, C. Wetzler, and E. von Puttkamer. </author> <title> Keeping track of position and orientation of moving indoor systems by correlation of range-finder scans. </title> <booktitle> In Proceedings of the International Conference on Intelligent Robots and Systems, </booktitle> <pages> pages 595601, </pages> <year> 1994. </year>
Reference: [110] <author> S. Whitehead, J. Karlsson, and J. Tenenberg. </author> <title> Learning multiple goal behavior via task decomposition and dynamic policy merging. </title> <editor> In J. H. Connell and S. Mahadevan, editors, </editor> <booktitle> Robot Learning, </booktitle> <pages> pages 4578. </pages> <publisher> Kluwer Academic Publishers, </publisher> <year> 1993. </year>
Reference: [111] <author> E. Wolfart, R.B. Fisher, and A. Walker. </author> <title> Position refinement for a navigating robot using motion information based on honey bee strategies. </title> <booktitle> In Proceesings of the International Symposium on Robotic Systems (SIR 95), </booktitle> <address> Pisa, Italy, </address> <year> 1995. </year> <note> also appeared as DAI Research Paper No 751, </note> <institution> University of Edinburgh, Department of Artificial Intelligence, U.K. </institution>
Reference: [112] <author> B. Yamauchi and R. Beer. </author> <title> Spatial learning for navigation in dynamic environments. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics Part B: Cybernetics, Special Issue on Learning Autonomous Robots, </journal> <note> 1996. also located at http://www.aic.nrl.navy.mil/~yamauchi/. </note>
Reference-contexts: Moreover, since the recognition of landmarks in this approach involve robot motion, the approach might have severe difficulties in recognizing previously visited locations when approaching them from different directions (e.g., T-junctions). Another approach was proposed by Yamauchi and Beer's <ref> [112] </ref>. Their approach adds places into a topological graph whenever the robot's distance to previously defined places exceeds a certain threshold. Metric maps are used for localizing the robot (see discussion below). <p> In their experiments, however, only the mapping component of their approach is demonstrated, leaving open the question as to whether these methods work well together in practice. Yamauchi and Beer <ref> [112] </ref> also interleave both localization and mapping. In their approach, the robot can only be localized at its starting location, forcing the robot to regularly return to its initial location. The approaches in [57,58,65] also interleave mapping and localization.
Reference: [113] <author> B. Yamauchi and P. Langley. </author> <title> Place recognition in dynamic environments. </title> <journal> Journal of Robotic Systems, Special Issue on Mobile Robots, </journal> <note> (to appear). also located at http://www.aic.nrl.navy.mil/~yamauchi/. </note>
Reference-contexts: It differs from previous approaches in that the correspondence function is differentiable in the odometric error, which has two primary advantages: (1) The odometric error can be estimated with arbitrary (sub-grid cell) resolution. (2) Gradient descent is considerably faster. For example, Yamauchi and Langley <ref> [113] </ref> report that map matching using discrete hill climbing requires about 20 seconds (on a DECstation 3100). Our approach works in real-time (in the order of 0.3 sec on a 100Mhz Pentium computer), so that odometric errors can be corrected while the robot is in motion.
Reference: [114] <author> W. Zhang and T.G. Dietterich. </author> <title> High-performance job-shop scheduling with a time-delay td(lambda) network. </title> <editor> In D. Touretzky, M. Mozer, and M.E. Hasselmo, editors, </editor> <booktitle> Advances in Neural Information Processing Systems 8, </booktitle> <pages> pages 10241030, </pages> <address> Cambridge, MA, 1996. </address> <publisher> MIT Press. </publisher>
Reference: [115] <author> U.R. Zimmer. </author> <title> Robust world-modeling and navigation in a real world. </title> <journal> Neurocomputing, </journal> <volume> 13(24), </volume> <year> 1996. </year> <month> 60 </month>
References-found: 115

