URL: http://www.cs.ucla.edu/~nk/czdemo/greco/xx.ps
Refering-URL: http://www.cs.ucla.edu/~nk/czdemo/greco/
Root-URL: http://www.cs.ucla.edu
Email: greco@si:deis:unical:it zaniolo@cs:ucla:edu  
Title: Greedy Algorithms in Datalog with Choice and Negation  
Author: Sergio Greco Carlo Zaniolo 
Address: Los Angeles 87030 Rende; Italy LosAngeles; CA 90024  
Affiliation: Dip: Elettr: Informatica Sist: Computer Science Dept: Universita della Calabria Univ: of California at  
Abstract: In the design of algorithms, the greedy paradigm provides a powerful tool for solving efficiently classical computational problems, within the framework of procedural languages. However, expressing these algorithms within the declarative framework of logic-based languages has proved to be a difficult research challenge. In this paper, we extend the framework of Datalog-like languages to obtain simple declarative formulations for such problems, and propose effective implementation techniques to ensure computational complexities comparable to those of procedural formulations. These advances are achieved through the use of the choice construct, that has semantics reducible to that of programs with negation under stable model semantics. Then we extend the fixpoint-based semantics of choice programs with preference annotations to guide search strategies and simple logic-based formulations of classical greedy algorithms.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Abiteboul S., R. Hull, V. Vianu. </author> <title> Foundations of Databases. </title> <publisher> Addison-Wesley. </publisher> <year> 1994. </year>
Reference: [2] <author> Abiteboul S. and V. Vianu. </author> <title> Datalog Extensions for Databases Queries and Updates. </title> <journal> In Journal of Computer and System Science, </journal> <volume> 43, </volume> <pages> pages 62-124, </pages> <year> 1991. </year>
Reference: [3] <author> Aho A.V., J.E. Hopcropt J.E., and J.D. </author> <title> Ullmann. The Design and analysis of Computer Algorithms. </title> <publisher> Addison-Wesley, </publisher> <year> 1974. </year>
Reference: [4] <author> Chandra A., and D. Harel, </author> <title> Structure and Complexity of Relational Queries, </title> <journal> Journal of Computer and System Sciences 25, </journal> <volume> 1, </volume> <year> 1982, </year> <pages> pp. 99-128. </pages>
Reference: [5] <author> Chomicki J., </author> <title> Temporal deductive databases, in Temporal Databases: Theory, Design and Implementation, </title> <editor> A. Tansel et al. eds., Benjamin/Cummings, </editor> <year> 1993. </year>
Reference: [6] <author> Ganguly S., S. Greco, and C. Zaniolo. </author> <title> Minimum and maximum predicates in logic programming. </title> <booktitle> In Proceedings of the Tenth ACM Symposium on Principles of Database Systems, </booktitle> <pages> pages 154-163, </pages> <year> 1991. </year>
Reference: [7] <author> Ganguly S., S. Greco, and C. Zaniolo. </author> <title> Extrema Predicates in Deductive Databases. </title> <journal> Journal of Computer and System Science, </journal> <year> 1995. </year>
Reference: [8] <author> Greco S., C. Zaniolo, and S. Ganguly. </author> <title> Greedy by Choice. </title> <booktitle> In Proceedings of the 11th ACM Symposium on Principles of Database Systems, </booktitle> <year> 1992. </year>
Reference: [9] <author> Greco S., D. Sacca, and C. Zaniolo, </author> <title> Dynamic Programming in Datalog with Aggregates. </title> <booktitle> In Proc. of the International Logic programming Symposium Vancouver, </booktitle> <year> 1993. </year>
Reference: [10] <author> Greco S., D. Sacca, and C. Zaniolo, </author> <title> DATALOG Queries with Stratified Negation and Choice: from P to D P In Proc. </title> <booktitle> of the Fifth Int. Conf. on Database Theory, </booktitle> <year> 1995, </year> <pages> pp. 82-96. </pages>
Reference: [11] <author> Greco S., and C. Zaniolo, </author> <title> Greedy Fixpoint Algorithms for Logic Programs with Negation and Extrema. </title> <type> TEchnical Report, </type> <year> 1997. </year>
Reference-contexts: Thus, the approach provides a programmer with declarative tools to express greedy algorithms, frees him/her from many implementation details, yet guarantees good performance. For space limitation the proofs of our result are omitted and they can be found in the full version of the paper <ref> [11] </ref>. 2 Basic Notions In this section, we summarize the basic notions of Horn Clauses logic, and its extensions to allow negative goals.
Reference: [12] <author> Gelfond M. and V. Lifschitz. </author> <title> The stable model semantics of logic programming. </title> <booktitle> In Proceedings of the Fifth Intern. Conference on Logic Programming, </booktitle> <pages> pages 1070-1080, </pages> <year> 1988. </year>
Reference-contexts: Unfortunately, the computational problems remain largely unsolved; while various approaches have been fl Work partially supported by ECUS033 and NSF Grant IRI-9314905 1 proposed to more effective computations of well-founded models and stable models <ref> [26, 12] </ref>, these fall well short of matching the efficiency of classical procedural solutions, such as, say, algorithms that find shortest paths in graphs. In general, it is known that determining whether a program has a stable model is NP-complete [19].
Reference: [13] <author> Giannotti F., D. Pedreschi, D. Sacca, and C. Zaniolo. </author> <title> Nondeterminism in deductive databases. </title> <booktitle> In Proc. 2nd Int. Conf. on Deductive and Object-Oriented Databases, </booktitle> <year> 1991. </year>
Reference: [14] <author> Giannotti F., D. Pedreschi, C. Zaniolo, </author> <title> Semantics and Expressive Power of Non-Deterministic Constructs in Deductive, </title> <type> Technical Report C96-04, </type> <institution> Istituto CNUCE, Pisa,1996, </institution> <note> submitted for publication. </note>
Reference: [15] <author> P. Helmann, B.M.E. Moret, and H.D. Shapiro. </author> <title> An Exact Characterization of Greedy Structures. </title> <journal> Siam J. Discrete Math., Vo. </journal> <volume> 6, No. 2, </volume> <pages> pages 274-283, </pages> <year> 1993. </year>
Reference-contexts: This entails simple declarative formulations and nearly optimal executions for large classes of problems, including those solvable using greedy algorithms. Greedy algorithms <ref> [16, 15] </ref> are those that solve a class of optimization problems, using a control structure of a single loop, where, at each iteration step some element judged the `best' at that stage is chosen and it is added to the solution.
Reference: [16] <author> Korte B. and L. Lovasz. </author> <title> Greedoids a structural framework for the greedy algorithm. </title> <editor> In W. R. Pulleyblank, editor, </editor> <booktitle> Progress in Combinatorial Optimization, </booktitle> <pages> pages 221-243. </pages> <publisher> Academic Press, </publisher> <year> 1984. </year>
Reference-contexts: This entails simple declarative formulations and nearly optimal executions for large classes of problems, including those solvable using greedy algorithms. Greedy algorithms <ref> [16, 15] </ref> are those that solve a class of optimization problems, using a control structure of a single loop, where, at each iteration step some element judged the `best' at that stage is chosen and it is added to the solution.
Reference: [17] <author> Krishnamurthy R. and S. Naqvi. </author> <title> Non-deterministic choice in Datalog. </title> <booktitle> In Proceedings of the 3rd International Conference on Data and Knowledge Bases, </booktitle> <year> 1988. </year>
Reference: [18] <author> Ludasher W., W. May, and G. Lausen. </author> <title> Nested Transactions in a Logical Language for Active Rules. </title> <booktitle> Proc. Int. Workshop on Logic in Databases, </booktitle> <address> San Miniato, </address> <year> 1996, </year> <pages> pages 196-222. </pages>
Reference: [19] <author> Marek W., M. Truszczynski. </author> <title> Autoepistemic Logic. </title> <journal> Journal of ACM, </journal> <volume> 38(3) </volume> <pages> 588-619, </pages> <year> 1991. </year>
Reference-contexts: In general, it is known that determining whether a program has a stable model is NP-complete <ref> [19] </ref>. Therefore, in this paper we propose a different approach: while, at the semantic level, we strictly adhere to the formal declarative semantics of logic programs with negation, we also allow the use of extended non-monotonic constructs with first order semantics to facilitate the task of programmers and compilers alike.
Reference: [20] <author> Marek W., and M. Truszczynski, </author> <title> Nonmonotonic Logic|context dependent reasoning Springer-Verlag, </title> <year> 1993. </year>
Reference: [21] <author> Papadimitriou C., K. Steiglitz, </author> <title> Combinatorial Optimization: Algorithms and Complexity. </title> <address> En-glewood Cliff, N.J., </address> <publisher> Prentice Hall. </publisher>
Reference: [22] <author> Przymusinski T., </author> <title> On the declarative and procedural semantics of stratified deductive databases. </title> <editor> In J. Minker, editor, </editor> <booktitle> Foundations of Deductive Databases and Logic Programming, </booktitle> <pages> pages 193-216. </pages> <address> Morgan-Kaufman, Los Altos, CA, </address> <year> 1988. </year>
Reference: [23] <author> Przymusinska A. and T. Przymusinski. </author> <title> Weakly Perfect Model Semantics for Logic Programs. </title> <booktitle> In Proceedings of the Fifth Intern. Conference on Logic Programming, </booktitle> <pages> pages 1106-1122, </pages> <year> 1988. </year> <month> 3 </month>
Reference: [24] <author> Sacca D. and C. Zaniolo. </author> <title> Stable models and non-determinism in logic programs with negation. </title> <booktitle> Proceedings of the Ninth ACM Symposium on Principles of Database Systems, </booktitle> <pages> pages 205-217, </pages> <year> 1990. </year>
Reference: [25] <author> Ullmann J. F., </author> <booktitle> Principles of Data and Knowledge-Base Systems. </booktitle> <volume> Vol 1 & 2, </volume> <publisher> Computer Science Press, </publisher> <address> New York, </address> <year> 1989. </year>
Reference: [26] <author> Van Gelder A., K.A. Ross, and J.S. Schlipf. </author> <title> The well-founded semantics for general logic programs. </title> <journal> Journal of ACM, </journal> <volume> 38(3) </volume> <pages> 620-650, </pages> <year> 1991. </year>
Reference-contexts: Unfortunately, the computational problems remain largely unsolved; while various approaches have been fl Work partially supported by ECUS033 and NSF Grant IRI-9314905 1 proposed to more effective computations of well-founded models and stable models <ref> [26, 12] </ref>, these fall well short of matching the efficiency of classical procedural solutions, such as, say, algorithms that find shortest paths in graphs. In general, it is known that determining whether a program has a stable model is NP-complete [19].
Reference: [27] <author> Zaniolo C., </author> <title> Intelligent Databases: Old Challenges and New Opportunities, </title> <journal> Journal of Intelligent Information Systems, </journal> <volume> 1, </volume> <pages> 271-292, </pages> <publisher> Kluwer Academic, </publisher> <year> 1992. </year>
Reference: [28] <author> Zaniolo, C., N. Arni, K. Ong, </author> <title> Negation and Aggregates in Recursive Rules: the LDL++ Approach, </title> <booktitle> Proc. 3rd Int. Conf. on Deductive and O-O DBs, </booktitle> <address> DOOD-93, Phoenix, AZ, </address> <month> Dec 6-8, </month> <year> 1993. </year>
Reference: [29] <author> Zaniolo C., S. Ceri, C. Faloutsos, V.S. Subrahmanian and R. Zicari, </author> <title> Advanced Database Systems, </title> <publisher> Morgan Kaufmann Publishers, </publisher> <year> 1997. </year> <month> 4 </month>
References-found: 29

