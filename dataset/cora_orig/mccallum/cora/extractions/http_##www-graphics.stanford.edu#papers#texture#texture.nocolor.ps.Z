URL: http://www-graphics.stanford.edu/papers/texture/texture.nocolor.ps.Z
Refering-URL: http://www-graphics.stanford.edu/papers/texture/
Root-URL: http://www.cs.stanford.edu
Title: Textures and Radiosity: Controlling Emission and Reflection with Texture Maps  
Author: Reid Gershbein Peter Schrder Pat Hanrahan 
Keyword: CR Categories and Subject Descriptors: I.3.7 [Computer Graphics]: Three-Dimensional Graphics and Realism Radios-ity; G.1.9 [Numerical Analysis]: Integral Equations Fredholm equations; J.2 [Physical Sciences and Engineering]: Engineering. Additional Key Words and Phrases: global illumination, wavelets, hierarchical radiosity, texture mapping.  
Affiliation: Department of Computer Science Princeton University  
Abstract: In this paper we discuss the efficient and accurate incorporation of texture maps into a hierarchical Galerkin radiosity algorithm. This extension of the standard algorithm allows the use of textures to describe complex reflectance and emittance patterns over surfaces, increasing the realism and complexity of radiosity images. Previous approaches to the inclusion of textures have either averaged the texture to yield a single color for the radiosity computations, or exhaustively generated detail elements|possibly as many as one per texture pixel. The former does not capture important lighting effects due to textures, while the latter is too expensive computationally to be practical. To handle texture maps requires a detailed analysis of the underlying operator equation. In particular we decompose the radiosity equation into two steps: (i) the computation of irradiance on a surface from the radiosities on other surfaces, and (ii) the application of the reflectance operator to compute radiosities from irradi-ances. We then describe an algorithm that maintains hierarchical representations of both radiosities and textures. The numerical error involved in using these approximations is quantifiable and a time/error tradeoff is possible. The resulting algorithm allows texture maps to be used in radiosity computations with very little overhead. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Alpert, B., Beylkin, G., Coifman, R., and Rokhlin, V. </author> <title> Wavelet-like Bases for the Fast Solution of Second-kind Integral Equations. </title> <journal> SIAM Journal on Scientific Computing 14, </journal> <month> 1 (Jan </month> <year> 1993). </year>
Reference-contexts: These are the multi-wavelets introduced by Alpert <ref> [1] </ref>, which are based on Legendre polynomials up to some order (we used order 0 through 3).
Reference: [2] <author> Beylkin, G., Coifman, R., and Rokhlin, V. </author> <title> Fast Wavelet Transforms and Numerical Algorithms I. </title> <journal> Communications on Pure and Applied Mathematics 44 (1991), </journal> <pages> 141-183. </pages>
Reference-contexts: It is dense since G may potentially couple any part of the environment to any other part. It is smooth because G varies slowly as a function of position on the source and receiver. In the parlance of integral equations we say that G has a smooth kernel <ref> [2] </ref>. 2. Compute radiosities from irradiances and reflectivities. Define the scattering operator S S (f )(x) = (x)f (x) yielding B r (x) = S (E)(x). Note that S is completely de termined by surface properties and as such does not depend on the environment. <p> Sparse operators such as S are easy to represent efficiently. In contrast, dense operators such as G are normally difficult to represent efficiently. However, methods exist to efficiently approximate dense, smooth integral operators <ref> [2] </ref>. In particular, hierarchical or wavelet radiosity algorithms provide an efficient method for representing G [12, 11, 16]. They work because the smoothness of G allows it to be approximated efficiently using a hierarchy of levels of detail.
Reference: [3] <author> Blinn, J. F., and Newell, M. E. </author> <title> Texture and Reflection in Computer Generated Images. </title> <journal> Communications of the ACM 19, </journal> <month> 10 (October </month> <year> 1976), </year> <pages> 542-547. </pages>
Reference-contexts: The window and surrounding wall are a single polygon with emittance and reflectance textures (see Figure 9). One of the oldest rendering techniques is the use of texture maps to modulate surface color <ref> [3] </ref>. In the case of radiosity, texture maps may be used to spatially modulate the emittance and reflectance of the surface.
Reference: [4] <author> Chen, H., and Wu, E.-H. </author> <title> An Efficient Radiosity Solution for Bump Texture Generation. </title> <booktitle> Computer Graphics 24, </booktitle> <month> 4 (August </month> <year> 1990), </year> <pages> 125-134. </pages>
Reference-contexts: As a result the odd shaped stained glass window is created from texture maps and a single quadrilateral. Other uses for texture maps include environment mapping and bump mapping <ref> [4] </ref>. The algorithm described in this paper may be easily modified to use environment maps; an interesting application of this would be to the modeling of skylighting, which is currently very expensive. A clever algorithm for approximating bump mapping in the context of radiosity is described in [4]; similar approximations could <p> and bump mapping <ref> [4] </ref>. The algorithm described in this paper may be easily modified to use environment maps; an interesting application of this would be to the modeling of skylighting, which is currently very expensive. A clever algorithm for approximating bump mapping in the context of radiosity is described in [4]; similar approximations could likely be used in a hierarchical radiosity algorithm, although this would require further research. Some of these techniques may also be useful for the clustering problem. Imagine a surface described by a displacement map over a regular grid.
Reference: [5] <author> Cohen, M., Chen, S. E., Wallace, J. R., and Greenberg, D. P. </author> <title> A Progressive Refinement Approach to Fast Radiosity Image Generation. </title> <booktitle> Computer Graphics 22, </booktitle> <month> 4 (August </month> <year> 1988), </year> <pages> 75-84. </pages>
Reference-contexts: 1 Introduction Radiosity methods compute the illumination, both direct and indirect, from environments consisting of perfectly diffuse (Lamber-tian) reflecting and emitting surfaces <ref> [10, 15, 6, 5] </ref>. The resulting pictures contain subtle but important lighting effects, such as soft shadows and color bleeding, that enhance their realism. However, radiosity algorithms are still complex and far from general. <p> These difficulties notwithstanding earlier researchers have incorporated emissive as well as reflective textures into radiosity systems to increase the realism of the generated images. Cohen et al. <ref> [5] </ref> incorporated textures as a post process. During the radios-ity computations a texture mapped polygon would have a constant reflectance equal to the average texture map reflectance. For final renderings the textures were incorporated at the resolution of the original texture.
Reference: [6] <author> Cohen, M. F., and Greenberg, D. P. </author> <title> The Hemi-Cube: A Radiosity Solution for Complex Environments. </title> <booktitle> Computer Graphics 19, </booktitle> <month> 3 (July </month> <year> 1985), </year> <pages> 31-40. </pages>
Reference-contexts: 1 Introduction Radiosity methods compute the illumination, both direct and indirect, from environments consisting of perfectly diffuse (Lamber-tian) reflecting and emitting surfaces <ref> [10, 15, 6, 5] </ref>. The resulting pictures contain subtle but important lighting effects, such as soft shadows and color bleeding, that enhance their realism. However, radiosity algorithms are still complex and far from general.
Reference: [7] <author> Cohen, M. F., Greenberg, D. P., Immel, D. S., and Brock, P. J. </author> <title> An Efficient Radiosity Approach for Realistic Image Synthesis. </title> <journal> IEEE Computer Graphics and Applications 6, </journal> <month> 3 (March </month> <year> 1986), </year> <pages> 26-35. </pages>
Reference-contexts: Two developments in recent radiosity research are relevant for our present discussion, hierarchical radiosity, and higher order Galerkin methods. A two level hierarchy was first proposed by Cohen et al. <ref> [7] </ref> as substructuring. They allowed coarse subdivision of sources while requiring a finer subdivision of receivers. Hanrahan et al. [12] introduced a multi level hierarchy. In their algorithm objects are allowed to exchange energy at many different levels of detail.
Reference: [8] <author> Dorsey, J. O., Sillion, F. X., and Greenberg, D. P. </author> <title> Design and Simulation of Opera Lighting and Projection Effects. </title> <booktitle> Computer Graphics 25, </booktitle> <month> 4 (July </month> <year> 1991), </year> <pages> 41-50. </pages>
Reference-contexts: This yields visually complex images, but does not accurately account for lighting effects because the spatially varying emission and reflection across a surface is not considered during the radiosity calculation. Dorsey et al . <ref> [8] </ref> also incorporated texture maps. They were motivated by the need to simulate lighting effects for opera lighting design. Consequently the simple average/post-process technique was not applicable. Instead they created many small polygons to get a reasonable approximation of the original texture.
Reference: [9] <author> Fournier, A., Gunawan, A. S., and Romanzin, C. </author> <title> Common Illumination between Real and Computer Generated Scenes. </title> <booktitle> In Proceedings of Graphics Interface 93 (1993), </booktitle> <pages> pp. 254-261. </pages>
Reference-contexts: Another use for this system is in the area of inverse problems. Consider taking a photograph of a diffuse surface, i.e. capturing its radiosity, and using this as a texture in a radiosity simulation. This could be used to match real scenes with computed scenes <ref> [9] </ref>; and more generally might be useful for problems arising in computer vision, such as the computation of the reflectance map.
Reference: [10] <author> Goral, C. M., Torrance, K. E., Greenberg, D. P., and Battaile, B. </author> <title> Modelling the Interaction of Light between Diffuse Surfaces. </title> <booktitle> Computer Graphics 18, </booktitle> <month> 3 (July </month> <year> 1984), </year> <pages> 212-222. </pages>
Reference-contexts: 1 Introduction Radiosity methods compute the illumination, both direct and indirect, from environments consisting of perfectly diffuse (Lamber-tian) reflecting and emitting surfaces <ref> [10, 15, 6, 5] </ref>. The resulting pictures contain subtle but important lighting effects, such as soft shadows and color bleeding, that enhance their realism. However, radiosity algorithms are still complex and far from general.
Reference: [11] <author> Gortler, S., Schr oder, P., Cohen, M., and Hanrahan, P. </author> <title> Wavelet Radiosity. </title> <booktitle> In Computer Graphics Annual Conference Series 1993 (August 1993), Siggraph, </booktitle> <pages> pp. 221-230. </pages>
Reference-contexts: The benefits of hierarchical radiosity and Galerkin methods have recently been unified under the framework of wavelets by Gortler et al. <ref> [11] </ref> and Schrder et al. [16]. Starting with a wavelet radiosity system we extend it to handle both emission and reflection textures. The theory and the resulting algorithm is the subject of this paper. We first carefully examine the structure of the underlying operator equation. <p> Sparse operators such as S are easy to represent efficiently. In contrast, dense operators such as G are normally difficult to represent efficiently. However, methods exist to efficiently approximate dense, smooth integral operators [2]. In particular, hierarchical or wavelet radiosity algorithms provide an efficient method for representing G <ref> [12, 11, 16] </ref>. They work because the smoothness of G allows it to be approximated efficiently using a hierarchy of levels of detail. <p> For example, these basis functions might be piecewise constant, as in classical radiosity, they might be higher order polynomials as proposed by Zatz [20] for Galerkin radiosity, or wavelets <ref> [11] </ref>. The level of resolution in the reflectance is typically limited by the solution of the input geometry. We treat the case of incorporating reflectance functions which have potentially much finer resolution than the element subdivision induced by the radiosity solver. <p> Wavelets afford us one way to optimally take advantage of smoothness if present. 2. The operator S will be followed by the operator G in the next iteration. Hierarchical radiosity systems <ref> [12, 11] </ref> use different levels of detail to compute the irradiance from the radiosity. The decision as to how far to subdivide the surfaces is based on the smoothness of G. <p> Recall that d was the detail lost when using as projected at a given level (P ()) compared to the actual . In the standard wavelet radiosity algorithm an oracle function is used to decide whether a given interaction needs subdivision to meet the error criterion <ref> [11] </ref> with regard to G. The presence of reflectance textures requires an additional oracle to decide at what level of detail S can be executed. This oracle can be based on a test whether k d k kEk is less than some error threshold. <p> This oracle decided that the radiosity at the receiving element is only needed to the level of detail at which we computed E. 3 Implementation We have added reflectance and emittance textures to a wavelet radiosity system based on <ref> [11, 16] </ref> and [17]. Pseudo code for the two functions which changed from previous hierarchical radiosity systems, Gather and PushPull is given in Figure 5. <p> The rest of the hierarchy is created by running the PyramidUp algorithm described in <ref> [11, 16] </ref>. At this point we have a full quadtree representation of the texture. For space reasons it may be desirable to prune subtrees in regions which do not have enough spatial detail to warrant finer level descriptions. <p> Similarly in Figure 1 the use of texture maps allowed the system to cluster many floor tiles or window panes together when determining interactions by using the standard hierarchical error criteria <ref> [12, 11] </ref>.
Reference: [12] <author> Hanrahan, P., Salzman, D., and Aupperle, L. </author> <title> A Rapid Hierarchical Radiosity Algorithm. </title> <booktitle> Computer Graphics 25, </booktitle> <month> 4 (July </month> <year> 1991), </year> <pages> 197-206. </pages>
Reference-contexts: Two developments in recent radiosity research are relevant for our present discussion, hierarchical radiosity, and higher order Galerkin methods. A two level hierarchy was first proposed by Cohen et al. [7] as substructuring. They allowed coarse subdivision of sources while requiring a finer subdivision of receivers. Hanrahan et al. <ref> [12] </ref> introduced a multi level hierarchy. In their algorithm objects are allowed to exchange energy at many different levels of detail. This is based on the observation that interactions between relatively far away primitives can be approximated with a coarse subdivision, while only close interactions require a fine subdivision. <p> Sparse operators such as S are easy to represent efficiently. In contrast, dense operators such as G are normally difficult to represent efficiently. However, methods exist to efficiently approximate dense, smooth integral operators [2]. In particular, hierarchical or wavelet radiosity algorithms provide an efficient method for representing G <ref> [12, 11, 16] </ref>. They work because the smoothness of G allows it to be approximated efficiently using a hierarchy of levels of detail. <p> Wavelets afford us one way to optimally take advantage of smoothness if present. 2. The operator S will be followed by the operator G in the next iteration. Hierarchical radiosity systems <ref> [12, 11] </ref> use different levels of detail to compute the irradiance from the radiosity. The decision as to how far to subdivide the surfaces is based on the smoothness of G. <p> Algorithm wavelet: 1. Push/pull 2 the irradiance to the radiosity resolution level 2. Apply S 3. Reproject The term push denotes transfer (addition) from a parent to children in a subdivision hierarchy, while pull refers to averaging a quantity from children to their parent <ref> [12] </ref>. These two algorithms are illustrated in Figure 4. At the top is the computed irradiance on the far wall due to a light source at the top. On the left S is a applied at the finest level of the texture. <p> The presence of reflectance textures requires an additional oracle to decide at what level of detail S can be executed. This oracle can be based on a test whether k d k kEk is less than some error threshold. This is very similar to the BF refinement <ref> [12] </ref> in ordinary hierarchical radiosity. In BF refinement an interaction between two elements (G) is refined if the product of the magnitudes of radiosity and the form factor error estimate is above the error threshold. This BF refinement also insures the proper handling of emissive textures. <p> Similarly in Figure 1 the use of texture maps allowed the system to cluster many floor tiles or window panes together when determining interactions by using the standard hierarchical error criteria <ref> [12, 11] </ref>.
Reference: [13] <author> Heckbert, P. S. </author> <title> Radiosity in Flatland. </title> <journal> Computer Graphics Forum 2, </journal> <volume> 3 (1992), </volume> <pages> 181-192. </pages>
Reference-contexts: The level of detail at which two objects (or parts of objects) interact is determined by their ability to capture an interaction correctly within a specified error criterion. An asymptotically faster radiosity algorithm results. Galerkin approaches, first introduced by Heckbert <ref> [13] </ref> and consequently elaborated by Zatz [20], and Troutman and Max [18], use classical finite element techniques to solve the underlying ra-diosity integral equation. The main goal is to compute smoother answers than classical radiosity. The higher order basis functions also reduce the need for subdivision and accelerate convergence overall.
Reference: [14] <author> Kajiya, J. T. </author> <title> The Rendering Equation. </title> <booktitle> Computer Graphics 20, 4 (1986), </booktitle> <pages> 143-150. </pages>
Reference-contexts: In the resulting algorithm, the cost of performing a radiosity computation with texture maps is very similar to the cost without texturing. 2 Theory 2.1 The radiosity equation The radiosity equation can be written as a simplification of the rendering equation <ref> [14] </ref> by assuming that all participating surfaces are perfectly diffuse (Lambertian), giving rise to the classical radiosity integral equation B (x) = B (x) + B (x) = B (x) + (x)E (x) (1) e Z 0 1 0 r E B B the computation of irradiance, denoted by G, second
Reference: [15] <author> Nishita, T., and Nakamae, E. </author> <title> Continuous Tone Representation of Three-Dimensional Objects Taking Account of Shadows and Interreflection. </title> <booktitle> Computer Graphics 19, </booktitle> <month> 3 (July </month> <year> 1985), </year> <pages> 23-30. </pages>
Reference-contexts: 1 Introduction Radiosity methods compute the illumination, both direct and indirect, from environments consisting of perfectly diffuse (Lamber-tian) reflecting and emitting surfaces <ref> [10, 15, 6, 5] </ref>. The resulting pictures contain subtle but important lighting effects, such as soft shadows and color bleeding, that enhance their realism. However, radiosity algorithms are still complex and far from general.
Reference: [16] <author> Schr oder, P., Gortler, S. J., Cohen, M. F., and Hanra-han, P. </author> <title> Wavelet Projections For Radiosity. </title> <booktitle> In Fourth Eurographics Workshop on Rendering (June 1993), Eurographics, </booktitle> <pages> pp. 105-114. </pages>
Reference-contexts: The benefits of hierarchical radiosity and Galerkin methods have recently been unified under the framework of wavelets by Gortler et al. [11] and Schrder et al. <ref> [16] </ref>. Starting with a wavelet radiosity system we extend it to handle both emission and reflection textures. The theory and the resulting algorithm is the subject of this paper. We first carefully examine the structure of the underlying operator equation. <p> Sparse operators such as S are easy to represent efficiently. In contrast, dense operators such as G are normally difficult to represent efficiently. However, methods exist to efficiently approximate dense, smooth integral operators [2]. In particular, hierarchical or wavelet radiosity algorithms provide an efficient method for representing G <ref> [12, 11, 16] </ref>. They work because the smoothness of G allows it to be approximated efficiently using a hierarchy of levels of detail. <p> This oracle decided that the radiosity at the receiving element is only needed to the level of detail at which we computed E. 3 Implementation We have added reflectance and emittance textures to a wavelet radiosity system based on <ref> [11, 16] </ref> and [17]. Pseudo code for the two functions which changed from previous hierarchical radiosity systems, Gather and PushPull is given in Figure 5. <p> After reading in a texture, which is currently limited to have a power-of-2 u and v extent, we pyramid transform it using the low pass and high pass filter sequences associated with the multi-wavelets <ref> [16] </ref>. This results in averaged representations of the original texture from the finest (input) level all the way to the overall average for use during the solution process. Of the detail information (high pass bands) only a running total of the energy is maintained for use by the oracle. <p> The rest of the hierarchy is created by running the PyramidUp algorithm described in <ref> [11, 16] </ref>. At this point we have a full quadtree representation of the texture. For space reasons it may be desirable to prune subtrees in regions which do not have enough spatial detail to warrant finer level descriptions.
Reference: [17] <author> Teller, S., and Hanrahan, P. </author> <title> Global Visibility Algorithms for Illumination Computations. </title> <booktitle> In Computer Graphics Annual Conference Series 1993 (August 1993), Siggraph, </booktitle> <pages> pp. 239-246. </pages>
Reference-contexts: This oracle decided that the radiosity at the receiving element is only needed to the level of detail at which we computed E. 3 Implementation We have added reflectance and emittance textures to a wavelet radiosity system based on [11, 16] and <ref> [17] </ref>. Pseudo code for the two functions which changed from previous hierarchical radiosity systems, Gather and PushPull is given in Figure 5.
Reference: [18] <author> Troutman, R., and Max, N. </author> <title> Radiosity Algorithms Using Higher-order Finite Elements. </title> <booktitle> In Computer Graphics Annual Conference Series 1993 (August 1993), Siggraph, </booktitle> <pages> pp. 209-212. </pages>
Reference-contexts: An asymptotically faster radiosity algorithm results. Galerkin approaches, first introduced by Heckbert [13] and consequently elaborated by Zatz [20], and Troutman and Max <ref> [18] </ref>, use classical finite element techniques to solve the underlying ra-diosity integral equation. The main goal is to compute smoother answers than classical radiosity. The higher order basis functions also reduce the need for subdivision and accelerate convergence overall.
Reference: [19] <author> Upstill, S. </author> <title> The RenderMan Companion. </title> <publisher> Addison Wesley, </publisher> <year> 1992. </year>
Reference-contexts: In the paragraphs below we give some more details regarding the following three parts of the overall system 1. functions to build wavelet representations of the texture (im age) input files 2. extending the push/pull algorithm to include non-constant emissions and a new function ApplyOpS 3. implementation of RenderMan shaders <ref> [19] </ref> for final render ing output. 3.1 Wavelet encoding of textures For the encoding of texture maps we used the same basis functions as were used in the rest of the system. <p> Only emittance is left to be added in before executing the pull and starting the next iteration B ij = B ij + B ij : 3.3 Final output As the renderer for final output we use RenderMan <ref> [19] </ref>. This requires the creation of a RenderMan Interface Bytestream (rib) file containing descriptions of the geometry of each leaf element generated during subdivision, as well as the computed coefficients for the basis functions associated with the element.
Reference: [20] <author> Zatz, H. R. </author> <title> Galerkin Radiosity: A Higher-order Solution Method for Global Illumination. </title> <booktitle> In Computer Graphics Annual Conference Series 1993 (August 1993), Siggraph, </booktitle> <pages> pp. 213-220. </pages>
Reference-contexts: The level of detail at which two objects (or parts of objects) interact is determined by their ability to capture an interaction correctly within a specified error criterion. An asymptotically faster radiosity algorithm results. Galerkin approaches, first introduced by Heckbert [13] and consequently elaborated by Zatz <ref> [20] </ref>, and Troutman and Max [18], use classical finite element techniques to solve the underlying ra-diosity integral equation. The main goal is to compute smoother answers than classical radiosity. The higher order basis functions also reduce the need for subdivision and accelerate convergence overall. <p> For example, these basis functions might be piecewise constant, as in classical radiosity, they might be higher order polynomials as proposed by Zatz <ref> [20] </ref> for Galerkin radiosity, or wavelets [11]. The level of resolution in the reflectance is typically limited by the solution of the input geometry. We treat the case of incorporating reflectance functions which have potentially much finer resolution than the element subdivision induced by the radiosity solver.
References-found: 20

