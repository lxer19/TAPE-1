URL: http://www.cs.unc.edu/~turk/streamlines/streamlines.ps
Refering-URL: http://www.cs.unc.edu/~turk/streamlines/streamlines.html
Root-URL: http://www.cs.unc.edu
Title: Image-Guided Streamline Placement Figure 1a: Hand-designed illustration of flow around a cylinder, taken from [Feynman
Author: Greg Turk, David Banks, 
Keyword: CR Categories: I.3.3 [Computer Graphics]: Picture/Image generation; I.4.3 [Image Processing]: Enhancement.  
Note: illustrations. The streamlines in such illustrations are placed so that no region is devoid of streamlines and no region is overpopulated  2 Previous Work  
Address: Chapel Hill  
Affiliation: University of North Carolina at  Mississippi State University  
Abstract: Bertin shows another effective hand-designed representation of flow where the direction of ocean current is represented by chains of arrows that are laid out end-to-end so that the eye connects arrows into streamlines and thus gets a stronger sense of flow orientation [Bertin 83]. The success of this representation depends on having chosen proper endpoints for these chains so that nowhere does the image become cluttered. The techniques presented in our paper will permit designers of vector field visualizations to control stream-linespacing automatically in order to achieve results that mimic hand-drawn figures. A streamline is an integral curve that is everywhere tangent to a given vector field (see, for example, [Kundu 90]). Many researchers have examined how to ef fectively and accurately integrate streamline paths through both regular and irregular meshes. To our surprise, however, discussions of how best to place streamlines are almost nonexistant in the visualization literature. We are aware of three techniques that are used to "seed" streamlines within a vector field: regular grids, random sampling, and userspecified seed points for initiation of streamlines. Our knowledge of random and regular grid seeding of streamlines is limited entirely to private communications with visualization researchers. The Virtual Wind Tunnel (a 3D immersive display system for flow visualization) allows users to initiate streamlines singly or in bundles [Bryson & Levit 91]. We are not familiar with work other than our own that attempts to attain a specified density of streamlines in an image. Recently there have been several exciting developments in displaying vector fields using texture synthesis. Line integral convolution is a procedure that stretches a given image along paths that are dictated by a vector field [Cabral & Leedom 93] [Forsell 94] [Stalling & Hege 95]. Spot noise is a method of creating noise-like texture by compositing many replicas of a shape [van Wijk 91] [de Leeuw Abstract Accurate control of streamline density is key to producing several effective forms of visualization of 2-dimensional vector fields. We introduce a technique that uses an energy function to guide the placement of streamlines at a specified density. This energy function uses a low-pass filtered version of the image to measure the dif ference between the current image and the desired visual density . We reduce the energy (and thereby improve the placement of streamlines) by (1) changing the positions and lengths of streamlines, (2) joining streamlines that nearly abut, and (3) creating new streamlines to fill sufficiently large gaps. The entire process is iterated to produce streamlines that are neither too crowded nor too sparse. The resulting streamlines manifest a more hand-placed appearance than do regularly or randomly-placed streamlines. Arrows can be added to the streamlines to disambiguate flow direction, and flow magnitude can be represented by the thickness, density, or intensity of the lines. 
Abstract-found: 1
Intro-found: 1
Reference: [Bertin 83] <author> Bertin, Jacques, </author> <title> Semiology of Graphics, translated from French, </title> <note> The University of Wisconson Press 1983. </note>
Reference-contexts: Then arrows were bound these streamlines. The size and the opacity of the arrow indicates the wind magnitude. The arrows line up head-to-tail so that the eye can easily follow from one to the next, as is favored by illustrators <ref> [Bertin 83] </ref>. Humansubject studies have shown that if a graphical stroke varies in width from large to small, people get a strong sense that the direction is towards the larger end [Fowler & Ware 89].
Reference: [Bryson &Levit 91] <author> Bryson, Steve and Creon Levit, </author> <title> "The Virtual Wind Tunnel: An Environment for the Exploration of Three-Dimensional Unsteady Flows," </title> <booktitle> Proceedings Visualization '91, </booktitle> <address> San Di-ego, California, </address> <month> October 22 - 25, </month> <pages> pp. 17 - 24. </pages>
Reference: [Cabral & Leedom 93] <author> Cabral, Brian and Leith (Casey) Leedom, </author> <title> "Imaging Vector Fields Using Line Integral Convolution," Computer Graphics Pr oceedings, </title> <booktitle> Annual Conference Series (SIGGRAPH '93), </booktitle> <pages> pp. 263 - 270. </pages>
Reference-contexts: Existing techniques for vector field visualization differ in how well they represent such attributes of the vector field as magnitude, direction, and critical points. This work was motivated by two recent innovations for displaying vector fields: spot noise [van Wijk 91] and line-integral convolution (LIC) <ref> [Cabral & Leedom 93] </ref>. We wondered how to compare the results of the techniques. What, exactly, is the gauge that measures how well a certain method depicts a vector field? Evidently the placement of the graphical elements is tremendously important.

Reference: [Delmarcelle & Hesselink 94] <author> Delmarcelle, Thierry and Lambertus Hesselink, </author> <title> "The Topology of Symmetric, Second-Order Tensor Fields," </title> <booktitle> Proceedings Visualization '94, </booktitle> <address> Washington, D.C., </address> <month> October 17 - 21, </month> <pages> pp. 140 - 147. </pages>
Reference-contexts: These particular points and curves partition a vector field into simpler regions where a texture-based method suffices to display details of the vector field <ref> [Delmarcelle & Hesselink 94] </ref>. The remainder of this paper is or ganized as follows. In Section 3 we present a key concept in our work a visual quality measure for flow illustrations - and show how this measure can create visually pleasing illustrations containing short arrows.
Reference: [Dovey 95] <author> Dovey , Don, </author> <title> "Vector Plots for Irregular Grids," </title> <booktitle> Proceedings Visualization '95, </booktitle> <address> Atlanta, Georgia, </address> <month> Oct. 29 - Nov. </month> <pages> 3, pp. 248 - 253. </pages>
Reference-contexts: The drawback with oversampling is that the resulting image becomes so filled with streamlets that the eye can no longer discern individual elements. A better solution to the sampling problem is to introduce noise, slightly jittering the positions of the arrows to make their regularity less noticeable <ref> [Dovey 95] </ref> [Crawfis & Max 92]. This strategy is illustrated in Figure 3a. The second problem with carpet plots is that as streamlets are placed close together, portions of neighboring arrows come very close to one another and may even overlap.
Reference: [Feibush et al. 80] <author> Feibush, Eliot, Marc Levoy and Robert Cook, </author> <title> "Synthetic Texturing Using Digital Filters," </title> <booktitle> Computer Graphics Proceedings, Annual Conference Series (SIGGRAPH '80), </booktitle> <pages> pp. 294 - 301. </pages>
Reference-contexts: We calculate the filtered image of each segment by examining those pixels within a distance R of the segment. The contribution of the line segment to a particular pixel in the filtered image can quickly be computed by a variant of the technique used by Feibush for polygon antialiasing <ref> [Feibush et al. 80] </ref>.
Reference: [Feynman 64] <author> Feynman, Richard P., Robert B. Leighton and Mat-thew Sands, </author> <title> The Feynman Lectur es on Physics , Addison-Wesley, </title> <address> Reading, Massachusetts, </address> <year> 1964. </year>
Reference: [Forssell 94] <author> Forsell, Lisa K., </author> <title> "Visualizing Flow over Curvalinear Grid Surfaces Using Line Integral Convolution," </title> <booktitle> Proceedings Visualization '94, </booktitle> <address> Washington, D.C., </address> <month> October 17 - 21, </month> <pages> pp. 240 - 247. </pages>
Reference: [Fowler & Ware 89] <author> Fowler , David and Colin Ware, </author> <title> "Strokes for Representing Univariate Vector Field Maps," Graphics Interface '89, </title> <address> London, Ontario, June 19 - 23, </address> <year> 1989, </year> <pages> pp. 249 - 253. </pages>
Reference-contexts: Humansubject studies have shown that if a graphical stroke varies in width from large to small, people get a strong sense that the direction is towards the larger end <ref> [Fowler & Ware 89] </ref>. This guided our choice of tapered arrows in Another application of the streamline-placement technique is to create iso-intensity contours that are evenly spaced.
Reference: [Globus et al. 91] <author> Globus, A., C. Levit and T. Lasinski, </author> <title> "A Tool for Visualizing the Topology of Three-Dimensional Vector Fields," </title> <booktitle> Proceedings Visualization '91, </booktitle> <address> San Diego, California, </address> <month> October 22 - 25, </month> <pages> pp. 33 - 40. </pages>
Reference-contexts: The exceptions (in a continuously differentiable vector field) occur in neighborhoods of points with zero-valued vectors. Several researchers have developed techniques to identify these critical points (sources, sinks, spirals, centers, and saddles) and the streamlines that issue from them in eigen-directions <ref> [Globus et al. 91] </ref> [Helman & Hesselink 91]. These particular points and curves partition a vector field into simpler regions where a texture-based method suffices to display details of the vector field [Delmarcelle & Hesselink 94]. The remainder of this paper is or ganized as follows.
Reference: [Helman & Hesselink 91] <author> Helman, J. L. and L. Hesselink, </author> <title> "Visualization of Vector Field Topology in Fluid Flows," </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> Vol. 11, No. 3, </volume> <pages> pp. 36 - 46. </pages>
Reference-contexts: The exceptions (in a continuously differentiable vector field) occur in neighborhoods of points with zero-valued vectors. Several researchers have developed techniques to identify these critical points (sources, sinks, spirals, centers, and saddles) and the streamlines that issue from them in eigen-directions [Globus et al. 91] <ref> [Helman & Hesselink 91] </ref>. These particular points and curves partition a vector field into simpler regions where a texture-based method suffices to display details of the vector field [Delmarcelle & Hesselink 94]. The remainder of this paper is or ganized as follows.
Reference: [Hoppe et al. 93] <author> Hoppe, Hugues, Tony DeRose, Tom Duchamp, John McDonald and Werner Stuetzel, </author> <title> "Mesh Optimization," Computer Graphics Pr oceedings, </title> <booktitle> Annual Conference Series (SIGGRAPH '93), </booktitle> <pages> pp. 19 - 26. </pages>
Reference-contexts: Large magnitude is indicated by dense, thin, dark curves. area when the model is being edited. Their operations on particles are analogous to our operations on streamlines. A second source of inspiration was the mesh optimization work from the University of Washington <ref> [Hoppe et al. 93] </ref>. Their technique uses three fundamental operations to automatically simplify a polygonal mesh: edge split, edge collapse, and edge swap. They used an energy measure to guide the optimization by random descent.
Reference: [Kundu 90] <author> Kundu, Pijush K., </author> <title> Fluid Mechanics, </title> <publisher> Academic Press, Inc., </publisher> <address> San Diego, </address> <year> 1990. </year>
Reference: [Stalling & Hege 95] <author> Stalling, Detlev and Hans-Christian Hege, </author> <title> "Fast and Resolution Independent Line Integral Convolution," Computer Graphics Pr oceedings, </title> <booktitle> Annual Conference Series (SIGGRAPH '95), </booktitle> <pages> pp. 249 - 256. </pages>
Reference: [Turk 91] <author> Turk, Greg, </author> <title> "Generating Textures on Arbitrary Surfaces Using Reaction-Dif fusion," </title> <journal> Computer Graphics , Vol. </journal> <volume> 25, No. 4 (SIGGRAPH '91), </volume> <pages> pp. </pages> <note> 289 - 298. </note> <author> [van Wijk 91] van Wijk, Jarke J., </author> <title> "Spot Noise: Texture Synthesis for Data Visualization," </title> <journal> Computer Graphics , Vol. </journal> <volume> 25, No. 4 (SIGGRAPH '91), </volume> <pages> pp. 309 - 318. </pages>
Reference-contexts: When the optimization process is animated it looks as though each streamlet is pushing away other nearby streamlets, reminiscent of methods that use repulsion between points to evenly distribute samples on a surface <ref> [Turk 91] </ref> [Witkin & Heckbert 94]. This similarity should come as no surprise, since both methods are designed to minimize an energy term by making small changes in the position of graphical elements. In fact, we too have implemented a streamlet-repulsion as a method for creating carpet plots.
Reference: [Winkenbach & Salesin 94] <author> Winkenbach, Georges and David H. Salesin, </author> <title> "Computer-Generated Pen-and-Ink Illustrations," </title> <booktitle> Computer Graphics Proceedings, Annual Conference Series (SIGGRAPH '94), </booktitle> <pages> pp. 91 - 98. </pages>
Reference-contexts: For instance, a similar technique may be applicable to creating evenly-spaced iso-contours of scalar fields. Related optimization methods might prove useful in placing graphical elements in a texture. Another potential use for such techniques is for computer generation of illustrations that have a hand-drawn appearance <ref> [Winkenbach & Salesin 94] </ref>.
Reference: [Witkin & Heckbert 94] <author> Witkin, Andrew and Paul Heckbert, </author> <title> "Using Particles to Sample and Control Implicit Surfaces," </title> <booktitle> Computer Graphics Proceedings, Annual Conference Series (SIGGRAPH 94), </booktitle> <pages> pp. 269 - 277. </pages>
Reference-contexts: When the optimization process is animated it looks as though each streamlet is pushing away other nearby streamlets, reminiscent of methods that use repulsion between points to evenly distribute samples on a surface [Turk 91] <ref> [Witkin & Heckbert 94] </ref>. This similarity should come as no surprise, since both methods are designed to minimize an energy term by making small changes in the position of graphical elements. In fact, we too have implemented a streamlet-repulsion as a method for creating carpet plots.
References-found: 17

