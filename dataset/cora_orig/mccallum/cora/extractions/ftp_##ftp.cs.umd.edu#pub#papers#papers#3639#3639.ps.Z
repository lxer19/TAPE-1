URL: ftp://ftp.cs.umd.edu/pub/papers/papers/3639/3639.ps.Z
Refering-URL: http://www.cs.umd.edu/TRs/TR.html
Root-URL: 
Email: email: mahajan@cs.umd.edu, ben@cs.umd.edu  
Title: Visual Textual Consistency Checking Tools for Graphical User Interfaces Consistency in User Interfaces follows the
Author: Rohit Mahajan and Ben Shneiderman Jakob Nielsen 
Keyword: Index Terms: Graphical user interfaces, evaluation tools, consistency, textual and visual style, assessment tools, metrics.  iterative design, usability testing, and evaluation  
Note: 1.0 Introduction Previous Research  It should be user-centered (Norman Draper, 1986) and requires  (Shneiderman, 1992). GUI programming in recent years has become a major part of software development, and is minimally 29% of software development budgets (Rosenberg, 1989). Moreover, data analysis has shown that the user interface is 47-60% of the total lines of  
Address: College Park, MD 20742 USA  
Affiliation: 1 Department of Computer Science, Human-Computer Interaction Laboratory Institute for Systems Research University of Maryland,  
Abstract:  
Abstract-found: 1
Intro-found: 1
Reference: <institution> Apple Computer, Inc. </institution> <year> (1992), </year> <title> Macintosh Human Interface Guidelines, </title> <publisher> Addison Wesley Publishing Co., </publisher> <address> Reading, MA. Bajwa, </address> <year> S.(1995), </year> <title> Effects of inconsistencies on users performance and subjective satisfaction, </title> <type> Unpublished, </type> <institution> Department of Computer Science, University of Maryland. </institution>
Reference: <author> Barnard, P., Hammond, J. , Morton, J., Long, J. and Clark, I. </author> <year> (1981), </year> <title> Consistency and compatibility in human-computer dialogue, </title> <journal> International Journal of Man-Machine Studies 15, </journal> <pages> 87-134. </pages>
Reference-contexts: Several issues associated with the structuring of arguments with a set of commands were examined <ref> (Barnard et al., 1981) </ref> in three studies on consistency and compatibility in human-computer interaction. One of the implications of this study was that the users learned positionally consistent systems more readily when recurrent arguments were placed first.
Reference: <author> Bodart, F., Hennebert, A.-M., Leheureux, J.-M., and Vanderdonckt, J. </author> <year> (1994), </year> <title> Towards a dynamic strategy for computer-aided visual placement, </title> <editor> In Catarci, T., Costabile, M., Levialdi, S., and Santucci, G. (Editors), </editor> <booktitle> Proc. Advanced Visual Interfaces Conference '94, </booktitle> <publisher> ACM Press, </publisher> <address> New York, </address> <pages> 78-87. </pages>
Reference-contexts: Vanderdonckt and Gillo (1994) proposed five visual techniques (Physical, Composition, Association and dissociation, Ordering, Photographic techniques) which identified more visual design properties than traditional balance, symmetry, and alignment. Dynamic strategies for computer-aided visual placement of interaction objects on the basis of localization, dimensioning and arrangement have been introduced <ref> (Bodart et al., 1994) </ref>.These techniques of localization, dimensioning and arrangement were based on some of the visual techniques introduced by Vanderdonckt and Gillo (1994).
Reference: <author> Chimera, R. and Shneiderman, B. </author> <year> (1993), </year> <title> User interface consistency: An evaluation of original and revised interfaces for a videodisk library, </title> <editor> In Shneiderman, B. (Editor), </editor> <title> Sparks of Innovation in Human-Computer Interaction, </title> <publisher> Ablex Publishers, </publisher> <address> Norwood, NJ, </address> <pages> 259-273. </pages>
Reference: <author> Chin, J.P., Diehl, V.A. and Norman, K. </author> <year> (1988), </year> <title> Development of an instrument measuring user satisfaction of the human-computer interface. </title> <booktitle> Proc. of the Conference on Human Factors in Computing Systems, CHI'90, ACM, </booktitle> <address> New York, </address> <pages> 213-218. </pages>
Reference-contexts: A set of instructions was provided in writing and was also explained to the subjects verbally before beginning the experiment. The subjects were asked to fill out a modified version of the Questionnaire (QUIS) <ref> (Chin et al, 1988) </ref> after completing the experiment. 21 6.6 Task List The subjects performed the seven tasks which are: Register for Workshop II Set appointment with any one of the career counselor for Nov. 8 for 10:00 to 10:30 am.
Reference: <author> Coll, R., and Wingertsman, A. </author> <year> (1990), </year> <title> The effect of screen complexity on user preference and performance, </title> <journal> International Journal of Human-Computer Interaction 2,3, </journal> <pages> 255-265. </pages>
Reference-contexts: These proposed metrics were not applied to any system to validate them. The applicability of Tullis's complexity proposition was later applied to the domain of interactive system design with findings strongly supporting their applicability <ref> (Coll & Wingertsman, 1990) </ref>.
Reference: <author> Comber, T. and Maltby, J. </author> <year> (1995), </year> <title> Evaluating usability of screen design with layout complexity, </title> <booktitle> Proc. of the CHISIG Annual Conference, Melborne, Australia (in print). </booktitle>
Reference: <author> Frederiksen, N., Grudin, J. and Laursen, B. </author> <year> (1995), </year> <title> Inseparability of design and use: An experimental study of design consistency, </title> <booktitle> Proceedings of Computers in Context'95, </booktitle> <publisher> Aarhus, Aarhus University, </publisher> <pages> 83-89. </pages>
Reference: <author> Grudin, J. </author> <year> (1989), </year> <title> The case against user interface consistency, </title> <booktitle> Communications of the ACM 32,10, </booktitle> <publisher> ACM Press, </publisher> <address> New York, 1164 1173. </address>
Reference-contexts: Terminology used in interactive dialogs for text editing can sometimes be problematic for the user (Long et al., 1983). Inconsistencies in low-level interactions can be frustrating, for example programs that differ in the names of important commands (e.g., quit and exit) <ref> (Grudin, 1989) </ref>. <p> Abbreviations are constructed to reduce typing and optimize the use of screen space, but can impose significant cognitive demands on a user in a new application. To create internally consistent design, one abbreviation algorithm should be used <ref> (Grudin, 1989) </ref> Tools for Consistent Design: An important step in GUI design was taken by an Interactive Transition Systems (ITS) project (Wiecha et al, 1989). The ITS approach was to generate consistent interfaces automatically by the use of executable style rules.
Reference: <author> Grudin, J., and Norman, </author> <title> D . (1991), Language evolution and human-computer interaction, </title> <booktitle> Proc. of the Thirteenth Annual Conference of the Cognitive Science Society, </booktitle> <address> Hillsdale, New Jersey, </address> <pages> 611-616. </pages>
Reference: <author> Harrison, M.D. and Thimbleby, H.W. </author> <year> (1985), </year> <title> Formalizing guidelines for the design of interactive systems. </title> <booktitle> In Proc. of BCS HCI Specialist Group Conference HCI85, </booktitle> <pages> 161-171. </pages>
Reference-contexts: GUI Guidelines & Task Analysis: The use of guidelines has been identified as important within the framework of a representation of the human-computer interface (HCI) by many experts <ref> (Harrison & Thimbleby, 1985) </ref>. However most guidelines do not include specifications of consistency or properties of a consistent interface that produce positive transfer of skills.
Reference: <author> Jeffries, R., Miller, J., Wharton, C. and Uyeda, K. </author> <year> (1991), </year> <title> User interface evaluation in the real world: A comparison of four techniques, </title> <booktitle> Proc. of CHI 1991, ACM, </booktitle> <address> New York, </address> <pages> 119-127. </pages>
Reference-contexts: Interface Evaluation Methods: Interface evaluation is a difficult and cumbersome 4 process.and can be performed using various techniques. Evaluation of a software product's user interface using four techniques, namely heuristic evaluation, usability testing, guidelines and cognitive walk-throughs, showed that each has advantages and disadvantages <ref> (Jeffries et al, 1991) </ref> For instance, heuristic evaluation identifies more problems than any other method, but it requires UI expertise and several evaluators. Similarly, usability testing identifies serious and recurring problems, but requires UI expertise and has a high cost.
Reference: <author> Kellogg, W. </author> <year> (1987), </year> <title> Conceptual consistency in the user interface: Effects on user performance, </title> <booktitle> In Proc. of Interact '87 Conference on Human Computer Interaction, </booktitle> <address> Stuttgart. </address>
Reference: <author> Kim, W. and Foley, J. </author> <year> (1993), </year> <title> Providing high level control and expert assistance in the user interface presentation design, </title> <booktitle> Proc. of CHI 93, ACM, </booktitle> <address> New York, 430-437. Karat, C-M., </address> <year> (1992), </year> <title> Cost-justifying human factors support in development projects, </title> <booktitle> Human Factors Society Bulletin 35, </booktitle> <pages> 8. </pages>
Reference: <author> Long, J., Hammond, N., Barnard, P., Morton, J. and Clark, I. </author> <year> (1983), </year> <title> Introducing the interactive computer at work: The user's view, </title> <journal> Behavior and Information Technology, </journal> <volume> 2, </volume> <pages> 39-106. </pages>
Reference-contexts: GUI Terminology: Another important component of consistency is terminology used in the interface. Terminology used in interactive dialogs for text editing can sometimes be problematic for the user <ref> (Long et al., 1983) </ref>. Inconsistencies in low-level interactions can be frustrating, for example programs that differ in the names of important commands (e.g., quit and exit) (Grudin, 1989).
Reference: <author> Lynch, P. </author> <year> (1994), </year> <title> Visual design for the user interface, pt. 1 design fundamentals, </title> <journal> Journal of Biocommunications 21, </journal> <volume> 1, </volume> <pages> 22-30. </pages>
Reference: <author> MacIntyre, F., Estep, K.W. and Sieburth, J.M. </author> <year> (1990), </year> <title> Cost of user-friendly programming, </title> <booktitle> Journal of Fourth Application and Research 6, </booktitle> <volume> 2, </volume> <pages> 103-115. </pages>
Reference-contexts: GUI programming in recent years has become a major part of software development, and is minimally 29% of software development budgets (Rosenberg, 1989). Moreover, data analysis has shown that the user interface is 47-60% of the total lines of application code <ref> (MacIntyre, Estep & Sieburth, 1990) </ref> GUI design encompasses more than one third of the software development cycle and plays a major role in determining the quality of a product.
Reference: <author> Mahajan, R. and Shneiderman, B. </author> <year> (1995), </year> <title> A family of user interface consistency checking tools: Design analysis of SHERLOCK, </title> <booktitle> Proc. of NASA Twentieth Annual Software Engineering Workshop, </booktitle> <address> SEL-95-004, </address> <publisher> NASA Pub., </publisher> <pages> 169-188. </pages> <address> Mullet, </address> <year> K.(1995), </year> <title> Organizing information spatially, Interactions, July 95, 15-20. Nielsen, H.(1989), Coordinating User Interfaces for Consistency Checking, </title> <editor> Ed. Nielsen, J. </editor> <publisher> Academic Press Inc., </publisher> <address> London. 26 Norman, </address> <institution> D.A. and Draper, S.W. </institution> <year> (1986), </year> <title> User Centered System Design: New Perspectives in Human-Computer Interaction, </title> <publisher> Lawrence Erlbaum Associates, </publisher> <address> Hillsdale, N.J. </address>
Reference: <author> Polson, P., Muncher, E. and Engelbeck, G. </author> <year> (1986), </year> <title> A test of a common elements theory of transfer, </title> <booktitle> Proc. of CHI'86, ACM, </booktitle> <address> New York, </address> <pages> 78-83. </pages>
Reference-contexts: Wolf (1989) says that consistency means that similar user actions lead to similar results. A consistent user interface is an interface that maximizes the number of shared rules across tasks <ref> (Polson et al., 1986) </ref>. Therefore, consistency is a relational concept and can't be defined by itself. A user interface is consistent or inconsistent with respect to something, which may be within the individual application or across a product family or for all the applications running on a particular system.
Reference: <author> Reisner, P. </author> <year> (1990), </year> <title> What is consistency?, </title> <booktitle> Proc. of the IFIP Third International Conference on Human-Computer Interaction, Interact '90, </booktitle> <publisher> Elsevier Science Publishers, B.V., North-Holland, </publisher> <pages> 175-181. </pages>
Reference: <author> Rosenberg, D. </author> <year> (1989), </year> <title> Cost benefit analysis for corporate user interface standards: What price to pay for consistent look and feel?, Coordinating User Interfaces for Consistency Checking, </title> <publisher> Ed. </publisher>
Reference-contexts: It should be user-centered (Norman & Draper, 1986) and requires iterative design, usability testing, and evaluation (Shneiderman, 1992). GUI programming in recent years has become a major part of software development, and is minimally 29% of software development budgets <ref> (Rosenberg, 1989) </ref>. Moreover, data analysis has shown that the user interface is 47-60% of the total lines of application code (MacIntyre, Estep & Sieburth, 1990) GUI design encompasses more than one third of the software development cycle and plays a major role in determining the quality of a product.
Reference: <editor> Nielsen, J. </editor> <publisher> Academic Press Inc., London, </publisher> <pages> 21-34. </pages>
Reference: <author> Sears, A. </author> <year> (1993), </year> <title> Layout Appropriateness: A metric for evaluating user interface widget layouts, </title> <journal> IEEE Transactions on Software Engineering 19, </journal> <volume> 7, </volume> <pages> 707-719. </pages>
Reference: <author> Sears, A. </author> <year> (1994), </year> <title> AIDE: A step towards metric based interface development tools, </title> <booktitle> Proc. of UIST '95, ACM, </booktitle> <address> New York, </address> <pages> 101-110. </pages>
Reference: <author> Shneiderman, B. </author> <year> (1992), </year> <title> Designing the user interface: Strategies for Effective Human Computer Interaction: Second Edition, </title> <publisher> Addison-Wesley Publ. Co., </publisher> <address> Reading, MA. </address>
Reference-contexts: If nothing is done, then entropy will increase in the form of more and more inconsistency in your user interface Jakob Nielsen Graphical User Interface design is a complex and challenging discipline. It should be user-centered (Norman & Draper, 1986) and requires iterative design, usability testing, and evaluation <ref> (Shneiderman, 1992) </ref>. GUI programming in recent years has become a major part of software development, and is minimally 29% of software development budgets (Rosenberg, 1989).
Reference: <author> Shneiderman, B., Chimera, R., Jog, N., Stimart,R. and White, D. </author> <year> (1995), </year> <title> Evaluating spatial and textual style of displays, Proc. of Getting the Best from State of the-Art Display Systems '95, </title> <publisher> London. </publisher>
Reference-contexts: These canonical formats are platform independent and may be created for other interface development tools like Power Builder, Galaxy and XVT by writing a translator program for those tools. 2.2 Evaluation Tools Development of SHERLOCK is an extension of previous work <ref> (Shneiderman et al., 1995) </ref> in which spatial and textual evaluation tools were constructed. These tools have been modified after evaluating sample applications and new tools have been integrated with them into a family of consistency checking tools leading to the evolution of SHERLOCK.
Reference: <author> Smith, D.C., Irby, C., Kimball, R., Verplank, B.and Harslem, E. </author> <year> (1982), </year> <title> Designing the star user interface, </title> <journal> Byte 7, </journal> <volume> 4, </volume> <pages> 242-282. </pages>
Reference-contexts: Consistency is naturally extended to include compatibility across application programs and compatibility with paper or noncomputer-based system. The sequence of pointing, selecting or clicking should be the same throughout the application <ref> (Smith et al, 1982) </ref> Consistency facilitates positive transfer of skills from one system to another leading to ease of use, reduced training time and improved retention of operating procedures (Nielsen, 1989; Polson et al, 1986).
Reference: <author> Streveler, D. and Wasserman, A. </author> <year> (1987), </year> <title> Quantitative measures of the spatial properties of screen designs, </title> <booktitle> Proc. of INTERACT '87, </booktitle> <publisher> Elsevier Science, Amsterdam, </publisher> <pages> 125-133. </pages>
Reference: <author> Tullis, T.S. </author> <year> (1983), </year> <title> The formatting of alphanumeric displays: A review and analysis, </title> <booktitle> Human Factors 25, </booktitle> <pages> 657-682. </pages>
Reference: <author> Tullis, T. S. </author> <year> (1988a), </year> <title> Screen design, </title> <editor> In Helander, M. (Editor), </editor> <title> Handbook of Human-Computer Interaction, </title> <publisher> Elsevier Science, </publisher> <address> Amsterdam, The Netherlands, </address> <pages> 377-411. </pages>
Reference-contexts: These measures were later incorporated into a Display Analysis Program to analyze displays on IBM PC and PC-compatible computers, to develop a tool for objectively evaluating the usability of any alphanumeric display format <ref> (Tullis, 1988a) </ref>. This Display Analysis Program was developed with two systems created specifically to test these programs and then tested with the displays of seven previous studies (Tullis, 1988b).
Reference: <author> Tullis, T. S. </author> <year> (1988b), </year> <title> A system for evaluating screen formats: Research and application, </title> <editor> In Hartson, H. Rex and Hix, Hartson (Ed.), </editor> <booktitle> Advances in Human-Computer Interaction: </booktitle> <volume> Volume 2, </volume> <publisher> Ablex Publishing Corp., </publisher> <address> Norwood, NJ, </address> <pages> 214-286. </pages>
Reference-contexts: This Display Analysis Program was developed with two systems created specifically to test these programs and then tested with the displays of seven previous studies <ref> (Tullis, 1988b) </ref>. The results indicated that given a set of alternative screen formats to present some alphanumeric data, this program can accurately predict the relative search times and subjective ratings for the formats.
Reference: <author> Vanderdonckt, J. and Gillo, X. </author> <year> (1994), </year> <title> Visual techniques for traditional and multimedia layouts, </title> <editor> In Catarci, T., Costabile, M., Levialdi, S. and Santucci, G. (Editors), </editor> <booktitle> Proc. Advanced Visual Interfaces Conference '94, </booktitle> <publisher> ACM Press, </publisher> <address> New York, </address> <pages> 95-104. </pages>
Reference: <author> Wiecha, C., Bennett, W., Boies, S. and Gould, J. </author> <year> (1989), </year> <title> Generating Highly Interactive User Interface, </title> <booktitle> Proc. of CHI'89, ACM, </booktitle> <address> New York, 277 282. </address>
Reference-contexts: To create internally consistent design, one abbreviation algorithm should be used (Grudin, 1989) Tools for Consistent Design: An important step in GUI design was taken by an Interactive Transition Systems (ITS) project <ref> (Wiecha et al, 1989) </ref>. The ITS approach was to generate consistent interfaces automatically by the use of executable style rules. ITS provided a set of software tools to support four application development roles: an application expert, a style expert, an application programmer, and a style programmer.
Reference: <author> Wolf, R. </author> <year> (1989), </year> <title> Consistency as process, Coordinating User Interfaces for Consistency Checking, </title> <editor> Ed. Nielsen, J. </editor> <publisher> Academic Press Inc., London, </publisher> <pages> 89-92. </pages>
References-found: 34

