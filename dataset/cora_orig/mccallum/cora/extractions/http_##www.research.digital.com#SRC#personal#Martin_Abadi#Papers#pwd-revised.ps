URL: http://www.research.digital.com/SRC/personal/Martin_Abadi/Papers/pwd-revised.ps
Refering-URL: http://www.research.digital.com/SRC/personal/Martin_Abadi/allpapers.html
Root-URL: http://www.research.digital.com
Title: Strengthening Passwords  
Author: Mart jn Abadi, T. Mark A. Lomas, and Roger Needham d i g i t a l 
Web: http://www.research.digital.com/SRC/  
Address: 130 Lytton Avenue Palo Alto, California 94301  
Affiliation: Systems Research Center  
Note: (with minor revisions on  Copyright c flDigital Equipment Corporation 1997. All rights reserved  
Date: 1997 033 September 4, 1997  December 16, 1997)  
Pubnum: SRC Technical Note  
Abstract-found: 0
Intro-found: 1
Reference: [BM92] <author> Steven M. Bellovin and Michael Merritt. </author> <title> Encrypted key exchange: password-based protocols secure against dictionary attacks. </title> <booktitle> In Proceedings of the 1992 IEEE Computer Society Symposium on Research in Security and Privacy, </booktitle> <pages> pages 7284, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: This kind of weakness unfortunately appears in current systems where a strong key is stored encrypted under a user password. Several recent, sophisticated protocols <ref> [LGSN89, GLNS93, BM92, BM93] </ref> impede off-line attacks. However, these protocols are difficult to design and to analyze, and sometimes permit on-line attacks [Pat97]. 7 A solution The ideas of section 2 lead to a simple protocol for strengthening a shared secret P.
Reference: [BM93] <author> Steven M. Bellovin and Michael Merritt. </author> <title> Augmented encrypted key exchange: a password-based protocol secure against dictionary attacks and password file compromise. </title> <booktitle> In Proceedings of the First ACM Conference on Computer and Communications Security, </booktitle> <pages> pages 244250, </pages> <month> November </month> <year> 1993. </year>
Reference-contexts: This kind of weakness unfortunately appears in current systems where a strong key is stored encrypted under a user password. Several recent, sophisticated protocols <ref> [LGSN89, GLNS93, BM92, BM93] </ref> impede off-line attacks. However, these protocols are difficult to design and to analyze, and sometimes permit on-line attacks [Pat97]. 7 A solution The ideas of section 2 lead to a simple protocol for strengthening a shared secret P.
Reference: [DES77] <institution> Data encryption standard. Fed. </institution> <note> Inform. Processing Standards Pub. 46, </note> <institution> National Bureau of Standards, </institution> <address> Washington DC, </address> <month> January </month> <year> 1977. </year>
Reference-contexts: In this case, the protection goes from mediocre to respectable: the full password is stronger than a DES key <ref> [DES77] </ref>. Salting It is common that computers do not store passwords in the clear, but instead store something like f .P C S/ and S, where S is a saltadded for the purpose of thwarting dictionary attacks.
Reference: [GLNS93] <author> Li Gong, T. Mark A. Lomas, Roger M. Needham, and Jerome H. Saltzer. </author> <title> Protecting poorly chosen secrets from guessing attacks. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 11(5):648656, </volume> <month> June </month> <year> 1993. </year>
Reference-contexts: This kind of weakness unfortunately appears in current systems where a strong key is stored encrypted under a user password. Several recent, sophisticated protocols <ref> [LGSN89, GLNS93, BM92, BM93] </ref> impede off-line attacks. However, these protocols are difficult to design and to analyze, and sometimes permit on-line attacks [Pat97]. 7 A solution The ideas of section 2 lead to a simple protocol for strengthening a shared secret P.
Reference: [LGSN89] <author> T. Mark A. Lomas, Li Gong, Jerome H. Saltzer, and Roger M. Need-ham. </author> <title> Reducing risks from poorly chosen keys. </title> <booktitle> Proceedings of the 10 12th ACM Symposium on Operating System Principles, ACM Operat--ing Systems Review, </booktitle> <address> 23(5):1418, </address> <month> December </month> <year> 1989. </year>
Reference-contexts: This kind of weakness unfortunately appears in current systems where a strong key is stored encrypted under a user password. Several recent, sophisticated protocols <ref> [LGSN89, GLNS93, BM92, BM93] </ref> impede off-line attacks. However, these protocols are difficult to design and to analyze, and sometimes permit on-line attacks [Pat97]. 7 A solution The ideas of section 2 lead to a simple protocol for strengthening a shared secret P.
Reference: [Man96] <author> Udi Manber. </author> <title> A simple scheme to make passwords based on one-way functions much harder to crack. </title> <journal> Computers and Security, </journal> <volume> 15(2):171 176, </volume> <year> 1996. </year>
Reference-contexts: The work presented in this paper was carried out in 1996 and early 1997. In the fall of 1997, a reader of a previous version of this paper pointed us to an interesting 3 paper by Manber <ref> [Man96] </ref>, which describes ideas related to those of section 2 and their implementation in the context of Unix. 2 Strengthening User Passwords The problem A computer may sometimes be outside the physical control of its intended users; for example, a laptop may be stolen rather easily.
Reference: [MvOV96] <author> Alfred J. Menezes, Paul C. van Oorschot, and Scott A. Vanstone. </author> <title> Handbook of Applied Cryptography. </title> <publisher> CRC Press, </publisher> <year> 1996. </year>
Reference-contexts: 1 Introduction Traditional passwords are still the most common basis for user authentication. Even systems with sophisticated cryptographic protocols often employ user passwords, for example for encrypting keys. It seems likely that passwords will be pervasive for some time. Passwords are notoriously vulnerable to attacks <ref> [MvOV96, Sch96] </ref>. Users often have weak passwords because strong passwords are long and hard to remember. <p> In short, f should be a locally one-way function <ref> [MvOV96, chapter 9] </ref>. Additionally, we assume that f is collision-resistant. Functions such as MD5 and SHA (or variants) [Sch96] seem fairly likely to have these properties. A solution We describe our technique in the context of protecting a laptop and the data stored in the laptop.
Reference: [Pat97] <author> Sarvar Patel. </author> <title> Number theoretic attacks on secure password schemes. </title> <booktitle> In Proceedings of the 1997 IEEE Symposium on Security and Privacy, </booktitle> <pages> pages 236247, </pages> <month> May </month> <year> 1997. </year>
Reference-contexts: This kind of weakness unfortunately appears in current systems where a strong key is stored encrypted under a user password. Several recent, sophisticated protocols [LGSN89, GLNS93, BM92, BM93] impede off-line attacks. However, these protocols are difficult to design and to analyze, and sometimes permit on-line attacks <ref> [Pat97] </ref>. 7 A solution The ideas of section 2 lead to a simple protocol for strengthening a shared secret P.
Reference: [Sch96] <author> Bruce Schneier. </author> <title> Applied Cryptography: Protocols, Algorithms, and Source Code in C. </title> <publisher> John Wiley & Sons, Inc., </publisher> <address> second edition, </address> <year> 1996. </year>
Reference-contexts: 1 Introduction Traditional passwords are still the most common basis for user authentication. Even systems with sophisticated cryptographic protocols often employ user passwords, for example for encrypting keys. It seems likely that passwords will be pervasive for some time. Passwords are notoriously vulnerable to attacks <ref> [MvOV96, Sch96] </ref>. Users often have weak passwords because strong passwords are long and hard to remember. <p> In short, f should be a locally one-way function [MvOV96, chapter 9]. Additionally, we assume that f is collision-resistant. Functions such as MD5 and SHA (or variants) <ref> [Sch96] </ref> seem fairly likely to have these properties. A solution We describe our technique in the context of protecting a laptop and the data stored in the laptop.
Reference: [Wag97] <author> David Wagner. </author> <title> Private communication. </title> <month> June </month> <year> 1997. </year> <month> 11 </month>
Reference-contexts: Related work: stretching secrets Recently and independently, Kelsey, Schneier, and Wagner invented a protocol similar to ours <ref> [Wag97] </ref>. In their protocol, there is no analogue to Q; instead, the password P is stretched by repeated application of a function f : &% A fMg f n .P/ '$ Here n is a large number, such as 2 20 .
References-found: 10

