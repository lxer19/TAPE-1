URL: http://www.eecs.umich.edu/~gurevich/Opera/134.ps
Refering-URL: http://www.eecs.umich.edu/~gurevich/annotated.html
Root-URL: http://www.eecs.umich.edu
Title: Existential Second-Order Logic over Strings (extended abstract)  
Author: T. Eiter G. Gottlob Y. Gurevich 
Address: D-35392 Gieen, Germany A-1040 Vienna, Austria Ann Arbor, MI 48109-2122  
Affiliation: Institut fur Informatik Institut fur Informationssysteme EECS Department Universitat Gieen Technische Universitat Wien University of Michigan  
Abstract: Existential second-order logic (ESO) and monadic second-order logic (MSO) have attracted much interest in logic and computer science. ESO is a much more expressive logic over word structures than MSO. However, little was known about the relationship between MSO and syntactic fragments of ESO. We shed light on this issue by completely characterizing this relationship for the prefix classes of ESO over strings, (i.e., finite word structures). Moreover, we determine the complexity of model checking over strings, for all ESO-prefix classes. We also give a precise characterization of those ESO-prefix classes which are equivalent to MSO over strings, and of the ESO-prefix classes which are closed under complementation on strings. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Abiteboul, R. Hull, and V. Vianu. </author> <title> Foundations of Databases. </title> <publisher> Addison-Wesley, </publisher> <year> 1995. </year>
Reference-contexts: Abiteboul and Vianu showed that total and partial fixpoint queries coincide on finite structures iff P = PSPACE (see <ref> [1] </ref>). Many complexity classes including L and NL were logically characterized by Immerman [19]; see also [20, 8, 17, 13]. Notice that while, as we show, existential MSO and ESO (9 fl 89 fl ) coincide over strings, they are different over finite graphs. <p> structure W = hU; C W a 1 ; : : : ; a n ; Succ W ; min W ; max W i, for the vocabulary oe A = fC a 1 ; : : : ; C a n ; Succ, min; maxg, where * U = <ref> [1; n] </ref> is a nonempty finite initial segment of the integers; * each C W a i is a unary relation over U for the unary predicate C a i , i = 1; : : : ; n such that the C W a i are pair wise disjoint and <p> i is a unary relation over U for the unary predicate C a i , i = 1; : : : ; n such that the C W a i are pair wise disjoint and S a i = U . * Succ W is the usual successor relation on <ref> [1; n] </ref>, min W = 1, and max W = n. Any SO sentence over oe A defines a language L () A fl , given by L () = fW j W j= g. <p> Let W be a word of length n. A support V = hoe; f i for W and is given by * a selection function oe: <ref> [1; n] </ref> ! f' 1 ; : : : ; ' d g. This function assigns to each position x 2 [1; n] of W a disjunct ' i of '; and * a witness function f : [1; n] ! [1; n] k , such that f (x) = (f <p> Let W be a word of length n. A support V = hoe; f i for W and is given by * a selection function oe: <ref> [1; n] </ref> ! f' 1 ; : : : ; ' d g. This function assigns to each position x 2 [1; n] of W a disjunct ' i of '; and * a witness function f : [1; n] ! [1; n] k , such that f (x) = (f 1 (x); : : : ; f k (x)), where f i : [1; n] ! [1; n] is a function, <p> i for W and is given by * a selection function oe: <ref> [1; n] </ref> ! f' 1 ; : : : ; ' d g. This function assigns to each position x 2 [1; n] of W a disjunct ' i of '; and * a witness function f : [1; n] ! [1; n] k , such that f (x) = (f 1 (x); : : : ; f k (x)), where f i : [1; n] ! [1; n] is a function, i = 1; : : : ; k. <p> and is given by * a selection function oe: <ref> [1; n] </ref> ! f' 1 ; : : : ; ' d g. This function assigns to each position x 2 [1; n] of W a disjunct ' i of '; and * a witness function f : [1; n] ! [1; n] k , such that f (x) = (f 1 (x); : : : ; f k (x)), where f i : [1; n] ! [1; n] is a function, i = 1; : : : ; k. <p> function assigns to each position x 2 <ref> [1; n] </ref> of W a disjunct ' i of '; and * a witness function f : [1; n] ! [1; n] k , such that f (x) = (f 1 (x); : : : ; f k (x)), where f i : [1; n] ! [1; n] is a function, i = 1; : : : ; k. Intuitively, f assigns witnesses y 1 ; : : : ; y k to each position x 2 [1; n] of W . <p> each position x 2 <ref> [1; n] </ref> of W a disjunct ' i of '; and * a witness function f : [1; n] ! [1; n] k , such that f (x) = (f 1 (x); : : : ; f k (x)), where f i : [1; n] ! [1; n] is a function, i = 1; : : : ; k. Intuitively, f assigns witnesses y 1 ; : : : ; y k to each position x 2 [1; n] of W . Thus each f i is a Skolem function; for each a 2 [1; n] of <p> (x) = (f 1 (x); : : : ; f k (x)), where f i : <ref> [1; n] </ref> ! [1; n] is a function, i = 1; : : : ; k. Intuitively, f assigns witnesses y 1 ; : : : ; y k to each position x 2 [1; n] of W . Thus each f i is a Skolem function; for each a 2 [1; n] of W , we refer to f 1 (a); : : : ; f k (a) as the witnesses of a. For each a 2 [1; n], lit (a; V ) denotes <p> n] ! <ref> [1; n] </ref> is a function, i = 1; : : : ; k. Intuitively, f assigns witnesses y 1 ; : : : ; y k to each position x 2 [1; n] of W . Thus each f i is a Skolem function; for each a 2 [1; n] of W , we refer to f 1 (a); : : : ; f k (a) as the witnesses of a. For each a 2 [1; n], lit (a; V ) denotes the set of all interpreted literals enforced by oe (a)[x=a; y 1 =f 1 (a); . . <p> k to each position x 2 <ref> [1; n] </ref> of W . Thus each f i is a Skolem function; for each a 2 [1; n] of W , we refer to f 1 (a); : : : ; f k (a) as the witnesses of a. For each a 2 [1; n], lit (a; V ) denotes the set of all interpreted literals enforced by oe (a)[x=a; y 1 =f 1 (a); . . . , y k =f k (a)]. <p> Lemma 3.2 W j= iff there exists a consistent support for W and . Let V = hoe; f i be a support for W and = 9R8x9y 1 ; y 2 : : : ; y k : ', and let a 2 <ref> [1; n] </ref>. A local witness of x is an element y 2 [1; n] such that y = f i (x) for some 1 i k, and y i is connected in disjunct oe (a) by a chain of Succ s literals to x, where Succ s is the symmetric closure <p> Let V = hoe; f i be a support for W and = 9R8x9y 1 ; y 2 : : : ; y k : ', and let a 2 <ref> [1; n] </ref>. A local witness of x is an element y 2 [1; n] such that y = f i (x) for some 1 i k, and y i is connected in disjunct oe (a) by a chain of Succ s literals to x, where Succ s is the symmetric closure of the Succ relation on W .
Reference: [2] <author> D. Basin and N. Klarlund. </author> <title> Hardware verification using monadic second-order logic. </title> <booktitle> Proc. 7th Intl. Conf. on Computer Aided Verification (CAV'95), </booktitle> <volume> LNCS 939, </volume> <pages> pp. 31-41, </pages> <year> 1995. </year>
Reference-contexts: For a discussion, see Fagin's [13, p.20]. Monadic second-order logic over strings is currently used in the verification of hardware, software, and distributed systems. An example of a specific tool for checking specifications based on MSO is the MONA tool developed at the BRICS research lab in Den-mark <ref> [2, 18, 21] </ref>. Observe that certain interesting desired properties of systems are most naturally formulated in non-monadic second-order logic. Consider, as an unpre-tentious example 2 , the following property of a ring P of processors of different types, where two types may either be compatible or incompatible with each other.
Reference: [3] <author> E. Borger, E. Gradel, and Y. Gurevich. </author> <title> The Classical Decision Problem. </title> <publisher> Springer, </publisher> <year> 1997. </year>
Reference-contexts: Prefix classes are the most commonly studied fragments of predicate logic. E.g., most decidability or undecidability results for first-order logic (FOL) are for prefix classes (cf. <ref> [3] </ref>) and many properties of second-order logic, e.g. existence of a 0-1 law, are investigated for prefix classes (cf. [22, 27]). Denote by ESO (Q) the prefix class 1 1 (Q), where Q is a first-order prefix class. <p> By Buchi's Theorem, this question is identical to which ESO-prefix classes are (semantically) included in MSO. Note that by Gurevich's classifiability theorem (cf. <ref> [3] </ref>) and by elementary closure properties of regular languages, it follows that there is a finite number of maximal regular prefix classes ESO (Q), and similarly, of minimal nonregular prefix classes; the latter are, moreover, standard (see Section 2 for a definition). <p> This can be established by a simple encoding of the question whether a given domino problem has a periodic solution, which is up to minor adaptations identical to the encoding of domino problems into formulas of the Kahr-Moore-Wang class in the proof of <ref> [3, Theorem 3.1.9] </ref>. For the reader's convenience, we describe the reduction here. A domino system is a triple D = hD; H; V i where D is a finite set, whose elements are called dominoes, and H; V D fi D are binary relations. <p> This is an immediate consequence of the stronger result that the classes of domino systems which do not admit tilings of N + fi N + and which admit periodic tilings of N + fi N + are recursively inseparable (see <ref> [3, Theorem 3.1.7] </ref>). We describe the encoding of domino systems into formulas from ESO (898); for the other classes, it is similar. For each domino d 2 D, use a binary predicate variable P d , and let P denote the tuples of all these variables.
Reference: [4] <author> J. R. Buchi. </author> <title> Weak Second-Order Arithmetic and Finite Automata. </title> <journal> Z. Math. Logik Grund. Math., </journal> <volume> 6 </volume> <pages> 66-92, </pages> <year> 1960. </year>
Reference-contexts: In particular, several important results have been obtained which link logic to automata and complexity theory. Two fundamental such results are the famous Buchi Theorem <ref> [4] </ref>, also found by Trakhtenbrot [38], which says that monadic second-order logic (MSO) over strings captures the regular languages, and Fagin's Theorem [11], which states that existential second-order logic (ESO) captures the NP properties over finite structures (in particular, over finite strings).
Reference: [5] <author> J. R. Buchi. </author> <title> On a Decision Method in Restricted Second-Order Arithmetic. </title> <editor> In E. Nagel et al. (eds), </editor> <booktitle> Proc. International Congress on Logic, Methodology and Philosophy of Science, </booktitle> <pages> pages 1-11, </pages> <address> Stan-ford, CA, 1960. </address> <publisher> Stanford University Press. </publisher>
Reference-contexts: We thus hope that our results may find applications in the field of computer aided verification. The following research issues are currently under our investigation: * Buchi has shown that an analogue of his theorem (Proposition 2.1) also holds for !-words (infinite strings) <ref> [5] </ref>. For an overview of this and many other important results on !-words, we refer the reader to the excellent survey paper [36]. Some results of the present paper, e.g., Theorem 4.1, immediately survive on !-words, since no finiteness assumption on the input word structures was made in the proof.
Reference: [6] <author> M. de Rougemont. </author> <title> Second Order and Inductive Definability on Finite Structures. </title> <journal> Z. Math. Logik Grund. Math., </journal> <volume> 33 </volume> <pages> 47-63, </pages> <year> 1987. </year>
Reference-contexts: E.g., disconnectivity is expressible in existential MSO [12], while it is not expressible in ESO (9 fl 89 fl ), even with a successor [9]. Further work on discussing fragments of ESO and MSO over graphs and finite structures is <ref> [6, 32, 31, 7] </ref>.
Reference: [7] <author> A. Durand, C. Lautemann, and T. Schwentick. </author> <title> Fragments of binary NP. </title> <journal> J. Logic & Comp., </journal> <note> to appear. </note>
Reference-contexts: E.g., disconnectivity is expressible in existential MSO [12], while it is not expressible in ESO (9 fl 89 fl ), even with a successor [9]. Further work on discussing fragments of ESO and MSO over graphs and finite structures is <ref> [6, 32, 31, 7] </ref>.
Reference: [8] <author> H.-D. Ebbinghaus and J. Flum. </author> <title> Finite Model Theory. </title> <publisher> Springer, </publisher> <year> 1995. </year>
Reference-contexts: Abiteboul and Vianu showed that total and partial fixpoint queries coincide on finite structures iff P = PSPACE (see [1]). Many complexity classes including L and NL were logically characterized by Immerman [19]; see also <ref> [20, 8, 17, 13] </ref>. Notice that while, as we show, existential MSO and ESO (9 fl 89 fl ) coincide over strings, they are different over finite graphs.
Reference: [9] <author> T. Eiter and G. Gottlob. </author> <title> On the Expressiveness of Frame Satisfiability and Fragments of Second Order Logic. </title> <journal> J. Symbolic Logic, </journal> <note> to appear. </note>
Reference-contexts: Notice that while, as we show, existential MSO and ESO (9 fl 89 fl ) coincide over strings, they are different over finite graphs. E.g., disconnectivity is expressible in existential MSO [12], while it is not expressible in ESO (9 fl 89 fl ), even with a successor <ref> [9] </ref>. Further work on discussing fragments of ESO and MSO over graphs and finite structures is [6, 32, 31, 7].
Reference: [10] <author> T. Eiter, G. Gottlob, and Y. Gurevich. </author> <title> Existential Second-Order Logic over Strings. </title> <type> TR 9702, </type> <institution> Institut fur Informatik, Univ. Gieen, Germany, </institution> <month> December </month> <year> 1997. </year> <note> (Available at URL http://www.dbai.tuwien.ac.at/ftp/papers/eiter/ ifigrr-9702.ps.gz) </note>
Reference-contexts: Observe that (4) implies that unless NP = co-NP, every nonregular prefix class is not closed under complementation. Assuming NP 6= co-NP, we thus have completely determined the ESO-prefix classes closed under complementation over strings. Related Work. For space reasons, we confine to a brief discussion; see <ref> [10] </ref> for a detailed one. Stockmeyer [33] showed that second-order logic captures the polynomial hierarchy over finite structures. Immerman [19] and Vardi [39] proved that fixpoint-logic captures P (polynomial time) over ordered finite structures. <p> Proposition 2.1 (Buchi's Theorem) MSO cap tures REG. 3 ESO (9 fl 89 fl ) is regular Given the page limit, the description of the involved proof of this theorem (&gt; 15 pages) is necessarily superficial and informal. We make several simplifying assumptions here; see <ref> [10] </ref> for a detailed proof. We first state an auxiliary theorem on a variant of hypergraph transversals (proven in the full paper). We then introduce the concepts of support and formula boundedness. Based on this, we outline the proof of the main theorem. Hypergraphs. <p> Literals such as :R (2; 21) prohibiting witness reuse are referred to as blockers. Blockers are thus literals causing an inconsistency if we try f 0 r (a) := f r (a 0 ) (see <ref> [10] </ref> for a more formal treatment). <p> Theorem 4.1 Over strings, every ESO (9 fl 88) sentence is equivalent to an MSO sentence. Theorem 4.1 together with Proposition 2.1 implies the desired result. Corollary 4.2 ESO (9 fl 88) is regular. Proof. We illustrate the proof of Theorem 4.1 under simplifying assumptions (see <ref> [10] </ref> for details). Let = 9R9y8x 1 ; x 2 :' 2 ESO (9 fl 88), where ' is quantifier-free.
Reference: [11] <author> R. Fagin. </author> <title> Generalized First-Order Spectra and Polynomial-Time Recognizable Sets. </title> <editor> In R. M. Karp, editor, </editor> <booktitle> Complexity of Computation, </booktitle> <pages> pp. 43-74. </pages> <publisher> AMS, </publisher> <year> 1974. </year>
Reference-contexts: In particular, several important results have been obtained which link logic to automata and complexity theory. Two fundamental such results are the famous Buchi Theorem [4], also found by Trakhtenbrot [38], which says that monadic second-order logic (MSO) over strings captures the regular languages, and Fagin's Theorem <ref> [11] </ref>, which states that existential second-order logic (ESO) captures the NP properties over finite structures (in particular, over finite strings). Thus, ESO is over strings much more expressive than MSO. However, little was known about the relationship between MSO and syntactic fragments of ESO.
Reference: [12] <author> R. Fagin. </author> <title> Generalized Monadic Spectra. </title> <journal> Z. Math. Logik Grund. Math., </journal> <volume> 21 </volume> <pages> 89-96, </pages> <year> 1975. </year>
Reference-contexts: Notice that while, as we show, existential MSO and ESO (9 fl 89 fl ) coincide over strings, they are different over finite graphs. E.g., disconnectivity is expressible in existential MSO <ref> [12] </ref>, while it is not expressible in ESO (9 fl 89 fl ), even with a successor [9]. Further work on discussing fragments of ESO and MSO over graphs and finite structures is [6, 32, 31, 7].
Reference: [13] <author> R. Fagin. </author> <title> Finite-Model Theory|A Personal Perspective. </title> <journal> TCS, </journal> <volume> 116(1) </volume> <pages> 3-31, </pages> <year> 1993. </year>
Reference-contexts: Abiteboul and Vianu showed that total and partial fixpoint queries coincide on finite structures iff P = PSPACE (see [1]). Many complexity classes including L and NL were logically characterized by Immerman [19]; see also <ref> [20, 8, 17, 13] </ref>. Notice that while, as we show, existential MSO and ESO (9 fl 89 fl ) coincide over strings, they are different over finite graphs. <p> Moreover, this matches observations on similar good/bad dichotomies of prefix classes which have been noted earlier in different contexts, e.g., 0-1 laws for ESO-prefix classes [22]. For a discussion, see Fagin's <ref> [13, p.20] </ref>. Monadic second-order logic over strings is currently used in the verification of hardware, software, and distributed systems. An example of a specific tool for checking specifications based on MSO is the MONA tool developed at the BRICS research lab in Den-mark [2, 18, 21].
Reference: [14] <author> E. Gradel. </author> <title> The Expressive Power of Second-Order Horn Logic. </title> <booktitle> In Proc. STACS-91, </booktitle> <volume> LNCS 480, </volume> <pages> pp. 466-477, </pages> <year> 1991. </year>
Reference-contexts: Related Work. For space reasons, we confine to a brief discussion; see [10] for a detailed one. Stockmeyer [33] showed that second-order logic captures the polynomial hierarchy over finite structures. Immerman [19] and Vardi [39] proved that fixpoint-logic captures P (polynomial time) over ordered finite structures. Gradel <ref> [14, 15] </ref> gave an alternative characterization in terms of ESO (8 fl ,Horn), i.e., ESO sentences with universal-Horn first-order part; the related result that semi-positive Datalog captures P is implicit in [39, 19].
Reference: [15] <author> E. Gradel. </author> <title> Capturing Complexity Classes with Fragments of Second Order Logic. </title> <journal> TCS, </journal> <volume> 101 </volume> <pages> 35-57, </pages> <year> 1992. </year>
Reference-contexts: Related Work. For space reasons, we confine to a brief discussion; see [10] for a detailed one. Stockmeyer [33] showed that second-order logic captures the polynomial hierarchy over finite structures. Immerman [19] and Vardi [39] proved that fixpoint-logic captures P (polynomial time) over ordered finite structures. Gradel <ref> [14, 15] </ref> gave an alternative characterization in terms of ESO (8 fl ,Horn), i.e., ESO sentences with universal-Horn first-order part; the related result that semi-positive Datalog captures P is implicit in [39, 19].
Reference: [16] <author> E. Grandjean. </author> <title> Universal quantifiers and time complexity of random access machines. </title> <journal> Math. Sys. Th., </journal> <volume> 13 </volume> <pages> 171-187, </pages> <year> 1985. </year>
Reference-contexts: Lynch [24] proved that model checking for existential MSO extended by addition is in nondeterministic linear time. Grandjean and Olive <ref> [16, 26] </ref> gave logical representations of the class NLIN, i.e., linear time on a RAM, in terms of second-order logic which uses unary functions instead of relations.
Reference: [17] <author> Y. Gurevich. </author> <title> Logic and the Challenge of Computer Science. </title> <editor> In E. Borger (ed), </editor> <booktitle> Trends in Theoretical Computer Science, </booktitle> <publisher> CS Press, </publisher> <year> 1988. </year>
Reference-contexts: Abiteboul and Vianu showed that total and partial fixpoint queries coincide on finite structures iff P = PSPACE (see [1]). Many complexity classes including L and NL were logically characterized by Immerman [19]; see also <ref> [20, 8, 17, 13] </ref>. Notice that while, as we show, existential MSO and ESO (9 fl 89 fl ) coincide over strings, they are different over finite graphs.
Reference: [18] <author> J.G. Henriksen, J. Jensen, M. Jorgensen, N. Klar-lund, B. Paige, T. Rauhe, and A. Sandholm. Mona: </author> <title> Monadic Second-order Logic in Practice. </title> <booktitle> in Proc. TACAS'95, </booktitle> <volume> LNCS 1019, </volume> <pages> pp. 89-110, </pages> <year> 1996. </year>
Reference-contexts: For a discussion, see Fagin's [13, p.20]. Monadic second-order logic over strings is currently used in the verification of hardware, software, and distributed systems. An example of a specific tool for checking specifications based on MSO is the MONA tool developed at the BRICS research lab in Den-mark <ref> [2, 18, 21] </ref>. Observe that certain interesting desired properties of systems are most naturally formulated in non-monadic second-order logic. Consider, as an unpre-tentious example 2 , the following property of a ring P of processors of different types, where two types may either be compatible or incompatible with each other.
Reference: [19] <author> N. Immerman. </author> <title> Relational Queries Computable in Polynomial Time. </title> <journal> Inf. Control, </journal> <volume> 68 </volume> <pages> 86-104, </pages> <year> 1986. </year>
Reference-contexts: Assuming NP 6= co-NP, we thus have completely determined the ESO-prefix classes closed under complementation over strings. Related Work. For space reasons, we confine to a brief discussion; see [10] for a detailed one. Stockmeyer [33] showed that second-order logic captures the polynomial hierarchy over finite structures. Immerman <ref> [19] </ref> and Vardi [39] proved that fixpoint-logic captures P (polynomial time) over ordered finite structures. Gradel [14, 15] gave an alternative characterization in terms of ESO (8 fl ,Horn), i.e., ESO sentences with universal-Horn first-order part; the related result that semi-positive Datalog captures P is implicit in [39, 19]. <p> Immerman [19] and Vardi [39] proved that fixpoint-logic captures P (polynomial time) over ordered finite structures. Gradel [14, 15] gave an alternative characterization in terms of ESO (8 fl ,Horn), i.e., ESO sentences with universal-Horn first-order part; the related result that semi-positive Datalog captures P is implicit in <ref> [39, 19] </ref>. Abiteboul and Vianu showed that total and partial fixpoint queries coincide on finite structures iff P = PSPACE (see [1]). Many complexity classes including L and NL were logically characterized by Immerman [19]; see also [20, 8, 17, 13]. <p> Abiteboul and Vianu showed that total and partial fixpoint queries coincide on finite structures iff P = PSPACE (see [1]). Many complexity classes including L and NL were logically characterized by Immerman <ref> [19] </ref>; see also [20, 8, 17, 13]. Notice that while, as we show, existential MSO and ESO (9 fl 89 fl ) coincide over strings, they are different over finite graphs.
Reference: [20] <author> N. Immerman. </author> <title> Descriptive Complexity Theory. Springer, </title> <note> to appear. </note>
Reference-contexts: Abiteboul and Vianu showed that total and partial fixpoint queries coincide on finite structures iff P = PSPACE (see [1]). Many complexity classes including L and NL were logically characterized by Immerman [19]; see also <ref> [20, 8, 17, 13] </ref>. Notice that while, as we show, existential MSO and ESO (9 fl 89 fl ) coincide over strings, they are different over finite graphs.
Reference: [21] <author> N. Klarlund. </author> <title> Mona & Fido: </title> <booktitle> The Logic-Automaton Connection in Practice. In Proc. CSL '97, </booktitle> <publisher> LNCS. </publisher> <address> Springer, </address> <note> 1998 (to appear). </note>
Reference-contexts: For a discussion, see Fagin's [13, p.20]. Monadic second-order logic over strings is currently used in the verification of hardware, software, and distributed systems. An example of a specific tool for checking specifications based on MSO is the MONA tool developed at the BRICS research lab in Den-mark <ref> [2, 18, 21] </ref>. Observe that certain interesting desired properties of systems are most naturally formulated in non-monadic second-order logic. Consider, as an unpre-tentious example 2 , the following property of a ring P of processors of different types, where two types may either be compatible or incompatible with each other.
Reference: [22] <author> P. Kolaitis and M. Y. Vardi. </author> <title> 0-1 Laws and Decision Problems for Fragments of Second-Order Logic. </title> <journal> Information and Computation, </journal> <volume> 87 </volume> <pages> 302-338, </pages> <year> 1990. </year>
Reference-contexts: Prefix classes are the most commonly studied fragments of predicate logic. E.g., most decidability or undecidability results for first-order logic (FOL) are for prefix classes (cf. [3]) and many properties of second-order logic, e.g. existence of a 0-1 law, are investigated for prefix classes (cf. <ref> [22, 27] </ref>). Denote by ESO (Q) the prefix class 1 1 (Q), where Q is a first-order prefix class. <p> In summary, with respect to any of these criteria, each ESO-prefix class ESO (Q) exhibits either a very good or an extremely bad behavior. Moreover, this matches observations on similar good/bad dichotomies of prefix classes which have been noted earlier in different contexts, e.g., 0-1 laws for ESO-prefix classes <ref> [22] </ref>. For a discussion, see Fagin's [13, p.20]. Monadic second-order logic over strings is currently used in the verification of hardware, software, and distributed systems.
Reference: [23] <author> C. Lautemann, T. Schwentick, and D. Therien. </author> <title> Logics for context-free languages. </title> <booktitle> In Proc. 1994 Annual EACSL Conference, </booktitle> <pages> pp. 205-216, </pages> <year> 1995. </year>
Reference-contexts: Grandjean and Olive [16, 26] gave logical representations of the class NLIN, i.e., linear time on a RAM, in terms of second-order logic which uses unary functions instead of relations. Lautemann, Schwentick and Therien <ref> [23] </ref> proved that the class CFL of context-free languages is captured by ESO formulas 9B' where B ranges over matchings (pairing relations without crossover) and ' is first-order. Note that this characterization is not purely prefix-syntactic.
Reference: [24] <author> J. F. Lynch. </author> <title> The quantifier structure of sentences that characterize nondeterministic time complexity. </title> <journal> Computational Complexity, </journal> <volume> 2 </volume> <pages> 40-66, </pages> <year> 1992. </year>
Reference-contexts: Lynch <ref> [24] </ref> proved that model checking for existential MSO extended by addition is in nondeterministic linear time. Grandjean and Olive [16, 26] gave logical representations of the class NLIN, i.e., linear time on a RAM, in terms of second-order logic which uses unary functions instead of relations.
Reference: [25] <author> R. McNaughton and S. Papert. </author> <title> Counter-Free Automata. </title> <publisher> MIT Press, </publisher> <year> 1971. </year>
Reference-contexts: Note that this characterization is not purely prefix-syntactic. Since non-CFL languages are expressible in all nonregular ESO-prefix classes, our results imply that such a characterization in terms of ESO-prefix classes is impossible. McNaughton and Papert <ref> [25] </ref> showed that FOL with a linear order captures the star-free regular languages, which was extended to !-languages by Thomas [37]. Also hierarchies of star-free languages were logically characterized, see e.g. [37, 28, 29, 30].
Reference: [26] <author> F. Olive. </author> <title> A Conjunctive Logical Characterization of Nondeterministic Linear Time. </title> <booktitle> In Proc. CSL '97, </booktitle> <publisher> LNCS. </publisher> <address> Springer, </address> <note> 1998 (to appear). </note>
Reference-contexts: Lynch [24] proved that model checking for existential MSO extended by addition is in nondeterministic linear time. Grandjean and Olive <ref> [16, 26] </ref> gave logical representations of the class NLIN, i.e., linear time on a RAM, in terms of second-order logic which uses unary functions instead of relations.
Reference: [27] <author> L. Pacholski and W. Szwast. </author> <title> On the 0-1Law for the Existential Second-Orde Minimal Godel Sentences With Equality. </title> <booktitle> In Proc. LICS `91, </booktitle> <pages> pp. 290-285. </pages>
Reference-contexts: Prefix classes are the most commonly studied fragments of predicate logic. E.g., most decidability or undecidability results for first-order logic (FOL) are for prefix classes (cf. [3]) and many properties of second-order logic, e.g. existence of a 0-1 law, are investigated for prefix classes (cf. <ref> [22, 27] </ref>). Denote by ESO (Q) the prefix class 1 1 (Q), where Q is a first-order prefix class.
Reference: [28] <author> J.-E. Pin. </author> <title> Varieties of Formal Languages. </title> <publisher> North Oxford, London and Plenum, </publisher> <address> New York, </address> <year> 1986. </year>
Reference-contexts: McNaughton and Papert [25] showed that FOL with a linear order captures the star-free regular languages, which was extended to !-languages by Thomas [37]. Also hierarchies of star-free languages were logically characterized, see e.g. <ref> [37, 28, 29, 30] </ref>. <p> Also hierarchies of star-free languages were logically characterized, see e.g. [37, 28, 29, 30]. Straubing, Therien and Thomas [35] showed that FOL with modular counting quantifiers captures the regular languages whose syntactic monoids contain only solvable groups; see <ref> [34, 37, 28, 29, 30] </ref> for these and related results. 2 Preliminaries We consider second-order logic with equality and without function symbols of positive arity. Predicates are denoted by capitals and individual variables by lower case letters; a bold face version of a letter denotes a tuple of corresponding symbols.
Reference: [29] <author> J.-E. Pin. </author> <title> Logic On Words. </title> <journal> Bulletin of the EATCS, </journal> <volume> 54 </volume> <pages> 145-165, </pages> <year> 1994. </year>
Reference-contexts: McNaughton and Papert [25] showed that FOL with a linear order captures the star-free regular languages, which was extended to !-languages by Thomas [37]. Also hierarchies of star-free languages were logically characterized, see e.g. <ref> [37, 28, 29, 30] </ref>. <p> Also hierarchies of star-free languages were logically characterized, see e.g. [37, 28, 29, 30]. Straubing, Therien and Thomas [35] showed that FOL with modular counting quantifiers captures the regular languages whose syntactic monoids contain only solvable groups; see <ref> [34, 37, 28, 29, 30] </ref> for these and related results. 2 Preliminaries We consider second-order logic with equality and without function symbols of positive arity. Predicates are denoted by capitals and individual variables by lower case letters; a bold face version of a letter denotes a tuple of corresponding symbols.
Reference: [30] <author> J.-E. Pin. </author> <title> Semigroups and Automata on Words. </title> <journal> Annals Mathematics & AI, </journal> <volume> 16 </volume> <pages> 343-384, </pages> <year> 1996. </year>
Reference-contexts: McNaughton and Papert [25] showed that FOL with a linear order captures the star-free regular languages, which was extended to !-languages by Thomas [37]. Also hierarchies of star-free languages were logically characterized, see e.g. <ref> [37, 28, 29, 30] </ref>. <p> Also hierarchies of star-free languages were logically characterized, see e.g. [37, 28, 29, 30]. Straubing, Therien and Thomas [35] showed that FOL with modular counting quantifiers captures the regular languages whose syntactic monoids contain only solvable groups; see <ref> [34, 37, 28, 29, 30] </ref> for these and related results. 2 Preliminaries We consider second-order logic with equality and without function symbols of positive arity. Predicates are denoted by capitals and individual variables by lower case letters; a bold face version of a letter denotes a tuple of corresponding symbols.
Reference: [31] <author> E. Rosen. </author> <title> An Existential Fragment of Second Order Logic. </title> <type> Revised manuscript, </type> <month> December </month> <year> 1996. </year>
Reference-contexts: E.g., disconnectivity is expressible in existential MSO [12], while it is not expressible in ESO (9 fl 89 fl ), even with a successor [9]. Further work on discussing fragments of ESO and MSO over graphs and finite structures is <ref> [6, 32, 31, 7] </ref>.
Reference: [32] <author> T. Schwentick. </author> <title> Graph Connectivity, Monadic NP and Built-in Relations of Moderate Degree. </title> <booktitle> In Proc. ICALP '95, </booktitle> <pages> pp. 405-416, </pages> <year> 1995. </year>
Reference-contexts: E.g., disconnectivity is expressible in existential MSO [12], while it is not expressible in ESO (9 fl 89 fl ), even with a successor [9]. Further work on discussing fragments of ESO and MSO over graphs and finite structures is <ref> [6, 32, 31, 7] </ref>.
Reference: [33] <author> L. J. Stockmeyer. </author> <title> The Polynomial-Time Hierarchy. </title> <journal> TCS, </journal> <volume> 3 </volume> <pages> 1-22, </pages> <year> 1977. </year>
Reference-contexts: Assuming NP 6= co-NP, we thus have completely determined the ESO-prefix classes closed under complementation over strings. Related Work. For space reasons, we confine to a brief discussion; see [10] for a detailed one. Stockmeyer <ref> [33] </ref> showed that second-order logic captures the polynomial hierarchy over finite structures. Immerman [19] and Vardi [39] proved that fixpoint-logic captures P (polynomial time) over ordered finite structures.
Reference: [34] <author> H. Straubing. </author> <title> Finite Automata, Formal Logic, and Circuit Complexity. </title> <publisher> Birkhauser, </publisher> <year> 1994. </year>
Reference-contexts: Also hierarchies of star-free languages were logically characterized, see e.g. [37, 28, 29, 30]. Straubing, Therien and Thomas [35] showed that FOL with modular counting quantifiers captures the regular languages whose syntactic monoids contain only solvable groups; see <ref> [34, 37, 28, 29, 30] </ref> for these and related results. 2 Preliminaries We consider second-order logic with equality and without function symbols of positive arity. Predicates are denoted by capitals and individual variables by lower case letters; a bold face version of a letter denotes a tuple of corresponding symbols.
Reference: [35] <author> H. Straubing, D. Therien, and W. Thomas. </author> <title> Regular Languages Defined with Generalized Quantifiers. </title> <journal> Information and Computation, </journal> <volume> 118 </volume> <pages> 289-301, </pages> <year> 1995. </year>
Reference-contexts: McNaughton and Papert [25] showed that FOL with a linear order captures the star-free regular languages, which was extended to !-languages by Thomas [37]. Also hierarchies of star-free languages were logically characterized, see e.g. [37, 28, 29, 30]. Straubing, Therien and Thomas <ref> [35] </ref> showed that FOL with modular counting quantifiers captures the regular languages whose syntactic monoids contain only solvable groups; see [34, 37, 28, 29, 30] for these and related results. 2 Preliminaries We consider second-order logic with equality and without function symbols of positive arity.
Reference: [36] <author> W. Thomas. </author> <title> Automata on Infinite Objects. </title> <editor> In J. van Leeuwen (ed), </editor> <booktitle> Handbook of TCS (B), ch. </booktitle> <volume> 4. </volume> <publisher> Elsevier, </publisher> <year> 1990. </year>
Reference-contexts: The following research issues are currently under our investigation: * Buchi has shown that an analogue of his theorem (Proposition 2.1) also holds for !-words (infinite strings) [5]. For an overview of this and many other important results on !-words, we refer the reader to the excellent survey paper <ref> [36] </ref>. Some results of the present paper, e.g., Theorem 4.1, immediately survive on !-words, since no finiteness assumption on the input word structures was made in the proof.
Reference: [37] <author> W. Thomas. </author> <title> Languages, Automata, and Logic. </title> <editor> In G. Rozenberg and A. Salomaa, editors, </editor> <booktitle> Handbook of Formal Language Theory, III, </booktitle> <pages> pp. 389-455. </pages> <publisher> Springer, </publisher> <year> 1996. </year>
Reference-contexts: Since non-CFL languages are expressible in all nonregular ESO-prefix classes, our results imply that such a characterization in terms of ESO-prefix classes is impossible. McNaughton and Papert [25] showed that FOL with a linear order captures the star-free regular languages, which was extended to !-languages by Thomas <ref> [37] </ref>. Also hierarchies of star-free languages were logically characterized, see e.g. [37, 28, 29, 30]. <p> McNaughton and Papert [25] showed that FOL with a linear order captures the star-free regular languages, which was extended to !-languages by Thomas [37]. Also hierarchies of star-free languages were logically characterized, see e.g. <ref> [37, 28, 29, 30] </ref>. <p> Also hierarchies of star-free languages were logically characterized, see e.g. [37, 28, 29, 30]. Straubing, Therien and Thomas [35] showed that FOL with modular counting quantifiers captures the regular languages whose syntactic monoids contain only solvable groups; see <ref> [34, 37, 28, 29, 30] </ref> for these and related results. 2 Preliminaries We consider second-order logic with equality and without function symbols of positive arity. Predicates are denoted by capitals and individual variables by lower case letters; a bold face version of a letter denotes a tuple of corresponding symbols.
Reference: [38] <author> B. A. Trakhtenbrot. </author> <title> Finite Automata and the Logic of Monadic Predicates. </title> <journal> Dokl. Akad. Nauk SSSR, </journal> <volume> 140 </volume> <pages> 326-329, </pages> <year> 1961. </year>
Reference-contexts: In particular, several important results have been obtained which link logic to automata and complexity theory. Two fundamental such results are the famous Buchi Theorem [4], also found by Trakhtenbrot <ref> [38] </ref>, which says that monadic second-order logic (MSO) over strings captures the regular languages, and Fagin's Theorem [11], which states that existential second-order logic (ESO) captures the NP properties over finite structures (in particular, over finite strings). Thus, ESO is over strings much more expressive than MSO.
Reference: [39] <author> M. Vardi. </author> <title> Complexity of Relational Query Languages. </title> <booktitle> In Proc. STOC `82, </booktitle> <pages> pp. 137-146, </pages> <year> 1982. </year>
Reference-contexts: Related Work. For space reasons, we confine to a brief discussion; see [10] for a detailed one. Stockmeyer [33] showed that second-order logic captures the polynomial hierarchy over finite structures. Immerman [19] and Vardi <ref> [39] </ref> proved that fixpoint-logic captures P (polynomial time) over ordered finite structures. Gradel [14, 15] gave an alternative characterization in terms of ESO (8 fl ,Horn), i.e., ESO sentences with universal-Horn first-order part; the related result that semi-positive Datalog captures P is implicit in [39, 19]. <p> Immerman [19] and Vardi [39] proved that fixpoint-logic captures P (polynomial time) over ordered finite structures. Gradel [14, 15] gave an alternative characterization in terms of ESO (8 fl ,Horn), i.e., ESO sentences with universal-Horn first-order part; the related result that semi-positive Datalog captures P is implicit in <ref> [39, 19] </ref>. Abiteboul and Vianu showed that total and partial fixpoint queries coincide on finite structures iff P = PSPACE (see [1]). Many complexity classes including L and NL were logically characterized by Immerman [19]; see also [20, 8, 17, 13].
References-found: 39

