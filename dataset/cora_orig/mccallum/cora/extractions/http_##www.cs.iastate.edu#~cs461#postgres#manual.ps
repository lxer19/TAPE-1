URL: http://www.cs.iastate.edu/~cs461/postgres/manual.ps
Refering-URL: http://www.cs.iastate.edu/~cs461/Homework_xf98/homework03.html
Root-URL: http://www.cs.iastate.edu
Title: The POSTGRES User Manual  
Address: Berkeley  Evans Hall, University of California, Berkeley, Ca.,  
Affiliation: Group Computer Science Div., Dept. of EECS University of California at  
Note: Edited by the POSTGRES  POSTGRES is copyright 1989, 1994 by the Regents of the University of California. Permission to use, copy, modify, and distribute this software and its documentation for educational, research, and non-profit purposes and without fee is hereby granted, provided that the above copyright notice appear in all copies and that both that copyright notice and this permission notice appear in supporting documentation, and that the name of the University of California not be used in advertising or publicity pertaining to distribution of the software without specific, written prior permission. Permission to incorporate this software into commercial products can be obtained from the Campus Software Office, 295  94720. The University of Cal-ifornia makes no representations about the suitability of this software for any purpose. It is provided as is without express or implied warranty.  
Abstract-found: 0
Intro-found: 1
Reference: [ONG90] <author> Ong, L. and Goh, J., </author> <title> ``A Unified Framework for Version Modeling Using Production Rules in a Database System," </title> <institution> Electronics Research Laboratory, University of California, ERL Technical Memorandum M90/33, Berkeley, </institution> <address> CA, </address> <month> April </month> <year> 1990. </year>
Reference-contexts: It is very powerful, and can be used for many things such as query language procedures, views, and versions. Examples can be found in /usr/local/postgres/src/regress/video, and further discussion is in the Reference Manual under define rule. The power of this rule system is discussed in <ref> [ONG90] </ref> as well as [STON90b]. Since each rule system is implemented quite differently, they work best in different situations.
Reference: [ROWE87] <author> Rowe, L. and Stonebraker, M., </author> <title> ``The POSTGRES Data Model,'' </title> <booktitle> Proc. 1987 VLDB Conference, </booktitle> <address> Brighton, England, </address> <month> Sept. </month> <year> 1987. </year>
Reference-contexts: In addition, POSTGRES supports a powerful production rule system. 1.2. A Short History of the POSTGRES Project Implementation of the POSTGRES DBMS began in 1986. The initial concepts for the system were presented in [STON86] and the definition of the initial data model appeared in <ref> [ROWE87] </ref>. The design of the rule system at that time was described in [STON87a]. 2 The rationale and architecture of the storage manager were detailed in [STON87b]. POSTGRES has undergone several major releases since then.
Reference: [STON86] <author> Stonebraker, M. and Rowe, L., </author> <title> ``The Design of POSTGRES,'' </title> <booktitle> Proc. 1986 ACM-SIGMOD Conference on Management of Data, </booktitle> <address> Washington, DC, </address> <month> May </month> <year> 1986. </year>
Reference-contexts: In addition, POSTGRES supports a powerful production rule system. 1.2. A Short History of the POSTGRES Project Implementation of the POSTGRES DBMS began in 1986. The initial concepts for the system were presented in <ref> [STON86] </ref> and the definition of the initial data model appeared in [ROWE87]. The design of the rule system at that time was described in [STON87a]. 2 The rationale and architecture of the storage manager were detailed in [STON87b]. POSTGRES has undergone several major releases since then.
Reference: [STON87a] <author> Stonebraker, M., Hanson, E. and Hong, C.-H., </author> <title> ``The Design of the POST GRES Rules System,'' </title> <booktitle> Proc. 1987 IEEE Conference on Data Engineering, </booktitle> <address> Los Angeles, CA, </address> <month> Feb. </month> <year> 1987. </year>
Reference-contexts: A Short History of the POSTGRES Project Implementation of the POSTGRES DBMS began in 1986. The initial concepts for the system were presented in [STON86] and the definition of the initial data model appeared in [ROWE87]. The design of the rule system at that time was described in <ref> [STON87a] </ref>. 2 The rationale and architecture of the storage manager were detailed in [STON87b]. POSTGRES has undergone several major releases since then. The first demo-ware system became operational in 1987 and was shown at the 1988 ACM-SIGMOD Conference.
Reference: [STON87b] <author> Stonebraker, M., </author> <title> ``The POSTGRES Storage System,'' </title> <booktitle> Proc. 1987 VLDB Conference, </booktitle> <address> Brighton, England, </address> <month> Sept. </month> <year> 1987. </year>
Reference-contexts: The initial concepts for the system were presented in [STON86] and the definition of the initial data model appeared in [ROWE87]. The design of the rule system at that time was described in [STON87a]. 2 The rationale and architecture of the storage manager were detailed in <ref> [STON87b] </ref>. POSTGRES has undergone several major releases since then. The first demo-ware system became operational in 1987 and was shown at the 1988 ACM-SIGMOD Conference. We released Version 1, described in [STON90a], to a few external users in June 1989.
Reference: [STON89] <author> Stonebraker, M., Hearst, M., and Potamianos, S., </author> <title> ``A Commentary on the POSTGRES Rules System,'' </title> <booktitle> SIGMOD Record 18(3), </booktitle> <month> Sept. </month> <year> 1989. </year>
Reference-contexts: POSTGRES has undergone several major releases since then. The first demo-ware system became operational in 1987 and was shown at the 1988 ACM-SIGMOD Conference. We released Version 1, described in [STON90a], to a few external users in June 1989. In response to a critique of the first rule system <ref> [STON89] </ref>, the rule system was redesigned [STON90b] and Version 2 was released in June 1990 with the new rule system. Version 3 appeared in 1991 and added support for multiple storage managers, an improved query executor and a rewritten rewrite rule system.
Reference: [STON90a] <author> Stonebraker, M., Rowe, L. A., and Hirohama, M., </author> <title> ``The Implementation of POSTGRES,'' </title> <journal> IEEE Transactions on Knowledge and Data Engineering 2(1), </journal> <month> March </month> <year> 1990. </year>
Reference-contexts: POSTGRES has undergone several major releases since then. The first demo-ware system became operational in 1987 and was shown at the 1988 ACM-SIGMOD Conference. We released Version 1, described in <ref> [STON90a] </ref>, to a few external users in June 1989. In response to a critique of the first rule system [STON89], the rule system was redesigned [STON90b] and Version 2 was released in June 1990 with the new rule system.
Reference: [STON90b] <author> Stonebraker, M. et al., </author> <title> ``On Rules, Procedures, Caching and Views in Database Systems,'' </title> <booktitle> Proc. 1990 ACM-SIGMOD Conference on Manage ment of Data, </booktitle> <address> Atlantic City, N.J., </address> <month> June </month> <year> 1990. </year> <month> 77 </month>
Reference-contexts: The first demo-ware system became operational in 1987 and was shown at the 1988 ACM-SIGMOD Conference. We released Version 1, described in [STON90a], to a few external users in June 1989. In response to a critique of the first rule system [STON89], the rule system was redesigned <ref> [STON90b] </ref> and Version 2 was released in June 1990 with the new rule system. Version 3 appeared in 1991 and added support for multiple storage managers, an improved query executor and a rewritten rewrite rule system. For the most part, releases since then have focused on portability and reliability. <p> THE POSTGRES RULE SYSTEM Production rule systems are conceptually simple, but there are many subtle points involved in actually using them. Consequently, we will not attempt to explain the actual syntax and operation of the POSTGRES rule system here. Instead, you should read <ref> [STON90b] </ref> to understand some of these points and the theoretical foundations of the POSTGRES rule system before trying to use rules. The discussion in this section is intended to provide an overview of the POSTGRES rule system and point the user at helpful references and examples. <p> It is very powerful, and can be used for many things such as query language procedures, views, and versions. Examples can be found in /usr/local/postgres/src/regress/video, and further discussion is in the Reference Manual under define rule. The power of this rule system is discussed in [ONG90] as well as <ref> [STON90b] </ref>. Since each rule system is implemented quite differently, they work best in different situations. The query rewrite system is best when rules affect most of the instances in a class, while the instance-level system is best when a rule affects only a few instances. 63 15.
References-found: 8

