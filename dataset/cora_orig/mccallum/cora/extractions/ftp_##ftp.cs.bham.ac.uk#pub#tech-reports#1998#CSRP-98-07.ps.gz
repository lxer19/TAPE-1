URL: ftp://ftp.cs.bham.ac.uk/pub/tech-reports/1998/CSRP-98-07.ps.gz
Refering-URL: http://www.cs.bham.ac.uk/~wbl/biblio/gp-bibliography.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: E-mail: fR.Poli,W.B.Langdong@cs.bham.ac.uk  
Title: On the Ability to Search the Space of Programs of Standard, One-point and Uniform Crossover
Author: Riccardo Poli and W.B. Langdon 
Address: (UK)  
Affiliation: School of Computer Science The University of Birmingham  
Abstract: Technical Report: CSRP-98-7 January 1998 Abstract In this paper we study and compare the search properties of different crossover operators in genetic programming (GP) using probabilistic models and experiments to assess the amount of genetic material exchanged between the parents to generate the offspring. These operators are: standard crossover, one-point crossover and a new operator, uniform crossover. Our analysis suggests that standard crossover is a local and biased search operator not ideal to explore the search space of programs effectively. One-point crossover is better in some cases as it is able to perform a global search at the beginning of a run, but it suffers from the same problems as standard crossover later on. Uniform crossover largely overcomes these limitations as it is global and less biased.
Abstract-found: 1
Intro-found: 1
Reference: [Angeline, 1997] <author> Angeline, P. J. </author> <year> (1997). </year> <title> Subtree crossover: Building block engine or macromutation? In Koza, </title> <editor> J. R., Deb, K., Dorigo, M., Fogel, D. B., Garzon, M., Iba, 19 H., and Riolo, R. L., editors, </editor> <booktitle> Genetic Programming 1997: Proceedings of the Second Annual Conference, </booktitle> <pages> pages 9-17, </pages> <address> Stanford University, CA, USA. </address> <publisher> Morgan Kaufmann. </publisher>
Reference: [Chellapilla, 1997] <author> Chellapilla, K. </author> <year> (1997). </year> <title> Evolutionary programming with tree mutations: Evolving computer programs without crossover. </title> <editor> In Koza, J. R., Deb, K., Dorigo, M., Fogel, D. B., Garzon, M., Iba, H., and Riolo, R. L., editors, </editor> <booktitle> Genetic Programming 1997: Proceedings of the Second Annual Conference, </booktitle> <pages> pages 431-438, </pages> <address> Stanford University, CA, USA. </address> <publisher> Morgan Kaufmann. </publisher>
Reference: [Harries and Smith, 1997] <author> Harries, K. and Smith, P. </author> <year> (1997). </year> <title> Exploring alternative operators and search strategies in genetic programming. </title> <editor> In Koza, J. R., Deb, K., Dorigo, M., Fogel, D. B., Garzon, M., Iba, H., and Riolo, R. L., editors, </editor> <booktitle> Genetic Programming 1997: Proceedings of the Second Annual Conference, </booktitle> <pages> pages 147-155, </pages> <address> Stanford University, CA, USA. </address> <publisher> Morgan Kaufmann. </publisher>
Reference: [Ito et al., 1998] <author> Ito, T., Iba, I., and Sato, S. </author> <year> (1998). </year> <title> Non-destructive depth-dependent crossover for genetic programming. </title> <booktitle> In Proceedings of the First European Workshop on Genetic Programming, </booktitle> <address> EuroGP'98, Paris. </address> <note> Springer-Verlag. To appear. </note>
Reference: [Koza, 1992] <author> Koza, J. R. </author> <year> (1992). </year> <title> Genetic Programming: On the Programming of Computers by Natural Selection. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, USA. </address>
Reference-contexts: In the recent past this question has bothered ourselves and a number of other GP researchers when the idea that crossover was central and that mutation was unnecessary in GP strongly stressed in Koza's work <ref> [Koza, 1992, Koza, 1994] </ref> was questioned. Indeed, recent results highlight a limited performance advantage of crossover compared to mutation 1 based operators [O'Reilly and Oppacher, 1996, Luke and Spector, 1997, Angeline, 1997, Chellapilla, 1997]. <p> All functions have arity two, except NOT which has arity 1. In our experiments we used a generational GP system with a population size of 1000, an initial tree depth of 8, the "ramped half-and-half" initialisation procedure <ref> [Koza, 1992] </ref>, elitist selection, tournament selection with tournament size 7, a crossover probability of 0.7. All runs lasted for 50 generations (we did not stop the runs when the first solution was found).
Reference: [Koza, 1994] <author> Koza, J. R. </author> <year> (1994). </year> <title> Genetic Programming II: Automatic Discovery of Reusable Programs. </title> <publisher> MIT Press, </publisher> <address> Cambridge Massachusetts. </address>
Reference-contexts: In the recent past this question has bothered ourselves and a number of other GP researchers when the idea that crossover was central and that mutation was unnecessary in GP strongly stressed in Koza's work <ref> [Koza, 1992, Koza, 1994] </ref> was questioned. Indeed, recent results highlight a limited performance advantage of crossover compared to mutation 1 based operators [O'Reilly and Oppacher, 1996, Luke and Spector, 1997, Angeline, 1997, Chellapilla, 1997].
Reference: [Langdon and Poli, 1997] <author> Langdon, W. B. and Poli, R. </author> <year> (1997). </year> <title> An analysis of the MAX problem in genetic programming. </title> <editor> In Koza, J. R., Deb, K., Dorigo, M., Fogel, D. B., Garzon, M., Iba, H., and Riolo, R. L., editors, </editor> <booktitle> Genetic Programming 1997: Proceedings of the Second Annual Conference, </booktitle> <pages> pages 222-230, </pages> <address> Stanford University, CA, USA. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: is supported by simple calculations (similar to those reported in [Rosca and Ballard, 1995, Rosca, 1996]), by experiments in which the expected size of the offspring of full trees of very different depth was estimated and by other experiments and models of crossover behaviour in the MAX problem described in <ref> [Langdon and Poli, 1997] </ref>. In contrast, most crossover operators used in Genetic Algorithms (GAs) tend to include in the offspring material coming from both parents without a bias towards one or the other.
Reference: [Luke and Spector, 1997] <author> Luke, S. and Spector, L. </author> <year> (1997). </year> <title> A comparison of crossover and mutation in genetic programming. </title> <editor> In Koza, J. R., Deb, K., Dorigo, M., Fogel, D. B., Garzon, M., Iba, H., and Riolo, R. L., editors, </editor> <booktitle> Genetic Programming 1997: Proceedings of the Second Annual Conference, </booktitle> <pages> pages 240-248, </pages> <address> Stanford University, CA, USA. </address> <publisher> Morgan Kaufmann. </publisher>
Reference: [O'Reilly and Oppacher, 1996] <author> O'Reilly, U.-M. and Oppacher, F. </author> <year> (1996). </year> <title> A comparative analysis of GP. </title> <editor> In Angeline, P. J. and Kinnear, Jr., K. E., editors, </editor> <booktitle> Advances in Genetic Programming 2, chapter 2, </booktitle> <pages> pages 23-44. </pages> <publisher> MIT Press, </publisher> <address> Cambridge, MA, USA. </address>
Reference: [Poli, 1997] <author> Poli, R. </author> <year> (1997). </year> <title> Is crossover a local search operator? Position paper at the Workshop on Evolutionary Computation with Variable Size Representation at ICGA-97. </title> <note> Available at http://www.ai.mit.edu/people/unamay/icga-ws.html. 20 </note>
Reference-contexts: Indeed, recent results highlight a limited performance advantage of crossover compared to mutation 1 based operators [O'Reilly and Oppacher, 1996, Luke and Spector, 1997, Angeline, 1997, Chellapilla, 1997]. In <ref> [Poli, 1997] </ref> we proposed the hypothesis that this unexpected ineffectiveness of GP crossover might be due to the fact that crossover is a local and biased search operator which, as a result, is unable to search properly the space of programs. <p> To answer these questions we will proceed along the following lines extending and completing the ideas presented in <ref> [Poli, 1997] </ref>. Firstly we will propose a simple general theory of the amount of genetic material exchanged between the parents in each crossover operator. <p> This means that uniform crossover is a global search operator which, thanks to the convergence of the population towards a common shape (i.e. when GP starts behaving like a GA <ref> [Poli, 1997] </ref>) becomes progressively beneficially local like all GA crossover operators.
Reference: [Poli and Langdon, 1997a] <author> Poli, R. and Langdon, W. B. </author> <year> (1997a). </year> <title> An experimental anal-ysis of schema creation, propagation and disruption in genetic programming. </title> <editor> In Good-man, E., editor, </editor> <booktitle> Genetic Algorithms: Proceedings of the Seventh International Conference, </booktitle> <institution> Michigan State University, </institution> <address> East Lansing, MI, USA. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: So, standard crossover may be unable to effectively explore the neighbourhood of optima in the fitness landscape and to refine partial solutions. Given that one-point crossover makes the population converge <ref> [Poli and Langdon, 1997a] </ref>, at the end of a run all nodes in every tree could be selected freely, as in standard crossover.
Reference: [Poli and Langdon, 1997b] <author> Poli, R. and Langdon, W. B. </author> <year> (1997b). </year> <title> Genetic programming with one-point crossover. </title> <editor> In Chawdhry, P. K., Roy, R., and Pant, R. K., editors, </editor> <booktitle> Second On-line World Conference on Soft Computing in Engineering Design and Manufacturing. </booktitle> <publisher> Springer-Verlag London. </publisher>
Reference-contexts: A random crossover point is selected with a uniform probability among the stored links (crossover point selection). The two subtrees below the common crossover point are swapped in exactly the same way as in standard crossover (swap). An interesting variant of one-point crossover, which we call strict one-point crossover <ref> [Poli and Langdon, 1997b] </ref>, behaves exactly like one-point crossover except that the crossover point can be located only in the parts of the two trees which are exactly the same (i.e. which have the same functions in the nodes encountered traversing the trees from the root node). <p> This suggests that trees in the initial population should be large (with a size of the order of that we normally accept for end-of-run solutions) and diverse in terms 13 of shape and nodes. Indeed in the experiments reported in <ref> [Poli and Langdon, 1997b] </ref> we observed a marked beneficial effect of using bigger initial tree depths. <p> We claim nothing about the performance differences in terms of computational effort to find a solution between the different operators discussed in this paper, although our experience suggests that one-point crossover performs at least as well as standard crossover on the even-parity problems <ref> [Poli and Langdon, 1997b] </ref>. However, we expect this to depend entirely on the particular fitness landscape at hand.
Reference: [Poli and Langdon, 1997c] <author> Poli, R. and Langdon, W. B. </author> <year> (1997c). </year> <title> A new schema theory for genetic programming with one-point crossover and point mutation. </title> <editor> In Koza, J. R., Deb, K., Dorigo, M., Fogel, D. B., Garzon, M., Iba, H., and Riolo, R. L., editors, </editor> <booktitle> Genetic Programming 1997: Proceedings of the Second Annual Conference, </booktitle> <pages> pages 278-285, </pages> <address> Stanford University, CA, USA. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Also experiments were performed with point mutation, in which a function in the tree is substituted with another function with the same arity or a terminal is substituted with another terminal with a constant probability (we used a mutation probability per node of 1/128) <ref> [Poli and Langdon, 1997c] </ref>. 14 of the times, i.e. it is a local search operator. <p> Perhaps this behaviour is the reason why crossover-based GP has seldom been shown to have a edge over mutation-based approaches. One-point crossover, a form of crossover introduced in our recent research <ref> [Poli and Langdon, 1997c] </ref>, is better as, in certain conditions, it is able to perform a global search of the search space, at the beginning of a run. However, the search becomes local and biased generation after generation. Uniform crossover seems able to overcome these limitations.
Reference: [Poli and Langdon, 1997d] <author> Poli, R. and Langdon, W. B. </author> <year> (1997d). </year> <title> A review of theoretical and experimental results on schemata in genetic programming. </title> <type> Technical Report CSRP-97-27, </type> <institution> University of Birmingham, </institution> <address> B15 2TT, UK. </address> <note> Presented at ET-97. </note>
Reference: [Rosca, 1996] <author> Rosca, J. </author> <year> (1996). </year> <title> Generality versus size in genetic programming. </title> <editor> In Koza, J. R., Goldberg, D. E., Fogel, D. B., and Riolo, R. L., editors, </editor> <booktitle> Genetic Programming 1996: Proceedings of the First Annual Conference, </booktitle> <pages> pages 381-387, </pages> <address> Stanford University, CA, USA. </address> <publisher> MIT Press. </publisher>
Reference-contexts: It is biased as, probabilistically, it concentrates on certain types of local adjustments, namely very near the leaves of the tree. This hypothesis is supported by simple calculations (similar to those reported in <ref> [Rosca and Ballard, 1995, Rosca, 1996] </ref>), by experiments in which the expected size of the offspring of full trees of very different depth was estimated and by other experiments and models of crossover behaviour in the MAX problem described in [Langdon and Poli, 1997].
Reference: [Rosca and Ballard, 1995] <author> Rosca, J. and Ballard, D. H. </author> <year> (1995). </year> <title> Causality in genetic programming. </title> <editor> In Eshelman, L., editor, </editor> <booktitle> Genetic Algorithms: Proceedings of the Sixth International Conference (ICGA95), </booktitle> <pages> pages 256-263, </pages> <address> Pittsburgh, PA, USA. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: It is biased as, probabilistically, it concentrates on certain types of local adjustments, namely very near the leaves of the tree. This hypothesis is supported by simple calculations (similar to those reported in <ref> [Rosca and Ballard, 1995, Rosca, 1996] </ref>), by experiments in which the expected size of the offspring of full trees of very different depth was estimated and by other experiments and models of crossover behaviour in the MAX problem described in [Langdon and Poli, 1997].
Reference: [Rosca and Ballard, 1996] <author> Rosca, J. P. and Ballard, D. H. </author> <year> (1996). </year> <title> Complexity drift in evolutionary computation with tree representations. </title> <type> Technical Report NRL5, </type> <institution> University of Rochester, Computer Science Department, Rochester, NY, USA. </institution>
Reference: [Russell and Norvig, 1995] <author> Russell, S. J. and Norvig, P. </author> <year> (1995). </year> <title> Artificial Intelligence: A Modern Approach. </title> <publisher> Prendice Hall, </publisher> <address> Englewood Cliffs, New Jersey. </address>
Reference-contexts: It is very well known from the AI literature that the performance of any search algorithm depends crucially on the representation adopted for the states (tentative solutions) of the problem and the operators used to produce new states <ref> [Russell and Norvig, 1995] </ref>. In this paper we concentrate on the latter and ask whether different crossover operators have the features necessary to explore the space of possible programs efficiently and effectively.
Reference: [Soule and Foster, 1997] <author> Soule, T. and Foster, J. A. </author> <year> (1997). </year> <title> Code size and depth flows in genetic programming. </title> <editor> In Koza, J. R., Deb, K., Dorigo, M., Fogel, D. B., Garzon, M., Iba, H., and Riolo, R. L., editors, </editor> <booktitle> Genetic Programming 1997: Proceedings of the Second Annual Conference, </booktitle> <pages> pages 313-320, </pages> <address> Stanford University, CA, USA. </address> <publisher> Morgan Kaufmann. </publisher> <pages> 21 </pages>
Reference-contexts: As usually some sort of bloating is present, we expect E [S x Std ] to grow. Even if it has been reported that trees tend not to grow balanced <ref> [Soule and Foster, 1997] </ref>, it may still take several generations before a trees are statistically significantly unbalanced. So, we should expect the growth of E [S x Std ] to be very slow, probably much slower than the growth of the average program size.
References-found: 19

