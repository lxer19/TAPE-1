URL: http://www.csc.ncsu.edu/eos/service/ece/project/rtcomm/WWW/OnlineDynBWAlloc.ps.Z
Refering-URL: http://www.csc.ncsu.edu/eos/service/ece/project/rtcomm/WWW/qos.html
Root-URL: http://www.csc.ncsu.edu
Title: On-line Dynamic Bandwidth Allocation  
Author: Errin W. Fulp and Douglas S. Reeves 
Affiliation: Departments of ECE and CSC North Carolina State University  
Abstract: Network multimedia applications require certain performance guarantees that can be provided through proper resource allocation. Allocation techniques are needed to provide these guarantees as efficiently as possible since resources are limited. This paper presents an allocation method called Dynamic Search Algorithm (DSA+). DSA+ is an on-line algorithm that dynamically adjusts the resource allocation based upon the measured quality of service. Advantages of DSA+ include efficient use of resources, reasonable implementation cost and stringent quality of service control. In this paper we demonstrate how DSA+ dynamically allocates bandwidth to achieve a given loss rate for actual variable bit rate MPEG videos. Performance and cost advantages over other allocation methods are presented, as well as allocation for multiple hop connections. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Adas. </author> <title> Supporting Real Time VBR Video Using Dynamic Reservation Based on Linear Prediction. </title> <booktitle> In IEEE INFOCOM'96, </booktitle> <pages> pages 1467-1483, </pages> <year> 1996. </year>
Reference-contexts: The video is then transmitted at the calculated rates, so to prevent buffer overflow and underflow. For interactive applications, where the traffic source is not known nor directly controllable, these methods are not suitable. On-line methods periodically renegotiate re 1 source allocation based upon predicted traffic be-havior <ref> [1] </ref> [4] [8] [10] [11] [13]. Predictions are derived from measurements of the traffic and/or QoS observations. Such methods do not have the problems associated with off-line methods and may be implemented by filters [1], neural networks [4], dynamic algorithms [8] [10] or some other sampling procedure [11] [13]. <p> On-line methods periodically renegotiate re 1 source allocation based upon predicted traffic be-havior <ref> [1] </ref> [4] [8] [10] [11] [13]. Predictions are derived from measurements of the traffic and/or QoS observations. Such methods do not have the problems associated with off-line methods and may be implemented by filters [1], neural networks [4], dynamic algorithms [8] [10] or some other sampling procedure [11] [13]. These methods also have the advantage of adjusting the resource allocation with respect to a desired QoS.
Reference: [2] <author> A. Benveniste, M. Metivier, and P. Priouret. </author> <title> Adaptive Algorithms and Stochastic Approximations. </title> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: In this paper we present an on-line renegotiation method called the Dynamic Search Algorithm (DSA+) [6]. Dynamic algorithms (also referred to as adaptive algorithms) have been applied in various applications such as system identification, filtering and pattern recognition <ref> [2] </ref>. DSA+ encapsulates the general dynamic algorithm form with new features to better handle non-stationary sources. DSA+ allocates resources so to meet a desired QoS. In this paper DSA+ is used to control the loss rate of actual MPEG VBR videos by the appropriate allocation of bandwidth. <p> This is done since, in an actual network, resources are more easily reduced than increased. Varying the gain is also beneficial if the source is non-stationary <ref> [2] </ref>. renegotiation instant t n . As seen in the figure, the renegotiation interval is lengthened (doubled) in two cases (lines 4 and 7).
Reference: [3] <author> C.-S. Chang and J. A. Thomas. </author> <title> Effective Bandwidth in High-Speed Digital Networks. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 13(6) </volume> <pages> 1091-1099, </pages> <month> Aug. </month> <year> 1995. </year>
Reference-contexts: Third, the number of parameters required should be kept small, so to reduce the complexity of the allocation method. A layered n-space Markov Model may adequately characterize a source, nevertheless the computation of allocation amounts may become intractable for real time applications <ref> [3] </ref>. Current allocation methods can be categorized as either off-line or on-line. Off-line methods predetermine allocation amounts before transmission begins. Such a method may allocate one resource level (static) for the duration of the application, or may renegotiate the resource level at various times.
Reference: [4] <author> S. Chong, S.-Q. Li, and J. Ghosh. </author> <title> Predictive Dynamic Bandwidth Allocation for Efficient Transport of Real-Time VBR Video over ATM. </title> <journal> IEEE Journal on Selected Areas in Communication, </journal> <volume> 13(1) </volume> <pages> 12-23, </pages> <month> January </month> <year> 1995. </year>
Reference-contexts: The video is then transmitted at the calculated rates, so to prevent buffer overflow and underflow. For interactive applications, where the traffic source is not known nor directly controllable, these methods are not suitable. On-line methods periodically renegotiate re 1 source allocation based upon predicted traffic be-havior [1] <ref> [4] </ref> [8] [10] [11] [13]. Predictions are derived from measurements of the traffic and/or QoS observations. Such methods do not have the problems associated with off-line methods and may be implemented by filters [1], neural networks [4], dynamic algorithms [8] [10] or some other sampling procedure [11] [13]. <p> On-line methods periodically renegotiate re 1 source allocation based upon predicted traffic be-havior [1] <ref> [4] </ref> [8] [10] [11] [13]. Predictions are derived from measurements of the traffic and/or QoS observations. Such methods do not have the problems associated with off-line methods and may be implemented by filters [1], neural networks [4], dynamic algorithms [8] [10] or some other sampling procedure [11] [13]. These methods also have the advantage of adjusting the resource allocation with respect to a desired QoS.
Reference: [5] <author> W.-C. Feng, F. Jahanian, and S. Sechrest. </author> <title> An Optimal Bandwidth Allocation Strategy for the Delivery of Compressed Prerecorded Video. </title> <note> To appear in ACM/Springer-Verlag Multimedia Systems Journal. </note>
Reference-contexts: Other off-line methods that renegotiate resource levels result in better utilization; on the other hand, they require complete control of the traffic source <ref> [5] </ref>. For example, the off-line method developed by Feng, et al. determines the minimum number of renegotiations (increases or decreases in resource allocation) required for the playback of a previously-stored MPEG video [5]. The video is then transmitted at the calculated rates, so to prevent buffer overflow and underflow. <p> resource levels result in better utilization; on the other hand, they require complete control of the traffic source <ref> [5] </ref>. For example, the off-line method developed by Feng, et al. determines the minimum number of renegotiations (increases or decreases in resource allocation) required for the playback of a previously-stored MPEG video [5]. The video is then transmitted at the calculated rates, so to prevent buffer overflow and underflow. For interactive applications, where the traffic source is not known nor directly controllable, these methods are not suitable. <p> Small but non-zero losses are considered to be acceptable for typical multimedia applications. Instead of a weakness, we consider the ability to manage QoS targets based upon the user's needs to be a strength of any on-line algorithm. Other offline methods, such as Feng's algorithm <ref> [5] </ref>, are not comparable, as they directly control the transmission of the source. Hsu's method is a dynamic algorithm which has been proven to find the minimum bandwidth required for a stationary MMBP source [8].
Reference: [6] <author> E. W. Fulp and D. S. Reeves. </author> <title> Dynamic Bandwidth Allocation Techniques. </title> <type> Technical Report TR-97/08, </type> <institution> Center for Advanced Computing and Communications, </institution> <month> Aug. </month> <year> 1997. </year>
Reference-contexts: In addition, most methods suffer from a large number of renegotiations, and/or rely on a very complex measurement and allocation algorithm. In this paper we present an on-line renegotiation method called the Dynamic Search Algorithm (DSA+) <ref> [6] </ref>. Dynamic algorithms (also referred to as adaptive algorithms) have been applied in various applications such as system identification, filtering and pattern recognition [2]. DSA+ encapsulates the general dynamic algorithm form with new features to better handle non-stationary sources. DSA+ allocates resources so to meet a desired QoS. <p> Relevant statistics of each video are presented in <ref> [6] </ref> and [12]. As reported in [12], the Hurst parameters indicate all videos exhibit long-range dependency, and significant peak-to-mean ratios ranging from 18.4 to 4.63 based on average frames. <p> This selection represents a variety of online and off-line allocation methods. Each is briefly introduced and explained. DSA+ initial parameters, the same for each video, are given in table 1. The selection of these parameters as well as the robustness of DSA+ to initial parameters is presented in <ref> [6] </ref>. Peak rate allocation was chosen since it is an accepted allocation method. To determine the ex act peak rate requires the trace in advance. For that reason, this is an off-line method. In a sense this comparison is unfair to the remaining on-line methods. <p> The significant savings was in the number of renegotiations. The algorithm required no more than 52 renegotiations and on average only 44% were for more resources. The number can be further reduced with a lower initial bandwidth value, as discussed in <ref> [6] </ref>. On average Hsu's algorithm required 47 times more renegotiations, while RED-VBR required 8 times as many. The magnitude of increases were relatively small, 189 Kbps, while RED-VBR increased three times as much. This may be problematic as contention for limited resources increases.
Reference: [7] <author> M. W. Garret and W. Willinger. </author> <title> Analysis, Modeling and Generation of Self-Similar VBR Video Traffic. </title> <booktitle> In SIGCOMM'94, </booktitle> <pages> pages 269-280, </pages> <address> London, </address> <year> 1994. </year>
Reference-contexts: In the case of live or interactive video, the user must guess at these characteristics. Second, parameters may not adequately characterize the source. It has been shown for MPEG-compressed video that long-range dependencies occur, which implies that standard statistical models are probably inadequate <ref> [7] </ref>. Third, the number of parameters required should be kept small, so to reduce the complexity of the allocation method. A layered n-space Markov Model may adequately characterize a source, nevertheless the computation of allocation amounts may become intractable for real time applications [3].
Reference: [8] <author> I. Hsu and J. Walrand. </author> <title> Dynamic Bandwidth Allocation for ATM Switches. </title> <journal> Journal of Applied Probability, </journal> <volume> 33(3) </volume> <pages> 758-771, </pages> <year> 1996. </year>
Reference-contexts: The video is then transmitted at the calculated rates, so to prevent buffer overflow and underflow. For interactive applications, where the traffic source is not known nor directly controllable, these methods are not suitable. On-line methods periodically renegotiate re 1 source allocation based upon predicted traffic be-havior [1] [4] <ref> [8] </ref> [10] [11] [13]. Predictions are derived from measurements of the traffic and/or QoS observations. Such methods do not have the problems associated with off-line methods and may be implemented by filters [1], neural networks [4], dynamic algorithms [8] [10] or some other sampling procedure [11] [13]. <p> renegotiate re 1 source allocation based upon predicted traffic be-havior [1] [4] <ref> [8] </ref> [10] [11] [13]. Predictions are derived from measurements of the traffic and/or QoS observations. Such methods do not have the problems associated with off-line methods and may be implemented by filters [1], neural networks [4], dynamic algorithms [8] [10] or some other sampling procedure [11] [13]. These methods also have the advantage of adjusting the resource allocation with respect to a desired QoS. To date no on-line method has the ability to tightly control the QoS for such difficult applications as transmission of compressed video. <p> Other offline methods, such as Feng's algorithm [5], are not comparable, as they directly control the transmission of the source. Hsu's method is a dynamic algorithm which has been proven to find the minimum bandwidth required for a stationary MMBP source <ref> [8] </ref>. This method was chosen since it is a simple on-line method that requires minimal source information. The algorithm renegotiates bandwidth over fixed length intervals, using previous loss measurements and a simple difference error function.
Reference: [9] <author> E. W. Knightly and H. Zhang. </author> <title> Traffic Characterization and Switch Utilization using a Deterministic Bounding Interval Dependent Traffic Model. </title> <booktitle> In Proceedings of IEEE INFOCOM'95, </booktitle> <pages> pages 1137-1145, </pages> <address> Boston, MA, </address> <month> Apr. </month> <year> 1995. </year>
Reference-contexts: RED-VBR is a method for supporting VBR video, with an off-line or on-line allocation technique. For this comparison, the on-line version was implemented using a similar segmentation algorithm as presented in [13]. RED-VBR is based upon the D-BIND model <ref> [9] </ref>. This model consists of a set of rate-interval pairs, which characterize the source over various interval lengths. The allocation algorithm stores the currently reserved D-BIND parameters and calculates the D-BIND parameters for the last M frames.
Reference: [10] <author> S. Rampal, D. Reeves, Y. Viniotis, and D. Ar-grawal. </author> <title> Dynamic Resource Allocation Based on Measured QoS. </title> <booktitle> In The Fifth ICCCN-International Conference On Computer Communications and Networks, </booktitle> <pages> pages 24-27, </pages> <year> 1996. </year>
Reference-contexts: For interactive applications, where the traffic source is not known nor directly controllable, these methods are not suitable. On-line methods periodically renegotiate re 1 source allocation based upon predicted traffic be-havior [1] [4] [8] <ref> [10] </ref> [11] [13]. Predictions are derived from measurements of the traffic and/or QoS observations. Such methods do not have the problems associated with off-line methods and may be implemented by filters [1], neural networks [4], dynamic algorithms [8] [10] or some other sampling procedure [11] [13]. <p> re 1 source allocation based upon predicted traffic be-havior [1] [4] [8] <ref> [10] </ref> [11] [13]. Predictions are derived from measurements of the traffic and/or QoS observations. Such methods do not have the problems associated with off-line methods and may be implemented by filters [1], neural networks [4], dynamic algorithms [8] [10] or some other sampling procedure [11] [13]. These methods also have the advantage of adjusting the resource allocation with respect to a desired QoS. To date no on-line method has the ability to tightly control the QoS for such difficult applications as transmission of compressed video. <p> The interval is doubled on line 7 when P n and P n1 are on different sides of (one greater than, the other less than) the desired CLP. Doubling the interval length also reduces the number of renegotiations required over time, a unique feature to both DSA+ and REQS <ref> [10] </ref>. As mentioned in the introduction, traffic sources such as MPEG-compressed video are complex due to their non-stationary behavior and long range dependencies. A potential problem with the algorithm as shown is that the traffic characteristics may change drastically during a renegotiation interval, while the server rate cannot be renegotiated. <p> For each experiment the system described in section 2.1 was simulated. The desired QoS was a CLP of 1 fi 10 3 and the queue capacity was 80 ATM cells (48 byte payload) <ref> [10] </ref>. While the targeted QoS was cell loss probability, the queue size was selected to provide a maximum cell delay as well. The minimum allowed bandwidth was 1 Mbps. The queue length and the minimum bandwidth yields a maximum delay of 34 msec for any cell.
Reference: [11] <author> D. Reininger, G. Ramamurthy, and D. Raychaud-huri. </author> <title> VBR MPEG Video Coding with Dynamic Bandwidth Renegotiation. </title> <booktitle> In IEEE International Conference on Communications, </booktitle> <pages> pages 1773-1777, </pages> <year> 1995. </year>
Reference-contexts: For interactive applications, where the traffic source is not known nor directly controllable, these methods are not suitable. On-line methods periodically renegotiate re 1 source allocation based upon predicted traffic be-havior [1] [4] [8] [10] <ref> [11] </ref> [13]. Predictions are derived from measurements of the traffic and/or QoS observations. Such methods do not have the problems associated with off-line methods and may be implemented by filters [1], neural networks [4], dynamic algorithms [8] [10] or some other sampling procedure [11] [13]. <p> predicted traffic be-havior [1] [4] [8] [10] <ref> [11] </ref> [13]. Predictions are derived from measurements of the traffic and/or QoS observations. Such methods do not have the problems associated with off-line methods and may be implemented by filters [1], neural networks [4], dynamic algorithms [8] [10] or some other sampling procedure [11] [13]. These methods also have the advantage of adjusting the resource allocation with respect to a desired QoS. To date no on-line method has the ability to tightly control the QoS for such difficult applications as transmission of compressed video. <p> Nevertheless if more resources are required yet not available the users QoS will suffer. If the QoS manager has access to the MPEG compress rate, the shortage of resources can be compensated by altering the Q factor of the compression <ref> [11] </ref>. The result is a loss of picture quality, until resources are available.
Reference: [12] <author> O. Rose. </author> <title> Statistical Properties of MPEG Video Traffic and Their Impact on Traffic Modeling in ATM Systems. </title> <type> Technical Report 101, </type> <institution> University of Wurzburg Institute of Computer Science, </institution> <month> Feb. </month> <year> 1995. </year>
Reference-contexts: A more restrictive bandwidth selection will only improve the performance of the algorithm. Fifteen MPEG-compressed video traces were obtained from Oliver Rose at the University of Wurzburg, Germany <ref> [12] </ref> 1 . <p> Relevant statistics of each video are presented in [6] and <ref> [12] </ref>. As reported in [12], the Hurst parameters indicate all videos exhibit long-range dependency, and significant peak-to-mean ratios ranging from 18.4 to 4.63 based on average frames. <p> Relevant statistics of each video are presented in [6] and <ref> [12] </ref>. As reported in [12], the Hurst parameters indicate all videos exhibit long-range dependency, and significant peak-to-mean ratios ranging from 18.4 to 4.63 based on average frames. Therefore it is evident that these are very difficult sources to regulate, and to date there has been no successful attempt to efficiently manage them on-line.
Reference: [13] <author> H. Zhang and E. W. Knightly. RED-VBR: </author> <title> A Renegotiation-Based Approach to Support Delay-Sensitive VBR Video. </title> <journal> Multimedia Systems, </journal> <volume> 5 </volume> <pages> 164-176, </pages> <year> 1997. </year>
Reference-contexts: For interactive applications, where the traffic source is not known nor directly controllable, these methods are not suitable. On-line methods periodically renegotiate re 1 source allocation based upon predicted traffic be-havior [1] [4] [8] [10] [11] <ref> [13] </ref>. Predictions are derived from measurements of the traffic and/or QoS observations. Such methods do not have the problems associated with off-line methods and may be implemented by filters [1], neural networks [4], dynamic algorithms [8] [10] or some other sampling procedure [11] [13]. <p> traffic be-havior [1] [4] [8] [10] [11] <ref> [13] </ref>. Predictions are derived from measurements of the traffic and/or QoS observations. Such methods do not have the problems associated with off-line methods and may be implemented by filters [1], neural networks [4], dynamic algorithms [8] [10] or some other sampling procedure [11] [13]. These methods also have the advantage of adjusting the resource allocation with respect to a desired QoS. To date no on-line method has the ability to tightly control the QoS for such difficult applications as transmission of compressed video. <p> Small variations in the initial parameter values did result in over-allocation. RED-VBR is a method for supporting VBR video, with an off-line or on-line allocation technique. For this comparison, the on-line version was implemented using a similar segmentation algorithm as presented in <ref> [13] </ref>. RED-VBR is based upon the D-BIND model [9]. This model consists of a set of rate-interval pairs, which characterize the source over various interval lengths. The allocation algorithm stores the currently reserved D-BIND parameters and calculates the D-BIND parameters for the last M frames. <p> The allocation algorithm stores the currently reserved D-BIND parameters and calculates the D-BIND parameters for the last M frames. A renegotiation takes place when a difference exists between the reserved and measured D-BIND parameters; more details are presented in <ref> [13] </ref>. RED-VBR does not use nor measure the QoS for allocation, since it attempts to dynamically allocate bandwidth to provide zero losses. For this reason one should expect this method to allocate higher bandwidth amounts and renegotiate more often to meet this stringent requirement. <p> QoS is an issue when sources are multiplexed together and is 4 ff fi MIN INTERVAL P M (seconds) 1.2 1.5 10 48 48 Table 2: RED-VBR parameter values. provided on a "per-segment" basis as described in <ref> [13] </ref>. Since the focus of this paper is resource allocation, only the renegotiation and allocation performance of this method will be considered. The initial parameters are given in table 2.
References-found: 13

