URL: http://theory.lcs.mit.edu/~madhu/papers/soda95.ps
Refering-URL: http://theory.lcs.mit.edu/~madhu/papers.html
Root-URL: 
Email: Email: famotz,sbar,madhug@watson.ibm.com.  Email: mayer@cs.columbia.edu.  
Title: Guaranteeing Fair Service to Persistent Dependent Tasks  
Author: Amotz Bar-Noy Alain Mayer Baruch Schieber Madhu Sudan 
Note: Part of this work was done while the author was at the IBM T. J. Watson Research Center. Partially supported by an IBM Graduate Fellowship, NSF grant CCR-93-16209, and CISE Institutional Infrastructure Grant CDA-90-24735  
Address: Yorktown Heights, NY 10598.  New York, NY 10027.  
Affiliation: IBM Research Division, T. J. Watson Research Center,  Dept. of Computer Science, Columbia University,  
Date: June 12, 1996  
Abstract: We introduce a new scheduling problem that is motivated by applications in the area of access and flow-control in high-speed and wireless networks. An instance of the problem consists of a set of persistent tasks that have to be scheduled repeatedly. Each task has a demand to be scheduled "as often as possible". There is no explicit limit on the number of tasks that can be scheduled concurrently. However, such limits are imposed implicitly because some tasks may be in conflict and cannot be scheduled simultaneously. These conflicts are presented in the form of a conflict graph. We define parameters which quantify the fairness and regularity of a given schedule. We then proceed to show lower bounds on these parameters, and present fair and efficient scheduling algorithms for the case where the conflict graph is an interval graph. Some of the results presented here extend to the case of perfect graphs and circular-arc graphs as well. 
Abstract-found: 1
Intro-found: 1
Reference: [AS90] <author> B. Awerbuch and M. Saks, </author> <title> A Dining Philosophers Algorithm with Polynomial Response Time. </title> <booktitle> Proc. 31st IEEE Symp. on Foundations of Computer Science (1990), </booktitle> <pages> 65-75. </pages>
Reference-contexts: To deal with feasible frequencies that cannot be scheduled in a P -fair manner, we define weaker versions of regularity. The dependency property captures most of the work done based on the well-known "Dining Philosophers" paradigm (see for example [Dijk71], [Lyn80], [CM84], <ref> [AS90] </ref>, [CS92], and [BP92]). In this setting, Lynch [Lyn80] was the first to explicitly consider the response time for each task. The goal of successive works was to make the response time of a node to depend only on its local neighborhood in the conflict graph (see, e.g., [BP92]).
Reference: [BCPV96] <author> S. Baruah, N. Cohen, C. Plaxton, and D. Varvel, </author> <booktitle> Proportionate Progress: </booktitle>
Reference-contexts: They give an algorithm which achieves full processor utilization for this task. More recently, the problem of scheduling persistent tasks has been studied in the work of Baruah et al. <ref> [BCPV96] </ref>. <p> It indicates how much a schedule allows task i to drift away from its expected number of scheduled units: d i = max fjf i t r=1 Note that if a schedule S achieves drift d i &lt; 1 for all i, then it is P-fair as defined in <ref> [BCPV96] </ref>. A schedule achieves its strongest form of regularity if each task i is scheduled every 1=f i time-units (except for its first appearance). <p> Furthermore, we have shown that a drift of one (i.e., P-fairness) is not achievable even for simple interval conflict graphs. This can be viewed as an indication that the problem in this paper is inherently more complex than the one considered in <ref> [BCPV96] </ref>. Many open problems remain. The exact complexity of computing a max-min fair frequency assignment in general graphs is not known and there is no characterization of when such an assignment is easy to compute.
References-found: 2

