URL: http://www.research.microsoft.com/crypto/papers/distel.ps
Refering-URL: http://www.research.microsoft.com/crypto/
Root-URL: http://www.research.microsoft.com
Title: Distributing the Power of a Government to Enhance the Privacy of Voters (Extended Abstract)  
Author: Josh Cohen Benaloh Moti Yung 
Affiliation: Yale University  Columbia University  
Abstract-found: 0
Intro-found: 1
Reference: [Bro85] <author> Broder, A. </author> <title> "A Provably Secure Polynomial Approximation Scheme for the Distributed Lottery Problem." </title> <booktitle> Proc. 4 th ACM Symp. on Principles of Distributed Computing, Minaki, ON (Aug. </booktitle> <year> 1985), </year> <pages> 136-148. </pages>
Reference-contexts: This gives an electronic mechanism for holding a large-scale election amongst untrusted parties which is far more useful in "real-world" applications than the previous scheme. The combination of distributed computing and cryptography has become increasingly important. Applications of cryptography to distributed computing have been seen recently in <ref> [Bro85] </ref>, [FeMi85], and [CGMA85]. Secret-ballot elections seem to be a natural problem in distributed computing. [DLM82], [Mer83], and [Yao82] proposed completely distributed boardroom election schemes in which participants pass encrypted messages around a room and then decrypt the messages to reveal the election tally.
Reference: [Cha81] <author> Chaum, D. </author> <title> "Untraceable Electronic Mail, Return Addresses, and Digital Pseudonyms." </title> <journal> Comm. ACM 24, </journal> <volume> 2, </volume> <month> (Feb. </month> <year> 1981), </year> <pages> 84-88. </pages>
Reference-contexts: These schemes suffer from a lack of robustness in that if any of the participants fails or otherwise misbehaves during the election process, the scheme fails to produce any tally whatsoever. Chaum in <ref> [Cha81] </ref> proposed a centralized scheme using a "mix" which scrambles messages to protect the identities of the senders.
Reference: [CGMA85] <author> Chor, B., Goldwasser, S., Micali, S., and Awerbuch, B. </author> <title> "Verifiable Secret Sharing and Achieving Simultaneity in the Presence of Faults." </title> <booktitle> Proc. 26 th IEEE Symp. on Foundations of Computer Science, </booktitle> <address> Portland, OR (Oct. </address> <year> 1985), </year> <pages> 383-395. </pages>
Reference-contexts: The combination of distributed computing and cryptography has become increasingly important. Applications of cryptography to distributed computing have been seen recently in [Bro85], [FeMi85], and <ref> [CGMA85] </ref>. Secret-ballot elections seem to be a natural problem in distributed computing. [DLM82], [Mer83], and [Yao82] proposed completely distributed boardroom election schemes in which participants pass encrypted messages around a room and then decrypt the messages to reveal the election tally.
Reference: [CoFi85] <author> Cohen, J. and Fischer, M. </author> <title> "A Robust and Verifiable Cryptographically Secure Election Scheme." </title> <booktitle> Proc. 26 th IEEE Symp. on Foundations of Computer Science, </booktitle> <address> Portland, OR (Oct. </address> <year> 1985), </year> <pages> 372-382. </pages>
Reference-contexts: 1 Introduction In this paper, we distribute the functions of the government in the cryptographic election scheme of <ref> [CoFi85] </ref>. In so doing, we are able to achieve privacy of individual votes in a much stronger sense without giving up any of the previously attained properties of robustness or verifiability. <p> The idea of a mix provides an elegant solution to the election problem. However, no work has yet been done towards proving such a scheme secure with respect to some underlying set of cryptographic assumptions. The centralized election scheme proposed in <ref> [CoFi85] </ref> achieves the desirable robustness and verifiability properties, and these properties are proven to hold with high probability. The privacy property, however, is not as strong as is required for a practical election because votes, while being secure from other voters, are easily readable by the central government. <p> The privacy property, however, is not as strong as is required for a practical election because votes, while being secure from other voters, are easily readable by the central government. By distributing the functionality of the central government of <ref> [CoFi85] </ref>, the scheme presented here protects the privacy of individual votes. No one component of the government can determine how an individual voter voted. <p> election scheme, there is no probabilistic polynomial-time procedure which can, with probability greater than 1 2 +", distinguish between any two assignments of votes to voters among any subset of honest voters with the same sub-tally over that set. 3 A Distributed Election Scheme We extend the election paradigm of <ref> [CoFi85] </ref> by distributing the government into a set of tellers. The paradigm has eight basic phases. In phase 1, each teller selects and posts a pair of election parameters. <p> This problem amounts to the problem of distinguishing between numbers which are r th -residues and numbers which are not r th -residues modulo an admissible n. A precise formulation of the weak r th -residue assumption is given in <ref> [CoFi85] </ref>. The proof described here is almost identical to that in [CoFi85]. By assuming the existence of one honest teller, we can view that teller as a central government and use the prior proof almost unchanged. <p> A precise formulation of the weak r th -residue assumption is given in <ref> [CoFi85] </ref>. The proof described here is almost identical to that in [CoFi85]. By assuming the existence of one honest teller, we can view that teller as a central government and use the prior proof almost unchanged. <p> The two assignments s i and s i+1 now satisfy the conditions of theorem 2 and thereby yield the corollary. 6 Discussion and Conclusion By distributing the capabilities of the centralized government election protocol of <ref> [CoFi85] </ref>, we have substantially increased the privacy of electors. In the previous work, the government was able to determine how every voter cast its vote in the election. In the new scheme, even if only one teller is honest, the votes of honest voters remain private.
Reference: [Coh86a] <author> Cohen, J. </author> <title> "Improving Privacy in Cryptographic Elections." </title> <institution> TR-454, Yale University, Department of Computer Science, </institution> <address> New Haven, CT (Feb. </address> <year> 1986). </year>
Reference-contexts: One disadvantage of this scheme is that if a teller, at any point of the protocol, ceases execution or otherwise deviates from the protocol in a detectable way, then no tally is produced, and the election must be restarted from the beginning (without the corrupted teller). <ref> [Coh86a] </ref> presents a fault-tolerant version of this scheme in which the election can be continued and a tally produced even in the presence of faulty tellers. [Coh86a] also describes a variant of the original centralized election scheme in which the government can announce the winner of an election and prove the <p> the protocol in a detectable way, then no tally is produced, and the election must be restarted from the beginning (without the corrupted teller). <ref> [Coh86a] </ref> presents a fault-tolerant version of this scheme in which the election can be continued and a tally produced even in the presence of faulty tellers. [Coh86a] also describes a variant of the original centralized election scheme in which the government can announce the winner of an election and prove the result to the election participants without revealing the actual tally of the election.
Reference: [Coh86b] <author> Cohen, J. </author> <title> "Cryptographic Capsules: </title>
Reference-contexts: The use of ballots here and the means by which they are shown to be equivalent actually describe a special case of cryptographic capsules. For a discussion of cryptographic capsules, see <ref> [Coh86b] </ref>. 3.5 The Beacon and its Simulation Various aspects of the election scheme (including the sub-protocols of sections 3.3 and 3.4) made extensive use of a generally trusted source of random bits.
References-found: 6

