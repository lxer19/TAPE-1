URL: http://www.csc.ncsu.edu/faculty/mpsingh/papers/mas/ldai-96.ps
Refering-URL: http://www.csc.ncsu.edu/faculty/mpsingh/papers/mas/
Root-URL: http://www.csc.ncsu.edu
Email: singh@ncsu.edu  huhns@sc.edu  
Phone: 2  
Title: Challenges for Machine Learning in Cooperative Information Systems  
Author: Munindar P. Singh and Michael N. Huhns 
Address: Raleigh, NC 27695-8206, USA  SC 29208, USA  
Affiliation: 1 Department of Computer Science North Carolina State University  Department of Electrical Computer Engineering University of South Carolina Columbia,  
Abstract: Cooperative Information Systems (CISs) are multiagent systems with organizational and database abstractions geared to the large open heterogeneous information environments of today. CIS is also the name of the associated research area, which has emerged from the synthesis of distributed databases and distributed artificial intelligence. In CIS, software agents mitigate an information environment's heterogeneity by interacting through common protocols, and manage its large size by making intelligent local decisions without centralized control. In order to cope with the dynamism presented by open environments, CIS agents must have the ability to adapt and learn. We discuss some of the most important problems involving learning and adaptivity in CISs, including requirements for reconciling semantics and improving coordination. We present a "customers' view" of learning technology as might find ready application in CISs. 
Abstract-found: 1
Intro-found: 1
Reference: [ Arens et al., 1993 ] <author> Arens, Yigal; Chee, Chin Y.; Hsu, Chun-Nan; and Knoblock, Craig A.; </author> <year> 1993. </year> <title> Retrieving and integrating data from multiple information sources. </title> <journal> International Journal of Intelligent and Cooperative Information Systems 2(3) </journal> <pages> 127-158. </pages>
Reference-contexts: These tools must have a strong machine learning component, to be able to not only relate concepts across databases, but also help identify relationships within an ontology. Such relationships, e.g., generalization or containment, are necessary for CIS query processing approaches, e.g., <ref> [ Arens et al., 1993; Huhns et al., 1994 ] </ref> . For example, the concept port is a generalization of airport and can be used to answer queries about airports only if additional restrictions are added.
Reference: [ Attie et al., 1993 ] <author> Attie, Paul C.; Singh, Munindar P.; Sheth, Amit P.; and Rusinkiewicz, </author> <title> Marek; 1993. Specifying and enforcing intertask dependencies. </title> <booktitle> In Proceedings of the 19th VLDB Conference. </booktitle> <pages> 134-145. </pages>
Reference-contexts: Workflow for Trip Planning [ Attie et al., 1993; Chrysanthis & Ramamritham, 1994; Singh, 1996 ] . These approaches provide some variant of a temporal language in which the coordination requirements of the transaction models can be expressed. The approaches of <ref> [ Attie et al., 1993; Singh, 1996 ] </ref> automatically produce schedules from those specifications. Our challenge can then be framed in terms of how the formal specifications are produced.
Reference: [ Buchmann et al., 1992 ] <author> Buchmann, Alejandro; Ozsu, M. Tamer; Hornick, Mark; Georgakopoulos, Dimitrios; and Manola, Frank A.; </author> <year> 1992. </year> <title> A transaction model for active distributed object systems. </title> <editor> In [ Elmagarmid, </editor> <booktitle> 1992 ] . Chapter 5, </booktitle> <pages> 123-158. </pages>
Reference-contexts: This has led to a number of extended transaction models [ Bukhres & El-magarmid, 1996; Elmagarmid, 1992 ] . Transaction models capture some of the aspects of workflows. Figure 3 gives a trip-planning workflow in the notation of <ref> [ Buchmann et al., 1992 ] </ref> . This workflow has a number of separate activities, such as opening an account, reserving a flight, booking a hotel, renting a car, and generating a bill. These execute on databases belonging to autonomous organizations, such as different airlines or hotels. <p> Since the airlines make reservations independently of each other and of hotel bookings, the travel agency has to provide the control to make sure air tickets are not bought unnecessarily. Typically, a human would carry out the steps described in Figure 3. Approaches such as <ref> [ Buchmann et al., 1992 ] </ref> provide a way of representing the dependencies among the steps, and executing them appropriately. However, a major challenge is in determining the structure of workflows, possibly by observing how humans carry them out.
Reference: [ Bukhres & Elmagarmid, 1996 ] <author> Bukhres, Omran A. and Elmagarmid, Ahmed K., </author> <title> editors. Object-Oriented Multidatabase Systems: A Solution for Advanced Applications. </title> <publisher> Prentice Hall. </publisher>
Reference: [ Chrysanthis & Ramamritham, 1994 ] <author> Chrysanthis, Panos K. and Ramamritham, </author> <title> Krithi; 1994. Synthesis of extended transaction models using ACTA. </title> <journal> ACM Transactions on Database Systems 19(3) </journal> <pages> 450-491. </pages>
Reference: [ Elmagarmid, 1992 ] <editor> Elmagarmid, Ahmed K., editor. </editor> <title> Database Transaction Models for Advanced Applications. </title> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: This is because to ensure the ACID properties requires the component databases to expose their internal control states, and requires locking data items on a database even when those are not in use any more. This has led to a number of extended transaction models <ref> [ Bukhres & El-magarmid, 1996; Elmagarmid, 1992 ] </ref> . Transaction models capture some of the aspects of workflows. Figure 3 gives a trip-planning workflow in the notation of [ Buchmann et al., 1992 ] .
Reference: [ Elmasri & Navathe, 1994 ] <author> Elmasri, Ramez and Navathe, </author> <title> Shamkant; 1994. Fundamental of Database Systems. </title> <publisher> Benjamin Cummings, </publisher> <address> Redwood City, California, </address> <note> second edition. </note>
Reference-contexts: Mediators architecture <ref> [ Elmasri & Navathe, 1994, ch. 1 ] </ref> , which sought to separate and shield applications from the storage of data. A promising approach is to use mediators [ Wiederhold, 1992 ] .
Reference: [ Fayyad, 1996 ] <editor> Fayyad, Usama, editor. </editor> <booktitle> Special Issue on Data Mining, volume 39(11) of Communications of the ACM. </booktitle>
Reference: [ Gasser, 1991 ] <author> Gasser, </author> <title> Les; 1991. Social conceptions of knowledge and action: DAI foundations and open systems semantics. </title> <booktitle> Artificial Intelligence 47 </booktitle> <pages> 107-138. </pages>
Reference-contexts: In a number of settings, including enterprises, the organizational structure of a CIS is important. By the organizational structure, we mean the set of roles and responsibilities that make up a functioning system <ref> [ Gasser, 1991; Papazoglou et al., 1992 ] </ref> . There is an intimate relationship between the work-flows executing in a CIS, and the organizational roles available in it. Figure 6 shows on the left a simple workflow corresponding to submitting a contract proposal from a company.
Reference: [ Gray & Reuter, 1993 ] <author> Gray, Jim and Reuter, </author> <title> Andreas; 1993. Transaction Processing: Concepts and Techniques. </title> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: A workflow is a composite activity that accesses different resources and has human interaction to solve some business need. Traditional databases support so-called ACID transactions, which are computations that are atomic, consistency-preserving, isolated, and durable <ref> [ Gray & Reuter, 1993 ] </ref> . In other words, a transaction happens entirely or none at all, does not violate consistency, does not expose any partial results, and if successful has permanent results.
Reference: [ Huhns & Stephens, 1989 ] <author> Huhns, Michael N. and Stephens, Larry M.; </author> <year> 1989. </year> <title> Plausible inferencing using extended composition. </title> <booktitle> In Proceedings of the International Joint Conference on Artificial Intelligence. </booktitle> <pages> 1420-1425. </pages>
Reference-contexts: For example, the concept port is a generalization of airport and can be used to answer queries about airports only if additional restrictions are added. Further, different domains often have a rich variety of relationships that compose elegantly with each other <ref> [ Huhns & Stephens, 1989 ] </ref> . To give a simple, albeit somewhat contrived, example, if a person owns a car, and the car contains a wheel, then the person also owns the wheel.
Reference: [ Huhns et al., 1994 ] <author> Huhns, Michael N.; Singh, Munindar P.; Ksiezyk, Tomasz; and Jacobs, </author> <title> Nigel; 1994. Global information management via local autonomous agents. </title> <booktitle> In Proceedings of the 13th International Workshop on Distributed Artificial Intelligence. </booktitle>
Reference-contexts: These tools must have a strong machine learning component, to be able to not only relate concepts across databases, but also help identify relationships within an ontology. Such relationships, e.g., generalization or containment, are necessary for CIS query processing approaches, e.g., <ref> [ Arens et al., 1993; Huhns et al., 1994 ] </ref> . For example, the concept port is a generalization of airport and can be used to answer queries about airports only if additional restrictions are added.
Reference: [ Neches et al., 1991 ] <author> Neches, Robert; Fikes, Richard; Finin, Tim; Gruber, Tom; Patil, Ramesh; Senator, Ted; and Swartout, William R.; </author> <year> 1991. </year> <title> Enabling technology for knowledge sharing. </title> <journal> AI Magazine 12(3) </journal> <pages> 36-56. </pages>
Reference-contexts: Mediators thus shield the different components of the system from each other. To construct mediators effectively requires some common represen tation of the meanings of the resources and applications they connect. Such a knowledge representation is called an ontology <ref> [ Neches et al., 1991 ] </ref> . The main learning challenges associated with ontologies include relationship and concept acquisition.
Reference: [ Papazoglou et al., 1992 ] <author> Papazoglou, Mike P.; Laufmann, Steven C.; and Sellis, Timothy K.; </author> <year> 1992. </year> <title> An organizational framework for cooperating intelligent information systems. </title> <journal> International Journal on Intelligent and Cooperative Information Systems 1(1) </journal> <pages> 169-202. </pages>
Reference-contexts: In a number of settings, including enterprises, the organizational structure of a CIS is important. By the organizational structure, we mean the set of roles and responsibilities that make up a functioning system <ref> [ Gasser, 1991; Papazoglou et al., 1992 ] </ref> . There is an intimate relationship between the work-flows executing in a CIS, and the organizational roles available in it. Figure 6 shows on the left a simple workflow corresponding to submitting a contract proposal from a company.
Reference: [ Russell & Norvig, 1995 ] <author> Russell, Stuart J. and Norvig, </author> <title> Peter; 1995. Artificial Intelligence: A Modern Approach. </title> <publisher> Prentice Hall, </publisher> <address> Upper Saddle River, NJ. </address>
Reference-contexts: These lead to the following challenges for machine learning: learning about each other learning about society and the environment learning from repeat interactions with changing agent instances learning biased by social structure forgetting by a group about its former members. A number of learning techniques exist <ref> [ Russell & Norvig, 1995 ] </ref> . We give some suggestions about how different categories of learning might relate to problems in CIS.
Reference: [ Shehory & Kraus, 1996 ] <author> Shehory, Onn and Kraus, </author> <title> Sarit; 1996. Formation of overlapping coalitions for precedence-ordered task execution among autonomous agents. </title> <booktitle> In Proceedings of the International Conference on Multiagent Systems. </booktitle> <pages> 330-337. </pages>
Reference-contexts: For example, it is important to learn to what extent other agents will cooperate with the given agent. Indeed, if the agents form a team or coalition, they will be able to assist each other and prevent mishaps <ref> [ Shehory & Kraus, 1996 ] </ref> . It is also useful to have models of the learning abilities of the other agents. A number of studies have shown that coalitions become more effective as the members of the coalition learn about each other.
Reference: [ Shen & Leng, 1996 ] <author> Shen, Wei-Min and Leng, </author> <title> Bing; 1996. A metapattern-based automated discovery loop for integrated data mining|unsupervised learning of relational patterns. </title> <journal> IEEE Transactions on Knowledge and Data Engineering 8(6) </journal> <pages> 898-910. </pages>
Reference: [ Singh, 1996 ] <author> Singh, Munindar P.; </author> <year> 1996. </year> <title> Synthesizing distributed constrained events from transactional workflow specifications. </title> <booktitle> In Proceedings of the 12th International Conference on Data Engineering (ICDE). </booktitle>
Reference-contexts: Workflow for Trip Planning [ Attie et al., 1993; Chrysanthis & Ramamritham, 1994; Singh, 1996 ] . These approaches provide some variant of a temporal language in which the coordination requirements of the transaction models can be expressed. The approaches of <ref> [ Attie et al., 1993; Singh, 1996 ] </ref> automatically produce schedules from those specifications. Our challenge can then be framed in terms of how the formal specifications are produced.
Reference: [ Wiederhold, 1992 ] <author> Wiederhold, </author> <title> Gio; 1992. </title> <booktitle> Mediators in the architecture of future information systems. IEEE Computer 25(3) </booktitle> <pages> 38-49. </pages>
Reference-contexts: Mediators architecture [ Elmasri & Navathe, 1994, ch. 1 ] , which sought to separate and shield applications from the storage of data. A promising approach is to use mediators <ref> [ Wiederhold, 1992 ] </ref> . A mediator is a simplified agent that acts on behalf of a set of information resources or applications. Figure 2 shows a mediator architecture. The basic idea is that the mediator is responsible for mapping the resources or applications to the rest of the world.
Reference: [ Zhang et al., 1996 ] <author> Zhang, T.; Ramakrishnan, R.; and Livny, M.; </author> <year> 1996. </year> <title> BIRCH: An efficient data clustering mehtod for very large databases. In Proceedings of the ACM SIGMOD Conference on Management of Data. This article was processed using the L a T E X macro package with LLNCS style </title>
References-found: 20

