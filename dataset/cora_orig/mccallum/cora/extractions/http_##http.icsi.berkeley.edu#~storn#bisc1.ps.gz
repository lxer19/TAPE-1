URL: http://http.icsi.berkeley.edu/~storn/bisc1.ps.gz
Refering-URL: http://http.icsi.berkeley.edu/~storn/litera.html
Root-URL: http://www.icsi.berkeley.edu
Email: storn@icsi.berkeley.edu  
Title: On the Usage of Differential Evolution for Function Optimization Differential Evolution (DE) has recently proven
Author: by Rainer Storn 
Address: Street, Berkeley, CA 94704,  
Affiliation: Center  
Note: Siemens AG, ZFE T SN2, Otto-Hahn Ring 6, D-81739 Muenchen, Germany, currently on leave at ICSI, 1947  following.  This paper describes  
Abstract: assumed unless otherwise stated. Basically, DE generates new parameter vectors by adding the weighted difference between two population vectors to a third vector. If the resulting vector yields a lower objective function value than a predetermined population member, the newly generated vector replaces the vector, with which it was compared, in the next generation; otherwise, the old vector is retained. This basic principle, however, is extended when it comes to the practical variants of DE. For example an existing vector can be perturbed by adding more than one weighted difference vector to it. In most cases, it is also worthwhile to mix the parameters of the old vector with those of the perturbed one before comparing the objective function values. Several variants of DE which have proven to be useful will be described in the 
Abstract-found: 1
Intro-found: 1
Reference: <institution> -1 -0.6 -0.2 0.2 0.6 1 c o ) , t a r ( x ( x x cos(x) taylor(x) = 1 + 0.5*x^2 opti(x)=0.9975575805 +0.03400468081*x +0.1129638031*x^3 </institution>
Reference: [1] <author> Storn, R. and Price, K., </author> <title> Differential Evolution - a simple and efficient adaptive scheme for global optimization over continuous spaces, </title> <type> Technical Report TR-95-012, ICSI, </type> <note> http://http.icsi.berkeley.edu/~storn/litera.html </note>
Reference-contexts: 1 Introduction Differential Evolution (DE) <ref> [1] </ref>, [2] has proven to be a promising candidate for minimizing real-valued, multimodal objective functions. Besides its good convergence properties DE is very simple to understand and to implement. <p> CR is taken from the interval <ref> [0, 1] </ref> and constitutes a control variable in the design process. <p> The acute brackets D denote the modulo function with modulus D. The starting index, n, in (4) is a randomly chosen integer from the interval [0,D-1]. The integer L, which denotes the number of parameters that are going to be exchanged, is drawn from the interval <ref> [1, D] </ref>. <p> To minimize the maximum error is often a better objective but seems to yield more local minima. l controls the greediness of the scheme. To reduce the number of control variables we usually set l = ) . 6 Rules for the usage of DE Since it's invention <ref> [1] </ref>, DE's has been tested extensively against artificial and real-world minimization problems. <p> Fig. 2 shows the block diagram of the howling removal unit. # At initialization the population should be spread as much as possible over the objective function surface. # Most often the crossover probability CR <ref> [0, 1] </ref> must be considerably lower than one (e.g. 0.3). If no convergence can be achieved, however, CR [0.8, 1] often helps. # For many applications NP=10*D is a good choice. <p> If no convergence can be achieved, however, CR <ref> [0.8, 1] </ref> often helps. # For many applications NP=10*D is a good choice. <p> If no convergence can be achieved, however, CR [0.8, 1] often helps. # For many applications NP=10*D is a good choice. F is usually chosen <ref> [0.5, 1] </ref>. # The higher the population size NP is chosen, the lower one should choose the weighting factor F. # watching the parameters: it's a good convergence sign if the parameters of the best population member change a lot from generation to generation, especially at the beginning of the minimization
Reference: [2] <author> Storn, R. and Price, K., </author> <title> Minimizing the real functions of the ICEC'96 contest by Differential Evolution, </title> <booktitle> Int. Conf. on Evolutionary Computation, </booktitle> <address> Nagoya, Japan. </address>
Reference-contexts: 1 Introduction Differential Evolution (DE) [1], <ref> [2] </ref> has proven to be a promising candidate for minimizing real-valued, multimodal objective functions. Besides its good convergence properties DE is very simple to understand and to implement. <p> As a rule, a uniform probability distribution for all random decisions will be The randomly chosen integers r 1 , r 2 and r 3 are also chosen to be different from the running index i. F is a real and constant factor <ref> [0, 2] </ref> which controls the amplification of the differential variation ( ) , , r G r G 2 3 - .
Reference: [2] <author> Mitra, S.K. and Kaiser, J.F., </author> <title> Handbook for digital signal processing, </title> <publisher> John Wiley, </publisher> <year> 1993. </year> <title> Fig. 5: Approximation of cos(x) by means of a polynomial of third order. The optimization of the coefficients in opti(x) was performed by minimization of the sum of error squares obtained by 100 sampling points in the 5 </title>
Reference-contexts: 1 Introduction Differential Evolution (DE) [1], <ref> [2] </ref> has proven to be a promising candidate for minimizing real-valued, multimodal objective functions. Besides its good convergence properties DE is very simple to understand and to implement. <p> As a rule, a uniform probability distribution for all random decisions will be The randomly chosen integers r 1 , r 2 and r 3 are also chosen to be different from the running index i. F is a real and constant factor <ref> [0, 2] </ref> which controls the amplification of the differential variation ( ) , , r G r G 2 3 - .
References-found: 4

