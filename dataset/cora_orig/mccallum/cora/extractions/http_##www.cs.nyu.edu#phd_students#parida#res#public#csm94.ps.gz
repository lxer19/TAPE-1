URL: http://www.cs.nyu.edu/phd_students/parida/res/public/csm94.ps.gz
Refering-URL: http://www.cs.nyu.edu/phd_students/parida/res/res.html
Root-URL: http://www.cs.nyu.edu
Title: Computational Methods for Evaluating Swept Object Boundaries  
Author: Laxmi Parida, S.P. Mudur 
Keyword: 3D. Keywords: Swept objects, sweep rules, boundary evaluation, volume modelling, region modelling, body modelling, pen-stroke modelling.  
Address: Road No.9, Juhu, Bombay 400 049, India.  
Affiliation: National Centre for Software Technology, Gulmohar Cross  
Note: Appeared in The Visual Computer, (1994)10:266-276.  
Abstract: Many systems support the design of 2D regions and 3D volumes by sweeping a generator contour over a spine. Well established and widely used rendering systems accept high level boundary descriptions of regions and solids but not in the contour-spine form. Hence the swept object design specification must be such as to lend itself to efficient evaluation of a compact and high level boundary description. In this paper, we identify a sufficiently general class of swept objects and classify the sweep rules. We also present computational methods for directly evaluating the boundary representation which implicitly simulate the sweep process. The boundary is generated as a set of piecewise curves/surfaces in a compact form suitable for direct input to rendering systems like PostScript(R) in 2D and Renderman(R) in 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> D. Knuth, </author> <title> Mathematical Typography, </title> <journal> Bulletin of the American Mathematical Society 1 (1979). </journal>
Reference: 2. <author> P.K. Ghosh, S. P. Mudur, </author> <title> The brush-trajectory approach to figure specification: some algebraic solutions, </title> <journal> ACM Tr. on Computer Graphics 3 (1984). </journal>
Reference: 3. <author> N. Magnenat-Thalmann, D. Thalmann, </author> <title> Construction and Animation of a synthetic actress, </title> <type> Eurographics 88, </type> <month> september </month> <year> 1988. </year>
Reference-contexts: 1. Introduction Pen-stroke modelling in 2D [1,2] and body modelling in 3D <ref> [3] </ref> are typical examples of spine based modelling. Designing such regions/volumes as a spine with a generator contour sweeping over it has the advantages of not only providing a more natural way of modelling but also of effectively parameterising the essential geometric features of the model.
Reference: 4. <author> Adobe Systems Incorporated, </author> <title> Postscript Language: Reference Manual, </title> <publisher> Addison-Wesley, </publisher> <address> Massachussetts (1985). </address>
Reference-contexts: Once again, polygons, quadric surfaces, bi-cubics and NURBS may be used to describe the boundary surfaces of the solids. For example, PostScript <ref> [4] </ref> accepts regions bounded by lines and Bezier curves and also strokes of uniform thickness, but not a pen stroke specification. Similarly, Renderman [5] accepts quadrics, polyhedral solids and NURBS but not swept surfaces or swept solids.
Reference: 5. <author> Steve Upstill (Pixar), </author> <title> The Renderman Companion, </title> <publisher> Addison-Wesley, </publisher> <address> New York (1990). </address>
Reference-contexts: Once again, polygons, quadric surfaces, bi-cubics and NURBS may be used to describe the boundary surfaces of the solids. For example, PostScript [4] accepts regions bounded by lines and Bezier curves and also strokes of uniform thickness, but not a pen stroke specification. Similarly, Renderman <ref> [5] </ref> accepts quadrics, polyhedral solids and NURBS but not swept surfaces or swept solids. It, therefore, becomes imperative to convert the designs into boundary descriptions that can be accepted by these systems which are becoming de facto standards.
Reference: 6. <author> Jae-Woo Ahn, Myung-Soo Kim, Soon-Bum Lim, </author> <title> Approximate General Sweep Boundary of 2D Object, Visual Computing, </title> <editor> T. L. Kunni (Ed.), </editor> <publisher> Springer-Verlag, </publisher> <address> Tokyo, </address> <pages> pp 547-566, </pages> <year> 1992. </year>
Reference: 7. <author> C. D. Woodward, </author> <title> Cross-sectional design of B-spline surfaces, </title> <journal> Computers and Graphics, </journal> <volume> vol (11) no 2, </volume> <year> 1987. </year>
Reference: 8. <author> David Marr, </author> <title> Vision: Computational Investigation into Human Representation and processing of visual information, </title> <editor> W. H. </editor> <publisher> Freeman, </publisher> <address> San Francisco, </address> <year> (1982). </year>
Reference-contexts: Other Related Work The notion of swept objects has been extensively used in the fields of Computer Aided Design [6,7] and Computer Vision <ref> [8] </ref> where it goes by the name of generalised cylinders. The emphasis is primarily on geometrically modelling the filled region or solid. There have been some attempts to specifically address the rendering of these models using techniques such as ray tracing [9].
Reference: 9. <author> J. J. Wijk, </author> <title> Ray Tracing objects defined by sweeping planar cubic splines, </title> <journal> ACM Tr. </journal> <note> on Computer Graphics 3 (1984) 223-237. </note>
Reference-contexts: The emphasis is primarily on geometrically modelling the filled region or solid. There have been some attempts to specifically address the rendering of these models using techniques such as ray tracing <ref> [9] </ref>. However we are not aware of any work which deals with the extraction of high level boundary description of a swept object. Yet another area of work has been surface reconstruction from cross-sectional data, like for example an organ construction from various sections [10,11].
Reference: 10. <author> J. D. Boissonnat, </author> <title> Shape reconstruction from planar cross sections, Compute Vision Graph Image Processing 41(1). </title>
Reference: 11. <author> Y. Shinagawa and T. L. Kunni, </author> <title> The homotopy model: a generalized model for smooth surface generation from cross sectional data, The Visual Computer, </title> <publisher> (1991)7. </publisher>
Reference: 12. <author> J. Hoschek and N. Wissel, </author> <title> Optimal Approximate conversion of spline curves and spline approximation of offset curves, </title> <booktitle> Computer Aided Design, </booktitle> <volume> Vol 20, No 8, </volume> <month> (Oc-tober </month> <year> 1988). </year>
Reference: 13. <author> R. T. Farouki, </author> <title> The approximation of non-degenerate offset surfaces, </title> <booktitle> Computer Aided Geometric Design, </booktitle> <volume> Vol 3, No 1, </volume> <month> (May </month> <year> 1986). </year>
Reference: 14. <author> G. Elber and E. Cohen, </author> <title> Error bound variable distance offset operator for free form curves and surfaces, </title> <journal> IJ of Computational Geometry and Applications, </journal> <volume> Vol 1, No 1, </volume> <month> (March </month> <year> 1991). </year>
Reference: 15. <author> Laxmi Parida, </author> <title> Vinyas User Reference Manual, NCST Internal Report (March, </title> <booktitle> 1990). Appeared in The Visual Computer, </booktitle> (1994)10:266-276. 
Reference-contexts: Implementation The interpolation technique presented in [17] has been used in the implementation and gives composite Bezier cubics/bicubics with G 1 continuity. The algorithms presented for 2D have been implemented and incorporated into an interactive font design tool, Vinyas <ref> [15, 16] </ref> which generates analytic font definitions in the Postscript language. This tool has been extensively used by various calligraphers to produce fonts in different Indian scripts (See Figure 11). The algorithms for 3D have also been implemented and tested but not as a part of any interactive design system.
Reference: 16. <author> Laxmi Parida, Vinyas: </author> <title> An Interactive Calligraphic Type Design System, </title> <note> (under publication). </note>
Reference-contexts: Implementation The interpolation technique presented in [17] has been used in the implementation and gives composite Bezier cubics/bicubics with G 1 continuity. The algorithms presented for 2D have been implemented and incorporated into an interactive font design tool, Vinyas <ref> [15, 16] </ref> which generates analytic font definitions in the Postscript language. This tool has been extensively used by various calligraphers to produce fonts in different Indian scripts (See Figure 11). The algorithms for 3D have also been implemented and tested but not as a part of any interactive design system.
Reference: 17. <author> Hirokai Chiyokura, </author> <title> Solid Modelling with Designbase: Theory and Implementation, </title> <publisher> Addison-Wesley, </publisher> <address> England (1988). </address>
Reference-contexts: A swept object with rotated contour on the other hand has generally more elements. In our implementation, during the use of the system, we have seen that in general this number is reasonably small. definition. 19 Appeared in The Visual Computer, (1994)10:266-276. 6. Implementation The interpolation technique presented in <ref> [17] </ref> has been used in the implementation and gives composite Bezier cubics/bicubics with G 1 continuity. The algorithms presented for 2D have been implemented and incorporated into an interactive font design tool, Vinyas [15, 16] which generates analytic font definitions in the Postscript language.
Reference: 18. <author> Laxmi Parida, S. P. Mudur, </author> <title> Computational Methods for Evaluating the Boundary of Cross Sectional Designs, </title> <type> NCST Internal Report, </type> <year> 1991. </year> <month> 22 </month>
Reference-contexts: In this context, we state some definitions and theorems below. Further details and proofs of the theorems are presented in <ref> [18] </ref>. Definition 1 Extraordinary Point: Let S (u), u 0 u u 1 , be the spine curve and let C u denote the contour at S (u).
References-found: 18

