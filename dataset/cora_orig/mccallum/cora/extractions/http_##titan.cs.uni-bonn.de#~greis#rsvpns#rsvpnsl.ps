URL: http://titan.cs.uni-bonn.de/~greis/rsvpns/rsvpnsl.ps
Refering-URL: http://titan.cs.uni-bonn.de/~greis/rsvpns/index.html
Root-URL: http://cs.uni-bonn.de
Email: greis@cs.uni-bonn.de  
Title: RSVP/ns: An Implementation of RSVP for the Network Simulator ns-2  
Author: Marc Greis 
Affiliation: Computer Science Department IV University of Bonn  
Abstract: The purpose of the Integrated Services Architecture as defined by the IETF is to provide Quality of Service (QoS) to applications which demand more from the network than IP's best-effort service, such as multimedia applications. The Resource ReSerVation Protocol RSVP [RFC2205], a part of the Integrated Services framework allows applications to perform receiver-initiated reservations for unicast or multicast flows, thus requesting resources (e.g. bandwidth or a bounded delay) from the network nodes on the path to the sender. However, to this date RSVP has not yet been deployed in larger portions of the Internet, so that large-scale research concerning RSVP has to rely on simulation results. "RSVP/ns" is an implementation of RSVP for the network simulator ns-2 [NS] which is a part of the VINT project [VINT]. This article serves both as internal and external documentation for RSVP/ns version 0.5. 
Abstract-found: 1
Intro-found: 1
Reference: [Ben96] <author> J.C.R. Bennett and H. Zhang, "WFQ: </author> <title> Worst-case Fair Weighted Fair Queueing", </title> <booktitle> INFOCOM 1996, </booktitle> <month> March </month> <year> 1996 </year>
Reference-contexts: In fact, error code 6 can only originate directly from an API call, because no non-supported reservation styles will ever be sent in a reservation message. 2.5 Integrated Services Currently, only controlled-load service is supported by RSVP/ns. The bandwidth guarantees are enforced by WFQ [Dem89] (or WF 2 Q <ref> [Ben96] </ref>) in the links. One traffic class is assigned to each incoming flow. Furthermore, the FLOWSPEC objects only contain the flow's rate and token bucket size, but not the peak rate in conformance with RFC 2211. <p> RSVP agent to RSVP agent, using the PHOP information from the path states, while path messages have to rely on the routing protocol, since they have to be routed through the same hops as the data packets. 3.4 WFQ To enforce the bandwidth guarantees, WFQ [Dem89] and WF 2 Q <ref> [Ben96] </ref> algorithms have been implemented for ns. For RSVP/ns, the option "best-effort" is used, which means that a queue is installed for all traffic that the classifier does not recognize (otherwise, an error message would be returned for each packet with an unknown flow id/sender combination).
Reference: [Dem89] <author> Demers, A., Keshav, S., Shenker, S., </author> <title> "Analysis and simulation of a fair queueing algorithm", </title> <booktitle> Proceedings of ACM SIGCOMM 89 </booktitle>
Reference-contexts: In fact, error code 6 can only originate directly from an API call, because no non-supported reservation styles will ever be sent in a reservation message. 2.5 Integrated Services Currently, only controlled-load service is supported by RSVP/ns. The bandwidth guarantees are enforced by WFQ <ref> [Dem89] </ref> (or WF 2 Q [Ben96]) in the links. One traffic class is assigned to each incoming flow. Furthermore, the FLOWSPEC objects only contain the flow's rate and token bucket size, but not the peak rate in conformance with RFC 2211. <p> sent hop by hop from RSVP agent to RSVP agent, using the PHOP information from the path states, while path messages have to rely on the routing protocol, since they have to be routed through the same hops as the data packets. 3.4 WFQ To enforce the bandwidth guarantees, WFQ <ref> [Dem89] </ref> and WF 2 Q [Ben96] algorithms have been implemented for ns.
Reference: [Jain91] <author> Jain, R., </author> <title> "The Art of Computer Systems Performance Analysis", </title> <publisher> John Wiley & Sons, </publisher> <year> 1991 </year>
Reference-contexts: The last two values can be reset to zero with the command "&lt;wfq&gt; clear-stats", where "wfq" is the handle for a WFQ queue which can be obtained from a link with the command "&lt;link&gt; queue". 5 Validation In <ref> [Jain91] </ref>, three possible sources for the validation of a simulation model are given: * Expert intuition * Real system measurements * Theoretical results In this section, expert intuition is used to validate the correctness of RSVP/ns, because no complex RSVP test bed was available that could have been used for measurements
Reference: [Jam97] <author> Jamin, S., Shenker, S.J., Danzig, P.B., </author> <title> "Comparison of Measurement-based Admission Control Algorithms for Controlled-Load Service", </title> <booktitle> Proc. IEEE INFOCOM '97, </booktitle> <month> April 97 </month>
Reference-contexts: Currently it is possible to choose from five different admission control algorithms 3 <ref> [Jam97] </ref>: * Param : A parameter-based "Simple Sum" algorithm * MS : Measured Sum * HB : Hoeffding Bounds * ACTO : Acceptance Region-Tangent at Origin * ACTP : Acceptance Region-Tangent at Peak The most usual choice would be "Param".
Reference: [NS] <author> Fall, K., Varadhan, K., "ns Notes and Documentation", </author> <month> April </month> <year> 1998, </year> <note> "http://www-mash.cs.berkeley.edu/ns/nsDoc.ps.gz" </note>
Reference: [RFC1633] <author> Braden, R., Clark, D., Shenker, S., </author> <title> "Integrated Services in the Internet Architecture: an Overview", </title> <type> RFC 1633, </type> <month> June </month> <year> 1994 </year>
Reference: [RFC2119] <author> Bradner, S., </author> <title> "Key words for use in RFCs to Indicate Requirement Levels", </title> <type> RFC 2119, </type> <month> March </month> <year> 1997 </year>
Reference: [RFC2205] <author> Braden, R., Zhang, L., Berson, S., Herzog, S., Jamin, S., </author> <title> "Resource ReSerVation Protocol (RSVP) Version 1 Functional Specification", </title> <type> RFC 2205, </type> <month> September </month> <year> 1997 </year>
Reference-contexts: Section 2 describes the basic features of RSVP/ns and also the differences between RSVP/ns and the Functional Specification <ref> [RFC2205] </ref> and the Message Processing Rules [RFC2209]. Section 3 explains the implementation itself, assuming that the reader is familiar both with RSVP and the basic internal structure of ns-2. Section 4 describes how to add RSVP/ns to ns-2 and how to use RSVP/ns in simulation scenarios.
Reference: [RFC2209] <author> Braden, R., Zhang, L., </author> <title> "Resource ReSerVation Protocol (RSVP) Version 1 Message Processing Rules", </title> <type> RFC 2209, </type> <month> September </month> <year> 1997 </year>
Reference-contexts: Section 2 describes the basic features of RSVP/ns and also the differences between RSVP/ns and the Functional Specification [RFC2205] and the Message Processing Rules <ref> [RFC2209] </ref>. Section 3 explains the implementation itself, assuming that the reader is familiar both with RSVP and the basic internal structure of ns-2. Section 4 describes how to add RSVP/ns to ns-2 and how to use RSVP/ns in simulation scenarios.
Reference: [RFC2210] <author> Wroclawski, J., </author> <title> "The Use of RSVP with IETF Integrated Services", </title> <type> RFC 2210, </type> <month> September </month> <year> 1997 </year>
Reference: [RFC2211] <author> Wroclawski, J., </author> <title> "Specification of the Controlled-Load Network Element Service", </title> <type> RFC 2211, </type> <month> September </month> <year> 1997 </year>
Reference: [VINT] <institution> Webpage of the VINT project, </institution> <note> "http://netweb.usc.edu/vint/" 17 </note>
References-found: 12

