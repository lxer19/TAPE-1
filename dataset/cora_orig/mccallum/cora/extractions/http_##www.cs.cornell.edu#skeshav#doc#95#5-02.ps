URL: http://www.cs.cornell.edu/skeshav/doc/95/5-02.ps
Refering-URL: http://www.cs.cornell.edu/skeshav/papers.html
Root-URL: 
Email: jhv-@research.att.com  
Title: An Internet Accessible Telepresence  
Author: A.E. Kaplan, S. Keshav, N.L. Schryer, J. H. Venutolo -aek keshav nls 
Address: Murray Hill, N.J.  
Affiliation: AT&T Bell Laboratories,  
Abstract: The US Vice President, Al Gore, in a speech on the information superhighway, suggested that it could be used to remotely control a nuclear reactor. We don't have enough confidence in computer software, hardware, or networks to try this experiment, but have instead build an Internet-accessible, remote-controlled model car that provides a "race driver's" view via a video camera mounted on the model car. The remote user can see live video from the car, and using a mouse, control the speed and direction of the car. The challenge was to build a car that could be controlled by novice users in narrow corridors, and that would work not only with the full motion video that the car natively provides, but also with the limited size and frame rate video available over the Internet multicast backbone [1]. We have built a car that has been driven from a site 50 miles away over a 56kbps IP link using nv format video at as little as one frame per second and at as low as 100 by 100 pixel resolution. We also built hardware to control the car using a slightly modified voice grade channel videophone. Our experience leads us to believe that it is now possible to put together readily available hardware and software components to build a cheap and effective telepresence. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> S. Casner and S. Deering, </author> <title> First IETF Internet Audiocast, </title> <journal> ACM SigComm Computer Communication Review 22, </journal> <month> 3 (July </month> <year> 1992). </year>
Reference-contexts: To do so, we needed to highly compress the video in order to get even a few frames per second. Third, we wanted to multicast the car's video over the Internet Multicast Backbone (MBONE) <ref> [1] </ref> as well as over point to point logical links. Finally, to minimize effort, we wanted to reuse standard software modules as much as possible. All of these goals were met in whole or in part in our design.
Reference: 2. <author> R. Fredericks, </author> <title> nv-3.2 network video tool, </title> <note> Available for anonymous FTP from ftp.parc.xerox.com, </note> <year> 1993. </year>
Reference-contexts: Finally, to minimize effort, we wanted to reuse standard software modules as much as possible. All of these goals were met in whole or in part in our design. The car does run over the MBONE, and since this video is compatible with the nv program <ref> [2, 3] </ref>, this video can be received by a fairly large number of receivers. We were able to use much of the nv software and retail hardware to build the car. <p> The video is sent using UDP packets; the mouse tracking information is sent using TCP packets. The software used to send the video was derived from the widely used network video program - nv <ref> [2, 3] </ref>. This program is widely used for videoconferences on the Internet, particularly on the multicast backbone (MBONE) [MBONE]. A Tk/Tcl [4] interface was added to standard nv to allow only an authorized user to control the car. The authentication for this user is via a challenge-response password.
Reference: 3. <author> R. Fredericks, </author> <title> Experiences with Real Time Software Video, </title> <booktitle> 6th Packet Video Conference, </booktitle> <address> Portland, OR, </address> <month> September </month> <year> 1994. </year>
Reference-contexts: Finally, to minimize effort, we wanted to reuse standard software modules as much as possible. All of these goals were met in whole or in part in our design. The car does run over the MBONE, and since this video is compatible with the nv program <ref> [2, 3] </ref>, this video can be received by a fairly large number of receivers. We were able to use much of the nv software and retail hardware to build the car. <p> The video is sent using UDP packets; the mouse tracking information is sent using TCP packets. The software used to send the video was derived from the widely used network video program - nv <ref> [2, 3] </ref>. This program is widely used for videoconferences on the Internet, particularly on the multicast backbone (MBONE) [MBONE]. A Tk/Tcl [4] interface was added to standard nv to allow only an authorized user to control the car. The authentication for this user is via a challenge-response password.
Reference: 4. <author> J. Ousterhout, </author> <title> Tcl and the Tk Toolkit, </title> <publisher> Addison Wesley, </publisher> <address> Reading, MA, </address> <year> 1994. </year>
Reference-contexts: The software used to send the video was derived from the widely used network video program - nv [2, 3]. This program is widely used for videoconferences on the Internet, particularly on the multicast backbone (MBONE) [MBONE]. A Tk/Tcl <ref> [4] </ref> interface was added to standard nv to allow only an authorized user to control the car. The authentication for this user is via a challenge-response password. If the car's control computer is on a multicast backbone, others may watch the video while the authorized user drives the car.
References-found: 4

