URL: http://www.cs.ualberta.ca/~greiner/C-551/SLIDES/BucketElim.ps
Refering-URL: http://www.cs.ualberta.ca/~greiner/C-466/syllabus.html
Root-URL: 
Email: dechter@ics.uci.edu  
Title: BUCKET ELIMINATION: A UNIFYING FRAMEWORK FOR PROBABILISTIC INFERENCE  
Author: R. DECHTER 
Address: Irvine  
Affiliation: Department of Information and Computer Science University of California,  
Abstract: Probabilistic inference algorithms for belief updating, finding the most probable explanation, the maximum a posteriori hypothesis, and the maximum expected utility are reformulated within the bucket elimination framework. This emphasizes the principles common to many of the algorithms appearing in the probabilistic inference literature and clarifies the relationship of such algorithms to nonserial dynamic programming algorithms. A general method for combining conditioning and bucket elimination is also presented. For all the algorithms, bounds on complexity are given as a function of the problem's structure. 
Abstract-found: 1
Intro-found: 1
Reference: <author> S. Arnborg and A. Proskourowski. </author> <title> Linear time algorithms for np-hard problems restricted to partial k-trees. </title> <journal> Discrete and Applied Mathematics, </journal> <volume> 23 </volume> <pages> 11-24, </pages> <year> 1989. </year>
Reference: <author> S.A. Arnborg. </author> <title> Efficient algorithms for combinatorial problems on graphs with bounded decomposability a survey. </title> <journal> BIT, </journal> <volume> 25 </volume> <pages> 2-23, </pages> <year> 1985. </year>
Reference-contexts: The induced width of a graph, wfl, is the minimal induced width over all its orderings. The tree-width of a graph is the minimal induced width plus one <ref> (Arnborg, 1985) </ref>. The established connection between buckets' sizes and induced width motivates finding an ordering with a smallest induced width. While it is known that finding an ordering with the smallest induced width is hard (Arnborg, 1985), usefull greedy heuristics as well as approximation algorithms are available (Dechter, 1992; Becker and <p> The tree-width of a graph is the minimal induced width plus one <ref> (Arnborg, 1985) </ref>. The established connection between buckets' sizes and induced width motivates finding an ordering with a smallest induced width. While it is known that finding an ordering with the smallest induced width is hard (Arnborg, 1985), usefull greedy heuristics as well as approximation algorithms are available (Dechter, 1992; Becker and Geiger, 1996). In summary, the complexity of algorithm elim-bel is dominated by the time and space needed to process a bucket.
Reference: <author> F. Bacchus and P. </author> <title> van Run. Dynamic variable ordering in csps. </title> <booktitle> In Principles and Practice of Constraints Programming (CP-95), </booktitle> <address> Cassis, France, </address> <year> 1995. </year>
Reference: <author> A. Becker and D. Geiger. </author> <title> A sufficiently fast algorithm for finding close to optimal jnmction trees. </title> <booktitle> In Uncertainty in AI (UAI-96), </booktitle> <pages> pages 81-89, </pages> <year> 1996. </year>
Reference: <author> U. Bertele and F. Brioschi. </author> <title> Nonserial Dynamic Programming. </title> <publisher> Academic Press, </publisher> <year> 1972. </year>
Reference-contexts: algorithmic framework that generalizes dynamic programming to accommodate algorithms for many complex problem-solving and reasoning activities, including directional resolution for propositional satisfiability (Davis and Putnam, 1960), adaptive consistency for constraint satisfaction (Dechter and Pearl, 1987), Fourier and Gaussian elimination for linear equalities and inequalities, and dynamic programming for combinatorial optimization <ref> (Bertele and Brioschi, 1972) </ref>. Here, after presenting the framework, we demonstrate that a number of algorithms for probabilistic inference can also be expressed as bucket-elimination algorithms. The main virtues of the bucket-elimination framework are simplicity and generality. By simplicity, we mean that a complete specification of 2 R.
Reference: <author> S. Bistarelli, U. Montanari, and F Rossi. </author> <title> Semiring-based constraint satisfaction and optimization. </title> <journal> Journal of the Association of Computing Machinery (JACM), </journal> <note> to appear, </note> <year> 1997. </year>
Reference-contexts: Related work We had mentioned throughout this paper many algorithms in probabilistic and deterministic reasoning that can be viewed as similar to bucket-elimination algorithms. In addition, unifying frameworks observing the common features between various algorithms had also appeared both in the past (Shenoy, 1992) and more recently in <ref> (Bistarelli et al., 1997) </ref>. 10. Summary and Conclusion Using the bucket-elimination framework, which generalizes dynamic programming, we have presented a concise and uniform way of expressing algorithms for probabilistic reasoning. In this framework, algorithms exploit the topological properties of the network without conscience effort on the part of the designer.
Reference: <author> C. Boutilier. </author> <title> Context-specific independence in bayesian networks. </title> <booktitle> In Uncertainty in Artificial Intelligence (UAI-96), </booktitle> <pages> pages 115-123, </pages> <year> 1996. </year> <title> BUCKET ELIMINATION 29 C. Cannings, E.A. Thompson, and H.H. Skolnick. Probability functions on complex pedigrees. </title> <booktitle> Advances in Applied Probability, </booktitle> <volume> 10 </volume> <pages> 26-61, </pages> <year> 1978. </year>
Reference: <author> G.F. Cooper. Nestor: </author> <title> A computer-based medical diagnosis aid that integrates causal and probabilistic knowledge. </title> <type> Technical report, </type> <institution> Computer Science department, Stanford University, Palo-Alto, California, </institution> <year> 1984. </year>
Reference: <author> M. Davis and H. Putnam. </author> <title> A computing procedure for quantification theory. </title> <journal> Journal of the Association of Computing Machinery, </journal> <volume> 7(3), </volume> <year> 1960. </year>
Reference-contexts: 1. Overview Bucket elimination is a unifying algorithmic framework that generalizes dynamic programming to accommodate algorithms for many complex problem-solving and reasoning activities, including directional resolution for propositional satisfiability <ref> (Davis and Putnam, 1960) </ref>, adaptive consistency for constraint satisfaction (Dechter and Pearl, 1987), Fourier and Gaussian elimination for linear equalities and inequalities, and dynamic programming for combinatorial optimization (Bertele and Brioschi, 1972). <p> Given a set of clauses (a clause is a disjunction of propositional variables or their negations) and an ordering of the propositional variables, d = Q 1 ; :::; Q n , algorithm directional resolution (DR) (Dechter and Rish, 1994), is the core of the well-known Davis-Putnam algorithm for satisfiability <ref> (Davis and Putnam, 1960) </ref>. The algorithm is described using buckets partitioning the given set of clauses such that all the clauses containing Q i that do not contain any symbol higher in the ordering are placed in the bucket of Q i , denoted bucket i .
Reference: <author> R. Dechter and J. Pearl. </author> <title> Network-based heuristics for constraint satisfaction problems. </title> <journal> Artificial Intelligence, </journal> <volume> 34 </volume> <pages> 1-38, </pages> <year> 1987. </year>
Reference-contexts: 1. Overview Bucket elimination is a unifying algorithmic framework that generalizes dynamic programming to accommodate algorithms for many complex problem-solving and reasoning activities, including directional resolution for propositional satisfiability (Davis and Putnam, 1960), adaptive consistency for constraint satisfaction <ref> (Dechter and Pearl, 1987) </ref>, Fourier and Gaussian elimination for linear equalities and inequalities, and dynamic programming for combinatorial optimization (Bertele and Brioschi, 1972). Here, after presenting the framework, we demonstrate that a number of algorithms for probabilistic inference can also be expressed as bucket-elimination algorithms.
Reference: <author> R. Dechter and J. Pearl. </author> <title> Tree clustering for constraint networks. </title> <booktitle> Artificial Intelligence, </booktitle> <pages> pages 353-366, </pages> <year> 1989. </year>
Reference-contexts: The main virtue of this presentation, beyond uniformity, is that it allows ideas and techniques to flow across the boundaries between areas of research. In particular, having noted that elimination algorithms and clustering algorithms are very similar in the context of constraint processing <ref> (Dechter and Pearl, 1989) </ref>, we find that this similarity carries over to all other tasks. We also show that the idea of conditioning, which is as universal as that of elimination, can be incorporated and exploited naturally and uniformly within the elimination framework. <p> Each variable and its earlier neighbors are a clique, and each clique is connected to a parent clique with whom it shares the largest subset of variables <ref> (Dechter and Pearl, 1989) </ref>. For example, the induced graph in Figure 7a yields the clique-tree in Figure 13, If this ordering is used by tree-clustering,the same tree may be generated.
Reference: <author> R. Dechter and I. Rish. </author> <title> Directional resolution: The davis-putnam procedure, revisited. </title> <booktitle> In Principles of Knowledge Representation and Reasoning (KR-94), </booktitle> <pages> pages 134-145, </pages> <year> 1994. </year>
Reference-contexts: Consider the following algorithm for deciding satisfiability. Given a set of clauses (a clause is a disjunction of propositional variables or their negations) and an ordering of the propositional variables, d = Q 1 ; :::; Q n , algorithm directional resolution (DR) <ref> (Dechter and Rish, 1994) </ref>, is the core of the well-known Davis-Putnam algorithm for satisfiability (Davis and Putnam, 1960). <p> The complexity of the algorithm is exponentially bounded (time and space) in a graph parameter called induced width (also called tree-width) of the interaction graph of the theory, where a node is associated with a proposition and an arc connects any two nodes appearing in the same clause <ref> (Dechter and Rish, 1994) </ref>. The belief-network algorithms we present in this paper have much in common with the resolution procedure above.
Reference: <author> R. Dechter and I. Rish. </author> <title> To guess or to think? hybrid algorithms for sat. </title> <booktitle> In Principles of Constraint Programming (CP-96), </booktitle> <year> 1996. </year>
Reference-contexts: There is a variety of possible hybrids between conditioning and elimination that can refine the basic procedure in elim-cond-mpe. One method imposes an upper bound on the arity of functions recorded and decides dynamically, during processing, whether to process a bucket by elimination or by conditioning (see <ref> (Dechter and Rish, 1996) </ref>). Another method which uses the super-bucket approach, collects a set of consecutive buckets into one super-bucket that it processes by conditioning, thus avoiding recording some intermediate results (Dechter, 1996b; El-Fattah and Dechter, 1996). 9.
Reference: <author> R. Dechter and P. van Beek. </author> <title> Local and global relational consistency. </title> <booktitle> In Principles and Practice of Constraint programming (CP-95), </booktitle> <pages> pages 240-257, </pages> <year> 1995. </year>
Reference: <author> R. Dechter. </author> <title> Enhancement schemes for constraint processing: Backjumping, learning and cutset decomposition. </title> <journal> Artificial Intelligence, </journal> <volume> 41 </volume> <pages> 273-312, </pages> <year> 1990. </year>
Reference: <author> R. Dechter. </author> <title> Constraint networks. </title> <booktitle> Encyclopedia of Artificial Intelligence, </booktitle> <pages> pages 276-285, </pages> <year> 1992. </year>
Reference: <author> R. Dechter. </author> <title> Bucket elimination: A unifying framework for probabilistic inference algorithms. </title> <booktitle> In Uncertainty in Artificial Intelligence (UAI-96), </booktitle> <pages> pages 211-219, </pages> <year> 1996. </year>
Reference-contexts: There is a variety of possible hybrids between conditioning and elimination that can refine the basic procedure in elim-cond-mpe. One method imposes an upper bound on the arity of functions recorded and decides dynamically, during processing, whether to process a bucket by elimination or by conditioning (see <ref> (Dechter and Rish, 1996) </ref>). Another method which uses the super-bucket approach, collects a set of consecutive buckets into one super-bucket that it processes by conditioning, thus avoiding recording some intermediate results (Dechter, 1996b; El-Fattah and Dechter, 1996). 9.
Reference: <author> R. Dechter. </author> <title> Topological parameters for time-space tradeoffs. </title> <booktitle> In Uncertainty in Artificial Intelligence (UAI-96), </booktitle> <pages> pages 220-227, </pages> <year> 1996. </year>
Reference-contexts: There is a variety of possible hybrids between conditioning and elimination that can refine the basic procedure in elim-cond-mpe. One method imposes an upper bound on the arity of functions recorded and decides dynamically, during processing, whether to process a bucket by elimination or by conditioning (see <ref> (Dechter and Rish, 1996) </ref>). Another method which uses the super-bucket approach, collects a set of consecutive buckets into one super-bucket that it processes by conditioning, thus avoiding recording some intermediate results (Dechter, 1996b; El-Fattah and Dechter, 1996). 9.
Reference: <author> R. Dechter. Mini-buckets: </author> <title> A general scheme of generating approximations in automated reasoning. </title> <booktitle> In Ijcai-97: Proceedings of the Fifteenth International Joint Conference on Artificial Intelligence, </booktitle> <year> 1997. </year>
Reference-contexts: More importantly, the organizational benefit associated with the use of buckets should allow all the bucket-elimination algorithms to be improved uniformly. This can be done either by combining conditioning with elimination, as we have shown, or via approximation algorithms as is shown in <ref> (Dechter, 1997) </ref>. 11. Acknowledgment A preliminary version of this paper appeared in (Dechter, 1996a). I would like to thank Irina Rish and Nir Freidman for their useful comments on different versions of this paper.
Reference: <author> Y. El-Fattah and R. Dechter. </author> <title> An evaluation of structural parameters for probabilistic reasoning: results on benchmark circuits. </title> <booktitle> In Uncertainty in Artificial Intelligence (UAI-96), </booktitle> <pages> pages 244-251, </pages> <year> 1996. </year>
Reference: <author> D. Geiger, T. Verma, and J. Pearl. </author> <title> Identifying independence in bayesian networks. </title> <journal> Networks, </journal> <volume> 20 </volume> <pages> 507-534, </pages> <year> 1990. </year>
Reference: <author> F.V. Jensen, S.L Lauritzen, and K.G. Olesen. </author> <title> Bayesian updating in causal probabilistic networks by local computation. </title> <journal> Computational Statistics Quarterly, </journal> <volume> 4, </volume> <year> 1990. </year>
Reference: <author> U. Kjaerulff. </author> <title> A computational scheme for reasoning in dynamic probabilistic networks. </title> <booktitle> In Uncertainty in Artificial Intelligence (UAI-93), </booktitle> <pages> pages 121-149, </pages> <year> 1993. </year>
Reference-contexts: DECHTER exp (w fl (d; e)), where w fl (d; e) is the induced width along d of the augmented moral graph. 2 Tatman and Schachter (Tatman and Shachter, 1990) have published an algorithm that is a variation of elim-meu, and Kjaerulff's algorithm <ref> (Kjaerulff, 1993) </ref> can be viewed as a variation of elim-meu tailored to dynamic probabilistic networks. 7. Relation of Bucket Elimination to Other Methods 7.1.
Reference: <author> S.L. Lauritzen and D.J. Spiegelhalter. </author> <title> Local computation with probabilities on graphical structures and their application to expert systems. </title> <journal> Journal of the Royal Statistical Society, Series B, </journal> <volume> 50(2) </volume> <pages> 157-224, </pages> <year> 1988. </year>
Reference-contexts: The modified algorithm's time complexity is exponential in the family size, and it requires only linear space. 2 2 Actually, Pearl's algorithm should be restricted to message passing relative to one rooted tree in order to be identical with ours. 24 R. DECHTER 7.2. JOIN-TREE CLUSTERING Join-tree clustering <ref> (Lauritzen and Spiegelhalter, 1988) </ref> and bucket elimination are closely related and their worst-case complexity (time and space) is essentially the same. The sizes of the cliques in tree-clustering is identical to the induced-width plus one of the corresponding ordered graph.
Reference: <author> J. Pearl. </author> <title> Probabilistic Reasoning in Intelligent Systems. </title> <publisher> Morgan Kaufmann, </publisher> <year> 1988. </year>
Reference-contexts: It is known that these tasks are NP-hard. Nevertheless, they all permit a polynomial propagation algorithm for singly-connected networks <ref> (Pearl, 1988) </ref>. The two main approaches to extending this propagation algorithm to multiply-connected networks are the cycle-cutset approach, also called conditioning, and tree-clustering (Pearl, 1988; Lauritzen and Spiegelhal-ter, 1988; Shachter, 1986). These methods work well for sparse networks with small cycle-cutsets or small clusters. <p> An Elimination Algorithm for Belief Assessment Belief updating is the primary inference task over belief networks. The task is to maintain the probability of singleton propositions once new evidence arrives. Following Pearl's propagation algorithm for singly-connected networks <ref> (Pearl, 1988) </ref>, researchers have investigated various approaches to belief updating. We will now present a step by step derivation of a general variable-elimination algorithm for belief updating. This process is typical for any derivation of elimination algorithms. Let X 1 = x 1 be an atomic proposition. <p> By so doing, we avoid increasing the dimensionality of the recorded functions. Processing buckets containing observations in this manner automatically exploits the cutset conditioning effect <ref> (Pearl, 1988) </ref>. Therefore, the algorithm has a special rule for processing buckets with observations: the observed value is assigned to each function in the bucket, and each resulting function is moved individually to a lower bucket. <p> Relation of Bucket Elimination to Other Methods 7.1. POLY-TREE ALGORITHM When the belief network is a poly-tree, both belief assessment, the mpe task and map task can be accomplished efficiently using Pearl's poly-tree algorithm <ref> (Pearl, 1988) </ref>. As well, when the augmented graph is a tree, the meu can be computed efficiently. A poly-tree is a directed acyclic graph whose underlying undirected graph has no cycles. <p> In this framework, algorithms exploit the topological properties of the network without conscience effort on the part of the designer. We have shown, for example, that if algorithms elim-mpe and elim-bel are given a singly-connected network then the algorithm reduces to Pearl's algorithms <ref> (Pearl, 1988) </ref> for some orderings (always possible on trees). The same applies to elim-map and elim-meu, for which tree-propagation algorithms were not explicitly derived.
Reference: <author> Y. Peng and J.A. Reggia. </author> <title> Plausability of diagnostic hypothesis. </title> <booktitle> In National Conference on Artificial Intelligence (AAAI86), </booktitle> <pages> pages 140-145, </pages> <year> 1986. </year>
Reference: <author> Y. Peng and J.A. Reggia. </author> <title> A connectionist model for diagnostic problem solving, </title> <year> 1989. </year>
Reference: <author> D. Poole. </author> <title> Probabilistic partial evaluation: Exploiting structure in probabilistic inference. </title> <booktitle> In Ijcai-97: Proceedings of the Fifteenth International Joint Conference on Artificial Intelligence, </booktitle> <year> 1997. </year>
Reference: <author> S.K. Anderson R. D. Shachter and P. Solovitz. </author> <title> Global conditioning for probabilistic inference in belief networks. </title> <booktitle> In Uncertainty in Artificial Intelligence (UAI-91), </booktitle> <pages> pages 514-522, </pages> <year> 1991. </year>
Reference: <author> B. D'Ambrosio R.D. Shachter and B.A. Del Favro. </author> <title> Symbolic probabilistic inference in belief networks. </title> <booktitle> Automated Reasoning, </booktitle> <pages> pages 126-131, </pages> <year> 1990. </year>
Reference: <author> E. Santos, S.E. Shimony, and E. Williams. </author> <title> Hybrid algorithms for approximate belief updating in bayes nets. </title> <journal> International Journal of Approximate Reasoning, </journal> <note> in press. 30 R. </note> <author> DECHTER E. Santos. </author> <title> On the generation of alternative explanations with implications for belief revision. </title> <booktitle> In Uncertainty in Artificial Intelligence (UAI-91), </booktitle> <pages> pages 339-347, </pages> <year> 1991. </year>
Reference-contexts: Researchers have investigated various approaches to finding the mpe in a belief network. (See, e.g., (Pearl, 1988; Cooper, 1984; Peng and Reggia, 1986; Peng and Reggia, 1989)). Recent proposals include best first-search algorithms (Shimony and Charniack, 1991) and algorithms based on linear programming <ref> (Santos, 1991) </ref>. The problem is to find x 0 such that P (x 0 ) = max x i P (x i ; ejx pa i ) where x = (x 1 ; :::; x n ) and e is a set of observations.
Reference: <author> R.D. Shachter. </author> <title> Evaluating influence diagrams. </title> <journal> Operations Research, </journal> <volume> 34, </volume> <year> 1986. </year>
Reference: <author> R.D. Shachter. </author> <title> Probabilistic inference and influence diagrams. </title> <journal> Operations Research, </journal> <volume> 36, </volume> <year> 1988. </year>
Reference: <author> R. D. Shachter. </author> <title> An ordered examination of influence diagrams. </title> <journal> Networks, </journal> <volume> 20 </volume> <pages> 535-563, </pages> <year> 1990. </year>
Reference-contexts: DECHTER exp (w fl (d; e)), where w fl (d; e) is the induced width along d of the augmented moral graph. 2 Tatman and Schachter <ref> (Tatman and Shachter, 1990) </ref> have published an algorithm that is a variation of elim-meu, and Kjaerulff's algorithm (Kjaerulff, 1993) can be viewed as a variation of elim-meu tailored to dynamic probabilistic networks. 7. Relation of Bucket Elimination to Other Methods 7.1.
Reference: <author> P.P. Shenoy. </author> <title> Valuation-based systems for bayesian decision analysis. </title> <journal> Operations Research, </journal> <volume> 40 </volume> <pages> 463-484, </pages> <year> 1992. </year>
Reference-contexts: Related work We had mentioned throughout this paper many algorithms in probabilistic and deterministic reasoning that can be viewed as similar to bucket-elimination algorithms. In addition, unifying frameworks observing the common features between various algorithms had also appeared both in the past <ref> (Shenoy, 1992) </ref> and more recently in (Bistarelli et al., 1997). 10. Summary and Conclusion Using the bucket-elimination framework, which generalizes dynamic programming, we have presented a concise and uniform way of expressing algorithms for probabilistic reasoning.
Reference: <author> S.E. Shimony and E. Charniack. </author> <title> A new algorithm for finding map assignments to belief networks. </title> <editor> In P. Bonissone, M. Henrion, L. Kanal, and J. Lemmer ed., </editor> <booktitle> Uncertainty in Artificial Intelligence, </booktitle> <volume> volume 6, </volume> <pages> pages 185-193, </pages> <year> 1991. </year>
Reference-contexts: Researchers have investigated various approaches to finding the mpe in a belief network. (See, e.g., (Pearl, 1988; Cooper, 1984; Peng and Reggia, 1986; Peng and Reggia, 1989)). Recent proposals include best first-search algorithms <ref> (Shimony and Charniack, 1991) </ref> and algorithms based on linear programming (Santos, 1991).
Reference: <author> J.A. Tatman and R.D. Shachter. </author> <title> Dynamic programming and influence diagrams. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <year> 1990. </year>
Reference-contexts: DECHTER exp (w fl (d; e)), where w fl (d; e) is the induced width along d of the augmented moral graph. 2 Tatman and Schachter <ref> (Tatman and Shachter, 1990) </ref> have published an algorithm that is a variation of elim-meu, and Kjaerulff's algorithm (Kjaerulff, 1993) can be viewed as a variation of elim-meu tailored to dynamic probabilistic networks. 7. Relation of Bucket Elimination to Other Methods 7.1.
Reference: <author> N.L. Zhang and D. Poole. </author> <title> Exploiting causal independence in bayesian network inference. </title> <journal> Journal of Artificial Intelligence Research (JAIR), </journal> <year> 1996. </year>
Reference-contexts: Algorithm elim-bel is described in Figure 6. Theorem 3.1 Algorithm elim-bel compute the posterior belief P (x 1 je) for any given ordering of the variables. 2 Both the peeling algorithm for genetic trees (Cannings et al., 1978), and Zhang and Poole's recent algorithm <ref> (Zhang and Poole, 1996) </ref> are variations of elim-bel. BUCKET ELIMINATION 11 3.1. COMPLEXITY We see that although elim-bel can be applied using any ordering, its complexity varies considerably. <p> Once the bucket of F is processed, all the rest of the buckets are not skipable. Alternatively, the relevant portion of the network can be precomputed by using a recursive marking procedure applied to the ordered moral graph. (see also <ref> (Zhang and Poole, 1996) </ref>). Definition 3.8 Given an acyclic graph and a topological ordering that starts with the queried variable, and given evidence e, the marking process works as follows.
References-found: 38

