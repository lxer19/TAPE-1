URL: http://www.cs.rutgers.edu/~ellman/sara98/papers/ellman-summary.ps
Refering-URL: http://www.cs.rutgers.edu/~ellman/sara98/papers/
Root-URL: http://www.cs.rutgers.edu
Email: ellman@cs.rutgers.edu  
Title: Program Synthesis and Transformation Techniques for Simpuation, Optimization and Constraint Satisfaction Deductive Synthesis of Numerical
Author: Thomas Ellman 
Note: A  
Affiliation: Department of Computer Science Rutgers University  
Abstract: Scientists and engineers face recurring problems of constructing, testing and modifying numerical simulation programs. The process of coding and revising such simulators is extremely time-consuming, because they are almost always written in conventional programming languages. Scientists and engineers can therefore benefit from software that facilitates construction of programs for simulating physical systems. Our research adapts the methodology of deductive program synthesis to the problem of constructing numerical simulation codes. We have focused on simulators that can be represented as second order functional programs composed of numerical integration and root extraction routines. We have developed a system that uses first order Horn logic to synthesize numerical simulators built from these components. Our approach is based on two ideas: First, we axiomatize only the relationship between integration and differentiation. We neither attempt nor require a complete axiomatization of mathematical analysis. Second, our system uses a representation in which functions are reified as objects. Function objects are encoded as lambda expressions. Our knowledge base includes an axiomatization of term equality in the lambda calculus. It also includes axioms defining the semantics of numerical integration and root extraction routines. We use depth bounded SLD resolution to construct proofs and synthesize programs. Our system has successfully constructed numerical simulators for computational design of jet engine nozzles and sailing yachts, among others. Our results demonstrate that deductive synthesis techniques can be used to construct numerical simulation programs for realistic applications (Ellman and Murata 1998). Automatic design optimization is highly sensitive to problem formulation. The choice of objective function, constraints and design parameters can dramatically impact the computational cost of optimization and the quality of the resulting design. The best formulation varies from one application to another. A design engineer will usually not know the best formulation in advance. In order to address this problem, we have developed a system that supports interactive formulation, testing and reformulation of design optimization strategies. Our system includes an executable, data-flow language for representing optimization strategies. The language allows an engineer to define multiple stages of optimization, each using different approximations of the objective and constraints or different abstractions of the design space. We have also developed a set of transformations that reformulate strategies represented in our language. The transformations can approximate objective and constraint functions, abstract or reparameterize search spaces, or divide an optimization process into multiple stages. The system is applicable in principle to any design problem that can be expressed in terms of constrained op 
Abstract-found: 1
Intro-found: 0
Reference: <author> T. Ellman and T. Murata. </author> <title> Deductive synthesis of numerical simulation programs from networks of algebraic and ordinary differential equations. </title> <journal> Automated Software Engineering, </journal> <volume> 5(3), </volume> <year> 1998. </year>
Reference: <author> T. Ellman, J. Keane, M. Schwabacher, and K. Yao. </author> <title> Multi-level modeling for engineering design optimization. </title> <booktitle> Artificial Intelligence for Engineering Design, Analysis, and Manufacturing, </booktitle> <volume> 11(5), </volume> <year> 1997. </year>
Reference: <author> T. Ellman, J. Keane, A. Banerjee, and G. Armhold. </author> <title> A transformation system for interactive reformulation of design optimization strategies. Fully accepted to Research in Engineering Design, </title> <year> 1998. </year>
Reference: <author> T. </author> <title> Ellman. Abstraction via approximate symmetry. </title> <booktitle> In Proceedings of the Thirteenth International Joint Conference on Artificial Intelligence, </booktitle> <address> Chambery, France, </address> <month> August </month> <year> 1993. </year>
Reference: <author> T. </author> <title> Ellman. Synthesis of abstraction hierarchies for constraint satisfaction by clustering approximately equivalent objects. </title> <booktitle> In Proceedings of the Tenth International Conference on Machine Learning, </booktitle> <address> Amherst, MA, </address> <year> 1993. </year>
References-found: 5

