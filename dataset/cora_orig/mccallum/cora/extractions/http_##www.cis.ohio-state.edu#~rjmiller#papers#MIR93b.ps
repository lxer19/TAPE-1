URL: http://www.cis.ohio-state.edu/~rjmiller/papers/MIR93b.ps
Refering-URL: http://www.cis.ohio-state.edu/~rjmiller/Research/mmws.html
Root-URL: 
Email: raghug@cs.wisc.edu  
Title: The Use of Information Capacity in Schema Integration and Translation  
Author: R. J. Miller Y. E. Ioannidis R. Ramakrishnan frmiller, yannis, 
Affiliation: Dept. of Computer Sciences, Univ. of Wisconsin-Madison  
Abstract: In this paper, we carefully explore the assumptions behind using information capacity equivalence as a measure of correctness for judging transformed schemas in schema integration and translation methodologies. We present a classification of common integration and translation tasks based on their operational goals and derive from them the relative information capacity requirements of the original and transformed schemas. We show that for many tasks, information capacity equivalence of the schemas is not strictly required. Based on this, we present a new definition of correctness that reflects each undertaken task. We then examine existing methodologies and show how anomalies can arise when using those that do not meet the proposed correctness criteria. 
Abstract-found: 1
Intro-found: 1
Reference: [AABM82] <author> P. Atzeni, G. Ausiello, C. Batini, and M. Moscarini. </author> <title> Inclusion and Equivalence between Relational Database Schemata. </title> <journal> Theoretical Computer Science, </journal> <volume> 19 </volume> <pages> 267-285, </pages> <year> 1982. </year>
Reference-contexts: One may define many intuitive information preserving mappings from I (S1) to I (S2), where each instance of emp1 is mapped to some instance of emp2 with the same employees (i.e., the same eno, 1 Information capacity has been used extensively in the translation and integration literature <ref> [AABM82, BC86, Bor78, Eic91, Hul86, HY84, MS92, Ris82, RR87, and others] </ref>. While the precise details of the definitions differ among authors, we present definitions that are in keeping with the spirit of the existing literature. but also the same ename and sal), ignoring the values of age.
Reference: [ADD + 91] <author> R. Ahmed, P. DeSmedt, W. Du, W. Kent, M. A. Ketabchi, W. A. Litwin, A. Rafii, and M. C. Shan. </author> <title> The Pegasus Heterogeneous Multidatabase System. </title> <booktitle> IEEE Computer, </booktitle> <pages> pages 19-26, </pages> <month> December </month> <year> 1991. </year>
Reference-contexts: be able to translate queries and updates between schemas automatically, an absolute necessity for practical heterogeneous systems. 3.2 Database Integration Database integration or global schema design is a process that takes several, possibly heterogeneous, schemas and integrates them into a view that provides a uniform interface for all the schemas <ref> [ADD + 91, BLN86, DH84, LNE89, MB81, ME84, et al] </ref>. If the local schemas are specified in different data models, they may be translated into a common model before integration is performed. The process is depicted in the top part of step are shown. <p> These constraints commonly restrict the information capacity of the views. In such cases, it may still be a desirable (though no longer strictly necessary) goal to preserve these constraints by preserving information capacity. 4 3.4 Schema Translation As we saw earlier, schema translation is often combined with database integration <ref> [ADD + 91] </ref> or view integration [RR87, MS92] in a heterogeneous environment. The information capacity requirements on the translated schemas depend on the task at hand. This difference is often not recognized in practice. Schema translation may also be required in situations not involving integration.
Reference: [AP82] <author> P. Atzeni and D. S. Parker. </author> <title> Assumptions in Relational Database Theory. </title> <booktitle> In Proc. of Conf. on PODS, </booktitle> <pages> pages 1-9, </pages> <address> Los Angeles, CA, </address> <month> March </month> <year> 1982. </year>
Reference-contexts: This second constraint corresponds to the relationship uniqueness assumption (RUA), often asserted in relational theory, that a schema represents at most one relationship between any given set of attributes <ref> [AP82] </ref>. Under this assumption, and the assumption that the keys of the object classes are identical, the map f is an information preserving mapping and S1 S2.
Reference: [AP86] <author> P. Atzeni and D. S. Parker. </author> <title> Formal Properties of Net-Based Knowledge Representation Schemes. </title> <booktitle> In Proc. of Data Eng. Conf., </booktitle> <pages> pages 700-706, </pages> <year> 1986. </year>
Reference-contexts: Instance level conflicts are beyond the scope of this paper. 9 Other authors refer to such schemas as inconsistent <ref> [AP86] </ref>. 11 It is critical that a schema transformation tool rec-ognize potential conflicts and use this information to guide the designer in correctly specifying constraints and choosing transformations.
Reference: [BC86] <author> J. Biskup and B. Convent. </author> <title> A Formal View Integration Method. </title> <booktitle> In Proc. of SIGMOD Conf., </booktitle> <pages> pages 398-407, </pages> <address> Washington, D.C., </address> <month> May </month> <year> 1986. </year>
Reference-contexts: One may define many intuitive information preserving mappings from I (S1) to I (S2), where each instance of emp1 is mapped to some instance of emp2 with the same employees (i.e., the same eno, 1 Information capacity has been used extensively in the translation and integration literature <ref> [AABM82, BC86, Bor78, Eic91, Hul86, HY84, MS92, Ris82, RR87, and others] </ref>. While the precise details of the definitions differ among authors, we present definitions that are in keeping with the spirit of the existing literature. but also the same ename and sal), ignoring the values of age. <p> information (equivalence) preserving mapping from I (S2) to I (S1), so both f and t must be information (equivalence) preserving as well. 3.3 View Integration View integration or logical database design is a process that takes a set of user views and logically integrates them into a single conceptual schema <ref> [BLN86, BC86, SZ91, LNE89] </ref>. These views contain requirements for the portion of a database of interest to different users. The result of their integration is the schema for an actual database. The user views are optionally maintained to permit users to query the database using their own customized interface. <p> If the original schemas are assumed to satisfy the RUA then many of the transformations also guarantee dominance in the opposite direction. Similar transformations are included in methodologies based on the relational model to merge two relations <ref> [BC86] </ref>. In that work, the precondition for applying the transformation is the existence of an integration constraint asserting that the projection of the two relations on the common attributes (including the key) is identical in all instances.
Reference: [BDK92] <author> P. Buneman, S. Davidson, and A. Kosky. </author> <title> Theoretical Aspects of Schema Merging. </title> <booktitle> In Proc. of EDBT Conf., </booktitle> <pages> pages 152-167, </pages> <year> 1992. </year>
Reference-contexts: Similar assumptions are typically required to ensure these transformations create equivalent schemas. This same example can also be modified to show that the information ordering used in other schema merging proposals does not correspond to information capacity dominance <ref> [BDK92] </ref>. 5.2 Merging Object Classes An alternative strategy to unioning schemas and then performing restructuring transformations is to superimpose structures that have been identified as referring to the same set of real world concepts.
Reference: [BL84] <author> C. Batini and M. Lenzerini. </author> <title> A Methodology for Data Schema Integration in the Entity Relationship Model. </title> <journal> IEEE Trans. on Software Eng., </journal> <volume> SE-10(6):650-664, </volume> <month> November </month> <year> 1984. </year>
Reference-contexts: Methodologies based on the ER model typically have transformations to change attributes to entities (and vice versa) and entities to relationships (and vice versa) <ref> [BL84] </ref>. Methodologies using richer models including specialization or generalization have a greater array of transformations to handle the greater number of possible mismatches [SZ91, WE79]. 5.3.1 Description of Methodology We focus on a view integration methodology included in a database design tool [SZ91].
Reference: [BLN86] <author> C. Batini, M. Lenzerini, and S. B. </author> <note> Navathe. </note>
Reference-contexts: be able to translate queries and updates between schemas automatically, an absolute necessity for practical heterogeneous systems. 3.2 Database Integration Database integration or global schema design is a process that takes several, possibly heterogeneous, schemas and integrates them into a view that provides a uniform interface for all the schemas <ref> [ADD + 91, BLN86, DH84, LNE89, MB81, ME84, et al] </ref>. If the local schemas are specified in different data models, they may be translated into a common model before integration is performed. The process is depicted in the top part of step are shown. <p> information (equivalence) preserving mapping from I (S2) to I (S1), so both f and t must be information (equivalence) preserving as well. 3.3 View Integration View integration or logical database design is a process that takes a set of user views and logically integrates them into a single conceptual schema <ref> [BLN86, BC86, SZ91, LNE89] </ref>. These views contain requirements for the portion of a database of interest to different users. The result of their integration is the schema for an actual database. The user views are optionally maintained to permit users to query the database using their own customized interface.
References-found: 8

