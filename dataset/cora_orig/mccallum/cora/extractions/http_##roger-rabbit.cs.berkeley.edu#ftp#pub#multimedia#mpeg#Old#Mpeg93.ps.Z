URL: http://roger-rabbit.cs.berkeley.edu/ftp/pub/multimedia/mpeg/Old/Mpeg93.ps.Z
Refering-URL: http://roger-rabbit.cs.berkeley.edu/ftp/pub/multimedia/mpeg/Old/
Root-URL: http://www.cs.berkeley.edu
Abstract: The design and implementation of a software decoder for MPEG video bitstreams is described. The software has been ported to numerous platforms including PCs, workstations, and mainframe computers. Performance comparisons are given for dif ferent bitstreams and platforms including a unique metric devised to compare price/performance across different platforms (percentage of required bit rate per dollar). We also show that memory bandwidth is the primary limitation in performance of the decoder, not the computational complexity of the inverse discrete cosine transform as is commonly thought. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <editor> Foley, James D. et al., </editor> <booktitle> Computer Graphics: Principles and Practice , 2nd edition. </booktitle> <address> Addison-W esley, Reading, Mass., </address> <year> 1990. </year>
Reference-contexts: Frames/ Second Bits/ Pixel Bits/ Second I:P:B B 1102K 352x240 11.2K 8.8K 6.3K 30 .701 (34:1) 1.78M 11:40:98 D 559K 352x240 8.1K 5.5K 4.1K 6 .445 (54:1) 0.23M 6:25:88 F 315K 160x128 2.8K N/A N/A 30 1.09 (20:1) 0.67M 113:0:0 Table 1: Sample Bitstreams reader is referred to [9] and <ref> [1] </ref>. When implementing the decoder , we started with a straightforward implementation of the error diffusion algorithm with propagation of 4 error values (FS4). The first improvement we tried was to implement an error dif fusion algorithm with only 2 propagated error values (FS2).
Reference: [2] <author> ISO/IEC JTC1/SC2/WG10, </author> <title> Digital Compression and Coding of Continuous-Tone Still Images, ISO/ IEC Draft International Standard 10918-1, </title> <month> January 10, </month> <year> 1992. </year>
Reference-contexts: MPEG video coding uses three techniques to compress video data. The first technique, called transform coding, is very similar to JPEG image compression <ref> [2] </ref>. T ransform coding exploits two facts: 1) the human eye is relatively insensitive to high frequency visual information, and 2) certain mathematical transforms concentrate the energy of an image, which allows the image to be represented by fewer values. The discrete cosine transform (DCT) is one such transform.
Reference: [3] <author> ISO/IEC JTC/SC29, </author> <title> Coded Representation of Picture, Audio and Multimedia/Hypermedia Information, Committee Draft of Standard ISO/IEC 11172, </title> <month> December 6, </month> <year> 1991. </year>
Reference-contexts: A draft proposal was agreed upon in September 1990. Since then, minor changes have been made, and the standard has been released. The work described in this paper is based on the December 1991 committee draft <ref> [3] </ref>. Many research and commercial groups have developed MPEG decoders. Because of the high stakes involved in commercializing MPEG technology (e.g., HDTV and video conferencing), these groups have been reluctant to release their coders, decoders, or bitstreams. <p> Lastly, we describe the experience of publishing this software on the Internet. 2. The MPEG Video Coding Model This section briefly describes the MPEG video coding model. More complete descriptions are given in an intro ductory paper [6] and the ISO standard <ref> [3] </ref>. Performance of a Software MPEG Video Decoder* Ketan Patel, Brian C. Smith, and Lawrence A.
Reference: [4] <author> Knack, K., </author> <title> MIME silences multimedia critics, </title> <journal> LAN Computing, </journal> <volume> Vol. 3, No. 5, </volume> <month> May, </month> <year> 1992: </year> <pages> pp 3. </pages>
Reference-contexts: We added definitions to play MPEG components to an extensible mail system using our decoder <ref> [4] </ref>. 9. Conclusions Several conclusions can be drawn from this work. First, while IDCT performance is important, it is not the most critical process in a software decoder. Data structure organization and bit-level manipulations are critical. Second, memory bandwidth is important on RISC processors.
Reference: [5] <author> Lane, Tom, </author> <title> JPEG Software, Independent JPEG Group, </title> <type> unpublished paper, </type> <month> December </month> <year> 1992. </year>
Reference-contexts: The following table shows the results: Parsing includes all functions involved in bitstream parsing, entropy and motion vector decoding, and coefficient reconstruction. The IDCT code, which is called up to six times per macroblock, is a modified version of the fastest public domain IDCT available <ref> [5] </ref>. The algorithm applies a 1 dimensional IDCT to each row and then to each column. Zero coefficients are detected and used to avoid unnecessary calculation. Functions that perform predictive pixel reconstruction, including copying and averaging relevant pixels from reference frames, are grouped under the category reconstruction.
Reference: [6] <author> LeGall, Didier, </author> <title> MPEG - A V ideo Compression Standard For Multimedia Applications, </title> <journal> Communications of the ACM, April 1991, </journal> <volume> Vol 34, Num 4, </volume> <pages> pp 46-58. </pages>
Reference-contexts: Lastly, we describe the experience of publishing this software on the Internet. 2. The MPEG Video Coding Model This section briefly describes the MPEG video coding model. More complete descriptions are given in an intro ductory paper <ref> [6] </ref> and the ISO standard [3]. Performance of a Software MPEG Video Decoder* Ketan Patel, Brian C. Smith, and Lawrence A.
Reference: [7] <author> McMillan, Leonard and Lee Westover, </author> <title> A Forward-Mapping Realization of the Inverse Discrete Cosine Transform, </title> <booktitle> Data Compr ession Conference 92 , IEEE Computer Society Press, </booktitle> <address> Los Alamitos, CA., </address> <year> 1992. </year>
Reference-contexts: These special cases are detected during macroblock parsing and passed to the IDCT code that is optimized for them. We implemented the forward-mapped IDCT optimization suggested by X and Y <ref> [7] </ref>. Surprisingly , it did not speedup the code. W e are not sure why this optimization did not work. Perhaps the strength reductions performed automatically by the compiler already reduced the number of multiplies.
Reference: [8] <author> Rowe, Lawrence A. and Brian C. Smith, </author> <title> A Continuous Media Player, </title> <booktitle> Proc. 3rd Intl Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <address> San Diego, CA (Nov. </address> <year> 1992). </year>
Reference-contexts: First, we wanted to determine whether MPEG video could be decoded in real-time using a software-only implementation on current generation desktop computers. Second, we needed to develop a portable software decoder for inclusion in the Continuous Media Player being developed at U.C. Berkeley <ref> [8] </ref>. And third, we wanted to contribute public domain to the research community. This paper describes the design and implementation of the decoder. A novel feature of our decoder is the use of a dithering algorithm in YCrCb-space. <p> Implementation The decoder is structured to process a small, implementation dependent quantum of macroblocks at a time so it can be suspended while processing a frame. We envision using the decoder as a part of a larger system (the CM Player <ref> [8] </ref>), for delivering video data over local networks. This architecture is required by the player to service other tasks required in a multimedia system (e.g., handling user input or playing other media). The decoder was implemented in C using the X W in-dowing System.
Reference: [9] <editor> Ulichney, Robert, </editor> <publisher> Digital Halftoning,MIT Press, </publisher> <address> Cambridge, Mass. </address> <year> 1987. </year>
Reference-contexts: Dithering to full color devices is tantamount to RGB conversion. Dithering to gray scale devices is done by using only the luminance plane of the image. For color mapped devices, two dithering techniques are used: error dif fusion (sometime called Floyd-Steinberg) and ordered dither . Both are discussed in <ref> [9] </ref>. Dithering to monochrome devices can be done using either thresholding or error diffusion. In error diffusion dithering, each image pixel is mapped to the closest pixel in a fixed size color map. <p> B Frame Frames/ Second Bits/ Pixel Bits/ Second I:P:B B 1102K 352x240 11.2K 8.8K 6.3K 30 .701 (34:1) 1.78M 11:40:98 D 559K 352x240 8.1K 5.5K 4.1K 6 .445 (54:1) 0.23M 6:25:88 F 315K 160x128 2.8K N/A N/A 30 1.09 (20:1) 0.67M 113:0:0 Table 1: Sample Bitstreams reader is referred to <ref> [9] </ref> and [1]. When implementing the decoder , we started with a straightforward implementation of the error diffusion algorithm with propagation of 4 error values (FS4). The first improvement we tried was to implement an error dif fusion algorithm with only 2 propagated error values (FS2).
References-found: 9

