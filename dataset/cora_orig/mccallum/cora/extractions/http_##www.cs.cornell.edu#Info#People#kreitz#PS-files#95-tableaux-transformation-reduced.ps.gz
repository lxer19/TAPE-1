URL: http://www.cs.cornell.edu/Info/People/kreitz/PS-files/95-tableaux-transformation-reduced.ps.gz
Refering-URL: http://www.cs.cornell.edu/Info/People/kreitz/Abstracts/95-tableaux-transformation.html
Root-URL: 
Title: on Theorem Proving with Analytic Tableaux and Related Methods, On Transforming Intuitionistic Matrix Proofs into
Author: P. Baumgartner, R. H ahnle J. Posegga, Stephan Schmitt Christoph Kreitz 
Address: Alexanderstrae 10, D-64283 Darmstadt, Germany  
Affiliation: Fachgebiet Intellektik, Fachbereich Informatik, Technische Hochschule Darmstadt  
Date: 1995  
Note: ed., Proc. 4 th Workshop  LNAI 918, pp. 106-121, Springer Verlag,  
Abstract: e-mail: fsteph,kreitzg@intellektik.informatik.th-darmstadt.de Abstract. We present a procedure transforming intuitionistic matrix proofs into proofs within the intuitionistic standard sequent calculus. The transformation is based on L. Wallen's proof justifying his matrix characterization for the validity of intuitionistic formulae. Since this proof makes use of Fitting`s non-standard sequent calculus our procedure consists of two steps. First a non-standard sequent proof will be extracted from a given matrix proof. Secondly we transform each non-standard proof into a standard proof in a structure preserving way. To simplify the latter step we introduce an extended standard calculus which is shown to be sound and complete.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> W. Bibel. </author> <title> On matrices with connections. </title> <journal> Jour. of the ACM, </journal> <volume> 28, </volume> <pages> p. 633-645, </pages> <year> 1981. </year>
Reference-contexts: Because of this characterization it is possible to construct the purely logical parts of a NuPRL-proof in two steps. First a matrix proof in MJ has to be found by some effective proof procedure. Wallen suggested extending Bibel's connection method <ref> [1, 2] </ref> for this purpose. Secondly the matrix proof has to be transformed back into a valid standard sequent proof. <p> Thus it is possible to convert a matrix proofs which can be efficiently constructed by a machine into sequent proofs which are comprehensible for mathematicians and programmers. In order to create such a matrix proof it will be necessary to extend Bibel's connection method <ref> [1, 2] </ref> for classical logic to one satisfying the additional requirements mentioned in theorem 2 and to develop an efficient algorithm for unifying prefixes. Both topics are currently being investigated (see [7, 10]).
Reference: 2. <author> W. Bibel. </author> <title> Automated Theorem Proving. </title> <publisher> Vieweg Verlag 1987. </publisher>
Reference-contexts: Because of this characterization it is possible to construct the purely logical parts of a NuPRL-proof in two steps. First a matrix proof in MJ has to be found by some effective proof procedure. Wallen suggested extending Bibel's connection method <ref> [1, 2] </ref> for this purpose. Secondly the matrix proof has to be transformed back into a valid standard sequent proof. <p> On this basis Wallen [15] defines the notions of paths through an indexed signed formula hA; ni and of -complementary connections between formulae. Both extend the classical notions given in <ref> [2] </ref>. Wallen also defines J - admissibility of a combined substitution which essentially means that the induced ordering is irreflexive and can thus be represented by a directed acyclic graph. <p> Thus it is possible to convert a matrix proofs which can be efficiently constructed by a machine into sequent proofs which are comprehensible for mathematicians and programmers. In order to create such a matrix proof it will be necessary to extend Bibel's connection method <ref> [1, 2] </ref> for classical logic to one satisfying the additional requirements mentioned in theorem 2 and to develop an efficient algorithm for unifying prefixes. Both topics are currently being investigated (see [7, 10]).
Reference: 3. <author> W. Bibel, S. Br uning, U. Egly, and T. Rath. Komet. </author> <booktitle> In Proceedings of the Conference on Automated Deduction, Lecture Notes in Artificial Intelligence 814, </booktitle> <pages> pages 783-787. </pages> <publisher> Springer Verlag, </publisher> <year> 1994. </year>
Reference-contexts: Because of the expressiveness of the underlying calculus these tools are essentially interactive proof editors supported by a tactic mechanism for programming proofs on the meta-level. On the other hand theorem provers like Setheo [9], Otter [16], or KoMeT <ref> [3] </ref> show that reasoning about classical predicate logic can be automated sufficiently well. It would therefore be desirable to have a procedure which automatically generates the purely logical parts of a proof during a session with a proof editor for a rich constructive theory.
Reference: 4. <author> R. L. Constable et al. </author> <title> Implementing Mathematics with the NuPRL proof development system. </title> <publisher> Prentice Hall,1986. </publisher>
Reference-contexts: This would liberate its user from having to deal with rather tedious but boring parts of the proof. The proof created by such a procedure should be expressed within the calculus underlying the proof development tool to allow the extraction of programs. Proof editors like the NuPRL system <ref> [4] </ref> are based on a sequent calculus supporting the construction of proofs which are comprehensible for mathematicians and programmers. It includes a calculus for predicate logic similar to Gentzen's calculus for intuitionistic logic [8]. <p> It is, however, not yet clear whether the integrated approach is more efficient than proceeding in two separate steps. Therefore both methods shall be investigated and compared in the future. We have implemented the calculus LJ ? S with the NuPRL proof development system <ref> [4] </ref> by simulating LJ ? S -rules via tactics. The implementation of our transformation procedures as meta-programs of NuPRL is progressing and will soon be finished.
Reference: 5. <author> M. C. </author> <title> Fitting. Intuitionistic logic, model theory and forcing. </title> <booktitle> Studies in logic and the foundations of mathematics. </booktitle> <publisher> North-Holland, </publisher> <year> 1969. </year>
Reference-contexts: This calculus, which contains at most one formula in the succedent of a sequent, will be considered a standard sequent calculus LJ S . In [15] L. Wallen successfully created a matrix characterization MJ for the validity of intuitionistic formulae. His theoretical framework is based on Fitting's <ref> [5] </ref> non-standard sequent calculus LJ NS which allows the occurrence of more than one succedent formula. Because of this characterization it is possible to construct the purely logical parts of a NuPRL-proof in two steps. First a matrix proof in MJ has to be found by some effective proof procedure. <p> We conclude with a few remarks on implementation issues and efficient search procedures for MJ -proofs. 2 Preliminaries Our transformation procedure relates intuitionistic proofs in three entirely different calculi: a matrix characterization MJ [15], a non-standard sequent calculus LJ NS <ref> [5] </ref>, and the standard sequent calculus LJ S [8]. In this section we shall briefly review these calculi. <p> The rules of the calculi LJ NS and LJ S in <ref> [5] </ref>. Figure 1 presents the rules of both calculi simultaneously. Note that the antecedents and succedents of sequents are sets of formulae instead of sequences which allows to omit structural rules like weakening and contraction. <p> J takes into account the Kripke semantics of the special operators 8; :; ! (for details see <ref> [5, 15] </ref>) and defines intuitionistic restrictions on the corresponding LJ NS -proof.
Reference: 6. <author> J. Gallier. </author> <title> Constructive logics. Part I: A tutorial on proof systems and typed -calculi. </title> <type> Technical Report 8, </type> <institution> Digital Equipment Corporation, </institution> <year> 1991. </year>
Reference-contexts: Given this cal-culus the conversion of LJ NS -proofs into standard proofs is very simple (for instance compared to the one presented in [14] or <ref> [6, p. 40] </ref>) and keeps the size of the resulting proof small. Again, no search is involved in the process. Thus it is possible to convert a matrix proofs which can be efficiently constructed by a machine into sequent proofs which are comprehensible for mathematicians and programmers.
Reference: 7. <author> I. Gassmann. </author> <title> Eine Matrix-basierte Beweisprozedur f ur intuitionistische Logik. </title> <type> Master's thesis, </type> <institution> TH Darmstadt, FG Intellektik, </institution> <year> 1994. </year>
Reference-contexts: In order to create such a matrix proof it will be necessary to extend Bibel's connection method [1, 2] for classical logic to one satisfying the additional requirements mentioned in theorem 2 and to develop an efficient algorithm for unifying prefixes. Both topics are currently being investigated (see <ref> [7, 10] </ref>). Among these the work of Otten and Kreitz (see [10]) attempts to integrate the transformation step MJ 7! LJ NS (see section 3) into the extended connection method by traversing the reduction ordering / ? during the proof search.
Reference: 8. <author> G. </author> <title> Gentzen. Untersuchungen uber das logische Schlieen. </title> <journal> Mathematische Zeit-schrift, </journal> <volume> 39 </volume> <pages> 176-210, 405-431, </pages> <year> 1935. </year>
Reference-contexts: Proof editors like the NuPRL system [4] are based on a sequent calculus supporting the construction of proofs which are comprehensible for mathematicians and programmers. It includes a calculus for predicate logic similar to Gentzen's calculus for intuitionistic logic <ref> [8] </ref>. This calculus, which contains at most one formula in the succedent of a sequent, will be considered a standard sequent calculus LJ S . In [15] L. Wallen successfully created a matrix characterization MJ for the validity of intuitionistic formulae. <p> We conclude with a few remarks on implementation issues and efficient search procedures for MJ -proofs. 2 Preliminaries Our transformation procedure relates intuitionistic proofs in three entirely different calculi: a matrix characterization MJ [15], a non-standard sequent calculus LJ NS [5], and the standard sequent calculus LJ S <ref> [8] </ref>. In this section we shall briefly review these calculi. <p> To support this kind of reasoning the rules of LJ S are a slight modification of the original ones given by Gentzen in <ref> [8] </ref>. For the matrix characterization MJ each formula A will be represented by its formula tree. In this tree each node is attached with a position k which 108 uniquely describes a sub-formula of A which we denote by lab (k).
Reference: 9. <author> R. Letz, J. Schumann, S. Bayerl, and W. Bibel. </author> <title> Setheo: A high-performance theorem prover. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 8 </volume> <pages> 183-212, </pages> <year> 1992. </year>
Reference-contexts: Because of the expressiveness of the underlying calculus these tools are essentially interactive proof editors supported by a tactic mechanism for programming proofs on the meta-level. On the other hand theorem provers like Setheo <ref> [9] </ref>, Otter [16], or KoMeT [3] show that reasoning about classical predicate logic can be automated sufficiently well. It would therefore be desirable to have a procedure which automatically generates the purely logical parts of a proof during a session with a proof editor for a rich constructive theory.
Reference: 10. <author> J. Otten and C. </author> <title> Kreitz. A connection based proof method for intuitionistic logic. </title> <booktitle> In Proceedings Tableaux Workshop 1995 , this volume. </booktitle> <pages> 120 </pages>
Reference-contexts: In order to create such a matrix proof it will be necessary to extend Bibel's connection method [1, 2] for classical logic to one satisfying the additional requirements mentioned in theorem 2 and to develop an efficient algorithm for unifying prefixes. Both topics are currently being investigated (see <ref> [7, 10] </ref>). Among these the work of Otten and Kreitz (see [10]) attempts to integrate the transformation step MJ 7! LJ NS (see section 3) into the extended connection method by traversing the reduction ordering / ? during the proof search. <p> Both topics are currently being investigated (see [7, 10]). Among these the work of Otten and Kreitz (see <ref> [10] </ref>) attempts to integrate the transformation step MJ 7! LJ NS (see section 3) into the extended connection method by traversing the reduction ordering / ? during the proof search. The proof procedure would thus construct the matrix proof and a sequent proof simultaneously.
Reference: 11. <author> S. Schmitt. </author> <title> Ein erweiterter intuitionistischer Sequenzenkalk ul und dessen Anwen-dung im intuitionistischen Konnektionsbeweisen. </title> <type> Master's thesis, </type> <institution> TH Darmstadt, FG Intellektik, </institution> <year> 1994. </year>
Reference-contexts: A simple example shall illustrate the construction of an LJ NS - proof. For a detailed presentation of the transformation procedure and a proof of its correctness and completeness we refer to the authors technical report <ref> [11] </ref>. Example 1. Consider the propositional formula :A _ B ! B _ :A.
Reference: 12. <editor> K. Sch utte. Vollst andige Systeme modaler und intuitionistischer Logik. Ergeb-nisse der Mathematik und ihrer Grenzgebiete. </editor> <publisher> Springer Verlag, </publisher> <year> 1968. </year>
Reference-contexts: In this section we shall briefly review these calculi. Wallen's basic idea for developing the matrix characterization MJ which we shall describe below was to use Sch utte's embedding of intuitionistic logic J into the modal logic S4 <ref> [12] </ref> together with the Kripke semantic similarity between S4 and J [13]. Therefore his investigations were based on an intuitionistic sequent calculus which has a structure similar to the one for S4.
Reference: 13. <author> R. M. Smullyan. </author> <title> A generalization of intuitionistic and modal logics. </title> <editor> In H. Leblanc, ed., Truth, </editor> <booktitle> Syntax and Modality, </booktitle> <pages> pages 274-293. </pages> <publisher> North-Holland, </publisher> <year> 1973. </year>
Reference-contexts: In this section we shall briefly review these calculi. Wallen's basic idea for developing the matrix characterization MJ which we shall describe below was to use Sch utte's embedding of intuitionistic logic J into the modal logic S4 [12] together with the Kripke semantic similarity between S4 and J <ref> [13] </ref>. Therefore his investigations were based on an intuitionistic sequent calculus which has a structure similar to the one for S4. Contrary to Gentzen's (standard) sequent calculus LJ S this calculus allows more than one formula in the succedent of a sequent.
Reference: 14. <author> G. Takeuti. </author> <title> Proof Theory. </title> <publisher> North-Holland, </publisher> <year> 1975. </year>
Reference-contexts: Given this cal-culus the conversion of LJ NS -proofs into standard proofs is very simple (for instance compared to the one presented in <ref> [14] </ref> or [6, p. 40]) and keeps the size of the resulting proof small. Again, no search is involved in the process. Thus it is possible to convert a matrix proofs which can be efficiently constructed by a machine into sequent proofs which are comprehensible for mathematicians and programmers.
Reference: 15. <author> L. A. Wallen. </author> <title> Automated deduction in nonclassical logic. </title> <publisher> MIT Press, </publisher> <year> 1990. </year>
Reference-contexts: It includes a calculus for predicate logic similar to Gentzen's calculus for intuitionistic logic [8]. This calculus, which contains at most one formula in the succedent of a sequent, will be considered a standard sequent calculus LJ S . In <ref> [15] </ref> L. Wallen successfully created a matrix characterization MJ for the validity of intuitionistic formulae. His theoretical framework is based on Fitting's [5] non-standard sequent calculus LJ NS which allows the occurrence of more than one succedent formula. <p> Section 5 will present the transformation from LJ NS into LJ S . We conclude with a few remarks on implementation issues and efficient search procedures for MJ -proofs. 2 Preliminaries Our transformation procedure relates intuitionistic proofs in three entirely different calculi: a matrix characterization MJ <ref> [15] </ref>, a non-standard sequent calculus LJ NS [5], and the standard sequent calculus LJ S [8]. In this section we shall briefly review these calculi. <p> J takes into account the Kripke semantics of the special operators 8; :; ! (for details see <ref> [5, 15] </ref>) and defines intuitionistic restrictions on the corresponding LJ NS -proof. <p> Then hA; ni (n 2 f0; 1g) is an indexed signed formula, i.e. a signed formula hA; ni where all multiplicities of sub-formulae of A are given. On this basis Wallen <ref> [15] </ref> defines the notions of paths through an indexed signed formula hA; ni and of -complementary connections between formulae. Both extend the classical notions given in [2]. <p> A set of connections spans a formula hA; 0i if every atomic path through it contains a connection from this set. Based on these notions a characterization for the validity of an intuitionistic formula can be formulated as follows: Theorem 2. (Characterization theorem for MJ <ref> [15] </ref>) An intuitionistic formula A is J -valid if and only if there is a multiplicity , for the signed formula hA; 0i, a J -admissible combined substitution , and a set of -complementary connections that span hA; 0i . The correctness and completeness proofs of MJ are given in [15]. <p> <ref> [15] </ref>) An intuitionistic formula A is J -valid if and only if there is a multiplicity , for the signed formula hA; 0i, a J -admissible combined substitution , and a set of -complementary connections that span hA; 0i . The correctness and completeness proofs of MJ are given in [15]. <p> Furthermore we 2 Each special position has a predecessor in (t ) ? which is called an intuitionistic position. Such positions are necessary because of the relation to the matrix characterization for modal logic S4, i.e. the Kripke semantic similarity between the two logics <ref> [15] </ref>. The assignments at an intuitionistic position are equal to the ones at the corresponding special position. For extracting LJ NS -rules they are not relevant and must be ignored. 111 set proven (/ ? ) := ?.
Reference: 16. <author> L. Wos et. al. </author> <title> Automated reasoning contributes to mathematics and logic. </title> <editor> In M. E. Stickel, editor, </editor> <booktitle> Proceedings of the 10 th Conference on Automated Deduction, Lecture Notes in Computer Science 449, </booktitle> <pages> pages 485-499. </pages> <publisher> Springer Verlag, </publisher> <year> 1990. </year> <title> This article was processed using the L a T E X macro package with LLNCS style 121 </title>
Reference-contexts: Because of the expressiveness of the underlying calculus these tools are essentially interactive proof editors supported by a tactic mechanism for programming proofs on the meta-level. On the other hand theorem provers like Setheo [9], Otter <ref> [16] </ref>, or KoMeT [3] show that reasoning about classical predicate logic can be automated sufficiently well. It would therefore be desirable to have a procedure which automatically generates the purely logical parts of a proof during a session with a proof editor for a rich constructive theory.
References-found: 16

