URL: http://www.cse.ogi.edu/DISC/DIOM/online_pub/tech/TR96-32.ps
Refering-URL: http://www.cse.ogi.edu/DISC/DIOM/publication.html
Root-URL: http://www.cse.ogi.edu
Title: Library Release Form  Rainbow: Prototyping the DIOM Interoperable System  
Degree: Name of Author: Yoo-Shin Lee  Degree: Master of Science  
Address: 4016-77 Street NW Edmonton, Alberta Canada, T6K 0X6  
Note: Title of Thesis:  Year this Degree Granted: 1996 Permission is hereby granted to the University of Alberta Library to reproduce single copies of this thesis and to lend or sell such copies for private, scholarly or scientific research purposes only.  Date:  
Affiliation: University of Alberta  Yoo-Shin Lee  
Abstract: The author reserves all other publication and other rights in association with the copyright in the thesis, and except as hereinbefore provided, neither the thesis nor any substantial portion thereof may be printed or otherwise reproduced in any material form whatever without the author's prior written permission. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Ahmed, P. Smedt, W. Du, W. Kent, M. Ketabchi, W. Litwin, , and A. Raffi. </author> <title> The Pegasus heterogeneous multidatabase system. </title> <journal> IEEE Computer Magazine, </journal> <volume> 24(12) </volume> <pages> 19-27, </pages> <month> December </month> <year> 1991. </year>
Reference-contexts: User queries can then specify queries against local schemas of the nodes participating in the system. The mapping from each local schema to other partial or full global schema is often expressed in a common SQL-like language, such as HOSQL in the Pegasus System <ref> [1] </ref> or SQL/M in the UniSQL/M system [16]. The main weak point of this approach is the poor scalability since the users often need to know what are the information sources that are relevant or of interest to her queries.
Reference: [2] <author> Y. Arens and et al. </author> <title> Retrieving and integrating data from multiple information sources. </title> <journal> International Journal of Intelligent and Cooperative Information Systems, </journal> <volume> 2(2) </volume> <pages> 127-158, </pages> <year> 1993. </year>
Reference-contexts: An example of a wrapper-based architecture is the Garlic [12] project at IBM Almaden Research Center, which aims at developing a system for the management of large quantities of heterogeneous multimedia information using repository wrappers. The SIMS project <ref> [2, 3] </ref> uses the LOOM knowledge representation system as the data model and query language to implement the agent-based integration.
Reference: [3] <author> Y. Arens and C. Knoblock. </author> <title> Planning and reformulating queries for semantically-modeled multidatabase systems. </title> <booktitle> In Proceedings of the first International Conference on Knowledge and Information Management, </booktitle> <year> 1992. </year>
Reference-contexts: An example of a wrapper-based architecture is the Garlic [12] project at IBM Almaden Research Center, which aims at developing a system for the management of large quantities of heterogeneous multimedia information using repository wrappers. The SIMS project <ref> [2, 3] </ref> uses the LOOM knowledge representation system as the data model and query language to implement the agent-based integration.
Reference: [4] <author> K. Arnold and J. Gosling. </author> <title> The Java(tm) Programming Language. </title> <publisher> Addison-Wesley Publishing Company Corporate and Professional Publishing Group, </publisher> <year> 1996. </year>
Reference-contexts: The attribute editor on the bottom half of the screen is a Java <ref> [4] </ref> applet which allows for easy editing of attributes. Attributes have a name, type, and description. The name is a semantically relevant word to the attribute, the type can be a basic type such as String or Float, and the description box keeps an English language description of the attribute. <p> After all server-side processing is completed, the CGI 74 75 scripts return valid HTML code to the client side browser for display. An HTML interface has been designed and implemented. Future implementations include the creation of a Java <ref> [4] </ref> applet for Rainbow. This will make the user interfaces richer in functionality and more dynamic to user input.
Reference: [5] <author> K. Bath. </author> <note> What is Oraperl? http://www.bf.rmit.edu.au/ orafaq/perlish.html#oraperl, </note> <year> 1995. </year>
Reference-contexts: The target environment was the Internet and the target was a Job Search Assistant application. Rainbow is implemented as a WWW application. Its interface functions are created using HTML [14] and Perl [52] CGI-scripts. Linking to the underlying data sources and metadata library database is implemented with Oraperl <ref> [5] </ref>. clients, the Rainbow Services Managers (RSMs), the Official Metadata Catalogs (OMCs), the wrappers, and the data repositories. All components are connected by network. Figure 5.2 shows the connections from the DIOM clients to a RSM which is designed using a client-server model. <p> Many commercial database systems provide some external gateways to their products. Most DBMSs have either C or C++ interface libraries. Extremely popular DBMSs such as Oracle [44] also have extensions to popular languages such as Oraperl <ref> [5] </ref> and PL/SQL [45] as external gateways to their systems. Wrappers for RDBMSs must translate the DIOM-request to a local gateway command. The generic interface commands: Delete, Insert, and Select require little change, as all RDBMSs have the support for such basic data manipulation. <p> Oracle Oracle is a Relational DBMS which is accessed using the Oraperl 4 <ref> [5] </ref> gateway. Our first relational DBMS wrapper is implemented for the Oracle RDBMS. The data manipulation commands are directly translated into Oracle commands using the ora do Oraperl function call.
Reference: [6] <author> T. Berners-Lee, L. Masinter, and M. McCahill. </author> <note> Uniform resource locators (URL) (RFC 1738). http://ds.internic.net/rfc/rfc1738.txt, October 1994. </note>
Reference-contexts: The creation of a new wrapper can be partially automated by using a meta-wrapper to instantiate a skeleton wrapper. Specific parts of this wrapper may have to be coded by the repository-type 14 expert. For example, utilizing web search tools as data repositories requires forming the proper URL 1 <ref> [6] </ref> to that web tool. The wrapper implementors to these web sites would have to write code to form the proper URLs from the query. <p> This protocol relieves the system of network navigation and access conflicts, and thus offers a solution to the heterogeneity of network access protocols. The DIOM wrapper services are invoked by opening the correctly formed URL <ref> [6] </ref> to the wrapper. The wrapper is currently implemented as a CGI 1 [41] script, which a is common standard for external gateway programs to interface with information servers. Wrappers are implemented using Perl, the widely ported programming language.
Reference: [7] <author> M. Betz. </author> <title> Interoperable objects: laying the foundation for distributed object computing. </title> <journal> Dr. Dobb's Journal: Software Tools for Professional Programmer, </journal> <volume> (220), </volume> <month> October </month> <year> 1994. </year>
Reference-contexts: Distributed interoperable objects are objects that support a level of interoperability beyond the traditional object computing boundaries imposed by programming languages, data models, process address space, and network interfaces <ref> [7] </ref>. One way to support information gathering across heterogeneous and autonomous information sources is to approach the problems from an interoperability standpoint.
Reference: [8] <author> N. Borenstein. </author> <title> RFC 1521: MIME (multipurpose internet mail extensions) part one: Mechanisms for specifying and describing the format of internet message bodies. </title> <address> ftp://ds.internic.net/rfc/rfc1521.txt, </address> <month> September </month> <year> 1993. </year> <month> 101 </month>
Reference-contexts: up into the constituent parts: the requested service is a select, the attributes to return are all (`*'), the class to query is Job, and the query condition is company name=``IBM''. 7.1.2 Wrapper Result Format The wrapper returns the result from wrapper service calls as a MIME 2 multi-part object <ref> [8, 40] </ref> which is already a part of the HTTP 1.0 specifications.
Reference: [9] <author> C. Bowman, P. Danzig, D. Hardy, U. Manber, and M. F. Schwartz. </author> <title> The Harvest information discovery and access system. </title> <booktitle> In Proceedings of the Second International World Wide Web Conference, </booktitle> <pages> pages 763-771, </pages> <address> Chicago, Illinois, </address> <month> October </month> <year> 1994. </year>
Reference-contexts: by running an Oracle script or by retrieving a flat file that the DBMS Administrator has created manually. 7.4.2 Wrapper to Semi-Structured Information Sources The complexity and large scale of the world wide web (WWW) has fueled the development of search tools such as Yahoo [56], the Harvest Web Broker <ref> [9] </ref>, and Lycos [38]. These tools are sufficient for simple keyword-based searching but the results contain simple information and are represented as HTML documents which impedes further processing.
Reference: [10] <author> M. Bright, A. Hurson, and S. H. Pakzad. </author> <title> A taxonomy and current issues in multi-database systems. </title> <journal> IEEE Computer Magazine, </journal> <month> March </month> <year> 1992. </year>
Reference-contexts: The main strategies of the past have focussed on varying degrees of integration ranging from tightly-coupled to more loosely-coupled <ref> [49, 36, 10] </ref> along with many other diverse characteristics which make classification difficult. The advantage to tight-coupling is close synchronization among sites leading to efficient global processing.
Reference: [11] <author> L. Cardelli and P. Wegner. </author> <title> On understanding types, data abstraction, </title> <journal> and polymor-phism. ACM Computing Surveys, </journal> <volume> 17(4):471, </volume> <month> December </month> <year> 1985. </year>
Reference-contexts: As a result, the operations defined in the component interfaces can be invoked via the container's interface. The aggregation mechanism is a useful facility for implementing behavioral composition [29, 30] and ad-hoc polymor-phism <ref> [11] </ref> based on coercion of operations. Another benefit of using interface aggregation abstraction is to minimize the impact of component schema changes over the application programs working with the existing interoperation interfaces.
Reference: [12] <author> M. Carey, L. Haas, and P. S. et al. </author> <title> Towards heterogeneous multimedia information systems: the Garlic approach. </title> <type> In Technical Report, </type> <institution> IBM Almaden Research Center, </institution> <year> 1994. </year>
Reference-contexts: Similarly, the Intelligent Agent Integration Project at the University of Maryland at Baltimore County uses the Knowledge Query and Manipulation Language [18] (KQML) to integrate heterogeneous databases. An example of a wrapper-based architecture is the Garlic <ref> [12] </ref> project at IBM Almaden Research Center, which aims at developing a system for the management of large quantities of heterogeneous multimedia information using repository wrappers. The SIMS project [2, 3] uses the LOOM knowledge representation system as the data model and query language to implement the agent-based integration.
Reference: [13] <author> Y. Chang, L. Raschid, and B. Dorr. </author> <title> Transforming queries from a relational schema to an equivalent object schema: a prototype based on f-logic. </title> <booktitle> In Proceedings of the International Symposium on Methodologies in Information Systems (ISMIS), </booktitle> <year> 1994. </year>
Reference-contexts: The SIMS project [2, 3] uses the LOOM knowledge representation system as the data model and query language to implement the agent-based integration. Other examples include University of Maryland <ref> [13, 19] </ref> and SRI [46], which in different ways integrate heterogeneous data and knowledge bases using a multiple F-logic object schema, via the KIF knowledge interchange logic. The DIOM architecture is motivated mainly by the mediator architecture.
Reference: [14] <author> J. December and M. Ginsburg. </author> <title> HTML & CGI Unleashed. </title> <publisher> Sams.Net Publishing, </publisher> <month> Oct. </month> <year> 1995. </year>
Reference-contexts: This tool was designed to illustrate the functionality of the DIOM interoperable object model, architecture and query mediation process. The target environment was the Internet and the target was a Job Search Assistant application. Rainbow is implemented as a WWW application. Its interface functions are created using HTML <ref> [14] </ref> and Perl [52] CGI-scripts. Linking to the underlying data sources and metadata library database is implemented with Oraperl [5]. clients, the Rainbow Services Managers (RSMs), the Official Metadata Catalogs (OMCs), the wrappers, and the data repositories. All components are connected by network.
Reference: [15] <author> R. C. et al. </author> <title> The Object Database Standard: ODMG-93 (Release 1.1). </title> <publisher> Morgan Kauf-mann, </publisher> <year> 1994. </year>
Reference-contexts: It requires the definition of a common object model and a common object query language. Recent activities in the OMG and the ODMG standard <ref> [15] </ref>, which extends the OMG object model to include database interoperability, is an important standardization for continued work in distributed object management.
Reference: [16] <author> W. K. et al. </author> <title> On resolving semantic heterogeneity in multidatabase systems. Distributed and Parallel Databases, </title> <type> 1(3), </type> <year> 1993. </year>
Reference-contexts: The mapping from each local schema to other partial or full global schema is often expressed in a common SQL-like language, such as HOSQL in the Pegasus System [1] or SQL/M in the UniSQL/M system <ref> [16] </ref>. The main weak point of this approach is the poor scalability since the users often need to know what are the information sources that are relevant or of interest to her queries.
Reference: [17] <author> R. Fielding and H. Frystyk. </author> <note> Hypertext transfer protocol - HTTP/1.0. http://www.w3.org/pub/WWW/Protocols/HTTP1.0/draft-ietf-http-spec.html, february 1996. </note>
Reference-contexts: Figure 5.2 shows the connections from the DIOM clients to a RSM which is designed using a client-server model. Each client connects to a RSM server which processes client requests and can simultaneously handle more than one client. All components of the system interact through the HTTP <ref> [17] </ref> protocol. This is a popular protocol which has good flexibility in types of data that can be sent and received (both text and binary). Using HTTP also allows us to focus on the components and nonnetwork issues because of the large HTTP support base of tools and libraries.
Reference: [18] <author> T. Finin, D. McKay, R. Fritzsonand, and R. McEntire. </author> <title> KQML: An information and knowledge exchange protocol. Knowledge Building and Knowledge Sharing, </title> <year> 1994. </year>
Reference-contexts: It uses context knowledge in a context mediator to explicitly define the meaning of information provided by a source and that required by a receiver. Similarly, the Intelligent Agent Integration Project at the University of Maryland at Baltimore County uses the Knowledge Query and Manipulation Language <ref> [18] </ref> (KQML) to integrate heterogeneous databases. An example of a wrapper-based architecture is the Garlic [12] project at IBM Almaden Research Center, which aims at developing a system for the management of large quantities of heterogeneous multimedia information using repository wrappers.
Reference: [19] <author> D. Florescu, L. Raschid, and P. Valduriez. </author> <title> Using heterogeneous equivalences for query rewriting in multidatabase systems. </title> <booktitle> In Proceedings of the International Conference on Cooperative Information Systems (CoopIS), </booktitle> <year> 1995. </year> <month> 102 </month>
Reference-contexts: The SIMS project [2, 3] uses the LOOM knowledge representation system as the data model and query language to implement the agent-based integration. Other examples include University of Maryland <ref> [13, 19] </ref> and SRI [46], which in different ways integrate heterogeneous data and knowledge bases using a multiple F-logic object schema, via the KIF knowledge interchange logic. The DIOM architecture is motivated mainly by the mediator architecture.
Reference: [20] <author> H. Garcia-Molina and et al. </author> <title> The TSIMMIS approach to mediation: data models and languages (extended abstract). </title> <type> In Technical Report, </type> <institution> Stanford University, </institution> <year> 1994. </year>
Reference-contexts: For example, TSIMMIS <ref> [20] </ref> (The Stanford-IBM Manager of Multiple Information Sources) is one of the best known systems, which implements the mediators-based information integration architecture through a simple object exchange model. Another example is the Context Exchange project [22, 50] at MIT.
Reference: [21] <institution> Georgia Tech Research Corporation. GVU's 4th WWW user survey home page. </institution> <address> http://www.cc.gatech.edu/gvu/user surveys/survey-10-1995/, </address> <year> 1995. </year>
Reference-contexts: Users are spending approximately 79% of online time browsing <ref> [21] </ref>, therefore it is estimated that much bandwidth today is wasted due to inefficient searching and ineffective assembly of result data. Without more intelligent information tools, the great potential to information that this new networking technology offers is wasted.
Reference: [22] <author> C. Goh, S. Madnick, and M. Siegel. </author> <title> Context interchange: overcoming the challenges of large-scale interoperable database systems in a dynamic environment. </title> <booktitle> In Proceedings of International Conference on Information and Knowledge Management, </booktitle> <pages> pages 337-346, </pages> <year> 1994. </year>
Reference-contexts: For example, TSIMMIS [20] (The Stanford-IBM Manager of Multiple Information Sources) is one of the best known systems, which implements the mediators-based information integration architecture through a simple object exchange model. Another example is the Context Exchange project <ref> [22, 50] </ref> at MIT. It uses context knowledge in a context mediator to explicitly define the meaning of information provided by a source and that required by a receiver.
Reference: [23] <author> O. M. </author> <title> Group. The common object request broker: Architecture and specification. OMG Document Number 91.12.1, Revision 1.1, 492 Old Connecticut Path, Framingham, </title> <address> MA 01701, </address> <month> December </month> <year> 1991. </year>
Reference-contexts: Examples include Microsoft's Object Linking and Embedding (OLE), IBM's System Object Model (SOM) and its distributed version (DSOM), OMG's Common Object Request Broker Architecture (CORBA) <ref> [23] </ref>, and CI labs OpenDoc. The research and emergence of these technologies demonstrates that object-oriented programming and object-oriented database management systems are evolving and are focussing towards language-independence in a distributed object computing environment.
Reference: [24] <author> D. Heimbigner and D. McLeod. </author> <title> A federated architecture for information management. </title> <journal> ACM Trans. Comput. Syst., </journal> <volume> 3(3) </volume> <pages> 253-278, </pages> <month> July </month> <year> 1985. </year>
Reference-contexts: Our project is an attempt to support the USECA properties. Thus, it is infeasible to maintain a global and monolithic schema in a large-scale interoperable environment. 95 8.2 The Federated Approach Federated databases <ref> [24] </ref> are made up of component databases which are semi-autonomous and are a more loosely coupled subset of the global schema approach. Each local DBMS defines an export schema. Based on these export schemas, applications define import schemas which can be considered a global external view.
Reference: [25] <author> Hermetica. </author> <title> DBI a database interface module for perl5. </title> <note> http://www.hermetica.com/technologia/DBI/index.html, 1995. </note>
Reference-contexts: Oraperl is an extension of Perl which offers an API to Oracle DBMSs. The new version of Perl 5.0 offers the DBperl package which offers a generic API to many other DBMSs. Future implementations of the Perl-based wrappers will use the DBperl <ref> [25] </ref> package which will allow a single wrapper implementation to run over multiple underlying repository types. During the last stage of the Rainbow prototype development, Sun Microsystems announced the release of the Java JDBC 6 [51] database access API.
Reference: [26] <author> M. Horton. </author> <title> RFC 1036: Standard for interchange of USENET messages. </title> <address> ftp://ds.internic.net/rfc/rfc1036.txt, </address> <month> December </month> <year> 1987. </year>
Reference-contexts: Each one of the generic wrapper functions must translate the DIOM request into a Usenet client request <ref> [26] </ref> and translate the result back into a DIOM result. To facilitate data functions on Usenet data, we scan the data in its native format and insert the articles into a local database system (normalize).
Reference: [27] <author> R. Hull and R. King. </author> <title> Reference architecture for the intelligent integration of information (version 1.0.1). </title> <address> http://isse.gmu.edu/I3 Arch/index.html, </address> <month> May </month> <year> 1995. </year>
Reference-contexts: multidatabase systems, Chapter 9 summarizes the contributions of the Rainbow prototype to the overall development of the DIOM system, and the issues addressed by the Rainbow prototype implementation. 8 9 Chapter 2 DIOM System Architecture The DIOM system architecture is given in Figure 2.1 which conforms to the mediator-based framework <ref> [27] </ref>. The architecture is a two-tier architecture offering services both at the mediator level and the wrapper level. The information sources are located at the bottom of the diagram and are accessed through the wrappers.
Reference: [28] <author> J. Kahng and D. McLeod. </author> <title> Dynamic classification ontologies for discovery in cooperative federated databases. </title> <booktitle> In Proceedings of the International Conference on Coopertive Information Systems, </booktitle> <pages> pages 26-35, </pages> <address> Brussels, June 19-21 1996. </address> <publisher> IEEE Press. </publisher>
Reference-contexts: For example, the knowledge about connecting term JobList, OpenJobs, Positions to the term Job can be learned directly from the interface definition of Job. In order to build comprehensive domain-specific terminology matching rules and ontology, a sophisticated learning and knowledge discovery tool is needed <ref> [39, 43, 28] </ref>. Appropriate interaction with the information consumer or domain expert may also be required. 3.5.4 Source-specific Metadata In order to automate query translation and query result assembly, additional metadata are required.
Reference: [29] <author> L. Liu. </author> <title> A recursive object algebra based on aggregation abstraction for complex objects. </title> <journal> Journal of Data and Knowledge Engineering, </journal> <volume> 11(1) </volume> <pages> 21-60, </pages> <year> 1993. </year>
Reference-contexts: As a result, the operations defined in the component interfaces can be invoked via the container's interface. The aggregation mechanism is a useful facility for implementing behavioral composition <ref> [29, 30] </ref> and ad-hoc polymor-phism [11] based on coercion of operations. Another benefit of using interface aggregation abstraction is to minimize the impact of component schema changes over the application programs working with the existing interoperation interfaces.
Reference: [30] <author> L. Liu and R. Meersman. </author> <title> Activity model: a declarative approach for capturing communication behavior in object-oriented databases. </title> <booktitle> In Proceeding of the 18th International Conference on Very Large Databases, </booktitle> <address> Vancouver, Canada, 1992. </address> <publisher> Morgan Kauffman. </publisher> <pages> 103 </pages>
Reference-contexts: As a result, the operations defined in the component interfaces can be invoked via the container's interface. The aggregation mechanism is a useful facility for implementing behavioral composition <ref> [29, 30] </ref> and ad-hoc polymor-phism [11] based on coercion of operations. Another benefit of using interface aggregation abstraction is to minimize the impact of component schema changes over the application programs working with the existing interoperation interfaces.
Reference: [31] <author> L. Liu and C. Pu. </author> <title> The DIOM approach to large-scale interoperable information sys-tems. </title> <type> Technical report, </type> <institution> TR95-16, Department of Computing Science, University of Alberta, Edmonton, Alberta, </institution> <month> March </month> <year> 1995. </year>
Reference-contexts: For an interopera-ble system to be effective in large-scale computing environments requires attention to the USECA properties <ref> [31] </ref> which are summarized here: Uniform access Uniform access pertains to the differences in accessing heterogeneous information sources. We can categorize these differences as network access protocol differences and information language differences. <p> For example, efficient distributed query processing, security, automated semantic representation and matching are other important areas of concern systems should consider. Our approach to a large-scale cooperative system is based on the Distributed Interop-erable Object Model (DIOM) <ref> [31] </ref>. The DIOM mediation architecture features the support of the USECA properties in the development of distributed object query services, and the flexible cooperation of a network of mediators for transparent query processing. <p> for the system users to customize queries for each component information source, but also nearly impossible to keep track of the schema changes. 1.3 Scope and Organization of Thesis This thesis presents the design and implementation of a prototype query tool, namely Rainbow, based on the DIOM query mediation methodology <ref> [31] </ref>. The theoretical model and architecture are based on previous work from the DIOM [31] Project. This prototype illustrates the ability to automate the linking of information consumers (users searching for information) with information producers (hosts providing information). The prototype will also demonstrate querying these multiple heterogeneous sources. <p> nearly impossible to keep track of the schema changes. 1.3 Scope and Organization of Thesis This thesis presents the design and implementation of a prototype query tool, namely Rainbow, based on the DIOM query mediation methodology <ref> [31] </ref>. The theoretical model and architecture are based on previous work from the DIOM [31] Project. This prototype illustrates the ability to automate the linking of information consumers (users searching for information) with information producers (hosts providing information). The prototype will also demonstrate querying these multiple heterogeneous sources. <p> In the first phase of DIOM implementation, the specialization abstraction is only supported for construction of a new interface based on one or more base interfaces whose scope is the same data repository (see <ref> [31] </ref> for more details). Interface Composition Mechanism: Import The import mechanism is designed for importing selected portions of the data from a given export schema 1 , instead of importing everything that is available. <p> A mapping link is maintained between a source model object and a domain model object. It is important to note that: * both the consumer's domain usage model and the information producer's source mod els are expressed in the DIOM interface description language <ref> [31] </ref>. * The idea of building specialized mediators for specific application areas provides not only a modular organization of the growing number of information sources on the Internet but also a clear characterization of the types of queries each mediator can handle. 20 * The interface construction mechanisms provided in DIOM-IDL <p> It would be convenient and beneficial if there existed software systems that provided facilities allowing for easy interoperation among these diverse information sources. Rainbow implements an interoperable software architecture based on DIOM to support USECA properties. The foundation of the Rainbow architecture design is with the DIOM system architecture <ref> [31] </ref> described in Chapter 2. <p> It requires the definition of a common object model and a common object query language. Recent activities in the OMG and the ODMG standard [15], which extends the OMG object model to include database interoperability, is an important standardization for continued work in distributed object management. Research into DIOM <ref> [31] </ref> takes ODMG and adds extensions targeted to allow for more flexible and adaptive composition of interoperation interfaces, such as the addition of the abstraction mechanisms presented earlier in this thesis. 8.4 Multidatabase language systems In a multidatabase language system, the global system supports all global functions by providing query language
Reference: [32] <author> L. Liu and C. Pu. </author> <title> The distributed interoperable object model and its application to large-scale interoperable database systems. </title> <booktitle> In ACM International Conference on Information and Knowledge Management (CIKM'95), </booktitle> <address> Baltimore, Maryland, USA, </address> <month> Novem-ber </month> <year> 1995. </year>
Reference-contexts: The prototype will also demonstrate querying these multiple heterogeneous sources. The Rainbow system consists of several components that gather information from unstructured data sources or 7 from other information brokers/mediators, and represent gathered information in terms of a consumer's interface description defined using DIOM IDL/IQL <ref> [32] </ref>. The main component services that the RAINBOW prototype addresses include the producers' information source registration, metadata library management, query routing, query decomposition, parallel query plan generation, subquery transformation and execution, and results assembly. <p> For example, a Document Inquiry mediator (as shown in Figure 2.2) can be built by interacting among several smaller mediators such as Book mediator, TechReport mediator, Medical ClaimFolder mediator <ref> [32] </ref>, and so on. To build a network of specialized and interacting mediators, we need an architecture for a single mediator (perhaps called a meta mediator) that can be instantiated to provide multiple mediators.
Reference: [33] <author> L. Liu, C. Pu, R. Barga, and T. Zhou. </author> <title> Differential evaluation of continual queries. </title> <booktitle> In IEEE Proceedings of the 16th International Conference on Distributed Computing Systems, </booktitle> <address> Hong Kong, </address> <month> May </month> <year> 1996. </year>
Reference-contexts: Expert queries can be traced by using the trace checkbox. The query can then be installed and be reused later on. Eventually, an extension to expert query installation is the development of a toolkit for supporting continuous (active) queries <ref> [33] </ref>. the Job Search Assistant, so the system will use the interfaces found from that mediator. The Target field is left as `*', so all repositories relevant to the interfaces will be used to fulfill the query. <p> Optimal access plans should take into account the efficient processing of aggregate functions such as SUM, COUNT, MAX, and MIN. Research into the prototype implementation of continuous query <ref> [33] </ref> support is also open. In the prototype, query tracing is simulated and not fully functional. The Rainbow Services Manager needs more work to fully support the DIOM query decomposition algorithms and the query assembly algorithm.
Reference: [34] <author> L. Liu, C. Pu, and Y. Lee. </author> <title> An adaptive approach to query mediation across heterogeneous databases. </title> <booktitle> In Proceedings of the International Conference on Coopertive Information Systems, </booktitle> <pages> pages 144-156, </pages> <address> Brussels, June 19-21 1996. </address> <publisher> IEEE Press. </publisher>
Reference-contexts: This thesis will present our initial prototyping effort by a work-through example, with the objective of demonstrating the practical feasibility of the DIOM query mediation method <ref> [34] </ref>.
Reference: [35] <author> M. T. Ozsu, U. Dayal, and P. Valduriez, </author> <title> editors. Distributed Object Management, Edmonton, Canada, August 1992. </title> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Furthermore, the component schemas cannot evolve without the consent from the affected integrated schemas. Again a federated approach does not satisfy the USECA requirements. 8.3 The Distributed Ob ject Management Approach The distributed object management approach <ref> [37, 35] </ref>, generalizes the federated approach by modeling heterogeneous databases of different levels of granularity as objects in a distributed object space. It requires the definition of a common object model and a common object query language.
Reference: [36] <author> M. T. Ozsu and P. Valduriez. </author> <title> Principles of Distributed Database Systems. </title> <publisher> Prentice-Hall, </publisher> <year> 1991. </year>
Reference-contexts: The main strategies of the past have focussed on varying degrees of integration ranging from tightly-coupled to more loosely-coupled <ref> [49, 36, 10] </ref> along with many other diverse characteristics which make classification difficult. The advantage to tight-coupling is close synchronization among sites leading to efficient global processing.
Reference: [37] <author> F. Manola and S. Heiler. </author> <title> An approach to interoperable object models. </title> <booktitle> In Proceedings of the 1992 International Workshop on Distributed Object Management, </booktitle> <address> Edmonton, Canada, </address> <month> August </month> <year> 1992. </year>
Reference-contexts: Furthermore, the component schemas cannot evolve without the consent from the affected integrated schemas. Again a federated approach does not satisfy the USECA requirements. 8.3 The Distributed Ob ject Management Approach The distributed object management approach <ref> [37, 35] </ref>, generalizes the federated approach by modeling heterogeneous databases of different levels of granularity as objects in a distributed object space. It requires the definition of a common object model and a common object query language.
Reference: [38] <author> M. L. Mauldin and J. R. R. Leavitt. </author> <title> Web agent related research at the center for machine translation. Center for Machine Translation, </title> <institution> Carnegie Mellon University, </institution> <month> August </month> <year> 1994. </year>
Reference-contexts: Oracle script or by retrieving a flat file that the DBMS Administrator has created manually. 7.4.2 Wrapper to Semi-Structured Information Sources The complexity and large scale of the world wide web (WWW) has fueled the development of search tools such as Yahoo [56], the Harvest Web Broker [9], and Lycos <ref> [38] </ref>. These tools are sufficient for simple keyword-based searching but the results contain simple information and are represented as HTML documents which impedes further processing. There is a need for tools which can assist consumers in the merging, the combining, and the sorting of retrieved results from multiple sources.
Reference: [39] <author> E. Mena, E. Kashyap, A. Sheth, and A. Illarramendi. </author> <title> OBSERVER: an approach for query processing in global information systems based on interoperation across preexisting ontologies. </title> <booktitle> In Proceedings of the International Conference on Coopertive Information Systems, </booktitle> <pages> pages 14-25, </pages> <address> Brussels, June 19-21 1996. </address> <publisher> IEEE Press. </publisher> <pages> 104 </pages>
Reference-contexts: For example, the knowledge about connecting term JobList, OpenJobs, Positions to the term Job can be learned directly from the interface definition of Job. In order to build comprehensive domain-specific terminology matching rules and ontology, a sophisticated learning and knowledge discovery tool is needed <ref> [39, 43, 28] </ref>. Appropriate interaction with the information consumer or domain expert may also be required. 3.5.4 Source-specific Metadata In order to automate query translation and query result assembly, additional metadata are required.
Reference: [40] <author> K. Moore. </author> <title> RFC 1522: MIME (multipurpose internet mail extensions) part two: Mes--sage header extensions for non-ascii text. </title> <address> ftp://ds.internic.net/rfc/rfc1522.txt, </address> <month> Septem-ber </month> <year> 1993. </year>
Reference-contexts: up into the constituent parts: the requested service is a select, the attributes to return are all (`*'), the class to query is Job, and the query condition is company name=``IBM''. 7.1.2 Wrapper Result Format The wrapper returns the result from wrapper service calls as a MIME 2 multi-part object <ref> [8, 40] </ref> which is already a part of the HTTP 1.0 specifications.
Reference: [41] <author> NCSA HTTPd Development Team. </author> <title> The common gateway interface. </title> <address> http://hoohoo.ncsa.uiuc.edu/cgi/overview.html. </address>
Reference-contexts: This protocol relieves the system of network navigation and access conflicts, and thus offers a solution to the heterogeneity of network access protocols. The DIOM wrapper services are invoked by opening the correctly formed URL [6] to the wrapper. The wrapper is currently implemented as a CGI 1 <ref> [41] </ref> script, which a is common standard for external gateway programs to interface with information servers. Wrappers are implemented using Perl, the widely ported programming language.
Reference: [42] <institution> Netscape Communications Corp. </institution> <note> Netscape homepage. http://home.netscape.com/. </note>
Reference-contexts: Much of the underlying sub-system components are simulated and need to made fully functional. 48 Chapter 6 The User Interface This chapter describes the Rainbow design of the HTML-based DIOM interface accessible by World Wide Web clients such as Netscape <ref> [42] </ref>. Specifically the following functionality was taken into consideration in the user interface design: * Producer Metadata Facilities Registration of new repositories including individual information sources and external information brokers such as Lycos, Infoseek etc. <p> The web client starts the application by opening a URL 1 to the Rainbow main menu. The initial main menu page is shown in Figure 6.1. The web page in screen are Netscape program functions which are beyond the scope of this discussion (See <ref> [42] </ref> for Netscape details). Second, the larger frame to the right of the screen offers all major Rainbow features: the Producer Metadata Facilities, the Consumer Metadata Facilities, and the Query Facilities.
Reference: [43] <author> A. M. Ouksel and I. Ahmed. </author> <title> Coordinating knowledge elicitation to support context construction in cooperative information systems. </title> <booktitle> In Proceedings of the International Conference on Coopertive Information Systems, </booktitle> <pages> pages 4-13, </pages> <address> Brussels, June 19-21 1996. </address> <publisher> IEEE Press. </publisher>
Reference-contexts: For example, the knowledge about connecting term JobList, OpenJobs, Positions to the term Job can be learned directly from the interface definition of Job. In order to build comprehensive domain-specific terminology matching rules and ontology, a sophisticated learning and knowledge discovery tool is needed <ref> [39, 43, 28] </ref>. Appropriate interaction with the information consumer or domain expert may also be required. 3.5.4 Source-specific Metadata In order to automate query translation and query result assembly, additional metadata are required.
Reference: [44] <author> J. Perry and J. Lateer. </author> <title> Understanding Oracle. </title> <publisher> Sybex Inc., </publisher> <address> 2021 Challenger Drive #100, Alameda, CA, </address> <year> 1989. </year>
Reference-contexts: The generic wrapper suite functions to RDBMSs such as 83 84 Oracle are directly mapped to local Oracle commands. Many commercial database systems provide some external gateways to their products. Most DBMSs have either C or C++ interface libraries. Extremely popular DBMSs such as Oracle <ref> [44] </ref> also have extensions to popular languages such as Oraperl [5] and PL/SQL [45] as external gateways to their systems. Wrappers for RDBMSs must translate the DIOM-request to a local gateway command.
Reference: [45] <author> T. </author> <title> Portfolio. PL/SQL User's guide and reference. </title> <publisher> Oracle Corporation, </publisher> <month> Dec. </month> <year> 1992. </year>
Reference-contexts: Many commercial database systems provide some external gateways to their products. Most DBMSs have either C or C++ interface libraries. Extremely popular DBMSs such as Oracle [44] also have extensions to popular languages such as Oraperl [5] and PL/SQL <ref> [45] </ref> as external gateways to their systems. Wrappers for RDBMSs must translate the DIOM-request to a local gateway command. The generic interface commands: Delete, Insert, and Select require little change, as all RDBMSs have the support for such basic data manipulation.
Reference: [46] <author> L. Qian and L. Raschid. </author> <title> Query interoperation among relational and object-oriented databases. </title> <booktitle> In Proceedings of the International Conference on Data Engineering, </booktitle> <address> TaiPei, </address> <year> 1995. </year>
Reference-contexts: The SIMS project [2, 3] uses the LOOM knowledge representation system as the data model and query language to implement the agent-based integration. Other examples include University of Maryland [13, 19] and SRI <ref> [46] </ref>, which in different ways integrate heterogeneous data and knowledge bases using a multiple F-logic object schema, via the KIF knowledge interchange logic. The DIOM architecture is motivated mainly by the mediator architecture.
Reference: [47] <author> S. Ram, </author> <title> editor. Special Issue on Heterogeneous Distributed Databases Systems, </title> <journal> volume 24:12 of IEEE Computer Magazine. IEEE Computer Society, </journal> <month> December </month> <year> 1991. </year>
Reference-contexts: The following sections will give a general overview of relevant research into major areas of mul-tidatabase research and how they are similar to and different from the work presented in this thesis. 8.1 The Global Schema Approach A classic approach <ref> [47, 48] </ref> for multidatabase management relies on building a single global schema to encompass the differences among the multiple local database schemas.
Reference: [48] <author> A. Sheth. </author> <title> Special Issue in Multidatabase Systems. </title> <journal> ACM SIGMOD Record, Vol.20, </journal> <volume> No. 4, </volume> <month> December </month> <year> 1991. </year>
Reference-contexts: The following sections will give a general overview of relevant research into major areas of mul-tidatabase research and how they are similar to and different from the work presented in this thesis. 8.1 The Global Schema Approach A classic approach <ref> [47, 48] </ref> for multidatabase management relies on building a single global schema to encompass the differences among the multiple local database schemas.
Reference: [49] <author> A. Sheth and J. Larson. </author> <title> Federated database systems for managing distributed, heterogeneous, and autonomous databases. </title> <journal> ACM Computing Surveys, </journal> <volume> 22(3) </volume> <pages> 183-236, </pages> <month> September </month> <year> 1990. </year>
Reference-contexts: The main strategies of the past have focussed on varying degrees of integration ranging from tightly-coupled to more loosely-coupled <ref> [49, 36, 10] </ref> along with many other diverse characteristics which make classification difficult. The advantage to tight-coupling is close synchronization among sites leading to efficient global processing.
Reference: [50] <author> M. Siegel and S. Madnick. </author> <title> Context interchange: sharing the meaning of data. </title> <booktitle> In ACM SIGMOD RECORD on Management of Data, </booktitle> <pages> pages 77-78, 20, </pages> <month> 4 </month> <year> (1991). </year> <month> 105 </month>
Reference-contexts: For example, TSIMMIS [20] (The Stanford-IBM Manager of Multiple Information Sources) is one of the best known systems, which implements the mediators-based information integration architecture through a simple object exchange model. Another example is the Context Exchange project <ref> [22, 50] </ref> at MIT. It uses context knowledge in a context mediator to explicitly define the meaning of information provided by a source and that required by a receiver.
Reference: [51] <author> Sun Microsystems, Inc. </author> <title> The JDBC(tm) database access API. </title> <note> http://splash.javasoft.com/jdbc/, 1996. </note>
Reference-contexts: Future implementations of the Perl-based wrappers will use the DBperl [25] package which will allow a single wrapper implementation to run over multiple underlying repository types. During the last stage of the Rainbow prototype development, Sun Microsystems announced the release of the Java JDBC 6 <ref> [51] </ref> database access API. JDBC will become a 6 Java and JDBC are trademarks of Sun Microsystems Inc, http://splash.javasoft.com/jdbc/ 93 widely accepted API to many information sources. Java-based wrappers can now also be implemented. Utilizing JDBC will allow single wrapper implementations to be used for all underlying supported repositories.
Reference: [52] <author> L. Wall and R. L. Schwartz. </author> <title> Programming Perl. </title> <publisher> O'Reilly and Associates, </publisher> <month> Jan. </month> <year> 1991. </year>
Reference-contexts: The target environment was the Internet and the target was a Job Search Assistant application. Rainbow is implemented as a WWW application. Its interface functions are created using HTML [14] and Perl <ref> [52] </ref> CGI-scripts. Linking to the underlying data sources and metadata library database is implemented with Oraperl [5]. clients, the Rainbow Services Managers (RSMs), the Official Metadata Catalogs (OMCs), the wrappers, and the data repositories. All components are connected by network.
Reference: [53] <author> G. Wiederhold. </author> <title> Mediators in the architecture of future information systems. </title> <journal> IEEE Computer Magazine, </journal> <month> March </month> <year> 1992. </year>
Reference-contexts: The meta-mediator and meta-wrapper modules allow for the instantiation of new mediators and wrappers respectively. The following is a description of the architectural components: Mediators Mediators simplify, abstract, reduce, merge, and explain data from the producer repositories <ref> [53] </ref>. The DIOM application mediator can be viewed as a logical grouping of consumer defined interfaces that represents an information consumer's view of data with respect to 12 13 a particular domain. <p> The DIOM query mediation services will automatically connect consumers' query requests to the relevant producers' source information. 8.5 Mediator Approach Another approach, called the intelligent information integration (I 3 ) mediation <ref> [53] </ref> can be seen as a generic system architecture for information integration, with several projects 96 funded by ARPA in the I 3 program [54].
Reference: [54] <author> G. Wiederhold. </author> <title> I 3 glossary. </title> <type> Draft 7, </type> <month> March 16 </month> <year> 1995. </year>
Reference-contexts: will automatically connect consumers' query requests to the relevant producers' source information. 8.5 Mediator Approach Another approach, called the intelligent information integration (I 3 ) mediation [53] can be seen as a generic system architecture for information integration, with several projects 96 funded by ARPA in the I 3 program <ref> [54] </ref>. For example, TSIMMIS [20] (The Stanford-IBM Manager of Multiple Information Sources) is one of the best known systems, which implements the mediators-based information integration architecture through a simple object exchange model. Another example is the Context Exchange project [22, 50] at MIT.
Reference: [55] <author> R. W. Wiggins. </author> <title> Growth of the internet: An overview of a complicated subject. </title> <note> http://www.msu.edu//staff/rww/netgrow.html, 1995. </note>
Reference-contexts: Introduction 1.1 Thesis Motivation The explosion of networking technology has led to the ubiquitous Internet and the large-scale availability of diverse information sources. Although there is much debate on the accuracy of Internet measurements, a study <ref> [55] </ref> done in 1995 conservatively estimates that there are ten million hosts 1 and twenty million users on the Internet with numbers doubling roughly every year.
Reference: [56] <author> Yahoo Inc. </author> <note> Yahoo! homepage. http://www.yahoo.com/. 106 </note>
Reference-contexts: diom wrapper GetExportSchema, is generated by running an Oracle script or by retrieving a flat file that the DBMS Administrator has created manually. 7.4.2 Wrapper to Semi-Structured Information Sources The complexity and large scale of the world wide web (WWW) has fueled the development of search tools such as Yahoo <ref> [56] </ref>, the Harvest Web Broker [9], and Lycos [38]. These tools are sufficient for simple keyword-based searching but the results contain simple information and are represented as HTML documents which impedes further processing.
References-found: 56

