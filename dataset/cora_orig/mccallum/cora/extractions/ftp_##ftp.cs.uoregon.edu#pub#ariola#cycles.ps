URL: ftp://ftp.cs.uoregon.edu/pub/ariola/cycles.ps
Refering-URL: http://www.cs.uoregon.edu/~ariola/publications.html
Root-URL: http://www.cs.uoregon.edu
Email: email: ariola@cs.uoregon.edu  email: sccblom@cs.vu.nl  
Title: Lambda Calculi plus Letrec  
Author: Zena M. Ariola Stefan Blom 
Note: The paper consists of three parts.  
Address: OR 97401, USA  Boelelaan 1081a, 1081 HV Amsterdam  
Affiliation: Department of Computer Information Sciences University of Oregon. Eugene,  Department of Mathematics and Computer Science Vrije Universiteit, De  
Abstract: Part I: We establish an isomorphism between the well-formed cyclic lambda-graphs and their syntactic representations. To define the well-formed cyclic lambda-graphs we introduce the notion of a scoped lambda-graph. The well-formed lambda-graphs are those that have associated scoped lambda-graphs. The scoped lambda-graphs are represented by terms defined over lambda calculus extended with the letrec construct. On this set of terms we define a sound and complete axiom system (the representational calculus) that equates different representations of the same scoped lambda-graph. Since a well-formed lambda-graph can have different scoped lambda-graphs associated to it, we extend the representational calculus with axioms that equate different representations of the same well-formed graph. Finally, we consider the unwinding of well-formed graphs to possibly infinite trees and give a sound and complete axiomatization of tree unwinding. Part II: We add computational power to our graphs and terms by defining fi-reduction on scoped lambda-graphs and its associated notion on terms. The representational axiom system developed in the first part combined with fi-reduction constitutes our cyclic extension of lambda calculus. In contrast to current theories, which impose restrictions on where the rewriting can take place, our reduction theory is very liberal, e.g., it allows rewriting under lambda-abstractions and on cycles. As shown previously, the reduction theory is non-confluent. We thus introduce an approximate notion of confluence, which guarantees uniqueness of infinite normal forms. We show that the infinite normal form defines a congruence on the set of terms. We relate our cyclic lambda calculus to the plain lambda calculus and to the infinitary lambda calculi. We conclude by presenting a variant of our cyclic lambda calculus, which follows the tradition of the explicit substitution calculi. Part III: Since most implementations of non-strict functional languages rely on sharing to avoid repeating computations, we develop a variant of our cyclic lambda calculus that enforces the sharing of computations and show that the two calculi are observationally equivalent. For reasoning about strict languages we develop a call-by-value variant of the sharing calculus. We state the difference between strict and non-strict computations in terms of different garbage collection rules. We relate the call-by-value calculus to Moggi's computational lambda calculus and to Hasegawa's calculus. Note: The research of the first author is supported by NSF grants CCR-9410237 and CCR-9624711. The second author was partially supported by NWO grants SIR 13-3416 and SIR 13-3908. A shorter version of this paper appears in the Proceedings of TACS '97 as "Cyclic Lambda Calculi" [AB97]. 
Abstract-found: 1
Intro-found: 1
Reference: <author> AA95 Z. M. Ariola and Arvind. </author> <title> Properties of a first-order functional language with sharing. </title> <journal> Theoretical Computer Science, </journal> <volume> 146 </volume> <pages> 69-108, </pages> <year> 1995. </year>
Reference: <author> AAH + 93 Arvind, L. Augusston, J. Hicks, R. S. Nikhil, S. Peyton-Jones, J. Stoy, and W. Williams. pH: </author> <title> A Parallel Haskell. </title> <type> Technical report, </type> <institution> MIT Laboratory for Computer Science, </institution> <month> September </month> <year> 1993. </year>
Reference: <author> AB97 Z. M. Ariola and S. Blom. </author> <title> Cyclic lambda calculi. </title> <booktitle> In Proc. TACS 94, Sendai, </booktitle> <address> Japan, </address> <year> 1997. </year>
Reference: <author> ACCL91 M. Abadi, L. Cardelli, P.-L. Curien, and J.-J. Levy. </author> <title> Explicit substitutions. </title> <journal> Journal of Functional Programming, </journal> <volume> 4(1) </volume> <pages> 375-416, </pages> <year> 1991. </year>
Reference: <author> AF97 Z. M. Ariola and M. Felleisen. </author> <title> The call-by-need lambda calculus. </title> <journal> Journal of Functional Programming, </journal> <volume> 7(3), </volume> <year> 1997. </year> <note> Lambda Calculi plus Letrec 112 AFM + 95 Z. </note> <author> M. Ariola, M. Felleisen, J. Maraist, M. Odersky, and P. Wadler. </author> <title> The call-by-need lambda calculus. </title> <booktitle> In Proc. ACM Conference on Principles of Programming Languages, </booktitle> <pages> pages 233-246, </pages> <year> 1995. </year>
Reference: <author> AK94 Z. M. Ariola and J. W. Klop. </author> <title> Cyclic lambda graph rewriting. </title> <booktitle> In Proc. Ninth Symposium on Logic in Computer Science (LICS'94), Paris, France, </booktitle> <pages> pages 416-425, </pages> <year> 1994. </year>
Reference: <author> AK96a Z. M. Ariola and J. W. Klop. </author> <title> Equational term graph rewriting. </title> <address> Fundamentae Infor-maticae, 26(3,4):207-240, </address> <year> 1996. </year> <note> Extended version: CWI Report CS-R9552. </note>
Reference: <author> AK96b Z. M. Ariola and J. W. Klop. </author> <title> Lambda calculus with explicit recursion. </title> <type> Technical Report CIS-TR-96-04, </type> <institution> Department of computer and information science, University of Oregon. </institution> <note> To appear in Information and computation, </note> <year> 1996. </year>
Reference: <author> AKK + 94 Z. M. Ariola, J. W. Klop, J. R. Kennaway, F. J. de Vries, and M. R. Sleep. </author> <title> Syntactic definitions of undefined: On defining the undefined. </title> <booktitle> In Proc. TACS 94, Sendai, </booktitle> <address> Japan, </address> <year> 1994. </year>
Reference: <author> AL94 A. Asperti and C. Laneve. </author> <title> Interaction systems I: The theory of optimal reductions. </title> <booktitle> Mathematical structures for computer science, </booktitle> <volume> 4 </volume> <pages> 457-504, </pages> <year> 1994. </year> <note> AMNS97 Arvind, J-W. Maessen, R.S. </note> <author> Nikhil, and J. E. Stoy. </author> <title> s : an implicitly parallel -calculus with letrec, synchronization and side-effects. </title> <type> Technical Report 393, </type> <institution> MIT Laboratory for Computer Science, </institution> <year> 1997. </year>
Reference: <author> Ari96 Z. M. Ariola. </author> <title> Relating graph and term rewriting via Bohm models. Applicable Algebra in Engineering, </title> <journal> Communication and Computing, </journal> <volume> 7(5), </volume> <year> 1996. </year>
Reference: <author> Bar84 H. P. Barendregt. </author> <title> The Lambda Calculus: Its Syntax and Semantics. </title> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1984. </year>
Reference: <author> BL89 S. Billot and B. Lang. </author> <title> The structure of shared forests in ambiguous parsing. </title> <booktitle> In Proceedings of the Twenty-Seventh Annual Meeting of the Associat ion for Computational Linguistics. Association for Computational Linguistics, </booktitle> <year> 1989. </year>
Reference: <author> BLR96 Z. Benaissa, P. Lescanne, and K.H. Rose. </author> <title> Modeling sharing and recursion for weak reduction strategies using explicit substitution. </title> <booktitle> In PLIP'96, </booktitle> <year> 1996. </year>
Reference: <author> BvEG + 87 H. P. Barendregt, M. C. J. D. van Eekelen, J. R. W. Glauert, J. R. Kennaway, M. </author> <note> J. </note>
Reference: <author> Plasmeijer, and M. R. Sleep. </author> <title> Term graph rewriting. </title> <editor> In J. W. de Bakker, A. J. Nijman, and P. C. Treleaven, editors, </editor> <booktitle> Proc. Conference on Parallel Architecture and Languages Europe (PARLE '87), </booktitle> <address> Eindhoven, The Netherlands, </address> <publisher> Springer-Verlag LNCS 259, </publisher> <pages> pages 141-158, </pages> <year> 1987. </year>
Reference: <author> DJ90 N. Dershowitz and J. P. Jouannaud. </author> <title> Rewrite systems. </title> <editor> In J. van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, </booktitle> <volume> volume B, </volume> <pages> pages 243-320. </pages> <publisher> Elsevier The MIT Press, </publisher> <year> 1990. </year>
Reference: <author> Har86 B. Harper. </author> <title> Introduction to Standard ML. </title> <type> Technical report, </type> <institution> ECS-LFCS-86-14, Laboratory for the Foundation of Computer Science, Edinburgh University, </institution> <year> 1986. </year>
Reference: <author> Has97 M. Hasegawa. </author> <title> Recursion from cyclic sharing: traced monoidal categories and models of cyclic lambda calculi. </title> <booktitle> In Proc. Conference on Typed Lambda Calculi and Applications, </booktitle> <month> April </month> <year> 1997. </year> <note> Lambda Calculi plus Letrec 113 HPJW + 92 P. </note> <author> Hudak, S. Peyton Jones, P. Wadler, B. Boutel, J. Fairbairn, J. Fasel, K. Hammond, J. Hughes, T. Johnsson, D. Kieburtz, R. Nikhil, W. Partain, and J. Peterson. </author> <title> Report on the programming language Haskell. </title> <journal> ACM SIGPLAN Notices, </journal> <volume> 27(5) </volume> <pages> 1-64, </pages> <year> 1992. </year>
Reference: <author> Hue80 G. Huet. </author> <title> Confluent reductions: Abstract properties and applications to term rewriting systems. </title> <journal> JACM, </journal> <volume> 27(4), </volume> <year> 1980. </year>
Reference: <author> KKSdV95 J. R. Kennaway, J. W. Klop, M. R. Sleep, and F. J. de Vries. </author> <title> Infinitary lambda calculus. </title> <booktitle> In Proc. Rewriting Techniques and Applications, </booktitle> <address> Kaiserslautern, </address> <year> 1995. </year>
Reference: <author> Kli91 P. Klint. </author> <title> A meta-environment for generating programming environments. In Algebraic Methods II: Theory, Tools and Applications. </title> <publisher> Springer-Verlag LNCS 490, </publisher> <pages> pages 105-124, </pages> <year> 1991. </year>
Reference: <author> KV94 P. Klint and E. Visser. </author> <title> Using filters for the disambiguation of context-free grammars. </title> <editor> In G. Pighizzini and P. San Pietro, editors, </editor> <booktitle> Proc. ASMICS Workshop on Parsing Theory, </booktitle> <pages> pages 1-20, </pages> <address> Milano, Italy, </address> <month> October </month> <year> 1994. </year> <type> Tech. Rep. 126-1994, </type> <institution> Dipartimento di Scienze dell'Informazione, Universita di Milano. </institution>
Reference: <author> Laf90 Y. Lafont. </author> <title> Interaction nets. </title> <booktitle> In Proc. ACM Conference on Principles of Programming Languages, </booktitle> <address> San Francisco, </address> <year> 1990. </year>
Reference: <author> Lau93 J. Launchbury. </author> <title> A natural semantics for lazy evaluation. </title> <booktitle> In Proc. ACM Conference on Principles of Programming Languages, </booktitle> <pages> pages 144-154, </pages> <year> 1993. </year>
Reference: <author> Les94 P. Lescanne. </author> <title> From to a journey through calculi of explicit substitutions. </title> <booktitle> In Proc. 21st Symposium on Principles of Programming Languages (POPL '94), Portland, Oregon, </booktitle> <pages> pages 60-69, </pages> <year> 1994. </year>
Reference: <author> Lev78 J.-J. Levy. </author> <title> Reductions Correctes et Optimales dans le Lambda-Calcul. </title> <type> PhD thesis, </type> <institution> Universite Paris VII, </institution> <month> October </month> <year> 1978. </year>
Reference: <author> Mac94 I.C. Mackie. </author> <title> The geometry of implementation. </title> <type> PhD thesis, </type> <institution> University of London, </institution> <year> 1994. </year>
Reference: <author> Mog88 E. Moggi. </author> <title> Computational lambda calculus and monads. </title> <type> Technical Report ECS-LFCS-88-86, </type> <institution> Edinburgh University, </institution> <year> 1988. </year>
Reference: <author> MOTW95 J. Maraist, M. Odersky, D. Turner, and P. Wadler. </author> <title> Call-by-name, call-by-value, call-by-need, and the linear lambda calculus. </title> <booktitle> In Proc. of Mathematical Foundations of Programming Semantics (MFPS), </booktitle> <year> 1995. </year>
Reference: <author> Nie96 J. Niehren. </author> <title> Functional computation as concurrent computation. </title> <booktitle> In Proc. ACM Conference on Principles of Programming Languages, </booktitle> <pages> pages 333-343, </pages> <year> 1996. </year>
Reference: <author> Nik91 R. S. Nikhil. </author> <title> Id (version 90.1) reference manual. </title> <type> Technical Report 284-2, </type> <institution> MIT Laboratory for Computer Science, 545 Technology Square, </institution> <address> Cambridge, MA 02139, </address> <year> 1991. </year>
Reference: <editor> PJ87 S. L. Peyton Jones. </editor> <booktitle> The implementation of Functional Programming Languages. </booktitle>
Reference: <institution> Prentice-Hall International, </institution> <address> Englewood Cliffs, N.J., </address> <year> 1987. </year>
Reference: <author> Plo75 G. D. Plotkin. </author> <title> Call-by-name, call-by-value and the lambda calculus. </title> <journal> Theoretical Computer Science, </journal> <volume> 1 </volume> <pages> 125-159, </pages> <year> 1975. </year>
Reference: <author> Ros92 K. H. Rose. </author> <title> Explicit cyclic substitutions. </title> <editor> In M. Rusinowitch and J. L. Remy, editors, </editor> <booktitle> Proc. 3rd International Workshop on Conditional Term Rewriting Systems (CTRS-92), Pont-a-Mousson, </booktitle> <address> France, </address> <publisher> Springer-Verlag LNCS 656, </publisher> <pages> pages 36-50, </pages> <year> 1992. </year> <title> Lambda Calculi plus Letrec 114 Sel96 P. Selinger. Order-incompleteness and finite lambda models. </title> <booktitle> In Proc. Symposium on Logic in Computer Science (LICS'96), </booktitle> <year> 1996. </year>
Reference: <author> SM93 D. Sangiorgi and R. Milner. </author> <title> Techniques of "weak bisimulation up to". </title> <type> Technical report, </type> <year> 1993. </year>
Reference: <author> Tom85 M. Tomita. </author> <title> Efficient Parsing for Natural Languages. A Fast Algorithm for Practical Systems. </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1985. </year> <editor> vO94 V. van Oostrom. </editor> <title> Confluence for Abstract and Higher-Order Rewriting. </title> <type> PhD thesis, </type> <institution> Vrije Universiteit, </institution> <year> 1994. </year>
Reference: <author> Wad71 C. Wadsworth. </author> <title> Semantics and Pragmatics of the Lambda-Calculus. 1971. </title> <type> PhD thesis, </type> <institution> University of Oxford. </institution>
References-found: 39

