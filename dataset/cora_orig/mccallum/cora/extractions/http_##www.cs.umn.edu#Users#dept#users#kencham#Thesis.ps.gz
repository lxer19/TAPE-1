URL: http://www.cs.umn.edu/Users/dept/users/kencham/Thesis.ps.gz
Refering-URL: http://www.cs.umn.edu/Users/dept/users/kencham/
Root-URL: http://www.cs.umn.edu
Author: Jaideep Srivastava Date 
Degree: Name of Faculty Adviser Signature of Faculty Adviser  
Note: This is to certify that I have examined this bound copy of a doctoral thesis by Deepak R. Kenchammana-Hosekote and have found that it is complete and satisfactory in all respects, and that any and all revisions required by the final examining committee have been made.  
Affiliation: University of Minnesota  GRADUATE SCHOOL  
Abstract-found: 0
Intro-found: 1
Reference: [ Abbott and Garcia-Molina, 1990 ] <author> R.K. Abbott and H. Garcia-Molina. </author> <title> Scheduling I/O Requests with Deadlines:A Performance Evaluation. </title> <booktitle> In IEEE Real Time Systems Symposium, </booktitle> <pages> pages 113-124. </pages> <publisher> IEEE, </publisher> <month> Dec </month> <year> 1990. </year>
Reference-contexts: Many schemes for multiplexing time critical accesses to I/O devices like Round-Robin (RR), SCAN, Earliest deadline first, etc. have been previously studied in <ref> [ Abbott and Garcia-Molina, 1990 ] </ref> , [ Chen et al., 1991 ] . The high retrieval latency and the non preemptible nature of disks makes strategies like RR and SCAN attractive for real-time, high volume I/O accesses as those found in CM. <p> More recently, <ref> [ Abbott and Garcia-Molina, 1990 ] </ref> and [ Chen et al., 1991 ] have addressed the problem in the context of real-time systems.
Reference: [ ACM, 1995 ] <editor> ACM. </editor> <title> Multimedia Applications in Medicine. </title> <journal> Special Issue in Communications of ACM, </journal> <month> January </month> <year> 1995. </year>
Reference-contexts: The need for handling continuous media on existing and future computing platforms stems from a rapidly growing set of applications in domains like distance education [ Schnepf et al., 1994 ] , entertainment [ NYT, 1994 ] , medical services <ref> [ ACM, 1995 ] </ref> , office automation [ Ooi et al., 1987 ] , process control [ Guha et al., 1993 ] , national defense [ USAF, 1994 ] , etc. Typically, a video or audio clip is a time sequence of digital samples. <p> Such playback guarantees are required in many mission critical applications like command and process control in defense [ USAF, 1994 ] and industry [ Guha et al., 1993 ] , and in domains like medicine <ref> [ ACM, 1995 ] </ref> and sound production [ Pohlmann, 1995 ] . Our approach to providing jitter-free playback rate of VBR streams is to provide I/O bandwidth corresponding to playback at the highest data rate.
Reference: [ Anderson et al., 1992 ] <author> D. Anderson, Y. Osawa, and R. Govindan. </author> <title> A file system for continuous media. </title> <journal> ACM Transaction on Computer Systems, </journal> <volume> 10(4), </volume> <month> November </month> <year> 1992. </year>
Reference-contexts: This is a contradition. PSTAR is a search algorithm in the subspace of R s . However, unlike other search algorithms, e.g. <ref> [ Anderson et al., 1992 ] </ref> , PSTAR starts searching from dn fl e since the solution of BUFMIN DPCC is guaranteed to be no smaller than n fl . The algorithm initially starts with p set to 0. <p> With the growing interest in continuous media server design, recent work by [ Gemmell, 1993 ] , [ Reddy and Wyllie, 1993 ] , [ Chen et al., 1993 ] , <ref> [ Anderson et al., 1992 ] </ref> , [ Rangan and Vin, 1993a ] , [ Gemmell and Christodoulakis, 1992 ] , [ Lougher and Shepherd, 1992 ] , [ Ramakrishnan et al., 1993 ] , [ Chang et al., 1994 ] , [ Daigle and Strosnider, 1994 ] [ Chen and <p> However, this class of scheduling approaches do not address issues typical of CM data like handling frame-oriented streams. In the second approach, like those in [ Gemmell, 1993 ] , [ Chen et al., 1993 ] , <ref> [ Anderson et al., 1992 ] </ref> , [ Lougher and Shepherd, 1992 ] , [ Rangan and Vin, 1993a ] , and [ Chen and Little, 1993 ] the effort has been to derive new scheduling strategies that are aware of the continuous and media requirements. <p> Their analysis has inspired some of the modelling presented in the previous chapter. Their observation regarding the implementation constraint of integral block fetches inspired the detailed modelling of this constraint. However, they do not address the problem of handling frame-oriented CM data. <ref> [ Anderson et al., 1992 ] </ref> develop a similar scheduling strategy as that in [ Rangan and Vin, 1993a ] . However, [ Anderson et al., 1992 ] derive the scheduling strategy by constraining their search of the solution space to integer points. <p> However, they do not address the problem of handling frame-oriented CM data. <ref> [ Anderson et al., 1992 ] </ref> develop a similar scheduling strategy as that in [ Rangan and Vin, 1993a ] . However, [ Anderson et al., 1992 ] derive the scheduling strategy by constraining their search of the solution space to integer points. Their minimal feasible WAS algorithm has been made more efficient as well as has been extended to handle client consumption in discrete chunks called frames. <p> Both [ Gemmell, 1993 ] and [ Chen et al., 1993 ] consider a modification to the scheduling strategy first proposed by [ Rangan and Vin, 1993a ] and <ref> [ Anderson et al., 1992 ] </ref> . In their work they consider a mix of a fixed order scheduling, with SCAN order servicing of different CM data streams. <p> Also, their protocols provide probabilistic playback guarantees to clients. Much of the previous work on designing CM storage servers have discussed supporting concurrency set operations like Open, and Close. Both [ Rangan and Vin, 1993a ] and <ref> [ Anderson et al., 1992 ] </ref> discuss safe state transition algorithms to handle this set of operations. However, they do not try to minimize response time of such operations.
Reference: [ Aptekar et al., 1994 ] <author> R.T. Aptekar, J.A. Fisher, V. Kisimov, and H. Nieshlos. </author> <title> Distributed Multimedia:User Perception and Dynamic QoS. </title> <booktitle> In SPIE Conference on, volume 2188. SPIE, </booktitle> <year> 1994. </year>
Reference-contexts: The average time duration between successive skips is denoted as the mean time between skips, MTBS, and has been found to be a reasonable measure of playback quality [ Ravindran and Bansal, 1993 ] , <ref> [ Aptekar et al., 1994 ] </ref> .
Reference: [ Bernstein and Goodman, 1981 ] <author> P.A. Bernstein and N. Goodman. </author> <title> Concurrency control in distributed database systems. </title> <journal> ACM Computing Surveys, </journal> <volume> 13(2) </volume> <pages> 185-221, </pages> <month> June </month> <year> 1981. </year>
Reference-contexts: When all resources are available (and held) for the entire session, the SRM admits the runtime change and submits request to effect the scheduling decisions to each of the resource managers. This interaction between the SRM and individual resource managers follows the 2-phase commit protocol <ref> [ Bernstein and Goodman, 1981 ] </ref> . The resource managers (including DRM) provide REGISTER, DEREGISTER, TEST&HOLD, COMMIT, and ABORT primitives. The implementation supports criticality based pre-emption, QoS maximization, and coordination of multiple resource managers.
Reference: [ Birchenhall, 1993 ] <author> Chistopher Birchenhall. </author> <title> A guide to MatClass a matrix class for C++. </title> <institution> University of Manchester, </institution> <address> Oxford Road, Manchester, M13 9PL UK, 1.0d edition, </address> <year> 1993. </year>
Reference-contexts: Vector and matrix operations required for schedule computations is performed using a public domain matrix class library <ref> [ Birchenhall, 1993 ] </ref> . The current version of PIOS does not ensure safe state transition in moving from fShadowServiceTable to fServiceTable. Instead, at the start of the next cycle, the new schedule is immediately executed.
Reference: [ Bitton and Gray, 1988 ] <author> D. Bitton and J. Gray. </author> <title> Disk shadowing. </title> <booktitle> In 14th International Conference on Very Large Data Bases, </booktitle> <pages> pages 331-338, </pages> <year> 1988. </year>
Reference-contexts: Proof: Since we wish to compute the worst case service time, assume that the first and last requests are on the innermost and outermost tracks, respectively, of the 1 In <ref> [ Bitton and Gray, 1988 ] </ref> the seek time for t tracks in a disk with non-linear actuator is o (t) = ff 0 + ff 1 t, where ff 0 ; ff 1 &gt; 0, when t &gt; 0, and o (0) = 0. 9 x 1 x s1 disk.
Reference: [ Bolosky et al., 1996 ] <author> W.J. Bolosky, M.B. Jones, </author> <title> and R.F. Rashid. The Tiger video file server. </title> <booktitle> In Proceedings of Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <month> April </month> <year> 1996. </year>
Reference-contexts: MPEG-1 compressed video streams. Such configurations will be popular for Video-On-Demand applications where different video stream instances will be stored in a uniform compression standard which would include playback at similar rates [ Tobagi et al., 1993 ] , [ Chang et al., 1994 ] , <ref> [ Bolosky et al., 1996 ] </ref> . When configured to store dissimilar streams, the disk must store streams compressed using different standards and playback rates. In such a case the schedule due to Lemma 3 will neither guarantee feasibility nor optimality for BUFMIN DPCC .
Reference: [ Bratley et al., 1987 ] <author> P. Bratley, B.L. Fox, and L.E Schrage. </author> <title> A Guide to Simulation. </title> <publisher> Springer-Verlag, </publisher> <address> New York, NY, 2 edition, </address> <year> 1987. </year>
Reference-contexts: MAGELLAN borrows theory and implementation of RNGs from various sources [ Knuth, 1973 ] , <ref> [ Bratley et al., 1987 ] </ref> , [ L'Ecuyer, 1988 ] , and [ Jain, 1991 ] . D.4.1 The Multiplicative Linear Congruential Generators MAGELLAN uses MLCG RNGs [ Jain, 1991 ] . This class of random number generators has many useful properties. These include: 155 1. <p> A public domain portable implementation from GNU's libg++ [ Lea, 1992 ] is available, 3. The RNG has a very long period, and 4. A systematic technique to generate seeds is given in <ref> [ Bratley et al., 1987 ] </ref> . The MLCG used in MAGELLAN is a portable implementation on 32-bit machines as described in [ L'Ecuyer, 1988 ] . <p> D.4.2 Seed Selection For the pair of LCG generators used in MAGELLAN multiple independent streams of random numbers are generated by seeding each generator separately. The technique to automatically compute the seeds for successive instances of MLCG is obtained from <ref> [ Bratley et al., 1987 ] </ref> and [ Stacey, 1995 ] . Since MLCG uses two LCGs, L 1 = (a 1 ; m 1 ; 0) and L 2 = (a 2 ; m 2 ; 0), [ Bratley et al., 1987 ] 's procedure to derive seeds for statistically <p> automatically compute the seeds for successive instances of MLCG is obtained from <ref> [ Bratley et al., 1987 ] </ref> and [ Stacey, 1995 ] . Since MLCG uses two LCGs, L 1 = (a 1 ; m 1 ; 0) and L 2 = (a 2 ; m 2 ; 0), [ Bratley et al., 1987 ] 's procedure to derive seeds for statistically independent RNGs is as follows: Regardless of the seed for L 1 (say that it is set to 0), set the seed for L 2 using every 164 th random number from L 2 (with initial seed 1).
Reference: [ Briggs, 1990 ] <author> P. Briggs. </author> <title> Nuweb Version 0.87b A Simple Literate Programming Tool. </title> <note> Available from anonymous@cs.rice.edu:/pub/briggs, </note> <year> 1990. </year>
Reference-contexts: The visualizer has capture facilities to grab a particular phenomenon as the simulation proceeds. These components are glued together as shown in Figure D.1. D.2 Implementation MAGELLAN is written using the nuweb <ref> [ Briggs, 1990 ] </ref> literate programming system, a descendent of WEB by Donald Knuth. The system allows entangling code and its documentation together to make it easier to understand and maintain. Consequently, the reader is urged to get the source code that is available via anonymous ftp from ftp.cs.umn.edu:/users/kencham/MAGELLAN.tgz.
Reference: [ Chang et al., 1994 ] <author> Y.-H. Chang, D. Coggins, D. Pitt, D. Skellern, M. Thapar, and C. Venkatraman. </author> <title> An Open-Systems Approach to Video on Demand. </title> <journal> IEEE Communications Magazine, </journal> <pages> pages 68-80, </pages> <month> May </month> <year> 1994. </year> <pages> 157 158 </pages>
Reference-contexts: MPEG-1 compressed video streams. Such configurations will be popular for Video-On-Demand applications where different video stream instances will be stored in a uniform compression standard which would include playback at similar rates [ Tobagi et al., 1993 ] , <ref> [ Chang et al., 1994 ] </ref> , [ Bolosky et al., 1996 ] . When configured to store dissimilar streams, the disk must store streams compressed using different standards and playback rates. <p> , [ Reddy and Wyllie, 1993 ] , [ Chen et al., 1993 ] , [ Anderson et al., 1992 ] , [ Rangan and Vin, 1993a ] , [ Gemmell and Christodoulakis, 1992 ] , [ Lougher and Shepherd, 1992 ] , [ Ramakrishnan et al., 1993 ] , <ref> [ Chang et al., 1994 ] </ref> , [ Daigle and Strosnider, 1994 ] [ Chen and Little, 1993 ] have been significant. While [ Gemmell and Christodoulakis, 1992 ] presents a general theory of retrieval for continuous media there have been two distinct approaches to the retrieval problem.
Reference: [ Chen and Little, 1993 ] <author> H.-J. Chen and T.D.C Little. </author> <title> Physical storage organization for time dependent multimedia data. </title> <booktitle> In 4 th Intl. Conference on Foundation of Data Organization and Algorithms, </booktitle> <year> 1993. </year>
Reference-contexts: However, as will be seen shortly, it becomes advantageous to store groups of disk blocks of a single stream as close to each other as possible. Issues related to constraining placement are further discussed in <ref> [ Chen and Little, 1993 ] </ref> and [ Rangan and Vin, 1993b ] . Data blocks of different streams, however, may not neccessarily be stored close to each other. <p> In [ Chen et al., 1993 ] , [ Gemmell, 1993 ] a SCAN scheduling strategy is used in conjunction with single buffer organization. Other approaches have used fixed order scheduling with double buffer organization ( [ Rangan and Vin, 1993a ] , <ref> [ Chen and Little, 1993 ] </ref> ). In our approach we use our scheduling strategy with a double buffer organization. In Section 2.3.1 we discuss the reasons for choosing this organization. <p> ] , [ Anderson et al., 1992 ] , [ Rangan and Vin, 1993a ] , [ Gemmell and Christodoulakis, 1992 ] , [ Lougher and Shepherd, 1992 ] , [ Ramakrishnan et al., 1993 ] , [ Chang et al., 1994 ] , [ Daigle and Strosnider, 1994 ] <ref> [ Chen and Little, 1993 ] </ref> have been significant. While [ Gemmell and Christodoulakis, 1992 ] presents a general theory of retrieval for continuous media there have been two distinct approaches to the retrieval problem. <p> In the second approach, like those in [ Gemmell, 1993 ] , [ Chen et al., 1993 ] , [ Anderson et al., 1992 ] , [ Lougher and Shepherd, 1992 ] , [ Rangan and Vin, 1993a ] , and <ref> [ Chen and Little, 1993 ] </ref> the effort has been to derive new scheduling strategies that are aware of the continuous and media requirements. Our work draws heavily on work from the second approach. [ Rangan and Vin, 1993a ] propose a fixed order cyclical scheduling strategy. <p> Their conclusion that performance gains in terms of buffer space from a mix of fixed order and SCAN discipline has influenced the formulation of BSCAN. Some of the works cited above discuss deterministic services, i.e. playback guarantees are maintained during retrieval. <ref> [ Chen and Little, 1993 ] </ref> and [ Vin et al., 1994 ] modify round robin scheduling strategies to provide statistical guarantees to clients. <p> GCDI. 3 More accurately, blocks for s 1 component streams and 1 block of the s th component stream need to be fetched before consumption can begin. 85 86 87 88 89 90 91 5.5 Related Work Physical storage organization for continuous media has been addressed by researchers of Video-On-Demand <ref> [ Chen and Little, 1993, Rangan et al., 1992 ] </ref> and High-Definition-TV [ Rangan and Vin, 1993a ] and general purpose [ Rangan and Vin, 1991, Lougher and Shepherd, 1992 ] storage servers. Work in [ Rangan and Vin, 1993b ] describe a technique of interleaved placement. <p> Work in [ Rangan and Vin, 1993b ] describe a technique of interleaved placement. It describes merging techniques to utilize the disk efficiently, and buffer read-ahead required in such schemes. <ref> [ Chen and Little, 1993 ] </ref> describes a contiguous allocation strategy. They suggest mixing data from component streams in placing composite streams.
Reference: [ Chen et al., 1991 ] <author> Shenze Chen, James Kurose, and Don Towsley. </author> <title> Performance Evaluation of Two New Disk Scheduling Algorithms. Real Time Systems, </title> <month> September </month> <year> 1991. </year>
Reference-contexts: Many schemes for multiplexing time critical accesses to I/O devices like Round-Robin (RR), SCAN, Earliest deadline first, etc. have been previously studied in [ Abbott and Garcia-Molina, 1990 ] , <ref> [ Chen et al., 1991 ] </ref> . The high retrieval latency and the non preemptible nature of disks makes strategies like RR and SCAN attractive for real-time, high volume I/O accesses as those found in CM. <p> More recently, [ Abbott and Garcia-Molina, 1990 ] and <ref> [ Chen et al., 1991 ] </ref> have addressed the problem in the context of real-time systems.
Reference: [ Chen et al., 1993 ] <author> M. Chen, D. Kandlur, and P.S. Yu. </author> <title> Optimization of the Group Sweep Scheduling with Heterogeneous Multimedia Streams. </title> <booktitle> In Proceedings of the ACM Multimedia, </booktitle> <pages> pages 235-242, </pages> <address> Anaheim, CA, </address> <month> August </month> <year> 1993. </year>
Reference-contexts: In a double buffer organization, two distinct sets of buffers are used alternatingly, one for production by the scheduler and another for consumption by clients. In <ref> [ Chen et al., 1993 ] </ref> , [ Gemmell, 1993 ] a SCAN scheduling strategy is used in conjunction with single buffer organization. Other approaches have used fixed order scheduling with double buffer organization ( [ Rangan and Vin, 1993a ] , [ Chen and Little, 1993 ] ). <p> More recently, [ Abbott and Garcia-Molina, 1990 ] and [ Chen et al., 1991 ] have addressed the problem in the context of real-time systems. With the growing interest in continuous media server design, recent work by [ Gemmell, 1993 ] , [ Reddy and Wyllie, 1993 ] , <ref> [ Chen et al., 1993 ] </ref> , [ Anderson et al., 1992 ] , [ Rangan and Vin, 1993a ] , [ Gemmell and Christodoulakis, 1992 ] , [ Lougher and Shepherd, 1992 ] , [ Ramakrishnan et al., 1993 ] , [ Chang et al., 1994 ] , [ Daigle <p> This has greatly influenced our choice of incorporating batching and SCAN features into our scheduling strategy. However, this class of scheduling approaches do not address issues typical of CM data like handling frame-oriented streams. In the second approach, like those in [ Gemmell, 1993 ] , <ref> [ Chen et al., 1993 ] </ref> , [ Anderson et al., 1992 ] , [ Lougher and Shepherd, 1992 ] , [ Rangan and Vin, 1993a ] , and [ Chen and Little, 1993 ] the effort has been to derive new scheduling strategies that are aware of the continuous and <p> Their minimal feasible WAS algorithm has been made more efficient as well as has been extended to handle client consumption in discrete chunks called frames. Both [ Gemmell, 1993 ] and <ref> [ Chen et al., 1993 ] </ref> consider a modification to the scheduling strategy first proposed by [ Rangan and Vin, 1993a ] and [ Anderson et al., 1992 ] . <p> The P-phase, the knee, and the A-phase is seen more clearly in the figure. 4.6 Related Work Servicing strategies like <ref> [ Chen et al., 1993 ] </ref> , [ Reddy and Wyllie, 1993 ] , and [ Gemmell, 1993 ] use single buffering while allowing head scheduling algorithms like C-SCAN to decide the servicing order.
Reference: [ Chen et al., 1994 ] <author> M. Chen, D. Kandlur, and P.S. Yu. </author> <title> Support For Fully Interactive Playout in a disk-array based Video Server. </title> <booktitle> In Proceedings of 2 nd ACM Multimedia Conference. ACM, </booktitle> <month> October </month> <year> 1994. </year>
Reference-contexts: However, they do not provide playback guarantees while such operations are being executed. Concurrent with our work on supporting VCR operations like FastForward and ReversePlay are <ref> [ Chen et al., 1994 ] </ref> and [ Dey et al., 1994 ] . By anticipating the execution of such operations at the server, [ Chen et al., 1994 ] places CM data in the storage system using techniques like segment sampling wherein some groups of units are marked for display <p> Concurrent with our work on supporting VCR operations like FastForward and ReversePlay are <ref> [ Chen et al., 1994 ] </ref> and [ Dey et al., 1994 ] . By anticipating the execution of such operations at the server, [ Chen et al., 1994 ] places CM data in the storage system using techniques like segment sampling wherein some groups of units are marked for display based on the type of VCR operation.
Reference: [ Daigle and Strosnider, 1994 ] <author> A. Daigle and J.K Strosnider. </author> <title> Disk Scheduling for Multimedia Data Streams. </title> <booktitle> In Proceedings of the High-Speed Networking and Multimedia Computing Conference. </booktitle> <address> IS&T/SPIE, </address> <month> February </month> <year> 1994. </year>
Reference-contexts: , [ Chen et al., 1993 ] , [ Anderson et al., 1992 ] , [ Rangan and Vin, 1993a ] , [ Gemmell and Christodoulakis, 1992 ] , [ Lougher and Shepherd, 1992 ] , [ Ramakrishnan et al., 1993 ] , [ Chang et al., 1994 ] , <ref> [ Daigle and Strosnider, 1994 ] </ref> [ Chen and Little, 1993 ] have been significant. While [ Gemmell and Christodoulakis, 1992 ] presents a general theory of retrieval for continuous media there have been two distinct approaches to the retrieval problem. <p> First, approaches like [ Reddy and Wyllie, 1993 ] , [ Ramakrishnan et al., 1993 ] , [ Tindell and Burns, 1993 ] , and <ref> [ Daigle and Strosnider, 1994 ] </ref> adapt scheduling algorithms used in real-time systems to continuous media access. [ Reddy and Wyllie, 1993 ] and [ Daigle and Strosnider, 1994 ] give thorough evaluations of these algorithms. <p> First, approaches like [ Reddy and Wyllie, 1993 ] , [ Ramakrishnan et al., 1993 ] , [ Tindell and Burns, 1993 ] , and <ref> [ Daigle and Strosnider, 1994 ] </ref> adapt scheduling algorithms used in real-time systems to continuous media access. [ Reddy and Wyllie, 1993 ] and [ Daigle and Strosnider, 1994 ] give thorough evaluations of these algorithms. An important conclusion has been that larger request sizes coupled with deferred 43 deadlines are the key to performance improvement. This has greatly influenced our choice of incorporating batching and SCAN features into our scheduling strategy.
Reference: [ Dan et al., 1994 ] <author> A. Dan, D. Sitaram, and P. Shahabuddin. </author> <title> Scheduling Policies for an On-Demand Video Server with Batching. </title> <booktitle> In ACM Multimedia, </booktitle> <pages> pages 15-23. </pages> <publisher> ACM, </publisher> <month> October </month> <year> 1994. </year>
Reference-contexts: In order to better utilize the storage system, they provide a probabilistic analysis of their scheduling models such that most of the times the clients' playback is smooth. Their strategies are useful in domains wherein jitter-free playback guarantees are not neccessary. Finally, work by <ref> [ Dan et al., 1994 ] </ref> has considered the problem of batching application requests to benefit from the fact that once a stream (or a portion thereof) has been brought into the server's buffer, techniques such as multi-casting may be used to service a larger number of applications desiring the same
Reference: [ Dey et al., 1994 ] <author> J. Dey, J. Salehi, J. Kurose, and D. Towsley. </author> <title> VCR Capabilities for Very Large Scale Video On Demand. </title> <booktitle> In Proceedings of 2 nd ACM Multimedia Conference. ACM, </booktitle> <month> October </month> <year> 1994. </year>
Reference-contexts: However, they do not provide playback guarantees while such operations are being executed. Concurrent with our work on supporting VCR operations like FastForward and ReversePlay are [ Chen et al., 1994 ] and <ref> [ Dey et al., 1994 ] </ref> . <p> The efficacy of such an approach is constrained by the placement strategy which must be selected at storage time. The approach taken by <ref> [ Dey et al., 1994 ] </ref> has been to provide probabilistic guarantees when such operations are executed, specifically for operations like FastForward.
Reference: [ Feller, 1957 ] <author> Willian Feller. </author> <title> An Introduction to Probability Theory and Its Applications, volume 1 of Wiley Publications in Statistics. </title> <publisher> John Wiley and Sons, </publisher> <address> 2 nd edition, </address> <year> 1957. </year>
Reference-contexts: In case of live streams analytic source models must be used. Distributions like normal, gamma, pareto can be fit to the collected sample [ Garrett and Willinger, 1994 ] , [ Heyman and Lakshman, 1996 ] . Parametric estimation techniques like those described in <ref> [ Feller, 1957 ] </ref> can then be used to derive parameters for U i . For analysis purposes, we assume that consecutive instances of the random variable U i are identically and independently distributed 1 . <p> In this section we derive analytical expressions when the gaussian assumption holds. To compute the stream starvation probability and data shortage for a stream we need 1. F S i (n) (x), the c.d.f. for S i (n), and 100 From <ref> [ Feller, 1957 ] </ref> if U i = N ( i ; oe i ), then S i (n) = N (n i ; oe i p n). Hence, F S i (n) (x) = 1 x n i p ! This expression can be used in Equation 6.4.
Reference: [ Frank, 1969 ] <author> H. Frank. </author> <title> Analysis and optimization of disk storage for time-sharing systems. </title> <journal> Journal of the ACM, </journal> <volume> 16(4) </volume> <pages> 602-620, </pages> <month> October </month> <year> 1969. </year>
Reference-contexts: This supports the observation made in the previous chapter that the benefits of increasing buffer allocation in exchange for slack diminishes with heavier loads. 3.5 Related Work The problem of scheduling accesses to I/O systems has been studied extensively as early as <ref> [ Frank, 1969 ] </ref> , [ Teorey and Pinkerton, 1972 ] , and [ Fuller, 1975 ] . More recently, [ Abbott and Garcia-Molina, 1990 ] and [ Chen et al., 1991 ] have addressed the problem in the context of real-time systems.
Reference: [ Fuller, 1975 ] <author> Samuel F. Fuller. </author> <title> Analysis of disk and storage units, </title> <booktitle> volume 31 of Lecture Notes in Computer Science. </booktitle> <publisher> Springer Verlag, </publisher> <year> 1975. </year>
Reference-contexts: in the previous chapter that the benefits of increasing buffer allocation in exchange for slack diminishes with heavier loads. 3.5 Related Work The problem of scheduling accesses to I/O systems has been studied extensively as early as [ Frank, 1969 ] , [ Teorey and Pinkerton, 1972 ] , and <ref> [ Fuller, 1975 ] </ref> . More recently, [ Abbott and Garcia-Molina, 1990 ] and [ Chen et al., 1991 ] have addressed the problem in the context of real-time systems.
Reference: [ Garrett and Willinger, 1994 ] <author> M.W. Garrett and W. Willinger. </author> <title> Analysis, modelling, and generation of self similar VBR video traffic. </title> <booktitle> In Proceedings of SIGCOMM, </booktitle> <pages> pages 269-280. </pages> <publisher> ACM, </publisher> <year> 1994. </year> <month> 159 </month>
Reference-contexts: A p.d.f. for U i can be constructed for stored video streams by analysing frames. In case of live streams analytic source models must be used. Distributions like normal, gamma, pareto can be fit to the collected sample <ref> [ Garrett and Willinger, 1994 ] </ref> , [ Heyman and Lakshman, 1996 ] . Parametric estimation techniques like those described in [ Feller, 1957 ] can then be used to derive parameters for U i .
Reference: [ Gemmell and Christodoulakis, 1991 ] <author> J. Gemmell and S. Christodoulakis. </author> <title> Principles of delay sensitive multimedia data storage and retrieval. </title> <journal> ACM Trans. on Computer Systems, </journal> <volume> 34(4) </volume> <pages> 51-90, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: They suggest mixing data from component streams in placing composite streams. In such a process the component streams loose their identity and cannot be retrieved independently. <ref> [ Gemmell and Christodoulakis, 1991 ] </ref> describe an analytic model similar to the retrieval model described in this chapter. They assume contiguous allocation of blocks and assume byte level access of data.
Reference: [ Gemmell and Christodoulakis, 1992 ] <author> J. Gemmell and S. Christodoulakis. </author> <title> Principles of Delay-sensitive Multimedia Storage and Retrieval. </title> <journal> ACM Transactions on Information Systems, </journal> <volume> 10(1) </volume> <pages> 51-90, </pages> <month> January </month> <year> 1992. </year>
Reference-contexts: With the growing interest in continuous media server design, recent work by [ Gemmell, 1993 ] , [ Reddy and Wyllie, 1993 ] , [ Chen et al., 1993 ] , [ Anderson et al., 1992 ] , [ Rangan and Vin, 1993a ] , <ref> [ Gemmell and Christodoulakis, 1992 ] </ref> , [ Lougher and Shepherd, 1992 ] , [ Ramakrishnan et al., 1993 ] , [ Chang et al., 1994 ] , [ Daigle and Strosnider, 1994 ] [ Chen and Little, 1993 ] have been significant. While [ Gemmell and Christodoulakis, 1992 ] presents <p> Rangan and Vin, 1993a ] , <ref> [ Gemmell and Christodoulakis, 1992 ] </ref> , [ Lougher and Shepherd, 1992 ] , [ Ramakrishnan et al., 1993 ] , [ Chang et al., 1994 ] , [ Daigle and Strosnider, 1994 ] [ Chen and Little, 1993 ] have been significant. While [ Gemmell and Christodoulakis, 1992 ] presents a general theory of retrieval for continuous media there have been two distinct approaches to the retrieval problem.
Reference: [ Gemmell, 1993 ] <author> J. </author> <title> Gemmell. Multimedia Network File Servers: Multi-channel Delay Sensitive Data Retrieval. </title> <booktitle> In Proceedings of 1 st ACM Multimedia Conference. ACM, </booktitle> <month> October </month> <year> 1993. </year>
Reference-contexts: In a double buffer organization, two distinct sets of buffers are used alternatingly, one for production by the scheduler and another for consumption by clients. In [ Chen et al., 1993 ] , <ref> [ Gemmell, 1993 ] </ref> a SCAN scheduling strategy is used in conjunction with single buffer organization. Other approaches have used fixed order scheduling with double buffer organization ( [ Rangan and Vin, 1993a ] , [ Chen and Little, 1993 ] ). <p> More recently, [ Abbott and Garcia-Molina, 1990 ] and [ Chen et al., 1991 ] have addressed the problem in the context of real-time systems. With the growing interest in continuous media server design, recent work by <ref> [ Gemmell, 1993 ] </ref> , [ Reddy and Wyllie, 1993 ] , [ Chen et al., 1993 ] , [ Anderson et al., 1992 ] , [ Rangan and Vin, 1993a ] , [ Gemmell and Christodoulakis, 1992 ] , [ Lougher and Shepherd, 1992 ] , [ Ramakrishnan et al., <p> This has greatly influenced our choice of incorporating batching and SCAN features into our scheduling strategy. However, this class of scheduling approaches do not address issues typical of CM data like handling frame-oriented streams. In the second approach, like those in <ref> [ Gemmell, 1993 ] </ref> , [ Chen et al., 1993 ] , [ Anderson et al., 1992 ] , [ Lougher and Shepherd, 1992 ] , [ Rangan and Vin, 1993a ] , and [ Chen and Little, 1993 ] the effort has been to derive new scheduling strategies that are <p> However, [ Anderson et al., 1992 ] derive the scheduling strategy by constraining their search of the solution space to integer points. Their minimal feasible WAS algorithm has been made more efficient as well as has been extended to handle client consumption in discrete chunks called frames. Both <ref> [ Gemmell, 1993 ] </ref> and [ Chen et al., 1993 ] consider a modification to the scheduling strategy first proposed by [ Rangan and Vin, 1993a ] and [ Anderson et al., 1992 ] . <p> The P-phase, the knee, and the A-phase is seen more clearly in the figure. 4.6 Related Work Servicing strategies like [ Chen et al., 1993 ] , [ Reddy and Wyllie, 1993 ] , and <ref> [ Gemmell, 1993 ] </ref> use single buffering while allowing head scheduling algorithms like C-SCAN to decide the servicing order.
Reference: [ Greenberg, 1971 ] <author> H. Greenberg. </author> <title> Integer Programming. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1971. </year>
Reference: [ Guha et al., 1993 ] <author> A. Guha, A. Agrawal, and R. Rundquist. </author> <title> Multimedia-Integrated Real-Time Control Systems. </title> <booktitle> In Proceedings of 1 st Workshop on Real-Time Applications, number 1. IEEE, </booktitle> <month> May </month> <year> 1993. </year>
Reference-contexts: on existing and future computing platforms stems from a rapidly growing set of applications in domains like distance education [ Schnepf et al., 1994 ] , entertainment [ NYT, 1994 ] , medical services [ ACM, 1995 ] , office automation [ Ooi et al., 1987 ] , process control <ref> [ Guha et al., 1993 ] </ref> , national defense [ USAF, 1994 ] , etc. Typically, a video or audio clip is a time sequence of digital samples. These samples can range in sizes from small 1-2 bytes for audio, to large 20KB-1MB for video frames. <p> Such playback guarantees are required in many mission critical applications like command and process control in defense [ USAF, 1994 ] and industry <ref> [ Guha et al., 1993 ] </ref> , and in domains like medicine [ ACM, 1995 ] and sound production [ Pohlmann, 1995 ] . Our approach to providing jitter-free playback rate of VBR streams is to provide I/O bandwidth corresponding to playback at the highest data rate.
Reference: [ Heyman and Lakshman, 1996 ] <author> D. P. Heyman and T.V. Lakshman. </author> <title> Source models for VBR broadcast-video traffic. </title> <journal> IEEE/ACM Trans. on Networking, </journal> <volume> 4(1) </volume> <pages> 40-48, </pages> <month> February </month> <year> 1996. </year>
Reference-contexts: A p.d.f. for U i can be constructed for stored video streams by analysing frames. In case of live streams analytic source models must be used. Distributions like normal, gamma, pareto can be fit to the collected sample [ Garrett and Willinger, 1994 ] , <ref> [ Heyman and Lakshman, 1996 ] </ref> . Parametric estimation techniques like those described in [ Feller, 1957 ] can then be used to derive parameters for U i . For analysis purposes, we assume that consecutive instances of the random variable U i are identically and independently distributed 1 .
Reference: [ Huang and Du, 1994 ] <author> Jiandong Huang and Ding-Zhu Du. </author> <title> Resource management for continuous multimedia applications. </title> <booktitle> In Proceedings of the 15 th Real Time Systems Symposium. IEEE, </booktitle> <month> December </month> <year> 1994. </year>
Reference-contexts: Since multiple, concurrent session can request these resources at a host (or across hosts) they must be managed with appropriate policies. Details of scheduling and optimizing multiple resources for a session based scheduling paradigm is described in <ref> [ Huang and Du, 1994 ] </ref> . Specifically, in order to understand the role of the I/O scheduler within this scheme, we will briefly describe the framework for the system resource manager (SRM) within Presto. A single SRM object exists on each host.
Reference: [ Huang and Wan, 1996 ] <author> Jiandong Huang and Peng-Jun Wan. </author> <title> On supporting mission critical applications. </title> <booktitle> In Proceedings on International Conference on Multimedia Computing Systems. IEEE, </booktitle> <month> June </month> <year> 1996. </year>
Reference-contexts: The resource managers (including DRM) provide REGISTER, DEREGISTER, TEST&HOLD, COMMIT, and ABORT primitives. The implementation supports criticality based pre-emption, QoS maximization, and coordination of multiple resource managers. These are described in <ref> [ Huang and Wan, 1996 ] </ref> , and [ Huang et al., 1996b ] . 7.2 The Presto File System (PFS) 7.2.1 Design Objectives PFS was designed to meet the following objectives [ Huang et al., 1996a ] : 117 * Support unit abstraction: Unlike the UNIX file system (UFS) which
Reference: [ Huang et al., 1996a ] <author> Jiandong Huang, Deepak Kenchammana-Hosekote, James Richardson, and Jaideep Srivastava. </author> <title> Presto: A prototyping environment for mission critical multimedia applications. </title> <booktitle> In Proceedings of IEEE Dual Use and Applications Conference. IEEE, </booktitle> <month> March </month> <year> 1996. </year> <note> Also available as TR95-48 Rome Laboratory, </note> <institution> Grifiss AFB, NY. </institution>
Reference-contexts: The main objective of this implementation was to examine how far one could implement the ideas proposed in this dissertation given the constraints and limitations of COTS platforms. The storage manager was implemented as part of a distributed multi-media prototype environment called Presto <ref> [ Huang et al., 1996a ] </ref> developed by the author and collegues at Honeywell Technology Center. A brief introduction to the overall design of Presto is described in Section 7.1 to facilitate the understanding of the rationale for the design of the storage manager. <p> A session is the execution image of a program. Typically, this image comprises execution threads, buffer space, disk stubs 1 , and communication channels. This image is derived by a sequence of translations on the program graph. Details of the translations are given in <ref> [ Huang et al., 1996a ] </ref> . When runtime attributes (rate, QoS, etc.) of a session are instantiated (via a user interface), they are translated to requests for CPU, network, disk, and display bandwidths. <p> These are described in [ Huang and Wan, 1996 ] , and [ Huang et al., 1996b ] . 7.2 The Presto File System (PFS) 7.2.1 Design Objectives PFS was designed to meet the following objectives <ref> [ Huang et al., 1996a ] </ref> : 117 * Support unit abstraction: Unlike the UNIX file system (UFS) which provides a byte-oriented abstraction, PFS should provide a unit oriented abstraction to applications storing and retrieving continuous multimedia. <p> Similarly, PCloseMeUp should be called after the last PFS access call is made. 123 7.3 The Presto I/O Scheduler (PIOS) 7.3.1 Design Objectives PIOS was designed to meet the following objectives <ref> [ Huang et al., 1996a ] </ref> : * Implement the BSCAN scheduling strategy: PIOS should implement the developed BSCAN strategy.
Reference: [ Huang et al., 1996b ] <author> Jiandong Huang, Yuewei Wang, and Deepak Kenchammana-Hosekote. </author> <title> Decentralized end-to-end scheduling for continuous multimedia. In Proceedings of Workshop on Network and Operating System Support for Digital Audio and Video. </title> <journal> IEEE/ACM, </journal> <month> April </month> <year> 1996. </year>
Reference-contexts: The resource managers (including DRM) provide REGISTER, DEREGISTER, TEST&HOLD, COMMIT, and ABORT primitives. The implementation supports criticality based pre-emption, QoS maximization, and coordination of multiple resource managers. These are described in [ Huang and Wan, 1996 ] , and <ref> [ Huang et al., 1996b ] </ref> . 7.2 The Presto File System (PFS) 7.2.1 Design Objectives PFS was designed to meet the following objectives [ Huang et al., 1996a ] : 117 * Support unit abstraction: Unlike the UNIX file system (UFS) which provides a byte-oriented abstraction, PFS should provide a
Reference: [ IBM, 1994 ] <author> IBM. </author> <title> 0644 N1H Model SCSI Disk Drives, </title> <booktitle> 1994. Data Sheet. </booktitle> <pages> 160 </pages>
Reference-contexts: This modified algorithm will run in O ( ns GCD (n 1 ;:::;n s ) + n). 5.4 Experimental Evaluation In this section we present evaluation of the two interleaving techniques. We simulated the placement and retrieval of multi-track audio compostions on a IBM 0664 N1H <ref> [ IBM, 1994 ] </ref> disk. This disk has block size b = 4096 bytes, data transfer rate R = 4 MBps, and per-block access time v = 0:5 ms. A 2 track 10mins audio stream composed of Track1 with playback rate 180KBps, and Track2 at 196KBps was considered.
Reference: [ ISO/MPEG Committee, 1990 ] <author> Standard ISO11172 ISO/MPEG Committee. </author> <title> Coding of moving picture and associated audio. </title> <month> December </month> <year> 1990. </year>
Reference-contexts: In such cases the scheduling is no different from that used for motion-JPEG video streams. When the MPEG stream has B and P frames, a set of frames that can be independently decoded, a group in MPEG <ref> [ ISO/MPEG Committee, 1990 ] </ref> , is assumed as the frame size. Thus, in our example the sequence IBBPBB comprises a group and this entire set of frames are assumed to be a single unit for generating schedules.
Reference: [ Jain, 1991 ] <author> R. Jain. </author> <title> The Art of Computer Systems Performance Analysis. </title> <publisher> John Wiley & Sons, </publisher> <year> 1991. </year>
Reference-contexts: In case two or more runs had the same number of samples, the one with the larger (The choice of picking the larger or smaller value depended on the type of metric. If the metric was a higher the better (HTB) metric <ref> [ Jain, 1991 ] </ref> , then the smaller value was chosen and if lower the better (LTB), then the larger value. Buffer utilization is a LTB metric and hence the choice of the larger value.) mean was selected. <p> MAGELLAN borrows theory and implementation of RNGs from various sources [ Knuth, 1973 ] , [ Bratley et al., 1987 ] , [ L'Ecuyer, 1988 ] , and <ref> [ Jain, 1991 ] </ref> . D.4.1 The Multiplicative Linear Congruential Generators MAGELLAN uses MLCG RNGs [ Jain, 1991 ] . This class of random number generators has many useful properties. These include: 155 1. <p> MAGELLAN borrows theory and implementation of RNGs from various sources [ Knuth, 1973 ] , [ Bratley et al., 1987 ] , [ L'Ecuyer, 1988 ] , and <ref> [ Jain, 1991 ] </ref> . D.4.1 The Multiplicative Linear Congruential Generators MAGELLAN uses MLCG RNGs [ Jain, 1991 ] . This class of random number generators has many useful properties. These include: 155 1. In [ L'Ecuyer, 1988 ] , the RNG has been subjected to a battery of statistical tests and has derived robust implementations, 2.
Reference: [ Kenchammana-Hosekote and Srivastava, 1994a ] <author> D.R. Kenchammana-Hosekote and J. Srivastava. </author> <title> Data Placement for Continuous Media. </title> <type> Technical report, </type> <institution> Department of Computer Science, University of Minnesota, </institution> <month> December </month> <year> 1994. </year>
Reference-contexts: Existing allocation algorithms like best-fit, roving pointer first-fit, etc. do not consider * at all. While contiguous allocation schemes minimize * they tend to waste disk space and require frequent reorganisation. Best-fit algorithms that attempt to minimize * can be intractable <ref> [ Kenchammana-Hosekote and Srivastava, 1994a ] </ref> . We attempt to separate the allocation algorithm from the model by parametrizing the algorithms as follows: A block is defined to be a set of contiguous sectors.
Reference: [ Kenchammana-Hosekote and Srivastava, 1994b ] <author> D.R. Kenchammana-Hosekote and J. Srivastava. </author> <title> Scheduling Continuous Media on a Video-On-Demand Server. </title> <booktitle> In International Conference on Multi-media Computing Systems, </booktitle> <address> Boston, MA, </address> <month> May </month> <year> 1994. </year> <note> IEEE. </note>
Reference-contexts: Previous attempts at deriving schedules whose entries are integral multiples can be found in [ Rangan and Vin, 1993a ] . It proposes the use of ceilings and floors. In <ref> [ Kenchammana-Hosekote and Srivastava, 1994b ] </ref> a detailed analysis of using dn fl e and bn fl c is carried out.
Reference: [ Kenchammana-Hosekote and Srivastava, 1995 ] <author> D.R. Kenchammana-Hosekote and J. Srivastava. </author> <title> I/O scheduling for Digital Continuous Media:Part I: Steady State. </title> <month> April </month> <year> 1995. </year> <note> Also as TR95-30, </note> <institution> Department of Computer Science, Univ. of Min-nesota. </institution>
Reference-contexts: Proof is given in <ref> [ Kenchammana-Hosekote and Srivastava, 1995 ] </ref> . 18 (184 KBps). The disk is a CAV magnetic disk spinning at 5400 rpm.
Reference: [ Kenchammana-Hosekote, 1995 ] <author> D.R. Kenchammana-Hosekote. </author> <title> The magellan Continuous Media Server Simulator. </title> <address> ftp:/ftp.cs.umn.edu/user/kencham/ MAGELLAN.ps, </address> <year> 1995. </year>
Reference-contexts: In the following sections we describe the experiment set up, data collection techniques, load generation, capacity analysis, and experiments validating the analytical model. 3.4.1 Experiment Set Up The experiments presented here were conducted using MAGELLAN, a simulator described in detail in Appendix D and <ref> [ Kenchammana-Hosekote, 1995 ] </ref> . For results presented in this chapter, MAGELLAN simulated a disk with parameters described in 35 Table 3.1. This configuration corresponds to a Sun Sparcstation 20 with a Seagate Barracuda 2GB disk with Parallax video card playing back motion-JPEG compressed video streams.
Reference: [ Knuth, 1973 ] <author> D.E. Knuth. </author> <booktitle> The Art of Computer Programming:Semi-Numerical Algorithms, </booktitle> <volume> volume 2. </volume> <publisher> Addison-Wesley Publishing Inc., </publisher> <address> 2 nd edition, </address> <year> 1973. </year>
Reference-contexts: This is neccessary because * we must be able to run multiple independent simulation runs, each being sta tistically different, and * we must avoid any correlatory effects between the random variables within each simulations run. MAGELLAN borrows theory and implementation of RNGs from various sources <ref> [ Knuth, 1973 ] </ref> , [ Bratley et al., 1987 ] , [ L'Ecuyer, 1988 ] , and [ Jain, 1991 ] . D.4.1 The Multiplicative Linear Congruential Generators MAGELLAN uses MLCG RNGs [ Jain, 1991 ] . This class of random number generators has many useful properties.
Reference: [ Krunz et al., 1995 ] <author> M. Krunz, R. Sass, and H. Hughes. </author> <title> Statistical Characteristics and Multiplexing of MPEG Streams. </title> <booktitle> In Proceedings of SIGCOMM. ACM, </booktitle> <year> 1995. </year>
Reference-contexts: Although simple, F has two main drawbacks making it inefficient for use with QBSCAN. Firstly, since there are three different compression modes and a single distribution fit is usually unsatisfactory <ref> [ Krunz et al., 1995 ] </ref> . Consequently, such fits lead to inaccurate estimates of P i and E i , making it hard for QBSCAN to ensure the required QoS. Secondly, since no distinction is made between frames, the playback will not be robust. <p> Since the I, P, and B frames are stored separately, the scheduler can skip the retrieval of any frame. Another advantage of SP is that the frame size 105 distribution fit for each component stream will be tighter since each uses a similar compression scheme <ref> [ Krunz et al., 1995 ] </ref> . However, SP introduces extra inter-stream seek (2 per stream) at the disk, consequently requiring more buffer space than F.
Reference: [ Lea, 1992 ] <author> D. Lea. </author> <title> User's Guide to the GNU C++ Library. Free Software Foundation, </title> <address> 2.0 edition, </address> <year> 1992. </year>
Reference-contexts: This class of random number generators has many useful properties. These include: 155 1. In [ L'Ecuyer, 1988 ] , the RNG has been subjected to a battery of statistical tests and has derived robust implementations, 2. A public domain portable implementation from GNU's libg++ <ref> [ Lea, 1992 ] </ref> is available, 3. The RNG has a very long period, and 4. A systematic technique to generate seeds is given in [ Bratley et al., 1987 ] .
Reference: [ L'Ecuyer, 1988 ] <author> P. L'Ecuyer. </author> <title> Efficient and Portable Combined Random Number Generators. </title> <journal> Communications of the ACM, </journal> <volume> 31(6) </volume> <pages> 742-749, </pages> <month> June </month> <year> 1988. </year>
Reference-contexts: MAGELLAN borrows theory and implementation of RNGs from various sources [ Knuth, 1973 ] , [ Bratley et al., 1987 ] , <ref> [ L'Ecuyer, 1988 ] </ref> , and [ Jain, 1991 ] . D.4.1 The Multiplicative Linear Congruential Generators MAGELLAN uses MLCG RNGs [ Jain, 1991 ] . This class of random number generators has many useful properties. These include: 155 1. In [ L'Ecuyer, 1988 ] , the RNG has been subjected <p> ] , [ Bratley et al., 1987 ] , <ref> [ L'Ecuyer, 1988 ] </ref> , and [ Jain, 1991 ] . D.4.1 The Multiplicative Linear Congruential Generators MAGELLAN uses MLCG RNGs [ Jain, 1991 ] . This class of random number generators has many useful properties. These include: 155 1. In [ L'Ecuyer, 1988 ] , the RNG has been subjected to a battery of statistical tests and has derived robust implementations, 2. A public domain portable implementation from GNU's libg++ [ Lea, 1992 ] is available, 3. The RNG has a very long period, and 4. <p> The RNG has a very long period, and 4. A systematic technique to generate seeds is given in [ Bratley et al., 1987 ] . The MLCG used in MAGELLAN is a portable implementation on 32-bit machines as described in <ref> [ L'Ecuyer, 1988 ] </ref> . L'Ecuyer suggests a mix of two MLCGs: m 1 = 2147483563; a 1 = 40014 Note that (m 1 1)=2 = 3 fi 7 fi 631 fi 81031 and (m 2 1)=2 = 19 fi 31 fi 1019 fi 1789 are relatively prime.
Reference: [ LeGall, 1991 ] <author> D. LeGall. </author> <title> MPEG: A video compression standard for multimedia applications. </title> <journal> Communications of the ACM, </journal> <volume> 34(4) </volume> <pages> 46-58, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: can be used to reduce the cycle length, and hence the buffer needed. 6.4 Adaptions for MPEG Video QBSCAN can be used directly to schedule intra-frame compressed streams like motion-JPEG video [ Wallace, 1991 ] , but is inadequate to handle inter-frame com 103 pressed streams like MPEG video streams <ref> [ LeGall, 1991 ] </ref> . Due to dependencies between frames in inter-frame compessed streams, dropping arbitrary frames can result in losing dependent frames and leaving a garbled decoder. In MPEG, skipping an I frame will cause the dropping of an entire group of pictures (GOP). <p> P frames cannot be decoded without previous I, or P frames, and B frames cannot be decoded without the appropriate I and P frames <ref> [ LeGall, 1991 ] </ref> . For robustness, it is best to drop B frames before dropping P frames, and I frames. In using QBSCAN for MPEG video retrieval two critical problems arise. These are: 1. <p> This ensures robustness during playback. However, larger super-gops, i.e. larger k, require more buffer. Thus, a trade-off between k and buffer space exists. 6.4.4 Handling MPEG Audio The MPEG compression standard <ref> [ LeGall, 1991 ] </ref> includes the interleaving of audio with video data. Audio streams are different from video streams in that they are not as voluminous as video, and generally require near constant data rate.
Reference: [ Little and Venkatesh, 1995 ] <author> T.D. Little and D. Venkatesh. </author> <title> A Scalable Video-on-Demand Service for the Provision of VCR-like Functions. </title> <booktitle> In IEEE Multimedia. IEEE, </booktitle> <year> 1995. </year> <month> 161 </month>
Reference-contexts: The efficacy of such an approach is constrained by the placement strategy which must be selected at storage time. The approach taken by [ Dey et al., 1994 ] has been to provide probabilistic guarantees when such operations are executed, specifically for operations like FastForward. Recently, <ref> [ Little and Venkatesh, 1995 ] </ref> has presented a placement technique to store compressed video, specifically MPEG streams, to support robust playback during operations like FastForward and ReversePlay. <p> As shown in Figure 6.3 a GOP is a set of frames beginning with an I, followed by P and B frames. Problems due to frame size variability are compounded by the data dependencies which raises the problem of playback robustness <ref> [ Little and Venkatesh, 1995 ] </ref> , or the ability of a decoder to recover from frame skips. P frames cannot be decoded without previous I, or P frames, and B frames cannot be decoded without the appropriate I and P frames [ LeGall, 1991 ] . <p> QoS translation. 6.4.3 Technique SG k The basic idea of SG k (for S uper GOP-ing) is to take a sequence of k GOPs, denoted a super-gop, and re-order frames in decreasing order of importance, i.e. all Is, then all Ps, and then all Bs, similar to an earlier work <ref> [ Little and Venkatesh, 1995 ] </ref> . For example, a super-gop SG 2 for a MPEG stream with GOP interleaved as IB 2 P B 2 will be layed out as IIP P BBBBBBBB. Figure 6.5 illustrates this technique.
Reference: [ Liu and Layland, 1973 ] <author> C. L. Liu and J.W. Layland. </author> <title> Scheduling algorithms for multiprogramming in a hard real-time environment. </title> <journal> JACM, </journal> <volume> (20), </volume> <month> January </month> <year> 1973. </year>
Reference-contexts: This constraint is usually expressed as a capacity constraint equation which bounds the maximum load that can be offered to the scheduler without causing any breakdown. For example, the rate monotone algorithm for CPU scheduling allows loading upto 63% before it cannot ensure timeliness of tasks <ref> [ Liu and Layland, 1973 ] </ref> .
Reference: [ Lougher and Shepherd, 1992 ] <author> P. Lougher and D. Shepherd. </author> <title> Design and implementation of a continuous media storage server. </title> <booktitle> In Proc. of 3 rd Intl. Workshop on Network and Operating Systems, </booktitle> <year> 1992. </year>
Reference-contexts: growing interest in continuous media server design, recent work by [ Gemmell, 1993 ] , [ Reddy and Wyllie, 1993 ] , [ Chen et al., 1993 ] , [ Anderson et al., 1992 ] , [ Rangan and Vin, 1993a ] , [ Gemmell and Christodoulakis, 1992 ] , <ref> [ Lougher and Shepherd, 1992 ] </ref> , [ Ramakrishnan et al., 1993 ] , [ Chang et al., 1994 ] , [ Daigle and Strosnider, 1994 ] [ Chen and Little, 1993 ] have been significant. <p> However, this class of scheduling approaches do not address issues typical of CM data like handling frame-oriented streams. In the second approach, like those in [ Gemmell, 1993 ] , [ Chen et al., 1993 ] , [ Anderson et al., 1992 ] , <ref> [ Lougher and Shepherd, 1992 ] </ref> , [ Rangan and Vin, 1993a ] , and [ Chen and Little, 1993 ] the effort has been to derive new scheduling strategies that are aware of the continuous and media requirements. <p> A key difference between our work and [ Tobagi et al., 1993 ] is that our strategy provides playback guarantee at all time besides supporting an extended suite of operations. <ref> [ Lougher and Shepherd, 1992 ] </ref> discuss support for Pause, Stop, and Play operations, besides Open and Close. However, they do not provide playback guarantees while such operations are being executed. <p> be fetched before consumption can begin. 85 86 87 88 89 90 91 5.5 Related Work Physical storage organization for continuous media has been addressed by researchers of Video-On-Demand [ Chen and Little, 1993, Rangan et al., 1992 ] and High-Definition-TV [ Rangan and Vin, 1993a ] and general purpose <ref> [ Rangan and Vin, 1991, Lougher and Shepherd, 1992 ] </ref> storage servers. Work in [ Rangan and Vin, 1993b ] describe a technique of interleaved placement. <p> They assume contiguous allocation of blocks and assume byte level access of data. However, they do not consider the placement of composite streams. <ref> [ Lougher and Shepherd, 1992 ] </ref> discusses the implementation of a storage server for continuous media.
Reference: [ Luenberger, 1984 ] <author> D.G. Luenberger. </author> <title> Linear and Nonlinear Programming. </title> <publisher> Addison-Wesley, 2nd ed. </publisher> <address> edition, </address> <year> 1984. </year>
Reference-contexts: The objective of the LP is to minimize the buffer required while the linear constraints ensure that the clients never starve for data. Approaches to solve LPs have been described in <ref> [ Luenberger, 1984 ] </ref> . However, the special structure of BUFMIN CPCC allows for a closed form solution. The solution of BUFMIN CPCC is given by Theorem 2. <p> Problem 2 (BUFMIN DPCC ) min B = 2b i=1 such that Mn O (s)r n i 0 and is an integer for all 1 i s. Various techniques to solve ILPs have been proposed in <ref> [ Luenberger, 1984 ] </ref> , [ Green-berg, 1971 ] . Again, the special structure of BUFMIN DPCC allows us to derive its solution from that of P1. Henceforth in this dissertation we denote the solution of BUFMIN DPCC as n + .
Reference: [ Lynch et al., 1994 ] <author> B.D. Lynch, H.R. Rao, and W.T. Lin. </author> <title> Comments on the Economic Analysis of Microcomputer Hardware. </title> <journal> Technical Correspondance in Comm. of ACM, </journal> <month> December </month> <year> 1994. </year>
Reference-contexts: Such an approach would require twice as much buffer as the former but is justifiable given the rapidly falling prices of main memory <ref> [ Lynch et al., 1994 ] </ref> and the fact that the bottleneck is the I/O bandwidth. The use of a double buffer organization allows out-of-sequence retrieval of data blocks, increases I/O throughput from the storage system, and adds no complexity to the disk scheduling algorithms currently implemented in disk controllers.
Reference: [ NYT, 1994 ] <author> NYT. </author> <title> Demanding Task:Video on Demand. Article in New York Times, </title> <note> Sunday 23 rd , January 1994. </note>
Reference-contexts: One such media type, which includes digital audio and video, is continuous media. The need for handling continuous media on existing and future computing platforms stems from a rapidly growing set of applications in domains like distance education [ Schnepf et al., 1994 ] , entertainment <ref> [ NYT, 1994 ] </ref> , medical services [ ACM, 1995 ] , office automation [ Ooi et al., 1987 ] , process control [ Guha et al., 1993 ] , national defense [ USAF, 1994 ] , etc. <p> These include the ability to handle * high data volume, i.e. amount of data that needs to be retrieved, processed, and/or transported is a few orders of magnitude higher than other media types <ref> [ NYT, 1994 ] </ref> . * resource usage variability, i.e. the amount of resource used tends to vary over time. One main source of variability is compression. The high data volume and spatio-temporal redundancies make continuous media a good candidate for data compression.
Reference: [ Ooi et al., 1987 ] <author> B.C. Ooi, A.N. Narasimalu, K.Y. Wang, and I.F. Chang. </author> <title> Design of a multi-media files server using optical disks for office automation. </title> <booktitle> In IEEE Computer Society Office Automation Symposium, </booktitle> <pages> pages 157-163, </pages> <year> 1987. </year>
Reference-contexts: The need for handling continuous media on existing and future computing platforms stems from a rapidly growing set of applications in domains like distance education [ Schnepf et al., 1994 ] , entertainment [ NYT, 1994 ] , medical services [ ACM, 1995 ] , office automation <ref> [ Ooi et al., 1987 ] </ref> , process control [ Guha et al., 1993 ] , national defense [ USAF, 1994 ] , etc. Typically, a video or audio clip is a time sequence of digital samples.
Reference: [ Pohlmann, 1995 ] <author> K.C. Pohlmann. </author> <title> Principles of Digital Audio. </title> <publisher> Knowledge Industry Publications Inc., </publisher> <year> 1995. </year>
Reference-contexts: Such playback guarantees are required in many mission critical applications like command and process control in defense [ USAF, 1994 ] and industry [ Guha et al., 1993 ] , and in domains like medicine [ ACM, 1995 ] and sound production <ref> [ Pohlmann, 1995 ] </ref> . Our approach to providing jitter-free playback rate of VBR streams is to provide I/O bandwidth corresponding to playback at the highest data rate.
Reference: [ Ramakrishnan et al., 1993 ] <author> K.K. Ramakrishnan, L. Vaitzblit, C. Gray, U. Vahalia, D. Ting, P. Tzelnic, S. Glasner, and W. Duso. </author> <title> Operating system support for a Video-On-Demand service. </title> <booktitle> In Proc. of 4 rd Intl. Workshop on Network and Operating Systems Support for Digitial Audio and Video, </booktitle> <year> 1993. </year>
Reference-contexts: recent work by [ Gemmell, 1993 ] , [ Reddy and Wyllie, 1993 ] , [ Chen et al., 1993 ] , [ Anderson et al., 1992 ] , [ Rangan and Vin, 1993a ] , [ Gemmell and Christodoulakis, 1992 ] , [ Lougher and Shepherd, 1992 ] , <ref> [ Ramakrishnan et al., 1993 ] </ref> , [ Chang et al., 1994 ] , [ Daigle and Strosnider, 1994 ] [ Chen and Little, 1993 ] have been significant. <p> While [ Gemmell and Christodoulakis, 1992 ] presents a general theory of retrieval for continuous media there have been two distinct approaches to the retrieval problem. First, approaches like [ Reddy and Wyllie, 1993 ] , <ref> [ Ramakrishnan et al., 1993 ] </ref> , [ Tindell and Burns, 1993 ] , and [ Daigle and Strosnider, 1994 ] adapt scheduling algorithms used in real-time systems to continuous media access. [ Reddy and Wyllie, 1993 ] and [ Daigle and Strosnider, 1994 ] give thorough evaluations of these algorithms.
Reference: [ Rangan and Vin, 1991 ] <author> Venkat P. Rangan and Harrick V. Vin. </author> <title> Designing file systems for digital audio and video. </title> <booktitle> In Proceedings of the 13 th Symposium on Operating System Principles, </booktitle> <month> October </month> <year> 1991. </year>
Reference-contexts: be fetched before consumption can begin. 85 86 87 88 89 90 91 5.5 Related Work Physical storage organization for continuous media has been addressed by researchers of Video-On-Demand [ Chen and Little, 1993, Rangan et al., 1992 ] and High-Definition-TV [ Rangan and Vin, 1993a ] and general purpose <ref> [ Rangan and Vin, 1991, Lougher and Shepherd, 1992 ] </ref> storage servers. Work in [ Rangan and Vin, 1993b ] describe a technique of interleaved placement.
Reference: [ Rangan and Vin, 1993a ] <author> V.P. Rangan and H.M. Vin. </author> <title> Designing a multi-user HDTV storage server. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 11(1), </volume> <month> January </month> <year> 1993. </year>
Reference-contexts: In [ Chen et al., 1993 ] , [ Gemmell, 1993 ] a SCAN scheduling strategy is used in conjunction with single buffer organization. Other approaches have used fixed order scheduling with double buffer organization ( <ref> [ Rangan and Vin, 1993a ] </ref> , [ Chen and Little, 1993 ] ). In our approach we use our scheduling strategy with a double buffer organization. In Section 2.3.1 we discuss the reasons for choosing this organization. <p> In such a case the schedule due to Lemma 3 will neither guarantee feasibility nor optimality for BUFMIN DPCC . Previous attempts at deriving schedules whose entries are integral multiples can be found in <ref> [ Rangan and Vin, 1993a ] </ref> . It proposes the use of ceilings and floors. In [ Kenchammana-Hosekote and Srivastava, 1994b ] a detailed analysis of using dn fl e and bn fl c is carried out. <p> With the growing interest in continuous media server design, recent work by [ Gemmell, 1993 ] , [ Reddy and Wyllie, 1993 ] , [ Chen et al., 1993 ] , [ Anderson et al., 1992 ] , <ref> [ Rangan and Vin, 1993a ] </ref> , [ Gemmell and Christodoulakis, 1992 ] , [ Lougher and Shepherd, 1992 ] , [ Ramakrishnan et al., 1993 ] , [ Chang et al., 1994 ] , [ Daigle and Strosnider, 1994 ] [ Chen and Little, 1993 ] have been significant. <p> In the second approach, like those in [ Gemmell, 1993 ] , [ Chen et al., 1993 ] , [ Anderson et al., 1992 ] , [ Lougher and Shepherd, 1992 ] , <ref> [ Rangan and Vin, 1993a ] </ref> , and [ Chen and Little, 1993 ] the effort has been to derive new scheduling strategies that are aware of the continuous and media requirements. Our work draws heavily on work from the second approach. [ Rangan and Vin, 1993a ] propose a fixed <p> , [ Lougher and Shepherd, 1992 ] , <ref> [ Rangan and Vin, 1993a ] </ref> , and [ Chen and Little, 1993 ] the effort has been to derive new scheduling strategies that are aware of the continuous and media requirements. Our work draws heavily on work from the second approach. [ Rangan and Vin, 1993a ] propose a fixed order cyclical scheduling strategy. Their analysis has inspired some of the modelling presented in the previous chapter. Their observation regarding the implementation constraint of integral block fetches inspired the detailed modelling of this constraint. <p> Their observation regarding the implementation constraint of integral block fetches inspired the detailed modelling of this constraint. However, they do not address the problem of handling frame-oriented CM data. [ Anderson et al., 1992 ] develop a similar scheduling strategy as that in <ref> [ Rangan and Vin, 1993a ] </ref> . However, [ Anderson et al., 1992 ] derive the scheduling strategy by constraining their search of the solution space to integer points. <p> Their minimal feasible WAS algorithm has been made more efficient as well as has been extended to handle client consumption in discrete chunks called frames. Both [ Gemmell, 1993 ] and [ Chen et al., 1993 ] consider a modification to the scheduling strategy first proposed by <ref> [ Rangan and Vin, 1993a ] </ref> and [ Anderson et al., 1992 ] . In their work they consider a mix of a fixed order scheduling, with SCAN order servicing of different CM data streams. <p> However, their main focus is on synchronous delivery of data across the network. Also, their protocols provide probabilistic playback guarantees to clients. Much of the previous work on designing CM storage servers have discussed supporting concurrency set operations like Open, and Close. Both <ref> [ Rangan and Vin, 1993a ] </ref> and [ Anderson et al., 1992 ] discuss safe state transition algorithms to handle this set of operations. However, they do not try to minimize response time of such operations. <p> block of the s th component stream need to be fetched before consumption can begin. 85 86 87 88 89 90 91 5.5 Related Work Physical storage organization for continuous media has been addressed by researchers of Video-On-Demand [ Chen and Little, 1993, Rangan et al., 1992 ] and High-Definition-TV <ref> [ Rangan and Vin, 1993a ] </ref> and general purpose [ Rangan and Vin, 1991, Lougher and Shepherd, 1992 ] storage servers. Work in [ Rangan and Vin, 1993b ] describe a technique of interleaved placement.
Reference: [ Rangan and Vin, 1993b ] <author> V.P. Rangan and H.M. Vin. </author> <title> Efficient storage techniques for digital continuous multimedia. </title> <journal> IEEE Trans. on Knowledge and Data Engg., </journal> <volume> 5(4) </volume> <pages> 564-573, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: However, as will be seen shortly, it becomes advantageous to store groups of disk blocks of a single stream as close to each other as possible. Issues related to constraining placement are further discussed in [ Chen and Little, 1993 ] and <ref> [ Rangan and Vin, 1993b ] </ref> . Data blocks of different streams, however, may not neccessarily be stored close to each other. <p> Work in <ref> [ Rangan and Vin, 1993b ] </ref> describe a technique of interleaved placement. It describes merging techniques to utilize the disk efficiently, and buffer read-ahead required in such schemes. [ Chen and Little, 1993 ] describes a contiguous allocation strategy. They suggest mixing data from component streams in placing composite streams.
Reference: [ Rangan et al., 1992 ] <author> P.V. Rangan, H.M. Vin, and S. Ramanathan. </author> <title> Designing an On-Demand Multimedia Service. </title> <journal> IEEE Communications Magazine, </journal> <volume> 30(7), </volume> <month> July </month> <year> 1992. </year> <month> 162 </month>
Reference-contexts: GCDI. 3 More accurately, blocks for s 1 component streams and 1 block of the s th component stream need to be fetched before consumption can begin. 85 86 87 88 89 90 91 5.5 Related Work Physical storage organization for continuous media has been addressed by researchers of Video-On-Demand <ref> [ Chen and Little, 1993, Rangan et al., 1992 ] </ref> and High-Definition-TV [ Rangan and Vin, 1993a ] and general purpose [ Rangan and Vin, 1991, Lougher and Shepherd, 1992 ] storage servers. Work in [ Rangan and Vin, 1993b ] describe a technique of interleaved placement.
Reference: [ Ravindran and Bansal, 1993 ] <author> K. Ravindran and V. Bansal. </author> <title> Delay Compensation Protocols for Synchronziation of Multimedia Data Streams. </title> <journal> IEEE Trans. Knowledge and Data Engineering, </journal> <volume> 5(4) </volume> <pages> 574-589, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: While a client may tolerate occasional skips in order to maintain timeliness, she may find its frequent occurence unacceptable. The average time duration between successive skips is denoted as the mean time between skips, MTBS, and has been found to be a reasonable measure of playback quality <ref> [ Ravindran and Bansal, 1993 ] </ref> , [ Aptekar et al., 1994 ] . <p> of playback quality <ref> [ Ravindran and Bansal, 1993 ] </ref> , [ Aptekar et al., 1994 ] . For example, skipping a frame every 10 seconds has been found to be an acceptable threshold for broadcast video, i.e. at ae = 30 fps one frame in every 300 can be skipped [ Ravindran and Bansal, 1993 ] . 95 and the y-axis represents the frame number currently being displayed. In a delay-free channel, playback will follow the dashed line. In reality though, playback follows the solid line. The vertical dotted lines indicate frame skips. <p> We set CLF i = 1 <ref> [ Ravindran and Bansal, 1993 ] </ref> and varied (U i ) used for admission control and schedule computation. In Figure 6.6 the effect of varying (U i ) on the quality of playback is shown.
Reference: [ Reddy and Wyllie, 1993 ] <author> A.L.N. Reddy and J. Wyllie. </author> <title> Disk Scheduling in a Multimedia Server. </title> <booktitle> In Proceedings of the ACM Multimedia, </booktitle> <pages> pages 225-234, </pages> <address> Anaheim, CA, </address> <month> August </month> <year> 1993. </year>
Reference-contexts: More recently, [ Abbott and Garcia-Molina, 1990 ] and [ Chen et al., 1991 ] have addressed the problem in the context of real-time systems. With the growing interest in continuous media server design, recent work by [ Gemmell, 1993 ] , <ref> [ Reddy and Wyllie, 1993 ] </ref> , [ Chen et al., 1993 ] , [ Anderson et al., 1992 ] , [ Rangan and Vin, 1993a ] , [ Gemmell and Christodoulakis, 1992 ] , [ Lougher and Shepherd, 1992 ] , [ Ramakrishnan et al., 1993 ] , [ Chang <p> While [ Gemmell and Christodoulakis, 1992 ] presents a general theory of retrieval for continuous media there have been two distinct approaches to the retrieval problem. First, approaches like <ref> [ Reddy and Wyllie, 1993 ] </ref> , [ Ramakrishnan et al., 1993 ] , [ Tindell and Burns, 1993 ] , and [ Daigle and Strosnider, 1994 ] adapt scheduling algorithms used in real-time systems to continuous media access. [ Reddy and Wyllie, 1993 ] and [ Daigle and Strosnider, 1994 <p> First, approaches like <ref> [ Reddy and Wyllie, 1993 ] </ref> , [ Ramakrishnan et al., 1993 ] , [ Tindell and Burns, 1993 ] , and [ Daigle and Strosnider, 1994 ] adapt scheduling algorithms used in real-time systems to continuous media access. [ Reddy and Wyllie, 1993 ] and [ Daigle and Strosnider, 1994 ] give thorough evaluations of these algorithms. An important conclusion has been that larger request sizes coupled with deferred 43 deadlines are the key to performance improvement. <p> The P-phase, the knee, and the A-phase is seen more clearly in the figure. 4.6 Related Work Servicing strategies like [ Chen et al., 1993 ] , <ref> [ Reddy and Wyllie, 1993 ] </ref> , and [ Gemmell, 1993 ] use single buffering while allowing head scheduling algorithms like C-SCAN to decide the servicing order.
Reference: [ Rowe and Smith, 1992 ] <author> L. Rowe and B.C. Smith. </author> <title> A Continuous Media Player. </title> <booktitle> In Proc. of 3 rd Intl. Workshop on Network and Operating Systems Support for Digital Audio and Video, </booktitle> <year> 1992. </year>
Reference-contexts: As discussed in Section 2.3.1, using single buffers can restrict the subscribers' consumption sequence thereby disallowing certain kinds of VCR operations. <ref> [ Rowe and Smith, 1992 ] </ref> enumerates a similar list of VCR operations as enumerated in Table 4.1 in the context of a retrieval tool for CM data. However, their main focus is on synchronous delivery of data across the network. Also, their protocols provide probabilistic playback guarantees to clients.
Reference: [ Ruemmler and Wilkes, 1993 ] <author> Chris Ruemmler and John Wilkes. </author> <title> An introduction to disk drive modelling. </title> <type> Technical Report HPL-OSR-93-29, </type> <institution> Hewlett Packard Laboratory, Page Mill Road, </institution> <address> Palo Alto, CA, </address> <year> 1993. </year>
Reference-contexts: While incorporating these aspects will make the scheduling model more accurate the analysis becomes 21 complex which, in some cases, may not be worthwhile. In this section we state the ramifications of incorporating these issues and report them as open problems. 2.6.1 Seek Model Recent investigation by <ref> [ Ruemmler and Wilkes, 1993 ] </ref> shows that disk seek times can be piece-wise approximated analytically. <p> Seek models are coarsly documented by specifying one track seek, and full stroke seek times. It is hard to model the disk with the available information. In the implementation of PIOS, approximation of the manufacturer's specification were used. As recommended in <ref> [ Ruemmler and Wilkes, 1993 ] </ref> we would like to urge disk manufacturers to include more detailed seek profile and timing information in the future. Secondly, current SCSI disks hide device geometry.
Reference: [ Schnepf et al., 1994 ] <author> J. Schnepf, V. Mashayekhi, J. Riedl, and D.H.-C. Du. </author> <title> Closing the Gap in Distance Learning Education: Computer-Supported, </title> <journal> Participative, Media-Rich Education. ED-TECH Review, </journal> <year> 1994. </year> <month> Fall/Winter. </month>
Reference-contexts: One such media type, which includes digital audio and video, is continuous media. The need for handling continuous media on existing and future computing platforms stems from a rapidly growing set of applications in domains like distance education <ref> [ Schnepf et al., 1994 ] </ref> , entertainment [ NYT, 1994 ] , medical services [ ACM, 1995 ] , office automation [ Ooi et al., 1987 ] , process control [ Guha et al., 1993 ] , national defense [ USAF, 1994 ] , etc.
Reference: [ Schroeder, 1991 ] <author> M.R. Schroeder. </author> <title> Fractals, Chaos, and Power Laws:Minutes from an Infinite Paradise. </title> <publisher> Freeman, W.H., </publisher> <year> 1991. </year>
Reference-contexts: Traversing the main diagonal starting at (0; : : : ; 0), assign the next block to component stream i if the i th dimension's grid line is intersected. This interleaving technique has many properties <ref> [ Schroeder, 1991 ] </ref> . One that is relevant to the placement problem is that the technique produces a good interleaving that is suitable even in cases when fn 1 ; : : : ; n s g are relatively prime. Figure 5.4 illustrates an example of this interleaving.
Reference: [ Schwetman, 1990 ] <author> H.D. Schwetman. </author> <title> CSIM Reference Manual (Revision 15). </title> <type> Technical Report ACA-ST-257-87, </type> <institution> Microelectronics and Computer Technology Corporation, Austin Texas, </institution> <year> 1990. </year>
Reference-contexts: The aim was to use the right tools, and to glue these tools together making it easier to change in the future, besides forcing modularity. D.1.2 Tools The design requirements lead to the choice of the following tools: * C++/CSIM <ref> [ Schwetman, 1990 ] </ref> for process oriented simulation code, * C++ for overall implementation glue, * MATLAB for all matrix manipulations, * Perl for all experimental analyses, and * Tcl/tk for data visualization. D.1.3 High Level Design Simulator consists of seven key objects. These are described here. 1.
Reference: [ Smith, 1988 ] <author> J. E. Smith. </author> <title> Characterizing Computer Performance with a Single Number. </title> <journal> Communications of ACM, </journal> <volume> 31(10) </volume> <pages> 1202-1206, </pages> <month> October </month> <year> 1988. </year>
Reference-contexts: Since the cycle duration for all runs is constant, the use of arithmetic mean is justified <ref> [ Smith, 1988 ] </ref> . If the statistic was a stream metric, then the statistic with the most number of samples was chosen. We chose this scheme because there is greater confidence in a statistic computed from a larger sample.
Reference: [ Stacey, 1995 ] <author> C. Stacey. </author> <title> Seed Selection for LCGs. </title> <type> personal communication, </type> <month> April </month> <year> 1995. </year>
Reference-contexts: D.4.2 Seed Selection For the pair of LCG generators used in MAGELLAN multiple independent streams of random numbers are generated by seeding each generator separately. The technique to automatically compute the seeds for successive instances of MLCG is obtained from [ Bratley et al., 1987 ] and <ref> [ Stacey, 1995 ] </ref> . <p> Bratley et al., 1987 ] 's procedure to derive seeds for statistically independent RNGs is as follows: Regardless of the seed for L 1 (say that it is set to 0), set the seed for L 2 using every 164 th random number from L 2 (with initial seed 1). <ref> [ Stacey, 1995 ] </ref> gives a closed form for computing the i th number in a stream generated by a LCG L = (a; m; c) as Z i = a i Z 0 + a 1 (mod m) (D.1) Since c = 0 for the LCGs used in MLCG we
Reference: [ Stewart et al., 1993 ] <author> D.B. Stewart, R.A. Volpe, and P.K. Khosla. </author> <title> Design of dynamically reconfigurable real-time software using port-based objects. </title> <type> Technical Report CMR-RI-TR-93-11, </type> <institution> Dept. of ECE, </institution> <address> CMU, 5000, Forbes Avenue, Pittsburgh, PA 15213, </address> <month> July </month> <year> 1993. </year>
Reference-contexts: Section 7.4 describes briefly the implementation platform and in Section 7.5 our experiences are reported. 7.1 The Presto Programming and Runtime Environment Many CM applications can be modelled using the dataflow paradigm [ Tennenhouse et al., 1995 ] , <ref> [ Stewart et al., 1993 ] </ref> . In such a paradigm, an application is described by a collection of data pipes that regulate flow through functional blocks. Blocks encapsulate functions. The pipes and blocks are arranged in ways to achieve an overall function that is the application.
Reference: [ Tennenhouse et al., 1995 ] <author> David Tennenhouse, Joel Adam, David Carver, Henry Houh, Michael Ismert, Christopher Lindblad, William Stasior, David Wetherall, David Bacher, and Theresa Chang. </author> <title> The ViewStation: A software-intensive approach to media processing and distribution. </title> <journal> Multimedia Systems, </journal> (3):104-115, 1995. <volume> 163 </volume>
Reference-contexts: The design and implementation of PIOS is described in Section 7.3. Section 7.4 describes briefly the implementation platform and in Section 7.5 our experiences are reported. 7.1 The Presto Programming and Runtime Environment Many CM applications can be modelled using the dataflow paradigm <ref> [ Tennenhouse et al., 1995 ] </ref> , [ Stewart et al., 1993 ] . In such a paradigm, an application is described by a collection of data pipes that regulate flow through functional blocks. Blocks encapsulate functions.
Reference: [ Teorey and Pinkerton, 1972 ] <author> T.J. </author> <title> Teorey and T.B. Pinkerton. A Comparitive Analysis of Disk Scheduling Policy. </title> <journal> Communications of the ACM, </journal> <volume> 15(3) </volume> <pages> 177-184, </pages> <month> March </month> <year> 1972. </year>
Reference-contexts: This supports the observation made in the previous chapter that the benefits of increasing buffer allocation in exchange for slack diminishes with heavier loads. 3.5 Related Work The problem of scheduling accesses to I/O systems has been studied extensively as early as [ Frank, 1969 ] , <ref> [ Teorey and Pinkerton, 1972 ] </ref> , and [ Fuller, 1975 ] . More recently, [ Abbott and Garcia-Molina, 1990 ] and [ Chen et al., 1991 ] have addressed the problem in the context of real-time systems.
Reference: [ Tewari et al., 1996 ] <author> Renu Tewari, Dinkar Sitaram, and Ray Dias. </author> <title> Placement on zoned disks. </title> <booktitle> In Proceedings of SPIE IS&T Photonics West. SPIE, </booktitle> <month> February </month> <year> 1996. </year>
Reference-contexts: must be restricted to a smaller range than that given by Condition 2.8. 2.6 Open Issues The mathematical model for the scheduler can be enhanced to include a comprehensive disk model, a general service order within a cycle, and exploit features in newer disks like zoned bit recoding or ZBR <ref> [ Tewari et al., 1996 ] </ref> . While incorporating these aspects will make the scheduling model more accurate the analysis becomes 21 complex which, in some cases, may not be worthwhile. <p> This allows the addition of sufficient slack at the scheduler to perform periodic calibrations. An alternative is to model and include recalibration times in the cycles. A more significant development in storage disks is the introduction of ZBR <ref> [ Tewari et al., 1996 ] </ref> . Due to geometric considerations the outer tracks of a sector can store more data than the inner ones. However, due to CAV, older disks were unable to exploit this and read data at a constant rate R regardless of the current head position.
Reference: [ Tindell and Burns, 1993 ] <author> Ken Tindell and Alan Burns. </author> <title> Scheduling hard real-time multimedia disk traffic. </title> <type> manuscript, </type> <year> 1993. </year> <type> Personal Communications. </type>
Reference-contexts: While [ Gemmell and Christodoulakis, 1992 ] presents a general theory of retrieval for continuous media there have been two distinct approaches to the retrieval problem. First, approaches like [ Reddy and Wyllie, 1993 ] , [ Ramakrishnan et al., 1993 ] , <ref> [ Tindell and Burns, 1993 ] </ref> , and [ Daigle and Strosnider, 1994 ] adapt scheduling algorithms used in real-time systems to continuous media access. [ Reddy and Wyllie, 1993 ] and [ Daigle and Strosnider, 1994 ] give thorough evaluations of these algorithms.
Reference: [ Tobagi et al., 1993 ] <author> F. Tobagi, J. Pang, R. Baird, and M. Gang. </author> <title> Streaming RAID A disk array management system for video files. </title> <booktitle> In ACM Multimedia, </booktitle> <pages> pages 393-400. </pages> <publisher> ACM, </publisher> <year> 1993. </year>
Reference-contexts: Such a disk stores stream instances of a single type, e.g. MPEG-1 compressed video streams. Such configurations will be popular for Video-On-Demand applications where different video stream instances will be stored in a uniform compression standard which would include playback at similar rates <ref> [ Tobagi et al., 1993 ] </ref> , [ Chang et al., 1994 ] , [ Bolosky et al., 1996 ] . When configured to store dissimilar streams, the disk must store streams compressed using different standards and playback rates. <p> However, they do not try to minimize response time of such operations. The observation of maintaining finite slack time in a cycle to handle VCR operations has been made 69 in <ref> [ Tobagi et al., 1993 ] </ref> . They discuss the relationship between slack and the response time of concurrency set operations, which they denote as start-up latency. A key difference between our work and [ Tobagi et al., 1993 ] is that our strategy provides playback guarantee at all time besides <p> maintaining finite slack time in a cycle to handle VCR operations has been made 69 in <ref> [ Tobagi et al., 1993 ] </ref> . They discuss the relationship between slack and the response time of concurrency set operations, which they denote as start-up latency. A key difference between our work and [ Tobagi et al., 1993 ] is that our strategy provides playback guarantee at all time besides supporting an extended suite of operations. [ Lougher and Shepherd, 1992 ] discuss support for Pause, Stop, and Play operations, besides Open and Close.
Reference: [ USAF, 1994 ] <author> USAF. </author> <title> C 4 I: The Advanced Warrior Program. </title> <note> USAF Publication, </note> <year> 1994. </year>
Reference-contexts: rapidly growing set of applications in domains like distance education [ Schnepf et al., 1994 ] , entertainment [ NYT, 1994 ] , medical services [ ACM, 1995 ] , office automation [ Ooi et al., 1987 ] , process control [ Guha et al., 1993 ] , national defense <ref> [ USAF, 1994 ] </ref> , etc. Typically, a video or audio clip is a time sequence of digital samples. These samples can range in sizes from small 1-2 bytes for audio, to large 20KB-1MB for video frames. A timed sequence of audio and/or video samples is called a stream. <p> Such playback guarantees are required in many mission critical applications like command and process control in defense <ref> [ USAF, 1994 ] </ref> and industry [ Guha et al., 1993 ] , and in domains like medicine [ ACM, 1995 ] and sound production [ Pohlmann, 1995 ] .
Reference: [ van Meter, 1996 ] <author> R. van Meter. </author> <title> A brief survey of current work on network attached peripherals. In Operating System Review, </title> <booktitle> volume 30. ACM, </booktitle> <month> January </month> <year> 1996. </year> <note> Extended Abstract. </note>
Reference-contexts: Consequently, much of the stream must be stored in secondary, and in some cases tertiary, storage devices attached either to the host (as in server-attached architectures) or directly to a network (as in network-attached architectures <ref> [ van Meter, 1996 ] </ref> ). These devices include magnetic disks, disk arrays, etc. are collectively referred to as the I/O storage sub-system. Recent advances in storage system technology have made it possible to economically store high volume continuous media.
Reference: [ Vin et al., 1994 ] <author> H.M. Vin, P. Goyal, A. Goyal, and A. Goyal. </author> <title> A Statistical Admission Control Algorithm for Multimedia Servers. </title> <booktitle> In ACM Multimedia, </booktitle> <pages> pages 33-40. </pages> <publisher> ACM, </publisher> <month> October </month> <year> 1994. </year>
Reference-contexts: Their conclusion that performance gains in terms of buffer space from a mix of fixed order and SCAN discipline has influenced the formulation of BSCAN. Some of the works cited above discuss deterministic services, i.e. playback guarantees are maintained during retrieval. [ Chen and Little, 1993 ] and <ref> [ Vin et al., 1994 ] </ref> modify round robin scheduling strategies to provide statistical guarantees to clients. In order to better utilize the storage system, they provide a probabilistic analysis of their scheduling models such that most of the times the clients' playback is smooth.
Reference: [ Wallace, 1991 ] <author> G. K. Wallace. </author> <title> The JPEG still picture compression standard. </title> <journal> Communications of the ACM, </journal> <volume> 34(4) </volume> <pages> 30-44, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: Data rate variability in the playback of such streams occurs mainly because of compression of frames. The compressed frames vary in size depending on the content and compression techniques. For example, Figure 3.1 shows the variation of the data rate over time for a motion-JPEG 3 video stream <ref> [ Wallace, 1991 ] </ref> . 3 The data was collected for a 640x480 motion-JPEG video stream from a Parallax Video board at a capture rate of 12 frames per second and a QFactor= 90. 33 When playback of streams have data rate variability, in order to maintain jitter-free playback, we must <p> Alternatively, when memory is at a premium (and I/O bandwidth is not) a larger estimate can be used to reduce the cycle length, and hence the buffer needed. 6.4 Adaptions for MPEG Video QBSCAN can be used directly to schedule intra-frame compressed streams like motion-JPEG video <ref> [ Wallace, 1991 ] </ref> , but is inadequate to handle inter-frame com 103 pressed streams like MPEG video streams [ LeGall, 1991 ] . Due to dependencies between frames in inter-frame compessed streams, dropping arbitrary frames can result in losing dependent frames and leaving a garbled decoder.
Reference: [ Wijesekera and Srivastava, 1995 ] <author> D. Wijesekera and J. Srivastava. </author> <title> QoS Metrics for Continuous Media. </title> <editor> In I. Miloucheva, editor, </editor> <booktitle> Proceedings of PROMS '95, </booktitle> <volume> volume 2, </volume> <pages> pages 269-289, </pages> <institution> University of Salszberg, Salszberg, Austria, </institution> <month> October </month> <year> 1995. </year>
Reference: [ Yu et al., 1989 ] <author> C Yu, W Sun, D Bitton, Q. Yang, Y. Bruno, and J. Yus. </author> <title> Efficient placement of audio data on optical disks for real-time applications. </title> <journal> Communications of ACM, </journal> <volume> 7, </volume> <month> July </month> <year> 1989. </year>
Reference-contexts: There are numerous applications of this problem. When association and/or synchronization information of two (or more) single streams is known, then the placement of their composition can be optimized. This ensures efficient retrieval at runtime, and can be used to design outlays of WORM disks <ref> [ Yu et al., 1989 ] </ref> . Multi-track audio streams are examples of composite streams. In digital studio applications each audio channel/track must be stored separately to allow for flexibility during retrieval. <p> Then the optimal interleaving is opt where, Ts ( opt ) = min Ts () BTP ( opt ) = min BTP () We now consider two heuristics to solve INTERLEAVE . 5.3.1 GCDI Interleaving In this technique a particular interleaving sub-sequence, denoted the placement cycle, is repeated <ref> [ Yu et al., 1989 ] </ref> . Within each placement cycle r 1 : : : : : r n = n 1 : : : : : n s to maintain the relative rates of the component streams. <p> However, they do not consider the placement of composite streams. [ Lougher and Shepherd, 1992 ] discusses the implementation of a storage server for continuous media. They describe the problems associated with the storage of different types of continuous media (video, audio) and suggest contiguous allocation schemes on disk. <ref> [ Yu et al., 1989 ] </ref> describe the storage of audio data as a sequence of blocks interleaved with gaps to ensure minimal buffer requirement at retrieval. They discuss merging algorithms to utilize the disk more efficiently.
References-found: 78

