URL: http://www.cs.umd.edu/projects/mcml/thesis/debanjan.ps
Refering-URL: http://www.cs.umd.edu/projects/mcml/pub.html
Root-URL: 
Title: Supporting Distributed Multimedia Applications on ATM Networks  
Degree: Debanjan Saha, Doctor of Philosophy, 1995 Dissertation directed by: Professor Satish K. Tripathi  
Affiliation: Department of Computer Science  
Note: Abstract Title of Dissertation:  
Abstract: ATM offers a number of features, such as high-bandwidth, and provision for per-connection quality of service guarantees, making it particularly attractive to multimedia applications. Unfortunately, the bandwidth available at ATM's data-link layer is not visible to the applications due to operating system (OS) bottlenecks at the host-network interface. Similarly, the promise of per-connection service guarantees is still elusive due to the lack of appropriate traffic control mechanisms. In this dissertation, we investigate both of these problems, taking multimedia applications as examples. The OS bottlenecks are not limited to the network interfaces, but affect the performance of the entire I/O subsystem. We propose to alleviate OS's I/O bottleneck by according more autonomy to I/O devices and by using a connection oriented framework for I/O transfers. We present experimental results on a video conferencing testbed demonstrating the tremendous performance impact of the proposed I/O architecture on networked multimedia applications. To address the problem of quality of service support in ATM networks, we propose a simple cell scheduling mechanism, named carry-over round robin (CORR). Using analytical techniques, we analyze the delay performance of CORR scheduling. Besides providing guarantees on delay, CORR is also fair in distributing the excess bandwidth. We show that albeit its simplicity, CORR is very competitive with other more complex schemes both in terms of delay performance and fairness. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> MMTplus Functional Description. IBM Internal Document, </institution> <year> 1993. </year>
Reference-contexts: One master acts as a controlling bus master and the other as a slave. This feature has been used in the AURORA [11] testbed. There are several other examples of hardware streaming between devices using customized hardware interfaces <ref> [1, 4, 47] </ref>. Hardware streaming has encountered resistance because of its lack of integration with the host system. Since the applications have no access to the data, they are constrained by the functionality provided by the adapters. <p> Each machine is equipped with an IBM Turboways ATM network interface [2], and the MMT 3 prototype adapter <ref> [1] </ref>. The ATM adapter implements the ATM adaptation layer 5 (AAL5), which is responsible for all segmentation and reassembly of datagrams and detection of transmission errors and dropped cells. The MMT adapter performs video and audio capture, compression, decompression, and playback. connected through the system bus. <p> The video input is fed through the video frame rate control logic to the compression engine. The data rate of the compressed data stream can be controlled by programming the quantizer to as low as 128 Kbits/sec and as high as 10 Mbits/sec <ref> [1] </ref>. The CODEC is capable of mixing up to 32 video streams [42] in the compressed domain and presenting them in multiple video windows. ATM Adapter. The IBM ATM adapter [2] is responsible for performing the AAL5 functionalities.
Reference: [2] <institution> ATM Turboways 100 Adapter. IBM Internal Document, </institution> <year> 1994. </year>
Reference-contexts: Each machine is equipped with an IBM Turboways ATM network interface <ref> [2] </ref>, and the MMT 3 prototype adapter [1]. The ATM adapter implements the ATM adaptation layer 5 (AAL5), which is responsible for all segmentation and reassembly of datagrams and detection of transmission errors and dropped cells. <p> The CODEC is capable of mixing up to 32 video streams [42] in the compressed domain and presenting them in multiple video windows. ATM Adapter. The IBM ATM adapter <ref> [2] </ref> is responsible for performing the AAL5 functionalities. It features a dedicated i960 processor and a specialized chipset to handle AAL5 segmentation and reassembly in hardware. The adapter is equipped with a DMA master and 2MB of on-board memory.
Reference: [3] <author> M. Accetta, R. Baron, W. Bolosky, D. Golub, R. Rashid, A. Tevanin, and M. Young. </author> <note> Mach: </note>
Reference-contexts: Several recent works have addressed the problem of data copying due to crossing of domain boundaries. There are two basic approaches to solving the problem |- virtual copying and use of shared memory. In the techniques <ref> [3, 37, 10, 44] </ref> using virtual copying, data is not physically copied when it moves from one domain to another, rather an association is maintained between the physical copy of the data and the domain (or domains) that currently owns it. <p> The simplest way of avoiding data copy is to use shared memory [14, 15]. In [37] inter-domain transfers are optimized by encapsulating data in a sequence of pallets (contiguous virtual memory address). Data is mapped into a receiving domain only when requested by the application. Mach <ref> [3] </ref> and its predecessor Accent [20] use a scheme known as copy-on-write to avoid unnecessary data copying. A number of techniques rely on the virtual memory system to provide copy-free cross domain transfers.
References-found: 3

