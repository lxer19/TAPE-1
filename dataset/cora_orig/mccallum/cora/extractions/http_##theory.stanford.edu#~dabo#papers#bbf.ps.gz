URL: http://theory.stanford.edu/~dabo/papers/bbf.ps.gz
Refering-URL: http://theory.stanford.edu/~dabo/publications.html
Root-URL: 
Email: dabo@cs.stanford.edu rjl@cs.princeton.edu  
Title: Searching for Elements in Black Box Fields and Applications  
Author: Dan Boneh Richard Lipton 
Keyword: Mathematics Subject Classification: 11Y16, 11T71. Keywords: Black box fields, Diffie-Hellman, Elliptic-Curves, Straight line complexity, Homomorphic Encryption, Sparse Polynomials.  
Address: Satnford, CA., 94305-9045 Princeton, NJ, 08544  
Affiliation: Computer Science Dept. Computer Science Dept. Stanford University Princeton University  
Abstract: We introduce the notion of a black box field and discuss the problem of explicitly exposing field elements given in a black box form. We present several sub-exponential algorithms for this problem using a technique due to Maurer. These algorithms make use of elliptic curves over finite fields in a crucial way. We present three applications for our results: (1) We show that any algebraically homomorphic encryption scheme can be broken in expected sub-exponential time. The existence of such schemes has been open for a number of years. (2) We give an expected sub-exponential time reduction from the problem of finding roots of polynomials over finite fields with low straight line complexity (e.g. sparse polynomials) to the problem of testing whether such polynomials have a root in the field. (3) We show that the hardness of computing discrete-log over elliptic curves implies the security of the Diffie-Hellman protocol over elliptic curves. Finally in the last section of the paper we prove the hardness of exposing black box field elements in a field of characteristic zero. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Abadi and J. Feigenbaum. </author> <title> Secure circuit evaluation: a protocol based on hiding information from an oracle. </title> <journal> J. of Cryptology, </journal> <volume> 3(2) </volume> <pages> 1-12, </pages> <year> 1990. </year>
Reference-contexts: The first application shows that any algebraically homomorphic encryption scheme can be broken in sub-exponential time. Such cryp-tosystems are desirable since they enable non-interactive two-player secure function evaluation <ref> [1] </ref>. We define these concepts in Section 4.1. The existence of algebraically homomorphic encryption schemes was posed as an open problem in [16, pp. 6-7]. <p> The assumption we need is that integers chosen uniformly in the range [p + 1 2 p p p] satisfy Pr [d (x) &lt; L ff (p)] &gt; L 1ff (p) 1ff+o (1) for any fixed ff &gt; 0. When the integer x is chosen in the range <ref> [1; p] </ref> this assumption is known to be true (see [8, 12]). <p> RSA is not known to be algebraically homomorphic even though it supports one of the required operations. 8 Algebraically homomorphic encryption schemes have several applications which make them desirable. Most importantly, they enable two players two perform non-interactive secure function evaluation. See <ref> [1] </ref> for the appropriate definitions. The existence of such functions was posed as an open question in [16, pp. 6-7]. Unfortunately our sub-exponential algorithm for BBFP shows that any algebraically homomorphic encryption scheme can be broken in sub-exponential time. <p> For i = 0; : : : ; m let Z v i be the set of integer roots of f v i in the range <ref> [1; N ] </ref>. An input x will not reach the leaf v m if it is contained in some Z v i . Since only one integer in the range [1; N ] is allowed to reach the leaf v m we know that j S m i=1 Z v i <p> : ; m let Z v i be the set of integer roots of f v i in the range <ref> [1; N ] </ref>. An input x will not reach the leaf v m if it is contained in some Z v i . Since only one integer in the range [1; N ] is allowed to reach the leaf v m we know that j S m i=1 Z v i j = N 1. Hence, there must exist an i such that jZ v i j &gt; (N 1)=m.
Reference: [2] <author> L. Adleman, J. DeMarrais, and Ming-Deh Huang. </author> <title> A sub-exponential algorithm for discrete logarithm over the rational subgroup of the jacobian of large genus hyperelliptic curves over finite fields. </title> <booktitle> In First Algorithmic Number Theory Symposium, </booktitle> <year> 1994. </year>
Reference-contexts: These groups are another example where there is no known sub-exponential algorithm for discrete-log. 3. Let J be the Jacobian of a hyper-elliptic curve of genus g. When the genus g is fixed, there is no known sub-exponential algorithm for discrete log in J. Adleman, DeMarrais and Huang <ref> [2] </ref> show that when the genus is at least log p the index calculus method can be adapted to give an L 1 (p 2g+1 ) 1+o (1) algorithm for discrete log in J. 4.
Reference: [3] <author> L. Babai and E. Szemeredi. </author> <title> On the complexity of matrix group problems i. </title> <booktitle> In Proc. 25th IEEE Symp. on Foundations of Comp. Science, </booktitle> <pages> pages 229-240, </pages> <year> 1984. </year>
Reference-contexts: One can design algorithms for such an abstract algebraic structure by providing the algorithm with oracles for the various operators. We refer to such a representation of an algebraic structure as a black box representation. The most widely studied structure given in this fashion is the black box group <ref> [3] </ref>. In this paper we study fields given in a black box representation. We refer to such fields as black box fields, or BBF for short. The definition of black box fields will be given in Section 2. For now we give a high level description.
Reference: [4] <author> E. Bach. </author> <title> Explicit bounds for primality testing and related problems. </title> <journal> Math. Comp., </journal> <volume> 55 </volume> <pages> 355-380, </pages> <year> 1990. </year>
Reference-contexts: This means that there must exist an 1 a k + 2 such that a is a quadratic non-residue modulo p. This is known to hold under the generalized Riemann hypothesis when k &gt; 2 log 2 p (see <ref> [4] </ref>). That explains our particular choice of k in the conjecture. 4 Theorem 3.1 Let K be a finite field of size p given as a black box field.
Reference: [5] <author> E. Bach and J. Shallit. </author> <title> Algorithmic number theory. </title> <publisher> MIT press, </publisher> <year> 1996. </year>
Reference-contexts: Currently the best algorithms for finding roots of sparse polynomials in IF p take time polynomial in the degree of the polynomial <ref> [5] </ref>. Indeed, the best algorithms for finding roots of sparse polynomials of exponential degree (e.g. degree p 1=3 ) take exponential time in the size of their input.
Reference: [6] <author> M. Blum and S. Micali. </author> <title> How to generate cryptographically strong sequences of pseudo-random bits. </title> <journal> SIAM J. Computing, </journal> <volume> 13 </volume> <pages> 850-864, </pages> <year> 1984. </year>
Reference-contexts: To stress the importance of demonstrating the hardness of the Diffie-Hellman function we note that many other cryptographic protocols rely on it for their security. Some examples are the ElGamal public key cryptosystem [15], Shamir's three pass protocol [17, pp. 96-97], and the Bellare-Micali non-interactive oblivious transfer scheme <ref> [6] </ref>. See [32] for proofs of the equivalence of breaking these protocols and computing the Diffie-Hellman function. A long standing open problem in cryptography is the question of whether computing DH g (x; y) is as hard as computing discrete-log for the group G.
Reference: [7] <author> J. Buchmann and H. Williams. </author> <title> A key exchange system based on imaginary quadratic fields. </title> <journal> J. of Cryptology, </journal> <volume> 1(2) </volume> <pages> 107-118, </pages> <year> 1988. </year>
Reference-contexts: Examples include the multiplicative group of residues modulo a composite number [26, 25], elliptic curves over finite fields [18, 28], the Jacobian of a hyperelliptic curve over a finite field [19] and the class group of imaginary quadratic fields <ref> [7] </ref>. In all these groups the function DH g (x; y) is believed to be hard to compute. To stress the importance of demonstrating the hardness of the Diffie-Hellman function we note that many other cryptographic protocols rely on it for their security.
Reference: [8] <author> E. Canfield, P. Erdos, and C. Pomerance. </author> <title> On a problem of oppenheim concerning "factorisatio numerorum". </title> <journal> J. Number Theory, </journal> <volume> 17 </volume> <pages> 1-28, </pages> <year> 1983. </year>
Reference-contexts: When the integer x is chosen in the range [1; p] this assumption is known to be true (see <ref> [8, 12] </ref>).
Reference: [9] <author> H. Cohen. </author> <title> A course in computational algebraic number theory. </title> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference-contexts: This can easily be done by observing that [x 1 ] = [x p2 ]. Using repeated squaring this requires O (log p) applications of the multiplication function. Another example is that of computing [ p x] given [x] if it exists. An algorithm due to Shanks <ref> [9, pp. 32-33] </ref> can find square roots in finite fields using only operations which are supported in black box fields. Hence, the algorithm can be applied to [x] and it will output [ p x]. Notice that both examples require that the field characteristic p be known. <p> Discrete log in H g is not known to be solvable in sub-exponential time in jH g j. Notice that the best general discrete log algorithm in ZZ fl p takes time O (jH g j). The best known discrete log algorithm for such groups is Shank's baby-step-giant-step <ref> [9, pp.] </ref> which takes O ( q jH g j) time. We therefore say that H g is a group for which there is no known sub-exponential algorithm for discrete log.
Reference: [10] <author> I. Damg _ard. </author> <title> On the randomness of legendre and jacobi sequences. </title> <booktitle> In Proc. CRYPTO 88, </booktitle> <pages> pages 163-172, </pages> <year> 1988. </year>
Reference-contexts: Assuming the conjecture is true, sig (x) provides enough information to recover x. Unfortunately, there is no known polynomial time algorithm for finding x given sig (x). In fact, Damg _ard <ref> [10] </ref> suggested using this sequence as a pseudo-random sequence. The argument above shows that one can not hope to obtain an information theoretic lower bound on the number of oracle calls needed to solve BBFP.
Reference: [11] <author> H. Davenport. </author> <title> On the distribution of quadratic residues (mod p). </title> <journal> J. London Math. Soc., </journal> <pages> pages 46-52, </pages> <year> 1933. </year>
Reference-contexts: Then we conjecture 2 that for sufficiently large p, any two distinct elements x; y in IF p satisfy sig (x) 6= sig (y). Problems similar to Conjecture 2.1 were studied by Davenport <ref> [11] </ref>. The identity p x 2 (mod p) shows that given [x] one can compute sig (x) in a black box field using O (log 3 p) applications of the oracles. Assuming the conjecture is true, sig (x) provides enough information to recover x.
Reference: [12] <author> N. DeBruijn. </author> <title> On the number of positive integers x and free of prime factors &gt; y. </title> <journal> Indag. Math., </journal> <volume> 38 </volume> <pages> 239-247, </pages> <year> 1966. </year>
Reference-contexts: When the integer x is chosen in the range [1; p] this assumption is known to be true (see <ref> [8, 12] </ref>).
Reference: [13] <author> B. den Boer. </author> <title> Diffie-hellman is as strong as discrete log for certain primes. </title> <booktitle> In Proc. CRYPTO 88, </booktitle> <pages> pages 530-539, </pages> <year> 1988. </year>
Reference-contexts: The hard question is whether the converse holds: given an oracle for computing DH g (x; y) can one compute Dlog g (z) in polynomial time (in log jGj)? Surprisingly, there have been very few results on this problem <ref> [13, 23, 24, 37] </ref>. Maurer [23] obtained a beautiful result showing that given a polynomial number of advice bits that depend only on jGj one can compute Dlog g (x) in polynomial time given an oracle for DH g (x; y). Unfortunately, computing these advice bits takes exponential time.
Reference: [14] <author> W. Diffie and M. Hellman. </author> <title> New directions in cryptography. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> 22(6) </volume> <pages> 644-654, </pages> <year> 1976. </year>
Reference-contexts: An important motivation for studying the black box field problem is that algorithms for BBFP can be used to prove the security of the Diffie-Hellman secret key exchange protocol <ref> [14] </ref>. In Section 4.3 we show that efficient algorithms for BBFP imply that breaking the Diffie-Hellman protocol is equivalent to computing discrete log. Proving the equivalence of breaking the Diffie-Hellman protocol and computing discrete-log is one of the oldest problems in public key cryptography. <p> Then our reduction gives a sub-exponential time algorithm for finding roots of such polynomials. This will resolve the age old open problem of finding roots of sparse polynomials of very large degree in better than exponential time. 4.3 The Diffie-Hellman protocol The Diffie-Hellman secret key exchange protocol <ref> [14] </ref> is one of the oldest public key protocols. The protocol enables two parties to perform a secret key exchange. We briefly describe the protocol using an arbitrary finite cyclic groups G.
Reference: [15] <author> T. El-Gamal. </author> <title> A public key cryptosystem and a signature scheme based on the discrete logarithm. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> 31(4) </volume> <pages> 469-472, </pages> <year> 1985. </year> <month> 16 </month>
Reference-contexts: To stress the importance of demonstrating the hardness of the Diffie-Hellman function we note that many other cryptographic protocols rely on it for their security. Some examples are the ElGamal public key cryptosystem <ref> [15] </ref>, Shamir's three pass protocol [17, pp. 96-97], and the Bellare-Micali non-interactive oblivious transfer scheme [6]. See [32] for proofs of the equivalence of breaking these protocols and computing the Diffie-Hellman function.
Reference: [16] <author> J. Feigenbaum and N. Merrirr. </author> <title> Open questions and summary of discussions. </title> <booktitle> In Proceedings of DIMACS workshop on Distributed Computing and Cryptography, </booktitle> <volume> volume 2, </volume> <pages> pages 1-32, </pages> <year> 1989. </year>
Reference-contexts: Such cryp-tosystems are desirable since they enable non-interactive two-player secure function evaluation [1]. We define these concepts in Section 4.1. The existence of algebraically homomorphic encryption schemes was posed as an open problem in <ref> [16, pp. 6-7] </ref>. One may view this application as a general cryptanalytic tool: to show that a cryptosystem can be broken in sub-exponential time it suffices to show that it is algebraically homomorphic. <p> Most importantly, they enable two players two perform non-interactive secure function evaluation. See [1] for the appropriate definitions. The existence of such functions was posed as an open question in <ref> [16, pp. 6-7] </ref>. Unfortunately our sub-exponential algorithm for BBFP shows that any algebraically homomorphic encryption scheme can be broken in sub-exponential time. Theorem 4.1 Suppose that BBFP in a finite field of size p can be solved in time T BBF (p).
Reference: [17] <author> N. Koblitz. </author> <title> A course in number theory and cryptography. </title> <publisher> Springer-Verlag, </publisher> <year> 1987. </year>
Reference-contexts: To stress the importance of demonstrating the hardness of the Diffie-Hellman function we note that many other cryptographic protocols rely on it for their security. Some examples are the ElGamal public key cryptosystem [15], Shamir's three pass protocol <ref> [17, pp. 96-97] </ref>, and the Bellare-Micali non-interactive oblivious transfer scheme [6]. See [32] for proofs of the equivalence of breaking these protocols and computing the Diffie-Hellman function.
Reference: [18] <author> N. Koblitz. </author> <title> Elliptic curve cryptosystems. </title> <journal> Math. Comp., </journal> <volume> 48 </volume> <pages> 203-209, </pages> <year> 1987. </year>
Reference-contexts: The group generated by the points of an elliptic curve over a finite field is an example of a group for which there is no known sub-exponential algorithm for computing discrete log 1 (this is the main motivation for using elliptic curve cryptosystems <ref> [18, 28] </ref>). Hence, our results show that if computing discrete log in the group of points of an elliptic curve is hard then the Diffie-Hellman protocol in such groups is secure. The existence of such a reduction demonstrates yet another advantage of elliptic curve cryptosystems. <p> Many other types of groups have been suggested by various authors. Examples include the multiplicative group of residues modulo a composite number [26, 25], elliptic curves over finite fields <ref> [18, 28] </ref>, the Jacobian of a hyperelliptic curve over a finite field [19] and the class group of imaginary quadratic fields [7]. In all these groups the function DH g (x; y) is believed to be hard to compute.
Reference: [19] <author> N. Koblitz. </author> <title> A family of jacobians suitable for discrete log cryptosystems. </title> <booktitle> In Proc. CRYPTO 88, </booktitle> <pages> pages 94-99, </pages> <year> 1988. </year>
Reference-contexts: Many other types of groups have been suggested by various authors. Examples include the multiplicative group of residues modulo a composite number [26, 25], elliptic curves over finite fields [18, 28], the Jacobian of a hyperelliptic curve over a finite field <ref> [19] </ref> and the class group of imaginary quadratic fields [7]. In all these groups the function DH g (x; y) is believed to be hard to compute.
Reference: [20] <author> A. Lenstra and H.W. Lenstra, </author> <title> editors. The development of the number field sieve, </title> <booktitle> volume 1554 of Lecture Notes in Mathematics. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1994. </year>
Reference-contexts: Such running times are usually associated with the number field sieve <ref> [20] </ref>. Proof We improve the algorithm of Theorem 3.1 by using a two step algorithm. Let IF p be a black box field and let [x] 2 IF p . <p> This restriction can be easily lifted using methods of Pohlig and Hellman [31] which will be discussed in section 4.3 (Lemma 4.3). Since one can factor integers in expected exp ((1 + o (1)) 3 log n log 2 log n) time (see <ref> [20] </ref>) it is possible to factor the plain-text ring into a direct product of finite fields: ZZ n = Q s i=1 IF p i where the p i are distinct primes. Let K e ; K d be some encryption/decryption key pair. <p> Proof First, we may assume that the factorization of jGj is known. This factorization can be found using the number field sieve algorithm whose conjectured running time is L 1=3 (p) 1+o (1) <ref> [20] </ref>. Part (1) follows by combining Theorem 4.4 and Theorem 3.1. Part (2) follows by combining Theorem 4.4 and Theorem 3.4.
Reference: [21] <author> H. W. Lenstra. </author> <title> Factoring integers with elliptic curves. </title> <journal> Annals of Math., </journal> <volume> 126 </volume> <pages> 649-673, </pages> <year> 1987. </year>
Reference-contexts: When the integer x is chosen in the range [1; p] this assumption is known to be true (see [8, 12]). The assumption when ff = 1 2 is necessary for the running time analysis of the elliptic curve factoring method of Lenstra <ref> [21] </ref>. 3.1 A sub-exponential algorithm for BBFP This section is devoted to the proof of the following theorem: 2 Notice that the conjecture implies that sig (1) 6= sig (2). <p> It is well known that the number of points on a random elliptic curve over IF p is approximately uniformly distributed in the range [p + 1 2 p p p] (see <ref> [21] </ref>). <p> By the smoothness assumption this can be done in expected L 1=3 (p) 1=3+o (1) time. An important point is that the prime factors of n can be found using the elliptic curve factoring algorithm <ref> [21] </ref> in time L 1=3 (p) 1+o (1) . As in the proof of Theorem 3.1 we can find, in expected polynomial time, two points P 1 ; P 2 that generate E a;b .
Reference: [22] <author> R. Lipton. </author> <title> Straight line complexity and integer factorization. </title> <booktitle> In First Algorithmic Number Theory Symposium, </booktitle> <year> 1994. </year>
Reference-contexts: We prove the following negative result: Theorem 5.1 BBFP over Q can not be solved in polynomial time, unless factoring integers is easy. By "factoring integers is easy" we mean that a non-negligible fraction of the n-bit RSA composites can be factored in polynomial time. We refer to <ref> [22] </ref> for the precise definition. To prove Theorem 5.1 we use the notion of straight line complexity of a polynomial introduced in Section 4.2. The straight line complexity of f (x), denoted by L (f ), is the length of the shortest straight line program for computing f . <p> The straight line complexity of f (x), denoted by L (f ), is the length of the shortest straight line program for computing f . The following theorem can be easily derived from a result due to Lipton <ref> [22] </ref>. Theorem 5.2 Let ff k (x)g be a sequence of polynomials over Q [x] such that for any k, the polynomial f k (x) has at least 2 k =k e integer roots for some integer e &gt; 0.
Reference: [23] <author> U. Maurer. </author> <title> Towards the equivalence of breaking the diffie-hellman protocol and computing discrete logarithms. </title> <booktitle> In Proc. CRYPTO 94, </booktitle> <pages> pages 271-281, </pages> <year> 1994. </year>
Reference-contexts: We are interested in finding algorithms for BBFP whose running time is substantially less than p. In Section 3 we present two randomized algorithms for BBFP whose expected running time is sub-exponential in log p. Our algorithms are based on a technique due to Maurer <ref> [23] </ref>. The existence of sub-exponential algorithms for BBFP is surprising when contrasted with a result of Nechaev [30] and Shoup [34]. They considered the equivalent problem to BBFP over groups, i.e. where elements can be added, but not multiplied. <p> The existence of such a reduction demonstrates yet another advantage of elliptic curve cryptosystems. These results complement the elegant results of Maurer and Wolf <ref> [23, 24, 37] </ref> who study the equivalence of Diffie-Hellman and discrete log in the group ZZ fl p for various values of p. Finally in Section 5 we consider an equivalent of BBFP over fields of characteristic zero. <p> Under the smoothness as- sumption, BBFP can be solved in expected time L 1 (p) 2+o (1) = exp (2 + o (1)) log p log log p : and O (log p) space. The proof of Theorem 3.1 uses a technique due to Maurer <ref> [23] </ref>. Before proving Theorem 3.1 we state some simple facts regarding elliptic curves. We denote by E a;b (p) the set of points (x; y) 2 IF 2 p on the curve y 2 = x 3 + ax + b plus a point O called the point at infinity. <p> The hard question is whether the converse holds: given an oracle for computing DH g (x; y) can one compute Dlog g (z) in polynomial time (in log jGj)? Surprisingly, there have been very few results on this problem <ref> [13, 23, 24, 37] </ref>. Maurer [23] obtained a beautiful result showing that given a polynomial number of advice bits that depend only on jGj one can compute Dlog g (x) in polynomial time given an oracle for DH g (x; y). Unfortunately, computing these advice bits takes exponential time. <p> The hard question is whether the converse holds: given an oracle for computing DH g (x; y) can one compute Dlog g (z) in polynomial time (in log jGj)? Surprisingly, there have been very few results on this problem [13, 23, 24, 37]. Maurer <ref> [23] </ref> obtained a beautiful result showing that given a polynomial number of advice bits that depend only on jGj one can compute Dlog g (x) in polynomial time given an oracle for DH g (x; y). Unfortunately, computing these advice bits takes exponential time.
Reference: [24] <author> U. Maurer and S. Wolf. </author> <title> Diffie-hellman oracles. </title> <booktitle> In Proc. CRYPTO 96, </booktitle> <pages> pages 268-282, </pages> <year> 1996. </year>
Reference-contexts: The existence of such a reduction demonstrates yet another advantage of elliptic curve cryptosystems. These results complement the elegant results of Maurer and Wolf <ref> [23, 24, 37] </ref> who study the equivalence of Diffie-Hellman and discrete log in the group ZZ fl p for various values of p. Finally in Section 5 we consider an equivalent of BBFP over fields of characteristic zero. <p> The hard question is whether the converse holds: given an oracle for computing DH g (x; y) can one compute Dlog g (z) in polynomial time (in log jGj)? Surprisingly, there have been very few results on this problem <ref> [13, 23, 24, 37] </ref>. Maurer [23] obtained a beautiful result showing that given a polynomial number of advice bits that depend only on jGj one can compute Dlog g (x) in polynomial time given an oracle for DH g (x; y). Unfortunately, computing these advice bits takes exponential time. <p> Maurer [23] obtained a beautiful result showing that given a polynomial number of advice bits that depend only on jGj one can compute Dlog g (x) in polynomial time given an oracle for DH g (x; y). Unfortunately, computing these advice bits takes exponential time. Maurer and Wolf <ref> [24] </ref> showed that in the group ZZ fl p for certain primes p of 11 special form one can carry out the reduction without the need for advice bits. We show how algorithms for BBFP can be used to reduce Dlog g (z) to DH g (x; y).
Reference: [25] <author> U. Maurer and Y. Yacobi. </author> <title> Non-interactive public-key cryptography. </title> <booktitle> In Proc. EUROCRYPT 91, </booktitle> <pages> pages 498-507, </pages> <year> 1991. </year>
Reference-contexts: In their original paper, Diffie and Hellman claimed that for G = ZZ fl p computing the function DH g (x; y) is hard. Many other types of groups have been suggested by various authors. Examples include the multiplicative group of residues modulo a composite number <ref> [26, 25] </ref>, elliptic curves over finite fields [18, 28], the Jacobian of a hyperelliptic curve over a finite field [19] and the class group of imaginary quadratic fields [7]. In all these groups the function DH g (x; y) is believed to be hard to compute.
Reference: [26] <author> K. McCurley. </author> <title> A key distribution system equivalent to factoring. </title> <journal> J. of Cryptology, </journal> <volume> 1(2) </volume> <pages> 95-105, </pages> <year> 1988. </year>
Reference-contexts: In their original paper, Diffie and Hellman claimed that for G = ZZ fl p computing the function DH g (x; y) is hard. Many other types of groups have been suggested by various authors. Examples include the multiplicative group of residues modulo a composite number <ref> [26, 25] </ref>, elliptic curves over finite fields [18, 28], the Jacobian of a hyperelliptic curve over a finite field [19] and the class group of imaginary quadratic fields [7]. In all these groups the function DH g (x; y) is believed to be hard to compute.
Reference: [27] <editor> A. Menezes and S. Vanstone. </editor> <title> Reducing elliptic curve logarithms to logarithms in a finite field. </title> <booktitle> In Proc. 23rd ACM Symp. on Theory of Computing, </booktitle> <pages> pages 80-89, </pages> <year> 1991. </year>
Reference-contexts: Finally in Section 5 we consider an equivalent of BBFP over fields of characteristic zero. We show that solving BBFP over the rationals is as hard as factoring integers. This negative result suggests that 1 A sub-exponential algorithm is known for the rare event when the curve is supersingular <ref> [27] </ref>. 2 performing computations over black box fields of characteristic zero is much harder than over black box fields of positive characteristic. 2 Black-box fields A black box field is an abstract algebraic construct motivated by various applications.
Reference: [28] <author> V. Miller. </author> <title> Use of elliptic curves in cryptography. </title> <booktitle> In Proc. CRYPTO 85, </booktitle> <pages> pages 417-426, </pages> <year> 1985. </year>
Reference-contexts: The group generated by the points of an elliptic curve over a finite field is an example of a group for which there is no known sub-exponential algorithm for computing discrete log 1 (this is the main motivation for using elliptic curve cryptosystems <ref> [18, 28] </ref>). Hence, our results show that if computing discrete log in the group of points of an elliptic curve is hard then the Diffie-Hellman protocol in such groups is secure. The existence of such a reduction demonstrates yet another advantage of elliptic curve cryptosystems. <p> Many other types of groups have been suggested by various authors. Examples include the multiplicative group of residues modulo a composite number [26, 25], elliptic curves over finite fields <ref> [18, 28] </ref>, the Jacobian of a hyperelliptic curve over a finite field [19] and the class group of imaginary quadratic fields [7]. In all these groups the function DH g (x; y) is believed to be hard to compute.
Reference: [29] <author> National Institute for Standards and Technology. </author> <title> Specifications for the digital signature standard, </title> <month> August </month> <year> 1991. </year> <note> Publication XX, draft. </note>
Reference-contexts: The best known discrete log algorithm for such groups is Shank's baby-step-giant-step [9, pp.] which takes O ( q jH g j) time. We therefore say that H g is a group for which there is no known sub-exponential algorithm for discrete log. The digital signature standard <ref> [29] </ref> relies on the exponential time hardness of discrete log in H g for its security. 2. Let E a;b be the group of points on an elliptic curve modulo p. The best algorithm for discrete log in such groups is Shank's baby-step-giant-step algorithm. <p> These results demonstrate an advantage of elliptic-curve cryptosystems over conventional ones. In addition we noted that for small sub-groups of ZZ fl p , such as the ones used by DSS <ref> [29] </ref>, our results show that the hardness of discrete-log implies the security of the Diffie-Hellman protocol. We have also shown that assuming factoring integers is hard, BBFP can not be solved in polynomial time over the rationals.
Reference: [30] <author> V. Nechaev. </author> <title> Complexity of a determinate algorithm for the discrete logarithm. </title> <journal> Mathematical Notes, </journal> <volume> 55(2) </volume> <pages> 165-172, </pages> <year> 1994. </year>
Reference-contexts: In Section 3 we present two randomized algorithms for BBFP whose expected running time is sub-exponential in log p. Our algorithms are based on a technique due to Maurer [23]. The existence of sub-exponential algorithms for BBFP is surprising when contrasted with a result of Nechaev <ref> [30] </ref> and Shoup [34]. They considered the equivalent problem to BBFP over groups, i.e. where elements can be added, but not multiplied.
Reference: [31] <author> S. Pohlig and M. Hellman. </author> <title> An improved algorithm for computing discrete logarithms over gf (p) and its cryptographic significance. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> 24 </volume> <pages> 106-110, </pages> <year> 1978. </year>
Reference-contexts: Recall that E a;b ' ZZ n fi ZZ m where n = q 1 q fl r r ; mjn and all the primes q i are less than d. To find ff; fi we use a simple generalization of the Pohlig-Hellman algorithm <ref> [31] </ref> for discrete log in groups of smooth order. For simplicity we assume that all the fl i are equal to 1. The Pohlig-Hellman algorithm generalizes to the case where fl i &gt; 1 as well. <p> This restriction can be easily lifted using methods of Pohlig and Hellman <ref> [31] </ref> which will be discussed in section 4.3 (Lemma 4.3). <p> We show how algorithms for BBFP can be used to reduce Dlog g (z) to DH g (x; y). First we state an observation due to Pohlig and Hellman <ref> [31] </ref> which shows that the ability to compute discrete log in groups of prime order is sufficient for computing discrete log in arbitrary groups. Lemma 4.3 (Pohlig-Hellman) Let G be a finite cyclic group for which the factorization of jGj is known.
Reference: [32] <author> K. Sakurai and H Shizuya. </author> <title> Relationships among the computational powers of breaking discrete log cryptosystems. </title> <booktitle> In Proc. EUROCRYPT 95, </booktitle> <pages> pages 341-355, </pages> <month> May </month> <year> 1995. </year>
Reference-contexts: Some examples are the ElGamal public key cryptosystem [15], Shamir's three pass protocol [17, pp. 96-97], and the Bellare-Micali non-interactive oblivious transfer scheme [6]. See <ref> [32] </ref> for proofs of the equivalence of breaking these protocols and computing the Diffie-Hellman function. A long standing open problem in cryptography is the question of whether computing DH g (x; y) is as hard as computing discrete-log for the group G.
Reference: [33] <author> R. Schoof. </author> <title> Elliptic curves over finite fields and the computation of square roots mod p. </title> <journal> Math. Comp., </journal> <volume> 44(170) </volume> <pages> 483-494, </pages> <year> 1985. </year>
Reference-contexts: The number of points on the curve E a;b can be found in polynomial time using Schoof's algorithm <ref> [33] </ref>. We show that using this curve it is possible to solve the black box field problem over IF p in time O (d 2 log p). This will prove the theorem. <p> We have also shown that assuming factoring integers is hard, BBFP can not be solved in polynomial time over the rationals. The problem of solving BBFP over a finite field in polynomial time is still open. We briefly describe a promising approach. Schoof's algorithm <ref> [33] </ref> for counting the number of points on elliptic curves over IF p can be made to work over black box fields.
Reference: [34] <author> V. Shoup. </author> <title> Lower bounds for discrete logarithms and related problems. </title> <type> Manuscript, </type> <year> 1995. </year>
Reference-contexts: In Section 3 we present two randomized algorithms for BBFP whose expected running time is sub-exponential in log p. Our algorithms are based on a technique due to Maurer [23]. The existence of sub-exponential algorithms for BBFP is surprising when contrasted with a result of Nechaev [30] and Shoup <ref> [34] </ref>. They considered the equivalent problem to BBFP over groups, i.e. where elements can be added, but not multiplied. They show that for the group G = ZZ=pZZ the best algorithm for finding a hidden element must take time ( p Sub-exponential algorithms for BBFP have several applications.
Reference: [35] <author> J. Silverman. </author> <title> The arithmetic of elliptic curves. </title> <publisher> Springer-Verlag, </publisher> <year> 1986. </year>
Reference-contexts: We denote by E a;b (p) the set of points (x; y) 2 IF 2 p on the curve y 2 = x 3 + ax + b plus a point O called the point at infinity. It is well known <ref> [35] </ref> that there is a natural Abelian group structure defined on the points in E a;b (p). Thus, E a;b (p) forms an Abelian group. <p> Proof The values x 3 ; y 3 can be expressed as algebraic expressions of x 1 ; y 1 ; x 2 ; y 2 ; a; b. See <ref> [35, pp. 58-59] </ref> for a list of these expressions. <p> Furthermore, two random points P 1 ; P 2 generate the group E a;b with probability at least (1= log 2 p). Proof The structure of the group E a;b is known to be E a;b ' ZZ n fi ZZ m for some m; n where mjn (see <ref> [35] </ref>). Thus E a;b can be generated by two points. The number of pairs which generate ZZ n fi ZZ m is lower bounded by ('(nm) 2 ).
Reference: [36] <author> M. Steele and A. Yao. </author> <title> Lower bounds for algebraic decision trees. </title> <journal> J. of alg., </journal> <volume> 3 </volume> <pages> 1-8, </pages> <year> 1982. </year>
Reference-contexts: Proof of Theorem 5.1 In a black box field the only operations allowed are additions, multiplications and comparisons. Thus, a computation in a black box field can be viewed as an algebraic decision tree <ref> [36] </ref>. That is, given an input x 0 the computation proceeds as follows: at every internal node v in the tree some polynomial f v (x 0 ) is evaluated.
Reference: [37] <author> S. Wolf. </author> <title> Diffie-hellman and discrete logarithms. </title> <type> Master's thesis, </type> <institution> ETH Zurich, </institution> <year> 1995. </year> <month> 17 </month>
Reference-contexts: The existence of such a reduction demonstrates yet another advantage of elliptic curve cryptosystems. These results complement the elegant results of Maurer and Wolf <ref> [23, 24, 37] </ref> who study the equivalence of Diffie-Hellman and discrete log in the group ZZ fl p for various values of p. Finally in Section 5 we consider an equivalent of BBFP over fields of characteristic zero. <p> The hard question is whether the converse holds: given an oracle for computing DH g (x; y) can one compute Dlog g (z) in polynomial time (in log jGj)? Surprisingly, there have been very few results on this problem <ref> [13, 23, 24, 37] </ref>. Maurer [23] obtained a beautiful result showing that given a polynomial number of advice bits that depend only on jGj one can compute Dlog g (x) in polynomial time given an oracle for DH g (x; y). Unfortunately, computing these advice bits takes exponential time. <p> The authors greatly acknowledge Maurer's contributions to this area and thank him for several stimulating conversations. The authors also thank Stefan Wolf and note that he independently came up with a similar notion to our black box fields which he calls implicit representations <ref> [37] </ref>.
References-found: 37

