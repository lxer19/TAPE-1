URL: ftp://ftp.cs.purdue.edu/pub/hosking/papers/pos98.ps.gz
Refering-URL: http://www.cs.purdue.edu/homes/hosking/papers.html
Root-URL: http://www.cs.purdue.edu
Email: fhosking,nystrom,brahnmatg@cs.purdue.edu  quintin@dcs.gla.ac.uk  
Phone: 2  
Title: Optimizing the Read and Write Barriers for Orthogonal Persistence  
Author: Antony Hosking Nathaniel Nystrom Quintin Cutts Kumar Brahnmath 
Address: West Lafayette, IN 47907-1398, USA  Glasgow G12 8QQ, Scotland  
Affiliation: 1 Department of Computer Sciences Purdue University  Department of Computing Science University of Glasgow  
Abstract: Persistent programming languages manage volatile memory as a cache for stable storage, imposing a read barrier on operations that access the cache, and a write barrier on updates to the cache. The read barrier checks the cache residency of the target object while the write barrier marks the target as dirty in the cache to support a write-back policy that defers updates to stable storage until eviction or stabilization. These barriers may also subsume additional functionality, such as negotiation of locks on shared objects to support concurrency control. Compilers for persistent programming languages generate barrier code to protect all accesses to possibly persistent objects. Orthogonal persistence imposes this cost on every object access, since all objects are potentially persistent, at significant overhead to execution. We have designed a new suite of compiler optimizations, focusing on partial redundancy elimination of pointer-based access expressions, that significantly reduce this impact. These are implemented in an analysis and optimization framework for Java bytecodes, in support of orthogonal persistence for Java. In experiments with the traversal portions of the OO7 benchmark suite our optimizations reduce the number of read and write barriers executed by an average of 83% and 25%, respectively. 
Abstract-found: 1
Intro-found: 1
Reference: <author> AGESEN, O., DETLEFS, D., AND MOSS, J. E. B. </author> <year> 1998. </year> <title> Garbage collection and local variable type-precision and liveness in Java virtual machines. </title> <note> See PLDI [1998]. To appear. </note>
Reference: <author> ATKINSON, M. P., DAYN ES, L., JORDAN, M. J., PRINTEZIS, T., AND SPENCE, S. </author> <year> 1996. </year> <title> An orthogonally persistent Java. </title> <booktitle> ACM SIGMOD Record 25, </booktitle> <month> 4 (Dec.), 6875. </month>
Reference: <author> ATKINSON, M. P. AND JORDAN, M. J., Eds. </author> <year> 1997. </year> <title> Proceedings of the Second International Workshop on Persistence and Java (Half Moon Bay, California, Aug.). </title> <type> Sun Microsystems Laboratories Technical Report 97-63. </type>
Reference: <author> ATKINSON, M. P. AND MORRISON, R. </author> <year> 1995. </year> <title> Orthogonally persistent object systems. </title> <booktitle> International Journal on Very Large Data Bases 4, </booktitle> <volume> 3, </volume> <pages> 319401. </pages>
Reference: <author> BRIGGS, P., COOPER, K. D., HARVEY, T. J., AND SIMPSON, L. T. </author> <year> 1997. </year> <title> Practical improvements to the construction and destruction of static single assignment form. </title> <note> Available at http://www.cs.rice.edu/harv/ssa.ps. </note>
Reference: <author> BRIGGS, P., COOPER, K. D., AND SIMPSON, L. T. </author> <year> 1997. </year> <title> Value numbering. </title> <journal> Software: </journal> <note> Practice and Experience 27, 6 (June), 701724. </note>
Reference: <author> CAREY, M. J., DEWITT, D. J., AND NAUGHTON, J. F. </author> <year> 1993. </year> <title> The OO7 benchmark. </title> <booktitle> In Proceedings of the ACM International Conference on Management of Data (Washington, </booktitle> <address> DC, </address> <month> May). </month> <booktitle> ACM SIGMOD Record 22, </booktitle> <month> 2 (June), 1221. </month>
Reference: <author> CHOW, F., CHAN, S., KENNEDY, R., LIU, S.-M., LO, R., AND TU, P. </author> <year> 1997. </year> <title> A new algorithm for partial redundancy elimination based on SSA form. </title> <booktitle> In Proceedings of the ACM Conference on Programming Language Design and Implementation (Las Vegas, </booktitle> <address> Nevada, </address> <month> June). </month> <journal> ACM SIGPLAN Notices 32, </journal> <volume> 5 (May), </volume> <pages> 273286. </pages>
Reference: <author> CUTTS, Q. AND HOSKING, A. L. </author> <year> 1997. </year> <title> Analysing, profiling and optimising orthogonal persistence for Java. </title> <note> See Atkinson and Jordan [1997], 107115. </note>
Reference: <author> CUTTS, Q., LENNON, S., AND HOSKING, A. L. </author> <year> 1998. </year> <title> Reconciling buffer management with persistence optimizations. </title>
Reference: <author> CYTRON, R., FERRANTE, J., ROSEN, B. K., WEGMAN, M. N., AND ZADECK, F. K. </author> <year> 1991. </year> <title> Efficiently computing static single assignment form and the program dependence graph. </title> <journal> ACM Trans. Program. Lang. Syst. </journal> <volume> 13, </volume> <month> 4 (Oct.), </month> <note> 451490. 9 DAYN ES, </note> <author> L. AND ATKINSON, M. </author> <year> 1997. </year> <title> Main-memory management to support orthogonal persistence for Java. </title>
Reference: <institution> See Atkinson and Jordan [1997]. </institution>
Reference: <editor> DEARLE, A., SHAW, G. M., AND ZDONIK, S. B., Eds. </editor> <booktitle> 1990. Proceedings of the Fourth International Workshop on Persistent Object Systems (Martha's Vineyard, </booktitle> <address> Massachusetts, </address> <month> Sept.). </month> <title> Implementing Persistent Object Bases: </title> <booktitle> Principles and Practice. </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1991. </year>
Reference: <author> DIWAN, A., MCKINLEY, K. S., AND MOSS, J. E. B. </author> <year> 1998. </year> <note> Type-based alias analysis. See PLDI [1998]. To appear. </note>
Reference: <author> DIWAN, A., MOSS, J. E. B., AND HUDSON, R. L. </author> <year> 1992. </year> <title> Compiler support for garbage collection in a statically typed language. </title> <booktitle> In Proceedings of the ACM Conference on Programming Language Design and Implementation (San Francisco, </booktitle> <address> California, </address> <month> June). </month> <journal> ACM SIGPLAN Notices 27, </journal> <volume> 7 (July), </volume> <pages> 273282. </pages>
Reference: <author> GOSLING, J., JOY, B., AND STEELE, G. </author> <year> 1996. </year> <title> The Java Language Specification. </title> <publisher> Addison-Wesley. </publisher>
Reference: <author> HOSKING, A. L. </author> <year> 1995. </year> <title> Lightweight support for fine-grained persistence on stock hardware. </title> <type> Ph.D. thesis, </type> <institution> University of Massachusetts at Amherst. </institution> <note> Available as Computer Science Technical Report 95-02. </note>
Reference: <author> HOSKING, A. L. </author> <year> 1997. </year> <title> Residency check elimination for object-oriented persistent languages. </title> <booktitle> In Proceedings of the Seventh International Workshop on Persistent Object Systems (Cape May, </booktitle> <address> New Jersey, </address> <month> May </month> <year> 1996), </year> <editor> R. Connor and S. Nettles, Eds. </editor> <booktitle> Persistent Object Systems: Principles and Practice. </booktitle> <publisher> Morgan Kaufmann, </publisher> <pages> 174183. </pages>
Reference: <author> HOSKING, A. L. AND MOSS, J. E. B. </author> <year> 1990. </year> <title> Towards compile-time optimisations for persistence. </title> <editor> See Dearle et al. </editor> <year> [1990], </year> <month> 1727. </month>
Reference: <author> HOSKING, A. L. AND MOSS, J. E. B. </author> <year> 1991. </year> <title> Compiler support for persistent programming. </title> <type> Tech. Rep. 91-25, </type> <institution> Department of Computer Science, University of Massachusetts at Amherst. </institution> <month> Mar. </month>
Reference: <author> KEMPER, A. AND KOSSMAN, D. </author> <year> 1995. </year> <title> Adaptable pointer swizzling strategies in object bases: Design, realization, and quantitative analysis. </title> <booktitle> International Journal on Very Large Data Bases 4, </booktitle> <month> 3 (Aug.), </month> <year> 519566. </year>
Reference: <author> LAMB, C., LANDIS, G., ORENSTEIN, J., AND WEINREB, D. </author> <year> 1991. </year> <title> The ObjectStore database system. </title> <journal> Commun. ACM 34, </journal> <volume> 10 (Oct.), </volume> <pages> 5063. </pages>
Reference: <author> LARUS, J. R. AND HILFINGER, P. N. </author> <year> 1988. </year> <title> Detecting conflicts between structure accesses. </title> <booktitle> In Proceedings of the ACM Conference on Programming Language Design and Implementation (Atlanta, </booktitle> <address> Georgia, </address> <month> June). </month> <journal> ACM SIGPLAN Notices, </journal> <volume> 2134. </volume>
Reference: <author> LINDHOLM, T. AND YELLIN, F. </author> <year> 1996. </year> <title> The Java Virtual Machine Specification. </title> <publisher> Addison-Wesley. </publisher>
Reference: <author> MOREL, E. AND RENVOISE, C. </author> <year> 1979. </year> <title> Global optimization by suppression of partial redundancies. </title> <journal> Commun. ACM 22, </journal> <volume> 2 (Feb.), </volume> <pages> 96103. </pages>
Reference: <author> MOSS, J. E. B. AND HOSKING, A. L. </author> <year> 1995. </year> <title> Expressing object residency optimizations using pointer type annotations. </title> <booktitle> In Proceedings of the Sixth International Workshop on Persistent Object Systems (Tarascon, </booktitle> <address> France, </address> <month> Sept. </month> <year> 1994), </year> <editor> M. Atkinson, D. Maier, and V. Benzaken, Eds. </editor> <booktitle> Workshops in Computing. </booktitle> <publisher> Springer-Verlag, </publisher> <pages> 315. </pages>
Reference: <author> MOSS, J. E. B. AND HOSKING, A. L. </author> <year> 1996. </year> <title> Approaches to adding persistence to Java. </title> <booktitle> In Proceedings of the First International Workshop on Persistence and Java (Drymen, </booktitle> <address> Scotland, </address> <note> Sept.), </note> <author> M. P. Atkinson and M. </author> <note> J. </note>
Reference: <author> Jordan, Eds. </author> <type> Sun Microsystems Laboratories Technical Report 96-58, 16. </type>
Reference: <author> PALSBERG, J. AND SCHWARTZBACH, M. I. </author> <year> 1994. </year> <title> Object-Oriented Type Systems. Wiley. </title> <booktitle> PLDI 1998. Proceedings of the ACM Conference on Programming Language Design and Implementation (Montreal, </booktitle> <address> Canada, </address> <month> June). </month> <journal> ACM SIGPLAN Notices 33. </journal>
Reference: <author> RICHARDSON, J. E. </author> <year> 1990. </year> <title> Compiled item faulting: A new technique for managing I/O in a persistent language. </title> <editor> See Dearle et al. </editor> <year> [1990], </year> <month> 316. </month>
Reference: <author> SINGHAL, V., KAKKAD, S. V., AND WILSON, P. R. </author> <year> 1992. </year> <title> Texas, an efficient, portable persistent store. </title> <booktitle> In Proceedings of the Fifth International Workshop on Persistent Object Systems (San Miniato (Pisa), </booktitle> <address> Italy, </address> <month> Sept.), </month> <editor> A. Albano and R. Morrison, Eds. </editor> <booktitle> Workshops in Computing. </booktitle> <publisher> Springer-Verlag, </publisher> <pages> 1133. </pages>
Reference: <author> WHITE, S. J. AND DEWITT, D. J. </author> <year> 1994. </year> <title> QuickStore: A high performance mapped object store. </title> <booktitle> In Proceedings of the ACM International Conference on Management of Data (Minneapolis, </booktitle> <address> Minnesota, </address> <month> May). </month> <booktitle> ACM SIGMOD Record 23, </booktitle> <month> 2 (June), 395406. </month>
Reference: <author> WILSON, P. R. AND KAKKAD, S. V. </author> <year> 1992. </year> <title> Pointer swizzling at page fault time: Efficiently and compatibly supporting huge address spaces on standard hardware. </title> <booktitle> In Proceedings of the 1992 International Workshop on Object Orientation in Operating Systems (Paris, </booktitle> <address> France, Sept.). </address> <publisher> IEEE Computer Society, </publisher> <pages> 364377. </pages>
Reference: <author> WOLFE, M. </author> <year> 1996. </year> <title> High Performance Compilers for Parallel Computing. </title> <publisher> Addison-Wesley. </publisher> <pages> 10 </pages>
References-found: 34

