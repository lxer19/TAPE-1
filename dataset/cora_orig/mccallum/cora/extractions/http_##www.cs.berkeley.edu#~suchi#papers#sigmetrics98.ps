URL: http://www.cs.berkeley.edu/~suchi/papers/sigmetrics98.ps
Refering-URL: http://www-mash.cs.berkeley.edu/mash/pubs/index.html
Root-URL: 
Email: fsuchi,mccanneg@cs.berkeley.edu  shenker@parc.xerox.com  
Title: Asymptotic Behavior of Global Recovery in SRM  
Author: Suchitra Raman, Steven McCanne and Scott Shenker 
Address: Berkeley  
Affiliation: University of California,  Xerox Palo Alto Research Center  
Abstract: The development and deployment of a large-scale, wide-area multicast infrastructure in the Internet has enabled a new family of multi-party, collaborative applications. Several of these applications, such as multimedia slide shows, shared whiteboards, and large-scale multi-player games, require reliable multicast transport, yet the underlying multicast infrastructure provides only a best-effort delivery service. A difficult challenge in the design of efficient protocols that provide reliable service on top of the best-effort multicast service is to maintain acceptable performance as the protocol scales to very large session sizes distributed across the wide area. The Scalable, Reliable Multicast (SRM) protocol [6] is a receiver-driven scheme based on negative acknowledgments (NACKs) reliable multicast protocol that uses randomized timers to limit the amount of protocol overhead in the face of large multicast groups, but the behavior of SRM at extremely large scales is not well-understood. In this paper, we use analysis and simulation to investigate the scaling behavior of global loss recovery in SRM. We study the protocol's control-traffic overhead as a function of group size for various topologies and protocol parameters, on a set of simple, representative topologies | the cone (a variant of a clique), the linear chain, and the binary tree. We find that this overhead, as a function of group size, depends strongly on the topology: for the cone, it is always linear; for the chain, it is between constant and logarithmic; and for the tree, it is between constant and linear. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Ballardie, T., Francis, P., and Crowcroft, J. </author> <title> 9 improved scaling. Core Based Trees (CBT) An Architecture for Scalable Inter-Domain Multicast Routing. </title> <booktitle> In Proceedings of SIGCOMM '93 (San Francisco, </booktitle> <address> CA, </address> <month> Sept. </month> <year> 1993), </year> <booktitle> ACM, </booktitle> <pages> pp. 85-95. </pages>
Reference-contexts: ACM SIGMETRICS '98/PERFORMANCE '98 Joint International Conference on Measurement & Modeling of Computer Systems, Madison, WI, USA, June 1998. pending on the routing protocol, at a rendezvous point [4] or core router <ref> [1] </ref>). As with unicast, IP multicast is not reliable | packets might be dropped at any point along the distribution tree. However, many new multicast applications like shared whiteboards, webcast tools, and distributed simulation are not tolerant of packet losses. <p> 1 + C 2 r) where backoff is the amount of delay, D is an estimate of the one-way delay from the receiver to the source that generated the lost data packet, C 1 ; C 2 are non-negative protocol constants, and r is a uniformly distributed random number in <ref> [0; 1] </ref>. <p> a single NACK L Average NACK latency caused by backoff D i Estimate of one-way delay from node i to the source node backoff i , D i fi (C 1 + C 2 fi r i ) at host i where, r i are uniformly distributed random variables in <ref> [0; 1] </ref> t i Absolute time at which receiver i's timer fires Table 1: Summary of notation In the following sections, we present our analytical and 4 simulation results for the three topologies: cone, line and binary tree. 5 Scaling in the Cone Topology The cone topology can be used to <p> The average delay in transmitting the first NACK depends on the expected value of the minimum timer and is given by (C 1 + C 2 G+1 ). This result follows directly from noting that the expectation of the minimum of G uniformly distributed random variables in <ref> [0; 1] </ref> is 1 G+1 . The number of duplicates is equal to the expected number of timers that fire within [t min ; t min + ffi], where t min is the value of the smallest timer. <p> + d ji d i + r i ffi; 8j 6= i where d j is the one-way delay to receiver j from the source and d ij is the one-way delay from receiver i to receiver j. r i ; r j are uniformly distributed random numbers picked in <ref> [0; 1] </ref> by the random timer mechanism. We then must have: r i &lt; r j ; 8j &lt; i (1) d ij ffi; 8d ij (3) estimation, C 1 = 0, C 2 = 1.
Reference: [2] <author> Chesson, G. </author> <title> XTP/protocol engine design. </title> <booktitle> In Proceedings of the IFIP WG6.1/6.4 Workshop (Ruschlikon, </booktitle> <month> May </month> <year> 1989). </year>
Reference-contexts: RMTP [13] uses a similar approach based on trees that are (statically or dynamically) configured into the network rather than constructed by the application. XTP <ref> [2] </ref> takes a markedly different approach, however, and instead multicasts control traffic to all end-points.
Reference: [3] <author> Clark, D. D., and Tennenhouse, D. L. </author> <title> Architectural Considerations for a New Generation of Protocols. </title> <booktitle> In Proceedings of SIGCOMM '90 (Philadelphia, </booktitle> <address> PA, </address> <month> Sept. </month> <year> 1990), </year> <note> ACM. </note>
Reference-contexts: The SRM framework builds on Clark and Tennenhouses's principle of Application Level Framing (ALF) <ref> [3] </ref>, which provides an elegant solution to the problem of reliable-multicast API design because its flexibility offers applications the oppor-tuntity to actively participate in the loss-recovery procedure. To avoid ACK-implosion, SRM uses NACKs.
Reference: [4] <author> Deering, S., Estrin, D., Farinacci, D., and Ja-cobson, V. </author> <title> An Architecture for Wide-Area Multicast Routing. </title> <booktitle> In Proceedings of SIGCOMM '94 (University College London, </booktitle> <address> London, U.K., </address> <month> Sept. </month> <year> 1994), </year> <note> ACM. </note>
Reference-contexts: ACM SIGMETRICS '98/PERFORMANCE '98 Joint International Conference on Measurement & Modeling of Computer Systems, Madison, WI, USA, June 1998. pending on the routing protocol, at a rendezvous point <ref> [4] </ref> or core router [1]). As with unicast, IP multicast is not reliable | packets might be dropped at any point along the distribution tree. However, many new multicast applications like shared whiteboards, webcast tools, and distributed simulation are not tolerant of packet losses.
Reference: [5] <author> Deering, S. E. </author> <title> Multicast Routing in a Datagram In-ternetwork. </title> <type> PhD thesis, </type> <institution> Stanford University, </institution> <month> Dec. </month> <year> 1991. </year>
Reference-contexts: 1 Introduction The advent and deployment of IP Multicast <ref> [5] </ref> has enabled a number of new applications [17, 10, 9, 7, 22] that utilize large-scale multipoint communication over wide-area inter-networks. IP Multicast extends the traditional, best-effort unicast delivery model of the Internet architecture to enable efficient multipoint packet delivery.
Reference: [6] <author> Floyd, S., Jacobson, V., McCanne, S., Liu, C.-G., and Zhang, L. </author> <title> A Reliable Multicast Framework for Light-weight Sessions and Application Level Framing. </title> <booktitle> In Proceedings of SIGCOMM '95 (Boston, </booktitle> <address> MA, </address> <month> Sept. </month> <year> 1995), </year> <note> ACM. </note>
Reference-contexts: Although mechanisms for reliable unicast transmission are comparatively well-understood and have proven extremely successful (e.g., TCP), making multicast reliable at large scales remains a formidable challenge. A fundamental problem in the design of a reliable mul-ticast protocol is the well-known message implosion <ref> [6, 19] </ref> problem. Reliable transport protocols rely on some form of feedback between or among communicating end-points to confirm the successful delivery of data. <p> To limit the proliferation of this control traffic, XTP employs a "slotting and damping" algorithm: a receiver waits for a random amount of time before generating control traffic and cancels that message if some other hosts multicasts the same information first. The algorithms in SRM <ref> [6] </ref> elaborate this simple yet powerful primitive with adaptive timers that improve performance across wide-area, heterogeneous networks. 1 While TMTP, Lorax, and RMTP limit recovery traffic using unicast transmission over an artifically constructed hierarchy, XTP and SRM limit recovery traffic using multicast transmission and explicit suppression. <p> To address this problem, <ref> [6] </ref> proposes that their SRM reliable multicast framework be cast as two complementary pieces: a global recovery component that ensures the delivery of all desired data across the entire multicast session, and a local recovery component that constrains the reach of recovery traffic to the multicast neighborhoods where packet loss occurs. <p> Although <ref> [6] </ref> focuses primarily on global recovery, the SRM authors argue that local recovery is an important and necessary optimization to scale their protocol to large, heterogeneous sessions. Since then, several promising approaches to local recovery have been proposed [11, 14] and the problem remains a focal point of ongoing research. <p> We discuss the effects of varying the protocol parameters for the various topologies in Sections 5, 6, and 7, and conclude in section 8. 2 Overview of SRM SRM is a NACK-based, fully-decentralized reliable multi-cast protocol originally described by Floyd, et al., in <ref> [6] </ref>. The SRM framework builds on Clark and Tennenhouses's principle of Application Level Framing (ALF) [3], which provides an elegant solution to the problem of reliable-multicast API design because its flexibility offers applications the oppor-tuntity to actively participate in the loss-recovery procedure. To avoid ACK-implosion, SRM uses NACKs. <p> Figure 1 illustrates the suppression mechanism in SRM. As in <ref> [6] </ref>, we call C 1 D the deterministic delay and C 2 Dr the random delay. <p> The seminal work of Floyd et al. <ref> [6] </ref> simulated group sizes of up to a few hundred nodes ranging across a set of simple topologies. They showed that it was often possible to choose values of C 1 and C 2 that resulted in N (G) scaling as a constant independent of G. <p> They also proposed an adaptive algorithm to dynamically adjust C 1 and C 2 based on past information for better performance. Our work extends their important findings in two ways. First, we investigate performance for session sizes of up to two orders of magnitude larger than in <ref> [6] </ref>, thus improving our collective understanding of SRM's asymptotic behavior. Reassuringly, our results agree with [6] where the experiments overlap. More generally, we have assessed in detail the behavior of N (G) as a function of C 1 and C 2 . <p> Our work extends their important findings in two ways. First, we investigate performance for session sizes of up to two orders of magnitude larger than in <ref> [6] </ref>, thus improving our collective understanding of SRM's asymptotic behavior. Reassuringly, our results agree with [6] where the experiments overlap. More generally, we have assessed in detail the behavior of N (G) as a function of C 1 and C 2 . <p> This paper is primarily concerned with global recovery in SRM with constant C 1 and C 2 . Variants of SRM have been proposed that use local recovery, in which NACKs and repairs are not sent to the entire group. <ref> [6] </ref>, [14] look at two methods to limit the range of these methods: hop-scoping, and local recovery groups. [15] considers methods for adaptively setting the values for C 1 and C 2 . We do not consider any of the local recovery methods, nor adaptive timer setting. <p> Defining ff = ffi C 2 we have, E [N ] = 1 + Gff ff G ; ff &lt; 1 Thus, the number of duplicates is roughly linear in the group size. <ref> [6] </ref> reports a similar result for the star topology, which is a cone with = ffi. Observe that this linear dependence applies regardless of whether the delay estimates are accurate or not.
Reference: [7] <author> Frederick, R. </author> <title> Network Video (nv). </title> <institution> Xe-rox Palo Alto Research Center. </institution> <note> Software on-line ftp://ftp.parc.xerox.com/net-research. </note>
Reference-contexts: 1 Introduction The advent and deployment of IP Multicast [5] has enabled a number of new applications <ref> [17, 10, 9, 7, 22] </ref> that utilize large-scale multipoint communication over wide-area inter-networks. IP Multicast extends the traditional, best-effort unicast delivery model of the Internet architecture to enable efficient multipoint packet delivery.
Reference: [8] <author> Holbrook, H., Singhal, S., and Cheriton, D. </author> <title> Log-Based Receiver-Reliable Multicast for Distributed Interactive Simulation. </title> <booktitle> In Proceedings of SIGCOMM '95 (Boston, </booktitle> <address> MA, </address> <month> Sept. </month> <year> 1995), </year> <note> ACM. </note>
Reference-contexts: In this case, each delivered packet causes a flood of positive acknowledgments sent from the receivers back to the source, overwhelming either the source or the intervening routers, if not both. A number of solutions to the ACK implosion problem have been proposed. Log-based reliable multicast <ref> [8] </ref> uses logging servers to constrain recovery traffic to localized groups of receivers. TMTP [24] and Lorax [12] construct a hierarchy in the form of a tree, in which multiple identical ACKs are fused together before they are propagated up the tree toward the root.
Reference: [9] <author> Jacobson, V., and McCanne, S. </author> <note> LBL Whiteboard. </note> <institution> Lawrence Berkeley Laboratory. </institution> <note> Software on-line ftp://ftp.ee.lbl.gov/conferencing/wb. </note>
Reference-contexts: 1 Introduction The advent and deployment of IP Multicast [5] has enabled a number of new applications <ref> [17, 10, 9, 7, 22] </ref> that utilize large-scale multipoint communication over wide-area inter-networks. IP Multicast extends the traditional, best-effort unicast delivery model of the Internet architecture to enable efficient multipoint packet delivery.
Reference: [10] <author> Jacobson, V., and McCanne, S. </author> <title> Visual Audio Tool. </title> <institution> Lawrence Berkeley Laboratory. </institution> <note> Software on-line ftp://ftp.ee.lbl.gov/conferencing/vat. </note>
Reference-contexts: 1 Introduction The advent and deployment of IP Multicast [5] has enabled a number of new applications <ref> [17, 10, 9, 7, 22] </ref> that utilize large-scale multipoint communication over wide-area inter-networks. IP Multicast extends the traditional, best-effort unicast delivery model of the Internet architecture to enable efficient multipoint packet delivery.
Reference: [11] <author> Kasera, S. K., Kurose, J. F., and Towsley, D. F. </author> <title> Scalable Reliable Multicast Using Multiple Multicast Groups. </title> <booktitle> In Proceedings of ACM SIGMETRICS Conference on Measurement & Modeling of Computer Systems (June 1997). </booktitle>
Reference-contexts: Although [6] focuses primarily on global recovery, the SRM authors argue that local recovery is an important and necessary optimization to scale their protocol to large, heterogeneous sessions. Since then, several promising approaches to local recovery have been proposed <ref> [11, 14] </ref> and the problem remains a focal point of ongoing research.
Reference: [12] <author> Levine, B. N., Lavo, D. B., and Garcia-Luna-Aceves, J. </author> <title> The Case For Reliable Concurrent Mul-ticasting Using Shared Ack Trees. </title> <booktitle> In Proceedings of ACM Multimedia '96 (Boston, </booktitle> <address> MA, </address> <month> Nov. </month> <year> 1996), </year> <note> ACM. </note>
Reference-contexts: A number of solutions to the ACK implosion problem have been proposed. Log-based reliable multicast [8] uses logging servers to constrain recovery traffic to localized groups of receivers. TMTP [24] and Lorax <ref> [12] </ref> construct a hierarchy in the form of a tree, in which multiple identical ACKs are fused together before they are propagated up the tree toward the root.
Reference: [13] <author> Lin, J. C., and Paul, S. RMTP: </author> <title> A Reliable Multicast Transport Protocol. </title> <booktitle> In Proceedings IEEE Infocom '96 (San Francisco, </booktitle> <address> CA, </address> <month> Mar. </month> <year> 1996), </year> <pages> pp. 1414-1424. </pages>
Reference-contexts: Log-based reliable multicast [8] uses logging servers to constrain recovery traffic to localized groups of receivers. TMTP [24] and Lorax [12] construct a hierarchy in the form of a tree, in which multiple identical ACKs are fused together before they are propagated up the tree toward the root. RMTP <ref> [13] </ref> uses a similar approach based on trees that are (statically or dynamically) configured into the network rather than constructed by the application. XTP [2] takes a markedly different approach, however, and instead multicasts control traffic to all end-points.
Reference: [14] <author> Liu, C.-G., Estrin, D., Shenker, S., and Zhang, L. </author> <title> Local Recovery in SRM. </title> <note> Submitted to IEEE Transactions on Networking (1998). </note>
Reference-contexts: Although [6] focuses primarily on global recovery, the SRM authors argue that local recovery is an important and necessary optimization to scale their protocol to large, heterogeneous sessions. Since then, several promising approaches to local recovery have been proposed <ref> [11, 14] </ref> and the problem remains a focal point of ongoing research. <p> This paper is primarily concerned with global recovery in SRM with constant C 1 and C 2 . Variants of SRM have been proposed that use local recovery, in which NACKs and repairs are not sent to the entire group. [6], <ref> [14] </ref> look at two methods to limit the range of these methods: hop-scoping, and local recovery groups. [15] considers methods for adaptively setting the values for C 1 and C 2 . We do not consider any of the local recovery methods, nor adaptive timer setting.
Reference: [15] <author> Liu, C.-G., Estrin, D., Shenker, S., and Zhang, L. </author> <title> Recovery Timer Adaptation in SRM. </title> <note> Submitted to IEEE Transactions on Networking (1998). </note>
Reference-contexts: We also briefly consider the case where C 1 and C 2 are a function of the location in the topology; this aspect of our work was inspired by the results on adaptive timers in <ref> [15] </ref>. There, the timer constants were set in response to the number of duplicates observed and the latency of the responses, and this naturally led to the parameters being different for different members | e.g., members located at different depths in a tree would have different settings. <p> Not only do these results help us predict the performance of SRM, but they could influence the design of related sub-components of SRM, e.g., the choice of bounding values of C 1 and C 2 in the proposed adaptive algorithm. A more recent paper <ref> [15] </ref> studied scaling behavior for group sizes up to 200 members, with C 1 = 0 and C 2 set adaptively. <p> Variants of SRM have been proposed that use local recovery, in which NACKs and repairs are not sent to the entire group. [6], [14] look at two methods to limit the range of these methods: hop-scoping, and local recovery groups. <ref> [15] </ref> considers methods for adaptively setting the values for C 1 and C 2 . We do not consider any of the local recovery methods, nor adaptive timer setting. <p> In order to reduce this growth in N (G) to a constant, while still retaining C 1 = 0 for the sake of low latency, we can make C 2 a function of the delay from the source. This follows the work Liu et al. who propose, in <ref> [15] </ref>, using a new adaptive timer algorithm. Analysis similar to the previous case (equation (4)) shows that the number of duplicates is bounded by a constant when we use C 2 = D * for any * &gt; 0. <p> In order to reduce this growth in N (G) to a constant, while still retaining C 1 = 0, as we did for the linear chain topology, we make C 2 a function of the delay from the source. The adaptation algorithm described in <ref> [15] </ref> results in C 2 values that increase roughly linearly in D, the distance of a receiver from the source. Here we do not model the dynamics of the adaptation, but instead merely insert the dependence on D directly.
Reference: [16] <author> McCanne, S., and Floyd, S. </author> <title> The LBNL Network Simulator. </title> <institution> University of California, Berkeley. </institution> <note> http://www-mash.cs.berkeley.edu/ns/. </note>
Reference-contexts: This typically allows the receivers closer to the source to suppress the NACKs from receivers further away. One of the key points in our investigation is how the setting of the timer constants affects this behavior. We used the VINT network simulator ns <ref> [16] </ref> for our work. In its original form, ns turned out to have prolific memory usage with heavy-weight nodes, links, and multicast routing infrastructure, and could not support more than a few hundred nodes on an ordinary workstation.
Reference: [17] <author> McCanne, S., and Jacobson, V. </author> <title> vic: video conference. </title> <institution> Lawrence Berkeley Laboratory and University of California, Berkeley. </institution> <note> Software on-line ftp://ftp.ee.lbl.gov/conferencing/vic. </note>
Reference-contexts: 1 Introduction The advent and deployment of IP Multicast [5] has enabled a number of new applications <ref> [17, 10, 9, 7, 22] </ref> that utilize large-scale multipoint communication over wide-area inter-networks. IP Multicast extends the traditional, best-effort unicast delivery model of the Internet architecture to enable efficient multipoint packet delivery.
Reference: [18] <author> Nonnenmacher, J., and Biersack, E. W. </author> <title> Optimal Multicast Feedback. </title> <booktitle> IEEE Infocom (1998). </booktitle>
Reference-contexts: A more recent paper [15] studied scaling behavior for group sizes up to 200 members, with C 1 = 0 and C 2 set adaptively. In addition, Nonnenmacher and Biersack <ref> [18] </ref> looked at the effect of timer distribution on scaling behavior and showed 4 Even in the case of a single TCP connection, where RTT estimates are gathered on every ACK, the sender's RTT-estimator is known to often be inaccurate [21]. 3 that exponentially distributed timers yield better scaling properties. <p> Thus, we do not consider varying the timer constants with group size, as in <ref> [18] </ref>, as this does not seem like a realistic possibility. Furthermore, we assume that losses are detected immediately when the next packet arrives. Since a packet is delivered to different receivers at different absolute times, losses are detected at different times. <p> Our simulations, shown in Figure 4, confirm this result. where ff = ffi C 2 and C 1 0, C 2 &gt; 0. N (G) grows roughly linearly for any fixed timer distribution. However, as shown by Nonnenmacher and Biersack <ref> [18] </ref>, if one makes the distribution dependent on the size of the loss group then one can change this linear scaling. <p> One can remove the linear term entirely by considering the scheme where each receiver picks a num ber k from an exponential distribution with average a G and sets the backoff to kffi. This is essentially a discrete version of the exponential distribution considered by Nonnenmacher and Biersack <ref> [18] </ref>. Here, the average number of NACKs is E (N ) = a and the average latency is E (L) = e a ffi 1e a .
Reference: [19] <author> Pingali, D., Towsley, D., and Kurose, J. F. </author> <title> A comparison of sender-initiated and receiver-initiated reliable multicast protocols. </title> <booktitle> In Proceedings of SIGMET-RICS '94 (Santa Clara, </booktitle> <address> CA, </address> <month> May </month> <year> 1994). </year>
Reference-contexts: Although mechanisms for reliable unicast transmission are comparatively well-understood and have proven extremely successful (e.g., TCP), making multicast reliable at large scales remains a formidable challenge. A fundamental problem in the design of a reliable mul-ticast protocol is the well-known message implosion <ref> [6, 19] </ref> problem. Reliable transport protocols rely on some form of feedback between or among communicating end-points to confirm the successful delivery of data.
Reference: [20] <author> Raman, S., and McCanne, S. </author> <title> Generalized Data Naming and Scalable State Announcements for Reliable Multicast. </title> <type> Tech. rep., </type> <institution> University of California, </institution> <address> Berke-ley, CA, </address> <month> June </month> <year> 1997. </year>
Reference-contexts: To avoid ACK-implosion, SRM uses NACKs. Receivers detect losses from discontinuities in sequence numbers (or by other means with a generic data naming scheme <ref> [20] </ref>) and transmit NACKs as a request for retransmission of the lost data 1 .
Reference: [21] <author> Stevens, W. R. </author> <title> TCP/IP Illustrated, Volume 1 The Protocols, first ed. </title> <publisher> Addison-Wesley, </publisher> <month> Dec. </month> <year> 1994. </year>
Reference-contexts: In addition, Nonnenmacher and Biersack [18] looked at the effect of timer distribution on scaling behavior and showed 4 Even in the case of a single TCP connection, where RTT estimates are gathered on every ACK, the sender's RTT-estimator is known to often be inaccurate <ref> [21] </ref>. 3 that exponentially distributed timers yield better scaling properties. They found that having this distribution depend on the group size could result in improved scaling. We do not address the effects of different timer distributions at any great length in this paper.
Reference: [22] <author> Turletti, T. </author> <title> INRIA Video Conferencing System (ivs). </title> <institution> Institut National de Recherche en In-formatique et an Automatique. </institution> <note> Software on-line http://www.inria.fr/rodeo/ivs.html. </note>
Reference-contexts: 1 Introduction The advent and deployment of IP Multicast [5] has enabled a number of new applications <ref> [17, 10, 9, 7, 22] </ref> that utilize large-scale multipoint communication over wide-area inter-networks. IP Multicast extends the traditional, best-effort unicast delivery model of the Internet architecture to enable efficient multipoint packet delivery.
Reference: [23] <author> Yajnik, M., Kurose, J., and Towsley, D. </author> <title> Packet Loss Correlation in the MBone Multicast Network. </title> <booktitle> IEEE Global Internet Conference (1996). </booktitle>
Reference-contexts: In its original form, ns turned out to have prolific memory usage with heavy-weight nodes, links, and multicast routing infrastructure, and could not support more than a few hundred nodes on an ordinary workstation. However, 5 Measurements reported in <ref> [23] </ref> show that most correlated losses occur close to the source. the location of packet loss. we took advantage of ns's extensible object-oriented architecture and made several modifications and extensions to it.
Reference: [24] <author> Yavatkar, R., Griffioen, J., and Sudan, M. </author> <title> A Reliable Dissemination Protocol for Interactive Collaborative Applications. </title> <booktitle> In Proceedings of ACM Multimedia '95 (San Francisco, </booktitle> <address> CA, </address> <month> Nov. </month> <year> 1995), </year> <journal> ACM. </journal> <volume> 10 </volume>
Reference-contexts: A number of solutions to the ACK implosion problem have been proposed. Log-based reliable multicast [8] uses logging servers to constrain recovery traffic to localized groups of receivers. TMTP <ref> [24] </ref> and Lorax [12] construct a hierarchy in the form of a tree, in which multiple identical ACKs are fused together before they are propagated up the tree toward the root.
References-found: 24

