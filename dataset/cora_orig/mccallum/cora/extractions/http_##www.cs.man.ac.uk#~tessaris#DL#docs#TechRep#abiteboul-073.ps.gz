URL: http://www.cs.man.ac.uk/~tessaris/DL/docs/TechRep/abiteboul-073.ps.gz
Refering-URL: http://www.cs.man.ac.uk/~tessaris/DL/papers.html
Root-URL: http://www.cs.man.ac.uk
Email: (Serge.Abiteboul@inria.fr)  (Cassio.Souza@inria.fr)  
Phone: tel: 1/39 63 56 79 fax: 1/39 63 53 30  
Title: IQL(2): A Model with Ubiquitous Objects  
Author: Serge Abiteboul Cassio Souza dos Santos 
Date: February 1995  
Address: B.P. 105, 78153 Le Chesnay Cedex, France  
Affiliation: I.N.R.I.A.,  
Abstract: Object-oriented databases have brought major improvements in data modeling by introducing notions such as inheritance or methods. Extensions in many directions are now considered with introductions of many concepts such as versions, views or roles. These features bring the risk of creating monster data models with a number of incompatible appendixes. We do not propose here any new extension or any novel concept. We show more modestly that many of these features can be formally and (we believe) cleanly combined in a coherent manner. 
Abstract-found: 1
Intro-found: 1
Reference: [ABGO93] <author> A. Albano, R. Bergamini, G. Ghelli, and R. Orsini. </author> <title> An object data model with roles. </title> <booktitle> In Proc. of Intl. Conf. on Very Large Data Bases, </booktitle> <pages> pages 39-51, </pages> <year> 1993. </year>
Reference-contexts: the past: (i) a model with objects, classes, inheritance, methods ala IQL or O 2 [BDK92]; (ii) a view mechanism ala O 2 Views [SAD94]; (iii) a versioning mechanism with linear versions and also alternatives (see, e.g., [KC88]); (iv) a mechanism for objects with several roles [BD77, RS91] ala Fibonacci <ref> [ABGO93] </ref>; (v) the means of specifying distribution of data in several sites; (vi) a mechanism for data and schema updates (see, e.g., [Zic92]); (vii) specification of access rights (see, e.g., [RBKW91]). fl Partially supported by Esprit Project GoodStep. y On leave from Departamento de Informatica, Universidade Federal de Pernambuco, Brazil. <p> Inheritance is complicated by the fact that the same object lives in several classes, a problem treated in <ref> [ABGO93] </ref> and that we reconsider in our setting. First, we introduce radical restrictions that lead to standard resolution and probably suffice for many applications. Then, we analyze the general case which requires a more complex resolution. Finally, we consider a general restriction that is somewhat in between these two extremes.
Reference: [AGS94] <author> E. Amiel, O. Gruber, and E. Simon. </author> <title> Optimizing multi-method dispatch using compressed dispatch tables. </title> <booktitle> In Int. Conf. on OOPSLA, </booktitle> <address> Portland, </address> <month> October </month> <year> 1994. </year> <note> ACM. </note>
Reference-contexts: This leads to resolution with a parameter, the class C (n) (i.e., Problem (1) disappears). For non-strict schemas, we can adopt multi-attribute resolution (to solve Problem (2) and techniques such as multi-attribute dispatch tables can be used <ref> [AGS94] </ref> (to solve Problem (1)). 6 Views In the previous section, we already considered the specification of view mappings, but we restricted our attention to a special class of view mappings related to inheritance only.
Reference: [AK89] <author> S. Abiteboul and P. C. Kanellakis. </author> <title> Object identity as a query language primitive. </title> <booktitle> In Proc. ACM SIGMOD Symp. on the Management of Data, </booktitle> <pages> pages 159-173, </pages> <year> 1989. </year> <note> to appear in J. ACM. </note>
Reference-contexts: 1 Introduction We propose an extension of IQL <ref> [AK89] </ref>, therefore the name 1 IQL (2), to encompass many new extensions to the core OODB models that have been considered separately in the past.
Reference: [AK91] <author> S. Abiteboul and P. Kanellakis. </author> <title> The two facets of object-oriented data models. </title> <journal> IEEE Data Engineering Bulletin, </journal> <note> 15:2:3-8, 1991. special issue edited by R. Agrawal. </note>
Reference-contexts: We assume that the inheritance hierarchy is a dag. 7 A major issue in the presence of inheritance is method resolution. To simplify the model, we did not consider methods. Although we will not do it here formally, methods can be introduced very simply in the model as in <ref> [AK91] </ref>. In the following discussion on inheritance, we consider that methods are attached to classes in the style of, say [BDK92] or [AKRW92].
Reference: [AKRW92] <author> S. Abiteboul, P. Kanellakis, S. Ramaswamy, and E. Waller. </author> <title> Method schemas. </title> <type> Technical Report CS-92-33, </type> <institution> Brown University, </institution> <year> 1992. </year> <note> (An earlier version appeared in Proceedings 9th ACM PODS, </note> <year> 1990). </year>
Reference-contexts: Although we will not do it here formally, methods can be introduced very simply in the model as in [AK91]. In the following discussion on inheritance, we consider that methods are attached to classes in the style of, say [BDK92] or <ref> [AKRW92] </ref>. The semantics of an inheritance statement C (n) isa C 0 (m) is that each object in a class C (n) (e.g., o 2 (C (n))) is also implicitly in class C 0 (m). <p> Under these restrictions, resolution is standard (as in [BDK92] or in <ref> [AKRW92] </ref>). Part of the limitations brought by this approach will be removed when we introduce views. Let us now consider the general case.
Reference: [BD77] <author> C.W. Bachman and M. Daya. </author> <title> The role concept in data models. </title> <booktitle> In Proc. of Intl. Conf. on Very Large Data Bases, </booktitle> <pages> pages 464-476. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1977. </year>
Reference-contexts: been considered separately in the past: (i) a model with objects, classes, inheritance, methods ala IQL or O 2 [BDK92]; (ii) a view mechanism ala O 2 Views [SAD94]; (iii) a versioning mechanism with linear versions and also alternatives (see, e.g., [KC88]); (iv) a mechanism for objects with several roles <ref> [BD77, RS91] </ref> ala Fibonacci [ABGO93]; (v) the means of specifying distribution of data in several sites; (vi) a mechanism for data and schema updates (see, e.g., [Zic92]); (vii) specification of access rights (see, e.g., [RBKW91]). fl Partially supported by Esprit Project GoodStep. y On leave from Departamento de Informatica, Universidade Federal
Reference: [BDK92] <editor> F. Bancilhon, C. Delobel, and P. Kanellakis, editors. </editor> <title> Building an Object-Oriented Database System: </title> <publisher> The Story of O 2 . Morgan Kaufmann, </publisher> <address> San Mateo, California, </address> <year> 1992. </year>
Reference-contexts: As illustrated by examples, the model captures in a coherent framework many features that have been considered separately in the past: (i) a model with objects, classes, inheritance, methods ala IQL or O 2 <ref> [BDK92] </ref>; (ii) a view mechanism ala O 2 Views [SAD94]; (iii) a versioning mechanism with linear versions and also alternatives (see, e.g., [KC88]); (iv) a mechanism for objects with several roles [BD77, RS91] ala Fibonacci [ABGO93]; (v) the means of specifying distribution of data in several sites; (vi) a mechanism for <p> To simplify the model, we did not consider methods. Although we will not do it here formally, methods can be introduced very simply in the model as in [AK91]. In the following discussion on inheritance, we consider that methods are attached to classes in the style of, say <ref> [BDK92] </ref> or [AKRW92]. The semantics of an inheritance statement C (n) isa C 0 (m) is that each object in a class C (n) (e.g., o 2 (C (n))) is also implicitly in class C 0 (m). <p> Under these restrictions, resolution is standard (as in <ref> [BDK92] </ref> or in [AKRW92]). Part of the limitations brought by this approach will be removed when we introduce views. Let us now consider the general case.
Reference: [KC88] <author> W. Kim and H.T. Chou. </author> <title> Versions of schema for object-oriented databases. </title> <booktitle> In Proc. of Intl. Conf. on Very Large Data Bases. </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1988. </year>
Reference-contexts: captures in a coherent framework many features that have been considered separately in the past: (i) a model with objects, classes, inheritance, methods ala IQL or O 2 [BDK92]; (ii) a view mechanism ala O 2 Views [SAD94]; (iii) a versioning mechanism with linear versions and also alternatives (see, e.g., <ref> [KC88] </ref>); (iv) a mechanism for objects with several roles [BD77, RS91] ala Fibonacci [ABGO93]; (v) the means of specifying distribution of data in several sites; (vi) a mechanism for data and schema updates (see, e.g., [Zic92]); (vii) specification of access rights (see, e.g., [RBKW91]). fl Partially supported by Esprit Project GoodStep.
Reference: [RBKW91] <author> F. Rabitti, E. Bertino, W. Kim, and D. Woelk. </author> <title> A model of authorization for next-generation database systems. </title> <journal> ACM Trans. on Database Systems, </journal> <volume> 16:1:88-131, </volume> <year> 1991. </year>
Reference-contexts: linear versions and also alternatives (see, e.g., [KC88]); (iv) a mechanism for objects with several roles [BD77, RS91] ala Fibonacci [ABGO93]; (v) the means of specifying distribution of data in several sites; (vi) a mechanism for data and schema updates (see, e.g., [Zic92]); (vii) specification of access rights (see, e.g., <ref> [RBKW91] </ref>). fl Partially supported by Esprit Project GoodStep. y On leave from Departamento de Informatica, Universidade Federal de Pernambuco, Brazil. Partially supported by CNPq grant number 200.803-92.1. 1 No, Guido, this does not imply that there will be an IQL (3). 1 The paper is organized as follows.
Reference: [RS91] <author> J. Richardson and P. Schwartz. </author> <title> Aspects: Extending objects to support multiple independent roles. </title> <booktitle> In Intl. Conf. on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> pages 298-307, </pages> <year> 1991. </year>
Reference-contexts: been considered separately in the past: (i) a model with objects, classes, inheritance, methods ala IQL or O 2 [BDK92]; (ii) a view mechanism ala O 2 Views [SAD94]; (iii) a versioning mechanism with linear versions and also alternatives (see, e.g., [KC88]); (iv) a mechanism for objects with several roles <ref> [BD77, RS91] </ref> ala Fibonacci [ABGO93]; (v) the means of specifying distribution of data in several sites; (vi) a mechanism for data and schema updates (see, e.g., [Zic92]); (vii) specification of access rights (see, e.g., [RBKW91]). fl Partially supported by Esprit Project GoodStep. y On leave from Departamento de Informatica, Universidade Federal
Reference: [SAD94] <author> C. Souza, S. Abiteboul, and C. Delobel. </author> <title> Virtual schemas and bases. </title> <booktitle> In Proc. </booktitle> <address> EDBT, Cambridge, </address> <year> 1994. </year>
Reference-contexts: As illustrated by examples, the model captures in a coherent framework many features that have been considered separately in the past: (i) a model with objects, classes, inheritance, methods ala IQL or O 2 [BDK92]; (ii) a view mechanism ala O 2 Views <ref> [SAD94] </ref>; (iii) a versioning mechanism with linear versions and also alternatives (see, e.g., [KC88]); (iv) a mechanism for objects with several roles [BD77, RS91] ala Fibonacci [ABGO93]; (v) the means of specifying distribution of data in several sites; (vi) a mechanism for data and schema updates (see, e.g., [Zic92]); (vii) specification <p> Remark 6.1 In the presentation so far, we have implicitly assumed that the extensions of base classes are given and used to compute the extensions of derived classes. It is argued in <ref> [SAD94] </ref> that in many applications, it is not desirable to maintain the extensions of classes. Furthermore, some systems (such as O 2 ) do not provide extensions for base classes, and it would be unnatural to maintain that of derived classes in such context. <p> Our discussion on methods has been quite brief but we believe we covered the main issue, method resolution. Our treatment of views has also been rather short and many features of <ref> [SAD94] </ref> such as imaginary objects were not considered here. However, they would only have made more complicated the model at the cost of clarity and do not present any new difficulties. 11
Reference: [Su91] <author> J. Su. </author> <title> Dynamic constraints and object migration. </title> <booktitle> In Proc. of Intl. Conf. on Very Large Data Bases, </booktitle> <pages> pages 233-242. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1991. </year>
Reference: [Zic92] <author> R. Zicari. </author> <title> A framework for schema updates in object-oriented database systems. </title> <editor> In F. Bancilhon, C. Delobel, and P. Kanellakis, editors, </editor> <title> Building an Object-Oriented Database System: </title> <publisher> The Story of O 2 . Morgan Kaufmann, </publisher> <address> San Mateo, California, </address> <year> 1992. </year> <month> 12 </month>
Reference-contexts: 2 Views [SAD94]; (iii) a versioning mechanism with linear versions and also alternatives (see, e.g., [KC88]); (iv) a mechanism for objects with several roles [BD77, RS91] ala Fibonacci [ABGO93]; (v) the means of specifying distribution of data in several sites; (vi) a mechanism for data and schema updates (see, e.g., <ref> [Zic92] </ref>); (vii) specification of access rights (see, e.g., [RBKW91]). fl Partially supported by Esprit Project GoodStep. y On leave from Departamento de Informatica, Universidade Federal de Pernambuco, Brazil.
References-found: 13

