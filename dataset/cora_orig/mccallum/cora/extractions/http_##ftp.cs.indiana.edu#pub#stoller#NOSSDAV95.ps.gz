URL: http://ftp.cs.indiana.edu/pub/stoller/NOSSDAV95.ps.gz
Refering-URL: http://www.cs.indiana.edu/hyplan/stoller.html
Root-URL: http://www.cs.indiana.edu
Email: stoller@cs.cornell.edu  jdd@pa.dec.com  
Phone: 2  
Title: Storage Replication and Layout in Video-on-Demand Servers  
Author: Scott D. Stoller ? and John D. DeTreville 
Address: Ithaca, NY 14853-7501, USA.  130 Lytton Avenue, Palo Alto CA 94301-1044, USA.  
Affiliation: 1 Dept. of Computer Science, Cornell University,  Digital Equipment Corporation, Systems Research Center  
Abstract: We propose and analyze an architecture for storage servers in large Video on Demand (VoD) systems. We describe a method for distributing the collection of titles among the levels of the storage hierarchy, based on estimates of the mean demand for each title. The resulting distribution minimizes cost for a given level of performance. Since high availability is desirable in VoD systems, we consider the use of mirroring or parity-based redundancy (a la RAID) and estimate the effect on the system's cost and availability. In the very-large-scale storage systems needed for VoD, the placement of disk arrays on the pool of computers must be chosen carefully to provide high availability for the least cost. We propose a strategy for arranging disk arrays on a pool of PCs; our strategy is inspired by Holland and Gibson's work on parity declustering for RAID. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> P. M. Chen, E. K. Lee, G. A. Gibson, R. H. Katz, and D. A. Patterson. </author> <title> Raid: High-performance, reliable secondary storage. </title> <journal> ACM Computing Surveys, </journal> <volume> 26(2) </volume> <pages> 145-185, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: In this section, we discuss briefly the resources needed for titles in RAM for no redundancy, parity, and mirroring. Availability is analyzed in Section 6. The use of parity for fault-tolerance is well-known from RAID <ref> [1] </ref>. The resource requirements depend on where missing data is reconstructed. Reconstruction in the STU instead of the servers has some benefits (e.g., reducing the net cost of the servers and STUs) and some drawbacks (e.g., increasing the performance requirements for the STUs).
Reference: 2. <author> Y. N. Doganata and A. N. Tantawi. </author> <title> Making a cost-effective video server. </title> <journal> IEEE Multimedia, </journal> <volume> 1(4) </volume> <pages> 22-30, </pages> <month> Winter </month> <year> 1994. </year>
Reference-contexts: Our method is specific to VoD only in that it requires estimates of the mean demand for each file. This problem has also been studied by Tetzlaff et al. [8] and by Doganata and Tantawi <ref> [2] </ref>. In a very-large-scale storage system, the placement of entire disk arrays is an important issue. If parity-based redundancy is used, we propose arranging disk arrays on a pool of PCs using techniques similar to those used to arrange data stripes on a pool of disks [5].
Reference: 3. <author> Jim Gray. </author> <title> Why do computers stop and what can be done about it? In Proc. </title> <booktitle> Fifth Symposium on Reliability in Distributed Software and Database Systems, </booktitle> <pages> pages 3-12, </pages> <year> 1986. </year>
Reference-contexts: Table 4 contains the failure rates used in our calculations. They are based primarily on data from surveys of Tandem customers <ref> [3, 4] </ref> and on product information (e.g., [7]). The failure rates reported in the Tandem surveys are per Table 4. <p> Therefore, we scale their software failure rate by N PC =3 and (somewhat arbitrarily) their operations and maintenance failure rates by N PC =100. Following Gray's comments <ref> [3] </ref>, we compensate for underreporting of failures by increasing the reported rates for operations, environment, and software failures by 100%, 100%, and 5%, respectively. The factors of 10 in r (fD; Dg) and r (fPC; PCg) account for correlated failures.
Reference: 4. <author> J. Gray and A. Reuter. </author> <title> Transaction processing: concepts and techniques. </title> <publisher> Morgan Kaufmann, </publisher> <year> 1993. </year>
Reference-contexts: It is easy to see the effect of choosing other values for these parameters, since ir is directly proportional to each. Our availability calculations are based on a classification of failures by cause. Following Gray and Reuter <ref> [4] </ref>, we take the set Causes of possible causes of failures to be: hardware (subdivided into RAM, disk, and PC), operations, maintenance, environment, and software. In equations, we abbreviate the last four causes by their first letter. Let r (c) denote the rate of failures with cause c. <p> Table 4 contains the failure rates used in our calculations. They are based primarily on data from surveys of Tandem customers <ref> [3, 4] </ref> and on product information (e.g., [7]). The failure rates reported in the Tandem surveys are per Table 4.
Reference: 5. <author> M. Holland and G. Gibson. </author> <title> Parity declustering for continuous operation in redundant disk arrays. </title> <booktitle> In Proc. Fifth International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS-V), </booktitle> <pages> pp. 23-35. </pages> <publisher> ACM Press, </publisher> <year> 1992. </year>
Reference-contexts: These organizations are closely analogous to those proposed by Holland and Gibson for arranging data stripes among a pool of PCs <ref> [5] </ref>. <p> In a very-large-scale storage system, the placement of entire disk arrays is an important issue. If parity-based redundancy is used, we propose arranging disk arrays on a pool of PCs using techniques similar to those used to arrange data stripes on a pool of disks <ref> [5] </ref>. This idea is not specific to VoD.
Reference: 6. <author> T. D. C. Little and D. Venkatesh. </author> <title> Probabilistic assignment of movies to storage devices in a video-on-demand system. </title> <booktitle> In Proc. Fourth International Conference on Network and Operating System Support for Digital Audio and video (NOSSDAV '93), </booktitle> <pages> pp. 213-224, </pages> <year> 1993. </year>
Reference-contexts: This idea is not specific to VoD. Choosing the placement of disk arrays is complementary to allocating titles to disk arrays <ref> [6] </ref>. 6 Since our redundancy schemes provide partial tolerance to software failures, this claim is not obvious, but it is easily checked by estimating a few of these terms. Our availability analysis reflects the increased tolerance to failures of all kinds that redundancy provides.
Reference: 7. <institution> Micron Semiconductor, Inc. DRAM Data Book, </institution> <year> 1993. </year>
Reference-contexts: Table 4 contains the failure rates used in our calculations. They are based primarily on data from surveys of Tandem customers [3, 4] and on product information (e.g., <ref> [7] </ref>). The failure rates reported in the Tandem surveys are per Table 4.
Reference: 8. <author> W. Tetzlaff, M. Kienzle, and D. Sitaram. </author> <title> A methodology for evaluating storage systems in distributed and hierarchical video servers. </title> <booktitle> In COMPCON 94, </booktitle> <pages> pp. 430-439. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> Spring </month> <year> 1994. </year>
Reference-contexts: We have described a method for distributing the collection of titles among the levels of the storage hierarchy. Our method is specific to VoD only in that it requires estimates of the mean demand for each file. This problem has also been studied by Tetzlaff et al. <ref> [8] </ref> and by Doganata and Tantawi [2]. In a very-large-scale storage system, the placement of entire disk arrays is an important issue.
Reference: 9. <author> C. P. Thacker. </author> <title> AN2 Switch Overview. </title> <institution> Digital Equipment Corporation, Systems Research Center, </institution> <month> August </month> <year> 1994. </year> <title> In preparation. This article was processed using the L a T E X macro package with LLNCS style </title>
Reference-contexts: We adopt only simplifications that are roughly "orthogonal" to the design issues under consideration, so our analysis should reflect the relative costs for different designs. We assume that the network can multicast data; for example, an ATM network based on the AN2 switch <ref> [9] </ref> can multicast. This is useful for the most popular titles: multiple viewers can receive the same stream, so the servers need never to supply more than (say) one stream per second per title.
References-found: 9

