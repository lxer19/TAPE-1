URL: http://www.cs.berkeley.edu/~alanm/Papers/mapper.ps
Refering-URL: http://www.cs.berkeley.edu/~alanm/
Root-URL: 
Abstract: To appear in the proceedings of the 9th Annual Symposium on Parallel Algorithms and Architectures (SPAA97) Abstract: This paper presents a network mapping algorithm and proves its correctness assuming a traffic-free network. Respecting well-defined parameters, the algorithm produces a graph isomorphic to N - F, where N is the network of switches and hosts and F is the set of switches connected by a switch-bridge to the set of hosts H. We show its performance on a Myrinet system-area network with a fat-tree-like topology. It can map 36 nodes, 13 switches and 64 links in 248 ms and 100 nodes, 40 switches, and 193 links in 981 ms. From such maps, the system computes mutually deadlock-free routes and distributes them to all network interfaces. Switched, multi-gigabyte per second, system area networks are the enabling building-blocks for networks of workstations. Because of their core role, these networks should be dynamically reconfigurable, automatically adapting to the addition or removal of hosts, switches and links. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Horst. TNet: </author> <title> A Reliable System Area Network. </title> <booktitle> IEEE Micro, </booktitle> <month> February </month> <year> 1995, </year> <note> vol.15, (no.1):37-45. </note>
Reference-contexts: 1 Introduction System area networks <ref> [1] </ref> move switched, low-latency, high-speed networks away from the backplanes and cabinets of massively parallel processors into the traditional territory of local area networks. These networks commonly use source-based message routing through anonymous switches.
Reference: [2] <author> F. Thomas Leighton. </author> <title> Introduction to Parallel Algorithms and Architectures: Arrays, Trees. Hypercubes, </title> <publisher> Morgan Kauf-mann Publishers, Inc. </publisher> <address> San Francisco, CA (1992). </address>
Reference-contexts: These networks commonly use source-based message routing through anonymous switches. In this regime, their topologies may no longer be the static, well-defined, and well-understood <ref> [2] </ref> graphs such as hypercubes, meshes, etc., and instead may be arbitrary graphs that change over time. Therefore, systems must periodically discover their topologies rather than assuming one a priori.
Reference: [3] <author> N. Boden, D. Cohen, R. Felderman, A. Kulawik, C. Seitz, J. Seizovic, and Wen-King Su. Myrinet: </author> <title> A Gigabit-per-Second Local Area Network. </title> <booktitle> IEEE Micro, </booktitle> <month> February </month> <year> 1995, </year> <note> vol.15, (no.1):29-36. </note>
Reference-contexts: As a step towards this goal, we designed a mapping algorithm and proved its correctness assuming a quiescent network. We implemented the algorithm in a network of 100 UltraSPARC workstations with a Myrinet <ref> [3] </ref> network. The system periodically discovers the network topology and uses it to compute and to distribute a set of mutually-deadlock free routes to all network interfaces.
Reference: [4] <author> T. Anderson, D. Culler, and D. Patterson. </author> <title> A Case for NOW (Networks of Workstations). </title> <booktitle> IEEE Micro, </booktitle> <month> February </month> <year> 1995, </year> <note> vol.15, (no.1):54-64. </note>
Reference-contexts: probes in sections 2 and 3, empirical performance results and characterizations in a network of interest to us in sections 4 and 5, and a discussion of open issues and future topics in this area in sections 6 and 7. 1.1 Myrinet system area networks The Berkeley Network of Workstations <ref> [4] </ref> (NOW) uses Myrinet network switches and network interface cards. The network consists of 8-port cross-bar switches that use source-based, oblivious cut-through routing. Messages have a header flit, routing flits, a data payload, an 8-bit CRC, and a tail flit.
Reference: [5] <author> S. Owicki and A. Karlin. </author> <title> Factors in the Performance of the AN1 Computer Network. </title> <institution> Digital Equipment Corporation Systems Research Center, </institution> <address> Palo Alto, CA, </address> <year> 1992. </year>
Reference-contexts: We use UP*/DOWN* <ref> [5] </ref> routing to impose an edge ordering such that all valid routes are paths that follow zero or more edges in the up direction, followed by zero or more edges in the down direction. A valid route never turns from a down edge onto an up edge. <p> We use the Floyd-Warshall [6] all-pairs shortest-paths algorithm to compute compliant paths between all hosts. Where multiple edges are available between two switches, the algorithm has the option of randomly choosing among them for load balance. The goodness of UP*/DOWN* routes is known to be highly topology-dependant <ref> [5] </ref>. Two common effects are increased congestion about the root and the creation of locally dominant switches in hy-percubic networks. The BFS numbering of these switches is such that all edges lead away from them. <p> There are classic papers on automatic network management with the Digitial Autonet/AN1 network [10], [11], <ref> [5] </ref>. According to Rodeheffer and Schroeder, Our goal was to make Autonet look to host communications software like a fast, high-capacity Ethernet segment that never failed permanently. Additionally, they note the principle differences between the ARPANET [13] and AN1 are wide-area and moderate-speed versus local-area and high-speed. <p> AN1 switch latencies of 2 milliseconds are order of magnitude larger than delays through network switches, such as Myrinet. While mapping, the network did not route application traffic. Ow-icki and Karlin <ref> [5] </ref> also presents simulation results on the performance of UP*/DOWN* routing and show its sensitivity to topology and other artifacts. ARPANET could tolerate transient forwarding loops but Autonet could not and thus could not be tolerated. Consequently, Autonet cannot carry host traffic while reconfiguration is in progress.
Reference: [6] <author> T. Cormen, C. Leiserson, and R. Rivest. </author> <title> Introduction to Algorithms. </title> <publisher> The MIT Press, </publisher> <address> Cambridge, MA (1990). </address>
Reference-contexts: The next lemma shows that v in F are not too useful for routing. Lemma 1: F = the set of all nodes that are separated by a switch-bridge from H. Proof. This is a consequence of the Max-Flow, Min-Cut theorem, theorems 27.7 and 27.11 in <ref> [6] </ref>. Let v be a source of flow 2, and attach a sink to all hosts (we assumed there are at least two). <p> Up edges point towards the chosen root (i.e., the bfs label of the head node is greater than the bfs label of the tail node) and down edges point away from the chosen root. We use the Floyd-Warshall <ref> [6] </ref> all-pairs shortest-paths algorithm to compute compliant paths between all hosts. Where multiple edges are available between two switches, the algorithm has the option of randomly choosing among them for load balance. The goodness of UP*/DOWN* routes is known to be highly topology-dependant [5].
Reference: [7] <author> C. Glass and L. Ni. </author> <title> The Turn Model for Adaptive Routing. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> Vol. 41, No. 5, </volume> <month> September </month> <year> 1994. </year>
Reference-contexts: Of course, a strategically placed cable or two can re-root the UP*/DOWN* tree. UP*/DOWN* is an instance of the turn-model of Glass and Ni <ref> [7] </ref>. The fundamental idea is to prevent deadlock by analyzing and forbidding sequences of turns. Specifically, UP*/DOWN* routes messages along edges in one dimension, allows a single turn, and then routes messages along edges in the second dimension. Turns from the second to the first are not allowed.
Reference: [8] <author> W. Dally and C. Seitz. </author> <title> Deadlock-Free Message Routing in Multiprocessor Interconnection Networks. </title> <journal> IEEE Transactions on Computers, </journal> <volume> Vol. C-36, No. 5, </volume> <month> May </month> <year> 1987. </year>
Reference-contexts: Specifically, UP*/DOWN* routes messages along edges in one dimension, allows a single turn, and then routes messages along edges in the second dimension. Turns from the second to the first are not allowed. Dally and Seitz <ref> [8] </ref> present the virtual channel model in which switches contain buffering to allow multiple virtual channels to be multiplex onto physical links while maintaining independence amongst the channels.
Reference: [10] <author> T. Rodeheffer and M. Schroeder. </author> <title> Automatic Reconfiguration in Autonet. </title> <institution> Digital Equipment Corporation Systems Research Center, </institution> <address> Palo Alto, CA, </address> <year> 1991. </year>
Reference-contexts: There are classic papers on automatic network management with the Digitial Autonet/AN1 network <ref> [10] </ref>, [11], [5]. According to Rodeheffer and Schroeder, Our goal was to make Autonet look to host communications software like a fast, high-capacity Ethernet segment that never failed permanently. Additionally, they note the principle differences between the ARPANET [13] and AN1 are wide-area and moderate-speed versus local-area and high-speed.
Reference: [11] <author> M. Schroeder, A. Birrell, M. Burrows, H. Murray, R. Needham, T. Rodeheffer, E. Satterhwaite, and C. Thacker. Auto-net: </author> <title> A High-speed Self-configuring, Local Area Network Using Point-to-point Links. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> Vol. 9, No. 9, </volume> <month> October </month> <year> 1991. </year>
Reference-contexts: There are classic papers on automatic network management with the Digitial Autonet/AN1 network [10], <ref> [11] </ref>, [5]. According to Rodeheffer and Schroeder, Our goal was to make Autonet look to host communications software like a fast, high-capacity Ethernet segment that never failed permanently. Additionally, they note the principle differences between the ARPANET [13] and AN1 are wide-area and moderate-speed versus local-area and high-speed.
Reference: [14] <author> J. McQuillian and D. Walden. </author> <title> The ARPANET design decisions. </title> <journal> Computer Networks, </journal> <volume> 1, </volume> <month> August </month> <year> 1977, </year> <pages> pp. 243-299. </pages> <note> [15] pers. comm. U. Vazirani </note>
Reference: [16] <author> K. Keeton, T. Anderson, and D. Patterson. </author> <title> LogP Quantified: The Case for Low-Overhead Local Area Networks. </title> <booktitle> In Proc. of Hot Interconnects III, </booktitle> <month> August </month> <year> 1995. </year>
Reference-contexts: ARPANET could tolerate transient forwarding loops but Autonet could not and thus could not be tolerated. Consequently, Autonet cannot carry host traffic while reconfiguration is in progress. This could cause deadlock, should inconsistent forwarding tables arise. Thus, direct application access to network was not supported, though many studies <ref> [16, 17, 18, 19] </ref> now show that such direct bindings of physical communication resources to virtual ones is necessary for obtaining high-performance as networks move into the gigabyte per second range. Processors in each switch periodically execute a distributed topology acquisition algorithm.
Reference: [17] <author> P. Druschel, L. Peterson, and B. Davie. </author> <title> Experiences with a High-Speed Network Adaptor: A Software Perspective. </title> <booktitle> In Proceedings of the SIGCOMM 94 Symposium, </booktitle> <month> August </month> <year> 1994. </year>
Reference-contexts: ARPANET could tolerate transient forwarding loops but Autonet could not and thus could not be tolerated. Consequently, Autonet cannot carry host traffic while reconfiguration is in progress. This could cause deadlock, should inconsistent forwarding tables arise. Thus, direct application access to network was not supported, though many studies <ref> [16, 17, 18, 19] </ref> now show that such direct bindings of physical communication resources to virtual ones is necessary for obtaining high-performance as networks move into the gigabyte per second range. Processors in each switch periodically execute a distributed topology acquisition algorithm.
Reference: [18] <author> T. von Eicken, D. Culler, S. Goldstein, and K.Schauser. </author> <title> Active Messages: a Mechanism for Integrated Communication and Computation. </title> <booktitle> In Proc. of the 19th ISCA, </booktitle> <month> May </month> <year> 1992., </year> <title> Gold Coast, Qld., </title> <booktitle> Australia, </booktitle> <pages> pp. 256-266. </pages>
Reference-contexts: ARPANET could tolerate transient forwarding loops but Autonet could not and thus could not be tolerated. Consequently, Autonet cannot carry host traffic while reconfiguration is in progress. This could cause deadlock, should inconsistent forwarding tables arise. Thus, direct application access to network was not supported, though many studies <ref> [16, 17, 18, 19] </ref> now show that such direct bindings of physical communication resources to virtual ones is necessary for obtaining high-performance as networks move into the gigabyte per second range. Processors in each switch periodically execute a distributed topology acquisition algorithm.
Reference: [19] <author> A. Basu, V. Buch, W. Vogels, and T. von Eicken. U-Net: </author> <title> A User-Level Network Interface for Parallel and Distributed Computing. </title> <booktitle> In Proc. of the 15th SOSP, </booktitle> <month> December </month> <year> 1995. </year>
Reference-contexts: ARPANET could tolerate transient forwarding loops but Autonet could not and thus could not be tolerated. Consequently, Autonet cannot carry host traffic while reconfiguration is in progress. This could cause deadlock, should inconsistent forwarding tables arise. Thus, direct application access to network was not supported, though many studies <ref> [16, 17, 18, 19] </ref> now show that such direct bindings of physical communication resources to virtual ones is necessary for obtaining high-performance as networks move into the gigabyte per second range. Processors in each switch periodically execute a distributed topology acquisition algorithm.
Reference: [20] <author> R. Felderman, A. DeSchon, D. Cohen, and G. Finn. </author> <title> ATOMIC: A High-Speed Local Communication Architecture. </title> <journal> Journal of HighSpeed Networks, </journal> <volume> 1, </volume> <year> (1994), </year> <pages> pp. 1-28. </pages>
Reference-contexts: ATOMIC <ref> [20] </ref> network had a mosaic processor at each intersection in the network. 64-node Mosaic mesh of processors and routers comprised a single 8-port crossbar switch. The paper provides examples of mapping irregular networks with non-symmetric links.
References-found: 16

