URL: ftp://ftp.cs.kun.nl/pub/CSI/SoftwEng.FunctLang/papers/eekm91-parallel.ps.gz
Refering-URL: http://www.cs.kun.nl/~clean/Clean.Papers.html
Root-URL: 
Title: aaaaaaa Parallel Graph Rewriting on Loosely Coupled Machine Architectures  
Author: M.C.J.D. van Eekelen, M.J. Plasmeijer, J.E.W. Smetsers 
Affiliation: University of Nijmegen  
Abstract: Graph rewriting models are very suited to serve as the basic computational model for functional languages and their implementation. Graphs are used to share computations which is needed to make efficient implementations of functional languages on sequential hardware possible. When graphs are rewritten (reduced) on parallel loosely coupled machine architectures, subgraphs have to be copied from one processor to another such that sharing is lost. In this paper we introduce the notion of lazy copying. With lazy copying it is possible to duplicate a graph without duplicating work. Lazy copying can be combined with simple annotations which control the order of reduction. In principle, only interleaved execution of the individual reduction steps is possible. However, a condition is deduced under which parallel execution is allowed. When only certain combinations of lazy copying and annotations are used it is guarantied that this so-called non-interference condition is fulfilled. Abbreviations for these combinations are introduced. Now complex process behaviours, such as process communication on a loosely coupled parallel machine architecture, can be modelled. This also includes a special case: modelling multiprocessing on a single processor. Arbitrary process topologies can be created. Synchronous and asynchronous process communication can be mod-elled. The implementation of the language Concurrent Clean, which is based on the proposed graph rewriting model, has shown that complicated parallel algorithms which can go far beyond divide-and-conquer like applications can be expressed.
Abstract-found: 1
Intro-found: 1
Reference: <author> Arvind, Nikhil and S. </author> <title> Rishiyur (1987). Executing a program on the mit tagged token dataflow architecture, </title> <booktitle> Proc. of Parallel Architectures and Languages Europe (PARLE), </booktitle> <address> Eindhoven, The Netherlands, </address> <publisher> Springer Verlag, LNCS 258 I, </publisher> <pages> pp. 1-29. </pages>
Reference: <author> Barendregt, </author> <title> H.P. (1984). The Lambda Calculus: its syntax and semantics , Studies in Logic 103, </title> <publisher> North-Holland, Amsterdam. </publisher>
Reference: <author> Barendregt, H.P., M.C.J.D. van Eekelen, J.R.W. Glauert, J.R. Kennaway, M.J. </author> <title> Plas-meijer and M.R. Sleep (1987a). Term graph reduction, </title> <booktitle> Proc. of Parallel Architectures and Languages Europe (PARLE), </booktitle> <address> Eindhoven, The Netherlands, </address> <publisher> Springer Verlag, LNCS 259 II, </publisher> <pages> pp. 141-158. </pages>
Reference: <author> Barendregt, H.P., M.C.J.D. van Eekelen, J.R.W. Glauert, J.R. Kennaway, M.J. </author> <title> Plas-meijer and M.R. Sleep (1987b). Towards an intermediate language based on graph rewriting, </title> <booktitle> Proc. of Parallel Architectures and Languages Europe (PARLE), </booktitle> <address> Eind-hoven, The Netherlands, </address> <publisher> Springer Verlag, LNCS 259 II, </publisher> <pages> pp. 159-175. </pages>
Reference: <author> Barendsen, Erik and Sjaak Smetsers (1992). </author> <title> Graph rewriting and copying, </title> <institution> Technical Report 92-20 , University of Nijmegen. </institution>
Reference: <author> Brus, T., M.C.J.D. van Eekelen, M. van Leer, M.J. </author> <title> Plasmeijer and H.P. Barendregt (1987). Clean a language for functional graph rewriting, </title> <booktitle> Proc. of Conference on Functional Programming Languages and Computer Architecture (FPCA '87), </booktitle> <address> Portland, Oregon, USA, </address> <publisher> Springer Verlag, LNCS 274, </publisher> <pages> pp. 364-384. </pages>
Reference: <author> Burton, F.W. </author> <year> (1987). </year> <title> Functional programming for concurrent and distributed computing, </title> <journal> The Computer Journal </journal> . 
Reference: <author> Church, </author> <title> A (1932). A set of postulates for the foundation of logic, </title> <journal> Annals of Math. </journal> <volume> (2), 33, </volume> <pages> pp. 346-366. </pages>
Reference: <author> Church, </author> <title> A (1933). A set of postulates for the foundation of logic, </title> <journal> Annals of Math. </journal> <volume> (2), 34, </volume> <pages> pp. 839-864. </pages>
Reference: <author> Eekelen, M.C.J.D. </author> <title> van (1988). Parallel Graph Rewriting, Some Contributions to its Theory, its Implementation and its Application, </title> <type> Dissertation, </type> <institution> University of Ni-jmegen. </institution>
Reference: <author> Fasel, J.H. and R.M. </author> <title> Keller (1986). Proceedings of the workshop on graph reduction. 23 Glauert, J.R.W., J.R. Kennaway and M.R. Sleep (1987). Dactl: A computational model and compiler target language based on graph reduction, </title> <note> ICL Technical Journal </note> . 
Reference: <author> Goguen, J., C. Kirchner and J. </author> <title> Meseguer (1986). Concurrent tern rewriting as a model of computation, </title> <booktitle> Proc. of Workshop on Graph Reduction, </booktitle> <address> Santa Fe, New Mexico, </address> <publisher> Springer Verlag, LNCS 279, </publisher> <pages> pp. 53-94. </pages>
Reference: <author> Gurd, J.R., C.C. Kirkham and I. </author> <title> Watson (1985). The manchester prototype dataflow computer, </title> <journal> Communications of the ACM </journal> . 
Reference: <author> Hudak, P. and L. </author> <title> Smith (1986). Para-functional programming: A paradigm for programming multiprocessor systems, </title> <booktitle> Proc. of 12th ACM Symp. on Principles of Programming Languages, </booktitle> <pages> pp. 243-254. </pages>
Reference: <author> Kluge, W.E. </author> <year> (1983). </year> <title> Cooperating reduction machines, </title> <journal> IEEE Transactions on Computers </journal> . 
Reference: <author> Koopman, P.W.M. and E.G.J.M.H. </author> <month> Nocker </month> <year> (1988). </year> <title> Compiling functional languages to term graph rewriting systems, </title> <institution> Technical Report 88-1 , University of Nijmegen. </institution>
Reference: <author> Nocker, E.G.J.M.H. </author> <year> (1990). </year> <title> Strictness analysis based on abstract reduction, </title> <booktitle> Proc. of Second International Workshop on Implementation of Functional Languages on Parallel Architectures , University of Nijmegen, </booktitle> <institution> the Netherlands, </institution> <type> Technical Report 90-16, </type> <pages> pp. 297-321. </pages>
Reference: <author> Nocker, E.G.J.M.H. and J.E.W. </author> <month> Smetsers </month> <year> (1990). </year> <title> Partially strict data types, </title> <booktitle> Proc. of Second International Workshop on Implementation of Functional Languages on Parallel Architectures , University of Nijmegen, </booktitle> <institution> the Netherlands, </institution> <type> Technical Report 90-16, </type> <pages> pp. 237-255. </pages>
Reference: <author> Nocker, E.G.J.M.H., J.E.W. Smetsers, M.C.J.D. van Eekelen and M.J. </author> <title> Plasmeijer (1991). Concurrent clean, </title> <booktitle> Proc. of Parallel Architectures and Languages Europe (PARLE'91), </booktitle> <address> Eindhoven, The Netherlands, </address> <publisher> Springer Verlag, LNCS 505, </publisher> <pages> pp. 202-219. </pages>
Reference: <author> Plasmeijer, M.J. and M.C.J.D. </author> <title> van Eekelen (1993). Functional Programming and Parallel Graph Rewriting, </title> <type> Addison Wesley, </type> <institution> University of Nijmegen, The Netherlands. </institution>
Reference: <author> Smetsers, J.E.W. </author> <year> (1989). </year> <title> Compiling clean to abstract abc-machine code, </title> <note> Technical Report 89-20 , University of Nijmegen. </note> <author> Toyama, Yoshihito., Sjaak. Smetsers, Marko. Eekelen and Rinus. </author> <title> Plasmeijer (1993). The functional strategy and transitive term rewriting systems, in: Plasmeijer Sleep and Eekelen (eds.), Term Graph Rewriting, </title> <publisher> John Wiley and Sons Inc., to appear. </publisher>
Reference: <author> Vree, W.G. and P.H. </author> <title> Hartel (1988). Parallel graph reduction for divide-and-conquer applications; part i programme transformations, </title> <institution> Internal Report D-15 , University of Amsterdam. </institution> <month> 24 </month>
References-found: 22

