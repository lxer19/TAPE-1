URL: http://diva.eecs.berkeley.edu/~sitea/KUHSGROUP/POSTSCRIPT/MCMC93.ps
Refering-URL: http://diva.eecs.berkeley.edu/~sitea/KUHSGROUP/publications.html
Root-URL: 
Title: Timing-Driven System Partitioning by Constraints Decoupling Method  
Author: Minshine Shih, Ernest S. Kuh Ren-Song Tsay 
Address: Berkeley, CA94720 Santa Clara, CA95054  
Affiliation: Department of EECS, UC Berkeley ArcSys Inc.  
Abstract: We propose a new method called Constraints De-coupling to solve MCM system partitioning problem under Capacity and Timing Constraints. We take advantage of the small number of chip slots (compared to the large number of circuit components) and formulate it as an Integer Programming problem. We then decompose the dual-constraint problem into two independent single-constraint problems, which are much easier to solve. Experimental results are encouraging, all timing and capacity violations in the initial designs can be eliminated. One important application to solve practical MCM partitioning problem is illustrated through 7 industrial examples. Extensive experiments confirmed the stability of the method. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Y. Wei and C. Cheng, </author> <title> "Toward Efficient Hierarchical Designs by Ratio Cut Partitioning," </title> <booktitle> Proc. IEEE Int. Conf. on Computer-Aided Design, </booktitle> <year> 1989, </year> <pages> pp. 298-301 </pages>
Reference: [2] <author> Y. Wei and C. Cheng, </author> <title> "A Two-Level Two-Way Partitioning Algorithm," </title> <booktitle> Proc. IEEE Int. Conf. on Computer-Aided Design, </booktitle> <year> 1990, </year> <pages> pp. 516-519 </pages>
Reference: [3] <author> R.R. Tummala and E.J. Rymaszewski, </author> <title> Microelectronics Packaging Handbook, </title> <publisher> Chap. 16 Van Nos-trand Reinhold, </publisher> <year> 1989 </year>
Reference: [4] <author> S. Martello and P. Toth, </author> <title> Knapsack Problems 1990 </title>
Reference-contexts: i=1 j=1 1 p ij +u ij )a ij ) subject to C1; C3: Subproblem B: min ( i=1 j=1 1 p ij u ij )b ij ) subject to C2; C4: Subproblem A is known as the Generalized Assignment Problem (GAP) and has been intensively studied in the past <ref> [4] </ref>. Exact algorithms and fast heuristics have been developed. In this work we use the heuristic proposed by Martello and Toth [4]. Interested readers are referred to their original textbook. There is no existing work on Subproblem B to our knowledge. <p> p ij u ij )b ij ) subject to C2; C4: Subproblem A is known as the Generalized Assignment Problem (GAP) and has been intensively studied in the past <ref> [4] </ref>. Exact algorithms and fast heuristics have been developed. In this work we use the heuristic proposed by Martello and Toth [4]. Interested readers are referred to their original textbook. There is no existing work on Subproblem B to our knowledge.
Reference: [5] <author> M. Shih, E. Kuh and R. Tsay, </author> <title> "Performance-Driven System Partitioning on Multi-Chip Modules," </title> <booktitle> Proc. Design Automation Conference, </booktitle> <year> 1992, </year> <pages> pp. 53-56 </pages>
Reference-contexts: Each of the industrial circuit we obtained contains a cycle time value and a System Graph <ref> [5] </ref> G (R S where R is the set of all register nodes and C is the set of all combinational nodes. Each node in this graph is labeled as either register or combinational block. Each node has a delay attribute and a size attribute. <p> Each node in this graph is labeled as either register or combinational block. Each node has a delay attribute and a size attribute. We apply a Super-Node Merging procedure as described in a previous paper <ref> [5] </ref> to the circuits. This merging procedure essentially merges all nodes that cannot afford to be assigned to different chip slots without violating cycle time constraints. The resulting graph is called a Super-Node Graph.
Reference: [6] <author> K. Jornsten, M. Nasberg, </author> <title> "A new Lagrangian relaxation approach to the generalized assignment problem," </title> <journal> European Journal of Operational Research 27, </journal> <year> 1986, </year> <pages> pp. 313-323 </pages>
Reference-contexts: j 1 = 1 = x i 2 j 2 P M The objective is to minimize M X N X p ij x ij ; subject to C1; C2; C3: 3.2 Constraints Decoupling Our idea of Constraints Decoupling came from the Variable Splitting method introduced by Jornsten and Nasberg <ref> [6] </ref>, who used this method to derive a tight upper bound in Branch and Bound algorithm which solved Generalized Assignment Problems. Our main contribution here is to derive a nontrivial generalized formulation which can handle Timing Constraints and extend their basic Variable Splitting method to decouple timing and capacity constraints.
Reference: [7] <author> R. Floyd, </author> <title> "Algorithm 97 (SHORTEST PATH)" Communications of the ACM, </title> <year> 1962, </year> <month> 5(6):345 </month>
Reference-contexts: Therefore we need to compute the transitive closure of the inequality relationships. We found that the problem of finding transitive closure of triangular inequality is equivalent to the all-pairs shortest path problem. This problem can be solved using existing techniques. Currently we implemented Floyd-Warshall algorithm <ref> [7] </ref>, which can be replaced by John-son's algorithm [8] in order to exploit sparsity. We first make a random initial assignment of all the Super-Nodes into the 16 slots.
Reference: [8] <author> D. Johnson, </author> <title> "Efficient Algorithms for shortest paths in sparse networks," </title> <journal> Journal of the ACM, 1977, </journal> <volume> 24(1) </volume> <pages> 1-13 </pages>
Reference-contexts: We found that the problem of finding transitive closure of triangular inequality is equivalent to the all-pairs shortest path problem. This problem can be solved using existing techniques. Currently we implemented Floyd-Warshall algorithm [7], which can be replaced by John-son's algorithm <ref> [8] </ref> in order to exploit sparsity. We first make a random initial assignment of all the Super-Nodes into the 16 slots. We then use the definition described in section 2.2 to obtain the P matrix. 5.2 Test Results A typical curve of convergence is shown in figure 1.
References-found: 8

