URL: http://www.cs.caltech.edu/~ps/papers/gi97/MarshallFussellCampbell.ps.gz
Refering-URL: http://www.cs.caltech.edu/~ps/papers/gi97/
Root-URL: http://www.cs.caltech.edu
Email: email: dane@cs.utexas.edu  
Phone: Phone: +1-512-835-3743 Fax: +1-512-490-4220  
Title: Multiresolution Rendering of Complex Botanical Scenes  
Author: Dana Marshall Donald S. Fussell A.T. Campbell, III 
Address: Austin, TX 78712  1000 Burnet Road Austin, TX 78758  
Affiliation: Department of Computer Sciences The University of Texas at Austin  Applied Research Laboratories The University of Texas at Austin  
Abstract: This paper presents a system for rendering very large collections of randomly parameterized plants while generating manageable scene geometries for rendering. A given botanical description of a plant is compiled into a hierarchical volume approximation. This is then integrated into a multiresolution rendering system that uses adaptive volume refinement. For objects that are close to the viewer, explicit polygons are generated, while objects hidden or further away are rendered as groups of microsur-faces. This system can be extended to any polygon intensive rendering. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Beyer, William H., </author> <title> Standard Mathematical Tables, </title> <booktitle> 24th Ed. 1976, </booktitle> <publisher> CRC Press, </publisher> <address> P. </address> <month> 7. </month>
Reference-contexts: This generates a balanced tree and further avoids sliver tetrahedra. (See Fig. 2) The volume of each tetrahedron can be calculated easily from Herron's formula <ref> [1] </ref> and the equations of the tetrahedron's bounding planes. The resulting data structure is a binary tree with tetrahedra at some of the interior nodes and all of the terminal nodes. Interior nodes contain a plane which divides the space of the child nodes.
Reference: [2] <author> Blinn, J.F., </author> <title> "Light Reflection Functions for Simulation of clouds and Dusty Surfaces", </title> <journal> Computer Graphics, </journal> <volume> Vol. 16, No. 3, </volume> <year> 1982, </year> <pages> pp. 21-29. </pages>
Reference-contexts: Once light values have been collected for all tetrahedra and polygons, the final image is rendered back to front. If tetrahedra are rendered as an approximation of their contents the equation used is one to simulate the rendering of a collection of microsurfaces comprising a low albedo volume <ref> [6, 2] </ref>.
Reference: [3] <author> Bloomenthal, J., </author> <title> "Modeling the Mighty Maple", </title> <journal> Computer Graphics, </journal> <volume> Vol. 19, No. 3, </volume> <year> 1985, </year> <pages> pp. 305-311. </pages> <publisher> [4] de Reffye, </publisher> <editor> Philippe, Edelin, Claude, Francon, Jean, Jaeger, Marc, and Puech, Claude, </editor> <title> "Plant Models Faithful to Botanical Structure and Development", </title> <journal> Computer Graphics, </journal> <volume> Vol. 22, No. 4, </volume> <year> 1988, </year> <pages> pp. 151-158. </pages>
Reference-contexts: describe the data structure of hierarchi cal tetrahedra, discuss the representation we use for plant life and then describe how both are used in the modeling and rendering algorithm. 2 Previous Work Previous work on generating and rendering plants includes fractals and L-systems [14], animating plant development [11],[12], topological details <ref> [3] </ref>, and generating biological plants true to nature.[10],[9] In [4], plants were categorized according to the different structures including order, ramification, and phyllotaxy. These systems are good at generating accurate plant models and are not concerned with the problem of rendering the complex scenes that can be generated. <p> The transition from this coarse modeling to a closer detail concerning smooth bifurcations, texture and bump mapping is given in <ref> [3] </ref>. This gives the user several scales to model in. Explicit polygons can be included in the scene and they are either drawn or their attributes are added to a subvolume's summary.
Reference: [5] <author> Greene, Ned, </author> <title> "Voxel Space Automata: Modelling with Stochatic Growth Processes in Voxel Space", </title> <journal> Computer Graphics, </journal> <volume> Vol. 23, No.4, </volume> <year> 1989, </year> <pages> pp. 175-184. </pages>
Reference-contexts: These systems are good at generating accurate plant models and are not concerned with the problem of rendering the complex scenes that can be generated. Systems have been implemented that render large collection of microsurfaces using voxels <ref> [5] </ref>, texels [6] , or particles [13], but they don't address the transition from polygon to texel or polygon to particle. Other systems have managed to render scenes with a large amount of detail but only by repeatedly duplicating the representation of a small set of objects [13, 16].
Reference: [6] <author> Kajiya, James T., </author> <title> "Rendering Fur with Three Dimensional Textures", </title> <journal> Computer Graphics, </journal> <volume> Vol. 23, No. 3, </volume> <year> 1989. </year>
Reference-contexts: These systems are good at generating accurate plant models and are not concerned with the problem of rendering the complex scenes that can be generated. Systems have been implemented that render large collection of microsurfaces using voxels [5], texels <ref> [6] </ref> , or particles [13], but they don't address the transition from polygon to texel or polygon to particle. Other systems have managed to render scenes with a large amount of detail but only by repeatedly duplicating the representation of a small set of objects [13, 16]. <p> Once light values have been collected for all tetrahedra and polygons, the final image is rendered back to front. If tetrahedra are rendered as an approximation of their contents the equation used is one to simulate the rendering of a collection of microsurfaces comprising a low albedo volume <ref> [6, 2] </ref>. <p> In <ref> [6] </ref>, the phase factor p cos () was replaced by a reflection function derived from a sample plane orientation to approximate the contents of a texel: p cos (ff) + s cos (fi) spexp where ff is the angle between the sample normal and the light source, fi is the angle
Reference: [7] <author> Neyret, Fabrice, </author> <title> "A General and Multiscale model for Volumetric Textures", Graphics Interface '95. </title>
Reference-contexts: Other systems have managed to render scenes with a large amount of detail but only by repeatedly duplicating the representation of a small set of objects [13, 16]. One method has introduced mul-tiresolution texels using octrees <ref> [7, 8] </ref>. One method [17] improved on this problem by using less complex copies for plants farther from the viewer. 3 Overview The rendering process is one of adaptive refinement. The space within a scene is continually subdivided until image quality no longer improves with further subdivision.
Reference: [8] <author> Neyret, Fabrice, </author> <title> "Synthesizing Verdant Landscapes using Volumetric Textures", </title> <institution> Institut National de Recherche en Informatique et en Automa-tique, RR-2846, </institution> <month> March </month> <year> 1996 </year>
Reference-contexts: Other systems have managed to render scenes with a large amount of detail but only by repeatedly duplicating the representation of a small set of objects [13, 16]. One method has introduced mul-tiresolution texels using octrees <ref> [7, 8] </ref>. One method [17] improved on this problem by using less complex copies for plants farther from the viewer. 3 Overview The rendering process is one of adaptive refinement. The space within a scene is continually subdivided until image quality no longer improves with further subdivision.
Reference: [9] <author> Oppenheimer, Peter E., </author> <title> "Real Time Design and Animation of Fractal Plants and Trees", </title> <journal> Computer Graphics, </journal> <volume> Vol. 20, No. 4, </volume> <year> 1986, </year> <pages> pp. 55-64. </pages>
Reference: [10] <author> Prusinkiewicz, Przemyslaw, Lindenmayer, Aris-tid, and Hanan, James, </author> <title> "Developmental Models of Herbaceous Plants for Computer Imagery Purposes", </title> <journal> Computer Graphics, </journal> <volume> Vol. 22, No. 4, </volume> <year> 1988, </year> <pages> pp. 141-150. </pages>
Reference: [11] <author> Prusinkiewicz, Przemyslaw, Hammel, Mark S., and Mjolsness, Eric, </author> <title> "Animation of Plant Development", </title> <journal> Computer Graphics, </journal> <volume> Vol. 27, No. 3, </volume> <year> 1993, </year> <pages> pp. 351-360. </pages>
Reference: [12] <author> Prusinkiewicz, Przemyslaw, James, Mark, and Mech, Radomir, </author> <title> "Synthetic Topiary", </title> <journal> Computer Graphics, </journal> <volume> Vol. 28, No. 3, </volume> <year> 1994, </year> <pages> pp. 351-358. </pages>
Reference: [13] <author> Reeves, William T., </author> <title> "Approximate and Probabilistic Algorithms for Shading and Rendering Structured Particle Systems", </title> <journal> Computer Graphics, </journal> <volume> Vol. 19, No. 3, </volume> <year> 1985, </year> <pages> pp. 313-322. </pages>
Reference-contexts: These systems are good at generating accurate plant models and are not concerned with the problem of rendering the complex scenes that can be generated. Systems have been implemented that render large collection of microsurfaces using voxels [5], texels [6] , or particles <ref> [13] </ref>, but they don't address the transition from polygon to texel or polygon to particle. Other systems have managed to render scenes with a large amount of detail but only by repeatedly duplicating the representation of a small set of objects [13, 16]. <p> Other systems have managed to render scenes with a large amount of detail but only by repeatedly duplicating the representation of a small set of objects <ref> [13, 16] </ref>. One method has introduced mul-tiresolution texels using octrees [7, 8]. One method [17] improved on this problem by using less complex copies for plants farther from the viewer. 3 Overview The rendering process is one of adaptive refinement.
Reference: [14] <author> Smith, Alvy Ray, </author> <title> "Plants, Fractals, </title> <journal> and Formal Languages", Computer Graphics, </journal> <volume> Vol. 18, No. 3, </volume> <year> 1984, </year> <pages> pp. 1-10. </pages>
Reference-contexts: We describe the data structure of hierarchi cal tetrahedra, discuss the representation we use for plant life and then describe how both are used in the modeling and rendering algorithm. 2 Previous Work Previous work on generating and rendering plants includes fractals and L-systems <ref> [14] </ref>, animating plant development [11],[12], topological details [3], and generating biological plants true to nature.[10],[9] In [4], plants were categorized according to the different structures including order, ramification, and phyllotaxy.
Reference: [15] <author> Thompson, Karl K., </author> <title> "Ray Tracing with Amalgams", </title> <institution> Dissertation for The University of Texas at Austin, </institution> <year> 1991. </year>
Reference: [16] <author> Ward, Gregory J., </author> <title> "The RADIANCE Lighting Simulation and Rendering System", </title> <journal> Computer Graphics, </journal> <volume> Vol. 28, No. 3, </volume> <year> 1994, </year> <pages> pp. 459-472. </pages>
Reference-contexts: Other systems have managed to render scenes with a large amount of detail but only by repeatedly duplicating the representation of a small set of objects <ref> [13, 16] </ref>. One method has introduced mul-tiresolution texels using octrees [7, 8]. One method [17] improved on this problem by using less complex copies for plants farther from the viewer. 3 Overview The rendering process is one of adaptive refinement.
Reference: [17] <author> Weber, Jason and Penn, Joseph, </author> <title> "Creation and Rendering of Realistic Trees", </title> <journal> Computer Graphics, </journal> <volume> Vol. 29, No. 3, </volume> <year> 1995, </year> <pages> pp. 119-128. </pages>
Reference-contexts: Other systems have managed to render scenes with a large amount of detail but only by repeatedly duplicating the representation of a small set of objects [13, 16]. One method has introduced mul-tiresolution texels using octrees [7, 8]. One method <ref> [17] </ref> improved on this problem by using less complex copies for plants farther from the viewer. 3 Overview The rendering process is one of adaptive refinement. The space within a scene is continually subdivided until image quality no longer improves with further subdivision.
References-found: 16

