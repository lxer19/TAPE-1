URL: ftp://ftp.cs.utexas.edu/pub/darshan/adder.ps.gz
Refering-URL: http://www.cs.utexas.edu/users/darshan/abstracts/abstracts.html
Root-URL: http://www.cs.utexas.edu
Title: An Asynchronous Bit-Serial Adder and its Delay-Insensitive Decomposition  
Author: Mark B. Josephs and Priyadarsan Patra 
Note: Draft  
Affiliation: Oxford University Computing Laboratory  
Abstract-found: 0
Intro-found: 1
Reference: [Bro90] <author> Geoffrey M. Brown. </author> <title> Towards truly delay-insensitive circuit realizations of process algebras. </title> <editor> In Geraint Jones and Mary Sheeran, editors, </editor> <booktitle> Proceedings of the Workshop on Designing Correct Circuits, </booktitle> <pages> pages 120-131. </pages> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: 1 Introduction In asynchronous circuit design, a delay-insensitive discipline requires that a second signal is not sent along a wire (or channel) until its predecessor has been acknowledged [Udd86]. This discipline (sometimes weakened to allow `isochronic forks' [Mar90]) has been presented as being of potential use for control applications <ref> [Bro90, BS89, Ebe89, JU90, JU91, JG90, Lav92] </ref>, but its use in data processing applications has been less thoroughly explored.
Reference: [BS89] <author> Erik Brunvand and Robert F. Sproull. </author> <title> Translating concurrent programs into delay-insensitive circuits. </title> <booktitle> In Proc. International Conf. Computer-Aided Design (ICCAD), </booktitle> <pages> pages 262-265. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> November </month> <year> 1989. </year>
Reference-contexts: 1 Introduction In asynchronous circuit design, a delay-insensitive discipline requires that a second signal is not sent along a wire (or channel) until its predecessor has been acknowledged [Udd86]. This discipline (sometimes weakened to allow `isochronic forks' [Mar90]) has been presented as being of potential use for control applications <ref> [Bro90, BS89, Ebe89, JU90, JU91, JG90, Lav92] </ref>, but its use in data processing applications has been less thoroughly explored.
Reference: [Dil89] <author> David L. Dill. </author> <title> Trace Theory for Automatic Hierachical Verification of Speed-Independent Circuits. </title> <publisher> ACM Distinguished Dissertations. MIT Press, </publisher> <year> 1989. </year>
Reference-contexts: Verification is by algebraic manipulation and the algebra helps us to avoid separate analysis of equivalent states of a system, so making 6 verification humanly feasible. An alternative would be to use an automatic verification tool, such as Dill's <ref> [Dil89] </ref>, but that would only check for safety properties.
Reference: [Ebe89] <author> Jo C. Ebergen. </author> <title> Translating Programs into Delay-Insensitive Circuits, volume 56 of CWI Tract. </title> <institution> Centre for Mathemathics and Computer Science, </institution> <year> 1989. </year>
Reference-contexts: 1 Introduction In asynchronous circuit design, a delay-insensitive discipline requires that a second signal is not sent along a wire (or channel) until its predecessor has been acknowledged [Udd86]. This discipline (sometimes weakened to allow `isochronic forks' [Mar90]) has been presented as being of potential use for control applications <ref> [Bro90, BS89, Ebe89, JU90, JU91, JG90, Lav92] </ref>, but its use in data processing applications has been less thoroughly explored.
Reference: [JG90] <author> Staunstrup J. and M. R. Greenstreet. </author> <booktitle> Formal VLSI Specification and Synthesis, </booktitle> <pages> pages 209-226. </pages> <address> North-Holland/Elsevier, </address> <year> 1990. </year>
Reference-contexts: 1 Introduction In asynchronous circuit design, a delay-insensitive discipline requires that a second signal is not sent along a wire (or channel) until its predecessor has been acknowledged [Udd86]. This discipline (sometimes weakened to allow `isochronic forks' [Mar90]) has been presented as being of potential use for control applications <ref> [Bro90, BS89, Ebe89, JU90, JU91, JG90, Lav92] </ref>, but its use in data processing applications has been less thoroughly explored.
Reference: [JU90] <author> Mark B. Josephs and Jan Tijmen Udding. </author> <title> The design of a delay-insensitive stack. </title> <editor> In G. Jones and M. Sheeran, editors, </editor> <booktitle> Designing Correct Circuits, </booktitle> <pages> pages 132-152. </pages> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: 1 Introduction In asynchronous circuit design, a delay-insensitive discipline requires that a second signal is not sent along a wire (or channel) until its predecessor has been acknowledged [Udd86]. This discipline (sometimes weakened to allow `isochronic forks' [Mar90]) has been presented as being of potential use for control applications <ref> [Bro90, BS89, Ebe89, JU90, JU91, JG90, Lav92] </ref>, but its use in data processing applications has been less thoroughly explored. <p> The paper also serves to demonstrate (i) the use of Decision-Wait elements to route and compute data as well as control signals, and (ii) D-I Algebra <ref> [JU90, JU91] </ref> as a tool for specification and verification. 2 Specification of the Adder The adder depicted in Fig. 1 is intended to input two numbers on channels a and b and output the sum on channel d.
Reference: [JU91] <author> Mark B. Josephs and Jan Tijmen Udding. </author> <title> An algebra for delay-insensitive circuits. </title> <editor> In Robert Kurshan and Edmund M. Clarke, editors, </editor> <booktitle> Workshop on Computer-Aided Verification, volume 3 of DIMACS Series in Discrete Mathematics and Theoretical Computer Science, </booktitle> <pages> pages 147-175. </pages> <address> AMS-ACM, </address> <year> 1991. </year>
Reference-contexts: 1 Introduction In asynchronous circuit design, a delay-insensitive discipline requires that a second signal is not sent along a wire (or channel) until its predecessor has been acknowledged [Udd86]. This discipline (sometimes weakened to allow `isochronic forks' [Mar90]) has been presented as being of potential use for control applications <ref> [Bro90, BS89, Ebe89, JU90, JU91, JG90, Lav92] </ref>, but its use in data processing applications has been less thoroughly explored. <p> The paper also serves to demonstrate (i) the use of Decision-Wait elements to route and compute data as well as control signals, and (ii) D-I Algebra <ref> [JU90, JU91] </ref> as a tool for specification and verification. 2 Specification of the Adder The adder depicted in Fig. 1 is intended to input two numbers on channels a and b and output the sum on channel d.
Reference: [Lav92] <author> Luciano Lavagno. </author> <title> Synthesis and Testing of Bounded Wire Delay Asynchronous Circuits from Signal Transition Graphs. </title> <type> PhD thesis, </type> <institution> UC Berkely, </institution> <year> 1992. </year>
Reference-contexts: 1 Introduction In asynchronous circuit design, a delay-insensitive discipline requires that a second signal is not sent along a wire (or channel) until its predecessor has been acknowledged [Udd86]. This discipline (sometimes weakened to allow `isochronic forks' [Mar90]) has been presented as being of potential use for control applications <ref> [Bro90, BS89, Ebe89, JU90, JU91, JG90, Lav92] </ref>, but its use in data processing applications has been less thoroughly explored.
Reference: [Mar90] <author> Alain J. Martin. </author> <title> Programming in VLSI: From communicating processes to delay-insensitive circuits. </title> <editor> In C. A. R. Hoare, editor, </editor> <title> Developments in Concurrency and Communication. </title> <publisher> Addison-Wesley, </publisher> <year> 1990. </year> <booktitle> UT Year of Programming Institute on Concurrent Programming. </booktitle>
Reference-contexts: 1 Introduction In asynchronous circuit design, a delay-insensitive discipline requires that a second signal is not sent along a wire (or channel) until its predecessor has been acknowledged [Udd86]. This discipline (sometimes weakened to allow `isochronic forks' <ref> [Mar90] </ref>) has been presented as being of potential use for control applications [Bro90, BS89, Ebe89, JU90, JU91, JG90, Lav92], but its use in data processing applications has been less thoroughly explored. <p> Also note that the circuit serves as a pipeline stage, which accounts for the 1 fi 3 and 1 fi 2 Decision-Wait elements. Furthermore, the fact that we have followed a delay-insensitive discipline should give us a great deal of freedom in laying out the circuit. An alternative scheme <ref> [Mar90, vB92b] </ref>, employing four-phase instead of two-phase handshaking on the channels, would have to be considered if the above design is too large for a given application. A bit-parallel adder that employs four-phase handshaking has been designed by Martin [Mar92].
Reference: [Mar92] <author> Alain J. Martin. </author> <title> Asynchronous datapaths and the design of an asynchronous adder. </title> <booktitle> Formal Methods in System Design, </booktitle> <volume> 1(1) </volume> <pages> 119-137, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: An alternative scheme [Mar90, vB92b], employing four-phase instead of two-phase handshaking on the channels, would have to be considered if the above design is too large for a given application. A bit-parallel adder that employs four-phase handshaking has been designed by Martin <ref> [Mar92] </ref>. The response time of the device depends on the response times of C-elements and XOR-gates, three or four of each having to switch in order to compute the next output.
Reference: [SD88] <author> S.G. Smith and P. B. Denyer. </author> <title> Serial Data Computation. </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1988. </year>
Reference-contexts: Designs for the latter sometimes require a tree of Muller C-elements to detect completion, for example. For other numerous advantages of bit-serial techniques refer to <ref> [SD88] </ref>. This paper takes an adder that is intended to handle numbers of arbitrary sizes as the basis for a small case study in delay-insensitive design for bit-serial data processing.
Reference: [Udd86] <author> Jan Tijmen Udding. </author> <title> A formal model for defining and classifying delay-insensitive circuits. </title> <journal> Distributed Computing, </journal> <volume> 1(4) </volume> <pages> 197-204, </pages> <year> 1986. </year>
Reference-contexts: 1 Introduction In asynchronous circuit design, a delay-insensitive discipline requires that a second signal is not sent along a wire (or channel) until its predecessor has been acknowledged <ref> [Udd86] </ref>. This discipline (sometimes weakened to allow `isochronic forks' [Mar90]) has been presented as being of potential use for control applications [Bro90, BS89, Ebe89, JU90, JU91, JG90, Lav92], but its use in data processing applications has been less thoroughly explored.
Reference: [vB92a] <author> Kees van Berkel. </author> <title> Beware the isochronic fork. Integration, </title> <journal> the VLSI journal, </journal> <volume> 13(2) </volume> <pages> 103-128, </pages> <month> June </month> <year> 1992. </year> <month> 7 </month>
Reference-contexts: Clearly, trade-offs can be made at the transistor level in terms of robustness of implementation of the cell library versus reducing latency, e.g., by use of early thresholds <ref> [vB92a] </ref>. There are also some variations on our design that may have slightly better performance, though component C would no longer be identifiable as an adder for arguments of equal size. The design has also illustrated the use of D-I Algebra as a tool for specification and verification.
Reference: [vB92b] <author> Kees van Berkel. </author> <title> Handshake Circuits: An Intermediary between Communicating Processes and VLSI. </title> <type> PhD thesis, </type> <institution> Eindhoven University of Technology, </institution> <year> 1992. </year>
Reference-contexts: Also note that the circuit serves as a pipeline stage, which accounts for the 1 fi 3 and 1 fi 2 Decision-Wait elements. Furthermore, the fact that we have followed a delay-insensitive discipline should give us a great deal of freedom in laying out the circuit. An alternative scheme <ref> [Mar90, vB92b] </ref>, employing four-phase instead of two-phase handshaking on the channels, would have to be considered if the above design is too large for a given application. A bit-parallel adder that employs four-phase handshaking has been designed by Martin [Mar92].
Reference: [Ver88] <author> Tom Verhoeff. </author> <title> Delay-insensitive codes|an overview. </title> <journal> Distributed Computing, </journal> <volume> 3(1) </volume> <pages> 1-8, </pages> <year> 1988. </year>
Reference-contexts: To contribute to this exploration we have decided to look first at bit-serial systems because the area penalty of using a delay-insensitive coding scheme <ref> [Ver88] </ref> for them should be less severe than for bit-parallel systems. Designs for the latter sometimes require a tree of Muller C-elements to detect completion, for example. For other numerous advantages of bit-serial techniques refer to [SD88].
References-found: 15

