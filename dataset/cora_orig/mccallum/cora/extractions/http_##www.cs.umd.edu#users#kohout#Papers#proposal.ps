URL: http://www.cs.umd.edu/users/kohout/Papers/proposal.ps
Refering-URL: http://www.cs.umd.edu/users/kohout/
Root-URL: 
Title: Representing Reactive Competences for use in Hard Real-Time Systems  
Author: Bob Kohout 
Degree: (Ph.D. Dissertation Proposal)  
Abstract: In domains where the failure is to take appropriate and timely action is potentially catastrophic, behavioral adequacy for a control system cannot be established by testing alone. In addition to the requirement of logical correctness, which is desirable for any program, such mission-critical systems typically have strict temporal constraints as well. Hard real-time systems have been developed to address these requirements, but achieving intelligent behavior in this context has proven probel-matic. The requirement for hard real-time response is clearly incompatible with the fundamentally time-bound, high-variance techniques of classical AI, and the inability to precisely characterize the performance and resource requirements of current reactive systems makes them equally unsuitable for use in hard real-time systems. I propose to develop a system for representing the semantics of low-level competences and for reasoning about their use in isolation and in combination. Such a representation will allow principled proofs of the correctness of reaction-based systems, as well as provide a formal basis for automated reasoning about the use of reactive competences. This will support the use of engineered reactive systems with guaranteed logical performance features in a hard real-time context, while at the same time providing a link to classical AI methodologies. In short, this formal semantics for reaction will bridge the gap between mission-critical domains and deliberative AI techniques. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> P. E. Agre and D. Chapman, "Pengi: </author> <title> An Implementation of a Theory of Activity," </title> <booktitle> in Proc. National Conf. on Artificial Intelligence, </booktitle> <pages> pp. 268-272. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1987. </year>
Reference-contexts: Others have chosen to abandon strong models of the environment. Several researchers (e.g. <ref> [1, 30, 15] </ref>) have demonstrated that the regularities of the world can be exploited to allow a relatively small set of behaviors to produce desirable global effects. <p> While these systems have important differences, they can all be viewed as attempts to "speed-up" the classical paradigm. At the same time, several other researchers had begun to explore ways to achieve reactivity outside of the classical paradigm. In 1987, Agre and Chapman <ref> [1] </ref> described a system which achieved a fairly impressive level of performance at playing a highly dynamic video game, while using a control regimen that was completely driven by responses to environmental influences. <p> The timing requirements 6 Some researchers whose works falls into this category eschew the need for classical planning systems completely (e.g. [5]), while most (e.g. <ref> [15, 1, 30] </ref>) take a less dogmatic view of the relationship between the two paradigms, preferring instead to concentrate on determining the capabilities and limitations of various reactive approaches. 5 of such problem domains make the techniques of classical planning difficult, if not impossible, to ap-ply. <p> Agre's Pengi program <ref> [1] </ref> is a good example of this. In this system, the program is responsible for controlling a character in a video game that has to react quickly to a variety of environmental stimuli.
Reference: [2] <author> R. C. Arkin, </author> <title> "Integrating Behavioral, Perceptual, and World Knowledge in Reactive Navigation," </title> <booktitle> in Robotics and Autonomous Systems 6, </booktitle> <pages> pp. 105-122, </pages> <year> 1990. </year>
Reference-contexts: Since they rely fundamentally upon their developers for their proper functioning in the world, these ad hoc systems offer little insight into how other reactive systems can be built. A third approach has been to construct "hybrid" systems, comprised of separate reactive and deliberative components (e.g. <ref> [3, 2] </ref> ). While such systems have the potential for combining the timeliness of purely reactive behaviors with the correctness achievable through state-space search, current implementations suffer from all the weaknesses attributed to ad hoc systems above, as well as many of those of conventional planners. <p> Pre-processing the constructs of a conventional planning model in an effort to achieve time liness (e.g. [16, 20, 31, 10]). 3. Developing formal models of reactive systems (e.g. [20, 23]). 4. Combining reactive circuitry with other, more established models, especially conventional planners (e.g. <ref> [2, 32, 24, 3, 27] </ref>). Much of the work in reactivity has been motivated by application areas where intelligent behavior in the presence of hard temporal deadlines and constraints is desirable.
Reference: [3] <author> B.Hayes-Roth, </author> <title> "An architecture for adaptive intelligent systems," </title> <note> accepted for publication in Artificial Intelligence,Special Issue on Agents and Interactivity, </note> <year> 1994. </year>
Reference-contexts: Since they rely fundamentally upon their developers for their proper functioning in the world, these ad hoc systems offer little insight into how other reactive systems can be built. A third approach has been to construct "hybrid" systems, comprised of separate reactive and deliberative components (e.g. <ref> [3, 2] </ref> ). While such systems have the potential for combining the timeliness of purely reactive behaviors with the correctness achievable through state-space search, current implementations suffer from all the weaknesses attributed to ad hoc systems above, as well as many of those of conventional planners. <p> Pre-processing the constructs of a conventional planning model in an effort to achieve time liness (e.g. [16, 20, 31, 10]). 3. Developing formal models of reactive systems (e.g. [20, 23]). 4. Combining reactive circuitry with other, more established models, especially conventional planners (e.g. <ref> [2, 32, 24, 3, 27] </ref>). Much of the work in reactivity has been motivated by application areas where intelligent behavior in the presence of hard temporal deadlines and constraints is desirable.
Reference: [4] <author> R. Brooks, </author> <title> "Elephants Don't Play Chess," in Designing Autonomous Agents, </title> <editor> P. Maes, editor, MIT/Elsevier, </editor> <year> 1990. </year>
Reference-contexts: that are capable of operating for long periods of time without human intervention, while performing tasks generally considered to require some amount of "intelligence." 2 Depending upon what behavior one is willing to consider intelligent, such 1 For example [20] points to the bounded depth of the GAPPS circuits, and <ref> [4] </ref> relies upon the nature of the hardware he employs to make claims of adequate "real-time" response. 2 I purposely refrain from offering a definition of what intelligence is, believing that it is quite impossible to construct a robust definition of the term.
Reference: [5] <author> R. Brooks, </author> <title> "Intelligence Without Reason," </title> <booktitle> in Proc. Int'l Joint Conf. on Artificial Intelligence, </booktitle> <pages> pp. 569-595, </pages> <year> 1991. </year>
Reference-contexts: Brooks <ref> [5] </ref> claims that early researchers were aware of the inadequacies of classical planning, but that as the field developed, people gradually lost sight of these problems, or at the very least overlooked their importance. <p> Schoppers [31] developed the idea of "universal plans," in which all of the possible relevant world states are anticipated during plan generation, the appropriate response is 5 Brooks <ref> [5] </ref> has claimed that this phrase is something of an oxymoron. Under the definition of planning that I have offered this is not correct, but Brooks is speaking from a tradition which holds that planning is not so much a problem domain as it is a set of problem-solving techniques. <p> A flurry of activity of the sort described above generally marks the emergence of a new paradigm, and we can expect that it will be some time before the planning community reaches consensus about what reactive systems are, or should be. Brooks <ref> [5, 6] </ref> has taken the extreme position that the techniques of classical planning will be of little use to systems actively responding to and acting in real-world situations. <p> Much of the work in reactivity has been motivated by application areas where intelligent behavior in the presence of hard temporal deadlines and constraints is desirable. The timing requirements 6 Some researchers whose works falls into this category eschew the need for classical planning systems completely (e.g. <ref> [5] </ref>), while most (e.g. [15, 1, 30]) take a less dogmatic view of the relationship between the two paradigms, preferring instead to concentrate on determining the capabilities and limitations of various reactive approaches. 5 of such problem domains make the techniques of classical planning difficult, if not impossible, to ap-ply.
Reference: [6] <author> R. Brooks, </author> <title> "Intelligence Without Representation," </title> <journal> Artificial Intelligence, </journal> <volume> vol. 47, </volume> <pages> pp. 139-159, </pages> <year> 1991. </year>
Reference-contexts: Others have chosen to abandon strong models of the environment. Several researchers (e.g. [1, 30, 15]) have demonstrated that the regularities of the world can be exploited to allow a relatively small set of behaviors to produce desirable global effects. Brooks <ref> [6] </ref> has taken the extreme position that the world models of traditional systems are unnecessary, and that intelligent behavior is possible in systems that minimize symbolic representation of the external world. <p> A flurry of activity of the sort described above generally marks the emergence of a new paradigm, and we can expect that it will be some time before the planning community reaches consensus about what reactive systems are, or should be. Brooks <ref> [5, 6] </ref> has taken the extreme position that the techniques of classical planning will be of little use to systems actively responding to and acting in real-world situations.
Reference: [7] <author> R. A. Brooks, </author> <title> "A Robust Layered Control System for a Mobile Robot," </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> vol. RA-2, no. 1, </volume> <pages> pp. 14-22, </pages> <month> March </month> <year> 1986. </year>
Reference-contexts: In 1987, Agre and Chapman [1] described a system which achieved a fairly impressive level of performance at playing a highly dynamic video game, while using a control regimen that was completely driven by responses to environmental influences. Brooks <ref> [7, 8] </ref> began a disciplined approach to the design and construction of mobile robots that dogmatically rejected the techniques of classical planning.
Reference: [8] <author> R. A. Brooks and J. H. Connell, </author> <title> "Asynchronous Distributed Control System for a Mobile Robot," </title> <booktitle> in SPIE Vol. 727 Mobile Robots, </booktitle> <pages> pp. 77-84, </pages> <year> 1986. </year>
Reference-contexts: In 1987, Agre and Chapman [1] described a system which achieved a fairly impressive level of performance at playing a highly dynamic video game, while using a control regimen that was completely driven by responses to environmental influences. Brooks <ref> [7, 8] </ref> began a disciplined approach to the design and construction of mobile robots that dogmatically rejected the techniques of classical planning.
Reference: [9] <author> D. Chapman, </author> <title> "Planning for Conjunctive Goals," </title> <journal> Artificial Intelligence, </journal> <volume> vol. 32, no. 3, </volume> <pages> pp. 333-374, </pages> <month> July </month> <year> 1987. </year>
Reference-contexts: [McDermott???] that rather than studying Artificial Intelligence, perhaps we should be focusing our efforts upon Artificial Stupidity. 4 Strictly speaking, the authors introduced the concept of means/ends analysis, in which state space search is the implicit underlying technology for implementation on digital computers. 3 broad characterization of the paradigm in <ref> [9] </ref>, and Erol, et.al., have recently refined this in [12]. A more complete treatment of the history of this research tradition can be found in [16] and [34].
Reference: [10] <author> T. Dean, L. Kaelbling, J. Kirman, and A. Nicholson, </author> <title> "Planning With Deadlines in Stochastic Domains," </title> <booktitle> in Proc. National Conf. on Artificial Intelligence, </booktitle> <pages> pp. 574-579, </pages> <year> 1993. </year>
Reference-contexts: Most of the research in reactive systems falls into one or more of the following four categories: 1. Demonstrating the efficacy of reaction in the absence of a deliberative component. 6 2. Pre-processing the constructs of a conventional planning model in an effort to achieve time liness (e.g. <ref> [16, 20, 31, 10] </ref>). 3. Developing formal models of reactive systems (e.g. [20, 23]). 4. Combining reactive circuitry with other, more established models, especially conventional planners (e.g. [2, 32, 24, 3, 27]).
Reference: [11] <author> E.Panzieri and R.Davoli, </author> <title> "Real Time Systems: A Tutorial," </title> <type> Technical Report UBLCS -93-22, </type> <institution> Laboratory for Computer Science, University of Bologna,Italy, </institution> <year> 1993. </year>
Reference-contexts: In the case of mission-critical systems, where the cost of failure is known to be high, it is imperative that the system be designed not merely to be fast, but so that the designers know that it is fast enough. As one survey article <ref> [11] </ref> puts it "The principle responsibility of a real-time (RT) system can be summarized as that of producing correct results while meeting predefined deadlines in doing so.
Reference: [12] <author> K. Erol, J. Hendler, and D. Nau, "UMCP: </author> <title> A Sound and Complete Procedure for Hierarchical Task-Network Planning," </title> <note> submitted to AAAI-94, </note> <month> July </month> <year> 1994. </year>
Reference-contexts: should be focusing our efforts upon Artificial Stupidity. 4 Strictly speaking, the authors introduced the concept of means/ends analysis, in which state space search is the implicit underlying technology for implementation on digital computers. 3 broad characterization of the paradigm in [9], and Erol, et.al., have recently refined this in <ref> [12] </ref>. A more complete treatment of the history of this research tradition can be found in [16] and [34].
Reference: [13] <author> F.F.Ingrand and M.P.Georgeff, </author> <title> "Managing Deliberation and Reasoning in Real-Time AI Systems," </title> <booktitle> in Proc. Workshop on Innovative Approaches to Planning, Scheduling and Control, </booktitle> <pages> pp. 284-291, </pages> <year> 1990. </year>
Reference-contexts: Georgeff has shown [16] that, under certain assumptions, PRS can be guaranteed to notice an external event within a bounded amount of time. Again, while this is necessary to hard real-time performance, it hardly suffices. In <ref> [13] </ref>, it is claimed that, in principle, it is possible to bound the time required to determine a correct output in PRS.
Reference: [14] <author> R. Fikes, P. E. Hart, and N. Nilsson, </author> <title> "Learning and Executing Generalized Robot Plans," </title> <journal> Artificial Intelligence, </journal> <volume> vol. 3, no. 4, </volume> <pages> pp. 251-288, </pages> <year> 1972. </year>
Reference-contexts: It is difficult to say exactly when and where planning emerged as a recognized sub-domain of AI, but it is certainly no later than the description of the STRIPS <ref> [14] </ref> system that was published in the early 70's. STRIPS, in turn, can be seen as a descendant of both the state-space search paradigm pioneered by Newell and Simon [26] in their GPS program, and the use of formal logic and the predicate calculus exemplified by Cordell Green in [17].
Reference: [15] <author> R. J. Firby, </author> <title> "An Investigation into Reactive Planning in Complex Domains," </title> <booktitle> in Proc. National Conf. on Artificial Intelligence, </booktitle> <pages> pp. 202-206, </pages> <year> 1987. </year>
Reference-contexts: Others have chosen to abandon strong models of the environment. Several researchers (e.g. <ref> [1, 30, 15] </ref>) have demonstrated that the regularities of the world can be exploited to allow a relatively small set of behaviors to produce desirable global effects. <p> Sanborn and Hendler [30] advocated a system where several cooperating processes, making strictly local computations and working without a strong model of the world, could be combined to produce desirable, dynamic behaviors. Firby <ref> [15] </ref> developed a system for modeling reactive circuitry, which, unlike PRS, made no attempt to project future world states. These systems all rely heavily upon the system developer to create and coordinate the appropriate set of low-level reactions. <p> The timing requirements 6 Some researchers whose works falls into this category eschew the need for classical planning systems completely (e.g. [5]), while most (e.g. <ref> [15, 1, 30] </ref>) take a less dogmatic view of the relationship between the two paradigms, preferring instead to concentrate on determining the capabilities and limitations of various reactive approaches. 5 of such problem domains make the techniques of classical planning difficult, if not impossible, to ap-ply.
Reference: [16] <author> M. P. Georgeff and A. L. Lansky, </author> <title> "Reactive Reasoning and Planning," </title> <booktitle> in Proc. National Conf. on Artificial Intelligence, </booktitle> <pages> pp. 677-682, </pages> <month> July </month> <year> 1987. </year> <month> 19 </month>
Reference-contexts: One approach has been to essentially "precompile" traditional deliberative systems, in an effort to calculate the appropriate response to a broad set of environmental conditions ahead of time <ref> [31, 16, 20] </ref>. Such systems are founded upon the deductive correctness of conventional planners, and focus upon extending this paradigm to achieve timeliness. <p> A more complete treatment of the history of this research tradition can be found in <ref> [16] </ref> and [34]. With few exceptions, this early work in AI planning focused upon the sorts of action-sequencing problems that are known to be solvable by humans, and perhaps only a handful of other organisms, if any. <p> turned their attention to addressing the problems posed by dynamic, uncertain and/or unpredictable environments, which I shall simply refer to as "reactive systems." Several early papers came out of the same SRI laboratory where STRIPS had been used in one of the very first robot planning projects: Georgeff and Lansky <ref> [16] </ref> describe PRS, a system in which plan generation, monitoring and execution are interleaved, and in which it is possible to pursue multiple goals simultaneously. <p> Most of the research in reactive systems falls into one or more of the following four categories: 1. Demonstrating the efficacy of reaction in the absence of a deliberative component. 6 2. Pre-processing the constructs of a conventional planning model in an effort to achieve time liness (e.g. <ref> [16, 20, 31, 10] </ref>). 3. Developing formal models of reactive systems (e.g. [20, 23]). 4. Combining reactive circuitry with other, more established models, especially conventional planners (e.g. [2, 32, 24, 3, 27]). <p> However, the system has made no attempt to guarantee, or even to reason about, the adequacy of this response time. Similarly, Dean and Boddy's any-time algorithms [35] can be seen as guaranteeing adequate response at the expense of the quality of solution. Georgeff has shown <ref> [16] </ref> that, under certain assumptions, PRS can be guaranteed to notice an external event within a bounded amount of time. Again, while this is necessary to hard real-time performance, it hardly suffices.
Reference: [17] <author> C. Green, </author> <title> "The application of theorem proving to problem solving," </title> <booktitle> in Proc. Int'l Joint Conf. on Artificial Intelligence, Walker, editor, </booktitle> <pages> pp. 219-239. </pages> <address> Mitre Co., </address> <year> 1969. </year>
Reference-contexts: STRIPS, in turn, can be seen as a descendant of both the state-space search paradigm pioneered by Newell and Simon [26] in their GPS program, and the use of formal logic and the predicate calculus exemplified by Cordell Green in <ref> [17] </ref>. GPS introduced search as a general problem solving strategy, 4 and Green's formalism was an early attempt to extend and improve upon this method by using the methods of formal logic.
Reference: [18] <author> O. Gudmundsson, D. Mosse, K.-T. Ko, A. K. Agrawala, and S. K. Tripathi, "MARUTI: </author> <title> A Platform for Hard Real-Time Applications," in Mission Critical Operating Systems, </title> <editor> A. Agrawala, K. Gordon, and P. Hwang, editors, </editor> <publisher> IOS Press, </publisher> <year> 1991. </year>
Reference-contexts: whether other approaches might make the street crosser more likely to safely get to the other side of the road. 4.2 Pursuer/Evader In an effort to address the issue of ensuring timeliness, I developed a system based upon the DR model that ran on the Maruti hard real-time operating system <ref> [21, 18] </ref>. Maruti is designed to ensure that all processing resources will be available to a program as it needs them. The Maruti programming paradigm is based upon sets of periodic, cyclic processes, collectively know as jobs, which communicate via one-way message passing.
Reference: [19] <author> J. Hendler, </author> <title> "Planning in uncertainm Unpredictable or Changing Environments," </title> <type> Technical Report SRC TR 90-45, </type> <institution> Systems Research Center,University of Maryland, </institution> <year> 1990. </year>
Reference: [20] <author> L. P. Kaelbling, </author> <title> "Goals as Parallel Program Specifications," </title> <booktitle> in Proc. National Conf. on Artificial Intelligence, </booktitle> <pages> pp. 60-65, </pages> <year> 1988. </year>
Reference-contexts: One approach has been to essentially "precompile" traditional deliberative systems, in an effort to calculate the appropriate response to a broad set of environmental conditions ahead of time <ref> [31, 16, 20] </ref>. Such systems are founded upon the deductive correctness of conventional planners, and focus upon extending this paradigm to achieve timeliness. <p> planning systems. 2 Background People have long desired to construct machines that are capable of operating for long periods of time without human intervention, while performing tasks generally considered to require some amount of "intelligence." 2 Depending upon what behavior one is willing to consider intelligent, such 1 For example <ref> [20] </ref> points to the bounded depth of the GAPPS circuits, and [4] relies upon the nature of the hardware he employs to make claims of adequate "real-time" response. 2 I purposely refrain from offering a definition of what intelligence is, believing that it is quite impossible to construct a robust definition <p> I shall avoid using the term "reactive planning", except in this instance. 4 predetermined, and compiled into what is essentially a decision tree. Kaebling and Rosenschien <ref> [20] </ref> developed GAPPS, a formalism for constructing reactive circuits. While these systems have important differences, they can all be viewed as attempts to "speed-up" the classical paradigm. At the same time, several other researchers had begun to explore ways to achieve reactivity outside of the classical paradigm. <p> Most of the research in reactive systems falls into one or more of the following four categories: 1. Demonstrating the efficacy of reaction in the absence of a deliberative component. 6 2. Pre-processing the constructs of a conventional planning model in an effort to achieve time liness (e.g. <ref> [16, 20, 31, 10] </ref>). 3. Developing formal models of reactive systems (e.g. [20, 23]). 4. Combining reactive circuitry with other, more established models, especially conventional planners (e.g. [2, 32, 24, 3, 27]). <p> Demonstrating the efficacy of reaction in the absence of a deliberative component. 6 2. Pre-processing the constructs of a conventional planning model in an effort to achieve time liness (e.g. [16, 20, 31, 10]). 3. Developing formal models of reactive systems (e.g. <ref> [20, 23] </ref>). 4. Combining reactive circuitry with other, more established models, especially conventional planners (e.g. [2, 32, 24, 3, 27]). Much of the work in reactivity has been motivated by application areas where intelligent behavior in the presence of hard temporal deadlines and constraints is desirable. <p> Thus, the reactive circuits of GAPPS <ref> [20] </ref> represent a reasonable first step towards an intelligent real-time system, providing logically correct responses in a bounded response time. However, the system has made no attempt to guarantee, or even to reason about, the adequacy of this response time.
Reference: [21] <author> S. T. Levi, S. K. Tripathi, S. D. Carson, and A. k. Agrawala, </author> <title> "The MARUTI Hard Real-Time Operating System," </title> <journal> ACM Operating System Review, </journal> <volume> vol. 23, no. 3, </volume> , <month> June </month> <year> 1989. </year>
Reference-contexts: whether other approaches might make the street crosser more likely to safely get to the other side of the road. 4.2 Pursuer/Evader In an effort to address the issue of ensuring timeliness, I developed a system based upon the DR model that ran on the Maruti hard real-time operating system <ref> [21, 18] </ref>. Maruti is designed to ensure that all processing resources will be available to a program as it needs them. The Maruti programming paradigm is based upon sets of periodic, cyclic processes, collectively know as jobs, which communicate via one-way message passing.
Reference: [22] <author> D. M. Lyons, A. J. Hendriks, and S. Mehta, </author> <title> "Achieving Robustness by Casting Planning as Adaptation of a Reactive System," </title> <booktitle> in Proc. IEEE Int'l Conf. on Robotics and Automation, </booktitle> <pages> pp. 198-203, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: Lyons <ref> [23, 22] </ref> has developed an architecture, which he calls RS (for Robot Schemas), that is founded in process algebra, and is intended to facilitate reasoning about robot task plans for dynamic and unpredictable environments.
Reference: [23] <author> D. M. Lyons, </author> <title> "A Formal Model for Reactive Robot Plans," </title> <booktitle> in Proc. Rensselaer's 2nd Int'l Conf. on Computer Integrated Manufacturing, </booktitle> <pages> pp. 418-423, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: Demonstrating the efficacy of reaction in the absence of a deliberative component. 6 2. Pre-processing the constructs of a conventional planning model in an effort to achieve time liness (e.g. [16, 20, 31, 10]). 3. Developing formal models of reactive systems (e.g. <ref> [20, 23] </ref>). 4. Combining reactive circuitry with other, more established models, especially conventional planners (e.g. [2, 32, 24, 3, 27]). Much of the work in reactivity has been motivated by application areas where intelligent behavior in the presence of hard temporal deadlines and constraints is desirable. <p> Lyons <ref> [23, 22] </ref> has developed an architecture, which he calls RS (for Robot Schemas), that is founded in process algebra, and is intended to facilitate reasoning about robot task plans for dynamic and unpredictable environments.
Reference: [24] <author> P. Maes, </author> <title> "The Dynamics of Action Selection," </title> <booktitle> in Proceedings of IJCAI-89, </booktitle> <volume> volume 2, </volume> <pages> pp. 991-997, </pages> <year> 1989. </year>
Reference-contexts: Pre-processing the constructs of a conventional planning model in an effort to achieve time liness (e.g. [16, 20, 31, 10]). 3. Developing formal models of reactive systems (e.g. [20, 23]). 4. Combining reactive circuitry with other, more established models, especially conventional planners (e.g. <ref> [2, 32, 24, 3, 27] </ref>). Much of the work in reactivity has been motivated by application areas where intelligent behavior in the presence of hard temporal deadlines and constraints is desirable.
Reference: [25] <author> D. J. Musliner, </author> <title> CIRCA: The Cooperative Intelligent Real-Time Control Architecture, </title> <type> PhD thesis, </type> <institution> The University of Michigan, </institution> <address> Ann Arbor, MI, </address> <month> September </month> <year> 1993. </year> <note> Also available as CSE-TR-175-93. </note>
Reference-contexts: None of these approaches has directly addressed the issue of time. Almost no research has 1 been done to ensure that reactions occur in a timely fashion, or even to establish the conditions under which appropriate responses can be made. With the exception of <ref> [25] </ref>, claims of real-time performance are based upon either empirical testing or the restricted nature of the computations allowed in the computing model. 1 This may be sufficient for systems in which there is little or no penalty for delay, but in "mission-critical" systems, where timely response is critical, bounded response <p> However, this involves sacrificing the quality of solution (for example, by using some form of any-time algorithm), and does not at all address the need to determine exactly what is an adequate response time. Musliner's CIRCA program <ref> [25] </ref> integrates AI with hard real-time capabilities by separating the system into two functionally distinct sub-systems. A real-time component is responsible for ensuring that various competences meet their execution deadlines, and a AI component reasons about developing guaranteed control plans for the real-time component to execute.
Reference: [26] <author> A. Newell and H. Simon, </author> <title> "GPS: A Program that Simulates Human Thought," in Computers and Thought, </title> <editor> E. Feigenbaum and J. Feldman, editors, </editor> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1963. </year> <title> Probably the most influential paper establishing the "physical symbol system" computational paradigm as the underlying model of intelligence used by AI. </title>
Reference-contexts: STRIPS, in turn, can be seen as a descendant of both the state-space search paradigm pioneered by Newell and Simon <ref> [26] </ref> in their GPS program, and the use of formal logic and the predicate calculus exemplified by Cordell Green in [17].
Reference: [27] <author> D. W. Payton, J. K. Rosenblatt, and D. M. Keirsey, </author> <title> "Plan Guided Reaction," </title> <journal> IEEE Trans. Systems, Man, and Cybernetics, </journal> <volume> vol. 20, no. 6, </volume> <pages> pp. 1370-1382, </pages> <year> 1990. </year>
Reference-contexts: Pre-processing the constructs of a conventional planning model in an effort to achieve time liness (e.g. [16, 20, 31, 10]). 3. Developing formal models of reactive systems (e.g. [20, 23]). 4. Combining reactive circuitry with other, more established models, especially conventional planners (e.g. <ref> [2, 32, 24, 3, 27] </ref>). Much of the work in reactivity has been motivated by application areas where intelligent behavior in the presence of hard temporal deadlines and constraints is desirable.
Reference: [28] <author> E. D. Sacerdoti, </author> <title> "Planning in a Hierarchy of Abstraction Spaces," </title> <journal> Artificial Intelligence, </journal> <volume> vol. 5, no. 2, </volume> <pages> pp. 115-135, </pages> <year> 1974. </year>
Reference-contexts: Research issues included using abstraction to control the state-space explosion (e.g. ABSTRIPS <ref> [28] </ref>), detecting avoiding and controlling interactions between various plan elements [37, 29], representing the world, goals and actions (e.g. NOAH [29], SIPE [39], WARPLAN [38]), and the representation of time (e.g. DEVISER [36]).
Reference: [29] <author> E. D. Sacerdoti, </author> <title> "The Nonlinear Nature of Plans," </title> <booktitle> in Proc. Int'l Joint Conf. on Artificial Intelligence, </booktitle> <pages> pp. 206-214, </pages> <year> 1975. </year>
Reference-contexts: Research issues included using abstraction to control the state-space explosion (e.g. ABSTRIPS [28]), detecting avoiding and controlling interactions between various plan elements <ref> [37, 29] </ref>, representing the world, goals and actions (e.g. NOAH [29], SIPE [39], WARPLAN [38]), and the representation of time (e.g. DEVISER [36]). <p> Research issues included using abstraction to control the state-space explosion (e.g. ABSTRIPS [28]), detecting avoiding and controlling interactions between various plan elements [37, 29], representing the world, goals and actions (e.g. NOAH <ref> [29] </ref>, SIPE [39], WARPLAN [38]), and the representation of time (e.g. DEVISER [36]).
Reference: [30] <author> J. C. Sanborn and J. A. Hendler, </author> <title> "A Model of Reaction for Planning in Dynamic Environments," </title> <journal> Int'l Journal for Artificial Intelligence in Engineering, </journal> <volume> vol. 3, no. 2, </volume> <pages> pp. 95-102, </pages> <month> April </month> <year> 1988. </year>
Reference-contexts: Such systems have several advantages over classical planners: they generally do not require strong world models, and thus can function in the presence of uncertainty and incomplete knowledge of the problem domain; they do not make unrealistic static world assumptions <ref> [30] </ref> to simplify a search space; and perhaps most importantly, they are capable of making timely responses in a changing world. Timeliness is the essence of reaction, and it is clear that traditional, state-space search paradigms are ill-suited to addressing the needs of agents responding to a rapidly changing environment. <p> Others have chosen to abandon strong models of the environment. Several researchers (e.g. <ref> [1, 30, 15] </ref>) have demonstrated that the regularities of the world can be exploited to allow a relatively small set of behaviors to produce desirable global effects. <p> Brooks [7, 8] began a disciplined approach to the design and construction of mobile robots that dogmatically rejected the techniques of classical planning. Sanborn and Hendler <ref> [30] </ref> advocated a system where several cooperating processes, making strictly local computations and working without a strong model of the world, could be combined to produce desirable, dynamic behaviors. Firby [15] developed a system for modeling reactive circuitry, which, unlike PRS, made no attempt to project future world states. <p> The timing requirements 6 Some researchers whose works falls into this category eschew the need for classical planning systems completely (e.g. [5]), while most (e.g. <ref> [15, 1, 30] </ref>) take a less dogmatic view of the relationship between the two paradigms, preferring instead to concentrate on determining the capabilities and limitations of various reactive approaches. 5 of such problem domains make the techniques of classical planning difficult, if not impossible, to ap-ply. <p> The following sub-sections document the development of a series of situated agents, with each simulated domain increasing in problem-solving complexity. 4.1 Traffic World The roots of this research can be traced back to Sanborn and Hendler's Traffic World, which is illustrated in Figure 1 <ref> [30] </ref>. In this system a simulated "robot" was faced with the task of crossing a busy street. Cars all traveled in the same direction, with variable speeds and random arrival times. <p> Otherwise, it would either stop or move left, assuming that neither of these actions were inhibited. Action choice is thus controlled merely by constraining the set of possible actions. The reader is referred to <ref> [30] </ref> for additional details, but as this work motivated much of what follows, there are several salient points: * Monitors are responsible for examining changes in the world, and determining whether or not they reflect changes in the state of affairs, which we can think of as the agent's abstraction of
Reference: [31] <author> M. J. Schoppers, </author> <title> "Universal Plans for Reactive Robots in Unpredictable Environments," </title> <booktitle> in Proc. Int'l Joint Conf. on Artificial Intelligence, </booktitle> <pages> pp. 1039-1046, </pages> <year> 1987. </year> <month> 20 </month>
Reference-contexts: One approach has been to essentially "precompile" traditional deliberative systems, in an effort to calculate the appropriate response to a broad set of environmental conditions ahead of time <ref> [31, 16, 20] </ref>. Such systems are founded upon the deductive correctness of conventional planners, and focus upon extending this paradigm to achieve timeliness. <p> Schoppers <ref> [31] </ref> developed the idea of "universal plans," in which all of the possible relevant world states are anticipated during plan generation, the appropriate response is 5 Brooks [5] has claimed that this phrase is something of an oxymoron. <p> Most of the research in reactive systems falls into one or more of the following four categories: 1. Demonstrating the efficacy of reaction in the absence of a deliberative component. 6 2. Pre-processing the constructs of a conventional planning model in an effort to achieve time liness (e.g. <ref> [16, 20, 31, 10] </ref>). 3. Developing formal models of reactive systems (e.g. [20, 23]). 4. Combining reactive circuitry with other, more established models, especially conventional planners (e.g. [2, 32, 24, 3, 27]).
Reference: [32] <author> L. Spector, </author> <title> Supervenience in Dynamic World Planning, </title> <type> PhD thesis, </type> <institution> University of Maryland, College Park, MD, </institution> <month> May </month> <year> 1992. </year> <note> Also available as CS-TR-2899 and UMIACS-TR-92-55. </note>
Reference-contexts: Firby [15] developed a system for modeling reactive circuitry, which, unlike PRS, made no attempt to project future world states. These systems all rely heavily upon the system developer to create and coordinate the appropriate set of low-level reactions. Spector <ref> [32] </ref> designed a system in which a very large number of complex, goal-directed operators run concurrently, with a formal hierarchy for arbitrating operator conflicts and priority. Reactivity is achieved when lower-level operators are triggered by environmental conditions, and such operators will take precedence over those running to obtain higher-level goals. <p> Pre-processing the constructs of a conventional planning model in an effort to achieve time liness (e.g. [16, 20, 31, 10]). 3. Developing formal models of reactive systems (e.g. [20, 23]). 4. Combining reactive circuitry with other, more established models, especially conventional planners (e.g. <ref> [2, 32, 24, 3, 27] </ref>). Much of the work in reactivity has been motivated by application areas where intelligent behavior in the presence of hard temporal deadlines and constraints is desirable. <p> While the ability to respond to human commands is important in its own right, this capability will also be important in complex hierarchical control systems, such as that of <ref> [32] </ref>, where a low-level behavior must be amenable to control from a higher level. 11 * Using Maruti to Detect Resource Limitations Earlier systems were so simple that they did not tax the resources of the computers they were running on.
Reference: [33] <author> J. A. Stankovic, </author> <title> "Misconceptions about Real-Time Computing: A Serious Problem for Next-Generation Systems," </title> <journal> IEEE Computer, </journal> <volume> vol. 21, no. 10, </volume> <pages> pp. 10-19, </pages> <month> October </month> <year> 1988. </year>
Reference-contexts: That is, while these systems may be "fast," and they may be able to react in a strictly bounded amount of time, no evidence is offered that the capabilities in question are, in fact, "fast enough" (see <ref> [33] </ref> for a general discussion of real-time systems). In the real-time research community, a system that can be said to meet all of its temporal constraints in the worst case is said to be a "hard" real-time system.
Reference: [34] <editor> A. Tate, J. Hendler, and M. </editor> <title> Drummond, "A Review of AI Planning Techniques," </title> <note> in Readings in Planning, </note> <editor> J. Allen, J. Hendler, and A. Tate, </editor> <booktitle> editors, </booktitle> <pages> pp. 26-49, </pages> <publisher> Morgan Kaufman, </publisher> <year> 1990. </year>
Reference-contexts: A more complete treatment of the history of this research tradition can be found in [16] and <ref> [34] </ref>. With few exceptions, this early work in AI planning focused upon the sorts of action-sequencing problems that are known to be solvable by humans, and perhaps only a handful of other organisms, if any.
Reference: [35] <author> T.Dean and M.Boddy, </author> <title> "An Analysis of Time-Dependent Planning," </title> <booktitle> Proc. National Conf. on Artificial Intelligence, </booktitle> <pages> pp. 49-54, </pages> <year> 1988. </year>
Reference-contexts: However, the system has made no attempt to guarantee, or even to reason about, the adequacy of this response time. Similarly, Dean and Boddy's any-time algorithms <ref> [35] </ref> can be seen as guaranteeing adequate response at the expense of the quality of solution. Georgeff has shown [16] that, under certain assumptions, PRS can be guaranteed to notice an external event within a bounded amount of time.
Reference: [36] <author> S. A. Vere, </author> <title> "Planning in Time: Windows and Durations for Activities and Goals," </title> <journal> IEEE Trans. Pattern Analysis and Machine Intelligence, </journal> <volume> vol. PAMI-5, no. 3, </volume> <pages> pp. 246-267, </pages> <year> 1983. </year>
Reference-contexts: Research issues included using abstraction to control the state-space explosion (e.g. ABSTRIPS [28]), detecting avoiding and controlling interactions between various plan elements [37, 29], representing the world, goals and actions (e.g. NOAH [29], SIPE [39], WARPLAN [38]), and the representation of time (e.g. DEVISER <ref> [36] </ref>).
Reference: [37] <author> R. WALDINGER, </author> <title> "Achieving several goals simultaneously," </title> <booktitle> in Machine Intelligence 8, </booktitle> <editor> D. MICHIE, </editor> <booktitle> editor, </booktitle> <pages> pp. 94-136, </pages> <publisher> Ellis Horwood, </publisher> <address> Chichester, England, </address> <year> 1977. </year>
Reference-contexts: Research issues included using abstraction to control the state-space explosion (e.g. ABSTRIPS [28]), detecting avoiding and controlling interactions between various plan elements <ref> [37, 29] </ref>, representing the world, goals and actions (e.g. NOAH [29], SIPE [39], WARPLAN [38]), and the representation of time (e.g. DEVISER [36]).
Reference: [38] <author> D. Warren, "WARPLAN: </author> <title> A System for Generating Plans," </title> <type> Memo 76, </type> <institution> University of Edinburgh School of Artificial Intelligence, Dept. of Computational Logic, </institution> <month> June </month> <year> 1974. </year>
Reference-contexts: Research issues included using abstraction to control the state-space explosion (e.g. ABSTRIPS [28]), detecting avoiding and controlling interactions between various plan elements [37, 29], representing the world, goals and actions (e.g. NOAH [29], SIPE [39], WARPLAN <ref> [38] </ref>), and the representation of time (e.g. DEVISER [36]).
Reference: [39] <author> D. Wilkins, </author> <title> "Domain-Independent Planning: Representation and Plan Generation," </title> <journal> Artificial Intelligence, </journal> <volume> vol. 22, no. 3, </volume> <pages> pp. 269-301, </pages> <month> April </month> <year> 1984. </year> <month> 21 </month>
Reference-contexts: Research issues included using abstraction to control the state-space explosion (e.g. ABSTRIPS [28]), detecting avoiding and controlling interactions between various plan elements [37, 29], representing the world, goals and actions (e.g. NOAH [29], SIPE <ref> [39] </ref>, WARPLAN [38]), and the representation of time (e.g. DEVISER [36]).
References-found: 39

