URL: http://www.cs.toronto.edu/~avigal/mcg.ps
Refering-URL: http://www.cs.toronto.edu/~avigal/publications.html
Root-URL: http://www.cs.toronto.edu
Email: e-mail: avigal@cs.toronto.edu  
Title: Modelling Cooperation among Information Systems using Control Elements  
Author: Avigdor Gal 
Address: Toronto  
Affiliation: Department of Computer Science University of  
Abstract: Next generation information systems will be cooperative in nature, with data dependencies and interoperability relationships. In this paper we report on the use of active database technology in the design of control elements which are particularly well suited for handling unreliable network technologies and autonomous decisions of availability of information systems. A control element is combined of a set of rules and an executable data structure that consists of operations for cooperating among information systems. Manipulating control elements by using local transformations increases the flexibility of information systems by allowing multiple paths for receiving data and activating consistency maintenance operations. We provide the substitute method as an example of manipulating control elements, aimed at minimizing the interaction of an information system with other information systems, and at increasing parallelism. Control elements are implemented as part of the CoopWARE environment for supporting cooperation among information systems. keywords: cooperative information systems, active databases. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> P. Attie, M. Singh, A. Sheth, and M. Rusinkiewicz. </author> <title> Specifying and enforcing intertask dependencies. </title> <booktitle> In Proceedings of the 19th Intl Conference on Very Large Data Bases, </booktitle> <address> Dublin, Ireland, </address> <month> August </month> <year> 1993. </year>
Reference-contexts: The control element of an application is utilized at run-time to control the execution process. In this paper we present an execution process that is based on [10]. However, other execution models (e.g. the one presented in <ref> [1] </ref>) can also be adopted for our purposes. An execution starts with the activation of either a direct operation given by the user or by an external event, detected by sensors.
Reference: [2] <author> E. Baralis, S. Ceri, and S. Paraboschi. </author> <title> Improved rule analysis by means of triggering and activation graphs. </title> <editor> In T. Sellis, editor, </editor> <title> Rules in Database Systems, </title> <booktitle> Lecture Notes on Computer Science, </booktitle> <volume> 985, </volume> <pages> pages 165-181. </pages> <publisher> Springer Verlag, </publisher> <year> 1995. </year>
Reference: [3] <author> D. Barbara and H. Garcia-Molina. </author> <title> The Demarcation protocol: A technique for maintaining arithmetic. </title> <booktitle> In Extending Database Technology Conference, </booktitle> <volume> LNCS 580, </volume> <pages> pages 373-388, </pages> <address> Vienna, </address> <month> March </month> <year> 1992. </year>
Reference-contexts: To the best of our knowledge, none of the models and methods related with this problem (e.g. the Demarcation protocol <ref> [3] </ref>, and production rules in parallel and distributed databases [7]) is as general and as flexible as the control elements model proposed in this paper. Control elements are implemented as part of the CoopWARE environment [16] for supporting cooperation among information systems.
Reference: [4] <editor> M. Brodie, M. Jarke, and M. Papazoglou, editors. </editor> <booktitle> Proceedings Second International Conference on Cooperative Information Systems, </booktitle> <address> Toronto, </address> <month> May </month> <year> 1994. </year>
Reference: [5] <author> S. Ceri and G. Pelagatti. </author> <title> Distributed Databases: </title> <booktitle> Principles and Systems. </booktitle> <publisher> Mcgraw-Hill, </publisher> <year> 1984. </year>
Reference-contexts: The research varies from global information systems [13] and multidatabases (e.g. [19]), that seek to support global updates, while preserving site autonomy to distributed databases <ref> [5] </ref>, which do not have full autonomy of their data.
Reference: [6] <author> S. Ceri and J. Widom. </author> <title> Deriving production rules for constraint maintenance. </title> <booktitle> In Proceedings of the 16th VLDB Conference, </booktitle> <pages> pages 566-577, </pages> <month> Aug </month> <year> 1990. </year>
Reference-contexts: As a concrete motivating case study, we use the following database application, based on the Power Distribution Design System, as presented in <ref> [6] </ref>. Plants supply power to users, possibly through intermediate stations (or nodes). The vehicle for power distribution is a set of wires that connect plants, users and stations. Multiple wires may be placed between any two points, and each set of wires is enclosed within a tube.
Reference: [7] <author> S. Ceri and J. Widom. </author> <title> Production rules in parallel and distributed database environments. </title> <booktitle> In Proceedings of the 18th Conference on Very Large Databases, </booktitle> <publisher> Morgan Kaufman pubs. </publisher> <address> (Los Altos CA), Vancouver, </address> <month> August </month> <year> 1992. </year>
Reference-contexts: To the best of our knowledge, none of the models and methods related with this problem (e.g. the Demarcation protocol [3], and production rules in parallel and distributed databases <ref> [7] </ref>) is as general and as flexible as the control elements model proposed in this paper. Control elements are implemented as part of the CoopWARE environment [16] for supporting cooperation among information systems. <p> Unless specified otherwise in the operation clause, a change in any instance of any of the properties given in the expression activates the operation. It is natural to assume that operations reside at the same site as the affected data <ref> [7] </ref>. For example, the capacity of a tube (site ff) is the data derived from the cross sections of the wires it contains (site fi). Consequently, operation (o 6 ) that derives the capacity of a tube is located at site ff and not at site fi.
Reference: [8] <author> O. Etzion and B. Dahav. </author> <title> Self-stabilization in databse consistency maintenance. </title> <booktitle> In Proceedings of the programming challanges workshop, held in conjunction with ER'96, </booktitle> <month> Oct </month> <year> 1996. </year>
Reference: [9] <author> A. Gal. </author> <title> TALE | A Temporal Active Language and Execution Model. </title> <type> PhD thesis, </type> <institution> Technion|Israel Institute of Technology, Tech-nion City, Haifa, Israel, </institution> <month> May </month> <year> 1995. </year> <note> Available through the author's WWW home page, http://www.cs.toronto.edu/avigal. </note>
Reference-contexts: The operation clauses given by the user are parsed to generate a control graph (CG (O) = (V; E)), an executable data structure that monitors the update process of an active database <ref> [9] </ref> and coordinates the activation of the information systems [16]. The control graph consists of a set of nodes (V ), representing the application's events and operations. The set of edges (E = (T R; RQ)) denote relationships through which these elements interact. <p> For example, (o 0 16 ) is a user update operation of the property Wire-To. Single circled operations are located at site ff, double circled operations are located at site fi and triple circled operations are located at site fl. Based on <ref> [9] </ref>, the time-complexity of the control graph's generation is bounded by O (max ((jVj + jEj), (jVj jEj)). The number of nodes and edges of a control graph reflects the number of operations and the relationships among them, rather than the number of objects participating in the execution process. <p> Therefore, (o 3 ) will not be activated before both (o 0 0 16 ) have been successfully executed. Given the above description of the execution model, two direct conclusions follow, based on <ref> [9] </ref>. The following conclusions clarify the central role of a control element in coordinating the execution process of an information system: 1. Let hO; CG (O)i be a control element.
Reference: [10] <author> A. Gal, O. Etzion, and A. Segev. </author> <title> TALE | a temporal active language and execution model. </title> <editor> In P. Constantopoulos, J. Mylopoulos, and Y. Vas-siliou, editors, </editor> <booktitle> Advanced Information Systems Engineering, </booktitle> <pages> pages 60-81. </pages> <publisher> Springer, </publisher> <month> May </month> <year> 1996. </year>
Reference-contexts: The use of active database technology, including the notion of a dependency graph <ref> [10] </ref> and an active triggering of operations is unique in the research area of cooperation among information systems. <p> Control elements are implemented as part of the CoopWARE environment [16] for supporting cooperation among information systems. CoopWARE (Cooperation With Active Relationships Enforcement) is an integration architecture that provides a generic framework for information exchange and coordination among a variety of existing software systems, based on active database technology <ref> [10] </ref>. As a concrete motivating case study, we use the following database application, based on the Power Distribution Design System, as presented in [6]. Plants supply power to users, possibly through intermediate stations (or nodes). <p> , is 2 relies on is 1 or is 1 relies on is 2 w.r.t. o j . 2.2 Control elements and the execu tion process In this section we define control elements and provide an overview of the global execution process of a set of information systems, based on <ref> [10] </ref>, using control elements. Several properties of control elements and the execution process are also provided. In particular, we define the notion of equivalent control elements, based on the application state resulting from the execution process. <p> The control element of an application is utilized at run-time to control the execution process. In this paper we present an execution process that is based on <ref> [10] </ref>. However, other execution models (e.g. the one presented in [1]) can also be adopted for our purposes. An execution starts with the activation of either a direct operation given by the user or by an external event, detected by sensors.
Reference: [11] <author> A. Gupta and J. Widom. </author> <title> Local verification of global integrity constraints in distributed databases. </title> <booktitle> In 19 ACM SIGMOD Conf. on the Management of Data, </booktitle> <address> Washington,DC, </address> <month> May </month> <year> 1993. </year>
Reference: [12] <author> S. Hudson and R. King. CACTIS: </author> <title> A database system for specification functionality defined data. </title> <booktitle> In Proceedings of the IEEE OOBDS Workshop, </booktitle> <pages> pages 26-37, </pages> <month> Sep </month> <year> 1986. </year>
Reference-contexts: For example, consider the control graph of Figure 1; if operations (o 1 ) and (o 0 are activated, then (o 7 ) should be activated only after both of its predecessors are completed, to preserve efficiency <ref> [12] </ref>. However, in some cases it is possible to maintain efficient processing of operations while increasing the level of parallelism of the execution flow.
Reference: [13] <author> A.Y. Levy, D. Srivastava, and T. Kirk. </author> <title> Data model and query evaluation in global information systems. </title> <journal> Journal of Intelligent Information Systems, </journal> <volume> 5 </volume> <pages> 121-143, </pages> <year> 1995. </year>
Reference-contexts: While a more recent example involves the cooperation among information systems through the World Wide Web [14], several research areas have been researching this problem for more than a decade. The research varies from global information systems <ref> [13] </ref> and multidatabases (e.g. [19]), that seek to support global updates, while preserving site autonomy to distributed databases [5], which do not have full autonomy of their data.
Reference: [14] <author> A.O. Mendelzon, G.A. Mihaila, and T. Milo. </author> <title> Querying the world wide web. </title> <booktitle> In Proceedings Conference on Parallel and Distributed Information Systems (PDIS), </booktitle> <year> 1996. </year>
Reference-contexts: While a more recent example involves the cooperation among information systems through the World Wide Web <ref> [14] </ref>, several research areas have been researching this problem for more than a decade. The research varies from global information systems [13] and multidatabases (e.g. [19]), that seek to support global updates, while preserving site autonomy to distributed databases [5], which do not have full autonomy of their data.
Reference: [15] <author> J. Mylopoulos, A. Borgida, M. Jarke, and M. Koubarakis. </author> <title> Telos: Representing knowledge about information systems. </title> <journal> ACM Transactions on Information Systems, </journal> <month> October </month> <year> 1990. </year>
Reference: [16] <author> J. Mylopoulos, A. Gal, K. Kontogiannis, and M. Stanley. </author> <title> A generic integration architecture for cooperative information systems. </title> <booktitle> In Proc. </booktitle> <address> CoopIS'96, Brussels, Belgium, </address> <month> June </month> <year> 1996. </year>
Reference-contexts: Control elements are implemented as part of the CoopWARE environment <ref> [16] </ref> for supporting cooperation among information systems. CoopWARE (Cooperation With Active Relationships Enforcement) is an integration architecture that provides a generic framework for information exchange and coordination among a variety of existing software systems, based on active database technology [10]. <p> The operation clauses given by the user are parsed to generate a control graph (CG (O) = (V; E)), an executable data structure that monitors the update process of an active database [9] and coordinates the activation of the information systems <ref> [16] </ref>. The control graph consists of a set of nodes (V ), representing the application's events and operations. The set of edges (E = (T R; RQ)) denote relationships through which these elements interact. There are two types of relationships, namely triggering relationships (T R) and request relationships (RQ). <p> These methods can serve as a decision support mechanism, where the possible changes are introduced to the decision maker, who de cides upon the appropriate changes, based on some utility function. Control elements are currently being implemented as an executable data structure of a coordinator in the CoopWARE environment <ref> [16] </ref> for supporting cooperation among information systems. A prototype of the coordinator was implemented in C++, using the XLc compiler and a TCL/TK based interface.
Reference: [17] <author> E. Pitoura and B. Bhargava. </author> <title> A framework for providing consistent and recoverable agent-based access to heterogeneous mobile databases. </title> <journal> ACM SIGMOD Record, </journal> <volume> 24(3) </volume> <pages> 44-49, </pages> <month> Sep </month> <year> 1995. </year>
Reference: [18] <author> W. Reisig. </author> <title> Petri Nets: An Introduction. </title> <publisher> Springer, </publisher> <address> Berlin, </address> <year> 1985. </year>
Reference-contexts: While the initial prototype consists of a direct implementation of active database rules as part of the information repository, we are currently at the process of evaluating well established control models (e.g. Petri Nets <ref> [18] </ref>) as an underlying model for implementing and manipulating control elements. Acknowledgments The CoopWARE project is a joint work with John Mylopoulos, Kostas Kontogiannis and Martin Stan-ley, which takes place at the Department of Computer Science at the University of Toronto.
Reference: [19] <author> M. Rusinkiewicz et al. OMNIBASE: </author> <title> Design and implementation of a multidatabase system. </title> <booktitle> In Proceedings 1st International Conference on Parallel and Distributed Processing, </booktitle> <pages> pages 162-169, </pages> <address> Dallas, TX, </address> <month> May </month> <year> 1989. </year>
Reference-contexts: While a more recent example involves the cooperation among information systems through the World Wide Web [14], several research areas have been researching this problem for more than a decade. The research varies from global information systems [13] and multidatabases (e.g. <ref> [19] </ref>), that seek to support global updates, while preserving site autonomy to distributed databases [5], which do not have full autonomy of their data.
Reference: [20] <author> A. Sheth, M. Rusinkiewicz, and G. Karabatis. </author> <title> Using polytransactions to manage interdependent data. </title> <editor> In A. Elmagarmid, editor, </editor> <title> Transaction Models for Advanced Database Applications, chapter 14. </title> <publisher> Morgan Kaufmann, </publisher> <year> 1992. </year>
Reference-contexts: Otherwise, the operation waits for the next triggering. This 1 The implications of the transaction notion in general and transacion failure in particular, in a cooperative information systems environment, are out of the scope of this paper. An example of such a transaction model is the Polytransacion model <ref> [20] </ref>. mode of execution guarantees that each activated op-eration is scheduled for execution only once. For example, assume that in the case study a new wire is added. The properties of the new instance of the Wire class are updated (operations (o 0 0 20 )).
Reference: [21] <author> A. Silberschatz, M. Stonebraker, and J. Ullman. </author> <title> Database research: Achievements and opportunities into the 21st. </title> <journal> ACM SIGMOD Record, </journal> <volume> 25(1) </volume> <pages> 52-63, </pages> <year> 1996. </year>
Reference-contexts: The cooperation among information systems is not a new problem, yet the ever-changing environment in which information systems cooperate positioned the problem of information distribution as one of the key-issues in the NSF Workshop on the Future of Database Systems Research <ref> [21] </ref>. While a more recent example involves the cooperation among information systems through the World Wide Web [14], several research areas have been researching this problem for more than a decade.
Reference: [22] <author> N. Soparkar and A. Silberschatz. </author> <title> Data-value partitioning and virtual messages. </title> <booktitle> In ACM SIGACT-SIGMOD Symp. on Principles of Database Systems, </booktitle> <address> Nashville, </address> <month> April </month> <year> 1990. </year>
References-found: 22

