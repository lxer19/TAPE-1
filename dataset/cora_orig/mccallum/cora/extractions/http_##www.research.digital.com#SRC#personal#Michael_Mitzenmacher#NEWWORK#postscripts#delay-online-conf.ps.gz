URL: http://www.research.digital.com/SRC/personal/Michael_Mitzenmacher/NEWWORK/postscripts/delay-online-conf.ps.gz
Refering-URL: http://www.research.digital.com/SRC/personal/Michael_Mitzenmacher/NEWWORK/papers.html
Root-URL: http://www.research.digital.com
Email: E-mail:  E-mail: moses@cs.stanford.edu.  E-mail: michaelm@pa.dec.com.  
Title: Delayed Information and Action in On-Line Algorithms  
Author: Susanne Albers Moses Charikar Michael Mitzenmacher 
Note: Supported by a Stanford Graduate Fellowship, an ARO MURI Grant DAAH04-96-1-0007 and NSF Award CCR-9357849, with matching funds from IBM, Schlumberger Foundation, Shell Foundation, and Xerox Corporation.  
Web: albers@mpi-sb.mpg.de  
Address: Address: Im Stadtwald, 66123 Saarbrucken, Germany.  CA 94305, USA.  130 Lytton Avenue, Palo Alto, CA 94301, USA.  
Affiliation: Freie Universitat Berlin and Max-Planck-Institut fur Informatik.  Computer Science Department, Stanford University,  Digital Systems Research Center,  
Abstract: Most on-line analysis assumes that, at each time step, all relevant information up to that time step is available and a decision has an immediate effect. In many on-line problems, however, the time relevant information is available and the time a decision has an effect may be decoupled. For example, when making an investment, one might not have completely up-to-date information on market prices. Similarly, a buy or sell order might only be executed some time later in the future. We introduce and explore natural delayed models for several well-known on-line problems. Our analyses demonstrate the importance of considering timeliness in determining the competitive ratio of an on-line algorithm. For many problems, we demonstrate that there exist algorithms with small competitive ratios even when large delays affect the timeliness of infor mation and the effect of decisions. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Albers. </author> <title> Better Bounds for Online Scheduling. </title> <booktitle> In Proc. 29th Ann. ACM Symp. on Theory of Computing, </booktitle> <pages> pp. 130-139, </pages> <year> 1996. </year>
Reference: [2] <author> S. Albers, B. von Stengel and R. Werchner. </author> <title> A Combined BIT and TIMESTAMP algorithm for the List Update Problem. </title> <journal> Information Processing Letters, </journal> <volume> 56 </volume> <pages> 135-139, </pages> <year> 1995. </year>
Reference: [3] <author> N. Alon, G. Kalai, M. Ricklin, and L. Stockmeyer. </author> <title> Lower Bounds on the Competitive Ratio for Mobile User Tracking and Distributed Job Scheduling. </title> <booktitle> In Proc. 33rd Ann. Symp. on the Foundations of Computer Science, </booktitle> <pages> pp. 334-343, </pages> <year> 1992. </year>
Reference: [4] <author> B. Awerbuch, Y. Azar, and Y. Bartal. </author> <title> On-line Generalized Steiner Problem. </title> <booktitle> In Proc. 7th Ann. ACM-SIAM Symp. on Discrete Algorithms. </booktitle> <pages> pp. 68-74, </pages> <year> 1996. </year>
Reference-contexts: Conveniently, we can demonstrate how to find a competitive algorithm for a relaxed metrical task system in the delayed action model, given a competitive algorithm for the associated metrical task system. Hence we can effectively handle an entire general class of problems, generalizing the work of <ref> [4, 9] </ref> on relaxed metrical task systems to the setting of delayed actions. We begin by defining metrical task systems [14], and then define relaxed metrical task systems. Here we follow [9]. <p> Hence if A is a c competitive algorithm for the relaxed task system without delays, then A is a c (1 + d D ) competitive algorithm for the relaxed task system in the delayed model. Since the results of <ref> [4, 9] </ref> show how to turn competitive algorithms for metrical task system into competitive algorithms for relaxed metrical task systems, we now have a means of turning competitive algorithms for metrical task system into competitive algorithms for relaxed metrical task system in the delayed model. <p> In fact, it is possible to improve on this observation and get better competitive ratios by modifying the algorithm and/or the analysis of <ref> [4, 9] </ref> to tailor them to the delayed model. We state some results in the accompanying appendix; their proofs (which are long but not complex) will appear in the full version. 11
Reference: [5] <author> B. Awerbuch, Y. Azar, A. Fiat, and T. Leighton. </author> <title> Making Commitments in the Face of Uncertainty: How to Pick a Winner Almost Every Time. </title> <booktitle> In Proc. 28th Ann. ACM Symp. on Theory of Computing, </booktitle> <pages> pp. 519-530. </pages>
Reference: [6] <author> B. Awerbuch, Y. Bartal and A. Fiat. </author> <title> Competitive Distributed File Allocation. </title> <booktitle> In Proc. 25 ACM Symp. on Theory of Computing, </booktitle> <pages> pp. 164-173, </pages> <year> 1993. </year>
Reference: [7] <author> B. Awerbuch, S. Kutten and D. Peleg. </author> <title> Competitive Distributed Scheduling. </title> <booktitle> In Proc. 24th Ann. ACM Symp. on Theory of Computing, </booktitle> <pages> pp. 571-580, </pages> . 
Reference: [8] <author> Y. Azar, Y. Bartal, E. Feuerstein, A. Fiat, S. Leonardi and A. Rosen. </author> <title> On Capital Investment. </title> <booktitle> In Proc. 23rd International Colloquium on Automata, Languages, and Programming (ICALP96), Springer LNCS, </booktitle> <volume> Volume 1099, </volume> <pages> pp. 514-525, </pages> <year> 1996. </year>
Reference: [9] <author> Y. Bartal, M. Charikar, and P. Indyk. </author> <title> On Page Migration and Other Relaxed Task Systems. </title> <booktitle> In Proc. 8th Ann. ACM-SIAM Symp. on Discrete Algorithms. </booktitle> <pages> pp. 43-52, </pages> <year> 1997. </year>
Reference-contexts: introduction. Another example of a relaxed metrical task system is the k-page migration problem 9 <ref> [9, 13] </ref>. For this problem, we wish to keep k copies of a page available on a network. When a processor wishes to access a page, it requests a copy from a processor holding that page. The communication cost incurred is proportional to the distance between processors. <p> Conveniently, we can demonstrate how to find a competitive algorithm for a relaxed metrical task system in the delayed action model, given a competitive algorithm for the associated metrical task system. Hence we can effectively handle an entire general class of problems, generalizing the work of <ref> [4, 9] </ref> on relaxed metrical task systems to the setting of delayed actions. We begin by defining metrical task systems [14], and then define relaxed metrical task systems. Here we follow [9]. <p> Hence we can effectively handle an entire general class of problems, generalizing the work of [4, 9] on relaxed metrical task systems to the setting of delayed actions. We begin by defining metrical task systems [14], and then define relaxed metrical task systems. Here we follow <ref> [9] </ref>. Definition 14 A task system, P, consists of a set of configurations (or states) C and a distance function between any two configurations C 1 ; C 2 2 C, denoted dist (C 1 ; C 2 ). (this is the move cost between the configurations). <p> Hence if A is a c competitive algorithm for the relaxed task system without delays, then A is a c (1 + d D ) competitive algorithm for the relaxed task system in the delayed model. Since the results of <ref> [4, 9] </ref> show how to turn competitive algorithms for metrical task system into competitive algorithms for relaxed metrical task systems, we now have a means of turning competitive algorithms for metrical task system into competitive algorithms for relaxed metrical task system in the delayed model. <p> In fact, it is possible to improve on this observation and get better competitive ratios by modifying the algorithm and/or the analysis of <ref> [4, 9] </ref> to tailor them to the delayed model. We state some results in the accompanying appendix; their proofs (which are long but not complex) will appear in the full version. 11
Reference: [10] <author> Y. Bartal, J. Byers, and D. Raz, </author> <title> Global Optimization Using Local Information with Applications to Flow Control. </title> <booktitle> In Proc. 38th Ann. Symp. on Foundations of Computer Science, </booktitle> <pages> pp. 303-312, </pages> <year> 1997. </year>
Reference: [11] <author> Y. Bartal, A. Fiat, and Y. Rabani, </author> <title> Competitive Algorithms for Distributed Data Management. </title> <booktitle> In Proc. 24th Ann. ACM Symp. on the Theory of Computing, </booktitle> <pages> pp. 39-49, </pages> <year> 1992. </year>
Reference: [12] <author> S. Ben-David and A. Borodin. </author> <title> A new measure for the study of on-line algorithms. </title> <journal> Algorithmica, </journal> <volume> 11 </volume> <pages> 73-91, </pages> <year> 1994. </year>
Reference: [13] <author> D.L. Black and D.D. Sleator. </author> <title> Competitive Algorithms for Replication and Migration Problems. </title> <type> Technical Report CMU-CS-89-201, </type> <institution> Department of Computer Science, Carnegie-Mellon University, </institution> <year> 1989. </year>
Reference-contexts: introduction. Another example of a relaxed metrical task system is the k-page migration problem 9 <ref> [9, 13] </ref>. For this problem, we wish to keep k copies of a page available on a network. When a processor wishes to access a page, it requests a copy from a processor holding that page. The communication cost incurred is proportional to the distance between processors.
Reference: [14] <author> A. Borodin, N. Linial, and M. Saks, </author> <title> An Optimal On-Line Algorithm for Metrical Task Systems. </title> <booktitle> In Proc. 19th Ann. ACM Symp on Theory of Computing, </booktitle> <pages> pp. 373-382, </pages> <month> May </month> <year> 1987. </year>
Reference-contexts: Hence we can effectively handle an entire general class of problems, generalizing the work of [4, 9] on relaxed metrical task systems to the setting of delayed actions. We begin by defining metrical task systems <ref> [14] </ref>, and then define relaxed metrical task systems. Here we follow [9].
Reference: [15] <author> A. Chou, J. Cooperstock, R. El-Yaniv, M. Klugerman, and T. Leighton, </author> <title> The Statistical Adversary Allows Optimal Money-Making Trading Schems. </title> <booktitle> In Proc. 6th Ann. ACM-SIAM Symp. on Discrete Algorithms, </booktitle> <pages> pp. 467-476, </pages> <year> 1995. </year>
Reference: [16] <author> T.M. </author> <title> Cover. Universal Portfolios. </title> <journal> Mathematical Finance, </journal> <volume> 1 </volume> <pages> 1-29, </pages> <year> 1991. </year>
Reference: [17] <author> X. Deng and C.H. Papadimitriou. </author> <title> Competitive Distributed Decision-Making. </title> <booktitle> In Proc. 12th IFIP Congress, </booktitle> <pages> pp. 350-356, </pages> <year> 1992. </year>
Reference: [18] <author> R. El-Yaniv, A. Fiat, R. Karp, and G. Turpin, </author> <title> Competitive Analysis of Financial Games. </title> <booktitle> In Proc. 33rd Ann. Symp. on Foundations of Computer Science, </booktitle> <pages> pp. 327-333, </pages> <year> 1992. </year>
Reference: [19] <author> R. El-Yaniv, A. Fiat, R. Karp, and G. Turpin, </author> <title> Optimal Search and One-Way Trading Online Algorithms. </title> <type> manuscript, </type> <year> 1997. </year> <note> i </note>
Reference: [20] <author> A. Fiat, Y. Mansour, A. Rosen, and O. Waarts. </author> <title> Competitive Access Time via Dynamic Storage Rear--rangement. </title> <booktitle> In Proc. 36th Ann. Symp. on Foundations of Computer Science. </booktitle> <pages> pp. 392-403, </pages> <year> 1995. </year>
Reference: [21] <author> R.L. Graham. </author> <title> Bounds for certain multi-processing anomalies. </title> <journal> Bell System Technical Journal, </journal> <volume> 45: </volume> <pages> 1563-1581, </pages> <year> 1966. </year>
Reference: [22] <author> M.M. Halldorsson and M. Szegedy. </author> <title> Lower bounds for on-line graph coloring. </title> <booktitle> In Proc. 3rd Ann. ACM-SIAM Symp. on Discrete Algorithms, </booktitle> <pages> pp. 211-216, </pages> <year> 1992. </year>
Reference: [23] <author> J.C. Hull. </author> <title> Options, Futures, and other Derivative Securities: Second Edition, </title> <publisher> Prentice-Hall, Inc, </publisher> <year> 1993. </year>
Reference: [24] <author> S. Irani. </author> <title> Coloring inductive graphs on-line. </title> <journal> Algorithmica, </journal> <volume> 11 </volume> <pages> 53-62, </pages> <year> 1994. </year>
Reference: [25] <author> S. Irani and Y. Rabani. </author> <title> On the Value of Information in Coordination Games. </title> <booktitle> In Proc. 34th Ann. Symp. on Foundations of Computer Science, </booktitle> <pages> pp. 12-21, </pages> <year> 1993. </year>
Reference: [26] <author> R.M. Karp. </author> <title> On-line Algorithms Versus Off-line Algorithms: How Much is it Worth to Know the Future?. </title> <booktitle> In Proc. World Computer Congress, </booktitle> <year> 1992. </year>
Reference: [27] <author> R. Karp and P. Raghavan. </author> <title> From a personal communication cited in [35]. </title>
Reference: [28] <author> E. Koutsoupias and C.H. Papadimitriou. </author> <title> Beyond competitive analysis. </title> <booktitle> In In Proc. 35th Ann. Symp. on Foundations of Computer Science, </booktitle> <pages> pp. 394-400, </pages> <year> 1994. </year>
Reference: [29] <author> M.S. Manasse, L.A. McGeoch, and D.D. Sleator, </author> <title> Competitive Algorithms for On-Line Problems. </title> <booktitle> In Proc. 20th Ann. ACM Symp. on Theory of Computing, </booktitle> <pages> pp. 322-333, </pages> <year> 1988. </year>
Reference: [30] <author> M. Mitzenmacher. </author> <title> How Useful is Old Information ? In Proc. </title> <booktitle> 16th Ann. ACM Symp. on Principles of Distributed Computing, </booktitle> <pages> pp. 83-91, </pages> <year> 1997. </year>
Reference: [31] <author> R. Mirchandaney, D. Towsley, and J. A. Stankovic, </author> <title> Analysis Effects of Delays on Load Sharing. </title> <journal> IEEE Transactions on Computers, </journal> <volume> Vol. 38, </volume> <pages> pp. 1513-1525, </pages> <year> 1989. </year>
Reference: [32] <author> C.H. Papadimitriou and M. Yannakakis. </author> <title> On the Value of Information in Distributed Decision Making. </title> <booktitle> In Proc. 25th ACM Symp. on Principles of Distributed Computing, </booktitle> <pages> pp. 61-64, </pages> <year> 1991. </year>
Reference: [33] <author> C.H. Papadimitriou and M. Yannakakis. </author> <title> Linear Programming Without the Matrix. </title> <booktitle> In Proc. 25th ACM Symp. on Theory of Computing, </booktitle> <pages> pp. 121-129, </pages> <year> 1993. </year>
Reference: [34] <author> P. Raghavan. </author> <title> A Statistical Adversary for On-Line Algorithms. </title> <booktitle> On-Line Algorithms DIMACS Series in Discrete Mathematics and Theoretical Computer Science, </booktitle> <pages> pp. 79-83, </pages> <year> 1991. </year>
Reference: [35] <author> N. Reingold, J. Westbrook, and D.D. Sleator. </author> <title> Randomized competitive algorithms for the list update problem. </title> <journal> Algorithmica, </journal> <volume> 11 </volume> <pages> 15-32, </pages> <year> 1994. </year>
Reference: [36] <author> D. Sleator and R.E. Tarjan, </author> <title> Amortized Efficiency of List Update and Paging Rules. </title> <journal> Communications of ACM, </journal> <volume> 28(2) </volume> <pages> 202-208, </pages> <year> 1985. </year>
Reference: [37] <author> D. Towsley and R. Mirchandaney. </author> <title> The Effect of Communication Delays on the Performance of Load Balancing Policies in Distributed Systems. </title> <booktitle> In Proc. Second International MCPR Workshop, </booktitle> <pages> pp. 213-226, </pages> <year> 1988. </year>
Reference: [38] <author> A.C.-C. Yao. </author> <title> Probabilistic computations: Towards a unified measure of complexity. </title> <booktitle> In Proc. 17th Ann. Symp. on Foundations of Computer Science, </booktitle> <pages> pages 222-227, </pages> <year> 1977. </year> <title> ii </title>
References-found: 38

