URL: ftp://ftp.cse.ucsc.edu/pub/tr/ucsc-crl-97-03.ps.Z
Refering-URL: ftp://ftp.cse.ucsc.edu/pub/tr/README.html
Root-URL: http://www.cse.ucsc.edu
Title: Timing-Driven Floorplanning with Intermediate Buffer Insertion  
Author: Maggie Z.-W. Kang Wayne W.-M. Dai Tom Dillinger David LaPotin 
Address: Santa Cruz, CA 95064 USA  
Affiliation: Baskin Center for Computer Engineering Information Sciences University of California, Santa Cruz  
Date: February 14, 1997  
Pubnum: UCSC-CRL-97-03  
Abstract-found: 0
Intro-found: 1
Reference: [2] <author> C. L. Berman, J. L. Carter, and K. F. Day. </author> <title> The fanout problem: From theory to practice. </title> <booktitle> In Proc. 1989 Decennial Caltech Conf., </booktitle> <pages> pages 69-99, </pages> <year> 1989. </year>
Reference-contexts: In typical deep submicron designs, more than 60% of the paths in a timing critical design may be critical [24]. Intermediate buffer insertion creates another degree of freedom for interconnect optimization. Early works on fanout optimization problem focused on the construction of buffered trees in logic synthesis <ref> [2, 22, 23] </ref> without taking into account the wiring effect. Recently, layout driven fanout optimization have been proposed [14, 25]. For a given steiner tree, a polynomial time dynamic programming algorithm was proposed in [26] for the delay-optimal buffer insertion problem.
Reference: [3] <author> K. D. Boese, A. B. Kahng, B. A. McCoy, and G. Robins. </author> <title> Rectilinear steiner trees with minimum elmore delay. </title> <booktitle> In Proc. 31st ACM/IEEE Design Automation Conf., </booktitle> <pages> pages 381-387, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: Related Works and Overview of DBMB 3 cost spanning tree (MST) with * = 1; (c) a "tradeoff" between the two constructions with 0 &lt; * &lt; 1 load capacitances of the sinks, several attempts have been made. With exponential timing complexity, the branch and the bound algorithms <ref> [4, 3] </ref> provide the optimal and near-optimal solutions that minimize the delay from the source to an identified critical sink or a set of critical sinks. For a set of critical sinks, it minimizes the linear combination of sink delays.
Reference: [4] <author> K. D. Boese, A. B. Kahng, and G. Robins. </author> <title> High-performance routing trees with identified critical sinks. </title> <booktitle> In Proc. 30th ACM/IEEE Design Automation Conf., </booktitle> <pages> pages 182-187, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: Related Works and Overview of DBMB 3 cost spanning tree (MST) with * = 1; (c) a "tradeoff" between the two constructions with 0 &lt; * &lt; 1 load capacitances of the sinks, several attempts have been made. With exponential timing complexity, the branch and the bound algorithms <ref> [4, 3] </ref> provide the optimal and near-optimal solutions that minimize the delay from the source to an identified critical sink or a set of critical sinks. For a set of critical sinks, it minimizes the linear combination of sink delays.
Reference: [5] <author> J. P. Cohoon and L. J. Randall. </author> <title> Critical net routing. </title> <booktitle> In Proc. IEEE Intl. Conf. on Computer Design, </booktitle> <pages> pages 174-177, </pages> <year> 1991. </year>
Reference-contexts: However, the source-to-sink path delay in a minimum steiner tree may be too large to satisfy the required delay bound. A number of algorithms have been proposed to make the trade-offs between the total wiring length and the radius (the longest source-to-sink path length) of the tree <ref> [1, 5, 7, 8, 11, 17] </ref>. The "Bounded-Radius Minimum Routing Tree (BRMRT)" [6] uses parameter * to specify the tradeoff between the minimum radius and the minimum cost. Fig. 2.1 shows three interconnection trees for the same net with different * value.
Reference: [6] <author> J. Cong, A. B. Kahng, G. Robins, M. Sarrafzadeh, and C. K. Wong. </author> <title> Performance-driven global routing for cell based ic's. </title> <booktitle> In Proc. IEEE Intl. Conf. Computer Design, </booktitle> <pages> pages 170-173, </pages> <address> Cambridege, MA, </address> <month> October </month> <year> 1991. </year>
Reference-contexts: A number of algorithms have been proposed to make the trade-offs between the total wiring length and the radius (the longest source-to-sink path length) of the tree [1, 5, 7, 8, 11, 17]. The "Bounded-Radius Minimum Routing Tree (BRMRT)" <ref> [6] </ref> uses parameter * to specify the tradeoff between the minimum radius and the minimum cost. Fig. 2.1 shows three interconnection trees for the same net with different * value. For deep submicron design, the path length is no longer accurate for the estimation of the path delay.
Reference: [7] <author> J. Cong, A. B. Kahng, G. Robins, M. Sarrafzadeh, and C. K. Wong. </author> <title> Provably good performance-driven global routing. </title> <journal> IEEE Trans. Computer Aided Design, </journal> <pages> 20 References pages 739-752, </pages> <year> 1992. </year>
Reference-contexts: However, the source-to-sink path delay in a minimum steiner tree may be too large to satisfy the required delay bound. A number of algorithms have been proposed to make the trade-offs between the total wiring length and the radius (the longest source-to-sink path length) of the tree <ref> [1, 5, 7, 8, 11, 17] </ref>. The "Bounded-Radius Minimum Routing Tree (BRMRT)" [6] uses parameter * to specify the tradeoff between the minimum radius and the minimum cost. Fig. 2.1 shows three interconnection trees for the same net with different * value.
Reference: [8] <author> Jason Cong, Kwok-Shing Leung, and Dian Zhou. </author> <title> Performance-driven interconnect design based on distributed rc delay model. </title> <booktitle> In Proc. 30th ACM/IEEE Design Automation Conf., </booktitle> <pages> pages 606-611, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: However, the source-to-sink path delay in a minimum steiner tree may be too large to satisfy the required delay bound. A number of algorithms have been proposed to make the trade-offs between the total wiring length and the radius (the longest source-to-sink path length) of the tree <ref> [1, 5, 7, 8, 11, 17] </ref>. The "Bounded-Radius Minimum Routing Tree (BRMRT)" [6] uses parameter * to specify the tradeoff between the minimum radius and the minimum cost. Fig. 2.1 shows three interconnection trees for the same net with different * value.
Reference: [9] <author> Sanjay Dhar and Mark A. Franklin. </author> <title> Optimum buffer circuits for driving long uniform lines. </title> <journal> IEEE Journal of Solid-State Circuits, </journal> <volume> 26(1) </volume> <pages> 32-40, </pages> <month> January </month> <year> 1991. </year>
Reference-contexts: The optimal x value can be found for the single buffer accordingly <ref> [9] </ref>.
Reference: [10] <author> H. Esbensen and E. S. Kuh. </author> <title> An mcm/ic timing-driven placement algorithm featuring explicit design space exploration. </title> <booktitle> In Proc. 1996 IEEE Multi-Chip Module Conf., </booktitle> <pages> pages 170-175, </pages> <address> Santa Cruz, CA, </address> <month> February </month> <year> 1996. </year>
Reference-contexts: Finally, the reported single solution with minimized aggregated cost value may not represent the best tradeoff among multiple objectives. The inherent weight and constraint specification problems 2 2. Related Works and Overview of DBMB can be eliminated by explicit design space exploration <ref> [10] </ref>. Explicit design space exploration is performed by using a multi-dimensional cost vector and searching for a set of non-redundant solutions representing the best tradeoffs of the cost dimensions. A desirable solution may be chosen from the set and only at that time the trade-offs get made. <p> A desirable solution may be chosen from the set and only at that time the trade-offs get made. This methodology fits in the Genetic Algorithm (GA) very well since GA maintains a population of solutions <ref> [10] </ref>. However, GA has no explicit way to make continuous local search but causes large jumps in the solution space. On the other hand, Simulated Annealing (SA) generates a single sequence of solutions and searches for an optimum solution along this search path. <p> Traditional methods, based on weighted cost summation and user-defined constraints, can not achieve the best tradeoff because of the difficulty to derive a set of weight values or the satisfiable bounds. <ref> [10] </ref> proposed a multi-dimension cost vector to evaluate a solution by the cost value in each dimension explicitly, rather than by single aggregated cost value. A set of non-redundant solutions are searched without 4. <p> A desirable solution can be chosen from the output set of best solutions and the tradeoff is made only at that time. This methodology fits in the Genetic Algorithm (GA) very well since GA maintains a set of non-redundant solutions naturally <ref> [10] </ref>. However, the performance of GA highly depends on the quality of crossover operation which mimics the propagation and causes large jump in the search space. Most of crossover operations for building block placement studied so far are based on the random process. <p> Similar with <ref> [10] </ref>, a goal vector g = (g 1 ; g 2 ; ; g n ), in which 8i : 0 g i 1, is specified by users. <p> Therefore they are significantly easier to be specified than the traditional bounds. To compare the relative quality between two solutions x and y, we define that solution x is preferable to y, written x y as in <ref> [10] </ref>. At each step of the SA-based local search, the new solution x 0 is produced by changing the small fraction of current solution x and is accepted based on the decision 4. Multiple Objective Optimization in GSA 15 of committee, which consists of the invited experts.
Reference: [11] <author> J. M. Ho, D. J. Lee, C. H. Chang, and C. K. Wong. </author> <title> Bounded-diameter spanning tree and related problems. </title> <booktitle> In Proc. ACM Symp. on Computational Geometry, </booktitle> <pages> pages 276-282, </pages> <year> 1989. </year>
Reference-contexts: However, the source-to-sink path delay in a minimum steiner tree may be too large to satisfy the required delay bound. A number of algorithms have been proposed to make the trade-offs between the total wiring length and the radius (the longest source-to-sink path length) of the tree <ref> [1, 5, 7, 8, 11, 17] </ref>. The "Bounded-Radius Minimum Routing Tree (BRMRT)" [6] uses parameter * to specify the tradeoff between the minimum radius and the minimum cost. Fig. 2.1 shows three interconnection trees for the same net with different * value.
Reference: [12] <author> X. Hong, T. Xue, E. S. Kuh, C. K. Cheng, and J. Huang. </author> <title> Performance-driven steiner tree algorithms for global routing. </title> <booktitle> In Proc. 30th ACM/IEEE Design Automation Conf., </booktitle> <pages> pages 177-181, </pages> <address> Baltimore, MD, </address> <month> June </month> <year> 1993. </year>
Reference-contexts: For a set of critical sinks, it minimizes the linear combination of sink delays. It is very difficult to choose the proper weights, or the criticality, for the linear combination. While <ref> [12] </ref> proposed a modified Dreyfus-Wagner Steiner tree algorithm for minimizing the maximal source-to-sink delay, [20] proposed an algorithm for maximizing the delay slack, differences between the real delays and the given delay bounds, at sinks.
Reference: [13] <author> Andrew B. Kahng and Gabriel Robins. </author> <title> On Optimal Interconnections for VLSI. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> 101 Philip Drive, Assinippi Park, Norwell, MA 02061, </address> <year> 1995. </year>
Reference-contexts: Elmore delay model is based on the first moment of the impulse response for 3. Description of DBMB-tree Algorithm 5 a distributed RC representation of the routing tree <ref> [13, 21] </ref> and it is widely used in interconnect optimization [13]. <p> Elmore delay model is based on the first moment of the impulse response for 3. Description of DBMB-tree Algorithm 5 a distributed RC representation of the routing tree [13, 21] and it is widely used in interconnect optimization <ref> [13] </ref>.
Reference: [14] <author> L. N. Kannan, P. R. Suaris, and H. G. Fang. </author> <title> A methodology and algorithms for post-placement delay optimization. </title> <booktitle> In Proc. ACM/IEEE Design Automation Conf., </booktitle> <pages> pages 327-332, </pages> <year> 1994. </year>
Reference-contexts: Intermediate buffer insertion creates another degree of freedom for interconnect optimization. Early works on fanout optimization problem focused on the construction of buffered trees in logic synthesis [2, 22, 23] without taking into account the wiring effect. Recently, layout driven fanout optimization have been proposed <ref> [14, 25] </ref>. For a given steiner tree, a polynomial time dynamic programming algorithm was proposed in [26] for the delay-optimal buffer insertion problem.
Reference: [15] <author> Seiichi Koakutsu, Maggie Kang, and Wayne W.-M. Dai. </author> <title> Genetic simulated annealing and application to non-slicing floorplan design. </title> <booktitle> In Proc. 5th ACM/SIGDA Physical Design Workshop, </booktitle> <pages> pages 134-141, </pages> <address> Virginia, USA, </address> <month> April </month> <year> 1996. </year>
Reference-contexts: On the other hand, Simulated Annealing (SA) generates a single sequence of solutions and searches for an optimum solution along this search path. We propose a new stochastic optimization method, named genetic simulated annealing (GSA) <ref> [15] </ref>. GSA successfully combines the local stochastic hill climbing features from simulated annealing and the global crossover operation from genetic algorithm. Multi-dimension cost vector is introduced to represent the cost value for each objective explicitly. <p> But it takes long time to cover a large solution space. In addition, the single best-so-far solution preserved during SA cannot represent the solution space with good tradeoffs among multiple objectives. 14 4. Multiple Objective Optimization in GSA A new stochastic optimization method, namd genetic simulated annealing (GSA) <ref> [15] </ref> combines the advantages of both SA and GA. It maintains the population of solutions, searches the local region continuously by SA-based small moves, and jumps in the search space by crossover after the local search. <p> At each iteration, the SA-based local search starts with the current solution x, and generates the new candidate x 0 by applying moves, exchanges or rotations as in <ref> [15] </ref>. The new solution is accepted based on the votes of current committee E in accept-solution (). If x 0 is accepted, insert x into population P and continue the search from x 0 . Otherwise, insert x 0 into P and restart the search from x. <p> At the end of SA search, two parent solutions are chosen randomly from P and the crossover in <ref> [15] </ref> is applied to generate the two child solutions x c 1 and x c 2 . The next iteration starts with the new generation.
Reference: [16] <author> John Lillis, Chung-Kuan Cheng, and Ting-Ting Y. Lin. </author> <title> Optimal and efficient buffer insertion and wire sizing. </title> <booktitle> In Proc. IEEE 1995 Custom Integrated Circuits Conf., </booktitle> <pages> pages 259-262, </pages> <year> 1995. </year>
Reference-contexts: Recently, layout driven fanout optimization have been proposed [14, 25]. For a given steiner tree, a polynomial time dynamic programming algorithm was proposed in [26] for the delay-optimal buffer insertion problem. Based on the dynamic programming algorithm, <ref> [16] </ref> integrated wire sizing and power minimization with the tree construction under a more accurate delay model taking signal slew into account. <p> DBMST algorithm searches all possible topological update exhaustively at each iteration and it is very time consuming. Our DBMB-tree algorithm makes following two major contributions: * Treating the delay bounds provided by static timing analysis tools as constraints rather than formulating the delay into the objectives, as in <ref> [16, 26] </ref>. * Efficient buffer insertion and tree refinement algorithm which try to minimize total wire length and the number of buffers. 2.2 Overview of DBMB-tree Algorithm We formulate the Delay Bounded Minimum Buffered tree (DBMB-tree) as follows: given a signal net and the delay bounds associated with the critical terminals,
Reference: [17] <author> Andrew Lim and Siu-Wing Cheng. </author> <title> Performance oriented rectilinear steiner trees. </title> <booktitle> In Proc. of 30th Design Automation Conf., </booktitle> <pages> pages 171-176, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: However, the source-to-sink path delay in a minimum steiner tree may be too large to satisfy the required delay bound. A number of algorithms have been proposed to make the trade-offs between the total wiring length and the radius (the longest source-to-sink path length) of the tree <ref> [1, 5, 7, 8, 11, 17] </ref>. The "Bounded-Radius Minimum Routing Tree (BRMRT)" [6] uses parameter * to specify the tradeoff between the minimum radius and the minimum cost. Fig. 2.1 shows three interconnection trees for the same net with different * value.
Reference: [18] <author> Takumi Okamoto and Jason Cong. </author> <title> Buffered steiner tree construction with wire sizing for interconnect layout optimization. </title> <booktitle> In Proc. 1996 IEEE/ACM International Conf. on Computer Aided Design, </booktitle> <pages> pages 44-49, </pages> <address> San Jose, CA, </address> <month> Nov. </month> <year> 1996. </year>
Reference-contexts: Inspired by the same dynamic programming algorithm, simultaneous steiner tree construction and buffer insertion algorithm was proposed by [19], and late the work extended to include wire sizing <ref> [18] </ref>. In the formulation of the problem [19, 18], the main objective is to maximize the required arrival time at the root of the tree, which is defined as the minimum among the differences between the arrival time of the sinks and the delay from the root to the sinks. <p> Inspired by the same dynamic programming algorithm, simultaneous steiner tree construction and buffer insertion algorithm was proposed by [19], and late the work extended to include wire sizing [18]. In the formulation of the problem <ref> [19, 18] </ref>, the main objective is to maximize the required arrival time at the root of the tree, which is defined as the minimum among the differences between the arrival time of the sinks and the delay from the root to the sinks. <p> Description of DBMB-tree Algorithm iteration progresses. Therefore, it is sufficient to have delay bounded rather than optimizing the delay as in <ref> [19, 18] </ref>. [27] proposed a Delay Bounded Minimum Steiner tree algorithm (DBMST) to construct a low cost Steiner tree with bounded delay constraints.
Reference: [19] <author> Takumi Okamoto and Jason Cong. </author> <title> Interconnect layout optimization by simultaneous steiner tree construction and buffer insertion. </title> <booktitle> In Proc. 5th ACM/SIGDA Physical Design Workshop, </booktitle> <pages> pages 1-6, </pages> <address> Reston, Virginia, </address> <month> April </month> <year> 1996. </year>
Reference-contexts: Based on the dynamic programming algorithm, [16] integrated wire sizing and power minimization with the tree construction under a more accurate delay model taking signal slew into account. Inspired by the same dynamic programming algorithm, simultaneous steiner tree construction and buffer insertion algorithm was proposed by <ref> [19] </ref>, and late the work extended to include wire sizing [18]. <p> Inspired by the same dynamic programming algorithm, simultaneous steiner tree construction and buffer insertion algorithm was proposed by [19], and late the work extended to include wire sizing [18]. In the formulation of the problem <ref> [19, 18] </ref>, the main objective is to maximize the required arrival time at the root of the tree, which is defined as the minimum among the differences between the arrival time of the sinks and the delay from the root to the sinks. <p> Description of DBMB-tree Algorithm iteration progresses. Therefore, it is sufficient to have delay bounded rather than optimizing the delay as in <ref> [19, 18] </ref>. [27] proposed a Delay Bounded Minimum Steiner tree algorithm (DBMST) to construct a low cost Steiner tree with bounded delay constraints.
Reference: [20] <author> S. Prasitjutrakul and William J. Kubitz. </author> <title> A timing-driven global router for custom chip design. </title> <booktitle> In IEEE Intl. Conf. on Computer Aided Design, </booktitle> <pages> pages 48-51, </pages> <year> 1990. </year>
Reference-contexts: For a set of critical sinks, it minimizes the linear combination of sink delays. It is very difficult to choose the proper weights, or the criticality, for the linear combination. While [12] proposed a modified Dreyfus-Wagner Steiner tree algorithm for minimizing the maximal source-to-sink delay, <ref> [20] </ref> proposed an algorithm for maximizing the delay slack, differences between the real delays and the given delay bounds, at sinks. The maximal source-to-sink delay is not necessarily interesting when the corresponding sink is off the critical path.
Reference: [21] <author> Jorge Rubinstein, Paul Penfield, and Mark A. Horowitz. </author> <title> Signal delay in RC tree networks. </title> <journal> IEEE Trans. on Computer-Aided Design, </journal> <volume> CAD-2(3):202-211, </volume> <month> July </month> <year> 1983. </year>
Reference-contexts: Elmore delay model is based on the first moment of the impulse response for 3. Description of DBMB-tree Algorithm 5 a distributed RC representation of the routing tree <ref> [13, 21] </ref> and it is widely used in interconnect optimization [13].
Reference: [22] <author> K. J. Singh and A. Sangiovanni-Vincentelli. </author> <title> A heuristic algorithm for the fanout problem. </title> <booktitle> In Proc. ACM/IEEE Design Automation Conf., </booktitle> <pages> pages 357-360, </pages> <year> 1990. </year> <note> References 21 </note>
Reference-contexts: In typical deep submicron designs, more than 60% of the paths in a timing critical design may be critical [24]. Intermediate buffer insertion creates another degree of freedom for interconnect optimization. Early works on fanout optimization problem focused on the construction of buffered trees in logic synthesis <ref> [2, 22, 23] </ref> without taking into account the wiring effect. Recently, layout driven fanout optimization have been proposed [14, 25]. For a given steiner tree, a polynomial time dynamic programming algorithm was proposed in [26] for the delay-optimal buffer insertion problem.
Reference: [23] <author> H. J. Touati, C. W. Moon, R. K. Brayton, and A. Wang. </author> <title> Performance oriented technology mapping. </title> <booktitle> In Proc. 6th MIT VLSI Conf., </booktitle> <pages> pages 79-97, </pages> <year> 1990. </year>
Reference-contexts: In typical deep submicron designs, more than 60% of the paths in a timing critical design may be critical [24]. Intermediate buffer insertion creates another degree of freedom for interconnect optimization. Early works on fanout optimization problem focused on the construction of buffered trees in logic synthesis <ref> [2, 22, 23] </ref> without taking into account the wiring effect. Recently, layout driven fanout optimization have been proposed [14, 25]. For a given steiner tree, a polynomial time dynamic programming algorithm was proposed in [26] for the delay-optimal buffer insertion problem.
Reference: [24] <author> M. Y. Mike Tsai and R. S. Tsay. </author> <title> Ic layout shift at deep-submicron level. </title> <journal> Electronic Engineering Times, </journal> <pages> pages 820-866, </pages> <month> October </month> <year> 1994. </year>
Reference-contexts: On the other hand, there maybe more than one critical sinks in the same net, which associate with multiple critical paths. In typical deep submicron designs, more than 60% of the paths in a timing critical design may be critical <ref> [24] </ref>. Intermediate buffer insertion creates another degree of freedom for interconnect optimization. Early works on fanout optimization problem focused on the construction of buffered trees in logic synthesis [2, 22, 23] without taking into account the wiring effect. Recently, layout driven fanout optimization have been proposed [14, 25].
Reference: [25] <author> H. Vaishnav and M. Pedram. </author> <title> Routability-driven fanout optimization. </title> <booktitle> In Proc. ACM/IEEE Design Automation Conf., </booktitle> <pages> pages 230-235, </pages> <year> 1993. </year>
Reference-contexts: Intermediate buffer insertion creates another degree of freedom for interconnect optimization. Early works on fanout optimization problem focused on the construction of buffered trees in logic synthesis [2, 22, 23] without taking into account the wiring effect. Recently, layout driven fanout optimization have been proposed <ref> [14, 25] </ref>. For a given steiner tree, a polynomial time dynamic programming algorithm was proposed in [26] for the delay-optimal buffer insertion problem.
Reference: [26] <author> L. P. P. P. van Ginneken. </author> <title> Buffer placement in distributed RC-tree networks for minimal elmore delay. </title> <booktitle> In Proc. International Symposium on Circuits and Systems, </booktitle> <pages> pages 865-868, </pages> <year> 1990. </year>
Reference-contexts: Recently, layout driven fanout optimization have been proposed [14, 25]. For a given steiner tree, a polynomial time dynamic programming algorithm was proposed in <ref> [26] </ref> for the delay-optimal buffer insertion problem. Based on the dynamic programming algorithm, [16] integrated wire sizing and power minimization with the tree construction under a more accurate delay model taking signal slew into account. <p> DBMST algorithm searches all possible topological update exhaustively at each iteration and it is very time consuming. Our DBMB-tree algorithm makes following two major contributions: * Treating the delay bounds provided by static timing analysis tools as constraints rather than formulating the delay into the objectives, as in <ref> [16, 26] </ref>. * Efficient buffer insertion and tree refinement algorithm which try to minimize total wire length and the number of buffers. 2.2 Overview of DBMB-tree Algorithm We formulate the Delay Bounded Minimum Buffered tree (DBMB-tree) as follows: given a signal net and the delay bounds associated with the critical terminals,
Reference: [27] <author> Qing Zhu. </author> <title> Chip and Package Co-Synthesis of Clock Networks. </title> <type> PhD thesis, </type> <institution> Univ. of California, </institution> <address> Santa Cruz, Santa Cruz, CA, </address> <month> June </month> <year> 1995. </year>
Reference-contexts: Description of DBMB-tree Algorithm iteration progresses. Therefore, it is sufficient to have delay bounded rather than optimizing the delay as in [19, 18]. <ref> [27] </ref> proposed a Delay Bounded Minimum Steiner tree algorithm (DBMST) to construct a low cost Steiner tree with bounded delay constraints. <p> Based on Elmore delay model, we develop an efficient algorithm for DBMB spanning tree construction. Contrast to DBMST <ref> [27] </ref> which starts with max-delay-slack tree, DBMB-tree algorithm begins with a routing tree which trades off the minimum total wiring length and the minimum source-sink path length based on the criticality defined for critical sinks.
References-found: 26

