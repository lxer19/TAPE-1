URL: http://www.cs.brown.edu/research/graphics/research/pub/papers/sig92-wmh.ps
Refering-URL: http://www.cs.brown.edu/research/graphics/research/pub/
Root-URL: http://www.cs.brown.edu
Title: Direct Manipulation of Free-Form Deformations  
Author: William M Hsu John F. Hughes and Henry Kaufman 
Keyword: CR Categories: I.3.5 [Computer Graphics]: Computational Geometry and Object Modeling Curve, Surface, Solid, and Object Representations; I.3.6 [Computer Graphics]: Methodology and Techniques Interaction Techniques. Additional Keywords: Direct manipulation, free-form deformations.  
Affiliation: Cambridge Research Lab Digital Equipment Corporation  Department of Computer Science Brown University  
Abstract: Free-form deformation (FFD) is a powerful modeling tool, but controlling the shape of an object under complex deformations is often difficult. The interface to FFD in most conventional systems simply represents the underlying mathematics directly; users describe deformations by manipulating control points. The difficulty in controlling shape precisely is largely due to the control points being extraneous to the object; the deformed object does not follow the control points exactly. In addition, the number of degrees of freedom presented to the user can be overwhelming. We present a method that allows a user to control a free-form deformation of an object by manipulating the object directly, leading to better control of the deformation and a more intuitive interface. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Allen, Jeff B., Wyvil, Brian, and Witten, Ian H. </author> <title> A Method for Direct Manipulation of Polygon Meshes. </title> <booktitle> Proceedings of Computer Graphics International '89, </booktitle> <pages> pages 451-469, </pages> <year> 1989. </year>
Reference-contexts: Though a procedural language may provide similar capabilities for a polygonal modeler, some restrictions apply. For example, vertices moved by the user in one level of mesh refinement must have a corresponding, coincident vertex in every other level of refinement <ref> [1] </ref>. Since the FFD technique deforms the space within it, another advantage is that the same description can be used for several objects. The deformation is dependent on the relative position of the control points.
Reference: [2] <author> Bartels, Richard H. and Beatty, John C. </author> <title> A Technique for the Direct Manipulation of Spline Curves. </title> <booktitle> Proceedings of Graphics Interface '89, </booktitle> <month> June </month> <year> 1989. </year>
Reference-contexts: Forsey and Bartels allow direct manipulation of hierarchical B-spline surfaces [9], but only at the B-spline joints, severely limiting the possible shapes that can be formed. The method was extended by Bartels and Beatty to manipulate spline curves at arbitrary points <ref> [2] </ref>. Their method is based on the Householder transformation, which computes a weighting function that relates positional changes in the target point to positional changes in the control points.
Reference: [3] <author> Bartels, Richard H., Beatty, John C., and Barsky, Brian A. </author> <title> An Introduction to Splines for use in Computer Graphics and Geometric Modeling. </title> <publisher> Morgan Kauf-mann, </publisher> <year> 1987. </year>
Reference-contexts: See <ref> [3] </ref> for more details. Before the deformation is applied, object points must first be assigned local (s; t; u) coordinates, as already mentioned. When the control lattice is in its initial position, it defines an injective map from its domain to the convex hull of the lattice.
Reference: [4] <author> Carroll, John M. and Thomas, John C. </author> <title> Metaphor and the Cognitive Representation of Computing Systems. </title> <journal> Trans Systems, Man, and Cybernetics, </journal> <volume> 12(2) </volume> <pages> 107-116, </pages> <month> March/April </month> <year> 1982. </year>
Reference-contexts: In general, a comprehensive metaphor needs to be developed to fully hide the details of the FFD technique and make the interface as transparent as possible. Creating a metaphor that is both believable and general enough to encompass all operations is a difficult task and will require further study <ref> [4] </ref>. We envision an environment where users will be able to sculpt objects using a Dataglove-like input device. The finger tips, digits, and palm of the hand will be tracked to offset selected points in a malleable object, with smooth valleys and hills attained by the FFD operation.
Reference: [5] <author> Cobb, Elizabeth S. </author> <title> Design of Sculptured Surfaces Using the B-spline Representation. </title> <type> PhD thesis, </type> <institution> University of Utah, </institution> <month> June </month> <year> 1984. </year>
Reference-contexts: One way to improve the usability of this technique is to move control points in groups, and then apply linear and nonlinear transformations to them, similar to the group control point manipulation presented in <ref> [5] </ref> for spline surfaces.
Reference: [6] <author> Coquillart, Sabine. </author> <note> Extended Free-Form Deformation: </note>
Reference-contexts: Another approach to an easier and more intuitive interface is the Extended Free-Form Deformation (EFFD) technique of <ref> [6] </ref>. With EFFDs, the user configures the initial lattice of control points to the approximate shape of the intended deformation, instead of starting with the FFD's parallelepiped of control points.
References-found: 6

