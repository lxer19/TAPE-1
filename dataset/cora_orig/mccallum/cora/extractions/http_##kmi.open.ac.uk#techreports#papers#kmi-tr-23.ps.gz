URL: http://kmi.open.ac.uk/techreports/papers/kmi-tr-23.ps.gz
Refering-URL: http://kmi.open.ac.uk/techreports/kmi-tr-list.html
Root-URL: 
Email: Email: A.Blandford@mdx.ac.uk  Email: S.Buckingham.Shum@open.ac.uk  Email:  
Title: User-Oriented Design Descriptions: Training Software Engineers in the PUM Instruction Language  
Author: Ann E. Blandford Simon J. Buckingham Shum Richard M. Young 
Web: Richard.Young@mrc-apu.cam.ac.uk  
Address: Middlesex University, Bounds Green Road, London, N11 2NQ, U.K.  Milton Keynes, MK7 6AA, U.K.  15 Chaucer Road, Cambridge, CB2 2EF, U.K.  
Affiliation: School of Computing Science,  Knowledge Media Institute, The Open University,  MRC Applied Psychology Unit,  
Date: January, 1996  
Note: Submitted to Human-Computer Interaction Journal,  
Abstract: A novel approach to designing or analysing systems only becomes useful when it is usable by practitioners in the field, and not just by its originators. Design techniques often fail to make the transition from research to practice because insufficient attention is paid to understanding and communicating the skills required to use the technique. This paper reports on work to train software engineering students to use a user-centred language for describing and analysing interface designs called the Programmable User Models Instruction Language, or IL. Various types of data, including video, students IL descriptions and brief usability reports were collected and analysed to establish what the outcomes of this training were. We conclude that students were able to grasp most of the important concepts in the IL. There is a measurable, if small, shift from the pretest to the post-test analyses, indicating some influence from the IL construction process. However, the training and practice were too brief for the subjects to internalise enough of the semantics and underlying theory to use the IL really effectively. This study raises generic issues pertaining to the transfer of theoretically-based HCI design techniques to practitioners. The discussion focuses on the level of theoretical training required, the nature and encapsulation of craft skill, and the different degrees of formality with which a formalism can be deployed.
Abstract-found: 1
Intro-found: 1
Reference: <author> BELLOTTI, V., BUCKINGHAM S HUM, S., MA C LEAN, A. & HA M M O N D , N. </author> <year> (1995). </year> <booktitle> Multidisciplinary Modelling In HCI Design...In Theory and In Practice . Proc. ACM CHI95: Human Factors in Computing Systems, </booktitle> <address> Denver, Colorado (May 7-11, </address> <year> 1995), </year> <pages> 146-153, </pages> <publisher> ACM Press: </publisher> <address> New York. </address>
Reference-contexts: We discuss elsewhere some of the practical issues in communicating model-based principles to designers to inform redesign <ref> (Bellotti, Buckingham Shum, MacLean & Hammond, 1995) </ref>.
Reference: <author> BLANDFORD, A. E., BUCKINGHAM SHUM, S. & YOUNG , R. M. </author> <title> (1995) Adding a Viewpoint: Training Software Engineers to Apply a User Modelling Technique, </title> <note> AMODEUS-2 Working Paper TA/WP34 BLANDFORD, </note> <author> A. E. & Y OUNG, R. M. </author> <title> (1993) Developing Runnable User Models: Separating the Problem Solving Techniques from the Domain Knowledge . In J. ALTY, </title> <editor> D. DIAPER AND S. GUEST Eds. </editor> <booktitle> People and Computers VIII, Proceedings of HCI93, Loughborough, </booktitle> <pages> 111-122, </pages> <publisher> Cambridge University Press : Cambridge. </publisher>
Reference-contexts: Finally, in order to assess whether other individual factors might have influenced the results, students were asked to provide brief details of their academic backgrounds and prior experience with computer systems of the types used in the test examples. Detailed summaries of the data collected are available in <ref> (Blandford, Buckingham Shum and Young, 1995) </ref>. A fuller account of the method of analysis is also included there. 2.3. The methods of analysis The tutors assessed the IL descriptions produced both quantitatively and qualitatively, identifying omissions, misconceptions, inappropriate use of the syntax, etc..

Reference: <author> BUCKINGHAM SHUM, S. & HAMMOND, N. </author> <year> (1994b). </year> <title> Transferring HCI Modelling and Design Techniques to Practitioners: A Framework and Empirical Work . Proceedings of HCI94: People and Computers IX, </title> <address> Glasgow, 23-26 August94, 21-36, CUP: Cambridge. </address>
Reference: <author> BUCKINGHAM SHUM, S., MACLEAN, A., BELLOTTI, V.M.E. & HAMMOND, N. </author> <year> (1993). </year> <title> Learning to Use Argumentation-Based Design Rationale. Amodeus-2 Project, </title> <note> Working Paper TA/WP19, </note> <month> December, </month> <year> 1993. </year>
Reference-contexts: This suggests that there is a value in making them explicit, and highlighting their use in the course of the training. Training materials for other design notations such as QOC (MacLean, Young, Bellotti & Moran, 1991) also include heuristics that encapsulate hands-on craft skills <ref> (Buckingham Shum, MacLean, Bellotti & Hammond, 1993) </ref>. These are similar in flavour to the IL heuristics, and have been shown to be similarly valuable. 4.2.2.
Reference: <author> CARD, S.K., MORAN, T.P. & NEWELL, A. </author> <year> (1983). </year> <title> The Psychology of Human-Computer Interaction. </title> <publisher> Lawrence Erlbaum Associates: </publisher> <address> Hillsdale, NJ. </address>
Reference-contexts: Related studies Other studies have investigated the process skills required to apply formal modelling techniques and other HCI design formalisms. These include studies on Cognitive Complexity Theory and Cognitive Walkthroughs. (Kieras, 1988) has described work to make Cognitive Complexity Theory (Kieras & Polson, 1985), as based on GOMS modelling <ref> (Card, Moran & Newell, 1983) </ref>, a practical user interface design technique. Kieras recognises that CCT and GOMS, despite their formality, leave decisions to the analyst which can make a significant difference to the validity or usefulness of the analysis.
Reference: <author> CA R R O L L , J.M., Ed. </author> <year> (1995). </year> <title> Scenario-Based Design: Envisioning Work and Technology in System Development. </title> <publisher> Wiley: </publisher> <address> New York. </address>
Reference-contexts: This movement from the concrete to the abstract appears to be a robust form of design cognition, as reflected in the prevalence of scenario-based design in HCI (Young and Barnard, 1987; Karat & Karat, 1992; Carroll, 1995) and object-oriented programming <ref> (Carroll & Rosson, 1995) </ref>. Transcript extracts presented below suggest that scenario-based reasoning is in a sense embedded in IL.
Reference: <author> CARROLL, J.M. & ROSSON, M.-B. </author> <year> (1995). </year> <title> Integrating Task and Software Development for ObjectOriented Applications. </title> <booktitle> Proc. ACM CHI95: Human Factors in Computing Systems, </booktitle> <address> Denver, Colorado (May 7-11, </address> <year> 1995), </year> <pages> 377-384, </pages> <publisher> ACM Press: </publisher> <address> New York. </address>
Reference-contexts: This movement from the concrete to the abstract appears to be a robust form of design cognition, as reflected in the prevalence of scenario-based design in HCI (Young and Barnard, 1987; Karat & Karat, 1992; Carroll, 1995) and object-oriented programming <ref> (Carroll & Rosson, 1995) </ref>. Transcript extracts presented below suggest that scenario-based reasoning is in a sense embedded in IL.
Reference: <author> DREYFUS, H.L.& DREYFUS, S. E. </author> <year> (1985). </year> <title> Mind over machine. </title> <publisher> New York : Macmillan / The Free Press. </publisher>
Reference-contexts: As discussed above, one of the marks of experts is that they know when to cut corners in their analyses, what the essence of the method is without needing to apply it to the letter <ref> (Dreyfus & Dreyfus, 1985) </ref>. Formal methods can be exploited as tools for novices, to support them as they acquire expertise that is, as they learn a particular way of thinking.
Reference: <author> FEATHER, M.S. </author> <year> (1993). </year> <title> Requirements reconnoitering at the juncture of domain and instance. </title> <editor> In Finkelstein, A., Ed. </editor> <booktitle> Proceedings of IEEE International Workshop on Requirements Engineering, </booktitle> <address> 73-76 New York: </address> <publisher> IEEE. </publisher>
Reference-contexts: All too often, papers focus on the relationship between design formalism F and the domain D to be represented, stopping short of addressing the crucial issue of its use in practiceare designers able to use the formalism effectively by making appropriate connections between F and D <ref> (Feather, 1993) </ref>? Formalisms cannot be meaningfully evaluated if their application in practice is ignored.
Reference: <author> GUINDON, R. </author> <year> (1990). </year> <title> Designing the Design Process: Exploiting Opportunistic Thoughts. </title> <journal> Human-Computer Interaction, </journal> <volume> 5 (2&3), </volume> <pages> 305-344. </pages>
Reference: <author> JOHN, B. E. & PACKER , H. </author> <title> (1995) Learing and using the Cognitive Walkthrough method: A case study approach. </title> <booktitle> In Proceedings of CHI95. </booktitle> <address> pp.429-436. </address> <publisher> ACM Press: </publisher> <address> New York. </address>
Reference-contexts: Ideally, any study into the process and results of applying such a technique by practitioners would be conducted in an independent way, without direct involvement of the developers. This is more possible for a mature technique, such as Cognitive Walkthrough or GOMS, <ref> (e.g. John and Packer, 1995) </ref> for which there is tested training material and enough documented experience of use to allow a designer to work alone and for data to be analysed by the researchers. <p> A day is not long enough to allow students to assimilate the underlying semantics to a degree that allows them to use the IL as a powerful analytic tool. Reference to the time line of usage of the GOMS technique <ref> (John and Packer, 1995) </ref> suggests that it took their subject about 40 hours to learn to use the technique effectively. Our results are consistent with this figure, and serve to confirm that there is no short cut to acquiring expertise. 4.
Reference: <author> KARAT, C.-M. & KARAT, J. </author> <year> (1992). </year> <title> Some Dialogue on Scenarios (Introduction to Special Issue on Scenarios in HCI). </title> <journal> ACM SIGCHI Bulletin, </journal> <volume> 24 (4), </volume> <pages> 7. </pages>
Reference: <author> KIERAS, D. </author> <year> (1988). </year> <title> Towards a Practical GOMS Model Methodology for User Interface Design . In M. </title> <editor> Helander, Ed. </editor> <booktitle> Handbook of Human-Computer Interaction, </booktitle> <pages> 135-157. </pages> <publisher> Elsevier Science Publishers BV: North Holland. </publisher>
Reference-contexts: Related studies Other studies have investigated the process skills required to apply formal modelling techniques and other HCI design formalisms. These include studies on Cognitive Complexity Theory and Cognitive Walkthroughs. <ref> (Kieras, 1988) </ref> has described work to make Cognitive Complexity Theory (Kieras & Polson, 1985), as based on GOMS modelling (Card, Moran & Newell, 1983), a practical user interface design technique.
Reference: <author> KIERAS, D. & P OLSON, P. </author> <year> (1985). </year> <title> An Approach to the Formal Analysis of User Complexity . International Journal of Man-Machine Studies, </title> <booktitle> 22, </booktitle> <pages> 365-394. </pages>
Reference-contexts: Related studies Other studies have investigated the process skills required to apply formal modelling techniques and other HCI design formalisms. These include studies on Cognitive Complexity Theory and Cognitive Walkthroughs. (Kieras, 1988) has described work to make Cognitive Complexity Theory <ref> (Kieras & Polson, 1985) </ref>, as based on GOMS modelling (Card, Moran & Newell, 1983), a practical user interface design technique. Kieras recognises that CCT and GOMS, despite their formality, leave decisions to the analyst which can make a significant difference to the validity or usefulness of the analysis.
Reference: <author> LEWIS, C., P OLSON, P., WHARTON, C. & R IEMAN, J. </author> <year> (1990). </year> <booktitle> Testing a Walkthrough Methodology for Theory-Based Design of Walk-Up-and-Use Interfaces . In Proceedings of ACM CHI90 Conference on Human Factors in Computing Systems, </booktitle> <pages> 235-242. </pages>
Reference-contexts: However, it is directly relevant to the present paper, since it is based on a cognitive model of learning called CE+ <ref> (Polson & Lewis, 1990) </ref>, but seeks to deliver the power of this model in the form of a checklist of eight principles based on CE+ without actually requiring CW users to know any more about it.
Reference: <author> MACLEAN, A., YOUNG , R.M., BELLOTTI , V. & M ORAN, T. </author> <year> (1991). </year> <title> Questions, Options, and Criteria: Elements of Design Space Analysis . Human-Computer Interaction, </title> <type> 6 (3 & 4), </type> <pages> 201-250. </pages> <note> Special Issue on Design Rationale, </note> <editor> (Eds.) Carroll J.M. </editor> <title> and Moran T.P. </title>
Reference-contexts: This suggests that there is a value in making them explicit, and highlighting their use in the course of the training. Training materials for other design notations such as QOC <ref> (MacLean, Young, Bellotti & Moran, 1991) </ref> also include heuristics that encapsulate hands-on craft skills (Buckingham Shum, MacLean, Bellotti & Hammond, 1993). These are similar in flavour to the IL heuristics, and have been shown to be similarly valuable. 4.2.2.
Reference: <author> NEWELL, A. </author> <title> (1981) The knowledge Level, </title> <journal> AI Magazine, </journal> <month> Summer </month> <year> 1981, </year> <pages> 1-33. </pages>
Reference-contexts: Introduction to PUM IL This study was conducted in the context of a research programme that is investigating the power of analysing human-computer interactions at the knowledge level <ref> (Newell, 1981) </ref>. The Instruction Language (IL) was developed as a programming language for a Programmable User Model (PUM). The PUM is a cognitive architecture which, when programmed with knowledge about a particular device, can yield predictions about likely user behaviour with that device.
Reference: <author> PEDERSEN, E.R. & SUCHMAN, L. </author> <year> (1991). </year> <booktitle> Formalization in CSCW . Panel at the Second European Conference on Computer-Suppored Cooperative Work, </booktitle> <address> Amsterdam, 113. </address> <publisher> Kluwer. </publisher>
Reference: <author> POLSON, P. & L EWIS, C. </author> <year> (1990). </year> <title> Theory-Based Design for Easily Learned Interfaces. </title> <journal> Human-Computer Interaction, </journal> <volume> 5, </volume> <pages> 191-220. </pages>
Reference-contexts: However, it is directly relevant to the present paper, since it is based on a cognitive model of learning called CE+ <ref> (Polson & Lewis, 1990) </ref>, but seeks to deliver the power of this model in the form of a checklist of eight principles based on CE+ without actually requiring CW users to know any more about it.
Reference: <author> POLSON, P.G., LEWIS, C., R IEMAN, J. & WHARTON , C. </author> <year> (1992). </year> <title> Cognitive Walkthroughs: A Method for Theory-Based Evaluation of User Interfaces. </title> <journal> International Journal of Man-Machine Studies, </journal> <volume> 36 (5), 741 - 773. </volume>
Reference: <author> RIEMAN, J., DAVIES, S., HAIR , D.C., ESEMPLARE, M., POLSON , P. & LEWIS, </author> <title> C . (1991). An Automated Cognitive Walkthrough. </title> <booktitle> In Proceedings of ACM CHI91 Conference on Human Factors in Computing Systems, </booktitle> <pages> 427-428. </pages>
Reference: <author> A. E. Blandford , S. J. Buckingham Shum & R. M. Young 24 ROWLEY, D.E. & RHOADES, D.G. </author> <year> (1992). </year> <title> The Cognitive Jogthrough: A Fast-Paced User Interface Evaluation Procedure. </title> <booktitle> Proc. CHI92: Human Factors in Computing Systems, </booktitle> <address> Monterey, CA, 389-395, </address> <publisher> ACM Press: </publisher> <address> New York. </address>
Reference: <author> SHIPMAN, </author> <title> F.M. & MARSHALL, </title> <booktitle> C.C. </booktitle> <year> (1994). </year> <title> Formality Considered Harmful: Experiences, Emerging Themes, and Directions. </title> <institution> Xerox Palo Alto Research Center, </institution> <note> Technical Report ISTL-CSA-94-09 SHUM, </note> <author> S. </author> <year> (1991). </year> <title> Cognitive Dimensions of Design Rationale . In D. </title> <editor> Diaper and N. V. Hammond, Ed. </editor> <booktitle> People and Computers VI: Proceedings of HCI91, </booktitle> <pages> 331-344. </pages> <publisher> Cambridge University Press: </publisher> <address> Cambridge. </address>
Reference: <author> SIDDIQUI, J.I.A. </author> <year> (1985). </year> <title> A Model of Program Designer Behaviour . People and Computers: Designing the User Interface, CUP: </title> <publisher> Cambridge. </publisher>
Reference: <author> SUBRAHMANIAN, E., KONDA, S.L., LEVY , S.N., REICH, Y., W ESTERBERG, A.W. & M ONARCH, I. </author> <year> (1993). </year> <title> Equations Arent Enough: </title> <booktitle> Informal Modeling in Design. Artificial Intelligence for Engineering Design, Analysis and Manufacturing, </booktitle> <volume> 7 (4), </volume> <pages> 257-274. </pages>
Reference: <author> VISSER, W. </author> <year> (1990). </year> <title> More or Less Following a Plan During Design: </title> <journal> Opportunistic Deviations in Specification . International Journal of Man-Machine Studies, </journal> <volume> 33 (3), </volume> <pages> 247-278. </pages>
Reference: <author> WHARTON, C., RIEMAN , J., L EWIS, C. & PO L S O N , P. </author> <year> (1994). </year> <title> The Cognitive Walkthrough Method: A Practitioners Guide. </title> <editor> In J. Nielson and R. Mack, Ed. </editor> <title> Usability Inspection Methods, </title> <address> 105-140. </address> <publisher> Wiley: </publisher> <address> New York. </address>
Reference-contexts: Kieras proposes and exemplifies an enhanced notation called Natural GOMS Language (NGOMSL), designed to assist methodologically in conducting more systematic analyses, and to be more readable. The Cognitive Walkthrough (CW), the latest version of which is described in <ref> (Wharton, et al. , 1994) </ref> is not a modelling technique, but a structured methodology for critiquing a user interface. <p> However, it is clearly not possible for students or practitioners to appreciate this difference, or acquire deep theoretical knowledge in a matter of hours. Another example of a technique where the issue of divorcing theory from practice has been important is Cognitive Walkthroughs <ref> (Wharton et al. , 1994) </ref>. This technique has been extensively revised in the light of evaluations over several years. This work illustrates well the nature of the problems faced in developing a theoretically based technique targeted at practitioners not trained in the underlying theory.
Reference: <author> YOUNG, R.M. & BARNARD, P. J. </author> <title> (1987) The use of scenarios in Human-Computer Interaction: Turbocharging the tortoise of cumulative science. </title> <editor> In J. M. Carroll & P. P. TANNER, Eds. </editor> <booktitle> Proceedings of CHI+GI87, </booktitle> <pages> 291-296, </pages> <publisher> ACM: </publisher> <address> New York. </address>
Reference: <author> YOUNG, R.M. & B LANDFORD, A.E. </author> <title> (submitted) Knowledge and Architecture as Determinants of Cognition: Interaction with Complex Devices. </title> <note> Submitted for journal publication. (Draft available as Amodeus-2 working paper UM/WP33). </note>
Reference: <author> YOUNG, R.M., G REEN, T.R.G. & SIMON , T. </author> <title> (1989) Programmable user models for predictive evaluation of interface designs. </title> <editor> In K. BICE & C. LEWIS, Eds. </editor> <booktitle> Proceedings of CHI89, </booktitle> <pages> 15-19, </pages> <publisher> ACM: </publisher> <address> New York. </address> <note> All AMODEUS documents are available over the WWW: http://www.mrc-apu.cam.ac.uk/amodeus/ A. </note> <author> E. Blandford , S. J. Buckingham Shum& R. M. </author> <type> Young 25 </type>
Reference-contexts: For example, to what extent can we exploit the similarity between a user-centred description language and more traditional device-centred languages? 3.4.1. Similarity to device specification languages: pros and cons One of the central tenets of the PUM approach <ref> (Young, Green and Simon, 1989) </ref> is that a language like IL should be sufficiently similar to a conventional high level programming or specification language for software engineering skills to transfer, with some adjustment, to user-centred analysis. Preconditions, filters and endstates are familiar concepts to computer scientists.
References-found: 30

