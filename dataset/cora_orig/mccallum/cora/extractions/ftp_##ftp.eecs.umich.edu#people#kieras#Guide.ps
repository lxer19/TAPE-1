URL: ftp://ftp.eecs.umich.edu/people/kieras/Guide.ps
Refering-URL: http://vulture.eecs.umich.edu/faculty/kieras/musette.html
Root-URL: http://www.eecs.umich.edu
Title: A Guide to GOMS Task Analysis  
Author: David Kieras 
Note: Copyright David Kieras, 1994. All rights reserved.  
Date: Spring, 1994  
Affiliation: University of Michigan  
Abstract-found: 0
Intro-found: 1
Reference: <author> Anderson, J.R. </author> <year> (1982). </year> <title> Acquisition of cognitive skill. </title> <journal> Psychological Review, </journal> <pages> 89 , 369-406. </pages>
Reference-contexts: By using this "cognitive architecture", the cognitive complexity approach to HCI has the key advantage of being able to exploit the recent work on cognitive skills in cognitive psychology <ref> (e.g., Anderson, 1982) </ref>, which has been a resounding success, both theoretically and practically.
Reference: <author> Bennett, J.L., Lorch, D.J., Kieras, D.E., & Polson, P.G. </author> <year> (1987). </year> <title> Developing a user interface technology for use in industry. </title> <editor> In Bullinger, H.J., & Shackel, B. (Eds.), </editor> <booktitle> Proceedings of the Second IFIP Conference on Human-Computer Interaction, Human-Computer Interaction - INTERACT '87 . (Stuttgart, </booktitle> <institution> Federal Republic of Germany, </institution> <month> Sept. </month> <pages> 1-4). </pages> <publisher> Elsevier Science Publishers B.V., North-Holland, </publisher> <pages> 21-26. </pages>
Reference-contexts: The analyst defines a special operator that is used by the methods to access this information when it is needed <ref> (cf. the discussion in Bennett, Lorch, Kieras, & Polson, 1987) </ref>. <p> The evaluation problem comes if the two systems being compared differ substantially in the bypassing operators involved. For example, consider the task of entering a table of numbers in a document preparation system using tabs to position the columns <ref> (cf. Bennett, Lorch, Kieras and Polson, 1987) </ref>.
Reference: <author> Bjork, R.A. </author> <year> (1972). </year> <title> Theoretical implications of directed forgetting. </title> <editor> In A.W. Melton and E. Martin (Eds.), </editor> <booktitle> Coding Processes in Human Memory. </booktitle> <address> Washington, D.C.: </address> <publisher> Winston, </publisher> <pages> 217-236. </pages>
Reference: <author> Bovair, S., Kieras, D.E., & Polson, P.G. </author> <year> (1990). </year> <title> The acquisition and performance of text editing skill: A cognitive complexity analysis. </title> <journal> Human-Computer Interaction, </journal> <volume> 5, </volume> <pages> 1-48. </pages>
Reference-contexts: In the notation introduced here, selection rules come in sets. A set of selection rules is associated with a general goal, and consists of several If-Then rules which choose the specific goal to be accomplished. The relationship with the underlying production rule models is very direct <ref> (see Bovair, Kieras, & Polson, 1990) </ref>. The form for a selection rule set is: Selection rule set for goal: &lt;general goal description&gt; If &lt;condition&gt; Then accomplish goal: <specific goal description&gt;. If &lt;condition&gt; Then accomplish goal: <specific goal description&gt;. ... Return with goal accomplished. <p> It seems to be rare for ordinary methods on typical pieces of software to exceed WM capacity <ref> (cf. Bovair, Kieras, & Polson, 1990) </ref>; if they did, they probably would have been changed! However, many computer system designs will strain WM in certain situations; often these are the ones where the user will be tempted to write something down on paper.
Reference: <author> Card, S., Moran, T. & Newell, A. </author> <year> (1983). </year> <title> The Psychology of Human-Computer Interaction. </title> <address> Hillsdale, New Jersey: </address> <publisher> Erlbaum. </publisher>
Reference-contexts: 1.3 Technical Background There are different forms of GOMS models with different assumptions and purposes, such as the CPM-GOMS models developed by Gray, John, and Atwood (1992), which show how a user executes a task in terms of the parallel and overlapping activity of processors in the Model Human Processor <ref> (Card, Moran, & Newell, 1983) </ref>. The type of GOMS model presented here, termed NGOMSL/CCT GOMS models, is based on explicitly representing the user's methods, and thus makes it possible to predict both learning and execution time, and assumes that the user executes the methods strictly sequentially. <p> On the other hand, the POET editor <ref> (see Card, Moran, & Newell, 1983) </ref> requires heavy use of findstrings which the user has to devise as needed. This process can still be bypassed with an analyst-defined operator, think-up-find-string, and the actual find strings specified in the task description. <p> Some standard mental operator sequences. Certain operators should be included in a procedure; these guidelines are similar to those associated with the Keystroke Level Model for the placement of mental operators <ref> (Card, Moran, & Newell, 1983) </ref>. There should be a Locate operator executed prior to a Point, to reflect that before an object can be pointed to, its location must be known. <p> We can estimate how long it will take to store the information in LTM, using the Model Human Processor 40 parameters <ref> (Card, Moran, & Newell, 1983, Ch.2) </ref>, which is a value of about 10 sec/chunk for LTM storage time. Gong (1990) obtained results in a realistic training situation that suggest a value of 6 sec/chunk, which is the recommended value. <p> Accordingly, there is no transfer of learning between these two methods, and the user will have to pay the full cost of learning two separate methods. Estimating Execution Time Time estimate calculation. Estimating execution time is very similar to the Keystroke-Level Model approach <ref> (Card, Moran & Newell, 1983, Ch. 8) </ref>. The time to execute a method depends on the time to execute the operators 43 and on the number of cognitive steps, or production rules, involved. <p> Some suggestions for revising the design are as follows <ref> (cf. Card, Moran, & Newell, 1983, Ch 12) </ref>: Ensure that the most important and frequent goals can be accomplished by relatively easy to learn and fast-executing methods. Redesign if rarely accomplished tasks are simpler than frequent ones.
Reference: <author> Elkerton, J. </author> <year> (1988). </year> <title> Online Aiding for Human-Computer Interfaces. </title> <editor> In M. Helander (Ed.), </editor> <booktitle> Handbook of Human - Computer Interaction (pp. </booktitle> <pages> 345-362). </pages> <address> Amsterdam: </address> <publisher> North-Holland Elsevier. </publisher>
Reference-contexts: Alternatively, the first draft of the procedure documentation could be written from the GOMS model directly, as a way to ensure completeness and accuracy from the beginning. A similar argument can be made for the use of a GOMS model in specifying the content of Online Help systems <ref> (see Elkerton, 1988) </ref>. Notice that if the documentation does not directly provide the required methods and selection rules to the user, the user is forced to deduce them. Sometimes this is reasonable; it should not be necessary to spell out every possible pathway through a menu system, for example. <p> One suggestion that does stand out <ref> (cf. Elkerton, 1988) </ref> is to ensure that the index, table of contents, and headings are organized by user's goals, rather than function name, to allow the user to locate methods given that they often know their natural goals, but not the operators involved.
Reference: <author> Elkerton, J., & Palmiter, S. </author> <year> (1991). </year> <title> Designing help using the GOMS model: An information retrieval evaluation. </title> <booktitle> Human Factors, </booktitle> <volume> 33, </volume> <pages> 185-204. </pages>
Reference: <author> Gong, R. J. </author> <year> (1993). </year> <title> Validating and refining the GOMS model methodology for software user interface design and evaluation. </title> <type> PhD Dissertation, </type> <institution> University of Michigan. </institution>
Reference: <author> Gong, R. & Elkerton, J. </author> <year> (1990). </year> <title> Designing minimal documentation using a GOMS model: A usability evaluation of an engineering approach. </title> <booktitle> In Proceedings of CHI'90, Human Factors in Computer Systems (pp. </booktitle> <pages> 99-106). </pages> <address> New York: </address> <publisher> ACM. </publisher>
Reference: <author> Gray, W. D., John, B. E., & Atwood, M. </author> <year> (1992). </year> <title> The precis of Project Ernestine, or an overview of a validation of GOMS. </title> <editor> In P. Bauersfeld, J. Bennett, and G. Lynch (Eds.), </editor> <booktitle> CHI92 Conference Proceedings , ACM, </booktitle> <address> New York. </address>
Reference: <author> Kieras, D.E. </author> <year> (1986). </year> <title> A mental model in user-device interaction: A production system analysis of a problemsolving task. </title> <type> Unpublished manuscript, </type> <institution> University of Michigan. </institution>
Reference: <author> Kieras, D.E. </author> <year> (1988). </year> <title> Making cognitive complexity practical. </title> <booktitle> In CHI'88 Workshop on Analytical Models, </booktitle> <address> Washington, </address> <month> May 15, </month> <year> 1988. </year> <note> 47 Kieras, </note> <author> D.E. </author> <year> (1988). </year> <title> Towards a practical GOMS model methodology for user interface design. </title> <editor> In M. Helander (Ed.), </editor> <title> Handbook of Human-Computer Interaction (pp. </title> <address> 135-158) . Amsterdam: </address> <publisher> North-Holland Elsevier. </publisher>
Reference: <author> Kieras, D.E. </author> <year> (1990). </year> <title> The role of cognitive simulation models in the development of advanced training and testing systems. </title> <editor> In N. Frederiksen, R. Glaser, A. Lesgold, & M. Shafto (Eds.), </editor> <title> Diagnostic Monitoring of Skill and Knowledge Acquisition. </title> <address> Hillsdale, N.J.: </address> <publisher> Erlbaum. </publisher>
Reference-contexts: In the notation introduced here, selection rules come in sets. A set of selection rules is associated with a general goal, and consists of several If-Then rules which choose the specific goal to be accomplished. The relationship with the underlying production rule models is very direct <ref> (see Bovair, Kieras, & Polson, 1990) </ref>. The form for a selection rule set is: Selection rule set for goal: &lt;general goal description&gt; If &lt;condition&gt; Then accomplish goal: <specific goal description&gt;. If &lt;condition&gt; Then accomplish goal: <specific goal description&gt;. ... Return with goal accomplished. <p> It seems to be rare for ordinary methods on typical pieces of software to exceed WM capacity <ref> (cf. Bovair, Kieras, & Polson, 1990) </ref>; if they did, they probably would have been changed! However, many computer system designs will strain WM in certain situations; often these are the ones where the user will be tempted to write something down on paper. <p> Sometimes this is reasonable; it should not be necessary to spell out every possible pathway through a menu system, for example. But it is often the case that even "good" training documentation presents methods that are seriously incomplete and even incorrect <ref> (cf. Kieras, 1990) </ref>, and selection rules are rarely described. 46 While the GOMS analysis clearly should be useful in specifying the content of documentation, it offers little guidance concerning the form of the documentation, that is, the organization and presentation of procedures in the document.
Reference: <author> Kieras, D.E., & Bovair, S. </author> <year> (1986). </year> <title> The acquisition of procedures from text: A productionsystem analysis of transfer of training. </title> <journal> Journal of Memory and Language, </journal> <volume> 25, </volume> <pages> 507-524. </pages>
Reference: <author> Kieras, D.E. & Polson, P.G. </author> <year> (1985). </year> <title> An approach to the formal analysis of user complexity. </title> <journal> International Journal of Man-Machine Studies, </journal> <volume> 22, </volume> <pages> 365-394. </pages>
Reference: <author> Lerch, F.J., Mantei, M.M., & Olson, J. R., </author> <year> (1989). </year> <title> Skilled financial planning: The cost of translating ideas into action. </title> <booktitle> In CHI'89 Conference Proceedings, </booktitle> <pages> 121-126. </pages>
Reference: <author> Olson, J. R., & Olson, G. M. </author> <year> (1989). </year> <title> The growth of cognitive modeling in human-computer interaction since GOMS. </title> <type> Technical Report No. 26, </type> <institution> Cognitive Science and Machine Intelligence Laboratory, University of Michigan, </institution> <month> November, </month> <year> 1989. </year>
Reference-contexts: Instead, Gong used values calculated from Fitts' Law (see Card, Moran, & Newell, 1983; p. 242), and considerably increased the accuracy of the execution time prediction. The analyst-defined mental operator time, in the lack of any other information, can be estimated as 1.2 sec for each analyst-defined mental operator <ref> (see Olson & Olson, 1989) </ref>. Some of the operators normally represented as taking a mental operator time should be treated differently, depending on the whether the methods they appear in are assumed to be well-known to the user.
Reference: <author> Polson, P.G. </author> <year> (1987). </year> <title> A quantitative model of human-computer interaction. </title> <editor> In J.M. Carroll (Ed.), </editor> <booktitle> Interfacing Thought: Cognitive Aspects of Human-Computer Interaction. </booktitle> <address> Cambridge, MA: </address> <publisher> Bradford, MIT Press. </publisher>
Reference-contexts: The analyst defines a special operator that is used by the methods to access this information when it is needed <ref> (cf. the discussion in Bennett, Lorch, Kieras, & Polson, 1987) </ref>. <p> The evaluation problem comes if the two systems being compared differ substantially in the bypassing operators involved. For example, consider the task of entering a table of numbers in a document preparation system using tabs to position the columns <ref> (cf. Bennett, Lorch, Kieras and Polson, 1987) </ref>.
References-found: 18

