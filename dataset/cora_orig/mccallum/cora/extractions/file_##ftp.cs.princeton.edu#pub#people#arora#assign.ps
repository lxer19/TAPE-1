URL: file://ftp.cs.princeton.edu/pub/people/arora/assign.ps
Refering-URL: http://www.cs.princeton.edu/~arora/publist.html
Root-URL: http://www.cs.princeton.edu
Email: E-mail: arora@cs.princeton.edu  E-mail: af1p@andrew.cmu.edu  E-mail: hkl@cs.princeton.edu  
Title: A New Rounding Procedure for the Assignment Problem with Applications to Dense Graph Arrangement Problems  
Author: Sanjeev Arora Alan Frieze Haim Kaplan 
Note: Supported in part by NSF grant CCR9225008.  
Address: Princeton University.  Pittsburgh PA15213.  Princeton University.  
Affiliation: Computer Science,  Department of Mathematics, Carnegie Mellon University,  Computer Science,  
Date: April 8, 1996  
Abstract: We present approximation schemes for "dense" instances of many well-known NP-hard problems, including 0-1 quadratic-assignment, (an optimization formulation of) graph-isomorphism, min-cut-linear-arrangement, max-acyclic-subgraph, betweenness, and min-linear-arrangment. (A "dense" graph is one in which the number of edges is (n 2 ); denseness for the other problems is defined in an analogous way.) Some of our approximation schemes run in n O(log n=* 2 ) time; others run in n O(1=* 2 ) time. Of independent interest is our randomized procedure for rounding fractional solutions of linear programs that represent the assignment problem subject to linear constraints. This extends the well-known LP rounding procedure of Raghavan and Thompson, and also solves an open problem of Luby and Nisan ("Design an NC procedure for converting near-optimum fractional matchings to near-optimum matchings.") 
Abstract-found: 1
Intro-found: 1
Reference: [AFW94] <author> N. Alon, A. Frieze, and D. Welsh. </author> <title> Polynomial time randomized approximation schemes for the tutte polynomial of dense graphs. </title> <booktitle> In Proc. 35 th FOCS, </booktitle> <pages> pages 24-35. </pages> <publisher> IEEE, IEEE Computer Society Press, </publisher> <month> November </month> <year> 1994. </year>
Reference: [A96] <author> S. Arora. </author> <title> Polynomial-time approximation schemes for Euclidean TSP and other geometric problems. </title> <type> Manuscript, </type> <month> April </month> <year> 1996. </year>
Reference-contexts: A PTAS is desirable since it allows us to trade off approximation accuracy for running time. PTAS's are known for only very few problems; knapsack [IK75] and bin-packing [KK82] are the only two well-known examples . (Recently, a PTAS has also been discovered for Euclidean TSP <ref> [A96] </ref>.) In fact, a result by Arora, Lund, Motwani, Sudan and Szegedy [ALM+92] shows that if P 6= NP, then PTAS's do not exist for a large body of problems the so-called MAX-SNP-hard problems. Similar (or stronger) "inapproximability" results have since been proved for many other problems.
Reference: [AKK95] <author> S. Arora, D. Karger and M. Karpinski. </author> <title> Polynomial-time approximation schemes for dense instances of NP-hard optimization problems. </title> <booktitle> In Proc. ACM STOC'95. </booktitle>
Reference-contexts: Arora, Karger and Karpinski <ref> [AKK95] </ref> showed that many MAX-SNP-hard problems have a PTAS when the instance is "dense" (in case of graphs, this means that each vertex has degree (n), although some of the algorithms in [AKK95] work also when the average degree is (n)).They also gave a PTAS for bisection on dense graphs. <p> Arora, Karger and Karpinski <ref> [AKK95] </ref> showed that many MAX-SNP-hard problems have a PTAS when the instance is "dense" (in case of graphs, this means that each vertex has degree (n), although some of the algorithms in [AKK95] work also when the average degree is (n)).They also gave a PTAS for bisection on dense graphs. Fernandez de la Vega [dlV94] independently gave a PTAS for dense instances of MAX-CUT and some other problems. <p> These include 0-1 quadratic-assignment, (an optimization formulation of) graph-isomorphism, min-cut-linear-arrangement, max-acyclic-subgraph, linear-arrangment, and betweenness. Some of these approximation schemes run in polynomial time; others run in O (n O (log n=* 2 ) ) time, where n is the input size. The approach draws some inspiration from <ref> [AKK95] </ref> but differs in one significant way. In all the problems considered in [AKK95], the set of feasible solutions is the set of 0 1 vectors with n coordinates, and the objective function is a constant-degree polynomial. <p> Some of these approximation schemes run in polynomial time; others run in O (n O (log n=* 2 ) ) time, where n is the input size. The approach draws some inspiration from <ref> [AKK95] </ref> but differs in one significant way. In all the problems considered in [AKK95], the set of feasible solutions is the set of 0 1 vectors with n coordinates, and the objective function is a constant-degree polynomial. <p> A fractional solution is called a fractional perfect matching. 2 A casual examination of the assignment constraints immediately seems to rule out a central tech-nique of <ref> [AKK95] </ref>, namely, the use of Raghavan-Thompson [RT87] rounding to convert fractional solutions to integral "approximate" solutions. Randomized rounding would change a fractional perfect matching (x ij ) into a 0-1 vector y by setting y ij = 1 with probability x ij . <p> Let P ijkl c ijkl x ij x kl be the objective function, where each c ijkl is an integer in [c; c]. Let x fl be the perfect matching that maximizes the objective function. The basic idea is similar to the main proof in <ref> [AKK95] </ref>, except that we always have to deal with the assignment constraints. Let b ij denote P kl c ijkl x fl kl .
Reference: [ALM+92] <author> S. Arora, C. Lund, R. Motwani, M. Sudan, and M. Szegedy. </author> <title> Proof verification and hardness of approximation problems. </title> <booktitle> In Proc. 33 rd FOCS, </booktitle> <pages> pages 14-23. </pages> <publisher> IEEE, </publisher> <month> October </month> <year> 1992. </year>
Reference-contexts: PTAS's are known for only very few problems; knapsack [IK75] and bin-packing [KK82] are the only two well-known examples . (Recently, a PTAS has also been discovered for Euclidean TSP [A96].) In fact, a result by Arora, Lund, Motwani, Sudan and Szegedy <ref> [ALM+92] </ref> shows that if P 6= NP, then PTAS's do not exist for a large body of problems the so-called MAX-SNP-hard problems. Similar (or stronger) "inapproximability" results have since been proved for many other problems.
Reference: [B94] <author> B. S. Baker. </author> <title> Approximation Algorithms for NP-complete problems in planar graphs. </title> <journal> JACM 41 </journal> <pages> 153-180, </pages> <year> 1994 </year>
Reference-contexts: Similar (or stronger) "inapproximability" results have since been proved for many other problems. Such inapproximability results raise a very natural question: What subcases of these problems are "easy" with respect to approximation? A paper by Baker <ref> [B94] </ref> (which actually predated the inapproximability results) showed that many NP-hard graph problems have PTAS's on planar graphs; more recently Khanna and Motwani [KM96] extended her work.
Reference: [dlV94] <author> W.F. de la Vega. </author> <title> MAXCUT has a randomized approximation scheme in dense graphs. </title> <type> manuscript, </type> <month> October </month> <year> 1994. </year> <note> To appear in Random Structures and Algorithms. 12 </note>
Reference-contexts: Fernandez de la Vega <ref> [dlV94] </ref> independently gave a PTAS for dense instances of MAX-CUT and some other problems. In this paper we describe approximation schemes for dense instances of a number of classical optimization problems. These include 0-1 quadratic-assignment, (an optimization formulation of) graph-isomorphism, min-cut-linear-arrangement, max-acyclic-subgraph, linear-arrangment, and betweenness.
Reference: [H64] <author> W. Hoffding. </author> <title> Probability inequalities for sums of bounded random variables, </title> <journal> Journal of the American Stastical Association, </journal> <year> 1964. </year>
Reference: [IK75] <author> O. H. Ibarra and C. E. Kim. </author> <title> Fast approximation algorithms for the knapsack and sum of subsets problems. </title> <journal> JACM, </journal> <volume> 22(4) </volume> <pages> 463-468, </pages> <year> 1975. </year>
Reference-contexts: A PTAS is desirable since it allows us to trade off approximation accuracy for running time. PTAS's are known for only very few problems; knapsack <ref> [IK75] </ref> and bin-packing [KK82] are the only two well-known examples . (Recently, a PTAS has also been discovered for Euclidean TSP [A96].) In fact, a result by Arora, Lund, Motwani, Sudan and Szegedy [ALM+92] shows that if P 6= NP, then PTAS's do not exist for a large body of problems
Reference: [KK82] <author> N. Karmaker and R.M. Karp. </author> <title> An efficient approximation scheme for the one-dimensional bin-packin g problem. </title> <booktitle> In Proc. 23 rd FOCS, </booktitle> <pages> pages 312-320. </pages> <publisher> IEEE, </publisher> <year> 1982. </year>
Reference-contexts: A PTAS is desirable since it allows us to trade off approximation accuracy for running time. PTAS's are known for only very few problems; knapsack [IK75] and bin-packing <ref> [KK82] </ref> are the only two well-known examples . (Recently, a PTAS has also been discovered for Euclidean TSP [A96].) In fact, a result by Arora, Lund, Motwani, Sudan and Szegedy [ALM+92] shows that if P 6= NP, then PTAS's do not exist for a large body of problems the so-called MAX-SNP-hard
Reference: [LR88] <author> T. Leighton and S. Rao. </author> <title> An approximate max-flow min-cut theorem for uniform multicom-modity flow problems with applications to approximation algorithms. </title> <booktitle> In Proc. 29 th FOCS, </booktitle> <pages> pages 422-431. </pages> <publisher> IEEE, </publisher> <month> October </month> <year> 1988. </year>
Reference-contexts: In other words, the goal is to lay out G along n nodes in a straight line, such that the total edge length in the layout is minimized. An O (log 2 n)-factor approximation algorithm is presented in <ref> [LR88] </ref>. 4. d-dimensional arrangement: The analogue of the linear arrangement problem when the n points are on a d-dimensional grid instead of in a line. "Length" of edge (i; j) is the Manhattan distance from (i) to (j). Here d is a constant. 5. <p> The minimum value of c () is called the cutwidth of the graph. We will restrict attention to dense graphs. Previous work includes an exact algorithm when the graph is a tree [Y85], and a O (log 2 n)- factor approximation on general graphs <ref> [LR88] </ref>.. 6. betweeness: Given a finite set A and a collection C of ordered triples (a; b; c) of distinct elements from A.
Reference: [LN92] <author> M. Luby and N. Nisan. </author> <title> A parallel approximation algorithm for positive linear programming. </title> <booktitle> In Proc. ACM STOC, </booktitle> <year> 1993, </year> <pages> pp 448-457. </pages>
Reference-contexts: Our rounding procedure can be implemented in parallel in depth O (log n log log n), and this also solves the main open problem left open by Luby and Nisan's N C 1 approximation algorithm for fractional packing/covering problems <ref> [LN92] </ref> They showed how to solve a minimum weight matching problem approximately in N C 1 . However, their procedure yields a fractional matching, and they had left it as an open problem whether this fractional matching could be "rounded" to an integral almost-matching in N C.
Reference: [KM96] <author> S. Khanna and R. Motwani. </author> <title> Towards a syntactic characterization of PTAS. </title> <note> In Proc. ACM STOC 1996, to appear. </note>
Reference-contexts: Such inapproximability results raise a very natural question: What subcases of these problems are "easy" with respect to approximation? A paper by Baker [B94] (which actually predated the inapproximability results) showed that many NP-hard graph problems have PTAS's on planar graphs; more recently Khanna and Motwani <ref> [KM96] </ref> extended her work.
Reference: [PY91] <author> C.H. Papadimitriou and M. Yannakakis. </author> <title> Optimization, approximation and complexity classes. </title> <journal> JCSS, </journal> <volume> 43 </volume> <pages> 425-440, </pages> <year> 1991. </year> <note> Preliminary Version in Proc. ACM STOC, </note> <year> 1988. </year>
Reference-contexts: In all the problems we consider, the objective function is still a constant-degree polynomial, but the set of feasible solutions are permutations of n elements. (Note: Such permutation-based NP-hard problems are often especially nasty with respect to approximation. Papadimitriou and Yannakakis <ref> [PY91] </ref> have identified a set of such problems called MAX--SNP; betweenness and max-acyclic-subragph are complete for this class.) Recall that permutations are represented in mathematical programming via the assignment constraints in n 2 variables fx ij : i; j = 1; 2; : : :; ng: P P x ij 0
Reference: [LPV81] <author> G. F. Lev, N. Pippenger, and L. Valiant. </author> <title> A Fast Parallel Algorithm for Routing in Permutation Networks. </title> <journal> In IEEE Trans. Computers, </journal> <volume> C-30:2, </volume> <year> 1981. </year>
Reference-contexts: However, it does not produce a matching. Our randomized rounding procedure can produce a matching. Furthermore, as mentioned already in Theorem 1.3, the procedure runs in O (log n log log n) time on an EREW PRAM. This relies on a parallel algorithm in <ref> [LPV81] </ref> that decomposes L-regular multigraphs into L disjoint perfect matchings in O (log L log n) parallel time. In our procedure L = poly (log (n)). We can derandomize our algorithm by derandomizing OVERSAMPLING and MERGE in the standard way.
Reference: [R88] <author> P. Raghavan. </author> <title> Probabilistic construction of deterministic algorithms: Approximate packing integer programs. </title> <journal> JCSS, </journal> <volume> 37(2) </volume> <pages> 130-43, </pages> <month> October </month> <year> 1988. </year>
Reference: [RT87] <author> P. Raghavan and C. Thompson. </author> <title> Randomized Rounding: a technique for provably good algorithms and algorithmic proofs Combinatorica, </title> <booktitle> 7 </booktitle> <pages> 365-374, </pages> <year> 1987. </year>
Reference-contexts: A fractional solution is called a fractional perfect matching. 2 A casual examination of the assignment constraints immediately seems to rule out a central tech-nique of [AKK95], namely, the use of Raghavan-Thompson <ref> [RT87] </ref> rounding to convert fractional solutions to integral "approximate" solutions. Randomized rounding would change a fractional perfect matching (x ij ) into a 0-1 vector y by setting y ij = 1 with probability x ij .
Reference: [SG76] <author> S. Sahni and T. Gonzales. </author> <title> P-complete approximation problems. </title> <journal> JACM, </journal> <volume> 23 </volume> <pages> 555-565, </pages> <year> 1976. </year>
Reference: [ST93] <author> D. B. Shmoys and E. Tardos. </author> <title> An approximation algorithm for the generalized assignment problem. </title> <note> In Math. Programming 62:pp 461-474, </note> <year> 1993. </year>
Reference-contexts: However, their procedure yields a fractional matching, and they had left it as an open problem whether this fractional matching could be "rounded" to an integral almost-matching in N C. Comparison with Related Work: Shmoys and Tardos <ref> [ST93] </ref> consider approximation algorithms for the generalized assignment problem, which involves generalized assignment constraints mixed with other linear constraints. However, they don't allow negative coefficients in the constraints. We don't impose this restriction, but then settle for additive approximation instead of multiplicative approximation. <p> However, they don't allow negative coefficients in the constraints. We don't impose this restriction, but then settle for additive approximation instead of multiplicative approximation. On the other hand, we return an almost-perfect matching as a solution, which <ref> [ST93] </ref> could not. 1.1 The Problems Now we describe the NP-hard problems that are considered in this paper.
Reference: [Y85] <author> M. Yannakakis. </author> <title> A polynomial algorithm for the min cut linear arrangement problem on trees. </title> <journal> JACM, </journal> <volume> 32: </volume> <pages> pp 950-988, </pages> <year> 1985. </year>
Reference-contexts: The minimum value of c () is called the cutwidth of the graph. We will restrict attention to dense graphs. Previous work includes an exact algorithm when the graph is a tree <ref> [Y85] </ref>, and a O (log 2 n)- factor approximation on general graphs [LR88].. 6. betweeness: Given a finite set A and a collection C of ordered triples (a; b; c) of distinct elements from A.
References-found: 19

