URL: ftp://softlib.rice.edu/pub/CRPC-TRs/reports/CRPC-TR93334.ps.gz
Refering-URL: http://www.crpc.rice.edu/CRPC/softlib/TRs_online.html
Root-URL: 
Title: Problem Formulation for Multidisciplinary Optimization  
Author: Evin J. Cramer J. E. Dennis, Jr. Paul D. Frank Robert Michael Lewis Gregory R. Shubin 
Keyword: Constrained optimization, multidisciplinary design optimization, optimal design, computational engineering.  
Address: P.O. Box 24346, Mail Stop 7L-21, Seattle, WA, 98124-0346  
Note: The Boeing Company,  
Date: August 25, 1993  
Abstract: This paper is concerned with the optimization of systems of coupled simulations. In computational engineering, this frequently is called multidisciplinary (design) optimization, or MDO. We present an expository introduction to MDO for optimization researchers. We believe the optimization community has much to contribute to this important class of computational engineering problems. In addition, this paper presents a new abstraction for multidisciplinary analysis and design problems as well as new decomposition formulations for these problems. Furthermore, the "individual discipline feasible" (IDF) approaches suggested here make use of existing specialized simulation analysis codes, and they introduce significant opportunities for coarse-grained computational parallelism particularly well-suited to heterogeneous computing environments. The key issue in the three fundamental approaches to MDO formulation discussed here is the kind of feasibility that must be maintained at each optimization iteration. In the most familiar "multidisciplinary feasible" (MDF) approach, the multidisciplinary analysis problem is solved multiple times at each optimization iteration, at least once everytime any problem function or constraint or derivative is evaluated. At the other end of the spectrum is the "all-at-once" (AAO) approach where feasibility is guaranteed only at optimization convergence. Between these extremes lie the new IDF formulations that amount to maintaining feasibility of the individual analysis disciplines at each optimization iteration, while allowing the optimizer to drive the computation toward multidisciplinary feasibility as convergence is approached. There are further considerations in choosing a formulation, such as what sensitivities are required and how the optimization is actually done. Our discussion of these and other issues related to MDO problem formulation highlights the trade-offs between reuse of existing software, computational requirements, and probability of success. y Department of Computational and Applied Mathematics, Rice University, P.O. Box 1892, Houston, TX, 77251-1892. This work was supported by the State of Texas under contract #1059, the Air Force Office of Scientific Research under grants F49629-92-J-0203 and F49629-9310212, the Department of Energy under grant DE-FG005-86ER25017, the Army Research Office under grant DAAL03-90-G-0093, and the National Science Foundation under cooperative agreement CCR-9120008. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Baysal, O. </author> <title> and E.M. Eleshaky. Aerodynamic design using sensitivity analysis and computational fluid dynamics. </title> <type> Technical Report AIAA-91-0471, </type> <institution> AIAA, </institution> <month> January, </month> <year> 1991. </year> <note> Presented at the 29th Aerospace Sciences Meeting, January 7-10, 1991, Reno, Nevada. </note>
Reference-contexts: There seem to be two alternatives: analytic approaches (implicit differentiation, sensitivity equations, adjoint equation solution) and automatic differentiation. Even though there is considerable research interest in analytic methods for sensitivity or gradient calculations <ref> [2, 1, 8, 6, 7, 10, 11] </ref>, few analysis codes in engineering use today provide the required derivatives. We hope that automatic differentiation will provide an alternative approach to retrofit existing codes to produce the derivatives. Automatic differentiation should not be confused with symbolic differentiation.
Reference: [2] <author> Borggaard,J., J.A. Burns, E.M. Cliff, and M. Gunzburger. </author> <title> Sensitivity calculations for 2d, inviscid, supersonic forebody problem. </title> <type> Technical Report 93-13, </type> <institution> ICASE, </institution> <month> March, </month> <year> 1993. </year>
Reference-contexts: There seem to be two alternatives: analytic approaches (implicit differentiation, sensitivity equations, adjoint equation solution) and automatic differentiation. Even though there is considerable research interest in analytic methods for sensitivity or gradient calculations <ref> [2, 1, 8, 6, 7, 10, 11] </ref>, few analysis codes in engineering use today provide the required derivatives. We hope that automatic differentiation will provide an alternative approach to retrofit existing codes to produce the derivatives. Automatic differentiation should not be confused with symbolic differentiation.
Reference: [3] <author> Cramer, E.J., P.D. Frank, G.R. Shubin, J.E. Dennis, Jr., and R.M. Lewis. </author> <title> On alternative problem formulations for multidisciplinary design optimization. </title> <booktitle> AIAA-92-4752, 4th Symposium on Multidisciplinary Analysis and Optimization, </booktitle> <month> September 21-23, </month> <year> 1992, </year> <institution> Cleveland, OH. </institution>
Reference-contexts: Section 6 discusses the derivative requirements for MDO. Section 7 discusses some issues related to choosing a formulation. In Section 8, we present our conclusions. The contents of this paper represent an abstraction and generalization of more specific material presented in <ref> [3] </ref>. It is natural to ask whether the generalization is worthwhile, or whether this paper should have the more limited goal only of introducing optimizers to the interesting, important, and challenging problem of MDO.
Reference: [4] <editor> Frank, P.D., A.J. Booker, T.P. Caudel, and M.J. </editor> <title> Healy. Optimization and search methods for multidisciplinary design. </title> <booktitle> AIAA-92-4827, 4th Symposium on Multidisciplinary Analysis and Optimization, </booktitle> <month> September 21-23, </month> <year> 1992, </year> <institution> Cleveland, OH. </institution>
Reference-contexts: Given a problem and an NLP code, we do offer in the next section some advice on choosing a formulation. Generally, in MDO as elsewhere we will choose between different optimization techniques based on problem size, smoothness, derivative availability, and sparsity. Frank et al. <ref> [4] </ref> investigated the applicability of derivative-based methods (nonlinear programming techniques), response surfaces, expert systems, genetic algorithms, simulated annealing, and neural networks to MDO problems. As one would suspect, they concluded that for problems where derivative-based methods can be applied, these methods are much more effective than the other techniques.
Reference: [5] <author> Frank, </author> <title> P.D. and G.R. Shubin. A comparison of optimization-based approaches for a model computational aerodynamics design problem. </title> <journal> Journal of Computational Physics, </journal> <volume> 98(1) </volume> <pages> 74-89, </pages> <year> 1992. </year>
Reference-contexts: Other "all-at-once" (AAO) formulations for design optimization problems have been mentioned in the literature for aerodynamic optimization (e.g., <ref> [5, 9, 13, 21] </ref>), structural optimization (e.g., [6]), chemical process control, and control and inverse problems (e.g., [16, 20]). <p> In [13] this approach is called the "one-shot" method, and in [6] it is called "simultaneous analysis and design." In <ref> [5] </ref> the authors discuss how AAO can be remarkably efficient for aerodynamic optimization, provided some computational difficulties can be overcome. The rest of this section describes two aeroelastic IDF methods.
Reference: [6] <author> Haftka, R.T., Z. Gurdal, </author> <title> and M.P. Kamat. Elements of Structural Optimization. </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1990. </year>
Reference-contexts: Other "all-at-once" (AAO) formulations for design optimization problems have been mentioned in the literature for aerodynamic optimization (e.g., [5, 9, 13, 21]), structural optimization (e.g., <ref> [6] </ref>), chemical process control, and control and inverse problems (e.g., [16, 20]). In [13] this approach is called the "one-shot" method, and in [6] it is called "simultaneous analysis and design." In [5] the authors discuss how AAO can be remarkably efficient for aerodynamic optimization, provided some computational difficulties can be <p> Other "all-at-once" (AAO) formulations for design optimization problems have been mentioned in the literature for aerodynamic optimization (e.g., [5, 9, 13, 21]), structural optimization (e.g., <ref> [6] </ref>), chemical process control, and control and inverse problems (e.g., [16, 20]). In [13] this approach is called the "one-shot" method, and in [6] it is called "simultaneous analysis and design." In [5] the authors discuss how AAO can be remarkably efficient for aerodynamic optimization, provided some computational difficulties can be overcome. The rest of this section describes two aeroelastic IDF methods. <p> There seem to be two alternatives: analytic approaches (implicit differentiation, sensitivity equations, adjoint equation solution) and automatic differentiation. Even though there is considerable research interest in analytic methods for sensitivity or gradient calculations <ref> [2, 1, 8, 6, 7, 10, 11] </ref>, few analysis codes in engineering use today provide the required derivatives. We hope that automatic differentiation will provide an alternative approach to retrofit existing codes to produce the derivatives. Automatic differentiation should not be confused with symbolic differentiation.
Reference: [7] <author> Jameson, A. </author> <title> Aerodynamic design via control theory. </title> <type> Technical Report 88-64, </type> <institution> ICASE, </institution> <month> November, </month> <year> 1988. </year>
Reference-contexts: There seem to be two alternatives: analytic approaches (implicit differentiation, sensitivity equations, adjoint equation solution) and automatic differentiation. Even though there is considerable research interest in analytic methods for sensitivity or gradient calculations <ref> [2, 1, 8, 6, 7, 10, 11] </ref>, few analysis codes in engineering use today provide the required derivatives. We hope that automatic differentiation will provide an alternative approach to retrofit existing codes to produce the derivatives. Automatic differentiation should not be confused with symbolic differentiation.
Reference: [8] <author> Korivi, V., A. Taylor, III, P. Newman and G. Hou, and H. Jones. </author> <title> An approximately factored incremental strategy for calculating consistent discrete CFD sensitivity derivatives. </title> <booktitle> AIAA-92-4746, 4th Symposium on Multidisciplinary Analysis and Optimization, </booktitle> <month> September 21-23, </month> <year> 1992, </year> <institution> Cleveland, OH. </institution>
Reference-contexts: There seem to be two alternatives: analytic approaches (implicit differentiation, sensitivity equations, adjoint equation solution) and automatic differentiation. Even though there is considerable research interest in analytic methods for sensitivity or gradient calculations <ref> [2, 1, 8, 6, 7, 10, 11] </ref>, few analysis codes in engineering use today provide the required derivatives. We hope that automatic differentiation will provide an alternative approach to retrofit existing codes to produce the derivatives. Automatic differentiation should not be confused with symbolic differentiation.
Reference: [9] <author> Rizk, M.H. </author> <title> Aerodynamic optimization by simultaneously updating flow variables and design parameters. </title> <journal> AGARD Paper No. </journal> <volume> 15, </volume> <month> May </month> <year> 1989. </year>
Reference-contexts: Other "all-at-once" (AAO) formulations for design optimization problems have been mentioned in the literature for aerodynamic optimization (e.g., <ref> [5, 9, 13, 21] </ref>), structural optimization (e.g., [6]), chemical process control, and control and inverse problems (e.g., [16, 20]).
Reference: [10] <author> Shubin, </author> <title> G.R. Obtaining "cheap" optimization gradients from computational aerodynamics codes. </title> <type> Technical Report AMS-TR-164, </type> <institution> Boeing Computer Services, </institution> <month> June, </month> <year> 1991. </year> <month> 26 </month>
Reference-contexts: There seem to be two alternatives: analytic approaches (implicit differentiation, sensitivity equations, adjoint equation solution) and automatic differentiation. Even though there is considerable research interest in analytic methods for sensitivity or gradient calculations <ref> [2, 1, 8, 6, 7, 10, 11] </ref>, few analysis codes in engineering use today provide the required derivatives. We hope that automatic differentiation will provide an alternative approach to retrofit existing codes to produce the derivatives. Automatic differentiation should not be confused with symbolic differentiation.
Reference: [11] <author> Shubin, G.R. and P.D. Frank. </author> <title> A comparison of two closely-related approaches to aero-dynamic design optimization. </title> <editor> In G.S. Dulikravich, editor, </editor> <booktitle> Proceedings of the Third International Conference on Inverse Design Concepts and Optimization in Engineering Sciences (ICIDES-III), </booktitle> <month> October, </month> <year> 1991. </year>
Reference-contexts: There seem to be two alternatives: analytic approaches (implicit differentiation, sensitivity equations, adjoint equation solution) and automatic differentiation. Even though there is considerable research interest in analytic methods for sensitivity or gradient calculations <ref> [2, 1, 8, 6, 7, 10, 11] </ref>, few analysis codes in engineering use today provide the required derivatives. We hope that automatic differentiation will provide an alternative approach to retrofit existing codes to produce the derivatives. Automatic differentiation should not be confused with symbolic differentiation.
Reference: [12] <author> Sobieszczanski-Sobieski, J. </author> <title> Sensitivity of complex, internally coupled systems. </title> <journal> AIAA Journal, </journal> <volume> 28(1) </volume> <pages> 153-160, </pages> <year> 1990. </year>
Reference-contexts: Thus, the gradient of the objective function is just the transpose of the block row of the constraint Jacobian corresponding to C D , with C D replaced by f . 6.1 Derivatives required for the MDF formulation For MDF optimization, Sobieski <ref> [12] </ref> gives a complete presentation of the alternative approaches, but our MDO model includes the fit and evaluate routines and so the form is slightly different here. <p> Note that the derivatives required for the IDF formulation are the same as those required in (22) and by Sobieski <ref> [12] </ref> (in his GSE2 approach) for computing MDF problem derivatives.
Reference: [13] <author> Ta'asan, S., G. Kuruvila, and M.D. Salas. </author> <title> Aerodynamic design and optimization in one shot. AIAA Paper 92-0025, </title> <booktitle> 30th Aerospace Sciences Meeting, </booktitle> <address> Reno, NV, </address> <month> January, </month> <year> 1992. </year>
Reference-contexts: Other "all-at-once" (AAO) formulations for design optimization problems have been mentioned in the literature for aerodynamic optimization (e.g., <ref> [5, 9, 13, 21] </ref>), structural optimization (e.g., [6]), chemical process control, and control and inverse problems (e.g., [16, 20]). <p> Other "all-at-once" (AAO) formulations for design optimization problems have been mentioned in the literature for aerodynamic optimization (e.g., [5, 9, 13, 21]), structural optimization (e.g., [6]), chemical process control, and control and inverse problems (e.g., [16, 20]). In <ref> [13] </ref> this approach is called the "one-shot" method, and in [6] it is called "simultaneous analysis and design." In [5] the authors discuss how AAO can be remarkably efficient for aerodynamic optimization, provided some computational difficulties can be overcome. The rest of this section describes two aeroelastic IDF methods.
Reference: [14] <author> Young, D.K. and F.J. Tarzanian Jr. </author> <title> Structural optimization and Mach scale test validation of a low vibration rotor. </title> <booktitle> 47th Annual Forum of the American Helicopter Society, </booktitle> <address> Phoenix, Arizona, </address> <year> 1991. </year>
Reference-contexts: The other alternative, of course, is to use simplified analyses in the optimization and then to correct via iterative refinement. For example, this approach has been used in multidisciplinary design of helicopter rotors <ref> [14] </ref>. We observe that this approach dovetails well with the IDF approach, where an existing multidisciplinary analysis procedure can be viewed as "one discipline," and information of higher fidelity for a single analysis code can be the "second discipline" [19].
Reference: [15] <institution> AIAA Technical Committee on Multidisciplinary Design Optimization (MDO). White paper on current state of the art. American Institute of Aeronautics and Astronautics, </institution> <year> 1991. </year>
Reference-contexts: We do not concentrate here on the application of mathematical programming algorithms to MDO. The question of formulating MDO problems is a major topic in the engineering literature on MDO (e.g., <ref> [15] </ref>). In part, the genesis of the ideas given here was to find ways to exploit parallel computation in nonlinear programming. We turned to reformulating the problems because the design of parallel algorithms for general nonlinear programming has not been very successful.
Reference: [16] <author> H.T. Banks and K. Kunisch. </author> <title> Estimation techniques for distributed parameter systems. </title> <publisher> Birkhauser, </publisher> <year> 1989. </year>
Reference-contexts: Other "all-at-once" (AAO) formulations for design optimization problems have been mentioned in the literature for aerodynamic optimization (e.g., [5, 9, 13, 21]), structural optimization (e.g., [6]), chemical process control, and control and inverse problems (e.g., <ref> [16, 20] </ref>). In [13] this approach is called the "one-shot" method, and in [6] it is called "simultaneous analysis and design." In [5] the authors discuss how AAO can be remarkably efficient for aerodynamic optimization, provided some computational difficulties can be overcome.
Reference: [17] <author> C. Bischof, A. Carle, G. Corliss, A. Griewank, and P. Hovland. ADIFOR: </author> <title> generating derivative codes from Fortran programs. </title> <type> Technical Report CRPC-TR91185, </type> <note> Center for Research on Parallel Computation, </note> <month> December, </month> <year> 1991. </year>
Reference-contexts: We hope that automatic differentiation will provide an alternative approach to retrofit existing codes to produce the derivatives. Automatic differentiation should not be confused with symbolic differentiation. In AD IFOR <ref> [17] </ref>, the automatic differentiation tool with which we are the most familiar, the def 19 inition of the function is given as a standard Fortran program.
Reference: [18] <author> J.E. Dennis, Guangye Li, and Karen Williamson. </author> <title> Optimization algorithms for parameter identification. </title> <type> Technical Report CRPC-TR92277, </type> <note> Center for Research on Parallel Computation, </note> <month> January, </month> <year> 1992. </year>
Reference-contexts: In Table 2 we speculate on the performance that might be achieved by the approaches. These hypotheses are supported by the experimental results shown in <ref> [23, 18] </ref>. The multidisciplinary feasible (MDF) and individual discipline feasible (IDF) approaches have the advantage of using, with moderate or no modification, existing single discipline analysis codes.
Reference: [19] <author> Grose, </author> <title> D.L. </title> <type> private communication. </type>
Reference-contexts: We observe that this approach dovetails well with the IDF approach, where an existing multidisciplinary analysis procedure can be viewed as "one discipline," and information of higher fidelity for a single analysis code can be the "second discipline" <ref> [19] </ref>. The iterative refinement outer loop could build a response surface model of the higher fidelity code. The iterative refinement optimization loop would then use the IDF method 25 with the multidisciplinary analysis as one discipline and the response surface model as the second discipline.
Reference: [20] <author> F.-S. Kupfer and E. W. Sachs. </author> <title> A prospective look at SQP methods for semilinear parabolic control problems. In Optimal control of partial differential equations: </title> <booktitle> proceedings of the IFIP WG 7.2 International Conference, </booktitle> <pages> pages 145-157, </pages> <year> 1991. </year>
Reference-contexts: Other "all-at-once" (AAO) formulations for design optimization problems have been mentioned in the literature for aerodynamic optimization (e.g., [5, 9, 13, 21]), structural optimization (e.g., [6]), chemical process control, and control and inverse problems (e.g., <ref> [16, 20] </ref>). In [13] this approach is called the "one-shot" method, and in [6] it is called "simultaneous analysis and design." In [5] the authors discuss how AAO can be remarkably efficient for aerodynamic optimization, provided some computational difficulties can be overcome.
Reference: [21] <author> C.E. Orozco and O. N. Ghattas. </author> <title> Massively parallel aerodynamic shape optimization. </title> <type> preprint. </type>
Reference-contexts: Other "all-at-once" (AAO) formulations for design optimization problems have been mentioned in the literature for aerodynamic optimization (e.g., <ref> [5, 9, 13, 21] </ref>), structural optimization (e.g., [6]), chemical process control, and control and inverse problems (e.g., [16, 20]).
Reference: [22] <author> R. T. Haftka, J. Sobieszczanski-Sobieski, and S. L. Padula. </author> <title> On options for interdisciplinary analysis and design optimization. </title> <journal> Structural Optimization, </journal> <volume> 4(2) </volume> <pages> 65-74, </pages> <year> 1992. </year>
Reference-contexts: Many different IDF formulations can be developed by using the option to sequence the individual codes. We interpret the formulation represented by equation (12) in <ref> [22] </ref> as a sequenced IDF formulation, and so this is not unique to the present work. 5.1.6 Feasible point formulations vs. feasible point algorithms We think it worthwhile to discuss briefly the distinction between the generalized reduced gradient (GRG) approach, which corresponds to MDF, and a gradient restoration approach applied to
Reference: [23] <author> Shubin, </author> <title> G.R. Application of alternative multidisciplinary optimization formulations to a new model problem for static aeroelasticity. </title> <type> Technical Report BCSTECH-93-022, </type> <institution> Boeing Computer Services, </institution> <month> August, </month> <year> 1993. </year> <month> 27 </month>
Reference-contexts: In Table 2 we speculate on the performance that might be achieved by the approaches. These hypotheses are supported by the experimental results shown in <ref> [23, 18] </ref>. The multidisciplinary feasible (MDF) and individual discipline feasible (IDF) approaches have the advantage of using, with moderate or no modification, existing single discipline analysis codes.
References-found: 23

