URL: http://www.cs.pitt.edu/~kirk/papers/dag.ps
Refering-URL: http://www.cs.pitt.edu/~kirk/papers/index.html
Root-URL: 
Email: fkalyan,kirkg@cs.pitt.edu,  
Title: Online Network Optimization Problems  
Author: Bala Kalyanasundaram and Kirk Pruhs 
Web: http://www.cs.pitt.edu/f~kalyan,~kirkg  
Address: Pittsburgh, Pittsburgh, PA 15260, USA.  
Affiliation: Computer Science Dept., University of  
Abstract: We survey results on online versions of the standard network optimization problems, including the minimum spanning tree problem, the minimum Steiner tree problem, the weighted and unweighted matching problems, and the traveling salesman problem. The goal in these problems is to maintain, with minimal changes, a low cost subgraph of some type in a dynamically changing network.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> N. Alon and Y. Azar. </author> <title> On-line steiner trees in the euclidean plane. </title> <journal> Discrete and Computational Geometry, </journal> <volume> 10 </volume> <pages> 113-121, </pages> <year> 1993. </year> <note> Also in Proc. 8th ACM Symposium on Computational Geometry, </note> <year> 1992, </year> <pages> pp. 337-343. </pages>
Reference-contexts: It appears that the diameter is reduced in 9 this construction at the cost of increasing the degrees of the nodes. Open Question: Is there an online algorithm which is close to optimal in size, diameter, and degree? Alon and Azar <ref> [1] </ref> considered the online Steiner tree problem where the underlying graph is the Euclidean plane. Based on a construction by Bentley and Saxe [6], they proved a lower bound of (log k= log log k) on the competitive ratio of any randomized online algorithm.
Reference: 2. <author> G. Ausiello, E. Feuerstein, S. Leonardi, L. Stougie, and M. Talamo. </author> <title> Serving requests with online routing. </title> <booktitle> In Proceedngs of Scandinavian Workshop on Algorithm Theory, volume 824 of Lecture Notes in Computer Science, </booktitle> <year> 1994. </year>
Reference-contexts: Since these problems fall more within the paradigm of search problems (see the survey on search problems) they do not fit neatly within in the models proposed in the introduction. Ausiello, Feuerstein, Leonardi, Stougie, and Talamo <ref> [2, 3] </ref> consider a variant of the TSP problem with release times. Let t i be the time that the ith point p i is added to G. It is required that the salesman must visit p i after time t i . <p> When a new point arrives the salesman can, at no cost, recompute a new path to visit the remaining points. The competitive ratio is then just the length of the path traveled by the online traveling salesman divided by the optimal path that satisfies the release time constraints. <ref> [2, 3] </ref> give the following results. The graph G is always assumed to be a metric space. In [2] they first considered the TS path problem, i.e. the salesman is not constrained to return to the origin. <p> The competitive ratio is then just the length of the path traveled by the online traveling salesman divided by the optimal path that satisfies the release time constraints. [2, 3] give the following results. The graph G is always assumed to be a metric space. In <ref> [2] </ref> they first considered the TS path problem, i.e. the salesman is not constrained to return to the origin. For an arbitrary metric space, the greedy algorithm has a competitive ratio of 5=2.
Reference: 3. <author> G. Ausiello, E. Feuerstein, S. Leonardi, L. Stougie, and M. Talamo. </author> <title> Competitive algorithms for the on-line traveling salesman problem. </title> <booktitle> In Proceedngs of International Workshop on Algorithms and Data Structures, volume 955 of Lecture Notes in Computer Science, </booktitle> <year> 1995. </year>
Reference-contexts: Since these problems fall more within the paradigm of search problems (see the survey on search problems) they do not fit neatly within in the models proposed in the introduction. Ausiello, Feuerstein, Leonardi, Stougie, and Talamo <ref> [2, 3] </ref> consider a variant of the TSP problem with release times. Let t i be the time that the ith point p i is added to G. It is required that the salesman must visit p i after time t i . <p> When a new point arrives the salesman can, at no cost, recompute a new path to visit the remaining points. The competitive ratio is then just the length of the path traveled by the online traveling salesman divided by the optimal path that satisfies the release time constraints. <ref> [2, 3] </ref> give the following results. The graph G is always assumed to be a metric space. In [2] they first considered the TS path problem, i.e. the salesman is not constrained to return to the origin. <p> If N is the real line, the algorithm that always attempts to visit the extreme point that is nearest the origin is 7=3 competitive. In the tour problem, where the salesman is required to return to the origin, <ref> [3] </ref> shows that life is slightly easier for the online algorithm. For an arbitrary metric space, a modification to the greedy algorithm is 2-competitive.
Reference: 4. <author> B. Awerbuch, Y. Azar, and Y. Bartal. </author> <title> On-line generalized steiner problem. </title> <booktitle> In Proc. of 7th ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 68-74, </pages> <year> 1996. </year> <month> 12 </month>
Reference-contexts: In contrast, the competitive ratio of every deterministic online algorithm is (log k) [12, 24]. Awerbuch, Azar and Bartal <ref> [4] </ref> proved that the greedy algorithm is O (log 2 k) competitive. Subsequently [7] gave a O (log k) competitive online algorithm. <p> Bartal, Fiat and Rabani [5] used competitive analysis to measure the efficiency of algorithms for the file allocation problem which is closely related to GSP . Awerbuch, Azar and Bartal <ref> [4] </ref> generalized GSP to the Network Connectivity Leasing Problem, where the online algorithm can either buy or lease an edge while constructing the graph. Obviously the cost of buying is more than that of leasing.
Reference: 5. <author> Y. Bartal, A. Fiat, and Y. Rabani. </author> <title> Competitive algorithms for distributed data management. </title> <booktitle> In Proc. of the 24th Symposium on Theory of Computation, </booktitle> <pages> pages 39-48, </pages> <year> 1992. </year>
Reference-contexts: Open Question: Is it possible to reduce the number of edge deletions to constant per change to G? Finally we mention some results that are closely related to GSP . Bartal, Fiat and Rabani <ref> [5] </ref> used competitive analysis to measure the efficiency of algorithms for the file allocation problem which is closely related to GSP . Awerbuch, Azar and Bartal [4] generalized GSP to the Network Connectivity Leasing Problem, where the online algorithm can either buy or lease an edge while constructing the graph.
Reference: 6. <author> J. Bentley and J. Saxe. </author> <title> An analysis of two heuristics for the euclidean traveling salesman problem. </title> <booktitle> In Proceedings of the Allerton Conference on Communication, Control, and Computing, </booktitle> <pages> pages 41-49, </pages> <year> 1980. </year>
Reference-contexts: Open Question: Is there an online algorithm which is close to optimal in size, diameter, and degree? Alon and Azar [1] considered the online Steiner tree problem where the underlying graph is the Euclidean plane. Based on a construction by Bentley and Saxe <ref> [6] </ref>, they proved a lower bound of (log k= log log k) on the competitive ratio of any randomized online algorithm. The one result that does not assume the monotone model is by Imase and Waxman [12], who considered the fixed cost model.
Reference: 7. <author> P. Berman and C. Coulston. </author> <title> Online algorithms for steiner tree problems. </title> <booktitle> In Proceedings of the 29th Annual ACM Symposium on Theory of Computing, </booktitle> <year> 1997. </year>
Reference-contexts: In contrast, the competitive ratio of every deterministic online algorithm is (log k) [12, 24]. Awerbuch, Azar and Bartal [4] proved that the greedy algorithm is O (log 2 k) competitive. Subsequently <ref> [7] </ref> gave a O (log k) competitive online algorithm.
Reference: 8. <author> B. Chandra and S. Viswanathan. </author> <title> Constructing reliable communication networks of small weight. </title> <journal> Journal of Algorithms, </journal> <volume> 18(1) </volume> <pages> 159-175, </pages> <year> 1995. </year>
Reference-contexts: They considered both the monotonic model and the fixed cost model. They showed a lower bound of (log k) on the deterministic competitive factor for the monotonic case. They showed that the greedy algorithm is O (log k)-competitive. Chandra and Viswanathan <ref> [8] </ref> extended the results of Imase and Waxman by considering the problem of constructing a d-connected subgraph of the revealed nodes in the monotone model. They showed that the greedy algorithm is 8d 2 log k competitive.
Reference: 9. <author> R. Graham and P. Hell. </author> <title> On the history of the minimum spanning tree problem. </title> <journal> Annals of the History of Computing, </journal> <volume> 7 </volume> <pages> 43-57, </pages> <year> 1985. </year>
Reference-contexts: 1 Introduction In the early 1920's Otakar Bor _uvka was asked by the Electric Power Company of Western Moravia (EPCWM) to assist in EPCWM's electrification of southern Moravia by solving from a mathematical standpoint the question of how to construct the most economical electric power network <ref> [9] </ref>. In 1926 Bor _uvka initiated the study of network optimization problems, by publishing an efficient algorithm for constructing a minimum spanning tree of a fixed network [9]. <p> EPCWM's electrification of southern Moravia by solving from a mathematical standpoint the question of how to construct the most economical electric power network <ref> [9] </ref>. In 1926 Bor _uvka initiated the study of network optimization problems, by publishing an efficient algorithm for constructing a minimum spanning tree of a fixed network [9]. Certainly since the 1920's the underlying collection of sites that require electrification in southern Moravia has changed frequently as new sites require service, and perhaps occasionally some sites drop service.
Reference: 10. <author> E. Grove, M. Kao, P. Krishnan, and J. Vitter. </author> <title> Online perfect matching and mobile computing. </title> <booktitle> In Proceedings of International Workshop on Algorithms and Data Structures, </booktitle> <year> 1995. </year>
Reference-contexts: Motivated by problems in mobile computing, Grove, Kao, Krishnan, and Vitter <ref> [10] </ref> consider the unweighted matching problem in essentially the fixed quality model, with the quality parameter fi = 1. That is they wish to always maintain a maximum matching. Strictly speaking, [10] assume that a request r j must be serviced when it arrives, if it is possible to do so <p> Motivated by problems in mobile computing, Grove, Kao, Krishnan, and Vitter <ref> [10] </ref> consider the unweighted matching problem in essentially the fixed quality model, with the quality parameter fi = 1. That is they wish to always maintain a maximum matching. Strictly speaking, [10] assume that a request r j must be serviced when it arrives, if it is possible to do so without terminating service to another request, but there is no requirement that r j receive service at some later point of time if it should become possible to provide service. <p> The event of a mobile computer leaving the coverage area of its current MSS can be simulated by a request departure, followed by a request arrival. Motivated by this mobile computing application, <ref> [10] </ref> make the natural assumption that the cost of switching the server site handling a request is approximately the same as the cost of handling a request. <p> So generally speaking, servicing a request requires a sequences of switches along an augmenting path, with the cost being the length of the augmenting path. All of the results presented in <ref> [10] </ref> assume that the degree of each request vertex is only two. They argue that this should be the worst case because more paths intuitively help the online algorithm more than the adversary. <p> So Rand is essentially a randomized harmonic form of the greedy algorithm. In the case that each c j = 1 and vertices are allowed to leave G, the competitive ratio of Rand is O ( p is (n 1=3 ). <ref> [10] </ref> show that the competitive ratio of every deterministic algorithm is ( n), and implicitly show that the competitive ratio of every randomized algorithm is (log n) for the general problem in the fixed quality model with fi = 1. <p> Optimal algorithms for some specific metric spaces, and lower bounds for some other natural algorithms can also be found in <ref> [10] </ref>. Open Question: The obvious open question is to find optimally competitive deterministic and randomized algorithms for the general problem in the fixed cost model. Perhaps allowing fi to be slightly larger than 1 might make the online algorithm's task easier. <p> As a first step, one should probably try to analyze these greedy algorithms. The scant evidence available to date <ref> [10, 12] </ref> suggests that perhaps the greedy algorithms in the fixed cost and fixed quality models will be less likely to be close to optimally competitive than in the monotone model. Acknowledgments: We thank Eddie Grove and Stefano Leonardi for helpful suggestions.
Reference: 11. <author> R. Idury and A. Schaffer. </author> <title> A better lower bound for on-line bottleneck matching. </title> <type> manuscript, </type> <year> 1992. </year>
Reference-contexts: Other variants of online assignment have also been considered. For the online bottleneck matching problem, where you want to minimize the maximum weight of an edge in the matching, Permutation is still 2m 1 competitive and Idury and Schaffer <ref> [11] </ref> showed a lower bound on the competitive ratio of any deterministic algorithm that approaches m= ln 2 1:44 m for large m.
Reference: 12. <author> M. Imase and B. M. Waxman. </author> <title> Dynamic steiner tree problem. </title> <journal> SIAM J. Discrete Math., </journal> <volume> 4 </volume> <pages> 369-384, </pages> <year> 1991. </year>
Reference-contexts: Note that in general the subgraph H need not be a single connected component. With the exception of the paper of Imase and Waxman <ref> [12] </ref>, all the papers assume the monotonic model. We use n to denote the number of nodes in the underlying network N , s to denote the number of requests, and k to denote the number of distinct vertices that appeared in at least one of the s requests. <p> In contrast, the competitive ratio of every deterministic online algorithm is (log k) <ref> [12, 24] </ref>. Awerbuch, Azar and Bartal [4] proved that the greedy algorithm is O (log 2 k) competitive. Subsequently [7] gave a O (log k) competitive online algorithm. <p> Awerbuch, Azar and Bartal [4] proved that the greedy algorithm is O (log 2 k) competitive. Subsequently [7] gave a O (log k) competitive online algorithm. Open Question: What is the competitive ratio of the greedy algorithm? Imase and Waxman <ref> [12] </ref> considered the dynamic Steiner tree problem, which is a restricted case of GSP , where nodes in G are revealed online and the goal is to maintain a Steiner tree that contains all of the revealed nodes. They considered both the monotonic model and the fixed cost model. <p> Based on a construction by Bentley and Saxe [6], they proved a lower bound of (log k= log log k) on the competitive ratio of any randomized online algorithm. The one result that does not assume the monotone model is by Imase and Waxman <ref> [12] </ref>, who considered the fixed cost model. If k points have been added [12] allow O (k 3=2 ) edge deletions/additions to the H subgraphs, or in other words, O (k 1=2 ) amortized changes per revealed vertex. <p> The one result that does not assume the monotone model is by Imase and Waxman <ref> [12] </ref>, who considered the fixed cost model. If k points have been added [12] allow O (k 3=2 ) edge deletions/additions to the H subgraphs, or in other words, O (k 1=2 ) amortized changes per revealed vertex. They showed that this many changes is sufficient to maintain a Steiner tree that has cost at most a constant times optimum. <p> As a first step, one should probably try to analyze these greedy algorithms. The scant evidence available to date <ref> [10, 12] </ref> suggests that perhaps the greedy algorithms in the fixed cost and fixed quality models will be less likely to be close to optimally competitive than in the monotone model. Acknowledgments: We thank Eddie Grove and Stefano Leonardi for helpful suggestions.
Reference: 13. <author> B. Kalyanasundaram and K. Pruhs. </author> <title> A competitive analysis of algorithms for searching unknown scenes. Computational Geometry: </title> <journal> Theory and Applications, </journal> <volume> 3 </volume> <pages> 139-155, </pages> <year> 1993. </year> <note> Preliminary version appeared in STACS '92. </note>
Reference-contexts: The seeker's goal is minimize the ratio of the distance that it travels divided by the distance between the origin and x. This corresponds to a lazy adversary that only moves one server. There is an O ( p n) competitive algorithm for hide and seek in the plane <ref> [13] </ref> and a constant competitive 7 algorithm for the line. We believe these are also the optimal competitive ratios for online assignment in these metric spaces. One possible candidate algorithm for the line is the generalized work function algorithm.
Reference: 14. <author> B. Kalyanasundaram and K. Pruhs. </author> <title> Online weighted matching. </title> <journal> Journal of Algorithms, </journal> <volume> 14 </volume> <pages> 478-488, </pages> <year> 1993. </year> <note> Preliminary version appeared in SODA '91. </note>
Reference-contexts: Perhaps allowing fi to be slightly larger than 1 might make the online algorithm's task easier. Note that the problem becomes almost trivial for fi = 2. 2.2 Weighted Matching Kalyanasundaram and Pruhs <ref> [14] </ref> and Khuller, Mitchell, and Vazirani [20] considered the online assignment problem, i.e. the online transportation problem where each capacity c j = 1 (so n m). <p> If the costs are arbitrary then <ref> [14, 20] </ref> show that no algorithm (deterministic or randomized) can have a competitive ratio independent of the edge costs. So [14, 20] assume the costs are indeed distances, and satisfy the triangle inequality. [14, 20] give a deterministic online algorithm, called Permutation in [14], with competitive ratio 2m 1. <p> If the costs are arbitrary then <ref> [14, 20] </ref> show that no algorithm (deterministic or randomized) can have a competitive ratio independent of the edge costs. So [14, 20] assume the costs are indeed distances, and satisfy the triangle inequality. [14, 20] give a deterministic online algorithm, called Permutation in [14], with competitive ratio 2m 1. Let M i be the minimum weight matching of the first i requests. <p> If the costs are arbitrary then <ref> [14, 20] </ref> show that no algorithm (deterministic or randomized) can have a competitive ratio independent of the edge costs. So [14, 20] assume the costs are indeed distances, and satisfy the triangle inequality. [14, 20] give a deterministic online algorithm, called Permutation in [14], with competitive ratio 2m 1. Let M i be the minimum weight matching of the first i requests. <p> If the costs are arbitrary then [14, 20] show that no algorithm (deterministic or randomized) can have a competitive ratio independent of the edge costs. So [14, 20] assume the costs are indeed distances, and satisfy the triangle inequality. [14, 20] give a deterministic online algorithm, called Permutation in <ref> [14] </ref>, with competitive ratio 2m 1. Let M i be the minimum weight matching of the first i requests. <p> Let M i be the minimum weight matching of the first i requests. In response to request r i , Permutation answers r i with the unique unused server site in the same connected component as r i in M i1 [ M i . <ref> [14, 20] </ref> show that 2m 1 is the lower bound on the competitive ratio of any deterministic algorithm in a "star" metric space with the servers initially on the leaves. <p> A star metric space has one center point of distance 1 from the leaves and each leaf is distance 2 from every other leaf. The natural greedy algorithm that matches a request with the closest unused server has a competitive ratio of 2 m 1 <ref> [14] </ref>. Assuming that the points are uniformly scattered on the unit disk in the Euclidean plane, Tsai, Tang and Chen [22] showed that the expected cost for greedy is at most O ( p m) times the cost of the minimum matching. <p> For the problem of maximizing the weight of the matching, <ref> [14] </ref> showed that the greedy algorithm, which matches each server to the farthest available server, is 3-competitive and that this is optimal for deterministic algorithms. <p> A universal algorithm would have a competitive ratio that is at most a constant times optimal for every metric space. Since there seems to be no natural description for the optimal online algorithm for online assignment with 3 server sites on a line <ref> [14] </ref>, it seems unlikely that there is a simple algorithm that would assure absolute optimality on every metric space. Note that it is unlikely that the generalized work function algorithm will be universal since it uses nearest neighbor search to search configurations that have the same optimal cost.
Reference: 15. <author> B. Kalyanasundaram and K. Pruhs. </author> <title> Constructing competitive tours from local information. </title> <journal> Theoretical Computer Science, </journal> <volume> 130 </volume> <pages> 125-138, </pages> <year> 1994. </year> <note> Preliminary version appeared in ICALP '93. </note>
Reference-contexts: There is a rather complicated algorithm PQR that is shown to have a competitive ratio of 7=4 on a line. Motivated by the problem of a salesman attempting to visit all the towns in some rural state for which he does not have a map, Kalyanasundaram and Pruhs <ref> [15] </ref> define the following version of online TSP. When the salesman visits a vertex v, it learns of each vertex w adjacent to v in N , as well as the length jvwj of the edge vw. <p> The salesman's goal is to visit all of the vertices in N , with his/her path being as short as possible. Note that the salesman controls to some extent how N is revealed. <ref> [15] </ref> gives a deterministic algorithm ShortCut that is at most 16-competitive when N is planar. Note that N need not even be a metric space, all that is required is that the unweighted version of N can be drawn in the plane so that no edges cross. <p> Open Question: We do not know of any example showing that ShortCut is not constant competitive for an arbitrary N . Note that in <ref> [15] </ref> the planarity of N is only required in the proof that ShortCut is constant competitive.
Reference: 16. <author> B. Kalyanasundaram and K. Pruhs. </author> <title> The online transportation problem. </title> <booktitle> In Proceedings of European Symposium on Algorithms, volume 979 of Lecture Notes in Computer Science, </booktitle> <pages> pages 484-493, </pages> <year> 1995. </year>
Reference-contexts: For the problem of maximizing the weight of the matching, [14] showed that the greedy algorithm, which matches each server to the farthest available server, is 3-competitive and that this is optimal for deterministic algorithms. Kalyanasundaram and Pruhs <ref> [16] </ref> consider the online transportation problem under the assumption that the capacity of each site c j is equal to some integer 6 k. The competitive ratio for greedy is still 2 m 1, but the competitive ratio for Permutation rises to fi (km) = fi (n). <p> Notice that greedy can be asymptotically better than Permutation if 2 m = o (n). Open Question: What is the optimal competitive ratio in terms of m, the number of sites, for the online transportation problem? It seems that there should be an 2m 1 competitive algorithm. In <ref> [16] </ref> the weak adversary model is assumed. In this model, the online algorithm A that has c i servers at s i is compared to an o*ine line adversary that has only a i &lt; c i servers at s i . <p> The weak adversary model is motivated by the desire to exclude adversarial inputs, and the desire to determine the additional resources required by the online algorithm to counteract the adverse effect of nonclairvoyance. Further motivation can be found in <ref> [16] </ref>. In [16] only the case a i = c i =2 is considered. [16] show that the weak-competitive ratio of the greedy algorithm is fi (min (m; log C)), where C = i=1 c i is the sum of the capacities. <p> The weak adversary model is motivated by the desire to exclude adversarial inputs, and the desire to determine the additional resources required by the online algorithm to counteract the adverse effect of nonclairvoyance. Further motivation can be found in <ref> [16] </ref>. In [16] only the case a i = c i =2 is considered. [16] show that the weak-competitive ratio of the greedy algorithm is fi (min (m; log C)), where C = i=1 c i is the sum of the capacities. <p> Further motivation can be found in <ref> [16] </ref>. In [16] only the case a i = c i =2 is considered. [16] show that the weak-competitive ratio of the greedy algorithm is fi (min (m; log C)), where C = i=1 c i is the sum of the capacities. <p> If the server capacity of each site is constant, then the weak competitive ratio is logarithmic in m, a significant improvement over the exponential traditional competitive ratio for greedy. Furthermore, <ref> [16] </ref> give an online algorithm, Balance, that is a simple modification of the greedy algorithm, and that has a constant weak competitive ratio.
Reference: 17. <author> B. Kalyanasundaram and K. Pruhs. </author> <title> An optimal determinstic algorithm for online b-matching. </title> <type> manuscript, </type> <month> April </month> <year> 1996. </year>
Reference-contexts: Kao and Tate [18] give some partial results for the case that points arrive in groups of t at a time. Kalyanasundaram and Pruhs <ref> [17] </ref> continue the study in the monotonic model for the case where each capacity c j is equal to some fixed integer k. [17] give a deterministic algorithm Balance whose competitive ratio is 1 1 (1+ 1 k ) k , which approaches 11=e for large n and large k. <p> Kao and Tate [18] give some partial results for the case that points arrive in groups of t at a time. Kalyanasundaram and Pruhs <ref> [17] </ref> continue the study in the monotonic model for the case where each capacity c j is equal to some fixed integer k. [17] give a deterministic algorithm Balance whose competitive ratio is 1 1 (1+ 1 k ) k , which approaches 11=e for large n and large k.
Reference: 18. <author> M.-Y. Kao and S. R. Tate. </author> <title> Online matching with blocked input. </title> <journal> Inform. Process. Lett., </journal> <volume> 38 </volume> <pages> 113-116, </pages> <year> 1991. </year>
Reference-contexts: Then in response to a request, Ranking selects the highest ranked unused site to service that request. [19] also show that Ranking is optimally competitive, up to lower order terms, for randomized algorithms. Kao and Tate <ref> [18] </ref> give some partial results for the case that points arrive in groups of t at a time.
Reference: 19. <author> R. M. Karp, U. V. Vazirani, and V. V. Vazirani. </author> <title> An optimal algorithm for online bipartite matching. </title> <booktitle> In Proceedings of the 22nd Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 352-358, </pages> <address> Baltimore, Maryland, </address> <month> May </month> <year> 1990. </year>
Reference-contexts: Notice that the competitive ratio is at most 1, and to be consistent with other papers we follow this notation instead of considering the inverse of this ratio. Karp, Vazirani, and Vazirani <ref> [19] </ref> consider the standard matching problem, with each server capacity c j is equal to 1, in the monotonic model. <p> It is easy to see that no deterministic algorithm can be have a competitive ratio better than 1 2 . <ref> [19] </ref> gives a randomized algorithm Ranking whose competitive 4 ratio approaches 1 1=e for large n. Initially, Ranking numbers the sites randomly so that each of the n! orderings are equally likely. Then in response to a request, Ranking selects the highest ranked unused site to service that request. [19] also <p> . <ref> [19] </ref> gives a randomized algorithm Ranking whose competitive 4 ratio approaches 1 1=e for large n. Initially, Ranking numbers the sites randomly so that each of the n! orderings are equally likely. Then in response to a request, Ranking selects the highest ranked unused site to service that request. [19] also show that Ranking is optimally competitive, up to lower order terms, for randomized algorithms. Kao and Tate [18] give some partial results for the case that points arrive in groups of t at a time.
Reference: 20. <author> S. Khuller, S. G. Mitchell, and V. V. Vazirani. </author> <title> On-line algorithms for weighted bipartite matching and stable marriages. </title> <booktitle> In Proc. 18th Int. Colloquium on Automata, Languages and Programming, </booktitle> <pages> pages 728-738. </pages> <booktitle> Lecture Notes in Computer Science 510, </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1991. </year>
Reference-contexts: Perhaps allowing fi to be slightly larger than 1 might make the online algorithm's task easier. Note that the problem becomes almost trivial for fi = 2. 2.2 Weighted Matching Kalyanasundaram and Pruhs [14] and Khuller, Mitchell, and Vazirani <ref> [20] </ref> considered the online assignment problem, i.e. the online transportation problem where each capacity c j = 1 (so n m). If the costs are arbitrary then [14, 20] show that no algorithm (deterministic or randomized) can have a competitive ratio independent of the edge costs. <p> If the costs are arbitrary then <ref> [14, 20] </ref> show that no algorithm (deterministic or randomized) can have a competitive ratio independent of the edge costs. So [14, 20] assume the costs are indeed distances, and satisfy the triangle inequality. [14, 20] give a deterministic online algorithm, called Permutation in [14], with competitive ratio 2m 1. <p> If the costs are arbitrary then <ref> [14, 20] </ref> show that no algorithm (deterministic or randomized) can have a competitive ratio independent of the edge costs. So [14, 20] assume the costs are indeed distances, and satisfy the triangle inequality. [14, 20] give a deterministic online algorithm, called Permutation in [14], with competitive ratio 2m 1. Let M i be the minimum weight matching of the first i requests. <p> If the costs are arbitrary then <ref> [14, 20] </ref> show that no algorithm (deterministic or randomized) can have a competitive ratio independent of the edge costs. So [14, 20] assume the costs are indeed distances, and satisfy the triangle inequality. [14, 20] give a deterministic online algorithm, called Permutation in [14], with competitive ratio 2m 1. Let M i be the minimum weight matching of the first i requests. <p> Let M i be the minimum weight matching of the first i requests. In response to request r i , Permutation answers r i with the unique unused server site in the same connected component as r i in M i1 <ref> [ M i . [14, 20] </ref> show that 2m 1 is the lower bound on the competitive ratio of any deterministic algorithm in a "star" metric space with the servers initially on the leaves. <p> Let M i be the minimum weight matching of the first i requests. In response to request r i , Permutation answers r i with the unique unused server site in the same connected component as r i in M i1 [ M i . <ref> [14, 20] </ref> show that 2m 1 is the lower bound on the competitive ratio of any deterministic algorithm in a "star" metric space with the servers initially on the leaves.
Reference: 21. <author> D. Rosenkrantz, R. Stearns, and P. Lewis. </author> <title> An analysis of several heuristics for the traveling salesman problem. </title> <journal> SIAM Journal of Computing, </journal> <volume> 6 </volume> <pages> 563-581, </pages> <year> 1977. </year>
Reference-contexts: Note that it is unlikely that the generalized work function algorithm will be universal since it uses nearest neighbor search to search configurations that have the same optimal cost. Nearest neighbor is known to be only fi (log n) competitive for online TSP <ref> [21] </ref>. Although, a proof that the generalized work function algorithm is within O (log n) of being universal would be a good first step toward finding a universal algorithm.
Reference: 22. <author> Y. Tsai, C. Tang, and Y. Chen. </author> <title> Average performance of a greedy algorithm for the on-line minimum matching problem on euclidean space. </title> <journal> Information Processing Letters, </journal> <volume> 51 </volume> <pages> 275-282, </pages> <year> 1994. </year>
Reference-contexts: The natural greedy algorithm that matches a request with the closest unused server has a competitive ratio of 2 m 1 [14]. Assuming that the points are uniformly scattered on the unit disk in the Euclidean plane, Tsai, Tang and Chen <ref> [22] </ref> showed that the expected cost for greedy is at most O ( p m) times the cost of the minimum matching. Other variants of online assignment have also been considered.
Reference: 23. <author> J. Westbrook and D. Yan. </author> <title> Linear bounds for on-line steiner problems. </title> <journal> Information Processing Letters, </journal> <volume> 55 </volume> <pages> 59-63, </pages> <year> 1995. </year> <month> 13 </month>
Reference-contexts: Usually, reliability means that we would like to maintain connections between given pairs of sites even if some number of sites/links are down. Krarup (see <ref> [23] </ref>) introduced the generalized Steiner problem GSP to study many variants of such design problems. Given an undirected graph G with positive weights on the edges, the goal in GSP is to construct a minimum weight subgraph of G that satisfies a given connectivity requirement. <p> We use n to denote the number of nodes in the underlying network N , s to denote the number of requests, and k to denote the number of distinct vertices that appeared in at least one of the s requests. Westbrook and Yan <ref> [23] </ref> showed that there is no randomized algorithm that achieves a competitive ratio better than (k + 2)=4 for online node-GSP , and that there is no randomized algorithm that achieves a competitive ratio better than (s + 1)=4 for online edge-GSP , even if r (u; v) = 2.
Reference: 24. <author> Jeffery Westbrook and Dicky C.K. Yan. </author> <title> Lazy and greedy: On-line algorithms for steiner problems. </title> <booktitle> In Proc. 1993 Workshop on Algorithms and Data Structures, </booktitle> <year> 1993. </year> <note> To appear in Mathematical Systems Theory. </note>
Reference-contexts: Open Question: Can the competitive ratios be improved if the underlying graph is a metric space, i.e. it is complete graph and the edge weights satisfy the triangle inequality? In the case that each r (u; v) = 1, Westbrook and Yan <ref> [24] </ref> showed that the greedy algorithm has a competitive ratio of O ( p k log k). In contrast, the competitive ratio of every deterministic online algorithm is (log k) [12, 24]. Awerbuch, Azar and Bartal [4] proved that the greedy algorithm is O (log 2 k) competitive. <p> In contrast, the competitive ratio of every deterministic online algorithm is (log k) <ref> [12, 24] </ref>. Awerbuch, Azar and Bartal [4] proved that the greedy algorithm is O (log 2 k) competitive. Subsequently [7] gave a O (log k) competitive online algorithm.
References-found: 24

