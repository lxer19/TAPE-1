URL: http://www-graphics.stanford.edu/~dzorin/multires/meshed/sig97_noimg.ps.gz
Refering-URL: http://www-graphics.stanford.edu/~dzorin/multires/meshed/index.html
Root-URL: http://www.cs.stanford.edu
Title: Interactive Multiresolution Mesh Editing  
Author: Denis Zorin Peter Schroder Wim Sweldens 
Affiliation: Caltech  Caltech  Bell Laboratories  
Abstract: We describe a multiresolution representation for meshes based on subdivision. Subdivision is a natural extension of the existing patch-based surface representations. At the same time subdivision algorithms can be viewed as operating directly on polygonal meshes, which makes them a useful tool for mesh manipulation. Combination of subdivision and smoothing algorithms of Taubin [26] allows us to construct a set of algorithms for interactive multiresolution editing of complex meshes of arbitrary topology. Simplicity of the essential algorithms for refinement and coarsification allows to make them local and adaptive, considerably improving their efficiency. We have built a scalable interactive multiresolution editing system based on such algorithms.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Anonymized. </author> <title> Creases with a tension parameter. </title> <note> in preparation, </note> <month> January </month> <year> 1997. </year>
Reference-contexts: by (v) = (!(K) + K) 1 (!(K) s i (v) + P K Two independent tangent vectors t 1 (v) and t 2 (v) are given by t p (v) = P K Features such as boundaries and cusps can be accommodated through simple modifications of the stencil weights <ref> [15, 25, 1] </ref>. Butterfly is an interpolating scheme, first proposed by Dyn et al. [7] in the topologically regular setting and recently generalized to arbitrary topologies [27]. Since it is interpolating we have s i (v) = (v) for v 2 V i even.
Reference: [2] <author> Burt, P. J., and Adelson, E. H. </author> <title> Laplacian Pyramid as a Compact Image Code. </title> <journal> IEEE Trans. Commun. </journal> <volume> 31, 4 (1983), </volume> <pages> 532-540. </pages>
Reference-contexts: This difference is then computed with respect to the local frame F i to obtain coordinate independence. Since detail vectors are sampled on the fine level mesh V i , this transformation yields an overrepresenta-tion in the same spirit as the Burt-Adelson Laplacian pyramid <ref> [2] </ref>. The only difference is that the smoothing filters (Taubin) are not the dual of the subdivision filter (Loop). Theoretically it would be possible to sub-sample the detail vectors and only record a detail per odd vertex of M i1 . This is what happens in the wavelet transform.
Reference: [3] <author> Catmull, E., and Clark, J. </author> <title> Recursively Generated B-Spline Surfaces on Arbitrary Topological Meshes. </title> <booktitle> Computer Aided Design 10, 6 (1978), </booktitle> <pages> 350-355. </pages>
Reference-contexts: Our system is inspired by a number of earlier approaches. We mention multiresolution editing [12, 10, 13], arbitrary topology subdivision <ref> [6, 3, 20, 7, 27, 17] </ref>, wavelet representations [22, 24, 8], and mesh simplification [14, 18]. 1.1 Earlier Editing Approaches H-splines were presented in pioneering work on hierarchical editing by Forsey and Bartels [12]. <p> Fig. 4). In the regular patch based setting, for example, this sequence can be defined through well known knot insertion algorithms [5]. Some subdivision methods generalize spline based knot insertion to irregular topology control meshes <ref> [3, 6, 20] </ref> while other subdivision schemes are independent of splines and include a number of interpolating schemes [7, 27, 17]. Since subdivision provides a path from patches to meshes, it can serve as a good foundation for the unified infrastructure that we seek.
Reference: [4] <author> Dahmen, W., Micchelli, C. A., and Seidel, H.-P. </author> <title> Blossoming Begets B-Splines Bases Built Better by B-Patches. </title> <booktitle> Mathematics of Computation 59, </booktitle> <month> 199 (July </month> <year> 1992), </year> <month> 97-115. </month> <title> [5] de Boor, C. A Practical Guide to Splines. </title> <publisher> Springer, </publisher> <year> 1978. </year>
Reference-contexts: Combined with hardware support relatively fast implementations are possible. However, when building complex models with many patches the preservation of smoothness across patch boundaries can be quite cumbersome and expensive. These difficulties are compounded in the arbitrary topology setting when polynomial parameterizations cease to exist everywhere. Surface splines <ref> [4, 21, 23] </ref> provide one way to address the arbitrary topology challenge. As more fine level detail is needed the proliferation of control points and patches can quickly overwhelm both the user and the most powerful hardware.
Reference: [6] <author> Doo, D., and Sabin, M. </author> <title> Analysis of the Behaviour of Recursive Division Surfaces near Extraordinary Points. </title> <booktitle> Computer Aided Design 10, 6 (1978), </booktitle> <pages> 356-360. </pages>
Reference-contexts: Our system is inspired by a number of earlier approaches. We mention multiresolution editing [12, 10, 13], arbitrary topology subdivision <ref> [6, 3, 20, 7, 27, 17] </ref>, wavelet representations [22, 24, 8], and mesh simplification [14, 18]. 1.1 Earlier Editing Approaches H-splines were presented in pioneering work on hierarchical editing by Forsey and Bartels [12]. <p> Fig. 4). In the regular patch based setting, for example, this sequence can be defined through well known knot insertion algorithms [5]. Some subdivision methods generalize spline based knot insertion to irregular topology control meshes <ref> [3, 6, 20] </ref> while other subdivision schemes are independent of splines and include a number of interpolating schemes [7, 27, 17]. Since subdivision provides a path from patches to meshes, it can serve as a good foundation for the unified infrastructure that we seek.
Reference: [7] <author> Dyn, N., Levin, D., and Gregory, J. A. </author> <title> A Butterfly Subdivision Scheme for Surface Interpolation with Tension Control. </title> <journal> ACM Trans. Gr. </journal> <volume> 9, </volume> <month> 2 (April </month> <year> 1990), </year> <pages> 160-169. </pages>
Reference-contexts: Our system is inspired by a number of earlier approaches. We mention multiresolution editing [12, 10, 13], arbitrary topology subdivision <ref> [6, 3, 20, 7, 27, 17] </ref>, wavelet representations [22, 24, 8], and mesh simplification [14, 18]. 1.1 Earlier Editing Approaches H-splines were presented in pioneering work on hierarchical editing by Forsey and Bartels [12]. <p> Some subdivision methods generalize spline based knot insertion to irregular topology control meshes [3, 6, 20] while other subdivision schemes are independent of splines and include a number of interpolating schemes <ref> [7, 27, 17] </ref>. Since subdivision provides a path from patches to meshes, it can serve as a good foundation for the unified infrastructure that we seek. Internally, a single representation exists: polyhedral meshes. The semantics of manipulation support patch type behavior and finest level detail polyhedral edits equally well. <p> Butterfly is an interpolating scheme, first proposed by Dyn et al. <ref> [7] </ref> in the topologically regular setting and recently generalized to arbitrary topologies [27]. Since it is interpolating we have s i (v) = (v) for v 2 V i even.
Reference: [8] <author> Eck, M., DeRose, T., Duchamp, T., Hoppe, H., Lounsbery, M., and Stuetzle, W. </author> <title> Mul-tiresolution Analysis of Arbitrary Meshes. </title> <booktitle> Computer Graphics Proceedings, (SIGGRAPH 95) (1995), </booktitle> <pages> 173-182. </pages>
Reference-contexts: Our system is inspired by a number of earlier approaches. We mention multiresolution editing [12, 10, 13], arbitrary topology subdivision [6, 3, 20, 7, 27, 17], wavelet representations <ref> [22, 24, 8] </ref>, and mesh simplification [14, 18]. 1.1 Earlier Editing Approaches H-splines were presented in pioneering work on hierarchical editing by Forsey and Bartels [12].
Reference: [9] <author> Eck, M., DeRose, T., Duchamp, T., Hoppe, H., Lounsbery, M., and Stuetzle, W. </author> <title> Multires-olution Analysis of Arbitrary Meshes. </title> <booktitle> In Computer Graphics Proceedings, Annual Conference Series, </booktitle> <pages> 173-182, </pages> <year> 1995. </year>
Reference-contexts: The introduction of analysis algorithms and the connection with subdivision were the main contributions of wavelets to multiresolution editing. Subdivision, however, relies on the finest level mesh having subdivision connectivity. This requires a remeshing step before external high resolution geometry can be imported into the editor. Eck et al. <ref> [9] </ref> have described a possible approach to remeshing arbitrary finest level input meshes fully automatically. A method that relies on a user's expertise was developed by Krishnamurthy and Levoy [18].
Reference: [10] <author> Finkelstein, A., and Salesin, D. H. </author> <title> Multiresolution Curves. </title> <booktitle> Computer Graphics Proceedings, Annual Conference Series, </booktitle> <pages> 261-268, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: Our system is inspired by a number of earlier approaches. We mention multiresolution editing <ref> [12, 10, 13] </ref>, arbitrary topology subdivision [6, 3, 20, 7, 27, 17], wavelet representations [22, 24, 8], and mesh simplification [14, 18]. 1.1 Earlier Editing Approaches H-splines were presented in pioneering work on hierarchical editing by Forsey and Bartels [12]. <p> Wavelets provide a framework in which to rigorously define multiresolution approximations and fast analysis algorithms. Finkelstein and Salesin <ref> [10] </ref>, for example, used B-spline wavelets to describe mul-tiresolution editing of curves. As in H-splines, parameterization of details with respect to a coordinate frame induced by the coarser level approximation is required to get correct editing semantics.
Reference: [11] <author> Forsey, D., and Wong, D. </author> <title> Multiresolution Surface Reconstruction for Hierarchical B-splines. </title> <type> Tech. rep., </type> <institution> University of British Columbia, </institution> <year> 1995. </year>
Reference-contexts: To edit an a priori given model it is crucial to have a general procedure to define coarser levels and compute details between levels. We refer to this as the analysis algorithm. An H-spline analysis algorithm based on weighted least squares was introduced <ref> [11] </ref>, but is too expensive to run interactively. Note that even in an ab initio design setting online analysis is needed, since after a long sequence of editing steps the H-spline is likely to be overly refined and needs to be consolidated. <p> i: s i1 = H s i : Several options are available here: * Least squares: One could define analysis to be optimal in the least squares sense, min ks i S s i1 k 2 : The solution may have unwanted undulations and is too expensive to compute interactively <ref> [11] </ref>. * Fairing: A coarse surface could be obtained as the solution to a global variational problem. This is too expensive as well. An alternative is presented by Taubin [26], who uses a local non shrinking smoothing approach.
Reference: [12] <author> Forsey, D. R., and Bartels, R. H. </author> <title> Hierarchical B-Spline Refinement. </title> <booktitle> Computer Graphics (SIG-GRAPH '88 Proceedings), </booktitle> <volume> Vol. 22, No. 4, </volume> <pages> pp. 205-212, </pages> <month> August </month> <year> 1988. </year>
Reference-contexts: Our system is inspired by a number of earlier approaches. We mention multiresolution editing <ref> [12, 10, 13] </ref>, arbitrary topology subdivision [6, 3, 20, 7, 27, 17], wavelet representations [22, 24, 8], and mesh simplification [14, 18]. 1.1 Earlier Editing Approaches H-splines were presented in pioneering work on hierarchical editing by Forsey and Bartels [12]. <p> We mention multiresolution editing [12, 10, 13], arbitrary topology subdivision [6, 3, 20, 7, 27, 17], wavelet representations [22, 24, 8], and mesh simplification [14, 18]. 1.1 Earlier Editing Approaches H-splines were presented in pioneering work on hierarchical editing by Forsey and Bartels <ref> [12] </ref>. Briefly, H-splines are obtained by adding finer resolution B-splines onto an existing coarser resolution B-spline patch relative to the coordinate frame induced by the coarser patch. Repeating this process, one can build very complicated shapes which are entirely parameterized over the unit square.
Reference: [13] <author> Gortler, S. J., and Cohen, M. F. </author> <title> Hierarchical and Variational Geometric Modeling with Wavelets. </title> <booktitle> In Proceedings Symposium on Interactive 3D Graphics, </booktitle> <month> May </month> <year> 1995. </year>
Reference-contexts: Our system is inspired by a number of earlier approaches. We mention multiresolution editing <ref> [12, 10, 13] </ref>, arbitrary topology subdivision [6, 3, 20, 7, 27, 17], wavelet representations [22, 24, 8], and mesh simplification [14, 18]. 1.1 Earlier Editing Approaches H-splines were presented in pioneering work on hierarchical editing by Forsey and Bartels [12]. <p> Finkelstein and Salesin [10], for example, used B-spline wavelets to describe mul-tiresolution editing of curves. As in H-splines, parameterization of details with respect to a coordinate frame induced by the coarser level approximation is required to get correct editing semantics. Gortler and Cohen <ref> [13] </ref>, pointed out that wavelet representations of detail tend to behave in undesirable ways during editing and returned to a pure B-spline representation as used in H-splines. Carrying these constructions over into the arbitrary topology surface framework is not straightforward.
Reference: [14] <author> Hoppe, H. </author> <title> Progressive Meshes. </title> <booktitle> In SIGGRAPH 96 Conference Proceedings, </booktitle> <editor> H. Rushmeier, Ed., </editor> <booktitle> Annual Conference Series, </booktitle> <pages> 99-108, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: Interactivity, which is crucial in these cases, is challenging to achieve. Even without accounting for any computation on the mesh itself, available rendering resources alone, may not be able to cope with the sheer size of the data. Possible approaches include mesh optimization <ref> [16, 14] </ref> to reduce the size of the meshes. exercises regularly. The original is on the right (courtesy Venkat Krischnamurthy). <p> Our system is inspired by a number of earlier approaches. We mention multiresolution editing [12, 10, 13], arbitrary topology subdivision [6, 3, 20, 7, 27, 17], wavelet representations [22, 24, 8], and mesh simplification <ref> [14, 18] </ref>. 1.1 Earlier Editing Approaches H-splines were presented in pioneering work on hierarchical editing by Forsey and Bartels [12]. Briefly, H-splines are obtained by adding finer resolution B-splines onto an existing coarser resolution B-spline patch relative to the coordinate frame induced by the coarser patch. <p> Given that most hardware rendering ultimately resolves to triangle scan-conversion even for patches, polygonal meshes are a very basic primitive. Because of sheer size, polygonal meshes are difficult to manipulate interactively. Mesh simplification algorithms <ref> [14] </ref> provide one possible answer. However, we need a mesh simplification approach, which is hierarchical and gives us shape handles for smooth changes over larger regions while maintaining high frequency details. Patches and fine polygonal meshes represent two ends of a spectrum.
Reference: [15] <author> Hoppe, H., DeRose, T., Duchamp, T., Halstead, M., Jin, H., McDonald, J., Schweitzer, J., and Stuetzle, W. </author> <title> Piecewise Smooth Surface Reconsruction. </title> <booktitle> In Computer Graphics Proceedings, Annual Conference Series, </booktitle> <pages> 295-302, </pages> <year> 1994. </year>
Reference-contexts: Additionally designers will typically also want control over the minute features of the model (cf. Fig. 1). Smoother approximations can be built through the use of patches <ref> [15] </ref>, though at the cost of loosing the high frequency details. Such detail can be reintroduced by combining patches with displacement maps [18]. However, this is difficult to manage in the arbitrary topology setting and across a continuous range of scales and hardware resources. <p> The clean structure of the basic algorithm greatly facilitates the design of adaptive and local versions. * Uniformity of Representation: subdivision provides a single representation of a surface at all resolution levels. Boundaries and features such as creases can be resolved through modified rules <ref> [15, 25] </ref>, eliminating the need for trim curves, for example. 1.3 Our Contribution Aside from our perspective, which unifies the earlier approaches, our major contribution|and the main challenge in this program|is the design of highly adaptive and dynamic data structures and algorithms, which allow the system to function across a range <p> by (v) = (!(K) + K) 1 (!(K) s i (v) + P K Two independent tangent vectors t 1 (v) and t 2 (v) are given by t p (v) = P K Features such as boundaries and cusps can be accommodated through simple modifications of the stencil weights <ref> [15, 25, 1] </ref>. Butterfly is an interpolating scheme, first proposed by Dyn et al. [7] in the topologically regular setting and recently generalized to arbitrary topologies [27]. Since it is interpolating we have s i (v) = (v) for v 2 V i even.
Reference: [16] <author> Hoppe, H., DeRose, T., Duchamp, T., McDonald, J., and Stuetzle, W. </author> <title> Mesh Optimization. </title> <booktitle> In Computer Graphics (SIGGRAPH '93 Proceedings), </booktitle> <editor> J. T. Kajiya, Ed., </editor> <volume> vol. 27, </volume> <pages> 19-26, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: Interactivity, which is crucial in these cases, is challenging to achieve. Even without accounting for any computation on the mesh itself, available rendering resources alone, may not be able to cope with the sheer size of the data. Possible approaches include mesh optimization <ref> [16, 14] </ref> to reduce the size of the meshes. exercises regularly. The original is on the right (courtesy Venkat Krischnamurthy).
Reference: [17] <author> Kobbelt, L. </author> <title> Interpolatory Subdivision on Open Quadrilateral Nets with Arbitrary Topology. </title> <booktitle> In Proceedings of Eurographics 96, Computer Graphics Forum, </booktitle> <pages> 409-420, </pages> <year> 1996. </year>
Reference-contexts: Our system is inspired by a number of earlier approaches. We mention multiresolution editing [12, 10, 13], arbitrary topology subdivision <ref> [6, 3, 20, 7, 27, 17] </ref>, wavelet representations [22, 24, 8], and mesh simplification [14, 18]. 1.1 Earlier Editing Approaches H-splines were presented in pioneering work on hierarchical editing by Forsey and Bartels [12]. <p> Some subdivision methods generalize spline based knot insertion to irregular topology control meshes [3, 6, 20] while other subdivision schemes are independent of splines and include a number of interpolating schemes <ref> [7, 27, 17] </ref>. Since subdivision provides a path from patches to meshes, it can serve as a good foundation for the unified infrastructure that we seek. Internally, a single representation exists: polyhedral meshes. The semantics of manipulation support patch type behavior and finest level detail polyhedral edits equally well.
Reference: [18] <author> Krishnamurthy, V., and Levoy, M. </author> <title> Fitting Smooth Surfaces to Dense Polygon Meshes. </title> <booktitle> In SIG-GRAPH 96 Conference Proceedings, </booktitle> <editor> H. Rushmeier, Ed., </editor> <booktitle> Annual Conference Series, </booktitle> <pages> 313-324, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: Additionally designers will typically also want control over the minute features of the model (cf. Fig. 1). Smoother approximations can be built through the use of patches [15], though at the cost of loosing the high frequency details. Such detail can be reintroduced by combining patches with displacement maps <ref> [18] </ref>. However, this is difficult to manage in the arbitrary topology setting and across a continuous range of scales and hardware resources. For reasons of efficiency the algorithms should be highly adaptive and dynamically adjust to available resources. <p> Our system is inspired by a number of earlier approaches. We mention multiresolution editing [12, 10, 13], arbitrary topology subdivision [6, 3, 20, 7, 27, 17], wavelet representations [22, 24, 8], and mesh simplification <ref> [14, 18] </ref>. 1.1 Earlier Editing Approaches H-splines were presented in pioneering work on hierarchical editing by Forsey and Bartels [12]. Briefly, H-splines are obtained by adding finer resolution B-splines onto an existing coarser resolution B-spline patch relative to the coordinate frame induced by the coarser patch. <p> This requires a remeshing step before external high resolution geometry can be imported into the editor. Eck et al. [9] have described a possible approach to remeshing arbitrary finest level input meshes fully automatically. A method that relies on a user's expertise was developed by Krishnamurthy and Levoy <ref> [18] </ref>. They wanted to build coarse B-spline patch approximations, augmented with displacement maps, to preprocess laser range scanner data for later animation. Since models built from B-spline patches will exhibit problems along patch boundaries, especially when animated, user specification of the patch boundaries is important in their setting.
Reference: [19] <author> Kurihara, T. </author> <title> Interactive Surface Design Using Recursive Subdivision. In Proceedings of Communicating with Virtual Worlds. </title> <publisher> Springer Verlag, </publisher> <month> June </month> <year> 1993. </year>
Reference-contexts: While their original implementation allowed only for regular topologies their approach could be extended to the general setting by using surface splines or one of the spline derived general topology subdivision schemes <ref> [19] </ref>. However, these schemes have not yet been made to work adaptively. Forsey and Bartels' original work focused on the ab initio design setting. There the user's help is enlisted in defining what is meant by different levels of resolution.
Reference: [20] <author> Loop, C. </author> <title> Smooth Subdivision Surfaces Based on Triangles. </title> <type> Master's thesis, </type> <institution> University of Utah, Department of Mathematics, </institution> <year> 1987. </year>
Reference-contexts: Our system is inspired by a number of earlier approaches. We mention multiresolution editing [12, 10, 13], arbitrary topology subdivision <ref> [6, 3, 20, 7, 27, 17] </ref>, wavelet representations [22, 24, 8], and mesh simplification [14, 18]. 1.1 Earlier Editing Approaches H-splines were presented in pioneering work on hierarchical editing by Forsey and Bartels [12]. <p> Fig. 4). In the regular patch based setting, for example, this sequence can be defined through well known knot insertion algorithms [5]. Some subdivision methods generalize spline based knot insertion to irregular topology control meshes <ref> [3, 6, 20] </ref> while other subdivision schemes are independent of splines and include a number of interpolating schemes [7, 27, 17]. Since subdivision provides a path from patches to meshes, it can serve as a good foundation for the unified infrastructure that we seek. <p> In this case the point s i+1 (m) is a function of the 1-rings around the vertices at the ends of the edge (cf. Fig. 7 bottom). Loop is a non-interpolating subdivision scheme based on a generalization of quartic triangular box splines <ref> [20] </ref>. For a given even vertex v 2 V i , let v k 2 V i with 1 k K be its K 1-ring neighbors.
Reference: [21] <author> Loop, C. </author> <title> Smooth Spline Surfaces over Irregular Meshes. </title> <booktitle> In Computer Graphics Proceedings, Annual Conference Series, </booktitle> <pages> 303-310, </pages> <year> 1994. </year>
Reference-contexts: Combined with hardware support relatively fast implementations are possible. However, when building complex models with many patches the preservation of smoothness across patch boundaries can be quite cumbersome and expensive. These difficulties are compounded in the arbitrary topology setting when polynomial parameterizations cease to exist everywhere. Surface splines <ref> [4, 21, 23] </ref> provide one way to address the arbitrary topology challenge. As more fine level detail is needed the proliferation of control points and patches can quickly overwhelm both the user and the most powerful hardware.
Reference: [22] <author> Lounsbery, M., DeRose, T. D., and Warren, J. </author> <title> Multiresolution Surfaces of Arbitrary Topological Type. </title> <institution> Department of Computer Science and Engineering 93-10-05, University of Washington, </institution> <month> October </month> <year> 1993. </year> <note> Updated version available as 93-10-05b, </note> <month> January, </month> <year> 1994. </year>
Reference-contexts: Our system is inspired by a number of earlier approaches. We mention multiresolution editing [12, 10, 13], arbitrary topology subdivision [6, 3, 20, 7, 27, 17], wavelet representations <ref> [22, 24, 8] </ref>, and mesh simplification [14, 18]. 1.1 Earlier Editing Approaches H-splines were presented in pioneering work on hierarchical editing by Forsey and Bartels [12]. <p> Carrying these constructions over into the arbitrary topology surface framework is not straightforward. In pioneering work by Lounsbery et al. <ref> [22] </ref> the connection between wavelets and subdivision was used to define the different levels of resolution. The original constructions were limited to piecewise linear subdivision, but smoother constructions are possible [24, 27].
Reference: [23] <author> Peters, J. </author> <title> C 1 Surface Splines. </title> <journal> SIAM J. Numer. Anal. </journal> <volume> 32, 2 (1995), </volume> <pages> 645-666. </pages>
Reference-contexts: Combined with hardware support relatively fast implementations are possible. However, when building complex models with many patches the preservation of smoothness across patch boundaries can be quite cumbersome and expensive. These difficulties are compounded in the arbitrary topology setting when polynomial parameterizations cease to exist everywhere. Surface splines <ref> [4, 21, 23] </ref> provide one way to address the arbitrary topology challenge. As more fine level detail is needed the proliferation of control points and patches can quickly overwhelm both the user and the most powerful hardware.
Reference: [24] <author> Schr oder, P., and Sweldens, W. </author> <title> Spherical wavelets: Efficiently representing functions on the sphere. </title> <booktitle> Computer Graphics Proceedings, (SIGGRAPH 95) (1995), </booktitle> <pages> 161-172. </pages>
Reference-contexts: Our system is inspired by a number of earlier approaches. We mention multiresolution editing [12, 10, 13], arbitrary topology subdivision [6, 3, 20, 7, 27, 17], wavelet representations <ref> [22, 24, 8] </ref>, and mesh simplification [14, 18]. 1.1 Earlier Editing Approaches H-splines were presented in pioneering work on hierarchical editing by Forsey and Bartels [12]. <p> In pioneering work by Lounsbery et al. [22] the connection between wavelets and subdivision was used to define the different levels of resolution. The original constructions were limited to piecewise linear subdivision, but smoother constructions are possible <ref> [24, 27] </ref>. The introduction of analysis algorithms and the connection with subdivision were the main contributions of wavelets to multiresolution editing. Subdivision, however, relies on the finest level mesh having subdivision connectivity. This requires a remeshing step before external high resolution geometry can be imported into the editor.
Reference: [25] <author> Schweitzer, J. E. </author> <title> Analysis and Application of Subdivision Surfaces. </title> <type> PhD thesis, </type> <institution> University of Washington, </institution> <year> 1996. </year>
Reference-contexts: The clean structure of the basic algorithm greatly facilitates the design of adaptive and local versions. * Uniformity of Representation: subdivision provides a single representation of a surface at all resolution levels. Boundaries and features such as creases can be resolved through modified rules <ref> [15, 25] </ref>, eliminating the need for trim curves, for example. 1.3 Our Contribution Aside from our perspective, which unifies the earlier approaches, our major contribution|and the main challenge in this program|is the design of highly adaptive and dynamic data structures and algorithms, which allow the system to function across a range <p> by (v) = (!(K) + K) 1 (!(K) s i (v) + P K Two independent tangent vectors t 1 (v) and t 2 (v) are given by t p (v) = P K Features such as boundaries and cusps can be accommodated through simple modifications of the stencil weights <ref> [15, 25, 1] </ref>. Butterfly is an interpolating scheme, first proposed by Dyn et al. [7] in the topologically regular setting and recently generalized to arbitrary topologies [27]. Since it is interpolating we have s i (v) = (v) for v 2 V i even.
Reference: [26] <author> Taubin, G. </author> <title> A Signal Processing Approach to Fair Surface Design. </title> <booktitle> In SIGGRAPH 95 Conference Proceedings, </booktitle> <editor> R. Cook, Ed., </editor> <booktitle> Annual Conference Series, </booktitle> <pages> 351-358, </pages> <month> August </month> <year> 1995. </year>
Reference-contexts: This is too expensive as well. An alternative is presented by Taubin <ref> [26] </ref>, who uses a local non shrinking smoothing approach. Because of its computational simplicity we decided to use the following version of Taubin smoothing. As before let v 2 V i have K neighbors v k 2 V i .
Reference: [27] <author> Zorin, D., Schr oder, P., and Sweldens, W. </author> <title> Interpolating Subdivision for Meshes with Arbitrary Topology. </title> <booktitle> Computer Graphics Proceedings (SIGGRAPH 96) (1996), </booktitle> <pages> 189-192. </pages>
Reference-contexts: Our system is inspired by a number of earlier approaches. We mention multiresolution editing [12, 10, 13], arbitrary topology subdivision <ref> [6, 3, 20, 7, 27, 17] </ref>, wavelet representations [22, 24, 8], and mesh simplification [14, 18]. 1.1 Earlier Editing Approaches H-splines were presented in pioneering work on hierarchical editing by Forsey and Bartels [12]. <p> In pioneering work by Lounsbery et al. [22] the connection between wavelets and subdivision was used to define the different levels of resolution. The original constructions were limited to piecewise linear subdivision, but smoother constructions are possible <ref> [24, 27] </ref>. The introduction of analysis algorithms and the connection with subdivision were the main contributions of wavelets to multiresolution editing. Subdivision, however, relies on the finest level mesh having subdivision connectivity. This requires a remeshing step before external high resolution geometry can be imported into the editor. <p> Some subdivision methods generalize spline based knot insertion to irregular topology control meshes [3, 6, 20] while other subdivision schemes are independent of splines and include a number of interpolating schemes <ref> [7, 27, 17] </ref>. Since subdivision provides a path from patches to meshes, it can serve as a good foundation for the unified infrastructure that we seek. Internally, a single representation exists: polyhedral meshes. The semantics of manipulation support patch type behavior and finest level detail polyhedral edits equally well. <p> Butterfly is an interpolating scheme, first proposed by Dyn et al. [7] in the topologically regular setting and recently generalized to arbitrary topologies <ref> [27] </ref>. Since it is interpolating we have s i (v) = (v) for v 2 V i even. For m 2 M i the definition of s i+1 (m) is based on a full stencil as shown in Fig. 7 on the bottom. <p> For m 2 M i the definition of s i+1 (m) is based on a full stencil as shown in Fig. 7 on the bottom. The exact expressions depend on the valence K and the reader is referred to the original paper for the exact values <ref> [27] </ref>. For our implementation we have chosen the Loop scheme, since more performance optimizations are possible in it. However, the algorithms we discuss later work for any 1-ring scheme. 3 Multiresolution Transforms So far we only discussed subdivision, i.e., how to go from coarse to fine meshes.
References-found: 26

