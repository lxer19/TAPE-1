URL: http://www.cs.rice.edu:80/~dbaker/publications/cttl96-1.ps
Refering-URL: http://www.cs.rice.edu:80/~dbaker/publications/cttl96-1abs.html
Root-URL: 
Email: fdbaker,tonyg@rice.edu  fgfowlerg@bcm.tmc.edu  
Title: The Memento Collaboration Infrastructure  
Author: Donald G. Baker Jerry Fowler G. Anthony Gorry 
Keyword: CSCW, collaboration, Memento, metaphor, agent, assistant.  
Address: P.O. Box 1892 Houston, Texas 77025  One Baylor Plaza, MS126E Houston, Texas 77030  
Affiliation: Rice University Center for Technology in Teaching and Learning  Baylor College of Medicine Department of Community Medicine  
Abstract: Memento is a novel client/server infrastructure that includes a "collaboration framework" to support the collaborative creation and manipulation of digital artifacts within arbitrary semantic domains. Memento's novelty lies in its representation and maintenance of semantic constraints on information that are represented explicitly in a formalized data model within the Memento server; for this reason, we say that Memento is meaning independent and object independent. Memento accomplishes these independencies by means of a self-describing and extensible type system. Because the structure of Memento objects facilitates their distribution across computer networks and enables real-time notification of updates, Memento provides support for many kinds of collaborative applications. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. G. Baker. Memento: </author> <title> A Collaborative, Semantic-Based Infrastructure for Building Assistant Applications. </title> <type> PhD dissertation, </type> <institution> Rice University, Department of Computer Science, </institution> <note> In preparation. </note>
Reference-contexts: The semantic constraints, or metamodel, of an assistant's domain will be represented in Memento as data. Memento will use the metamodel in the storage, transmission, and modification of the graphs so that their meaning is preserved throughout the collaboration <ref> [1] </ref>. Another forward-looking desire is to enable Memento assistants to react to changing network conditions such as is often found in mobile computing environments so as to handle degradations in network bandwidth gracefully.
Reference: [2] <author> L. Bass and P. Dewan, </author> <title> editors. Tools for Implementing Multiuser User Interfaces, </title> <booktitle> chapter 8, </booktitle> <pages> pages 149-174. </pages> <publisher> John Wiley and Sons, Ltd., </publisher> <year> 1993. </year>
Reference-contexts: Memento derives of experience gained from the development and deployment of the Virtual Notebook System (VNS) over the past several years [23, 8]. The VNS is a multi-platform collaborative hypermedia system based on the notebook metaphor. The VNS successfully facilitates collaboration via a centralized server model <ref> [2] </ref>; it supports multiple media types, including text, images, sound, and hypermedia links; and finally, authoring and browsing tools are one and the same, thus giving every user the potential to contribute to the notebook he is viewing.
Reference: [3] <author> S. K. Card, G. G. Robertson, and J. D. Macin-lay. </author> <title> The information visualizer, an information workspace. </title> <booktitle> In Human Factors in Computer Systems (CHI'91 Conference Proceedings), </booktitle> <pages> pages 181-188, </pages> <address> New Orleans, LA, </address> <month> Apr. </month> <year> 1991. </year> <note> ACM. </note>
Reference-contexts: Only a few research groups have addressed semantic issues in user interface. Researchers at Xerox have undertaken a program to explore how user interface metaphors lend themselves to various general information domains <ref> [3] </ref>. Their goal is to develop a rich vocabulary of reusable metaphors. A group at the George Washington University explored separating the semantic level of the user interface from the more concrete levels so that they may be parameterized for different user communities [6, 7].
Reference: [4] <author> J. M. Carroll, R. L. Mack, and W. A. Kellogg. </author> <title> Interface metaphors and user interface design. </title> <editor> In M. Helander, editor, </editor> <title> Handbook of Human-Computer Interaction, </title> <booktitle> chapter 3, </booktitle> <pages> pages 67-85. </pages> <publisher> Elsevier Science Publishers (North-Holland), </publisher> <year> 1988. </year>
Reference-contexts: They have investigated tables and outlines as potential bridges between the syntactic and semantic levels of communication within the user interface. Often there is a close connection between the visible user interface metaphor of an application and its semantic model <ref> [4] </ref>. Memento's contribution to the user interface is purely semantic and is not directly related to its look and feel. Memento derives of experience gained from the development and deployment of the Virtual Notebook System (VNS) over the past several years [23, 8].
Reference: [5] <author> P. Curtis and D. A. Nichols. </author> <title> MUDs grow up: Social virtual reality in the real world. </title> <booktitle> In Proceedings of the Third International Conference on Cyberspace, </booktitle> <month> May </month> <year> 1993. </year>
Reference-contexts: In artifact-based collaboration, information artifacts serve as an evolving group memory developed by humans and supported by assistants performing communication and coordination. Multi-user dungeons, or MUDs, are one category of artifact-based collab orative systems <ref> [5] </ref>. Workflow assistants coordinate the ordering of work done by members of a group, typically by controlling threads of communication similar to electronic mail and bulletin boards. These systems are a form of artifact-based collaboration in which process is stored as first-class entities within the system.
Reference: [6] <author> M. Feldman and G. T. Rogers. </author> <title> Towards the design and development of style-independent interactive systems. </title> <booktitle> In Proceedings of Human Factors In Computer Systems (CHI'82), </booktitle> <pages> pages 111-116. </pages> <institution> Association for Computing Machinery, </institution> <year> 1982. </year> <type> Technical Report CTTL-96-1, </type> <institution> Rice University, </institution> <year> 1996 </year> <month> 10 </month>
Reference-contexts: Their goal is to develop a rich vocabulary of reusable metaphors. A group at the George Washington University explored separating the semantic level of the user interface from the more concrete levels so that they may be parameterized for different user communities <ref> [6, 7] </ref>. In their research, the semantic layer the user interface is held constant. Other groups have explored the notion of reusable user interface widgets that convey semantic information via familiar visual information organizations [12, 19, 14].
Reference: [7] <author> J. Foley, C. Gibbs, W. C. Kim, and S. Kovacevic. </author> <title> A knowledge-based user interface management system. </title> <booktitle> In Human Factors in Computer Systems (CHI'88 Conference Proceedings), </booktitle> <pages> pages 67-72, </pages> <month> May </month> <year> 1988. </year>
Reference-contexts: Their goal is to develop a rich vocabulary of reusable metaphors. A group at the George Washington University explored separating the semantic level of the user interface from the more concrete levels so that they may be parameterized for different user communities <ref> [6, 7] </ref>. In their research, the semantic layer the user interface is held constant. Other groups have explored the notion of reusable user interface widgets that convey semantic information via familiar visual information organizations [12, 19, 14].
Reference: [8] <author> J. Fowler, D. G. Baker, V. Kouramajian, H. Gilson, R. Dargahi, K. B. Long, C. Petermann, and G. A. Gorry. </author> <title> Experience with the virtual notebook system: Abstraction in hypertext. </title> <booktitle> In Proceedings ACM 1994 Conference on Computer Supported Cooperative Work, </booktitle> <pages> pages 133-143, </pages> <address> Chapel Hill, NC, </address> <month> Oct. </month> <year> 1994. </year>
Reference-contexts: Real-time collaboration involves multiple CSCW assistants, linked by a network, that facilitate the sharing of meaningful models among a farflung group of users by making all users immediately aware of modifications made by other participants. 1 The Virtual Notebook System <ref> [8] </ref> is an assistant that facilitates real-time collaboration. Artifact-based collaboration assistants facilitate access to meaningful models within a shared information repository. Here, the collaboration need not occur simultaneously or in a strict ordering but can span time as well as distance [13]. <p> Memento's contribution to the user interface is purely semantic and is not directly related to its look and feel. Memento derives of experience gained from the development and deployment of the Virtual Notebook System (VNS) over the past several years <ref> [23, 8] </ref>. The VNS is a multi-platform collaborative hypermedia system based on the notebook metaphor.
Reference: [9] <author> R. Furuta and P. D. Stotts. </author> <title> Interpreted collaboration protocols and their use in groupware prototyping. </title> <booktitle> In Proceedings ACM 1994 Conference on Computer Supported Cooperative Work, </booktitle> <pages> pages 121-132, </pages> <address> Chapel Hill, NC, </address> <month> Oct. </month> <year> 1994. </year>
Reference-contexts: Petri nets can be used to describe and manipulate the processes involved in controlling the flow of information through a collaborative working environment <ref> [9] </ref>.
Reference: [10] <author> A. Goldberg and D. Robson. </author> <title> Smalltalk 80: The Language and its Implementation. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1983. </year>
Reference-contexts: Immediately under MObject in the Memento type hierarchy is the MType MType, or the MType of all MObjects within the type hierarchy. Thus, the type system is both self-describing and self-referential|all information about the type system exists within the MObjects representing MTypes, in much the same way that Smalltalk's <ref> [10] </ref> MetaClass class is self-referential. <p> Relation (inConcept, outConcepts) BinaryRelation () PageElement (label, position, size, ...) SuiteElement (label) ... Note: Attributes are listed in parenthesis. Memento-specific types are italicized. tity in question (nomenclature and concept of observers are part of the Smalltalk Model-View-Controller paradigm <ref> [10] </ref>). Among the observers of objects in the repository are the user interfaces of the various users' current sessions. As change notifications are propagated to the user interfaces, they react accordingly, updating their display of the changed entity without delay.
Reference: [11] <author> S. Greenberg and D. Marwood. </author> <title> Real time group-ware as a distributed system: Concurrency control and its effect on the interface. </title> <booktitle> In Proceedings ACM 1994 Conference on Computer Supported Cooperative Work, </booktitle> <pages> pages 207-217, </pages> <address> Chapel Hill, NC, </address> <month> Oct. </month> <year> 1994. </year>
Reference-contexts: Groupkit is an elegant package, based on the Tk application toolkit, that allows developers to convert single-user applications into collaborative ones by the addition of a library of network-savvy commands that can be used to replace the standard functions used for creation of the single-user interface <ref> [11] </ref>. Groupkit performs entirely at the syntactic level of the interface. VODAK is a system that seems to share similar motivations with Memento.
Reference: [12] <author> D. Harel. </author> <title> On visual formalisms. </title> <journal> Communications of the ACM, </journal> <volume> 31(5) </volume> <pages> 514-530, </pages> <month> May </month> <year> 1988. </year>
Reference-contexts: In their research, the semantic layer the user interface is held constant. Other groups have explored the notion of reusable user interface widgets that convey semantic information via familiar visual information organizations <ref> [12, 19, 14] </ref>. They have investigated tables and outlines as potential bridges between the syntactic and semantic levels of communication within the user interface. Often there is a close connection between the visible user interface metaphor of an application and its semantic model [4].
Reference: [13] <author> K. Jeffay, J. K. Lin, J. Menges, F. D. Smith, and J. B. Smith. </author> <title> Architecture of the artifact-based collaboration system matrix. </title> <booktitle> In Proceedings of the ACM 1992 Conference on Computer Supported Cooperative Work (CSCW'92), </booktitle> <pages> pages 195-202. </pages> <institution> Association for Computing Machinery, </institution> <month> October-November </month> <year> 1992. </year>
Reference-contexts: Artifact-based collaboration assistants facilitate access to meaningful models within a shared information repository. Here, the collaboration need not occur simultaneously or in a strict ordering but can span time as well as distance <ref> [13] </ref>. In artifact-based collaboration, information artifacts serve as an evolving group memory developed by humans and supported by assistants performing communication and coordination. Multi-user dungeons, or MUDs, are one category of artifact-based collab orative systems [5]. <p> Of the many artifact-based systems, the Artifact Based Collaboration System Matrix supports the most general notion of enforcement on the structure of graphs contained therein, but does not try to associate meaning with the structure <ref> [13, 22] </ref>. Groupkit is an elegant package, based on the Tk application toolkit, that allows developers to convert single-user applications into collaborative ones by the addition of a library of network-savvy commands that can be used to replace the standard functions used for creation of the single-user interface [11].
Reference: [14] <author> J. Johnson. Selectors: </author> <title> Going beyond user-interface widgets. </title> <booktitle> In Human Factors in Computer Systems (CHI'92 Conference Proceedings), </booktitle> <pages> pages 273-280, </pages> <year> 1992. </year>
Reference-contexts: In their research, the semantic layer the user interface is held constant. Other groups have explored the notion of reusable user interface widgets that convey semantic information via familiar visual information organizations <ref> [12, 19, 14] </ref>. They have investigated tables and outlines as potential bridges between the syntactic and semantic levels of communication within the user interface. Often there is a close connection between the visible user interface metaphor of an application and its semantic model [4].
Reference: [15] <author> W. Klas, K. Aberer, and E. Neuhold. </author> <title> Object-oriented modeling for hypermedia systems using the vodak modelling language (VML). </title> <booktitle> Object-Oriented Database Management Systems, </booktitle> <month> Aug. </month> <year> 1993. </year>
Reference-contexts: VODAK is a system that seems to share similar motivations with Memento. The VODAK Model Language includes the standard concepts for object-oriented data modelling as well as advanced features that tailor data models towards particular application scenarios to provide adequate models for hypermedia documents <ref> [15] </ref>. Among these are metaclasses, parameterized types, semantic relationships and dynamic method delegation. Operations must maintain consistency by observing the compositional constraints of document types. Meta-classes in VODAK can be employed to predefine a common structure and behavior of classes and of individual objects at the metaclass level [16].
Reference: [16] <author> W. Klas, E. J. Neuhold, and M. Schrefl. </author> <title> Meta-classes in vodak and their application in database integration. </title> <type> Technical Report Arbeitspapiere der GMD, No. 462, </type> <institution> GMD, </institution> <year> 1990. </year>
Reference-contexts: Among these are metaclasses, parameterized types, semantic relationships and dynamic method delegation. Operations must maintain consistency by observing the compositional constraints of document types. Meta-classes in VODAK can be employed to predefine a common structure and behavior of classes and of individual objects at the metaclass level <ref> [16] </ref>. They can be employed to introduce new data model primitives, and thus, to extend the VODAK kernel model with capabilities needed in specific application domains.
Reference: [17] <author> V. Kouramajian, R. Dargahi, J. Fowler, and D. G. Baker. </author> <title> Consortium: A framework for transactions in collaborative environments. </title> <booktitle> In Fourth International Conference on Information and Knowledge Management, </booktitle> <pages> pages 260-265, </pages> <address> Baltimore, MD, </address> <month> November-December </month> <year> 1995. </year>
Reference-contexts: Our efforts to support assistants for long-term collaboration will rely on Consortium, a new collaborative transaction model that is designed to support a "What You See Is What You Want" abstraction that permits users to choose their own interaction modes with respect to the shared workspace <ref> [17] </ref>. Consortium transactions span multiple sessions, have multiple commit points, Technical Report CTTL-96-1, Rice University, 1996 9 have different participants at different times, and differentiate between the concepts of owners and participants. We are working on extending Memento to allow meaning to be represented by conceptual graphs [24].
Reference: [18] <author> Microsoft. </author> <title> The Microsoft Foundation Class Library. </title> <publisher> Microsoft Corporation, </publisher> <year> 1991. </year>
Reference-contexts: With domain enforcement delegated to the infrastructure, the same code can effectively act as the the user interface to multiple domains. 5 Memento Assistants The CTTL development group has blended the Memento collaboration framework with the Microsoft Foundation Class Library <ref> [18] </ref> in order to construct complete user interfaces for specific assistants. Work on two other application frameworks, Motif and OpenDoc, is in progress.
Reference: [19] <author> B. A. Nardi and C. L. Zarmer. </author> <title> Beyond models and metaphors: Visual formalisms in user interface design. </title> <booktitle> In Proceedings of the 24th Annual Hawaii International Conference on Systems Science, </booktitle> <volume> volume 2, </volume> <pages> pages 478-493, </pages> <address> Koloa, HI., </address> <month> Jan. </month> <year> 1991. </year>
Reference-contexts: In their research, the semantic layer the user interface is held constant. Other groups have explored the notion of reusable user interface widgets that convey semantic information via familiar visual information organizations <ref> [12, 19, 14] </ref>. They have investigated tables and outlines as potential bridges between the syntactic and semantic levels of communication within the user interface. Often there is a close connection between the visible user interface metaphor of an application and its semantic model [4].
Reference: [20] <author> B. Reeves and F. Shipman. </author> <title> Supporting communication between designers with artifact-centered evolving information spaces. </title> <booktitle> In Proceedings of the ACM 1992 Conference on Computer Supported Cooperative Work, </booktitle> <pages> pages 394-401, </pages> <address> Toronto, Canada, </address> <month> Nov. </month> <year> 1992. </year>
Reference-contexts: Coordination is usually done at or near the application user interface. Some systems involve collaboration at a semantic level through manipulation of information within some specific semantic domain. Reeves and Shipman's XNetwork <ref> [20] </ref> is one such system. It supports collaboration via coordinated manipulation of network design artifacts|a specialized domain of knowledge. No system yet supports collaboration at a semantic level for arbitrary semantic domains.
Reference: [21] <author> K. J. Schmucker. Macapp: </author> <title> An application framework. </title> <journal> BYTE, </journal> <volume> 11(8) </volume> <pages> 189-193, </pages> <month> Aug. </month> <year> 1986. </year>
Reference-contexts: Frameworks are built from an integrated collection of object-oriented classes that cooperate in the problem's solution by means of inheritance and message passing. The first software systems that were called frameworks were application frameworks, which address the general problem of building applications on a particular platform <ref> [21] </ref>. Application frameworks usually also contain a class library of user interface components that allow developers to start from the "null application," that does everything that an application must do in a completely generic way, customizing the application for their own needs.
Reference: [22] <author> D. E. Shackelford, J. B. Smith, and F. D. Smith. </author> <title> The architecture and implementation of a distributed hypermedia storage system. </title> <booktitle> In Hypertext '93 Proceedings: The Fifth ACM Conference on Hypertext, </booktitle> <pages> pages 1-13, </pages> <month> Nov. </month> <year> 1993. </year>
Reference-contexts: Of the many artifact-based systems, the Artifact Based Collaboration System Matrix supports the most general notion of enforcement on the structure of graphs contained therein, but does not try to associate meaning with the structure <ref> [13, 22] </ref>. Groupkit is an elegant package, based on the Tk application toolkit, that allows developers to convert single-user applications into collaborative ones by the addition of a library of network-savvy commands that can be used to replace the standard functions used for creation of the single-user interface [11].
Reference: [23] <author> F. M. Shipman, R. J. Chaney, and G. A. Gorry. </author> <title> Distributed hypertext for collaborative research: The virtual notebook system. </title> <booktitle> In Hypertext '89: Second ACM Conference on Hypertext Proceedings, </booktitle> <pages> pages 129-135, </pages> <year> 1989. </year>
Reference-contexts: Memento's contribution to the user interface is purely semantic and is not directly related to its look and feel. Memento derives of experience gained from the development and deployment of the Virtual Notebook System (VNS) over the past several years <ref> [23, 8] </ref>. The VNS is a multi-platform collaborative hypermedia system based on the notebook metaphor.
Reference: [24] <author> J. F. Sowa. </author> <title> Conceptual Structures: Information Processing in Mind and Machine. </title> <publisher> Addison-Wesley Publishing Company, </publisher> <year> 1984. </year>
Reference-contexts: Because a "downcast" allows such an MObject to keep its original type, no other context in which the MObject appears is affected. Interconnection between MObjects of MType Concept is supported by the Relation MObject, which allows the creation of conceptual graphs <ref> [24] </ref>. Like associations in the human mind, the graphs can become more interlinked as they grow to express richer networks of hypertext. Closely tied with the notion of evolution is that of information and code reuse in new contexts. <p> Consortium transactions span multiple sessions, have multiple commit points, Technical Report CTTL-96-1, Rice University, 1996 9 have different participants at different times, and differentiate between the concepts of owners and participants. We are working on extending Memento to allow meaning to be represented by conceptual graphs <ref> [24] </ref>. Each assistant has a rudimentary understanding of a particular set of conceptual graphs called the assistant's domain. The rules that describe the possible graphs in an assistant's domain are known as the domain's semantic constraints.
Reference: [25] <author> M. Stefik, G. Foster, D. Bobrow, K. Kahn, S. Lanning, and L. Suchman. </author> <title> Beyond the chalkboard: Computer support for collaboration and problem solving in meetings. </title> <journal> Communications of the Association for Computing Machinery, </journal> <volume> 30(1), </volume> <month> Jan. </month> <year> 1987. </year>
Reference-contexts: Because information sharing primitives are integral in the collaboration framework, construction of collaborative assistants is simple and straightforward. Interaction between assistants and their users can augment their computational and intellectual powers respectively. A major focus in CSCW research has been on What-You-See-Is-What-I-See (WYSIWIS) <ref> [25] </ref> and related systems where users collaborate through user interfaces that look the same to all users. Issues in such systems involve coordination of input events and keeping user interface displays consistent.
References-found: 25

