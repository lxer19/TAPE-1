URL: http://theory.lcs.mit.edu/tds/papers/Lygeros/CDC97.ps
Refering-URL: http://theory.lcs.mit.edu/tds/TCAS.html
Root-URL: 
Email: lygeros, lynch@lcs.mit.edu  
Title: On the Formal Verification of the TCAS Conflict Resolution Algorithms 1  
Author: John Lygeros and Nancy Lynch 
Address: 545 Technology Square, Cambridge, MA 02139  
Affiliation: Laboratory for Computer Science Massachusetts Institute of Technology  
Abstract: TCAS is an on-board protocol for detecting conflicts between aircraft and providing resolution advisories to the pilots. Because of its safety-critical role the TCAS software should ideally be "verified" before it can be deployed. The verification task is challenging, due to the complexity of the TCAS code and the hybrid nature of the system. We show how the essence of this very complicated problem can be captured by a relatively simple hybrid model, amenable to formal analysis. We then outline a methodology for establishing conditions under which the advisories issued by TCAS are safe. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> Radio Technical Commission for Aeronautics, "Minimum operational performance standards for TCAS airborn equipment", </institution> <type> Tech. Rep. </type> <address> RTCA/DO- 185, RTCA, </address> <month> September </month> <year> 1990, </year> <note> Consolidated Edition. </note>
Reference-contexts: 1 Introduction The Traffic Alert and Collision Avoidance System (TCAS) <ref> [1, 2] </ref> is an on-board aircraft conflict detection and resolution algorithm. Its task is to monitor air traffic in the vicinity of the aircraft and provide the pilot with information about neighboring aircraft that may pose a threat and advisories on how to resolve these conflicts. <p> The RA's issued by the TCAS II 6.04A version currently in use are restricted to the vertical plane. Maneuvers involve either climbing or descending at one of a finite number of fixed rates. If both aircraft are TCAS equipped, the algorithm <ref> [1, 2] </ref> uses a symmetry-breaking communication protocol to uniquely determine the maneuver that each aircraft should follow to resolve the conflict. Once a decision is reached the maneuver is presented to the pilots and is not altered until the conflict is resolved.
Reference: [2] <author> The MITRE Corporation, </author> <title> "TCAS II collision avoidance subsystem requirements specification", </title> <year> 1996. </year>
Reference-contexts: 1 Introduction The Traffic Alert and Collision Avoidance System (TCAS) <ref> [1, 2] </ref> is an on-board aircraft conflict detection and resolution algorithm. Its task is to monitor air traffic in the vicinity of the aircraft and provide the pilot with information about neighboring aircraft that may pose a threat and advisories on how to resolve these conflicts. <p> The RA's issued by the TCAS II 6.04A version currently in use are restricted to the vertical plane. Maneuvers involve either climbing or descending at one of a finite number of fixed rates. If both aircraft are TCAS equipped, the algorithm <ref> [1, 2] </ref> uses a symmetry-breaking communication protocol to uniquely determine the maneuver that each aircraft should follow to resolve the conflict. Once a decision is reached the maneuver is presented to the pilots and is not altered until the conflict is resolved.
Reference: [3] <author> Nancy Leveson, </author> <title> SafeWare : system safety and computers, </title> <publisher> Addison-Wesley, </publisher> <year> 1995. </year>
Reference-contexts: Part of the verification problem involves proving that each level in this process implements the high-level specifications. Motivated by this example (and other applications to software development for large scale systems) techniques have been developed <ref> [3] </ref> for systematically carrying out this process. In addition, one also needs to investigate the performance of the closed loop system formed when the proposed algorithm is coupled with the aircraft dynamics. So far the primary verification technique used in this context has been simulation [4].
Reference: [4] <author> A.C. Drumm, </author> <title> "Lincoln laboratory evaluation of TCAS II logic version 6.04a", </title> <type> Tech. Rep. </type> <institution> ATC-240, Lincoln Laboratory, MIT, </institution> <month> February </month> <year> 1996. </year>
Reference-contexts: In addition, one also needs to investigate the performance of the closed loop system formed when the proposed algorithm is coupled with the aircraft dynamics. So far the primary verification technique used in this context has been simulation <ref> [4] </ref>. Successful results in extensive simulations provide a certain level of confidence in the algorithm. <p> Once a decision is reached the maneuver is presented to the pilots and is not altered until the conflict is resolved. TCAS II 6.04A has been extensively tested in simulation <ref> [4] </ref> and in practice. A newer TCAS II version that is currently being tested also allows for reversals. RA's are still restricted to the vertical plane, but TCAS may change the advisory during a conflict. This feature was added primarily because of nondeterminism in the pilot response.
Reference: [5] <author> James K. Kuchar, </author> <title> A Unified Methodology for the Evaluation of Hazard Alerting Systems, </title> <type> PhD thesis, </type> <institution> Massacussets Institute of Technology, </institution> <year> 1995. </year>
Reference-contexts: These effects will be mostly suppressed in our work. For a discussion of probabilistic analysis for this problem the reader is referred to <ref> [5] </ref>. [9, 10] and aircraft conflict resolution [11]. 2 System Model 2.1 Overview of the TCAS System In cases of potential conflict the TCAS system enters one of two levels of alertness.
Reference: [6] <author> John Lygeros, Datta N. Godbole, and Shankar Sastry, </author> <title> "A verified hybrid controller for automated ve hicles", in CDC, </title> <booktitle> 1996, </booktitle> <pages> pp. 2289-2294. </pages>
Reference-contexts: Therefore any verification effort will have to involve hybrid techniques. Our work makes use of a combination of techniques from control theory and distributed algorithms to tackle the verification problem. The methodology presented here has been successfully applied to other safety-critical transportation systems, such as automated highways <ref> [6, 7] </ref>, personal rapid transit systems [8], train gate controllers 1 There are also important probabilistic effects, arising from sensor noise, uncertainty in the pilot response etc. These effects will be mostly suppressed in our work.
Reference: [7] <author> Ekaterina Dolginova and Nancy Lynch, </author> <title> "Safety verification for automated platoon maneuvers: a case study", </title> <booktitle> in Proceedings of HART97, number 1201 in LNCS, </booktitle> <pages> pp. 154-170. </pages> <publisher> Springer Verlag, </publisher> <year> 1997. </year>
Reference-contexts: Therefore any verification effort will have to involve hybrid techniques. Our work makes use of a combination of techniques from control theory and distributed algorithms to tackle the verification problem. The methodology presented here has been successfully applied to other safety-critical transportation systems, such as automated highways <ref> [6, 7] </ref>, personal rapid transit systems [8], train gate controllers 1 There are also important probabilistic effects, arising from sensor noise, uncertainty in the pilot response etc. These effects will be mostly suppressed in our work.
Reference: [8] <author> H.B. Weinberg, Nancy Lynch, and Norman Delisle, </author> <title> "Verification of automated vehicle protec tion systems", in Hybrid Systems III, </title> <booktitle> number 1066 in LNCS, </booktitle> <pages> pp. 101-113. </pages> <publisher> Springer Verlag, </publisher> <year> 1996. </year>
Reference-contexts: Our work makes use of a combination of techniques from control theory and distributed algorithms to tackle the verification problem. The methodology presented here has been successfully applied to other safety-critical transportation systems, such as automated highways [6, 7], personal rapid transit systems <ref> [8] </ref>, train gate controllers 1 There are also important probabilistic effects, arising from sensor noise, uncertainty in the pilot response etc. These effects will be mostly suppressed in our work.
Reference: [9] <author> C. Heitmeyer and N. Lynch, </author> <title> "The generalized railroad crossing: A case study in formal verification of real-time systems", </title> <booktitle> in Proc. ICCC Real-Time Systems Symposium, </booktitle> <address> San Juan, Puerto Rico, </address> <year> 1994. </year>
Reference-contexts: These effects will be mostly suppressed in our work. For a discussion of probabilistic analysis for this problem the reader is referred to [5]. <ref> [9, 10] </ref> and aircraft conflict resolution [11]. 2 System Model 2.1 Overview of the TCAS System In cases of potential conflict the TCAS system enters one of two levels of alertness.
Reference: [10] <author> John Lygeros, Datta N. Godbole, and Shankar Sastry, </author> <title> "A game theoretic approach to hybrid system design", in Hybrid Systems III, </title> <booktitle> number 1066 in LNCS, </booktitle> <pages> pp. 1-12. </pages> <publisher> Springer Verlag, </publisher> <year> 1996. </year>
Reference-contexts: These effects will be mostly suppressed in our work. For a discussion of probabilistic analysis for this problem the reader is referred to [5]. <ref> [9, 10] </ref> and aircraft conflict resolution [11]. 2 System Model 2.1 Overview of the TCAS System In cases of potential conflict the TCAS system enters one of two levels of alertness.
Reference: [11] <author> George J. Pappas, Claire Tomlin, and Shankar Sastry, </author> <title> "Conflict resolution for multi-agent hybrid sys tems", </title> <booktitle> in CDC, </booktitle> <year> 1996. </year>
Reference-contexts: These effects will be mostly suppressed in our work. For a discussion of probabilistic analysis for this problem the reader is referred to [5]. [9, 10] and aircraft conflict resolution <ref> [11] </ref>. 2 System Model 2.1 Overview of the TCAS System In cases of potential conflict the TCAS system enters one of two levels of alertness.
Reference: [12] <author> Nancy Lynch, Roberto Segala, Frits Vaandrager, and H.B. Weinberg, </author> <title> "Hybrid I/O automata", </title> <booktitle> in Hy brid Systems III, number 1066 in LNCS, </booktitle> <pages> pp. 496-510. </pages> <publisher> Springer Verlag, </publisher> <year> 1996. </year>
Reference-contexts: Our approach may be even more useful in this case, to provide design guidelines for TCAS versions that are still at a conceptual stage. 2.2 Overview of the Modeling Formalism Following <ref> [12] </ref>, we view a hybrid automaton, A, as a dynamical system that describes the evolution of a finite collection of variables, V A . Variables are typed; for each v 2 V A let type (v) denote the type of v. <p> Some technical conditions need to be imposed on the above sets to guarantee that the definitions are consistent; see <ref> [12] </ref> for a discussion. Let fstate (w) (lstate (w)) denote the initial (final) state of a trajectory w 2 W A defined over a left (right) closed interval.
References-found: 12

