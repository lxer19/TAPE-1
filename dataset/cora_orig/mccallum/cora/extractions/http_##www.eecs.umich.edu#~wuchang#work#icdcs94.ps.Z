URL: http://www.eecs.umich.edu/~wuchang/work/icdcs94.ps.Z
Refering-URL: http://www.eecs.umich.edu/~wuchang/resume.html
Root-URL: http://www.eecs.umich.edu
Title: SPIDER: Flexible and Efficient Communication Support for Point-to-Point Distributed Systems  
Author: James Dolter, Stuart Daniel, Ashish Mehra, Jennifer Rexford, Wu-chang Feng, and Kang Shin 
Address: Ann Arbor, MI 48109-2122  
Affiliation: Real-Time Computing Laboratory Department of Electrical Engineering and Computer Science The University of Michigan  
Abstract: SPIDER is a network adapter that provides scalable communication support for point-to-point distributed systems. The device exports an efficient interface to the host processor, provides transparent support for dependable, time-constrained communication, and handles packet routing and switching. The communication support provided by SPIDER exploits concurrency between the independent data channels feeding the point-to-point network, and offers flexible and transparent hardware mechanisms. SPIDER allows the host to exercise fine-grain control over its operation, enabling the latter to monitor and influence data transmission and reception efficiently. In the current implementation, SPIDER interfaces to the Ironics IV-3207, a VMEbus-based 68040 card and will be controlled by x-kernel, a communication executive allowing the flexible composition of communication protocols. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Abraham and K. Padmanabhan, </author> <title> "Constraint based evaluation of multicomputer networks," </title> <booktitle> in International Conference on Parallel Processing, </booktitle> <pages> pp. </pages> <address> I-521-I-525, </address> <year> 1990. </year>
Reference-contexts: If busy outgoing channels prevent an immediate cut-through, SPIDER may begin buffering the packet. If the link becomes free during this buffering, the host can reschedule the partially-arrived packet for transmission. Such partial cut-throughs <ref> [1, 19] </ref> can potentially improve performance for large packets by overlapping the forwarding of buffered pages with the arrival of subsequent pages of the packet. SPIDER facilitates partial cut-throughs by maintaining page-level information in the event and page tag queues. <p> Many routers for point-to-point, parallel machines employ some type of crossbar interconnect [7, 20, 28]. As a result, multicomputer routing chips are often pin-limited <ref> [1] </ref>. Instead, SPIDER uses a demand-slotted, time-division multiplexed bus to connect the incoming and outgoing channels. The demand-slotted bus prevents idle channels from interfering with active devices. This facility can prove helpful in dissipating congestion and traffic hot-spots by maximizing bus utilization.
Reference: [2] <institution> Am79168/Am79169 TAXI tm -275 Technical Manual, Advanced Micro Devices, </institution> <address> ban-0.1m-1/93/0 17490a edition. </address>
Reference-contexts: The PRC devices reserve access to outgoing channels (NI TXs) via an on-chip reservation status unit. The NI performs the media access control on six pairs of AMD TAXI chips <ref> [2] </ref>, where each TAXI TX/RX pair provides bidirectional communication with an adjacent node. A TAXI transmitter accepts injected data from two PRC TXs and each TAXI receiver delivers data to two PRC RXs, providing two virtual channels for each physical, unidirectional link.
Reference: [3] <author> G. Albertengo and R. Sisto, </author> <title> "Parallel CRC generation," </title> <booktitle> IEEE Micro, </booktitle> <pages> pp. 63-71, </pages> <month> October </month> <year> 1990. </year>
Reference-contexts: SPIDER's design, therefore, provides efficient error detection while relegating error recovery to the higher-level protocols. Error detection is usually provided through the calculation and transmission of a CRC with each packet <ref> [3] </ref>. Software CRC calculations provide the highest degree of flexibility and also detect errors introduced during the transfer of packets between the network interface and main memory. This calculation, however, requires host access to the entire packet on both transmission and reception.
Reference: [4] <author> D. Banks and M. Prudence, </author> <title> "A high-performance network architecture for a PA-RISC workstation," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 11, no. 2, </volume> <pages> pp. 191-202, </pages> <month> February </month> <year> 1993. </year>
Reference-contexts: Generating the header on a separate page avoids unnecessary data copying, thus keeping the overhead of network data transfer low <ref> [4, 10] </ref>. The first page tag for a packet can specify a number of words to be excluded from the CRC calculation; subsequent modification of these words by other nodes does not invalidate the original CRC checksum.
Reference: [5] <author> M. Chereque, D. Powell, P. Reynier, and J. Vo-iron, </author> <title> "Active replication in Delta-4," </title> <booktitle> in Proc. Int'l Symp. on Fault-Tolerant Computing, </booktitle> <pages> pp. 28-37, </pages> <year> 1992. </year>
Reference-contexts: Commonly, dependability is provided by incorporating some form of redundancy into the system. One technique replicates critical software components on a collection of nodes that fail independently <ref> [5] </ref>. Coordinating this software replication necessitates timely and dependable communication between nodes. Point-to-point networks, with their multiplicity of processors and internode routes, provide a natural platform for applications that require both high performance and dependability [18]. <p> To make a system dependable, some form of redundancy is usually incorporated into the system. This redundancy can be achieved by replicating critical software on groups of nodes <ref> [5] </ref>, but this requires the provision of timely and dependable communication. To support software replication, SPIDER supports efficient group communication through its multicast facility, and fault-tolerant routing through the microprogrammable PRC RXs.
Reference: [6] <author> G. Chesson, </author> <title> "XTP/PE overview," </title> <booktitle> in Conference on Local Computer Networks, </booktitle> <month> October </month> <year> 1988. </year>
Reference-contexts: Many intelligent, complex adapters reduce the load on the host significantly, but sacrifice flexibility regarding communication protocols and buffer management strategies. Instead of implementing a specific protocol in VLSI <ref> [6] </ref>, SPIDER provides hardware support without precluding higher-level host policies. While this flexibility could be achieved through a pure software implementation, hardware support provides several advantages.
Reference: [7] <author> W. J. Dally and C. L. Seitz, </author> <title> "The torus routing chip," </title> <journal> Journal of Distributed Computing, </journal> <volume> vol. 1, no. 3, </volume> <pages> pp. 187-196, </pages> <year> 1986. </year>
Reference-contexts: Coordinating this software replication necessitates timely and dependable communication between nodes. Point-to-point networks, with their multiplicity of processors and internode routes, provide a natural platform for applications that require both high performance and dependability [18]. Many parallel computers connect the processing elements with a point-to-point network <ref> [7, 9, 11, 20] </ref> to provide scalable communication bandwidth to applications. However, these networks often consist of short links, such as onboard wires or ribbon cables, with no need for higher-level error control. Centralized hardware and software can make parallel machines vulnerable to single-point failures. <p> If the packet is destined for a subsequent node, the PRC RX can try to send the packet directly to the next node by reserving an NI TX. If the PRC RX is able to establish a cut-through <ref> [7, 19] </ref>, the PRC RX then sends the data it has accumulated to that transmitter and reconfigures the NI RX to forward data directly to the reserved NI TX, bypassing the PRC entirely. <p> SPIDER's flexibility enables the host to dynamically tailor routing and switching schemes according to prevailing network conditions and communication requirements. 4.1 Network Interface Communication in point-to-point networks requires multiplexing incoming traffic to the multiple outgoing links. Many routers for point-to-point, parallel machines employ some type of crossbar interconnect <ref> [7, 20, 28] </ref>. As a result, multicomputer routing chips are often pin-limited [1]. Instead, SPIDER uses a demand-slotted, time-division multiplexed bus to connect the incoming and outgoing channels. The demand-slotted bus prevents idle channels from interfering with active devices. <p> These virtual channels can be used for deadlock-free wormhole routing [8, 25] or to partition various types of traffic onto different virtual networks. 4.2 Microprogrammability Routers for parallel point-to-point networks typically employ a single routing and switching scheme, implemented in hardware. For example, the TRC <ref> [7] </ref> and the MDP [9] perform e-cube routing with wormhole switching, while the Chaos router [20] uses a type of deflection routing with virtual cut-through switching. Earlier systems often implemented packet switching with some form of static routing. <p> The micropro-grammable PRC RXs allow the PRC to support circuit switching, packet switching, virtual cut-through switching [19], and wormhole switching <ref> [7] </ref>. The notification FIFOs provide a rendezvous point between each PRC RX and the host, and are used to diagnose and respond to dynamic conditions, such as congestion or faulty links. This enables the host to tailor routing and switching policies to application requirements and the state of the network.
Reference: [8] <author> W. J. Dally and C. L. Seitz, </author> <title> "Deadlock-free message routing in multiprocessor interconnection networks," </title> <journal> IEEE Trans. Computers, </journal> <volume> vol. C-36, no. 5, </volume> <pages> pp. 547-553, </pages> <month> May </month> <year> 1987. </year>
Reference-contexts: With different multiplexing control, each PRC can support up to twelve neighbors with a single virtual channel per link, up to six neighbors with a pair of virtual channels per link, or other combinations. These virtual channels can be used for deadlock-free wormhole routing <ref> [8, 25] </ref> or to partition various types of traffic onto different virtual networks. 4.2 Microprogrammability Routers for parallel point-to-point networks typically employ a single routing and switching scheme, implemented in hardware.
Reference: [9] <author> W. J. Dally et al., </author> <title> "Design and implementation of the message-driven processor," </title> <booktitle> in Proc. Brown/MIT Conference on Advanced Research in VLSI and Parallel Systems, </booktitle> <pages> pp. 5-25, </pages> <year> 1992. </year>
Reference-contexts: Coordinating this software replication necessitates timely and dependable communication between nodes. Point-to-point networks, with their multiplicity of processors and internode routes, provide a natural platform for applications that require both high performance and dependability [18]. Many parallel computers connect the processing elements with a point-to-point network <ref> [7, 9, 11, 20] </ref> to provide scalable communication bandwidth to applications. However, these networks often consist of short links, such as onboard wires or ribbon cables, with no need for higher-level error control. Centralized hardware and software can make parallel machines vulnerable to single-point failures. <p> However, these networks often consist of short links, such as onboard wires or ribbon cables, with no need for higher-level error control. Centralized hardware and software can make parallel machines vulnerable to single-point failures. For example, the message-driven processor (MDP) <ref> [9] </ref> for the J-machine is a chip that connects to a 3D-mesh network. With 64 nodes on a board and multiple boards in a chassis, a single board failure can disrupt several processing elements. A network of physically-distributed computers of-fers the advantage of independent processor and link failures. <p> These virtual channels can be used for deadlock-free wormhole routing [8, 25] or to partition various types of traffic onto different virtual networks. 4.2 Microprogrammability Routers for parallel point-to-point networks typically employ a single routing and switching scheme, implemented in hardware. For example, the TRC [7] and the MDP <ref> [9] </ref> perform e-cube routing with wormhole switching, while the Chaos router [20] uses a type of deflection routing with virtual cut-through switching. Earlier systems often implemented packet switching with some form of static routing. The various routing and switching schemes have different characteristics, in terms of latency, deadlock-avoidance, and predictability. <p> Higher-level protocols for predictable packet scheduling depend on a global time base and bounded communication delays [18]. A global time base is necessary for any deadline-based scheduling, as well as many consensus protocols. While many parallel machines distribute a single clock to the processing elements <ref> [9, 23] </ref>, the potential distance separating the nodes of a distributed system causes clock skews that make this approach infeasible. Distributed systems, therefore, must have some means of keeping the local clock of each node within some allowable skew.
Reference: [10] <author> C. Dalton, G. Watson, D. Banks, C. Calamvokis, A. Edwards, and J. Lumley, </author> <title> "Afterburner," </title> <journal> IEEE Network Magazine, </journal> <pages> pp. 36-43, </pages> <month> July </month> <year> 1993. </year>
Reference-contexts: Each node can erect firewalls against failures by employing protection boundaries. Communication protocols, tailored to the delay and error characteristics of the network media, mediate between communicating entities. However, in many distributed systems nodes interface to the communication fabric through only one or two ports <ref> [10, 16, 24] </ref>. In this configuration, one or two media failures can partition the network. For example, the Nectar communication accelerator board (CAB) [24] for heterogeneous distributed computing supports one bidirectional port into the network, and thus, a single failure can isolate a node. <p> Generating the header on a separate page avoids unnecessary data copying, thus keeping the overhead of network data transfer low <ref> [4, 10] </ref>. The first page tag for a packet can specify a number of words to be excluded from the CRC calculation; subsequent modification of these words by other nodes does not invalidate the original CRC checksum. <p> The bus interface defines a simple protocol for addressing and accessing the NI devices. Effectively, the NI is a plug-replaceable module that handles low-level flow control and the multiplexing of virtual channels to physical links. Insulating the rest of SPIDER from the low-level media access control <ref> [10] </ref> allows SPIDER to interface to various communication fabrics. Other NI designs can change the granularity of network flow control or the interleaving of PRC channels to the physical links. <p> Allowing the network interface hardware to calculate the CRC can virtually eliminate this cost, as the calculation can be made by the hardware during the transfer of the packet to and from the network interface. This is the approach taken by the Nectar CAB [24] and Afterburner <ref> [10] </ref>. But whereas these designs manage a single bidirectional port into the network, SPIDER must handle twelve. To avoid replicating hardware, the PRC uses a single 32-bit parallel CRC generator to compute the CRC for every outbound packet.
Reference: [11] <author> A. L. Davis, "Mayfly: </author> <title> A general-purpose, </title> <booktitle> scal-able, parallel processing architecture," Lisp and Symbolic Computation, </booktitle> <volume> vol. 5, no. 1/2, </volume> <pages> pp. 7-47, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: Coordinating this software replication necessitates timely and dependable communication between nodes. Point-to-point networks, with their multiplicity of processors and internode routes, provide a natural platform for applications that require both high performance and dependability [18]. Many parallel computers connect the processing elements with a point-to-point network <ref> [7, 9, 11, 20] </ref> to provide scalable communication bandwidth to applications. However, these networks often consist of short links, such as onboard wires or ribbon cables, with no need for higher-level error control. Centralized hardware and software can make parallel machines vulnerable to single-point failures.
Reference: [12] <author> J. Dolter, </author> <title> A Programmable Routing Controller Supporting Multi-mode Routing and Switching in Distributed Real-Time Systems, </title> <type> PhD thesis, </type> <institution> University of Michigan, </institution> <month> September </month> <year> 1993. </year>
Reference-contexts: As shown in Figure 1, SPIDER manages bidirectional communication with up to six neighboring nodes, with two virtual channels on each unidirectional link. The programmable routing controller (PRC), a 187-pin custom integrated circuit designed using the Epoch silicon compiler, is the main component of SPIDER <ref> [12] </ref>. The 12 PRC TXs provide low-level control of packet transmission while the 12 microprogrammable PRC RXs coordinate packet reception, as well as low-level routing and switching.
Reference: [13] <author> S. Felperin, L. Gravano, G. Pirarre, and J. Sanz, </author> <title> "Routing techniques for massively parallel communication," </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> vol. 79, no. 4, </volume> <pages> pp. 488-503, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: This enables the host to tailor routing and switching policies to application requirements and the state of the network. With different microcode, SPIDER can implement various routing algorithms <ref> [13] </ref>, including adaptive and nonminimal schemes. Since each PRC RX has its own microcode control store, each incoming virtual channel can impose its own set of routing and switching policies.
Reference: [14] <author> N. C. Hutchinson and L. L. Peterson, </author> <title> "The x-Kernel: An architecture for implementing network protocols," </title> <journal> IEEE Trans. Software Engineering, </journal> <volume> vol. 17, no. 1, </volume> <pages> pp. 1-13, </pages> <month> January </month> <year> 1991. </year>
Reference-contexts: SPIDER will initially provide communication support for the Hexagonal Architecture for Real-Time Systems (HARTS) [27], a point-to-point, distributed system targeted for real-time applications. pSOS+ [29], a commercial real-time executive, provides system support to application threads within a node while x-kernel <ref> [14] </ref> coordinates communication between nodes. We are extending x-kernel to support point-to-point communication and real-time protocols using SPIDER. This platform allows investigation of software paradigms for managing time-constrained communication in point-to-point, distributed systems.
Reference: [15] <institution> IV-3207 VMEbus Single Board Computer and Multiprocessing Engine User's Manual, Ironics Incorporated, </institution> <note> 1991 edition. </note>
Reference-contexts: The chip currently has 187 pins and measures 1.30 by 1.34 centimeters. It operates asynchronously on the memory and control interfaces, while the NI runs at 25 MHz. The SPIDER design interfaces to the Ironics IV-3207 <ref> [15] </ref>, a VMEbus-based 68040 card, through a daughterboard interface to the processor memory bus. An IV-3207 card, coupled with the SPIDER daughterboard, can serve as a network-based uniprocessor handling both application and communication tasks or as a dedicated communication processor for a multiprocessor.
Reference: [16] <author> H. Kanakia and D. R. Cheriton, </author> <title> "The VMP network adapter board (NAB): high-performance network communication for multiprocessors," </title> <booktitle> Proceedings of the SIGCOMM Symposium, </booktitle> <pages> pp. 175-187, </pages> <month> August </month> <year> 1988. </year>
Reference-contexts: Each node can erect firewalls against failures by employing protection boundaries. Communication protocols, tailored to the delay and error characteristics of the network media, mediate between communicating entities. However, in many distributed systems nodes interface to the communication fabric through only one or two ports <ref> [10, 16, 24] </ref>. In this configuration, one or two media failures can partition the network. For example, the Nectar communication accelerator board (CAB) [24] for heterogeneous distributed computing supports one bidirectional port into the network, and thus, a single failure can isolate a node.
Reference: [17] <author> D. D. Kandlur and K. G. Shin, </author> <title> "Reliable broadcast algorithms for HARTS," </title> <journal> ACM Trans. Computer Systems, </journal> <volume> vol. 9, no. 4, </volume> <pages> pp. 374-398, </pages> <month> Novem-ber </month> <year> 1991. </year>
Reference-contexts: Using this facility, an arriving packet can spawn multiple copies at each hop on its route, allowing SPIDER to support efficient broadcast and multicast algorithms <ref> [17] </ref>. The host processor can utilize this multicast facility to support efficient group communication, useful for establishing consensus amongst cooperating software on different nodes. The bus interface defines a simple protocol for addressing and accessing the NI devices.
Reference: [18] <author> D. D. Kandlur, K. G. Shin, and D. Ferrari, </author> <title> "Real-time communication in multi-hop networks," </title> <booktitle> in Proc. Int. Conf. on Distributed Computer Systems, </booktitle> <pages> pp. 300-307, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: One technique replicates critical software components on a collection of nodes that fail independently [5]. Coordinating this software replication necessitates timely and dependable communication between nodes. Point-to-point networks, with their multiplicity of processors and internode routes, provide a natural platform for applications that require both high performance and dependability <ref> [18] </ref>. Many parallel computers connect the processing elements with a point-to-point network [7, 9, 11, 20] to provide scalable communication bandwidth to applications. However, these networks often consist of short links, such as onboard wires or ribbon cables, with no need for higher-level error control. <p> Since each PRC RX has its own microcode control store, each incoming virtual channel can impose its own set of routing and switching policies. For example, real-time messages generally use packet switching and static routing for predictable performance <ref> [18] </ref>, although best-effort packets can improve their average latency by using cut-through switching and adaptive routing. Carrying these two types of traffic on different virtual channels allows real-time communication to coexist with non-real-time packets without sacrificing the performance of either class. Programmable routing allows SPIDER to handle irregular network topologies. <p> Higher-level protocols for predictable packet scheduling depend on a global time base and bounded communication delays <ref> [18] </ref>. A global time base is necessary for any deadline-based scheduling, as well as many consensus protocols. While many parallel machines distribute a single clock to the processing elements [9, 23], the potential distance separating the nodes of a distributed system causes clock skews that make this approach infeasible.
Reference: [19] <author> P. Kermani and L. Kleinrock, </author> <title> "Virtual cut-through: A new computer communication switching technique," </title> <journal> Computer Networks, </journal> <volume> vol. 3, no. 4, </volume> <pages> pp. 267-286, </pages> <month> September </month> <year> 1979. </year>
Reference-contexts: If the packet is destined for a subsequent node, the PRC RX can try to send the packet directly to the next node by reserving an NI TX. If the PRC RX is able to establish a cut-through <ref> [7, 19] </ref>, the PRC RX then sends the data it has accumulated to that transmitter and reconfigures the NI RX to forward data directly to the reserved NI TX, bypassing the PRC entirely. <p> If busy outgoing channels prevent an immediate cut-through, SPIDER may begin buffering the packet. If the link becomes free during this buffering, the host can reschedule the partially-arrived packet for transmission. Such partial cut-throughs <ref> [1, 19] </ref> can potentially improve performance for large packets by overlapping the forwarding of buffered pages with the arrival of subsequent pages of the packet. SPIDER facilitates partial cut-throughs by maintaining page-level information in the event and page tag queues. <p> Based on the header of an arriving packet, a PRC RX can select the next node in the packet's route and choose whether to buffer, stall, forward, or drop the packet. The micropro-grammable PRC RXs allow the PRC to support circuit switching, packet switching, virtual cut-through switching <ref> [19] </ref>, and wormhole switching [7]. The notification FIFOs provide a rendezvous point between each PRC RX and the host, and are used to diagnose and respond to dynamic conditions, such as congestion or faulty links.
Reference: [20] <author> S. Konstantinidou and L. Snyder, </author> <title> "Chaos router: Architecture and performance," </title> <booktitle> in Proc. Int'l Symposium on Computer Architecture, </booktitle> <pages> pp. 212-221, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: Coordinating this software replication necessitates timely and dependable communication between nodes. Point-to-point networks, with their multiplicity of processors and internode routes, provide a natural platform for applications that require both high performance and dependability [18]. Many parallel computers connect the processing elements with a point-to-point network <ref> [7, 9, 11, 20] </ref> to provide scalable communication bandwidth to applications. However, these networks often consist of short links, such as onboard wires or ribbon cables, with no need for higher-level error control. Centralized hardware and software can make parallel machines vulnerable to single-point failures. <p> SPIDER's flexibility enables the host to dynamically tailor routing and switching schemes according to prevailing network conditions and communication requirements. 4.1 Network Interface Communication in point-to-point networks requires multiplexing incoming traffic to the multiple outgoing links. Many routers for point-to-point, parallel machines employ some type of crossbar interconnect <ref> [7, 20, 28] </ref>. As a result, multicomputer routing chips are often pin-limited [1]. Instead, SPIDER uses a demand-slotted, time-division multiplexed bus to connect the incoming and outgoing channels. The demand-slotted bus prevents idle channels from interfering with active devices. <p> For example, the TRC [7] and the MDP [9] perform e-cube routing with wormhole switching, while the Chaos router <ref> [20] </ref> uses a type of deflection routing with virtual cut-through switching. Earlier systems often implemented packet switching with some form of static routing. The various routing and switching schemes have different characteristics, in terms of latency, deadlock-avoidance, and predictability.
Reference: [21] <author> A. Kovaleski, S. Ratheal, and F. Lombardi, </author> <title> "An architecture and interconnection scheme for time-sliced buses in real-time processing," </title> <booktitle> Proc. Real-Time Systems Symposium, </booktitle> <pages> pp. 20-27, </pages> <year> 1986. </year>
Reference-contexts: This allows the host to provide tighter bounds on clock skews between nodes. A distributed system cannot be predictable without some bound on communication delays. Therefore, SPIDER is designed to bound low-level communication delays. Access to interfaces in SPIDER is governed by fair, demand-slotted arbitration <ref> [21] </ref>, and all of the interfaces are designed to avoid blocking. This allows SPIDER to guarantee that all channels can access the memory within certain bounds.
Reference: [22] <author> S. J. Le*er, M. K. McKusick, M. J. Karels, and J. S. Quarterman, </author> <title> The Design and Implementation of the 4.3BSD Unix Operating System, </title> <publisher> Ad-dison Wesley, </publisher> <month> May </month> <year> 1989. </year>
Reference-contexts: These pages can be partially filled and need not be contiguous in memory, similar to MBUFs and MBUF clusters <ref> [22] </ref>. To transmit a packet, the host creates the header on a separate page, leaving the data pages untouched, and feeds the page tags to the page tag queue for the PRC TX selected by the routing algorithm.
Reference: [23] <author> C. Leiserson, Z. Abuhamdeh, D. Douglas, C. Feynman, M. Ganmukhi, J. Hill, W. D. Hillis, B. Kuszmaul, M. St. Pierre, D. Wells, M. Wong, S.-W. Yang, and R. Zak, </author> <title> "The network architecture of the connection machine CM-5," </title> <booktitle> in Symposium on Parallel Algorithms and Architectures, </booktitle> <pages> pp. 272-285, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: Higher-level protocols for predictable packet scheduling depend on a global time base and bounded communication delays [18]. A global time base is necessary for any deadline-based scheduling, as well as many consensus protocols. While many parallel machines distribute a single clock to the processing elements <ref> [9, 23] </ref>, the potential distance separating the nodes of a distributed system causes clock skews that make this approach infeasible. Distributed systems, therefore, must have some means of keeping the local clock of each node within some allowable skew.
Reference: [24] <author> O. Menzilcioglu and S. Schlick, "Nectar CAB: </author> <title> A high-speed network processor," </title> <booktitle> in Proc. Int. Conf. on Distributed Computer Systems, </booktitle> <pages> pp. 508-515, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: Each node can erect firewalls against failures by employing protection boundaries. Communication protocols, tailored to the delay and error characteristics of the network media, mediate between communicating entities. However, in many distributed systems nodes interface to the communication fabric through only one or two ports <ref> [10, 16, 24] </ref>. In this configuration, one or two media failures can partition the network. For example, the Nectar communication accelerator board (CAB) [24] for heterogeneous distributed computing supports one bidirectional port into the network, and thus, a single failure can isolate a node. <p> However, in many distributed systems nodes interface to the communication fabric through only one or two ports [10, 16, 24]. In this configuration, one or two media failures can partition the network. For example, the Nectar communication accelerator board (CAB) <ref> [24] </ref> for heterogeneous distributed computing supports one bidirectional port into the network, and thus, a single failure can isolate a node. Combining the high connectivity of point-to-point, parallel machines with the communication protocols of distributed systems results in a hybrid environment well suited to both real-time and non-real-time applications. <p> Allowing the network interface hardware to calculate the CRC can virtually eliminate this cost, as the calculation can be made by the hardware during the transfer of the packet to and from the network interface. This is the approach taken by the Nectar CAB <ref> [24] </ref> and Afterburner [10]. But whereas these designs manage a single bidirectional port into the network, SPIDER must handle twelve. To avoid replicating hardware, the PRC uses a single 32-bit parallel CRC generator to compute the CRC for every outbound packet.
Reference: [25] <author> L. Ni and P. McKinley, </author> <title> "A survey of wormhole routing techniques in direct networks," </title> <booktitle> IEEE Computer, </booktitle> <pages> pp. 62-76, </pages> <month> February </month> <year> 1993. </year>
Reference-contexts: With different multiplexing control, each PRC can support up to twelve neighbors with a single virtual channel per link, up to six neighbors with a pair of virtual channels per link, or other combinations. These virtual channels can be used for deadlock-free wormhole routing <ref> [8, 25] </ref> or to partition various types of traffic onto different virtual networks. 4.2 Microprogrammability Routers for parallel point-to-point networks typically employ a single routing and switching scheme, implemented in hardware.
Reference: [26] <author> P. Ramanathan, K. G. Shin, and R. W. Butler, </author> <title> "Fault-tolerant clock synchronization in distributed systems," </title> <booktitle> IEEE Computer, </booktitle> <pages> pp. 33-42, </pages> <month> October </month> <year> 1990. </year>
Reference-contexts: Distributed systems, therefore, must have some means of keeping the local clock of each node within some allowable skew. This can be done in software, hardware, or a combination of both <ref> [26] </ref>. Hybrid algorithms using a combination of hardware and software can keep the local clocks of a distributed system synchronized, while using simpler hardware and providing tighter bounds than software algorithms.
Reference: [27] <author> K. G. Shin, </author> <title> "HARTS: A distributed real-time architecture," </title> <journal> IEEE Computer, </journal> <volume> vol. 24, no. 5, </volume> <pages> pp. 25-35, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: An IV-3207 card, coupled with the SPIDER daughterboard, can serve as a network-based uniprocessor handling both application and communication tasks or as a dedicated communication processor for a multiprocessor. SPIDER will initially provide communication support for the Hexagonal Architecture for Real-Time Systems (HARTS) <ref> [27] </ref>, a point-to-point, distributed system targeted for real-time applications. pSOS+ [29], a commercial real-time executive, provides system support to application threads within a node while x-kernel [14] coordinates communication between nodes. We are extending x-kernel to support point-to-point communication and real-time protocols using SPIDER.
Reference: [28] <author> Y. Tamir and G. Frazier, </author> <title> "Dynamically-allocated multi-queue buffers for VLSI communication switches," </title> <journal> IEEE Trans. Computers, </journal> <volume> vol. 41, no. 6, </volume> <pages> pp. 725-737, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: SPIDER's flexibility enables the host to dynamically tailor routing and switching schemes according to prevailing network conditions and communication requirements. 4.1 Network Interface Communication in point-to-point networks requires multiplexing incoming traffic to the multiple outgoing links. Many routers for point-to-point, parallel machines employ some type of crossbar interconnect <ref> [7, 20, 28] </ref>. As a result, multicomputer routing chips are often pin-limited [1]. Instead, SPIDER uses a demand-slotted, time-division multiplexed bus to connect the incoming and outgoing channels. The demand-slotted bus prevents idle channels from interfering with active devices.
Reference: [29] <author> L. M. Thompson, </author> <title> "Using pSOS + for embedded real-time computing," </title> <booktitle> in Proc. COMPCON, </booktitle> <pages> pp. 282-288, </pages> <year> 1990. </year>
Reference-contexts: SPIDER will initially provide communication support for the Hexagonal Architecture for Real-Time Systems (HARTS) [27], a point-to-point, distributed system targeted for real-time applications. pSOS+ <ref> [29] </ref>, a commercial real-time executive, provides system support to application threads within a node while x-kernel [14] coordinates communication between nodes. We are extending x-kernel to support point-to-point communication and real-time protocols using SPIDER. This platform allows investigation of software paradigms for managing time-constrained communication in point-to-point, distributed systems.
References-found: 29

