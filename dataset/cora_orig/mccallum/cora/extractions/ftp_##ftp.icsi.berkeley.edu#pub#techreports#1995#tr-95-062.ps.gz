URL: ftp://ftp.icsi.berkeley.edu/pub/techreports/1995/tr-95-062.ps.gz
Refering-URL: http://www.icsi.berkeley.edu/techreports/1995.html
Root-URL: http://www.icsi.berkeley.edu
Title: The Supervisor Synthesis Problem for Unrestricted CTL is N P-complete  
Author: Marco Antoniottiy Bud Mishraz 
Address: I 1947 Center St. Suite 600 Berkeley, California 94704-1198  Berkeley, CA, USA  New York, NY, USA  
Affiliation: INTERNATIONAL COMPUTER SCIENCE INSTITUTE  International Computer Science Institute  Courant Institute of Mathematical Sciences, New York University  
Pubnum: TR-95-062  
Email: marcoxa@icsi.berkeley.edu  mishra@cs.nyu.edu  
Phone: (510) 643-9153 FAX (510) 643-7684  
Date: November 1, 1995  
Abstract: The problem of restricting a finite state model (a Kripke structure) in order to satisfy a set of unrestricted CTL formul is named the "Unrestricted CTL Supervisor Synthesis Problem" . The finite state model has the characteristics described in [RW87b], that is, its transitions are partitioned between controllable and uncontrollable ones. The set of CTL formul represents a specification of the desired behavior of the system, which may be achieved through a control action. This note shows the problem to be N P-complete. 
Abstract-found: 1
Intro-found: 1
Reference: [Ant95] <author> M. Antoniotti. </author> <title> Synthesis and Verification of Discrete Controllers for Robotics and Manufacturing Devices with Temporal Logic and the Control-D System. </title> <type> PhD thesis, </type> <institution> Courant Institute of Mathematical Sciences, </institution> <address> New York University, </address> <month> September </month> <year> 1995. </year>
Reference-contexts: 1 Introduction This note contains a proof of the N P-completeness for the Unrestricted CTL Supervisor Synthesis Problem as defined in <ref> [Ant95] </ref>. The problem is defined in terms of a model of the unrestrained behavior of a discrete system or plant P (typically represented as a Finite State Machine) and a specification S of the desired behavior of the system, given as a set of CTL formul [Eme90]. <p> The reasons behind such differences are discussed in <ref> [Ant95] </ref>, but are not relevant in the current discussion. 1 variables" c 1 and c 2 ). It is immediate to note that the state labeled [Use 1 ; Use 2 ] is reachable from the start state of the composed system. <p> The finite state machine obtained from M 1 jjM 2 by disabling the transitions u i in states [Request 1 ; Use 2 ] and [Use 1 ; Request 2 ] is a model for the mutual exclusion specification. For this case, a partial trace of the Control-D system <ref> [Ant95] </ref> is ... <p> Two algorithms for the original Supervisor Synthesis problem specified by Ramadge and Wonham can be found in [RW87a]. An algorithm for the Supervisor Synthesis problem for restricted CTL specifications is described in <ref> [Ant95] </ref>. This last algorithm is based on a labeling scheme, which was used for the model checking algorithm by Emerson and Clarke [CES86]. 2 N P -completeness of the CTL Supervisor Synthesis Problem In [Ant95] the search for tractable algorithms for the CTL Supervisor Synthesis Problem leads to a restriction on <p> An algorithm for the Supervisor Synthesis problem for restricted CTL specifications is described in <ref> [Ant95] </ref>. This last algorithm is based on a labeling scheme, which was used for the model checking algorithm by Emerson and Clarke [CES86]. 2 N P -completeness of the CTL Supervisor Synthesis Problem In [Ant95] the search for tractable algorithms for the CTL Supervisor Synthesis Problem leads to a restriction on the form of CTL formul admitted as specifications of the desired behavior of a plant. <p> This algorithm is therefore N P-hard. The next section contains the formal proof of the N P-completeness of the problem. 2.2.2 N P-completeness Proof The N P-completeness theorem is stated following the "format" used in [GJ79] and the terminology introduced in <ref> [Ant95] </ref>. Theorem 1 Supervisor Synthesis for Unrestricted CTL Specifications: INSTANCE: A Controlled Discrete Event System (cfr. [RW87b]) and a specification S consisting of a set of CTL formul. <p> Elsewhere we have shown that if one restricts the attention to such a fragment of CTL then it is possible to build better algorithms for these cases (e.g. by limiting one of the disjuncts to be fully propositional, as in <ref> [Ant95] </ref>).
Reference: [CES86] <author> E. M. Clarke, E. A. Emerson, and A. P. Sistla. </author> <title> Automatic Verification of Finite-State Concurrent Systems Using Temporal Logic Specifications. </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 8(2) </volume> <pages> 244-263, </pages> <year> 1986. </year>
Reference-contexts: An algorithm for the Supervisor Synthesis problem for restricted CTL specifications is described in [Ant95]. This last algorithm is based on a labeling scheme, which was used for the model checking algorithm by Emerson and Clarke <ref> [CES86] </ref>. 2 N P -completeness of the CTL Supervisor Synthesis Problem In [Ant95] the search for tractable algorithms for the CTL Supervisor Synthesis Problem leads to a restriction on the form of CTL formul admitted as specifications of the desired behavior of a plant.
Reference: [Eme90] <author> E. A. Emerson. </author> <title> Temporal and Modal Logic. </title> <editor> In J. van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, volume B, chapter 16, </booktitle> <pages> pages 995-1072. </pages> <publisher> MIT Press, </publisher> <year> 1990. </year>
Reference-contexts: The problem is defined in terms of a model of the unrestrained behavior of a discrete system or plant P (typically represented as a Finite State Machine) and a specification S of the desired behavior of the system, given as a set of CTL formul <ref> [Eme90] </ref>. The model of the system is given following the conventions established by Ramadge and Wonham [RW87b]. The plant is modeled as a generator P = (; S; ffi; s 0 ). <p> M 1 and M 2 have to request and use a given resource. The interleaving composition M 1 jjM 2 yields the 9-state machine also shown in Figure 1.1. Using the standard CTL semantics (e.g. as described in <ref> [Eme90] </ref>) it is immediate to realize that the combined behavior of M 1 and M 2 satisfies the following liveness condition: if a machine requests the resource, it will eventually use it. <p> Proof. N P Membership: The problem is in N P because of the following argument. Guess a supervisor assignment and verify it using the Model Checking (linear) algorithm for CTL <ref> [Eme90] </ref>. Since the model checking algorithm is linear, the whole algorithm is clearly in N P. N P-hardness: The argument is the same as the one used in the discussion of Section 2.2.1. The construction is here formalized for generic SAT formul.
Reference: [GJ79] <author> M. R. Garey and D. S. Johnson. Computers and Intractability. W. H. Freeman and Company, </author> <year> 1979. </year>
Reference-contexts: The rationale behind this choices stemmed from the problematic example discussed in Section 2.1, which eventually lead to the construction of a reduction from SAT <ref> [GJ79] </ref> which proves that the supervisor synthesis problem for arbitrary CTL specifications is N P-complete. 2.1 Disjunction Problem with disjunction. A supervisor is needed that satisfies the formula AX (AG (p 1 )) _ AX (AG (p 2 )): (1) for the plant language L of Figure 2. <p> This algorithm is therefore N P-hard. The next section contains the formal proof of the N P-completeness of the problem. 2.2.2 N P-completeness Proof The N P-completeness theorem is stated following the "format" used in <ref> [GJ79] </ref> and the terminology introduced in [Ant95]. Theorem 1 Supervisor Synthesis for Unrestricted CTL Specifications: INSTANCE: A Controlled Discrete Event System (cfr. [RW87b]) and a specification S consisting of a set of CTL formul.
Reference: [RW87a] <author> P. J. Ramadge and W. M. Wonham. </author> <title> On the Supremal Controllable Sublanguage of a Given Language. </title> <journal> SIAM J. Control and Optimization, </journal> <volume> 25(3) </volume> <pages> 637-659, </pages> <month> May </month> <year> 1987. </year>
Reference-contexts: The notation is a prefix rendering of the standard CTL syntax and the terms (STATE s) denote states in the composed machine. 1.1.1 Algorithms for the Supervisor Synthesis Problem. Two algorithms for the original Supervisor Synthesis problem specified by Ramadge and Wonham can be found in <ref> [RW87a] </ref>. An algorithm for the Supervisor Synthesis problem for restricted CTL specifications is described in [Ant95].
Reference: [RW87b] <author> P. J. G. Ramadge and W. M. Wonham. </author> <title> Supervisory Control of a Class of Discrete Events Processes. </title> <journal> SIAM J. Control and Optimization, </journal> <volume> 25(1) </volume> <pages> 206-230, </pages> <year> 1987. </year> <month> 11 </month>
Reference-contexts: The model of the system is given following the conventions established by Ramadge and Wonham <ref> [RW87b] </ref>. The plant is modeled as a generator P = (; S; ffi; s 0 ). In particular the set of transitions (or events) of the plant is partitioned into two subsets of controllable and uncontrollable events, c and u = c . <p> Theorem 1 Supervisor Synthesis for Unrestricted CTL Specifications: INSTANCE: A Controlled Discrete Event System (cfr. <ref> [RW87b] </ref>) and a specification S consisting of a set of CTL formul. QUESTION: Is there a supervisor map ' such that L; '; s 0 jj= S? (Where s 0 is the "initial state" of the CDES.) This problem is N P-complete. Proof.
References-found: 6

