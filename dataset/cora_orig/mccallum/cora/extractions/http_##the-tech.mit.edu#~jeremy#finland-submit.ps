URL: http://the-tech.mit.edu/~jeremy/finland-submit.ps
Refering-URL: http://www.cnri.reston.va.us/home/koe/bib/mobile-abs.bib.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Using the Knowbot Operating Environment in a Wide-Area Network  
Author: Jeremy Hylton and Guido van Rossum 
Address: 1895 Preston White Dr., Reston VA 22091  
Affiliation: Corporation for National Research Initiatives  
Abstract: Mobile agents can optimize their communication patterns to reduce bandwidth and latency and can adapt to changes in network service. We report on use of the Knowbot Operating Environment to support mobile agents in a wide-area network. Experiments with an application that monitors Web pages for changes show that a mobile program can outperform its stationary counterpart. The performance benefits are obtained by moving clients within the network to reduce the costs of wide-area network connections. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Anurag Acharya, Mudumbai Ranganathan, and Joel Saltz. Sumatra: </author> <title> A language for resource-aware mobile programs. </title> <booktitle> In Mobile Object Systems: Towards the Programmable Internet (Lecture Notes in Computer Science No. </booktitle> <volume> 1222.), </volume> <pages> pages 111-130. </pages> <publisher> Springer-Verlag, </publisher> <month> April </month> <year> 1997. </year>
Reference-contexts: The KP can be run near the Web server, so the page (which is large) is transferred a short distance, and only the checksum is transferred back to the KPs orginiator. The Sumatra mobile agent system <ref> [1] </ref> has been used to experiment with resource or network-aware mobile programs [15, 16].
Reference: 2. <author> Armando Fox, Steven D. Gribble, Eric A. Brewer, Elan Amir. </author> <title> Adapting to Network and Client Variability via On Demand Dynamic Distillation. </title> <booktitle> In Proceedings Seventh International Conference on Architectural Support for Progrogramming Languages and Operating Systems (ASPLOS- VII), </booktitle> <address> Cambridge, Ma., </address> <month> October </month> <year> 1996. </year>
Reference-contexts: Mobile systems must cope with periods of disconnection and low bandwidth, and techniques similar to ours have been developed. For example, Rover [8] uses relocatable dynamic objects to move parts of an application from the client to the server. Dynamic distillation <ref> [2] </ref> is another technique that has been used to adapt to variations in connectivity. Distillation works by placing a filter at the mobile hosts base station.
Reference: 3. <author> Robert S. Gray. </author> <title> Agent Tcl: A flexible and secure mobile agent system. </title> <booktitle> In Proceedings of the Fourth Annual Tcl/Tk Workshop, </booktitle> <pages> pages 9-23, </pages> <address> Monterey, </address> <institution> Cal., </institution> <month> July </month> <year> 1996. </year>
Reference: 4. <author> Christian Huitema. </author> <title> Routing in the Internet. </title> <address> Englewood Cliffs, NJ: </address> <publisher> Prentice-Hall, </publisher> <year> 1995. </year>
Reference: 5. <author> Jeremy Hylton, Ken Manheimer, Fred L. Drake, Jr., Barry Warsaw, Roger Masse, and Guido van Rossum. </author> <title> Knowbot programming: System support for mobile agents. </title> <booktitle> In Proceedings of the Fifth International Workshop on Object Orientation in Operating Systems, </booktitle> <pages> pages 8-13, </pages> <address> Seattle, Wash., </address> <month> October </month> <year> 1996. </year>
Reference-contexts: The suitcase can be easily accessed after the KP terminates. Knowbot Programs are executed at service stations, hosts running the Knowbot Operating System software <ref> [5] </ref>. The service stations primary purpose is to allow KPs to run without violating the integrity of the hosts system. The service station kernel also accepts KP migrations, performs process managements, and manages a namespace for inter-KP communication. The service station can be extended to provide new services using plugins. <p> The namespace is distributed, hierarchical, and typed; it contains entries for all publicly available objects, including each service station and object implements by KPs. The top levels of the namespace are replicated, based on a design by Lampson <ref> [5] </ref>. Reporting stations provide a mechanism for tracking a KP as it migrates from host to host and for retrieving the KP or objects in its suitcase after it exits.
Reference: 6. <author> B. Janssen, D. Severson, and M. Spreitzer. </author> <title> ILU 1.8 Reference Manual. </title> <institution> Xerox Corp., </institution> <year> 1995. </year> <note> Available via Inter- Language Unification Web page. </note>
Reference: 7. <author> Dag Johansen, Robbert van Renesse, and Fred B. Schneider. </author> <title> Operating system support for mobile agents. </title> <booktitle> In Proceedings of the 5th IEEE Workshop on Hot Topics in Operating Systems, </booktitle> <pages> pages 42-45, </pages> <address> Orcas Island, Wash., </address> <month> May </month> <year> 1994. </year>
Reference-contexts: Current work builds on and extends these ideas. The Knowbot system is implemented as a runtime layer on top of a Unix operating system. It also relies on CORBA-style distributed objects, currently implemented using the ILU system developed at Xerox PARC <ref> [7] </ref>. These two characteristics reflect significant design decisions. First, we made portability a top priority. Second, we have provided high-level, RPC-based communication as part of the infrastructure for mobile agents. A Knowbot Program (KP) can control its location with the migrate operation and can duplicate itself with the clone operation.
Reference: 8. <author> A. D. Joseph, A. F. deLespinasse, J. A. Tauber, D. K. Gifford, and M. F. Kaashoek. </author> <title> Rover: A toolkit for mobile information access. </title> <booktitle> In Proceedings of the 15th ACM Symposium on Operating Systems Principles, </booktitle> <pages> pages 156-171, </pages> <month> December </month> <year> 1995. </year>
Reference-contexts: Mobile computers (as opposed to mobile programs) see much greater variation in the quality of network connections. Mobile systems must cope with periods of disconnection and low bandwidth, and techniques similar to ours have been developed. For example, Rover <ref> [8] </ref> uses relocatable dynamic objects to move parts of an application from the client to the server. Dynamic distillation [2] is another technique that has been used to adapt to variations in connectivity. Distillation works by placing a filter at the mobile hosts base station.
Reference: 9. <author> Robert E. Kahn and Vinton G. Cerf. </author> <title> The Digital Library Project, volume I: The world of Knowbots. </title> <type> Unpublished manuscript, </type> <institution> Corporation for National Research Initiatives, </institution> <address> Reston, Va., </address> <month> March </month> <year> 1988. </year>
Reference-contexts: This section reviews the important features of the KOE. The current Knowbot system builds on earlier work at CNRI, including a system developed for the (U.S.) National Library of Medicine. The initial architectural framework is presented by Kahn and Cerf <ref> [9] </ref>. Current work builds on and extends these ideas. The Knowbot system is implemented as a runtime layer on top of a Unix operating system. It also relies on CORBA-style distributed objects, currently implemented using the ILU system developed at Xerox PARC [7]. These two characteristics reflect significant design decisions.
Reference: 10. <author> Butler Lampson. </author> <title> Designing a Global Name Service. </title> <booktitle> Proceedings of the 6th ACM Symposium on Principles of Distributed Computing, </booktitle> <pages> pages 1-10, </pages> <address> Calgary, </address> <year> 1986. </year>
References-found: 10

