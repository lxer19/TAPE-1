URL: http://www.eecs.umich.edu/PPP/TPDS98.ps
Refering-URL: http://www.eecs.umich.edu/PPP/publist.html
Root-URL: http://www.cs.umich.edu
Title: Characterizing Distributed Shared Memory Performance: A Case Study of the Convex SPP1000  
Author: Gheith A. Abandah, Member, IEEE, and Edward S. Davidson, Fellow, IEEE 
Keyword: Index Terms: Performance Evaluation, Memory Performance, Communication Performance, Microbench-marking, Distributed Shared Memory, Convex SPP1000.  
Date: November 17, 1997  
Note: The IEEE Trans. on Parallel and Distributed Systems, Vol. 9, No. 2, Feb 1998, pp 206-216. 1  
Abstract: In a distributed shared memory (DSM) multiprocessor, the processors cooperate in solving a parallel application by accessing the shared memory. The latency of a memory access depends on several factors including the distance to the nearest valid data copy, data sharing conditions, and traffic of other processors. To provide a better understanding of DSM performance and to support application tuning and compiler development for DSM systems, this paper extends microbenchmarking techniques to characterize the important aspects of a DSM system. We present an experiment-based methodology for characterizing the memory, communication, scheduling, and synchronization performance, and apply it to the Convex SPP1000. We present carefully designed microbench-marks to characterize the performance of the local and remote memory, producer-consumer communication involving two or more processors, and the effects on performance when multiple processors contend for utilization of the distributed memory and the interconnection network. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Culler, J. Singh, and A. Gupta, </author> <title> Parallel Computer Architecture: A Hardware/Software Approach. </title> <publisher> Mor-gan Kaufmann, </publisher> <year> 1997. </year> <note> (Pre-production draft 9/4/97). </note>
Reference-contexts: Due to the increasing gap between processor speed and memory speed, DSM systems use one or more levels of caches that are kept consistent using one of many cache coherence protocols <ref> [1, 2] </ref>. fl The authors are with the Advanced Computer Architecture Laboratory, EECS Department, University of Michigan, 1301 Beal Avenue, Ann Arbor, MI 481092122; e-mail: fgabandah, david-song@eecs.umich.edu The distributed memory, caches, and coherence protocols make DSM performance very complex, thus, slowing the development of efficient applications.
Reference: [2] <author> D. Lenoski and W.-D. Weber, </author> <title> Scalable Shared-Memory Multiprocessing. </title> <publisher> Morgan Kaufmann, </publisher> <year> 1995. </year>
Reference-contexts: Due to the increasing gap between processor speed and memory speed, DSM systems use one or more levels of caches that are kept consistent using one of many cache coherence protocols <ref> [1, 2] </ref>. fl The authors are with the Advanced Computer Architecture Laboratory, EECS Department, University of Michigan, 1301 Beal Avenue, Ann Arbor, MI 481092122; e-mail: fgabandah, david-song@eecs.umich.edu The distributed memory, caches, and coherence protocols make DSM performance very complex, thus, slowing the development of efficient applications.
Reference: [3] <author> T. Brewer, </author> <title> A Highly Scalable System Utilizing up to 128 PA-RISC Processors, </title> <booktitle> in Digest of papers, COMPCON'95, </booktitle> <pages> pp. 133140, </pages> <month> Mar. </month> <year> 1995. </year>
Reference-contexts: Performance models are also useful for conducting quantitative comparisons among different multiprocessors and selecting the best available application implementation techniques. In this paper, we present an experimental methodology and use it to characterize the memory, scheduling, and synchronization performance of the Convex SPP1000 <ref> [3] </ref>. We extend the microbenchmark techniques used in previous studies [4, 5, 6, 7, 8] by adapting them to deal with the important attributes of a DSM system. Like previous studies, this paper analyzes the cache, memory, and interconnection network performance.
Reference: [4] <author> K. Gallivan, D. Gannon, W. Jalby, A. Malony, and H. Wijshoff, </author> <title> Experimentally Characterizing the Behavior of Multiprocessor Memory Systems: </title>
Reference-contexts: In this paper, we present an experimental methodology and use it to characterize the memory, scheduling, and synchronization performance of the Convex SPP1000 [3]. We extend the microbenchmark techniques used in previous studies <ref> [4, 5, 6, 7, 8] </ref> by adapting them to deal with the important attributes of a DSM system. Like previous studies, this paper analyzes the cache, memory, and interconnection network performance. <p> The first call time is ignored since it is significantly affected by page faults and other cold start effects. The experiments are carried out during an exclusive reservation period where the one active user process is running one of the timing programs. We have used load and store kernels <ref> [4] </ref> to characterize the memory access performance. The load kernel is a subroutine that loads double-precision (8-byte) elements of a one-dimensional array into the floating-point registers. In the store kernel, the load instructions are replaced with stores.
References-found: 4

