URL: http://www.ri.cmu.edu/afs/cs/user/richm/public/aaai96.ps
Refering-URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/project/garnet/www/pbd-group/pbd-papers.html
Root-URL: 
Title: Abstract  
Abstract: My research focuses on how a user communicates with a programming-by-demonstration (PBD) system. In particular, I am experimenting with new nonverbal, direct manipulation techniques that will enhance a users expressiveness and subsequently will make it possible to infer a broader range of application behavior. The techniques include a new form of demonstrational interaction called nudges used to specify behavior. Complementing nudges is a special form of selection which is used to give the system hints by identifying significant objects. A new deck-of-playing-cards metaphor is also introduced for specifying useful effects such as randomness and sequencing. Other techniques use objects for annotating examples such as behavior icons for manipulating and editing behaviors, and temporal ghosts to allow explicit references to past states. Finally, using guide objects is a technique for demonstrating constraints and hidden connections between objects. Complementing these new techniques will be an infer-encing algorithm sufficiently powerful to convert data from all these sources into application behavior. Special attention will be given toward how hints are used to regulate inferencing. By fostering better communication between the user and the system, these techniques should allow the user to create highly interactive software with minimal programming expertise. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Gene L. Fisher, Dale E. Busse, David A. Wolber. </author> <title> Adding Rule-Based Reasoning to a Demonstrational Interface Builder. </title> <booktitle> Proceedings of UIST92, </booktitle> <pages> pp 89-97. </pages>
Reference-contexts: Guide objects, mode switches, behavior icons, and temporal ghosts will all be annotation objects in Gamut. Guide Objects Lines and rectangles can be used as annotations to show connections and graphical constraints between objects. Demo II by Fisher et al. <ref> [1] </ref> used a similar technique called guidewires. By placing the guide objects in important locations, positions and relationships can be maintained even when no visible objects are involved. For instance, one can configure a table for a card game by laying out rectangles at places where cards are placed.
Reference: [2] <author> Martin Frank. </author> <title> Model-Based User Interface Design by Demonstration and by Interview. </title> <type> Ph.D. thesis. </type> <institution> Graphics, Visualization & Usability Center, Georgia Institute of Technology, Atlanta, Georgia. </institution>
Reference-contexts: Second, the Stop That! nudge will be used when a behavior performs undesired actions on objects. The system compares the current state to previous times when the behavior succeeded and determine how to make the behavior conditional. Several prior systems such as Franks Grizzly Bear <ref> [2] </ref> have used an extended macro-recorder metaphor for collecting demonstrations. A macro-recorder stores operations by having the author transfer into a special mode where the system will remember each action the author performs. The extended macro recorder adds a second mode to this scheme for recording stimulus events.
Reference: [3] <author> Gene L. Fisher and William Finzer. </author> <title> Programming by Rehearsal. </title> <institution> Palo Alto Research Center, Xerox Corporation, </institution> <year> 1984. </year>
Reference-contexts: Gamut uses a variety of feedback methods. Behavior has many facets and different views are needed for each. One basic requirement is that all data in a Gamut program be completely visible and accessible. This same principle was embodied in Gould and Finzers Rehearsal World <ref> [3] </ref> with some success and has since been common in many PBD environments. As in Rehearsal World, Gamuts data will be exposed as widgets.
Reference: [4] <author> David Maulsby. </author> <title> Instructible Agents. </title> <type> Ph.D. thesis. </type> <institution> Department of Computer Science, University of Calgary, Calgary, Alberta, </institution> <month> June </month> <year> 1994. </year>
Reference-contexts: Correcting the mistake can be accomplished immediately and does not require the author to formulate a new demonstration from scratch. To point out important objects that relate indirectly to the demonstrated behavior, the author will use highlighting for hints. Maulsbys Turvy experiments studied hints as well <ref> [4] </ref>, but Gamut will be the first to apply hints in an interactive domain. Hints are needed to distinguish the causes for conditional behavior. Even in a small application, the number of possible conditions that could affect a given behavior are too numerous to generate and test.
Reference: [5] <author> Francesmary Mudugno, T.R.G. Green, Brad A. Myers. </author> <title> Visual Programming in a Visual Domain: A Case Study of Cognitive Dimension. Proceedings Human-Computer Interaction 1994, People and Computers, </title> <address> Glasgow, </address> <month> August, </month> <year> 1994. </year>
Reference-contexts: Demonstrations would be inferred without the author knowing what would happen until the program was tested later. Other systems provide a secondary window that displays the systems inferences as programming code. Graphical representations have been shown to be one of the most understandable forms of feedback for novice users <ref> [5] </ref>. This is why Gamut avoids using language representations as much as possible and uses graphical representations for the majority of its techniques. Gamut uses a variety of feedback methods. Behavior has many facets and different views are needed for each.
Reference: [6] <author> Brad A. Myers, Richard G. McDaniel, and David S. Kosbie. Marquise: </author> <title> Creating Complete User Interfaces by Demonstration. </title> <booktitle> Proceeding of INTERCHI93: Human Factors in Computing Systems, </booktitle> <year> 1993, </year> <pages> pp. 293-300. </pages>
Reference-contexts: To allow the author to make explicit connections to the past, Gamut will show a dimmed, translucent image of the object in its prior state as in Figure 1. A similar technique was used to record cursor positions in Marquise <ref> [6] </ref> so that the author could specify how objects behave with respect to cursor events. Gamut generalizes this to all objects.
Reference: [7] <author> Stuart J. Russell, Peter Norvig. </author> <title> Artificial Intelligence: A Modern Approach. </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, New Jersey 07632, </address> <year> 1995. </year> <note> p. 654. </note>
Reference-contexts: These algorithms and methods are invoked while the author manipulates data and demonstrates behavior to provide a source of information for the inferencing algorithm. Inferencing Algorithm Gamuts inferencing can be best likened to the artificial intelligence field called plan recognition <ref> [7] </ref>. A plan recognition system watches a sequence of actions which is normally provided by a human source. The goal of the system is to label the sequence with a higher-level description that captures the meaning of the actions and explains the reason why the actions occurred.
References-found: 7

