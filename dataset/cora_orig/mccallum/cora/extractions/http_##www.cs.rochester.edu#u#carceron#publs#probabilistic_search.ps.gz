URL: http://www.cs.rochester.edu/u/carceron/publs/probabilistic_search.ps.gz
Refering-URL: http://www.cs.rochester.edu/u/carceron/publs/
Root-URL: 
Title: Evaluating the Trade-Offs in the Parallelization of Probabilistic Search Algorithms  
Author: R. L. Carceroni W. Meira Jr. R. Stets and S. Dwarkadas 
Keyword: Resumo  
Note: This work is supported in part by CAPES process BEX 0591/95-5; CNPq grant 200.862/93-6; NSF grants CDA-9401142, CCR-9319445, CCR-9702466, CCR-9705594 and CCR-9510173; and an equipment grant from Digital Equipment Corporation's External Research Program.  
Address: Ci^encia da Computa~c~ao  Rochester UFMG Caixa Postal 702 Rochester, NY 14627-0226 USA B. Horizonte, MG 30123-970 Brazil  
Affiliation: Department of Computer Science Depto. de  University of  
Abstract: In this work, we propose a speculative parallelization strategy for Probabilistic Search algorithms. We design a parallel version of one such algorithm for a real-time computer vision problem with many practical applications. The implementation is performed on a cluster of eight DEC AlphaServer 2100 4/233 machines connected via a DEC Memory Channel network. Four types of run-time systems are tested: Hardware-coherent Shared Memory (HSM), Distributed Shared Memory (DSM) with software coherence (Cashmere-2L), Reflective Shared Memory (RSM), and message passing (Digital PVM). A run-time system that is normally not the most efficient among these four (RSM) is found to be the best choice for our combination of algorithm and architecture. This shows that algorithmic parallelization and the selection of an implementation environment mutually interfere with each other and must be performed in a synergistic manner. Neste trabalho propomos uma estrategia de paraleliza~c~ao especulativa para al-goritmos de Busca Probabilstica. Um algoritmo de Busca Probabilstica paralelo e implementado para o Problema da Correspond^encia, cuja resolu~c~ao e necessaria em varias aplica~c~oes de vis~ao computacional com requerimentos de tempo real. Essa implementa~c~ao e executada em um cluster de oito DEC AlphaServer 2100 4/233 conectadas por um DEC Memory Channel. Apresentamos e discutimos resultados com quatro sistemas de tempo de execu~c~ao: Memoria Compartilhada com coer^encia por Hardware (HSM), Memoria Compartilhada Distribuda (DSM) com coer^encia por software (Cashmere-2L), Memoria Distribuda Refletiva (RSM), e troca de mensagens (Digital PVM). Dentre estes, o sistema de tempo de execu~c~ao que normalmente e o menos eficiente (RSM) apresenta o melhor desempenho, mostrando que a estrategia de paraleliza~c~ao do algoritmo e a sele~c~ao do ambiente de execu~c~ao se influenciam mutuamente e n~ao podem ser consideradas isoladamente. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. A. Brooks. </author> <title> Symbolic reasoning among 3-D models and 2-D images. </title> <journal> Artificial Intelligence, </journal> <volume> 17 </volume> <pages> 285-348, </pages> <year> 1981. </year>
Reference-contexts: The most traditional approach for solving this problem is to perform a brute force search, where every possible set of matches is checked for feasibility individually <ref> [1, 4] </ref>. Unfortunately, the cost of such methods is unaffordable for real-time applications. David Lowe [7] proposed an alternative PS algorithm that leads to dramatic savings with respect to the previous brute force approaches.
Reference: [2] <author> R. B. Gillett. </author> <title> Memory channel network for PCI. </title> <booktitle> IEEE Micro, </booktitle> <pages> pages 12-18, </pages> <year> 1996. </year>
Reference-contexts: Each of these bus-based multiprocessors houses four 233 MHz 21064A Alpha processors and 256 MB of memory. The Memory Channel is a reliable, in-order, low-latency, remote-write-access network. One-way message latency is 5.2 s. The Memory Channel <ref> [2] </ref> also provides user-level messaging capabilities through a very unique programming interface. Through special initialization calls, processes attach to address space regions reserved for the Memory Channel. The attach call must specify the message direction, i.e., TRANSMIT or RECEIVE.
Reference: [3] <author> R. B. Gillett and R. Kaufmann. </author> <title> Experience using the first-generation memory channel for PCI network. </title> <note> Submitted for publication. </note>
Reference-contexts: Applications with high read latencies may benefit from RSM, although extensive computation in shared memory may overwhelm the available network bandwidth and limit the application's scalability. PVM Digital PVM has been written to exploit the user-level messaging capabilities of the Memory Channel <ref> [3] </ref>. Outgoing messages are copied directly to a TRANSMIT region and thus are dispatched very efficiently. On the receiver side however, the messages can not be handled with the same efficiency. Incoming data is deposited by the Memory Channel into a predefined RECEIVE region.
Reference: [4] <author> E. Grimson and T. Lozano-Perez. </author> <title> Localizing overlapping parts by searching the inter pretation tree. </title> <journal> IEEE Trans. on Pattern Analysis and Machine Intelligence, </journal> <volume> 9 </volume> <pages> 469-482, </pages> <year> 1987. </year>
Reference-contexts: to show that the strategy described in the previous section can be successful in practice, we use it to parallelize a known PS algorithm for a combinatorial optimization problem of fundamental importance in the field of computer vision, with applications in visual navigation, automated surveillance, hand-eye coordination and augmented reality <ref> [7, 4] </ref>. To understand why this problem is so important let's consider how a typical active-vision system works, as illustrated in Fig. 1. Analog images collected by one or more cameras placed at a mobile platform are digitized at a frequency of 30 Hz. <p> The most traditional approach for solving this problem is to perform a brute force search, where every possible set of matches is checked for feasibility individually <ref> [1, 4] </ref>. Unfortunately, the cost of such methods is unaffordable for real-time applications. David Lowe [7] proposed an alternative PS algorithm that leads to dramatic savings with respect to the previous brute force approaches.
Reference: [5] <author> E. L. Lawler and D. E. Wood. </author> <title> Branch-and-bound methods: A survey. </title> <journal> Operations Research, </journal> <volume> 14 </volume> <pages> 699-719, </pages> <year> 1966. </year>
Reference-contexts: We then describe the implementation of this strategy in four run-time systems, the performance results in each of them, and discuss the issues involved in choosing the run-time system that best supports our parallelization strategy. 2 Probabilistic Search Probabilistic Search (PS) is a technique that resembles Branch and Bound (B&B) <ref> [5] </ref> in the sense that it minimizes the total number of alternatives that must be verified in order to perform an exhaustive search (i.e., a search that is guaranteed to find a solution if one exists) in the solution space of a given combinatorial optimization problem.
Reference: [6] <author> D. G. Lowe. </author> <title> Fitting parameterized three-dimensional models to images. </title> <journal> IEEE Trans. on Pattern Analysis and Machine Intelligence, </journal> <volume> 13(5) </volume> <pages> 441-450, </pages> <year> 1991. </year>
Reference-contexts: the resulting pairwise matches between 3-D and 2-D features; and, on the other hand, given a certain set of correspondences, it is also possible (though relatively expensive, computationally) to determine a pose that fits all the projections of the 3-D features to their 2-D image matches, in a least-squares sense <ref> [6] </ref>. The difficulty of the CP lies exactly in the fact that neither a solution in its discrete domain (the correspondences) nor a solution in its continuous domain (the pose parameters) are known.
Reference: [7] <author> D. G. Lowe. </author> <title> Robust model-based motion tracking through the integration of search and estimation. </title> <journal> International Journal of Computer Vision, </journal> <volume> 8(2) </volume> <pages> 113-122, </pages> <year> 1992. </year>
Reference-contexts: to show that the strategy described in the previous section can be successful in practice, we use it to parallelize a known PS algorithm for a combinatorial optimization problem of fundamental importance in the field of computer vision, with applications in visual navigation, automated surveillance, hand-eye coordination and augmented reality <ref> [7, 4] </ref>. To understand why this problem is so important let's consider how a typical active-vision system works, as illustrated in Fig. 1. Analog images collected by one or more cameras placed at a mobile platform are digitized at a frequency of 30 Hz. <p> The most traditional approach for solving this problem is to perform a brute force search, where every possible set of matches is checked for feasibility individually [1, 4]. Unfortunately, the cost of such methods is unaffordable for real-time applications. David Lowe <ref> [7] </ref> proposed an alternative PS algorithm that leads to dramatic savings with respect to the previous brute force approaches. <p> However, if a conjectured discrete solution with at least four matching pairs is available, its feasibility can be determined in the process of computing the dual least-squares pose solution, by verifying whether the residual of the least-squares fitting is below a certain predefined threshold, as explained in <ref> [7] </ref>. Finally, in order to complete a definition of a PS algorithm for the CP, it is necessary to determine how to assign feasibility probabilities to partial solutions in its discrete domain and how to search its discrete solution space according to these probabilities.
Reference: [8] <author> R. Stets, S. Dwarkadas, N. Hardavellas, L. Kontothanassis G. Hunt, S. Parthasarathy, and M.Scott. CASHMERE-2L: </author> <title> Software coherent shared memory on a clustered remote-write network. </title> <booktitle> In Proc. 16th Symposium on Operating Systems Principles, </booktitle> <year> 1997. </year>
Reference-contexts: Synchronization and communication are implemented entirely through shared memory and hardware coherence. Our hardware limits this protocol to executions of one to four processors. The user sees it as a library with routines for shared-memory spin locks, tree-based barriers, and synchronization via flags. Cashmere-2L Cashmere-2L <ref> [8] </ref> is a state-of-the-art software-based DSM system. The system is designed for operation on clusters of multiprocessors connected by a network with capabilities similar to the Memory Channel. Like HSM, the protocol is implemented as a user-level library which must be linked with the applications.
Reference: [9] <author> V. Sunderam. </author> <title> PVM: A framework for parallel and distributed computing. </title> <journal> Concur rency: Practice and Experience, </journal> <volume> 4(2) </volume> <pages> 315-339, </pages> <year> 1990. </year>
Reference-contexts: However, due to the proprietary nature of Digital PVM, we could not use protocol-level instrumentation to confirm this. We also tried to use a traditional TCP-based PVM <ref> [9] </ref> but the preliminary results obtained with it were so poor that it was immediately abandoned. At this point we performed a careful instrumentation of our DSM implementation, both at user and protocol levels.
References-found: 9

