URL: http://www.cs.pitt.edu/~kirk/papers/speed.ps
Refering-URL: http://www.cs.pitt.edu/~kirk/papers/index.html
Root-URL: 
Title: Speed is as Powerful as Clairvoyance  
Author: Bala Kalyanasundaram Kirk Pruhs 
Address: Pittsburgh Pittsburgh, PA 15260 Pittsburgh, PA 15260  
Affiliation: Computer Science Department Computer Science Department University of Pittsburgh University of  
Abstract: We consider several well known nonclairvoyant scheduling problems, including the problem of minimizing the average response time, and best-effort firm real-time scheduling. It is known that there are no deterministic online algorithms for these problems with bounded (or even polylogarithmic in the number of jobs) competitive ratios. We show that moderately increasing the speed of the processor used by the non-clairvoyant scheduler effectively gives this scheduler the power of clairvoyance. Furthermore, we show that there exist online algorithms with bounded competitive ratios on all inputs that are not closely correlated with processor speed. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Baruah, and J. Haritsa, </author> <title> "On improved perfor mance guarantees through the use of slack times," </title> <type> Tech. Report, </type> <institution> Computer Science Dept., University of Vermont. </institution>
Reference-contexts: 1 Introduction We consider several well known nonclairvoyant scheduling problems, including the problem of minimizing the average response time [13, 15], and best-effort firm real-time scheduling <ref> [1, 2, 3, 4, 8, 11, 12, 18] </ref>. (We postpone formally defining these problems until the next section.) In nonclairvoyant scheduling some relevant information, e.g. when jobs will arrive in the future, is not available to the scheduling algorithm A. <p> The effect of laxity on the competitive ratio in the special case of = 1 was considered in <ref> [1, 6] </ref>. We then show that the *-weak competitive ratio for Slacker approaches one as * increases.
Reference: [2] <author> S. Baruah, J. Haritsa, and N. Sharma, </author> <title> "On-line scheduling to maximize task completions" Real-time Systems Symposium, </title> <year> 1994. </year>
Reference-contexts: 1 Introduction We consider several well known nonclairvoyant scheduling problems, including the problem of minimizing the average response time [13, 15], and best-effort firm real-time scheduling <ref> [1, 2, 3, 4, 8, 11, 12, 18] </ref>. (We postpone formally defining these problems until the next section.) In nonclairvoyant scheduling some relevant information, e.g. when jobs will arrive in the future, is not available to the scheduling algorithm A. <p> The competitive ratio is unbounded even in the special case that each b i = 1 <ref> [2] </ref>. In section 4, we first assume that both the nonclair-voyant scheduler and the adversary have unit speed processors, and that the laxity of each job J i is at least *x i .
Reference: [3] <author> S. Baruah, G. Koren, D. Mao, B. Mishra, A. Raghunathan, L. Rosier, D. Shasha, and F. Wang, </author> <title> "On the competitiveness of on-line real-time task scheduling", </title> <journal> Journal of Real-Time Systems, </journal> <volume> 4, </volume> <pages> 124-144, </pages> <year> 1992. </year>
Reference-contexts: 1 Introduction We consider several well known nonclairvoyant scheduling problems, including the problem of minimizing the average response time [13, 15], and best-effort firm real-time scheduling <ref> [1, 2, 3, 4, 8, 11, 12, 18] </ref>. (We postpone formally defining these problems until the next section.) In nonclairvoyant scheduling some relevant information, e.g. when jobs will arrive in the future, is not available to the scheduling algorithm A. <p> Since this is a maximization problem, the competitive ratio definitions in the introduction have to be modified by inverting the ratios. So for example, the competitive ratio for this problem is then min max Opt (I) The deterministic competitive ratio for this problem is fi () <ref> [3, 4, 11, 18] </ref>, and the randomized competitive ratio is fi (min (log ; log )) [8, 12], where the importance ratio is the ratio of the maximum value density of a job to the minimum value density of a job, and is the ratio of the length of the longest
Reference: [4] <author> S. Baruah, G. Koren, B. Mishra, A. Raghu nathan, L. Rosier, and D. Shasha, </author> <title> "On-line scheduling in the presence of overload", </title> <booktitle> IEEE FOCS, </booktitle> <pages> 101-110, </pages> <year> 1991. </year>
Reference-contexts: 1 Introduction We consider several well known nonclairvoyant scheduling problems, including the problem of minimizing the average response time [13, 15], and best-effort firm real-time scheduling <ref> [1, 2, 3, 4, 8, 11, 12, 18] </ref>. (We postpone formally defining these problems until the next section.) In nonclairvoyant scheduling some relevant information, e.g. when jobs will arrive in the future, is not available to the scheduling algorithm A. <p> Since this is a maximization problem, the competitive ratio definitions in the introduction have to be modified by inverting the ratios. So for example, the competitive ratio for this problem is then min max Opt (I) The deterministic competitive ratio for this problem is fi () <ref> [3, 4, 11, 18] </ref>, and the randomized competitive ratio is fi (min (log ; log )) [8, 12], where the importance ratio is the ratio of the maximum value density of a job to the minimum value density of a job, and is the ratio of the length of the longest
Reference: [5] <author> S. Ben-David, and A. Borodin, </author> <title> "A new measure for the study of on-line algorithms", </title> <journal> Algorithmica, </journal> <volume> 11, </volume> <pages> 73-91, </pages> <year> 1994. </year>
Reference-contexts: These methods include restricting the input distribution to satisfy some special properties (e.g. [10, 16]), and comparing the cost of a solution produced by an online algorithm on input I to the worst-case optimal cost of any input of the same size as I <ref> [5] </ref>. 3 Average Response Time The following well known lemma explains why we first consider the queue size. Lemma 3.1 For any scheduling algorithm A with a speed s processor, the total response time is R 1 0 jQ A (t; s)jdt.
Reference: [6] <author> R. Colwell, R. Suchoza, D. Zorine, </author> <title> "On-line real time scheduling with laxities," </title> <type> Manuscript, </type> <year> 1995. </year>
Reference-contexts: The effect of laxity on the competitive ratio in the special case of = 1 was considered in <ref> [1, 6] </ref>. We then show that the *-weak competitive ratio for Slacker approaches one as * increases.
Reference: [7] <author> P. Galvin, and A. Silverschatz, </author> <title> Operating System Concepts, </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: We assume that such context switches require no time. The problem of minimizing the average response time of the jobs is a well known and widely studied problem in operating system scheduling (see for example <ref> [7, 14] </ref>). We assume that the nonclairvoyant scheduler does not learn x i at time r i , and more generally, can not deduce x i until it has run J i to completion. <p> Theorem 3.1 The *-weak competitive ratio of Balance with respect to average response time is at most 1 + 1 We now show that the commonly used algorithm Round Robin <ref> [7, 14] </ref> does not have a constant *-weak competitive ratio for small *. Round Robin splits the processing time evenly among all unfinished jobs.
Reference: [8] <author> B. Kalyanasundaram, and K. Pruhs, </author> <title> "Fault tolerant real-time scheduling", </title> <type> Technical Report, </type> <institution> CS Dept., University of Pittsburgh, </institution> <year> 1994. </year>
Reference-contexts: 1 Introduction We consider several well known nonclairvoyant scheduling problems, including the problem of minimizing the average response time [13, 15], and best-effort firm real-time scheduling <ref> [1, 2, 3, 4, 8, 11, 12, 18] </ref>. (We postpone formally defining these problems until the next section.) In nonclairvoyant scheduling some relevant information, e.g. when jobs will arrive in the future, is not available to the scheduling algorithm A. <p> So for example, the competitive ratio for this problem is then min max Opt (I) The deterministic competitive ratio for this problem is fi () [3, 4, 11, 18], and the randomized competitive ratio is fi (min (log ; log )) <ref> [8, 12] </ref>, where the importance ratio is the ratio of the maximum value density of a job to the minimum value density of a job, and is the ratio of the length of the longest job to the length of the shortest job.
Reference: [9] <author> B. Kalyanasundaram, and K. Pruhs, </author> <title> "The on line transportation problem", </title> <note> to appear, Euro-pean Symposium on Algorithms, </note> <year> 1995. </year>
Reference-contexts: The weak adversary model, comparing an online algorithm against a less powerful but more knowledgeable adversary, has been considered before in query-response problems such as the k-server problem and its special cases (e.g. [17, 19]), and online weighted matching <ref> [9] </ref>. In each case the adversary is handicapped by having fewer servers. One can argue that the weak competitive ratio is essentially what is called the comparative ratio in [10]. <p> Finally, we would like to mention that the weak adversary model has been used recently to show that the natural greedy algorithm, which works reasonably well in practice, is almost optimal for online weighted matching <ref> [9] </ref>. Traditional competitive analysis shows a bound of fi (2 m ) whereas the weak adversary analysis yields a bound of fi (log m) where m is the size of the graph.
Reference: [10] <author> E. Koutsoupias, and C. Papadimitriou, </author> <title> "Beyond competitive analysis," </title> <booktitle> FOCS, </booktitle> <pages> 394-400, </pages> <year> 1994. </year>
Reference-contexts: In each case the adversary is handicapped by having fewer servers. One can argue that the weak competitive ratio is essentially what is called the comparative ratio in <ref> [10] </ref>. However, the results in [10] are really of a different flavor in that they are primarily concerned with the effect of partial clairvoyance. Other methods have been suggested to address the limitations of competitive analysis. <p> In each case the adversary is handicapped by having fewer servers. One can argue that the weak competitive ratio is essentially what is called the comparative ratio in <ref> [10] </ref>. However, the results in [10] are really of a different flavor in that they are primarily concerned with the effect of partial clairvoyance. Other methods have been suggested to address the limitations of competitive analysis. <p> However, the results in [10] are really of a different flavor in that they are primarily concerned with the effect of partial clairvoyance. Other methods have been suggested to address the limitations of competitive analysis. These methods include restricting the input distribution to satisfy some special properties (e.g. <ref> [10, 16] </ref>), and comparing the cost of a solution produced by an online algorithm on input I to the worst-case optimal cost of any input of the same size as I [5]. 3 Average Response Time The following well known lemma explains why we first consider the queue size.
Reference: [11] <author> G. Koren, and D. Shasha, </author> <title> "D over :An optimal on line scheduling algorithm for overloaded real-time systems", </title> <booktitle> IEEE Real-time Systems Symposium, </booktitle> <pages> 290-299, </pages> <year> 1992. </year>
Reference-contexts: 1 Introduction We consider several well known nonclairvoyant scheduling problems, including the problem of minimizing the average response time [13, 15], and best-effort firm real-time scheduling <ref> [1, 2, 3, 4, 8, 11, 12, 18] </ref>. (We postpone formally defining these problems until the next section.) In nonclairvoyant scheduling some relevant information, e.g. when jobs will arrive in the future, is not available to the scheduling algorithm A. <p> Since this is a maximization problem, the competitive ratio definitions in the introduction have to be modified by inverting the ratios. So for example, the competitive ratio for this problem is then min max Opt (I) The deterministic competitive ratio for this problem is fi () <ref> [3, 4, 11, 18] </ref>, and the randomized competitive ratio is fi (min (log ; log )) [8, 12], where the importance ratio is the ratio of the maximum value density of a job to the minimum value density of a job, and is the ratio of the length of the longest
Reference: [12] <author> G. Koren, and D. Shasha, "MOCA: </author> <title> a multipro cessor on-line competitive algorithm for real-time system scheduling," </title> <journal> Theoretical Computer Science, </journal> <volume> 128, </volume> <pages> 75-97, </pages> <year> 1994. </year>
Reference-contexts: 1 Introduction We consider several well known nonclairvoyant scheduling problems, including the problem of minimizing the average response time [13, 15], and best-effort firm real-time scheduling <ref> [1, 2, 3, 4, 8, 11, 12, 18] </ref>. (We postpone formally defining these problems until the next section.) In nonclairvoyant scheduling some relevant information, e.g. when jobs will arrive in the future, is not available to the scheduling algorithm A. <p> So for example, the competitive ratio for this problem is then min max Opt (I) The deterministic competitive ratio for this problem is fi () [3, 4, 11, 18], and the randomized competitive ratio is fi (min (log ; log )) <ref> [8, 12] </ref>, where the importance ratio is the ratio of the maximum value density of a job to the minimum value density of a job, and is the ratio of the length of the longest job to the length of the shortest job.
Reference: [13] <author> T. Matsumoto, </author> <title> "Competitive analysis of the round robin algorithm', </title> <booktitle> International Symposium on Algorithms and Computation, </booktitle> <volume> 71 - 77, </volume> <year> 1992. </year>
Reference-contexts: 1 Introduction We consider several well known nonclairvoyant scheduling problems, including the problem of minimizing the average response time <ref> [13, 15] </ref>, and best-effort firm real-time scheduling [1, 2, 3, 4, 8, 11, 12, 18]. (We postpone formally defining these problems until the next section.) In nonclairvoyant scheduling some relevant information, e.g. when jobs will arrive in the future, is not available to the scheduling algorithm A. <p> Surprisingly, this is the best known upper bound on the competitive ratio, even allowing randomization. The competitive ratio for the commonly used Round Robin algorithm is (n= log n) <ref> [13, 15] </ref>. In section 3, we first consider the queue size as a function of time.
Reference: [14] <author> M. Milenkovic, </author> <title> Operating Systems: Concepts and Designs, </title> <publisher> McGraw-Hill, </publisher> <year> 1992. </year>
Reference-contexts: We assume that such context switches require no time. The problem of minimizing the average response time of the jobs is a well known and widely studied problem in operating system scheduling (see for example <ref> [7, 14] </ref>). We assume that the nonclairvoyant scheduler does not learn x i at time r i , and more generally, can not deduce x i until it has run J i to completion. <p> Theorem 3.1 The *-weak competitive ratio of Balance with respect to average response time is at most 1 + 1 We now show that the commonly used algorithm Round Robin <ref> [7, 14] </ref> does not have a constant *-weak competitive ratio for small *. Round Robin splits the processing time evenly among all unfinished jobs.
Reference: [15] <author> R. Motwani, S. Phillips, E. Torng, </author> <title> "Non clairvoyant scheduling", </title> <booktitle> Proceedings of the ACM/SIAM Symposium on Discrete Algorithms, </booktitle> <volume> 422 - 431, </volume> <year> 1993. </year>
Reference-contexts: 1 Introduction We consider several well known nonclairvoyant scheduling problems, including the problem of minimizing the average response time <ref> [13, 15] </ref>, and best-effort firm real-time scheduling [1, 2, 3, 4, 8, 11, 12, 18]. (We postpone formally defining these problems until the next section.) In nonclairvoyant scheduling some relevant information, e.g. when jobs will arrive in the future, is not available to the scheduling algorithm A. <p> For the problem of minimizing the average response time, 1 n i=1 w i , the deterministic competitive ratio is (n 1=3 ), and the randomized competitive ratio is (log n) <ref> [15] </ref>. It can easily be shown that any algorithm that doesn't unnecessarily idle the processors has a competitive ratio of O (n). Surprisingly, this is the best known upper bound on the competitive ratio, even allowing randomization. <p> Surprisingly, this is the best known upper bound on the competitive ratio, even allowing randomization. The competitive ratio for the commonly used Round Robin algorithm is (n= log n) <ref> [13, 15] </ref>. In section 3, we first consider the queue size as a function of time.
Reference: [16] <author> P. Raghavan, </author> <title> "A statistical adversary for on-line algorithms", Online Algorithms, </title> <booktitle> DIMACS Series in Discrete Mathematics and Computer Science, </booktitle> <volume> 7 </volume> <pages> 79-83, </pages> <year> 1992. </year>
Reference-contexts: However, the results in [10] are really of a different flavor in that they are primarily concerned with the effect of partial clairvoyance. Other methods have been suggested to address the limitations of competitive analysis. These methods include restricting the input distribution to satisfy some special properties (e.g. <ref> [10, 16] </ref>), and comparing the cost of a solution produced by an online algorithm on input I to the worst-case optimal cost of any input of the same size as I [5]. 3 Average Response Time The following well known lemma explains why we first consider the queue size.
Reference: [17] <author> D. Sleator, and R. Tarjan, </author> <title> "Amortized efficiency of list update and paging rules", </title> <journal> Communications of the ACM, </journal> <volume> 28, 202 - 208, </volume> <year> 1985. </year>
Reference-contexts: We then show that the *-weak competitive ratio for Slacker approaches one as * increases. The weak adversary model, comparing an online algorithm against a less powerful but more knowledgeable adversary, has been considered before in query-response problems such as the k-server problem and its special cases (e.g. <ref> [17, 19] </ref>), and online weighted matching [9]. In each case the adversary is handicapped by having fewer servers. One can argue that the weak competitive ratio is essentially what is called the comparative ratio in [10].
Reference: [18] <author> G. Woeginger, </author> <title> "On-line scheduling of jobs with fixed start and end time", </title> <journal> Theoretical Computer Science, </journal> <volume> 130, </volume> <year> 1994. </year>
Reference-contexts: 1 Introduction We consider several well known nonclairvoyant scheduling problems, including the problem of minimizing the average response time [13, 15], and best-effort firm real-time scheduling <ref> [1, 2, 3, 4, 8, 11, 12, 18] </ref>. (We postpone formally defining these problems until the next section.) In nonclairvoyant scheduling some relevant information, e.g. when jobs will arrive in the future, is not available to the scheduling algorithm A. <p> Since this is a maximization problem, the competitive ratio definitions in the introduction have to be modified by inverting the ratios. So for example, the competitive ratio for this problem is then min max Opt (I) The deterministic competitive ratio for this problem is fi () <ref> [3, 4, 11, 18] </ref>, and the randomized competitive ratio is fi (min (log ; log )) [8, 12], where the importance ratio is the ratio of the maximum value density of a job to the minimum value density of a job, and is the ratio of the length of the longest
Reference: [19] <author> N. Young, </author> <title> "The k-server dual and loose compet itiveness for paging," </title> <journal> Algorithmica, </journal> <volume> 11, </volume> <pages> 525-541, </pages> <year> 1994. </year>
Reference-contexts: We then show that the *-weak competitive ratio for Slacker approaches one as * increases. The weak adversary model, comparing an online algorithm against a less powerful but more knowledgeable adversary, has been considered before in query-response problems such as the k-server problem and its special cases (e.g. <ref> [17, 19] </ref>), and online weighted matching [9]. In each case the adversary is handicapped by having fewer servers. One can argue that the weak competitive ratio is essentially what is called the comparative ratio in [10].
References-found: 19

