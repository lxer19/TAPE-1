URL: ftp://borneo.gmd.de/pub/as/janus/ref94_4.ps
Refering-URL: http://borneo.gmd.de/AS/janus/publi/publi.html
Root-URL: 
Title: JANUS: A Society of Agents  
Note: GMD report #840  
Abstract: Uwe Beyer Frank Smieja Report number: 1994/4 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. D. Beer. </author> <title> Intelligence as adaptive behavior. </title> <publisher> Academic Press, </publisher> <year> 1990. </year>
Reference-contexts: In the literature a number of robot research groups are to be found which are also based on some of the principles outlined in this report. Notable examples include Brooks [4] and his "sub-sumption architecture", Steels [23] and the artificial life systems <ref> [1, 11, 17] </ref>. Our project differs from these in a number of aspects, the main one being the application area. The robot is not a completely autonomous system: it cannot move around and is not designed to "survive" in a hostile world.
Reference: [2] <author> U. Beyer and F. J. Smieja. </author> <title> Learning from examples, agent teams and the concept of reflection. </title> <type> Technical Report 766, </type> <institution> Gesell-schaft fur Mathematik und Datenverarbei-tung, </institution> <address> St Augustin, Germany, </address> <month> July </month> <year> 1993. </year> <journal> Submitted to International Journal of Pattern Recognition and Artificial Intelligence. </journal>
Reference-contexts: This characteristic is familiar in the domain of pattern recognition, where the images are produced by the human hand or are otherwise of a noisy and uncertain nature. Pattern recognition systems can never guarantee 100% performance. They can only ever generate approximate models of the world they observe. In <ref> [2, 6] </ref> this issue is handled in more detail. It teaches us that one should not expect to achieve an analytically perfect solution to problems defined in and influenced by the real physical world. <p> Function approximation methods: Approximative models of the various phenomena are constructed. The associated free parameters of the model are consequently altered according to the new information about the phenomena gained from the fur ther experiences of the robot <ref> [2] </ref>. See also Principle 2. 3. Rules: A robotic system should not have absolute freedom to be smooth in all its decisions. Imagine a robot system that has a non-discrete understanding of the concepts wall / no wall. <p> The issue of model refinement through function approximation based on "learning from example" is a general and very important aspect of learning systems. It is covered in more depth in, for example, <ref> [2, 6, 9] </ref>. that has the ability to carry out a built-in function, the heuristic that produces an action a as a function of the stimulus x, and to observe the behavior of the world y. <p> For example, if a number of experimental setups is possible the experimenter would be able to interact with JANUS to find a configuration that JANUS likes best. The second area is concerned with internally directed reflection. This is employed in the construction of reagent teams <ref> [2, 19, 18] </ref>. These structures allow the choice of one of many possible models for solution offered by team members. For such environments confidence is required to allow plausible decisions.
Reference: [3] <author> E. Bizzi, N. Hogan, F. A. Mussa-Ivaldi, and S. Giszter. </author> <title> Does the nervous system use equilibrium-point control to guide single and multiple joint movements? Behavioural and Brain Sciences, </title> <booktitle> 15(4) </booktitle> <pages> 603-613, </pages> <year> 1992. </year>
Reference-contexts: This The JANUS Society 9 arms (left), (a) from the front, (b) from above and (c) from the top. mechanism continually competes with the other arm controlling forces. This biologi cally motivated model <ref> [3] </ref> enables the arm to turn to naturally looking and unique po sitions for each TCP point (see Figure 10). 9.2 Principles 7 and 5 In JANUS the Principle 7 permeates the entire architecture (see Figure 11). The whole system is composed of a set of reagents running in parallel.
Reference: [4] <author> R. A. Brooks. </author> <title> A robust layered control system for a mobile robot. </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> RA-2(1), </volume> <year> 1986. </year>
Reference-contexts: Such abilities demand such characteristics as parallelity, reflectivity and flexibility built to be inherent in the architecture. In the literature a number of robot research groups are to be found which are also based on some of the principles outlined in this report. Notable examples include Brooks <ref> [4] </ref> and his "sub-sumption architecture", Steels [23] and the artificial life systems [1, 11, 17]. Our project differs from these in a number of aspects, the main one being the application area.
Reference: [5] <author> R. Featherstone. </author> <title> Position and velocity transformations between robot end-effector coordinates and joint angles. </title> <journal> The International Journal of Robotics Research, </journal> <volume> 2(2) </volume> <pages> 35-45, </pages> <year> 1983. </year>
Reference-contexts: The criterion determining whether convergence has occurred is ff i * 8 i ; (1) where * is small. A typical arm movement is illustrated in Figure 16. Compared to an analytical IDK method <ref> [7, 5] </ref> the resulting TCP movement is poor, but for generation of driver programs it is acceptable. In the real system, this IDK method needs a lot of additional refinements to reach a satisfying quality. They do not, however, alter the core mechanism.
Reference: [6] <author> S. Geman, E. Bienenstock, and R. Doursat. </author> <title> Neural networks and the bias/variance dilemma. </title> <journal> Neural Computation, </journal> <volume> 4 </volume> <pages> 1-58, </pages> <year> 1992. </year>
Reference-contexts: This characteristic is familiar in the domain of pattern recognition, where the images are produced by the human hand or are otherwise of a noisy and uncertain nature. Pattern recognition systems can never guarantee 100% performance. They can only ever generate approximate models of the world they observe. In <ref> [2, 6] </ref> this issue is handled in more detail. It teaches us that one should not expect to achieve an analytically perfect solution to problems defined in and influenced by the real physical world. <p> The issue of model refinement through function approximation based on "learning from example" is a general and very important aspect of learning systems. It is covered in more depth in, for example, <ref> [2, 6, 9] </ref>. that has the ability to carry out a built-in function, the heuristic that produces an action a as a function of the stimulus x, and to observe the behavior of the world y.
Reference: [7] <author> A. A. Goldenberg, B. Benhabib, and R. G. Fenton. </author> <title> A complete generalized solution to the inverse kinematics of robots. </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> RA-1(1):14-20, </volume> <year> 1985. </year>
Reference-contexts: A typical example of this is the inverse kinematics problem (IK) for a many axis arm: an infinite number of arm configurations are possible to achieve a single TCP position. This is characterized by a non-invertible Jaco-bian matrix <ref> [7] </ref>. Other examples of this property exist and come as a direct result of the lack of constraints in the world: many possible solutions are allowed. <p> The criterion determining whether convergence has occurred is ff i * 8 i ; (1) where * is small. A typical arm movement is illustrated in Figure 16. Compared to an analytical IDK method <ref> [7, 5] </ref> the resulting TCP movement is poor, but for generation of driver programs it is acceptable. In the real system, this IDK method needs a lot of additional refinements to reach a satisfying quality. They do not, however, alter the core mechanism.
Reference: [8] <author> V. Jagannathan, R. Dodhiawala, and L. Baum, </author> <title> editors. Blackboard Architectures and Applications. </title> <publisher> Academic Press, Inc, </publisher> <year> 1989. </year>
Reference-contexts: The whole system is composed of a set of reagents running in parallel. They communicate via a blackboard <ref> [8, 21] </ref> or common message bus mechanism. All sub-problems are broken up into small parallel algorithms. The reagents exchange messages synchronously in discrete time intervals ffit (in the implementation, this is approximately 0.01 s, enabling an operation frequency of 100 Hz).
Reference: [9] <author> R. P. Lippmann. </author> <title> An introduction to computing with neural nets. </title> <journal> IEEE ASSP Magazine, </journal> <month> April </month> <year> 1987. </year>
Reference-contexts: The issue of model refinement through function approximation based on "learning from example" is a general and very important aspect of learning systems. It is covered in more depth in, for example, <ref> [2, 6, 9] </ref>. that has the ability to carry out a built-in function, the heuristic that produces an action a as a function of the stimulus x, and to observe the behavior of the world y.
Reference: [10] <author> Konrad Lorenz. </author> <title> Die Ruckseite des Spiegels - Versuch einer Naturgeschichte menschli-chen Erkennens. </title> <publisher> Deutscher Taschenbuch Verlag, </publisher> <address> Munchen, </address> <year> 1977. </year>
Reference-contexts: For system with changing constraints and task definitions, however, this problem is largely unsolved. Such flexibility is a characteristic of open program learning <ref> [12, 10, 20] </ref>. In JANUS, we make possible stepwise improvement of behavior through the generation of driver programs [20]. Such programs are similar in effect to the "motor programs" of animal motor behavior.
Reference: [11] <author> S. Mahadevan and J. Connell. </author> <title> Automatic programming of behavior-based robots using reinforcement learning. </title> <journal> Artificial Intelligence, </journal> <volume> 55 </volume> <pages> 311-365, </pages> <year> 1992. </year>
Reference-contexts: In the literature a number of robot research groups are to be found which are also based on some of the principles outlined in this report. Notable examples include Brooks [4] and his "sub-sumption architecture", Steels [23] and the artificial life systems <ref> [1, 11, 17] </ref>. Our project differs from these in a number of aspects, the main one being the application area. The robot is not a completely autonomous system: it cannot move around and is not designed to "survive" in a hostile world.
Reference: [12] <author> E. Mayr. </author> <title> Artbegriff und Evolution. </title> <address> Parey, Berlin, </address> <year> 1967. </year>
Reference-contexts: For system with changing constraints and task definitions, however, this problem is largely unsolved. Such flexibility is a characteristic of open program learning <ref> [12, 10, 20] </ref>. In JANUS, we make possible stepwise improvement of behavior through the generation of driver programs [20]. Such programs are similar in effect to the "motor programs" of animal motor behavior.
Reference: [13] <author> Rangers J. Meadows, Dennis L. </author> <title> The Limits to Growth. </title> <publisher> Potomac Associates Book, Earth Island limited, </publisher> <address> London, </address> <year> 1972. </year>
Reference-contexts: The team structure is illustrated in Figure 6. 8 Principle 7: Teams Principle 7 Solve complex problems by combining many simple solutions in an iterative manner, instead of attempting to construct a single global solution mechanism. In the 1970's the Club of Rome set about analyzing complex geopolitical systems <ref> [13] </ref>. Before long they discovered that the underlying differential equations are too complex to be solved analytically. A similar observation resulted in the emergence of chaos theory.
Reference: [14] <author> M. Minsky. </author> <title> The Society of Mind. </title> <publisher> Simon and Schuster, </publisher> <address> New York, </address> <year> 1985. </year>
Reference-contexts: We want to find out whether they really do cause the resulting system to become something more than can be expressed as merely the sum of its parts. We label the underlying idea "society of agents", since it is in a similar vogue as Minsky's "society of mind" <ref> [14] </ref>, but in a technical incarnation. We believe that the concept of a system operating in an open world cannot be separated from the problem of its internal heterogeneity. This implies both the problem space as well as the algorithms.
Reference: [15] <author> Nils J. Nilsson. </author> <booktitle> Principles of Artificial Intelligence. </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, Heidelberg, New York, </address> <year> 1982. </year>
Reference-contexts: In order to formulate abstract plans working on "pick" and "place" primitives, the task takes the form of a combinatorical problem. The blocks world scenario is a good example of this problem class. As history showed <ref> [15] </ref> predicate calculus based deviation systems are extremely good for such tasks. Another example is the wall / no wall interpreter of section 2.
Reference: [16] <editor> K.R. Popper. Auf der Suche nach einer bes-seren Welt. Piper, </editor> <address> Munchen, Zurich, </address> <year> 1987. </year>
Reference-contexts: The system must be able to cope with this. JANUS is designed to operate in an open world. In such a world it is fundamentally impossible to take account of all possible occurrences, and to predict every event that takes place in the world <ref> [16] </ref>. By definition, as soon as the world is 100% knowable, it becomes closed|there is no more room for surprises. For most robotic implementations that have risen above a "toy" status, and especially those that exist as real machines, the world is open.
Reference: [17] <author> U. Schnepf. </author> <title> Robot Ethology A Proposal for the Research into Intelligent Autonomous Systems. </title> <type> Technical Report ISSN 0723-0508, </type> <institution> Gesellschaft fur Mathema-tik und Datenverarbeitung, </institution> <address> St Augustin, Germany, </address> <month> July </month> <year> 1990. </year>
Reference-contexts: In the literature a number of robot research groups are to be found which are also based on some of the principles outlined in this report. Notable examples include Brooks [4] and his "sub-sumption architecture", Steels [23] and the artificial life systems <ref> [1, 11, 17] </ref>. Our project differs from these in a number of aspects, the main one being the application area. The robot is not a completely autonomous system: it cannot move around and is not designed to "survive" in a hostile world.
Reference: [18] <author> O. G. Selfridge. Pandemonium: </author> <title> a paradigm for learning. </title> <booktitle> In The Mechanisation of Thought Processes: Proceedings of a Symposium Held at the National Physical Laboratory, </booktitle> <month> November </month> <year> 1958, </year> <pages> pages 511-527, </pages> <address> Lon-don: HMSO, </address> <year> 1958. </year>
Reference-contexts: For example, if a number of experimental setups is possible the experimenter would be able to interact with JANUS to find a configuration that JANUS likes best. The second area is concerned with internally directed reflection. This is employed in the construction of reagent teams <ref> [2, 19, 18] </ref>. These structures allow the choice of one of many possible models for solution offered by team members. For such environments confidence is required to allow plausible decisions.
Reference: [19] <author> F. J. Smieja. </author> <title> The Pandemonium system of reflective agents. </title> <type> Technical Report 794, </type> <institution> Gesellschaft fur Mathematik und Datenver-arbeitung, </institution> <address> St Augustin, Germany, </address> <month> October </month> <year> 1993. </year> <note> To be published in IEEE Transactions on Neural Networks. </note>
Reference-contexts: For example, if a number of experimental setups is possible the experimenter would be able to interact with JANUS to find a configuration that JANUS likes best. The second area is concerned with internally directed reflection. This is employed in the construction of reagent teams <ref> [2, 19, 18] </ref>. These structures allow the choice of one of many possible models for solution offered by team members. For such environments confidence is required to allow plausible decisions.
Reference: [20] <author> F. J. Smieja and U. Beyer. </author> <title> Adaptive control of a robot arm by means of driver programs. </title> <type> Technical report, </type> <institution> Gesellschaft fur 16 Beyer and Smieja Mathematik und Datenverarbeitung, </institution> <address> St Au-gustin, Germany, </address> <month> August </month> <year> 1994. </year>
Reference-contexts: In JANUS the second kind of adaptation is found at the global TCP path planning level. It works by noticing similar obstacle configurations in different global tasks and, from its stored experiences, deciding on a reuse of a trajectory previously proved to be successful <ref> [20] </ref>. 5 Principle 4: Learn from Nature Principle 4 When a non-trivial problem allows itself to be expressed in such a form that is similar to those seen in natural systems, borrow ideas from the way it has been solved here. <p> For system with changing constraints and task definitions, however, this problem is largely unsolved. Such flexibility is a characteristic of open program learning <ref> [12, 10, 20] </ref>. In JANUS, we make possible stepwise improvement of behavior through the generation of driver programs [20]. Such programs are similar in effect to the "motor programs" of animal motor behavior. <p> For system with changing constraints and task definitions, however, this problem is largely unsolved. Such flexibility is a characteristic of open program learning [12, 10, 20]. In JANUS, we make possible stepwise improvement of behavior through the generation of driver programs <ref> [20] </ref>. Such programs are similar in effect to the "motor programs" of animal motor behavior. In biological systems a limited number of motor programs can be perfected to very high degrees of accuracy, e.g. arm swings in racket sports [22]. differential kinematics (IDK) procedure.
Reference: [21] <author> F. J. Smieja and U. Beyer. </author> <title> JANUS: A robot manipulator system based on a blackboard architecture. </title> <type> Technical report, </type> <institution> Gesellschaft fur Mathematik und Datenverarbeitung, </institution> <address> St Augustin, Germany, </address> <month> April </month> <year> 1994. </year> <note> Poster presentation in AICS '94. </note>
Reference-contexts: The whole system is composed of a set of reagents running in parallel. They communicate via a blackboard <ref> [8, 21] </ref> or common message bus mechanism. All sub-problems are broken up into small parallel algorithms. The reagents exchange messages synchronously in discrete time intervals ffit (in the implementation, this is approximately 0.01 s, enabling an operation frequency of 100 Hz).
Reference: [22] <editor> H. St cke. Biomechanik der Sportarten, </editor> <volume> volume 3, </volume> <booktitle> chapter Bewegungsarten und Bewe-gungskriterien in Sportspielen, </booktitle> <pages> pages 8-29. </pages> <publisher> Ferdinand Enke Verlag, </publisher> <year> 1992. </year>
Reference-contexts: Such programs are similar in effect to the "motor programs" of animal motor behavior. In biological systems a limited number of motor programs can be perfected to very high degrees of accuracy, e.g. arm swings in racket sports <ref> [22] </ref>. differential kinematics (IDK) procedure. Each fixed point (not shown) in the given trajectory is reached with the TCP and the information about the angle changes required is stored. The path of the TCP is shown during and after learning.
Reference: [23] <author> L. </author> <title> Steels. </title> <journal> The artificial life roots of artificial intelligence. Artificial Life Journal, </journal> 1(1/2):89-125, 1994. 
Reference-contexts: In the literature a number of robot research groups are to be found which are also based on some of the principles outlined in this report. Notable examples include Brooks [4] and his "sub-sumption architecture", Steels <ref> [23] </ref> and the artificial life systems [1, 11, 17]. Our project differs from these in a number of aspects, the main one being the application area. The robot is not a completely autonomous system: it cannot move around and is not designed to "survive" in a hostile world.
References-found: 23

