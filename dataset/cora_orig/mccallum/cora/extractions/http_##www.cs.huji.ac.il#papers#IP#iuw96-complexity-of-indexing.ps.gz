URL: http://www.cs.huji.ac.il/papers/IP/iuw96-complexity-of-indexing.ps.gz
Refering-URL: http://www.cs.huji.ac.il/papers/IP/index.html
Root-URL: 
Email: fwerman,daphnag@cs.huji.ac.il  
Title: Complexity of Indexing: Efficient and Learnable Large Database Indexing  
Author: Michael Werman and Daphna Weinshall 
Address: 91904, Jerusalem, Israel  
Affiliation: Institute of Computer Science, The Hebrew University of Jerusalem  
Abstract: Object recognition starts from a set of image measurements (including locations of points, lines, surfaces, color, and shading), which provides access into a database where representations of objects are stored. We describe a complexity theory of indexing, a meta-analysis which identifies the best set of measurements (up to algebraic transformations) such that: (1) the representation of objects are linear subspaces and thus easy to learn; (2) direct indexing is efficient since the linear subspaces are of minimal rank. The index complexity is determined via a simple process, equivalent to computing the rank of a matrix. We readily rederive the index complexity of the few previously analyzed cases. We then compute the best index for new and more interesting cases: 6 points in one perspective image, 6 directions in one para-perspective image, and 2 perspective images of 7 points. With color we get the following result: 4 color sensors are sufficient for color constancy at a point, and the sensor-output index is irreducible; the most efficient representation of a color is a plane in 3D space. For future applications with any vision problem where the relations between shape and image measurements can be written down, we give an automatic process to construct the most efficient database that can be directly obtained by learning from examples. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J.B. Burns, R. Weiss, and E. Riseman. </author> <title> View variation of point-set and line segment features. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 15(1) </volume> <pages> 51-68, </pages> <year> 1993. </year>
Reference-contexts: This is what is usually called an invariant in the literature. Such invariant relations do not exist for 2D images of general 3D objects <ref> [1, 8] </ref>; for special classes of objects, such as planar or symmetrical ob jects, invariant relations may be found [8, 11]. Model-based invariant: a relation which includes mixed terms, representing image measurements or model parameters. Model-based invariant relations exist for many interesting vision problems [14]. <p> The analysis also gives that there is no smaller subspace of the colors, which is insensitive to the illuminant color. 4 Adding class constraints Once it has been shown that model-free invariants do not exist for unconstrained objects <ref> [1, 8] </ref>, attention had turned to characterizing the constraints (or classes of objects) which would lead to model-free invariants [8, 11], or in our language, lead to index complexity 0.
Reference: [2] <author> D. T. Clemens and D. W. Jacobs. </author> <title> Space and time bounds on indexing 3-D models from 2-D images. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 13(10) </volume> <pages> 1007-1017, </pages> <year> 1991. </year>
Reference-contexts: Clearly, for object recognition using either direct indexing or search, it is better to use an indexing space where the picture manifolds are as simple as possible (for example, hyperplanes rather than quadrics), and have as low a rank as possible. Jacobs <ref> [2, 5] </ref> defined the concept of indexing space, and studied the complexity of picture manifolds.
Reference: [3] <author> S. Edelman and D. Weinshall. </author> <title> A self-organizing multiple-view representation of 3D objects. </title> <journal> Biological Cybernetics, </journal> <volume> 64 </volume> <pages> 209-219, </pages> <year> 1991. </year>
Reference-contexts: Many recognition systems that are based on direct indexing use databases where objects are represented by their manifold of images, i.e., all their images are stored. Typically there is a training phase where images are collected, and the manifold of images is approximated using a neural network <ref> [3] </ref>, an RBF interpolation network [10], or a parametric representation [9]. In search-based recognition systems (e.g., [4]) the database contains not the manifolds themselves but their parametric representations, yet automatically obtaining those representations is as important as ever.
Reference: [4] <author> D. P. Huttenlocher and S. Ullman. </author> <title> Recognizing solid objects by alignment with an image. </title> <journal> International Journal of Computer Vision, </journal> <volume> 5 </volume> <pages> 195-212, </pages> <year> 1990. </year>
Reference-contexts: Given a set of measurements computed from an image, we search the database to find the picture manifold which covers the measurements point in R n . An example of a recognition approach which uses this method is alignment <ref> [4] </ref>. The first approach is the most time-efficient since no search is required. However, clearly the form of the picture manifold is critical here: if it is too complex, it may not be feasible to represent this picture manifold in memory. <p> Typically there is a training phase where images are collected, and the manifold of images is approximated using a neural network [3], an RBF interpolation network [10], or a parametric representation [9]. In search-based recognition systems (e.g., <ref> [4] </ref>) the database contains not the manifolds themselves but their parametric representations, yet automatically obtaining those representations is as important as ever.
Reference: [5] <author> D. W. Jacobs. </author> <title> Matching 3-D models to 2-D images. </title> <journal> International Journal of Computer Vision, </journal> <note> 1995. in press. </note>
Reference-contexts: Clearly, for object recognition using either direct indexing or search, it is better to use an indexing space where the picture manifolds are as simple as possible (for example, hyperplanes rather than quadrics), and have as low a rank as possible. Jacobs <ref> [2, 5] </ref> defined the concept of indexing space, and studied the complexity of picture manifolds. <p> Jacobs <ref> [5] </ref> showed recently that for 6 points in a single perspective image, the lowest rank picture manifold is a non-linear manifold of rank 3 in R 4 . We obtained the same rank 3, while using a different 4-dimensional measurement vector (a different indexing space).
Reference: [6] <author> Y. Lamdan and H. Wolfson. </author> <title> Geometric hashing: a general and efficient recognition scheme. </title> <booktitle> In Proceedings of the 2nd International Conference on Computer Vision, </booktitle> <pages> pages 238-251, </pages> <address> Tarpon Springs, FL, 1988. </address> <publisher> IEEE, </publisher> <address> Wash-ington, DC. </address>
Reference-contexts: An fl This research was sponsored by ARPA through the U.S. Office of Naval Research under grant N00014-93-1-1202, R&T Project Code 4424341|01. example of a recognition approach which uses this method is geometric hashing <ref> [6] </ref>. Search: If we have parametric representations of the picture manifolds, we can efficiently store those representations. Given a set of measurements computed from an image, we search the database to find the picture manifold which covers the measurements point in R n . <p> Model-based invariant relations exist for many interesting vision problems [14]. If a model-free invariant is used to construct the database (the indexing space), then the picture manifold of an object is a point. For example, geometric hashing <ref> [6] </ref> uses the class of planar objects composed of features, where model-free invariants exist and therefore the picture manifolds are points. If on the other hand a model-based invariant is used, the picture manifold may be a complex hypersurface in the indexing space.
Reference: [7] <author> L. T. Maloney and B. Wandell. </author> <title> A computational model of color constancy. </title> <journal> Journal of the Optical Society of America, </journal> <volume> 1 </volume> <pages> 29-33, </pages> <year> 1986. </year>
Reference-contexts: Continuing to search through this ideal, we found the minimal complexity linear manifold with a rank of 2. C = 2: The color at a point Using the linear combination color model <ref> [7] </ref>, the color of an object or a light source can be described as a linear combination of a set of basis color functions of wavelength . It has been argued that 3 basis functions can approximate well the color of natural objects and light sources.
Reference: [8] <author> Y. Moses and S. Ullman. </author> <title> Limitations of non model-based recognition schemes. </title> <editor> In G. Sandini, editor, </editor> <booktitle> Proc. 2nd European Conf. on Computer Vision, Lecture Notes in Computer Science, </booktitle> <volume> volume 588, </volume> <pages> pages 820-828. </pages> <publisher> Springer Verlag, </publisher> <year> 1992. </year>
Reference-contexts: This is what is usually called an invariant in the literature. Such invariant relations do not exist for 2D images of general 3D objects <ref> [1, 8] </ref>; for special classes of objects, such as planar or symmetrical ob jects, invariant relations may be found [8, 11]. Model-based invariant: a relation which includes mixed terms, representing image measurements or model parameters. Model-based invariant relations exist for many interesting vision problems [14]. <p> This is what is usually called an invariant in the literature. Such invariant relations do not exist for 2D images of general 3D objects [1, 8]; for special classes of objects, such as planar or symmetrical ob jects, invariant relations may be found <ref> [8, 11] </ref>. Model-based invariant: a relation which includes mixed terms, representing image measurements or model parameters. Model-based invariant relations exist for many interesting vision problems [14]. If a model-free invariant is used to construct the database (the indexing space), then the picture manifold of an object is a point. <p> With sufficient class constraints we can reduce the rank of the picture manifold to 0, achieving the most efficient indexing possible via model-free invariants. This was the goal of many studies <ref> [8, 11] </ref>; these studies gave examples of class constraints but did not offer a general way to generate them, like we do here. In summary, our theory unifies the 2 main approaches to object recognition under the same theoretical roof. <p> The analysis also gives that there is no smaller subspace of the colors, which is insensitive to the illuminant color. 4 Adding class constraints Once it has been shown that model-free invariants do not exist for unconstrained objects <ref> [1, 8] </ref>, attention had turned to characterizing the constraints (or classes of objects) which would lead to model-free invariants [8, 11], or in our language, lead to index complexity 0. <p> no smaller subspace of the colors, which is insensitive to the illuminant color. 4 Adding class constraints Once it has been shown that model-free invariants do not exist for unconstrained objects [1, 8], attention had turned to characterizing the constraints (or classes of objects) which would lead to model-free invariants <ref> [8, 11] </ref>, or in our language, lead to index complexity 0. <p> Moreover, since we optimize for the 2 approaches, a hybrid object recognition algorithm can be used with the final database: Finally, we provide an automatic tool for finding class constraints which make the indexing problem easier. Finding class constraints that lead to model-free invariants (i.e., index complexity 0, cf. <ref> [8, 11] </ref>) is a special case of this general problem. Our approach is the first general method to automatically obtain such class constraints.
Reference: [9] <author> H. Murase and S. K. Nayar. </author> <title> Visual learning and recognition of 3-D objects from appearance. </title> <journal> International Journal of Computer Vision, </journal> <note> 1995. in press. </note>
Reference-contexts: If on the other hand a model-based invariant is used, the picture manifold may be a complex hypersurface in the indexing space. For example, Murase & Nayar <ref> [9] </ref> use a very general class of objects and illumination conditions, and therefore they have to represent picture manifolds which take on rather complex shapes. <p> Typically there is a training phase where images are collected, and the manifold of images is approximated using a neural network [3], an RBF interpolation network [10], or a parametric representation <ref> [9] </ref>. In search-based recognition systems (e.g., [4]) the database contains not the manifolds themselves but their parametric representations, yet automatically obtaining those representations is as important as ever. <p> Moreover, parametric representations of linear sub-spaces can be stored and used by search-based recognition approaches (like alignment); on the other hand, parametric representations of general manifolds may not even be computable (cf. <ref> [9] </ref>). * Using noisy measurements, it is straightforward to find the distance of a measurement point from a hy-perplane, which is the problem that an object recognition algorithm needs to solve.
Reference: [10] <author> T. Poggio and S. Edelman. </author> <title> A network that learns to recognize three-dimensional objects. </title> <journal> Nature, </journal> <volume> 343 </volume> <pages> 263-266, </pages> <year> 1990. </year>
Reference-contexts: Typically there is a training phase where images are collected, and the manifold of images is approximated using a neural network [3], an RBF interpolation network <ref> [10] </ref>, or a parametric representation [9]. In search-based recognition systems (e.g., [4]) the database contains not the manifolds themselves but their parametric representations, yet automatically obtaining those representations is as important as ever.
Reference: [11] <author> C.A. Rothwell, D.A. Forsyth, A. Zisserman, and J.L. Mundy. </author> <title> Extracting projective structure from single perspective views of 3d point sets. </title> <booktitle> In Proceedings of the 4th International Conference on Computer Vision, </booktitle> <pages> pages 573-582, </pages> <address> Berlin, Germany, 1993. </address> <publisher> IEEE, </publisher> <address> Washington, DC. </address>
Reference-contexts: This is what is usually called an invariant in the literature. Such invariant relations do not exist for 2D images of general 3D objects [1, 8]; for special classes of objects, such as planar or symmetrical ob jects, invariant relations may be found <ref> [8, 11] </ref>. Model-based invariant: a relation which includes mixed terms, representing image measurements or model parameters. Model-based invariant relations exist for many interesting vision problems [14]. If a model-free invariant is used to construct the database (the indexing space), then the picture manifold of an object is a point. <p> With sufficient class constraints we can reduce the rank of the picture manifold to 0, achieving the most efficient indexing possible via model-free invariants. This was the goal of many studies <ref> [8, 11] </ref>; these studies gave examples of class constraints but did not offer a general way to generate them, like we do here. In summary, our theory unifies the 2 main approaches to object recognition under the same theoretical roof. <p> no smaller subspace of the colors, which is insensitive to the illuminant color. 4 Adding class constraints Once it has been shown that model-free invariants do not exist for unconstrained objects [1, 8], attention had turned to characterizing the constraints (or classes of objects) which would lead to model-free invariants <ref> [8, 11] </ref>, or in our language, lead to index complexity 0. <p> Moreover, since we optimize for the 2 approaches, a hybrid object recognition algorithm can be used with the final database: Finally, we provide an automatic tool for finding class constraints which make the indexing problem easier. Finding class constraints that lead to model-free invariants (i.e., index complexity 0, cf. <ref> [8, 11] </ref>) is a special case of this general problem. Our approach is the first general method to automatically obtain such class constraints.
Reference: [12] <author> C. Tomasi. </author> <title> Picture and trails: a new framework for the computation of shape and motion from perspective image sequences. </title> <booktitle> In Proceedings IEEE Conf. on Computer Vision and Pattern Recognition, </booktitle> <pages> pages 913-918, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: Wallack & Canny [13] assumed that the complexity of the picture manifold is given, and developed a database structure to implement a multi-dimensional index efficiently. Tomasi <ref> [12] </ref> used the phrase picture locus for what we call here picture manifold, while analyzing a special 2D case of perceived directions of features under perspective projection.
Reference: [13] <author> A. S. Wallack and J. F. Canny. </author> <title> Efficient indexing techniques for model based sensing. </title> <booktitle> In Proceedings IEEE Conf. on Computer Vision and Pattern Recognition, </booktitle> <pages> pages 259-266, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: Wallack & Canny <ref> [13] </ref> assumed that the complexity of the picture manifold is given, and developed a database structure to implement a multi-dimensional index efficiently. Tomasi [12] used the phrase picture locus for what we call here picture manifold, while analyzing a special 2D case of perceived directions of features under perspective projection.
Reference: [14] <author> D. Weinshall. </author> <title> Model-based invariants for 3D vision. </title> <journal> International Journal of Computer Vision, </journal> <volume> 10(1) </volume> <pages> 27-42, </pages> <year> 1993. </year>
Reference-contexts: Model-based invariant: a relation which includes mixed terms, representing image measurements or model parameters. Model-based invariant relations exist for many interesting vision problems <ref> [14] </ref>. If a model-free invariant is used to construct the database (the indexing space), then the picture manifold of an object is a point. For example, geometric hashing [6] uses the class of planar objects composed of features, where model-free invariants exist and therefore the picture manifolds are points. <p> More generally, the index given in (2) is an element of R r . If r = 1 it is a model-free invariant; if r &gt; 1 it is a model-based invariant as defined in <ref> [14] </ref>. The database now is an r-dimensional table, and a pointer to object S is stored in all the cells of the table that satisfy (1). In order to achieve efficient recognition, we would like to find a representation of the form (1) with the smallest r.
Reference: [15] <author> M. Werman and A. Shashua. </author> <title> Elimination: An approach to the study of 3D-from-2D. </title> <booktitle> In Proceedings of the International Conference on Computer Vision, </booktitle> <month> June </month> <year> 1995. </year>
Reference-contexts: The polynomials in I do not include the imaging variables T. We will often not distinguish between the ideal and its set of generators. The ideal is the smallest set including the generators closed under addition and multiplication by polynomials in S and u. <ref> [15] </ref> describes a general elimination method to obtain the set of model-image relations from the vision problem using Grobner bases (which is equivalent to Gauss elimination in linear systems). The space of model-image relations I is an ideal (equivalent to a linear subspace in linear systems).
References-found: 15

