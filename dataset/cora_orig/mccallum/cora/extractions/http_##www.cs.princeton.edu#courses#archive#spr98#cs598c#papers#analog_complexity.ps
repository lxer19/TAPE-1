URL: http://www.cs.princeton.edu/courses/archive/spr98/cs598c/papers/analog_complexity.ps
Refering-URL: http://www.cs.princeton.edu/courses/archive/spr98/cs598c/links.html
Root-URL: http://www.cs.princeton.edu
Title: THE COMPLEXITY OF ANALOG COMPUTATION  
Author: Anastasios VERGIS Kenneth STEIGLITZ Bradley DICKINSON 
Address: Minneapolis, MN 55455, U.S.A.  Princeton, NJ 08544, U.S.A.  Princeton, NJ 08544, U.S.A.  
Affiliation: Department of Computer Science, University of Minnesota,  Department of Computer Science, Princeton University,  Department of Electrical Engineering, Princeton University,  
Abstract: We ask if analog computers can solve NP-complete problems efficiently. Regarding this as unlikely, we formulate a strong version of Church's Thesis: that any analog computer can be simulated efficiently (in polynomial time) by a digital computer. From this assumption and the assumption that P NP we can draw conclusions about the operation of physical devices used for computation. An NP-complete problem, 3-SAT, is reduced to the problem of checking whether a feasible point is a local optimum of an optimization problem. A mechanical device is proposed for the solution of this problem. It encodes variables as shaft angles and uses gears and smooth cams. If we grant Strong Church's Thesis, that P NP, and a certain ``Downhill Principle'' governing the physical behavior of the machine, we conclude that it cannot operate successfully while using only polynomial resources. We next prove Strong Church's Thesis for a class of analog computers described by well-behaved ordinary differential equations, which we can take as representing part of classical mechanics. We conclude with a comment on the recently discovered connection between spin glasses and combinatorial optimization. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> F. Barahona, </author> <title> ``On the computational complexity of Ising spin glass models,'' </title> <journal> J. Phys. </journal> <note> A 15 (1982) 3241-3253. </note>
Reference: [2] <author> C.H. Bennett, </author> <title> ``The thermodynamics of computation a review,'' </title> <journal> Internat. J. Theoret. Phys. </journal> <month> 21 </month> <year> (1982) </year> <month> 905-940. </month>
Reference: [3] <author> C.H. Bennett, </author> <title> ``On the logical `depth' of sequences and their reducibilities to random sequences,'' </title> <note> preprint; to appear in Inform. and Control. </note>
Reference: [4] <author> V. Bush, </author> <title> ``The differential analyzer,'' </title> <institution> J. Franklin Inst. </institution> <month> 212 </month> <year> (1931) </year> <month> 447-488. </month>
Reference-contexts: We will introduce a class of differential equations, together with an interpretation of their computational processes, which corresponds to a model for analog computers of the Bush Differential Analyzer type <ref> [4] </ref>. The first steps toward a theory of analog computation were taken by C. Shannon, who showed that an interconnection of primitive devices adders, scalar multipliers, and integrators constrained by some natural conditions to ensure well-posedness, generates functions solving ordinary differential equations of a particular form [26].
Reference: [5] <author> L.O. Chua and G-N. Lin, </author> <title> ``Nonlinear programming without computation,'' </title> <journal> IEEE Trans. </journal> <note> Circuits and Systems CAS-31 (1984) 182-188. </note>
Reference-contexts: Obviously we cannot assert that this procedure requires polynomial time. (It is interesting to note that an electrical network for solving quadratic programming problems is proposed in <ref> [5] </ref>, but it is based on sufficiency of the Kuhn-Tucker conditions, and depends for its operation on positive definiteness of the quadratic form.
Reference: [6] <author> A. Church, </author> <title> ``An unsolvable problem of elementary number theory,'' </title> <journal> Amer. J. Math. </journal> <note> 58 (1936) 345-363. (Reprinted in [7].) </note>
Reference-contexts: However, mathematical models of various kinds provide a formalism that is apparently indispensable for the understanding of physical phenomena. An important connection between the mathematical world of computation and the physical world of computing hardware was discussed by Church. In his 1936 paper <ref> [6] </ref> he equated the intuitive notion of effective calculability with the two equivalent mathematical characterizations of l-definability and recursivity.
Reference: [7] <author> M. Davis, </author> <title> The Undecidable, </title> <publisher> (Raven Press, Hewlett, </publisher> <address> NY, </address> <year> 1965). </year>
Reference: [8] <author> R.P. </author> <title> Feynman, ``Simulating physics with computers,'' </title> <journal> Internat. J. Theoret. Phys. </journal> <month> 21 </month> <year> (1982) </year> <month> 467-488. </month>
Reference-contexts: This is discussed in the next section. Following that, we argue that certain numerical problems are inherently difficult (i.e. not polynomial) for analog computers, even though they are easy for digital computers. Something like our Strong Church's Thesis was discussed recently by Feynman <ref> [8] </ref> in connection with the problem of building a (digital) computer that simulates physics.
Reference: [9] <author> M.R. Garey and D.S. Johnson, </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness, </title> <editor> (W. H. </editor> <publisher> Freeman and Company, </publisher> <address> San Francisco, CA, </address> <year> 1979). </year>
Reference-contexts: See <ref> [9] </ref> for discussion of this criterion.) We may ask if such problems can be solved efficiently by other means, in particular, by machines of a nature different from digital computers. <p> This is the class of so-called strongly NP-complete problems, and it contains such problems as HAMILTON CIRCUIT, 3-SAT, and others <ref> [9] </ref>. - 6 - 4. A Polynomial Analog Machine Our example of comparing two integers shows that some problems that are ``easy'' for digital computers, e.g. solvable in linear time, are inherently difficult for analog computers because of the nature of the numerical representation of analog quantities. <p> Checking for Local Optimality is NP-hard We intend to use the machines described in the previous section to attempt to solve an ``interesting'' problem, that is a problem that is at least NP-complete. The following decision problem is NP hard <ref> [9] </ref>: QUADRATIC PROGRAMMING: Given a linear objective function, constraints involving quadratic functions, and a constant K, does there exist a vector that makes the value of the objective function less than or equal to K, while satisfying the constraints? We could try to solve QUADRATIC PROGRAMMING with the machines described in <p> Proof. To prove Theorem 2, we reduce 3-SAT to LOC. For reference, 3-SAT is the following problem, which is one of the earliest known NP-complete problems, and which is strongly NP-complete as well <ref> [9] </ref>. 3-SAT: Given a set of Boolean variables X 1 , . . . , X n , and given B, a Boolean expression in con junctive normal form with exactly 3 literals per clause: B = (Z 11 + Z 12 + Z 13 )(Z 21 + Z 22 +
Reference: [10] <author> S. Geman and D. Geman, </author> <title> ``Stochastic relaxation, Gibbs distributions, and the Bayesian restoration of images,'' </title> <journal> IEEE Trans. Pattern Analysis Machine Intell. </journal> <note> PAMI-6 (1984) 721-741. </note>
Reference-contexts: Still, a proof of convergence for this kind of stochastic relaxation algorithm has only been obtained under the assumption of an annealing schedule involving logarithmically decreasing temperature <ref> [10] </ref>; the resulting algorithm requires exponential time which is in agreement with our prediction based on assuming Strong Church's Thesis and P NP. 10. Discussion The question of how efficiently we can compute with general, non-digital, devices appears to be difficult indeed.
Reference: [11] <author> P. Henrici, </author> <title> Discrete Variable Methods in Ordinary Differential Equations, </title> <publisher> (John Wiley, </publisher> <address> New York, NY, </address> <year> 1962). </year>
Reference-contexts: Proof We give a constructive proof based on the Euler method of numerical integration for the system (8.3). (Our approach is based on standard techniques in numerical analysis; see <ref> [11] </ref>.) For 0mN , set t m = t 0 + mh where h = (t f - t 0 )/N .
Reference: [12] <author> J.J. Hopfield and D.W. Tank, </author> `` <title> `Neural' computation of decisions in optimization problems,'' </title> <journal> Biol. Cybernet. </journal> <month> 52 </month> <year> (1985) </year> <month> 1-12. </month>
Reference-contexts: We may allow n and the complexity of the rational function components of f to grow polynomially in the length of the input, and we may allow the corresponding Lipschitz constant, l, to grow logarithmically in the length of the input. Recently, Hopfield and Tank <ref> [12] </ref> have discussed solving the strongly NP-complete TRAVELING SALESMAN PROBLEM (TSP) with an analog electrical network whose description is given by a coupled set of differential equations. <p> Then, if the initial conditions of the analog variables lie in the region of attraction of this particular equilibrium point, the steady-state solution provides the desired solution to the problem instance. Empirical studies of 10-city and 30-city problem instances are given in <ref> [12] </ref>; they indicate that while this analog approach does not provide a method for obtaining exact (i.e. optimal) solutions to TSP instances, it does offer a systematic technique for consistently generating good suboptimal solutions. <p> We view these empirical results as evidence for the validity of SCT in this context, which differs in some details from that considered in Theorem 3 and its corollary. The analysis and interpretation in <ref> [12] </ref> reinforces this view, especially in regard to two difficulties with constructing and operating the network. First, the network and its associated potential function depend on some free parameters (amplifier gains, etc.) that must be chosen by empirical means in order to ``tune'' the analog encoding of TSP.
Reference: [13] <author> J.J. Hopfield and D.W. Tank, </author> <title> ``Collective computation with continuous variables,'' </title> <note> preprint; to appear in Disordered Systems and Biological Organization. </note>
Reference: [14] <author> A. Jackson, </author> <title> Analog Computation, </title> <publisher> (McGraw-Hill, </publisher> <address> New York, NY, </address> <year> 1960). </year>
Reference-contexts: Another method is proposed there for this problem, based on the fact that soap films form minimal-tension surfaces. Many other examples can be found in books such as <ref> [14] </ref> and [16], including electrical and mechanical machines for solving simultaneous linear equations and differential equations. Given the large body of work on the complexity of Turing-machine computation, and the recent interest in the physical foundations of computation, it seems natural to study the complexity of analog computation.
Reference: [15] <author> D.S. Johnson, </author> <title> ``The NP-completeness column: an ongoing guide,'' </title> <journal> J. </journal> <note> Algorithms 4 (1983) 87-100. </note>
Reference-contexts: The problem of finding a minimum-energy spin configuration (the ground state) in a regular lattice model can be expressed as the following problem, which is NP-complete <ref> [15] </ref>.
Reference: [16] <author> W. Karplus and W. Soroka, </author> <title> Analog Methods, 2nd. </title> <editor> Ed., </editor> <publisher> (McGraw-Hill, </publisher> <address> New York, NY, </address> <year> 1959). </year>
Reference-contexts: Another method is proposed there for this problem, based on the fact that soap films form minimal-tension surfaces. Many other examples can be found in books such as [14] and <ref> [16] </ref>, including electrical and mechanical machines for solving simultaneous linear equations and differential equations. Given the large body of work on the complexity of Turing-machine computation, and the recent interest in the physical foundations of computation, it seems natural to study the complexity of analog computation.
Reference: [17] <author> S. Kirkpatrick, C.D. Gelatt, Jr., </author> <title> and M.P. Vecchi, ``Optimization by simulated annealing,'' </title> <note> Science 220 (1983) 671-680. - 22 </note> - 
Reference-contexts: Thus it may be that almost all pieces of spin glass of a given size will cool to the ground state fast, and this prospect supports the use of ``simulated annealing'' as a heuristic for combinatorial optimization problems <ref> [17] </ref>. It is worth pointing out that an implementation of this heuristic requires a source of independent random variables, and so lies outside the realm of complexity theory as discussed here.
Reference: [18] <author> W. Miehle, </author> <title> ``Link-length minimization in networks,'' </title> <type> Oper. </type> <institution> Res. </institution> <month> 6 </month> <year> (1958) </year> <month> 232-243. </month>
Reference-contexts: Perhaps most widely known is the Differential Analyzer [4,26], which has been used to solve differential equations. To mention some other examples, in [25] an electronic analog computer is proposed to implement the gradient projection method for linear programming. In <ref> [18] </ref> the problem of finding a minimum-length interconnection network between given points in the plane is solved with movable and fixed pegs interconnected by strings; a locally optimal solution is obtained by pulling the strings.
Reference: [19] <author> C.H. Papadimitriou and K. Steiglitz, </author> <title> Combinatorial Optimization: Algorithms and Complexity, </title> <publisher> (Prentice-Hall, </publisher> <address> Engle-wood Cliffs, NJ, </address> <year> 1982). </year>
Reference-contexts: At first this might seem to be another candidate for an analog machine that solves an NP-complete problem, but in fact Quadratic programming with a positive-definite matrix can be solved in Digital P-time with a variant of the ellipsoid algorithm <ref> [19, Chapter 15, Problem 16] </ref>.) If, however, we were asked only to find a local optimum, we would need to try only once, rotating the z shaft towards decreasing values until it gets stuck. This point must be a local optimum by the Downhill Principle.
Reference: [20] <author> R.M. Phelan, </author> <title> Fundamentals of Mechanical Design, 3rd. </title> <editor> Ed., </editor> <publisher> (McGraw-Hill, </publisher> <address> New York, NY, </address> <year> 1970) </year> <month> 433-434. </month>
Reference-contexts: Two shaft positions can be subtracted with a differential gear (see Fig. 4). The differential forces the angles p, q, r to - 8 - satisfy the equation p - q = r. A full description of it can be found in <ref> [20] </ref>. (Differentials are used in automobile transmissions.) To preserve symmetry, we shall make the assumption that the differential adds the angles p and q; this can be accomplished easily by incorporating into it an inverter for the angle q.
Reference: [21] <author> D. Plaisted, </author> <title> ``Some polynomial and integer divisibility problems are NP-hard,'' </title> <booktitle> Proc. 17th Ann. Symp. on Foundations of Computer Science (1976) 264-267. </booktitle>
Reference-contexts: Here t I, a compact interval of the real line. The following example shows that the notion of analog computation considered by Shannon and Pour-El does not account for the limitations that are inherent in the general model of analog computer developed in previous sections. From work of Plaisted <ref> [21] </ref> it is known that solution of the NP-complete PARTITION problem is equivalent to the evaluation of a particular definite integral. The integral may be computed as the solution to a differential equation of the form (8.1).
Reference: [22] <author> M.B. Pour-El, </author> <title> ``Abstract computability and its relation to the general purpose analog computer (some connections between logic, differential equations, and analog computers),'' </title> <journal> Trans. Amer. Math. Soc. </journal> <month> 199 </month> <year> (1974) </year> <month> 1-28. </month>
Reference-contexts: The first steps toward a theory of analog computation were taken by C. Shannon, who showed that an interconnection of primitive devices adders, scalar multipliers, and integrators constrained by some natural conditions to ensure well-posedness, generates functions solving ordinary differential equations of a particular form [26]. Pour-El <ref> [22] </ref> added some necessary elaborations concerning existence of unique solutions.
Reference: [23] <author> M.B. Pour-El and I. Richards, </author> <title> ``The wave equation with computable initial data such that its unique solution is not computable,'' </title> <journal> Adv. </journal> <note> in Math. 39 (1981) 215-239. </note>
Reference: [24] <author> M.B. Pour-El and I. Richards, </author> <title> ``Noncomputability in models of physical phenomena,'' </title> <journal> Internat. J. Theoret. Phys. </journal> <month> 21 </month> <year> (1982) </year> <month> 553-555. </month>
Reference: [25] <author> I.B. Pyne, </author> <title> ``Linear programming on an electronic analogue computer,'' </title> <journal> Trans. AIEE, </journal> <volume> Part I, </volume> <month> 75 </month> <year> (1956) </year> <month> 139-143. </month>
Reference-contexts: 1. Introduction Analog devices have been used, over the years, to solve a variety of problems. Perhaps most widely known is the Differential Analyzer [4,26], which has been used to solve differential equations. To mention some other examples, in <ref> [25] </ref> an electronic analog computer is proposed to implement the gradient projection method for linear programming.
Reference: [26] <author> C.E. Shannon, </author> <title> ``Mathematical theory of the differential analyzer,'' </title> <journal> J. Math. Phys. </journal> <month> 20 </month> <year> (1941) </year> <month> 337-354. </month>
Reference-contexts: The first steps toward a theory of analog computation were taken by C. Shannon, who showed that an interconnection of primitive devices adders, scalar multipliers, and integrators constrained by some natural conditions to ensure well-posedness, generates functions solving ordinary differential equations of a particular form <ref> [26] </ref>. Pour-El [22] added some necessary elaborations concerning existence of unique solutions.
Reference: [27] <author> D.W. Tank and J.J. </author> <title> Hopfield, ``Simple `neural' optimization networks: an A/D converter, signal decision circuit and a linear programming circuit,'' </title> <type> preprint, </type> <month> July 8, </month> <year> 1985. </year>
Reference: [28] <author> A. M. </author> <title> Turing, ``On computable numbers, with an application to the Entscheidungsproblem,'' </title> <journal> Proc. London Math. Soc., </journal> <note> Series 2 42 (1936-7) 230-265; corrections ibid 43 (1937) 544-546. (Reprinted in [7].) </note>
Reference-contexts: An important connection between the mathematical world of computation and the physical world of computing hardware was discussed by Church. In his 1936 paper [6] he equated the intuitive notion of effective calculability with the two equivalent mathematical characterizations of l-definability and recursivity. Turing <ref> [28] </ref> then showed that this notion is equivalent to computability by what we have come to call a Turing machine, so that the intuitive notion of effective calculability is now characterized mathematically by ``Turing-computability.'' This is generally referred to as ``Church's Thesis,'' or the ``Church-Turing Thesis.'' In our context we express
References-found: 28

