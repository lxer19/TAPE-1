URL: ftp://theory.lcs.mit.edu/pub/people/goemans/feige.ps
Refering-URL: http://theory.lcs.mit.edu/~goemans/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Approximating the Value of Two Prover Proof Systems, With Applications to MAX 2SAT and MAX DICUT  
Author: Uriel Feige Michel Goemans 
Address: Rehovot 76100, Israel Cambridge, MA 02139  
Affiliation: Dept. of Appl. Math. and Comp. Sci. Dept. of Math. The Weizmann Institute M.I.T.  
Abstract: It is well known that two prover proof systems are a convenient tool for establishing hardness of approximation results. In this paper, we show that two prover proof systems are also convenient starting points for establishing easiness of approximation results. Our approach combines the Feige-Lovasz (STOC92) semidefinite programming relaxation of one-round two-prover proof systems, together with rounding techniques for the solutions of semidefinite programs, as introduced by Goemans and Williamson (STOC94). As a consequence of our approach, we present improved approximation algorithms for MAX 2SAT and MAX DICUT. The algorithms are guaranteed to deliver solutions within a factor of 0.931 of the optimum for MAX 2SAT and within a factor of 0.859 for MAX DICUT, improving upon the guarantees of 0.878 and 0.796 of Goemans and Williamson. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Arora, L. Babai, J. Stern, and Z. Sweedyk. </author> <title> The hardness of approximate optima in lattices, codes, and systems of linear equations. </title> <booktitle> In Proc. 34th FOCS, </booktitle> <pages> pages 724-733, </pages> <year> 1993. </year>
Reference-contexts: It is interesting that the semidefinite programs that lead to the improvements in approximation ratio are exactly those that were considered by Feige and Lovasz [7] in their study of one-round two-prover interactive proofs. One-round two-prover proof systems are exceptionally useful for proving hardness of approximation results <ref> [7, 6, 14, 1] </ref>. Our current work shows that they are also a useful framework for designing approximation algorithms with a strong performance guarantee. We elaborate a bit more on this point. As part of [7], Feige and Lovasz represented one-round two-prover proof systems as a quadratic programming problem.
Reference: [2] <author> S. Arora, C. Lund, R. Motwani, M. Sudan, and M. Szegedy. </author> <title> Proof verification and hardness of approximation problems. </title> <booktitle> In Proceedings of the 33rd Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 14-23, </pages> <year> 1992. </year>
Reference-contexts: For a long time, these were essentially the best approximation ratios known for these problems. (The 3=4 ratio was extended to handle unit clauses in MAX 2SAT [17, 9].) Recently, major breakthroughs improved our understanding of these problems considerably. On the negative side, Arora et al. <ref> [2] </ref> showed NP hardness results for approximating MAX 3SAT, which imply, by the facts that MAX 3SAT is in MAX SNP and that the three problems above are MAX SNP-hard [15], that for some q &lt; 1, it is NP-hard to approximate these problems within a ratio of q. <p> An explicit upper bound on q can be computed from the proof in <ref> [2] </ref> and from the chain of reductions that follows in [15]. The current tightest known upper bound on q is above 0.99. On the positive side, Goemans and Williamson [10] have derived improved approximation algorithms for MAX DICUT, MAX CUT, and MAX 2SAT. <p> Let q k denote the ratio of approximation obtained for MAX CUT by a semidefinite program that includes all necessary valid inner product constraints that involve up to k vertices. Let q hard &lt; 1 denote a ratio that is NP-hard to achieve (as guaranteed to exist from <ref> [2] </ref>). What is the minimal k for which q k q hard ? Observe that 1 = q n &gt; q hard , and that for any fixed k (independent of n), q k &lt; q hard , unless P=NP.
Reference: [3] <author> F. Barahona. </author> <title> On cuts and matchings in planar graphs. </title> <type> Report 87454-OR, </type> <institution> Institut fur Operations Research, Universitat Bonn, </institution> <year> 1988. </year>
Reference-contexts: For example, one could consider the so-called cycle inequalities. For any "cycle" C and any even subset F of C, one could add the inequality X v i v j (i;j)2CnF However, as shown by Barahona <ref> [3] </ref>, the inequalities (8) are implied by (4)-(7). 3 Satisfiable formulas The question of whether there exists a (directed) cut that contains all the edges, or a satisfying assignment for a 2CNF formula, is solvable in polynomial time.
Reference: [4] <author> F. Barahona and A. R. Mahjoub. </author> <title> On the cut polytope. </title> <journal> Mathematical Programming, </journal> <volume> 36 </volume> <pages> 157-173, </pages> <year> 1986. </year>
Reference-contexts: and k will be denoted by (DI 4 ), (CU T 4 ) and (SAT 4 ). (They can still be formulated as semidefinite programs and can thus be solved arbitrarily closely to optimum in polynomial time.) In the case of MAX CUT, by a result of Barahona and Mahjoub <ref> [4] </ref>, the resulting semidefinite relaxation (CU T 4 ) has value equal to the maximum cut value for any planar graph (their result in fact holds even if one gets rid of the semidefinite constraints, by considering only the linear constraints obtained by replacing v i v j by a scalar <p> For (CU T 4 ), the clique on 5 vertices is a fairly bad instance (and is in fact the smallest instance for which the value of (CU T 4 ) differs from the maximum cut value by the result of Barahona and Mahjoub <ref> [4] </ref>). The maximum cut has size 6. However, selecting vectors for the vertices such that the inner product between any two of them is 1=4 (i.e. they form a regular simplex) satisfies all the constraints, and leads to a semidefinite solution of value 25=4.
Reference: [5] <author> A. I. Barvinok. </author> <title> Problems of distance geometry and convex properties of quadratic maps. </title> <note> Submitted to Discrete and Computational Geometry. A preliminary version appeared as "Topology and convex geometry of quadratic equations", </note> <institution> Math--ematical Sciences Institute, Cornell University, </institution> <type> Technical Report 94-2, </type> <year> 1994. </year>
Reference-contexts: use the formulation in terms of the 2n + 1 vectors t i ; f i and v 0 ) or n + 1 (since the f i 's linearly depend on the t i 's), or even just p 2 (n + 1) by using a result of Barvinok <ref> [5] </ref> and Pataki [16] (since the relaxation can be expressed by imposing n + 1 linear constraints on inner products, see [10]). Both MAX 2SAT and MAX CUT can be similarly upper bounded, by just modifying the objective function.
Reference: [6] <author> M. Bellare. </author> <title> Interactive proofs and approximation: reductions from two provers in one round. </title> <booktitle> In Proc. of 2nd Israel Symposium on Theory of Computing and Systems, </booktitle> <pages> 266-274, </pages> <year> 1993. </year>
Reference-contexts: It is interesting that the semidefinite programs that lead to the improvements in approximation ratio are exactly those that were considered by Feige and Lovasz [7] in their study of one-round two-prover interactive proofs. One-round two-prover proof systems are exceptionally useful for proving hardness of approximation results <ref> [7, 6, 14, 1] </ref>. Our current work shows that they are also a useful framework for designing approximation algorithms with a strong performance guarantee. We elaborate a bit more on this point. As part of [7], Feige and Lovasz represented one-round two-prover proof systems as a quadratic programming problem.
Reference: [7] <author> U. Feige and L. Lovasz. </author> <title> Two-prover one-round proof systems: Their power and their problems. </title> <booktitle> In Proceedings of the 24th Annual ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 733-744, </pages> <year> 1992. </year>
Reference-contexts: These values were obtained by numerically solving a constrained minimization problem of 3 variables. It is interesting that the semidefinite programs that lead to the improvements in approximation ratio are exactly those that were considered by Feige and Lovasz <ref> [7] </ref> in their study of one-round two-prover interactive proofs. One-round two-prover proof systems are exceptionally useful for proving hardness of approximation results [7, 6, 14, 1]. Our current work shows that they are also a useful framework for designing approximation algorithms with a strong performance guarantee. <p> It is interesting that the semidefinite programs that lead to the improvements in approximation ratio are exactly those that were considered by Feige and Lovasz [7] in their study of one-round two-prover interactive proofs. One-round two-prover proof systems are exceptionally useful for proving hardness of approximation results <ref> [7, 6, 14, 1] </ref>. Our current work shows that they are also a useful framework for designing approximation algorithms with a strong performance guarantee. We elaborate a bit more on this point. As part of [7], Feige and Lovasz represented one-round two-prover proof systems as a quadratic programming problem. <p> One-round two-prover proof systems are exceptionally useful for proving hardness of approximation results [7, 6, 14, 1]. Our current work shows that they are also a useful framework for designing approximation algorithms with a strong performance guarantee. We elaborate a bit more on this point. As part of <ref> [7] </ref>, Feige and Lovasz represented one-round two-prover proof systems as a quadratic programming problem. The value of this quadratic program was equal to the acceptance probability of the verifier, under the optimal strategy for the provers. The quadratic program was relaxed to a semidefinite program. <p> The answers we give are based on the techniques developed by Goemans and Williamson [10]. Feige and Lovasz observe that many NP-hard optimization problems have simple representations as one-round two-prover interactive proofs, and this automatically leads to relaxed positive semidefinite formulations for these problems (see <ref> [7] </ref> for examples). Hence there is the potential of obtaining improved approximation algorithms for a wide range of NP-hard optimization problems. <p> In this section, we present relaxed semidefinite programs for these problems. The semidefinite programs that are used by our approximation algorithms are equivalent to those used in Feige and Lovasz <ref> [7] </ref>. These are presented in Section 2.2. But first, in Section 2.1, we show that by including a subset of the constraints of [7], we obtain semidefinite relaxations which are equivalent to those used by Goemans and Williamson [10]. <p> The semidefinite programs that are used by our approximation algorithms are equivalent to those used in Feige and Lovasz <ref> [7] </ref>. These are presented in Section 2.2. But first, in Section 2.1, we show that by including a subset of the constraints of [7], we obtain semidefinite relaxations which are equivalent to those used by Goemans and Williamson [10]. In Section 2.3, we discuss additional constraints that can be added to obtain even stronger relaxations. <p> We first follow the approach of Feige and Lovasz <ref> [7] </ref>. For every index i, let t i be equal to 1 if x i =true and 0 otherwise, and let f i be 1 if x i =false and 0 otherwise. <p> Both MAX 2SAT and MAX CUT can be similarly upper bounded, by just modifying the objective function. The formulation above contains only a subset of the constraints that are used in Feige and Lovasz <ref> [7] </ref>. However, in this weakened form, these relaxations can be seen to be equivalent to the relaxations considered in Goemans and Williamson [10]. <p> Because of their equivalence, we can either use the Feige-Lovasz type of formulation (like (DI 1 )), or the Goemans-Williamson one (like (DI 2 )). For simplicity, we will be using the latter. The Feige-Lovasz <ref> [7] </ref> formulation contains the additional constraints t i t j 0, t i f j 0, f i f j 0. <p> The resulting relaxations will be denoted by (DI 3 ), (CU T 3 ) and (SAT 3 ). They can still be formulated as semidefinite programs and can thus be solved arbitrarily closely to optimum in polynomial time. These relaxations are equivalent to the relaxations in <ref> [7] </ref>. We notice that the inequalities (1)-(3) are not satisfied by any three vectors; for example, taking three coplanar vectors separated by angles of 2=3 would violate (1) since its left-hand-side is 3=2. We also remark that (CU T 3 ) is identical to (CU T 2 ). <p> The case of (CU T 3 ) and (DI 3 ) is actually a special case of Theorem 4.18 in <ref> [7] </ref>. The case of (SAT 3 ) was not proved in [7], and can either be proved by extending the techniques of [7], or by using rounding techniques in the spirit of [10]. <p> The case of (CU T 3 ) and (DI 3 ) is actually a special case of Theorem 4.18 in <ref> [7] </ref>. The case of (SAT 3 ) was not proved in [7], and can either be proved by extending the techniques of [7], or by using rounding techniques in the spirit of [10]. More specifically, instead of picking a random vector r relative to which to do the rounding, we let r = v 0 . <p> The case of (CU T 3 ) and (DI 3 ) is actually a special case of Theorem 4.18 in <ref> [7] </ref>. The case of (SAT 3 ) was not proved in [7], and can either be proved by extending the techniques of [7], or by using rounding techniques in the spirit of [10]. More specifically, instead of picking a random vector r relative to which to do the rounding, we let r = v 0 . <p> Many questions remain open. We discuss a few of them. 1. It is fairly easy do obtain semidefinite relaxations for a large variety of NP-hard optimization problems. Some examples are presented in <ref> [7] </ref>. The more difficult part is to analyze the performance guarantee of these approximation algorithms (for an illustration, see the recent result of Frieze and Jerrum [8]). Any new techniques for doing so are welcome.
Reference: [8] <author> A. Frieze and M. Jerrum. </author> <title> Improved approximation algorithms for MAX k-CUT and MAX BISECTION. </title> <type> Manuscript, </type> <year> 1994. </year>
Reference-contexts: It is fairly easy do obtain semidefinite relaxations for a large variety of NP-hard optimization problems. Some examples are presented in [7]. The more difficult part is to analyze the performance guarantee of these approximation algorithms (for an illustration, see the recent result of Frieze and Jerrum <ref> [8] </ref>). Any new techniques for doing so are welcome. A notable result in this context is the use of semidefinite programming by Karger, Mot-wani, and Sudan [12] in order to color 3-colorable graphs with O (n 1=4 ) colors (which is an improve ment over the previously best algorithm). 2.
Reference: [9] <author> M. X. Goemans and D. P. Williamson. </author> <title> New 3/4-approximation algorithm for MAX SAT. </title> <booktitle> In Proc. 3rd MPS Conference on Integer Programming and Combinatorial Optimization, </booktitle> <pages> 313-321, </pages> <year> 1993. </year> <note> Journal version to appear in SIAM J. Disc. Math., 7, </note> <year> 1994. </year>
Reference-contexts: For a long time, these were essentially the best approximation ratios known for these problems. (The 3=4 ratio was extended to handle unit clauses in MAX 2SAT <ref> [17, 9] </ref>.) Recently, major breakthroughs improved our understanding of these problems considerably.
Reference: [10] <author> M. X. Goemans and D. P. Williamson. </author> <title> .878-approximation algorithms for MAXCUT and MAX2SAT. </title> <booktitle> In Proceedings of the 26th Annual ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 422-431, </pages> <year> 1994. </year> <note> Journal version submitted to J. ACM. </note>
Reference-contexts: An explicit upper bound on q can be computed from the proof in [2] and from the chain of reductions that follows in [15]. The current tightest known upper bound on q is above 0.99. On the positive side, Goemans and Williamson <ref> [10] </ref> have derived improved approximation algorithms for MAX DICUT, MAX CUT, and MAX 2SAT. Their algorithm is based on first obtaining a vector for each Boolean variable (or each vertex of the graph), and then randomly partitioning these vectors with a uniformly generated hyperplane. <p> In this extended abstract, we consider the approach of Goemans and Williamson, and show that further improvements can be obtained for MAX DICUT and MAX 2SAT. The improvements are based on considering a stronger semidefinite program than the one considered in <ref> [10] </ref> and on rounding the corresponding vectors in a non-uniform way. As we show, there is much freedom in selecting the non-uniform rounding scheme. The improvements in performance guarantee are quite significant. <p> The answers we give are based on the techniques developed by Goemans and Williamson <ref> [10] </ref>. Feige and Lovasz observe that many NP-hard optimization problems have simple representations as one-round two-prover interactive proofs, and this automatically leads to relaxed positive semidefinite formulations for these problems (see [7] for examples). <p> We specialize our presentation to the actual NP-hard optimization problems that we study, namely MAX 2SAT and MAX DICUT. 2 Formulations For the definitions of the three main problems studied in Goemans and Williamson <ref> [10] </ref> | MAX CUT, MAX 2SAT and MAX DICUT | see the introduction. In this section, we present relaxed semidefinite programs for these problems. The semidefinite programs that are used by our approximation algorithms are equivalent to those used in Feige and Lovasz [7]. These are presented in Section 2.2. <p> These are presented in Section 2.2. But first, in Section 2.1, we show that by including a subset of the constraints of [7], we obtain semidefinite relaxations which are equivalent to those used by Goemans and Williamson <ref> [10] </ref>. In Section 2.3, we discuss additional constraints that can be added to obtain even stronger relaxations. <p> As in <ref> [10] </ref>, if the dimension k is large enough, the relaxation can be formulated as a semidefinite program, and is thus polynomially solvable (or, more precisely, can be approximated within an additive * in time polynomial in the input and log 1 * ). <p> n + 1 (since the f i 's linearly depend on the t i 's), or even just p 2 (n + 1) by using a result of Barvinok [5] and Pataki [16] (since the relaxation can be expressed by imposing n + 1 linear constraints on inner products, see <ref> [10] </ref>). Both MAX 2SAT and MAX CUT can be similarly upper bounded, by just modifying the objective function. The formulation above contains only a subset of the constraints that are used in Feige and Lovasz [7]. <p> The formulation above contains only a subset of the constraints that are used in Feige and Lovasz [7]. However, in this weakened form, these relaxations can be seen to be equivalent to the relaxations considered in Goemans and Williamson <ref> [10] </ref>. <p> The case of (SAT 3 ) was not proved in [7], and can either be proved by extending the techniques of [7], or by using rounding techniques in the spirit of <ref> [10] </ref>. More specifically, instead of picking a random vector r relative to which to do the rounding, we let r = v 0 . <p> v i and v j satisfying (1)-(3), the probability that a given clause involving x i and x j is satisfied (or the arc (i; j) is in the directed cut) is at least fl times its contribution to the objective function of the semidefinite program (see Goemans and Williamson <ref> [10] </ref> for details). We would like to stress again the importance of imposing inequalities (1)-(3); without them, one cannot hope for performance guarantees better than 9/8 for MAX 2SAT. Even for fairly simple schemes, an analytical derivation of the best fl does not seem to be an easy task. <p> A slightly better performance guarantee of 0.859 can be obtained through a much more complicated function. Our algorithms for MAX 2SAT and MAX DICUT can be derandomized, as they are based on the algo rithm of Goemans and Williamson <ref> [10] </ref>. 5 Discussion Our results are a bit more general than may appear from considering only the problems MAX DI-CUT, MAX CUT, and MAX 2SAT. In the introduction we presented three types of terms, and, xor, and or. In addition, we had unit terms (in MAX 2SAT). <p> For example, for any k, proper MAX k-SAT can be approximated within a ratio of at least 0:875, but the best ratio of approximation known to be achievable for MAX SAT (which contains clauses of varying length) is roughly 0:7584 <ref> [10] </ref>. (This bound can be slightly improved using results in the current paper). Many questions remain open. We discuss a few of them. 1. It is fairly easy do obtain semidefinite relaxations for a large variety of NP-hard optimization problems. Some examples are presented in [7]. <p> For MAX CUT, the 5-cycle gives a ratio between the optimum cut value and the optimum value of (CU T 3 ) of 32 p = 0:88445 : : : (see Goemans and Williamson <ref> [10] </ref>). Since any MAX DICUT instance can be formulated as a MAX CUT instance, the bidirected 5-cycle also gives a ratio of 0.88445 for (DI 3 ). <p> In <ref> [10] </ref>, a ratio of 0:878 was achieved both for approximating MAX CUT and for approximating MAX 2SAT.
Reference: [11] <author> M. Grotschel, L. Lovasz, and A. Schrijver. </author> <title> The ellipsoid method and its consequences in combinatorial optimization. </title> <journal> Combinatorica, </journal> <volume> 1 </volume> <pages> 169-197, </pages> <year> 1981. </year>
Reference-contexts: The second motivation was in the design of polynomial time algorithms for the exact solution of certain problems (e.g., it leads to an algorithm of computing the chromatic number of perfect graphs, as in <ref> [13, 11] </ref>). This second motivation will resurface in Section 3. In the current paper, we are concerned with approximate solutions rather than exact solutions, and hence we ask what is the worst-case ratio between the value of the semidefinite program and the value of the original quadratic program.
Reference: [12] <author> D. Karger, R. Motwani, M. Sudan. </author> <title> Approximate graph coloring by semidefinite programming. </title> <note> Proc. FOCS 1994, to appear. </note>
Reference-contexts: Any new techniques for doing so are welcome. A notable result in this context is the use of semidefinite programming by Karger, Mot-wani, and Sudan <ref> [12] </ref> in order to color 3-colorable graphs with O (n 1=4 ) colors (which is an improve ment over the previously best algorithm). 2.
Reference: [13] <author> L. Lovasz. </author> <title> On the Shannon capacity of a graph. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> 25 </volume> <pages> 1-7, </pages> <year> 1979. </year>
Reference-contexts: The second motivation was in the design of polynomial time algorithms for the exact solution of certain problems (e.g., it leads to an algorithm of computing the chromatic number of perfect graphs, as in <ref> [13, 11] </ref>). This second motivation will resurface in Section 3. In the current paper, we are concerned with approximate solutions rather than exact solutions, and hence we ask what is the worst-case ratio between the value of the semidefinite program and the value of the original quadratic program.
Reference: [14] <author> C. Lund and M. Yannakakis. </author> <title> On the hardness of approximating minimization problems. </title> <booktitle> In Proceedings of the 25th Annual ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 286-293, </pages> <year> 1993. </year>
Reference-contexts: It is interesting that the semidefinite programs that lead to the improvements in approximation ratio are exactly those that were considered by Feige and Lovasz [7] in their study of one-round two-prover interactive proofs. One-round two-prover proof systems are exceptionally useful for proving hardness of approximation results <ref> [7, 6, 14, 1] </ref>. Our current work shows that they are also a useful framework for designing approximation algorithms with a strong performance guarantee. We elaborate a bit more on this point. As part of [7], Feige and Lovasz represented one-round two-prover proof systems as a quadratic programming problem.
Reference: [15] <author> C. Papadimitriou and M. Yannakakis. </author> <title> Optimization, approximation, and complexity classes. </title> <journal> JCSS, </journal> <volume> 43 (1991), </volume> <pages> 425-440. </pages>
Reference-contexts: On the negative side, Arora et al. [2] showed NP hardness results for approximating MAX 3SAT, which imply, by the facts that MAX 3SAT is in MAX SNP and that the three problems above are MAX SNP-hard <ref> [15] </ref>, that for some q &lt; 1, it is NP-hard to approximate these problems within a ratio of q. An explicit upper bound on q can be computed from the proof in [2] and from the chain of reductions that follows in [15]. <p> that the three problems above are MAX SNP-hard <ref> [15] </ref>, that for some q &lt; 1, it is NP-hard to approximate these problems within a ratio of q. An explicit upper bound on q can be computed from the proof in [2] and from the chain of reductions that follows in [15]. The current tightest known upper bound on q is above 0.99. On the positive side, Goemans and Williamson [10] have derived improved approximation algorithms for MAX DICUT, MAX CUT, and MAX 2SAT.
Reference: [16] <author> G. Pataki. </author> <title> On the multiplicity of optimal eigen-values. </title> <institution> Management Science Research Report #MSRR-604, Carnegie-Mellon University, </institution> <year> 1994. </year>
Reference-contexts: in terms of the 2n + 1 vectors t i ; f i and v 0 ) or n + 1 (since the f i 's linearly depend on the t i 's), or even just p 2 (n + 1) by using a result of Barvinok [5] and Pataki <ref> [16] </ref> (since the relaxation can be expressed by imposing n + 1 linear constraints on inner products, see [10]). Both MAX 2SAT and MAX CUT can be similarly upper bounded, by just modifying the objective function.
Reference: [17] <author> M. Yannakakis. </author> <title> On the approximation of maximum satisfiability. </title> <booktitle> In proc. 3rd Symp. on Discrete Algorithms, ACM-SIAM 1992, </booktitle> <pages> pp. 1-9. </pages>
Reference-contexts: For a long time, these were essentially the best approximation ratios known for these problems. (The 3=4 ratio was extended to handle unit clauses in MAX 2SAT <ref> [17, 9] </ref>.) Recently, major breakthroughs improved our understanding of these problems considerably.
References-found: 17

