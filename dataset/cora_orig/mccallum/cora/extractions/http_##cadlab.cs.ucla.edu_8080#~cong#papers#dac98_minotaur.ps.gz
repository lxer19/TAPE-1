URL: http://cadlab.cs.ucla.edu:8080/~cong/papers/dac98_minotaur.ps.gz
Refering-URL: http://ballade.cs.ucla.edu/~cong/publications.html
Root-URL: http://www.cs.ucla.edu
Title: Performance Driven Multi-Layer General Area Routing for PCB/MCM Designs  
Author: Jason Cong and Patrick H. Madden 
Address: Los Angeles, California, 90095  
Affiliation: UCLA Computer Science Department  
Abstract: In this paper we present a new global router appropriate for Multichip Module (MCM) and dense Printed Circuit Board (PCB) design, which utilizes a hybrid of the classical rip-up and reroute approach, and the more recent iterative deletion[9] method. The global router addresses performance issues by utilizing recent results in high performance interconnect design, while still effectively minimizing global congestion. With experiments on the maze-routing component of our global router, we show that the choice of routing cost functions can have a significant impact on final solution quality. The results of a number of previously proposed routers may be improved dramatically by adopting the cost functions we suggest here. We also find little evidence of the "net ordering problem" when our cost functions and routing model are applied. The iterative deletion method is shown to improve global solution quality, particularly when high performance interconnect is required. We evaluate the performance of our global router by comparing the congestion of routes produced by our global router to those of a well known MCM router, V4R [14]. Our global router, MINOTAUR, supports arbitrary numbers of routing layers, differing capacities for each layer, preexisting congestion and obstacles, and high performance interconnect structures (including those which require variable width interconnect). 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> H. B. Bakoglu. </author> <title> Circuits, Interconnections, and Packaging for VLSI. </title> <publisher> Addison-Wesley, </publisher> <year> 1990. </year>
Reference-contexts: 1 Introduction Advances in VLSI fabrication technology have resulted in an increasing interest in interconnection and packaging technologies. For many systems, the delay due to circuit interconnections can dominate the total system delay <ref> [1, 5] </ref>. Interconnect optimization must be considered to achieve high performance at the system level. One approach that provides many benefits to packaging level interconnection is the Multichip Module (MCM) technology. This technology increases practical packing densities, and removes a level of interconnection.
Reference: [2] <author> J. D. Carothers, D. Li, and T. Hameenanttila. MCG: </author> <title> A correct-by-design multichip module router with crosstalk avoidance. </title> <booktitle> In Int. Workshop on Rapid System Prototyping, </booktitle> <pages> pages 183-188, </pages> <year> 1996. </year>
Reference-contexts: The remaining nets are routed using x y layer pair routing. In [17], a linear programming approach was presented. Randomized rounding is used to obtain integer solutions. A small number of possible topologies are considered, and routes are restricted to a channel intersection graph. The MCG <ref> [2] </ref> router considers a small number of possible routes for each net, and attempts to maximize the routing density on any layer-pair by selecting a set of compatible routes from among the unrouted nets. <p> Our global router supports separate cost functions for each type of resource (tile-layer nodes, border edges, and via edges), and can optimize these independently. 3.1.2 The Net Ordering Problem A perennial question in global routing problems has been which net do we route (or reroute) first? <ref> [9, 2] </ref>. To evaluate the importance of net ordering in our implementation, we compared five different edge orderings within the rip-up and reroute framework. Our orderings were low length first, low cost first, the reverse of these, and the default order of our design database. <p> We are currently integrating our MCM global router with a performance driven variable width multi-layer detail router, and will report results of these experiments when they are complete. We are also considering the use of a small set of candidate routes such as those suggested in <ref> [2] </ref>, allowing us to eliminate maze routing entirely. Our methods may also extend to handle general area routing for performance driven multi-layer VLSI IC design problems. 6 Acknowledgements This work is partially supported by DARPA/ETO under Contract DAAL01-96-K-3600 managed by the US Army Research Laboratory.
Reference: [3] <author> Y.-J. Cha, C. S. Rim, and K. Nakajima. </author> <title> A simple and effective greedy multilayer router for MCMs. </title> <booktitle> In Proc. Int. Symp. on Physical Design, </booktitle> <pages> pages 67-72, </pages> <year> 1997. </year>
Reference-contexts: In [20], the MLR router was presented; it first performs layer assignment of nets, followed by Steiner optimal area routing using a hierarchical (ff; fi) approach (to find low-cost paths between pins). The SEGRA <ref> [3] </ref> MCM global router has been described, and also approaches the routing problem by completing pairs of layers in each pass. A simple greedy heuristic is used to select which nets are to be extended or completed during each pass.
Reference: [4] <author> J. D. Cho, K.-F. Liao, S. Raje, and M. Sarrafzadeh. </author> <title> M 2 R: Multilayer routing algorithm for high-performance MCMs. </title> <journal> IEEE Trans. on Circuits and Systems, </journal> <volume> 41(4) </volume> <pages> 253-265, </pages> <month> April </month> <year> 1994. </year>
Reference-contexts: While this router was superior to a 3D maze router, it requires relatively high computation times. The V4R router [14] was subsequently presented, and efficiently routes layer-pairs one at a time using routes with no more than four vias each. The M 2 R <ref> [4] </ref> router addresses performance concerns by routing critical nets on a single layer. The remaining nets are routed using x y layer pair routing. In [17], a linear programming approach was presented. Randomized rounding is used to obtain integer solutions. <p> The routing problem consists of determining the interconnect structure for a set of nets N . In addition to basic feasibility concerns (based on physical routing capacity constraints), there are a number of performance issues as well; many of these were detailed in <ref> [4] </ref>. In this paper, we are interested in meeting delay, signal integrity, crosstalk, and routing capacity constraints, while minimizing total wire length, maximum congestion, and routing resource costs.
Reference: [5] <author> J. Cong, L. He, C.-K. Koh, and P. H. Madden. </author> <title> Performance optimization of VLSI interconnect layout. Integration, </title> <journal> the VLSI Journal, </journal> <volume> 21 </volume> <pages> 1-94, </pages> <year> 1996. </year>
Reference-contexts: 1 Introduction Advances in VLSI fabrication technology have resulted in an increasing interest in interconnection and packaging technologies. For many systems, the delay due to circuit interconnections can dominate the total system delay <ref> [1, 5] </ref>. Interconnect optimization must be considered to achieve high performance at the system level. One approach that provides many benefits to packaging level interconnection is the Multichip Module (MCM) technology. This technology increases practical packing densities, and removes a level of interconnection. <p> Our congestion estimation here is similar to the channel density estimation of [7]. We recalculate congestion levels after the removal of each redundant path. 3.3 Performance Optimization Many approaches for interconnect optimization in high performance design have been proposed. [11] and <ref> [5] </ref> provide an overview of current interconnect optimization approaches. Recently, Required-Arrival-Time Steiner trees (RATS-trees) have been proposed [6] to provide a set of solutions allowing trade-off among signal delay, wave-form, and routing area.
Reference: [6] <author> J. Cong and C.-K. Koh. </author> <title> Interconnect layout optimization under higher-order RLC model. </title> <booktitle> In Proc. Int. Conf. on Computer Aided Design, </booktitle> <year> 1997. </year>
Reference-contexts: In contrast to these previous approachs, our MINOTAUR global router offers the following features. * We utilize current high-performance variable-width interconnect optimization results, obtaining structures which address delay and signal integrity requirements <ref> [6] </ref>. <p> We recalculate congestion levels after the removal of each redundant path. 3.3 Performance Optimization Many approaches for interconnect optimization in high performance design have been proposed. [11] and [5] provide an overview of current interconnect optimization approaches. Recently, Required-Arrival-Time Steiner trees (RATS-trees) have been proposed <ref> [6] </ref> to provide a set of solutions allowing trade-off among signal delay, wave-form, and routing area. This algorithm uses a bottom-up dynamic programming approach, and can synthesize a set of high performance structures; Figure 4 shows two possible trees for a 9-pin net.
Reference: [7] <author> J. Cong and P. H. Madden. </author> <title> Performance driven routing for standard cell design. </title> <booktitle> In Proc. Int. Symp. on Physical Design, </booktitle> <pages> pages 73-80, </pages> <year> 1997. </year>
Reference-contexts: Through iterative deletion, we can obtain high quality results while using rip-up and reroute sparingly. In this section, we describe iterative deletion; Section 3.4 describes integration with rip-up and reroute. The use of iterative deletion was first proposed in [9], and was recently improved in <ref> [7] </ref>. In many iterative improvement methods, we repeatedly modify a solution, changing a small portion at each step. Rather than representing the problem with a single instance, and changing one aspect of it at each step, the iterative deletion method represents a set of possible states. <p> Iterative deletion was shown to be an effective method for selecting a set of channel segments in standard cell IC routing problems <ref> [7] </ref>, and motivates our use of the method here. Our congestion estimation here is similar to the channel density estimation of [7]. <p> Iterative deletion was shown to be an effective method for selecting a set of channel segments in standard cell IC routing problems <ref> [7] </ref>, and motivates our use of the method here. Our congestion estimation here is similar to the channel density estimation of [7]. We recalculate congestion levels after the removal of each redundant path. 3.3 Performance Optimization Many approaches for interconnect optimization in high performance design have been proposed. [11] and [5] provide an overview of current interconnect optimization approaches.
Reference: [8] <author> J. Cong and P. H. Madden. </author> <title> Performance driven multi-layer general area routing for pcb/mcm designs,. </title> <type> Technical Report 980013, </type> <institution> UCLA CS Dept, </institution> <month> March </month> <year> 1998. </year>
Reference-contexts: Average congestion should correlate reasonably well with wire lengths available after completion of detail routing. A complete set of results is available in <ref> [8] </ref>. We omit experimental results on edge ordering (in which no ordering outperformed another), an exhaustive set of results comparing cost function approaches, and experiments comparing the use of spanning tree and Steiner tree topologies (which also show negligible differences). Maze routing (which is unoptimized) dominates the run time.
Reference: [9] <author> J. Cong and B. Preas. </author> <title> A new algorithm for standard cell global routing. </title> <booktitle> In Proc. Int. Conf. on Computer Aided Design, </booktitle> <pages> pages 176-179, </pages> <month> November </month> <year> 1988. </year>
Reference-contexts: Our global router supports separate cost functions for each type of resource (tile-layer nodes, border edges, and via edges), and can optimize these independently. 3.1.2 The Net Ordering Problem A perennial question in global routing problems has been which net do we route (or reroute) first? <ref> [9, 2] </ref>. To evaluate the importance of net ordering in our implementation, we compared five different edge orderings within the rip-up and reroute framework. Our orderings were low length first, low cost first, the reverse of these, and the default order of our design database. <p> Through iterative deletion, we can obtain high quality results while using rip-up and reroute sparingly. In this section, we describe iterative deletion; Section 3.4 describes integration with rip-up and reroute. The use of iterative deletion was first proposed in <ref> [9] </ref>, and was recently improved in [7]. In many iterative improvement methods, we repeatedly modify a solution, changing a small portion at each step.
Reference: [10] <author> A. Hanafusa, Y. Yamashita, and M. Yasuda. </author> <title> Three-dimensional routing for multilayer ceramic printed circuit boards. </title> <booktitle> In Proc. Int. Conf. on Computer Aided Design, </booktitle> <pages> pages 386-389, </pages> <year> 1990. </year>
Reference-contexts: Routing within MCM substrates or PCBs, however, can be an extremely difficult problem with a potentially large number of interconnect layers. A Fujitsu supercomputer design, for example, has over 50 interconnect layers, each with a large routing capacity <ref> [10] </ref>. The MCM/PCB routing problem in general may be considered to be an extremely large general area routing problem, and cannot be decomposed into small channel or switchbox routing problems easily. <p> The problem of MCM/PCB routing has been considered by a number of authors. One set of approaches perform global and detail routing in a single step. An early MCM router was presented in <ref> [10] </ref>, and performs a combination of 2D and 3D routing obtain a solution. Computation times for this method were relatively high. In [13] the SLICE router was presented; it constructs detailed routes through a mixture of planar routing and two-layer maze routing.
Reference: [11] <author> A. B. Kahng and G. Robins. </author> <title> On Optimal Interconnections for VLSI. </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1994. </year>
Reference-contexts: Our congestion estimation here is similar to the channel density estimation of [7]. We recalculate congestion levels after the removal of each redundant path. 3.3 Performance Optimization Many approaches for interconnect optimization in high performance design have been proposed. <ref> [11] </ref> and [5] provide an overview of current interconnect optimization approaches. Recently, Required-Arrival-Time Steiner trees (RATS-trees) have been proposed [6] to provide a set of solutions allowing trade-off among signal delay, wave-form, and routing area.
Reference: [12] <author> K. Kawamura, T. Shindo, T. Shibuya, H. Miwatari, and Y. Ohki. </author> <title> Touch and cross router. </title> <booktitle> In Proc. Int. Conf. on Computer Aided Design, </booktitle> <pages> pages 56-59, </pages> <year> 1990. </year>
Reference-contexts: We are therefore interested in knowing what cost functions result in the best performance, a question that has received relatively little attention in the literature. In [19], the cost of routing in the most congested region is infinite, while the remaining regions have low cost. In <ref> [12] </ref>, the cost of a routing path includes terms for the number of other routes that a path "touches" or "crosses," as well as two terms to capture the route length in preferred and non-preferred routing directions. <p> In general, we expect resources which have high usage or large numbers of obstacles to have relatively high cost. We have explored three cost functions in depth, and describe them here. We first consider a step function, similar to those of [19], [18], and <ref> [12] </ref>, which provides a low cost if congestion falls below a specific threshold value. A high cost results if congestion is at or above the threshold value.
Reference: [13] <author> K.-Y. Khoo and J. Cong. </author> <title> A fast multilayer general area router for MCM designs. </title> <journal> IEEE Trans. on Circuits and Systems, </journal> <pages> pages 841-851, </pages> <year> 1992. </year>
Reference-contexts: One set of approaches perform global and detail routing in a single step. An early MCM router was presented in [10], and performs a combination of 2D and 3D routing obtain a solution. Computation times for this method were relatively high. In <ref> [13] </ref> the SLICE router was presented; it constructs detailed routes through a mixture of planar routing and two-layer maze routing. While this router was superior to a 3D maze router, it requires relatively high computation times.
Reference: [14] <author> K.-Y. Khoo and J. Cong. </author> <title> An efficient multilayer MCM router based on four-via routing. </title> <journal> IEEE Trans. on Computer-Aided Design of Integrated Circuits and Systems, </journal> <pages> pages 1277-1290, </pages> <year> 1994. </year>
Reference-contexts: Computation times for this method were relatively high. In [13] the SLICE router was presented; it constructs detailed routes through a mixture of planar routing and two-layer maze routing. While this router was superior to a 3D maze router, it requires relatively high computation times. The V4R router <ref> [14] </ref> was subsequently presented, and efficiently routes layer-pairs one at a time using routes with no more than four vias each. The M 2 R [4] router addresses performance concerns by routing critical nets on a single layer. The remaining nets are routed using x y layer pair routing. <p> A third approach applies iterative deletion as above, followed by rip-up and reroute for non-critical nets. 4 Experimental Results Experiments were performed with the MCC multichip module benchmark circuits mcc1 and mcc2, and also on the three test cases from <ref> [14] </ref>, summarized in Table 1. <p> and threshold values for tile costs are not well suited to the routing problem, a single pass of iterative deletion can improve the results considerably. 4.2 Comparison with V4R In Table 3, we compare maximum tile-layer congestion values of our approach with the results of the MCM global router V4R <ref> [14] </ref>. Congestion estimation favors the V4R router, as the MINOTAUR result considers distinct tree edges, while the V4R result reported considers distinct nets. For the single layer comparisons, we merge layer assignments of the V4R routing into a single layer.
Reference: [15] <author> C. Y. Lee. </author> <title> An algorithm for path connection and its applications. </title> <journal> IRE Trans. on Electronic Computers, </journal> <volume> EC-10(3):346-365, </volume> <year> 1961. </year>
Reference-contexts: Given the complexity of MCM and PCB designs, we believe that rip-up and reroute may be necessary for aggressive design. We implement rip-up and reroute in our router as follows. Each edge is first routed using a maze router based on Lee's classic algorithm <ref> [15] </ref>. We then iteratively rip-up and reroute each edge, continuing for a user-specified number of iterations, or until solution quality stabilizes. Details of our maze routing cost functions, and edge orderings used, are given below.
Reference: [16] <author> R. Linsker. </author> <title> An iterative-improvement penalty-function-driven wire routing system. </title> <journal> IBM J. Research and Development, </journal> <volume> 28(5) </volume> <pages> 613-624, </pages> <month> September </month> <year> 1984. </year>
Reference-contexts: In [18], steps in the preferred routing direction were assigned a cost of 1, while non-preferred steps were assigned a cost of 30. In <ref> [16] </ref>, costs were piecewise-linear functions depending on a measure of the utilization and the capacity of each edge. Clearly, there are many possible ways to calculate the cost of using a particular resource. <p> A high cost results if congestion is at or above the threshold value. Second, we considered a piece-wise linear slope function, similar to that of <ref> [16] </ref>, which provides low cost when congestion is below a threshold, high cost if congestion is above cap, and a linearly interpolated cost when congestion is between the threshold and cap levels. For each iteration of rip-up and reroute, we determine the maximum and minimum congestion for any resource.
Reference: [17] <author> S. Mehrotra, P. Franzon, and M. Steer. </author> <title> Performance driven global routing and wiring rule generation for high speed PCBs and MCMs. </title> <booktitle> In Proc. Design Automation Conf, </booktitle> <pages> pages 381-387, </pages> <year> 1995. </year>
Reference-contexts: The M 2 R [4] router addresses performance concerns by routing critical nets on a single layer. The remaining nets are routed using x y layer pair routing. In <ref> [17] </ref>, a linear programming approach was presented. Randomized rounding is used to obtain integer solutions. A small number of possible topologies are considered, and routes are restricted to a channel intersection graph.
Reference: [18] <author> H. Shin and A. Sangiovanni-Vincentelli. </author> <title> A detailed router based on incremental routing modifications: </title> <journal> Mighty. IEEE Trans. on Computer-Aided Design of Integrated Circuits and Systems, </journal> <volume> CAD-6(6):942-955, </volume> <month> November </month> <year> 1987. </year>
Reference-contexts: In [12], the cost of a routing path includes terms for the number of other routes that a path "touches" or "crosses," as well as two terms to capture the route length in preferred and non-preferred routing directions. In <ref> [18] </ref>, steps in the preferred routing direction were assigned a cost of 1, while non-preferred steps were assigned a cost of 30. In [16], costs were piecewise-linear functions depending on a measure of the utilization and the capacity of each edge. <p> In general, we expect resources which have high usage or large numbers of obstacles to have relatively high cost. We have explored three cost functions in depth, and describe them here. We first consider a step function, similar to those of [19], <ref> [18] </ref>, and [12], which provides a low cost if congestion falls below a specific threshold value. A high cost results if congestion is at or above the threshold value.
Reference: [19] <author> E. Shragowitz and S. Keel. </author> <title> A global router based on a multi-commodity flow model. Integration, </title> <journal> the VLSI Journal, </journal> <volume> 5 </volume> <pages> 3-16, </pages> <year> 1987. </year>
Reference-contexts: Despite these drawbacks, rip-up and reroute continues to be used in many routing applications. The rip-up and reroute portion of our global router is similar to that of <ref> [19] </ref>, in that we iteratively change our congestion bounds to encourage convergence to a low-congestion solution. Given the complexity of MCM and PCB designs, we believe that rip-up and reroute may be necessary for aggressive design. We implement rip-up and reroute in our router as follows. <p> We are therefore interested in knowing what cost functions result in the best performance, a question that has received relatively little attention in the literature. In <ref> [19] </ref>, the cost of routing in the most congested region is infinite, while the remaining regions have low cost. <p> In general, we expect resources which have high usage or large numbers of obstacles to have relatively high cost. We have explored three cost functions in depth, and describe them here. We first consider a step function, similar to those of <ref> [19] </ref>, [18], and [12], which provides a low cost if congestion falls below a specific threshold value. A high cost results if congestion is at or above the threshold value.
Reference: [20] <author> D. Wang and E. S. Kuh. </author> <title> A new timing-driven multilayer MCM/IC routing algorithm. </title> <booktitle> In Proc. IEEE Multi-Chip Module Conf., </booktitle> <pages> pages 89-94, </pages> <year> 1997. </year>
Reference-contexts: The results of this router are quite good, requiring fewer routing layers than many of the other MCM routers. Performance concerns are addressed by removing nets which exceed signal crosstalk thresholds, and routing them on other layers. In <ref> [20] </ref>, the MLR router was presented; it first performs layer assignment of nets, followed by Steiner optimal area routing using a hierarchical (ff; fi) approach (to find low-cost paths between pins).
Reference: [21] <author> Q. Yu, S. Badida, and N. Sherwani. </author> <title> Algorithmic aspects of three dimensional MCM routing. </title> <booktitle> In Proc. Design Automation Conf, </booktitle> <pages> pages 397-401, </pages> <year> 1994. </year>
Reference-contexts: A simple greedy heuristic is used to select which nets are to be extended or completed during each pass. While the methods mentioned above consider global and detail routing in a single step, there have also been approaches which consider the problem in two steps. In <ref> [21] </ref>, the MCM substrate is decomposed into a set of "towers," rectangular regions containing portions of the routing surface through all layers. <p> They first distribute routing density across a three dimensional surface, using hierarchical decomposition, then determine locations of nets on the boundaries of the towers, and finally obtain a routing for each tower using a detail router. We approach the problem in a manner similar to <ref> [21] </ref>, and consider the global routing problem in this paper. In contrast to these previous approachs, our MINOTAUR global router offers the following features. * We utilize current high-performance variable-width interconnect optimization results, obtaining structures which address delay and signal integrity requirements [6]. <p> Experimental results are presented in Section 4, and we conclude our paper with Section 5. 2 Problem Formulation Our routing model is similar to that of <ref> [21] </ref>; we divide the 3-dimensional routing surface into a set of "tiles," with each tile consisting of a number of layers. We use "tile-layer" to indicate a single layer within a tile.
References-found: 21

