URL: ftp://ftp.cs.bham.ac.uk/pub/tech-reports/1998/CSRP-98-12.ps.gz
Refering-URL: http://www.cs.bham.ac.uk/~wbl/biblio/gp-bibliography.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Better Trained Ants for Genetic Programming simple genetic programming system, with no size or depth
Author: W. B. Langdon and R. Poli 
Note: A  
Address: B15 2TT, UK  
Affiliation: School of Computer Science, University of Birmingham, Birmingham  
Pubnum: Technical Report: CSRP-98-12  
Email: fW.B.Langdon,R.Polig@cs.bham.ac.uk  
Phone: Tel: +44 (0) 121 414 4791, Fax: +44 (0) 121 414 4281  
Date: 2 April 1998  
Web: http://www.cs.bham.ac.uk/~wbl, ~rmp  
Abstract: The problem of programming an artificial ant to follow the Santa Fe trail has been repeatedly used as a benchmark problem in GP. Recently we have shown performance of several techniques is not much better than the best performance obtainable using uniform random search. We suggested that this could be because the program fitness landscape is difficult for hill climbers and the problem is also difficult for Genetic Algorithms as it contains multiple levels of deception. Here we redefine the problem so the ant is (1) obliged to traverse the trail in approximately the correct order, (2) to find food quickly. We also investigate (3) including the ant's speed in the fitness function, either as a linear addition or as a second objective in a multi-objective fitness function, and (4) GP one point crossover. 
Abstract-found: 1
Intro-found: 1
Reference: [ Chellapilla, 1997 ] <editor> Kumar Chellapilla. </editor> <title> Evolutionary programming with tree mutations: Evolving computer programs without crossover. </title> <editor> In John R. Koza, Kalyanmoy Deb, Marco Dorigo, David B. Fogel, Max Garzon, Hitoshi Iba, and Rick L. Riolo, editors, </editor> <booktitle> Genetic Programming 1997: Proceedings of the Second Annual Conference, </booktitle> <pages> pages 431-438, </pages> <address> Stanford University, CA, USA, 13-16 July 1997. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Again effort values for size limits of 200-500 appear to be much the same as with no size limit. The effort bars are smaller as data are estimated from more succesful runs. Fig. 4 also gives data from <ref> [ Chellapilla, 1997 ] </ref> . 3.2 Limiting Initial Energy In this section we introduce a new restriction on the ant programs, which we apply in addition to limiting the amount of food on the trail initially. However no significant increase in performance was found. <p> Table 2: Effort (in 1,000s) to solve Santa Fe Trail (no program size restriction) Training Technique Effort (min) (max) ok/runs Best uniform random, length=18 455 414 505 101/- Original 320 266 396 35/200 Strict Hill Climbing 50%-150% mutation [ Langdon and Poli, 1998 ] 188 118 433 8/50 <ref> [ Chellapilla, 1997 ] </ref> 136 47/59 scalar speed 196 130 382 9/50 1 food ahead 120 88 152 19/50 1 food ahead, ramped energy 555 390 900 7/50 1 food ahead, ramped energy, scalar speed 230 170 349 13/50 5 food ahead 158 140 187 71/200 5 food ahead, ramped energy <p> In terms of the effort required (120,000) it is approximately three times easier and GP performs about as well as the best results previously obtained using variable length hill climbers (187,500) [ Langdon, 1998c; Langdon and Poli, 1998 ] and size restricted EP search (136,000) <ref> [ Chellapilla, 1997 ] </ref> . By enforcing an optimal size limit on the programs being evolved we might be able to do marginally better (104,000, size 50). Surprisingly GP performance is only marginally affected by a size limit and is roughly constant for wide ranges in maximium size.
Reference: [ Harries and Smith, 1997 ] <author> Kim Harries and Peter Smith. </author> <title> Exploring alternative operators and search strategies in genetic programming. </title> <editor> In John R. Koza, Kalyanmoy Deb, Marco Dorigo, David B. Fogel, Max Garzon, Hitoshi Iba, and Rick L. Riolo, editors, </editor> <booktitle> Genetic Programming 1997: Proceedings of the Second Annual Conference, </booktitle> <pages> pages 147-155, </pages> <address> Stanford University, CA, USA, 13-16 July 1997. </address> <publisher> Morgan Kaufmann. </publisher>
Reference: [ Ito et al., 1998 ] <author> T. Ito, I. Iba, and S. Sato. </author> <title> Non-destructive depth-dependent crossover for genetic programming. </title> <editor> In W. Banzhaf, R. Poli, M. Schoenauer, and T. C. Fogarty, editors, </editor> <booktitle> Proceedings of the First European Workshop on Genetic Programming, </booktitle> <publisher> LNCS, </publisher> <address> Paris, 14-15 April 1998. </address> <publisher> Springer-Verlag. Forthcoming. </publisher>
Reference: [ Jefferson et al., 1992 ] <author> David Jefferson, Robert Collins, Claus Cooper, Michael Dyer, Margot Flowers, Richard Korf, Charles Taylor, and Alan Wang. </author> <title> Evolution as a theme in artificial life: The Genesys/Tracker system. </title> <editor> In Christopher G. Langton, Charles Taylor, J. Doyne Farmer, and Steen Rasmussen, editors, </editor> <booktitle> Artificial Life II, volume X of Santa Fe Institute Studies in the Sciences of Complexity, </booktitle> <pages> pages 549-578. </pages> <publisher> Addison-Wesley, </publisher> <month> February </month> <year> 1992. </year>
Reference-contexts: 1 Introduction The problem of programming an artificial ant to follow the Santa Fe trail has been repeatedly used as a benchmark problem <ref> [ Jefferson et al., 1992, (John Muir trail) ] </ref> , [ Koza, 1992; Lee and Wong, 1995; Chellapilla, 1997; Harries and Smith, 1997; Luke and Spector, 1997; Ito et al., 1998; Kuscu, 1998 ] .
Reference: [ Koza, 1992 ] <author> John R. Koza. </author> <title> Genetic Programming: On the Programming of Computers by Natural Selection. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, USA, </address> <year> 1992. </year>
Reference-contexts: ant problem and the GP system we use to evolve solutions to it are briefly described in Sect. 2, our results are given and discussed in Sect. 3, and in Sect. 4 we give our conclusions. 2 The Artificial Ant Problem The genetic programming system and the artificial ant problem <ref> [ Koza, 1992, pages 147-155 ] </ref> were set up identically to [ Langdon and Poli, 1998 ] except the new training technique was used (see Table 1). The program primitives are the same as [ Koza, 1992, pages 147-155 ] except now food items on the trail are numbered in the <p> our conclusions. 2 The Artificial Ant Problem The genetic programming system and the artificial ant problem <ref> [ Koza, 1992, pages 147-155 ] </ref> were set up identically to [ Langdon and Poli, 1998 ] except the new training technique was used (see Table 1). The program primitives are the same as [ Koza, 1992, pages 147-155 ] except now food items on the trail are numbered in the order we expect the ant to eat them. The shortest distance along the trail to each food item is also calculated. Only the first x are placed on the grid initially. <p> This can be seen in Fig. 3 which plots the estimated minimum number of individuals that GP with a population size of 500 needs to create in order to have a probability of at least 99% of finding at least one solution. (This is known as "effort" required, cf. <ref> [ Koza, 1992, page 194 ] </ref> , see also Table 2). We estimate of the variability of the effort data by calculating the minimum effort assuming the proportion of successful runs at each generation is increased or decreased by one standard deviation. <p> As the trail is 144 squares long and has to be traversed within 600 time steps, programs have to be fairly efficient, consuming on average less than 600=144 4:2 energy units per square of trail traversed. Figure 5 shows the energy consumption of the evolved solution given in <ref> [ Koza, 1992, page 154 ] </ref> and the example programs from Figs. 1 and 2.
Reference: [ Kuscu, 1998 ] <author> Ibrahim Kuscu. </author> <title> Evolving a generalised behavior: Artificial ant problem revisited. </title> <editor> In V. William Porto, editor, </editor> <booktitle> Seventh Annual Conference on Evolutionary Programming, </booktitle> <address> Mission Valley Marriott, San Diego, California, USA, </address> <month> 25-27 March </month> <year> 1998. </year> <note> Springer-Verlag. to be presented. </note>
Reference: [ Langdon and Poli, 1998 ] <author> W. B. Langdon and R. Poli. </author> <title> Why ants are hard. </title> <editor> In John R. Koza, Wolfgang Banzhaf, Kumar Chellapilla, Kalyanmoy Deb, Marco Dorigo, David B. Fogel, Max H. Garzon, David E. Goldberg, Hitoshi Iba, and Rick Riolo, editors, </editor> <booktitle> Genetic Programming 1998: Proceedings of the Third Annual Conference, </booktitle> <institution> University of Wisconsin, Madison, Wisconsin, USA, </institution> <month> 22-25 July </month> <year> 1998. </year> <note> Morgan Kaufmann. To be presented at GP-98. </note>
Reference-contexts: Recently we have shown performance of several techniques is not much better than the best performance obtainable using uniform random search <ref> [ Langdon and Poli, 1998 ] </ref> . We suggested that this was because the program fitness landscape is difficult for hill climbers and the problem contains multiple levels of deception which also makes it difficult for Genetic Algorithms. <p> anticipate that almost all optimal points within it will retain their scores and many previously high scoring non-optimal points will be given reduced fitness by the new training regime. (Of the 3916 solutions to the Santa Fe trail problem found by exhaustive search, uniform random and ramped half-and-half random search <ref> [ Langdon and Poli, 1998 ] </ref> , all but at most 2 completed the trail. These solutions are available via anonymous ftp from ftp.cs.bham.ac.uk directory pub/authors/W.B.Langdon/gp-code file antsol.tar.gz). <p> to it are briefly described in Sect. 2, our results are given and discussed in Sect. 3, and in Sect. 4 we give our conclusions. 2 The Artificial Ant Problem The genetic programming system and the artificial ant problem [ Koza, 1992, pages 147-155 ] were set up identically to <ref> [ Langdon and Poli, 1998 ] </ref> except the new training technique was used (see Table 1). The program primitives are the same as [ Koza, 1992, pages 147-155 ] except now food items on the trail are numbered in the order we expect the ant to eat them. <p> Points offset slightly to improve presentation. Table 2: Effort (in 1,000s) to solve Santa Fe Trail (no program size restriction) Training Technique Effort (min) (max) ok/runs Best uniform random, length=18 455 414 505 101/- Original 320 266 396 35/200 Strict Hill Climbing 50%-150% mutation <ref> [ Langdon and Poli, 1998 ] </ref> 188 118 433 8/50 [ Chellapilla, 1997 ] 136 47/59 scalar speed 196 130 382 9/50 1 food ahead 120 88 152 19/50 1 food ahead, ramped energy 555 390 900 7/50 1 food ahead, ramped energy, scalar speed 230 170 349 13/50 5 food <p> Thresholds of 1.0 and 2.0 on the scaled speed where tried. Again, as Table 2 "Pareto" shows, no improvement above that obtained with simply limiting the amount of food ahead of the ant was seen. 3.4 One Point Crossover In our previous work <ref> [ Langdon and Poli, 1998 ] </ref> we suggested reasons why the original Santa Fe ant problem is difficult for Genetic Algorithms. However we hoped that the improved training techniques above would have rendered the search space less deceptive. <p> In terms of the effort required (120,000) it is approximately three times easier and GP performs about as well as the best results previously obtained using variable length hill climbers (187,500) <ref> [ Langdon, 1998c; Langdon and Poli, 1998 ] </ref> and size restricted EP search (136,000) [ Chellapilla, 1997 ] . By enforcing an optimal size limit on the programs being evolved we might be able to do marginally better (104,000, size 50).
Reference: [ Langdon, 1998a ] <author> W. B. Langdon. </author> <title> Better trained ants. </title> <editor> In R. Poli, W. B. Langdon, W. Banzhaf, M. Schoe-nauer, and T. C. Fogarty, editors, </editor> <booktitle> Late Breaking Papers at the First European Workshop on Genetic Programming, </booktitle> <address> Paris, </address> <month> 14-15 April </month> <year> 1998. </year> <month> Forthcoming. </month>
Reference-contexts: Population Size: 500 Initial population: Created using "ramped half-and-half" with a max depth of 6 (duplicates allowed) Parameters: 90% crossover, 10% reproduction, no size limit Termination: Maximum number of generations G = 50 extend interim results presented in <ref> [ Langdon, 1998a ] </ref> by requiring the ant to find food quickly, by including its speed in the fitness function and by solving the problem using one point crossover. The changes to the fitness function are intended to make the landscape less deceptive and so easier for genetic algorithms.
Reference: [ Langdon, 1998b ] <author> W. B. Langdon. </author> <title> Data Structures and Genetic Programming. </title> <address> Kulwer, </address> <year> 1998. </year> <month> Forthcoming. </month>
Reference-contexts: This is linearly scaled by dividing it by the speed required to complete the trail (i.e. 144/600). The second mechanism was to treat the scaled speed as a second objective. Multi-objective Pareto tournament selection was used to decide which programs were selected for reproduction using the mechanism described in <ref> [ Langdon, 1998b ] </ref> . In multi-object tournaments it is possible that two or more members of the tournament are not dominated by any others. E.g. one eats less than the other but moves faster. <p> The winner being the one which is worse than the smallest number of other individuals from the (sample of the) rest of the population. (We treat having exactly the same fitness as being worse). Sample sizes of 25 and 200 were tried. In <ref> [ Langdon, 1998b ] </ref> use of such a comparsion set was found to be very effective, perhaps as it tends to avoid the population converging on a small number 6 Table 3: One Point Parameters (as Table 1 unless stated) Crossover: 100% one point producing one child. 90% of crossover children
Reference: [ Langdon, 1998c ] <author> W. B. Langdon. </author> <title> The evolution of size in variable length representations. </title> <booktitle> In 1998 IEEE International Conference on Evolutionary Computation, </booktitle> <address> Anchorage, Alaska, USA, </address> <month> 5-9 May </month> <year> 1998. </year> <month> Forthcoming. </month>
Reference-contexts: In terms of the effort required (120,000) it is approximately three times easier and GP performs about as well as the best results previously obtained using variable length hill climbers (187,500) <ref> [ Langdon, 1998c; Langdon and Poli, 1998 ] </ref> and size restricted EP search (136,000) [ Chellapilla, 1997 ] . By enforcing an optimal size limit on the programs being evolved we might be able to do marginally better (104,000, size 50).
Reference: [ Lee and Wong, 1995 ] <author> Jack Y. B. Lee and P. C. Wong. </author> <title> The effect of function noise on GP efficiency. </title> <editor> In X. Yao, editor, </editor> <booktitle> Progress in Evolutionary Computation, volume 956 of Lecture Notes in Artificial Intelligence, </booktitle> <pages> pages 1-16. </pages> <publisher> Springer-Verlag, </publisher> <address> Heidelberg, Germany, </address> <year> 1995. </year> <month> 8 </month>
Reference: [ Luke and Spector, 1997 ] <author> Sean Luke and Lee Spector. </author> <title> A comparison of crossover and mutation in genetic programming. </title> <editor> In John R. Koza, Kalyanmoy Deb, Marco Dorigo, David B. Fogel, Max Garzon, Hitoshi Iba, and Rick L. Riolo, editors, </editor> <booktitle> Genetic Programming 1997: Proceedings of the Second Annual Conference, </booktitle> <pages> pages 240-248, </pages> <address> Stanford University, CA, USA, 13-16 July 1997. </address> <publisher> Morgan Kaufmann. </publisher>
Reference: [ Poli and Langdon, 1997 ] <author> Riccardo Poli and W. B. Langdon. </author> <title> Genetic programming with one-point crossover. </title> <editor> In P. K. Chawdhry, R. Roy, and R. K. Pant, editors, </editor> <booktitle> Second On-line World Conference on Soft Computing in Engineering Design and Manufacturing. </booktitle> <publisher> Springer-Verlag London, </publisher> <month> 23-27 June </month> <year> 1997. </year> <month> 9 </month>
Reference-contexts: However we hoped that the improved training techniques above would have rendered the search space less deceptive. In this section we investigate using one point crossover <ref> [ Poli and Langdon, 1997 ] </ref> and point mutation. Performance of one point crossover with point mutation was found to be similar to standard crossover. The parameters we used were the same as for standard GP crossover (as given in Table 1) except those shown given in Table 3.
References-found: 13

