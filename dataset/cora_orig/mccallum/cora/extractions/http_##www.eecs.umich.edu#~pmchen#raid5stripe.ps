URL: http://www.eecs.umich.edu/~pmchen/raid5stripe.ps
Refering-URL: http://www.eecs.umich.edu/~pmchen/
Root-URL: http://www.cs.umich.edu
Email: pmchen@eecs.umich.edu  eklee@src.dec.com  
Title: Striping in a RAID Level 5 Disk Array absence of specific workload information) that the
Author: Peter M. Chen Edward K. Lee 
Note: Together, these trends lead us to recommend (in the  
Address: Michigan  
Affiliation: Computer Science Division Electrical Engineering and Computer Science Department University of  Systems Research Center Digital Equipment Corporation  
Abstract: Redundant disk arrays are an increasingly popular way to improve I/O system performance. Past research has studied how to stripe data in non-redundant (RAID Level 0) disk arrays, but none has yet been done on how to stripe data in redundant disk arrays such as RAID Level 5, or on how the choice of striping unit varies with the number of disks. Using synthetic workloads, we derive simple design rules for striping data in RAID Level 5 disk arrays given varying amounts of workload information. We then validate the synthetically derived design rules using real workload traces to show that the design rules apply well to real systems. We find no difference in the optimal striping units for RAID Level 0 and 5 for read-intensive workloads. For write-intensive workloads, in contrast, the overhead of maintaining parity causes full-stripe writes (writes that span the entire error-correction group) to be more efficient than read-modify writes or reconstruct writes. This additional factor causes the optimal striping unit for RAID Level 5 to be four times smaller for write-intensive workloads than for read-intensive workloads. We next investigate how the optimal striping unit varies with the number of disks in an array. We find that the optimal striping unit for reads in a RAID Level 5 varies inversely to the number of disks, but that the optimal striping unit for writes varies with the number of disks. Overall, we find that the optimal striping unit for workloads with an unspecified mix of reads and writes is independent of the number of disks. 
Abstract-found: 1
Intro-found: 1
Reference: [Chen90] <author> Peter M. Chen and David A. Patterson. </author> <title> Maximizing Performance in a Striped Disk Array. </title> <booktitle> In Proceedings of the 1990 International Symposium on Computer Architecture, </booktitle> <pages> pages 322331, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: One of the most crucial parameters in designing a disk array is the size of the striping unit. The striping unit determines how a logical request from a user is broken up into physical disk requests to the disks. This distribution profoundly affects a disk arrays performance <ref> [Chen90] </ref> shows that performance of a non-redundant disk array (RAID Level 0) can vary by an order of magnitude depending on the striping unit. <p> This distribution profoundly affects a disk arrays performance [Chen90] shows that performance of a non-redundant disk array (RAID Level 0) can vary by an order of magnitude depending on the striping unit. Several papers address how to choose the striping unit in non-redundant disk arrays <ref> [Chen90, Lee93a, Scheuer-mann91] </ref>, but none have yet examined how to choose it in a RAID Level 5 1 . The overhead of maintaining parity in a RAID Level 5 leads to additional factors in choosing the best striping unit. <p> Small striping units can make use of all disks even with low workload concurrency, but they cause the disks to transfer less data per access. Chen and Patterson investigate these tradeoffs in a RAID Level 0 with 16 disks <ref> [Chen90] </ref>. They find that the choice of striping unit depends heavily on the workload concurrency and only minimally on the workloads average request size. <p> called the zero-knowledge coefficient, since it applies when no workload information is given, and is found to be approximately 2/3 for a 16-disk disk array Note that the above two equations can be re-written to depend on only one composite disk parameter: (average disk positioning time) * (disk transfer rate). <ref> [Chen90] </ref> calls this term the disk performance product. In this paper, we extend the work of [Chen90] to RAID Level 5 disk arrays. <p> to be approximately 2/3 for a 16-disk disk array Note that the above two equations can be re-written to depend on only one composite disk parameter: (average disk positioning time) * (disk transfer rate). <ref> [Chen90] </ref> calls this term the disk performance product. In this paper, we extend the work of [Chen90] to RAID Level 5 disk arrays. Section 2.2 describes how the choice of striping unit in a RAID Level 5 differs from that in a RAID Level 0 due to the effect of maintaining parity when performing writes in a RAID Level 5. <p> Lee and Katz [Lee91, Lee93a] develop an analytic model of non-redundant disk arrays and derive an equation for the optimal striping unit to be Taken together, <ref> [Chen90] </ref> and [Lee91, Lee93a] conclude that the striping unit depends on the disk performance product and concurrency. [Lee91, Lee93a] conclude that the optimal striping unit depends on request size, but [Chen90] shows that this dependence can be ignored with less than a 5% performance penalty. <p> an analytic model of non-redundant disk arrays and derive an equation for the optimal striping unit to be Taken together, <ref> [Chen90] </ref> and [Lee91, Lee93a] conclude that the striping unit depends on the disk performance product and concurrency. [Lee91, Lee93a] conclude that the optimal striping unit depends on request size, but [Chen90] shows that this dependence can be ignored with less than a 5% performance penalty. Scheuermann, Weikum, and Zabback show moderate performance improvements by allowing different striping unit for different files [Scheuermann91, Weikum92]. <p> In that maximizes the minimum percentage throughput is 40 KB. At that striping unit, all workloads considered yield at least 98% of their maximum possible throughput. As in <ref> [Chen90] </ref>, we find that knowing the workload concurrency is more important than knowing request size. That is, it is possible to guarantee a higher percentage of maximum throughput if we only know the workload concurrency than if we only know request size. Concurrencies. <p> As in <ref> [Chen90] </ref>, if we know the concurrency of a read workload, it is possible to choose a striping unit that guarantees over 95% of the maximum throughput for any request sizes. <p> For 17 IBM Lightning disks, the slope of this line is 7.3 KB and hence S r is 0.22. This matches with results in <ref> [Chen90] </ref>. Next let us consider the case where we know the workload is 100% reads but have no information about the con-currency or request size. In this case we can choose a good compromise striping unit by superimposing all the graphs in As in [Chen90] we express this choice as 1. <p> This matches with results in <ref> [Chen90] </ref>. Next let us consider the case where we know the workload is 100% reads but have no information about the con-currency or request size. In this case we can choose a good compromise striping unit by superimposing all the graphs in As in [Chen90] we express this choice as 1. The minimum slope was chosen rather than the mean slope to enhance load balancing among disks. Concurrencies, Shown as Percentage of Maximum Throughput. Percentage of maximum throughput is shown as a function of the striping unit.
Reference: [Denning78] <author> Peter J. Denning and Jeffrey P. Buzen. </author> <title> The Operational Analysis of Queueing Network Models. </title> <journal> ACM Computing Surveys, </journal> <volume> 10(3), </volume> <month> September </month> <year> 1978. </year>
Reference-contexts: Reads perform uniformly better than writes due to the extra overhead of maintaining parity when writing data. 1. Littles Law implies that Throughput = Average_Re-quest_Size * Average_Concurrency/ Response_Time, so response time can be easily calculated for each workload from its throughput <ref> [Denning78] </ref>. In order to compare trends from different workloads more easily, we scale the throughput of each workload, expressing it as a percentage of the maximum throughput (Figure 4 and Figure 5).
Reference: [Gray90] <author> Jim Gray, Bob Horst, and Mark Walker. </author> <title> Parity Striping of Disc Arrays: Low-Cost Reliable Storage with Acceptable Throughput. </title> <booktitle> In Proceedings of the 16th Very Large Database Conference, </booktitle> <pages> pages 148160, </pages> <year> 1990. </year> <note> VLDB XVI. </note>
Reference-contexts: Even without knowing concurrency, one can still choose a striping unit that guarantees at least 50% of optimal performance for any concurrency and request size. That 1. <ref> [Gray90] </ref> describes a scheme called parity striping that has similar performance to a RAID Level 5 with infinitely large striping unit. [Gray90] does not investigate different striping units for RAID Level 5 disk arrays, however. 0 1 2 3 P0 10 11 P2 8 9 P4 16 17 18 19 disk <p> Even without knowing concurrency, one can still choose a striping unit that guarantees at least 50% of optimal performance for any concurrency and request size. That 1. <ref> [Gray90] </ref> describes a scheme called parity striping that has similar performance to a RAID Level 5 with infinitely large striping unit. [Gray90] does not investigate different striping units for RAID Level 5 disk arrays, however. 0 1 2 3 P0 10 11 P2 8 9 P4 16 17 18 19 disk 0 disk 1 disk 2 disk 3 disk 4 Disk Array.
Reference: [IBM89] <institution> IBM 0661 Disk Drive Product Description Model 371. </institution> <type> Technical report, </type> <institution> IBM, </institution> <month> July </month> <year> 1989. </year>
Reference-contexts: The paper uses simulation to study the effects of the above factors and determine guidelines for selecting the best striping unit. 3 Experimental Design 3.1 The Disk Model We model several types of disks in our study. The default disks are IBM Lightning 3.5 disks <ref> [IBM89] </ref>. In order to maintain the same disk array capacity, we only use the first 300 MB of each disk. Thus the effective average seek time for the Seagate Elite3 disks is 3 times faster than if we had spread requests over the entire disk.
Reference: [Lee91] <author> Edward K. Lee and Randy H. Katz. </author> <title> An Analytic Performance Model of Disk Arrays and its Applications. </title> <type> Technical Report UCB/CSD 91/660, </type> <institution> University of California at Berkeley, </institution> <year> 1991. </year>
Reference-contexts: Section 2.2 describes how the choice of striping unit in a RAID Level 5 differs from that in a RAID Level 0 due to the effect of maintaining parity when performing writes in a RAID Level 5. Lee and Katz <ref> [Lee91, Lee93a] </ref> develop an analytic model of non-redundant disk arrays and derive an equation for the optimal striping unit to be Taken together, [Chen90] and [Lee91, Lee93a] conclude that the striping unit depends on the disk performance product and concurrency. [Lee91, Lee93a] conclude that the optimal striping unit depends on request <p> Lee and Katz <ref> [Lee91, Lee93a] </ref> develop an analytic model of non-redundant disk arrays and derive an equation for the optimal striping unit to be Taken together, [Chen90] and [Lee91, Lee93a] conclude that the striping unit depends on the disk performance product and concurrency. [Lee91, Lee93a] conclude that the optimal striping unit depends on request size, but [Chen90] shows that this dependence can be ignored with less than a 5% performance penalty. <p> Lee and Katz <ref> [Lee91, Lee93a] </ref> develop an analytic model of non-redundant disk arrays and derive an equation for the optimal striping unit to be Taken together, [Chen90] and [Lee91, Lee93a] conclude that the striping unit depends on the disk performance product and concurrency. [Lee91, Lee93a] conclude that the optimal striping unit depends on request size, but [Chen90] shows that this dependence can be ignored with less than a 5% performance penalty. Scheuermann, Weikum, and Zabback show moderate performance improvements by allowing different striping unit for different files [Scheuermann91, Weikum92]. <p> Thus we expect that the coefficients will vary inversely to the number of disks in the array. Figure 7 shows that Z r does indeed vary inversely to the number of disks. <ref> [Lee91, Lee93a] </ref> predict that the striping unit will vary inversely to the square root of the number of disks. We find empirically that the optimal striping unit for read-intensive workloads varies inversely to the cube root of the number of disks.
Reference: [Lee93a] <author> Edward K. Lee and Randy H. Katz. </author> <title> An Analytic Performance Model of Disk Arrays. </title> <booktitle> In Proceedings of the 1993 ACM SIGMETRICS Conference on Measurement and Modeling of Computer Systems, </booktitle> <pages> pages 98109, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: This distribution profoundly affects a disk arrays performance [Chen90] shows that performance of a non-redundant disk array (RAID Level 0) can vary by an order of magnitude depending on the striping unit. Several papers address how to choose the striping unit in non-redundant disk arrays <ref> [Chen90, Lee93a, Scheuer-mann91] </ref>, but none have yet examined how to choose it in a RAID Level 5 1 . The overhead of maintaining parity in a RAID Level 5 leads to additional factors in choosing the best striping unit. <p> Section 2.2 describes how the choice of striping unit in a RAID Level 5 differs from that in a RAID Level 0 due to the effect of maintaining parity when performing writes in a RAID Level 5. Lee and Katz <ref> [Lee91, Lee93a] </ref> develop an analytic model of non-redundant disk arrays and derive an equation for the optimal striping unit to be Taken together, [Chen90] and [Lee91, Lee93a] conclude that the striping unit depends on the disk performance product and concurrency. [Lee91, Lee93a] conclude that the optimal striping unit depends on request <p> Lee and Katz <ref> [Lee91, Lee93a] </ref> develop an analytic model of non-redundant disk arrays and derive an equation for the optimal striping unit to be Taken together, [Chen90] and [Lee91, Lee93a] conclude that the striping unit depends on the disk performance product and concurrency. [Lee91, Lee93a] conclude that the optimal striping unit depends on request size, but [Chen90] shows that this dependence can be ignored with less than a 5% performance penalty. <p> Lee and Katz <ref> [Lee91, Lee93a] </ref> develop an analytic model of non-redundant disk arrays and derive an equation for the optimal striping unit to be Taken together, [Chen90] and [Lee91, Lee93a] conclude that the striping unit depends on the disk performance product and concurrency. [Lee91, Lee93a] conclude that the optimal striping unit depends on request size, but [Chen90] shows that this dependence can be ignored with less than a 5% performance penalty. Scheuermann, Weikum, and Zabback show moderate performance improvements by allowing different striping unit for different files [Scheuermann91, Weikum92]. <p> Thus we expect that the coefficients will vary inversely to the number of disks in the array. Figure 7 shows that Z r does indeed vary inversely to the number of disks. <ref> [Lee91, Lee93a] </ref> predict that the striping unit will vary inversely to the square root of the number of disks. We find empirically that the optimal striping unit for read-intensive workloads varies inversely to the cube root of the number of disks.
Reference: [Lee93b] <author> Edward K. Lee and Randy H. Katz. </author> <title> The Performance of Parity Placement in Disk Arrays. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 42(6), </volume> <month> June </month> <year> 1993. </year>
Reference-contexts: Each parity block contains the parity for the data blocks in its row. For example, P0 contains the parity computed over data blocks 0-3. The specific data distribution shown here (and used throughout the paper) is called the left symmetric distribution <ref> [Lee93b] </ref>. Proceedings of the 1995 ACM SIGMETRICS Conference on Measurement and Modeling of Computer Systems striping unit is Z * average positioning time * disk trans-fer rate, where Z (with 17 disks) is approximately 2/3 for reads and 1/6 for writes. <p> Again, this matches closely to previous results. Table 2 lists results for different disk types and shows that Z r and S r are independent of disk technology. 4.2 Write Workloads Now that we have verified that reads in a RAID Level 5 using the left-symmetric parity placement <ref> [Lee93b] </ref> lead to identical striping unit choices as I/Os in a non-redundant disk array, we turn our attention to writes in a RAID Level 5.
Reference: [Miller91] <author> Ethan L. Miller and Randy H. Katz. </author> <booktitle> Input/Output Behavior of Supercomputing Applications. In Proceedings of Supercomputing 1991, </booktitle> <pages> pages 567576, </pages> <month> November </month> <year> 1991. </year>
Reference-contexts: The traces we use come from Miller and Katzs supercomputing workload study and capture the I/Os from a range of climate modeling, aerodynamic, turbulence, and structural dynamics applications <ref> [Miller91] </ref>. The traces are at the file system level and did not capture the disk location of each access, so we processed the traces using a simple, extent-based file allocation. Each file is allocated as a single, contiguous extent in the disk arrays logical address space.
Reference: [Patterson88] <author> David A. Patterson, Garth Gibson, and Randy H. Katz. </author> <title> A Case for Redundant Arrays of Inexpensive Disks (RAID). </title> <booktitle> In International Conference on Management of Data (SIGMOD), </booktitle> <pages> pages 109116, </pages> <month> June </month> <year> 1988. </year>
Reference-contexts: 1 Introduction For the past several decades, input/output (I/O) performance has not kept up with advances in processing speeds. Disk arrays have been proposed and used to increase aggregate disk performance by ganging together multiple disks in parallel <ref> [Patterson88] </ref>. Redundant disk arrays add error-correcting codes to improve reliability. One popular type of redundant disk array interleaves data in block-sized units known as striping units and uses parity to protect against failures. This type of disk array is known as a RAID Level 5 (Figure 1) [Patterson88]. <p> disks in parallel <ref> [Patterson88] </ref>. Redundant disk arrays add error-correcting codes to improve reliability. One popular type of redundant disk array interleaves data in block-sized units known as striping units and uses parity to protect against failures. This type of disk array is known as a RAID Level 5 (Figure 1) [Patterson88]. One of the most crucial parameters in designing a disk array is the size of the striping unit. The striping unit determines how a logical request from a user is broken up into physical disk requests to the disks.
Reference: [Ruemmler94] <author> Chris Ruemmler and John Wilkes. </author> <title> An Introduction to Disk Drive Modeling. </title> <booktitle> IEEE Computer, </booktitle> <pages> pages 1728, </pages> <month> March </month> <year> 1994. </year>
Reference-contexts: RaidSim simulates each workload until the mean response time is within 5% of the true mean at a 95% confidence level. This typically requires simulating several thousand requests. The disks support request merging (as is provided by an on-disk cache <ref> [Ruemmler94] </ref>). That is, if a disk receives two consecutive requests two adjacent disk blocks, it services these requests as though they had been one large requests. 3.4 Metrics Common disk system performance metrics are throughput and response time.
Reference: [Scheuermann91] <author> Peter Scheuermann, Gerhard Weikum, and Peter Zabback. </author> <title> Automatic Tuning of Data Placement and Load Balancing in Disk Arrays. Database Systems for Next-Generation Applications: </title> <booktitle> Principles and Practice, </booktitle> <year> 1991. </year> <month> DBS-92-91. </month>
Reference-contexts: Scheuermann, Weikum, and Zabback show moderate performance improvements by allowing different striping unit for different files <ref> [Scheuermann91, Weikum92] </ref>.
Reference: [Thisquen88] <author> Jean Thisquen. </author> <title> Seek Time Measurements. </title> <type> Technical report, </type> <institution> Amdahl Peripheral Products Division, </institution> <month> May </month> <year> 1988. </year>
Reference-contexts: The square root term in the above formula models the constant acceleration/deceleration period of the disk head and the linear term models the period after maximum disk head velocity is reached. We have compared the model to the seek profile of the Amdahl 6380A <ref> [Thisquen88] </ref> and IBM Lightning and have found the model to closely approximate the seek profile of the actual disk. We did not model zone-bit recording; instead, we assumed an average transfer rate over all cylinders.
Reference: [Weikum92] <author> Gerhard Weikum and Peter Zabback. </author> <title> Tuning of Striping Units in Disk-Array-Based File Systems. </title> <booktitle> In Proceedings of the 2nd International Workshop on Research Issues on Data Engineering: Transaction and Query Processing, </booktitle> <pages> pages 8087, </pages> <year> 1992. </year>
Reference-contexts: Scheuermann, Weikum, and Zabback show moderate performance improvements by allowing different striping unit for different files <ref> [Scheuermann91, Weikum92] </ref>.
References-found: 13

