URL: http://polaris.cs.uiuc.edu/reports/1416.ps.gz
Refering-URL: http://polaris.cs.uiuc.edu/tech_reports.html
Root-URL: http://www.cs.uiuc.edu
Title: On Solving Block Toeplitz Systems Using a Block Schur Algorithm  
Author: Srikanth Thirumalai, Kyle Gallivan and Paul Van Dooren 
Date: April 10, 1995  
Abstract: This paper presents a block Schur algorithm to obtain a factorization of a symmetric block Toeplitz matrix. It is inspired by the various block Schur algorithms that have appeared in the literature but which have not considered the influence of performance tradeoffs on implementation choices. We develop a version based on block hyperbolic Householder reflectors by adapting the representation schemes for block Householder reflectors in the literature to the hyperbolic case. The basic algorithm is applicable to symmetric positive definite Toeplitz matrices. Leading evidence is presented that, under certain circumstances, performance gains can be obtained by foregoing some of the Toeplitz structure by using have a block size larger than the actual block size given by the structure of the matrix. This allows the block algorithm to also be used to factor efficiently standard symmetric positive definite Toeplitz matrices. An extension to the algorithm that can be used to solve symmetric Toeplitz systems that are indefinite is also presented. If a singular principal submatrix is encountered during the factorization, the matrix is perturbed and an approximate factorization is obtained. The error introduced into the solution is then reduced to acceptable levels by applying iterative refinement. Typically two steps are sufficient.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. Bischof and C. Van Loan. </author> <title> The wy representation for products of householder matrices. </title> <note> SIAM J. </note> <institution> Sci. Stat. Comput., 8:s2-s13, </institution> <year> 1987. </year>
Reference-contexts: We extend their idea to block hyperbolic Householder transformations (required in the block Schur algorithm), using representations very similar to those proposed in <ref> [1] </ref> and [10]. Let W be a diagonal matrix whose entries are either +1 or 1. <p> This allows us to use level-3 BLAS primitives rather than level-2 BLAS operations if we applied the transformations sequentially. Storage efficient ways to block regular Householder transformations are derived in <ref> [1] </ref> and [10]. We extend these methods to hyperbolic Householder transforms. Suppose U = U r U r1 : : : U 2 U 1 is a product of r n fi n hyperbolic Householder matrices. <p> Suppose U = U r U r1 : : : U 2 U 1 is a product of r n fi n hyperbolic Householder matrices. The matrix U can be written in two forms corresponding to the V Y form and the Y T Y T form derived in <ref> [1] </ref> and [10]. The two forms of the V Y representation differ in the types of primitives they use.
Reference: [2] <author> J. Chun and Thomas Kailath. </author> <title> Generalized displacement structure for block toeplitz, toeplitz block and toeplitz derived matrices. </title> <institution> Informations Systems Lab., Stanford University, </institution> <address> CA, </address> <year> 1988. </year>
Reference-contexts: The algorithm is a block version of the algorithm described in [5] and [4] and is based on ideas in [8] and <ref> [2] </ref>. In those papers, algorithms for factoring matrices with small displacement rank using hyperbolic Householder matrices are presented. <p> Let T j = L 1 1 ^ T j . It is easy to see that T 1 = L T 1 . We now define two matrices G 1 (T ) and G 2 (T ) as follows [8], <ref> [2] </ref>: G 1 (T ) = B B B B T 1 T 2 T 3 : : : T p . . . . . . . . . . . . . . .
Reference: [3] <author> Paul Concus and Paul Saylor. </author> <title> A modified direct preconditioner for indefinite symmetric toeplitz systems. </title> <institution> Department of Computer Science, University of Illinois at Urbana Champaign. </institution>
Reference-contexts: This perturbation allows us to continue the factorization process but introduces numerical instability in the algorithm. One way to circumvent the possible numerical instability of the Schur algorithm is to use iterative refinement on the system of equations. The perturbation technique has been used in <ref> [3] </ref> for the Levinson algorithm. They use the approximate factorization as a preconditioner in the conjugate-gradient algorithm. <p> In this subsection we show how to obtain this by selective perturbations introduced in the Schur algorithm. Similar ideas have independently been developed for the Levinson algorithm by Concus and Saylor <ref> [3] </ref>.
Reference: [4] <author> G. Cybenko and M. Berry. </author> <title> Hyperbolic householder algorithms for factoring structured matrices. </title> <journal> SIAM J. Matrix Anal. Appl, </journal> <volume> 11 </volume> <pages> 499-520, </pages> <month> October </month> <year> 1990. </year>
Reference-contexts: Moreover, T is symmetric. Given a symmetric positive definite block Toeplitz matrix, an algorithm which computes a lower triangular matrix, L 2 &lt; mkfimk such that A = LL T is derived. The algorithm is a block version of the algorithm described in [5] and <ref> [4] </ref> and is based on ideas in [8] and [2]. In those papers, algorithms for factoring matrices with small displacement rank using hyperbolic Householder matrices are presented. We present an extension of the work of Cybenko and Berry [4] to symmetric positive definite block Toeplitz matrices based on the use of <p> algorithm is a block version of the algorithm described in [5] and <ref> [4] </ref> and is based on ideas in [8] and [2]. In those papers, algorithms for factoring matrices with small displacement rank using hyperbolic Householder matrices are presented. We present an extension of the work of Cybenko and Berry [4] to symmetric positive definite block Toeplitz matrices based on the use of block hyperbolic Householder matrices to fl Available as CSRD Report 1416 and in shortened form in the Proceedings of 1994 ICPP, pp. 274-281. 1 represent products of hyperbolic Householder reflectors. <p> ^ T j by and the W mp matrix becomes W mp = I p 0 # We then again use hyperbolic Householder transformations (now with respect to the new signature matrix W mp ) to reduce G to an upper triangular matrix. 3 Hyperbolic Householder transformations In their paper <ref> [4] </ref>, Cybenko and Berry use hyperbolic Householder transformations to reduce the generator matrix G of a scalar Toeplitz matrix to an upper triangular matrix [4]. <p> (now with respect to the new signature matrix W mp ) to reduce G to an upper triangular matrix. 3 Hyperbolic Householder transformations In their paper <ref> [4] </ref>, Cybenko and Berry use hyperbolic Householder transformations to reduce the generator matrix G of a scalar Toeplitz matrix to an upper triangular matrix [4]. We extend their idea to block hyperbolic Householder transformations (required in the block Schur algorithm), using representations very similar to those proposed in [1] and [10]. Let W be a diagonal matrix whose entries are either +1 or 1. <p> Let x be a column vector such that x T W x 6= 0. A hyperbolic Householder matrix is defined as follows: U x = W x T W x One easily checks <ref> [4] </ref> and [9] that U x is W -unitary, i.e., U T x W U x = W . These transformations can be used to map one vector to another as long as they have the same hyperbolic norm, i.e., if a T W a = b T W b. <p> In Section 5, we discuss the three forms in the context of our algorithm. 5 The Factorization Algorithm The following algorithm is used to reduce matrix G (7) described in Section 2 to an upper triangular matrix. This algorithm is essentially the same as the one described in <ref> [4] </ref> except that we are dealing with blocks instead of elements. We describe the algorithm using an example as follows. Let T = G T W mp G where G and W mp are as shown in (17).
Reference: [5] <author> J.-M. Delosme and I. Ipsen. </author> <title> Parallel solution of symmetric positive definite systems with hyperbolic rotations. </title> <journal> Linear Algebra Appl., </journal> <volume> 77 </volume> <pages> 75-111, </pages> <year> 1986. </year>
Reference-contexts: Moreover, T is symmetric. Given a symmetric positive definite block Toeplitz matrix, an algorithm which computes a lower triangular matrix, L 2 &lt; mkfimk such that A = LL T is derived. The algorithm is a block version of the algorithm described in <ref> [5] </ref> and [4] and is based on ideas in [8] and [2]. In those papers, algorithms for factoring matrices with small displacement rank using hyperbolic Householder matrices are presented.
Reference: [6] <author> J. Dongarra, J. DuCroz, I. Duff, and S. Hammarling. </author> <title> A proposal for a set of level 3 basic linear algebra subprograms. </title> <journal> ACM SIGNUM Newsletter, </journal> <volume> 22(3) </volume> <pages> 2-14, </pages> <year> 1987. </year>
Reference-contexts: Block operations are desirable since they are rich in level-3 BLAS operations <ref> [6] </ref>, [7]. The algorithm can also be used to factor symmetric positive-definite Toeplitz matrices by foregoing some of the Toeplitz structure in the matrix and considering it to be a block Toeplitz matrix. The factorization of symmetric indefinite Toeplitz matrices is handled by a modification to the block algorithm.
Reference: [7] <author> K. A. Gallivan, R. J. Plemmons, and A. H. Sameh. </author> <title> Parallel algorithms for dense linear algebra computations. </title> <journal> SIAM Review, </journal> <volume> 32 </volume> <pages> 54-135, </pages> <year> 1990. </year>
Reference-contexts: Block operations are desirable since they are rich in level-3 BLAS operations [6], <ref> [7] </ref>. The algorithm can also be used to factor symmetric positive-definite Toeplitz matrices by foregoing some of the Toeplitz structure in the matrix and considering it to be a block Toeplitz matrix. The factorization of symmetric indefinite Toeplitz matrices is handled by a modification to the block algorithm. <p> If the block size m is very large, then on machines with hierarchical memory like the Alliant FX/8 or the Cedar multiprocessor a two level blocking scheme <ref> [7] </ref> can be used where the hyperbolic Householders are blocked every k steps and the block transformations are applied to the remaining portion of the pivot block or the entire generator matrix. <p> The most important tradeoff consideration is the choice of the block size. Fortunately, we have found that this issue lends itself to a relatively straightforward analysis similar to that described in <ref> [7] </ref> when details of the architectures influence on the design details of the BLAS primitives are available.
Reference: [8] <author> Thomas Kailath, Sun-Yuan Kung, and Martin Morf. </author> <title> Displacement ranks of matrices and linear equations. </title> <journal> Journal of Mathematical Analysis and Applications, </journal> <volume> 68 </volume> <pages> 395-407, </pages> <year> 1979. </year>
Reference-contexts: Given a symmetric positive definite block Toeplitz matrix, an algorithm which computes a lower triangular matrix, L 2 &lt; mkfimk such that A = LL T is derived. The algorithm is a block version of the algorithm described in [5] and [4] and is based on ideas in <ref> [8] </ref> and [2]. In those papers, algorithms for factoring matrices with small displacement rank using hyperbolic Householder matrices are presented. <p> It has been observed that typically two steps of iterative refinement are sufficient to solve the system. An outline of this paper is as follows. Section 2 contains derivations of the generator matrices for block Toeplitz matrices as defined in <ref> [8] </ref>. This section also reviews hyperbolic Householder reflectors, introduces some storage and computation efficient ways to construct them and presents the algorithm to factor symmetric positive definite block Toeplitz matrices. Modifications to the algorithm for the indefinite case are also discussed. <p> I m 3 7 7 7 5 The Schur algorithm is based on the fact that the displacement of a block Toeplitz matrix T , defined as T Z T T Z, has a rank of at most 2m <ref> [8] </ref>. <p> Let T j = L 1 1 ^ T j . It is easy to see that T 1 = L T 1 . We now define two matrices G 1 (T ) and G 2 (T ) as follows <ref> [8] </ref>, [2]: G 1 (T ) = B B B B T 1 T 2 T 3 : : : T p . . . . . . . . . . . . . . .
Reference: [9] <author> Charles M. Rader and Allan O. Steinhardt. </author> <title> Hyperbolic householder transforms. </title> <journal> SIAM J. Matrix Anal. Appl., </journal> <volume> 9 </volume> <pages> 269-290, </pages> <month> April </month> <year> 1988. </year>
Reference-contexts: Let x be a column vector such that x T W x 6= 0. A hyperbolic Householder matrix is defined as follows: U x = W x T W x One easily checks [4] and <ref> [9] </ref> that U x is W -unitary, i.e., U T x W U x = W . These transformations can be used to map one vector to another as long as they have the same hyperbolic norm, i.e., if a T W a = b T W b.
Reference: [10] <author> Robert Schreiber and Charles Van Loan. </author> <title> A storage-efficient wy representation for products of householder transformations. </title> <journal> SIAM J. Sci. Stat. Comput., </journal> <volume> 10(1) </volume> <pages> 53-57, </pages> <month> January </month> <year> 1989. </year>
Reference-contexts: We extend their idea to block hyperbolic Householder transformations (required in the block Schur algorithm), using representations very similar to those proposed in [1] and <ref> [10] </ref>. Let W be a diagonal matrix whose entries are either +1 or 1. <p> This allows us to use level-3 BLAS primitives rather than level-2 BLAS operations if we applied the transformations sequentially. Storage efficient ways to block regular Householder transformations are derived in [1] and <ref> [10] </ref>. We extend these methods to hyperbolic Householder transforms. Suppose U = U r U r1 : : : U 2 U 1 is a product of r n fi n hyperbolic Householder matrices. <p> The matrix U can be written in two forms corresponding to the V Y form and the Y T Y T form derived in [1] and <ref> [10] </ref>. The two forms of the V Y representation differ in the types of primitives they use. Lemma 4.0.1 Suppose U (k) = W k +V k Y T k is a product of k nfin hyperbolic Householder matrices, where V k and Y k are n fi k matrices.
Reference: [11] <author> J. H. Wilkinson. </author> <title> The Algebraic Eigenvalue Problem. </title> <publisher> Oxford University Press, Oxford, </publisher> <address> England, </address> <year> 1965. </year> <title> Toeplitz matrices with different block sizes on the Cray-YMP. 10 Acknowledgements We would like to thank Michael Stewart for some useful suggestions on section 4 of this paper. Srikanth Thirumalai and Paul Van Dooren were partially supported by DARPA (Grant COM-NIST-UNIVMINN). Kyle Gallivan was supported by the National Science Foundation under grant number CCR-9120105. </title> <type> 28 </type>
Reference-contexts: and set r 1 = T x 1 + b. for i = 1; ::: Solve LDL T x i = r i if kx i k &lt; tol kx i k then stop else x i+1 = x i + x i endif endfor From the error analysis of <ref> [11] </ref> we know that the computed quantities x i ; x i and r i , satisfy the following identities r i = T x i + b + ffir i = r i + ffir i with kffir i k * i kT k kx i k (38) 23 (LDL
References-found: 11

