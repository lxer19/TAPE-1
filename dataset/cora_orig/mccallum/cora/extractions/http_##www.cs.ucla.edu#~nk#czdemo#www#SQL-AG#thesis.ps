URL: http://www.cs.ucla.edu/~nk/czdemo/www/SQL-AG/thesis.ps
Refering-URL: http://www.cs.ucla.edu/~nk/czdemo/www/SQL-AG/
Root-URL: http://www.cs.ucla.edu
Title: User-Defined Aggregates in Database Languages  
Author: Punit Bhargava 
Degree: A thesis submitted in partial satisfaction of the requirements for the degree Master of Science in Computer Science by  
Date: 1998  
Affiliation: University of California Los Angeles  
Abstract-found: 0
Intro-found: 1
Reference: [AAD96] <author> Sarneet Agarwal, Rakesh Agrawal, Prasad Deshpande, Ashish Gupta, Jeffrey F. Naughton, Raghu Ramakrishnan, and Sunita Sarawagi. </author> <title> "On the Computation of Multidimensional Aggregates." </title> <booktitle> In Proceedings of the 22nd VLDB Conference, </booktitle> <address> Bombay, India, </address> <year> 1996. </year>
Reference-contexts: The key requirement of these applications is the ability to aggregate across many sets of dimensions. Such a computation is a performance bottleneck for these applications. Aggregate extensions of particular interest in this context are data cubes and online aggregation. 1.1.1.1 Data Cube In Data cube <ref> [GBA96, RS97, AAD96, ZDN97, HRU96] </ref> , aggregates compute along multiple dimension and granularities. These are very useful in OLAP or multidimensional data analysis applications. For example an application could perform an aggregate computation along the time dimension, say every year, every season and so on.
Reference: [AC97] <author> Michael Abbey and Michael J. Corey. </author> <title> A Beginner's Guide. </title> <publisher> Mc-GrawHill Publishing Company, </publisher> <year> 1997. </year>
Reference-contexts: The actual average for the given data was 50045.8429. The approximate average was computed within an error margin of 0.34% after 735 out the 100,000 records were visited. 44 CHAPTER 5 Implementation Environment This chapter deals with the implementation environment used for SQL-AG. 5.1 Oracle Oracle <ref> [AC97] </ref> is the most commonly used database server in industry. It provides a comprehensive environment to support database applications. Along with good performance, Oracle also provides a tightly integrated procedural extension of SQL, PL/SQL.
Reference: [AS94] <author> Rakesh Agrawal and Ramkrishnan Srikant. </author> <title> "Fast Algorithm for Mininig Association Rules." </title> <booktitle> In Proceedings of the 20th VLDB Conference, </booktitle> <address> Santiago, Chile, </address> <year> 1994. </year>
Reference-contexts: The following are a few applications using aggregates: 3 * Mining for associations, * Data Classification, and * Time series applications. 1.1.2.1 Mining for Associations Data mining evolved as a set of application relating to discovery of relevant hidden information in databases, especially discovery of association rules <ref> [AS94, MPC96] </ref>. As an application is basket data analysis, where the data of purchased products (referred as items), is collected and associations between items are computed. An association rule is of the form X ) Y where X and Y are two sets of items.
Reference: [DD93] <author> C. J. Date and H. Darwen. </author> <title> A Guide to SQL Standard. </title> <publisher> Addison Wesley Publishing Company, </publisher> <year> 1993. </year>
Reference-contexts: Introduction With the increasing demands of new database applications such as OLAP, data warehousing and data mining, a need arises for an extension of current database systems, which implement SQL2 <ref> [DD93] </ref> standards. These applications in fact use new and complex aggregates extensively. SQL2 supports only five built-in aggregates and provides no mechanism to define new aggregates. Approaches based on ad-hoc extensions and procedurally defined aggregates have been tried, but have proven unsatisfactory due to their rigidity and complexity.
Reference: [Elk97] <author> Charles Elkan. </author> <title> "Boosting and Naive Bayesian Learning." </title> <booktitle> In Proceedings of the Third Internation Conference on Knowldge Discovery and Data, </booktitle> <year> 1997. </year>
Reference-contexts: An example of a training instance is: (D1, Sunny, Hot, High, Weak, Yes) Data classification outputs the expressions of predication made from dependents to targets. One of the expressions could be: (Outlook=Sunny) ) (PlayTennis =Yes) It has been shown that probability could be used for prediction. Naive Bayesian <ref> [Elk97] </ref> classifier which uses probability for prediction has shown significant results in terms of predictive performance. The next paragraph describes the fundamentals of Naive Bayesian classifier.
Reference: [GBA96] <author> Jim Gray, Adam Bosworth, and Hamid Pirahesh Andrew Layman. </author> <title> "Data Cube: A Relational Aggregation Operator Generalizing Group-By, </title> <booktitle> Cross-Tab, and Sub-Total." International Conference on Data Engineering, </booktitle> <year> 1996. </year>
Reference-contexts: The key requirement of these applications is the ability to aggregate across many sets of dimensions. Such a computation is a performance bottleneck for these applications. Aggregate extensions of particular interest in this context are data cubes and online aggregation. 1.1.1.1 Data Cube In Data cube <ref> [GBA96, RS97, AAD96, ZDN97, HRU96] </ref> , aggregates compute along multiple dimension and granularities. These are very useful in OLAP or multidimensional data analysis applications. For example an application could perform an aggregate computation along the time dimension, say every year, every season and so on.
Reference: [HHW97] <author> J. M. Hellerstein, P. J. Haas, and H. J. Wang. </author> <title> "Online Aggregation." </title> <booktitle> In Proceedings of ACM-SIGMOD Conference on Management of Data, </booktitle> <month> May </month> <year> 1997. </year>
Reference-contexts: These type of aggregates are useful in applications where an exact value is not needed and an approximate will suffice. The requirements of online aggregation and the details of an extension of POSTGRES95 to support online aggregation are discussed in <ref> [HHW97] </ref>. 1.1.2 Data Mining Data mining is a technology to extract information of predictive use hidden in the database. Along with other uses, data mining is useful for automated predictions of trends and behaviors and automatic discovery of previously unknown patterns.
Reference: [HRU96] <author> Venky Harinarayan, Anand Rajaraman, and Jeffrey D. Ullman. </author> <title> "Implementing Data Cubes Efficiently." </title> <booktitle> In Proceedings of ACM-SIGMOD Conference on Management of Data, </booktitle> <year> 1996. </year>
Reference-contexts: The key requirement of these applications is the ability to aggregate across many sets of dimensions. Such a computation is a performance bottleneck for these applications. Aggregate extensions of particular interest in this context are data cubes and online aggregation. 1.1.1.1 Data Cube In Data cube <ref> [GBA96, RS97, AAD96, ZDN97, HRU96] </ref> , aggregates compute along multiple dimension and granularities. These are very useful in OLAP or multidimensional data analysis applications. For example an application could perform an aggregate computation along the time dimension, say every year, every season and so on.
Reference: [Iso96a] <author> ISO/IEC JTC1/SC21 N10489 ISO//IEC 9075 Part 2 Committee. </author> <title> "Database Language SQL Part 2: </title> <address> SQL/Foundation." ftp://speckle.ncsl.nist.gov/isowg3/dbl/BASEdocs/cd-found.pdf, </address> <month> July </month> <year> 1996. </year>
Reference-contexts: RISQL supports pre-defined aggregates such as MovingAvg, MovingSum etc. It also allows the user to define queries with parameters using Create Macro. The commercial world is expected to move towards user-defined aggregates, once the SQL3 standards, which are still in development, will be introduced. SQL3 <ref> [Iso96a, Iso96b, Mat96] </ref> proposes a concept of SQL-invoked routines termed as iterative routines to allow user-defined aggregates.
Reference: [Iso96b] <author> ISO/IEC JTC1/SC21 N10491 and ISO//IEC 9075 Part 8 Committee. </author> <title> "Database Language SQL Part 8: </title> <address> SQL/Object." ftp://speckle.ncsl.nist.gov/isowg3/dbl/BASEdocs/cd-object.pdf, </address> <month> July </month> <year> 1996. </year>
Reference-contexts: RISQL supports pre-defined aggregates such as MovingAvg, MovingSum etc. It also allows the user to define queries with parameters using Create Macro. The commercial world is expected to move towards user-defined aggregates, once the SQL3 standards, which are still in development, will be introduced. SQL3 <ref> [Iso96a, Iso96b, Mat96] </ref> proposes a concept of SQL-invoked routines termed as iterative routines to allow user-defined aggregates.
Reference: [Mat96] <author> Nelson Mattos. </author> <title> "An Overview of the SQL3 Stan--dard." presentation foils, </title> <institution> Database Technology Institute, IBM Santa Teresa Lab, </institution> <address> San Jose,CA, ftp://speckle.ncsl.nist.gov/isowg3/dbl/BASEdocs/descriptions/SQL3 foils.ps, </address> <month> July </month> <year> 1996. </year>
Reference-contexts: RISQL supports pre-defined aggregates such as MovingAvg, MovingSum etc. It also allows the user to define queries with parameters using Create Macro. The commercial world is expected to move towards user-defined aggregates, once the SQL3 standards, which are still in development, will be introduced. SQL3 <ref> [Iso96a, Iso96b, Mat96] </ref> proposes a concept of SQL-invoked routines termed as iterative routines to allow user-defined aggregates.
Reference: [MPC96] <author> R. Meo, G. Psaila, and S. Ceri. </author> <title> "A New SQL-like Operator for Mining Association Rules." </title> <booktitle> In Proceedings of 22nd VLDB Conference, </booktitle> <address> Bombay, India, </address> <year> 1996. </year>
Reference-contexts: The following are a few applications using aggregates: 3 * Mining for associations, * Data Classification, and * Time series applications. 1.1.2.1 Mining for Associations Data mining evolved as a set of application relating to discovery of relevant hidden information in databases, especially discovery of association rules <ref> [AS94, MPC96] </ref>. As an application is basket data analysis, where the data of purchased products (referred as items), is collected and associations between items are computed. An association rule is of the form X ) Y where X and Y are two sets of items.
Reference: [NT89] <author> S. Naqvi and S. Tsur. </author> <title> A Logical Language For Data and Knowledge Bases. </title> <publisher> Computer Science Press, </publisher> <year> 1989. </year>
Reference-contexts: Int4div computes the average by dividing the first state variable be second state variable. 11 1.3.2 LDL++ Experience The logical data language LDL is a rule based language for databases <ref> [NT89, Zan88] </ref> developed at Microelectronics and Computer Technology Corporation. LDL++ supports lists, sets, complex objects, recursion and extensible aggregates. In LDL++ every aggregate function f on a set is inductively defined by: 1. BASE: f (fxg) on a singleton set fxg 2.
Reference: [Red96] <institution> Red Brick Inc. "Decision-Makers, Business Data and RISQL." </institution> <note> http://www.redbrick.com/rbs-g/html/whpap.html, August 1996. </note>
Reference-contexts: As we will see user-defined aggregates can be used to express temporal aggregates, under the assumption that the data is sorted according to time. 1.2 Commercial DBMS and SQL3 In response to their market, some commercial DBMS have implemented additional aggregates in their systems. For instance RISQL <ref> [Red96] </ref> is Red Brick's extension of SQL supporting complex queries and aggregates. RISQL supports pre-defined aggregates such as MovingAvg, MovingSum etc. It also allows the user to define queries with parameters using Create Macro.
Reference: [RS87] <author> L. Rowe and M. Stonebraker. </author> <title> "The POSTGRES Data Model." </title> <booktitle> In Proceedings of VLDB Conference, </booktitle> <address> Brighton, England, </address> <month> September </month> <year> 1987. </year>
Reference-contexts: Also, the users can not define any online aggregate within this framework, where the terminate routine is expected to return the results. 1.3 Previous Research 1.3.1 POSTGRES Work on aggregates was done at the EECS department of UC Berkley, where the database management system, POSTGRES <ref> [RS87, SR86, SRH90] </ref>, was designed and implemented. POSTGRES allows the user to specify aggregates in terms of state transition functions, where an aggregate is defined as a state, and state transition functions are used to define the computation of aggregates. There are two types of state functions: sfunc1 and sfunc2.
Reference: [RS97] <author> Kenneth A. Ross and Divesh Srivastava. </author> <title> "Fast Computation of Sparse Datacubes." </title> <booktitle> In Proceedings of the 23rd VLDB Conference, </booktitle> <address> Athens, Greece, </address> <year> 1997. </year>
Reference-contexts: The key requirement of these applications is the ability to aggregate across many sets of dimensions. Such a computation is a performance bottleneck for these applications. Aggregate extensions of particular interest in this context are data cubes and online aggregation. 1.1.1.1 Data Cube In Data cube <ref> [GBA96, RS97, AAD96, ZDN97, HRU96] </ref> , aggregates compute along multiple dimension and granularities. These are very useful in OLAP or multidimensional data analysis applications. For example an application could perform an aggregate computation along the time dimension, say every year, every season and so on.
Reference: [SR86] <author> M. Stonebraker and L. Rowe. </author> <title> "The Design of POSTGRES." </title> <booktitle> In Proceedings of ACM-SIGMOD Conference on Management of Data, </booktitle> <address> Washington, DC, </address> <month> May </month> <year> 1986. </year>
Reference-contexts: Also, the users can not define any online aggregate within this framework, where the terminate routine is expected to return the results. 1.3 Previous Research 1.3.1 POSTGRES Work on aggregates was done at the EECS department of UC Berkley, where the database management system, POSTGRES <ref> [RS87, SR86, SRH90] </ref>, was designed and implemented. POSTGRES allows the user to specify aggregates in terms of state transition functions, where an aggregate is defined as a state, and state transition functions are used to define the computation of aggregates. There are two types of state functions: sfunc1 and sfunc2.
Reference: [SRH90] <author> M. Stonebraker, L. Rowe, and M. Hirohama. </author> <title> "The Implementation of POSTGRES." </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 2(1), </volume> <month> March </month> <year> 1990. </year>
Reference-contexts: Also, the users can not define any online aggregate within this framework, where the terminate routine is expected to return the results. 1.3 Previous Research 1.3.1 POSTGRES Work on aggregates was done at the EECS department of UC Berkley, where the database management system, POSTGRES <ref> [RS87, SR86, SRH90] </ref>, was designed and implemented. POSTGRES allows the user to specify aggregates in terms of state transition functions, where an aggregate is defined as a state, and state transition functions are used to define the computation of aggregates. There are two types of state functions: sfunc1 and sfunc2.
Reference: [Urm97] <author> Scott Urman. </author> <title> Oracle8 PL/SQL Programming. </title> <publisher> McGrawHill Publishing Company, </publisher> <year> 1997. </year>
Reference-contexts: In view to these features, Oracle was chosen as the database for SQL-AG, and PL/SQL was chosen as the implementation environment for SQL-AG. The following sections give a descriptive overview of PL/SQL. 5.2 PL/SQL PL/SQL <ref> [Urm97] </ref> is Oracle Corporation's procedural extension to SQL. PL/SQL offers the functionality of a procedural language like C and simple constructs to access data from Oracle database. <p> All the group functions or in other words the commonly supported aggregate functions in SQL are also supported by PL/SQL (avg, count, max, min, stddev, sum, and variance are supported by Oracle SQL). Several books on PL/SQL provide a detailed treatment of its syntax and usage, for instance <ref> [Urm97] </ref>. 5.7 Functions and Procedures Subprograms in PL/SQL are similar to any other procedural language. The syntax of defining function and procedure is given below.
Reference: [Wei98a] <author> Wei-Min Shen. </author> <title> "Data Classification by Statistical Methods." UCLA Data Mining Short Course(2) Notes, </title> <year> 1998. </year>
Reference-contexts: Which could be expressed in terms of W as simply avg&lt;W&gt;. Hence the above code computes C f using average. Since averages can be estimated, this can be computed using online aggregation. 1.1.2.2 Data Classification Data Classification <ref> [Wei98a, Wei98b] </ref> finds use in data analysis and pattern recognition. Data classification is a form of supervised learning. Given attributes and training instances, it outputs predictions. The attributes consist of independents, dependents and targets.
Reference: [Wei98b] <author> Wei-Min Shen. </author> <title> "Data Classification for Data Mining." UCLA Data Mining Short Course(1) Notes, </title> <year> 1998. </year>
Reference-contexts: Which could be expressed in terms of W as simply avg&lt;W&gt;. Hence the above code computes C f using average. Since averages can be estimated, this can be computed using online aggregation. 1.1.2.2 Data Classification Data Classification <ref> [Wei98a, Wei98b] </ref> finds use in data analysis and pattern recognition. Data classification is a form of supervised learning. Given attributes and training instances, it outputs predictions. The attributes consist of independents, dependents and targets.
Reference: [Wid95] <author> J. Widom. </author> <title> "Research Problems in Data Warehousing." </title> <booktitle> In Proceeding of 4th International Conference on Information and Knowledge Management, </booktitle> <month> November </month> <year> 1995. </year> <month> 75 </month>
Reference-contexts: These applications can be broadly described as data warehousing, OLAPs and data mining applications, though there is no fine line separating the three. 1 1.1.1 Data Warehousing and OLAP Data warehousing <ref> [Wid95] </ref> are means to facilitate fast, reliable and less expensive way of collecting and analyzing important information. A data warehouse provides integrated access to the information collected from multiple, distributed and heterogeneous databases.
Reference: [Zan88] <author> Carlo Zaniolo. </author> <title> "Design and Implementation of a Logic Based Language for Data Intensive Applications." </title> <booktitle> In Proceeding of the International Conference on Logic Programming, </booktitle> <year> 1988. </year>
Reference-contexts: Int4div computes the average by dividing the first state variable be second state variable. 11 1.3.2 LDL++ Experience The logical data language LDL is a rule based language for databases <ref> [NT89, Zan88] </ref> developed at Microelectronics and Computer Technology Corporation. LDL++ supports lists, sets, complex objects, recursion and extensible aggregates. In LDL++ every aggregate function f on a set is inductively defined by: 1. BASE: f (fxg) on a singleton set fxg 2.
Reference: [ZAO93] <author> Carlo Zaniolo, N. Arni, and K. Ong. </author> <title> "Negation and Aggregates in Recursive Rules: the LDL++ Approach." Deductive Object Oriented Databases, </title> <year> 1993. </year>
Reference-contexts: We can rewrite count and sum as count: single (X,1). multi (S,Old,New) New = Old + 1. sum: single (X,X). multi (S,Old,New) New = Old + S. 12 1.3.2.1 UCLA Extension A major extension of LDL++, user-defined aggregates <ref> [ZAO93] </ref> has been recently implemented at UCLA. Rather than waiting for the result till the end of the set, partial results could be shown to the user using early returns.
Reference: [ZDN97] <author> Yihong Zhao, Prasad Deshpande, and Jeffrey F. Naughton. </author> <title> "An Array-Based Algorithm for Simultaneous Multidimensional Aggregates." </title> <booktitle> In Proceedings of ACM-SIGMOD Conference on Management of Data, </booktitle> <year> 1997. </year>
Reference-contexts: The key requirement of these applications is the ability to aggregate across many sets of dimensions. Such a computation is a performance bottleneck for these applications. Aggregate extensions of particular interest in this context are data cubes and online aggregation. 1.1.1.1 Data Cube In Data cube <ref> [GBA96, RS97, AAD96, ZDN97, HRU96] </ref> , aggregates compute along multiple dimension and granularities. These are very useful in OLAP or multidimensional data analysis applications. For example an application could perform an aggregate computation along the time dimension, say every year, every season and so on.
Reference: [ZM97] <author> Carlo Zaniolo and I. Motakis. </author> <title> "Temporal Aggregation in Active Database Rules." </title> <booktitle> In Proceedings of ACM-SIGMOD Conference on Management of Data, </booktitle> <year> 1997. </year> <month> 76 </month>
Reference-contexts: These type of applications finds prominent use in financial analysis and analysis by retailers. Financial analysts frequently try to predict interest rate fluctuations or stock performance based on a series of preceding events. Time series analysis use temporal aggregation <ref> [ZM97] </ref>, details of which are given in next paragraph.
References-found: 26

