URL: ftp://osm7.cs.byu.edu/papers/ER96.ps
Refering-URL: http://osm7.cs.byu.edu/Papers.html
Root-URL: 
Title: Transforming Conceptual Models to Object-Oriented Database Designs: Practicalities, Properties, and Peculiarities  
Author: Wai Yin Mok David W. Embley 
Address: Provo, Utah, USA  
Affiliation: Brigham Young University  
Abstract: More work is needed on devising practical, but theoretically well-founded procedures for doing object-oriented database (OODB) design [18]. Besides being practical and having formal properties, these design procedures should also be exible enough to allow for peculiarities that make applications unique. In this paper, we present and discuss an OODB design procedure that addresses these problems. The procedure we discuss is practical in the sense that it is based on a common family of conceptual models and in the sense that it does not expect users to supply esoteric, difficult-to-discover, and hard-to-understand constraints (such as multivalued dependencies), nor does it make hard-to-check and easy-to-overlook assumptions (such as the universal relation assumption). At the same time, the procedure is well-founded and formal, being based on a new theoretical result and some recent empirical studies that characterize properties of interest in designing complex objects. It is also exible and adaptable to the peculiarities of a wide variety of applications. Ke ywords: Object-oriented database design, conceptual modeling, constraint extraction from conceptual models, conceptual-model transformations, scheme and method-signature generation, design properties, design adjustments. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <editor> F. Bancilhon, C. Delobel, and P. Kanellakis (eds.), </editor> <title> Building an Object-Oriented Database System: </title> <publisher> The Story of O 2 , Morgan Kaufmann Publishers, </publisher> <address> San Mateo, California, </address> <year> 1992. </year>
Reference-contexts: S n S c ) + Applying these ideas to our RRD hypergraph in Figure 2, we can obtain the classes (scheme and method combinations) for our OODB in Figure 7. For illustration we have used an O 2 -like syntax <ref> [1] </ref>. We hav e also added appropriate types for our attributes and methods. We could have introduced these types initially in our conceptual model and carried them through our discussion, but they would have been ignored until this point. Further, we hav e added the bulk type list.
Reference: 2. <author> C. Batini, S. Ceri, and S.B. Navathe, </author> <title> Conceptual Database Design, </title> <publisher> The Ben-jamin/Cummings Publishing Company, Inc., </publisher> <address> Redwood City, California, </address> <year> 1992. </year>
Reference: 3. <author> P.A. Bernstein, </author> <title> ``Synthesizing third normal form relations from functional dependencies,'' </title> <journal> ACM Transactions on Database Systems, </journal> <volume> vol. 1, no. 4, </volume> <pages> pp. 277-298, </pages> <month> December </month> <year> 1976. </year>
Reference-contexts: Since -H , F and -H , F are equivalent and -H , F is preserved, H is preserved also. For information preservation, we mention that our procedure here is based on Bernstein's algorithm <ref> [3] </ref> and that with an adjustment, it can be shown that the Bernstein's algorithm produces a set of schemes that are a lossless decomposition of the assumed universal relation [19]. We provide a different type of adjustment, namely one that ensures that each model transformation is information preserving.
Reference: 4. <author> M.J. Carey, D.J. DeWitt, and J.F. Naughton, </author> <title> ``The OO7 Benchmark,'' </title> <type> Technical Report, </type> <institution> Computer Sciences Department, University of Wisconsin-Madison, </institution> <month> January 21, </month> <year> 1994. </year>
Reference-contexts: To test these ideas, we have done some experiments [22] using the OO7 Benchmark <ref> [4] </ref>. We observed that our heuristic algorithm has satisfactory performance. For individual operations, it does give good clusterings especially if the operations are navigational.
Reference: 5. <author> P.P. Chen, </author> <title> ``The entity-relationship model toward a unified view of data,'' </title> <journal> ACM Transactions on Database Systems, </journal> <volume> vol. 1, no. 1, </volume> <pages> pp. 9-36, </pages> <month> March </month> <year> 1976. </year>
Reference-contexts: Other members of this family include, for example, the Binary-Relationship Model [20], NIAM [28], and FORM [14]. An important feature that distinguishes this family of models from other families such as the Entity-Relationship Model <ref> [5] </ref> and its extensions (e.g., [8,25]) is that there are only two types of basic sets entity sets (or object sets as we call them in OSA) and relationship sets. This feature allows us to translate ORM model instances directly to hypergraphs, which are used so prevalently in relational theory.
Reference: 6. <author> D.N. Chorafas and H. Steinmann, </author> <title> Object-Oriented Databases, </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1993. </year>
Reference: 7. <author> E.F. Codd, </author> <title> ``Recent investigations in relational database systems,'' </title> <booktitle> Proceedings of the 1974 IFIP Conference, </booktitle> <pages> pp. 1017-1021, </pages> <year> 1974. </year>
Reference-contexts: An RRD hypergraph is a reduced design hypergraph, which, after discarding any generalization/specialization edges and removing any computed object sets from their respective edges, satisfies the following two conditions: (1) the hypergraph is g -acyclic [12], and (2) every edge of the hypergraph is in BCNF <ref> [7] </ref>. The notion of g -acyclic has been defined elsewhere [12], but we discuss its definition here for the sake of completeness. We first define what it means for two nodes in a hypergraph to be connected.
Reference: 8. <author> R.A. Elmasri and S.B. Navathe, </author> <title> Fundamentals of Database Systems, 2nd Edition, </title> <publisher> The Ben-jamin/Cummings Publishing Company, Inc., </publisher> <address> Redwood City, California, </address> <year> 1988. </year>
Reference: 9. <author> D.W. Embley and T.W. Ling, </author> <title> ``Synergistic database design with an extended entity-relationship model,'' </title> <booktitle> Proceedings of the 8th International Conference on Entity-Relational Approach, </booktitle> <pages> pp. 118-135, </pages> <address> Toronto, Canada, </address> <month> October 18-20, </month> <year> 1989. </year>
Reference-contexts: To bring this all together in a single paper, we build here on some earlier work we have done. The conceptual model we use is described elsewhere [10], as are the basic ideas we use for hypergraph generation and for design transformations <ref> [9] </ref>. We say enough here about the model, hypergraph generation, and design transformations to make the paper self contained, but we minimize this discussion to leave room for discussing the unique contributions of this paper. <p> These transformations are similar to the transformations in [14,15]. We hav e reported the details of both converting an OSA diagram and reducing the resulting hypergraph in a previous ER conference <ref> [9] </ref>; here we only discuss the highlights of the translation of Figure 1 to hypergraph. -- -- A central idea in the initial creation of a design hypergraph is the extraction and representation of FDs. A 1 participation constraint yields an FD. <p> Design hypergraphs that are fully reduced by reduction transformations such as these are called reduced design hypergraphs. In particular, a design hypergraph is reduced if it is nonredundant, right reduced, left reduced, JD-edge reduced, lexicalized, and minimally consolidated. We hav e illustrated several of these reductions here. In <ref> [9] </ref> we describe all of them. Not yet discussed are the dashed edges in the design hypergraph in Figure 2. These represent computations. Given value (s) from the tail-side object set (s), there exists a function that computes a value for the head-side object set. <p> This is what we mean by JD-edge reduced, as mentioned above and as described in <ref> [9] </ref>. -- -- redundant, for if either one were another value, D fi C would not hold.
Reference: 10. <author> D.W. Embley, </author> <title> B.D. Kurtz, and S.N. Woodfield, Object-oriented Systems Analysis: A Model-driven Approach, </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1992. </year>
Reference-contexts: For this case, we point out the main difficulties, and explain how to mitigate some of these difficulties. To bring this all together in a single paper, we build here on some earlier work we have done. The conceptual model we use is described elsewhere <ref> [10] </ref>, as are the basic ideas we use for hypergraph generation and for design transformations [9]. We say enough here about the model, hypergraph generation, and design transformations to make the paper self contained, but we minimize this discussion to leave room for discussing the unique contributions of this paper. <p> We summarize and conclude in for analyzing their Child Welfare System. -- -- Section 6. 2. Model Instances and Model-Instance Properties The conceptual model we use is OSA Object-oriented Systems Analysis <ref> [10] </ref>. Figure 1 shows the OSA model instance we use as a running example in this paper. The rectangles in the OSA diagram in Figure 1 are object sets and the labeled connections among object sets (with or without a diamond) are relationship sets.
Reference: 11. <author> R. Fagin, A.O. Mendelzon, and J.D. Ullman, </author> <title> ``A simplified universal relation assumption and its properties,'' </title> <journal> ACM Transactions on Database Systems, </journal> <volume> vol. 7, no. 3, </volume> <pages> pp. 343-360, </pages> <month> September </month> <year> 1982. </year>
Reference-contexts: We also point out that we can also always make a reduced design hypergraph g -acyclic, by adding roles if necessary. Howev er, this may only be a syntactic trick there may still be a semantic g -cycle. We and others <ref> [11] </ref> expect this to be rare in practice, and we leave a full investigation for future research. -- -- What is not always possible is to guarantee that every edge is in BCNF.
Reference: 12. <author> R. Fagin, </author> <title> ``Degrees of acyclicity for hypergraphs and relational database schemes,'' </title> <journal> Journal of the ACM, </journal> <volume> vol. 30, no. 3, </volume> <pages> pp. 514-550, </pages> <month> July </month> <year> 1983. </year>
Reference-contexts: An RRD hypergraph is a reduced design hypergraph, which, after discarding any generalization/specialization edges and removing any computed object sets from their respective edges, satisfies the following two conditions: (1) the hypergraph is g -acyclic <ref> [12] </ref>, and (2) every edge of the hypergraph is in BCNF [7]. The notion of g -acyclic has been defined elsewhere [12], but we discuss its definition here for the sake of completeness. We first define what it means for two nodes in a hypergraph to be connected. <p> design hypergraph, which, after discarding any generalization/specialization edges and removing any computed object sets from their respective edges, satisfies the following two conditions: (1) the hypergraph is g -acyclic <ref> [12] </ref>, and (2) every edge of the hypergraph is in BCNF [7]. The notion of g -acyclic has been defined elsewhere [12], but we discuss its definition here for the sake of completeness. We first define what it means for two nodes in a hypergraph to be connected.
Reference: 13. <author> P.M.D. Gray, K.G. Kulkarni, and N.W. Paton, </author> <title> Object-Oriented Databases, </title> <publisher> Prentice-Hall International (UK) Ltd., </publisher> <address> New York, </address> <year> 1992. </year>
Reference: 14. <author> T.A. Halpin, </author> <title> Conceptual Schema & Relational Database Design, 2nd Edition, </title> <publisher> Prentice-Hall, </publisher> <address> Sydney, Australia, </address> <year> 1995. </year>
Reference-contexts: OSA is similar to and can be classified as a member of the family of conceptual models commonly referred to as Object-Role Models (ORMs). Other members of this family include, for example, the Binary-Relationship Model [20], NIAM [28], and FORM <ref> [14] </ref>. An important feature that distinguishes this family of models from other families such as the Entity-Relationship Model [5] and its extensions (e.g., [8,25]) is that there are only two types of basic sets entity sets (or object sets as we call them in OSA) and relationship sets.
Reference: 15. <author> T.A. Halpin and H.A. Proper, </author> <title> ``Database schema transformation and optimization,'' </title> <booktitle> Proceedings of the 14th International Conference on Object-Oriented and Entity-Relational Modeling, </booktitle> <pages> pp. 191-203, </pages> <address> Gold Coast, Australia, </address> <month> December </month> <year> 1995. </year>
Reference: 16. <author> A. Kemper and G. Moerkotte, </author> <title> Object-Oriented Database Management, </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1994. </year> -- -- 
Reference: 17. <author> W. Kent, </author> <title> ``Consequences of assuming a universal relation,'' </title> <journal> ACM Transactions on Database Systems, </journal> <volume> vol. 6, no. 4, </volume> <pages> pp. 539-556, </pages> <month> December </month> <year> 1981. </year>
Reference: 18. <author> W. Kim, </author> <title> ``Editorial Directions,'' </title> <journal> ACM Transactions on Database Systems, </journal> <volume> vol. 20, no. 3, </volume> <pages> pp. 237-238, </pages> <month> September </month> <year> 1995. </year>
Reference-contexts: 1. Introduction Database design has had a long history. Object-oriented database design is more recent and ``clearly needs more work'' <ref> [18] </ref>. Over the long history of database design, many ad-hoc and empirical techniques have been used. There has also been a urry of theoretical research that has provided us with some interesting insights, but has sometimes disappointed us in terms of practical realities.
Reference: 19. <author> D. Maier, </author> <title> The Theory of Relational Databases, </title> <publisher> Computer Science Press, </publisher> <address> Rockville, Mary-land, </address> <year> 1983. </year>
Reference-contexts: Thus, Name does not appear as an object set in Figure 2. As we transform an OSA diagram to a design hypergraph, we discard redundant edges and edge components. We base these reductions on classical reductions such as right reduce and left reduce as discussed in <ref> [19] </ref>. For example, since Order Nr fi Order and Order fi Customer, Order Nr fi Customer is redundant. Like [21], however, we do not assume that the universal relation assumption holds [17,27]. <p> Checking whether or not an arbitrary relation scheme is in BCNF with respect to an arbitrary set of FDs is NP-complete <ref> [19] </ref>. However, if a hypergraph is g -acyclic, and every derived FD is embedded in an edge of the hypergraph, and the relation scheme being checked is a full edge (not a subset of an edge), then the check is polynomial. <p> Indeed, with our procedure, a designer need never specify MVDs! They are implied and can be automatically extracted from an RRD hypergraph <ref> [19] </ref>. We observe, however, that a designer does need to be able to individually consider an n-ary relationship set for n &gt; 2 and determine whether it can be losslessly reduced to a lower-degree relationship set. <p> Theorem 1. Algorithm 1 generates NNF schemes. The proof of Theorem 1 is lengthy and involved. A sketch of the main idea follows. Since ev ery FD derived for an RRD hypergraph H is embedded in some edge in H , by the results in <ref> [19] </ref>, H and the set of derived FDs F is equivalent to a hypergraph H and F where H is -E + is an edge in H with all edges that are subsets of other edges removed. <p> Nevertheless, we wish to mention a couple of interesting ideas about constraint and information preservation. For constraint preservation and RRD hypergraphs, we can prove a stronger result, namely that the schemes produced are dependency preserving in the classical sense <ref> [19] </ref>. This is so because each edge in H (as described above) is a branch in a scheme tree. Therefore, the hypergraph H is preserved. <p> For information preservation, we mention that our procedure here is based on Bernstein's algorithm [3] and that with an adjustment, it can be shown that the Bernstein's algorithm produces a set of schemes that are a lossless decomposition of the assumed universal relation <ref> [19] </ref>. We provide a different type of adjustment, namely one that ensures that each model transformation is information preserving. This ensures that an RRD hypergraph preserves the information of the original model instance. <p> We first point out that we can always produce a reduced design hypergraph. Checking whether a design hypergraph is non-redundant, right reduced, left reduced, and minimally consolidated is similar to checking these same ideas for a scheme and an arbitrary set of FDs as presented in <ref> [19] </ref>. As explained, of course, we do not make the universal relation assumption. Thus, when-ev er a reduction looks theoretically possible, the universal relation assumption with respect to the components involved must be checked. Since this is a semantic check, a designer must be involved in making the decision.
Reference: 20. <author> L. Mark, </author> <title> ``What is the binary relationship approach?,'' in Entity-Relationship Approach to Software Engineering, </title> <editor> ed. C.G. Davis, S. Jajodia, P.A. Ng, and R.T. </editor> <booktitle> Yeh, </booktitle> <pages> pp. 205-220, </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1983. </year>
Reference-contexts: OSA is similar to and can be classified as a member of the family of conceptual models commonly referred to as Object-Role Models (ORMs). Other members of this family include, for example, the Binary-Relationship Model <ref> [20] </ref>, NIAM [28], and FORM [14].
Reference: 21. <author> V.M. Markowitz and A. Shoshani, </author> <title> ``Representing extended entity-relationship structures in relational databases: a modular approach,'' </title> <journal> ACM Transactions on Database Systems, </journal> <volume> vol. 17, no. 3, </volume> <pages> pp. 423-464, </pages> <month> September </month> <year> 1992. </year>
Reference-contexts: We base these reductions on classical reductions such as right reduce and left reduce as discussed in [19]. For example, since Order Nr fi Order and Order fi Customer, Order Nr fi Customer is redundant. Like <ref> [21] </ref>, however, we do not assume that the universal relation assumption holds [17,27]. Thus, when we find a potential reduction based on an implied FD, we must check its meaning before we make the reduction.
Reference: 22. <author> W.Y. Mok and D.W. Embley, </author> <title> ``An approach to efficient data clustering based on a new definition for nested normal form,'' </title> <type> Technical Report BYU-CS-96-2, </type> <institution> Department of Computer Science, Brigham Young University, Provo, Utah, </institution> <month> February </month> <year> 1996. </year>
Reference-contexts: We can extend these heuristic ideas to three or more overlapping operations by ordering the operations based on the frequency of invocation and the total number of objects referenced and then considering them pairwise from most to least important. To test these ideas, we have done some experiments <ref> [22] </ref> using the OO7 Benchmark [4]. We observed that our heuristic algorithm has satisfactory performance. For individual operations, it does give good clusterings especially if the operations are navigational.
Reference: 23. <author> W.Y. Mok, Y.K. Ng, and D.W. Embley, </author> <title> ``A normal form for precisely characterizing redundancy in nested relations,'' </title> <journal> ACM Transactions on Database Systems, </journal> <volume> vol. 21, no. 1, </volume> <pages> pp. 77-106, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: Because of these tight conditions, we can verify if every edge is in BCNF in polynomial time. 3. A Scheme-Generation Algorithm We base our fundamental scheme-generation algorithm on Nested Normal Form (NNF), which we have recently defined <ref> [23] </ref>. NNF precisely characterizes potential redundancy with respect to a given set of FDs and multivalued dependencies (MVDs) for nested relation schemes that are consistent with the given FDs and MVDs. We do not reproduce the definition of NNF here nor the lengthy set of preparatory definitions. <p> As examples, it is in NNF for -B fifi AE, C fi B, C fifi D-, but not for -B fifi AE, D fi C- nor for -B fifi AE, C fifi D- <ref> [23] </ref>. Both of these latter two sets of dependencies cause the nested relation in Figure 4 to have redundant data values. A data value in a nested relation r is redundant if it is uniquely determined by a constraint and the other data values in r.
Reference: 24. <author> M.A. Roth, H.F. Korth, and A. Silberschatz, </author> <title> ``Extended algebra and calculus for nested relational databases,'' </title> <journal> ACM Transactions on Database Systems, </journal> <volume> vol. 13, no. 4, </volume> <pages> pp. 389-417, </pages> <month> December </month> <year> 1988. </year>
Reference-contexts: Figure 3 shows a scheme tree T along with Aset (T ) and Ancestor (C). Figure 4 shows a possible nested relation for T . For NNF, we require PNF (Partition Normal Form) <ref> [24] </ref>, so that in a nested relation there can never be distinct tuples that agree on the atomic attributes of either the nested relation itself or of any nested relation embedded within it. The nested relation in Figure 4 is in PNF.
Reference: 25. <author> T.J. Teorey, D. Yang, and J.P. Fry, </author> <title> ``A logical design methodology for relational databases using the extended entity-relationship model,'' </title> <journal> ACM Computing Surveys, </journal> <volume> vol. 18, no. 2, </volume> <pages> pp. 197-222, </pages> <month> June </month> <year> 1986. </year>
Reference: 26. <author> T.J. Teorey, </author> <title> Database Modeling & Design: The Fundamental Principles, 2nd Edition, </title> <publisher> Mor-gan Kaufmann Publishers, </publisher> <address> San Francisco, California, </address> <year> 1994. </year>
Reference: 27. <author> J.D. Ullman, </author> <title> ``The U.R. strikes back,'' </title> <booktitle> Proceedings of the ACM Symposium on Principles of Database Systems, </booktitle> <pages> pp. 10-22, </pages> <address> Los Angeles, California, </address> <month> March </month> <year> 1982. </year>

References-found: 27

