URL: ftp://ftp.isi.edu/pub/cengiz/publications/PhD:Infocom94.ps.gz
Refering-URL: http://www.isi.edu/~cengiz/publications/
Root-URL: http://www.isi.edu
Email: fca,shankarg@cs.umd.edu  
Title: Viewserver Hierarchy: A New Inter-Domain Routing Protocol  
Author: Cengiz Alaettinoglu, A. Udaya Shankar 
Address: College Park, Maryland 20742  
Affiliation: Department of Computer Science University of Maryland  
Abstract: We present a new viewserver hierarchy and associated protocols that (1) satisfies policy and ToS constraints, (2) adapts to dynamic topology changes including failures that partition domains, and (3) scales well to large number of domains without losing detail. Domain-level views are maintained by special nodes called viewservers. Each viewserver maintains a domain-level view of a surrounding precinct. Viewservers are organized hierarchically. To obtain domain-level source routes, the views of one or more viewservers are merged (upto a maximum of twice the levels in the hierarchy). Our evaluation results indicate that the viewserver hierarchy finds many short valid paths and reduces the amount of memory requirement by two orders of magnitude. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. Alaettinoglu and A. U. Shankar. </author> <title> Hierarchical Inter-Domain Routing Protocol with On-Demand ToS and Poicy Resolution. </title> <booktitle> In Proc. IEEE International Conference on Networking Protocols '93, </booktitle> <address> San Fransisco, California, </address> <month> October </month> <year> 1993. </year>
Reference-contexts: In Section 4, we summarize our evaluation results from [2]. In Section 5, we conclude and describe how to add fault-tolerance and cacheing schemes to improve performance. 2 Related Work In this section, we survey recently proposed inter-domain routing protocols that support ToS and Policy constraints for large internetworks <ref> [12, 14, 11, 8, 4, 1, 16, 5] </ref>. Several inter-domain routing protocols (e.g. BGP [12], IDRP [14], NR [8]) are based on path-vector approach [15]. Here, for each destination domain a router maintains a set of paths, one through each of its neighbor routers. <p> The usual techniques are to take either the union or the intersection of the constraints of the subdomains [11]. Both techniques have problems 4 . Other problems are described in <ref> [4, 1] </ref>. Some of the problems can be relaxed by having overlapping superdomains, but this increases the storage requirements drastically. <p> This study does not address the scalability of the SDR mode. In <ref> [1] </ref>, we proposed another protocol based on su-perdomains. It always finds a valid path if one exists. Both union and intersection policy and ToS constraints are maintained for each visible superdomain.
Reference: [2] <author> C. Alaettinoglu and A. U. Shankar. </author> <title> Viewserver Hierarchy: A New Inter-Domain Routing Protocol and its Evaluation. </title> <type> Technical Report UMIACS-TR-93-98, </type> <institution> CS-TR-3151, Department of Computer Science, University of Maryland, College Park, </institution> <month> October </month> <year> 1993. </year> <note> Earlier version CS-TR-3033, </note> <month> February </month> <year> 1993. </year>
Reference-contexts: To achieve scaling, several approaches based on aggregating domains into superdomains have been proposed [11, 14, 4]. This approaches have drawbacks because the aggregation results in loss of detail (discussed in Section 2). Our protocol In this paper, we present an inter-domain routing protocol that we proposed recently <ref> [2] </ref>. It combines domain-level views with a novel hierarchical scheme. It scales well to large internetworks, and does not suffer from the problems of superdomains. In our scheme, domain-level views are not maintained by every router but by special nodes called viewservers. <p> In this 2 A node is called a gateway if it has a link to another domain. paper, we omit the view-update protocol for the rea-sons of space. (Interested readers are referred to <ref> [2] </ref>.) Evaluation Many inter-domain routing protocols have been proposed, based on various kinds of hierarchies. <p> We use three internetwork topologies each of size 11,110 domains (roughly the current size of the Internet). Our results indicate that the viewserver hierarchy finds many short valid paths and reduces the amount of memory requirement by two orders of magnitude. This work is presented in <ref> [2] </ref> and summarized here. Organization of the paper In Section 2, we survey recent approaches to inter-domain routing. In Section 3, we present the view-query protocol for static network conditions, that is, assuming all links and nodes of the network remain operational. <p> Organization of the paper In Section 2, we survey recent approaches to inter-domain routing. In Section 3, we present the view-query protocol for static network conditions, that is, assuming all links and nodes of the network remain operational. In Section 4, we summarize our evaluation results from <ref> [2] </ref>. In Section 5, we conclude and describe how to add fault-tolerance and cacheing schemes to improve performance. 2 Related Work In this section, we survey recently proposed inter-domain routing protocols that support ToS and Policy constraints for large internetworks [12, 14, 11, 8, 4, 1, 16, 5]. <p> In this section, we briefly summarize our results for one internetwork topology. For details see <ref> [2] </ref>. We have developed a model where one can define internetwork topologies with the characteristics of a real internetwork, like the Internet. That is, it has backbones, regionals, MANS, LANS, etc.; and there are both hierarchical connections (e.g. regionals to backbones) and "non-hierarchical" connections (e.g. "back-doors").
Reference: [3] <author> L. Breslau and D. Estrin. </author> <title> Design of Inter-Administrative Domain Routing Protocols. </title> <booktitle> In Proc. ACM SIGCOMM '90, </booktitle> <pages> pages 231-241, </pages> <address> Philadelphia, Pennsylvania, </address> <month> September </month> <year> 1990. </year>
Reference-contexts: Across all domains, an inter-domain routing protocol is executed that provides routes between source and destination nodes in different domains. This protocol must satisfy various constraints: (1) It must satisfy policy constraints, which are administrative restrictions on the inter-domain traffic <ref> [6, 10, 7, 3] </ref>. Policy constraints are of two types: transit policies and source policies. The transit policies of a domain A specify how other domains can use the resources of A (e.g. $0.01 per packet, no traffic from domain B). <p> To do this, it must keep track of the types of services offered by each domain <ref> [3] </ref>. (3) Inter-domain routing protocols must scale up to very large internetworks, i.e. with a very large number of domains. Practically this means that processing, memory and communication requirements should be much less than linear in the number of domains. <p> A simple (or straightforward) approach to inter-domain routing is domain-level source routing with link-state approach <ref> [6, 3] </ref>. In this approach, each router 1 maintains a domain-level view of the internet-work, i.e., a graph with a vertex for every domain and an edge between every two neighbor domains. Policy and ToS information is attached to the vertices and the edges of the view.
Reference: [4] <author> J. N. Chiappa. </author> <title> A New IP Routing and Addressing Architecture. Big-Internet mailing list., </title> <note> 1992. Available by anonymous ftp from munnari.oz.au:big-internet/list-archive. </note>
Reference-contexts: A router is a node that maintains a routing table. To achieve scaling, several approaches based on aggregating domains into superdomains have been proposed <ref> [11, 14, 4] </ref>. This approaches have drawbacks because the aggregation results in loss of detail (discussed in Section 2). Our protocol In this paper, we present an inter-domain routing protocol that we proposed recently [2]. It combines domain-level views with a novel hierarchical scheme. <p> In Section 4, we summarize our evaluation results from [2]. In Section 5, we conclude and describe how to add fault-tolerance and cacheing schemes to improve performance. 2 Related Work In this section, we survey recently proposed inter-domain routing protocols that support ToS and Policy constraints for large internetworks <ref> [12, 14, 11, 8, 4, 1, 16, 5] </ref>. Several inter-domain routing protocols (e.g. BGP [12], IDRP [14], NR [8]) are based on path-vector approach [15]. Here, for each destination domain a router maintains a set of paths, one through each of its neighbor routers. <p> By exchanging k paths to each destination, the probability of detecting a valid path for each source can be increased. The most common approach for solving the scaling problem is to use superdomains (e.g. IDPR [11], IDRP [14], Nimrod <ref> [4] </ref>). Superdomains extend the idea of area hierarchy [9]. Here, domains are grouped hierarchically into superdomains: "close" domains are grouped into level 1 superdomains, "close" level 1 su-perdomains are grouped into level 2 superdomains, and so on. <p> The usual techniques are to take either the union or the intersection of the constraints of the subdomains [11]. Both techniques have problems 4 . Other problems are described in <ref> [4, 1] </ref>. Some of the problems can be relaxed by having overlapping superdomains, but this increases the storage requirements drastically. <p> The only drawback of our protocol is that to obtain a domain-level source route, views are merged at (or prior to) the connection (or flow) setup, thereby increasing the setup time. This drawback is not unique to our scheme <ref> [6, 11, 4, 8] </ref>. There are several ways to reduce the setup overhead. First, domain-level source routes to frequently used destinations can be cached. Second, views of frequently queried viewservers can be replicated at "mirror" viewservers in the source domain.
Reference: [5] <author> D. Clark. </author> <title> Route Fragments, A Routing Proposal. Big-Internet mailing list., </title> <month> July </month> <year> 1992. </year> <note> Available by anonymous ftp from munnari.oz.au:big-internet/list-archive. </note>
Reference-contexts: In Section 4, we summarize our evaluation results from [2]. In Section 5, we conclude and describe how to add fault-tolerance and cacheing schemes to improve performance. 2 Related Work In this section, we survey recently proposed inter-domain routing protocols that support ToS and Policy constraints for large internetworks <ref> [12, 14, 11, 8, 4, 1, 16, 5] </ref>. Several inter-domain routing protocols (e.g. BGP [12], IDRP [14], NR [8]) are based on path-vector approach [15]. Here, for each destination domain a router maintains a set of paths, one through each of its neighbor routers. <p> In the landmark hierarchy, nodes within the radius of the landmark maintain a route to the landmark, and the landmark may not have a route to these nodes. In the viewserver hierarchy, viewserver maintains routes (i.e. a view) to the nodes in its precinct. Route fragments <ref> [5] </ref> is an addressing scheme. A destination route fragment, called a route suffix, is a sequence of domain ids from a backbone to the destination domain. A source route fragment, called a route prefix, is the reverse of a route suffix of that domain. <p> Upon receiving a RequestView packet, a viewserver x checks if the destination domain is in its precinct 9 . If it is, x 8 This is similiar to matching route fragments <ref> [5] </ref>.
Reference: [6] <author> D.D. Clark. </author> <title> Policy routing in Internet protocols. Request for Comment RFC-1102, </title> <institution> Network Information Center, </institution> <month> May </month> <year> 1989. </year>
Reference-contexts: Across all domains, an inter-domain routing protocol is executed that provides routes between source and destination nodes in different domains. This protocol must satisfy various constraints: (1) It must satisfy policy constraints, which are administrative restrictions on the inter-domain traffic <ref> [6, 10, 7, 3] </ref>. Policy constraints are of two types: transit policies and source policies. The transit policies of a domain A specify how other domains can use the resources of A (e.g. $0.01 per packet, no traffic from domain B). <p> A simple (or straightforward) approach to inter-domain routing is domain-level source routing with link-state approach <ref> [6, 3] </ref>. In this approach, each router 1 maintains a domain-level view of the internet-work, i.e., a graph with a vertex for every domain and an edge between every two neighbor domains. Policy and ToS information is attached to the vertices and the edges of the view. <p> The only drawback of our protocol is that to obtain a domain-level source route, views are merged at (or prior to) the connection (or flow) setup, thereby increasing the setup time. This drawback is not unique to our scheme <ref> [6, 11, 4, 8] </ref>. There are several ways to reduce the setup overhead. First, domain-level source routes to frequently used destinations can be cached. Second, views of frequently queried viewservers can be replicated at "mirror" viewservers in the source domain.
Reference: [7] <author> D. Estrin. </author> <title> Policy requirements for inter Administrative Domain routing. Request for Comment RFC-1125, </title> <institution> Network Information Center, </institution> <month> November </month> <year> 1989. </year>
Reference-contexts: Across all domains, an inter-domain routing protocol is executed that provides routes between source and destination nodes in different domains. This protocol must satisfy various constraints: (1) It must satisfy policy constraints, which are administrative restrictions on the inter-domain traffic <ref> [6, 10, 7, 3] </ref>. Policy constraints are of two types: transit policies and source policies. The transit policies of a domain A specify how other domains can use the resources of A (e.g. $0.01 per packet, no traffic from domain B). <p> Practically this means that processing, memory and communication requirements should be much less than linear in the number of domains. It must also handle non-hierarchical domain interconnections at any level <ref> [7] </ref> (e.g. we do not want to hand-configure special routes as "back-doors"). (4) Inter-domain routing protocols must automatically adapt to link cost changes, node/link failures and repairs including failures that partition domains [13]. A simple (or straightforward) approach to inter-domain routing is domain-level source routing with link-state approach [6, 3].
Reference: [8] <author> D. Estrin, Y. Rekhter, and S. Hotz. </author> <title> Scalable Inter-Domain Routing Architecture. </title> <booktitle> In Proc. ACM SIG-COMM '92, </booktitle> <pages> pages 40-52, </pages> <address> Baltimore, Maryland, </address> <month> August </month> <year> 1992. </year>
Reference-contexts: In Section 4, we summarize our evaluation results from [2]. In Section 5, we conclude and describe how to add fault-tolerance and cacheing schemes to improve performance. 2 Related Work In this section, we survey recently proposed inter-domain routing protocols that support ToS and Policy constraints for large internetworks <ref> [12, 14, 11, 8, 4, 1, 16, 5] </ref>. Several inter-domain routing protocols (e.g. BGP [12], IDRP [14], NR [8]) are based on path-vector approach [15]. Here, for each destination domain a router maintains a set of paths, one through each of its neighbor routers. <p> Several inter-domain routing protocols (e.g. BGP [12], IDRP [14], NR <ref> [8] </ref>) are based on path-vector approach [15]. Here, for each destination domain a router maintains a set of paths, one through each of its neighbor routers. ToS and policy information is attached to these paths. Each router requires O (N D fi N D fi E R ) space. <p> Both techniques have problems 4 . Other problems are described in [4, 1]. Some of the problems can be relaxed by having overlapping superdomains, but this increases the storage requirements drastically. Reference <ref> [8] </ref> combines the benefits of path-vector approach and link-state approach by having two modes: An NR mode, which is an extension of IDRP and is used for the most common ToS and policy constraints; and a SDR mode, which is like IDPR and is used for less frequent ToS and policy <p> The only drawback of our protocol is that to obtain a domain-level source route, views are merged at (or prior to) the connection (or flow) setup, thereby increasing the setup time. This drawback is not unique to our scheme <ref> [6, 11, 4, 8] </ref>. There are several ways to reduce the setup overhead. First, domain-level source routes to frequently used destinations can be cached. Second, views of frequently queried viewservers can be replicated at "mirror" viewservers in the source domain.
Reference: [9] <author> F. Kamoun and L. Kleinrock. </author> <title> Stochastic Performance Evaluation of Hierarchical Routing for Large Networks. </title> <booktitle> Computer Networks and ISDN Systems, </booktitle> <year> 1979. </year>
Reference-contexts: By exchanging k paths to each destination, the probability of detecting a valid path for each source can be increased. The most common approach for solving the scaling problem is to use superdomains (e.g. IDPR [11], IDRP [14], Nimrod [4]). Superdomains extend the idea of area hierarchy <ref> [9] </ref>. Here, domains are grouped hierarchically into superdomains: "close" domains are grouped into level 1 superdomains, "close" level 1 su-perdomains are grouped into level 2 superdomains, and so on.
Reference: [10] <author> B.M. Leiner. </author> <title> Policy issues in interconnecting networks. Request for Comment RFC-1124, </title> <institution> Network Information Center, </institution> <month> September </month> <year> 1989. </year>
Reference-contexts: Across all domains, an inter-domain routing protocol is executed that provides routes between source and destination nodes in different domains. This protocol must satisfy various constraints: (1) It must satisfy policy constraints, which are administrative restrictions on the inter-domain traffic <ref> [6, 10, 7, 3] </ref>. Policy constraints are of two types: transit policies and source policies. The transit policies of a domain A specify how other domains can use the resources of A (e.g. $0.01 per packet, no traffic from domain B).
Reference: [11] <author> M. Lepp and M. Steenstrup. </author> <title> An Architecture for Inter-Domain Policy Routing. Internet Draft. Available from the authors., </title> <month> June </month> <year> 1992. </year>
Reference-contexts: A router is a node that maintains a routing table. To achieve scaling, several approaches based on aggregating domains into superdomains have been proposed <ref> [11, 14, 4] </ref>. This approaches have drawbacks because the aggregation results in loss of detail (discussed in Section 2). Our protocol In this paper, we present an inter-domain routing protocol that we proposed recently [2]. It combines domain-level views with a novel hierarchical scheme. <p> In Section 4, we summarize our evaluation results from [2]. In Section 5, we conclude and describe how to add fault-tolerance and cacheing schemes to improve performance. 2 Related Work In this section, we survey recently proposed inter-domain routing protocols that support ToS and Policy constraints for large internetworks <ref> [12, 14, 11, 8, 4, 1, 16, 5] </ref>. Several inter-domain routing protocols (e.g. BGP [12], IDRP [14], NR [8]) are based on path-vector approach [15]. Here, for each destination domain a router maintains a set of paths, one through each of its neighbor routers. <p> For each destination, a router exchanges its best valid path 3 with its neighbor routers. However, a path-vector algorithm may not find a valid path from a source to the destination even if such a route exists <ref> [11] </ref>. By exchanging k paths to each destination, the probability of detecting a valid path for each source can be increased. The most common approach for solving the scaling problem is to use superdomains (e.g. IDPR [11], IDRP [14], Nimrod [4]). Superdomains extend the idea of area hierarchy [9]. <p> valid path from a source to the destination even if such a route exists <ref> [11] </ref>. By exchanging k paths to each destination, the probability of detecting a valid path for each source can be increased. The most common approach for solving the scaling problem is to use superdomains (e.g. IDPR [11], IDRP [14], Nimrod [4]). Superdomains extend the idea of area hierarchy [9]. Here, domains are grouped hierarchically into superdomains: "close" domains are grouped into level 1 superdomains, "close" level 1 su-perdomains are grouped into level 2 superdomains, and so on. <p> The usual techniques are to take either the union or the intersection of the constraints of the subdomains <ref> [11] </ref>. Both techniques have problems 4 . Other problems are described in [4, 1]. Some of the problems can be relaxed by having overlapping superdomains, but this increases the storage requirements drastically. <p> The only drawback of our protocol is that to obtain a domain-level source route, views are merged at (or prior to) the connection (or flow) setup, thereby increasing the setup time. This drawback is not unique to our scheme <ref> [6, 11, 4, 8] </ref>. There are several ways to reduce the setup overhead. First, domain-level source routes to frequently used destinations can be cached. Second, views of frequently queried viewservers can be replicated at "mirror" viewservers in the source domain.
Reference: [12] <author> K. Lougheed and Y. Rekhter. </author> <title> Border Gateway Protocol (BGP). Request for Comment RFC-1105, </title> <institution> Network Information Center, </institution> <month> June </month> <year> 1989. </year>
Reference-contexts: In Section 4, we summarize our evaluation results from [2]. In Section 5, we conclude and describe how to add fault-tolerance and cacheing schemes to improve performance. 2 Related Work In this section, we survey recently proposed inter-domain routing protocols that support ToS and Policy constraints for large internetworks <ref> [12, 14, 11, 8, 4, 1, 16, 5] </ref>. Several inter-domain routing protocols (e.g. BGP [12], IDRP [14], NR [8]) are based on path-vector approach [15]. Here, for each destination domain a router maintains a set of paths, one through each of its neighbor routers. <p> Several inter-domain routing protocols (e.g. BGP <ref> [12] </ref>, IDRP [14], NR [8]) are based on path-vector approach [15]. Here, for each destination domain a router maintains a set of paths, one through each of its neighbor routers. ToS and policy information is attached to these paths.
Reference: [13] <author> R. Perlman. </author> <title> Hierarchical Networks and Subnetwork Partition Problem. </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> 9 </volume> <pages> 297-303, </pages> <year> 1985. </year>
Reference-contexts: It must also handle non-hierarchical domain interconnections at any level [7] (e.g. we do not want to hand-configure special routes as "back-doors"). (4) Inter-domain routing protocols must automatically adapt to link cost changes, node/link failures and repairs including failures that partition domains <ref> [13] </ref>. A simple (or straightforward) approach to inter-domain routing is domain-level source routing with link-state approach [6, 3]. In this approach, each router 1 maintains a domain-level view of the internet-work, i.e., a graph with a vertex for every domain and an edge between every two neighbor domains.
Reference: [14] <author> Y. Rekhter. </author> <title> Inter-Domain Routing Protocol (IDRP). Available from the author., 1992. </title> <type> T.J. </type> <institution> Watson Research Center, IBM Corp. </institution>
Reference-contexts: A router is a node that maintains a routing table. To achieve scaling, several approaches based on aggregating domains into superdomains have been proposed <ref> [11, 14, 4] </ref>. This approaches have drawbacks because the aggregation results in loss of detail (discussed in Section 2). Our protocol In this paper, we present an inter-domain routing protocol that we proposed recently [2]. It combines domain-level views with a novel hierarchical scheme. <p> In Section 4, we summarize our evaluation results from [2]. In Section 5, we conclude and describe how to add fault-tolerance and cacheing schemes to improve performance. 2 Related Work In this section, we survey recently proposed inter-domain routing protocols that support ToS and Policy constraints for large internetworks <ref> [12, 14, 11, 8, 4, 1, 16, 5] </ref>. Several inter-domain routing protocols (e.g. BGP [12], IDRP [14], NR [8]) are based on path-vector approach [15]. Here, for each destination domain a router maintains a set of paths, one through each of its neighbor routers. <p> Several inter-domain routing protocols (e.g. BGP [12], IDRP <ref> [14] </ref>, NR [8]) are based on path-vector approach [15]. Here, for each destination domain a router maintains a set of paths, one through each of its neighbor routers. ToS and policy information is attached to these paths. <p> By exchanging k paths to each destination, the probability of detecting a valid path for each source can be increased. The most common approach for solving the scaling problem is to use superdomains (e.g. IDPR [11], IDRP <ref> [14] </ref>, Nimrod [4]). Superdomains extend the idea of area hierarchy [9]. Here, domains are grouped hierarchically into superdomains: "close" domains are grouped into level 1 superdomains, "close" level 1 su-perdomains are grouped into level 2 superdomains, and so on.
Reference: [15] <author> K. G. Shin and M. Chen. </author> <title> Performance Analysis of Distributed Routing Strategies Free or Ping-Pong-Type Looping. </title> <journal> IEEE Transactions on Computers, </journal> <year> 1987. </year>
Reference-contexts: Several inter-domain routing protocols (e.g. BGP [12], IDRP [14], NR [8]) are based on path-vector approach <ref> [15] </ref>. Here, for each destination domain a router maintains a set of paths, one through each of its neighbor routers. ToS and policy information is attached to these paths. Each router requires O (N D fi N D fi E R ) space.
Reference: [16] <author> P. F. Tsuchiya. </author> <title> The Landmark Hierarchy:A New Hierarchy For Routing In Very Large Networks. </title> <booktitle> In Proc. ACM SIGCOMM '88, </booktitle> <month> August </month> <year> 1988. </year>
Reference-contexts: In Section 4, we summarize our evaluation results from [2]. In Section 5, we conclude and describe how to add fault-tolerance and cacheing schemes to improve performance. 2 Related Work In this section, we survey recently proposed inter-domain routing protocols that support ToS and Policy constraints for large internetworks <ref> [12, 14, 11, 8, 4, 1, 16, 5] </ref>. Several inter-domain routing protocols (e.g. BGP [12], IDRP [14], NR [8]) are based on path-vector approach [15]. Here, for each destination domain a router maintains a set of paths, one through each of its neighbor routers. <p> The protocol uses a link-state view update protocol to handle topology changes, including failures that partition superdomains at any level. The landmark hierarchy <ref> [16] </ref> is another approach for solving the scaling problem. Here, each router is a landmark with a radius, and routers which are within a radius away from the landmark maintain a route to it.
References-found: 16

