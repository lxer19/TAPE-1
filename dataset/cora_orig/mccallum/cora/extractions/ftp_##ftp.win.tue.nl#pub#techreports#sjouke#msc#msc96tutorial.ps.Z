URL: ftp://ftp.win.tue.nl/pub/techreports/sjouke/msc/msc96tutorial.ps.Z
Refering-URL: http://www.win.tue.nl/win/cs/fm/sjouke/msc.html
Root-URL: http://www.win.tue.nl
Email: eMail: rudolphe@informatik.tu-muenchen.de  eMail: jens@itm.mu-luebeck.de  eMail: gr@zfe.siemens.de  
Title: Tutorial on Message Sequence Charts (MSC'96)  
Author: Ekkart Rudolph a Jens Grabowski b and Peter Graubmann c 
Address: Arcisstrasse 21, D-80290 Munchen, Germany,  Lubeck, Ratzeburger Allee 160, D-23538 Lubeck, Germany,  SE, Otto-Hahn-Ring 6, D-81739 Munchen, Germany,  
Affiliation: a Technical University of Munich, Institute for Informatics,  b Institute for Telematics, University of  c Siemens AG, ZFE T  
Abstract: MSC is a trace language which in its graphical form admits a particularly intuitive representation of system runs in distributed systems while focusing on the message interchange between communicating entities and their environment. For the first time the MSC recommendation Z.120 (MSC'92) was approved at the ITU meeting Geneva 1992. A new revised MSC recommendation Z.120 (MSC'96) was approved at the closing session of the last study period in April 1996. Whereas in MSC'92 main emphasis was put on the elaboration of basic concepts and a corresponding formal semantics, in the new MSC version - MSC'96 structural language constructs, essentially composition and object oriented concepts, play a dominant role. With these new concepts, the power of MSC is enhanced considerably in order to overcome the traditional restriction to the specification of only a few selected system runs. Within the tutorial, the use of MSC is demonstrated by means of the ISDN supplementary service 'Completion of Calls to Busy Subscriber (CCBS)'. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Alur, G.J. Holzmann, D. Peled. </author> <title> An Analyzer for Message Sequence Charts. </title> <booktitle> In: Proceedings of the 2nd International Workshop on Tools and Algorithms for the Construction and Analysis of Systems (TACAS95), </booktitle> <address> Passau, </address> <month> March </month> <year> 1996. </year>
Reference-contexts: Tutorial of the FORTE/PSTV'96 conference in Kaiserslautern, Germany, Oct. 1996 24 for performance evaluations <ref> [1] </ref>. All of these open items have been included in the working program for the next ITU- study period. An addendum to MSC'96 is planned for 1998 before the edition of the next MSC recommendation in 2000 (MSC'2000).
Reference: [2] <author> M. Andersson, J. Bergstrand. </author> <title> Formalizing Use Cases with Message Sequence Charts. </title> <type> Master Thesis, </type> <institution> Lund Institute of Technology, </institution> <year> 1995. </year>
Reference-contexts: The specification of Use Cases [14], i.e., of main scenarios together with all accompanying side cases, is one of the most promising candidates for the application of MSC'96 <ref> [2, 16] </ref>. This way, the traditional restriction of MSC to the specification of only few selected scenarios, which was considered as the major shortcoming of MSC'96, can be overcome.
Reference: [3] <author> G. Booch, J. Rumbaugh. </author> <title> Unified Method for Object-Oriented Development. Rational, </title> <year> 1996. </year>
Reference-contexts: Recently, also the object oriented community has shown increasing interest in the MSC standard as a means for the formalisation of Use Cases. This is now even under discussion within the "Unified Method for Object Oriented Development" <ref> [3] </ref>. Due to the new language concepts within MSC'96 - generalised ordering, inline expression, reference, High Level MSC (HMSC) the range of applicability of MSC has increased considerably. <p> within MSC `BUSY AGAIN': in off hook &lt; in digit &lt; out seizure int &lt; in ack &lt; in answer &lt; out connection in off hook &lt; in status request &lt; out status busy Going beyond MSC'96, a double vertical line taken over from object oriented Message Trace Diagrams (OMSC) <ref> [3, 4] </ref> shall denote a protected region which must not be interleaved by other events. 4.3 MSC `BUSY AFTER FREE' User B is not prevented from starting a setup after it has been found not busy (cf. MSC `BUSY AFTER FREE', Figure 25).
Reference: [4] <author> F. Buschmann, R. Meunier, H. Rohnert, P. Sommerlad, M. Stal. </author> <title> A System of Patterns. </title> <publisher> John Wiley & Sons, </publisher> <address> Chichester, </address> <year> 1996. </year>
Reference-contexts: within MSC `BUSY AGAIN': in off hook &lt; in digit &lt; out seizure int &lt; in ack &lt; in answer &lt; out connection in off hook &lt; in status request &lt; out status busy Going beyond MSC'96, a double vertical line taken over from object oriented Message Trace Diagrams (OMSC) <ref> [3, 4] </ref> shall denote a protected region which must not be interleaved by other events. 4.3 MSC `BUSY AFTER FREE' User B is not prevented from starting a setup after it has been found not busy (cf. MSC `BUSY AFTER FREE', Figure 25).
Reference: [5] <author> V. Encontre, E. Delboule, P. Gavaud, P. Leblanc, A. Boussalem. </author> <title> Combining Services, Message Sequence Charts And SDL: Formalism, Method and Tools. In: SDL'91 Evolving Methods (O. </title> <editor> Faergemand and R. Reed, editors). </editor> <publisher> North-Holland, </publisher> <year> 1991. </year>
Reference-contexts: Though the idea of combining MSC with composition mechanisms from process algebra goes back to the early days of MSC standardisation [21] and was carried forward within the GEODE tool <ref> [5] </ref>, a satisfactory formulation was found only recently after the development of the formal MSC semantics.
Reference: [6] <author> ETS 300 359-1. </author> <title> Integrated Services Digital Network (ISDN); Completion of Calls to Busy Subscriber (CCBS) supplementary service; Digital Subscriber Signalling System No. one (DSS1) protocol; Part 1: Protocol specification. </title> <institution> European Telecommunications Standards Institute (ETSI), Sophia Antipolis, France, </institution> <month> Nov. </month> <year> 1995. </year>
Reference-contexts: For our purpose, the explanation of the MSC language, we selected another supplementary service, namely 'Completion of Calls to Busy Subscriber' (CCBS). For its description we rely on the European Telecommunication Standard (ETS) No. 300 359-1 <ref> [6] </ref>. The CCBS service enables user A, encountering a busy destination B, to have a call completed without having to make a new call attempt when destination B becomes not busy. When user A requests the CCBS service, the network will monitor for destination B becoming not busy. <p> Tutorial of the FORTE/PSTV'96 conference in Kaiserslautern, Germany, Oct. 1996 18 Tutorial of the FORTE/PSTV'96 conference in Kaiserslautern, Germany, Oct. 1996 19 4 Further constructs of the MSC language The CCBS specification in Section 3 is guided by the European Telecommunication Standard 300 359-1 <ref> [6] </ref>. Therefore, our example specification is restricted to the CCBS specific events. We stuck to this example in order to obtain an MSC specification transparent and compact enough for a tutorial presentation.
Reference: [7] <author> J. Grabowski, P. Graubmann, E. Rudolph. </author> <title> The Standardization of Message Sequence Charts. </title> <booktitle> In: Proceedings of the IEEE Software Engineering Standards Symposium 1993. </booktitle> <month> Sept. </month> <year> 1993. </year>
Reference-contexts: Main reason for this success was that for the first time a systematic tool support became possible for MSC due to its standardisation. Nevertheless, the language constructs defined in MSC'92 <ref> [7, 20] </ref> appeared to be not sufficient to describe comprehensively even parts of an information system. MSC therefore was considered fruitful only in combination with other languages, dominantly SDL and TTCN (e.g., [9]).
Reference: [8] <author> J. Grabowski, P. Graubmann, and E. Rudolph. </author> <title> Towards an SDL-Design-Methodology Using Sequence Chart Segments. In: SDL'91 Evolving Methods (O. </title> <editor> Faergemand and R. Reed, editors). </editor> <publisher> North-Holland, </publisher> <year> 1991. </year>
Reference-contexts: In some respects MSC'96 [23] now looks like a graphical representation of process algebra whereas MSC'92 was influenced very much by ideas coming from Petri Nets with its composition mechanisms based on conditions <ref> [8, 11] </ref>. A closer look shows that the condition based composition mechanisms from MSC'92 have not been dropped but incorporated into process algebra based techniques in MSC'96. Surprisingly after all, no other language construct in MSC'96 has been discussed more extensively than the role of conditions.
Reference: [9] <author> J. Grabowski, D. Hogrefe, R. Nahm. </author> <title> Test Case Generation with Test Purpose Specification by MSCs. In: SDL'93 Using Objects (O. </title> <editor> Faergemand and A. Sarma, editors). </editor> <publisher> North-Holland, </publisher> <month> Oct. </month> <year> 1993. </year> <booktitle> Tutorial of the FORTE/PSTV'96 conference in Kaiserslautern, </booktitle> <address> Germany, </address> <month> Oct. </month> <year> 1996 </year> <month> 25 </month>
Reference-contexts: Nevertheless, the language constructs defined in MSC'92 [7, 20] appeared to be not sufficient to describe comprehensively even parts of an information system. MSC therefore was considered fruitful only in combination with other languages, dominantly SDL and TTCN (e.g., <ref> [9] </ref>). During the last ITU study period (1993 - 1996) the MSC language obtained a great impulse by the development of a corresponding formal semantics based on process algebra [17, 18, 24].
Reference: [10] <author> J. Grabowski, E. Rudolph. </author> <title> Putting Extended Sequence Charts to Practice. In: SDL'89 The Language at Work (O. </title> <editor> Faergemand and M. M. Marques, editors). </editor> <publisher> North-Holland, </publisher> <month> Oct. </month> <year> 1989. </year>
Reference-contexts: Before the approval of the first MSC recommendation Z.120 in 1992, MSC was used merely as an informal, illustrative language, e.g., in form of auxiliary diagrams within the SDL community <ref> [10] </ref>. In the meantime, MSC has advanced to a formal and descriptive language, i.e., a formal description technique (FDT).
Reference: [11] <author> P. Graubmann, E. Rudolph, J. Grabowski. </author> <title> Towards a Petri Net Based Semantics Definition for Message Sequence Charts. In: SDL'93 Using Objects (O. </title> <editor> Faergemand and A. Sarma, editors). </editor> <publisher> North-Holland, </publisher> <month> Oct. </month> <year> 1993. </year>
Reference-contexts: In some respects MSC'96 [23] now looks like a graphical representation of process algebra whereas MSC'92 was influenced very much by ideas coming from Petri Nets with its composition mechanisms based on conditions <ref> [8, 11] </ref>. A closer look shows that the condition based composition mechanisms from MSC'92 have not been dropped but incorporated into process algebra based techniques in MSC'96. Surprisingly after all, no other language construct in MSC'96 has been discussed more extensively than the role of conditions.
Reference: [12] <author> O. Haugen. </author> <title> Using MSC-92 effectively. </title> <booktitle> In: SDL'95 Proceedings of the 7.th SDL Forum in Oslo, </booktitle> <editor> Norway (R. Braek and A. Sarma, editors). </editor> <publisher> North-Holland, </publisher> <month> Sep. </month> <year> 1995. </year>
Reference-contexts: On the level of plain MSCs, inline operator expressions and MSC references have proven to provide an excellent means for a compact representation and for reusability. The inclusion of quite general gate concepts for inline expressions and references has contributed considerably to the power and expressiveness of MSC'96 <ref> [12] </ref>. The same concepts, however, may lead to the specification which are rather difficult to interpret. They may even contain deadlocks. This is a new situation, compared with MSC'92, where only deadlock-free MSCs could be specified.
Reference: [13] <author> ISO/IEC JTC 1/SC 21. </author> <title> Information Technology - OSI Service Conventions. Revised Text of CD 10731, </title> <address> ISO/IEC JTC 1/SC21 N 6341, </address> <month> January </month> <year> 1991. </year>
Reference-contexts: On this level of abstraction, synchronisation constructs are demanded similarly to Time Sequence Diagrams <ref> [13] </ref> which impose a time ordering between events attached to different Tutorial of the FORTE/PSTV'96 conference in Kaiserslautern, Germany, Oct. 1996 22 instances. 1 This kind of generalised ordering in MSC'96 is defined by means of connections graphically represented by a line symbol with an arrow symbol in its middle.
Reference: [14] <author> I. Jacobson. </author> <title> Object-Oriented Software Engineering A Use Case Driven Approach. </title> <publisher> Addison-Wesley, </publisher> <year> 1992. </year>
Reference-contexts: This is now even under discussion within the "Unified Method for Object Oriented Development" [3]. Due to the new language concepts within MSC'96 - generalised ordering, inline expression, reference, High Level MSC (HMSC) the range of applicability of MSC has increased considerably. The specification of Use Cases <ref> [14] </ref>, i.e., of main scenarios together with all accompanying side cases, is one of the most promising candidates for the application of MSC'96 [2, 16].
Reference: [15] <author> G.C. Kessler. </author> <title> ISDN (second edition). </title> <publisher> McGraw-Hill Inc., </publisher> <address> New York, </address> <year> 1993. </year>
Reference-contexts: The treatment of the CCBS example which has been chosen for this tutorial is carried through in this spirit. 2 Short description of the CCBS example An Integrated Services Digital Network (ISDN) (e.g., <ref> [15] </ref>) is a fully digital network that provides a large variety of data and telecommunications services. In its simplest form, an ISDN is merely an enhancement to the telephone local loop that will allow both voice and data to be carried over the same twisted pair.
Reference: [16] <author> S. Loidl. </author> <title> Interpretation und Werkzeugunterstutzung von Message Sequence Charts (MSC'96) (in German). </title> <note> Diploma thesis (in preparation), </note> <institution> Technical University of Munich (Germany), </institution> <month> November </month> <year> 1996. </year>
Reference-contexts: The specification of Use Cases [14], i.e., of main scenarios together with all accompanying side cases, is one of the most promising candidates for the application of MSC'96 <ref> [2, 16] </ref>. This way, the traditional restriction of MSC to the specification of only few selected scenarios, which was considered as the major shortcoming of MSC'96, can be overcome. <p> An addendum to MSC'96 is planned for 1998 before the edition of the next MSC recommendation in 2000 (MSC'2000). Compared with the extremely short time in which MSC'96 actually was produced, the result appears altogether to be surprisingly convincing and stable. The removal of deficiencies <ref> [16] </ref> but also the development of further language concepts like the incorporation of formal data concepts within MSC needs an intense input from users, tool makers and academic researchers.
Reference: [17] <author> S. Mauw, M.A. Reniers. </author> <title> An algebraic semantics of Basic Message Sequence Charts. </title> <journal> Computer Journal No. </journal> <volume> 37, </volume> <year> 1994. </year>
Reference-contexts: MSC therefore was considered fruitful only in combination with other languages, dominantly SDL and TTCN (e.g., [9]). During the last ITU study period (1993 - 1996) the MSC language obtained a great impulse by the development of a corresponding formal semantics based on process algebra <ref> [17, 18, 24] </ref>. Though the idea of combining MSC with composition mechanisms from process algebra goes back to the early days of MSC standardisation [21] and was carried forward within the GEODE tool [5], a satisfactory formulation was found only recently after the development of the formal MSC semantics.
Reference: [18] <author> S. Mauw. </author> <title> The formalization of Message Sequence Charts In: Computer Networks and ISDN Systems - SDL and MSC (Guest editor: </title> <editor> O. Haugen). </editor> <volume> Volume 28 (1996), Number 12, </volume> <month> June </month> <year> 1996. </year>
Reference-contexts: MSC therefore was considered fruitful only in combination with other languages, dominantly SDL and TTCN (e.g., [9]). During the last ITU study period (1993 - 1996) the MSC language obtained a great impulse by the development of a corresponding formal semantics based on process algebra <ref> [17, 18, 24] </ref>. Though the idea of combining MSC with composition mechanisms from process algebra goes back to the early days of MSC standardisation [21] and was carried forward within the GEODE tool [5], a satisfactory formulation was found only recently after the development of the formal MSC semantics.
Reference: [19] <author> E. Rudolph, P. Graubmann, J Grabowski. </author> <title> Message Sequence Chart: Composition Techniques versus OO-Techniques - 'Tema con Variazioni'. </title> <booktitle> In: SDL'95 Proceedings of the 7.th SDL Forum in Oslo, </booktitle> <editor> Norway (R. Braek and A. Sarma, editors). </editor> <publisher> North-Holland, </publisher> <month> Sep. </month> <year> 1995. </year>
Reference-contexts: The most prominent of these missing concepts are apart from the above mentioned exception handling concepts interruption and disruption operators and parallel composition concepts for HMSCs which include synchronisation mechanisms <ref> [19] </ref>. This wish list, of course, can be extended. The inclusion of formal data concepts has been mentioned already. A special language construct for the specification of synchronous communication mechanisms has still not been provided.
Reference: [20] <author> E. Rudolph, P. Graubmann, J. Grabowski. </author> <title> Tutorial on Message Sequence Charts. In: Computer Networks and ISDN Systems - SDL and MSC (Guest editor: </title> <editor> O. Haugen). </editor> <volume> Volume 28 (1996), Number 12, </volume> <month> June </month> <year> 1996. </year>
Reference-contexts: Main reason for this success was that for the first time a systematic tool support became possible for MSC due to its standardisation. Nevertheless, the language constructs defined in MSC'92 <ref> [7, 20] </ref> appeared to be not sufficient to describe comprehensively even parts of an information system. MSC therefore was considered fruitful only in combination with other languages, dominantly SDL and TTCN (e.g., [9]). <p> for a basic MSC containing only language con Tutorial of the FORTE/PSTV'96 conference in Kaiserslautern, Germany, Oct. 1996 7 structs which have been already included in MSC'92, namely environment (frame around the diagram), instance (vertical line with horizontal bars on top and bottom), message (arrow), action (rectangle) and condition (hexagon) <ref> [20] </ref>. Both conditions `CCBS Idle' and `CCBS Requested' are global: they refer to all instances contained in the MSC. In MSC'96 global is always interpreted on the level of the MSC document since the composition rules (HMSC static semantics rules) do not discern the instances.
Reference: [21] <author> Z.100 I (1993). </author> <title> SDL Methodology Guidelines. Appendix I to Z.100. ITU-T, </title> <address> Geneva, </address> <month> July </month> <year> 1993. </year>
Reference-contexts: Though the idea of combining MSC with composition mechanisms from process algebra goes back to the early days of MSC standardisation <ref> [21] </ref> and was carried forward within the GEODE tool [5], a satisfactory formulation was found only recently after the development of the formal MSC semantics.
Reference: [22] <author> Z.120 (1993). </author> <title> Message Sequence Chart (MSC). ITU-T, </title> <address> Geneva, </address> <month> Sep. </month> <year> 1994. </year>
Reference-contexts: In the meantime, MSC has advanced to a formal and descriptive language, i.e., a formal description technique (FDT). The edition of the first MSC recommendation in 1992 <ref> [22] </ref> has increased use and popularity of the MSC language beyond the expectation 1 Tutorial of the FORTE/PSTV'96 conference in Kaiserslautern, Germany, Oct. 1996 2 of most people.
Reference: [23] <author> Z.120 (1996). </author> <title> Message Sequence Chart (MSC). ITU-T, </title> <address> Geneva, </address> <month> April. </month> <year> 1996. </year>
Reference-contexts: In some respects MSC'96 <ref> [23] </ref> now looks like a graphical representation of process algebra whereas MSC'92 was influenced very much by ideas coming from Petri Nets with its composition mechanisms based on conditions [8, 11].
Reference: [24] <author> Z.120 B (1995). </author> <title> Message Sequence Chart Algebraic Semantics. ITU-T, </title> <address> Geneva, </address> <year> 1995. </year>
Reference-contexts: MSC therefore was considered fruitful only in combination with other languages, dominantly SDL and TTCN (e.g., [9]). During the last ITU study period (1993 - 1996) the MSC language obtained a great impulse by the development of a corresponding formal semantics based on process algebra <ref> [17, 18, 24] </ref>. Though the idea of combining MSC with composition mechanisms from process algebra goes back to the early days of MSC standardisation [21] and was carried forward within the GEODE tool [5], a satisfactory formulation was found only recently after the development of the formal MSC semantics.
References-found: 24

