URL: ftp://ftp.cs.purdue.edu/pub/jorg/9697trim.ps.Z
Refering-URL: http://www.cs.purdue.edu/homes/jorg/jorgs_papers.html
Root-URL: http://www.cs.purdue.edu
Title: C code for modeling smooth free-form surfaces of arbitrary patch-layout with linearly-trimmed bicubic B-splines (NURBS)  
Author: Jorg Peters 
Note: Supported by NSF National Young Investigator grant 9457806-CCR  
Date: April 7, 1997  
Abstract:  
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Catmull, E., and Clark, J. </author> <title> Recursively generated B-spline surfaces on arbitrary topological meshes. </title> <booktitle> Computer Aided Design 10 (1978), </booktitle> <pages> 350-355. </pages>
Reference-contexts: 1 Introduction Polyhedra can be smoothed into free-form surfaces using a variety of approaches such as rational blends, generalized subdivision or simplex splines (see e.g. [3], <ref> [1] </ref>, [2]). A major criticism leveled at these techniques is that they are incompatible, i.e. cannot be represented exactly or efficiently in the dominant patch representation, tensor-product B-splines. Tensor-product B-splines serve under the pseudonym NURBS as a standard for storage, transmission and high-level rendering.
Reference: [2] <author> Fong, P., and Seidel, H.-P. </author> <title> An implementation of triangular b-spline surface over arbitrary triangulations. </title> <booktitle> CAGD 10 (1993), </booktitle> <pages> 267-275. </pages>
Reference-contexts: 1 Introduction Polyhedra can be smoothed into free-form surfaces using a variety of approaches such as rational blends, generalized subdivision or simplex splines (see e.g. [3], [1], <ref> [2] </ref>). A major criticism leveled at these techniques is that they are incompatible, i.e. cannot be represented exactly or efficiently in the dominant patch representation, tensor-product B-splines. Tensor-product B-splines serve under the pseudonym NURBS as a standard for storage, transmission and high-level rendering.
Reference: [3] <author> Loop, C., and DeRose, T. </author> <title> Generalized b-spline surfaces of arbitrary topology. </title> <booktitle> Computer Graphics 24, 4 (1990), </booktitle> <pages> 347-356. </pages>
Reference-contexts: 1 Introduction Polyhedra can be smoothed into free-form surfaces using a variety of approaches such as rational blends, generalized subdivision or simplex splines (see e.g. <ref> [3] </ref>, [1], [2]). A major criticism leveled at these techniques is that they are incompatible, i.e. cannot be represented exactly or efficiently in the dominant patch representation, tensor-product B-splines. Tensor-product B-splines serve under the pseudonym NURBS as a standard for storage, transmission and high-level rendering.
Reference: [4] <author> Mantyl aa, M. </author> <title> An Introduction to Solid Modeling. </title> <publisher> Computer Science Press, </publisher> <year> 1988. </year>
Reference-contexts: A general algorithm for generating a planar-cut polyhedron can be found in [6] pp 649-650. The code provided with this paper is an independent module and does not require the data structures for maintaining polyhedra. Such data structures, e.g. the half-edge data structure, can be found in <ref> [4] </ref>. Also many commercially available modeling environments provide the necessary functionality for maintaining a planar-cut polyhedron. When generating the planar-cut polyhedron, interpolation and curvature properties of the surface can be controlled.
Reference: [5] <author> Peters, J. </author> <title> Biquartic C 1 -surface splines over irregular meshes. </title> <booktitle> Computer Aided Design 27, </booktitle> <month> 12 (December </month> <year> 1995), </year> <pages> 895-903. </pages>
Reference-contexts: The increased flexibility provided by the internal second-order knot lines of the trimmed patches results in better surface parametrizations than bicu-bic or even biquartic Bernstein-Bezier patches (cf. Theorem 2 of <ref> [5] </ref>). In particular, this construction guarantees tangent plane continuity, the strong convex hull property, locality and affine invariance. The patches join seamlessly with tensor-product biquadratic patches obtained by interpreting nine points forming four quadrilaterals in the planar-cut polyhedron as a B-spline control net.
Reference: [6] <author> Peters, J. </author> <title> C 1 -surface splines. </title> <journal> SIAM J. of Numer. Anal. </journal> <volume> 32, 2 (1995), </volume> <pages> 645-666. </pages>
Reference-contexts: Tensor-product B-splines serve under the pseudonym NURBS as a standard for storage, transmission and high-level rendering. However, NURBS impose a rectilinear, checkerboard surface-layout unsuitable for modeling arbitrarily laid out facets of general free-form surfaces. The incompatibility criticism seems also to apply to surface splines proposed in <ref> [6] </ref>, because surface splines employ three-sided surface pieces. Yet, the routine Pcp2Nurb described in this paper allows surface splines to meet the B-spline standard by efficiently and exactly representing collections of surface-spline pieces as linearly-trimmed, regularly parametrized NURBS patches. <p> underlying the algorithm and code is discussed in [7]: "Smoothing Polyhedra made Easy" where the coefficients of three-sided, cubic, C 1 connected patches are expressed as simple averages of a planar-cut polyhedron (see Section 3.1 for the definition of planar-cut polyhedron.) As a special case, the surface splines described in <ref> [6] </ref> always group four three-sided patches together as shown in Figure 2. By rotating and linearly clipping the domain as illustrated, each group can be represented as one linearly-trimmed, bicu-bic, tensor-product NURBS patch. <p> The patches join seamlessly with tensor-product biquadratic patches obtained by interpreting nine points forming four quadrilaterals in the planar-cut polyhedron as a B-spline control net. The transition between the trimmed bicubic patches and the biquadratic patches is automatically tangent continuous (cf. <ref> [6] </ref>, p 654). 4 3 Usage from an arbitrary polyhedron, while the main step generates the spline coefficients from subnets of the planar-cut polyhedron. 3.1 Preprocessing: Generating the planar-cut polyhe dron The goal of the preprocessing step is to transform an arbitrary input polyhedron into a planar-cut polyhedron. <p> Any rectilinear control mesh is a particular planar-cut polyhedron. There are many strategies for generating a planar-cut polyhedron. The most efficient strategy will depend on the particular class of surfaces modeled. A general algorithm for generating a planar-cut polyhedron can be found in <ref> [6] </ref> pp 649-650. The code provided with this paper is an independent module and does not require the data structures for maintaining polyhedra. Such data structures, e.g. the half-edge data structure, can be found in [4].
Reference: [7] <author> Peters, J. </author> <title> Smoothing polyhedra made easy. </title> <journal> ACM Transactions on Graphics 14, </journal> <month> 2 (April </month> <year> 1995), </year> <pages> 161-169. </pages>
Reference-contexts: A partial modeling system able to represent polyhedra and apply planar cuts. (See Section 3.1 for an explanation of planar cuts). 2 NURBS surface. 3 2 Background The principle underlying the algorithm and code is discussed in <ref> [7] </ref>: "Smoothing Polyhedra made Easy" where the coefficients of three-sided, cubic, C 1 connected patches are expressed as simple averages of a planar-cut polyhedron (see Section 3.1 for the definition of planar-cut polyhedron.) As a special case, the surface splines described in [6] always group four three-sided patches together as shown
Reference: [8] <author> Wernecke, J. </author> <title> The Inventor Mentor. </title> <publisher> Addison Wesley, </publisher> <address> New York, </address> <year> 1993. </year> <month> 9 </month>
Reference-contexts: These NURBS patches inherit a number of proven mathematical and shape properties and yield a low-degree polynomial representation of tangent continuous free-form surfaces with arbitrary patch-layout. As a proof of compatibility, Pcp2Nurb outputs Open Inventor NurbsSurface <ref> [8] </ref> structures on input of a polyhedron. The NURBS surface can be inspected using a standard display tool, ivview. It is clear that the surface can equally well be represented, say as an IGES structure.
References-found: 8

