URL: ftp://ftp.cse.ucsc.edu/pub/hsnlab/ucsc-crl-97-21.ps.Z
Refering-URL: http://www.cse.ucsc.edu/~lampros/papers.html
Root-URL: http://www.cse.ucsc.edu
Title: Explicit Window Adaptation: A Method to Enhance TCP Performance  OPNET modeling tool used for simulations  
Author: Lampros Kalampoukas Anujan Varma and K. K. Ramakrishnan 
Keyword: TCP, congestion control, buffer management, explicit window adaptation  
Note: This research is supported by the Advanced Research Projects Agency (ARPA) under Contract No. F19628-96-C-0038 and by the NSF Young Investigator Award No. MIP-9257103. The  was donated to us by MIL-3, Inc.  
Address: Santa Cruz, CA 95064  Florham Park, NJ 07932  
Affiliation: Board of Studies in Computer Engineering University of California, Santa Cruz  AT&T Labs-Research  
Date: August 21, 1997  
Pubnum: UCSC-CRL-97-21  
Abstract: We study the performance of TCP in an internetwork consisting of both rate-controlled and non-rate-controlled segments. A common example of such an environment occurs when the end systems are part of IP datagram networks interconnected by a rate-controlled segment, such as an ATM network using the ABR service. In the absence of congestive losses in either segment, TCP keeps increasing its window to its maximum size. Mismatch between the TCP window and the bandwidth-delay product of the network will result in accumulation of large queues and possibly buffer overflows in the devices at the edges of the rate-controlled segment, causing degraded throughput and unfairness. We develop an explicit feedback scheme, called Explicit Window Adaptation based on modifying the receiver's advertised window in TCP acknowledgments returning to the source. The window size indicated to TCP is a function of the free buffer in the edge device. Results from simulations with a wide range of traffic scenarios show that this explicit window adaptation scheme can control the buffer occupancy efficiently at the edge device, and results in significant improvements in packet loss rate, fairness, and throughput over a packet discard policy such as Drop-from-Front or Random Early Detection. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> V. Jacobson, </author> <title> "Congestion avoidance and control," </title> <booktitle> in Proc. of ACM SIGCOMM'88, </booktitle> <pages> pp. 314-329, </pages> <year> 1988. </year>
Reference-contexts: We used the OPNET modeling tool for all the simulations. The TCP model is based on the Reno version. It supports the congestion control mechanism described by Jacobson <ref> [1] </ref>, exponential back-off, enhanced round-trip time (RTT) estimation based on both the mean and the variance of the measured RTT, and the fast retransmit and fast recovery mechanisms.
Reference: [2] <author> V. Jacobson, </author> <title> "Modified TCP congestion avoidance algorithm." message to end2end-interest mailing list, </title> <month> April </month> <year> 1990. </year>
Reference: [3] <author> W. R. </author> <title> Stevens, </title> <journal> TCP/IP Illustrated, </journal> <volume> vol. 1. </volume> <publisher> Addison-Wesley Publishing Company, </publisher> <year> 1994. </year>
Reference: [4] <author> S. Floyd and V. Jacobson, </author> <title> "Random Early Detection gateways for congestion avoidance," </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> vol. 1, no. 4, </volume> <pages> pp. 397-413, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: initial value of ssthresh = 64 KBytes). 2.1 TCP Performance with Drop-from-Front AAPs To reduce the tendency of Drop-Tail routers to synchronize losses of multiple connections, and the possibility of multiple losses to a connection in a round-trip, two alternative policies have been suggested: Drop-from-Front [5] and Random Early Detection <ref> [4] </ref>. With Drop-from-Front, when a packet arrives at a full queue, the packet stored at the head of the queue is dropped. If service for the packet at the head of the queue has already started, the following packet in the queue is dropped instead. <p> In contrast to the Drop-Tail case, the progress of the two active TCP connections is fair. 2.2 TCP performance with Random Early Detection (RED) AAPs The Random Early Detection (RED) scheme also has the same objective of improving TCP throughput and fairness <ref> [4] </ref>. Congestion is determined by comparing the average queue size to a predetermined threshold. Congestion can be detected even before the buffer is full, thus controlling the average queue size. In periods of congestion RED marks incoming packets in order to indicate congestion to TCP sources. <p> However, RED succeeds in achieving fairness. To study the sensitivity of the scheme to the maximum marking probability, we increased max p from 0.02 to 0.05, while keeping the rest of the parameters the same. This value is within the range suggested for RED <ref> [4] </ref>. The sequence number plots for this case are given in Figure 2.11, and the measured link utilization in Figure 2.12. We observe that the connection progress is again fair but the overall performance is further degraded, and the results are now comparable to those from Drop-from-Front.
Reference: [5] <author> T. V. Lakshman, A. Neidhardt, and T. J. Ott, </author> <title> "The drop from front strategy in TCP and in TCP over ATM," </title> <booktitle> in Proc. of IEEE INFOCOM'96, </booktitle> <volume> vol. 3, </volume> <pages> pp. 1242-50, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: Another discard policy that has been shown to work well with TCP is Drop-from-Front, which drops the packets at the head of the FIFO queue in the router when the buffer becomes full <ref> [5] </ref>. This approach, however, may still cause back-to-back losses and unfairness. Both RED and Drop-from-Front are generic solutions with the potential of improving the efficiency and fairness of networks with TCP-controlled traffic, without being tied to a specific network technology. <p> Even when the latter is small compared to the former, Explicit Window Adaptation resulted in close-to-ideal throughput and fairness. The performance of TCP when operating exclusively over IP datagram networks has been the subject of extensive research in the past <ref> [6, 7, 8, 9, 10, 11, 12, 13, 14, 5] </ref>. Similarly, TCP performance over ATM networks using the Available Bit-Rate (ABR) service has also been studied [15, 16, 17]. These studies provide valuable insights into TCP dynamics and how TCP congestion control mechanisms interact with ABR congestion control algorithms. <p> backbone delay = 5 msecs, initial value of ssthresh = 64 KBytes). 2.1 TCP Performance with Drop-from-Front AAPs To reduce the tendency of Drop-Tail routers to synchronize losses of multiple connections, and the possibility of multiple losses to a connection in a round-trip, two alternative policies have been suggested: Drop-from-Front <ref> [5] </ref> and Random Early Detection [4]. With Drop-from-Front, when a packet arrives at a full queue, the packet stored at the head of the queue is dropped. If service for the packet at the head of the queue has already started, the following packet in the queue is dropped instead. <p> Lakshman and Madhow [7] showed that the amount of buffer in Drop-Tail switches should be at least two to three times the bandwidth-delay product of the network in order for TCP to achieve decent performance and to avoid losses when operating in the slow-start phase. Also, Lakshman, et. al. <ref> [5] </ref> demonstrated that the buffering needed by the Drop-from-Front scheme must be of the order of the bandwidth-delay product for the network to achieve good performance. For this experiment we use the same network topology and traffic scenario from the previous experiment.
Reference: [6] <author> V. Jacobson, R. Braden, and D. </author> <title> Borman, "TCP extensions for high performance," Request for Comments: </title> <type> 1323, </type> <month> May </month> <year> 1992. </year>
Reference-contexts: Even when the latter is small compared to the former, Explicit Window Adaptation resulted in close-to-ideal throughput and fairness. The performance of TCP when operating exclusively over IP datagram networks has been the subject of extensive research in the past <ref> [6, 7, 8, 9, 10, 11, 12, 13, 14, 5] </ref>. Similarly, TCP performance over ATM networks using the Available Bit-Rate (ABR) service has also been studied [15, 16, 17]. These studies provide valuable insights into TCP dynamics and how TCP congestion control mechanisms interact with ABR congestion control algorithms.
Reference: [7] <author> T. V. Lakshman and U. Madhow, </author> <title> "Performance analysis of window-base flow control using TCP/IP: The effect of high bandwidth-delay products and random loss," </title> <booktitle> in Proc. of High Performance Networking, V. IFIP TC6/WG6.4 Fifth International Conference, </booktitle> <volume> vol. C, </volume> <pages> pp. 135-149, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: Even when the latter is small compared to the former, Explicit Window Adaptation resulted in close-to-ideal throughput and fairness. The performance of TCP when operating exclusively over IP datagram networks has been the subject of extensive research in the past <ref> [6, 7, 8, 9, 10, 11, 12, 13, 14, 5] </ref>. Similarly, TCP performance over ATM networks using the Available Bit-Rate (ABR) service has also been studied [15, 16, 17]. These studies provide valuable insights into TCP dynamics and how TCP congestion control mechanisms interact with ABR congestion control algorithms. <p> This behavior tends to be periodic, and may result in loss of throughout and overall performance degradation. The effect of such periodic losses on TCP performance was analyzed by Lakshman, et. al. <ref> [7] </ref>. Although the above problem could occur in more general environments, we focus our attention in this paper on TCP/IP internetworks where the end systems are connected to legacy LANs (such as Ethernet or Token Ring), with the LANs interconnected through a rate-controlled ATM virtual circuit. <p> The fairness and efficiency of packet discard schemes such as Drop-Tail, Drop-from-Front, and RED degrade dramatically when the amount of buffer at the AAP is less than the round-trip bandwidth-delay product. Lakshman and Madhow <ref> [7] </ref> showed that the amount of buffer in Drop-Tail switches should be at least two to three times the bandwidth-delay product of the network in order for TCP to achieve decent performance and to avoid losses when operating in the slow-start phase.
Reference: [8] <author> J. C. Mogul, </author> <title> "Observing TCP dynamics in real networks," </title> <booktitle> in Proc. of ACM SIGCOMM'92, </booktitle> <pages> pp. 305-317, </pages> <month> August </month> <year> 1992. </year>
Reference-contexts: Even when the latter is small compared to the former, Explicit Window Adaptation resulted in close-to-ideal throughput and fairness. The performance of TCP when operating exclusively over IP datagram networks has been the subject of extensive research in the past <ref> [6, 7, 8, 9, 10, 11, 12, 13, 14, 5] </ref>. Similarly, TCP performance over ATM networks using the Available Bit-Rate (ABR) service has also been studied [15, 16, 17]. These studies provide valuable insights into TCP dynamics and how TCP congestion control mechanisms interact with ABR congestion control algorithms.
Reference: [9] <author> R. Wilder, K. K. Ramakrishnan, and A. Mankin, </author> <title> "Dynamics of congestion control and avoidance of two-way traffic in an OSI testbed," </title> <journal> ACM Computer Communication Review, </journal> <volume> vol. 21, no. 2, </volume> <pages> pp. 43-58, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: Even when the latter is small compared to the former, Explicit Window Adaptation resulted in close-to-ideal throughput and fairness. The performance of TCP when operating exclusively over IP datagram networks has been the subject of extensive research in the past <ref> [6, 7, 8, 9, 10, 11, 12, 13, 14, 5] </ref>. Similarly, TCP performance over ATM networks using the Available Bit-Rate (ABR) service has also been studied [15, 16, 17]. These studies provide valuable insights into TCP dynamics and how TCP congestion control mechanisms interact with ABR congestion control algorithms.
Reference: [10] <author> L. Zhang and D. D. Clark, </author> <title> "Oscillating behavior of network traffic: A case study simulation," </title> <journal> Intenetworking: Research and Experience, </journal> <volume> vol. 1, no. 2, </volume> <pages> pp. 101-112, </pages> <month> December </month> <year> 1990. </year>
Reference-contexts: Even when the latter is small compared to the former, Explicit Window Adaptation resulted in close-to-ideal throughput and fairness. The performance of TCP when operating exclusively over IP datagram networks has been the subject of extensive research in the past <ref> [6, 7, 8, 9, 10, 11, 12, 13, 14, 5] </ref>. Similarly, TCP performance over ATM networks using the Available Bit-Rate (ABR) service has also been studied [15, 16, 17]. These studies provide valuable insights into TCP dynamics and how TCP congestion control mechanisms interact with ABR congestion control algorithms.
Reference: [11] <author> L. Zhang, S. Shenker, and D. D. Clark, </author> <title> "Observations on the dynamics of a congestion control algorithm: The effects of two-way traffic," </title> <booktitle> in Proc. of ACM SIGCOMM'91, </booktitle> <pages> pp. 133-147, </pages> <month> September </month> <year> 1991. </year>
Reference-contexts: Even when the latter is small compared to the former, Explicit Window Adaptation resulted in close-to-ideal throughput and fairness. The performance of TCP when operating exclusively over IP datagram networks has been the subject of extensive research in the past <ref> [6, 7, 8, 9, 10, 11, 12, 13, 14, 5] </ref>. Similarly, TCP performance over ATM networks using the Available Bit-Rate (ABR) service has also been studied [15, 16, 17]. These studies provide valuable insights into TCP dynamics and how TCP congestion control mechanisms interact with ABR congestion control algorithms.
Reference: [12] <author> A. Mankin, </author> <title> "Random drop congestion control," </title> <booktitle> in Proc. of ACM SIGCOMM'90, </booktitle> <pages> pp. 1-7, </pages> <month> September </month> <year> 1990. </year>
Reference-contexts: Even when the latter is small compared to the former, Explicit Window Adaptation resulted in close-to-ideal throughput and fairness. The performance of TCP when operating exclusively over IP datagram networks has been the subject of extensive research in the past <ref> [6, 7, 8, 9, 10, 11, 12, 13, 14, 5] </ref>. Similarly, TCP performance over ATM networks using the Available Bit-Rate (ABR) service has also been studied [15, 16, 17]. These studies provide valuable insights into TCP dynamics and how TCP congestion control mechanisms interact with ABR congestion control algorithms.
Reference: [13] <author> A. Mankin and K. K. Ramakrishnan, </author> <title> "Gateway congestion control survey," Request for Comments: </title> <type> 1254, </type> <month> August </month> <year> 1991. </year> <note> References 28 </note>
Reference-contexts: Even when the latter is small compared to the former, Explicit Window Adaptation resulted in close-to-ideal throughput and fairness. The performance of TCP when operating exclusively over IP datagram networks has been the subject of extensive research in the past <ref> [6, 7, 8, 9, 10, 11, 12, 13, 14, 5] </ref>. Similarly, TCP performance over ATM networks using the Available Bit-Rate (ABR) service has also been studied [15, 16, 17]. These studies provide valuable insights into TCP dynamics and how TCP congestion control mechanisms interact with ABR congestion control algorithms.
Reference: [14] <author> S. Floyd and V. Jacobson, </author> <title> "On traffic phase effects in packet-switched gateways," Internetworking: </title> <journal> Research and Experience, </journal> <volume> vol. 3, no. 3, </volume> <pages> pp. 115-156, </pages> <month> September </month> <year> 1992. </year>
Reference-contexts: Even when the latter is small compared to the former, Explicit Window Adaptation resulted in close-to-ideal throughput and fairness. The performance of TCP when operating exclusively over IP datagram networks has been the subject of extensive research in the past <ref> [6, 7, 8, 9, 10, 11, 12, 13, 14, 5] </ref>. Similarly, TCP performance over ATM networks using the Available Bit-Rate (ABR) service has also been studied [15, 16, 17]. These studies provide valuable insights into TCP dynamics and how TCP congestion control mechanisms interact with ABR congestion control algorithms. <p> These synchronized losses result in a corresponding synchronized reaction by multiple connections simultaneously reducing their windows. The potential over-correction may eventually lead to reduced throughput <ref> [14] </ref>. Furthermore, if multiple losses occur from a single connection within one RTT, the connection may be forced into the slow-start phase. We will now consider two scenarios to illustrate the effects of packet losses occurring at the AAPs on TCP performance.
Reference: [15] <author> A. Romanow and S. Floyd, </author> <title> "Dynamics of TCP traffic over ATM networks," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 633-41, no. 4, </volume> <editor> p. </editor> <volume> 13, </volume> <month> May </month> <year> 1995. </year>
Reference-contexts: The performance of TCP when operating exclusively over IP datagram networks has been the subject of extensive research in the past [6, 7, 8, 9, 10, 11, 12, 13, 14, 5]. Similarly, TCP performance over ATM networks using the Available Bit-Rate (ABR) service has also been studied <ref> [15, 16, 17] </ref>. These studies provide valuable insights into TCP dynamics and how TCP congestion control mechanisms interact with ABR congestion control algorithms. Several modifications to TCP have also been proposed with the objective of improving both network utilization and fairness.
Reference: [16] <author> L. Kalampoukas and A. Varma, </author> <title> "Performance of TCP over multi-hop ATM networks: A comparative study of ATM layer congestion control schemes," </title> <booktitle> in Proc. of ICC'95, </booktitle> <pages> pp. 1472-1477, </pages> <month> June </month> <year> 1995. </year>
Reference-contexts: The performance of TCP when operating exclusively over IP datagram networks has been the subject of extensive research in the past [6, 7, 8, 9, 10, 11, 12, 13, 14, 5]. Similarly, TCP performance over ATM networks using the Available Bit-Rate (ABR) service has also been studied <ref> [15, 16, 17] </ref>. These studies provide valuable insights into TCP dynamics and how TCP congestion control mechanisms interact with ABR congestion control algorithms. Several modifications to TCP have also been proposed with the objective of improving both network utilization and fairness.
Reference: [17] <author> B. J. Ewy, J. B. Evans, V. S. Frost, and G. J. Minden, </author> <title> "TCP/ATM experiences in the MAGIC testbed," </title> <booktitle> in Proc. of the Fourth IEEE International Symposium on High Performance Distributed Computing, </booktitle> <pages> pp. 87-93, </pages> <month> August </month> <year> 1995. </year>
Reference-contexts: The performance of TCP when operating exclusively over IP datagram networks has been the subject of extensive research in the past [6, 7, 8, 9, 10, 11, 12, 13, 14, 5]. Similarly, TCP performance over ATM networks using the Available Bit-Rate (ABR) service has also been studied <ref> [15, 16, 17] </ref>. These studies provide valuable insights into TCP dynamics and how TCP congestion control mechanisms interact with ABR congestion control algorithms. Several modifications to TCP have also been proposed with the objective of improving both network utilization and fairness.
Reference: [18] <author> S. Floyd, </author> <title> "TCP and explicit congestion notification," </title> <journal> Computer Communication Review, </journal> <volume> vol. 24, no. 5, </volume> <pages> pp. 8-23, </pages> <month> October </month> <year> 1994. </year>
Reference-contexts: These studies provide valuable insights into TCP dynamics and how TCP congestion control mechanisms interact with ABR congestion control algorithms. Several modifications to TCP have also been proposed with the objective of improving both network utilization and fairness. Floyd <ref> [18] </ref> proposed to modify TCP to include Explicit Congestion Notification (ECN) from routers to the source. By combining explicit notification with RED, the performance of both delay-sensitive (telnet-like) and delay-insensitive (ftp-like) traffic can be improved [18]. <p> Floyd <ref> [18] </ref> proposed to modify TCP to include Explicit Congestion Notification (ECN) from routers to the source. By combining explicit notification with RED, the performance of both delay-sensitive (telnet-like) and delay-insensitive (ftp-like) traffic can be improved [18]. Other approaches such as Tri-S [19] and TCP-Vegas [20] attempt to estimate the bandwidth-delay product for each TCP connection and adjust the window size based on this estimate. However, these schemes introduce complexity in the end-system and require extensive modifications to current TCP implementations.
Reference: [19] <author> Z. Wang and J. Crowcroft, </author> <title> "A new congestion control scheme: Slow start and search (Tri-S)," </title> <journal> Computer Communication Review, </journal> <volume> vol. 21, no. 1, </volume> <pages> pp. 32-43, </pages> <month> January </month> <year> 1991. </year>
Reference-contexts: Floyd [18] proposed to modify TCP to include Explicit Congestion Notification (ECN) from routers to the source. By combining explicit notification with RED, the performance of both delay-sensitive (telnet-like) and delay-insensitive (ftp-like) traffic can be improved [18]. Other approaches such as Tri-S <ref> [19] </ref> and TCP-Vegas [20] attempt to estimate the bandwidth-delay product for each TCP connection and adjust the window size based on this estimate. However, these schemes introduce complexity in the end-system and require extensive modifications to current TCP implementations. <p> Motivation 3 2 Motivation Window-based protocols control the amount of outstanding data in the network. Even though several extensions to TCP have been proposed with the objective of adapting the window size to the actual bandwidth-delay product of the underlying network <ref> [19, 20] </ref>, current implementations require a packet loss to reduce the congestion window size. In the absence of such losses the congestion window increases up to the maximum socket buffer advertised by the receiver.
Reference: [20] <author> L. S. Brakmo and L. L. Peterson, </author> <title> "TCP Vegas: End to end congestion avoidance on a global Internet," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 13, no. 8, </volume> <pages> pp. 1465-80, </pages> <month> October </month> <year> 1995. </year>
Reference-contexts: Floyd [18] proposed to modify TCP to include Explicit Congestion Notification (ECN) from routers to the source. By combining explicit notification with RED, the performance of both delay-sensitive (telnet-like) and delay-insensitive (ftp-like) traffic can be improved [18]. Other approaches such as Tri-S [19] and TCP-Vegas <ref> [20] </ref> attempt to estimate the bandwidth-delay product for each TCP connection and adjust the window size based on this estimate. However, these schemes introduce complexity in the end-system and require extensive modifications to current TCP implementations. <p> Motivation 3 2 Motivation Window-based protocols control the amount of outstanding data in the network. Even though several extensions to TCP have been proposed with the objective of adapting the window size to the actual bandwidth-delay product of the underlying network <ref> [19, 20] </ref>, current implementations require a packet loss to reduce the congestion window size. In the absence of such losses the congestion window increases up to the maximum socket buffer advertised by the receiver.
Reference: [21] <author> R. Jain, </author> <title> "Myths about congestion management in high-speed networks," Internetworking: </title> <journal> Research and Experience, </journal> <volume> vol. 3, no. 3, </volume> <pages> pp. 101-113, </pages> <month> September </month> <year> 1992. </year>
Reference-contexts: When TCP traffic is carried over an ATM network, the window-based congestion control mechanisms of TCP can interact with the rate-based control mechanisms in the ATM network in undesirable ways. These interactions are a result of the mismatch in the dynamics introduced by rate-based and window-based control <ref> [21] </ref>. TCP controls the total amount of data injected into the network, but does not control its burstiness. However, the service rate the connection receives at the edge of the ATM network is constant.
Reference: [22] <author> R. Cole, D. Shur, and C. Villamizar, </author> <title> "IP over ATM: A framework document," Request for Comments (RFC): </title> <year> 1932, </year> <month> April </month> <year> 1996. </year>
Reference-contexts: We will refer to the routers at the boundary between the two networks as ATM Access Points (AAPs) and to the LAN segments as IP networks. For IP over ATM we assume the framework described in <ref> [22] </ref>. According to this framework, a single VC is set up for carrying ABR traffic between a source and a destination system. TCP connections destined to different IP networks will be carried over separate VCs.
Reference: [23] <author> L. Kalampoukas, A. Varma, and K. K. Ramakrishnan, </author> <title> "Dynamics of an explicit rate allocation algorithm for ATM networks," </title> <booktitle> in Proc. of International Broadband Communications Conference'96, </booktitle> <address> IFIP-IEEE, </address> <month> April </month> <year> 1996. </year>
Reference-contexts: Switch IP-ATM Router 2 Destination node IP-ATM Router 3 IP Network 3 IP Network 4 Destination node IP-ATM Router 4 1, 6 3, 8 5, 10 L1 L4 L3 allocation algorithm in the ATM network for support of ABR service, providing the three VCs with a fair and loss-free environment <ref> [23] </ref>. We consider this as a best case scenario. Each of the links in this configuration has a capacity of 155 Mbits/sec. The one-way propagation delays of connections 1 and 2b in IP Network 1 are set to 3 milliseconds and that of connection 3b to 0.8 sec.
Reference: [24] <author> D. Mitra, </author> <title> "Asymptotically optimal design of congestion control for high speed data networks," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. 40, no. 2, </volume> <pages> pp. 301-311, </pages> <month> February </month> <year> 1992. </year>
Reference-contexts: Any further increase of the window size contributes only to increased queueing delay, not improved throughput. Optimal setting of the window size, however, requires knowledge of the RTT and the bandwidth-delay product of the network <ref> [24] </ref>. Such information is usually not available at network elements. Instead, EWA determines when the network pipe is full by monitoring the occupancy of the buffer serving the outgoing ATM virtual circuit at the AAP: non-empty buffer is either an indication of a full pipe or bursty traffic.
Reference: [25] <author> A. K. Choudhury and E. L. Hahne, </author> <title> "Dynamic queue length thresholds in a shared memory ATM switch," </title> <booktitle> in Proc. of IEEE INFOCOM'96, </booktitle> <volume> vol. 2, </volume> <pages> pp. 679-87, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: The computed feedback is a function of the free buffer space at the AAP. In that sense it is similar to the idea proposed by Choudhury and Hahne <ref> [25] </ref> for controlling dynamic buffer thresholds in a shared-memory switch. In our case, however, the feedback computed is used to adapt the TCP window maintained at the sources in order to limit packet losses in the AAP's buffer.
Reference: [26] <author> H. T. Kung, T. Blackwell, and A. Chapman, </author> <title> "Credit-Based flow control for ATM networks: Credit update protocol, adaptive credit allocation, and statistical multiplexing," </title> <booktitle> in Proc. of ACM SIGCOMM'94, </booktitle> <pages> pp. 101-114, </pages> <month> September </month> <year> 1994. </year>
Reference-contexts: This logarithmic feedback function allows us to allocate the free buffer among the TCP connections, incrementally, on encountering an ack from each connection. This does not require main 3. Explicit Window Adaptation 13 taining any connection-level state. Although this scheme has similarities with buffer allocation in credit-based flow control <ref> [26, 27] </ref>, our goal is not to achieve loss-free operation, but to reduce losses dramatically, while achieving fairness. Gross over-allocation is avoided because of the incremental allocation of the buffer upon each ack received, so that the feedback returned is a function of the current free buffer.
Reference: [27] <author> C. M. Ozveren, R. Simcoe, and G. Varghese, </author> <title> "Reliable and efficient hop-by-hop flow control," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 13, no. 4, </volume> <pages> pp. 642-650, </pages> <month> May </month> <year> 1995. </year>
Reference-contexts: This logarithmic feedback function allows us to allocate the free buffer among the TCP connections, incrementally, on encountering an ack from each connection. This does not require main 3. Explicit Window Adaptation 13 taining any connection-level state. Although this scheme has similarities with buffer allocation in credit-based flow control <ref> [26, 27] </ref>, our goal is not to achieve loss-free operation, but to reduce losses dramatically, while achieving fairness. Gross over-allocation is avoided because of the incremental allocation of the buffer upon each ack received, so that the feedback returned is a function of the current free buffer.
Reference: [28] <author> S. Floyd, </author> <title> "Connections with multiple congested gateways in packet-switched networks, Part I: One-way traffic," </title> <journal> Computer Communication Review, </journal> <volume> vol. 21, no. 5, </volume> <pages> pp. 30-47, </pages> <month> October </month> <year> 1991. </year>
Reference-contexts: The throughput achieved by each connection is shown in Figure 4.11. Note the small variations in the utilization of individual connections because of the differences in round-trip delays. This is because of the well-known effect of TCP favoring connections with smaller round-trip times <ref> [28] </ref>. Achieving equal throughputs under asymmetric RTTs requires bandwidth allocation and scheduling at the level of individual TCP flows. The buffer occupancy in AAP-1 is shown in Figure 4.10.
References-found: 28

