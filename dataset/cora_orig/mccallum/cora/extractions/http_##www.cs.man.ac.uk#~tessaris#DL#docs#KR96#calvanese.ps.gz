URL: http://www.cs.man.ac.uk/~tessaris/DL/docs/KR96/calvanese.ps.gz
Refering-URL: http://www.cs.man.ac.uk/~tessaris/DL/papers.html
Root-URL: http://www.cs.man.ac.uk
Email: calvanese@dis.uniroma1.it  
Title: Finite Model Reasoning in Description Logics  
Address: Via Salaria 113, I-00198 Roma, Italy  
Affiliation: Diego Calvanese Dipartimento di Informatica e Sistemistica Universita di Roma "La Sapienza"  
Note: In Proc. of KR'96  
Abstract: For the basic Description Logics reasoning with respect to finite models amounts to reasoning with respect to arbitrary ones, but finiteness of the domain needs to be considered if expressivity is increased and the finite model property fails. Procedures for reasoning with respect to arbitrary models in very expressive Description Logics have been developed, but these are not directly applicable in the finite case. We first show that we can nevertheless capture a restricted form of finiteness and represent finite modeling structures such as lists and trees, while still reasoning with respect to arbitrary models. The main result of this paper is a procedure to reason with respect to finite models in an expressive Description Logic equipped with inverse roles, cardinality constraints, and in which arbitrary inclusions between concepts can be specified without any restriction. This provides the necessary expressivity to go beyond most semantic and object-oriented Database models, and capture several useful extensions. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Abiteboul, S. & Bonner, A. </author> <year> (1991). </year> <title> Objects and views. </title> <booktitle> In Proc. of the ACM SIGMOD Int. Conf. on Management of Data, </booktitle> <pages> pp. </pages> <address> 238-247 New York (NY, USA). </address>
Reference-contexts: Relevant examples are: * Classes defined through necessary and sufficient conditions, which correspond to so called views in object-oriented DBs <ref> (Abiteboul & Bonner, 1991) </ref>.
Reference: <author> Artale, A., Franconi, E., Guarino, N., & Pazzi, L. </author> <year> (1996). </year> <title> Part-whole relations in object-centered systems: An overview. </title> <journal> Data and Knowledge Engineering. </journal> <note> To appear. </note>
Reference: <author> Baader, F. </author> <year> (1990). </year> <title> Terminological cycles in KL-ONE-based knowledge representation languages. </title> <booktitle> In Proc. of the 8th Nat. Conf. on Artificial Intelligence (AAAI-90), </booktitle> <pages> pp. </pages> <address> 621-626 Boston, Ma. </address>
Reference-contexts: the one which gives the most intuitive results (Nebel, 1991; Buchheit, Donini, Nutt, & Schaerf, 1995), and it is also the only one that can be adopted for the most general type of schemata, called free, in which none of the three conditions above is required to hold 3 . <ref> (Baader, 1990) </ref> argues that from a constructive point of view greatest fixpoint semantics should be preferred. Least fixpoint semantics, on the other hand, seems the most appropriate for the definition of inductive structures.
Reference: <author> Bergamaschi, S. & Sartori, C. </author> <year> (1992). </year> <title> On taxonomic reasoning in conceptual design. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 17 (3), </volume> <pages> 385-422. </pages>
Reference: <author> Borgida, A. </author> <year> (1995). </year> <title> Description logics in data management. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 7 (5), </volume> <pages> 671-682. </pages>
Reference: <author> Borgida, A., Lenzerini, M., </author> <title> Nardi, </title> <editor> D., & Nebel, B. (Eds.). </editor> <year> (1995). </year> <title> Working Notes of the 1995 Description Logics Workshop, </title> <type> Technical Report, </type> <institution> RAP 07.95, Dipartimento di Informatica e Sistemistica, Universita di Roma "La Sapienza", Rome (Italy). </institution>
Reference: <author> Buchheit, M., Donini, F. M., Nutt, W., & Schaerf, A. </author> <year> (1995). </year> <title> A refined architecture for terminological systems: Terminology = schema + views. </title> <type> Tech. rep. </type> <institution> RR-95-09, Deutsches Forschungszentrum fur Kunstliche In-telligenz (DFKI). </institution>
Reference-contexts: We remark that recently there have been also proposals for an integration of the different types of semantics by including fixpoint constructors in the logic (Schild, 1994; De Giacomo & Lenzerini, 1994b) and interpreting cycles with descriptive semantics. Assumption 3 is sometimes made in concept-based KR systems <ref> (Buchheit et al., 1995) </ref> and it is usually implicit in DB models, in which the classes are specified only through necessary conditions (Calvanese et al., 3 The expressivity of free schemata defined in this way is equivalent to the one of schemata constituted by free inclusion assertions, which have the form <p> Although it strongly limits expressivity, reasoning on primitive schemata is nevertheless intractable even in the simplest setting, where we use only the constructors of AL (which are common to almost all representation formalisms) and the schema is acyclic <ref> (Buchheit et al., 1995) </ref>.
Reference: <author> Buongarzoni, P., Menghini, C., Salis, R., Sebastiani, F., & Straccia, U. </author> <year> (1995). </year> <title> Logical and computational properties of the description logic mirtl.. </title> <editor> In Borgida et al. (Borgida, Lenzerini, Nardi, & Nebel, </editor> <year> 1995), </year> <pages> pp. 80-84. </pages>
Reference-contexts: Therefore FirstGuard is consistent but not finitely consistent. For other examples, see the logics in (De Giacomo & Lenzerini, 1994a; Calvanese et al., 1994), or the one in <ref> (Buongarzoni et al., 1995) </ref>, where not cycles but 4 singleton concepts are used to specify concepts that are consistent only in an infinite domain.
Reference: <author> Calvanese, D. </author> <year> (1996a). </year> <title> Reasoning with inclusion axioms in description logics: Algorithms and complexity. </title> <booktitle> In Proc. of the 12th European Conf. on Artificial Intelligence (ECAI-96), </booktitle> <pages> pp. 303-307. </pages> <publisher> John Wiley & Sons. </publisher>
Reference-contexts: In fact assumption 3 reduces worst case complexity of reasoning on a schema only if relatively weak languages are adopted <ref> (Calvanese, 1996a) </ref>. 3 FROM FINITE MODELING STRUCTURES TO FINITE MODELS Both in KR and in DBs representation formalisms have been developed which offer powerful structuring capabilities and procedures to reason about a specification.
Reference: <author> Calvanese, D. </author> <year> (1996b). </year> <title> Unrestricted and Finite Model Reasoning in Class-Based Representation Formalisms. </title> <type> Ph.D. thesis, </type> <institution> Dipartimento di Informatica e Sistemist-ica, Universita di Roma "La Sapienza". </institution>
Reference-contexts: The details of the reduction can be found in <ref> (Calvanese, 1996b) </ref>. Proposition 4 Given a free ALT -schema S and a concept expression E, one can construct in polynomial time in jSj + jEj an rfcpdl-formula f S;E such that f S;E is satisfiable if and only if E is consistent in S. <p> We can now state the main theorem concerning finite concept consistency. Theorem 6 A concept C 2 C is finitely consistent in S if and only if C [ &gt; &lt; X Var ( e B) 1 &gt; = admits an acceptable nonnegative integer solution. As shown in <ref> (Calvanese, 1996b) </ref>, by applying linear programming techniques one can decide the existence of acceptable nonnegative integer solutions in polynomial time in the size of the system.
Reference: <author> Calvanese, D., De Giacomo, G., & Lenzerini, M. </author> <year> (1995). </year> <title> Structured objects: Modeling and reasoning. </title> <booktitle> In Proc. of the 4th Int. Conf. on Deductive and Object-Oriented Databases (DOOD-95), No. 1013 in LNCS, </booktitle> <pages> pp. 229-246. </pages> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Decidability in deterministic exponential time of reasoning in an object-oriented model with the same ex-pressivity as free ALT -schemata was already shown in <ref> (Calvanese, De Giacomo, & Lenzerini, 1995) </ref>. We briefly sketch the idea underlying the proof, which exploits the correspondence with PDLs: Concepts of DLs correspond to formulae of PDLs, roles correspond to programs, and (almost) every constructor of DLs has its counterpart in PDLs.
Reference: <author> Calvanese, D., Lenzerini, M., & Nardi, D. </author> <year> (1994). </year> <title> A unified framework for class based representation formalisms. </title> <booktitle> In Proc. of the 4th Int. Conf. on the Principles of Knowledge Representation and Reasoning (KR-94), </booktitle> <pages> pp. </pages> <address> 109-120 Bonn. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: In particular, this happens also for the logics which include inverse roles and functionality of roles, and which therefore have sufficient expressivity to represent semantic and object-oriented DB models <ref> (Calvanese et al., 1994) </ref>. <p> The constructors that cause the loss of the finite model property are all necessary in order to capture the characteristics of the most important representation formalisms used both in KR and in DBs <ref> (Calvanese et al., 1994) </ref>. In fact, neither the Entity-Relationship model nor expressive object-oriented models have the finite model property, and since the assumption of a finite domain is essential in this context, specialized methods capable of reasoning in these formalisms with respect to finite models are needed. <p> Theorem 5 Unrestricted concept consistency and concept subsumption in free ALT -schemata are EXPTIME-complete. 5 REASONING WITH RESPECT TO FINITE MODELS In this section we present a technique for reasoning with respect to finite models in L-schemata. The method extends the one proposed in <ref> (Calvanese et al., 1994) </ref> to reason on primitive ALU N I-schemata, and is based on the same idea of constructing from a schema a system of linear inequations, and relating the existence of finite models of the schema to the existence of particular solutions of the system. <p> j L 1 t L 2 j 8R.L 1 j 9R.L 1 j 9 m R j 9 n R: Therefore, in the following we assume to deal with free normalized ALCN I-schemata. 5.1 EXPANSION OF A SCHEMA We generalize now the definition of expansion of a schema introduced in <ref> (Calvanese et al., 1994) </ref> to free ALCN I-schemata. Let S := (C; P; T ) be such a schema. <p> It is easy to see that the size of the expansion is exponential in the size of the original schema and that it can also be effectively constructed in exponential time. In <ref> (Calvanese et al., 1994) </ref> it is shown that for primitive ALU N I-schemata a system of linear inequations can be directly constructed from the compound assertions in the expansion, such that particular solutions of this system correspond to finite models of the schema.
Reference: <author> Cattell, R. G. G. (Ed.). </author> <year> (1994). </year> <title> The Object Database Standard: ODMG-93. </title> <publisher> Morgan Kaufmann. Release 1.1. </publisher>
Reference-contexts: This represents a significant improvement with respect to traditional data models, where such modeling structures, if present at all, are ad hoc additions that require a special treatment by the reasoning procedures <ref> (Cattell, 1994) </ref>. The known methods for reasoning with respect to arbitrary models in expressive DLs are based on a correspondence between DLs and Propositional Dynamic Logics (PDLs) and exploit the powerful reasoning methods developed for PDLs (Schild, 1991; De Giacomo & Lenzerini, 1994a).
Reference: <author> De Giacomo, G. </author> <year> (1996). </year> <title> Tbox and abox reasoning in expressive description logics. </title> <booktitle> In Proc. of the 5th Int. 11 Conf. on the Principles of Knowledge Representation and Reasoning (KR-96). </booktitle> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: A major point is the extension of the reasoning techniques to deal also with extensional knowledge, i.e. with assertions stating properties of specific objects. In the unrestricted case, the reasoning technique for ALT discussed in Section 4 can be directly integrated with the work in <ref> (De Giacomo, 1996) </ref>, still obtaining an EXPTIME upper-bound. In the finite case, the proposed technique can be applied under specific assumptions which are rather restrictive but common in DBs.
Reference: <author> De Giacomo, G. & Lenzerini, M. </author> <year> (1994a). </year> <title> Boosting the correspondence between description logics and propositional dynamic logics. </title> <booktitle> In Proc. of the 12th Nat. Conf. on Artificial Intelligence (AAAI-94), </booktitle> <pages> pp. 205-212. </pages> <publisher> AAAI Press/The MIT Press. </publisher>
Reference-contexts: PDLs are formalisms specifically designed for reasoning about program schemes (Kozen & Tiuryn, 1990), and their correspondence with DLs was described first in (Schild, 1991) and extended to more expressive logics in <ref> (De Giacomo & Lenzerini, 1994a) </ref>. The correspondence allows one to reduce concept consistency to satisfiability of a formula of some PDL, and to use the advanced methods developed for PDLs to solve this latter task.
Reference: <author> De Giacomo, G. & Lenzerini, M. </author> <year> (1994b). </year> <title> Concept language with number restrictions and fixpoints, and its relationship with -calculus. </title> <booktitle> In Proc. of the 11th European Conf. on Artificial Intelligence (ECAI-94), </booktitle> <pages> pp. 411-415. </pages>
Reference: <author> De Giacomo, G. & Lenzerini, M. </author> <year> (1995). </year> <title> What's in an aggregate: Foundations for description logics with tuples and sets. </title> <booktitle> In Proc. of the 14th Int. Joint Conf. on Artificial Intelligence (IJCAI-95), </booktitle> <pages> pp. 801-807. </pages>
Reference-contexts: For those logics it becomes important to provide specific reasoning methods for both the finite and the unrestricted case. 1 While for unrestricted reasoning, techniques have been developed to deal with very expressive DLs <ref> (De Gi-acomo & Lenzerini, 1995) </ref>, decidability of reasoning with respect to finite models is still open for important cases. <p> Therefore, we syntactically restrict the use of these problematic constructors in a way similar to what done in <ref> (De Giac-omo & Lenzerini, 1995) </ref> for the logic CAT S. <p> Decidability in deterministic exponential time of reasoning in an object-oriented model with the same ex-pressivity as free ALT -schemata was already shown in <ref> (Calvanese, De Giacomo, & Lenzerini, 1995) </ref>. We briefly sketch the idea underlying the proof, which exploits the correspondence with PDLs: Concepts of DLs correspond to formulae of PDLs, roles correspond to programs, and (almost) every constructor of DLs has its counterpart in PDLs.
Reference: <author> Di Battista, G. & Lenzerini, M. </author> <year> (1993). </year> <title> Deductive entity-relationship modeling. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 5 (3), </volume> <pages> 439-450. </pages>
Reference-contexts: Using free assertions 5 it is also possible to specify only sufficient conditions for an object to be an instance of a class, and more general forms of integrity constraints. * Classes defined as the union of other classes. * ISA relations between relationships in the Entity-Relationship model <ref> (Di Battista & Lenzerini, 1993) </ref>. * Negative assertions about classes, such as disjoint-ness, or non-participation in a relationship (Di Bat tista & Lenzerini, 1993). 5 See footnote 3. <p> to be an instance of a class, and more general forms of integrity constraints. * Classes defined as the union of other classes. * ISA relations between relationships in the Entity-Relationship model (Di Battista & Lenzerini, 1993). * Negative assertions about classes, such as disjoint-ness, or non-participation in a relationship <ref> (Di Bat tista & Lenzerini, 1993) </ref>. 5 See footnote 3.
Reference: <author> Donini, F. M., Lenzerini, M., Nardi, D., & Nutt, W. </author> <year> (1991a). </year> <title> The complexity of concept languages. </title> <booktitle> In Proc. of the 2nd Int. Conf. on the Principles of Knowledge Representation and Reasoning (KR-91), </booktitle> <pages> pp. 151-162. </pages> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: These formalisms exploit Description Logics for the definition of schemata, and the logics we define extend the well known logics of the AL-family <ref> (Donini, Lenzerini, Nardi, & Nutt, 1991a) </ref> by several expressive constructs. 2.1 SYNTAX AND SEMANTICS OF DESCRIPTION LOGICS The basic elements of Description Logics (DLs) are concepts and roles, which denote classes and binary relations, respectively.
Reference: <author> Donini, F. M., Lenzerini, M., Nardi, D., & Nutt, W. </author> <year> (1991b). </year> <title> Tractable concept languages. </title> <booktitle> In Proc. of the 12th Int. Joint Conf. on Artificial Intelligence (IJCAI-91), </booktitle> <pages> pp. </pages> <address> 458-463 Sydney. </address>
Reference: <author> Emerson, E. A. & Jutla, C. S. </author> <year> (1989). </year> <title> On simultaneously determinizing and complementing !-automata. </title> <booktitle> In Proc. of the 4th Int. Conf. of Logic in Computer Science (LICS-89), </booktitle> <pages> pp. 333-342. </pages>
Reference-contexts: Exploiting the results described in <ref> (Emerson & Jutla, 1989) </ref>, the nonemptiness problem for such a hybrid tree automaton can be solved in deterministic time that is polynomial in the number of states of T f and exponential in the number of states of W f .
Reference: <author> Harel, D. </author> <year> (1983). </year> <title> Recurring dominoes: Making the highly undecidable highly understandable. </title> <booktitle> In Proc. of the Int. Conf. on Foundations of Computational Theory (FCT-83), No. 158 in LNCS, </booktitle> <pages> pp. 177-194. </pages> <publisher> Springer-Verlag. </publisher>
Reference: <author> Kozen, D. </author> <year> (1983). </year> <title> Results on the propositional - calculus. </title> <journal> Theoretical Computer Science, </journal> <volume> 27, </volume> <pages> 333-354. </pages>
Reference-contexts: In terms of PDLs, wf (R) corresponds to a negated repeat formula :(R) (Streett, 1982), which is in turn equivalent to the least fixpoint expression 4 X.8R.X <ref> (Kozen, 1983) </ref>. Thus we can use such constructor to express finite structures that admit a least-fixpoint definition. We illustrate this on the example of binary trees. <p> Concerning point 1 above, we have mentioned in Section 3 that the well-founded constructor is equivalent to a particular type of least-fixpoint expression. A natural extension would be to allow arbitrary nested fixpoints as in the -calculus <ref> (Kozen, 1983) </ref> together with inverse roles and number restrictions.
Reference: <author> Kozen, D. & Tiuryn, J. </author> <year> (1990). </year> <title> Logics of programs. </title> <booktitle> In Handbook of Theoretical Computer Science Formal Models and Semantics, </booktitle> <pages> pp. 789-840. </pages> <publisher> Elsevier Science Publishers (North-Holland). </publisher>
Reference-contexts: PDLs are formalisms specifically designed for reasoning about program schemes <ref> (Kozen & Tiuryn, 1990) </ref>, and their correspondence with DLs was described first in (Schild, 1991) and extended to more expressive logics in (De Giacomo & Lenzerini, 1994a).
Reference: <author> Lecluse, C. & Richard, P. </author> <year> (1989). </year> <title> Modeling complex structures in object-oriented databases. </title> <booktitle> In Proc. of the 8th ACM SIGACT SIGMOD SIGART Sym. on Principles of Database Systems (PODS-89), </booktitle> <pages> pp. 362-369. </pages>
Reference: <author> Nebel, B. </author> <year> (1990). </year> <title> Terminological reasoning is inherently intractable. </title> <journal> Artificial Intelligence Journal, </journal> <volume> 43, </volume> <pages> 235-249. </pages>
Reference-contexts: Assumption 2 of acyclicity (which is meaningful only in the presence of assumption 1) is made in most existing concept-based KR systems, although imposing this condition strongly limits the expressive power of the system <ref> (Nebel, 1990) </ref>. Many real world concepts can in fact be expressed naturally only in a recursive way and thus through cycles. The reason for not admitting cycles is twofold.
Reference: <author> Nebel, B. </author> <year> (1991). </year> <title> Terminological cycles: Semantics and computational properties. </title> <editor> In Sowa, J. F. (Ed.), </editor> <booktitle> Principles of Semantic Networks, </booktitle> <pages> pp. 331-361. </pages> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: For each concept name there is at most one assertion in which that name appears in the left-hand side. 2. The schema contains no cycles 2 . 2 See <ref> (Nebel, 1991) </ref> for a formal definition of cycle in a schema. 3 3. The schema contains only primitive concept spe- cifications (primitive schema). <p> Besides descriptive semantics, which is the semantic specification described above, so called fixpoint semantics have been considered <ref> (Nebel, 1991) </ref>.
Reference: <author> Sattler, U. </author> <year> (1995). </year> <title> A concept language for an engineering application with part-whole relations.. </title> <editor> In Borgida et al. (Borgida et al., </editor> <year> 1995), </year> <pages> pp. 119-123. </pages>
Reference: <author> Schild, K. </author> <year> (1991). </year> <title> A correspondence theory for terminological logics: Preliminary report. </title> <booktitle> In Proc. of the 12th Int. Joint Conf. on Artificial Intelligence (IJCAI-91), </booktitle> <pages> pp. </pages> <address> 466-471 Sydney, Australia. </address>
Reference-contexts: PDLs are formalisms specifically designed for reasoning about program schemes (Kozen & Tiuryn, 1990), and their correspondence with DLs was described first in <ref> (Schild, 1991) </ref> and extended to more expressive logics in (De Giacomo & Lenzerini, 1994a). The correspondence allows one to reduce concept consistency to satisfiability of a formula of some PDL, and to use the advanced methods developed for PDLs to solve this latter task.
Reference: <author> Schild, K. </author> <year> (1994). </year> <title> Terminological cycles and the propositional -calculus. </title> <booktitle> In Proc. of the 4th Int. Conf. on the Principles of Knowledge Representation and Reasoning (KR-94), </booktitle> <pages> pp. </pages> <address> 509-520 Bonn. </address> <publisher> Morgan Kaufmann. </publisher>
Reference: <author> Schmidt-Schau, M. </author> <year> (1989). </year> <title> Subsumption in KL-ONE is undecidable. </title> <booktitle> In Proc. of the 1st Int. Conf. on the Principles of Knowledge Representation and Reasoning (KR-89), </booktitle> <pages> pp. 421-431. </pages> <publisher> Morgan Kaufmann. </publisher>
Reference: <author> Streett, R. E. </author> <year> (1982). </year> <title> Propositional dynamic logic of looping and converse is elementarily decidable. </title> <journal> Information and Computation, </journal> <volume> 54, </volume> <pages> 121-141. </pages>
Reference-contexts: Well-foundedness can be imposed by using wf (R), which expresses that there is no infinite sequence of objects, connected one to the next by means of role R. In terms of PDLs, wf (R) corresponds to a negated repeat formula :(R) <ref> (Streett, 1982) </ref>, which is in turn equivalent to the least fixpoint expression 4 X.8R.X (Kozen, 1983). Thus we can use such constructor to express finite structures that admit a least-fixpoint definition. We illustrate this on the example of binary trees.
Reference: <author> Thomas, W. </author> <year> (1990). </year> <title> Automata on infinite objects. </title> <editor> In van Leuven, J. (Ed.), </editor> <booktitle> Handbook of Theoretical Computer Science, </booktitle> <volume> Vol. </volume> <editor> B, chap. </editor> <volume> 4, </volume> <pages> pp. 134-189. </pages> <publisher> Elsevier Science Publishers (North-Holland). </publisher>
Reference-contexts: To show decidability of rfcpdl we reduce satisfiability of a formula to nonemptiness of the language accepted by a finite automaton on infinite objects derived from the formula <ref> (Thomas, 1990) </ref>. This is a standard technique that provides tight upper bounds for various modal and temporal logics (Emerson & Jutla, 1989; Vardi & Wolper, 1994) and logics of programs (Vardi, 1985; Vardi & Wolper, 1986; Vardi & Stockmeyer, 1985), and we extend it to rfcpdl.
Reference: <author> Vardi, M. Y. </author> <year> (1985). </year> <title> The taming of converse: Reasoning about two-way computations. </title> <booktitle> In Proc. of the 4th Workshop on Logics of Programs, No. 193 in LNCS, </booktitle> <pages> pp. 413-424. </pages> <publisher> Springer-Verlag. </publisher>
Reference: <author> Vardi, M. Y. & Stockmeyer, L. </author> <year> (1985). </year> <title> Improved upper and lower bounds for modal logics of programs: Preliminary report. </title> <booktitle> In Proc. of the 17th ACM SIGACT Sym. on Theory of Computing (STOC-85), </booktitle> <pages> pp. 240-251. </pages>
Reference: <author> Vardi, M. Y. & Wolper, P. </author> <year> (1986). </year> <title> Automata-theoretic techniques for modal logics of programs. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 32, </volume> <pages> 183-221. </pages> <note> A preliminary version appeared in Proc. of the 16th ACM SIGACT Symp. on Theory of Computing (STOC-84). </note>
Reference: <author> Vardi, M. Y. & Wolper, P. </author> <year> (1994). </year> <title> Reasoning about infinite computations. </title> <journal> Information and Computation, </journal> <volume> 115 (1), </volume> <pages> 1-37. </pages>
References-found: 37

