URL: http://www.cs.dartmouth.edu/~brd/papers/ijrr-djr97-galleys.ps.gz
Refering-URL: http://www.cs.dartmouth.edu/~brd/papers.html
Root-URL: http://www.cs.dartmouth.edu
Author: Bruce Randall Donald James Jennings Daniela Rus 
Keyword: Information Invariants  
Note: for Distributed Manipulation 1  
Address: Ithaca, New York, USA  
Affiliation: Robotics and Vision Laboratory Department of Computer Science Cornell University  
Abstract: In (Donald 1995), we described a manipulation task for cooperating mobile robots that can push large, heavy objects. There, we asked whether explicit local and global communication between the agents can be removed from a family of pushing protocols. In this article, we answer in the affirmative. We do so by using the general methods of (Donald 1995), analyzing information invariants. We discuss several measures for the information complexity of the task: (1) How much internal state should the robot retain? (2) How many cooperating agents are required, and how much communication between them is necessary? (3) How can the robot change (side effect) the environment to record state or sensory information for performing a task? (4) How much information is provided by sensors? and (5) How much computation is required by the robot? To answer these questions, we develop a notion of information invariants. We develop a technique whereby one sensor can be constructed from others by adding, deleting, and reallocating 1) through 5), among collaborating autonomous agents. We add a resource to measures 1) through 5) and ask: 6) How much information is provided by the task mechanics? By answering this question, we hope to develop information invariants that explicitly tradeoff resource 6) with resources 1) through 5). The protocols The International Journal of Robotics Research, Vol. 16, No. 5, October 1997, pp. 000-000, 1997 Massachusetts Institute of Technology. Currently at Department of Computer Science, Tulane University, New Orleans, Louisiana, USA y Currently at Department of Computer Science, Dartmouth College, Hanover, New Hampshire, USA 1. Support for our robotics research is provided in part by the National Science Foundation under grants IRI-8802390, IRI-9000532, 
Abstract-found: 1
Intro-found: 1
Reference: <author> Blum, M., and Kozen, D. </author> <title> 1978 (Ann Arbor, MI). On the power of the compass (or, why are mazes easier to search than graphs?). </title> <booktitle> In Proceedings of the 19th Symposium on the Foundations of Computer Science. </booktitle> <pages> pp. 132-142. </pages>
Reference: <author> Briggs, A. </author> <year> 1987. </year> <title> An efficient algorithm for one-step compliant motion planning with uncertainty. </title> <address> Algoritmica 8(2)195-208. </address>
Reference: <author> Canny, J. </author> <title> 1989 (Scottsdale, AZ). </title> <booktitle> On computablility of tine motion plans. In Proceedings og the 1989 IEEE Donald, Jennings, and Rus 29 International Conference on Robotics and Automation, </booktitle> <pages> pp. 1178-1184. </pages>
Reference: <author> Canny, J., and Reif, J. </author> <year> 1987. </year> <title> New lower bound techniques for robot motion planning problems. </title> <booktitle> In Proceedings of the 28th Symposium on the Foundations of Computer Science. </booktitle> <address> Los Alamitos, CA: </address> <publisher> IEEE Computer Society Press, </publisher> <pages> pp. 132-142. </pages>
Reference: <author> Donald, B. </author> <year> 1989. </year> <title> Error Detection and Recovery in Robotics, </title> <booktitle> vol. 336 of Lecture Notes in Computer Science New York: </booktitle> <publisher> Springer-Verlag. </publisher>
Reference-contexts: In addition to the work discussed here in Section 1, for a detailed bibliographic essay on previous research on the geometric theory of planning under uncertainty, see (Donald 1992) or <ref> (Donald 1989) </ref>. The goals outlined here are ambitious, and we have only taken a small step toward them. The questions above provide the setting for our inquiry, but we are far from answering them completely.
Reference: <author> Donald, B. R. </author> <year> 1990. </year> <title> The complexitey of planar compliant motion planning with uncertainty. </title> <journal> Algorithmica 5(3) </journal> <pages> 353-382. </pages>
Reference: <author> Donald, B. R. </author> <year> 1992. </year> <title> Robot Motion planning. </title> <journal> IEEE Trans. Robot. Automat. </journal> <volume> 8(2) </volume> <pages> 353-382. </pages>
Reference-contexts: His theory is set in a logical framework where sensors are logical predicates. Perhaps our theory could be viewed as a geometric attack on a similar problem. This work was motivated by the theoretical attack on perceptual equivalence begun by <ref> (Donald and Jennings 1992) </ref> and by the experimental studies of (Jennings and Rus 1993). Horswill (1992) has developed a semantics for sensory systems that models and quantifies the kinds of assumptions a sensoricomputational program makes about its environment. He also gives source-to-source transformations on sensori-computational circuits. <p> In addition to the work discussed here in Section 1, for a detailed bibliographic essay on previous research on the geometric theory of planning under uncertainty, see <ref> (Donald 1992) </ref> or (Donald 1989). The goals outlined here are ambitious, and we have only taken a small step toward them. The questions above provide the setting for our inquiry, but we are far from answering them completely. <p> From the mechanics perspective, it might appear we are done. However, it is difficult to overstate how critically Protocol P.O relies on global communication and control. Consider the analogous pushing task in Figure 4B. Each finger is replaced by an autonomous mobile robot such as those described in <ref> (Rees and Donald 1992) </ref>. The robots we have in mind are the Cornell mobile robots (see Figure 1), but the details of their construction are not important. The robots can move about by controlling motors attached to wheels. <p> The robots can move about by controlling motors attached to wheels. The robots are autonomous and equipped with a ring of 12 simple Polaroid ultrasonic sonar sensors. Each robot has on-board processors for control and programming. The description in <ref> (Rees and Donald 1992) </ref> is augmented as follows. (This description characterizes the robots in our lab.) We equip each robot with 12 infrared modems/sensors, arrayed in a ring about the robot body. Each modem consists of an emitter-detector pair. <p> Protocol P.I. The robots synchronize their actuators by communicating their force measurements. Fig. 7. The mechanical observables for Protocol P.I. the robots can synchronize their velocities; 4 and by examining the servo loop in <ref> (Rees and Donald 1992) </ref>, it is clear that we can compute a measure of applied force by observing the applied power, the position and velocity of the robot, and the contact sensors. <p> Transform the communication between two agents L and R into shared data structures. 17. In particular, we have considerably improved the protocol 4 3 from (Donald, Jennings, and Rus 1993a). See (Rus, Donald, and Jen-nings 1995). 18. We use the term in the sense of <ref> (Donald and Jennings 1992) </ref>; others, particularly Henderson, have used similar concepts. 6. Implement the shared data structures as mechanical registers. For example, (t) is a register that L and R share. We believe that our methods are useful for developing parallel manipulation protocols.
Reference: <author> Donald, B. R. </author> <title> 1993 (Atlanta, GA). Information invariants in robotics, parts I and II. </title> <booktitle> In Proceedings of the 1993 Ieee International Conference on Robotics and Automation, </booktitle> <pages> pp. 116-121. </pages>
Reference-contexts: The Big Picture Our goal is to investigate the information requirements for robot tasks. This article uses the theoretical framework introduced by Donald in <ref> (Donald 1993, 1995) </ref>. A central theme to previous work (see the survey article [Donald 1992] for a detailed review) has been to determine what information is required to solve a task, and to direct a robot's actions to acquire that information to solve it. Key questions concern: 1. <p> In particular, sensing has never been carefully considered or modeled in the on-line paradigm. The chief lacuna in the armamentarium of devices for analyzing on-line strategies is a principled theory of sen-soricomputational systems. We attempted to fill this gap in <ref> (Donald 1993, 1995) </ref>, where we provided a theory of situated sensor systems. We argue this framework is natural for answering certain kinds of important questions about sensors. Our theory is intended to reveal a system's information invariants. <p> Our measure of information complexity is relativized, both to the information complexity of the sensoricomputational components of B, and to the bandwidth of A. This relativization circumvents some tricky 2. In <ref> (Donald 1993) </ref>, 1 is also called &lt; s . 4 The International Journal of Robotics Research Table 1. <p> Definition 9 may also be lifted to (partially) immersed graphs, and hence to situated manipulation circuits. 3.5. Reductions, Calibration, and Codesignation As we observed in <ref> (Donald 1993) </ref>, calibration exploits external state. We wish to order systems on how much information this external state (from calibration) yields, to obtain Definition 10, below. Calibration complexity is defined formally in (Donald 1995). Here is the basic idea. <p> Hence, the sensor system (Q + comm (S)) from eq. (2) may be implemented as the sensor system Q permuted in an arbitrary way, plus one extra data path whose bandwidth is that of the largest flow in S. 10. In <ref> (Donald 1993) </ref>, 1 is also called &lt; s . Observe that even when is transitive, it appears that 1 is not. To see this, suppose that A 1 B and B 1 C.
Reference: <author> Donald, B. R. </author> <year> 1995. </year> <title> Information invariants in robotics. Art. </title> <journal> Intell. J. </journal> <volume> 72 </volume> <pages> 217-304. </pages>
Reference-contexts: Horswill (1992) has developed a semantics for sensory systems that models and quantifies the kinds of assumptions a sensoricomputational program makes about its environment. He also gives source-to-source transformations on sensori-computational circuits. The paper <ref> (Donald 1995) </ref> discusses the semantics of sensor sys Donald, Jennings, and Rus 3 tems. This formalism is used to explore some properties of what we call situated sensor systems. Donald (1995) describes a way to transform sensoricomputational systems. <p> It is very difficult to analyze the interaction of sensing, computation, communication (1-5) and mechanics (6) (see Table 1) in distributed manipulation tasks. The analyses of <ref> (Donald 1995) </ref> focus on (1-5), and each analysis is parameterized by the task. This article represents an attempt to integrate a measure of the information content of the task mechanics (6) into the theory. <p> We foreground the task of pushing an object, using two communicating robots who need to infer the position of the first moment of the friction distribution with respect to their lines of pushing (see Figure 4A). In <ref> (Donald 1995) </ref>, we asked whether explicit communication could be removed from this protocol (by explicit, we mean local communication, such as IR, or global communication, such as RF). <p> In this article, we give a protocol with no explicit communication, and we analyze and compare our protocols Donald, Jennings, and Rus 7 using the tools introduced in <ref> (Donald 1995) </ref>. <p> See <ref> (Rus, Donald, and Jennings 1995) </ref> for more discussion of actuators. The actuator systems of our circuits are identical, and in this article we do not consider them in detail. This actuator subsystem is represented by the elision case (s) in Figures 12 and 13. <p> Here D S (x) is a set in C that varies with x; the function D S () models the codesignation constraints. Definition 6 can be generalized to any number of unbound vertices; see eq. (16) and <ref> (Donald 1995) </ref>. Definition 6 precisely characterizes the equivalence relation of strong simulation described in Section 3.1. We now wish to generalize this definition in the case where S and Q are manipulation circuits. <p> External edges (of sufficient bandwidth) can be (re)used when source 6= destination. Hence, in class-edge permutation, we permute edges within a type or class. In this article we will restrict our edge permutations to this kind of class-edge permutation. Class-edge permutation leave the complexity bounds and the lemmas of <ref> (Donald 1995) </ref> unchanged. To summarize: vertex permutation preserves the graph topology, whereas edge permutation can move the edges around. Edge permutation permits arbitrary rewiring (using existing edges). It cannot add new edges, nor can it change their bandwidth. <p> Reductions, Calibration, and Codesignation As we observed in (Donald 1993), calibration exploits external state. We wish to order systems on how much information this external state (from calibration) yields, to obtain Definition 10, below. Calibration complexity is defined formally in <ref> (Donald 1995) </ref>. Here is the basic idea. Calibration complexity measures how much information we add to a sensor system when we install and calibrate it. Installing a sensor system may require us to physically establish some spatial relation between two components of the system. <p> More generally, we call a sensor system monotonic if its internal bandwidth is bounded above by its output size. So, black-box sensors are trivially monotonic. All the sensor systems in <ref> (Donald 1995) </ref> are monotonic. If we believe that the output size of our protocols is O (log |(p)) bits, then our sensor systems are also monotonic. If we believe the output size is 2 bits, they are not. <p> Since 2r tan (t) = (t), we argue that these two systems have the same maximum bandwidth. The definitions and arguments in this section generalize mutatis mutandis from sensor systems to manipulation circuits. 3.5.2. Reductions Using Communication In light of this discussion, we now define the reduction 1 from <ref> (Donald 1995) </ref>, using relativized information complexity. Recall the construction of comm () as a sensor system (Section 3.2). First, let S be a monotonic sensor system with output z . In this case, we define comm (S) to be comm (z). <p> We say S is efficiently reducible to Q if S Q + comm (S). (2) In this case, we write 10 S 1 Q. Now, permutation (the operation) and combination (the + operation) commute for compatible partial immersions. This is formalized as a distributive property in <ref> (Donald 1995) </ref>. So, for example, for any manipulation circuit S, we have ensured that S + comm () = (S + comm ()) , i.e., we can do the permutation and combination in any order. Second, we have ensured that the combination operation + is commutative and associative. <p> The reduction 1 (Definition 13) is a one-wire reduction. It does not appear to be transitive. The reduction (Definition 11) is a zero-wire reduction. It is transitive for simple sensor systems <ref> (Donald 1995) </ref>. We could analogously define a two-wire, or more generally, any k-wire reduction k by modifying eq. (2) in Definition 13 to S Q + k comm (S), (2 0 ) where k comm (S) denotes k times z -| - comm (S) + + comm (S). <p> Since ( ) = ( 0 ), this suggests a hierarchy of reductions, indexed by k. The k-wire reductions f i g i2N form a graded relation. Even though we believe that 1 is not transitive (in the elementary sense), the hierarchy has graded transitivity on simple sensor systems <ref> (Donald 1995) </ref>. This means that for any simple sensor systems S, Q, and U , if S i Q and Q j U , then S i+j U . This follows from a lemma that the zero-wire reduction 0 (called in Definition 11) is elementary transitive for simple sensor systems. <p> Consider the hierarchy of k-wire reductions f i g i2N . We say such a hierarchy collapses if it is isomorphic to an elementary relation. In particular, the hierarchy of k-wire reductions (k &gt; 0) collapses if 1 is elementary transitive <ref> (Donald 1995) </ref>. 20 The International Journal of Robotics Research 4. Comparing Protocols Using Reductions The results in Section 4 apply using both strong and weak simulation. We now apply the ideas above to compare our protocols, P.I (QS) and P.II (the circuits in Figures 8, 9, and 10). <p> Eqs. (8) and (9) together argue that B A = 0; in other words, that B and A trade-off, or are equivalent. One caveat is that B = A is only valid for the task specified in the codesignation constraints <ref> (Donald 1995) </ref> of Q and S. For example, we prove resource trade-offs for our two manipulation circuits; but we only claim these trade-offs for the pushing task. For some other task, resources A and B may not function equivalently 11 . <p> Until a proof of the minimality is obtained, we challenge the reader to design and test manipulation protocols with fewer resources! 11. To prove trade-offs across a class of tasks, we must use a mechanism called universal reduction <ref> (Donald 1995) </ref>, which is beyond the scope of this article. 12. When S k Q and Q k S, we write S = k Q. When S Q and Q S, we write S Q. We can now apply this notion of trade-offs to our protocols. <p> It is somewhat surprising that for strong simulation (but not for weak simulation) we can in fact automate this process: <ref> (Donald 1995) </ref> gives algorithms for deciding the relation 1 . More precisely, given suitable encodings of two sensor systems S and U , we can computationally decide whether S 1 U (Donald 1995). The algorithm is too complicated to describe here. <p> is somewhat surprising that for strong simulation (but not for weak simulation) we can in fact automate this process: <ref> (Donald 1995) </ref> gives algorithms for deciding the relation 1 . More precisely, given suitable encodings of two sensor systems S and U , we can computationally decide whether S 1 U (Donald 1995). The algorithm is too complicated to describe here. We examine a special case to give a flavor for it; many details are omitted. The basic idea involves employing the theory of real closed fields with bounded quantification. <p> We will model (algebraic) codesig-nation constraints as a (possibly constant) semi-algebraic Donald, Jennings, and Rus 23 (s.a.) mapping 7! D ( ) taking an immersion to an s.a. set D ( ) C d . All these methods generalize to graph permutation as well <ref> (Donald 1995) </ref>. Definition 14. A simulation function -U for U is a map -U : C d ! R, where R is the space of outputs. We call the value -U () 2 R of -U on a sensor configuration the output value or sensor value at . Definition 15. <p> Here is why: to decide 1 , we must determine whether (S, ) (U , ) + comm (S), (Definition 13). Recall the definition of compatibility for partial immersions (Section 3.4). We first observe that permutation (the operation) and combination (the + operation) commute for compatible partial immersions <ref> (Donald 1995) </ref>. Our arguments above for guessing extensions and permutations can be generalized mutatis mutandis to compute the combination (Definition 8) of two algebraic sensor systems. <p> Let the simulation complexity n be the size of the simulation 14. We must also be able to compute dominance in calibration complexity (see Definition 10). This can be done independently, and much faster than eq. (16) can be decided; see <ref> (Donald 1995) </ref>. functions -U and -S . We let n D measure the complexity of the codesignation constraints D S () in eq. (16). Then, we can decide eq. (16) in the time bounds below. Lemma 1. (Donald 1995) There is an algorithm for deciding the relations and 1 for algebraic <p> be done independently, and much faster than eq. (16) can be decided; see <ref> (Donald 1995) </ref>. functions -U and -S . We let n D measure the complexity of the codesignation constraints D S () in eq. (16). Then, we can decide eq. (16) in the time bounds below. Lemma 1. (Donald 1995) There is an algorithm for deciding the relations and 1 for algebraic sensor systems. It runs in time polynomial in the simulation and codesignation complexity (n - + n D ), and subdoubly exponential in the size of the sensor systems. <p> Note that for small sensor systems, eq. (17) becomes d (r c d) O (1) Although complex, eq. (16) is simplified for presentation. The full Tarski sentence also contains codesignation constraints for the outer quantifiers, and is given in <ref> (Donald 1995) </ref>. We must warn that in Section 7 we have examined a special case, where S and U are partially situated (that is, the domains of and are nonempty). A powerful generalization is given in the Appendix, where the sensor systems can be unsituated. <p> Question (2) sheds light on whether we can cheaply and cleverly re-encode a sensor system so as to gain a lot of power (information complexity). <ref> (Donald 1995) </ref> first derives the complexity bounds in Lemma 1 and eqs. (17) and (18) for vertex permutation. Next, (Donald 1995) asks: How expensive is it to compute the reductions and 1 using graph permutation? By extending the configuration space C d to include all possible edge permutations, we obtain an <p> Question (2) sheds light on whether we can cheaply and cleverly re-encode a sensor system so as to gain a lot of power (information complexity). <ref> (Donald 1995) </ref> first derives the complexity bounds in Lemma 1 and eqs. (17) and (18) for vertex permutation. Next, (Donald 1995) asks: How expensive is it to compute the reductions and 1 using graph permutation? By extending the configuration space C d to include all possible edge permutations, we obtain an extended configuration space of sufficiently low dimension that we still obtain the same complexity bounds given in Lemma 1 <p> By extending the configuration space C d to include all possible edge permutations, we obtain an extended configuration space of sufficiently low dimension that we still obtain the same complexity bounds given in Lemma 1 and eqs. (17) and (18), (so long as r and s are constantssee Section 3.1) <ref> (Donald 1995) </ref>. We now address question (2): Does graph permutation give us a more powerful reduction? We show: Lemma 2. (The Clone Lemma) Graph permutation can be simulated using vertex permutation, preceded by a linear-time and linear-space transformation of the sensor system. <p> An example is n (t) in P.II (Figure 11). 5. Transform the communication between two agents L and R into shared data structures. 17. In particular, we have considerably improved the protocol 4 3 from (Donald, Jennings, and Rus 1993a). See <ref> (Rus, Donald, and Jen-nings 1995) </ref>. 18. We use the term in the sense of (Donald and Jennings 1992); others, particularly Henderson, have used similar concepts. 6. Implement the shared data structures as mechanical registers. For example, (t) is a register that L and R share. <p> Consider the relation = k defined in Section 5. = k is only an equivalence relation for k = 0, althought = k does obey graded transitivity <ref> (Donald 1995) </ref>. By analogy with CT reductions, we may ask, Does a given class of sensoricomputational systems contain complete circuits, to which any member of the class may be reduced? Note that any two complete circuits are graded equivalent under = k . <p> Appendix: What is Permutation? In Section 7, we examined a special case, where S and U are partially situated (that is, the domains of and are nonempty). A powerful generalization is given in <ref> (Donald 1995) </ref>, where the sensor systems can be unsituated. Using the ideas in Section 7, we can give an abstract version of permutation that is applicable to partially immersed Donald, Jennings, and Rus 27 Fig. 17. <p> This region constrains the necessary coplacements 0 of U relative to (S, 0 ). Perhaps surprisingly, allowing unsituated permutation does not change the complexity bounds of Section 7 <ref> (Donald 1995) </ref>. Acknowledgment and Historical Note Many key ideas in this article arose in discussions with Tom as Lozano-P erez, Mike Erdmann, Matt Mason, and Ronitt Rubinfeld. Tom as suggested studying the two-finger pushing task in 1987, and laid out a framework for analysis.
Reference: <author> Donald, B. R., and Jennings, J. </author> <year> 1992. </year> <title> Constructive recognizability for task-directed robot programming. J. Robot. </title> <booktitle> Autonomous Sys. </booktitle> <volume> 9(1) </volume> <pages> 41-74. </pages>
Reference-contexts: His theory is set in a logical framework where sensors are logical predicates. Perhaps our theory could be viewed as a geometric attack on a similar problem. This work was motivated by the theoretical attack on perceptual equivalence begun by <ref> (Donald and Jennings 1992) </ref> and by the experimental studies of (Jennings and Rus 1993). Horswill (1992) has developed a semantics for sensory systems that models and quantifies the kinds of assumptions a sensoricomputational program makes about its environment. He also gives source-to-source transformations on sensori-computational circuits. <p> In addition to the work discussed here in Section 1, for a detailed bibliographic essay on previous research on the geometric theory of planning under uncertainty, see <ref> (Donald 1992) </ref> or (Donald 1989). The goals outlined here are ambitious, and we have only taken a small step toward them. The questions above provide the setting for our inquiry, but we are far from answering them completely. <p> From the mechanics perspective, it might appear we are done. However, it is difficult to overstate how critically Protocol P.O relies on global communication and control. Consider the analogous pushing task in Figure 4B. Each finger is replaced by an autonomous mobile robot such as those described in <ref> (Rees and Donald 1992) </ref>. The robots we have in mind are the Cornell mobile robots (see Figure 1), but the details of their construction are not important. The robots can move about by controlling motors attached to wheels. <p> The robots can move about by controlling motors attached to wheels. The robots are autonomous and equipped with a ring of 12 simple Polaroid ultrasonic sonar sensors. Each robot has on-board processors for control and programming. The description in <ref> (Rees and Donald 1992) </ref> is augmented as follows. (This description characterizes the robots in our lab.) We equip each robot with 12 infrared modems/sensors, arrayed in a ring about the robot body. Each modem consists of an emitter-detector pair. <p> Protocol P.I. The robots synchronize their actuators by communicating their force measurements. Fig. 7. The mechanical observables for Protocol P.I. the robots can synchronize their velocities; 4 and by examining the servo loop in <ref> (Rees and Donald 1992) </ref>, it is clear that we can compute a measure of applied force by observing the applied power, the position and velocity of the robot, and the contact sensors. <p> Transform the communication between two agents L and R into shared data structures. 17. In particular, we have considerably improved the protocol 4 3 from (Donald, Jennings, and Rus 1993a). See (Rus, Donald, and Jen-nings 1995). 18. We use the term in the sense of <ref> (Donald and Jennings 1992) </ref>; others, particularly Henderson, have used similar concepts. 6. Implement the shared data structures as mechanical registers. For example, (t) is a register that L and R share. We believe that our methods are useful for developing parallel manipulation protocols.
Reference: <author> Donald, B. R., Jennings, J., and Rus, D. </author> <year> 1993a </year> <month> (Cham-bery, </month> <title> France). Experimental information invariants for cooperation autonomous mobile robots. </title> <booktitle> In Proceedings of the 1993 International Joint Conference on Artificial Intelligence, Workshop on Dynamically Interacting Robots. </booktitle>
Reference-contexts: This article draws extensively on the material reported in the monograph by Donald (1995), and announced in an abbreviated, preliminary version in Donald (1993). We reported on our ideas on coordinated manipulation strategies in a preliminary form in <ref> (Donald, Jennings, and Rus 1993a, 1993b) </ref>. 1.1.1. Research Agenda Robot builders make claims about robot performance and resource consumption. In general, it is hard to verify these claims and compare the systems. <p> Find a way to implement this virtual sensor using concrete sensors on mechanical observables. An example is n (t) in P.II (Figure 11). 5. Transform the communication between two agents L and R into shared data structures. 17. In particular, we have considerably improved the protocol 4 3 from <ref> (Donald, Jennings, and Rus 1993a) </ref>. See (Rus, Donald, and Jen-nings 1995). 18. We use the term in the sense of (Donald and Jennings 1992); others, particularly Henderson, have used similar concepts. 6. Implement the shared data structures as mechanical registers.
Reference: <author> Donald, B. R., Jennings, J., and Rus, D. </author> <title> 1993b (Hidden Valley, PA). Towards a theory of information invariants for cooperating autonomous robots. </title> <booktitle> In Proceedings of the 1993 International Symposium on Robotics Research. </booktitle>
Reference: <author> Erdmann, M. </author> <year> 1986. </year> <title> Using backprojections for fine motion planning with uncertainty. </title> <journal> Int. J. Robot. Res. </journal> <volume> 5(1) </volume> <pages> 431-459. </pages>
Reference: <author> Erdmann, M. </author> <year> 1989. </year> <title> On probabilistic strategies for robot tasks. </title> <type> Technical Report AI-TR 1155, </type> <institution> Massachusetts Institute of Technology, Artificial Intelligence Laboratory. </institution>
Reference-contexts: In our quest for an intrinsic measure of the information requirements of a task, we are inspired by Erdmann's monograph on sensor design (Erdmann 1993a), and the information invariants that Erdmann introduced to the robotics community in 1989 <ref> (Erdmann 1989) </ref>. We also observe that rigorous examples of information invariants Fig. 1. The Cornell mobile robot Tommy. Note the ring of sonars, the IR modems, and the bump sensors mounted top to bottom on the cylindrical enclosure).
Reference: <author> Erdmann, M. </author> <title> 1993a (Atlanta, GA). </title> <booktitle> Action subservient sensing and design. In Proceedings of the 1993 IEEE International Conference on Robotics and Automation, </booktitle> <volume> vol. </volume> <pages> 2, </pages> <address> New York, NY: </address> <publisher> Springer-Verlag, </publisher> <pages> pp. 592-598. </pages>
Reference-contexts: In our quest for an intrinsic measure of the information requirements of a task, we are inspired by Erdmann's monograph on sensor design <ref> (Erdmann 1993a) </ref>, and the information invariants that Erdmann introduced to the robotics community in 1989 (Erdmann 1989). We also observe that rigorous examples of information invariants Fig. 1. The Cornell mobile robot Tommy. <p> Many of the ideas in this article develop suggestions of Mike Erdmann; in particular, he proposed the notion of calibration complexity. Any perspicuous reader will notice our indebtedness to Mike's weltanschauung, and to <ref> (Erdmann 1993a) </ref>. The robots and experimental devices described herein were built in our lab by Jim Jen-nings, Russell Brown, Jonathan Rees, Craig Becker, Mark Battisti, and Kevin Newman; these ideas could never have come to light without their help. Thanks to Loretta Pompilio for drawing the illustration in Figure 1.
Reference: <author> Erdmann, M. </author> <year> 1993b. </year> <title> Randomization for robot tasks: using dynamic programming in the space of knowledge states. </title> <journal> Algorithmica </journal> 10(2/3/4):248-291. 
Reference: <author> Erdmann, M. A., and Mason, M. T. </author> <year> 1988. </year> <title> An exploration of sensorless manipulation. </title> <journal> IEEE J. Robot. Automat. </journal> <volume> 4(4) </volume> <pages> 369-379. </pages>
Reference: <author> Erdmann, M., Mason, M., and Vanecek, G. </author> <year> 1993. </year> <title> Mechanical parts orienting: the case of a polyhedron on a table. </title> <journal> Algorithmica </journal> 10(2/3/4):226-2478. 
Reference: <author> Goldberg, K. </author> <year> 1993. </year> <title> Orienting parts without sensors. </title> <booktitle> Algo-rithmica </booktitle> 10(2/3/4):201-225. 
Reference: <author> Hopcraft, J. E., Schwartz, J., and Sharir, M. </author> <year> 1984. </year> <title> On the copmlexity of motion planning for mulitple inde-pendant objects: P-space hardness for the warehouseman's problem. </title> <journal> Int. J. Robot. Res. </journal> <volume> 3(4) </volume> <pages> 76-88. </pages>
Reference: <author> Horswill, I. </author> <year> 1995. </year> <title> Analysis of adaptation and environment. Art. </title> <journal> Intell. J. </journal> 73(1/2):1-30. 
Reference: <author> Jennings, J., and Rus, D. </author> <title> 1993 (Oxford, England). Active model acquisition for near-sensorless manipulation with mobile robots. </title> <editor> In Hamza, M. H. (ed.): </editor> <booktitle> IASTED International Conference on Robotics and Manufacturing. </booktitle> <pages> pp. 179-184. </pages>
Reference-contexts: Fourth, our protocols assume neither that the robot has a geometric model of the box, nor that the first moment of the friction distribution is known. Instead, the robot combines sensorimotor experiments and manipulation strategies to infer the necessary information; the experiments have the flavor of <ref> (Jennings and Rus 1993) </ref>. Finally, the literature on pushing generally regards the pushers as moving kinematic constraints. In our case, because there are at least two robot pushers and the robots are less massive than the box, the robots are really force appliers in a system with significant friction. <p> Perhaps our theory could be viewed as a geometric attack on a similar problem. This work was motivated by the theoretical attack on perceptual equivalence begun by (Donald and Jennings 1992) and by the experimental studies of <ref> (Jennings and Rus 1993) </ref>. Horswill (1992) has developed a semantics for sensory systems that models and quantifies the kinds of assumptions a sensoricomputational program makes about its environment. He also gives source-to-source transformations on sensori-computational circuits. <p> In addition, each robot has a ring of one-bit contact (bump) sensors. We assume the following: using bump sensors, robots in contact with a flat object face can measure the relative orientation of that face <ref> (Jennings and Rus 1993) </ref>; the robots are on the same flat face of the object; both robots know the direction of pushing, p; 8 The International Journal of Robotics Research Left Robot Communication Right Robot Repeat : Repeat : measure (f 1 ) measure (f 2 ) L ! R (f <p> More specifically: at the beginning of the task, each robot does a guarded move along p until contact with the box. It then aligns normal to the box, using the bounded-error algorithm of Donald, Jennings, and Rus 13 <ref> (Jennings and Rus 1993) </ref>. Finally, the robot turns by angle 0 using pure position control. Init is 1 bit of state, and run = init. The small crossed circles () that these bits run into are gates; the # input must be 1 for the $ signal to pass. <p> In describing Protocol P.II, we demonstrated that one implementation of such a circuit involves using some retained state ( 0 ), and a relative orientation sensor such as the bumper system described in <ref> (Jennings and Rus 1993) </ref>. In fact, Claim 1 is a precise statement of this engineering fact. Below, we carefully define the operators + and , and formalize the notions of simulation and efficient reduction, as well as permutation, etc. Our reduction involves two concepts.
Reference: <author> Kozen, D. </author> <year> 1979. </year> <title> Automata and planar graphs. </title> <booktitle> Fundamentals of Computing Theory, Proceedings of the Conference on Algebraic, Arithmeic and Categorical Methods in Computer Science. </booktitle>
Reference: <author> Lozano-P erez, T., Mason, M. T., and Taylor, R. H. </author> <year> 1984. </year> <title> Automatic synthesis of fine-motion strategies for robots. </title> <journal> Int. J. Robot. Res. </journal> <volume> 3(1) </volume> <pages> 3-24. </pages>
Reference: <author> Mason, M. T. </author> <year> 1986. </year> <title> Mechanics and planning of manipulator pushing operations. </title> <journal> Int J. Robot. Res. </journal> <volume> 5(3) </volume> <pages> 53-71. </pages>
Reference-contexts: The robot consists of two rigidly connected fingers L and R; for example, they could be the fingers of a parallel-jaw gripper. One complication involves the micromechanical variations in the slip of the box on the table <ref> (Mason 1986) </ref>. This phenomenon is very hard to model, and hence it is difficult to predict the results of a one-fingered push; we will only obtain a straight-line trajectory when the center of friction (COF) lies on the line of pushing.
Reference: <author> Mason, M., and Lynch, K. </author> <year> 1989. </year> <title> Dynamic manipulation. </title> <booktitle> In Proceedings of the 1993 IEEE/RSJ International Symposium on Intelligent Robot Systems. </booktitle> <address> Los Alami-tos, CA: </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: In our case, because there are at least two robot pushers and the robots are less massive than the box, the robots are really force appliers in a system with significant friction. In this sense, our task is in some ways closer in flavor to dynamic manipulation <ref> (Mason and Lynch 1989) </ref>, even though the box dynamics are essentially quasistatic. Of course, our protocols rely on a number of assumptions to work. We develop a framework for analysis and synthesis, based on information invariants (Donald 1985), to reveal these assumptions and expose the information structure of the task.
Reference: <author> Natarajan, B. K. </author> <year> 1988. </year> <title> On planning assemblies. </title> <booktitle> In Proceedings of the 4th Annual Symposium on Computational Geometry. </booktitle> <publisher> ACM Press, </publisher> <pages> pp. 229-308. </pages>
Reference: <author> Peshkin, M. </author> <year> 1986. </year> <title> Planning robotic manipulation strategies for sliding objects. </title> <type> PhD Thesis, </type> <institution> Carnegie-Mellon University, </institution> <address> Pittsbury, PA. </address>
Reference-contexts: Developing Parallel Manipulation Protocols 1. Start with a sensorless (Erdmann and Mason 1988; Erdmann, Mason, and Vanecek 1993) or near-sensorless (Erdmann 1993b; Jennings and Rus 1993) manipulation protocol requiring global coordination of several agents; (e.g., fingers (Goldberg 1993; Rus 1992), or fences <ref> (Peshkin 1986) </ref>. Examples include 4 1 above (Rus 1992) or Protocol P.O (Figure 5). 2. Distribute the protocol over spatially separated agents. Synchronize and coordinate control using explicit local communication. Examples include Protocol P.I (QS), or 4 2 above. 3.
Reference: <author> Rees, J. A., and Donald, B. R. </author> <title> 1992 (Nice, France). Program mobile robots in scheme. </title> <booktitle> In Proceedings of the 1992 IEEE International Conference on Robotics and Automation. </booktitle> <address> Los Alamitos, CA: </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: From the mechanics perspective, it might appear we are done. However, it is difficult to overstate how critically Protocol P.O relies on global communication and control. Consider the analogous pushing task in Figure 4B. Each finger is replaced by an autonomous mobile robot such as those described in <ref> (Rees and Donald 1992) </ref>. The robots we have in mind are the Cornell mobile robots (see Figure 1), but the details of their construction are not important. The robots can move about by controlling motors attached to wheels. <p> The robots can move about by controlling motors attached to wheels. The robots are autonomous and equipped with a ring of 12 simple Polaroid ultrasonic sonar sensors. Each robot has on-board processors for control and programming. The description in <ref> (Rees and Donald 1992) </ref> is augmented as follows. (This description characterizes the robots in our lab.) We equip each robot with 12 infrared modems/sensors, arrayed in a ring about the robot body. Each modem consists of an emitter-detector pair. <p> Protocol P.I. The robots synchronize their actuators by communicating their force measurements. Fig. 7. The mechanical observables for Protocol P.I. the robots can synchronize their velocities; 4 and by examining the servo loop in <ref> (Rees and Donald 1992) </ref>, it is clear that we can compute a measure of applied force by observing the applied power, the position and velocity of the robot, and the contact sensors.
Reference: <author> Reif, J. </author> <year> 1979. </year> <title> Complexity of the mover's problem and generalizations. </title> <booktitle> In Proceedings of the 20th Symposium on the Foundations of Computer Science. </booktitle> <address> Los Alamitos, CA: </address> <publisher> IEEE Computer Society Press. </publisher>
Reference: <author> Rosenschein, S. J. </author> <year> 1989. </year> <title> Synthesis information-tracking automata from environment descriptions. </title> <type> Technical Report 2, </type> <institution> Teleos Research, </institution> <address> Palo Alto, CA. </address>
Reference-contexts: For information on the upper bounds, see (Erdmann 1986; Donald 1990; Canny 1989; Briggs 1987). Rosenschein has developed a theory of synthetic automata which explore the world and build data structures that are faithful to it <ref> (Rosenschein 1989) </ref>. His theory is set in a logical framework where sensors are logical predicates. Perhaps our theory could be viewed as a geometric attack on a similar problem.
Reference: <author> Rus, D., Donald, B. R., and Jennings, J. </author> <title> 1995 (Pittsburgh, PA). Moving furniture with mobile robots. </title> <booktitle> In Proceedings of Intelligent Robot Systems, </booktitle> <pages> pp. 235-242. </pages>
Reference-contexts: See <ref> (Rus, Donald, and Jennings 1995) </ref> for more discussion of actuators. The actuator systems of our circuits are identical, and in this article we do not consider them in detail. This actuator subsystem is represented by the elision case (s) in Figures 12 and 13. <p> An example is n (t) in P.II (Figure 11). 5. Transform the communication between two agents L and R into shared data structures. 17. In particular, we have considerably improved the protocol 4 3 from (Donald, Jennings, and Rus 1993a). See <ref> (Rus, Donald, and Jen-nings 1995) </ref>. 18. We use the term in the sense of (Donald and Jennings 1992); others, particularly Henderson, have used similar concepts. 6. Implement the shared data structures as mechanical registers. For example, (t) is a register that L and R share.
Reference: <author> Rus, D. </author> <year> 1992. </year> <title> Fine motion planning for dexterous manipulation. </title> <type> PhD Thesis, </type> <institution> Cornell University, Department of Computer Science, Ithica, NY. </institution> <note> 30 The International Journal of Robotics Research </note>
Reference-contexts: We denote them by 4 1 ,4 2 , etc. For these protocols, we started with the off-line algorithm 4 1 of <ref> (Rus 1992) </ref>, which was designed for multifingered robot hands with global coordination. Next, we developed a protocol 4 2 for three cooperating mobile robots with local IR communication. In this protocol, only one robot moves at a time, so although the task has been parallelized, it is not load balanced. <p> Developing Parallel Manipulation Protocols 1. Start with a sensorless (Erdmann and Mason 1988; Erdmann, Mason, and Vanecek 1993) or near-sensorless (Erdmann 1993b; Jennings and Rus 1993) manipulation protocol requiring global coordination of several agents; (e.g., fingers (Goldberg 1993; Rus 1992), or fences (Peshkin 1986). Examples include 4 1 above <ref> (Rus 1992) </ref> or Protocol P.O (Figure 5). 2. Distribute the protocol over spatially separated agents. Synchronize and coordinate control using explicit local communication. Examples include Protocol P.I (QS), or 4 2 above. 3. Define a virtual sensor 18 that measures the key signal we wish to servo on.
References-found: 33

