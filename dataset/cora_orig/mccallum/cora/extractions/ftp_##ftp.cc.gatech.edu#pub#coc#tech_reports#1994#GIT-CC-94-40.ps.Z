URL: ftp://ftp.cc.gatech.edu/pub/coc/tech_reports/1994/GIT-CC-94-40.ps.Z
Refering-URL: http://www.cs.gatech.edu/tech_reports/index.94.html
Root-URL: 
Email: e-mail frimli,venkatg@cc.gatech.edu  
Title: Multilinearity Can Be Exponentially Restrictive (Preliminary version)  
Author: Rimli Sengupta and H. Venkateswaran 
Note: This work was supported by NSF grant CCR-9200878.  
Address: Atlanta, Georgia 30332-0280  
Affiliation: College of Computing Georgia Institute of Technology  
Date: September, 1994  
Pubnum: GIT-CC-94-40  
Abstract: We define a Boolean circuit to be multilinear if the formal polynomial associated with it is multilinear as well. We consider the problem of computing the connectivity function using circuits that are monotone and multilinear. Our main result is that monotone multilinear circuits for this function require exponential size. Since connectivity can be computed by monotone Boolean circuits within size O(n 3 ), our lower bound establishes that at least in the context of monotone computation, mul-tilinearity can be exponentially restrictive. As an application of our lower bound, we show that connectivity is not in mN L, thereby improving a recent result by Yao that connectivity is not in mN C 1 . 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A.V. Aho, J.E. Hopcroft and J.D. Ullman, </author> <title> The Design and Analysis of Computer Algorithms, </title> <publisher> Addison Wesley, </publisher> <address> Reading, Mass., </address> <year> 1974. </year>
Reference-contexts: It is well known that jT n j = n n2 . UCONN can be computed by taking the transitive closure of the input adjacency matrix and performing ^ on the n 2 outputs. The circuit based on the well known Floyd-Warshall's algorithm <ref> [1] </ref> for transitive closure is monotone and has size O (n 3 ). Therefore, there is a O (n 3 ) size monotone circuit for UCONN. <p> in C n create a leaf node A in B 0 n . * For every _ gate A in C n create the _ gates [A; i; 0], 0 i p, in B 0 n . * For every ^ gate A in C n create the _ gates <ref> [A; i; 1] </ref>, 0 i p, in B 0 n . * For all 0 i p, the inputs to an _ gate of the form [A; i; 1] are ^ gates [A; i; j; k], for all j; k such that 0 j; k p and j + k = <p> [A; i; 0], 0 i p, in B 0 n . * For every ^ gate A in C n create the _ gates <ref> [A; i; 1] </ref>, 0 i p, in B 0 n . * For all 0 i p, the inputs to an _ gate of the form [A; i; 1] are ^ gates [A; i; j; k], for all j; k such that 0 j; k p and j + k = i. * For all i; j; k, inputs to the ^ gate [A; i; j; k] are the _ gates [B; j; 0] and [C; k; <p> ^ gate A in C n . * For all 0 i p, the inputs to an _ gate of the form [A; i; 0] are set as follows: for each input B of the _ gate A in C n , (a) if B is an ^ gate, make <ref> [B; i; 1] </ref> an input of [A; i; 0], for all 0 i p; (b) if B is a leaf node labeled with a variable, [A; 1; 0] has B as its input, and for all i 6= 1, [A; i; 0] gets the constant 0 as an input; and (c) <p> are set as follows: for each input B of the _ gate A in C n , (a) if B is an ^ gate, make [B; i; 1] an input of [A; i; 0], for all 0 i p; (b) if B is a leaf node labeled with a variable, <ref> [A; 1; 0] </ref> has B as its input, and for all i 6= 1, [A; i; 0] gets the constant 0 as an input; and (c) if B is a leaf node labeled with a constant, [A; 0; 0] has B as its input, and for all 1 i p, [A; <p> As a consequence of the second, we show that UCONN 62 mN L. 4.1 Monotone Multilinear Circuits The reachability function can be computed as the (i; j)-th output of the transitive closure circuit based on the well known O (n 3 ) Floyd-Warshall's algorithm <ref> [1] </ref>. This is a monotone circuit that can be verified to be nearly multilinear as well. Thus, by the remarks following theorem 3.2, there is a polynomial size monotone multilinear circuit for USTCONN. <p> Phase 2: Construct the circuit G 00 as follows: 1. For each _ gate A in G, add the _ gate [A; 0] to G 00 . 2. For each ^ node A in G with input x (leaf) and B (_ node), add the _ node <ref> [A; 1] </ref> in G 00 with input ^ nodes A 0 and A 00 . <p> The inputs to A 0 are the leaf x and the _ node [B; 0] and the inputs to A 00 are the _ node [B; 0] and the node labeled [B; x] in G 0 . The polynomial computed at the node <ref> [A; 1] </ref> is x:P (B) + P (B):P ([B; x]), where P (B) is the polynomial computed at B, and P ([B; x]) is simply a disjunction of constants since the leaves of the circuit rooted at the node [B; x] are all labeled with constants and each interior node is
Reference: [2] <author> A. Chandra, L. Stockmeyer and U. Vishkin, </author> <title> Constant depth reducibility, </title> <journal> SIAM J. Comput. </journal> <month> 13:2 </month> <year> (1984), </year> <pages> 423-439. </pages>
Reference-contexts: USTCONN has been studied extensively in the past, both alone as well as in comparison with UCONN [16]. These two functions are known to be projection equivalent to each other <ref> [2] </ref>. In his survey on connectivity [16], Wigderson mentions that under almost any choice of reducibility, USTCONN is harder than UCONN. For example, in the Boolean decision tree model and under monotone p-projections, USTCONN is provably harder than UCONN [3, 12].
Reference: [3] <author> M. Chrobak, H. Karloff and T. Radzik, </author> <title> Connectivity vs. Reachability, </title> <booktitle> Information and Computation 91 (1991), </booktitle> <pages> 177-188. </pages>
Reference-contexts: In his survey on connectivity [16], Wigderson mentions that under almost any choice of reducibility, USTCONN is harder than UCONN. For example, in the Boolean decision tree model and under monotone p-projections, USTCONN is provably harder than UCONN <ref> [3, 12] </ref>. The status of knowledge about the complexity of these two functions in the monotone Boolean circuit setting is consistent with this relative hardness. While a (log 2 (n)) depth bound is known for USTCONN [7], a similar bound is expected for UCONN [16] but seems elusive.
Reference: [4] <author> R. Fagin, </author> <title> Monadic generalized spectra, </title> <journal> Seitschrift fur Mathematische Logik und Grunlagen der Mathematik, </journal> <volume> 21 (1975), </volume> <pages> 89-96. </pages>
Reference-contexts: However, the relative hardness of these two functions are reversed in the context of ex-pressibility. USTCONN is known to be a monadic 1 1 property 1 but UCONN is not <ref> [4] </ref>. Since USTCONN is considered harder than UCONN, this result is mentioned as being surprising and counter-intuitive in [16]. In this section, we exhibit two circuit settings in which UCONN is prov ably harder than USTCONN.
Reference: [5] <author> M. Grigni and M. Sipser, </author> <title> Monotone separation of Logspace from NC 1 , Proc. </title> <booktitle> 6th IEEE Structures (1991), </booktitle> <pages> 294-298. </pages>
Reference-contexts: Monotone Boolean circuits is an example of such a restricted model for which several interesting results have been obtained <ref> [5, 9, 8, 13] </ref>. In this work, we study the power of mutliplicative idempotence for monotone Boolean circuits. We define a Boolean circuit to be multilinear if the formal polynomial associated with it is multilinear as well. <p> L is characterized by uniform families of polynomial size skew circuits [15]. (The uniformity condition used is the notion of U D -uniformity defined by Ruzzo [10].) The monotone analogue mN L of N L is then characterized by uniform families of monotone skew circuits of polynomial size (see also <ref> [5] </ref>). In this section, we provide a construction by which a skew circuit can be made nearly multilinear in a uniform fashion. We will assume that the circuit is layered with alternating layers of _ and ^ gates, and all its ^-gates have fan-in 2.
Reference: [6] <author> M. Jerrum and M. Snir, </author> <title> Some exact complexity results for straight-line computations over semi-rings, </title> <journal> J. Assoc. Comput. Mach. </journal> <volume> 29 (1982), </volume> <pages> 874-897. </pages>
Reference-contexts: We first show that the formal polynomial of a monotone Boolean circuit computing a function f has a monomial whose variables are exactly those of the prime implicant, for each prime implicant of f . We then extend a framework developed by Jerrum and Snir <ref> [6] </ref> and use it in our lower bound argument. In [6], Jerrum and Snir developed a combinatorial framework to obtain size lower bounds for computing certain multilinear polynomials, including the spanning tree polynomial, using algebraic circuits over positive reals. <p> We then extend a framework developed by Jerrum and Snir <ref> [6] </ref> and use it in our lower bound argument. In [6], Jerrum and Snir developed a combinatorial framework to obtain size lower bounds for computing certain multilinear polynomials, including the spanning tree polynomial, using algebraic circuits over positive reals. <p> Therefore, there is a O (n 3 ) size monotone circuit for UCONN. In the next section we show that there are no polynomial size monotone multilinear circuits for this function. 3 A Lower Bound for Connectivity In <ref> [6] </ref>, Jerrum and Snir proved an exponential size lower bound on Boolean circuits computing UCONN whose formal polynomial looks like: P = W t2T n p t . <p> As mentioned above, the main difference between B m and the circuits considered in <ref> [6] </ref> is that B m could have more than one parse-tree in B m for each prime implicant p t . <p> To extend the lower bound, we simply fix n n2 representative parse-trees fG t j t 2 T n g of B m such that G t computes p t , for all t. The lower bound in <ref> [6] </ref> then applies to the sub-circuit of B m that computes the disjunction of the monomials corresponding to the representative parse-trees. We have simplified the presentation in [6] to adapt it to the model we are considering. <p> The lower bound in <ref> [6] </ref> then applies to the sub-circuit of B m that computes the disjunction of the monomials corresponding to the representative parse-trees. We have simplified the presentation in [6] to adapt it to the model we are considering. Definition 3.1 For an ^-node ff, let m (ff) be the number of representative parse-trees of B m in which ff appears. <p> Definition 3.3 Let H be a subtree of a parse-tree T . Define weight of H as follows: W (H) = P ff2^nodes (H) 1 m (ff) , where ^-nodes (H) denotes the set of ^-nodes in H. 3 Lemma 3.1 below corresponds to theorem 3.3 in <ref> [6] </ref>. Lemma 3.1 P n n2 i=1 W (G i ) = j f^-node ff j m (ff) 1g j: Proof: By definition, n n2 i=1 n n2 i=1 ff2^nodes (G i ) 1 : Fix an ^-node ff. <p> Thus, the total contribution by ff is m (ff) 1 m (ff) = 1 and therefore the right-hand side is the number of ^-nodes ff for which m (ff) 1.2 The following lemma summarizes the arguments in section 4.5 of <ref> [6] </ref>. These arguments are presented in the appendix for the sake of completeness. Lemma 3.2 [6] Let n=2 &lt; r n 1 and 1 d &lt; n=2. If ff is an (r; d)-significant ^-node of B m , then m (ff) ( 3n 4 ) n1 . <p> ff is m (ff) 1 m (ff) = 1 and therefore the right-hand side is the number of ^-nodes ff for which m (ff) 1.2 The following lemma summarizes the arguments in section 4.5 of <ref> [6] </ref>. These arguments are presented in the appendix for the sake of completeness. Lemma 3.2 [6] Let n=2 &lt; r n 1 and 1 d &lt; n=2. If ff is an (r; d)-significant ^-node of B m , then m (ff) ( 3n 4 ) n1 .
Reference: [7] <author> M. Karchmer and A. Wigderson, </author> <title> Monotone circuits for connectivity require super-logarithmic depth, </title> <journal> SIAM J. Disc. Math. </journal> <month> 3:2 </month> <year> (1990), </year> <pages> 255-265. </pages>
Reference-contexts: The status of knowledge about the complexity of these two functions in the monotone Boolean circuit setting is consistent with this relative hardness. While a (log 2 (n)) depth bound is known for USTCONN <ref> [7] </ref>, a similar bound is expected for UCONN [16] but seems elusive. Recently, Yao has shown a (log 1:5 (n)) monotone depth bound for UCONN [18], thereby showing that UCONN 62 mN C 1 . However, the relative hardness of these two functions are reversed in the context of ex-pressibility. <p> Corollary 4.1 mN L mSAC 1 . 5 Questions * The monotone nearly multilinear circuit for USTCONN also has O (n 3 ) depth. But monotone circuits for USTCONN are known to require (log 2 (n)) depth <ref> [7] </ref>. So it is relevant to ask whether there are polynomial size monotone multilinear circuits that compute USTCONN within O (log 2 (n)) depth. 7 * The construction in section 4.2 for converting a skew circuit into a nearly-multilinear circuit clearly holds for non-monotone circuits as well.
Reference: [8] <author> R. Raz and A. Wigderson, </author> <title> Monotone circuits for matching require linear depth, </title> <booktitle> Proc. 22nd annual ACM STOC (1990), </booktitle> <pages> 287-292. </pages>
Reference-contexts: Monotone Boolean circuits is an example of such a restricted model for which several interesting results have been obtained <ref> [5, 9, 8, 13] </ref>. In this work, we study the power of mutliplicative idempotence for monotone Boolean circuits. We define a Boolean circuit to be multilinear if the formal polynomial associated with it is multilinear as well.
Reference: [9] <author> A.A. Razborov, </author> <title> A lower bound on the monotone network complexity of the logical permanent, </title> <booktitle> Mathematischi Zametki 37 (1985), </booktitle> <pages> 887-900. </pages>
Reference-contexts: Monotone Boolean circuits is an example of such a restricted model for which several interesting results have been obtained <ref> [5, 9, 8, 13] </ref>. In this work, we study the power of mutliplicative idempotence for monotone Boolean circuits. We define a Boolean circuit to be multilinear if the formal polynomial associated with it is multilinear as well.
Reference: [10] <author> W. L. Ruzzo, </author> <title> On uniform circuit complexity, </title> <booktitle> JCSS 22 (1981), </booktitle> <pages> 365-383. </pages>
Reference-contexts: The class N L is characterized by uniform families of polynomial size skew circuits [15]. (The uniformity condition used is the notion of U D -uniformity defined by Ruzzo <ref> [10] </ref>.) The monotone analogue mN L of N L is then characterized by uniform families of monotone skew circuits of polynomial size (see also [5]). In this section, we provide a construction by which a skew circuit can be made nearly multilinear in a uniform fashion.
Reference: [11] <author> J. E. Savage, </author> <title> The complexity of computing, </title> <editor> R. E. </editor> <publisher> Kreiger Publishing Co., </publisher> <address> Malabar, Florida, </address> <year> 1987. </year>
Reference-contexts: The size and depth of a circuit are defined as usual. Definition 2.1 A term is a conjunction of variables. Let var (t) denote the set of variables in term t. We shall use PI (f ) to denote the set of prime implicants of f (see for instance <ref> [11] </ref> for a definition of prime implicants).
Reference: [12] <author> S. Skyum and L. Valiant, </author> <title> A complexity theory based on Boolean algebra, </title> <journal> J. Assoc. Comput. Mach. </journal> <volume> 32 (1985), </volume> <pages> 484-502. </pages>
Reference-contexts: In his survey on connectivity [16], Wigderson mentions that under almost any choice of reducibility, USTCONN is harder than UCONN. For example, in the Boolean decision tree model and under monotone p-projections, USTCONN is provably harder than UCONN <ref> [3, 12] </ref>. The status of knowledge about the complexity of these two functions in the monotone Boolean circuit setting is consistent with this relative hardness. While a (log 2 (n)) depth bound is known for USTCONN [7], a similar bound is expected for UCONN [16] but seems elusive.
Reference: [13] <author> E. Tardos, </author> <title> The gap between monotone and non-monotone circuit complexity is exponential, </title> <booktitle> Combinatorica 7 (1987), </booktitle> <pages> 141-142. 8 </pages>
Reference-contexts: Monotone Boolean circuits is an example of such a restricted model for which several interesting results have been obtained <ref> [5, 9, 8, 13] </ref>. In this work, we study the power of mutliplicative idempotence for monotone Boolean circuits. We define a Boolean circuit to be multilinear if the formal polynomial associated with it is multilinear as well.
Reference: [14] <author> L. Valiant, </author> <title> The complexity of enumeration and reliability problems, </title> <journal> SIAM J. Comput. </journal> <month> 8-3 </month> <year> (1979), </year> <pages> 410-421. </pages>
Reference: [15] <author> H. Venkateswaran, </author> <title> Circuit definitions of nondeterministic complexity classes, </title> <journal> SIAM J. Comput. </journal> <month> 21 </month> <year> (1992) </year> <month> 655-670. </month>
Reference-contexts: This circuit is clearly monotone, but by theorem 3.2, it cannot be multilinear. 4.2 Monotone Skew Circuits A Boolean circuit is said to be skew if none of its ^ nodes have more than one non-leaf input <ref> [15] </ref>. The class N L is characterized by uniform families of polynomial size skew circuits [15]. (The uniformity condition used is the notion of U D -uniformity defined by Ruzzo [10].) The monotone analogue mN L of N L is then characterized by uniform families of monotone skew circuits of polynomial <p> is clearly monotone, but by theorem 3.2, it cannot be multilinear. 4.2 Monotone Skew Circuits A Boolean circuit is said to be skew if none of its ^ nodes have more than one non-leaf input <ref> [15] </ref>. The class N L is characterized by uniform families of polynomial size skew circuits [15]. (The uniformity condition used is the notion of U D -uniformity defined by Ruzzo [10].) The monotone analogue mN L of N L is then characterized by uniform families of monotone skew circuits of polynomial size (see also [5]).
Reference: [16] <author> A. Wigderson, </author> <title> The complexity of graph connectivity, </title> <booktitle> Mathematical Foundations of Computer Science, LNCS 629 (1992), </booktitle> <pages> 112-132. </pages>
Reference-contexts: USTCONN has been studied extensively in the past, both alone as well as in comparison with UCONN <ref> [16] </ref>. These two functions are known to be projection equivalent to each other [2]. In his survey on connectivity [16], Wigderson mentions that under almost any choice of reducibility, USTCONN is harder than UCONN. <p> USTCONN has been studied extensively in the past, both alone as well as in comparison with UCONN <ref> [16] </ref>. These two functions are known to be projection equivalent to each other [2]. In his survey on connectivity [16], Wigderson mentions that under almost any choice of reducibility, USTCONN is harder than UCONN. For example, in the Boolean decision tree model and under monotone p-projections, USTCONN is provably harder than UCONN [3, 12]. <p> The status of knowledge about the complexity of these two functions in the monotone Boolean circuit setting is consistent with this relative hardness. While a (log 2 (n)) depth bound is known for USTCONN [7], a similar bound is expected for UCONN <ref> [16] </ref> but seems elusive. Recently, Yao has shown a (log 1:5 (n)) monotone depth bound for UCONN [18], thereby showing that UCONN 62 mN C 1 . However, the relative hardness of these two functions are reversed in the context of ex-pressibility. <p> However, the relative hardness of these two functions are reversed in the context of ex-pressibility. USTCONN is known to be a monadic 1 1 property 1 but UCONN is not [4]. Since USTCONN is considered harder than UCONN, this result is mentioned as being surprising and counter-intuitive in <ref> [16] </ref>. In this section, we exhibit two circuit settings in which UCONN is prov ably harder than USTCONN.
Reference: [17] <author> A. Wigderson, N L=poly L=poly, </author> <booktitle> in Proceedings of Structure in Complexity Theory, </booktitle> <year> 1994. </year>
Reference-contexts: However, since elements of a Boolean algebra satisfy the multiplicative idempotence property, not all formal polynomials representing a Boolean function need be multilinear. We consider the problem of computing the connectivity function using circuits that are monotone and mul-tilinear. The connectivity function has been studied extensively in the past <ref> [17] </ref>. Recently, Yao has shown a (log 1:5 (n)) monotone depth bound for this function [18], thereby showing that it is not in mN C 1 . Our main result is that monotone multilinear circuits for this function require exponential size.
Reference: [18] <author> A. C. Yao, </author> <title> A lower bound for monotone depth of connectivity, </title> <booktitle> (to appear) IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1994. </year>
Reference-contexts: We consider the problem of computing the connectivity function using circuits that are monotone and mul-tilinear. The connectivity function has been studied extensively in the past [17]. Recently, Yao has shown a (log 1:5 (n)) monotone depth bound for this function <ref> [18] </ref>, thereby showing that it is not in mN C 1 . Our main result is that monotone multilinear circuits for this function require exponential size. <p> While a (log 2 (n)) depth bound is known for USTCONN [7], a similar bound is expected for UCONN [16] but seems elusive. Recently, Yao has shown a (log 1:5 (n)) monotone depth bound for UCONN <ref> [18] </ref>, thereby showing that UCONN 62 mN C 1 . However, the relative hardness of these two functions are reversed in the context of ex-pressibility. USTCONN is known to be a monadic 1 1 property 1 but UCONN is not [4].
References-found: 18

