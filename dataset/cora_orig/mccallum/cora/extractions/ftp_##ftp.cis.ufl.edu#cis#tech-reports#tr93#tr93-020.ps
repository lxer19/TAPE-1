URL: ftp://ftp.cis.ufl.edu/cis/tech-reports/tr93/tr93-020.ps
Refering-URL: http://www.cis.ufl.edu/tech-reports/tech-reports/tr93-abstracts.html
Root-URL: http://www.cis.ufl.edu
Title: Users' Guide for the Unsymmetric-pattern MultiFrontal Package  
Author: (UMFPACK) Timothy A. Davis c fl T. Davis 
Address: FL, 32611 USA  
Affiliation: Gainesville,  
Date: June 1993  
Abstract: Technical Report TR-93-020 Computer and Information Sciences Department University of Florida 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> F. L. Alvarado. </author> <title> Manipulation and visualization of sparse matrices. </title> <journal> ORSA J. on Computing, </journal> <volume> 2 </volume> <pages> 186-207, </pages> <year> 1990. </year>
Reference-contexts: The format of the files is compatible with the Sparse Matrix Manipulation System (SMMS) <ref> [1] </ref>, and is shown in Table 3. The output argument, ERROR, is zero if no error occurred, and nonzero otherwise. 3 Description of each user-callable subroutine Each user-callable subroutine is described in this section. <p> factorize a matrix, solve, re-factorize, and solve ddemo5.f compute b, then use LU factors to solve Ax = b for x ddemo6.f portable random number generator ddemo7.f read or generate a sparse matrix ddemo8.f generate a band matrix, with a dense band ddemo9.f read a matrix in the SMMS format <ref> [1] </ref> ddemoa.f read a matrix in the Harwell/Boeing format [5, 6] ddemob.f create random duplicate entries in A (to test duplicate removal) SDEMO, single precision demo program (11 files): same set of file names as DDEMO, except with s prefix instead of d DEMO, simple double-precision demo program (1 file): demo.f
Reference: [2] <author> P. R. Amestoy and I. S. Duff. </author> <title> Vectorization of a multiprocessor multifrontal code. </title> <journal> Int. J. Supercomputer Appl., </journal> <volume> 3(3) </volume> <pages> 41-59, </pages> <year> 1989. </year>
Reference-contexts: UMFPACK is based on the unsymmetric-pattern multifrontal method [3]. The method relies on dense matrix kernels [4] to factorize frontal matrices, which are dense submatrices of the sparse matrix being factorized. In contrast to the classical multifrontal method <ref> [2, 8] </ref>, frontal matrices are rectangular instead of square, and the assembly tree is replaced with a directed acyclic graph. As in the classical multifrontal method, advantage is taken of repetitive structure in the matrix by amalgamating nodes in the directed acyclic graph, giving it high performance on parallel-vector supercomputers. <p> C simple demo program for the Unsymmetric-pattern MultiFrontal Package C C Factor and solve a 5-by-5 system: C C [ 3 0 4 0 6 ] [ 45 ] <ref> [ 2 ] </ref> C [ 0 -1 -3 2 0 ] x = [ -3 ].
Reference: [3] <author> T. A. Davis and I. S. Duff. </author> <title> An unsymmetric-pattern multifrontal method for sparse LU factorization. </title> <type> Technical Report TR-93-018, </type> <institution> CIS Dept., Univ. </institution> <note> of Florida (anonymous ftp to ftp.cis.ufl.edu:cis/tech-reports/tr93/tr93-018.ps.Z), Gainesville, FL (submitted to the SIAM Journal on Matrix Analysis and Applications), </note> <year> 1993. </year>
Reference-contexts: It uses LU factorization, and performs pivoting for numerical purposes and to maintain sparsity. UMFPACK is based on the unsymmetric-pattern multifrontal method <ref> [3] </ref>. The method relies on dense matrix kernels [4] to factorize frontal matrices, which are dense submatrices of the sparse matrix being factorized. In contrast to the classical multifrontal method [2, 8], frontal matrices are rectangular instead of square, and the assembly tree is replaced with a directed acyclic graph. <p> LOSRCH The UM FAC subroutine does not maintain the true degree of each row and column of the matrix being factorized (the degree is simply the number of entries in the row or column). Instead, it keeps track of upper and lower bounds that are easier to compute (see <ref> [3] </ref> for details). The LOSRCH argument is the number of columns of lowest lower bound degree to examine during pivot search. If greater than zero, then 3N extra temporary INTEGER space is allocated from IMEM. Range: 0 to N, typical value: 0. <p> The Level-3 GEMM subroutine is used to update the contribution blocks, regardless of the value of NB. See <ref> [3] </ref> for details. The best value of NB depends on the computer being used. Range: 1 to N, typical value: 16 to 64. EXTRA How much extra space to allocate for additional elbow-room in the tuple lists. <p> Range: 1 to N, typical value: 16 to 64. EXTRA How much extra space to allocate for additional elbow-room in the tuple lists. A tuple list is a list of the frontal matrices that affect a single row or column. The tuple lists grow and shrink during factorization (see <ref> [3] </ref> for details). Up to EXTRA2N memory in IMEM is used, although this upper bound is rarely reached in practice. A value of zero will not be very efficient. <p> C simple demo program for the Unsymmetric-pattern MultiFrontal Package C C Factor and solve a 5-by-5 system: C C [ 3 0 4 0 6 ] [ 45 ] [ 2 ] C [ 0 -1 -3 2 0 ] x = [ -3 ]. Solution is x = <ref> [ 3 ] </ref> 28 C [ 0 0 1 0 0 ] [ 3 ] [ 4 ] C C prints input matrix A to the file IJORIG, A permuted to block-upper-C triangular form to IJBLOK, and LU factors to IJLU. <p> Solution is x = <ref> [ 3 ] </ref> 28 C [ 0 0 1 0 0 ] [ 3 ] [ 4 ] C C prints input matrix A to the file IJORIG, A permuted to block-upper-C triangular form to IJBLOK, and LU factors to IJLU.
Reference: [4] <author> J. J. Dongarra, J. Du Croz, S. Hammarling, and I. S. Duff. </author> <title> A set of level-3 basic linear algebra subprograms. </title> <journal> ACM Trans. Math. Softw., </journal> <volume> 16(1) </volume> <pages> 1-17, </pages> <year> 1990. </year>
Reference-contexts: It uses LU factorization, and performs pivoting for numerical purposes and to maintain sparsity. UMFPACK is based on the unsymmetric-pattern multifrontal method [3]. The method relies on dense matrix kernels <ref> [4] </ref> to factorize frontal matrices, which are dense submatrices of the sparse matrix being factorized. In contrast to the classical multifrontal method [2, 8], frontal matrices are rectangular instead of square, and the assembly tree is replaced with a directed acyclic graph. <p> Solution is x = [ 3 ] 28 C [ 0 0 1 0 0 ] [ 3 ] <ref> [ 4 ] </ref> C C prints input matrix A to the file IJORIG, A permuted to block-upper-C triangular form to IJBLOK, and LU factors to IJLU.
Reference: [5] <author> I. S. Duff, R. G. Grimes, and J. G. Lewis. </author> <title> Sparse matrix test problems. </title> <journal> ACM Trans. Math. Softw., </journal> <volume> 15 </volume> <pages> 1-14, </pages> <year> 1989. </year>
Reference-contexts: Also included in the distribution are six input files for the test programs, for which the UMFPACK Copyright does not apply. Two of the files are sparse matrices from the Harwell/Boeing Sparse Matrix Collection (Release 1) <ref> [5, 6] </ref>. They are included by permission. 23 The standard distribution consists of a total of 102 files, described in Table 4. User-callable subroutines are shown in a box . <p> b, then use LU factors to solve Ax = b for x ddemo6.f portable random number generator ddemo7.f read or generate a sparse matrix ddemo8.f generate a band matrix, with a dense band ddemo9.f read a matrix in the SMMS format [1] ddemoa.f read a matrix in the Harwell/Boeing format <ref> [5, 6] </ref> ddemob.f create random duplicate entries in A (to test duplicate removal) SDEMO, single precision demo program (11 files): same set of file names as DDEMO, except with s prefix instead of d DEMO, simple double-precision demo program (1 file): demo.f factorize and solve a 5-by-5 matrix (see Section 5) <p> files): same set of file names as DDEMO, except with s prefix instead of d DEMO, simple double-precision demo program (1 file): demo.f factorize and solve a 5-by-5 matrix (see Section 5) Input data for DDEMO and SDEMO (5 files): in input file ibm32 32-by-32 matrix from then Harwell/Boeing collection <ref> [5, 6] </ref> will199 199-by-199 matrix from then Harwell/Boeing collection ten singular 10-by-10 matrix in triplet form four 4-by-4 matrix in triplet form five symmetric 5-by-5 matrix in triplet form Documentation and installation files (3 files) notice copyright notice manual.tex this manual makefile for installing on UNIX systems 26 Table 5: make <p> Doing so will improve the performance of future versions of this software for your application. Of particular interest are large unsymmetric sparse matrices (say, 5000-by-5000 or larger) with unsymmetric nonzero pattern. The current release of the Harwell/Boeing Sparse Matrix Collection is weak in this area <ref> [5, 6] </ref>. 31 8 Acknowledgments This project is in collaboration with Iain Duff (Rutherford Appleton Laboratory, England, and CERFACS, Toulouse, France). Portions of this work were supported by a post-doctoral grant from CERFACS, September 1989 to December 1990.
Reference: [6] <author> I. S. Duff, R. G. Grimes, and J. G. Lewis. </author> <title> Users' guide for the Harwell-Boeing sparse matrix collection (release 1). </title> <type> Technical Report RAL-92-086, </type> <institution> Rutherford Appleton Laboratory, </institution> <address> Didcot, Oxon, England, </address> <month> Dec. </month> <year> 1992. </year>
Reference-contexts: Also included in the distribution are six input files for the test programs, for which the UMFPACK Copyright does not apply. Two of the files are sparse matrices from the Harwell/Boeing Sparse Matrix Collection (Release 1) <ref> [5, 6] </ref>. They are included by permission. 23 The standard distribution consists of a total of 102 files, described in Table 4. User-callable subroutines are shown in a box . <p> b, then use LU factors to solve Ax = b for x ddemo6.f portable random number generator ddemo7.f read or generate a sparse matrix ddemo8.f generate a band matrix, with a dense band ddemo9.f read a matrix in the SMMS format [1] ddemoa.f read a matrix in the Harwell/Boeing format <ref> [5, 6] </ref> ddemob.f create random duplicate entries in A (to test duplicate removal) SDEMO, single precision demo program (11 files): same set of file names as DDEMO, except with s prefix instead of d DEMO, simple double-precision demo program (1 file): demo.f factorize and solve a 5-by-5 matrix (see Section 5) <p> files): same set of file names as DDEMO, except with s prefix instead of d DEMO, simple double-precision demo program (1 file): demo.f factorize and solve a 5-by-5 matrix (see Section 5) Input data for DDEMO and SDEMO (5 files): in input file ibm32 32-by-32 matrix from then Harwell/Boeing collection <ref> [5, 6] </ref> will199 199-by-199 matrix from then Harwell/Boeing collection ten singular 10-by-10 matrix in triplet form four 4-by-4 matrix in triplet form five symmetric 5-by-5 matrix in triplet form Documentation and installation files (3 files) notice copyright notice manual.tex this manual makefile for installing on UNIX systems 26 Table 5: make <p> Doing so will improve the performance of future versions of this software for your application. Of particular interest are large unsymmetric sparse matrices (say, 5000-by-5000 or larger) with unsymmetric nonzero pattern. The current release of the Harwell/Boeing Sparse Matrix Collection is weak in this area <ref> [5, 6] </ref>. 31 8 Acknowledgments This project is in collaboration with Iain Duff (Rutherford Appleton Laboratory, England, and CERFACS, Toulouse, France). Portions of this work were supported by a post-doctoral grant from CERFACS, September 1989 to December 1990.
Reference: [7] <author> I. S. Duff and J. K. Reid. </author> <title> Some design features of a sparse matrix code. </title> <journal> ACM Trans. Math. Softw., </journal> <volume> 5(1) </volume> <pages> 18-35, </pages> <year> 1979. </year>
Reference-contexts: It is reserved for possible future releases. 6 3.1 UM FAC The UM FAC subroutine computes an LU factorization of a general unsymmetric sparse matrix A. The matrix can be optionally pre-ordered into a block-upper-triangular form, using two Harwell MA28 subroutines <ref> [7] </ref>. Pivoting within each diagonal block is performed during factorization to maintain sparsity and numerical stability.
Reference: [8] <author> I. S. Duff and J. K. Reid. </author> <title> The multifrontal solution of unsymmetric sets of linear equations. </title> <journal> SIAM J. Sci. Statist. Comput., </journal> <volume> 5(3) </volume> <pages> 633-641, </pages> <year> 1984. </year> <month> 32 </month>
Reference-contexts: UMFPACK is based on the unsymmetric-pattern multifrontal method [3]. The method relies on dense matrix kernels [4] to factorize frontal matrices, which are dense submatrices of the sparse matrix being factorized. In contrast to the classical multifrontal method <ref> [2, 8] </ref>, frontal matrices are rectangular instead of square, and the assembly tree is replaced with a directed acyclic graph. As in the classical multifrontal method, advantage is taken of repetitive structure in the matrix by amalgamating nodes in the directed acyclic graph, giving it high performance on parallel-vector supercomputers.
References-found: 8

