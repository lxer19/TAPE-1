URL: http://ftp.cs.yale.edu/pub/ghosh/tr1065.ps
Refering-URL: http://ftp.cs.yale.edu/pub/ghosh/
Root-URL: http://www.cs.yale.edu
Title: Faster Schedules for Diffusive Load Balancing via Over-Relaxation (*****DRAFT. DO NOT DISTRIBUTE*****)  
Author: Bhaskar Ghosh S. Muthukrishnan Martin H. Schultz 
Note: Supported by ONR under grant number 4-91-J-1576 and a Yale/IBM joint study.  
Address: P.O.Box 208285, New Haven, CT 06520.  University.  
Affiliation: Yale University Department of Computer Science  1 Department of Computer Science, Yale University.  3 Department of Computer Science, Yale  
Pubnum: YALEU/DCS/TR-YALEU/DCS/TR-1065  
Email: Email: ghosh-bhaskar@cs.yale.edu.  Email: schultz@cs.yale.edu.  
Date: February 1995  
Abstract: 2 Dept of Computer Science, Univ. of Warwick, Coventry, London and DIMACS, Rutgers University, Piscataway, NJ 08855. Supported by DIMACS, Center for Discrete Mathematics and Theoretical Computer Science, a National Science Foundation Science and Technology Center, under NSF Contract STC-8809648. Email: muthu@dimacs.rutgers.edu. 
Abstract-found: 1
Intro-found: 1
Reference: [Alo86] <author> N. Alon. </author> <title> Eigenvalues and Expanders. </title> <journal> Combinatorica, </journal> <volume> 6 </volume> <pages> 83-96, </pages> <year> 1986. </year>
Reference-contexts: The matrix L = D A is the Laplacian Matrix of G. The eigenvalues of L are 0 = 1 &lt; 2 : : : n . The eigenvalue 2 is a widely studied parameter and it reflects the connectivity of the graph. (See <ref> [Alo86, MP92] </ref> for more on this.) It is well known that G is a connected graph if and only if 2 &gt; 0. It can be shown that for any connected graph with n nodes, 2 = (1=n 2 ). Condition Number.
Reference: [Ame77] <author> W. F. Ames. </author> <title> Numerical Methods for Partial Differential Equations. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1977. </year>
Reference-contexts: The special case of Algorithm LD using ff ij = ff over all edges (i; j) 2 E can be rewritten as the following iterative scheme: ~w (t+1) = (I ffL) ~w (t) (2) This iteration is also known as the Extrapolated Richardson Method or the First Order Richard-son Method <ref> [Ame77] </ref>. This iteration converges to solution of the equation L ~w = 0. The solution is the load-balanced vector (w; w; : : : ; w) T . Drawback of Previous Approaches. In real applications, parallel and distributed computers have sparse underlying networks. <p> Details on the different versions of Second Order Richardson can be found in standard numerical analysis texts e.g. <ref> [Ame77, You71, HY81] </ref>. <p> These are well-known results and can be found in standard numerical analysis texts <ref> [Ame77, HY81] </ref>. <p> This choice of P k (x) minimizes a particular measure called the pseudo-spectral radius of the matrix polynomial P k (L). We again refer the reader to <ref> [Ame77, You71, HY81] </ref> for detailed discussions of the general principles of polynomial acceleration and how it relates to the second order method. The following lemmas concern the convergence of the Second Order Richardson method.
Reference: [Boi90] <author> J. E. Boillat. </author> <title> Load Balancing and Poisson Equation in a Graph. </title> <journal> Concurrency: Practice and Experience, </journal> <volume> 2(4) </volume> <pages> 289-313, </pages> <year> 1990. </year>
Reference-contexts: In each communication step, a processor can send load to each neighbor in a time-step (multiport model). Across each link in a communication step, an arbitrary amount of load can be sent (links have infinite capacity). This problem has been well studied in literature <ref> [Boi90, Cyb89, GM94, HT93, SS94, Son94] </ref>. This problem is an abstraction of dynamic load balancing problems that arise in several parallel and distributed applications. We refer the reader to [Cyb89, GM94, HT93, SS94] for examples of such applications. 1.1 Definitions and Technical Preliminaries Potential . <p> Local Approach. A local approach to choosing the diffusion parameters has been used in <ref> [GM95, Boi90] </ref>. The algorithm in [GM95] chooses the following diffusion parameter: 8 (i; j) 2 E; ff ij = d i + d j where, d i and d j are the degrees of nodes i and j respectively. Note that the computation of ff ij requires only local communication.
Reference: [BT89] <author> D. P. Bertsekas and J. N. Tsitsiklis. </author> <title> Parallel and Distributed Computation, Numerical Methods. </title> <publisher> Prentice Hall, </publisher> <address> Engelwood Cliffs, NJ, </address> <year> 1989. </year>
Reference-contexts: The problem of choosing an optimal diffusion matrix M to minimize the total number of iterations required for the above scheme to converge is still open <ref> [BT89] </ref>. In designing diffusive load balancing algorithms for arbitrary networks, there have been two approaches to the problem of choosing the diffusion parameters. Global Approach.
Reference: [Cyb89] <author> G. Cybenko. </author> <title> Dynamic Load Balancing for Distributed Memory Multiprocessors. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 7(2) </volume> <pages> 279-301, </pages> <month> October </month> <year> 1989. </year>
Reference-contexts: In each communication step, a processor can send load to each neighbor in a time-step (multiport model). Across each link in a communication step, an arbitrary amount of load can be sent (links have infinite capacity). This problem has been well studied in literature <ref> [Boi90, Cyb89, GM94, HT93, SS94, Son94] </ref>. This problem is an abstraction of dynamic load balancing problems that arise in several parallel and distributed applications. We refer the reader to [Cyb89, GM94, HT93, SS94] for examples of such applications. 1.1 Definitions and Technical Preliminaries Potential . <p> This problem has been well studied in literature [Boi90, Cyb89, GM94, HT93, SS94, Son94]. This problem is an abstraction of dynamic load balancing problems that arise in several parallel and distributed applications. We refer the reader to <ref> [Cyb89, GM94, HT93, SS94] </ref> for examples of such applications. 1.1 Definitions and Technical Preliminaries Potential . Consider a graph G with n nodes. <p> Step 2. In parallel for every neighbor j, if w i &gt; w j , then processor i sends ff ij (w i w j ) load units across link (i; j) to j. 2 Previous Approaches to Diffusive Load Balancing Cybenko <ref> [Cyb89] </ref> considered the diffusive algorithm (Algorithm LD for Local Diffusion) for load balancing given in Figure 1 under the assumption that the loads are real numbers, hence arbitrarily divisible. <p> G is not bipartite. Theorem 2 ( <ref> [Cyb89] </ref>) For iteration t + 1 of (1), the potential of the graph decreases as: (t+1) fl 2 (t) where fl is the eigenvalue of M with the second largest modulus, and (t) and (t+1) are the potentials after iteration t and t + 1 respectively. <p> Global Approach. Given a graph, a simple alternative of choosing the diffusion parameters is to restrict the diffusion parameter to the same value ff over all edges in the graph. Under this 3 alternative, it was shown in [GMS93] (and implicit in a result of <ref> [Cyb89] </ref>) that the eigenvalue fl of M (referred to in Theorem 2) is minimized when ff is set to an optimal value 8 (i; j) 2 E; ff ij = ff = 2 + n For example, for a d-dimensional hypercube and a 2D-mesh this optimal value is 1 d+1 and <p> Note that this algorithm requires global information in the form of the eigenvalues 2 and n . With this vaue of ff, the number of steps required to reduce the initial potential by a fac tor * can be shown <ref> [Cyb89, GMS93] </ref> to be O (log *= log 1=(1 2 2 n )) For sparse graphs, this is approximately O ( n 2 log *) = O ( log *) where is the condition number of G. Local Approach.
Reference: [GM94] <author> B. Ghosh and S. Muthukrishnan. </author> <title> Dynamic Load Balancing on Parallel and Distributed Networks by Random Matchings. </title> <booktitle> In Proceedings of Sixth Annual ACM Symposium on Parallel Algorithms and Architectures, </booktitle> <pages> pages 226-235, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: In each communication step, a processor can send load to each neighbor in a time-step (multiport model). Across each link in a communication step, an arbitrary amount of load can be sent (links have infinite capacity). This problem has been well studied in literature <ref> [Boi90, Cyb89, GM94, HT93, SS94, Son94] </ref>. This problem is an abstraction of dynamic load balancing problems that arise in several parallel and distributed applications. We refer the reader to [Cyb89, GM94, HT93, SS94] for examples of such applications. 1.1 Definitions and Technical Preliminaries Potential . <p> This problem has been well studied in literature [Boi90, Cyb89, GM94, HT93, SS94, Son94]. This problem is an abstraction of dynamic load balancing problems that arise in several parallel and distributed applications. We refer the reader to <ref> [Cyb89, GM94, HT93, SS94] </ref> for examples of such applications. 1.1 Definitions and Technical Preliminaries Potential . Consider a graph G with n nodes. <p> It is possible that the convergence for integral loads can be shown as a perturbation of that for real loads in the manner described in <ref> [GM94] </ref>. Another interesting question is whether Algorithm SLB can be made to work in an asynchronous model of communication. Future work will involve investigations into these questions. 7 Acknowledgements This research has benefited from discussions with Stan Eisenstat and Michel Jacquemin.
Reference: [GM95] <author> B. Ghosh and S. Muthukrishnan. </author> <title> Diffusive Load Balancing with Integral Loads. </title> <type> Technical Report YALEU/DCS/TR-1067 (forthcoming), </type> <institution> Department of Computer Science, Yale University, </institution> <month> March </month> <year> 1995. </year>
Reference-contexts: Local Approach. A local approach to choosing the diffusion parameters has been used in <ref> [GM95, Boi90] </ref>. The algorithm in [GM95] chooses the following diffusion parameter: 8 (i; j) 2 E; ff ij = d i + d j where, d i and d j are the degrees of nodes i and j respectively. Note that the computation of ff ij requires only local communication. <p> Local Approach. A local approach to choosing the diffusion parameters has been used in [GM95, Boi90]. The algorithm in <ref> [GM95] </ref> chooses the following diffusion parameter: 8 (i; j) 2 E; ff ij = d i + d j where, d i and d j are the degrees of nodes i and j respectively. Note that the computation of ff ij requires only local communication.
Reference: [GMS93] <author> B. Ghosh, E. Mjolsness, and M. H. Schultz. </author> <title> Iterative Techniques for a Load Balancing Problem. </title> <type> Technical Report YALEU/DCS/TR-987, </type> <institution> Department of Computer Science, Yale University, </institution> <month> October </month> <year> 1993. </year>
Reference-contexts: Global Approach. Given a graph, a simple alternative of choosing the diffusion parameters is to restrict the diffusion parameter to the same value ff over all edges in the graph. Under this 3 alternative, it was shown in <ref> [GMS93] </ref> (and implicit in a result of [Cyb89]) that the eigenvalue fl of M (referred to in Theorem 2) is minimized when ff is set to an optimal value 8 (i; j) 2 E; ff ij = ff = 2 + n For example, for a d-dimensional hypercube and a 2D-mesh <p> Note that this algorithm requires global information in the form of the eigenvalues 2 and n . With this vaue of ff, the number of steps required to reduce the initial potential by a fac tor * can be shown <ref> [Cyb89, GMS93] </ref> to be O (log *= log 1=(1 2 2 n )) For sparse graphs, this is approximately O ( n 2 log *) = O ( log *) where is the condition number of G. Local Approach.
Reference: [HT93] <author> A Heirich and S Taylor. </author> <title> A Parabolic Theory of Load Balancing. </title> <type> Technical Report Caltech-CS-TR-93-25, </type> <institution> Caltech Scalable Concurrent Computation Lab, </institution> <month> March </month> <year> 1993. </year>
Reference-contexts: In each communication step, a processor can send load to each neighbor in a time-step (multiport model). Across each link in a communication step, an arbitrary amount of load can be sent (links have infinite capacity). This problem has been well studied in literature <ref> [Boi90, Cyb89, GM94, HT93, SS94, Son94] </ref>. This problem is an abstraction of dynamic load balancing problems that arise in several parallel and distributed applications. We refer the reader to [Cyb89, GM94, HT93, SS94] for examples of such applications. 1.1 Definitions and Technical Preliminaries Potential . <p> This problem has been well studied in literature [Boi90, Cyb89, GM94, HT93, SS94, Son94]. This problem is an abstraction of dynamic load balancing problems that arise in several parallel and distributed applications. We refer the reader to <ref> [Cyb89, GM94, HT93, SS94] </ref> for examples of such applications. 1.1 Definitions and Technical Preliminaries Potential . Consider a graph G with n nodes. <p> This technique of choosing the diffusion parameter was used in <ref> [HT93] </ref> for dynamic load balancing for adaptive mesh applications on a processor graph with 2D-mesh connectivity. Note that this algorithm requires global information in the form of the eigenvalues 2 and n .
Reference: [HY81] <author> L. A. Hageman and D. M. Young. </author> <title> Applied Iterative Methods. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1981. </year>
Reference-contexts: Details on the different versions of Second Order Richardson can be found in standard numerical analysis texts e.g. <ref> [Ame77, You71, HY81] </ref>. <p> These are well-known results and can be found in standard numerical analysis texts <ref> [Ame77, HY81] </ref>. <p> This choice of P k (x) minimizes a particular measure called the pseudo-spectral radius of the matrix polynomial P k (L). We again refer the reader to <ref> [Ame77, You71, HY81] </ref> for detailed discussions of the general principles of polynomial acceleration and how it relates to the second order method. The following lemmas concern the convergence of the Second Order Richardson method.
Reference: [MP92] <author> B. Mohar and S. Polyak. </author> <title> Eigenvalues in Combinatorial Optimization. </title> <type> Technical Report Research Report 92752, IMA, </type> <institution> Minneapolis, </institution> <year> 1992. </year>
Reference-contexts: The matrix L = D A is the Laplacian Matrix of G. The eigenvalues of L are 0 = 1 &lt; 2 : : : n . The eigenvalue 2 is a widely studied parameter and it reflects the connectivity of the graph. (See <ref> [Alo86, MP92] </ref> for more on this.) It is well known that G is a connected graph if and only if 2 &gt; 0. It can be shown that for any connected graph with n nodes, 2 = (1=n 2 ). Condition Number.
Reference: [Son94] <author> J. Song. </author> <title> A Partially Asynchronous and Iterative Algorithm for Distributed Load Balancing. </title> <journal> Parallel Computing, </journal> <volume> 20 </volume> <pages> 853-868, </pages> <year> 1994. </year> <month> 17 </month>
Reference-contexts: In each communication step, a processor can send load to each neighbor in a time-step (multiport model). Across each link in a communication step, an arbitrary amount of load can be sent (links have infinite capacity). This problem has been well studied in literature <ref> [Boi90, Cyb89, GM94, HT93, SS94, Son94] </ref>. This problem is an abstraction of dynamic load balancing problems that arise in several parallel and distributed applications. We refer the reader to [Cyb89, GM94, HT93, SS94] for examples of such applications. 1.1 Definitions and Technical Preliminaries Potential .
Reference: [SS94] <author> R. Subramanian and I. Scherson. </author> <title> An Analysis of Diffusive Load Balancing. </title> <booktitle> In Pro--ceedings of Sixth Annual ACM Symposium on Parallel Algorithms and Architectures, </booktitle> <pages> pages 220-225, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: In each communication step, a processor can send load to each neighbor in a time-step (multiport model). Across each link in a communication step, an arbitrary amount of load can be sent (links have infinite capacity). This problem has been well studied in literature <ref> [Boi90, Cyb89, GM94, HT93, SS94, Son94] </ref>. This problem is an abstraction of dynamic load balancing problems that arise in several parallel and distributed applications. We refer the reader to [Cyb89, GM94, HT93, SS94] for examples of such applications. 1.1 Definitions and Technical Preliminaries Potential . <p> This problem has been well studied in literature [Boi90, Cyb89, GM94, HT93, SS94, Son94]. This problem is an abstraction of dynamic load balancing problems that arise in several parallel and distributed applications. We refer the reader to <ref> [Cyb89, GM94, HT93, SS94] </ref> for examples of such applications. 1.1 Definitions and Technical Preliminaries Potential . Consider a graph G with n nodes.
Reference: [Var62] <author> R. Varga. </author> <title> Matrix Iterative Analysis. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1962. </year>
Reference-contexts: The polynomial is optimal in the sense that is minimizes a measure called the pseudo-spectral radius of the matrix polynomial for any semi-iterative method based on Iteration 3 The scalar coefficients in the iteration tend to a limiting value. In fact, it can be shown <ref> [Var62] </ref> that lim k = 1 = (1 + 1 2 ) We now study the convergence of Iteration 4.

References-found: 14

