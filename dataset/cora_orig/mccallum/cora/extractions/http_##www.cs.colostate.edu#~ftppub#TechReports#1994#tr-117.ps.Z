URL: http://www.cs.colostate.edu/~ftppub/TechReports/1994/tr-117.ps.Z
Refering-URL: http://www.cs.colostate.edu/~ftppub/
Root-URL: 
Affiliation: Department of Computer Science Colorado State University  
Abstract: Integrating Failure Recovery with Planner Debugging Adele E. Howe Technical Report CS-94-117 July 18, 1994 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Maria Gini. </author> <title> Automatic error detection and recovery. </title> <institution> Computer Science Dept. 88-48, University of Minnesota, Minneapolis, MN, </institution> <month> June </month> <year> 1988. </year>
Reference: [2] <author> Kristian John Hammond. </author> <title> Case-Based Planning: An Integrated Theory of Planning, Learning and Memory. </title> <type> PhD thesis, </type> <institution> Dept. of Computer Science, Yale University, </institution> <address> New Haven, CT, </address> <month> October </month> <year> 1986. </year>
Reference: [3] <author> Adele E. Howe. </author> <title> Accepting the Inevitable: The Role of Failure Recovery in the Design of Planners. </title> <type> PhD thesis, </type> <institution> University of Massachusetts, Department of Computer Science, </institution> <address> Amherst, MA, </address> <month> February </month> <year> 1993. </year>
Reference-contexts: It is most appropriate for finding occasionally repeating bugs that are due to common detrimental planner interactions. This approach increases the reliability of the planner by tuning failure recovery through debugging and identifying potential flaws in the planner's knowledge base. The approach was 2 introduced in my thesis research <ref> [3] </ref> and is currently being extended and automated. 3.1 Tuning Failure Recovery To tune failure recovery, we begin with a simple control strategy, a flexible method selection mechanism and a core set of recovery methods.
Reference: [4] <author> Adele E. Howe and Paul R. Cohen. </author> <title> Failure recovery: A model and experiments. </title> <booktitle> In Proceedings of the Ninth National Conference on Artificial Intelligence, </booktitle> <pages> pages 801-808, </pages> <address> Anaheim, CA, </address> <month> July </month> <year> 1991. </year> <month> 6 </month>
Reference-contexts: Finally, information gathered as part of debugging can be used to improve the responses of automated failure recovery. Failure recovery influences which failures occur; minor changes in the design of failure recovery produce significant changes in the number and types of failures <ref> [4] </ref>. Failure recovery may cause other failures downstream or may simply not be as efficient as possible.
Reference: [5] <author> Adele E. Howe and Paul R. Cohen. </author> <title> Detecting and explaining dependencies. </title> <booktitle> In Working Notes of the Fourth International Workshop on AI and Statistics, </booktitle> <month> January </month> <year> 1993. </year>
Reference-contexts: Thus, failure recovery provides the input for the FRA process. Second, the execution traces are searched (by a program) for statistically significant co-occurrences (called dependencies) between recovery efforts and subsequent failures <ref> [5] </ref>. Dependencies tell the designer how the recovery actions influence the failures that occur and how one failure influences another.
Reference: [6] <author> Reid G. Simmons. </author> <title> A theory of debugging plans and interpretations. </title> <booktitle> In Proceedings of the Seventh National Conference on Artificial Intelligence, </booktitle> <pages> pages 94-99, </pages> <address> Minneapolis, Min-nesota, </address> <year> 1988. </year> <journal> American Association for Artificial Intelligence. </journal>
Reference: [7] <author> Gerald A. Sussman. </author> <title> A computational model of skill acquisition. </title> <type> Technical Report Memo no. </type> <institution> AI-TR-297, MIT AI Lab, </institution> <year> 1973. </year>
Reference: [8] <author> David E. Wilkins. </author> <title> Recovering from execution errors in SIPE. </title> <type> Technical Report 346, </type> <institution> Artificial Intelligence Center, Computer Science and Technology Center, SRI International, </institution> <year> 1985. </year>
References-found: 8

