URL: http://www.win.tue.nl/win/cs/tt/paul/publ/resass.ps
Refering-URL: http://www.win.tue.nl/win/cs/tt/paul/cv.html
Root-URL: http://www.win.tue.nl
Email: paulvg@win.tue.nl,  arnaud@win.tue.nl, +31-40-2474334  
Phone: 1  +31-40-2472749, +31-40-2468508 (fax) 2  
Title: Resource Assignment in Hierarchical Multiple Resource Systems  
Author: P.C.N. van Gorp A.F.W. Gouder de Beauregard 
Keyword: scheduling, resource allocation, multiprocessor system  
Address: PO Box 513, 5600 MB, Eindhoven, the Netherlands  
Affiliation: Department of Mathematics and Computing Science Eindhoven University of Technology  
Abstract: The assignment of tasks to resources is one of the main tasks in the construction of distributed real-time systems. We present a construction method for mapping a given execution graph onto a given hierarchical hardware architecture. The method is based on recursive graph bipartitioning. Local search techniques are used to find suitable bipartitions. The developed algorithm extends the execution graph to ensure predictable delays on inter-task communication. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> H. El-Rewini, H. H. Ali, and T. Lewis. </author> <title> Task scheduling in multiprocessing systems. </title> <booktitle> IEEE Computer, </booktitle> <pages> pages 27-37, </pages> <month> December </month> <year> 1995. </year>
Reference-contexts: 1 Introduction In the design of a distributed real-time system, one often encounters the problem of mapping a set of related tasks onto a given hardware architecture <ref> [1] </ref> [2] [3]. Tasks have to be assigned to resources and the execution moments of tasks have to be determined. In hard real-time systems, the assignment has to guarantee a timely execution. In general, the combined resource and start time assignment problem is intractable [4].
Reference: [2] <author> K. Ramamritham. </author> <title> Allocation and scheduling of complex periodic tasks. </title> <booktitle> In Proc. 10th intern. conf. on distr. comp. syst., </booktitle> <pages> pages 108-115. </pages> <publisher> IEEE, </publisher> <year> 1990. </year>
Reference-contexts: 1 Introduction In the design of a distributed real-time system, one often encounters the problem of mapping a set of related tasks onto a given hardware architecture [1] <ref> [2] </ref> [3]. Tasks have to be assigned to resources and the execution moments of tasks have to be determined. In hard real-time systems, the assignment has to guarantee a timely execution. In general, the combined resource and start time assignment problem is intractable [4]. A decomposition results in easier subproblems.
Reference: [3] <author> E.A. de Kock, E.H.L. Aarts, G. Essink, R.E.J. Jansen, and J.H.M. Korst. </author> <title> A variable-depth search algorithm for the recursive bipartitioning of signal flow graphs. </title> <journal> OR Spektrum, </journal> <volume> 17 </volume> <pages> 159-172, </pages> <year> 1995. </year>
Reference-contexts: 1 Introduction In the design of a distributed real-time system, one often encounters the problem of mapping a set of related tasks onto a given hardware architecture [1] [2] <ref> [3] </ref>. Tasks have to be assigned to resources and the execution moments of tasks have to be determined. In hard real-time systems, the assignment has to guarantee a timely execution. In general, the combined resource and start time assignment problem is intractable [4]. A decomposition results in easier subproblems.
Reference: [4] <author> W.P.M. Nuijten. </author> <title> Time and Resource Constrained Scheduling: A Constraint Satisfaction Approach. </title> <type> PhD thesis, </type> <institution> Eindhoven University of Technology, </institution> <month> December </month> <year> 1994. </year>
Reference-contexts: Tasks have to be assigned to resources and the execution moments of tasks have to be determined. In hard real-time systems, the assignment has to guarantee a timely execution. In general, the combined resource and start time assignment problem is intractable <ref> [4] </ref>. A decomposition results in easier subproblems. In this paper, we discuss a two stage decomposition: the resource assignment problem is resolved before the start time assignment problem. The resource assignment has to be such that a start time assignment can be found with a high probability.
Reference: [5] <author> R. Garey and D.S. Johnson. </author> <title> Computers and intractability: a guide to the theory of NP-completeness. </title> <publisher> Freeman, </publisher> <address> New York, </address> <year> 1979. </year>
Reference-contexts: The resource assignment problem can be formulated as follows. Given hardware graph H and execution graph E, find an extension of E with additional communication tasks and a feasible resource assignment res for the extended execution graph. A straightforward reduction from the bin packing problem <ref> [5] </ref> shows that the resource assignment problem is NP-hard. The algorithm presented in this paper gives a heuristic with polynomial time complexity. 3 Solution strategy An extension of the original execution graph and a feasible resource assignment for this extended execution graph is constructed in two stages.
Reference: [6] <author> E.H.L. Aarts and J.K. Lenstra. </author> <title> Local Search in Combinatorial Optimization. </title> <publisher> Wiley, </publisher> <year> 1997. </year>
Reference-contexts: A cost function f : S ! IR expresses the quality of each solution. Sometimes, finding an optimal solution is intractable. In these cases, local search may be used to find a good approximation of the optimal solution <ref> [6] </ref>. First, an initial solution is chosen from S. Then, only solutions that are in some way close to the current solution are evaluated. These solutions are called neighbors.
Reference: [7] <author> D.K. Hammer, E.J. Luit, O.S. v. Roosmalen, P.D.V. v.d. Stok, and J.P.C. Verhoosel. DEDOS: </author> <title> A distributed real-time environment. </title> <journal> IEEE Journal of Par. and Distr. Techn., </journal> <volume> 2(4), </volume> <year> 1994. </year>
Reference-contexts: Communication tasks that express the communication over the shared bus have to be added. Currently, the discussed solution strategy is being implemented in the context of the DEDOS environment <ref> [7] </ref>.
References-found: 7

