URL: http://www.eecs.umich.edu/UMichMP/Publications/Proposals/velocity.ps
Refering-URL: http://www.eecs.umich.edu/UMichMP/proposals.html
Root-URL: http://www.eecs.umich.edu
Email: velocity@eecs.umich.edu  
Phone: Phone: (313) 647-0301 FAX: (313) 763-4617  
Title: A Microarchitecture for High-Speed, Resource-Limited, Superscalar Microprocessors  
Author: Todd D. Basso Advisor: Richard B. Brown 
Degree: Ph.D. Thesis Proposal  
Address: 1301 Beal Avenue, Ann Arbor, Michigan 48019-2122  
Affiliation: Department of Electrical Engineering and Computer Science, The University of Michigan  
Date: October 30, 1997 1  
Abstract: In most modern CMOS microprocessor designs, clock frequencies and transistor counts continue to increase at steady rates, leading to greater levels of performance. However, in some applications these trends do not hold. For example, embedded microprocessors are constrained by cost while exotic technologies, which offer increased transistor switching speeds and other desirable characteristics, are constrained by process technology. The performance advantage of superscalar microprocessor architectures is well documented; applying these principles to the design of a resource-limited microprocessor could provide a performance improvement over a comparable scalar design. In the proposed project, I will construct a baseline architecture, and perform studies to evaluate the performance and design alternatives, for a high-speed, resource-limited superscalar microprocessor in complementary gallium arsenide (CGaAs). The microprocessor will serve as the processing element for a Multichip Module (MCM) implementation of the PowerPC architecture in 0.5mm CGaAs. The system is intended to offer high performance in applications where the power-delay product and radiation tolerance are essential. CGaAs offers high transistor switching speeds and radiation tolerance, but suffers from low integration levels. To implement a high-performance processor architecture, the CPU design must be distributed over several chips. This imposes additional inter-chip communication latency on various operations, most notably memory accesses. The superscalar architecture allows out-of-order execution, effectively circumventing the additional latency penalty of memory transfers. Modifications to the PowerPC Instruction Set Architecture (ISA) at the microarchi-tecture level permit an increased clock frequency, thus enabling higher performance levels. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Upton, M., et al., </author> <title> Resource Allocation in a High Clock Rate Microprocessor, </title> <booktitle> The 21st Annual International Symposium on Computer Architecture, </booktitle> <pages> pp. 98-109, </pages> <month> Oct. </month> <year> 1994. </year>
Reference-contexts: 1 Introduction A survey of single-chip microprocessors presented at The International Solid-State Circuits Conference (ISSCC) from 1984 through 1997 reveals continuing trends in the microelectronics industry. The clock frequency of microprocessors, see Fig. 1, is increasing at a rate of 40% per year <ref> [1] </ref>. In addition to the increased clock frequency, microprocessor designs are becoming more complex because of increased A Microarchitecture for High-Speed, Resource-Limited, Superscalar Microprocessors 2 transistor budgets, see Fig. 2.
Reference: [2] <author> Kogge, P. M. </author> <title> The Architecture of Pipelined Computers. </title> <address> New York: </address> <publisher> McGraw-Hill, </publisher> <year> 1981. </year>
Reference: [3] <author> Hennessy, J. and D. Patterson, </author> <title> Computer Architecture: A Quantitative Approach, </title> <publisher> Morgan Kaufmann, </publisher> <year> 1990. </year>
Reference: [4] <author> Johnson, M., </author> <title> Superscalar Microprocessor Design, </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1990. </year>
Reference-contexts: The additional amount of on-chip hardware resources permits the implementation of architectural features which can exploit more of the available instruction-level parallelism (ILP). Significant improvements began with the advent of pipelining [2,3], and superscalar architectures <ref> [4] </ref>, and continues with the proliferation of high-performance wide-issue superscalar microprocessors. <p> The average execution rate of most superscalar processors is greater than one IPC (and the peak execution rate is often much higher). Therefore, the fetch mechanism must be able to achieve a high instruction bandwidth. Almost half of all instruction runs consist of four instructions or less <ref> [4] </ref>, making the design of an efficient fetch mechanism difficult. The fetch bandwidth may be improved by increasing pri A Microarchitecture for High-Speed, Resource-Limited, Superscalar Microprocessors 9 mary instruction cache bandwidth and using advanced branch prediction techniques to eliminate bubbles in the dynamic fetch stream. <p> Sophisticated decoder hardware can align and merge instruction runs to improve the average instruction bandwidth <ref> [4] </ref>, however, in the FXU such features would be an inefficient use of valuable transistors. It is advantageous to have a number of instructions waiting for access to the decode unit while instruction cache misses and stream buffer requests are being serviced. <p> Instructions are issued from the RS to the functional unit in-order (although, across the entire machine instructions may be issued out-of-order). Allowing instructions to issue out-of-order at the reservation stations provides only a marginal increase in performance <ref> [4] </ref>. <p> ALU results are given lowest priority. 3.3.5 Reorder Buffer To support out-of-order execution, register renaming, and precise interrupts, the FXU implements a small reorder buffer. Out-of-order (ooo) execution is fundamental to superscalar performance, providing a speedup of as much as 2.5 over a scalar machine <ref> [4] </ref>. Simpler dependency resolution logic, such as score-boarding, can degrade performance by up to 20% compared to full register renaming [4]. Unlike modern superscalar microprocessors, which support a large instruction window, the look-ahead capability of the FXU is fairly small due to the limited decode width. <p> Out-of-order (ooo) execution is fundamental to superscalar performance, providing a speedup of as much as 2.5 over a scalar machine <ref> [4] </ref>. Simpler dependency resolution logic, such as score-boarding, can degrade performance by up to 20% compared to full register renaming [4]. Unlike modern superscalar microprocessors, which support a large instruction window, the look-ahead capability of the FXU is fairly small due to the limited decode width. Since the active window is relatively small, the reorder buffer may be correspondingly small. <p> To satisfy cycle time constraints, it is not necessary to compare the entire 32-bit effective addresses to detect conicts; instead a subset of the address may be compared. Johnson has shown that providing as few as 8-bits of address for dependency checking has little effect on overall performance <ref> [4] </ref>. In the LSU, ten bits of effective address, corresponding to the primary cache index, are compared. A further enhancement would be to forward store data to dependent loads, although this would require more complex hardware. Johnson [4] determined that a load/store mechanism must support load bypassing, while store forwarding is <p> as 8-bits of address for dependency checking has little effect on overall performance <ref> [4] </ref>. In the LSU, ten bits of effective address, corresponding to the primary cache index, are compared. A further enhancement would be to forward store data to dependent loads, although this would require more complex hardware. Johnson [4] determined that a load/store mechanism must support load bypassing, while store forwarding is far less critical to performance and may not be worth the additional hardware investment. A Microarchitecture for High-Speed, Resource-Limited, Superscalar Microprocessors 23 Cache misses may also hinder performance by blocking subsequent access to the data cache. <p> The fetch mechanism may incorrectly predict the outcome or the target of a branch, in which case a branch misprediction exception is generated. The writeback unit waits for instructions preceding a mispredicted branch to complete before signalling an exception. Johnson <ref> [4] </ref> showed that such a policy resulted in only a slight performance degradation, while simplifying the hardware. The branch history register is restored to the correct value and the address of the next instruction is sent to the fetch unit. <p> Domino logic will be evaluated as a means of increasing the clock frequency of CGaAs circuits. 6.1 Architectural Enhancements A trace-driven cycle-based PowerPC simulator has been developed based on an existing superscalar simulator <ref> [4] </ref>. Traces are dynamically generated for the SPEC95 integer benchmark suite using an existing instruction-level PowerPC simulator [57]. The proposed microarchitecture proves that a resource-limited superscalar microprocessor design is practical.
Reference: [5] <author> Upton, M., et al., </author> <title> A 160,000 Transistor GaAs Microprocessor, </title> <booktitle> International Solid-State Circuits Conference Digest of Technical Papers, </booktitle> <volume> vol. 36, </volume> <month> Feb. </month> <year> 1993, </year> <pages> pp. 92-93. </pages>
Reference: [6] <author> Jouppi, N., et al. </author> <title> A 300MHz 115W Bipolar ECL Microprocessor with On-Chip Caches, </title> <booktitle> ISSCC 1993, </booktitle> <pages> pp. 84-85. </pages>
Reference: [7] <author> Cohen, E., et al. </author> <title> A 533MHz BiCMOS Superscalar Microprocessor, </title> <booktitle> ISSCC 1997, </booktitle> <pages> pp. 164-165. </pages>
Reference: [8] <author> Brown, R. B., et al. </author> <title> GaAs RISC Processors, </title> <booktitle> GaAs IC Symposium, </booktitle> <pages> pp. 81-84, </pages> <month> Oct. </month> <year> 1992. </year>

References-found: 8

