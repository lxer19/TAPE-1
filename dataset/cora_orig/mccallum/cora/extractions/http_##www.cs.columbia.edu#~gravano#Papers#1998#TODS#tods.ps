URL: http://www.cs.columbia.edu/~gravano/Papers/1998/TODS/tods.ps
Refering-URL: http://www.cs.columbia.edu/~gravano/publications.html
Root-URL: http://www.cs.columbia.edu
Email: gravano@cs.columbia.edu  hector@cs.stanford.edu  Anthony.Tomasic@inria.fr  
Title: GlOSS: Text-Source Discovery over the Internet  
Author: Luis Gravano Hector Garca-Molina Anthony Tomasic 
Address: Stanford University  Rocquencourt  
Affiliation: Computer Science Department Columbia University  Computer Science Department  INRIA  
Abstract: The dramatic growth of the Internet has created a new problem for users: the location of relevant sources of documents. This article presents a framework for (and experimentally analyzes a solution to) this problem, which we call the text-source discovery problem. Our approach consists of two phases. First, each text source exports its contents to a centralized service. Then, users present queries to the service, which returns an ordered list of promising text sources. This article describes GlOSS Glossary of Servers Server -, with two versions: bGlOSS, which provides a Boolean query retrieval model, and vGlOSS, which provides a vector-space retrieval model. We also present hGlOSS, which provides a decentralized version of the system. We extensively describe the methodology for measuring the retrieval effectiveness of these systems and provide experimental evidence, based on actual data, that all three systems are highly effective at determining promising text sources for a given query.
Abstract-found: 1
Intro-found: 1
Reference: [BC92] <author> Daniel Barbara and Chris Clifton. </author> <title> Information Brokers: Sharing knowledge in a heterogeneous distributed system. </title> <type> Technical Report MITL-TR-31-92, </type> <institution> Matsushita Information Technology Laboratory, </institution> <month> October </month> <year> 1992. </year> <month> 29 </month>
Reference-contexts: The generator objects associated with the brokers are gathered by a "directory of servers," which is queried initially by the users to obtain a list of the brokers whose generator rules match the given query. See also [DANO91]. <ref> [BC92] </ref>, [OM92], and [SA89] are other examples of this type of approach in which users query "meta-information" databases. A "content-based routing" system is used in [SDW + 94] to address the resource-discovery problem.
Reference: [BDH + 94] <author> C. Mic Bowman, Peter B. Danzig, Darren R. Hardy, Udi Manber, and Michael F. Schwartz. Harvest: </author> <title> A scalable, customizable discovery and access system. </title> <type> Technical Report CU-CS-732-94, </type> <institution> Department of Computer Science, University of Colorado-Boulder, </institution> <month> August </month> <year> 1994. </year>
Reference-contexts: An inference network then uses this information to rank the databases for a given query. The Harvest system <ref> [BDH + 94] </ref> provides a flexible architecture for accessing information on the Internet. "Gatherers" collect information about the data sources, and pass it to "brokers." The "Harvest Server Registry" is a special broker that keeps information about all other brokers, among other things.
Reference: [CGMP96] <author> Chen-Chuan K. Chang, Hector Garca-Molina, and Andreas Paepcke. </author> <title> Boolean query mapping across heterogeneous information sources. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 8(4) </volume> <pages> 515-521, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: The user or some translation service must express the query using the particular syntax and operators used by a source. Similarly, the user may wish to combine and rank the results obtained at different sources. These are hard problems that are addressed in other papers <ref> [CGMP96, GCGMP97, GGM97] </ref>.
Reference: [Cha88] <author> Alice Y. Chamis. </author> <title> Selection of online databases using switching vocabularies. </title> <journal> Journal of the American Society for Information Science, </journal> <volume> 39(3), </volume> <year> 1988. </year>
Reference-contexts: When a query arrives in a site, it is forwarded through the most promising link according to these statistics. References [MDT93], [ZC92], and [MTD92] follow an expert-systems approach to solving the related problem of selecting online business databases. A complementary approach to GlOSS is taken by Chamis <ref> [Cha88] </ref>. Briefly, the approach this article takes is to expand a user query with thesaurus terms. The expanded query is compared with a set of databases, and the query terms with exact matches, thesauri matches, and "associative" matches are counted for each database.
Reference: [CLC95] <author> James P. Callan, Zhihong Lu, and W. Bruce Croft. </author> <title> Searching distributed collections with inference networks. </title> <booktitle> In Proceedings of the Eighteenth ACM International Conference on Research and Development in Information Retrieval (SIGIR'95), </booktitle> <month> July </month> <year> 1995. </year>
Reference-contexts: Each database is then ranked as a function of these counts. We believe that this approach is complementary in its emphasis on thesauri to expand the meaning of a user query. Reference <ref> [CLC95] </ref> has applied inference networks (from information retrieval) to the text-source discovery problem. Their approach summarizes databases using document-frequency information for each term (the same type of information that GlOSS keeps about 28 the databases), together with the "inverse collection frequency" of the different terms.
Reference: [DADA96] <author> Ron Dolin, Divyakant Agrawal, Laura Dillon, and Amr El Abbadi. Pharos: </author> <title> A scalable distributed architecture for locating heterogeneous information sources. </title> <type> Technical Report TRCS96-05, </type> <institution> Computer Science Department, University of California at Santa Barbara, </institution> <month> July </month> <year> 1996. </year>
Reference-contexts: For flexibility, Harvest leaves the broker specification open, and many alternative designs are possible. An interesting alternative approach is the Pharos system <ref> [DADA96] </ref>, which combines browsing and searching for resource discovery.
Reference: [DANO91] <author> Peter B. Danzig, Jongsuk Ahn, John Noll, and Katia Obraczka. </author> <title> Distributed indexing: a scalable mechanism for distributed information retrieval. </title> <booktitle> In Proceedings of the Fourteenth ACM International Conference on Research and Development in Information Retrieval (SIGIR'91), </booktitle> <month> October </month> <year> 1991. </year>
Reference-contexts: The generator objects associated with the brokers are gathered by a "directory of servers," which is queried initially by the users to obtain a list of the brokers whose generator rules match the given query. See also <ref> [DANO91] </ref>. [BC92], [OM92], and [SA89] are other examples of this type of approach in which users query "meta-information" databases. A "content-based routing" system is used in [SDW + 94] to address the resource-discovery problem.
Reference: [DLO92] <author> Peter B. Danzig, Shih-Hao Li, and Katia Obraczka. </author> <title> Distributed indexing of autonomous Internet services. </title> <journal> Computer Systems, </journal> <volume> 5(4), </volume> <year> 1992. </year>
Reference-contexts: Also, sites are organized into "specialization subgraphs." If one node of such a graph is reached during the search process, the search proceeds "non-randomly" in this subgraph, if it corresponds to a specialization relevant to the query being executed. See also [Sch93]. In Indie (shorthand for "Distributed Indexing") <ref> [DLO92] </ref>, information is indexed by "Indie brokers," each of which has associated, among other administrative data, a Boolean query (called a "generator rule"). Each broker indexes (not necessarily local) documents that satisfy its generator rule.
Reference: [DS94] <author> Andrzej Duda and Mark A. Sheldon. </author> <title> Content routing in a network of WAIS servers. </title> <booktitle> In Proceedings of the Fourteenth IEEE International Conference on Distributed Computing Systems, </booktitle> <month> June </month> <year> 1994. </year>
Reference-contexts: However, freeWAIS [FW + 93] automatically adds the most frequently occurring words in an information server to the associated description in the directory of servers. Another drawback is that in general, databases containing relevant documents might be missed if they are not chosen during the database-selection phase. <ref> [DS94] </ref> shows sample queries for which very few of the existing 27 relevant servers are found by querying the WAIS directory of servers (e.g., only 6 out of 223 relevant WAIS servers).
Reference: [FPV + 98] <author> James C. French, Allison L. Powell, Charles L. Viles, Travis Emmitt, and Kevin J. </author> <title> Prey. Evaluating database selection techniques: A testbed and experiment. </title> <booktitle> In Proceedings of the Twentyfirst ACM International Conference on Research and Development in Information Retrieval (SIGIR'98), </booktitle> <month> August </month> <year> 1998. </year>
Reference-contexts: Thus, the remaining ranks that we describe do not depend on end-user relevance judgments. The first rank, Rel All, simply orders the databases based on the number of relevant documents they contain for the given query. (See <ref> [FPV + 98] </ref> for an experimental evaluation of vGlOSS using this ideal rank.) By relevant we mean that the user who submits q will judge these documents to be of interest.
Reference: [FW + 93] <author> Jim Fullton, Archie Warnock, et al. </author> <note> Release notes for freeWAIS 0.2, </note> <month> October </month> <year> 1993. </year>
Reference-contexts: One disadvantage is that the master-database documents have to be written by hand to cover the relevant topics, and have to be manually kept up to date as the underlying database changes. However, freeWAIS <ref> [FW + 93] </ref> automatically adds the most frequently occurring words in an information server to the associated description in the directory of servers.
Reference: [FY93] <author> David W. Flater and Yelena Yesha. </author> <title> An information retrieval system for network resources. </title> <booktitle> In Proceedings of the International Workshop on Next Generation Information Technologies and Systems, </booktitle> <month> June </month> <year> 1993. </year>
Reference-contexts: The index server centroids may be passed to other index servers, and so on. A query that is presented to an index server is forwarded to the (index) servers whose centroids match the query. In <ref> [FY93] </ref>, every site keeps statistics about the type of information it receives along each link connecting to other sites. When a query arrives in a site, it is forwarded through the most promising link according to these statistics.
Reference: [GCGMP97] <author> Luis Gravano, Chen-Chuan K. Chang, Hector Garca-Molina, and Andreas Paepcke. </author> <title> STARTS: Stanford proposal for Internet meta-searching. </title> <booktitle> In Proceedings of the 1997 ACM International Conference on Management of Data (SIGMOD'97), </booktitle> <month> May </month> <year> 1997. </year> <month> 30 </month>
Reference-contexts: The user or some translation service must express the query using the particular syntax and operators used by a source. Similarly, the user may wish to combine and rank the results obtained at different sources. These are hard problems that are addressed in other papers <ref> [CGMP96, GCGMP97, GGM97] </ref>. <p> To obtain the f ifl and w ifl values for database db i , vGlOSS may have to periodically run a collector program that extracts this information from the local indexes and sends it to the vGlOSS server. An alternative architecture uses the STARTS protocol <ref> [GCGMP97] </ref> to export summaries from the source to the server. STARTS is an emerging protocol proposal for Internet searching coordinated by Stanford, and that involved over 10 companies and organizations. STARTS specifies that sources should export content summaries that closely resemble the vGlOSS summaries.
Reference: [GGM95a] <author> Luis Gravano and Hector Garca-Molina. </author> <title> Generalizing GlOSS for vector--space databases and broker hierarchies. </title> <booktitle> In Proceedings of the Twenty-first International Conference on Very Large Databases (VLDB'95), </booktitle> <pages> pages 78-89, </pages> <month> September </month> <year> 1995. </year>
Reference-contexts: Finally, in Section 5 we briefly survey related techniques, some of which could work in conjunction with GlOSS. 2 Choosing Vector-Space Databases In this section we present vGlOSS, a text-source discovery service that deals with vector-space databases and queries <ref> [GGM95a] </ref>. 2.1 Overview of the Vector-Space Retrieval Model Under the vector-space model, documents and queries are conceptually represented as vectors [Sal89].
Reference: [GGM95b] <author> Luis Gravano and Hector Garca-Molina. </author> <title> Generalizing GlOSS to vector-space databases and broker hierarchies. </title> <type> Technical Report STAN-CS-TN-95-21, </type> <institution> Computer Science Department, Stanford University, </institution> <month> May </month> <year> 1995. </year>
Reference-contexts: It also showed a problem with this definition, namely that the document similarities that contribute to a database's goodness may not be "globally valid," since they incorporate database-dependent idf factors. In this section we explore alternative ideal database ranks for a query. (Even other possibilities are discussed in <ref> [GGM95b] </ref>.) The first new ranks use the number of relevant documents for the query in each database. However, as we will discuss, we believe that ranks based on relevance are not appropriate for evaluating schemes like vGlOSS.
Reference: [GGM97] <author> Luis Gravano and Hector Garca-Molina. </author> <title> Merging ranks from heterogeneous Internet sources. </title> <booktitle> In Proceedings of the Twenty-third International Conference on Very Large Databases (VLDB'97), </booktitle> <month> August </month> <year> 1997. </year>
Reference-contexts: The user or some translation service must express the query using the particular syntax and operators used by a source. Similarly, the user may wish to combine and rank the results obtained at different sources. These are hard problems that are addressed in other papers <ref> [CGMP96, GCGMP97, GGM97] </ref>.
Reference: [GGMT93] <author> Luis Gravano, Hector Garca-Molina, and Anthony Tomasic. </author> <title> The efficacy of GlOSS for the text-database discovery problem. </title> <type> Technical Report STAN-CS-TN-93-002, </type> <institution> Computer Science Department, Stanford University, </institution> <month> November </month> <year> 1993. </year>
Reference-contexts: Using the data from obtain the index sizes shown in Figure 10 ("Index" row). The vocabulary for INSPEC 2 , including only indexes that appear in TRACE INSPEC queries, consists of 819; 437 words. If we dedicate four bytes to store each keyword <ref> [GGMT93] </ref>, around 4fi819; 437 bytes, or 3:13 MBytes are needed to store the INSPEC vocabulary. This statistic is shown in the "Vocabulary" row of Figure 10.
Reference: [GGMT94a] <author> Luis Gravano, Hector Garca-Molina, and Anthony Tomasic. </author> <title> The effectiveness of GlOSS for the text-database discovery problem. </title> <booktitle> In Proceedings of the 1994 ACM International Conference on Management of Data (SIGMOD'94), </booktitle> <month> May </month> <year> 1994. </year>
Reference-contexts: The metrics that we introduced in this section focus on the goodness of the databases, and do not examine if the same databases are present both in the ideal database ranks and 11 in the vGlOSS ranks. In <ref> [GGMT94a, GGMT94b] </ref> we use different metrics that focus on how well a Boolean version of GlOSS (Section 3) identifies the actual best databases for a query. 2.5 Evaluating vGlOSS In this section we evaluate different vGlOSS ranking algorithms experimentally. <p> Many other features are available with these systems, such as thesauri and regular expression matching. In this section, we present bGlOSS, a version of GlOSS for databases supporting the Boolean model of document retrieval. (bGlOSS is described in more detail in <ref> [GGMT94a, GGMT94b] </ref>.) Like vGlOSS, bGlOSS gives a hint of what databases might be useful for the user's query, based on word-frequency information for each database. Essentially, the Boolean model, as compared to the vector space model, impacts the statistics used by bGlOSS and the estimation functions used. <p> Furthermore, if database A did contain matching documents, then Ind would fail to conclude that database A is more promising than database B. 3.1 Ranking Databases Consider a Boolean "and" query q that we want to evaluate over a set of databases DB. (We consider other kinds of queries in <ref> [GGMT94a] </ref>.) bGlOSS ranks the databases in DB according to their estimated number of matches for q, and using an estimator. Different estimators are possible, and we studied several of them in [GGMT94a, GGMT94b]. In this article, we focus on the Ind (for "independence") estimator that we define below. <p> Different estimators are possible, and we studied several of them in <ref> [GGMT94a, GGMT94b] </ref>. In this article, we focus on the Ind (for "independence") estimator that we define below. <p> In the later case, we know for sure that no document in db i matches. (See <ref> [GGMT94a, GGMT94b] </ref> for a comparison of Ind against alternative estimators.) 3.2 Evaluating bGlOSS This section uses the metrics of Section 2.4 to demonstrate that bGlOSS can select relevant databases effectively from among a large set of candidates [TGL + 97]. <p> This partitioning scheme gave databases that ranged in size by an order of magnitude, and were at least somewhat differentiated by subject. Both properties are ones we would expect to see in a real distributed environment. (See <ref> [GGMT94a] </ref> for an evaluation of bGlOSS over a smaller number of independent, pre-existing collections.) For test queries, we used a trace of 8,392 real-user queries that were issued at Stanford University to the INSPEC database from 4/12 to 4/25 in 1993. (INSPEC is a database of Physics, Electrical Engineering, and Computer <p> Adding together all of the indexes, the number of entries in the INSPEC frequency information kept by bGlOSS decreases very fast as threshold increases: for threshold=1, for instance, 508; 978 entries, or 46:71% of the original number of entries, are eliminated. In <ref> [GGMT94a] </ref> we report experimental results that show that the performance of bGlOSS is only slightly sensitive to small increases of threshold.
Reference: [GGMT94b] <author> Luis Gravano, Hector Garca-Molina, and Anthony Tomasic. </author> <title> Precision and recall of GlOSS estimators for database discovery. </title> <booktitle> In Proceedings of the Third International Conference on Parallel and Distributed Information Systems (PDIS'94), </booktitle> <month> September </month> <year> 1994. </year>
Reference-contexts: The metrics that we introduced in this section focus on the goodness of the databases, and do not examine if the same databases are present both in the ideal database ranks and 11 in the vGlOSS ranks. In <ref> [GGMT94a, GGMT94b] </ref> we use different metrics that focus on how well a Boolean version of GlOSS (Section 3) identifies the actual best databases for a query. 2.5 Evaluating vGlOSS In this section we evaluate different vGlOSS ranking algorithms experimentally. <p> Many other features are available with these systems, such as thesauri and regular expression matching. In this section, we present bGlOSS, a version of GlOSS for databases supporting the Boolean model of document retrieval. (bGlOSS is described in more detail in <ref> [GGMT94a, GGMT94b] </ref>.) Like vGlOSS, bGlOSS gives a hint of what databases might be useful for the user's query, based on word-frequency information for each database. Essentially, the Boolean model, as compared to the vector space model, impacts the statistics used by bGlOSS and the estimation functions used. <p> Different estimators are possible, and we studied several of them in <ref> [GGMT94a, GGMT94b] </ref>. In this article, we focus on the Ind (for "independence") estimator that we define below. <p> In the later case, we know for sure that no document in db i matches. (See <ref> [GGMT94a, GGMT94b] </ref> for a comparison of Ind against alternative estimators.) 3.2 Evaluating bGlOSS This section uses the metrics of Section 2.4 to demonstrate that bGlOSS can select relevant databases effectively from among a large set of candidates [TGL + 97].
Reference: [KM91] <author> Brewster Kahle and Art Medlar. </author> <title> An information system for corporate users: Wide Area Information Servers. </title> <type> Technical Report TMC199, </type> <institution> Thinking Machines Corporation, </institution> <month> April </month> <year> 1991. </year>
Reference-contexts: A different approach is to keep a database of "meta-information" about the available databases and have users query this database to obtain the set of databases to search. For example, WAIS <ref> [KM91] </ref> provides a "directory of servers." This "master" database contains a set of documents, each describing (in English) the contents of a database on the network. The users first query the master database, and once they have identified potential databases, direct their query to these databases.
Reference: [MDT93] <author> Anne Morris, Hilary Drenth, and Gwyneth Tseng. </author> <title> The development of an expert system for online company database selection. </title> <journal> Expert Systems, </journal> <volume> 10(2) </volume> <pages> 47-60, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: In [FY93], every site keeps statistics about the type of information it receives along each link connecting to other sites. When a query arrives in a site, it is forwarded through the most promising link according to these statistics. References <ref> [MDT93] </ref>, [ZC92], and [MTD92] follow an expert-systems approach to solving the related problem of selecting online business databases. A complementary approach to GlOSS is taken by Chamis [Cha88]. Briefly, the approach this article takes is to expand a user query with thesaurus terms.
Reference: [MTD92] <author> Anne Morris, Gwyneth Tseng, and Hilary Drenth. </author> <title> Expert systems for online business database selection. </title> <type> Library Hi Tech, </type> <institution> 10(1-2):65-68, </institution> <year> 1992. </year>
Reference-contexts: In [FY93], every site keeps statistics about the type of information it receives along each link connecting to other sites. When a query arrives in a site, it is forwarded through the most promising link according to these statistics. References [MDT93], [ZC92], and <ref> [MTD92] </ref> follow an expert-systems approach to solving the related problem of selecting online business databases. A complementary approach to GlOSS is taken by Chamis [Cha88]. Briefly, the approach this article takes is to expand a user query with thesaurus terms.
Reference: [Neu92] <author> B. Clifford Neuman. </author> <title> The Prospero File System: A global file system based on the Virtual System model. </title> <journal> Computer Systems, </journal> <volume> 5(4), </volume> <year> 1992. </year>
Reference-contexts: Different systems follow different approaches to this: one such approach is to let users "browse" through information about the different resources. A typical example of this paradigm is Yahoo! (http://www.yahoo.com). As another example, the Prospero File System <ref> [Neu92] </ref> lets users organize information available in the Internet through the definition (and sharing) of customized views of the different objects and services available to them.
Reference: [ODL93] <author> Katia Obraczka, Peter B. Danzig, and Shih-Hao Li. </author> <title> Internet resource discovery services. </title> <booktitle> IEEE Computer, </booktitle> <month> September </month> <year> 1993. </year>
Reference-contexts: of the centralized GlOSS architecture. 5 Related Work Many solutions have been presented recently for the text-source discovery problem, or, more generally, for the resource-discovery problem: the text-source discovery problem is a subcase of the resource-discovery problem, since the latter generally deals with a larger variety of types of information <ref> [ODL93, SEKN92] </ref>. One solution to the text-source discovery problem is to let the database selection be driven by the user. Thus, the user will be aware of and an active participant in this selection process.
Reference: [OM92] <author> Joann J. Ordille and Barton P. Miller. </author> <title> Distributed active catalogs and meta-data caching in descriptive name services. </title> <type> Technical Report #1118, </type> <institution> University of Wisconsin-Madison, </institution> <month> November </month> <year> 1992. </year>
Reference-contexts: The generator objects associated with the brokers are gathered by a "directory of servers," which is queried initially by the users to obtain a list of the brokers whose generator rules match the given query. See also [DANO91]. [BC92], <ref> [OM92] </ref>, and [SA89] are other examples of this type of approach in which users query "meta-information" databases. A "content-based routing" system is used in [SDW + 94] to address the resource-discovery problem.
Reference: [SA89] <author> Patricia Simpson and Rafael Alonso. </author> <title> Querying a network of autonomous databases. </title> <type> Technical Report CS-TR-202-89, </type> <institution> Department of Computer Science, Princeton University, </institution> <month> January </month> <year> 1989. </year> <month> 31 </month>
Reference-contexts: The generator objects associated with the brokers are gathered by a "directory of servers," which is queried initially by the users to obtain a list of the brokers whose generator rules match the given query. See also [DANO91]. [BC92], [OM92], and <ref> [SA89] </ref> are other examples of this type of approach in which users query "meta-information" databases. A "content-based routing" system is used in [SDW + 94] to address the resource-discovery problem.
Reference: [Sal89] <author> Gerard Salton. </author> <title> Automatic Text Processing: The transformation, analysis, and retrieval of information by computer. </title> <publisher> Addison-Wesley, </publisher> <year> 1989. </year>
Reference-contexts: These are hard problems that are addressed in other papers [CGMP96, GCGMP97, GGM97]. In summary, the contributions of this paper are as follows: * We present a version of GlOSS (vGlOSS) that works with vector-space search engines <ref> [Sal89, SM83] </ref>. (These engines treat both the documents and the queries them selves as weight vectors.) * We describe a text-source discovery service for Boolean engines, bGlOSS. <p> some of which could work in conjunction with GlOSS. 2 Choosing Vector-Space Databases In this section we present vGlOSS, a text-source discovery service that deals with vector-space databases and queries [GGM95a]. 2.1 Overview of the Vector-Space Retrieval Model Under the vector-space model, documents and queries are conceptually represented as vectors <ref> [Sal89] </ref>. If m distinct words are available for content identification, a document d is represented as a normalized m-dimensional vector, D = hw 1 ; : : : ; w m i, where w j is the "weight" assigned to the j-th word t j . <p> The definitions of the vGlOSS ranks below reflect this fact. Also, note that the vectors with which vGlOSS represents each database can be viewed as cluster centroids <ref> [Sal89] </ref> used in information retrieval techniques. In these techniques, a cluster centroid is a vector that represents a collection of documents that are "near" each other according to some clustering algorithm. <p> n &gt; s 00 ), we compute g n (i n ) by just taking the s 0 (s 00 ) databases in G (I).) We then compute: R n = g n 1 otherwise This metric is thus related to the recall metric used in the information retrieval community <ref> [Sal89] </ref>: R n is a measure of how much of the available goodness in the n best databases (as determined by I) is accumulated in the first n databases in the vGlOSS rank G. <p> To keep our experiments simple, we chose the same weighting algorithms for the queries and the documents across all of the databases. We indexed the documents using the SMART ntc formula, which generates document weight vectors using the cosine-normalized tfidf product <ref> [Sal89] </ref>. We indexed the queries using the SMART nnn formula, which generates query weight vectors using the word frequencies in the queries. The similarity coefficient between a document vector and a query vector is computed by taking the inner product of the two vectors.
Reference: [Sch90] <author> Michael F. Schwartz. </author> <title> A scalable, non-hierarchical resource discovery mechanism based on probabilistic protocols. </title> <type> Technical Report CU-CS-474-90, </type> <institution> Department of Computer Science, University of Colorado at Boulder, </institution> <month> June </month> <year> 1990. </year>
Reference-contexts: Reference <ref> [Sch90] </ref> follows a probabilistic approach to the resource-discovery problem, and presents a resource-discovery protocol that consists of two phases: a dissemination phase, during which information about the contents of the databases is replicated at randomly chosen sites, and a search phase, where several randomly chosen sites are searched in parallel.
Reference: [Sch93] <author> Michael F. Schwartz. </author> <title> Internet resource discovery at the University of Col-orado. </title> <booktitle> IEEE Computer, </booktitle> <month> September </month> <year> 1993. </year>
Reference-contexts: Also, sites are organized into "specialization subgraphs." If one node of such a graph is reached during the search process, the search proceeds "non-randomly" in this subgraph, if it corresponds to a specialization relevant to the query being executed. See also <ref> [Sch93] </ref>. In Indie (shorthand for "Distributed Indexing") [DLO92], information is indexed by "Indie brokers," each of which has associated, among other administrative data, a Boolean query (called a "generator rule"). Each broker indexes (not necessarily local) documents that satisfy its generator rule.
Reference: [SDW + 94] <author> Mark A. Sheldon, Andrzej Duda, Ron Weiss, James W. O'Toole, and David K. Gifford. </author> <title> A content routing system for distributed information servers. </title> <booktitle> In Proceedings of the Fourth International Conference on Extending Database Technology, </booktitle> <year> 1994. </year>
Reference-contexts: See also [DANO91]. [BC92], [OM92], and [SA89] are other examples of this type of approach in which users query "meta-information" databases. A "content-based routing" system is used in <ref> [SDW + 94] </ref> to address the resource-discovery problem. The "content routing system" keeps a "content label" for each information server (or collection of objects, more generally), with attributes describing the contents of the collection.
Reference: [SE95] <author> Erik Selberg and Oren Etzioni. </author> <title> Multi-service search and comparison using the MetaCrawler. </title> <booktitle> In Proceedings of the Fourth International World-Wide Web Conference, </booktitle> <month> December </month> <year> 1995. </year>
Reference-contexts: A global search is managed by a meta-searcher that interacts with the individual source engines. One alternative for meta-searching is to send a user query to all engines, and collect the results (e.g., MetaCrawler <ref> [SE95] </ref>). The 1 user can then be directed to sites that have matching documents or to particular documents at those sites.
Reference: [SEKN92] <author> Michael F. Schwartz, Alan Emtage, Brewster Kahle, and B. Clifford Neuman. </author> <title> A comparison of Internet resource discovery approaches. </title> <journal> Computer Systems, </journal> <volume> 5(4), </volume> <year> 1992. </year>
Reference-contexts: of the centralized GlOSS architecture. 5 Related Work Many solutions have been presented recently for the text-source discovery problem, or, more generally, for the resource-discovery problem: the text-source discovery problem is a subcase of the resource-discovery problem, since the latter generally deals with a larger variety of types of information <ref> [ODL93, SEKN92] </ref>. One solution to the text-source discovery problem is to let the database selection be driven by the user. Thus, the user will be aware of and an active participant in this selection process.
Reference: [SFV83] <author> Gerard Salton, Edward A. Fox, and Ellen M. Voorhees. </author> <title> A comparison of two methods for Boolean query relevance feedback. </title> <type> Technical Report TR 83-564, </type> <institution> Computer Science Department, Cornell University, </institution> <month> July </month> <year> 1983. </year>
Reference-contexts: contains all of t 1 ; : : : ; t n is: f i1 fi : : : fi jdb i j So, according to Ind, the estimated number of documents in db i that will satisfy the query t 1 ^ : : : ^ t n is <ref> [SFV83] </ref>: Estimate Ind ( t 1 ^ : : : ^ t n ; db i ) = Q n jdb i j n1 (6) As our previous example illustrated, this estimate may be incorrect, unless one of the frequencies is zero.
Reference: [SM83] <author> Gerard Salton and Michael J. McGill. </author> <title> Introduction to modern information retrieval. </title> <publisher> McGraw-Hill, </publisher> <year> 1983. </year>
Reference-contexts: These are hard problems that are addressed in other papers [CGMP96, GCGMP97, GGM97]. In summary, the contributions of this paper are as follows: * We present a version of GlOSS (vGlOSS) that works with vector-space search engines <ref> [Sal89, SM83] </ref>. (These engines treat both the documents and the queries them selves as weight vectors.) * We describe a text-source discovery service for Boolean engines, bGlOSS. <p> This definition does not use the relevance of the documents to the end user who submitted the query. (The effectiveness of information retrieval searching is based on subjective relevance assessments <ref> [SM83] </ref>.) Using relevance would be appropriate for evaluating the search engines at each database; instead, we are evaluating how well vGlOSS can predict the answers that the databases return. In Section 2.6 we discuss our choice further, and analyze some of the possible alternatives that we could have used.
Reference: [TGL + 97] <author> Anthony Tomasic, Luis Gravano, Calvin Lue, Peter Schwarz, and Laura Haas. </author> <title> Data structures for efficient broker implementation. </title> <journal> ACM Transactions on Information Systems, </journal> <volume> 15(3), </volume> <month> July </month> <year> 1997. </year>
Reference-contexts: case, we know for sure that no document in db i matches. (See [GGMT94a, GGMT94b] for a comparison of Ind against alternative estimators.) 3.2 Evaluating bGlOSS This section uses the metrics of Section 2.4 to demonstrate that bGlOSS can select relevant databases effectively from among a large set of candidates <ref> [TGL + 97] </ref>. The key difference from the evaluation in Section 2.4 is that the goodness of a database db for a Boolean query q is simply the number of documents in db that match q. <p> This server keeps information on 40+ collections of computer science technical reports that are part of the NCSTRL project (http://www.ncstrl.org). The bGlOSS server is available on the WorldWide Web at http://gloss.stanford.edu. Acknowledgments Section 3.2 is joint work with Laura Haas, Calvin Lue, and Peter Schwarz at IBM Al-maden <ref> [TGL + 97] </ref>. We also thank Helena Galhardas for her useful comments on an earlier version of the paper.
Reference: [VGJL95] <author> Ellen M. Voorhees, Narendra K. Gupta, and Ben Johnson-Laird. </author> <title> The collection fusion problem. </title> <booktitle> In Proceedings of the Third Text Retrieval Conference (TREC-3), </booktitle> <month> March </month> <year> 1995. </year>
Reference-contexts: The problem of how to modify the locally computed similarities to compensate for collection-dependent factors in their computation has received attention recently in the context of the collection-fusion problem <ref> [VGJL95] </ref>. In general, determining what scaling factor to use to define the Local (l) ideal database rank is an interesting problem. If we incorporated scaling into the Goodness definition, we should modify vGlOSS's ranks to imitate this scaling.
Reference: [YGM95] <author> Tak W. Yan and Hector Garca-Molina. </author> <title> SIFT-a tool for wide-area information dissemination. </title> <booktitle> In Proceedings of the 1995 USENIX Technical Conference, </booktitle> <pages> pages 177-86, </pages> <month> January </month> <year> 1995. </year>
Reference-contexts: The queries that we used were profiles that real users submitted to the SIFT Netnews server developed at Stanford <ref> [YGM95] </ref>. Users send profiles in the form of Boolean or vector-space queries to the SIFT server, which in turn filters Netnews articles every day and sends the articles matching the profiles to the corresponding users. We used the 6,800 vector-space profiles that were active on the server in December 1994.
Reference: [ZC92] <author> Sajjad Zahir and Chew Lik Chang. Online-Expert: </author> <title> An expert system for online database selection. </title> <journal> Journal of the American Society for Information Science, </journal> <volume> 43(5) </volume> <pages> 340-357, </pages> <month> June </month> <year> 1992. </year> <month> 32 </month>
Reference-contexts: In [FY93], every site keeps statistics about the type of information it receives along each link connecting to other sites. When a query arrives in a site, it is forwarded through the most promising link according to these statistics. References [MDT93], <ref> [ZC92] </ref>, and [MTD92] follow an expert-systems approach to solving the related problem of selecting online business databases. A complementary approach to GlOSS is taken by Chamis [Cha88]. Briefly, the approach this article takes is to expand a user query with thesaurus terms.
References-found: 38

