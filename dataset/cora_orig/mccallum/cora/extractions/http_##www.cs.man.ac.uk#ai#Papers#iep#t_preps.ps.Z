URL: http://www.cs.man.ac.uk/ai/Papers/iep/t_preps.ps.Z
Refering-URL: http://www.cs.man.ac.uk/logs/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: Email: ipratt@cs.man.ac.uk  
Phone: Telephone: (+44) 161 275 6223 Fax: (+44) 161 275 6236  
Title: The semantics of temporal prepositions and related adverbials in English  
Author: Ian Pratt 
Note: Draft: comments welcome  
Address: Manchester M13 9PL  
Affiliation: Department of Computer Science University of Manchester  
Abstract: In this paper, we present an account of the semantics of the English temporal prepositions and some related temporal adverbials. This account aims to describe how these expressions function in English sentences, and in particular how they contribute to the truth-conditions of the sentences in which they occur. Our account will be couched at a sufficiently formal level to enable us to define a procedure for assessing the validity of a range of arguments couched in everyday temporal English. We develop a temporal representation language, TL, into which English sentences involving temporal prepositions can be naturally translated. Our goal is to tailor the representation language so as to fit as closely as possible the expressive resources provided by temporal constructions in English. In particular, we show how many restrictions on use of multiple preposition phrases are explained naturally by the semantics we give for these phrases, and the structure of the formal language we translate them into. This close match, we claim, justifies a program of work in which TL will be extended so as to permit a more refined and comprehensive account of the semantics of English temporal expressions than has been undertaken so far. fl The author wishes to thank David Bree for many valuable discussions before this paper was written and many valuable comments afterwards. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Allen, James F.: </author> <title> Towards a general theory of action and time. </title> <booktitle> Artificial Intelligence 23, </booktitle> <year> 1984, </year> <pages> pp. 123-154. </pages>
Reference-contexts: But this term will be used only informally: officially, event-atoms just receive truth-values at intervals. Now consider the sentences: (59) Gunner visited Ridley every Monday. 14 Quantifying over intervals in the predicate calculus is an established way of representing of temporal knowledge (e.g. Allen <ref> [1] </ref>). 13 (60) Gunner visited Ridley on Monday. Sentence (59) states that, for every Monday in the interval of interest, sometime within that Monday, Gunner visits Ridley. <p> A discussion of these dynamics, however, is more general than the subject of temporal adverbials, and would take us beyond the scope of the present paper. For a classic (if rather general) discussion of these issues, see Lewis [19] . 20 For example, in Allen <ref> [1] </ref>. 16 (82) * Ridley worked in his laboratory in 4 hours. An explanation of why this test works will be given in section 4. It is common in semantics to ditinguish more than just two aspectual classes of tenseless sentence. <p> An alternative scheme, proposed by Allen <ref> [1] </ref>, takes states to hold at all sub-intervals of any interval at which they hold.
Reference: [2] <author> Allen, James F and P.J. Hayes: </author> <title> Moments and points in an interval-based temporal logic, </title> <booktitle> Computational Intelligence 5, </booktitle> <year> 1989, </year> <pages> pp. 225-238. </pages>
Reference-contexts: In the remaining sections, we show how (syntactically analysed) English sentences can be mapped to formulae of our temporal logic. 5 See, for example, Herweg [13], Allen and Hayes <ref> [2] </ref>, Verkuyl [33] and Krifka [15]. 6 For example, Fantechi et al. [11] address the problem of automatically generating computer code from natural language specification; and Crouch and Pullman [8] describe a natural language front-end for a planning program. 7 For a useful survey of systems of temporal logic, see Gabbay <p> We propose the following interpretation rules for every and at: (130) every 7! <ref> [2; X; O] </ref> where O 2 f; *; *!; *g. (131) at 7! [*; X; O] where O 2 f; *; *!; *g. <p> These rules map the sentence-structures (128) and (129) to the following lists of operator tuples (using the obvious substitutions for O): (132) <ref> [2; hMondayi; ] </ref>; [; hGunner visit Ridleyi]; (133) [*; hMondayi; ]; [; hGunner visit Ridleyi]; 24 whence the procedure (125) generates the truth-conditions: (134) 2 (hMondayi; (hGunner visit Ridleyi)) (135) *(hMondayi; (hGunner visit Ridleyi)). <p> These truth-conditions can be generated via the process used for sentence (117), by means of the interpretation rule: (143) until 7! <ref> [*!; X; 2] </ref> and by mapping the state-reporting tenseless sentence as follows: (144) hRidley work in his laboratoryi 7! [2; point; hRidley work in his laboratoryi]. Notice the difference from the corresponding mapping in (123). <p> These truth-conditions can be generated via the process used for sentence (117), by means of the interpretation rule: (143) until 7! [*!; X; 2] and by mapping the state-reporting tenseless sentence as follows: (144) hRidley work in his laboratoryi 7! <ref> [2; point; hRidley work in his laboratoryi] </ref>. Notice the difference from the corresponding mapping in (123). This difference is motivated by the aspectual classes of the tenseless sentences in question: Gunner shoot Ridley reports an event, whilst Ridley work in his laboratory reports a state. <p> Notice the difference from the corresponding mapping in (123). This difference is motivated by the aspectual classes of the tenseless sentences in question: Gunner shoot Ridley reports an event, whilst Ridley work in his laboratory reports a state. Mapping the components of (141) thus results in the tuples: (145) <ref> [*!; h5 o'clocki; 2] </ref>; [2; point; hRidley work in his laboratoryi]. which combine in the normal way to produce the formula in (142). State-reporting tenseless sentences should not always be mapped to operator-tuples beginning with 2. <p> This difference is motivated by the aspectual classes of the tenseless sentences in question: Gunner shoot Ridley reports an event, whilst Ridley work in his laboratory reports a state. Mapping the components of (141) thus results in the tuples: (145) [*!; h5 o'clocki; 2]; <ref> [2; point; hRidley work in his laboratoryi] </ref>. which combine in the normal way to produce the formula in (142). State-reporting tenseless sentences should not always be mapped to operator-tuples beginning with 2. <p> Thus, the rules we adopt for mapping tenseless sentences are: (149) X 7! [; X] where X is an event-reporting tenseless sentence. (150) X 7! [; point; X] where X is a state-reporting tenseless sentence. (151) X 7! <ref> [2; point; X] </ref> where X is a state-reporting tenseless sentence. In other words: state-reporting tenseless sentences can take either or 2 operators, but event-reporting tenseless sentences can take only -operators. <p> In other words: state-reporting tenseless sentences can take either or 2 operators, but event-reporting tenseless sentences can take only -operators. Notice that this decision prevents processing of the sentence: (152) * Ridley died until 6 o'clock since the operator-tuples generated, namely: (153) <ref> [*!; h6 o'clocki; 2] </ref>; [; hRidley diei], cannot be made to match up. (Remember the constraint that the last operator of the first tuple must be the same as the first operator of the second tuple.) 27 . <p> Compare the sentences: (184) Ridley worked in his laboratory every day for eight hours (185) Ridley worked in his laboratory every day for eight months which yield the lists of operator tuples (186) <ref> [; h8 hoursi; 2] </ref>; [2; hdayi; ]; [; point; hRidley work in his laboratoryi] (187) [; h8 monthsi; 2]; [2; hdayi; ]; [2; point; hRidley work in his laboratoryi]. <p> Compare the sentences: (184) Ridley worked in his laboratory every day for eight hours (185) Ridley worked in his laboratory every day for eight months which yield the lists of operator tuples (186) [; h8 hoursi; 2]; <ref> [2; hdayi; ] </ref>; [; point; hRidley work in his laboratoryi] (187) [; h8 monthsi; 2]; [2; hdayi; ]; [2; point; hRidley work in his laboratoryi]. <p> Compare the sentences: (184) Ridley worked in his laboratory every day for eight hours (185) Ridley worked in his laboratory every day for eight months which yield the lists of operator tuples (186) [; h8 hoursi; 2]; [2; hdayi; ]; [; point; hRidley work in his laboratoryi] (187) <ref> [; h8 monthsi; 2] </ref>; [2; hdayi; ]; [2; point; hRidley work in his laboratoryi]. <p> sentences: (184) Ridley worked in his laboratory every day for eight hours (185) Ridley worked in his laboratory every day for eight months which yield the lists of operator tuples (186) [; h8 hoursi; 2]; <ref> [2; hdayi; ] </ref>; [; point; hRidley work in his laboratoryi] (187) [; h8 monthsi; 2]; [2; hdayi; ]; [2; point; hRidley work in his laboratoryi]. <p> worked in his laboratory every day for eight hours (185) Ridley worked in his laboratory every day for eight months which yield the lists of operator tuples (186) [; h8 hoursi; 2]; [2; hdayi; ]; [; point; hRidley work in his laboratoryi] (187) [; h8 monthsi; 2]; [2; hdayi; ]; <ref> [2; point; hRidley work in his laboratoryi] </ref>. <p> Thus, sentence (198) is successfully processed on our approach, which is incorrect. Sometimes, temporal adverbials are omitted if rendered obvious by other temporal adverbials. For example, the sentence (199) Gunner arrived at work by 7 a.m. for 3 months generates the following list of operator tuples: (200) <ref> [; h3 monthsi; 2] </ref>; [*!; h7 a.m.i; ]; [; Gunner arrive at worki]; which cannot combine in that order (the only calendrically sensible one) because of the clashing operators 2 and *!. <p> But sentence (199) is arguably elliptical for (201) Gunner arrived at work by 7 a.m. every working day for 3 months. Processing sentence (201) gives us the operator tuples: (202) <ref> [; h3 monthsi; 2] </ref>; [2; hworking dayi; ]; [*!; h7 a.m.i; ]; [; Gunner arrive at worki]; which, according to the procedure outlined above, re-assemble themselves into the correct truth-conditions: (203) (h3 monthsi; 2 (hworking dayi; *! (h7 a.m.i; (hGunner arrive at worki)))). as required. <p> But sentence (199) is arguably elliptical for (201) Gunner arrived at work by 7 a.m. every working day for 3 months. Processing sentence (201) gives us the operator tuples: (202) [; h3 monthsi; 2]; <ref> [2; hworking dayi; ] </ref>; [*!; h7 a.m.i; ]; [; Gunner arrive at worki]; which, according to the procedure outlined above, re-assemble themselves into the correct truth-conditions: (203) (h3 monthsi; 2 (hworking dayi; *! (h7 a.m.i; (hGunner arrive at worki)))). as required. <p> Consider, for example, the sentences: 31 (204) * Gunner visited Ridley one day until the 24th January (205) * Gunner visited Ridley one day for three months These sentences generate the following lists of tuples (ordered in the only sensible way): (206) <ref> [*!; h24th Januaryi; 2] </ref>; [; hdayi; ]; [; hGunner visit Ridleyi] (207) [; h3 monthsi; 2]; [; hdayi; ]; [; hGunner visit Ridleyi] Just as with (153), these lists of tuples refuse to combine because of non-matching operators. <p> sentences: 31 (204) * Gunner visited Ridley one day until the 24th January (205) * Gunner visited Ridley one day for three months These sentences generate the following lists of tuples (ordered in the only sensible way): (206) [*!; h24th Januaryi; 2]; [; hdayi; ]; [; hGunner visit Ridleyi] (207) <ref> [; h3 monthsi; 2] </ref>; [; hdayi; ]; [; hGunner visit Ridleyi] Just as with (153), these lists of tuples refuse to combine because of non-matching operators. <p> Otherwise, the process of transforming sentence-structures into formulae proceeds exactly as before. Thus, sentence-structure (217) produces the operator triples: (219) [*!; [hWednesdayi; h5 o'clocki]; 2]; <ref> [2; point; hRidley be working in his laboratoryi] </ref>. which combine in the normal way to produce truth-conditions (215). Notice that this account only covers those cases of left-embedding where (i) the embedded functors are all at, and (ii) there is no right-embedding within a left-embedded structure. <p> The lists of operator triples generated are: (258) [*; hRidley enter the drawing roomi + h0.083i; ]; [; hGunner fire the shotsi] (259) <ref> [*!; hRidley enter the drawing roomi + h0.083i; 2] </ref>; [2; point; hGunner waiti], which fuse in the normal way to give the formulae: (260) *(hRidley enter the drawing roomi + h0.083i; (hGunner fire the shotsi)) (261) *! (hRidley enter the drawing roomi + h0.083i; 2 (point; hGunner waiti)). <p> The lists of operator triples generated are: (258) [*; hRidley enter the drawing roomi + h0.083i; ]; [; hGunner fire the shotsi] (259) [*!; hRidley enter the drawing roomi + h0.083i; 2]; <ref> [2; point; hGunner waiti] </ref>, which fuse in the normal way to give the formulae: (260) *(hRidley enter the drawing roomi + h0.083i; (hGunner fire the shotsi)) (261) *! (hRidley enter the drawing roomi + h0.083i; 2 (point; hGunner waiti)). <p> been ignored, apart from one observation on the interaction between the perfective and for. 1. at 7! [*; X; O] where O is in f; 2; *; *!; *g 2. by 7! [*!; X; ] 3. during 7! [*; X; O] where O is in f; 2g 4. esince 7! <ref> [ *; X; 2] </ref> 5. every 7! [2; X; O] where O is in f; 2; *; *!; *g 6. for 7! [; X; 2] 7. for 7! [*!; tor + X; 2] (if verb in main clause non-perfective) 8. for 7! [ *; tor X; 2] (if verb in main <p> the interaction between the perfective and for. 1. at 7! [*; X; O] where O is in f; 2; *; *!; *g 2. by 7! [*!; X; ] 3. during 7! [*; X; O] where O is in f; 2g 4. esince 7! [ *; X; 2] 5. every 7! <ref> [2; X; O] </ref> where O is in f; 2; *; *!; *g 6. for 7! [; X; 2] 7. for 7! [*!; tor + X; 2] (if verb in main clause non-perfective) 8. for 7! [ *; tor X; 2] (if verb in main clause perfective) 9. in 7! [; X; <p> is in f; 2; *; *!; *g 2. by 7! [*!; X; ] 3. during 7! [*; X; O] where O is in f; 2g 4. esince 7! [ *; X; 2] 5. every 7! [2; X; O] where O is in f; 2; *; *!; *g 6. for 7! <ref> [; X; 2] </ref> 7. for 7! [*!; tor + X; 2] (if verb in main clause non-perfective) 8. for 7! [ *; tor X; 2] (if verb in main clause perfective) 9. in 7! [; X; ] 11. in 7! [*; tor + X; O] where O is in f; 2g <p> *g 2. by 7! [*!; X; ] 3. during 7! [*; X; O] where O is in f; 2g 4. esince 7! [ *; X; 2] 5. every 7! [2; X; O] where O is in f; 2; *; *!; *g 6. for 7! [; X; 2] 7. for 7! <ref> [*!; tor + X; 2] </ref> (if verb in main clause non-perfective) 8. for 7! [ *; tor X; 2] (if verb in main clause perfective) 9. in 7! [; X; ] 11. in 7! [*; tor + X; O] where O is in f; 2g 12. one 7! [; X; O] <p> O is in f; 2g 4. esince 7! [ *; X; 2] 5. every 7! [2; X; O] where O is in f; 2; *; *!; *g 6. for 7! [; X; 2] 7. for 7! [*!; tor + X; 2] (if verb in main clause non-perfective) 8. for 7! <ref> [ *; tor X; 2] </ref> (if verb in main clause perfective) 9. in 7! [; X; ] 11. in 7! [*; tor + X; O] where O is in f; 2g 12. one 7! [; X; O] where O is in f; 2; *; *!; *g 13. since 7! [ *; <p> in 7! [; X; ] 11. in 7! [*; tor + X; O] where O is in f; 2g 12. one 7! [; X; O] where O is in f; 2; *; *!; *g 13. since 7! [ *; X; O] where O is in f; 2g 14. throughout 7! <ref> [*; X; 2] </ref> 15. until 7! [*!; X; 2] Offset-prepositions generate left-embedded functors that yield temporal restrictions involving the +- and -operators. <p> in 7! [*; tor + X; O] where O is in f; 2g 12. one 7! [; X; O] where O is in f; 2; *; *!; *g 13. since 7! [ *; X; O] where O is in f; 2g 14. throughout 7! [*; X; 2] 15. until 7! <ref> [*!; X; 2] </ref> Offset-prepositions generate left-embedded functors that yield temporal restrictions involving the +- and -operators.
Reference: [3] <author> Alshawi, H. (ed.) </author> <title> The Core Language Engine, </title> <address> Cambridge, MA: </address> <publisher> MIT Press, </publisher> <year> 1992. </year>
Reference-contexts: we adopt a relatively formal approach; but we have done so in a way 1 See, for example, Parsons [25], Lascarides [17] and Mittwoch [23]. 2 See, for example, Dowty [10], Hinrichs [14], Lascarides and Asher [18] and ter Meulen [22]. 3 See, for example, Richards et al. [31], Alshawi <ref> [3] </ref>. 4 See, for example, Lakoff [16], Rice [30] and Quirk et al. [29]. 1 which, we believe, is more sensitive to the subtleties of English usage. <p> Thus, phrases such as three Mondays ago, two pages ago, occasionally crop up. This paper offers no account of these complications. 13 Such intermediate representations are quite standard in implemented systems of formal semantics for natural language. See, for example, Al shawi <ref> [3] </ref>. 12 3 A temporal representation language In this section, we introduce a formal language, TL, capable of expressing the truth-conditions of English sentences involving temporal prepositions and some related adverbials. In subsequent sections, we shall show how these truth-conditions can be automatically generated from the corresponding sentence structures.
Reference: [4] <author> Amsili, P. M. Borillo, L. Vieu (eds.) </author> <title> Time, Space and Motion: </title> <booktitle> proceedings of the fifth international workshop. </booktitle> <address> Toulouse, France, </address> <year> 1995. </year>
Reference: [5] <author> Bree, </author> <title> D.S. Words for Time in Macar, </title> <note> Pouthas and Friedman [20] </note>
Reference: [6] <editor> Bree, D.S., R.A. Smit and J.P. </editor> <title> van Werkhoven Translating Temporal Prepositions between Dutch and English, </title> <journal> Journal of Semantics 7 pp. </journal> <pages> 1-51. </pages>
Reference: [7] <author> Bree, D.S. Allel Feddag and Ian Pratt: </author> <title> A formalization of the semantics of temporal relations, </title> <publisher> (forthcoming). </publisher>
Reference: [8] <author> Crouch, </author> <title> R.S. and S.G. Pullman (1993) Time and modality in a natural language planning system, </title> <booktitle> Artificial Intelligence 63, </booktitle> <pages> pp. 265-304. </pages>
Reference-contexts: analysed) English sentences can be mapped to formulae of our temporal logic. 5 See, for example, Herweg [13], Allen and Hayes [2], Verkuyl [33] and Krifka [15]. 6 For example, Fantechi et al. [11] address the problem of automatically generating computer code from natural language specification; and Crouch and Pullman <ref> [8] </ref> describe a natural language front-end for a planning program. 7 For a useful survey of systems of temporal logic, see Gabbay et al. [12]. 2 2 Basic syntax Our aim in this section is to review the structure of temporal preposition-phrases in English, and to establish a compact way of
Reference: [9] <author> Davidson, </author> <title> Donald The Individuation of Events in Essays on Actions and Events, </title> <publisher> Oxford: Clarendon Press, </publisher> <year> 1980. </year>
Reference: [10] <author> Dowty, David, R. </author> <title> The effects of Aspectual Class on the Temporal Structure of Discourse: Semantics or Pragmatics?, </title> <journal> Linguistics and Philosophy, </journal> <volume> 9(1), </volume> <year> 1989, </year> <pages> pp. 37-61. </pages>
Reference-contexts: In this paper, we adopt a relatively formal approach; but we have done so in a way 1 See, for example, Parsons [25], Lascarides [17] and Mittwoch [23]. 2 See, for example, Dowty <ref> [10] </ref>, Hinrichs [14], Lascarides and Asher [18] and ter Meulen [22]. 3 See, for example, Richards et al. [31], Alshawi [3]. 4 See, for example, Lakoff [16], Rice [30] and Quirk et al. [29]. 1 which, we believe, is more sensitive to the subtleties of English usage.
Reference: [11] <author> Fantechi, A., S. Gnesi, G. Ristori, M. Carenini, M. Vanocchi and P. </author> <title> Moreschini Assisting requirement formalization by means of natural language translation Formal Methods in System Design 4, </title> <booktitle> 1994, </booktitle> <pages> pp. 243-263. </pages>
Reference-contexts: In the remaining sections, we show how (syntactically analysed) English sentences can be mapped to formulae of our temporal logic. 5 See, for example, Herweg [13], Allen and Hayes [2], Verkuyl [33] and Krifka [15]. 6 For example, Fantechi et al. <ref> [11] </ref> address the problem of automatically generating computer code from natural language specification; and Crouch and Pullman [8] describe a natural language front-end for a planning program. 7 For a useful survey of systems of temporal logic, see Gabbay et al. [12]. 2 2 Basic syntax Our aim in this section
Reference: [12] <author> Gabbay, Dov M., Ian Hodkinson and Mark Reynolds. </author> <title> Temporal Logic: </title> <journal> Mathematical Foundations and Computational Aspects vol. </journal> <volume> 1. </volume> <publisher> Oxford: Clarendon Press, </publisher> <year> 1994. </year>
Reference-contexts: and Krifka [15]. 6 For example, Fantechi et al. [11] address the problem of automatically generating computer code from natural language specification; and Crouch and Pullman [8] describe a natural language front-end for a planning program. 7 For a useful survey of systems of temporal logic, see Gabbay et al. <ref> [12] </ref>. 2 2 Basic syntax Our aim in this section is to review the structure of temporal preposition-phrases in English, and to establish a compact way of representing just those aspects of phrase-structure relevant to our semantic enterprise.
Reference: [13] <author> Herweg, </author> <title> Michael A Critical Examination of Two Classical Approaches to Aspect Journal of Semantics 8, </title> <booktitle> 1991, </booktitle> <pages> pp. 363-402. </pages>
Reference-contexts: We then present a temporal logic by means of which we can capture the truth-conditions of English sentences involving temporal prepositions. In the remaining sections, we show how (syntactically analysed) English sentences can be mapped to formulae of our temporal logic. 5 See, for example, Herweg <ref> [13] </ref>, Allen and Hayes [2], Verkuyl [33] and Krifka [15]. 6 For example, Fantechi et al. [11] address the problem of automatically generating computer code from natural language specification; and Crouch and Pullman [8] describe a natural language front-end for a planning program. 7 For a useful survey of systems of <p> Armed with these operators, we can assign truth-conditions to sentences (90) and (91) as follows: 22 Our approach to the state/event distinction follows that proposed by Herweg <ref> [13] </ref>, in taking states to hold at time points and events to occur over (non-instantaneous) time intervals. An alternative scheme, proposed by Allen [1], takes states to hold at all sub-intervals of any interval at which they hold.
Reference: [14] <author> Hinrichs, </author> <title> Erhard Temporal Anaphora in Discourses of English, </title> <journal> Linguistics and Philosophy, </journal> <volume> 9(1), </volume> <year> 1989, </year> <pages> pp. 63-82. </pages>
Reference-contexts: In this paper, we adopt a relatively formal approach; but we have done so in a way 1 See, for example, Parsons [25], Lascarides [17] and Mittwoch [23]. 2 See, for example, Dowty [10], Hinrichs <ref> [14] </ref>, Lascarides and Asher [18] and ter Meulen [22]. 3 See, for example, Richards et al. [31], Alshawi [3]. 4 See, for example, Lakoff [16], Rice [30] and Quirk et al. [29]. 1 which, we believe, is more sensitive to the subtleties of English usage.
Reference: [15] <author> Krifka, Manfred: </author> <title> Nominalreferenz und Zeitkonstitution. Zur Semantik von Massentermen, </title> <address> Munich: Fink, </address> <year> 1989. </year>
Reference-contexts: In the remaining sections, we show how (syntactically analysed) English sentences can be mapped to formulae of our temporal logic. 5 See, for example, Herweg [13], Allen and Hayes [2], Verkuyl [33] and Krifka <ref> [15] </ref>. 6 For example, Fantechi et al. [11] address the problem of automatically generating computer code from natural language specification; and Crouch and Pullman [8] describe a natural language front-end for a planning program. 7 For a useful survey of systems of temporal logic, see Gabbay et al. [12]. 2 2
Reference: [16] <author> Lakoff, G. Women, </author> <title> Fire and Dangerous Things, </title> <publisher> Chicago: Chicago University Press 1987. </publisher>
Reference-contexts: but we have done so in a way 1 See, for example, Parsons [25], Lascarides [17] and Mittwoch [23]. 2 See, for example, Dowty [10], Hinrichs [14], Lascarides and Asher [18] and ter Meulen [22]. 3 See, for example, Richards et al. [31], Alshawi [3]. 4 See, for example, Lakoff <ref> [16] </ref>, Rice [30] and Quirk et al. [29]. 1 which, we believe, is more sensitive to the subtleties of English usage. Our detailed semantic proposals are gathered together in the technical appendices to this paper, so as to permit relatively easy incorporation into existing natural language processing systems.
Reference: [17] <author> Lascarides, </author> <title> Alex The progressive and the imperfective paradox, </title> <type> Synthese 87(3), </type> <year> 1991, </year> <pages> pp. 401-448. </pages>
Reference-contexts: In this paper, we adopt a relatively formal approach; but we have done so in a way 1 See, for example, Parsons [25], Lascarides <ref> [17] </ref> and Mittwoch [23]. 2 See, for example, Dowty [10], Hinrichs [14], Lascarides and Asher [18] and ter Meulen [22]. 3 See, for example, Richards et al. [31], Alshawi [3]. 4 See, for example, Lakoff [16], Rice [30] and Quirk et al. [29]. 1 which, we believe, is more sensitive to <p> By assigning structures to the prepositions at, on and until as follows: (24) at ] x [w [y [at (x; y)]]] (26) until ] x [w [y [until (x; y)]]], 9 See, for example, Parsons [25], Lascarides <ref> [17] </ref> and Mittwoch [23]. 7 the rules (21)-(23) generate the sentence structure (18) from sentence (8), and generate sentence-structures (19) and (20) from sentence (13).
Reference: [18] <author> Lascarides, Alex and Nicholas Asher: </author> <title> Temporal intepretation, discourse relations and commonsense entailment, </title> <journal> Linguistics and Philosophy, </journal> <volume> 16, </volume> <year> 1993, </year> <pages> pp. 437-493. </pages>
Reference-contexts: In this paper, we adopt a relatively formal approach; but we have done so in a way 1 See, for example, Parsons [25], Lascarides [17] and Mittwoch [23]. 2 See, for example, Dowty [10], Hinrichs [14], Lascarides and Asher <ref> [18] </ref> and ter Meulen [22]. 3 See, for example, Richards et al. [31], Alshawi [3]. 4 See, for example, Lakoff [16], Rice [30] and Quirk et al. [29]. 1 which, we believe, is more sensitive to the subtleties of English usage.
Reference: [19] <author> Lewis, David: </author> <title> Scorekeeping in a Language Game, </title> <journal> in Journal of Philosphical Logic, </journal> <volume> 8, </volume> <year> 1979, </year> <pages> pp. 339-359. </pages>
Reference-contexts: A discussion of these dynamics, however, is more general than the subject of temporal adverbials, and would take us beyond the scope of the present paper. For a classic (if rather general) discussion of these issues, see Lewis <ref> [19] </ref> . 20 For example, in Allen [1]. 16 (82) * Ridley worked in his laboratory in 4 hours. An explanation of why this test works will be given in section 4. It is common in semantics to ditinguish more than just two aspectual classes of tenseless sentence.
Reference: [20] <author> Macar, F., V. Pouthas and W. J. </author> <title> Friedman Time, Action and Cognition: Towards Bridging the Gap, </title> <booktitle> NATO ASI Series D, </booktitle> <volume> vol. 66, </volume> <publisher> Dordrecht: Kluwer, </publisher> <year> 1992. </year>
Reference: [21] <author> May, </author> <title> Robert Logical Form: its Structure and Derivation, </title> <address> Cambridge, MA: </address> <publisher> MIT Press, </publisher> <year> 1985. </year> <title> [22] ter Meulen, Alice G.B. Representing Time in Natural Language, </title> <address> Cambridge, MA: </address> <publisher> MIT Press, </publisher> <year> 1995 </year>
Reference: [23] <author> Mittwoch, </author> <title> Anita Aspects of English aspect: on the interaction of perfect, progressive and durational phrases, </title> <journal> Linguistics and Philosophy, </journal> <volume> 11(2), </volume> <pages> 1988 pp. 203-254. 48 </pages>
Reference-contexts: In this paper, we adopt a relatively formal approach; but we have done so in a way 1 See, for example, Parsons [25], Lascarides [17] and Mittwoch <ref> [23] </ref>. 2 See, for example, Dowty [10], Hinrichs [14], Lascarides and Asher [18] and ter Meulen [22]. 3 See, for example, Richards et al. [31], Alshawi [3]. 4 See, for example, Lakoff [16], Rice [30] and Quirk et al. [29]. 1 which, we believe, is more sensitive to the subtleties of <p> By assigning structures to the prepositions at, on and until as follows: (24) at ] x [w [y [at (x; y)]]] (26) until ] x [w [y [until (x; y)]]], 9 See, for example, Parsons [25], Lascarides [17] and Mittwoch <ref> [23] </ref>. 7 the rules (21)-(23) generate the sentence structure (18) from sentence (8), and generate sentence-structures (19) and (20) from sentence (13).
Reference: [24] <author> Moens, Marc and Mark Steedman: </author> <title> Temporal Ontology and Temporal Reference Computational Linguistics 14(2), </title> <booktitle> 1988, </booktitle> <pages> pp. 15-28. </pages>
Reference-contexts: But we do not need to specify here how the requisite degree of strictness is set. All that matters here is that we can locate 21 See, e.g. Moens and Steedman <ref> [24] </ref> for a fuller discussion of aspectual class coercion. 17 the varying degrees of strictness in varying interpretations of the underlying temporal predicates, whilst maintaining a simple and uniform logic framework. 22 (iii) Free-floating temporal restrictions: Consider the sentence (86) Gunner broke the code within 10 minutes On one reading of <p> However, in order to avoid unnecessary complication, we will stick with the simpler formulation. 27 It is widely, though not universally, accepted that tenseless-sentences reporting events can be coerced into state-interpretations if a temporal adverbial such as for demands it (Moens and Steedman <ref> [24] </ref>). 26 The interpretation of functors with free-floating event-atoms proceeds in the same way.
Reference: [25] <author> Parsons, </author> <title> Terence The progressive in English, </title> <journal> Linguistics and Philosophy, </journal> <volume> 12(2), </volume> <year> 1989, </year> <pages> pp. 213-241. </pages>
Reference-contexts: In this paper, we adopt a relatively formal approach; but we have done so in a way 1 See, for example, Parsons <ref> [25] </ref>, Lascarides [17] and Mittwoch [23]. 2 See, for example, Dowty [10], Hinrichs [14], Lascarides and Asher [18] and ter Meulen [22]. 3 See, for example, Richards et al. [31], Alshawi [3]. 4 See, for example, Lakoff [16], Rice [30] and Quirk et al. [29]. 1 which, we believe, is more <p> By assigning structures to the prepositions at, on and until as follows: (24) at ] x [w [y [at (x; y)]]] (26) until ] x [w [y [until (x; y)]]], 9 See, for example, Parsons <ref> [25] </ref>, Lascarides [17] and Mittwoch [23]. 7 the rules (21)-(23) generate the sentence structure (18) from sentence (8), and generate sentence-structures (19) and (20) from sentence (13).
Reference: [26] <author> Parsons, </author> <title> Terence (1990) Events in the Semantics of English: A Study in Subatomic Semantics, </title> <publisher> MIT Press. </publisher>
Reference: [27] <author> Pratt, Ian and D.S. Bree: </author> <title> How to translate some English temporal constructions into temporal logic in Amsili et al. </title> <type> [4], </type> <year> 1995. </year>
Reference: [28] <author> Pratt, Ian and D.S. Bree: </author> <title> An approach to the semantics of some English temporal constructions in Proceedings of the Seventeenth Annual Conference of the Cognitive Science Society. </title> <address> Hillsdale, N.J. </address> <publisher> Lawrence Erlbaum, </publisher> <year> 1995, </year> <pages> pp. 118-123. </pages>
Reference: [29] <author> Quirk, Randolph, Sidney Greenbaum, Geoffrey Leech and Jan Svartvik: </author> <title> A Comprehensive Grammar of the English Language, </title> <publisher> London: Longman, </publisher> <year> 1985. </year>
Reference-contexts: way 1 See, for example, Parsons [25], Lascarides [17] and Mittwoch [23]. 2 See, for example, Dowty [10], Hinrichs [14], Lascarides and Asher [18] and ter Meulen [22]. 3 See, for example, Richards et al. [31], Alshawi [3]. 4 See, for example, Lakoff [16], Rice [30] and Quirk et al. <ref> [29] </ref>. 1 which, we believe, is more sensitive to the subtleties of English usage. Our detailed semantic proposals are gathered together in the technical appendices to this paper, so as to permit relatively easy incorporation into existing natural language processing systems.
Reference: [30] <author> Rice, Sally, </author> <title> A: Polysemy and Lexical Representation: the case of three English Prepositions, </title> <booktitle> Proceedings of the fourteenth annual conference of the cognitive science society, </booktitle> <address> Hillsdale, NJ: </address> <publisher> Lawrence Earlbaum, </publisher> <year> 1992. </year>
Reference-contexts: have done so in a way 1 See, for example, Parsons [25], Lascarides [17] and Mittwoch [23]. 2 See, for example, Dowty [10], Hinrichs [14], Lascarides and Asher [18] and ter Meulen [22]. 3 See, for example, Richards et al. [31], Alshawi [3]. 4 See, for example, Lakoff [16], Rice <ref> [30] </ref> and Quirk et al. [29]. 1 which, we believe, is more sensitive to the subtleties of English usage. Our detailed semantic proposals are gathered together in the technical appendices to this paper, so as to permit relatively easy incorporation into existing natural language processing systems.
Reference: [31] <author> Richards, Barry, Inge Bethke, </author> <title> Jaap van der Does and John Oberlander Temporal representation and inference, </title> <publisher> London: Academic Press, </publisher> <year> 1989. </year> <title> [32] van Riemsdijk, H.: A Case Study in Syntactic Markedness: the Binding Nature of Prepositional Phrases, </title> <publisher> Dor-drecht: Foris, </publisher> <year> 1978. </year>
Reference-contexts: this paper, we adopt a relatively formal approach; but we have done so in a way 1 See, for example, Parsons [25], Lascarides [17] and Mittwoch [23]. 2 See, for example, Dowty [10], Hinrichs [14], Lascarides and Asher [18] and ter Meulen [22]. 3 See, for example, Richards et al. <ref> [31] </ref>, Alshawi [3]. 4 See, for example, Lakoff [16], Rice [30] and Quirk et al. [29]. 1 which, we believe, is more sensitive to the subtleties of English usage.
Reference: [33] <author> Verkuyl, Henk: </author> <title> A Theory of Aspectuality: the Interaction between Temporal and Atemporal Structure, </title> <booktitle> Cambridge Studies in Linguistics, </booktitle> <volume> vol. </volume> <pages> 64, </pages> <address> Cambridge: </address> <publisher> Cambridge University Press, </publisher> <year> 1993. </year>
Reference-contexts: In the remaining sections, we show how (syntactically analysed) English sentences can be mapped to formulae of our temporal logic. 5 See, for example, Herweg [13], Allen and Hayes [2], Verkuyl <ref> [33] </ref> and Krifka [15]. 6 For example, Fantechi et al. [11] address the problem of automatically generating computer code from natural language specification; and Crouch and Pullman [8] describe a natural language front-end for a planning program. 7 For a useful survey of systems of temporal logic, see Gabbay et al.
Reference: [34] <institution> Vendler, Zeno Linguistics and Philosophy, Ithaca: Cornell University Press, </institution> <year> 1967 </year> <month> 49 </month>
References-found: 32

