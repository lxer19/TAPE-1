URL: ftp://ftp.cs.umd.edu/pub/papers/papers/3746/3746.ps.Z
Refering-URL: http://www.cs.umd.edu/TRs/TR.html
Root-URL: 
Email: Email: fcandan,hwang,prabha,vsg@cs.umd.edu.  
Title: Resource Lock Commit Protocol (RLCP) for Multimedia Object Retrieval  
Author: K. Sel~cuk Candan, Eenjun Hwang, B. Prabhakaran, and V.S. Subrahmanian 
Keyword: Multimedia object retrieval, multimedia presentation, resource reservation, QoS negotiation.  
Note: This research was supported by the Army Research Office under grants DAAH-04-95-10174 and DAAH-04-96-10297,, by the Air Force Office of Scientific Research under grant F49620-93-1-0065, by ARPA/Rome Labs contract Nr. F30602-93-C-0241 (Order Nr. A716), NSF Young Investigator award IRI-93-57756, and the Army Research Laboratory under Cooperative Agreement DAAL01-96-2-0002 Federated Laboratory ATIRP Consortium.  
Address: College Park, Maryland 20742.  
Affiliation: Department of Computer Science, Institute for Advanced Computer Studies Institute for Systems Research, University of Maryland,  
Abstract: Many multimedia presentation applications involve retrieval of objects from more than one collaborating server. Presentations of objects from different collaborating servers might be interdependent. For instance, we can consider distributed video servers where blocks of movies are distributed over a set of servers. Here, blocks of a movie from different video servers have to be retrieved and presented continuously without any gaps in the presentation. Such applications first need an estimate of the available network resources to each of the collaborating server in order to identify a schedule for retrieving the objects composing the presentation. A collaborating server can suggest modifications of the retrieval schedule depending on its load. These modifications can potentially affect the retrieval schedule for other collaborating applications. Hence, a sequence of negotiations have to be carried out with the collaborating servers in order to commit for a retrieval schedule of the objects composing the multimedia presentation. In this paper, we propose an application sub-layer protocol, Resource Lock Commit Protocol (RLCP), for handling the negotiation and commitment of the resources required for a collaborative multimedia presentation application. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. </author> <title> Ferrari (1990) Client Requirements For Real-Time Communication Services, </title> <journal> IEEE Communication Magazine, </journal> <volume> Vol. 28, No. 11, Nov. '90, </volume> <pages> pp. 65-72. </pages>
Reference-contexts: Figure 12 shows acceptance of the request for modification of the requested resources. Hence, S can finalize the retrieval schedule as the desired one. 7 Comparison With Existing Protocols Handling of negotiation of required resources for multimedia applications have mostly been dealt at the transport protocol level <ref> [1] </ref>. Requirements at the application level makes resource negotiation a more complex task.
Reference: [2] <author> T.D.C. Little and A. </author> <title> Ghafoor (1991) Multimedia Synchronization Protocols for Broadband Integrated services, </title> <journal> IEEE J. on Selected Areas of Communications, </journal> <volume> vol. 9, no. 9, </volume> <month> Dec. </month> <year> 1991, </year> <pages> pp. 1368-1382. </pages>
Reference-contexts: This retrieval schedule identifies : (i) the collaborating server from which each object is to be retrieved, and (ii) the time at which each object is to be retrieved. Algorithms for generating retrieval schedules for different multimedia presentation applications are discussed in <ref> [2, 8, 7, 12] </ref>. These algorithms can be appropriately incorporated in the RLCP for computing retrieval schedules based on the available network resources. The initiating RLCP then issues an object retrieval request to the collaborating server (event 7, in Figure 4). <p> Here, an application can initiate a multimedia presentation using R InitiatePresentation request. RLCP uses one of the retrieval schedule generation algorithms discussed in <ref> [2, 8, 7, 12] </ref>, in order to identify the object retrieval times and the collaborating servers from which objects are to be retrieved. If the start of the presentation has to be delayed or if the presentation cannot be initiated, RLCP responds with R DelayStart or R RejectPresentation. <p> Requirements at the application level makes resource negotiation a more complex task. Few protocols have been suggested for handling resource negotiation and object retrievals in distributed multimedia applications : * Application and Network Synchronization Protocol (ASP and NSP) <ref> [2] </ref>. * Multimedia Application Protocol (MMAP) [11]. 14 * Negotiation and Resource Reservation Protocol (NRP) [13]. Application and Network Synchronization Protocol : In [2], a set of protocols one at application service level (Application Synchronization Protocol (ASP))and another at the network service level (Network Synchronization Protocol (NSP)) have been proposed for <p> Few protocols have been suggested for handling resource negotiation and object retrievals in distributed multimedia applications : * Application and Network Synchronization Protocol (ASP and NSP) <ref> [2] </ref>. * Multimedia Application Protocol (MMAP) [11]. 14 * Negotiation and Resource Reservation Protocol (NRP) [13]. Application and Network Synchronization Protocol : In [2], a set of protocols one at application service level (Application Synchronization Protocol (ASP))and another at the network service level (Network Synchronization Protocol (NSP)) have been proposed for providing synchronization of objects as a network service.
Reference: [3] <author> L. Zhang, S. Deering, D. Estrin, S. Shenker, D. Zappala, "RSVP: </author> <title> A New Resource ReSerVation Protocol", </title> <journal> IEEE Network, </journal> <month> September </month> <year> 1993, </year> <month> pp.8-18. </month>
Reference: [4] <author> D. Ferrari, et al, </author> <title> "Network Support for Multimedia : A Discussion of Tenet Approach", Computer Networks and ISDN Systems, </title> <journal> Special issue on Multimedia Networking, </journal> <year> 1994. </year>
Reference-contexts: If the schedule is accepted by all the collaborating servers, RLCP finalizes the schedule. Otherwise, it executes a sequence of resource modification phase till the retrieval schedule can be finalized. RLCP can use services offered by any network protocol supporting advance reservation capabilities such as Tenet suite of protocols <ref> [4] </ref> or ST2+ [10].
Reference: [5] <author> K. Nahrstedt and Ralf Steinmetz, </author> <title> "Resource Management in Networked Multimedia Systems", </title> <journal> IEEE Computer, </journal> <volume> Vol. 28, No. 4, </volume> <month> April </month> <year> 1995. </year> <month> 16 </month>
Reference: [6] <author> S.V. Raghavan, B. Prabhakaran and Satish K. </author> <title> Tripathi "Synchronization Representation and Traffic Source Modeling in Orchestrated Presentation", </title> <journal> IEEE Journal on Selected Areas in Communication, special issue on Multimedia Synchronization, </journal> <volume> Vol. 14, No. 1, </volume> <month> January </month> <year> 1996. </year>
Reference: [7] <author> K. S. Candan, B. Prabhakaran, and V. S. Subrahmanian, </author> <title> "CHIMP : A Framework for Supporting Multimedia Document Authoring and Presentation", </title> <booktitle> Proceedings of ACM Multimedia '96 Conference, </booktitle> <address> Boston, </address> <month> November </month> <year> 1996. </year>
Reference-contexts: 1 Introduction Multimedia presentation applications might involve retrieval of objects from more than one collaborating server. As an example, one can consider a distributed multimedia document presentation where objects composing the document are distributed on more than one server <ref> [7] </ref>. We can also consider a distributed video presentation where blocks of movies are distributed on more than one video server [12]. In such applications, presentation of objects from different servers can be inter-dependent. <p> This retrieval schedule identifies : (i) the collaborating server from which each object is to be retrieved, and (ii) the time at which each object is to be retrieved. Algorithms for generating retrieval schedules for different multimedia presentation applications are discussed in <ref> [2, 8, 7, 12] </ref>. These algorithms can be appropriately incorporated in the RLCP for computing retrieval schedules based on the available network resources. The initiating RLCP then issues an object retrieval request to the collaborating server (event 7, in Figure 4). <p> If any of the collaborating servers modify the resource request (by rejecting or by suggesting changes according to the available resources), then RLCP might have to modify the requested resources to some or all of the collaborating servers. This modification is decided using retrieval scheduling algorithms <ref> [7] </ref>. As discussed earlier, the modification can be one of the following. * Request another collaborating server, if object (s) is (are) replicated. <p> It also depends on the type of retrieval scheduling algorithms used. Appendix I carries a brief discussion on identifying the number of iterations for finalizing the retrieval schedule of an example multimedia presentation using algorithms discussed in <ref> [7] </ref>. <p> Here, an application can initiate a multimedia presentation using R InitiatePresentation request. RLCP uses one of the retrieval schedule generation algorithms discussed in <ref> [2, 8, 7, 12] </ref>, in order to identify the object retrieval times and the collaborating servers from which objects are to be retrieved. If the start of the presentation has to be delayed or if the presentation cannot be initiated, RLCP responds with R DelayStart or R RejectPresentation.
Reference: [8] <author> S.V. Raghavan, B. Prabhakaran and Satish K. </author> <title> Tripathi Quality of Service Considerations For Distributed, Orchestrated Multimedia Presentation, </title> <booktitle> Proceedings of High Performance Networking 94 (HPN'94), </booktitle> <address> Paris, France, </address> <month> July </month> <year> 1994, </year> <pages> pp. 217-238. </pages> <note> Also available as Technical Report: </note> <institution> CS-TR-3167, UMIACS-TR-93-113, University of Maryland, College Park, Computer Science Technical Report Series, </institution> <month> October </month> <year> 1993. </year>
Reference-contexts: RLCP can make an initial estimate of the required network resources using some heuristic algorithms such as the ones discussed in <ref> [8] </ref>. The network resources are also locked (temporarily reserved) for communication with the collaborating servers. The message exchange (with "accept" of connection request) in the first phase is shown in Figure 3. <p> This retrieval schedule identifies : (i) the collaborating server from which each object is to be retrieved, and (ii) the time at which each object is to be retrieved. Algorithms for generating retrieval schedules for different multimedia presentation applications are discussed in <ref> [2, 8, 7, 12] </ref>. These algorithms can be appropriately incorporated in the RLCP for computing retrieval schedules based on the available network resources. The initiating RLCP then issues an object retrieval request to the collaborating server (event 7, in Figure 4). <p> Here, an application can initiate a multimedia presentation using R InitiatePresentation request. RLCP uses one of the retrieval schedule generation algorithms discussed in <ref> [2, 8, 7, 12] </ref>, in order to identify the object retrieval times and the collaborating servers from which objects are to be retrieved. If the start of the presentation has to be delayed or if the presentation cannot be initiated, RLCP responds with R DelayStart or R RejectPresentation.
Reference: [9] <author> K. Nahrstedt and J. Smith, </author> <title> "The QoS Broker", </title> <journal> IEEE Multimedia, </journal> <volume> Vol. 2, No. 1, </volume> <pages> pp. 53-67, </pages> <month> Spring </month> <year> 1995. </year>
Reference: [10] <author> L. Delgrossi and L. Berger, </author> <title> "Internet Stream Protocol Version ST2+", </title> <type> RFC 1819, </type> <month> August </month> <year> 1995. </year>
Reference-contexts: Otherwise, it executes a sequence of resource modification phase till the retrieval schedule can be finalized. RLCP can use services offered by any network protocol supporting advance reservation capabilities such as Tenet suite of protocols [4] or ST2+ <ref> [10] </ref>.
Reference: [11] <author> S.V. Raghavan, B. Prabhakaran and Satish K. Tripathi, </author> <note> "Handling QoS Negotiations in Distributed Orchestrated Presentation", to be published in Journal of High Speed Networking. </note>
Reference-contexts: Application can make use of the request R PresentationDelay to convey its acceptance or rejection of the delay in initiating the presentation. Other services can be incorporated into RLCP for handling user interactions during the multimedia presentation and for handling dynamic network behavior, similar to the services offered in <ref> [11] </ref>. Interaction With Peer RLCP : For carrying out a multimedia presentation, RLCP interacts with peer collaborating RLCPs. The requests made to collaborating RLCPs and their responses are summarized in Table 2. <p> Requirements at the application level makes resource negotiation a more complex task. Few protocols have been suggested for handling resource negotiation and object retrievals in distributed multimedia applications : * Application and Network Synchronization Protocol (ASP and NSP) [2]. * Multimedia Application Protocol (MMAP) <ref> [11] </ref>. 14 * Negotiation and Resource Reservation Protocol (NRP) [13]. <p> Multimedia Application Protocol (MMAP) : The main emphasis of MMAP is that computing the QoS requirements, negotiating it with the network service provider and handling the dynamic behavior of the user and the network service provider can be provided as a generic protocol service interface <ref> [11] </ref>. The services provided by MMAP addresses these issues and hence MMAP services can be used by an orchestrated presentation application. However, MMAP does not handle dependencies among object presentations and does not address the collaborative nature of multimedia presentations discussed in this paper.
Reference: [12] <author> E. Hwang, B. Prabhakaran, </author> <title> and V.S. Subrahmanian, "Presentation Planning for Distributed Video Systems", </title> <type> CS TR 3723, Umiacs TR 96-91, </type> <institution> University of Maryland, College Park, Computer Science Technical Report Series, </institution> <month> December </month> <year> 1996. </year>
Reference-contexts: As an example, one can consider a distributed multimedia document presentation where objects composing the document are distributed on more than one server [7]. We can also consider a distributed video presentation where blocks of movies are distributed on more than one video server <ref> [12] </ref>. In such applications, presentation of objects from different servers can be inter-dependent. For instance, in the case of a distributed multimedia document presentation, an object O1 from a collaborating server CS1 might have to be presented at the same time with another object O2 from another server CS2. <p> Hence, there is a dependency in the retrieval schedules of the objects composing the multimedia document. 2.2 Distributed Video Presentation We can consider a distributed video presentation application where movies may not be stored entirely on a particular server <ref> [12] </ref>. Blocks of the same movie may be replicated and stored on many Video-on-Demand (VoD) servers on the network. A VoD server caters to a set of customers at any point in time. <p> This retrieval schedule identifies : (i) the collaborating server from which each object is to be retrieved, and (ii) the time at which each object is to be retrieved. Algorithms for generating retrieval schedules for different multimedia presentation applications are discussed in <ref> [2, 8, 7, 12] </ref>. These algorithms can be appropriately incorporated in the RLCP for computing retrieval schedules based on the available network resources. The initiating RLCP then issues an object retrieval request to the collaborating server (event 7, in Figure 4). <p> Here, an application can initiate a multimedia presentation using R InitiatePresentation request. RLCP uses one of the retrieval schedule generation algorithms discussed in <ref> [2, 8, 7, 12] </ref>, in order to identify the object retrieval times and the collaborating servers from which objects are to be retrieved. If the start of the presentation has to be delayed or if the presentation cannot be initiated, RLCP responds with R DelayStart or R RejectPresentation.
Reference: [13] <author> G. Dermler, W. Fiederer. I. Burth, and K. Rothermel, </author> <title> "A Negotiation and Resource Reservation Protocol (NRP) for Configurable Multimedia Applications", </title> <booktitle> Proceedings of IEEE Multimedia '96 Conference, Japan, </booktitle> <pages> pp. 113-116. 17 </pages>
Reference-contexts: Few protocols have been suggested for handling resource negotiation and object retrievals in distributed multimedia applications : * Application and Network Synchronization Protocol (ASP and NSP) [2]. * Multimedia Application Protocol (MMAP) [11]. 14 * Negotiation and Resource Reservation Protocol (NRP) <ref> [13] </ref>. Application and Network Synchronization Protocol : In [2], a set of protocols one at application service level (Application Synchronization Protocol (ASP))and another at the network service level (Network Synchronization Protocol (NSP)) have been proposed for providing synchronization of objects as a network service. <p> However, MMAP does not handle dependencies among object presentations and does not address the collaborative nature of multimedia presentations discussed in this paper. Negotiation and Resource Reservation Protocol (NRP) : has been proposed in <ref> [13] </ref> for describing application level QoS with an end-to-end view spanning the whole distributed application. NRP carries out negotiation based on client specified QoS value ranges and given resource availabilities on endsys-tems and communication links.
References-found: 13

