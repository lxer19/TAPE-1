URL: ftp://ftp.csd.uu.se/pub/papers/reports/0093.ps.gz
Refering-URL: http://www.csd.uu.se/papers/reports.html
Root-URL: 
Email: email fanatoli,voronkovg@csd.uu.se  
Title: Connections via Equality Elimination  
Author: Anatoli Degtyarev Andrei Voronkov 
Address: Box 311, S-751 05 Uppsala, Sweden  
Affiliation: Computing Science Department Uppsala University  
Note: General  Supported by a grant from the Swedish Institute On leave from Kiev University Supported by a TFR grant  
Abstract: UPMAIL Technical Report No. 93 January 16, 1995 
Abstract-found: 1
Intro-found: 1
Reference: [And 76] <author> P.B. Andrews. </author> <title> Refutations by matings. </title> <journal> IEEE Trans. Comput., </journal> <volume> 25 </volume> <pages> 801-807, </pages> <year> 1976. </year>
Reference-contexts: Introduction We propose an approach to adding equality to extension proof methods which are known under two different names connection method [BS 75, Bib 87] and the method of matings <ref> [And 76, And 81, Gal 90, Gal 92] </ref>. Both methods express the same idea going back to the fundamental Herbrand theorem [Her 30, Min 66, Min 67a].
Reference: [And 81] <author> P.B. Andrews. </author> <title> Theorem proving via general matings. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 28(2) </volume> <pages> 193-214, </pages> <year> 1981. </year>
Reference-contexts: Introduction We propose an approach to adding equality to extension proof methods which are known under two different names connection method [BS 75, Bib 87] and the method of matings <ref> [And 76, And 81, Gal 90, Gal 92] </ref>. Both methods express the same idea going back to the fundamental Herbrand theorem [Her 30, Min 66, Min 67a]. <p> There is no uniform notation for the connection method (in fact there is even no uniform name for the method itself), our notation is essentially based on that of <ref> [And 81] </ref>. Definition 3.1 Let ' be a formula in the negation normal form. <p> ) 7 3 5 7 7 2 6 4 6 2 4 [B (x 1 ; y 1 ) C (y 1 )] 3 5 7 3 7 5 Our notions of fl-matrix and of a vertical path corresponds to the set of vertical paths through an amplification used in <ref> [And 81] </ref> with the following differences: 1. Our "horizontal submatrices" h i are displayed in [And 81] using disjunctions h i 2. Our paths can contain arbitrary subformulas of fl while paths in [And 81] only contain literals. <p> ; y 1 ) C (y 1 )] 3 5 7 3 7 5 Our notions of fl-matrix and of a vertical path corresponds to the set of vertical paths through an amplification used in <ref> [And 81] </ref> with the following differences: 1. Our "horizontal submatrices" h i are displayed in [And 81] using disjunctions h i 2. Our paths can contain arbitrary subformulas of fl while paths in [And 81] only contain literals. This observation gives rise to the following Theorem 3.1 Let fl 0 be an amplification of the formula fl with the set of vertical paths . <p> and of a vertical path corresponds to the set of vertical paths through an amplification used in <ref> [And 81] </ref> with the following differences: 1. Our "horizontal submatrices" h i are displayed in [And 81] using disjunctions h i 2. Our paths can contain arbitrary subformulas of fl while paths in [And 81] only contain literals. This observation gives rise to the following Theorem 3.1 Let fl 0 be an amplification of the formula fl with the set of vertical paths .
Reference: [And 86] <author> P.B. Andrews. </author> <title> An introduction to type theory: to truth through proof. </title> <publisher> Academic Press, </publisher> <year> 1986. </year>
Reference: [BDP 89] <author> L. Bachmair, N. Dershowitz, and D. Plaisted. </author> <title> Completion without failure. </title> <editor> In H. At Kaci and M. Nivat, editors, </editor> <booktitle> Resolution of Equations in Algebraic Structures, </booktitle> <volume> volume 2, </volume> <pages> pages 1-30. </pages> <publisher> Academic Press, </publisher> <year> 1989. </year>
Reference: [BGLS 92] <author> L. Bachmair, H. Ganzinger, C. Lynch, and W. Snyder. </author> <title> Basic paramodulation and superposition. </title> <editor> In D. Kapur, editor, </editor> <booktitle> 11th International Conference on Automated Deduction, volume 607 of Lecture Notes in Artificial Intelligence, </booktitle> <pages> pages 462-476, </pages> <address> Saratoga Springs, NY, USA, June 1992. </address> <publisher> Springer Verlag. </publisher>
Reference-contexts: Solution clauses are generated on the basis of the information from the goal fl using basic superposition <ref> [Deg 79, DV 86b, BGLS 92, NR 92a] </ref>. hc = d; c = d; f (y; y) = f (a; b)i which has no solution. <p> By symmetry, the picture will be the same if we start with solving (3.2). 10 Section 4 The equality elimination method Following <ref> [BGLS 92] </ref> we distinguish terms occurring in the original formula from terms introduced by substitution by using closures: Definition 4.1 A closure is a pair C , where C is a clause, a substitution. <p> Moreover, we shall show that the search for mated sets can be restricted to solution clauses defined below. Solution clauses do not contain equality. The solution clauses will be obtained from a set of initial closures using basic superposition developed in <ref> [Deg 79, Hul 80, BGLS 92, NR 92a] </ref>. Definition 4.5 Initial closures are generated according to one of the three rules: 1. <p> Then the closure s 1 6= t 1 ; : : : ; s n 6= t n ; C 1 ; C 2 " is an initial closure. The basic superposition rules derive closures from closures. They are defined as in <ref> [BGLS 92] </ref>. We always assume that premises of rules have disjoint variables. We also assume for the rest of the paper that is a fixed reduction ordering. <p> There are many optimizations possible in the equality elimination part of our method. The most powerful one is subsumption that we can apply in order to prevent generation of unnecessary clauses. Subsumption for the basic strategy has been explained in <ref> [Deg 82, BGLS 92] </ref>. On solution clauses, we can use ordinary subsumption, or even a stronger subsumption for sequent proofs proposed in [Vor 92]. It is also possible to use arbitrary simplification by equations obtained in the process of generating solution clauses. <p> It is also possible to use arbitrary simplification by equations obtained in the process of generating solution clauses. In general, such simplifications are incomplete for basic superposition. However in our case arguments of names only have non-basic positions. It is known that simplification for non-basic positions is complete <ref> [BGLS 92] </ref>. Thus, proofs by our method consist of two processes that can be run concurrently. One process generates solution clauses. The other process tries to construct a suitable matrix and a substitution.
Reference: [BP 94] <author> G. Becher and U. Petermann. </author> <title> Rigid unification by completion and rigid paramodulation. </title> <editor> In B. Nebel and Dreschler-Fischer L., editors, </editor> <booktitle> KI-94: Advances in Artificial Intelligence. 18th German Annual Conference on Artificial Intelligence, volume 861 of Lecture Notes in Artificial Intelligence, </booktitle> <pages> pages 319-330, </pages> <address> Saarbrucken, Germany, September 1994. </address> <publisher> Springer Verlag. </publisher>
Reference-contexts: The rigid E-unification algorithms do not generalize to the simultaneous case immediately, moreover it is not yet known whether simultaneous rigid E-unifiability is decidable (see <ref> [BP 94] </ref>). Simultaneous rigid E-unification is the crucial problem for traditional approaches to matrix methods. <p> There is no method for finding a suitable substitution . Although an algorithm formulated in [GNRS 92] based on rigid E-unification is supposed to solve this problem, the presentation contains errors, which had been noted in <ref> [Gob 93, BP 94] </ref>. Even if a correct algorithm for simultaneous rigid E-unification could be found, the approach sketched in [GNRS 92, Gal 92] would still be unfeasible due to high non-determinism in the construction of all potential matings. 3.
Reference: [BH 92] <author> B. Beckert and R. Hahnle. </author> <title> An improved method for adding equality to free variable semantic tableaux. </title> <editor> In D. Kapur, editor, </editor> <booktitle> 11th International Conference on Automated Deduction (CADE), volume 607 of Lecture Notes in Artificial Intelligence, </booktitle> <pages> pages 678-692, </pages> <address> Saratoga Springs, NY, USA, June 1992. </address> <publisher> Springer Verlag. </publisher>
Reference: [Bec 94a] <author> B. Beckert. </author> <title> Adding equality to semantic tableaux. </title> <editor> In K. Broda, M. D'Agostino, R. Gore, R. Jahnson, and S. Reeves, editors, </editor> <booktitle> Proceedings, 3rd Workshop on Theorem Proving with Analytic Tableaux and Related Methods, Abingdon, </booktitle> <pages> pages 29-41, </pages> <institution> Imperial College, </institution> <address> London, TR-94/5, </address> <year> 1994. </year>
Reference-contexts: In our case inconsistent is the set 9 ( V j j ^ fl). This addition of fl has the hidden effect of multiple use of universal equations in mixed E-unification <ref> [Bec 94a, Bec 94b] </ref>. Now we change the notion of fl-matrix introduced in Section 3 in order to use names instead of formulas. Definition 4.10 A named fl-matrix is defined by induction as follows: 1. The empty expression is a named fl-matrix. 2. <p> This question will be considered in Section 5. Here we shall consider examples of the application of Theorem 4.1. The first example is taken from <ref> [Bec 94a] </ref>: 17 Example 4.2 The formula to be refuted is 8x (g (x) = f (x) _ x 6= a) ^ 8x (g (f (x)) = x) ^ b = c ^ :P (g (g (a)); b) ^ P (a; c) There are two disjunctive subformulas with the following names:
Reference: [Bec 94b] <author> B. Beckert. </author> <title> A completion-based method for mixed universal and rigid E-unification. </title> <editor> In A. Bundy, editor, </editor> <booktitle> Automated Deduction | CADE-12. 12th International Conference on Automated Deduction., volume 814 of Lecture Notes in Artificial Intelligence, </booktitle> <pages> pages 678-692, </pages> <address> Nancy, France, </address> <month> June/July </month> <year> 1994. </year>
Reference-contexts: A solution to the substitution problem could be an incremental rigid unification algorithm, i.e. an algorithm which would allow to construct a solution for the simultaneous rigid E-unification problem from solutions to separate rigid E-unification problems. As it is noted in <ref> [Bec 94b] </ref>, "A simultaneous E-unification problem can be solved by searching for common specialization to its components" 2 . It is far from obvious that such an incremental algorithm for rigid E-unification can be constructed. <p> Second, we can only restrict to a small subset of all subformulas of fl, and hence a small set of names. Third, formulas with no fl-names allow for unrestricted quantifier duplication and in fact give the same effect as mixed E-unification <ref> [Bec 94b] </ref>. Lemma 4.1 Let ' be a subformula of fl. Then 1. If is the least disjunctive superformula of ' then j= 8 (:' : ). 2. If there is no disjunctive superformula of ' then j= 8 (:' :fl). Proof. <p> In our case inconsistent is the set 9 ( V j j ^ fl). This addition of fl has the hidden effect of multiple use of universal equations in mixed E-unification <ref> [Bec 94a, Bec 94b] </ref>. Now we change the notion of fl-matrix introduced in Section 3 in order to use names instead of formulas. Definition 4.10 A named fl-matrix is defined by induction as follows: 1. The empty expression is a named fl-matrix. 2.
Reference: [Ben 90] <author> D. Benanav. </author> <title> Simultaneous paramodulation. In M.E. </title> <editor> Stickel, editor, </editor> <booktitle> Proc. 10th Int. Conf. on Automated Deduction, volume 449 of Lecture Notes in Artificial Intelligence, </booktitle> <pages> pages 442-455, </pages> <year> 1990. </year>
Reference: [Bet 58] <author> E.W. Beth. </author> <title> On machines which prove theorems. </title> <editor> In J. Siekmann and G. Wrightson, editors, </editor> <booktitle> Automation of Reasoning. Classical Papers on Computational Logic, </booktitle> <volume> volume 1, </volume> <pages> pages 79-92. </pages> <publisher> Springer Verlag, </publisher> <year> 1983. </year> <note> Originally appeared in 1958. </note>
Reference: [Bet 59] <editor> E. Beth. </editor> <booktitle> The Foundations of Mathematics. </booktitle> <publisher> North Holland, </publisher> <year> 1959. </year> <month> 22 </month>
Reference: [BS 75] <author> W. Bibel and J. Schreiber. </author> <title> Proof search in a Gentzen-like system of first order logic. </title> <editor> In E. Gelenbe and D. Potier, editors, </editor> <booktitle> Proc. Int. Computing Symp., </booktitle> <pages> pages 205-212. </pages> <publisher> North Holland, </publisher> <year> 1975. </year>
Reference-contexts: Introduction We propose an approach to adding equality to extension proof methods which are known under two different names connection method <ref> [BS 75, Bib 87] </ref> and the method of matings [And 76, And 81, Gal 90, Gal 92]. Both methods express the same idea going back to the fundamental Herbrand theorem [Her 30, Min 66, Min 67a].
Reference: [Bib 87] <author> W. Bibel. </author> <title> Automated theorem proving. </title> <publisher> Vieweg Verlag, </publisher> <year> 1987. </year> <note> 2nd edition. </note>
Reference-contexts: Introduction We propose an approach to adding equality to extension proof methods which are known under two different names connection method <ref> [BS 75, Bib 87] </ref> and the method of matings [And 76, And 81, Gal 90, Gal 92]. Both methods express the same idea going back to the fundamental Herbrand theorem [Her 30, Min 66, Min 67a]. <p> In the second method the substitution is searched for by an incremental exploration of all paths with the backtracking construction of the substitution conditions. A generalization of the ideas of Prawitz to the predicate calculus with equality has been proposed by Bibel <ref> [Bib 87] </ref> and Gallier et al. [Gal 90]. In this generalization complementary literals are replaced by eq-connections instantiated by eq-unifiers [Bib 87] or mated sets instantiated by rigid E-unifiers [Gal 90] which is the same despite different terminology. <p> A generalization of the ideas of Prawitz to the predicate calculus with equality has been proposed by Bibel <ref> [Bib 87] </ref> and Gallier et al. [Gal 90]. In this generalization complementary literals are replaced by eq-connections instantiated by eq-unifiers [Bib 87] or mated sets instantiated by rigid E-unifiers [Gal 90] which is the same despite different terminology. Unfortunately, this approach preserves all problems created by the non-equality matrix methods and, in addition, creates much more severe problems.
Reference: [Boy 90] <author> T. Boy de la Tour. </author> <title> Minimizing the number of clauses by renaming. In M.E. </title> <editor> Stickel, editor, </editor> <booktitle> Proc. 10th CADE, volume 449 of Lecture Notes in Artificial Intelligence, </booktitle> <pages> pages 558-572, </pages> <year> 1990. </year>
Reference: [Boy 71] <author> R.S. Boyer. </author> <title> Locking: a Restriction to Resolution. </title> <type> PhD thesis, </type> <institution> Univ. of Texas, Austin, </institution> <year> 1971. </year>
Reference-contexts: Since superposition rules and equality solution rules are logically sound, the claim of the lemma follows. 2 1 According to our definitions, a clause is a set of literals, so the leftmost literal may sound as nonsense, but this restriction can easily be formalized using a variant of locking <ref> [Boy 71] </ref>. 14 Let us note that in traditional literature on the connection method an eq-connection ( V t i ^ s 6= t) is called E-complementary iff 9 ( V s i = t i ^ s 6= t) is inconsistent.
Reference: [Deg 79] <author> A.I. Degtyarev. </author> <title> The strategy of monotone paramodulation (in Russian). </title> <booktitle> In Fifth Soviet All-Union Conference on Mathematical Logic, </booktitle> <pages> page 39, </pages> <address> Novosibirsk, </address> <year> 1979. </year>
Reference-contexts: Solution clauses are generated on the basis of the information from the goal fl using basic superposition <ref> [Deg 79, DV 86b, BGLS 92, NR 92a] </ref>. hc = d; c = d; f (y; y) = f (a; b)i which has no solution. <p> Moreover, we shall show that the search for mated sets can be restricted to solution clauses defined below. Solution clauses do not contain equality. The solution clauses will be obtained from a set of initial closures using basic superposition developed in <ref> [Deg 79, Hul 80, BGLS 92, NR 92a] </ref>. Definition 4.5 Initial closures are generated according to one of the three rules: 1.
Reference: [Deg 82] <author> A.I. Degtyarev. </author> <title> On the forms of inference in calculi with equality and paramodulation. </title> <editor> In Yu.V. Kapitonova, editor, </editor> <booktitle> Automation of Research in Mathematics, </booktitle> <pages> pages 14-26. </pages> <institution> Institute of Cybernetics, Kiev, </institution> <year> 1982. </year>
Reference-contexts: There are many optimizations possible in the equality elimination part of our method. The most powerful one is subsumption that we can apply in order to prevent generation of unnecessary clauses. Subsumption for the basic strategy has been explained in <ref> [Deg 82, BGLS 92] </ref>. On solution clauses, we can use ordinary subsumption, or even a stronger subsumption for sequent proofs proposed in [Vor 92]. It is also possible to use arbitrary simplification by equations obtained in the process of generating solution clauses.
Reference: [DV 86a] <author> A.I. Degtyarev and A. Voronkov. </author> <title> Automated theorem proving I (in Russian). </title> <journal> Kibernetika, </journal> <volume> (3), </volume> <year> 1986. </year> <note> The journal is cover-to-cover translated to English. </note>
Reference: [DV 86b] <author> A.I. Degtyarev and A. Voronkov. </author> <title> Methods of handling equality in machine theorem proving (in Russian). </title> <journal> Kibernetika, </journal> <volume> (3), </volume> <year> 1986. </year> <note> The journal is cover-to-cover translated to English. </note>
Reference-contexts: Solution clauses are generated on the basis of the information from the goal fl using basic superposition <ref> [Deg 79, DV 86b, BGLS 92, NR 92a] </ref>. hc = d; c = d; f (y; y) = f (a; b)i which has no solution.
Reference: [DV 87] <author> A.I. Degtyarev and A. Voronkov. </author> <title> Automated theorem proving II (in Russian). </title> <journal> Kibernetika, </journal> <volume> (4), </volume> <year> 1987. </year> <note> The journal is cover-to-cover translated to English. </note>
Reference: [DV 94a] <author> A. Degtyarev and A. Voronkov. </author> <title> A new procedural interpretation of Horn clauses with equality. </title> <type> UPMAIL Technical Report 89, </type> <institution> Uppsala University, Computing Science Department, </institution> <month> November </month> <year> 1994. </year>
Reference-contexts: This allows one to use strong sides of both equality reasoning methods known so far and extension procedures. This approach to adding equality to the connection method has been sketched in [DV 94c] following techniques developed in <ref> [DV 94a, DV 94b] </ref>. Since we eliminate equality in the first part of our method, the method is called equality elimination. 2 Section 2 Preliminaries. In this section we present a brief overview of main notions used in the paper. We assume the basic knowledge of substitutions and unification. <p> In (rigid) E-unification the role of most general unifiers is played by the so called complete sets of rigid E-unifiers. However there is no such incremental algorithm based on the notion of a complete set of (rigid) E-unifiers 3 . In <ref> [DV 94a] </ref> we proved that in 1 We quote [GNRS 92]: As Andrews says in discussing this problem in the context of looking for nonequational p-acceptable matings, "One would like to develop a set of heuristics for duplicating quantifiers".
Reference: [DV 94b] <author> A. Degtyarev and A. Voronkov. </author> <title> Equality elimination for semantic tableaux. </title> <type> UPMAIL Technical Report 90, </type> <institution> Uppsala University, Computing Science Department, </institution> <month> November </month> <year> 1994. </year>
Reference-contexts: This allows one to use strong sides of both equality reasoning methods known so far and extension procedures. This approach to adding equality to the connection method has been sketched in [DV 94c] following techniques developed in <ref> [DV 94a, DV 94b] </ref>. Since we eliminate equality in the first part of our method, the method is called equality elimination. 2 Section 2 Preliminaries. In this section we present a brief overview of main notions used in the paper. We assume the basic knowledge of substitutions and unification. <p> Thus, named fl-matrices represent some information from fl-matrices in a more compact form. Theorem 4.1 below is the main theorem of this paper. It characterizes inconsistency in terms of named paths through matrices. For its proof we need a new definition of subset unification <ref> [DV 94b] </ref>. A variant of subset unification has been used in [MRL 91] as -subsumption. Definition 4.11 A substitution is called a subset unifier of clauses D 1 and D 2 iff D 1 D 2 . <p> It is a most general subset unifier of D 1 and D 2 iff there is no other subset unifier 0 of D 1 and D 2 such that 0 and not 0 . Some properties of subset unification are proved in <ref> [DV 94b] </ref>. In particular, the number of incomparable most general subset unifiers is in the worst case exponent of the length of clauses, and the subset unifiability problem is NP-complete. <p> Theorem 4.1 The formula fl is inconsistent iff there are a named fl-matrix M and a substitution such that every path in M contains an instance of a solution clause. Proof. The proof of this theorem will be based on a tableau characterization of equality elimination proved in <ref> [DV 94b] </ref>. The proof of that result is quite long and will not be reproduced here. An interested reader can refer to [DV 94b]. In order to formulate this general result we introduce (with some modifications) a calculus from that paper. Here we shall call it the calculus T . <p> Proof. The proof of this theorem will be based on a tableau characterization of equality elimination proved in <ref> [DV 94b] </ref>. The proof of that result is quite long and will not be reproduced here. An interested reader can refer to [DV 94b]. In order to formulate this general result we introduce (with some modifications) a calculus from that paper. Here we shall call it the calculus T . The modifications concern the fact that in this paper we define everything in terms of inconsistency while in [DV 94b] in terms of <p> reader can refer to <ref> [DV 94b] </ref>. In order to formulate this general result we introduce (with some modifications) a calculus from that paper. Here we shall call it the calculus T . The modifications concern the fact that in this paper we define everything in terms of inconsistency while in [DV 94b] in terms of provability. The provable objects of the calculus from [DV 94b] are tableaux, i.e. expressions of the form C 1 j : : : j C n where C i are sets of atoms and n 0. <p> Here we shall call it the calculus T . The modifications concern the fact that in this paper we define everything in terms of inconsistency while in <ref> [DV 94b] </ref> in terms of provability. The provable objects of the calculus from [DV 94b] are tableaux, i.e. expressions of the form C 1 j : : : j C n where C i are sets of atoms and n 0. The initial object of the proof is the tableau consisting of one empty set of atoms. <p> Then from the tableau C 1 j C 2 j : : : j C m one can derive the tableau C 2 j : : : j C m It has been proved in <ref> [DV 94b] </ref> that fl is inconsistent iff there is an inference of the empty table from the initial table. One can note that all rules in T -calculus are permutable, in particular all branch expansion rules can precede all branch closure rules.
Reference: [DV 94c] <author> A. Degtyarev and A. Voronkov. </author> <title> Equality elimination for the inverse method and extension procedures. </title> <type> UPMAIL Technical Report 92, </type> <institution> Uppsala University, Computing Science Department, </institution> <month> December </month> <year> 1994. </year>
Reference-contexts: This allows one to use strong sides of both equality reasoning methods known so far and extension procedures. This approach to adding equality to the connection method has been sketched in <ref> [DV 94c] </ref> following techniques developed in [DV 94a, DV 94b]. Since we eliminate equality in the first part of our method, the method is called equality elimination. 2 Section 2 Preliminaries. In this section we present a brief overview of main notions used in the paper.
Reference: [DJ 90] <author> N. Dershowitz and J.-P. Jouannaud. </author> <title> Rewrite systems. </title> <editor> In J. Van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, volume B: Formal Methods and Semantics, chapter 6, </booktitle> <pages> pages 243-309. </pages> <publisher> North Holland, </publisher> <address> Amsterdam, </address> <year> 1990. </year>
Reference: [Ede 91] <author> E. Eder. </author> <title> Consolution and its relation with resolution. </title> <booktitle> In Proc. IJCAI'91, </booktitle> <pages> pages 132-136, </pages> <year> 1991. </year>
Reference: [Fit 90] <author> M. </author> <title> Fitting. First Order Logic and Automated Theorem Proving. </title> <publisher> Springer Verlag, </publisher> <address> New York, </address> <year> 1990. </year>
Reference: [Gal 89] <author> J.H. Gallier and S. Raatz. </author> <title> Extending SLD-resolution to equational horn clauses using E-unification. </title> <journal> Journal of Logic Programming, </journal> <volume> 6(3) </volume> <pages> 3-44, </pages> <year> 1989. </year>
Reference-contexts: Problem (3.1) has a complete set of rigid E-unifiers consisting of one substitution [y=x; c=u; d=v]. When we apply this solution to (3.2), we obtain a new rigid E-unification problem 9 a slightly different situation with SLDE + -resolution <ref> [Gal 89] </ref>, incremental equation solution based on complete sets of E-unifiers is incomplete. In this paper we propose a method which provides a solution for the problem of finding a spanning mating by an incremental procedure.
Reference: [Gal 90] <author> J. Gallier, P. Narendran, D. Plaisted, and W. Snyder. </author> <title> Rigid E-unification: NP-completeness and applications to equational matings. </title> <journal> Information and Computation, </journal> 87(1/2):129-195, 1990. 
Reference-contexts: Introduction We propose an approach to adding equality to extension proof methods which are known under two different names connection method [BS 75, Bib 87] and the method of matings <ref> [And 76, And 81, Gal 90, Gal 92] </ref>. Both methods express the same idea going back to the fundamental Herbrand theorem [Her 30, Min 66, Min 67a]. <p> In the second method the substitution is searched for by an incremental exploration of all paths with the backtracking construction of the substitution conditions. A generalization of the ideas of Prawitz to the predicate calculus with equality has been proposed by Bibel [Bib 87] and Gallier et al. <ref> [Gal 90] </ref>. In this generalization complementary literals are replaced by eq-connections instantiated by eq-unifiers [Bib 87] or mated sets instantiated by rigid E-unifiers [Gal 90] which is the same despite different terminology. <p> A generalization of the ideas of Prawitz to the predicate calculus with equality has been proposed by Bibel [Bib 87] and Gallier et al. <ref> [Gal 90] </ref>. In this generalization complementary literals are replaced by eq-connections instantiated by eq-unifiers [Bib 87] or mated sets instantiated by rigid E-unifiers [Gal 90] which is the same despite different terminology. Unfortunately, this approach preserves all problems created by the non-equality matrix methods and, in addition, creates much more severe problems.
Reference: [GNRS 92] <author> J. Gallier, P. Narendran, S. Raatz, and W. Snyder. </author> <title> Theorem proving using equational matings and rigid E-unification. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 39(2) </volume> <pages> 3-44, </pages> <year> 1992. </year>
Reference-contexts: First, it is still unclear how to expand the matrix. (Prawitz searched for minimal expansions.) Second, even the problem of finding a mated set with a rigid E-unifier is extremely difficult <ref> [GNRS 92] </ref>: if a path contains q equations and r disequations then there are r 2 q mated sets. The check of the rigid unifiability for a given mated set is NP-complete. <p> It has been known that the outermost quantifier duplication is complete but generates unnecessarily large matrices. 1 2. There is no method for finding a suitable substitution . Although an algorithm formulated in <ref> [GNRS 92] </ref> based on rigid E-unification is supposed to solve this problem, the presentation contains errors, which had been noted in [Gob 93, BP 94]. <p> Although an algorithm formulated in [GNRS 92] based on rigid E-unification is supposed to solve this problem, the presentation contains errors, which had been noted in [Gob 93, BP 94]. Even if a correct algorithm for simultaneous rigid E-unification could be found, the approach sketched in <ref> [GNRS 92, Gal 92] </ref> would still be unfeasible due to high non-determinism in the construction of all potential matings. 3. <p> However there is no such incremental algorithm based on the notion of a complete set of (rigid) E-unifiers 3 . In [DV 94a] we proved that in 1 We quote <ref> [GNRS 92] </ref>: As Andrews says in discussing this problem in the context of looking for nonequational p-acceptable matings, "One would like to develop a set of heuristics for duplicating quantifiers".
Reference: [Gal 92] <author> J. Gallier. </author> <title> Unification procedures in automated deduction methods based on matings: a survey. </title> <editor> In M. Nivat and A. Podelski, editors, </editor> <booktitle> Tree Automata and Languages, </booktitle> <pages> pages 439-485. </pages> <publisher> Elsevier Science, </publisher> <year> 1992. </year> <month> 23 </month>
Reference-contexts: Introduction We propose an approach to adding equality to extension proof methods which are known under two different names connection method [BS 75, Bib 87] and the method of matings <ref> [And 76, And 81, Gal 90, Gal 92] </ref>. Both methods express the same idea going back to the fundamental Herbrand theorem [Her 30, Min 66, Min 67a]. <p> This theorem says that all paths are simultaneously inconsistent in a very strong sense. It is noted in <ref> [Gal 92] </ref> that this inconsistency can be checked by the congruence closure algorithm [Koz 76, NO 80]. <p> Although an algorithm formulated in [GNRS 92] based on rigid E-unification is supposed to solve this problem, the presentation contains errors, which had been noted in [Gob 93, BP 94]. Even if a correct algorithm for simultaneous rigid E-unification could be found, the approach sketched in <ref> [GNRS 92, Gal 92] </ref> would still be unfeasible due to high non-determinism in the construction of all potential matings. 3.
Reference: [Gob 93] <author> J. Goubault. </author> <title> A rule-based algorithm for rigid E-unification. </title> <editor> In Georg Gottlob, Alexander Leitsch, and Daniele Mundici, editors, </editor> <booktitle> Computational Logic and Proof Theory. Proceedings of the Third Kurt Godel Colloquium, KGC'93, volume 713 of Lecture Notes in Computer Science, </booktitle> <pages> pages 202-210, </pages> <address> Brno, </address> <month> August </month> <year> 1993. </year>
Reference-contexts: There is no method for finding a suitable substitution . Although an algorithm formulated in [GNRS 92] based on rigid E-unification is supposed to solve this problem, the presentation contains errors, which had been noted in <ref> [Gob 93, BP 94] </ref>. Even if a correct algorithm for simultaneous rigid E-unification could be found, the approach sketched in [GNRS 92, Gal 92] would still be unfeasible due to high non-determinism in the construction of all potential matings. 3.
Reference: [Her 30] <author> J. </author> <title> Herbrand. Logical Writings. </title> <publisher> Harward University Press, </publisher> <year> 1972. </year>
Reference-contexts: Both methods express the same idea going back to the fundamental Herbrand theorem <ref> [Her 30, Min 66, Min 67a] </ref>. According to these approaches, the proof-search can be considered as a the problem of verifying that each path through a matrix of the goal formula is complementary (in the non-equality case it means that each path contains a literal and its complement).
Reference: [Hul 80] <author> J.M. Hullot. </author> <title> Canonical forms and unification. </title> <booktitle> In 5th CADE, volume 87 of Lecture Notes in Computer Science, </booktitle> <pages> pages 318-334, </pages> <year> 1980. </year>
Reference-contexts: Moreover, we shall show that the search for mated sets can be restricted to solution clauses defined below. Solution clauses do not contain equality. The solution clauses will be obtained from a set of initial closures using basic superposition developed in <ref> [Deg 79, Hul 80, BGLS 92, NR 92a] </ref>. Definition 4.5 Initial closures are generated according to one of the three rules: 1.
Reference: [Kan 63] <author> S. Kanger. </author> <title> A simplified proof method for elementary logic. </title> <editor> In J. Siekmann and G. Wrightson, editors, </editor> <booktitle> Automation of Reasoning. Classical Papers on Computational Logic, </booktitle> <volume> volume 1, </volume> <pages> pages 364-371. </pages> <publisher> Springer Verlag, </publisher> <year> 1983. </year> <note> Originally appeared in 1963. </note>
Reference: [Koz 76] <author> D. Kozen. </author> <title> Complexity of finitely presented algebras. </title> <type> Technical Report TR 76-294, </type> <institution> Cornell University, </institution> <address> Ithaca, N.Y., </address> <year> 1976. </year>
Reference-contexts: This theorem says that all paths are simultaneously inconsistent in a very strong sense. It is noted in [Gal 92] that this inconsistency can be checked by the congruence closure algorithm <ref> [Koz 76, NO 80] </ref>. This theorem can be stated in a different form as Theorem 3.3 The formula fl is inconsistent iff there are a fl-matrix M , a substitution and a set S of sets of literals such that such that 1.
Reference: [Lus 92] <author> E.L. Lusk. </author> <title> Controlling redundancy in large search spaces: Argonne-style theorem proving through the years. </title> <editor> In A. Voronkov, editor, </editor> <booktitle> Logic Programming and Automated Reasoning. International Conference LPAR'92., volume 624 of Lecture Notes in Artificial Intelligence, </booktitle> <pages> pages 96-106, </pages> <address> St.Petersburg, Russia, </address> <month> July </month> <year> 1992. </year>
Reference-contexts: One process generates solution clauses. The other process tries to construct a suitable matrix and a substitution. We shall not consider in details the process of the generation of solution clauses | it can be done by any standard techniques of theorem proving described in <ref> [Lus 92] </ref>. 19 Section 5 Search strategies There are several ways of organizing proof search by the equality elimination method. There is high flexibility due to the fact that the search for a suitable substitution can be incremental.
Reference: [Lif 68] <author> V. Lifschitz. </author> <title> Specialized forms of derivation in predicate calculus with equality and functional symbols (in Russian). </title> <booktitle> In Trudy MIAN, </booktitle> <volume> volume 98, </volume> <pages> pages 5-25. </pages> <year> 1968. </year> <title> English translation in: </title> <booktitle> Proc. </booktitle> <institution> Steklov Institute of Math., AMS, Providence, </institution> <year> 1971. </year>
Reference: [Lif 89] <author> V. Lifschitz. </author> <title> What is the inverse method? Journal of Automated Reasoning, </title> <booktitle> 5(1) </booktitle> <pages> 1-23, </pages> <year> 1989. </year>
Reference: [Mas 71] <author> S.Yu. Maslov. </author> <title> The generalization of the inverse method to predicate calculus with equality (in Russian). </title> <journal> Zapiski Nauchnyh Seminarov LOMI, </journal> <volume> 20 </volume> <pages> 80-96, </pages> <year> 1971. </year> <title> English translation in: </title> <journal> Journal of Soviet Mathematics 1, </journal> <volume> no. </volume> <pages> 1. </pages>
Reference-contexts: A 1 (a) [left superposition + equality solution from 8,4] The named fl-matrix for this example is very simple: [A 1 (x) A 2 (x)] The corresponding substitution is [a=x]. The next example is a modification of an example from <ref> [Mas 71] </ref>: Example 4.3 The formula to be refuted is 8x ((a = x ^ G (f (f (x)))) _ (:G (f (x)) ^ x 6= b)) ^ (:G (b) _ 8z:G (f (z))) There are four disjunctive subformulas with the following names: A 1 (x) a = x ^ G
Reference: [MM 83] <author> S.Yu. Maslov and G. Mints. </author> <title> The proof-search theory and the inverse method (in Russian). </title> <editor> In Mints G., editor, </editor> <booktitle> Mathematical Logic and Automatic Theorem Proving, </booktitle> <pages> pages 291-314. </pages> <publisher> Nauka, </publisher> <address> Moscow, </address> <year> 1983. </year>
Reference: [Mas 87] <author> S.Yu. Maslov. </author> <title> Theory of Deductive Systems and its Applications. </title> <publisher> MIT Press, </publisher> <year> 1987. </year>
Reference: [MRL 91] <author> J. Minker, A. Rajasekar, and J. Lobo. </author> <title> Theory of disjunctive logic programs. </title> <editor> In Jean-Louis Lassez and Gordon Plotkin, editors, </editor> <booktitle> Computational Logic. Essays in Honor of Alan Robinson., </booktitle> <pages> pages 613-639. </pages> <publisher> The MIT Press, </publisher> <address> Cambridge, Massachusetts, </address> <year> 1991. </year>
Reference-contexts: Theorem 4.1 below is the main theorem of this paper. It characterizes inconsistency in terms of named paths through matrices. For its proof we need a new definition of subset unification [DV 94b]. A variant of subset unification has been used in <ref> [MRL 91] </ref> as -subsumption. Definition 4.11 A substitution is called a subset unifier of clauses D 1 and D 2 iff D 1 D 2 .
Reference: [Min 66] <author> G.E. Mints. </author> <title> The Herbrand theorem for the predicate calculus with equality and function symbols. </title> <journal> Soviet Mathematical Doklady, </journal> (2):273-275, 1969. 
Reference-contexts: Both methods express the same idea going back to the fundamental Herbrand theorem <ref> [Her 30, Min 66, Min 67a] </ref>. According to these approaches, the proof-search can be considered as a the problem of verifying that each path through a matrix of the goal formula is complementary (in the non-equality case it means that each path contains a literal and its complement).
Reference: [Min 67a] <author> G.E. Mints. </author> <title> Herbrand theorem (in Russian). In A.V. </title> <editor> Idelson and G.E. Mints, editors, </editor> <booktitle> Mathematical Theory of Logical Inference, </booktitle> <pages> pages 273-275. </pages> <publisher> Nauka, </publisher> <address> Moscow, </address> <year> 1967. </year>
Reference-contexts: Both methods express the same idea going back to the fundamental Herbrand theorem <ref> [Her 30, Min 66, Min 67a] </ref>. According to these approaches, the proof-search can be considered as a the problem of verifying that each path through a matrix of the goal formula is complementary (in the non-equality case it means that each path contains a literal and its complement).
Reference: [NO 80] <author> G. Nelson and D.C. Oppen. </author> <title> Fast decision procedures based on congruence closure. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 27(2) </volume> <pages> 356-364, </pages> <year> 1980. </year>
Reference-contexts: This theorem says that all paths are simultaneously inconsistent in a very strong sense. It is noted in [Gal 92] that this inconsistency can be checked by the congruence closure algorithm <ref> [Koz 76, NO 80] </ref>. This theorem can be stated in a different form as Theorem 3.3 The formula fl is inconsistent iff there are a fl-matrix M , a substitution and a set S of sets of literals such that such that 1.
Reference: [NR 92a] <author> R. Nieuwenhuis and A. Rubio. </author> <title> Basic superposition is complete. </title> <booktitle> In ESOP'92, volume 582 of Lecture Notes in Computer Science, </booktitle> <pages> pages 371-389. </pages> <publisher> Springer Verlag, </publisher> <year> 1992. </year>
Reference-contexts: Solution clauses are generated on the basis of the information from the goal fl using basic superposition <ref> [Deg 79, DV 86b, BGLS 92, NR 92a] </ref>. hc = d; c = d; f (y; y) = f (a; b)i which has no solution. <p> Moreover, we shall show that the search for mated sets can be restricted to solution clauses defined below. Solution clauses do not contain equality. The solution clauses will be obtained from a set of initial closures using basic superposition developed in <ref> [Deg 79, Hul 80, BGLS 92, NR 92a] </ref>. Definition 4.5 Initial closures are generated according to one of the three rules: 1.
Reference: [Ore 69] <author> V.P. Orevkov. </author> <title> On non-increasing rule applications for equality (in Russian). </title> <journal> Zapiski Nauchnyh Seminarov LOMI, </journal> <volume> 16 </volume> <pages> 152-156, </pages> <year> 1969. </year> <note> English Translation in: Seminars in Mathematics: </note> <institution> Steklov Math. Inst. 16, Consultants Bureau, NY-London, </institution> <year> 1971. </year> <month> 24 </month>
Reference: [Pra 60] <author> D. Prawitz. </author> <title> An improved proof procedure. </title> <editor> In J. Siekmann and G. Wrightson, editors, </editor> <booktitle> Automa--tion of Reasoning. Classical Papers on Computational Logic, </booktitle> <volume> volume 1, </volume> <pages> pages 162-201. </pages> <publisher> Springer Verlag, </publisher> <year> 1983. </year> <note> Originally appeared in 1960. </note>
Reference-contexts: The first justification of this idea has been given by Prawitz <ref> [Pra 60, Pra 69, Pra 70] </ref>. The main problem addressed by Prawitz when he developed matrix methods was the following.
Reference: [Pra 69] <author> D. Prawitz. </author> <title> Advances and problems in mechanical proof procedures. </title> <editor> In Meltzer and Michie, editors, </editor> <booktitle> Machine Intelligence, </booktitle> <volume> volume 4, </volume> <pages> pages 73-89. </pages> <publisher> Edinburgh University Press, Edinburgh, </publisher> <year> 1969. </year>
Reference-contexts: The first justification of this idea has been given by Prawitz <ref> [Pra 60, Pra 69, Pra 70] </ref>. The main problem addressed by Prawitz when he developed matrix methods was the following.
Reference: [Pra 70] <author> D. Prawitz. </author> <title> A proof procedure with matrix reduction. </title> <editor> In M. Laudet, L. Lacombe, L. Nolin, and M Schutzenberger, editors, </editor> <booktitle> Symp. on Automatic Demonstration, volume 125 of Lecture Notes in Mathematics, </booktitle> <pages> pages 207-213. </pages> <publisher> Springer Verlag, </publisher> <year> 1970. </year>
Reference-contexts: The first justification of this idea has been given by Prawitz <ref> [Pra 60, Pra 69, Pra 70] </ref>. The main problem addressed by Prawitz when he developed matrix methods was the following.
Reference: [Pet 93] <author> U. Petermann. </author> <title> A framework for integrating equality reasoning into extension procedure. </title> <booktitle> In Proc. Workshop on Theorem Proving with Analytic Tableaux and Related Methods, </booktitle> <pages> pages 195-207, </pages> <year> 1993. </year>
Reference-contexts: Thus, we make the search directed. In <ref> [Pet 93] </ref> it is noted that the problem of combining paramodulation-based equality handling 1 and extension procedure is non-trivial. What we do is to split equality reasoning and extension procedures into two separate procedures and connect them via solution clauses generated by the equality reasoning part.
Reference: [Rus 91] <author> M. Rusinowitch. </author> <title> Theorem proving with resolution and superposition: an extension of the Knuth and Bendix completion procedure as a complete set of inference rules. </title> <journal> Journal of Symbolic Computations, </journal> <volume> 11 </volume> <pages> 21-49, </pages> <year> 1991. </year>
Reference: [Vor 92] <author> A. Voronkov. </author> <title> Theorem proving in non-standard logics based on the inverse method. </title> <editor> In D. Kapur, editor, </editor> <booktitle> 11th International Conference on Automated Deduction, volume 607 of Lecture Notes in Artificial Intelligence, </booktitle> <pages> pages 648-662, </pages> <address> Saratoga Springs, NY, USA, June 1992. </address> <publisher> Springer Verlag. </publisher> <pages> 25 </pages>
Reference-contexts: The most powerful one is subsumption that we can apply in order to prevent generation of unnecessary clauses. Subsumption for the basic strategy has been explained in [Deg 82, BGLS 92]. On solution clauses, we can use ordinary subsumption, or even a stronger subsumption for sequent proofs proposed in <ref> [Vor 92] </ref>. It is also possible to use arbitrary simplification by equations obtained in the process of generating solution clauses. In general, such simplifications are incomplete for basic superposition. However in our case arguments of names only have non-basic positions.
References-found: 54

