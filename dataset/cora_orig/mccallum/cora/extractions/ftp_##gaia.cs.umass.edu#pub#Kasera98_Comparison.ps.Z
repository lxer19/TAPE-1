URL: ftp://gaia.cs.umass.edu/pub/Kasera98:Comparison.ps.Z
Refering-URL: http://www-net.cs.umass.edu/papers/papers.html
Root-URL: 
Email: fkasera,kurose,towsleyg@cs.umass.edu  
Title: A Comparison of Server-Based and Receiver-Based Local Recovery Approaches for Scalable Reliable Multicast  
Author: Sneha K. Kasera, Jim Kurose and Don Towsley 
Address: Amherst, MA 01003  
Affiliation: Department of Computer Science University of Massachusetts  
Abstract: Local recovery approaches for reliable multicast have the potential to provide significant performance gains in terms of reduced bandwidth and delay, and higher system throughput. In this paper we examine two local recovery approaches | one server-based, and the other receiver-based, and compare their performance. The server-based approach makes use of specially designated hosts, called repair servers, co-located with routers inside the network. In the receiver-based approach, only the end hosts (sender and receivers) are involved in error recovery. Using analytical models, we first show that the two local recovery approaches yield significantly higher protocol throughput and lower bandwidth usage than an approach that does not use local recovery. Next, we demonstrate that server-based local recovery yields higher protocol throughput and lower bandwidth usage than receiver-based local recovery when the repair servers have processing power slightly higher than that of a receiver and several hundred kilobytes of buffer per multicast session. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> K. Calvert, M. Doar and E. Zugera, </author> <title> Modeling Internet Topology. </title> <journal> IEEE Communications Magazine, </journal> <month> June </month> <year> 1997. </year>
Reference-contexts: In [13] Yajnik et al have observed that most losses take place in the links from the source site to the backbone (we call this the source link) and in the links (called "tail links") from the backbone to the individual sites (termed stub domains in <ref> [1] </ref>), as shown in Figure 1. The backbone and the individual sites have been observed to be mostly loss free. It has also been noted in [4] that tail links are likely to be bottlenecks for the foreseeable future. <p> The number of such backbone routers, W is equal to T =k. We assume that communication between two receivers on different tail links takes place only through a backbone router (s). Direct site-site links (termed stub-stub edges in <ref> [1] </ref>) are likely to be very rare. The above loss model has implications on the placement of repair servers inside the network.
Reference: [2] <author> S. Floyd et al, </author> <title> A Reliable Multicast Framework for Light-weight Sessions and Application Level Framing. </title> <note> A later version of the ACM SIGCOMM paper (ftp://ee.lbl.gov/papers.srm1.tech.ps.Z), Novem-ber 1995. </note>
Reference-contexts: In Section 7 we size the repair servers. Conclusions and directions for future work are contained in Section 8. 2 Related Work Many researchers have recently proposed different approaches for local recovery. These include SRM (with local recovery enhancements) <ref> [2] </ref>, LGC [3], TMTP [14], LORAX [7], LBRM [4] and RMTP [8] and can be broadly classified as follows. LBRM and RMTP are server-based, SRM with local recovery enhancements is receiver-based with randomized local recovery, and TMTP and LORAX are receiver-based with logical tree-based recovery. <p> This protocol, termed L2, is a generic version of SRM <ref> [2] </ref> with local recovery enhancements. In L2, loss recovery is performed at two levels. At the first level, a receiver tries to recover packets locally from within its local neighborhood. <p> We refer to this as "global recovery." Each receiver alternates between local and global recovery until it receives the missing packet. Protocol L2 exhibits the following behavior 2 This definition and other definitions of local neighborhood can be found in <ref> [2] </ref>. * the sender multicasts all packets on address A which is subscribed by all the participating re ceivers. * on detecting a loss, a receiver waits for a random amount of time and multicasts a local NAK addressed only to receivers in its neighborhood and starts a local NAK retransmission <p> The above protocol attempts to ensure that only one NAK and only one repair are generated at either recovery level. Unlike SRM <ref> [2] </ref>, L2 generates global repairs only from the sender thereby avoiding the risk of multiple global repairs. In SRM, receivers and the sender use a random back-off strategy to generate a repair. Here all receivers and the sender " listen" for a repair.
Reference: [3] <author> M. Hofmann, </author> <title> Enabling Group Communication in Global Networks. </title> <booktitle> Proceedings of Global Networking'97, </booktitle> <address> Calgary, Alberta, Canada, </address> <month> November </month> <year> 1996. </year>
Reference-contexts: In Section 7 we size the repair servers. Conclusions and directions for future work are contained in Section 8. 2 Related Work Many researchers have recently proposed different approaches for local recovery. These include SRM (with local recovery enhancements) [2], LGC <ref> [3] </ref>, TMTP [14], LORAX [7], LBRM [4] and RMTP [8] and can be broadly classified as follows. LBRM and RMTP are server-based, SRM with local recovery enhancements is receiver-based with randomized local recovery, and TMTP and LORAX are receiver-based with logical tree-based recovery.
Reference: [4] <author> H.W. Holbrook, S.K. Singhal and D.R. Cheri-ton, </author> <title> Log-Based Receiver Reliable Multicast for Distributed Interactive Simulation. </title> <booktitle> Proceedings of ACM SIGCOMM, </booktitle> <pages> pages 328-341, </pages> <month> August </month> <year> 1995. </year>
Reference-contexts: In Section 7 we size the repair servers. Conclusions and directions for future work are contained in Section 8. 2 Related Work Many researchers have recently proposed different approaches for local recovery. These include SRM (with local recovery enhancements) [2], LGC [3], TMTP [14], LORAX [7], LBRM <ref> [4] </ref> and RMTP [8] and can be broadly classified as follows. LBRM and RMTP are server-based, SRM with local recovery enhancements is receiver-based with randomized local recovery, and TMTP and LORAX are receiver-based with logical tree-based recovery. LGC is a hybrid of the logical tree-based approach and SRM. <p> We end this section by distinguishing between a log service and a repair service. A log service, as mentioned in <ref> [4] </ref>, provides secondary storage for packets transmitted from the sender. The entire data is stored at the log servers for repairs and "late-comers." Log service should be distinguished from the repair service, particularly if the repair servers are considered network resources that will be shared over several mul-ticast sessions. <p> The backbone and the individual sites have been observed to be mostly loss free. It has also been noted in <ref> [4] </ref> that tail links are likely to be bottlenecks for the foreseeable future. Hence in our loss model we consider loss only at the source and tail links. We also assume that loss events are temporally independent.
Reference: [5] <author> S. Kasera, J. Kurose and D. </author> <title> Towsley Scalable Reliable Multicast Using Multiple Multicast Groups. </title> <booktitle> Proceedings of ACM Sigmetrics, </booktitle> <month> June </month> <year> 1997. </year>
Reference-contexts: Our work is the first to analytically compare the throughput and bandwidth usage of the repair server (or designated host)-based and receiver-based local recovery approaches. Previous throughput analyses have focused on comparing sender-oriented versus receiver-oriented protocols that do not use local recovery <ref> [9, 11, 5] </ref> and comparison of logical tree-based local recovery with other non-local recovery approaches [7]. <p> Table 1 de scribes the notation used in the analysis, some of which has been reintroduced from <ref> [11, 5] </ref>. We assume 3 In [6] we have also looked at another bandwidth metric. that processing times are arbitrarily distributed and independent of each other. <p> We assume 3 In [6] we have also looked at another bandwidth metric. that processing times are arbitrarily distributed and independent of each other. We assume that the required processing times required to send and receive a packet are the same (it has been observed in <ref> [5] </ref> that they are almost the same). We also make the optimistic assumption that only one retransmission is generated per NAK during local recovery in L2. This assumption will result in lower receiver processing costs for L2. <p> The processing power required for this to be true is determined in the next section. In order to compute the send and receive processing costs we use the measurements reported in <ref> [5] </ref> for the processing times associated with sending/receiving a data packet and a NAK packet, and processing time-outs. We use E [X p ] = E [Y p ] = 500secs, E [X n ] = E [Y n ] = 85secs and E [Y t ] = 32secs.
Reference: [6] <author> S. Kasera, J. Kurose and D. </author> <title> Towsley A Comparison of Server-Based and Receiver-Based Local Recovery Approaches for Scalabale Reliable Multi-cast. </title> <type> CMPSCI Tech Report TR 1997-69, </type> <month> December </month> <year> 1997. </year>
Reference-contexts: In the receiver-based approach, the error recovery burden is shared among the sender and the participating receivers. In this section we assume that mechanisms are available for scoping multicasts within a "local" region. Some mechanisms for accomplishing this are listed in <ref> [6] </ref>. 3.1 A Server-Based Local Recovery Pro tocol We now describe a generic server-based reliable multicast local recovery protocol, L1, that assumes the presence of a repair tree. This repair tree is the physical multicast routing tree constructed by the routing protocols with repair servers co-located with routers 1 . <p> Each site sends only one NAK to the repair server per loss. 5 Performance Analysis In this section we analyze the end system processing and network bandwidth requirements of protocol L2. The analysis of L1 is simple (see <ref> [6] </ref>), and is omitted here for the sake of brevity. Following the approach first suggested in [9], the receive processing cost (time) is determined by computing the total amount of processing involved in correctly receiving a randomly chosen packet. <p> Table 1 de scribes the notation used in the analysis, some of which has been reintroduced from [11, 5]. We assume 3 In <ref> [6] </ref> we have also looked at another bandwidth metric. that processing times are arbitrarily distributed and independent of each other. We assume that the required processing times required to send and receive a packet are the same (it has been observed in [5] that they are almost the same). <p> The last term is the mean processing time required for timer routine executions. Here, (x) + = maxf0; xg. Each term has been explained in detail in <ref> [6] </ref>. Now, both (1) and (2) contain the term E [b (M M 0 )=2c] and (2) contains the term E [d (M n M n )=2e]. <p> The rest of the expressions required for evaluating the terms of equations (1) and (2) are available in <ref> [6] </ref>. <p> The overall protocol throughput for L2 is given by the minimum of the per-packet processing rates at the sender, fl L2 s = 1=E [X L2 ] and the receiver, fl L2 r = fl L2 o = minffl L2 s ; fl L2 A similar analysis is done (see <ref> [6] </ref>) to obtain the pro cessing rates at the sender, receiver and repair server for protocol L1. <p> A packet is counted if it is to be offered to a link. The expressions for E [B ! s ], E [B ! t ] where !*fL1; L2g, can be found in <ref> [6] </ref>. 6 Throughput and Bandwidth Com parisons In this section we first compare the throughput and bandwidth usage of protocols L1 and L2 with a protocol N2 [11] that does not use local recovery to establish the benefits of local recovery. <p> Since a receiver performs more processing than the sender under L1, we determine the processing power of the repair server in terms of that receiver (using equations (2) and (3) in <ref> [6] </ref>). If a repair server can match the receiver throughput then it will never be a bottleneck in a multicast session that uses protocol L1. <p> In the rare event of local recovery failure, the lost packet should be retrieved from the sender. We have used simple analysis (see <ref> [6] </ref>) to determine the expected buffer requirement at each repair server, as a function of the probability of local recovery failure (*). The expected buffer requirement depends upon the delay between the repair server and the receivers, the number of tails per repair server and the loss probability.
Reference: [7] <editor> B.N. Levine, D.B. Lavo and J. Garcia-Luna-Aceves, </editor> <title> The Case for Reliable Concurrent Mul-ticasting Using Shared Ack Trees. </title> <booktitle> Proceedings of ACM Multimedia, </booktitle> <month> November </month> <year> 1996. </year>
Reference-contexts: In Section 7 we size the repair servers. Conclusions and directions for future work are contained in Section 8. 2 Related Work Many researchers have recently proposed different approaches for local recovery. These include SRM (with local recovery enhancements) [2], LGC [3], TMTP [14], LORAX <ref> [7] </ref>, LBRM [4] and RMTP [8] and can be broadly classified as follows. LBRM and RMTP are server-based, SRM with local recovery enhancements is receiver-based with randomized local recovery, and TMTP and LORAX are receiver-based with logical tree-based recovery. LGC is a hybrid of the logical tree-based approach and SRM. <p> Previous throughput analyses have focused on comparing sender-oriented versus receiver-oriented protocols that do not use local recovery [9, 11, 5] and comparison of logical tree-based local recovery with other non-local recovery approaches <ref> [7] </ref>. In our work, we consider a richer loss model [13] and also look at bandwidth usage besides processing costs. 3 Protocol Descriptions We present server-based and receiver-based approaches to local recovery for reliable transmission of data from a sender to multiple receivers. Both approaches are NAK-based. <p> it had sent the NAK. * On detecting a loss, a repair server, after waiting for a random amount of time, multicasts a NAK 1 This repair tree is different from the logical repair tree constructed, on top of the multicast routing tree, by the reliable multicast approaches described in <ref> [7, 14] </ref>. to the sender (or its upstream repair server) and the other repair servers at the same level in the tree (for the purpose of NAK suppression among repair servers) and starts a NAK retransmission timer. <p> Interestingly, if we consider the repair servers to have the same processing power as the sender and receivers then there is an overall reduction in processing costs in the repair server based approach unless the network is small or losses are low. In <ref> [7] </ref>, Levine et al have analyzed a receiver based local recovery approach that constructs a logical tree with only the sender (as root) and the receivers on top of a multicast routing tree. <p> Instead of special repair server hosts, the non-leaf receivers take up the task of providing repair service to its children. The performance of this approach is very sensitive to the branching factor of the logical tree. We extended the analysis in <ref> [7] </ref> using our loss model and found that the logical tree approach provides excellent throughput and bandwidth performance when the branching factor is very small. However, for a large number of receivers, a smaller branching factor increases the depth of the tree resulting in longer recovery paths.
Reference: [8] <author> J.C. Lin and S. Paul, RMTP: </author> <title> A Reliable Multicast Transport Protocol. </title> <booktitle> Proceedings of IEEE Infocom 1996. </booktitle>
Reference-contexts: Conclusions and directions for future work are contained in Section 8. 2 Related Work Many researchers have recently proposed different approaches for local recovery. These include SRM (with local recovery enhancements) [2], LGC [3], TMTP [14], LORAX [7], LBRM [4] and RMTP <ref> [8] </ref> and can be broadly classified as follows. LBRM and RMTP are server-based, SRM with local recovery enhancements is receiver-based with randomized local recovery, and TMTP and LORAX are receiver-based with logical tree-based recovery. LGC is a hybrid of the logical tree-based approach and SRM.
Reference: [9] <author> S. Pingali, D. Towsley and J. Kurose, </author> <title> A Comparison of Sender-Initiated and Receiver-Initiated Reliable Multicast Protocols. </title> <booktitle> Proceedings of ACM Sigmetrics, </booktitle> <year> 1994. </year>
Reference-contexts: Our work is the first to analytically compare the throughput and bandwidth usage of the repair server (or designated host)-based and receiver-based local recovery approaches. Previous throughput analyses have focused on comparing sender-oriented versus receiver-oriented protocols that do not use local recovery <ref> [9, 11, 5] </ref> and comparison of logical tree-based local recovery with other non-local recovery approaches [7]. <p> The analysis of L1 is simple (see [6]), and is omitted here for the sake of brevity. Following the approach first suggested in <ref> [9] </ref>, the receive processing cost (time) is determined by computing the total amount of processing involved in correctly receiving a randomly chosen packet.
Reference: [10] <author> D. Tennenhouse, J. Smith, W. Sincoskie, D. Wetherall and G. Minden, </author> <title> A Survey of Active Network Research. </title> <journal> IEEE Communications Magazine, </journal> <month> January </month> <year> 1997. </year>
Reference-contexts: The repair servers themselves recover lost packets from either higher level repair servers or the sender. Co-locating repair servers with routers is functionally equivalent to placing repair services at the routers and can be accomplished using active networking mechanisms <ref> [10] </ref>. In the second approach, termed receiver-based local recovery, there are no designated repair servers; only the end hosts (sender and receivers) are involved in error recovery.
Reference: [11] <author> D. Towsley, J. Kurose and S. Pingali, </author> <title> A Comparison of Sender-Initiated and Receiver-Initiated Reliable Multicast Protocols. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 15 </volume> <pages> 398-406, </pages> <month> April </month> <year> 1997. </year>
Reference-contexts: Our work is the first to analytically compare the throughput and bandwidth usage of the repair server (or designated host)-based and receiver-based local recovery approaches. Previous throughput analyses have focused on comparing sender-oriented versus receiver-oriented protocols that do not use local recovery <ref> [9, 11, 5] </ref> and comparison of logical tree-based local recovery with other non-local recovery approaches [7]. <p> Table 1 de scribes the notation used in the analysis, some of which has been reintroduced from <ref> [11, 5] </ref>. We assume 3 In [6] we have also looked at another bandwidth metric. that processing times are arbitrarily distributed and independent of each other. <p> The expressions for E [B ! s ], E [B ! t ] where !*fL1; L2g, can be found in [6]. 6 Throughput and Bandwidth Com parisons In this section we first compare the throughput and bandwidth usage of protocols L1 and L2 with a protocol N2 <ref> [11] </ref> that does not use local recovery to establish the benefits of local recovery. N2 is a receiver oriented protocol that uses global NAK suppression and is shown to have the highest protocol throughput among global recovery schemes [11]. Next we compare the performances of L1 and L2. <p> and bandwidth usage of protocols L1 and L2 with a protocol N2 <ref> [11] </ref> that does not use local recovery to establish the benefits of local recovery. N2 is a receiver oriented protocol that uses global NAK suppression and is shown to have the highest protocol throughput among global recovery schemes [11]. Next we compare the performances of L1 and L2. In computing L1's throughput we assume that the repair server has sufficient processing power and is never a bottleneck. The processing power required for this to be true is determined in the next section.
Reference: [12] <author> D. Towsley, </author> <title> An Analysis of a Point-to-Multipoint Channel Using a Go-Back-N Error Control Protocol. </title> <journal> IEEE Transactions on Communications, </journal> <volume> 33 </volume> <pages> 282-285, </pages> <month> March </month> <year> 1985. </year>
Reference-contexts: The end-to-end loss probability as seen by a receiver, p, is equal to 1 (1 p l ) 2 . We also assume that NAKs are never lost. This assumption could be relaxed by following the analysis given in <ref> [12] </ref>. Let there be one source link and T tail links where each tail link has several receivers. Let each upstream backbone router at the edge of the backbone have k tail links. The number of such backbone routers, W is equal to T =k.
Reference: [13] <author> M. Yajnik, J. Kurose and D. Towsley, </author> <title> Packet Loss Correlation in the MBone Multicast Network. </title> <booktitle> Proceedings of Global Internet Conference, </booktitle> <month> November </month> <year> 1996. </year>
Reference-contexts: Previous throughput analyses have focused on comparing sender-oriented versus receiver-oriented protocols that do not use local recovery [9, 11, 5] and comparison of logical tree-based local recovery with other non-local recovery approaches [7]. In our work, we consider a richer loss model <ref> [13] </ref> and also look at bandwidth usage besides processing costs. 3 Protocol Descriptions We present server-based and receiver-based approaches to local recovery for reliable transmission of data from a sender to multiple receivers. Both approaches are NAK-based. <p> As described above, protocol L2 is easily generalized to multiple levels of recovery. 4 System Model In this section we present the network loss and system model that will be used for the performance analysis of protocols L1 and L2. In <ref> [13] </ref> Yajnik et al have observed that most losses take place in the links from the source site to the backbone (we call this the source link) and in the links (called "tail links") from the backbone to the individual sites (termed stub domains in [1]), as shown in Figure 1. <p> It is also worth exploring the use of repair servers for congestion control. Future work can proceed in the following directions. The system model could be extended to take into account temporal correlation in the network loss <ref> [13] </ref> and to also consider more complex topologies with heterogeneity. In determining the buffer requirement at a repair server, we considered failure of local recovery due to limiting the number of retransmissions from the repair server.
Reference: [14] <author> R. Yavatkar, J. Griffioen and M. Sudan, </author> <title> A Reliable Dissemination Protocol for Interactive Collaborative Applications. </title> <booktitle> Proceeding of ACM Multimedia, </booktitle> <month> November </month> <year> 1995. </year>
Reference-contexts: In Section 7 we size the repair servers. Conclusions and directions for future work are contained in Section 8. 2 Related Work Many researchers have recently proposed different approaches for local recovery. These include SRM (with local recovery enhancements) [2], LGC [3], TMTP <ref> [14] </ref>, LORAX [7], LBRM [4] and RMTP [8] and can be broadly classified as follows. LBRM and RMTP are server-based, SRM with local recovery enhancements is receiver-based with randomized local recovery, and TMTP and LORAX are receiver-based with logical tree-based recovery. <p> it had sent the NAK. * On detecting a loss, a repair server, after waiting for a random amount of time, multicasts a NAK 1 This repair tree is different from the logical repair tree constructed, on top of the multicast routing tree, by the reliable multicast approaches described in <ref> [7, 14] </ref>. to the sender (or its upstream repair server) and the other repair servers at the same level in the tree (for the purpose of NAK suppression among repair servers) and starts a NAK retransmission timer.
References-found: 14

