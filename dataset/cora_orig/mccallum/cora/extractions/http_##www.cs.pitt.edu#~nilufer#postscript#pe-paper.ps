URL: http://www.cs.pitt.edu/~nilufer/postscript/pe-paper.ps
Refering-URL: http://www.cs.pitt.edu/~nilufer/paper-guide-nilufer.html
Root-URL: 
Email: nilufer@cs.pitt.edu  pollack@cs.pitt.edu  
Title: Contingency Selection in Plan Generation  
Author: Nilufer Onder Martha E. Pollack 
Address: Pittsburgh Pittsburgh, PA 15260  Pittsburgh Pittsburgh, PA 15260  
Affiliation: Department of Computer Science University of  Department of Computer Science and Intelligent Systems Program University of  
Abstract: A key question in conditional planning is: how many, and which of the possible execution failures should be planned for? One cannot, in general, plan for all the possible failures because the search space is too large. One cannot ignore all the possible failures, or one will fail to produce sufficiently flexible plans. In this paper, we describe an approach to conditional planning that attempts to identify the contingencies that contribute the most to a plan's overall utility. Plan generation proceeds by handling the most important contingencies first, extending the plan to include actions that will be taken in case the contingency fails. We discuss the representational issues that must be addressed in order to implement such an algorithm, and present an example which illustrates our approach. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Dean, T.; Kaelbling, L. P.; Kirman, J.; and Nicholson, A. </author> <year> 1995. </year> <title> Planning under time constraints in stochastic domains. </title> <booktitle> Artificial Intelligence 76 </booktitle> <pages> 35-74. </pages>
Reference-contexts: A key question in conditional planning 1 Recognizing this problem, <ref> (Dean et al. 1995) </ref> describes an algorithm that starts with an initial policy for a restricted set of states, and constructs policies for increasingly large sets of states. is: how many, and which contingencies should be selected so that the plan can be extended to include actions that will be taken
Reference: <author> Draper, D.; Hanks, S.; and Weld, D. </author> <year> 1994. </year> <title> Probabilistic planning with information gathering and contingent execution. </title> <booktitle> In Proc. 2nd Int. Conf. on AI Planning Systems, </booktitle> <pages> 31-36. </pages>
Reference-contexts: The proposition referred to in the subject of an observation action cannot occur in a trigger expression of the same action. But the subject and the label of a consequence can refer to the same proposition. This observe action representation is similar to C-BURIDAN's <ref> (Draper, Hanks, & Weld 1994) </ref>. However, C-BURIDAN labels are arbitrary strings that do not relate to propositions, and the subject of the sensor reading is not distinguished.
Reference: <author> Etzioni, O.; Hanks, S.; Weld, D.; Draper, D.; Lesh, N.; and Williamson, M. </author> <year> 1992. </year> <title> An approach to planning with incomplete information. </title> <booktitle> In Proc. 3rd Int. Conf. on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> 115-125. </pages>
Reference: <author> Goldman, R. P., and Boddy, M. S. </author> <year> 1994. </year> <title> Epsilon-safe planning. </title> <booktitle> In Proc. 10th Conf. on Uncertainty in AI, </booktitle> <pages> 253-261. </pages>
Reference-contexts: In the process of doing this, C-BURIDAN does not reason about whether both those contingent outcomes are worth planning for. The PLINTH system skips certain contexts during the construction of probabilistic plans <ref> (Goldman & Boddy 1994) </ref>. Our approach differs from theirs in two aspects. First, we are focusing on partial-ordering, where they use a total-order approach. Second, we consider the impact of failure in addition to the probability of failure.
Reference: <author> Haddawy, P., and Hanks, S. </author> <year> 1993. </year> <title> Utility models for goal-directed decision-theoretic planners. </title> <type> Technical Report 93-06-04, </type> <institution> Department of Computer Science and Engineering, University of Washington. </institution>
Reference-contexts: For the current paper, however, we make two strong simplifying assumptions. First, we assume that the top-level goals for any planning problem can be decomposed into subgoals, each of which can be assigned a fixed scalar value. Moreover, they are utility independent <ref> (Haddawy & Hanks 1993) </ref>, i.e., the utility of one subgoal does not depend on the degree to which any other goals are satisfied. Second, we assume that all failures are equally difficult to recover from at execution time.
Reference: <author> Haddawy, P., and Suwandi, M. </author> <year> 1994. </year> <title> Decision-theoretic refinement planning using inheritance abstraction. </title> <booktitle> In Proc. 2nd Int. Conf. on AI Planning Systems, </booktitle> <pages> 266-271. </pages>
Reference-contexts: Second, we consider the impact of failure in addition to the probability of failure. Other relevant work includes the recent decision-theoretic planning literature, e.g., the PYRRHUS system (Williamson & Hanks 1994) which prunes the search space by using domain-specific heuristic knowledge, and the DRIPS system <ref> (Haddawy & Suwandi 1994) </ref> which uses an abstraction hierarchy. (Kambham-pati 1994) describes planning algorithms with multi-contributor causal links. Our algorithm maintains multiple contributors at the action outcome level in a probabilistic setting.
Reference: <author> Kambhampati, S. </author> <year> 1994. </year> <title> Multi-contributor causal structures for planning: a formalization and evaluation. </title> <booktitle> Artificial Intelligence 69 </booktitle> <pages> 235-278. </pages>
Reference: <author> Kushmerick, N.; Hanks, S.; and Weld, D. S. </author> <year> 1995. </year> <title> An algorithm for probabilistic planning. </title> <booktitle> Artificial Intelligence 76 </booktitle> <pages> 239-286. </pages>
Reference-contexts: In what follows, we formalize these notions. We adapt the representation for probabilistic actions that was developed for BURIDAN <ref> (Kushmerick, Hanks, & Weld 1995, p. 247) </ref>. Throughout this paper, we will use the term state to refer to a complete description of the world at any instant. The probability of an expression e with respect to a state st is defined as: P [ejst] = 0; otherwise.
Reference: <author> Peot, M. A., and Smith, D. E. </author> <year> 1992. </year> <title> Conditional nonlinear planning. </title> <booktitle> In Proc. 1st Int. Conf. on AI Planning Systems, </booktitle> <pages> 189-197. </pages>
Reference: <author> Pryor, L., and Collins, G. </author> <year> 1993. </year> <title> Cassandra: Planning for contingencies. </title> <type> Technical Report 41, </type> <institution> The Institute for the Learning Sciences, Northwestern University. </institution>
Reference: <author> Williamson, M., and Hanks, S. </author> <year> 1994. </year> <title> Optimal planning with a goal-directed utility model. </title> <booktitle> In Proc. 2nd Int. Conf. on AI Planning Systems, </booktitle> <pages> 176-181. </pages>
Reference-contexts: Our approach differs from theirs in two aspects. First, we are focusing on partial-ordering, where they use a total-order approach. Second, we consider the impact of failure in addition to the probability of failure. Other relevant work includes the recent decision-theoretic planning literature, e.g., the PYRRHUS system <ref> (Williamson & Hanks 1994) </ref> which prunes the search space by using domain-specific heuristic knowledge, and the DRIPS system (Haddawy & Suwandi 1994) which uses an abstraction hierarchy. (Kambham-pati 1994) describes planning algorithms with multi-contributor causal links. Our algorithm maintains multiple contributors at the action outcome level in a probabilistic setting.
References-found: 11

