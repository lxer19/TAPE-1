URL: http://www-icparc.doc.ic.ac.uk/papers/dam97.ps
Refering-URL: http://www-icparc.doc.ic.ac.uk/papers.html
Root-URL: 
Title: Binary Decisions for Solving 3-Satisfiability Problems  
Author: R. Rodosek a I. Schiermeyer b 
Address: College, SW7-2AZ London, England  D-03013 Cottbus, Germany  
Affiliation: a IC-Parc, William Penney Laboratory, Imperial  b Lehrstuhl fur Diskrete Mathematik und Grundlagen der Informatik, Technische Universitat Cottbus,  
Abstract: The paper presents an algorithm which improves the worst-case performance of the current well-known 3-satisfiability algorithms. We show that the improved upper bound O(1:415 n ) is achieved by a simple extension of the Davis-Putnam algorithm using further simplification procedures and more sophisticated decision strategies. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Beigel and D. Eppstein, </author> <title> 3-coloring in time O(1:3446 n ): a No-MIS algorithm, </title> <note> Technical Report ECCC TR95-33 (1995). </note>
Reference-contexts: New algorithms [1,7,8,10-12] with improved worst-case performance consider mostly 3-satisfiability (3-SAT) problems represented in conjunctive normal form (CNF). The papers report the upper bound complexity relative to different parameters. Consider the number m of clauses, Beigel and Eppstein <ref> [1] </ref> have presented an algorithm which takes O (1:381 m ) time. The algorithm is based on the idea to solve 3-SAT problems partially by restricting each 3-clause to a 2-clause. <p> We construct an algorithm which guarantees a solution in time less than O (1:415 n ) time. Consider the relationship between parameters m and n by Beigel and Eppstein in <ref> [1] </ref>, our bound represents an improvement for 3-SAT problems in which the number of clauses is greater than 1:075n. The paper is organised as follows. In Section 2 we define satisfiability problems and present a generic algorithm for solving these problems.
Reference: [2] <author> N. L. </author> <title> Biggs, </title> <publisher> Discrete mathematics (Oxford Science Publications, </publisher> <address> New York, </address> <year> 1994). </year>
Reference-contexts: The time complexity of the algorithm can be derived by recursive equations. We denote F k (n) the maximum number of decisions needed to solve a problem of class P (k; n). According to the binary decisions in decision strategy D inst , the following recursive Fibonacci inequations <ref> [2] </ref> are derived: F 3 (n) 1 + F 2 (n 1) + F 3 (n 1) Since the class of 3-SAT problems is NP-complete [6], the time complexity of the algorithm is O (x n ), 1 &lt; x 2.
Reference: [3] <author> J. R. Bitner and E. M. Reingold, </author> <title> Backtrack programming techniques, </title> <booktitle> Communications of the ACM 18 (1975) 651-655. </booktitle>
Reference-contexts: In Section 3 we use another decision strategy which returns equality between two variables, i.e. dec = ffv 1 ; :v 2 g, f:v 1 ; v 2 gg. The common strategy for solving satisfiability problems is to use simplification procedures during the backtrack search <ref> [3] </ref>. If the simplified problem contains the empty clause -, then a dead-end situation occurs, the algorithm "backtracks" to the most recent decision, changes this decision to its complement and continues from there.
Reference: [4] <author> M. Davis and H. Putnam, </author> <title> A Computing Procedure for Quantified Theories, </title> <journal> J. </journal> <note> ACM 7(3) (1960) 201-215. 11 </note>
Reference-contexts: The definition of O (A) + O (B) and the proof of O (A + B) = O (A) + O (B) can be found in [9]. A general scheme of worst-case algorithms for solving satisfiability problems generalises the standard Davis-Putnam algorithm <ref> [4] </ref> in two directions: the scheme allows additional simplification procedures and more sophisticated decision strategies. First, a simplified problem of is a satisfiability problem 0 with solutions which can be extended to a solution of by assigning values to variables of V V 0 . <p> Step 1 simplifies the problem by applying a sequence of simplification procedures. Step 4 represents a decision strategy which returns a decision for the simplified problem. In the following, every algorithm in the general scheme 4 can be represented by a pair (Simplification Procedures, Decision Strategy). The Davis-Putnam algorithm <ref> [4] </ref> is ((S taut1 , S literal , S unit ), D inst ) where - Literal-tautology. S taut1 is a simplification procedure which reduces clause c [ fl; :lg to clause c. The simplified problem contains clauses without complemented literals.
Reference: [5] <author> R. E. Fikes, REF-ARF: </author> <title> a system for solving problems stated as procedures, </title> <booktitle> Artificial Intelligence 1 (1970) 27-120. </booktitle>
Reference: [6] <author> M. R. Garey and D. S. Johnson, </author> <title> Computers and intractability (W. </title> <editor> H. </editor> <publisher> Freeman and Company, </publisher> <address> San Francisco, </address> <year> 1979). </year>
Reference-contexts: A solution to the problem is an 2 assignment of values to variables of V such that at least one variable of each clause in formula F is assigned by value true. To derive a solution to is a well-known NP-complete problem <ref> [6] </ref>. <p> According to the binary decisions in decision strategy D inst , the following recursive Fibonacci inequations [2] are derived: F 3 (n) 1 + F 2 (n 1) + F 3 (n 1) Since the class of 3-SAT problems is NP-complete <ref> [6] </ref>, the time complexity of the algorithm is O (x n ), 1 &lt; x 2.
Reference: [7] <author> O. Kullman, </author> <title> Methods for 3-SAT-Decisions in less than 1:5045 n Steps, </title> <note> preprint (1994). </note>
Reference-contexts: It is tested in polynomial time whether the partial solution of 2-SAT instances can be extended to a complete satisfiability. Preprint submitted to Elsevier Science 20 August 1997 Consider the number n of variables, the worst-case analysis we are aware of are investigated by Monien and Speckenmeyer [8], Kullmann <ref> [7] </ref>, Schier-meyer [11,12], and Rodosek [10]. Monien and Speckenmeyer have presented an algorithm using the "autark" truth assignments test and it takes O (1:619 n ) time.
Reference: [8] <author> B. Monien and E. Speckenmeyer, </author> <title> Solving satisfiability in less than 2 n steps, </title> <journal> Discrete Appl. Math. </journal> <month> 10 </month> <year> (1985) </year> <month> 287-295. </month>
Reference-contexts: It is tested in polynomial time whether the partial solution of 2-SAT instances can be extended to a complete satisfiability. Preprint submitted to Elsevier Science 20 August 1997 Consider the number n of variables, the worst-case analysis we are aware of are investigated by Monien and Speckenmeyer <ref> [8] </ref>, Kullmann [7], Schier-meyer [11,12], and Rodosek [10]. Monien and Speckenmeyer have presented an algorithm using the "autark" truth assignments test and it takes O (1:619 n ) time.
Reference: [9] <editor> K. R. Reischuk, Einfuhrung in die Komplexitatstheorie (B. G. </editor> <publisher> Teubner, Stuttgart, </publisher> <year> 1990). </year>
Reference-contexts: The definition of O (A) + O (B) and the proof of O (A + B) = O (A) + O (B) can be found in <ref> [9] </ref>. A general scheme of worst-case algorithms for solving satisfiability problems generalises the standard Davis-Putnam algorithm [4] in two directions: the scheme allows additional simplification procedures and more sophisticated decision strategies.
Reference: [10] <author> R. Rodosek, </author> <title> A new approach on solving 3-satisfiability, </title> <booktitle> Proceedings Third International Conference on Artificial Intelligence and Symbolic Mathematical Computation (Springer-Verlag, </booktitle> <address> LNCS-1138, </address> <year> 1996) </year> <month> 197-212. </month>
Reference-contexts: Preprint submitted to Elsevier Science 20 August 1997 Consider the number n of variables, the worst-case analysis we are aware of are investigated by Monien and Speckenmeyer [8], Kullmann [7], Schier-meyer [11,12], and Rodosek <ref> [10] </ref>. Monien and Speckenmeyer have presented an algorithm using the "autark" truth assignments test and it takes O (1:619 n ) time. Kullmann has established a method with a very complex analysis (53 pages) to solve 3-SAT problems in less than O (1:505 n ) time. <p> The general heuristic improves the current well-known 3-SAT algorithm with the lowest bound O (1:476 n ) time <ref> [10] </ref>. 5 Conclusions The paper gives two main results: first, a framework for building more sophisticated algorithms for solving satisfiability problems yielding even better upper bounds, and second, an algorithm which improves the current well-known 3 SAT algorithms. These results highlight many questions for the future work.
Reference: [11] <author> I. Schiermeyer, </author> <title> Solving 3-satisfiability in less than 1:579 n steps, </title> <booktitle> Proceedings 6th Workshop Computer Science Logic (Springer-Verlag, </booktitle> <address> LNCS-702, </address> <year> 1993) </year> <month> 379-394. </month>
Reference: [12] <author> I. Schiermeyer, </author> <title> Pure Literal Look-Ahead: An O(1; 497 n ) 3-Satisfiability Algorithm, Proceedings 1st Satisfiability Workshop in Siena (Report No. </title> <type> 96-230, </type> <institution> Universitat zu Koln, </institution> <year> 1996) </year> <month> 127-136. 12 </month>
References-found: 12

