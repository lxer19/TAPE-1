URL: http://titan.cs.uni-bonn.de/~bennewit/PUBL/subaaai99.ps.gz
Refering-URL: http://titan.cs.uni-bonn.de/~bennewit/
Root-URL: http://cs.uni-bonn.de
Email: email: beetz, bennewit@cs.uni-bonn.de  
Title: Combining Strategical and Tactical Decisions in Scheduling Office Delivery Activities  
Author: Michael Beetz and Maren Bennewitz 
Address: Roemerstr. 164, D-53117 Bonn, Germany,  
Affiliation: University of Bonn, Dept. of Computer Science III,  
Abstract: This paper investigates a novel approach to integrating tactical and strategical decision making and applies it to scheduling the operation of autonomous robot office couriers. In this approach the robot makes strategical (farsighted) decisions while it executes a plan using tactical (immediate) decisions and overwrites tactical decisions after strategical decisions have been reached (if necessary). The novel features of this approach are that tactical and strategical decision making is implemented as plan transformation and specified using declarative plan transformation rules. The advantages are that (1) decisions are represented explicitly so that they can be revised again and (2) that all decision making is specified within the plan and not hidden in a separate execution system. We present experiments in which the approach is used to control two autonomous mobile robots. In one of them it controlled the course of action of a museums tourguide robot that has operated for thirteen days, more than 94 hours, and presented 2668 exhibits. 
Abstract-found: 1
Intro-found: 1
Reference: [ Alami et al., 1998 ] <author> R. Alami, R. Chatila, S. Fleury, M. Ghallab, and F. Ingrand. </author> <title> An architecture for autonomy. </title> <journal> Int. J. of Robotics Research, </journal> <year> 1998. </year>
Reference: [ Beetz and Bennewitz, 1998 ] <author> M. Beetz and M. Bennewitz. </author> <title> Planning, scheduling, and plan execution for autonomous robot office couriers. </title> <editor> In R. Bergmann and A. Kott, editors, </editor> <title> Integrating Planning, Scheduling and Execution in Dynamic and Uncertain Environments, </title> <booktitle> volume Workshop Notes 98-02. </booktitle> <publisher> AAAI Press, </publisher> <year> 1998. </year>
Reference-contexts: We apply different scheduling methods a fast heuristic one that generates good schedules for simple problem variants (a variant of the one described in <ref> [ Beetz and Bennewitz, 1998 ] </ref> ) and a computationally expensive one that searches for the best schedule with respect to the given objective function. This scheduler is realized through an anytime algorithm that runs as a background process.
Reference: [ Beetz and McDermott, 1994 ] <author> M. Beetz and D. McDermott. </author> <title> Improving robot plans during their execution. </title> <editor> In Kris Hammond, editor, </editor> <booktitle> Second International Conference on AI Planning Systems, </booktitle> <pages> pages 312, </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1994. </year>
Reference: [ Beetz and McDermott, 1996 ] <author> M. Beetz and D. McDermott. </author> <title> Local planning of ongoing activities. </title> <editor> In Brian Drabble, editor, </editor> <booktitle> Third International Conference on AI Planning Systems, pages 1926, </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1996. </year>
Reference-contexts: Plans that satisfy this feature are called restartable, which simply means that each subplan keeps a record of its execution state and if started from anew skips the parts of the plan that do not have to be executed any more <ref> [ Beetz and McDermott, 1996 ] </ref> . We can make the delivery plans restartable by equipping every delivery plan p with a variable storing the execution state that is used as a guard that determines which subplans are to be executed.
Reference: [ Beetz and McDermott, 1997 ] <author> M. Beetz and D. McDermott. </author> <title> Expressing transformations of structured reactive plans. </title> <booktitle> In Recent Advances in AI Planning. Proceedings of the 1997 Euro-pean Conference on Planning, </booktitle> <pages> pages 6476. </pages> <publisher> Springer Publishers, </publisher> <year> 1997. </year>
Reference: [ Bonasso et al., 1997 ] <author> P. Bonasso, J. Firby, E. Gat, D. Kortenkamp, D. Miller, and M. Slack. </author> <title> Experiences with an architecture for intelligent, reactive agents. </title> <journal> Journal of Experimental and Theoretical Artificial Intelligence, </journal> <volume> 9(1), </volume> <year> 1997. </year>
Reference-contexts: For example, Simmons et al. [ 1997 ] only consider goals with the highest priority and tasks that can be accomplished on the way. This approach searches for local optima but fails to recognize global consequences of decisions. Layered architectures <ref> [ Bonasso et al., 1997 ] </ref> run planning and execution at different levels of abstraction and different time scales where a sequencing layer synchronizes between both of levels. In these approaches the plans provide only guidelines for execution. <p> This RPL controller has a fixed semantics (although this semantics hasn't been defined yet). This is an important advantage over approaches in which important decision making is hidden in a separate execution system (e.g. <ref> [ Bonasso et al., 1997 ] </ref> ).
Reference: [ Burgard et al., 1998 ] <author> W. Burgard, A.B. Cremers, D. Fox, D. Hahnel, G. Lakemeyer, D. Schulz, W. Steiner, and S. Thrun. </author> <title> The interactive museum tour-guide robot. </title> <booktitle> In Proc.of the Fifteenth National Conference on Artificial Intelligence, </booktitle> <address> Madison, Wi, </address> <year> 1998. </year>
Reference-contexts: 1 Introduction Autonomous service robots such as office couriers [ Simmons et al., 1997 ] or museum tourguides <ref> [ Burgard et al., 1998 ] </ref> have become challenging testbeds for developing and testing computational models of competent agency. Such robots must accomplish complex jobs in changing environments where they face familiar but often not completely known situations. <p> What should the robot do in such situations? How should it continue its intended course of action? How can it complete failed commands successfully? There are several solutions to this kind of decision problems. The first one is to generate a complete plan for the new situation from scratch <ref> [ Burgard et al., 1998 ] </ref> . This stop and replan strategy is the best solution as long as planning is very fast.
Reference: [ Firby, 1989 ] <author> J. Firby. </author> <title> Adaptive Execution in Complex Dynamic Worlds. </title> <type> Technical report 672, </type> <institution> Yale University, Department of Computer Science, </institution> <month> January </month> <year> 1989. </year>
Reference-contexts: In these approaches the plans provide only guidelines for execution. Yet other approaches use fast local criteria to make the decisions <ref> [ Firby, 1989 ] </ref> or make no committment on how to make such decisions [ Georgeff and Ingrand, 1989 ] . In our approach decision making processes have two components: a tactical and a strategic one. The tactical decision is concerned with how to continue in this very moment.
Reference: [ Georgeff and Ingrand, 1989 ] <author> M. Georgeff and F. Ingrand. </author> <title> Decision making in an embedded reasing system. </title> <booktitle> In Proc. of the 11 th IJCAI, </booktitle> <pages> pages 972978, </pages> <address> Detroit, MI, </address> <year> 1989. </year>
Reference-contexts: In these approaches the plans provide only guidelines for execution. Yet other approaches use fast local criteria to make the decisions [ Firby, 1989 ] or make no committment on how to make such decisions <ref> [ Georgeff and Ingrand, 1989 ] </ref> . In our approach decision making processes have two components: a tactical and a strategic one. The tactical decision is concerned with how to continue in this very moment.
Reference: [ McDermott, 1991 ] <author> D. McDermott. </author> <title> A reactive plan language. </title> <institution> Research Report YALEU/DCS/RR-864, Yale University, </institution> <year> 1991. </year>
Reference-contexts: Section 4 presents experiments in which FAXBOT schedules its delivery jobs based on partial information and reschedules its activities to avoid task failures and exploit opportunities. 2 Representing the Intended Course of Action FAXBOT's delivery routines are implemented in RPL (Reactive Plan Language) <ref> [ McDermott, 1991 ] </ref> . RPL provides conditionals, loops, program variables, processes, and subroutines. <p> Language) <ref> [ McDermott, 1991 ] </ref> . RPL provides conditionals, loops, program variables, processes, and subroutines. RPL also places high-level constructs (interrupts, monitors) to synchronize parallel physical actions and make plans reactive and robust by incorporating sensing and monitoring actions, and reactions triggered by observed events at the programmer's disposal (see [ McDermott, 1991 ] for details). The FAXBOT controller is structured in a modular and transparent way such that automatic plan transformation techniques can retrieve parts of the plan easily and modify the plan without making it opaque for subsequent plan revisions.
Reference: [ McDermott, 1992 ] <author> D. McDermott. </author> <title> Transformational planning of reactive behavior. </title> <institution> Research Report YALEU/DCS/RR-941, Yale University, </institution> <year> 1992. </year>
Reference-contexts: Besides the related approaches for incorporating strategical decisions into autonomous agent control that we have already discussed in the introduction the main areas of related work are: intelligent scheduling [ Zweben and Fox, 1994 ] , resource-adaptive decision methods [ Zilberstein, 1996 ] , and transformational planning of reactive behavior <ref> [ McDermott, 1992 ] </ref> . A number of approaches have been applied to activity scheduling in autonomous agent control.
Reference: [ McVey et al., 1997 ] <author> C. McVey, E. Atkins, E. Durfee, and K. Shin. </author> <title> Development of iterative real-time scheduler to planner feedback. </title> <booktitle> In Proceedings of the 15th Int. Joint Conf. on Artificial Intelligence (IJCAI-87), </booktitle> <pages> pages 12671272, </pages> <year> 1997. </year>
Reference: [ Pell et al., 1997 ] <author> B. Pell, D. Bernard, S. Chien, E. Gat, N. Muscet-tola, P. Nayak, M. Wagner, and B. Williams. </author> <title> An autonomous spacecraft agent prototype. </title> <booktitle> In Proceedings of the First International Conference on Autonomous Agents, </booktitle> <year> 1997. </year>
Reference: [ Simmons et al., 1997 ] <author> Reid G. Simmons, Richard Goodwin, Karen Zita Haigh, Sven Koenig, Joseph O'Sullivan, and Manuela M. Veloso. Xavier: </author> <title> Experience with a layered robot architecture. </title> <journal> ACM magazine Intelligence, </journal> <year> 1997. </year>
Reference-contexts: 1 Introduction Autonomous service robots such as office couriers <ref> [ Simmons et al., 1997 ] </ref> or museum tourguides [ Burgard et al., 1998 ] have become challenging testbeds for developing and testing computational models of competent agency. Such robots must accomplish complex jobs in changing environments where they face familiar but often not completely known situations.
Reference: [ Zilberstein, 1996 ] <author> S. Zilberstein. </author> <title> Using anytime algorithms in intelligent systems. </title> <journal> AI Magazine, </journal> <volume> 17(3):7383, </volume> <year> 1996. </year>
Reference-contexts: Additional Related Work. Besides the related approaches for incorporating strategical decisions into autonomous agent control that we have already discussed in the introduction the main areas of related work are: intelligent scheduling [ Zweben and Fox, 1994 ] , resource-adaptive decision methods <ref> [ Zilberstein, 1996 ] </ref> , and transformational planning of reactive behavior [ McDermott, 1992 ] . A number of approaches have been applied to activity scheduling in autonomous agent control.
Reference: [ Zweben and Fox, 1994 ] <author> M. Zweben and M. S. Fox. </author> <title> Intelligent Scheduling. </title> <publisher> Morgan Kaufmann, </publisher> <year> 1994. </year> <title> Remark. Due to the fact that our hardware platform has been broken for several weeks the experiments 1 and 3 have been carried out on our robot simulator. If the paper gets accepted they will be replaced by runs on the real robot. </title>
Reference-contexts: Additional Related Work. Besides the related approaches for incorporating strategical decisions into autonomous agent control that we have already discussed in the introduction the main areas of related work are: intelligent scheduling <ref> [ Zweben and Fox, 1994 ] </ref> , resource-adaptive decision methods [ Zilberstein, 1996 ] , and transformational planning of reactive behavior [ McDermott, 1992 ] . A number of approaches have been applied to activity scheduling in autonomous agent control.
References-found: 16

