URL: ftp://ftp.cse.ucsc.edu/pub/tr/ucsc-crl-94-39.ps.Z
Refering-URL: ftp://ftp.cse.ucsc.edu/pub/tr/README.html
Root-URL: http://www.cse.ucsc.edu
Title: An Iterative Approach for Delay-Bounded Minimum Steiner Tree Construction  
Author: Qing Zhu Mehrdad Parsa Wayne W.M. Dai 
Keyword: Steiner tree, minimum Steiner tree, delay-bounded minimum Steiner tree, routing, delay-bounded routing, layout, timing-driven layout, shortest path, feasible search optimization  
Address: Santa Cruz, CA 95064  
Affiliation: Board of Studies in Computer Engineering University of California,  
Pubnum: UCSC-CRL-94-39,  
Email: qingz, courant, dai@cse.ucsc.edu  
Date: Oct. 1994  
Abstract: This paper presents a delay-bounded minimum Steiner tree algorithm. The delay bounds, given as inputs to the algorithm, can be different for each individual source-sink connection. The approach is based on feasible search optimization that satisfies the delay bounds first, then improves the routing tree for the cost minimization. Iterative cut-and-link tree transformation constrained by delay bounds provides an efficient technique to reduce the cost. Once reasonable delay bounds are set, this algorithm constructs Steiner trees with the correct timing, and by experiments the costs are always less than the trees obtained by a well-known, provably near-optimal Steiner-tree heuristic within the factor 2(1 1 jSj ) of the optimal Steiner tree for jSj sinks. In order to satisfy given delay bounds, we also propose a new algorithm to construct a maximal-delay-slack tree based on the global information of sink delay slacks. The use of our algorithm is especially attractive for deep-submicron VLSI layout or MCM substrate layout where the interconnect resistance is comparable to the driver on-resistance, when the minimal delay tree may have an unacceptably high cost while the traditional minimum Steiner tree fails the delay requirements. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C.J. Alpert, T.C. Hu, J.H. Huang, </author> <title> and A.B. Kahng. A direct combination of the prim and dijkstra constructions for improved performance-driven global routing. </title> <booktitle> Proceedings of IEEE Intl. Symposium on Circuits and Systems, </booktitle> <year> 1993. </year>
Reference-contexts: The radius-cost trade-off tree can be viewed as the one constructed between the minimum spanning tree (MST) (or minimum Steiner tree) and the shortest-path tree (SPT); Alpert, Hu, Huang and Kahng proposed a algorithm <ref> [1] </ref> which makes this MST-SPT combination in the tree construction. Cong, Leung and Zhou [13] optimized special Steiner arborescences called A-trees to make the MST-SPT trade off.
Reference: [2] <author> B. Awerbuch, A. Baratz, and D. Peleg. </author> <title> Cost-sensetive analysis of communication protocols. </title> <booktitle> In Proc. ACM Symp. on Principles of Distributed Computing, </booktitle> <pages> pages 177-187, </pages> <year> 1990. </year>
Reference-contexts: A similar approach is also proposed by Awerbuch, Baratz and Peleg <ref> [2] </ref>. Lim, Cheng and Wu [30] proposed a modified version of Prim's minimum spanning tree algorithm to control the radius for individual source-sinks connections.
Reference: [3] <author> H. Bakoglu. </author> <title> Circuits, Interconnections, and Packaging for VLSI. </title> <publisher> Addison-Wesley Publishing Company, </publisher> <year> 1987. </year>
Reference-contexts: 1 Introduction As feature sizes shrink to 0:5 micron and less, we enter the era of deep-submicron VLSI designs. According to the interconnect scaling theory <ref> [3] </ref>, the interconnect resistance is rapidly increased proportional to the square of the scaling factor, such that the interconnect resistance becomes comparable to gate on-resistance. Meanwhile, as the gate delays and gate sizes are scaled down, the interconnect delays become more dominant. <p> The technology parameters for the delay model are given in Table 1. The values for the 1m CMOS are obtained from MOSIS. The values for the 0.5 and 0.3 m 26 CMOSs are extrapulated from the 1m CMOS using scaling formulas <ref> [3] </ref>. That is, as the feature size scales by a factor S, the resistance per unit length scales as S 2 , the capacitance per unit length remains constant, and the gate capacitance is decreased by 1=S.
Reference: [4] <author> J. Benkoski and A. J. Strojwas. </author> <title> The role of timing verification in layout synthesis. </title> <booktitle> In Proc. of 29th Design Automation Conf., </booktitle> <pages> pages 612-619, </pages> <year> 1992. </year> <month> 31 </month>
Reference: [5] <author> K. D. Boese, A. B. Kahng, B.A. Mccoy, and G. Robins. </author> <title> Near-optimal critical sink routing tree constructions. </title> <type> In technical report TR-930027, UCLA CS Department, </type> <pages> pages 1-43, </pages> <year> 1993. </year>
Reference-contexts: Boese, Kahng, McCoy and Robins have proposed several methods <ref> [5, 6, 7] </ref> to minimize the delays at identified critical sinks; i.e. the optimal tree minimizes the linear combination of sink delays f = P k where ff i (ff i 0) is the the criticality of the sink s i . <p> BB-SORT constructs the near-optimal tree that minimizes the maximal Elmore delay of the routing tree. Although BB-SORT-C and BB-SORT have exponential time complexity, they provides the optimal or near-optimal solutions for the empirical analysis of other heuristics. Boese, Kahng and Robins also proposed two heuristics <ref> [5, 7, 6] </ref> for the minimum Elmore delay Steiner trees: SERT and SERT-C. SERT is a modified Prim's algorithm when adding sinks to the tree it minimizes the maximal Elmore delay of the routing tree. SERT-C is a modification of SERT that minimizes the delay at a single critical sink. <p> A variant of the Elmore delay model, combining with an RC line delay model [36], has also been used in other timing-driven routing algorithms [33, 24]. Boese, Khang, Mccoy and Robins <ref> [5] </ref> shows the good fidelity of using Elmore delay model [17] to guide a optimum delay routing tree compared to a optimum tree guided by SPICE simulation. 6 specified). 3 Overview of DBMST Approach The approach and optimization technique adopted here are based on an order that satisfies the delay bounds
Reference: [6] <author> K. D. Boese, A. B. Kahng, B.A. Mccoy, and G. Robins. </author> <title> Rectilinear steiner trees with minimum elmore delay. </title> <booktitle> In Proc. of 31th Design Automation Conf., </booktitle> <pages> pages 381-386, </pages> <year> 1994. </year>
Reference-contexts: Boese, Kahng, McCoy and Robins have proposed several methods <ref> [5, 6, 7] </ref> to minimize the delays at identified critical sinks; i.e. the optimal tree minimizes the linear combination of sink delays f = P k where ff i (ff i 0) is the the criticality of the sink s i . <p> They proposed two branch and bound algorithms BB-SORT-C and BB-SORT. BB-SORT-C constructs the optimal critical sink tree to 2 minimize the linear combination of sink delays, and the optimality is proved based on the observation <ref> [6] </ref> that the Hanan grid contains all Steiner points of the optimal critical sink tree. BB-SORT constructs the near-optimal tree that minimizes the maximal Elmore delay of the routing tree. <p> BB-SORT constructs the near-optimal tree that minimizes the maximal Elmore delay of the routing tree. Although BB-SORT-C and BB-SORT have exponential time complexity, they provides the optimal or near-optimal solutions for the empirical analysis of other heuristics. Boese, Kahng and Robins also proposed two heuristics <ref> [5, 7, 6] </ref> for the minimum Elmore delay Steiner trees: SERT and SERT-C. SERT is a modified Prim's algorithm when adding sinks to the tree it minimizes the maximal Elmore delay of the routing tree. SERT-C is a modification of SERT that minimizes the delay at a single critical sink. <p> (in later this paper, we refer to DBMST as the proposed approach if not 1 As claimed again, the proposed algorithm can be applied on any type of weighted graphes, for example, the Delaunay triangulation or the communication network. 2 Elmore delay model has been used in timing-driven routing algorithms <ref> [7, 6] </ref> and zero skew clock routing algorithms [40]. A variant of the Elmore delay model, combining with an RC line delay model [36], has also been used in other timing-driven routing algorithms [33, 24]. <p> The experimental results for different size nets and technologies are shown in Fig. 17 and Fig. 18. The curve labeled min-delay corresponds to the cost of the minimum-delay tree algorithm of Kahng et al. <ref> [6, 7] </ref>. The kmb curve is produced by the KMB algorithm, and kmb+ curve is produced by applying the path-switching technique in dbmst to the result of the KMB algorithm. Finally, the dbmst curve corresponds to the solution of DBMST. These notations are listed in Table 2 for reference.
Reference: [7] <author> K. D. Boese, A. B. Kahng, and G. Robins. </author> <title> High-performance routing trees with identified critical sinks. </title> <booktitle> In Proc. of 30th Design Automation Conf., </booktitle> <pages> pages 182-187, </pages> <year> 1993. </year>
Reference-contexts: Boese, Kahng, McCoy and Robins have proposed several methods <ref> [5, 6, 7] </ref> to minimize the delays at identified critical sinks; i.e. the optimal tree minimizes the linear combination of sink delays f = P k where ff i (ff i 0) is the the criticality of the sink s i . <p> BB-SORT constructs the near-optimal tree that minimizes the maximal Elmore delay of the routing tree. Although BB-SORT-C and BB-SORT have exponential time complexity, they provides the optimal or near-optimal solutions for the empirical analysis of other heuristics. Boese, Kahng and Robins also proposed two heuristics <ref> [5, 7, 6] </ref> for the minimum Elmore delay Steiner trees: SERT and SERT-C. SERT is a modified Prim's algorithm when adding sinks to the tree it minimizes the maximal Elmore delay of the routing tree. SERT-C is a modification of SERT that minimizes the delay at a single critical sink. <p> (in later this paper, we refer to DBMST as the proposed approach if not 1 As claimed again, the proposed algorithm can be applied on any type of weighted graphes, for example, the Delaunay triangulation or the communication network. 2 Elmore delay model has been used in timing-driven routing algorithms <ref> [7, 6] </ref> and zero skew clock routing algorithms [40]. A variant of the Elmore delay model, combining with an RC line delay model [36], has also been used in other timing-driven routing algorithms [33, 24]. <p> The connection from the partial tree to a sink is accomplished by using A fl search to minimize the slacks of connected sinks. It is acknowledged by Boese, Kahng and Robins <ref> [7] </ref> that this heuristic using the enforced order of sink connections probably loses the optimality. A small example is shown in Fig. 4, where we take equal delay bounds for two sinks t 1 and t 2 . <p> In our experiments, the cost of solutions of DBMST is evaluated and is compared to the cost of solutions obtained by the KMB algorithm [27], the KMB algorithm followed by iterations of cut-and-link improvement, and the minimum-delay SERT algorithm of Boese and Kahng et al <ref> [7] </ref>. The experiments are performed on random circuits. The random circuits were constructed by uniformly sampling locations of sinks from a rectangular region. The Manhattan distance between the points is used as the cost function, and the Elmore delay as the delay model for the circuits. <p> The experimental results for different size nets and technologies are shown in Fig. 17 and Fig. 18. The curve labeled min-delay corresponds to the cost of the minimum-delay tree algorithm of Kahng et al. <ref> [6, 7] </ref>. The kmb curve is produced by the KMB algorithm, and kmb+ curve is produced by applying the path-switching technique in dbmst to the result of the KMB algorithm. Finally, the dbmst curve corresponds to the solution of DBMST. These notations are listed in Table 2 for reference. <p> We would like to thank Kenneth Boese and Prof. Andrew Kahng at UC Los Angeles for providing their source code <ref> [7] </ref>.
Reference: [8] <author> R. K. Brayton, G. D. Hachtel, and A. L. Sangiovanni-Vincentelli. </author> <title> A survey of optimization techniques for integrated circuits. </title> <journal> Proc. of the IEEE, </journal> <volume> 69(10) </volume> <pages> 1334-1362, </pages> <year> 1991. </year>
Reference-contexts: This back-annotation procedure is indicated in Fig. 3 (b). The rest of this paper assumes that DBF gives delay bounds that can be met by T 0 . 3 Brayton, Hachtel and Sangiovanni-Vincentelli <ref> [8] </ref> gives a good survey of feasible search optimization methods. 7 4 Max-Delay-Slack Tree (MDST) as Initial DBMST In order to get the initial feasible solution T 0 that satisfies delay bounds as can as possible, T 0 is constructed as a max-delay-slack tree.
Reference: [9] <author> M. Burstein and M. Youssef. </author> <title> Timing influnced layout design. </title> <booktitle> In Proc. of 22nd Design Automation Conf., </booktitle> <pages> pages 124-130, </pages> <year> 1985. </year>
Reference-contexts: This paper provides the related work which can be used in the delay-bounded net-by-net routing. 1.1 Survey of Previous Work Timing-driven placement algorithms have been proposed in <ref> [25, 38, 37, 15, 16, 9, 19] </ref>. Timing-driven routing algorithms were developed in recent years, since the traditional minimum Steiner routing tree may violate the timing requirements, especially for high performance layouts in deep submicrons or MCM substrates.
Reference: [10] <author> A. H. Chao, E. M. Nequist, and T. D. Vuong. </author> <title> Direct solution of performance constraints during placement. </title> <booktitle> In Proc. of IEEE Custom Integrated Circuits Conference, </booktitle> <address> pages 17.2.1 - 27.2.4, </address> <year> 1990. </year>
Reference-contexts: These maximal allowable delays for individual source-to-sink connections are then conveyed to place&route procedures. Works on delay bound generation can also be found in [31, 42, 18]. This delay-bounded net-by-net layout strategy has been used in the placement step in Cadence's Gate-Ensemble system <ref> [10] </ref> and Mentor Graphics's AutoCell system [42]. This paper provides the related work which can be used in the delay-bounded net-by-net routing. 1.1 Survey of Previous Work Timing-driven placement algorithms have been proposed in [25, 38, 37, 15, 16, 9, 19].
Reference: [11] <author> J. P. Cohoon and L. J. Randall. </author> <title> Critical net routing. </title> <booktitle> In Proc. IEEE Intl. Conf. on Computer Design, </booktitle> <pages> pages 174-177, </pages> <year> 1991. </year>
Reference-contexts: One early related work is done by Ho, Lee, Chang and Wong [23] which investigated the complexity and NP-hardness of finding a bounded-diameter spanning tree or a bounded-diameter Steiner tree in a graph. Cohoon and Randall <ref> [11] </ref> proposed a heuristic which simultaneously considered the cost and the radius. Cong, Kahng, Robins, Sarrafzadeh and Wong [12] proposed a generalized formulation using a parameter * to trade-off the radius and cost.
Reference: [12] <author> J. Cong, A.B. Kahng, G. Robins, M. Sarrafzadeh, and C.K. Wong. </author> <title> Provably good performance-driven global routing. </title> <journal> IEEE Trans. on Computer-Aided Design, </journal> <volume> CAD-11(6):739-752, </volume> <year> 1992. </year>
Reference-contexts: Cohoon and Randall [11] proposed a heuristic which simultaneously considered the cost and the radius. Cong, Kahng, Robins, Sarrafzadeh and Wong <ref> [12] </ref> proposed a generalized formulation using a parameter * to trade-off the radius and cost. They [12] proposed a provably good algorithm that can always generate a tree in which the path length is bounded by (1 + *)R (R is the source-to-sink radius) and the wiring cost is within a <p> Cohoon and Randall [11] proposed a heuristic which simultaneously considered the cost and the radius. Cong, Kahng, Robins, Sarrafzadeh and Wong <ref> [12] </ref> proposed a generalized formulation using a parameter * to trade-off the radius and cost. They [12] proposed a provably good algorithm that can always generate a tree in which the path length is bounded by (1 + *)R (R is the source-to-sink radius) and the wiring cost is within a factor 2 (1 + (2=*)) of the optimal Steiner tree. <p> Most of previous timing-driven routing algorithms focus on the minimization of source-sink delays, except for <ref> [12] </ref> which provides the cost bounded within a factor 2 (1 + (2=*)) of the optimal solution. Delay issues should be considered in conjunction with the cost minimization. In deep submicron technologies, more and more functional blocks will be integrated into a chip. <p> The opportunity 5 Empirical analysis shows that DBMST achieves less cost than KMB algorithm which further obtains smaller cost bound than the bounded radius routing tree algorithm in <ref> [12] </ref> that achieves a factor of 2 (1+(2=*)) of the optimum Steiner tree. 23 of global optimum solution is increased if we increase the space of the feasible search region. Define a pseudo feasible region R 0 b expanded from R b .
Reference: [13] <author> Jason Cong, Kwok-Shing Leung, and Dian Zhou. </author> <title> Performance-driven interconnect design based on distributed rc delay model. </title> <booktitle> In Proc. of 30th Design Automation Conf., </booktitle> <pages> pages 606-611, </pages> <year> 1993. </year>
Reference-contexts: The radius-cost trade-off tree can be viewed as the one constructed between the minimum spanning tree (MST) (or minimum Steiner tree) and the shortest-path tree (SPT); Alpert, Hu, Huang and Kahng proposed a algorithm [1] which makes this MST-SPT combination in the tree construction. Cong, Leung and Zhou <ref> [13] </ref> optimized special Steiner arborescences called A-trees to make the MST-SPT trade off. An important problem needed to be addressed is how to turn the delay bounds to the path length bounds or radius, since the delay of a RC tree depends on the topology of the tree.
Reference: [14] <author> W. W.-M. Dai, T. Asano, </author> <title> and E.S. Kuh. Routing region definition and ordering. </title> <journal> IEEE Trans. on Computer-Aided Design, </journal> <volume> CAD-4(3):189-197, </volume> <year> 1985. </year>
Reference-contexts: The routing graph G can be any type, where the source and sinks are located, such as Hanan grid [21] or channel intersection graph <ref> [14] </ref> (See Fig. 2). Based on a graph with only rectilinear edges (e.g. Hanan grid or channel intersection graph), we 5 can obtain rectilinear DBMST 1 . The edge-cost function usually represents the wiring length or the routing congestion of channels.
Reference: [15] <author> W.E. Donath, R.J. Norman, B.K. Agrawal, S.E. Bello, S.Y. Han, J.M. Kurtzberg, P. Lowy, and R.I. McMillan. </author> <title> Timing driven placement using complete path delays. </title> <booktitle> In Proceedings of ACM/IEEEE Design Automation Conference, </booktitle> <pages> pages 84-89, </pages> <year> 1990. </year>
Reference-contexts: This paper provides the related work which can be used in the delay-bounded net-by-net routing. 1.1 Survey of Previous Work Timing-driven placement algorithms have been proposed in <ref> [25, 38, 37, 15, 16, 9, 19] </ref>. Timing-driven routing algorithms were developed in recent years, since the traditional minimum Steiner routing tree may violate the timing requirements, especially for high performance layouts in deep submicrons or MCM substrates.
Reference: [16] <author> A.E. Dunlop, V.D. Agrawal, D. Deutsch, M.F. Jukl, P. Kozak, and M. Wiesel. </author> <title> Chip layout optimization using critical path weighting. </title> <booktitle> In Proceedings of ACM/IEEEE Design Automation Conference, </booktitle> <pages> pages 133-136, </pages> <year> 1984. </year>
Reference-contexts: This paper provides the related work which can be used in the delay-bounded net-by-net routing. 1.1 Survey of Previous Work Timing-driven placement algorithms have been proposed in <ref> [25, 38, 37, 15, 16, 9, 19] </ref>. Timing-driven routing algorithms were developed in recent years, since the traditional minimum Steiner routing tree may violate the timing requirements, especially for high performance layouts in deep submicrons or MCM substrates.
Reference: [17] <author> W.C. </author> <title> Elmore. The transient response of damped linear network with particular regard to wideband amplifiers. </title> <journal> Jour. of Applied Physics, </journal> <volume> 19 </volume> <pages> 55-63, </pages> <year> 1948. </year>
Reference-contexts: They revealed the good fidelity of using Elmore delay model <ref> [17] </ref> to guide a minimal delay routing tree compared to being guided by SPICE simulation. They proposed two branch and bound algorithms BB-SORT-C and BB-SORT. <p> The path-delay function evaluates the delay in the routing tree from the source to a sink. Our algorithm itself can be accomplished using any form of delay model as the path delay function. In the experiments, we use the Elmore delay model <ref> [17, 35] </ref> to evaluate the path delays of the routing tree 2 . Appendix 1 shows the detailed model and Elmore delay calculation of the routing tree we take for the simulation in Section 7. <p> A variant of the Elmore delay model, combining with an RC line delay model [36], has also been used in other timing-driven routing algorithms [33, 24]. Boese, Khang, Mccoy and Robins [5] shows the good fidelity of using Elmore delay model <ref> [17] </ref> to guide a optimum delay routing tree compared to a optimum tree guided by SPICE simulation. 6 specified). 3 Overview of DBMST Approach The approach and optimization technique adopted here are based on an order that satisfies the delay bounds first, then improves the routing tree for the cost minimization.
Reference: [18] <author> J. Frankle. </author> <title> Iterative and adaptive slack allocation for performance-driven layout and fpga routing. </title> <booktitle> In Proc. of 29th Design Automation Conf., </booktitle> <pages> pages 536-542, </pages> <year> 1992. </year>
Reference-contexts: These maximal allowable delays for individual source-to-sink connections are then conveyed to place&route procedures. Works on delay bound generation can also be found in <ref> [31, 42, 18] </ref>. This delay-bounded net-by-net layout strategy has been used in the placement step in Cadence's Gate-Ensemble system [10] and Mentor Graphics's AutoCell system [42].
Reference: [19] <author> T. Gao, P.M. Vaidya, and C.L. Liu. </author> <title> A new performance driven placement algorithm. </title> <booktitle> In Digest of Tech. Papers of IEEE Intl. Conf. on Computer Aided Design, </booktitle> <pages> pages 328-331, </pages> <year> 1990. </year> <month> 32 </month>
Reference-contexts: This paper provides the related work which can be used in the delay-bounded net-by-net routing. 1.1 Survey of Previous Work Timing-driven placement algorithms have been proposed in <ref> [25, 38, 37, 15, 16, 9, 19] </ref>. Timing-driven routing algorithms were developed in recent years, since the traditional minimum Steiner routing tree may violate the timing requirements, especially for high performance layouts in deep submicrons or MCM substrates.
Reference: [20] <author> M. Garey and D. Johnson. </author> <title> Computers and Intractability: A Guide to the Theory of NPCompleteness. </title> <address> New York: </address> <publisher> W.H. Freeman and Co., </publisher> <year> 1979. </year>
Reference-contexts: The DBMST problem based on minimizing the sum of edge costs of the routing tree can be reduced to a minimum Steiner tree problem with the delay bound set to 1, which is known to be an NP-complete problem <ref> [20] </ref>; only heuristics are of practical interest for its solution.
Reference: [21] <author> M. Hanan. </author> <title> On steiner's problem with rectilinear distance. </title> <journal> SIAM Journal of Applied Mathematics, </journal> <pages> pages 255-265, </pages> <month> March </month> <year> 1966. </year>
Reference-contexts: The routing graph G can be any type, where the source and sinks are located, such as Hanan grid <ref> [21] </ref> or channel intersection graph [14] (See Fig. 2). Based on a graph with only rectilinear edges (e.g. Hanan grid or channel intersection graph), we 5 can obtain rectilinear DBMST 1 . The edge-cost function usually represents the wiring length or the routing congestion of channels.
Reference: [22] <author> P.S. Hauge, R. Nair, and E.J. Yoffa. </author> <title> Circuit placement for predictable performance. </title> <booktitle> In Digest of Tech. Papers of IEEE Intl. Conf. on Computer Aided Design, </booktitle> <pages> pages 88-91, </pages> <year> 1987. </year>
Reference-contexts: In order to make use of existing place&route tools, delay bound of each logic path is divided into multiple bounds for pairs of source-to-sink logic cells on this path. Hauge, Nair and Yoffa <ref> [22] </ref> proposed the zero-slack algorithm that computes the maximal allowable delays for individual source-to-sink connections, based on entire logic path delay requirement. These maximal allowable delays for individual source-to-sink connections are then conveyed to place&route procedures. Works on delay bound generation can also be found in [31, 42, 18]. <p> In typical deep submicron designs, more than 60 percent of the paths in a timing-critical design are critical [39]. 1.2 Contribution of Our Work Instead of using criticalities or radius for sinks, we use precise delay upper bounds which can be obtained from delay-bound-generators <ref> [22, 32] </ref> for meeting the logic path delay requirement. Most of previous timing-driven routing algorithms focus on the minimization of source-sink delays, except for [12] which provides the cost bounded within a factor 2 (1 + (2=*)) of the optimal solution.
Reference: [23] <author> J. Ho, D. T. Lee, C. H. Chang, and C. K. Wong. </author> <title> Bounded-diameter spanning tree and related problems. </title> <booktitle> In Proc. ACM Symp. on Computational Geometry, </booktitle> <pages> pages 276-282, </pages> <year> 1989. </year>
Reference-contexts: One early related work is done by Ho, Lee, Chang and Wong <ref> [23] </ref> which investigated the complexity and NP-hardness of finding a bounded-diameter spanning tree or a bounded-diameter Steiner tree in a graph. Cohoon and Randall [11] proposed a heuristic which simultaneously considered the cost and the radius.
Reference: [24] <author> X. Hong, T. Xue, E.S. Kuh, C.K. Cheng, and J. Huang. </author> <title> Performance-driven steiner tree algorithms for global routing. </title> <booktitle> In Proc. of 30th Design Automation Conf., </booktitle> <year> 1993. </year>
Reference-contexts: SERT is a modified Prim's algorithm when adding sinks to the tree it minimizes the maximal Elmore delay of the routing tree. SERT-C is a modification of SERT that minimizes the delay at a single critical sink. While Hong, Xue, Kuh, Cheng and Huang <ref> [24] </ref> proposed a modified Dreyfus-Wagner Steiner tree algorithm for minimizing the maximal path delay, Prasitjutrakul and Kubitz [33] proposed a routing algorithm for the minimization of the delay slacks (i.e., differences between the real delays and the given delay bounds) at sinks. <p> A variant of the Elmore delay model, combining with an RC line delay model [36], has also been used in other timing-driven routing algorithms <ref> [33, 24] </ref>.
Reference: [25] <author> M. A. B. Jackson and E. S. Kuh. </author> <title> Performance-driven for of cell based ic's. </title> <booktitle> In Proc. of 26th Design Automation Conf., </booktitle> <pages> pages 370-375, </pages> <year> 1989. </year>
Reference-contexts: This paper provides the related work which can be used in the delay-bounded net-by-net routing. 1.1 Survey of Previous Work Timing-driven placement algorithms have been proposed in <ref> [25, 38, 37, 15, 16, 9, 19] </ref>. Timing-driven routing algorithms were developed in recent years, since the traditional minimum Steiner routing tree may violate the timing requirements, especially for high performance layouts in deep submicrons or MCM substrates.
Reference: [26] <author> W. Kernighan and S. Lin. </author> <title> An efficient heuristic procedure for partitioning graphs. </title> <journal> Bell System Technical Journal, </journal> <volume> 49 </volume> <pages> 291-307, </pages> <year> 1970. </year>
Reference-contexts: Once we cannot find a solution (new delay bounded tree configuration) in R b , the search space is expanded to R 0 b . At each stage of m times of tentative cut-and-link, 6 Group migration technique <ref> [26] </ref> was used in the bi-partition problem of circuits. 24 we first try to find a cut-and-link in R b with the maximal gain.
Reference: [27] <author> L. Kou, G. Markowsky, and L. Berman. </author> <title> A fast algorithm for steiner trees. </title> <journal> Acta Information, </journal> <volume> 15 </volume> <pages> 141-145, </pages> <year> 1981. </year>
Reference-contexts: We obtain the result using 0.3um CMOS technology given in Section 7. The tree in Fig. 14 (h) is constructed by DBMST, and the tree in Fig. 14 (e) by a minimum Steiner tree heuristic proposed by Kou, Markowsky and Berman (KMB) <ref> [27] </ref>. We show the first five stages of tree transformation (T 0 ; T 1 ; T 2 ; T 3 ; T 4 ; T 5 ) in Fig. 14. <p> DBMST reduces the cost by 8% compared to KMB, although KMB algorithm has achieved near-optimum cost Steiner tree <ref> [27] </ref> 4 . The significance of DBMST is that it accomplishes the routing not only satisfying the required delay bounds but also close to the minimum cost. 4 KMB algorithm is proved [27] to construct a Steiner tree with a tight cost C KMB 2 (1 1 jSj )C opt , <p> DBMST reduces the cost by 8% compared to KMB, although KMB algorithm has achieved near-optimum cost Steiner tree <ref> [27] </ref> 4 . The significance of DBMST is that it accomplishes the routing not only satisfying the required delay bounds but also close to the minimum cost. 4 KMB algorithm is proved [27] to construct a Steiner tree with a tight cost C KMB 2 (1 1 jSj )C opt , where C opt is the cost of the optimum Steiner tree, and jSj the number of sinks. 19 INPUT: G (V; E) = graph, s = source, S = set of sinks, <p> In all experiments we have done so far, DBMST always achieves the cost less than the known minimum Steiner tree heuristic proposed by Kou, Markowsky and Berman (KMB), which has no delay bounds. KMB algorithm has a tight bound of the cost to the optimum Steiner tree <ref> [27] </ref>, i.e. C KMB 2 (1 1 jSj )C opt 5 , where C KMB is the cost of the Steiner tree constructed by KMB algorithm, C opt the cost of the optimum Steiner tree, and jSj the number of sinks. <p> In our experiments, the cost of solutions of DBMST is evaluated and is compared to the cost of solutions obtained by the KMB algorithm <ref> [27] </ref>, the KMB algorithm followed by iterations of cut-and-link improvement, and the minimum-delay SERT algorithm of Boese and Kahng et al [7]. The experiments are performed on random circuits. The random circuits were constructed by uniformly sampling locations of sinks from a rectangular region. <p> MDST proposed heuristic of max-delay-slack tree, as the initial DBMST mdst curve or result of MDST DBMST proposed heuristic of delay bounded minimum Steiner tree, that improves the tree by iterative delay bounded cut-and-link dbmst curve or result of DBMST KMB heuristic of minimum Steiner tree <ref> [27] </ref> kmb curve or result of KMB KMB+ heuristic of improving KMB, followed by iterative cut-and-link improvement kmb+ curve or result of KMB+ MIN-DELAY heuristic of minimum Elmore delay Steiner tree (SERT)[7] min-delay curve or result of MIN-DELAY Table 2: List of Notations For the sake of comparing the cost with
Reference: [28] <author> E. Lawler. </author> <title> Combinational Optimization: Networks and Matroids. </title> <publisher> Holt, Rinehart and Winston, </publisher> <year> 1976. </year>
Reference-contexts: Simultaneously, we evaluate the delay bound of the newly created paths incrementally. This incremental construction of the first shortest path, second shortest path, third shortest path and so forth between T a and T b uses the principle of the k-shortest path algorithm in <ref> [28] </ref>. 18 The nice property of using the above incremental shortest path construction, is that once a shortest path is found satisfying DBF, the path is definitely the delay bounded shortest path between T a and T b . <p> These above reasons make the delay bounded shortest path is found at early stage of the incremental shortest path construction. The k-shortest paths can be constructed in O (kn 2 ) <ref> [28] </ref> for n grids in the routing graph. On the other hand, if we statically obtain all pairs of shortest paths between T a and T b , the time complexity will be O (jT jn 2 ) where jT j is the size of the routing tree. <p> The computation of the tree transformation in feasible search optimization is dominated by computing the delay bounded shortest path which can be done in O (kn 2 ) <ref> [28] </ref> when using incremental construction of pairs of shortest paths, where k is the number of shortest paths constructed for finding the delay bounded shortest path.
Reference: [29] <author> H. Liao, W. Dai, R. Wang, and F.Y. Chang. </author> <title> S-parameter based macro model of distributed-lumped networks using exponentially decayed polynomial function. </title> <booktitle> In Proceedings of 30th ACM/IEEE Design Automation Conference, </booktitle> <pages> pages 726-731, </pages> <year> 1993. </year>
Reference-contexts: The correctness of the proposed routing algorithm is independent of the delay model used, although, the optimality in the electrical performance and cost of the resulted tree is related to the delay model. High order (at least second-order) delay models <ref> [34, 29] </ref> are necessary for the high-frequency interconnect, especially on the substrates of multichip modules or boards once the transmission line effects are noticed. 9 Acknowledgement This work was supported partially by National Science Foundation Presidential Young Investigator Award under Grant MIP-9009945.
Reference: [30] <author> Andrew Lim and Siu-Wing Cheng. </author> <title> Performance oriented rectilinear steiner trees. </title> <booktitle> In Proc. of 30th Design Automation Conf., </booktitle> <pages> pages 171-176, </pages> <year> 1992. </year>
Reference-contexts: A similar approach is also proposed by Awerbuch, Baratz and Peleg [2]. Lim, Cheng and Wu <ref> [30] </ref> proposed a modified version of Prim's minimum spanning tree algorithm to control the radius for individual source-sinks connections.
Reference: [31] <author> W. K. Luk. </author> <title> A fast physical constraint generator for timing driven layout. </title> <booktitle> In Proc. of 28th Design Automation Conf., </booktitle> <pages> pages 626-631, </pages> <year> 1991. </year>
Reference-contexts: These maximal allowable delays for individual source-to-sink connections are then conveyed to place&route procedures. Works on delay bound generation can also be found in <ref> [31, 42, 18] </ref>. This delay-bounded net-by-net layout strategy has been used in the placement step in Cadence's Gate-Ensemble system [10] and Mentor Graphics's AutoCell system [42].
Reference: [32] <author> R. Nair, C.L. Berman, P.S. Hauge, and E.J. Yoffa. </author> <title> Generation of performance constraints of layout. </title> <journal> IEEE Trans. on Computer-Aided Design, </journal> <volume> CAD-8:860-874, </volume> <year> 1989. </year>
Reference-contexts: In typical deep submicron designs, more than 60 percent of the paths in a timing-critical design are critical [39]. 1.2 Contribution of Our Work Instead of using criticalities or radius for sinks, we use precise delay upper bounds which can be obtained from delay-bound-generators <ref> [22, 32] </ref> for meeting the logic path delay requirement. Most of previous timing-driven routing algorithms focus on the minimization of source-sink delays, except for [12] which provides the cost bounded within a factor 2 (1 + (2=*)) of the optimal solution. <p> To maintain the delay requirement of the critical paths and prevent non-critical paths to become critical paths, each connection from the source cell to a sink cell is assigned a delay upper bound <ref> [42, 32] </ref>. As illustrated in Fig. 1 (b), a routing netlist for signal B is created with delay bounds (D 1 ; D 2 ; D 3 ; D 4 ) from source s to sinks (t 1 ; t 2 ; t 3 ; t 4 ).
Reference: [33] <author> Somchai Prasitjutrakul and William J. Kubitz. </author> <title> A timing-driven global router for custom chip design. </title> <booktitle> In Digest of Tech. Papers of IEEE Intl. Conf. on Computer Aided Design, </booktitle> <pages> pages 48-51, </pages> <year> 1990. </year>
Reference-contexts: SERT-C is a modification of SERT that minimizes the delay at a single critical sink. While Hong, Xue, Kuh, Cheng and Huang [24] proposed a modified Dreyfus-Wagner Steiner tree algorithm for minimizing the maximal path delay, Prasitjutrakul and Kubitz <ref> [33] </ref> proposed a routing algorithm for the minimization of the delay slacks (i.e., differences between the real delays and the given delay bounds) at sinks. Prasitjutrakul and Kubitz's algorithm will be described in more details in Section 4. <p> A variant of the Elmore delay model, combining with an RC line delay model [36], has also been used in other timing-driven routing algorithms <ref> [33, 24] </ref>. <p> Max-delay-slack tree is hard to be solved in the optimal solution since it is a NP-complete problem; we show the NP-completeness proof in Appendix II. Prasitjutrakul and Kubitz <ref> [33] </ref> proposed a heuristic of constructing a 8 max-delay-slack tree by adding sinks once at a time, and the order of sink connections is according to the location closeness to the tree, that the nearest sink to the tree is connected first.
Reference: [34] <author> Curtis Ratzlaff, Nanda Gopal, and Lawrence Pillage. Rice: </author> <title> Rapid interconnect circuit evaluator. </title> <booktitle> In Proceedings of 28th ACM/IEEE Design Automation Conference, </booktitle> <pages> pages 555-560, </pages> <year> 1991. </year>
Reference-contexts: The correctness of the proposed routing algorithm is independent of the delay model used, although, the optimality in the electrical performance and cost of the resulted tree is related to the delay model. High order (at least second-order) delay models <ref> [34, 29] </ref> are necessary for the high-frequency interconnect, especially on the substrates of multichip modules or boards once the transmission line effects are noticed. 9 Acknowledgement This work was supported partially by National Science Foundation Presidential Young Investigator Award under Grant MIP-9009945.
Reference: [35] <author> J. Rubinstein, P. Penfield, and M. A. Horowitz. </author> <title> Signal delay in rc tree networks. </title> <journal> IEEE Trans. on Computer-Aided Design, </journal> <volume> CAD-2(3):202-211, </volume> <year> 1983. </year> <month> 33 </month>
Reference-contexts: The path-delay function evaluates the delay in the routing tree from the source to a sink. Our algorithm itself can be accomplished using any form of delay model as the path delay function. In the experiments, we use the Elmore delay model <ref> [17, 35] </ref> to evaluate the path delays of the routing tree 2 . Appendix 1 shows the detailed model and Elmore delay calculation of the routing tree we take for the simulation in Section 7.
Reference: [36] <author> T. Sakurai. </author> <title> Approximation of wiring delay in mos-fet lsi. </title> <journal> IEEE Journal of Solid--State Circuits, </journal> <volume> SC-18:418-426, </volume> <year> 1983. </year>
Reference-contexts: A variant of the Elmore delay model, combining with an RC line delay model <ref> [36] </ref>, has also been used in other timing-driven routing algorithms [33, 24].
Reference: [37] <author> A. Srinivasan, K. Chaudhary, and E.S. Kuh. Ritual: </author> <title> A performance driven placement algorithm for small-cell ics. </title> <booktitle> In Digest of Tech. Papers of IEEE Intl. Conf. on Computer Aided Design, </booktitle> <pages> pages 48-51, </pages> <year> 1991. </year>
Reference-contexts: This paper provides the related work which can be used in the delay-bounded net-by-net routing. 1.1 Survey of Previous Work Timing-driven placement algorithms have been proposed in <ref> [25, 38, 37, 15, 16, 9, 19] </ref>. Timing-driven routing algorithms were developed in recent years, since the traditional minimum Steiner routing tree may violate the timing requirements, especially for high performance layouts in deep submicrons or MCM substrates.
Reference: [38] <author> A. Srinivasan, M.A.B. Jackson, </author> <title> and E.S. Kuh. A fast algorithm for performance driven placement. </title> <booktitle> In Digest of Tech. Papers of IEEE Intl. Conf. on Computer Aided Design, </booktitle> <pages> pages 328-331, </pages> <year> 1990. </year>
Reference-contexts: This paper provides the related work which can be used in the delay-bounded net-by-net routing. 1.1 Survey of Previous Work Timing-driven placement algorithms have been proposed in <ref> [25, 38, 37, 15, 16, 9, 19] </ref>. Timing-driven routing algorithms were developed in recent years, since the traditional minimum Steiner routing tree may violate the timing requirements, especially for high performance layouts in deep submicrons or MCM substrates.
Reference: [39] <author> M.Y. Mike Tsai and R.S. Tsay. </author> <title> Ic layout shift at deep-submicron level. Electronic Engineering Times, </title> <address> 820:66, </address> <month> Oct. </month> <year> 1994. </year>
Reference-contexts: Designers have to depend on intuition and perform design iterations. In typical deep submicron designs, more than 60 percent of the paths in a timing-critical design are critical <ref> [39] </ref>. 1.2 Contribution of Our Work Instead of using criticalities or radius for sinks, we use precise delay upper bounds which can be obtained from delay-bound-generators [22, 32] for meeting the logic path delay requirement.
Reference: [40] <author> R.S. Tsay. </author> <title> An analytic net weighting approach for performance optimization in circuit placement. </title> <booktitle> In Proc. of 28th Design Automation Conf., </booktitle> <pages> pages 620-625, </pages> <year> 1991. </year>
Reference-contexts: In deep submicron ICs, interconnect behaves distributed RC delays, and the path length is not accurate for the delay estimation <ref> [40] </ref>. Recently, minimal RC delay routing trees have also been investigated, which has three interesting variants: (1) minimizing the delay from the source to an identified critical sink or a set of critical sinks; and (2) minimizing the maximal source-to-sink delay; (3) minimizing the maximal delay slack. <p> as the proposed approach if not 1 As claimed again, the proposed algorithm can be applied on any type of weighted graphes, for example, the Delaunay triangulation or the communication network. 2 Elmore delay model has been used in timing-driven routing algorithms [7, 6] and zero skew clock routing algorithms <ref> [40] </ref>. A variant of the Elmore delay model, combining with an RC line delay model [36], has also been used in other timing-driven routing algorithms [33, 24].
Reference: [41] <author> A. Vittal and M. Marek-Sadowska. </author> <title> Minimal dealy interconnect design using alphabetic trees. </title> <booktitle> In Proc. of 31th Design Automation Conf., </booktitle> <pages> pages 392-396, </pages> <year> 1994. </year>
Reference: [42] <author> H. Youssef, R.B. Lin, and E. Shragowitz. </author> <title> Bounds on net delays for vlsi circuits. </title> <journal> IEEE Trans. on Circuits and Systems-II: Analog and Digital Signal Processing, </journal> <volume> 39(11) </volume> <pages> 815-824, </pages> <year> 1992. </year>
Reference-contexts: These maximal allowable delays for individual source-to-sink connections are then conveyed to place&route procedures. Works on delay bound generation can also be found in <ref> [31, 42, 18] </ref>. This delay-bounded net-by-net layout strategy has been used in the placement step in Cadence's Gate-Ensemble system [10] and Mentor Graphics's AutoCell system [42]. <p> These maximal allowable delays for individual source-to-sink connections are then conveyed to place&route procedures. Works on delay bound generation can also be found in [31, 42, 18]. This delay-bounded net-by-net layout strategy has been used in the placement step in Cadence's Gate-Ensemble system [10] and Mentor Graphics's AutoCell system <ref> [42] </ref>. This paper provides the related work which can be used in the delay-bounded net-by-net routing. 1.1 Survey of Previous Work Timing-driven placement algorithms have been proposed in [25, 38, 37, 15, 16, 9, 19]. <p> To maintain the delay requirement of the critical paths and prevent non-critical paths to become critical paths, each connection from the source cell to a sink cell is assigned a delay upper bound <ref> [42, 32] </ref>. As illustrated in Fig. 1 (b), a routing netlist for signal B is created with delay bounds (D 1 ; D 2 ; D 3 ; D 4 ) from source s to sinks (t 1 ; t 2 ; t 3 ; t 4 ).
Reference: [43] <author> Qing Zhu and Wayne W.M. Dai. </author> <title> Delay-bounded steiner tree algorithm for performance-driven layout. </title> <type> Technical Report, </type> <institution> UCSC-CRL-93-46, University of California, Santa Cruz, </institution> <month> Oct </month> <year> 1993. </year>

References-found: 43

