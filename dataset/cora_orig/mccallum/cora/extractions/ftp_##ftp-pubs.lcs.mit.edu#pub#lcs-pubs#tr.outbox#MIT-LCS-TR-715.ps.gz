URL: ftp://ftp-pubs.lcs.mit.edu/pub/lcs-pubs/tr.outbox/MIT-LCS-TR-715.ps.gz
Refering-URL: ftp://ftp-pubs.lcs.mit.edu/pub/lcs-pubs/listings/tr700.html
Root-URL: 
Title: A Random Server Model for Private Information Retrieval or Information Theoretic PIR Avoiding Database Replication  
Author: Yael Gertner Shafi Goldwasser Tal Malkin 
Date: April 1997  
Abstract: Private information retrieval (PIR) schemes provide a user with information from a database while keeping his query secret from the database manager. We propose a new model for PIR, utilizing auxiliary random servers providing privacy services for database access. The principal database initially engages in a preprocessing setup computation with the random servers, followed by the on-line stage with the users. Using this model we achieve the first PIR information theoretic solutions in which the database does not need to give away its data to be replicated, and with minimal on-line computation cost for the database. This solves privacy and efficiency problems inherent to all previous solutions. Specifically, in all previously existing PIR schemes the database on-line computation for one query is at least linear in the size of the data, and all previous information theoretic schemes require multiple replications of the database which are not allowed to communicate with each other. This poses a privacy problem for the database manager, who is required to hand his data to multiple foreign entities, and to the user, who is supposed to trust the multiple copies of the database not to communicate. In contrast, in our solutions no replication is needed, and the database manager only needs to perform O(1) amount of computation to answer questions of users, while all the extra computations required on line for privacy are done by the auxiliary random servers, who contain no informatin about the data.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Abadi, J. Feigenbaum, J. Kilian. </author> <title> On Hiding Information from an Oracle. </title> <journal> JCSS, </journal> <volume> 39:1, </volume> <year> 1989. </year>
Reference: [2] <author> N. Adam, J. Wortmann. </author> <title> Security Control Methods for Statistical Databases: a comparative study, </title> <journal> ACM Computing Surveys, </journal> <volume> 21(1989). </volume>
Reference: [3] <author> A. Ambainis. </author> <title> Upper bound on the communication complexity of private information retrieval. </title> <booktitle> ICALP 97. </booktitle>
Reference-contexts: Protocols for PIR and SPIR schemes, guaranteeing information theoretic privacy, appeared in <ref> [7, 3, 10, 8] </ref>. These solutions are all based on the idea of using multiple copies of the database that are not allowed to communicate with each other. <p> In particular, for a constant number k of database copies, [7] with further improvement in <ref> [3] </ref> (for the case k &gt; 2), achieve information theoretic user security with communication complexity of n 2k1 , where n is the length of the data (in bits). <p> In section 3.2 we present another version, possessing some appealing extra properties for security and simplicity. We note however, that the starting point for the second reduction is any information retrieval scheme which has a linear reconstruction function. This is usually the case in existing PIR schemes (cf. <ref> [7, 3] </ref>). Finally, in section 3.3 we prove that the RDB construction satisfies theorem 1. Another benefit of our scheme is that it does not require the participation of the primary database D after the setup stage. Instead, the servers deal with all the on-line queries and computations. <p> This may be generalized to any underlying scheme with a linear reconstruction function. This requirement is very general, and is usually satisfied by existing PIR protocols (for example, protocols based on xoring subsets of locations in the data string, such as <ref> [7, 3] </ref>, the best PIR schemes known to date). 3.3 Analysis of the RDB Scheme: Proof of Theorem 1 We now analyse the RDB scheme in terms of complexity, correctness, and privacy, to show that it satisfies the bounds given in theorem 1.
Reference: [4] <author> D. Beaver, J. Feigenbaum. </author> <title> Hiding instances in Multioracle Queries. </title> <publisher> STACS,1990. </publisher>
Reference: [5] <author> D. Beaver, J. Feigenbaum, J. Kilian, P. Rogaway. </author> <title> Security with Low Communication Overhead. </title> <booktitle> CRYPTO 1990. </booktitle>
Reference: [6] <author> B. Chor, N. Gilboa. </author> <title> Computationally Private Information Retrieval. </title> <note> STOC 1997. </note>
Reference-contexts: They use a model where the multiple databases may use some shared randomness, to achieve reductions from PIR to SPIR, paying a multiplicative logarithmic factor in communication complexity. The work in <ref> [6] </ref> considers computational privacy for the user, and achieves a 2 database scheme with communication complexity of n * for any * &gt; 0, based on the existence of one way functions.
Reference: [7] <author> B. Chor, O. Goldreich, E. Kushilevitz, M. Sudan. </author> <note> Private Information Retrieval. FOCS 1995. </note>
Reference-contexts: 1 Introduction Private Information Retrieval (PIR) <ref> [7] </ref> schemes provide a user with information from a database in a private manner. The database consists of n items (e.g. bits), and the user has a query i which is the index of the data item he is interested in. <p> Protocols for PIR and SPIR schemes, guaranteeing information theoretic privacy, appeared in <ref> [7, 3, 10, 8] </ref>. These solutions are all based on the idea of using multiple copies of the database that are not allowed to communicate with each other. <p> This random server model for PIR is utilized to ensure private information retrieval without distributing any information about the database content, and without increasing the on-line computation cost of the principal database above its normal operation cost. 1.4 Related Work PIR was originally introduced by <ref> [7] </ref>, who were only concerned with protecting the user's (information theoretic) privacy. In particular, for a constant number k of database copies, [7] with further improvement in [3] (for the case k &gt; 2), achieve information theoretic user security with communication complexity of n 2k1 , where n is the length <p> about the database content, and without increasing the on-line computation cost of the principal database above its normal operation cost. 1.4 Related Work PIR was originally introduced by <ref> [7] </ref>, who were only concerned with protecting the user's (information theoretic) privacy. In particular, for a constant number k of database copies, [7] with further improvement in [3] (for the case k &gt; 2), achieve information theoretic user security with communication complexity of n 2k1 , where n is the length of the data (in bits). <p> We also address the case where upto t of the servers are faulty and do communicate with each other. Notions of Privacy: We define the following privacy properties for an information retrieval scheme. User privacy <ref> [7] </ref>: No single database (or server) can get any information about the user's query i from the on-line stage. That is, all the communication seen by a single database is identically distributed for every possible query. <p> In section 3.2 we present another version, possessing some appealing extra properties for security and simplicity. We note however, that the starting point for the second reduction is any information retrieval scheme which has a linear reconstruction function. This is usually the case in existing PIR schemes (cf. <ref> [7, 3] </ref>). Finally, in section 3.3 we prove that the RDB construction satisfies theorem 1. Another benefit of our scheme is that it does not require the participation of the primary database D after the setup stage. Instead, the servers deal with all the on-line queries and computations. <p> This may be generalized to any underlying scheme with a linear reconstruction function. This requirement is very general, and is usually satisfied by existing PIR protocols (for example, protocols based on xoring subsets of locations in the data string, such as <ref> [7, 3] </ref>, the best PIR schemes known to date). 3.3 Analysis of the RDB Scheme: Proof of Theorem 1 We now analyse the RDB scheme in terms of complexity, correctness, and privacy, to show that it satisfies the bounds given in theorem 1. <p> The following corollary is obtained by setting m = n * log n in the above theorem, where n * is some polynomial equal to the communication complexity of the underlying PIR scheme (it is conjectured in <ref> [7] </ref> that all information theoretic PIR schemes must have communication complexity of at least (n * ) for some *). <p> Thus, the communication complexity we achieve is at most O (log nC (S; 1)+log n), namely a logarithmic factor over S in communication complexity. This can be further decreased when methods for block retrieval are more efficient than bit by bit are available (cf. <ref> [7] </ref>). The communication complexity of the setup stage is O (n log n), which is a factor of log n over the O (n) of existing PIR algorithms, where the database has to be replicated.
Reference: [8] <author> Y. Gertner, Y. Ishai, E. Kushilevitz, T. Malkin. </author> <title> Protecting Data Privacy in Private Information Retrieval Schemes. </title> <type> Manuscript </type>
Reference-contexts: In this scenario, it is very likely that the user does not want to reveal the stock of his interest, and thus the use of a private information retrieval protocol is appropriate. Symmetrically Private Information Retrieval (SPIR) <ref> [8] </ref> addresses the database privacy as well by adding the requirement that the user, on the other hand, cannot obtain any information about the database in a single query except for a single physical value. <p> Protocols for PIR and SPIR schemes, guaranteeing information theoretic privacy, appeared in <ref> [7, 3, 10, 8] </ref>. These solutions are all based on the idea of using multiple copies of the database that are not allowed to communicate with each other. <p> In particular, for a constant number k of database copies, [7] with further improvement in [3] (for the case k &gt; 2), achieve information theoretic user security with communication complexity of n 2k1 , where n is the length of the data (in bits). Recently, <ref> [8] </ref> extended PIR to SPIR (Symmetrically private information retrieval), where the privacy of the data (with respect to the user) is considered as well. <p> That is, all the communication seen by a single database is identically distributed for every possible query. This definition can be extended to user t-privacy, where all communication seen by any coalitions of upto t databases (servers) is identically distributed for every possible query. Database privacy <ref> [8] </ref>: The user cannot get any information about the data string other than its value in a single location.
Reference: [9] <author> E. Kushilevitz, R. Ostrovsky. </author> <title> Replication is Not Needed: Single Database, </title> <note> Computationally-Private Information Retrieval. FOCS 1997 </note>
Reference-contexts: This allows the user to ask different questions from different copies of the database and combine the responses he gets to get an answer to his query, without revealing his original query to any single database (or a coalition). The recent PIR scheme of <ref> [9] </ref> uses a single database, but guarantees only computational privacy under the assumption that distinguishing quadratic residues from fl This work was done with the support of DARPA grant DABT63-96-C-0018 1 non-residues modulo composites is intractable. <p> In the single database case (computational privacy) the complexity of the computation is a function of both the size of n the database and the size of the security parameter underlying the cryptographic assumption made to ensure privacy. Specifically, in the single database solution of <ref> [9] </ref>, the computation takes a linear number of multiplications in a group whose size depends on the security parameter chosen for the quadratic residuosity problem. <p> The work in [6] considers computational privacy for the user, and achieves a 2 database scheme with communication complexity of n * for any * &gt; 0, based on the existence of one way functions. As discussed earlier <ref> [9] </ref> relies on a stronger computational assumption the quadratic residuosity problem to achieve a 1-database PIR scheme with computational privacy and communication complexity of n * for any * &gt; 0.
Reference: [10] <author> R. Ostrovksy, V. Shoup. </author> <title> Private Information Storage. </title> <note> STOC 1997. </note>
Reference-contexts: Protocols for PIR and SPIR schemes, guaranteeing information theoretic privacy, appeared in <ref> [7, 3, 10, 8] </ref>. These solutions are all based on the idea of using multiple copies of the database that are not allowed to communicate with each other. <p> As discussed earlier [9] relies on a stronger computational assumption the quadratic residuosity problem to achieve a 1-database PIR scheme with computational privacy and communication complexity of n * for any * &gt; 0. The work in <ref> [10] </ref> generalizes PIR for private information storage, where a user can privately read and write into the database. This model differs from ours, since in our model users do not have write access into the database. <p> This results in a model compatible to our model of independence (although this approach cannot lead to total independence). We note that <ref> [10] </ref> independently 3 use a basic scheme which is essentially the same as our basic RDB scheme of section 3.1. <p> None of the above PIR and SPIR works consider the data replication problem. 3 our results of section 3 were actually done previously to the publication of <ref> [10] </ref> 4 Organization Section 2 introduces the relevant definitions and notation used.
Reference: [11] <author> P. Tendick, and N. Natloff. </author> <title> A modified Random Perturbation Method for Database Security. </title> <journal> ACM Transactions on Database Systems, 19:1, </journal> <volume> pp.47-63, </volume> <year> 1994. </year> <month> 13 </month>
References-found: 11

