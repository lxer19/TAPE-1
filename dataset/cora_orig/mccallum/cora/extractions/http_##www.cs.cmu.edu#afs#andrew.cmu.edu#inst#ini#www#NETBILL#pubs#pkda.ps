URL: http://www.cs.cmu.edu/afs/andrew.cmu.edu/inst/ini/www/NETBILL/pubs/pkda.ps
Refering-URL: http://www.cs.cmu.edu/afs/andrew.cmu.edu/inst/ini/www/NETBILL/pubs.html
Root-URL: 
Email: sirbu@cmu.edu chuang+@cmu.edu  
Title: Distributed Authentication in Kerberos Using Public Key Cryptography  
Author: Marvin A. Sirbu John Chung-I Chuang 
Address: Pittsburgh, Pennsylvania 15213  
Affiliation: Carnegie Mellon University  
Abstract: In this work we describe a method for fully distributed authentication using public key cryptography within the Kerberos ticket framework. By distributing most of the authentication workload away from the trusted intermediary and to the communicating parties, significant enhancements to security and scalability can be achieved as compared to Kerberos V5. Privacy of Kerberos clients is also enhanced. A working implementation of this extended protocol has been developed, and a migration plan is proposed for a transition from traditional to public key based Kerberos. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Brackin. </author> <title> An Interface Specification Language for Automatically Analyzing Cryptographic Protocols, </title> <booktitle> Internet Society Symposium on Network and Distributed System Security, </booktitle> <month> February </month> <year> 1997. </year>
Reference-contexts: The PKDA protocol extension to Kerberos V5 is built upon existing public key infrastructure standards such as PKCS [12] and X.509 [6]. Detailed protocol specifications in ASN.1 format can be found in [13]. A sample specification of the protocol, based upon the Interface Specification Language <ref> [1] </ref>, can also be found in [8]. 2.1.
Reference: [2] <author> B. Cox, J.D. Tygar, M. Sirbu. </author> <title> NetBill Security and Transaction Protocol. </title> <booktitle> In Proceedings of the USENIX Workshop on Electronic Commerce, </booktitle> <month> July </month> <year> 1995. </year>
Reference-contexts: These proposals focus on various aspects of Kerberos, such as security and portability. The centralized KDC remains in all of the proposals. The present work, extended and generalized from the NetBill security and transaction protocol <ref> [2] </ref>, seeks to address both the scalability and security concerns by bypassing the centralized KDC altogether. This proposed extension to Kerberos shall be referred to as "Public key based Kerberos for Distributed Authentication" or "PKDA" in the remainder of this paper.
Reference: [3] <author> D. Davis. </author> <title> Kerberos Plus RSA for World Wide Web Security. </title> <booktitle> In Proceedings of the USENIX Workshop o n Electronic Commerce, </booktitle> <month> July </month> <year> 1995. </year>
Reference-contexts: By incorporating public key cryptography into the Kerberos framework, it should be possible to establish a Kerberos realm with millions of principals, with no need for cross-realm authentication. There have been numerous recent proposals to incorporate public key cryptography into Kerberos <ref> [3] </ref> [11]. These proposals focus on various aspects of Kerberos, such as security and portability. The centralized KDC remains in all of the proposals.
Reference: [4] <author> D.E. Denning, G.M. Sacco. </author> <title> Timestamps in Key Distribution Protocols. </title> <journal> Communication of the ACM, </journal> <volume> 24(8) </volume> <pages> 533-536, </pages> <month> August </month> <year> 1981. </year>
Reference-contexts: The random key K rand is signed for authenticity, while the server identity is included to prevent replay attacks first addressed by Denning-Sacco <ref> [4] </ref>. The server's public key (or any other identifier which uniquely ties the server's certificate to the key used in encrypting this PKTGS_REQ message) will serve to avert "man-in-the-middle" attacks.
Reference: [5] <author> A.O. Freier, P. Karlton, </author> <title> P.C. Kocher. Secure Socket Layer 3.0. </title> <type> Internet Draft, </type> <month> March </month> <year> 1996. </year> <note> (ftp://ietf.org/ internet-drafts/draft-freier-ssl-version3-01.txt) </note>
Reference-contexts: With a simple modification to the message format, it is possible to preserve the privacy of the client identity at very little cost. 1.2. PKDA versus SSL Version 3.0 of the Secure Sockets Layer protocol <ref> [5] </ref> provides public key based services for mutual authentication, and key exchange for privacy. It has been rapidly adopted by many firms for use in conjunction with HTTP, as well as for other services such as telnet.
Reference: [6] <author> International Telegraph and Telephone Consultative Committee (CCITT). </author> <title> Recommendation X.509: The Directory Authentication Framework. </title> <year> 1988. </year>
Reference-contexts: The PKDA protocol extension to Kerberos V5 is built upon existing public key infrastructure standards such as PKCS [12] and X.509 <ref> [6] </ref>. Detailed protocol specifications in ASN.1 format can be found in [13]. A sample specification of the protocol, based upon the Interface Specification Language [1], can also be found in [8]. 2.1.
Reference: [7] <author> J. Kohl, C. Neuman. </author> <title> The Kerberos Authentication Service (v5). Internet RFC 1510, </title> <month> September </month> <year> 1993. </year>
Reference-contexts: Rights delegation in PKDA will be discussed in Section 2.5. Despite these advantages for PKDA, the widespread support for SSL in the marketplace makes it a formidable alternative. 2. The PKDA Protocol In the RFC 1510 protocol specification for Kerberos V5 <ref> [7] </ref>, a normally executed (error-free) authentication procedure begins with the exchange of the following five messages: 1. C -&gt; AS: AS_REQ 3. C -&gt; TGS: TGS_REQ 5.
Reference: [8] <author> R. Lichota, G. Hammonds, S. Brackin. </author> <title> Verifying Cryptographic Protocols for Electronic Commerce. </title> <booktitle> 2nd USENIX Workshop on Electronic Commerce, </booktitle> <month> November </month> <year> 1996. </year>
Reference-contexts: Detailed protocol specifications in ASN.1 format can be found in [13]. A sample specification of the protocol, based upon the Interface Specification Language [1], can also be found in <ref> [8] </ref>. 2.1. <p> Progress The fundamental correctness of the PKDA protocol has been verified using Convince, a formal verification tool based on belief logic. This work is reported by Lichota et al. <ref> [8] </ref>. A working implementation of PKDA has been developed for the NetBill electronic payment project at CMU [14]. NetBill consumers and merchants authenticate with each other, as well as with the NetBill server, in a fully distributed manner using the handshake described above.
Reference: [9] <author> B.C. Neuman. </author> <title> Proxy-Based Authorization and Accounting for Distributed Systems. </title> <booktitle> In Proceedings of the 13th International Conference on Distributed Computing Systems, </booktitle> <month> May </month> <year> 1993. </year>
Reference-contexts: Direct authentication between client and server is thus accomplished. 2.5. Rights delegation in PKDA Kerberos V5 supports rights delegation via the use of proxiable and forwardable tickets. Neuman showed that it is straightforward to implement proxies in encryption-based authentication mechanisms based on either public key or conventional cryptography <ref> [9] </ref>. Under the proposed PKDA scheme, it is possible to achieve rights delegation even in the absence of a centralized KDC. As long as the destination server is PKDA-enabled and is configured to provide proxiable tickets, the same delegation mechanism used in Kerberos can be applied here.
Reference: [10] <author> B.C. Neuman, T. Ts'o. </author> <title> Kerberos: An Authentication Service for Computer Networks. </title> <journal> IEEE Communications, </journal> <volume> 32(9) </volume> <pages> 33-38, </pages> <month> September </month> <year> 1994. </year>
Reference: [11] <author> B.C. Neuman, B. Tung, J. Wray, J. Trostle. </author> <title> Public Key Cryptography for Initial Authentication in Kerberos. </title> <type> Internet Draft, </type> <month> October </month> <year> 1996. </year> <note> (ftp://ietf.org/internet- drafts/draft-ietf-cat-kerberos-pk-init-02.txt) </note>
Reference-contexts: Authentication schemes are needed which can scale to easily handle millions of principals within a single realm of trust, such as all the customers of a major bank. As Neuman et al. have noted <ref> [11] </ref> the traditional Kerberos presents an attractive security target in the form of the KDC which maintains a shared symmetric key with every principal in the realm. In the event of a KDC compromise, all the symmetric keys will be divulged to the attacker and will have to be revoked. <p> By incorporating public key cryptography into the Kerberos framework, it should be possible to establish a Kerberos realm with millions of principals, with no need for cross-realm authentication. There have been numerous recent proposals to incorporate public key cryptography into Kerberos [3] <ref> [11] </ref>. These proposals focus on various aspects of Kerberos, such as security and portability. The centralized KDC remains in all of the proposals. <p> The client can then proceed to request the desired service from the application server in step 5. This sequence of message exchanges is preserved in the proposed extension by Neuman et al. <ref> [11] </ref>. The extension departs from conventional Kerberos only in the first two steps, where the messages are encrypted and signed using the public key pairs of the client and the KDC. The client will continue to receive and use conventional TGT's and service tickets. <p> An Internet Draft [13] detailing the PKDA protocol, in its full specification, has been submitted to the IETF. This proposal is compatible with, and can be integrated with other current proposals (such as <ref> [11] </ref>) to bring public key cryptography into Kerberos. 5. Conclusion An extension to the Kerberos authentication framework has been described. This extension employs public key cryptography to facilitate initial authentication directly between Kerberos servers and clients.
Reference: [12] <author> RSA Laboratories. </author> <title> PKCS #7: Cryptographic Message Syntax Standard. </title> <note> Version 1.5, </note> <month> November </month> <year> 1993. </year>
Reference-contexts: The PKDA protocol extension to Kerberos V5 is built upon existing public key infrastructure standards such as PKCS <ref> [12] </ref> and X.509 [6]. Detailed protocol specifications in ASN.1 format can be found in [13]. A sample specification of the protocol, based upon the Interface Specification Language [1], can also be found in [8]. 2.1. <p> This field contains the information necessary to authenticate the client's identity and to check the integrity of the message. The construction of 'auth-data' deserves special attention. We choose to represent the 'auth-data' field using the 'SignedData' construct as specified in the PKCS Cryptographic Message Syntax Standard (PKCS #7) <ref> [12] </ref>. The 'SignedData' container includes not only a placeholder for the content to be signed, but also placeholders for the client's identity C, and the client's certificate 'c-cert' (among other supporting fields needed for public key operations).
Reference: [13] <author> M. Sirbu, J.C. Chuang. </author> <title> Public key Based Ticket Granting Service in Kerberos. </title> <type> Internet Draft, </type> <month> May </month> <year> 1996. </year> <note> (ftp://ietf.org/internet-drafts/draft-sirbu-kerb- ext-00.txt) </note>
Reference-contexts: The PKDA protocol extension to Kerberos V5 is built upon existing public key infrastructure standards such as PKCS [12] and X.509 [6]. Detailed protocol specifications in ASN.1 format can be found in <ref> [13] </ref>. A sample specification of the protocol, based upon the Interface Specification Language [1], can also be found in [8]. 2.1. <p> The full PKTGS_REQ message format, like the AS_REQ and TGS_REQ message formats, allows the client to set the PROXIABLE flag and specify the addresses from which the ticket is usable <ref> [13] </ref>. The PKDA-enabled server simply responds with a proxiable ticket. The client will then construct an authenticator which the grantee will present to the application server. <p> NetBill uses DCE RPC's between clients and servers and steps 1-4 of the PKDA protocol are additional RPC's that must be supported on any server's interface. A preprocessor to the standard DCE IDL compiler is used to automatically add these two RPC's to every interface. An Internet Draft <ref> [13] </ref> detailing the PKDA protocol, in its full specification, has been submitted to the IETF. This proposal is compatible with, and can be integrated with other current proposals (such as [11]) to bring public key cryptography into Kerberos. 5. Conclusion An extension to the Kerberos authentication framework has been described.
Reference: [14] <author> M. Sirbu, J.D. Tygar. NetBill: </author> <title> An Internet Commerce System Optimized for Network Delivered Services. </title> <booktitle> IEEE CompCon Conference, </booktitle> <month> March </month> <year> 1995. </year>
Reference-contexts: Progress The fundamental correctness of the PKDA protocol has been verified using Convince, a formal verification tool based on belief logic. This work is reported by Lichota et al. [8]. A working implementation of PKDA has been developed for the NetBill electronic payment project at CMU <ref> [14] </ref>. NetBill consumers and merchants authenticate with each other, as well as with the NetBill server, in a fully distributed manner using the handshake described above.
References-found: 14

