URL: ftp://ftp.cs.toronto.edu/pub/eric/RE97.ps.gz
Refering-URL: http://www.cs.toronto.edu/~eric/
Root-URL: 
Email: eric.yu@utoronto.ca  
Title: Towards Modelling and Reasoning Support for i framework is given as an example of a
Author: Eric S. K. Yu 
Degree: Early-Phase Requirements Engineering  
Note: line of the  
Address: Toronto, Ontario, Canada M5S 3G6  
Affiliation: Faculty of Information Studies, University of Toronto  
Abstract: Requirements are usually understood as stating what a system is supposed to do, as opposed to how it should do it. However, understanding the organizational context and rationales (the Whys) that lead up to systems requirements can be just as important for the ongoing success of the system. Requirements modelling techniques can be used to help deal with the knowledge and reasoning needed in this earlier phase of requirements engineering. However, most existing requirements techniques are intended more for the later phase of requirements engineering, which focuses on completeness, consistency, and automated verification of requirements. In contrast, the early phase aims to model and analyze stakeholder interests and how they might be addressed, or compromised, by various system-and-environment alternatives. This paper argues, therefore, that a different kind of modelling and reasoning support is needed for the early phase. An out 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. J. C. Blythe, J. Chudge, J.E. Dobson and M.R. Strens, ORDIT: </author> <title> a new methodology to assist in theprocess of eliciting and modelling organizational requirements. </title> <booktitle> Proc. Conference on Organizational Computing Systems, </booktitle> <address> Milpitas CA, </address> <year> 1993. </year> <pages> pp. 216-227. </pages>
Reference-contexts: Organization and enterprise models have been developed in the areas of organizational computing (e.g., <ref> [1] </ref>) and enterprise integration (e.g., [9]). However, few of these models have considered the intentional, strategic aspects of actors. Their focus has primarily been on activities and entities rather than on goals and rationales (the what rather than the why).
Reference: [2] <author> B. Boehm and H. </author> <title> In, Aids for Identifying Conflicts Among Quality Requirements, </title> <journal> IEEE Software, </journal> <month> March </month> <year> 1996. </year>
Reference-contexts: The framework of [5] uses multiple models to model actors, objectives, subject concepts and requirements separately, and is close in spirit to the i fl framework in many ways. The WinWin framework of <ref> [2] </ref> identifies stakeholder interests and links them to quality requirements. The notion of inquiry cycle in [31] is closely related to the early-phase RE notion, but takes a scenarios approach.
Reference: [3] <author> L. Briand, W. Melo, C. Seaman and V. Basili, </author> <title> Characterizing and Assessing a Large-Scale Software Maintenance Organization, </title> <booktitle> Proc. 17th Int. Conf. Software Engineering. </booktitle> <address> Seattle, WA. </address> <year> 1995. </year>
Reference-contexts: The application of knowledge-based techniques to early-phase RE could potentially bring about a more systematic approach to this often ad hoc, under-supported phase of system de velopment. Preliminary assessments of the usefulness of i fl elling in a real setting have been positive <ref> [3] </ref>. Supporting tools and usage methodologies are being developed in an on-going project [42].
Reference: [4] <author> J. A. Bubenko, </author> <title> Information Modeling in the Context of System Development, </title> <booktitle> Proc. IFIP, </booktitle> <year> 1980, </year> <pages> pp. 395-411. </pages>
Reference-contexts: In the early phase, the need to treat multiple viewpoints involving complex relationships among various types of actors is even more important. 4 Related work In the requirements modelling area, the need to model the environment is well recognized (e.g., <ref> [4] </ref> [19] [23] ). Organization and enterprise models have been developed in the areas of organizational computing (e.g., [1]) and enterprise integration (e.g., [9]). However, few of these models have considered the intentional, strategic aspects of actors.
Reference: [5] <author> J. A. Bubenko, </author> <title> Extending the Scope of Information Modeling, </title> <booktitle> Proc. 4th Int. Workshop on the Deductive Approach to Information Systems and Databases, </booktitle> <address> Lloret-Costa Brava, Catalonia, </address> <month> Sept. </month> <pages> 20-22, </pages> <year> 1993, </year> <pages> pp. 73-98. </pages>
Reference-contexts: Their focus has primarily been on activities and entities rather than on goals and rationales (the what rather than the why). A number of requirements engineering frameworks have introduced concepts of agents or actors, and employ goal-oriented techniques. The framework of <ref> [5] </ref> uses multiple models to model actors, objectives, subject concepts and requirements separately, and is close in spirit to the i fl framework in many ways. The WinWin framework of [2] identifies stakeholder interests and links them to quality requirements.
Reference: [6] <author> J. A. Bubenko, </author> <title> Challenges in Requirements Engineering, </title> <booktitle> Proc. 2nd IEEE Int. Symposium on Requirements Engineering, </booktitle> <address> York, England, </address> <month> March </month> <year> 1995, </year> <pages> pp. 160-162. </pages>
Reference: [7] <author> K. L. Chung, </author> <title> Representing and Using Non-Functional Requirements for Information System Development: A Process-Oriented Approach, </title> <type> Ph.D. Thesis, also Tech. </type> <institution> Rpt. DKBS-TR-93-1, Dept. of Comp. Sci., Univ. of Toronto, </institution> <month> June </month> <year> 1993. </year>
Reference-contexts: The type of reasoning support desired is therefore closer to those developed in issue-based information systems, argumentation frameworks, and design rationales (e.g., [10] [30] [26] [25]). The i approach is an adaptation of a framework developed for dealing with non-functional re quirements <ref> [7] </ref>, which draws on these earlier frameworks. Organizational actors. In modelling organizational environments, a richer notion of actor is needed. i fl differentiates actors into agents, roles, and positions [39].
Reference: [8] <author> L. Chung, B. Nixon and E. Yu, </author> <title> Using Non-Functional Requirements to Systematically Support Change, </title> <booktitle> 2nd IEEE Int. Symp. on Requirements Engineering (RE'95), </booktitle> <address> York, England, </address> <month> March </month> <year> 1995. </year>
Reference: [9] <institution> CIMOSA Open Systems Architecture for CIM, ESPRIT Consortium AMICE, </institution> <note> Springer-Verlag 1993. </note>
Reference-contexts: Organization and enterprise models have been developed in the areas of organizational computing (e.g., [1]) and enterprise integration (e.g., <ref> [9] </ref>). However, few of these models have considered the intentional, strategic aspects of actors. Their focus has primarily been on activities and entities rather than on goals and rationales (the what rather than the why).
Reference: [10] <author> J. Conklin and M. L. Begeman, gIBIS: </author> <title> A Hypertext Tool for Explanatory Policy Discussions, </title> <journal> ACM Transactions on Office Information Systems, </journal> <volume> 6(4), </volume> <year> 1988, </year> <pages> pp. 303-331. </pages>
Reference-contexts: It is the stakeholders' decision as to when the issues have been adequately explored and a sufficiently satisfactory solution found. The type of reasoning support desired is therefore closer to those developed in issue-based information systems, argumentation frameworks, and design rationales (e.g., <ref> [10] </ref> [30] [26] [25]). The i approach is an adaptation of a framework developed for dealing with non-functional re quirements [7], which draws on these earlier frameworks. Organizational actors. In modelling organizational environments, a richer notion of actor is needed. i fl differentiates actors into agents, roles, and positions [39].
Reference: [11] <author> B. Curtis, H. Krasner and N. Iscoe, </author> <title> A Field Study of the Software Design Process for Large Systems, </title> <journal> Communications of the ACM, </journal> <volume> 31(11), </volume> <year> 1988, </year> <pages> pp. 1268-1287. </pages>
Reference: [12] <author> A. Dardenne, A. van Lamsweerde and S. Fickas, </author> <title> Goal-Directed Requirements Acquisition, </title> <booktitle> Science of Computer Programming, </booktitle> <volume> 20, </volume> <year> 1993, </year> <pages> pp. 3-50. </pages>
Reference-contexts: The WinWin framework of [2] identifies stakeholder interests and links them to quality requirements. The notion of inquiry cycle in [31] is closely related to the early-phase RE notion, but takes a scenarios approach. The KAOS framework <ref> [12] </ref> [35] for requirements acquisition employs the notions of goals and agents, and provides a methodology for obtaining requirements specifications from global organizational goals. However, these frameworks do not distinguish between the needs of early-phase vs. late-phase RE.
Reference: [13] <author> E. Dubois, J. Hagelstein, E. Lahou, F. Ponsaert and A. Ri-faut, </author> <title> A Knowledge Representation Language for Requirements Engineering, </title> <journal> Proc. IEEE, </journal> <volume> 74 (10), </volume> <month> Oct. </month> <year> 1986, </year> <pages> pp. </pages> <address> 1431 -1444. </address>
Reference: [14] <author> E. Dubois, </author> <title> A Logic of Action for Supporting Goal-Oriented Elaborations of Requirements, </title> <booktitle> Proc. 5th International Workshop on Software Specification and Design, </booktitle> <address> Pittsburgh, PA, </address> <year> 1989, </year> <pages> pp. 160-168. </pages>
Reference: [15] <author> Ph. Du Bois, </author> <title> The Albert II Language On the Design and the Use of a Formal Specification Language for Requirements Analysis, </title> <type> Ph.D. Thesis, </type> <institution> Department of Computer Science, University of Namur, </institution> <year> 1995. </year>
Reference: [16] <author> M. S. Feather, </author> <title> Language Support for the Specification and Development of Composite Systems, </title> <journal> ACM Trans. Prog. Lang. and Sys. </journal> <volume> 9, 2, </volume> <month> April </month> <year> 1987, </year> <pages> pp. 198-234. </pages>
Reference: [17] <author> S. Fickas and R. Helm, </author> <title> Knowledge Representation and Reasoning in the Design of Composite Systems, </title> <journal> IEEE Trans. Soft. Eng., </journal> <volume> 18, 6, </volume> <month> June </month> <year> 1992, </year> <pages> pp. 470-482. </pages>
Reference: [18] <author> O.C.Z. Gotel and A.C.W. Finkelstein, </author> <title> An Analysis of the Requirements Traceability Problem, </title> <booktitle> Proc. IEEE Int. Conf. on Requirements Engineering, </booktitle> <address> Colorado Springs, </address> <month> April </month> <year> 1994, </year> <pages> pp. 94-101. </pages>
Reference: [19] <author> S. J. Greenspan, J. Mylopoulos, and A. Borgida, </author> <title> Capturing More World Knowledge in the Requirements Specification, </title> <booktitle> Proc. Int. Conf. on Software Eng., </booktitle> <address> Tokyo, </address> <year> 1982. </year>
Reference-contexts: In the early phase, the need to treat multiple viewpoints involving complex relationships among various types of actors is even more important. 4 Related work In the requirements modelling area, the need to model the environment is well recognized (e.g., [4] <ref> [19] </ref> [23] ). Organization and enterprise models have been developed in the areas of organizational computing (e.g., [1]) and enterprise integration (e.g., [9]). However, few of these models have considered the intentional, strategic aspects of actors.
Reference: [20] <author> S. J. Greenspan, J. Mylopoulos and A. Borgida, </author> <title> On Formal Requirements Modeling Languages: RML Revisited, (invited plenary talk), </title> <booktitle> Proc. 16th Int. Conf. Software Engineering, </booktitle> <month> May 16-21 </month> <year> 1994, </year> <title> Sorrento, </title> <booktitle> Italy, </booktitle> <pages> pp. 135-147. </pages>
Reference-contexts: As with other phases in the software development life cycle, the relationship between early and late phase RE is not strictly sequential or even temporal. Each phase generates and draw on a certain kind of knowledge, which needs to be maintained throughout the life cycle for maximum benefit [24] <ref> [20] </ref> [28]. The application of knowledge-based techniques to early-phase RE could potentially bring about a more systematic approach to this often ad hoc, under-supported phase of system de velopment. Preliminary assessments of the usefulness of i fl elling in a real setting have been positive [3].
Reference: [21] <author> J. Grudin, </author> <title> Why CSCW Applications Fail: Problems in the Design and Evaln of Organizational Interfaces, </title> <booktitle> Proc. Conference on Computer-Supported Cooperative Work 1988, </booktitle> <pages> pp. 85-93. </pages>
Reference: [22] <author> M. Hammer and J. Champy, </author> <title> Reengineering the Corporation: A Manifesto for Business Revolution, </title> <address> HarperBusiness, </address> <year> 1993. </year>
Reference: [23] <author> M. Jackson, </author> <title> System Development, </title> <publisher> Prentice-Hall, </publisher> <year> 1983. </year>
Reference-contexts: In the early phase, the need to treat multiple viewpoints involving complex relationships among various types of actors is even more important. 4 Related work In the requirements modelling area, the need to model the environment is well recognized (e.g., [4] [19] <ref> [23] </ref> ). Organization and enterprise models have been developed in the areas of organizational computing (e.g., [1]) and enterprise integration (e.g., [9]). However, few of these models have considered the intentional, strategic aspects of actors.
Reference: [24] <author> M. Jarke, J. Mylopoulos, J. W. Schmidt and Y. Vassiliou, DAIDA: </author> <title> An Environment for Evolving Information Systems, </title> <journal> ACM Trans. Information Systems, </journal> <volume> vol. 10, no. 1, </volume> <month> Jan </month> <year> 1992, </year> <pages> pp. 1-50. </pages>
Reference-contexts: As with other phases in the software development life cycle, the relationship between early and late phase RE is not strictly sequential or even temporal. Each phase generates and draw on a certain kind of knowledge, which needs to be maintained throughout the life cycle for maximum benefit <ref> [24] </ref> [20] [28]. The application of knowledge-based techniques to early-phase RE could potentially bring about a more systematic approach to this often ad hoc, under-supported phase of system de velopment. Preliminary assessments of the usefulness of i fl elling in a real setting have been positive [3].
Reference: [25] <author> J. Lee, </author> <title> A Decision Rationale Management System: Capturing, Reusing, and Managing the Reasons for Decisions, </title> <type> Ph.D. thesis, </type> <institution> MIT, </institution> <year> 1992. </year>
Reference-contexts: It is the stakeholders' decision as to when the issues have been adequately explored and a sufficiently satisfactory solution found. The type of reasoning support desired is therefore closer to those developed in issue-based information systems, argumentation frameworks, and design rationales (e.g., [10] [30] [26] <ref> [25] </ref>). The i approach is an adaptation of a framework developed for dealing with non-functional re quirements [7], which draws on these earlier frameworks. Organizational actors. In modelling organizational environments, a richer notion of actor is needed. i fl differentiates actors into agents, roles, and positions [39].
Reference: [26] <author> A. MacLean, R. Young, V. Bellotti and T. Moran, </author> <title> Questions, Options, and Criteria: Elements of Design Space Analysis, </title> <journal> Human-Computer Interaction, </journal> <volume> vol. 6, </volume> <year> 1991, </year> <pages> pp. 201-250. </pages>
Reference-contexts: It is the stakeholders' decision as to when the issues have been adequately explored and a sufficiently satisfactory solution found. The type of reasoning support desired is therefore closer to those developed in issue-based information systems, argumentation frameworks, and design rationales (e.g., [10] [30] <ref> [26] </ref> [25]). The i approach is an adaptation of a framework developed for dealing with non-functional re quirements [7], which draws on these earlier frameworks. Organizational actors. In modelling organizational environments, a richer notion of actor is needed. i fl differentiates actors into agents, roles, and positions [39].
Reference: [27] <author> J. Mylopoulos, A. Borgida, M. Jarke and M. Koubarakis, Te-los: </author> <title> Representing Knowledge about Information Systems, </title> <journal> ACM Trans. Info. Sys., </journal> <volume> 8 (4), </volume> <year> 1991. </year>
Reference: [28] <author> J. Mylopoulos, A. Borgida and E. Yu, </author> <title> Representing Software Engineering Knowledge, </title> <journal> Automated Software Engineering, </journal> <note> to appear. </note>
Reference-contexts: Each phase generates and draw on a certain kind of knowledge, which needs to be maintained throughout the life cycle for maximum benefit [24] [20] <ref> [28] </ref>. The application of knowledge-based techniques to early-phase RE could potentially bring about a more systematic approach to this often ad hoc, under-supported phase of system de velopment. Preliminary assessments of the usefulness of i fl elling in a real setting have been positive [3].
Reference: [29] <author> B. Nuseibeh, J. Kramer and A. Finkelstein, </author> <title> Expressing the Relationships Between Multiples Views in Requirements Specification, </title> <booktitle> Proc. 15th Int. Conf. on Software Engineering, </booktitle> <address> Baltimore, </address> <year> 1993, </year> <pages> pp. 187-196. </pages>
Reference-contexts: In late-phase requirements engineering, where the focus is on specifying behaviours rather than intentional relationships, such distinctions may not be as significant. Viewpoints has been recognized as an important topic in requirements engineering (e.g., <ref> [29] </ref>). In the early phase, the need to treat multiple viewpoints involving complex relationships among various types of actors is even more important. 4 Related work In the requirements modelling area, the need to model the environment is well recognized (e.g., [4] [19] [23] ).
Reference: [30] <author> C. Potts and G. Bruns, </author> <title> Recording the Reasons for Design Decisions, </title> <booktitle> Proc. 10th Int. Conf. on Software Engineering , 1988, </booktitle> <pages> pp. 418-427. </pages>
Reference-contexts: It is the stakeholders' decision as to when the issues have been adequately explored and a sufficiently satisfactory solution found. The type of reasoning support desired is therefore closer to those developed in issue-based information systems, argumentation frameworks, and design rationales (e.g., [10] <ref> [30] </ref> [26] [25]). The i approach is an adaptation of a framework developed for dealing with non-functional re quirements [7], which draws on these earlier frameworks. Organizational actors. In modelling organizational environments, a richer notion of actor is needed. i fl differentiates actors into agents, roles, and positions [39].
Reference: [31] <author> C. Potts, K. Takahashi and A. Anton, </author> <title> Inquiry-Based Requirements Analysis, </title> <journal> IEEE Software, </journal> <month> March </month> <year> 1994, </year> <pages> pp. 21-32. </pages>
Reference-contexts: The framework of [5] uses multiple models to model actors, objectives, subject concepts and requirements separately, and is close in spirit to the i fl framework in many ways. The WinWin framework of [2] identifies stakeholder interests and links them to quality requirements. The notion of inquiry cycle in <ref> [31] </ref> is closely related to the early-phase RE notion, but takes a scenarios approach. The KAOS framework [12] [35] for requirements acquisition employs the notions of goals and agents, and provides a methodology for obtaining requirements specifications from global organizational goals.
Reference: [32] <author> D. T. Ross and K. E. Shoman, </author> <title> Structured Analysis for Requirements Definition, </title> <journal> IEEE Trans. Soft. Eng., </journal> <volume> Vol. SE-3, No. 1, </volume> <month> Jan. </month> <year> 1977. </year>
Reference-contexts: agents are assumed to be strategic, whose intentionality are only partially revealed, who are concerned about opportunities and vulnerabilities, and who seek to advance or protect their strategic interests by restructuring intentional relationships. 5 Conclusions Understanding why has been considered an important part of requirements engineering since its early days <ref> [32] </ref>. Frameworks and techniques to explicitly support the mod-elling of and reasoning about agents' goals and rationales have recently been developed in RE.
Reference: [33] <editor> H. A. Simon, </editor> <booktitle> The Sciences of the Artificial, 2nd ed., </booktitle> <address> Cam-bridge, MA: </address> <publisher> The MIT Press, </publisher> <year> 1981. </year>
Reference: [34] <author> A. Van Lamsweerde, R. Darimont and Ph. Massonet, </author> <title> The Meeting Scheduler Problem: Preliminary Definition. Copies may be obtained from Prof. </title> <type> Van Lamsweerde, </type> <institution> Universite Catholique de Louvain, Unite d'Informatique, Place Sainte-Barbe, </institution> <address> 2, B-1348 Louvain-la-Neuve, Belgium. (avl@info.ucl.ac.be) </address>
Reference: [35] <author> A. Van Lamsweerde, R. Darimont and Ph. Massonet, </author> <title> Goal-Directed Elaboration of Requirements for a Meeting Sched-uler: Problems and Lessons Learnt, </title> <booktitle> Proceedings of 2nd IEEE Int. Symposium on Requirements Engineering, </booktitle> <address> York, England, </address> <month> March </month> <year> 1995, </year> <pages> pp. 194-203. </pages>
Reference-contexts: The WinWin framework of [2] identifies stakeholder interests and links them to quality requirements. The notion of inquiry cycle in [31] is closely related to the early-phase RE notion, but takes a scenarios approach. The KAOS framework [12] <ref> [35] </ref> for requirements acquisition employs the notions of goals and agents, and provides a methodology for obtaining requirements specifications from global organizational goals. However, these frameworks do not distinguish between the needs of early-phase vs. late-phase RE.
Reference: [36] <author> E. Yu, </author> <title> Modelling Organizations for Information Systems Requirements Engineering, </title> <booktitle> Proceedings of First IEEE Symposium on Requirements Engineering, </booktitle> <address> San Diego, Calif., </address> <month> January </month> <year> 1993, </year> <pages> pp. 34-41. </pages>
Reference: [37] <author> E. Yu and J. Mylopoulos, </author> <title> Understanding Why in Requirements Engineering with an Example, Workshop on System Requirements: Analysis, Management, and Exploitation, </title> <publisher> Schlo Dagstuhl, Saarland, </publisher> <address> Germany, </address> <month> October 4-7, </month> <year> 1994. </year>
Reference: [38] <author> E. Yu and J. Mylopoulos, </author> <title> Understanding `Why' in Software Process Modelling, Analysis, </title> <booktitle> and Design, Proc. 16th Int. Conf. on Software Engineering, </booktitle> <address> Sorrento, Italy, </address> <month> May </month> <year> 1994, </year> <pages> pp. 159-168. </pages>
Reference: [39] <author> E. Yu, </author> <title> Modelling Strategic Relationships for Process Reengineering, </title> <type> Ph.D. thesis, also Tech. Report DKBS-TR-94-6, </type> <institution> Dept. of Computer Science, University of Toronto, </institution> <year> 1995. </year>
Reference-contexts: The i approach is an adaptation of a framework developed for dealing with non-functional re quirements [7], which draws on these earlier frameworks. Organizational actors. In modelling organizational environments, a richer notion of actor is needed. i fl differentiates actors into agents, roles, and positions <ref> [39] </ref>. In late-phase requirements engineering, where the focus is on specifying behaviours rather than intentional relationships, such distinctions may not be as significant. Viewpoints has been recognized as an important topic in requirements engineering (e.g., [29]).
Reference: [40] <author> E. Yu, P. Du Bois, E. Dubois and J. Mylopoulos, </author> <title> From Organization Models to System Requirements A `Cooperating Agents' Approach, </title> <booktitle> Proc. 3rd Int. Conf. on Cooperative Information Systems (CoopIS-95), </booktitle> <address> Vienna, Austria, </address> <month> May </month> <year> 1995, </year> <pages> pp. 194-204. </pages>
Reference-contexts: The proposal to use a modelling framework tailored specifically to early-phase RE and a separate framework for late-phase RE implies that a linkage between the two kinds of framework is needed <ref> [40] </ref>. As with other phases in the software development life cycle, the relationship between early and late phase RE is not strictly sequential or even temporal.
Reference: [41] <author> E. Yu and J. Mylopoulos, </author> <title> From E-R to `A-R' - Modelling Strategic Actor Relationships for Business Process Reengi-neering, </title> <journal> Int. Journal of Intelligent and Cooperative Information Systems, </journal> <volume> vol. 4, no. 2 & 3, </volume> <year> 1995, </year> <pages> pp. 125-144. </pages>
Reference: [42] <author> E. Yu, J. Mylopoulos and Y. Lesperance, </author> <title> AI Models for Business Process Reengineering, </title> <journal> IEEE Expert, </journal> <month> August </month> <year> 1996, </year> <pages> pp. 16-23. </pages>
Reference-contexts: Preliminary assessments of the usefulness of i fl elling in a real setting have been positive [3]. Supporting tools and usage methodologies are being developed in an on-going project <ref> [42] </ref>. Acknowledgments The author gratefully acknowledges the many helpful suggestions from anonymous referees, Eric Dubois, Brian Nixon, and Lawrence Chung, as well as on-going guidance from John Mylopoulos, and financial support from the Information Technology Research Centre of Ontario, and the Natural Sciences and Engineering Research Council of Canada.
References-found: 42

