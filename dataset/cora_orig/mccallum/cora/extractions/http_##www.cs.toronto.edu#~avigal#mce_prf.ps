URL: http://www.cs.toronto.edu/~avigal/mce_prf.ps
Refering-URL: http://www.cs.toronto.edu/~avigal/publications.html
Root-URL: http://www.cs.toronto.edu
Title: Manipulating Control Elements: a Flexible Mechanism for Cooperative Information Systems Proofs of lemmas and theorems  
Author: Avigdor Gal 
Keyword: cooperative information systems, global information systems, multidatabases, distributed database systems, federated database systems, active database systems  
Address: Toronto  
Affiliation: Department of Computer Science University of  
Abstract: Cooperative information systems (CISs) are information systems with data dependencies and interoperability relationships. The paradigm for such systems involves large numbers of information systems distributed over large, complex computer/communication networks. Due to unreliable network technologies, and the possible autonomous decisions of availability of each information system, CISs should be flexible enough to maintain a reasonable level of operation. In this paper we introduce control elements as a tool for modeling the relationships among CISs. A control element combines a definition of a set of CISs' global behavior with an executable data structure for cooperation among them. Manipulating control elements using local transformations increases the flexibility of these systems by allowing multiple paths for receiving data and activating operations. We provide two techniques for manipulating control elements, namely the substitute method and the phantom node method. Using these techniques, CISs can change the level of interaction among themselves, and increase parallelism. The paper presents a complexity analysis showing the low cost of local transformation using these techniques. Control elements are implemented as part of the CoopWARE environment for supporting the cooperation among information systems. fl This paper is a complementary paper to the paper "Manipulating Control Elements: a Flexible Mecha nism for Cooperative Information Systems," submitted to the VLDB'96 y Address: Department of Computer Science, University of Toronto, 6 King's College Road, Toronto, Canada M5S 3H5; Phone: (416) 978-7330; Fax: (416) 978-1455; e-mail: avigal@cs.toronto.edu 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> O. Etzion. </author> <title> Active interdatabase dependencies. </title> <journal> Information Sciences, </journal> <volume> 75 </volume> <pages> 133-163, </pages> <year> 1993. </year>
Reference-contexts: ELE is the set of all properties and external events in EXP. CON : an assertion that denotes a pre-condition for activation. M AT : a matching clause that defines the objects that participate in the operation. A matching clause defines a matching process <ref> [1] </ref>, which bares similarity to the join operator in the relational algebra. T RG : events that trigger the operation.
Reference: [2] <author> A. Gal. </author> <title> TALE | A Temporal Active Language and Execution Model. </title> <type> PhD thesis, </type> <institution> Technion|Israel Institute of Technology, Technion City, Haifa, Israel, </institution> <month> May </month> <year> 1995. </year> <note> Available through the author's WWW home page, http://www.cs.toronto.edu/avigal. </note>
Reference-contexts: T RG consists of external events and properties that their modification triggers the operation. * The operation clauses given by the user are parsed to generate a control graph, an executable data structure that monitors the update process of an active database <ref> [2] </ref> and coordinates the activation of CISs. The control graph consists of a set of nodes, representing the application's events and operations. The set of edges denote relationships through which these elements interact. In addition to an explicit triggering that connects events and operations, implicit triggering is generated as follows.
Reference: [3] <author> A. Gal, O. Etzion, and A. Segev. </author> <title> A language for the support of constraints in temporal active databases. </title> <booktitle> In Proc. Workshop on Constraints, Databases and Logic Programming, </booktitle> <pages> pages 42-58, </pages> <address> Portland, Oregon, </address> <month> Dec </month> <year> 1995. </year>
Reference-contexts: (ho; o i 2 ce 1 ^ ho; o i =2 ce 2 _ ho; o i =2 ce 1 ^ ho; o i 2 ce 2 ). * An execution process of an application is based on the control element of that application, and is given in detail in <ref> [3] </ref>. An execution starts with the activation of each of the direct operations given by the user and external events detected by sensors. The activation of an external event results in triggering the event's outgoing edges. <p> If there are no more ingoing edges to be triggered for an operation, then the operation is activated. Otherwise, the operation should wait for the next triggering. This mode of execution guarantees that each activated operation is scheduled only once. Two direct conclusions from the execution model follow <ref> [3] </ref>. Conclusion 1 Let hO; CG (O)i be a control element.
Reference: [4] <author> A.Y. Levy, D. Srivastava, and T. Kirk. </author> <title> Data model and query evaluation in global information systems. </title> <journal> Journal of Intelligent Information Systems, </journal> <volume> 5 </volume> <pages> 121-143, </pages> <year> 1995. </year>
Reference-contexts: 1 The model * Cooperative information systems (CISs) [5] are information systems with data dependencies and interoperability relationships. For example, a federated database [6] consists of CISs, where each is a localized heterogeneous database, connected through computer networks for the purpose of updating and retrieving views; a global information system <ref> [4] </ref> consists of CISs, which are autonomous information resources, not limited to database systems. * We use a generic data model where an object is generically defined as an instance of a class or a tuple in a relation, and a property is defined as an attribute in the object-oriented model
Reference: [5] <editor> G.D. Michelis et al. </editor> <title> Cooperative information systems: A manifesto. </title> <booktitle> In to appear in the Proceedings of the 4th International Conference on Cooperative Information systems, </booktitle> <month> June </month> <year> 1996. </year> <month> 9 </month>
Reference-contexts: 1 The model * Cooperative information systems (CISs) <ref> [5] </ref> are information systems with data dependencies and interoperability relationships.
Reference: [6] <author> A. Sheth and J. Larson. </author> <title> Federated database systems for managing distributed, hetero-geneous, and autonomous databases. </title> <journal> ACM Computing Surveys, </journal> <volume> 22(3) </volume> <pages> 183-236, </pages> <year> 1990. </year> <month> 10 </month>
Reference-contexts: 1 The model * Cooperative information systems (CISs) [5] are information systems with data dependencies and interoperability relationships. For example, a federated database <ref> [6] </ref> consists of CISs, where each is a localized heterogeneous database, connected through computer networks for the purpose of updating and retrieving views; a global information system [4] consists of CISs, which are autonomous information resources, not limited to database systems. * We use a generic data model where an object
References-found: 6

