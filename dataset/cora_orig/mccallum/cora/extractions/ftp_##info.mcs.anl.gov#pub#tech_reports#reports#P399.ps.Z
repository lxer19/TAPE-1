URL: ftp://info.mcs.anl.gov/pub/tech_reports/reports/P399.ps.Z
Refering-URL: http://www.mcs.anl.gov/publications/abstracts/abstracts93.htm
Root-URL: http://www.mcs.anl.gov
Email: e-mail: mccune@mcs.anl.gov  
Phone: phone: 708-252-3065  
Title: OTTER 3.0 2. Move given_clause from sos to usable; 3. Infer and process new clauses
Author: William McCune 
Date: March 1994.  
Note: Preprint MCS-P399-1193,  While (sos is not empty and no refutation has been found)  New  This work was supported by the Office of Scientific Computing, U.S. Department of Energy, under Contract W-31-109-Eng-38.  
Address: Argonne, Illinois 60439-4844, U.S.A.  Argonne, Ill.,  
Affiliation: Mathematics and Computer Science Division Argonne National Laboratory  Mathematics and Computer Science Division, Argonne National Laboratory,  
Abstract: Otter is a clause-based theorem prover for first-order logic with equality. It offers the inference rules binary resolution, hyperresolution, unit-resulting resolution, and paramodulation; it also offers forward and backward subsumption, forward and backward demodulation (rewriting), term ordering, Knuth-Bendix completion, answer literals, and conversion of first-order formulas to clauses. Otter 3.0 can be used in two modes. In the ordinary mode, the user specifies inferences rules and a search strategy, and in the autonomous mode (new in Otter 3.0, see below) the user simply supplies a set of clauses. The goal in building Otter was to have a fast, production-quality theorem prover for experimenting with new methods and for assisting mathematicians and logicians with their research. At the core of Otter is a straightforward mechanism, the given-clause algorithm, for drawing inferences and searching for a refutation with the set of support strategy. The given-clause algorithm operates mainly on two lists of clauses, sos and usable. At the start of the search, sos is the supported clauses, and usable is the nonsupported clauses. The main loop of the given-clause algorithm is the following. Surrounding the core of Otter are many additional features, including weighting functions to guide and restrict the search, a simple interactive routine for modifying the search, a flexible syntax, and evaluable functions and enhanced term rewriting for "programming" searches. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> W. McCune. </author> <title> Otter 3.0 Reference Manual and Guide. </title> <type> Tech. report, </type> <institution> Argonne National Laboratory, Argonne, Ill., </institution> <year> 1993. </year>
Reference-contexts: If a problem is not listed, then a proof was not found within ten minutes. Availability. The Otter 3.0 distribution, including source code, many test problems, and the manual <ref> [1] </ref>, is freely available by anonymous FTP from info@mcs.anl.gov; see the file pub/Otter/README. Otter 3.0 might be available for DOS and/or Macintosh operating systems in the near future. One can request information by e-mail from otter@mcs.anl.gov.
Reference: [2] <author> C.B. Suttner, G. Sutcliffe, and T. Yemenis. </author> <title> The TPTP Problem Library (TPTP v1.0.0 - TR 13.11.93). </title> <type> Technical Report FKI-184-93, </type> <institution> Institut fur Informatik, Technische Universitat Munchen, Munich, </institution> <type> Germany; Technical Report 93/11, </type> <institution> Department of Computer Science, James Cook University, </institution> <address> Townsville, Australia, </address> <year> 1993. </year> <month> 6 </month>
Reference-contexts: The properties that are considered are whether the clauses are Horn, are propositional, involve equality, contain equality axioms, and are all units. Experiments on TPTP. Table 1 lists the results of Otter in its autonomous mode for the problems of TPTP v1.0.0 <ref> [2] </ref>. TPTP problems involving equality contain equality axioms, and for those problems, we deleted the equality axioms and used paramodulation and demodulation instead.
References-found: 2

