URL: http://www.daimi.aau.dk/~brian/beijing.ps
Refering-URL: http://www.daimi.aau.dk/~brian/
Root-URL: http://www.daimi.aau.dk
Email: brian@daimi.aau.dk, rehder@daimi.aau.dk, junping@daimi.aau.dk  
Title: Intelligent Network Agents for Modelling Nature  
Author: Brian H. Mayoh, Martin J. Rehder, Du Junping 
Address: Ny Munkegade, Building 540 DK-8000, Aarhus C, Denmark  
Affiliation: Computer Science Department, Aarhus University,  
Abstract: In this paper we present solutions to the agent design problem. We have extended the theory of intelligent agent systems. One of the extensions was "society agents", another was "evolution", another was "wrapper agents", yet another was multimedia and VR generated at various sites. We have shown that the extended theory is realistic by designing a GIS + Swarm solution to a complex but important modelling problem, which must be run on a network of intercommunicating processors. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Y.Shoham, </author> <title> Agent-oriented programming. Art. </title> <journal> Int, </journal> <volume> 60, </volume> <year> 1993, </year> <pages> pp. 51-92. </pages>
Reference-contexts: In the other sections we not only sketch designs for the simulation of deer behaviour and robot soccer, but we also suggest various modifications and extensions to the concepts of "agent-oriented programming", described so convincingly in <ref> [1, 2] </ref>. <p> In figure 1, single-headed arrows indicate that agents can exchange messages with other agents. These messages may be written in KIF/KQML [9] or some other well-defined agent communication language. The agents may be written in Agent0 <ref> [1] </ref> or some other well-defined agent description language. The double-headed arrow indicates that agents can broadcast information and images of themselves to any interested listener, a capability essential to the use of agents in animations and virtual reality. <p> OBSERVERSWARM MODELSWARM Animals Control Environment Kohonen Net SWARMOBJECT SWARM Message-Send Inheritance Communication between dependent agents can be synchronous or asynchronous. If one chooses asynchronous communication, then agents must make commitments that they intend to keep <ref> [1] </ref>; if one chooses synchronous communications, then agents must solve the global time problem by such methods as timestamping messages. In Swarm there is an elaborate time hierarchy, so the modeller can mix synchronous and asynchronous communication appropriately.
Reference: [2] <author> Y.Shoham. </author> <title> Theories of agenthood, </title> <editor> SCAI91 (Ed. B. </editor> <publisher> Mayoh) IOS Press; 1991, </publisher> <pages> pp. 40-46. </pages>
Reference-contexts: In the other sections we not only sketch designs for the simulation of deer behaviour and robot soccer, but we also suggest various modifications and extensions to the concepts of "agent-oriented programming", described so convincingly in <ref> [1, 2] </ref>.
Reference: [3] <author> K.O.Hansen, O.flstergaard, S.Weber, H.B.Hansen, </author> <title> Emergency management training : using a virtual reality representation of the disaster site to train site decision makers. </title> <booktitle> Proc. </booktitle> <address> TIEMEC, Nice, </address> <year> 1995. </year>
Reference-contexts: The arguments for these modifications and extensions are based on: Aarhus experience in CSCW, Virtual Reality and evolutionary computing projects <ref> [3, 4, 5] </ref> analysis of some of the projects fostered by Santa Fes SWARM agent system [6] analysis of some other agent systems analysis of various ecological modelling systems We are only interested in agent systems, which can run on networks of processors. 2.
Reference: [4] <author> K. Grnbk, M. Kyng, P. Mogensen, </author> <title> CSCW challenges: cooperative design in engineering projects, </title> <journal> Comm. ACM, </journal> <volume> 36, </volume> <year> 1993, </year> <pages> pp. 67-77. </pages>
Reference-contexts: The arguments for these modifications and extensions are based on: Aarhus experience in CSCW, Virtual Reality and evolutionary computing projects <ref> [3, 4, 5] </ref> analysis of some of the projects fostered by Santa Fes SWARM agent system [6] analysis of some other agent systems analysis of various ecological modelling systems We are only interested in agent systems, which can run on networks of processors. 2. <p> usually have an associated space object on which can define spatial variables; agents in the swarm can look at and update any spatial variable If one looks at a typical computer supported cooperative work CSCW project, say the system for helping the constructors of a very large Danish bridge in <ref> [4] </ref>, one sees many situations where societies of intelligent actors are appropriate. 4. Evolution of Agents Agents can be parametrized. These parameters are set when the agent is created. Agents can evolve if a newly created agent has other agents as parents, responsible for its creation. <p> Wrappers are an integral part of the industry standard CORBA [21, 22] for integrating "legacy system" modules running in heterogeneous environments. I I F F I I Firm Ring Government Inspector Ring In the CSCW system for helping Danish bridge constructors <ref> [4] </ref>, there are many wrappers around legacy code to make such code suitable for hypermedia.
Reference: [5] <author> B.Mayoh, </author> <title> Artificial life and pollution control: explorations of a genetic algorithm system on the highly parallel Connection Machine, </title> <publisher> Springer LNCS, </publisher> <address> 1181, </address> <year> 1996, </year> <pages> pp. 68-79. </pages>
Reference-contexts: The arguments for these modifications and extensions are based on: Aarhus experience in CSCW, Virtual Reality and evolutionary computing projects <ref> [3, 4, 5] </ref> analysis of some of the projects fostered by Santa Fes SWARM agent system [6] analysis of some other agent systems analysis of various ecological modelling systems We are only interested in agent systems, which can run on networks of processors. 2. <p> If agent parameters are constant, evolution is Darwinian; if not, evolution is Lamarckian. For one approach to evolution of intelligent agent programs see [18]; for another see the system for testing various strategies the government might use to prevent firms polluting in <ref> [5] </ref>. In this simulation 8196 firm agents and 8196 government inspector agents were interacting. The firms were evolving their polluting probabilities and the inspectors were evolving their inspection probabilities.
Reference: [6] <institution> For information on Swarm system & applications go to http://www.santafe.edu/projects/swarm/. </institution>
Reference-contexts: The arguments for these modifications and extensions are based on: Aarhus experience in CSCW, Virtual Reality and evolutionary computing projects [3, 4, 5] analysis of some of the projects fostered by Santa Fes SWARM agent system <ref> [6] </ref> analysis of some other agent systems analysis of various ecological modelling systems We are only interested in agent systems, which can run on networks of processors. 2. <p> One way of satisfying this principle is to look at the many agent descriptions and communication languages as specification languages for agents and the messages they can understand and produce. Specifications can be implemented in many ways, so let us look at Swarms implementation of agents <ref> [6] </ref>. Swarm is a simulation environment which facilitates development and experimentation with simulations involving a large number of agents behaving and interacting within a dynamic environment. The core of Swarm is an objectoriented framework for defining the behaviour of agents and other objects that interact during a simulation. <p> This is shown by such simulations as those for police control of crowds [26], American military tactics [27] and negotiation games for budding diplomats [ 28]; it is also shown by the many and varied Swarm applications, described in <ref> [6] </ref>. 6.
Reference: [7] <author> M.Wooldridge and N.R. Jennings, </author> <title> Intelligent agents: </title> <journal> theory and practice, Knowledge Engineering Review, </journal> <volume> 10, </volume> <year> 1995, </year> <pages> pp. 115-152. </pages>
Reference-contexts: Individual Agents What do we need more than Shohams agents with obligations, decisions and capabilities? What do we need more than Cohen and Levesques agents with beliefs, desires and intentions? What is the difference between Swarm agents and Java applets? In the survey <ref> [7] </ref>, the authors argue for defining an agent as an entity "which appears to be the subject of beliefs and desires", as an entity to which we should take an intentional stance [8].
Reference: [8] <author> D.C. Dennett, </author> <title> The intentional stance. </title> <publisher> MIT press, </publisher> <year> 1987. </year>
Reference-contexts: with beliefs, desires and intentions? What is the difference between Swarm agents and Java applets? In the survey [7], the authors argue for defining an agent as an entity "which appears to be the subject of beliefs and desires", as an entity to which we should take an intentional stance <ref> [8] </ref>. The intentional notions are abstractions that give a formal way of describing, explaining and predicting the behaviour of complex systems. In figure 1, single-headed arrows indicate that agents can exchange messages with other agents. These messages may be written in KIF/KQML [9] or some other well-defined agent communication language.
Reference: [9] <author> M.R. Genesereth and S.P. Ketchpel, </author> <title> Software agents, </title> <journal> Comm. ACM, </journal> <volume> 37, </volume> <year> 1994, </year> <pages> pp. 48-53, 147. </pages>
Reference-contexts: The intentional notions are abstractions that give a formal way of describing, explaining and predicting the behaviour of complex systems. In figure 1, single-headed arrows indicate that agents can exchange messages with other agents. These messages may be written in KIF/KQML <ref> [9] </ref> or some other well-defined agent communication language. The agents may be written in Agent0 [1] or some other well-defined agent description language. <p> In our Swarm model of deer we intend to have hunter-agents and use memetic evolution to see if hunters get better at hunting and deer get better at avoiding being shot. 5. Wrappers Wrappers are used by two quite different groups of computer scientists: semanticists [19] and pragmatic programmers <ref> [20, 9] </ref>. Wrappers are an integral part of the industry standard CORBA [21, 22] for integrating "legacy system" modules running in heterogeneous environments.
Reference: [10] <author> A.Sloman, </author> <title> Designing humanlike minds. </title> <note> To appear in Proc. ECAL97. </note>
Reference-contexts: However the listeners to the broadcast messages of our agents may be using a downloaded JAVA applet. Notice also that we allow for the variant of the intentional stance described in <ref> [10] </ref>; our agents must be believable and they may have emotions. S. Muggleton proposes a duality principle [11], all programs should encapsulate their specifications so that their behaviour can be reasoned about and understood.
Reference: [11] <author> S.Muggleton and D.Michie, </author> <title> Machine intelligibility and the duality principle, </title> <publisher> Springer LNCS, </publisher> <address> 1198, </address> <year> 1997, </year> <pages> pp. 276-291. </pages>
Reference-contexts: However the listeners to the broadcast messages of our agents may be using a downloaded JAVA applet. Notice also that we allow for the variant of the intentional stance described in [10]; our agents must be believable and they may have emotions. S. Muggleton proposes a duality principle <ref> [11] </ref>, all programs should encapsulate their specifications so that their behaviour can be reasoned about and understood. One way of satisfying this principle is to look at the many agent descriptions and communication languages as specification languages for agents and the messages they can understand and produce. <p> The "intentional reaction" box in figure 1 can be considered as a collection of memes that can evolve. There are convincing arguments that machine learning is appropriate for agents and memetic evolution is a form of machine learning <ref> [11] </ref>. In our Swarm model of deer we intend to have hunter-agents and use memetic evolution to see if hunters get better at hunting and deer get better at avoiding being shot. 5.
Reference: [12] <author> A.Poggi and G.Adorni, </author> <title> A multilanmultiagent environment to develop multiagent applications, </title> <publisher> Springer LNCS, </publisher> <address> 1193, </address> <year> 1997, </year> <month> pp.325-339. </month>
Reference-contexts: The FSA will act on a higher level of reasoning, i.e. in terms of animal density, weather effects or long range movement. Swarm is far from being the only environment for development of multi-agent systems; one of its many rivals is the HOMAGE system <ref> [12] </ref>, another is April [13]. Most agents are dependent, they need messages from other agents before they can make their next step. OBSERVERSWARM MODELSWARM Animals Control Environment Kohonen Net SWARMOBJECT SWARM Message-Send Inheritance Communication between dependent agents can be synchronous or asynchronous.
Reference: [13] <author> F.G.McCabe and K.L.Clark, </author> <title> April-agent process interaction language, </title> <publisher> Springer LNCS, </publisher> <address> 890, </address> <year> 1995, </year>
Reference-contexts: The FSA will act on a higher level of reasoning, i.e. in terms of animal density, weather effects or long range movement. Swarm is far from being the only environment for development of multi-agent systems; one of its many rivals is the HOMAGE system [12], another is April <ref> [13] </ref>. Most agents are dependent, they need messages from other agents before they can make their next step. OBSERVERSWARM MODELSWARM Animals Control Environment Kohonen Net SWARMOBJECT SWARM Message-Send Inheritance Communication between dependent agents can be synchronous or asynchronous.
Reference: [14] <author> B.Mayoh, </author> <title> Templates, </title> <editor> fragments and skins, In Lindenmayer Systems (Eds. G.Rozenberg, </editor> <publisher> A.Salomaa) Springer Verlag, </publisher> <year> 1992. </year> <month> pp.324-340. </month>
Reference-contexts: Agents can even simulate various possible futures before deciding on their actions. 3. Society Agents Can dynamic landscape models be considered agents? There are many kinds of dynamic landscape models that are not agents. <ref> [14] </ref> presents six kinds of nonagent models of the last 12000 years of the Baltic Sea, its progression from lake to sea to lake to sea, because of the melting glaciers and the compensating rise of the land.
Reference: [14] <author> B.Mayoh, </author> <title> Templates, </title> <editor> fragments and skins, In Lindenmayer Systems (Eds. G.Rozenberg, </editor> <publisher> A.Salomaa) Springer Verlag, </publisher> <year> 1992. </year>
Reference-contexts: Agents can even simulate various possible futures before deciding on their actions. 3. Society Agents Can dynamic landscape models be considered agents? There are many kinds of dynamic landscape models that are not agents. <ref> [14] </ref> presents six kinds of nonagent models of the last 12000 years of the Baltic Sea, its progression from lake to sea to lake to sea, because of the melting glaciers and the compensating rise of the land.
Reference: [15] <institution> For information on the BALLERINA initiative go to: </institution> <note> http://www.grida.no/ballerina/ </note>
Reference-contexts: None of the proliferating land/sea models on the net <ref> [15, 16, 17] </ref> seem to be agent-based. Design 1 continued: It is easy to incorporate a landscape model using SWARM. The model should be able to perform changes, lookups and visualization.
Reference: [16] <institution> For information on Chesapeake Bay program go to: </institution> <note> http://www.epa.gov/r3chespk/ </note>
Reference-contexts: None of the proliferating land/sea models on the net <ref> [15, 16, 17] </ref> seem to be agent-based. Design 1 continued: It is easy to incorporate a landscape model using SWARM. The model should be able to perform changes, lookups and visualization.
Reference: [17] <institution> For information on NSW environmental protection authority go to: </institution> <note> http://www.epa.nsw.gov.au </note>
Reference-contexts: None of the proliferating land/sea models on the net <ref> [15, 16, 17] </ref> seem to be agent-based. Design 1 continued: It is easy to incorporate a landscape model using SWARM. The model should be able to perform changes, lookups and visualization.
Reference: [18] <author> L.Spector, </author> <title> Automatic generation of intelligent agent programs, </title> <journal> IEEE, </journal> <volume> 12, </volume> <year> 1997, </year> <pages> pp. 3-4. </pages>
Reference-contexts: Evolution occurs when parameters of children depend on parameters of their parents. If agent parameters are constant, evolution is Darwinian; if not, evolution is Lamarckian. For one approach to evolution of intelligent agent programs see <ref> [18] </ref>; for another see the system for testing various strategies the government might use to prevent firms polluting in [5]. In this simulation 8196 firm agents and 8196 government inspector agents were interacting. The firms were evolving their polluting probabilities and the inspectors were evolving their inspection probabilities. <p> Births & deaths of agents correspond to the starting and stopping of the old code. Agents can evolve when the hidden parameters of children depend on hidden parameters of their parents. When Old Code is one of these hidden parameters, we get genetically programmed agents <ref> [23, 18] </ref>; the Old Code box in figure 5 can be considered as a collection of memes that can evolve. Design 2: Because team games are an excellent benchmark for computer methods for cooperation among dispersed agents, there is much interest in robot soccer [24, 25].
Reference: [19] <author> Hense, </author> <title> Wrapper semantics of an object oriented programming language with state, </title> <publisher> Springer LNCS, </publisher> <address> 526, </address> <year> 1991, </year> <month> pp.548-568. </month>
Reference-contexts: In our Swarm model of deer we intend to have hunter-agents and use memetic evolution to see if hunters get better at hunting and deer get better at avoiding being shot. 5. Wrappers Wrappers are used by two quite different groups of computer scientists: semanticists <ref> [19] </ref> and pragmatic programmers [20, 9]. Wrappers are an integral part of the industry standard CORBA [21, 22] for integrating "legacy system" modules running in heterogeneous environments.
Reference: [20] <author> Blaha, </author> <title> Objectoriented interprocess communication: Clientserver development in C++ and Java, Dr. </title> <address> Dobbs J ,21, </address> <year> 1996, </year> <pages> pp. 24-31. </pages>
Reference-contexts: In our Swarm model of deer we intend to have hunter-agents and use memetic evolution to see if hunters get better at hunting and deer get better at avoiding being shot. 5. Wrappers Wrappers are used by two quite different groups of computer scientists: semanticists [19] and pragmatic programmers <ref> [20, 9] </ref>. Wrappers are an integral part of the industry standard CORBA [21, 22] for integrating "legacy system" modules running in heterogeneous environments.
Reference: [21] <author> S.Vinovski, </author> <title> CORBA: integrating diverse applications within distributed heterogeneous environments, </title> <journal> IEEE comm., </journal> <volume> 35, </volume> <year> 1997, </year> <pages> pp. 46-55. </pages>
Reference-contexts: Wrappers Wrappers are used by two quite different groups of computer scientists: semanticists [19] and pragmatic programmers [20, 9]. Wrappers are an integral part of the industry standard CORBA <ref> [21, 22] </ref> for integrating "legacy system" modules running in heterogeneous environments. I I F F I I Firm Ring Government Inspector Ring In the CSCW system for helping Danish bridge constructors [4], there are many wrappers around legacy code to make such code suitable for hypermedia.
Reference: [22] <author> G.Vossen, </author> <title> The CORBA specification for cooperation in heterogeneous information systems, </title> <publisher> Springer LNCS, </publisher> <year> 1997, </year> <pages> 1202, pp. 101-115. </pages>
Reference-contexts: Wrappers Wrappers are used by two quite different groups of computer scientists: semanticists [19] and pragmatic programmers [20, 9]. Wrappers are an integral part of the industry standard CORBA <ref> [21, 22] </ref> for integrating "legacy system" modules running in heterogeneous environments. I I F F I I Firm Ring Government Inspector Ring In the CSCW system for helping Danish bridge constructors [4], there are many wrappers around legacy code to make such code suitable for hypermedia.
Reference: [23] <author> J.R.Koza, </author> <title> Genetic programming: on the programming of computers by means of natural elections, </title> <publisher> MIT press, </publisher> <year> 1992. </year>
Reference-contexts: Births & deaths of agents correspond to the starting and stopping of the old code. Agents can evolve when the hidden parameters of children depend on hidden parameters of their parents. When Old Code is one of these hidden parameters, we get genetically programmed agents <ref> [23, 18] </ref>; the Old Code box in figure 5 can be considered as a collection of memes that can evolve. Design 2: Because team games are an excellent benchmark for computer methods for cooperation among dispersed agents, there is much interest in robot soccer [24, 25].
Reference: [24] <institution> For information on the real robot soccer go to: </institution> <note> http://www.cwi.nl/~gruau/football.html </note>
Reference-contexts: Design 2: Because team games are an excellent benchmark for computer methods for cooperation among dispersed agents, there is much interest in robot soccer <ref> [24, 25] </ref>. Aarhus will be using memetic evolution to develop good soccer players our simulated soccer agents and our real Khepera robots will learn from their extensive playing experience.If some of the agents in a multiagent system are wrappers, the global time problem is exacerberated.
Reference: [25] <institution> For information on simulated robot soccer go to: </institution> <note> http://www.robocup.org/RoboCup/RoboCup.html </note>
Reference-contexts: Design 2: Because team games are an excellent benchmark for computer methods for cooperation among dispersed agents, there is much interest in robot soccer <ref> [24, 25] </ref>. Aarhus will be using memetic evolution to develop good soccer players our simulated soccer agents and our real Khepera robots will learn from their extensive playing experience.If some of the agents in a multiagent system are wrappers, the global time problem is exacerberated.
Reference: [26] <author> R.J.Williams, </author> <title> Using agent-based simulations for training, </title> <booktitle> Proc. EUROSIM Simulation Congress, </booktitle> <address> Vienna, </address> <year> 1995. </year>
Reference-contexts: This is shown by such simulations as those for police control of crowds <ref> [26] </ref>, American military tactics [27] and negotiation games for budding diplomats [ 28]; it is also shown by the many and varied Swarm applications, described in [6]. 6.
Reference: [27] <author> M.R.Stytz, E.G.Block, B.B.Soltz, K.Wilson, </author> <title> The synthetic battlebridge: a tool for large-scale VEs, </title> <journal> IEEE Comp. Graphics & Appl, </journal> <volume> 16, </volume> <year> 1996, </year> <pages> pp. 16-26. </pages>
Reference-contexts: This is shown by such simulations as those for police control of crowds [26], American military tactics <ref> [27] </ref> and negotiation games for budding diplomats [ 28]; it is also shown by the many and varied Swarm applications, described in [6]. 6.
Reference: [28] <institution> For information on the Chlorine Game go to: </institution> <note> http://www.mit.edu/people/anajam/cl-game.html </note>
Reference-contexts: This is shown by such simulations as those for police control of crowds [26], American military tactics [27] and negotiation games for budding diplomats <ref> [ 28] </ref>; it is also shown by the many and varied Swarm applications, described in [6]. 6.
References-found: 29

