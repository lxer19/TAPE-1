URL: ftp://ftp.cs.columbia.edu/reports/reports-1992/cucs-043-92.ps.gz
Refering-URL: http://www.cs.columbia.edu/~library/1992.html
Root-URL: http://www.cs.columbia.edu
Email: mckeown@cs.columbia.edu robin@cs.columbia.edu tanenbla@cs.columbia.edu  
Title: Tailoring Lexical Choice to the User's Vocabulary in Multimedia Explanation Generation  
Author: Kathleen McKeown Jacques Robin Michael Tanenblatt 
Keyword: Topic area: Language Generation Number of Words: 3222  
Address: Building  New York, N.Y. 10027  
Affiliation: Department of Computer Science 450 Computer Science  Columbia University  
Abstract: In this paper, we discuss the different strategies used in COMET (COordinated Multimedia Explanation Testbed) for selecting words with which the user is familiar. When pictures can not be used to disambiguate a word or phrase, COMET has four strategies for avoiding unknown words. We give examples for each of these strategies and show how they are implemented in COMET. Note: The 2 full page pictures at the end of the paper can be compressed into 1 inch figures using typesetting for camera ready copy, so we have not included them in the word count. 
Abstract-found: 1
Intro-found: 1
Reference: [Appelt 85] <author> Appelt, D.E. </author> <title> Planning English Sentences. </title> <publisher> Cambridge University Press, </publisher> <address> Cambridge, England, </address> <year> 1985. </year> <title> [Bateman and Paris 89] Bateman, J.A. and Paris, C.L. Phrasing a text in terms the user can understand. </title> <booktitle> In Proceedings of the 11th International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 1511-1517. </pages> <address> Detroit, MI, </address> <year> 1989. </year>
Reference-contexts: For example, COMET will use the most common object name even if the user is unfamiliar with the name, when the accompanying picture clearly shows the object and its location (this is similar to Appelt's <ref> [Appelt 85] </ref> integration of language and physical actions for generating referring expressions). When pictures cannot be used to disambiguate a word or phrase, COMET has four strategies for avoiding unknown words: 1. Simple word or phrase substitution (e.g. replacing ``a known good digital device'' with ``a working digital device'') 2. <p> This aspect of our work is similar to others <ref> [Dale 88, Appelt 85, Reiter 90] </ref>, but our selection algorithm is not as sophisticated because we do not use a detailed model of user beliefs. More importantly, we account for interaction between the new description and other parts of the original sentence and rephrase where necessary. <p> In addition, because COMET is a multimedia system, it can use the accompanying illustrations advantageously for 4 disambiguation. Both EPICURE [Dale 88] and KAMP <ref> [Appelt 85] </ref> address the issue of choosing the level of detail at which to describe an action, but they do not constrain this choice upon the user's lexical knowledge.
Reference: [Dale 88] <author> Dale, R. </author> <title> Generating referring expressions in a domain of objects and processes. </title> <type> PhD thesis, </type> <institution> University of Edinburgh, </institution> <year> 1988. </year>
Reference-contexts: This aspect of our work is similar to others <ref> [Dale 88, Appelt 85, Reiter 90] </ref>, but our selection algorithm is not as sophisticated because we do not use a detailed model of user beliefs. More importantly, we account for interaction between the new description and other parts of the original sentence and rephrase where necessary. <p> In addition, because COMET is a multimedia system, it can use the accompanying illustrations advantageously for 4 disambiguation. Both EPICURE <ref> [Dale 88] </ref> and KAMP [Appelt 85] address the issue of choosing the level of detail at which to describe an action, but they do not constrain this choice upon the user's lexical knowledge.
Reference: [Elhadad 88] <author> Elhadad, M. </author> <title> The FUF Functional Unifier: User's Manual. </title> <type> Technical Report, </type> <institution> Columbia University, </institution> <month> June, </month> <year> 1988. </year>
Reference-contexts: The Lexical Chooser performs its task using a rewriting system implemented on top 4 of the Functional Unification Formalism (FUF) <ref> [Elhadad 88, Elhadad 90] </ref>, an extension of functional unification grammars [Kay 79]. The lexicon itself consists in a base of rules, with each rule rewriting a given set of semantic features into a corresponding set of lexical and syntactic features.
Reference: [Elhadad 90] <author> Elhadad, M. </author> <title> Types in Functional Unification Grammars. </title> <booktitle> In Proceedings of the 28th meeting of the Association for Computational Linguistics. </booktitle> <address> Pittsburgh, Pa, </address> <month> June, </month> <year> 1990. </year> <note> [Elhadad and Robin 92] Elhadad, </note> <author> M. and Robin, J. </author> <title> Control Strategies for Functional Unification. </title> <booktitle> In submitted to 6th International Workshop on Language Generation. </booktitle> <address> Trento, Italy, </address> <month> April, </month> <year> 1992. </year>
Reference-contexts: The Lexical Chooser performs its task using a rewriting system implemented on top 4 of the Functional Unification Formalism (FUF) <ref> [Elhadad 88, Elhadad 90] </ref>, an extension of functional unification grammars [Kay 79]. The lexicon itself consists in a base of rules, with each rule rewriting a given set of semantic features into a corresponding set of lexical and syntactic features.
Reference: [Elhadad et al. 89] <author> Elhadad, M., Seligmann, D., Feiner, S., and McKeown, </author> <title> K. </title>
Reference-contexts: The explanation content, represented as a hierarchy of logical forms (LFs) [McKeown et. al. 90] is passed to the media coordinator <ref> [Feiner and McKeown 90b, Elhadad et al. 89] </ref>, which refines the LFs by adding directives indicating which portions are to be produced by the text generator and which by the graphics generator [Seligmann and Feiner 89]. The Lexical Chooser is part of the text generator [McKeown et. al. 90].
References-found: 5

