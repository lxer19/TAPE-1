URL: http://ai.eecs.umich.edu/people/jmvidal/papers/umdlsms/umdlsms.ps
Refering-URL: http://ai.eecs.umich.edu/people/jmvidal/papers/umdlsms/index.html
Root-URL: http://www.cs.umich.edu
Email: peterwg@umich.edu  
Title: The UMDL Service Market Society  
Author: Jose M. Vidal, Tracy Mullen, Peter Weinstein, Edmund H. Durfee fjmvidal, mullen, 
Date: September 30, 1997  
Address: 1101 Beal Avenue, Ann Arbor, MI 48109-2110  
Affiliation: Artificial Intelligence Laboratory, University of Michigan  
Abstract: One of our goals when building the University of Michigan Digital Library (UMDL) was to provide an architecture for a digital library that can continually reconfigure itself as users, contents, and services come and go. This has been achieved by the development of a multi-agent infrastructure with agents that buy and sell services from each other using our commerce and communication protocols. We refer to the services/protocols offered by this infrastructure as the Service Market Society (SMS). The SMS allows for the decentralized (scalable) ongoing configuration of an extensible set of users and services. We describe the protocols, services and agents that embody the UMDL SMS and show how they achieve our stated goals. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Edmund H. Durfee, Daniel L. Kiskis, and William P. </author> <title> Birmingham. The agent architecture of the university of michigan digital library. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 144(1), </volume> <year> 1997. </year>
Reference-contexts: We encourage agents to describe their needs with as much detail as possible. The SCA can then recommend the available services with the least general subsuming descriptions. 2 Agent communications use KQML primitives implemented using CORBA objects, see <ref> [1] </ref> for details. 4 Next, buyers and sellers of a given service need to locate each other. Multi-agent systems often have specialized system agents which broker connections among other agents, called facilitators. Within UMDL, we use market facilitator agents, or auctions (Section 4).
Reference: [2] <author> Thomas R. Gruber. </author> <title> A translation approach to portable ontology specifications. </title> <type> Technical report, </type> <institution> Stanford University Knowledge Systems Laboratory, </institution> <year> 1993. </year>
Reference-contexts: Because ontologies are costly to develop, many researchers are working on ways to define ontologies so that they may be reused in different problem solving contexts <ref> [2] </ref>. To promote reuse, the UMDL ontology is divided into nested modules (each of which is itself called an ontology) [8]. The most general includes library content and services that we consider to be part of a "generic" digital library.
Reference: [3] <author> Tad Hogg and Bernardo A. Huberman. </author> <title> Controlling chaos in distributed systems. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> 21(6) </volume> <pages> 1325-1332, </pages> <month> December </month> <year> 1991. </year> <note> (Special Issue on Distributed AI). </note>
Reference-contexts: If the agents where to determine their bid price based on a fixed utility function we might expect to find periodic or chaotic behavior <ref> [3] </ref>, which we wish to avoid. 6.2.2 1-level Agents 1-level QPAs take advantage of price fluctuations by keeping models of the QPAs and UIAs and use these to make better predictions as to what they should bid.
Reference: [4] <author> Robert M. MacGregor. </author> <title> The evolving technology of classification-based knowledge representation systems. </title> <editor> In John. F. Sowa, editor, </editor> <booktitle> Principles of Semantic Networks, </booktitle> <pages> pages 385-400. </pages> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: The UIA must then find an agent that can service this query. In order to allow agents to find the services they need, we have implemented an ontology of services (Section 3), which is represented using description logic; specifically, Loom <ref> [4] </ref>. Every agent must be able to describe the service it wishes to buy and sell using Loom's query and concept languages, respectively, with terms from the UMDL ontology. In order to join the UMDL every agent must register its unique agent-id with the Registry.
Reference: [5] <author> Tracy Mullen and Michael P. Wellman. </author> <title> Market-based negotiation for digital library services. </title> <booktitle> In Second USENIX Workshop on Electronic Commerce, </booktitle> <year> 1996. </year>
Reference-contexts: In the case of negotiation mechanisms, UMDL uses a generalized auction specification to allow goods and services to be offered under a wide variety of terms <ref> [5] </ref>. While generalized auctions are not the only possible kinds of negotiation mechanisms, they offer many advantages. They provide a structured, yet flexible market infrastructure promoting automated negotiation due to the following characteristics: 1. Mediated (vs.
Reference: [6] <author> Jose M. Vidal and Edmund H. Durfee. </author> <title> Task planning agents in the UMDL. </title> <booktitle> In Proceedings of the Fourth International Conference on Information and Knowledge Managment (CIKM) Workshop on Intelligent Information Agents., </booktitle> <year> 1995. </year> . 
Reference-contexts: In our scenario, UIAs want to buy query planning services while QPAs want to sell it. Once a match is found for the UIA, it will send its query to the matching Query Planning Agent (QPA). The QPA <ref> [6] </ref> returns the appropriate Collection Interface Agents (CIA) and the UIA then forwards its query to them. The CIAs can translate UMDL queries to a variety of protocols (e.g. http, Z39.50, FTP, etc.) and return the appropriate documents.
Reference: [7] <author> Jose M. Vidal and Edmund H. Durfee. </author> <title> The impact of nested agent models in an information economy. </title> <booktitle> In Proceedings of the Second International Conference on Multi-Agent Systems, </booktitle> <pages> pages 377-384, </pages> <year> 1996. </year> <note> http://ai. eecs.umich.edu/people/jmvidal/papers/amumdl/ </note> . 
Reference-contexts: A QPA's only preference was to increase its immediate profit, i.e. place its bid in order to maximize its expected profit (remember that failing to get a sale means the QPA gets zero profit). We gave the agents different learning abilities (see <ref> [7] </ref>). 0-level agents used a simple form of reinforcement learning on the prices/values received. 1-level agents actually tried to model the other agents (as 0-level agents) and took actions based on predictions from these models. 6.2.1 0-level agents For our first test we used 0-level UIAs and QPAs. <p> The 1-level models, while computationally expensive, allow QPAs to track the individual agents more closely, thereby identifying when a UIA is willing to pay more than the going rate. Previous research has shown that the advantages of 1-level models can be correlated to the price volatility (see <ref> [7] </ref>). However, this strategic thinking is only successful against 0-level UIAs. When we tested the 1-level QPAs against the 1-level UIAs we found the QPA's performance on par with other similar 0-level QPAs. The 1-level QPA's advantage was eliminated only at the cost of making the UIAs keep 1-level models.
Reference: [8] <author> Peter Weinstein and Gene Alloway. </author> <title> Seed ontologies: growing digital libraries as distributred, </title> <booktitle> intelligent systems. In Proceedings of the Second ACM International Conference on Digital Libraries, </booktitle> <month> June </month> <year> 1997. </year>
Reference-contexts: Because ontologies are costly to develop, many researchers are working on ways to define ontologies so that they may be reused in different problem solving contexts [2]. To promote reuse, the UMDL ontology is divided into nested modules (each of which is itself called an ontology) <ref> [8] </ref>. The most general includes library content and services that we consider to be part of a "generic" digital library. The second module adds concepts specific to the UMDL implementation, such as auctions. The third module describes agent services.
Reference: [9] <author> Michael P. Wellman and et. al. </author> <title> Toward inquiry-based education through interacting software agents. </title> <booktitle> IEEE Computer, </booktitle> <month> May </month> <year> 1996. </year> <month> 19 </month>
Reference-contexts: While one of the emphases of the UMDL is to provide a working testbed to improve secondary education <ref> [9] </ref>, a second emphasis is on the definition and design of the infrastructure, and the kinds of agents that exist in it, that allow decentralized (scalable) ongoing configuration of an extensible set of users and services.
References-found: 9

