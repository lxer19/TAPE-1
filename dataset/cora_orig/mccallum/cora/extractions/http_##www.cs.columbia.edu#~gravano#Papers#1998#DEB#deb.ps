URL: http://www.cs.columbia.edu/~gravano/Papers/1998/DEB/deb.ps
Refering-URL: http://www.cs.columbia.edu/~gravano/publications.html
Root-URL: http://www.cs.columbia.edu
Title: Mediating and Metasearching on the Internet  
Author: Luis Gravano Yannis Papakonstantinou 
Note: yannis  
Address: San Diego  
Web: www.cs.columbia.edu/ gravano  www.cs.ucsd.edu/  
Affiliation: Computer Science Department Columbia University  Computer Science and Engineering Department University of California,  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> J. P. Callan, Z. Lu, and W. B. Croft. </author> <title> Searching distributed collections with inference networks. </title> <booktitle> In Proceedings of the Eighteenth ACM International Conference on Research and Development in Information Retrieval (SIGIR'95), </booktitle> <month> July </month> <year> 1995. </year>
Reference-contexts: These descriptions are useful to prune the search space for evaluating user queries efficiently. Alternatively, metasearchers might rely on automatically extracted summaries of the sources' contents. The GlOSS system [12, 10] uses source summaries that include the document frequency for each word in the source's vocabulary. <ref> [1] </ref> has applied inference networks (from information retrieval) to the database selection problem. Their approach summarizes databases using the same type of information that GlOSS keeps, together with the inverse collection frequency of the different terms. <p> Another approach is to calibrate the document scores from each collection using statistics about the word distribution in the collections <ref> [1] </ref>. The STARTS protocol asks sources to report term statistics in their query results.
Reference: [2] <author> U. Chakravarthy, J. Grant, and J. Minker. </author> <title> Logic-based approach to semantic query optimization. </title> <journal> ACM Transactions on Database Systems, </journal> <pages> pages 162207, </pages> <year> 1990. </year>
Reference-contexts: By making the mediator aware that any document that satisfies the former predicate will also satisfy the latter one, we can rewrite the user query into one that uses substring and does the additional filtering at the mediator. In effect, such a mediator performs a form of semantic optimization <ref> [2] </ref>. 4 Conclusion Metasearchers and mediators provide uniform views over large numbers of heterogeneous databases. The problems that research in both areas has addressed, though, tend to differ significantly.
Reference: [3] <author> C.-C. K. Chang, H. Garca-Molina, and A. Paepcke. </author> <title> Boolean query mapping across heterogeneous information sources. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 8(4):515521, </volume> <month> Aug. </month> <year> 1996. </year>
Reference-contexts: As a result of all this heterogeneity, a metasearcher would have to translate the original query to adjust it to each source's syntax. To do this translation, the metasearcher needs to know the characteristics of each source. The work in <ref> [3, 4] </ref> illustrates the complexities involved in query translation. Querying multiple sources is much easier if the sources share a common query language. The STARTS protocol specifies a flexible query language for sources. <p> Finally note that other projects [14] tackle the rewriting issue as one describing acceptable plans that can be passed to the wrappers. However, the central ideas remain unchanged. As we described in Section 2.2, the capabilities-based rewriting problem has also been addressed for text document collections <ref> [3, 4] </ref>. The system described in [3, 4] tends to produce efficient plans because it knows the semantic relationship between its own relations and access methods, and the source relations and access methods. <p> However, the central ideas remain unchanged. As we described in Section 2.2, the capabilities-based rewriting problem has also been addressed for text document collections <ref> [3, 4] </ref>. The system described in [3, 4] tends to produce efficient plans because it knows the semantic relationship between its own relations and access methods, and the source relations and access methods. For example, assume that the user query requests papers by Knuth where the title contains the word complexity.
Reference: [4] <author> C.-C. K. Chang, H. Garca-Molina, and A. Paepcke. </author> <title> Predicate rewriting for translating Boolean queries in a heterogeneous information system. </title> <type> Technical Report SIDL-WP-1996-0028, </type> <institution> Stanford University, </institution> <year> 1996. </year> <note> Accessible at http://www-diglib.stanford.edu/cgi-bin/WP/get/SIDL-WP-1996-0028. </note>
Reference-contexts: As a result of all this heterogeneity, a metasearcher would have to translate the original query to adjust it to each source's syntax. To do this translation, the metasearcher needs to know the characteristics of each source. The work in <ref> [3, 4] </ref> illustrates the complexities involved in query translation. Querying multiple sources is much easier if the sources share a common query language. The STARTS protocol specifies a flexible query language for sources. <p> Finally note that other projects [14] tackle the rewriting issue as one describing acceptable plans that can be passed to the wrappers. However, the central ideas remain unchanged. As we described in Section 2.2, the capabilities-based rewriting problem has also been addressed for text document collections <ref> [3, 4] </ref>. The system described in [3, 4] tends to produce efficient plans because it knows the semantic relationship between its own relations and access methods, and the source relations and access methods. <p> However, the central ideas remain unchanged. As we described in Section 2.2, the capabilities-based rewriting problem has also been addressed for text document collections <ref> [3, 4] </ref>. The system described in [3, 4] tends to produce efficient plans because it knows the semantic relationship between its own relations and access methods, and the source relations and access methods. For example, assume that the user query requests papers by Knuth where the title contains the word complexity.
Reference: [5] <author> D. Florescu, D. Koller, and A. Levy. </author> <title> Using probabilistic information in data integration. </title> <booktitle> In Proceedings of the Twenty-third International Conference on Very Large Databases (VLDB'97), </booktitle> <month> Aug. </month> <year> 1997. </year>
Reference-contexts: To address these problems and opportunities several recent papers on mediators have proposed ways to define source overlap and optimization algorithms that produce efficient query execution plans <ref> [5, 28] </ref>. This work exploits the fact that users might be satisfied with efficiently computed partial answers to their queries, and produce incremental query plans for answering their queries, just like some metasearching systems already do for text documents [12, 10].
Reference: [6] <author> H. Garcia-Molina, Y. Papakonstantinou, D. Quass, A. Rajaraman, Y. Sagiv, J. Ullman, V. Vassalos, and J. Widom. </author> <title> The TSIMMIS approach to mediation: data models and languages. </title> <journal> Journal of Intelligent Information Systems, </journal> <volume> 8:117132, </volume> <year> 1997. </year>
Reference-contexts: Notice that query processing is similar to conventional database query processing and hence it can be based on existing query processors. The view definition approach is not particular to the relational model. Indeed, recent mediator projects have preferred object oriented or semistructured models <ref> [6] </ref> for this purpose and they have also tuned the view definition language to the particular needs of integration.
Reference: [7] <author> S. Gauch and G. Wang. </author> <title> Information fusion with ProFusion. </title> <booktitle> In Proceedings of the World Conference of the Web Society (WebNet'96), </booktitle> <month> Oct. </month> <year> 1996. </year>
Reference-contexts: Several metasearchers already exist on the Internet for querying multiple web indexes. However, not all of them completely support the three major metasearch tasks described above. Examples include MetaCrawler [24] (http://www.metacrawler.com), SavvySearch (http://guaraldi.cs.colostate.edu:2000/g, and ProFusion <ref> [7] </ref>. STARTS, the Stanford Protocol Proposal for Internet Retrieval and Search [9], is an emerging protocol whose goal is to facilitate the three metasearching tasks above. STARTS has been developed in a unique way.
Reference: [8] <author> R. Goldman, N. Shivakumar, S. Venkatasubramanian, and H. Garcia-Molina. </author> <title> Proximity searching in databases. </title> <booktitle> In Proceedings of the Twenty-fourth International Conference on Very Large Databases (VLDB'98), </booktitle> <month> Aug. </month> <year> 1998. </year>
Reference-contexts: There has also been some initial work on producing ranked query results from sources of structured or semistructured data. (See <ref> [8] </ref> and DataSpot (http://www.dataspot.com).) The work in [11] addresses the problem of querying over multiple structured data sources that rank query results using different algorithms.
Reference: [9] <author> L. Gravano, C.-C. K. Chang, H. Garca-Molina, and A. Paepcke. </author> <title> STARTS: Stanford proposal for Internet meta-searching. </title> <booktitle> In Proceedings of the 1997 ACM International Conference on Management of Data (SIGMOD'97), </booktitle> <month> May </month> <year> 1997. </year>
Reference-contexts: Several metasearchers already exist on the Internet for querying multiple web indexes. However, not all of them completely support the three major metasearch tasks described above. Examples include MetaCrawler [24] (http://www.metacrawler.com), SavvySearch (http://guaraldi.cs.colostate.edu:2000/g, and ProFusion [7]. STARTS, the Stanford Protocol Proposal for Internet Retrieval and Search <ref> [9] </ref>, is an emerging protocol whose goal is to facilitate the three metasearching tasks above. STARTS has been developed in a unique way. It is not a standard, but a group effort involving 11 companies and organizations, coordinated by the Digital Library project at Stanford University. <p> Next, we discuss the three metasearching tasks in more detail, together with some related work. In particular, we summarize the main STARTS components and how they facilitate these tasks. For a detailed description of STARTS, please refer to <ref> [9] </ref>. 2.1 Database Selection A metasearcher might have thousands of sources available for querying. Some of these sources might charge for their use. Some of the sources might have long response times. <p> Otherwise, if a source does not export any kind of content summary, it becomes hard for a metasearcher to assess automatically what kind of information the source covers. The STARTS protocol specifies that sources should export partial data about its contents <ref> [9] </ref>. This data is automatically generated, is orders of magnitude smaller than the original contents, and has proven helpful in distinguishing the more useful from the less useful sources for a given query [12, 10].
Reference: [10] <author> L. Gravano and H. Garca-Molina. </author> <title> Generalizing GlOSS for vector-space databases and broker hierarchies. </title> <booktitle> In Proceedings of the Twenty-first International Conference on Very Large Databases (VLDB'95), </booktitle> <pages> pages 7889, </pages> <month> Sept. </month> <year> 1995. </year>
Reference-contexts: These descriptions are useful to prune the search space for evaluating user queries efficiently. Alternatively, metasearchers might rely on automatically extracted summaries of the sources' contents. The GlOSS system <ref> [12, 10] </ref> uses source summaries that include the document frequency for each word in the source's vocabulary. [1] has applied inference networks (from information retrieval) to the database selection problem. <p> The STARTS protocol specifies that sources should export partial data about its contents [9]. This data is automatically generated, is orders of magnitude smaller than the original contents, and has proven helpful in distinguishing the more useful from the less useful sources for a given query <ref> [12, 10] </ref>. The STARTS summary for a source includes a list of all the words that appear at documents in the source, possibly with various tags, like the position in the documents where each word occurs, and some associated statistics that are easily computed from the source's index structures. <p> This work exploits the fact that users might be satisfied with efficiently computed partial answers to their queries, and produce incremental query plans for answering their queries, just like some metasearching systems already do for text documents <ref> [12, 10] </ref>. There has also been some initial work on producing ranked query results from sources of structured or semistructured data. (See [8] and DataSpot (http://www.dataspot.com).) The work in [11] addresses the problem of querying over multiple structured data sources that rank query results using different algorithms.
Reference: [11] <author> L. Gravano and H. Garca-Molina. </author> <title> Merging ranks from heterogeneous Internet sources. </title> <booktitle> In Proceedings of the Twenty-third International Conference on Very Large Databases (VLDB'97), </booktitle> <month> Aug. </month> <year> 1997. </year>
Reference-contexts: There has also been some initial work on producing ranked query results from sources of structured or semistructured data. (See [8] and DataSpot (http://www.dataspot.com).) The work in <ref> [11] </ref> addresses the problem of querying over multiple structured data sources that rank query results using different algorithms. One such source could be a real-estate agent that receives queries from users, and ranks the available houses according to how well they match the users' specification, for example.
Reference: [12] <author> L. Gravano, H. Garca-Molina, and A. Tomasic. </author> <title> The effectiveness of GlOSS for the text-database discovery problem. </title> <booktitle> In Proceedings of the 1994 ACM International Conference on Management of Data (SIGMOD'94), </booktitle> <month> May </month> <year> 1994. </year> <month> 8 </month>
Reference-contexts: These descriptions are useful to prune the search space for evaluating user queries efficiently. Alternatively, metasearchers might rely on automatically extracted summaries of the sources' contents. The GlOSS system <ref> [12, 10] </ref> uses source summaries that include the document frequency for each word in the source's vocabulary. [1] has applied inference networks (from information retrieval) to the database selection problem. <p> The STARTS protocol specifies that sources should export partial data about its contents [9]. This data is automatically generated, is orders of magnitude smaller than the original contents, and has proven helpful in distinguishing the more useful from the less useful sources for a given query <ref> [12, 10] </ref>. The STARTS summary for a source includes a list of all the words that appear at documents in the source, possibly with various tags, like the position in the documents where each word occurs, and some associated statistics that are easily computed from the source's index structures. <p> This work exploits the fact that users might be satisfied with efficiently computed partial answers to their queries, and produce incremental query plans for answering their queries, just like some metasearching systems already do for text documents <ref> [12, 10] </ref>. There has also been some initial work on producing ranked query results from sources of structured or semistructured data. (See [8] and DataSpot (http://www.dataspot.com).) The work in [11] addresses the problem of querying over multiple structured data sources that rank query results using different algorithms.
Reference: [13] <author> L. Haas, D. Kossman, E. Wimmers, and J. Yang. </author> <title> An optimizer for heterogeneous systems with non-standard data and search capabilities. Special Issue on Query Processing for Non-Standard Data, </title> <journal> IEEE Data Engineering Bulletin, </journal> <volume> 19:3743, </volume> <month> Dec. </month> <year> 1996. </year>
Reference-contexts: is much simpler for mediators than it is for metasearchers. (See Section 2.3.) 5 3.1 Database Selection When a mediator receives a query it first performs a query decomposition step where it computes the sources that are relevant to the query and decides what data is needed from each source <ref> [15, 13, 19, 18] </ref>. Mediators always use human-provided descriptions of the relationship between the integrated view and the sources in order to decompose queries.
Reference: [14] <author> L. Haas, D. Kossman, E. Wimmers, and J. Yang. </author> <title> Optimizing queries across diverse data sources. </title> <booktitle> In Proceedings of the Twenty-third International Conference on Very Large Databases (VLDB'97), </booktitle> <month> Aug. </month> <year> 1997. </year>
Reference-contexts: Finally note that other projects <ref> [14] </ref> tackle the rewriting issue as one describing acceptable plans that can be passed to the wrappers. However, the central ideas remain unchanged. As we described in Section 2.2, the capabilities-based rewriting problem has also been addressed for text document collections [3, 4].
Reference: [15] <author> T. Kirk, A. Y. Levy, Y. Sagiv, and D. Srivastava. </author> <title> The Information Manifold. </title> <booktitle> In Proceedings of the AAAI Spring Symposium Series, </booktitle> <month> Mar. </month> <year> 1995. </year>
Reference-contexts: Therefore, it becomes crucial that the metasearcher only contact sources that might contain useful documents for a given query, for which the metasearcher needs information about each source's contents. To characterize the sources, we could manually write descriptions of their contents. For example, the Information Manifold system <ref> [15, 17] </ref> relies on declarative descriptions of the sources' contents and capabilities, written in a version of description logic. These descriptions are useful to prune the search space for evaluating user queries efficiently. Alternatively, metasearchers might rely on automatically extracted summaries of the sources' contents. <p> is much simpler for mediators than it is for metasearchers. (See Section 2.3.) 5 3.1 Database Selection When a mediator receives a query it first performs a query decomposition step where it computes the sources that are relevant to the query and decides what data is needed from each source <ref> [15, 13, 19, 18] </ref>. Mediators always use human-provided descriptions of the relationship between the integrated view and the sources in order to decompose queries.
Reference: [16] <author> A. Levy, A. Rajaraman, and J. Ullman. </author> <title> Answering queries using limited external processors. </title> <booktitle> In Proceedings of the Fifteenth ACM Symposium on Principles of Database Systems (PODS'96), </booktitle> <pages> pages 227237, </pages> <month> June </month> <year> 1996. </year>
Reference-contexts: Several projects <ref> [22, 16, 25, 21, 20, 27] </ref> propose and discuss query processors that, given some description of the capabilities of the participating sources, adapt to the different, limited capabilities of the sources.
Reference: [17] <author> A. Y. Levy, A. Rajaraman, and J. J. Ordille. </author> <title> Querying heterogeneous information sources using source descriptions. </title> <booktitle> In Proceedings of the Twenty-second International Conference on Very Large Databases (VLDB'96), </booktitle> <month> Sept. </month> <year> 1996. </year>
Reference-contexts: Therefore, it becomes crucial that the metasearcher only contact sources that might contain useful documents for a given query, for which the metasearcher needs information about each source's contents. To characterize the sources, we could manually write descriptions of their contents. For example, the Information Manifold system <ref> [15, 17] </ref> relies on declarative descriptions of the sources' contents and capabilities, written in a version of description logic. These descriptions are useful to prune the search space for evaluating user queries efficiently. Alternatively, metasearchers might rely on automatically extracted summaries of the sources' contents.
Reference: [18] <author> Y. Papakonstantinou, S. Abiteboul, and H. Garcia-Molina. </author> <title> Object fusion in mediator systems. </title> <booktitle> In Proceedings of the Twenty-second International Conference on Very Large Databases (VLDB'96), </booktitle> <month> Sept. </month> <year> 1996. </year>
Reference-contexts: is much simpler for mediators than it is for metasearchers. (See Section 2.3.) 5 3.1 Database Selection When a mediator receives a query it first performs a query decomposition step where it computes the sources that are relevant to the query and decides what data is needed from each source <ref> [15, 13, 19, 18] </ref>. Mediators always use human-provided descriptions of the relationship between the integrated view and the sources in order to decompose queries.
Reference: [19] <author> Y. Papakonstantinou, H. Garcia-Molina, and J. Ullman. Medmaker: </author> <title> A mediation system based on declarative specifications. </title> <booktitle> In Proceedings of the 1996 ICDE Conference, </booktitle> <pages> pages 13241, </pages> <year> 1996. </year>
Reference-contexts: is much simpler for mediators than it is for metasearchers. (See Section 2.3.) 5 3.1 Database Selection When a mediator receives a query it first performs a query decomposition step where it computes the sources that are relevant to the query and decides what data is needed from each source <ref> [15, 13, 19, 18] </ref>. Mediators always use human-provided descriptions of the relationship between the integrated view and the sources in order to decompose queries.
Reference: [20] <author> Y. Papakonstantinou, A. Gupta, H. Garcia-Molina, and J. Ullman. </author> <title> A query translation scheme for the rapid implementation of wrappers. </title> <booktitle> In Proceedings of the 1995 DOOD Conference, </booktitle> <pages> pages 16186, </pages> <year> 1995. </year>
Reference-contexts: Several projects <ref> [22, 16, 25, 21, 20, 27] </ref> propose and discuss query processors that, given some description of the capabilities of the participating sources, adapt to the different, limited capabilities of the sources. <p> SELECT * FROM bib.reports WHERE reports.title LIKE $X If we use these descriptions, finding a plan that consists of supported queries only is similar to finding a plan to answer queries using views. <ref> [20, 21, 27] </ref> provide languages for the specification of an infinite number of parameterized views and show that it is still possible to find all the potentially optimal plans.
Reference: [21] <author> Y. Papakonstantinou, A. Gupta, and L. Haas. </author> <title> Capabilities-based query rewriting in mediator systems. </title> <booktitle> In Proceedings of the Fourth International Conference on Parallel and Distributed Information Systems (PDIS'96), </booktitle> <month> June </month> <year> 1996. </year>
Reference-contexts: Focusing on select-project-join queries, a plan P is algebraically optimal <ref> [21] </ref> if there is no other plan P 0 such that for every query w sent to a wrapper by P there is a corresponding query w 0 of P 0 such that the sets of relations and conditions of w 0 are a superset of the corresponding sets of w <p> Several projects <ref> [22, 16, 25, 21, 20, 27] </ref> propose and discuss query processors that, given some description of the capabilities of the participating sources, adapt to the different, limited capabilities of the sources. <p> SELECT * FROM bib.reports WHERE reports.title LIKE $X If we use these descriptions, finding a plan that consists of supported queries only is similar to finding a plan to answer queries using views. <ref> [20, 21, 27] </ref> provide languages for the specification of an infinite number of parameterized views and show that it is still possible to find all the potentially optimal plans.
Reference: [22] <author> A. Rajaraman, Y. Sagiv, and J. Ullman. </author> <title> Answering queries using templates with binding patterns. </title> <booktitle> In Proceedings of the Fourteenth ACM Symposium on Principles of Database Systems (PODS'95), </booktitle> <pages> pages 105112, </pages> <month> May </month> <year> 1995. </year>
Reference-contexts: Several projects <ref> [22, 16, 25, 21, 20, 27] </ref> propose and discuss query processors that, given some description of the capabilities of the participating sources, adapt to the different, limited capabilities of the sources. <p> Several projects [22, 16, 25, 21, 20, 27] propose and discuss query processors that, given some description of the capabilities of the participating sources, adapt to the different, limited capabilities of the sources. An elegant approach to describing capabilities was introduced in <ref> [22] </ref> where the supported query interfaces were described by a finite number of parameterized views. For example, the following describes that the source bib supports substring conditions on the title field of the collection reports.
Reference: [23] <author> G. Salton. </author> <title> Automatic Text Processing: The transformation, analysis, and retrieval of information by computer. </title> <publisher> Addison-Wesley, </publisher> <year> 1989. </year>
Reference-contexts: The matches between queries and documents are fuzzy. For example, vector-space databases compute how similar a document and a query are, where this similarity is a number between 0 and 1 <ref> [23] </ref>. Furthermore, these sources might return only the best matches for the query. Hence, metasearchers have to handle query results that have been computed using unknown matching algorithms. <p> But the interfaces and capabilities of these sources may vary dramatically. Even the basic query model that the sources support may vary. Some search engines (e.g., Glimpse) only support the Boolean retrieval model <ref> [23] </ref>. In this model, a query is a condition that documents either do or do not satisfy. The query result is then a set of documents. For example, a query distributed and systems returns all documents that contain both the words distributed and systems in them. <p> The query result is then a set of documents. For example, a query distributed and systems returns all documents that contain both the words distributed and systems in them. Alternatively, most commercial search engines also support a variation of the vector-space retrieval model <ref> [23] </ref>. In this model, a query is a list of terms, and documents are assigned a score according to how similar they are to the query. The query result is then a rank of documents. <p> For example, if a source S 1 specializes in computer science, the word databases might appear in many of its documents. Then, this word will tend to have a low associated weight in S 1 (e.g., if S 1 uses the tfidf formula for computing weights <ref> [23] </ref>). The word databases, on the other hand, might have a high associated weight in a source S 2 that is totally unrelated to computer science and contains very few documents with that word.
Reference: [24] <author> E. Selberg and O. Etzioni. </author> <title> Multi-service search and comparison using the MetaCrawler. </title> <booktitle> In Proceedings of the Fourth International WWW Conference, </booktitle> <month> Dec. </month> <year> 1995. </year>
Reference-contexts: Several metasearchers already exist on the Internet for querying multiple web indexes. However, not all of them completely support the three major metasearch tasks described above. Examples include MetaCrawler <ref> [24] </ref> (http://www.metacrawler.com), SavvySearch (http://guaraldi.cs.colostate.edu:2000/g, and ProFusion [7]. STARTS, the Stanford Protocol Proposal for Internet Retrieval and Search [9], is an emerging protocol whose goal is to facilitate the three metasearching tasks above. STARTS has been developed in a unique way.
Reference: [25] <author> A. Tomasic, L. Raschid, and P. Valduriez. </author> <title> Scaling heterogeneous databases and the design of DISCO. </title> <type> Technical report, </type> <institution> INRIA, </institution> <year> 1995. </year>
Reference-contexts: Several projects <ref> [22, 16, 25, 21, 20, 27] </ref> propose and discuss query processors that, given some description of the capabilities of the participating sources, adapt to the different, limited capabilities of the sources.
Reference: [26] <author> J. Ullman. </author> <title> Information integration using logical views. </title> <booktitle> In Proceedings of the 1997 ICDT Conference, pages 1940, </booktitle> <year> 1997. </year>
Reference-contexts: Assuming a significant amount of abstraction, we categorize the view/source relationship specifications in the following two broad classes and we provide a high level comparison of the virtues and disadvantages of the two approaches. A detailed technical comparison of the two approaches can be found in <ref> [26] </ref>. In practice, a hybrid of the two approaches is both desirable and possible. The view definition approach, which is usually favored by the database community, describes the integrated view collections as views of the underlying source collections.
Reference: [27] <author> V. Vassalos and Y. Papakonstantinou. </author> <title> Describing and using query capabilities of heterogeneous sources. </title> <booktitle> In Proceedings of the Twenty-third International Conference on Very Large Databases (VLDB'97), </booktitle> <pages> pages 256266, </pages> <month> Aug. </month> <year> 1997. </year>
Reference-contexts: Several projects <ref> [22, 16, 25, 21, 20, 27] </ref> propose and discuss query processors that, given some description of the capabilities of the participating sources, adapt to the different, limited capabilities of the sources. <p> SELECT * FROM bib.reports WHERE reports.title LIKE $X If we use these descriptions, finding a plan that consists of supported queries only is similar to finding a plan to answer queries using views. <ref> [20, 21, 27] </ref> provide languages for the specification of an infinite number of parameterized views and show that it is still possible to find all the potentially optimal plans.
Reference: [28] <author> V. Vassalos and Y. Papakonstantinou. </author> <title> Using knowledge of redundancy for query optimization in mediators. </title> <type> Technical report, </type> <institution> Computer Science Department, Stanford University, </institution> <year> 1998. </year>
Reference-contexts: To address these problems and opportunities several recent papers on mediators have proposed ways to define source overlap and optimization algorithms that produce efficient query execution plans <ref> [5, 28] </ref>. This work exploits the fact that users might be satisfied with efficiently computed partial answers to their queries, and produce incremental query plans for answering their queries, just like some metasearching systems already do for text documents [12, 10].
Reference: [29] <author> E. M. Voorhees, N. K. Gupta, and B. Johnson-Laird. </author> <title> The collection fusion problem. </title> <booktitle> In Proceedings of the Third Text Retrieval Conference (TREC-3), </booktitle> <month> Mar. </month> <year> 1995. </year>
Reference-contexts: An approach to address these problems is to learn from the results of training queries. Given a new query, the closest training queries are used to determine how many documents to extract from each available collection, and how to interleave them into a single document rank <ref> [29, 30] </ref>. Another approach is to calibrate the document scores from each collection using statistics about the word distribution in the collections [1]. The STARTS protocol asks sources to report term statistics in their query results.
Reference: [30] <author> E. M. Voorhees and R. M. Tong. </author> <title> Multiple search engines in database merging. </title> <booktitle> In Proceedings of the Second ACM International Conference on Digital Libraries (DL'97), </booktitle> <month> July </month> <year> 1997. </year>
Reference-contexts: An approach to address these problems is to learn from the results of training queries. Given a new query, the closest training queries are used to determine how many documents to extract from each available collection, and how to interleave them into a single document rank <ref> [29, 30] </ref>. Another approach is to calibrate the document scores from each collection using statistics about the word distribution in the collections [1]. The STARTS protocol asks sources to report term statistics in their query results.
Reference: [31] <author> G. Wiederhold. </author> <booktitle> Mediators in the architecture of future information systems. IEEE Computer, </booktitle> <address> 25:3849, </address> <year> 1992. </year> <month> 9 </month>
Reference-contexts: This way, metasearchers can try and merge query results in meaningful ways without having to retrieve the entire documents. 3 Mediators Mediator systems <ref> [31] </ref> provide users with an integrated view of multiple heterogeneous information sources. These sources are not necessarily structured databases like relational and object oriented databases.
References-found: 31

