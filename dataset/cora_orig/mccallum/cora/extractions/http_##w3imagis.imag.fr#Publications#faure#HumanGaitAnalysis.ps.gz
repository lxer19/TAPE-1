URL: http://w3imagis.imag.fr/Publications/faure/HumanGaitAnalysis.ps.gz
Refering-URL: http://w3imagis.imag.fr/Publications/index_fr.html
Root-URL: http://www.imag.fr
Email: Francois.Faure@imag.fr, Gilles.Debunne@imag.fr, Marie-Paule.Gascuel@imag.fr  Franck.Multon@irisa.fr  
Title: Dynamic analysis of human walking  
Author: Francois Faure, Gilles Debunne, Marie-Paule Cani-Gascuel, Franck Multon 
Note: Definitive version Offprint  
Address: BP 53, F-38041 Grenoble cedex 09, France  35042 Rennes Cedex, France  
Affiliation: iMAGIS -GRAVIR IMAG  IRISA Campus de Beaulieu,  
Abstract: Synthetising realistic animations of human figures should benefit from both a priori biomechanical knowledge on human motion and physically-based simulation techniques, eager to adapt motion to the specific environment in which it takes place. This paper performs a first step towards this goal, by computing and analyzing the internal actuator forces involved when the human figure performs specific walk motions. The computations rely on a robust simulator where forward and inverse dynamics are combined with automatic collision detection and response. The force curves we obtain give interesting information on the respective action of muscles in various styles of walks. Our further plans include parameterizing them and using them to control physically-based simulations of walk motions. 
Abstract-found: 1
Intro-found: 1
Reference: [Bar96] <author> David Baraff. </author> <title> Linear-time dynamics using lagrange multipliers. </title> <booktitle> In SIGGRAPH 96 Conference Proceedings, Computer Graphics Proceedings, Annual Conference Series, </booktitle> <pages> pages 137-146. </pages> <publisher> ACM SIGGRAPH, Addison Wesley, </publisher> <month> August </month> <year> 1996. </year> <note> ISBN 0-201-94800-1. </note>
Reference-contexts: For the third step, Baraff <ref> [Bar96] </ref> recently presented an algorithm that works in linear time on acyclic structures in absolute coordinates. An additional dense matrix solution is used for handling closed-loop constraints. We use the same linear-time solution to solve the acyclic constraints.
Reference: [BC89] <author> A. Bruderlin and T. Calvert. </author> <title> Goal-directed, dynamic animation of human walking. </title> <journal> Computer Graphics, </journal> <volume> 23(3) </volume> <pages> 233-242, </pages> <month> July </month> <year> 1989. </year>
Reference-contexts: However, these methods can only generate walking on a flat ground, without obstacles. The second one is to compute a physically-based simulation of the motion <ref> [BC89] </ref>. The body of the human figure is provided with actuators at hinges, which represent simplified versions of muscles [HWBO95, LvdP96]. A controller computes the actuators actions over time, and the resulting motion is integrated according to the interactions with the virtual environment.
Reference: [BC93] <author> Armin Bruderlin and Tom Calvert. </author> <title> Interactive animation of personalized human locomotion. </title> <booktitle> In Proceedings of Graphics Interface '93, </booktitle> <pages> pages 17-23, </pages> <address> Toronto, Ontario, Canada, </address> <month> May </month> <year> 1993. </year> <booktitle> Canadian Information Processing Society. </booktitle>
Reference-contexts: 1 Introduction Two main approaches have been used for generating walking motions in Computer Animation. The first one is to capture or to create several human motions and to deform or combine them in order to generate and control a large variety of virtual motions <ref> [BC93, UAT95, BW95, WP95] </ref>. However, these methods can only generate walking on a flat ground, without obstacles. The second one is to compute a physically-based simulation of the motion [BC89]. The body of the human figure is provided with actuators at hinges, which represent simplified versions of muscles [HWBO95, LvdP96].
Reference: [BLA94] <author> F. Barbier, P. Loslever, and J-C. </author> <month> Angue. </month> <institution> Methode informatisee de mesure et d'analyse des forces de reaction et des angles articulaires de la marche normale. Innov. Tech. Biol. Med., </institution> <month> 15(4) </month> <pages> 453-460, </pages> <year> 1994. </year>
Reference-contexts: The support phase is characterized by a negative propulsive torque, which corresponds to an acceleration of the character, followed by a positive torque, corresponding to the deceleration. The swing phase generates a lower positive torque that brings back the leg. 4.3 Biomechanical validation Biomechanics researchers <ref> [Ped77, BLA94] </ref> have measured the interaction forces between the feet and the floor when a real subject walks. Their results are depicted in Figure 5 (a). A way to validate our computations is to compare our own results with these curves.
Reference: [BM94] <author> Ronan Boulic and Ramon Mas. </author> <title> Inverse kinetics for center of mass position control and posture optimization. </title> <type> Technical report, </type> <institution> Ecole Polytechnique Federale de Lausanne, </institution> <month> September </month> <year> 1994. </year>
Reference-contexts: Among related previous works, Boulic <ref> [BM94] </ref> performs static analyses of human postures. Ko and Badler [KB97] use an ad hoc inverse dynamics algorithm to modify human gaits according to force constraints, with approximate closed-loop force computation and a simplified contact model.
Reference: [BW95] <author> Armin Bruderlin and Lance Williams. </author> <title> Motion signal processing. </title> <journal> Computer Graphics, </journal> <month> August </month> <year> 1995. </year> <booktitle> Proceedings of SIGGRAPH'95. </booktitle>
Reference-contexts: 1 Introduction Two main approaches have been used for generating walking motions in Computer Animation. The first one is to capture or to create several human motions and to deform or combine them in order to generate and control a large variety of virtual motions <ref> [BC93, UAT95, BW95, WP95] </ref>. However, these methods can only generate walking on a flat ground, without obstacles. The second one is to compute a physically-based simulation of the motion [BC89]. The body of the human figure is provided with actuators at hinges, which represent simplified versions of muscles [HWBO95, LvdP96].
Reference: [Eno94] <author> R. M. Enoka. </author> <title> Neuromechanical Basis of Kinesiology (2nd Edition). </title> <booktitle> Human Kinetics, </booktitle> <year> 1994. </year>
Reference-contexts: The velocity V G of a walker depends on the step length L Step and frequency F Step : V G = L Step fl F Step . So, for a given velocity, many possible step lengths and frequencies are possible. Enoka <ref> [Eno94] </ref> shows that people prefer, to a certain extend, increase their velocity by increasing L Step instead of F Step .
Reference: [Fau96] <author> Francois Faure. </author> <title> An energy-based method for contact force computation. </title> <journal> Computer Graphics Forum, </journal> <volume> 15(3) </volume> <pages> 357-366, </pages> <month> August </month> <year> 1996. </year> <booktitle> (Proceedings of EUROGRAPHICS'96). </booktitle>
Reference-contexts: The Coulomb constraints on contact forces and motions are handled using an iterative global solution algorithm <ref> [Fau96] </ref>. The latter was initially designed for dense matrix dynamics solution, but we adapted it to the sparse matrix formulation. A contact joint is destroyed when the force necessary to enforce the motion constraint corresponds to an attraction instead of a repulsion between the two solids.
Reference: [HWBO95] <author> Jessica Hodgins, Wayne Wooten, David Brogan, and James O'Brien. </author> <title> Animating human athletics. </title> <journal> Computer Graphics, </journal> <month> August </month> <year> 1995. </year> <booktitle> Proceedings of SIGGRAPH'95. </booktitle>
Reference-contexts: However, these methods can only generate walking on a flat ground, without obstacles. The second one is to compute a physically-based simulation of the motion [BC89]. The body of the human figure is provided with actuators at hinges, which represent simplified versions of muscles <ref> [HWBO95, LvdP96] </ref>. A controller computes the actuators actions over time, and the resulting motion is integrated according to the interactions with the virtual environment. Although such controllers could be generated from random search and optimization [NM93, vdPF93, RGBC96, LvdPF96], exploiting biomechanical knowledge on human walking seems a better approach [HWBO95]. <p> A controller computes the actuators actions over time, and the resulting motion is integrated according to the interactions with the virtual environment. Although such controllers could be generated from random search and optimization [NM93, vdPF93, RGBC96, LvdPF96], exploiting biomechanical knowledge on human walking seems a better approach <ref> [HWBO95] </ref>. However, this requires much skill since biomechanics analyses the kinematics of captured motion while simulators take the internal actuator forces as an entry. In this paper, we compute and analyse the actuator forces needed for a human figure to perform different walking gaits.
Reference: [IC88] <author> P.M. Isaacs and M.F. Cohen. </author> <title> Mixed method for complex kinematic constraints in dynamic figure animation. </title> <journal> The Visual Computer, </journal> <volume> 2(4) </volume> <pages> 296-305, </pages> <month> December </month> <year> 1988. </year>
Reference-contexts: This produces different walking gaits that will be analyzed in Sections 4 and 5 together with the standard gait described by Nilsson. 3 A simulator handling collisions and constrained motions Combining the use of forward and inverse dynamics is a well known approach <ref> [IC88] </ref> but has not been applied, to the authors knowledge, to human walk including automatic collision detection and response along with a precise computation of closed loop forces and friction. Among related previous works, Boulic [BM94] performs static analyses of human postures.
Reference: [KB97] <author> Hyeongseok Ko and Norman Badler. </author> <title> Animating human locomotion with inverse dynamics. </title> <journal> IEEE Computer Graphics and Applications, </journal> <month> March </month> <year> 1997. </year>
Reference-contexts: Among related previous works, Boulic [BM94] performs static analyses of human postures. Ko and Badler <ref> [KB97] </ref> use an ad hoc inverse dynamics algorithm to modify human gaits according to force constraints, with approximate closed-loop force computation and a simplified contact model. Comparing our work with their results is not easy, since they do not provide curves of actuator forces during a walking cycle.
Reference: [LvdP96] <author> Alexis Lamouret and Michel van de Panne. </author> <title> Motion synthesis by example. </title> <booktitle> In Computer animation and Simulation'96, </booktitle> <pages> pages 199-212. </pages> <booktitle> Eurograpics workshop, </booktitle> <month> September </month> <year> 1996. </year>
Reference-contexts: However, these methods can only generate walking on a flat ground, without obstacles. The second one is to compute a physically-based simulation of the motion [BC89]. The body of the human figure is provided with actuators at hinges, which represent simplified versions of muscles <ref> [HWBO95, LvdP96] </ref>. A controller computes the actuators actions over time, and the resulting motion is integrated according to the interactions with the virtual environment. Although such controllers could be generated from random search and optimization [NM93, vdPF93, RGBC96, LvdPF96], exploiting biomechanical knowledge on human walking seems a better approach [HWBO95].
Reference: [LvdPF96] <author> Joseph Laszlo, Michiel van de Panne, and Eugene Fiume. </author> <title> Limit cycle control and its application to balancing and walking. </title> <journal> Computer Graphics, </journal> <month> August </month> <year> 1996. </year> <booktitle> Proceedings of SIGGRAPH'96. </booktitle>
Reference-contexts: A controller computes the actuators actions over time, and the resulting motion is integrated according to the interactions with the virtual environment. Although such controllers could be generated from random search and optimization <ref> [NM93, vdPF93, RGBC96, LvdPF96] </ref>, exploiting biomechanical knowledge on human walking seems a better approach [HWBO95]. However, this requires much skill since biomechanics analyses the kinematics of captured motion while simulators take the internal actuator forces as an entry.
Reference: [MA97] <author> F. Multon and B. Arnaldi. </author> <title> A biomechanical model for interactive animation of human locomotion. </title> <note> Submitted to the Journal of Visualization and Comp uter Animation, </note> <month> March </month> <year> 1997. </year>
Reference-contexts: it is possible to customize a walking gait by tuning this strategy. 2.2 Knowledge-based kinematic model To perform dynamic analysis of human walking from the results above, we first have to convert them into a parametrized kinematic model of human walking (more details on this model can be found in <ref> [MA97] </ref>). We use Hierarchical Concurrent State Machines (HCSM) to model the locomotion sub-cycles described by Nilsson, and to ensure coordination between the articulations. The main state machine describes the global walking cycles : each state corresponds to a specific global sub-cycle such as stance phase, swing phase, double stand, etc.
Reference: [NM93] <author> J.T Ngo and J. Marks. </author> <title> Spacetime constraints revisited. </title> <journal> Computer Graphics, </journal> <month> August </month> <year> 1993. </year> <booktitle> Proceedings of SIGGRAPH'93 (Anaheim, </booktitle> <address> California, </address> <month> August </month> <year> 1993). </year>
Reference-contexts: A controller computes the actuators actions over time, and the resulting motion is integrated according to the interactions with the virtual environment. Although such controllers could be generated from random search and optimization <ref> [NM93, vdPF93, RGBC96, LvdPF96] </ref>, exploiting biomechanical knowledge on human walking seems a better approach [HWBO95]. However, this requires much skill since biomechanics analyses the kinematics of captured motion while simulators take the internal actuator forces as an entry.
Reference: [NTH85] <author> J. Nilsson, A. Thorstensson, and J. Halbertsam. </author> <title> Changes in leg movements and muscle activity with speed of locomotion and mode of progression in humans. </title> <journal> Acta Physiol Scand, </journal> <pages> pages 457-475, </pages> <year> 1985. </year>
Reference-contexts: Most of them characterize the different phases that compose the locomotion cycles. A more accurate description of these phases is provided by Nilsson <ref> [NTH85] </ref>. In particular, he identifies changes in angle trajectories between the different limbs of the legs depending on the velocity of the subject. Contrary to the other studies, he gives a locomotion sub-cycle for each articulation, by introducing phases of extensions/flexions.
Reference: [Ped77] <author> A. Pedotti. </author> <title> A study of motor coordination and neuromuscular activities in human locomotion. </title> <journal> Biological Cybernetics, </journal> <pages> pages 53-62, </pages> <year> 1977. </year>
Reference-contexts: The support phase is characterized by a negative propulsive torque, which corresponds to an acceleration of the character, followed by a positive torque, corresponding to the deceleration. The swing phase generates a lower positive torque that brings back the leg. 4.3 Biomechanical validation Biomechanics researchers <ref> [Ped77, BLA94] </ref> have measured the interaction forces between the feet and the floor when a real subject walks. Their results are depicted in Figure 5 (a). A way to validate our computations is to compare our own results with these curves.
Reference: [PTVF92] <author> Press, Teukolski, Vetterling, and Flannery. </author> <title> Numerical Recipes in C. </title> <publisher> Cambridge University Press, </publisher> <year> 1992. </year>
Reference-contexts: However, since our simulator is designed for handling arbitrarily large scenes, we wish to avoid any dense matrix solution. We prefer to handle closed-loops by progressively refining a global solution, thanks to an iterative conjugate gradient-based minimization of the closed-loop constraints. It uses a Fletcher-Reeves-Polak-Ribiere method <ref> [PTVF92] </ref> to compute the closed-loop forces necessary to enforce the closed-loop constraints.
Reference: [RGBC96] <author> Charles Rose, Brian Guenter, Bobby Bodenheimer, and Michael Cohen. </author> <title> Efficient generation of motion transitions using space-time constraints. </title> <journal> Computer Graphics, </journal> <month> August </month> <year> 1996. </year> <booktitle> Proceedings of SIG-GRAPH'96. </booktitle>
Reference-contexts: A controller computes the actuators actions over time, and the resulting motion is integrated according to the interactions with the virtual environment. Although such controllers could be generated from random search and optimization <ref> [NM93, vdPF93, RGBC96, LvdPF96] </ref>, exploiting biomechanical knowledge on human walking seems a better approach [HWBO95]. However, this requires much skill since biomechanics analyses the kinematics of captured motion while simulators take the internal actuator forces as an entry.
Reference: [UAT95] <author> Munetoshi Unuma, Ken Anjyo, and Ryozo Takeuchi. </author> <title> Fourier principles for emotion-based human figure animation. </title> <journal> Computer Graphics, </journal> <month> August </month> <year> 1995. </year> <booktitle> Proceedings of SIGGRAPH'95. </booktitle>
Reference-contexts: 1 Introduction Two main approaches have been used for generating walking motions in Computer Animation. The first one is to capture or to create several human motions and to deform or combine them in order to generate and control a large variety of virtual motions <ref> [BC93, UAT95, BW95, WP95] </ref>. However, these methods can only generate walking on a flat ground, without obstacles. The second one is to compute a physically-based simulation of the motion [BC89]. The body of the human figure is provided with actuators at hinges, which represent simplified versions of muscles [HWBO95, LvdP96].
Reference: [vdPF93] <author> M. van de Panne and E. Fiume. </author> <title> Sensor-actuator networks. </title> <journal> Computer Graphics, </journal> <month> August </month> <year> 1993. </year> <booktitle> Proceedings of SIGGRAPH'93 (Anaheim, </booktitle> <address> California, </address> <month> August </month> <year> 1993). </year>
Reference-contexts: A controller computes the actuators actions over time, and the resulting motion is integrated according to the interactions with the virtual environment. Although such controllers could be generated from random search and optimization <ref> [NM93, vdPF93, RGBC96, LvdPF96] </ref>, exploiting biomechanical knowledge on human walking seems a better approach [HWBO95]. However, this requires much skill since biomechanics analyses the kinematics of captured motion while simulators take the internal actuator forces as an entry.
Reference: [WP95] <author> Andrew Witkin and Zoran Popovi'c. </author> <title> Motion warping. </title> <journal> Computer Graphics, </journal> <month> August </month> <year> 1995. </year> <booktitle> Proceedings of SIGGRAPH'95. </booktitle>
Reference-contexts: 1 Introduction Two main approaches have been used for generating walking motions in Computer Animation. The first one is to capture or to create several human motions and to deform or combine them in order to generate and control a large variety of virtual motions <ref> [BC93, UAT95, BW95, WP95] </ref>. However, these methods can only generate walking on a flat ground, without obstacles. The second one is to compute a physically-based simulation of the motion [BC89]. The body of the human figure is provided with actuators at hinges, which represent simplified versions of muscles [HWBO95, LvdP96].
References-found: 22

