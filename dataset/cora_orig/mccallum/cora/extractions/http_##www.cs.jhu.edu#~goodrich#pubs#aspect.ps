URL: http://www.cs.jhu.edu/~goodrich/pubs/aspect.ps
Refering-URL: http://www.cs.jhu.edu/~goodrich/pubs/index.html
Root-URL: http://www.cs.jhu.edu
Email: tchan@cs.jhu.edu goodrich@cs.jhu.edu  kosaraju@cs.jhu.edu rt@cs.brown.edu  
Title: Optimizing Area and Aspect Ratio in Straight-Line Orthogonal Tree Drawings  
Author: Timothy Chan Michael T. Goodrich S. Rao Kosaraju Roberto Tamassia 
Affiliation: Center for Geometric Computing Center for Geometric Computing Dept. of Computer Science Dept. of Computer Science Johns Hopkins Univ. Johns Hopkins Univ.  Center for Geometric Computing Center for Geometric Computing Dept. of Computer Science Dept. of Computer Science Johns Hopkins Univ. Brown Univ.  
Abstract: We investigate the problem of drawing an arbitrary n-node binary tree orthogonally in an integer grid using straight-line edges. We show that one can simultaneously achieve good area bounds while also allowing the aspect ratio to be chosen as being O(1) or sometimes even an arbitrary parameter. In addition, we show that one can also achieve an additional desirable aesthetic criterion, which we call "subtree separation." We investigate both upward and non-upward drawings, achieving area bounds of O(n log n) and O(n log log n), respectively, and we show that, at least in the case of upward drawings, our area bound is optimal to within constant factors. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> R. P. Brent and H. T. Kung. </author> <title> On the area of binary tree layouts. </title> <journal> Inform. Process. Lett., </journal> <volume> 11 </volume> <pages> 521-534, </pages> <year> 1980. </year>
Reference-contexts: upward fi (n) [1=n ff ; n ff ] [5] rooted tree binary tree upward orthogonal fi (n log log n) O (n log log n= log 2 n) [5] degree-4 tree orthogonal fi (n) O (1) [6, 7, 11] degree-4 tree leaves-on-hull orthogonal fi (n log n) O (1) <ref> [1] </ref> Table 1. Summary of some area/aspect ratio results for planar polyline grid drawings of trees. We use ff to denote an arbitrary constant such that 0 ff &lt; 1.
Reference: 2. <author> P. Crescenzi, G. Di Battista, and A. Piperno. </author> <title> A note on optimal area algorithms for upward drawings of binary trees. </title> <journal> Comput. Geom. Theory Appl., </journal> <volume> 2 </volume> <pages> 187-200, </pages> <year> 1992. </year>
Reference-contexts: We summarize relevant previous results for this class of drawings in Table 2. Class Drawing Type Area Aspect Ratio (s) Source rooted tree upward layered grid O (n 2 ) O (1) [8] rooted tree upward grid O (n log n) O (n= log n) <ref> [2, 9] </ref> rooted tree strictly upward grid fi (n log n) O (n= log n) [2] complete or strictly upward grid fi (n) O (1) [2, 10] Fibonacci tree AVL tree strictly upward grid fi (n) [(log fi n)=n; n=(log fi n)] [3] balanced tree of upward grid O (n log <p> Class Drawing Type Area Aspect Ratio (s) Source rooted tree upward layered grid O (n 2 ) O (1) [8] rooted tree upward grid O (n log n) O (n= log n) [2, 9] rooted tree strictly upward grid fi (n log n) O (n= log n) <ref> [2] </ref> complete or strictly upward grid fi (n) O (1) [2, 10] Fibonacci tree AVL tree strictly upward grid fi (n) [(log fi n)=n; n=(log fi n)] [3] balanced tree of upward grid O (n log n) O (n= log n) [2, 9] height O (log n) Table 2. <p> Source rooted tree upward layered grid O (n 2 ) O (1) [8] rooted tree upward grid O (n log n) O (n= log n) [2, 9] rooted tree strictly upward grid fi (n log n) O (n= log n) [2] complete or strictly upward grid fi (n) O (1) <ref> [2, 10] </ref> Fibonacci tree AVL tree strictly upward grid fi (n) [(log fi n)=n; n=(log fi n)] [3] balanced tree of upward grid O (n log n) O (n= log n) [2, 9] height O (log n) Table 2. Summary of previous area/aspect ratio results for planar straight-line grid drawings. <p> grid fi (n log n) O (n= log n) [2] complete or strictly upward grid fi (n) O (1) [2, 10] Fibonacci tree AVL tree strictly upward grid fi (n) [(log fi n)=n; n=(log fi n)] [3] balanced tree of upward grid O (n log n) O (n= log n) <ref> [2, 9] </ref> height O (log n) Table 2. Summary of previous area/aspect ratio results for planar straight-line grid drawings. We use fi to denote an arbitrary constant such that fi &gt; 1. <p> Arrange the tree so that N [left (v)] N [right (v)] at every node v. This prepro cessing requires only linear time. We first review the following lemma: Fig. 1. Drawing of a binary tree with O (log n) height and O (n) width. Lemma 2 <ref> [2, 9] </ref>. <p> Lemma 4. If T is an n-node complete binary tree, then any planar straight-line orthogonal grid drawing of T must have width and height at least b (log n)=2c. Proof: The proof is based upon an induction argument similar to that used by Crescenzi et al. <ref> [2] </ref> to prove a similar bound for upward (non-orthogonal) grid drawings of T . Let T be an n-node complete binary tree and let D be a straight-line orthogonal drawing of T .
Reference: 3. <author> P. Crescenzi and A. Piperno. </author> <title> Optimal-area upward drawings of AVL trees. </title> <editor> In R. Tamassia and I. G. Tollis, editors, </editor> <booktitle> Graph Drawing (Proc. GD '94), volume 894 of Lecture Notes in Computer Science, </booktitle> <pages> pages 307-317. </pages> <publisher> Springer-Verlag, </publisher> <year> 1995. </year>
Reference-contexts: O (n log n) O (n= log n) [2, 9] rooted tree strictly upward grid fi (n log n) O (n= log n) [2] complete or strictly upward grid fi (n) O (1) [2, 10] Fibonacci tree AVL tree strictly upward grid fi (n) [(log fi n)=n; n=(log fi n)] <ref> [3] </ref> balanced tree of upward grid O (n log n) O (n= log n) [2, 9] height O (log n) Table 2. Summary of previous area/aspect ratio results for planar straight-line grid drawings. We use fi to denote an arbitrary constant such that fi &gt; 1.
Reference: 4. <author> G. Di Battista, P. Eades, R. Tamassia, and I. G. Tollis. </author> <title> Algorithms for drawing graphs: an annotated bibliography. </title> <journal> Comput. Geom. Theory Appl., </journal> <volume> 4 </volume> <pages> 235-282, </pages> <year> 1994. </year>
Reference-contexts: for example, if the tree represents an inherently hierarchical relationship, such as the organizational structure of a large business. 1.1 Previous related research There has been a fair amount of research involving area and aspect ratio tradeoffs of tree drawings (e.g., see the annotated bibliography of Di Battista et al. <ref> [4] </ref>). We summarize the previous bounds for planar polyline grid drawings, for example, where edges are drawn as polygonal chains that bend only at integer grid points, in Table 1.
Reference: 5. <author> A. Garg, M. T. Goodrich, and R. Tamassia. </author> <title> Area-efficient upward tree drawings. </title> <booktitle> In Proc. 9th Annu. ACM Sympos. Comput. Geom., </booktitle> <pages> pages 359-368, </pages> <year> 1993. </year>
Reference-contexts: We summarize the previous bounds for planar polyline grid drawings, for example, where edges are drawn as polygonal chains that bend only at integer grid points, in Table 1. Class Drawing Type Area Aspect Ratio (s) Source degree-O (1) upward fi (n) [1=n ff ; n ff ] <ref> [5] </ref> rooted tree binary tree upward orthogonal fi (n log log n) O (n log log n= log 2 n) [5] degree-4 tree orthogonal fi (n) O (1) [6, 7, 11] degree-4 tree leaves-on-hull orthogonal fi (n log n) O (1) [1] Table 1. <p> Class Drawing Type Area Aspect Ratio (s) Source degree-O (1) upward fi (n) [1=n ff ; n ff ] <ref> [5] </ref> rooted tree binary tree upward orthogonal fi (n log log n) O (n log log n= log 2 n) [5] degree-4 tree orthogonal fi (n) O (1) [6, 7, 11] degree-4 tree leaves-on-hull orthogonal fi (n log n) O (1) [1] Table 1. Summary of some area/aspect ratio results for planar polyline grid drawings of trees. <p> Of course, it might not always be possible to achieve subtree separation while also optimizing for other aesthetic criteria. For example, many of the drawings produced by the algorithms of Garg et al. <ref> [5] </ref> do not achieve subtree separation. <p> Proof: The proof is based upon a non-trivial adaptation of a "chain pinning" argument of Garg et al. <ref> [5] </ref>.
Reference: 6. <author> C. E. Leiserson. </author> <title> Area-efficient graph layouts (for VLSI). </title> <booktitle> In Proc. 21st Annu. IEEE Sympos. Found. Comput. Sci., </booktitle> <pages> pages 270-281, </pages> <year> 1980. </year>
Reference-contexts: Class Drawing Type Area Aspect Ratio (s) Source degree-O (1) upward fi (n) [1=n ff ; n ff ] [5] rooted tree binary tree upward orthogonal fi (n log log n) O (n log log n= log 2 n) [5] degree-4 tree orthogonal fi (n) O (1) <ref> [6, 7, 11] </ref> degree-4 tree leaves-on-hull orthogonal fi (n log n) O (1) [1] Table 1. Summary of some area/aspect ratio results for planar polyline grid drawings of trees. We use ff to denote an arbitrary constant such that 0 ff &lt; 1.
Reference: 7. <author> C. E. Leiserson. </author> <title> Area-efficient graph layouts (for VLSI). ACM Doctoral Dissertation Award Series. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1983. </year>
Reference-contexts: Class Drawing Type Area Aspect Ratio (s) Source degree-O (1) upward fi (n) [1=n ff ; n ff ] [5] rooted tree binary tree upward orthogonal fi (n log log n) O (n log log n= log 2 n) [5] degree-4 tree orthogonal fi (n) O (1) <ref> [6, 7, 11] </ref> degree-4 tree leaves-on-hull orthogonal fi (n log n) O (1) [1] Table 1. Summary of some area/aspect ratio results for planar polyline grid drawings of trees. We use ff to denote an arbitrary constant such that 0 ff &lt; 1.
Reference: 8. <author> E. Reingold and J. Tilford. </author> <title> Tidier drawing of trees. </title> <journal> IEEE Trans. Softw. Eng., </journal> <volume> SE-7(2):223-228, </volume> <year> 1981. </year>
Reference-contexts: The related issues for straight-line drawings are not as well-understood, however. We summarize relevant previous results for this class of drawings in Table 2. Class Drawing Type Area Aspect Ratio (s) Source rooted tree upward layered grid O (n 2 ) O (1) <ref> [8] </ref> rooted tree upward grid O (n log n) O (n= log n) [2, 9] rooted tree strictly upward grid fi (n log n) O (n= log n) [2] complete or strictly upward grid fi (n) O (1) [2, 10] Fibonacci tree AVL tree strictly upward grid fi (n) [(log fi
Reference: 9. <author> Y. Shiloach. </author> <title> Arrangements of Planar Graphs on the Planar Lattice. </title> <type> PhD thesis, </type> <institution> Weizmann Institute of Science, </institution> <year> 1976. </year>
Reference-contexts: We summarize relevant previous results for this class of drawings in Table 2. Class Drawing Type Area Aspect Ratio (s) Source rooted tree upward layered grid O (n 2 ) O (1) [8] rooted tree upward grid O (n log n) O (n= log n) <ref> [2, 9] </ref> rooted tree strictly upward grid fi (n log n) O (n= log n) [2] complete or strictly upward grid fi (n) O (1) [2, 10] Fibonacci tree AVL tree strictly upward grid fi (n) [(log fi n)=n; n=(log fi n)] [3] balanced tree of upward grid O (n log <p> grid fi (n log n) O (n= log n) [2] complete or strictly upward grid fi (n) O (1) [2, 10] Fibonacci tree AVL tree strictly upward grid fi (n) [(log fi n)=n; n=(log fi n)] [3] balanced tree of upward grid O (n log n) O (n= log n) <ref> [2, 9] </ref> height O (log n) Table 2. Summary of previous area/aspect ratio results for planar straight-line grid drawings. We use fi to denote an arbitrary constant such that fi &gt; 1. <p> Arrange the tree so that N [left (v)] N [right (v)] at every node v. This prepro cessing requires only linear time. We first review the following lemma: Fig. 1. Drawing of a binary tree with O (log n) height and O (n) width. Lemma 2 <ref> [2, 9] </ref>.
Reference: 10. <author> L. Trevisan. </author> <title> A note on minimum-area upward drawing of complete and Fibonacci trees. </title> <journal> Information Processing Letters, </journal> <volume> 57(5) </volume> <pages> 231-236, </pages> <year> 1996. </year>
Reference-contexts: Source rooted tree upward layered grid O (n 2 ) O (1) [8] rooted tree upward grid O (n log n) O (n= log n) [2, 9] rooted tree strictly upward grid fi (n log n) O (n= log n) [2] complete or strictly upward grid fi (n) O (1) <ref> [2, 10] </ref> Fibonacci tree AVL tree strictly upward grid fi (n) [(log fi n)=n; n=(log fi n)] [3] balanced tree of upward grid O (n log n) O (n= log n) [2, 9] height O (log n) Table 2. Summary of previous area/aspect ratio results for planar straight-line grid drawings.
Reference: 11. <author> L. Valiant. </author> <title> Universality considerations in VLSI circuits. </title> <journal> IEEE Trans. Comput., </journal> <volume> C-30(2):135-140, </volume> <year> 1981. </year> <title> This article was processed using the L A T E X macro package with LLNCS style </title>
Reference-contexts: Class Drawing Type Area Aspect Ratio (s) Source degree-O (1) upward fi (n) [1=n ff ; n ff ] [5] rooted tree binary tree upward orthogonal fi (n log log n) O (n log log n= log 2 n) [5] degree-4 tree orthogonal fi (n) O (1) <ref> [6, 7, 11] </ref> degree-4 tree leaves-on-hull orthogonal fi (n log n) O (1) [1] Table 1. Summary of some area/aspect ratio results for planar polyline grid drawings of trees. We use ff to denote an arbitrary constant such that 0 ff &lt; 1.
References-found: 11

