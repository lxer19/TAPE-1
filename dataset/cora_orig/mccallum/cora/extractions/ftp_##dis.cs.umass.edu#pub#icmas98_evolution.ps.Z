URL: ftp://dis.cs.umass.edu/pub/icmas98_evolution.ps.Z
Refering-URL: http://dis.cs.umass.edu/~wagner/pubs.html
Root-URL: 
Title: Evolution of the GPGP Domain-Independent Coordination Framework 1  
Author: V. Lesser, K. Decker N. Carver A. Garvey D. Neiman, M. Nagendra Prasad and T. Wagner 
Address: Amherst  
Affiliation: Computer Science Department University of Massachusetts,  
Note: WORKING DRAFT SUBMITTED TO ICMAS98  Topics: Coordination  
Abstract: The GPGP domain-independent coordination structure for small agent groups was first detailed in an ICMAS95 paper. In this paper, we discuss the evolution of this framework over the last three years based on its being applied to a number of applications involving distributed situation assessment, information gathering and management, coordination of concurrent engineering activities and hospital scheduling. First, we review the basic architecture of GPGP and then present extensions to the TAEMS domain-independent representation of agent activities. We next describe new coordination mechanisms for use in resource sharing and contracting and the need for more complex coordination mechanisms. Finally, extensions to GPGP that permit the description and learning of situationspecific coordination strategies are detailed along with techniques for using GPGP in large agent organizations. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Keith S. Decker. </author> <title> Environment Centered Analysis and Design of Coordination Mechanisms. </title> <type> PhD thesis, </type> <institution> University of Massachusetts, </institution> <year> 1995. </year>
Reference-contexts: Introduction Generalized Partial Global Planning (GPGP) was developed as a domain-independent framework for coordinating the real-time activities of small teams of agents <ref> [1, 5] </ref>. Over the last three years, we have significantly extended the framework based on our experience applying it to a number of applications involving distributed situation assessment, information gathering and management, coordination of concurrent engineering activities, and hospital scheduling [2, 3, 9, 10]. <p> achievement in terms of measurable characteristics such as solution quality and time, (d) task relationships that indicate how basic actions or abstract task 3 achievement effect task characteristics (e.g., quality and, time) elsewhere in the task structure 6 language that we use to represent these task structures is called TAEMS <ref> [1, 4, 15] </ref>. This choice of representation is quite unique and powerful. Unlike many systems, we deal with worth-oriented [13] environments where a goal is not black and white, but rather has a degree of achievement associated with it. <p> These five mechanisms were: (1) communicate nonlocal views; (2) communicate appropriate results; (3) avoid redundancy; and (4,5) handle hard and soft coordination relationships that extend between tasks at two agents <ref> [1] </ref>. These five basic mechanisms formed a domain-independent set for basic agent teamwork. As such, it is interesting to compare them to Tambe's more recent work on flexible teamwork [14], in turn based on Cohen & Levesque's work [8].
Reference: 2. <author> Keith S. Decker. </author> <title> Task environment centered simulation. </title> <editor> In M. Prietula, K. Carley, and L. Gasser, editors, </editor> <title> Simulating Organizations: Computational Models of Institutions and Groups. </title> <publisher> AAAI Press/MIT Press, </publisher> <year> 1997. </year>
Reference-contexts: Over the last three years, we have significantly extended the framework based on our experience applying it to a number of applications involving distributed situation assessment, information gathering and management, coordination of concurrent engineering activities, and hospital scheduling <ref> [2, 3, 9, 10] </ref>. The focus of this paper is to discuss these extensions and how they permit us to implement coordination strategies for a wide range of multi-agent systems. We start out by first reviewing the basic concepts behind GPGP and how this framework relates to other approaches.
Reference: 3. <author> Keith S. Decker and Jinjiang Li. </author> <title> Coordinated Hospital Patient Scheduling. </title> <note> Submitted to ICMAS-98. </note>
Reference-contexts: Over the last three years, we have significantly extended the framework based on our experience applying it to a number of applications involving distributed situation assessment, information gathering and management, coordination of concurrent engineering activities, and hospital scheduling <ref> [2, 3, 9, 10] </ref>. The focus of this paper is to discuss these extensions and how they permit us to implement coordination strategies for a wide range of multi-agent systems. We start out by first reviewing the basic concepts behind GPGP and how this framework relates to other approaches. <p> For example, we have defined a new coordination mechanism that uses a simple negotiation protocol to schedule access to any such mutually exclusive resource <ref> [3] </ref>. The idea behind this resource-constraint coordination mechanism is that when an agent intends to execute a resource-constrained task, it sends a bid of the time interval it needs and the local priority (projected utility) of its task.
Reference: 4. <author> Keith S. Decker and Victor R. Lesser. </author> <title> Quantitative modeling of complex environments. </title> <booktitle> International Journal of Intelligent Systems in Accounting, Finance, and Management, </booktitle> <address> 2(4):215234, </address> <month> December </month> <year> 1993. </year> <title> 15 Special issue on Mathematical and Computational Models of Organizations: Models and Characteristics of Agent Behavior. </title>
Reference-contexts: achievement in terms of measurable characteristics such as solution quality and time, (d) task relationships that indicate how basic actions or abstract task 3 achievement effect task characteristics (e.g., quality and, time) elsewhere in the task structure 6 language that we use to represent these task structures is called TAEMS <ref> [1, 4, 15] </ref>. This choice of representation is quite unique and powerful. Unlike many systems, we deal with worth-oriented [13] environments where a goal is not black and white, but rather has a degree of achievement associated with it. <p> Thus, the ability to reason quantitatively about the benefits and costs of coordination seems essential for effective system operation where there is a large set of situations that need to be reasoned about <ref> [4] </ref>. The initial set of mechanisms for GPGP were derived from Durfee's work on PGP [6] in the Distributed Vehicle Monitoring Testbed (DVMT).
Reference: 5. <author> Keith S. Decker and Victor R. Lesser. </author> <title> Designing a family of coordination algorithms. </title> <booktitle> In Proceedings of the First International Conference on Multi-Agent Systems, </booktitle> <pages> pp. 7380, </pages> <address> San Francisco, </address> <month> June </month> <year> 1995. </year> <note> AAAI Press. Longer version available as UMass CS-TR 94-14. </note>
Reference-contexts: Introduction Generalized Partial Global Planning (GPGP) was developed as a domain-independent framework for coordinating the real-time activities of small teams of agents <ref> [1, 5] </ref>. Over the last three years, we have significantly extended the framework based on our experience applying it to a number of applications involving distributed situation assessment, information gathering and management, coordination of concurrent engineering activities, and hospital scheduling [2, 3, 9, 10].
Reference: 6. <author> Edmund Durfee and V.R. Lesser. </author> <title> Partial global planning: A coordination framework for distributed hypothesis formation. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> 21(5):11671183, </volume> <month> September </month> <year> 1991. </year>
Reference-contexts: Soft relationships, such as facilitates, expresses the notion that the results of one activity may be beneficial (or harmful) to another activity, but that the results are not required in order to perform the activity. 7 The name GPGP derives from Durfee's Partial Global Planning <ref> [6] </ref>, which by today's definition of AI planning also focuses on the scheduling end of the planning-scheduling spectrum. 8 The question of which mechanism to use when more than one is possible is a question about organizational/societal norms. 4 about costs and benefits can be extremely complex, particularly in large systems <p> Thus, the ability to reason quantitatively about the benefits and costs of coordination seems essential for effective system operation where there is a large set of situations that need to be reasoned about [4]. The initial set of mechanisms for GPGP were derived from Durfee's work on PGP <ref> [6] </ref> in the Distributed Vehicle Monitoring Testbed (DVMT). These five mechanisms were: (1) communicate nonlocal views; (2) communicate appropriate results; (3) avoid redundancy; and (4,5) handle hard and soft coordination relationships that extend between tasks at two agents [1].
Reference: 7. <author> Nick Jennings. </author> <title> Commitments and Conventions: The foundation of coordination in multi-agent systems. </title> <journal> The Knowledge Engineering Review, </journal> <volume> vol. 8, no. 3, </volume> <pages> pp. 223250, </pages> <year> 1993. </year>
Reference-contexts: Each GPGP coordination mechanism is specified with respect to features in these dynamically changing task structures, and so provides flexible coordinated responses across different problem domains. The quantitative, worth-oriented approach has several benefits when compared to symbolic, preplanned, domainspecific approaches <ref> [7] </ref>. In particular, GPGP is not domainspecific, but rather taskstructure-characteristic-specific. The same task relationships may appear across many different domains, and the same coordination mechanisms can be used 8 . Efficient and effective coordination must account for the benefits and the costs of coordination in the current situation.
Reference: 8. <author> Hector J. Levesque, Philip R. Cohen, and H. T. Nunes. </author> <title> On acting together. </title> <booktitle> In Proceedings of the Eighth National Conference on Artificial Intelligence, </booktitle> <pages> pages 9499, </pages> <month> July </month> <year> 1990. </year>
Reference-contexts: These five basic mechanisms formed a domain-independent set for basic agent teamwork. As such, it is interesting to compare them to Tambe's more recent work on flexible teamwork [14], in turn based on Cohen & Levesque's work <ref> [8] </ref>. In particular, the five initial GPGP mechanisms do not separate the environment-centered coordination actions from actions oriented toward teamwork itself. Also, GPGP currently only represents joint intentions implicitly by communicating parts of one agent's local task structure to another agent.
Reference: 9. <author> Maram Nagendra Prasad, K. Decker, A. Garvey, and V. Lesser. </author> <title> Exploring Organizational Designs with TAEMS: A case study of distributed data processing. </title> <booktitle> In Proceedings of the Second International Conference on Multi-Agent Systems, </booktitle> <address> California, </address> <year> 1997. </year>
Reference-contexts: Over the last three years, we have significantly extended the framework based on our experience applying it to a number of applications involving distributed situation assessment, information gathering and management, coordination of concurrent engineering activities, and hospital scheduling <ref> [2, 3, 9, 10] </ref>. The focus of this paper is to discuss these extensions and how they permit us to implement coordination strategies for a wide range of multi-agent systems. We start out by first reviewing the basic concepts behind GPGP and how this framework relates to other approaches. <p> The GPGP modularized coordination approach facilitates a range of coordination cost/benefit options for any problemsolving episode as different subsets of coordination modules may be applied. 9 In recent work, we have significantly expanded on this idea of situationspecific coordination strategies. In <ref> [9] </ref>, we showed that a suite of coordination mechanisms could be dynamically selected based on the agents exchanging metalevel information about their state in terms of measures, based on an agents task structures, that indicated such things as their current loading, time pressure in terms of meeting deadlines, and the potential <p> For example, a priori commitments could indicate that an agent can expect another agent to generate a specific result and transmit it to this agent by a certain time <ref> [9] </ref>. The transmitting agent, in turn, has an a priori commitment to generate the results by a specific time. In this way, agent activities can be coordinated without the agents exchanging information about their current activities, and then negotiating over a suitable commitment. <p> In our work on distributed data processing, some avoidable errors and inefficiencies have been observed when long sequences of tasks are closely linked across several agents <ref> [9] </ref>. In such cases the existing mechanisms (developed with the physically linked environment of vehicle monitoring in mind) can cause costly time delays. New mechanisms can apply more complex, multistage models of negotiation over commitments.
Reference: 10. <author> Tim Oates, M. V. Nagendra Prasad, and V. R. Lesser. </author> <title> Cooperative Information Gathering: A Distributed ProblemSolving Approach. </title> <journal> In IEE Proceedings on Software Engineering, Special Issue on Agent-based Systems, </journal> <volume> Volume 144, No. 1, </volume> <year> 1997. </year>
Reference-contexts: Over the last three years, we have significantly extended the framework based on our experience applying it to a number of applications involving distributed situation assessment, information gathering and management, coordination of concurrent engineering activities, and hospital scheduling <ref> [2, 3, 9, 10] </ref>. The focus of this paper is to discuss these extensions and how they permit us to implement coordination strategies for a wide range of multi-agent systems. We start out by first reviewing the basic concepts behind GPGP and how this framework relates to other approaches.
Reference: 11. <author> Anita Raja, Victor Lesser, and Thomas Wagner. </author> <title> A more complex view of schedule uncertainty based on contingency analysis. </title> <institution> UMass Department of Computer Science Technical Report, </institution> <month> December </month> <year> 1997. </year>
Reference-contexts: The switch from expected values to discrete distributions enables reasoning about the certainty [16] of particular courses of action, perhaps performing contingency analysis <ref> [11] </ref>, as well as the quality/cost/time tradeoffs. This more complete view is crucial in highly constrained situations (e.g., where deadlines are present).
Reference: 12. <author> A.S. Rao and M.P. Georgeff. </author> <title> BDI agents: From theory to practice. </title> <booktitle> In Proceedings of the First International Conference on Multi-Agent Systems, </booktitle> <pages> pages 312319, </pages> <address> San Francisco, June 1995. </address> <publisher> AAAI Press. </publisher>
Reference-contexts: We also allow many task structures to be active at once, representing several objectives all of which must be achieved to some degree. The agent's task structure view may change over time due to uncertainty or a dynamically changing environment. In terms of BDI style architectures <ref> [12] </ref>, an agent selects from among its desires an intended set which are then planned for, and whose component actions are then scheduled for execution.
Reference: 13. <author> Stanley Rosenschein and G. Zlotkin. </author> <title> Rules of Encounter: Designing Conventions for Automated Negotiation among Computers. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1994. </year>
Reference-contexts: This choice of representation is quite unique and powerful. Unlike many systems, we deal with worth-oriented <ref> [13] </ref> environments where a goal is not black and white, but rather has a degree of achievement associated with it. We represent this in TAEMS by tracking a quantitative vector of task characteristics or criteria over which some utility preference may be expressed [18].
Reference: 14. <author> Milind Tambe. </author> <title> Agent architectures for flexible, practical teamwork. </title> <booktitle> In Proceedings of the Fourteenth National Conference on Artificial Intelligence, </booktitle> <address> Providence, </address> <month> July </month> <year> 1997. </year>
Reference-contexts: These five basic mechanisms formed a domain-independent set for basic agent teamwork. As such, it is interesting to compare them to Tambe's more recent work on flexible teamwork <ref> [14] </ref>, in turn based on Cohen & Levesque's work [8]. In particular, the five initial GPGP mechanisms do not separate the environment-centered coordination actions from actions oriented toward teamwork itself. Also, GPGP currently only represents joint intentions implicitly by communicating parts of one agent's local task structure to another agent.
Reference: 15. <author> Thomas Wagner, A. Garvey and V. Lesser. </author> <title> Complex Goal Criteria and Its Application in Design-to-Criteria Scheduling. </title> <booktitle> In Proceedings of the Fourteenth National Conference on Artificial Intelligence, </booktitle> <year> 1997. </year>
Reference-contexts: achievement in terms of measurable characteristics such as solution quality and time, (d) task relationships that indicate how basic actions or abstract task 3 achievement effect task characteristics (e.g., quality and, time) elsewhere in the task structure 6 language that we use to represent these task structures is called TAEMS <ref> [1, 4, 15] </ref>. This choice of representation is quite unique and powerful. Unlike many systems, we deal with worth-oriented [13] environments where a goal is not black and white, but rather has a degree of achievement associated with it. <p> As a result of using it in a number of applications, TAEMS has evolved considerably in representational power and in its range of applications. As TAEMS has evolved, we have moved beyond simple quality/time tradeoff reasoning to a multidimensional satisficing methodology <ref> [15] </ref>. Methods are no longer simply characterized in terms of expected quality and duration values but are characterized statistically via discrete probability distributions in three dimensions: quality, cost, and duration; and the work is extensible to multiple other dimensions as well. <p> The enhancement of multiple attribute dimensions, including uncertainty, is also important because the representation enables the multi-agent system designer to better characterize the desired system performance <ref> [15, 17] </ref>. This new performance characterization takes into account both hard and soft constraints on quality, cost and duration of the schedule of tasks intended to meet a high-level goal or commitment. Additionally, the amount of uncertainty that is tolerable in meeting these constraints can be specified [16].
Reference: 16. <author> Thomas Wagner, A. Garvey and V. Lesser. </author> <title> Leveraging Uncertainty in Design-to-Criteria Scheduling. </title> <note> UMass Computer Science Technical Report 1997-11, </note> <month> February </month> <year> 1997. </year>
Reference-contexts: The switch from expected values to discrete distributions enables reasoning about the certainty <ref> [16] </ref> of particular courses of action, perhaps performing contingency analysis [11], as well as the quality/cost/time tradeoffs. This more complete view is crucial in highly constrained situations (e.g., where deadlines are present). <p> This new performance characterization takes into account both hard and soft constraints on quality, cost and duration of the schedule of tasks intended to meet a high-level goal or commitment. Additionally, the amount of uncertainty that is tolerable in meeting these constraints can be specified <ref> [16] </ref>. In TAEMS, progress toward the problemsolving objective is expressed and tabulated in terms of quality. Tasks accumulate quality from their subtasks according to quality accumulation functions (qafs).
Reference: 17. <author> Thomas Wagner, A. Garvey and V. Lesser. </author> <title> Criteria Directed Task Scheduling. </title> <note> Accepted for publication in Journal of Approximate Processing (to appear 1998). </note>
Reference-contexts: The enhancement of multiple attribute dimensions, including uncertainty, is also important because the representation enables the multi-agent system designer to better characterize the desired system performance <ref> [15, 17] </ref>. This new performance characterization takes into account both hard and soft constraints on quality, cost and duration of the schedule of tasks intended to meet a high-level goal or commitment. Additionally, the amount of uncertainty that is tolerable in meeting these constraints can be specified [16].
Reference: 18. <author> Michael Wellman and J. Doyle. </author> <title> Modular utility representation for decision-theoretic planning. </title> <booktitle> In Proceedings of the First Internastional. Conference on Artificial Intelligence Planning Systems, </booktitle> <pages> pages 236242, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: We represent this in TAEMS by tracking a quantitative vector of task characteristics or criteria over which some utility preference may be expressed <ref> [18] </ref>. We also allow many task structures to be active at once, representing several objectives all of which must be achieved to some degree. The agent's task structure view may change over time due to uncertainty or a dynamically changing environment.
References-found: 18

