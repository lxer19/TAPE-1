URL: http://www.cs.toronto.edu/~dt/papers/cad95/cad95.ps.gz
Refering-URL: http://www.cs.toronto.edu/~dt/cad.html
Root-URL: http://www.cs.toronto.edu
Title: Dynamic NURBS Swung Surfaces for Physics-Based Shape Design  
Author: Hong Qin and Demetri Terzopoulos 
Keyword: CAGD, NURBS, NURBS Swinging, Deformable Models, Dynamics, Constraints, Finite Elements, Solid Rounding, Surface Blending, Scattered Data Fitting, Interactive Sculpting.  
Date: 27(2):111-127, 1995.  
Note: Published in Computer-Aided Design,  
Address: 10 King's College Road, Toronto, Ontario, M5S 1A4  
Affiliation: Department of Computer Science, University of Toronto,  
Abstract: We develop a dynamic, free-form surface model which is useful for representing a broad class of objects with symmetries and topological variability. The new model is based upon swung NURBS surfaces, and it inherits their desirable cross-sectional design properties. It melds these geometric features with the demonstrated conveniences of surface design within a physics-based framework. We demonstrate several applications of dynamic NURBS swung surfaces, including interactive sculpting through the imposition of forces and the adjustment of physical parameters such as mass, damping, and elasticity. Additional applications include surface design with geometric and physical constraints, by rounding solids, and through the fitting of unstructured data. We derive the equations of motion for the dynamic NURBS swung surface model using Lagrangian mechanics of an elastic surface and the finite element method. We also show that these surfaces are a special case of D-NURBS surfaces, a recently proposed physics-based generalization of standard geometric NURBS. Our free-form, rational model not only provides a systematic and unified approach for a variety of CAGD problems such as constraint-based optimization, variational design, automatic weight selection, shape approximation, etc., but it also supports interactive sculpting using physics-based manipulation tools. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> L. Piegl. </author> <title> On NURBS: A survey. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 11(1) </volume> <pages> 55-71, </pages> <month> Jan. </month> <year> 1991. </year>
Reference-contexts: 1 Introduction Among the surface representation schemes in CAGD, non-uniform rational B-splines (NURBS) have become an industry standard <ref> [1] </ref>. One of their most significant advantages is that they are a unified representation of both complex free-form shapes and standard analytic shapes [1, 2, 3]. NURBS objects are designed by adjusting control points and weights that are associated with NURBS surface patches. <p> 1 Introduction Among the surface representation schemes in CAGD, non-uniform rational B-splines (NURBS) have become an industry standard [1]. One of their most significant advantages is that they are a unified representation of both complex free-form shapes and standard analytic shapes <ref> [1, 2, 3] </ref>. NURBS objects are designed by adjusting control points and weights that are associated with NURBS surface patches. Many objects of interest, especially manufactured objects, exhibit symmetries. Often it is convenient to model symmetric objects through cross-sectional design by specifying profile curves [4]. <p> Often it is convenient to model symmetric objects through cross-sectional design by specifying profile curves [4]. Woodward [5] introduced the swinging operator by extending the spherical cross-product with a scaling factor, and applied it to generate surfaces with B-spline profile curves (see also [6]). Piegl <ref> [1] </ref> carried the swinging idea over to NURBS curves. He proposed NURBS swung surfaces, a special type of NURBS surfaces formed by swinging one planar NURBS profile curve along a second NURBS trajectory curve. The two generator curves may be smooth, or they may have discontinuities. <p> This allows us to derive equations of motion for the dynamic swung surface including mass, damping, and deformation energy distributions. Geometrically, a dynamic swung surface is generated from two planar kinematic NURBS profile curves through the swinging operation <ref> [1] </ref> (Fig 1). Let the two generator curves c 1 (u; a) and c 2 (v; b) be of the form (1). <p> Finally, we generated a wine glass shape using two curves with 7 and 5 control points and sculpted it into the more pleasing shape shown in Fig 4 (c). 7 Constrained D-NURBS Formulation It is known that a geometric NURBS swung surface is a NURBS surface <ref> [1] </ref>.
Reference: [2] <author> L. Piegl and W. Tiller. </author> <title> Curve and surface constructions using rational B-splines. </title> <booktitle> Computer-Aided Design, </booktitle> <volume> 19(9) </volume> <pages> 485-498, </pages> <year> 1987. </year>
Reference-contexts: 1 Introduction Among the surface representation schemes in CAGD, non-uniform rational B-splines (NURBS) have become an industry standard [1]. One of their most significant advantages is that they are a unified representation of both complex free-form shapes and standard analytic shapes <ref> [1, 2, 3] </ref>. NURBS objects are designed by adjusting control points and weights that are associated with NURBS surface patches. Many objects of interest, especially manufactured objects, exhibit symmetries. Often it is convenient to model symmetric objects through cross-sectional design by specifying profile curves [4].
Reference: [3] <author> W. Tiller. </author> <title> Rational B-splines for curve and surface representation. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 3(6) </volume> <pages> 61-69, </pages> <month> Sept. </month> <year> 1983. </year>
Reference-contexts: 1 Introduction Among the surface representation schemes in CAGD, non-uniform rational B-splines (NURBS) have become an industry standard [1]. One of their most significant advantages is that they are a unified representation of both complex free-form shapes and standard analytic shapes <ref> [1, 2, 3] </ref>. NURBS objects are designed by adjusting control points and weights that are associated with NURBS surface patches. Many objects of interest, especially manufactured objects, exhibit symmetries. Often it is convenient to model symmetric objects through cross-sectional design by specifying profile curves [4].
Reference: [4] <author> I.D. Faux and M.J. Pratt. </author> <title> Computational Geometry for Design and Manufacture. </title> <publisher> Ellis Horwood, </publisher> <address> Chichester,UK, </address> <year> 1979. </year>
Reference-contexts: NURBS objects are designed by adjusting control points and weights that are associated with NURBS surface patches. Many objects of interest, especially manufactured objects, exhibit symmetries. Often it is convenient to model symmetric objects through cross-sectional design by specifying profile curves <ref> [4] </ref>. Woodward [5] introduced the swinging operator by extending the spherical cross-product with a scaling factor, and applied it to generate surfaces with B-spline profile curves (see also [6]). Piegl [1] carried the swinging idea over to NURBS curves.
Reference: [5] <author> C. Woodward. </author> <title> Cross-sectional design of B-spline surfaces. </title> <journal> Computers and Graphics, </journal> <volume> 11(2) </volume> <pages> 193-201, </pages> <year> 1987. </year>
Reference-contexts: NURBS objects are designed by adjusting control points and weights that are associated with NURBS surface patches. Many objects of interest, especially manufactured objects, exhibit symmetries. Often it is convenient to model symmetric objects through cross-sectional design by specifying profile curves [4]. Woodward <ref> [5] </ref> introduced the swinging operator by extending the spherical cross-product with a scaling factor, and applied it to generate surfaces with B-spline profile curves (see also [6]). Piegl [1] carried the swinging idea over to NURBS curves.
Reference: [6] <author> E. Cobb. </author> <title> Design of Sculptured Surfaces Using the B-spline Representation. </title> <type> PhD thesis, </type> <institution> University of Utah, </institution> <year> 1984. </year>
Reference-contexts: Often it is convenient to model symmetric objects through cross-sectional design by specifying profile curves [4]. Woodward [5] introduced the swinging operator by extending the spherical cross-product with a scaling factor, and applied it to generate surfaces with B-spline profile curves (see also <ref> [6] </ref>). Piegl [1] carried the swinging idea over to NURBS curves. He proposed NURBS swung surfaces, a special type of NURBS surfaces formed by swinging one planar NURBS profile curve along a second NURBS trajectory curve. The two generator curves may be smooth, or they may have discontinuities.
Reference: [7] <author> J. Snyder and J. Kajiya. </author> <title> Generative modeling: A symbolic system for geometric modeling. </title> <journal> Computer Graphics, </journal> <volume> 26(2) </volume> <pages> 369-378, </pages> <year> 1992. </year>
Reference-contexts: The NURBS swung surface is efficient compared to a general NURBS surface, inasmuch as it can represent a broad class of shapes with essentially as few degrees of freedom as it takes to specify the two generator curves. Several geometric shape design systems, including the recent one in <ref> [7] </ref>, include some form of swinging (or sweeping) among their repertoire of techniques. In this paper, we develop a physics-based generalization of the geometric NURBS swung surface.
Reference: [8] <author> D. Terzopoulos, J. Platt, A. Barr, and K. Fleischer. </author> <title> Elastically deformable models. </title> <journal> Computer Graphics, </journal> <volume> 21(4) </volume> <pages> 205-214, </pages> <year> 1987. </year>
Reference-contexts: Unstructured shape constraints are especially problematic for cross-sectional design. Physics-based modeling techniques provide a means of overcoming these difficulties. It is possible to construct free-form surfaces with natural dynamic behavior governed by physical laws <ref> [8, 9, 10] </ref>. Ter-zopoulos and Fleischer [11] demonstrated simple interactive sculpting using viscoelastic and plastic models. Celniker and Gossard [12] developed an interesting prototype system for interactive free-form design based on this idea and the finite-element optimization of energy functionals. <p> Other energies are applicable, including the nonquadratic, curvature-based energies in <ref> [8, 16] </ref>). <p> The force f (u; v; t) represents the net effect of all applied forces. Typical force functions are spring forces, repulsion forces, gravitational forces, inflation forces, etc. <ref> [8] </ref>. For example, consider connecting a material point (u 0 ; v 0 ) of a dynamic swung surface to a point d 0 in space with an ideal Hookean spring of stiffness k.
Reference: [9] <author> J. Platt and A. Barr. </author> <title> Constraints methods for flexible models. </title> <journal> Computer Graphics, </journal> <volume> 22(4) </volume> <pages> 279-288, </pages> <year> 1988. </year>
Reference-contexts: Unstructured shape constraints are especially problematic for cross-sectional design. Physics-based modeling techniques provide a means of overcoming these difficulties. It is possible to construct free-form surfaces with natural dynamic behavior governed by physical laws <ref> [8, 9, 10] </ref>. Ter-zopoulos and Fleischer [11] demonstrated simple interactive sculpting using viscoelastic and plastic models. Celniker and Gossard [12] developed an interesting prototype system for interactive free-form design based on this idea and the finite-element optimization of energy functionals. <p> This approach increases the number of degrees of freedom, hence the computational cost, by adding unknowns i , known as Lagrange multipliers, which determine the magnitudes of the constraint forces. The augmented Lagrangian method [26] combines the Lagrange multipliers with the simpler penalty method <ref> [9] </ref>. The Baumgarte stabilization method [29] solves constrained equations of motion through linear feedback control (see also [10, 19]). These techniques are appropriate for the dynamic swung surfaces with constraints.
Reference: [10] <author> D. Metaxas and D. Terzopoulos. </author> <title> Dynamic deformation of solid primitives with constraints. </title> <journal> Computer Graphics, </journal> <volume> 26(2) </volume> <pages> 309-312, </pages> <year> 1992. </year>
Reference-contexts: Unstructured shape constraints are especially problematic for cross-sectional design. Physics-based modeling techniques provide a means of overcoming these difficulties. It is possible to construct free-form surfaces with natural dynamic behavior governed by physical laws <ref> [8, 9, 10] </ref>. Ter-zopoulos and Fleischer [11] demonstrated simple interactive sculpting using viscoelastic and plastic models. Celniker and Gossard [12] developed an interesting prototype system for interactive free-form design based on this idea and the finite-element optimization of energy functionals. <p> The augmented Lagrangian method [26] combines the Lagrange multipliers with the simpler penalty method [9]. The Baumgarte stabilization method [29] solves constrained equations of motion through linear feedback control (see also <ref> [10, 19] </ref>). These techniques are appropriate for the dynamic swung surfaces with constraints. Linear geometric constraints such as point, curve, and surface normal constraints can be easily incorporated into dynamic swung surface by reducing the matrices and vectors in (12) to a minimal unconstrained set of generalized coordinates.
Reference: [11] <author> D. Terzopoulos and K. Fleischer. </author> <title> Deformable models. </title> <journal> The Visual Computer, </journal> <volume> 4(6) </volume> <pages> 306-331, </pages> <year> 1988. </year>
Reference-contexts: Unstructured shape constraints are especially problematic for cross-sectional design. Physics-based modeling techniques provide a means of overcoming these difficulties. It is possible to construct free-form surfaces with natural dynamic behavior governed by physical laws [8, 9, 10]. Ter-zopoulos and Fleischer <ref> [11] </ref> demonstrated simple interactive sculpting using viscoelastic and plastic models. Celniker and Gossard [12] developed an interesting prototype system for interactive free-form design based on this idea and the finite-element optimization of energy functionals.
Reference: [12] <author> G. Celniker and D. Gossard. </author> <title> Deformable curve and surface finite-element for free-form shape design. </title> <journal> Computer Graphics, </journal> <volume> 25(4) </volume> <pages> 257-266, </pages> <year> 1991. </year>
Reference-contexts: Physics-based modeling techniques provide a means of overcoming these difficulties. It is possible to construct free-form surfaces with natural dynamic behavior governed by physical laws [8, 9, 10]. Ter-zopoulos and Fleischer [11] demonstrated simple interactive sculpting using viscoelastic and plastic models. Celniker and Gossard <ref> [12] </ref> developed an interesting prototype system for interactive free-form design based on this idea and the finite-element optimization of energy functionals. Bloor and Wilson [13] used similar energies optimized through numerical methods and they employed B-splines for this purpose. <p> To define an elastic potential energy, we adopt the thin-plate under tension energy model which was proposed in [18] and also used in <ref> [12, 14, 17, 19] </ref> U = 2 ff 1;1 @u @u @s &gt; @s + fi 1;1 @u 2 @u 2 @ 2 s &gt; @ 2 s + fi 2;2 @v 2 @v 2 du dv: (11) The ff i;j (u; v) and fi i;j (u; v) are elasticity functions
Reference: [13] <author> M.I.G. Bloor and M.J. Wilson. </author> <title> Representing PDE surfaces in terms of B-splines. </title> <booktitle> Computer-Aided Design, </booktitle> <volume> 22(6) </volume> <pages> 324-331, </pages> <year> 1990. </year>
Reference-contexts: Ter-zopoulos and Fleischer [11] demonstrated simple interactive sculpting using viscoelastic and plastic models. Celniker and Gossard [12] developed an interesting prototype system for interactive free-form design based on this idea and the finite-element optimization of energy functionals. Bloor and Wilson <ref> [13] </ref> used similar energies optimized through numerical methods and they employed B-splines for this purpose. Subsequently, Welch and Witkin [14] extended the approach to trimmed hierarchical B-splines. Thingvold and Cohen [15] proposed a hybrid deformable B-spline whose control points are mass points connected by elastic springs and hinges.
Reference: [14] <author> W. Welch and A. Witkin. </author> <title> Variational surface modeling. </title> <journal> Computer Graphics, </journal> <volume> 26(2) </volume> <pages> 157-166, </pages> <year> 1992. </year>
Reference-contexts: Celniker and Gossard [12] developed an interesting prototype system for interactive free-form design based on this idea and the finite-element optimization of energy functionals. Bloor and Wilson [13] used similar energies optimized through numerical methods and they employed B-splines for this purpose. Subsequently, Welch and Witkin <ref> [14] </ref> extended the approach to trimmed hierarchical B-splines. Thingvold and Cohen [15] proposed a hybrid deformable B-spline whose control points are mass points connected by elastic springs and hinges. Moreton and Sequin [16] interpolated a minimum energy curve network with quintic Bezier patches by minimizing the variation of curvature. <p> To define an elastic potential energy, we adopt the thin-plate under tension energy model which was proposed in [18] and also used in <ref> [12, 14, 17, 19] </ref> U = 2 ff 1;1 @u @u @s &gt; @s + fi 1;1 @u 2 @u 2 @ 2 s &gt; @ 2 s + fi 2;2 @v 2 @v 2 du dv: (11) The ff i;j (u; v) and fi i;j (u; v) are elasticity functions
Reference: [15] <author> J.A. Thingvold and E. Cohen. </author> <title> Physical modeling with B-spline surfaces for interactive design and animation. </title> <journal> Computer Graphics, </journal> <volume> 24(2) </volume> <pages> 129-137, </pages> <year> 1990. </year> <booktitle> Proceedings, 1990 Symposium on Interactive 3D Graphics. </booktitle>
Reference-contexts: Bloor and Wilson [13] used similar energies optimized through numerical methods and they employed B-splines for this purpose. Subsequently, Welch and Witkin [14] extended the approach to trimmed hierarchical B-splines. Thingvold and Cohen <ref> [15] </ref> proposed a hybrid deformable B-spline whose control points are mass points connected by elastic springs and hinges. Moreton and Sequin [16] interpolated a minimum energy curve network with quintic Bezier patches by minimizing the variation of curvature.
Reference: [16] <author> H.P. Moreton and C.H. Sequin. </author> <title> Functional optimization for fair surface design. </title> <journal> Computer Graphics, </journal> <volume> 26(2) </volume> <pages> 167-176, </pages> <year> 1992. </year>
Reference-contexts: Subsequently, Welch and Witkin [14] extended the approach to trimmed hierarchical B-splines. Thingvold and Cohen [15] proposed a hybrid deformable B-spline whose control points are mass points connected by elastic springs and hinges. Moreton and Sequin <ref> [16] </ref> interpolated a minimum energy curve network with quintic Bezier patches by minimizing the variation of curvature. Halstead et al. [17] implemented smooth interpolation with Catmull-Clark surfaces using a thin-plate energy functional [18]. <p> Other energies are applicable, including the nonquadratic, curvature-based energies in <ref> [8, 16] </ref>). <p> One solution is to use a more complex deformation energy that does not favor flat surfaces as Published in Computer-Aided Design, 27 (2):111-127, 1995. 11 in <ref> [16] </ref>.
Reference: [17] <author> M. Halstead, M. Kass, and T. DeRose. </author> <title> Efficient, fair interpolation using Catmull-Clark surfaces. </title> <booktitle> In Computer Graphics Proceedings, Annual Conference Series, Proc. ACM Siggraph'93 (Anaheim, </booktitle> <address> CA, </address> <month> Aug., </month> <year> 1993), </year> <pages> pages 35-44, </pages> <year> 1993. </year>
Reference-contexts: Thingvold and Cohen [15] proposed a hybrid deformable B-spline whose control points are mass points connected by elastic springs and hinges. Moreton and Sequin [16] interpolated a minimum energy curve network with quintic Bezier patches by minimizing the variation of curvature. Halstead et al. <ref> [17] </ref> implemented smooth interpolation with Catmull-Clark surfaces using a thin-plate energy functional [18]. The dynamic NURBS swung surfaces proposed in the present paper were inspired by D-NURBS, our physics-based generalization of standard geometric NURBS [19]. <p> To define an elastic potential energy, we adopt the thin-plate under tension energy model which was proposed in [18] and also used in <ref> [12, 14, 17, 19] </ref> U = 2 ff 1;1 @u @u @s &gt; @s + fi 1;1 @u 2 @u 2 @ 2 s &gt; @ 2 s + fi 2;2 @v 2 @v 2 du dv: (11) The ff i;j (u; v) and fi i;j (u; v) are elasticity functions
Reference: [18] <author> D. Terzopoulos. </author> <title> Regularization of inverse visual problems involving discontinuities. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 8(4) </volume> <pages> 413-424, </pages> <year> 1986. </year>
Reference-contexts: Moreton and Sequin [16] interpolated a minimum energy curve network with quintic Bezier patches by minimizing the variation of curvature. Halstead et al. [17] implemented smooth interpolation with Catmull-Clark surfaces using a thin-plate energy functional <ref> [18] </ref>. The dynamic NURBS swung surfaces proposed in the present paper were inspired by D-NURBS, our physics-based generalization of standard geometric NURBS [19]. Like D-NURBS, dynamic NURBS swung surfaces have continuous mass and damping distributions, as well as a deformation energy. <p> To define an elastic potential energy, we adopt the thin-plate under tension energy model which was proposed in <ref> [18] </ref> and also used in [12, 14, 17, 19] U = 2 ff 1;1 @u @u @s &gt; @s + fi 1;1 @u 2 @u 2 @ 2 s &gt; @ 2 s + fi 2;2 @v 2 @v 2 du dv: (11) The ff i;j (u; v) and fi i;j
Reference: [19] <author> D. Terzopoulos and H. Qin. </author> <title> Dynamic NURBS with geometric constraints for interactive sculpting. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 13(2) </volume> <pages> 103-136, </pages> <year> 1994. </year> <booktitle> Published in Computer-Aided Design, </booktitle> 27(2):111-127, 1995. <volume> 20 </volume>
Reference-contexts: Halstead et al. [17] implemented smooth interpolation with Catmull-Clark surfaces using a thin-plate energy functional [18]. The dynamic NURBS swung surfaces proposed in the present paper were inspired by D-NURBS, our physics-based generalization of standard geometric NURBS <ref> [19] </ref>. Like D-NURBS, dynamic NURBS swung surfaces have continuous mass and damping distributions, as well as a deformation energy. With proper choice of physical parameters, they behave like physical surfaces. <p> Section 6 presents applications of dynamic NURBS swung surfaces to interactive sculpting, scattered data fitting, and rounding/blending and discusses the results. In Section 7 we show that dynamic NURBS swung surfaces are a special case of D-NURBS surfaces <ref> [19] </ref> that have been subjected to a dimensionality-reducing nonlinear constraint. Section 8 concludes the paper. 2 Kinematic NURBS Curve A kinematic NURBS curve extends the geometric NURBS definition by explicitly incorporating time. <p> Furthermore, we can express the curve as Published in Computer-Aided Design, 27 (2):111-127, 1995. 5 the product of the Jacobian matrix and the generalized coordinate vector: c (u; p) = Jp: (4) The proof of (4) can be found in <ref> [19] </ref>. 3 Dynamic NURBS Swung Surface In this section, we formulate the underlying geometry of the dynamic swung surfaces and derive the Jacobian and basis function matrices that lead to succinct expressions analogous to (2) and (4) for the velocity and position functions of the surface, respectively. <p> To define an elastic potential energy, we adopt the thin-plate under tension energy model which was proposed in [18] and also used in <ref> [12, 14, 17, 19] </ref> U = 2 ff 1;1 @u @u @s &gt; @s + fi 1;1 @u 2 @u 2 @ 2 s &gt; @ 2 s + fi 2;2 @v 2 @v 2 du dv: (11) The ff i;j (u; v) and fi i;j (u; v) are elasticity functions <p> The derivation of the equations of motion (12) proceeds in the same manner as for D-NURBS (see <ref> [19] </ref> for the details). 4 Numerical Simulation The evolution of p, determined by (12) with time-varying matrices, cannot be solved analytically in general. Instead, we pursue an efficient numerical implementation using finite-element techniques [23]. <p> The augmented Lagrangian method [26] combines the Lagrange multipliers with the simpler penalty method [9]. The Baumgarte stabilization method [29] solves constrained equations of motion through linear feedback control (see also <ref> [10, 19] </ref>). These techniques are appropriate for the dynamic swung surfaces with constraints. Linear geometric constraints such as point, curve, and surface normal constraints can be easily incorporated into dynamic swung surface by reducing the matrices and vectors in (12) to a minimal unconstrained set of generalized coordinates. <p> If the model is confined as a surface of revolution, the degrees of freedom associated with the second profiles must be constrained geometrically to admit a circle. Linear constraints can be implemented by applying the same numerical solver on an unconstrained subset of p. See <ref> [19] </ref> for a detailed discussion on constraints in the context of D-NURBS. Dynamic surfaces constructed from NURBS geometry have an interesting idiosyncrasy due to the weights. <p> Experiments show that this approximation approach leads to satisfactory results because the mapping is recomputed at each simulation step. More importantly, we reduce the complexity of optimal matching from O (mn) for a general m by n D-NURBS surface <ref> [19] </ref> to O (m + n). For large m and n, the dynamic simulation is speeded up significantly. Other techniques such as nonlinear optimization are applicable to finding the closest point. <p> In this section, we show that dynamic NURBS swung surfaces are, analogously, D-NURBS surfaces <ref> [19] </ref> that have been subjected to a Published in Computer-Aided Design, 27 (2):111-127, 1995. 15 dimensionality-reducing nonlinear constraint. 7.1 D-NURBS Surface A D-NURBS surface generalizes the geometric NURBS surface: s (u; v; t) = i=0 j=0 q i;j (t)w i;j (t)B i;k (u)B j;l (v) i=0 j=0 w i;j (t)B i;k <p> See <ref> [19] </ref> for the details of the D-NURBS formulation. <p> Like the D-NURBS predecessor <ref> [19] </ref>, the new model is a physics-based generalization of its geometric counterpart. We derived it systematically through La-grangian mechanics and implemented interactive software using concepts from finite element analysis and iterative numerical methods.
Reference: [20] <author> G. Farin. </author> <title> Curves and Surfaces for Computer aided Geometric Design: A Practical Guide. </title> <publisher> Academic Press, </publisher> <address> second edition, </address> <year> 1990. </year>
Reference-contexts: The kinematic curve is a function of both the parametric variable u and time t: c (u; t) = i=0 p i (t)w i (t)B i;k (u) i=0 w i (t)B i;k (u) where the B i;k (u) are the usual recursively defined piecewise rational basis functions <ref> [20, 21] </ref>, p i (t) are the n + 1 control points, and w i (t) are associated non-negative weights.
Reference: [21] <author> M.E. Mortenson. </author> <title> Geometric Modeling. </title> <publisher> John Wiley and Sons, </publisher> <year> 1985. </year>
Reference-contexts: The kinematic curve is a function of both the parametric variable u and time t: c (u; t) = i=0 p i (t)w i (t)B i;k (u) i=0 w i (t)B i;k (u) where the B i;k (u) are the usual recursively defined piecewise rational basis functions <ref> [20, 21] </ref>, p i (t) are the n + 1 control points, and w i (t) are associated non-negative weights.
Reference: [22] <author> B.R. Gossick. </author> <title> Hamilton's Principle and Physical Systems. </title> <publisher> Academic Press, </publisher> <address> New York and London, </address> <year> 1967. </year>
Reference-contexts: Hp; (9) Published in Computer-Aided Design, 27 (2):111-127, 1995. 7 where H = (L + 2H 4 )=3 (10) is the 3 fi M basis function matrix. 3.3 Equations of Motion The equations of motion of our dynamic NURBS swung surface are derived from the work-energy version of Lagrangian dynamics <ref> [22] </ref>. To proceed with the Lagrangian formulation, we express the kinetic energy due to a prescribed mass distribution function (u; v) over the parametric domain of the surface and a Raleigh dissipation energy due to a damping density function fl (u; v). <p> M, D and K are M fi M matrices. The generalized force, obtained through the principle of virtual work <ref> [22] </ref> done by the applied force distribution f (u; v; t) is Z Z Because of the geometric nonlinearity, generalized inertial forces g p (p) = L &gt; _ L _ p du dv are also associated with the models.
Reference: [23] <author> H. Kardestuncer. </author> <title> Finite Element Handbook. </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1987. </year>
Reference-contexts: Instead, we pursue an efficient numerical implementation using finite-element techniques <ref> [23] </ref>. Published in Computer-Aided Design, 27 (2):111-127, 1995. 8 Standard finite element codes explicitly assemble the global matrices that appear in the discrete equations of motion [23]. We use an iterative matrix solver to avoid the cost of assembling the global M, D, and K. <p> Instead, we pursue an efficient numerical implementation using finite-element techniques <ref> [23] </ref>. Published in Computer-Aided Design, 27 (2):111-127, 1995. 8 Standard finite element codes explicitly assemble the global matrices that appear in the discrete equations of motion [23]. We use an iterative matrix solver to avoid the cost of assembling the global M, D, and K.
Reference: [24] <author> W. Press, B. Flanney, S. Teukolsky, and W. Verttering. </author> <title> Numerical Recipes: </title> <booktitle> The Art of Scientific Computing. </booktitle> <publisher> Cambridge University Press, </publisher> <address> Cambridge, </address> <year> 1986. </year>
Reference-contexts: elasticity ff i;j (u; v), fi i;j (u; v) density functions, which may be represented as analytic functions or as parametric arrays of sample values. 4.3 Calculation of Element Matrices The integral expressions for the mass, damping, and stiffness matrices associated with each element are evaluated numerically using Gaussian quadrature <ref> [24] </ref>. We shall explain the computation of the element mass matrix; the computation of the damping and stiffness matrices follow suit. <p> Given integers N g and N h , we can find Gauss weights a g , b h and abscissas u g , v h in the two parametric directions such that m ij can be approximated by <ref> [24] </ref> m ij g=1 h=1 Published in Computer-Aided Design, 27 (2):111-127, 1995. 9 We apply the de Boor algorithm [25] to evaluate f ij (u g ; v h ). <p> The matrices and forces are evaluated at time t. We employ the conjugate gradient method to obtain an iterative solution <ref> [24] </ref>. To achieve interactive simulation rates, we limit the number of conjugate gradient iterations per time step to 10. We have observed that 2 iterations typically suffice to converge to a residual of less than 10 3 .
Reference: [25] <author> C. de Boor. </author> <title> On calculating with B-Splines. </title> <journal> Journal of Approximation Theory, </journal> <volume> 6(1) </volume> <pages> 50-62, </pages> <year> 1972. </year>
Reference-contexts: , we can find Gauss weights a g , b h and abscissas u g , v h in the two parametric directions such that m ij can be approximated by [24] m ij g=1 h=1 Published in Computer-Aided Design, 27 (2):111-127, 1995. 9 We apply the de Boor algorithm <ref> [25] </ref> to evaluate f ij (u g ; v h ). In general, Gaussian quadrature evaluates the integral exactly with N weights and abscissas for polynomials of degree 2N 1 or less. In our system we choose N g and N h to be integers between 4 and 7.
Reference: [26] <author> M. Minoux. </author> <title> Mathematical Programming. </title> <publisher> Wiley, </publisher> <address> New York, </address> <year> 1986. </year>
Reference-contexts: We can control either or both using a mouse to obtain an interactive spring force. 5.2 Constraints In practical applications, design requirements may be posed as a set of physical parameters or as geometric constraints. Nonlinear constraints can be enforced through Lagrange multiplier techniques <ref> [26, 27, 28] </ref>. This approach increases the number of degrees of freedom, hence the computational cost, by adding unknowns i , known as Lagrange multipliers, which determine the magnitudes of the constraint forces. The augmented Lagrangian method [26] combines the Lagrange multipliers with the simpler penalty method [9]. <p> Nonlinear constraints can be enforced through Lagrange multiplier techniques [26, 27, 28]. This approach increases the number of degrees of freedom, hence the computational cost, by adding unknowns i , known as Lagrange multipliers, which determine the magnitudes of the constraint forces. The augmented Lagrangian method <ref> [26] </ref> combines the Lagrange multipliers with the simpler penalty method [9]. The Baumgarte stabilization method [29] solves constrained equations of motion through linear feedback control (see also [10, 19]). These techniques are appropriate for the dynamic swung surfaces with constraints. <p> The inclusion of an elastic energy in our dynamic surfaces makes them applicable to such problems. The data interpolation problem is amenable to common constraint techniques <ref> [26] </ref>. Approximation can be achieved by physically coupling the dynamic NURBS swung surface to the data through Hookean spring forces (17).
Reference: [27] <author> G. Strang. </author> <title> Introduction to Applied Mathematics. </title> <publisher> Wellesley-Cambridge Press, </publisher> <address> MA, </address> <year> 1986. </year>
Reference-contexts: We can control either or both using a mouse to obtain an interactive spring force. 5.2 Constraints In practical applications, design requirements may be posed as a set of physical parameters or as geometric constraints. Nonlinear constraints can be enforced through Lagrange multiplier techniques <ref> [26, 27, 28] </ref>. This approach increases the number of degrees of freedom, hence the computational cost, by adding unknowns i , known as Lagrange multipliers, which determine the magnitudes of the constraint forces. The augmented Lagrangian method [26] combines the Lagrange multipliers with the simpler penalty method [9].
Reference: [28] <author> J. Platt. </author> <title> A generalization of dynamic constraints. CVGIP: Graphical Models and Image Processing, </title> <booktitle> 54(6) </booktitle> <pages> 516-525, </pages> <year> 1992. </year>
Reference-contexts: We can control either or both using a mouse to obtain an interactive spring force. 5.2 Constraints In practical applications, design requirements may be posed as a set of physical parameters or as geometric constraints. Nonlinear constraints can be enforced through Lagrange multiplier techniques <ref> [26, 27, 28] </ref>. This approach increases the number of degrees of freedom, hence the computational cost, by adding unknowns i , known as Lagrange multipliers, which determine the magnitudes of the constraint forces. The augmented Lagrangian method [26] combines the Lagrange multipliers with the simpler penalty method [9].
Reference: [29] <author> J. Baumgarte. </author> <title> Stabilization of constraints and integrals of motion in dynamical systems. </title> <journal> Comp. Meth. in Appl. Mech. and Eng., </journal> <volume> 1 </volume> <pages> 1-16, </pages> <year> 1972. </year>
Reference-contexts: This approach increases the number of degrees of freedom, hence the computational cost, by adding unknowns i , known as Lagrange multipliers, which determine the magnitudes of the constraint forces. The augmented Lagrangian method [26] combines the Lagrange multipliers with the simpler penalty method [9]. The Baumgarte stabilization method <ref> [29] </ref> solves constrained equations of motion through linear feedback control (see also [10, 19]). These techniques are appropriate for the dynamic swung surfaces with constraints.

References-found: 29

