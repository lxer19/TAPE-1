URL: http://www.cs.purdue.edu/homes/palsberg/paper/toplas95-pxl.ps.gz
Refering-URL: http://www.cs.purdue.edu/homes/palsberg/publications.html
Root-URL: http://www.cs.purdue.edu
Title: Efficient Implementation of Adaptive Software  
Author: JENS PALSBERG, CUN XIAO, and KARL LIEBERHERR 
Keyword: Categories and Subject Descriptors: D.2.m [Software Engineering]: Miscellaneous|reusable software; D.3.2 [Programming Languages]: Language Classifications|object-oriented languages; D.3.4 [Programming Languages]: Processors|compilers General Terms: Languages Additional Key Words and Phrases: Adaptive software, correctness proof, object traversal  
Affiliation: Northeastern University  
Abstract: Adaptive programs compute with objects, just like object-oriented programs. Each task to be accomplished is specified by a so-called propagation pattern which traverses the receiver object. The object traversal is a recursive descent via the instance variables where information is collected or propagated along the way. A propagation pattern consists of (1) a name for the task, (2) a succinct specification of the parts of the receiver object that should be traversed, and (3) code fragments to be executed when specific object types are encountered. The propagation patterns need to be complemented by a class graph which defines the detailed object structure. The separation of structure and behavior yields a degree of flexibility and understandability not present in traditional object-oriented languages. For example, the class graph can be changed without changing the adaptive program at all. We present an efficient implementation of adaptive programs. Given an adaptive program and a class graph, we generate an efficient object-oriented program, for example, in C ++ . Moreover, we prove the correctness of the core of this translation. A key assumption in the theorem is that the traversal specifications are consistent with the class graph. We prove the soundness of a proof system for conservatively checking consistency, and we show how to implement it efficiently. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Abiteboul, S. and Bonner, A. </author> <year> 1991. </year> <title> Objects and views. </title> <booktitle> In Proceedings of ACM SIGMOD International Conference on management of Data, </booktitle> <editor> J. Clifford and R. King, Eds. </editor> <publisher> ACM Press, </publisher> <address> New York, </address> <pages> 238-247. </pages>
Reference: <author> Bergstein, P. </author> <year> 1991. </year> <title> Object-preserving class transformations. </title> <booktitle> In Proceedings OOPSLA'91, ACM SIGPLAN 6th Annual Conference on Object-Oriented Programming Systems, Languages and Applications. ACM, </booktitle> <address> New York, </address> <pages> 299-313. </pages>
Reference: <author> Booch, G. </author> <year> 1994. </year> <title> Design an application framework. </title> <journal> Dr. Dobbs J. </journal> <volume> 19, 2 (Feb.), </volume> <pages> 24-32. </pages>
Reference: <author> Booch, G. </author> <year> 1990. </year> <title> The design of the C ++ Booch components. </title> <booktitle> In Object-Oriented Programming Systems, Languages and Applications Conference. </booktitle> <publisher> ACM Press, </publisher> <address> New York, </address> <pages> 1-11. </pages>
Reference: <author> Ceri, S., Tanaka, K., and Tsur, S., (Eds.) </author> <year> 1993. </year> <title> Deductive and Object-Oriented Databases. </title> <booktitle> Lecture Notes in Computer Science, </booktitle> <volume> vol. 760. </volume> <publisher> Springer-Verlag, </publisher> <address> Berlin. </address> <note> 28 Jens Palsberg et al. </note>
Reference: <author> Coburn, N. and Weddell, G. E. </author> <year> 1991. </year> <title> Path constraints for graph-based data models: Towards a unified theory of typing constraints, equations, and functional dependencies. </title> <booktitle> In 2nd International Conference, </booktitle> <editor> DOOD'91, C. Delobel, M. Kifer, and Y. Masunaga, Eds. </editor> <publisher> Springer-Verlag, Berlin, </publisher> <pages> 313-331. </pages>
Reference: <author> Dayal, U. </author> <year> 1989. </year> <title> Queries and views in an object-oriented data model. </title> <booktitle> In Proceedings of the 2nd International Workshop on Database Programming Languages, </booktitle> <editor> R. Hull, R. Morrison, and D. Stemple, Eds. </editor> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, Calif., </address> <note> 80-102. </note> <author> den Bussche, J. V. and Vossen, G. </author> <year> 1993. </year> <title> An extension of path expressions to simplify navigation in object-oriented queries. </title> <booktitle> In Proceedings Deductive and Object-Oriented Databases. Lecture Notes in Computer Science, </booktitle> <volume> vol. 760. </volume> <publisher> Springer-Verlag, Berlin, </publisher> <pages> 267-282. </pages>
Reference: <author> Ellis, M. A. and Stroustrup, B. </author> <year> 1990. </year> <title> The Annotated C ++ Reference Manual. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass. </address>
Reference: <author> Gamma, E., Helm, R., Johnson, R., and Vlissides, J. </author> <year> 1995. </year> <title> Design Patterns: Elements of Reusable Object-Oriented Software. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass. </address>
Reference: <author> Gibbs, S., Tsichritzis, D., Casais, E., Nierstrasz, O., and Pintado, X. </author> <year> 1990. </year> <title> Class management for software communities. </title> <journal> Commun. ACM 33, </journal> <volume> 9 (Sept.), </volume> <pages> 90-103. </pages>
Reference: <author> Goldberg, A. and Robson, D. </author> <year> 1983. </year> <title> Smalltalk-80|The Language and its Implementation. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass. </address>
Reference: <author> Goldman, N. M. </author> <year> 1989. </year> <title> Code walking and recursive descent: A generic approach. </title> <booktitle> In Proceedings 2nd CLOS Users and Implementors Workshop. </booktitle> <publisher> ACM Press, </publisher> <address> New York. </address>
Reference: <author> Harrison, W. and Ossher, H. </author> <year> 1991. </year> <title> Structure-bound messages: Separating navigation from processing. </title> <type> Manuscript. </type> <institution> IBM T. J. Watson Research Center. </institution>
Reference: <author> Keszenheimer, L. </author> <year> 1993. </year> <title> Specifying and adapting object behavior during system evolution. </title> <booktitle> In Conference on Software Maintenance. </booktitle> <publisher> IEEE Press, </publisher> <address> New York, </address> <pages> 254-261. </pages>
Reference: <author> Kiczales, G. and Lamping, J. </author> <year> 1992. </year> <title> Issues in the design and documentation of class libraries. </title> <booktitle> In Proceedings OOPSLA'92, ACM SIGPLAN 7th Annual Conference on Object-Oriented Programming Systems, Languages and Applications. ACM, </booktitle> <address> New York, </address> <pages> 435-451. </pages>
Reference: <author> Kifer, M., Kim, W., and Sagiv, Y. </author> <year> 1992. </year> <title> Querying object-oriented databases. </title> <booktitle> In Proceedings of ACM/SIGMOD Annual Conference on Management of Data, </booktitle> <editor> M. Stonebraker, Ed. </editor> <publisher> ACM, </publisher> <address> New York, </address> <pages> 393-402. </pages>
Reference: <author> Lamping, J. and Abadi, M. </author> <year> 1994. </year> <title> Methods as assertions. </title> <booktitle> In European Conference on Object-Oriented Programming, </booktitle> <editor> R. Pareschi and M. Tokoro, Eds. </editor> <booktitle> Lecture Notes in Computer Science, </booktitle> <volume> vol. 821. </volume> <publisher> Springer-Verlag, Berlin, </publisher> <pages> 60-80. </pages>
Reference: <author> Lieberherr, K. J. </author> <year> 1995. </year> <title> The Art of Growing Adaptive Object-Oriented Software. </title> <publisher> PWS Publishing Company, </publisher> <address> Boston. </address>
Reference: <author> Lieberherr, K. J. </author> <year> 1992. </year> <title> Component enhancement: An adaptive reusability mechanism for groups of collaborating classes. </title> <booktitle> In Information Processing '92, 12th World Computer Congress, </booktitle> <editor> J. van Leeuwen, Ed. </editor> <publisher> Elsevier, </publisher> <address> New York, </address> <pages> 179-185. </pages>
Reference: <author> Lieberherr, K. J. and Holland, I. </author> <year> 1989. </year> <title> Assuring good style for object-oriented programs. </title> <journal> IEEE Softw., </journal> <pages> 38-48. </pages>
Reference: <author> Lieberherr, K. J. and Xiao, C. </author> <year> 1993a. </year> <title> Minimizing dependency on class structures with adaptive programs. </title> <booktitle> In International Symposium on Object Technologies for Advanced Software, </booktitle> <editor> S. Nishio and A. Yonezawa, Eds. </editor> <booktitle> Lecture Notes in Computer Science, </booktitle> <volume> vol. 742. </volume> <publisher> Springer-Verlag, Berlin, </publisher> <pages> 424-441. </pages>
Reference: <author> Lieberherr, K. J. and Xiao, C. </author> <year> 1993b. </year> <title> Object-oriented software evolution. </title> <journal> IEEE Trans. Softw. Eng. </journal> <volume> 19, 4 (Apr.), </volume> <pages> 313-343. </pages>
Reference: <author> Lieberherr, K. J., H ursch, W., Silva-Lepe, I., and Xiao, C. </author> <year> 1992. </year> <title> Experience with a graph-based propagation pattern programming tool. </title> <booktitle> In International Workshop on CASE, Forte, </booktitle> <editor> G. et al., Eds. </editor> <publisher> IEEE Computer Society, </publisher> <address> Washington, D.C., </address> <pages> 114-119. </pages>
Reference: <author> Lieberherr, K. J., Silva-Lepe, I., and Xiao, C. </author> <year> 1994. </year> <title> Adaptive object-oriented programming using graph-based customization. </title> <journal> Commun. ACM 37, </journal> <volume> 5 (May), </volume> <pages> 94-101. </pages>
Reference: <author> Markowitz, V. M. and Shoshani, A. </author> <year> 1993. </year> <title> Object queries over relational databases: Language, implementation, and application. </title> <booktitle> In Proceedings 9th International Conference on Data Engineering. </booktitle> <publisher> IEEE Press, </publisher> <address> New York, </address> <month> 71-80. </month> <title> Efficient Implementation of Adaptive Software 29 Markowitz, </title> <editor> V. M. and Shoshani, A. </editor> <year> 1989. </year> <title> Abbreviated query interpretation in entity-relationship oriented databases. </title> <institution> Lawrence Berkeley Lab., Berkeley, Calif.. </institution>
Reference: <author> Meyer, B. </author> <year> 1988. </year> <title> Object-Oriented Software Construction. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, N.J. </address>
Reference: <author> Palsberg, J. and Schwartzbach, M. I. </author> <year> 1994. </year> <title> Object-Oriented Type Systems. </title> <publisher> John Wiley & Sons, </publisher> <address> New York. </address>
Reference: <author> Rumbaugh, J. </author> <year> 1988. </year> <title> Controlling propagation of operations using attributes on relations. </title> <booktitle> In Object-Oriented Programming Systems, Languages and Applications Conference. </booktitle> <publisher> ACM Press, </publisher> <address> New York, </address> <pages> 285-297. </pages>
Reference: <author> Steele, G. L. </author> <year> 1990. </year> <title> Common Lisp: The Language, 2nd ed. </title> <publisher> Digital Press, </publisher> <address> Burlington, Mass. </address>
Reference: <author> Waite, W. and Goos, G. </author> <year> 1984. </year> <title> Compiler Construction. </title> <publisher> Springer-Verlag, </publisher> <address> Berlin. </address>
Reference: <author> Wilde, N. and Huitt, R. </author> <year> 1992. </year> <title> Maintenance support for object-oriented programs. </title> <journal> IEEE Trans. on Softw. Eng. </journal> <volume> 18, </volume> <month> 12 (Dec.), </month> <pages> 1038-1044. </pages>
Reference: <author> Wilde, N. and Huitt, R. </author> <year> 1991. </year> <title> Maintenance support for object-oriented programs. </title> <booktitle> In Conference on Software Maintenance. </booktitle> <publisher> IEEE Press, </publisher> <address> New York, </address> <pages> 162-170. </pages>
Reference: <author> Wilde, N., Matthews, P., and Huitt, R. </author> <year> 1993. </year> <title> Maintaining object-oriented software. </title> <journal> IEEE Softw., </journal> <pages> 75-80. </pages>
Reference: <author> Wile, D. S. </author> <year> 1986. </year> <title> Organizing programming knowledge into syntax-directed experts. </title> <booktitle> In Proceedings International Workshop on Advanced Programming Environments. Lecture Notes in Computer Science, </booktitle> <volume> vol. 244. </volume> <publisher> Springer-Verlag, Berlin, </publisher> <pages> 551-565. </pages>
Reference: <author> Wile, D. S. </author> <year> 1983. </year> <title> Program developments: Formal explanations of implementations. </title> <journal> Commun. ACM 26, </journal> <volume> 11 (Nov.), </volume> <pages> 902-911. </pages>
Reference: <author> Wile, D. S. and Balzer, R. M. </author> <year> 1994. </year> <title> Architecture-based compilation. </title> <type> Manuscript, </type> <note> sponsored by ARPA. Received June 1994; revised November 1994 and January 1995; accepted January 1995 </note>
References-found: 36

