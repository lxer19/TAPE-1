URL: ftp://gaia.cs.umass.edu/pub/Gao98:BroadcastTR.ps.gz
Refering-URL: http://www-net.cs.umass.edu/papers/papers.html
Root-URL: 
Email: gao@cs.smith.edu fkurose, towsleyg@cs.umass.edu  
Title: Efficient Schemes for Broadcasting Popular Videos  
Author: Lixin Gao Jim Kurose Don Towsley 
Address: Northampton, Mass. 01060, USA Amherst, Mass. 01003, USA  
Affiliation: Department of Computer Science Department of Computer Science Smith College University of Massachusetts  
Abstract: We provide a formal framework for studying broadcasting schemes and design a family of schemes for broadcasting popular videos, called Greedy Disk-conserving Broadcasting (GDB) scheme. We analyze the resource requirements for GDB, i.e., the number of server broadcast channels, the client storage space, and the client I/O bandwidth required by GDB. The analysis shows that GDB exhibits a tradeoff between any two of the three resources. We compare our scheme with a recently proposed broadcasting scheme, Skyscraper Broadcasting (SB). With GDB, we can reduce the client storage space by as much as 50% or the number of server channels by as much as 30% at the cost of small additional client I/O bandwidth. If we require the client I/O bandwidth of GDB to be identical to that of SB, GDB needs only 70% of the client storage space required by SB or one less server channel than SB does. In addition, we show that with small client I/O bandwidth, the resource requirement of GDB is close to the minimum achievable by any disk-conserving broadcasting scheme. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C.C. Aggarwal and J.L. Wolf and P.S. Yu. </author> <title> A Permutation-Based Pyramid Broadcasting Scheme for Video-on-Demand Systems. </title> <booktitle> Proc. of the IEEE Int'l Conf. on Multimedia Systems. </booktitle> <month> June </month> <year> 1996. </year>
Reference-contexts: The drawback of this scheme is that a client needs to have sufficient disk space to store more than 70% of one video file. To address the problem of the disk space requirement, Aggarwal, Wolf and Yu devised a scheme called Permutation-Based Pyramid Broadcasting (PPB) <ref> [1] </ref>. The PPB scheme divides a video object the same way as the PB scheme and multiplexes several channels among one segment of video data. The similar partition strategy limits the disk space reduction and typically requires a client disk capable of storing at least 50% of a video data.
Reference: [2] <author> C.C. Aggarwal and J.L. Wolf and P.S. Yu. </author> <title> On Optimal Batching Policies for Video-on-Demand Storage Server. </title> <booktitle> Proc. of the IEEE Int'l Conf. on Multimedia Systems. </booktitle> <month> June </month> <year> 1996. </year>
Reference-contexts: In a batch scheduling scheme, a group of requests that arrive close in time are batched together and when a channel becomes available, the server selects a batch according to some scheduling policy and satisfies the requests with the channel. Some efficient batch scheduling policies are studied in <ref> [6, 7, 2, 14] </ref>. In a broadcasting scheme, the server broadcasts a video via multiple dedicated channels and each client follows a reception schedule to receive data from appropriate channels so as to continuously playback the whole video.
Reference: [3] <author> P.W. </author> <title> Agnew and A.S. Kellerman. Distributed Multimedia. </title> <publisher> Addison Wesley, ACM Press. </publisher>
Reference: [4] <author> K.C. Almeroth and M.H. Ammar. </author> <title> The use of multicast delivery to provide a scalable and interactive video-on-demand service. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 14(6) </volume> <pages> 1110-1122, </pages> <month> August </month> <year> 1996. </year>
Reference: [5] <author> D. Comer. </author> <title> Internetworking with TCP/IP. </title> <publisher> Prentice Hall, </publisher> <pages> pages 289-300, </pages> <year> 1995. </year>
Reference-contexts: The number of server channels is the total number of channels required for the dedicated network channels. The network uses a multicast communication facility to transmit the video streams to clients so that a client can select which channels it wishes to receive from <ref> [5, 9] </ref>. 3 Each client contains a set-top box, a disk, and a display monitor. A client is connected to the network with a set-top box. The set-top box selects several network channels to receive video data from according to a reception schedule.
Reference: [6] <author> A. Dan and D. Sitaram and P. Shahabuddin. </author> <title> Scheduling Policies for an On-Demand Video Server with Batching. </title> <booktitle> Proc. of ACM Multimedia, </booktitle> <pages> pages 15-23, </pages> <month> Oct. </month> <year> 1994. </year>
Reference-contexts: We turn to televisions to be informed, entertained, educated, or even to do business (e.g. shopping or video conferencing in offices). We wish to be able to make content available instantly at the touch of our fingertips. It was shown in <ref> [6, 7] </ref> that 80% of our demand is for a few (10 to 20) very popular videos. This drives future content providers to deliver popular videos to a large number of subscribers with the smallest latency possible. <p> However, this scheme can quickly exhaust the most scarce resource in the server's system: the server network bandwidth. To avoid this, Dan et al. proposed to allocate on-demand channels for less popular videos and dedicated channels for popular videos <ref> [6, 7, 8] </ref>. The server uses on-demand channels to satisfy requests for less popular videos according to some batch scheduling policy, and dedicated channels to broadcast popular videos to 2 clients. Both broadcasting and batch scheduling schemes allow a channel shared by more than one client as follows. <p> In a batch scheduling scheme, a group of requests that arrive close in time are batched together and when a channel becomes available, the server selects a batch according to some scheduling policy and satisfies the requests with the channel. Some efficient batch scheduling policies are studied in <ref> [6, 7, 2, 14] </ref>. In a broadcasting scheme, the server broadcasts a video via multiple dedicated channels and each client follows a reception schedule to receive data from appropriate channels so as to continuously playback the whole video. <p> In a broadcasting scheme, the server broadcasts a video via multiple dedicated channels and each client follows a reception schedule to receive data from appropriate channels so as to continuously playback the whole video. The simplest broadcasting scheme is the EB scheme that divides the video into equal-length segments <ref> [6] </ref>. The EB scheme guarantees a service latency of the length of one segment, independent of the number of of requests, since a client waits at most the length of one segment for the playback to start.
Reference: [7] <author> A. Dan and D. Sitaram and P. Shahabuddin. </author> <title> Dynamic Batching Policies for an On-Demand Video Server. </title> <journal> Multimedia Systems, </journal> <volume> 4(3) </volume> <pages> 112-121, </pages> <month> Jun. </month> <year> 1996. </year>
Reference-contexts: We turn to televisions to be informed, entertained, educated, or even to do business (e.g. shopping or video conferencing in offices). We wish to be able to make content available instantly at the touch of our fingertips. It was shown in <ref> [6, 7] </ref> that 80% of our demand is for a few (10 to 20) very popular videos. This drives future content providers to deliver popular videos to a large number of subscribers with the smallest latency possible. <p> However, this scheme can quickly exhaust the most scarce resource in the server's system: the server network bandwidth. To avoid this, Dan et al. proposed to allocate on-demand channels for less popular videos and dedicated channels for popular videos <ref> [6, 7, 8] </ref>. The server uses on-demand channels to satisfy requests for less popular videos according to some batch scheduling policy, and dedicated channels to broadcast popular videos to 2 clients. Both broadcasting and batch scheduling schemes allow a channel shared by more than one client as follows. <p> In a batch scheduling scheme, a group of requests that arrive close in time are batched together and when a channel becomes available, the server selects a batch according to some scheduling policy and satisfies the requests with the channel. Some efficient batch scheduling policies are studied in <ref> [6, 7, 2, 14] </ref>. In a broadcasting scheme, the server broadcasts a video via multiple dedicated channels and each client follows a reception schedule to receive data from appropriate channels so as to continuously playback the whole video.
Reference: [8] <author> A. Dan and P. Shahabuddin and Dinkar Sitaram and D. Towsley. </author> <title> Channel allocation under batching and VCR control in movie-on-demand servers, </title> <institution> IBM Research Report, </institution> <year> 1994. </year>
Reference-contexts: However, this scheme can quickly exhaust the most scarce resource in the server's system: the server network bandwidth. To avoid this, Dan et al. proposed to allocate on-demand channels for less popular videos and dedicated channels for popular videos <ref> [6, 7, 8] </ref>. The server uses on-demand channels to satisfy requests for less popular videos according to some batch scheduling policy, and dedicated channels to broadcast popular videos to 2 clients. Both broadcasting and batch scheduling schemes allow a channel shared by more than one client as follows.
Reference: [9] <author> S. </author> <title> Deering. </title> <type> RFC 1112. </type>
Reference-contexts: The number of server channels is the total number of channels required for the dedicated network channels. The network uses a multicast communication facility to transmit the video streams to clients so that a client can select which channels it wishes to receive from <ref> [5, 9] </ref>. 3 Each client contains a set-top box, a disk, and a display monitor. A client is connected to the network with a set-top box. The set-top box selects several network channels to receive video data from according to a reception schedule.
Reference: [10] <author> L. Gao and J. Kurose and D. Towsley. </author> <title> Efficient schemes for broadcasting popular videos. </title> <address> http://cs.smith.edu/ gao/bc.ps. </address>
Reference-contexts: In section 3, we present and analyze disk-conserving broadcasting schemes. Section 4, 5 and 6 propose and analyze GDB and compare it with SB. Finally, in Section 7, we concludes with ending remarks. We omit the proof for all lemmas and theorems in this paper. See <ref> [10] </ref> for a complete version of the paper. 1.1 Related Work The simplest scheduling scheme of a video server is to allocate a channel for each client. However, this scheme can quickly exhaust the most scarce resource in the server's system: the server network bandwidth.
Reference: [11] <author> K.A. Hua and S. Sheu. </author> <title> Skyscraper Broadcasting: A New Broadcasting Scheme for Metropolitan Video-on-Demand Systems. </title> <booktitle> ACM SIGCOMM. </booktitle> <month> Sept. </month> <year> 1997. </year>
Reference-contexts: The similar partition strategy limits the disk space reduction and typically requires a client disk capable of storing at least 50% of a video data. Recently, Kua and Sheu proposed a broadcasting scheme <ref> [11] </ref>, called Skyscraper Broadcasting (SB), that further reduces the client disk space requirement. The SB scheme uses a novel data partition strategy and exhibits a tradeoff between the client storage space and the server network bandwidth.
Reference: [12] <author> V.O.K. Li and W.Liao and X. Qiu and E.W.M. Wong. </author> <title> Performance model of interactive video-on-demand systems. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 14(6) </volume> <pages> 1099-1109, </pages> <month> August </month> <year> 1996. </year>
Reference: [13] <author> W. Liao and V.O.K. Li. </author> <title> The Split and Merge (SAM) protocol for interactive Video-on-demand Systems. </title> <booktitle> IEEE INFOCOM, </booktitle> <month> April </month> <year> 1997. </year> <month> 19 </month>
Reference: [14] <author> W. Shi and S. Ghandeharizadeh. </author> <title> Trading Memory for Disk Bandwidth in Video-on-Demand Servers. </title> <type> Tech Report, </type> <institution> USC, </institution> <year> 1997. </year>
Reference-contexts: In a batch scheduling scheme, a group of requests that arrive close in time are batched together and when a channel becomes available, the server selects a batch according to some scheduling policy and satisfies the requests with the channel. Some efficient batch scheduling policies are studied in <ref> [6, 7, 2, 14] </ref>. In a broadcasting scheme, the server broadcasts a video via multiple dedicated channels and each client follows a reception schedule to receive data from appropriate channels so as to continuously playback the whole video.
Reference: [15] <author> S. Viswanathan and T. Imielinski. </author> <title> Metropolitan area video-on-demand service using Pyramid Broadcasting. </title> <journal> IEEE Multimedia Systems. </journal> <volume> 4 </volume> <pages> 197-208, </pages> <year> 1996. </year>
Reference-contexts: Furthermore, the number of dedicated channels required for a video is inversely proportional with the guaranteed service latency. To decrease the number of required channels, Viswanathan and Imielinski proposed an ingenious broadcasting scheme, called Pyramid Broadcasting (PB) <ref> [15] </ref>. The main idea of the PB scheme is to divide a video into segments of geometrically increasing size. Each segment is broadcast periodically via a dedicated channel that have a bandwidth greater than the playback rate.
Reference: [16] <author> P.S. Yu and J.L. Wolf and H. Shachnai. </author> <title> Design and analysis of a look-ahead scheduling scheme to support pause-resume for video-on-demand application. </title> <journal> Multimedia Systems, </journal> <volume> 3(4) </volume> <pages> 137-150, </pages> <year> 1995. </year> <month> 20 </month>
References-found: 16

