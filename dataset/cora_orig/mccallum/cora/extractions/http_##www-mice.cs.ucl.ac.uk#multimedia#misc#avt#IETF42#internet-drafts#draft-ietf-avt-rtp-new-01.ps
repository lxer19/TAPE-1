URL: http://www-mice.cs.ucl.ac.uk/multimedia/misc/avt/IETF42/internet-drafts/draft-ietf-avt-rtp-new-01.ps
Refering-URL: http://www-mice.cs.ucl.ac.uk/multimedia/misc/avt/IETF42/internet-drafts/
Root-URL: http://www.cs.ucl.ac.uk
Title: Internet Engineering Task Force Audio/Video Transport Working Group RTP: A Transport Protocol for Real-Time Applications
Author: INTERNET-DRAFT Schulzrinne/Casner/Frederick/Jacobson 
Note: this Memo This document is an Internet-Draft. Internet-Drafts are working documents of the Internet Engineering Task Force (IETF), its areas, and its working groups. Note that other groups may also distribute working documents as Internet-Drafts. This memorandum describes RTP, the  Force. Comments are solicited and should be addressed to the working group's mailing list at rem-conf@es.net and/or the authors.  
Date: August 7, 1998 Expires: February 7, 1999  
Affiliation: draft-ietf-avt-rtp-new-01.ps Columbia U./Cisco/Xerox/LBNL  
Abstract: Internet-Drafts are draft documents valid for a maximum of six months and may be updated, replaced, or obsoleted by other documents at any time. It is inappropriate to use Internet-Drafts as reference material or to cite them other than as work in progress. To view the entire list of current Internet-Drafts, please check the 1id-abstracts.txt listing contained in the Internet-Drafts Shadow Directories on ftp.is.co.za (Africa), ftp.nordu.net (Northern Europe), ftp.nis.garr.it (Southern Europe), munnari.oz.au (Pacific Rim), ftp.ietf.org (US East Coast), or ftp.isi.edu (US West Coast). Distribution of this document is unlimited. Abstract This memorandum is a revision of RFC 1889 in preparation for advancement from Proposed Standard to Draft Standard status. Readers are encouraged to use the PostScript form of this draft to see where changes from RFC 1889 are marked by change bars. The revision process is not yet complete; some changes which have been discussed and tentatively accepted in meetings of the Audio/Video Transport working group have not yet been incorporated into this draft. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. D. Clark and D. L. Tennenhouse, </author> <title> Architectural considerations for a new generation of protocols, </title> <booktitle> in SIGCOMM Symposium on Communications Architectures and Protocols, </booktitle> <address> (Philadelphia, Pennsylvania), </address> <pages> pp. 200-208, </pages> <publisher> IEEE, </publisher> <month> Sept. </month> <year> 1990. </year> <journal> Computer Communications Review, </journal> <volume> Vol. 20(4), </volume> <month> Sept. </month> <year> 1990. </year>
Reference-contexts: This functionality may be fully or partially subsumed by a separate session control protocol, which is beyond the scope of this document. RTP represents a new style of protocol following the principles of application level framing and integrated layer processing proposed by Clark and Tennenhouse <ref> [1] </ref>. That is, RTP is intended to be malleable to provide the information required by a particular application and will often be integrated into the application processing rather than being implemented as a separate layer. RTP is a protocol framework that is deliberately not complete. <p> audio packets the SSRC identifiers of all sources that were mixed together to create a packet are listed, allowing correct talker indication at the receiver. 5.2 Multiplexing RTP Sessions For efficient protocol processing, the number of multiplexing points should be minimized, as described in the integrated layer processing design principle <ref> [1] </ref>. In RTP, multiplexing is provided by the destination transport address (network address and port number) which define an RTP session. For example, in a teleconference composed of audio and video media encoded separately, each medium should be carried in a separate RTP session with its own destination transport address. <p> */ unsigned int x:1; /* header extension flag */ unsigned int cc:4; /* CSRC count */ unsigned int m:1; /* marker bit */ unsigned int pt:7; /* payload type */ unsigned int seq:16; /* sequence number */ u_int32 ts; /* timestamp */ u_int32 ssrc; /* synchronization source */ u_int32 csrc <ref> [1] </ref>; /* optional CSRC list */ - rtp_hdr_t; Schulzrinne/Casner/Frederick/Jacobson Expires February 7, 1999 [Page 53] INTERNET-DRAFT draft-ietf-avt-rtp-new-01.ps August 7, 1998 /* * RTCP common header word */ typedef struct - unsigned int version:2; /* protocol version */ unsigned int p:1; /* padding flag */ unsigned int count:5; /* varies by packet <p> jitter */ u_int32 lsr; /* last SR packet from this source */ u_int32 dlsr; /* delay since last SR packet */ - rtcp_rr_t; /* * SDES item */ typedef struct - u_int8 type; /* type of item (rtcp_sdes_type_t) */ u_int8 length; /* length of item (in octets) */ char data <ref> [1] </ref>; /* text, not null-terminated */ - rtcp_sdes_item_t; /* * One RTCP packet */ typedef struct - rtcp_common_t common; /* common header */ union - Schulzrinne/Casner/Frederick/Jacobson Expires February 7, 1999 [Page 54] INTERNET-DRAFT draft-ietf-avt-rtp-new-01.ps August 7, 1998 /* sender report (SR) */ struct - u_int32 ssrc; /* sender generating this report <p> [Page 54] INTERNET-DRAFT draft-ietf-avt-rtp-new-01.ps August 7, 1998 /* sender report (SR) */ struct - u_int32 ssrc; /* sender generating this report */ u_int32 ntp_sec; /* NTP timestamp */ u_int32 ntp_frac; u_int32 rtp_ts; /* RTP timestamp */ u_int32 psent; /* packets sent */ u_int32 osent; /* octets sent */ rtcp_rr_t rr <ref> [1] </ref>; /* variable-length list */ - sr; /* reception report (RR) */ struct - u_int32 ssrc; /* receiver generating this report */ rtcp_rr_t rr [1]; /* variable-length list */ - rr; /* source description (SDES) */ struct rtcp_sdes - u_int32 src; /* first SSRC/CSRC */ rtcp_sdes_item_t item [1]; /* list of <p> /* NTP timestamp */ u_int32 ntp_frac; u_int32 rtp_ts; /* RTP timestamp */ u_int32 psent; /* packets sent */ u_int32 osent; /* octets sent */ rtcp_rr_t rr <ref> [1] </ref>; /* variable-length list */ - sr; /* reception report (RR) */ struct - u_int32 ssrc; /* receiver generating this report */ rtcp_rr_t rr [1]; /* variable-length list */ - rr; /* source description (SDES) */ struct rtcp_sdes - u_int32 src; /* first SSRC/CSRC */ rtcp_sdes_item_t item [1]; /* list of SDES items */ - sdes; /* BYE */ struct - u_int32 src [1]; /* list of sources */ /* can't express trailing text for <p> */ rtcp_rr_t rr <ref> [1] </ref>; /* variable-length list */ - sr; /* reception report (RR) */ struct - u_int32 ssrc; /* receiver generating this report */ rtcp_rr_t rr [1]; /* variable-length list */ - rr; /* source description (SDES) */ struct rtcp_sdes - u_int32 src; /* first SSRC/CSRC */ rtcp_sdes_item_t item [1]; /* list of SDES items */ - sdes; /* BYE */ struct - u_int32 src [1]; /* list of sources */ /* can't express trailing text for reason */ bye; - rtcp_t; typedef struct rtcp_sdes rtcp_sdes_t; /* * Per-source state information */ typedef struct - u_int16 max_seq; /* highest seq. <p> - u_int32 ssrc; /* receiver generating this report */ rtcp_rr_t rr <ref> [1] </ref>; /* variable-length list */ - rr; /* source description (SDES) */ struct rtcp_sdes - u_int32 src; /* first SSRC/CSRC */ rtcp_sdes_item_t item [1]; /* list of SDES items */ - sdes; /* BYE */ struct - u_int32 src [1]; /* list of sources */ /* can't express trailing text for reason */ bye; - rtcp_t; typedef struct rtcp_sdes rtcp_sdes_t; /* * Per-source state information */ typedef struct - u_int16 max_seq; /* highest seq. number seen */ u_int32 cycles; /* shifted count of seq. number cycles */ u_int32 base_seq; /*
Reference: [2] <author> H. Schulzrinne, </author> <title> Issues in designing a transport protocol for audio and video conferences and other multiparticipant real-time applications. expired Internet draft, </title> <address> Oct. </address> <year> 1993. </year>
Reference-contexts: A discussion of real-time services and algorithms for their implementation as well as background discussion on some of the RTP design decisions can be found in <ref> [2] </ref>. 1.1 Terminology The key words MUST, MUST NOT, REQUIRED, SHALL, SHALL NOT, SHOULD, SHOULD NOT, RECOMMENDED, MAY, and OPTIONAL in this document are to be interpreted as described in RFC 2119 [3] and indicate requirement levels for compliant RTP implementations.
Reference: [3] <author> S. Bradner, </author> <title> Key words for use in RFCs to Indicate Requirement Levels, </title> <type> RFC 2119, </type> <institution> Internet Engineering Task Force, </institution> <month> Mar. </month> <year> 1997. </year>
Reference-contexts: their implementation as well as background discussion on some of the RTP design decisions can be found in [2]. 1.1 Terminology The key words MUST, MUST NOT, REQUIRED, SHALL, SHALL NOT, SHOULD, SHOULD NOT, RECOMMENDED, MAY, and OPTIONAL in this document are to be interpreted as described in RFC 2119 <ref> [3] </ref> and indicate requirement levels for compliant RTP implementations. Schulzrinne/Casner/Frederick/Jacobson Expires February 7, 1999 [Page 5] INTERNET-DRAFT draft-ietf-avt-rtp-new-01.ps August 7, 1998 2 RTP Use Scenarios The following sections describe some aspects of the use of RTP.
Reference: [4] <author> D. E. </author> <title> Comer, </title> <journal> Internetworking with TCP/IP, </journal> <volume> vol. </volume> <pages> 1. </pages> <address> Englewood Cliffs, New Jersey: </address> <publisher> Prentice Hall, </publisher> <year> 1991. </year>
Reference-contexts: Port: The abstraction that transport protocols use to distinguish among multiple destinations within a given host computer. TCP/IP protocols identify ports using small positive integers. <ref> [4] </ref> The transport selectors (TSEL) used by the OSI transport layer are equivalent to ports. RTP depends upon the lower-layer protocol to provide some mechanism such as ports to multiplex the RTP and RTCP packets of a session. <p> 1321 */ #include "md5.h" /* from RFC 1321 */ #define MD_CTX MD5_CTX #define MDInit MD5Init #define MDUpdate MD5Update #define MDFinal MD5Final static u_long md_32 (char *string, int length) Schulzrinne/Casner/Frederick/Jacobson Expires February 7, 1999 [Page 62] INTERNET-DRAFT draft-ietf-avt-rtp-new-01.ps August 7, 1998 - MD_CTX context; union - char c [16]; u_long x <ref> [4] </ref>; digest; u_long r; int i; MDInit (&context); MDUpdate (&context, string, length); MDFinal ((unsigned char *)&digest, &context); r = 0; r = digest.x [i]; - return r; - /* md_32 */ * Return random unsigned 32-bit quantity.
Reference: [5] <author> J. Postel, </author> <title> Internet protocol, </title> <type> RFC 791, </type> <institution> Internet Engineering Task Force, </institution> <month> Sept. </month> <year> 1981. </year>
Reference-contexts: This byte order is commonly known as big-endian. The transmission order is described in detail in <ref> [5, Appendix A] </ref>. Unless otherwise noted, numeric constants are in decimal (base 10). All header data is aligned to its natural length, i.e., 16-bit fields are aligned on even offsets, 32-bit fields are aligned at offsets divisible by four, etc. Octets designated as padding have the value zero.
Reference: [6] <author> D. Mills, </author> <title> Network time protocol (v3), </title> <type> RFC 1305, </type> <institution> Internet Engineering Task Force, </institution> <month> Apr. </month> <year> 1992. </year> <note> Schulzrinne/Casner/Frederick/Jacobson Expires February 7, 1999 [Page 72] INTERNET-DRAFT draft-ietf-avt-rtp-new-01.ps August 7, </note> <year> 1998 </year>
Reference-contexts: Octets designated as padding have the value zero. Wallclock time (absolute date and time) is represented using the timestamp format of the Network Time Protocol (NTP), which is in seconds relative to 0h UTC on 1 January 1900 <ref> [6] </ref>. The full resolution NTP timestamp is a 64-bit unsigned fixed-point number with the integer part in the first 32 bits and the fractional Schulzrinne/Casner/Frederick/Jacobson Expires February 7, 1999 [Page 9] INTERNET-DRAFT draft-ietf-avt-rtp-new-01.ps August 7, 1998 part in the last 32 bits.
Reference: [7] <author> J. Reynolds and J. Postel, </author> <title> Assigned numbers, </title> <type> STD 2, RFC 1700, </type> <institution> Internet Engineering Task Force, </institution> <month> Oct. </month> <year> 1994. </year>
Reference-contexts: An initial set of Schulzrinne/Casner/Frederick/Jacobson Expires February 7, 1999 [Page 11] INTERNET-DRAFT draft-ietf-avt-rtp-new-01.ps August 7, 1998 default mappings for audio and video is specified in the companion RFC 1890 (updated by Internet-Draft draft-ietf-avt-profile-new), and may be extended in future editions of the Assigned Numbers RFC <ref> [7] </ref>. An RTP sender emits a single RTP payload type at any given time; this field is not intended for multiplexing separate media streams (see Section 5.2).
Reference: [8] <author> D. Eastlake, S. Crocker, and J. Schiller, </author> <title> Randomness recommendations for security, </title> <type> RFC 1750, </type> <institution> Internet Engineering Task Force, </institution> <month> Dec. </month> <year> 1994. </year>
Reference-contexts: Techniques for choosing unpredictable numbers are discussed in <ref> [8] </ref>. timestamp: 32 bits The timestamp reflects the sampling instant of the first octet in the RTP data packet. The sampling instant must be derived from a clock that increments monotonically and linearly in time to allow synchronization and jitter calculations (see Section 6.4.1). <p> Other system calls that may be appropriate include * getdomainname (), * getwd (), or * getrusage (). Live video or audio samples are also a good source of random numbers, but care must be taken to avoid using a turned-off microphone or blinded camera as a source <ref> [8] </ref>. Use of this or similar routine is suggested to generate the initial seed for the random number generator producing the RTCP period (as shown in Appendix A.7), to generate the initial values for the sequence number and timestamp, and to generate SSRC values.
Reference: [9] <author> J.-C. Bolot, T. Turletti, and I. Wakeman, </author> <title> Scalable feedback control for multicast video distribution in the internet, </title> <booktitle> in SIGCOMM Symposium on Communications Architectures and Protocols, </booktitle> <address> (London, England), </address> <pages> pp. 58-67, </pages> <publisher> ACM, </publisher> <month> Aug. </month> <year> 1994. </year>
Reference-contexts: This is an integral part of the RTP's role as a transport protocol and is related to the flow and congestion control functions of other transport protocols. The feedback may be directly useful for control of adaptive encodings <ref> [9, 10] </ref>, but experiments with IP multicasting have shown that it is also critical to get feedback from the receivers to diagnose faults in the distribution. Sending reception feedback reports to all participants allows one who is observing problems to evaluate whether those problems are local or global.
Reference: [10] <author> I. Busse, B. Deffner, and H. Schulzrinne, </author> <title> Dynamic QoS control of multimedia applications based on RTP, </title> <journal> Computer Communications, </journal> <month> Jan. </month> <year> 1996. </year>
Reference-contexts: This is an integral part of the RTP's role as a transport protocol and is related to the flow and congestion control functions of other transport protocols. The feedback may be directly useful for control of adaptive encodings <ref> [9, 10] </ref>, but experiments with IP multicasting have shown that it is also critical to get feedback from the receivers to diagnose faults in the distribution. Sending reception feedback reports to all participants allows one who is observing problems to evaluate whether those problems are local or global.
Reference: [11] <author> S. Floyd and V. Jacobson, </author> <title> The synchronization of periodic routing messages, </title> <booktitle> in SIGCOMM Symposium on Communications Architectures and Protocols (D. </booktitle> <editor> P. Sidhu, ed.), </editor> <address> (San Francisco, California), </address> <pages> pp. 33-44, </pages> <publisher> ACM, </publisher> <month> Sept. </month> <year> 1993. </year> <note> also in [26]. </note>
Reference-contexts: It is this linear factor which allows for a constant amount of control traffic when summed across all members. * The interval between RTCP packets is varied randomly over the range [0.5,1.5] times the calculated interval to avoid unintended synchronization of all participants <ref> [11] </ref>.
Reference: [12] <author> J. A. Cadzow, </author> <title> Foundations of digital signal processing and data analysis. </title> <address> New York, New York: </address> <publisher> Macmillan, </publisher> <year> 1987. </year>
Reference-contexts: The jitter calculation is prescribed here to allow profile-independent monitors to make valid interpretations of reports coming from different implementations. This algorithm is the optimal first-order estimator and the gain parameter 1=16 gives a good noise reduction ratio while maintaining a reasonable rate of convergence <ref> [12, Section 11.5-11.12, Fig. 11.6] </ref>.
Reference: [13] <author> F. Yergeau, UTF-8, </author> <title> a transformation format of ISO 10646, </title> <type> RFC 2279, </type> <institution> Internet Engineering Task Force, </institution> <month> Jan. </month> <year> 1998. </year>
Reference-contexts: Note that the text can be no longer than 255 octets, but this is consistent with the need to limit RTCP bandwidth consumption. The text is encoded according to the UTF-8 encoding specified in RFC 2279 <ref> [13] </ref>. US-ASCII is a subset of this encoding and requires no additional encoding. The presence of multi-octet encodings is indicated by setting the most significant bit of a character to a value of one. Items are contiguous, i.e., items are not individually padded to a 32-bit boundary.
Reference: [14] <author> P. Mockapetris, </author> <title> Domain names concepts and facilities, </title> <type> STD 13, RFC 1034, </type> <institution> Internet Engineering Task Force, </institution> <month> Nov. </month> <year> 1987. </year>
Reference-contexts: For both formats, host is either the fully qualified domain name of the host from which the real-time data originates, formatted according to the rules specified in RFC 1034 <ref> [14] </ref>, RFC 1035 [15] and Section 2.1 of RFC 1123 [16]; or the standard ASCII representation of the host's numeric address on the interface used for the RTP communication. For example, the standard ASCII representation of an IP Version 4 address is dotted decimal, also known as dotted quad.
Reference: [15] <author> P. Mockapetris, </author> <title> Domain names implementation and specification, </title> <type> STD 13, RFC 1035, </type> <institution> Internet Engineering Task Force, </institution> <month> Nov. </month> <year> 1987. </year>
Reference-contexts: For both formats, host is either the fully qualified domain name of the host from which the real-time data originates, formatted according to the rules specified in RFC 1034 [14], RFC 1035 <ref> [15] </ref> and Section 2.1 of RFC 1123 [16]; or the standard ASCII representation of the host's numeric address on the interface used for the RTP communication. For example, the standard ASCII representation of an IP Version 4 address is dotted decimal, also known as dotted quad.
Reference: [16] <author> R. Braden, </author> <title> Requirements for internet hosts application and support, </title> <type> STD 3, RFC 1123, </type> <institution> Internet Engineering Task Force, </institution> <month> Oct. </month> <year> 1989. </year>
Reference-contexts: For both formats, host is either the fully qualified domain name of the host from which the real-time data originates, formatted according to the rules specified in RFC 1034 [14], RFC 1035 [15] and Section 2.1 of RFC 1123 <ref> [16] </ref>; or the standard ASCII representation of the host's numeric address on the interface used for the RTP communication. For example, the standard ASCII representation of an IP Version 4 address is dotted decimal, also known as dotted quad. <p> /* from RFC 1321 */ #include "md5.h" /* from RFC 1321 */ #define MD_CTX MD5_CTX #define MDInit MD5Init #define MDUpdate MD5Update #define MDFinal MD5Final static u_long md_32 (char *string, int length) Schulzrinne/Casner/Frederick/Jacobson Expires February 7, 1999 [Page 62] INTERNET-DRAFT draft-ietf-avt-rtp-new-01.ps August 7, 1998 - MD_CTX context; union - char c <ref> [16] </ref>; u_long x [4]; digest; u_long r; int i; MDInit (&context); MDUpdate (&context, string, length); MDFinal ((unsigned char *)&digest, &context); r = 0; r = digest.x [i]; - return r; - /* md_32 */ * Return random unsigned 32-bit quantity.
Reference: [17] <author> Y. Rekhter, R. Moskowitz, D. Karrenberg, and G. de Groot, </author> <title> Address allocation for private internets, </title> <type> RFC 1597, </type> <institution> Internet Engineering Task Force, </institution> <month> Mar. </month> <year> 1994. </year>
Reference-contexts: If cross-media binding is required, it may be necessary for the CNAME of each tool to be externally configured with the same value by a coordination tool. Application writers should be aware that private network address assignments such as the Net-10 assignment proposed in RFC 1597 <ref> [17] </ref> may create network addresses that are not globally unique.
Reference: [18] <author> E. Lear, E. Fair, D. Crocker, and T. Kessler, </author> <title> Network 10 considered harmful (some practices shouldn't be codified), </title> <type> RFC 1627, </type> <institution> Internet Engineering Task Force, </institution> <month> July </month> <year> 1994. </year>
Reference-contexts: This would lead to non-unique CNAMEs if hosts with private addresses and no direct IP connectivity to the public Internet have their RTP packets forwarded to the public Internet through an RTP-level translator. (See also RFC 1627 <ref> [18] </ref>.) To handle this case, applications may provide a means to configure a unique CNAME, but the burden is on the translator to translate CNAMEs from private addresses to public addresses if necessary to keep private addresses from being exposed. 6.5.2 NAME: User name SDES item 0 1 2 3 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Reference: [19] <author> D. Crocker, </author> <title> Standard for the format of ARPA internet text messages, </title> <type> STD 11, RFC 822, </type> <institution> Internet Engineering Task Force, </institution> <month> Aug. </month> <year> 1982. </year>
Reference-contexts: Schulzrinne/Casner/Frederick/Jacobson Expires February 7, 1999 [Page 35] INTERNET-DRAFT draft-ietf-avt-rtp-new-01.ps August 7, 1998 6.5.3 EMAIL: Electronic mail address SDES item 0 1 2 3 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | EMAIL=3 | length | email address of source ... +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ The email address is formatted according to RFC 822 <ref> [19] </ref>, for example, John.Doe@megacorp.com.
Reference: [20] <author> W. Feller, </author> <title> An Introduction to Probability Theory and its Applications, </title> <journal> Volume 1, </journal> <volume> vol. </volume> <pages> 1. </pages> <address> New York, New York: </address> <publisher> John Wiley and Sons, </publisher> <editor> third ed., </editor> <year> 1968. </year>
Reference-contexts: If N is the number of sources and L the length of the identifier (here, 32 bits), the probability that two sources independently pick the same value can be approximated for large N <ref> [20, p. 33] </ref> as 1 e N 2 =2 L+1 . For N = 1000, the probability is roughly 10 4 . The typical collision probability is much lower than the worst-case above.
Reference: [21] <author> S. Kent and R. Atkinson, </author> <title> Security Architecture for the Internet Protocol, </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> July </month> <year> 1998. </year> <title> Work in progress. </title>
Reference-contexts: These services have been specified for IP in <ref> [21] </ref>. Since the initial audio and video applications using RTP needed a confidentiality service before such services were available for the IP layer, the confidentiality service described in the next section was defined for use with RTP and RTCP. That description is included here to codify existing practice.
Reference: [22] <author> D. Balenson, </author> <title> Privacy enhancement for internet electronic mail: Part III: algorithms, modes, and identifiers, </title> <type> RFC 1423, </type> <institution> Internet Engineering Task Force, </institution> <month> Feb. </month> <year> 1993. </year> <note> Schulzrinne/Casner/Frederick/Jacobson Expires February 7, 1999 [Page 73] INTERNET-DRAFT draft-ietf-avt-rtp-new-01.ps August 7, </note> <year> 1998 </year>
Reference-contexts: Examples of such validity checks for RTP and RTCP headers are given in Appendices A.1 and A.2. The default encryption algorithm is the Data Encryption Standard (DES) algorithm in cipher block chaining (CBC) mode, as described in Section 1.1 of RFC 1423 <ref> [22] </ref>, except that padding to a multiple of 8 octets is indicated as described for the P bit in Section 5.1. The initialization vector is zero because random values are supplied in the RTP header or by the random prefix for compound RTCP packets.
Reference: [23] <author> V. L. Voydock and S. T. Kent, </author> <title> Security mechanisms in high-level network protocols, </title> <journal> ACM Computing Surveys, </journal> <volume> vol. 15, </volume> <pages> pp. 135-171, </pages> <month> June </month> <year> 1983. </year>
Reference-contexts: The initialization vector is zero because random values are supplied in the RTP header or by the random prefix for compound RTCP packets. For details on the use of CBC initialization vectors, see <ref> [23] </ref>. Implementations that support encryption should always support the DES algorithm in CBC mode as the default to maximize interoperability. This method is chosen because it has been demonstrated to be easy and practical to use in experimental audio and video tools in operation on the Internet.
Reference: [24] <author> R. Rivest, </author> <title> The MD5 message-digest algorithm, </title> <type> RFC 1321, </type> <institution> Internet Engineering Task Force, </institution> <month> Apr. </month> <year> 1992. </year>
Reference-contexts: 7, 1998 sd = (rtcp_sdes_t *) ((u_int32 *)sd + (((char *)rsp - (char *)sd) &gt;> 2)+1); - if (count &gt;= 0) - /* invalid packet format */ - A.6 Generating a Random 32-bit Identifier The following subroutine generates a random 32-bit identifier using the MD5 routines published in RFC 1321 <ref> [24] </ref>. The system routines may not be present on all operating systems, but they should serve as hints as to what kinds of information may be used. Other system calls that may be appropriate include * getdomainname (), * getwd (), or * getrusage ().
Reference: [25] <author> S. Stubblebine, </author> <title> Security services for multimedia conferencing, </title> <booktitle> in 16th National Computer Security Conference, </booktitle> <address> (Baltimore, Maryland), </address> <pages> pp. 391-395, </pages> <month> Sept. </month> <year> 1993. </year>
Reference-contexts: Rightly or not, users may be more sensitive to privacy concerns with audio and video communication than they have been with more traditional forms of network communication <ref> [25] </ref>. Therefore, the use of security mechanisms with RTP is important. These mechanisms are discussed in Section 9. RTP-level translators or mixers may be used to allow RTP traffic to reach hosts behind firewalls.
Reference: [26] <author> S. Floyd and V. Jacobson, </author> <title> The synchronization of periodic routing messages, </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> vol. 2, </volume> <pages> pp. 122-136, </pages> <month> Apr. </month> <year> 1994. </year> <note> Schulzrinne/Casner/Frederick/Jacobson Expires February 7, 1999 [Page 74] </note>
References-found: 26

