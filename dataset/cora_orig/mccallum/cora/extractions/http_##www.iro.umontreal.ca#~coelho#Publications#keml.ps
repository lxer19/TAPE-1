URL: http://www.iro.umontreal.ca/~coelho/Publications/keml.ps
Refering-URL: http://www.iro.umontreal.ca/~coelho/
Root-URL: http://www.iro.umontreal.ca
Email: email: fcoelho,lapalmeg@iro.umontreal.ca  email: patel@hebb.psych.mcgill.ca  
Title: From KADS Models to Operational Problem-Solving Methods: Perspectives in the Domain View  
Author: Eliana Coelho Guy Lapalme Vimla L. Patel 
Address: C.P. 6128, Succursale Centre-Ville, Montreal, Quebec, Canada, H3C3J7  1110 Pine Ave. West, Montreal, Quebec, Canada, H3A1A3  
Affiliation: Departement d'Informatique et de Recherche Operationnelle, Universite de Montreal  Cognitive Studies in Medicine, Center for Medical Education, McGill University  
Date: November 1995  
Abstract: This paper reports our experience in using the KADS framework to describe problem-solving methods. We explore the concept the domain view in providing both usability and reusability of knowledge. To illustrate our work, we implement Cover&Differentiate with the knowledge representation language Loom, using as a reference the formal description of C&D made in (ML) 2 . We concentrate on Loom primitives to model the the domain view and we analyze the perspectives of generic primitives to represent it. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Brachman and J. Schmolze. </author> <title> An overview of the KL-ONE knowledge representation system. </title> <journal> Cognitive Science, </journal> <volume> 9(2) </volume> <pages> 171-216, </pages> <year> 1985. </year>
Reference-contexts: Here, we try another approach by having 2 an operational language to evaluate the KADS conceptual model. We use Loom [2], a Lisp-based language derived from the language KL-ONE <ref> [1] </ref>, that combines several programming paradigms for separating domain knowledge from control knowledge. Moreover, Loom provides primitives to represent the domain view by means of some operators to establish a mapping between the domain knowledge and the knowledge roles used by the inferences.
Reference: [2] <author> D. Brill. </author> <note> Loom Reference Manual, Version 2.0. </note> <institution> University of Southern California, </institution> <year> 1993. </year>
Reference-contexts: This paper reports our experience in using the KADS framework to describe PSMs. We explore the concept the domain view in providing both usability and reusability of knowledge. To illustrate our work, we implement the PSM Cover&Differentiate (C&D) [5] with the knowledge representation language Loom <ref> [2] </ref>, using as a reference the formal description of C&D made in (ML) 2 [14]. <p> In our previous work [4], we used a formal approach by extending Ontolingua [8] for representing the inference knowledge of KADS framework. Here, we try another approach by having 2 an operational language to evaluate the KADS conceptual model. We use Loom <ref> [2] </ref>, a Lisp-based language derived from the language KL-ONE [1], that combines several programming paradigms for separating domain knowledge from control knowledge.
Reference: [3] <author> W. Clancey. </author> <title> Model Construction Operators. </title> <journal> Artificial Intelligence, </journal> <volume> 7(53) </volume> <pages> 1-115, </pages> <year> 1992. </year>
Reference-contexts: The two basic assumptions of our work are that the PSMs are specified in accordance with the knowledge-level [12] and that the domain knowledge is separated from control knowledge <ref> [3] </ref>. A PSM is also called a role-limiting method because the control knowledge determines the roles played by the domain knowledge in solving the problem. Defining for what and when the domain knowledge is needed makes the knowledge acquisition process easier.
Reference: [4] <author> E. Coelho and G. Lapalme. </author> <title> Extending Ontolingua for Representing Control Knowledge. In IJCAI Workshop on Basic Ontological Issues in Knowledge Sharing, </title> <address> Montreal, </address> <month> August, </month> <year> 1995. </year>
Reference-contexts: Some of these languages formalize the KADS framework in the sense that they provide formal constructs to represent the different kinds of knowledge. Another approach is to have operational languages by making the conceptual model executable. In our previous work <ref> [4] </ref>, we used a formal approach by extending Ontolingua [8] for representing the inference knowledge of KADS framework. Here, we try another approach by having 2 an operational language to evaluate the KADS conceptual model.
Reference: [5] <author> L. Eshelman. MOLE: </author> <title> A Knowledge-Acquisition Tool for Cover-and-Differentiate Systems. </title> <editor> In S. Marcus, editor, </editor> <title> Automating Knowledge Acquisition for Expert Systems, </title> <booktitle> chapter 3, </booktitle> <pages> pages 37-79. </pages> <publisher> Kluwer Academic Publishers, </publisher> <year> 1988. </year>
Reference-contexts: However, these languages lack primitives to represent domain view. This paper reports our experience in using the KADS framework to describe PSMs. We explore the concept the domain view in providing both usability and reusability of knowledge. To illustrate our work, we implement the PSM Cover&Differentiate (C&D) <ref> [5] </ref> with the knowledge representation language Loom [2], using as a reference the formal description of C&D made in (ML) 2 [14]. <p> We show how Loom primitives are used to represent the domain knowledge and the primitive inferences, concentrating on the positive aspects of using the domain view to keep the independence between the domain knowledge and the control knowledge. 3 Cover and Differentiate Cover&Differentiate (C&D) PSM <ref> [5] </ref> diagnoses a problem by first proposing candidates that cover the symptoms specified by the user and then seek for information that differentiate the candidates. C&D was formally described in [14] with the language (ML) 2 [9]. We use this formalization to codify C&D in Loom.
Reference: [6] <author> D. Fensel and F. v. Harmelen. </author> <title> A Comparison of languages which operationalize and formalize KADS models of expertise. </title> <journal> Knowledge Engineering Review, </journal> <volume> 9(2) </volume> <pages> 105-146, </pages> <year> 1994. </year>
Reference-contexts: Based on the KADS conceptual model, some authors developed formal languages for describing and comparing problem solving methods <ref> [14, 6] </ref>. These formal languages can model domain structure and control knowledge of various PSMs, making it easier to understand and modify them for solving different problems. However, these languages lack primitives to represent domain view. This paper reports our experience in using the KADS framework to describe PSMs. <p> The task layer determines the sequence of execution of the inferences in terms of conditional statements and iterations. Several languages were created based on KADS framework <ref> [14, 6] </ref>. These languages provide primitives for representing the domain knowledge and the different kinds of control knowledge. Some of these languages formalize the KADS framework in the sense that they provide formal constructs to represent the different kinds of knowledge.
Reference: [7] <author> J.H. Gennari, S. W. Tu, T. E. Rothenfluh, and M. A. Musen. </author> <title> Mapping domains to methods in support of reuse. </title> <booktitle> In Proceedings of the 8th Banff Knowledge Acquisition for Knowledge-Based Workshop, </booktitle> <address> Banff, Alberta, Canada,1993. </address>
Reference-contexts: Our goal was to validate this kind of formal specification and, at the same time, assess the difficulty of making operational a PSM from a knowledge-level description. Another work whose goal's research are similar with ours is PROT EG E-II system <ref> [7] </ref>, where a complete environment for modelling KBSs from reusable components is defined. The significant advantage of this system is the automatic generation of knowledge acquisition tools specific for each PSM.
Reference: [8] <author> T.R. Gruber. </author> <title> A translation approach to portable ontology specifications. </title> <journal> Knowledge Acquisition, </journal> <volume> 2(5) </volume> <pages> 199-220, </pages> <year> 1993. </year> <note> [9] v. </note> <author> F. Harmelen and J. Balder. </author> <title> (ML) 2 : A formal language for KADS Models of Expertise. </title> <editor> In G. Schreiber, B. Wielinga, and J. Breuker, editors, </editor> <title> KADS A Principled Approach to Knowledge-Based System Development, </title> <booktitle> chapter 8, </booktitle> <pages> pages 169-202. </pages> <publisher> Academic Press Inc., </publisher> <year> 1993. </year>
Reference-contexts: Some of these languages formalize the KADS framework in the sense that they provide formal constructs to represent the different kinds of knowledge. Another approach is to have operational languages by making the conceptual model executable. In our previous work [4], we used a formal approach by extending Ontolingua <ref> [8] </ref> for representing the inference knowledge of KADS framework. Here, we try another approach by having 2 an operational language to evaluate the KADS conceptual model.
Reference: [10] <author> G. Klinker, D. Marques, and J. McDermott. </author> <title> The Active Glossary: taking integration seriously. </title> <journal> Knowledge Acquisition, </journal> (5):173-197, 1993. 
Reference-contexts: Here, we emphasize how Loom operators can implement this mapping relations having as underlying framework the KADS conceptual model, suggesting some generic operators to represent the domain view. Other research project of particular relevance is the work of Klinker et al. <ref> [10] </ref> in which a group of tools are built to support the development of a KBS. In this work, a group of reusable programming constructs called mechanisms are identified. The Active Glossary is responsible for integrating the mechanisms with the domain knowledge.
Reference: [11] <author> J. McDermott. </author> <title> Preliminary steps toward a taxonomy of problem-solving methods. </title> <editor> In S. Marcus, editor, </editor> <title> Automating Knowledge Acquisition for Expert Systems, </title> <booktitle> chapter 8, </booktitle> <pages> pages 225-256. </pages> <publisher> Kluwer Academic Publishers, </publisher> <year> 1988. </year>
Reference-contexts: 1 Introduction In this paper, we address the problem of reusing problem-solving methods (PSMs). A PSM <ref> [11] </ref> is defined as a set of actions and also the structure of the domain knowledge to solve a problem. The two basic assumptions of our work are that the PSMs are specified in accordance with the knowledge-level [12] and that the domain knowledge is separated from control knowledge [3].
Reference: [12] <author> A. Newell. </author> <title> The Knowledge Level. </title> <journal> Artificial Intelligence, </journal> <volume> 1(18) </volume> <pages> 87-127, </pages> <year> 1982. </year>
Reference-contexts: A PSM [11] is defined as a set of actions and also the structure of the domain knowledge to solve a problem. The two basic assumptions of our work are that the PSMs are specified in accordance with the knowledge-level <ref> [12] </ref> and that the domain knowledge is separated from control knowledge [3]. A PSM is also called a role-limiting method because the control knowledge determines the roles played by the domain knowledge in solving the problem.
Reference: [13] <author> V.L. Patel, D. A. Evans, and D. R. Kaufman. </author> <title> A cognitive framework for doctor-patient interaction. </title> <editor> In D. A. Evans and V.L. Patel, editors, </editor> <booktitle> Cognitive Science in Medicine: Biomedical Modeling, chapter 7, </booktitle> <pages> pages 253-308. </pages> <publisher> MIT Press: </publisher> <address> Cambridge, MA, </address> <year> 1989. </year>
Reference-contexts: In the medical domain, the causal network es 3 tablishes relations between symptoms or complaints and the possible explanations (disorders) for these symptoms. In Figure 2, we illustrate an explanation network for an endocrinology case. The network was adapted from <ref> [13] </ref> and is based on explanations of physicians for a real clinical case. The network models a case of an oriental male who presents periodic leg muscle weaknesses. The correct diagnosis is hypokalemic periodic paralysis associated with thyrotoxicosis.
Reference: [14] <author> G. Schreiber, B. Wielinga, and H. Akkermans. </author> <title> Using KADS to Analyze Problem-Solving Methods. </title> <editor> In G. Schreiber, B. Wielinga, and J. Breuker, editors, </editor> <title> KADS A Principled Approach to Knowledge-Based System Development, </title> <booktitle> chapter 18, </booktitle> <pages> pages 415-429. </pages> <publisher> Academic Press Inc., </publisher> <year> 1993. </year>
Reference-contexts: Based on the KADS conceptual model, some authors developed formal languages for describing and comparing problem solving methods <ref> [14, 6] </ref>. These formal languages can model domain structure and control knowledge of various PSMs, making it easier to understand and modify them for solving different problems. However, these languages lack primitives to represent domain view. This paper reports our experience in using the KADS framework to describe PSMs. <p> We explore the concept the domain view in providing both usability and reusability of knowledge. To illustrate our work, we implement the PSM Cover&Differentiate (C&D) [5] with the knowledge representation language Loom [2], using as a reference the formal description of C&D made in (ML) 2 <ref> [14] </ref>. <p> The task layer determines the sequence of execution of the inferences in terms of conditional statements and iterations. Several languages were created based on KADS framework <ref> [14, 6] </ref>. These languages provide primitives for representing the domain knowledge and the different kinds of control knowledge. Some of these languages formalize the KADS framework in the sense that they provide formal constructs to represent the different kinds of knowledge. <p> C&D was formally described in <ref> [14] </ref> with the language (ML) 2 [9]. We use this formalization to codify C&D in Loom. To exemplify C&D, we choose the medical domain; the data are based on the protocols obtained by examining aspects of medical cognition. relations between the nodes, lower-level nodes being explained by the higher-level nodes.
Reference: [15] <author> G. Schreiber, B. Wielinga, and J. Breuker. </author> <title> Modeling expertise. </title> <editor> In G. Schreiber, B. Wielinga, and J. Breuker, editors, </editor> <title> KADS A Principled Approach to Knowledge-Based System Development, </title> <booktitle> chapter 2, </booktitle> <pages> pages 21-46. </pages> <publisher> Academic Press Inc., </publisher> <year> 1993. </year> <month> 12 </month>
Reference-contexts: To maximize reusability, domain knowledge and control knowledge must be independent. To maximize usability, domain knowledge must be specific to each control knowledge. To overcome this drawback, the KADS methodology <ref> [15] </ref> distinguishes between domain and control knowledge but also defines a domain view which interprets and adapts the domain knowledge to be used by the control knowledge.
References-found: 14

