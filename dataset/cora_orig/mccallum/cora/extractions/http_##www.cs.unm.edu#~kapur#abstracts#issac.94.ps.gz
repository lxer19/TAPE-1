URL: http://www.cs.unm.edu/~kapur/abstracts/issac.94.ps.gz
Refering-URL: http://www.cs.unm.edu/~kapur/abstracts/issac.94.html
Root-URL: http://www.cs.unm.edu
Email: fkapur, saxenag@cs.albany.edu  
Author: Deepak Kapur and Tushar Saxena Lu Yang 
Address: Albany, NY 12222  610041 Chengdu, China  
Affiliation: Institute for Programming and Logics Department of Computer Science State University of New York at Albany  Centre for Mathematical Sciences Chengdu Institute of Computer Applications Academia Sinica  
Abstract: Algebraic and Geometric Reasoning using Dixon Resultants fl Abstract Dixon's method for computing multivariate resultants by simultaneously eliminating many variables is reviewed. The method is found to be quite restrictive because often the Dixon matrix is singular, and the Dixon resultant vanishes identically yielding no information about solutions for many algebraic and geometry problems. We extend Dixon's method for the case when the Dixon matrix is singular, but satisfies a condition. An efficient algorithm is developed based on the proposed extension for extracting conditions for the existence of affine solutions of a finite set of polynomials. Using this algorithm, numerous geometric and algebraic identities are derived for examples which appear intractable with other techniques of triangulation such as the successive resultant method, the Grobner basis method, Macaulay resultants and Characteristic set method. Experimental results suggest that the resultant of a set of polynomials which are symmetric in the variables is relatively easier to compute using the extended Dixon's method. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Bayer D., Stillman M., </author> <title> Macaulay User's Manual, </title> <publisher> Cor-nell University, </publisher> <address> Ithaca, NY. </address>
Reference-contexts: Implementations of both, Sylvester's resultant and Bezout's resultant in MAPLE were tried to perform successive resultant computations, but they ran up to a day before running out of memory on all examples. We also tried to compute the lexicographic Grobner basis on MACAULAY (Bayer and Stillman <ref> [1] </ref>) as well as MAPLE, but they too ran out of memory after running upto a day. Under block orderings, MACAULAY could not compute the resultant of two examples. For the other three that it could solve, it took substantially longer time than our algorithm. <p> : Whether the Dixon matrix was singular (s) or nonsingular (n). (b) Terms : Number of terms in the smallest necessary condition for affine zeros. (c) Dix : Time taken by an implementation of our algorithm in MAPLE on a SPARCstation 10. (d) Grob : Time taken by MACAULAY system <ref> [1] </ref> on a SPARCstation 10 for computing the Grobner basis using block ordering where the first block contains all the variables and the second all the parameters. <p> Neither MAPLE, nor MACAULAY (Bayer and Stillman <ref> [1] </ref>) could compute the Grobner basis of any of the examples in this paper. For lexicographic ordering among all the variables, MACAULAY ran for upto a day on some of these examples and then ran out of memory.
Reference: [2] <author> B. </author> <title> Buchberger, Grobner bases: An Algorithmic method in Polynomial Ideal theory, in Multidimensional Systems Theory, N.K. Bose, </title> <editor> ed., D. </editor> <publisher> Reidel Publishing Co., </publisher> <pages> 184-232, </pages> <year> 1985. </year>
Reference-contexts: Macaulay's multivari-ate resultant method is one such method, and it has recently gotten popularized [3]. Unfortunately, efficient implementations of Macaulay's method are not available in any computer algebra method. Other alternatives such as Grobner basis <ref> [2] </ref> and Characteristic set methods [14][6] don't seem to work well either. Dixon's method is an efficient method to simultaneously eliminate variables from a system of nonhomogeneous polynomial equations, but unfortunately, it does not work for most algebraic and geometric problems.
Reference: [3] <author> Canny J., </author> <title> Generalized Characteristic Polynomials, </title> <journal> Journal of Symbolic Computation, </journal> <year> 1990, </year> <pages> 241-250. </pages>
Reference-contexts: Macaulay's multivari-ate resultant method is one such method, and it has recently gotten popularized <ref> [3] </ref>. Unfortunately, efficient implementations of Macaulay's method are not available in any computer algebra method. Other alternatives such as Grobner basis [2] and Characteristic set methods [14][6] don't seem to work well either. <p> This is perhaps the reason that Dixon's method has not been widely used, even though it is quite efficient. Chionh in [5] suggested using perturbation of certain coefficients to obtain nonzero conditions, but this is a nonautomatic method and requires human expertise. Canny in <ref> [3] </ref> defined the Generalized Characteristic Polynomial for Macaulay resultants which is a systematic way of perturbing a polynomial system so that one gets nonzero conditions for the existence of affine solutions. <p> It is found that most of the problems for which Dixon's original method was inapplicable, can be solved using our extension of it. Moreover, unlike perturbation techniques <ref> [3] </ref>, the proposed method does not introduce any new variable and terms into the system of polynomials. Because of this, computation is not made any more difficult. Finally, unlike successive elimination techniques and perturbation techniques of [5], our method is fully automatic and does not require any human intervention. <p> Under block orderings, MACAULAY could not compute the resultant of two examples. For the other three that it could solve, it took substantially longer time than our algorithm. Macaulay resultants (GCP if the Macaulay matrix is singular <ref> [3] </ref>) were also implemented and tried on MAPLE, but they failed for three examples and took longer time on the other two. <p> If the Dixon matrix is singular, then a generic perturbation (a la <ref> [3] </ref>) can also be performed to obtain a projection operator which is not identically zero. However, the perturbation variable is introduced at the highest possible degree, in every polynomial. Our method, on the other hand, avoids perturbation in many cases. <p> Variables among the same block are degree ordered, and across the blocks, they are lexicographically ordered. (e) Mac/GCP : Time taken to compute the Macaulay resultant (GCP when Macaulay matrix is singular <ref> [3] </ref>) using MAPLE on a SPARCstation 10. A (*) indicates that either the program went on for more than a day, or it ran out of space. <p> Attempt was made to compute the Macaulay resultant (GCP in case the Macaulay matrix was singular <ref> [3] </ref>) on MAPLE, but none of the GCP computations (examples 1, 2 and 4) ever finished. In all those cases, the computation ran for upto a day before running out of space.
Reference: [4] <author> Cayley, A., </author> <title> On the theory of elimination. </title> <journal> Cambridge and Dublin Mathematical Journal, </journal> <volume> III, 1865, </volume> <pages> 210-270. </pages>
Reference-contexts: The main result reported in Dixon's original paper [7] was a method to obtain the resultant of a set of three generic bidegree polynomials. This is a generalization of Cayley's formulation <ref> [4] </ref> of Bezout's efficient method for computing the resultant of two univariate polynomials. Dixon wrote that his method generalized to any n + 1 generic ndegree 1 polynomials in n variables. That is, his method gives the resultant of n + 1 generic ndegree polynomials. <p> A detailed exposition of Dixon's method can be found in [12]. 2.1 Cayley's Method for Two Polynomials in One Variable Even though the analysis in this section was developed by Cayley in <ref> [4] </ref>, we will mostly use Dixon's name while developing the notation so that a uniform notation can be carried to the generalization that is presented in the next subsection. <p> Hence if F has a common affine zero, then E has a nontrivial solution, implying that the determinant of D is zero. This gives a necessary condition on the coefficients of p 1 and p 2 for them to have a common zero. It was proved by Cayley in <ref> [4] </ref> that vanishing of the de-terminant of D, the Dixon resultant of F , is a necessary and sufficient condition for F to have a nontrivial common projective zero.
Reference: [5] <author> Chionh E., </author> <title> Base points, resultants, and the implicit representation of rational Surfaces. </title> <type> Ph. D. thesis, </type> <institution> Dept. Comp. Sci., Univ. of Waterloo, </institution> <year> 1990. </year>
Reference-contexts: As a consequence, the Dixon resultant vanishes identically, without providing any information about the common solutions of equations. This is perhaps the reason that Dixon's method has not been widely used, even though it is quite efficient. Chionh in <ref> [5] </ref> suggested using perturbation of certain coefficients to obtain nonzero conditions, but this is a nonautomatic method and requires human expertise. <p> Moreover, unlike perturbation techniques [3], the proposed method does not introduce any new variable and terms into the system of polynomials. Because of this, computation is not made any more difficult. Finally, unlike successive elimination techniques and perturbation techniques of <ref> [5] </ref>, our method is fully automatic and does not require any human intervention. We successfully proved many nontrivial algebraic and geometric identities and theorems within a few minutes (the maximum time for any example was less than 9 minutes) using a naive implementation of our algorithm in MAPLE.
Reference: [6] <author> Chou, S.-C., Gao, X.-S., </author> <title> Methods for Mechanical Geometry Formula Deriving. </title> <booktitle> Proc. ISSAC 1990, </booktitle> <publisher> ACM press, </publisher> <year> 1990. </year>
Reference: [7] <author> Dixon, A.L., </author> <title> The eliminant of three quantics in two independent variables. </title> <journal> Proc. London Mathematical Society, </journal> <volume> 6, </volume> <year> 1908, </year> <pages> 468-478. </pages>
Reference-contexts: Dixon's method is an efficient method to simultaneously eliminate variables from a system of nonhomogeneous polynomial equations, but unfortunately, it does not work for most algebraic and geometric problems. The main result reported in Dixon's original paper <ref> [7] </ref> was a method to obtain the resultant of a set of three generic bidegree polynomials. This is a generalization of Cayley's formulation [4] of Bezout's efficient method for computing the resultant of two univariate polynomials. <p> In fact, Bezout matrix coincides with the Dixon matrix for the univariate case. 2.2 Dixon's Generalization to Two and More Vari ables Dixon explicitly generalized Cayley's method presented in the previous subsection to the two variable case in <ref> [7] </ref>, but it can be easily generalized to any number of variables (and Dixon alluded to this), so we present this generalization under Dixon's name too. <p> This gives a necessary condition on the coefficients of p 1 ; ; p n+1 for them to have a common zero. As before, D the Dixon matrix and its determinant the Dixon resultant. It was proved by Dixon in <ref> [7] </ref> that for n + 1 generic ndegree polynomials in n variables, vanishing of the Dixon resultant is a necessary and sufficient condition for them to have a nontrivial projective zero, or a necessary condition for the existence of an affine zero. Moreover, det (D) is not identically zero.
Reference: [8] <author> Gao, X.-S., Wang, D.-K., </author> <title> On the Automatic Derivation of a Set of Geometric Formulae. </title> <booktitle> Mathematics Mechanization Research Preprints No. </booktitle> <volume> 8, </volume> <year> 1992, </year> <pages> 26-37, </pages> <institution> Academia Sinica, China. </institution>
Reference-contexts: This example was again posed in <ref> [8] </ref> where they solved this problem, and we have presented it exactly in the same way. <p> The total computation took 501 seconds. After removing extraneous factors, the smallest necessary condition was obtained and it contains 330 terms. The result is the same as the one reported in <ref> [8] </ref>. Since the expression is of degree 20 in a, the triangle cannot be constructed using a compass and a ruler, given a i ; a e and b e (see corollary 2 of Theorem 5.4.1 in [10]). Gao and Wang in [8] reported that they solved the problem by successively <p> is the same as the one reported in <ref> [8] </ref>. Since the expression is of degree 20 in a, the triangle cannot be constructed using a compass and a ruler, given a i ; a e and b e (see corollary 2 of Theorem 5.4.1 in [10]). Gao and Wang in [8] reported that they solved the problem by successively eliminating b and c using a combination of pseudo division and Sylvester's resultant computation. They took about 19 hours on their implementation in lisp on a SUN 4 workstation.
Reference: [9] <author> Gerber, L., </author> <title> The Orthocentric Simplex as an Extreme Simplex. </title> <journal> Pacific Journal of Mathematics 56, </journal> <year> 1975, </year> <pages> 97-111. </pages>
Reference-contexts: It has been established in <ref> [9] </ref> that if there exist parameters x, y, z and w which satisfy the following four equations: yz + zw + wy a = 0 wx + xy + yw c = 0 then the tetrahedron is an orthocentric tetrahedron and hence the one with the maximum volume for these surface
Reference: [10] <author> Herstein, I. N., </author> <title> Topics in Algebra Second Edition John Wiley & Sons, </title> <publisher> Inc., </publisher> <address> USA, </address> <year> 1975. </year>
Reference-contexts: bisectors, can one draw the triangle using only a compass and a ruler? This is possible if and only if the expression involving a; a i ; a e and b e is of degree 2 m in a for some integral m (see corollary 2 of Theorem 5.4.1 in <ref> [10] </ref>). This example was again posed in [8] where they solved this problem, and we have presented it exactly in the same way. <p> The result is the same as the one reported in [8]. Since the expression is of degree 20 in a, the triangle cannot be constructed using a compass and a ruler, given a i ; a e and b e (see corollary 2 of Theorem 5.4.1 in <ref> [10] </ref>). Gao and Wang in [8] reported that they solved the problem by successively eliminating b and c using a combination of pseudo division and Sylvester's resultant computation. They took about 19 hours on their implementation in lisp on a SUN 4 workstation.
Reference: [11] <author> Heymann, W. </author> <title> Problem der Winkehalbierenden Ztschr. </title> <journal> f. Math. and Phys. </journal> <volume> No. 35, </volume> <pages> 1890. </pages>
Reference-contexts: The objective is to express a in terms of a i , a e and b e . This problem was first posed by Heymann in <ref> [11] </ref>.
Reference: [12] <author> Kapur, D., Lakshman, Y., </author> <title> Elimination Methods: an Introduction. Symbolic and Numerical Computation for Artificial Intelligence Donald, </title> <editor> Kapur and Mundy (eds.), </editor> <publisher> Academic Press, </publisher> <year> 1992. </year>
Reference-contexts: In the subsection following that, we describe an extension by Dixon which gives a general method to determine resultant of n + 1 generic ndegree polynomials in n variables. A detailed exposition of Dixon's method can be found in <ref> [12] </ref>. 2.1 Cayley's Method for Two Polynomials in One Variable Even though the analysis in this section was developed by Cayley in [4], we will mostly use Dixon's name while developing the notation so that a uniform notation can be carried to the generalization that is presented in the next subsection.
Reference: [13] <author> Manocha D., Canny J.F., </author> <title> Multipolynomial Resultant Algorithms. </title> <type> Tech. Report, </type> <institution> University of California, Berkeley, </institution> <year> 1991. </year>
Reference-contexts: No attempt was made to optimize Maple code. We believe the algorithm can be made much faster using interpolation techniques for computing determinants as reported by Canny and Manocha in <ref> [13] </ref>. Two geometric identities derived using the algorithm are presented in this section. A few more identities will be presented without details in a later section. <p> In particular, there is a need to further understand Dixon's method in the general case. Determinant computations of matrices with polynomial entries are a major bottleneck in the method. Fast methods based on interpolation, similar to those in <ref> [13] </ref>, need to be investigated in order to make Dixon's method more widely applicable. Acknowledgements : We would like to thank Laksh-man Y. N. for useful discussions.
Reference: [14] <author> W. Wu, </author> <title> On the decision Problem and the mechanization of theorem proving in elementary geometry, </title> <journal> Sci-entia Sinica, </journal> <volume> 21, </volume> <year> (1978), </year> <pages> 150-172. </pages> <note> Also in Bledsoe and Loveland, </note> <editor> eds., </editor> <title> Theorem Proving: After 25 years, </title> <journal> Contemporary Mathematics, </journal> <volume> 29, </volume> <pages> 213-234. </pages> <year> 1984. </year>
References-found: 14

