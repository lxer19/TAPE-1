URL: http://www.aic.nrl.navy.mil/~spears/papers/ece1_3.ps.gz
Refering-URL: http://www.cs.gmu.edu:80/research/gag/pubs.html
Root-URL: 
Title: E1.3 Recombination parameters implemented in many different ways. Some forms of recombination are more appropriate
Author: William M. Spears 
Keyword: E1.3.1 General Background  
Note: As stated earlier, recombination can be  are others. According to Booker c 1995 IOP Publishing Ltd and Oxford University Press Handbook of Evolutionary Computation E1.3:1  
Affiliation: Naval Research Laboratory  
Abstract: One operator that is often used in evolution strategies, genetic algorithms, and genetic programming is recombination, where material from two (or more) parents is used to create new offspring. There are numerous ways to implement recombination. This section will focus mainly on recombination operators that construct potentially useful solutions to a problem from smaller components (often called "building blocks"). Recombination operators that "blend" are discussed in section XXX. This section gives an overview of some of the motivation, issues, theory, and heuristics for "building block" recombination. Although Holland (1975) was not the first to suggest recombination in an evolutionary algorithm (EA) (e.g. see Fraser 1957 or Fogel et al 1966), he was the first to place theoretical emphasis on this operator. This emphasis stemmed from his work in adaptive systems, which resulted in the field of genetic algorithms and genetic programming. According to Holland, an adaptive system must persistently test and incorporate structural properties associated with better performance. The object, of course, is to find new structures which have a high probability of improving performance significantly. Holland concentrated on schemata, which provide a basis for associating combinations of attributes with potential for improving current performance. To see this, let us consider the schema AC##, defined over a fixed length chromosome of four genes, where each gene can take on one of three alleles fA, B, Cg. If "#" is defined to be a "don't care" (i.e. wildcard) symbol, the schema AC## represents all chromosomes that have an A for their first allele and a C for their second. Since each of the "#" symbols can be filled in with any one of the three alleles, this schema represents 3 2 = 9 chromosomes. Suppose every chromosome has a well-defined fitness value (also called "utility," "payoff," etc.). Now suppose there is a population of P individuals, p of which are members of the above schema. The "observed average fitness" of that schema is the average fitness of those p individuals in that schema. It is important to note that these individuals will also be members of other schemata, thus the population of P individuals contains instances of a large number of schemata (all of which have some observed fitness). Holland (1975) stated that a good heuristic is to generate new instances of those schemata whose observed fitness is higher than the average fitness of the whole population, since instances of those schemata are likely to exhibit superior performance. Suppose the schema AC## does in fact have a high observed fitness. The heuristic states that new samples (instances) of that schema should be generated. Selection (reproduction) does not produce new samples | but recombination can. The key aspect of recombination is that if one recombines two individuals that start with AC, their offspring must also start with AC. Thus one can retain what appears to be a promising building block (AC##), yet continue to test that building block in new contexts. 
Abstract-found: 1
Intro-found: 0
References-found: 0

