URL: http://www.cs.umd.edu/users/dwelch/Pubs/step_www.ps
Refering-URL: http://www.cs.umd.edu/users/dwelch/pubs.html
Root-URL: 
Email: dwelch@cs.umd.edu  purtilo@cs.umd.edu  
Title: Software Engineering Support for Reliably Interconnecting Legacy Virtual Environments  
Author: Don Welch James Purtilo 
Address: College Park, MD 20742  College Park, MD 20742  
Affiliation: Department of Computer Science University of Maryland  Institute for Advanced Computer Studies and Department of Computer Science University of Maryland  
Abstract: As the power and utility of virtual reality environments increases, so do the potential benefits found from combining several such environments. The U.S. Department of Defense currently uses over 2000 simulators, and has mandated that they all be inter-operable through its High Level Architecture. Modifying these legacy systems to interact through an abstract software layer presents the developer with a host of difficult software engineering issues. Not the least of which is how to build a system that will remain configured to provide realistic behavior in spite of system anomalies. This paper explores some of these issues such as coordinate translation and event mapping and gives our suggestion for automating the construction of an abstraction layer. It also examines how we keep an interconnected virtual environment properly configured regardless of system anomalies. We relate our successes to date in overcoming these problems by means of various automated tools. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> P. Astheimer, W. Felger, and S. Muller. </author> <title> Virtual Design: A generic VR System for Industrial Applications. </title> <journal> Computers and Graphics, </journal> <volume> 17(6) </volume> <pages> 671-677, </pages> <month> November/December </month> <year> 1993. </year>
Reference-contexts: The EM toolkit and DIVE environment are two of the best known systems that provide an environment for building the entire distributed VE. [12] [6] Virtual Design is another complete VE software engineering environment that also focuses on using a wide array of input data and hardware. <ref> [1] </ref> DGPSE+ is an experimental environment supporting distributed graphics support. [9] None of these systems supports the reuse of legacy VEs. This work draws on the experience with code generators, interconnection tools, and packagers.
Reference: [2] <author> C. Chen and J. Purtilo. </author> <title> Event Adaptation for Integrating Distributed Applications. </title> <booktitle> In Proceedings of the Conference on Software Engineering and Knowledge Engineering, </booktitle> <month> June </month> <year> 1995. </year>
Reference-contexts: This work draws on the experience with code generators, interconnection tools, and packagers. Hofmiester and Purtilo [7] have built the SURGEON system for dynamic reconfiguration and Chen and Purtilo <ref> [2] </ref> have built tools for mapping events in event based interconnected systems. The gluing together of disparate heterogeneous distributed systems forms the foundation on which we built this work. Using standard interconnection abstractions makes the development of a software engineering environment practical.
Reference: [3] <author> F. Cristian. </author> <title> Understanding Fault-Tolerant Distributed Systems. </title> <journal> Communications of the ACM, </journal> <volume> 34(2) </volume> <pages> 57-78, </pages> <month> Feb. </month> <year> 1991. </year>
Reference-contexts: Since our work in compensating reconfiguration results from our investigation of fault-tolerance, we have examined these techniques and found them too specialized for Compensating Reconfiguration problems. <ref> [3] </ref> Because of the time constraints imposed by virtual reality, we designed our Compensating Reconfiguration framework to trade-off between consistent state and reaction time. Fault-tolerance acts on the loss of some required service, where Compensating Reconfiguration handles losses as well as gains.
Reference: [4] <author> Defense Modeling and Simulation Office. </author> <title> High Level Architecture Interface Specification , Feb. </title> <note> 1997. Version 1.1. </note>
Reference: [5] <author> DIS Steering Committee. </author> <title> The DIS Vision, A Map to the Future of Distributed Simulation, </title> <month> May </month> <year> 1994. </year> <note> Version 1. 10 </note>
Reference: [6] <author> M. Green. </author> <title> Environment Manager. </title> <type> Technical report, </type> <institution> De--partment of Computing Science, University of Alberta, </institution> <month> Feb. </month> <year> 1994. </year>
Reference-contexts: The EM toolkit and DIVE environment are two of the best known systems that provide an environment for building the entire distributed VE. [12] <ref> [6] </ref> Virtual Design is another complete VE software engineering environment that also focuses on using a wide array of input data and hardware. [1] DGPSE+ is an experimental environment supporting distributed graphics support. [9] None of these systems supports the reuse of legacy VEs.
Reference: [7] <author> C. R. Hofmeister and J. M. Purtilo. </author> <title> Dynamic Reconfigure-ation of Distributed Programs. </title> <booktitle> In Proceedings of the 11th International Conference on Distrubuted Computing Systems, </booktitle> <pages> pages 560-571, </pages> <year> 1991. </year>
Reference-contexts: This work draws on the experience with code generators, interconnection tools, and packagers. Hofmiester and Purtilo <ref> [7] </ref> have built the SURGEON system for dynamic reconfiguration and Chen and Purtilo [2] have built tools for mapping events in event based interconnected systems. The gluing together of disparate heterogeneous distributed systems forms the foundation on which we built this work.
Reference: [8] <author> J. Kramer and J. Magee. </author> <title> The Evolving Philosophers Problem: Dynamic Change Management. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 16(11) </volume> <pages> 1293-1306, </pages> <month> Nov. </month> <year> 1990. </year>
Reference: [9] <author> Z. Pan, J. Shi, and M. Zhang. </author> <title> Distributed Graphics Support for Virtual Environments. </title> <journal> Computers and Graphics, </journal> <volume> 20(2) </volume> <pages> 191-197, </pages> <month> March/April </month> <year> 1996. </year>
Reference-contexts: two of the best known systems that provide an environment for building the entire distributed VE. [12] [6] Virtual Design is another complete VE software engineering environment that also focuses on using a wide array of input data and hardware. [1] DGPSE+ is an experimental environment supporting distributed graphics support. <ref> [9] </ref> None of these systems supports the reuse of legacy VEs. This work draws on the experience with code generators, interconnection tools, and packagers.
Reference: [10] <author> J. M. Purtilo. </author> <title> The POLYLITH Software Bus. </title> <journal> ACM Transactions on Programming Languages, </journal> <volume> 16 </volume> <pages> 151-174, </pages> <month> Jan. </month> <year> 1994. </year>
Reference: [11] <author> J. Siegel. </author> <title> CORBA Fudamentals and Programming. </title> <publisher> Wiley Computer Publishing Group, </publisher> <address> New York, </address> <year> 1996. </year>
Reference: [12] <author> Q. Wang, M. Green, and C. Shaw. </author> <title> EM An Environment Manager For Building Networked Virtual Environments. </title> <booktitle> In Proceedings of the IEEE Virtual Reality Annual International Symposium, </booktitle> <pages> pages 11-18, </pages> <address> Research Triangle Park, NC, </address> <month> March 11-15 </month> <year> 1995. </year> <month> 11 </month>
Reference-contexts: The EM toolkit and DIVE environment are two of the best known systems that provide an environment for building the entire distributed VE. <ref> [12] </ref> [6] Virtual Design is another complete VE software engineering environment that also focuses on using a wide array of input data and hardware. [1] DGPSE+ is an experimental environment supporting distributed graphics support. [9] None of these systems supports the reuse of legacy VEs.
References-found: 12

