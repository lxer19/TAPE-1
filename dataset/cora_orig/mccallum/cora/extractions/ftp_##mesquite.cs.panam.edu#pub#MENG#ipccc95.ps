URL: ftp://mesquite.cs.panam.edu/pub/MENG/ipccc95.ps
Refering-URL: http://www.cs.panam.edu/meng/pub.html
Root-URL: http://www.cs.panam.edu
Email: meng@panam.edu  
Title: Distributed Simulation in A Loosely Coupled Environment Using the TCP/IP Protocol  
Author: Xiannong Meng 
Keyword: Key words: parallel and distributed simulation, discrete event simulation, computer and communication systems  
Address: Edinburg, TX 78539  
Affiliation: Department of Mathematics and Computer Science University of Texas Pan American  
Abstract: We investigate in this paper the feasibility and the performance of two distributed simulation schemes in a loosely coupled multi-computer environment supported by the TCP/IP protocol. We compare the results of conservative and optimistic approach of distributed simulation of a bus based computer network. The results show that both approaches are effective even when implemented on a set of workstations connected by a local area network. The results also indicate that the optimistic approach performs better when the system being simulated is heavily loaded. One lesson learned from this research is that executing a parallel simulation on a uni-processor, multi-programmed computer results in degraded performance because of the synchronization overhead. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D.J. Baker, J.P. Hauser, </author> <title> and W.A. Thoet. A distributed simulation and prototyping testbed for radio communication networks. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 6(1), </volume> <month> January </month> <year> 1988. </year>
Reference-contexts: Mouftah and Sturgeon [9] discussed the design and implementation of DIS-DESNET, a distributed simulation package for general communication networks. The discussion was centered around multiprocessor environment. The tests were done on a two Sun-workstation network environment. Baker et. al. <ref> [1] </ref> described a package that simulates and prototypes radio communication networks in a loosely coupled environment. Carothers et.al. [2] studied explicitly the effect of communication overheads on the Time Warp performance.
Reference: [2] <author> Christopher Carothers, Richard Fujimoto, and Paul England. </author> <title> Effect of communication overheads on time warp performance: An experimental study. </title> <booktitle> In Proceedings of 1994 PADS Workshop, </booktitle> <year> 1994. </year>
Reference-contexts: The discussion was centered around multiprocessor environment. The tests were done on a two Sun-workstation network environment. Baker et. al. [1] described a package that simulates and prototypes radio communication networks in a loosely coupled environment. Carothers et.al. <ref> [2] </ref> studied explicitly the effect of communication overheads on the Time Warp performance. The study of distributed simulation of computer networks can be traced back to as early as late 1970s [4]. 4 Experiments In this section, we will describe in detail the experiments we conducted.
Reference: [3] <author> Arthur Chai and Sumit Ghosh. </author> <title> Modeling and distributed simulation of a broadband-isdn network. </title> <journal> IEEE Computer, </journal> <volume> 26(9), </volume> <month> September </month> <year> 1993. </year>
Reference-contexts: We will study the impact of this delay on the performance of the distributed simulation. 3 Related Works There have been many studies in simulating computer networks using distributed and parallel tech niques. Chai and Ghosh <ref> [3] </ref> presented a detailed study of distributed simulation of large scale Broadband-ISDN network in a set of loosely coupled parallel processors. They used up to 50 workstations connected through a regular network.
Reference: [4] <author> K.M. Chandy, V. Holmes, and J. Misra. </author> <title> Distributed simulation of networks. </title> <journal> Computer Networks, </journal> <volume> 3, </volume> <year> 1979. </year>
Reference-contexts: Carothers et.al. [2] studied explicitly the effect of communication overheads on the Time Warp performance. The study of distributed simulation of computer networks can be traced back to as early as late 1970s <ref> [4] </ref>. 4 Experiments In this section, we will describe in detail the experiments we conducted. The experiments were designed to run on a network of workstations connected by a local area network to study the feasibility of distributed simulation in a loosely coupled environment.
Reference: [5] <author> K.M. Chandy and J. Misra. </author> <title> Distribtued simulation: A case study in design and verification of distributed programs. </title> <journal> IEEE Transaction on Software Engineering, </journal> <volume> SE-5(5), </volume> <year> 1979. </year>
Reference-contexts: This paper describes a comparative study of the two distributed simulation schemes in a loosely coupled environment supported by the TCP/IP protocol. One is based on the conservative approach by Chandy and Misra <ref> [5] </ref>; the other based on the optimistic approach by Jefferson [7].
Reference: [6] <author> Richard Fujimoto. </author> <title> Parallel discrete event simulation. </title> <journal> Communications of ACM, </journal> <volume> 33(10), </volume> <month> Octo-bor </month> <year> 1990. </year>
Reference-contexts: 1 Introduction Recently, the theory and the technology of parallel and distributed simulation have made significant progresses [10], <ref> [6] </ref>, [8], [11]. In distributed simulation, the simulation tasks are divided into a number of logical processes or LP and distributed to a number of processors. These LPs can execute the simulation in parallel. Thus a significant speedup often can be achieved. <p> These LPs can execute the simulation in parallel. Thus a significant speedup often can be achieved. The correctness of the simulation is provided by the Local Causality Constraint <ref> [6] </ref> which states: fl This research was performed while the author was with the Computer Science Department of Bucknell University. The author would like to thank all the support from Bucknell University.
Reference: [7] <author> David R. Jefferson. </author> <title> Virtual time. </title> <journal> ACM Transac--tions on Programming Languages and Systems, </journal> <volume> 7(3), </volume> <month> July </month> <year> 1985. </year>
Reference-contexts: This paper describes a comparative study of the two distributed simulation schemes in a loosely coupled environment supported by the TCP/IP protocol. One is based on the conservative approach by Chandy and Misra [5]; the other based on the optimistic approach by Jefferson <ref> [7] </ref>. The main contribution of this paper is the study of the feasibility and the performance of distributed simulation in a loosely coupled environment using both conservative and optimistic approach, given that the logical system being simulated possesses some specific features.
Reference: [8] <author> Jayadev Misra. </author> <title> Distributed discrete-event simulation. Computing Survey, </title> <type> 18(1), </type> <month> March </month> <year> 1986. </year>
Reference-contexts: 1 Introduction Recently, the theory and the technology of parallel and distributed simulation have made significant progresses [10], [6], <ref> [8] </ref>, [11]. In distributed simulation, the simulation tasks are divided into a number of logical processes or LP and distributed to a number of processors. These LPs can execute the simulation in parallel. Thus a significant speedup often can be achieved.
Reference: [9] <author> H.T. Mouftah and R.P. Sturgeon. </author> <title> Distributed discrete event simulation for communication networks. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 8(9), </volume> <month> December </month> <year> 1990. </year>
Reference-contexts: They used up to 50 workstations connected through a regular network. The simulation is based on the conservative mechanism in that each logical model will execute up to the minimum clock in all its incoming links. Mouftah and Sturgeon <ref> [9] </ref> discussed the design and implementation of DIS-DESNET, a distributed simulation package for general communication networks. The discussion was centered around multiprocessor environment. The tests were done on a two Sun-workstation network environment.
Reference: [10] <author> David Nicol and Richard Fujimoto. </author> <title> Parallel simulation today. </title> <type> tech report pdes-survey, </type> <institution> College of William & Mary, Department of Computer Science, College of William & Mary, </institution> <address> Williams-burg, VA 23187, </address> <year> 1992. </year>
Reference-contexts: 1 Introduction Recently, the theory and the technology of parallel and distributed simulation have made significant progresses <ref> [10] </ref>, [6], [8], [11]. In distributed simulation, the simulation tasks are divided into a number of logical processes or LP and distributed to a number of processors. These LPs can execute the simulation in parallel. Thus a significant speedup often can be achieved.
Reference: [11] <author> Rhonda Righter and Jean Walrand. </author> <title> Distributed simulation of discrete event systems. </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> 77(1), </volume> <month> January </month> <year> 1989. </year>
Reference-contexts: 1 Introduction Recently, the theory and the technology of parallel and distributed simulation have made significant progresses [10], [6], [8], <ref> [11] </ref>. In distributed simulation, the simulation tasks are divided into a number of logical processes or LP and distributed to a number of processors. These LPs can execute the simulation in parallel. Thus a significant speedup often can be achieved.
Reference: [12] <author> Mischa Schwartz. </author> <title> Telecommunication Networks Protocols, Modeling and Anslysis. </title> <publisher> Addison-Wesley, </publisher> <year> 1987. </year>
Reference-contexts: Each LE has its own packet arrival stream, i.e. packets are generated at each of the LEs and destined for some other LE in the system which can be running on another PP. The communication protocol being simulated follows the basic 1-persistent CSMA/CD protocol <ref> [12] </ref>. Each computer listens to the network before it tries to send out a packet. When the network is idle, the packet can be transmitted. If the network is busy, the computer keeps listening until the network is free, when the packet can be sent.
References-found: 12

