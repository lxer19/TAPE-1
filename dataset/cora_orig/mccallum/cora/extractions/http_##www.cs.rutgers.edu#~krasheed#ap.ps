URL: http://www.cs.rutgers.edu/~krasheed/ap.ps
Refering-URL: http://athos.rutgers.edu/~shehata/papers.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: shehata@cs.rutgers.edu  
Title: An Adaptive Penalty Approach for Constrained Genetic-Algorithm Optimization  
Author: Khaled Rasheed 
Address: New Jersey New Brunswick, NJ 08903, USA  
Affiliation: Department of Computer Science Rutgers, The State University of  
Abstract: In this paper we describe a new adaptive penalty approach for handling constraints in genetic algorithm optimization problems. The idea is to start with a relatively small penalty coefficient and then increase it or decrease it on demand as the optimization progresses. Empirical results in several engineering design domains demonstrate the merit of the proposed approach.
Abstract-found: 1
Intro-found: 1
Reference: <author> Chapman, C. D. and M. J. </author> <month> Jakiela </month> <year> (1996). </year> <title> Genetic algorithm-based structural topology design with compliance and topology simplification considerations. </title> <journal> Journal of Mechanical Design 118(1), </journal> <pages> 89-98. </pages>
Reference-contexts: Several research efforts have applied genetic algorithms to engineering design optimization problems in a variety of domains, including control system design (Kundu and Kawata 1996), architectural and civil engineering design (Gero et al. 1997, Rosenman 1997), VLSI design (Lienig and Thu-lasiraman 1993), mechanical design <ref> (Chapman and Jakiela 1996, Deb 1997) </ref> and aircraft design (Obayashi et al. 1997). The idea of using a dynamic penalty coefficient was discussed in (Smith and Tate 1993). A dynamic approach was proposed and tested in a combinatorial optimization problem (the unequal area facility layout problem).
Reference: <editor> Deb, Kalyanmoy (1997). Geneas: </editor> <title> A robust optimal design technique for mechanical component design. </title> <booktitle> In: Evolutionary Algorithms in Engineering Applications. </booktitle> <pages> pp. 497-514. </pages> <publisher> Springer-Verlag. </publisher>
Reference: <author> Gelsey, Andrew, M. Schwabacher and Don Smith (1996). </author> <title> Using modeling knowledge to guide design space search. </title> <booktitle> In: Fourth International Conference on Artificial Intelligence in Design '96. </booktitle>
Reference-contexts: This section discusses our results in these domains. 4.1 Supersonic Transport Aircraft Design Our first domain concerns the conceptual design of supersonic transport aircraft. We summarize it briefly here; it is described in more detail in <ref> (Gelsey et al. 1996) </ref>. Figure 1 shows a diagram of a typical airplane automatically designed by our software system. The GA attempts to find a good design for a particular mission by varying the aircraft conceptual design parameters in Table 1 over a continuous range of values.
Reference: <author> Gero, John S., Vladimir A. Kazakov and Thorsten Schinier (1997). </author> <title> Genetic engineering and design problems. </title> <booktitle> In: Evolutionary Algorithms in Engineering Applications. </booktitle> <pages> pp. 47-68. </pages> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Several research efforts have applied genetic algorithms to engineering design optimization problems in a variety of domains, including control system design (Kundu and Kawata 1996), architectural and civil engineering design <ref> (Gero et al. 1997, Rosenman 1997) </ref>, VLSI design (Lienig and Thu-lasiraman 1993), mechanical design (Chapman and Jakiela 1996, Deb 1997) and aircraft design (Obayashi et al. 1997). The idea of using a dynamic penalty coefficient was discussed in (Smith and Tate 1993).
Reference: <author> Goldberg, David (1989). </author> <title> Genetic Algorithms in Search, Optimization, and Machine Learning. </title> <publisher> Addison-Wesley. </publisher> <address> Reading, Mass. </address>
Reference-contexts: 1 Introduction Genetic Algorithms (GAs) <ref> (Goldberg 1989) </ref> are search algorithms that mimic the behavior of natural selection. GAs attempt to find the best solution to some problem (e.g., the maximum of a function) by generating a collection (population) of potential solutions (individuals) to the problem.
Reference: <author> Haas, M., R. Elmquist and D. </author> <title> Sobel (1992). NAWC Inlet Design and Analysis (NIDA) Code, </title> <note> Final Report. UTRC Report R92-970037-1. </note>
Reference-contexts: The simulator used in this domain is a program called NIDA which was developed at United Technology Research Center (UTRC) as an inlet analysis/design tool <ref> (Haas et al. 1992) </ref>. The eight design parameters (all continuous valued) are given in Table 2, with coordinates given in terms of axial (x) and radial (r) positions.
Reference: <author> Kundu, </author> <title> Sourav and Seiichi Kawata (1996). AI in control system design using a new paradigm for design representation. </title> <booktitle> In: Fourth International Conference on Artificial Intelligence in Design '96. </booktitle>
Reference-contexts: Experimental results demonstrated the merit of using the new method in the domains of aircraft design, missile inlet design and the design of a membrane separation process. Several research efforts have applied genetic algorithms to engineering design optimization problems in a variety of domains, including control system design <ref> (Kundu and Kawata 1996) </ref>, architectural and civil engineering design (Gero et al. 1997, Rosenman 1997), VLSI design (Lienig and Thu-lasiraman 1993), mechanical design (Chapman and Jakiela 1996, Deb 1997) and aircraft design (Obayashi et al. 1997).
Reference: <author> Lienig, Jens and K. </author> <title> Thulasiraman (1993). A genetic algorithm for channel routing in VLSI circuits. </title> <booktitle> Evolutionary Computation 1(4), </booktitle> <pages> 293-311. </pages>
Reference-contexts: Several research efforts have applied genetic algorithms to engineering design optimization problems in a variety of domains, including control system design (Kundu and Kawata 1996), architectural and civil engineering design (Gero et al. 1997, Rosenman 1997), VLSI design <ref> (Lienig and Thu-lasiraman 1993) </ref>, mechanical design (Chapman and Jakiela 1996, Deb 1997) and aircraft design (Obayashi et al. 1997). The idea of using a dynamic penalty coefficient was discussed in (Smith and Tate 1993).
Reference: <author> Michalewicz, </author> <title> Zbigniew (1996). Genetic Algorithms + Data Structures = Evolution Programs. </title> <publisher> Springer-Verlag. </publisher> <address> New York. </address>
Reference-contexts: Several forms of penalty functions have been proposed in the GA literature. A thorough survey can be found in <ref> (Michalewicz 1996) </ref>. These include: 1. Rejection of infeasible solutions (the death penalty). 2. Using a mapping function so that all feasible solutions will have fitness values that are better than the fitness value of any infeasible solution (Powell and Skolnick 1993). 3.
Reference: <author> Obayashi, S., Y. Yamaguchi and T. </author> <title> Nakamura (1997). Mul-tiobjective genetic algorithm for multidisciplinary design of transonic wing platform. </title> <journal> Journal of Aircraft 34(5), </journal> <pages> 690-693. </pages>
Reference-contexts: have applied genetic algorithms to engineering design optimization problems in a variety of domains, including control system design (Kundu and Kawata 1996), architectural and civil engineering design (Gero et al. 1997, Rosenman 1997), VLSI design (Lienig and Thu-lasiraman 1993), mechanical design (Chapman and Jakiela 1996, Deb 1997) and aircraft design <ref> (Obayashi et al. 1997) </ref>. The idea of using a dynamic penalty coefficient was discussed in (Smith and Tate 1993). A dynamic approach was proposed and tested in a combinatorial optimization problem (the unequal area facility layout problem).
Reference: <author> Powell, D. and M. </author> <title> Skolnick (1993). Using genetic algorithms in engineering design optimization with nonlinear constraints. </title> <booktitle> In: Proceedings of the Fifth International Conference on Genetic Algorithms. </booktitle> <publisher> Morgan Kaufmann. </publisher> <pages> pp. 424-431. </pages>
Reference-contexts: A thorough survey can be found in (Michalewicz 1996). These include: 1. Rejection of infeasible solutions (the death penalty). 2. Using a mapping function so that all feasible solutions will have fitness values that are better than the fitness value of any infeasible solution <ref> (Powell and Skolnick 1993) </ref>. 3. Using one or more multiplicative coefficients (as will be discussed shortly). The first two approaches can make the search extremely difficult in non-convex feasible regions especially if the op tima are near the infeasible region. <p> We also demonstrate the utility of the proposed approach in a benchmark domain that have been used in several engineering design optimization studies <ref> (Powell and Skolnick 1993) </ref>. The remainder of this paper first presents a more detailed description of the new penalty method. We then present a number of experiments to demonstrate the utility of our penalty method realistic engineering tasks. <p> Thus the space is partitioned into feasible and infeasible points. All points are evaluable. A more detailed description of this domain can be found in (Sandgren 1977). Optimization in this domain proved to be very difficult for conventional numerical optimizers and traditional GAs <ref> (Powell and Skolnick 1993) </ref>. The main reason for this difficulty was the fact that 11 out of the 13 inequality constraints are active at the global optimum. Thus an intelligent constraint handling approach is very important. Experiments were done using five random starting populations.
Reference: <author> Rasheed, </author> <title> Khaled (1998). GADO: A genetic algorithm for continuous design optimization. </title> <type> Technical Report DCS-TR-352. </type> <institution> Department of Computer Science, Rutgers University. New Brunswick, NJ. </institution> <type> Ph.D. Thesis, </type> <note> http://www.cs.rutgers.edu/~shehata/thesis.ps. </note>
Reference-contexts: It should be noted that the superiority of the GADO optimization approach to traditional optimization methods (including gradient based methods) in these domains has already been established in <ref> (Rasheed 1998) </ref>. In this research we focused on the effect of the proposed penalty method on the GA performance, rather than the overall GA behavior. This section discusses our results in these domains. 4.1 Supersonic Transport Aircraft Design Our first domain concerns the conceptual design of supersonic transport aircraft.
Reference: <author> Rasheed, </author> <title> Khaled and Haym Hirsh (1997). Using case-based learning to improve genetic-algorithm-based design optimization. </title> <booktitle> In: Proceedings of the Seventh International Conference on Genetic Algorithms. </booktitle> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: We then present a number of experiments to demonstrate the utility of our penalty method realistic engineering tasks. We conclude the paper with a discussion of related efforts and future work. 2 GA Architecture GADO, the GA used in this research is described in detail in <ref> (Rasheed et al. 1997, Rasheed 1998) </ref>. Each individual in the GA population represents a parametric description of an artifact, such as an aircraft, or a process, with each parameter taking on a value in some continuous interval. <p> The GA stops when either the maximum number of evaluations has been exhausted or the population completely loses diversity and practically converges to a single point in the search space. The GA architecture also includes a screening module (SM) and a diversity maintenance module (DMM) <ref> (Rasheed and Hirsh 1997) </ref> which can both be turned on or off. The SM saves time by preventing the GA from evaluating points that are close to previously encountered bad points. It uses a case based learning technique to do this.
Reference: <author> Rasheed, Khaled, Haym Hirsh and Andrew Gelsey (1997). </author> <title> A genetic algorithm for continuous design space search. </title> <booktitle> Artificial Intelligence in Engineering 11(3), </booktitle> <pages> 295-305. </pages> <publisher> Elsevier Science Ltd. </publisher>
Reference-contexts: We then present a number of experiments to demonstrate the utility of our penalty method realistic engineering tasks. We conclude the paper with a discussion of related efforts and future work. 2 GA Architecture GADO, the GA used in this research is described in detail in <ref> (Rasheed et al. 1997, Rasheed 1998) </ref>. Each individual in the GA population represents a parametric description of an artifact, such as an aircraft, or a process, with each parameter taking on a value in some continuous interval. <p> The GA stops when either the maximum number of evaluations has been exhausted or the population completely loses diversity and practically converges to a single point in the search space. The GA architecture also includes a screening module (SM) and a diversity maintenance module (DMM) <ref> (Rasheed and Hirsh 1997) </ref> which can both be turned on or off. The SM saves time by preventing the GA from evaluating points that are close to previously encountered bad points. It uses a case based learning technique to do this.
Reference: <author> Rosenman, M. A. </author> <year> (1997). </year> <title> The generation of form using an evolutionary approach. </title> <booktitle> In: Evolutionary Algorithms in Engineering Applications. </booktitle> <pages> pp. 69-86. </pages> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Several research efforts have applied genetic algorithms to engineering design optimization problems in a variety of domains, including control system design (Kundu and Kawata 1996), architectural and civil engineering design <ref> (Gero et al. 1997, Rosenman 1997) </ref>, VLSI design (Lienig and Thu-lasiraman 1993), mechanical design (Chapman and Jakiela 1996, Deb 1997) and aircraft design (Obayashi et al. 1997). The idea of using a dynamic penalty coefficient was discussed in (Smith and Tate 1993).
Reference: <author> Sandgren, E. </author> <year> (1977). </year> <title> The utility of nonlinear programming algorithms. </title> <type> Technical report. </type> <institution> Purdue University. </institution> <type> Ph.D. Thesis. </type>
Reference-contexts: The problem has 13 continuous domain design variables and 13 inequality constraints. Thus the space is partitioned into feasible and infeasible points. All points are evaluable. A more detailed description of this domain can be found in <ref> (Sandgren 1977) </ref>. Optimization in this domain proved to be very difficult for conventional numerical optimizers and traditional GAs (Powell and Skolnick 1993). The main reason for this difficulty was the fact that 11 out of the 13 inequality constraints are active at the global optimum.
Reference: <author> Smith, Alice and David Tate (1993). </author> <title> Genetic optimization using a penalty function. </title> <booktitle> In: Proceedings of the Fifth International Conference on Genetic Algorithms. </booktitle> <publisher> Mor-gan Kaufmann. </publisher> <pages> pp. 499-503. </pages>
Reference-contexts: The idea of using a dynamic penalty coefficient was discussed in <ref> (Smith and Tate 1993) </ref>. A dynamic approach was proposed and tested in a combinatorial optimization problem (the unequal area facility layout problem).
Reference: <author> Zha, G.-C., D. Smith, M. Schwabacher, K. Rasheed, A. Gelsey, D. Knight and M. </author> <title> Haas (1997). High performance supersonic missile inlet design using automated optimization. </title> <journal> Journal of Aircraft 34(6), </journal> <volume> 697. </volume>
Reference-contexts: We summarize it briefly here; it is described in more detail in <ref> (Zha et al. 1997) </ref>. The missile inlet designed is an axisymmetric mixed compression inlet that cruises at Mach 4 at 60000 feet altitude.
References-found: 18

