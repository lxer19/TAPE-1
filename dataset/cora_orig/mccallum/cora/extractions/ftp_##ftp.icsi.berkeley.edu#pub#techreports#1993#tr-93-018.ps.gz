URL: ftp://ftp.icsi.berkeley.edu/pub/techreports/1993/tr-93-018.ps.gz
Refering-URL: http://www.icsi.berkeley.edu/techreports/1993.html
Root-URL: http://www.icsi.berkeley.edu
Title: Navigation Without Perception of Coordinates and Distances exhaustive search without using a compass, with the
Phone: 1-510-642-4274 FAX 1-510-643-7684  
Author: Armin Hemmerling 
Note: It is shown how the target point can be reached by  D-O-2200 Greifswald, Jahnstr. 15 a, Germany (hemmerling@math-inf.uni-greifswald.dbp.de). Parts of this work were done while the author was visiting the ICSI.  
Date: March 1993  
Address: I 1947 Center Street Suite 600 Berkeley, California 94704  
Affiliation: INTERNATIONAL COMPUTER SCIENCE INSTITUTE  Ernst Moritz Arndt University Greifswald, Department of Mathematics and Computer Science,  
Pubnum: TR-93-018  
Abstract: We consider the target-reaching problem in plane scenes for a point robot which has a tactile sensor and can locate the target ray. It might have a compass, too, but it is not able to perceive the coordinates of its position nor to measure distances. The complexity of an algorithm is measured by the number of straight moves until reaching the target, as a function of the number of vertices of the (polygonal) scene. The decision problem, to recognize if the target cannot be reached because it belongs to an obstacle, cannot be solved by our type of robot. If the behaviour of a robot without compass is periodic in a homogeneous environment, it cannot solve the target-reaching problem. 
Abstract-found: 1
Intro-found: 1
Reference: [A] <author> G. Asser. </author> <title> Bemerkungen zum Labyrinth-Problem. </title> <type> EIK 15 (3), </type> <year> 1977, </year> <pages> 203-216. </pages>
Reference-contexts: Therefore, our point of view corresponds more to labyrinth theory than to computational geometry. Indeed, most of the techniques used in the present paper come from the automaton-oriented labyrinth research presented in the monograph [H]. Especially the method of rotation counting (regular swinging) is essentially used in <ref> [A] </ref> already, where it really shows the power of the compass, whereas the search procedure in [BK] is also based on rudiments of length measuring. 1 The present paper is organized as follows. <p> It is mainly based on rotation counting, a method which, for rectilinear mazes, was already used in <ref> [A] </ref> and has been developed in detail in [H]. The rotation index rin (p) of a polygonal path p = (P 1 ; ; P k ) gives the angle by which the direction of move is changed in the course of running through p. <p> In this case, the target ray perceptible by the robot is perpendicular to the target wall. It is not hard to modify the exhaustive search correspondingly. Moreover, now the rotation-counting method correponds straightforwardly to the regular-swinging method used to escape from (rectilinear) two-dimensional mazes, see <ref> [A] </ref>, [H]. So, for the wall problem, we obtain results which are analogous to those for the target-point task. More important is the problem to reach a target point in an included scene (P; T; S; p).
Reference: [B] <author> L. </author> <title> Budach. Automata and labyrinths. </title> <journal> Math. </journal> <volume> Nachrichten 86, </volume> <year> 1978, </year> <pages> 195-282. </pages>
Reference-contexts: We will show that such robots are not able to solve the target-reaching problem if their behaviour in certain homogeneous environments becomes periodic. Especially, this holds for finite automata, but also for 1-counter and even for pushdown automata. The claim for finite automata can be obtained from Budach's result <ref> [B] </ref> that no finite automaton can escape from all two-dimensional mazes, see also [H]. The self-contained proof of the general result is rather lengthy and will be sketched here only. The reader, who is preferably interested in target-reaching algorithms, should skip to the next section.
Reference: [BBFY] <author> E. Bar-Eli, P. Berman, A. Fiat, P. Yan. </author> <title> On-line navigation in a room. </title> <booktitle> 3rd SODA, </booktitle> <year> 1992, </year> <pages> 237-249. </pages>
Reference-contexts: In most of these papers the off-line point of view is taken, i.e. the robots completely know (a map of) the scene in which they have to work. During the last five years, the interest in on-line algorithms of motion planning has grown, as the papers <ref> [BBFY] </ref> , [BRS] , [K] , [LS] , [PY] and their references show. Here the robot knows only that part of the scene which has been perceptible up to the current step.
Reference: [BK] <author> M. Blum, D. Kozen. </author> <title> On the power of compass. </title> <booktitle> 19th FOCS, </booktitle> <year> 1978, </year> <pages> 132-142. </pages>
Reference-contexts: Indeed, most of the techniques used in the present paper come from the automaton-oriented labyrinth research presented in the monograph [H]. Especially the method of rotation counting (regular swinging) is essentially used in [A] already, where it really shows the power of the compass, whereas the search procedure in <ref> [BK] </ref> is also based on rudiments of length measuring. 1 The present paper is organized as follows. After introducing the basic notations in Section 2, we show how the problems can easily be solved by a robot which perceives the coordinates of its position. <p> The boundaries of the scene are simply closed like above. Of course, a complete proof of the theorem would require a detailed treatment of the method of cutting and pasting. Also the reduction modulo trees should be mentioned and applied. Since these techniques have extensively been used in <ref> [BK] </ref> and [H], here we close with an example for a trap construction. Let f = d (abdaa) ! . Figur 6 a) shows the schema of the trap which consist of five X-fragments. The starting point lies in the lower left fragment. <p> In <ref> [BK] </ref> also the wall problem has been considered. Here the target is a straight line, let's say in north-south direction, on the right of the starting point and the obstacles. In this case, the target ray perceptible by the robot is perpendicular to the target wall.
Reference: [BRS] <author> A. Blum, P. Raghavan, B. Schieber. </author> <title> Navigation in unfamiliar geometric terrain. </title> <booktitle> 23rd STOC, </booktitle> <year> 1991, </year> <pages> 494-504. </pages>
Reference-contexts: In most of these papers the off-line point of view is taken, i.e. the robots completely know (a map of) the scene in which they have to work. During the last five years, the interest in on-line algorithms of motion planning has grown, as the papers [BBFY] , <ref> [BRS] </ref> , [K] , [LS] , [PY] and their references show. Here the robot knows only that part of the scene which has been perceptible up to the current step. <p> For example, a robot with a compass can store the angle of the ray ! ST , at the starting point S. This causes a breakpoint of move whenever the current position belongs to the straight line $ Following <ref> [BRS] </ref>, we measure the size of a scene by the number of vertices of the obstacles. <p> H H H @ @ ~ ~ ~ ~ ~ ~ E E E E E E D D D D D fi fi fi C C C C C fl fl fl fl fl fl fl fl E E E E E E E ` ` ` S In <ref> [BRS] </ref>, it is shown how to construct a (6 k + 4)-vertex scene with only one obstacle, for any k 2, such that every on-line algorithm (even if it perceives the currently visible part of the scene) needs more than 3 (k 2) steps up to reaching the target. <p> A more detailed view could consider the lengths of paths. Moreover, the competitive ratio, as mentioned in Section 2, should be investigated, even if it cannot be bounded by a constant. In <ref> [BRS] </ref>, a corresponding "figure of merit" for a robot has been proposed. 28 Acknowledgement I am grateful to Rolf Klein both for the encouragement to try the bridge from labyrinth problems to on-line motion planning, and for the stimulating discussions from which some basic ideas of this paper arose.
Reference: [DKP] <author> X. Deng, T. Kameda, C. Papadimitriou. </author> <title> How to learn an unknown environment. </title> <booktitle> 32nd FOCS, </booktitle> <year> 1991, </year> <pages> 298-303. </pages>
Reference: [H] <author> A. Hemmerling. </author> <title> Labyrinth problems labyrinth-searching abilities of automata. Teubner-Texte zur Mathematik v. </title> <booktitle> 114, Leipzig 1989. </booktitle>
Reference-contexts: We will even see that the task becomes nearly trivial under those suppositions. Therefore, our point of view corresponds more to labyrinth theory than to computational geometry. Indeed, most of the techniques used in the present paper come from the automaton-oriented labyrinth research presented in the monograph <ref> [H] </ref>. Especially the method of rotation counting (regular swinging) is essentially used in [A] already, where it really shows the power of the compass, whereas the search procedure in [BK] is also based on rudiments of length measuring. 1 The present paper is organized as follows. <p> Especially, this holds for finite automata, but also for 1-counter and even for pushdown automata. The claim for finite automata can be obtained from Budach's result [B] that no finite automaton can escape from all two-dimensional mazes, see also <ref> [H] </ref>. The self-contained proof of the general result is rather lengthy and will be sketched here only. The reader, who is preferably interested in target-reaching algorithms, should skip to the next section. The homogeneous environments we will consider here are grids composed of so-called X-fragments. <p> The concept of automaton working in half-edge-labelled graphs (compass labyrinths) is straigtforwardly defined, for details see <ref> [H] </ref>. An automaton in such a regular graph is working autonomously, since it always gets the same input information. <p> Of course, a complete proof of the theorem would require a detailed treatment of the method of cutting and pasting. Also the reduction modulo trees should be mentioned and applied. Since these techniques have extensively been used in [BK] and <ref> [H] </ref>, here we close with an example for a trap construction. Let f = d (abdaa) ! . Figur 6 a) shows the schema of the trap which consist of five X-fragments. The starting point lies in the lower left fragment. <p> It is mainly based on rotation counting, a method which, for rectilinear mazes, was already used in [A] and has been developed in detail in <ref> [H] </ref>. The rotation index rin (p) of a polygonal path p = (P 1 ; ; P k ) gives the angle by which the direction of move is changed in the course of running through p. <p> Theorem 5.1 is a discrete version of the Riemann-Hopf theorem of turning tangents which is well-known from differential geometry. An elementary proof for the rectilinear case can be found in <ref> [H] </ref>. Here we will use it without any proof. 2 A polygonal path p in S is said to be boundary-following if it is a subpath of some boundary p i (with the same orientation). <p> In this case, the target ray perceptible by the robot is perpendicular to the target wall. It is not hard to modify the exhaustive search correspondingly. Moreover, now the rotation-counting method correponds straightforwardly to the regular-swinging method used to escape from (rectilinear) two-dimensional mazes, see [A], <ref> [H] </ref>. So, for the wall problem, we obtain results which are analogous to those for the target-point task. More important is the problem to reach a target point in an included scene (P; T; S; p). <p> On the other hand, an included scene naturally determines a finite, connected, plane graph such that the robot can implement graph-searching algorithms. And for finite, connected, (rectlinearly) embedded graphs there is a searching algorithm based on rotation counting, see <ref> [H] </ref>. Unfortunately, it is not immediately applicable to our problem since it uses a pebble, i.e. a marker for vertices of the graph.
Reference: [HA] <author> Y.K. Hwang, N. Ahuja. </author> <title> Gross motion planning a survey. </title> <journal> ACM Computing Surveys v. </journal> <volume> 24, 3, </volume> <year> 1992, </year> <pages> 219-291. </pages>
Reference-contexts: 1 Introduction Problems of algorithmic motion planning or navigation in environments with obstacles have been studied in several variants and contexts. Especially this has been done within the framework of computational geometry, for surveys see [Y] and <ref> [HA] </ref>. In most of these papers the off-line point of view is taken, i.e. the robots completely know (a map of) the scene in which they have to work.
Reference: [K] <author> R. Klein. </author> <title> Walking an unknown street with bounded detour. </title> <booktitle> 32nd FOCS, </booktitle> <year> 1991, </year> <pages> 304-313. </pages>
Reference-contexts: During the last five years, the interest in on-line algorithms of motion planning has grown, as the papers [BBFY] , [BRS] , <ref> [K] </ref> , [LS] , [PY] and their references show. Here the robot knows only that part of the scene which has been perceptible up to the current step.
Reference: [LS] <author> V.J. Lumelsky, A.A. Stepanov. </author> <title> Path-planning strategies for a mobile automaton moving amidst unknown obstacles of arbitrary shape. </title> <journal> Algorithmica 1987, </journal> <volume> 2, </volume> <pages> 403-430. </pages>
Reference-contexts: During the last five years, the interest in on-line algorithms of motion planning has grown, as the papers [BBFY] , [BRS] , [K] , <ref> [LS] </ref> , [PY] and their references show. Here the robot knows only that part of the scene which has been perceptible up to the current step. But it is usually supposed that it can perceive the coordinates of its current position, sometimes also of the visible parts of the obstacles. <p> A corresponding algorithm is due to <ref> [LS] </ref>, the correctness and the estimation of complexity can easiliy be verified. We sketch here a slightly modified version, for a scene S. Figure 3 illustrates its work if the target ist reachable: 1.
Reference: [PY] <author> C.H. Papadimitriou, M. Yannakakis. </author> <title> Shortest path without a map. </title> <note> TCS 84, 1991, 127-150. (see also 16th ICALP, </note> <year> 1989, </year> <pages> 610-620) </pages>
Reference-contexts: During the last five years, the interest in on-line algorithms of motion planning has grown, as the papers [BBFY] , [BRS] , [K] , [LS] , <ref> [PY] </ref> and their references show. Here the robot knows only that part of the scene which has been perceptible up to the current step. But it is usually supposed that it can perceive the coordinates of its current position, sometimes also of the visible parts of the obstacles. <p> In <ref> [PY] </ref> it is 5 proved that the competitive ratio of the number of steps done by an on-line algorithm to the number of steps of a shortest path connecting the starting point with the target cannot be bounded by a constant.
Reference: [Y] <author> C.-K. Yap. </author> <title> Algorithmic motion planning. In: Algorithmic and geometric aspects of robotics. </title> <publisher> v. </publisher> <address> 1, Hillsdale and London 1987, </address> <pages> 95-143. 29 </pages>
Reference-contexts: 1 Introduction Problems of algorithmic motion planning or navigation in environments with obstacles have been studied in several variants and contexts. Especially this has been done within the framework of computational geometry, for surveys see <ref> [Y] </ref> and [HA]. In most of these papers the off-line point of view is taken, i.e. the robots completely know (a map of) the scene in which they have to work.
References-found: 12

