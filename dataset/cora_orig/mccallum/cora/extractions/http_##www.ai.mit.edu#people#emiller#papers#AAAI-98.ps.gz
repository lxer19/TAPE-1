URL: http://www.ai.mit.edu/people/emiller/papers/AAAI-98.ps.gz
Refering-URL: http://www.ai.mit.edu/projects/lv/publications/
Root-URL: 
Email: emiller@ai.mit.edu viola@ai.mit.edu  
Title: Ambiguity and Constraint in Mathematical Expression Recognition  
Author: Erik G. Miller and Paul A. Viola 
Note: To Appear in the Proceedings of AAAI-98  
Address: 545 Technology Square, Office 707 Cambridge, MA 02139  
Affiliation: Massachusetts Institute of Technology Artificial Intelligence Laboratory  
Abstract: The problem of recognizing mathematical expressions differs significantly from the recognition of standard prose. While in prose significant constraints can be put on the interpretation of a character by the characters immediately preceding and following it, few such simple constraints are present in a mathematical expression. In order to make the problem tractable, effective methods of recognizing mathematical expressions will need to put intelligent constraints on the possible interpretations. The authors present preliminary results on a system for the recognition of both handwritten and typeset mathematical expressions. While previous systems perform character recognition out of context, the current system maintains ambiguity of the characters until context can be used to disambiguate the interpretation. In addition, the system limits the number of potentially valid interpretations by decomposing the expressions into a sequence of compatible convex regions. The system uses A-star to search for the best possible interpretation of an expression. We provide a new lower bound estimate on the cost to goal that improves performance significantly. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Charniak, E. </author> <year> 1993. </year> <title> Statistical Language Learning. </title> <address> Cam-bridge, MA: </address> <publisher> MIT Press. </publisher>
Reference-contexts: Recognition inverts the generative process and produce the appropriate semantics 2 . Context-free grammars have proven to be very useful in the parsing of programming languages (Hopcroft & Ullman 1979). Recently stochastic context free grammars have also been applied successfully to the parsing of natural languages <ref> (Charniak 1993) </ref>. In a programming language the symbols are perfectly unambiguous and linearly ordered. But in an image of a mathematical expression each symbol is ambiguous and there is no natural ordering.
Reference: <author> Chou, P. A. </author> <year> 1989. </year> <title> Recognition of equations using a two-dimensional stochastic context-free grammar. </title> <booktitle> In SPIE Vol. 1199 Visual Communications and Image Processing, SPIE, 852863. </booktitle> <address> Murray Hill, NJ: SPIE. </address>
Reference-contexts: Since there is no simple linear constraint we must find some other constraints on the number of allowable subsets. Other authors have dealt with this issue in several ways. Rectilinear mathematical expressions Chou <ref> (Chou 1989) </ref> presents a system in which expressions are represented as rectangular arrays of terminal symbols. He limits the number of potential parses dramatically by requiring that the baselines of characters be within one pixel of their expected location. <p> Obviously, this upper bound will only shrink if we recognize larger expressions or allow a more varied set of characters. The system described in <ref> (Chou 1989) </ref> maintains ambiguity, but in a limited sense. For each character it re noisy character. The '+' is very difficult to interpret correctly without the context, but with constraints provided by the grammar could potentially be correctly identified. tains only those interpretations which are above a certain likelihood.
Reference: <author> Cormen, T. H.; Leiserson, C. E.; and Rivest, R. L. </author> <year> 1991. </year> <title> Introduction to Algorithms. </title> <address> Cambridge, Mass.: </address> <publisher> MIT Press. </publisher>
Reference-contexts: A convex hull of a point set can be computed in O (n log n), where n is the number of points <ref> (Cormen, Leiserson, & Rivest 1991) </ref>. Computing the convex hull union of two convex hulls is O (m + l), where l and m are the number of vertices in the convex hulls. The intersection of two convex hulls can be found in O (m + l) also.
Reference: <author> Fateman, R. J., and Tokuyasu, T. </author> <year> 1996. </year> <title> Progress in recognizing typeset mathematics. In Document Recognition III, </title> <booktitle> SPIE Volume 2660, 3750. </booktitle> <address> Murray Hill, NJ: SPIE. </address>
Reference: <author> Hopcroft, J. E., and Ullman, J. D. </author> <year> 1979. </year> <title> Introduction to Automata Theory, </title> <booktitle> Languages, and Computation. </booktitle> <address> Reading, Mass.: </address> <publisher> Addison-Wesley. </publisher>
Reference-contexts: Recognition inverts the generative process and produce the appropriate semantics 2 . Context-free grammars have proven to be very useful in the parsing of programming languages <ref> (Hopcroft & Ullman 1979) </ref>. Recently stochastic context free grammars have also been applied successfully to the parsing of natural languages (Charniak 1993). In a programming language the symbols are perfectly unambiguous and linearly ordered. <p> The search for the most likely interpretation is performed using A-star search (following the work of (Hull 1996)). We propose a new underestimate to the goal that significantly reduces computation time. Polynomial Time Parsing The parsing of programming languages is a solved problem. The Cocke-Younger-Kasami (CYK) algorithm <ref> (Hopcroft & Ullman 1979) </ref>, a dynamic programming algorithm, is cubic in the number of characters. The first step of CYK is to build a table (or chart) with one entry for every sub-sequence of symbols.
Reference: <author> Hull, J. F. </author> <year> 1996. </year> <title> Recognition of mathematics using a two-dimensional trainable context-free grammar. </title> <type> Master's thesis, </type> <institution> Massachusetts Institute of Technology, Department of Electrical Engineering and Computer Science. </institution>
Reference-contexts: In order to model the spatial layout of symbols in a mathematical expression, the spatial layout rules for various productions (like exponentiation) must be also specified, as in <ref> (Hull 1996) </ref>. Recognition inverts the generative process and produce the appropriate semantics 2 . Context-free grammars have proven to be very useful in the parsing of programming languages (Hopcroft & Ullman 1979). Recently stochastic context free grammars have also been applied successfully to the parsing of natural languages (Charniak 1993). <p> The search for the most likely interpretation is performed using A-star search (following the work of <ref> (Hull 1996) </ref>). We propose a new underestimate to the goal that significantly reduces computation time. Polynomial Time Parsing The parsing of programming languages is a solved problem. The Cocke-Younger-Kasami (CYK) algorithm (Hopcroft & Ullman 1979), a dynamic programming algorithm, is cubic in the number of characters. <p> We wish to avoid this type of limit, as we believe it will rule out the true answer in some situations. This system also decides on characters out of context, which has problems that are discussed below. Modeling positions of characters as Gaussian variables Hull <ref> (Hull 1996) </ref> comes closer to our desired goal, by allowing more general positioning of terminals and subexpressions relative to each other.
Reference: <author> Huttenlocher, D. P.; Klanderman, G. A.; and Ruck-lidge, W. J. </author> <year> 1993. </year> <title> Comparing images using the haus-dorff distance. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence 15(9):850863. </journal>
Reference: <author> Lavirotte, S., and Pottier, L. </author> <year> 1997. </year> <title> Optical formula recognition. </title> <booktitle> In Fourth International Conference on Document Analysis and Recognition, </booktitle> <address> ICDAR, 357361. Ulm, Germany: </address> <publisher> IEEE. </publisher>
Reference: <author> Lee, H.-J., and Lee, M.-C. </author> <year> 1994. </year> <title> Understanding mathematical expressions using procedure-oriented transformation. </title> <journal> Pattern Recognition 27(3):447457. </journal>
Reference: <author> Lee, H.-J., and Wang, J.-S. </author> <year> 1997. </year> <title> Design of a mathematical expression understanding system. </title> <journal> Pattern Recognition Letters 18:289298. </journal>
Reference: <author> Martin, W. A. </author> <year> 1967. </year> <title> A fast parsing scheme for hand-printed mathematical expressions. MIT AI Project Memo 145, </title> <institution> Massachusetts Institute of Technology, Computer Science Department, MIT, </institution> <address> Cam-bridge, MA. </address>
Reference: <author> Mjolsness, E. </author> <year> 1990. </year> <title> Bayesian inference on visual grammars by neural nets that optimize. </title> <type> Technical Report 854, </type> <institution> Yale University, Department of Computer Science, Computer Science Department, Yale University, </institution> <address> New Haven, CT. </address>
Reference-contexts: We also present 1 A stochastic context free grammar associates a probability with each production and as a result every valid expression can be assigned a non-zero probability. 2 Others have used stochastic grammars as models of generic problems in visual recognition <ref> (Mjolsness 1990) </ref>. a new method for dealing with character ambiguity so that characters can be interpreted in context rather than in isolation, and so that no probability threshold must be applied in the character recognition process.
Reference: <author> Okamoto, M., and Miyazawa, A. </author> <year> 1992. </year> <title> An experimental implementation of a document recognition system for papers containing mathematical expressions. </title> <editor> In Baird, H. S.; Bunke, H.; and Yamamoto, K., eds., </editor> <title> Structured Document Image Analysis. </title> <publisher> Berlin: Springer-Verlag. </publisher> <pages> 3663. </pages>
Reference: <author> Winkler, H. J.; Fahrner, H.; and Lang, M. </author> <year> 1995. </year> <title> A soft-decision approach for structural analysis of handwritten mathematical expressions. </title> <booktitle> In International Conference on Acoustics, Speech, and Signal Processing. </booktitle>
Reference-contexts: While this works well for the simulated data presented, it cannot be expected to extend to handwritten input, since the variation in handwritten input is frequently more than a pixel. A recognizer with moderate positional flexibility Winkler et al. <ref> (Winkler, Fahrner, & Lang 1995) </ref> describe a more flexible system in which two subexpressions can be considered as part of a larger expression as long as the second expression is within certain pre-defined regions relative to the first expression. <p> These classes are ascending letters, descending letters, small letters (neither ascending nor descending), and large letters (both ascending and descending). P, p, e, and Q represent examples from each respective class. Other authors have used similar classes but not to maintain different classification hypotheses <ref> (Winkler, Fahrner, & Lang 1995) </ref>. In addition to these separate letter classes which are based strictly on their geometric properties, other classes were defined based on their non-spatial role in the grammar. For example, other syntactic terminal classes include: zero, non-zero digits, left parentheses, right parentheses, and fractions.
Reference: <author> Yaeger, L.; Lyon, R.; and Webb, B. </author> <year> 1995. </year> <title> Effective training of a neural network character classifier for word recognition. </title> <editor> In Mozer, M.; Jordan, M.; and Petsche, T., eds., </editor> <booktitle> Advances in Neural Information Processing, volume 9. </booktitle> <address> Denver 1996: </address> <publisher> MIT Press, Cam-bridge. </publisher>
Reference-contexts: Introduction Handwriting recognition has greatly improved in recent years, in both the handprinting and cursive domains, yielding commercial systems for a wide variety of applications (for example <ref> (Yaeger, Lyon, & Webb 1995) </ref>). It may appear that the problem of mathematical expression recognition is essentially equivalent to the recognition of standard prose, but there are critical differences which distinguish the two problems and preclude us from applying the standard solutions of handwriting recognition to mathematical expressions.
References-found: 15

