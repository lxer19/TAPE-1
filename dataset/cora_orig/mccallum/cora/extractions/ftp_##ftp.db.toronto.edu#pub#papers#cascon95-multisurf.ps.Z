URL: ftp://ftp.db.toronto.edu/pub/papers/cascon95-multisurf.ps.Z
Refering-URL: http://www.cs.toronto.edu/~noik/cv.html
Root-URL: 
Title: Browsing Local and Global Information  
Author: Masum Hasan, Gene Golovchinsky, Emanuel Noik, Nipon Charoenkitkarn, Mark Chignell, Alberto Mendelzon, and David Modjeska 
Abstract: Current World Wide Web browsers, e.g., Mosaic and Netscape, support users primarily in the task of browsing the Internet. In some situations, users want to explore topics for which relevant information may reside both on a large local database and on the Web. The Mul-tiSurf project seeks to deal with these situations by integrating text browsing of a local database with hypertext browsing of the Web. In the current implementation, local queries are passed to Web index server(s) for simultaneous search on the Internet. An index server matches query terms with remote documents. Local and remote information is then presented to the user in separate windows. The existence of index servers is made transparent to the user. Instead of opening the URL of a server explicitly and filling the form, users click on the keywords of interest in the text. Multi-Surf composes these keywords into queries and passes them to the index servers. In addition to (hyper)text browsing, MultiSurf also supports visualization of the conceptual structure of a query session. This paper will describe our earlier work on text browsing and its adaptation to Web browsing. We will also discuss early impressions of the MultiSurf prototype and its functionality. We will comment on how MultiSurf fits into our overall goal of developing large-scale information exploration systems. Finally, we will describe a research strategy for integrating disparate systems through innovative user interfaces. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Bowman, P. Danzig, D. Hardy, U. Manber, and M. Schwartz. Harvest: </author> <title> A scalable, customizable discovery and access system. </title> <type> Technical report, </type> <institution> University of Colorado Boulder, </institution> <month> August </month> <year> 1994. </year> <note> Report no. CU-CS-732-94. </note>
Reference-contexts: This will be especially useful when a large local database is being explored in concert with the global Internet. Query-mediated browsing on the Internet will be even more useful if autonomously communicating standard index servers (like Internet Domain name servers and similar to what is discussed in <ref> [1] </ref>) are deployed on the Internet in the future. One caveat concerning query-mediated browsing on the Internet is that its effectiveness will be constrained by delays caused by bandwidth limitations.
Reference: [2] <author> C. Buckley, J. Allan, and G. Salton. </author> <title> Automatic retrieval with locality information using SMART. </title> <booktitle> Proceedings of the First Text REtrieval Conference TREC-1, </booktitle> <pages> pages 59-72, </pages> <year> 1993. </year>
Reference-contexts: A component of such a browser can provide some form of query translation between databases. For example, a text passage selected from an HTML page could be sent to a web server and to other databases (e.g., Inquery [3] or SMART database <ref> [2] </ref>), thereby hiding differences in query syntax from the user. 1.2 MultiSurf We decided to address the problems cited above by augmenting the paradigm of web browsing using two strategies: query-mediated browsing and integration of query results from multiple servers in the interface.
Reference: [3] <author> J.P. Callan, W.B. Croft, </author> <title> and S.M. </title> <booktitle> Hard-ing. The inquery retrieval system. Proceedings of the Third International Conference on Database and Expert Systems Applications, </booktitle> <pages> pages 78-83, </pages> <year> 1992. </year>
Reference-contexts: A component of such a browser can provide some form of query translation between databases. For example, a text passage selected from an HTML page could be sent to a web server and to other databases (e.g., Inquery <ref> [3] </ref> or SMART database [2]), thereby hiding differences in query syntax from the user. 1.2 MultiSurf We decided to address the problems cited above by augmenting the paradigm of web browsing using two strategies: query-mediated browsing and integration of query results from multiple servers in the interface.
Reference: [4] <author> M. Chalmers and P. Chitson. Bead: </author> <title> Explorations in information visualization. </title> <booktitle> Proceedings of SIGIR, </booktitle> <pages> pages 330-337, </pages> <year> 1992. </year>
Reference-contexts: Another possible direction is to investigate the efficacy of the link-resolving components approach [16] as an alternative to the current MultiSurf architecture. Another interesting area for further research is how to use visualization effectively in this query-mediated browsing approach. Clustering may help in visualizing concepts and documents <ref> [4] </ref>. Scatter/gather (a layout strategy recently developed at Xerox Parc [14]) may also be used to structure visualization maps. Since the Web and associated Internet resources are still evolving, it is unclear how searching and overviewing functions will eventually be integrated into Web exploration.
Reference: [5] <author> M.P. Consens, F. Ch. Eigler, M.Z. Hasan, A.O. Mendelzon, E.G. Noik, A.G. Ryman, and D. </author> <title> Vista. Architecture and applications of the Hy+ visualization system. </title> <journal> IBM Systems Journal, </journal> <volume> 33(3) </volume> <pages> 458-476, </pages> <month> August </month> <year> 1994. </year>
Reference-contexts: One problem is that not all data lends itself naturally to this treatment. In many cases, HTML cannot support the interaction styles that are useful for exploring legacy databases. For example, object-oriented graphical browsers such as Hy+ <ref> [5] </ref> require a granularity of interaction that the current HTML standard does not support. In addition, there are privacy and security issues related to storing proprietary data on publicly accessable servers. One solution is to integrate Web and non-Web databases in a single browser. <p> As shown in Figure 6, the first type of client can use the graph layout engine to automatically draw graphs by communicating directly with grtclsh, as done in the Hy+ system <ref> [5] </ref> where the client manages its own graph browser or editor. The second type of client does not possess its own graph visualization interface, but instead communicates with grwish to display and interact with graphs (in addition to automatic layout); this is the approach taken in the MultiSurf system. <p> The Graphite layout engine generates drawings of hygraphs (a kind of nested graph formalism) <ref> [5] </ref>. The engine can compute both two- and three-dimensional layouts; it can draw both nested and flat graphs; and it can create drawings by employing arbitrary combinations of simple layout methods.
Reference: [6] <author> M.P. Consens and A.O. Mendelzon. </author> <title> GraphLog: a visual formalism for real life recursion. </title> <booktitle> In Proceedings of the Ninth ACM SIGACT-SIGMOD Symposium on Principles of Database Systems, </booktitle> <pages> pages 404-416, </pages> <year> 1990. </year>
Reference-contexts: Web structure visualization is currently an active topic, and interested readers are referred to [8] to learn more about web structure visualization and the use of GraphLog <ref> [6] </ref> queries to manipulate web visualizations. 5 Conclusion The MultiSurf system described in this paper combines query-mediated browsing, different types of visualization, and the integration of local and Internet databases, thus providing a useful tool for general information exploration.
Reference: [7] <author> G. Golovchinsky and M.H. Chignell. Queries-r-links: </author> <title> Graphical markup for text navigation. </title> <booktitle> In InterCHI 93, </booktitle> <address> Amster-dam, Netherlands, </address> <month> May </month> <year> 1993. </year>
Reference-contexts: We have been experimenting with query-mediated browsing interfaces as an alternative to hypertext <ref> [7] </ref>. In contrast to hardwired hypertext links, a query-mediated browsing interface constructs links between documents dynamically based on users' queries. It retains some of the flavour of hypertext when the queries are expressed via selection (markup) of existing text. <p> Section 3 focuses on the integration of query-mediated browsing with the Web. Visualization aspects of the system are discussed in Section 4, followed by conclusions in Section 5. 2 Query-Mediated Brows ing Query-mediated browsing allows users to formulate queries by selecting arbitrary passages. Some notations such as QRL <ref> [7] </ref> also allow users to specify Boolean (AND and OR) queries on the selected terms and to construct them graphically on the text to formulate queries. <p> The MultiSurf system grew out of earlier work that we carried out to develop a text browsing system that would allow users to freely intermix browsing and querying styles of interaction during information exploration. The earlier QRL system <ref> [7] </ref> allowed users to mark up text graphically and inferred the queries from these markups. QRL demonstrated the feasibility of graphical methods for expressing queries. It also showed how browsing could be carried out using interactive queries.
Reference: [8] <author> M.Z. Hasan, A.O. Mendelzon, and D. </author> <title> Vista. Visual web surfing with Hy+. </title> <note> 1995. To appear in CASCON 1995. </note>
Reference-contexts: Note that icons are used to represent different types of URLs (e.g., HTML documents, gopher, etc.), and arcs are coloured to show visited and unvisited nodes. Web structure visualization is currently an active topic, and interested readers are referred to <ref> [8] </ref> to learn more about web structure visualization and the use of GraphLog [6] queries to manipulate web visualizations. 5 Conclusion The MultiSurf system described in this paper combines query-mediated browsing, different types of visualization, and the integration of local and Internet databases, thus providing a useful tool for general information
Reference: [9] <author> J. Nielsen. </author> <title> Multimedia and Hypertext, The Internet and Beyond. AP Professional, </title> <booktitle> first edition, </booktitle> <year> 1995. </year>
Reference-contexts: Queries can be expressed by highlighting a passage (e.g., a paragraph) using a drag operation. The browser can then submit content bearing words within the selected text to an index server. It is easy to get lost in hyperspace <ref> [9] </ref> while browsing through the Internet. The web space consisting of queries, hit lists (lists of URLs) and documents can be represented as a conceptual graph. Appropriate visualizations of this graph may reduce the likelihood of disorientation problems.
Reference: [10] <author> E.G. Noik. </author> <title> Exploring large hyperdocu-ments: Fisheye views of nested networks. </title> <booktitle> In ACM Hypertext '93, </booktitle> <pages> pages 192-205, </pages> <address> Seattle, WA, </address> <month> November </month> <year> 1993. </year>
Reference-contexts: Furthermore, a novel feature of the engine allows the user to associate ranks or weights with a set of vertices that can then be used to produce a variety of non-geometrical fisheye views <ref> [10, 11] </ref> and other emphasized views of graphs [12], when computing the layout. 4.1 Query Graph We are currently exploring the efficacy of a number of different types of visualization in MultiSurf, including query graphs, query hit list graphs and web structure graphs.
Reference: [11] <author> E.G. Noik. </author> <title> Layout-independent fisheye views of nested graphs. </title> <booktitle> In VL '93: IEEE Symposium on Visual Languages, </booktitle> <pages> pages 336-341, </pages> <address> Bergen, Norway, </address> <month> August </month> <year> 1993. </year>
Reference-contexts: Furthermore, a novel feature of the engine allows the user to associate ranks or weights with a set of vertices that can then be used to produce a variety of non-geometrical fisheye views <ref> [10, 11] </ref> and other emphasized views of graphs [12], when computing the layout. 4.1 Query Graph We are currently exploring the efficacy of a number of different types of visualization in MultiSurf, including query graphs, query hit list graphs and web structure graphs.
Reference: [12] <author> E.G. Noik. </author> <title> A space of presentation emphasis techniques for visualizing graphs. </title> <booktitle> In GI '94: Graphics Interface 1994, </booktitle> <pages> pages 225-234, </pages> <address> Banff, AL, Canada, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: Furthermore, a novel feature of the engine allows the user to associate ranks or weights with a set of vertices that can then be used to produce a variety of non-geometrical fisheye views [10, 11] and other emphasized views of graphs <ref> [12] </ref>, when computing the layout. 4.1 Query Graph We are currently exploring the efficacy of a number of different types of visualization in MultiSurf, including query graphs, query hit list graphs and web structure graphs. In a single session a user may specify large numbers of queries.
Reference: [13] <author> John K. Ousterhout. </author> <title> Tcl and the Tk Toolkit. </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: Graphite may be extended to provide application-specific functionality. The Graphite system consists of three main components: the underlying graph layout engine (a C++ library), a graph layout server (an extended Tcl interpreter <ref> [13] </ref>), and an extensible Graphical User Interface (GUI) graph editor (a Tcl/Tk interactive application [13]). <p> Graphite may be extended to provide application-specific functionality. The Graphite system consists of three main components: the underlying graph layout engine (a C++ library), a graph layout server (an extended Tcl interpreter <ref> [13] </ref>), and an extensible Graphical User Interface (GUI) graph editor (a Tcl/Tk interactive application [13]). The layout engine can be used generate drawings by employing arbitrary combinations of more than a dozen basic layout algorithms, while the graph layout server and graph editor pro vide a clean separation between graph layout and graph display and editing, and support two types of clients.
Reference: [14] <author> R. Rao, J.O. Pedersen, M.A. Hearst, J.D. Mackinlay, S.K. Card, L. Masinter, P-K. Halvorsen, and G.G. Robertson. </author> <title> Rich interaction in the digital library. </title> <journal> Communications of the ACM, </journal> <volume> 38(4) </volume> <pages> 29-39, </pages> <year> 1995. </year>
Reference-contexts: Another interesting area for further research is how to use visualization effectively in this query-mediated browsing approach. Clustering may help in visualizing concepts and documents [4]. Scatter/gather (a layout strategy recently developed at Xerox Parc <ref> [14] </ref>) may also be used to structure visualization maps. Since the Web and associated Internet resources are still evolving, it is unclear how searching and overviewing functions will eventually be integrated into Web exploration.
Reference: [15] <author> B. Shneiderman. </author> <title> Designing the User Interface. </title> <publisher> Addison-Wesley, </publisher> <year> 1987. </year>
Reference-contexts: QRL demonstrated the feasibility of graphical methods for expressing queries. It also showed how browsing could be carried out using interactive queries. This type of interactive querying represents a form of direct manipulation <ref> [15] </ref> in which the output of one interaction step serves as the input to the next.
Reference: [16] <author> F.Wm. Tompa, G.E. Blake, and D.R. Ray-mond. </author> <title> Hypertext by link-resolving components. </title> <booktitle> In ACM Hypertext '93, </booktitle> <pages> pages 118-130, </pages> <address> Seattle, WA, </address> <month> November </month> <year> 1993. </year>
Reference-contexts: Users will then be able to edit the query directly on a retrieved web document. Another alternative, currently under development, is to incorporate the QRL-style query notation directly into a web client. Another possible direction is to investigate the efficacy of the link-resolving components approach <ref> [16] </ref> as an alternative to the current MultiSurf architecture. Another interesting area for further research is how to use visualization effectively in this query-mediated browsing approach. Clustering may help in visualizing concepts and documents [4].
Reference: [17] <author> J.A. Waterworth and M.H. Chignell. </author> <title> A model of information exploration in a real-estate information exploration system. </title> <journal> Hypermedia, </journal> <volume> 3(1) </volume> <pages> 35-58, </pages> <year> 1991. </year>
Reference-contexts: Thus the style of interaction described here merges IR and hypertext into a new form of user centered and user controlled information exploration <ref> [17] </ref>, where the user exploits the existing structure of the text in formulating a browsing strategy. Query-mediated browsing can also be used to browse the web. In addition to following traditional hypertext links, users may browse by selecting arbitrary words or passages from a web page.

References-found: 17

