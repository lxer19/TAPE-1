URL: ftp://coast.cs.purdue.edu/pub/doc/misc/spaf-influences-of-history.ps.Z
Refering-URL: http://www.cs.purdue.edu/coast/archive/data/categ28.html
Root-URL: http://www.cs.purdue.edu
Email: spaf@cs.purdue.edu  
Title: Unix and Security: The Influences of History  
Author: Eugene H. Spafford 
Date: Revised January 1992 Revised April 1994  
Address: West Lafayette, IN 47907-1398  
Affiliation: Department of Computer Sciences Purdue University  
Abstract: Unix has a reputation as an operating system that is difficult to secure. This reputation is largely unfounded. Instead, the blame lies partially with the traditional use of Unix and partially with the poor security consciousness of its users. Unix's reputation as a nonsecure operating system comes not from design flaws but from practice. For its first 15 years, Unix was used primarily in academic and computer industrial environments | two places where computer security has not been a priority until recently. Users in these environments often configured their systems with lax security, and even developed philosophies that viewed security as something to avoid. Because they cater to this community, (and hire from it) many Unix vendors have been slow to incorporate stringent security mechanisms into their systems. This paper describes how the history and development of Unix can be viewed as the source of many serious problems. Some suggestions are made of approaches to help increase the security of your system, and of the Unix community.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Bill Cheswick and Steve Bellovin. </author> <title> Firewalls and Internet Security Repelling the Wily Hacker. </title> <publisher> Addison Wesley, </publisher> <year> 1994. </year>
Reference: [2] <author> David A. Curry. </author> <title> UNIX System Security: A Guide for Users and System Administrators. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1992. </year>
Reference: [3] <author> Daniel Farmer and Eugene H. Spafford. </author> <title> The COPS security checker system. </title> <booktitle> In Proceedings of the Summer Usenix Conference. Usenix Association, </booktitle> <month> June </month> <year> 1990. </year>
Reference: [4] <author> Rik Farrow. </author> <title> Unix System Security. </title> <publisher> Addison-Wesley, </publisher> <year> 1991. </year> <title> [5] leen Frisch. Essential System Administration. Nutshell Handbook, </title> <publisher> Inc. O'Reilly & Associates, </publisher> <address> Petaluma, CA, </address> <year> 1991. </year> <month> 8 </month>
Reference: [6] <author> Simson Garfinkel and Gene Spafford. </author> <title> Practical Unix Security. </title> <publisher> O'Reilly & Associates, Inc., </publisher> <address> Sebastapol, CA, </address> <year> 1991. </year>
Reference-contexts: Furthermore, the environment was such that as the system evolved, nearly everyone with access to the machines aided in the creation of new tools and in the debugging of existing tools. 2 Portions of this section are taken from <ref> [6] </ref> and [14]. 2 In 1973, Thompson rewrote Unix in Ritchie's newly invented C programming language. C was designed to be a simple, portable language.
Reference: [7] <author> IEEE P1003.6 Committee. </author> <title> Draft standard for information technology | portable operating system interface (posix) security interface. </title> <type> Ballot draft 12, </type> <month> September </month> <year> 1991. </year>
Reference: [8] <author> Gene H. Kim and Eugene H. Spafford. </author> <title> Experiences with tripwire: Using integrity checkers for intrusion detection. </title> <booktitle> In Systems Administration, Networking and Security Conference III. Usenix, </booktitle> <month> April </month> <year> 1994. </year>
Reference: [9] <author> Barton P. Miller, Lars Fredriksen, and Bryan So. </author> <title> An empirical study of the reliability of unix utilities. </title> <journal> Communications of the ACM, </journal> <volume> 33(12) </volume> <pages> 32-44, </pages> <month> December </month> <year> 1990. </year>
Reference: [10] <author> E. Nemeth, G. Snyder, and S. Seebass. </author> <title> Unix System Administration Handbook. </title> <publisher> Prentice Hall, </publisher> <year> 1989. </year>
Reference: [11] <author> Brian Reid. </author> <title> Reflections on some recent computer break-ins. </title> <journal> Communications of the ACM, </journal> <volume> 30(2) </volume> <pages> 103-105, </pages> <month> February </month> <year> 1987. </year>
Reference: [12] <author> Deborah Russell and G. T. </author> <title> Gangemi Sr. Computer Security Basics. </title> <publisher> O'Reilly and Associates, Inc., </publisher> <month> July </month> <year> 1991. </year>
Reference: [13] <author> David R. Safford, Douglas Lee Schales, and David K. Hess. </author> <title> The TAMU security package: An ongoing response to internet intruders in an academic environment. </title> <editor> In Edward DeHart, editor, </editor> <booktitle> Proceedings of the Security IV Conference, </booktitle> <pages> pages 91-118, </pages> <address> Berkeley, CA, 1993. </address> <publisher> USENIX Association. </publisher>
Reference: [14] <author> Peter H. Salus. </author> <title> A Quarter Century of Unix. </title> <publisher> Addison Wesley, </publisher> <year> 1994. </year>
Reference-contexts: Furthermore, the environment was such that as the system evolved, nearly everyone with access to the machines aided in the creation of new tools and in the debugging of existing tools. 2 Portions of this section are taken from [6] and <ref> [14] </ref>. 2 In 1973, Thompson rewrote Unix in Ritchie's newly invented C programming language. C was designed to be a simple, portable language.
Reference: [15] <author> Donn Seeley. </author> <title> Password cracking: A game of wits. </title> <journal> Communications of the ACM, </journal> <volume> 32(6) </volume> <pages> 700-703, </pages> <month> June </month> <year> 1989. 1989. </year>
Reference: [16] <author> Eugene H. Spafford. </author> <title> The Internet Worm: Crisis and aftermath. </title> <journal> Communications of the ACM, </journal> <volume> 32(6) </volume> <pages> 678-687, </pages> <month> June </month> <year> 1989. </year>
Reference: [17] <author> Eugene H. Spafford. </author> <title> Making UNIX secure. </title> <booktitle> In Proceedings of the Virus Bulletin Conference on Security, </booktitle> <pages> pages 125-132, </pages> <address> Oxon, England, </address> <month> September </month> <year> 1991. </year> <note> Virus Bulletin Ltd. </note>
Reference-contexts: much different from most commercial operating systems, and this history is one of the chief sources of Unix weaknesses. * Earlier versions of this paper were presented as the keynote address at the 1991 Austrian Unix Users Group annual conference, Vienna, Austria, and under the title Making Unix Secure as <ref> [17] </ref>. 1 Unix is a registered trademark of Novell.
Reference: [18] <author> Cliff Stoll. </author> <title> The Cuckoo's Egg. </title> <publisher> Doubleday, </publisher> <address> NY, NY, </address> <month> October </month> <year> 1989. </year>
References-found: 17

