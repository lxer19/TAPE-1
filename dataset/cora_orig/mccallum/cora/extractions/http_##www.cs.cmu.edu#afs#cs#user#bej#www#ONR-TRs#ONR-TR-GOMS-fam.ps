URL: http://www.cs.cmu.edu/afs/cs/user/bej/www/ONR-TRs/ONR-TR-GOMS-fam.ps
Refering-URL: http://www.cs.cmu.edu/afs/cs/user/bej/www/ONR-TR.html
Root-URL: 
Title: The GOMS Family of Analysis Techniques: Tools for Design and Evaluation Approved for public release;
Author: Bonnie E. John David E. Kieras* 
Note: Reproduction in whole or in part is permitted for any purpose of the United States Government. Bonnie John is associated with the  
Address: Pittsburgh, PA 15213  
Affiliation: School of Computer Science Carnegie Mellon University  *Department of Electrical Engineering and Computer Science University of Michigan  Departments of Computer Science and Psychology and the Human-Computer Interaction Institute at Carnegie Mellon University.  
Date: 24 August 1994  
Pubnum: CMU-CS-94-181  
Abstract: Also appears as Human-Computer Interaction Institute Technical Report CMU-HCII-94-106 Work on this paper by Bonnie John was supported by the Office of Naval Research, Cognitive Science Program, Contract Number N00014-89-J-1975N158, and the Advanced Research Projects Agency, DoD, and monitored by the Office of Naval Research under contract N00014-93-1-0934. Work on this paper by David Kieras was supported by the Office of Naval Research Cognitive Science Program, under Grant Number N00014-92-J-1173 NR 4422574, and the Advanced Research Projects Agency, DoD, and monitored by the NCCOSC under contract N66001-94-C-6036. The views and conclusions contained in this document are those of the author and should not be interpreted as representing the official policies, either expressed or implied, of the Office of Naval Research, NCCOSC, the Advanced Research Projects Agency, or the U. S. Government. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Anderson, J. R. </author> <year> (1976). </year> <title> Language, memory, </title> <booktitle> and thought. </booktitle> <address> Hillsdale, NJ: </address> <publisher> Lawrence Erlbaum Associates. </publisher>
Reference-contexts: There are several such architectures under development in cognitive psychology and artificial intelligence, several of which have been applied to topics in HCI, such as Cognitive Complexity Theory (CCT, Kieras & Polson, 1985; Bovair, Kieras, & Polson, 1988, 1990), ACT-R and its predecessors <ref> (Anderson, 1976, 1983, 1993) </ref>, Construction-Integration (Kintsch, 1988, 1992), Soar (Newell, 1990), and EPIC (Kieras & Meyer, 1994; Meyer & Kieras, 1994).
Reference: <author> Anderson, J. R. </author> <year> (1983). </year> <title> The architecture of cognition. </title> <address> Cambridge, MA: </address> <publisher> Harvard University Press. </publisher>
Reference: <author> Anderson, J. R. </author> <year> (1987). </year> <title> Skill acquisition: compilation of weak-method problem solutions. </title> <journal> Psychological Review, </journal> <volume> 94, </volume> <pages> 192-210. </pages>
Reference: <author> Anderson, J. R. </author> <year> (1993). </year> <title> Rules of the Mind. </title> <address> Hillsdale, NJ: </address> <publisher> Lawrence Erlbaum Associates. </publisher>
Reference: <author> Atwood, M. E., Gray, W. D., & John, B. E. </author> <title> (in press) Project Ernestine: Analytic and empirical methods applied to a real-world CHI problem. To appear in Human-Computer Interface Design: Success Cases, Emerging Methods and Real-World Context, </title> <editor> L. Gugerty & P. Polson (eds.), </editor> <address> San Mateo, CA: </address> <publisher> Morgan-Kaufmann. </publisher>
Reference: <author> Bovair, S., Kieras, D. E., & Polson, P. G. </author> <year> (1988). </year> <title> The acquisition and performance of text editing skill: A productionsystem analysis. </title> <type> (Tech. Rep. No. 28). </type> <institution> Ann Arbor: University of Michigan, </institution> <type> Technical Communication Program. </type>
Reference: <author> Bennett, J. L., Lorch, D. J., Kieras, D. E., & Polson, P. G. </author> <year> (1987). </year> <title> Developing a user interface technology for use in industry. </title> <editor> In Bullinger, H. J., & Shackel, B. (Eds.), </editor> <booktitle> Proceedings of the Second IFIP Conference on Human-Computer Interaction, Human-Computer Interaction INTERACT '87. </booktitle> <address> (Stuttgart, Federal Republic of Germany, Sept. 14). </address> <publisher> Elsevier Science Publishers B.V., North-Holland, </publisher> <pages> 21-26. </pages>
Reference: <author> Bovair, S., Kieras, D. E., & Polson, P. G. </author> <year> (1990). </year> <title> The acquisition and performance of text editing skill: A cognitive complexity analysis. </title> <journal> Human-Computer Interaction, </journal> <volume> 5, </volume> <pages> 1-48. </pages>
Reference: <author> Butler, K. A., Bennett, J., Polson, P., and Karat, J. </author> <year> (1989). </year> <title> Report on the workshop on analytical models: Predicting the complexity of human-computer interaction. </title> <journal> SIGCHI Bulletin, </journal> <volume> 20(4), </volume> <pages> pp. 63-79. </pages>
Reference: <author> Byrne, M.D., Wood, S.D, Sukaviriya, P., Foley, J.D, and Kieras, D.E. </author> <year> (1994). </year> <title> Automating Interface Evaluation. </title> <booktitle> In Proceedings of CHI'94 (Boston, </booktitle> <address> MA, USA, April 24-28, 1994). New York: </address> <publisher> ACM, </publisher> <pages> pp. 232-237. </pages>
Reference: <author> Card, S., & Moran, T. </author> <year> (1988). </year> <title> User technology: From pointing to pondering. </title> <editor> In Goldberg, A. (Ed.) </editor> <title> A history of personal workstations. </title> <address> New York, </address> <publisher> ACM. </publisher> <pages> [pp. </pages> <note> 489-522] Card, S.K., Moran, T.P., </note> & <author> Newell, A. </author> <year> (1980a). </year> <title> The keystroke-level model for user performance time with interactive systems. </title> <journal> Communications of the ACM , 23(7), </journal> <pages> 396-410. </pages>
Reference-contexts: However, others arose in more typical development processes of real products, and are documented here through interviews with the developers. Case 1. Mouse-driven text editor (KLM) The first known use of the KLM for real system design was, not surprisingly, at Xerox <ref> (Card & Moran, 1988) </ref>. In the early 1980s, when designing the text editor for the Xerox Star, the design team suggested several schemes for selecting text. These different schemes called for different numbers of buttons on the mouse.
Reference: <author> Card, S.K., Moran, T.P., & Newell, A. </author> <year> (1980b). </year> <title> Computer text-editing: An information processing analysis of a routine cognitive skill. </title> <journal> Cognitive Psychology, </journal> <volume> 12, </volume> <pages> 32-74. </pages>
Reference: <author> Carley, K., Kjaer-Hansen, J., Prietula, M., & Newell, A. </author> <year> (1990) </year> <month> "Plural-Soar: </month> <note> A Prolegomenon on artificial agents and organizational behavior" to appear in M. </note> <editor> Masuch and G. Massimo (Eds.) </editor> <booktitle> Distributed Intelligence: Applications in Human Organizations, </booktitle> <publisher> Elsevier. </publisher>
Reference: <author> Carley, K. M., & Prietula, M. J. </author> <year> (1994b). </year> <title> Computational Organization Theory. </title> <address> Hillsdale, NJ: </address> <publisher> Lawrence Erlbaum Associates. 46 Chuah, </publisher> <editor> M. C., John, B. E., & Pane, J. </editor> <year> (1994). </year> <title> Analyzing graphic and textual layouts with GOMS: Results of a preliminary analysis. </title> <booktitle> In Proceedings Companion of CHI, 1994, </booktitle> <address> Boston, MA, USA, April 24-28, 1994). New York: </address> <publisher> ACM, </publisher> <pages> pp. 323-324. </pages>
Reference: <author> Diaper, D. (Ed.) </author> <year> (1989). </year> <title> Task analysis for human-computer interaction. </title> <address> Chicester, U.K.: </address> <publisher> Ellis Horwood. </publisher>
Reference-contexts: GOMS analyses and methods do not provide this list; it must come from sources external to GOMS (see also Olson and Olson, 1990, Karat & Bennett 1989). Typically, this list of goals can be obtained from other task analysis approaches <ref> (e.g., see Diaper, 1989) </ref>, such as interviews with potential users, observations of users of similar or existing systems, or in the worst case, simple intuitions on the part of the analyst.
Reference: <author> Doane, S. M., Mannes, S. M., Kintsch W., and Polson, P. G.(1992). </author> <title> Modeling user action planning: A comprehension based approach. User Modeling and User-Adapted Interaction 2, </title> <note> 249-285 Doane, </note> <author> S. M., McNamara, D. S., Kintsch, W., Polson, P. G. and Clawson, D. M. </author> <year> (1992). </year> <title> Prompt comprehension in UNIX command production. Memory and Cognition, </title> <booktitle> 20,4, </booktitle> <pages> 327-343. </pages>
Reference: <author> Elkerton, J. </author> <year> (1993). </year> <title> Using GOMS models to design documentation and user interfaces: An uneasy courtship. Position paper for workshop on Human-Computer Interaction Advances Derived from Real World Experiences, </title> <booktitle> INTERCHI93 Conference, </booktitle> <address> Amsterdam, </address> <month> April 24-25. </month>
Reference: <author> Elkerton, J., & Palmiter, S. L. </author> <year> (1991). </year> <title> Designing help using a GOMS model: An information retrieval evaluation. </title> <booktitle> Human Factors, </booktitle> <volume> 33, 2, </volume> <pages> pp. 185-204. </pages>
Reference: <author> Endestad, T., and Meyer, P. </author> <year> (1993). </year> <title> GOMS analysis as an evaluation tool in process control: An evaluation of the ISACS-1 prototype and the COPMA system. </title> <type> Technical Report HWR-349, </type> <institution> OECD Halden Reactor Project, Instituut for Energiteknikk, Halden, Norway. </institution>
Reference: <author> Gilbreth, F. B. & Gilbreth, L. M. </author> <title> Applied Motion Study. </title> <address> New York: </address> <publisher> The Macmillian Company, </publisher> <year> 1917. </year>
Reference: <author> Gong, R. & Elkerton, J. </author> <year> (1990). </year> <title> Designing minimal documentation using a GOMS model: A usability evaluation of an engineering approach. </title> <booktitle> In Proceedings of CHI, </booktitle> <address> 1990 (Seattle, Washington, April 30-May 4, </address> <publisher> 1990) ACM, </publisher> <address> New York, </address> <pages> 99-106. </pages>
Reference: <author> Gong, R., & Kieras, D. </author> <year> (1994). </year> <title> A Validation of the GOMS Model Methodology in the Development of a Specialized, Commercial Software Application. </title> <booktitle> In Proceedings of CHI, 1994, </booktitle> <address> Boston, MA, USA, April 24-28, 1994). New York: </address> <publisher> ACM, </publisher> <pages> pp. 351-357. </pages>
Reference: <author> Gong, R. </author> <year> (1993). </year> <title> Validating and refining the GOMS model methodology for software user interface design and evaluation. </title> <type> PhD dissertation, </type> <institution> University of Michigan, </institution> <year> 1993. </year>
Reference-contexts: However, it should be kept in mind that the heuristics for counting the number of 18 chunks are not very well defined at this time <ref> (see Gong, 1993) </ref>. In addition, the general requirements of the learning situation must be taken into account as well. <p> This parallel execution can be approximated in a sequential model by simply setting the time for the VISUALLY-LOCATE-OBJECT operator to zero <ref> (see Gong, 1993) </ref>. The second case is when the parallel operations are taking place below the level of analysis of the design issues in question, or independently of them. <p> Case 10. CAD system for ergonomic design (NGOMSL) Gong <ref> (1993, see also Gong & Kieras, 1994) </ref> provides a detailed case study of the application of GOMS methodology to an actual software product.
Reference: <author> Gott, S. P., </author> <year> (1988). </year> <title> Apprenticeship instruction for real-world tasks: The coordination of procedures, mental models, and strategies. </title> <editor> In Ernst Z. Rothkopf (Ed.), </editor> <booktitle> Review of Research in Education. </booktitle> <address> Washington, D.C.: AERA. </address>
Reference-contexts: The italicized area to the right under Task Analysis represents other existing and potential approaches to task analysis that capture other forms of task knowledge. For example, current work on electronics troubleshooting <ref> (see Gott, 1988) </ref> incorporates the person's knowledge of electronic components and the structure and function of the system under investigation, in addition to various kinds of procedural knowledge, and current work in analogical reasoning has been applied to understanding consistency in operating systems (Rieman, Lewis, Young & Polson, 1994).
Reference: <author> Gray, W. D., John, B. E., & Atwood, M. E. </author> <year> (1992). </year> <title> The precis of Project Ernestine or an overview of a validation of GOMS. </title> <booktitle> Proceedings of CHI (Monterey, </booktitle> <month> May 3-7, </month> <booktitle> 1992) ACM, </booktitle> <address> New York. </address>
Reference: <author> Gray, W. D., John, B. E., & Atwood, M. E. </author> <title> (1993) "Project Ernestine: A validation of GOMS for prediction and explanation of real-world task performance." </title> <journal> Human-Computer Interaction, </journal> <volume> 8, 3, </volume> <pages> pp. 237-209. </pages> <note> 47 Gray, </note> <author> W. D., & Sabnani, H. </author> <year> (1994). </year> <title> "Why you can't program your VCR, or, predicting errors and performance with production system models of display-based action" Proceedings Companion of CHI '94 (Boston, April 24-28, </title> <booktitle> 1994) ACM, </booktitle> <address> New York. </address> <pages> pp. 79-80. </pages>
Reference-contexts: In some real-world tasks, like telephone operators handling calls <ref> (Gray, John, and Atwood, 1993) </ref>, the required information always appears at fixed screen locations, and with experience, the user will learn where to look. <p> For example, CPM-GOMS was used to demonstrate that refining the screen design and keyboard layout would have relatively little effect on system performance compared to speeding up the response latency <ref> (Gray, John & Atwood, 1993) </ref>. Because system profiling requires quantitative predictions of performance, it is one of the more time-consuming uses of GOMS. <p> For instance, the CPM-GOMS models developed for the existing NYNEX workstation took about two staff-months, but once they were created, the potential benefits of new features could be evaluated literally in minutes <ref> (Gray, et. al. 1993) </ref>. Sensitivity and parametric analyses. In many design situations, the value of design ideas depends on assumptions about characteristics of the task domain or the users of the system.
Reference: <author> Haunold, P. & Kuhn, W. </author> <year> (1994). </year> <title> A keystroke level analysis of a graphics application: Manual map digitizing. </title> <booktitle> In Proceedings of CHI, 1994, </booktitle> <address> Boston, MA, USA, April 24-28, 1994). New York: </address> <publisher> ACM, </publisher> <pages> pp. 337-343. </pages>
Reference-contexts: Subsequent research has refined these six primitive operators, improving the time estimates or differentiating between different types of mental operations (Olson & Olson, 1990) and practitioners often tailor these operators to suit their particular user group and interface requirements <ref> (e.g., Haunold & Kuhn, 1994) </ref>. In addition, the heuristics for placing mental operators have been refined for specific types of subtasks (e.g., for making a fixed series of menu choices, Lane, Napier, Batsell & Naman, 1993).
Reference: <author> Howes, A. </author> <year> (1994). </year> <title> A model of the acquisition of menu knowledge by exploration. </title> <booktitle> In Proceedings of CHI, 1994, </booktitle> <address> Boston, MA, USA, April 24-28, 1994). New York: </address> <publisher> ACM, </publisher> <pages> pp. 445-451. </pages>
Reference: <author> John, B. E. </author> <title> (1988) Contributions to engineering models of human-computer interaction. </title> <type> Doctoral dissertation, </type> <institution> Carnegie Mellon University. </institution>
Reference: <author> John, B. E. </author> <title> (1990) Extensions of GOMS analyses to expert performance requiring perception of dynamic visual and auditory information. </title> <booktitle> In Proceedings of CHI, </booktitle> <address> 1990 (Seattle, Washington, April 30-May 4, </address> <publisher> 1990) ACM, </publisher> <address> New York, </address> <pages> 107-115. </pages>
Reference: <author> John, B. E. </author> <title> (1994) Toward a deeper comparison of methods: A reaction to Nielsen & Phillips and new data. </title> <booktitle> In the Proceedings Companion of CHI 1994 (Boston, </booktitle> <address> April 24-28, </address> <publisher> 1994) ACM, </publisher> <address> New York. </address> <pages> pp. 285-286. </pages>
Reference-contexts: But in a typical text editing task like our example, the situation changes from one task instance to the next, and so visual search would be required to locate the target phrase. The CPM-GOMS has been used to model visual search processes <ref> (Chuah, John & Pane, 1994) </ref>, but for brevity, we did not include this complexity in our example. A second aspect of the assumed extreme expertise is that the example does not include any substantial cognitive activity associated with selection of methods or complex decisions. <p> The only currently documented GOMS technique based on this framework is CPM-GOMS, and as pointed out below, there is currently a lack of models and 28 techniques for many of the related design issues. Work underway by John and colleagues <ref> (Nelson, Lehman, & John, 1994) </ref> applies the Soar cognitive architecture to the same kinds of interactions as CPM-GOMS, including using a Soar model to generate the PERT charts for a CPM-GOMS analysis.
Reference: <author> John, B. E. </author> <title> (in press) Task matters. </title> <editor> In D. M. Steier and T. Mitchell (Eds.), Mind matters. </editor> <address> Hillsdale, NJ: </address> <publisher> Lawrence Erlbaum. </publisher>
Reference: <author> John, B. E. & Newell, A. </author> <title> (1989) Cumulating the science of HCI: From S-R compatibility to transcription typing. </title> <booktitle> In Proceedings of CHI, </booktitle> <address> 1989 (Austin, Texas, April 30-May 4, </address> <publisher> 1989) ACM, </publisher> <address> New York, </address> <pages> 109-114. </pages>
Reference: <author> John, B. E. & Vera, A. H. </author> <year> (1992). </year> <title> A GOMS analysis for a graphic, machine-paced, highly interactive task. </title> <booktitle> In Proceedings of CHI (Monterey, </booktitle> <month> May 3-7, </month> <booktitle> 1992) ACM, </booktitle> <address> New York. </address> <pages> pp. 251-258. </pages>
Reference-contexts: a new programming language to 30 create a graphing application showed that embedded in the problem-solving activities of designing the program and figuring out how to use the new language was the routine behavior of manipulating the help system and that GOMS was applicable to the analysis of this behavior <ref> (Peck & John, 1992) </ref>.
Reference: <author> John, B. E., Vera, A. H. & Newell, A. </author> <title> (1994) Toward real-time GOMS: A model of expert behavior in a highly interactive task. </title> <journal> Behavior and Information Technology, </journal> <volume> vol 13, no. 4, </volume> <pages> pp. 255-267. </pages>
Reference-contexts: But in a typical text editing task like our example, the situation changes from one task instance to the next, and so visual search would be required to locate the target phrase. The CPM-GOMS has been used to model visual search processes <ref> (Chuah, John & Pane, 1994) </ref>, but for brevity, we did not include this complexity in our example. A second aspect of the assumed extreme expertise is that the example does not include any substantial cognitive activity associated with selection of methods or complex decisions. <p> The only currently documented GOMS technique based on this framework is CPM-GOMS, and as pointed out below, there is currently a lack of models and 28 techniques for many of the related design issues. Work underway by John and colleagues <ref> (Nelson, Lehman, & John, 1994) </ref> applies the Soar cognitive architecture to the same kinds of interactions as CPM-GOMS, including using a Soar model to generate the PERT charts for a CPM-GOMS analysis.
Reference: <author> Karat, J., and Bennett, J. </author> <year> (1989). </year> <title> Modeling the user interaction methods imposed by designs. </title> <type> Technical report RC 14649. </type> <institution> IBM T. J. Watson Research Center, Yorktown Hts., NY. </institution>
Reference-contexts: Although an NGOMSL analysis can provide a useful description of a task even at a high level of analysis <ref> (see Karat & Bennett 1989) </ref>, quantitative predictions of learning and execution times are meaningful only if the methods use operators that the user is assumed to already know and that have known properties, such as keystroke level operators.
Reference: <author> Karat, J., Boyes, L., Weisgerber, S., & Schafer, C. </author> <title> Transfer between word processing systems. </title> <booktitle> In Proceedings of CHI'86, </booktitle> <address> (Boston, April 13-17, 1986), New York: </address> <publisher> ACM, </publisher> <pages> pp. 67-71. </pages>
Reference: <author> Kieras, D. E. </author> <title> (1988a) Towards a practical GOMS model methodology for user interface design. </title> <editor> In M. Helander (Ed.), </editor> <booktitle> The handbook of human-computer interaction. </booktitle> <pages> (pp. 135-158). </pages> <address> Amsterdam: </address> <publisher> North-Holland. </publisher>
Reference-contexts: Pragmatically, however, this difference is irrelevant in most design situations. We will discuss the issue of mental time again after presenting all the GOMS techniques. NGOMSL. Conceptually, the NGOMSL technique <ref> (Kieras, 1988a, 1994a, b) </ref> refines the CMN-GOMS model by connecting it to a simple cognitive architecture, namely CCT.
Reference: <author> Kieras, D.E. </author> <year> (1988b). </year> <title> What mental model should be taught: Choosing instructional content for complex engineered systems. </title> <editor> In J. Psotka, L.D. Massey, and S. Mutter (Eds.), </editor> <booktitle> Intelligent tutoring systems: </booktitle> <pages> Lessons learned (pp. 85-111). </pages> <address> Hillsdale, NJ: </address> <publisher> Erlbaum. </publisher>
Reference-contexts: The class of models and methodologies presented here do not represent the knowledge and mechanisms required for using a mental model, and so have no basis for predicting the utility of a mental model or the time required to learn it <ref> (see Kieras, 1988b, 1990 for more discussion) </ref>. Likewise, the concepts and principles discussed above as research directions (section 3.4) go beyond the simple procedure-learning situations captured by CCT and NGOMSL.
Reference: <author> Kieras, D.E. </author> <year> (1990). </year> <title> The role of cognitive simulation models in the development of advanced training and testing systems. </title> <editor> In N. Frederiksen, R. Glaser, A. Lesgold, & M. Shafto (Eds.), </editor> <title> Diagnostic monitoring of skill and knowledge acquisition. </title> <address> Hillsdale, NJ: </address> <publisher> Erlbaum. </publisher> <address> 48 Kieras, D. </address> <publisher> E. </publisher> <year> (1994a). </year> <title> A guide to GOMS task analysis (Spring, 1994). </title> <type> Unpublished manuscript, </type> <institution> University of Michigan. </institution>
Reference: <author> Kieras, D. </author> <year> (1994b). </year> <title> GOMS Modeling of User Interfaces using NGOMSL. </title> <booktitle> Tutorial Notes, CHI'94 Conference on Human Factors in Computer Systems, </booktitle> <address> Boston, MA, </address> <month> April 24-28, </month> <year> 1994. </year>
Reference-contexts: NGOMSL can be taught in a few undergraduate class sessions based on Kierass "how-to" description (1988a, 1994a) and a couple of homework assignments with feedback. Full-day tutorials, such as at the CHI conferences <ref> (Kieras, 1994b) </ref> and in industrial short-courses appear to be adequate to get software developers started in the technique.
Reference: <author> Kieras, D.E., & Bovair, S. </author> <year> (1984). </year> <title> The role of a mental model in learning to operate a device. </title> <journal> Cognitive Science, </journal> <volume> 8, </volume> <pages> 255-273. </pages>
Reference: <author> Kieras, D. E., & Bovair, S. </author> <year> (1986). </year> <title> The acquisition of procedures from text: A production system analysis of transfer of training. </title> <journal> Journal of Memory and Language, </journal> <volume> 25, </volume> <pages> 507524. </pages>
Reference: <author> Kieras, D.E., & Meyer, D.E. </author> <year> (1994). </year> <title> The EPIC architecture for modeling human information processing: A brief introduction. </title> <type> (EPIC Tech. Rep. No. 1, </type> <institution> TR-94/ONR-EPIC-1). Ann Arbor, University of Michigan, Department of Electrical Engineering and Computer Science. </institution>
Reference: <author> Kieras, D. E. & Polson, P. G. </author> <title> (1985) An approach to the formal analysis of user complexity. </title> <journal> International Journal of Man-Machine Studies, </journal> <volume> 22, </volume> <pages> 365-394. </pages>
Reference-contexts: The first is that the task in question must be usefully analyzed in terms of the "how to do it," or procedural knowledge required rather than other aspects of knowledge about the system, like mental simulations of an internalized device model, or analogical reasoning <ref> (see Kieras and Polson, 1985, for more discussion) </ref>. The italicized area to the right under Task Analysis represents other existing and potential approaches to task analysis that capture other forms of task knowledge.
Reference: <author> Kintsch, W. </author> <year> (1988). </year> <title> The role of knowledge in discourse comprehension: a construction integration model. </title> <journal> Psychological Review, </journal> <volume> 95, 2, </volume> <pages> 163-182. </pages>
Reference-contexts: There are several such architectures under development in cognitive psychology and artificial intelligence, several of which have been applied to topics in HCI, such as Cognitive Complexity Theory (CCT, Kieras & Polson, 1985; Bovair, Kieras, & Polson, 1988, 1990), ACT-R and its predecessors (Anderson, 1976, 1983, 1993), Construction-Integration <ref> (Kintsch, 1988, 1992) </ref>, Soar (Newell, 1990), and EPIC (Kieras & Meyer, 1994; Meyer & Kieras, 1994).
Reference: <author> Kintsch, W. </author> <year> (1992). </year> <title> A cognitive architecture for comprehension. </title> <editor> In H. L. Pick, Jr., P. van den Broek, and D. C. Knill, (Eds.), </editor> <booktitle> Cognition: Conceptual and methodological issues. </booktitle>
Reference: <author> Washington, D. C..: </author> <booktitle> American Psychological Association, </booktitle> <pages> 143-164. </pages>
Reference: <author> Kitajima, M., & Polson, P. G. </author> <title> (1992) A computational model of skilled use oif a graphical user interface. </title> <booktitle> In Proceedings of CHI (Monterey, </booktitle> <month> May 3-7, </month> <booktitle> 1992) ACM, </booktitle> <address> New York. </address> <pages> pp. </pages> <note> 241-249 Laird, </note> <author> J., Rosenbloom, P, & Newell, A. </author> <title> (1986) Universal subgoaling and chunking., </title> <publisher> Kluwer Academic Publishers: </publisher> <address> Boston. </address>
Reference: <author> Lane, D. M., Napier, H. A., Batsell, R. R., & Naman, J. L. </author> <year> (1993). </year> <title> Predicting the skilled use of hierarchical menus with the Keystroke-Level Model. </title> <journal> Human-Computer Interaction, </journal> <volume> 8, 2, </volume> <pages> pp. 185-192. </pages>
Reference: <author> Lee, A. Y., Polson, P. G., & Bailey, W. A. </author> <title> (1989) Learning and transfer of measurement tasks. </title> <booktitle> In Proceedings of CHI, </booktitle> <address> 1989 (Austin, Texas, April 30-May 4, </address> <publisher> 1989) ACM, </publisher> <address> New York, </address> <year> 1989, </year> <month> pp.115-120. </month>
Reference-contexts: Other examples of GOMS analysis of routine use in otherwise complex tasks include the widely studied text-editing situation, spreadsheet use (Lerch, Mantei & Olson, 1989), digital oscilloscope use <ref> (Lee, Polson & Bailey, 1989) </ref>, and even playing a video game (John & Vera, 1992; John, Vera & Newell, 1994). Thus, although a user's task may seem to be primarily a problem-solving task, there will be aspects of that task that involve routine cognitive skill.
Reference: <author> Lerch, F. J., Mantei, M. M., & Olson, J. R. </author> <year> (1989). </year> <title> Translating ideas into action: Cognitive analysis of errors in spreadsheet formulas. </title> <booktitle> in Proceedings of CHI, </booktitle> <year> 1989, </year> <pages> 121-126. </pages> <address> New York: </address> <publisher> ACM. </publisher>
Reference-contexts: CMN report results in which such models predicted operator sequences and execution times for text editing tasks, operating systems tasks, and the routine aspects of computer-aided VLSI layout tasks. These examples are sufficiently detailed and extensive that researchers have been able to develop their own CMN-GOMS analyses <ref> (e.g., Lerch, Mantei, & Olson, 1989) </ref>. in Figure 1, including details for the MOVE-TEXT goal. Moving is accomplishing by first cutting the text and then pasting it. Cutting is accomplished by first selecting the text, and then issuing the CUT command. <p> Other examples of GOMS analysis of routine use in otherwise complex tasks include the widely studied text-editing situation, spreadsheet use <ref> (Lerch, Mantei & Olson, 1989) </ref>, digital oscilloscope use (Lee, Polson & Bailey, 1989), and even playing a video game (John & Vera, 1992; John, Vera & Newell, 1994).
Reference: <author> Meyer, D.E., & Kieras, D.E. </author> <year> (1994). </year> <title> EPIC computational models of psychological refractory period effects in human multiple-task performance. </title> <type> (EPIC Tech. Rep. No. 2, </type> <institution> TR-94/ONR-EPIC-2). Ann Arbor, University of Michigan, Department of Psychology. </institution>
Reference: <author> Monkiewicz, J. </author> <year> (1992). </year> <title> CAD's next-generation user interface. </title> <booktitle> Computer-Aided Engineering, </booktitle> <month> November, </month> <year> 1992, </year> <pages> 55-56. </pages> <address> 49 Nesbitt, Keith. </address> <year> (1994, </year> <title> unpublished). A case study of GOMS analysis: Extension of user interfaces. </title> <type> Unpublished report, </type> <institution> BHP Research - Newcastle Laboratories, Wallsend, NSW, Australia. </institution>
Reference: <author> Nelson, G. H., Lehman, J. F., & John. B. E. </author> <title> (1994) Integrating cognitive capabilities in a real time task. </title> <booktitle> In Proceedings of the Sixteenth Annual Conference of the Cognitive Science Society (Atlanta, </booktitle> <address> Georgia, </address> <month> August 13-16, </month> <year> 1994). </year>
Reference-contexts: The only currently documented GOMS technique based on this framework is CPM-GOMS, and as pointed out below, there is currently a lack of models and 28 techniques for many of the related design issues. Work underway by John and colleagues <ref> (Nelson, Lehman, & John, 1994) </ref> applies the Soar cognitive architecture to the same kinds of interactions as CPM-GOMS, including using a Soar model to generate the PERT charts for a CPM-GOMS analysis.
Reference: <author> Newell, A., & Simon, H. A. </author> <year> (1972). </year> <title> Human problem solving. </title> <address> Englewood Cliffs, NJ: </address> <publisher> Prentice Hall. </publisher>
Reference: <author> Nielsen, J. and Phillips, V. L. </author> <title> (1993) Estimating the relative usability of two interfaces: Heuristic, formal, and empirical methods compared. </title> <booktitle> In Proceedings of INTERCHI, 1993 Amsterdam, The Netherlands, </booktitle> <pages> pp. 214-221, </pages> <address> New York: </address> <publisher> ACM. </publisher>
Reference: <author> Oberg, E., Jones, F. D., and Horton, H. L. </author> <title> (1978) Machinery's Handbook: A reference book for the mechanical engineer, </title> <editor> draftsman, toolmaker and machinist. </editor> <booktitle> Twentieth edition, fourth printing, </booktitle> <publisher> Industrial Press Inc: </publisher> <address> New York. </address>
Reference: <author> Olson, J. R., & Olson, G. M. </author> <year> (1990). </year> <title> The growth of cognitive modeling in human-computer interaction since GOMS. </title> <journal> Human-Computer Interaction, </journal> <volume> 5, </volume> <pages> 221-265. </pages>
Reference-contexts: The third restriction is that in all GOMS analysis techniques, the designer or analyst must start with a list of top-level tasks or user goals. GOMS analyses and methods do not provide this list; it must come from sources external to GOMS <ref> (see also Olson and Olson, 1990, Karat & Bennett 1989) </ref>. <p> The KLM also includes a set of five heuristic rules for placing mental operators to account for mental preparation time during a task that requires several physical operators. Subsequent research has refined these six primitive operators, improving the time estimates or differentiating between different types of mental operations <ref> (Olson & Olson, 1990) </ref> and practitioners often tailor these operators to suit their particular user group and interface requirements (e.g., Haunold & Kuhn, 1994).
Reference: <author> Peck, V. A. & John, B. E. </author> <year> (1992). </year> <title> Browser-Soar: A cognitive model of a highly interactive task. </title> <booktitle> In Proceedings of CHI, </booktitle> <address> 1992 (Monterey, California, </address> <month> May 3- May 7, </month> <booktitle> 1992) ACM, </booktitle> <address> New York, </address> <year> 1992. </year> <pages> pp. 165-172. </pages>
Reference-contexts: a new programming language to 30 create a graphing application showed that embedded in the problem-solving activities of designing the program and figuring out how to use the new language was the routine behavior of manipulating the help system and that GOMS was applicable to the analysis of this behavior <ref> (Peck & John, 1992) </ref>.
Reference: <author> Polson, P.G. </author> <year> (1988). </year> <title> Transfer and retention. </title> <editor> In R. Guindon (Ed.), </editor> <title> Cognitive science and its application for human-computer interaction. </title> <address> Hillsdale, N.J: </address> <publisher> Erlbaum. </publisher> <pages> Pp. 59-162. </pages>
Reference: <author> Polson, P., & Lewis, C. </author> <year> (1990). </year> <title> Theory-based design for easily learned interfaces. </title> <booktitle> Human Computer Interaction, </booktitle> <volume> 5, </volume> <pages> 191-220. </pages>
Reference: <author> Reason, J. </author> <year> (1990). </year> <title> Human Error. </title> <publisher> Cambridge: Cambridge University Press. </publisher>
Reference-contexts: No prediction methodology, regardless of the theoretical approach, has yet been developed and recognized as satisfactory, and even the theoretical analysis of human error is still in its infancy <ref> (see Reason, 1990 for more discussion) </ref>. At this time, GOMS models also fail to address error prediction or prevention. However, as originally pointed out by CMN, GOMS has a direct application to the problem of error recovery.
Reference: <author> Rieman, J., Lewis, C. Young, R. M., & Polson, P. G. </author> <title> "'Why is a raven like a writing desk?' Lessons in interface consistency and analogical reasoning from two cognitive architectures" In Proceedings of CHI, </title> <booktitle> 1994, </booktitle> <address> (Boston, MA, USA, April 24-28, 1994). New York: </address> <publisher> ACM, </publisher> <pages> pp. 438-444. </pages>
Reference-contexts: For example, current work on electronics troubleshooting (see Gott, 1988) incorporates the person's knowledge of electronic components and the structure and function of the system under investigation, in addition to various kinds of procedural knowledge, and current work in analogical reasoning has been applied to understanding consistency in operating systems <ref> (Rieman, Lewis, Young & Polson, 1994) </ref>. <p> Of course, users often engage in problem-solving, exploration, and other non-routine activities while using a computer and other cognitive 11 modeling approaches and task analysis techniques can be used to investigate these behaviors (e.g., the Cognitive Walkthrough technique <ref> (Wharton, Rieman, Lewis & Polson, 1994) </ref> applies to exploratory behavior by novice users). These issues, symbolized by the italicized area at the top of Figure 2, will be discussed further below, and some related research directions will be touched on very briefly. <p> A different approach would be to describe the general learning processes that eventually lead to a routine cognitive skill, for example the use of a general analogy mechanism in both ACT-R and Soar <ref> (Rieman, Lewis, Young and Polson, 1994) </ref>. It remains to be seen whether useful engineering models emerge from research on these highly unstructured situations, and whether the models have clear relations to the GOMS family, or take a different form. <p> The other italicized area concerns various other computational architectures and their application to HCI tasks. Some research architectures, such as Construction-Integration (Doane, Mannes, Kintsch, & Polson, 1992; Doane, McNamara, Kintsch, Polson, & Clawson, 1992; Kitajima & Polson, 1992) and ACT-R <ref> (Rieman, Lewis, Young, & Polson, 1994) </ref> have been applied to the analysis of HCI problems, but it is not yet clear what kind of design techniques will result. A particularly important issue is the underutilization of the parallel multiprocessor conceptual framework.
Reference: <author> Steinberg, L. S., & Gitomer, D. H. </author> <year> (1993). </year> <title> Cognitive task analysis, interface design, and technical troubleshooting. </title> <editor> In W. D. Gray, W. E. Hefley, & D. </editor> <booktitle> Murray (Eds.),Proceedings of the 1993 International Workshop on Intelligent User Interfaces. </booktitle> <address> New York: </address> <publisher> ACM. </publisher> <pages> (pp. 185-191). </pages>
Reference: <author> Stires, D. M. & Murphy, M. M. </author> <year> (1962). </year> <title> PERT (Program Evaluation and Review Technique) CPM (Critical Path Method). Boston: Materials Management Institute. Webster's New Collegiate Dictionary. </title> <booktitle> (1977). </booktitle> <address> Springfield, MA.: </address> <publisher> G. </publisher> & <address> C. </address> <publisher> Merriam Company. </publisher>
Reference: <author> Wharton, C., Rieman, J., Lewis, C., & Polson, P. </author> <title> (1994) The Cognitive Walkthrough Method: A practitioners guide. </title> <editor> In Jakob Nielsen and Robert L. Mack (eds.) </editor> <title> Usability Inspection Methods. </title> <address> New York: </address> <publisher> John Wiley & Sons, Inc. </publisher>
Reference-contexts: Of course, users often engage in problem-solving, exploration, and other non-routine activities while using a computer and other cognitive 11 modeling approaches and task analysis techniques can be used to investigate these behaviors (e.g., the Cognitive Walkthrough technique <ref> (Wharton, Rieman, Lewis & Polson, 1994) </ref> applies to exploratory behavior by novice users). These issues, symbolized by the italicized area at the top of Figure 2, will be discussed further below, and some related research directions will be touched on very briefly.
Reference: <author> Wiesmeyer, M. D. </author> <year> (1992). </year> <title> An operator-based model of human covert visual attention. </title> <type> PhD thesis, </type> <institution> University of Michigan. </institution> <note> 50 Wood, </note> <author> S. </author> <year> (1993). </year> <title> Issues in the implementation of a GOMS-model design tool. </title> <type> Unpublished report, </type> <institution> University of Michigan. </institution>
Reference: <author> Wood, S., Kieras, D., & Meyer, D. </author> <year> (1994). </year> <title> An EPIC model for a high performance HCI task. </title> <booktitle> CHI'94 Conference Companion, ACM. </booktitle> <pages> (pp. 24-28). </pages>
Reference: <author> Van Cott, H. P. & Kinkade, R. G. </author> <title> (1972) Human engineering guide to equipment design (revised edition). </title> <address> Washington, D. C.: </address> <publisher> American Institutes for Research. </publisher>
Reference: <author> Ziegler, J. E., Hoppe, H. U., & Fahnrich, K. P. </author> <year> (1986). </year> <title> Learning and transfer for text and graphics editing with a direct manipulation interface. </title> <booktitle> In Proceeding of CHI, 1986. </booktitle> <address> New York: </address> <publisher> ACM. </publisher>
References-found: 71

