URL: ftp://ftp.cis.ufl.edu/cis/tech-reports/tr95/tr95-021.ps
Refering-URL: http://www.cis.ufl.edu/tech-reports/tech-reports/tr95-abstracts.html
Root-URL: http://www.cis.ufl.edu
Title: COMPUTING THE SPARSE INVERSE SUBSET: AN INVERSE MULTIFRONTAL APPROACH  
Author: YOGIN E. CAMPBELL AND TIMOTHY A. DAVIS 
Keyword: Key words. Sparse matrices, symmetric multifrontal method, supernode, Takahashi equations, inverse multifrontal method, inverse frontal matrix, inverse contribution matrix, inverse assembly tree, Zsparse.  Abbreviated title: Multifrontal Sparse Inverse Subset  
Web: 05C50, 65F50, 65F05.  
Note: AMS (MOS) subject classifications.  Abstract.  
Abstract: Technical Report TR-95-021, Computer and Information Sciences Department, University of Florida, Gainesville, FL, 32611 USA. October, 1995. We present the symmetric inverse multifrontal method for computing the sparse inverse subset of symmetric matrices. The symmetric inverse multifrontal approach uses an equation presented by Takahashi, Fagan, and Chin to compute the numerical values of the entries of the inverse, and an inverted form of the symmetric multifrontal method of Duff and Reid to guide the computation. We take advantage of related structures that allow the use of dense matrix kernels (levels 2 & 3 BLAS) in the computation of this subset. We discuss the theoretical basis for this new algorithm and give numerical results for a serial implementation and demonstrate its performance on a Cray-C98. 1. Introduction. We address the problem of computing the sparse inverse 
Abstract-found: 1
Intro-found: 1
Reference: <institution> 20 </institution>
Reference: [1] <author> P. R. Amestoy, T. A. Davis, and I. S. Duff. </author> <title> An approximateminimum degree ordering algorithm. SIAM J. Matrix Analysis and Application, </title> <note> (to appear). Also CISE Technical Report TR-94-039. </note>
Reference-contexts: One or more steps of Gaussian elimination is done on each of these frontal matrices. In general, the symmetric multifrontal algorithm consists of a symbolic analysis phase and a numerical factorization phase. In the analysis phase a fill-reducing pivot ordering algorithm (such as the approximate minimum degree algorithm <ref> [1] </ref> or the minimum degree algorithm [14]) is used to establish the pivot order and data structures. In addition, the precedence relationships among the frontal matrices that are used in the numerical phase are established and given by the assembly or elimination tree [9, 16].
Reference: [2] <author> R. Betancourt and F. L. Alvarado. </author> <title> Parallel inversion of sparse matrices. </title> <journal> IEEE Transactions on Power Systems, </journal> <volume> PWRS-1(1):74-81, </volume> <year> 1986. </year>
Reference-contexts: Prior results on computing Zsparse and other related inverse subsets, based on the two equations of Takahashi, Fagan, and Chin, are found in the articles by Erisman and Tinney [13], and Betancourt and Alvarado <ref> [2] </ref>. Erisman and Tinney in [13] proved that both Zsparse and the subset of entries on the diagonal of Z can be evaluated without computing any inverse entry from outside of Zsparse. In [2] Betancourt and Alvarado give a parallel algorithm to compute Zsparse and the full inverse. <p> Fagan, and Chin, are found in the articles by Erisman and Tinney [13], and Betancourt and Alvarado <ref> [2] </ref>. Erisman and Tinney in [13] proved that both Zsparse and the subset of entries on the diagonal of Z can be evaluated without computing any inverse entry from outside of Zsparse. In [2] Betancourt and Alvarado give a parallel algorithm to compute Zsparse and the full inverse. None of these two articles considered the use of dense matrix operations such as matrix-vector or matrix-matrix multiplications in the computations. <p> We show that the results in [13] and <ref> [2] </ref> can be easily derived using this formulation. In the multifrontal method the frontal matrix and assembly tree are the two key constructs. We introduce two similar constructs, the inverse frontal matrix and the inverse assembly tree, and discuss their relationship to the frontal matrix and assembly tree, respectively.
Reference: [3] <author> Y. E. Campbell. </author> <title> Multifrontal algorithms for sparse inverse subsets and incomplete LU factorization. </title> <type> PhD thesis, </type> <institution> Computer and Information Science and Engineering Department, Univ. of Florida, </institution> <address> Gainesville, FL, </address> <month> November </month> <year> 1995. </year> <note> Also CISE Technical Report TR-95-025. </note>
Reference-contexts: Our numerical results show that there is a significant improvement in the performance of the Zsparse algorithm when the level 2 (matrix-vector) and level 3 (matrix-matrix) BLAS [8] operations are used in the implementation. In this paper we develop a new method, the symmetric inverse multifrontal method <ref> [3] </ref>, to compute Zsparse.
Reference: [4] <author> Y. E. Campbell and T. A. Davis. </author> <title> On computing an arbitrary subset of entries of the inverse of a matrix. </title> <type> Technical Report TR-95-022, </type> <institution> Computer and Information Science and Engineering Department, Univ. of Florida, </institution> <year> 1995. </year>
Reference-contexts: First, note that the direct u-dependency set T ij is independent of index j since the set defined by Equation (4.3) is independent of j. (This is true even for z ij =2 Zsparse <ref> [4] </ref>.) Second, the direct z-dependency set of an inverse entry z ij 2 Zsparse, i 6= j, is identical to column j of the inverse contribution block of F i . This can be easily proved. <p> The theoretical development and implementation are very similar for computing Zsparse when A and Z are unsymmetric in value but have symmetric nonzero patterns. We discuss a parallel implementation of our algorithm in [5], and an extension to arbitrary subsets of Z in <ref> [4] </ref>. An open problem remains in adapting the inverse multifrontal method to the case where the coefficient matrix has been reduced to block-triangular form before the factorization is done. 8. Acknowledgements.
Reference: [5] <author> Y. E. Campbell and T. A. Davis. </author> <title> A parallel implementation of the block-partioned inverse multifrontal Zsparse algorithm. </title> <type> Technical Report TR-95-023, </type> <institution> Computer and Information Science and Engineering Department, Univ. of Florida, </institution> <year> 1995. </year>
Reference-contexts: The 8 Fig. 4.3. The frontal and inverse frontal constructs inverse assembly tree can also be used in a parallel algorithm to compute Zsparse. We report results on such an algorithm in <ref> [5] </ref>. In Figure 4.3 we give a side-by-side illustration of the multifrontal and inverse multifrontal constructs for the matrix in Equation (3.2). <p> The theoretical development and implementation are very similar for computing Zsparse when A and Z are unsymmetric in value but have symmetric nonzero patterns. We discuss a parallel implementation of our algorithm in <ref> [5] </ref>, and an extension to arbitrary subsets of Z in [4]. An open problem remains in adapting the inverse multifrontal method to the case where the coefficient matrix has been reduced to block-triangular form before the factorization is done. 8. Acknowledgements.
Reference: [6] <author> T. A. Davis and I. S. Duff. </author> <title> A combined unifrontal/multifrontal method for unsymmetric sparse matrices. </title> <type> Technical Report TR-95-020, </type> <institution> Computer and Information Science and Engineering Department, Univ. of Florida, </institution> <year> 1995. </year>
Reference-contexts: The sizes of the matrices range from small (the 100-by-100 Nos4 matrix) to fairly large (74652-by-74752 for the Finan512 matrix). The matrices were first factored using a early modified form, with strict diagonal pivoting, of UMFPACK Version 2.0 <ref> [7, 6] </ref>. The supernodal tree information was also generated by UMFPACK. In general, any supernodal or multifrontal Cholesky factorization algorithm can be used. Table 6.2 gives the execution times for the scalar and block-partitioned Zsparse implementations.
Reference: [7] <author> T. A. Davis and I. S. Duff. </author> <title> An unsymmetric-pattern multifrontal method for sparse LU factorization. SIAM J. Matrix Analysis and Application, </title> <note> (to appear). Also CISE Technical Report TR-94-038. </note>
Reference-contexts: The sizes of the matrices range from small (the 100-by-100 Nos4 matrix) to fairly large (74652-by-74752 for the Finan512 matrix). The matrices were first factored using a early modified form, with strict diagonal pivoting, of UMFPACK Version 2.0 <ref> [7, 6] </ref>. The supernodal tree information was also generated by UMFPACK. In general, any supernodal or multifrontal Cholesky factorization algorithm can be used. Table 6.2 gives the execution times for the scalar and block-partitioned Zsparse implementations.
Reference: [8] <author> J. Dongarra, J. Du Croz, S. Hammarling, and I. Duff. </author> <title> A set of Level 3 Basic Linear Algebra Subprograms. </title> <journal> ACM Transactions on Mathematical Software, </journal> <volume> 16(1) </volume> <pages> 1-17, </pages> <year> 1990. </year>
Reference-contexts: None of these two articles considered the use of dense matrix operations such as matrix-vector or matrix-matrix multiplications in the computations. Our numerical results show that there is a significant improvement in the performance of the Zsparse algorithm when the level 2 (matrix-vector) and level 3 (matrix-matrix) BLAS <ref> [8] </ref> operations are used in the implementation. In this paper we develop a new method, the symmetric inverse multifrontal method [3], to compute Zsparse.
Reference: [9] <author> I. S. Duff, A. M. Erisman, and J. K. Reid. </author> <title> Direct Methods for Sparse Matrices. </title> <publisher> Oxford Science Publications, </publisher> <address> New York, NY, </address> <year> 1991. </year>
Reference-contexts: Illustration of the Takahashi equation, Equation (2.1) where the notation y ij = (Y ) ij is used. The elements of Z can be computed in reverse Crout order <ref> [9] </ref>. <p> In addition, the precedence relationships among the frontal matrices that are used in the numerical phase are established and given by the assembly or elimination tree <ref> [9, 16] </ref>. In this phase only the pattern of A is used. The numerical work to actually compute the LU factors is done in the numerical factorization phase. The assembly tree is used to guide the computation in this phase.
Reference: [10] <author> I. S. Duff, R. G. Grimes, and J. G. Lewis. </author> <title> Users' guide for the Harwell-Boeing sparse matrix collection (release 1). </title> <type> Technical Report RAL-92-086, </type> <institution> Rutherford Appleton Laboratory, </institution> <address> Didcot, Oxon, England, </address> <month> Dec. </month> <year> 1992. </year>
Reference-contexts: Step 3a involves a saxpy operation, while lines 3b and 6a involve dot products. 6.3. Numerical results. Statistics for the test matrices used in our numerical experiments are shown in Table 6.1. Most of these matrices are part of the Harwell-Boeing sparse matrix collection <ref> [10] </ref>. The sizes of the matrices range from small (the 100-by-100 Nos4 matrix) to fairly large (74652-by-74752 for the Finan512 matrix). The matrices were first factored using a early modified form, with strict diagonal pivoting, of UMFPACK Version 2.0 [7, 6]. The supernodal tree information was also generated by UMFPACK.
Reference: [11] <author> I. S. Duff and J. K. Reid. </author> <title> The multifrontal solution of unsymmetric sets of linear equations. </title> <journal> SIAM J. of Sci. and Statis. Computing, </journal> <volume> 5(3) </volume> <pages> 633-641, </pages> <year> 1984. </year>
Reference-contexts: The second step involves solving the two triangular systems Ly = b for y (forward substitution), and U x = y for x (backward substitution). The symmetric multifrontal method of Duff and Reid <ref> [11, 12] </ref> (see also Liu [17]) is an efficient method to compute the LU factorization of A, especially on machines with memory hierarchy. This factorization method is based on the use of dense matrix kernels in the innermost loops.
Reference: [12] <author> I.S. Duff and J.K. Reid. </author> <title> The multifrontal solution of indefinite sparse symmetric linear equations. </title> <journal> ACM Trans. Math. Software, </journal> <volume> 9 </volume> <pages> 302-325, </pages> <year> 1983. </year>
Reference-contexts: We use one of the equations from [19] (henceforth referred to as the Takahashi equation (s)) to compute the numerical values of the inverse elements, and an inverted form of the symmetric multifrontal method of Duff and Reid <ref> [12] </ref> to fl email: yec@cis.ufl.edu. y Computer and Information Science and Engineering Department, University of Florida, Gainesville, Florida, USA. (904) 392-1481, email: davis@cis.ufl.edu. <p> In Section 2, we discuss relevant aspects of one of the Takahashi equations and give a small example showing its use. We briefly review the symmetric multifrontal factorization method in Section 3. For a more detailed treatment of multifrontal factorization we refer the reader to <ref> [12, 17] </ref>. The inverse multifrontal algorithm is developed in Sections 4 and 5. In Section 4, the fundamentals of the inverse multifrontal approach are presented, culminating in an algorithm to compute Zsparse based on using matrix-vector operations. <p> The second step involves solving the two triangular systems Ly = b for y (forward substitution), and U x = y for x (backward substitution). The symmetric multifrontal method of Duff and Reid <ref> [11, 12] </ref> (see also Liu [17]) is an efficient method to compute the LU factorization of A, especially on machines with memory hierarchy. This factorization method is based on the use of dense matrix kernels in the innermost loops.
Reference: [13] <author> A. M. Erisman and W. F.Tinney. </author> <title> On computing certain elements of the inverse of a sparse matrix. </title> <journal> Communications of the ACM, </journal> <volume> 18 </volume> <pages> 177-179, </pages> <month> March </month> <year> 1975. </year>
Reference-contexts: Prior results on computing Zsparse and other related inverse subsets, based on the two equations of Takahashi, Fagan, and Chin, are found in the articles by Erisman and Tinney <ref> [13] </ref>, and Betancourt and Alvarado [2]. Erisman and Tinney in [13] proved that both Zsparse and the subset of entries on the diagonal of Z can be evaluated without computing any inverse entry from outside of Zsparse. <p> Prior results on computing Zsparse and other related inverse subsets, based on the two equations of Takahashi, Fagan, and Chin, are found in the articles by Erisman and Tinney <ref> [13] </ref>, and Betancourt and Alvarado [2]. Erisman and Tinney in [13] proved that both Zsparse and the subset of entries on the diagonal of Z can be evaluated without computing any inverse entry from outside of Zsparse. In [2] Betancourt and Alvarado give a parallel algorithm to compute Zsparse and the full inverse. <p> Technical reports and matrices are available via the World Wide Web at http://www.cis.ufl.edu/~davis, or by anonymous ftp at ftp.cis.ufl.edu:cis/tech-reports. 1 2 guide the computation and take advantage of related structures that allow the use of dense matrix kernels in the innermost loops. We show that the results in <ref> [13] </ref> and [2] can be easily derived using this formulation. In the multifrontal method the frontal matrix and assembly tree are the two key constructs. <p> The other entries in the row are independent of each other and can therefore be computed in any order. Erisman and Tinney show in <ref> [13] </ref> that the sparse subset can be computed in terms of U , and other inverse elements from within the sparse subset only. This important result allows one to safely ignore all other inverse elements when computing the sparse subset. 2.1. An Example. <p> The fifth and final result concerns the direct z-dependency set of all entries in Zsparse. Erisman and Tinney in <ref> [13] </ref> showed that the only inverse entries that an entry in Zsparse depended on also belong to Zsparse. In our terminology, this is equivalent to saying that the direct z-dependency set of Zsparse is equal to Zsparse. We prove this result next.
Reference: [14] <author> A. George and J. W. H. Liu. </author> <title> Computer Solution of Large Sparse Positive-Definite Systems. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1981. </year>
Reference-contexts: In general, the symmetric multifrontal algorithm consists of a symbolic analysis phase and a numerical factorization phase. In the analysis phase a fill-reducing pivot ordering algorithm (such as the approximate minimum degree algorithm [1] or the minimum degree algorithm <ref> [14] </ref>) is used to establish the pivot order and data structures. In addition, the precedence relationships among the frontal matrices that are used in the numerical phase are established and given by the assembly or elimination tree [9, 16]. In this phase only the pattern of A is used.
Reference: [15] <author> G. H. Golub and C. F. van Loan. </author> <title> Matrix Computations. </title> <publisher> The Johns Hopkins University Press, </publisher> <address> Baltimore, MD and London, UK, </address> <note> second edition, </note> <year> 1990. </year>
Reference-contexts: Z i = T i Z i 00 00 00 Z i = D 1 00 00 i 0 0 00 (Z i ) r;r = (Z i ) r;r + ((T i ) [r;r+1:i+m] )(Z i ) T (5.1) We used the colon notation found in <ref> [15] </ref> where X [p:q;r:s] represents the matrix with row indices ranging from p to q and column indices from r to s. If p = q then X [p;r:s] is a row vector with column indices r through s.
Reference: [16] <author> J. W. H. Liu. </author> <title> The role of elimination trees in sparse factorization. </title> <journal> Siam J. Matrix Appl., </journal> <volume> 11(1) </volume> <pages> 134-172, </pages> <year> 1990. </year>
Reference-contexts: In addition, the precedence relationships among the frontal matrices that are used in the numerical phase are established and given by the assembly or elimination tree <ref> [9, 16] </ref>. In this phase only the pattern of A is used. The numerical work to actually compute the LU factors is done in the numerical factorization phase. The assembly tree is used to guide the computation in this phase. <p> natural partitioning of the frontal matrix F into four parts: the pivot element, the off-diagonal pivot row, the off-diagonal pivot column, and the contribution matrix C = f (F ) ij j i; j 2 U i g: The assembly tree can be constructed using the parent-child relationship given by <ref> [16] </ref> parent (i) = minf j j l ji 6= 0 ; j &gt; ig = minf j jj 2 L i g: node numbers correspond to the labels of frontal matrices and the arrows specify the dependency relationships among frontal matrices.
Reference: [17] <author> J. W. H. Liu. </author> <title> The multifrontal method for sparse matrix solution: </title> <journal> Theory and practice. Siam Review, </journal> <volume> 34(1) </volume> <pages> 82-109, </pages> <month> March </month> <year> 1992. </year>
Reference-contexts: In Section 2, we discuss relevant aspects of one of the Takahashi equations and give a small example showing its use. We briefly review the symmetric multifrontal factorization method in Section 3. For a more detailed treatment of multifrontal factorization we refer the reader to <ref> [12, 17] </ref>. The inverse multifrontal algorithm is developed in Sections 4 and 5. In Section 4, the fundamentals of the inverse multifrontal approach are presented, culminating in an algorithm to compute Zsparse based on using matrix-vector operations. <p> The second step involves solving the two triangular systems Ly = b for y (forward substitution), and U x = y for x (backward substitution). The symmetric multifrontal method of Duff and Reid [11, 12] (see also Liu <ref> [17] </ref>) is an efficient method to compute the LU factorization of A, especially on machines with memory hierarchy. This factorization method is based on the use of dense matrix kernels in the innermost loops. Dense submatrices called frontal matrices are formed as the multifrontal algorithm progresses.
Reference: [18] <author> J. W. H. Liu, E. G. Ng, and B. W. Peyton. </author> <title> On finding supernodes for sparse matrix computations. </title> <journal> Siam J. Matrix Anal. Appl., </journal> <volume> 14(1) </volume> <pages> 242-252, </pages> <month> January </month> <year> 1993. </year>
Reference-contexts: We show in this section how to extend the simple algorithm for computing Zsparse to take advantage of the supernodes formed during the LDU factorization. 5.1. The supernodal inverse constructs. Our definition of a supernode comes from a theorem given by Liu, Ng, and Peyton in <ref> [18] </ref>: Theorem 5.1 ([18]). <p> All we really need is the pattern of nonzeros in the factorized matrix; even the supernodal structures can be reconstructed from the filled-matrix pattern information <ref> [18] </ref>. The essential theoretical results, stated in Equations (4.3) and (4.4), and the ensuing observations, give a precise description of the locations of the direct dependency sets when inverting an inverse frontal matrix. This allows the use of level 2 and level 3 BLAS in the implementation.
Reference: [19] <author> K. Takahashi, J. Fagan, and M. Chin. </author> <title> Formation of a sparse bus impedance matrix and its application to short circuit study. </title> <booktitle> 8th PICA Conference Proc., Minneapolis, Minn, </booktitle> <pages> pages 177-179, </pages> <month> June, 4-6 </month> <year> 1973. </year> <note> Note: all University of Florida technical reports in this list of references are available in postscript form via anonymous ftp to ftp.cis.ufl.edu in the directory cis/tech-reports, or via the World Wide Web at http://www.cis.ufl.edu/~davis. </note>
Reference-contexts: 1. Introduction. We address the problem of computing the sparse inverse subset (Zsparse) of a symmetric matrix, A, using the LDU factorization of A, and an equation relating the LDU factors to Z = A 1 presented by Takahashi, Fagan, and Chin in <ref> [19] </ref>. The sparse inverse subset is defined as the set of entries in the upper triangular part of Z in locations given by the nonzero entries in the factorized matrix: that is, Zsparse = fz ij j (U ) ij 6= 0g Z. <p> In this paper we develop a new method, the symmetric inverse multifrontal method [3], to compute Zsparse. We use one of the equations from <ref> [19] </ref> (henceforth referred to as the Takahashi equation (s)) to compute the numerical values of the inverse elements, and an inverted form of the symmetric multifrontal method of Duff and Reid [12] to fl email: yec@cis.ufl.edu. y Computer and Information Science and Engineering Department, University of Florida, Gainesville, Florida, USA. (904) <p> Performance results from an implementation of a block-structured form of the Zsparse algorithm on the Cray-C98 is discussed in Section 6. Conclusions and avenues for future work are given in Section 7. 2. The Takahashi equation. Takahashi, Fagan, and Chin in <ref> [19] </ref> presented two equations for computing the inverse of a general matrix A, using its LDU factorization.
References-found: 20

