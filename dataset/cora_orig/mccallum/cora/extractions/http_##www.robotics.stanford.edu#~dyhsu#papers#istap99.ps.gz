URL: http://www.robotics.stanford.edu/~dyhsu/papers/istap99.ps.gz
Refering-URL: http://www.robotics.stanford.edu/~dyhsu/publications.html
Root-URL: http://www.robotics.stanford.edu
Email: fdyhsu, latombe, ssorking@cs.stanford.edu  
Title: Placing a Robot Manipulator Amid Obstacles for Optimized Execution  
Author: David Hsu Jean-Claude Latombe Stephen Sorkin 
Date: 1999  
Note: submitted to IEEE International Symposium on Assembly and Task Planning  
Address: Stanford, CA 94305, U.S.A.  
Affiliation: Computer Science Department, Stanford University  
Abstract: This paper presents an efficient algorithm for optimizing the base location of a manipulator in an environment cluttered with obstacles, in order to execute specified tasked as fast as possible. The algorithm uses randomized motion planning techniques and exploits geometric "coherence" in configuration space to achieve fast computation. We provide experimental results to demonstrate the algorithm's performance on both synthetic examples and real-life CAD data from the automotive industry. The computation time ranges from under a minute for simple problems to a few minutes for more complex ones. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> N. M. Amato, O. B. Bayazit, L. K. Dale, C. Jones, and D. Vallejo. OBPRM: </author> <title> An obstacle-based PRM for 3D workspaces. </title> <booktitle> In Proc. Workshop on Algorithmic Foundation of Robotics, </booktitle> <year> 1998. </year>
Reference-contexts: In the last decade, several practical planners have been developed for many-DOF robots [2, 5, 9, 13]. A particularly interesting development has been the introduction of random sampling into path planning <ref> [1, 10, 11, 13] </ref>. Randomized path planners are capable of solving path planning problems for many-DOF robots in very complex environments. <p> The set of all configurations forms the configurations space C, and the set of all free configurations forms the free space F , a subset of C. The complement of F, C n F, is called the configuration-space obstacle (C-obstacle). A path in C is a continuous mapping from <ref> [0; 1] </ref> into C. The cost of a path can be measured in many ways, the most important ones being the time and energy that it takes a manipulator to execute the path.
Reference: [2] <author> J. Barraquand and J.-C. Latombe. </author> <title> Robot motion planning: A distributed representation approach. </title> <journal> Int. J. of Robotics Research, </journal> <volume> 10(6) </volume> <pages> 628-649, </pages> <year> 1991. </year>
Reference-contexts: The best complete planner [4], that is, a planner that finds a path whenever one exists and reports that none exists otherwise, takes time exponential in the number of degrees of freedom of a robot. In the last decade, several practical planners have been developed for many-DOF robots <ref> [2, 5, 9, 13] </ref>. A particularly interesting development has been the introduction of random sampling into path planning [1, 10, 11, 13]. Randomized path planners are capable of solving path planning problems for many-DOF robots in very complex environments.
Reference: [3] <author> J. Canny and J. Reif. </author> <title> New lower bound techniques for robot motion planning problems. </title> <booktitle> In Proc. IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pp. 49-60, </pages> <year> 1987. </year>
Reference-contexts: Research in computational geometry has yielded many efficient algorithms in 2-D for various metrics [8, pp. 445-466]. The shortest path problem in three or higher dimensions is considerably harder: it has been proven to be NP-hard in 3-D <ref> [3] </ref>. Therefore if we want to find a minimum-time path for a many-DOF manipulator, we may have to resort to approximation techniques. One possibility is to plan a collision-free path first and then deform the path iteratively to reduce the execution time [18]. This is the approach taken here.
Reference: [4] <author> J. Canny, J. Reif, B. Donald, and P. Xavier. </author> <title> On the complexity of kinodynamic planning. </title> <booktitle> In Proc. IEEE Conf. on Foundations of Computer Science, </booktitle> <pages> pp. 306-316, </pages> <year> 1988. </year>
Reference-contexts: Section 4 and 5 describe the algorithm and experiments, respectively. Section 6 summarizes the results and points out direction for future research. 2 Related work Planning the motion for a robot amid obstacles is a classic problem in robotics [15]. The best complete planner <ref> [4] </ref>, that is, a planner that finds a path whenever one exists and reports that none exists otherwise, takes time exponential in the number of degrees of freedom of a robot. In the last decade, several practical planners have been developed for many-DOF robots [2, 5, 9, 13].
Reference: [5] <author> P. C. Chen and Y. K. Hwang. SANDROS: </author> <title> A motion planner with performance proportional to task difficulty. </title> <booktitle> In Proc. IEEE Int. Conf. on Robotics and Automation, </booktitle> <pages> pp. 2346-2353, </pages> <year> 1992. </year>
Reference-contexts: The best complete planner [4], that is, a planner that finds a path whenever one exists and reports that none exists otherwise, takes time exponential in the number of degrees of freedom of a robot. In the last decade, several practical planners have been developed for many-DOF robots <ref> [2, 5, 9, 13] </ref>. A particularly interesting development has been the introduction of random sampling into path planning [1, 10, 11, 13]. Randomized path planners are capable of solving path planning problems for many-DOF robots in very complex environments.
Reference: [6] <author> B. Donald, P. Xavier, J. Canny, and J. Reif. </author> <title> Kinody-namic motion planning. </title> <journal> J. ACM, </journal> <volume> 40(5) </volume> <pages> 1048-1066, </pages> <year> 1993. </year>
Reference-contexts: This is the approach taken here. Alternatively, for a simple robot with two or three DOFs, one may discretize the state space of the robot and search this space for an approximation to the minimum-time path <ref> [6] </ref>. Several variants of the robot placement problem have been proposed in the literature. Seraji considers the placement of a 7-DOF Robotics Research arm by analyzing its reachability [17].
Reference: [7] <author> J. T. Feddema. </author> <title> Kinematically optimal robot placement for minimum time coordinated motion. </title> <booktitle> In Proc. IEEE Int. Conf. on Robotics and Automation, </booktitle> <pages> pp. 3395-3400, </pages> <year> 1996. </year>
Reference-contexts: Oze-dou formulates the base placement problem as that of kinematic synthesis and solves it with general optimization techniques [16]. These works address the placement problem mainly from the reachability point of view. Fed-dema proposes an algorithm that places a manipulator for minimum-time joint-coordinated motion <ref> [7] </ref>, but he assumes an environment with no obstacles. Hwang and Watterberg's formulation of the placement problem [12] is more closely related to ours. Their algorithm dis-cretizes the space of all base locations and uses a path planner to exhaustively search the space in order to find the optimal solution.
Reference: [8] <author> J. E. Goodman and J. O'Rourke, </author> <title> editors. Handbook of Discrete and Computational Geometry. </title> <publisher> CRC Press, </publisher> <address> New York, </address> <year> 1997. </year>
Reference-contexts: A problem closely related to path-planning is that of finding the shortest path in an environment with obstacles. Research in computational geometry has yielded many efficient algorithms in 2-D for various metrics <ref> [8, pp. 445-466] </ref>. The shortest path problem in three or higher dimensions is considerably harder: it has been proven to be NP-hard in 3-D [3]. Therefore if we want to find a minimum-time path for a many-DOF manipulator, we may have to resort to approximation techniques.
Reference: [9] <author> K. Gupta and X. Zhu. </author> <title> Practical motion planning for many degrees of freedom: a novel approach within sequential framework. </title> <booktitle> In Proc. IEEE Int. Conf. on Robotics and Automation, </booktitle> <pages> pp. 2038-2043, </pages> <year> 1994. </year>
Reference-contexts: The best complete planner [4], that is, a planner that finds a path whenever one exists and reports that none exists otherwise, takes time exponential in the number of degrees of freedom of a robot. In the last decade, several practical planners have been developed for many-DOF robots <ref> [2, 5, 9, 13] </ref>. A particularly interesting development has been the introduction of random sampling into path planning [1, 10, 11, 13]. Randomized path planners are capable of solving path planning problems for many-DOF robots in very complex environments.
Reference: [10] <author> T. Horsch, F. Schwarz, and H. Tolle. </author> <title> Motion planning for many degrees of freedom random reflections at C-Space obstacles. </title> <booktitle> In Proc. IEEE Int. Conf. on Robotics and Automation, </booktitle> <pages> pp. 3318-3323, </pages> <year> 1994. </year>
Reference-contexts: In the last decade, several practical planners have been developed for many-DOF robots [2, 5, 9, 13]. A particularly interesting development has been the introduction of random sampling into path planning <ref> [1, 10, 11, 13] </ref>. Randomized path planners are capable of solving path planning problems for many-DOF robots in very complex environments.
Reference: [11] <author> D. Hsu, J.-C. Latombe, and R. Motwani. </author> <title> Path planning in expansive configuration spaces. </title> <booktitle> In Proc. IEEE Int. Conf. on Robotics and Automation, </booktitle> <pages> pp. 2719-2726, </pages> <year> 1997. </year>
Reference-contexts: We therefore believe that it is essential to consider the impact of obstacles on the placement of robot manipulators. Our algorithm first computes a collision-free path for an initial base location, using the randomized path planner described in <ref> [11] </ref>. This planner was chosen because it is one of the few that can efficiently plan a path for a many-DOF robot in a complex environment. The path is then deformed to obtain a locally optimal path. Finally we iteratively move the base to better locations. <p> In the last decade, several practical planners have been developed for many-DOF robots [2, 5, 9, 13]. A particularly interesting development has been the introduction of random sampling into path planning <ref> [1, 10, 11, 13] </ref>. Randomized path planners are capable of solving path planning problems for many-DOF robots in very complex environments. <p> Problems may arise if the discretiza-tion is not fine enough, but they can be eliminated by making use of the distance information returned by the collision-checker <ref> [11] </ref>. In the next three subsections, we will first look at the overall algorithm and then the two sub-algorithms in details. 4.1 Searching for the optimal placement In principle, given a path-planning and a path-optimization algorithm, we can search for a good base location in a brute-force way. <p> If there is, a path between q init and q goal is found. This simple algorithm is capable of solving complex path planning problems in cluttered environments in a few minutes. More details on this algorithm and implementation issues can be found in <ref> [11] </ref>. Note that if a manipulator has multiple IK solutions, we can easily extend this planner by considering multiple q init and q goal .
Reference: [12] <author> Y. K. Hwang and P. A. Watterberg. </author> <title> Optimizing robot placement for visit-point tasks. </title> <booktitle> In Proc. AAAI Workshop on Artificial Intelligence for Manufacturing, </booktitle> <pages> pp. 81-86, </pages> <year> 1996. </year>
Reference-contexts: These works address the placement problem mainly from the reachability point of view. Fed-dema proposes an algorithm that places a manipulator for minimum-time joint-coordinated motion [7], but he assumes an environment with no obstacles. Hwang and Watterberg's formulation of the placement problem <ref> [12] </ref> is more closely related to ours. Their algorithm dis-cretizes the space of all base locations and uses a path planner to exhaustively search the space in order to find the optimal solution.
Reference: [13] <author> L. Kavraki, P. Svestka, J.-C. Latombe, and M. H. Over-mars. </author> <title> Probabilistic roadmaps for path planning in high-dimensional configuration space. </title> <journal> IEEE Trans. on Robotics and Automation, </journal> <volume> 12(4) </volume> <pages> 566-580, </pages> <year> 1996. </year>
Reference-contexts: The best complete planner [4], that is, a planner that finds a path whenever one exists and reports that none exists otherwise, takes time exponential in the number of degrees of freedom of a robot. In the last decade, several practical planners have been developed for many-DOF robots <ref> [2, 5, 9, 13] </ref>. A particularly interesting development has been the introduction of random sampling into path planning [1, 10, 11, 13]. Randomized path planners are capable of solving path planning problems for many-DOF robots in very complex environments. <p> In the last decade, several practical planners have been developed for many-DOF robots [2, 5, 9, 13]. A particularly interesting development has been the introduction of random sampling into path planning <ref> [1, 10, 11, 13] </ref>. Randomized path planners are capable of solving path planning problems for many-DOF robots in very complex environments.
Reference: [14] <author> K. Kolarov. </author> <title> Algorithms for optimal design of robots in complex environments. </title> <editor> In K. Goldberg et al., editors, </editor> <booktitle> Algorithmic Foundations of Robotics, </booktitle> <pages> pp. 347-369. </pages> <editor> A. K. Peters, </editor> <year> 1995. </year>
Reference-contexts: Several variants of the robot placement problem have been proposed in the literature. Seraji considers the placement of a 7-DOF Robotics Research arm by analyzing its reachability [17]. Kolarov presents an algorithm that can place a robot made up of n telescoping links amid obstacles in a planar environment <ref> [14] </ref>. Oze-dou formulates the base placement problem as that of kinematic synthesis and solves it with general optimization techniques [16]. These works address the placement problem mainly from the reachability point of view.
Reference: [15] <author> J.-C. Latombe. </author> <title> Robot Motion Planning. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, MA, </address> <year> 1991. </year>
Reference-contexts: Section 3 gives a mathematical characterization of the problem. Section 4 and 5 describe the algorithm and experiments, respectively. Section 6 summarizes the results and points out direction for future research. 2 Related work Planning the motion for a robot amid obstacles is a classic problem in robotics <ref> [15] </ref>. The best complete planner [4], that is, a planner that finds a path whenever one exists and reports that none exists otherwise, takes time exponential in the number of degrees of freedom of a robot.
Reference: [16] <author> F. B. Ouezdou. </author> <title> General method for kinematic synthesis of manipulators with task specifications. </title> <journal> Robotica, </journal> <volume> 15(6) </volume> <pages> 653-661, </pages> <year> 1997. </year>
Reference-contexts: Kolarov presents an algorithm that can place a robot made up of n telescoping links amid obstacles in a planar environment [14]. Oze-dou formulates the base placement problem as that of kinematic synthesis and solves it with general optimization techniques <ref> [16] </ref>. These works address the placement problem mainly from the reachability point of view. Fed-dema proposes an algorithm that places a manipulator for minimum-time joint-coordinated motion [7], but he assumes an environment with no obstacles. Hwang and Watterberg's formulation of the placement problem [12] is more closely related to ours.
Reference: [17] <author> H. Seraji. </author> <title> Reachability analysis for base placement in mobile manipulators. </title> <journal> J. of Robotic Systems, </journal> <volume> 12(1) </volume> <pages> 29-43, </pages> <year> 1995. </year>
Reference-contexts: Our algorithm can also be used to positioning mobile manipulators, manipulators mounted on mobile bases. For many mobile manipulators, the base remains stationary while the mounted manipulator is in motion, because of operational constraints and increased control complexity <ref> [17] </ref>. Thus positioning the mobile base for efficient operation of such a system is the same problem as the one for a fixed-base manipulator. A minimum requirement for the base location of a manipulator is that the reachable workspace of the manipulator covers all the task points. <p> Several variants of the robot placement problem have been proposed in the literature. Seraji considers the placement of a 7-DOF Robotics Research arm by analyzing its reachability <ref> [17] </ref>. Kolarov presents an algorithm that can place a robot made up of n telescoping links amid obstacles in a planar environment [14]. Oze-dou formulates the base placement problem as that of kinematic synthesis and solves it with general optimization techniques [16].
Reference: [18] <author> Z. Shiller and S. Dubowsky. </author> <title> On computing the global time-optimal motions of robotic manipulators in the presence of obstacles. </title> <journal> IEEE Trans. on Robotics and Automation, </journal> <volume> 7(6) </volume> <pages> 785-797, </pages> <year> 1991. </year>
Reference-contexts: Therefore if we want to find a minimum-time path for a many-DOF manipulator, we may have to resort to approximation techniques. One possibility is to plan a collision-free path first and then deform the path iteratively to reduce the execution time <ref> [18] </ref>. This is the approach taken here. Alternatively, for a simple robot with two or three DOFs, one may discretize the state space of the robot and search this space for an approximation to the minimum-time path [6].
Reference: [19] <author> E. J. Stollnitz, T. D. DeRose, and D. H. Salesin. </author> <title> Wavelets for Computer Graphics. </title> <publisher> Morgan Kaufmann, </publisher> <address> San Francisco, CA, </address> <year> 1996. </year> <month> 6 </month>
Reference-contexts: In the right portion of bfl, all approximations are reasonable good, while in the left portion of bfl, only fl 3 approximates bfl well. quickly converges to a good approximation to bfl. This algorithm is inspired by multi-resolution representation of curves in computer graphics <ref> [19] </ref>. In practice, the cost of a path that we have defined does not take into account manipulator dynamics and is only an approximation to the time that it takes a manipulator to execute a path. It is a good approximation if the manipulator can reach the maximum speed quickly.
References-found: 19

