URL: http://www.cim.mcgill.ca/~dudek/mobile/paper:global-localization-siam.ps
Refering-URL: http://www.cim.mcgill.ca/~dudek/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: dudek@cim.mcgill.ca  romanik@dimacs.rutgers.edu  sue@cs.mcgill.ca  
Title: Localizing a Robot with Minimum Travel  
Author: Gregory Dudek Kathleen Romanik Sue Whitesides 
Note: DIMACS Center for Discrete Mathematics and Theoretical  
Address: Street Montreal, Quebec, Canada H3A 2A7  New Jersey P.O. Box 1179, Piscataway, NJ 08855-1179  Street Montreal, Quebec, Canada H3A 2A7  
Affiliation: Research Centre for Intelligent Machines and School of Computer Science McGill University, 3480 University  Computer Science Rutgers, The State University of  Research Centre for Intelligent Machines and School of Computer Science McGill University, 3480 University  
Abstract: We consider the problem of localizing a robot in a known environment modeled by a simple polygon P . We assume that the robot has a map of P but is placed at an unknown location inside P . From its initial location, the robot sees a set of points called the visibility polygon V of its location. In general, sensing at a single point will not suffice to uniquely localize the robot, since the set H of points in P with visibility polygon V may have more than one element. Hence, the robot must move around and use range sensing and a compass to determine its position (i.e. localize itself). We seek a strategy that minimizes the distance the robot travels to determine its exact location. We show that the problem of localizing a robot with minimum travel is NP-hard. We then give a polynomial time approximation scheme that causes the robot to travel a distance of at most (k 1)d, where k = jHj, which is no greater than the number of reflex vertices of P , and d is the length of a minimum length tour that would allow the robot to verify its true initial location by sensing. We also show that this bound is the best possible. fl An earlier version of this paper appeared as a McGill University School of Computer Science technical report SOCS-94.5 in August 1994. Also, an abridged version appeared in the Proceedings of the Sixth Annual ACM-SIAM Symposium on Discrete Algorithms, pages 437-446, in January 1995. y Supported by NSERC research grants programme. z Supported by IRIS National Network of Centres of Excellence, NSERC, and DIMACS. DIMACS is an NSF Science and Technology Center, funded under contract STC-88-09648, and also receives support from the New Jersey Commission on Science and Technology. x Supported by NSERC research grants programme. 
Abstract-found: 1
Intro-found: 1
Reference: [AI90] <author> David Avis and Hiroshi Imai. </author> <title> Locating a Robot with Angle Measurements. </title> <journal> Journal of Symbolic Computation, </journal> <volume> 10 </volume> <pages> 311-326, </pages> <year> 1990. </year>
Reference-contexts: Their algorithm runs in time linear in the number of landmarks, and it assumes that a correspondence is given between each landmark seen by the robot and a point in the map of the environment. Avis and Imai <ref> [AI90] </ref> also investigated the problem of localizing a robot using angle measurements, but they did not assume any correspondence between the landmarks seen by the robot and points in the environment.
Reference: [AMM + 93] <author> Esther M. Arkin, Hank Meijer, Joseph S.B. Mitchell, David Rappaport, and Steven S. Skiena. </author> <title> Decision Trees for Geometric Models. </title> <booktitle> In Proceedings of the Ninth Annual Symposium on Computational Geometry, </booktitle> <pages> pages 369-378, </pages> <address> San Diego, CA, May 19-21 1993. </address> <publisher> ACM Press. </publisher>
Reference-contexts: polygon in the library is given a fixed position, orientation and scale, then it has been shown that both the problem of finding a minimum cardinality probe set (for a noninteractive probing strategy) [BS93] and the problem of constructing a minimum height decision tree for probing (for an interactive strategy) <ref> [AMM + 93] </ref> are NP-Complete. Arkin et al.[AMM + 93] give a greedy strategy that builds a decision tree of height at most dlog ke times that of an optimal decision tree, where k is the number of polygons in the library. <p> Arkin et al.<ref> [AMM + 93] </ref> give a greedy strategy that builds a decision tree of height at most dlog ke times that of an optimal decision tree, where k is the number of polygons in the library. The minimum height decision tree used for probing in [AMM + 93] is different than our localizing decision tree. It is a binary decision tree whose internal nodes represent point probes whose outcome is either positive or negative and whose edges are unweighted.
Reference: [BBF + 96] <author> Piotr Berman, Avrim Blum, Amos Fiat, Howard Karloff, Adi Rosen, and Michael Saks. </author> <title> Randomized Robot Navigation Algorithms. </title> <booktitle> In Proceedings of the Seventh Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 75-84, </pages> <address> Atlanta, GA, </address> <month> January 28-30 </month> <year> 1996. </year>
Reference-contexts: Berman et al. <ref> [BBF + 96] </ref> gave a randomized algorithm for the problem of navigating between two points with oriented, rectangular obstacles with a competitive ratio of O (n 4=9 log n). Several people have studied the problem of navigating from a vertex s to a vertex t inside an unknown simple polygon.
Reference: [BD90] <author> Kenneth Basye and Thomas Dean. </author> <title> Map learning with indistinguishable locations. </title> <editor> In M. Henrion L. N. Kanal J. F. Lemmer, editor, </editor> <booktitle> Uncertainty in Artificial Intelligence 5, </booktitle> <pages> pages 331-340. </pages> <publisher> Elsevier Science Publishers, </publisher> <year> 1990. </year>
Reference-contexts: This motivates a search for strategies that direct the robot to travel around its environment and to collect additional sensory data <ref> [BD90, KB87, DJMW93] </ref> to deduce its exact position. In this paper, we view the general robot localization problem as consisting of two phases: hypothesis generation and hypothesis elimination.
Reference: [BEBFY92] <author> E. Bar-Eli, Piotr Berman, Amos Fiat, and Peiyuan Yan. </author> <title> On-line Navigation in a Room. </title> <booktitle> In Proceedings of the Third Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 237-249, </pages> <address> Orlando, FL, </address> <month> January 27-29 </month> <year> 1992. </year>
Reference-contexts: The competitive ratio for the problem of navigating from a corner to the center of a room was improved to O (ln n) by a strategy of Bar-Eli, Berman, Fiat and Yan <ref> [BEBFY92] </ref>, who also showed that this ratio is a lower bound for any deterministic strategy. Berman et al. [BBF + 96] gave a randomized algorithm for the problem of navigating between two points with oriented, rectangular obstacles with a competitive ratio of O (n 4=9 log n).
Reference: [BG94] <author> Margrit Betke and Leonid Gurvits. </author> <title> Mobile Robot Localization Using Landmarks. Extended abstract, </title> <booktitle> 1994. </booktitle> <pages> 21 </pages>
Reference-contexts: However, in this example jHj = n, so this does not contradict our results. Other theoretical work on localizing a robot in a known environment has also been done. Betke and Gurvits <ref> [BG94] </ref> gave an algorithm that uses the angles subtended by landmarks in the robot's environment to localize a robot.
Reference: [BLM92] <author> Prosenjit K. Bose, Anna Lubiw, and J. Ian Munro. </author> <title> Efficient Visibility Queries in Simple Polygons. In Cao An Wang, editor, </title> <booktitle> Proceedings of the Fourth Canadian Conference on Computational Geometry, </booktitle> <pages> pages 23-28, </pages> <address> St. </address> <institution> John's, Newfoundland, Canada, </institution> <month> August 10-14 </month> <year> 1992. </year> <institution> Memorial University of Newfoundland. </institution>
Reference-contexts: building a data structure for our greedy localization strategy. 4.1 Visibility cells and the overlay arrangement When we consider positions where the robot can move to localize itself, we reduce the infinite number of locations in P to a finite number by first creating a visibility cell decomposition of P <ref> [Bos91, BLM92, GMR92] </ref>. A visibility cell (or visibility region) C of P is a maximally connected subset of P with the property that any two points in C see the same subset of vertices of P ([Bos91, BLM92]). <p> of P with the property that any two points in C see the same subset of vertices of P (<ref> [Bos91, BLM92] </ref>). A visibility cell decomposition of P is simply a subdivision of P into visibility cells. This decomposition can be computed in O (n 3 log n) using techniques in [Bos91, BLM92]. It is created by introducing O (nr) line segments, called visibility edges, into the interior of P , where r is the number of reflex vertices 2 of P . <p> If p is outside P , then V fl (p) is equal to the special symbol ;. For a complete discussion of visibility skeletons and a proof that V fl (p) = V fl (q) for any two points p and q in the same visibility cell, see <ref> [Bos91, BLM92, GMR92] </ref>.
Reference: [Bos91] <author> Prosenjit K. Bose. </author> <title> Visibility in Simple Polygons. </title> <type> Master's thesis, </type> <institution> University of Waterloo, Waterloo, </institution> <address> Ontario, Canada, </address> <month> December </month> <year> 1991. </year>
Reference-contexts: building a data structure for our greedy localization strategy. 4.1 Visibility cells and the overlay arrangement When we consider positions where the robot can move to localize itself, we reduce the infinite number of locations in P to a finite number by first creating a visibility cell decomposition of P <ref> [Bos91, BLM92, GMR92] </ref>. A visibility cell (or visibility region) C of P is a maximally connected subset of P with the property that any two points in C see the same subset of vertices of P ([Bos91, BLM92]). <p> of P with the property that any two points in C see the same subset of vertices of P (<ref> [Bos91, BLM92] </ref>). A visibility cell decomposition of P is simply a subdivision of P into visibility cells. This decomposition can be computed in O (n 3 log n) using techniques in [Bos91, BLM92]. It is created by introducing O (nr) line segments, called visibility edges, into the interior of P , where r is the number of reflex vertices 2 of P . <p> If p is outside P , then V fl (p) is equal to the special symbol ;. For a complete discussion of visibility skeletons and a proof that V fl (p) = V fl (q) for any two points p and q in the same visibility cell, see <ref> [Bos91, BLM92, GMR92] </ref>.
Reference: [BR93] <author> Ronen Basri and Ehud Rivlin. </author> <title> Homing using combinations of model views. </title> <booktitle> In Proceedings of the International Joint Conference of Artificial Intelligence, </booktitle> <pages> pages 1656-1591, </pages> <address> Chambery, France, August 1993. </address> <publisher> Morgan Kaufman Publishers. </publisher>
Reference-contexts: To date, mobile robot research that supposes the use of a map generally assumes either that the position of the robot is always known, or that it can be estimated using sensor data acquired by displacing the robot only small amounts <ref> [BR93, KMK93, TA92] </ref>. However, self-similarities between separate portions of the environment prevent a robot that has been dropped into or activated at some unknown place from uniquely determining its exact location without moving around.
Reference: [BRS91] <author> Avrim Blum, Prabhakar Raghavan, and Baruch Schieber. </author> <title> Navigating in Unfamiliar Geometric Terrain. </title> <booktitle> In Proceedings of the Twenty-third Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 494-504, </pages> <year> 1991. </year> <note> To appear in SICOMP. </note>
Reference-contexts: Blum, Raghavan and Schieber <ref> [BRS91] </ref> gave a deterministic strategy that matched the ( p lower bound for navigating between two points with oriented, rectangular obstacles.
Reference: [BS93] <author> P. Belleville and T. C. Shermer. </author> <title> Probing Polygons Minimally is Hard. Computational Geometry: </title> <journal> Theory and Applications, </journal> <volume> 2 </volume> <pages> 255-265, </pages> <year> 1993. </year>
Reference-contexts: If each polygon in the library is given a fixed position, orientation and scale, then it has been shown that both the problem of finding a minimum cardinality probe set (for a noninteractive probing strategy) <ref> [BS93] </ref> and the problem of constructing a minimum height decision tree for probing (for an interactive strategy) [AMM + 93] are NP-Complete.
Reference: [Dav86] <author> Ernest Davis. </author> <title> Representing and Acquiring Geographic Knowledge. </title> <publisher> Pitman and Morgan Kaufmann Publishers, Inc., </publisher> <address> London and Los Altos, CA, </address> <year> 1986. </year>
Reference-contexts: Also, the most common devices for measuring distance, and hence position, on actual mobile robots are relative measurement tools such as odometers. Therefore, they yield imperfect estimates of orientation, distance and velocity, and the errors in these estimates accumulate disastrously with successive motions <ref> [Dav86] </ref>. Our strategy is well-suited to handling the accumulation of error problem via simple recalibration, as we will point out later. A solution to the hypothesis generation phase of robot localization has been given by Guibas, Motwani and Raghavan in [GMR92].
Reference: [DI94] <author> Amitava Datta and Christian Icking. </author> <title> Competitive Searching in a Generalized Street. </title> <booktitle> In Proceedings of the Tenth Annual Symposium on Computational Geometry, </booktitle> <pages> pages 175-182, </pages> <address> Stony Brook, NY, June 6-8 1994. </address> <publisher> ACM Press. </publisher>
Reference-contexts: That is, every point on L is visible to some point on R and visa versa. Kleinberg [Kle94a] gave a strategy that improved Klein's ratio to 2 p 2, and Datta and Icking <ref> [DI94] </ref> gave a strategy with a ratio of 9.06 for a more general class of polygons called generalized streets, where every point on the boundary is visible from a point on a horizontal line segment joining L and R.
Reference: [DJMW93] <author> Gregory Dudek, Michael Jenkin, Evangelos Milios, and David Wilkes. </author> <title> Map validation and self-location in a graph-like world. </title> <booktitle> In Proceedings of the Thirteenth International Conference on Artificial Intelligence, </booktitle> <pages> pages 1648-1653, </pages> <address> Chambery, France, </address> <month> August </month> <year> 1993. </year> <booktitle> Internation Joint Conf. on Artificial Intelligence Inc. </booktitle>
Reference-contexts: This motivates a search for strategies that direct the robot to travel around its environment and to collect additional sensory data <ref> [BD90, KB87, DJMW93] </ref> to deduce its exact position. In this paper, we view the general robot localization problem as consisting of two phases: hypothesis generation and hypothesis elimination.
Reference: [ELW93] <author> Peter Eades, X. Lin, </author> <title> and N.C. Wormald. Performance Guarantees for Motion Planning with Temporal Uncertainty. </title> <journal> Australian Computing Journal, </journal> <volume> 25(1) </volume> <pages> 21-28, </pages> <month> February </month> <year> 1993. </year>
Reference-contexts: For squares of arbitrary size they gave a strategy achieving a ratio of p They also showed, along with Eades, Lin and Wormald <ref> [ELW93] </ref>, that when t is an infinite wall and the obstacles are oriented rectangles, there is a lower bound of ( p n) on the ratio achievable by any deterministic strategy.
Reference: [GA81] <author> Hossam A. El Gindy and David Avis. </author> <title> A Linear Algorithm for Computing the Visibility Polygon from a Point. </title> <journal> Journal of Algorithms, </journal> <volume> 2 </volume> <pages> 186-197, </pages> <year> 1981. </year>
Reference-contexts: Since the visibility polygon and the visibility skeleton for a point p 2 P can be computed in O (n) time (see <ref> [GA81] </ref>) and we can compare two visibility skeletons with m vertices in O (m) time to see if they are identical, we can compute the partition of H for C in O (kn + k 2 m) time, where 14 m is the maximum number of vertices on any of the
Reference: [GHL + 87] <author> Leonidas J. Guibas, John Hershberger, Daniel Leven, Micha Sharir, and Robert E. Tarjan. </author> <title> Linear-Time Algorithms for Visibility and Shortest Path Problems Inside Triangulated Simple Polygons. </title> <journal> Algorithmica, </journal> <volume> 2 </volume> <pages> 209-233, </pages> <year> 1987. </year>
Reference-contexts: We first compute for each hypothetical initial location p j the shortest path tree from the origin to all of the vertices of P j in linear time using the algorithm given in <ref> [GHL + 87] </ref>. <p> We first use the data-structure in <ref> [GHL + 87] </ref> to determine in O (log n) time the length d x and the last edge e x on the shortest path (o; x) and the length d y and the last edge e y on the shortest path (o; y). <p> To find this edge we again use the data-structure in <ref> [GHL + 87] </ref> to examine the edges of the funnel in order, starting with e x . For each edge we calculate the angle formed by its extension with xy. That is, for each edge (u; w) whose extension intersects xy at point z, we calculate the angle 6 uzy.
Reference: [GJ79] <author> Michael R. Garey and David S. Johnson. </author> <title> Computers and Intractability, A Guide to the Theory of NP-Completeness. W.H. </title> <publisher> Freeman and Company, </publisher> <address> New York, </address> <year> 1979. </year>
Reference-contexts: Even if we did have this knowledge, computing an optimal verification tour would be NP-hard. This can be proven using a construction similar to that in Section 3 and a reduction to hitting set <ref> [GJ79] </ref>. For these reasons, we seek an interactive probing strategy to localize the robot. In each step of such a strategy, the robot uses its range sensors to compute the visibility polygon of its present position, and from this information decides where to move next to make another probe.
Reference: [GMR92] <author> Leonidas J. Guibas, Rajeev Motwani, and Prabhakar Raghavan. </author> <title> The Robot Localization Problem in Two Dimensions. </title> <booktitle> In Proceedings of the Third Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 259-268, </pages> <address> Orlando, FL, </address> <month> January 27-29 </month> <year> 1992. </year>
Reference-contexts: Our strategy is well-suited to handling the accumulation of error problem via simple recalibration, as we will point out later. A solution to the hypothesis generation phase of robot localization has been given by Guibas, Motwani and Raghavan in <ref> [GMR92] </ref>. We describe this further in the next section, after making more precise the definitions of the two phases of robot localization. Our paper is concerned with minimizing the distance traveled in the hypothesis elimination phase of robot localization. It begins where [GMR92] left off. <p> been given by Guibas, Motwani and Raghavan in <ref> [GMR92] </ref>. We describe this further in the next section, after making more precise the definitions of the two phases of robot localization. Our paper is concerned with minimizing the distance traveled in the hypothesis elimination phase of robot localization. It begins where [GMR92] left off. Together, the two papers give a solution to the general robot localization problem. In this paper, we define a natural algorithmic variant of the problem of localizing a robot with minimum travel and show this variant is NP-hard. <p> The farthest that the robot must travel to determine its location is d 1 + d 3 , so the weighted height of this decision tree is d 1 + d 3 . 2.3 Previous work Previous work on robot localization by Guibas, Motwani, and Raghavan <ref> [GMR92] </ref> showed how to preprocess a map polygon P so that given the visibility polygon V that a robot sees, the set of points in P whose visibility polygon is congruent to V , and oriented the same way, can be returned quickly. <p> building a data structure for our greedy localization strategy. 4.1 Visibility cells and the overlay arrangement When we consider positions where the robot can move to localize itself, we reduce the infinite number of locations in P to a finite number by first creating a visibility cell decomposition of P <ref> [Bos91, BLM92, GMR92] </ref>. A visibility cell (or visibility region) C of P is a maximally connected subset of P with the property that any two points in C see the same subset of vertices of P ([Bos91, BLM92]). <p> The number of cells in this decomposition, as well as their total complexity, is O (n 2 r) (see <ref> [GMR92] </ref> for a proof). Although two points p and q in the same visibility cell C see the same subset of vertices of P , they may not have the same visibility polygon (i.e. it may be that V (p) 6= V (q)). <p> If p is outside P , then V fl (p) is equal to the special symbol ;. For a complete discussion of visibility skeletons and a proof that V fl (p) = V fl (q) for any two points p and q in the same visibility cell, see <ref> [Bos91, BLM92, GMR92] </ref>. <p> The number k of such locations is bounded above by r (see <ref> [GMR92] </ref> for a proof). From this set H, we can select the first location p 1 (or any arbitrary location) to serve as an origin for a local coordinate system. <p> Using Strategy MDL for hypothesis elimination, a strategy for the complete robot localization problem can be obtained as follows. Preprocess the map polygon P using a method similar to that in <ref> [GMR92] </ref>.
Reference: [HR76] <author> Laurent Hyafil and Ronald L. Rivest. </author> <title> Constructing Optimal Binary Decision Trees is NP-Complete. </title> <journal> Information Processing Letters, </journal> <volume> 5(1) </volume> <pages> 15-17, </pages> <month> May </month> <year> 1976. </year> <month> 22 </month>
Reference-contexts: decision tree of weighted height less than or equal to h that localizes a robot with initial visibility polygon V in the map polygon P ? We show that this problem is NP-hard by giving a reduction from the Abstract Decision Tree problem, proven NP-complete by Hyafil and Rivest in <ref> [HR76] </ref>.
Reference: [KB87] <author> Benjamin J. Kuipers and Y. T. Byun. </author> <title> A qualitative approach to robot exploration and map-learning. </title> <booktitle> In Proceedings of the IEEE Workshop on Spatial Reasoning and Multi-Sensor Fusion, </booktitle> <pages> pages 390-404, </pages> <address> Los Altos, CA, 1987. </address> <publisher> IEEE. </publisher>
Reference-contexts: This motivates a search for strategies that direct the robot to travel around its environment and to collect additional sensory data <ref> [BD90, KB87, DJMW93] </ref> to deduce its exact position. In this paper, we view the general robot localization problem as consisting of two phases: hypothesis generation and hypothesis elimination.
Reference: [Kle92] <author> Rolf Klein. </author> <title> Walking an Unknown Street with Bounded Detour. Computational Geometry: </title> <journal> Theory and Applications, </journal> <volume> 1 </volume> <pages> 325-351, </pages> <year> 1992. </year>
Reference-contexts: Several people have studied the problem of navigating from a vertex s to a vertex t inside an unknown simple polygon. They assume that at every point on its path the robot can get the visibility polygon of that point. Klein <ref> [Kle92] </ref> proved a lower bound of p 2 on the competitive ratio and gave a strategy achieving a ratio of 5:72 for the class of street polygons.
Reference: [Kle94a] <author> Jon Kleinberg. </author> <title> On-line Search in a Simple Polygon. </title> <booktitle> In Proceedings of the Fifth Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 8-15, </pages> <year> 1994. </year>
Reference-contexts: A street is a simple polygon such that the clockwise chain L and the counterclockwise chain R from s to t are mutually weakly visible. That is, every point on L is visible to some point on R and visa versa. Kleinberg <ref> [Kle94a] </ref> gave a strategy that improved Klein's ratio to 2 p 2, and Datta and Icking [DI94] gave a strategy with a ratio of 9.06 for a more general class of polygons called generalized streets, where every point on the boundary is visible from a point on a horizontal line segment
Reference: [Kle94b] <author> Jon Kleinberg. </author> <title> The Localization Problem for Mobile Robots. </title> <booktitle> In Proceedings of the 35 th Annual Foundations of Computer Science, </booktitle> <pages> pages 521-533, </pages> <address> Santa Fe, NM, November 20-22 1994. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: They also showed how to answer a single localization query in O (mn) time with no preprocessing. Kleinberg <ref> [Kle94b] </ref> has independently given an interactive strategy for localizing a robot in a 5 known environment. As in our work, he seeks to minimize the ratio of the distance traveled by a robot using his strategy to the length of an optimal verification path (i.e. the competitive ratio). <p> Our algorithm causes the robot to travel a distance less than 2n times the length of an optimal verification path on this example. Our algorithm is similar to Step 3 of Kleinberg's algorithm, and he gives a lower bound example (Figure 3 of <ref> [Kle94b] </ref>) illustrating that an algorithm using only Steps 1 and 3 of his algorithm is no better than O (n)-competitive.
Reference: [KMK93] <author> Akio Kosaka, Min Meng, and A. C. Kak. </author> <title> Vision-guided mobile robot navigation using retroactive updating of position uncertainty. </title> <booktitle> In Proceedings of the International Conference of Robotics and Automation, </booktitle> <volume> Volume 2, </volume> <pages> pages 1-7, </pages> <address> Atlanta, GA, May 1993. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: To date, mobile robot research that supposes the use of a map generally assumes either that the position of the robot is always known, or that it can be estimated using sensor data acquired by displacing the robot only small amounts <ref> [BR93, KMK93, TA92] </ref>. However, self-similarities between separate portions of the environment prevent a robot that has been dropped into or activated at some unknown place from uniquely determining its exact location without moving around.
Reference: [Lat91] <author> Jean-Claude Latombe. </author> <title> Robot Motion Planning. </title> <publisher> Kluwer Academic Publishers, Norwell, </publisher> <address> MA, </address> <year> 1991. </year>
Reference-contexts: The most common application domain for mobile robots is indoor "structured" environments. In such environments it is often possible to construct a map of the environment, and it is acceptable to use a polygonal approximation P of the free space <ref> [Lat91] </ref> as a map.
Reference: [LP84] <author> D.T. Lee and Franco P. Preparata. </author> <title> Euclidean Shortest Paths in the Presence of Rectilinear Barriers. </title> <journal> Networks, </journal> <volume> 14(3) </volume> <pages> 393-410, </pages> <year> 1984. </year>
Reference-contexts: Proof: The theorem follows from standard geometry results. We sketch the proof here. It is shown in <ref> [LP84] </ref> that the shortest paths (s; x) and (s; y) are polygonal paths whose interior vertices are vertices of P , and if v is the last common point on these two paths, then (v; x) and (v; y) are both outward-convex (i.e. the convex hull of each of these subpaths <p> As in <ref> [LP84] </ref> we call the union (v; x) [ (v; y) the funnel associated with xy, and we call v the cusp of the funnel. See Figure 8 for an example of a simple polygon with edges of this funnel shown as dashed line segments.
Reference: [PY91] <author> Christos Papadimitriou and Mihalis Yannakakis. </author> <title> Shortest Paths without a Map. </title> <journal> Theoretical Computer Science, </journal> <volume> 84 </volume> <pages> 127-150, </pages> <year> 1991. </year>
Reference-contexts: As with localization strategies, the worst-case ratio over all environments where s and t are distance n apart is called the competitive ratio of the strategy. 6 Papadimitriou and Yannakakis <ref> [PY91] </ref> gave a deterministic strategy for navigating between two points, where all obstacles are unit squares, that achieves a competitive ratio of 1.5, which they show is optimal.
Reference: [ST85] <author> Daniel D. Sleator and Robert E. Tarjan. </author> <title> Amortized Efficiency of List Update and Paging Rules. </title> <journal> Communications of the ACM, </journal> <volume> 28 </volume> <pages> 202-208, </pages> <year> 1985. </year>
Reference-contexts: We then solve the hypothesis elimination phase with what we call a greedy localization strategy. To measure the performance of our strategy, we employ the framework of competitive analysis for on-line algorithms introduced by Sleator and Tarjan <ref> [ST85] </ref>. That is, we examine the ratio of the distance traveled by a robot using our strategy to the length d of a minimum length tour that allows the robot to verify its true initial position.
Reference: [TA92] <author> Raj Talluri and J. K. Aggarwal. </author> <title> Position estimation for an autonomous mobile robot in an outdoor environment. </title> <journal> IEEE Trans. on Robotics and Automation, </journal> <volume> 8(5) </volume> <pages> 573-584, </pages> <month> October </month> <year> 1992. </year> <month> 23 </month>
Reference-contexts: To date, mobile robot research that supposes the use of a map generally assumes either that the position of the robot is always known, or that it can be estimated using sensor data acquired by displacing the robot only small amounts <ref> [BR93, KMK93, TA92] </ref>. However, self-similarities between separate portions of the environment prevent a robot that has been dropped into or activated at some unknown place from uniquely determining its exact location without moving around.
References-found: 30

