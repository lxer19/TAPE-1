URL: ftp://ftp.cc.gatech.edu/pub/gvu/tr/1995/95-25.ps.Z
Refering-URL: http://www.cs.gatech.edu/gvu/reports/1995/
Root-URL: 
Email: E-mail tomo@cc.gatech.edu  E-mail kb@cc.gatech.edu  E-mail malber@isye.gatech.edu  
Title: The Krakatoa Chronicle An Interactive, Personalized, Newspaper on the Web  
Author: Tomonari Kamba Krishna Bharat Michael C. Albers 
Keyword: online newspaper, personalization, information retrieval, interactive agent,  
Address: Atlanta, GA 30332-0280  Atlanta, GA 30332-0280  Atlanta, GA 30332-0205  
Affiliation: Graphics, Visualization, Usability Center College of Computing Georgia Institute of Technology  Graphics, Visualization, Usability Center College of Computing Georgia Institute of Technology  School of Industrial Systems Engineering Center for Human-Machine Systems Research Georgia Institute of Technology  
Abstract: This paper describes The Krakatoa Chronicle, a highly interactive, personalized newspaper on the World Wide Web (WWW). It is intended for Java-aware WWW browsers such as HotJava, and is architecturally quite different from conventional web-based newspapers. Its high interactivity and powerful personalization are the result of sending an interactive agent along with the text of the newspaper to function within the user's web-browser. The agent uses the network connection to the WWW server site to fetch resources dynamically and for updating the user's personal profile through relevance feedback. Users are provided browsing options such as scrolling, maximizing, resizing and peeking at articles. These operations not only enhance the reading experience but also transparently provide information to our agent about the user's locus of interest. Ours is the first web newspaper to attempt a realistic rendering of a newspaper, with a multi-column format and embedded, custom, widgets for easy browsing. We provide dynamic layout control mechanisms that let the user specify how personal and community interests should be interpreted by the agent in designing the layout. 
Abstract-found: 1
Intro-found: 1
Reference: [Bogart 89] <author> Leo Bogart, </author> <title> Press and Public: who reads what, when, where, and why in American newspapers, </title> <publisher> Lawrence Erlbaum Associates, Publishers, </publisher> <year> 1989. </year>
Reference-contexts: Some of the issues are social and some are technical. While printed newspapers tend to be more portable and easier to manipulate, online newspapers have a powerful argument in their favor - personalization. Bogart notes <ref> [Bogart 89] </ref> that personalization has a strong appeal to newspaper readers. Practical considerations have prevented them from being realized under the conventional hard-copy publishing setup. Web newspapers are not subject to the constraints of printed matter.
Reference: [CBN] <author> Community-Based Navigation, </author> <month> &lt;URL:http://www.ncsa.uiuc.edu/SDG/IT94/Proceedings/HCI/hill/home-page.html&gt; </month>
Reference: [CGI] <institution> Overview of CGI, &lt;URL:http://www.w3.org/hypertext/WWW/CGI/Overview.html&gt; </institution>
Reference-contexts: With the SMART engine, we use the personal profile as a query to the document set to compute the weight. It is worth mentioning that there is no live process at the server end save the HTTP daemon [HTTP], which spawns cgi-scripts <ref> [CGI] </ref> written in Perl programming language when necessary. Indexing is done off-line and in batch mode whenever articles are added. 2.2. The Client End The client end manages user interaction and newspaper layout within the browser.
Reference: [CRAYON] <institution> CRAYON,&lt;URL:http://sun.bucknell.edu/~boulter/crayon/&gt; </institution>
Reference: [DAILY] <institution> Dailies:U.S.Newspaper Services on the Internet, &lt;URL:http://marketplace.com/e-papers.list.www/e-papers.us.dailies.html&gt; </institution>
Reference-contexts: Basic variables for personalization are computed at the server end, and personal layout happens at the client end, under user control. There are already many online newspapers on the web, such as those accessible from the "Dailies" list <ref> [DAILY] </ref>, and some of them such as CRAYON and Fishwrap provide personalization [CRAYON][FISHWRAP]. However, these have been subject to the limitations of HTML [HTML]. The precise formatting and multi-column layout one is accustomed to in printed newspapers is hard to support.
Reference: [Faloutsos] <author> Christos Faloutsos and Dougtas Oard, </author> <title> A Survey of Information Retrieval and Filtering Method, </title> <publisher> &lt;URL:http://www.glue.umd.edu/enee/medlab/filter/papers/survey.ps&gt; </publisher>
Reference: [FISHWRAP] <author> Fishwrap, </author> <month> &lt;URL:http://fishwrap.mit.edu/&gt; </month>
Reference-contexts: We have also implemented a version of our personalized online newspaper, which can be shown on conventional (non java-aware) browsers such as Mosaic. Its architecture is similar to other personalizable newspapers on the WWW like Fishwrap <ref> [FISHWRAP] </ref>. The indexing and user profile/document vector management functions are handled by the same system that implements The Krakatoa Chronicle's backend. However, instead of sending over an applet, it follows the traditional strategy of generating HTML pages for each view into the newspaper, with links to other views.
Reference: [HTML] <institution> HyperText Markup Language (HTML): Working and Background Materials, &lt;URL:http//www.w3.org/hypertext/WWW/MarkUp/&gt; </institution>
Reference-contexts: There are already many online newspapers on the web, such as those accessible from the "Dailies" list [DAILY], and some of them such as CRAYON and Fishwrap provide personalization [CRAYON][FISHWRAP]. However, these have been subject to the limitations of HTML <ref> [HTML] </ref>. The precise formatting and multi-column layout one is accustomed to in printed newspapers is hard to support. Interactivity is restricted to point and click style interaction and changes take a long time to occur, due to the high, client-server, round-trip latency and restrictive update model.
Reference: [HTTP] <institution> Overview of HTTP, &lt;URL:http://www.w3.org/hypertext/WWW/Protocols/Overview.html&gt; </institution>
Reference-contexts: With the SMART engine, we use the personal profile as a query to the document set to compute the weight. It is worth mentioning that there is no live process at the server end save the HTTP daemon <ref> [HTTP] </ref>, which spawns cgi-scripts [CGI] written in Perl programming language when necessary. Indexing is done off-line and in batch mode whenever articles are added. 2.2. The Client End The client end manages user interaction and newspaper layout within the browser.
Reference: [JAVA] <institution> HotJava Home Page, &lt;URL:http//java.sun.com&gt;(Java and HotJava are trademarks of Sun Microsystems, Inc.) </institution>
Reference-contexts: Since HTML is not dynamically extensible and tends to evolve slowly, it is unlikely that the custom widgets needed to program a newspaper will ever be supported. Hence we needed to turn to a new paradigm, the programmable Java "applet" feature available in Java-aware browsers such as HotJava <ref> [JAVA] </ref> and (future versions of) NetScape [Netscape]. Java [JAVA] is an object-oriented, programming language which can be used to create architecture-neutral, byte-code programs. A Java applet is a java program designed specifically to be embedded in HTML documents. Java applets can be network-aware applications which users can interact with. <p> Hence we needed to turn to a new paradigm, the programmable Java "applet" feature available in Java-aware browsers such as HotJava <ref> [JAVA] </ref> and (future versions of) NetScape [Netscape]. Java [JAVA] is an object-oriented, programming language which can be used to create architecture-neutral, byte-code programs. A Java applet is a java program designed specifically to be embedded in HTML documents. Java applets can be network-aware applications which users can interact with.
Reference: [Jennings 92] <author> A. Jennings and H. Higuchi, </author> <title> A personal news service based on a user model neural network, </title> <journal> IEICE Transactions on Information Systems, </journal> <volume> 75(2), </volume> <pages> 198-209, </pages> <year> 1992. </year>
Reference: [Lang 95] <author> Ken Lang, NewsWeeder: </author> <title> Learning to Filter Netnews, </title> <publisher> ML95, &lt;URL:http://anther.learning.cs.cmu.edu/ml95.ps&gt; </publisher>
Reference-contexts: With this method, it is difficult to reflect the user's temporal change in interest or unconscious interest. An indirect way is to ask the user to provide a score for articles he/she reads, and to compute the weights of keywords from the score <ref> [Lang 95] </ref>[Mock]. This method also requires user's conscious involvement which is often annoying. A more subtle way is to consider the time that the user spent on each article, as in prior work based on Internet News [Morita 94], which is said to have worked fairly well.
Reference: [Mock] <author> Kenrick J. Mock and V. Rao Vemuri, </author> <title> Adaptive User Models for Intelligent Information Filtering, </title> <publisher> &lt;URL:http://www.glue.umd.edu/enee/medlab/filter/gwic.ps&gt; </publisher>
Reference: [Morita 94] <author> Masahiro Morita and Yoichi Shinoda, </author> <title> Information Filtering Based on User Behavior Analysis and Best Match Text Retrieval, </title> <address> SIGIR'94, </address> <year> 1994 </year>
Reference-contexts: This method also requires user's conscious involvement which is often annoying. A more subtle way is to consider the time that the user spent on each article, as in prior work based on Internet News <ref> [Morita 94] </ref>, which is said to have worked fairly well. Unfortunately they insisted that subjects devote their entire concentration to the task of reading the article and not take breaks, which is not a very realistic solution.
Reference: [Netscape] <institution> Netscape to license Sun's Java programming Language, &lt;URL:http://www.netscape.com/newsref/pr/newsrelease25.html&gt; </institution>
Reference-contexts: Hence we needed to turn to a new paradigm, the programmable Java "applet" feature available in Java-aware browsers such as HotJava [JAVA] and (future versions of) NetScape <ref> [Netscape] </ref>. Java [JAVA] is an object-oriented, programming language which can be used to create architecture-neutral, byte-code programs. A Java applet is a java program designed specifically to be embedded in HTML documents. Java applets can be network-aware applications which users can interact with.
Reference: [NANDO] <institution> The NandO Times, &lt;URL:http://www.nando.net/newsroom/nt/nando.html&gt; </institution>
Reference-contexts: Management of Everyday Articles. First, articles are collected from several news sites daily (currently we get articles from a single site, the NandO Times <ref> [NANDO] </ref>, with their permission), and changed into plain text for content-analysis and re-formatting. Then, a document vector is computed for each article. Since our research focus is not on indexing, we used a well-known indexing engine, SMART [SMART] to convert articles into document vectors.
Reference: [Outing 95] <institution> Online Newspaper Services main menu, MediaInfo Interactive, </institution> <year> 1995). </year> <month> &lt;URL:http://marketplace.com/e-papers.list.www/e-papers.home.page.html&gt; </month>
Reference-contexts: 1. Introduction Although non-commercial usage has dominated the Internet for a long time, some commercial applications have been emerging recently, at a rate which is increasing. According to Outing <ref> [Outing 95] </ref>, "more than 230 supplemental online services are operated or under development by newspapers worldwide, an increase of about 130% since the end of 1994". Of these, online newspapers are particularly well suited for the WWW, since the web readily facilitates information retrieval, presentation, and to some extent, layout.
Reference: [Shardanand 95] <author> Upendra Shardanand and Patti Maes, </author> <title> Social Information Filtering: Algorithms for Automating "Word of Mouth", </title> <booktitle> Proceedings of CHI'95, </booktitle> <year> 1995. </year> <month> &lt;URL:http://agents.www.media.mit.edu/groups/agents/papers/ringo/chi-95-paper.ps&gt; </month>
Reference: [SMART] <author> SMART, </author> <month> &lt;URL:ftp://ftp.cs.cornell.edu/pub/smart&gt; </month>
Reference-contexts: Then, a document vector is computed for each article. Since our research focus is not on indexing, we used a well-known indexing engine, SMART <ref> [SMART] </ref> to convert articles into document vectors. Articles are converted into representative term-vectors, via the TFIDF (term frequency terms inverse document frequency) metric. A term-vector is a set of keywords and associated weights.
Reference: [URL] <institution> A Beginner's Guide to URLs, &lt;URL:http://www.ncsa.uiuc.edu/demoweb/url-primer.html&gt; </institution>
Reference-contexts: Since the downloaded code runs on the client locally, fairly involved computation and interactive, custom-designed, user-interfaces can be supported. In addition, Java has a library for handling TCP/IP protocols and can access remote objects via URLs <ref> [URL] </ref> easily, which allows us to have continuous bi-directional communication between server and client. The Krakatoa Chronicle provides some interactive features that other online newspapers do not: Flexible Layout Control. Users can change the syntactic/semantic layout strategy of the newspaper while browsing.
Reference: [Yan 95] <author> Tak W. Yan and Hector Garcia-Molina, </author> <title> SIFT - A Tool for Wide-Area Information Dissemination, </title> <booktitle> USENIX Technical Conference, </booktitle> <pages> pp. 177-186, </pages> <year> 1995. </year> <month> &lt;URL:ftp://db.stanford.edu/pub/sift/sift.ps&gt; </month>
Reference-contexts: Of the many ways to build a user profile, the most common and simplest way is to ask the user to type in keywords that he/she is interested in <ref> [YAN 95] </ref>. With this method, it is difficult to reflect the user's temporal change in interest or unconscious interest. An indirect way is to ask the user to provide a score for articles he/she reads, and to compute the weights of keywords from the score [Lang 95][Mock].
Reference: [WEBHOUND] <institution> The Webhound WWW Document Filtering System, &lt;URL:http://webhound.www.media.mit.edu/projects/webhound/doc/&gt; </institution>
References-found: 22

