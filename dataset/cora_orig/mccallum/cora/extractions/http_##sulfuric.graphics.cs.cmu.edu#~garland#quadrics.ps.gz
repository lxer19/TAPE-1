URL: http://sulfuric.graphics.cs.cmu.edu/~garland/quadrics.ps.gz
Refering-URL: http://c.gp.cs.cmu.edu:5103/afs/cs/user/garland/www/quadrics/index.html
Root-URL: 
Title: Surface Simplification Using Quadric Error Metrics  
Author: Michael Garland Paul S. Heckbert 
Keyword: CR Categories: I.3.5 [Computer Graphics]: Computational Geometry and Object Modelingsurface and object representations Keywords: surface simplification, multiresolution modeling, pair contraction, level of detail, non-manifold  
Affiliation: Carnegie Mellon University  
Abstract: We have developed a surface simplification algorithm which can rapidly produce high quality approximations of polygonal models. The algorithm uses iterative contractions of vertex pairs to simplify models and maintains surface error approximations using quadric matrices. By contracting arbitrary vertex pairs (not just edges), our algorithm is able to join unconnected regions of models. This can facilitate much better approximations, both visually and with respect to geometric error. In order to allow topological joining, our system also supports non-manifold surface models. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Jonathan Cohen, Amitabh Varshney, Dinesh Manocha, Greg Turk, Hans Weber, Pankaj Agarwal, Frederick Brooks, and William Wright. </author> <title> Simplification envelopes. </title> <booktitle> In SIGGRAPH '96 Proc., </booktitle> <pages> pages 119-128, </pages> <month> Aug. </month> <year> 1996. </year> <note> http://www.cs.unc.edu/~geom/ envelope.html. </note>
Reference-contexts: By performing successive edge contractions, they can close holes in the object but they cannot join unconnected regions. If it is critical that the approximate model lie within some distance of the original model and that its topology remain unchanged, the simplification envelopes technique of Cohen et al. <ref> [1] </ref> can be used in conjunction with one of the above simplification algorithms. As long as any modification made to the model is restricted to lie within the envelopes, a global error guarantee can be maintained.
Reference: [2] <author> Andre Gueziec. </author> <title> Surface simplification with variable tolerance. </title> <booktitle> In Second Annual Intl. Symp. on Medical Robotics and Computer Assisted Surgery (MRCAS '95), </booktitle> <pages> pages 132-139, </pages> <month> Novem-ber </month> <year> 1995. </year>
Reference-contexts: Iterative Edge Contraction. Several algorithms have been published that simplify models by iteratively contracting edges (see how they choose an edge to contract. Some notable examples of such algorithms are those of Hoppe [4, 3], Ronfard and Rossignac [7], and Gueziec <ref> [2] </ref>. These algorithms all seem to have been designed for use on manifold surfaces, although edge contractions can be utilized on non-manifold surfaces. By performing successive edge contractions, they can close holes in the object but they cannot join unconnected regions. <p> The only algorithm capable of simplifying arbitrary polygonal models, vertex clustering [8], does not reliably produce high quality approximations. None of the higher quality methods available <ref> [2, 7, 3] </ref> support aggregation. Both [2] and [3] seem to be significantly more time consuming than our algorithm. The results of [7] are most similar to our own because we use a very similar error approximation. <p> The only algorithm capable of simplifying arbitrary polygonal models, vertex clustering [8], does not reliably produce high quality approximations. None of the higher quality methods available [2, 7, 3] support aggregation. Both <ref> [2] </ref> and [3] seem to be significantly more time consuming than our algorithm. The results of [7] are most similar to our own because we use a very similar error approximation.
Reference: [3] <author> Hugues Hoppe. </author> <title> Progressive meshes. </title> <booktitle> In SIGGRAPH '96 Proc., </booktitle> <pages> pages 99-108, </pages> <month> Aug. </month> <year> 1996. </year> <note> http://www.research.microsoft.com/ research/graphics/hoppe/. </note>
Reference-contexts: Iterative Edge Contraction. Several algorithms have been published that simplify models by iteratively contracting edges (see how they choose an edge to contract. Some notable examples of such algorithms are those of Hoppe <ref> [4, 3] </ref>, Ronfard and Rossignac [7], and Gueziec [2]. These algorithms all seem to have been designed for use on manifold surfaces, although edge contractions can be utilized on non-manifold surfaces. By performing successive edge contractions, they can close holes in the object but they cannot join unconnected regions. <p> We have developed an algorithm which supports both aggregation and high quality approximations. It possesses much of the generality of vertex clustering as well as the quality and control of iterative contraction algorithms. It also allows faster simplification than some higher quality methods <ref> [3] </ref>. 3 Decimation via Pair Contraction Our simplification algorithm is based on the iterative contraction of vertex pairs; a generalization of the iterative edge contraction technique used in previous work. <p> Thus, a single run can produce a large number of approximate models or a multiresolution representation such as a progressive mesh <ref> [3] </ref>. 3.1 Aggregation The primary benefit which we gain by utilizing general vertex pair contractions is the ability of the algorithm to join previously unconnected regions of the model together. A potential side benefit is that it makes the algorithm less sensitive to the mesh connectivity of the original model. <p> The only algorithm capable of simplifying arbitrary polygonal models, vertex clustering [8], does not reliably produce high quality approximations. None of the higher quality methods available <ref> [2, 7, 3] </ref> support aggregation. Both [2] and [3] seem to be significantly more time consuming than our algorithm. The results of [7] are most similar to our own because we use a very similar error approximation. <p> The only algorithm capable of simplifying arbitrary polygonal models, vertex clustering [8], does not reliably produce high quality approximations. None of the higher quality methods available [2, 7, 3] support aggregation. Both [2] and <ref> [3] </ref> seem to be significantly more time consuming than our algorithm. The results of [7] are most similar to our own because we use a very similar error approximation. However, our system uses a more efficient means to track plane sets, and it incorporates some enhancements such as boundary preservation. <p> While most previous algorithms are also inherently limited to manifold surfaces, our system is quite capable of handling and simplifying non-manifold objects. Finally, our algorithm provides a useful middle ground between very fast, low-quality methods such as vertex clustering [8] and very slow, high-quality methods such as mesh optimization <ref> [3] </ref>.
Reference: [4] <author> Hugues Hoppe, Tony DeRose, Tom Duchamp, John Mc Donald, and Werner Stuetzle. </author> <title> Mesh optimization. </title> <booktitle> In SIGGRAPH '93 Proc., </booktitle> <pages> pages 19-26, </pages> <month> Aug. </month> <year> 1993. </year> <note> http:// www.research.microsoft.com/research/graphics/hoppe/. </note>
Reference-contexts: Iterative Edge Contraction. Several algorithms have been published that simplify models by iteratively contracting edges (see how they choose an edge to contract. Some notable examples of such algorithms are those of Hoppe <ref> [4, 3] </ref>, Ronfard and Rossignac [7], and Gueziec [2]. These algorithms all seem to have been designed for use on manifold surfaces, although edge contractions can be utilized on non-manifold surfaces. By performing successive edge contractions, they can close holes in the object but they cannot join unconnected regions. <p> We have chosen a metric which measures the average squared distance between the approximation and the original model. This is very similar to the E dist energy term used by Hoppe et al. <ref> [4] </ref>. We define the approximation error E i D E.
Reference: [5] <author> Alan D. Kalvin and Russell H. Taylor. </author> <title> Superfaces:polygonal mesh simplification with bounded error. </title> <journal> IEEE Computer Graphics and Appl., </journal> <volume> 16(3), </volume> <month> May </month> <year> 1996. </year> <note> http://www.computer.org/ pubs/cg&a/articles/g30064.pdf. </note>
Reference-contexts: For each face surrounding a particular discontinuity edge, we generate a perpendicular plane running through the edge. These constraint planes are then converted into quadrics, weighted by a large penalty factor, and 3 Kalvin and Taylor <ref> [5] </ref> describe a somewhat similar use of quadrics to represent plane sets. They were tracking sets of planes which fit a set of points within some tolerance. They used ellipsoids in plane-space to represent the set of valid approximating planes.
Reference: [6] <author> David Luebke and Carl Erikson. </author> <title> View-dependent simplifica tion of arbitrary polygonal environments. </title> <booktitle> In SIGGRAPH 97 Proc., </booktitle> <month> August </month> <year> 1997. </year>
Reference-contexts: The exact approximation produced is also dependent on the exact position and orientation of the original model with respect to the surrounding grid. This uniform method can easily be generalized to use an adaptive grid structure, such as an octree <ref> [6] </ref>. This can improve the simplification results, but it still does not support the quality and control that we desire. Iterative Edge Contraction. Several algorithms have been published that simplify models by iteratively contracting edges (see how they choose an edge to contract.
Reference: [7] <author> Remi Ronfard and Jarek Rossignac. </author> <title> Full-range approximation of triangulated polyhedra. </title> <journal> Computer Graphics Forum, </journal> <volume> 15(3), </volume> <month> Aug. </month> <year> 1996. </year> <note> Proc. Eurographics '96. </note>
Reference-contexts: Iterative Edge Contraction. Several algorithms have been published that simplify models by iteratively contracting edges (see how they choose an edge to contract. Some notable examples of such algorithms are those of Hoppe [4, 3], Ronfard and Rossignac <ref> [7] </ref>, and Gueziec [2]. These algorithms all seem to have been designed for use on manifold surfaces, although edge contractions can be utilized on non-manifold surfaces. By performing successive edge contractions, they can close holes in the object but they cannot join unconnected regions. <p> Only at extremely low levels of detail do they begin to disappear. 5 Deriving Error Quadrics To construct our error quadrics, we must choose a heuristic to characterize the geometric error. We have selected a heuristic which is quite similar to the one given by Ronfard and Rossignac <ref> [7] </ref>. Following [7], we can observe that in the original model, each vertex is the solution of the intersection of a set of planes namely, the planes of the triangles that meet at that vertex. <p> We have selected a heuristic which is quite similar to the one given by Ronfard and Rossignac <ref> [7] </ref>. Following [7], we can observe that in the original model, each vertex is the solution of the intersection of a set of planes namely, the planes of the triangles that meet at that vertex. <p> This approximate error metric is similar to <ref> [7] </ref>, although we have used a summation rather than a maximum over the set of planes. The set of planes at a vertex is initialized to be the planes of the triangles that meet at that vertex. Note that if we were to track these plane sets explicitly, as [7] did, <p> to <ref> [7] </ref>, although we have used a summation rather than a maximum over the set of planes. The set of planes at a vertex is initialized to be the planes of the triangles that meet at that vertex. Note that if we were to track these plane sets explicitly, as [7] did, we would propagate planes after a contraction .v 1 ; v 2 / ! N v using the rule: planes. N v/ D planes.v 1 / [ planes.v 2 /. This can require a sizeable amount of storage that does not diminish as simplification progresses. <p> The only algorithm capable of simplifying arbitrary polygonal models, vertex clustering [8], does not reliably produce high quality approximations. None of the higher quality methods available <ref> [2, 7, 3] </ref> support aggregation. Both [2] and [3] seem to be significantly more time consuming than our algorithm. The results of [7] are most similar to our own because we use a very similar error approximation. <p> The only algorithm capable of simplifying arbitrary polygonal models, vertex clustering [8], does not reliably produce high quality approximations. None of the higher quality methods available [2, 7, 3] support aggregation. Both [2] and [3] seem to be significantly more time consuming than our algorithm. The results of <ref> [7] </ref> are most similar to our own because we use a very similar error approximation. However, our system uses a more efficient means to track plane sets, and it incorporates some enhancements such as boundary preservation. There remain various aspects of our algorithm that could be improved upon.
Reference: [8] <author> Jarek Rossignac and Paul Borrel. </author> <title> Multi-resolution 3D approx imations for rendering complex scenes. </title> <editor> In B. Falcidieno and T. Kunii, editors, </editor> <booktitle> Modeling in Computer Graphics: Methods and Applications, </booktitle> <pages> pages 455-465, </pages> <year> 1993. </year>
Reference-contexts: Both methods use vertex classification and retriangulation schemes which are inherently limited to manifold surfaces, and they carefully maintain the topology of the model. While these are important features in some domains, they are restrictions for multiresolution rendering systems. Vertex Clustering. The algorithm described by Rossignac and Borrel <ref> [8] </ref> is one of the few capable of processing arbitrary polygonal input. A bounding box is placed around the original model and divided into a grid. Within each cell, the cell's vertices are clustered together into a single vertex, and the model faces are updated accordingly. <p> While certain other algorithms are faster or generate higher quality approximations than ours, they typically do not meet the capability of our algorithm in all three areas. The only algorithm capable of simplifying arbitrary polygonal models, vertex clustering <ref> [8] </ref>, does not reliably produce high quality approximations. None of the higher quality methods available [2, 7, 3] support aggregation. Both [2] and [3] seem to be significantly more time consuming than our algorithm. <p> While most previous algorithms are also inherently limited to manifold surfaces, our system is quite capable of handling and simplifying non-manifold objects. Finally, our algorithm provides a useful middle ground between very fast, low-quality methods such as vertex clustering <ref> [8] </ref> and very slow, high-quality methods such as mesh optimization [3].
Reference: [9] <author> William J. Schroeder, Jonathan A. Zarge, and William E. Lorensen. </author> <title> Decimation of triangle meshes. </title> <booktitle> Computer Graphics (SIGGRAPH '92 Proc.), </booktitle> <volume> 26(2) </volume> <pages> 65-70, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: The shaded triangles become degenerate and are removed during the contraction. ing attention. Several different algorithms have been formulated for simplifying surfaces. Those algorithms which are most relevant to our work can be broadly categorized into 3 classes: Vertex Decimation. Schroeder et al. <ref> [9] </ref> describe an algorithm which we would term vertex decimation. Their method iteratively selects a vertex for removal, removes all adjacent faces, and retri-angulates the resulting hole. Soucy and Laurendeau [10] described a more sophisticated, but essentially similar algorithm.
Reference: [10] <author> Marc Soucy and Denis Laurendeau. </author> <title> Multiresolution surface modeling based on hierarchical triangulation. </title> <booktitle> Computer Vision and Image Understanding, </booktitle> <volume> 63(1) </volume> <pages> 1-14, </pages> <year> 1996. </year> <title> using flat shading just as in approximations below. in 15 seconds). 15 seconds). Note the many separate bone segments. (11 fi 4 fi 4 grid). Indiscriminate joining destroys approximation quality. receding back into the foot. Toes are being merged into larger solid components. No receding artifacts. This model now contains 61 non-manifold edges. approximation shown in Figure 16. Red pairs are edges; green pairs are non-edges. </title>
Reference-contexts: Schroeder et al. [9] describe an algorithm which we would term vertex decimation. Their method iteratively selects a vertex for removal, removes all adjacent faces, and retri-angulates the resulting hole. Soucy and Laurendeau <ref> [10] </ref> described a more sophisticated, but essentially similar algorithm. While they provide reasonable efficiency and quality, these methods are not really suited for our purpose. Both methods use vertex classification and retriangulation schemes which are inherently limited to manifold surfaces, and they carefully maintain the topology of the model.
References-found: 10

