URL: http://www.combinatorics.org/Volume_5/PostScriptfiles/v5i1r5.ps
Refering-URL: http://www.combinatorics.org/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: ed@ccrwest.org  gwilliamson@ucsd.edu  
Title: Periodic Sorting Using Minimum Delay, Recursively Constructed Merging Networks  
Author: Edward A. Bender S. Gill Williamson 
Note: Submitted in revised form  Accepted:  1991 AMS Classification Number. Primary: 68P10  
Date: Submitted: December 6, 1996  August 25, 1997  December 9, 1997  
Address: 4320 Westerra Court San Diego, CA 92121, USA  La Jolla, CA 92093-0114, USA  
Affiliation: Center for Communications Research  Department of Computer Science and Engineering University of California, San Diego  
Abstract: Let ff and fi be a partition of f1; : : : ; ng into two blocks. A merging network is a network of comparators which allows as input arbitrary real numbers and has the property that, whenever the input sequence x 1 ; x 2 ; : : : ; x n is such that the subsequence in the positions ff and the subsequence in the positions fi are each sorted, the output sequence will be sorted. We study the class of "recursively constructed" merging networks and characterize those with delay dlog 2 ne (the best possible delay for all merging networks). When n is a power of 2, we show that at least 3 n=21 of these nets are log-periodic sorters; that is, they sort any input sequence after log 2 n passes through the net. (Two of these have appeared previously in the literature.) 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Aigner, </author> <title> Parallel complexity of sorting problems, </title> <journal> J. </journal> <note> Algorithms 3 (1982) 79-88. </note> <author> V. </author> <title> Grinberg has given an alternate proof. See Knuth, The Art of Computer Programming, Volume 3 errata, solution to Ex. 46 of Sec. 5.3.4 (text page 641). </title> <note> See http://www-cs-faculty.stanford.edu/~knuth/taocp.html. </note>
Reference-contexts: The problem of designing n-input merging and sorting nets having minimum delay or a minimum number of comparators has been studied by many authors. Knuth [8, Sec. 5.3.4] discussed the history and results concerning sorting and merging nets up to 1973. Aigner <ref> [1, Thm. 3.3] </ref> showed that the best merging nets have delay dlog 2 ne provided neither of the sequences being merged is empty.
Reference: [2] <author> M. Ajtai, J. Komlos, and E. Szemeredi, </author> <title> Sorting in c log n parallel steps, </title> <address> Com-binatorica 3 (1983) 1-19. </address>
Reference-contexts: By Stirling's formula, it follows that the number of comparators is at least n log n + O (n). Since at most bn=2c comparators can be executed simultaneously, the delay of such a sorting net must be at least log n + O (1). Until Ajtai, Komlos, and Szemeredi <ref> [2] </ref> showed that there are networks for sorting n items having delay on order of log n and using on order of n log n comparators, researchers were unable to approach such bounds.
Reference: [3] <author> E. R. Canfield and S. G. Williamson, </author> <title> A sequential sorting network analogous to the Batcher merge, </title> <note> Linear and Multilinear Algebra 29 (1991) 43-51. </note>
Reference-contexts: Some families have been found with delay times (log n + O (1)) 2 . Of particular interest are two found by Dowd, Perl, Rudolph, and Saks [5] and Canfield and Williamson <ref> [3] </ref> that consist of dlog 2 ne repetitions of a merging network. Such a net is called an dlog 2 ne-pass periodic sorter. Kammeyer, Belew, and Williamson [7] conjectured two additional such families based on empirical studies. <p> The left son corresponds to (1) and the right to (2) . The periodic sorting nets given by Dowd, Perl, Rudolph, and Saks [5] correspond to trees having all vertices labeled 2. The nets given by Canfield and Williamson <ref> [3] </ref> correspond to trees having all vertices labeled 1 and having none of the optional comparators of Theorem 3.1 (i). In both cases, ` fff; fig is alternating, and so these nets are included in Theorem 4.1. <p> Condition (c) insures that the requirement is propagated when the correction layer of a son does not contain the required adjacent comparators. Proof (of Theorem 4.1): The method of proof is essentially that same as that in <ref> [3] </ref> and [5]. the electronic journal of combinatorics 5 (1998), #R5 19 Recall that we defined a distance-t subsequence of s 1 ; s 2 ; : : : to be a maximal subsequence whose successive indices differ by t.
Reference: [4] <author> N. G. de Bruijn, </author> <title> Sorting by means of swapping, Discrete. </title> <journal> Math. </journal> <month> 9 </month> <year> (1974) </year> <month> 333-339. </month>
Reference-contexts: Adding Comparators Can Ruin a Net It is natural to suppose that adding comparators to a sorting or merging net will not destroy the ability of the net to sort or merge. It was shown by de Bruijn <ref> [4] </ref> that, when a sorting net contains only adjacent comparators, adding extra comparators does not destroy the ability of the net to sort.
Reference: [5] <author> M. Dowd, Y. Perl, L. Rudolph, and M. Saks, </author> <title> The periodic balanced sorting network, </title> <journal> J. Assoc. Comput. Mach. </journal> <month> 36 </month> <year> (1989) </year> <month> 738-757. </month>
Reference-contexts: Some families have been found with delay times (log n + O (1)) 2 . Of particular interest are two found by Dowd, Perl, Rudolph, and Saks <ref> [5] </ref> and Canfield and Williamson [3] that consist of dlog 2 ne repetitions of a merging network. Such a net is called an dlog 2 ne-pass periodic sorter. Kammeyer, Belew, and Williamson [7] conjectured two additional such families based on empirical studies. <p> In this case, two types of periodic k-pass sorters are known. We show that they are members of a larger family. Since a network is a periodic sorter after a sufficiently large number of passes if and only if it contains all adjacent comparators <ref> [5, Thm. 1] </ref>, two natural questions are: (a) Which recursive merging nets contain all adjacent comparators? (b) Of those nets in (a), which are k-pass periodic sorters? The first question has a relatively simple answer, but the other appears more difficult. <p> The left son corresponds to (1) and the right to (2) . The periodic sorting nets given by Dowd, Perl, Rudolph, and Saks <ref> [5] </ref> correspond to trees having all vertices labeled 2. The nets given by Canfield and Williamson [3] correspond to trees having all vertices labeled 1 and having none of the optional comparators of Theorem 3.1 (i). <p> Condition (c) insures that the requirement is propagated when the correction layer of a son does not contain the required adjacent comparators. Proof (of Theorem 4.1): The method of proof is essentially that same as that in [3] and <ref> [5] </ref>. the electronic journal of combinatorics 5 (1998), #R5 19 Recall that we defined a distance-t subsequence of s 1 ; s 2 ; : : : to be a maximal subsequence whose successive indices differ by t. We call a sequence t-sorted if all its distance-t subsequences are sorted.
Reference: [6] <author> Z. Hong [H. Zhu] and R. Sedgewick, </author> <title> Notes on merging networks, </title> <booktitle> Proc. 14th Annual ACM Symposium on the Theory of Computing, ACM, </booktitle> <address> New York (1982) 296-302. </address>
Reference: [7] <author> T. E. Kammeyer, R. K. Belew, and S. G. Williamson, </author> <title> Evolving compare-exchange networks using grammars, </title> <booktitle> Artificial Life 2 (1995) 199-237. </booktitle>
Reference-contexts: Of particular interest are two found by Dowd, Perl, Rudolph, and Saks [5] and Canfield and Williamson [3] that consist of dlog 2 ne repetitions of a merging network. Such a net is called an dlog 2 ne-pass periodic sorter. Kammeyer, Belew, and Williamson <ref> [7] </ref> conjectured two additional such families based on empirical studies. A pictorial representation of these nets for n = 16 is given at the end of the next section at the end. <p> The nets given by Canfield and Williamson [3] correspond to trees having all vertices labeled 1 and having none of the optional comparators of Theorem 3.1 (i). In both cases, ` fff; fig is alternating, and so these nets are included in Theorem 4.1. Kammeyer, Belew, and Williamson <ref> [7] </ref> discovered the two nets for n = 16 in which the root and its sons have one value and the remaining vertices have the other value. Based on these, they conjectured a general pattern which is included in the families in Corollary 3.1.1. Theorem 4.2.
Reference: [8] <author> D. E. Knuth, </author> <title> Sorting and Searching, </title> <booktitle> volume 3 of The Art of Computer Programming, </booktitle> <publisher> Addison-Wesley, </publisher> <address> Reading, MA (1973). </address>
Reference-contexts: If a comparator takes one time unit, the delay of a net is its running time when the most efficient parallelism is used. The problem of designing n-input merging and sorting nets having minimum delay or a minimum number of comparators has been studied by many authors. Knuth <ref> [8, Sec. 5.3.4] </ref> discussed the history and results concerning sorting and merging nets up to 1973. Aigner [1, Thm. 3.3] showed that the best merging nets have delay dlog 2 ne provided neither of the sequences being merged is empty. <p> For example, the 2n-input, delay-2 net is an (n=2)-pass periodic sorter, called the odd-even transposition sort <ref> [8, p. 241] </ref>. Here is the Dowd, Perl, Rudolph, and Saks 4-pass periodic sorter for n = 16: Here is the Canfield and Williamson 4-pass periodic sorter for n = 16: 3. Theorems About Recursive Merging Networks Our main theorem on the structure of recursive merging nets is: Theorem 3.1. <p> We do not have a theorem similar to Theorem 3.2 for periodic sorting nets. However, Theorem 3.2 can be used to add comparators to sorting nets which are based on a series of merges, as is the case for the Batcher sort <ref> [8, Sec. 5.3.4] </ref>. Theorem 4.1. If jj = n = 2 k and ` fff; fig is alternating, then every recursive merging net for is a k-pass periodic sorter. the electronic journal of combinatorics 5 (1998), #R5 9 By Corollary 3.1.1 (c), there are 3 n=21 such nets. <p> We may assume that 1 2 (1) . We make use of the 0-1 principle, which states that a net correctly merges or sorts if and only if it does so when its inputs are restricted to f0; 1g. See <ref> [8, p. 224] </ref> for a proof. If t is a set, let t i be the ith smallest element in t and let t (k) be the set of elements of t which do not exceed k. Note that jt (t k )j = k.
Reference: [9] <author> P. B. Miltersen, M. Paterson, and J. Tarui, </author> <title> The asymptotic complexity of merging networks, </title> <journal> J. Assoc. Comput. Mach. </journal> <month> 43 </month> <year> (1996) </year> <month> 147-165. </month>
Reference-contexts: Aigner [1, Thm. 3.3] showed that the best merging nets have delay dlog 2 ne provided neither of the sequences being merged is empty. It has recently been shown by Miltersen, Paterson, and Tarui <ref> [9] </ref> that a network for merging an m-long sequence and an n-long one requires 1 2 (m + n) log 2 m + O (n) comparators provided n m and m ! 1.
References-found: 9

