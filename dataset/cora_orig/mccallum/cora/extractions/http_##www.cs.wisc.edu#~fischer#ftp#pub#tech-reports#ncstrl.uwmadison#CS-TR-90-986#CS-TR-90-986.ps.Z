URL: http://www.cs.wisc.edu/~fischer/ftp/pub/tech-reports/ncstrl.uwmadison/CS-TR-90-986/CS-TR-90-986.ps.Z
Refering-URL: http://www.cs.wisc.edu/~fischer/ftp/pub/tech-reports/ncstrl.uwmadison/CS-TR-90-986/
Root-URL: http://www.cs.wisc.edu
Title: Optimal Balanced Assignments and a Parallel Database Application  
Author: Shahram Ghandeharizadeh Robert R. Meyer Gary L. Schultz Jonathan Yackel 
Note: Acknowledgments  
Abstract: In parallel database systems, distribution of the data among the processors has a significant impact on the response time and throughput of the system. The benefits of parallelism (using multiple processors to execute a query) must be balanced against its costs (communication, startup, and termination overhead). We formalize the problem of minimizing overhead while partitioning data uniformly across the processors. We derive lower bounds on these combinatorial problems and demonstrate how processors may be optimally assigned so as to achieve these lower bounds for a number of problem classes. This research was partially supported by the Air Force Office of Scientific Research under grant 89-0410, the Defense Advanced Research Projects Agency under contract N00039-86-C-0578, and by the National Science Foundation under grants CCR-8709952 and DCR-8512862. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. Batut. </author> <title> Presentation du systeme PARI. </title> <booktitle> Actes des journees Mathematique et Infor-matique de Marseille-Luminy, </booktitle> <pages> pages 1-20, </pages> <year> 1988. </year>
Reference-contexts: Recall the notation defined in equation (4). Writing ave as a function of ~-: ave (a) = ave (~-) = d=0 j=0 X = d=0 X : Clearly, the ~-d are within the bounds <ref> [1; P ] </ref> because they are the average of integers within that same interval. <p> However, for given D, it is possible to compute q D;K for each positive K &lt; D and check the conjecture. We have verified that it is true whenever D 12 using the PARI calculator (see <ref> [1] </ref>, [2]). Corollary 25. Suppose that conjecture 24 is true for a given pair of positive integers D and K &lt; D.
Reference: [2] <author> C. Batut, D. Bernardi, H. Cohen, and M. Oliver. </author> <title> User's guide to PARI-GP. </title> <type> Private communication. </type>
Reference-contexts: However, for given D, it is possible to compute q D;K for each positive K &lt; D and check the conjecture. We have verified that it is true whenever D 12 using the PARI calculator (see [1], <ref> [2] </ref>). Corollary 25. Suppose that conjecture 24 is true for a given pair of positive integers D and K &lt; D.
Reference: [3] <author> E.F. Beckenbach and R. Bellman. </author> <title> Inequalities. </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1961. </year>
Reference-contexts: Therefore the "volume" Q D1 d=0 p;d of this box is at least (a; p), i.e., (a; p) d=0 Taking Dth roots gives ((a; p)) D d=0 ! 1 : Because the arithmetic mean dominates the geometric mean (see Hardy et al [11] or Beck enbach and Bellman <ref> [3] </ref>) ((a; p)) D d=0 ! 1 D d=0 p ; whence D ((a; p)) D p : Since the right-hand-side of the last inequality is integral, we may take the ceiling of the left-hand-side, finishing the proof. 3 LOWER BOUNDS FOR BALANCED ASSIGNMENTS 7 Letting Q denote the field of <p> Clearly, r ave (a f ) = 0 iff arithmetic.mean (g) = geometric.mean (g). This happens iff all of the g d are in fact equal to the same quantity (see Hardy et al [11] or Beckenbach and Bellman <ref> [3] </ref>). Similarly we define the relative distance from the tighter lower bound r 0 ave and state the following: 4 BLOCKING 13 Proposition 7. Consider the same problem instance (D; P; M ) and assignment a f as in proposition 6. <p> This occurs iff all of the 1=f d (and hence all of the f d ) are the same (see Hardy et al [11] or Beckenbach and Bellman <ref> [3] </ref>). Similarly we define a tighter relative distance r 0 max and state the following: Proposition 9. Consider the same problem instance (D; P; M ) and assignment a f as in proposition 8.
Reference: [4] <author> D. Bitton, D. DeWitt, and C. Turbyfill. </author> <title> Benchmarking database systems: A systematic approach. </title> <booktitle> In Proceedings of the 1983 VLDB Conference, </booktitle> <month> October </month> <year> 1983. </year>
Reference-contexts: E.g., if (D; P; M ) = (2; 4; <ref> [4; 4] </ref>) then there are 63; 063; 000 balanced assignments; while the the number of balanced assignments for the instance (D; P; M ) = (2; 5; [5; 5]) is 623; 360; 743; 125; 120. A similar class of data aggregation problems was studied by Helman [12]. <p> In each of the experiments on which we report, MAGIC scanned a 100,000 tuple relation and used two attributes of this relation to construct a two-dimensional grid on the relation. The characteristics of the relation were based on the standard Wisconsin Benchmark relations <ref> [4] </ref>. In the first experiment, the heuristic assigned the cells of a 32 fi 31 grid. Table 1 presents a number of measurements for the problem instance and the assignment a H as a function of the number of processors P .
Reference: [5] <author> H. Boral, W. Alexander, L. Clay, G. Copeland, S. Danforth, M. Franklin, B. Hart, M. Smith, and P. Valduriez. </author> <title> Prototyping Bubba, a highly parallel database system. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 2(1), </volume> <month> March </month> <year> 1990. </year>
Reference-contexts: E.g., if (D; P; M ) = (2; 4; [4; 4]) then there are 63; 063; 000 balanced assignments; while the the number of balanced assignments for the instance (D; P; M ) = (2; 5; <ref> [5; 5] </ref>) is 623; 360; 743; 125; 120. A similar class of data aggregation problems was studied by Helman [12]. Suppose that we replace our notion of "slice" by "arbitrary subset".
Reference: [6] <author> A. Brooke, D. Kendrick, and A. Meeraus. </author> <title> GAMS|A User's Guide. </title> <publisher> The Scientific Press, </publisher> <year> 1988. </year>
Reference-contexts: The largest problem of the form D = 2, M = (P; P ) that we were able to solve using the GAMS (Brooke et al <ref> [6] </ref>) ZOOM module in less than one-half hour was the case where P = 5. Clearly, this is not a reasonable alternative for real problems in which the M i are larger by one or two orders of magnitude.
Reference: [7] <author> D. DeWitt, S. Ghandeharizadeh, D. Schneider, A. Bricker, H. Hsiao, and R. Rasmussen. </author> <title> The Gamma database machine project. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 2(1), </volume> <month> March </month> <year> 1990. </year> <note> REFERENCES 37 </note>
Reference-contexts: figure 1 is produced by a "blocking" procedure, discussed in x4, that constitutes an optimal assignment in some cases including the one above.) 1 This overhead is primarily in the form of additional messages to control the execution of the query on additional processors and, in the Gamma database machine <ref> [7] </ref>, increases linearly with the number of employed processors. 2 BASIC MATHEMATICAL PROBLEM STATEMENT 3 Although we concentrate on the limiting case in which overhead is minimized, the optimal processor assignments that we obtain below have properties that suggest that they may also be reasonable approximations to assignments that would minimize <p> This computational experience helped to motivate the analytical results of this paper. 2 Basic Mathematical Problem Statement In this section we state the problem in a mathematical form, using the motivation of x1. First we introduce some notation and state some definitions. 2 The linear speedup results presented in <ref> [7] </ref> justify this assertion. 2 BASIC MATHEMATICAL PROBLEM STATEMENT 4 Suppose that we wish to assign the cells of a D-dimensional grid to P processors, and that the dth dimension is partitioned into M d ranges. Let ZZ denote the integers, and ZZ D the set of D-tuples of integers.
Reference: [8] <author> M. Garey and D. Johnson. </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness, pages 60-62. W.H. </title> <publisher> Freeman and Company, </publisher> <address> New York, </address> <year> 1979. </year>
Reference-contexts: This is observed by reducing the partition problem to a special case of problem variation 3. The partition problem is known to be NP-complete (see Garey and Johnson <ref> [8] </ref>), and may be stated as follows: given a finite set X and a positive integer size s (x) for each x 2 X, does there exist a subset Y X such that P P Given an instance of the partition problem (X; s ()), we construct an instance of problem
Reference: [9] <author> S. Ghandeharizadeh. </author> <title> Physical Database Design in Multiprocessor Systems. </title> <type> PhD thesis, </type> <institution> University of Wisconsin - Madison, </institution> <year> 1990. </year>
Reference-contexts: Furthermore, this overhead increases as a function of the number of processors used to execute a query 1 . In order to minimize overhead while balancing the workload among the processors, Multi-Attribute GrId deClustering (MAGIC) introduced by Ghandeharizadeh <ref> [9] </ref> partitions a relation by assigning ranges of several attribute values to each processor in the system. To illustrate MAGIC declustering, consider the Employee relation: EMP (Social Security, Name, Salary, Age, Dept). <p> eM 1 (2k + 1) + (P eM 1 )2k = M 0 M 1 + eM 1 = ave (a e ); the final equality following because the final e rows of the grid each have M 1 distinct processors assigned in them. 7 Performance of a Heuristic Ghandeharizadeh <ref> [9] </ref> describes a heuristic for assigning the cells of a D-dimensional grid to the processors in the system. The heuristic creates an assignment by approximating the 8 MORE GENERAL VARIATIONS OF THE PROBLEM 25 blocking procedure of x4 and using ave as our measure. <p> It creates a good blocked assignment on a large subgrid, leaving the cells on the edges unassigned. The remaining cells are then assigned while trying to satisfy the conflicting goals of keeping both ave and the imbalance t between processors small. We refer the interested reader to Ghandeharizadeh <ref> [9] </ref> for the complete description of the heuristic. In each of the experiments on which we report, MAGIC scanned a 100,000 tuple relation and used two attributes of this relation to construct a two-dimensional grid on the relation.
Reference: [10] <author> G. Graefe. Volcano: </author> <title> An extensible and parallel dataflow query processing system. </title> <institution> Computer science technical report, Oregon Graduate Center, Beaverton, </institution> <address> OR, </address> <month> June </month> <year> 1989. </year>
Reference: [11] <author> G.H. Hardy, J.E. Littlewood, and G. Polya. </author> <title> Inequalities. </title> <address> Cambridge, </address> <year> 1959. </year>
Reference-contexts: Therefore the "volume" Q D1 d=0 p;d of this box is at least (a; p), i.e., (a; p) d=0 Taking Dth roots gives ((a; p)) D d=0 ! 1 : Because the arithmetic mean dominates the geometric mean (see Hardy et al <ref> [11] </ref> or Beck enbach and Bellman [3]) ((a; p)) D d=0 ! 1 D d=0 p ; whence D ((a; p)) D p : Since the right-hand-side of the last inequality is integral, we may take the ceiling of the left-hand-side, finishing the proof. 3 LOWER BOUNDS FOR BALANCED ASSIGNMENTS 7 <p> Clearly, r ave (a f ) = 0 iff arithmetic.mean (g) = geometric.mean (g). This happens iff all of the g d are in fact equal to the same quantity (see Hardy et al <ref> [11] </ref> or Beckenbach and Bellman [3]). Similarly we define the relative distance from the tighter lower bound r 0 ave and state the following: 4 BLOCKING 13 Proposition 7. Consider the same problem instance (D; P; M ) and assignment a f as in proposition 6. <p> This occurs iff all of the 1=f d (and hence all of the f d ) are the same (see Hardy et al <ref> [11] </ref> or Beckenbach and Bellman [3]). Similarly we define a tighter relative distance r 0 max and state the following: Proposition 9. Consider the same problem instance (D; P; M ) and assignment a f as in proposition 8.
Reference: [12] <author> P. Helman. </author> <title> A family of NP-complete data aggregation problems. </title> <journal> Acta Informatica, </journal> <volume> 26 </volume> <pages> 485-499, </pages> <year> 1989. </year>
Reference-contexts: A similar class of data aggregation problems was studied by Helman <ref> [12] </ref>. Suppose that we replace our notion of "slice" by "arbitrary subset".
Reference: [13] <author> H.L. Keng. </author> <title> Introduction to Number Theory. </title> <publisher> Springer-Verlag, </publisher> <year> 1982. </year>
Reference-contexts: Lemma 2. If z 2 ZZ and r 2 Q + , then z r is either an integer or is irrational. Proof: See theorem 16.1.2 of Keng <ref> [13] </ref>. 3.1 Lower Bounds on ave We shall use the notation arithmetic.mean (M) = X D geometric.mean (M ) = Y 1 in the rest of the paper. The following two theorems give lower bounds on the -measures for balanced assignments. Theorem 3.
Reference: [14] <author> M. Livny, S. Khoshafian, and H. Boral. </author> <title> Multi-disk management algorithms. </title> <booktitle> In Proceedings of the 1987 ACM SIGMETRICS Int'l Conf. on Measurement and Modeling of Computer Systems, </booktitle> <month> May </month> <year> 1987. </year>
Reference: [15] <author> D. Ries and R. Epstein. </author> <title> Evaluation of distribution criteria for distributed database systems. </title> <type> UCB/ERL Technical Report M78/22, </type> <institution> UC Berkeley, </institution> <month> May </month> <year> 1987. </year>
Reference: [16] <author> M. Stonebraker, D. Patterson, and J. Ousterhout. </author> <booktitle> The design of XPRS. In Proceedings of the 1988 VLDB Conference, </booktitle> <address> Los Angeles, CA, </address> <month> September </month> <year> 1988. </year>
Reference: [17] <author> Tandem Performance Group. </author> <title> A benchmark non-stop SQL on the debit credit transaction. </title> <booktitle> In Proceedings of the 1988 SIGMOND Conference, </booktitle> <address> Chicago, IL, </address> <month> June </month> <year> 1988. </year>
Reference: [18] <author> Teradata Corp. </author> <title> DBC/1012 Data Base Computer System Manual, </title> <month> November </month> <year> 1985. </year> <institution> Tere-data Corp. </institution> <note> Document No. C10-0001-02, Release 2.0. </note>
References-found: 18

