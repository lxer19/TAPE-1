URL: ftp://ftp.research.microsoft.com/pub/debull/dec95-letdraft.ps
Refering-URL: http://www.research.microsoft.com/research/db/debull/issues-list.htm
Root-URL: http://www.research.microsoft.com
Title: Disk Striping in Video Server Environments I/O Stream Sharing for Continuous Media Systems. A Proposed
Author: Banu Ozden, Rajeev Rastogi, and Avi Silberschatz Leana Golubchik, John C.S. Lui, and Richard Muntz David B. Andersen Christos Faloutsos 
Note: Bulletin of the Technical Committee on Data Engineering December, 1995 Vol. 18 No. 4 Letters Letter from the Editor-in-Chief. .David Lomet 1 Letter from the Special Issue Editor. .Shahram Ghandeharizadeh 2 Special Issue on Multimedia Information Systems  Conference and Journal Notices 1996 Conference on Parallel and Distributed Information Systems back cover  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> S. Berson, S. Ghandeharizadeh, R. Muntz and X. Ju. </author> <title> Staggered striping in multimedia information systems. </title> <booktitle> In Proceedings of ACM-SIGMOD 1988 International Conference on Management of Data, </booktitle> <year> 1994. </year>
Reference-contexts: Most of them, however, only consider the problem of retrieving videos from a single disk, and do not address the issue of evenly distributing the workload in the case that multiple disks are employed to store the videos. Among striping-based schemes, staggered striping was proposed in <ref> [1] </ref> to utilize disk bandwidth effectively for both high bandwidth (that is, those for which r disp r disk ) as well as low bandwidth (those for which r disp &lt; r disk ) videos with different rate requirements. <p> The above approach to storing and retrieving data is similar to the staggered striping scheme for low bandwidth objects, proposed in <ref> [1] </ref>. We now present schemes that address the issue of when to begin retrieving data for videos in the request list or alternately, when to insert videos contained in the request list into the service list for a disk.
Reference: [2] <author> S. Ghandeharizadeh and L. Ramos, </author> <title> Continuous retrieval of multimedia data using parallelism. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 5(4) </volume> <pages> 658-669, </pages> <month> August, </month> <year> 1993. </year>
Reference-contexts: Finally, a video is deleted from the service list at the end of the round in which all the data for it has been retrieved. The above approach to retrieving data for videos is similar to the disk multitasking scheme proposed in <ref> [2] </ref> and the streaming RAID scheme proposed in [7]. We now address the issue of computing a value for d based on the amount of RAM, D, and the number of disks, m, such that the number of concurrent streams that can be supported is maximized.
Reference: [3] <author> B. Ozden, R. Rastogi and A. Silberschatz. </author> <title> Disk striping in video server environments. </title> <type> Technical Report 113830-950220-01, </type> <institution> AT&T Bell Laboratories, </institution> <address> Murray Hill, </address> <year> 1995. </year>
Reference-contexts: For coarse-grained striping, we present a starvation-free scheme that minimizes the wasted disk bandwidth when servicing client requests. Due to space constraints, we do not present the proofs of our theorems; these can, however, be found in <ref> [3] </ref>. 2 System Model The video-server is a computer system containing one or more processors, RAM, and multiple disks to store videos. Videos are stored on disks in compressed form and need to be displayed at a certain rate, denoted by r disp .
Reference: [4] <author> G. R. Ganger, B. L. Worthington, R. Y. Hou and Y. N. Patt. </author> <title> Disk arrays: high-performance, high-reliability storage subsystems. </title> <journal> Computer, </journal> <volume> 27(3) </volume> <pages> 30-36, </pages> <month> March </month> <year> 1994. </year>
Reference-contexts: [4,5] are more general, and are not specifically tailored for video server environments in which workloads typically comprise of accesses (to large files) that are sequential in nature, and have timing requirements. 4 Fine-grained Striping In fine-grained striping, the striping unit is typically a bit, a byte or a sector <ref> [4] </ref>. Thus, if there are m disks, then every retrieval involves all the m disk heads, and the m disks behave like a single disk with bandwidth m r disk . This striping technique is used in the RAID-3 data distribution scheme [5].
Reference: [5] <author> D. Patterson, G. Gibson and R. Katz. </author> <title> A case for redundant arrays of inexpensive disks (RAID). </title> <booktitle> In Proceedings of ACM-SIGMOD 1988 International Conference on Management of Data, </booktitle> <year> 1988. </year>
Reference-contexts: Thus, if there are m disks, then every retrieval involves all the m disk heads, and the m disks behave like a single disk with bandwidth m r disk . This striping technique is used in the RAID-3 data distribution scheme <ref> [5] </ref>. <p> For large requests and for sequential accesses to data, coarse-grained striping distributes the workload evenly among the various disks. This striping technique is used in the RAID-5 data distribution scheme <ref> [5] </ref>.
Reference: [6] <author> A. Silberschatz and P. Galvin. </author> <title> Operating System Concepts. </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: Note that sorting the videos ensures that the disk heads move in a single direction when servicing videos during a round. As a result, random seeks to arbitrary locations are eliminated (this is similar to the known C-SCAN disk scheduling algorithm <ref> [6] </ref>). Since the time to transmit d bits of video is d r disp , in order to ensure that data for every video is retrieved at rate r disp , we require every round to begin d r disp after the previous round.

Reference: [1] <author> S. Berson, L. Golubchik, and R. R. Muntz. </author> <title> Fault Tolerant Design of Multimedia Servers. </title> <booktitle> In Proc. of the ACM SIGMOD Conf. on Management of Data, </booktitle> <pages> pages 364-375, </pages> <address> San Jose, CA, </address> <month> May </month> <year> 1995. </year>
Reference-contexts: Most of them, however, only consider the problem of retrieving videos from a single disk, and do not address the issue of evenly distributing the workload in the case that multiple disks are employed to store the videos. Among striping-based schemes, staggered striping was proposed in <ref> [1] </ref> to utilize disk bandwidth effectively for both high bandwidth (that is, those for which r disp r disk ) as well as low bandwidth (those for which r disp &lt; r disk ) videos with different rate requirements. <p> The above approach to storing and retrieving data is similar to the staggered striping scheme for low bandwidth objects, proposed in <ref> [1] </ref>. We now present schemes that address the issue of when to begin retrieving data for videos in the request list or alternately, when to insert videos contained in the request list into the service list for a disk.
Reference: [2] <author> Steven Berson, Shahram Ghandeharizadeh, Richard R. Muntz, and Xiangyu Ju. </author> <title> Staggered Striping in Multimedia Information Systems. </title> <booktitle> SIGMOD, </booktitle> <year> 1994. </year>
Reference-contexts: Finally, a video is deleted from the service list at the end of the round in which all the data for it has been retrieved. The above approach to retrieving data for videos is similar to the disk multitasking scheme proposed in <ref> [2] </ref> and the streaming RAID scheme proposed in [7]. We now address the issue of computing a value for d based on the amount of RAM, D, and the number of disks, m, such that the number of concurrent streams that can be supported is maximized.
Reference: [3] <author> A. Dan, , D. Dias, R. Mukherjee, D. Sitaram, and R Tewari. </author> <title> Buffering and Caching in Large-Scale Video Servers. </title> <booktitle> In Proc. of COMPCON, </booktitle> <year> 1995. </year>
Reference-contexts: For coarse-grained striping, we present a starvation-free scheme that minimizes the wasted disk bandwidth when servicing client requests. Due to space constraints, we do not present the proofs of our theorems; these can, however, be found in <ref> [3] </ref>. 2 System Model The video-server is a computer system containing one or more processors, RAM, and multiple disks to store videos. Videos are stored on disks in compressed form and need to be displayed at a certain rate, denoted by r disp .
Reference: [4] <author> A. Dan, P. Shahabuddin, D. Sitaram, and D. Towsley. </author> <title> Channel Allocation under Batching and VCR Control in Movie-On-Demand Servers. </title> <type> Technical Report RC19588, </type> <institution> IBM Research Report, Yorktown Height, </institution> <address> NY, </address> <year> 1994. </year>
Reference-contexts: [4,5] are more general, and are not specifically tailored for video server environments in which workloads typically comprise of accesses (to large files) that are sequential in nature, and have timing requirements. 4 Fine-grained Striping In fine-grained striping, the striping unit is typically a bit, a byte or a sector <ref> [4] </ref>. Thus, if there are m disks, then every retrieval involves all the m disk heads, and the m disks behave like a single disk with bandwidth m r disk . This striping technique is used in the RAID-3 data distribution scheme [5].
Reference: [5] <author> A. Dan, D. Sitaram, and P. Shahabuddin. </author> <title> Scheduling Policies for an On-Demand Video Server with Batching. </title> <booktitle> In Proc. of the 2nd ACM International Conference on Multimedia, </booktitle> <month> October </month> <year> 1994. </year>
Reference-contexts: Thus, if there are m disks, then every retrieval involves all the m disk heads, and the m disks behave like a single disk with bandwidth m r disk . This striping technique is used in the RAID-3 data distribution scheme <ref> [5] </ref>. <p> For large requests and for sequential accesses to data, coarse-grained striping distributes the workload evenly among the various disks. This striping technique is used in the RAID-5 data distribution scheme <ref> [5] </ref>.
Reference: [6] <author> A. L. Drapeau and R. Katz. </author> <title> Striped Tape Arrays. </title> <booktitle> In Proc. of the 12th IEEE Symposium on Mass Storage Systems, </booktitle> <pages> pages 257-265, </pages> <address> Monterey, California, </address> <month> April </month> <year> 1993. </year>
Reference-contexts: Note that sorting the videos ensures that the disk heads move in a single direction when servicing videos during a round. As a result, random seeks to arbitrary locations are eliminated (this is similar to the known C-SCAN disk scheduling algorithm <ref> [6] </ref>). Since the time to transmit d bits of video is d r disp , in order to ensure that data for every video is retrieved at rate r disp , we require every round to begin d r disp after the previous round.
Reference: [7] <author> L. Golubchik, J. C.-S. Lui, and R. R. Muntz. </author> <title> Reducing I/O Demand in Video-On-Demand Storage Servers. </title> <booktitle> In Proceedings of the ACM SIGMETRICS and Performance, </booktitle> <pages> pages 25-36, </pages> <month> May </month> <year> 1995. </year>
Reference-contexts: The above approach to retrieving data for videos is similar to the disk multitasking scheme proposed in [2] and the streaming RAID scheme proposed in <ref> [7] </ref>. We now address the issue of computing a value for d based on the amount of RAM, D, and the number of disks, m, such that the number of concurrent streams that can be supported is maximized.
Reference: [8] <author> M. Kamath, K. Ramamritham, and D. Towsley. </author> <title> Continuous Media Sharing in Multimedia Database Systems. </title> <booktitle> In Proc. of the 4th Intl. Conference on Database Systems for Advanced Applications (DASFAA '95), </booktitle> <address> Singapore, </address> <month> April 10-13, </month> <year> 1995. </year>
Reference: [9] <author> M. Kamath, K. Ramamritham, and D. Towsley. </author> <title> Buffer Management for Continuous Media Sharing in Multimedia Database Systems. </title> <type> Technical Report 94-11, </type> <institution> University of Massachusetts, </institution> <month> Feb. </month> <year> 1994. </year>
Reference: [10] <author> S. W. Lau and J. C. S. Lui. </author> <title> A Novel Video-On-Demand Storage Architecture for Supporting Constant Frame Rate with Variable Bit Rate Retrieval. </title> <booktitle> In Proc. of the 5th Intl. Conf. on Network and Operating System Support for Digital Audio and Video, </booktitle> <month> April </month> <year> 1995. </year>
Reference: [11] <author> T. Ohanian. </author> <title> Digital Nonlinear Editing: new approaches to editing film and video. </title> <publisher> Focal Press, </publisher> <year> 1993. </year>
Reference: [12] <author> B. Ozden, A. Biliris, R. Rastogi, and A. Silberschatz. </author> <title> A Low-Cost Storage Server for Movie on Demand Databases. </title> <booktitle> Proc. of the 20th Intl. Conf. on Very Large Data Bases, </booktitle> <month> Sept. </month> <year> 1994. </year>
Reference: [13] <author> B. Ozden, R. Rastogi, A. Silberschatz, and C. Martin. </author> <title> Demand Paging for Video-on-Demand Servers. </title> <booktitle> Proc. of the IEEE Intl. Conference on Multimedia Computing and Systems, </booktitle> <month> May </month> <year> 1995. </year>
Reference: [14] <author> M. Rubin. </author> <title> Nonlinear: a guide to electronic film and video editing. </title> <publisher> Triad Publishing Co., </publisher> <year> 1991. </year>
Reference: [15] <author> H. Takagi. </author> <title> Queueing Analysis: A Foundation of Performance Evaluation. Volume 1: Vacation and Priority Systems, Part 1. </title> <publisher> North-Holland, </publisher> <year> 1991. </year>
Reference: [16] <author> F. A. Tobagi, J. Pang, R. Baird, and M. Gang. </author> <title> Streaming RAID A Disk Array Management System For Video Files. </title> <booktitle> ACM Multimedia Conference, </booktitle> <pages> pages 393-399, </pages> <year> 1993. </year>
Reference: [17] <institution> Personal Communication with Mr. Rich Igo and Mr. Bill Carpenter at Ampex Corp. </institution>
Reference: [18] <author> P. S. Yu, J. L. Wolf, and H. Shachnai. </author> <title> Design and Analysis of A Look-ahead Scheduling Scheme to Support Pause-Resume for Video-on-Demand Applications. </title> <type> Technical Report RC19683, </type> <institution> IBM Research Report, Yorktown Height, </institution> <address> NY, </address> <year> 1995. </year> <month> 26 </month>
References-found: 24

