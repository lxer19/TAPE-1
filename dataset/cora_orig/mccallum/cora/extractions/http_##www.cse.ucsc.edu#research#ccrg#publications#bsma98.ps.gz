URL: http://www.cse.ucsc.edu/research/ccrg/publications/bsma98.ps.gz
Refering-URL: http://www.cse.ucsc.edu/research/ccrg/publications.html
Root-URL: http://www.cse.ucsc.edu
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> B. Awerbuch, A. Baratz, and D. Peleg. </author> <title> Cost-sensetive analysis of communication protocols. </title> <booktitle> In Proc. ACM Symp. on Principles of Distributed Computing, </booktitle> <pages> pages 177-187, </pages> <year> 1990. </year>
Reference-contexts: Awerbuch, Baratz and Peleg <ref> [1] </ref> proposed a heuristic (which we call ABP) that starts from the minimum spanning tree and refines the tree to bound the diameter of the tree. ABP applies to only spanning trees and not Steiner trees.
Reference: [2] <author> D. Bertsekas and R. Gallager. </author> <title> Data Networks. </title> <publisher> Prentice-Hall, </publisher> <year> 1992. </year>
Reference-contexts: One way to have this information is for each node in the network to maintain an updated database of link weights and node connections in the network. This requirement can be supported using one of many topology-broadcast algorithms, which can be based on flooding or other techniques <ref> [2, 11, 10] </ref>. A network is modeled as a directed weighted graph G = (V; E), as shown in Figure 1, with node set V and edge set E. The nodes represent routers or switches and edges represent the communication link between them.
Reference: [3] <author> K. Bharath-Kumar and J. Jaffe. </author> <title> Routing to Multiple Destination in Computer Networks. </title> <journal> IEEE Trans. on Comm., </journal> <volume> COM-31:343-351, </volume> <year> 1983. </year>
Reference-contexts: The KMB algorithm constructs a minimum spanning tree [18] in the complete distance graph, and the Steiner tree of the original network is obtained by achieving the shortest paths represented by edges in the minimum spanning tree. 2 Bharath-Kumar and Jaffe <ref> [3] </ref> discussed minimizing both cost and delay, assuming that cost and delay functions are identical. Awerbuch, Baratz and Peleg [1] proposed a heuristic (which we call ABP) that starts from the minimum spanning tree and refines the tree to bound the diameter of the tree.
Reference: [4] <author> R. K. Brayton, G. D. Hachtel, and A. L. Sangiovanni-Vincentelli. </author> <title> A Survey of Optimization Techniques for Integrated Circuits. </title> <journal> Proc. of the IEEE, </journal> <volume> 69(10) </volume> <pages> 1334-1362, </pages> <year> 1991. </year>
Reference-contexts: the delay bound set to infinity, which is known to be an NP-complete problem [12] and only heuristics are of practical interest for its solution; BSMA is a new heuristic designed to solve the DBMST problem. 3 Description of BSMA The DBMST can be approached as a feasible-search optimization problem <ref> [4] </ref> in which the feasible region consists of all trees that satisfy the delay bound requirement. BSMA constructs a DBMST in two phases, as illustrated in Figure 2: 1. Initial phase: construct an initial tree with the minimum delays from the source to all destinations. 2.
Reference: [5] <author> A. </author> <title> Cayley. A Theorem on Trees. </title> <journal> Quart. J. Math., </journal> <volume> 23 </volume> <pages> 376-378, 1889. 21 </pages>
Reference-contexts: An unsuccessful path-switching, which is called an identity transformation, corresponds to a state transition from a state into one of its replicated states. By construction, IA may perform an identity transformation on a tree for a maximum of n 1 iterations. By Cayley's Theorem <ref> [5] </ref>, there are n n2 possible spanning trees on n nodes. The number of distinct Steiner trees is no greater than the number of spanning trees. The number of Steiner trees is then bounded by n n2 .
Reference: [6] <author> J. Cong, A.B. Kahng, G. Robins, M. Sarrafzadeh, and C. K. Wong. </author> <title> Provably Good Performance-Driven Global Routing. </title> <journal> IEEE Trans. on Computer-Aided Design, </journal> <volume> CAD-11(6):739-752, </volume> <year> 1992. </year>
Reference-contexts: ABP applies to only spanning trees and not Steiner trees. This same idea is used in the work by Cong, Kahng, Robins, Sarrafzadeh and Wong <ref> [6] </ref> (which we call CKRSW) except that CKRSW refines the tree to bound the radius of the tree. Both ABP and CKRSW assume identical cost and delay functions. Kompella, Pasquale and Polyzos [14] proposed two heuristics (which we call KPP) that address delay-bounded multicast trees.
Reference: [7] <author> T. H. Cormen, C. E. Leiserson, and R. L. Rivest. </author> <title> Introduction to Algorithms. </title> <publisher> The MIT Press, </publisher> <year> 1990. </year>
Reference-contexts: Our simulations were carried out on sparse graphs, that is, the number of edges m is O (n). Using a binary heap for the priority queue gives the complexity of O (n log (n)) for Dijkstra's algorithm in sparse graphs <ref> [7] </ref>. It is also worthwhile noting that the k-shortest path algorithm used in our own implementation of BSMA has time complexity of O (kn 2 log (n)), while k-shortest path algorithms exist of complexity O (kn log (n)); hence, BSMA could run even faster than our own results indicate.
Reference: [8] <author> E. Dijkstra. </author> <title> A Note on Two Problems in Connexion with Graphs. </title> <journal> Numerische Mathe-matik, </journal> <volume> 1 </volume> <pages> 269-271, </pages> <year> 1959. </year>
Reference-contexts: We call this objective utilization-driven, because it minimizes the total utilization of links. Optimization techniques for multicasting proposed before have considered the delay and cost optimization objectives, but have treated them as distinct problems. Dijkstra's shortest path algorithm <ref> [8] </ref> can be used to generate the shortest paths from the source to destinations. This provides the optimal solution for delay minimization. Multicast algorithms that perform cost optimization have been based on computing the minimum Steiner tree in a graph. <p> Improvement phase: iteratively minimize the cost of the tree while always satisfying the delay bounds. To guarantee that a feasible solution is found that satisfies the given delay bound, the initial tree is the minimum-delay tree, which is constructed using Dijkstra's shortest-path algorithm <ref> [8] </ref>. In some cases, the delay bounds given by DDF may be too tight, i.e., they cannot be met even in the minimum-delay tree.
Reference: [9] <author> M. L. Fredman and R. E. Tarjan. </author> <title> Fibonacci Heaps and Their Uses in Improved Network Optimization Algorithms. </title> <journal> J. of ACM, </journal> <volume> 34(3) </volume> <pages> 596-615, </pages> <year> 1987. </year>
Reference-contexts: A straightforward implementation of Dijkstra's algorithm has O (n 2 ) complexity. Thus, s (n) = O (n 2 ). Using more sophisticated data structures s (n) can be reduced to O (m + n log n), where m is the number of edges in the network <ref> [9] </ref>. This complexity is better for sparse graphs. By Lemma 1, the expected number of path-switchings to be performed is O (n log (n)).
Reference: [10] <author> J. J. Garcia-Luna-Aceves. </author> <title> Reliable Broadcast of Routing Information Using Diffusing Computations. </title> <booktitle> In Proc. of IEEE Globecom '92, </booktitle> <month> Dec. </month> <year> 1992. </year>
Reference-contexts: One way to have this information is for each node in the network to maintain an updated database of link weights and node connections in the network. This requirement can be supported using one of many topology-broadcast algorithms, which can be based on flooding or other techniques <ref> [2, 11, 10] </ref>. A network is modeled as a directed weighted graph G = (V; E), as shown in Figure 1, with node set V and edge set E. The nodes represent routers or switches and edges represent the communication link between them.
Reference: [11] <author> J. J. Garcia-Luna-Aceves and J. Behrens. </author> <title> Distributed, Scalable Routing Based on Vectors of Link States. </title> <journal> IEEE J. on Selected Areas in Comm., </journal> <volume> 13(8) </volume> <pages> 1383-95, </pages> <month> Oct. </month> <year> 1995. </year>
Reference-contexts: One way to have this information is for each node in the network to maintain an updated database of link weights and node connections in the network. This requirement can be supported using one of many topology-broadcast algorithms, which can be based on flooding or other techniques <ref> [2, 11, 10] </ref>. A network is modeled as a directed weighted graph G = (V; E), as shown in Figure 1, with node set V and edge set E. The nodes represent routers or switches and edges represent the communication link between them.
Reference: [12] <author> M. Garey and D. Johnson. </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness. </title> <address> New York: </address> <publisher> W.H. Freeman and Co., </publisher> <year> 1979. </year>
Reference-contexts: A Steiner tree in a graph must reach a subset of nodes in the graph, called given nodes. The problem of finding the minimum Steiner tree is known to be an NP-complete problem <ref> [12] </ref>, and a number of heuristics [15, 19, 22] have been developed to solve this problem in polynomial time and producing near-optimum results. <p> The DBMST problem can be reduced to a minimum Steiner tree problem with the delay bound set to infinity, which is known to be an NP-complete problem <ref> [12] </ref> and only heuristics are of practical interest for its solution; BSMA is a new heuristic designed to solve the DBMST problem. 3 Description of BSMA The DBMST can be approached as a feasible-search optimization problem [4] in which the feasible region consists of all trees that satisfy the delay bound
Reference: [13] <author> N. Katoh, T. Ibaraki, and H. </author> <title> Mine. An Efficient Algorithm for K Shortest Simple Paths. </title> <journal> Networks, </journal> <volume> 12 </volume> <pages> 411-427, </pages> <year> 1982. </year>
Reference-contexts: In our description and implementation of BSMA, we have used a k-shortest-path algorithm to perform path-switching. The complexity of k-shortest path algorithm 2 is O (ks (n)), where s (n) is the complexity of single-source shortest-path algorithm <ref> [13] </ref>. However, k can be exceedingly large. For example, consider a grid graph, where all edges have a unit cost, and some delay.
Reference: [14] <author> V. P. Kompella, J.C. Pasquale, </author> <title> and G.C. Polyzos. Multicast Routing for Multimedia Communication. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 1(3) </volume> <pages> 286-292, </pages> <year> 1993. </year>
Reference-contexts: This same idea is used in the work by Cong, Kahng, Robins, Sarrafzadeh and Wong [6] (which we call CKRSW) except that CKRSW refines the tree to bound the radius of the tree. Both ABP and CKRSW assume identical cost and delay functions. Kompella, Pasquale and Polyzos <ref> [14] </ref> proposed two heuristics (which we call KPP) that address delay-bounded multicast trees. In their formulation, the delay bound for all destinations is the same; furthermore, KPP assumes that link delays and the delay bound are integer-valued and that link costs and delays are symmetric. <p> KPP extends the KMB algorithm by taking into account the constraint of the specified delay bound in the construction of the complete distance graph <ref> [14] </ref>. This paper presents a new algorithm for the construction of a minimum-cost multicast tree with delay constraints. The algorithm, which we call Bounded Shortest Multicast Algorithm (BSMA) 1 proceeds in two phases.
Reference: [15] <author> L. Kou, G. Markowsky, and L. Berman. </author> <title> A Fast Algorithm for Steiner Trees. </title> <journal> Acta Informatica, </journal> <volume> 15 </volume> <pages> 141-145, </pages> <year> 1981. </year>
Reference-contexts: A Steiner tree in a graph must reach a subset of nodes in the graph, called given nodes. The problem of finding the minimum Steiner tree is known to be an NP-complete problem [12], and a number of heuristics <ref> [15, 19, 22] </ref> have been developed to solve this problem in polynomial time and producing near-optimum results. In Kou, Markowsky and Berman's (KMB) algorithm [15], a network is abstracted to a complete distance graph consisting of edges that represent the shortest paths between the source node and each destination node. <p> The problem of finding the minimum Steiner tree is known to be an NP-complete problem [12], and a number of heuristics [15, 19, 22] have been developed to solve this problem in polynomial time and producing near-optimum results. In Kou, Markowsky and Berman's (KMB) algorithm <ref> [15] </ref>, a network is abstracted to a complete distance graph consisting of edges that represent the shortest paths between the source node and each destination node. <p> The KMB solution has been shown to yield a worst-case cost performance of 2 (1 1 jZj ), where Z the set of leaves in the optimal Steiner tree <ref> [15] </ref>. In practice, the average suboptimality of KMB is far below this limit and is near optimal. Therefore, we conjecture from our experiments that the quality of a solution found by BSMA is near-optimal in practice.
Reference: [16] <author> E. Lawler. </author> <title> Combinatorial Optimization: Networks and Matroids. </title> <publisher> Holt, Rinehart and Winston, </publisher> <year> 1976. </year>
Reference-contexts: The search for the delay-bounded shortest p s path used to reconnect the two trees T 1 j j starts with the shortest path between the two trees. If, however, the shortest path results in a violation of delay bounds, BSMA uses an incremental k-shortest path algorithm <ref> [16, 24] </ref> to find a delay-bounded shortest path to reconnect the two trees. The k-shortest path problem consists of finding the kth shortest simple path connecting a given source-destination pair in a graph. Note that, in BSMA, the k-shortest path is between two trees. <p> However, k can be exceedingly large. For example, consider a grid graph, where all edges have a unit cost, and some delay. The number of paths between two nodes grows exponentially with the Manhattan distance 2 Our implementation of the k-shortest path uses the algorithm described by Lawler <ref> [16] </ref> which takes O (kn 3 ). between the nodes, all of which have the same cost.
Reference: [17] <author> J. Moy. </author> <note> OSPF Version 2. Internet Draft, RFC-1247, </note> <month> Jul. </month> <year> 1991. </year>
Reference-contexts: We anticipate that CST heuristics will be applied to large-scale networks within the context of hierarchical routing, because the underlying routing mechanisms used to disseminate topology data require the aggregation of information in order to cope with network size (e.g., OSPF <ref> [17] </ref>). In addition to reducing the number of nodes and links that a node running BSMA needs to know, BSMA's running time can be made faster by limiting the number of k shortest paths used in BSMA's iterations, at the expense of larger tree costs.
Reference: [18] <author> R. Prim. </author> <title> Shortest Connection Networks and Some Generalizations. </title> <journal> Bell Systems Tech. J., </journal> <volume> 36 </volume> <pages> 1389-1401, </pages> <year> 1957. </year>
Reference-contexts: In Kou, Markowsky and Berman's (KMB) algorithm [15], a network is abstracted to a complete distance graph consisting of edges that represent the shortest paths between the source node and each destination node. The KMB algorithm constructs a minimum spanning tree <ref> [18] </ref> in the complete distance graph, and the Steiner tree of the original network is obtained by achieving the shortest paths represented by edges in the minimum spanning tree. 2 Bharath-Kumar and Jaffe [3] discussed minimizing both cost and delay, assuming that cost and delay functions are identical. <p> Finding the minimum-weight spanning tree can be solved optimally in O (n 2 ) using Prim's algorithm <ref> [18] </ref>. The results are shown in Figure 8, which uses the same labeling introduced for Fig. 7. The cost ratio is normalized with respect to the minimum spanning tree (instead of the KMB tree). The error bars again represent 95% confidence interval.
Reference: [19] <author> V. Rayward-Smith. </author> <title> The Computation of Nearly Minimal Steiner Trees in Graphs. </title> <journal> Intl. J. Math. Educ. Sci. Tech., </journal> <volume> 14(1) </volume> <pages> 15-23, </pages> <year> 1983. </year>
Reference-contexts: A Steiner tree in a graph must reach a subset of nodes in the graph, called given nodes. The problem of finding the minimum Steiner tree is known to be an NP-complete problem [12], and a number of heuristics <ref> [15, 19, 22] </ref> have been developed to solve this problem in polynomial time and producing near-optimum results. In Kou, Markowsky and Berman's (KMB) algorithm [15], a network is abstracted to a complete distance graph consisting of edges that represent the shortest paths between the source node and each destination node.
Reference: [20] <author> G. N. Rouskas and I. Baldine. </author> <title> Multicast Routing with End-to-End Delay and Delay Variation Constraints. </title> <journal> IEEE J. on Selected Areas in Comm., </journal> <volume> 15(3) </volume> <pages> 346-356, </pages> <month> April </month> <year> 1997. </year>
Reference-contexts: The iterative approach introduced in BSMA can also be applied to related multicast problems, such as obtaining trees of smallest cost with end-to-end delay bounds and delay-variation bounds <ref> [20] </ref>.
Reference: [21] <author> H. F. Salama, D. S. Reeves, and Y. Viniotis. </author> <title> Evaluation of Multicast Routing Algorithms for Real-Time Communications on High-Speed Networks. </title> <journal> IEEE J. on Selected Areas in Comm., </journal> <volume> 15(3) </volume> <pages> 332-345, </pages> <month> Apr. </month> <year> 1997. </year>
Reference-contexts: Therefore, we conjecture from our experiments that the quality of a solution found by BSMA is near-optimal in practice. We expect BSMA to obtain smaller costs than those of KPP, because KPP is based on the KMB algorithm. Recent simulation results obtained by Salama et al. <ref> [21] </ref> confirm that the cost of BSMA is consistently lower than the cost of KPP; their results also show that BSMA is better than KPP and all the other algorithms reported to date for delay-constrained multicasting. Moreover, our experiments and the simulation results by Salama et al. [21] confirm that BSMA <p> Salama et al. <ref> [21] </ref> confirm that the cost of BSMA is consistently lower than the cost of KPP; their results also show that BSMA is better than KPP and all the other algorithms reported to date for delay-constrained multicasting. Moreover, our experiments and the simulation results by Salama et al. [21] confirm that BSMA always succeeded in constructing a tree if there is a feasible solution, whereas KPP can fail if the granularity used to scale costs to integer values is not of proper size. <p> This is ideal, because BSMA solves the relaxed problem as fast as KMB. As the problem becomes more constrained, BSMA naturally requires more time to solve it. 19 The running times of BSMA are much lower than the ones reported by Salama et al. <ref> [21] </ref>. Our simulation results for 30 members in a 100-node graph for the most stringent delay-bound are on the average about 4 times longer than KMB. <p> The average number of k is 23. The execution time of BSMA is nevertheless on the same order of magnitude as KMB. We conjecture that the differences between our results on BSMA execution times and those reported by Salama et al. <ref> [21] </ref> are due to differences in the specific k-shortest path algorithm used to implement BSMA and the implementation of Dijkstra's algorithm. Our implementation of the k-shortest path also uses Dijkstra's algorithm implemented using a binary heap data structure. <p> The cost minimization is monotonically achieved after a series of delay bounded path-switching improvements. The simulation results show that BSMA can produce delay-bounded multicast trees that have low cost. Recent results by Salama et al. <ref> [21] </ref> confirm our results and show that BSMA is the best algorithm in terms of cost and number of sessions established for computation of delay-constrained minimum-cost multicast trees among all the constrained Steiner tree (CST) algorithms reported to date.
Reference: [22] <author> H. Takahashi and A. </author> <title> Matsuyama. An Approximate Solution for the Steiner Problem in Graphs. </title> <journal> Math. Japonica, </journal> <volume> 6 </volume> <pages> 573-577, </pages> <year> 1990. </year>
Reference-contexts: A Steiner tree in a graph must reach a subset of nodes in the graph, called given nodes. The problem of finding the minimum Steiner tree is known to be an NP-complete problem [12], and a number of heuristics <ref> [15, 19, 22] </ref> have been developed to solve this problem in polynomial time and producing near-optimum results. In Kou, Markowsky and Berman's (KMB) algorithm [15], a network is abstracted to a complete distance graph consisting of edges that represent the shortest paths between the source node and each destination node.
Reference: [23] <author> B. Waxman. </author> <title> Routing of Multipoint Connections. </title> <journal> IEEE J. on Selected Areas in Comm., </journal> <volume> 6 </volume> <pages> 1617-1622, </pages> <month> December </month> <year> 1988. </year>
Reference-contexts: As we expected, we obtained qualitatively similar results for all the different graphs. Group members were picked uniformly from the set of nodes in the graph, excluding the nodes already selected for the group. The random graphs used in the simulation are constructed using the method proposed by Waxman <ref> [23] </ref>. The n nodes of a graph are randomly placed on a Cartesian coordinate grid with unit spacing. The (x; y) coordinates of each node was selected uniformly from 15 integers in [0; n].
Reference: [24] <author> Jin Y. Yen. </author> <title> Finding the k Shortest Loopless Paths in a Network. </title> <journal> Management Science, </journal> <volume> 17(11) </volume> <pages> 712-716, </pages> <year> 1971. </year>
Reference-contexts: The search for the delay-bounded shortest p s path used to reconnect the two trees T 1 j j starts with the shortest path between the two trees. If, however, the shortest path results in a violation of delay bounds, BSMA uses an incremental k-shortest path algorithm <ref> [16, 24] </ref> to find a delay-bounded shortest path to reconnect the two trees. The k-shortest path problem consists of finding the kth shortest simple path connecting a given source-destination pair in a graph. Note that, in BSMA, the k-shortest path is between two trees.

References-found: 24

