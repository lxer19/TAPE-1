URL: http://www.cs.wisc.edu/~fischer/course/html/submissions/109.ps.gz
Refering-URL: http://www.cs.wisc.edu/~fischer/course/html/submissions/
Root-URL: http://www.cs.wisc.edu
Title: Generation of efficient interprocedural analyzers with pag. In Second International Efficient Implementation of a BDD
Author: M. Alt and F. Martin. R.L. Rudell, and R.E. Bryant. [] B. Le Charlier and P. Van Hentenryck. [] A. Cortesi, G. File, and W. Winsborough. [] V. Englebert, B. Le Charlier, D. Roland, and P. Van Hentenryck. [] M. Hecht. [] P. Van Hentenryck, A. Cortesi, and B. Le Charlier. [] D. Jacobs and A. Langen. [] K. Marriott and H. Stndergaard. . [] K. Muthukumar and M. Hermenegildo. [] Magnus Nordin. Igor: [] R. Sundararajan and S. Conery. 
Address: pages 322-327, Amsterdam, The Netherlands, 1991.  1995.  
Affiliation: Computer Science,  Science Department, Uppsala University,  
Note: 8 Conclusion References [1]  Symposium, SAS'95, pages 33-50, Glasgow, UK, 1995. Springer, LNCS 983. [2] K.S. Brace,  In 27th ACM/IEEE Design Automation Conference, pages 40-45, 1990.  In Proceedings of the 6th Annual IEEE Symposium on Logic in  PhD thesis, Computing  In Proceedings twelfth FST/TCS conference, pages 203-216. Springer Verlag, LNCS 652, 1992. [15] Peter van Roy. Can Logic Programming Execute as Fast as Imperative Programming. PhD thesis, University of Berkeley, 1991. 10  
Abstract: We have presented GENA, a tool for generating Prolog analyzers from specifications. GENA should be helpful for researchers interested in the abstract interpretation of Prolog. Analyzers are specified in the high-level language SML. GENA contains a lot of different analysis engines which correspond to different abstract interpretation frameworks and fixpoint algorithms that have been proposed in the literature. As an example, the specification of the abstract domain Pos has been given and explained in detail. Furthermore, we have compared the efficiency of the generated analyzer with the implementation of Pos in the GAIA system: our analyzer, although specified in a high-level language, is much faster than the GAIA analyzer. Acknowledgement We would like to thank Peter Van Roy for allowing us to use the source code of the aquarius Prolog compiler for benchmarking. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Alt and F. Martin. </author> <title> Generation of efficient interprocedural analyzers with pag. </title> <booktitle> In Second International Symposium, SAS'95, </booktitle> <pages> pages 33-50, </pages> <address> Glasgow, UK, 1995. </address> <publisher> Springer, LNCS 983. </publisher>
Reference: [2] <author> K.S. Brace, R.L. Rudell, and R.E. Bryant. </author> <title> Efficient Implementation of a BDD Package. </title> <booktitle> In 27th ACM/IEEE Design Automation Conference, </booktitle> <pages> pages 40-45, </pages> <year> 1990. </year>
Reference: [3] <author> R.E. Bryant. </author> <title> Graph-Based Algorithms for Boolean Function Manipulations. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-35(8), </volume> <month> August </month> <year> 1986. </year>
Reference: [4] <author> B. Le Charlier and P. Van Hentenryck. </author> <title> Experimental evaluation of a generic abstract interpretation algorithm for Prolog. </title> <journal> TOPLAS, </journal> <volume> 16(1) </volume> <pages> 35-101, </pages> <year> 1994. </year>
Reference: [5] <author> A. Cortesi, G. File, and W. Winsborough. </author> <title> Prop revisited: Propositional formulas as abstract domain for groundness analysis. </title> <booktitle> In Proceedings of the 6th Annual IEEE Symposium on Logic in Computer Science, </booktitle> <pages> pages 322-327, </pages> <address> Amsterdam, The Netherlands, </address> <year> 1991. </year>
Reference: [6] <author> V. Englebert, B. Le Charlier, D. Roland, and P. Van Hentenryck. </author> <title> Generic Abstract Interpretation Algorithms for Prolog: Two Optimization Techniques and their Experimental Evaluation. </title> <journal> Software | Practice and Experience, </journal> <volume> 23(4) </volume> <pages> 419-459, </pages> <year> 1993. </year>
Reference: [7] <author> M. Hecht. </author> <title> Flow Analysis of Computer Programs. </title> <publisher> North-Holland, </publisher> <year> 1977. </year>
Reference: [8] <author> P. Van Hentenryck, A. Cortesi, and B. Le Charlier. </author> <title> Evaluation of the domain Prop. </title> <journal> The Journal of Logic Programming, </journal> <volume> 23(3) </volume> <pages> 237-278, </pages> <year> 1995. </year>
Reference: [9] <author> D. Jacobs and A. Langen. </author> <title> Static analysis of logic programs for independent and-parallelism. </title> <journal> Journal of Logic Programming, </journal> <volume> 13 </volume> <pages> 291-314, </pages> <year> 1992. </year>
Reference: [10] <author> K. Marriott and H. Stndergaard. </author> <title> Precise and Efficient Groundness Analysis for Logic Programs. </title> <journal> ACM Letters on Programming Languages and Systems, </journal> <volume> 2 </volume> <pages> 181-196, </pages> <year> 1993. </year>
Reference: [11] <author> C.S. Mellish. </author> <title> Some Global Optimizations for a Prolog Compiler. </title> <journal> Journal of Logic Programming, </journal> <volume> 1 </volume> <pages> 143-166, </pages> <year> 1985. </year>
Reference: [12] <author> K. Muthukumar and M. Hermenegildo. </author> <title> Compile-Time Derivation of Variable Dependency Using Abstract Interpretation. </title> <journal> The Journal of Logic Programming, </journal> <volume> 13 </volume> <pages> 315-347, </pages> <year> 1992. </year>
Reference: [13] <author> Magnus Nordin. Igor: </author> <title> A tool for developing abstract domains for Prolog Analyzers. </title> <type> PhD thesis, </type> <institution> Computing Science Department, Uppsala University, </institution> <year> 1995. </year>
Reference: [14] <author> R. Sundararajan and S. Conery. </author> <title> An abstract interpretation scheme for groundness, freeness, and sharing analysis of logic programs. </title> <booktitle> In Proceedings twelfth FST/TCS conference, </booktitle> <pages> pages 203-216. </pages> <publisher> Springer Verlag, LNCS 652, </publisher> <year> 1992. </year>

References-found: 14

