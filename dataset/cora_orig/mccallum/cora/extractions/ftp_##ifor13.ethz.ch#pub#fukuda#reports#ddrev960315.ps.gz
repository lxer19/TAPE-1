URL: ftp://ifor13.ethz.ch/pub/fukuda/reports/ddrev960315.ps.gz
Refering-URL: http://www.cs.duke.edu/~jeffe/compgeom/code.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Phone: 2  
Title: Double Description Method Revisited  
Author: Komei Fukuda and Alain Prodon 
Address: ETHZ, CH-8092 Zurich, Switzerland  CH-1015 Lausanne, Switzerland  
Affiliation: 1 Institute for Operations Research,  Department of Mathematics, EPFL,  
Abstract: The double description method is a simple and useful algorithm for enumerating all extreme rays of a general polyhedral cone in IR d , despite the fact that we can hardly state any interesting theorems on its time and space complexities. In this paper, we reinvestigate this method, introduce some new ideas for efficient implementations, and show some empirical results indicating its practicality in solving highly degenerate problems. 
Abstract-found: 1
Intro-found: 1
Reference: [AB95] <author> D. Avis and D. Bremner. </author> <title> How good are convex hull algorithms. </title> <type> Technical Report TR95.1, </type> <institution> School of Computer Science, McGill University, Montreal, Canada, </institution> <year> 1995. </year> <note> available via anonymous ftp from mutt.cs.mcgill.ca (directory pub/doc). </note>
Reference-contexts: It should be noted the original paper [MRTT53] gives a satisfactory remedy to (b) and explains how to generate the minimum generating matrix R k . Our implementations in fact follow their ideas. Also the point (c) has been discussed in a recent paper <ref> [AB95] </ref> where it is shown that the perturbation makes the DD method exponentially slower for a certain class of polyhedra. While this serves as the formal justification of not using perturbation techniques, we find that 3 the DD method can exploit a very little from nondegeneracy assumptions.
Reference: [AF92] <author> D. Avis and K. Fukuda. </author> <title> A pivoting algorithm for convex hulls and vertex enumeration of arrangements and polyhedra. </title> <journal> Discrete Comput. Geom., </journal> <volume> 8 </volume> <pages> 295-313, </pages> <year> 1992. </year>
Reference-contexts: Such efficient algorithms exist for certain special cases only. The problem is said to be degenerate if there is a vector x in P (A) satisfying more than d inequalities in Ax 0 with equality, and nondegenerate otherwise. Avis and Fukuda <ref> [AF92] </ref> showed that when the problem is nondegenerate it is possible to solve the extreme ray enumeration problems in time O (mdv) and in space O (md) where v is the number of extreme rays. Note that the problem treated in [AF92] is the vertex enumeration problem, which is the non-homogeneous <p> Avis and Fukuda <ref> [AF92] </ref> showed that when the problem is nondegenerate it is possible to solve the extreme ray enumeration problems in time O (mdv) and in space O (md) where v is the number of extreme rays. Note that the problem treated in [AF92] is the vertex enumeration problem, which is the non-homogeneous version of our problem and there are simple transformations between them. (A C-implementation of Avis-Fukuda algorithm is publicly available [Avi93].) In this paper, we examine a classical algorithm, known as the double description (DD) method [MRTT53], which is an extremely simple <p> One serious problem is that the analysis which yields its "optimality" depends on the assumption that the input is nondegenerate (or dually, the points are in general position). This assumption is rather nonrealistic 7 because there is an efficient (linear-time) algorithm <ref> [AF92] </ref> for nondegenerate case and thus problems for which the DD method is superior must be degenerate. Furthermore, we show that it is not necessary to store the adjacencies of rays.
Reference: [Avi93] <author> D. Avis. </author> <title> A C implementation of the reverse search vertex enumeration algorithm. </title> <institution> School of Computer Science, McGill University, Montreal, Canada, </institution> <year> 1993. </year> <note> programs lrs and qrs available via anonymous ftp from mutt.cs.mcgill.ca (directory pub/C). </note>
Reference-contexts: Note that the problem treated in [AF92] is the vertex enumeration problem, which is the non-homogeneous version of our problem and there are simple transformations between them. (A C-implementation of Avis-Fukuda algorithm is publicly available <ref> [Avi93] </ref>.) In this paper, we examine a classical algorithm, known as the double description (DD) method [MRTT53], which is an extremely simple algorithm. We are primarily interested in practicality of this algorithm applied to highly generate 2 problems. Let us describe the algorithm briefly.
Reference: [BDH93] <author> C.B. Barber, D.P. Dobkin, and H. Huhdanpaa. </author> <title> The quickhull algorithm for convex hulls. </title> <type> Technical Report GCC53, </type> <institution> The Geometry Center, Minnesota, U.S.A., </institution> <year> 1993. </year>
Reference-contexts: We have not yet tested the practicality of this technique and this will be a subject of future research. Finally we would like to emphasize that although we found our implementations quite competitive, it is not our interest to compare our implementations with the other existing implementations, e.g. <ref> [BDH93, Ver92, Wil93] </ref>. It is very difficult to make fair comparisons and we do not think such comparisons are very useful. Instead, we concentrate on showing what we learned from our experiences with the DD method, and present some techniques we found useful.
Reference: [CGAF94] <author> G. Ceder, G.D. Garbulsky, D. Avis, and K. Fukuda. </author> <title> Ground states of a ternary fcc lattice model with nearest and next-nearest neighbor interactions. </title> <journal> Physical Review B, </journal> <volume> 49(1) </volume> <pages> 1-7, </pages> <year> 1994. </year>
Reference: [Che65] <author> N.V. Chernikova. </author> <title> An algorithm for finding a general formula for non-negative solutions of system of linear inequalities. </title> <journal> U.S.S.R Computational Mathematics and Mathematical Physics, </journal> <volume> 5 </volume> <pages> 228-233, </pages> <year> 1965. </year>
Reference-contexts: In the general iteration k, the algorithm constructs a DD pair (A k+1 ; R k+1 ) from a DD pair (A k ; R k ) already computed. This algorithm was rediscovered repeatedly and given different names. The method known as Chernikova's algorithm <ref> [Che65] </ref> is basically the same method. In the dual setting of computing A from the generating matrix R (known as the convex hull computation), the method is essentially equivalent to the beneath-and-beyond method, see [Ede87, Mul94].
Reference: [DFL93] <author> M. Deza, K. Fukuda, and M. Laurent. </author> <title> The inequicut cone. </title> <journal> Discrete Mathematics, </journal> <volume> 119 </volume> <pages> 21-48, </pages> <year> 1993. </year>
Reference: [Dye83] <author> M.E. Dyer. </author> <title> The complexity of vertex enumeration methods. </title> <journal> Math. Oper. Res., </journal> <volume> 8 </volume> <pages> 381-402, </pages> <year> 1983. </year>
Reference-contexts: The algorithm is sensitive to the permutations of rows of A, and an exponential behavior is exhibited when the (column) size of R k explodes with some bad ordering of rows for certain class of matrices A, see <ref> [Dye83] </ref>. Yet, it has been observed that once it is properly implemented with a certain heuristic strategy of selecting an ordering and further techniques, it becomes a very competitive algorithm, in particular for highly degenerate problems.
Reference: [Ede87] <author> H. Edelsbrunner. </author> <title> Algorithms in Combinatorial Geometry. </title> <publisher> Springer-Verlag, </publisher> <year> 1987. </year>
Reference-contexts: This algorithm was rediscovered repeatedly and given different names. The method known as Chernikova's algorithm [Che65] is basically the same method. In the dual setting of computing A from the generating matrix R (known as the convex hull computation), the method is essentially equivalent to the beneath-and-beyond method, see <ref> [Ede87, Mul94] </ref>. On the other hand, the algorithm known as the Fourier-Motzkin elimination is more general than the DD method, but often considered as the same method partly because it can be used to solve the extreme ray enumeration problem.
Reference: [Fuk93] <author> K. Fukuda. </author> <title> cdd.c : C-implementation of the double description method for computing all vertices and extremal rays of a convex polyhedron given by a system of linear inequalities. </title> <institution> Department of Mathematics, Swiss Federal Institute of Technology, Lausanne, Switzerland, </institution> <year> 1993. </year> <note> program available from ifor13.ethz.ch (129.132.154.13), directory /pub/fukuda/cdd. </note>
Reference-contexts: Instead, we concentrate on showing what we learned from our experiences with the DD method, and present some techniques we found useful. One can reproduce most of our experimental findings since one of the implementations we use is publicly available by anonymous ftp <ref> [Fuk93] </ref>. 4 2 Double Description Method: Primitive Form In this section, we give the simplest form of the DD method [MRTT53]. Suppose that an m fi d matrix A is given, and let P (A) = fx : Ax 0g. <p> The test examples are part of the distribution of CDD and thus publically available by anonymous ftp <ref> [Fuk93] </ref>.
Reference: [Gru67] <author> B. Grunbaum. </author> <title> Convex Polytopes. </title> <publisher> John Wiley and Sons, </publisher> <address> New York, </address> <year> 1967. </year>
Reference: [MRTT53] <author> T.S. Motzkin, H. Raiffa, GL. Thompson, and R.M. Thrall. </author> <title> The double description method. </title> <editor> In H.W. Kuhn and A.W.Tucker, editors, </editor> <booktitle> Contributions to theory of games, </booktitle> <volume> Vol. 2. </volume> <publisher> Princeton University Press, </publisher> <address> Princeton, RI, </address> <year> 1953. </year>
Reference-contexts: Clearly, for a pair (A; R) to be a DD pair, it is necessary that the column size of A is equal to the row size of R, say d. The term "double description" was introduced by Motzkin et al. <ref> [MRTT53] </ref>, and it is quite natural in the sense that such a pair contains two different descriptions of the same object. <p> that the problem treated in [AF92] is the vertex enumeration problem, which is the non-homogeneous version of our problem and there are simple transformations between them. (A C-implementation of Avis-Fukuda algorithm is publicly available [Avi93].) In this paper, we examine a classical algorithm, known as the double description (DD) method <ref> [MRTT53] </ref>, which is an extremely simple algorithm. We are primarily interested in practicality of this algorithm applied to highly generate 2 problems. Let us describe the algorithm briefly. Let A k be the submatrix of A consisting of the first k rows of A. <p> It should be noted the original paper <ref> [MRTT53] </ref> gives a satisfactory remedy to (b) and explains how to generate the minimum generating matrix R k . Our implementations in fact follow their ideas. <p> One can reproduce most of our experimental findings since one of the implementations we use is publicly available by anonymous ftp [Fuk93]. 4 2 Double Description Method: Primitive Form In this section, we give the simplest form of the DD method <ref> [MRTT53] </ref>. Suppose that an m fi d matrix A is given, and let P (A) = fx : Ax 0g. The DD method is an incremental algorithm to construct a d fi n matrix R such that (A; R) is a DD pair. <p> The first one is the simplest and might be called standard in the sense that anyone implementing the DD method is quite likely to come up with this implementation, and is in fact suggested in the original paper <ref> [MRTT53] </ref>. We shall give new implementations which are more efficient than the standard algorithm. 3.1 The standard implementation We first introduce some definitions and properties which we will use in strengthening Lemma 3. Remember that we are assuming that P is pointed, that is rank (A) = d.
Reference: [MS71] <author> P. </author> <title> McMullen and G.C. Shephard. Convex Polytopes and the Upperbound Conjecture. </title> <publisher> Cambridge University Press, </publisher> <year> 1971. </year>
Reference: [Mul94] <author> K. Mulmuley. </author> <title> Computational Geometry, An Introduction Through Ran-damized Algorithms. </title> <publisher> Prentice-Hall, </publisher> <year> 1994. </year>
Reference-contexts: This algorithm was rediscovered repeatedly and given different names. The method known as Chernikova's algorithm [Che65] is basically the same method. In the dual setting of computing A from the generating matrix R (known as the convex hull computation), the method is essentially equivalent to the beneath-and-beyond method, see <ref> [Ede87, Mul94] </ref>. On the other hand, the algorithm known as the Fourier-Motzkin elimination is more general than the DD method, but often considered as the same method partly because it can be used to solve the extreme ray enumeration problem. <p> In the next section we will show how to avoid generating redundant vectors. The DD method in dual form, for constructing the convex hull of a finite set of points, is known as the beneath-beyond method and studied extensively in the field of computational geometry. An implementation proposed in <ref> [Mul94] </ref>, when interpreted as the DD method, is basically to use random inequality ordering and to store the complete adjacencies of the rays in the intermediate cones for efficient updates.
Reference: [Sch86] <author> A. Schrijver. </author> <title> Theory of Linear and Integer Programming. </title> <publisher> John Wiley & Sons, </publisher> <address> New York, </address> <year> 1986. </year>
Reference: [Ver92] <author> H. Le Verge. </author> <title> A note on Chernikova's algorithm. </title> <type> Technical report internal publication 635, </type> <institution> IRISA, Rennes, France, </institution> <month> February </month> <year> 1992. </year>
Reference-contexts: We have not yet tested the practicality of this technique and this will be a subject of future research. Finally we would like to emphasize that although we found our implementations quite competitive, it is not our interest to compare our implementations with the other existing implementations, e.g. <ref> [BDH93, Ver92, Wil93] </ref>. It is very difficult to make fair comparisons and we do not think such comparisons are very useful. Instead, we concentrate on showing what we learned from our experiences with the DD method, and present some techniques we found useful.
Reference: [Wil93] <author> D. Wilde. </author> <title> A library for doing polyhedral operations. </title> <type> Technical report internal publication 785, </type> <institution> IRISA, Rennes, France, </institution> <month> December </month> <year> 1993. </year> <title> This article was processed using the L A T E X macro package with LLNCS style i ii </title>
Reference-contexts: We have not yet tested the practicality of this technique and this will be a subject of future research. Finally we would like to emphasize that although we found our implementations quite competitive, it is not our interest to compare our implementations with the other existing implementations, e.g. <ref> [BDH93, Ver92, Wil93] </ref>. It is very difficult to make fair comparisons and we do not think such comparisons are very useful. Instead, we concentrate on showing what we learned from our experiences with the DD method, and present some techniques we found useful.
References-found: 17

