URL: http://www.cs.princeton.edu/~jlk/icse.ps
Refering-URL: http://www.cs.princeton.edu/~jlk/resh.html
Root-URL: http://www.cs.princeton.edu
Email: jlk@cs.princeton.edu  chen@research.att.com  ek@research.att.com  
Phone: +1 609 258 0451  +1 973 360 8653  +1 973 360 8642  
Title: Reverse Engineering of Java Applets  
Author: Jeffrey Korn Yih-Farn Chen Eleftherios Koutsofios 
Keyword: Reverse engineering, Java, program database, software repository, reachability analysis.  
Address: Princeton, NJ 08544  180 Park Avenue Florham Park, NJ 07932  180 Park Avenue Florham Park, NJ 07932  
Affiliation: Princeton University Dept. of Computer Science  AT&T Labs Research  AT&T Labs Research  
Abstract: Java applets have been used increasingly on web sites to perform client-side processing and provide dynamic content. While many web site analysis tools are available, their focus has been on static HTML contents and most ignore the applet code completely. This paper presents a system that analyzes and tracks changes in Java applets. The tool extracts information from applet code about classes, methods, fields and their relationships into a relational database. A suite of programs query the database to display structural information about the application. Tools built on top of the database are also available to perform advanced tasks such as reachabil-ity and clustering analysis, and can graphically display query and analysis results. Databases contain supplementary checksum information to detect changes in two versions of a Java applet. Our tool is able to generate a database using only the compiled class files, making it possible to analyze remote applets whose source code is unavailable. This paper presents the database model and describes the implementation of the database generation tool. We give some examples of program analyses, including comparisons between the Java 1.0 Java Development Kit (JDK) and the Java 1.1 JDK. Performance numbers indicate that the tool scales well. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> K. Arnold and J. Gosling. </author> <title> The Java Programming Language. </title> <publisher> Addison Wesley, </publisher> <year> 1996. </year>
Reference-contexts: Tools that work with repositories are able to display system information in alternative ways that provide insight to a developer, for example as directed graphs or formatted text. This paper presents a software repository for Java <ref> [1] </ref>. The system presented has several noteworthy features: 1) It does not require source code, and can work with binary class files. 2) It works with remote applets. 3) It supports repository differencing, allowing tools to examine what changes have been made in two different versions of a system.
Reference: [2] <author> R. S. Arnold. </author> <title> Software Reengineering: A Quick History. </title> <journal> Commun. ACM, </journal> <volume> 37(5) </volume> <pages> 13-14, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: While many web site analysis tools are available to analyze the structure of static HTML content, most of them completely ignore the applet code, which by its nature requires software analysis techniques. Traditional software repositories <ref> [2, 16, 17, 7, 11, 4] </ref> apply reverse engineering [10] techniques on the source code to build a central information source for maintaining code in a software system.
Reference: [3] <author> N. S. Barghouti, J. Mocenigo, and W. Lee. </author> <month> Grappa: </month>
Reference-contexts: Instead of installing CIAO and chava on each user's machine, we plan to create a web service for developers who would like to share the understanding of a particular program amongst each other. Users will be able to generate graph views using an applet <ref> [3] </ref>, run database queries through JDBC, and view source code as HTML or XML. Such a service will allow researchers to freely analyze and experi ment with public source code. 7 AVAILABILITY Chava will soon be available to educational institutions for experimental use. Please visit http://www. research.att.com/sw/tools/ciao.
References-found: 3

