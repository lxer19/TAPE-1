URL: http://theory.lcs.mit.edu/~shanir/gn-podc97.ps
Refering-URL: http://theory.lcs.mit.edu/~shanir/
Root-URL: 
Title: Towards a Topological Characterization of Asynchronous Complexity (Preliminary Version)  time(N) X  
Author: Gunnar Hoest Nir Shavit i= N i names(N &lt; N (N ) 
Keyword: input range  
Address: i=2  
Note: N (N 1)  
Affiliation: M.I.T.  Tel-Aviv University and M.I.T.  X  
Pubnum: time(N)1  
Abstract: This paper introduces the use of topological models and methods, formerly used to analyze computability, as tools for the quantification and classification of asynchronous complexity. We present the first asynchronous complexity theorem, applied to decision tasks in a generalization of Borowsky and Gafni's Iterated Immediate Snapshot (IIS) model. We do so by introducing a novel form of span called the non-uniform chromatic subdivision. Building on the framework of Herlihy and Shavit's topological computability model, our theorem states that the time complexity of any asynchronous algorithm is directly proportional to the level of non-uniform chromatic subdivisions necessary to allow a simplicial map from a task's input complex to its output complex. To show the power of our theorem, we use it to derive two new results. The first is a tight upper/lower bound on the time to achieve N process approximate agreement. Our bound of ffi log d where d = 3 for two processes and d = 2 for 3 or more shows that the intriguing gap between the known lower and upper bounds of Aspnes and Herlihy is not a technical coincidence. The second is the first time/number-of-names upper bound tradeoff for the renaming problem: Given N processes, we describe how to solve renaming in time time(N ) using names(N ) names, where Our theorem provides the corresponding protocol directly from the problem's topological representation. Even more than the new bounds themselves, we believe the importance of our asynchronous complexity theorem lies in the fact that the algorithms and lower bounds it allows us to derive are intuitive and simple, with topological proofs that require no mention of concurrency at all. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> James H. Anderson, </author> <title> Composite Registers. </title> <journal> Distributed Computing, </journal> <volume> 6(3), </volume> <pages> pages 141-154, </pages> <month> April </month> <year> 1993. </year>
Reference: [2] <author> M. Moir and J. Anderson. </author> <title> Wait-Free Algorithms for Fast, Long-Lived Renaming, </title> <booktitle> Science of Computer Programming 25, </booktitle> <year> 1995, </year> <pages> pp. 1-39. </pages>
Reference-contexts: Our formula implies a time (N ) = 1 algorithm when names (N ) = N (N + 1)=2. Though optimal in our model, this falls short of the O (N ) bound of Anderson and Moir <ref> [2] </ref> in the Multi-reader Single-writer register model (MRSW) [27], since known implementations of IIS from MRSW take fi (N 2 ) time. <p> This offers a partial explanation for Anderson and Moir's ability to beat all known renaming upper bounds for the case where there are N (N + 1)=2 names <ref> [2] </ref>. However, if we only have 5 names, the readers can convince themselves that one needs to subdivide once more in order to subdivide the 2-simplex so that all subsimplices can be labeled with different names so as to satisfy the task requirement.
Reference: [3] <author> J. Aspnes, M. P. Herlihy, </author> <title> Wait-Free Data Structures in the Asynchronous PRAM Model. </title> <booktitle> Proceedings of the 3rd Annual ACM Symposium on Principles of Distributed Computing, </booktitle> <pages> pages 377-408, </pages> <month> July </month> <year> 1991. </year> <note> Also appeared as technical report. </note>
Reference-contexts: Considering just the complexity of the worst case execution over all input sets would in many cases make a complexity theorem useless, since for example, for the approximate agreement problem Aspnes and Herlihy <ref> [3] </ref> have shown that for any k one can find a set of inputs that will require time k in the worst case. The power of our theorem lies in its ability to allow one to reason about the complexity of problems in a purely topo logical setting. <p> We provide two example applications of our theorem. In Section 6 we show tight upper and lower bounds on the time to achieve N process approximate agreement. The best known results, due to Aspnes and Herlihy <ref> [3] </ref>, imply an O (log 2 N ) upper bound and an (log 3 N ) lower bound computation, which will be specified in Section 2. <p> Extending this reasoning to higher dimensions allows us to derive our upper bound formula. Finally, consider the approximate agreement problem, which we discuss in detail in Section 6. We are able to explain and close the upper/lower bound gap implied by Asp-nes and Herlihy's approximate agreement work <ref> [3] </ref>. Consider process approximate agreement protocol on some given input set. Aspnes and Herlihy derive their lower bound for any N process algorithm from a "bad" execution in which only the two processes with inputs farthest apart participate. <p> Considering just the complexity of the worst case execution over all in-put sets would in many cases make a complexity theorem useless, since for example, for the approximate agreement problem Aspnes and Herlihy <ref> [3] </ref> have shown that for any k one can find a set of inputs that will require time k in the worst case. local_view := input_value; k := 0 forever do if is_final_state (local_view) return ffi (local_view) else with IS k do local_view := writeread (local_view) k := k+1 IIS Model. <p> Aspnes and Herlihy <ref> [3] </ref> proved 5 a lower bound that implies a worst case time complexity of ffi max x i min x i upper bound of ffi max x i min x i . This leaves a small but intriguing gap. <p> The key intuition behind our ability to close the upper/lower gap is depicted in Figure 5, which shows the subdivisions induced by a three process execution on some given 5 Though their proofs are for the read/write register model, they carry onto ours. input. Aspnes and Herlihy <ref> [3] </ref> derive their lower bound for any N process algorithm from a "bad" execution in which only the two processes with inputs farthest apart participate. Such an execution in our model corresponds to a sequence of subdivisions of the edge between p and q.
Reference: [4] <author> Yehuda Afek and Hagit Attiya and Danny Dolev and Eli Gafni and Michael Merritt and Nir Shavit, </author> <title> Atomic Snapshots of Shared Memory. </title> <journal> Journal of the ACM, </journal> <volume> 40(4), </volume> <pages> pages 873-890, </pages> <month> September </month> <year> 1993. </year>
Reference: [5] <author> H. Attiya, A. Bar-Noy, and D. Dolev. </author> <title> Sharing memory robustly in message-passing systems. </title> <booktitle> In Proceedings of the 9th Annual ACM Symposium on Principles of Distributed Computing, </booktitle> <pages> pages 377-408, </pages> <month> August </month> <year> 1990. </year>
Reference: [6] <author> H. Attiya, A. Bar-Noy, D. Dolev, D. Peleg, and R. Reischuk. </author> <title> Renaming in an asynchronous environment. </title> <journal> Journal of the ACM, </journal> <month> July </month> <year> 1990. </year>
Reference-contexts: We close this gap, proving matching upper and lower bounds of j input range * where d = 3 for two processes and d = 2 for 3 or more. Our second result, in Section 7, is the first upper bound result for the N -process renaming problem <ref> [6] </ref> of Attiya et. al that provides a tradeoff between the number of available names and the time complexity. <p> agreement with worst case time complexity ffi jSj on input S where d = 3 for two processes and d = 2 for three or more. fl 7 Renaming In this section we use the asynchronous complexity theorem to analyze the complexity of the renaming task of Attiya et al. <ref> [6] </ref>, in which at most N = n+1 processes are given unique input names taken from a large name space, and must choose unique output names taken from a smaller name space.
Reference: [7] <author> H. Attiya, N. Lynch and N. Shavit, </author> <title> Are Wait-Free Algorithms Fast? In Journal of the ACM, </title> <journal> Vol. </journal> <volume> 41, No. </volume> <month> 4 (July </month> <year> 1994), </year> <pages> pages 725-763. </pages>
Reference: [8] <author> H. Attiya and S. Rajsbaum. </author> <title> A combinatorial topology framework for wait-free computability. </title> <type> Preprint, </type> <year> 1995. </year>
Reference-contexts: In the last few years, techniques of modeling and analysis based on classical algebraic topology <ref> [8, 12, 15, 18, 22, 21, 23, 24, 25, 26, 35] </ref> in conjunction with distributed simulation methods [12, 11, 10, 30] have brought about significant progress in our understanding of computability problems in an asynchronous distributed setting.
Reference: [9] <author> O. Biran, S. Moran, and S. Zaks. </author> <title> A combinatorial characterization of the distributed tasks which are solvable in the presence of one faulty processor. </title> <booktitle> In Proceedings of the 7th Annual ACM Symposium on Principles of Distributed Computing, </booktitle> <pages> pages 263-275, </pages> <month> August </month> <year> 1988. </year>
Reference: [10] <author> E. Borowsky and E. Gafni. </author> <title> Immediate Atomic Snapshots and Fast Renaming. </title> <booktitle> Proceedings of the 12th Annual ACM Symposium on Principles of Distributed Computing, </booktitle> <pages> pages 41-51, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: In the last few years, techniques of modeling and analysis based on classical algebraic topology [8, 12, 15, 18, 22, 21, 23, 24, 25, 26, 35] in conjunction with distributed simulation methods <ref> [12, 11, 10, 30] </ref> have brought about significant progress in our understanding of computability problems in an asynchronous distributed setting. We feel the time is ripe to extend these techniques to address asynchronous complexity. <p> It conforms with the 2N 1 names (N ) lower bound due to Herlihy and Shavit [26] and extends the time (N ) = N upper bound of Borowsky and Gafni <ref> [10] </ref> using 2N 1 names. Table 1 shows several examples of how the time complexity and number of names vary for different values of N based on our formula. We derive the class of algorithms implied by the formula and their proofs in a purely geometric way 1 . <p> Borowsky and Gafni's immediate snapshot object (IS) <ref> [10] </ref> is by now a standard building block for the construction and analysis of asynchronous, distributed shared memory systems. <p> 2 time (N) X i=2 N i names (N ) &lt; N (N + 1) time (N)1 X i=2 where 2N 1 names (N ) N (N + 1)=2 and 1 time (N ) N 1: Similar bounds follow immediately for the AS and MRSW models since Borowsky and Gafni <ref> [10] </ref> show that one can implement IIS in the AS model in fi (n) time and in time fi (n 2 ) in the MRSW model. We now sketch the main idea behind the proof.
Reference: [11] <author> E. Borowsky and E. Gafni. </author> <title> Generalized flp impossibility result for t-resilient asynchronous computations. </title> <booktitle> In Proceedings of the 1993 ACM Symposium on Theory of Computing, </booktitle> <month> May </month> <year> 1993. </year>
Reference-contexts: In the last few years, techniques of modeling and analysis based on classical algebraic topology [8, 12, 15, 18, 22, 21, 23, 24, 25, 26, 35] in conjunction with distributed simulation methods <ref> [12, 11, 10, 30] </ref> have brought about significant progress in our understanding of computability problems in an asynchronous distributed setting. We feel the time is ripe to extend these techniques to address asynchronous complexity.
Reference: [12] <author> E. Borowsky and E. Gafni. </author> <title> A Simple Algorithmically Reasoned Characterization of Wait-free Computations. </title> <booktitle> In Proceedings of the Sixteenth Annual ACM Symosium on Principles of Distributed Computing, </booktitle> <month> August </month> <year> 1997. </year>
Reference-contexts: In the last few years, techniques of modeling and analysis based on classical algebraic topology <ref> [8, 12, 15, 18, 22, 21, 23, 24, 25, 26, 35] </ref> in conjunction with distributed simulation methods [12, 11, 10, 30] have brought about significant progress in our understanding of computability problems in an asynchronous distributed setting. <p> In the last few years, techniques of modeling and analysis based on classical algebraic topology [8, 12, 15, 18, 22, 21, 23, 24, 25, 26, 35] in conjunction with distributed simulation methods <ref> [12, 11, 10, 30] </ref> have brought about significant progress in our understanding of computability problems in an asynchronous distributed setting. We feel the time is ripe to extend these techniques to address asynchronous complexity. <p> This paper studies the class of problems called decision tasks, input/output problems in which N asynchronous processes start with input values, communicate via shared memory and halt with private output values. We focus on a generalized version of Borosky and Gafni's Iterated Immediate Snapshot (IIS) model <ref> [12] </ref>, called the Non-uniform Iterated Immediate Snapshot (NIIS) Model. The IIS model has already been successfully used by Borowsky and Gafni [12] as part of their new simplified proof of the asynchronous computability theorem [26]. <p> We focus on a generalized version of Borosky and Gafni's Iterated Immediate Snapshot (IIS) model <ref> [12] </ref>, called the Non-uniform Iterated Immediate Snapshot (NIIS) Model. The IIS model has already been successfully used by Borowsky and Gafni [12] as part of their new simplified proof of the asynchronous computability theorem [26]. The model is a restriction of atomic snapshot memory that guarantees that processes' scan operations return views that contain non-decreasing sets of the participating processes' inputs. <p> The theorem also immediately provides a matching upper bound given the subdivision and mapping. The non-uniform chromatic subdivisions we introduce (See Figure 1 for examples) are a looser and more general form of standard chromatic subdivisions [26]. Unlike the iterated standard chromatic subdivisions used in the computability work of <ref> [26, 12] </ref>, they allow individual simplices in a complex to be subdivided a different number of times, while assuring that the subdivision of the complex as a whole remains consistent. <p> This guarantees that processes' writeread operations return views that contain non-decreasing sets of the participating processes' inputs. The iterated IS (IIS) model was recently formulated as a computation model by Borowsky and Gafni <ref> [12] </ref>. We note that the iterated use of immediate snapshots and their topological formulation as standard chromatic subdivisions were introduced by Herlihy and Shavit in their upper bound proof [25, 26]. The IIS model assumes an infinite sequence IS 0 ,IS 1 ,IS 2 : : : of IS objects. <p> Each participating process passes through exactly k IS objects in sequence, for some integer k, and then applies a task-specific decision map ffi to the output returned from the last IS object. We generalize the IIS model used by Borowsky and Gafni and Herlihy and Shavit <ref> [12, 26] </ref> by introducing the nonuniform IIS (NIIS) model. Unlike the standard IIS model, which has the property that each participating process i accesses the same number of IS objects in every execution of a given protocol, the NIIS model is a reactive model of computation.
Reference: [13] <author> E. Borowsky and E. Gafni. </author> <title> The set consensus hierarchy. </title> <type> Unpublished manuscript, </type> <month> November </month> <year> 1993. </year>
Reference: [14] <author> S. Chaudhuri. </author> <title> Agreement is harder than consensus: set consensus problems in totally asynchronous systems. </title> <booktitle> In Proceedings of the Ninth Annual ACM Symosium on Principles of Distributed Computing. </booktitle>
Reference: [15] <author> S. Chaudhuri, M.P. Herlihy, N. Lynch, and M. Tuttle. </author> <title> Tight Bounds for k-Set Agreement. </title> <booktitle> In Proceedings of the 33rd ACM Symposium on Foundations of Computer Science, </booktitle> <month> Oc-tober </month> <year> 1993. </year>
Reference-contexts: In the last few years, techniques of modeling and analysis based on classical algebraic topology <ref> [8, 12, 15, 18, 22, 21, 23, 24, 25, 26, 35] </ref> in conjunction with distributed simulation methods [12, 11, 10, 30] have brought about significant progress in our understanding of computability problems in an asynchronous distributed setting.
Reference: [16] <author> A. Fekete. </author> <title> Asymptotically optimal algorithms for approximate agreement. </title> <booktitle> In Proceedings of the 5th Annual ACM Symposium on Principles of Distributed Computing, </booktitle> <month> August </month> <year> 1986. </year>
Reference: [17] <author> M. Fischer, N.A. Lynch, </author> <title> and M.S. Paterson. Impossibility of Distributed Commit with one faulty process. </title> <journal> Journal of the ACM,32(2), </journal> <month> April </month> <year> 1985. </year>
Reference: [18] <author> E. Gafni and E. Koutsoupias. </author> <title> 3-processor tasks are undecidable. PODC 95, Brief announcement, </title> <note> page 271. </note>
Reference-contexts: In the last few years, techniques of modeling and analysis based on classical algebraic topology <ref> [8, 12, 15, 18, 22, 21, 23, 24, 25, 26, 35] </ref> in conjunction with distributed simulation methods [12, 11, 10, 30] have brought about significant progress in our understanding of computability problems in an asynchronous distributed setting.
Reference: [19] <author> R. Gawlick, </author> <title> Bounded Concurrent Time-Stamping Made Simple. </title> <type> Technical Report, </type> <institution> Laboratory for Computer Science, Massachusetts Institute of Technology, </institution> <address> Cambridge, MA 02139, MIT/LCS/TR-556, </address> <month> October </month> <year> 1992. </year>
Reference: [20] <author> M. P. Herlihy. </author> <title> Wait-Free Synchronization. </title> <journal> ACM Transactions on Programming Languages and systems, Vol.. </journal> <volume> 11, No.1, </volume> <month> Jan </month> <year> 1991, </year> <pages> Pages 124-129. </pages>
Reference: [21] <author> M. Herlihy and S. Rajsbaum. </author> <title> Algebraic spans. </title> <booktitle> Proceedings of the 14th Annual ACM Symposium on Principles of Distributed Computing, </booktitle> <pages> pages 90-99, </pages> <month> August </month> <year> 1995. </year>
Reference-contexts: In the last few years, techniques of modeling and analysis based on classical algebraic topology <ref> [8, 12, 15, 18, 22, 21, 23, 24, 25, 26, 35] </ref> in conjunction with distributed simulation methods [12, 11, 10, 30] have brought about significant progress in our understanding of computability problems in an asynchronous distributed setting.
Reference: [22] <author> M. P. Herlihy and S. Rajsbaum. </author> <title> Set Consensus Using Arbitrary Objects. </title> <booktitle> In Proceedings of the 12th Annual ACM Symposium on Principles of Distributed Systems, </booktitle> <month> August </month> <year> 1994, </year> <institution> Los Angeles. </institution>
Reference-contexts: In the last few years, techniques of modeling and analysis based on classical algebraic topology <ref> [8, 12, 15, 18, 22, 21, 23, 24, 25, 26, 35] </ref> in conjunction with distributed simulation methods [12, 11, 10, 30] have brought about significant progress in our understanding of computability problems in an asynchronous distributed setting.
Reference: [23] <author> M.P. Herlihy and S. Rajsbaum. </author> <title> On the Decidability of Distributed Decision Problems, </title> <note> To appear in STOC'97. </note>
Reference-contexts: In the last few years, techniques of modeling and analysis based on classical algebraic topology <ref> [8, 12, 15, 18, 22, 21, 23, 24, 25, 26, 35] </ref> in conjunction with distributed simulation methods [12, 11, 10, 30] have brought about significant progress in our understanding of computability problems in an asynchronous distributed setting.
Reference: [24] <author> M.P. Herlihy and N. Shavit. </author> <title> The asynchronous computability theorem for t-resilient tasks. </title> <booktitle> In Proceedings of the 1993 ACM Symposium on Theory of Computing, </booktitle> <pages> Pages 111-120, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: In the last few years, techniques of modeling and analysis based on classical algebraic topology <ref> [8, 12, 15, 18, 22, 21, 23, 24, 25, 26, 35] </ref> in conjunction with distributed simulation methods [12, 11, 10, 30] have brought about significant progress in our understanding of computability problems in an asynchronous distributed setting. <p> This definition is extended to complexes in the natural way, by starring all possible pairs of simplices. 4 The Non-Uniform Chromatic Subdivision The standard chromatic subdivision was introduced by Her-lihy and Shavit <ref> [24, 25] </ref>, and has since been used by a number of researchers. It is essentially a chromatic generalization of the standard barycentric subdivision from classical topology. For the sake of simplicity in this abstract we present here an informal definition.
Reference: [25] <author> M. P. Herlihy and N. Shavit. </author> <title> A Simple Constructive Computability Theorem for Wait-free Computation. </title> <booktitle> In Proceedings of the 26th Annual Symposium on Theory of Computing, </booktitle> <pages> Pages 243-252, </pages> <month> May 23-25, </month> <year> 1994. </year>
Reference-contexts: In the last few years, techniques of modeling and analysis based on classical algebraic topology <ref> [8, 12, 15, 18, 22, 21, 23, 24, 25, 26, 35] </ref> in conjunction with distributed simulation methods [12, 11, 10, 30] have brought about significant progress in our understanding of computability problems in an asynchronous distributed setting. <p> The iterated IS (IIS) model was recently formulated as a computation model by Borowsky and Gafni [12]. We note that the iterated use of immediate snapshots and their topological formulation as standard chromatic subdivisions were introduced by Herlihy and Shavit in their upper bound proof <ref> [25, 26] </ref>. The IIS model assumes an infinite sequence IS 0 ,IS 1 ,IS 2 : : : of IS objects. In any execution ff of a full-information protocol in this model, each participating process i starts by applying its input value v i to the first IS object. <p> This definition is extended to complexes in the natural way, by starring all possible pairs of simplices. 4 The Non-Uniform Chromatic Subdivision The standard chromatic subdivision was introduced by Her-lihy and Shavit <ref> [24, 25] </ref>, and has since been used by a number of researchers. It is essentially a chromatic generalization of the standard barycentric subdivision from classical topology. For the sake of simplicity in this abstract we present here an informal definition.
Reference: [26] <author> M. P. Herlihy and N. Shavit. </author> <title> The Topological Structure of Asynchronous Computability. </title> <type> Technical Report, </type> <note> Submitted for Journal publication, </note> <institution> Brown University, </institution> <year> 1995. </year>
Reference-contexts: In the last few years, techniques of modeling and analysis based on classical algebraic topology <ref> [8, 12, 15, 18, 22, 21, 23, 24, 25, 26, 35] </ref> in conjunction with distributed simulation methods [12, 11, 10, 30] have brought about significant progress in our understanding of computability problems in an asynchronous distributed setting. <p> We focus on a generalized version of Borosky and Gafni's Iterated Immediate Snapshot (IIS) model [12], called the Non-uniform Iterated Immediate Snapshot (NIIS) Model. The IIS model has already been successfully used by Borowsky and Gafni [12] as part of their new simplified proof of the asynchronous computability theorem <ref> [26] </ref>. The model is a restriction of atomic snapshot memory that guarantees that processes' scan operations return views that contain non-decreasing sets of the participating processes' inputs. <p> We believe it is a good first candidate for topological modeling since it has a particularly nice geometric representation, and hence easily lends itself to topological analysis. Keeping in style with Herlihy and Shavit's topological computability framework <ref> [26] </ref>, our theorem states that the worst case time complexity for solving a decision task in the NIIS model is equivalent to the minimal number of nonuniform chromatic subdivisions of the input complex necessary to allow a simplicial map from the input complex to the output complex. <p> The theorem also immediately provides a matching upper bound given the subdivision and mapping. The non-uniform chromatic subdivisions we introduce (See Figure 1 for examples) are a looser and more general form of standard chromatic subdivisions <ref> [26] </ref>. Unlike the iterated standard chromatic subdivisions used in the computability work of [26, 12], they allow individual simplices in a complex to be subdivided a different number of times, while assuring that the subdivision of the complex as a whole remains consistent. <p> The theorem also immediately provides a matching upper bound given the subdivision and mapping. The non-uniform chromatic subdivisions we introduce (See Figure 1 for examples) are a looser and more general form of standard chromatic subdivisions [26]. Unlike the iterated standard chromatic subdivisions used in the computability work of <ref> [26, 12] </ref>, they allow individual simplices in a complex to be subdivided a different number of times, while assuring that the subdivision of the complex as a whole remains consistent. <p> It conforms with the 2N 1 names (N ) lower bound due to Herlihy and Shavit <ref> [26] </ref> and extends the time (N ) = N upper bound of Borowsky and Gafni [10] using 2N 1 names. Table 1 shows several examples of how the time complexity and number of names vary for different values of N based on our formula. <p> The iterated IS (IIS) model was recently formulated as a computation model by Borowsky and Gafni [12]. We note that the iterated use of immediate snapshots and their topological formulation as standard chromatic subdivisions were introduced by Herlihy and Shavit in their upper bound proof <ref> [25, 26] </ref>. The IIS model assumes an infinite sequence IS 0 ,IS 1 ,IS 2 : : : of IS objects. In any execution ff of a full-information protocol in this model, each participating process i starts by applying its input value v i to the first IS object. <p> Each participating process passes through exactly k IS objects in sequence, for some integer k, and then applies a task-specific decision map ffi to the output returned from the last IS object. We generalize the IIS model used by Borowsky and Gafni and Herlihy and Shavit <ref> [12, 26] </ref> by introducing the nonuniform IIS (NIIS) model. Unlike the standard IIS model, which has the property that each participating process i accesses the same number of IS objects in every execution of a given protocol, the NIIS model is a reactive model of computation. <p> Keeping in style with Herlihy and Shavit <ref> [26] </ref>, the theorem states that solvability of a decision task hI n ; O n ; i in the NIIS model is equivalent to the existence of a color and carrier preserving simplicial map from some non-uniform chromatic subdivision e X k (I n ) to O n that agrees with <p> Now, if time (4) = 2, we cannot remove any additional names from the 2-simplexes on the face of the subdivision. This is because 5 names is the lower bound (see <ref> [26] </ref>). We can however eliminate one additional name from the center 3-simplex, by, instead of subdividing a 1-simplex on its face, subdividing a 2-simplex and labeling all its original vertexes with the same name.
Reference: [27] <author> L. Lamport, </author> <title> On interprocess communication, Part II: Algorithms. </title> <booktitle> Distributed Computing (1)2, </booktitle> <pages> pages 86-101, </pages> <month> April </month> <year> 1986. </year>
Reference-contexts: Our formula implies a time (N ) = 1 algorithm when names (N ) = N (N + 1)=2. Though optimal in our model, this falls short of the O (N ) bound of Anderson and Moir [2] in the Multi-reader Single-writer register model (MRSW) <ref> [27] </ref>, since known implementations of IIS from MRSW take fi (N 2 ) time.
Reference: [28] <author> Nancy A. Lynch, </author> <title> Distributed Algorithms. </title> <publisher> Morgan Kauf-mann, </publisher> <address> San Mateo, California, </address> <year> 1996. </year>
Reference: [29] <author> N.A. Lynch And M.R. Tuttle. </author> <title> An Introduction To Input/Output Automata. </title> <institution> MIT/LCS/TM-373, MIT Laboratory For Computer Science, </institution> <month> Nov </month> <year> 1988. </year>
Reference: [30] <author> Nancy Lynch and Sergio Rajsbaum. </author> <title> On the Borowsky-Gafni simulation algorithm. </title> <booktitle> In Proceedings of the Fourth ISTCS Israel Symposium on Theory of Computing and Systems, </booktitle> <pages> pages 4-15, </pages> <address> Jerusalem, Israel, June 1996. </address> <publisher> IEEE Computer Society. </publisher>
Reference-contexts: In the last few years, techniques of modeling and analysis based on classical algebraic topology [8, 12, 15, 18, 22, 21, 23, 24, 25, 26, 35] in conjunction with distributed simulation methods <ref> [12, 11, 10, 30] </ref> have brought about significant progress in our understanding of computability problems in an asynchronous distributed setting. We feel the time is ripe to extend these techniques to address asynchronous complexity.
Reference: [31] <author> J.R. Munkres. </author> <title> Elements of Algebraic Topology. </title> <publisher> Addison-Wesley, </publisher> <address> Cambridge, </address> <year> 1996. </year>
Reference-contexts: These definitions are fairly standard, and are mainly taken from popular textbooks on algebraic topology <ref> [31, 36] </ref>. Definition 3.1 Let f~v 0 ; : : : ; ~v n g be a geometrically independent set of vertices in R N .
Reference: [32] <author> G. Neiger. Set-Linearizability. </author> <booktitle> In Proceedings of the 13th Annual ACM Symposium on Principles of Distributed Computing, </booktitle> <pages> page 396, </pages> <month> August </month> <year> 1994. </year>
Reference-contexts: In particular, for 0 i n, the operation writeread (v) i writes a value to the i-th cell of the IS object, and subsequently returns a snapshot of the array. Any IS object is set-linearizable <ref> [32] </ref>. This implies that each execution can be linearized such that the invocations of concurrent writeread operations occur before the corresponding responses. As a consequence, concurrent writeread operations return identical snapshots of shared memory.
Reference: [33] <author> Paul M. B. Vitanyi and Baruch Awerbuch, </author> <title> Atomic Shared Register Access by Asynchronous Hardware. </title> <booktitle> 27th Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 233-243, </pages> <address> Toronto, Ontario, Canada October 1986. </address>
Reference: [34] <author> E. Schenk, </author> <title> Computability and Complexity Results for Agreement Problems in Shared Memory Distributed Systems. </title> <type> Doctoral Thesis, </type> <institution> Department of Computer Science, University of Toronto, Canada, </institution> <month> September, </month> <year> 1996. </year>
Reference: [35] <author> M. Saks and F. Zaharoglou. </author> <title> Wait-free k-set agreement is impossible: The topology of public knowledge. </title> <booktitle> In Proceedings of the 1993 ACM Symposium on Theory of Computing, </booktitle> <month> May </month> <year> 1993. </year>
Reference-contexts: In the last few years, techniques of modeling and analysis based on classical algebraic topology <ref> [8, 12, 15, 18, 22, 21, 23, 24, 25, 26, 35] </ref> in conjunction with distributed simulation methods [12, 11, 10, 30] have brought about significant progress in our understanding of computability problems in an asynchronous distributed setting.
Reference: [36] <author> E.H. Spanier. </author> <title> Algebraic Topology. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1966. </year>
Reference-contexts: These definitions are fairly standard, and are mainly taken from popular textbooks on algebraic topology <ref> [31, 36] </ref>. Definition 3.1 Let f~v 0 ; : : : ; ~v n g be a geometrically independent set of vertices in R N .
References-found: 36

