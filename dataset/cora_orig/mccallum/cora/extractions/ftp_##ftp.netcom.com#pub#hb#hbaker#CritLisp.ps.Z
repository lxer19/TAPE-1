URL: ftp://ftp.netcom.com/pub/hb/hbaker/CritLisp.ps.Z
Refering-URL: ftp://ftp.netcom.com/pub/hb/hbaker/home.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Phone: (818) 501-4956(818) 986-1360 (FAX)  
Title: Critique of DIN Kernel Lisp Definition Version 1.2  
Author: Henry G. Baker 
Address: 1 16231 Meadow Ridge Way, Encino, CA 91436  
Affiliation: Nimble Computer Corporation,  
Date: 4,4 (March 1992),371-398.  
Note: Lisp and Symbolic Computation  1 I n t r o d u c t i o n  
Abstract: A critique of DIN Kernel Lisp is presented which argues for greater emphasis on implementation efficiency and language cleanliness, and a greater emphasis on parallel and persistent Lisp environments. Specific recommendations include standardizing the Sexpression rather than the character form of a program, using lexical scoping and shadowing to enhance subsystem modularity, relying on macros and compiler-macros for more pleasant syntax and greater modularity, requiring immutable/functional bindings, strings, vectors and lists; using object-oriented capabilities to build basic capabilitiese.g., generic arithmetic, streams and pathnames, relying on defstruct instead of defclass, and standardizing on defmethod for all function definitions. A virtual/synthetic class mechanism is presented to solve certain technical problems analogous to those solved by the "virtual function" mechanism of C++. Finally, we recommend the inclusion of futures as DKLisp's fundamental mechanism for the introduction of multiple parallel threads of computation. The last ten years have seen both a boom and and bust for the Lisp language. From its inception in 1958 until its commercialization in 1980, Lisp was content to live a life of academic obscurity, servicing the needs of Artificial Intelligence, theorem proving and symbolic algebra researchers. In this role, Lisp could explore many new ideas and quickly absorb new ideas from the programming language "mainstream". However, when AI became a business, Lisp was drawn to the money like a moth to the flame. Lisp quickly sought to become "industrial strength", and ANSI Common Lisp was the result. Unfortunately, "industrial" quickly became "rust belt", as the newly standardized Common Lisp could not quickly grow and adapt to the new, more "open" environment. In Lisp's quest for industrial respect, it abandoned its traditional customers. Symbolic algebra developers (e.g., Maple, Mathematica) forsook Lisp for the more portable and efficient C. Logicians gave up Lisp for Prolog and ML. Vision researchers, seeking the highest performance from parallel computers, dropped Lisp in favor of C, Fortran (!) and various fringe parallel languages. AI companies were forced to move their expert systems into C, C++, Ada and Cobol (!) because of the large size, poor performance and poor integration of Common Lisp systems. Academicians teaching undergraduates chose Scheme and ML for their small size, portability and clean semantics. Lisp now commands a smaller market share of the overall computer software field than it did ten years ago, before the rapid rise of commercial Lisp! If the current standardization effort is to avoid "rearranging the deck chairs on the Titanic", ISO/DIN must develop a brand new language which addresses the deficiencies in Common Lisp, particularly those which have driven most of its traditional customers away. Its goal of backwards compatibility is not reasonable, since existing Common Lisp programs are unlikely to be converted to DKLisp, and backwards compatibility loads Lisp down with too much useless baggage. The goal of standardizing only noncontroversial capabilities is also not reasonable, since the only reason why controversy surrounds certain capabilities is that people need them desparately! All progress is a process of creative destruction, wherein the hardest, but most important, decisions involve what must be pruned in order to free up 
Abstract-found: 1
Intro-found: 1
Reference: <author> Ada83. </author> <title> Reference Manual for the Ada Programming Language. ANSI/MIL-STD-1815A-1983, </title> <type> U.S. </type> <institution> Gov't Printing Office, </institution> <address> Wash., DC, </address> <year> 1983. </year>
Reference: <editor> Allen, D.C., et al. </editor> <booktitle> "Recent Developments in Butterfly Lisp". AAAI-87, </booktitle> <address> Seattle, WA, </address> <month> July, </month> <year> 1987, </year> <pages> 2-6. </pages> <month> ANSI-C. </month> <title> Draft Proposed American National Standard Programming Language C. ANSI, </title> <address> New York, </address> <year> 1988. </year>
Reference: <author> Arvind, and Nikhil, </author> <title> R.S. "I-Structures: Data Structures for Parallel Computing". </title> <journal> ACM TOPLAS 11,4 (Oct.1989), </journal> <pages> 598-632. </pages> <month> Autodesk, </month> <title> Inc. "AutoLISP Release 10 Programmer's Reference". </title> <publisher> Publ. </publisher> <address> TD111-005.2, </address> <month> Dec. </month> <year> 1988. </year>
Reference: <author> Backus, J. </author> <title> "Can programming be liberated from the von Neumann style? A functional style and its algebra of programs". </title> <journal> CACM 21,8 (Aug.1978),613-641. </journal>
Reference: <author> Baker, H.G., and Hewitt, C. </author> <title> "The Incremental Garbage Collection of Processes". </title> <booktitle> Proc. ACM Symp. on AI & Prog. Langs., Sigplan Not. </booktitle> <address> 12,8 (Aug.1977),55-59. </address>
Reference: <author> Baker, H.G. </author> <title> "List Processing in Real Time on a Serial Computer". </title> <journal> CACM 21,4 (April1978), </journal> <pages> 280-294. </pages>
Reference: <author> Baker, H.G. </author> <title> "Efficient Implementation of Bit-vector Operations in Common Lisp". </title> <journal> ACM Lisp Pointers 3,2-4 (April-June1990),8-22. </journal>
Reference: <author> Baker, H.G. </author> <title> "The NIMBLE Project-An Applications Compiler for Real-Time Common Lisp". </title> <booktitle> Proc. InfoJapan'90 Conf., </booktitle> <address> Tokyo, Japan, Oct.1990, </address> <booktitle> Info. Proc. </booktitle> <institution> Soc. of Japan. </institution>
Reference: <author> Baker, H.G. </author> <title> "The Nimble Type Inferencer for Common Lisp-84". </title> <journal> Subm. to ACM TOPLAS, </journal> <year> 1990. </year>
Reference: <author> Baker, H.G. </author> <title> "Unify and Conquer (Garbage, Updating, Aliasing, </title> ...) <booktitle> in Functional Languages". Proc. 1990 ACM Conf. on Lisp and Functional Progr., </booktitle> <address> June1990,218-226. </address>
Reference: <author> Baker, H.G. </author> <title> "Requiem for a Heavyweight Lisp; or, If It Ain't Baroque, Fix It". Unpubl. </title> <type> manuscript, </type> <month> June </month> <year> 1990. </year>
Reference: <author> Baker, H.G. </author> <title> "Equal Rights for Functional Objects". </title> <journal> ACM OOPS Messenger 4,4 (Oct.1993), </journal> <pages> 2-27. </pages>
Reference: <author> Baker, H.G. </author> <title> "Pragmatic Parsing in Common Lisp". </title> <journal> ACM Lisp Pointers IV,2 (April-June1991),3-15. </journal>
Reference: <author> Baker, H.G. </author> <title> "Structured Programming with Limited Private Types in Ada: Nesting is for the Soaring Eagles". </title> <journal> ACM Ada Letters XI,5 (July/Aug.1991),79-90. </journal>
Reference: <author> Baker, H.G. </author> <title> "Shallow Binding Makes Functional Arrays Fast". </title> <journal> ACM Sigplan Not. 26,8 (Aug.1991),145-147. </journal>
Reference: <author> Baker, H.G. </author> <title> "Object-Oriented Programming in Ada83Genericity Rehabilitated". </title> <journal> ACM Ada Letters XI,9 (Nov/Dec.1991),116-127. </journal>
Reference: <author> Baker, H.G. "CLOStrophobia: </author> <title> Its Etiology and Treatment". </title> <journal> ACM OOPS Messenger 2,4 (Oct.1991), </journal> <pages> 4-15. </pages>
Reference: <author> Baker, H.G. </author> <title> "CONS Should not CONS its Arguments, or, A Lazy Alloc is a Smart Alloc". </title> <journal> ACM Sigplan Not. 27,3 (Mar.1992), </journal> <pages> 24-34. </pages>
Reference: <author> Baker, H.G. </author> <title> "A Decision Procedure for Common Lisp's SUBTYPEP Predicate". </title> <journal> Lisp & Symb. Comp. </journal> <volume> 5 (1992), </volume> <pages> 157-190. </pages>
Reference: <author> Baker, H.G. </author> <title> "Lively Linear Lisp'Look Ma, No Garbage!'". </title> <journal> ACM Sigplan Not. 27,8 (Aug.1992), </journal> <pages> 89-98. </pages>
Reference: <author> Bobrow, D.G., and Kiczales, G. </author> <title> "The Common Lisp Object System Metaobject Kernel: A Status Report". </title> <booktitle> Proc. 1988 ACM Conf. on Lisp & Funct. </booktitle> <address> Progr., Snowbird, UT, </address> <publisher> July1988, </publisher> <pages> 309-315. </pages>
Reference: <author> Brand, Heiner, et al. </author> <title> "An approach to the DIN Kernel Lisp Definition, </title> <note> Version 1.0". Subm. to SIO WG16, </note> <month> June, </month> <year> 1991. </year>
Reference: <author> Clark, D.W., and Green, </author> <title> C.C. "An Empirical Study of List Structure in LISP". </title> <journal> CACM 20,2 (Feb.1977),78-87. </journal>
Reference: <author> Clinger, William D. </author> <title> "How to Read Floating Point Numbers Accurately". </title> <journal> ACM PLDI'90, Sigplan Not. 25,6 (June1990),92-101. </journal>
Reference: <author> Cointe, Pierre. </author> <title> "Metaclasses are First Class: the ObjVlisp Model". </title> <journal> Proc. OOPSLA'87, Sigplan Not. 22,12 (Dec.1987),156-167. Lisp and Symbolic Computation 4,4 (March 1992),371-398. </journal> <note> 18 Cyphers, D.S., </note> <author> and Moon, D. </author> <title> "Optimizations in the Symbolics CLOS Implementation". </title> <booktitle> Proc. 3rd CLOS Users and Implementors Workshop, </booktitle> <address> OOPSLA'90 (Oct.1990),18-23. </address> <note> des Rivires, </note> <author> J., and Kiczales, G. </author> <title> "The Art of the Metaobject Protocol: A backstage look at CLOS implementations". </title>
Reference: <author> Unpubl. man., </author> <note> Xerox PARC, </note> <month> Oct. 15, </month> <year> 1990, </year> <month> 203p. </month>
Reference: <author> Gabriel, R.P., and McCarthy, J. </author> <booktitle> "Queue-Based MultiProcessing Lisp". Proc. 1984 ACM Symp. on Lisp & Funct. Prog., </booktitle> <address> (Aug.1984),25-44. </address>
Reference: <author> Gabriel, </author> <title> R.P. Performance and Evaluation of Lisp Systems. </title> <publisher> MIT Press, Camb., </publisher> <address> MA, </address> <year> 1985. </year>
Reference: <author> Gabriel, </author> <title> R.P. "Lisp: Good News, Bad News, How to Win Big". Unpublished memo, Lucid, </title> <publisher> Inc., </publisher> <month> Feb. </month> <year> 1991. </year>
Reference: <author> Goldberg, A., and Robson, D. </author> <title> Smalltalk-80: The Language and Its Implementation. </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1983. </year>
Reference: <author> Halstead, R. </author> <title> "MultiLisp: A language for concurrent symbolic processing". </title> <journal> ACM TOPLAS 7,4 (Oct.1985),501-538. </journal>
Reference: <author> Harper, R., et al. </author> <title> "Standard ML". </title> <type> Tech. </type> <institution> Rept. ECS-LFCS-86-2, Comp. Sci. Dept., Edinburgh, UK, </institution> <month> March, </month> <year> 1986. </year> <title> IEEE-Scheme. IEEE Standard for the Scheme Programming Language. </title> <publisher> IEEE-1178-1990, IEEE, </publisher> <address> NY, </address> <month> Dec. </month> <year> 1990. </year>
Reference: <author> Ito, T., and Halstead, R.H.Jr. </author> <title> Parallel Lisp: Languages and Systems. </title> <publisher> Springer LNCS-441, </publisher> <year> 1990. </year>
Reference: <author> Katz, M., and Weise, D. </author> <title> "Continuing into the Future: On the Interaction of Futures and First-Class Continuations". </title> <booktitle> Proc. 1990 ACM Conf. on Lisp and Funct. </booktitle> <address> Progr., Nice, France, </address> <month> June </month> <year> 1990, </year> <pages> 176-184. </pages>
Reference: <author> Keene, </author> <title> S.E. ObjectOriented Programming in Common Lisp. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1989. </year>
Reference: <editor> Kim, W., and Lochovsky, F.H., eds. </editor> <booktitle> ObjectOriented Concepts, Databases and Applications. </booktitle> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1989. </year>
Reference: <author> Knight, T. </author> <title> "An Architecture for Mostly Functional Languages". </title> <booktitle> Proc. 1986 ACM Conf. on Lisp and Funct. Prog., (Aug.1986), </booktitle> <pages> 105-112. </pages>
Reference: <author> Kohlbecker, Eugene E., Jr. </author> <title> Syntactic Extensions in the Programming Language Lisp. </title> <type> Ph.D. Thesis, </type> <institution> TR-199, CS Dept., Indiana Univ., </institution> <month> Aug. </month> <year> 1986. </year>
Reference: <author> Lieberman, H., and Hewitt, C. </author> <title> "A Real-Time Garbage Collector Based on the Lifetimes of Objects". </title> <journal> CACM 26, </journal> <volume> 6 (June1983),419-429. </volume>
Reference: <author> MacLane, Saunders, and Birkhoff, Garrett. </author> <title> Algebra. </title> <publisher> Macmillan, </publisher> <year> 1967. </year>
Reference: <author> MacLennan, B.J. </author> <title> "Values and Objects in Programming Languages". Sigplan Not. </title> <publisher> 17,12 (Dec.1982),70-79. </publisher>
Reference: <author> McAllester, D., and Zabih, R. </author> <title> "Boolean Classes". </title> <booktitle> Proc. OOPSLA'86, Sigplan Not. </booktitle> <address> 21,11 (Nov.1986),417-423. </address>
Reference: <author> Moon, D. </author> <title> MacLisp Reference Manual, </title> <journal> Rev. </journal> <volume> 0. </volume> <editor> Proj. MAC, </editor> <publisher> MIT, </publisher> <month> April </month> <year> 1974. </year>
Reference: <author> Moon, D. </author> <title> "Garbage Collection in a Large Lisp System". </title> <booktitle> ACM Symp. on Lisp and Functional Prog., </booktitle> <address> Austin, TX, </address> <year> 1984, </year> <pages> 235-246. </pages>
Reference: <author> Novak, G.S.Jr. </author> <title> "Data Abstraction in GLISP". </title> <booktitle> Proc. SIGPLAN'83, Sigplan Not. </booktitle> <address> 18,6 (June1983),170-177. </address>
Reference: <author> Queinnec, C., and Cointe, P. </author> <title> "An Open-Ended Data Representation Model for Eu_Lisp". </title> <booktitle> Proc. 1988 ACM Lisp & Funct. Progr. Conf., </booktitle> <address> Snowbird, UT, </address> <year> 1988, </year> <pages> 298-308. </pages>
Reference: <author> Radin, George. </author> <title> "The Early History and Characteristics of PL/I". </title> <booktitle> ACM Sigplan History of Prog. Langs. Conf., Sigplan Not. </booktitle> <address> 13,8 (Aug.1978),227-241. </address>
Reference: <editor> Rees, J. and Clinger, W., et al. </editor> <title> "Revised Report on the Algorithmic Language Scheme". </title> <journal> Sigplan Notices 21,12 (Dec.1986),37-79. </journal>
Reference: <author> Steele, G.L.Jr. </author> <title> Common Lisp, the Language. </title> <publisher> Digital Press, </publisher> <address> Burlington, MA, </address> <year> 1984. </year>
Reference: <author> Steele, G.L.Jr. </author> <title> Common Lisp, the Language: Second Edition. </title> <publisher> Digital Press, </publisher> <address> Bedford, MA, </address> <year> 1990. </year>
Reference: <author> Steele, G.L.Jr., and White, J.L. </author> <title> "How to Print Floating-Point Numbers Accurately". </title> <journal> ACM PLDI'90, Sigplan Not. </journal> <note> 25,6 (June1990), 112-126. </note> <author> Stroustrup, Bjarne. </author> <title> The C++ Programming Language. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1986. </year>
Reference: <author> Swanson, </author> <title> M.R., </title> <editor> et al. </editor> <title> "An Implementation of Portable Standard Lisp on the BBN Butterfly". </title> <booktitle> Proc. 1988 ACM Conf. on Lisp and Funct. </booktitle> <address> Progr., Snowbird, UT, </address> <month> July </month> <year> 1988, </year> <pages> 132-141. </pages>
Reference: <author> Swinehart, D., et al. </author> <title> "A Structural View of the Cedar Programming Environment". </title> <journal> ACM TOPLAS 8, </journal> <volume> 4 (Oct.1986),419-490. </volume>
Reference: <author> Taft, Tucker, et al. </author> <title> [Ada-9X] DRAFT Mapping Document. </title> <address> Ada-9X Proj. Rept., </address> <month> Feb. </month> <year> 1991. </year>
Reference: <author> Taft, Tucker, et al. </author> <title> [Ada-9X] DRAFT Mapping Rationale Document. </title> <address> Ada-9X Proj. Rept., </address> <month> Feb. </month> <year> 1991. </year>
Reference: <author> Wand, M. </author> <title> "A Semantic Prototyping System". </title> <booktitle> Proc. ACM Sigplan '84 Symp. on Compiler Constr., Sigplan Not. </booktitle> <address> 19,6 (June1984),213-221. </address>
Reference: <author> Yuasa, T., and Hagiya, M. </author> <title> Kyoto Common Lisp Report. </title> <institution> Research Inst. for Math. Sci., </institution> <address> Kyoto U., </address> <year> 1985. </year>
References-found: 57

