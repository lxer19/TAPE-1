URL: http://www.cs.ucla.edu/~limsk/papers/iccad98.ps.gz
Refering-URL: http://www.cs.ucla.edu/~limsk/
Root-URL: http://www.cs.ucla.edu
Email: fcong,limskg@cs.ucla.edu  
Title: Multiway Partitioning with Pairwise Movement  
Author: Jason Cong and Sung Kyu Lim 
Address: Los Angeles, CA 90095  
Affiliation: UCLA Department of Computer Science,  
Abstract: It is known to many researchers in the partitioning community that the recursive bipartitioning approach outperforms the direct non-recursive approach in solving the mul-tiway partitioning problem. However, little progress has been made to identify and overcome the weakness of the direct (alternatively called flat) approach. In this paper, we make the first observation that the performance of iterative improvement-based flat multiway partitioner K-FM [10, 11] is not suitable for today's large scale circuits. Then, we propose a simple yet effective hill-climbing method called PM (Pairwise cell Movement) that overcomes the limitation of K-FM and provides partitioners the capability to explore wider range of solution space effectively while ensuring convergence to satisfying suboptimal solutions. The main idea is to reduce the multiway partitioning problem to sets of concurrent bipartitioning problems. Starting with an initial multiway partition of the netlist, we apply 2-way FM [7] to pairs of blocks so as to improve the quality of overall mul-tiway partitioning solution. The pairing of blocks is based on the gain of the last pass, and the Pairwise cell Movement (PM) passes continue until no further gain can be obtained. We observe that PM passes are effective in distributing clusters evenly into multiple blocks to minimize the connections across the multiway cutlines. Our iterative improvement-based flat multiway partitioner K-PM/LR improves K-FM by a surprising average margin of up to 86.2% and outperforms its counterpart recursive FM by up to 17.3% when tested on MCNC and large scale ISPD98 benchmark circuits [1]. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. J. Alpert. </author> <title> The ISPD98 circuit benchmark suite. </title> <booktitle> In Proc. Int. Symp. on Physical Design, </booktitle> <pages> pages 80-85, </pages> <year> 1998. </year>
Reference-contexts: Our iterative improvement-based flat multiway partitioner K-PM/LR improves K-FM by a surprising average margin of up to 86.2% and outperforms its counterpart recursive FM by up to 17.3% when tested on MCNC and large scale ISPD98 benchmark circuits <ref> [1] </ref>. The remainder of the paper is organized as follows; Section 2 presents the formulation of multiway partitioning problem. Section 3 provides the analysis of limitation conventional K-FM retains. Section 4 presents PM-based partitioning. Section 5 provides experimental results. <p> This obviously increases the probability of getting stuck in the local minima in the absence of effective hill-climbing scheme. Table 1 shows the comparison of recursive FM (R-FM) and K-FM based on 4-way, 8-way, and 16-way partitioning result of MCNC and ISPD98 benchmark circuits <ref> [1] </ref> measured under cost 1 and cost k 1 metric. 1 K-FM that minimizes cost 1 is based on formulation given in [10], and K-FM for minimizing cost k 1 is based on [11]. <p> The benchmark circuits are from MCNC and ISPD98 <ref> [1] </ref> suits. The area of the cells is uniform, and all pads are included to be partitioned.
Reference: [2] <author> C. J. Alpert and A. B. Kahng. </author> <title> Multi-way partitioning via spacefilling curves and dynamic programming. </title> <booktitle> In Proc. Design Automation Conf., </booktitle> <pages> pages 652-657, </pages> <year> 1994. </year>
Reference-contexts: Some of the previous works include recursive KL [9], generalization of FM [10, 11], primal-dual [12], spectral multiway ratio-cut [3], geometric embedding <ref> [2] </ref>, multilevel-based [8], and dual net-based [4] method. There are two primary approaches for generating mul-tiway partitioning solution; recursive or f lat. The recursive approach applies bipartitioning recursively until the desired number of partitions is obtained, whereas the flat approach partitions the circuit directly.
Reference: [3] <author> P. Chan, M. Schlag, and J. Zien. </author> <title> Spectral k-way ratio-cut partitioning and clustering. </title> <booktitle> In Proc. Design Automation Conf., </booktitle> <pages> pages 749-754, </pages> <year> 1993. </year>
Reference-contexts: Some of the previous works include recursive KL [9], generalization of FM [10, 11], primal-dual [12], spectral multiway ratio-cut <ref> [3] </ref>, geometric embedding [2], multilevel-based [8], and dual net-based [4] method. There are two primary approaches for generating mul-tiway partitioning solution; recursive or f lat. The recursive approach applies bipartitioning recursively until the desired number of partitions is obtained, whereas the flat approach partitions the circuit directly.
Reference: [4] <author> J. Cong, W. Labio, and N. Shivakumar. </author> <title> Multi-way VLSI circuit partitioning based on dual net representation. </title> <journal> IEEE Trans. on Computer-Aided Design of Integrated Circuits and Systems, </journal> <pages> pages 396-409, </pages> <year> 1996. </year>
Reference-contexts: Some of the previous works include recursive KL [9], generalization of FM [10, 11], primal-dual [12], spectral multiway ratio-cut [3], geometric embedding [2], multilevel-based [8], and dual net-based <ref> [4] </ref> method. There are two primary approaches for generating mul-tiway partitioning solution; recursive or f lat. The recursive approach applies bipartitioning recursively until the desired number of partitions is obtained, whereas the flat approach partitions the circuit directly.
Reference: [5] <author> J. Cong, H. P. Li, S. K. Lim, T. Shibuya, and D. Xu. </author> <title> Large scale circuit partitioning with loose/stable net removal and signal flow based clustering. </title> <booktitle> In Proc. Int. Conf. on Computer-Aided Design, </booktitle> <pages> pages 441-446, </pages> <year> 1997. </year>
Reference-contexts: This method is shown effective in optimizing standard cost 1 and cost k 1 (to be defined in Section 2) metrics. We adapt existing LR scheme <ref> [5] </ref> to generate initial partitions that identify clusters in the given circuit, which in turn promotes faster rate of convergence. <p> Another important issue to be addressed is on initial partition. Figure 2 shows the typical behavior of PM (based on random initial partition) and K-PM/LR (based on initial partition by recursively applying the existing LR scheme <ref> [5] </ref>). LR is a simple yet effective approach to dynamically identify and remove clusters that straddle the cutline in bi-partitioning. We use limited number of LR passes (usually less than 3) at each recursive level cut for the generation of K blocks, which requires little CPU time in most cases. <p> Our most enhanced multiway partitioner named K-PM/LR combines recursive LR-based initial partitioning and PM passes as shown in Table 2. 5 Experimental Result We have implemented our K-PM/LR algorithm that combines LR <ref> [5] </ref> and PM, compiled with gcc v2.4, and tested on 16-way partitioning, (b) All 3 possible block pairing config urations for 4-way partitioning K-PM/LR () for (r = 1 to total run) LR Init Partition (); while (: Immediate Stop ()) Gain Based Block Pairing (); PM Pass (); Table 2:
Reference: [6] <author> J. Cong and S. K. Lim. </author> <title> Multiway partitioning with pairwise movement. </title> <type> Technical Report 980029, </type> <institution> CS Dept. of UCLA, </institution> <month> Aug. </month> <year> 1998. </year>
Reference-contexts: As previously mentioned, R-FM minimizes only cost k 1, but we evaluate its multi-way partitioning result with both metrics. As one can see, 50 runs of K-FM performs very poorly (almost 500% worse) compared to 20 runs of R-FM (we provide more detailed comparison in <ref> [6] </ref>). Second problem is related to memory requirement. Each cell is associated with K 1 gain values, and each block has to maintain K 1 buckets for conventional K-FM algorithm. This translates into O (N K (K 1)) space complexity, where N denotes total number of cells. <p> We empirically observe from related experiment <ref> [6] </ref> that gain-based pairing that selects two blocks between which the cutsize reduction is maximum during the last PM pass produces the best result. The gain-of-pair is computed by comparing the number of nets that span both blocks before and after a pass. <p> In immediate stopping, the partitioner stops right after it encounters the first non-positive pass gain. In exhaustive stopping, the partitioner stops if all (or some portion of) possible pairing configurations consecutively can't improve the partition. We observe from related experiment <ref> [6] </ref> that immediate stopping produces almost the same quality solution within only a fraction of runtime compared to exhaustive stopping. Another important issue to be addressed is on initial partition. <p> Our flat multiway partitioner K-PM/LR also obtains comparable result (within 5%) when compared to the state-of-the-art recursive bipartitioner hMetis (recent result available at http://vlsicad.cs.ucla.edu/~cheese). Note that hMetis uses hierarchical clustering during partitioning. We expect that our result will further improve when combined with proper clustering schemes. Our technical report <ref> [6] </ref> provides more detailed experimental result. 6 Conclusion & Ongoing Work We proposed a simple yet effective method to improve the iterative improvement-based multiway partitioner by reducing the multiway partitioning problem to sets of concurrent bipartitioning problems.
Reference: [7] <author> C. Fiduccia and R. Mattheyses. </author> <title> A linear time heuristic for improving network partitions. </title> <booktitle> In Proc. Design Automation Conf., </booktitle> <pages> pages 175-181, </pages> <year> 1982. </year>
Reference-contexts: The main reason that partitioning plays a critical role in design task today is the enormous increase of system complexity along with substantial advances in VLSI system design and fabrication. Among many solutions devised to solve the partitioning problem, iterative improvement method such as FM <ref> [7] </ref> is accepted as de facto standard in handling today's large scale circuits due to (i) linear-time behavior (ii) flexibility in handling various constraints, (iii) controllable cutsize/runtime tradeoff. Multiway circuit partitioning divides the given circuit into a predetermined number (&gt; 2) of subcircuits. <p> In this paper, we propose a simple yet effective approach to enhance the performance of K-FM by reducing the multi-way partitioning problem to sets of concurrent bipartition-ing problems. Starting with an initial K-way partition of the netlist, we apply bipartitioning heuristic FM <ref> [7] </ref> to pairs of blocks so as to improve the quality of overall multiway partitioning solution. The pairing of blocks is based on the gain of the last pass, and the Pairwise cell Movement (PM) passes continue until no further gain can be obtained.
Reference: [8] <author> G. Karypis and V. Kumar. </author> <title> Multilevel k-way partitioning scheme for irregular graphs. </title> <type> Technical Report 95-064, </type> <institution> CS Dept. of Univ. of Minnesota, </institution> <year> 1995. </year>
Reference-contexts: Some of the previous works include recursive KL [9], generalization of FM [10, 11], primal-dual [12], spectral multiway ratio-cut [3], geometric embedding [2], multilevel-based <ref> [8] </ref>, and dual net-based [4] method. There are two primary approaches for generating mul-tiway partitioning solution; recursive or f lat. The recursive approach applies bipartitioning recursively until the desired number of partitions is obtained, whereas the flat approach partitions the circuit directly.
Reference: [9] <author> B. Kernighan and S. Lin. </author> <title> An efficient heuristic procedure for partitioning of electrical circuits. </title> <journal> Bell System Technical Journal, </journal> <pages> pages 291-307, </pages> <year> 1970. </year>
Reference-contexts: Some of the previous works include recursive KL <ref> [9] </ref>, generalization of FM [10, 11], primal-dual [12], spectral multiway ratio-cut [3], geometric embedding [2], multilevel-based [8], and dual net-based [4] method. There are two primary approaches for generating mul-tiway partitioning solution; recursive or f lat.
Reference: [10] <author> L. A. Sanchis. </author> <title> Multiple-way network partitioning. </title> <journal> IEEE Trans. on Computers, </journal> <pages> pages 62-81, </pages> <year> 1989. </year>
Reference-contexts: Some of the previous works include recursive KL [9], generalization of FM <ref> [10, 11] </ref>, primal-dual [12], spectral multiway ratio-cut [3], geometric embedding [2], multilevel-based [8], and dual net-based [4] method. There are two primary approaches for generating mul-tiway partitioning solution; recursive or f lat. <p> In addition, recent advances in enhancing iterative improvement bipartitioning algorithms have also made recursive approach more and more attractive in solving mul-tiway partitioning. On the other hand, little progress has been made to improve iterative improvement-based flat mul-tiway partitioning algorithms such as K-FM <ref> [10, 11] </ref> despite the potential gain from the availability of more global information and larger solution space. One major drawback of K-FM that is consensus among CAD researchers is that it is very susceptible of being trapped into a local minima that is far from being optimal. <p> Highly optimized 1st and 2nd level cuts can cause 3rd and 4th level cuts to cut through very dense clusters. Thus, this conflicting objective can cause recursive approach to produce low quality multiway partitioning solutions. Sanchis <ref> [10] </ref> showed that the flat multiway partitioning approach obtained better quality solution compared to the recursive approach for small scale randomly generated circuits. In her K-way generalization of cell move based 2-way FM heuristic (often referred to as K-FM), K (K 1) bucket structure are used to maintain cell gains. <p> Table 1 shows the comparison of recursive FM (R-FM) and K-FM based on 4-way, 8-way, and 16-way partitioning result of MCNC and ISPD98 benchmark circuits [1] measured under cost 1 and cost k 1 metric. 1 K-FM that minimizes cost 1 is based on formulation given in <ref> [10] </ref>, and K-FM for minimizing cost k 1 is based on [11]. As previously mentioned, R-FM minimizes only cost k 1, but we evaluate its multi-way partitioning result with both metrics.
Reference: [11] <author> L. A. Sanchis. </author> <title> Multiple-way network partitioning with different cost functions. </title> <journal> IEEE Trans. on Computers, </journal> <pages> pages 1500-1504, </pages> <year> 1993. </year>
Reference-contexts: Some of the previous works include recursive KL [9], generalization of FM <ref> [10, 11] </ref>, primal-dual [12], spectral multiway ratio-cut [3], geometric embedding [2], multilevel-based [8], and dual net-based [4] method. There are two primary approaches for generating mul-tiway partitioning solution; recursive or f lat. <p> In addition, recent advances in enhancing iterative improvement bipartitioning algorithms have also made recursive approach more and more attractive in solving mul-tiway partitioning. On the other hand, little progress has been made to improve iterative improvement-based flat mul-tiway partitioning algorithms such as K-FM <ref> [10, 11] </ref> despite the potential gain from the availability of more global information and larger solution space. One major drawback of K-FM that is consensus among CAD researchers is that it is very susceptible of being trapped into a local minima that is far from being optimal. <p> (R-FM) and K-FM based on 4-way, 8-way, and 16-way partitioning result of MCNC and ISPD98 benchmark circuits [1] measured under cost 1 and cost k 1 metric. 1 K-FM that minimizes cost 1 is based on formulation given in [10], and K-FM for minimizing cost k 1 is based on <ref> [11] </ref>. As previously mentioned, R-FM minimizes only cost k 1, but we evaluate its multi-way partitioning result with both metrics. As one can see, 50 runs of K-FM performs very poorly (almost 500% worse) compared to 20 runs of R-FM (we provide more detailed comparison in [6]).
Reference: [12] <author> C. W. Yeh, C. K. Cheng, and T. T. Lin. </author> <title> A general purpose multiple-way partitioning algorithm. </title> <booktitle> In Proc. Design Automation Conf., </booktitle> <pages> pages 421-426, </pages> <year> 1991. </year>
Reference-contexts: Some of the previous works include recursive KL [9], generalization of FM [10, 11], primal-dual <ref> [12] </ref>, spectral multiway ratio-cut [3], geometric embedding [2], multilevel-based [8], and dual net-based [4] method. There are two primary approaches for generating mul-tiway partitioning solution; recursive or f lat.
References-found: 12

