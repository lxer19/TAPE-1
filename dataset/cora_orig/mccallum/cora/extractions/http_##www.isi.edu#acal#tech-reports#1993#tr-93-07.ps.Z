URL: http://www.isi.edu/acal/tech-reports/1993/tr-93-07.ps.Z
Refering-URL: http://www.isi.edu/acal/tech-reports/index.html
Root-URL: http://www.isi.edu
Title: Power Efficient Technology Decomposition and Mapping under an Extended Power Consumption Model  
Author: Chi-Ying Tsui, Massoud Pedram, Alvin M. Despain 
Address: Los Angeles, CA 90089  
Affiliation: Department of Electrical Engineering Systems University of Southern California  
Abstract-found: 0
Intro-found: 1
Reference: [1] <institution> MOSIS data sheet, Information Sciences Institute, University of Southern California,. </institution> <year> 1992. </year>
Reference-contexts: Under a zero delay model, E (switching) is always less than 1. 5 2.2 Power Consumption at Internal Nodes of a Gate In a typical 0.8m technology, the diffusion capacitance is about 20% of the gate capacitance <ref> [1] </ref>. The charging and discharging in the source/drain capacitance of transistors in a gate thus makes a considerable contribution to the power consumption of the gate. In particular, note that the internal capacitances may be charged and discharged without any change in the gate output.
Reference: [2] <author> R. K. Brayton, G. D. Hachtel, and A. L. Sangiovanni-Vincentelli. </author> <title> Multilevel logic synthesis. </title> <booktitle> In Proceedings of the IEEE, </booktitle> <volume> volume 78, </volume> <pages> pages 264-300, </pages> <month> February </month> <year> 1990. </year>
Reference-contexts: The proof of optimality of the tree mapping algorithm is thus similar to that of the area-delay mapping algorithm. 4.4 DAG Mapping Most of the real circuits are not trees, but general dags. The problem of mapping a dag even for the unit fanout model is np-hard <ref> [2] </ref>. Therefore, we resort to heuristics. During the power-delay curve computation step, nodes are visited in postorder. For each node, we compute the power-delay curve as in case of trees.
Reference: [3] <author> R. Bryant. </author> <title> Graph-based algorithms for Boolean function manipulation. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-35:677-691, </volume> <month> Aug. </month> <year> 1986. </year>
Reference-contexts: The signal probability at the output of a node is calculated by first building an Ordered Binary-Decision Diagrams (obdd) <ref> [3] </ref> corresponding to the global function of the node and then performing a linear traversal of the obdd using the procedure given in [14]. 1.3 Organization of the Paper The rest of this paper is organized as follows.
Reference: [4] <author> A. R. Burch, F. Najm, P. Yang, and D. Hocevar. </author> <title> Pattern independent current estimation for reliability analysis of CMOS circuits. </title> <booktitle> In Proceedings of the 25th Design Automation Conference, </booktitle> <pages> pages 294-299, </pages> <month> June </month> <year> 1988. </year>
Reference-contexts: Several researchers have studied the problem of estimating power consumption. Cirit [6] estimates the dynamic power consumption at the transistor level based on the probability of the drain of a transistor making a power consuming transition. Burch et al. <ref> [4] </ref> introduce the concept of probability waveforms. Given such waveforms at the primary inputs and with some convenient partitioning of the circuit, they examine every sub-circuit and derive corresponding waveforms at the internal circuit nodes.
Reference: [5] <author> K. Chaudhary and M. Pedram. </author> <title> A near-optimal algorithm for technology mapping minimizing area under delay constraints. </title> <booktitle> In Proceedings of the 29th Design Automation Conference, </booktitle> <pages> pages 492-498, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: The idea is to reduce technology mapping to DAG covering and to approximate DAG covering by a sequence of tree coverings which can be performed optimally using dynamic programming. Traditional goal for technology mapping is to minimize the total area (or delay) of the mapped circuit. In <ref> [5] </ref>, a near-optimal solution is presented for finding the minimum area solution under delay constraints. Their approach consists of two steps: In the first step, delay functions (which capture arrival time-gate area tradeoffs) at all nodes in the network are generated. <p> Merging must occur in the common region in order to ensure that the resulting function reflects feasible matches at the inputs (n; g). The power-delay functions for successive gates g matching at n are then merged by applying a lower-bound merge operation on the corresponding power-delay functions (see <ref> [5] </ref> for details of these operations). At a given node n, the resulting power-delay function will describe the arrival time average power tradeoffs in propagating a signal from the tree inputs to the output of n. The second traversal begins when the mapping reaches the root (primary output). <p> The calculation employs obdds and hence the time complexity is equal to that of building obdds for the network. For the mapping procedure, the complexity is similar to that of area-delay mapping given in <ref> [5] </ref> where it was shown that the complexity of generating power-delay curve for each candidate match g is O (kN log (N max )) where N = P k i=0 N i , N i denotes the number of points on the power-delay curve of input i of gate g, and <p> Tables 4 and 5 contain our experimental results using different technology decomposition and mapping combinations. All methods have the same starting point, that is, circuits optimized by the sis rugged script [18]. Method A uses area-delay mapping (ad-map) algorithm of <ref> [5] </ref> and methods B to D use power-delay mapping (pd-map). Methods A and B take in a nand-decomposed network generated by the conventional balanced tree decomposition algorithm. Method C uses the minpower technology decomposition (minpower t decomp) while method D uses the bounded-height minpower decomposition (bh minpower t decomp).
Reference: [6] <author> M. A. Cirit. </author> <title> Estimating dynamic power consumption of CMOS circuits. </title> <booktitle> In Proceedings of the IEEE International Conference on Computer Aided Design, </booktitle> <pages> pages 534-537, </pages> <month> November </month> <year> 1987. </year>
Reference-contexts: The computer aided design community has recently started paying more attention to power estimation and low power design. Several researchers have studied the problem of estimating power consumption. Cirit <ref> [6] </ref> estimates the dynamic power consumption at the transistor level based on the probability of the drain of a transistor making a power consuming transition. Burch et al. [4] introduce the concept of probability waveforms.
Reference: [7] <author> E. Detjens, G. Gannot, R. Rudell, A. Sangiovanni-Vincentelli, and A. Wang. </author> <title> Technology mapping in MIS. </title> <booktitle> In Proceedings of the IEEE International Conference on Computer Aided Design, </booktitle> <pages> pages 116-119, </pages> <month> November </month> <year> 1987. </year>
Reference-contexts: This heuristic which permits tree boundary crossing only for nodes with relatively few fanouts was also adopted by the MIS mapper <ref> [7] </ref>. During the gate selection step, if we come to a node which has already been mapped, we check if the mapped solution at the node satisfies the timing requirement.
Reference: [8] <author> S. Ercolani, M. Favalli, M. Damiani, P. Olivo, and B. Ricco. </author> <title> Estimate of signal probability in combinational logic networks. </title> <booktitle> In Proceedings of the European Test Conference, </booktitle> <pages> pages 132-138, </pages> <year> 1989. </year>
Reference-contexts: It is, however, too costly to consider conditional probabilities among all subsets of primary inputs. Instead, we only use pairwise conditional probabilities as follows. Correlation coefficient C (i; j) is defined by 34 35 that is, C (i; j) = P (i) P (jji) : (43) Ercolani et al. <ref> [8] </ref> describe a method to approximate the correlation coefficients of the outputs of gates given the signal probabilities and correlation coefficients of the inputs as follows.
Reference: [9] <author> A. A. Ghosh, S. Devadas, K. Keutzer, and J. White. </author> <title> Estimation of average switching activity in combinational and sequential circuits. </title> <booktitle> In Proceedings of the 29th Design Automation Conference, </booktitle> <pages> pages 253-259, </pages> <month> June </month> <year> 1992. </year> <month> 38 </month>
Reference-contexts: These 2 methods assume inputs to sub-circuits are independent and thus do not account for the reconvergent fanout and input correlations. Ghosh et al. <ref> [9] </ref> propose symbolic simulation in order to produce a set of Boolean functions which represent conditions for switching at each gate in the circuit. <p> switching activities and a low power technology mapping algorithm which hides the high switching nodes inside gates and reduces the fanout load driven by high switching activity nodes. 1.2 Calculation of Switching Probabilities In what follows, we assume a zero delay model where gate delays are assumed to be zero <ref> [9] </ref> and thus ignore signal transitions due to glitching. Primary inputs are assumed to be uncorrelated (issues regarding the use of a real delay model and correlated primary inputs are discussed in Section 6). <p> Using a real delay model has however several drawbacks. The first is the huge computational effort to calculate the possible glitches for each nodes. In <ref> [9] </ref>, symbolic simulation is used to produce a set of Boolean functions which represent conditions for switching at each gate in the circuit at a specific time instance. This procedure is exact, however, requires large computation time and storage space.
Reference: [10] <author> D. A. Huffman. </author> <title> A method for the construction of minimum redundancy codes. </title> <journal> In Pro--ceedings of the IRE, </journal> <volume> volume 40, </volume> <pages> pages 1098-1101, </pages> <month> September </month> <year> 1952. </year>
Reference-contexts: We refer to this problem as the bounded-height minpower decomposition. 3.1 Tree Decomposition We describe algorithms for solving the minpower decomposition for a fanout-free logic function (i.e. a function that has a tree realization). The basic algorithm is similar to Huffman's algorithm <ref> [10] </ref> for constructing a binary tree with minimum average weighted path length.
Reference: [11] <author> D. S. Parker Jr. </author> <title> Conditions for optimality of the Huffman algorithm. </title> <journal> SIAM Journal of Computing, </journal> <volume> 9(3) </volume> <pages> 470-489, </pages> <month> August </month> <year> 1980. </year>
Reference-contexts: For each tree T , a tree cost function 13 activity. G (W 1 ; W 2 ; : : : ; W n1 ) gives the cost. 1 Parker <ref> [11] </ref> characterized a wide class of weight combination functions, for which Huffman's algorithm produces optimal trees under corresponding tree cost functions. We give some definitions first and then state Parker's main theorem. <p> is a real-valued invertible function on the weight space U . (Note F is symmetric, and conjugate under to the linear map (x+y).) Definition 3.2 A tree cost function G: U n1 ! R is Schur concave if (x i x j ) @G @x j 0 (29) Theorem 3.1 <ref> [11] </ref> If the weight combination function F is quasi-linear and the corresponding function is convex, positive, (or concave, negative) and strictly monotone 1 In Huffman's original paper, F (x; y) = x + y and G = P n1 i=1 W i . <p> Proof We present the proof for (33). Proof for the other case is similar. One criterion for a function F to be quasi-linear is increasingness, i.e. F (u; x) ( )F (u; y) if x ()y <ref> [11] </ref>. However, in (33), we could have w i 2 w i 3 , yet w i 2 ji 1 &gt; w i 3 ji 1 , thus F (w i 1 ; w i 2 ) &gt; F (w i 1 ; w i 3 ).
Reference: [12] <author> K. Keutzer. Dagon: </author> <title> technology binding and local optimization by dag matching. </title> <booktitle> In Proceedings of the 24th Design Automation Conference, </booktitle> <pages> pages 341-347, </pages> <month> June </month> <year> 1987. </year>
Reference-contexts: A successful and efficient solution to the minimum area mapping problem was suggested in <ref> [12] </ref> and implemented in programs such as DAGON and MIS. The idea is to reduce technology mapping to DAG covering and to approximate DAG covering by a sequence of tree coverings which can be performed optimally using dynamic programming.
Reference: [13] <author> L. Larmore and D. S. Hirschberg. </author> <title> A fast algorithm for optimal length-limited Huffman codes. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> V 37 No. 3 </volume> <pages> 464-473, </pages> <year> 1990. </year>
Reference-contexts: The best known algorithm for solving bounded-height minsum problem is an O (nL) algorithm due to Larmore and Hirschberg <ref> [13] </ref>. <p> The merge step merges the newly formed items with the original items at each level. Details of the algorithm can be found in <ref> [13] </ref>. For the general weight combination functions, the Larmore-Hirschberg's algorithm has to be modified as follows: In the package step, replace the Huffman's algorithm by Algorithm 3.1; the merge step is unchanged.
Reference: [14] <author> F. Najm. </author> <title> Transition density, a stochastic measure of activity in digital circuits. </title> <booktitle> In Proceedings of the 28th Design Automation Conference, </booktitle> <pages> pages 644-649, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: Given input switching rates, the switching probability at each gate is calculated by performing a linear traversal of the Binary Decision Diagrams (bdds) representation of the corresponding Boolean function <ref> [14] </ref>. A general delay model which correctly computes the Boolean conditions that cause glitchings is used and correlations due to the reconver-gence of input signals are taken into account. Recently, researches on synthesis for low power have been carried out. <p> The signal probability at the output of a node is calculated by first building an Ordered Binary-Decision Diagrams (obdd) [3] corresponding to the global function of the node and then performing a linear traversal of the obdd using the procedure given in <ref> [14] </ref>. 1.3 Organization of the Paper The rest of this paper is organized as follows. In Section 2 we review the conventional power consumption models and present an extended model which accounts for the internal power consumption.
Reference: [15] <author> F. N. Najm, R. Burch, P. Yang, and I. Hajj. </author> <title> Probabilistic simulation for reliability analysis of CMOS VLSI circuits. </title> <journal> IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems, </journal> <volume> Vol. 9 No. 4 </volume> <pages> 439-450, </pages> <month> April </month> <year> 1990. </year>
Reference-contexts: Burch et al. [4] introduce the concept of probability waveforms. Given such waveforms at the primary inputs and with some convenient partitioning of the circuit, they examine every sub-circuit and derive corresponding waveforms at the internal circuit nodes. Najm et al. <ref> [15] </ref> use a probabilistic simulation approach to estimate the average current drawn by a circuit. Their approach is built on the notion of transition probabilities over a time period.
Reference: [16] <author> S. C. Prasad and K. Roy. </author> <title> Circuit activity driven multilevel logic optimization for low power reliable operation. </title> <booktitle> In Proceedings of the European Design Automation Conference, </booktitle> <pages> pages 368-372, </pages> <month> February </month> <year> 1993. </year>
Reference-contexts: Intermediate nodes of a Boolean network are simplified so as to reduce the switching probabilities. Logic transformations which realize each node in the network as a disjoint cover are applied to further reduce the average power consumption. Prasad et al. <ref> [16] </ref> tackle the low power kernelization problem in multi-level logic minimization. During the factorization process, common sub-expressions which result in maximum reduction in switching activities are extracted. The result is a technology independent logic network with minimal total switching activities.
Reference: [17] <author> K. Roy and S. Prasad. Syclop: </author> <title> Synthesis of CMOS logic for low power application. </title> <booktitle> In Proceedings of the International Conference on Computer Design, </booktitle> <pages> pages 464-467, </pages> <month> October </month> <year> 1992. </year>
Reference-contexts: Prasad et al. [16] tackle the low power kernelization problem in multi-level logic minimization. During the factorization process, common sub-expressions which result in maximum reduction in switching activities are extracted. The result is a technology independent logic network with minimal total switching activities. Roy et al. <ref> [17] </ref> propose a low power state assignment method which use simulated annealing to find the state encoding of a finite state machine which the total probability weighted Hamming distance of the states are minimized. Vaishnav et al. [21] tackle the low power synthesis problem in physical domain.
Reference: [18] <author> H. Savoj and H. Y. Wang. </author> <title> Improved scripts in MIS-II for logic minimization of combinational circuits. </title> <booktitle> In Proceedings of the International Workshop on Logic Synthesis, </booktitle> <month> May </month> <year> 1991. </year>
Reference-contexts: In the rest of the experiments, equation (41) was used for the power cost calculation. Tables 4 and 5 contain our experimental results using different technology decomposition and mapping combinations. All methods have the same starting point, that is, circuits optimized by the sis rugged script <ref> [18] </ref>. Method A uses area-delay mapping (ad-map) algorithm of [5] and methods B to D use power-delay mapping (pd-map). Methods A and B take in a nand-decomposed network generated by the conventional balanced tree decomposition algorithm.
Reference: [19] <author> A. A. Shen, A. Ghosh, S. Devadas, and K. Keutzer. </author> <title> On average power dissipation and random pattern testability of CMOS combinational logic networks. </title> <booktitle> In Proceedings of the IEEE International Conference on Computer Aided Design, </booktitle> <month> November </month> <year> 1992. </year>
Reference-contexts: A general delay model which correctly computes the Boolean conditions that cause glitchings is used and correlations due to the reconver-gence of input signals are taken into account. Recently, researches on synthesis for low power have been carried out. Shen et al, <ref> [19] </ref> present algorithms for reducing power consumption during technology independent phase of logic synthesis. Intermediate nodes of a Boolean network are simplified so as to reduce the switching probabilities.
Reference: [20] <author> C. Y. Tsui, M. Pedram, and A. Despain. </author> <title> Efficient estimation of dynamic power dissipation with an application. </title> <booktitle> In Proceedings of the IEEE International Conference on Computer Aided Design, </booktitle> <month> Nov </month> <year> 1993. </year> <note> to appear. </note>
Reference-contexts: In [9], symbolic simulation is used to produce a set of Boolean functions which represent conditions for switching at each gate in the circuit at a specific time instance. This procedure is exact, however, requires large computation time and storage space. In <ref> [20] </ref>, a faster method of estimating the power consumption including glitches is described using the notion of transition probability. The transition probabilities are propagated from the primary inputs to the circuit outputs using a linear time algorithm.
Reference: [21] <author> H. Vaishnav and M. Pedram. Pcube: </author> <title> A performance driven placement algorithm for low power designs. </title> <booktitle> In Proceedings of the EURO-DAC, </booktitle> <month> September </month> <year> 1993. </year> <note> to appear. </note>
Reference-contexts: Roy et al. [17] propose a low power state assignment method which use simulated annealing to find the state encoding of a finite state machine which the total probability weighted Hamming distance of the states are minimized. Vaishnav et al. <ref> [21] </ref> tackle the low power synthesis problem in physical domain. They propose a low power performance driven placement procedure which minimizes the length, hence the capacitance loading, of the high switching nets and at the same time satisfying the delay constraints.
Reference: [22] <author> H. J. M. Veendrick. </author> <title> Short-circuit dissipation of static CMOS circuitry and its impact on the design of buffer circuits,. </title> <journal> ieee Journal of Solid State Circuits, </journal> <volume> SC-19:468-473, </volume> <month> Aug. </month> <year> 1984. </year>
Reference-contexts: The last two sources can be made small with proper device and circuit design techniques <ref> [22] </ref>. We therefore concentrate on the dynamic power consumption.
References-found: 22

