URL: ftp://ic.eecs.berkeley.edu/pub/Memos_Conference/iwls97.KB.ps.gz
Refering-URL: http://www-cad.eecs.berkeley.edu/HomePages/kukimoto/
Root-URL: 
Email: fkukimoto,braytong@eecs.berkeley.edu  
Title: Hierarchical Timing Analysis under the XBD0 Model  
Author: Yuji Kukimoto Robert K. Brayton 
Address: Berkeley, CA 94720  
Affiliation: Department of Electrical Engineering and Computer Sciences University of California,  
Abstract: We propose a hierarchical timing analysis technique applicable to the XBD0 delay model, which is the underlying model for floating mode analysis and viability analysis. Given a hierarchical combinational circuit, the timing property of each leaf module is characterized first. Since this timing characterization step takes into account false paths in each module, a timing model constructed is more accurate than the one obtained by topological analysis. Arrival times at primary inputs of the entire circuit are then propagated through modules using the timing models of leaf modules. As far as the authors know, this is the first result which shows that hierarchical analysis is possible under state-of-the-art tight sensitization criteria while preserving accuracy. We demonstrate that loss of accuracy in using the hierarchical approach is very minimal in practice by showing that the hierarchical analysis gives the same delay as flat analysis for a cascaded carry-skip adder, which is known to contain many long false paths. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. I. Bahar, E. A. Frohm, C. M. Gaona, G. D. Hachtel, E. Macii, A. Pardo, and F. Somenzi. </author> <title> Algebraic decision diagrams and their applications. </title> <booktitle> In Proceedings of International Conference on Computer-Aided Design, </booktitle> <pages> pages 188-191, </pages> <month> November </month> <year> 1993. </year>
Reference-contexts: (2; fffi); (3; fffi); (4; fffi)g Finally to determine the required time at i 2 the minimum of req (y) and req (z) is taken symbolically, which gives req (i 2 ) = f (3; fffi); (4; ff + fi)g: All of these symbolic computation can be done using ADD's/MTBDD's <ref> [1, 4] </ref>.
Reference: [2] <author> K. P. Belkhale and A. J. Suess. </author> <title> Timing analysis with known false sub graphs. </title> <booktitle> In Proceedings of IEEE/ACM International Conference on Computer-Aided Design, </booktitle> <pages> pages 736-740, </pages> <month> November </month> <year> 1995. </year>
Reference-contexts: This assumption makes hierarchical analysis trivial. However, false paths are completely ignored in this approach thereby making accurate analysis difficult. Recently Belkhale and Suess <ref> [2] </ref> proposed topological timing analysis under known false path subgraphs. They assume that designers give the correct information on false subgraphs, which is then used to perform analysis more accurately. The falsity of a subgraph, however, is in many cases relative to particular arrival times at primary inputs.
Reference: [3] <author> H.-C. Chen and D. H.-C. Du. </author> <title> Path sensitization in critical path problem. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <volume> 12(2) </volume> <pages> 196-207, </pages> <month> February </month> <year> 1993. </year> <title> 9 If there is more than one timing tuple in a timing model, we have multiple polygons. Whenever arrival times are propagated through a subcircuit, all the polygons are tried and the best one that gives the earliest arrival time is chosen. </title>
Reference-contexts: Even if their al 1 The first author is supported by SRC-97-DC-324 gorithm for constructing a delay model of a combinational module, called tagged-mode analysis, is correct for sensitization criteria independent of arrival times (e.g. static co-sensitization [5]), it is not applicable to tighter criteria like floating mode <ref> [3] </ref> or viability [7]. The main problem in the model construction is that they construct a delay model assuming that all the inputs of a module arrive simultaneously. <p> In this paper we propose a hierarchical timing analysis technique for combinational circuits under the XBD0 delay mode [8]. This delay model is the underlying model for state-of-the-art sensitization criteria like floating mode <ref> [3] </ref> and viability [7]. We show that a conservative yet accurate delay characterization of combinational modules is possible by using a recent result of our previous work on exact required time analysis [6].
Reference: [4] <author> E. M. Clarke, K. L. McMillan, X. Zhao, M. Fujita, and J. Yang. </author> <title> Spectral transformation for large Boolean functions with application to technology mapping. </title> <booktitle> In Proceedings of 30th Design Automation Conference, </booktitle> <pages> pages 54-60, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: (2; fffi); (3; fffi); (4; fffi)g Finally to determine the required time at i 2 the minimum of req (y) and req (z) is taken symbolically, which gives req (i 2 ) = f (3; fffi); (4; ff + fi)g: All of these symbolic computation can be done using ADD's/MTBDD's <ref> [1, 4] </ref>.
Reference: [5] <author> S. Devadas, K. Keutzer, and S. Malik. </author> <title> Computation of floating mode delay in combinational circuits: Theory and algorithms. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <volume> 12(12) </volume> <pages> 1913-1923, </pages> <month> December </month> <year> 1993. </year>
Reference-contexts: Even if their al 1 The first author is supported by SRC-97-DC-324 gorithm for constructing a delay model of a combinational module, called tagged-mode analysis, is correct for sensitization criteria independent of arrival times (e.g. static co-sensitization <ref> [5] </ref>), it is not applicable to tighter criteria like floating mode [3] or viability [7]. The main problem in the model construction is that they construct a delay model assuming that all the inputs of a module arrive simultaneously.
Reference: [6] <author> Y. Kukimoto and R. K. Brayton. </author> <title> Exact required time analysis via false path detection. </title> <booktitle> In Proceedings of 34th ACM/IEEE Design Automation Conference, </booktitle> <month> pages -, June </month> <year> 1997. </year>
Reference-contexts: This delay model is the underlying model for state-of-the-art sensitization criteria like floating mode [3] and viability [7]. We show that a conservative yet accurate delay characterization of combinational modules is possible by using a recent result of our previous work on exact required time analysis <ref> [6] </ref>. Delay models computed using this method can capture false paths effects inside modules, thus are guaranteed to be more accurate than those constructed by topological analysis. We then show how signal arrival times can be propagated through modules using these timing models. The paper is organized as follows. <p> We then show how signal arrival times can be propagated through modules using these timing models. The paper is organized as follows. Section 2 summarizes exact required time analysis <ref> [6] </ref>, which forms the basis of delay characterization of combinational modules. Section 3 discusses how analysis can be done in two steps: 1) delay model construction of leaf circuits and 2) top-level delay analysis. A simple example of hierarchical analysis is shown in Section 4. <p> A simple example of hierarchical analysis is shown in Section 4. We demonstrate by this example that the hierarchical analysis gives the same delay result as flat analysis. Section 5 concludes the paper. 2 Preliminaries We overview exact required time analysis for combinational circuits proposed by the authors in <ref> [6] </ref>. This technique will be used in characterizing delays of combinational modules. The problem studied in [6] is: Given a gate-level combinational circuit and required times at its primary outputs, exactly by what time does each of its primary inputs have to be stabilized? The simplest conservative solution to this problem <p> Section 5 concludes the paper. 2 Preliminaries We overview exact required time analysis for combinational circuits proposed by the authors in <ref> [6] </ref>. This technique will be used in characterizing delays of combinational modules. The problem studied in [6] is: Given a gate-level combinational circuit and required times at its primary outputs, exactly by what time does each of its primary inputs have to be stabilized? The simplest conservative solution to this problem is to perform delay analysis backwards from primary outputs to primary inputs by propagating required times <p> Although topolog-ical analysis suffices in many cases, more accurate analysis is often required in the design of high-performance circuits. <ref> [6] </ref> shows that such elaborate analysis is possible by considering false paths in a circuit. This analysis leads us to looser timing requirements at primary inputs, which can then relax the timing constraint of a driving circuit. <p> This analysis leads us to looser timing requirements at primary inputs, which can then relax the timing constraint of a driving circuit. In the following, assume that a combinational circuit under analysis has a single output for simplicity. The basic idea of <ref> [6] </ref> is that given a combinational circuit and a required time at its primary output, the stability of the output at the required time can be represented by a Boolean function of the stability of primary inputs at potential required times. <p> Notice that the notion of required times is extended from a single value to a relation between input minterms and required times at primary inputs. Instead of illustrating the theory in detail, we will only discuss important results from <ref> [6] </ref> to clarify the basic concept since the analysis technique itself is irrelevant to this paper. Interested readers should refer to [6]. Consider a single-output combinational circuit. <p> Instead of illustrating the theory in detail, we will only discuss important results from <ref> [6] </ref> to clarify the basic concept since the analysis technique itself is irrelevant to this paper. Interested readers should refer to [6]. Consider a single-output combinational circuit. Let X = fx 1 ; : : : ; x n g be the set of primary inputs of the circuit and z be the primary output. Assume that a required time t = 0 is asserted at z. <p> If topological analysis is performed, the required time at x i is l i , where l i is the longest topological path delay from x i to z. Note that the required time of each input is completely independent of input values. The technique developed in <ref> [6] </ref> allows us to compute a more sophisticated input-dependent constraint on required times, which is guaranteed to be looser than the one obtained by topological analysis. <p> Since the exact characterization is only applicable to small circuits due to its inherent complexity, two approximate approaches were proposed in <ref> [6] </ref>. The main idea is to partially ignore interactions between inputs to simplify the analysis. The required times at the primary inputs computed in this approach are characterized as a set of timing tuples T approx R n . <p> Two timing tuples are called incomparable if they are not comparable. ysis. The only difference between the two methods is that T approx is independent of input minterms. Intuitively T approx can be ob tained from the relation T exact by computing required times valid to all the minterms. <ref> [6] </ref> shows that an approximate algorithm based on repeated functional timing analysis can handle large circuits and extract non-trivial required times in many examples. In this paper we use the approximate technique to simplify the illustration. <p> We still believe that our methodology is applicable to industrial circuits since 1) there exists an efficient algorithm known for the timing characterization step which can handle circuits of thousands of gates <ref> [6] </ref> and 2) the complexity of the second step is almost linear to the size of the top-level network. The timing characterization step can be used in constructing the timing abstraction of black box modules, e.g. intellectual property blocks [12].
Reference: [7] <author> P. C. McGeer and R. K. Brayton. </author> <title> Integrating Functional and Temporal Domains in Logic Design. </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1991. </year>
Reference-contexts: if their al 1 The first author is supported by SRC-97-DC-324 gorithm for constructing a delay model of a combinational module, called tagged-mode analysis, is correct for sensitization criteria independent of arrival times (e.g. static co-sensitization [5]), it is not applicable to tighter criteria like floating mode [3] or viability <ref> [7] </ref>. The main problem in the model construction is that they construct a delay model assuming that all the inputs of a module arrive simultaneously. <p> In this paper we propose a hierarchical timing analysis technique for combinational circuits under the XBD0 delay mode [8]. This delay model is the underlying model for state-of-the-art sensitization criteria like floating mode [3] and viability <ref> [7] </ref>. We show that a conservative yet accurate delay characterization of combinational modules is possible by using a recent result of our previous work on exact required time analysis [6].
Reference: [8] <author> P. C. McGeer, A. Saldanha, R. K. Brayton, and A. Sangiovanni-Vincentelli. </author> <title> Delay models and exact timing analysis. </title> <editor> In T. Sasao, editor, </editor> <booktitle> Logic Synthesis and Optimization, </booktitle> <pages> pages 167-189. </pages> <publisher> Kluwer Academic Publishers, </publisher> <year> 1993. </year>
Reference-contexts: These points were not mentioned in [13] unfortunately. Their experimental results on hierarchical analysis in fact are based on static sensitization, which is known to underapproximate delays. In this paper we propose a hierarchical timing analysis technique for combinational circuits under the XBD0 delay mode <ref> [8] </ref>. This delay model is the underlying model for state-of-the-art sensitization criteria like floating mode [3] and viability [7]. We show that a conservative yet accurate delay characterization of combinational modules is possible by using a recent result of our previous work on exact required time analysis [6].
Reference: [9] <author> M. Nomura, S. Sato, N. Takano, T. Aoyama, and A. Yamada. </author> <title> Timing verification system based on delay time hierarchical nature. </title> <booktitle> In Proceedings of 19th Design Automation Conference, </booktitle> <pages> pages 622-628, </pages> <month> June </month> <year> 1982. </year>
Reference-contexts: Another drawback of flat analysis is that even a small change in a circuit forces us to repeat an entire analysis from scratch. In topological timing analysis, hierarchical approaches have been used extensively in practice to manage the complexity of industrial circuits <ref> [9, 11] </ref>. The reason why hierarchical analysis is prevalent is that the delay of a module is completely independent of a surrounding environment since all paths are assumed to propagate signals. This assumption makes hierarchical analysis trivial.
Reference: [10] <author> A. Saldanha. </author> <title> Performance and testability interactions in logic synthesis. </title> <type> Technical Report UCB/ERL M91/100, </type> <institution> University of California, Berkeley, </institution> <month> October </month> <year> 1991. </year>
Reference-contexts: We have verified that this delay estimation matches the results of the flat analysis at least up to n = 8. This ability of parameterized analysis has never been possible with flat analysis. In <ref> [10] </ref> the circuit in Figure 4 is analyzed under arr (c in ) = 5; arr (a 0 ) = arr (b 0 ) = arr (a 1 ) = arr (b 1 ) = 0.
Reference: [11] <author> E. Tamura, K. Ogawa, and T. Nakano. </author> <title> Path delay analysis for hierarchical building block layout system. </title> <booktitle> In Proceedings of 20th Design Automation Conference, </booktitle> <pages> pages 403-410, </pages> <month> June </month> <year> 1983. </year>
Reference-contexts: Another drawback of flat analysis is that even a small change in a circuit forces us to repeat an entire analysis from scratch. In topological timing analysis, hierarchical approaches have been used extensively in practice to manage the complexity of industrial circuits <ref> [9, 11] </ref>. The reason why hierarchical analysis is prevalent is that the delay of a module is completely independent of a surrounding environment since all paths are assumed to propagate signals. This assumption makes hierarchical analysis trivial.
Reference: [12] <author> S. V. Venkatesh, R. Palermo, M. Mortazavi, and K. A. Sakallah. </author> <title> Timing abstraction of intellectual property blocks. </title> <booktitle> In Proceedings of Custom Integrated Circuit Conference, </booktitle> <month> pages - , May </month> <year> 1997. </year>
Reference-contexts: The timing characterization step can be used in constructing the timing abstraction of black box modules, e.g. intellectual property blocks <ref> [12] </ref>. The delay model can be accurate without giving the internal details of a black box.
Reference: [13] <author> H. Yalcin and J. P. Hayes. </author> <title> Hierarchical timing analysis using conditional delays. </title> <booktitle> In Proceedings of IEEE/ACM International Conference on Computer-Aided Design, </booktitle> <pages> pages 371-377, </pages> <month> November </month> <year> 1995. </year>
Reference-contexts: Characterizing the condition of arrival times at the primary inputs that the falsity of a subgraph is guaranteed seems as difficult as performing functional timing analysis on the entire circuit. Yalcin and Hayes recently proposed in <ref> [13] </ref> a hierarchical timing analysis technique using conditional delays. <p> It is, however, difficult to see what is the worst-case arrival behavior before analysis. These points were not mentioned in <ref> [13] </ref> unfortunately. Their experimental results on hierarchical analysis in fact are based on static sensitization, which is known to underapproximate delays. In this paper we propose a hierarchical timing analysis technique for combinational circuits under the XBD0 delay mode [8]. <p> n and jT j denote the number of inputs of the subcircuit and the number of timing tuples in T respectively. jT j is typically a small constant like 1 or 2. 5 If T exact is used instead of T approx , one can construct the correct conditional delay <ref> [13] </ref> of the module under the XBD0 model. In general, each output has more than one conditional delay unlike the formulation in [13]. 3.3 Timing Characterization of Circuits Composed of Subcircuits So far we have considered the case where a given circuit has a single level of hierarchy. <p> j is typically a small constant like 1 or 2. 5 If T exact is used instead of T approx , one can construct the correct conditional delay <ref> [13] </ref> of the module under the XBD0 model. In general, each output has more than one conditional delay unlike the formulation in [13]. 3.3 Timing Characterization of Circuits Composed of Subcircuits So far we have considered the case where a given circuit has a single level of hierarchy.
References-found: 13

