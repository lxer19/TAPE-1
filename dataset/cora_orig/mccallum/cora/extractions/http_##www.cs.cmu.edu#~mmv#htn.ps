URL: http://www.cs.cmu.edu/~mmv/htn.ps
Refering-URL: http://www.ai.sri.com/~wilkins/planning.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: blythe@cs.cmu.edu veloso@cs.cmu.edu perezab@cs.bc.edu  
Title: Comparing the Representional Power of PRODIGY and HTN Planners:  
Author: Jim Blythe Manuela Veloso Alicia Perez 
Address: Pittsburgh PA 15213 Chestnut Hill MA 02167  
Affiliation: Computer Science Department Computer Science Department Carnegie Mellon University Boston College  
Abstract: Results from an Empirical Case Study using Abstract We describe our experience with converting two SIPE domains to use in PRODIGY. We enumerate several features of the hierarchical task network (HTN) representation and their corresponding definition in the PRODIGY representation. This empirical study led us to address the general question of expressivity of each of these planning frameworks. We present a general domain-independent transformation from a domain representation of a formalized HTN planner into PRODIGY. We identify the capabilities of PRODIGY that make this transformation feasible. 
Abstract-found: 1
Intro-found: 1
Reference: [ Bienkowski, 1994 ] <author> Marie A. Bienkowski. </author> <title> Generative planning to support joint military operations planning. </title> <type> Technical Report ITAD-2062-PA-94-107, </type> <institution> Artificial Intelligence Center, SRI International, </institution> <address> Menlo Park, CA, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: The reported results are better understood in the context of the sequence of events that our investigation followed. Through a common interest with the SIPE group in a realistic logistics transportation domain, we engaged in the translation to Prodigy4.0 of the SIPE SOCAP domain <ref> [ Bienkowski, 1994 ] </ref> . We successfully converted of a series of representational issues. This experience was repeated with another of SIPE's domains, namely the oil-spill domain. In this paper we discuss the representational issues involved in the translation of the SIPE operators.
Reference: [ Currie and Tate, 1991 ] <author> Ken Currie and Austin Tate. O-Plan: </author> <title> the open planning architecture. </title> <journal> Artificial Intelligence, </journal> <volume> 52 </volume> <pages> 49-86, </pages> <year> 1991. </year>
Reference-contexts: In a simple view, generative planners have been divided in three different styles: hierarchical task network (HTN), plan-space and state-space. This categorization is associated with existing implemented systems, for example SIPE [ Wilkins, 1988 ] , NONLIN [ Tate, 1977 ] , and O-Plan <ref> [ Currie and Tate, 1991 ] </ref> are considered HTN planners, SNLP [ McAllester and Rosen-blitt, 1991 ] and UCPOP [ Penberthy and Weld, 1992 ] plan-space planners, and PRODIGY4.0 [ Veloso et al., 1995 ] is viewed as a state-space planner.
Reference: [ Erol et al., 1992 ] <author> Kutluhan Erol, Dana S. Nau, and V. S. Subrahmanian. </author> <title> When is planning decidable? In Jim Hendler, editor, </title> <booktitle> Proc. First International Conference on Artificial Intelligence Planning Systems, </booktitle> <pages> pages 222-227, </pages> <address> College Park, Maryland, June 1992. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Planning consists of making reductions of an initial task network until there are no non-primitive nodes and satisfying the constraints in the resulting task network. v1 v2). Using the language L Erol et al prove that HTN domains without function symbols are semi-decidable. Since <ref> [ Erol et al., 1992 ] </ref> proves that STRIPS-style planning without function symbols is decidable, it can be concluded that HTN planners, without functions, are more expressive that STRIPS-style planners without functions.
Reference: [ Erol et al., 1994 ] <author> Kutluhan Erol, James Hendler, and Dana S. Nau. </author> <title> Htn planning: Complexity and expressivity. </title> <booktitle> In Proc. Twelfth National Conference on Artificial Intelligence, </booktitle> <pages> pages 1123-1128. </pages> <publisher> AAAI Press, </publisher> <year> 1994. </year>
Reference-contexts: Consequently the issues we concentrate on are how the efficiency 1 features of the two may interrelate and how easily different kinds of constraints can be incorporated in the different planners. As Erol et al have shown <ref> [ Erol et al., 1994 ] </ref> , the assumption that the planners have equivalent representational power relies on the use of variables and functional constraints in the state-space planner. <p> If that is the case, the constraint could be removed and represented as a control rule that select the seaport bindings given that a previous goal is to deter a threat using navy forces. 8 language <ref> [ Erol et al., 1994 ] </ref> , and we use this language to explore the expressivity of HTN planners and PRODIGY. The description that follows is a shortened version of the description that appears in [ Erol et al., 1994 ] . <p> given that a previous goal is to deter a threat using navy forces. 8 language <ref> [ Erol et al., 1994 ] </ref> , and we use this language to explore the expressivity of HTN planners and PRODIGY. The description that follows is a shortened version of the description that appears in [ Erol et al., 1994 ] . Briefly, the language L contains an infinite set of variable symbols V , a set C of constant symbols, a set P of predicate symbols and a set F of primitive task symbols representing actions. <p> For example, Figure 5 shows the task network for a method to reduce the node matching achieve (on (v1; v2)), taken from <ref> [ Erol et al., 1994 ] </ref> . Planning consists of making reductions of an initial task network until there are no non-primitive nodes and satisfying the constraints in the resulting task network. v1 v2). Using the language L Erol et al prove that HTN domains without function symbols are semi-decidable.
Reference: [ McAllester and Rosenblitt, 1991 ] <author> David McAllester and David Rosenblitt. </author> <title> Systematic nonlinear planning. </title> <booktitle> In Proceedings of the Ninth National Conference on Artificial Intelligence, </booktitle> <pages> pages 634-639, </pages> <address> Anaheim, CA, </address> <year> 1991. </year>
Reference: [ Penberthy and Weld, 1992 ] <author> J. Scott Penberthy and Daniel S. Weld. UCPOP: </author> <title> A sound, complete, partial order planner for ADL. </title> <editor> In B. Nebel, C. Rich, and W. Swartout, editors, </editor> <booktitle> Principles of Knowledge Representation and Reasoning: Proceedings of the Third International Conference, KR92, </booktitle> <pages> pages 103-114, </pages> <address> San Mateo, CA, October 1992. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: This categorization is associated with existing implemented systems, for example SIPE [ Wilkins, 1988 ] , NONLIN [ Tate, 1977 ] , and O-Plan [ Currie and Tate, 1991 ] are considered HTN planners, SNLP [ McAllester and Rosen-blitt, 1991 ] and UCPOP <ref> [ Penberthy and Weld, 1992 ] </ref> plan-space planners, and PRODIGY4.0 [ Veloso et al., 1995 ] is viewed as a state-space planner. In the planning research community there have been several attempts to try to find a planning strategy that universally dominates the other strategies.
Reference: [ Tate, 1977 ] <author> Austin Tate. </author> <title> Generating project networks. </title> <booktitle> In Proceedings of the Fifth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 888-900, </pages> <address> Cambridge, MA, </address> <year> 1977. </year>
Reference-contexts: In a simple view, generative planners have been divided in three different styles: hierarchical task network (HTN), plan-space and state-space. This categorization is associated with existing implemented systems, for example SIPE [ Wilkins, 1988 ] , NONLIN <ref> [ Tate, 1977 ] </ref> , and O-Plan [ Currie and Tate, 1991 ] are considered HTN planners, SNLP [ McAllester and Rosen-blitt, 1991 ] and UCPOP [ Penberthy and Weld, 1992 ] plan-space planners, and PRODIGY4.0 [ Veloso et al., 1995 ] is viewed as a state-space planner.
Reference: [ Veloso and Blythe, 1994 ] <author> Manuela Veloso and Jim Blythe. Linkability: </author> <title> Examining causal link commitments in partial-order planning. </title> <booktitle> In Proceedings of the Second International Conference on AI Planning Systems, </booktitle> <pages> pages 170-175, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: For example, the statement that plan-space is universally more efficient than state-space planning may be correct for some version of state-space planning. However the inference that SNLP is universally more efficient than PRODIGY4.0 is incorrect <ref> [ Veloso and Blythe, 1994 ] </ref> . We have instead been studying the trade-offs among the planning styles in the hope of exploiting their individual strengths in the conditions under which they apply.
Reference: [ Veloso et al., 1995 ] <author> Manuela Veloso, Jaime Carbonell, M. Alicia Perez, Daniel Borrajo, Eugene Fink, and Jim Blythe. </author> <title> Integrating planning and learning: The 13 PRODIGY architecture. </title> <journal> Journal of Experimental and Theoretical Artificial Intelligence, </journal> <volume> 7(1) </volume> <pages> 81-120, </pages> <year> 1995. </year>
Reference-contexts: associated with existing implemented systems, for example SIPE [ Wilkins, 1988 ] , NONLIN [ Tate, 1977 ] , and O-Plan [ Currie and Tate, 1991 ] are considered HTN planners, SNLP [ McAllester and Rosen-blitt, 1991 ] and UCPOP [ Penberthy and Weld, 1992 ] plan-space planners, and PRODIGY4.0 <ref> [ Veloso et al., 1995 ] </ref> is viewed as a state-space planner. In the planning research community there have been several attempts to try to find a planning strategy that universally dominates the other strategies.
Reference: [ Wilkins, 1988 ] <author> David E. Wilkins. </author> <title> Practical Planning: Extending the Classical AI Planning Paradigm. </title> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA, </address> <year> 1988. </year> <month> 14 </month>
Reference-contexts: 1 Introduction One of our research interests has been the understanding of the relationships between different kinds of planning. In a simple view, generative planners have been divided in three different styles: hierarchical task network (HTN), plan-space and state-space. This categorization is associated with existing implemented systems, for example SIPE <ref> [ Wilkins, 1988 ] </ref> , NONLIN [ Tate, 1977 ] , and O-Plan [ Currie and Tate, 1991 ] are considered HTN planners, SNLP [ McAllester and Rosen-blitt, 1991 ] and UCPOP [ Penberthy and Weld, 1992 ] plan-space planners, and PRODIGY4.0 [ Veloso et al., 1995 ] is viewed as
References-found: 10

