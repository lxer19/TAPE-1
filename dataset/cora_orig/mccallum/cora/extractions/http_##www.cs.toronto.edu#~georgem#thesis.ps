URL: http://www.cs.toronto.edu/~georgem/thesis.ps
Refering-URL: http://www.cs.toronto.edu/~georgem/
Root-URL: http://www.cs.toronto.edu
Title: WebSQL An SQL-like Query Language for the World Wide Web  
Author: by George Andrei Mihaila 
Degree: A thesis submitted in conformity with the requirements for the Degree of Master of Science, Graduate Department of Computer Science, in the  
Note: c Copyright by George Andrei Mihaila 1996  
Address: Toronto  
Affiliation: University of  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> C. Beeri and Y. Kornatzky, </author> <title> A logical query language for hypertext systems. </title> <booktitle> In Proceeding of the European Conference on Hypertext (1990), </booktitle> <publisher> Cambridge University Press, </publisher> <pages> pp. 67-80. </pages>
Reference-contexts: Several approaches to structure-specifying queries exist: in [4] Consens and Mendelzon introduce a graphic query language (Graphlog) used to define graph patterns; Beeri and Kornatzky <ref> [1] </ref> define a logic-based language to state structure-specifying queries on a static hypertext structure. Many attempts to construct comprehensive keyword indexes of the World Wide Web are currently in progress. These indexes are built by automatic Web traversal agents known as robots.
Reference: [2] <author> V. Christophides, S. Abiteboul, S. Cluet and M. Scholl, </author> <title> From Structured Documents to Novel Query Facilities, </title> <booktitle> In Proc. of SIGMOD 94, 1994. ACM, </booktitle> <pages> pp. 313-324. </pages>
Reference: [3] <author> Charles N. Fischer and Richard J. LeBlanc, Jr., </author> <title> Crafting a Compiler with C. </title> <publisher> The Benhjamin/Cummings Publishing Company, </publisher> <year> 1991. </year>
Reference-contexts: Clearly, [s 0 ] = L (M ). Similar definitions apply for a DFA. 31 Given a regular expression R over , an *-free NDFA M = (S; ; ffi; s 0 ; F ) which accepts L (R) can be constructed in polynomial time <ref> [3] </ref>. From now on, we will assume that all NDFAs are *-free. Example 4.1 Consider the regular expression R = a (b fl jc fl ).
Reference: [4] <author> M. P. Consens and A. O. Mendelzon, </author> <title> Expressing structural hypertext queries in Graphlog. </title> <booktitle> In Hypertext'89, </booktitle> <year> (1989), </year> <pages> pp. 269-292. </pages>
Reference-contexts: Several approaches to structure-specifying queries exist: in <ref> [4] </ref> Consens and Mendelzon introduce a graphic query language (Graphlog) used to define graph patterns; Beeri and Kornatzky [1] define a logic-based language to state structure-specifying queries on a static hypertext structure. Many attempts to construct comprehensive keyword indexes of the World Wide Web are currently in progress.
Reference: [5] <author> R. H. Guting, </author> <title> Gral: An Extensible Relational Database System for Geometric Applications. </title> <booktitle> Proc. of the 15th Intl. Conf. on Very Large Data Bases, </booktitle> <year> 1989, </year> <pages> pp. 33-44. </pages>
Reference-contexts: While current spatial models (e.g. <ref> [5] </ref>, [14], [15], [16]) can represent the geometry of these networks, there are no built-in methods for exploring their connectivity. This has motivated recently several approaches for designing systems that would integrate graph specific algorithms into databases [6].
Reference: [6] <author> R. H.Guting, GraphDB: </author> <title> Modeling and Querying Graphs in Databases. </title> <booktitle> Proc. of the 20th Intl. Conf. on Very Large Data Bases, </booktitle> <year> 1994, </year> <pages> pp. 297-308. </pages>
Reference-contexts: While current spatial models (e.g. [5], [14], [15], [16]) can represent the geometry of these networks, there are no built-in methods for exploring their connectivity. This has motivated recently several approaches for designing systems that would integrate graph specific algorithms into databases <ref> [6] </ref>. We propose here a simple model that is comprehensive enough to capture all the aspects involved in querying the WWW. Simple Types Let T be a finite non-empty set whose elements are called simple types. Also, consider an infinite set D of data values.
Reference: [7] <author> F. G. </author> <title> Halasz, Reflections on notecards: Seven issues for the next generation of hypermedia systems. </title> <booktitle> In Communication of the ACM 31, 7 (1988), </booktitle> <pages> pp. 836-852. </pages>
Reference-contexts: invokes the appropriate search processes and synthesizes the results; 6 * the user interface, that accepts the query and presents the results; Each of these components is discussed in detail in the thesis. 1.2 Related Work The possibility of defining queries and views for hypertext systems was first investigated in <ref> [7] </ref>. Several approaches to structure-specifying queries exist: in [4] Consens and Mendelzon introduce a graphic query language (Graphlog) used to define graph patterns; Beeri and Kornatzky [1] define a logic-based language to state structure-specifying queries on a static hypertext structure.
Reference: [8] <author> M. Hasan, D. Vista, A. Mendelzon, </author> <title> Visual Web Surfing with Hy+, </title> <booktitle> In Proc. </booktitle> <address> CASCON'95, Toronto, Canada, </address> <pages> pp 218-227. 70 </pages>
Reference-contexts: This happens because the user only sees the current document and has no notion of the overall structure around it. To overcome this, several approaches have been made to build maps of the Web. For example, Hasan, Vista and Mendelzon <ref> [8] </ref> integrated a modified version of the Mosaic browser with the Hy+ hygraph editor that builds and displays an up to date map of the Web portion traversed in the current session.
Reference: [9] <author> M. Hasan, G. Golovchinsky, E. Noik, N. Charoenkitkarn, M. Chignell, A. Mendel--zon, D. Modjeska, </author> <title> Browsing Local and Global Information, </title> <booktitle> In Proc. </booktitle> <address> CAS-CON'95, Toronto, Canada, </address> <pages> pp. 228-240. </pages>
Reference-contexts: For example, Hasan, Vista and Mendelzon [8] integrated a modified version of the Mosaic browser with the Hy+ hygraph editor that builds and displays an up to date map of the Web portion traversed in the current session. Also, Hasan, Noik and others <ref> [9] </ref> built a software system called Multisurf that, among other features, can display a graphical representation of the traversed sub-graph together with several statistics. However, these systems require manual navigation in order to collect the data used to generate the maps. <p> Therefore, we added a "dump traversed graph" facility to the query processing engine that just exports the traversed sub-graph into a text file (in the format understood by Noik's graph editor <ref> [9] </ref>). We present below some of the maps we built this way. Example 6.8 Build a map of the ISG Technologies Inc. Web site. In order to generate the map we submitted the following WebSQL query and we used the side effect described above to export the graph data. <p> Also, selected parts of the graph can be hidden to reduce clutter. For more details about the interactive features of Noik's graph editor one can refer to <ref> [9] </ref>. 61 62 63 64 65 Chapter 7 Conclusions In this thesis we defined the formal concept of a virtual graph capturing the hypertext graph structure of the World Wide Web and we introduced an algebra that allows the formulation of both content and structure queries in this abstract setting.
Reference: [10] <author> J. Hopcroft and J. Ullman, </author> <title> Introduction to Automata Theory, Languages, and Computation, </title> <publisher> Addison-Wesley, </publisher> <address> reading, MA, </address> <year> 1979. </year>
Reference-contexts: The algorithm is a slightly modified version of the algorithm that marks pairs of in equivalent states of Hopcroft and Ullman <ref> [10] </ref>. 32 Algorithm S: Compute the suffix language containment relation for a DFA. INPUT: DFA M = (S; ; ffi; s 0 ; F ). OUTPUT: The relation Suf f ix M S fi S.
Reference: [11] <author> D. Konopnicki and O. Shmueli, W3QS: </author> <title> A Query System for the World Wide Web, </title> <booktitle> In Proc. of VLDB'95. </booktitle>
Reference-contexts: Many attempts to construct comprehensive keyword indexes of the World Wide Web are currently in progress. These indexes are built by automatic Web traversal agents known as robots. For an up-to-date list of all known robots, one can see, for example [22]. Konopnicki and Shmueli define in <ref> [11] </ref> a declarative query language for the Web called W3QL. In order to define structure-specifying queries they introduce a language for specifying a restricted class of graph patterns. In this thesis we introduce a more expressive graph pattern definition language using regular expressions.
Reference: [12] <author> A. O. Mendelzon and P. T. Wood, </author> <title> Finding Regular Simple Paths in Graph Databases, </title> <journal> SIAM J. Comp. </journal> <year> (1995) </year> <month> 24:6. </month>
Reference-contexts: Definition 4.4 Given a DFA M = (S; ; ffi; s 0 ; F ), the suffix containment relation Suf f ix M is defined as follows: Suf f ix M = f (s; t) 2 S fi Sj [s] [t]g We present below an algorithm (Mendelzon and Wood <ref> [12] </ref>) that computes Suf f ix M . The algorithm is a slightly modified version of the algorithm that marks pairs of in equivalent states of Hopcroft and Ullman [10]. 32 Algorithm S: Compute the suffix language containment relation for a DFA. <p> Note that we can do that because the set of outgoing edges is computable for every node in the virtual graph . 4.1.3 An Evaluation Algorithm Mendelzon and Wood give in <ref> [12] </ref> an algorithm for finding all the simple paths matching a regular expression R in a labeled graph. The algorithm traverses paths in the graph, using a DFA M accepting L (R) to control the search by marking nodes as they are visited. <p> The function FIRST applied to marking set CM [v] returns the first state marking v on the current path, or false if there is no marking. For a complete description and correctness proof of this algorithm one can see <ref> [12] </ref>. Algorithm C: Evaluation of a path regular expression query on a virtual graph. INPUT: Virtual graph = (ae Node ; ae Link ; P Node ; P Link ), Query Q uR = fx : N odejP ath (u; R; x). <p> Then we described an algorithm for finding all the simple paths matching a path regular expression R in a virtual graph . The algorithm, proposed by Mendelzon and Wood <ref> [12] </ref>, traverses paths in , using a deterministic finite automaton M accepting L (R) to control the search by marking nodes as they are visited. Then, starting from the algebra introduced before, we used an SQL-like notation to define WebSQL, our specialized query language for the World Wide Web.
Reference: [13] <author> J. Nielsen, </author> <title> Hypertext and Hypermedia, </title> <publisher> Academic Press, </publisher> <year> 1990. </year>
Reference-contexts: Although this goal was never reached, parts of the Xanadu system do work and have been incorporated in a product from the Xanadu Operating Company since 1990. For more details about the history of hypertext, see <ref> [13] </ref>. The simplest way to define hypertext is by comparison with standard text. The order in which a traditional text (say, a book) is read is sequential: one first reads 9 the first chapter, then the second, the third and so on.
Reference: [14] <author> J. A. Orenstein, F. A. Manola, </author> <title> PROBE Spatial Data Modeling and Query Processing in an Image Database Application. </title> <journal> In IEEE Trans. on Software Engineering 14 (1988),pp. </journal> <pages> 611-629. </pages>
Reference-contexts: While current spatial models (e.g. [5], <ref> [14] </ref>, [15], [16]) can represent the geometry of these networks, there are no built-in methods for exploring their connectivity. This has motivated recently several approaches for designing systems that would integrate graph specific algorithms into databases [6].
Reference: [15] <author> N. Roussopoulos, C. Faloutsos, and T. Sellis, </author> <title> An Efficient Pictorial Database System for PSQL, </title> <journal> In IEEE Trans. on Software Engineering,, </journal> <volume> 14, (5), </volume> <month> May </month> <year> 1988, </year> <pages> pp. 639-650. </pages>
Reference-contexts: While current spatial models (e.g. [5], [14], <ref> [15] </ref>, [16]) can represent the geometry of these networks, there are no built-in methods for exploring their connectivity. This has motivated recently several approaches for designing systems that would integrate graph specific algorithms into databases [6].
Reference: [16] <author> P. Svensson and Z. Huang, Geo-SAL: </author> <title> A Query Language for Spatial Data Analysis. </title> <booktitle> In Proc. </booktitle> <address> SSD 91 (Zurich, Switzerland), </address> <year> 1991, </year> <pages> pp. 119-140. </pages>
Reference-contexts: While current spatial models (e.g. [5], [14], [15], <ref> [16] </ref>) can represent the geometry of these networks, there are no built-in methods for exploring their connectivity. This has motivated recently several approaches for designing systems that would integrate graph specific algorithms into databases [6].
Reference: [17] <institution> UR* and The Names and Addresses of WWW objects. </institution> <note> At "http://www.w3.org/hypertext/WWW/Addressing/Addressing.html". </note>
Reference-contexts: A complete reference about the WWW addressing conventions may be found in <ref> [17] </ref>. Example 2.1 The following strings are examples of URLs: * http://www.cdf.toronto.edu/DCS/Grad/Grad-Intro.html * ftp://prep.ai.mit.edu/pub/gnu/etc/DISTRIB * gopher://gopher.toronto.edu/ In our thesis we will concentrate mostly on HTML documents accessible through HTTP. Let us take a closer look at the structure of an HTML document.
Reference: [18] <institution> HyperText Markup Language (HTML): </institution> <note> Working and Background Materials. At "http://www.w3.org/pub/WWW/MarkUp". </note>
Reference-contexts: Let us take a closer look at the structure of an HTML document. For example, let us consider the document in Figure 2.2. When viewed by a Web browser, this document is formatted as in Figure 2.3. For a complete reference of the HTML language one can see <ref> [18] </ref>. In order to analyze the hypertext structure of the Web all we need to know is the way links between documents are specified. The only HTML construct serving this purpose is the Anchor Tag (&lt; A &gt;).
Reference: [19] <author> Java (tm): </author> <title> Programming for the Internet. </title> <note> At "http://java.sun.com". 71 </note>
Reference-contexts: The remainder of the chapter presents a way of building and visualizing a local map of the Web by using an appropriate WebSQL query and a graph editor. 6.1 The User Interface Both the WebSQL compiler and query executor are implemented entirely in Java <ref> [19] </ref>, the language recently introduced by Sun Microsystems with the specific purpose of adding executable content to Web documents.
Reference: [20] <institution> Mosaic for X version 2.0 Fill-Out Form Support. </institution> <note> At "http://www.ncsa.uiuc.edu/SDG/Software/Mosaic/Docs/fill-out-forms/overview.html" </note>
Reference-contexts: that our engine needs in order to assemble the query: ACTION is the URL of the CGI script that processes the query, KEY is the name of the keyword input field, and METHOD is the method used to pass the query to the server (can be GET or POST, see <ref> [20] </ref>). For example, to send a query with the keyword "automobile" to Yahoo, our engine generates the URL "http://search.yahoo.com/bin/search?p=automobile" and uses the method GET to retrieve the answer from the server.
Reference: [21] <institution> Internet Tools Summary. </institution> <note> At "http://www.rpi.edu/Internet/Guides/decemj/itools/internet-tools.html" </note>
Reference: [22] <institution> List of Robots. </institution> <note> At "http://info.webcrawler.com/mak/projects/robots/active.html" 72 </note>
Reference-contexts: Many attempts to construct comprehensive keyword indexes of the World Wide Web are currently in progress. These indexes are built by automatic Web traversal agents known as robots. For an up-to-date list of all known robots, one can see, for example <ref> [22] </ref>. Konopnicki and Shmueli define in [11] a declarative query language for the Web called W3QL. In order to define structure-specifying queries they introduce a language for specifying a restricted class of graph patterns. In this thesis we introduce a more expressive graph pattern definition language using regular expressions.
References-found: 22

