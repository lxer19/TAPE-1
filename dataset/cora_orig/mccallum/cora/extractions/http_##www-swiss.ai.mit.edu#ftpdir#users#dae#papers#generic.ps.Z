URL: http://www-swiss.ai.mit.edu/ftpdir/users/dae/papers/generic.ps.Z
Refering-URL: http://www-swiss.ai.mit.edu/ftpdir/users/dae/home.html
Root-URL: 
Email: espinosa@cs.columbia.edu  
Title: Language Extensibility via First-class Interpreters and Constructive Modules  
Author: David Espinosa 
Degree: Ph.D. Thesis Proposal  
Date: April 11, 1993  
Address: New York, NY 10027  
Affiliation: Columbia University Department of Computer Science  
Abstract: 1 Abstract 
Abstract-found: 1
Intro-found: 1
Reference: [ACS92] <author> Norman Adams, Pavel Curtis, and Mike Spreitzer. </author> <title> First-class data-type representations in schemexerox. </title> <note> To be published, </note> <month> November </month> <year> 1992. </year>
Reference: [Ada91] <author> Stephen R. Adams. </author> <title> Modular Grammars for Programming Language Prototyping. </title> <type> PhD thesis, </type> <institution> University of Southampton, </institution> <month> March </month> <year> 1991. </year>
Reference: [App85] <author> Andrew Appel. </author> <title> Compile-time evaluation and code generation for semantics-directed compilers. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, Carnegie Mellon University, </institution> <year> 1985. </year>
Reference: [AS85] <author> Hal Abelson and Gerald Jay Sussman. </author> <title> Structure and Interpretation of Computer Programs. </title> <publisher> MIT Press / McGraw Hill, </publisher> <year> 1985. </year>
Reference: [BA81] <author> J. Dean Brock and William B. Ackermann. </author> <title> Scenarios: </title> <booktitle> A Model of Non-Determinate Computation, </booktitle> <pages> pages 252-259. </pages> <booktitle> Lecture Notes in Computer Science, number 107. </booktitle> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1981. </year>
Reference: [Baw88] <author> Alan Bawden. </author> <title> Reification without evaluation. </title> <booktitle> In Conference Record of the 1988 ACM Symposium on Lisp and Functional Programming, </booktitle> <pages> pages 342-351, </pages> <address> Snowbird, Utah, </address> <month> July </month> <year> 1988. </year>
Reference: [Bro83] <author> Jarvis Dean Brock. </author> <title> A Formal Model of Non-determinate Dataflow Computation. </title> <type> PhD thesis, </type> <institution> MIT Lab for Computer Science, </institution> <month> August </month> <year> 1983. </year> <month> LCS-TR-309. </month>
Reference: [Cli81] <author> William D. Clinger. </author> <title> Foundations of Actor Semantics. </title> <type> PhD thesis, </type> <institution> MIT Artificial Intelligence Lab, </institution> <month> May </month> <year> 1981. </year> <month> AI-TR-633. </month>
Reference: [Cli82] <author> William D. Clinger. </author> <title> Non-deterministic call by need is neither lazy nor by name. </title> <booktitle> In Conference Record of the 1982 ACM Symposium on Lisp and Functional Programming, </booktitle> <pages> pages 226-234, </pages> <year> 1982. </year>
Reference: [CR90] <author> Pavel Curtis and Jim Rauen. </author> <title> A module system for Scheme. </title> <booktitle> In Conference Record of the 1990 ACM Symposium on Lisp and Functional Programming, </booktitle> <pages> pages 13-19, </pages> <address> Nice, France, </address> <year> 1990. </year> <month> 40 </month>
Reference: [CW85] <author> Luca Cardelli and Peter Wegner. </author> <title> On understanding types, data abstraction, and polymorphism. </title> <journal> Computing Surveys, </journal> <volume> 17(4) </volume> <pages> 471-522, </pages> <month> December </month> <year> 1985. </year>
Reference: [Fil89] <author> Andrzej Filinski. </author> <title> Declarative continuations and categorical duality. </title> <type> Master's thesis, </type> <institution> Computer Science Department, University of Copenhagen, </institution> <month> August </month> <year> 1989. </year> <type> DIKU report 89/11. </type>
Reference: [GB86] <author> Cordell C. Greene and David R. Barstow. </author> <title> On program synthesis knowledge. </title> <editor> In Charles Rich and Richard C. Waters, editors, </editor> <booktitle> Readings in Artificial Intelligence and Software Engineering, chapter 26, </booktitle> <pages> pages 455-474. </pages> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos, CA, </address> <year> 1986. </year>
Reference: [Gol85] <author> Adele Goldberg. </author> <title> Smalltalk-80: the Language and its Implementation. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1985. </year>
Reference: [Haa92] <author> Kenneth Haase. </author> <note> A short description of framer. Available by ftp from cecelia.media.mit.edu, </note> <month> January </month> <year> 1992. </year>
Reference: [Hen82] <author> Peter Henderson. </author> <title> Functional Programming and its Applications. </title> <publisher> Cambridge University Press, </publisher> <address> New York, </address> <year> 1982. </year>
Reference: [HS88] <author> Matthew Halfant and Gerald Jay Sussman. </author> <title> Abstraction in numerical methods. </title> <booktitle> In Conference Record of the 1988 ACM Symposium on Lisp and Functional Programming, </booktitle> <pages> pages 1-7, </pages> <address> Snowbird, Utah, </address> <month> July </month> <year> 1988. </year>
Reference: [Hug90] <author> John Hughes. </author> <title> Why functional programming matters. </title> <editor> In David A. Turner, editor, </editor> <booktitle> Research Topics in Functional Programming, chapter 2, </booktitle> <pages> pages 17-42. </pages> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1990. </year>
Reference: [JF92] <author> Stanley Jefferson and Daniel P. Friedman. </author> <title> A simple reflective interpreter. </title> <booktitle> In Proceedings of the International Workshop on Reflection and Meta-Level Architecture, </booktitle> <pages> pages 48-58, </pages> <address> Tama-City, Tokyo, </address> <month> November </month> <year> 1992. </year>
Reference: [Kan86] <author> Elaine Kant. </author> <title> On the efficient synthesis of efficent programs. </title> <editor> In Charles Rich and Richard C. Waters, editors, </editor> <booktitle> Readings in Artificial Intelligence and Software Engineering, chapter 8, </booktitle> <pages> pages 157-184. </pages> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos, CA, </address> <year> 1986. </year> <month> 41 </month>
Reference: [KdRB91] <author> Gregor Kiczales, Jim des Rivieres, and Daniel G. Bobrow. </author> <title> The Art of the Metaobject Protocol. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1991. </year>
Reference: [Kic92] <author> Gregor Kiczales. </author> <title> Towards a new model of abstraction in software engineering. </title> <booktitle> In Proceedings of the International Workshop on Reflection and Meta-Level Architecture, </booktitle> <pages> pages 1-11, </pages> <address> Tama-City, Tokyo, </address> <month> November </month> <year> 1992. </year>
Reference: [Kos79] <author> Paul Roman Kosinski. </author> <title> Denotational Semantics of Determinate and Non-Determinate Dataflow Programs. </title> <type> PhD thesis, </type> <institution> MIT Lab for Computer Science, </institution> <month> May </month> <year> 1979. </year> <month> LCS-TR-220. </month>
Reference: [Lam88] <author> John Lamping. </author> <title> A unified system of parametrization for programming languages. </title> <booktitle> In Conference Record of the 1988 ACM Symposium on Lisp and Functional Programming, </booktitle> <pages> pages 316-326, </pages> <address> Snow-bird, Utah, </address> <month> July </month> <year> 1988. </year>
Reference: [Lee89] <author> Peter Lee. </author> <title> Realistic Compiler Generation. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1989. </year>
Reference: [LK] <author> John Lamping and Gregor Kiczales. </author> <title> A transfinite reflective tower. In a hack volume dedicated to Brian Smith on his 40th birthday. </title>
Reference: [LKRR92] <author> John Lamping, Gregor Kiczales, Luis Rodriguez, and Eric Ruf. </author> <title> An architecture for an open compiler. </title> <booktitle> In Proceedings of the International Workshop on Reflection and Meta-Level Architecture, </booktitle> <pages> pages 95-106, </pages> <address> Tama-City, Tokyo, </address> <month> November </month> <year> 1992. </year>
Reference: [Mac84] <author> David MacQueen. </author> <title> Modules for standard ML. </title> <booktitle> In Conference Record of the 1984 ACM Symposium on Lisp and Functional Programming, </booktitle> <pages> pages 198-207, </pages> <address> Austin, Texas, </address> <month> August </month> <year> 1984. </year>
Reference: [McC63] <author> John McCarthy. </author> <title> A basis for a mathematical theory of computation. </title> <editor> In P. Braffort and D. Hirschberg, editors, </editor> <booktitle> Computer Programming and Formal Systems. </booktitle> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1963. </year>
Reference: [Mog89] <author> Eugenio Moggi. </author> <title> Computational lambda-calculus and monads. </title> <booktitle> In Symposium on Logic in Computer Science, Asilomar, </booktitle> <address> CA, </address> <month> June </month> <year> 1989. </year>
Reference: [MR91] <author> James S. Miller and Guillermo J. Rozas. </author> <title> Free variables and first--class environments. </title> <journal> Lisp and Symbolic Computation, </journal> <volume> 4 </volume> <pages> 107-141, </pages> <year> 1991. </year>
Reference: [Ous90] <author> John K. Ousterhout. </author> <title> TCL: an embeddable command language. </title> <booktitle> In Proceedings of the 1990 Winter USENIX Conference, </booktitle> <year> 1990. </year>
Reference: [Pie91] <author> Benjamin C. Pierce. </author> <title> Basic Category Theory for Computer Scientists. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1991. </year>
Reference: [PS88] <author> Prakash Panangaden and Vasant Shanbhogue. </author> <title> McCarthy's amb cannot implement fair merge. </title> <type> Technical report, </type> <institution> Computer Science Department, Cornell University, </institution> <month> May </month> <year> 1988. </year>
Reference: [Ree92] <author> Jonathan Rees. </author> <title> Another module system for Scheme. </title> <note> To be published, </note> <month> January </month> <year> 1992. </year>
Reference: [RK] <author> Jonathan Rees and Richard Kelsey. Scheme48. </author> <note> Available by ftp from altdorf.ai.mit.edu. </note>
Reference: [RW92] <author> Martin Reiser and Niklaus Wirth. </author> <title> Programming in Oberon. </title> <publisher> Addison-Wesley, </publisher> <address> New York, </address> <year> 1992. </year>
Reference: [Sch84] <author> Richard Schooler. </author> <title> Partial evaluation as a means of language extensibility. </title> <type> Master's thesis, </type> <institution> MIT Laboratory for Computer Science, </institution> <month> August </month> <year> 1984. </year> <month> LCS-TR-324. </month>
Reference: [SJ92] <author> John Simmons and Stanley Jefferson. </author> <title> Language extension via first-class interpreters. </title> <booktitle> In Proceedings of the International Workshop on Reflection and Meta-Level Architecture, </booktitle> <pages> pages 59-59, </pages> <address> Tama-City, Tokyo, </address> <month> November </month> <year> 1992. </year>
Reference: [Smi84] <author> Brian Cantwell Smith. </author> <title> Reflection and semantics in Lisp. </title> <booktitle> In Proceedings of the Eleventh Annual ACM Symposium on Principles of Programming Languages, </booktitle> <pages> pages 23-35, </pages> <year> 1984. </year>
Reference: [TH92] <author> Steven W. K. Tjiang and John L. Hennessy. </author> <title> Sharlit a tool for building optimizers. </title> <booktitle> In Proceedings of the ACM SIGPLAN 1992 Conference on Programming Language Design and Implementation, </booktitle> <pages> pages 82-93, </pages> <address> San Francisco, CA, </address> <month> June </month> <year> 1992. </year> <month> 43 </month>
Reference: [Tof90] <author> Mads Tofte. </author> <title> Compiler Generators. </title> <journal> EATCS monographs on theo-retical computer science, </journal> <volume> volume 19. </volume> <publisher> Springer Verlag, </publisher> <address> New York, </address> <year> 1990. </year>
Reference: [US87] <author> David Ungar and Randall B. Smith. </author> <title> Self: The power of simplicity. </title> <booktitle> In ACM Conference on Object-Oriented Programming, Systems, Languages, and Applications, </booktitle> <pages> pages 227-242, </pages> <month> October </month> <year> 1987. </year>
Reference: [Wad87] <author> Philip Wadler. </author> <title> A critique of Abelson and Sussman, or why calculating is better than scheming. </title> <journal> SIGPLAN Notices, </journal> <volume> 22(3) </volume> <pages> 83-94, </pages> <month> March </month> <year> 1987. </year>
Reference: [Wad92] <editor> Philip Wadler. </editor> <booktitle> The essence of functional programming. In Proceedings of the Nineteenth Annual ACM Symposium on Principles of Programming Languages, </booktitle> <pages> pages 1-14, </pages> <address> Albuquerque, NM, </address> <month> Jan-uary </month> <year> 1992. </year>
Reference: [Wan84] <author> Mitchell Wand. </author> <title> A semantic prototyping system. </title> <booktitle> In Proceedings of the SIGPLAN 1984 Symposium on Compiler Construction, </booktitle> <pages> pages 213-221, </pages> <month> June </month> <year> 1984. </year>
Reference: [Wei] <author> Daniel Weise. </author> <title> Notes for a course on programming languages. </title> <type> Unpublished manuscript. </type>
Reference: [WF88] <author> Mitchell Wand and Daniel P. Friedman. </author> <title> The mystery of the tower revealed: a non-reflective description of the reflective tower. </title> <journal> Lisp and Symbolic Computation, </journal> <volume> 1(1) </volume> <pages> 11-38, </pages> <month> June </month> <year> 1988. </year>
Reference: [WS91] <author> Deborah Whitfield and Mary Lou Soffa. </author> <title> Automatic generation of global optimizers. </title> <booktitle> In Proceedings of the ACM SIGPLAN 1991 Conference on Programming Language Design and Implementation, </booktitle> <pages> pages 120-129, </pages> <address> Toronto, Ontario, Canada, </address> <month> June </month> <year> 1991. </year>
Reference: [Zab87] <author> Ramin Zabih. </author> <title> Non-deterministic Lisp with dependency-directed backtracking. </title> <booktitle> In Proceedings of the 1987 AAAI Conference, </booktitle> <pages> pages 59-64, </pages> <address> Seattle, WA, </address> <month> October </month> <year> 1987. </year>
Reference: [Zab88] <author> Ramin Zabih. </author> <title> Dependency-directed backtracking in nondeterministic Scheme. </title> <type> Master's thesis, </type> <institution> MIT Artificial Intelligence Lab, </institution> <month> August </month> <year> 1988. </year> <note> AI-TR-956. 44 </note>
Reference: [Zip93] <author> Richard Zippel. </author> <title> The Weyl computer algebra substrate. </title> <note> Available by ftp from cs.cornell.edu, January 1993. 45 </note>
References-found: 52

