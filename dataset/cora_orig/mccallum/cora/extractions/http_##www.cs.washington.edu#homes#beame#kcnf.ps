URL: http://www.cs.washington.edu/homes/beame/kcnf.ps
Refering-URL: http://www.cs.washington.edu/homes/beame/papers.html
Root-URL: 
Title: On the Complexity of Unsatisfiability Proofs for Random k-CNF Formulas  
Author: Paul Beame Richard Karp Toniann Pitassi Michael Saks 
Abstract: We study the complexity of proving unsatisfiability for random k-CNF formulas with clause density D = m=n where m is number of clauses and n is the number of variables. We prove the first nontrivial general upper bound, giving algorithms that, in particular, for k = 3 produce refutations almost certainly in time 2 O(n=D) . This is polynomial when m n 2 = logn. We show that our upper bounds are tight for certain natural classes of Davis-Putnam algorithms. We show further that random 3-CNF formulas of clause density D almost certainly have no resolution refutation of size smaller than 2 W(n=D 4+e ) , which implies the same lower bound on any Davis-Putnam algorithm. We also give a much simpler argument based on a novel form of self-reduction that yields a slightly weaker 2 W(n=D 5+e ) lower bound. 
Abstract-found: 1
Intro-found: 1
Reference: [ASE92] <author> N. Alon, J. Spencer, and P. Erdos. </author> <title> The Probabilisitic Method. </title> <publisher> John Wiley and Sons, Inc., </publisher> <year> 1992. </year>
Reference-contexts: Also, when k = 3 we typically omit the superscript k. In general, we write F ~ F to mean F is a random formula selected according to distribution F . We make frequent use of two well-known tail bounds for the binomial distribution (see <ref> [ASE92] </ref>, Appendix A).
Reference: [AV79] <author> D. Angluin and L. Valiant. </author> <title> Fast probabilistic algo rithms for Hamiltonian circuits and matchings. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 18:155193, </volume> <year> 1979. </year>
Reference-contexts: This is just a natural extension of the similar (and more precise) equivalences for the random graph model as shown for example in <ref> [AV79] </ref>. We generally assume the distribution F k;n m but will sometimes switch to the F k;n (p) distribution to simplify analysis. Also, when k = 3 we typically omit the superscript k.
Reference: [BFU93] <author> A. Broder, A. Frieze, and E. Upfal. </author> <title> On the satisfiability and maximum satisfiability of random 3-CNF formulas. </title> <month> January </month> <year> 1993. </year>
Reference-contexts: Lower bounds for random k-CNF formulas attest to the fact that the proof system in question is ineffective on average. A fundamental conjecture about the random k-CNF formula model, (see <ref> [CS88, BFU93, CF90, CR92, FS96, KKK96] </ref>) says that there is a constant c k , the satisfiability threshold, such that a random k-CNF formula of clause density D is almost certainly satisfiable for D &lt; c k (as n gets large), and almost certainly unsatisfiable if if D &gt; c k
Reference: [BP96] <author> P. Beame and T. Pitassi. </author> <title> Simplified and improved resolution lower bounds. </title> <booktitle> In 37th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 274282, </pages> <address> Burlington, VT, </address> <month> October </month> <year> 1996. </year> <note> IEEE. </note>
Reference-contexts: Fu [Fu95] extended the lower bounds to higher D in the case k 5, and Beame and Pitassi <ref> [BP96] </ref> improved the bounds further. In particular, for random 3-CNF they gave an almost certain W (2 n=D 5=2+e ) lower bound on res (F ), which gives a nontrivial lower bound for clause density D = O (n 1=(5+2e) ). <p> This uniformly subsumes and improves all previous lower bounds for such formulas. We first give a simple argument of a slightly weaker bound of 2 W (n=D 5+e ) via a novel form of random self-reduction. This proof follows the structure of the the lower bound proof from <ref> [BP96] </ref>, but replaces random restrictions by a technique called random augmentation, where we add randomly chosen clauses to the formula. This technique may be of independent interest. The stronger bound of 2 W (n=D 4+e ) is obtained by extending [BP96] in another direction, and is considerably more complicated. <p> follows the structure of the the lower bound proof from <ref> [BP96] </ref>, but replaces random restrictions by a technique called random augmentation, where we add randomly chosen clauses to the formula. This technique may be of independent interest. The stronger bound of 2 W (n=D 4+e ) is obtained by extending [BP96] in another direction, and is considerably more complicated. As this article was going to press, we learned of a recent result of Ben Sas-son and Wigderson which, by a simple modification of an algorithm in [CEI96, BP96] for constructing proofs, leads to a simple proof of the latter bound. <p> The stronger bound of 2 W (n=D 4+e ) is obtained by extending [BP96] in another direction, and is considerably more complicated. As this article was going to press, we learned of a recent result of Ben Sas-son and Wigderson which, by a simple modification of an algorithm in <ref> [CEI96, BP96] </ref> for constructing proofs, leads to a simple proof of the latter bound. <p> Our proof of this bound is fairly complicated, but we can obtain a somewhat weaker result (with the 4 replaced by a 5) via a significantly simpler argument. A key idea in our proof and that of <ref> [BP96] </ref> (which originates in [CS88]) is a result that provides a condition on a formula F so that any resolution proof of F has at least one large clause. <p> Theorem 8: Theorem 10: For each g &gt; 0, there exists a constant a g such that for all m n, if F ~ F n m then with probability 1 o (1), res (F) 2 a g n (n=m) 5+g The approach closely resembles the random restriction approach in <ref> [BP96] </ref>, with one big difference: instead of applying a random restriction to F, we augment F by adding random clauses. We say that a clause C subsumes a clause D if C D. <p> Let F ~ F n m , where m n. If s c e n (n=m) 2=(1e) then F satisfies both A (s) and B e (s) with probability 1 o (1) in s. This lemma is a special case of a lemma proved in <ref> [BP96] </ref>. (Note also that Lemma 16 below strengthens this.) Applying this lemma with m replaced by 2m we conclude that for any e &gt; 0 and for some constant b e &gt; 0, if s b e n (n=m) 2=(1e) then F ^ G satisfies A (s) and B e (s) <p> Then Pr F~F [res (F ) &lt; M=2] 2 (Pr F~F ;r~R [Fd r does not satisfy A (s) ] + Pr F~F ;r~R [Fd r does not satisfy B e (s) ]): While not stated explicitly in <ref> [BP96] </ref> this theorem captures the essence of their approach. We now sketch its application to lower bounding res (F ) for F ~ F n m . <p> A fair distribution that satisfies R fl (b; w) is easily seen to satisfy R (b; 2 w1 ). So we will show that R U t (F ) almost certainly satisfies R fl (b; w) for some appropriate b; w. Using a simple analysis as in <ref> [BP96] </ref>, one can show that R t has property R fl (b; w), where w is Cbt=n for some constant C.
Reference: [CA96] <author> J.M. Crawford and L.D. Auton. </author> <title> Experimental results on the crossover point in random 3SAT. </title> <journal> Artificial Intelligence, </journal> <volume> 81, </volume> <year> 1996. </year>
Reference-contexts: Several empirical studies of Davis-Putnam procedures on random 3-CNF formulas have been done, e.g., by Sel-man, Mitchell, and Levesque [SML96] and Crawford and Auton <ref> [CA96] </ref>. The former applies a simple Davis-Putnam procedure to random 3-CNF formulas for various values of the clause density D. <p> Several empirical studies of Davis-Putnam procedures on random 3-CNF formulas have been done, e.g., by Sel-man, Mitchell, and Levesque [SML96] and Crawford and Auton [CA96]. The former applies a simple Davis-Putnam procedure to random 3-CNF formulas for various values of the clause density D. The curves in <ref> [SML96, CA96] </ref> show very low complexity for D below the threshold, a precipitous increase in complexity at the threshold, and a speedy decline to low complexity above the threshold.
Reference: [CEI96] <author> M. Clegg, J. Edmonds, and R. Impagliazzo. </author> <title> Using the Grobner basis algorithm to find proofs of unsatisfiabil-ity. </title> <booktitle> In Proceedings of the Twenty-Eighth Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 174183, </pages> <address> Philadelphia, PA, </address> <month> May </month> <year> 1996. </year>
Reference-contexts: The stronger bound of 2 W (n=D 4+e ) is obtained by extending [BP96] in another direction, and is considerably more complicated. As this article was going to press, we learned of a recent result of Ben Sas-son and Wigderson which, by a simple modification of an algorithm in <ref> [CEI96, BP96] </ref> for constructing proofs, leads to a simple proof of the latter bound.
Reference: [CF90] <author> M.T. Chao and J. Franco. </author> <title> Probabilistic analysis of a generalization of the unit-clause literal selection heuristics. </title> <booktitle> Information Science, </booktitle> <address> 51:289314, </address> <year> 1990. </year>
Reference-contexts: Lower bounds for random k-CNF formulas attest to the fact that the proof system in question is ineffective on average. A fundamental conjecture about the random k-CNF formula model, (see <ref> [CS88, BFU93, CF90, CR92, FS96, KKK96] </ref>) says that there is a constant c k , the satisfiability threshold, such that a random k-CNF formula of clause density D is almost certainly satisfiable for D &lt; c k (as n gets large), and almost certainly unsatisfiable if if D &gt; c k
Reference: [CR92] <author> V. Chvatal and B. Reed. </author> <title> Mick gets some (the odds are on his side). </title> <booktitle> In 33nd Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 620627, </pages> <address> Pittsburgh, PA, </address> <month> October </month> <year> 1992. </year> <note> IEEE. </note>
Reference-contexts: Lower bounds for random k-CNF formulas attest to the fact that the proof system in question is ineffective on average. A fundamental conjecture about the random k-CNF formula model, (see <ref> [CS88, BFU93, CF90, CR92, FS96, KKK96] </ref>) says that there is a constant c k , the satisfiability threshold, such that a random k-CNF formula of clause density D is almost certainly satisfiable for D &lt; c k (as n gets large), and almost certainly unsatisfiable if if D &gt; c k <p> Recently Friedgut [Fri] showed that for each n there is a threshold c k (n) with the above property, but he does not rule out the possibility that c k (n) varies with n. It is known that c 2 = 1 is independent of n <ref> [CR92, Goe96] </ref>, and that for each k c k (n) is bounded between two constants b k and d k that are independent of n, e.g., and 3:003 c 3 (n) 4:598 [FS96, KKK96]. The threshold indicates three distinct ranges of clause density for investigating complexity. <p> Therefore the probability of (2) given (1) also goes to 1 because a random 2-CNF formula with (1 e)t variables on a set of size t is satisfiable almost certainly <ref> [Goe96, CR92] </ref>. (The fact that there are some 3-clauses as well as 2-clauses only makes C 2 F easier to satisfy.) Thus, F is good with probability 1 o (1).
Reference: [CS88] <author> V. Chvatal and Endre Szemeredi. </author> <title> Many hard examples for resolution. </title> <journal> Journal of the ACM, </journal> <volume> 35(4):759768, </volume> <year> 1988. </year>
Reference-contexts: Lower bounds for random k-CNF formulas attest to the fact that the proof system in question is ineffective on average. A fundamental conjecture about the random k-CNF formula model, (see <ref> [CS88, BFU93, CF90, CR92, FS96, KKK96] </ref>) says that there is a constant c k , the satisfiability threshold, such that a random k-CNF formula of clause density D is almost certainly satisfiable for D &lt; c k (as n gets large), and almost certainly unsatisfiable if if D &gt; c k <p> There are lower bounds, which are provided by lower bounds on res (F). In a seminal paper which provides much of the inspiration for our work, Chvatal and Szemeredi <ref> [CS88] </ref> showed that for any fixed D above the threshold there is a constant k D &gt; 0 such that res (F) 2 k D n almost certainly if F is a random k-CNF formula of clause density D. <p> These results, and the empirical work discussed above, raise the question of understanding the typical behavior of res (F) for random formulas F as a function of D. The lower bound in <ref> [CS88] </ref> as presented does not give bounds on the dependence of k D on D, but rough estimates show that for 3-CNF formulas the bound decreases as 1=D W (D 4 ) . <p> In particular, for random 3-CNF they gave an almost certain W (2 n=D 5=2+e ) lower bound on res (F ), which gives a nontrivial lower bound for clause density D = O (n 1=(5+2e) ). The transition between the bounds of <ref> [CS88] </ref> and these bounds as D increases is very abrupt, leaving open the possibility that res (F) drops off precipitously as D increases beyond the threshold. <p> This distribution, which we denote F k;n is the one analyzed in <ref> [CS88] </ref>. Another model, which is used in [Fri], is to choose to include each of the possible clauses independently with probability p = m= n 2 k ; call this F k;n (p). <p> Our proof of this bound is fairly complicated, but we can obtain a somewhat weaker result (with the 4 replaced by a 5) via a significantly simpler argument. A key idea in our proof and that of [BP96] (which originates in <ref> [CS88] </ref>) is a result that provides a condition on a formula F so that any resolution proof of F has at least one large clause.
Reference: [DLL62] <author> M. Davis, G. Logemann, and D. Loveland. </author> <title> A machine program for theorem proving. </title> <journal> Communications of the ACM, </journal> <volume> 5:394397, </volume> <year> 1962. </year>
Reference-contexts: The most widely used satisfiability algorithms are commonly called Davis-Putnam procedures, but, in fact, these procedures are derived from a system devised by Davis, Lo-gemann and Loveland <ref> [DLL62] </ref> and so we will refer to them as DLL procedures. A DLL procedure is a form of recursive search for a satisfying assignment which on input F operates as follows: If F contains the empty clause L, it terminates reporting failure.
Reference: [Fri] <author> E. Friedgut. </author> <title> Necessary and sufficient conditions for sharp thresholds of graph properties, and the k-sat problem. </title> <type> Preprint, </type> <month> May </month> <year> 1997. </year>
Reference-contexts: There is considerable empirical and analytic evidence for this. Recently Friedgut <ref> [Fri] </ref> showed that for each n there is a threshold c k (n) with the above property, but he does not rule out the possibility that c k (n) varies with n. <p> This distribution, which we denote F k;n is the one analyzed in [CS88]. Another model, which is used in <ref> [Fri] </ref>, is to choose to include each of the possible clauses independently with probability p = m= n 2 k ; call this F k;n (p).
Reference: [FS96] <author> A. Frieze and S. Suen. </author> <title> Analysis of two simple heuris tics on a random instance of k- SAT. </title> <journal> Journal of Algorithms, </journal> <volume> 20(2):312355, </volume> <year> 1996. </year>
Reference-contexts: Lower bounds for random k-CNF formulas attest to the fact that the proof system in question is ineffective on average. A fundamental conjecture about the random k-CNF formula model, (see <ref> [CS88, BFU93, CF90, CR92, FS96, KKK96] </ref>) says that there is a constant c k , the satisfiability threshold, such that a random k-CNF formula of clause density D is almost certainly satisfiable for D &lt; c k (as n gets large), and almost certainly unsatisfiable if if D &gt; c k <p> It is known that c 2 = 1 is independent of n [CR92, Goe96], and that for each k c k (n) is bounded between two constants b k and d k that are independent of n, e.g., and 3:003 c 3 (n) 4:598 <ref> [FS96, KKK96] </ref>. The threshold indicates three distinct ranges of clause density for investigating complexity. For D at the threshold, an effective algorithm must be able to distinguish between unsatisfiable and satisfiable instances.
Reference: [Fu95] <author> Xudong Fu. </author> <title> On the complexity of proof systems. </title> <type> PhD thesis, </type> <institution> University of Toronto, </institution> <year> 1995. </year>
Reference-contexts: On the other hand, Fu <ref> [Fu95] </ref> showed that res (F ) is almost certainly polynomial in n for D = W (n k2 ). These results, and the empirical work discussed above, raise the question of understanding the typical behavior of res (F) for random formulas F as a function of D. <p> This implies that the lower bound declines extremely quickly and becomes trivial at very small nonconstant clause densities, even density O (log 1=4 n), leaving a huge gap between the upper and lower bounds. Fu <ref> [Fu95] </ref> extended the lower bounds to higher D in the case k 5, and Beame and Pitassi [BP96] improved the bounds further.
Reference: [Goe96] <author> A. Goerdt. </author> <title> A threshold for unsatisfiability. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 53:469486, </volume> <year> 1996. </year>
Reference-contexts: Recently Friedgut [Fri] showed that for each n there is a threshold c k (n) with the above property, but he does not rule out the possibility that c k (n) varies with n. It is known that c 2 = 1 is independent of n <ref> [CR92, Goe96] </ref>, and that for each k c k (n) is bounded between two constants b k and d k that are independent of n, e.g., and 3:003 c 3 (n) 4:598 [FS96, KKK96]. The threshold indicates three distinct ranges of clause density for investigating complexity. <p> Therefore the probability of (2) given (1) also goes to 1 because a random 2-CNF formula with (1 e)t variables on a set of size t is satisfiable almost certainly <ref> [Goe96, CR92] </ref>. (The fact that there are some 3-clauses as well as 2-clauses only makes C 2 F easier to satisfy.) Thus, F is good with probability 1 o (1).
Reference: [GPFW97] <author> J. Gu, P. W. Purdom, J. Franco, and B. J. Wah. </author> <title> Algo rithms for the Satisfiability (SAT) Problem: A Survey. In Satisfiability (SAT) Problem, </title> <booktitle> DIMACS, </booktitle> <pages> pages 19 151. </pages> <publisher> American Mathematical Society, </publisher> <year> 1997. </year>
Reference-contexts: Department of Mathematics, Rutgers University, New Brunswick, NJ, saks@math.rutgers.edu. This work was done while on sabbatical at University of Washington. chosen formulas are empirically difficult for satisfiability, and are a commonly used benchmark for testing satisfiabil-ity algorithms. (See, for example, the encyclopedic survey of the SAT problem in <ref> [GPFW97] </ref>.) Lastly, the random model is important for proving lower bounds for propositional proof systems. Lower bounds for random k-CNF formulas attest to the fact that the proof system in question is ineffective on average.
Reference: [KKK96] <author> L. M. Kirousis, E. Kranakis, and D. Krizanc. </author> <title> Approxi mating the unsatisfiability threshold of random formulas. </title> <booktitle> In Proceedings of the Fourth Annual European Symposium on Algorithms, </booktitle> <pages> pages 2738, </pages> <address> Barcelona, Spain, </address> <month> September </month> <year> 1996. </year>
Reference-contexts: Lower bounds for random k-CNF formulas attest to the fact that the proof system in question is ineffective on average. A fundamental conjecture about the random k-CNF formula model, (see <ref> [CS88, BFU93, CF90, CR92, FS96, KKK96] </ref>) says that there is a constant c k , the satisfiability threshold, such that a random k-CNF formula of clause density D is almost certainly satisfiable for D &lt; c k (as n gets large), and almost certainly unsatisfiable if if D &gt; c k <p> It is known that c 2 = 1 is independent of n [CR92, Goe96], and that for each k c k (n) is bounded between two constants b k and d k that are independent of n, e.g., and 3:003 c 3 (n) 4:598 <ref> [FS96, KKK96] </ref>. The threshold indicates three distinct ranges of clause density for investigating complexity. For D at the threshold, an effective algorithm must be able to distinguish between unsatisfiable and satisfiable instances. <p> number of satisfying assignments for a 2-CNF formula with m 0 clauses and n 0 variables is 2 n 0 (3=4) m 0 which is o (2 n 0 =9 ) for m 0 &gt; 2:678n 0 . (This bound can be reduced below 2 by using the techniques of <ref> [KKK96] </ref>.) fl Theorem 2: Let D be at least the threshold c k (n) and m = Dn. If F ~ F n m , then, with probability 1 o (1) in n, Algorithm A produces a resolution refutation in time 2 O (n 2 =m) n O (1) .
Reference: [KS94] <author> S. Kirkpatrick and B. Selman. </author> <title> Critical behavior in the satisfiability of random formulas. </title> <journal> Science, </journal> <volume> 264:1297 1301, </volume> <month> May </month> <year> 1994. </year>
Reference-contexts: The curves in [SML96, CA96] show very low complexity for D below the threshold, a precipitous increase in complexity at the threshold, and a speedy decline to low complexity above the threshold. Much has been made of the analogy with statistical physics <ref> [KS94] </ref>, and there has been a suggestion that the computational complexity at the threshold is evidence of a critical phenomenon in complex systems and based on underlying chaos present only near the threshold. The empirical observation that satisfiability is easy below threshold is supported by analytical work.
Reference: [Mit95] <author> D. Mitchell. </author> <title> Propositional satisfiability testing. </title> <year> 1995. </year>
Reference-contexts: Much of the work on DLL algorithms has been on refining the heuristics, called splitting rules, for making this choice. Usually there are trade-offs between the size of the proof produced and the time spent making this decision. One extremely simple splitting rule is the ordered DLL procedure <ref> [Mit95] </ref>, used in the empirical studies of [SML96], where one begins with a fixed variable ordering and always chooses the next unset variable in that ordering. 3 Upper Bounds In this section we show that two different algorithms, when run on 3-CNF formulas selected from F n m , produce resolution
Reference: [SML96] <author> B. Selman, D. Mitchell, and H. Levesque. </author> <title> Generat ing hard satisfiability problems. </title> <journal> Artificial Intelligence, </journal> <volume> 81:1729, </volume> <year> 1996. </year>
Reference-contexts: Several empirical studies of Davis-Putnam procedures on random 3-CNF formulas have been done, e.g., by Sel-man, Mitchell, and Levesque <ref> [SML96] </ref> and Crawford and Auton [CA96]. The former applies a simple Davis-Putnam procedure to random 3-CNF formulas for various values of the clause density D. <p> Several empirical studies of Davis-Putnam procedures on random 3-CNF formulas have been done, e.g., by Sel-man, Mitchell, and Levesque [SML96] and Crawford and Auton [CA96]. The former applies a simple Davis-Putnam procedure to random 3-CNF formulas for various values of the clause density D. The curves in <ref> [SML96, CA96] </ref> show very low complexity for D below the threshold, a precipitous increase in complexity at the threshold, and a speedy decline to low complexity above the threshold. <p> The basic idea we use is to leverage the unsatisfiabil-ity properties of the well-understood 2-CNF formulas. We extend the analysis to show that similar upper bounds hold for the extremely simple algorithm used in <ref> [SML96] </ref>. In section 4, we prove lower bounds on the size of Davis-Putnam proofs for 3-CNF formulas. For the particular algorithm used by [SML96] we essentially match the upper bound of section 3 for all values of D. <p> We extend the analysis to show that similar upper bounds hold for the extremely simple algorithm used in <ref> [SML96] </ref>. In section 4, we prove lower bounds on the size of Davis-Putnam proofs for 3-CNF formulas. For the particular algorithm used by [SML96] we essentially match the upper bound of section 3 for all values of D. For large D, of size W (n 3=2 log e n), we prove, more generally, that a similar lower bound holds for any Davis-Putnam procedure whose splitting rule is independent of the particular formula. <p> Usually there are trade-offs between the size of the proof produced and the time spent making this decision. One extremely simple splitting rule is the ordered DLL procedure [Mit95], used in the empirical studies of <ref> [SML96] </ref>, where one begins with a fixed variable ordering and always chooses the next unset variable in that ordering. 3 Upper Bounds In this section we show that two different algorithms, when run on 3-CNF formulas selected from F n m , produce resolution refutations of size 2 O (n 2 <p> These lower bounds nearly match the upper bounds proven in the previous section and also provide a fairly precise analytical characterization of the behavior of the empirical results in <ref> [SML96] </ref>. Theorem 5: For F ~ F n m , with probability 1 o (1), the size of the refutation produced by ordered DLL is 2 W (n 2 =m) .
References-found: 19

