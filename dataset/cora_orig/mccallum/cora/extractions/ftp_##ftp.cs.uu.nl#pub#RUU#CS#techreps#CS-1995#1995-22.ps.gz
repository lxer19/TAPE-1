URL: ftp://ftp.cs.uu.nl/pub/RUU/CS/techreps/CS-1995/1995-22.ps.gz
Refering-URL: http://www.cs.ruu.nl/docs/research/publication/TechList1.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: e-mail: markov@cs.ruu.nl, petr@cs.ruu.nl  
Title: A Paradigm for Probabilistic Path Planning  
Author: Mark H. Overmars, Petr Svestka 
Note: Contents  
Date: March 4, 1996  
Address: P.O.Box 80.089, 3508 TB Utrecht, the Netherlands  
Affiliation: Department of Computer Science, Utrecht University  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> J. M. Ahuactzin, E.-G. Talbi, P. Bessiere, and E. Mazer. </author> <title> Using genetic algorithms for 27 robot motion planning. </title> <booktitle> In 10th Europ. Conf. Artific. Intell., </booktitle> <pages> pages 671-675, </pages> <address> London, England, 1992. </address> <publisher> John Wiley and Sons, Ltd. </publisher>
Reference-contexts: defined as follows: Given start configurations s 1 ; : : : ; s n and goal configurations g 1 ; : : : ; g n (with s i ; g i 2 C f ), find continuous maps P 1 ; : : : ; P n 2 <ref> [0; 1] </ref> ! C f describing feasible motions for A, such that (8i; j 2 f1; : : : ; ng): * P i (0) = s i ^ P i (1) = g i 23 * 8 t2 [0;1] : i 6= j ) A (P i (t)) " A
Reference: [2] <author> J. Barraquand and J.-C. Latombe. </author> <title> Robot motion planning: A distributed representation approach. </title> <journal> Internat. J. Robot. Res., </journal> <volume> 10 </volume> <pages> 628-649, </pages> <year> 1991. </year>
Reference-contexts: A tractor-trailer robot is modelled as a carlike one, but with an extra polygon attached to it by a revolute joint. Its C-space is (hence) 4-dimensional, and can be represented by R 2 fi <ref> [0; 2] </ref> fi [ff max ; ff max ], where ff is the (symmetric) joint bound. The carlike part (the tractor) is exactly a carlike robot. The extra part (the trailer) is subject to nonholonomic constraints. <p> We assume that the robots are identical, although the presented technique is conceptually applicable to problems involving non-identical robots as well. The multi-robot path planning problem has received a considerable amount of attention in the recent years ([4], <ref> [2] </ref>, [8], [24]). Current approaches basically fall into two classes: centralized planning methods and decoupled planning methods (See also ([18], [7]). The former are very straight-forward.
Reference: [3] <author> J. Barraquand and J.-C. Latombe. </author> <title> Nonholonomic multibody mobile robots: Controllability and motion planning in the presence of obstacles. </title> <journal> Algorithmica, </journal> <volume> 10 </volume> <pages> 121-155, </pages> <year> 1993. </year>
Reference-contexts: Although some learning method can be used for solving the holonomic problem (step 1), the most time-consuming part of the method is step 2, where holonomic paths are transformed into feasible paths, and such a transformation must be carried out for each query. Another approach is proposed in <ref> [3] </ref>. It consists of decomposing the configuration space into an array of small rectangloids and heuristically searching a graph whose nodes are these rectangloids.
Reference: [4] <author> M. Erdmann and T. Lozano-Perez. </author> <title> On multiple moving objects. </title> <type> Technical Report 883, </type> <institution> MIT, </institution> <address> Massachusets, USA, </address> <year> 1986. </year>
Reference: [5] <author> B. Faverjon and P. Tournassoud. </author> <title> A practical approach to motion planning for manipulators with many degrees of freedom. </title> <booktitle> In Proc. 5th Intern. Symp. on Robotics Research, </booktitle> <pages> pages 65-73, </pages> <year> 1990. </year>
Reference: [6] <author> Th. Horsch, F. Schwarz, and H. Tolle. </author> <title> Motion planning for many degrees of freedom - random reflections at c-space obstacles. </title> <booktitle> In Proc. IEEE Internat. Conf. on Robotics and Automation, </booktitle> <address> San Diego, USA, </address> <year> 1994. </year>
Reference: [7] <author> Y. Hwang and N. Ahuja. </author> <title> Gross motion planning|a survey. </title> <journal> ACM Comput. Surv., </journal> <volume> 24(3) </volume> <pages> 219-291, </pages> <year> 1992. </year>
Reference-contexts: The multi-robot path planning problem has received a considerable amount of attention in the recent years ([4], [2], [8], [24]). Current approaches basically fall into two classes: centralized planning methods and decoupled planning methods (See also ([18], <ref> [7] </ref>). The former are very straight-forward. The idea is that one treats the separate (simple) robots as one composite robot, hence transforming the multi-robot problem into a single-robot one (with many degrees of freedom).
Reference: [8] <author> B. Langlois J. Barraquand and J.-C. Latombe. </author> <title> Numerical potential field techniques for robot path planning. </title> <journal> IEEE Trans. Syst. Man Cybern., </journal> <volume> 22 </volume> <pages> 224-241, </pages> <year> 1992. </year>
Reference-contexts: We assume that the robots are identical, although the presented technique is conceptually applicable to problems involving non-identical robots as well. The multi-robot path planning problem has received a considerable amount of attention in the recent years ([4], [2], <ref> [8] </ref>, [24]). Current approaches basically fall into two classes: centralized planning methods and decoupled planning methods (See also ([18], [7]). The former are very straight-forward.
Reference: [9] <author> P. Jacobs, J.-P. Laumond, and M. </author> <title> Tax. A complete iterative motion planner for a car-like robot. Journees Geometrie Algorithmique, </title> <year> 1990. </year>
Reference: [10] <author> L. Kavraki and J.-C. Latombe. </author> <title> Randomized preprocessing of configuration space for fast path planning. </title> <type> Technical report, </type> <address> San Diego, USA, </address> <year> 1994. </year> <month> 28 </month>
Reference: [11] <author> L. Kavraki, J-C. Latombe, R. Motwani, and P. Raghavan. </author> <title> Randomized query process-ing in robot motion planning. </title> <type> Technical report, </type> <institution> Dept. Comput. Sci., Stanford Univ., Stanford, </institution> <address> CA, USA, </address> <month> December </month> <year> 1995. </year>
Reference: [12] <author> L. Kavraki, P. Svestka, J.-C. Latombe, and M. Overmars. </author> <title> Probabilistic roadmaps for path planning in high dimensional configuration spaces. </title> <note> To appear in IEEE Trans. </note> <institution> Robot. Autom., </institution> <year> 1995. </year>
Reference-contexts: For holonomic robots very good performance is obtained by what we refer to as the random bounce walk (see also <ref> [12] </ref>). The idea is that repeatedly a random direction (in C-space) is chosen, and the robot is moved in this direction 7 until a collision occurs (or time runs out). When a collision occurs, a new random direction is chosen.
Reference: [13] <author> Y. Koga, K. Kondo, J. Kuffner, and J.-C. Latombe. </author> <title> Planning motions with intentions. </title> <booktitle> In Proc. of SIGGRAPH'94, </booktitle> <year> 1994. </year>
Reference: [14] <author> K. Kondo. </author> <title> Motion planning with six degrees of freedom by multistrategic bidirectional heuristic free-space enumeration. </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> 7(3) </volume> <pages> 267-277, </pages> <year> 1991. </year>
Reference: [15] <author> P.L. Kociemba L. Graux, P. Millies and B. Langlois. </author> <title> Integration of a path generation algorithm into off-line programming of airbus panels. </title> <type> Technical report, </type> <year> 1992. </year>
Reference: [16] <author> F. Lamiraux and J.P. Laumond. </author> <title> On the expected complexity of random path planning. </title> <type> Technical Report 95087, </type> <institution> LAAS, Toulouse, France, </institution> <month> March </month> <year> 1995. </year>
Reference: [17] <author> J.-C. Latombe. </author> <title> A fast path planner for a car-like indoor mobile robot. </title> <booktitle> In Proc. 9th Nat. Conf. Artific. Intell., </booktitle> <pages> pages 659-665, </pages> <year> 1991. </year>
Reference-contexts: We refer to the former as general carlike robots, and to the latter as forward carlike robots. Currently there exist only a few planners for nonholonomic mobile robots which are practical in constrained environments. In [20] and <ref> [17] </ref> efficient planners for general carlike robots are described.
Reference: [18] <author> J.-C. Latombe. </author> <title> Robot Motion Planning. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, USA, </address> <year> 1991. </year>
Reference-contexts: The carlike part (the tractor) is exactly a carlike robot. The extra part (the trailer) is subject to nonholonomic constraints. Its motions are (physically) dictated by the motions of the tractor (For details, see for example <ref> [18] </ref>). For carlike robots, the paths constructed will be sequences of translational paths (describing straight motions) and rotational paths (describing constant non-zero curvature motions) only. It is a well-known fact ([18]) that if for a (general or forward) carlike robot a feasible path in the open free C-space exists between two <p> Collision checking for a RTR path can be done very efficiently, performing three intersection tests for translational and rotational sweep volumes. These sweep volumes are bounded by linear and circular segments (such objects are called generalized polygons in <ref> [18] </ref>) and hence the intersection tests can be done exactly and efficiently. Moreover, the intersection tests for the rotational path segments can be eliminated by storing some extra information in the graph nodes, hence reducing the collision check of a RTR path to just one intersection test for a polygon.
Reference: [19] <author> J.-P. Laumond, M. Tax, and P. Jacobs. </author> <title> A motion planner for car-like robots based on a mixed global/local approach. </title> <booktitle> In IEEE IROS, </booktitle> <month> July </month> <year> 1990. </year>
Reference: [20] <author> Jean-Paul Laumond, Paul E. Jacobs, Michel Tax, and Richard M. Murray. </author> <title> A motion planner for nonholonomic mobile robots. </title> <journal> IEEE Trans. Robot. Autom., </journal> <volume> 10(5), </volume> <month> October </month> <year> 1994. </year>
Reference-contexts: We refer to the former as general carlike robots, and to the latter as forward carlike robots. Currently there exist only a few planners for nonholonomic mobile robots which are practical in constrained environments. In <ref> [20] </ref> and [17] efficient planners for general carlike robots are described.
Reference: [21] <author> M. Overmars. </author> <title> A random approach to motion planning. </title> <type> Technical Report RUU-CS-92-32, </type> <institution> Dept. Comput. Sci., Utrecht Univ., </institution> <address> Utrecht, the Netherlands, </address> <month> October </month> <year> 1992. </year>
Reference: [22] <author> M. Overmars and P. Svestka. </author> <title> A probabilistic learning approach to motion planning. </title> <booktitle> In Proc. The First Workshop on the Algorithmic Foundations of Robotics, </booktitle> <pages> pages 19-37. </pages> <editor> A. K. Peters, </editor> <address> Boston, MA, </address> <year> 1994. </year>
Reference-contexts: Hence, as explained in Section 2.3, directed instead of undirected graphs are used for storing the roadmaps. For details regarding the exact definition of the learning algorithm we refer to <ref> [22] </ref>. The robot specific components, such as the local planner, the metric, and the random walks are quite analog to those for general carlike robots, as described in Section 4.1. The local planner constructs the shortest forward RTR path connecting its argument configurations.
Reference: [23] <author> J.A. Reeds and R.A. Shepp. </author> <title> Optimal paths for a car that goes both forward and backwards. </title> <journal> Pacific Journal of Mathematics, </journal> <volume> 145(2) </volume> <pages> 367-393, </pages> <year> 1990. </year>
Reference: [24] <author> J. H. Reif and H. Wang. </author> <title> Social potential fields: A distributed behavioral control for automonous robots. </title> <booktitle> In Proc. The First Workshop on the Algorithmic Foundations of Robotics, </booktitle> <pages> pages 331-345. </pages> <editor> A. K. Peters, </editor> <address> Boston, MA, </address> <year> 1994. </year>
Reference-contexts: We assume that the robots are identical, although the presented technique is conceptually applicable to problems involving non-identical robots as well. The multi-robot path planning problem has received a considerable amount of attention in the recent years ([4], [2], [8], <ref> [24] </ref>). Current approaches basically fall into two classes: centralized planning methods and decoupled planning methods (See also ([18], [7]). The former are very straight-forward.
Reference: [25] <author> S. Sekhavat and J.P. Laumond. </author> <title> Topological property of nonholonomic motion planning methods for chained form systems. </title> <type> Technical report, </type> <institution> LAAS/CNRS, Toulouse, France, </institution> <year> 1995, </year> <note> to appear. 29 </note>
Reference-contexts: We know, due to the probabilistic nature of the node adding, the probability of obtaining such a graph grows to 1 when the learning time goes to infinity. Regarding tractor-trailer robots, Sekhavat and Laumond prove in <ref> [25] </ref> that the sinusoidal local planner, used for the tractor-trailer robots, verifies the GLT-property. Hence, for tractor-trailer robots we also have probabilistic completeness. 4 This does not necessarily hold if P 1 consists of just one or two circular arcs of maximal curvature.
Reference: [26] <author> S. Sekhavat, P. Svestka, J.-P. Laumond, and M.H. Overmars. </author> <title> On two-level path planning for tractor-trailer robots using a fictive system. </title> <type> Technical report, </type> <institution> Dept. Comput. Sci., Utrecht Univ., </institution> <address> Utrecht, the Netherlands, </address> <month> July </month> <year> 1995, </year> <note> to appear. </note>
Reference-contexts: These robots have symmetrical control systems and, hence, undirected underlying graphs are sufficient. Again, we will not go into many details (we refer to <ref> [26] </ref> for a more thorough discussion of the topic). We use a local planner, by Sekhavat and Laumond ([25]), which transforms its configuration coordinates into the chained form, and uses sinusoidal inputs. We refer to it as the sinusoidal local planner.
Reference: [27] <author> P. Soueres and J.P. Laumond. </author> <title> Shortest paths synthesis for a car-like robot. </title> <type> Technical report, </type> <institution> LAAS/CNRS, Toulouse, France, </institution> <month> September </month> <year> 1992. </year>
Reference-contexts: Furthermore, the RTR local planner satisfies a local topological property which guarantees probabilistic completeness (See Section 5). An alternative to the RTR local planner is to use a local planner which constructs and tests the shortest (carlike) path connecting its argument configurations ([23], <ref> [27] </ref>). Constructing shortest carlike paths is however a relatively expensive operation, and the construct requires more expensive intersection checking routines than does the RTR construct.
Reference: [28] <author> H.J. Sussman. </author> <title> Lie brackets, real analyticity and geometric control. </title> <editor> In R.W. Brock-ett, R.S. Millman, and H.J. Sussman, editors, </editor> <title> Differential Geometric Control Theory. </title> <publisher> Birkhauser, </publisher> <year> 1983. </year>
Reference: [29] <author> H.J. Sussman. </author> <title> A general theorem on local controllability. </title> <journal> SIAM Journal on Control and Optimization, </journal> <volume> 25(1) </volume> <pages> 158-194, </pages> <month> January </month> <year> 1987. </year>
Reference-contexts: Clearly, given a small-time locally controllable robot, the GLT-property is a proper criterion for choosing the local planner (sufficient conditions for small-time local controllability of a robot are given in, e.g., <ref> [29] </ref>). Path planning among obstacles for carlike robots using local planners with the GLT-property has also been studied by Laumond ([19],[9]). For small-time locally controllable robots with symmetric control systems, a weaker property exists that guarantees probabilistic completeness as well. We refer to this property as the LTP-property.
Reference: [30] <author> P. Svestka. </author> <title> A probabilistic approach to motion planning for car-like robots. </title> <type> Technical Report RUU-CS-93-18, </type> <institution> Dept. Comput. Sci., Utrecht Univ., </institution> <address> Utrecht, the Netherlands, </address> <month> April </month> <year> 1993. </year>
Reference-contexts: For directed graphs it is less straightforward to omit the adding of redundant edges than was the case for undirected graphs. We refer to <ref> [30] </ref> and [31] for discussions on this topic, and sensitive strategies for edge adding for directed underlying graphs. 8 2.4 Smoothing the paths Paths computed in the query phase can be quite ugly and unnecessarily long. <p> Figure 5 shows two RTR paths. It can easily be proven that any pair of configurations is connected by a number of RTR paths (See <ref> [30] </ref> for more details). Furthermore, the RTR local planner satisfies a local topological property which guarantees probabilistic completeness (See Section 5). An alternative to the RTR local planner is to use a local planner which constructs and tests the shortest (carlike) path connecting its argument configurations ([23], [27]).
Reference: [31] <author> P. Svestka and M. Overmars. </author> <title> Motion planning for car-like robots using a probabilistic learning approach. </title> <type> Technical Report RUU-CS-94-33, </type> <institution> Dept. Comput. Sci., Utrecht Univ., </institution> <address> Utrecht, the Netherlands, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: For directed graphs it is less straightforward to omit the adding of redundant edges than was the case for undirected graphs. We refer to [30] and <ref> [31] </ref> for discussions on this topic, and sensitive strategies for edge adding for directed underlying graphs. 8 2.4 Smoothing the paths Paths computed in the query phase can be quite ugly and unnecessarily long. <p> Node adding heuristics We use the geometry of the workspace obstacles to identify areas in which is advantageous to add some extra, geometrically derived, non-random nodes. Particular obstacle edges and (convex) obstacle corners define such geometric nodes (See <ref> [31] </ref> for more details). Furthermore, as for free-flying robots, we use the the (run-time) structure of the graph G in order to guide the node generation. 4.1.2 Experimental results We have implemented the planner as described above, and some experimental results are presented in this section. <p> We do however make a certain requirement regarding the relationship between configurations and the corresponding *-reachable ffi-balls. Namely, it must be described by a Lipschitz continuous function. For a formal definition of the LTP-property and a proof of probabilistic completeness with local methods verifying it, we refer to <ref> [31] </ref>. 5.2 Probabilistic completeness with the used local planners The local planners used for holonomic robots, general carlike robots and tractor-trailer robots, as described in this chapter, guarantee probabilistic completeness. The used local planner L for the holonomic planners constructs the straight line path (in C-space) connecting its argument configurations.
Reference: [32] <author> P. Svestka and M.H. Overmars. </author> <title> Coordinated motion planning for multiple carlike robots using probabilistic roadmaps. </title> <booktitle> In Proc. IEEE Internat. Conf. on Robotics and Automation (to appear), </booktitle> <address> Nagoya, Japan, </address> <year> 1995. </year>
Reference-contexts: If however n is large, then the required amount of memory can still be very (too) large. Such cases ask for reducing the number of super-nodes. For techniques achieving this we refer to <ref> [32] </ref>. Our multi-robot approach for solving a composite problem ((s 1 ; : : : ; s n ); (g 1 ; : : : ; g n )) now consists of the following steps: 25 1.
Reference: [33] <author> P. Svestka and J. Vleugels. </author> <title> Exact motion planning for tractor-trailer robots. </title> <booktitle> In Proc. IEEE Internat. Conf. on Robotics and Automation (to appear), </booktitle> <address> Nagoya, Japan, </address> <year> 1995. </year>
Reference: [34] <institution> Arnaud Vandame. Planification de t^aches de manipulations par methodes de recherches aleatoires. </institution> <type> master thesis, </type> <institution> LAAS, Toulouse, France, </institution> <month> June </month> <year> 1994. </year> <month> 30 </month>
References-found: 34

