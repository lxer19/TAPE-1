URL: http://www.eecis.udel.edu:80/~kalyanas/pubs/ptcv.ps
Refering-URL: http://www.eecis.udel.edu:80/~kalyanas/pubs.html
Root-URL: http://www.cis.udel.edu
Email: (kalyanas@cis.udel.edu)  (amer@cis.udel.edu)  
Title: Protocol Test Case Visualization  
Author: Pramod Kalyanasundaram Paul D. Amer 
Keyword: protocols, protocol testing, Estelle, TTCN, visualization.  
Date: August 22, 1993  
Address: 19716  
Affiliation: Department of Computer and Information Sciences University of Delaware, Newark, DE  
Abstract: This paper introduces the research area of Protocol Test Case Visualization (PTCV). PTCV facilitates protocol designers in understanding and validating test cases that have been generated either manually from any source or automatically from a formal specification. Through grahpics and animation, test cases are evaluated without necessarily having to first learn the complex details of a special purpose test specification language such as TTCN. PTCV in its entirety converts notation and language designed for a machine into pictures designed for a human. In addition to describing a general PTCV architecture, this paper presents a specific PTCV system based on GROPE 1 for visualizing tests that are generated from an Estelle protocol specification. 
Abstract-found: 1
Intro-found: 1
Reference: [AN93] <author> P. D. Amer and D. H. </author> <title> New. Protocol visualization in Estelle. </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> 25(7) </volume> <pages> 741-760, </pages> <year> 1993. </year>
Reference-contexts: Mon-mouth, and the Army Research Office (DAAL03-91-G-0086). 1 Graphical Representation of Protocols in Estelle. 2 See [ISOb, BD87]. 3 See [ISOa]. 1 2 definition of test cases, more quantifiable fault coverage, etc. Additionally, environments exist for visualizing formal specifications [New91]. In particular, our PTCV environment interacts with GROPE <ref> [AN93] </ref>, a visualization system that animates Estelle specifications for better and faster understanding of a protocol's design and eventual implementation. More precisely, what is visualization of test cases? PTCV uses pictures and animation to view a test case.
Reference: [BD87] <author> S. Budkowski and P. </author> <title> Dembinski. An introduction to Estelle: A specification language for distributed systems. </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> 14(1) </volume> <pages> 3-23, </pages> <year> 1987. </year>
Reference-contexts: The advantages of automatic test generation are evident: faster fl This work was supported, in part, by the US Army Communication Electronics Command (CECOM), Ft. Mon-mouth, and the Army Research Office (DAAL03-91-G-0086). 1 Graphical Representation of Protocols in Estelle. 2 See <ref> [ISOb, BD87] </ref>. 3 See [ISOa]. 1 2 definition of test cases, more quantifiable fault coverage, etc. Additionally, environments exist for visualizing formal specifications [New91].
Reference: [CA91] <author> W. Chun and P.D. Amer. </author> <title> Test case generation for protocols specified in Estelle. </title> <editor> In J. Quemada, J. Manas, and E. Vazquez, editors, </editor> <booktitle> Formal Description Techniques III, </booktitle> <pages> 191-206, </pages> <address> Amsterdam, 1991. </address> <publisher> North Holland. </publisher>
Reference-contexts: As shown in Figure 1, PTCV connects two active research areas: test case generation and protocol visualization. In test generation, several efforts are in progress to automatically generate tests from a formal specification written in Estelle 2 <ref> [CA91, LL91, PG90, CVI89, SEK88, SD88, FL87] </ref> or LOTOS 3 [TS91, PF90]. The advantages of automatic test generation are evident: faster fl This work was supported, in part, by the US Army Communication Electronics Command (CECOM), Ft. <p> When a user sees a test fail, the user knows that either the independently generated test case is faulty or the specification has a problem. The current PTCV environment at the University of Delaware visualizes some automatically generated test cases written in a local Test Oriented Form (TOF) <ref> [CA91] </ref>. These tests are visualized 4 "Protocol Engineer" and "User" are used interchangably. They represent an individual who has a good knowledge of the protocol, e.g., the original designer. 3 by internally converting them to Estelle and then using the GROPE system (shown in Figure 1). <p> The Test Module goes into test completed state where it waits until its termination. The Test Module interacts with the Timer to utilize the timer services needed by the test. The state diagram for an example Test Module is shown in Figure 4 (b). Test cases generated automatically <ref> [CA91] </ref> from a given Estelle specification cover only those events that lead to success of a test; these events 5 are shown corresponding to transitions t1s1, t1s2 and t2s3. <p> This test is first described followed by an explanation of the various steps involved in the test case visualization under the current PTCV environment. The sample test case has been specified in Test Oriented Form (TOF) <ref> [CA91] </ref> and is shown in Figure 4 (a), with its equivalent FSM in Figure 4 (b) and Estelle code for it in Appendix A. This test case has two parts. The first part ensures that the alternating bit FSM reaches the ack wait state.
Reference: [CTM] <author> ISO/IEC JTC 1/SC 21. </author> <title> Information Retrieval, Transfer and Management for OSI. OSI Conformance Testing Methodology and Framework Part 1: General Concepts. </title>
Reference-contexts: The dynamic part is particular to the specific tests themselves and is therefore different for every protocol. The dynamic part consists of exactly one Estelle module for each test. 4 In keeping with the OSI conformance testing standard <ref> [CTM] </ref>, the modules that form the static and dynamic part of the architecture are collectively called the tester. Subsection 2.1 describes the architecture modules in detail. Figures 2 and 3 are based on a PTCV environment at the University of Delaware. <p> This is intuitively pleasing to those who are familiar with the OSI tester architecture <ref> [CTM] </ref>. The alternating bit module must accept this ack and reach the estab state again and must not output any packets. The following paragraphs step through a visualization of this test. the Module Under Test (alternating bit body) are shown.
Reference: [CVI89] <author> W.Y.L. Chan, S.T. Vuong, and M.R. Ito. </author> <title> Improved protocol test generation procedure based on UIOs. SIGCOMM '89 Symposium: Communication Architecture and Protocols in Computer Comm. </title> <journal> Review, </journal> <volume> 19(4) </volume> <pages> 283-294, </pages> <month> September </month> <year> 1989. </year> <month> 14 </month>
Reference-contexts: As shown in Figure 1, PTCV connects two active research areas: test case generation and protocol visualization. In test generation, several efforts are in progress to automatically generate tests from a formal specification written in Estelle 2 <ref> [CA91, LL91, PG90, CVI89, SEK88, SD88, FL87] </ref> or LOTOS 3 [TS91, PF90]. The advantages of automatic test generation are evident: faster fl This work was supported, in part, by the US Army Communication Electronics Command (CECOM), Ft.
Reference: [FL87] <author> J.P. Favreau and R.J. Linn Jr. </author> <title> Automated generation of test scenario skeletons from protocol specifications written in Estelle. </title> <editor> In B. Sarikaya and G.v. Bochmann, editors, </editor> <title> Protocol Specification, Testing, and Verification VI, </title> <address> Amsterdam, 1987. </address> <publisher> North-Holland. </publisher>
Reference-contexts: As shown in Figure 1, PTCV connects two active research areas: test case generation and protocol visualization. In test generation, several efforts are in progress to automatically generate tests from a formal specification written in Estelle 2 <ref> [CA91, LL91, PG90, CVI89, SEK88, SD88, FL87] </ref> or LOTOS 3 [TS91, PF90]. The advantages of automatic test generation are evident: faster fl This work was supported, in part, by the US Army Communication Electronics Command (CECOM), Ft.
Reference: [ISOa] <author> Information Processing Systems Open System Interconnec tion. </author> <title> ISO International Standard 8807: LOTOS A Formal Description Technique Based on the Temporal Ordering of Observational Behaviour. </title>
Reference-contexts: The advantages of automatic test generation are evident: faster fl This work was supported, in part, by the US Army Communication Electronics Command (CECOM), Ft. Mon-mouth, and the Army Research Office (DAAL03-91-G-0086). 1 Graphical Representation of Protocols in Estelle. 2 See [ISOb, BD87]. 3 See <ref> [ISOa] </ref>. 1 2 definition of test cases, more quantifiable fault coverage, etc. Additionally, environments exist for visualizing formal specifications [New91]. In particular, our PTCV environment interacts with GROPE [AN93], a visualization system that animates Estelle specifications for better and faster understanding of a protocol's design and eventual implementation.
Reference: [ISOb] <author> Information Processing Systems Open System Interconnection. </author> <title> ISO International Standard 9074: Estelle A Formal Description Technique Based on an Extended State Transition Model. </title>
Reference-contexts: The advantages of automatic test generation are evident: faster fl This work was supported, in part, by the US Army Communication Electronics Command (CECOM), Ft. Mon-mouth, and the Army Research Office (DAAL03-91-G-0086). 1 Graphical Representation of Protocols in Estelle. 2 See <ref> [ISOb, BD87] </ref>. 3 See [ISOa]. 1 2 definition of test cases, more quantifiable fault coverage, etc. Additionally, environments exist for visualizing formal specifications [New91]. <p> Subsection 3.1 describes a sample test case visualization based on such an architecture. 3.1 An Example This section describes test case visualization using an example test case that has been automatically generated from an alternating bit protocol Estelle specification <ref> [ISOb] </ref>. The objective of this particular test case is to examine that part of the alternating bit protocol that transmits a data request packet and awaits receipt acknowledgement. In terms of the FSM (shown in Figure 5), the objective of this test is to test out the transition marked abit1.
Reference: [ISOc] <author> Information Processing Systems Open System Interconnection. </author> <title> ISO International Standard 9646: OSI Conformance Testing Methodology and Framework. </title>
Reference-contexts: PTCV helps in better understanding of tests. Automatic and even manual test case generation can produce hundreds of tests in text form. It is difficult to go through test cases written in yet another special purpose language such as TTCN <ref> [ISOc] </ref> and fully comprehend the subleties of these tests. Visualizing provides a significantly easier way. It allows a user to understand clearly the dynamism that goes with protocols and their testing by providing animation instead of a static representation (text) that does not depict the dynamic behavior.
Reference: [ISOd] <author> International Organization for Standardization. </author> <title> ISO International Standard 7185: Programming Language - Pascal. </title>
Reference: [LL91] <author> D.Y. Lee and J.Y. Lee. </author> <title> A well-defined Estelle specification for the automatic test generation. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 40(4) </volume> <pages> 526-542, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: As shown in Figure 1, PTCV connects two active research areas: test case generation and protocol visualization. In test generation, several efforts are in progress to automatically generate tests from a formal specification written in Estelle 2 <ref> [CA91, LL91, PG90, CVI89, SEK88, SD88, FL87] </ref> or LOTOS 3 [TS91, PF90]. The advantages of automatic test generation are evident: faster fl This work was supported, in part, by the US Army Communication Electronics Command (CECOM), Ft.
Reference: [New91] <author> D. </author> <title> New. Protocol Visualization. </title> <type> Ph.D dissertation. Technical Report 91-18, </type> <institution> University of Delaware, Department of Computer and Information Sciences, </institution> <month> May </month> <year> 1991. </year>
Reference-contexts: Mon-mouth, and the Army Research Office (DAAL03-91-G-0086). 1 Graphical Representation of Protocols in Estelle. 2 See [ISOb, BD87]. 3 See [ISOa]. 1 2 definition of test cases, more quantifiable fault coverage, etc. Additionally, environments exist for visualizing formal specifications <ref> [New91] </ref>. In particular, our PTCV environment interacts with GROPE [AN93], a visualization system that animates Estelle specifications for better and faster understanding of a protocol's design and eventual implementation. More precisely, what is visualization of test cases? PTCV uses pictures and animation to view a test case. <p> The derived architecture is also an Estelle specification which has the test cases encoded in it; the test cases are then visualized using an already existing visualization environment for Estelle specifications <ref> [New91, SG89] </ref>.
Reference: [PF90] <author> D. Pitt and D. Freestone. </author> <title> The derivation of conformance tests from LOTOS specifications. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 16(12) </volume> <pages> 1337-1343, </pages> <month> December </month> <year> 1990. </year>
Reference-contexts: As shown in Figure 1, PTCV connects two active research areas: test case generation and protocol visualization. In test generation, several efforts are in progress to automatically generate tests from a formal specification written in Estelle 2 [CA91, LL91, PG90, CVI89, SEK88, SD88, FL87] or LOTOS 3 <ref> [TS91, PF90] </ref>. The advantages of automatic test generation are evident: faster fl This work was supported, in part, by the US Army Communication Electronics Command (CECOM), Ft.
Reference: [PG90] <author> M. Phalippou and R. Groz. </author> <title> Evaluation of an empirical approach for computer-aided test case generation. </title> <booktitle> In Proc. 3rd International Workshop on Protocol Test Systems, </booktitle> <address> Washington, DC, </address> <month> October </month> <year> 1990. </year>
Reference-contexts: As shown in Figure 1, PTCV connects two active research areas: test case generation and protocol visualization. In test generation, several efforts are in progress to automatically generate tests from a formal specification written in Estelle 2 <ref> [CA91, LL91, PG90, CVI89, SEK88, SD88, FL87] </ref> or LOTOS 3 [TS91, PF90]. The advantages of automatic test generation are evident: faster fl This work was supported, in part, by the US Army Communication Electronics Command (CECOM), Ft.
Reference: [SD88] <author> K. Sabnani and A. Dahbura. </author> <title> A protocol test generation procedure. </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> 15(4) </volume> <pages> 285-297, </pages> <month> September </month> <year> 1988. </year>
Reference-contexts: As shown in Figure 1, PTCV connects two active research areas: test case generation and protocol visualization. In test generation, several efforts are in progress to automatically generate tests from a formal specification written in Estelle 2 <ref> [CA91, LL91, PG90, CVI89, SEK88, SD88, FL87] </ref> or LOTOS 3 [TS91, PF90]. The advantages of automatic test generation are evident: faster fl This work was supported, in part, by the US Army Communication Electronics Command (CECOM), Ft.
Reference: [SEK88] <author> B. Sarikaya, S. Eswara, and V. Koukoulidis. </author> <title> A formal specification based test generation tool. </title> <type> Technical report, </type> <institution> Concordia University, Electrical and Computer Engineering Department, </institution> <year> 1988. </year>
Reference-contexts: As shown in Figure 1, PTCV connects two active research areas: test case generation and protocol visualization. In test generation, several efforts are in progress to automatically generate tests from a formal specification written in Estelle 2 <ref> [CA91, LL91, PG90, CVI89, SEK88, SD88, FL87] </ref> or LOTOS 3 [TS91, PF90]. The advantages of automatic test generation are evident: faster fl This work was supported, in part, by the US Army Communication Electronics Command (CECOM), Ft.
Reference: [SES91] <author> P. van Houtte S. Eswara, T. Berriman and B. Sarikaya. </author> <title> Towards execution of TTCN test cases. In Protocol Specification, Testing and Verification, X, </title> <year> 1991. </year>
Reference-contexts: In our PTCV system, the default action is implemented using the priority clause of Estelle <ref> [SES91] </ref>. A well designed PTCV architecture uses separate interaction points and queues to provide easy visual representation for tests that have passed, failed or been declared inconclusive.
Reference: [SG89] <author> R. Sijelmassi and P. Gaudette. </author> <title> An object-oriented model for Estelle. </title> <editor> In K. Turner, editor, </editor> <title> Formal Description Techniques, I. </title> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1989. </year>
Reference-contexts: The derived architecture is also an Estelle specification which has the test cases encoded in it; the test cases are then visualized using an already existing visualization environment for Estelle specifications <ref> [New91, SG89] </ref>.
Reference: [TS91] <author> P. Tripathy and B. Sarikaya. </author> <title> Test generation from LOTOS specifications. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 40(4) </volume> <pages> 543-552, </pages> <month> April </month> <year> 1991. </year> <month> 15 </month>
Reference-contexts: As shown in Figure 1, PTCV connects two active research areas: test case generation and protocol visualization. In test generation, several efforts are in progress to automatically generate tests from a formal specification written in Estelle 2 [CA91, LL91, PG90, CVI89, SEK88, SD88, FL87] or LOTOS 3 <ref> [TS91, PF90] </ref>. The advantages of automatic test generation are evident: faster fl This work was supported, in part, by the US Army Communication Electronics Command (CECOM), Ft.
References-found: 19

