URL: ftp://theory.lcs.mit.edu/pub/tcryptol/98-10.ps
Refering-URL: http://theory.lcs.mit.edu/~tcryptol/1998/98-10.html
Root-URL: 
Email: Email: hugo@ee.technion.ac.il.  Email: talr@  
Title: Chameleon Hashing and Signatures  
Author: Hugo Krawczyk Tal Rabin 
Note: watson.ibm.com.  
Address: 32000, Israel,  York, USA.  PO Box 704, Yorktown Heights, New York 10598, USA  
Affiliation: Department of Electrical Engineering, Technion, Haifa  and IBM T.J. Watson Research Center, New  IBM T.J. Watson Research Center,  
Date: October 1997  
Abstract: We introduce chameleon signatures that provide with an undeniable commitment of the signer to the contents of the signed document (as regular digital signatures do) but, at the same time, do not allow the recipient of the signature to disclose the contents of the signed information to any third party without the signer's consent. These signatures are closely related to "undeniable signatures", but chameleon signatures allow for simpler and more efficient realizations than the latter. In particular, they are essentially non-interactive and do not involve the design and complexity of zero-knowledge proofs on which traditional undeniable signatures are based. Instead, chameleon signatures are generated under the standard method of hash-then-sign. Yet, the hash functions which are used are chameleon hash functions. These hash functions are characterized by the nonstandard property of being collision-resistant for the signer but collision tractable for the recipient. We present simple and efficient constructions of chameleon hashing and chameleon signatures. The former can be constructed based on standard cryptographic assumptions (such as the hardness of factoring or discrete logarithms) and have efficient realizations based on these assumptions. For the signature part we can use any digital signature (such as RSA or DSS) and prove the unforgeability property of the resultant chameleon signatures solely based on the unforgeability of the underlying digital signature in use. 
Abstract-found: 1
Intro-found: 1
Reference: [AN95] <author> R. Anderson and R. Needham. </author> <title> Robustness principles for public key protocols. </title> <editor> In D. Coppersmith, editor, </editor> <booktitle> Advances in Cryptology | Crypto '95, </booktitle> <pages> pages 236-247, </pages> <address> Berlin, </address> <year> 1995. </year> <note> Springer-Verlag. Lecture Notes in Computer Science No. 963. </note>
Reference-contexts: Furthermore, the signer will commit to the encryption public key that he is using by signing this public key together with the encryption of the message (this prevents problems similar to those pointed out in <ref> [AN95] </ref> when signing an encryption). Thus, the signer is committed to some encryption string. However, the contents of the encrypted string cannot be learned by any third party due to the semantic security of the encryption.
Reference: [BCC88] <author> G. Brassard, D. Chaum, and C. Crepeau. </author> <title> Minimum disclosure proofs of knowledge. </title> <journal> JCSS, </journal> <volume> 37(2) </volume> <pages> 156-189, </pages> <year> 1988. </year>
Reference-contexts: The actual definition of chameleon hashing, presented in Section 2, also adds a requirement on the output distribution of these functions (which, in particular, need to be randomized). The notion of chameleon hashing is closely related to "chameleon commitment schemes" <ref> [BCC88] </ref> which implicitly induce constructions of chameleon hash functions. (We expand on this relation in Section 2). The name "chameleon" refers to the ability of the owner of the trapdoor information to change the input to the function to any value of his choice without changing the output. <p> Remark. Chameleon hashing is rooted in the notion of chameleon commitment (also called chameleon blobs or trapdoor commitments) which were first introduced by Brassard, Chaum and Crepeau <ref> [BCC88] </ref> in the context of zero-knowledge proofs. Any chameleon commitment scheme with a non-interactive commitment phase induces a chameleon hash function, and vice versa. <p> m [k] the least significant) computes to cham-hash (m; r 2 ) = 4 m (r 2 ) 2 jmj . 2.2 Chameleon Hashing Based on Discrete Log This solution for chameleon hashing is based on a well known chameleon commitment scheme due to Boyar et al. [BKK90] (see also <ref> [BCC88] </ref>).
Reference: [BCDP90] <author> J. Boyar, D. Chaum, I. DamgR ard, and T. Pedersen. </author> <title> Convertible undeniable signatures. </title> <editor> In A. J. Menezes and S. Vanstone, editors, </editor> <booktitle> Advances in Cryptology | Crypto '90, </booktitle> <pages> pages 189-205, </pages> <address> Berlin, </address> <year> 1990. </year> <note> Springer-Verlag. Lecture Notes in Computer Science No. 537. </note>
Reference-contexts: Thus, even if the goals and constructions of fail-stop and chameleon signatures are very different, the approach of proving forgeries by collisions is similar in both cases. 1.4 Convertibility In the undeniable signature literature, a property that has received a lot of attention is convertibility. This notion (introduced in <ref> [BCDP90] </ref>) represents the ability of the signer to eventually release a piece of secret information that converts the signature into a regular digital signature with the traditional property that anyone can verify it without the help of the signer. <p> Proof. Combine the techniques of Section 3 with the above method for exposure freeness. 6 Convertibility The notion of convertibility of undeniable signatures was introduced by Boyar, Chaum, Damgard and Pedersen <ref> [BCDP90] </ref>. The idea is that an undeniable signature will be transformed into a regular 16 publicly verifiable (non-repudiable) signature by publishing some information. There are also variations to the notion of convertibility, i.e. complete and selective.
Reference: [BKK90] <author> J. F. Boyar, S. A. Kurtz, and M. W. Krentel. </author> <title> A discrete logarithm implementation of perfect zero-knowledge blobs. </title> <journal> Journal of Cryptology, </journal> <volume> 2(2) </volume> <pages> 63-76, </pages> <year> 1990. </year>
Reference-contexts: of m and m [k] the least significant) computes to cham-hash (m; r 2 ) = 4 m (r 2 ) 2 jmj . 2.2 Chameleon Hashing Based on Discrete Log This solution for chameleon hashing is based on a well known chameleon commitment scheme due to Boyar et al. <ref> [BKK90] </ref> (see also [BCC88]).
Reference: [CA89] <editor> David Chaum and Hans Van Antwerpen. Undeniable signatures. In G. Brassard, editor, </editor> <booktitle> Advances in Cryptology | Crypto '89, </booktitle> <pages> pages 212-217, </pages> <address> Berlin, </address> <year> 1989. </year> <note> Springer-Verlag. Lecture Notes in Computer Science No. 435. </note>
Reference-contexts: In such a case, an authorized judge should be able to determine the validity of a contract, an agreement or commitment. In order to bridge between the contradictory requirements of non-repudiation and controlled dissemination Chaum and van Antwerpen introduced undeniable signatures <ref> [CA89] </ref> (which were subsequently the subject of many research works, e.g. [Cha90, BCDP90, DY91, FOO91, Ped91, CvHP91, Cha94, Oka94, Mic96, DP96, JSI96, JY96, GKR97]). We note that this type of interactive signatures was already suggested in 1976 by Michael Rabin based on one-time signatures [Rab78].
Reference: [Cha] <author> David Chaum. </author> <title> Private Signatures and Proof Systems. </title> <type> US Patent 5,493,614. </type>
Reference-contexts: Chameleon Hashing A chameleon hash function is associated with a user R who has published a public (hashing) key, denoted HK R , and holds the corresponding secret key (the trapdoor for finding collisions), denoted 3 Undeniable signatures with non-interactive verification have been recently presented in [JSI96] and also in <ref> [Cha] </ref>. Their solution still uses zero-knowledge proofs and in addition assumes an ideal hash function in order to get rid of the interactivity. The scheme is based on a particular discrete log-related construction of undeniable signatures.
Reference: [Cha90] <author> D. Chaum. </author> <title> Zero-knowledge undeniable signatures. </title> <editor> In I. DamgR ard, editor, </editor> <booktitle> Advances in Cryptology | Eurocrypt '90, </booktitle> <pages> pages 458-464, </pages> <address> Berlin, </address> <year> 1990. </year> <note> Springer-Verlag. Lecture Notes in Computer Science No. 473. </note>
Reference: [Cha94] <editor> David Chaum. Designated confirmer signatures. In A. De Santis, editor, </editor> <booktitle> Advances in Cryptology | Eurocrypt '94, </booktitle> <pages> pages 86-91, </pages> <address> Berlin, </address> <year> 1994. </year> <note> Springer-Verlag. Lecture Notes in Computer Science No. 950. </note>
Reference: [CvHP91] <author> D. Chaum, E. van Heijst, and B. Pfitzmann. </author> <title> Cryptographically strong undeniable signatures, unconditionally secure for the signer. </title> <editor> In J. Feigenbaum, editor, </editor> <booktitle> Advances in Cryptology | Crypto '91, </booktitle> <pages> pages 470-484, </pages> <address> Berlin, </address> <year> 1991. </year> <note> Springer-Verlag. Lecture Notes in Computer Science No. 576. </note>
Reference: [Dam87] <author> I. Damgard. </author> <title> Collision free hash functions. </title> <editor> In D. Chaum, editor, </editor> <booktitle> Advances in Cryptology | Eurocrypt '87, </booktitle> <pages> pages 203-216, </pages> <address> Berlin, </address> <year> 1987. </year> <note> Springer-Verlag. Lecture Notes in Computer Science No. 304. </note>
Reference-contexts: This construction was first introduced by Goldwasser, Micali and Rivest [GMR88] for building regular digital signatures, and used by Damgard <ref> [Dam87] </ref> to build collision resistant hash functions.
Reference: [DP96] <author> I. Damgard and T. Pedersen. </author> <title> New convertible undeniable signature schemes. </title> <editor> In Ueli Maurer, editor, </editor> <booktitle> Advances in Cryptology | Eurocrypt '96, </booktitle> <pages> pages 372-386, </pages> <address> Berlin, </address> <year> 1996. </year> <note> Springer-Verlag. Lecture Notes in Computer Science No. 1070. 18 </note>
Reference-contexts: There are also variations to the notion of convertibility, i.e. complete and selective. Complete convertibility transforms all the signatures generated under the same key, while selective convertibility transforms only a single signature. Secure solutions to the problem of convertible undeniable signatures appear in Damgard and Pedersen <ref> [DP96] </ref> and Gennaro, Krawczyk, and Rabin [GKR97]. In Section 3.2 we introduced a method in order to circumvent the need for the signer to store the message. Using this same technique we can enable convertibility. <p> Furthermore, by using the undeniable certificate on top of the chameleon signatures the identity of the signer and recipient are kept secret, as long as the certificate has not been verified. 6 In a sense, this solution can be seen as dual to the solution in <ref> [DP96] </ref> that is based on the idea of encrypting a signature while here we sign an encryption. 17 Acknowledgments We would like to thank Mihir Bellare and Daniele Micciancio for suggestions of implementations of Chameleon Hashing, and Ivan Damgard for clarifying what the state of the art is concerning hashing with
Reference: [DY91] <author> Y Desmedt and M. Yung. </author> <title> Weaknesses of undeniable signature schemes. </title> <editor> In J. Feigenbaum, editor, </editor> <booktitle> Advances in Cryptology | Crypto '91, </booktitle> <pages> pages 205-220, </pages> <address> Berlin, </address> <year> 1991. </year> <note> Springer-Verlag. Lecture Notes in Computer Science No. 576. </note>
Reference: [FOO91] <author> A. Fujioka, T. Okamoto, and K. Ohta. </author> <title> Interactive bi-proof systems and undeniable signature schemes. </title> <editor> In D. Davies, editor, </editor> <booktitle> Advances in Cryptology | Eurocrypt '91, </booktitle> <pages> pages 243-256, </pages> <address> Berlin, </address> <year> 1991. </year> <note> Springer-Verlag. Lecture Notes in Computer Science No. 547. </note>
Reference: [fST95] <institution> National Institute for Standards and Technology. Secure Hash Standard, </institution> <month> April 17 </month> <year> 1995. </year>
Reference-contexts: Thus, if we have a collision-resistant hash function that maps arbitrary messages to hash values of length `, e.g. ` = 160 for SHA-1 <ref> [fST95] </ref>, then it is enough to design a chameleon hash function that hashes elements of length `. We use this fact in our implementations below as well as in the applications of these functions to chameleon signatures.
Reference: [GKR96] <author> R. Gennaro, H. Krawczyk, and T. Rabin. </author> <title> Undeniable Certificates. </title> <type> Manuscript, </type> <year> 1996. </year>
Reference-contexts: we can achieve selective convertibility by having the signer expose the random bits used for the specific probabilistic encryption of the signed message, and complete convertibility by exposing the decryption key. (This commitment is unique given the one-to-one nature of the encryption function.) 7 Chameleon Signatures and Undeniable Certificates In <ref> [GKR96] </ref> the notion of of undeniable certificates was introduced. Here we show how to combine together an undeniable certificate scheme and chameleon signatures.
Reference: [GKR97] <author> R. Gennaro, H. Krawczyk, and T. Rabin. </author> <title> RSA-based Undeniable Signatures. </title> <editor> In B. Kaliski, editor, </editor> <booktitle> Advances in Cryptology | Crypto '97, </booktitle> <pages> pages 132-149, </pages> <address> Berlin, </address> <year> 1997. </year> <note> Springer-Verlag. Lecture Notes in Computer Science No. 1294. </note>
Reference-contexts: Complete convertibility transforms all the signatures generated under the same key, while selective convertibility transforms only a single signature. Secure solutions to the problem of convertible undeniable signatures appear in Damgard and Pedersen [DP96] and Gennaro, Krawczyk, and Rabin <ref> [GKR97] </ref>. In Section 3.2 we introduced a method in order to circumvent the need for the signer to store the message. Using this same technique we can enable convertibility. The mechanism was that the signer includes under his signature an encryption of the signed message 6 .
Reference: [GM84] <author> S. Goldwasser and S. Micali. </author> <title> Probabilistic encryption. </title> <journal> JCSS, </journal> <volume> 28(2) </volume> <pages> 270-299, </pages> <month> April </month> <year> 1984. </year>
Reference-contexts: cham-hash R (m; r) for r chosen uniformly at random. (In particular, from seeing cham-hash R (m; r) for randomly chosen r nothing is learned about the message m.) This condition can be relaxed to require that the above distributions are not necessarily identical for all messages but computationally indistinguishable <ref> [GM84] </ref>. In the above definition we do not specify the exact notions of efficiency and of negligible probability. These can be modeled by polynomial bounds or be quantified by explicit (concrete) time and probability bounds. <p> In this case S signs by applying cham-hash to this hash value of m rather than to m itself.) The encryption must be semantically secure <ref> [GM84] </ref> and can be implemented using a symmetric or asymmetric cryptosystem. Note, that if this option is used then the non-transferability property discussed below cannot be achieved information-theoretically. 3.3 Security Requirements Here we summarize the security properties that we require from a chameleon signature scheme.
Reference: [GMR88] <author> Shafi Goldwasser, Silvio Micali, and Ronald L. Rivest. </author> <title> A digital signature scheme secure against adaptive chosen-message attacks. </title> <journal> SIAM J. Computing, </journal> <volume> 17(2) </volume> <pages> 281-308, </pages> <month> April </month> <year> 1988. </year>
Reference-contexts: We show several constructions of chameleon hashing based on standard cryptographic assumptions, such as the hardness of factoring or computing discrete logarithms, as well as a general construction based on claw-free pairs of trapdoor permutations <ref> [GMR88] </ref>. <p> This construction was first introduced by Goldwasser, Micali and Rivest <ref> [GMR88] </ref> for building regular digital signatures, and used by Damgard [Dam87] to build collision resistant hash functions. <p> The proof that the above construction is a claw-free permutation under the assumption that factoring is hard appears in Appendix A. The proof is a simple variation of the proof in <ref> [GMR88] </ref>. Note that when computing the inverses of these functions there is need to choose the square root which is itself a quadratic residue. <p> We assume this signature scheme to be unforgeable <ref> [GMR88] </ref>. (In practice, this usually requires an appropriate encoding of the signed information, e.g. using a cryptographic hash function.) * A chameleon hashing function which defines a set of public and private keys associated with the "owner" of the hash, and the operation cham-hash for generating a hash on a message. <p> Thus he is providing a collision in the hash function. and in this specific construction this means that he is providing a claw. As has been shown by <ref> [GMR88] </ref> such a claw enables to factor the modulus n. Once the factorization is computed the signer can invert both f 0 and f 1 .
Reference: [JSI96] <author> M. Jakobsson, K. Sako, and R. Impagliazzo. </author> <title> Designated verifier proofs and their applications. </title> <editor> In Ueli Maurer, editor, </editor> <booktitle> Advances in Cryptology | Eurocrypt '96, </booktitle> <pages> pages 143-154, </pages> <address> Berlin, </address> <year> 1996. </year> <note> Springer-Verlag. Lecture Notes in Computer Science No. 1070. </note>
Reference-contexts: into regular signatures. 2 Chameleon Hashing A chameleon hash function is associated with a user R who has published a public (hashing) key, denoted HK R , and holds the corresponding secret key (the trapdoor for finding collisions), denoted 3 Undeniable signatures with non-interactive verification have been recently presented in <ref> [JSI96] </ref> and also in [Cha]. Their solution still uses zero-knowledge proofs and in addition assumes an ideal hash function in order to get rid of the interactivity. The scheme is based on a particular discrete log-related construction of undeniable signatures. <p> The scheme is based on a particular discrete log-related construction of undeniable signatures. Interestingly, they also use trapdoor commitments but applied to the confirmation proof rather than to the signature generation as in our case. A non-interactive denial protocol is suggested in <ref> [JSI96] </ref> but its details and practicality are unclear. 5 CK R . The pair of public and secret keys is generated by R according to a given generation algorithm.
Reference: [JY96] <author> M. Jakobsson and M. Yung. </author> <title> Proving without knowing: On oblivious, </title> <editor> agnostic and blindfolded provers. In N. Koblitz, editor, </editor> <booktitle> Advances in Cryptology | Crypto '96, </booktitle> <pages> pages 201-215, </pages> <address> Berlin, </address> <year> 1996. </year> <note> Springer-Verlag. Lecture Notes in Computer Science No. 1109. </note>
Reference: [Mic96] <author> M. Michels. </author> <title> Breaking and repairing a convertible undeniable signature scheme. </title> <booktitle> In ACM Conference on Computer and Communications Security, </booktitle> <year> 1996. </year>
Reference: [Oka94] <author> Tatsuaki Okamoto. </author> <title> Designated confirmer signatures and public-key encryption are equivalent. </title> <editor> In Y. Desmedt, editor, </editor> <booktitle> Advances in Cryptology | Crypto '94, </booktitle> <pages> pages 61-74, </pages> <address> Berlin, </address> <year> 1994. </year> <note> Springer-Verlag. Lecture Notes in Computer Science No. 839. </note>
Reference: [Ped91] <author> T. Pedersen. </author> <title> Distributed provers with applications to undeniable signatures. </title> <editor> In D. Davies, editor, </editor> <booktitle> Advances in Cryptology | Eurocrypt '91, </booktitle> <pages> pages 221-242, </pages> <address> Berlin, </address> <year> 1991. </year> <note> Springer-Verlag. Lecture Notes in Computer Science No. 547. </note>
Reference: [PP97] <author> T. Pedersen and B. Pfitzmann. </author> <title> Fail-stop signatures. </title> <journal> SIAM. J. Computing, </journal> <volume> 26(2) </volume> <pages> 291-330, </pages> <month> April </month> <year> 1997. </year>
Reference-contexts: Still, chameleon signatures cover much of the applications that motivate undeniable signatures, most notably, protecting the confidentiality of agreements as described and exemplified in the beginning of this introduction. For readers familiar with the work on Fail-Stop Signatures <ref> [PP97] </ref>, it is interesting to point out to a similarity between our techniques and the way fail-stop signatures are constructed. The latter have the property that the signer can prove forgeries that are due to cryptanalysis (as opposed to forgeries due to the stealing of the signer's secret signature key).
Reference: [Rab78] <author> M. Rabin. </author> <title> Digitalized Signatures. </title> <editor> In R. Demillo and et.al, editors, </editor> <booktitle> Foundations of Secure Computations, </booktitle> <pages> pages 155-165. </pages> <publisher> Academic Press, </publisher> <year> 1978. </year> <month> 19 </month>
Reference-contexts: We note that this type of interactive signatures was already suggested in 1976 by Michael Rabin based on one-time signatures <ref> [Rab78] </ref>. The basic paradigm behind this type of signatures is that verification of a signature requires the collaboration of the signer, so that the latter can control to whom the signed document is being disclosed.
References-found: 25

