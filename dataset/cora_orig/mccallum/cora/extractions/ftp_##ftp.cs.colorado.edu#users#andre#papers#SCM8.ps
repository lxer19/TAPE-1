URL: ftp://ftp.cs.colorado.edu/users/andre/papers/SCM8.ps
Refering-URL: http://www.cs.colorado.edu/~andre/papers.html
Root-URL: http://www.cs.colorado.edu
Email: fandre,dennis,alwg@cs.colorado.edu  
Title: System Modeling Resurrected  
Author: Andre van der Hoek, Dennis Heimbigner, and Alexander L. Wolf 
Address: Boulder, CO 80309 USA  
Affiliation: Software Engineering Research Laboratory Department of Computer Science University of Colorado  
Abstract: Over the past few years, research into system modeling has dwindled in favor of other interests in the field of configuration management. Outside influence, in the form of the emergence of the discipline of software architecture, demands that renewed attention is paid to system modeling because it places new requirements on, and offers new opportunities to, system modeling. In this paper we investigate these requirements and opportunities in more detail.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> V. Ambriola and L. Bendix. </author> <title> Object-oriented Configuration Control. </title> <booktitle> In Proceedings of the Second International Workshop on Software Configuration Management, </booktitle> <pages> pages 133-136. </pages> <booktitle> ACM SIGSOFT, </booktitle> <year> 1989. </year>
Reference-contexts: 1 Introduction Version models, system construction, and system modeling have historically been the main issues for configuration management. A large amount of research has been carried out in these areas <ref> [1, 3, 5, 8, 10] </ref>, of which a significant portion has made the transition into commercial configuration management systems. The focus of research has now shifted towards other interests.
Reference: 2. <author> R. Conradi and B. Westfechtel. </author> <title> Towards a Uniform Version Model for Software Configuration Management. </title> <booktitle> In Proceedings of the Seventh International Workshop on Software Configuration Management, number 1235 in Lecture Notes in Computer Science, </booktitle> <pages> pages 1-17, </pages> <address> New York, New York, 1997. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: The focus of research has now shifted towards other interests. The introduction of software process support in configuration management systems [4, 7], the development of distributed configuration management systems [6, 14], and the creation of unified version models <ref> [2, 17] </ref> are currently among the more prominent concerns. Despite the change in focus, research to develop new version models and provide better system construction tools certainly has continued [15, 16]. However, the lost issue in this transition seems to be system modeling.
Reference: 3. <author> J. Estublier and R. Casallas. </author> <title> The Adele Configuration Manager. </title> <editor> In W. Tichy, editor, </editor> <booktitle> Configuration Management, number 2 in Trends in Software, </booktitle> <pages> pages 99-134. </pages> <publisher> Wiley, </publisher> <address> London, Great Britain, </address> <year> 1994. </year>
Reference-contexts: 1 Introduction Version models, system construction, and system modeling have historically been the main issues for configuration management. A large amount of research has been carried out in these areas <ref> [1, 3, 5, 8, 10] </ref>, of which a significant portion has made the transition into commercial configuration management systems. The focus of research has now shifted towards other interests.
Reference: 4. <author> J. Estublier, S. Dami, and M. Amiour. </author> <title> High Level Process Modeling for SCM Systems. </title> <booktitle> In Proceedings of the Seventh International Workshop on Software Configuration Management, number 1235 in Lecture Notes in Computer Science, </booktitle> <pages> pages 81-97, </pages> <address> New York, New York, 1997. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: The focus of research has now shifted towards other interests. The introduction of software process support in configuration management systems <ref> [4, 7] </ref>, the development of distributed configuration management systems [6, 14], and the creation of unified version models [2, 17] are currently among the more prominent concerns. Despite the change in focus, research to develop new version models and provide better system construction tools certainly has continued [15, 16].
Reference: 5. <author> S.I. Feldman. </author> <title> MAKE | A Program for Maintaining Computer Programs. </title> <journal> Software|Practice and Experience, </journal> (9):252-265, April 1979. 
Reference-contexts: 1 Introduction Version models, system construction, and system modeling have historically been the main issues for configuration management. A large amount of research has been carried out in these areas <ref> [1, 3, 5, 8, 10] </ref>, of which a significant portion has made the transition into commercial configuration management systems. The focus of research has now shifted towards other interests.
Reference: 6. <author> J.J. Hunt, F. Lamers, J. Reuter, and W.F. Tichy. </author> <title> Distributed Configuration Man--agement via Java and the World Wide Web. </title> <booktitle> In Proceedings of the Seventh International Workshop on Software Configuration Management, number 1235 in Lecture Notes in Computer Science, </booktitle> <pages> pages 161-174, </pages> <address> New York, New York, 1997. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: The focus of research has now shifted towards other interests. The introduction of software process support in configuration management systems [4, 7], the development of distributed configuration management systems <ref> [6, 14] </ref>, and the creation of unified version models [2, 17] are currently among the more prominent concerns. Despite the change in focus, research to develop new version models and provide better system construction tools certainly has continued [15, 16].
Reference: 7. <author> D.B. Leblang. </author> <title> Managing the Software Development Process with ClearGuide. </title> <booktitle> In Proceedings of the Seventh International Workshop on Software Configuration Management, number 1235 in Lecture Notes in Computer Science, </booktitle> <pages> pages 66-80, </pages> <address> New York, New York, 1997. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: The focus of research has now shifted towards other interests. The introduction of software process support in configuration management systems <ref> [4, 7] </ref>, the development of distributed configuration management systems [6, 14], and the creation of unified version models [2, 17] are currently among the more prominent concerns. Despite the change in focus, research to develop new version models and provide better system construction tools certainly has continued [15, 16].
Reference: 8. <author> D.B. Leblang, R.P. Chase, Jr., and H. Spilke. </author> <title> Increasing Productivity with a Parallel Configuration Manager. </title> <booktitle> In Proceedings of the International Workshop on Software Versioning and Configuration Control, </booktitle> <pages> pages 144-158, </pages> <year> 1988. </year>
Reference-contexts: 1 Introduction Version models, system construction, and system modeling have historically been the main issues for configuration management. A large amount of research has been carried out in these areas <ref> [1, 3, 5, 8, 10] </ref>, of which a significant portion has made the transition into commercial configuration management systems. The focus of research has now shifted towards other interests.
Reference: 9. <author> D.C. Luckham and J. Vera. </author> <title> An Event-Based Architecture Definition Language. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 21(9) </volume> <pages> 717-734, </pages> <month> September </month> <year> 1995. </year>
Reference: 10. <author> K. Marzullo and D. Wiebe. </author> <title> A Software System Modelling Facility. </title> <booktitle> In Proceedings of the ACM SIGSOFT/SIGPLAN Software Engineering Symposium on Practical Software Development Environments. ACM SIGSOFT, </booktitle> <month> April </month> <year> 1984. </year>
Reference-contexts: 1 Introduction Version models, system construction, and system modeling have historically been the main issues for configuration management. A large amount of research has been carried out in these areas <ref> [1, 3, 5, 8, 10] </ref>, of which a significant portion has made the transition into commercial configuration management systems. The focus of research has now shifted towards other interests.
Reference: 11. <author> B.R. </author> <title> Schmerl and C.D. Marlin. Versioning and Consistency for Dynamically Composed Configurations. </title> <booktitle> In Proceedings of the Seventh International Workshop on Software Configuration Management, number 1235 in Lecture Notes in Computer Science, </booktitle> <pages> pages 49-65, </pages> <address> New York, New York, 1997. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: However, the lost issue in this transition seems to be system modeling. System modeling is the activity of describing the structure of a system in terms of its components and the relationships among them. Virtually no attention has been paid to system modeling since the development of DCDL <ref> [11] </ref> and PCL [13]. The goal of this paper is to resurrect system modeling. We advocate that it should, once again, be one of the primary research areas in configuration management. This resurrection is warranted by the recent emergence of a new research discipline, software architecture.
Reference: 12. <author> J.A. Stafford, D.J. Richardson, and A.L. Wolf. </author> <title> Chaining: A Software Architecture Dependence Analysis Technique. </title> <type> Technical Report CU-CS-845-97, </type> <institution> Department of Computer Science, University of Colorado, Boulder, Colorado, </institution> <month> September </month> <year> 1997. </year>
Reference-contexts: A second advantage of connectors is the simplification of change impact analysis. The impact of changes does not have to be deduced solely by analyzing source code, but can instead be derived from the system model using architectural dependence analysis techniques <ref> [12] </ref>. This in turn simplifies build management, as less recompilation can be achieved as well. As an example, consider a connector that is implemented as a global variable. This variable is declared in a header file that is included by many source files.
Reference: 13. <author> E. Tryggeseth, B. Gulla, and R. Conradi. </author> <title> Modelling Systems with Variability using the PROTEUS Configuration Language. In Software Configuration Management: </title> <booktitle> ICSE SCM-4 and SCM-5 Workshops Selected Papers, number 1005 in Lecture Notes in Computer Science, </booktitle> <pages> pages 216-240, </pages> <address> New York, New York, 1995. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: System modeling is the activity of describing the structure of a system in terms of its components and the relationships among them. Virtually no attention has been paid to system modeling since the development of DCDL [11] and PCL <ref> [13] </ref>. The goal of this paper is to resurrect system modeling. We advocate that it should, once again, be one of the primary research areas in configuration management. This resurrection is warranted by the recent emergence of a new research discipline, software architecture. <p> Example of an Architectural System Model in Rapide. so by investigating the applicability of the individual parts of ADLs to system modeling. Components Traditional system models have equated components to the physical parts of a system. In PCL <ref> [13] </ref>, for example, components are the result of a hierarchical breakdown of a system into its constituent subsystems. Typical usage of a configuration management system implies that a breakdown into logical components is desired, even though it is not directly supported.
Reference: 14. <editor> A. van der Hoek, D.M. Heimbigner, and A.L. Wolf. </editor> <title> A Generic, Peer-to-Peer Repository for Distributed Configuration Management. </title> <booktitle> In Proceedings of the 18th International Conference on Software Engineering, </booktitle> <pages> pages 308-317. </pages> <institution> Association for Computer Machinery, </institution> <month> March </month> <year> 1996. </year>
Reference-contexts: The focus of research has now shifted towards other interests. The introduction of software process support in configuration management systems [4, 7], the development of distributed configuration management systems <ref> [6, 14] </ref>, and the creation of unified version models [2, 17] are currently among the more prominent concerns. Despite the change in focus, research to develop new version models and provide better system construction tools certainly has continued [15, 16].
Reference: 15. <author> D. Wiborg Weber. </author> <title> Change Sets Versus Change Packages: Comparing Implementations of Change-Based SCM. </title> <booktitle> In Proceedings of the Seventh International Workshop on Software Configuration Management, number 1235 in Lecture Notes in Computer Science, </booktitle> <pages> pages 25-35, </pages> <address> New York, New York, 1997. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Despite the change in focus, research to develop new version models and provide better system construction tools certainly has continued <ref> [15, 16] </ref>. However, the lost issue in this transition seems to be system modeling. System modeling is the activity of describing the structure of a system in terms of its components and the relationships among them.
Reference: 16. <author> L. Wingerd and C. Seiwald. </author> <title> Constructing a Large Product with Jam. </title> <booktitle> In Proceedings of the Seventh International Workshop on Software Configuration Management, number 1235 in Lecture Notes in Computer Science, </booktitle> <pages> pages 36-48, </pages> <address> New York, New York, 1997. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Despite the change in focus, research to develop new version models and provide better system construction tools certainly has continued <ref> [15, 16] </ref>. However, the lost issue in this transition seems to be system modeling. System modeling is the activity of describing the structure of a system in terms of its components and the relationships among them.
Reference: 17. <author> A. Zeller and G. Snelting. </author> <title> Unified Versioning through Feature Logic. </title> <journal> ACM Transactions on Software Engineering and Methodology, </journal> <volume> 6(4) </volume> <pages> 398-441, </pages> <month> October </month> <year> 1997. </year> <title> This article was processed using the L A T E X macro package with LLNCS style </title>
Reference-contexts: The focus of research has now shifted towards other interests. The introduction of software process support in configuration management systems [4, 7], the development of distributed configuration management systems [6, 14], and the creation of unified version models <ref> [2, 17] </ref> are currently among the more prominent concerns. Despite the change in focus, research to develop new version models and provide better system construction tools certainly has continued [15, 16]. However, the lost issue in this transition seems to be system modeling.
References-found: 17

