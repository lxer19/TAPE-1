URL: http://www.cs.utexas.edu/users/mccain/mythesis.ps
Refering-URL: http://www.cs.utexas.edu/users/mccain/
Root-URL: http://www.cs.utexas.edu
Title: by  
Author: Norman Clayton McCain 
Date: 1997  
Note: Copyright  
Abstract-found: 0
Intro-found: 1
Reference: [ Apt and Bezem, 1990 ] <author> Krzysztof Apt and Marc Bezem. </author> <title> Acyclic programs. </title> <editor> In David Warren and Peter Szeredi, editors, </editor> <booktitle> Logic Programming: Proc. of the Seventh Int'l Conf., </booktitle> <pages> pages 617-633, </pages> <year> 1990. </year>
Reference: [ Apt et al., 1988 ] <author> Krzysztof Apt, Howard Blair, and Adrian Walker. </author> <title> Towards a theory of declarative knowledge. </title> <editor> In Jack Minker, editor, </editor> <booktitle> Foundations of Deductive Databases and Logic Programming, </booktitle> <pages> pages 89-148. </pages> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA, </address> <year> 1988. </year>
Reference: [ Baker, 1989 ] <author> Andrew Baker. </author> <title> A simple solution to the Yale Shooting Problem. </title> <editor> In Ronald Brachman, Hector Levesque, and Raymond Reiter, editors, </editor> <booktitle> Proc. of the First Int'l Conf. on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> pages 11-20, </pages> <year> 1989. </year>
Reference: [ Baker, 1991 ] <author> Andrew Baker. </author> <title> Nonmonotonic reasoning in the framework of situation calculus. </title> <journal> Artificial Intelligence, </journal> <volume> 49 </volume> <pages> 5-23, </pages> <year> 1991. </year>
Reference: [ Baral and Gelfond, 1993 ] <author> Chitta Baral and Michael Gelfond. </author> <title> Representing concurrent actions in extended logic programming. </title> <booktitle> In Proc. of IJCAI-93, </booktitle> <pages> pages 866-871, </pages> <year> 1993. </year>
Reference-contexts: are defined. 99 The formulas :Up (Left) 0 ^ :Up (Right) 0 ^ Raise (Left) 0 ^ :Raise (Right) 0 Spilled 1 :Spilled 0 ^ Raise (Left) 0 ^ Raise (Right) 0 :Spilled 1 are consequences of D 7:1 . 5 3 In [ Gelfond et al., 1991b ] , <ref> [ Baral and Gelfond, 1993 ] </ref> , and [ Thielscher, 1995b ] , the Soup domain is described essentially as follows: (i) the action of raising either side of the bowl causes the soup to be spilled, but (ii) assuming the soup is not already spilled, raising both sides of the
Reference: [ Baral et al., 1995 ] <author> Chitta Baral, Michael Gelfond, and Alessandro Provetti. </author> <title> Representing actions I: (Laws, observations and hypotheses). </title> <booktitle> In Working Notes: AAAI 185 Spring Symposium on Extending Theories of Action: Formal Theory and Practical Applications, </booktitle> <pages> pages 17-22, </pages> <year> 1995. </year>
Reference: [ Baral, 1995 ] <author> Chitta Baral. </author> <title> Reasoning about actions: non-deterministic effects, constraints, and qualification. </title> <booktitle> In Proc. of IJCAI-95, </booktitle> <pages> pages 2017-2023, </pages> <year> 1995. </year>
Reference: [ Boutilier and Friedman, 1995 ] <author> Craig Boutilier and Nir Friedman. </author> <title> Nondeterministic actions and the frame problem. </title> <booktitle> In Working Notes: AAAI Spring Symposium on Extending Theories of Action: Formal Theory and Practical Applications, </booktitle> <pages> pages 39-44, </pages> <year> 1995. </year>
Reference-contexts: A set of propositions in an action description language specifies, as we have said, a structure called a transition system. Definitions similar to the following appear in <ref> [ Boutilier and Friedman, 1995 ] </ref> and [ Lifschitz, 1995 ] .
Reference: [ Brewka and Hertzberg, 1993 ] <author> Gerhard Brewka and Joachim Hertzberg. </author> <title> How to do things with worlds: On formalizing actions and plans. </title> <journal> Journal of Logic and Computation, </journal> <volume> 3(5), </volume> <year> 1993. </year>
Reference: [ Burks, 1951 ] <author> Arthur W. Burks. </author> <title> The logic of causal propositions. </title> <journal> Mind, </journal> <volume> 60 </volume> <pages> 363-382, </pages> <year> 1951. </year>
Reference: [ Carnap, 1947 ] <author> Rudolph Carnap. </author> <title> Meaning and Necessity. </title> <publisher> University of Chicago Press, </publisher> <address> Chicago, Ill., </address> <year> 1947. </year>
Reference-contexts: By V (s) we denote the interpretation fF : F 2 F and V (s; F )g [ f:F : F 2 F and not V (s; F )g: Employing terminology from <ref> [ Carnap, 1947 ] </ref> , we say that V (s) is the state description of s, and we say that s realizes the state description V (s).
Reference: [ Chellas, 1971 ] <author> Brian. </author> <title> Chellas. </title> <journal> Imperatives. Theoria, </journal> <volume> 37 </volume> <pages> 114-129, </pages> <year> 1971. </year>
Reference-contexts: The concepts of historical necessity and possibility have been formalized in the framework of modal-temporal logic by [ Montague, 1968 ] , <ref> [ Chellas, 1971 ] </ref> , and [ Kamp, 1979 ] . In these logics, formulas are understood to designate time-dependent propositions and are evaluated with respect to a world and a time. In particular, the accessibility relation for the historical necessity operator is defined as a function of time.
Reference: [ Clark, 1978 ] <author> Keith Clark. </author> <title> Negation as failure. </title> <editor> In Herve Gallaire and Jack Minker, editors, </editor> <booktitle> Logic and Data Bases, </booktitle> <pages> pages 293-322. </pages> <publisher> Plenum Press, </publisher> <address> New York, </address> <year> 1978. </year>
Reference-contexts: Indeed, the semantics of objective programs is the natural generalization of the completion semantics <ref> [ Clark, 1978 ] </ref> to the class of programs that allow negation to occur in the heads as well as the bodies of rules. <p> There are no other supported models. Therefore, (a b) is a consequence of 6:1 . 3 6.2 Literal Completion The original semantics for logic programs with negation was the completion semantics for normal programs <ref> [ Clark, 1978 ] </ref> . In this section, we show that the supported model semantics for objective programs corresponds to a straightforward generalization of completion semantics for the case of programs in which negation is allowed to occur in the heads of rules. <p> If there are no such rules (k = 0), (6.3) stands for A False. According to the completion semantics <ref> [ Clark, 1978 ] </ref> , the models of a normal program are the models of comp (). The completion procedure for normal programs can be extended to the class of objective programs as follows. <p> relationship between the language of causal theories and default logic, and the relationship between objective programs (the logic program subclass of causal theories) and various semantics for logic programming. 152 * We have defined a translation from objective programs into classical proposi-tional logic via a generalization of the completion procedure <ref> [ Clark, 1978 ] </ref> for normal logic programs. * We have described and illustrated a general approach to formalizing action domains as causal theories.
Reference: [ Crawford and Auton, 1993 ] <author> J.M. Crawford and L.D. Auton. </author> <title> Experimental results on the cross-over point in satisfiability problems. </title> <booktitle> In Proc. AAAI-93, </booktitle> <pages> pages 21-27, </pages> <year> 1993. </year>
Reference-contexts: Specifically, they have compared the systematic program tableau <ref> [ Crawford and Auton, 1993 ] </ref> and an unsystematic (stochastic) program called Walksat [ Selman et al., 1994 ] . They report solving much larger planning problems using Walksat than tableau.
Reference: [ Crawford and Etherington, 1992 ] <author> James Crawford and David Etherington. </author> <title> Formalizing reasoning about change: A qualitative reasoning approach. </title> <booktitle> In Proc. AAAI-92, </booktitle> <pages> pages 577-583, </pages> <year> 1992. </year> <month> 186 </month>
Reference: [ Davidson, 1980 ] <author> Donald. Davidson. </author> <title> Agency. </title> <editor> In Donald Davidson, editor, </editor> <booktitle> Essays on Actions and Events, </booktitle> <pages> pages 43-62. </pages> <publisher> Oxford University Press, </publisher> <year> 1980. </year>
Reference: [ Davis and Putnam, 1960 ] <author> M Davis and H. Putnam. </author> <title> A computing procedure for quantification theory. </title> <journal> J. ACM, </journal> <volume> 7(3) </volume> <pages> 201-215, </pages> <year> 1960. </year>
Reference-contexts: For query answering on the basis of Corollary 8.1, we require a systematic satisfiability algorithm. Currently, one of the best implementations of a systematic satisfiability algorithm is the program called ntab (previously known as tableau) by Crawford and Auton [1993]. It is an efficient implementation of the Davis-Putnam procedure <ref> [ Davis and Putnam, 1960 ] </ref> and incorporates some surprisingly effective heuristics.
Reference: [ Denecker and De Schreye, 1993 ] <author> Marc Denecker and Danny De Schreye. </author> <title> Representing incomplete knowledge in abductive logic programming. </title> <editor> In Dale Miller, editor, </editor> <booktitle> Logic Programming: Proceedings of the 1993 Int'l Symposium, </booktitle> <pages> pages 147-163, </pages> <year> 1993. </year>
Reference: [ Elkan, 1992 ] <author> Charles Elkan. </author> <title> Reasoning about action in first-order logic. </title> <booktitle> In Proc. of the 1992 Canadian Conf. on Artificial Intelligence, </booktitle> <year> 1992. </year>
Reference: [ Fages, 1994 ] <author> Fran~cois Fages. </author> <title> Consistency of Clark's completion and existence of stable models. </title> <journal> Journal of Methods of Logic in Computer Science, </journal> <volume> 1 </volume> <pages> 51-60, </pages> <year> 1994. </year>
Reference-contexts: A normal program is called positive-order-consistent <ref> [ Fages, 1994 ] </ref> if there are no infinite paths in the positive atom dependency graph for . Fages has shown that the completion semantics and stable model semantics coincide for positive-order-consistent normal programs. We, therefore, have the following proposition. Proposition 6.4 Let be a completable, positive-order-consistent, normal program.
Reference: [ Faye et al., 1994 ] <author> J. Faye, U. Sche*er, and Urchs M. </author> <title> Logic and Causal Reasoning. </title> <publisher> Akademie Verlag, </publisher> <address> Berlin, </address> <year> 1994. </year>
Reference: [ Fikes and Nilsson, 1971 ] <author> Richard Fikes and Nils Nilsson. </author> <title> STRIPS: A new approach to the application of theorem proving to problem solving. </title> <journal> Artificial Intelligence, </journal> <volume> 2(3-4):189-208, </volume> <year> 1971. </year>
Reference-contexts: The appeal of satisfiability planning methods|as opposed to methods, such the one described in [ McAllester and Rosenblitt, 1991 ] , which presupposes STRIPS-like <ref> [ Fikes and Nilsson, 1971 ] </ref> add and delete lists|is that satisfiability planning methods can be used with any formalism that can be translated into classical propositional logic. 4 Attempting to formalize such domains by writing causal laws with only literal consequents can lead to unintended causal loops.
Reference: [ Geffner, 1989 ] <author> Hector Geffner. </author> <title> Default reasoning, minimality and coherence. </title> <editor> In Ronald Brachman, Hector Levesque, and Raymond Reiter, editors, </editor> <booktitle> Proc. of the First Int'l Conf. on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> pages 137-148, </pages> <year> 1989. </year>
Reference: [ Geffner, 1990 ] <author> Hector Geffner. </author> <title> Causal theories of nonmonotonic reasoning. </title> <booktitle> In Proc. AAAI-90, </booktitle> <pages> pages 524-530, </pages> <year> 1990. </year>
Reference-contexts: Intuitively, this is not what we wish to say; the domino is down 12 Schema (7.25) represents a set of dynamic causal laws that do not mention the occurrences of actions. Laws of this general kind have appeared previously in <ref> [ Geffner, 1990 ] </ref> and [ Thielscher, 1995b ] . 13 These claims are machine checked in Section 9.4.
Reference: [ Geffner, 1992 ] <author> Hector Geffner. </author> <title> Reasoning with defaults: causal and conditional theories. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1992. </year> <month> 187 </month>
Reference: [ Gelfond and Lifschitz, 1988 ] <author> Michael Gelfond and Vladimir Lifschitz. </author> <title> The stable model semantics for logic programming. </title> <editor> In Robert Kowalski and Kenneth Bowen, editors, </editor> <booktitle> Logic Programming: Proc. of the Fifth Int'l Conf. and Symp., </booktitle> <pages> pages 1070-1080, </pages> <year> 1988. </year>
Reference-contexts: Let us designate the minimal model of by ff (). Now let instead be a normal program, and I be an interpretation. By I we designate the program that is obtained from by deleting 3 In the original definition of the stable model semantics for normal programs <ref> [ Gelfond and Lifschitz, 1988 ] </ref> , an interpretation I was represented, not by a set of literals, but by a set of atoms. Every atom in such a set M was taken to be true in I, and every atom not M was taken to be false in I. <p> Notice that I is a positive program. An interpretation I is said to be a stable model of if I = ff ( I ) <ref> [ Gelfond and Lifschitz, 1988 ] </ref> .
Reference: [ Gelfond and Lifschitz, 1990 ] <author> Michael Gelfond and Vladimir Lifschitz. </author> <title> Logic programs with classical negation. </title> <editor> In David Warren and Peter Szeredi, editors, </editor> <booktitle> Logic Programming: Proc. of the Seventh Int'l Conf., </booktitle> <pages> pages 579-597, </pages> <year> 1990. </year>
Reference-contexts: Thus, the corollary follows by Proposition 5.4. 2 In the next chapter, we will see that in the special case in which for every ) in D, is a literal and is a conjunction of literals, there is a similar embedding into extended programs <ref> [ Gelfond and Lifschitz, 1990 ] </ref> . 71 Chapter 6 Ob jective Logic Programs In this chapter we investigate the class of causal theories in which the antecedent of every causal law is a conjunction of literals and the consequent of every causal law is a literal. <p> mean a set of rules of the form A 0 L 1 ; : : : ; L n where A 0 is an atom, and for all i, 1 i n, L i is a literal. 73 We will also have reason to discuss the class of extended programs <ref> [ Gelfond and Lifschitz, 1990 ] </ref> . <p> 0 ; :a1 :a1; : : : has two supported models, one in which for all i (i &gt; 0), a i is false, and the other in which for all i (i &gt; 0), a i is true. 3 6.3.3 An Embedding in Extended Programs The "answer set" semantics <ref> [ Gelfond and Lifschitz, 1990 ] </ref> for extended programs can be defined by an embedding into default logic as follows. <p> The following proposition has been shown by Gelfond and Lifschitz. Proposition 6.5 <ref> [Gelfond and Lifschitz, 1990] </ref>. For any extended program , if S is an answer set for then Cn (S) is an extension for D (), and for every extension E for D () there is exactly one answer set S for such that Cn (S) = E.
Reference: [ Gelfond and Lifschitz, 1992 ] <author> Michael Gelfond and Vladimir Lifschitz. </author> <title> Representing actions in extended logic programming. </title> <editor> In Krzysztof Apt, editor, </editor> <booktitle> Proc. Joint Int'l Conf. and Symp. on Logic Programming, </booktitle> <pages> pages 559-573, </pages> <year> 1992. </year>
Reference: [ Gelfond and Lifschitz, 1993 ] <author> Michael Gelfond and Vladimir Lifschitz. </author> <title> Representing action and change by logic programs. </title> <journal> Journal of Logic Programming, </journal> <volume> 17 </volume> <pages> 301-322, </pages> <year> 1993. </year>
Reference: [ Gelfond et al., 1991a ] <author> Michael Gelfond, Vladimir Lifschitz, Halina Przymusinska, and Miros law Truszczynski. </author> <title> Disjunctive defaults. </title> <editor> In James Allen, Richard Fikes, and Erik Sandewall, editors, </editor> <booktitle> Principles of Knowledge Representation and Reasoning: Proc. of the Second Int'l Conf., </booktitle> <pages> pages 230-237, </pages> <year> 1991. </year>
Reference-contexts: The reader may skip this section (and the related Section 6.3) without loss of continuity. In defining the syntax and semantics of default logic, we will be concerned only with propositional default theories. The definitions given here follow the style of definition in <ref> [ Gelfond et al., 1991a ] </ref> . A default is an expression of the form ff : fi 1 ; : : : ; fi m (5.7) where ff, fi 1 ; : : : ; fi m (m 0), and fl are formulas of propositional logic.
Reference: [ Gelfond et al., 1991b ] <author> Michael Gelfond, Vladimir Lifschitz, and Arkady Rabinov. </author> <title> What are the limitations of the situation calculus? In Robert Boyer, editor, Automated Reasoning: </title> <booktitle> Essays in Honor of Woody Bledsoe, </booktitle> <pages> pages 167-179. </pages> <publisher> Kluwer Academic, </publisher> <address> Dordrecht, </address> <year> 1991. </year>
Reference-contexts: The need for concurrency is illustrated by the following example. 98 Example 7.1 In this domain, from <ref> [ Gelfond et al., 1991b ] </ref> , there is a bowl of soup. We suppose that the agent, using his two hands, can raise or lower each side of the bowl independently of the other. <p> Schemas (7.12) and (7.13) describe the explicit effects of raising and lowering each side of the bowl. 4 Schema (7.14) says that bowl's being tilted causes the soup to be spilled. 3 As is noted in <ref> [ Gelfond et al., 1991b ] </ref> , this is essentially the example from [ Pednault, 1987 ] in which two agents lift opposite sides of a table. 4 When t is 5, t + 1 is not an expression of type time. <p> the signature with respect to which they are defined. 99 The formulas :Up (Left) 0 ^ :Up (Right) 0 ^ Raise (Left) 0 ^ :Raise (Right) 0 Spilled 1 :Spilled 0 ^ Raise (Left) 0 ^ Raise (Right) 0 :Spilled 1 are consequences of D 7:1 . 5 3 In <ref> [ Gelfond et al., 1991b ] </ref> , [ Baral and Gelfond, 1993 ] , and [ Thielscher, 1995b ] , the Soup domain is described essentially as follows: (i) the action of raising either side of the bowl causes the soup to be spilled, but (ii) assuming the soup is not
Reference: [ Gelfond, 1987 ] <author> Michael Gelfond. </author> <title> On stratified autoepistemic theories. </title> <booktitle> In Proceedings of AAAI-87, </booktitle> <pages> pages 207-211, </pages> <year> 1987. </year>
Reference: [ Gelfond, 1988 ] <author> Michael Gelfond. </author> <title> Autoepistemic logic and formalization of com-monsense reasoning: preliminary report. </title> <booktitle> In Proc. 2nd Int'l Workshop on Non-Monotonic Reasoning, </booktitle> <pages> pages 176-186, </pages> <year> 1988. </year> <month> 188 </month>
Reference: [ Gibbard and Harper, 1981 ] <author> Allan Gibbard and William L. Harper. </author> <title> Counterfactuals and two kinds of expected utility. </title> <editor> In W.L Harper, R. Stalnaker, and G. Pearce, editors, </editor> <title> Ifs: conditionals, belief, decision, chance, </title> <booktitle> and time, </booktitle> <pages> pages 153-190. </pages> <address> D. </address> <publisher> Reidel Publishing Company, Dordrecht, Holland, </publisher> <year> 1981. </year>
Reference: [ Ginsberg and Smith, 1988a ] <author> Matthew L. Ginsberg and David E. Smith. </author> <title> Reasoning about action I: a possible worlds approach. </title> <journal> Artificial Intelligence, </journal> <volume> 35(2) </volume> <pages> 165-195, </pages> <year> 1988. </year>
Reference: [ Ginsberg and Smith, 1988b ] <author> Matthew L. Ginsberg and David E. Smith. </author> <title> Reasoning about action II: the qualification problem. </title> <journal> Artificial Intelligence, </journal> <volume> 35(3) </volume> <pages> 311-342, </pages> <year> 1988. </year>
Reference: [ Giunchiglia and Lifschitz, 1995 ] <author> Enrico Giunchiglia and Vladimir Lifschitz. </author> <title> Dependent fluents. </title> <booktitle> In Proc. IJCAI-95, </booktitle> <pages> pages 1964-1969, </pages> <year> 1995. </year>
Reference-contexts: The language A CL described in this chapter is purely an action description language. No query language is specified for it. Many choices of query language are possible, including, for example, the query language of A, the query language of AR <ref> [ Giunchiglia and Lifschitz, 1995 ] </ref> , the two query languages defined in [ Lifschitz, 1995 ] , and the language M P L of Boutilier and Friedman [1995]. 45 4.2 The Language A CL In this section, we define the syntax and semantics of the language A CL .
Reference: [ Giunchiglia and Lifschitz, 1997 ] <author> Enrico Giunchiglia and Vladimir Lifschitz. </author> <title> An action language based on causal logic. </title> <type> Unpublished manuscript, </type> <year> 1997. </year>
Reference: [ Giunchiglia et al., 1995 ] <author> Enrico Giunchiglia, G. Neelakantan Kartha, and Vladimir Lifschitz. </author> <title> Actions with indirect effects (extended abstract). </title> <booktitle> In Working Notes of the Symposium on Extending Theories of Actions, </booktitle> <year> 1995. </year>
Reference: [ Goldman, 1970 ] <author> Alvin I. Goldman. </author> <title> A theory of human action. </title> <publisher> Prentice-Hall, </publisher> <address> En-glewood Cliffs, N.J., </address> <year> 1970. </year>
Reference: [ Grice, 1989 ] <author> Paul Grice. </author> <title> Studies in the way of words. </title> <publisher> Harvard University Press, </publisher> <address> Cambridge, Mass., </address> <year> 1989. </year>
Reference-contexts: In natural language, we can indeed express the nondeterminism of coin tossing by expressions such as "Toss causes heads or tails" and even "Toss causes heads or not heads." But this works, we suggest, only because of certain "conversational implicatures" <ref> [ Grice, 1989 ] </ref> that these expressions have in addition to their logical content; for example, in the latter case, the implicatures are that "Toss possibly causes heads," and "Toss possibly causes not heads." That these are indeed 55 fact, extensions of both kinds, as well as others, are possible.
Reference: [ Haas, 1987 ] <author> Andrew Haas. </author> <title> The case for domain-specific frame axioms. </title> <editor> In Frank M. Brown, editor, </editor> <booktitle> The Frame Problem in Artificial Intelligence, Proc. of the 1987 Workshop, </booktitle> <year> 1987. </year> <month> 189 </month>
Reference: [ Hanks and McDermott, 1986 ] <author> Steve Hanks and Drew McDermott. </author> <title> Default rea-soning, nonmonotonic logics, and the frame problem. </title> <booktitle> In Proc. AAAI-86, </booktitle> <pages> pages 328-333, </pages> <year> 1986. </year>
Reference: [ Hanks and McDermott, 1987 ] <author> Steve Hanks and Drew McDermott. </author> <title> Nonmonotonic logic and temporal projection. </title> <journal> Artificial Intelligence, </journal> <volume> 33(3) </volume> <pages> 379-412, </pages> <year> 1987. </year>
Reference-contexts: The action names Toggle (Switch1) and Toggle (Switch2) are abbreviated as T 1 and T 2 , respectively. 3 Example 4.2 The next example is a variant of the so-called Yale Shooting domain <ref> [ Hanks and McDermott, 1987 ] </ref> (cf.
Reference: [ Herre and Wagner, 1996 ] <author> Heinrich Herre and Gerd Wagner. </author> <title> Stable generated models of generalized logic programs. This was a talk delivered at the Dagstuhl Seminar 9627, Disjunctive Logic Programming and Databases: Nonmonotonic Aspects, </title> <month> July 1-5, </month> <year> 1996. </year>
Reference: [ Jeffrey, 1965 ] <author> Richard C. Jeffrey. </author> <title> The logic of decision. </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1965. </year>
Reference: [ Kamp, 1979 ] <author> J. A. W. Kamp. </author> <title> The logic of historical necessity, part I. </title> <journal> unpublished typescript, </journal> <year> 1979. </year>
Reference-contexts: The concepts of historical necessity and possibility have been formalized in the framework of modal-temporal logic by [ Montague, 1968 ] , [ Chellas, 1971 ] , and <ref> [ Kamp, 1979 ] </ref> . In these logics, formulas are understood to designate time-dependent propositions and are evaluated with respect to a world and a time. In particular, the accessibility relation for the historical necessity operator is defined as a function of time.
Reference: [ Kartha and Lifschitz, 1994 ] <author> G. Neelakantan Kartha and Vladimir Lifschitz. </author> <title> Actions with indirect effects (preliminary report). </title> <booktitle> In Proc. of the Fourth Int'l Conf. on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> pages 341-350, </pages> <year> 1994. </year>
Reference-contexts: This is the sense in which W alking implies Alive. 32 which, as we observed, is anomalous and results from the unintended ramification :Up2. In [ Lifschitz, 1990 ] and <ref> [ Kartha and Lifschitz, 1994 ] </ref> , this ramification is blocked by declaring Up1 and Up2 to be "in the frame" and On to be "not in the frame." (The assumption of inertia is applied only to the fluents that are in the frame.) By contrast, the use of static causal <p> Together, these propositions allow us to introduce abbreviations for complex formulas, via explicit definitions, and to use them to simplify causal theories. The importance of conservative extension and replacement theorems for formalizing action domains was recognized in <ref> [ Kartha and Lifschitz, 1994 ] </ref> . 5.5.3 Proofs of Propositions 5.2 and 5.3 Lemma 5.1 Let F be an atom, A be a set of atoms, and D and D 0 be causal theories in languages with the signatures A and A [ fF g, respectively. <p> The following example, which is credited to Ray Reiter in <ref> [ Kartha and Lifschitz, 1994 ] </ref> and [ Shanahan, 1997 ] , is different in this respect. Example 7.3 Consider the action of dropping a block onto the surface of a table that is painted black and white.
Reference: [ Kartha, 1993 ] <author> G. Neelakantan Kartha. </author> <title> Soundness and completeness theorems for three formalizations of action. </title> <booktitle> In Proc. of IJCAI-93, </booktitle> <pages> pages 724-729, </pages> <year> 1993. </year>
Reference: [ Kartha, 1995 ] <author> G. Neelakantan Kartha. </author> <title> A mathematical investigation of reasoning about actions. </title> <type> Dissertation, </type> <institution> The University of Texas at Austin, </institution> <year> 1995. </year>
Reference: [ Kautz and Selman, 1992 ] <author> Henry Kautz and Bart Selman. </author> <title> Planning as satisfiability. </title> <editor> In J. Lloyd, editor, </editor> <booktitle> Proceedings of the 10th European Conference on Artificial Intelligence (ECAI 92), </booktitle> <address> Vienna, Austria, </address> <year> 1992. </year> <month> 190 </month>
Reference-contexts: two action query languages, including one that contains op erators for the natural modalities of historical necessity and possibility. * On the basis of the above-mentioned generalization of Clark's completion procedure, we have described and implemented an approach to automated query answering and planning which is based on satisfiability checking <ref> [ Kautz and Selman, 1992 ] </ref> . * Finally, we have attempted to illuminate several conceptual issues that arise in formalizing action domains: (i) the inappropriateness of using state constraints to infer the indirect effects of actions, (ii) the meaning of inertia, (iii) the issue of language dependence in action formalisms,
Reference: [ Kautz and Selman, 1996 ] <author> Henry Kautz and Bart Selman. </author> <title> Pushing the envelope: planning, propositional logic, and stochastic search. </title> <booktitle> In Proceedings of AAAI-96, </booktitle> <year> 1996. </year>
Reference: [ Kautz, 1986 ] <author> Henry Kautz. </author> <title> The logic of persistence. </title> <booktitle> In Proc. of AAAI-86, </booktitle> <pages> pages 401-405, </pages> <year> 1986. </year>
Reference: [ Kim, 1974 ] <author> Jaegwon Kim. </author> <title> Noncausal connections. </title> <journal> No^us, </journal> <volume> 8 </volume> <pages> 41-52, </pages> <year> 1974. </year>
Reference-contexts: The first toss did not come up heads, and so already by time 1 we had no chance of winning by time 2. 3 5 Actually, this may be an example of a determination relation that is not, strictly speaking, causal, although it is "causal-like." (See <ref> [ Kim, 1974 ] </ref> for a discussion of non-causal determination relations.) As an aside, notice that it would be impossible to express the rule for winning in such a straightforward way in a transition system-based language such as A CL . 126 Chapter 9 Query Answering and Planning In this chapter,
Reference: [ Koons, 1995 ] <author> Robert C. Koons. </author> <title> The logic of causation. </title> <type> Unpublished manuscript, </type> <year> 1995. </year>
Reference: [ Korf, 1985 ] <author> Richard E. Korf. </author> <title> Depth-first iterative deepening: an optimal admissible tree search. </title> <journal> Artificial Intelligence, </journal> <volume> 27 </volume> <pages> 97-109, </pages> <year> 1985. </year>
Reference-contexts: On backtracking, the program instantiates the meta-variable to successive times. If the time names are declared in the natural order|from those designating smaller numbers to larger| the result is to search for the earliest time at which the goal can be achieved by a process of iterative deepening <ref> [ Korf, 1985 ] </ref> . This is illustrated in Figure 9.4. The goal is first instantiated to times 0 and 1, before it is finally solved at time 2.
Reference: [ Kowalski, 1974 ] <author> Robert Kowalski. </author> <title> Predicate logic as a programming language. </title> <editor> In J.L. Rosenfeld, editor, </editor> <booktitle> Information Processing, </booktitle> <year> 1974, </year> <pages> pages 569-574. </pages> <address> North Hol-land, </address> <year> 1974. </year>
Reference-contexts: They did not allow either classical or default negation but consisted simply of Horn clauses from resolution theorem proving. (Logic programming began with the realization that certain linear resolution procedures behaved with respect to such clauses essentially as a program interpreter <ref> [ Kowalski, 1974 ] </ref> .) As such, the first semantics for logic programs was the classical semantics in which was understood as the material conditional. The models of the program were the models of the clausal theory.
Reference: [ Lewis, 1973 ] <author> David Lewis. </author> <title> Counterfactuals. </title> <publisher> Harvard University Press, </publisher> <address> Cambridge, Massachusetts, </address> <year> 1973. </year>
Reference: [ Lewis, 1986a ] <author> David Lewis. </author> <title> Causal decision theory. </title> <editor> In David Lewis, editor, </editor> <booktitle> Philosophical Papers, </booktitle> <volume> Volume II, </volume> <pages> pages 305-339. </pages> <publisher> Oxford University Press, </publisher> <address> New York, </address> <year> 1986. </year>
Reference: [ Lewis, 1986b ] <author> David Lewis. </author> <title> A subjectivist's guide to objective chance. </title> <editor> In David Lewis, editor, </editor> <booktitle> Philosophical Papers, </booktitle> <volume> Volume II, </volume> <pages> pages 83-132. </pages> <publisher> Oxford University Press, </publisher> <address> New York, </address> <year> 1986. </year>
Reference-contexts: The signature is specified by the following grammar. action ::= Toss fluent ::= Heads time ::= 0 j 1 j We adopt the standard inertia assumption. inertial-formula ::= [:]fluent 8 See <ref> [ Lewis, 1986b ] </ref> (Postcript B) for an argument against the presumption that coin tossing is known to be deterministic. 102 The causal theory D 7:2 for the Coin Tossing domain is represented by the standard schemas (7.5)-(7.9), plus the schemas (7.16)-(7.17) below.
Reference: [ Lifschitz and Rabinov, 1989 ] <author> Vladimir Lifschitz and Arkady Rabinov. </author> <title> Things that change by themselves. </title> <booktitle> In Proc. of IJCAI-89, </booktitle> <pages> pages 864-867, </pages> <year> 1989. </year> <month> 191 </month>
Reference: [ Lifschitz, 1987 ] <author> Vladimir Lifschitz. </author> <title> Formal theories of action. </title> <editor> In Frank M. Brown, editor, </editor> <booktitle> The Frame Problem in Artificial Intelligence, Proc. of the 1987 Workshop, </booktitle> <pages> pages 35-58, </pages> <year> 1987. </year>
Reference: [ Lifschitz, 1990 ] <author> Vladimir Lifschitz. </author> <title> Frames in the space of situations. </title> <journal> Artificial Intelligence, </journal> <volume> 46 </volume> <pages> 365-376, </pages> <year> 1990. </year>
Reference-contexts: The next example shows that Winslett's definition can also yield unintended ramifications in cases in which the action can be performed. Example 3.3 The following domain is described in <ref> [ Lifschitz, 1990 ] </ref> . Imagine that there are two ("three-way") switches that control the state of a single light. The switches may be up or down, and the light may be on or off. <p> This is the sense in which W alking implies Alive. 32 which, as we observed, is anomalous and results from the unintended ramification :Up2. In <ref> [ Lifschitz, 1990 ] </ref> and [ Kartha and Lifschitz, 1994 ] , this ramification is blocked by declaring Up1 and Up2 to be "in the frame" and On to be "not in the frame." (The assumption of inertia is applied only to the fluents that are in the frame.) By contrast, <p> This illustrates the difference between indefiniteness and nondeterminism. 1 4.3 Examples In this section we show how several domains, including some of those discussed in the abstract framework of Chapter 3, are encoded in A CL . Example 4.1 We begin with a domain, described in <ref> [ Lifschitz, 1990 ] </ref> , in which there are two three-way switches and a light (cf. Examples 3.3 and 3.6).
Reference: [ Lifschitz, 1991 ] <author> Vladimir Lifschitz. </author> <title> Towards a metatheory of action. </title> <editor> In James Allen, Richard Fikes, and Erik Sandewall, editors, </editor> <booktitle> Proc. of the Second Int'l Conf. on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> pages 376-386, </pages> <year> 1991. </year>
Reference: [ Lifschitz, 1994 ] <author> Vladimir Lifschitz. </author> <title> Nested abnormality theories. </title> <note> Submitted for publication, </note> <year> 1994. </year>
Reference: [ Lifschitz, 1995 ] <author> Vladimir Lifschitz. </author> <title> Two components of an action language. </title> <type> Unpublished manuscript, </type> <year> 1995. </year>
Reference-contexts: A general method for combining two such languages with the same signature is defined in <ref> [ Lifschitz, 1995 ] </ref> . 4.1.2 Action Description Languages The signature for an action description language consists of two nonempty sets of symbols: a set A of action names and a nonempty set F of fluent names. <p> A set of propositions in an action description language specifies, as we have said, a structure called a transition system. Definitions similar to the following appear in [ Boutilier and Friedman, 1995 ] and <ref> [ Lifschitz, 1995 ] </ref> . <p> Two classes of expressions are defined, axioms and queries. The two classes may be the same. According to <ref> [ Lifschitz, 1995 ] </ref> , the semantics of an action query language with signature is defined by specifying, for every transition system T of , every set of axioms, and every query Q, whether Q is a consequence of in T ; in symbols, ` T Q. <p> No query language is specified for it. Many choices of query language are possible, including, for example, the query language of A, the query language of AR [ Giunchiglia and Lifschitz, 1995 ] , the two query languages defined in <ref> [ Lifschitz, 1995 ] </ref> , and the language M P L of Boutilier and Friedman [1995]. 45 4.2 The Language A CL In this section, we define the syntax and semantics of the language A CL .
Reference: [ Lifschitz, 1996 ] <author> Vladimir Lifschitz. </author> <booktitle> Foundations of logic programming. In Principles of Knowledge Representation, </booktitle> <volume> volume 3, </volume> <pages> pages 69-127. </pages> <publisher> CSLI publications, </publisher> <year> 1996. </year>
Reference-contexts: Causal theories of this form correspond syntactically to the class of basic logic programs <ref> [ Lifschitz, 1996 ] </ref> . We will investigate this subclass of causal theories in next chapter. 5.5 Definitional Extension In this section, we examine the role of explicit definitions in the language of causal theories. 64 5.5.1 Explicit Definitions Let F be an atom. <p> Syntactically, such literal-oriented causal theories correspond to the class of basic logic programs <ref> [ Lifschitz, 1996 ] </ref> . Semantically, however, they are different. Informally speaking, basic programs represent possible belief states which are partial (in that they do not necessarily assign a value to every atom), while causal theories represent possible world histories which are total.
Reference: [ Lifschitz, 1997 ] <author> Vladimir Lifschitz. </author> <title> A logic for causal reasoning. </title> <type> Unpublished manuscript, </type> <year> 1997. </year>
Reference: [ Lin and Reiter, 1994 ] <author> Fangzhen Lin and Raymond Reiter. </author> <title> State constraints revisited. </title> <journal> Journal of Logic and Computation, Special Issue on Actions and Processes, </journal> <volume> 4(5) </volume> <pages> 655-678, </pages> <year> 1994. </year>
Reference-contexts: It suffices to observe that for any state S 0 , D S 0 = B. 2 As an example of a domain in which a state constraint is intended to function as a qualification constraint, we consider a simplified version of a domain from <ref> [ Lin and Reiter, 1994 ] </ref> . Example 3.8 Imagine an ancient kingdom in which there are two blocks. Either block may be painted yellow, but by order of the emperor at most one of the blocks is permitted to be yellow at a time.
Reference: [ Lin, 1995 ] <author> Fangzhen Lin. </author> <title> Embracing causality in specifying the indirect effects of actions. </title> <booktitle> In Proc. of IJCAI-95, </booktitle> <year> 1995. </year>
Reference-contexts: Thus, static causal laws|and even laws that intuitively describe causation that runs backwards in time|are allowed. 7.2 The Suitcase Domain As an initial illustration, we will formalize a domain from <ref> [ Lin, 1995 ] </ref> in which there is a suitcase with two latches, each of which may be in either of two positions, up or down. The suitcase is spring-loaded so that whenever both latches are in the up position the suitcase is caused to be open.
Reference: [ Manna and Waldinger, 1987 ] <author> Zohar Manna and Richard Waldinger. </author> <title> How to clear a block: A theory of plans. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 3 </volume> <pages> 343-377, </pages> <year> 1987. </year> <month> 192 </month>
Reference-contexts: We say that P is executable if there is a causally explained interpretation according to D that satisfies 0 [ P . 2 1 In [ McCarthy and Hayes, 1969 ] and <ref> [ Manna and Waldinger, 1987 ] </ref> , a plan is not necessarily a sequence of actions, but may have a more complex structure.
Reference: [ Marek and Truszczynski, 1994 ] <author> W. Marek and M. Truszczynski. </author> <title> Revision specifi-cations by means of revision programs. </title> <booktitle> In Logics in AI. Proceedings of JELIA '94. Lecture Notes in Artificial Intelligence. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1994. </year>
Reference: [ McAllester and Rosenblitt, 1991 ] <author> David McAllester and David Rosenblitt. </author> <title> Systematic nonlinear planning. </title> <booktitle> In Proc. AAAI-91, </booktitle> <year> 1991. </year>
Reference-contexts: The appeal of satisfiability planning methods|as opposed to methods, such the one described in <ref> [ McAllester and Rosenblitt, 1991 ] </ref> , which presupposes STRIPS-like [ Fikes and Nilsson, 1971 ] add and delete lists|is that satisfiability planning methods can be used with any formalism that can be translated into classical propositional logic. 4 Attempting to formalize such domains by writing causal laws with only literal
Reference: [ McCain and Turner, 1995 ] <author> Norman McCain and Hudson Turner. </author> <title> A causal theory of ramifications and qualifications. </title> <booktitle> In Proc. of IJCAI-95, </booktitle> <pages> pages 1978-1984, </pages> <year> 1995. </year>
Reference-contexts: For this purpose, however, it will be useful to first recast Winslett's definition in an equivalent form given in <ref> [ McCain and Turner, 1995 ] </ref> . In order to motivate this reformulation, we will present a series of definitions in which we introduce elements of Winslett's definition in successive steps. <p> Definition 3 has a very different form; it is given in terms of a fixpoint condition. Despite this difference, the two definitions are equivalent, as the following proposition shows. Proposition 3.1 <ref> [McCain and Turner, 1995] </ref> For any set B of constraints, explicit effect E, and state S, Res W B (E; S) = Res 3 By Proposition 3.1, we know that Definition 3|like Winslett's definition| behaves incorrectly on Examples 3.2 and 3.3. (The reader is encouraged to check that this is so.) <p> But we have not required the facts to be causally grounded in any smaller foundation than the set of all facts itself. (By contrast, the causal framework of <ref> [ McCain and Turner, 1995 ] </ref> |described in Appendix A|presupposes foundationalism, requiring the facts in any possible next state to be grounded in inertia and the explicit effect.) Because we do not presuppose foundationalism, our formalisms are mathematically simpler than they otherwise would have been, and in important ways they are <p> We compare the causal framework defined in Chapter 3 with the earlier framework of <ref> [ McCain and Turner, 1995 ] </ref> in which static causal laws are represented by inference rules, and we present a nonmonotonic modal formalism that generalizes the language of causal theories. <p> The definition given there differs from an earlier definition given in <ref> [ McCain and Turner, 1995 ] </ref> . In this section, we present the earlier definition and compare it with the new one. A.1.1 An Earlier Causal Framework Let X be a set of formulas of propositional logic and D be a set of static causal laws. <p> As in the case of Definition 4 of Chapter 3, the states are the interpretations that satisfy, for each static causal law ) in D, the corresponding material conditional . Definition 5 <ref> [ McCain and Turner, 1995 ] </ref> For any set D of static causal laws, explicit effect E, and state S, Res 5 D (E; S) is the set of states S 0 such that S 0 = fL : (S " S 0 ) [ E ` D Lg: For each <p> The following proposition and corollary show that, according to Definition 5, the possible next states always differ minimally from the initial state among the states that satisfy the explicit effect. This property is not possessed by Definition 4, as is shown in Example A.2. Proposition A.1 <ref> [McCain and Turner, 1995] </ref>. Let D be a set of inference rules, and B = f : ) 2 Dg. For every state S and explicit effect E, Res 5 B (E; S). Corollary A.1 Let D and B be as in Proposition A.1.
Reference: [ McCain and Turner, 1997 ] <author> Norman McCain and Hudson Turner. </author> <title> On relating causal theories to other formalisms. </title> <type> Unpublished manuscript, </type> <year> 1997. </year>
Reference: [ McCarthy and Hayes, 1969 ] <author> John McCarthy and Patrick Hayes. </author> <title> Some philosophical problems from the standpoint of artificial intelligence. </title> <editor> In B. Meltzer and D. Michie, editors, </editor> <booktitle> Machine Intelligence, </booktitle> <volume> volume 4, </volume> <pages> pages 463-502. </pages> <publisher> Edinburgh University Press, Edinburgh, </publisher> <year> 1969. </year> <editor> Reproduced in [ McCarthy, </editor> <year> 1990 </year> ] . 
Reference-contexts: We say that P is executable if there is a causally explained interpretation according to D that satisfies 0 [ P . 2 1 In <ref> [ McCarthy and Hayes, 1969 ] </ref> and [ Manna and Waldinger, 1987 ] , a plan is not necessarily a sequence of actions, but may have a more complex structure.
Reference: [ McCarthy, 1959 ] <author> John McCarthy. </author> <title> Programs with common sense. </title> <booktitle> In Proc. of the Teddington Conference on the Mechanization of Thought Processes, </booktitle> <pages> pages 75-91, </pages> <address> London, </address> <year> 1959. </year> <editor> Her Majesty's Stationery Office. Reproduced in [ McCarthy, </editor> <year> 1990 </year> ] . 
Reference: [ McCarthy, 1963 ] <author> John McCarthy. </author> <title> Situations, actions and causal laws. </title> <booktitle> Stanford Artificial Intelligence Project, </booktitle> <volume> Memo 2, </volume> <year> 1963. </year>
Reference: [ McCarthy, 1980 ] <author> John McCarthy. </author> <title> Circumscription|a form of non-monotonic reasoning. </title> <journal> Artificial Intelligence, </journal> <volume> 13(1, </volume> 2):27-39,171-172, 1980. Reproduced in [ Mc-Carthy, 1990 ] . 
Reference: [ McCarthy, 1986 ] <author> John McCarthy. </author> <title> Applications of circumscription to formalizing common sense knowledge. </title> <journal> Artificial Intelligence, </journal> <volume> 26(3) </volume> <pages> 89-116, </pages> <year> 1986. </year> <note> Reproduced in [ McCarthy, 1990 ] . 193 </note>
Reference: [ McCarthy, 1990 ] <author> John McCarthy. </author> <title> Formalizing common sense: papers by John Mc--Carthy. </title> <publisher> Ablex, </publisher> <address> Norwood, NJ, </address> <year> 1990. </year>
Reference: [ McDermott and Doyle, 1980 ] <author> Drew McDermott and Jon Doyle. </author> <title> Nonmonotonic logic I. </title> <journal> Artificial Intelligence, </journal> <volume> 13(1,2):41-72, </volume> <year> 1980. </year>
Reference: [ Mendez et al., 1996 ] <author> G. Mendez, J. Lobo, J. Llopis, and C. Baral. </author> <title> Temporal logic in action description languages. </title> <editor> In M. Zelkowitz and P. Straub, editors, </editor> <booktitle> Proc. the XVI International Conference of the Chilean Computer Science Society, </booktitle> <pages> pages 10-21, </pages> <address> Valdivia, Chile, </address> <year> 1996. </year>
Reference: [ Montague, 1968 ] <author> Richard Montague. </author> <title> Pragmatics. </title> <editor> In R. Klibansky, editor, </editor> <booktitle> Contemporary Philosophy a Survey, </booktitle> <pages> pages 102-122. </pages> <address> Florence, </address> <year> 1968. </year>
Reference-contexts: The concepts of historical necessity and possibility have been formalized in the framework of modal-temporal logic by <ref> [ Montague, 1968 ] </ref> , [ Chellas, 1971 ] , and [ Kamp, 1979 ] . In these logics, formulas are understood to designate time-dependent propositions and are evaluated with respect to a world and a time.
Reference: [ Moore, 1985a ] <author> Robert Moore. </author> <title> A formal theory of knowledge and action. </title> <editor> In J.R. Hobbs and R.C. Moore, editors, </editor> <booktitle> Formal Theories of the Commonsense World, </booktitle> <pages> pages 319-358. </pages> <publisher> Ablex, </publisher> <address> Norwood, N.J., </address> <year> 1985. </year>
Reference-contexts: If so, how should such a set be represented? 1 * We have not attempted to model the knowledge state of the agent. Nor have we addressed the issue of knowledge producing actions. To this end, one would hope to adapt the methods of <ref> [ Moore, 1985a ] </ref> and [ Scherl and Levesque, 1993 ] . 10.3 A Final Word In each of the formalisms that we have defined, we have been guided by three concerns: conceptual plausibility, mathematical simplicity, and expressiveness.
Reference: [ Moore, 1985b ] <author> Robert Moore. </author> <title> Semantical considerations on nonmonotonic logic. </title> <journal> Artificial Intelligence, </journal> <volume> 25(1) </volume> <pages> 75-94, </pages> <year> 1985. </year>
Reference: [ Morris, 1988 ] <author> Paul Morris. </author> <title> The anomalous extension problem in default reasoning. </title> <journal> Artificial Intelligence, </journal> <volume> 35(3) </volume> <pages> 383-399, </pages> <year> 1988. </year>
Reference: [ Pearl, 1988 ] <author> Judea Pearl. </author> <title> Embracing causality in default reasoning. </title> <journal> Artificial Intelligence, </journal> <volume> 35 </volume> <pages> 259-271, </pages> <year> 1988. </year>
Reference: [ Pednault, 1987 ] <author> Edwin Pednault. </author> <title> Formulating multi-agent, dynamic world problems in the classical planning framework. </title> <editor> In Michael Georgeff and Amy Lansky, editors, </editor> <booktitle> Reasoning about Actions and Plans, </booktitle> <pages> pages 47-82. </pages> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA, </address> <year> 1987. </year>
Reference-contexts: Schemas (7.12) and (7.13) describe the explicit effects of raising and lowering each side of the bowl. 4 Schema (7.14) says that bowl's being tilted causes the soup to be spilled. 3 As is noted in [ Gelfond et al., 1991b ] , this is essentially the example from <ref> [ Pednault, 1987 ] </ref> in which two agents lift opposite sides of a table. 4 When t is 5, t + 1 is not an expression of type time. Consequently, there are no corresponding instances of (7.12) and (7.13) in D 7:1 .
Reference: [ Pednault, 1989 ] <author> Edwin Pednault. </author> <title> ADL: Exploring the middle ground between STRIPS and the situation calculus. </title> <editor> In Ronald Brachman, Hector Levesque, and 194 Raymond Reiter, editors, </editor> <booktitle> Proc. of the First Int'l Conf. on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> pages 324-332, </pages> <year> 1989. </year>
Reference: [ Reiter, 1980 ] <author> Raymond Reiter. </author> <title> A logic for default reasoning. </title> <journal> Artificial Intelligence, </journal> <volume> 13(1,2):81-132, </volume> <year> 1980. </year>
Reference-contexts: Hence, I is causally explained according to D if and only if I is causally explained according to D 0 . 2 5.6 An Embedding in Default Logic In this section we describe an embedding, suggested by Hudson Turner (personal communication), of causal theories into default logic <ref> [ Reiter, 1980 ] </ref> . The reader may skip this section (and the related Section 6.3) without loss of continuity. In defining the syntax and semantics of default logic, we will be concerned only with propositional default theories.
Reference: [ Reiter, 1991 ] <author> Raymond Reiter. </author> <title> The frame problem in the situation calculus: a simple solution (sometimes) and a completeness result for goal regression. </title> <editor> In Vladimir Lifschitz, editor, </editor> <booktitle> Artificial Intelligence and Mathematical Theory of Computation: Papers in Honor of John McCarthy, </booktitle> <pages> pages 359-380. </pages> <publisher> Academic Press, </publisher> <year> 1991. </year>
Reference: [ Robson, 1973 ] <author> J. M. Robson. </author> <title> The Collected Works of John Stuart Mill. </title> <institution> Univ. of Toronto Press, Toronto and Buffalo, </institution> <year> 1973. </year>
Reference: [ Sandewall, 1992a ] <author> Erik Sandewall. </author> <title> Features and fluents. </title> <publisher> Oxford University Press, </publisher> <year> 1992. </year>
Reference: [ Sandewall, 1992b ] <author> Erik Sandewall. </author> <title> Features and fluents: A systematic approach to the representation of knowledge about dynamical systems. </title> <type> Technical Report LiTH-IDA-R-92-30, </type> <institution> Linkoping University, </institution> <year> 1992. </year>
Reference-contexts: Examples 3.3 and 3.6). The signature contains two action names, Toggle (Switch1); Toggle (Switch2) and three fluent names, Up (Switch1); Up (Switch2); Light: We specify the domain (in part) by means of schemas, in which s is a meta-variable standing for Switch1 or Switch2. 1 See <ref> [ Sandewall, 1992b ] </ref> , page 118, for a closely related discussion.
Reference: [ Sandewall, 1995 ] <author> Erik Sandewall. </author> <title> Systematic comparison of approaches to ramification using restricted minimization of change. </title> <type> Technical Report LiTH-IDA-R-95-15, </type> <institution> Linkoping University, </institution> <year> 1995. </year>
Reference-contexts: Intuitively, given D, the state fp; :qg does not describe a causally possible state. Thus, fp; :qg cannot first come into existence 6 The frame/nonframe distinction is one of several closely related approaches to controlling ramifications by dividing fluents into different categories. These approaches are compared in <ref> [ Sandewall, 1995 ] </ref> . An insightful analysis of the limitations of such categorization-based approaches is given in [ Thielscher, 1996 ] . 33 and then be transformed into fp; qg, as the reasoning leading to this expectation suggests. In fact, Res 4 D (E; S) includes only f:p; qg.
Reference: [ Scherl and Levesque, 1993 ] <author> Richard B. Scherl and Hector Levesque. </author> <title> The frame problem and knowledge-producing actions. </title> <booktitle> In Proceedings of the AAAI National Conference, </booktitle> <pages> pages 689-695, </pages> <year> 1993. </year>
Reference-contexts: If so, how should such a set be represented? 1 * We have not attempted to model the knowledge state of the agent. Nor have we addressed the issue of knowledge producing actions. To this end, one would hope to adapt the methods of [ Moore, 1985a ] and <ref> [ Scherl and Levesque, 1993 ] </ref> . 10.3 A Final Word In each of the formalisms that we have defined, we have been guided by three concerns: conceptual plausibility, mathematical simplicity, and expressiveness.
Reference: [ Schubert, 1990 ] <author> Lenhart Schubert. </author> <title> Monotonic solution of the frame problem in the situation calculus: an efficient method for worlds with fully specified actions. In H.E. </title> <editor> Kyburg, R. Loui, and G. Carlson, editors, </editor> <booktitle> Knowledge Representation and Defeasible Reasoning, </booktitle> <pages> pages 23-67. </pages> <publisher> Kluwer, </publisher> <year> 1990. </year> <month> 195 </month>
Reference: [ Selman et al., 1994 ] <author> B. Selman, H. Kautz, and B. Cohen. </author> <title> Noise strategies for local search. </title> <booktitle> In Proceedings of AAAI-94, </booktitle> <pages> pages 337-343, </pages> <address> Seattle, WA, </address> <year> 1994. </year>
Reference-contexts: Specifically, they have compared the systematic program tableau [ Crawford and Auton, 1993 ] and an unsystematic (stochastic) program called Walksat <ref> [ Selman et al., 1994 ] </ref> . They report solving much larger planning problems using Walksat than tableau. Indeed, at the present time, satisfiability planning using Walksat may be the most efficient approach to planning that is known.
Reference: [ Shanahan, 1997 ] <author> Murray Shanahan. </author> <title> Solving the frame problem: a mathematical investigation of the common sense law of inertia. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1997. </year>
Reference-contexts: The following example, which is credited to Ray Reiter in [ Kartha and Lifschitz, 1994 ] and <ref> [ Shanahan, 1997 ] </ref> , is different in this respect. Example 7.3 Consider the action of dropping a block onto the surface of a table that is painted black and white.
Reference: [ Shoham, 1986 ] <author> Yoav Shoham. </author> <title> Chronological ignorance: Time, nonmonotonicity, necessity and causal theories. </title> <booktitle> In Proc. of AAAI-86, </booktitle> <pages> pages 389-393, </pages> <year> 1986. </year>
Reference: [ Shoham, 1987 ] <author> Yoav Shoham. </author> <title> Reasoning about change. </title> <publisher> MIT Press, </publisher> <address> Boston, MA, </address> <year> 1987. </year>
Reference: [ Shoham, 1990 ] <author> Yoav Shoham. </author> <title> Nonmonotonic reasoning and causation. </title> <journal> Cognitive Science, </journal> <volume> 14 </volume> <pages> 213-252, </pages> <year> 1990. </year>
Reference: [ Stalnaker, 1968 ] <author> Robert C. Stalnaker. </author> <title> A theory of conditionals. </title> <journal> American Philosophical Quarterly, </journal> <volume> 2 </volume> <pages> 98-112, </pages> <year> 1968. </year>
Reference: [ Stalnaker, 1981 ] <editor> Robert C. Stalnaker. Letter to David Lewis. In W.L Harper, R. Stalnaker, and G. Pearce, editors, </editor> <title> Ifs: conditionals, belief, decision, chance, </title> <booktitle> and time, </booktitle> <pages> pages 153-190. </pages> <address> D. </address> <publisher> Reidel Publishing Company, Dordrecht, Holland, </publisher> <year> 1981. </year>
Reference: [ Thielscher, 1994 ] <author> Michael Thielscher. </author> <title> Representing actions in equational logic programming. </title> <booktitle> In Proc. ICLP-94, </booktitle> <pages> pages 207-224, </pages> <year> 1994. </year>
Reference: [ Thielscher, 1995a ] <author> Michael Thielscher. </author> <title> Computing ramifications by postprocessing. </title> <booktitle> In Proc. of IJCAI-95, </booktitle> <pages> pages 1994-2000, </pages> <year> 1995. </year>
Reference: [ Thielscher, 1995b ] <author> Michael Thielscher. </author> <title> On the logic of dynamic systems. </title> <booktitle> In Proc. of IJCAI-95, </booktitle> <pages> pages 1956-1962, </pages> <year> 1995. </year>
Reference-contexts: ^ :Up (Right) 0 ^ Raise (Left) 0 ^ :Raise (Right) 0 Spilled 1 :Spilled 0 ^ Raise (Left) 0 ^ Raise (Right) 0 :Spilled 1 are consequences of D 7:1 . 5 3 In [ Gelfond et al., 1991b ] , [ Baral and Gelfond, 1993 ] , and <ref> [ Thielscher, 1995b ] </ref> , the Soup domain is described essentially as follows: (i) the action of raising either side of the bowl causes the soup to be spilled, but (ii) assuming the soup is not already spilled, raising both sides of the bowl concurrently causes it not to be spilled. <p> Intuitively, this is not what we wish to say; the domino is down 12 Schema (7.25) represents a set of dynamic causal laws that do not mention the occurrences of actions. Laws of this general kind have appeared previously in [ Geffner, 1990 ] and <ref> [ Thielscher, 1995b ] </ref> . 13 These claims are machine checked in Section 9.4.
Reference: [ Thielscher, 1996 ] <author> Michael Thielscher. </author> <title> Ramification and causality. </title> <type> Technical Report TR-96-003, </type> <institution> International Computer Science Institute, </institution> <year> 1996. </year> <month> 196 </month>
Reference-contexts: These approaches are compared in [ Sandewall, 1995 ] . An insightful analysis of the limitations of such categorization-based approaches is given in <ref> [ Thielscher, 1996 ] </ref> . 33 and then be transformed into fp; qg, as the reasoning leading to this expectation suggests. In fact, Res 4 D (E; S) includes only f:p; qg. <p> In our formalization of the Gears domain, the signature is specified by the following grammar. index ::= 1 j 2 switch ::= S (index) gear ::= G (index) action ::= Toggle (switch) j Push 14 See [ Van Belleghem et al., 1996 ] and <ref> [ Thielscher, 1996 ] </ref> for related discussions. We present an alternative formalization of the Domino domain as the final example of Section 9.4.
Reference: [ Turner, 1994 ] <author> Hudson Turner. </author> <title> Signed logic program. </title> <booktitle> In Logic Programming: Pro--ceedings of the 1994 International Symposium, </booktitle> <pages> pages 61-75, </pages> <year> 1994. </year>
Reference: [ Turner, 1996 ] <author> Hudson Turner. </author> <title> Splitting a default theory. </title> <booktitle> In Proceedings of AAAI-96, </booktitle> <pages> pages 645-651, </pages> <year> 1996. </year>
Reference-contexts: possibility of the agent concurrently performing any pair of distinct actions (even at the last time, if there is one) by writing the schema a t ^ a 0 t ) False where a 6= a 0 (7.15) 6 A similar approach to formalizing the Soup domain is taken in <ref> [ Turner, 1996 ] </ref> . 7 It is necessary to exempt time 5 from the preceding remark, because when t is 5, (7.12) and (7.13) are not in the language of the domain. 101 where t is a meta-variable of type time, and a and a 0 are meta-variables of type
Reference: [ Turner, 1997a ] <author> Hudson Turner. </author> <title> Inference rules and causality in representations of common sense reasoning about actions. </title> <type> Dissertation, </type> <institution> The University of Texas at Austin, </institution> <year> 1997. </year>
Reference-contexts: This possibility raises the following question: Is the additional expressiveness of CEL useful in formalizing action domains? This is a topic for future research. 1 1 Hudson Turner has explored some possible uses for the additional expressiveness of CEL in his recent dissertation <ref> [ Turner, 1997a ] </ref> . 168 Appendix B The Program Listing /* File: satp.pl Language: SICStus Prolog (Release 3) Date: 12/24/96 Author: Norman C.
Reference: [ Turner, 1997b ] <author> Hudson Turner. </author> <title> Representing actions in logic programs and default theories: A situation calculus approach. </title> <journal> Journal of Logic Programming, </journal> <volume> 31(1-3):245-298, </volume> <year> 1997. </year>
Reference: [ Van Belleghem et al., 1996 ] <author> Kristof Van Belleghem, Marc Denecker, and Daniele Dupre. </author> <title> Dependencies and ramifications in an event-based language. </title> <type> Draft, </type> <note> submitted, </note> <year> 1996. </year>
Reference-contexts: In our formalization of the Gears domain, the signature is specified by the following grammar. index ::= 1 j 2 switch ::= S (index) gear ::= G (index) action ::= Toggle (switch) j Push 14 See <ref> [ Van Belleghem et al., 1996 ] </ref> and [ Thielscher, 1996 ] for related discussions. We present an alternative formalization of the Domino domain as the final example of Section 9.4.
Reference: [ van Emden and Kowalski, 1976 ] <author> Maarten van Emden and Robert Kowalski. </author> <title> The semantics of predicate logic as a programming language. </title> <journal> Journal of the ACM, </journal> <volume> 23(4) </volume> <pages> 733-742, </pages> <year> 1976. </year>
Reference-contexts: We say that a model I of is minimal if there is no model I 0 of such that the set of atoms in I 0 is a proper subset of the set of atoms in I . 3 It is well-known <ref> [ van Emden and Kowalski, 1976 ] </ref> that every positive program has a unique minimal model. Let us designate the minimal model of by ff (). Now let instead be a normal program, and I be an interpretation.
Reference: [ Van Gelder et al., 1990 ] <author> Allen Van Gelder, Kenneth Ross, and John Schlipf. </author> <title> The well-founded semantics for general logic programs. </title> <journal> Journal of ACM, </journal> <pages> pages 221-230, </pages> <year> 1990. </year>
Reference: [ von Wright, 1975 ] <author> G. H. von Wright. </author> <title> The logic and the epistemology of the causal relation. </title> <editor> In Ernest Sosa, editor, </editor> <booktitle> Causation and Conditionals, </booktitle> <pages> pages 95-113. </pages> <publisher> Oxford University Press, </publisher> <address> London, </address> <year> 1975. </year>
Reference: [ Winslett, 1988 ] <author> Marianne Winslett. </author> <title> Reasoning about action using a possible models approach. </title> <booktitle> In Proc. AAAI-88, </booktitle> <pages> pages 89-93, </pages> <year> 1988. </year> <month> 197 </month>
Reference-contexts: As a consequence, the language of causal theories provides a degree of language independence that is uncommon in action description languages. 16 16 Typically, the phenonomenon of language dependence in action description formalisms has gone unremarked upon in the AI literature. A notable exception is <ref> [ Winslett, 1988 ] </ref> . 114 Chapter 8 Two Action Query Languages In this chapter, we define two action query languages for use with the language L CL . The first and simplest of these can be used to express facts and queries about the actual world.
References-found: 118

