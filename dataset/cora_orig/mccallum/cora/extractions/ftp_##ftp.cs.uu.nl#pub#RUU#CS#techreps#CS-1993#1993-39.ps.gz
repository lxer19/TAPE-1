URL: ftp://ftp.cs.uu.nl/pub/RUU/CS/techreps/CS-1993/1993-39.ps.gz
Refering-URL: http://www.cs.ruu.nl/docs/research/publication/TechList1.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: Email: gerard@cs.ruu.nl  
Title: Linear Election for Oriented Hypercubes algorithm achieves the same (expected) message and time bounds, but
Author: Gerard Tel 
Note: A randomized version of the  and can be used in anonymous hypercubes.  
Address: P.O. Box 80.089, 3508 TB Utrecht, The Netherlands.  
Affiliation: Department of Computer Science, University of Utrecht,  
Abstract: In this article we propose an election algorithm for the oriented hypercube, where each edge is assumed to be labeled with its dimension in the hypercube. The algorithm exchanges O(N ) messages and uses O(log 2 N ) time (where N is the size of the cube). 
Abstract-found: 1
Intro-found: 1
Reference: [Bod91] <author> Bodlaender, H. L. </author> <title> New lower bound techniques for distributed leader finding and other problems on rings of processors. </title> <journal> Theoretical Comput. Sci. </journal> <volume> 81 (1991), </volume> <pages> 237-256. </pages>
Reference-contexts: The existence of an orientation does not help in two important classes of networks, namely rings and tori. In unoriented rings, Franklin's algorithm [Fra82] uses O (N log N ) messages, while the (N log N ) lowerbound <ref> [Bur80, Bod91] </ref> applies to oriented rings as well. Peterson [Pet85] proposed an O (N ) algorithm for election in unoriented tori; clearly (N ) messages are needed in oriented tori as well. For another important class of networks, namely cliques, orientation does help.
Reference: [Bur80] <author> Burns, J. E. </author> <title> A formal model for message passing systems. </title> <type> Tech. Rep. </type> <institution> TR-91, Indiana University, </institution> <year> 1980. </year>
Reference-contexts: The existence of an orientation does not help in two important classes of networks, namely rings and tori. In unoriented rings, Franklin's algorithm [Fra82] uses O (N log N ) messages, while the (N log N ) lowerbound <ref> [Bur80, Bod91] </ref> applies to oriented rings as well. Peterson [Pet85] proposed an O (N ) algorithm for election in unoriented tori; clearly (N ) messages are needed in oriented tori as well. For another important class of networks, namely cliques, orientation does help.
Reference: [FM93] <author> Flocchini, P., and Mans, B. </author> <title> Optimal elections in labeled hypercubes. </title> <type> Tech. rep., </type> <institution> Carleton School of Computer Science, </institution> <address> Ottawa, </address> <year> 1993. </year>
Reference-contexts: algorithm for unoriented hypercubes, with a complexity of O (N log N ) messages, is optimal, or give a better algorithm. * Prove an (N log N ) lower bound or an o (N log N ) upper bound on the complexity of traversing an unoriented hypercube. 8 Comparison with <ref> [FM93] </ref>. An election algorithm with linear complexity was indepen-dently found by Flocchini and Mans [FM93]. Like our algorithm, this algorithm exploits the recursive structure of the hypercube to successively elect leaders in higher and higher dimensional sub-hypercubes. <p> is optimal, or give a better algorithm. * Prove an (N log N ) lower bound or an o (N log N ) upper bound on the complexity of traversing an unoriented hypercube. 8 Comparison with <ref> [FM93] </ref>. An election algorithm with linear complexity was indepen-dently found by Flocchini and Mans [FM93]. Like our algorithm, this algorithm exploits the recursive structure of the hypercube to successively elect leaders in higher and higher dimensional sub-hypercubes. <p> Because we pass messages in parallel during the tournament, the time complexity of the tournament is bounded by log N , which results in an overall time complexity of O (log 2 N ). The messages in the tournaments are passed serially in <ref> [FM93] </ref>, which results in a fi (log 2 N ) time per tournament, and an fi (log 3 N ) overall time complexity. Moreover, the messages in [FM93] may contain a process name plus log 2 bits, while our messages contain only a name plus log log N bits (and O <p> The messages in the tournaments are passed serially in <ref> [FM93] </ref>, which results in a fi (log 2 N ) time per tournament, and an fi (log 3 N ) overall time complexity. Moreover, the messages in [FM93] may contain a process name plus log 2 bits, while our messages contain only a name plus log log N bits (and O (log log N ) bits in the randomized version). 9
Reference: [Fra82] <author> Franklin, W. R. </author> <title> On an improved algorithm for decentralized extrema finding in circular configurations of processors. </title> <journal> Commun. ACM 25, </journal> <volume> 5 (1982), </volume> <pages> 336-337. </pages>
Reference-contexts: The existence of an orientation does not help in two important classes of networks, namely rings and tori. In unoriented rings, Franklin's algorithm <ref> [Fra82] </ref> uses O (N log N ) messages, while the (N log N ) lowerbound [Bur80, Bod91] applies to oriented rings as well. Peterson [Pet85] proposed an O (N ) algorithm for election in unoriented tori; clearly (N ) messages are needed in oriented tori as well.
Reference: [GHS83] <author> Gallager, R. G., Humblet, P. A., and Spira, P. M. </author> <title> A distributed algorithm for minimum weight spanning trees. </title> <journal> ACM Trans. Program. Lang. Syst. </journal> <volume> 5 (1983), </volume> <pages> 67-77. </pages>
Reference-contexts: influences the complexity of the election problem. (In the following discussion we only consider message complexity, and N and E denote the number of processes and links in the network.) For networks of arbitrary, unknown topology an O (N log N + E) algorithm was given by Gallager et al. <ref> [GHS83] </ref>, and this is also a lower bound. The existence of an orientation does not help in two important classes of networks, namely rings and tori. <p> But, disappointingly, because the hypercube has only O (N log N ) edges, an O (N log N ) complexity is also achieved when the standard algorithm of Gallager et al. <ref> [GHS83] </ref> is fl The work of this author was supported by ESPRIT Basic Research Action No. 7141 (project ALCOM II: Algorithms and Complexity). and by the Netherlands Organization for Scientific Research (NWO) under contract NF 62-376 (NFI project ALADDIN: Algorithmic Aspects of Parallel and Distributed Systems). 1 applied. <p> A network traversal [KKM90], starting from an arbitrary process, can be performed using N messages in an oriented hypercube, while the best known algorithm for unoriented hypercubes takes N log N messages. The election algorithm by Gallager et al. <ref> [GHS83] </ref> can be applied to unoriented hyper-cubes and uses O (N log N ) messages in this case; this is the best known for unoriented hypercubes.
Reference: [KKM90] <author> Korach, E., Kutten, S., and Moran, S. </author> <title> A modular technique for the design of efficient leader finding algorithms. </title> <journal> ACM Trans. Program. Lang. Syst. </journal> <volume> 12 (1990), </volume> <pages> 84-101. </pages>
Reference-contexts: The question whether orientation helps in hypercubes has remained open. Using an efficient traversal possible in oriented hypercubes, and the construction of Korach et al. <ref> [KKM90] </ref>, election can be performed in 2N log N messages in the oriented hypercube. <p> In the oriented hypercube, a process knows the direction of each of its adjacent links. It is believed that the availability of an orientation helps to reduce the communication complexity of computations in the hypercube. A network traversal <ref> [KKM90] </ref>, starting from an arbitrary process, can be performed using N messages in an oriented hypercube, while the best known algorithm for unoriented hypercubes takes N log N messages.
Reference: [KMZ84] <author> Korach, E., Moran, S., and Zaks, S. </author> <title> Tight upper and lower bounds for some distributed algorithms for a complete network of processors. </title> <booktitle> In Symp. on Principles of Distributed Computing (1984), </booktitle> <pages> pp. 199-207. </pages>
Reference-contexts: For another important class of networks, namely cliques, orientation does help. While an (N log N ) lower bound on election in unoriented cliques was shown by Korach et al. <ref> [KMZ84] </ref>, an O (N ) algorithm for oriented cliques was given by Loui et al. [LMW86]. The question whether orientation helps in hypercubes has remained open.
Reference: [LMW86] <author> Loui, M. C., Matsushita, T. A., and West, D. B. </author> <title> Election in a complete network with a sense of direction. </title> <journal> Inf. Proc. Lett. </journal> <month> 22 </month> <year> (1986), </year> <month> 185-187. </month> <title> Addendum: </title> <journal> Inf. Proc. Lett. </journal> <volume> 28:327, </volume> <year> 1988. </year>
Reference-contexts: For another important class of networks, namely cliques, orientation does help. While an (N log N ) lower bound on election in unoriented cliques was shown by Korach et al. [KMZ84], an O (N ) algorithm for oriented cliques was given by Loui et al. <ref> [LMW86] </ref>. The question whether orientation helps in hypercubes has remained open. Using an efficient traversal possible in oriented hypercubes, and the construction of Korach et al. [KKM90], election can be performed in 2N log N messages in the oriented hypercube.
Reference: [MV88] <author> Mullender, S. J., and Vitanyi, P. M. B. </author> <title> Distributed match-making. </title> <booktitle> Algorithmica 3 (1988), </booktitle> <pages> 367-391. </pages>
Reference-contexts: Similarly, it is too expensive to have to entry node broadcast the tournament message through the d-cube; this would also cost 2 d 1 messages. 3.2 The Match-Making Technique The forwarding of the message can be seen as a match-making problem (see Mullender and Vitanyi <ref> [MV88] </ref>) and can be solved using O ( p 2 d ) messages and in d + 1 time (which is optimal).
Reference: [Pet85] <author> Peterson, G. L. </author> <title> Efficient algorithms for elections in meshes and complete networks. </title> <type> Tech. Rep. TR 140, </type> <institution> Dept. of Computer Science, Univ. of Rochester, Rochester, </institution> <address> NY 14627, </address> <year> 1985. </year>
Reference-contexts: The existence of an orientation does not help in two important classes of networks, namely rings and tori. In unoriented rings, Franklin's algorithm [Fra82] uses O (N log N ) messages, while the (N log N ) lowerbound [Bur80, Bod91] applies to oriented rings as well. Peterson <ref> [Pet85] </ref> proposed an O (N ) algorithm for election in unoriented tori; clearly (N ) messages are needed in oriented tori as well. For another important class of networks, namely cliques, orientation does help.
Reference: [San84] <author> Santoro, N. </author> <title> Sense of direction, topological awareness, and communication complexity. </title> <journal> ACM SIGACT News 16 (1984), </journal> <pages> 50-56. </pages>
Reference-contexts: 1 Introduction The election problem is one of the most intensively studied problems in distributed algorithms research. In addition to its practical importance, the problem has developed to a "bench-mark" to study the complexity effects of different model assumptions. In one line of this research, initiated by Santoro <ref> [San84] </ref>, it was investigated how knowledge of topology or orientation influences the complexity of the election problem. (In the following discussion we only consider message complexity, and N and E denote the number of processes and links in the network.) For networks of arbitrary, unknown topology an O (N log N
Reference: [SS88] <author> Saad, Y., and Schultz, M. H. </author> <title> Topological properties of hypercubes. </title> <journal> IEEE Trans. Comput. </journal> <volume> C-37, 7 (1988), </volume> <pages> 867-872. </pages>
Reference-contexts: The direction of the edge between ~u and ~v is the (unique) index i such that u i 6= v i . Properties of hypercube graphs. Many graph-theoretic results about hypercubes are known; see, e.g., Saad and Schultz <ref> [SS88] </ref>. The hypercube is regular of degree n, and the distance between two nodes equals the Hamming distance between their canonical labels. The diameter and the radius of the hypercube are n. The number of edges in the hypercube is 1 2 nN .
References-found: 12

