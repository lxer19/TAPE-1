URL: http://ai.eecs.umich.edu/people/dreeves/misc/auto-negotiation-AIEC.ps
Refering-URL: http://ai.eecs.umich.edu/people/dreeves/misc/
Root-URL: http://www.eecs.umich.edu
Email: fwellman, dreevesg@umich.edu  fgrosof, hychang@us.ibm.com  
Title: Toward a Declarative Language for Negotiating Executable Contracts  
Author: Daniel M. Reeves Benjamin N. Grosof Michael P. Wellman Hoi Y. Chan 
Date: 1999 March 12  
Web: http://ai.eecs.umich.edu/people/fwellman, dreevesg/  http://www.research.ibm.com/people/g/grosof/  
Address: 1101 Beal Avenue, Ann Arbor, MI 48109-2110 USA  30 Saw Mill River Road, room H2-B48 Hawthorne, NY 10532 USA  
Affiliation: University of Michigan Artificial Intelligence Laboratory  IBM T.J. Watson Research Center  
Abstract: We give an approach to automating the negotiation of business contracts. Our goal is to develop a language for both (1.) fully-specified, executable contracts and (2.) partially-specified contracts that are in the midst of being negotiated, including via automated auctions. Our starting point for this language is Courteous Logic Programs (CLPs), a form of logic-based knowledge representation (KR) that is semantically declarative, intuitively natural, computa-tionally tractable, and practically executable. A CLP is suitable in particular to represent a fully-specified executable contract. The basic CLP KR also facilitates modification during negotiation, because it includes prioritized conflict handling features that facilitate modification. Beyond the basic CLP KR, we have developed an initial ontology, and an associated style of representation, to specify additional aspects of a partial contract and of a negotiation process. The initial ontology specifies the set of negotiables and the structure of a contract in terms of its component goods/services and attributes. Specifying the negotiable aspects of a good or service includes specifying its attributes, their possible values, and dependencies/constraints on those attributes. Building upon the representation of these negotiable aspects, we are in current work developing methods to structure negotiations, especially to select and configure auction mechanisms to carry out the negotiation. This work brings together two strands of our previous work on business process automation in electronic commerce: representing business rules shared between enterprises, and configurable auction mechanisms. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Chitta Baral and Michael Gelfond. </author> <title> Logic programming and knowledge representation. </title> <journal> Journal of Logic Programming, </journal> <volume> 19 </volume> <pages> 73-148, </pages> <year> 1994. </year>
Reference-contexts: This is the current state of Electronic Data Interchange (EDI). We are in the sparsely occupied middle ground, aiming for considerable expressive power but also considerable automatability. Our point of departure for our KR is pure logic programs (in the knowledge-representation-theory sense, not Prolog). (Baral and Gelfond <ref> [1] </ref> provide a helpful review.) Logic programs are not only declarative and relatively powerful expressively, but also practical, relatively computationally efficient, and widely deployed. 2 We embody the representation concretely as XML messages. This choice enhances human readability and supports inclusion and generation of textual information.
Reference: [2] <author> Fernando Branco. </author> <title> The design of multidimensional auctions. </title> <journal> Rand Journal of Economics, </journal> <volume> 28 </volume> <pages> 63-81, </pages> <year> 1997. </year>
Reference-contexts: Multiattribute auctions, typically employed in procurement, allow specification of offers referring to multiple attributes of a single good <ref> [2] </ref>. Whether a multiattribute auction, a combinatorial auction, or an array of one- or zero-dimensional auctions is appropriate depends on several factors. Although a full discussion is beyond the scope of this paper, we observe that these factors can bear on any of: * The legality of auction configurations. <p> The quoting syntax used here is similar to Knowledge Interchange Format (KIF) quoting (see http://www.cs.umbc.edu/KIF). 9 Price and quantity will remain distinguished by the mechanism since they are used in the scoring algorithm for multiattribute auctions <ref> [2] </ref>. 8 Note that when the negotiation mechanism completes it will add to the above rules exactly one of the following: isRuleIncluded (yes). isRuleIncluded (no). For a conjunct: ... (conj OR isConjIncluded (no)) ... negotiable ('isConjIncluded). For a disjunct: ... (disj AND isDisjIncluded (yes)) ... negotiable ('isDisjIncluded).
Reference: [3] <author> Benjamin N. Grosof. </author> <title> Building Commercial Agents: An IBM Research Perspective (Invited Talk). </title> <booktitle> In Proceedings of the Second International Conference and Exhibition on Practical Applications of Intelligent Agents and Multi-Agent Technology (PAAM97), </booktitle> <address> P.O. Box 137, Blackpool, Lancashire, FY2 9UN, UK. http://www.demon.co.uk./ar/PAAM97, April 1997. </address> <publisher> Practical Application Company Ltd. </publisher> <address> Held London, UK. </address> <note> Also available as IBM Research Report RC 20835 at World Wide Web http://www.research.ibm.com </note> . 
Reference-contexts: This choice enhances human readability and supports inclusion and generation of textual information. It will also facilitate parsing and integration with EDI components. Our KR builds on our prior work representing business rules in Courteous Logic Programs (CLPs) <ref> [3, 4] </ref> (see also Section 4.1). To express executable contracts, these rules must specify the goods and services to be provided, along with applicable terms and conditions. Such terms include customer service agreements, delivery schedules, conditions for returns, usage restrictions, and other issues relevant to the good or service provided. <p> We will thus expressively generalize further to Situated Courteous LPs. Situated logic programs <ref> [3] </ref> hook beliefs to drive procedural APIs. More precisely, situated LPs permit two semantically-clean kinds of procedural attachments for condition-testing ("sensing") and action-performing ("effecting"). Later we will also want to take a further step of expressive generalization to relax the cyclicity/recursion prohibition.
Reference: [4] <author> Benjamin N. Grosof. </author> <title> Courteous logic programs: Prioritized conflict handling for rules. </title> <type> Technical report, </type> <institution> IBM T.J. Watson Research Center, http://www.research.ibm.com , search for Research Reports; P.O. </institution> <address> Box 704, Yorktown Heights, NY 10598, </address> <month> Dec. </month> <year> 1997. </year> <note> IBM Research Report RC 20836. This is an extended version of [5]. </note>
Reference-contexts: This choice enhances human readability and supports inclusion and generation of textual information. It will also facilitate parsing and integration with EDI components. Our KR builds on our prior work representing business rules in Courteous Logic Programs (CLPs) <ref> [3, 4] </ref> (see also Section 4.1). To express executable contracts, these rules must specify the goods and services to be provided, along with applicable terms and conditions. Such terms include customer service agreements, delivery schedules, conditions for returns, usage restrictions, and other issues relevant to the good or service provided. <p> If rule1 and rule2 conflict, then rule1 will win the conflict. The version of Courteous LPs we are using is further expressively generalized as compared to the previous version in [5] and <ref> [4] </ref>. Example: Ordering Lead-Time The English description of a business-to-business electronic commerce preferred-customer draft contract communicated from a manufacturing parts vendor (seller) to a manufacturing assembler (buyer) might include a contract clause that comprises the following two business rules.
Reference: [5] <author> Benjamin N. Grosof. </author> <title> Prioritized conflict handling for logic programs. </title> <editor> In Jan Maluszynski, editor, </editor> <booktitle> Logic Programming: Proceedings of the International Symposium (ILPS-97), </booktitle> <pages> pages 197-211, </pages> <address> Cambridge, MA, USA, 1997. </address> <publisher> MIT Press. Held Port Jefferson, </publisher> <address> NY, USA, </address> <month> Oct. </month> <pages> 12-17, </pages> <year> 1997. </year> <note> http://www.ida.liu.se/~ilps97. Extended version available as IBM Research Report RC 20836 at http://www.research.ibm.com </note> . 
Reference-contexts: If rule1 and rule2 conflict, then rule1 will win the conflict. The version of Courteous LPs we are using is further expressively generalized as compared to the previous version in <ref> [5] </ref> and [4]. Example: Ordering Lead-Time The English description of a business-to-business electronic commerce preferred-customer draft contract communicated from a manufacturing parts vendor (seller) to a manufacturing assembler (buyer) might include a contract clause that comprises the following two business rules.
Reference: [6] <author> Manoj Kumar and Stuart I. Feldman. </author> <title> Internet auctions. </title> <booktitle> In Third USENIX Workshop on Electronic Commerce, </booktitle> <pages> pages 49-60, </pages> <address> Boston, </address> <year> 1998. </year> <month> 10 </month>
Reference-contexts: For example, our own Michigan Internet AuctionBot supports a high degree of configurability [8] (http://auction.eecs.umich.edu/), and IBM's auction system supports one-sided sales auctions integrated with other commerce facilities <ref> [6] </ref>. Although multidimensional mechanisms are more complicated, and not yet widely available, we expect that they will eventually provide an important medium for automated negotiation. For example, combinatorial auctions allow bidders to express offers for combinations of goods, and determines an allocation maximizing overall revenue.
Reference: [7] <author> Tuomas Sandholm. </author> <title> Approaches to winner determination in combinatorial auctions. Decision Support Systems, </title> <note> to appear. </note>
Reference-contexts: We are aware of one prototype system 1 Looking at Yahoo alone yields 104 auction services listed, and 120,000 active auctions on their own service (http://auctions.yahoo.com/). 3 currently supporting combinatorial auctions over the Internet <ref> [7] </ref>. Multiattribute auctions, typically employed in procurement, allow specification of offers referring to multiple attributes of a single good [2]. Whether a multiattribute auction, a combinatorial auction, or an array of one- or zero-dimensional auctions is appropriate depends on several factors.
Reference: [8] <author> Peter R. Wurman, Michael P. Wellman, and William E. Walsh. </author> <title> The Michigan Internet Auc-tionBot: A configurable auction server for human and software agents. </title> <booktitle> In Second International Conference on Autonomous Agents, </booktitle> <pages> pages 301-308, </pages> <address> Minneapolis, </address> <year> 1998. </year> <month> 11 </month>
Reference-contexts: Auctions are rapidly proliferating on the Internet. 1 Although typical online auctions support simple negotiation services, researchers have begun to deploy mechanisms with advanced features. For example, our own Michigan Internet AuctionBot supports a high degree of configurability <ref> [8] </ref> (http://auction.eecs.umich.edu/), and IBM's auction system supports one-sided sales auctions integrated with other commerce facilities [6]. Although multidimensional mechanisms are more complicated, and not yet widely available, we expect that they will eventually provide an important medium for automated negotiation.
References-found: 8

