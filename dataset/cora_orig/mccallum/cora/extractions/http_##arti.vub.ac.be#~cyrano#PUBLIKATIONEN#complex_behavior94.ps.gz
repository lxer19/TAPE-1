URL: http://arti.vub.ac.be/~cyrano/PUBLIKATIONEN/complex_behavior94.ps.gz
Refering-URL: http://www.cs.rutgers.edu/~davison/agoric-bib.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Schemas and Genetic Programming  
Author: Andreas Birk and Wolfgang J. Paul 
Address: Im Stadtwald, 66123 Saarbrucken, Germany  
Affiliation: Universitat des Saarlandes, Computer Science Department  
Abstract: With the help of schemas and genetic programming we describe systems which * interact with the real world * make theories about the consequences of their actions and * dynamically adjust inductive bias. We present experimental data about the learning of geometric concepts and of moving a block in a microworld.
Abstract-found: 1
Intro-found: 1
Reference: [Pia91] <author> Jean Piaget; Gesammelte Werke; Klett-Cotta, Stuttgart, </author> <year> 1991 </year>
Reference-contexts: We will report experimental results from a partial implementation. The remainder of this paper is organized as follows. In section 2 we briefly review genetic programming. We point out some relations with the work of Piaget <ref> [Pia91] </ref> and with the principle of Occam's razor. In section 3 we briefly review the schema mechanism from [Dre91]. <p> In order to motivate the use of genetic programming we show that several observations from psychology can be interpreted in a rather natural way with the help of genetic algorithms. 2.2 Relations with Piaget's Work Around the year 1900 the Swiss psychologist Piaget published his famous work <ref> [Pia91] </ref> on child development. Piaget claims that children acquire new skills in a succession of stages and that a new stage can only be entered when the skills of the previous stage have been mastered.
Reference: [Dre91] <author> Gary L. </author> <title> Drescher; Made-up minds, A constructivist approach to artificial intelligence; The MIT Press, </title> <address> Cambridge, </address> <year> 1991 </year>
Reference-contexts: The overwhelming majority of all studies treats situations, with strong inductive bias, i.e. there is a fairly narrow class H of algorithms, and the concept or algorithm to be learned is a priori known to lie in that class H. With the help of schemas in the sense of <ref> [Dre91] </ref> and genetic programming [Koz92] we will describe here systems which 1. interact with the real world via actors and sensors, 2. make theories about the consequences of their actions and 3. dynamically adjust inductive bias. <p> The remainder of this paper is organized as follows. In section 2 we briefly review genetic programming. We point out some relations with the work of Piaget [Pia91] and with the principle of Occam's razor. In section 3 we briefly review the schema mechanism from <ref> [Dre91] </ref>. In sections 4, 5 and 6 we modify this mechanism in three crucial ways: 1. we change the mechanism by which schemas are chained 2. we treat a network of schemas as a spatial model of the world. <p> The systems work in two modes: in passive mode the system makes theories about the sensor input using genetic programming. In active mode, the system performs actions and models the effect of it's action using a kind of schema mechanism in the spirit of <ref> [Dre91] </ref>. A third introspective mode is at this point not implemented. In this mode the system should make theories about the internal data structure. This permits planning, and it is at least not completely implausible, that the system at some point generates a model of itself. According to [Dre91] a schema <p> spirit of <ref> [Dre91] </ref>. A third introspective mode is at this point not implemented. In this mode the system should make theories about the internal data structure. This permits planning, and it is at least not completely implausible, that the system at some point generates a model of itself. According to [Dre91] a schema is a triple s = pre=action=post, where * pre (precondition) and post (postcondition) are programs which depend on sensor input and compute predicates and * action is an elementary or composite program which activates actors. <p> If we allow arbitrary computable predicates, the question is undecidable. Even if we treat sensor inputs as 2 to be defined in section 5 4 boolean variables and restrict predicates to boolean formulae of these variables the question remains NP-complete. The solution in <ref> [Dre91] </ref> is to allow only monomials formed with such variables as predicates. In this case if post 1 implies pre 2 iff pre 2 is a submonomial of post 2 . Thus a simple syntactic check decides, if two schemas can be chained. <p> In this case if post 1 implies pre 2 iff pre 2 is a submonomial of post 2 . Thus a simple syntactic check decides, if two schemas can be chained. Unfortunately the restriction to monomials turns out to be too severe, and in <ref> [Dre91] </ref> many technical so called `embellishments' are necessary in order to fix this somewhat. The easy way out is to allow unreliable edges between schemas. <p> These schemas have high reliability. But as the block is moved around their applicability falls below that of the more general schemas which ignore the block and they eventually die. Table 2 shows mean run times for 10 runs for this simulation on a 40 MHz SPARCstation 10/51. In <ref> [Dre91] </ref> a similar but somewhat richer microworld was simulated on a CM-2 parallel machine for the case n = 5.
Reference: [Car90] <author> Jaime Carbonel [Hrsg.]; </author> <title> Machine Learning, Paradigms and Methods; The MIT Press, </title> <address> Cam-bridge, </address> <year> 1990 </year>
Reference-contexts: 1 Introduction To investigate the mechanisms which enable systems to learn is among the most challenging research activities. In computer science alone it is pursued by at least three communities <ref> [Car90] </ref>, [Nat91], [Rit91]. The overwhelming majority of all studies treats situations, with strong inductive bias, i.e. there is a fairly narrow class H of algorithms, and the concept or algorithm to be learned is a priori known to lie in that class H.
Reference: [Nat91] <author> Balas K. </author> <title> Natarajan; Machine Learning, A theoretical approach; Morgan Kaufmann, </title> <address> San Mateo, </address> <year> 1991 </year>
Reference-contexts: 1 Introduction To investigate the mechanisms which enable systems to learn is among the most challenging research activities. In computer science alone it is pursued by at least three communities [Car90], <ref> [Nat91] </ref>, [Rit91]. The overwhelming majority of all studies treats situations, with strong inductive bias, i.e. there is a fairly narrow class H of algorithms, and the concept or algorithm to be learned is a priori known to lie in that class H.
Reference: [Rit91] <author> Helge Ritter, Klaus Schulten, Thomas Martinetz; Neuronale Netze; Addison Wesley, </author> <year> 1991 </year>
Reference-contexts: 1 Introduction To investigate the mechanisms which enable systems to learn is among the most challenging research activities. In computer science alone it is pursued by at least three communities [Car90], [Nat91], <ref> [Rit91] </ref>. The overwhelming majority of all studies treats situations, with strong inductive bias, i.e. there is a fairly narrow class H of algorithms, and the concept or algorithm to be learned is a priori known to lie in that class H.
Reference: [Koz92] <author> John R. </author> <title> Koza; Genetic programming; The MIT Press, </title> <address> Cambridge, </address> <year> 1992 </year>
Reference-contexts: With the help of schemas in the sense of [Dre91] and genetic programming <ref> [Koz92] </ref> we will describe here systems which 1. interact with the real world via actors and sensors, 2. make theories about the consequences of their actions and 3. dynamically adjust inductive bias.
Reference: [Pau94] <author> Wolfgang J. Paul, R. </author> <note> Solomonoff; Autonomous Theory Building Systems; to appear in: Annals of Operations Research, 1994 9 </note>
Reference-contexts: Then the transitive closure &lt; fl of relation &lt; is a partial order on S which models in a very natural way the order in which certain skills have to be acquired. 2 2.3 Building Theories In the spirit of <ref> [Pau94] </ref> we view theories as programs q which reproduce data D from the real world. A theory is nontrivial if it is `simpler' than the data it describes.
References-found: 7

