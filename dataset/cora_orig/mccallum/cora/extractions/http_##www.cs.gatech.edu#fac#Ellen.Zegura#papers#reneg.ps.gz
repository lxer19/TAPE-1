URL: http://www.cs.gatech.edu/fac/Ellen.Zegura/papers/reneg.ps.gz
Refering-URL: http://www.cs.gatech.edu/fac/Ellen.Zegura/end.html
Root-URL: 
Author: Ellen W. Zegura Scott McFarland Ojas Parekh 
Address: Atlanta, GA 30332-0280  
Affiliation: Networking and Telecommunications Group College of Computing Georgia Tech  
Abstract: A Survey and New Results in Renegotiated Service Abstract To use a network service class, an application must determine which service is suitable and provide a concise description of traffic characteristics required by the service class. Applications may find it difficult to do this if accurate a priori knowledge of traffic is not available or if the traffic characteristics will change over time. Both of these difficulties can be addressed by a renegotiated service that supports changes in the traffic contract over time. We focus in this paper on applications that have known, but changing, service requirements, thus they can use off-line processing. We survey existing work and present new algorithms for determining when to renegotiate the service and what new traffic contract to supply. We evaluate the performance of our work and the work of others using a common set of application streams.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> K. Chang and H.T. Kung. </author> <title> Efficient time-domain bandwidth allocation for video-on-demand. </title> <booktitle> In Proceedings of Int'l Conference on Computer Communication Networks (IC3N), </booktitle> <year> 1996. </year>
Reference-contexts: This schedule may have a large number of renegotiation points, but will reduce (though not minimize) the cost due to network resource allocation. From the Feng and Sechrest pseudocode it becomes evident that the Chang and Kung algorithm <ref> [1] </ref> takes a very similar approach, constructing a feasible transmission schedule that attempts to minimize the number of changes in the transmission rate. They describe a Piecewise Constant Bit Rate heuristic to construct a schedule, essentially using the same technique as in Feng and Sechrest.
Reference: [2] <author> W. Feng and S. Sechrest. </author> <title> Critical bandwidth allocation for delivery of compressed video. </title> <journal> Computer Communications, </journal> <month> October </month> <year> 1995. </year>
Reference-contexts: That is, they assume a constant cost fl per allocated bandwidth over a time unit. They represent all feasible transmission schedules using a trellis graph structure; the shortest-path from a designated source vertex to destination vertex corresponds to the minimum cost feasible renegotiation schedule. Feng and Sechrest <ref> [2] </ref> describe a Critical Bandwidth Allocation algorithm for constructing a feasible transmission schedule using an optimization criteria that anticipates (to an extent) the renegotiation step 2 . Specifically, their algorithm will minimize the number of increases in the transmission rate, while avoiding buffer starvation and overflow.
Reference: [3] <author> M. Grossglauser, S. Keshav, and D. Tse. RCBR: </author> <title> Simple and efficient service for multiple time-scale traffic. </title> <booktitle> In Proceedings of ACM Sigcomm, </booktitle> <year> 1995. </year>
Reference-contexts: Finally, Algorithm D combines the two steps to construct a feasible renegotiation schedule. That is, a feasible transmission schedule is determined in conjunction with finding a renegotiation schedule that minimizes cost. Smoothness of the transmission schedule is not taken into account. Grossglauser et al. <ref> [3] </ref> also describe an algorithm for constructing a feasible renegotiation schedule that minimizes cost, defined as above with (r) = flr. That is, they assume a constant cost fl per allocated bandwidth over a time unit.
Reference: [4] <author> A. Marshall and I. Olkin. </author> <title> Inequalities: Theory of Majorization and Its Applications. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1979. </year>
Reference-contexts: The first (denoted Algorithm A in [7]) finds a feasible transmission schedule that optimizes a network efficiency measure called the "smoothness" of the schedule. Informally, a smooth schedule is one which minimizes the variability in rate over time. The precise definition uses the mathematical concept of majorization <ref> [4] </ref>. Given a feasible transmission schedule and an upper bound on the number of renegotiations, the second algorithm (Algorithm B) uses dynamic programming to minimize the cost for a renegotiation schedule.
Reference: [5] <author> J. McManus and K. Ross. </author> <title> Prerecorded VBR sources in ATM networks: Piecewise-constant-rate transmission and transport. </title> <note> See http://www.systems.seas.upenn.edu/ross/PCRTT.ps, September 1995. </note>
Reference-contexts: Initially, McManus and Ross <ref> [5] </ref> used the client buffer space as the optimization criteria. Given the number of renegotiations R, they use a dynamic programming algorithm to find a feasible renegotiation schedule that minimizes the necessary client buffer. The cost of the network resources are not taken into account.
Reference: [6] <author> J. McManus and K. Ross. </author> <title> A dynamic programming methodology for managing prerecorded VBR sources in packet-switched networks. </title> <note> See http://www.systems.seas.upenn.edu/ ross/jean2.ps, </note> <month> January </month> <year> 1997. </year>
Reference-contexts: They also describe a more efficient heuristic to reduce (but not necessarily minimize) client buffer space. More recently, they have demonstrated that the dynamic programming paradigm can be used to optimize a variety of criteria, including minimizing the number of renegotiations subject to a given client buffer constraint <ref> [6] </ref>. Table 2 compares the various approaches based on optimization criteria and run time. Several parameters are particular to certain algorithms, including m, which is the number of discrete reservable bandwidths, and C, which is the number of fixed-size packets in the stream.
Reference: [7] <author> J. Salehi, Z. Zhang, J. Kurose, and D. Towsley. </author> <title> Suporting stored video: reducing rate variability and end-to-end resource requirements through optimal smoothing. </title> <booktitle> In Proceedings of ACM Sigmetrics, </booktitle> <month> May </month> <year> 1996. </year> <month> 12 </month>
Reference-contexts: Following common practice, we assume a discrete-time model at the level of frames. All of the algorithms could be adapted in a straightforward way for a different level of granularity. Table 1 contains terminology used by renegotiation algorithms. The work by Salehi et al. <ref> [7] </ref> contains a clean separation between the two processing steps in Figure 1. Three main algorithms are described. The first (denoted Algorithm A in [7]) finds a feasible transmission schedule that optimizes a network efficiency measure called the "smoothness" of the schedule. <p> Table 1 contains terminology used by renegotiation algorithms. The work by Salehi et al. <ref> [7] </ref> contains a clean separation between the two processing steps in Figure 1. Three main algorithms are described. The first (denoted Algorithm A in [7]) finds a feasible transmission schedule that optimizes a network efficiency measure called the "smoothness" of the schedule. Informally, a smooth schedule is one which minimizes the variability in rate over time. The precise definition uses the mathematical concept of majorization [4].
References-found: 7

