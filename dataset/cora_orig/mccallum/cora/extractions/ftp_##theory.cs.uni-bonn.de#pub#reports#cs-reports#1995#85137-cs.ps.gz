URL: ftp://theory.cs.uni-bonn.de/pub/reports/cs-reports/1995/85137-cs.ps.gz
Refering-URL: http://cs.uni-bonn.de/info5/publications/CS-1995-en.html
Root-URL: http://cs.uni-bonn.de
Title: On a New High Dimensional Weisfeiler-Lehman Algorithm  
Author: Sergei Evdokimov Marek Karpinski Ilia Ponomarenko 
Note: Mail: evdokim@iias.spb.su. Research supported by the Volkswagen-Stiftung Program on Computational Complexity.  Research partially supported by the DFG Grant KA 67314-1, by ESPRITS Grants 7097 and ECUS 030, and by the Volkswagen-Stiftung.  Mail: ponom-ko@pdmi.ras.ru. Research supported by the Volkswagen-Stiftung Program on Computational Complexity.  
Address: Russia,  Bonn, 53117 Bonn. E Mail:  
Affiliation: St.Petersburg Institute for Informatics and Automation of the Academy of Sciences of  St.Petersburg and University of Bonn, 53117 Bonn. E  Department of Computer Science, University of  St.Petersburg Department of Mathematical Institute of the Academy of Sciences of Russia and University of Bonn, 53117 Bonn. E  
Email: marek@cs.uni-bonn.de.  
Phone: 199178  
Date: May, 1995  
Abstract: In the paper we define and study a generalization of the Weisfeiler-Lehman algorithm which constructs the cellular closure of a set of matrices. The new technique is compared with all the other techniques of that kind. The underlying construction gives a new sufficient condition for a cellular algebra to be Schurian. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> G. M. Adelson-Vel'skii, B. Ju. Weisfeiler, A. A. Lehman, and I. A. Faradzev, </author> <title> Example of a graph without a transitive automorphism group, </title> <journal> Soviet Math. Dokl. </journal> <volume> 10 (1969), </volume> <pages> 440-441. </pages>
Reference-contexts: This implies W () Z (Aut (); V ) (inclusion). Note that the ISO could be solved if the last inequality was always equality. Unfortunately, there exist cellular algebras W not coinciding with Z (Aut (W ); V ) denoted by Sch (W ) below (see <ref> [1] </ref>, [14]). These algebras were called in [9] non-Schurian in contrast to Schurian ones for which W = Sch (W ). The above paragraph explains why the property of a cellular algebra "to be Schurian" is extremely important in the context of the ISO. <p> that the operators W 7! W (m) (m = 1; 2; : : :) define a Schurian Polynomial Approximation Scheme if the following statements hold: (1) Aut (W (m) ) = Aut (W ) for all m 1; (3) (W (m) ) (l) = W (m) for all l 2 <ref> [1; m] </ref>; (4) W (m) can be constructed in time n O (m) where n = jV j. In this paper we describe a special Schurian Polynomial Approximation Scheme and study its main properties. The key notion of our aproach is that of m-closure. <p> consisting of f0,1g-matrices such that (1) R2R R = J V ; (3) there exists a disjoint partition V = S s i=1 V i of V into nonempty sets V i such that (a) I V i 2 R for all i; (b) 8R 2 R 9i; j 2 <ref> [1; s] </ref> : R ae V i fi V j ; (c) if R 2 R and R ae V i fi V j , then the number of 1's in the uth row (resp. vth column) of the matrix R does not depend on the choice of u 2 V <p> We say that (v 0 ; : : : ; v l ) 2 V l+1 is a (u; v)-path of the type ffi if v 0 = u, v l = v and (v i1 ; v i ) 2 R i for all i 2 <ref> [1; l] </ref>. The number of all such paths will be denoted by p (u; v; ffi). Lemma 2.3 (Path Proposition [13], Th. C10) Let W be a cellular algebra. <p> The algebra W is called Schurian if W = Sch (W ). Certainly, Sch (W ) is a Schurian algebra for all W . It follows from <ref> [14, 1] </ref> that there exist cellular algebras which are not Schurian. It is well-known that the ISO is polynomially equivalent to the problem of constructing Sch (W ). The isomorphism of cellular algebras W and W 0 defined above induces an equivalence between the standard representations of them. <p> Clearly, W (1) = W and Aut ( c W (m) ) = f (g; : : : ; g) m for all m. Now we are going to describe some relations belonging to c W . To do this we define for an arbitrary S ae <ref> [1; m] </ref> 2 a binary relation P S on V m as follows: (u; v) 2 P S $ 8 (i; j) 2 S : u i = v j (4) where u = (u 1 ; : : : ; u m ); v = (v 1 ; : : <p> Clearly, P S 2 Z (Sym (V ); V m ) for all S ae <ref> [1; m] </ref> 2 : Examples. Let M ae [1; m]. 1. <p> Clearly, P S 2 Z (Sym (V ); V m ) for all S ae <ref> [1; m] </ref> 2 : Examples. Let M ae [1; m]. 1. <p> Statements (1) and (2) are trivial. By (2) W i U c W E;U . On the other hand, (I v i ) i U = I (v 1 ;:::;v m1 ;v i ) = I U D fi;mg I U 2 c W E;U for all i 2 <ref> [1; m 1] </ref>: Thus c W E;U W i U [I i U v m1 ] = (W v 1 ;:::;v m1 ) i U : For l 2 [1; m] define another map m It is easy to see that m l is an injection and m l (V l <p> 1 ;:::;v m1 ;v i ) = I U D fi;mg I U 2 c W E;U for all i 2 [1; m 1]: Thus c W E;U W i U [I i U v m1 ] = (W v 1 ;:::;v m1 ) i U : For l 2 <ref> [1; m] </ref> define another map m It is easy to see that m l is an injection and m l (V l ) = supp (D [l;m] ) is a cellular set of c W (m) . <p> ) (m) c W 1 " c W 2 , (W 1 " W 2 ) (m) W 1 " W 2 ; (3) the intersection of m-closed cellular algebras is m-closed; (4) ( c W (l) ) m l ( c W (m) ) U for all l 2 <ref> [1; m] </ref> where U = m l (V l ) (see (9)); (5) W (m) is l-closed for all l 2 [1; m]. Proof. Statement (1) is clear. (2) follows from (1). <p> 2 ; (3) the intersection of m-closed cellular algebras is m-closed; (4) ( c W (l) ) m l ( c W (m) ) U for all l 2 <ref> [1; m] </ref> where U = m l (V l ) (see (9)); (5) W (m) is l-closed for all l 2 [1; m]. Proof. Statement (1) is clear. (2) follows from (1). If W (m) (m) then (W 1 " W 2 ) (m) W 1 " W 2 by (2). Since the inverse inclusion is obvious, (3) follows. <p> We will check that the m-dimension extended algebras of W and W (m) coincide. Clearly, the second contains the first. To prove the inverse inclusion set R j = P S j where S j = f (i; j)j i 2 <ref> [1; m] </ref>g, j 2 [1; m] (see (4)). A straithforward calculation in Mat V m = Mat V Mat V shows that for all j 2 [1; m] R T j1 mj where is the map (9). <p> We will check that the m-dimension extended algebras of W and W (m) coincide. Clearly, the second contains the first. To prove the inverse inclusion set R j = P S j where S j = f (i; j)j i 2 <ref> [1; m] </ref>g, j 2 [1; m] (see (4)). A straithforward calculation in Mat V m = Mat V Mat V shows that for all j 2 [1; m] R T j1 mj where is the map (9). <p> To prove the inverse inclusion set R j = P S j where S j = f (i; j)j i 2 <ref> [1; m] </ref>g, j 2 [1; m] (see (4)). A straithforward calculation in Mat V m = Mat V Mat V shows that for all j 2 [1; m] R T j1 mj where is the map (9). <p> Proposition 3.3 For each cellular algebra W on V the following statements hold: (1) Aut (W (m) ) = Aut (W ) for all m 1; (3) (W (m) ) (l) = W (m) for all l 2 <ref> [1; m] </ref>. Proof. Statement (1) is clear. Let us prove (2). The inclusion W (l) W (m) for l m is contained in the proof of statement (5) of Lemma 3.2. <p> A map f from V m on <ref> [1; d] </ref> is called a coloring of V m in d colors. Any set f 1 (i) ae V m is called a color class of f. <p> Output: a cellular algebra A m (W ) W . Step 1. Construct a coloring f 0 of V m such that f 0 (v) = f 0 (v 0 ) $ 8R 2 R (W ) 8i; j 2 <ref> [1; m] </ref> : ((v i ; v j ) 2 R $ (v 0 j ) 2 R): Step 2. <p> the path P u (v) from v to itself is of the type ffi = (R 0 ; : : : ; R m ) for some basis relations R i ae P S i , (see (4)) where S i = f (j; j); (i; i + 1) 2 <ref> [1; m] </ref> 2 j j 6= i; j 6= i + 1g; i 2 [0; m]: Moreover, any (v; v)-path of the type ffi coincides with P u (v) for some u 2 V . <p> Otherwise, set B m (W ) = W 0 . 12 Proposition 4.2 Let W be a cellular algebra on V and m 1. Then B m (W ) W (m) . Proof. For i 2 <ref> [1; m] </ref> set W i = E [1;i1] ffi (D [i;m] Then W i ae h i (A V;i ) where h i : A V;i ! A V;m is a linear map induced by the injection m i : V i ! V m defined in (9).
Reference: [2] <author> L. </author> <title> Babel, Computing cellular algebras, </title> <note> Combinatorica (to appear). </note>
Reference-contexts: Remark 3.5 If instead of the Weisfeiler-Lehman algorithm for constructing the cellular closure of a set of matrices we use an algorithm of <ref> [2] </ref>, the algebras c W (m) and W (m) can be found in time O (mn 3m log n). Propositions 3.3 and 3.4 show that the operators W 7! W (m) (m = 1; 2; : : :) define a Schurian Polynomial Approximation Scheme (see Section 1).
Reference: [3] <author> L. Babai, </author> <title> On the order of uniprimitive permutation groups, </title> <journal> Annals of Math. </journal> <volume> 113 (1981), </volume> <pages> 553-568. </pages>
Reference-contexts: Clearly, s (W ) n 1 for all W . Some non-trivial upper bounds for this number can be found in <ref> [3] </ref> and [11]. We also mention paper [7] where a similar invariant (called freedom degree) was defined for a permutation group. Theorem 1.3 Let W be a cellular algebra with s (W ) m 1. Then Sch (W ) = W (m) .
Reference: [4] <author> L. Babai, W. M. Kantor, and E. M. Luks, </author> <title> Computation complexity and the classification of finite simple groups, </title> <booktitle> Proc. 24th FOCS, </booktitle> <year> (1983), </year> <pages> 162-171. </pages>
Reference-contexts: The problem is to test whether two finite graphs are isomorphic by means of an efficient algorithm. Despite many efforts, at present the best isomorphism test for n-vertex graphs makes at least n O ( p n) steps in the worst case <ref> [4] </ref>. It is well-known [10] that the ISO is polynomially equivalent to the following problem: given a graph construct all the orbits of its automorphism group Aut () consisting by definition of all permutations of the vertex set V of , preserving the adjacency of edges.
Reference: [5] <author> J. Cai, M. Furer, and N. Immerman, </author> <title> Optimal lower bound on the number of variables for graph identification, </title> <booktitle> Combinatorica 99 (1993), </booktitle> <pages> 99-99. </pages>
Reference-contexts: We call W (m) the m-closure of W . Theorem 1.1 The m-closure operators W 7! W (m) (m = 1; 2; : : :) constructed above define a Schurian Polynomial Approximation Scheme. In [13], <ref> [5] </ref> and [6] some algorithms which can be interpreted in the above terms as ones defining Schurian Polynomial Approximation Schemes were described. In this interpretation we denote by A m (resp. B m ) the algorithm from [5] (resp. from [6]). <p> In [13], <ref> [5] </ref> and [6] some algorithms which can be interpreted in the above terms as ones defining Schurian Polynomial Approximation Schemes were described. In this interpretation we denote by A m (resp. B m ) the algorithm from [5] (resp. from [6]). A natural question arises: what does a relationship exist between the cellular algebras A m (W ), B m (W ) and W (m) ? The next proposition gives a partial answer to the question. <p> In this notation the following procedure was described in [13] (see also <ref> [5] </ref>). Procedure A m (m 2) Input: a cellular algebra W on V . Output: a cellular algebra A m (W ) W . Step 1.
Reference: [6] <author> S. Friedland, </author> <title> Coherent algebras and the graph isomorphism problem, </title> <booktitle> Discrete Applied Mathematics 25 (1989), </booktitle> <pages> 73-98. 15 </pages>
Reference-contexts: We call W (m) the m-closure of W . Theorem 1.1 The m-closure operators W 7! W (m) (m = 1; 2; : : :) constructed above define a Schurian Polynomial Approximation Scheme. In [13], [5] and <ref> [6] </ref> some algorithms which can be interpreted in the above terms as ones defining Schurian Polynomial Approximation Schemes were described. In this interpretation we denote by A m (resp. B m ) the algorithm from [5] (resp. from [6]). <p> In [13], [5] and <ref> [6] </ref> some algorithms which can be interpreted in the above terms as ones defining Schurian Polynomial Approximation Schemes were described. In this interpretation we denote by A m (resp. B m ) the algorithm from [5] (resp. from [6]). A natural question arises: what does a relationship exist between the cellular algebras A m (W ), B m (W ) and W (m) ? The next proposition gives a partial answer to the question. <p> So by the induction hypothesis f l1 (v=u) = f l1 (v 0 =u 0 ). Thus S l1 (v) = S l1 (v 0 ) and consequently f l (v) = f l (v 0 ). Another implementation of the m-dimension procedure was described in <ref> [6] </ref>. We are going to prove that this procedure constructs a cellular subalgebra of the m-closure. For i 1 set X I v 1 ;:::;v i1 Mat V where I v 1 ;:::;v i1 = I v 1 I v i1 . <p> Let us define a linear map i : A V;i+1 ! A V;i ; i 1; i ( (v 1 ;:::;v i ) X I v 1 ;:::;v i1 v i 2V In these terms the procedure from <ref> [6] </ref> can be described as follows. Procedure B m (m 1) Input: a cellular algebra W on V . Output: a cellular algebra B m (W ) W . Step 1.
Reference: [7] <author> L. A. Kaluznin and M. H. Klin, </author> <title> On some numerical invariants of permutation groups, </title> <journal> Latv. Mat. Ezegod., </journal> <volume> vol. 18, </volume> <booktitle> 1976, In Russian, </booktitle> <pages> pp. 81-99. </pages>
Reference-contexts: Clearly, s (W ) n 1 for all W . Some non-trivial upper bounds for this number can be found in [3] and [11]. We also mention paper <ref> [7] </ref> where a similar invariant (called freedom degree) was defined for a permutation group. Theorem 1.3 Let W be a cellular algebra with s (W ) m 1. Then Sch (W ) = W (m) .
Reference: [8] <author> R. M. Karp and V. Ramachandran, </author> <title> Parallel algorithms for shared-memory machines, in "Algorithms and Complexity. </title> <address> vol.A", </address> <year> 1990, </year> <pages> pp. 871-942. </pages>
Reference-contexts: Problem 6.2 Is the above problem in NC? In other words, can the cellular closure of a n fi n-matrix be found by n O (1) parallel computers in time (log n) O (1) ? (For the exact definition of NC and related concepts see <ref> [8] </ref>.) The main difficulty here is that the cellular closure is defined by means of two binary operations (the ordinary matrix multiplication and the Hadamard one) which don't commute with each other. Note, that for each of them the problem of constructing the closure with respect to it is in NC.
Reference: [9] <author> M. H. Klin and I. A. Faradzev, </author> <title> The method of v-rings in the theory of permutation groups and its combinatorial applications, Investigations in Applied Graph Theory, Nauka, </title> <booktitle> 1986, In Russian, </booktitle> <pages> pp. 59-97. </pages>
Reference-contexts: Note that the ISO could be solved if the last inequality was always equality. Unfortunately, there exist cellular algebras W not coinciding with Z (Aut (W ); V ) denoted by Sch (W ) below (see [1], [14]). These algebras were called in <ref> [9] </ref> non-Schurian in contrast to Schurian ones for which W = Sch (W ). The above paragraph explains why the property of a cellular algebra "to be Schurian" is extremely important in the context of the ISO.
Reference: [10] <author> R. Mathon, </author> <title> A note on the graph isomorphism counting problem, </title> <journal> Inform. Process. Lett. </journal> <volume> 8 (1979), </volume> <pages> 131-132. </pages>
Reference-contexts: The problem is to test whether two finite graphs are isomorphic by means of an efficient algorithm. Despite many efforts, at present the best isomorphism test for n-vertex graphs makes at least n O ( p n) steps in the worst case [4]. It is well-known <ref> [10] </ref> that the ISO is polynomially equivalent to the following problem: given a graph construct all the orbits of its automorphism group Aut () consisting by definition of all permutations of the vertex set V of , preserving the adjacency of edges.
Reference: [11] <author> I. Ponomarenko, </author> <title> Computing automorphism groups of cellular algebras with bounded multiplicities, </title> <note> Research report no. </note> <institution> 8591-cs, University of Bonn, </institution> <month> April </month> <year> 1993. </year>
Reference-contexts: Clearly, s (W ) n 1 for all W . Some non-trivial upper bounds for this number can be found in [3] and <ref> [11] </ref>. We also mention paper [7] where a similar invariant (called freedom degree) was defined for a permutation group. Theorem 1.3 Let W be a cellular algebra with s (W ) m 1. Then Sch (W ) = W (m) .
Reference: [12] <author> I. Ponomarenko, </author> <title> On computation complexity problems concerning relation algebras, </title> <address> Zapiski Nauch. Semin. POMI, </address> <month> 202 </month> <year> (1992) </year> <month> 116-134. </month>
Reference-contexts: be found in time n O (m) , the standard basis of c W (m) (and so of W (m) ) can be found within the same time due to the Weisfeiler-Lehman algorithm for constructing the cellular closure of a set of matrices [13] (for a time analysis see also <ref> [12] </ref>). Remark 3.5 If instead of the Weisfeiler-Lehman algorithm for constructing the cellular closure of a set of matrices we use an algorithm of [2], the algebras c W (m) and W (m) can be found in time O (mn 3m log n).
Reference: [13] <author> B. Ju. </author> <title> Weisfeiler (editor), On construction and identification of graphs, </title> <booktitle> Springer Lecture Notes, </booktitle> <volume> 558, </volume> <year> 1976. </year>
Reference-contexts: Thus the ISO is polynomially equivalent to the problem of finding the algebra Z (Aut (); V ). In <ref> [13] </ref> an approach to the ISO based on the notion of cellular algebra was developed. Denote by Mat V the full matrix algebra over C on V , i.e. the set of all complex matrices whose rows and columns are indexed by the elements of V . <p> One can see that the centralizer algebra Z (G; V ) of a permutation group (G; V ) is cellular. On the other hand, given a matrix A 2 Mat V the smallest cellular algebra containing A denoted by [A] can be constructed in polynomial time <ref> [13] </ref>. It gives an efficient algorithm to construct the cellular algebra W () = [A ] of a graph with adjacency matrix A . It is proved in [13] that Aut () coincides with Aut (W ()) which is by definition the group of all permutation matrices of Mat V commuting <p> given a matrix A 2 Mat V the smallest cellular algebra containing A denoted by [A] can be constructed in polynomial time <ref> [13] </ref>. It gives an efficient algorithm to construct the cellular algebra W () = [A ] of a graph with adjacency matrix A . It is proved in [13] that Aut () coincides with Aut (W ()) which is by definition the group of all permutation matrices of Mat V commuting with each matrix of W (). This implies W () Z (Aut (); V ) (inclusion). <p> We call W (m) the m-closure of W . Theorem 1.1 The m-closure operators W 7! W (m) (m = 1; 2; : : :) constructed above define a Schurian Polynomial Approximation Scheme. In <ref> [13] </ref>, [5] and [6] some algorithms which can be interpreted in the above terms as ones defining Schurian Polynomial Approximation Schemes were described. In this interpretation we denote by A m (resp. B m ) the algorithm from [5] (resp. from [6]). <p> The number of all such paths will be denoted by p (u; v; ffi). Lemma 2.3 (Path Proposition <ref> [13] </ref>, Th. C10) Let W be a cellular algebra. Then given R 2 R (W ) the integer p (u; v; ffi) does not depend on the choice of (u; v) 2 R. Let U 2 Cel fl (W ) be a cellular set. <p> The group of all isomorphisms from W to itself contains a normal subgroup Aut (W ) = f' 2 Sym (V )j A ' = A; A 2 W g called the automorphism group of W . Following <ref> [13] </ref> let us define for cellular algebras the notion of tensor product. Let W 1 Mat V 1 and W 2 Mat V 2 be cellular algebras on V 1 and V 2 . <p> Clearly, R (W 1 W 2 ) = R (W 1 ) R (W 2 ) and Aut (W 1 W 2 ) = Aut (W 1 ) fi Aut (W 2 ). A large class of cellular algebras comes from permutation groups as follows (see <ref> [13] </ref>). Let (G; V ) be a permutation group. Then its centralizer algebra Z (G; V ) ae Mat V is a cellular algebra on V the standard basis of which consists of all the orbits of the natural action of G on V fi V . <p> It is well-known that the ISO is polynomially equivalent to the problem of constructing Sch (W ). The isomorphism of cellular algebras W and W 0 defined above induces an equivalence between the standard representations of them. The converse statement is not true. This motivates the following definition (see <ref> [13] </ref>). Cellular algebras W on V and W 0 on V 0 are called weakly isomorphic if there exists an algebra isomorphism f : W ! W 0 such that f (R (W )) = R (W 0 ). <p> (Sym (V ); V m ) can be found in time n O (m) , the standard basis of c W (m) (and so of W (m) ) can be found within the same time due to the Weisfeiler-Lehman algorithm for constructing the cellular closure of a set of matrices <ref> [13] </ref> (for a time analysis see also [12]). Remark 3.5 If instead of the Weisfeiler-Lehman algorithm for constructing the cellular closure of a set of matrices we use an algorithm of [2], the algebras c W (m) and W (m) can be found in time O (mn 3m log n). <p> In this notation the following procedure was described in <ref> [13] </ref> (see also [5]). Procedure A m (m 2) Input: a cellular algebra W on V . Output: a cellular algebra A m (W ) W . Step 1.
Reference: [14] <author> H. Wielandt, </author> <title> Finite permutation groups, </title> <publisher> Academic press, </publisher> <address> New York - London., </address> <year> 1964. </year>
Reference-contexts: This implies W () Z (Aut (); V ) (inclusion). Note that the ISO could be solved if the last inequality was always equality. Unfortunately, there exist cellular algebras W not coinciding with Z (Aut (W ); V ) denoted by Sch (W ) below (see [1], <ref> [14] </ref>). These algebras were called in [9] non-Schurian in contrast to Schurian ones for which W = Sch (W ). The above paragraph explains why the property of a cellular algebra "to be Schurian" is extremely important in the context of the ISO. <p> The algebra W is called Schurian if W = Sch (W ). Certainly, Sch (W ) is a Schurian algebra for all W . It follows from <ref> [14, 1] </ref> that there exist cellular algebras which are not Schurian. It is well-known that the ISO is polynomially equivalent to the problem of constructing Sch (W ). The isomorphism of cellular algebras W and W 0 defined above induces an equivalence between the standard representations of them.
References-found: 14

