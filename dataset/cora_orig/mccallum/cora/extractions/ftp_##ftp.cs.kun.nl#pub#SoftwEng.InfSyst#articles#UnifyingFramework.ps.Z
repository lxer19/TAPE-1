URL: ftp://ftp.cs.kun.nl/pub/SoftwEng.InfSyst/articles/UnifyingFramework.ps.Z
Refering-URL: http://www.sci.kun.nl/afdis/publist.html
Root-URL: 
Email: fpaulf,arthur,ernstlg@cs.kun.nl  
Title: A Unifying Framework for Conceptual Data Modelling Concepts  
Author: P.J.M. Frederiks, A.H.M. ter Hofstede, E. Lippe 
Keyword: Conceptual Data Modelling, Category Theory, Meta Modelling  
Note: Classification: 68P99 (AMS-1991), H.1.0. (CR-1991)  
Address: Toernooiveld 1 NL-6525 ED Nijmegen The Netherlands  
Affiliation: Department of Information Systems University of Nijmegen  
Abstract: Published as: P.J.M. Frederiks, A.H.M. ter Hofstede, and E. Lippe. A Unifying Framework for Conceptual Data Modelling Concepts. Technical Report CSI-R9410, Computing Science Institute, University of Nijmegen, Nijmegen, The Netherlands, September 1994. Abstract For succesful information systems development, conceptual data modelling is essential. Nowadays many techniques for conceptual data modelling exist, examples are NIAM, FORM, PSM, many (E)ER variants, IFO, and FDM. In-depth comparisons of concepts of these techniques is very difficult as the mathematical formalisations of these techniques, if existing at all, are very different. As such there is a need for a unifying formal framework providing a sufficiently high level of abstraction. In this paper the use of category theory for this purpose is addressed. Well-known conceptual data modelling concepts are discussed from a category theoretic point of view. Advantages and disadvantages of the approach chosen will be outlined. 
Abstract-found: 1
Intro-found: 1
Reference: [AF88] <author> D.E. Avison and G. Fitzgerald. </author> <title> Information Systems Development: Methodologies, Techniques and Tools. </title> <publisher> Blackwell Scientific Publications, Oxford, </publisher> <address> United Kingdom, </address> <year> 1988. </year>
Reference-contexts: Numerous and widely diverting views abound in this field of study. To a large extent, this is caused by the lack of formal foundations. The resulting situation has often been referred to as the Methodology Jungle <ref> [AF88] </ref>. In [Bub86] it is estimated that during the past years, hundreds if not thousands of information system development methods have been introduced. Most organisations and research groups have defined their own methods. Hardly any of them has a formal syntax, let alone a formal semantics.
Reference: [AH87] <author> S. Abiteboul and R. Hull. </author> <title> IFO: A Formal Semantic Database Model. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 12(4) </volume> <pages> 525-565, </pages> <month> December </month> <year> 1987. </year>
Reference-contexts: Complex application domains, such as meta mod-elling, hypermedia and CAD/CAM, have led to the introduction of advanced modelling concepts, such as present in the various forms of Extended ER (see e.g. [TYF86, EGH + 92]), IFO <ref> [AH87] </ref>, and object-role modelling extensions such as FORM [HO92] and PSM [HW93, HPW93]. Essential for creating order in this chaos is a unifying framework. <p> Many conceptual data modelling techniques contain at least one of these relations, although probably under a different name. The concepts of specialization and generalization in this paper correspond to a large extent to specialization and generalization as defined in IFO <ref> [AH87] </ref>. 10 3.4.1 Specialization Specialization is used when specific facts are to be recorded for specific instances of an object type only. A specialized object type inherits the properties of its supertype (s), but may have additional properties. As such, specialization corresponds to the notion of subtyping in NIAM. <p> As such, specialization corresponds to the notion of subtyping in NIAM. P-NAME Name PERSON $ Course COURSE SalaryDept DEPARTMENT STUDENT EMPLOYEE TEACHING-ASSISTANT As an example of specialization consider the IFO schema of figure 10 (adapted from <ref> [AH87] </ref>). In this schema the boxes represent concrete types, the diamonds represent abstract types and the circles represent subtypes. The double arrows denote specialization relations. Therefore, in this diagram STUDENT is a subtype of PERSON . The object type TEACHING-ASSISTANT is a subtype of both STUDENT and EMPLOYEE . <p> Specialization and generalization originate from different axioms in set theory [HW93]. The population of a generalized object type is the union of the populations of the participating object types, referred to as the specifiers. Typically, properties are propagated "upward" in a generalization hierarchy instead of "downward" (see also <ref> [AH87] </ref>). This also implies that the identification of a generalized object type depends on the identification of its specifiers. having F Formula left argument having right argument Variable (V-name) As an example of generalization consider figure 12.
Reference: [BSW94] <author> K. Baclawski, D. Simovici, and W. White. </author> <title> A categorical approach to database semantics. </title> <booktitle> Mathematical Structures in Computer Science, </booktitle> <volume> 4 </volume> <pages> 147-183, </pages> <year> 1994. </year>
Reference-contexts: The use of partial functions allows certain components of a relation to be undefined. In this sense, the approach outlined is more general than approaches as described in <ref> [Tui94, BSW94] </ref> where only very specific types of categories, topoi, are possible target categories. The paper is organised as follows. Section 2 contains a brief introduction to category theory and its historical background. Section 3 describes data modelling concepts from a category theoretic point of view.
Reference: [Bub86] <author> J.A. Bubenko. </author> <title> Information System Methodologies A Research View. </title> <editor> In T.W. Olle, H.G. Sol, and A.A. Verrijn-Stuart, editors, </editor> <booktitle> Information Systems Design Methodologies: Improving the Practice, </booktitle> <pages> pages 289-318. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, The Netherlands, </address> <year> 1986. </year>
Reference-contexts: Numerous and widely diverting views abound in this field of study. To a large extent, this is caused by the lack of formal foundations. The resulting situation has often been referred to as the Methodology Jungle [AF88]. In <ref> [Bub86] </ref> it is estimated that during the past years, hundreds if not thousands of information system development methods have been introduced. Most organisations and research groups have defined their own methods. Hardly any of them has a formal syntax, let alone a formal semantics.
Reference: [BW90] <author> M. Barr and C. Wells. </author> <title> Category Theory for Computing Science. </title> <publisher> Prentice-Hall, </publisher> <address> Engle-wood Cliffs, New Jersey, </address> <year> 1990. </year>
Reference-contexts: These requirements suggest category theory (see e.g. <ref> [BW90] </ref>) as an excellent candidate. Category theory provides a sound formal basis and abstracts from all representational aspects. Therefore, the framework will be embedded in category theory. <p> Then we will present some essential category theoretic definitions for the purpose of this paper. For an in-depth treatment of category theory the reader is referred to <ref> [BW90] </ref>. 2.1 Background Category theory is a relatively young branch of mathematics which originated from algebraic topology, and designed to describe various structural concepts from different mathematical fields in a uniform way [Fok92]. <p> Most of these definitions are adapted from <ref> [BW90] </ref>. The following definition defines what a category is. Definition 2.1 A category C is a directed multigraph hO; A; source; targeti whose nodes are called objects and whose edges are called arrows. <p> Secondly, and more seriously, exponents do not exist in many interesting categories. The use of exponents therefore would imply an extra, very restrictive, requirement on the class of instance categories Fund. Another alternative would be the use of sketches in order to allow the general specification of algebraic types <ref> [BW90] </ref>. Unfortunately, it turns out that such a solution also imposes too many restrictions on Fund. The approach adopted in this paper, does not suffer from the problems outlined in the previous paragraph and is based on an alternative treatment of collection types, as presented in [HW94].
Reference: [Che76] <author> P.P. Chen. </author> <title> The Entity-Relationship Model: Toward a Unified View of Data. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 1(1) </volume> <pages> 9-36, </pages> <month> March </month> <year> 1976. </year>
Reference-contexts: This has led to fuzzy and artificial concepts in information systems development methods and, to some extent, also in conceptual data modelling techniques. 1 Conceptual data modelling is imperative for succesful information systems development. Cur--rently, many different conceptual data modelling techniques exist such as ER <ref> [Che76] </ref> and its many variants, functional modelling techniques, such as FDM [Shi81], and so-called object-role modelling techniques, such as NIAM [NH89].
Reference: [DJDR94] <author> C.N.G. Dampney, M. Johnson, P. Dazely, and V. Reich. </author> <title> A higher order "commuting loop" structure that supports very large information systems data and proces architecture. </title> <booktitle> In Proceedings of the IFIP TC8 Working Conference, </booktitle> <address> Bonel University, Gold Coast QLD, Australia, </address> <month> May </month> <year> 1994. </year> <month> 16 </month>
Reference-contexts: Not many researchers have applied category theory to information systems. Recently, however, it seems that this is going to change (see e.g. <ref> [SFMS89, DJDR94, Sie90, Tui94] </ref>).
Reference: [EGH + 92] <author> G. Engels, M. Gogolla, U. Hohenstein, K. Hulsmann, P. Lohr-Richter, G. Saake, and H-D. Ehrich. </author> <title> Conceptual modelling of database applications using an extended ER model. </title> <journal> Data & Knowledge Engineering, </journal> <volume> 9(4) </volume> <pages> 157-204, </pages> <year> 1992. </year>
Reference-contexts: Complex application domains, such as meta mod-elling, hypermedia and CAD/CAM, have led to the introduction of advanced modelling concepts, such as present in the various forms of Extended ER (see e.g. <ref> [TYF86, EGH + 92] </ref>), IFO [AH87], and object-role modelling extensions such as FORM [HO92] and PSM [HW93, HPW93]. Essential for creating order in this chaos is a unifying framework. <p> As sets are identical if and only if they contain the same elements, the instances of a collection type are identified by their elements and do not need external identifications. Collection types correspond to grouping in IFO, association in ECR <ref> [EGH + 92] </ref>, grouping classes in SDM [HM81], and power types in PSM. 13 (S-Code) has-name Name Convoy is-name-of Ship As a simple example of the application of collection types consider the schema of figure 13, which shows a PSM schema of the so-called Convoy Problem of [HM81].
Reference: [Fal76] <editor> E.D. Falkenberg. </editor> <title> Concepts for Modelling Information. </title> <editor> In G.M. Nijssen, editor, </editor> <booktitle> Proceedings of the IFIP Working Conference on Modelling in Data Base Management Systems, </booktitle> <pages> pages 95-109, </pages> <address> Freudenstadt, Germany, </address> <month> January </month> <year> 1976. </year> <pages> North-Holland. </pages>
Reference-contexts: A cartesian product imposes an ordering on the various parts of the relation. Consequently, algebraic operators do not have important properties such as commutativity and associativity. This observation has led to the mapping oriented ap proach [Mai88] (see also <ref> [Fal76] </ref>), where relationship instances are treated as functions from the involved roles to values.
Reference: [FO94] <author> E.D. Falkenberg and J.L.H. Oei. </author> <title> Meta Model Hierarchies from an Object-Role Mod-elling Perspective. In T.A. </title> <editor> Halpin and R. Meersman, editors, </editor> <booktitle> Proceedings of the First International Conference on Object-Role Modelling (ORM-1), </booktitle> <pages> pages 218-227, </pages> <address> Magnetic Island, Australia, </address> <month> July </month> <year> 1994. </year>
Reference-contexts: In addition to that, the framework might provide a more general formal foundation for the meta model hierarchy described in <ref> [FO94] </ref>. Also an in-depth study of the various members of the class of instance categories Fund seems to be worthwile.
Reference: [Fok92] <author> M.M. Fokkinga. </author> <title> Law and Order in Algorithmics. </title> <type> PhD thesis, </type> <institution> Technical University of Twente, Enschede, </institution> <address> The Netherlands, </address> <year> 1992. </year>
Reference-contexts: For an in-depth treatment of category theory the reader is referred to [BW90]. 2.1 Background Category theory is a relatively young branch of mathematics which originated from algebraic topology, and designed to describe various structural concepts from different mathematical fields in a uniform way <ref> [Fok92] </ref>. Category theory offers a number of concepts, and theorems about those concepts, that form an abstraction of many concrete concepts in diverse branches of mathematics.
Reference: [Gri82] <editor> J.J. van Griethuysen, editor. </editor> <title> Concepts and Terminology for the Conceptual Schema and the Information Base. </title> <publisher> Publ. nr. </publisher> <address> ISO/TC97/SC5-N695, </address> <year> 1982. </year>
Reference-contexts: This framework should clarify the precise meaning of fundamental data modelling concepts and offer a sufficient level of abstraction to be able to concentrate on this meaning and avoid distractions of particular mathematical representations (in a sense, the well-known Conceptualisation Principle <ref> [Gri82] </ref> can also be applied to mathematical formalisations). These requirements suggest category theory (see e.g. [BW90]) as an excellent candidate. Category theory provides a sound formal basis and abstracts from all representational aspects. Therefore, the framework will be embedded in category theory.
Reference: [HM81] <author> M. Hammer and D. McLeod. </author> <title> Database Description with SDM: A Semantic Database Model. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 6(3) </volume> <pages> 351-386, </pages> <month> September </month> <year> 1981. </year>
Reference-contexts: As sets are identical if and only if they contain the same elements, the instances of a collection type are identified by their elements and do not need external identifications. Collection types correspond to grouping in IFO, association in ECR [EGH + 92], grouping classes in SDM <ref> [HM81] </ref>, and power types in PSM. 13 (S-Code) has-name Name Convoy is-name-of Ship As a simple example of the application of collection types consider the schema of figure 13, which shows a PSM schema of the so-called Convoy Problem of [HM81]. <p> association in ECR [EGH + 92], grouping classes in SDM <ref> [HM81] </ref>, and power types in PSM. 13 (S-Code) has-name Name Convoy is-name-of Ship As a simple example of the application of collection types consider the schema of figure 13, which shows a PSM schema of the so-called Convoy Problem of [HM81]. In this schema the object type Convoy is a collection type with as element type Ship. Ships are identified by a code (S-code), while convoys are identified by their constituent ships. There are several alternatives for a categorical formalisation of collection types. One alternative is to use exponents.
Reference: [HO92] <author> T.A. Halpin and M.E. Orlowska. </author> <title> Fact-oriented modelling for data analysis. </title> <journal> Journal of Information Systems, </journal> <volume> 2(2) </volume> <pages> 97-119, </pages> <month> April </month> <year> 1992. </year>
Reference-contexts: Complex application domains, such as meta mod-elling, hypermedia and CAD/CAM, have led to the introduction of advanced modelling concepts, such as present in the various forms of Extended ER (see e.g. [TYF86, EGH + 92]), IFO [AH87], and object-role modelling extensions such as FORM <ref> [HO92] </ref> and PSM [HW93, HPW93]. Essential for creating order in this chaos is a unifying framework.
Reference: [Hoa89] <author> C.A.R. Hoare. </author> <title> Notes on an Approach to Category Theory for Computer Scientists. </title> <editor> In M. Broy, editor, </editor> <booktitle> Constructive Methods in Computing Science, volume 55 of NATO Advanced Science Institute Series, </booktitle> <pages> pages 245-305. </pages> <publisher> Springer-Verlag, </publisher> <year> 1989. </year>
Reference-contexts: Finally, for an in-depth treatment of the formal definition of the framework described in this paper we refer to [LHF94]. 2 Category Theory In this section we briefly discuss the historical background of category theory and its "traditional" applications in computer science (see also <ref> [Lan71, Hoa89] </ref>). Then we will present some essential category theoretic definitions for the purpose of this paper. <p> Category theory offers a number of concepts, and theorems about those concepts, that form an abstraction of many concrete concepts in diverse branches of mathematics. As pointed out by Hoare <ref> [Hoa89] </ref>: "Category theory is quite the most general and abstract branch of pure mathematics". 2 Category theory allows the study of the essence of certain concepts as it focuses on the properties of mathematical structures instead of on their representation.
Reference: [HPW93] <author> A.H.M. ter Hofstede, H.A. Proper, and Th.P. van der Weide. </author> <title> Formal definition of a conceptual language for the description and manipulation of information models. </title> <journal> Information Systems, </journal> <volume> 18(7) </volume> <pages> 489-523, </pages> <year> 1993. </year>
Reference-contexts: Complex application domains, such as meta mod-elling, hypermedia and CAD/CAM, have led to the introduction of advanced modelling concepts, such as present in the various forms of Extended ER (see e.g. [TYF86, EGH + 92]), IFO [AH87], and object-role modelling extensions such as FORM [HO92] and PSM <ref> [HW93, HPW93] </ref>. Essential for creating order in this chaos is a unifying framework. Such a framework should be formal , in order to avoid ambiguities, offer a sufficiently high level of abstraction, in order to concentrate on the meaning of concepts instead of on representational aspects, and be sufficiently expressive.
Reference: [HW93] <author> A.H.M. ter Hofstede and Th.P. van der Weide. </author> <title> Expressiveness in conceptual data modelling. </title> <journal> Data & Knowledge Engineering, </journal> <volume> 10(1) </volume> <pages> 65-100, </pages> <month> February </month> <year> 1993. </year>
Reference-contexts: Complex application domains, such as meta mod-elling, hypermedia and CAD/CAM, have led to the introduction of advanced modelling concepts, such as present in the various forms of Extended ER (see e.g. [TYF86, EGH + 92]), IFO [AH87], and object-role modelling extensions such as FORM [HO92] and PSM <ref> [HW93, HPW93] </ref>. Essential for creating order in this chaos is a unifying framework. Such a framework should be formal , in order to avoid ambiguities, offer a sufficiently high level of abstraction, in order to concentrate on the meaning of concepts instead of on representational aspects, and be sufficiently expressive. <p> Contrary to what its name suggests, generalization is not the inverse of specialization. Specialization and generalization originate from different axioms in set theory <ref> [HW93] </ref>. The population of a generalized object type is the union of the populations of the participating object types, referred to as the specifiers. Typically, properties are propagated "upward" in a generalization hierarchy instead of "downward" (see also [AH87]). <p> This also implies that the identification of a generalized object type depends on the identification of its specifiers. having F Formula left argument having right argument Variable (V-name) As an example of generalization consider figure 12. In this schema the graphical conventions of PSM <ref> [HW93] </ref> have been used, the dashed lines represent generalization relations. This PSM schema models the construction of simple formulas: a Formula may be either a Variable or constructed by some function F from simpler formulas. This example demonstrates that generalization can be used for the specification of recursive types.
Reference: [HW94] <author> A.H.M. ter Hofstede and Th.P. van der Weide. </author> <title> Fact Orientation in Complex Object Role Modelling Techniques. In T.A. </title> <editor> Halpin and R. Meersman, editors, </editor> <booktitle> Proceedings of the First International Conference on Object-Role Modelling (ORM-1), </booktitle> <pages> pages 45-59, </pages> <address> Townsville, Australia, </address> <month> July </month> <year> 1994. </year>
Reference-contexts: Unfortunately, it turns out that such a solution also imposes too many restrictions on Fund. The approach adopted in this paper, does not suffer from the problems outlined in the previous paragraph and is based on an alternative treatment of collection types, as presented in <ref> [HW94] </ref>. As pointed out in this paper, collection types become superfluous by the introduction of a new type of constraint, the existensional uniqueness constraint , as well as a new identification scheme. As an example consider figure 14.
Reference: [Lan71] <author> S. Mac Lane. </author> <title> Categories for the Working Mathematician. </title> <publisher> Springer-Verlag, </publisher> <address> New York, New York, </address> <year> 1971. </year>
Reference-contexts: Finally, for an in-depth treatment of the formal definition of the framework described in this paper we refer to [LHF94]. 2 Category Theory In this section we briefly discuss the historical background of category theory and its "traditional" applications in computer science (see also <ref> [Lan71, Hoa89] </ref>). Then we will present some essential category theoretic definitions for the purpose of this paper.
Reference: [LHF94] <author> E. Lippe, A.H.M. ter Hofstede, and P.J.M. Frederiks. </author> <title> Category-Theoretic Foundations of Conceptual Data Modelling. </title> <type> Technical Report, </type> <institution> Computing Science Institute, University of Nijmegen, Nijmegen, </institution> <address> The Netherlands, </address> <year> 1994. </year>
Reference-contexts: Section 3 describes data modelling concepts from a category theoretic point of view. Section 4 discusses advantages and disadvantages of the approach outlined and identifies topics for further research. Finally, for an in-depth treatment of the formal definition of the framework described in this paper we refer to <ref> [LHF94] </ref>. 2 Category Theory In this section we briefly discuss the historical background of category theory and its "traditional" applications in computer science (see also [Lan71, Hoa89]). Then we will present some essential category theoretic definitions for the purpose of this paper. <p> For a complete definition of the first two requirements refer to <ref> [LHF94] </ref>. The third requirement deserves some further explanation. The category FinSet provides the most intuitive and most standard semantics of data models. Formalisations of data models are usually given in terms of elementary set theory, with finite sets. <p> A general framework for conceptual data models should at least be able to encompass such semantics. Therefore, the requirement that FinSet should act as a "bottom" element of Fund (for the formal translation of this requirement, again refer to <ref> [LHF94] </ref>). Consequently, the elements of Fund each are of a set-like nature. Rel TotRel FinSet Set infinity FuzzySet Bag partiality Poset PartSet partialitybelief/ disbelief multiple images order multiple images occurrences multiple 8 In figure 7, some examples of categories in Fund are shown. <p> In some data modelling techniques this is not necessarily true. A more general formalisation of generalized object types, which is also capable of dealing with non-disjoint specifiers, is presented in <ref> [LHF94] </ref>. This formalisation requires familiarity with some complex notions of category theory, e.g. colimits. <p> For example, uncertainty can be studied by considering FuzzySet as instance category. Finally, the framework does not use many complex categorical notions compared with similar approaches. Still however, a certain mathematical maturity is required for a complete understanding. This is notably so for the full framework as presented in <ref> [LHF94] </ref>, where also some well-known constraint types are incorporated, which uses some complex categorical notions such as colimit.
Reference: [Mai88] <author> D. Maier. </author> <title> The Theory of Relational Databases. </title> <publisher> Computer Science Press, </publisher> <address> Rockville, Maryland, </address> <year> 1988. </year>
Reference-contexts: A cartesian product imposes an ordering on the various parts of the relation. Consequently, algebraic operators do not have important properties such as commutativity and associativity. This observation has led to the mapping oriented ap proach <ref> [Mai88] </ref> (see also [Fal76]), where relationship instances are treated as functions from the involved roles to values.
Reference: [NH89] <author> G.M. Nijssen and T.A. Halpin. </author> <title> Conceptual Schema and Relational Database Design: a fact oriented approach. </title> <publisher> Prentice-Hall, </publisher> <address> Sydney, Australia, </address> <year> 1989. </year>
Reference-contexts: Cur--rently, many different conceptual data modelling techniques exist such as ER [Che76] and its many variants, functional modelling techniques, such as FDM [Shi81], and so-called object-role modelling techniques, such as NIAM <ref> [NH89] </ref>. Complex application domains, such as meta mod-elling, hypermedia and CAD/CAM, have led to the introduction of advanced modelling concepts, such as present in the various forms of Extended ER (see e.g. [TYF86, EGH + 92]), IFO [AH87], and object-role modelling extensions such as FORM [HO92] and PSM [HW93, HPW93]. <p> Object types in NIAM are represented as circles, roles as boxes and arrows between circles represent subtype relations (for a complete overview of the graphical conventions of NIAM refer to <ref> [NH89] </ref>). 6 writing Song Song recording Instrument is-recorded-by has-recorded is-written-by has-written has-as-memberis-member-of comprises of Instrumentation is-played-by Composer Band Song Musician Band-Membership is-dead plays Person Instrumental-Capability Death Death Song writing Song Song recording Composer Person Band Membership Band Musician Instrumentation Instrumental Capability Instrument role e 1 ** role e 4 role e
Reference: [RB88] <author> D.E. Rydeheard and R.M. Burstall. </author> <title> Computational Category Theory. </title> <publisher> Prentice-Hall, </publisher> <address> New York, New York, </address> <year> 1988. </year> <month> 17 </month>
Reference-contexts: X A B oo "# xffif ** yffif OO The category theoretic equivalent of the set theoretic concept of a bijective function is called an isomorphism. In a mathematical context isomorphism means indistinguishable in form. As remarked in <ref> [RB88] </ref>: Isomorphisms are important in category theory since arrow-theoretic descriptions usually determine an object to within an isomorphism. Thus isomorphisms are the degree of "sameness" that we wish to consider in categories.
Reference: [SFMS89] <author> C. Sernadas, J. Fiadeiro, R. Meersman, and A. Sernadas. </author> <title> Proof-theoretic Conceptual Modelling: the NIAM Case Study. </title> <editor> In E.D. Falkenberg and P. Lindgreen, editors, </editor> <booktitle> Information System Concepts: An In-depth Analysis, </booktitle> <pages> pages 1-30, </pages> <address> Amsterdam, The Netherlands, </address> <year> 1989. </year> <month> North-Holland/IFIP. </month>
Reference-contexts: Not many researchers have applied category theory to information systems. Recently, however, it seems that this is going to change (see e.g. <ref> [SFMS89, DJDR94, Sie90, Tui94] </ref>).
Reference: [Shi81] <author> D.W. Shipman. </author> <title> The Functional Data Model and the Data Language DAPLEX. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 6(1) </volume> <pages> 140-173, </pages> <month> March </month> <year> 1981. </year>
Reference-contexts: Cur--rently, many different conceptual data modelling techniques exist such as ER [Che76] and its many variants, functional modelling techniques, such as FDM <ref> [Shi81] </ref>, and so-called object-role modelling techniques, such as NIAM [NH89].
Reference: [Sie90] <author> A. Siebes. </author> <title> On Complex Objects. </title> <type> PhD thesis, </type> <institution> Technical University of Twente, Enschede, </institution> <address> The Netherlands, </address> <year> 1990. </year>
Reference-contexts: Not many researchers have applied category theory to information systems. Recently, however, it seems that this is going to change (see e.g. <ref> [SFMS89, DJDR94, Sie90, Tui94] </ref>). <p> After the definition of type models, the various data modelling constructs are given a category theoretic definition. These constructs are defined in terms of restrictions on type models. 3.1 Type Graphs Data models can be represented by type graphs (see also <ref> [Sie90] </ref> and [Tui94]). The various object types in the data model correspond to nodes in the graph, while the various constructions can be discerned by labelling the arrows. Relationship types, for example, correspond to nodes.
Reference: [Tui94] <author> C. Tuijn. </author> <title> Data Modeling from a Categorical Perspective. </title> <type> PhD thesis, </type> <institution> University of Antwerpen, </institution> <address> Antwerpen, Belgium, </address> <year> 1994. </year>
Reference-contexts: The use of partial functions allows certain components of a relation to be undefined. In this sense, the approach outlined is more general than approaches as described in <ref> [Tui94, BSW94] </ref> where only very specific types of categories, topoi, are possible target categories. The paper is organised as follows. Section 2 contains a brief introduction to category theory and its historical background. Section 3 describes data modelling concepts from a category theoretic point of view. <p> Not many researchers have applied category theory to information systems. Recently, however, it seems that this is going to change (see e.g. <ref> [SFMS89, DJDR94, Sie90, Tui94] </ref>). <p> Not many researchers have applied category theory to information systems. Recently, however, it seems that this is going to change (see e.g. [SFMS89, DJDR94, Sie90, Tui94]). Some of the advantages of the application of category theory to data modelling are mentioned in <ref> [Tui94] </ref>: An important motivation for a categorical basis for data modeling is that category theory allows to define constructs in a very uniform way which provides a basis for interesting generalizations. <p> After the definition of type models, the various data modelling constructs are given a category theoretic definition. These constructs are defined in terms of restrictions on type models. 3.1 Type Graphs Data models can be represented by type graphs (see also [Sie90] and <ref> [Tui94] </ref>). The various object types in the data model correspond to nodes in the graph, while the various constructions can be discerned by labelling the arrows. Relationship types, for example, correspond to nodes.
Reference: [TYF86] <author> T.J. Teory, D. Yang, and J.P. Fry. </author> <title> A logical design methodology for relational databases using the extended entity-relationship model. </title> <journal> Computing Survey, </journal> <volume> 18(2) </volume> <pages> 197-222, </pages> <year> 1986. </year>
Reference-contexts: Complex application domains, such as meta mod-elling, hypermedia and CAD/CAM, have led to the introduction of advanced modelling concepts, such as present in the various forms of Extended ER (see e.g. <ref> [TYF86, EGH + 92] </ref>), IFO [AH87], and object-role modelling extensions such as FORM [HO92] and PSM [HW93, HPW93]. Essential for creating order in this chaos is a unifying framework.
Reference: [You89] <author> E. Yourdon. </author> <title> Modern Structured Analysis. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1989. </year>
Reference-contexts: A relationship type represents an association between object types and may be n-ary in some data modelling techniques (with n 1), as well as play a role in other relationship types. Your-don <ref> [You89] </ref> refers to such relationship types as associative object type indicators, while in NIAM relationship types participating in other relationship types are called objectified fact types.
References-found: 29

