URL: http://www.isi.edu/soar/gratch/FSym.ps
Refering-URL: http://www.isi.edu/soar/gratch/home.html
Root-URL: http://www.isi.edu
Email: gratch@isi.edu  
Title: Reasoning about Multiple Plans in Dynamic Multi-agent Domains (Extended Abstract)  
Author: Jonathan Gratch 
Address: 4676 Admiralty Way, Marina del Rey, CA, 90292  
Affiliation: University of Southern California, Information Sciences Institute  
Abstract-found: 0
Intro-found: 1
Reference: <author> Ambros-Ingerson, J. A. and Steel, S. </author> <year> 1988. </year> <title> Integrating Planning, Execution and Monitoring, </title> <booktitle> in AAAI-88. </booktitle>
Reference: <author> Bratman, M. E., Israel, D. J., and Pollack, M. E., </author> <year> 1988. </year> <title> Plans and resource-bounded practical reasoning, </title> <journal> Computational Intelligence, </journal> <volume> 4, </volume> <pages> pp 349-355. </pages>
Reference: <author> Chapman, D. </author> <year> 1987. </year> <title> Planning for conjunctive goals, </title> <booktitle> Artificial Intelligence, </booktitle> <pages> 32 , pp. 333-377. </pages>
Reference-contexts: Introduction Classical planning algorithms such as T WEAK <ref> (Chapman, 1987) </ref> or SNLP (McAllester and Rosenblitt 1991) were developed to solve relatively simple problems in static, single-agent environments.
Reference: <author> Cohen, P. and Levesque, H., </author> <year> 1990. </year> <title> Intention is choice with commitment, </title> <journal> Artificial Intelligence, </journal> <volume> 42(3). </volume>
Reference: <author> Firby, J. </author> <year> 1987. </year> <title> An investigation into reactive planning in complex domains, </title> <note> In AAAI-87. </note>
Reference-contexts: The individual vehicle agents execute the commanders high-level plans, making appropr i-ate reactions based on the current state of the environment ( Tambe 1997). The commander agent is based on the planning architecture described above, whereas the vehicle agents can be viewed as RAP-like execution systems <ref> ( Firby 1987) </ref> supplemented with Tambes teamwork and agent tracking tec h-niques. Most recently, we have extended the approach higher in the army command hierarchy, intr o-ducing a battalion commander agent that collaborates with its company commander agents to plan and execute a battalion deep attack mission.
Reference: <author> Georgeff, M. P., and Lansky, A. L. </author> <year> 1987. </year> <title> Reactive reasoning and planning, </title> <booktitle> in AAAI-87, </booktitle> <pages> pp. 677-682. </pages>
Reference-contexts: For normal predicates such as ON (A,B) , this truth value is assigned by sensing the environment. With meta-predicates, we are esse n-tially making the plan network part of the environment, much as in the PRS planner <ref> ( Georgeff and Lansky, 1987) </ref>. That is, we must provide mechanisms for (1) examining the current meta-relations and assign truth values to corresponding predicates, and (2) receiving the commands of meta-tasks and making the appropriate change in the current meta-relations.
Reference: <author> Golden, K., Etzioni, O., and Weld, D. </author> <year> 1994. </year> <title> Omnipotence without Omniscience: Efficient Sensor Management for Pla n-ning. </title> <booktitle> in AAAI-94, </booktitle> <address> Seattle, WA. </address>
Reference-contexts: Our planner incorporates a number of novel features, but for the purposes of this article it may be considered equivalent to IPEM (Ambros-Ingerson and Steel 1988), which shares many features with XII <ref> (Golden et al. 1994) </ref>. Some differences between our approach and IPEM are briefly considered later in the article. IPEM was designed to support planning, execution and replanning for environments where actions have duration and the world can change in surprising ways.
Reference: <author> Grosz, B., and Kraus, S. </author> <year> 1996. </year> <title> Collaborative Plans for Complex Group Action, </title> <journal> Artificial Intelligence, </journal> <volume> 86(2). </volume>
Reference-contexts: Essentially, the intentional approach adds a layer atop standard plan representations that allows a system to reason about properties of different plans. For e x-ample, a having a plan doesnt change an agents behavior unless it intends to perform the actions in the plan <ref> (Grosz and Kraus, 1996) </ref>. Similarly, collaboration can be represented by allowing a planner to intend that other agents achieve their goals. The advantage of this additional complexity is it provides a framework for explicitly deliberate about many of the issues that arise in dynamic multi-agent enviro n-ments. <p> Classical planning representations are clearly impoverished. However, it is unclear how to relate the intentional approach to more traditional planning methods. Intentional approaches are typically d e-scribed as normative formalisms rather than implemented systems <ref> (Grosz and Kraus, 1996) </ref>, or when implemented, do not utilize conventional planning algorithms (Ramshaw, 1991). This article describes a research program that aims to bridge the gap between these two formalisms.
Reference: <author> Hill, R., Chen, J., Gratch, G., Rosenbloom, P., and Tambe, M. </author> <year> 1997. </year> <title> Intelligent Agents for the Synthetic Battlefield, </title> <booktitle> in AAAI-97/IAAI-97, </booktitle> <pages> pp. 1006-1012. </pages>
Reference-contexts: The common knowledge meta-relation keeps track of to whom the plan has been communicated to. Example We illustrate the approach by working through an example of how metaplanning works in an applic a-tion domain. The approach has been tested in the context of large-scale military simulations <ref> (Hill et. al. 1997) </ref> and we use this domain as a basis for discussion. Our system participated in a simulated military exercises known as Synthetic Theater of War '97 (Stow-97).
Reference: <author> Kautz, H. and Selman, B. </author> <year> 1996. </year> <title> Pushing the Envelope: Planning, Propositional Logic, and Stochastic Search, </title> <booktitle> in AAAI-96, </booktitle> <address> Portland, OR, </address> <pages> pp. 1194-1201. </pages>
Reference-contexts: One key issue is how the planner searches the space of plans. Maintaining multiple (roughly independent) plans in the same network may favor different search methods than those co m-monly used. A novel feature of our planner is that it generates plans via local iterative repair search <ref> (Kautz and Selman 1996) </ref>, rather than conventional systematic backtracking search of IPEM and other DevelopPlan -?group ?order ?plan ?lead ?second ?m1 ?m2 :pre plan-for-?group ?order ?plan oriented-self-?group YES flawed?plan :add leadMission-?lead ?m1 secondaryMission-?second ?m2 :del commonKn-?plan ?group flawed?plan :commands :at-start enable-modification-?plan :at-end disable-modification-?plan-ReceiptofMission -?recipient ?sender ?order ?suborder ?plan :pre order?sender ?recipient
Reference: <author> Knoblock, C. </author> <year> 1995. </year> <title> Planning, executing, </title> <booktitle> sensing, and replanning for information gathering, in Proceedings of IJCAI-95, Montreal, </booktitle> <pages> pp. 1686-1693. </pages>
Reference: <author> McAllester, D. and Rosenblitt, D. </author> <year> 1991. </year> <title> Systematic Nonlinear Planning, </title> <booktitle> in AAAI-91. </booktitle>
Reference-contexts: Introduction Classical planning algorithms such as T WEAK (Chapman, 1987) or SNLP <ref> (McAllester and Rosenblitt 1991) </ref> were developed to solve relatively simple problems in static, single-agent environments. <p> IPEM was designed to support planning, execution and replanning for environments where actions have duration and the world can change in surprising ways. IPEM plans by constraint posting in the same fashion as other classical planners such as SNLP <ref> (McAllester and Rosenblitt 1991) </ref>. Constraints are added in response to threats to the current set of a c-tivities.
Reference: <author> Pollack, M.E., </author> <year> 1992. </year> <title> The uses of plans, </title> <booktitle> Artificial Intelligence, </booktitle> <pages> 57(1) , pp 43-68. </pages>
Reference: <author> Ramshaw, L. A., </author> <year> 1991. </year> <title> A three-level model for plan exploration, </title> <booktitle> in Proceedings of ACL91. </booktitle>
Reference-contexts: Classical planning representations are clearly impoverished. However, it is unclear how to relate the intentional approach to more traditional planning methods. Intentional approaches are typically d e-scribed as normative formalisms rather than implemented systems (Grosz and Kraus, 1996), or when implemented, do not utilize conventional planning algorithms <ref> (Ramshaw, 1991) </ref>. This article describes a research program that aims to bridge the gap between these two formalisms. <p> This is an evolving project and there are important issues we have not adequately addressed. For e x-ample, IPEM supports fairly flexible individual replanning, however collaborative replanning requires some language for talking about the planning process with other agents <ref> (Ramshaw, 1991) </ref>. In the cu r-rent implementation, commanders recognize interactions between their subordinate units plans, but have no means for telling the other agents about them in any detail.
Reference: <author> Rickel, J. and Johnson, L. </author> <year> 1997. </year> <title> Intelligent tutoring in virtual reality, </title> <booktitle> in Proc. of World Conference on AI in Education. </booktitle>
Reference-contexts: R e-markably, recent applications have demonstrated that this basic technique, with modest extensions, can plan for large-scale, dynamic, multi-agent environments such as intelligent tutoring <ref> (Rickel and Joh n-son, 1997) </ref> and military planning (Wilkins and Myers, 1996; Hill et al. , 1997). These planning agents go beyond the traditional focus on plan generation.
Reference: <author> Traum, D. R. and Allen, J. F., </author> <year> 1994. </year> <title> Towards a formal theory of repair in plan execution and plan recognition, in Pro-cedings of UK planning and scheduling special interest group. </title>
Reference: <author> Tambe, M. </author> <year> 1997. </year> <title> Agent Architectures for Flexible, Practical Teamwork, </title> <booktitle> in AAAI-97, </booktitle> <pages> pp. 22-28. </pages>
Reference-contexts: The individual vehicle agents execute the commanders high-level plans, making appropr i-ate reactions based on the current state of the environment <ref> ( Tambe 1997) </ref>. The commander agent is based on the planning architecture described above, whereas the vehicle agents can be viewed as RAP-like execution systems ( Firby 1987) supplemented with Tambes teamwork and agent tracking tec h-niques.
Reference: <author> Wilensky, R. </author> <year> 1980. </year> <title> Meta-Planning, </title> <booktitle> Proceedings AAAI-80, </booktitle> <address> Stanford, CA, </address> <pages> pp. 334-336. </pages>
Reference: <author> Wilkins D. E. and Myers, K. L. </author> <year> 1996. </year> <title> Asynchronous dynamic replanning in a multiagent planning architecture, in Advanced Planning Technology, </title> <editor> Austin Tate (ed.), </editor> <publisher> AAAI Press. </publisher>
References-found: 19

