URL: http://www.iro.umontreal.ca/labs/infographie/papers/Poulin-1997-SSH/Poulin-1997-SSH.ps.gz
Refering-URL: http://www.iro.umontreal.ca/labs/infographie/papers/Poulin-1997-SSH/
Root-URL: http://www.iro.umontreal.ca
Email: f poulin,ratib,marcoj @iro.umontreal.ca  
Title: Sketching Shadows and Highlights to Position Lights  
Author: Pierre Poulin Karim Ratib Marco Jacques D epartement I.R.O. 
Web: g  
Address: Montr eal  
Affiliation: Universit e de  
Abstract: In this paper, we introduce an approach based on sketching in order to position light sources. Point light sources are positioned by sketches of shadows or highlights. Extended light sources are positioned by sketches of umbra or penumbra. The resulting system allows to quickly position light sources and to refine their positions interactively and more intuitively. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> L. Eggli, B. Bruederlin, and G. Elber. </author> <title> Sketching as a solid modeling tool. </title> <editor> In C. Hoffman and J. Rossignac, editors, </editor> <booktitle> Solid Modeling '95, </booktitle> <pages> pages 313-322, </pages> <month> May </month> <year> 1995. </year>
Reference-contexts: The computer with its strict rules provides efficient and precise tools to design objects, but it does not easily lend itself to a process as intuitive and creative as sketching. A few systems [11] <ref> [1] </ref> [2] have been presented which attempt to reintroduce the sketching concept as a part of the computer-assisted solid modeling process, but extracting the depth (third dimension) from sketches is often very difficult to handle correctly and intuitively.
Reference: [2] <author> I. J. Grimstead and R. R. Martin. </author> <title> Creating solid models from single 2D sketches. </title> <editor> In C. Hoffman and J. Rossignac, editors, </editor> <booktitle> Solid Modeling '95, </booktitle> <pages> pages 323-338, </pages> <month> May </month> <year> 1995. </year>
Reference-contexts: The computer with its strict rules provides efficient and precise tools to design objects, but it does not easily lend itself to a process as intuitive and creative as sketching. A few systems [11] [1] <ref> [2] </ref> have been presented which attempt to reintroduce the sketching concept as a part of the computer-assisted solid modeling process, but extracting the depth (third dimension) from sketches is often very difficult to handle correctly and intuitively.
Reference: [3] <author> P. Hanrahan and P. E. Haeberli. </author> <title> Direct WYSIWYG painting and texturing on 3D shapes. </title> <editor> In F. Baskett, editor, </editor> <booktitle> Computer Graphics (SIGGRAPH '90 Proceedings), </booktitle> <volume> volume 24, </volume> <pages> pages 215-223, </pages> <month> Aug. </month> <year> 1990. </year>
Reference-contexts: This paper studies sketching in modeling, but in a different context: inverse shading. The shading defines the way surfaces appear in an image. In our approach, points are interactively positioned, or sketched in a graphics 3D scene <ref> [3] </ref>. These points are considered to be in an umbra or a penumbra region, or in a highlight region. Then, by a system of constraints and optimizations, the best position for the light source is identified with respect to the sketched points. <p> Highlights are also used to control the surface roughness coefficient. 3. The Sketching Process In our context, sketches drawn on the 2D image plane project directly on the 3D scene as if they were pasted onto the surfaces <ref> [3] </ref>. The points are therefore in 3D, but display a simpler 2D nature because the perspective is handled directly by the renderer producing the image of the scene. Moreover in our modeler, we can identify all information about the structure of the closest object projecting in any given image pixel.
Reference: [4] <author> K. Herndon, R. Zeleznik, D. Rubbings, D. Conner, S. Snibbe, and A. van Dam. </author> <title> Interactive shadows. </title> <booktitle> In UIST 92 Proceedings, </booktitle> <pages> pages 1-6, </pages> <month> Nov. </month> <year> 1992. </year>
Reference-contexts: With a single view, Zeleznik et al. [14] present an excellent sketching system based on gesture. Many of the ambiguous situations are removed by assuming most sketched edges are axis aligned. Their sketches are also used for shadows <ref> [4] </ref>, but only to move objects rather than the lights themselves. This paper studies sketching in modeling, but in a different context: inverse shading. The shading defines the way surfaces appear in an image. In our approach, points are interactively positioned, or sketched in a graphics 3D scene [3].
Reference: [5] <author> J. K. Kawai, J. S. Painter, and M. F. Cohen. </author> <title> Radioptimization goal based rendering. </title> <booktitle> Proceedings of SIGGRAPH 93. In Computer Graphics Proceedings, Annual Conference Series, </booktitle> <year> 1993, </year> <pages> pages 147-154, </pages> <year> 1993. </year>
Reference-contexts: By restricting surfaces to be perfect lambertian reflectors, but considering all interreflections, Schoeneman et al. [12] change the lights colors by spraying color onto surfaces. In the same context, but allowing fewer surfaces to influence the final result, Kawai et al. <ref> [5] </ref> modify surface reflection and light emission, but based on more subjective impressions of the scene illumination. Although useful within their respective contexts, these techniques do not change the position of the light sources in order to obtain a shadow here or a highlight there.
Reference: [6] <author> C. Lawrence, J. L. Zhou, and A. L. </author> <title> Tits. User's guide for cfsqp version 2.3: A C code for solving (large scale) constrained nonlinear (minimax) optimization problems, generating iterates satisfying all inequality constraints. </title> <type> Technical report TR-94-16rl, </type> <institution> Electrical Engineering Department; University of Maryland, College Park, </institution> <year> 1994. </year>
Reference-contexts: With this position, a non-linear (conics) constrained optimization <ref> [6] </ref> takes over to efficiently identify the furthest position for the point light within the volume of all cones. <p> The constraints on ~ R E and ~ N at point p i are identical to those respectively on ~ A and ~ N for the shadows (see figure 6). With all these constraints and an optimization function, the solver <ref> [6] </ref> can find a solution generally with the same efficiency as for shadows (under 0.015 second per sketched point). However for highlights, there are more frequent situations where due to the surface curvature and the cones aperture, two cones cannot intersect.
Reference: [7] <author> J. R. Miller and R. N. Goldman. </author> <title> Geometric algorithms for detecting and calculating all conic sections in the intersection of any two natural quadric surfaces. Graphical Models and Image Processing, </title> <booktitle> 57(1) </booktitle> <pages> 55-66, </pages> <month> Jan. </month> <year> 1995. </year>
Reference-contexts: If it is infinite, a directional light is computed; otherwise, a point light source is positioned. An example is illustrated in figure 3. Robustly computing these intersections is a difficult task <ref> [7] </ref>, but fortunately, by stating the problem as a constrained optimization problem, we become not interested in knowing the intersection volume itself, but rather simply in determining if a point belongs or not to all the volumes simultaneously.
Reference: [8] <author> B.-T. Phong. </author> <title> Illumination for computer generated pictures. </title> <journal> Communications of the ACM, </journal> <volume> 18(6) </volume> <pages> 311-317, </pages> <month> June </month> <year> 1975. </year>
Reference-contexts: Sketching Highlights Another illumination effect corresponds to the presence of highlights onto specular surfaces. These highlights can also be used to control the position of a light source. Highlights are usually simulated in reflection models by the specular term. In Phong's model <ref> [8] </ref>, this corresponds to the function ( ~ R E ~ L) n , where ~ R E is the perfect reflection (mirror) of the viewer direction, ~ L is the direction from the point to the light source, and n is the roughness coefficient of the surface.
Reference: [9] <author> P. Poulin and A. Fournier. </author> <title> Lights from highlights and shadows. </title> <editor> In D. Zeltzer, editor, </editor> <booktitle> Computer Graphics (1992 Symposium on Interactive 3D Graphics), </booktitle> <volume> volume 26, </volume> <pages> pages 31-38, </pages> <month> Mar. </month> <year> 1992. </year>
Reference-contexts: Although useful within their respective contexts, these techniques do not change the position of the light sources in order to obtain a shadow here or a highlight there. Van Wijk et al. [13] define light direction by specifying the center of a highlight. Poulin and Fournier <ref> [9] </ref> extend this work in a modeler which controls light position and definition, as well as surface roughness, by manipulating directly within the modeler their effects (shadows and highlights) as if they were 3D objects. <p> We show in this paper how solving the same problem with sketching can greatly improve upon the design of simple illumination in a computer graphics scene. As in the earlier work of Poulin and Fournier <ref> [9] </ref>, we concentrate our efforts on positioning lights, but this time from sketches of shadows and highlights. Highlights are also used to control the surface roughness coefficient. 3.
Reference: [10] <author> P. Poulin and A. Fournier. </author> <title> Painting surface characteristics. </title> <booktitle> In Eurographics Rendering Workshop 1995. Eurographics, </booktitle> <pages> pages 119-129, </pages> <month> June </month> <year> 1995. </year>
Reference-contexts: While much research attention as been devoted to these illumination models, very little has been focused on helping a user to find the appropriate parameters values to lead to a specific appearance for a given scene. Assuming a fixed scene geometry, Poulin and Fournier <ref> [10] </ref> paint color points onto surfaces. With a combination of constraints and optimizations, or weighted least-square fitting, their system provides values for the surface reflection parameters in the case of direct illumination.
Reference: [11] <author> D. Pugh. </author> <title> Designing solid objects using interactive sketch interpretation. </title> <editor> In D. Zeltzer, editor, </editor> <booktitle> Computer Graphics (1992 Symposium on Interactive 3D Graphics), </booktitle> <volume> volume 26, </volume> <pages> pages 117-126, </pages> <month> Mar. </month> <year> 1992. </year>
Reference-contexts: The computer with its strict rules provides efficient and precise tools to design objects, but it does not easily lend itself to a process as intuitive and creative as sketching. A few systems <ref> [11] </ref> [1] [2] have been presented which attempt to reintroduce the sketching concept as a part of the computer-assisted solid modeling process, but extracting the depth (third dimension) from sketches is often very difficult to handle correctly and intuitively.
Reference: [12] <author> C. Schoeneman, J. Dorsey, B. Smits, J. Arvo, and D. Green-berg. </author> <title> Painting with light. </title> <booktitle> Proceedings of SIGGRAPH 93. In Computer Graphics Proceedings, Annual Conference Series, </booktitle> <year> 1993, </year> <pages> pages 143-146, </pages> <year> 1993. </year>
Reference-contexts: With a combination of constraints and optimizations, or weighted least-square fitting, their system provides values for the surface reflection parameters in the case of direct illumination. By restricting surfaces to be perfect lambertian reflectors, but considering all interreflections, Schoeneman et al. <ref> [12] </ref> change the lights colors by spraying color onto surfaces. In the same context, but allowing fewer surfaces to influence the final result, Kawai et al. [5] modify surface reflection and light emission, but based on more subjective impressions of the scene illumination.
Reference: [13] <author> J. J. V. Wijk, F. W. Jansen, and W. F. Bronsvorrt. </author> <title> Some issues in designing user interfaces to 3D raster graphics. </title> <journal> Computer Graphics Forum, </journal> <volume> 4(1) </volume> <pages> 5-10, </pages> <month> Jan. </month> <year> 1985. </year>
Reference-contexts: Although useful within their respective contexts, these techniques do not change the position of the light sources in order to obtain a shadow here or a highlight there. Van Wijk et al. <ref> [13] </ref> define light direction by specifying the center of a highlight. Poulin and Fournier [9] extend this work in a modeler which controls light position and definition, as well as surface roughness, by manipulating directly within the modeler their effects (shadows and highlights) as if they were 3D objects.
Reference: [14] <author> R. C. Zeleznik, K. P. Herndon, and J. F. Hughes. </author> <title> Sketch: An interface for sketching 3d scenes. </title> <booktitle> Proceedings of SIG-GRAPH 96. In Computer Graphics Proceedings, Annual Conference Series, </booktitle> <pages> pages 163-170, </pages> <month> Aug. </month> <year> 1996. </year> <title> left image to the right image on their respective primitives </title>
Reference-contexts: Sketches are 2D in nature and sketching 3D objects is quite difficult as depth with correct perspective must be accurate enough to be able to reconstruct the 3D objects from multiple views (2D sketches). With a single view, Zeleznik et al. <ref> [14] </ref> present an excellent sketching system based on gesture. Many of the ambiguous situations are removed by assuming most sketched edges are axis aligned. Their sketches are also used for shadows [4], but only to move objects rather than the lights themselves.
References-found: 14

