URL: ftp://ftp.win.tue.nl/pub/techreports/cosor/95-22.ps
Refering-URL: http://www.win.tue.nl/math/bs/cosor95.html
Root-URL: http://www.win.tue.nl
Title: Scheduling by positional completion times  
Author: Han Hoogeveen Steef van de Velde 
Address: P.O. Box 513, 5600 MB Eindhoven, The Netherlands  P.O. Box 217, 7500 AE Enschede, The Netherlands  
Affiliation: Eindhoven University of Technology  Department of Mathematics and Computing Science Eindhoven University of Technology  Department of Mechanical Engineering University of Twente  
Date: 95-22, 1995,  June 28, 1995  
Pubnum: Memorandum COSOR  
Abstract: We present a new type of formulation for scheduling problems where jobs are identical in all aspects but one. This type of formulation is particularly useful for deriving Lagrangian lower and upper bounds for flowshop problems, where the jobs only differ in their processing times. We illustrate the effectiveness of this type of formulation for a two-machine flowshop problem where the first machine is a batching machine that executes the jobs in constant time. 1980 Mathematics Subject Classification (Revision 1991): 90B35. Keywords and Phrases: machine scheduling problems, mathematical formulation, positional completion times, batching, flow shop scheduling, total completion time, Lagrangian relaxation. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J.H. Ahmadi, R.H. Ahmadi, S. Dasu, and C.S. </author> <title> Tang (1992). Batching and scheduling jobs with batch and discrete processors. </title> <journal> Operations Research 39, </journal> <pages> 750-763. </pages>
Reference-contexts: 1 Introduction We present a new type of formulation for machine scheduling problems with jobs that are identical in all aspects but one. The formulation is based on positional completion times C <ref> [1] </ref> ; : : : ; C [n] , where C [j] is the completion time of the jth job in the sequence (j = 1; : : : ; n) with n the number of jobs to be scheduled. <p> Note that we have y k1 = y k + c k1 , which implies that y k1 y k + c for k = 2; : : : ; m 1. Order the values y k according to nonincreasing value; denote this order by y <ref> [1] </ref> ; : : : ; y [m1] . Moreover, permute the batches in the supposedly optimal schedule oe along the same permutation to obtain oe. The vector = ( 1 ; : : : ; m1 ) of multipliers that corresponds to the values y [1] ; : : : <p> this order by y <ref> [1] </ref> ; : : : ; y [m1] . Moreover, permute the batches in the supposedly optimal schedule oe along the same permutation to obtain oe. The vector = ( 1 ; : : : ; m1 ) of multipliers that corresponds to the values y [1] ; : : : ; y [m1] is determined from the set of equations y [k] + j=k 6 from which we derive that k = c + y [k+1] y [k] for k = 1; : : : ; m 1, where y [m] = 1. <p> We generated instances with m = 10; 15; 20, c = 10; 15; 20, and 12 t = 20; 40; 60; 80; 100. For each combination of m; c and t, we generated 20 instances. For each instance, the processing times p j were uniformly drawn from the interval <ref> [1; 10] </ref>. Table 1 summarizes our computational results. The header `U-O heuristic' pertains to the performance of our Lagrangian heuristic. This heuristic is of the U-O type and schedules the U-batches and O-batches in order of nondecreasing load. We settled the ties when solving the Lagrangian dual problem arbitrarily.
Reference: [2] <author> N.G. </author> <title> Hall (1986). Scheduling problems with generalized due dates. </title> <journal> IIE Transactions 18, </journal> <pages> 220-222. </pages>
Reference: [3] <author> J.A. Hoogeveen and T. </author> <title> Kawaguchi (1995). Minimizing total completion time in a two-machine flowshop: analysis of special cases. </title> <type> Unpublished report. </type>
Reference: [4] <author> J.A. Hoogeveen, H. Oosterhout, and S.L. van de Velde (1994). </author> <title> New lower and upper bounds for scheduling around a small common due date. </title> <journal> Operations Research 42, </journal> <pages> 102-110. </pages>
Reference: [5] <author> J.A. Hoogeveen and S.L. van de Velde (1993). </author> <title> Stronger Lagrangian bounds by use of slack variables: appications to machine scheduling problems. </title> <note> To appear in Mathematical Programming. </note>
Reference: [6] <author> J.B. Lasserre and M. </author> <month> Queyranne </month> <year> (1992). </year> <title> Generic scheduling polyhedra and a new mixed-integer formulation for single-machine scheduling. </title> <booktitle> In Proceedings of the Second Conference on Integer Programming and Combinatorial Optimization, </booktitle> <editor> eds. E. Balas, G. Cornuejols, and R. </editor> <title> Kannan, </title> <institution> Carnegie Mellon University, Pittsburgh. </institution>
Reference: [7] <author> R. </author> <title> M uller and A.S. Schulz (1994). The interval order polytope of a digraph, </title> <type> Working Paper, </type> <institution> TU Berlin. </institution>
Reference: [8] <author> C.N. </author> <title> Potts (1985). A Lagrangean based branch-and-bound algorithm for single machine sequencing with precedence constraints to minimize total weighted completion time. </title> <booktitle> Management Science 31, </booktitle> <pages> 1300-1311. </pages>
Reference: [9] <author> M. Queyranne and Y. </author> <title> Wang (1991a). Single-machine scheduling polyhedra with precedence constraints. </title> <journal> Mathematics of Operations Research 16, </journal> <pages> 1-20. </pages>
Reference: [10] <author> M. Queyranne and Y. </author> <title> Wang (1991b). A cutting plane procedure for precedence-constrained single machine scheduling, </title> <type> Working Paper, </type> <institution> University of British Columbia, Vancouver, Canada. </institution>
Reference-contexts: We generated instances with m = 10; 15; 20, c = 10; 15; 20, and 12 t = 20; 40; 60; 80; 100. For each combination of m; c and t, we generated 20 instances. For each instance, the processing times p j were uniformly drawn from the interval <ref> [1; 10] </ref>. Table 1 summarizes our computational results. The header `U-O heuristic' pertains to the performance of our Lagrangian heuristic. This heuristic is of the U-O type and schedules the U-batches and O-batches in order of nondecreasing load. We settled the ties when solving the Lagrangian dual problem arbitrarily.
Reference: [11] <author> W.E. </author> <title> Smith (1956). Various optimizers for single-stage production. </title> <journal> Naval Research Logistics Quarterly 3, </journal> <pages> 59-66. </pages>
Reference: [12] <author> S.L. van de Velde (1992). </author> <title> Dual decomposition of a single-machine scheduling problem. </title> <note> To appear in Mathematical Programming. </note>

References-found: 12

