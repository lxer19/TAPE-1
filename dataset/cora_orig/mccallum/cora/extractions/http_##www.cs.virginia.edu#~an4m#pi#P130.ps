URL: http://www.cs.virginia.edu/~an4m/pi/P130.ps
Refering-URL: http://www.cs.virginia.edu/~an4m/pi/
Root-URL: http://www.cs.virginia.edu
Email: E-mail: dbailey@nas.nasa.gov.  Email: jborwein@cecm.sfu.ca.  Email: pborwein@cecm.sfu.ca.  Email: plouffe@cecm.sfu.ca.  
Title: The Quest for Pi  
Author: David H. Bailey, Jonathan M. Borwein, Peter B. Borwein and Simon Plouffe J. Borwein: P. Borwein: S. Plouffe: 
Affiliation: Dept. of Mathematics and Statistics, Simon Fraser University  at Simon Fraser University.  Dept. of Mathematics and Statistics, Simon Fraser University  Dept. of Mathematics and Statistics, Simon Fraser University  
Address: T27A-1, Moffett Field, CA 94035-1000.  Burnaby, BC V5A 1S6 Canada.  Burnaby, BC V5A 1S6 Canada.  Burnaby, BC V5A 1S6 Canada.  
Note: D. Bailey: NASA Ames Research Center, Mail Stop  This work was supported by NSERC and the Shrum Endowment  
Date: June 25, 1996  
Abstract: This article gives a brief history of the analysis and computation of the mathematical constant = 3:14159 : : :, including a number of the formulas that have been used to compute through the ages. Recent developments in this area are then discussed in some detail, including the recent computation of to over six billion decimal digits using high-order convergent algorithms, and a newly discovered scheme that permits arbitrary individual hexadecimal digits of to be computed. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. H. Bailey, </author> <title> "The Computation of Pi to 29,360,000 Decimal Digits Using Borweins' Quartically Convergent Algorithm", </title> <booktitle> Mathematics of Computation, </booktitle> <month> Jan. </month> <year> 1988, </year> <month> pg. </month> <pages> 283-296. </pages>
Reference-contexts: For example, in 1965 it was found that the newly-discovered fast Fourier transform (FFT) could be used to perform high-precision multiplications much more rapidly than conventional schemes. These methods dramatically lowered the computer time required for computing and other mathematical constants to high precision. See <ref> [1] </ref>, [7] and [8] for a discussion of some of these techniques. In spite of these advances, until the 1970s all computer evaluations of still employed classical formulas, usually a variation of Machin's formula. <p> On the other hand, if two independent computations of digits of agree, then most likely both computers performed billions or even trillions of operations flawlessly. For example, in 1986, a -calculating program detected some obscure hardware problems in one of the original Cray-2 supercomputers <ref> [1] </ref>. The challenge of computing has also stimulated research into advanced computational techniques. For example, some new techniques for efficiently computing linear convolutions and fast Fourier transforms (FFTs), which have applications in many areas of science and engineering, had their origins in efforts to accelerate computations of .
Reference: [2] <author> D. H. Bailey, P. B. Borwein and S. Plouffe, </author> <title> "On The Rapid Computation of Various Polylogarithmic Constants", </title> <type> manuscript, </type> <year> 1996. </year> <note> Available from http://www.cecm.sfu/personal/pborwein/. </note>
Reference-contexts: Thus it was with no small surprise that a novel scheme was recently discovered for computing individual hexadecimal digits of <ref> [2] </ref>. <p> formula for 2 (which also was first discovered using the PSLQ algorithm) is as follows: 2 = i=0 16 i 16 16 8 16 (8i + 5) 2 (8i + 6) 2 + (8i + 7) 2 Formulas of this type for a few other mathematical constants are given in <ref> [2] </ref>. Computing individual hexadecimal digits of using the above formula crucially relies on what is known as the binary algorithm for exponentiation, wherein one evaluates x n by successive squaring and multiplication. This reduces the number of multiplications required to less than 2 log 2 (n). <p> Full details of this scheme, including some numerical considerations, as well as analogous formulas for a number of other basic mathematical constants, can be found in <ref> [2] </ref>. Sample implementations of this scheme in both Fortran and C are available from the web site http://www.cecm.sfu.ca/personal/pborwein/. As the reader can see, there is nothing very sophisticated about either this new formula for , its proof, or the scheme just described to compute hexadecimal digits of using it. <p> Alas, no decimal scheme for is known at this time, although there is for certain constants such as log (9=10) | see <ref> [2] </ref>. On the other hand, there is not yet any proof that a decimal scheme for cannot exist. This question is currently being actively pursued by researchers.
Reference: [3] <author> P. Beckmann, </author> <title> A History of Pi, </title> <address> St. </address> <publisher> Martin's Press, </publisher> <address> New York, </address> <year> 1971. </year>
Reference-contexts: Some exciting recent developments are discussed in sections three and four. Section five explores the question of why this topic has such enduring interest. For further details of the history of up to about 1970, the reader is referred to Petr Beckmann's readable and entertaining book <ref> [3] </ref>. A listing of milestones in the history of the computation of is given in Tables 1 and 2. 1. The Ancients In one of the earliest accounts (about 2000 BC) of , the Babylonians used the approximation 3 1 8 = 3:125. <p> This sentiment was even suggested in the closing chapters of Beckmann's 1971 book on the history of <ref> [3, pg. 172] </ref>. Ironically, the Salamin-Brent algorithm was discovered only five years later. A more recent reminder that we have not come to the end of humanity's quest for knowledge about came with the discovery of the Rabinowitz-Wagon "spigot" algorithm for in 1990 [15].
Reference: [4] <author> L. Berggren, J. M. Borwein, and P. B. Borwein, </author> <title> A Sourcebook on Pi, Springer, </title> <note> to appear. </note>
Reference: [5] <author> J. M. Borwein and P. B. Borwein, </author> <title> Pi and the AGM: A Study in Analytic Number Theory and Computational Complexity, </title> <publisher> John Wiley, </publisher> <address> New York, </address> <year> 1987. </year>
Reference-contexts: Thus algorithms such as the Salamin-Brent scheme can be implemented very rapidly on a computer. Beginning in 1985, two of the present authors (Jonathan and Peter Borwein) discovered some additional algorithms of this type <ref> [5, 6, 7] </ref>. One is as follows. Set a 0 = 1=3 and 5 s 0 = ( 3 1)=2.
Reference: [6] <author> J. M. Borwein and P. B. Borwein, </author> <title> "Ramanujan and Pi", </title> <publisher> Scientific American, </publisher> <month> February </month> <year> 1987, </year> <month> pg. </month> <pages> 112-117. </pages>
Reference-contexts: Thus algorithms such as the Salamin-Brent scheme can be implemented very rapidly on a computer. Beginning in 1985, two of the present authors (Jonathan and Peter Borwein) discovered some additional algorithms of this type <ref> [5, 6, 7] </ref>. One is as follows. Set a 0 = 1=3 and 5 s 0 = ( 3 1)=2.
Reference: [7] <author> J. M. Borwein, P. B. Borwein and D. H. Bailey, </author> <title> "Ramanujan, Modular Equations, and Approximations to Pi, or How to Compute One Billion Digits of Pi", </title> <journal> American Mathematical Monthly, </journal> <month> March </month> <year> 1989, </year> <note> pg. 201-219. Also available from the URL http://www.cecm.sfu.ca/personal/pborwein/. </note>
Reference-contexts: For example, in 1965 it was found that the newly-discovered fast Fourier transform (FFT) could be used to perform high-precision multiplications much more rapidly than conventional schemes. These methods dramatically lowered the computer time required for computing and other mathematical constants to high precision. See [1], <ref> [7] </ref> and [8] for a discussion of some of these techniques. In spite of these advances, until the 1970s all computer evaluations of still employed classical formulas, usually a variation of Machin's formula. <p> Thus algorithms such as the Salamin-Brent scheme can be implemented very rapidly on a computer. Beginning in 1985, two of the present authors (Jonathan and Peter Borwein) discovered some additional algorithms of this type <ref> [5, 6, 7] </ref>. One is as follows. Set a 0 = 1=3 and 5 s 0 = ( 3 1)=2.
Reference: [8] <author> R. P. Brent, </author> <title> "Fast Multiple-Precision Evaluation of Elementary Functions", </title> <journal> Journal of the ACM, </journal> <volume> vol. 23 (1976), pg. </volume> <pages> 242-251. </pages>
Reference-contexts: For example, in 1965 it was found that the newly-discovered fast Fourier transform (FFT) could be used to perform high-precision multiplications much more rapidly than conventional schemes. These methods dramatically lowered the computer time required for computing and other mathematical constants to high precision. See [1], [7] and <ref> [8] </ref> for a discussion of some of these techniques. In spite of these advances, until the 1970s all computer evaluations of still employed classical formulas, usually a variation of Machin's formula. <p> In other words, if one wishes to compute to twice as many digits, then one must evaluate twice as many terms of the series. In 1976 Eugene Salamin [16] and Richard Brent <ref> [8] </ref> independently discovered a new algorithm for , which is based on the arithmetic-geometric mean and some ideas originally due to Gauss in the 1800s (although for some reason Gauss never saw the connection to computing ).
Reference: [9] <author> D. and C. Chudnovsky, </author> <type> personal communication, </type> <year> 1995. </year>
Reference-contexts: David and Gregory Chudnovsky of Columbia University have also done some very-high precision computations of in recent years, alternating with Kanada for the world's record. Their most recent computation (1994) produced over four billion digits of <ref> [9] </ref>.
Reference: [10] <author> H. R. P. Ferguson and D. H. Bailey, </author> <title> "Analysis of PSLQ, An Integer Relation Algorithm", </title> <type> manuscript, </type> <year> 1996. </year> <note> Available from author. </note>
Reference-contexts: However, this derivation is dishonest, in the sense that the actual route of discovery was much different. This formula was actually discovered not by formal reasoning, but instead by numerical searches on a computer using the "PSLQ" integer relation finding algorithm <ref> [10] </ref>. Only afterwards was a rigorous proof found.
Reference: [11] <author> T. L. Heath, </author> <title> trans, "The Works of Archimedes", </title> <editor> in Robert M. Hutchins, ed., </editor> <booktitle> Great Books of the Western World, </booktitle> <volume> vol. 11, </volume> <booktitle> Encyclopedia Britannica, 1952, pg. </booktitle> <pages> 447-451. </pages>
Reference-contexts: the value of was due to Archimedes of Syracuse (ca. 250 BC), who used a geometrical scheme based on inscribed and circumscribed polygons to obtain the bounds 3 10 71 &lt; &lt; 3 1 7 , or in other words 3:1408 : : : &lt; &lt; 3:1428 : : : <ref> [11] </ref>. No one was able to improve on Archimedes' method for many centuries, although a number of persons used this general method to obtain more accurate approxi mations.
Reference: [12] <author> Y. Kanada, </author> <type> personal communication, </type> <year> 1996. </year> <title> See also Kanada's book (in Japanese), Story of Pi, </title> <publisher> Tokyo-Toshyo Co. Ltd., </publisher> <address> Tokyo, Japan, </address> <year> 1991. </year>
Reference: [13] <author> D. E. Knuth, </author> <booktitle> The Art of Computer Programming, </booktitle> <volume> vol. 2, </volume> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1981. </year>
Reference-contexts: This reduces the number of multiplications required to less than 2 log 2 (n). According to Knuth, this technique dates back at least to 200 B.C <ref> [13] </ref>. In our application, we need to obtain the exponentiation result modulo a positive integer c.
Reference: [14] <author> R. Preston, </author> <title> "The Mountains of Pi", </title> <address> The New Yorker, March 2, </address> <year> 1992, </year> <month> pg. </month> <pages> 36-67. </pages>
Reference-contexts: Their program was run on a home-brew supercomputer that they have assembled using private funds. An 7 interesting personal glimpse of the Chudnovsky brothers is given in <ref> [14] </ref>. 4. Computing Individual Digits of At several junctures in the history of , it was widely believed that virtually everything of interest with regards to this constant had been discovered, and in particular that no fundamentally new formulas for lay undiscovered.
Reference: [15] <author> S. D. Rabinowitz and S. Wagon, </author> <title> "A Spigot Algorithm for Pi", </title> <journal> American Math. Monthly, </journal> <volume> vol. 103 (1995), pg. </volume> <pages> 195-203. 15 </pages>
Reference-contexts: Ironically, the Salamin-Brent algorithm was discovered only five years later. A more recent reminder that we have not come to the end of humanity's quest for knowledge about came with the discovery of the Rabinowitz-Wagon "spigot" algorithm for in 1990 <ref> [15] </ref>. In this scheme, successive digits of (in any desired base) can be computed with a relatively simple recursive algorithm based on the previously generated digits. Multiple precision computation software is not required, so that this scheme can be easily implemented on a personal computer.
Reference: [16] <author> E. </author> <title> Salamin, "Computation of Pi Using Arithmetic-Geometric Mean", </title> <journal> Mathematics of Computation, </journal> <volume> vol. 30 (1976), pg. </volume> <pages> 565-570. </pages>
Reference-contexts: In other words, if one wishes to compute to twice as many digits, then one must evaluate twice as many terms of the series. In 1976 Eugene Salamin <ref> [16] </ref> and Richard Brent [8] independently discovered a new algorithm for , which is based on the arithmetic-geometric mean and some ideas originally due to Gauss in the 1800s (although for some reason Gauss never saw the connection to computing ).
Reference: [17] <author> D. Shanks and J. W. Wrench, </author> <title> "Calculation of Pi to 100,000 Decimals", </title> <journal> Mathematics of Computation, </journal> <volume> vol. 16 (1962), pg. </volume> <pages> 76-79. </pages>
Reference-contexts: C. A. Waldo of Purdue University, who happened to hear some of the deliberation while on other business. 3. The Twentieth Century With the development of computer technology in the 1950s, was computed to thousands and then millions of digits, in both decimal and binary bases (see for example <ref> [17] </ref>). These computations were facilitated by the discovery of some advanced algorithms for performing the required high-precision arithmetic operations on a computer. For example, in 1965 it was found that the newly-discovered fast Fourier transform (FFT) could be used to perform high-precision multiplications much more rapidly than conventional schemes.
Reference: [18] <author> S. Wagon, </author> <title> "Is Pi Normal", </title> <journal> The Math Intelligencer, </journal> <volume> vol. 7 (1985), pg. </volume> <pages> 65-67. 16 </pages>
Reference-contexts: Beyond immediate practicality, decimal and binary expansions of have long been of interest to mathematicians, who have still not been able to resolve the question of whether the expansion of is normal <ref> [18] </ref>.
References-found: 18

