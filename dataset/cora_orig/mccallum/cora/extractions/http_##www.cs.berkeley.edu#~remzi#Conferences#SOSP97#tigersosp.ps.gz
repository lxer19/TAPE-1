URL: http://www.cs.berkeley.edu/~remzi/Conferences/SOSP97/tigersosp.ps.gz
Refering-URL: http://www.cs.berkeley.edu/~remzi/Conferences/SOSP97/
Root-URL: 
Email: bolosky@microsoft.com  
Title: Distributed Schedule Management in the Tiger Video Fileserver  
Author: by William J. Bolosky, Robert P. Fitzgerald and John R. Douceur 
Affiliation: Microsoft Research  
Abstract: Tiger is a scalable, fault-tolerant video file server constructed from a collection of computers connected by a switched network. All content files are striped across all of the computers and disks in a Tiger system. In order to prevent conflicts for a particular resource between two viewers, Tiger schedules viewers so that they do not require access to the same resource at the same time. In the abstract, there is a single, global schedule that describes all of the viewers in the system. In practice, the schedule is distributed among all of the computers in the system, each of which has a possibly partially inconsistent view of a subset of the schedule. By using such a relaxed consistency model for the schedule, Tiger achieves scalability and fault tolerance while still providing the consistent, coordinated service required by viewers.
Abstract-found: 1
Intro-found: 1
Reference: [Berson94] <author> S. Berson, S. Ghandeharizadeh, R. Muntz, X. Ju. </author> <title> Staggered Striping in Multimedia Information Systems. </title> <booktitle> In ACM SIGMOD 94, </booktitle> <pages> pages 79-90. </pages>
Reference-contexts: These servers also tend to allocate entire copies of movies at single servers, requiring that content be replicated across a number of servers proportional to the expected demand for the content. Tiger, by contrast, stripes all content, eliminating the need for additional replicas to satisfy changing load requirements. <ref> [Berson94] </ref> proposes an independently developed single-machine disk striping algorithm with some similarities to that used by Tiger.
Reference: [Bolosky96] <author> W. Bolosky, J. Barrera III, R. Draves, R. Fitzgerald, G. Gibson, M. Jones, S. Levi, N. Myhrvold, R. Rashid. </author> <title> The Tiger Video Fileserver. </title> <booktitle> In Proceedings of the Sixth International Workshop on Network and Operating System Support for Digital Audio and Video. IEEE Computer Society, </booktitle> <address> Zushi, Japan, </address> <month> April </month> <year> 1996. </year> <note> Also available from www.research.microsoft.com in the operating systems area. </note>
Reference-contexts: We built a video server, choosing to use a distributed system structure. In building this server, we were faced with having to control the system in a scalable, fault tolerant manner. This paper describes our solution to this control problem. Tiger <ref> [Bolosky96] </ref>, the technology underlying the Microsoft Netshow Professional Video Server, is a video fileserver intended to supply digital video data on demand to up to tens of thousands of users simultaneously. <p> This scheme gives variable delays for initial service, but guarantees that once a viewer is started there will be no resource conflicts. <ref> [Bolosky96] </ref> discusses the duration of the delays introduced, and concludes that for reasonable system parameters and restricted to running at 80-90% of capacity the delays are acceptable for most purposes.
Reference: [Freedman96] <author> C. S. Freedman, J. Burger and D. J. DeWitt. </author> <title> SPIFFI A Scalable Parallel File System for the Intel Paragon. </title> <journal> In IEEE Trans. on Parallel and Distributed Systems, </journal> <volume> 7(11), </volume> <pages> pages 1185-1200, </pages> <month> November </month> <year> 1996. </year>
Reference-contexts: Tiger, by contrast, stripes all content, eliminating the need for additional replicas to satisfy changing load requirements. [Berson94] proposes an independently developed single-machine disk striping algorithm with some similarities to that used by Tiger. SPIFFI <ref> [Freedman96] </ref> is a parallel file system implemented on an Intel Paragon system that can stripe data across large numbers of disks and can be used for multimedia files (as well as for more traditional parallel filesystem tasks).
Reference: [Kuskin94] <author> J. Kuskin, D. Ofelt, M. Heinrich, J. Heinlein, R. Simoni, K. Gharachorloo, J. Chapin, D. Nakahira, J. Baxter, M. Horowitz, A. Gupta, M. Rosenblum, and J. Hennessy. </author> <title> The Stanford FLASH Multiprocessor. </title> <booktitle> In Proceedings of the 21st International Symposium on Computer Architecture, </booktitle> <pages> pages 302-313, </pages> <month> April, </month> <year> 1994. </year>
Reference-contexts: There is a certain similarity between the coherent hallucination model and distributed [Li88; Nitzberg91] or tightly coupled <ref> [Kuskin94; LaRowe91] </ref> shared memory multiprocessing. Both types of systems have a notion of a global abstraction upon which multiple participants act. Both require some attention by the programmer to keep coherence between the participants.
Reference: [LaRowe91] <author> R. LaRowe, C Ellis and L. Kaplan. </author> <title> The Robustness of NUMA Memory Management. </title> <booktitle> In SOSP 13, </booktitle> <pages> pages 137-151, </pages> <year> 1991. </year>
Reference-contexts: There is a certain similarity between the coherent hallucination model and distributed [Li88; Nitzberg91] or tightly coupled <ref> [Kuskin94; LaRowe91] </ref> shared memory multiprocessing. Both types of systems have a notion of a global abstraction upon which multiple participants act. Both require some attention by the programmer to keep coherence between the participants.
Reference: [Laursen94] <author> A. Laursen, J. Olkin, and M. Porter. </author> <title> Oracle Media Server: Providing Consumer Based Interactive Access to Multimedia Data. </title> <booktitle> In ACM SIGMOD 94, </booktitle> <pages> pages 470-477. </pages>
Reference-contexts: Related Work Tiger systems are typically built entirely of commodity hardware components, allowing them to take advantage of commodity hardware price curves. By contrast, other commercial video servers, such as those produced by Silicon Graphics [Nelson95] and Oracle <ref> [Laursen94] </ref>, tend to rely on supercomputer backplanes or massively parallel memory and I/O systems in order to provide the needed bandwidth.
Reference: [Li88] <author> K. Li. IVY: </author> <title> A Shared Memory Virtual Memory System for Parallel Computing. </title> <booktitle> In Proceedings of the 1988 International Conference on Parallel Processing, </booktitle> <address> pages II-94 II-101, </address> <year> 1988. </year>
Reference-contexts: There is a certain similarity between the coherent hallucination model and distributed <ref> [Li88; Nitzberg91] </ref> or tightly coupled [Kuskin94; LaRowe91] shared memory multiprocessing. Both types of systems have a notion of a global abstraction upon which multiple participants act. Both require some attention by the programmer to keep coherence between the participants.
Reference: [Malkin94] <author> G. Malkin. </author> <title> RIP Version 2 Protocol Analysis. </title> <type> RFC 1721. </type> <month> November, </month> <year> 1994 </year>
Reference-contexts: For example, the Domain Name System [Mockapetris88] can be viewed as a simple form of coherent hallucination. A directory of the global namespace is the hallucination, while each DNS servers authoritative knowledge and cached information make up the views. Other examples include protocols such as RIP <ref> [Malkin94] </ref>, OSPF [Moy94] and BGP [Rekhter95] for IP routing. In these protocols, the existence, up/down state and speed/load of all of the routers and links in the network take the place of the hallucination, and the current set of beliefs about them correspond to views.
Reference: [Mills91] <author> D. L. Mills. </author> <title> Internet Time Synchronization: The Network Time Protocol. </title> <journal> In IEEE Transactions on Communications, pages 1482-1493, </journal> <volume> Vol. 39, No. 10, </volume> <month> October, </month> <year> 1991. </year>
Reference-contexts: These protocols differ from Tigers coherent hallucination in that the views describe the entire system rather than just a subset, but like a view in a coherent hallucination they are allowed to be out of date. A further example is the portion of the Network Time Protocol <ref> [Mills91] </ref> dealing with cascaded synchronization. The synchronization tree is a hallucination; it describes the dynamically varying hierarchy of timing propagation through a synchronization subnet, yet it is not fully represented at any node in the system.
Reference: [Moy94] <author> J. Moy. </author> <note> OSPF Version 2. RFC 1583. </note> <month> March, </month> <year> 1994. </year>
Reference-contexts: For example, the Domain Name System [Mockapetris88] can be viewed as a simple form of coherent hallucination. A directory of the global namespace is the hallucination, while each DNS servers authoritative knowledge and cached information make up the views. Other examples include protocols such as RIP [Malkin94], OSPF <ref> [Moy94] </ref> and BGP [Rekhter95] for IP routing. In these protocols, the existence, up/down state and speed/load of all of the routers and links in the network take the place of the hallucination, and the current set of beliefs about them correspond to views.
Reference: [Nelson95] <author> M. Nelson, M. Linton, and S. Owicki. </author> <title> A Highly Available, Scalable ITV System. </title> <booktitle> In SOSP 15, </booktitle> <pages> pages 54-67. </pages> <month> December, </month> <year> 1995. </year>
Reference-contexts: Related Work Tiger systems are typically built entirely of commodity hardware components, allowing them to take advantage of commodity hardware price curves. By contrast, other commercial video servers, such as those produced by Silicon Graphics <ref> [Nelson95] </ref> and Oracle [Laursen94], tend to rely on supercomputer backplanes or massively parallel memory and I/O systems in order to provide the needed bandwidth.
Reference: [Mockapteris88] <author> P. Mockapetris and K. Dunlap. </author> <title> Development of the Domain Name System. </title> <booktitle> In Proceedings of SIGCOMM 88, </booktitle> <pages> pages 123-133, </pages> <month> April </month> <year> 1988. </year>
Reference: [Nitzberg91] <author> B. Nitzberg and V. Lo. </author> <title> Distributed Shared Memory: </title>
Reference-contexts: There is a certain similarity between the coherent hallucination model and distributed <ref> [Li88; Nitzberg91] </ref> or tightly coupled [Kuskin94; LaRowe91] shared memory multiprocessing. Both types of systems have a notion of a global abstraction upon which multiple participants act. Both require some attention by the programmer to keep coherence between the participants.
References-found: 13

