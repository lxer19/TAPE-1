URL: http://www.ece.cmu.edu/~ganger/disksim/disksim-doc.ps
Refering-URL: http://www.ece.cmu.edu/~ganger/disksim/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: The DiskSim Simulation Environment Version 1.0 Reference Manual  
Author: Gregory R. Ganger, Bruce L. Worthington, and Yale N. Patt 
Address: Room 3402, EECS Building  Ann Arbor, Michigan 48109-2122  
Affiliation: Computer Science and Engineering Division  Department of Electrical Engineering and Computer Science The University of Michigan,  
Date: February 27, 1998  
Pubnum: CSE-TR-358-98  
Abstract-found: 0
Intro-found: 1
Reference: [Ganger93] <author> G. Ganger, Y. Patt, </author> <title> "The Process-Flow Model: Examining I/O Performance from the System's Point of View", </title> <booktitle> ACM SIGMETRICS Conference, </booktitle> <month> May </month> <year> 1993, </year> <pages> pp. 86-97. </pages>
Reference-contexts: DiskSim has been used in a variety of published studies (and several unpublished studies) to understand modern storage subsystem performance [Ganger93a, Worthington94], to understand how storage performance relates to overall system performance <ref> [Ganger93, Ganger95, Ganger95a] </ref>, and to evaluate new storage subsystem architectures [Worthington95a]. DiskSim has been validated both as part of a more comprehensive system-level model [Ganger93, Ganger95a] and as a standalone subsystem [Worthington94, Worthington95]. <p> DiskSim has been validated both as part of a more comprehensive system-level model <ref> [Ganger93, Ganger95a] </ref> and as a standalone subsystem [Worthington94, Worthington95]. In particular, the disk module (which is extremely detailed) has been carefully validated against five different disk drives from three different manufacturers. The accuracy demonstrated far exceeds that of any other disk simulator known to the authors (e.g., see [Ruemmler94]). <p> Several trace formats have been used and new ones can be easily added. The synthetic trace generation module is quite flexible, particularly in the request arrival model (which can mimic an open process, a closed process or something in between). DiskSim was originally part of a larger, system-level model <ref> [Ganger93, Ganger95] </ref> that modeled each request's interactions with executing processes, but has been separated out for public dissemination. 1 As a result, it can be integrated into full system simulators (e.g., simulators like SimOS [Rosenblum95]) with little difficulty. 1 The system-level model includes several portions of a proprietary OS, allowing it <p> The options are the same as those available for the "Scheduling policy" parameter above. Scheduling priority scheme: Boolean [1 or 0] specifying whether or not requests flagged as high priority (i.e., time-critical or time-limited requests <ref> [Ganger93] </ref>) are automatically placed in the highest-priority queue (the priority queue). Priority scheduling: Integer [1-21] specifying the scheduling algorithm employed for selecting the next request to be serviced from the priority queue. <p> This subsection describes the default input format and briefly describes how to add support for new trace formats. The DiskSim 1.0 distribution supports the default format ("ascii"), a validation trace format ("validate"), the raw format ("raw") of the disk request traces described in <ref> [Ganger93, Ganger93a] </ref>, and the raw format ("hpl", or "hpl2" if the trace file header has been stripped) of the disk request traces described in [Ruemmler93]. 4.1.1 Default format The default input format is a simple ASCII stream (or file), where each line contains values for five parameters (separated by white space) <p> That is, the corresponding generator process "blocks" and waits for the request to complete before continuing with its sequence of work (i.e., its next think time) <ref> [Ganger93, Ganger95] </ref>. Probability of time-limited request: Float [0.0-1.0] specifying the probability that a generated request is time-limited. <p> That is, the corresponding generator process "blocks" and waits for the request to complete (if 28 it is not already complete) after a given amount of think time (specified by the below "time limit" parameters) <ref> [Ganger93, Ganger95] </ref>. These last two values (probabilities) determine how a generated request's criticality is assigned. Their sum must be less than or equal to 1.0. Each request is time-critical, time-limited or time-noncritical. <p> One reason for such a switch might be that a process must wait for the request to complete <ref> [Ganger93] </ref>; if a high-priority process is waiting on the request completion, the request's priority may be increased at the I/O driver. If there is more than one device (or more than one driver), then separate per-driver-per-device statistics are reported.
Reference: [Ganger93a] <author> G. Ganger, B. Worthington, R. Hou, Y. Patt, </author> <title> "Disk Subsystem Load Balancing: Disk Striping vs. Conventional Data Placement", </title> <booktitle> Hawaii International Conference on System Sciences, </booktitle> <month> January </month> <year> 1993, </year> <pages> pp. 40-49. </pages>
Reference-contexts: Some of the component modules are highly detailed (e.g., the disk module), and the individual components can be configured and interconnected in a variety of ways. DiskSim has been used in a variety of published studies (and several unpublished studies) to understand modern storage subsystem performance <ref> [Ganger93a, Worthington94] </ref>, to understand how storage performance relates to overall system performance [Ganger93, Ganger95, Ganger95a], and to evaluate new storage subsystem architectures [Worthington95a]. DiskSim has been validated both as part of a more comprehensive system-level model [Ganger93, Ganger95a] and as a standalone subsystem [Worthington94, Worthington95]. <p> Note that the last two schemes do not model real data layouts. In particular, two requests to the same block will often be sent to different devices. However, these data distribution schemes are useful for investigating various load balancing techniques <ref> [Ganger93a] </ref>. * The third String ["Noredun", "Shadowed", "Parity disk", or "Parity rotated"] specifies the redundancy scheme (which is orthogonal to the data distribution scheme). "Noredun" indicates that no redundancy is employed. 23 "Shadowed" indicates that one or more replicas of each data disk are maintained. "Parity disk" indicates that one parity <p> This subsection describes the default input format and briefly describes how to add support for new trace formats. The DiskSim 1.0 distribution supports the default format ("ascii"), a validation trace format ("validate"), the raw format ("raw") of the disk request traces described in <ref> [Ganger93, Ganger93a] </ref>, and the raw format ("hpl", or "hpl2" if the trace file header has been stripped) of the disk request traces described in [Ruemmler93]. 4.1.1 Default format The default input format is a simple ASCII stream (or file), where each line contains values for five parameters (separated by white space)
Reference: [Ganger94] <author> G. Ganger, B. Worthington, R. Hou, Y. Patt, </author> <title> "Disk Arrays: High Performance, High Reliability Storage Subsystems", </title> <journal> IEEE Computer, </journal> <volume> Vol. 27, No. 3, </volume> <month> March </month> <year> 1994, </year> <pages> pp. 30-36. </pages>
Reference-contexts: Two Integers [positive (III)] in the String are separated by a dash and specify the first and last disks of the set (in order of configuration specification, with the first specified disk being "1"). 3.5 Disk Array Data Organizations DiskSim can simulate a variety of logical data organizations <ref> [Ganger94] </ref>, including striping and various RAID architectures. Although DiskSim is organized so as to allow for such organizations both at the system-level (i.e., at front end of the device drivers) and at the controller-level, only system-level organizations are supported in the first released version.
Reference: [Ganger95] <author> G. Ganger, </author> <title> "System-Oriented Evaluation of Storage Subsystem Performance", </title> <type> Ph.D. Dissertation, </type> <institution> CSE-TR-243-95, University of Michigan, </institution> <address> Ann Arbor, </address> <month> June </month> <year> 1995. </year>
Reference-contexts: DiskSim has been used in a variety of published studies (and several unpublished studies) to understand modern storage subsystem performance [Ganger93a, Worthington94], to understand how storage performance relates to overall system performance <ref> [Ganger93, Ganger95, Ganger95a] </ref>, and to evaluate new storage subsystem architectures [Worthington95a]. DiskSim has been validated both as part of a more comprehensive system-level model [Ganger93, Ganger95a] and as a standalone subsystem [Worthington94, Worthington95]. <p> Several trace formats have been used and new ones can be easily added. The synthetic trace generation module is quite flexible, particularly in the request arrival model (which can mimic an open process, a closed process or something in between). DiskSim was originally part of a larger, system-level model <ref> [Ganger93, Ganger95] </ref> that modeled each request's interactions with executing processes, but has been separated out for public dissemination. 1 As a result, it can be integrated into full system simulators (e.g., simulators like SimOS [Rosenblum95]) with little difficulty. 1 The system-level model includes several portions of a proprietary OS, allowing it <p> has been separated out for public dissemination. 1 As a result, it can be integrated into full system simulators (e.g., simulators like SimOS [Rosenblum95]) with little difficulty. 1 The system-level model includes several portions of a proprietary OS, allowing it to achieve a close match to the real system behavior <ref> [Ganger95] </ref> but also preventing it from being publicly released. 1 1.2 What DiskSim does not do DiskSim, by itself, simulates and reports on only the performance-related aspects of the storage subsystem. <p> This manual does not provide details about DiskSim's internals. We refer those that wish to understand DiskSim more thoroughly and/or modify it to the appendices of <ref> [Ganger95] </ref>. 2 Actually, a rudimentary system model was kept in place to support the internal synthetic generation module. <p> This support was included for experiments in <ref> [Ganger95] </ref> in order to partially demonstrate the correctness problems of open workloads (e.g., feedback-free request traces). In most real systems, overlapping requests are almost never concurrently outstanding. Sequential stream diff maximum: Integer [nonnegative sectors] specifying the maximum distance between two "sequential" requests in a sequential stream. <p> That is, the corresponding generator process "blocks" and waits for the request to complete before continuing with its sequence of work (i.e., its next think time) <ref> [Ganger93, Ganger95] </ref>. Probability of time-limited request: Float [0.0-1.0] specifying the probability that a generated request is time-limited. <p> That is, the corresponding generator process "blocks" and waits for the request to complete (if 28 it is not already complete) after a given amount of think time (specified by the below "time limit" parameters) <ref> [Ganger93, Ganger95] </ref>. These last two values (probabilities) determine how a generated request's criticality is assigned. Their sum must be less than or equal to 1.0. Each request is time-critical, time-limited or time-noncritical. <p> times. 40 IOdriver Overlaps combined: the number of requests made unnecessary because they completely overlap with another outstanding request, followed by the fraction of requests that fall into this category. (Note that this is an extremely unusual event in real systems, but the situation may arise frequently in trace-driven simulation <ref> [Ganger95] </ref>.) IOdriver Read overlaps combined: the number of read requests made unnecessary because they completely overlap with another outstanding request, followed by the fraction of requests that fall into this category. The next eight statistics are not reported if "Print driver crit stats?" is set to false (0).
Reference: [Ganger95a] <author> G. Ganger, </author> <title> "Generating Representative Synthetic Workloads An Unsolved Problem", </title> <booktitle> Computer Measurement Group (CMG) Conference, Decemeber 1995, </booktitle> <pages> pp. 1263-1269. </pages>
Reference-contexts: DiskSim has been used in a variety of published studies (and several unpublished studies) to understand modern storage subsystem performance [Ganger93a, Worthington94], to understand how storage performance relates to overall system performance <ref> [Ganger93, Ganger95, Ganger95a] </ref>, and to evaluate new storage subsystem architectures [Worthington95a]. DiskSim has been validated both as part of a more comprehensive system-level model [Ganger93, Ganger95a] and as a standalone subsystem [Worthington94, Worthington95]. <p> DiskSim has been validated both as part of a more comprehensive system-level model <ref> [Ganger93, Ganger95a] </ref> and as a standalone subsystem [Worthington94, Worthington95]. In particular, the disk module (which is extremely detailed) has been carefully validated against five different disk drives from three different manufacturers. The accuracy demonstrated far exceeds that of any other disk simulator known to the authors (e.g., see [Ruemmler94]). <p> It does not model the behavior of the other computer system components or interactions between them and the storage subsystem. 2 Because storage subsystem performance metrics are not absolute indicators of overall system performance (e.g., see <ref> [Ganger95a] </ref>), promising architectures should be evaluated in the context of a more comprehensive system model (or a real system). In such cases, DiskSim becomes one component of the full model (just as a storage subsystem is one component of a full system). <p> Section 4 describes how to provide an input workload of I/O requests to DiskSim options include external traces, internally-generated synthetic workloads, and interactions with a larger simulation environment. Section 5 describes the contents of the output file. Section 6 provides validation data (all of which has been published previously <ref> [Worthington94, Worthington95, Ganger95a] </ref>) showing that DiskSim accurately models the behavior of several high-performance disk drives produced in the early 1990's. This manual does not provide details about DiskSim's internals. <p> The measured and simulated response time averages match to within 0.8% for all validation runs. (The bus, controller and device driver modules have also been validated as part of a more comprehensive, system-level simulation environment <ref> [Ganger95a] </ref>.) Greater insight into the validity of a storage subsystem model can be gained by comparing measured and simulated response time distributions [Ruemmler94]. Figures 1 and 2 show distributions of measured and simulated response times for a sample validation workload of 10,000 requests.
Reference: [Holland92] <author> M. Holland, G. Gibson, </author> <title> "Parity Declustering for Continuous Operation in Redundant Disk Arrays", </title> <booktitle> ACM International Conference on Architectural Support for Programming Languages and Operating Systems, </booktitle> <month> October </month> <year> 1992, </year> <pages> pp. 23-35. </pages>
Reference: [HP91] <author> Hewlett-Packard Company, </author> <title> "HP C2247 3.5-inch SCSI-2 Disk Drive Technical Reference Manual", Edition 1, </title> <type> Draft, </type> <month> December </month> <year> 1991. </year>
Reference: [HP92] <author> Hewlett-Packard Company, </author> <title> "HP C2244/45/46/47 3.5-inch SCSI-2 Disk Drive Technical Reference Manual", Part Number 5960-8346, </title> <address> Edition 3, </address> <month> September </month> <year> 1992. </year>
Reference-contexts: Characteristics of the HP C2247A can be found in table 1 and in <ref> [HP92, Worthington94] </ref>.
Reference: [HP93] <author> Hewlett-Packard Company, </author> <title> "HP C2490A 3.5-inch SCSI-2 Disk Drives, Technical Reference Manual", Part Number 5961-4359, </title> <address> Edition 3, </address> <month> September </month> <year> 1993. </year>
Reference-contexts: Time (ms) 0.0 0.4 0.8 Fraction of Requests Measured Simulated (c) HP C2490A (d) HP C3323A validation runs are 0.19 ms, 0.075 ms, 0.26 ms and 0.32 ms, respectively (or 1.2%, 0.5%, 2.0% and 1.9% of the corresponding mean response times). drives can be found in table 1 and in <ref> [Seagate92, Seagate92a, HP93, HP94, Worthington96] </ref>.
Reference: [HP94] <author> Hewlett-Packard Company, </author> <title> "HP C3323A 3.5-inch SCSI-2 Disk Drives, Technical Reference Manual", Part Number 5962-6452, </title> <address> Edition 2, </address> <month> April </month> <year> 1994. </year>
Reference-contexts: Time (ms) 0.0 0.4 0.8 Fraction of Requests Measured Simulated (c) HP C2490A (d) HP C3323A validation runs are 0.19 ms, 0.075 ms, 0.26 ms and 0.32 ms, respectively (or 1.2%, 0.5%, 2.0% and 1.9% of the corresponding mean response times). drives can be found in table 1 and in <ref> [Seagate92, Seagate92a, HP93, HP94, Worthington96] </ref>.
Reference: [Karedla94] <author> R. Karedla, J. S. Love, B. Wherry, </author> <title> "Caching Strategies to Improve Disk System Performance", </title> <journal> IEEE Computer, </journal> <volume> Vol. 27, No. 3, </volume> <month> March </month> <year> 1994, </year> <pages> pp. 38-46. </pages>
Reference-contexts: Cache size (in 512B blks): Integer [nonnegative 512B blocks] specifying the total size of the cache Cache segment count (SLRU): Integer [positive] specifying the number of segments for the segmented-LRU algorithm <ref> [Karedla94] </ref> if it is specified as the cache replacement algorithm (see below). Note that the value has a hard-coded upper limit (necessary for allocating certain static arrays) that is set to 10 in the current release of DiskSim. <p> Cache replacement policy: Integer [1-4] specifying the line replacement policy. 1 indicates First-In-First-Out (FIFO), 2 indicates segmented-LRU <ref> [Karedla94] </ref>, 3 indicates random replacement, and 4 indicates Last-In-First-Out (LIFO).
Reference: [Lee91] <author> E. Lee, R. Katz, </author> <title> "Peformance Consequences of Parity Placement in Disk Arrays", </title> <booktitle> ACM International Conference on Architectural Support for Programming Languages and Operating Systems, </booktitle> <year> 1991, </year> <pages> pp. 190-199. </pages>
Reference-contexts: Use of non-equal stripe unit sizes for data and parity has not been thoroughly tested in the current release of DiskSim. Parity rotation type: Integer [1-4] specifying how parity is rotated among the disks of the logical organization. The four options, as described in <ref> [Lee91] </ref>, are left symmetric (1), left asymmetric (2), right asymmetric (3), and right symmetric (4). This parameter is ignored unless "Parity rotated" redundancy is chosen. The next four parameters configure DiskSim's per-logorg mechanism for collecting information about instantaneous per-device queue lengths at regular intervals.
Reference: [Lee93] <author> E. Lee, R. Katz, </author> <title> "An Analytic Performance Model of Disk Arrays", </title> <booktitle> ACM Sigmetrics Conference, </booktitle> <month> May </month> <year> 1993, </year> <pages> pp. 98-109. </pages>
Reference-contexts: a fixed per-request seek time. -1.0 indicates that the single-cylinder seek time, the average seek time and the full-strobe seek time parameters should be used to compute the simulated seek time via linear interpolation. -2.0 indicates that the same three parameters should be used with the seek equation described in <ref> [Lee93] </ref>: seekT ime (x) = ( a x 1 + b (x 1) + c : if x &gt; 0 ; where x is the seek distance in cylinders, a = (10minSeek + 15avgSeek 5maxSeek)=(3 p numCyl); b = (7minSeek 15avgSeek + 8maxSeek)=(3numCyl); and c = minSeek: -3.0 indicates that the
Reference: [NCR89] <author> NCR Corporation, </author> <title> "NCR 53C700 SCSI I/O Processor Programmer's Guide", </title> <year> 1989. </year>
Reference: [NCR90] <author> NCR Corporation, </author> <title> "Using the 53C700 SCSI I/O Processor", </title> <journal> SCSI Engineering Notes, </journal> <volume> No. 822, Rev. 2.5, Part No. </volume> <pages> 609-3400634, </pages> <month> February </month> <year> 1990. </year>
Reference: [NCR91] <institution> NCR Corporation, </institution> <note> "Class 3433 and 3434 Technical Reference", Document No. D2-0344-A, </note> <month> May </month> <year> 1991. </year>
Reference: [Otoole94] <author> J. O'Toole, L. Shrira, </author> <title> "Opportunistic Log: Efficient Installation Reads in a Reliable Storage Server", </title> <booktitle> USENIX Symposium on Operating Systems Design and Implementation (OSDI), </booktitle> <month> November </month> <year> 1994, </year> <pages> pp. 39-48. </pages>
Reference-contexts: The value must divide the cache line size evenly. Higher values (i.e., coarser granularities) can result in increased numbers of installation reads (i.e., fill requests required to complete partial-line writes <ref> [Otoole94] </ref>). Cache lock granularity: Integer [positive 512B blocks] specifying the number of blocks covered by each lock. The value must divide the cache line size evenly. Higher values (i.e., coarser granularities) can lead to increased lock contention. <p> Controller #X cache fills (write): the number of cache fill accesses (i.e., installation reads <ref> [Otoole94] </ref>) that were required to complete write requests to controller X, followed by the fraction of all requests that require an installation read and the fraction of all write requests that require an installation read.
Reference: [Ousterhout85] <author> J. Ousterhout, H. Da Costa, D. Harrison, J. Kunze, M. Kupfer, J. Thompson, </author> <title> "A Trace-Driven Analysis of the UNIX 4.2 BSD File System", </title> <booktitle> ACM Symposium on Operating System Principles, </booktitle> <year> 1985, </year> <pages> pp. 15-24. </pages>
Reference: [Rosenblum95] <author> M. Rosenblum, S. Herrod, E. Witchel, A. Gupta, </author> <title> "Complete Computer Simulation: The SimOS Approach", </title> <journal> IEEE Journal of Parallel and Distributed Technology, </journal> <month> Winter </month> <year> 1995, </year> <pages> pp. 34-43. </pages>
Reference-contexts: DiskSim was originally part of a larger, system-level model [Ganger93, Ganger95] that modeled each request's interactions with executing processes, but has been separated out for public dissemination. 1 As a result, it can be integrated into full system simulators (e.g., simulators like SimOS <ref> [Rosenblum95] </ref>) with little difficulty. 1 The system-level model includes several portions of a proprietary OS, allowing it to achieve a close match to the real system behavior [Ganger95] but also preventing it from being publicly released. 1 1.2 What DiskSim does not do DiskSim, by itself, simulates and reports on only
Reference: [Ruemmler93] <author> C. Ruemmler, J. Wilkes, </author> <title> "UNIX Disk Access Patterns", </title> <booktitle> Winter USENIX Conference, </booktitle> <month> January </month> <year> 1993, </year> <pages> pp. 405-420. </pages>
Reference-contexts: The DiskSim 1.0 distribution supports the default format ("ascii"), a validation trace format ("validate"), the raw format ("raw") of the disk request traces described in [Ganger93, Ganger93a], and the raw format ("hpl", or "hpl2" if the trace file header has been stripped) of the disk request traces described in <ref> [Ruemmler93] </ref>. 4.1.1 Default format The default input format is a simple ASCII stream (or file), where each line contains values for five parameters (separated by white space) describing a single disk request. The five parameters are: 1. <p> If synthetic generation is used, then statistics for the simple system-level model are reported (section 5.2.1). If a validation trace is used, then statistics about the behavior measured for the real disk are reported (section 5.2.2). If the traces described in <ref> [Ruemmler93] </ref> (referred to in DiskSim as "HPL" traces) are used, then statistics about performance observed for the traced system are reported (section 5.2.3).
Reference: [Ruemmler94] <author> C. Ruemmler, J. Wilkes, </author> <title> "An Introduction to Disk Drive Modeling", </title> <journal> IEEE Computer, </journal> <volume> Vol. 27, No. 3, </volume> <month> March </month> <year> 1994, </year> <pages> pp. 17-28. </pages>
Reference-contexts: In particular, the disk module (which is extremely detailed) has been carefully validated against five different disk drives from three different manufacturers. The accuracy demonstrated far exceeds that of any other disk simulator known to the authors (e.g., see <ref> [Ruemmler94] </ref>). DiskSim can be driven by externally-provided I/O request traces or internally-generated synthetic workloads. Several trace formats have been used and new ones can be easily added. <p> : if x &gt; 0 ; where x is the seek distance in cylinders, a = (10minSeek + 15avgSeek 5maxSeek)=(3 p numCyl); b = (7minSeek 15avgSeek + 8maxSeek)=(3numCyl); and c = minSeek: -3.0 indicates that the six-value "HPL" parameter (see below) should be used with the seek equation described in <ref> [Ruemmler94] </ref>. -4.0 indicates that the six-value "HPL" parameter (see below) should be used with the seek equation described in [Ruemmler94] for all seeks greater than 10 cylinders in length. <p> 5maxSeek)=(3 p numCyl); b = (7minSeek 15avgSeek + 8maxSeek)=(3numCyl); and c = minSeek: -3.0 indicates that the six-value "HPL" parameter (see below) should be used with the seek equation described in <ref> [Ruemmler94] </ref>. -4.0 indicates that the six-value "HPL" parameter (see below) should be used with the seek equation described in [Ruemmler94] for all seeks greater than 10 cylinders in length. <p> As this parameter implies, the seek times computed using the above parameter values are for read access. HPL seek equation values: Six Integers specifying the variables V 1 through V 6 of the seek equation described in <ref> [Ruemmler94] </ref>: Seek distance Seek time 1 cylinder V 6 &lt;V 1 cylinders V 2 + V 3 * p dist &gt;=V 1 cylinders V 4 + V 5 * dist , where dist is the seek distance in cylinders. <p> match to within 0.8% for all validation runs. (The bus, controller and device driver modules have also been validated as part of a more comprehensive, system-level simulation environment [Ganger95a].) Greater insight into the validity of a storage subsystem model can be gained by comparing measured and simulated response time distributions <ref> [Ruemmler94] </ref>. Figures 1 and 2 show distributions of measured and simulated response times for a sample validation workload of 10,000 requests. Ruemmler and Wilkes define the root mean square horizontal distance between the two distribution curves as a demerit figure for disk model calibration.
Reference: [Satya86] <author> M. Satyanarayanan, </author> <title> Modeling Storage Systems, </title> <publisher> UMI Research Press, </publisher> <address> Ann Arbor, MI, </address> <year> 1986. </year>
Reference-contexts: The separation of component definitions and their interconnections greatly reduces the effort required to develop and integrate new components as well as the effort required to understand and modify the existing components <ref> [Satya86] </ref>. This is followed by brief sections that specify which disk drives (if any) should be rotationally synchronized with each other and which disk drives should be part of particular disk array data organizations.
Reference: [Seagate92] <author> Seagate Technology, Inc., </author> <title> "SCSI Interface Specification, Small Computer System Interface (SCSI), Elite Product Family", Document Number 64721702, Revision D, </title> <month> March </month> <year> 1992. </year> <title> [Seagate92a] eagate Technology, Inc., "Seagate Product Specification, ST41600N and ST41601N Elite Disc Drive, SCSI Interface", Document Number 64403103, Revision G, </title>
Reference-contexts: Time (ms) 0.0 0.4 0.8 Fraction of Requests Measured Simulated (c) HP C2490A (d) HP C3323A validation runs are 0.19 ms, 0.075 ms, 0.26 ms and 0.32 ms, respectively (or 1.2%, 0.5%, 2.0% and 1.9% of the corresponding mean response times). drives can be found in table 1 and in <ref> [Seagate92, Seagate92a, HP93, HP94, Worthington96] </ref>.
Reference: [Thekkath94] <author> C. Thekkath, J. Wilkes, E. Lazowska, </author> <title> "Techniques for File System Simulation", </title> <journal> Software Practice and Experience, </journal> <volume> Vol. 24, No. 11, </volume> <month> November </month> <year> 1994, </year> <pages> pp. 981-999. </pages>
Reference: [Worthington94] <author> B. Worthington, G. Ganger, Y. Patt, </author> <title> "Scheduling Algorithms for Modern Disk Drives", </title> <booktitle> ACM SIGMETRICS Conference, </booktitle> <month> May </month> <year> 1994, </year> <pages> pp. 241-251. </pages>
Reference-contexts: Some of the component modules are highly detailed (e.g., the disk module), and the individual components can be configured and interconnected in a variety of ways. DiskSim has been used in a variety of published studies (and several unpublished studies) to understand modern storage subsystem performance <ref> [Ganger93a, Worthington94] </ref>, to understand how storage performance relates to overall system performance [Ganger93, Ganger95, Ganger95a], and to evaluate new storage subsystem architectures [Worthington95a]. DiskSim has been validated both as part of a more comprehensive system-level model [Ganger93, Ganger95a] and as a standalone subsystem [Worthington94, Worthington95]. <p> DiskSim has been validated both as part of a more comprehensive system-level model [Ganger93, Ganger95a] and as a standalone subsystem <ref> [Worthington94, Worthington95] </ref>. In particular, the disk module (which is extremely detailed) has been carefully validated against five different disk drives from three different manufacturers. The accuracy demonstrated far exceeds that of any other disk simulator known to the authors (e.g., see [Ruemmler94]). <p> Section 4 describes how to provide an input workload of I/O requests to DiskSim options include external traces, internally-generated synthetic workloads, and interactions with a larger simulation environment. Section 5 describes the contents of the output file. Section 6 provides validation data (all of which has been published previously <ref> [Worthington94, Worthington95, Ganger95a] </ref>) showing that DiskSim accurately models the behavior of several high-performance disk drives produced in the early 1990's. This manual does not provide details about DiskSim's internals. <p> For smaller seeks, use the 10-value "First seeks" parameter (see below) as in <ref> [Worthington94] </ref>. -5.0 indicates that a more complete seek curve (provided in a separate file) should be used, with linear interpolation used to compute the seek time for unspecified distances. Single cylinder seek time: Float [nonnegative milliseconds] specifying the time necessary to seek to an adjacent cylinder. <p> A large set of algorithms have been implemented, ranging from common choices like First-Come-First-Served (FCFS) and Shortest-Seek-Time-First (SSTF) to new algorithms like Shortest-Positioning-(w/Cache)- Time-First (described in <ref> [Worthington94] </ref>). The full list of mappings from values to corresponding algorithms can be found at the top of the source file named "disksim ioqueue.c". <p> Characteristics of the HP C2247A can be found in table 1 and in <ref> [HP92, Worthington94] </ref>.
Reference: [Worthington95] <author> B. Worthington, G. Ganger, Y. Patt, J. Wilkes, </author> <title> "On-Line Extraction of SCSI Disk Drive Parameters", </title> <booktitle> ACM SIGMETRICS Conference, </booktitle> <month> May </month> <year> 1995, </year> <pages> pp. 146-156. </pages>
Reference-contexts: DiskSim has been validated both as part of a more comprehensive system-level model [Ganger93, Ganger95a] and as a standalone subsystem <ref> [Worthington94, Worthington95] </ref>. In particular, the disk module (which is extremely detailed) has been carefully validated against five different disk drives from three different manufacturers. The accuracy demonstrated far exceeds that of any other disk simulator known to the authors (e.g., see [Ruemmler94]). <p> Section 4 describes how to provide an input workload of I/O requests to DiskSim options include external traces, internally-generated synthetic workloads, and interactions with a larger simulation environment. Section 5 describes the contents of the output file. Section 6 provides validation data (all of which has been published previously <ref> [Worthington94, Worthington95, Ganger95a] </ref>) showing that DiskSim accurately models the behavior of several high-performance disk drives produced in the early 1990's. This manual does not provide details about DiskSim's internals. <p> The following six parameters specify per-request command processing overheads that are applied after the request arrives at the disk and before any corresponding bus or read/write head activity is initiated. Values for these parameters can be determined empirically (see <ref> [Worthington95] </ref>) or via some form of documentation (e.g., technical manual or disk descriptor file). An additional fifteen parameters are included for use in high-precision disk simulation. <p> The extremely close match shown in figure 1 was realized by measuring parameter values directly with a logic analyzer attached to the SCSI bus. The configuration values for the other four disks were obtained with an automatic (software) extraction tool (described in <ref> [Worthington95] </ref>). While still accurate and much less time-consuming, these values are not quite as precise as those obtained with the logic analyzer.
Reference: [Worthington95a] <author> B. Worthington, </author> <title> "Aggressive Centralized and Distributed Scheduling of Disk Requests", </title> <type> Ph.D. Dissertation, </type> <institution> CSE-TR-244-95, University of Michigan, </institution> <address> Ann Arbor, </address> <month> June </month> <year> 1995. </year>
Reference-contexts: DiskSim has been used in a variety of published studies (and several unpublished studies) to understand modern storage subsystem performance [Ganger93a, Worthington94], to understand how storage performance relates to overall system performance [Ganger93, Ganger95, Ganger95a], and to evaluate new storage subsystem architectures <ref> [Worthington95a] </ref>. DiskSim has been validated both as part of a more comprehensive system-level model [Ganger93, Ganger95a] and as a standalone subsystem [Worthington94, Worthington95]. In particular, the disk module (which is extremely detailed) has been carefully validated against five different disk drives from three different manufacturers. <p> This value is used by scheduling algorithms that select the order of request service based (at least in part) on expected positioning delays. Sequential stream scheme: Integer comprising a Boolean Bitfield specifying the type of sequential stream detection and/or request concatenation performed by the scheduler (see <ref> [Worthington95a] </ref> for additional details). Bit 0 indicates whether or not sequential read requests are concatenated by the scheduler. Bit 1 indicates whether or not sequential write requests are concatenated by the scheduler. Bit 2 indicates whether or not sequential read requests are always scheduled together.
Reference: [Worthington96] <author> B. Worthington, G. Ganger, Y. Patt, J. Wilkes, </author> <title> "On-Line Extraction of SCSI Disk Drive Parameters", </title> <type> Technical Report, </type> <institution> University of Michigan, </institution> <address> Ann Arbor, </address> <year> 1996, </year> <booktitle> in progress. </booktitle> <pages> 53 </pages>
Reference-contexts: Time (ms) 0.0 0.4 0.8 Fraction of Requests Measured Simulated (c) HP C2490A (d) HP C3323A validation runs are 0.19 ms, 0.075 ms, 0.26 ms and 0.32 ms, respectively (or 1.2%, 0.5%, 2.0% and 1.9% of the corresponding mean response times). drives can be found in table 1 and in <ref> [Seagate92, Seagate92a, HP93, HP94, Worthington96] </ref>.
References-found: 28

