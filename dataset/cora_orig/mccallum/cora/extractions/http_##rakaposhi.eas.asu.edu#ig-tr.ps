URL: http://rakaposhi.eas.asu.edu/ig-tr.ps
Refering-URL: http://rakaposhi.eas.asu.edu/yochan.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Planning for Information Gathering: A Tutorial Survey  
Author: Eric Lambrecht Subbarao Kambhampati 
Date: 96-017; May, 1997  
Address: Tempe, AZ 85287  
Affiliation: Department of Computer Science and Engineering Arizona State University  
Pubnum: ASU CSE Technical Report  
Abstract: We discuss the problem of information gathering, which is that of integrating multiple heterogeneous information sources so they appear as a single information source that a user can pose queries on. We characterize information gathering as being made up of two subproblems: query planning and plan execution. Query planning is the process of searching through the space of rewrites of the original query to find rewrites containing only queries on available information sources. Query execution is the process of executing those queries and dealing with execution failure. We relate this general view of information gathering with various information gathering systems, including the Information Manifold, SAGE, Occam/Razor, and TSIMMIS.
Abstract-found: 1
Intro-found: 1
Reference: <institution> References </institution>
Reference: [Ambros-Ingerson & Steel, 88] <author> J. Ambros-Ingerson and S. Steel. </author> <title> Integrating planning, execution and monitoring. </title> <booktitle> In Proc. 7th National Conf. on AI. </booktitle> <year> 1988. </year>
Reference: [Arens et al. 96] <author> Y. Arens, C. A. Knoblock, W. Shen. </author> <title> Query Reformulation for Dynamic Information Integration. </title> <note> To appear in Journal of Intelligent Information Systems, </note> <institution> Boston, </institution> <address> MA, </address> <year> 1996. </year>
Reference-contexts: Razor continues to use LCW statements to prune plans, and [Friedman et al. 97] is the first paper to discuss making use of pairwise subsumption LCW statements. 5.2 SAGE The Sage system is developed by Knoblock and his co-workers <ref> [Arens et al. 96] </ref>, and was originally intended to be a query planner for the SIMS project, that deals with heterogeneous distributed databases. Sage assumes information source descriptions are complete, and that no source has query constraints. Sage casts the information gathering problem as a query reformulation problem.
Reference: [Duschka 96] <author> Oliver M. Duschka. </author> <title> Generating Complete Query Plans Given Approximate Descriptions of Content Providers. </title> <type> Stanford technical report, </type> <year> 1996. </year>
Reference-contexts: Not much has been published about the inner workings of the system other than [Duschka, Genesereth 97]. The source inversion method discussed in this paper was first published by Duschka (a member of the Infomaster project) in <ref> [Duschka 96] </ref> and later in [Duschka & Genesereth 97], but they apparently are not used by the Infomaster system. 5.5 XII and Planning with Incomplete Information The XII [Golden et al. 96] is a general-purpose planner which was originally designed to help an autonomous agent plan in the presence of incomplete
Reference: [Duschka 97] <author> Oliver M. Duschka. </author> <title> Query Optimization Using Local Completeness. </title> <booktitle> Proceedings of AAAI, </booktitle> <year> 1997. </year>
Reference-contexts: Checking to see if the information produced by plan A subsumes the information produced by plan B is intuitively merely a process of finding a containment mapping from the LCW statement for A to the expansion of B. This exact procedure cannot be used, for reasons pointed out in <ref> [Duschka 97] </ref>, but a slight variant of it can. Given some plan A, let A [s 7! s^v] be the result of replacing every information source relation s i in the body of A with the conjunction of s i and the body of its view.
Reference: [Duschka, Genesereth 97] <author> Oliver M. Duschka and Michael R. Genesereth. </author> <title> Query Planning In Infomaster. </title> <booktitle> Proceedings of the Twelfth Annual ACM Symposium on Applied Computing, </booktitle> <month> February </month> <year> 1997. </year>
Reference-contexts: Not much has been published about the inner workings of the system other than <ref> [Duschka, Genesereth 97] </ref>.
Reference: [Duschka & Genesereth 97] <author> Oliver M. Duschka and Michael R. Genesereth. </author> <title> Answering Recursive Queries Using Views. </title> <booktitle> Proceedings of AAAI, </booktitle> <year> 1997. </year>
Reference-contexts: Pruning was done through the use of LCW statements, and multiple plans were merged together to more efficiently gather information. The current version of Razor generates all its own plans apparently using the source inversion techniques <ref> [Duschka & Genesereth 97] </ref> described in this paper. <p> Not much has been published about the inner workings of the system other than [Duschka, Genesereth 97]. The source inversion method discussed in this paper was first published by Duschka (a member of the Infomaster project) in [Duschka 96] and later in <ref> [Duschka & Genesereth 97] </ref>, but they apparently are not used by the Infomaster system. 5.5 XII and Planning with Incomplete Information The XII [Golden et al. 96] is a general-purpose planner which was originally designed to help an autonomous agent plan in the presence of incomplete information.
Reference: [Duschka & Levy 97] <author> Oliver M. Duschka and Alon Levy. </author> <title> Recursive plans for information gathering. </title> <booktitle> Proceedings of IJCAI, </booktitle> <year> 1997. </year>
Reference: [Etzioni et al. 97] <author> O. Etzioni, K. Golden and D. Weld. </author> <title> Sound and efficient closed-world reasoning for planning. </title> <booktitle> Artificial Intelligence, </booktitle> <pages> 89(1-2), 113-148. 18 </pages>
Reference: [Etzioni et al. 96] <author> O. Etzioni, S. Hanks, T. Jiang, R. M. Karp, O. Madani, and O. Waarts. </author> <title> Efficient Information Gathering on the Internet. </title> <booktitle> Proceedings of the IEEE Symposium on Foundations of Computer Science (FOCS), </booktitle> <year> 1996. </year>
Reference-contexts: The cost may involve the time needed to answer the query and return the results over a network, or it might be actual cost, where the owner of the information gatherer must pay money for an answer to the query. Several variants of this problem are explored in <ref> [Etzioni et al. 96] </ref>. In the case that a plan fails to execute because one or more information sources don't provide an answer, the executor might mark the information source as no longer functioning, and ask for a new plan from the query planner.
Reference: [Friedman et al. 97] <author> Marc Friedman, Daniel S. Weld. </author> <title> Efficiently Executing Information-Gathering Plans. </title> <booktitle> Submitted to International Joint Conference on AI (IJ-CAI), </booktitle> <year> 1997. </year>
Reference-contexts: The current version of Razor generates all its own plans apparently using the source inversion techniques [Duschka & Genesereth 97] described in this paper. Razor continues to use LCW statements to prune plans, and <ref> [Friedman et al. 97] </ref> is the first paper to discuss making use of pairwise subsumption LCW statements. 5.2 SAGE The Sage system is developed by Knoblock and his co-workers [Arens et al. 96], and was originally intended to be a query planner for the SIMS project, that deals with heterogeneous distributed
Reference: [Golden et al. 96] <author> Keith Golden, Daniel S. Weld and Oren Etzioni. </author> <title> Planning with Execution and Incomplete Information. </title> <journal> UW CSE TR 96-01-09. ftp.cs.washington.edu/pub/ai/tr-96-01-09.ps.gz </journal>
Reference-contexts: The source inversion method discussed in this paper was first published by Duschka (a member of the Infomaster project) in [Duschka 96] and later in [Duschka & Genesereth 97], but they apparently are not used by the Infomaster system. 5.5 XII and Planning with Incomplete Information The XII <ref> [Golden et al. 96] </ref> is a general-purpose planner which was originally designed to help an autonomous agent plan in the presence of incomplete information. Other planners of this genre include Cassandra [?] and IPEM [?]. XII can handle both "causative" goals and "knowledge/information" goals.
Reference: [Kwok & Weld 96] <author> Chung T. Kwok and Daniel S. Weld. </author> <note> Planning to Gather Information. </note> <institution> University of Washington technical report UW-CSE-96-01-04, </institution> <year> 1996. </year>
Reference: [Levy 96] <author> Alon Y. Levy. </author> <title> Obtaining Complete Answers from Incomplete Databases. </title> <booktitle> Proceedings of the 22nd VLDB Conference, </booktitle> <address> Mumbai (Bombay), India, </address> <year> 1996. </year>
Reference: [Levy et al. 95] <author> A. Levy, A. Mendelzon, Y. Sagiv, and D. Srivastava. </author> <title> Answering queries using views. </title> <booktitle> Proceedings of the 22nd VLDB Conference, </booktitle> <address> Mumbai (Bombay), India, </address> <year> 1996. </year>
Reference: [Levy et al. 96] <author> Alon Y. Levy, Anand Rajaraman, and Joann J. Ordille. </author> <title> Querying Heterogeneous Information Sources Using Source Descriptions. </title> <booktitle> Proceedings of the 22nd VLDB Conference, </booktitle> <address> Mumbai (Bombay), India, </address> <year> 1996. </year>
Reference-contexts: We base our dicussion here on the latest published account of the system <ref> [Levy et al. 96] </ref>. IM generates plans under the assumption of incomplete sources without query constraints, then it checks to see if the generated plan can be executed on information sources with query constraints. If the plan cannot be executed, it is thrown away and no plan is found.
Reference: [Pryor & Collins, 96] <author> Pryor, L. and Collins, G. </author> <title> Planning for Contingencies: A Decision-based Approach, </title> <booktitle> Volume 4, </booktitle> <pages> pages 287-339. </pages>
Reference: [Rajaraman et al. 95] <author> Anand Rajaraman, Yehoshua Sagiv, and Jeffry D. Ullman. </author> <title> Answering Queries Using Templates With Binding Patterns (Extended Abstract) Proceedings of Principles of Database Systems (PODS), </title> <year> 1995. </year>
Reference: [Ullman 89] <author> Jeffrey D. Ullman. </author> <title> Principles of Database and Knowledge-base Systems, Volumes I & II. </title> <publisher> Computer Science Press, </publisher> <address> Rockville MD, </address> <year> 1989. </year>
Reference: [Ullman 97] <author> Jeffrey D. Ullman. </author> <title> Information Integration Using Logical Views. </title> <booktitle> Invited talk at the International Conference on Database Theory, Delphi, </booktitle> <address> Greece, </address> <year> 1997. </year>
Reference-contexts: Rather, the project is concerned with joining a static set of two or more information sources together and precomputing all the possible 17 queries that can be answered by this group of information sources. In <ref> [Ullman 97] </ref>, Jeffry Ullman compares TSIMMIS with the Information Manifold. 6 Summary This paper described the information gathering problem, which is that of integrating a set of autonomous information sources together so they can be queried as if they were a single information source.
References-found: 20

