URL: http://www.icsi.berkeley.edu/~yairb/pubs/BCI-migration-RTS.ps
Refering-URL: http://www.icsi.berkeley.edu/~yairb/
Root-URL: http://www.icsi.berkeley.edu
Email: e-mail: yairb@icsi.berkeley.edu  e-mail: moses@theory.stanford.edu  e-mail: indyk@theory.stanford.edu  
Title: On Page Migration and Other Relaxed Task Systems migration problems are concerned with a dilemma
Author: Yair Bartal Moses Charikar Piotr Indyk 
Affiliation: International Computer Science Institute, Berkeley.  Department of Computer Science, Stanford University.  Department of Computer Science, Stanford University.  
Note: The page  Research supported in part by the Rothschild Postdoctoral fellowship and by the National Science Foundation operating grants CCR-9304722 and NCR-9416101.  Research supported in part by Stanford School of Engineering Groswith Fellowship, and by NSF Award CCR-9357849, with matching funds from IBM, Mitsubishi, Schlumberger Foundation, Shell Foundation, and Xerox Corporation.  Research supported by NSF Award CCR-9357849, with matching funds from IBM, Mitsubishi, Schlumberger Foundation, Shell Foundation, and Xerox Corporation.  
Abstract: This paper is concerned with the page migration (or file migration) problem [BS89] as part of a large class of on-line problems. The page migration problem deals with the management of pages residing in a network of processors. In the classical problem there is only one copy of each page which is accessed by different processors over time. The page is allowed to be migrated between processors. However a migration incurs higher communication cost than an access (proportionally to the page size). The problem is that of deciding when and where to migrate the page in order to lower access costs. A more general setting is the k-page migration where we wish to maintain k copies of the page. We deal with the relaxed task systems model which captures a large class of problems of this type, that can be described as the generalization of some original task system problem [BLS87]. Given a c-competitive algorithm for a task system we show how to obtain a deterministic O(c 2 ) and randomized O(c) competitive algorithms for the corresponding relaxed task system. The result implies first deterministic algorithms for k-page migration by using k-server [MMS88] algorithms, and for network leasing by using generalized Steiner tree algorithms [AAB96], as well as providing solutions for natural generalizations of other problems (e.g. storage rearrangement [FMRW95]). We further study some special cases of the k-page migration problem and get optimal deterministic algorithms. For the classical page migration problem we present a deterministic algorithm that achieves a competitive ratio of ~ 4:086, improving upon the previously best competitive ratio of 7 [ABF93a]. (The current lower bound on the problem is ~ 3:148 [CLRW93].) 
Abstract-found: 1
Intro-found: 1
Reference: [AAB96] <author> B. Awerbuch, Y. Azar, and Y. Bartal. </author> <title> On-line Generalized Steiner Problem. </title> <booktitle> In Proc. of the 7th Ann. ACM-SIAM Symp. on Discrete Algorithms, </booktitle> <pages> pages 68-74, </pages> <month> January </month> <year> 1996. </year>
Reference-contexts: The file replication [BS89] and network leasing <ref> [AAB96] </ref> problems have a similar flavor. In the network leasing problem for example we need to establish communication paths between pairs of processors. However edge links can be either leased or bought, and we need to decide when edge links should be bought. <p> In general however, as well as in the case of the problems of [FMRW95] and [AKP92] the original task system will not be necessarily a forcing task system. Our definition of relaxed task systems is a generalization of the definition of <ref> [AAB96] </ref> who define it only in the context of forcing task systems. They also provide randomized algorithms against adaptive on-line adversaries in that case. We have the following results for the general relaxed task systems model: * Let P be a metrical task system.
Reference: [ABF93a] <author> B. Awerbuch, Y. Bartal, and A. Fiat. </author> <title> Competitive Distributed File Allocation. </title> <booktitle> In Proc. 25th ACM Symp. on Theory of Computing, </booktitle> <pages> pages 164-173, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: Theoretical work on page migration, making no such assumptions, was initiated by Black and Sleator [BS89], comparing the cost of an on-line page migration algorithm to the cost of an optimal algorithm (known as competitive analysis [ST85]). Page migration problems have been further studied in <ref> [West91, BFR92, CLRW93, ABF93a, ABF93b, LRWY94, AK95, ABF96, Bart96] </ref>. We study this problem and the more general k-page migration where there may be k mirror-replicas of the page. <p> Optimal 2 + 1=(2D) randomized file migration algorithms for uniform networks are given in [LRWY94] and for trees in [CLRW93]. Chrobak et. al. [CLRW93] also prove a lower bound greater than 3 in some network topology, specifically 85=27 3:148. Awerbuch, Bartal and Fiat <ref> [ABF93a] </ref> give the first deterministic page migration algorithm. This algorithm achieves a competitive ratio of 7 which is the best known prior to this work. We give a deterministic page migration algorithm achieving a competitive ratio of ~ 4:086. The algorithm and analysis are described in Section 3.
Reference: [ABF93b] <author> B. Awerbuch, Y. Bartal, and A. Fiat. </author> <title> Heat & Dump: Randomized competitive distributed paging. </title> <booktitle> In Proc. 34rd IEEE Symp. on Foundations of Computer Science. IEEE, pages 22-31,November 1993. </booktitle>
Reference-contexts: Theoretical work on page migration, making no such assumptions, was initiated by Black and Sleator [BS89], comparing the cost of an on-line page migration algorithm to the cost of an optimal algorithm (known as competitive analysis [ST85]). Page migration problems have been further studied in <ref> [West91, BFR92, CLRW93, ABF93a, ABF93b, LRWY94, AK95, ABF96, Bart96] </ref>. We study this problem and the more general k-page migration where there may be k mirror-replicas of the page.
Reference: [ABF96] <author> B. Awerbuch, Y. Bartal, and A. Fiat. </author> <title> Distributed Paging for General Networks. </title> <booktitle> In Proc. of the 7th Ann. ACM-SIAM Symp. on Discrete Algorithms, </booktitle> <pages> pages 574-583, </pages> <month> January </month> <year> 1996. </year>
Reference-contexts: Theoretical work on page migration, making no such assumptions, was initiated by Black and Sleator [BS89], comparing the cost of an on-line page migration algorithm to the cost of an optimal algorithm (known as competitive analysis [ST85]). Page migration problems have been further studied in <ref> [West91, BFR92, CLRW93, ABF93a, ABF93b, LRWY94, AK95, ABF96, Bart96] </ref>. We study this problem and the more general k-page migration where there may be k mirror-replicas of the page.
Reference: [AK95] <author> S. Albers and H. Koga. </author> <title> Page Migration with Limited Local Memory Capacity. </title> <booktitle> In Proc. of the 4th Workshop on Algorithms and Data Structures, </booktitle> , <month> August </month> <year> 1995. </year>
Reference-contexts: Theoretical work on page migration, making no such assumptions, was initiated by Black and Sleator [BS89], comparing the cost of an on-line page migration algorithm to the cost of an optimal algorithm (known as competitive analysis [ST85]). Page migration problems have been further studied in <ref> [West91, BFR92, CLRW93, ABF93a, ABF93b, LRWY94, AK95, ABF96, Bart96] </ref>. We study this problem and the more general k-page migration where there may be k mirror-replicas of the page.
Reference: [AKP92] <author> B. Awerbuch, S. Kutten, and D. Peleg. </author> <title> Competitive Distributed Job Scheduling. </title> <booktitle> In Proc. of the 24th Ann. ACM Symp. on Theory of Computing, </booktitle> <pages> pages 571-580, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: For such problems our results yield algorithms for the 1 rent-or-buy" problem out of algorithms for the corresponding buy-only" problem. Other examples for applications are the generalizations of the storage rearrangement problem [FMRW95] and distributed job scheduling <ref> [AKP92] </ref> to the case where a configuration change is D times larger than the distance (note that in both these problems this is a natural parameter). 1.1 Relaxed Task Systems In this section we provide formal definitions of relaxed task systems and description of our results. <p> The k-server, Steiner tree, and generalized Steiner tree problems can all be formulated as forcing task systems. Their corresponding relaxed task systems are the k-page migration, file replication, and network leasing problems, respectively. In general however, as well as in the case of the problems of [FMRW95] and <ref> [AKP92] </ref> the original task system will not be necessarily a forcing task system. Our definition of relaxed task systems is a generalization of the definition of [AAB96] who define it only in the context of forcing task systems. They also provide randomized algorithms against adaptive on-line adversaries in that case.
Reference: [Bart96] <author> Y. Bartal. </author> <title> Probabilistic Approximation of Metric Spaces and its Algorithmic Applications. </title> <booktitle> To appear in Proc. of the 37rd Ann. IEEE Symp. on Foundations of Computer Science, </booktitle> <year> 1996. </year>
Reference-contexts: Theoretical work on page migration, making no such assumptions, was initiated by Black and Sleator [BS89], comparing the cost of an on-line page migration algorithm to the cost of an optimal algorithm (known as competitive analysis [ST85]). Page migration problems have been further studied in <ref> [West91, BFR92, CLRW93, ABF93a, ABF93b, LRWY94, AK95, ABF96, Bart96] </ref>. We study this problem and the more general k-page migration where there may be k mirror-replicas of the page.
Reference: [BFR92] <author> Y. Bartal, A. Fiat, and Y. Rabani. </author> <title> Competitive algorithms for distributed data management. </title> <booktitle> In Proc. 24th ACM Symp. on Theory of Computing, </booktitle> <pages> pages 39-50, </pages> <year> 1992. </year> <note> Also accepted for publication in the STOC 92 special issue Journal of Computer and Systems Sciences, </note> <year> 1993. </year>
Reference-contexts: Theoretical work on page migration, making no such assumptions, was initiated by Black and Sleator [BS89], comparing the cost of an on-line page migration algorithm to the cost of an optimal algorithm (known as competitive analysis [ST85]). Page migration problems have been further studied in <ref> [West91, BFR92, CLRW93, ABF93a, ABF93b, LRWY94, AK95, ABF96, Bart96] </ref>. We study this problem and the more general k-page migration where there may be k mirror-replicas of the page.
Reference: [BLS87] <author> A. Borodin, N. Linial, and M. Saks. </author> <title> An Optimal On-Line Algorithm for Metrical Task Systems. </title> <booktitle> In Proc. of the 19th Ann. ACM Symp on Theory of Computing, </booktitle> <pages> pages 373-382, </pages> <month> May </month> <year> 1987. </year>
Reference-contexts: In this section, we describe optimal or near optimal algorithms for k-page migration on uniform metric spaces and trees. Using techniques very similar to <ref> [MMS88, BLS87] </ref>, we can prove the following lower bound: Theorem 3 The competitive ratio of any algorithm for k-page migration on a discrete metric space with k + 1 points is at least 2k + 1. 4.1 Uniform Metric We present a 2k + 1 competitive algorithm for k-page migration on
Reference: [BS89] <author> D.L. Black and D.D. Sleator. </author> <title> Competitive Algorithms for Replication and Migration Problems. </title> <type> Technical Report CMU-CS-89-201, </type> <institution> Department of Computer Science, Carnegie-Mellon University, </institution> <year> 1989. </year>
Reference-contexts: However all existing heuristics heavily rely on the non-realistic prior knowledge of potential usage patterns of the databases (see the survey paper by Gavish and Sheng [GS90]). Theoretical work on page migration, making no such assumptions, was initiated by Black and Sleator <ref> [BS89] </ref>, comparing the cost of an on-line page migration algorithm to the cost of an optimal algorithm (known as competitive analysis [ST85]). Page migration problems have been further studied in [West91, BFR92, CLRW93, ABF93a, ABF93b, LRWY94, AK95, ABF96, Bart96]. <p> The file replication <ref> [BS89] </ref> and network leasing [AAB96] problems have a similar flavor. In the network leasing problem for example we need to establish communication paths between pairs of processors. However edge links can be either leased or bought, and we need to decide when edge links should be bought. <p> Each of the copies may also be migrated at the a cost of D (the size of the page) times the distance traveled. The problem is to minimize the total access and migration costs. The classical 1-page migration problem was first proposed by Black and Sleator <ref> [BS89] </ref> who give a lower bound of 3 in every network and matching upper bounds for uniform and tree metric spaces. <p> This can be further improved to c (c + 1) for monotonic task systems. This gives a 2-competitive algorithm for the network leasing problem on a uniform metric space. For the page replication problem on a uniform metric, we obtain the 2-competitive algorithm of <ref> [BS89] </ref>. The ratio 2 is optimal for both these problems as there is a matching lower bound even for the 2-point metric space. Better Performance for Specific Cases It is interesting to observe that our method yields known optimal algorithms for some problems. <p> Here, the actual behavior of D-DAlg and D-RAlg is better than our analysis indicates. For the one page migration problem on a uniform metric space, D-DAlg simulates (a slightly modified version of) the Counter algorithm from <ref> [BS89] </ref>, and is hence 3-competitive (the analysis of [BS89] applies almost unchanged). <p> Here, the actual behavior of D-DAlg and D-RAlg is better than our analysis indicates. For the one page migration problem on a uniform metric space, D-DAlg simulates (a slightly modified version of) the Counter algorithm from <ref> [BS89] </ref>, and is hence 3-competitive (the analysis of [BS89] applies almost unchanged).
Reference: [CKPV90] <author> M. Chrobak, H. Karloff, T. Payne, and S. </author> <title> Vishwanathan.New Results on Server Problems. </title> <booktitle> In Proc. 1st ACM-SIAM Symp. on Discrete Algorithms, </booktitle> <pages> pages 291-300, </pages> <month> January </month> <year> 1990. </year>
Reference: [CL91] <author> M. Chrobak and L. Larmore. </author> <title> An Optimal On-Line k-Server Algorithm for Trees. </title> <journal> SIAM Journal of Computing, </journal> <volume> 20 </volume> <pages> 144-148, </pages> <year> 1991. </year>
Reference-contexts: This algorithm is for the discrete version of the problem where servers can only be placed at discrete points (called nodes) on the tree. It is based on the k server algorithm of <ref> [CL91] </ref>. Discrete Fractional Converge (DFC). The algorithm maintains k pairs of servers. Each pair consists of a discrete server and a continuous server. The discrete server is always at a node of the tree, while the continuous server can be on an edge of the tree, between two nodes.
Reference: [CLRW93] <author> M. Chrobak, L. Larmore, N. Reingold, and J. Westbrook. </author> <title> Optimal Multiprocessor Migration Algorithms Using Work Functions. </title> <booktitle> In Proc. of the 4th International Symp. on Algorithms and Computation. Also Lecture Notes in Computer Science, </booktitle> <volume> vol. 762, </volume> <pages> pages 406-415, </pages> <address> Hong Kong, 1993, </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Theoretical work on page migration, making no such assumptions, was initiated by Black and Sleator [BS89], comparing the cost of an on-line page migration algorithm to the cost of an optimal algorithm (known as competitive analysis [ST85]). Page migration problems have been further studied in <ref> [West91, BFR92, CLRW93, ABF93a, ABF93b, LRWY94, AK95, ABF96, Bart96] </ref>. We study this problem and the more general k-page migration where there may be k mirror-replicas of the page. <p> Optimal 2 + 1=(2D) randomized file migration algorithms for uniform networks are given in [LRWY94] and for trees in <ref> [CLRW93] </ref>. Chrobak et. al. [CLRW93] also prove a lower bound greater than 3 in some network topology, specifically 85=27 3:148. Awerbuch, Bartal and Fiat [ABF93a] give the first deterministic page migration algorithm. This algorithm achieves a competitive ratio of 7 which is the best known prior to this work. <p> Optimal 2 + 1=(2D) randomized file migration algorithms for uniform networks are given in [LRWY94] and for trees in <ref> [CLRW93] </ref>. Chrobak et. al. [CLRW93] also prove a lower bound greater than 3 in some network topology, specifically 85=27 3:148. Awerbuch, Bartal and Fiat [ABF93a] give the first deterministic page migration algorithm. This algorithm achieves a competitive ratio of 7 which is the best known prior to this work. <p> For one page migration on a 2-point metric space, a version of D-RAlg simulating 2D algorithms actually simulates an algorithm EDGE <ref> [CLRW93] </ref> which is 2 + 1 2D -competitive. 3 A Better Algorithm for One Page Migration We present an algorithm, Move-To-Local-Min (MTLM) for one page migration. The algorithm operates in phases of length n = cD.
Reference: [FH80] <author> M.L. Fisher and D.S. Hochbaum. </author> <title> Database Location in a Computer Network. </title> <journal> In Journal of the ACM, </journal> <volume> 27(4), </volume> <pages> pages 718-735, </pages> <year> 1980. </year>
Reference-contexts: This is usually the case in most distributed systems allowing data reallocation, since such a setting eliminates the problem of maintaining copy consistency. A great deal of research has concentrated on page migration problems including <ref> [FH80, PT83, TZ84, Hac86, Sheng86, SD89] </ref>. However all existing heuristics heavily rely on the non-realistic prior knowledge of potential usage patterns of the databases (see the survey paper by Gavish and Sheng [GS90]).
Reference: [FKLM + 88] <author> A. Fiat, R.M. Karp, M. Luby, L.A. McGeoch, D.d. Sleator , and N.E. Young. </author> <title> Competitive Paging Algorithms. </title> <type> Technical Report, </type> <institution> Carnegie Mellon University, </institution> <year> 1988. </year>
Reference: [FMRW95] <author> A. Fiat, Y. Mansour, A. Rosen, and O. Waarts. </author> <title> Competitive Access Time via Dynamic Storage Rearrangement. </title> <booktitle> In Proc. of the 36th Ann. IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pages 392-403, </pages> <month> October </month> <year> 1995. </year>
Reference-contexts: For such problems our results yield algorithms for the 1 rent-or-buy" problem out of algorithms for the corresponding buy-only" problem. Other examples for applications are the generalizations of the storage rearrangement problem <ref> [FMRW95] </ref> and distributed job scheduling [AKP92] to the case where a configuration change is D times larger than the distance (note that in both these problems this is a natural parameter). 1.1 Relaxed Task Systems In this section we provide formal definitions of relaxed task systems and description of our results. <p> The k-server, Steiner tree, and generalized Steiner tree problems can all be formulated as forcing task systems. Their corresponding relaxed task systems are the k-page migration, file replication, and network leasing problems, respectively. In general however, as well as in the case of the problems of <ref> [FMRW95] </ref> and [AKP92] the original task system will not be necessarily a forcing task system. Our definition of relaxed task systems is a generalization of the definition of [AAB96] who define it only in the context of forcing task systems.
Reference: [GS90] <author> B. Gavish and O.R.L. Sheng. </author> <title> Dynamic File Migration in Distributed Computer Systems. </title> <journal> In Communications of the ACM, </journal> <volume> 33(2) </volume> <pages> 177-189, </pages> <year> 1990. </year>
Reference-contexts: A great deal of research has concentrated on page migration problems including [FH80, PT83, TZ84, Hac86, Sheng86, SD89]. However all existing heuristics heavily rely on the non-realistic prior knowledge of potential usage patterns of the databases (see the survey paper by Gavish and Sheng <ref> [GS90] </ref>). Theoretical work on page migration, making no such assumptions, was initiated by Black and Sleator [BS89], comparing the cost of an on-line page migration algorithm to the cost of an optimal algorithm (known as competitive analysis [ST85]).
Reference: [Hac86] <editor> File Migration and Process Migration in a Local Area Network. </editor> <booktitle> In Proc. of INFOCOM86, </booktitle> <pages> pages 488-495, </pages> <year> 1986. </year>
Reference-contexts: This is usually the case in most distributed systems allowing data reallocation, since such a setting eliminates the problem of maintaining copy consistency. A great deal of research has concentrated on page migration problems including <ref> [FH80, PT83, TZ84, Hac86, Sheng86, SD89] </ref>. However all existing heuristics heavily rely on the non-realistic prior knowledge of potential usage patterns of the databases (see the survey paper by Gavish and Sheng [GS90]).
Reference: [Kar92] <author> R.M. Karp, </author> <title> On-line Algorithms Versus Off-line Algorithms: How Much is it Worth to Know the Future?. </title> <booktitle> In Proc. World Computer Congress, </booktitle> <year> 1992. </year> <month> 11 </month>
Reference-contexts: A large class of such problems is that of relaxed task systems as defined below. A major subclass would be that of rent-or-buy" problems. The most obvious classical example is the ski-rental problem (see <ref> [Kar92] </ref> for survey) where we need to decide whether to rent or buy ski equipment without knowing ahead how many days of skiing we are going to have, while the cost of buying is D times larger than that of renting.
Reference: [KP94] <author> E. Koutsoupias, and C. Papadimitriou. </author> <title> On the k-Server Conjecture. </title> <booktitle> In Proc. 26th Annual ACM Symp. on Theory of Computing, </booktitle> <pages> pages 507-511, </pages> <year> 1994. </year>
Reference-contexts: The algorithm and analysis are described in Section 3. As mentioned above the general theorem for task systems yields O (k 2 ) competitive algorithms for the k-page migration problem (by using the WFA k-server algorithm <ref> [KP94] </ref>). We give a lower bound of 2k + 1 for the k-page migration problem in any network, and get an optimal algorithm for the uniform network and a nearly-optimal algorithm for trees. <p> The details will appear in the full version of this paper. 4 More on k-Page Migration The (2k 1)-competitive k-server algorithm of <ref> [KP94] </ref> and the results of Section 2 give us a deterministic O (k 2 ) competitive algorithm for k-page migration for general metric spaces. In this section, we describe optimal or near optimal algorithms for k-page migration on uniform metric spaces and trees.
Reference: [LRWY94] <author> C. Lund, N. Reingold, J. Westbrook, and D. Yan. </author> <title> On-Line Distributed Data Management. </title> <booktitle> In Proc. of European Symp. on Algorithms, </booktitle> <year> 1994. </year>
Reference-contexts: Theoretical work on page migration, making no such assumptions, was initiated by Black and Sleator [BS89], comparing the cost of an on-line page migration algorithm to the cost of an optimal algorithm (known as competitive analysis [ST85]). Page migration problems have been further studied in <ref> [West91, BFR92, CLRW93, ABF93a, ABF93b, LRWY94, AK95, ABF96, Bart96] </ref>. We study this problem and the more general k-page migration where there may be k mirror-replicas of the page. <p> Westbrook [West91] gives a randomized 3-competitive algorithm against adaptive on-line adversaries for any network, and an asymptotically (1 + )-competitive randomized algorithm against oblivious adversaries, where 1:62 is the golden ratio. Optimal 2 + 1=(2D) randomized file migration algorithms for uniform networks are given in <ref> [LRWY94] </ref> and for trees in [CLRW93]. Chrobak et. al. [CLRW93] also prove a lower bound greater than 3 in some network topology, specifically 85=27 3:148. Awerbuch, Bartal and Fiat [ABF93a] give the first deterministic page migration algorithm.
Reference: [MMS88] <author> M.S. Manasse, L.A. McGeoch, and D.D. Sleator. </author> <title> Competitive Algorithms for On-Line Problems. </title> <booktitle> In Proc. of the 20th Ann. ACM Symp. on Theory of Computing, </booktitle> <pages> pages 322-333, </pages> <month> May </month> <year> 1988. </year>
Reference-contexts: It is also useful to consider the following type of task systems that include buy-only" type problems: Definition 3 A forcing task system <ref> [MMS88] </ref> task system such that for every request r and every configuration C task (C; r) is either 0 or 1. Thus, for every request r we may associate a set of allowable configurations. <p> In this section, we describe optimal or near optimal algorithms for k-page migration on uniform metric spaces and trees. Using techniques very similar to <ref> [MMS88, BLS87] </ref>, we can prove the following lower bound: Theorem 3 The competitive ratio of any algorithm for k-page migration on a discrete metric space with k + 1 points is at least 2k + 1. 4.1 Uniform Metric We present a 2k + 1 competitive algorithm for k-page migration on
Reference: [PT83] <author> J. Paris and W.F. Tichy. STORK: </author> <title> An Experimental Migrating File System for Computer Networks. </title> <booktitle> In IEEE Infocom, </booktitle> <year> 1983. </year>
Reference-contexts: This is usually the case in most distributed systems allowing data reallocation, since such a setting eliminates the problem of maintaining copy consistency. A great deal of research has concentrated on page migration problems including <ref> [FH80, PT83, TZ84, Hac86, Sheng86, SD89] </ref>. However all existing heuristics heavily rely on the non-realistic prior knowledge of potential usage patterns of the databases (see the survey paper by Gavish and Sheng [GS90]).
Reference: [Sheng86] <author> O.L. Sheng. </author> <title> Models for Dynamic File Migration in Distributed Computer Systems. </title> <type> Ph.D. dissertation. </type>
Reference-contexts: This is usually the case in most distributed systems allowing data reallocation, since such a setting eliminates the problem of maintaining copy consistency. A great deal of research has concentrated on page migration problems including <ref> [FH80, PT83, TZ84, Hac86, Sheng86, SD89] </ref>. However all existing heuristics heavily rely on the non-realistic prior knowledge of potential usage patterns of the databases (see the survey paper by Gavish and Sheng [GS90]).
Reference: [SD89] <author> C. Scheurich and M. Dubois. </author> <title> Dynamic Page Migration in Multiprocessors with Disributed Global Memory. </title> <journal> In IEEE Transactions on Computers, </journal> <volume> 38(8) </volume> <pages> 1154-1163, </pages> <year> 1989. </year>
Reference-contexts: This is usually the case in most distributed systems allowing data reallocation, since such a setting eliminates the problem of maintaining copy consistency. A great deal of research has concentrated on page migration problems including <ref> [FH80, PT83, TZ84, Hac86, Sheng86, SD89] </ref>. However all existing heuristics heavily rely on the non-realistic prior knowledge of potential usage patterns of the databases (see the survey paper by Gavish and Sheng [GS90]).
Reference: [ST85] <author> D. Sleator and R.E. Tarjan. </author> <title> Amortized Efficiency of List Update and Paging Rules. </title> <journal> Communications of ACM , 28(2) </journal> <pages> 202-208, </pages> <year> 1985. </year>
Reference-contexts: Theoretical work on page migration, making no such assumptions, was initiated by Black and Sleator [BS89], comparing the cost of an on-line page migration algorithm to the cost of an optimal algorithm (known as competitive analysis <ref> [ST85] </ref>). Page migration problems have been further studied in [West91, BFR92, CLRW93, ABF93a, ABF93b, LRWY94, AK95, ABF96, Bart96]. We study this problem and the more general k-page migration where there may be k mirror-replicas of the page.
Reference: [TZ84] <author> W. Tichy and R. Zuwang. </author> <title> Towards a Distributed File System. </title> <booktitle> In Proc. of the 1984 USENIX Summer Conf., </booktitle> <pages> pages 87-97, </pages> <year> 1984. </year>
Reference-contexts: This is usually the case in most distributed systems allowing data reallocation, since such a setting eliminates the problem of maintaining copy consistency. A great deal of research has concentrated on page migration problems including <ref> [FH80, PT83, TZ84, Hac86, Sheng86, SD89] </ref>. However all existing heuristics heavily rely on the non-realistic prior knowledge of potential usage patterns of the databases (see the survey paper by Gavish and Sheng [GS90]).
Reference: [West91] <author> J. Westbrook. </author> <title> Randomized Algorithms for Multiprocess or Page Migration. </title> <booktitle> In Proc. of DIMACS Workshop on On-Line Algorithms. </booktitle> <publisher> American Mathematical Society, </publisher> <month> February, </month> <year> 1991. </year> <month> 12 </month>
Reference-contexts: Theoretical work on page migration, making no such assumptions, was initiated by Black and Sleator [BS89], comparing the cost of an on-line page migration algorithm to the cost of an optimal algorithm (known as competitive analysis [ST85]). Page migration problems have been further studied in <ref> [West91, BFR92, CLRW93, ABF93a, ABF93b, LRWY94, AK95, ABF96, Bart96] </ref>. We study this problem and the more general k-page migration where there may be k mirror-replicas of the page. <p> The problem is to minimize the total access and migration costs. The classical 1-page migration problem was first proposed by Black and Sleator [BS89] who give a lower bound of 3 in every network and matching upper bounds for uniform and tree metric spaces. Westbrook <ref> [West91] </ref> gives a randomized 3-competitive algorithm against adaptive on-line adversaries for any network, and an asymptotically (1 + )-competitive randomized algorithm against oblivious adversaries, where 1:62 is the golden ratio. Optimal 2 + 1=(2D) randomized file migration algorithms for uniform networks are given in [LRWY94] and for trees in [CLRW93].
References-found: 28

