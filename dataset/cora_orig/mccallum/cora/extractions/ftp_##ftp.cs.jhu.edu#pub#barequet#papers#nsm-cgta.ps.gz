URL: ftp://ftp.cs.jhu.edu/pub/barequet/papers/nsm-cgta.ps.gz
Refering-URL: http://www.cs.jhu.edu/~barequet/papers.html
Root-URL: http://www.cs.jhu.edu
Title: Partial Surface Matching by Using Directed Footprints  
Author: Gill Barequet Micha Sharir 
Keyword: geometric hashing, computer vision, pattern recognition, partial surface matching.  
Abstract: In this paper we present a new technique for partial surface and volume matching of images in three dimensions. In this problem, we are given two objects in 3-space, each represented as a set of points, scattered uniformly along its boundary or inside its volume. The goal is to find a rigid motion of one object which makes a sufficiently large portion of its boundary lying sufficiently close to a corresponding portion of the boundary of the second object. This is an important problem in pattern recognition and in computer vision, with many industrial, medical, and chemical applications. Our algorithm is based on assigning a directed footprint to every point of the two sets, and locating all the pairs of points (one of each set) whose undirected components of the footprints are sufficiently similar. The algorithm then computes for each such pair of points all the rigid transformations that map the first point to the second, while making the respective direction components of their footprints coincide. A voting scheme is employed for computing transformations which map significantly large number of points of the first set to points of the second set. Experimental results on various examples are presented and show the accurate and robust performance of our algorithm. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <editor> R.A. Abagyan and N.V. Maiorov, </editor> <title> A simple qualitative representation of polypeptide chain folds: Comparison of protein tertiary structures, J. of Biomolecular Structure and Dynamics, </title> <booktitle> 5 (1988), </booktitle> <pages> 1267-1279. </pages>
Reference-contexts: A comparison between these techniques is found in [31]. Many other works have addressed the problem; see [3, 5, 6, 8, 10, 13, 17, 18, 27] for studies in the context of object recognition, and <ref> [1, 12, 14, 20, 22, 24, 26, 28] </ref> for studies in the context of molecular biology. Most of these works have various limitations, some of which are quite severe. They either restrict the shape of the matched objects, or assume that there is no occlusion, or handle only restricted motions.
Reference: [2] <author> T. Abel and T. Maniatis, </author> <title> Gene regulation: </title> <booktitle> Action of leucine zippers, Nature, 341 (1989), </booktitle> <pages> 24-25. </pages>
Reference-contexts: Important applications of molecule docking are the recognition and binding of receptors and ligands, and synthetic drug design. Partial volume matching can also aid in the detection of structural motifs in proteins <ref> [2] </ref>. Yet another motivation is the combination of several snapshots of the same object, taken from different view points, in order to obtain a description of a bigger portion of its boundary. This has obvious industrial, civil and military applications (e.g., decoding of aerial photographs).
Reference: [3] <author> K.S. Arun, T.S. Huang, and S.D. Blostein, </author> <title> Least square fitting of two 3-D point sets, </title> <journal> IEEE Trans. on Pattern Analysis and Machine Intelligence, </journal> <volume> 9 (1987), </volume> <pages> 698-700. </pages>
Reference-contexts: Other methods, which do not rely on the existence of a certain type of features, are pose-clustering [30], alignment [19], and, of course, geometric hashing. A comparison between these techniques is found in [31]. Many other works have addressed the problem; see <ref> [3, 5, 6, 8, 10, 13, 17, 18, 27] </ref> for studies in the context of object recognition, and [1, 12, 14, 20, 22, 24, 26, 28] for studies in the context of molecular biology. Most of these works have various limitations, some of which are quite severe.
Reference: [4] <author> G. Barequet and M. Sharir, </author> <title> Partial surface and volume matching in three dimensions, </title> <journal> IEEE Trans. on Pattern Analysis and Machine Intelligence, </journal> <volume> 19 (1997), </volume> <pages> 929-948. </pages>
Reference-contexts: We provide here only a sketchy review of the extensive existing literature, mostly in computer vision and pattern recognition, on full or partial surface and volume matching. More details can be found in the two comprehensive surveys [7, 11] and in a companion paper <ref> [4] </ref>. Some works (e.g., [9]) depend on the ability to match significant features of the objects, like knobs and holes, whose existence is not usually guaranteed. <p> Our algorithm is more suited however for surface matching, where it is usually easier to generate directed footprints. The work reported here builds upon an earlier algorithm that we have developed in <ref> [4] </ref>. The new algorithm is based on the use of directed footprints, whereas the preceding algorithm used undirected footprints. We will later compare the two solutions and discuss the advantages (and only some disadvantages) of the new technique. Here is a brief overview of our algorithm. <p> The various applications of our algorithm mainly differ in the definition and computation of the footprints. Needless to say, the choice of footprints is a crucial factor that influences the success of our method. Our algorithm (like the previous one <ref> [4] </ref>) bears some resemblance to previous indexing methods that are based on the density of votes in some space. Nevertheless, it does not depend on any correspondence between the two sets of input data points. <p> The paper is organized as follows. In Section 2 we describe the evolution of the algorithm presented in this paper from our first algorithm <ref> [4] </ref>. Section 3 presents an overview of the algorithm (more detailed than the one given above). Section 4 describes in detail the various phases of the algorithm. Section 5 analyzes the complexity of the algorithm. Section 6 presents the experimental results mentioned above. <p> Section 4 describes in detail the various phases of the algorithm. Section 5 analyzes the complexity of the algorithm. Section 6 presents the experimental results mentioned above. We end in Section 7 with some concluding remarks. 2 Directed vs. Undirected Footprints In a companion paper <ref> [4] </ref> we propose another partial matching algorithm between two sets of points which is based on undirected footprints. As in the current algorithm, we locate pairs of points (one of each set) and seek the transformation that maximizes the fit between points of the sets with similar footprints. <p> Since the point footprints are undirected, each pair of points corresponds to a 3-dimensional subspace of rigid transformations (only translations and rotations), which make the two points coincide. The algorithm proposed in <ref> [4] </ref> first guesses a rotation of the second set relative to the first, applies it to the first set, and attempts to find the correct translation (under the assumption that the guess is correct). <p> Then a voting scheme is employed, where each computed translation receives one vote. Assume 5 for the moment that the data are free of noise. Had the guessed rotation been true, all the votes would have been given to the correct translation. We showed in <ref> [4] </ref> that when the guess is incorrect the voting table has a special structure: Let G be the guessed rotation, and let C be the correct rotation. <p> The votes are clustered around some `accumulation point' (the correct translation). When G = C, R becomes the identity rotation, and the whole voting table collapses into one point. We defined in <ref> [4] </ref> a scoring function that measures the density of the voting table that corresponds to each rotation. This score is invariant of the relative translation. Then we developed an iterative mechanism that advances towards the rotation with the maximum score. <p> a scan of the front half of the car, as seen (in this view) from the right behind of the car. (Each quadruple of adjacent points in the grid was connected by an (almost planar) face, in order to produce shaded renderings of the surfaces.) Except the results reported in <ref> [4] </ref>, we had no a priori data (to compare our results with) about the change of the position of the digitizer from the first scan to the second. <p> It turned out to be so robust, that the proximity parameter for the voting mechanism was set to only 1:0. As in <ref> [4] </ref>, we have excluded from the voting list all the points having footprints in the range 170-190 degrees, since false matches between points at nearly flat regions of the surfaces contributed false votes to 13 (a) (b) the voting table. <p> The size of the overlap was reduced tremendously but it still was high enough for identifying the solution of the matching problem. Since roughly 16% of the 19,992 voting pairs were correct (see <ref> [4] </ref>), and the direction resolution was 0:05, we expected the correct solution to receive at most 0:16 19992 =0:05 51 votes. (Some correct pairs of points resulted in erroneous votes because of imprecise directed footprints, and/or because of round-off errors.) The algorithm found the rotation around the direction (0:0; 0:05; 1:0) <p> This result compares well with the result of our previous algorithm (see <ref> [4] </ref>): the rotation by 179.4 degrees about the direction (0:04; 0:05; 1:0), followed by the translation (16; 41; 0). (We point out that the running time of the new algorithm on this example was only 2 seconds, compared with 188 seconds of the old algorithm.) Figures 5 (c,d) show two views <p> 30; 0) Computed Solution Time (Seconds) Case Direction Angle Translation Voting Overhead Total CAD (1:0; 0:0; 0:0) 90.0 (0; 76; 0) 4.27 0.02 4.29 Terrain (0:0; 0:0; 1:0) 90.0 (20; 30; 0) 10.79 0.11 10.90 a The correct solution was not known in this experiment; expected solution was taken from <ref> [4] </ref>. It is not clear which of the two solutions is more "correct". Table 1: Performance of the matching algorithm. 17 7 Conclusion We have proposed in this paper an algorithm for solving the practical problem of partial surface or volume matching between two objects in 3-space. <p> This problem is a basic and important problem in pattern recognition and computer vision, with many industrial, chemical, and medical applications. Our algorithm uses a mixture of undirected and directed footprints, attached to the data points, and is an evolution of a previous algorithm of ours <ref> [4] </ref> that used only undi-rected footprints. In the new scheme, each pair of matched points (one of each set) votes for all the rigid transformations that map one point and its associated directed footprint to the other point and direction.
Reference: [5] <author> P.J. Besl, </author> <title> Geometric modeling and computer vision, </title> <booktitle> Proc. IEEE, 76 (1988), </booktitle> <pages> 936-958. </pages>
Reference-contexts: Other methods, which do not rely on the existence of a certain type of features, are pose-clustering [30], alignment [19], and, of course, geometric hashing. A comparison between these techniques is found in [31]. Many other works have addressed the problem; see <ref> [3, 5, 6, 8, 10, 13, 17, 18, 27] </ref> for studies in the context of object recognition, and [1, 12, 14, 20, 22, 24, 26, 28] for studies in the context of molecular biology. Most of these works have various limitations, some of which are quite severe.
Reference: [6] <author> P.J. Besl, </author> <title> The free-form surface matching problem, in: Machine Vision for Three-Dimensional Scenes (H. </title> <publisher> Freeman, ed.), </publisher> <address> New York: </address> <publisher> Academic, </publisher> <year> 1990. </year>
Reference-contexts: Other methods, which do not rely on the existence of a certain type of features, are pose-clustering [30], alignment [19], and, of course, geometric hashing. A comparison between these techniques is found in [31]. Many other works have addressed the problem; see <ref> [3, 5, 6, 8, 10, 13, 17, 18, 27] </ref> for studies in the context of object recognition, and [1, 12, 14, 20, 22, 24, 26, 28] for studies in the context of molecular biology. Most of these works have various limitations, some of which are quite severe.
Reference: [7] <author> P.J. Besl and R.C. Jain, </author> <title> Three-dimensional object recognition, </title> <journal> ACM Computing Surveys, </journal> <volume> 17 (1985), </volume> <pages> 75-154. </pages>
Reference-contexts: E-mail: sharir@math.tau.ac.il 1 tion for this problem comes from the object recognition problem in computer vision, where an image has to be matched against a library of model objects. The image may contain several partially-occluded copies of the model objects. This is a major problem in object recognition <ref> [7, p. 137] </ref>. The goal is to find a Euclidean motion of a model object, which makes it overlap a large portion of some object in the image, leading to the identification of the model object in the viewed scene, and to finding its position and orientation there. <p> We provide here only a sketchy review of the extensive existing literature, mostly in computer vision and pattern recognition, on full or partial surface and volume matching. More details can be found in the two comprehensive surveys <ref> [7, 11] </ref> and in a companion paper [4]. Some works (e.g., [9]) depend on the ability to match significant features of the objects, like knobs and holes, whose existence is not usually guaranteed.
Reference: [8] <author> P.J. Besl and N.D. McKay, </author> <title> A method for registration of 3-D shapes, </title> <journal> IEEE Trans. on Pattern Analysis and Machine Intelligence, </journal> <volume> 14 (1992), </volume> <pages> 239-256. 19 </pages>
Reference-contexts: Other methods, which do not rely on the existence of a certain type of features, are pose-clustering [30], alignment [19], and, of course, geometric hashing. A comparison between these techniques is found in [31]. Many other works have addressed the problem; see <ref> [3, 5, 6, 8, 10, 13, 17, 18, 27] </ref> for studies in the context of object recognition, and [1, 12, 14, 20, 22, 24, 26, 28] for studies in the context of molecular biology. Most of these works have various limitations, some of which are quite severe. <p> Most of these works have various limitations, some of which are quite severe. They either restrict the shape of the matched objects, or assume that there is no occlusion, or handle only restricted motions. The methods that do not have these restrictions (e.g., those of <ref> [8, 13, 17] </ref>) have other disadvantages. For example, some of them are sensitive to statistical outliers, which have to be removed in a preprocessing step. Other methods might converge to a motion that yields only a local minimum of their `scoring function', etc.
Reference: [9] <author> R.C. Bolles and P. Horaud, 3DPO: </author> <title> Three-dimensional part orientation system, </title> <journal> Int. J. of Robotics Research, </journal> <volume> 5 (1986), </volume> <pages> 3-26. </pages>
Reference-contexts: We provide here only a sketchy review of the extensive existing literature, mostly in computer vision and pattern recognition, on full or partial surface and volume matching. More details can be found in the two comprehensive surveys [7, 11] and in a companion paper [4]. Some works (e.g., <ref> [9] </ref>) depend on the ability to match significant features of the objects, like knobs and holes, whose existence is not usually guaranteed. Other methods, which do not rely on the existence of a certain type of features, are pose-clustering [30], alignment [19], and, of course, geometric hashing.
Reference: [10] <author> P. Brou, </author> <title> Using the Gaussian image to find the orientation of an object, </title> <journal> Int. J. of Robotics Research, </journal> <volume> 3 (1983), </volume> <pages> 89-125. </pages>
Reference-contexts: Other methods, which do not rely on the existence of a certain type of features, are pose-clustering [30], alignment [19], and, of course, geometric hashing. A comparison between these techniques is found in [31]. Many other works have addressed the problem; see <ref> [3, 5, 6, 8, 10, 13, 17, 18, 27] </ref> for studies in the context of object recognition, and [1, 12, 14, 20, 22, 24, 26, 28] for studies in the context of molecular biology. Most of these works have various limitations, some of which are quite severe.
Reference: [11] <author> R.T. Chin and C.R. Dyer, </author> <title> Model-based recognition in robot vision, </title> <journal> ACM Computing surveys, </journal> <volume> 18 (1986), </volume> <pages> 67-108. </pages>
Reference-contexts: We provide here only a sketchy review of the extensive existing literature, mostly in computer vision and pattern recognition, on full or partial surface and volume matching. More details can be found in the two comprehensive surveys <ref> [7, 11] </ref> and in a companion paper [4]. Some works (e.g., [9]) depend on the ability to match significant features of the objects, like knobs and holes, whose existence is not usually guaranteed.
Reference: [12] <author> M.L. Connolly, </author> <title> Shape complementarity at the hemoglobin ff 1 -fi 1 subunit interface, </title> <journal> Biopoly-mers, </journal> <volume> 25 (1986), </volume> <pages> 1229-1247. </pages>
Reference-contexts: A comparison between these techniques is found in [31]. Many other works have addressed the problem; see [3, 5, 6, 8, 10, 13, 17, 18, 27] for studies in the context of object recognition, and <ref> [1, 12, 14, 20, 22, 24, 26, 28] </ref> for studies in the context of molecular biology. Most of these works have various limitations, some of which are quite severe. They either restrict the shape of the matched objects, or assume that there is no occlusion, or handle only restricted motions.
Reference: [13] <author> O.D. Faugeras, </author> <title> New steps toward a flexible 3-D vision system for robotics, </title> <booktitle> Proc. IEEE 7th Int. Conf. on Pattern Recognition, </booktitle> <year> 1984, </year> <pages> 796-805. </pages>
Reference-contexts: Other methods, which do not rely on the existence of a certain type of features, are pose-clustering [30], alignment [19], and, of course, geometric hashing. A comparison between these techniques is found in [31]. Many other works have addressed the problem; see <ref> [3, 5, 6, 8, 10, 13, 17, 18, 27] </ref> for studies in the context of object recognition, and [1, 12, 14, 20, 22, 24, 26, 28] for studies in the context of molecular biology. Most of these works have various limitations, some of which are quite severe. <p> Most of these works have various limitations, some of which are quite severe. They either restrict the shape of the matched objects, or assume that there is no occlusion, or handle only restricted motions. The methods that do not have these restrictions (e.g., those of <ref> [8, 13, 17] </ref>) have other disadvantages. For example, some of them are sensitive to statistical outliers, which have to be removed in a preprocessing step. Other methods might converge to a motion that yields only a local minimum of their `scoring function', etc.
Reference: [14] <author> D. Fischer, O. Bachar, R. Nussinov, and H.J. Wolfson, </author> <title> An efficient computer vision based technique for detection of three dimensional structural motifs in proteins, J. of Biomolecular Structure and Dynamics, </title> <booktitle> 9 (1992), </booktitle> <pages> 769-789. </pages>
Reference-contexts: A comparison between these techniques is found in [31]. Many other works have addressed the problem; see [3, 5, 6, 8, 10, 13, 17, 18, 27] for studies in the context of object recognition, and <ref> [1, 12, 14, 20, 22, 24, 26, 28] </ref> for studies in the context of molecular biology. Most of these works have various limitations, some of which are quite severe. They either restrict the shape of the matched objects, or assume that there is no occlusion, or handle only restricted motions. <p> Here every pair of points with similar footprints vote for the transformations that bring them close to each other. See <ref> [14, 15] </ref> for such works, mainly in the context of molecular biology. We propose a new approach to the matching problem, and present several of its applications in the domains mentioned above.
Reference: [15] <author> D. Fischer, R. Nussinov, and H.J. Wolfson, </author> <title> 3-d substructure matching in protein molecules, </title> <booktitle> Proc. 3rd Symp. on Combinatorial Pattern Matching, Lecture Notes in Computer Science, </booktitle> <volume> 644, </volume> <publisher> Springer Verlag, </publisher> <address> Berlin, </address> <year> 1992, </year> <pages> 136-150. </pages>
Reference-contexts: Here every pair of points with similar footprints vote for the transformations that bring them close to each other. See <ref> [14, 15] </ref> for such works, mainly in the context of molecular biology. We propose a new approach to the matching problem, and present several of its applications in the domains mentioned above.
Reference: [16] <author> J. Hong and H.J. Wolfson, </author> <title> An improved model-based matching method using footprints, </title> <booktitle> Proc. 9th Int. Conf. on Pattern Recognition, </booktitle> <year> 1988, </year> <pages> 72-78. </pages>
Reference-contexts: This technique, which uses the so-called geometric hashing method, has been used in computer vision for automatic identification of partially obscured objects in two or three dimensions <ref> [16, 23, 25, 32] </ref>. Our algorithm also makes intensive use of geometric hashing, even though there are significant technical problems in naive extensions of the technique to (partial) matchings between 2-dimensional surfaces or 3-dimensional volumes.
Reference: [17] <author> B.K.P. Horn, </author> <title> Closed-form solution of absolute orientation using unit quaternions, </title> <journal> J. of Opt. Soc. Amer., </journal> <volume> 4 (1987), </volume> <pages> 629-642. </pages>
Reference-contexts: Other methods, which do not rely on the existence of a certain type of features, are pose-clustering [30], alignment [19], and, of course, geometric hashing. A comparison between these techniques is found in [31]. Many other works have addressed the problem; see <ref> [3, 5, 6, 8, 10, 13, 17, 18, 27] </ref> for studies in the context of object recognition, and [1, 12, 14, 20, 22, 24, 26, 28] for studies in the context of molecular biology. Most of these works have various limitations, some of which are quite severe. <p> Most of these works have various limitations, some of which are quite severe. They either restrict the shape of the matched objects, or assume that there is no occlusion, or handle only restricted motions. The methods that do not have these restrictions (e.g., those of <ref> [8, 13, 17] </ref>) have other disadvantages. For example, some of them are sensitive to statistical outliers, which have to be removed in a preprocessing step. Other methods might converge to a motion that yields only a local minimum of their `scoring function', etc.
Reference: [18] <author> B.K.P. Horn and J.G. Harris, </author> <title> Rigid body motion from range image sequences, Computer Vision, Graphics, </title> <booktitle> and Image Processing, </booktitle> <year> 1989. </year>
Reference-contexts: Other methods, which do not rely on the existence of a certain type of features, are pose-clustering [30], alignment [19], and, of course, geometric hashing. A comparison between these techniques is found in [31]. Many other works have addressed the problem; see <ref> [3, 5, 6, 8, 10, 13, 17, 18, 27] </ref> for studies in the context of object recognition, and [1, 12, 14, 20, 22, 24, 26, 28] for studies in the context of molecular biology. Most of these works have various limitations, some of which are quite severe.
Reference: [19] <author> D.P. Huttenlocher and S. Ullman, </author> <title> Recognizing solid objects by alignment with an image, </title> <journal> Int. J. of Computer Vision, </journal> <volume> 5 (1990), </volume> <pages> 195-212. </pages>
Reference-contexts: Some works (e.g., [9]) depend on the ability to match significant features of the objects, like knobs and holes, whose existence is not usually guaranteed. Other methods, which do not rely on the existence of a certain type of features, are pose-clustering [30], alignment <ref> [19] </ref>, and, of course, geometric hashing. A comparison between these techniques is found in [31].
Reference: [20] <author> F. Jiang and S.H. Kim, </author> <title> Soft docking: Matching of molecular surface cubes, </title> <journal> J. of Molecular Biology, </journal> <volume> 219 (1991), </volume> <pages> 79-102. </pages>
Reference-contexts: A comparison between these techniques is found in [31]. Many other works have addressed the problem; see [3, 5, 6, 8, 10, 13, 17, 18, 27] for studies in the context of object recognition, and <ref> [1, 12, 14, 20, 22, 24, 26, 28] </ref> for studies in the context of molecular biology. Most of these works have various limitations, some of which are quite severe. They either restrict the shape of the matched objects, or assume that there is no occlusion, or handle only restricted motions.
Reference: [21] <author> A. Kalvin, E. Schonberg, J.T. Schwartz, and M. Sharir, </author> <title> Two-dimensional, model-based, boundary matching using footprints, </title> <journal> Int. J. of Robotics Research, </journal> <volume> 5 (1986), </volume> <pages> 38-55. </pages>
Reference-contexts: In most of these applications we seek a partial match between the image and the model objects, or between two macromolecules, or between different views of the same object. Our work was motivated by earlier works on the partial curve matching technique, first proposed by Kalvin et al. <ref> [21] </ref> and by Schwartz and Sharir [29]. This technique, which uses the so-called geometric hashing method, has been used in computer vision for automatic identification of partially obscured objects in two or three dimensions [16, 23, 25, 32].
Reference: [22] <author> E. Katchalski-Katzir, I. Shariv, M. Eisenstein, A.A. Friesem, C. Aflalo, and I.A. Vakser, </author> <title> Molecular surface recognition: Determination of geometric fit between proteins and their ligands by correlation techniques, </title> <booktitle> Proc. </booktitle> <institution> National Academy of Sciences of the USA (Biophysics), </institution> <month> 89 </month> <year> (1992), </year> <pages> 2195-2199. </pages>
Reference-contexts: A comparison between these techniques is found in [31]. Many other works have addressed the problem; see [3, 5, 6, 8, 10, 13, 17, 18, 27] for studies in the context of object recognition, and <ref> [1, 12, 14, 20, 22, 24, 26, 28] </ref> for studies in the context of molecular biology. Most of these works have various limitations, some of which are quite severe. They either restrict the shape of the matched objects, or assume that there is no occlusion, or handle only restricted motions.
Reference: [23] <author> E. Kishon, T. Hastie, and H. Wolfson, </author> <title> 3-D curve matching using splines, </title> <journal> J. of Robotic systems, </journal> <volume> 8 (1991), </volume> <pages> 723-743. </pages>
Reference-contexts: This technique, which uses the so-called geometric hashing method, has been used in computer vision for automatic identification of partially obscured objects in two or three dimensions <ref> [16, 23, 25, 32] </ref>. Our algorithm also makes intensive use of geometric hashing, even though there are significant technical problems in naive extensions of the technique to (partial) matchings between 2-dimensional surfaces or 3-dimensional volumes.
Reference: [24] <author> I.D. Kuntz, J.M. Blaney, S.J. Oatley, R. Langridge, and T.E. Ferrin, </author> <title> A geometric approach to macromolecule-ligand interactions, </title> <journal> J. of Molecular Biology, </journal> <month> 161 </month> <year> (1982) </year> <month> 269-288. </month>
Reference-contexts: A comparison between these techniques is found in [31]. Many other works have addressed the problem; see [3, 5, 6, 8, 10, 13, 17, 18, 27] for studies in the context of object recognition, and <ref> [1, 12, 14, 20, 22, 24, 26, 28] </ref> for studies in the context of molecular biology. Most of these works have various limitations, some of which are quite severe. They either restrict the shape of the matched objects, or assume that there is no occlusion, or handle only restricted motions.
Reference: [25] <author> Y. Lamdan, J.T. Schwartz, and H.J. Wolfson, </author> <title> Affine invariant model-based object recognition, </title> <journal> IEEE Trans. on Robotics and Automation, </journal> <volume> 6 (1990), </volume> <pages> 578-589. 20 </pages>
Reference-contexts: This technique, which uses the so-called geometric hashing method, has been used in computer vision for automatic identification of partially obscured objects in two or three dimensions <ref> [16, 23, 25, 32] </ref>. Our algorithm also makes intensive use of geometric hashing, even though there are significant technical problems in naive extensions of the technique to (partial) matchings between 2-dimensional surfaces or 3-dimensional volumes.
Reference: [26] <author> E.M. Mitchel, P.J. Artymiuk, D.W. Rice, and P. Willet, </author> <title> Use of techniques derived from graph theory to compare secondary structure motifs in proteins, </title> <journal> J. of Molecular Biology, </journal> <volume> 212 (1989), </volume> <pages> 151-166. </pages>
Reference-contexts: A comparison between these techniques is found in [31]. Many other works have addressed the problem; see [3, 5, 6, 8, 10, 13, 17, 18, 27] for studies in the context of object recognition, and <ref> [1, 12, 14, 20, 22, 24, 26, 28] </ref> for studies in the context of molecular biology. Most of these works have various limitations, some of which are quite severe. They either restrict the shape of the matched objects, or assume that there is no occlusion, or handle only restricted motions.
Reference: [27] <author> M. Potmesil, </author> <title> Generating models of solid objects by matching 3D surface segments, </title> <booktitle> Proc. 8th Int. Joint Conf. on Artificial Intelligence, </booktitle> <year> 1983, </year> <pages> 1089-1093. </pages>
Reference-contexts: Other methods, which do not rely on the existence of a certain type of features, are pose-clustering [30], alignment [19], and, of course, geometric hashing. A comparison between these techniques is found in [31]. Many other works have addressed the problem; see <ref> [3, 5, 6, 8, 10, 13, 17, 18, 27] </ref> for studies in the context of object recognition, and [1, 12, 14, 20, 22, 24, 26, 28] for studies in the context of molecular biology. Most of these works have various limitations, some of which are quite severe.
Reference: [28] <author> F.M. Richards and C.E. Kundrot, </author> <title> Identification of structural motifs from protein coordinate data: Secondary structure and first-level supersecondary structure, Protein Structures, </title> <booktitle> 3 (1988), </booktitle> <pages> 71-84. </pages>
Reference-contexts: A comparison between these techniques is found in [31]. Many other works have addressed the problem; see [3, 5, 6, 8, 10, 13, 17, 18, 27] for studies in the context of object recognition, and <ref> [1, 12, 14, 20, 22, 24, 26, 28] </ref> for studies in the context of molecular biology. Most of these works have various limitations, some of which are quite severe. They either restrict the shape of the matched objects, or assume that there is no occlusion, or handle only restricted motions.
Reference: [29] <author> J.T. Schwartz and M. Sharir, </author> <title> Identification of partially obscured objects in two and three dimensions by matching noisy characteristic curves, </title> <journal> Int. J. of Robotics Research, </journal> <volume> 6 (1987), </volume> <pages> 29-44. </pages>
Reference-contexts: Our work was motivated by earlier works on the partial curve matching technique, first proposed by Kalvin et al. [21] and by Schwartz and Sharir <ref> [29] </ref>. This technique, which uses the so-called geometric hashing method, has been used in computer vision for automatic identification of partially obscured objects in two or three dimensions [16, 23, 25, 32].
Reference: [30] <author> G. Stockman, </author> <title> Object recognition and localization via pose clustering, Computer Vision, Graphics, </title> <booktitle> and Image Processing, 40 (1987), </booktitle> <pages> 361-387. </pages>
Reference-contexts: Some works (e.g., [9]) depend on the ability to match significant features of the objects, like knobs and holes, whose existence is not usually guaranteed. Other methods, which do not rely on the existence of a certain type of features, are pose-clustering <ref> [30] </ref>, alignment [19], and, of course, geometric hashing. A comparison between these techniques is found in [31].
Reference: [31] <author> H.J. Wolfson, </author> <title> Model-based object recognition by geometric hashing, </title> <booktitle> Proc. 1st European Conf. on Computer Vision, Lecture Notes in Computer Science, </booktitle> <volume> 427, </volume> <publisher> Springer Verlag, </publisher> <address> Berlin, </address> <year> 1990, </year> <pages> 526-536. </pages>
Reference-contexts: Other methods, which do not rely on the existence of a certain type of features, are pose-clustering [30], alignment [19], and, of course, geometric hashing. A comparison between these techniques is found in <ref> [31] </ref>. Many other works have addressed the problem; see [3, 5, 6, 8, 10, 13, 17, 18, 27] for studies in the context of object recognition, and [1, 12, 14, 20, 22, 24, 26, 28] for studies in the context of molecular biology.
Reference: [32] <author> H.J. Wolfson, </author> <title> On curve matching, </title> <journal> IEEE Trans. on Pattern Analysis and Machine Intelligence, </journal> <volume> 12 (1990), </volume> <pages> 483-489. 21 </pages>
Reference-contexts: This technique, which uses the so-called geometric hashing method, has been used in computer vision for automatic identification of partially obscured objects in two or three dimensions <ref> [16, 23, 25, 32] </ref>. Our algorithm also makes intensive use of geometric hashing, even though there are significant technical problems in naive extensions of the technique to (partial) matchings between 2-dimensional surfaces or 3-dimensional volumes.
References-found: 32

