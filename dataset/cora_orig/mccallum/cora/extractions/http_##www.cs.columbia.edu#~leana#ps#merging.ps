URL: http://www.cs.columbia.edu/~leana/ps/merging.ps
Refering-URL: http://www.cs.columbia.edu/~leana/publications.html
Root-URL: http://www.cs.columbia.edu
Title: Adaptive Piggybacking: A Novel Technique for Data Sharing in Video-On-Demand Storage Servers  
Author: Leana Golubchik John C.S. Lui Richard R. Muntz 
Abstract: Recent technological advances have made multimedia on-demand services, such as home entertainment and home-shopping, important to the consumer market. One of the most challenging aspects of this type of service is providing access either instantaneously or within a small and reasonable latency upon request. In this paper, we consider improvements in performance of multimedia storage servers through data sharing between requests for popular objects, where I/O bandwidth is assumed to be the critical resource in the system. We discuss a novel approach to data sharing, termed "adaptive piggybacking", which can be used to reduce the aggregate I/O demand on the multimedia storage server and thus reduce latency for servicing new requests.
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> Product Description, </institution> <address> Ampex DST800 Automated Cartridge Library. </address>
Reference-contexts: A similar type of interpolation could be used in our application. * Ampex makes a product called Zeus (TM) <ref> [1] </ref> which can be used to produce high quality video that has been time compressed or expanded by up to 8%; according to the product literature it can accomplish this without bounce or blur. * Personal contacts within the the video editing industry have assured us alterations of the actual display
Reference: [2] <author> Steven Berson, Shahram Ghandeharizadeh, Richard R. Muntz, and Xiangyu Ju. </author> <title> Staggered Striping in Multimedia Information Systems. </title> <booktitle> SIGMOD, </booktitle> <year> 1994. </year>
Reference-contexts: In general, the more video streams a system can support simultaneously, the lower is the average latency for starting the service of a new request (at least for the disk resident objects). There are several basic architectures that can be used for constructing a video-on-demand server <ref> [2, 14, 11] </ref>. The distinctions between these architectures can be (mostly) attributed to the data layout and scheduling techniques used.
Reference: [3] <author> A. Dan, , D. Dias, R. Mukherjee, D. Sitaram, and R Tewari. </author> <title> Buffering and Caching in Large-Scale Video Servers. </title> <booktitle> In Proc. of COMPCON, </booktitle> <year> 1995. </year>
Reference-contexts: It is a more innovative approach and, to the best of our knowledge, has not been studied (or even proposed) before. Some work on batching [4, 5, 11, 17] and bridging <ref> [9, 8, 3] </ref> does exist. An adaptive piggybacking procedure is defined to be a policy for altering display rates of requests in progress (for the same object), for the purpose of merging their respective I/O streams into a single stream, which can serve the entire group (of merged requests).
Reference: [4] <author> A. Dan, P. Shahabuddin, D. Sitaram, and D. Towsley. </author> <title> Channel Allocation under Batching and VCR Control in Movie-On-Demand Servers. </title> <type> Technical Report RC19588, </type> <institution> IBM Research Report, Yorktown Height, </institution> <address> NY, </address> <year> 1994. </year>
Reference-contexts: It is a more innovative approach and, to the best of our knowledge, has not been studied (or even proposed) before. Some work on batching <ref> [4, 5, 11, 17] </ref> and bridging [9, 8, 3] does exist. <p> In this paper, we consider several merging policies and evaluate them with respect to reduction in 6 Clearly, there is a problem of providing VCR functionality; A similar problem was solved in the context of batching in <ref> [4, 6] </ref>, and their solution of reserving channels for this purpose, can be used here as well; furthermore, adaptive piggybacking has one additional benefit. <p> Combinations of these batching policies as well as many other variations on batching are possible, some of which have already been studied in <ref> [4, 5, 11] </ref>; since batching is not the focus of this paper, we do not pursue these any further. 9 = 2 j Although this policy reduces the I/O demand on the storage server, it can result in long delays for requests, particularly for low to moderate arrival rates 10 .
Reference: [5] <author> A. Dan, D. Sitaram, and P. Shahabuddin. </author> <title> Scheduling Policies for an On-Demand Video Server with Batching. </title> <booktitle> In Proceedings of the Second ACM International Conference on Multimedia, </booktitle> <month> October </month> <year> 1994. </year>
Reference-contexts: It is a more innovative approach and, to the best of our knowledge, has not been studied (or even proposed) before. Some work on batching <ref> [4, 5, 11, 17] </ref> and bridging [9, 8, 3] does exist. <p> Combinations of these batching policies as well as many other variations on batching are possible, some of which have already been studied in <ref> [4, 5, 11] </ref>; since batching is not the focus of this paper, we do not pursue these any further. 9 = 2 j Although this policy reduces the I/O demand on the storage server, it can result in long delays for requests, particularly for low to moderate arrival rates 10 .
Reference: [6] <author> J. K. Dey-Sircar, J. D. Salehi, J. F. Kurose, and D. Towsley. </author> <title> Providing VCR Capabilities in Large-Scale Video Servers. </title> <booktitle> In Proceedings of the Second to ACM International Conference on Multimedia, </booktitle> <month> October </month> <year> 1994. </year> <month> 35 </month>
Reference-contexts: In this paper, we consider several merging policies and evaluate them with respect to reduction in 6 Clearly, there is a problem of providing VCR functionality; A similar problem was solved in the context of batching in <ref> [4, 6] </ref>, and their solution of reserving channels for this purpose, can be used here as well; furthermore, adaptive piggybacking has one additional benefit.
Reference: [7] <author> A. L. Drapeau and R. Katz. </author> <title> Striped Tape Arrays. </title> <booktitle> In Proc. of the 12th IEEE Symposium on Mass Storage Systems, </booktitle> <pages> pages 257-265, </pages> <address> Monterey, California, </address> <month> April </month> <year> 1993. </year>
Reference-contexts: only when it is referenced; some form of the LRU policy can be used to purge objects from disks (in order to create space for the newly retrieved object). 2 The seek latency for a 1:3GB tape on a $1000 tape drive can be on the order of 20 seconds <ref> [7] </ref>, whereas a similarly priced disk, of a similar capacity, has a maximum seek time on the order of 35 milliseconds and more than 16 times the transfer rate.
Reference: [8] <author> M. Kamath, K. Ramamritham, and D. Towsley. </author> <title> Continuous Media Sharing in Multimedia Database Systems. </title> <booktitle> In Proc. of the 4th Intl. Conference on Database Systems for Advanced Applications (DASFAA '95), </booktitle> <address> Singapore, </address> <month> April 10-13, </month> <year> 1995. </year>
Reference-contexts: It is a more innovative approach and, to the best of our knowledge, has not been studied (or even proposed) before. Some work on batching [4, 5, 11, 17] and bridging <ref> [9, 8, 3] </ref> does exist. An adaptive piggybacking procedure is defined to be a policy for altering display rates of requests in progress (for the same object), for the purpose of merging their respective I/O streams into a single stream, which can serve the entire group (of merged requests).
Reference: [9] <author> M. Kamath, K. Ramamritham, and D. Towsley. </author> <title> Buffer Management for Continuous Media Sharing in Multimedia Database Systems. </title> <type> Technical Report 94-11, </type> <institution> University of Mas-sachusetts, </institution> <month> February </month> <year> 1994. </year>
Reference-contexts: It is a more innovative approach and, to the best of our knowledge, has not been studied (or even proposed) before. Some work on batching [4, 5, 11, 17] and bridging <ref> [9, 8, 3] </ref> does exist. An adaptive piggybacking procedure is defined to be a policy for altering display rates of requests in progress (for the same object), for the purpose of merging their respective I/O streams into a single stream, which can serve the entire group (of merged requests).
Reference: [10] <author> T. A. Ohanian. </author> <title> Digital Nonlinear Editing: new approaches to editing film and video. </title> <publisher> Focal Press, </publisher> <year> 1993. </year>
Reference-contexts: For example: * A movie shot on film is transferred to video using a telecine machine which adapts to the 30 fps required for the video from the 24 fps which is standard for films; this is done using a 3-2 pulldown algorithm <ref> [12, 10] </ref>, which for every 4 movie frames creates 5 video frames, where two of the five frames produced are interpolations of a pair of the original frames.
Reference: [11] <author> B. Ozden, A. Biliris, R. Rastogi, and A. Silberschatz. </author> <title> A Low-Cost Storage Server for Movie on Demand Databases. </title> <booktitle> Proceedings of the 20th International Conference on Very Large Data Bases, </booktitle> <month> September </month> <year> 1994. </year>
Reference-contexts: In general, the more video streams a system can support simultaneously, the lower is the average latency for starting the service of a new request (at least for the disk resident objects). There are several basic architectures that can be used for constructing a video-on-demand server <ref> [2, 14, 11] </ref>. The distinctions between these architectures can be (mostly) attributed to the data layout and scheduling techniques used. <p> It is a more innovative approach and, to the best of our knowledge, has not been studied (or even proposed) before. Some work on batching <ref> [4, 5, 11, 17] </ref> and bridging [9, 8, 3] does exist. <p> Combinations of these batching policies as well as many other variations on batching are possible, some of which have already been studied in <ref> [4, 5, 11] </ref>; since batching is not the focus of this paper, we do not pursue these any further. 9 = 2 j Although this policy reduces the I/O demand on the storage server, it can result in long delays for requests, particularly for low to moderate arrival rates 10 .
Reference: [12] <author> M. Rubin. </author> <title> Nonlinear: a guide to electronic film and video editing. </title> <publisher> Triad Publishing Co., </publisher> <year> 1991. </year>
Reference-contexts: Clearly, the rate of this adjustment must be chosen accordingly to insure the necessary synchronization <ref> [12] </ref> with the video portion of the object. We make the basic assumption that the display units being fed by the storage server are NTSC standard and display at a rate of 30 frames per second (fps). Therefore any time expansion or contraction must be done at the storage server. <p> For example: * A movie shot on film is transferred to video using a telecine machine which adapts to the 30 fps required for the video from the 24 fps which is standard for films; this is done using a 3-2 pulldown algorithm <ref> [12, 10] </ref>, which for every 4 movie frames creates 5 video frames, where two of the five frames produced are interpolations of a pair of the original frames.
Reference: [13] <author> H. Takagi. </author> <title> Queueing Analysis: A Foundation of Performance Evaluation. Volume 1: Vacation and Priority Systems, Part 1. </title> <publisher> North-Holland, </publisher> <year> 1991. </year> <month> 36 </month>
Reference-contexts: The expected latency for this type of a system can be found in <ref> [13] </ref> as: E [L j ] = 2 (1 + j T j ) Since E [N j ] = j T j , the I/O demand on the secondary storage can be reduced tremendously under moderate to high request arrival rates.
Reference: [14] <author> F. A. Tobagi, J. Pang, R. Baird, and M. Gang. </author> <title> Streaming RAID A Disk Array Management System For Video Files. </title> <booktitle> ACM Multimedia Conference, </booktitle> <pages> pages 393-399, </pages> <year> 1993. </year>
Reference-contexts: In general, the more video streams a system can support simultaneously, the lower is the average latency for starting the service of a new request (at least for the disk resident objects). There are several basic architectures that can be used for constructing a video-on-demand server <ref> [2, 14, 11] </ref>. The distinctions between these architectures can be (mostly) attributed to the data layout and scheduling techniques used.
Reference: [15] <institution> Personal Communication with Mr. Rich Igo and Mr. Bill Carpenter at Ampex Corp. </institution>
Reference-contexts: Note that, although we do not discuss it in detail here, the necessary time adjustments can be performed on the audio portion of an object as well 7 , using techniques such as audio pitch correction <ref> [15] </ref>; for instance, when the movie Amadeus was transferred from film to television, it was "time compressed" by 3% [15]. Clearly, the rate of this adjustment must be chosen accordingly to insure the necessary synchronization [12] with the video portion of the object. <p> not discuss it in detail here, the necessary time adjustments can be performed on the audio portion of an object as well 7 , using techniques such as audio pitch correction <ref> [15] </ref>; for instance, when the movie Amadeus was transferred from film to television, it was "time compressed" by 3% [15]. Clearly, the rate of this adjustment must be chosen accordingly to insure the necessary synchronization [12] with the video portion of the object. <p> by up to 8%; according to the product literature it can accomplish this without bounce or blur. * Personal contacts within the the video editing industry have assured us alterations of the actual display rate in the 23% range [16] or expansion and contraction (through interpolation) in the 8% range <ref> [15] </ref> can be accomplished without being noticeable to the viewer. There are two approaches to actually providing the altered stream of frames to be transmitted to the display stations. * The altered version of the video can be created on-line.
Reference: [16] <institution> Personal Communication with Ms. Cary Shott at Lightwors USA and Digital Images. </institution>
Reference-contexts: produce high quality video that has been time compressed or expanded by up to 8%; according to the product literature it can accomplish this without bounce or blur. * Personal contacts within the the video editing industry have assured us alterations of the actual display rate in the 23% range <ref> [16] </ref> or expansion and contraction (through interpolation) in the 8% range [15] can be accomplished without being noticeable to the viewer.
Reference: [17] <author> P. S. Yu, J. L. Wolf, and H. Shachnai. </author> <title> Design and Analysis of A Look-ahead Scheduling Scheme to Support Pause-Resume for Video-on-Demand Applications. </title> <type> Technical Report RC19683, </type> <institution> IBM Research Report, Yorktown Height, </institution> <address> NY, </address> <year> 1995. </year> <month> 37 </month>
Reference-contexts: It is a more innovative approach and, to the best of our knowledge, has not been studied (or even proposed) before. Some work on batching <ref> [4, 5, 11, 17] </ref> and bridging [9, 8, 3] does exist.
References-found: 17

