URL: http://www.isi.edu/~gts/paps/hpt98.ps.gz
Refering-URL: http://www.isi.edu/~gts/pubs.html
Root-URL: http://www.isi.edu
Email: hauser@acm.org  prz@fore.com  gts@isi.edu  
Title: Lowering Security Overhead in Link State Routing  
Author: Ralf Hauser Tony Przygienda Gene Tsudik 
Keyword: link state routing, security, hash chains, ad hoc networks.  
Affiliation: McKinsey Consulting  Lucent Bell Labs  USC Information Sciences Institute  
Abstract: Security services in routing protocols are at the same time very important and very costly. This paper examines the cost of security in link state routing and develops techniques for efficient and secure processing of link state updates. Different approaches are recommended for stable and volatile network environments. Applications to mobile ad hoc networks are also considered. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Rivest, </author> <title> The MD5 Message-Digest Algorithm, INTERNET RFC 1321, </title> <month> April </month> <year> 1992. </year>
Reference-contexts: Signatures can be computed using any well-known public key cryptosystem: RSA, DSS, El Gamal, Schnorr, etc. A number of (conjectured) strong one-way functions have been proposed, e.g., MD4, MD5, 8-pass SNEFRU and SHA <ref> [2, 1, 8, 17] </ref>. We also take advantage of a simple and elegant technique of constructing hash chains similar to that utilized in S/KEY one-time authentication [20].
Reference: [2] <author> R. Rivest, </author> <title> The MD4 Message-Digest Algorithm, INTERNET RFC 1320, </title> <month> April </month> <year> 1992. </year>
Reference-contexts: Signatures can be computed using any well-known public key cryptosystem: RSA, DSS, El Gamal, Schnorr, etc. A number of (conjectured) strong one-way functions have been proposed, e.g., MD4, MD5, 8-pass SNEFRU and SHA <ref> [2, 1, 8, 17] </ref>. We also take advantage of a simple and elegant technique of constructing hash chains similar to that utilized in S/KEY one-time authentication [20].
Reference: [3] <author> J. Moy, </author> <note> OSPF Version 2, INTERNET RFC 2178, </note> <month> July </month> <year> 1997. </year>
Reference-contexts: Nowadays, designers of link state routing protocols have little choice but to consider similar techniques, however costly. (The use of digital signatures in OSPF <ref> [22, 23, 3] </ref> is a case in point.) While public key technology is still lagging in terms of performance the only alternative conventional, shared-key cryptography is awkward and unsuitable for link state routing. 2 For routers, the bulk of security-related activity is spent in composing and processing LSU-s which translates into <p> SLS methods presented in this paper are attractive in certain respects, the magnitude of their efficiency (as compared to fully-signed LSUs a la [6]) remains to be validated by experiments with actual routing protocols; for example, extending the work of Murphy and Badger [22, 23] on digital signatures in OSPF <ref> [3] </ref>. Another potential item of interest is the combination of SLS and FLS into a unified technique. 9 Acknowledgements The authors would like to acknowledge Michael Steiner, Hilarie Orman, Kannan Varadhan, Michael Waidner and clandestine referees for their valuable comments on the earlier drafts of this paper.
Reference: [4] <author> M. Steenstrup, </author> <title> IDPR as a Proposed Standard, INTERNET RFC 1477, </title> <month> July </month> <year> 1993. </year>
Reference: [5] <author> M. Steenstrup, </author> <title> An Architecture for Inter-Domain Policy Routing, INTERNET RFC 1478, </title> <month> June </month> <year> 1993. </year>
Reference: [6] <author> R. Perlman, </author> <title> Network Layer Protocols with Byzantine Robustness, </title> <type> Ph.D. Dissertation, </type> <institution> MIT LCS TR-429, </institution> <month> October </month> <year> 1988. </year>
Reference-contexts: cryptography, the origin of a signed and/or encrypted message cannot be determined with certainly since there are always at least two parties in possession of a given secret key. 2 The state-of-the-art in (theoretical) link state routing security is exemplified by Network-layer Pro--tocol with Byzantine Robustness (NPBR) proposed by Perlman <ref> [6] </ref>. NPBR comes in two flavors: flooding and link state. Flooding NPBR is a highly-robust protocol where communication between any two nodes is guaranteed as long as there exists a non-faulty path between them. <p> While both FLS and SLS methods presented in this paper are attractive in certain respects, the magnitude of their efficiency (as compared to fully-signed LSUs a la <ref> [6] </ref>) remains to be validated by experiments with actual routing protocols; for example, extending the work of Murphy and Badger [22, 23] on digital signatures in OSPF [3].
Reference: [7] <author> R. Rivest, A. Shamir and L. Adleman, </author> <title> A Method for Obtaining Digital Signatures and Public Key Cryptosystems, </title> <journal> Communications of the ACM, </journal> <month> February </month> <year> 1978. </year>
Reference: [8] <author> R. Merkle, </author> <title> One-way Hash functions and DES, </title> <booktitle> Proceedings of CRYPTO 89, </booktitle> <month> August </month> <year> 1989. </year>
Reference-contexts: Signatures can be computed using any well-known public key cryptosystem: RSA, DSS, El Gamal, Schnorr, etc. A number of (conjectured) strong one-way functions have been proposed, e.g., MD4, MD5, 8-pass SNEFRU and SHA <ref> [2, 1, 8, 17] </ref>. We also take advantage of a simple and elegant technique of constructing hash chains similar to that utilized in S/KEY one-time authentication [20].
Reference: [9] <author> L. Ford and D. Fulkerson, </author> <title> Flows in Networks, </title> <publisher> Princeton, NJ:Princeton University Press, </publisher> <year> 1962. </year>
Reference-contexts: Dijkstra's Shortest Path [10] and Ford/Fulkerson's Max Flow algorithms <ref> [9] </ref> gave rise to link state and distance vector routing protocols, respectively. In distance vector protocols, nodes keep tables of the best paths and associated metrics for all possible destinations and periodically exchange the contents of the tables with neighbors.
Reference: [10] <author> E. Dijkstra, </author> <title> Self-Stabilization in Spite of Distributed Control, </title> <journal> Communications of the ACM, </journal> <month> November </month> <year> 1974. </year>
Reference-contexts: Dijkstra's Shortest Path <ref> [10] </ref> and Ford/Fulkerson's Max Flow algorithms [9] gave rise to link state and distance vector routing protocols, respectively. In distance vector protocols, nodes keep tables of the best paths and associated metrics for all possible destinations and periodically exchange the contents of the tables with neighbors.
Reference: [11] <author> T. El Gamal, </author> <title> A Public Key Cryptosystem and a Signature Based on Discrete Logarithms, </title> <journal> IEEE Transaction on Information Theory, </journal> <volume> Vol. 31, </volume> <month> July </month> <year> 1985. </year> <month> 12 </month>
Reference: [12] <author> W. Diffie and M. Hellman, </author> <title> New Directions in Cryptography, </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> Vol. 22, No. 11, </volume> <month> November, </month> <year> 1976. </year>
Reference: [13] <author> N. Asokan, G. Tsudik and M. Waidner, </author> <title> Server-Supported Signatures, </title> <booktitle> 1996 European Symposium on Research in Computer Security, </booktitle> <month> September </month> <year> 1996. </year>
Reference-contexts: Originally developed by Merkle, Lamport [18], and Winternitz, it is currently being used in a number of application domains, such as micro-payments [15], conditional anonymity [14], non-repudiation <ref> [13] </ref> and certificate revocation [16]. In brief, hash chains are utilized as follows: A party (Alice) generates a secret quantity R and computes a hash chain of length n: H 1 (R), ..., H i (R), ...
Reference: [14] <author> R. Hauser and G. </author> <title> Tsudik, </title> <booktitle> On Shopping Incognito, 2nd USENIX Workshop on Electronic Commerce, </booktitle> <month> November </month> <year> 1996. </year>
Reference-contexts: We also take advantage of a simple and elegant technique of constructing hash chains similar to that utilized in S/KEY one-time authentication [20]. Originally developed by Merkle, Lamport [18], and Winternitz, it is currently being used in a number of application domains, such as micro-payments [15], conditional anonymity <ref> [14] </ref>, non-repudiation [13] and certificate revocation [16]. In brief, hash chains are utilized as follows: A party (Alice) generates a secret quantity R and computes a hash chain of length n: H 1 (R), ..., H i (R), ...
Reference: [15] <author> R. Hauser, M. Steiner and M. Waidner, </author> <title> Micropayments based on iKP, </title> <address> SECURICOM'96, </address> <month> May </month> <year> 1996. </year> <note> (Also available as IBM Research Report.) </note>
Reference-contexts: We also take advantage of a simple and elegant technique of constructing hash chains similar to that utilized in S/KEY one-time authentication [20]. Originally developed by Merkle, Lamport [18], and Winternitz, it is currently being used in a number of application domains, such as micro-payments <ref> [15] </ref>, conditional anonymity [14], non-repudiation [13] and certificate revocation [16]. In brief, hash chains are utilized as follows: A party (Alice) generates a secret quantity R and computes a hash chain of length n: H 1 (R), ..., H i (R), ...
Reference: [16] <author> S. Micali, </author> <title> Enhanced Certificate Revocation System, </title> <note> Technical Memo MIT/LCS/TM-542, </note> <month> November </month> <year> 1995. </year>
Reference-contexts: Originally developed by Merkle, Lamport [18], and Winternitz, it is currently being used in a number of application domains, such as micro-payments [15], conditional anonymity [14], non-repudiation [13] and certificate revocation <ref> [16] </ref>. In brief, hash chains are utilized as follows: A party (Alice) generates a secret quantity R and computes a hash chain of length n: H 1 (R), ..., H i (R), ...
Reference: [17] <author> U. S. </author> <title> National Institute of Standards and Technology (NIST), Secure Hash Standard. </title> <note> Federal Information Processing Standards Publication (FIPS PUB) 180, </note> <month> May </month> <year> 1993. </year>
Reference-contexts: Signatures can be computed using any well-known public key cryptosystem: RSA, DSS, El Gamal, Schnorr, etc. A number of (conjectured) strong one-way functions have been proposed, e.g., MD4, MD5, 8-pass SNEFRU and SHA <ref> [2, 1, 8, 17] </ref>. We also take advantage of a simple and elegant technique of constructing hash chains similar to that utilized in S/KEY one-time authentication [20].
Reference: [18] <author> L. Lamport, </author> <title> Password Authentication with Insecure Communication, </title> <journal> Communications of the ACM, </journal> <volume> 24(11) </volume> <pages> 770-772, </pages> <month> November </month> <year> 1981. </year>
Reference-contexts: A number of (conjectured) strong one-way functions have been proposed, e.g., MD4, MD5, 8-pass SNEFRU and SHA [2, 1, 8, 17]. We also take advantage of a simple and elegant technique of constructing hash chains similar to that utilized in S/KEY one-time authentication [20]. Originally developed by Merkle, Lamport <ref> [18] </ref>, and Winternitz, it is currently being used in a number of application domains, such as micro-payments [15], conditional anonymity [14], non-repudiation [13] and certificate revocation [16].
Reference: [19] <author> B. Kumar, </author> <title> Integration of Security in Network Routing Protocols, </title> <journal> SIGSAC Reviews, </journal> <volume> 11(2) </volume> <pages> 18-25, </pages> <year> 1993. </year>
Reference-contexts: Before proceeding with the subject at hand, we first provide a brief sumary of security threats facing modern routing protocols and corresponding countermeasures. (An in-depth treatment of this subject can be found, e.g., in <ref> [19] </ref>.) Two types of attacks are considered: insider and outsider attacks. Outsider attacks typically involve an intruder masquerading as a router who distributes fabricated, delayed or otherwise incorrect routing information.
Reference: [20] <author> N. Haller, </author> <title> The S/Key One-Time Password System, </title> <booktitle> ISOC Symposium on Network and Distributed Systems Security, </booktitle> <month> February </month> <year> 1994. </year>
Reference-contexts: A number of (conjectured) strong one-way functions have been proposed, e.g., MD4, MD5, 8-pass SNEFRU and SHA [2, 1, 8, 17]. We also take advantage of a simple and elegant technique of constructing hash chains similar to that utilized in S/KEY one-time authentication <ref> [20] </ref>. Originally developed by Merkle, Lamport [18], and Winternitz, it is currently being used in a number of application domains, such as micro-payments [15], conditional anonymity [14], non-repudiation [13] and certificate revocation [16].
Reference: [21] <author> D. Eastlake, S. Crocker and J. Schiller, </author> <title> Randomness Recommendations for Security, INTERNET RFC 1750, </title> <month> December </month> <year> 1994. </year>
Reference: [22] <author> S. Murphy and M. Badger, </author> <title> Digital Signature Protection of the OSPF Routing Protocol, </title> <booktitle> ISOC Symposium on Network and Distributed Systems Security, </booktitle> <month> February </month> <year> 1996. </year>
Reference-contexts: Nowadays, designers of link state routing protocols have little choice but to consider similar techniques, however costly. (The use of digital signatures in OSPF <ref> [22, 23, 3] </ref> is a case in point.) While public key technology is still lagging in terms of performance the only alternative conventional, shared-key cryptography is awkward and unsuitable for link state routing. 2 For routers, the bulk of security-related activity is spent in composing and processing LSU-s which translates into <p> While both FLS and SLS methods presented in this paper are attractive in certain respects, the magnitude of their efficiency (as compared to fully-signed LSUs a la [6]) remains to be validated by experiments with actual routing protocols; for example, extending the work of Murphy and Badger <ref> [22, 23] </ref> on digital signatures in OSPF [3].
Reference: [23] <author> S. Murphy, M. Badger and B. Wellington, </author> <title> OSPF with Digital Signatures, INTERNET RFC 2154, </title> <month> June </month> <year> 1997. </year>
Reference-contexts: Nowadays, designers of link state routing protocols have little choice but to consider similar techniques, however costly. (The use of digital signatures in OSPF <ref> [22, 23, 3] </ref> is a case in point.) While public key technology is still lagging in terms of performance the only alternative conventional, shared-key cryptography is awkward and unsuitable for link state routing. 2 For routers, the bulk of security-related activity is spent in composing and processing LSU-s which translates into <p> While both FLS and SLS methods presented in this paper are attractive in certain respects, the magnitude of their efficiency (as compared to fully-signed LSUs a la [6]) remains to be validated by experiments with actual routing protocols; for example, extending the work of Murphy and Badger <ref> [22, 23] </ref> on digital signatures in OSPF [3].
Reference: [24] <author> R. Hauser, A. Przygenda and G. Tsudik, </author> <title> Reducing the Cost of Security in Link State Routing Protocols, </title> <booktitle> ISOC Symposium on Network and Distributed Systems Security, </booktitle> <month> February </month> <year> 1997. </year> <month> 13 </month>
Reference-contexts: More specifically, this translates into the use of: 1) cryptographic checksums to protect against outsiders generating fraudulent routing messages, and 2) per-message fl An earlier version of this paper <ref> [24] </ref> was presented at the ISOC Symposium on Network and Distributed System Security, February 1997, San Diego, CA. y Names appear in alphabetical order. z Contact author. 1 sequence numbers and timestamps to protects against outsiders re-ordering or delaying genuine routing messages.
References-found: 24

