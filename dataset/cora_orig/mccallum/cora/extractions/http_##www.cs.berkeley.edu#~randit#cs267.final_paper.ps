URL: http://www.cs.berkeley.edu/~randit/cs267.final_paper.ps
Refering-URL: http://www.cs.berkeley.edu/~randit/cs267-project.fft.html
Root-URL: 
Email: fdgay,alanm,randitg@cs.berkeley.edu  
Title: 3D FFT on Network of SMPs CS267 Final Project  
Author: David Gay, Alan Mainwaring, Randi Thomas 
Date: May 23, 1997  
Affiliation: EECS Department  
Abstract: We present an implementation of a three-dimensional fast fourier transform on a cluster of SMPs. We implemented three versions of the 3D FFT, one for the NOW, one for an SMP, and one for the CLUMP, all of which turned out to be very similar. The resulting performance shows that all systems, except the single SMP, suffered from inadequate network bandwidth. As a result, the performance does not scale well beyond 16 processors. However, the NOW version of the code when run on the CLUMP using the AM-II multi-protocol software only suffers a 15% slowdown over specialized code that exploits the shared memory within an SMP for communication.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> James C. Cooley and J.W. Tukey. </author> <title> An algorithm for the machine computation of complex fourier series. </title> <journal> Math. Comp, </journal> <volume> 19 </volume> <pages> 291-301, </pages> <year> 1965. </year>
Reference-contexts: and section 8 our experiences porting and measuring these codes on the three systems. 2 1D-FFT The 1D Discrete Fourier Transform is defined by the following formula: 1 y j = k=0 m x k 8j 2 [0; m 1]; ! jk 2ijk We use the Cooley-Tukey Fast Fourier Transform <ref> [1] </ref> which evaluates these matrix vector products in log 2 m stages and thus computes the 1D-FFT in m log 2 m steps as illustrated in the butterfly of figure 1.
Reference: [2] <author> John D. McCalpin. </author> <title> Memory bandwidth and machine balance in current high performance computers. </title> <journal> IEEE Technical Committee on Computer Architecture newsletter, </journal> <month> December </month> <year> 1995. </year>
Reference-contexts: The SMPs have less network cards than processors, we assume that the available bandwidth is divided equally amongst all threads. We measured the network parameters with a benchmark program that performs the same all-to-all communication pattern as the parallel transpose. The memory bandwidth is measured with the STREAM benchmark <ref> [2] </ref>. We test the 1D FFT performance for fully cached data, for various values of m, the size of the cube. All these parameters are summarized in Table 6 and 7.
Reference: [3] <author> A. Alexandrov, M. Ionescu, K. E. Schauser, C. Scheiman, "LogGP: </author> <title> Incorporating Long Messages into the LogP Model|One Step Closer Towards a Realistic Model for Parallel Computation," </title> <booktitle> 7th Annual Symposium on Parallel Algorithms and Architectures, </booktitle> <month> July </month> <year> 1995. </year>
Reference-contexts: with 8 processors of one SMP than when it runs with 2 processors on 4 SMPs (and hence has to use the network), as can be 9 seen by comparing the 1x8 and 4x2 columns of Table 5. 7.2 Performance model The performance model is inspired by the LogGP model <ref> [3] </ref>, which has the following parameters for the network: latency L, overhead o, gap between messages g, inverse bandwidth G, and number of processors p. We augment this model with the number of machines c and the threads per machine t, so p = ct.
References-found: 3

