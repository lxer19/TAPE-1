URL: http://rakaposhi.eas.asu.edu/aaai-98.ps
Refering-URL: http://rakaposhi.eas.asu.edu/yochan.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: email: frao,amol.mali,biplavg@asu.edu  
Title: Hybrid Planning for Partially Hierarchical Domains  
Author: Subbarao Kambhampati Amol Mali Biplav Srivastava 
Note: HTN and action-based planning approaches.  
Web: WWW: http://rakaposhi.eas.asu.edu/yochan.html  
Address: Tempe AZ 85287-5406  
Affiliation: Department of Computer Science and Engineering Arizona State University,  
Abstract: Hierarchical task network and action-based planning approaches have traditionally been studied separately. In many domains, human expertise in the form of hierarchical reduction schemas exists, but is incomplete. In such domains, hybrid approaches that use both HTN and action-based planning techniques are needed. In this paper, we extend our previous work on refinement planning to include hierarchical planning. Specifically, we provide a generalized plan-space refinement that is capable of handling non-primitive actions. The generalization provides a principled way of handling partially hierarchical domains, while preserving sys-tematicity, and respecting the user-intent inherent in the reduction schemas. Our general account also puts into perspective the many surface differences between the HTN and action-based planners, and could support the transfer of progress between 
Abstract-found: 1
Intro-found: 1
Reference: [ 1 ] <author> J.A. Ambros-Ingerson and S. Steel. </author> <title> Integrating Planning, Execution and Monitoring. </title> <booktitle> In Proc. 7th AAAI, </booktitle> <year> 1988. </year>
Reference-contexts: What is novel about our framework is that we explicitly consider the issues involved in ensuring systematicity, and preserving user-intent in such partially hierarchical domains. Some previous systems, including IPEM <ref> [ 1 ] </ref> and DPOCL [ 24 ] , attempted to explicitly combine task reduction and plan-space planning. Neither of these approaches however guarantees an integration that ensures systematicity and preservation of user-intent.
Reference: [ 2 ] <author> A. Barrett and D. Weld. </author> <title> Task Decomposition via Plan Parsing. </title> <booktitle> In Proc. AAAI-94. </booktitle>
Reference-contexts: However, much of the formalization of planning algorithms has been confined to traditional action-based planning approaches such as plan-space and state-space planning. The few existing formalizations of HTN planning, such as <ref> [ 8; 2 ] </ref> , tend to start from scratch instead of building on top of the well-understood action-based formalizations. <p> Informally, the only acceptable solutions are those that not only achieve the top-level goals upon execution, but can also be parsed in terms of the non-primitive actions that are provided to support those top-level goals <ref> [ 2 ] </ref> . We also say that such solutions respect (preserve) user-intent. <p> This approach, that we can call bottom-up HTN planning, has been advocated by Barrett and Weld <ref> [ 2 ] </ref> . ing step t 0 . <p> In theory, it is also possible to represent partially hierarchical domains in existing HTN planners such as SIPE [ 22 ] and O-Plan [ 7 ] , as well as in the existing HTN formalizations <ref> [ 8; 2 ] </ref> . For every undominated primitive action, we simply introduce a non-primitive action and a degenerate reduction schema that reduces it to the primitive action.
Reference: [ 3 ] <author> A. Blum and M. Furst, </author> <title> Fast planning through planning graph analysis, </title> <booktitle> Proc. of IJCAI-95, </booktitle> <pages> 1636-1642. </pages>
Reference-contexts: These suffer from two inherent disadvantages: First, they make it harder to transfer the progress being made in scaling-up traditional planners (e.g <ref> [ 3; 15; 14 ] </ref> ) to hierarchical planning. Second, perhaps more important, most real-world domains tend to be partially hierarchical in that human expertise, in the form of task reduction knowledge, exists for only some parts of the domain. <p> Second and perhaps more important, our work also helps us exploit recent progress on action-based planners, including SATPLAN [ 15 ] and Graphplan <ref> [ 3 ] </ref> , in the context of HTN planners [ 14 ] . Indeed, some of our ongoing work involves adapting the planning as satisfiability approach to HTN planning [ 17 ] . As in this paper, our HTN encodings are obtained by generalizing the encodings for action-based planning.
Reference: [ 4 ] <author> D. Chapman. </author> <title> Planning for conjunctive goals. </title> <journal> Artificial Intelligence, </journal> <volume> 32:333377, </volume> <year> 1987. </year>
Reference-contexts: (1) Interval Preservation Con straints (IPCs) of the form (t p t 0 ) which demand that a condition p be preserved between steps t and t 0 , and (2) Point Truth Constraints (PTCs) of the form p ! t which demand that a condition p be necessarily true <ref> [ 4 ] </ref> in the situation be fore the step t. Algorithm UCP (P) /*Returns refinements of P */ 0. Termination Check: If a minimal candidate of P is a solution to the problem, return it and terminate. 1. Progressive Refinement: Select and apply a (progressive) refinement.
Reference: [ 5 ] <author> S. Chien, T. Estlin and X. Wang. </author> <title> An argument for hybrid HTN/Operator Planning. </title> <booktitle> In Proc. 4th European Conference on Planning. </booktitle> <year> 1997. </year>
Reference-contexts: Planners that use such action reduction (also called task reduction) schemas have come to be known as hierarchical task network (HTN) planners. HTN planners, such as SIPE [ 22 ] , O-Plan [ 7 ] and VICAR <ref> [ 5 ] </ref> have been used in several industrial applications. However, much of the formalization of planning algorithms has been confined to traditional action-based planning approaches such as plan-space and state-space planning. <p> Our approach also provides clear semantics of plans containing non-primitive actions, and thus explains the essential differences between the completeness results of plan-space and HPS refinements. Another research effort that allows combination of HTN and plan-space planning approaches is that of Chien and his co-workers <ref> [ 5 ] </ref> . They argue that the HTN and plan-space techniques should be kept separate, with the former working on activity goals while the latter work on state goals. Domain information pertaining to these techniques is also kept separate.
Reference: [ 6 ] <author> S. Chien. </author> <title> Static and Completion analysis for planning knowledge base development and verification. </title> <booktitle> In Proc. </booktitle> <address> AIPS-96, </address> <year> 1996. </year>
Reference-contexts: Surprisingly, there is very little acknowledgement of the importance of this validation in the literature on applications of HTN planning; Chien's work on applying HTN planning to a NASA image processing domain is a refreshing exception <ref> [ 6 ] </ref> . 3.2 Modeling schemas and action reduction The only extension required to the partial plan representation described in Section 2 to handle HTN planning is to allow non-primitive actions into the plan.
Reference: [ 7 ] <author> K. Currie and A. Tate. O-Plan: </author> <title> The Open Planning Architecture. </title> <journal> Artificial Intelligence, </journal> <volume> 51(1), </volume> <year> 1991. </year>
Reference-contexts: Planners that use such action reduction (also called task reduction) schemas have come to be known as hierarchical task network (HTN) planners. HTN planners, such as SIPE [ 22 ] , O-Plan <ref> [ 7 ] </ref> and VICAR [ 5 ] have been used in several industrial applications. However, much of the formalization of planning algorithms has been confined to traditional action-based planning approaches such as plan-space and state-space planning. <p> Our use of primary effects here is similar to (and explains the motivation behind) the to-do and use-only-for slots in the Nonlin [ 21 ] and O-Plan <ref> [ 7 ] </ref> reduction schemas, and the purpose slots in SIPE's [ 22 ] reduction schemas. <p> As in this paper, our HTN encodings are obtained by generalizing the encodings for action-based planning. In theory, it is also possible to represent partially hierarchical domains in existing HTN planners such as SIPE [ 22 ] and O-Plan <ref> [ 7 ] </ref> , as well as in the existing HTN formalizations [ 8; 2 ] . For every undominated primitive action, we simply introduce a non-primitive action and a degenerate reduction schema that reduces it to the primitive action.
Reference: [ 8 ] <author> K. Erol. </author> <title> Hierarchical task network planning: Formalization, Analysis and Implementation, </title> <type> Ph.D thesis, </type> <institution> Dept. of computer science, Univ. of Maryland, College Park, </institution> <year> 1995. </year>
Reference-contexts: However, much of the formalization of planning algorithms has been confined to traditional action-based planning approaches such as plan-space and state-space planning. The few existing formalizations of HTN planning, such as <ref> [ 8; 2 ] </ref> , tend to start from scratch instead of building on top of the well-understood action-based formalizations. <p> In theory, it is also possible to represent partially hierarchical domains in existing HTN planners such as SIPE [ 22 ] and O-Plan [ 7 ] , as well as in the existing HTN formalizations <ref> [ 8; 2 ] </ref> . For every undominated primitive action, we simply introduce a non-primitive action and a degenerate reduction schema that reduces it to the primitive action.
Reference: [ 9 ] <author> K. Erol, J. Hendler, D.S. Nau and R. Tsuneto. </author> <title> A critical look at critics in HTN planning. </title> <booktitle> In Proc. IJCAI-95, </booktitle> <year> 1995. </year>
Reference: [ 10 ] <author> O. Etzioni, K. Golden and D. Weld. </author> <title> Sound and efficient closed-world reasoning for planning. </title> <booktitle> Artificial Intelligence, </booktitle> <pages> 89(1-2), 113148. </pages>
Reference-contexts: A fully hierarchicalized domain is denoted in shorthand by hierarchicalized (). 1 This approach of keeping track of hi-erarchicalization of a domain in terms of individual conditions is akin to keeping track of completeness of a knowledge base with localized closed world assumptions <ref> [ 10 ] </ref> .
Reference: [ 11 ] <author> S. Kambhampati, C. Knoblock and Q. Yang. </author> <title> Planning as Refinement Search: </title>
Reference-contexts: Providing a principled framework for hybrid HTN and action-based planning is the main objective of this paper. To show how HTN planning can co-exist with action-based planning, we extend the unified refinement planning framework that we had developed earlier for action-based planning <ref> [ 11; 12; 13 ] </ref> to cover HTN planning. Our existing framework covers the full spectrum of action-based planning approaches by characterizing plan-space and state-space planners as independent refinements operating on a uniform plan representation [ 12 ] . <p> For example, if a partial plan contains a single action a, then any action sequence that does not contain at least one instance of a can not belong to the candidate set of that plan (see <ref> [ 11; 13 ] </ref> for more details). The shortest length candidates of a plan are called its minimal candidates, and these correspond to the ground linearizations of the plan that satisfy all auxiliary constraints. <p> Such approaches facilitate planning in partially hierarchical domains. We presented such a hybrid planning framework by extending our existing refinement planning framework for action-based planning <ref> [ 11; 13; 12 ] </ref> . The extensions involve considering non-primitive actions and their reduction schemas as part of the domain specification, and generalizing the traditional refinements to handle plans containing non-primitive actions. We illustrated the issues involved in such generalization in the context of plan-space and conflict resolution refinements.
References-found: 11

