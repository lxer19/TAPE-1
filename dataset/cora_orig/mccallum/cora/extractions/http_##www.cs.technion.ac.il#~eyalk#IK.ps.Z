URL: http://www.cs.technion.ac.il/~eyalk/IK.ps.Z
Refering-URL: http://www.cs.technion.ac.il/~eyalk/pub.html
Root-URL: 
Email: f  
Title: players jointly share a secret random input r 2 R (as a tuple over a
Author: m i M i i r) t-privately. i M i (b; r). 
Note: The  1, such that no coalition of size t has any information on r. (E.g., each entry of r may be formed by  (This can be done efficiently in a constant number of rounds by the assump tion made on the M i 's). The messages m i are used to reconstruct  P 1  The players cooperate in t-privately computing the  
Abstract: diffL, respectively), it suffices to make the following obser-vation. Given two Branching Programs BP 1 ; BP 2 , and a prime p, there exists BP 3 whose size is polynomial in the sizes of BP 1 ; BP 2 and in log p, such that the number of accepting paths in BP 3 (on every input) equals modulo-p to the difference of the corresponding numbers in BP 1 ; BP 2 . Such BP 3 may be constructed by concatenating a constant graph with (p 1) s t paths to BP 2 , thus multiplying its number of accepting paths by p 1, and then combining the resultant BP with BP 1 , adding up their number of accepting computation paths. Proof sketch for Theorem 5. We address each of the two cases separately. Case 1: If the message computation functions are (k; t)-easy, then the following efficient protocol computes the function f t-privately in a constant number of rounds: Case 2: If the reconstruction function is (k; t)-easy, we may use the following protocol: construction function. Proof of Corollary 4. All message functions M i (x i ; r) in the protocols of Section 3 consist of multiplying and adding a constant number of matrices over a finite field, thus having computationally efficient constant-round private protocols (even using the basic protocol of [9]). However, there is still a subtle problem associated with finding the right representation for R. The message computation functions, M i , do not seem to be easy when applied to uniformly-random strings of field elements, since our PSM protocols require the use of special kinds of random matrices, namely nonsingular matrices and matrices with determinant 1. Fortunately, a sub-protocol from [5] can be used to efficiently compute t-private, random nonsingular matrices from independent, uniformly-random field elements in a constant (expected) number of rounds. Finally, t-private shared random matrices with determinant 1 may be created by a t-private multiplication of t + 1 random matrices with determinant 1 picked by different parties. Such a multiplication can be efficiently carried out in a constant number of rounds using the protocol of [5]. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E. Allender, R. Beals, and M. Ogihara. </author> <title> The complexity of matrix rank and feasible systems of linear equations (extended abstract). </title> <booktitle> In Proc. of 28nd STOC, </booktitle> <pages> pages 503-513, </pages> <year> 1996. </year>
Reference: [2] <author> E. Allender and M. Ogihara. </author> <title> Relationaships among PL, #L, and the determinant. </title> <booktitle> In Proc. 9th Annual Structure in Complexity Theory, </booktitle> <pages> pages 267-278, </pages> <year> 1994. </year>
Reference: [3] <author> L. Babai and P. Kimmel. </author> <title> Randomized simultaneous messages. </title> <type> Technical Report TR-96-10, </type> <institution> University of Chicago, </institution> <year> 1996. </year>
Reference: [4] <author> J. Balcazar, J. Diaz, and J. Gabarro. </author> <title> Structural Complexity, volume I. </title> <publisher> Springer-Verlag, </publisher> <year> 1988. </year>
Reference: [5] <author> J. Bar-Ilan and D. Beaver. </author> <title> Non-cryptographic fault-tolerant computing in a constant number of rounds. </title> <booktitle> In Proc. of 8th PODC, </booktitle> <pages> pages 201-209, </pages> <year> 1989. </year>

References-found: 5

