URL: http://www.eecs.umich.edu/techreports/cse/1994/CSE-TR-214-94.ps.gz
Refering-URL: http://www.eecs.umich.edu/home/techreports/cse94.html
Root-URL: http://www.eecs.umich.edu
Email: e-mail: rundenst@eecs.umich.edu e-mail: spencer@eecs.umich.edu  
Phone: telephone: (313) 936-2971 telephone: (313) 764-8065 fax: (313) 763-1503 fax: (313) 764-4133  
Title: AN ACTIVE OODB SYSTEM FOR GENOME PHYSICAL MAP ASSEMBLY  
Author: A. J. Lee E. A. Rundensteiner and S. Thomas 
Note: Human Genome Center, 2570C MSRB II  
Address: Ann Arbor, MI 48109-2122  
Affiliation: Software Systems Research Laboratory Information Technology and Networking Department of Electrical Engineering and Computer Science University of Michigan Medical Center University of Michigan,  
Abstract: In this paper, we describe the design and implementation of a scientific database for the map assembly tasks performed by the geneticists at the University of Michigan Human Genome Center. Our system not only manages complex genomic data, but it also supports the automation of the associated map assembly tasks. For the former, we present a genomic object model that integrates both experimental and derived data. For the latter, we describe operators to automate some of the analysis steps, such as inferring overlap information using transitivity rules. Strongly motivated by the need of the physical map assembly task for both inferencing capabilities as well as object modeling power, we have designed and implemented an active object-oriented database (OODB) system, called Crystal, on the GemStone OODB. Crystal seamlessly integrates rule inferencing with complex object modeling and other typical database capabilities, thus avoiding the overhead in moving data between systems for rule processing and data management, and eliminating data mismatch in these different representations. Crystal executes inferencing automatically, without explicitly having to initiate rule execution, and responds to the incremental addition of new experimental data. In this paper, we also discuss the implementation of the genome information model and physical map assembly inferencing system on top of Crystal. In conclusion, we provide a walk-through example and several experimental results that demonstrate how our approach can be used to effectively support physical contig assembly. fl The authors are grateful for partial financial support from the NIH under grant NIH #P30HG00209-03.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Allen, J. F., </author> <title> "Maintaining Knowledge About Temporal Intervals", </title> <journal> CACM, November 1983, </journal> <volume> Volume 26, </volume> <pages> pp 832-843. </pages>
Reference-contexts: When we view DNA fragments and probes as intervals, the ordering refinement hierarchy we have designed is related to the work in the temporal reasoning domain <ref> [1] </ref>. Temporal reasoning deals with events and relationships between events. However, in the temporal domain there is a simple global orientation. This is different from the genome domain, where we are more likely to be able to infer only relative ordering information. <p> On the other hand, the results of our system are objects directly stored in the database, hence they can be shared by users. Ordering and orientation of the relationships among DNA fragments are two essential concepts in our project. We find the work of Allen <ref> [1] </ref> and Letovsky and Berlyn [19] closely related at this aspect. Allen [1] lists all possible relationships between temporal intervals assuming complete information about their durations, and presents a transitivity table for these relationships. <p> Ordering and orientation of the relationships among DNA fragments are two essential concepts in our project. We find the work of Allen <ref> [1] </ref> and Letovsky and Berlyn [19] closely related at this aspect. Allen [1] lists all possible relationships between temporal intervals assuming complete information about their durations, and presents a transitivity table for these relationships. <p> Letovsky and Berlyn [19] use local ordering windows to represent such relative orderings. Their work deals only with points rather than intervals. We combine the `interval' concept <ref> [1] </ref> and the `window' idea [19] to solve the DNA fragment ordering problem. ICRF contig programs [21] have used heuristic or optimization approaches for ordering clone libraries. We use a rule-based approach to establish possible orderings, generate physical maps, and react to new insertions of experimental data.
Reference: [2] <author> Anwar, E., Maugis, L., and Chakravarthy, S., </author> <title> "A New Perspective on Rule Support for Object-Oriented Databases", </title> <booktitle> SIGMOD, </booktitle> <year> 1993, </year> <pages> pp. 99-108. </pages>
Reference-contexts: The fundamental design decisions required to build Crystal can be summarized as follows: * Rule integration with object modeling. There are several alternative design choices for rules, namely rules can be (1) declared within class definitions, (2) specified as data member values, or (3) treated as independent objects <ref> [2] </ref>. The main disadvantage of the first and second alternative is that the rule's existence is dependent on the existence of other objects. Therefore, rules cannot be created, modified, and deleted at runtime. Furthermore, they could not continue to exist if changes on the class definition became necessary. <p> This will considerably improve the performance of Crystal. We also are exploring mechanisms for relaxing the pattern matching process [3] to further improve performance. 6 RELATED WORK 6.1 Active OODBs Active database research has become an increasingly important research area in the last few years. ADAM [8] and Sentinel <ref> [2] </ref> are the systems probably most closely related to Crystal. All three systems treat events and rules as first class objects. ADAM only supports a rule scope of classes, Sentinel and Crystal support both class and instance-level rule scopes. Crystal and Sentinel associate different meanings with the term "class-level" rules. <p> Currently, Crystal only supports primitive method events that are sufficient for production rule type of systems as required by our genomic application. Complex events, as reported by other systems <ref> [2] </ref>, have not been addressed. Lastly, Crystal encapsulates unnecessary details of active system support from the application developer, whenever possible. Hence, event signaling in Crystal is transparent to the application users.
Reference: [3] <author> Brant, D. A., Grose, T., Lofaso, B, and Miranker, D. P., </author> <title> "Effects of Database Size on Rule System Performance: Five Case Studies," </title> <booktitle> In Proc. of VLDB, </booktitle> <address> Barcelona, </address> <month> Sept. </month> <year> 1991, </year> <pages> pp. 287-296. </pages>
Reference-contexts: This will considerably improve the performance of Crystal. We also are exploring mechanisms for relaxing the pattern matching process <ref> [3] </ref> to further improve performance. 6 RELATED WORK 6.1 Active OODBs Active database research has become an increasingly important research area in the last few years. ADAM [8] and Sentinel [2] are the systems probably most closely related to Crystal.
Reference: [4] <author> Carrano, A. V. et al., </author> <title> "Constructing Chromosome- And Region-Specific Cosmid Maps Of The Human Genome", </title> <journal> Genome, </journal> <volume> 31, </volume> <pages> pp. 1059-1065, </pages> <year> 1989. </year>
Reference-contexts: Genes encode information about how and when to form the proteins that govern the daily functioning of the human body, and range in size from about 1,000 to 2 million base pairs long. The physical mapping process <ref> [4] </ref> first separates the chromosomes from the nucleus, then breaks them up into smaller pieces, which are inserted into the genome of lower organisms, e.g., bacteria, where they can be replicated rapidly and in large amounts. The resulting DNA fragments (clones) are then used for future experiments. <p> Genomic experiments reveal pairwise or higher-order relationships between genomic pieces of DNA fragments, such as loci, markers, genes, YACs, cosmids, STSs, etc <ref> [4] </ref>. In this task, genome researchers have to deal with massive amounts of complex genomic data from experiments and analysis. The concept of ordering and orientation is fundamental to our system.
Reference: [5] <author> Cattell, R. G. </author> <title> G.,"Object data management : object-oriented and extended relational database systems", </title> <publisher> Addison-Wesley, </publisher> <year> 1991. </year>
Reference-contexts: We first introduce the genome object model [18] we designed to capture the genomic objects and their interrelationships. These range from raw experimental data over analytically derived data, up to metadata describing, for instance, the data sources. Our model is developed using object-oriented database (OODB) technology <ref> [5] </ref> since the latter provides powerful modeling constructs for capturing such complex genomic information naturally and efficiently. We are interested in supporting the task of creating a contig map, assembling overlapping DNA fragments into a contiguous stretch. The concept of ordering and orientation is thus fundamental to our model.
Reference: [6] <author> Cormen, T. H., Leiserson, F. E., and Rivest, R. L., </author> <booktitle> "Introduction To Algorithms", </booktitle> <pages> pp 469-476, </pages> <year> 1991. </year>
Reference: [7] <author> Dayal, U., and Widom, J., </author> <title> "Active Database Systems", Tutorial, </title> <booktitle> 1992 ACM SIGMOD International Conference on Management of Data. </booktitle>
Reference: [8] <author> Diaz, O., Paton, N., and Gray, P., </author> <title> "Rule Management in Object-Oriented Databases: A Unified Approach," </title> <booktitle> In Proc. of VLDB, </booktitle> <address> Barcelona, </address> <month> Sept. </month> <year> 1991. </year>
Reference-contexts: This will considerably improve the performance of Crystal. We also are exploring mechanisms for relaxing the pattern matching process [3] to further improve performance. 6 RELATED WORK 6.1 Active OODBs Active database research has become an increasingly important research area in the last few years. ADAM <ref> [8] </ref> and Sentinel [2] are the systems probably most closely related to Crystal. All three systems treat events and rules as first class objects. ADAM only supports a rule scope of classes, Sentinel and Crystal support both class and instance-level rule scopes.
Reference: [9] <author> Durbin, R. and Tierry-Mieg, J., </author> <title> "A C Elegans Database," </title> <note> documentation from FTP distribution at NCBI. </note>
Reference-contexts: Unlike rules, these methods and their respective interactions cannot be as easily added, modified, and deleted dynamically. Other systems for storing and displaying genomic information are mostly, or completely, oriented towards display of generally static data. ACEDB <ref> [9] </ref>, for example, has very good display modes for map information. <p> Our system allows incremental development of the data base as new experimental data is added, and provides for the identification of inconsistent information in ordering relationships and the potential of resolution of such situations. A key characteristic that distinguishes our physical map assembler from other approaches, such as <ref> [9] </ref> and [21], is its use of a rule-based mechanism and its smooth integration with OODB capabilities. We have demonstrated that our approach is feasible by building a prototype of the physical mapping tool using Crystal.
Reference: [10] <author> Evans, G. A., </author> <title> "Combinatoric Strategies For Genome Mapping", </title> <journal> BioEssays, </journal> <volume> Vol. 13, No. 1, </volume> <month> January </month> <year> 1991. </year>
Reference: [11] <author> Forgy C. L., </author> <title> "Rete: A Fast Algorithm For The Many Pattern/Many Object Pattern Match Problem", </title> <journal> Artificial intelligence, </journal> <year> 1982, </year> <pages> pp 17-37. </pages>
Reference-contexts: If only a small percentage of objects in the database is changed each cycle, then the matching process is fast. The costs of this more efficient incremental matching algorithm are that each rule must remember its partial matches. Among the different incremental matching algorithms, Rete <ref> [11] </ref> offers memory support and condition relationship aids. A major disadvantage of the Rete algorithm is that it uses a lot of memory space to store the partial match information.
Reference: [12] <author> Freksa, C., </author> <title> "Temporal Reasoning Based On Semi-Intervals", </title> <booktitle> Artificial Intelligence 54, </booktitle> <pages> pp 199-227, </pages> <year> 1992. </year>
Reference: [13] <author> French, J. C. Jones, A. K., and Pfaltz, J. L., </author> <title> "Scientific Database Management", </title> <institution> University of Virginia, </institution> <type> Technical Report 90-21, </type> <institution> Dept. of Computer Science, </institution> <month> Aug. </month> <year> 1990. </year>
Reference-contexts: Given that the database is in control of both rule and data management, it can effectively optimize rule processing for all applications. This is an increasingly critical issue given the expected size of scientific databases, such as those maintaining the human genome data <ref> [13] </ref>. 8 Passive DBMS Active DBMS Application A &lt; C B &lt; C B &lt; C A &lt; C Expert System If: X &lt; Y Then: X &lt; Z (a) Passive Database System (b) Active Database System Active DBMS = DB + inferencing capabilities 3 CRYSTAL: THE ACTIVE GEM Strongly motivated
Reference: [14] <author> Frenkel, K. A., </author> <title> "The Human Genome Project and Informatics", </title> <journal> CACM, Nov. </journal> <volume> 91, Vol. 34, No. 11, </volume> <pages> pp 41-51. </pages>
Reference-contexts: There is on-going research, however, on developing object models to capture complex genetic data types. For example, Goodman <ref> [14] </ref> also advocates utilizing OODB technology for the informatics support of genome mapping projects. The focus of Goodman's work [14] is on genetic rather than physical map construction. <p> There is on-going research, however, on developing object models to capture complex genetic data types. For example, Goodman <ref> [14] </ref> also advocates utilizing OODB technology for the informatics support of genome mapping projects. The focus of Goodman's work [14] is on genetic rather than physical map construction. In [16], Honda et al. describe an object model for genome data that covers several levels of resolution, including genome maps, DNA sequences, and gene sequences.
Reference: [15] <author> Guidi, J. N. and T. H. Roderick, </author> <title> "Inference of Order in Genetic Systems," The First Internal. </title> <booktitle> Conf. on Intelligent Systems for Molecular Biology, </booktitle> <month> July </month> <year> 1993. </year>
Reference: [16] <author> Honda, S., Parrot, N. W., Smith, R., and Lawrence, C., </author> <title> "An Object Model for Genome Information at All Levels of Resolution," </title> <booktitle> Proc. of 26th Annual Hawaii Internat. Conf. on System Sciences, </booktitle> <volume> Vol. I, </volume> <pages> pp. 564 - 573, </pages> <year> 1993. </year>
Reference-contexts: There is on-going research, however, on developing object models to capture complex genetic data types. For example, Goodman [14] also advocates utilizing OODB technology for the informatics support of genome mapping projects. The focus of Goodman's work [14] is on genetic rather than physical map construction. In <ref> [16] </ref>, Honda et al. describe an object model for genome data that covers several levels of resolution, including genome maps, DNA sequences, and gene sequences.
Reference: [17] <author> Kotz-Dittrich, A., </author> <title> "Adding Active Functionality to an Object-Oriented Database System aLayered Approach," </title> <booktitle> Proc. GI Fachtagung, Datenbankensysteme in Buero, Technologie, and Wissenschaft, </booktitle> <address> BTW 93, Braunschweig, 1993, </address> <publisher> Springer Verlag. </publisher>
Reference-contexts: On the other hand, in Sentinel begin of message (bom) and end of message (eom) must be embedded in each class definition by the application user. Kotz-Dittrich <ref> [17] </ref> has also done experimental work on adding active functionality to GemStone. However, while our emphasis is on production rules, i.e., the processing of complex conditions, she has not addressed this issue.
Reference: [18] <author> Lee, A. J., Rundensteiner, E. A., Thomas, S., and Lafortune S., </author> <title> "An Information Model for Genome Map Representation and Assembly." </title> <booktitle> ACM 2nd Int. Conf. on Information and Knowledge Management (CIKM '93), </booktitle> <month> Nov. </month> <year> 1993. </year>
Reference-contexts: In this paper, we describe the design and implementation of a scientific database system for supporting this physical map assembly task performed by scientists of the Michigan Human Genome Center. We first introduce the genome object model <ref> [18] </ref> we designed to capture the genomic objects and their interrelationships. These range from raw experimental data over analytically derived data, up to metadata describing, for instance, the data sources. <p> By inspection, it can be seen that the overlap (A,B) relationship must hold in the combined LOF i;j . A complete set of these rules can be found in <ref> [18] </ref> (see also Appendix). Firing LOF composition rules always reduces the total number of ordering relationships in the database at least by one, because a LOF composition rule is based on two ordering relationships either having the same orientation or the opposite orientation. <p> That is to say a map may contain more than one contig. To build the contig (s), we consider only relationships with known connectivity. In this example, we build the contig (s) using the following overlapping relationships: ND&lt;(y4,y3), O (y7,y4), O (y4,y1), ND&lt;(y3,y1). Using the algorithm described in <ref> [18] </ref>, we construct the contig "y4-y3-y1" depicted in generated by our system. The fragment y2 is not used in the contig, because it is covered by y1 [ y3. An Example with Conflicting Ordering Relationships: Here, we briefly describe an example that leads to the discovery of conflicting ordering relationships.
Reference: [19] <author> Letovsky, S. and Berlyn, M. B., "CPROP: </author> <title> A Rule-Based Program For Constructing Genetic Maps", </title> <booktitle> Genomics 12, </booktitle> <pages> pp 435-446, </pages> <year> 1992. </year>
Reference-contexts: Since this local orientation may not conform with the global orientation, we have introduced the local orientation frame concept (LOF). The local orientation frame is similar in spirit to the orientation windows introduced in CPROP <ref> [19] </ref> for orderings between points. A LOF allows us to represent the knowledge that a set of relationships exhibits the same orientation, without having to specify whether this orientation corresponds to the original orientation of the complete chromosome. <p> Ordering and orientation of the relationships among DNA fragments are two essential concepts in our project. We find the work of Allen [1] and Letovsky and Berlyn <ref> [19] </ref> closely related at this aspect. Allen [1] lists all possible relationships between temporal intervals assuming complete information about their durations, and presents a transitivity table for these relationships. <p> The main difference between Allen's work and our work is that the ordering of temporal intervals is always global, while the ordering in our genome 21 domain is relative to some local reference point. Letovsky and Berlyn <ref> [19] </ref> use local ordering windows to represent such relative orderings. Their work deals only with points rather than intervals. We combine the `interval' concept [1] and the `window' idea [19] to solve the DNA fragment ordering problem. <p> Letovsky and Berlyn <ref> [19] </ref> use local ordering windows to represent such relative orderings. Their work deals only with points rather than intervals. We combine the `interval' concept [1] and the `window' idea [19] to solve the DNA fragment ordering problem. ICRF contig programs [21] have used heuristic or optimization approaches for ordering clone libraries. We use a rule-based approach to establish possible orderings, generate physical maps, and react to new insertions of experimental data.
Reference: [20] <author> Miranker, D. P., </author> <title> "TREAT: A New And Efficient Match Algorithm For AI Production Systems", </title> <publisher> Pitman Publishing, </publisher> <pages> pp 13-47. </pages>
Reference-contexts: That implies only a small percentage of rules are affected by the changes in the database. It is possible to take advantage of temporal redundancy to have a more efficient matching algorithm. There are several alternatives <ref> [20] </ref> that can make the overall matching process more efficient, such as providing condition membership (i.e., alpha memory size), memory support (i.e., alpha memory), and condition relationship (i.e., beta memory). <p> Among the different incremental matching algorithms, Rete [11] offers memory support and condition relationship aids. A major disadvantage of the Rete algorithm is that it uses a lot of memory space to store the partial match information. TREAT <ref> [20] </ref> is another incremental matching algorithm without the space storage penalty, because not all partial match information, in particular partial join results, are stored. TREAT provides memory support only. In this project, we have adopted a TREAT-like algorithm in the context of OODBs. Crystal uses the incrementing matching algorithm, TREAT [20], <p> <ref> [20] </ref> is another incremental matching algorithm without the space storage penalty, because not all partial match information, in particular partial join results, are stored. TREAT provides memory support only. In this project, we have adopted a TREAT-like algorithm in the context of OODBs. Crystal uses the incrementing matching algorithm, TREAT [20], to incrementally update its memory support. That is, after the initialization stage a rule checks its condition part only when subscribed events are sent to it. When a rule receives an event signal, it passes this message to its predicates.
Reference: [21] <author> Mott, R., Grigoriev, A., Maier, E., Hoheisel, J., and Lehrach, H., </author> <title> "Algorithms and Software Tools for Ordering Clone Libraries: Application to the Mapping of the Genome of Schizosaccharomyces Pombe", </title> <journal> Nucleic Acids Research, 1993, </journal> <volume> Vol. 21, No. 8, </volume> <pages> pp. 1965-1974. </pages>
Reference-contexts: While recently several approaches for developing support tools for physical map assembly have been proposed in the literature, they typically use heuristic or optimization approaches <ref> [21, 25] </ref>. The rule-based approach is appropriate for several reasons. First, the domain is data-driven, that is, we can use the available set of known facts (i.e., data about the experimental data) to draw further conclusions about fragment orderings. Second, the experimental data is often uncertain and ambiguous. <p> They generally get and store their data in special-purpose data files, rather that directly integrating with an OODB <ref> [21] </ref>. On the other hand, the results of our system are objects directly stored in the database, hence they can be shared by users. Ordering and orientation of the relationships among DNA fragments are two essential concepts in our project. <p> Letovsky and Berlyn [19] use local ordering windows to represent such relative orderings. Their work deals only with points rather than intervals. We combine the `interval' concept [1] and the `window' idea [19] to solve the DNA fragment ordering problem. ICRF contig programs <ref> [21] </ref> have used heuristic or optimization approaches for ordering clone libraries. We use a rule-based approach to establish possible orderings, generate physical maps, and react to new insertions of experimental data. <p> A key characteristic that distinguishes our physical map assembler from other approaches, such as [9] and <ref> [21] </ref>, is its use of a rule-based mechanism and its smooth integration with OODB capabilities. We have demonstrated that our approach is feasible by building a prototype of the physical mapping tool using Crystal.
Reference: [22] <author> Pecherer, R., </author> <title> "Contig Graph Tool: A Graphical Interface For Contig Physical Map Assembly", </title> <booktitle> Hawaii Int. Conf. on System Sciences, </booktitle> <volume> Vol. I, </volume> <pages> pp. 544-553, </pages> <year> 1993. </year>
Reference: [23] <author> Prerau, D. S., </author> <title> "Developing and Managing Expert Systems", </title> <publisher> Addison-Wesley, </publisher> <year> 1990. </year>
Reference-contexts: Second, the experimental data is often uncertain and ambiguous. A known advantage of rule-based systems is their ability to deal with uncertain data <ref> [23] </ref>, i.e., it is straightforward to incorporate certainty factors into the rule-based system. Third, the mapping process is not yet completely understood.
Reference: [24] <author> Rumbaugh, J., Blaha, M., Premerlani, W., Eddy, F., and Lorensen, W., </author> <title> "Object-Oriented Modeling and Design", </title> <publisher> Prentice Hall, </publisher> <year> 1991. </year> <month> 23 </month>

References-found: 24

