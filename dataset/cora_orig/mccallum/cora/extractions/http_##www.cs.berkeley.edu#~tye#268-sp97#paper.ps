URL: http://www.cs.berkeley.edu/~tye/268-sp97/paper.ps
Refering-URL: http://www.cs.berkeley.edu/~tye/268-sp97/
Root-URL: 
Email: tye@cs.berkeley.edu  jacobsen@icsi.berkeley.edu  randy@cs.berkeley.edu  
Title: Mobile awareness in a wide area wireless network of  
Author: info-stations Tao Ye H.-Arno Jacobsen Randy Katz 
Keyword: Mobile aware application design, network of info-stations, prefetching, location dependency  
Note: Corresponding author  
Address: Berkeley, CA 94704  1947 Center Street, Suit 600 Berkeley, CA 94704  Berkeley, CA 94704  
Affiliation: University of California, Berkeley Computer Science Devision  International Computer Science Institute  University of California, Berkeley Computer Science Devision  
Abstract: Wireless networking is becoming an increasingly important communication means, yet high wide area wireless data connectivity is still severely limited. It is difficult and expensive to achieve high and consistent bandwidth coverage in a wide area, due to technological and physical limitations. To alleviate these problems, we propose to study an alternative layout of the wireless network by placing many high bandwidth areas of info-stations in the low bandwidth network. The location and distribution of the individual stations is crucial for the network's overall effectiveness, as demonstrated by our measurements. The info-stations are deployed in a transparent manner, often not geographically visible to an interacting user. This entails the importance of a mobile aware application design which needs to account for changing network characteristics by optimally utilizing the network resources. We simulate the network layout and benchmark it by experimenting with an incremental map downloading application on the road that uses intelligent prefetching to take advantage of the network layout. The prefetching algorithm uses location and speed information to predict future data access. Our experiments show substantial performance improvement of the mobile aware application in the info-station network over a mobile unaware application in a conventional wide area network. The prefetching algorithm proves to hide latency from the user better than a mobile unaware prefetching algorithm. The results also suggest that info-stations only need to cover small areas but need to be deployed frequently, as opposed to a wide coverage with less frequent stations. 
Abstract-found: 1
Intro-found: 1
Reference: <institution> References </institution>
Reference: [ACM96] <editor> ACM. </editor> <title> Building Reliable Mobile-Aware Applications using the Rover Toolkit, </title> <booktitle> 2nd International Conference on Mobile Computing and Networking (MobiCom'96)., </booktitle> <month> Nov </month> <year> 1996. </year>
Reference-contexts: Snoop TCP ([Mob95]) and previous indirect TCP ([Dis95]) works proposed transport layer protocol improvement for wireless networks. [Arc96] showed how proxy support could be used in wireless network. But we would like to demonstrate how to improve performance from the application level. Other applications such as Rover toolkit <ref> [ACM96] </ref> investigate the possibility of more disconnected operation but they are not emphasized on high mobility as in a driving condition. In this paper, we use simulation to investigate the effectiveness of info-station networking, mobile aware applications and their synergetic effects.
Reference: [AFZ95] <author> S. Acharya, M. J. Franklin, and S. Zdonik. </author> <title> Dissemination-based data delivery using broadcast disks. </title> <journal> IEEE Personal Communications, </journal> <volume> 2(6), </volume> <month> Dec </month> <year> 1995. </year>
Reference-contexts: There, the information retrieved will be of interest to other users traveling in the same region. These kind of tasks are therefore more apt for a dissemination kind of approach, as discussed by Acharya et al. <ref> [AFZ95] </ref>, and Franklin and Zdonik [FZ96]. by info-stations. The circle around them denote the cells of the regular low bandwidth wireless wide area network (this map is only an illustration, it doesn't corresponds to any real cellular network cells).
Reference: [AFZ96] <author> S. Acharya, M. Franklin, and S. Zdonik. </author> <title> Disseminating updates on broadcast disks. </title> <booktitle> In 22nd International Conference on Very Large Data Bases (VLDB 96), </booktitle> <address> Bombay, India, </address> <month> Sep </month> <year> 1996. </year>
Reference-contexts: The incremental map downloading strategy is particularly interesting since the amount of information that needs to be transferred to the client is in general large, imposing additional constraints on the application and link. A dissemination based approach as studied in <ref> [AFZ96] </ref> would therefore not be feasible here. Downloading the complete map is not desired because the user might not need all the details of the areas along the highway, therefore wasting bandwidth.
Reference: [Arc96] <editor> Architectural Support for Programming Languages and Operating Systems. </editor> <title> Adapting to network and client variability via on-demand dynamic distillation, </title> <address> Cambridge, MA, </address> <month> May </month> <year> 1996. </year>
Reference-contexts: Some work [BW96] in event signaling has already been done to support this mobile awareness. [Wat94] has pointed out several design rules for mobile applications. Snoop TCP ([Mob95]) and previous indirect TCP ([Dis95]) works proposed transport layer protocol improvement for wireless networks. <ref> [Arc96] </ref> showed how proxy support could be used in wireless network. But we would like to demonstrate how to improve performance from the application level.
Reference: [Bad] <author> B. R. Badrinath. Infostations. </author> <note> http://athos.rutgers.edu/ badri/dataman/info.html. </note>
Reference-contexts: We believe that higher performance can be achieved by combining smart network layout with efficient applications design. Traditional cellular networks assume that all cell sizes are kept constant and all cells have uniform capability. But all cells offer low bandwidth for data traffic. One idea <ref> [Bad] </ref> is to layout the wireless network such that lots of concentrated, high bandwidth "information islands" lie in a sea of relatively low bandwidth coverage. Such a network configuration provides high bandwidth, but discontinuously. <p> Our approach is closer to this latter category of pull-based applications. We assume an exclusive request-response type environment, for now. The retrieved data is read-only. The idea of placing infostations, "pockets of high bit rate connectivity", in a wireless network to enhance connectivity is presented by Badrinath in <ref> [Bad] </ref>. Badrinath, however, aims to support stationary "information kiosks", where mobile users can download e-mail, fax, news and local information. We are more interested in supporting an infrastructure for non-stationary moving clients. Moreover, we assume that the interacting user herself does not directly know where the info-station is located. <p> We are more interested in supporting an infrastructure for non-stationary moving clients. Moreover, we assume that the interacting user herself does not directly know where the info-station is located. We are primarily interested in studying the network layout which is not the case in <ref> [Bad] </ref>. since there, the network needs to be layed out in a manner convenient for the interacting users, e.g. at the traffic light, or at the airport entrance [Bad]. <p> We are primarily interested in studying the network layout which is not the case in <ref> [Bad] </ref>. since there, the network needs to be layed out in a manner convenient for the interacting users, e.g. at the traffic light, or at the airport entrance [Bad]. The utility of wireless data access to documents and maps in the field has been discussed by Morey [IEE97] who studies the tradeoff between different delivery and retrieval techniques on a conceptual basis.
Reference: [BI94] <author> D. Barbara and T. Imielinski. Sleepers and workaholics: </author> <title> Cacheing strategies in mobile environments. </title> <booktitle> In ACM SIGMOD International Conference on Management of Data, </booktitle> <address> Minneapolis, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: More pull-based applications are discussed in <ref> [BI94] </ref>, [Jin95] and [WYC96] with particular focus on cache consistency protocols for page updates. Other examples include, but are not limited to, information retrieval systems, mail-order catalogue services, mutual fund information services and software help desks. Our approach is closer to this latter category of pull-based applications.
Reference: [BW96] <author> B. R. Badrinath and G. Welling. </author> <title> Event deliver abstraction for mobile computing. </title> <type> Technical report, </type> <institution> Brown University, </institution> <year> 1996. </year>
Reference-contexts: Most of today's application is not network aware. We need to establish the connection between the changing network availability (in and out of info-station zone) and the applications. Some work <ref> [BW96] </ref> in event signaling has already been done to support this mobile awareness. [Wat94] has pointed out several design rules for mobile applications. <p> It's possible that such coupling could happen in the network layer, as suggested in [DCS96], but we leave that as a future network layer design option. The mechanisms used for notifying the application of network variation events such as high bandwidth availability are discussed in <ref> [BW96] </ref>. 6 3 Modeling the mobile environment We study the wireless mobile computing environment as a network simulation. The environment contains a network of info-stations, a mobile client and a server. The mobile client is modeled to travel in the environment requesting data pages from the server.
Reference: [CB92] <author> T. V. Chen and J. L. Baer. </author> <title> Reducing memory latencies via non-blocking and prefetch-ing caches. </title> <booktitle> In ASPLOS-V, </booktitle> <month> Oct </month> <year> 1992. </year>
Reference-contexts: Prefetching has been widely studied and applied to improve system performance in different areas ranging from software system design to hardware design. E.g. in database systems [Sto81], operating systems [PGS93], in language compilers [Tri79] and microprocessors design <ref> [CB92] </ref> have prefetching techniques been successfully implemented. Prefetching techniques can be broadly classified into two categories: access-history-driven and user-driven algorithms. The former class comprises techniques which infer user access patterns by monitoring the user's request stream.
Reference: [CKV93] <author> K. Curewitz, P. Krishnan, and J. S. Vitter. </author> <title> Practical prefetching via data compression. </title> <booktitle> In ACM SIGMOD, </booktitle> <address> Wahsington, D.C., </address> <month> May </month> <year> 1993. </year>
Reference-contexts: The algorithm deduces a model of the user's behavior which it updates dynamically according to the changing request pattern. This model is used to predict the next k user requests which should be loaded into the cache to prevent cache misses. Numerous work is based on these ideas, e.g., <ref> [CKV93] </ref>, [KE91], [PZ91], [GA94], and [FS96]. Our approach is closer to the algorithms of the second class | user driven or user hinted prefetching. These approaches assume some kind of information provided by the user or the system that hints the prefetching. These ideas are not new.
Reference: [Cor96] <author> Intel Corperation. "cnn-at-work". </author> <note> http://www.intel.com/comm-net/cnn-work/index.html, 1996. </note>
Reference-contexts: These systems cover a wide range of applications, Katz, for example, proposes a wireless classroom [Kat94]; a news delivery service over wireless and wired media is discussed in [Gif94] and <ref> [Cor96] </ref>, respectively; a stock quotation service is described in [OPSS93], and a travelor information system is presented in [SL94]. More pull-based applications are discussed in [BI94], [Jin95] and [WYC96] with particular focus on cache consistency protocols for page updates.
Reference: [Dag88] <author> J. Dagpunar. </author> <title> Principles of Random Variable Generation. </title> <publisher> Oxford Science Publications, </publisher> <year> 1988. </year>
Reference-contexts: SrvDBSize) and m a dynamically varying value derived from the location and speed measurements of the client location. Page requests are generated according to a generalized, two-parametric Zipf distribution. These distributions are often used to model skewed local access behavior (e.g. [Knu81], [FZ96] and <ref> [Dag88] </ref>). Figure 5 shows a typical sample drawn according 9 info-station parameters bandwidth 3 Mbit delay 50 msec time in info station vary with experiments Table 3: info-station parameters.
Reference: [DCS96] <author> DCS'96. </author> <title> To send or not to send: Implementing deferred transmission in a mobile host, </title> <institution> Hong Kong, </institution> <month> May </month> <year> 1996. </year>
Reference-contexts: In the later sections we demonstrate the benefits of such application-network coupling over an application that is unaware of the network variation. It's possible that such coupling could happen in the network layer, as suggested in <ref> [DCS96] </ref>, but we leave that as a future network layer design option. The mechanisms used for notifying the application of network variation events such as high bandwidth availability are discussed in [BW96]. 6 3 Modeling the mobile environment We study the wireless mobile computing environment as a network simulation.
Reference: [Dis95] <institution> Distributed Computing Systems. Indirect TCP for mobile hosts, </institution> <month> May </month> <year> 1995. </year>
Reference: [Fir94] <institution> First World Congress on Applications of Transport Telematics and Intelligent Vehicle-Highway Systems. </institution> <note> Realization of the European digital road map from concepts to commercialization, </note> <year> 1994. </year>
Reference-contexts: Discussion of services and market possibilities based on the availability 17 of navigable digital map databases in Europe and the US can be found in <ref> [Fir94, IEE96] </ref> and [IEE97]. To the best of our knowledge has no other approach discussed the explicit application of incremental map downloading for mobile clients.
Reference: [Fra97] <author> M. J. Franklin. </author> <title> Push vs. pull. Talk given in DBLUNCH at UC Berkeley, </title> <month> may </month> <year> 1997. </year>
Reference-contexts: We plan to extend this work by additionally incorporating a push-based server model which will allow us to quantitatively study the tradeoff between push and pull-based information retrieval in wireless 18 networks, as has recently been proposed qualitatively by Franklin <ref> [Fra97] </ref>. Presently we assume that an info-station is primarily deployed to implement the idea of a high bandwidth low latency region in the wide area wireless network. This concept can certainly be extended.
Reference: [FS96] <author> S. Acharya M. J. Franklin and S.Zdonik. </author> <title> Prefetching from a broadcast disk. </title> <booktitle> In 12th Int'l Conference on Data Engineering (ICDE 96), </booktitle> <year> 1996. </year>
Reference-contexts: This model is used to predict the next k user requests which should be loaded into the cache to prevent cache misses. Numerous work is based on these ideas, e.g., [CKV93], [KE91], [PZ91], [GA94], and <ref> [FS96] </ref>. Our approach is closer to the algorithms of the second class | user driven or user hinted prefetching. These approaches assume some kind of information provided by the user or the system that hints the prefetching. These ideas are not new.
Reference: [FZ96] <author> M. J. Franklin and S. </author> <title> Zdonik. </title> <journal> Dissemination-based information systems. IEEE Data Engineering Bulletin, </journal> <volume> 19(3), </volume> <month> Sep </month> <year> 1996. </year>
Reference-contexts: There, the information retrieved will be of interest to other users traveling in the same region. These kind of tasks are therefore more apt for a dissemination kind of approach, as discussed by Acharya et al. [AFZ95], and Franklin and Zdonik <ref> [FZ96] </ref>. by info-stations. The circle around them denote the cells of the regular low bandwidth wireless wide area network (this map is only an illustration, it doesn't corresponds to any real cellular network cells). <p> SrvDBSize) and m a dynamically varying value derived from the location and speed measurements of the client location. Page requests are generated according to a generalized, two-parametric Zipf distribution. These distributions are often used to model skewed local access behavior (e.g. [Knu81], <ref> [FZ96] </ref> and [Dag88]). Figure 5 shows a typical sample drawn according 9 info-station parameters bandwidth 3 Mbit delay 50 msec time in info station vary with experiments Table 3: info-station parameters.
Reference: [GA94] <author> J. Grifeon and R. Appleton. </author> <title> Reducing file system latency using a predictive approach. </title> <booktitle> In USENIX Summer Tech. Conf., </booktitle> <month> June </month> <year> 1994. </year> <month> 20 </month>
Reference-contexts: This model is used to predict the next k user requests which should be loaded into the cache to prevent cache misses. Numerous work is based on these ideas, e.g., [CKV93], [KE91], [PZ91], <ref> [GA94] </ref>, and [FS96]. Our approach is closer to the algorithms of the second class | user driven or user hinted prefetching. These approaches assume some kind of information provided by the user or the system that hints the prefetching. These ideas are not new.
Reference: [Gif94] <author> D. Gifford. </author> <title> Ploychannel systems for mass digital communications. </title> <journal> CACM, </journal> <volume> 33(2), </volume> <month> Feb </month> <year> 1994. </year>
Reference-contexts: These systems cover a wide range of applications, Katz, for example, proposes a wireless classroom [Kat94]; a news delivery service over wireless and wired media is discussed in <ref> [Gif94] </ref> and [Cor96], respectively; a stock quotation service is described in [OPSS93], and a travelor information system is presented in [SL94]. More pull-based applications are discussed in [BI94], [Jin95] and [WYC96] with particular focus on cache consistency protocols for page updates.
Reference: [IEE96] <editor> IEEE Intelligent Vehicles Symposium. </editor> <title> The navigable digital street map is the critical success factor for vehicle navigation and transport information systems in Europe, </title> <month> Sep </month> <year> 1996. </year>
Reference-contexts: Discussion of services and market possibilities based on the availability 17 of navigable digital map databases in Europe and the US can be found in <ref> [Fir94, IEE96] </ref> and [IEE97]. To the best of our knowledge has no other approach discussed the explicit application of incremental map downloading for mobile clients.
Reference: [IEE97] <institution> IEEE Colloquium on Engineering the Benefits of Geographical Information Systems. Mass storage for delivery of maps and documents to the field, </institution> <month> Feb </month> <year> 1997. </year>
Reference-contexts: The utility of wireless data access to documents and maps in the field has been discussed by Morey <ref> [IEE97] </ref> who studies the tradeoff between different delivery and retrieval techniques on a conceptual basis. Discussion of services and market possibilities based on the availability 17 of navigable digital map databases in Europe and the US can be found in [Fir94, IEE96] and [IEE97]. <p> the field has been discussed by Morey <ref> [IEE97] </ref> who studies the tradeoff between different delivery and retrieval techniques on a conceptual basis. Discussion of services and market possibilities based on the availability 17 of navigable digital map databases in Europe and the US can be found in [Fir94, IEE96] and [IEE97]. To the best of our knowledge has no other approach discussed the explicit application of incremental map downloading for mobile clients. Related work is discussed by Schilit and Theimer [ST94] who address the problem of object location information distribution in local areas, such as buildings and campuses.
Reference: [Inc88] <author> Sun Microsystems Inc. Sun OS Reference Manal, </author> <year> 1988. </year>
Reference-contexts: These ideas are not new. For example Trivedi [Tri79], suggested programmer or compiler generated hints for prepaging. Informed prefetching has been well studied and commercially applied, e.g. Sun Microsystems' operating systems provide several system calls to influence the virtual memory replacement and allocation policies <ref> [Inc88] </ref>. Patterson et al. [PGS93] propose an approach that lets each application announce its future file requirements which are used by the operating system to optimize future file accesses.
Reference: [Inc95] <institution> Metricom Inc. Ricochet Network. </institution> <note> http://www.Mapquest.com, 1995. </note>
Reference-contexts: It is difficult and expensive to cover wide areas with high data rate, due to the physical limitations, such as signal attenuation, multipath fade and shadowing effects. Currently, both CDPD and GSM networks offer a range of 5-10kbps as transfer rate. The microcell network, Ricochet <ref> [Inc95] </ref>, by Metricom Inc. provides up to 28.8kpbs bandwidth, but does not support mobility. More sophisticated radio engineering can alleviate this problem to some extent, but at a much higher price.
Reference: [Jin95] <author> J. Jing. </author> <title> Bit sequences: A new cache invalidation method in mobile environments. </title> <type> Technical Report CSC-TR-94-074, </type> <institution> Computer Science Department, Purdue University, </institution> <note> revised 95. </note>
Reference-contexts: More pull-based applications are discussed in [BI94], <ref> [Jin95] </ref> and [WYC96] with particular focus on cache consistency protocols for page updates. Other examples include, but are not limited to, information retrieval systems, mail-order catalogue services, mutual fund information services and software help desks. Our approach is closer to this latter category of pull-based applications.
Reference: [Kat94] <author> R. Katz. </author> <title> Adaptation and mobility in wireless information systems. </title> <journal> IEEE Personal Communications, 1st Quarter, </journal> <year> 1994. </year>
Reference-contexts: These systems cover a wide range of applications, Katz, for example, proposes a wireless classroom <ref> [Kat94] </ref>; a news delivery service over wireless and wired media is discussed in [Gif94] and [Cor96], respectively; a stock quotation service is described in [OPSS93], and a travelor information system is presented in [SL94].
Reference: [KE91] <author> D. Kotz and C. S. Ellis. </author> <title> Practical prefeteching techniques for parallel file systems. </title> <booktitle> In First PDIS, </booktitle> <address> Miami beach Fl, </address> <month> Dec </month> <year> 1991. </year>
Reference-contexts: This model is used to predict the next k user requests which should be loaded into the cache to prevent cache misses. Numerous work is based on these ideas, e.g., [CKV93], <ref> [KE91] </ref>, [PZ91], [GA94], and [FS96]. Our approach is closer to the algorithms of the second class | user driven or user hinted prefetching. These approaches assume some kind of information provided by the user or the system that hints the prefetching. These ideas are not new.
Reference: [Knu81] <author> D. Knuth. </author> <booktitle> The Art of Computer Programming, volume II. </booktitle> <publisher> Addison Wesley, </publisher> <year> 1981. </year>
Reference-contexts: SrvDBSize) and m a dynamically varying value derived from the location and speed measurements of the client location. Page requests are generated according to a generalized, two-parametric Zipf distribution. These distributions are often used to model skewed local access behavior (e.g. <ref> [Knu81] </ref>, [FZ96] and [Dag88]). Figure 5 shows a typical sample drawn according 9 info-station parameters bandwidth 3 Mbit delay 50 msec time in info station vary with experiments Table 3: info-station parameters.
Reference: [KS92] <author> J. Kistler and M. Satyanarayanan. </author> <title> Disconnected operation in coda file system. </title> <journal> ACM Trans. of Computer Systems, </journal> <volume> 10(1):3(25), </volume> <month> Feb </month> <year> 1992. </year>
Reference: [Map96] <author> Mapquest. Mapquest. </author> <note> http://www.Mapquest.com, 1996. </note>
Reference-contexts: The objective of Map-On-Move is to deliver maps on demand for instantaneous route planning or emergency use. It can be seen as a 'mobilized' version of an Internet map service, like Mapquest <ref> [Map96] </ref>. During the course of a trip the user inputs the source and the destination of the trip, Map-On-Move will then retrieve the corresponding top level map that highlights the route. As she drives along more detailed map segments of her current location are fetched. 1 .
Reference: [Mcc92] <author> S. Mccanne. </author> <title> Network simulation - ns. </title> <note> http://www-mash.cs.berkeley.edu/ns, 1992. </note>
Reference-contexts: Adapted from [TY96]. 4.1 Experimental methodology and experimental setup All experiments are performed with the network simulator ns <ref> [Mcc92] </ref>, which we extend with a client-server model incorporating different caching and prefetching strategies. The primary performance metric used to monitor the application, is the average response time as perceived by the user. Each experiment is repeated five times for a given set of parameter values. <p> Furthermore, we found by benchmarking different network topologies. that small but frequent info-station coverage is better suited for the applications studied then other network topologies. Moreover, our work contributes an extensible framework for modeling mobile client-server-type applications to 'ns' <ref> [Mcc92] </ref>. This model allows one to set up nodes which incorporate different caching strategies and perform prefetching in a wireless environment. Acknowledgement We thank Tom Henderson and Emile Sahouria for their help with setting up the client-server model within the network simulator. 19
Reference: [Mob95] <author> Mobile Computing and Networking. </author> <title> Improving TCP/IP performance over wireless networks, </title> <institution> Hong Kong, </institution> <month> Nov </month> <year> 1995. </year>
Reference: [OPSS93] <author> B. Oki, M. Pfluegel, A. Siegel, and D. Skeen. </author> <title> The object bus: An architecture for extensible distributed systems. </title> <booktitle> In 14h SOSP, </booktitle> <month> Dec </month> <year> 1993. </year>
Reference-contexts: These systems cover a wide range of applications, Katz, for example, proposes a wireless classroom [Kat94]; a news delivery service over wireless and wired media is discussed in [Gif94] and [Cor96], respectively; a stock quotation service is described in <ref> [OPSS93] </ref>, and a travelor information system is presented in [SL94]. More pull-based applications are discussed in [BI94], [Jin95] and [WYC96] with particular focus on cache consistency protocols for page updates.
Reference: [PGS93] <author> H. Patterson, G. Gibson, and M. Satyanarayanan. </author> <title> A status report on research in transparent informed prefetching. SIGOPS, </title> <journal> Operating Systems Review, </journal> <volume> 27(2) </volume> <pages> 21-34, </pages> <month> April </month> <year> 1993. </year>
Reference-contexts: To alleviate user perceived latencies have caching and prefetching techniques been successfully employed for a long time. Prefetching has been widely studied and applied to improve system performance in different areas ranging from software system design to hardware design. E.g. in database systems [Sto81], operating systems <ref> [PGS93] </ref>, in language compilers [Tri79] and microprocessors design [CB92] have prefetching techniques been successfully implemented. Prefetching techniques can be broadly classified into two categories: access-history-driven and user-driven algorithms. The former class comprises techniques which infer user access patterns by monitoring the user's request stream. <p> These ideas are not new. For example Trivedi [Tri79], suggested programmer or compiler generated hints for prepaging. Informed prefetching has been well studied and commercially applied, e.g. Sun Microsystems' operating systems provide several system calls to influence the virtual memory replacement and allocation policies [Inc88]. Patterson et al. <ref> [PGS93] </ref> propose an approach that lets each application announce its future file requirements which are used by the operating system to optimize future file accesses. Research in database system design has argued for the incorporation of application level knowledge for prefetching of data, see for example [Sto81].
Reference: [PZ91] <author> M. Palmer and S. Zdonik. </author> <title> Fido: A cache that learns to fetch. </title> <booktitle> In VLDB, </booktitle> <address> Barcelona, </address> <year> 1991. </year>
Reference-contexts: This model is used to predict the next k user requests which should be loaded into the cache to prevent cache misses. Numerous work is based on these ideas, e.g., [CKV93], [KE91], <ref> [PZ91] </ref>, [GA94], and [FS96]. Our approach is closer to the algorithms of the second class | user driven or user hinted prefetching. These approaches assume some kind of information provided by the user or the system that hints the prefetching. These ideas are not new.
Reference: [SL94] <author> S. Shekhar and D. Liu. </author> <title> Genesis and advanced traveler information systems(a tis): </title> <booktitle> Killer applications for mobile computing. In Mobidata Workshop, </booktitle> <address> NeBrunswick, NJ, </address> <month> Nov </month> <year> 1994. </year> <institution> Rutgers Univ. </institution>
Reference-contexts: These systems cover a wide range of applications, Katz, for example, proposes a wireless classroom [Kat94]; a news delivery service over wireless and wired media is discussed in [Gif94] and [Cor96], respectively; a stock quotation service is described in [OPSS93], and a travelor information system is presented in <ref> [SL94] </ref>. More pull-based applications are discussed in [BI94], [Jin95] and [WYC96] with particular focus on cache consistency protocols for page updates. Other examples include, but are not limited to, information retrieval systems, mail-order catalogue services, mutual fund information services and software help desks.
Reference: [ST94] <author> B. N. Schilit and M. N. Theimer. </author> <title> Disseminating active map information to mobile hosts. </title> <journal> IEEE Network, </journal> <pages> pages 22-32, </pages> <month> Sept Oct </month> <year> 1994. </year>
Reference-contexts: To the best of our knowledge has no other approach discussed the explicit application of incremental map downloading for mobile clients. Related work is discussed by Schilit and Theimer <ref> [ST94] </ref> who address the problem of object location information distribution in local areas, such as buildings and campuses. Their aim, however, is to provide a single "active map service" for the entire environment that keeps track of location and characteristics of objects.
Reference: [Sto81] <author> M. Stonebraker. </author> <title> Operating system support for database management. </title> <journal> In Communication of the ACM, </journal> <volume> volume 24, </volume> <month> July 81. </month>
Reference-contexts: To alleviate user perceived latencies have caching and prefetching techniques been successfully employed for a long time. Prefetching has been widely studied and applied to improve system performance in different areas ranging from software system design to hardware design. E.g. in database systems <ref> [Sto81] </ref>, operating systems [PGS93], in language compilers [Tri79] and microprocessors design [CB92] have prefetching techniques been successfully implemented. Prefetching techniques can be broadly classified into two categories: access-history-driven and user-driven algorithms. The former class comprises techniques which infer user access patterns by monitoring the user's request stream. <p> Patterson et al. [PGS93] propose an approach that lets each application announce its future file requirements which are used by the operating system to optimize future file accesses. Research in database system design has argued for the incorporation of application level knowledge for prefetching of data, see for example <ref> [Sto81] </ref>. Techniques referred to as stashing and hoarding are used in mobile computing environments ([KS92], [TLAC95]). These approaches are very similar to prefetching. Their focus is more on improving availability of the data in the system as opposed to directly influencing performance gain.
Reference: [TLAC95] <author> C. Tait, H. Lei, S. Acharya, and H. Chang. </author> <title> Intelligent file hoarding for mobile computers. </title> <booktitle> In ACM Conf. on Mobile Computing and Networking, </booktitle> <address> Berkeley, CA, </address> <month> Nov </month> <year> 1995. </year>
Reference-contexts: Research in database system design has argued for the incorporation of application level knowledge for prefetching of data, see for example [Sto81]. Techniques referred to as stashing and hoarding are used in mobile computing environments ([KS92], <ref> [TLAC95] </ref>). These approaches are very similar to prefetching. Their focus is more on improving availability of the data in the system as opposed to directly influencing performance gain. Our work is in line with the user-driven prefetching algorithms.
Reference: [Tri79] <author> K. Trivedi. </author> <title> An analysis of prepaging. </title> <journal> Computing, </journal> <volume> 3(22), </volume> <year> 1979. </year>
Reference-contexts: Prefetching has been widely studied and applied to improve system performance in different areas ranging from software system design to hardware design. E.g. in database systems [Sto81], operating systems [PGS93], in language compilers <ref> [Tri79] </ref> and microprocessors design [CB92] have prefetching techniques been successfully implemented. Prefetching techniques can be broadly classified into two categories: access-history-driven and user-driven algorithms. The former class comprises techniques which infer user access patterns by monitoring the user's request stream. <p> Our approach is closer to the algorithms of the second class | user driven or user hinted prefetching. These approaches assume some kind of information provided by the user or the system that hints the prefetching. These ideas are not new. For example Trivedi <ref> [Tri79] </ref>, suggested programmer or compiler generated hints for prepaging. Informed prefetching has been well studied and commercially applied, e.g. Sun Microsystems' operating systems provide several system calls to influence the virtual memory replacement and allocation policies [Inc88].
Reference: [Wat94] <author> T. Watson. </author> <title> Application design for wireless computing. </title> <booktitle> In IEEE Workshop on Mobile computing, </booktitle> <month> Dec </month> <year> 1994. </year>
Reference-contexts: Most of today's application is not network aware. We need to establish the connection between the changing network availability (in and out of info-station zone) and the applications. Some work [BW96] in event signaling has already been done to support this mobile awareness. <ref> [Wat94] </ref> has pointed out several design rules for mobile applications. Snoop TCP ([Mob95]) and previous indirect TCP ([Dis95]) works proposed transport layer protocol improvement for wireless networks. [Arc96] showed how proxy support could be used in wireless network.
Reference: [WYC96] <author> K. L. Wu, P.S. Yu, and M. S. Chen. </author> <title> Energy-efficient caching for wireless mobile computing. </title> <booktitle> In Twelfth International Conference on Data Engineering, </booktitle> <pages> pages 336-43, </pages> <address> Los Alamitos, CA, USA, </address> <month> Feb </month> <year> 1996. </year> <month> 22 </month>
Reference-contexts: More pull-based applications are discussed in [BI94], [Jin95] and <ref> [WYC96] </ref> with particular focus on cache consistency protocols for page updates. Other examples include, but are not limited to, information retrieval systems, mail-order catalogue services, mutual fund information services and software help desks. Our approach is closer to this latter category of pull-based applications.
References-found: 42

