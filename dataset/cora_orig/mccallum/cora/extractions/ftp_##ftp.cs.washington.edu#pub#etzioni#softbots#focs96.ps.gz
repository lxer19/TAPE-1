URL: ftp://ftp.cs.washington.edu/pub/etzioni/softbots/focs96.ps.gz
Refering-URL: http://www.cs.washington.edu/research/projects/softbots/www/papers.html
Root-URL: 
Title: Efficient Information Gathering on the Internet (extended abstract)  
Author: O. Etzioni S. Hanks T. Jiang R. M. Karp O. Madani k O. Waarts flfl 
Abstract: The Internet offers unprecedented access to information. At present most of this information is free, but information providers are likely to start charging for their services in the near future. With that in mind this paper introduces the following information access problem: given a collection of n information sources, each of which has a known time delay, dollar cost and probability of providing the needed information, find an optimal schedule for querying the information sources. We study several variants of the problem which differ in the definition of an optimal schedule. We first consider a cost model in which the problem is to minimize the expected total cost (monetary and time) of the schedule, subject to the requirement that the schedule may terminate only when the query has been answered or all sources have been queried unsuccessfully. We develop an approximation algorithm for this problem and for an extension of the problem in which more than a single item of information is being sought. We then develop approximation algorithms for a reward model in which a constant reward is earned if the information is successfully provided, and we seek the schedule with the maximum expected difference between the reward and a measure of cost. The monetary and time costs may either appear in the cost measure or be constrained not to exceed a fixed upper bound; these options give rise to four different variants of the reward model. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> O. Etzioni, S. Hanks, T. Jiang and O. Madani. </author> <title> Optimal Information Gathering on the Internet with Time and Cost Constraints. </title> <type> Manuscript 1996. </type>
Reference-contexts: The algorithm is based on the ratio- 1 2 algorithm for single-batch schedules, but it also involves some new ideas. Due to lack of space, most proofs are omitted or only sketched. The proofs for the cost model appear in [2] and those for the reward model appear in <ref> [1] </ref>. 1.2 Related Work Scheduling problems have been studied in many contexts including scheduling on parallel machines, processor allocation, etc. (see [8] for a survey).
Reference: [2] <author> O. Etzioni, R. M. Karp, and O. Waarts. </author> <title> Efficient Access to Information Sources on the Internet. </title> <type> Manuscript 1996. </type>
Reference-contexts: The algorithm is based on the ratio- 1 2 algorithm for single-batch schedules, but it also involves some new ideas. Due to lack of space, most proofs are omitted or only sketched. The proofs for the cost model appear in <ref> [2] </ref> and those for the reward model appear in [1]. 1.2 Related Work Scheduling problems have been studied in many contexts including scheduling on parallel machines, processor allocation, etc. (see [8] for a survey).
Reference: [3] <author> P. Feigin and G. Harel. </author> <title> Minimizing costs of personnel testing programs. </title> <journal> Naval Research Logistics Quarterly 29, </journal> <pages> 87-95, </pages> <year> 1982. </year>
Reference-contexts: max E [S (O) T (O)] TT: max E [S (O)] (w/reward) s.t. 8O D (O) & s.t. 8O D (O) & and T (O) t cost linear (no reward) CO: min E [D (O) + T (O)] paper is the ability to query any number of sources in parallel. <ref> [3, 5] </ref> study scheduling tasks with unlimited parallelism with some similarity to the LL and CO models, but the positive results in [3, 5] are limited to an exponential-time dynamic programming algorithm and some heuristics. 2 The Cost Model 2.1 Batch Schedules for a Single Item of Information Issuing the query <p> and T (O) t cost linear (no reward) CO: min E [D (O) + T (O)] paper is the ability to query any number of sources in parallel. <ref> [3, 5] </ref> study scheduling tasks with unlimited parallelism with some similarity to the LL and CO models, but the positive results in [3, 5] are limited to an exponential-time dynamic programming algorithm and some heuristics. 2 The Cost Model 2.1 Batch Schedules for a Single Item of Information Issuing the query to information source i is referred to as performing job i.
Reference: [4] <author> M. Garey. </author> <title> Optimal task scheduling with precedence constraints. </title> <journal> Discrete Mathematics, </journal> <volume> 4, </volume> <month> 37-56 </month> <year> (1973). </year>
Reference-contexts: In addition, in our problem, once an answer is obtained, no other queries need be made. If we constrain the schedules to be sequential, then an optimal solution can be found in polynomial time (see subsection 3.2 for the LT case). Similar problems have been addressed in <ref> [4, 13] </ref> and elsewhere.
Reference: [5] <author> M. Henig and D. Simchi-Levy. </author> <title> Scheduling tasks with failure probabilities to minimize expected cost. </title> <journal> Naval Research Logistics 37,99-109, </journal> <year> 1990. </year>
Reference-contexts: max E [S (O) T (O)] TT: max E [S (O)] (w/reward) s.t. 8O D (O) & s.t. 8O D (O) & and T (O) t cost linear (no reward) CO: min E [D (O) + T (O)] paper is the ability to query any number of sources in parallel. <ref> [3, 5] </ref> study scheduling tasks with unlimited parallelism with some similarity to the LL and CO models, but the positive results in [3, 5] are limited to an exponential-time dynamic programming algorithm and some heuristics. 2 The Cost Model 2.1 Batch Schedules for a Single Item of Information Issuing the query <p> and T (O) t cost linear (no reward) CO: min E [D (O) + T (O)] paper is the ability to query any number of sources in parallel. <ref> [3, 5] </ref> study scheduling tasks with unlimited parallelism with some similarity to the LL and CO models, but the positive results in [3, 5] are limited to an exponential-time dynamic programming algorithm and some heuristics. 2 The Cost Model 2.1 Batch Schedules for a Single Item of Information Issuing the query to information source i is referred to as performing job i.
Reference: [6] <author> O. Ibarra and C. Kim. </author> <title> Fast approximation algorithms for the knapsack and sum of subsets problems. </title> <journal> Journal of the ACM 22, </journal> <pages> 463-368, </pages> <year> 1975. </year>
Reference-contexts: Turning now to the reward model, we show that finding an optimal schedule is NP-hard in each of the four cases. A fully polynomial time approximation scheme (FPTAS) is obtained for the model TT, using an extension of the well-known rounding technique for Knapsack <ref> [6] </ref>. The FPTAS also works for the model TL under a weak assumption: that every source is "profitable" individually according to the TL objective function, i.e. for every source i, p i t i 0. <p> The main idea is the rounding technique introduced in <ref> [6] </ref> for Knapsack. It is easy to see that, in model TL, an optimal schedule should be in fact a single-batch schedule. Let P = fi 1 ; : : : ; i m g be a single-batch schedule, where t i 1 t i m .
Reference: [7] <author> B. Krulwich. </author> <title> The BargainFinder agent: Comparison price shopping on the Internet. Bots and Other Internet Beasties. </title> <year> 1996. </year>
Reference-contexts: Valuable information sources include on-line travel agents, nationwide Yellow Pages, job listing services, on-line malls, and many more. Currently, most of this information is available free of charge, and as a result parallel search tools such as MetaCrawler [12] and Bar-gainFinder <ref> [7] </ref> respond to requests by querying numerous information sources simultaneously to maximize the information provided and minimize delay.
Reference: [8] <author> E. L. Lawler, J. K. Lenstra, A. H. G. Rinnooy Kan, and D. B. Shmoys. </author> <title> Sequencing and Scheduling: Algorithms and Complexity. Designing Decision Support Systems Notes NFL 11.89/03, </title> <institution> Eindhoven University of Technology, </institution> <year> 1989. </year>
Reference-contexts: The proofs for the cost model appear in [2] and those for the reward model appear in [1]. 1.2 Related Work Scheduling problems have been studied in many contexts including scheduling on parallel machines, processor allocation, etc. (see <ref> [8] </ref> for a survey). Our Internet-inspired query scheduling problem has a unique flavor, however, due to the need to balance the competing time and cost constraints on schedules with unbounded parallelism. In addition, in our problem, once an answer is obtained, no other queries need be made.
Reference: [9] <institution> New York Times, </institution> <month> June 7, </month> <year> 1992 </year>
Reference-contexts: Sci., McMaster Univer sity, Hamilton, Ont L8S 4K1, Canada. jiang@maccs.mcmaster.ca -U. of Washington. karp@cs.washington.edu k U. of Washington. madani@cs.washington.edu flfl U. of California at Berkeley. Work supported in part by NSF postdoctoral fellowship. waarts@cs.berkeley.edu providers are likely to start charging for their services in the near future <ref> [9] </ref>. Billing protocols to support an "information marketplace" have been announced by large players such as Visa and Microsoft [11] and by researchers [14]. Once billing mechanisms are in place, Internet users will have to balance speedy access to information against the cost of obtaining that information.
Reference: [10] <author> S. Sahni. </author> <title> Approximation algorithms for the 0/1-knapsack problem. </title> <journal> Journal of the ACM 22, </journal> <pages> 115-124, </pages> <year> 1975. </year>
Reference-contexts: For any constant r &gt; 1, the PTAS runs in time O (n r+1 ) to achieve an approximation ratio r1 r+1 . The algorithms are simple and are similar to the ones in <ref> [10] </ref> for Knapsack, but the analyses are different and are more so phisticated. We then design an approximation algorithm with ratio 1 6 for optimal k-batch schedules, running in time O (kn 2 ). <p> a single-batch schedule P is just a set of sources, and our goal is to maximize V (P) = (1 i2P (1 p i )) i2P d i : A Ratio 1 2 Approximation Algorithm Our algorithm, Pick-a-Star, is somewhat similar to the greedy approximation algorithm for Knapsack given in <ref> [10] </ref>, though the analysis of its performance is more complex. Pick-a-Star sorts the sources in ascending order of the ratio d i =p i .
Reference: [11] <institution> Secure Transaction Technology. </institution> <note> In http://www.visa.com/cgi-bin/vee/sf/set/intro.html. </note>
Reference-contexts: Work supported in part by NSF postdoctoral fellowship. waarts@cs.berkeley.edu providers are likely to start charging for their services in the near future [9]. Billing protocols to support an "information marketplace" have been announced by large players such as Visa and Microsoft <ref> [11] </ref> and by researchers [14]. Once billing mechanisms are in place, Internet users will have to balance speedy access to information against the cost of obtaining that information.
Reference: [12] <author> E. Selberg and O. Etzioni. </author> <title> Multi-service search and comparison using the MetaCrawler. </title> <booktitle> Proc. 4th World Wide Web Conf., </booktitle> <pages> 195-208, </pages> <address> Boston, MA, </address> <year> 1995. </year>
Reference-contexts: Valuable information sources include on-line travel agents, nationwide Yellow Pages, job listing services, on-line malls, and many more. Currently, most of this information is available free of charge, and as a result parallel search tools such as MetaCrawler <ref> [12] </ref> and Bar-gainFinder [7] respond to requests by querying numerous information sources simultaneously to maximize the information provided and minimize delay.
Reference: [13] <author> H. Simon and J. Kadane. </author> <title> Optimal problem-solving search: all-or-none solutions. </title> <booktitle> Artificial Intelligence 6, </booktitle> <pages> 235-247, </pages> <year> 1975. </year>
Reference-contexts: In addition, in our problem, once an answer is obtained, no other queries need be made. If we constrain the schedules to be sequential, then an optimal solution can be found in polynomial time (see subsection 3.2 for the LT case). Similar problems have been addressed in <ref> [4, 13] </ref> and elsewhere.
Reference: [14] <author> M. Sirbu, and J.D. Tygar. NetBill: </author> <title> An Internet Commerce System Optimized for Network Delivered Services. </title> <note> Manuscript 1995. To appear in IEEE CompCon Conference. </note>
Reference-contexts: Work supported in part by NSF postdoctoral fellowship. waarts@cs.berkeley.edu providers are likely to start charging for their services in the near future [9]. Billing protocols to support an "information marketplace" have been announced by large players such as Visa and Microsoft [11] and by researchers <ref> [14] </ref>. Once billing mechanisms are in place, Internet users will have to balance speedy access to information against the cost of obtaining that information. Clearly, the speediest information gathering plan would be to query every potential information source simultaneously, but that plan may well be prohibitively expensive.
References-found: 14

