URL: http://vlsicad.cs.ucla.edu/~abk/papers/conference/c74.ps
Refering-URL: http://vlsicad.cs.ucla.edu/~abk/publications.html
Root-URL: http://www.cs.ucla.edu
Email: fcaldwell,abk,stefanus,imarkovg@cs.ucla.edu  
Title: IMPLICATIONS OF AREA-ARRAY I/O FOR ROW-BASED PLACEMENT METHODOLOGY  
Author: A. E. Caldwell, A. B. Kahng, S. Mantik and I. L. Markov 
Address: Los Angeles, CA 90095-1596  
Affiliation: UCLA Computer Science Dept.,  
Abstract: We empirically study the implications of area-array I/O for placement methodology. Our work develops a three-axis testbed that examines (1) I/O regime (area-array vs. peripheral pad locations), (2) I/O and core placement methodology (variants of alternating vs. simultaneous I/O and core placement approaches), and (3) placement engine (hierarchical quadratic for both core and I/O cells vs. pure min-cut for core cells and assignment for I/O). Experimental data show that the area-array I/O regime is somewhat "more forgiving" of bad placement methodologies than the peripheral I/O regime. On the other hand, the wrong methodology can still entail substantial losses in solution quality and efficiency. Last, we hypothesize that reductions of on-chip wirelength from adopting the area-array I/O regime may be correlated with topological depth of circuits. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. J. Alpert, T. Chan, D. J.-H. Huang, I. Markov and K. Yan, </author> <title> "Quadratic Placement Revisited", </title> <booktitle> Proc. ACM/IEEE Design Automation Conference, </booktitle> <month> June </month> <year> 1997, </year> <pages> pp. 752-757. </pages>
Reference-contexts: Hierarchical Placement Engines Most placement tools, with the notable exception of Tim-berWolf [18], are reputed to incorporate the hierarchical top-down strategy as part of their approach. The two most common variants are based respectively on analytic placement and pure min-cut placement. * Analytic placement. As reviewed in <ref> [1] </ref>, the analytic placement (popularly referred to as "quadratic placement") approach involves (1) solution of a sparse linear system to determine a continuous module placement that minimizes a squared-wirelength objective 5 , interleaved with (2) heuristic means of "legalizing", or "spreading", the placement so that it satisfies discrete constraints (e.g., no
Reference: [2] <author> B. Chen and M. Marek-Sadowska, </author> <title> "Timing Driven Placement of Pads and Latches", </title> <booktitle> Proc. IEEE International ASIC Conf., </booktitle> <address> Rochester, </address> <month> Sept. </month> <year> 1992, </year> <pages> pp. 30-33. </pages>
Reference-contexts: For small instances of up to 589 gates and 301 I/Os, PACT achieves between 6.5% and 23.6% percent reduction in total wire-length versus random I/O placement, and between 1.0% and 9.7% improvement in path timing. Chen and Marek-Sadowska <ref> [2] </ref> note possible weaknesses in PACT, e.g., that the chip boundary is represented by a linear array of locations. The authors of [2] construct an initial I/O placement by annealing, using circuit structure and path delay constraints in the objective. <p> Chen and Marek-Sadowska <ref> [2] </ref> note possible weaknesses in PACT, e.g., that the chip boundary is represented by a linear array of locations. The authors of [2] construct an initial I/O placement by annealing, using circuit structure and path delay constraints in the objective. The path timing penalty of a bad I/O placement is estimated as being up to 10%; no wirelength penalty data is given. <p> On the other hand, recall that in the peripheral I/O regime (i) a high-quality I/O placement can significantly improve wirelength and performance for small designs <ref> [2] </ref>, and (ii) with alternating I/O and core placement methodologies the final solution is "heavily influenced" by the initial I/O placement [13].
Reference: [3] <author> B. T. Davis, C. Gauthier, P. Parakh, T. Basso, C. Le-furgy, R. Brown and T. Mudge, </author> <title> "Impact of MCM's on High Performance Processors", </title> <booktitle> Proc. INTERpack-97: International, Intersociety Electronic and Pho-tonic Packaging Conf., Mauna Lani, </booktitle> <volume> vol. 1, </volume> <month> June </month> <year> 1997, </year> <pages> pp. 863-868. </pages>
Reference: [4] <author> P. Dehkordi, C. Tan and D. Bouldin, </author> <title> "Intrinsic Area Array ICs: What, Why and How", </title> <booktitle> Proc. IEEE Multi-Chip Module Conf., </booktitle> <address> Santa Cruz, </address> <month> Feb. </month> <year> 1997, </year> <pages> pp. 120-124. </pages>
Reference: [5] <author> R. Farbarik, X. Liu, M. Rossman, P. Parakh, T. Basso and R. Brown, </author> <title> "CAD Tools for Area-Distributed I/O Pad Packaging", </title> <booktitle> Proc. IEEE Multi-Chip Module Conf., </booktitle> <address> Santa Cruz, </address> <month> Feb. </month> <year> 1997, </year> <pages> pp. 125-129. </pages>
Reference-contexts: For a given fixed core placement, Tan et al. propose a pad placement and assignment methodology that searches for feasible pad locations until there are 10% more identified pad locations than I/O ports. Assignment is used to match I/O ports to pad locations. Farbarik et al. <ref> [5] </ref> report a suite of CAD tools for intrinsic area-array ICs, notably an area-pad floor-planner that drives the placement of blocks and associated 1 Intrinsic area-array ICs are those originally designed and laid out for area-array bonding; extrinsic area-array ICs are originally designed and laid out for peripheral bonding, and later <p> I/O buffers so as to minimize routing cost to area pads. 2 A corner-stitched maze router is used to perform the area-pad routing. Kiamilev et al. [9] propose three distinct layout methodologies for intrinsic area-array ICs. The second approach is similar to that of <ref> [5] </ref> but uses manual routing; the third approach separately optimizes the core and I/O buffer circuit placements on chip, then places area pads directly above corresponding I/O buffers using a two-dimensional array structure called a pad interface module.
Reference: [6] <author> C.M Fiduccia and R.M. Mattheyses, </author> <title> "A Linear Time Heuristic for Improving Network Partitions," </title> <booktitle> in Proc. ACM/IEEE Design Automation Conf., </booktitle> <year> 1982, </year> <pages> pp. 175-181. </pages>
Reference-contexts: The sparse linear systems can correspond to hierarchical subprob-lems in the top-down placement process. The legalization step is typically accomplished via partitioning or assignment/transportation formulations, along with highly sophisticated metaheuristics. * Pure min-cut placement. A pure min-cut strategy uses an iterative partitioner, e.g., some variant of the Fiduccia-Mattheyses heuristic <ref> [6] </ref>, with a minimum net cut objective. Techniques such as terminal propagation, table-lookup treelength estimators, etc. are used to improve fidelity of the min-cut partitioning objective with respect to the actual placement objective, which is often based on the sum of net bounding box half-perimeters.
Reference: [7] <author> T. Gao, C. L. Liu and K. C. Chen, </author> <title> "A Performance Driven Hierarchical Partitioning Placement Algorithm", </title> <booktitle> Proc. European Design Automation Conf., </booktitle> <address> Hamburg, </address> <month> Sept. </month> <year> 1993, </year> <pages> pp. 33-38. </pages>
Reference-contexts: When both methods are compared in the context of a wirelength-driven annealing placer, the method of [14] improves over PACT total wirelength by 42% for two of the four cases reported (with up to 412 cells and 59 pads). The work of Gao et al. <ref> [7] </ref> typifies top-down partitioning-based placers that deal with peripheral I/O pads and core cells simultaneously, i.e., separate balance factors are maintained for I/Os and core cells during the partitioning step. 2 The netlist assigning I/O buffers to pads is assumed fixed, in contrast to [17] where "[the] netlist is generated using <p> As noted above, I/O-first alternation typically uses a random initial I/O placement. In the peripheral I/O regime, we can also have a user-defined initial I/O placement. * Simultaneous I/O and core placement. The simultaneous methodology determines placements of I/O and core cells at the same time. For example, <ref> [7] </ref> performs hierarchical top-down placement, and specifies that any physical partition at any level contains (assignable) I/Os in proportion to the number of (avail able) legal pad sites contained in the partition. 3 I.e., as specified in the benchmark data when we received it. 4 If the core region has dimensions
Reference: [8] <author> A. Goldberg and R. Kennedy, </author> <title> "An Efficient Cost Scaling Algorithm for the Assignment Problem", </title> <journal> Math. Prog. </journal> <volume> 71 (1995), </volume> <pages> pp. 153-178. </pages>
Reference-contexts: Our implementation uses the efficient cost scaling algorithm due to Goldberg and Kennedy <ref> [8] </ref>. 8 On a 140MHz Sun Ultra-1, average CPU time per core placement iteration was 2 minutes and 15 minutes, and average CPU time per I/O placement iteration was 14 seconds and 22 seconds, for Cases 1 and 2 respectively. ment iterations for Case 1 (top) and Case 2 (bot tom)
Reference: [9] <author> F. E. Kiamilev, A. V. Krishnamoorty, J. Rieve, R. G. Rozier, G. F. Alpin, C. D. Hull, R. Farbarik and R. E. Oettel, </author> <title> "Design of ICs for Flip-Chip Integration with Optoelectronic Device Arrays", </title> <booktitle> Proc. IEEE Multi-Chip Module Conf., </booktitle> <address> Santa Cruz, </address> <month> Feb. </month> <year> 1997, </year> <pages> pp. 163-167. </pages>
Reference-contexts: Maheshwari et al. [11] distinguish the same concepts as "true area-I/O" vs. "redistribution". I/O buffers so as to minimize routing cost to area pads. 2 A corner-stitched maze router is used to perform the area-pad routing. Kiamilev et al. <ref> [9] </ref> propose three distinct layout methodologies for intrinsic area-array ICs.
Reference: [10] <author> R. J. Lomax, R. B. Brown, M. Nanua and T. D. </author> <title> Strong, "Area I/O Flip-Chip Packaging to Minimize Interconnect", </title> <booktitle> Proc. IEEE Multi-Chip Module Conf., </booktitle> <address> Santa Cruz, </address> <month> Feb. </month> <year> 1997, </year> <pages> pp. 2-7. </pages>
Reference: [11] <author> V. Maheshwari, J. Darnauer, J. Ramirez and W. W.- M. Dai, </author> <title> "Design of FPGAs with Area I/O for Field Programmable MCM", </title> <booktitle> Proc. ACM Symp. on Field-Programmable Gate Arrays, </booktitle> <year> 1995, </year> <pages> pp. 17-23. </pages>
Reference-contexts: Maheshwari et al. <ref> [11] </ref> distinguish the same concepts as "true area-I/O" vs. "redistribution". I/O buffers so as to minimize routing cost to area pads. 2 A corner-stitched maze router is used to perform the area-pad routing. Kiamilev et al. [9] propose three distinct layout methodologies for intrinsic area-array ICs. <p> An important work vis-a-vis our own is that of Mahesh-wari et al. <ref> [11] </ref>, which addresses timing and wirelength implications of transitioning a field-programmable MCM implementation to the area-array I/O regime. In [11], analysis of a theoretical model based on random placement and Rent's rule suggests that area-array I/O "offer [s] a small improvement on the total wirelength, but not much", since the proportion <p> An important work vis-a-vis our own is that of Mahesh-wari et al. <ref> [11] </ref>, which addresses timing and wirelength implications of transitioning a field-programmable MCM implementation to the area-array I/O regime. In [11], analysis of a theoretical model based on random placement and Rent's rule suggests that area-array I/O "offer [s] a small improvement on the total wirelength, but not much", since the proportion of external nets decreases as the circuit grows large. <p> This is plausible since the number of nets incident to I/Os is small relative to the total number of nets, and matches the conclusions of <ref> [11] </ref>. On the other hand, recall that in the peripheral I/O regime (i) a high-quality I/O placement can significantly improve wirelength and performance for small designs [2], and (ii) with alternating I/O and core placement methodologies the final solution is "heavily influenced" by the initial I/O placement [13].
Reference: [12] <author> M. Marek-Sadowska and S. P. Lin, </author> <title> "Timing Driven Placement", </title> <booktitle> Proc. IEEE Intl. Conf. on Computer-Aided Design, </booktitle> <month> Nov. </month> <year> 1989, </year> <pages> pp. 94-97. </pages>
Reference: [13] <author> M. Pedram, K. Chaudhary and E. S. Kuh, </author> <title> "I/O Pad Assignment Based on the Circuit Structure", </title> <booktitle> Proc. IEEE International Conf. on Computer Design, </booktitle> <address> Cam-bridge, </address> <month> Oct. </month> <year> 1991, </year> <pages> pp. 314-318. </pages>
Reference-contexts: Finally, I/O placement methodology has been extensively studied for row-based designs and the peripheral I/O regime. RITUAL [16] leaves I/Os floating on the core boundary (allowing infeasible positions) and legalizes them during detailed placement. PACT <ref> [13] </ref> notes the potential weak I/O placement quality of RITUAL, and proposes linear assignment to compute an initial (i.e., before core cells are placed) I/O placement. Analysis of circuit structure and path timing constraints is used to determine assignment costs. The authors of PACT [13] observe, by way of motivation, that <p> PACT <ref> [13] </ref> notes the potential weak I/O placement quality of RITUAL, and proposes linear assignment to compute an initial (i.e., before core cells are placed) I/O placement. Analysis of circuit structure and path timing constraints is used to determine assignment costs. The authors of PACT [13] observe, by way of motivation, that the common practice of alternating I/O and core placements starting from an arbitrary initial I/O placement can be time-consuming; furthermore, "even if convergence is achieved, the final solution is heavily influenced by the [arbitrary] initial pad assignment". <p> On the other hand, recall that in the peripheral I/O regime (i) a high-quality I/O placement can significantly improve wirelength and performance for small designs [2], and (ii) with alternating I/O and core placement methodologies the final solution is "heavily influenced" by the initial I/O placement <ref> [13] </ref>.
Reference: [14] <author> R. V. Raj, N. S. Murty, P. S. Nagendra Rao and L. M. Patnaik, </author> <title> "Effective Heuristics for Timing Driven Constructive Placement", </title> <booktitle> Proc. Intl. Conf. on VLSI Design, </booktitle> <address> Bangalore, </address> <month> Jan. </month> <year> 1997, </year> <pages> pp. 38-43. </pages>
Reference-contexts: The path timing penalty of a bad I/O placement is estimated as being up to 10%; no wirelength penalty data is given. A significant improvement to PACT is given by <ref> [14] </ref>, who separately process floating inputs in performing the initial I/O placement. When both methods are compared in the context of a wirelength-driven annealing placer, the method of [14] improves over PACT total wirelength by 42% for two of the four cases reported (with up to 412 cells and 59 pads). <p> A significant improvement to PACT is given by <ref> [14] </ref>, who separately process floating inputs in performing the initial I/O placement. When both methods are compared in the context of a wirelength-driven annealing placer, the method of [14] improves over PACT total wirelength by 42% for two of the four cases reported (with up to 412 cells and 59 pads).
Reference: [15] <institution> Semiconductor Industry Association, National Technology Roadmap for Semiconductors: </institution> <note> Technology Needs (1997 edition), </note> <month> December </month> <year> 1997. </year>
Reference-contexts: 1. INTRODUCTION IC packaging technologies with peripheral I/O pads have well-known shortcomings. Observed system Rent parameters suggest that ICs require asymptotically more pads than the die perimeter can provide <ref> [15] </ref>. Peripheral I/O pads also constrain clock/power distribution, and their inherently large parasitics cause coupling and power issues for off-chip signaling.
Reference: [16] <author> A. Srinivasan, K. Chaudhary and E. S. Kuh, RITUAL: </author> <title> a performance-driven placement algorithm. IEEE Transactions on Circuits and Systems II: Analog and Digital Signal Processing, </title> <address> vol.39, (no.11), </address> <month> Nov. </month> <year> 1992, </year> <month> p.825-840. </month>
Reference-contexts: Finally, I/O placement methodology has been extensively studied for row-based designs and the peripheral I/O regime. RITUAL <ref> [16] </ref> leaves I/Os floating on the core boundary (allowing infeasible positions) and legalizes them during detailed placement. PACT [13] notes the potential weak I/O placement quality of RITUAL, and proposes linear assignment to compute an initial (i.e., before core cells are placed) I/O placement.
Reference: [17] <author> C. Tan, D. Bouldin and P. Dehkordi, </author> <title> "Design Implementation of Intrinsic Area Array ICs", </title> <booktitle> Proc. Conf. on Advanced Research in VLSI, </booktitle> <address> Ann Arbor, </address> <month> Sept. </month> <year> 1997, </year> <pages> pp. 82-93. </pages>
Reference-contexts: Section 6 concludes with a description of ongoing research efforts. 2. PREVIOUS WORK For the intrinsic area-array regime, 1 to which our studies apply, Tan et al. <ref> [17] </ref> pose the layout problem as: "Given a core portion of the chip which already contains the I/O buffers, place the possible uniformly spaced area-array pads on the top metal layer of the design ... and route these pads to the I/O ports of the chip...". <p> notably an area-pad floor-planner that drives the placement of blocks and associated 1 Intrinsic area-array ICs are those originally designed and laid out for area-array bonding; extrinsic area-array ICs are originally designed and laid out for peripheral bonding, and later converted to the area-array regime using a signal redistribution layer <ref> [17] </ref>. Maheshwari et al. [11] distinguish the same concepts as "true area-I/O" vs. "redistribution". I/O buffers so as to minimize routing cost to area pads. 2 A corner-stitched maze router is used to perform the area-pad routing. Kiamilev et al. [9] propose three distinct layout methodologies for intrinsic area-array ICs. <p> The work of Gao et al. [7] typifies top-down partitioning-based placers that deal with peripheral I/O pads and core cells simultaneously, i.e., separate balance factors are maintained for I/Os and core cells during the partitioning step. 2 The netlist assigning I/O buffers to pads is assumed fixed, in contrast to <ref> [17] </ref> where "[the] netlist is generated using a pad assignment method...". 3. A TAXONOMY OF I/O AND CORE PLACEMENT METHODOLOGY 3.1.
Reference: [18] <institution> TimberWolf Systems, Inc., </institution> <note> http://www.twolf.com, 1998. </note>
Reference-contexts: Hierarchical Placement Engines Most placement tools, with the notable exception of Tim-berWolf <ref> [18] </ref>, are reputed to incorporate the hierarchical top-down strategy as part of their approach. The two most common variants are based respectively on analytic placement and pure min-cut placement. * Analytic placement.
Reference: [19] <editor> R. R. Tummala and E. J. Rymaszewski, eds., </editor> <booktitle> Microelectronic Packaging Handbook, </booktitle> <publisher> Van Nostrand Rein-hold, </publisher> <year> 1989. </year>
References-found: 19

