URL: http://www.cs.purdue.edu/homes/saw/cs590c/lectures/week6/usernsp.ps.Z
Refering-URL: http://www.cs.purdue.edu/homes/saw/cs590c/lectures/
Root-URL: http://www.cs.purdue.edu
Title: NSPCG User's Guide Version 1.0 A Package for Solving Large Sparse Linear Systems by Various
Author: Thomas C. Oppe Wayne D. Joubert David R. Kincaid 
Date: April 1988 CNA-216  
Abstract: This work was supported in part by the National Science Foundation under Grant CCR-8518722, the Department of Energy under Grant DE-FG05-87ER25048, and Cray Research, Inc. under Grant LTR DTD with The University of Texas at Austin. Thomas C. Oppe's participation was supported in part by the Control Data Corporation through its PACER Fellowship Program (1985-87) and by Sandia National Laboratory through Contract No. 06-4298 (1987-88). 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Adams, L.M. </author> <title> Iterative Algorithms for Large Sparse Linear Systems on Parallel Computers. </title> <type> Doctoral dissertation. </type> <institution> University of Virginia, </institution> <month> November </month> <year> 1982. </year> <note> Also published as NASA CR-166027, </note> <institution> NASA Langley Research Center. </institution>
Reference-contexts: OMEGA can be used to indicate that !fl (factor element) should be added to the diagonal element instead, where ! lies in the interval <ref> [0; 1] </ref>. Thus, ! = 1 corresponds to full modification and ! = 0 corresponds to no modification. This facility is useful, for example, when the IC (ILU) factorization of a matrix exists, but the MIC (MILU) factorization does not. <p> Example 1: In this example, NSPCG was used to solve the linear system Ax = b which resulted from discretizing the problem u xx + 2u yy = 0 on S = <ref> [0; 1] </ref> fi [0; 1] u = 1 + xy on boundary of S using the standard 5-point central finite difference formula with a mesh size of h = 1 11 . <p> Example 1: In this example, NSPCG was used to solve the linear system Ax = b which resulted from discretizing the problem u xx + 2u yy = 0 on S = <ref> [0; 1] </ref> fi [0; 1] u = 1 + xy on boundary of S using the standard 5-point central finite difference formula with a mesh size of h = 1 11 . <p> USING NSPCG IN MATRIX FORMAT-FREE MODE Some examples of the use of NSPCG in matrix format-free mode follow: Example 1: In this example, NSPCG was used to solve the linear system Ax = b which resulted from discretizing the problem u xx + 2u yy = 0 on S = <ref> [0; 1] </ref> fi [0; 1] u = 1 + xy on boundary of S using the standard 5-point central finite difference formula with a mesh size of h = 1 11 . <p> MATRIX FORMAT-FREE MODE Some examples of the use of NSPCG in matrix format-free mode follow: Example 1: In this example, NSPCG was used to solve the linear system Ax = b which resulted from discretizing the problem u xx + 2u yy = 0 on S = <ref> [0; 1] </ref> fi [0; 1] u = 1 + xy on boundary of S using the standard 5-point central finite difference formula with a mesh size of h = 1 11 .
Reference: [2] <author> Axelsson, O. </author> <title> "Incomplete Block Matrix Factorization Preconditioning Methods. The Ultimate Answer?" CNA-195, Center for Numerical Analysis, </title> <institution> University of Texas, Austin, Texas, </institution> <month> 78712, July </month> <year> 1984. </year>
Reference: [3] <author> Axelsson, O. </author> <title> "A Survey of Vectorizable Preconditioning Methods for Large Scale Finite Element Matrix Problems." CNA-190, Center for Numerical Analysis, </title> <institution> University of Texas, Austin, Texas, </institution> <month> 78712, February, </month> <year> 1984. </year>
Reference: [4] <author> Birkhoff, G. and Lynch, R.E. </author> <title> Numerical Solution of Elliptic Problems. </title> <address> Philadelphia: </address> <publisher> SIAM, </publisher> <year> 1984. </year>
Reference: [5] <author> Concus, P., Golub, G., and O'Leary, D. </author> <title> "A Generalized Conjugate Gradient Method for the Numerical Solution of Elliptic Partial Differential Equations," in Sparse Matrix Computations (eds. </title> <editor> J. R. Bunch and Donald J. Rose). </editor> <address> New York: </address> <publisher> Academic Press, Inc., </publisher> <year> 1976. </year>
Reference: [6] <author> Dongarra, J.J. and Eisenstat, </author> <title> S.C. "Squeezing the Most out of an Algorithm in CRAY FORTRAN." </title> <journal> ACM Transactions on Mathematical Software, </journal> <volume> Vol. 10, No. 3, </volume> <month> September </month> <year> 1984, </year> <pages> pp. 219-230. </pages>
Reference: [7] <author> Eisenstat, S.C., Elman, H.C., and Schultz, M. </author> <title> "Variational Iterative Methods for Nonsymmetric Systems of Linear Equations." </title> <journal> SIAM Journal of Numerical Analysis, </journal> <volume> Vol. 20, No. 2, </volume> <month> April </month> <year> 1983, </year> <pages> pp. 345-357. </pages>
Reference-contexts: The user can specify the number of old vectors used in the truncation and the restarting frequency. OMIN (ORTHOMIN): This is a common truncated/restarted method used for nonsymmetric systems [36]. Note that this method includes the popular GCR method (Generalized Conjugate Residual or restarted ORTHOMIN) <ref> [7] </ref>. ORES (ORTHORES): This is another truncated/restarted method for nonsymmetric systems [36]. IOM (Incomplete Orthogonalization Method): This is a truncated method due to Saad [25, 26] which calculates the same iterates, in exact arithmetic, as ORTHORES. In the symmetric case, it runs the SYMMLQ algorithm of Paige and Saunders [21].
Reference: [8] <author> Fridman, </author> <title> V.M. "The Method of Minimum Iterations with Minimum Errors for a System of Linear Algebraic Equations with a Symmetrical Matrix", </title> <journal> USSR Computational Math. and Math. Phys., </journal> <volume> 2 </volume> <month> 362-363 </month> <year> (1963). </year>
Reference-contexts: ME (Minimal Error Algorithm): This is an ORTHODIR-like algorithm for symmetric systems with a three term recurrence which minimizes kQ R (u (n) A 1 b)k 2 , the 2-norm of the error, at each iteration <ref> [8] </ref>. CGNR (Conjugate Gradient applied to the Normal Equations): This implementation of CG ap plied to the normal equations of the preconditioned system minimizes kQ 1 L (bAu (n) )k 2 , the 2-norm of the residual vector of the original preconditioned system, at each iteration [22].
Reference: [9] <author> Gustafsson, I. </author> <title> Stability and Rate of Convergence of Modified Incomplete Cholesky Factorization Methods. </title> <type> Doctoral dissertation. </type> <institution> Chalmers University of Technology and the University of Goteborg, </institution> <month> April </month> <year> 1979. </year>
Reference: [10] <author> Hageman, L. and Young, </author> <title> D.M. Applied Iterative Methods. </title> <address> New York: </address> <publisher> Academic Press, Inc., </publisher> <year> 1981. </year>
Reference: [11] <author> Jea, K.C. and Young, </author> <title> D.M. "On the Simplification of Generalized Conjugate Gradient Methods for Nonsymmetrizable Linear Systems." </title> <journal> Linear Algebra and its Applications, </journal> <volume> Vol 52/53, </volume> <year> 1983, </year> <pages> pp. 399-417. </pages>
Reference-contexts: USYMQR (Unsymmetric QR): This is a companion algorithm to USYMLQ. It minimizes the 2-norm of the residual over an appropriate quasi-Krylov space [34]. Only left precondi tioning is allowed. LANDIR (Lanczos/ORTHODIR): This is the first of the three variants of the Lanczos algorithm for nonsymmetric systems <ref> [11] </ref>. Only left preconditioning is allowed. LANMIN (Lanczos/ORTHOMIN or Biconjugate Gradient Method): This second variant of the Lanczos algorithm does slightly less work per iteration than the other variants of the Lanczos method and is often referred to as the Biconjugate gradient method [11]. <p> of the Lanczos algorithm for nonsymmetric systems <ref> [11] </ref>. Only left preconditioning is allowed. LANMIN (Lanczos/ORTHOMIN or Biconjugate Gradient Method): This second variant of the Lanczos algorithm does slightly less work per iteration than the other variants of the Lanczos method and is often referred to as the Biconjugate gradient method [11]. LANRES (Lanczos/ORTHORES or "two-sided" Lanczos Method): This method is the third vari ant of the Lanczos algorithm [11]. Only left preconditioning is allowed. CGCR (Constrained Generalized Conjugate Residual Method): This method couples truncated/restarted ORTHOMIN with a constrained residual technique described in [32, 33]. <p> Method): This second variant of the Lanczos algorithm does slightly less work per iteration than the other variants of the Lanczos method and is often referred to as the Biconjugate gradient method <ref> [11] </ref>. LANRES (Lanczos/ORTHORES or "two-sided" Lanczos Method): This method is the third vari ant of the Lanczos algorithm [11]. Only left preconditioning is allowed. CGCR (Constrained Generalized Conjugate Residual Method): This method couples truncated/restarted ORTHOMIN with a constrained residual technique described in [32, 33]. At each iteration, the average residual over each two-dimensional block is forced to be zero.
Reference: [12] <author> Joly, P. and Eymard, R. </author> <title> "Preconditioned Biconjugate Gradient Methods for Numerical Reservoir Simulation." </title> <note> To appear in Journal of Computational Physics. </note>
Reference-contexts: At each iteration, the average residual over each two-dimensional block is forced to be zero. The variable NBL2D must be appropriately set for this algorithm. BCGS (Biconjugate Gradient Squared Method): This method is similar to the Biconjugate Gradient Method, and in many cases performs better <ref> [12] </ref>. Only left preconditioning is implemented. 11 The permitted h precon i and h accel i combinations are given in the table below.
Reference: [13] <author> Kershaw, </author> <title> D.S. "The Incomplete Cholesky-Conjugate Gradient Method for the Iterative Solution of Systems of Linear Equations." </title> <journal> Journal of Computational Physics, </journal> <volume> Vol. 26, </volume> <pages> pp. 43-65. </pages>
Reference: [14] <author> Kincaid, D., Oppe, T., Respess, J., and Young, D. </author> <title> "ITPACKV 2C User's Guide." CNA-191, Center for Numerical Analysis, </title> <institution> University of Texas, Austin, Texas, </institution> <month> 78712, February </month> <year> 1984. </year>
Reference-contexts: NSPCG was developed as part of the ITPACK project of the Center for Numerical Analysis at The University of Texas at Austin <ref> [14, 15, 16] </ref>.
Reference: [15] <author> Kincaid, D., Respess, J., Young, D., and Grimes, R. </author> <title> "Algorithm 586 ITPACK 2C: A FORTRAN Package for Solving Large Sparse Linear Systems by Adaptive Accelerated Iterative Methods." </title> <journal> ACM Transactions on Mathematical Software, </journal> <volume> Vol. 8, No. 3, </volume> <month> September </month> <year> 1982, </year> <pages> pp. 302-322. </pages>
Reference-contexts: NSPCG was developed as part of the ITPACK project of the Center for Numerical Analysis at The University of Texas at Austin <ref> [14, 15, 16] </ref>.
Reference: [16] <author> Kincaid, David R. and Young, David M. </author> <title> "The ITPACK Project: Past, Present, and Future." CNA-180, Center for Numerical Analysis, </title> <institution> University of Texas, Austin, Texas, </institution> <month> 78712, March </month> <year> 1983. </year>
Reference-contexts: NSPCG was developed as part of the ITPACK project of the Center for Numerical Analysis at The University of Texas at Austin <ref> [14, 15, 16] </ref>.
Reference: [17] <author> Lawson, C.L., Hanson, R.J., Kincaid, D.R., and Krough, </author> <title> F.T. "Basic Linear Algebra Subprograms for Fortran Usage." </title> <journal> ACM Transactions on Mathematical Software, </journal> <volume> Vol. 5, No. 3, </volume> <month> September </month> <year> 1979, </year> <pages> pp. 308-323. </pages>
Reference: [18] <author> Manteuffel, T.A. </author> <title> "An Incomplete Factorization Technique for Positive Definite Linear Systems." </title> <journal> Mathematics of Computation, </journal> <volume> Vol. 34, No. 150, </volume> <month> April </month> <year> 1980, </year> <pages> pp. 473-497. 82 REFERENCES </pages>
Reference: [19] <author> Meijerink, J.A. and van der Vorst, H.A. </author> <title> "An Iterative Solution Method for Linear Systems of Which the Coefficient Matrix is a Symmetric M-Matrix." </title> <journal> Mathematics of Computation, </journal> <volume> Vol. 31, No. 137, </volume> <month> January </month> <year> 1977, </year> <pages> pp. 148-162. </pages>
Reference: [20] <author> Oppe, T.C., Joubert, W.D., and Kincaid, D.R. </author> <note> "Algorithms in NSPCG." In preparation. </note>
Reference-contexts: In each case, the iteration process stops whenever the given quantity falls below ZETA [= RPARM (1)]. The number given in parentheses is the corresponding value of NTEST [= IPARM (1)]. A large number of stopping tests is provided for experimentation by the user. See <ref> [20] </ref> for comments regarding the motivation in using these tests.
Reference: [21] <author> Paige, C.C. and Saunders, M.A. </author> <title> "Solution of Sparse Indefinite Systems of Linear Equations." </title> <journal> SIAM Journal of Numerical Analysis, </journal> <volume> Vol. 12, No. 4, </volume> <month> Sept. </month> <year> 1975, </year> <pages> pp. 617-629. </pages>
Reference-contexts: ORES (ORTHORES): This is another truncated/restarted method for nonsymmetric systems [36]. IOM (Incomplete Orthogonalization Method): This is a truncated method due to Saad [25, 26] which calculates the same iterates, in exact arithmetic, as ORTHORES. In the symmetric case, it runs the SYMMLQ algorithm of Paige and Saunders <ref> [21] </ref>. Only left preconditioning is allowed. GMRES (Generalized Minimal Residual Method): This method is a truncated/restarted method which, in the case of pure restarting (NS2 NS1 +1 where NS1 and NS2 are IPARM quantities), calculates the same iterates as the truncated/restarted ORTHODIR algorithm [27]. <p> In the symmetric case, it may be used to run the MINRES algorithm of Paige and Saunders <ref> [21] </ref>. USYMLQ (Unsymmetric LQ): This is a quasi-Krylov method useful for nonsymmetric systems [34]. Only left preconditioning is allowed. USYMQR (Unsymmetric QR): This is a companion algorithm to USYMLQ. It minimizes the 2-norm of the residual over an appropriate quasi-Krylov space [34]. Only left precondi tioning is allowed.
Reference: [22] <author> Paige, C.C. and Saunders, M.A. </author> <title> "LSQR: An Algorithm for Sparse Linear Equations and Sparse Least Squares." </title> <journal> ACM Transactions on Mathematical Software, </journal> <volume> Vol. 8, No. 1, </volume> <month> March </month> <year> 1982, </year> <pages> pp. 43-71. </pages> <note> [23] "PCGPAK User's Guide (Version 1.2)." </note> <institution> Scientific Computing Associates, </institution> <year> 1984. </year>
Reference-contexts: CGNR (Conjugate Gradient applied to the Normal Equations): This implementation of CG ap plied to the normal equations of the preconditioned system minimizes kQ 1 L (bAu (n) )k 2 , the 2-norm of the residual vector of the original preconditioned system, at each iteration <ref> [22] </ref>. Only left preconditioning is allowed. LSQR (Least Squares Algorithm): This algorithm calculates the same iterates as CGNR but in a slightly more stable fashion [22]. Only left preconditioning is allowed. 10 4 CHOICES FOR ACCELERATOR ODIR (ORTHODIR): This is a truncated/restarted method useful for nonsymmetric systems of equations [36]. <p> preconditioned system minimizes kQ 1 L (bAu (n) )k 2 , the 2-norm of the residual vector of the original preconditioned system, at each iteration <ref> [22] </ref>. Only left preconditioning is allowed. LSQR (Least Squares Algorithm): This algorithm calculates the same iterates as CGNR but in a slightly more stable fashion [22]. Only left preconditioning is allowed. 10 4 CHOICES FOR ACCELERATOR ODIR (ORTHODIR): This is a truncated/restarted method useful for nonsymmetric systems of equations [36]. The user can specify the number of old vectors used in the truncation and the restarting frequency.
Reference: [24] <author> Rice, J.R. and Boisvert, </author> <title> R.F. (eds.) Solving Elliptic Problems Using ELLPACK. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1985. </year>
Reference-contexts: The user may represent the matrix in one of several sparse matrix formats: primary storage (the same format used in the ELLPACK package <ref> [24] </ref> from Purdue University), symmetric diagonal storage, nonsymmetric diagonal storage, symmetric coordinate storage, or nonsymmetric coordinate storage. * The package can be used in a matrix-free mode, in which the user supplies customized routines for performing matrix operations. * The data structures have been chosen for efficiency on vector, or pipelined,
Reference: [25] <author> Saad, Y. </author> <title> "Krylov Subspace Methods for Solving Large Unsymmetric Linear Systems." </title> <journal> Math. Comp., </journal> <month> 37 (July </month> <year> 1981), </year> <pages> pp. 105-126. </pages>
Reference-contexts: Note that this method includes the popular GCR method (Generalized Conjugate Residual or restarted ORTHOMIN) [7]. ORES (ORTHORES): This is another truncated/restarted method for nonsymmetric systems [36]. IOM (Incomplete Orthogonalization Method): This is a truncated method due to Saad <ref> [25, 26] </ref> which calculates the same iterates, in exact arithmetic, as ORTHORES. In the symmetric case, it runs the SYMMLQ algorithm of Paige and Saunders [21]. Only left preconditioning is allowed.
Reference: [26] <author> Saad, Y. </author> <title> "Practical Use of Some Krylov Subspace Methods for Solving Indefinite and Nonsymmetric Linear Systems." </title> <journal> SIAM Journal of Scientific and Statistical Computing, </journal> <volume> Vol. 5, No. 1, </volume> <month> March </month> <year> 1984, </year> <pages> pp. 203-228. </pages>
Reference-contexts: Note that this method includes the popular GCR method (Generalized Conjugate Residual or restarted ORTHOMIN) [7]. ORES (ORTHORES): This is another truncated/restarted method for nonsymmetric systems [36]. IOM (Incomplete Orthogonalization Method): This is a truncated method due to Saad <ref> [25, 26] </ref> which calculates the same iterates, in exact arithmetic, as ORTHORES. In the symmetric case, it runs the SYMMLQ algorithm of Paige and Saunders [21]. Only left preconditioning is allowed.
Reference: [27] <author> Saad, Y. and Schultz, M.H. </author> <title> "GMRES: A Generalized Minimal Residual Algorithm for Solving Nonsymmetric Linear Systems." </title> <journal> SIAM Journal of Scientific and Statistical Computing, </journal> <volume> Vol. 7, No. 3, </volume> <month> July </month> <year> 1986, </year> <pages> pp. 856-869. </pages>
Reference-contexts: Only left preconditioning is allowed. GMRES (Generalized Minimal Residual Method): This method is a truncated/restarted method which, in the case of pure restarting (NS2 NS1 +1 where NS1 and NS2 are IPARM quantities), calculates the same iterates as the truncated/restarted ORTHODIR algorithm <ref> [27] </ref>. In the symmetric case, it may be used to run the MINRES algorithm of Paige and Saunders [21]. USYMLQ (Unsymmetric LQ): This is a quasi-Krylov method useful for nonsymmetric systems [34]. Only left preconditioning is allowed. USYMQR (Unsymmetric QR): This is a companion algorithm to USYMLQ.
Reference: [28] <author> Saad, Y. and Schultz, M.H. </author> <title> "Conjugate Gradient-like Algorithms for Solving Nonsymmetric Linear Systems." </title> <journal> Mathematics of Computation, </journal> <volume> Vol. 44, No. 170, </volume> <month> April </month> <year> 1985, </year> <pages> pp. 417-424. </pages>
Reference: [29] <author> Sonneveld, P. </author> <title> "CGS, a Fast Lanczos-Type Solver for Nonsymmetric Linear Systems." </title> <type> Report 84-16, </type> <institution> Department of Mathematics and Informatics, Delft University of Technology, </institution> <year> 1984. </year>
Reference: [30] <author> Varga, </author> <title> R.S. Matrix Iterative Analysis. </title> <address> Englewood Cliffs, N.J.: </address> <publisher> Prentice-Hall, Inc., </publisher> <year> 1962. </year>
Reference: [31] <author> Wachspress, E.L. </author> <title> Iterative Solution of Elliptic Systems and Applications to the Neutron Diffusion Equations of Reactor Physics. </title> <address> Englewood Cliffs, N.J.: </address> <publisher> Prentice-Hall, Inc., </publisher> <year> 1966. </year>
Reference: [32] <author> Wallis, J.R. </author> <title> "Incomplete Gaussian Elimination as a Preconditioning for Generalized Conjugate Gradient Acceleration." </title> <journal> SPE 12265. SPE, </journal> <year> 1983, </year> <pages> pp. 325-334. </pages>
Reference-contexts: LANRES (Lanczos/ORTHORES or "two-sided" Lanczos Method): This method is the third vari ant of the Lanczos algorithm [11]. Only left preconditioning is allowed. CGCR (Constrained Generalized Conjugate Residual Method): This method couples truncated/restarted ORTHOMIN with a constrained residual technique described in <ref> [32, 33] </ref>. At each iteration, the average residual over each two-dimensional block is forced to be zero. The variable NBL2D must be appropriately set for this algorithm. BCGS (Biconjugate Gradient Squared Method): This method is similar to the Biconjugate Gradient Method, and in many cases performs better [12].
Reference: [33] <author> Wallis, J.R., Kendall, R.P., and Little, T.E. </author> <title> "Constrained Residual Acceleration of Conjugate Residual Methods." </title> <journal> SPE 13536. SPE, </journal> <year> 1985, </year> <pages> pp. 415-428. </pages>
Reference-contexts: LANRES (Lanczos/ORTHORES or "two-sided" Lanczos Method): This method is the third vari ant of the Lanczos algorithm [11]. Only left preconditioning is allowed. CGCR (Constrained Generalized Conjugate Residual Method): This method couples truncated/restarted ORTHOMIN with a constrained residual technique described in <ref> [32, 33] </ref>. At each iteration, the average residual over each two-dimensional block is forced to be zero. The variable NBL2D must be appropriately set for this algorithm. BCGS (Biconjugate Gradient Squared Method): This method is similar to the Biconjugate Gradient Method, and in many cases performs better [12].
Reference: [34] <author> Yip, E.L., Saunders, M.A., and Simon, H.D. </author> <title> "Two Conjugate Gradient Type Methods for Sparse Unsymmetric Linear Equations." </title> <type> Unpublished manuscript. </type> <institution> Boeing Computer Services, </institution> <address> Seattle, Wash. 98124, </address> <year> 1984. </year>
Reference-contexts: In the symmetric case, it may be used to run the MINRES algorithm of Paige and Saunders [21]. USYMLQ (Unsymmetric LQ): This is a quasi-Krylov method useful for nonsymmetric systems <ref> [34] </ref>. Only left preconditioning is allowed. USYMQR (Unsymmetric QR): This is a companion algorithm to USYMLQ. It minimizes the 2-norm of the residual over an appropriate quasi-Krylov space [34]. Only left precondi tioning is allowed. <p> USYMLQ (Unsymmetric LQ): This is a quasi-Krylov method useful for nonsymmetric systems <ref> [34] </ref>. Only left preconditioning is allowed. USYMQR (Unsymmetric QR): This is a companion algorithm to USYMLQ. It minimizes the 2-norm of the residual over an appropriate quasi-Krylov space [34]. Only left precondi tioning is allowed. LANDIR (Lanczos/ORTHODIR): This is the first of the three variants of the Lanczos algorithm for nonsymmetric systems [11]. Only left preconditioning is allowed.
Reference: [35] <author> Young, </author> <title> D.M. Iterative Solution of Large Linear Systems. </title> <address> New York: </address> <publisher> Academic Press, Inc., </publisher> <year> 1971. </year>
Reference-contexts: Reduced System method (RS): This method first requires that the system Au = b be permuted to a red-black system: D R H u B = b R where D R and D B are diagonal matrices. This will only be possible if matrix A has Property A <ref> [35] </ref>. The black unknowns can be eliminated from the system to yield the reduced system: (D R HD 1 B b B which becomes the new matrix problem to be solved.
Reference: [36] <author> Young, D.M. and Jea, K.C. </author> <title> "Generalized Conjugate Gradient Acceleration of Nonsymmetrizable Iterative Methods." Linear Algebra and its Applications, </title> <type> 34 </type> <month> 159-194 </month> <year> (1980). </year>
Reference-contexts: Only left preconditioning is allowed. LSQR (Least Squares Algorithm): This algorithm calculates the same iterates as CGNR but in a slightly more stable fashion [22]. Only left preconditioning is allowed. 10 4 CHOICES FOR ACCELERATOR ODIR (ORTHODIR): This is a truncated/restarted method useful for nonsymmetric systems of equations <ref> [36] </ref>. The user can specify the number of old vectors used in the truncation and the restarting frequency. OMIN (ORTHOMIN): This is a common truncated/restarted method used for nonsymmetric systems [36]. Note that this method includes the popular GCR method (Generalized Conjugate Residual or restarted ORTHOMIN) [7]. <p> is allowed. 10 4 CHOICES FOR ACCELERATOR ODIR (ORTHODIR): This is a truncated/restarted method useful for nonsymmetric systems of equations <ref> [36] </ref>. The user can specify the number of old vectors used in the truncation and the restarting frequency. OMIN (ORTHOMIN): This is a common truncated/restarted method used for nonsymmetric systems [36]. Note that this method includes the popular GCR method (Generalized Conjugate Residual or restarted ORTHOMIN) [7]. ORES (ORTHORES): This is another truncated/restarted method for nonsymmetric systems [36]. <p> OMIN (ORTHOMIN): This is a common truncated/restarted method used for nonsymmetric systems <ref> [36] </ref>. Note that this method includes the popular GCR method (Generalized Conjugate Residual or restarted ORTHOMIN) [7]. ORES (ORTHORES): This is another truncated/restarted method for nonsymmetric systems [36]. IOM (Incomplete Orthogonalization Method): This is a truncated method due to Saad [25, 26] which calculates the same iterates, in exact arithmetic, as ORTHORES. In the symmetric case, it runs the SYMMLQ algorithm of Paige and Saunders [21]. Only left preconditioning is allowed.
References-found: 35

