URL: http://c.gp.cs.cmu.edu:5103/afs/cs.cmu.edu/user/avrim/www/Papers/aips_abstract.ps.gz
Refering-URL: http://c.gp.cs.cmu.edu:5103/afs/cs.cmu.edu/user/avrim/www/Papers/pubs.html
Root-URL: http://www.cs.cmu.edu
Email: avrim@cs.cmu.edu  jcl@cs.cmu.edu  
Title: Probabilistic Planning in the Graphplan Framework  
Author: Avrim L. Blum John C. Langford 
Address: Pittsburgh PA 15213-3891  Pittsburgh PA 15213-3891  
Affiliation: School of Computer Science Carnegie Mellon University  School of Computer Science Carnegie Mellon University  
Abstract: The Graphplan planner compiles a STRIPS planning problem into a compact graph structure in which information can be easily stored and propagated to aid in the search for a plan. Empirical results have indicated substantial speedups for planning with this approach. In this paper we explore the extent to which this representation can be used for probabilistic planning. In particular, we consider an MDP-type framework in which the state of the world is known but the actions are probabilistic, and the objective is to produce an optimal finite-horizon contingent plan (an optimal finite-horizon policy). We describe an extension of Graphplan in this direction, called Pgraphplan. Given a bounded number of time steps, Pgraphplan produces the contingent plan of that length with highest expected utility, for several options of utility function. Pgraphplan is based on a forward-chaining search through the planning graph, in contrast with the backward-chaining search performed by the original Graphplan. As part of our work, we develop ways in which the planning graph framework can be used to speed up forward search as well as the backwards-chaining search for which it was originally intended. Pgraphplan suffers a substantial performance hit compared to the deterministic Graphplan, but appears to still be fast compared with other approaches to probabilistic planning problems. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Anderson, C. R.; Smith, D. E.; and Weld, D. S. </author> <year> 1997. </year> <title> Conditional effects in Graphplan. </title> <type> unpublished manuscript. </type>
Reference: <author> Blum, A., and Furst, M. </author> <year> 1997. </year> <title> Fast planning through planning graph analysis. </title> <booktitle> Artificial Intelligence 90 </booktitle> <pages> 281-300. </pages>
Reference-contexts: Introduction The Graphplan planner is based on compiling a planning problem into a compact (polynomial size) graph structure in which information can be quickly propagated to aid in the search for a plan <ref> (Blum & Furst 1997) </ref>. Empirical results indicate that this approach can provide substantial performance benefits over more traditional methods (Blum & Furst 1997; Bylander 1997; Koehler et al. 1997). <p> Allowing the plan to perform several operators in parallel so long as they do not conflict with each other. The common trick of memoizing the results of unsuccessful searches is also used. For more details see <ref> (Blum & Furst 1997) </ref>. Background: MDPs An especially well-studied extension to deterministic planning is to allow actions with probabilistic out comes. Indeed, this is the setting of Markov Decision Processes (MDPs).
Reference: <author> Boutilier, C.; Dearden, R.; and Goldszmidt, M. </author> <year> 1995. </year> <title> Exploiting structure in policy construction. </title> <booktitle> In IJ-CAI95, </booktitle> <pages> 1104-1111. </pages>
Reference-contexts: Specifically, if actions are described as probabilistic STRIPS operators, then planning graphs can be naturally extended to provide a compact representation for these kinds of planning problems. This is similar to the motivation of <ref> (Boutilier, Dearden, & Goldszmidt 1995) </ref>. Unfortunately, the kind of backward-chaining search performed by Graphplan does not seem to easily lead to an optimal plan in the usual sense.
Reference: <author> Bylander, T. </author> <year> 1997. </year> <title> Linear programming heuristic for optimal planning. </title> <booktitle> In Proceedings of the Fourteenth National Conference on Artificial Intelligence. </booktitle>
Reference: <author> Gordon, G. </author> <year> 1995. </year> <title> Stable function approximation in dynamic programming. </title> <booktitle> In Proceedings of the Twelfth International Conference on Machine Learning, </booktitle> <pages> 261-268. </pages>
Reference-contexts: For larger problems, it becomes infeasible to write down the entire MDP, so instead a common approach is to perform some sort of function approximation. For instance, one might try to train a neural network to map states to values or to perform linear interpolation <ref> (Gordon 1995) </ref>. The question we explore is whether the planning graph representation can be used to provide an alternative approach. Specifically, if actions are described as probabilistic STRIPS operators, then planning graphs can be naturally extended to provide a compact representation for these kinds of planning problems.
Reference: <author> Kambhampati, S.; Lambrecht, E.; and Parker, E. </author> <year> 1997. </year> <title> Understanding and extending Graphplan. </title> <booktitle> In Proceedings of the Fourth European Conference on Planning. </booktitle>
Reference: <author> Koehler, J.; Nebel, B.; Hoffman, J.; and Dimopoulos, Y. </author> <year> 1997. </year> <title> Extending planning graphs to an ADL subset. </title> <booktitle> In Proceedings of the Fourth European Conference on Planning. </booktitle>
Reference: <author> Majercik, S. M., and Littman, M. L. </author> <year> 1997. </year> <title> MAX-PLAN: a new approach to probabilistic planning. </title> <type> unpublished manuscript. </type>
Reference: <author> Weld, D. S.; Anderson, C.; and Smith, D. E. </author> <year> 1998. </year> <title> Extending graphplan to handle uncertainty and sensing actions. </title> <booktitle> In AAAI98. </booktitle>
References-found: 9

