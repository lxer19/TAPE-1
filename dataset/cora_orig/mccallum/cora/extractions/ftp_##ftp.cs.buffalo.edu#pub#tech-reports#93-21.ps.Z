URL: ftp://ftp.cs.buffalo.edu/pub/tech-reports/93-21.ps.Z
Refering-URL: ftp://ftp.cs.buffalo.edu/pub/tech-reports/README.html
Root-URL: 
Title: P-Selective Sets, and Reducing Search to Decision vs. Self-Reducibility  
Author: Edith Hemaspaandra Ashish V. Naik Mitsunori Ogiwara Alan L. Selman 
Note: Research performed while visiting the  Jan. 1992-Dec. 1992. Current address:  
Address: Hall, Buffalo, NY 14260  Hall, Buffalo, NY 14260  
Date: July 29, 1993  
Affiliation: State University of New York at Buffalo  State University of New York at Buffalo  University of Electro-Communications  State University of New York at Buffalo  Department of Computer Science, State University of New York at Buffalo, 226 Bell  Department of Computer Science, State University of New York at Buffalo,  Department of Computer Science, University of Electro-Communications, Chofu-shi, Tokyo 182, Japan. Department of Computer Science, State University of New York at Buffalo, 226 Bell  
Abstract: We obtain several results that distinguish self-reducibility of a language L with the question of whether search reduces to decision for L. These include: (i) If NE 6= E, then there exists a set L in NP P such that search reduces to decision for L, search does not nonadaptively reduces to decision for L, and L is not self-reducible. fl Funding for this research was provided by the National Science Foundation under grant CCR 9002292. y Department of Computer Science, State University of New York at Buffalo, 226 Bell Hall, Buffalo, NY 14260 
Abstract-found: 1
Intro-found: 1
Reference: [ABG] <author> A. Amir, R. Beigel, and W. Gasarch. Cheatable, P-terse, </author> <title> and P-superterse sets. </title> <type> Manuscript, </type> <month> Dec. 7, </month> <year> 1989. </year> <month> 35 </month>
Reference-contexts: Then, obviously, g is a P m reduction of T to A. Therefore, A and T are P m -equivalent, and this proves the theorem. 2 Amir, Beigel and Gasarch <ref> [ABG] </ref> showed that there is a 1-cheatable set that is not p-selective, and, conversely, that there are p-selective sets that are not cheatable. Using our new methods of constructing p-selective sets, the following theorem gives an improvement of their latter result.
Reference: [AFK89] <author> M. Abadi, J. Feigenbaum, and J. Kilian. </author> <title> On hiding information from an oracle. </title> <journal> J. Comput. System Sci., </journal> <volume> 39 </volume> <pages> 21-50, </pages> <year> 1989. </year>
Reference-contexts: These results provide answers for the remaining open questions about self-1-helpers in [Ko87]. Also, we construct an oracle relative to which assignments for satisfying formulas cannot be computed nonadaptively from SAT. We apply our techniques to similar issues concerning random self-reducibility <ref> [FF91, AFK89, FFLS92] </ref>. Informally, a set is randomly self-reducible if a probabilistic Turing machine can determine membership in the set by determining membership at other "random" instances. <p> A set A is a nonadaptive self-1-helper if M makes only nonadaptive queries to A. Now we define random self-reductions <ref> [FF91, AFK89, FFLS92] </ref>. Definition 5 Let f : fl 7! fl , let k (n) be a polynomial, and let M be a probabilistic polynomial time oracle Turing machine which has access to f as an oracle.
Reference: [AS84] <author> K. Ambos-Spies. </author> <title> P-mitotic sets. </title> <editor> In E. Borger, G. Hasenjager, and D. Roding, editors, </editor> <booktitle> Logic and Machines, Lecture Notes in Computer Science 177, </booktitle> <pages> pages 1-23. </pages> <publisher> Springer-Verlag, </publisher> <year> 1984. </year>
Reference-contexts: If q fl 2 L, then accept, else reject. Thus L 2 P which is a contradiction, which completes the proof. 2 In [BvHT93], it is shown that if search reduces to decision for a language L 2 NP, then L is auto-reducible <ref> [AS84] </ref>. Let us note that the converse does not hold. Let L be a set in NP for which search does not reduce to decision [BBFG91].
Reference: [Bab85] <author> L. Babai. </author> <title> Trading group theory for randomness. </title> <booktitle> In Proc. 17th Annual ACM Symp. on Theory of Computing, </booktitle> <pages> pages 421-429, </pages> <year> 1985. </year>
Reference-contexts: We assume readers are familiar with interactive proof systems <ref> [GMR89, Bab85] </ref> and with multiprover interactive proof systems [BOGKW88]. In [BBFG91, BG] the authors consider competitive proof systems. An interactive proof system for a language L is competitive if the honest prover is a probabilistic polynomial time oracle Turing machine that accesses the language L.
Reference: [Bal90] <author> J. Balcazar. </author> <title> Self-reducibility structures and solutions of NP problems. </title> <journal> Rivesta Matematica, </journal> <volume> 4(4) </volume> <pages> 431-441, </pages> <month> Dec. </month> <year> 1990. </year>
Reference-contexts: Under a reasonable assumption about exponential time (NE 6= E), we construct a language in NP for which search reduces to decision, but which is not self-reducible. Balcazar <ref> [Bal90] </ref> has demonstrated that search reduces to decision for a set L if and only if L is a self-1-helper, a notion defined by Ko [Ko87]. As a consequence, our result solves the principal open question in [Ko87]. <p> Schoning defined an oracle Turing machine M to be robust if for every oracle A, the language accepted by M A is the same [Sch85]. Ko [Ko87] used this notion to define the notion of self-1-helpers. In <ref> [Bal90] </ref>, Balcazar proved that a set L 2 NP is a self-1-helper if and only if search reduces to decision for L. 1 [BD76] requires equation 2 to hold for all R and p that define L. 2 We can show that reducing search to decision by weaker reducibilities such as <p> However, under the hypothesis of Theorem 2, f S;p is not reducible to R f S;p in polynomial time by any nonadaptive algorithm. Thus, we see that binary search is inherently adaptive. In <ref> [Bal90] </ref>, Balcazar proved that a set L 2 NP is a self-1-helper if and only if search reduces to decision for L. It is easy to show that the equivalence holds for nonadaptiveness also.
Reference: [BBFG91] <author> R. Beigel, M. Bellare, J. Feigenbaum, and S. Goldwasser. </author> <title> Languages that are easier than their proofs. </title> <booktitle> In Proc. 32nd IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pages 19-28, </pages> <year> 1991. </year>
Reference-contexts: We say that search reduces to decision for a language L 2 NP if the search problem for L is Turing reducible in polynomial time to L. <ref> [BBFG91] </ref> provides evidence that search does not reduce to decision for all of NP. It has long been felt that the structural property that causes search to be reducible to decision is disjunctive self-reducibility. <p> We call a prover natural if it is an oracle for L, and we define a natural proof system to be one in which all honest provers are natural. (Natural proof systems are similar to competitive proof systems defined in <ref> [BBFG91, BG] </ref>.) If a language L has a natural interactive proof system how much interaction is required? We show under assumption NE 6 BPE that there is a language L 2 NP BPP such that L has a natural proof system but L does not have any 1 round natural proof <p> For each language L 2 NP and R and p that define L, we define the partial multivalued function f R;p as follows: f R;p (x) 7! y; if jyj = p (jxj) and R (x; y): Clearly, each f R;p belongs to NPMV. Definition 3 <ref> [BD76, BBFG91] </ref> Let L 2 NP. <p> Let us note that the converse does not hold. Let L be a set in NP for which search does not reduce to decision <ref> [BBFG91] </ref>. Then, L L is auto-reducible, but search does not reduce to decision for L L. 3.3 On Computing Satisfying Assignments Corollary 2 states under a reasonable assumption that there is a set in NP P for which search does not nonadaptively reduce to decision. <p> We assume readers are familiar with interactive proof systems [GMR89, Bab85] and with multiprover interactive proof systems [BOGKW88]. In <ref> [BBFG91, BG] </ref> the authors consider competitive proof systems. An interactive proof system for a language L is competitive if the honest prover is a probabilistic polynomial time oracle Turing machine that accesses the language L. We consider a variation of this model.
Reference: [BD76] <author> A. Borodin and A. Demers. </author> <title> Some comments on functional self reducibility and the NP hierarchy. </title> <type> Technical Report TR76-284, </type> <institution> Cornell University, Department of Computer Science, Upson Hall, </institution> <address> Ithaca, NY 14853, </address> <year> 1976. </year>
Reference-contexts: For each language L 2 NP and R and p that define L, we define the partial multivalued function f R;p as follows: f R;p (x) 7! y; if jyj = p (jxj) and R (x; y): Clearly, each f R;p belongs to NPMV. Definition 3 <ref> [BD76, BBFG91] </ref> Let L 2 NP. <p> Ko [Ko87] used this notion to define the notion of self-1-helpers. In [Bal90], Balcazar proved that a set L 2 NP is a self-1-helper if and only if search reduces to decision for L. 1 <ref> [BD76] </ref> requires equation 2 to hold for all R and p that define L. 2 We can show that reducing search to decision by weaker reducibilities such as P btt , P P log -T is not interesting.
Reference: [Bei87] <author> R. Beigel. </author> <title> Query-limited reducibilities. </title> <type> PhD thesis, </type> <institution> Stanford University, </institution> <year> 1987. </year>
Reference-contexts: In a similar vein, we show that if there is a cheatable set <ref> [Bei87, Bei91] </ref> that is not P m -equivalent to any tally set, then P 6= NP, and we obtain with no assumption, a recursive p-selective tally set that is not cheatable. Buhrman, van Helden, and Torenvliet [BvHT93] have very recently proved that every p-selective self-reducible set belongs to P. <p> By Proposition 1, if T 0 is P tt - reducible to a p-selective language, then T 0 2 P, which contradicts the assumption that T 0 2 UP P. 2 5.2 P-selective and P-cheatable sets The following definitions are due to Beigel <ref> [Bei87, Bei91] </ref>.
Reference: [Bei91] <author> R. Beigel. </author> <title> Bounded queries to SAT and the Boolean hierarchy. </title> <journal> Theor. Computer Sci., </journal> <volume> 84(2) </volume> <pages> 199-223, </pages> <year> 1991. </year>
Reference-contexts: In a similar vein, we show that if there is a cheatable set <ref> [Bei87, Bei91] </ref> that is not P m -equivalent to any tally set, then P 6= NP, and we obtain with no assumption, a recursive p-selective tally set that is not cheatable. Buhrman, van Helden, and Torenvliet [BvHT93] have very recently proved that every p-selective self-reducible set belongs to P. <p> PF NP is the set of all partial functions that can be computed in polynomial time relative to an oracle in NP, and PF NP tt is the set of all partial functions that can be computed nonadaptively in polynomial time with access to an oracle in NP <ref> [Bei91, Sel92] </ref>. We take the point of view that a partial multivalued function is easy to compute if for each input string in the domain of the function, some value of the function is easy to compute. For this reason, we define the following technical notions. <p> By Proposition 1, if T 0 is P tt - reducible to a p-selective language, then T 0 2 P, which contradicts the assumption that T 0 2 UP P. 2 5.2 P-selective and P-cheatable sets The following definitions are due to Beigel <ref> [Bei87, Bei91] </ref>.
Reference: [Ber78] <author> P. Berman. </author> <title> Relationships between density and deterministic complexity of NP-complete languages. </title> <booktitle> In Proc. 5th Colloq. on Automata, Languages, and Programming, Lecture Notes in Computer Science, </booktitle> <volume> volume 62, </volume> <pages> pages 63-71. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1978. </year>
Reference-contexts: Disjunctive self-reducibility is the structural property that forms the basis of the work by P. Berman <ref> [Ber78] </ref>, Fortune [For79], Mahaney [Mah82], and others, concerning self-reducibility and reductions to sparse sets. An obvious and well-known algorithm with SAT as an oracle uses the disjunctive self-reducibility of SAT in order to compute a satisfying assignment for any satisfiable formula. <p> However, since L is a tally language, it cannot be self-reducible, for that would imply that L 2 P <ref> [Ber78] </ref>. 2 Corollary 4 If UE 6= E, then there exists a language L 2 UP P such that L is a nonadaptive self-1-helper, but L is not self-reducible. Ko defined the following concept of unambiguous 1-helping in [Ko87].
Reference: [BG] <author> M. Bellare and S. Goldwasser. </author> <title> The complexity of decision versus search. </title> <note> SIAM J. Comput. In press. </note>
Reference-contexts: We call a prover natural if it is an oracle for L, and we define a natural proof system to be one in which all honest provers are natural. (Natural proof systems are similar to competitive proof systems defined in <ref> [BBFG91, BG] </ref>.) If a language L has a natural interactive proof system how much interaction is required? We show under assumption NE 6 BPE that there is a language L 2 NP BPP such that L has a natural proof system but L does not have any 1 round natural proof <p> We assume readers are familiar with interactive proof systems [GMR89, Bab85] and with multiprover interactive proof systems [BOGKW88]. In <ref> [BBFG91, BG] </ref> the authors consider competitive proof systems. An interactive proof system for a language L is competitive if the honest prover is a probabilistic polynomial time oracle Turing machine that accesses the language L. We consider a variation of this model. <p> Let compMIP denote the class of languages having competitive multiprover proofs. It is easy to see that NIP (poly; poly) = compMIP. 23 Furthermore, Bellare and Goldwasser <ref> [BG] </ref> demonstrate that compMIP is character-ized by the class frIP of languages having function-restricted proof systems as defined by Blum and Kannan [BK89], and frIP is identical to the class Check of languages that are checkable.
Reference: [BH88] <author> S. Buss and L. Hay. </author> <title> On truth table reducibility to sat and the difference hierarchy over NP. </title> <booktitle> In Procs. 3rd Annual Conference on Structure in Complexity Theory, </booktitle> <pages> pages 224-233. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1988. </year>
Reference-contexts: Lemma 2 For all oracles A: (PF A ) NP A tt : This lemma was first realized by Richard Beigel and Lance Fortnow, and its proof uses Buss and Hay's notion <ref> [BH88] </ref> of multiple round truth-table reductions to NP sets. In a k round truth-table reduction, a Turing machine asks k rounds of polynomially many nonadaptive queries to the NP oracle, where the queries for round i are formed using the answers to the queries in the previous rounds. <p> Buss and Hay obtained the following result about the power of multiple round truth-table reductions. For our purpose, we state their result in terms of function classes. Proposition 3 <ref> [BH88] </ref> Let k 1. If f is a partial function computed by a transducer T which runs in polynomial time and makes k rounds of nonadaptive queries to an NP set, then f 2 PF NP tt . Now we will prove Lemma 2.
Reference: [BK89] <author> M. Blum and S. Kannan. </author> <title> Designing programs that check their work. </title> <booktitle> In Proc. 21st Symp. ACM Symp. Theory of Computing, </booktitle> <pages> pages 86-97, </pages> <year> 1989. </year>
Reference-contexts: We use our techniques to obtain their conclusion, and simultaneously a language that is not self-reducible, with the weaker hypothesis that NE 6 BPE. We prove that if UE " co-UE 6 BPE, then there exists a language L 2 NP which is checkable <ref> [BK89] </ref> but which is not nonadaptively checkable. Lastly, we consider the natural extension of "search reduces to decision for L " to interactive proof systems. <p> Let compMIP denote the class of languages having competitive multiprover proofs. It is easy to see that NIP (poly; poly) = compMIP. 23 Furthermore, Bellare and Goldwasser [BG] demonstrate that compMIP is character-ized by the class frIP of languages having function-restricted proof systems as defined by Blum and Kannan <ref> [BK89] </ref>, and frIP is identical to the class Check of languages that are checkable. Thus, IV = NIP (poly; poly) = compMIP = frIP = Check. 4.2 Nonadaptive vs. Adaptive Checkers The following definition is due to Blum and Kannan [BK89]. <p> having function-restricted proof systems as defined by Blum and Kannan <ref> [BK89] </ref>, and frIP is identical to the class Check of languages that are checkable. Thus, IV = NIP (poly; poly) = compMIP = frIP = Check. 4.2 Nonadaptive vs. Adaptive Checkers The following definition is due to Blum and Kannan [BK89]. Definition 9 A function f is checkable if there is a probabilistic polynomial time oracle machine Ch (called a checker) such that for all programs F (that claim to compute f ) and all input words x: 1.
Reference: [BLS84] <author> R. Book, T. Long, and A. Selman. </author> <title> Quantitative relativizations of com-plexity classes. </title> <journal> SIAM J. Comput., </journal> <volume> 13(3) </volume> <pages> 461-487, </pages> <month> August </month> <year> 1984. </year>
Reference-contexts: We will refer to the following complexity classes of partial multivalued functions. NPMV is the set of all partial multivalued functions that are computed nondeter-ministically in polynomial time <ref> [BLS84] </ref>, and PF is the set of all partial functions that are computed deterministically in polynomial time.
Reference: [BOGKW88] <author> M. Ben-Or, S. Goldwasser, J. Kilian, and A. Wigderson. </author> <title> Multi-prover interactive proofs: how to remove intractability assumptions. </title> <booktitle> In Proc. 20th Annual ACM Symp. Theory of Computing, </booktitle> <pages> pages 113-131, </pages> <year> 1988. </year>
Reference-contexts: We assume readers are familiar with interactive proof systems [GMR89, Bab85] and with multiprover interactive proof systems <ref> [BOGKW88] </ref>. In [BBFG91, BG] the authors consider competitive proof systems. An interactive proof system for a language L is competitive if the honest prover is a probabilistic polynomial time oracle Turing machine that accesses the language L. We consider a variation of this model.
Reference: [Boo74] <author> R. </author> <title> Book. Tally languages and complexity classes. </title> <journal> Info. and Control, </journal> <volume> 26 </volume> <pages> 186-193, </pages> <year> 1974. </year>
Reference-contexts: We will frequently use the well-known fact <ref> [Boo74] </ref> that NP P contains a tally language if and only if NE 6= E.
Reference: [BvHT93] <author> H. Buhrman, P. van Helden, and L. Torenvliet. </author> <title> P-selective self-reducible sets: A new characterization of P. </title> <booktitle> In Procs. 8th Annual Conference on Structure in Complexity Theory, </booktitle> <pages> pages 44-51, </pages> <year> 1993. </year>
Reference-contexts: In a similar vein, we show that if there is a cheatable set [Bei87, Bei91] that is not P m -equivalent to any tally set, then P 6= NP, and we obtain with no assumption, a recursive p-selective tally set that is not cheatable. Buhrman, van Helden, and Torenvliet <ref> [BvHT93] </ref> have very recently proved that every p-selective self-reducible set belongs to P. Their result gives us an added bonus. <p> That is, we obtain a set in NP P for which search reduces to decision but that is not disjunctive self-reducible by exhibiting a p-selective set in NP P for which search reduces to decision. By applying the result in <ref> [BvHT93] </ref>, we immediately obtain the stronger claim that there is a set in NP P for which search reduces to decision and that is not self-reducible at all. Throughout this paper, we will make the stronger claim whenever possible. <p> is p-selective with selector f (x; y) = minfx; yg. 3 On Self-Reducibilities 3.1 "Self-reducible" vs. "search reduces to decision" Selman showed in [Sel79] that a set L is disjunctive self-reducible and p-selective if and only if L 2 P, and Buhrman, van Helden, and Torenvliet improved this by showing <ref> [BvHT93] </ref> that a set L is self-reducible and p-selective if and only if L 2 P. We obtain a similar characterization of P using sets for which search nonadaptively reduces to decision. <p> It follows immediately from Theorem 1 and <ref> [BvHT93] </ref> that if E 6= NE, then there is a set L 2 NP P which is not self-reducible and for which search does not nonadaptively reduce to decision. (This is so because it is known [Sel79] that E 6= NE implies the existence of a p-selective set in NP P.) <p> The corollary follows by Theorem 2, using <ref> [BvHT93] </ref> together with Theorem 1. Corollary 2 If NE 6= co-NE, then there exists a set L in NP co-NP such that search reduces to decision for L, search does not nonadaptively reduces to decision for L, and L is not self-reducible. <p> All the well known examples of self-reducible sets in NP [Mah82, MP79, Sel88] are actually disjunctive self-reducible sets. In light of the results of Buhrman, van Helden, and Torenvliet <ref> [BvHT93] </ref>, it is reasonable to inquire whether NP contains sets that are self-reducible but not disjunctive self-reducible. The following theorem gives an affirmative answer to this question, thereby adding import to their work. <p> If q fl 2 L, then accept, else reject. Thus L 2 P which is a contradiction, which completes the proof. 2 In <ref> [BvHT93] </ref>, it is shown that if search reduces to decision for a language L 2 NP, then L is auto-reducible [AS84]. Let us note that the converse does not hold. Let L be a set in NP for which search does not reduce to decision [BBFG91].
Reference: [CCL91] <author> J. Cai, A. Condon, and R. Lipton. </author> <title> PSPACE is provable by two provers in one round. </title> <booktitle> In Proc. 6th Annual Conference on Structure in Complexity Theory, </booktitle> <pages> pages 110-115. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1991. </year>
Reference-contexts: When the computational power of provers is unrestricted such a result is not possible, for every language in PSPACE has a 1 prover polynomial-round interactive proof system [LFKN92, Sha92] and every language in PSPACE can be accepted by 2 provers in 1 round <ref> [CCL91] </ref>. How do natural proof systems compare with other models in the literature? We identify four classes of languages, and for convenience designate them as I, II, III, and IV. Class I = NIP (const; const) = NIP (1; 0) = BPP.
Reference: [FF91] <author> J. Feigenbaum and L. Fortnow. </author> <title> On the random-self-reducibility of complete sets. </title> <booktitle> In Proc. 6th Annual Conference on Structure in Complexity Theory, </booktitle> <pages> pages 124-132, </pages> <year> 1991. </year> <note> To appear in SIAM J. of Comput., 22(3), </note> <year> 1993. </year>
Reference-contexts: These results provide answers for the remaining open questions about self-1-helpers in [Ko87]. Also, we construct an oracle relative to which assignments for satisfying formulas cannot be computed nonadaptively from SAT. We apply our techniques to similar issues concerning random self-reducibility <ref> [FF91, AFK89, FFLS92] </ref>. Informally, a set is randomly self-reducible if a probabilistic Turing machine can determine membership in the set by determining membership at other "random" instances. <p> A set A is a nonadaptive self-1-helper if M makes only nonadaptive queries to A. Now we define random self-reductions <ref> [FF91, AFK89, FFLS92] </ref>. Definition 5 Let f : fl 7! fl , let k (n) be a polynomial, and let M be a probabilistic polynomial time oracle Turing machine which has access to f as an oracle.
Reference: [FFLS92] <author> J. Feigenbaum, L. Fortnow, C. Lund, and D. Spielman. </author> <title> The power of adaptiveness and additional queries in random-self-reductions. </title> <booktitle> In Proc. 7th Annual Conference on Structure in Complexity Theory, </booktitle> <pages> pages 338-346, </pages> <year> 1992. </year>
Reference-contexts: These results provide answers for the remaining open questions about self-1-helpers in [Ko87]. Also, we construct an oracle relative to which assignments for satisfying formulas cannot be computed nonadaptively from SAT. We apply our techniques to similar issues concerning random self-reducibility <ref> [FF91, AFK89, FFLS92] </ref>. Informally, a set is randomly self-reducible if a probabilistic Turing machine can determine membership in the set by determining membership at other "random" instances. <p> We apply our techniques to similar issues concerning random self-reducibility [FF91, AFK89, FFLS92]. Informally, a set is randomly self-reducible if a probabilistic Turing machine can determine membership in the set by determining membership at other "random" instances. In <ref> [FFLS92] </ref> under the assumption that NEEE 6 BPEEE, the authors construct a language that is randomly self-reducible, but that is not randomly self-reducible by any nonadaptive procedure. <p> A set A is a nonadaptive self-1-helper if M makes only nonadaptive queries to A. Now we define random self-reductions <ref> [FF91, AFK89, FFLS92] </ref>. Definition 5 Let f : fl 7! fl , let k (n) be a polynomial, and let M be a probabilistic polynomial time oracle Turing machine which has access to f as an oracle. <p> 2 (7k=4)1 2 5k=4 : Hence there are not enough pebbles to (i+1)-weakly cover the board, which proves the lemma. 2 In contrast to our result, Watanabe and Toda [WT93] have proved that NPMV c PF NP tt holds relative to a random oracle. 4 Adaptiveness in Random Reductions In <ref> [FFLS92] </ref>, it is shown that NEEE 6 BPEEE implies that there exist sets in NP P which are randomly self-reducible, but not nonadaptively randomly self-reducible. The following theorem obtains the same consequence as in [FFLS92], with the additional property that the language that we construct is not self-reducible. <p> c PF NP tt holds relative to a random oracle. 4 Adaptiveness in Random Reductions In <ref> [FFLS92] </ref>, it is shown that NEEE 6 BPEEE implies that there exist sets in NP P which are randomly self-reducible, but not nonadaptively randomly self-reducible. The following theorem obtains the same consequence as in [FFLS92], with the additional property that the language that we construct is not self-reducible. Theorem 7 If NE 6 BPE, then there exists a p-selective language L 2 NP BPP such that L is randomly self-reducible, not nonadaptively randomly self-reducible, and not self-reducible. <p> Finally, M 0 accepts x if and only if x is less than or equal to this remainder. Techniques developed in <ref> [FFLS92] </ref> can be used to show that there exists a polynomial that bounds m such that the error probability of M 0 is bounded. <p> Let denote lexicographic ordering on fl . Define L = fx j 9s; jsj = jxj; s is a witness tuple; and s xg: (Languages of this form are called "step" languages in <ref> [FFLS92] </ref>.) For all strings of good length, there is a unique witness tuple which decides membership or nonmembership of x 2 L. Since T 2 UP " co-UP, this witness tuple can be found nondeterministically in polynomial time. Thus, L 2 UP " co-UP.
Reference: [FHOS93] <author> S. Fenner, S. Homer, M. Ogiwara, and A. Selman. </author> <title> On using oracles that compute values. </title> <booktitle> In Proc. 10th Annual Symp. on Theoret. Aspects of Computer Science, Lecture Notes in Computer Science, </booktitle> <volume> volume 665, </volume> <pages> pages 398-407. </pages> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: For example, the assertion "NPMV c PF" means that every partial multivalued function in NPMV has a refinement that can be computed efficiently by some deterministic polynomial time transducer. Notions of polynomial time Turing reducibility between partial multivalued functions are defined in <ref> [Sel92, FHOS93] </ref>. Here we need only the following special case. Let M be a deterministic oracle Turing machine transducer that accesses a set as its oracle. Given a set L, let M [L] denote the single-valued partial function that M computes with oracle L.
Reference: [For79] <author> S. Fortune. </author> <title> A note on sparse complete sets. </title> <journal> SIAM J. Comput., </journal> <volume> 8 </volume> <pages> 431-433, </pages> <year> 1979. </year>
Reference-contexts: Disjunctive self-reducibility is the structural property that forms the basis of the work by P. Berman [Ber78], Fortune <ref> [For79] </ref>, Mahaney [Mah82], and others, concerning self-reducibility and reductions to sparse sets. An obvious and well-known algorithm with SAT as an oracle uses the disjunctive self-reducibility of SAT in order to compute a satisfying assignment for any satisfiable formula.
Reference: [FRS88] <author> L. Fortnow, J. Rompel, and M. Sipser. </author> <title> On the power of multi-prover interactive protocols. </title> <booktitle> In Proc. 3rd Annual Confference on Structure in Complexity Theory, </booktitle> <pages> pages 156-161. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1988. </year>
Reference-contexts: We raise the question "How much interaction is required?" in a natural proof system. We will show under plausible complexity theoretic assumption that there are languages in NP that require a polynomial number of rounds even if additional provers are allowed. Following <ref> [FRS88] </ref>, let IP (j; k) be the class of languages accepted with no more than j provers in no more than k rounds. Let poly designate a polynomial. Let NIP (j; k) be the corresponding class of languages accepted by natural interactive proof systems. Let const designate a constant. <p> Thus, as a consequence of Proposition 4, if L is any language in NP BPP for which search reduces to decision, then L belongs to NIP (1; poly) NIP (const; const). This observation stands in contrast to <ref> [FRS88] </ref> in which they show that IP (poly; poly) = IP (3; 2). Next we show that a trade-off between number of rounds and number of provers cannot be accomplished even if a polynomial number of provers are allowed.
Reference: [GG86] <editor> J. Geske and J. Grollmann. </editor> <title> Relativizations of unambiguous and random polynomial time classes. </title> <journal> SIAM J. Comput., </journal> <volume> 15(2) </volume> <pages> 511-519, </pages> <month> May </month> <year> 1986. </year> <month> 37 </month>
Reference-contexts: Set m := 2 k , and go to the next stage. This completes the construction of the oracle B. 2 Only Lemma 4 needs to be proved now. To prove Lemma 4, we will use the following pebbling game, which was defined in <ref> [GG86] </ref> and extended in [Rub91]. An m fi m board is an m fi m matrix over f0; 1g with its m 2 squares denoted by b st where 1 s; t m.
Reference: [GMR89] <author> S. Goldwasser, S. Micali, and C. Rackoff. </author> <title> The knowledge complexity of interactive proof systems. </title> <journal> SIAM J. Comput., </journal> <volume> 18(1) </volume> <pages> 186-208, </pages> <month> Feb. </month> <year> 1989. </year>
Reference-contexts: We assume readers are familiar with interactive proof systems <ref> [GMR89, Bab85] </ref> and with multiprover interactive proof systems [BOGKW88]. In [BBFG91, BG] the authors consider competitive proof systems. An interactive proof system for a language L is competitive if the honest prover is a probabilistic polynomial time oracle Turing machine that accesses the language L.
Reference: [GS88] <author> J. Grollmann and A. Selman. </author> <title> Complexity measures for public-key cryp-tosystems. </title> <journal> SIAM J. Comput., </journal> <volume> 17(2) </volume> <pages> 309-355, </pages> <month> April </month> <year> 1988. </year>
Reference-contexts: Thus, L 2 co-NP implies T 2 P NP"co-NP co-NP. 2 Suppose that polynomial time recognizable relation S and polynomial p define the set L 2 NP that exists by Theorem 2. Consider the partial function f S;p , and consider the following set (cf. <ref> [GS88, Mil76] </ref>) R f S;p = fhx; yi j 9z [y z and f S;p (x) 7! z]g: It is easy to see that f S;p is reducible to R f S;p in polynomial time by a binary search algorithm.
Reference: [HHO + 92] <author> L. Hemachandra, A. Hoene, M. Ogiwara, A. Selman, T. Thierauf, and J. Wang. </author> <title> Selectivity. </title> <type> Manuscript, </type> <year> 1992. </year>
Reference-contexts: The p-selective set constructed in the proof of Theorem 10 does not have this property, so it is not a standard left cut. However, it is not hard to see that all of the p-selective sets constructed in this paper (and in <ref> [HHO + 92] </ref>) are either standard left cuts or P m -equivalent to some standard left cut. (We do not include proofs of this, but the reader may do so using the techniques of the proof of the next theorem.) Is there a p-selective set that is not P m -equivalent <p> This completes the proof of the theorem. 2 Whereas for every tally set T , there exists a standard left cut L (r) such that T P T L (r) [Sel82a], it is shown in <ref> [HHO + 92] </ref> that there exists a tally set T that is not P tt -reducible to any p-selective set. Next, under the assumption UE 6= E, we easily show that such a set can be constructed in UP.
Reference: [JY90] <author> D. Joseph and P. Young. </author> <title> Self-reducibility: the effects of internal structure on computational complexity. </title> <editor> In A. Selman, editor, </editor> <booktitle> Complexity Theory Retrospective, </booktitle> <pages> pages 82-107. </pages> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1990. </year>
Reference-contexts: As a consequence, our result solves the principal open question in [Ko87]. Ko's theorem states that if a set L is disjunctive self-reducible, then it is a self-1-helper. As Joseph and Young write in <ref> [JY90] </ref>, "One of the major open problems left by Ko's work is: What is the relationship between self-helping and self-reducibility? For instance, is the converse of the above theorem true?" Our construction shows that the converse fails under the above assumption.
Reference: [Ko83] <author> K. Ko. </author> <title> On self-reducibility and weak P- selectivity. </title> <journal> J. Comput. System Sci., </journal> <volume> 26 </volume> <pages> 209-211, </pages> <year> 1983. </year>
Reference-contexts: Ko <ref> [Ko83] </ref> showed that all disjunctive self-reducible sets are in NP. 2 The notion of search reducible to decision applies to sets in NP only. Schoning defined an oracle Turing machine M to be robust if for every oracle A, the language accepted by M A is the same [Sch85]. <p> Nonadaptive random self-reduction is a special case of an adaptive random self-reduction, where the queries to the oracle are restricted to be nonadaptive. P-selective sets have been the focus of many researchers, <ref> [Sel79, Ko83, Tod91] </ref>, and they form the basis of our work. This property was defined by Selman in [Sel79].
Reference: [Ko87] <author> K. Ko. </author> <title> On helping by robust oracle machines. </title> <journal> Theor. Comput. Sci., </journal> <volume> 52 </volume> <pages> 15-36, </pages> <year> 1987. </year>
Reference-contexts: Balcazar [Bal90] has demonstrated that search reduces to decision for a set L if and only if L is a self-1-helper, a notion defined by Ko <ref> [Ko87] </ref>. As a consequence, our result solves the principal open question in [Ko87]. Ko's theorem states that if a set L is disjunctive self-reducible, then it is a self-1-helper. <p> Balcazar [Bal90] has demonstrated that search reduces to decision for a set L if and only if L is a self-1-helper, a notion defined by Ko <ref> [Ko87] </ref>. As a consequence, our result solves the principal open question in [Ko87]. Ko's theorem states that if a set L is disjunctive self-reducible, then it is a self-1-helper. <p> These results provide answers for the remaining open questions about self-1-helpers in <ref> [Ko87] </ref>. Also, we construct an oracle relative to which assignments for satisfying formulas cannot be computed nonadaptively from SAT. We apply our techniques to similar issues concerning random self-reducibility [FF91, AFK89, FFLS92]. <p> Schoning defined an oracle Turing machine M to be robust if for every oracle A, the language accepted by M A is the same [Sch85]. Ko <ref> [Ko87] </ref> used this notion to define the notion of self-1-helpers. <p> Specifically, if P r is one of these, then search reduces to decision for a language L by an P r reduction only if L 2 P. (cf. [Kre88]) 7 Definition 4 <ref> [Ko87] </ref> A set A is a self-1-helper if there is a robust, deterministic oracle Turing machine M that accepts A such that for all x 2 A, M A on input x halts in polynomial time. <p> Thus, we may restate our corollary as a result about self-1-helpers. 11 Corollary 3 If NE 6= E, then there exists a language L 2 NP P that is a self-1--helper, that is not a nonadaptive self-1-helper, and is not self-reducible. Corollary 3 settles an open question in <ref> [Ko87] </ref> by showing that the converse of one of Ko's main theorems in [Ko87] is false unless NE = E. 3.2 "Self-reducible" vs. "search nonadaptively reduces to decision" Let UE denote the class of languages accepted by nondeterministic exponential time unambiguous machines, and let co-UE = fL j L 2 UEg. <p> Corollary 3 settles an open question in <ref> [Ko87] </ref> by showing that the converse of one of Ko's main theorems in [Ko87] is false unless NE = E. 3.2 "Self-reducible" vs. "search nonadaptively reduces to decision" Let UE denote the class of languages accepted by nondeterministic exponential time unambiguous machines, and let co-UE = fL j L 2 UEg. <p> Ko defined the following concept of unambiguous 1-helping in <ref> [Ko87] </ref>.
Reference: [Kre88] <author> M. Krentel. </author> <title> The complexity of optimization problems. </title> <journal> J. Comput. System Sci., </journal> <volume> 36 </volume> <pages> 490-509, </pages> <year> 1988. </year>
Reference-contexts: Specifically, if P r is one of these, then search reduces to decision for a language L by an P r reduction only if L 2 P. (cf. <ref> [Kre88] </ref>) 7 Definition 4 [Ko87] A set A is a self-1-helper if there is a robust, deterministic oracle Turing machine M that accepts A such that for all x 2 A, M A on input x halts in polynomial time.
Reference: [LFKN92] <author> C. Lund, L. Fortnow, H. Karloff, and N. Nisan. </author> <title> Algebraic methods for interactive proof systems. </title> <journal> J. ACM, </journal> <volume> 39(4) </volume> <pages> 859-868, </pages> <month> Oct. </month> <year> 1992. </year>
Reference-contexts: When the computational power of provers is unrestricted such a result is not possible, for every language in PSPACE has a 1 prover polynomial-round interactive proof system <ref> [LFKN92, Sha92] </ref> and every language in PSPACE can be accepted by 2 provers in 1 round [CCL91]. How do natural proof systems compare with other models in the literature? We identify four classes of languages, and for convenience designate them as I, II, III, and IV.
Reference: [LLS75] <author> R. Ladner, N. Lynch, and A. Selman. </author> <title> A comparison of polynomial time reducibilities. </title> <journal> Theor. Comput. Sci., </journal> <volume> 1 </volume> <pages> 103-123, </pages> <year> 1975. </year>
Reference-contexts: Let fP i g i2N (fN P i g i2N ) denote an enumeration of deterministic (nondeterministic) polynomial time Turing machines, such that P i (x) (N P i (x)) runs in time p i (jxj) = jxj i . We use standard notation for polynomial time reductions <ref> [LLS75] </ref>. We require the following standard reductions in particular. <p> A set A is disjunctive reducible to a set B 5 (A P d B) if g (x) is a set of queries Q such that x 2 A $ Q " B 6= ;: It is well-known <ref> [LLS75] </ref> that A P tt B if and only if there is a nonadaptive polynomial time reduction from A to B.
Reference: [Mah82] <author> S. Mahaney. </author> <title> Sparse complete sets for NP: solution of a conjecture of Berman and Hartmanis. </title> <journal> J. Comput. System Sci., </journal> <volume> 25 </volume> <pages> 130-143, </pages> <year> 1982. </year>
Reference-contexts: Disjunctive self-reducibility is the structural property that forms the basis of the work by P. Berman [Ber78], Fortune [For79], Mahaney <ref> [Mah82] </ref>, and others, concerning self-reducibility and reductions to sparse sets. An obvious and well-known algorithm with SAT as an oracle uses the disjunctive self-reducibility of SAT in order to compute a satisfying assignment for any satisfiable formula. <p> All the well known examples of self-reducible sets in NP <ref> [Mah82, MP79, Sel88] </ref> are actually disjunctive self-reducible sets. In light of the results of Buhrman, van Helden, and Torenvliet [BvHT93], it is reasonable to inquire whether NP contains sets that are self-reducible but not disjunctive self-reducible.
Reference: [Mil76] <author> G. Miller. </author> <title> Reimann's hypothesis and tests for primality. </title> <journal> J. Comput. System Sci., </journal> <volume> 13 </volume> <pages> 300-317, </pages> <year> 1976. </year>
Reference-contexts: Thus, L 2 co-NP implies T 2 P NP"co-NP co-NP. 2 Suppose that polynomial time recognizable relation S and polynomial p define the set L 2 NP that exists by Theorem 2. Consider the partial function f S;p , and consider the following set (cf. <ref> [GS88, Mil76] </ref>) R f S;p = fhx; yi j 9z [y z and f S;p (x) 7! z]g: It is easy to see that f S;p is reducible to R f S;p in polynomial time by a binary search algorithm.
Reference: [MP79] <author> A. Meyer and M. Paterson. </author> <title> With what frequency are apparently intractable problems difficult? Technical Report MIT/LCS/TM-126, </title> <publisher> M.I.T., </publisher> <year> 1979. </year>
Reference-contexts: Furthermore, f P tt L if M accesses its oracle nonadaptively. The standard definition of self-reducibility that is used in most contemporary research in complexity theory was given by Meyer and Paterson <ref> [MP79] </ref>. Definition 1 A polynomial time computable partial order &lt; on fl is OK if and only if, 1. <p> All the well known examples of self-reducible sets in NP <ref> [Mah82, MP79, Sel88] </ref> are actually disjunctive self-reducible sets. In light of the results of Buhrman, van Helden, and Torenvliet [BvHT93], it is reasonable to inquire whether NP contains sets that are self-reducible but not disjunctive self-reducible.
Reference: [NOS93] <author> A. Naik, M. Ogiwara, and A. Selman. </author> <title> P-selective sets, and reducing search to decision vs. self-reducibility. </title> <booktitle> In Proc. 8th Annual Conference on Structure in Complexity Theory, </booktitle> <pages> pages 52-64. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1993. </year>
Reference-contexts: Does search nonadaptively reduce to decision for SAT? 7 Acknowledgements The authors gratefully acknowledge comments and suggestions by Richard Beigel, Mihir Bellare, Harry Buhrman, Joan Feigenbaum, Lance Fortnow, Silvio Micali, and Leen Torenvliet. Some of the results in this paper were first announced in <ref> [NOS93] </ref>, and the original proofs of Theorems 2 and 7 that appear in [NOS93] used the construction given in the proof of Theorem 10 and required the hypothesis NE " co-NE 6= E. The improvements given in this version and Corollary 2 are due to Richard Beigel. <p> Some of the results in this paper were first announced in <ref> [NOS93] </ref>, and the original proofs of Theorems 2 and 7 that appear in [NOS93] used the construction given in the proof of Theorem 10 and required the hypothesis NE " co-NE 6= E. The improvements given in this version and Corollary 2 are due to Richard Beigel. They appear here with his permission and with our gratitude.
Reference: [Rub91] <author> R. Rubinstein. </author> <title> Self-P-printability and polynomial time Turing equivalence to a tally set. </title> <journal> SIAM J. Comput., </journal> <volume> 20(6) </volume> <pages> 1021-1033, </pages> <year> 1991. </year> <month> 38 </month>
Reference-contexts: Set m := 2 k , and go to the next stage. This completes the construction of the oracle B. 2 Only Lemma 4 needs to be proved now. To prove Lemma 4, we will use the following pebbling game, which was defined in [GG86] and extended in <ref> [Rub91] </ref>. An m fi m board is an m fi m matrix over f0; 1g with its m 2 squares denoted by b st where 1 s; t m. <p> The following lemma establishes a lower bound on the number of pebbles required to k-weakly cover a board. Lemma 3 <ref> [Rub91] </ref> At least m (m1) z (z1) pebbles are required to k-weakly cover an m fi m board, where z = b (log m) k + 1c.
Reference: [Sch85] <author> U. Schoning. </author> <title> Robust algorithms: A different approach to Oracles. </title> <journal> Theor. Comput. Sci., </journal> <volume> 40 </volume> <pages> 57-66, </pages> <year> 1985. </year>
Reference-contexts: Ko [Ko83] showed that all disjunctive self-reducible sets are in NP. 2 The notion of search reducible to decision applies to sets in NP only. Schoning defined an oracle Turing machine M to be robust if for every oracle A, the language accepted by M A is the same <ref> [Sch85] </ref>. Ko [Ko87] used this notion to define the notion of self-1-helpers.
Reference: [Sel79] <author> A. Selman. </author> <title> P-selective sets, tally languages, and the behavior of polynomial time reducibilities on NP. </title> <journal> Math. Systems Theory, </journal> <volume> 13 </volume> <pages> 55-65, </pages> <year> 1979. </year>
Reference-contexts: Thus, there is no trade-off between number of rounds and number of provers. Let us say a few words here about our techniques, for, as it turns out, this paper is also about p-selective sets <ref> [Sel79] </ref>. It is known that a set L belongs to P if and only if it is both p-selective and disjunctive self-reducible. <p> We have been stymied in the past because the only method known for constructing p-selective sets has been the standard left cut construction of <ref> [Sel79, Sel82b] </ref>. In this paper we invent new methods for constructing p-selective sets that are not standard left cuts. <p> Nonadaptive random self-reduction is a special case of an adaptive random self-reduction, where the queries to the oracle are restricted to be nonadaptive. P-selective sets have been the focus of many researchers, <ref> [Sel79, Ko83, Tod91] </ref>, and they form the basis of our work. This property was defined by Selman in [Sel79]. <p> P-selective sets have been the focus of many researchers, [Sel79, Ko83, Tod91], and they form the basis of our work. This property was defined by Selman in <ref> [Sel79] </ref>. Definition 6 A set L is p-selective if there exists a polynomial time computable function f : fl fi fl 7! fl such that (i) f (x; y) 2 fx; yg, and (ii) if f (x; y) = y, then x 2 L ! y 2 L. <p> The string z is called the "pivot" string. The classical and only previously known method for constructing p-selective sets has been the standard left cut construction of <ref> [Sel79, Sel82b] </ref>. For r 2 fl [ ! , the standard left cut of r is the set L (r) = fx 2 + j x &lt; rg: Where &lt; is the ordinary dictionary ordering of strings with 0 less than 1. <p> For example, the string 001 is less than the string 10 in dictionary ordering but not in lexicographic ordering.) It is obvious that every standard left cut is p-selective with selector f (x; y) = minfx; yg. 3 On Self-Reducibilities 3.1 "Self-reducible" vs. "search reduces to decision" Selman showed in <ref> [Sel79] </ref> that a set L is disjunctive self-reducible and p-selective if and only if L 2 P, and Buhrman, van Helden, and Torenvliet improved this by showing [BvHT93] that a set L is self-reducible and p-selective if and only if L 2 P. <p> It follows immediately from Theorem 1 and [BvHT93] that if E 6= NE, then there is a set L 2 NP P which is not self-reducible and for which search does not nonadaptively reduce to decision. (This is so because it is known <ref> [Sel79] </ref> that E 6= NE implies the existence of a p-selective set in NP P.) However, a stronger assertion than this will follow from the following theorem. Theorem 2 If NE 6= E, then there exists a p-selective set L 2 NP P for which search reduces to decision. <p> The case m &gt; n follows similarly. 2 5 More about P-selective Sets 5.1 P-Selective Sets, Standard Left Cuts, and Tally Lan guages The classical and only previously known method for constructing p-selective sets has been the standard left cut construction of <ref> [Sel79, Sel82b] </ref>. We begin this section by comparing arbitrary p-selective sets with standard left cuts. If L (r) is a standard left cut and r 62 0 fl , then for every length n, L (r)" n 6= ;.
Reference: [Sel82a] <author> A. Selman. </author> <title> Analogues of semirecursive sets and effecitve reducibilities to the study of NP complexity. </title> <journal> Inf. Control, </journal> <volume> 52(1) </volume> <pages> 36-51, </pages> <year> 1982. </year>
Reference-contexts: This completes the proof of Theorem 11. 2 29 It is known that for every standard left cut L (r), there exists a tally language T , such that L (r) P ptt T , and T P T L (r) <ref> [Sel82a] </ref>. As an immediate corollary, this holds for all p-selective sets if P = PP. <p> This completes the proof of the theorem. 2 Whereas for every tally set T , there exists a standard left cut L (r) such that T P T L (r) <ref> [Sel82a] </ref>, it is shown in [HHO + 92] that there exists a tally set T that is not P tt -reducible to any p-selective set. Next, under the assumption UE 6= E, we easily show that such a set can be constructed in UP.
Reference: [Sel82b] <author> A. Selman. </author> <title> Reductions on NP and P-selective sets. </title> <journal> Theor. Comput. Sci., </journal> <volume> 19 </volume> <pages> 287-304, </pages> <year> 1982. </year>
Reference-contexts: We have been stymied in the past because the only method known for constructing p-selective sets has been the standard left cut construction of <ref> [Sel79, Sel82b] </ref>. In this paper we invent new methods for constructing p-selective sets that are not standard left cuts. <p> The string z is called the "pivot" string. The classical and only previously known method for constructing p-selective sets has been the standard left cut construction of <ref> [Sel79, Sel82b] </ref>. For r 2 fl [ ! , the standard left cut of r is the set L (r) = fx 2 + j x &lt; rg: Where &lt; is the ordinary dictionary ordering of strings with 0 less than 1. <p> The case m &gt; n follows similarly. 2 5 More about P-selective Sets 5.1 P-Selective Sets, Standard Left Cuts, and Tally Lan guages The classical and only previously known method for constructing p-selective sets has been the standard left cut construction of <ref> [Sel79, Sel82b] </ref>. We begin this section by comparing arbitrary p-selective sets with standard left cuts. If L (r) is a standard left cut and r 62 0 fl , then for every length n, L (r)" n 6= ;. <p> Although it is easy to transform this reduction into a many-one reduction, there is no need to do because the claim L (r) P m A follows immediately from the fact that for any sets X and Y , <ref> [Sel82b] </ref> if Y is p-selective, and X P ptt Y , then X P m Y .
Reference: [Sel88] <author> A. Selman. </author> <title> Natural self-reducible sets. </title> <journal> SIAM J. Comput., </journal> <volume> 17 </volume> <pages> 989-996, </pages> <year> 1988. </year>
Reference-contexts: It has long been felt that the structural property that causes search to be reducible to decision is disjunctive self-reducibility. It follows from <ref> [Sel88] </ref> that search reduces to decision for all disjunctive self-reducible sets and for all NP-complete sets (even though not all NP-complete sets are known to be disjunctive self-reducible). <p> All the well known examples of self-reducible sets in NP <ref> [Mah82, MP79, Sel88] </ref> are actually disjunctive self-reducible sets. In light of the results of Buhrman, van Helden, and Torenvliet [BvHT93], it is reasonable to inquire whether NP contains sets that are self-reducible but not disjunctive self-reducible.
Reference: [Sel92] <author> A. Selman. </author> <title> A taxonomy of complexity classes of functions. </title> <journal> J. Comput. System Sci., </journal> <note> 1992. In press. </note>
Reference-contexts: PF NP is the set of all partial functions that can be computed in polynomial time relative to an oracle in NP, and PF NP tt is the set of all partial functions that can be computed nonadaptively in polynomial time with access to an oracle in NP <ref> [Bei91, Sel92] </ref>. We take the point of view that a partial multivalued function is easy to compute if for each input string in the domain of the function, some value of the function is easy to compute. For this reason, we define the following technical notions. <p> For example, the assertion "NPMV c PF" means that every partial multivalued function in NPMV has a refinement that can be computed efficiently by some deterministic polynomial time transducer. Notions of polynomial time Turing reducibility between partial multivalued functions are defined in <ref> [Sel92, FHOS93] </ref>. Here we need only the following special case. Let M be a deterministic oracle Turing machine transducer that accesses a set as its oracle. Given a set L, let M [L] denote the single-valued partial function that M computes with oracle L.
Reference: [Sha92] <author> A. Shamir. </author> <title> IP=PSPACE. </title> <journal> J. ACM, </journal> <volume> 39(4) </volume> <pages> 869-877, </pages> <year> 1992. </year>
Reference-contexts: When the computational power of provers is unrestricted such a result is not possible, for every language in PSPACE has a 1 prover polynomial-round interactive proof system <ref> [LFKN92, Sha92] </ref> and every language in PSPACE can be accepted by 2 provers in 1 round [CCL91]. How do natural proof systems compare with other models in the literature? We identify four classes of languages, and for convenience designate them as I, II, III, and IV.
Reference: [Thi92] <author> T. Thierauf. </author> <type> Personal Communication, </type> <year> 1992. </year>
Reference-contexts: The outer for-loop executes at most a polynomial number of times since g is polynomial time-bounded. Since there are only a polynomial number of ways in which a set of queries can be answered, this algorithm runs in polynomial time. 2 Thierauf <ref> [Thi92] </ref> has observed that the hypothesis of Theorem 1 can be weakened, which, for later reference, we state as a separate proposition: Proposition 1 If L 2 NP is P tt -reducible to a p-selective set and search nonadap tively reduces to decision for L, then L 2 P.
Reference: [Tod91] <author> S. </author> <title> Toda. On polynomial-time truth-table reducibilities of intractable sets to P-selective sets. </title> <journal> Math. Systems Theory, </journal> <volume> 24(2) </volume> <pages> 69-82, </pages> <year> 1991. </year>
Reference-contexts: Nonadaptive random self-reduction is a special case of an adaptive random self-reduction, where the queries to the oracle are restricted to be nonadaptive. P-selective sets have been the focus of many researchers, <ref> [Sel79, Ko83, Tod91] </ref>, and they form the basis of our work. This property was defined by Selman in [Sel79]. <p> Given any p-selector f (for some p-selective set), every finite set Q can be ordered by f in time a polynomial in the sum of the lengths of the strings in Q. We will use the following lemma, proved by Toda in <ref> [Tod91] </ref>. Lemma 1 Let L be a p-selective set with p-selector f , and let Q fl be a finite set.
Reference: [WT93] <author> O. Watanabe and S. </author> <title> Toda. Structural analysis of the complexity of inverse functions. </title> <journal> Math. Systems Theory, </journal> <volume> 26 </volume> <pages> 203-214, </pages> <year> 1993. </year> <month> 39 </month>
Reference-contexts: cover the board is greater than 2 k (2 k 1) &gt; 2 k=4 (by equation 5) &gt; 2 k=4 = 2 (7k=4)1 2 5k=4 : Hence there are not enough pebbles to (i+1)-weakly cover the board, which proves the lemma. 2 In contrast to our result, Watanabe and Toda <ref> [WT93] </ref> have proved that NPMV c PF NP tt holds relative to a random oracle. 4 Adaptiveness in Random Reductions In [FFLS92], it is shown that NEEE 6 BPEEE implies that there exist sets in NP P which are randomly self-reducible, but not nonadaptively randomly self-reducible.
References-found: 48

