URL: http://www.cs.ucsd.edu/users/goguen/ps/tat97.ps.gz
Refering-URL: http://www.cs.ucsd.edu/users/goguen/new.html
Root-URL: http://www.cs.ucsd.edu
Title: Algebraic Semiotics, ProofWebs, and Distributed Cooperative Proving 1  
Author: Joseph Goguen, Akira Mori and Kai Lin 
Address: San Diego, La Jolla CA 92093-0114  
Affiliation: Dept. Computer Science Engineering, Univ. California at  
Date: 1-2 September 1997), pages 24-34.  
Note: Slightly revised, from Proceedings, User Interfaces for Theorem Provers `97 (Sophia Antipolis,  
Abstract: We describe a new approach to interface design called algebraic semiotics, combining semiotics with algebraic specification to give a rigorous theory of representation quality, and we apply it to the tatami distributed cooperative proving project. This project uses standard html, Java, etc. for remote proof browsing, servers for remote proof execution, a protocol to maintain truth of distributed cooperative proofs, and a tool combining proof assistance with website editing. Its proof paradigm reduces theorems to problems solvable by proof servers. ProofWebs integrate browsing, execution, animation, and informal explanation with formal proofs, and their design has been driven by semiotic ideas. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Syd Field. Screenplay: </author> <booktitle> The Foundations of Screenwriting. Dell, 1982. Third edition. </booktitle>
Reference-contexts: We suggest a "postmodern" approach to make proofs more understandable and interesting by recording the local conflicts that motivate difficult proof steps on ProofWebs; as Aristotle said, "Drama is conflict." Syd Field's screen writing books (e.g., <ref> [1] </ref>) give a precise but naive dramatic structure: Hollywood plots should have three acts, for setup, conflict, and resolution, of 30, 60, 30 minutes, with "plot points" to move action from one act to the next. Proofs that are structured this way might be easier to understand. <p> We now consider the movement (mapping, translation, interpretation, representation) of signs in one system to signs in another. For example, tatami pages and Status Windows result from translating ProofWebs. Perhaps proof structures that map into the "Syd Field" sign system <ref> [1] </ref> would be easier to understand; in fact, we used this structure in our flag ProofWeb, where conflict arises from the failure of a reduction, and is resolved when the appropriate lemma is provided (see Figure 2). The following gives a foundation for making such considerations rigorous.
Reference: [2] <author> Joseph Goguen. </author> <title> Semiotic morphisms. </title> <type> Technical Report CS97-553, </type> <institution> Dept. Computer Science & Engineering, University of California at San Diego, </institution> <year> 1997. </year> <title> Early version in Intelligent Systems: A Semiotic Perspective, Vol. II, </title> <editor> ed. James Albus, Alex Meystel and Richard Quintero, </editor> <booktitle> National Inst. </booktitle> <institution> Science & Technology (Gaithersberg MD, </institution> <month> 20-23 October </month> <year> 1996), </year> <pages> pages 26-31. 9 </pages>
Reference-contexts: This paper tackles user interface problems using semiotics, the study of signs. Unfortunately, this area has not developed in a mathematically rigorous way, has not systematically addressed quality of representation, and has not taken sufficient account of social context. We address these problems with algebraic semiotics <ref> [2] </ref>, which combines algebraic specification [6] with social semiotics in the sense of [3]. We have built a proof planning and website 5 construction tool called kumo [4]. <p> A basic insight of Saussure was that every sign should be considered part of a system of interrelated signs. A rigorous foundation for discussing the structure of such representations is given in <ref> [2] </ref>, but we must omit much detail here. <p> Acknowledgements Thank to members of the "links" group for support and comments during the laborious development of the material in this paper, particularly Grigore Ro~su and Razvan Diaconescu for help with formalization (described in <ref> [2] </ref>), and Eric Livingston for discussions on social issues; thanks to Duncan Shand for comments. and special thanks to Kokichi Futatsugi for encouragement and support through the CafeOBJ project.
Reference: [3] <author> Joseph Goguen. </author> <title> Towards a social, ethical theory of information. </title> <editor> In Geoffrey Bowker, Les Gasser, Leigh Star, and William Turner, editors, </editor> <booktitle> Social Science, Technical Systems and Cooperative Work: Beyond the Great Divide, </booktitle> <pages> pages 27-56. </pages> <publisher> Erlbaum, </publisher> <year> 1997. </year>
Reference-contexts: Unfortunately, this area has not developed in a mathematically rigorous way, has not systematically addressed quality of representation, and has not taken sufficient account of social context. We address these problems with algebraic semiotics [2], which combines algebraic specification [6] with social semiotics in the sense of <ref> [3] </ref>. We have built a proof planning and website 5 construction tool called kumo [4].
Reference: [4] <author> Joseph Goguen, Kai Lin, Akira Mori, Grigore Ro~su, and Akiyoshi Sato. </author> <title> Distributed cooperative formal methods tools. </title> <editor> In Michael Lowry, editor, </editor> <booktitle> Proceedings, Automated Software Engineering. NASA, 1997. </booktitle> <address> Lake Tahoe CA, </address> <month> 3-5 November </month> <year> 1997. </year>
Reference-contexts: We address these problems with algebraic semiotics [2], which combines algebraic specification [6] with social semiotics in the sense of [3]. We have built a proof planning and website 5 construction tool called kumo <ref> [4] </ref>. <p> Each ProofWeb has a more abstract description as a ProofDag; this is our second major concept. "dag" stands for "directed acyclic graph," a generalization of tree that allows some nodes to be shared; further detail is given in <ref> [4] </ref>. While ProofWeb is an evolving approach for organizing proof information, ProofDag is a precise abstract data type used for distributed cooperative proving. ProofWebs can be browsed over the internet, executed on remote servers, and constructed locally using kumo. Tatami pages appear in a fixed master window. <p> Users can pick up unfinished nodes of their own or others. Alternative proofs of the same goal are an additional complexity, handled by a data structure that we call a 2-dimensional dag, or 2-dag for short (this structure is a blend of proof status and ownership information <ref> [4] </ref>). Incomplete proofs are registered with the SUBMIT button, which updates the proof and its status at each concerned site. Before registration, proofs are "ghosts" available only locally. <p> Before registration, proofs are "ghosts" available only locally. Users can delete their own proofs, but if some deleted subproof is used by others, then its ownership is reassigned to whoever used it first. These (and other) ideas constitute our tatami protocol <ref> [4] </ref>. 4.2 Proof Servers Putting proof servers on the internet means tatami users do not need them locally.
Reference: [5] <author> Joseph Goguen and Charlotte Linde. </author> <title> Optimal structures for multi-media instruction. </title> <type> Technical report, </type> <institution> SRI International, 1984. To Office of Naval Research, Psychological Sciences Division. </institution>
Reference-contexts: Experiments reported in <ref> [5] </ref> show that preserving high levels is more important than preserving priorities, which in turn 5 is more important than preserving content. They also show a strong tendency to preserve higher levels at the expense of lower levels. <p> This may be surprising, because of emphasis by cognitive psychologists on the "basic level" of lexical concepts (e.g., "bird", see Rosch [13, 14]). The sentential level of natural language was long considered basic, but research like that of <ref> [5] </ref> shows that the discourse level is higher in our technical sense, and thus more important.
Reference: [6] <author> Joseph Goguen and Grant Malcolm. </author> <title> Algebraic Semantics of Imperative Programs. </title> <publisher> MIT, </publisher> <year> 1996. </year>
Reference-contexts: Unfortunately, this area has not developed in a mathematically rigorous way, has not systematically addressed quality of representation, and has not taken sufficient account of social context. We address these problems with algebraic semiotics [2], which combines algebraic specification <ref> [6] </ref> with social semiotics in the sense of [3]. We have built a proof planning and website 5 construction tool called kumo [4]. <p> s; constants c : ! s are also allowed; 6. a priority (partial) ordering on each C n ; 7. some relations and functions on signs, for use in application conditions; and 8. a set A of axioms, constraining possible signs. 2 A sign system is an abstract data type <ref> [6] </ref> enriched with levels and priority; hence it can be specified by initial algebra semantics [6]; we exploit this by using OBJ3 in Section 7. We now consider the movement (mapping, translation, interpretation, representation) of signs in one system to signs in another. <p> each C n ; 7. some relations and functions on signs, for use in application conditions; and 8. a set A of axioms, constraining possible signs. 2 A sign system is an abstract data type <ref> [6] </ref> enriched with levels and priority; hence it can be specified by initial algebra semantics [6]; we exploit this by using OBJ3 in Section 7. We now consider the movement (mapping, translation, interpretation, representation) of signs in one system to signs in another. For example, tatami pages and Status Windows result from translating ProofWebs.
Reference: [7] <author> Joseph Goguen and Grant Malcolm. </author> <title> A hidden agenda. </title> <type> Technical Report CS97-538, UCSD, </type> <institution> Dept. Computer Science & Engineering, </institution> <month> May </month> <year> 1997. </year> <note> Early version in Proceedings, Conference on Intelligent Systems: A Semiotic Perspective, Vol. I, </note> <editor> ed. James Albus, Alex Meystel and Richard Quintero, </editor> <booktitle> National Inst. </booktitle> <institution> Standards & Technology (Gaithersberg MD, </institution> <month> 20-23 October </month> <year> 1996), </year> <pages> pages 159-167. </pages>
Reference-contexts: The tatami system is thus about as far from being a proof checker as it is from being an automatic theorem prover 3 . Our target application is behavioral proofs for concurrent distributed systems, using new coinduction proof methods <ref> [7] </ref>. The tremendous progress of theorem proving system performance makes it arguable that the most pressing open problems now concern user interfaces. Technology-driven approaches to interface design are common, and graphical user interfaces are popular. <p> This yields correctness proofs that are (relatively!) simple and mechanizable, and that handle all typical features of the object paradigm, including classes, subclasses (inheritance), attributes, methods, and local state, as well as concurrency, distribution, nondeterminism, plus logical variables (as in logic programming), abstract data types, and generic modules <ref> [7] </ref>. Hidden algebra generalizes the process algebra and transition system approaches to take advantage of equations for non-monadic methods and attributes. Hidden specifications characterize how objects (and systems) behave, not how they are implemented. <p> Similarly, initiality is important for data types, while finality is important for states. However, data type implementations need not be initial, and object implementations need not be final; this is important because the best implementations often lie between. See <ref> [7] </ref> for more information. 4 The kumo ProofWeb Assistant and Distributed Cooperative Proving ProofWebs have complex html for mathematics and interaction (hyper-links, buttons, popups, etc.).
Reference: [8] <author> Lutz Hamel. </author> <title> Behavioural Verification and Implementation of an Optimizing Compiler for OBJ3. </title> <type> PhD thesis, </type> <institution> Oxford University Computing Lab, </institution> <year> 1996. </year>
Reference-contexts: We now have several ProofWebs on our website, with applets, tutorials, and executable proofs via an OBJ3 barista server; later there will be servers for other provers and sites around the world, and of course more proofs, including correctness of our tatami protocol and of an optimizing compiler for OBJ <ref> [8] </ref>. A prototype of kumo is also available over the web. Akiyoshi Sato is building a generator for kumo-like systems; he is also implementing the tatami protocol, so that we can experiment with distributed cooperative proofs.
Reference: [9] <author> William Labov. </author> <title> The transformation of experience in narrative syntax. </title> <booktitle> In Language in the Inner City, </booktitle> <pages> pages 354-396. </pages> <institution> University of Pennsylvania, </institution> <year> 1972. </year>
Reference-contexts: Proofs that are structured this way might be easier to understand. Another resource is the theory of stories. Labov <ref> [9] </ref> says oral narratives have a precise structure, involving a sequence of "narrative clauses" describing events whose order corresponds to their order in the story, interleaved with "evaluative material" which evaluate the events, in the sense of relating them to socially shared values; there are also optional opening and closing sections.
Reference: [10] <author> Eric Livingston. </author> <title> The Ethnomethodology of Mathematics. </title> <publisher> Routledge & Kegan Paul, </publisher> <year> 1987. </year>
Reference-contexts: General insights from HCI do not give enough insight; we need specific work on the nature of proving, like that in <ref> [10] </ref>. This paper tackles user interface problems using semiotics, the study of signs. Unfortunately, this area has not developed in a mathematically rigorous way, has not systematically addressed quality of representation, and has not taken sufficient account of social context.
Reference: [11] <author> Nicholas Merriam and Michael Harrison. </author> <title> What is wrong with GUIs for theorem provers? In Yves Bartot, editor, </title> <booktitle> Proceedings, User Interfaces for Theorem Provers, </booktitle> <pages> pages 67-74. </pages> <institution> INRIA, 1997. Sophia Antipolis, </institution> <month> 1-2 September </month> <year> 1997. </year>
Reference-contexts: But HCI research shows that graphics is not always better than text, and that some multimedia combination is often better than any single medium [12]. For example, a clickable proof graph can be difficult to use for all but the smallest proofs 4 ; <ref> [11] </ref> considers why many serious users may prefer command line interfaces to direct manipulation. General insights from HCI do not give enough insight; we need specific work on the nature of proving, like that in [10]. This paper tackles user interface problems using semiotics, the study of signs.
Reference: [12] <author> Marian Petre and Blaine Price. </author> <title> Why computer interfaces are not like paintings: the user as a deliberate reader. </title> <booktitle> In Proceedings, East-West HCI'92, </booktitle> <volume> Vol. I, </volume> <pages> pages 217-224. </pages> <institution> Int. Centre for Scientific and Technical Information, Moscow, </institution> <year> 1992. </year>
Reference-contexts: Technology-driven approaches to interface design are common, and graphical user interfaces are popular. But HCI research shows that graphics is not always better than text, and that some multimedia combination is often better than any single medium <ref> [12] </ref>. For example, a clickable proof graph can be difficult to use for all but the smallest proofs 4 ; [11] considers why many serious users may prefer command line interfaces to direct manipulation.
Reference: [13] <author> Eleanor Rosch. </author> <title> On the internal structure of perceptual and semantic categories. In T.M. </title> <editor> Moore, editor, </editor> <booktitle> Cognitive Development and the Acquisition of Language. </booktitle> <publisher> Academic, </publisher> <year> 1973. </year>
Reference-contexts: They also show a strong tendency to preserve higher levels at the expense of lower levels. This may be surprising, because of emphasis by cognitive psychologists on the "basic level" of lexical concepts (e.g., "bird", see Rosch <ref> [13, 14] </ref>). The sentential level of natural language was long considered basic, but research like that of [5] shows that the discourse level is higher in our technical sense, and thus more important.
Reference: [14] <author> Eleanor Rosch. </author> <title> Cognitive reference points. </title> <journal> Cognitive Psychology, </journal> <volume> 7, </volume> <year> 1975. </year>
Reference-contexts: They also show a strong tendency to preserve higher levels at the expense of lower levels. This may be surprising, because of emphasis by cognitive psychologists on the "basic level" of lexical concepts (e.g., "bird", see Rosch <ref> [13, 14] </ref>). The sentential level of natural language was long considered basic, but research like that of [5] shows that the discourse level is higher in our technical sense, and thus more important.
References-found: 14

