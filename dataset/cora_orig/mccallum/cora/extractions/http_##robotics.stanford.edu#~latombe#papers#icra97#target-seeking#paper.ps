URL: http://robotics.stanford.edu/~latombe/papers/icra97/target-seeking/paper.ps
Refering-URL: http://robotics.stanford.edu/~latombe/projects/
Root-URL: http://www.cs.stanford.edu
Email: flavalle,dlin,guibas,latombe,motwanig@cs.stanford.edu  
Title: Finding an Unpredictable Target in a Workspace with Obstacles  
Author: Steven M. LaValle David Lin Leonidas J. Guibas Jean-Claude Latombe Rajeev Motwani 
Note: To Appear in the Proceedings of the 1997 IEEE International Conference on Robotics and Automation  
Address: Stanford, CA 94305  
Affiliation: Computer Science Department Stanford University  
Abstract: This paper introduces a visibility-based motion planning problem in which the task is to coordinate the motions of one or more robots that have omnidirectional vision sensors, to eventually "see" a target that is unpredictable, has unknown initial position, and is capable of moving arbitrarily fast. A visibility region is associated with each robot, and the goal is to guarantee that the target will ultimately lie in at least one visibility region. Both a formal characterization of the general problem and several interesting problem instances are presented. A complete algorithm for computing the motion strategy of the robots is also presented, and is based on searching a finite cell complex that is constructed on the basis of critical information changes. A few computed solution strategies are shown. Several bounds on the minimum number of needed robots are also discussed. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T. Ba~sar and G. J. Olsder. </author> <title> Dynamic Noncooperative Game Theory. </title> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1982. </year>
Reference-contexts: Let = (x p ; S) for which x p 2 X p and S F represent an information state. The information space is a standard representational tool for problems that have imperfect state information, and has been useful in optimal control and dynamic game theory (e.g., <ref> [1] </ref>), and in motion planning [2, 4, 11].
Reference: [2] <author> J. Barraquand and P. Ferbach. </author> <title> Motion planning with uncertainty: The information space approach. </title> <booktitle> In IEEE Int. Conf. Robot. & Autom., </booktitle> <pages> pages 1341-1348, </pages> <year> 1995. </year>
Reference-contexts: The information space is a standard representational tool for problems that have imperfect state information, and has been useful in optimal control and dynamic game theory (e.g., [1]), and in motion planning <ref> [2, 4, 11] </ref>.
Reference: [3] <author> J. F. Canny. </author> <title> The Complexity of Robot Motion Planning. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1988. </year>
Reference-contexts: It is natural to compare the notion of completeness for this problem to completeness for the basic motion planning problem (i.e., the algorithm will find a collision-free path if such 2 a path exists <ref> [3] </ref>). One important difference, however, is that the minimum number of pursuers is crucial, but does not have a correspondence for the basic path planning problem.
Reference: [4] <author> M. Erdmann. </author> <title> Randomization for robot tasks: Using dynamic programming in the space of knowledge states. </title> <journal> Algorithmica, </journal> <volume> 10 </volume> <pages> 248-291, </pages> <year> 1993. </year>
Reference-contexts: The information space is a standard representational tool for problems that have imperfect state information, and has been useful in optimal control and dynamic game theory (e.g., [1]), and in motion planning <ref> [2, 4, 11] </ref>.
Reference: [5] <author> L. Guibas and J. Stolfe. </author> <title> Primitives for the manipulation of general subdivisions and the computation of Voronoi diagrams. </title> <journal> AMC Trans. Graphics, </journal> <volume> 4(2) </volume> <pages> 74-123, </pages> <year> 1985. </year>
Reference-contexts: This precludes the case in which one direction is cannot be extended; although edge visibility actually changes for this case, it does not represent a critical change in information. Our implementation uses the quad-edge structure from <ref> [5] </ref> to efficiently maintain the topological ordering of the conservative cells. Figure 7.a shows a computed example of the cell decomposition. The next issue is searching the information space for a solution, which corresponds to specifying a sequence of adjacent cells.
Reference: [6] <author> L. J. Guibas, J.-C. Latombe, S. M. LaValle, D. Lin, and R. Motwani. </author> <title> A visibility-based pursuit-evasion problem. </title> <note> 1996. Submitted to International Journal of Computational Geometry and Applications. </note>
Reference-contexts: It can be shown that for any simply-connected free space F with n edges, at worst H (F ) = O (lg n), and for general free spaces with h holes, at worst H (F ) = O (h + lg n) <ref> [6] </ref>. To obtain the first result, F can be recursively decomposed by placing pursuers on partitioning edges to prevent the evader from moving from one portion of F to another. A logarithmic number of pursuers can be systematically swept across partition edges to obtain the solution strategy. <p> Instead of using visibility, capture is achieved when one of the pursuers "touches" the evader. We have shown that for any instance of Parsons' problem on a planar graph, there exists an equivalent geometric instance <ref> [6] </ref>. The basic idea is to replace each edge in the graph by a thin corridor that has four bends. The key difference between the graph problem and the geometric problem is the power of visibility, which is essentially removed once four-bend corridors are used. <p> By transforming difficult graph instances into geometric instances, it can be shown that exploring a tree of corridors of the type shown in Figure 2 requires k +1 pursuers in which k is the height of the tree (thus establishing H (F ) = (lg n)) <ref> [6] </ref>. Examples can also be constructed that establish H (F ) = ( p 4 Computing a Solution Strategy 4.1 General issues In general, one would prefer a complete algorithm, which must compute a solution strategy for a given number of pursuers, if such a strategy exists. <p> By building on some results from graph theory, it can be shown that the general problem of determining H (F ) for a polygonal environment is NP-hard <ref> [6] </ref>. The solutions can also be quite complicated (we have found examples that require clearing the same region (n) times for n edges). Because the position of the evader is unknown, one does not have direct access to the state at a given time. <p> This definition implies path invariance within state. a conservative cell <ref> [6] </ref>. Just as in the case of motion planning algorithms based on critical curves and noncritical regions [10], one can only consider sequences of cells in the search for a strategy while maintaining completeness.
Reference: [7] <author> L. J. Guibas, R. Motwani, and P. Raghavan. </author> <title> The robot localization problem. </title> <editor> In K. Goldberg, D. Halperin, J.- C. Latombe, and R. Wilson, editors, </editor> <booktitle> Proc. 1st Workshop on Algorithmic Foundations of Robotics, </booktitle> <pages> pages 269-282. </pages> <address> A.K. Peters, Wellesley, MA, </address> <year> 1995. </year>
Reference-contexts: Hence, a cell decomposition that maintains the same corresponding gap edges will only contain conservative cells. The idea is to partition the free space into convex cells by identifying critical places at which edge visibility changes. A decomposition of this type has been used for robot localization in <ref> [7, 16] </ref>, and generates O (n 3 ) cells in 3 occur when edge visibility changes. to form the edge-visibility cells. the worst case for a simple polygon (which is always true if H (F ) = 1).
Reference: [8] <author> R. Isaacs. </author> <title> Differential Games. </title> <publisher> Wiley, </publisher> <address> New York, NY, </address> <year> 1965. </year>
Reference-contexts: This has resulted in the formal study of general decision problems in which two decision makers have diametrically opposing interests. Classical pursuit-evasion games express differential motion models for two opponents, and conditions of capture or optimal strategies are sought <ref> [8] </ref>. For example, in the classical Homicidal Chauffeur game, conditions of inevitable collision can be expressed in terms of the nonholonomic turning-radius constraints of the pursuer and evader. Although interesting decision problems arise through the differential motion models, geometric free-space constraints are usually not considered in classical pursuit-evasion games.
Reference: [9] <author> A. S. Lapaugh. </author> <title> Recontamination does not help to search a graph. </title> <journal> J. ACM, </journal> <volume> 40(2) </volume> <pages> 224-245, </pages> <month> April </month> <year> 1993. </year>
Reference: [10] <author> J.-C. Latombe. </author> <title> Robot Motion Planning. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, MA, </address> <year> 1991. </year>
Reference-contexts: Likewise, the robots that are equipped with vision or range sensing are termed pursuers. The pursuers and evader are modeled as points in the plane (alternatively general configuration-space representations could be used <ref> [10] </ref>, but only 2-D configuration spaces are addressed in this paper), and only continuous motions are permitted. <p> See Figure 1 for illustrative examples. Let F represent the closure of the collision-free space (referred to as C valid in <ref> [10] </ref>). All pursuer and evader positions must lie in F . Let e (t) 2 F denote the position of the evader at time t 0. <p> This definition implies path invariance within state. a conservative cell [6]. Just as in the case of motion planning algorithms based on critical curves and noncritical regions <ref> [10] </ref>, one can only consider sequences of cells in the search for a strategy while maintaining completeness. <p> In Section 5 we show some examples that were computed by coordinating multiple pursuers. We have developed a decoupled planning approach (losing completeness), which is inspired by typical approaches to multiple robot planning problems <ref> [10] </ref>. Suppose a problem cannot be solved by a single pursuer. The first step is to have the pursuer clear as much area as possible and stop.
Reference: [11] <author> S. M. LaValle. </author> <title> A Game-Theoretic Framework for Robot Motion Planning. </title> <type> PhD thesis, </type> <institution> University of Illinois, Ur-bana, IL, </institution> <month> July </month> <year> 1995. </year>
Reference-contexts: The information space is a standard representational tool for problems that have imperfect state information, and has been useful in optimal control and dynamic game theory (e.g., [1]), and in motion planning <ref> [2, 4, 11] </ref>.
Reference: [12] <author> N. Megiddo, S. L. Hakimi, M. R. Garey, D. S. Johnson, and C. H. Papadimitriou. </author> <title> The complexity of searching a graph. </title> <journal> J. ACM, </journal> <volume> 35(1) </volume> <pages> 18-44, </pages> <month> January </month> <year> 1988. </year>
Reference-contexts: Several interesting results have been obtained for pursuit-evasion in a graph <ref> [12, 14] </ref>. However, the visibility polygon along with motions in a free space add geometric information that must be utilized, and also leads to connections with the static art gallery problems [13]. <p> Lower bounds can also established which indicate problems that require at least some number of pursuers. To construct difficult problem instances, a well-studied problem from graph theory can be used. Let Parsons' problem refer to the graph-searching problem presented in <ref> [12, 14] </ref>. The task is to specify the number of pursuers required to find an evader that can execute continuous motions along the edges of a graph. Instead of using visibility, capture is achieved when one of the pursuers "touches" the evader.
Reference: [13] <author> J. O'Rourke. </author> <title> Art Gallery Theorems and Algorithms. </title> <publisher> Oxford University Press, </publisher> <address> New York, NY, </address> <year> 1987. </year>
Reference-contexts: Several interesting results have been obtained for pursuit-evasion in a graph [12, 14]. However, the visibility polygon along with motions in a free space add geometric information that must be utilized, and also leads to connections with the static art gallery problems <ref> [13] </ref>. In the limiting case, art gallery results serve as a loose upper bound on the number of pursuers by allowing a covering of the free space by static guards, guaranteeing that any evader will be immediately visible.
Reference: [14] <author> T. D. Parsons. </author> <title> Pursuit-evasion in a graph. </title> <editor> In Y. Alani and D. R. Lick, editors, </editor> <booktitle> Theory and Applcation of Graphs, </booktitle> <pages> pages 426-441. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1976. </year>
Reference-contexts: Several interesting results have been obtained for pursuit-evasion in a graph <ref> [12, 14] </ref>. However, the visibility polygon along with motions in a free space add geometric information that must be utilized, and also leads to connections with the static art gallery problems [13]. <p> Lower bounds can also established which indicate problems that require at least some number of pursuers. To construct difficult problem instances, a well-studied problem from graph theory can be used. Let Parsons' problem refer to the graph-searching problem presented in <ref> [12, 14] </ref>. The task is to specify the number of pursuers required to find an evader that can execute continuous motions along the edges of a graph. Instead of using visibility, capture is achieved when one of the pursuers "touches" the evader.
Reference: [15] <author> I. Suzuki and M. Yamashita. </author> <title> Searching for a mobile intruder in a polygonal region. </title> <journal> SIAM J. Comput., </journal> <volume> 21(5) </volume> <pages> 863-888, </pages> <month> October </month> <year> 1992. </year>
Reference-contexts: For example, H (F ) 2 when F is multiply-connected (the evader can always hide behind a hole to avoid being seen by a single pursuer). Figure 1 shows examples that have subtle differences; however, H (F ) varies. In <ref> [15] </ref> a whereas the others require only one. class of simple polygons called "hedgehogs" is identified for which a single pursuer suffices. We have derived several bounds on H (F ) over certain classes of free spaces.
Reference: [16] <author> R. Talluri and J. K. Aggarwal. </author> <title> Mobile robot self-location using model-image feature correspondence. </title> <journal> IEEE Trans. Robot. & Autom., </journal> <volume> 12(1) </volume> <pages> 63-77, </pages> <month> February </month> <year> 1996. </year> <month> 6 </month>
Reference-contexts: Hence, a cell decomposition that maintains the same corresponding gap edges will only contain conservative cells. The idea is to partition the free space into convex cells by identifying critical places at which edge visibility changes. A decomposition of this type has been used for robot localization in <ref> [7, 16] </ref>, and generates O (n 3 ) cells in 3 occur when edge visibility changes. to form the edge-visibility cells. the worst case for a simple polygon (which is always true if H (F ) = 1).
References-found: 16

