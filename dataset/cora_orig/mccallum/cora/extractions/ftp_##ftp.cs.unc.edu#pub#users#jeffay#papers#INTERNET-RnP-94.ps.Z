URL: ftp://ftp.cs.unc.edu/pub/users/jeffay/papers/INTERNET-RnP-94.ps.Z
Refering-URL: http://www.cs.unc.edu/Research/sw.html
Root-URL: http://www.cs.unc.edu
Title: Issues, Problems and Solutions in Sharing X Clients on Multiple Displays number of technical problems
Author: Hussein Abdel-Wahab Kevin Jeffay 
Keyword: KEY WORDS X protocol, Computer Conferencing, Computer Supported Collaborative Work, Internet Protocols, UNIX Network Programming, Client/Server Model, Distributed Systems. SHARED WINDOW SYSTEMS  
Address: Norfolk, Virginia, 23529  Chapel Hill, N.C. 27599  
Affiliation: Department of Computer Science Old Dominion University  Department of Computer Science University of North Carolina at Chapel Hill  
Note: In: Internetworking Research and Practice, Vol. 5, No. 1, (March 1994) pp. 1-15.  The X Window System was not originally designed to support conferencing and hence a  
Email: wahab@cs.odu.edu  jeffay@cs.unc.edu  
Date: SUMMARY  
Abstract: Many computer conferencing systems based on the X Window System have recently emerged. While these systems hold the promise for fostering collaboration among groups of geographically separated individuals, they are, at present, difficult to build because the X programming model does not support conferencing. This paper describes the salient problems that face the designers of X-based shared window systems and provides solutions and implementation principles for addressing the problems. The enumeration of issues and solutions is based on our experiences with XTV an X-based shared window system we have developed. Growing interest in concurrent engineering and computersupported cooperative work has led to the development of a number of computer conferencing systems that allow geographically distributed groups of individuals to (simultaneously) view and manipulate shared images, documents, or programs, while they communicate via audio and possibly video links [1-6]. There are two basic approaches to supporting such conferences. The first involves the development of socalled collaboration-aware applications special - purpose applications, that directly support multiple, simultaneously active users. Alternatively, one can leverage the large base of existing single-user applications by augmenting a window system to support the sharing of application interfaces (e.g., windows) across multiple, distributed users. The resulting window system is typically called a shared window system . The X Window System has been a particularly popular vehicle for experimentation with, and development of, shared window systems [1,4,5]. Indeed, we have developed, and placed in the public domain, a shared window system, called XTV (X Teleconferencing and Viewing [1,2]), based on the X Window System. XTV allows a conference to be created around one or more arbitrary X applications. Conferees have the same view of shared applications and, by following a simple floor - passing protocol, may control the shared applications. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> H. M. Abdel-Wahab and M. A. Feit, XTV: </author> <title> A Framework for Sharing X Window Clients in Remote Synchronous Collaboration, </title> <booktitle> Proceedings, IEEE Conference on Communications Software: Communications for Distributed Applications & Systems, </booktitle> <address> Chapel Hill, North Carolina, </address> <month> 159-167 (April </month> <year> 1991). </year>
Reference: [2] <author> G. Chung, K. Jeffay and H. Abdel-Wahab, </author> <title> Accommodating latecomers in shared window systems, </title> <journal> IEEE Computer, </journal> <volume> Vol. 26, No. 1, </volume> <pages> pp. 72-74, </pages> <month> (January </month> <year> 1993). </year>
Reference: [3] <author> J. R. Ensor, S. R. Ahuja, D. N. Horn and S. E. Lucco, </author> <title> The Rapport Multimedia Conferencing System - A Software Overview, </title> <booktitle> Proceedings, IEEE Conference on Computer Workstations, </booktitle> <address> Santa Clara, </address> <month> 52-58 (March </month> <year> 1988). </year>
Reference: [4] <author> J. C. Lauwers and K. A. Lantz, </author> <title> Collaboration Awareness in Support of Collaboration Transparency: Requirements for the Next Generation of Shared Window Systems, </title> <booktitle> Proceedings, Conference on Human Factors in Computer Systems, ACM (April 1990). </booktitle>
Reference: [5] <author> K. Srinivas, Y. V. Reddy, L. Chang, A. Babadi, S. Kamana, Z. Dai and V. Kumar, MONET: </author> <title> A Multimedia Conferencing System for Colocating People and Programs, </title> <booktitle> Proceedings of the CALS & CE Third National Conference on Concurrent Engineering, </booktitle> <address> Washington, D.C., </address> <month> 433-441 </month> <year> (1991). </year>
Reference: [6] <author> K. Watabe, S. Sakata, K. Maeno, H. Fukuoka and T. Ohmori, </author> <title> Distributed Multiparty Desktop Conferencing System: </title> <booktitle> MERMAID, Proceedings, CSCW 90 Conference on Computer-Supported Cooperative Work, </booktitle> <month> (October </month> <year> 1990). </year>
Reference: [7] <author> J. F. Patterson, </author> <title> The Good, the Bad, and the Ugly of Window Sharing in X, </title> <booktitle> Proceedings, 4th Annual X Technical Conference, </booktitle> <month> (January </month> <year> 1990). </year>
Reference: [8] <author> A. Nye, </author> <title> X Protocol Reference Manual for Version 11 , Volume 0, </title> <publisher> OReilly & associates, Inc., </publisher> <address> Sebastopol, CA (1989). </address>
Reference: [9] <author> D. E. Comer and D. L. Stevens, </author> <title> Internetworking with TCP/IP Volume III: Client - Server Programming and Applications: BSD Socket Version, </title> <publisher> Prentice-Hall, </publisher> <year> (1993). </year>
Reference: [10] <author> W. R. Stevens, </author> <title> Unix Network Programming, </title> <publisher> Prentice-Hall, </publisher> <year> (1990). </year>
Reference: [11] <author> A. Nye, </author> <title> Xlib Programming Manual for Version 11, Volume 1, </title> <publisher> OReilly & associates, Inc., </publisher> <address> Sebastopol, CA (1989). </address>
Reference-contexts: 1. The parent window ID is equal to the root window ID. 2. The override-redirect bit in the BITMASK is 1 and thecorresponding value in the LISTofVALUE field is TRUE (see CreateWindow packet format in <ref> [11] </ref>). Consider the example shown in Figure 7 where participant A has the floor for the application. <p> The message M contains the resource ID of W i (T) and its dimensions (width and height) obtained from the ConfigureNotify event. Upon receiving M , each participant will resize window W i (T) using the Xlib function XResizeWindow <ref> [11] </ref>. HANDLING EXTENSION REQUESTS AND EVENTS There are many requests and events that are not part of the core X protocol.
References-found: 11

