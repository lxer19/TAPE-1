URL: http://seclab.cs.ucdavis.edu/~yip/secfound.ps
Refering-URL: http://seclab.cs.ucdavis.edu/papers.html
Root-URL: http://www.cs.ucdavis.edu
Title: Data Level Inference Detection in Database Systems  
Author: Raymond W. Yip and Karl N. Levitt 
Address: One Shields Avenue, Davis CA 95616  
Affiliation: Department of Computer Science University of California, Davis  
Abstract: Existing work on inference detection for database systems mainly employ functional dependencies in the database schema to detect inferences. It has been noticed that analyzing the data stored in the database may help to detect more inferences. In this paper, we describe our effort in developing a data level inference detection system. We have identified five inference rules that a user can use to perform inferences. They are `subsume', `unique characteristic', `overlapping', `complementary', and `functional dependency' inference rules. The existence of these inference rules confirms the inadequacy of detecting inferences using just functional dependencies. The rules can be applied any number of times and in any order. These inference rules are sound. They are not necessarily complete, although we have no example that demonstrates incompleteness. We employ a rule based approach so that future inference rules can be incorporated into the detection system. We have developed a prototype of the inference detection system using Perl on a Sun SPARC 20 workstation. The preliminary results show that on average it takes seconds to process a query for a database with thousands of records. Thus, our approach to inference detection is best performed off-line, and would be most useful to detect subtle inference attacks. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> N. R. Adam and J. C. Wortmann. </author> <title> Security-control methods for statistical databases: A comparative study. </title> <journal> ACM Computing Surveys, </journal> <volume> 21(4) </volume> <pages> 515-556, </pages> <month> De-cember </month> <year> 1989. </year>
Reference-contexts: Motro et al. address a similar problem, but their work focuses on detecting aggregation instead of inference attacks [11]. In the statistical database security community, various techniques have been proposed to protect individual records, for example, query-set-size control, cell suppression, and data perturbation <ref> [1] </ref>. However, these techniques are not suitable for detecting inferences using general purpose queries. In this paper, we describe our effort in developing a data level inference detection system. It is a static inference detection system where inferences are performed with respect to a snapshot of the database.
Reference: [2] <author> L. J. Binns. </author> <title> Inference through secondary path analysis. </title> <editor> In B. M. Thuraisingham and C. E. Landwehr, editors, </editor> <booktitle> Database Security VI: Status and Prospects, </booktitle> <pages> pages 195-209. </pages> <publisher> North-Holland, </publisher> <year> 1993. </year>
Reference-contexts: Published in Proceedings, 1998 IEEE Computer Security Foundations Workshop, Rockport, Mas-sachusetts, June, 1998. functional dependencies among the attributes in the database schema. An inference occurs when there are two or more paths among the attributes, and the paths are labeled at different classification levels <ref> [6, 2, 12] </ref>. The inference path is eliminated by upgrading some attributes along the path [15, 13]. Lunt [9] points out that some inference problems can be avoided by redesigning the database schema, and classifying the attributes properly.
Reference: [3] <author> H. S. Delugach and T. H. Hinke. </author> <title> Wizard: A database inference analysis and detection system. </title> <journal> IEEE Transactions on Data and Knowledge Engineering, </journal> <volume> 8(1) </volume> <pages> 56-66, </pages> <year> 1996. </year>
Reference-contexts: However, redesigning the database schema results in data duplication which leads to update anomalies. It also requires modifications to the existing application programs. There is also work on incorporating external knowledge into the inference detection systems <ref> [18, 7, 16, 17, 3] </ref>. More recently, researchers suggest using data of the database to generate a richer set of functional dependencies for inference detection. Hinke et al. use cardinality associations to discover potential inference paths [8].
Reference: [4] <author> M. R. Garey and D. S. Johnson. </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness. W.H. </title> <publisher> Freeman, </publisher> <year> 1979. </year>
Reference-contexts: This becomes the problem of finding a set of simple queries that together returns a set of tuples that covers another set of return tuples. If we can solve this problem, we can also solve the set-covering problem which is known to be an NP-complete problem <ref> [4] </ref>. We have developed a prototype to study the performance of the inference detection system in practice. It is discussed in Section 5. 5. Implementation and Preliminary Re sults We have developed a prototype of the inference detection system in about 4,000 lines of Perl code.
Reference: [5] <author> J. Hale and S. Shenoi. </author> <title> Catalytic inference analysis: Detection inference threats due to knowledge discovery. </title> <booktitle> In Proceedings of the 1997 IEEE Symposium on Security and Privacy, </booktitle> <pages> pages 188-199. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1997. </year>
Reference-contexts: More recently, researchers suggest using data of the database to generate a richer set of functional dependencies for inference detection. Hinke et al. use cardinality associations to discover potential inference paths [8]. Hale et al. incorporate imprecise and fuzzy database relations into their inference detection system <ref> [5] </ref>. However, existing efforts still simply employ functional dependencies to detect inferences. As noted by SRI researchers, monitoring user activities may lead to detecting more inferences [14].
Reference: [6] <author> T. H. Hinke. </author> <title> Inference aggregation detection in database management systems. </title> <booktitle> In Proceedings of the 1988 IEEE Symposium on Security and Privacy, </booktitle> <pages> pages 96-106. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1988. </year>
Reference-contexts: Published in Proceedings, 1998 IEEE Computer Security Foundations Workshop, Rockport, Mas-sachusetts, June, 1998. functional dependencies among the attributes in the database schema. An inference occurs when there are two or more paths among the attributes, and the paths are labeled at different classification levels <ref> [6, 2, 12] </ref>. The inference path is eliminated by upgrading some attributes along the path [15, 13]. Lunt [9] points out that some inference problems can be avoided by redesigning the database schema, and classifying the attributes properly. <p> That is the user does not rely on real-world knowledge to perform any inference. Such knowledge might be added to the database as `catalytic relation' as suggested in <ref> [6] </ref>. A i denotes an attribute in the table, and a i denotes an attribute value from the domain of A i . t [A i ] denotes the attribute value of a single tuple t over the attribute A i .
Reference: [7] <author> T. H. Hinke and H. S. Delugach. Aerie: </author> <title> An inference modeling and detection approach for databases. </title> <editor> In B. M. Thuraisingham and C. E. Landwehr, editors, </editor> <booktitle> Database Security VI: Status and Prospects, </booktitle> <pages> pages 179-193. </pages> <publisher> North-Holland, </publisher> <year> 1993. </year>
Reference-contexts: However, redesigning the database schema results in data duplication which leads to update anomalies. It also requires modifications to the existing application programs. There is also work on incorporating external knowledge into the inference detection systems <ref> [18, 7, 16, 17, 3] </ref>. More recently, researchers suggest using data of the database to generate a richer set of functional dependencies for inference detection. Hinke et al. use cardinality associations to discover potential inference paths [8].
Reference: [8] <author> T. H. Hinke, H. S. Delugach, and A. </author> <title> Chandrasekhar. Layered knowledge chunks for database inference. </title> <editor> In T. F. Keefe and C. E. Landwehr, editors, </editor> <booktitle> Database Security VII: Status and Prospects, </booktitle> <pages> pages 275-295. </pages> <publisher> North-Holland, </publisher> <year> 1994. </year>
Reference-contexts: There is also work on incorporating external knowledge into the inference detection systems [18, 7, 16, 17, 3]. More recently, researchers suggest using data of the database to generate a richer set of functional dependencies for inference detection. Hinke et al. use cardinality associations to discover potential inference paths <ref> [8] </ref>. Hale et al. incorporate imprecise and fuzzy database relations into their inference detection system [5]. However, existing efforts still simply employ functional dependencies to detect inferences. As noted by SRI researchers, monitoring user activities may lead to detecting more inferences [14].
Reference: [9] <author> T. H. Hinke, H. S. Delugach, and R. Wolf. </author> <title> A framework for inference-directed data mining. </title> <editor> In P. Sama-rati and R. S. Sandhu, editors, </editor> <title> Database Security X: </title> <booktitle> Status and Prospects, </booktitle> <pages> pages 229-239. </pages> <publisher> Chapman and Hall, </publisher> <year> 1997. </year>
Reference-contexts: An inference occurs when there are two or more paths among the attributes, and the paths are labeled at different classification levels [6, 2, 12]. The inference path is eliminated by upgrading some attributes along the path [15, 13]. Lunt <ref> [9] </ref> points out that some inference problems can be avoided by redesigning the database schema, and classifying the attributes properly. However, redesigning the database schema results in data duplication which leads to update anomalies. It also requires modifications to the existing application programs.
Reference: [10] <author> T. H. Hinke, H. S. Delugach, and R. P. Wolf. Iliad: </author> <title> An integrated laboratory for inference analysis and detection. </title> <editor> In S. A. D. David L. Spooner and J. E. Dobson, editors, </editor> <booktitle> Database Security IX: Status and Prospects, </booktitle> <pages> pages 333-348, </pages> <year> 1995. </year>
Reference-contexts: That is, duplicated return tuples are not removed 3. Preliminaries and Notation We consider inference detection in a relational database with a single table. A database with multiple tables can be transformed into a universal relation <ref> [10] </ref>. We assume that the only way the user can learn about the data in the database is by issuing queries to it. That is the user does not rely on real-world knowledge to perform any inference.
Reference: [11] <author> T. F. Lunt. </author> <title> Aggregation and inference: Facts and fal-lacies. </title> <booktitle> In Proceedings of the 1989 IEEE Symposium on Security and Privacy, </booktitle> <pages> pages 102-109. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1989. </year>
Reference-contexts: However, it is possible for a user to use a series of unsuspicious queries to infer data in the database. Motro et al. address a similar problem, but their work focuses on detecting aggregation instead of inference attacks <ref> [11] </ref>. In the statistical database security community, various techniques have been proposed to protect individual records, for example, query-set-size control, cell suppression, and data perturbation [1]. However, these techniques are not suitable for detecting inferences using general purpose queries.
Reference: [12] <author> D. G. Marks. </author> <title> Inference in mls database systems. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 8(1) </volume> <pages> 46-55, </pages> <month> February </month> <year> 1996. </year>
Reference-contexts: Published in Proceedings, 1998 IEEE Computer Security Foundations Workshop, Rockport, Mas-sachusetts, June, 1998. functional dependencies among the attributes in the database schema. An inference occurs when there are two or more paths among the attributes, and the paths are labeled at different classification levels <ref> [6, 2, 12] </ref>. The inference path is eliminated by upgrading some attributes along the path [15, 13]. Lunt [9] points out that some inference problems can be avoided by redesigning the database schema, and classifying the attributes properly.
Reference: [13] <author> A. Motro, D. G. Marks, and S. Jajodia. </author> <title> Aggregation in relational databases: Controlled disclosure of sensitive imformation. </title> <booktitle> In Proceedings of the Third European Symposium on Research in Computer Security, </booktitle> <pages> pages 431-445, </pages> <month> November </month> <year> 1994. </year>
Reference-contexts: An inference occurs when there are two or more paths among the attributes, and the paths are labeled at different classification levels [6, 2, 12]. The inference path is eliminated by upgrading some attributes along the path <ref> [15, 13] </ref>. Lunt [9] points out that some inference problems can be avoided by redesigning the database schema, and classifying the attributes properly. However, redesigning the database schema results in data duplication which leads to update anomalies. It also requires modifications to the existing application programs.
Reference: [14] <author> X. Qian, M. E. Stickel, P. D. Karp, T. F. Lunt, and T. D. Garvey. </author> <title> Detection and elimination of inference channels in multilevel relational database systems. </title> <booktitle> In Proceedings of the 1993 IEEE Symposium on Security and Privacy, </booktitle> <pages> pages 196-205. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1993. </year>
Reference-contexts: Hale et al. incorporate imprecise and fuzzy database relations into their inference detection system [5]. However, existing efforts still simply employ functional dependencies to detect inferences. As noted by SRI researchers, monitoring user activities may lead to detecting more inferences <ref> [14] </ref>. By data level inference detection, we mean the system detects inferences by considering the data in the database, as opposed to the database schema only. Inferences can also occur in discretionary access control systems where users are explicitly granted access rights to access data (as in System R).
Reference: [15] <author> M. E. Stickel. </author> <title> Elimination of inference channels by optimal upgrading. </title> <booktitle> In Proceedings of the 1994 IEEE Symposium on Research in Security and Privacy, </booktitle> <pages> pages 168-174. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1994. </year>
Reference-contexts: An inference occurs when there are two or more paths among the attributes, and the paths are labeled at different classification levels [6, 2, 12]. The inference path is eliminated by upgrading some attributes along the path <ref> [15, 13] </ref>. Lunt [9] points out that some inference problems can be avoided by redesigning the database schema, and classifying the attributes properly. However, redesigning the database schema results in data duplication which leads to update anomalies. It also requires modifications to the existing application programs.
Reference: [16] <author> M. E. Stickel, T. D. Garvey, T. F. Lunt, and X. Qian. </author> <title> Inference channel detection and elimination in knowledge-based systems. </title> <type> Technical report, </type> <institution> SRI International, </institution> <month> Octobet </month> <year> 1994. </year>
Reference-contexts: However, redesigning the database schema results in data duplication which leads to update anomalies. It also requires modifications to the existing application programs. There is also work on incorporating external knowledge into the inference detection systems <ref> [18, 7, 16, 17, 3] </ref>. More recently, researchers suggest using data of the database to generate a richer set of functional dependencies for inference detection. Hinke et al. use cardinality associations to discover potential inference paths [8].
Reference: [17] <author> T.-A. Su and G. Ozsoyoglu. </author> <title> Data dependencies and inference control in multilevel relational database systems. </title> <booktitle> In Proceedings of the 1987 IEEE Symposium on Security and Privacy, </booktitle> <pages> pages 202-211. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1987. </year>
Reference-contexts: However, redesigning the database schema results in data duplication which leads to update anomalies. It also requires modifications to the existing application programs. There is also work on incorporating external knowledge into the inference detection systems <ref> [18, 7, 16, 17, 3] </ref>. More recently, researchers suggest using data of the database to generate a richer set of functional dependencies for inference detection. Hinke et al. use cardinality associations to discover potential inference paths [8].
Reference: [18] <author> B. Thuraisingham. </author> <title> The use of conceptual structures for handling the inference problem. </title> <editor> In C. E. Landwehr and S. Jajodia, editors, </editor> <title> Database Security V: </title> <booktitle> Status and Prospects, </booktitle> <pages> pages 333-362. </pages> <publisher> Elsevier Science Pub. Co., </publisher> <year> 1992. </year>
Reference-contexts: However, redesigning the database schema results in data duplication which leads to update anomalies. It also requires modifications to the existing application programs. There is also work on incorporating external knowledge into the inference detection systems <ref> [18, 7, 16, 17, 3] </ref>. More recently, researchers suggest using data of the database to generate a richer set of functional dependencies for inference detection. Hinke et al. use cardinality associations to discover potential inference paths [8].
References-found: 18

