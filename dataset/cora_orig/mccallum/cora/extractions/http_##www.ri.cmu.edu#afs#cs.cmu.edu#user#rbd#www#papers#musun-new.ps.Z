URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/user/rbd/www/papers/musun-new.ps.Z
Refering-URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/user/rbd/www/bib-musund.html
Root-URL: 
Title: Music Understanding by Computer  
Author: Roger B. Dannenberg 
Abstract: Although computer systems have found widespread application in music production, there remains a gap between the characteristicly precise and mechanical information processing of the computer and the more subtle and expressive processing performed by humans. In order for computer systems to become more useful to musicians, the human-computer interface must be raised from the mechanical and syntactic level of present systems toward a high-level concept-based dialog. The term ``music understanding'' is introduced to describe the recognition of pattern and structure in musical information. Applications of music understanding include music transcription and music performance systems. The general state of the art in music understanding and two specific interactive real-time performance systems are described. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Berger, Jonathan. </author> <title> Theory and Practice: Chicken and Egg. </title> <booktitle> In The Arts and Technology II: A Symposium, </booktitle> <pages> pages 24-30. </pages> <address> Connecticut College, </address> <year> 1989. </year>
Reference-contexts: The goal of the first project is to build a competent computer accompaniment system, and the goal of the second is to follow an improvisation in real time. Many other tasks have been pursued or are current research topics <ref> [13, 9, 7, 1] </ref>, but space limitations prohibit an exhaustive treatment of this related activity. 2. Music Understanding Tasks There are a variety of tasks that one might perform with a music understanding system.
Reference: [2] <author> Bloch, J. J. and R. B. Dannenberg. </author> <title> Real-Time Computer Accompaniment of Keyboard Performances. </title> <editor> In B. Truax (editor), </editor> <booktitle> Proceedings of the International Computer Music Conference 1985, </booktitle> <pages> pages 279-290. </pages> <booktitle> International Computer Music Association, </booktitle> <year> 1985. </year>
Reference-contexts: The resulting algorithm is time-independent. This study was performed with Joshua Bloch <ref> [2] </ref> and the reader is referred to our paper for further details. The matcher performs a fairly low-level recognition task where efficiency is important and relatively little knowledge is required.
Reference: [3] <author> Chafe, Chris, Bernard Mont-Reynaud, and Loren Rush. </author> <title> Toward an Intelligent Editor of Digital Audio: Recognition of Musical Constructs. </title> <journal> Computer Music Journal 6(1) </journal> <pages> 30-41, </pages> <month> Spring, </month> <year> 1982. </year>
Reference-contexts: Key changes are typically entered manually and little or no effort is made to notate phrases, articulation, or dynamics. In spite of these simplifications, transcription programs cannot reliably distinguish between performed triplets and sixteenth notes. An ambitious music transcription program was described by Chafe, et. al. <ref> [3] </ref>. This system used musical knowledge to achieve a much higher level of performance than that of commercial systems described above. Particular emphasis was placed on completely automating the transcription process, and interesting techniques were developed for recognizing beats, meter, and keys. <p> This improvisation understanding task can be divided into two subtasks: finding the beat and finding the harmonic progression. After lengthy discussions with Bernard Mont-Reynaud, who developed beat-tracking software for the automatic music transcription system described earlier <ref> [3] </ref>, we decided to collaborate in the design and implementation of a ``blues follower'' program [6]. Bernard designed the beat follower or ``foot tapper'', and I designed the harmonic analysis software. The ``foot tapper'' operates by predicting where the next beat will occur.
Reference: [4] <author> Chafe, Chris, David Jaffe, Kyle Kashima, Bernard Mont-Reynaud, and Julius Smith. </author> <title> Techniques for Note Identification in Polyphonic Music. </title> <booktitle> In 1985 Proceedings of the International Computer Music Conference, </booktitle> <pages> pages 399-405. </pages> <booktitle> International Computer Music Association, </booktitle> <year> 1985. </year>
Reference-contexts: The analysis of multiple (polyphonic) tones to derive a set of pitches is much more difficult and forms an area of active research. There are no general purpose real-time polyphonic pitch recognition systems, but some non-real-time systems have obtained limited success <ref> [10, 4] </ref>. Electronic keyboards can be interfaced directly to computers so that performance information can be sensed without signal processing. Given the state of the art in polyphonic pitch recognition, it is no surprise that keyboards form the most common computer interface for the musician.
Reference: [5] <author> Dannenberg, R. B. </author> <title> An On-Line Algorithm for Real-Time Accompaniment. </title> <editor> In W. Buxton (editor), </editor> <booktitle> Proceedings of the International Computer Music Conference 1984, </booktitle> <pages> pages 193-198. </pages> <booktitle> International Computer Music Association, </booktitle> <year> 1984. </year>
Reference-contexts: The most frequent pitch might occur 32 times, or almost one out of every five notes. Whenever this note is played there will be many candidates for a match. Fortunately, an almost ideal matcher has been developed for computer accompaniment <ref> [5] </ref>. The matcher is derived from the dynamic programming algorithm for finding the longest common subsequence of two strings. Imagine starting with two strings and eliminating arbitrary characters from each string until the the remaining characters (subsequences) match exactly.
Reference: [6] <author> Dannenberg, R. B. and B. Mont-Reynaud. </author> <title> Following an Improvisation in Real Time. </title> <editor> In J. Beauchamp (editor), </editor> <booktitle> Proceedings of the 1987 International Computer Music Conference, </booktitle> <pages> pages 241-248. </pages> <booktitle> International Computer Music Association, </booktitle> <address> San Francisco, </address> <year> 1987. </year>
Reference-contexts: After lengthy discussions with Bernard Mont-Reynaud, who developed beat-tracking software for the automatic music transcription system described earlier [3], we decided to collaborate in the design and implementation of a ``blues follower'' program <ref> [6] </ref>. Bernard designed the beat follower or ``foot tapper'', and I designed the harmonic analysis software. The ``foot tapper'' operates by predicting where the next beat will occur. When a note onset occurs near the predicted beat, the estimated tempo is adjusted in the direction of the note onset. <p> The point with the highest likelihood estimate indicates the most likely true starting point. the relative likelihood is of interest, the computed values are not normalized to obtain true probabilities, and the plotted values are the direct result of integer computations. See Dannenberg and Mont-Reynaud <ref> [6] </ref> for details.) Both the graph and the 12-bar blues form are periodic with a period of 96 eighth notes. Slightly more than one period is plotted so that the peak at zero is repeated around 96. Thus the two peaks are really one and the same, modulo 12 bars.
Reference: [7] <author> Desain, Peter and Henkjan Honing. </author> <title> Quantization of Musical Time: a connectionist approach. </title> <journal> Computer Music Journal 13(3) </journal> <pages> 56-66, </pages> <year> 1989. </year>
Reference-contexts: The goal of the first project is to build a competent computer accompaniment system, and the goal of the second is to follow an improvisation in real time. Many other tasks have been pursued or are current research topics <ref> [13, 9, 7, 1] </ref>, but space limitations prohibit an exhaustive treatment of this related activity. 2. Music Understanding Tasks There are a variety of tasks that one might perform with a music understanding system.
Reference: [8] <author> Foster, Scott, Schloss, W. Andrew, and Rockmore, A. Joseph. </author> <title> Toward an Intelligent Editor of Digital Audio: Signal Processing Methods. </title> <journal> Computer Music Journal 6(1) </journal> <pages> 42-51, </pages> <month> Spring, </month> <year> 1982. </year>
Reference-contexts: In polyphonic music, onsets may be masked by other notes. Also, slight variation due to air or bow pressure can give the effect of a note onset unintentionally. Detecting note onsets reliably is still an area of ongoing research <ref> [8, 12] </ref>. Another area in which human listeners are skilled is sound source location.
Reference: [9] <author> Longuet-Higgins, H. C. and C. S. Lee. </author> <title> The Perception of Musical Rhythms. </title> <booktitle> Perception 11 </booktitle> <pages> 115-128, </pages> <year> 1982. </year>
Reference-contexts: The goal of the first project is to build a competent computer accompaniment system, and the goal of the second is to follow an improvisation in real time. Many other tasks have been pursued or are current research topics <ref> [13, 9, 7, 1] </ref>, but space limitations prohibit an exhaustive treatment of this related activity. 2. Music Understanding Tasks There are a variety of tasks that one might perform with a music understanding system.
Reference: [10] <author> Moorer, J. A. </author> <title> On the Segmentation and Analysis of Continuous Musical Sounds by Digital Computer. </title> <type> PhD thesis, </type> <institution> Stanford University Department of Computer Science, </institution> <year> 1975. </year>
Reference-contexts: The analysis of multiple (polyphonic) tones to derive a set of pitches is much more difficult and forms an area of active research. There are no general purpose real-time polyphonic pitch recognition systems, but some non-real-time systems have obtained limited success <ref> [10, 4] </ref>. Electronic keyboards can be interfaced directly to computers so that performance information can be sensed without signal processing. Given the state of the art in polyphonic pitch recognition, it is no surprise that keyboards form the most common computer interface for the musician.
Reference: [11] <author> Sankoff, David and Joseph B. Kruskal, </author> <title> editors. Time Warps, String Edits, and Macromolecules: The Theory and Practice of Sequence Comparison. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass., </address> <year> 1983. </year> <month> 16 </month>
Reference-contexts: This is merely a heuristic, but it works very well in practice. The longest common subsequence (LCS) algorithm <ref> [11] </ref> operates by solving the problem on all initial substring pairings of the two input strings. Let P and S be the input strings, and let P &lt;1,c&gt; represent the first r elements of string P.
Reference: [12] <author> Schloss, A. </author> <title> On the Automatic Transcription of Percussive Music. </title> <type> PhD thesis, </type> <institution> Department of Speech and Hearing, Stanford University, </institution> <month> June, </month> <year> 1985. </year> <note> Department of Music Technical Report STAN-M-27. </note>
Reference-contexts: In polyphonic music, onsets may be masked by other notes. Also, slight variation due to air or bow pressure can give the effect of a note onset unintentionally. Detecting note onsets reliably is still an area of ongoing research <ref> [8, 12] </ref>. Another area in which human listeners are skilled is sound source location.
Reference: [13] <author> Simon, H. A. </author> <title> Perception du Pattern Musical par AUDITEUR. </title> <booktitle> Sciences de l'Art 2 </booktitle> <pages> 28-34, </pages> <year> 1968. </year>
Reference-contexts: The goal of the first project is to build a competent computer accompaniment system, and the goal of the second is to follow an improvisation in real time. Many other tasks have been pursued or are current research topics <ref> [13, 9, 7, 1] </ref>, but space limitations prohibit an exhaustive treatment of this related activity. 2. Music Understanding Tasks There are a variety of tasks that one might perform with a music understanding system.
Reference: [14] <author> Sundberg, J., A. Askenfelt, L. Fryden. </author> <title> Musical Performance: A Synthesis-by-Rule Approach. </title> <journal> Computer Music Journal 7(1) </journal> <pages> 37-43, </pages> <month> Spring, </month> <year> 1983. </year> <month> 17 </month>
Reference-contexts: Recognition of musical style, rhythmic patterns and phrases is a prerequisite to a competent performance, and such information could be used to enhance systems that attempt to obtain musical performances from notated scores <ref> [14] </ref>. Music understanding might be used in musical databases to classify compositions and to allow searching for phrases or for pieces that meet certain criteria.
References-found: 14

