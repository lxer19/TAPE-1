URL: http://http.cs.berkeley.edu/~mitzen/dccpaper.ps
Refering-URL: http://http.cs.berkeley.edu/~mitzen/
Root-URL: http://www.cs.berkeley.edu
Email: broder@pa.dec.com  mitzen@cs.berkeley.edu  
Title: Pattern-based compression of text images  
Author: Andrei Broder Michael Mitzenmacher 
Address: 130 Lytton Avenue Palo Alto, CA 94301  Berkeley, CA 94720  
Affiliation: Digital Syst. Res. Center  Dept. of Computer Science UC Berkeley  
Abstract: We suggest a novel approach for compressing images of text documents based on building up a simple derived font from patterns in the image, and present the results of a prototype implementation based on our approach. Our prototype achieves better compression than most alternative systems, and the decompression time appears substantially shorter than other methods with the same compression rate. The method has other advantages, such as a straightforward extension to a lossy scheme that allows one to control the lossiness introduced in a well-defined manner. We believe our approach will be applica ble in other domains as well.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Greene, M. Parnas, and F. Yao. </author> <title> Multi-index hashing for information retrieval. </title> <booktitle> In Proceedings of the 35th Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 722-731, </pages> <year> 1994. </year>
Reference-contexts: Each coordinate can take four values, 0 to 3. We used as distance the 1-norm which corresponds to the total difference in shades between patterns. The problem of finding a close pattern in this context has been addressed in the data structures literature: for example, see <ref> [1] </ref> and references therein. We adopted the following solution, based on the work of [1]. Suppose we wish to find the closest pattern in the table within some distance d. We hash each pattern several times, each time based on a subset of the pixels constituting the pattern. <p> The problem of finding a close pattern in this context has been addressed in the data structures literature: for example, see <ref> [1] </ref> and references therein. We adopted the following solution, based on the work of [1]. Suppose we wish to find the closest pattern in the table within some distance d. We hash each pattern several times, each time based on a subset of the pixels constituting the pattern.
Reference: [2] <author> P. G. Howard. </author> <title> The design and analysis of efficient lossless data compression systems. </title> <type> Technical Report CS-93-28, </type> <institution> Brown University, </institution> <note> 1993. </note> <author> (Ph. D. </author> <type> thesis). </type>
Reference-contexts: Pixel-based schemes consider fl Supported by the Office of Naval Research. This work was done during an internship at Digital Systems Research Center. and encode each pixel individually. Examples include the international standard jbig [3], felics <ref> [2] </ref>, and mgbilevel, part of the mg system [6, 7]. Character-based schemes attempt to derive the original text from the document by inferring or keeping information regarding character boundaries and using derived or provided font information.
Reference: [3] <author> M. Kuhn. </author> <title> Software kit for jbigkit. </title> <note> Available via anonymous ftp from ftp.uni-erlangen.de as /pub/doc/ISO/JBIG/jbigkit-0.7.tar.gz. </note>
Reference-contexts: Pixel-based schemes consider fl Supported by the Office of Naval Research. This work was done during an internship at Digital Systems Research Center. and encode each pixel individually. Examples include the international standard jbig <ref> [3] </ref>, felics [2], and mgbilevel, part of the mg system [6, 7]. Character-based schemes attempt to derive the original text from the document by inferring or keeping information regarding character boundaries and using derived or provided font information. <p> 0.205 0.982 0.547 0.268 egrid (20K) 1.966 0.860 0.173 0.862 0.508 0.225 lgrid (20K) 1.861 0.843 0.173 0.739 0.432 0.199 jbig 2.304 1.207 0.239 0.838 0.457 0.260 gzip 2.174 1.219 0.237 1.017 0.547 0.302 mgbi 1.486 0.749 0.159 0.709 0.413 0.215 Table 4: Comparing grid performance The jbig software of <ref> [3] </ref> provided comparable performance, both in terms of time and overall compression. 2 The decompression time for jbig appears to be several times larger than the decompression time for grid 3 , although jbig performs better in terms of compression time.
Reference: [4] <author> B. K. Natarajan. </author> <title> Filtering random noise via data compression. </title> <booktitle> In Proceedings of the 3rd IEEE Data Compression Conference, </booktitle> <pages> pages 60-68. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1993. </year>
Reference-contexts: The lossy version lgrid allowed up to three shades of difference between an observed pattern and the encoded pattern. Surprisingly, preliminary results suggest that lossy encoding actually improves the quality of scanned images by removing noise. The use of a lossy compression scheme to remove noise was investigated in <ref> [4] </ref>, in a different setting. Quantitative results in this setting require some model of both scanning noise and the distribution of patterns in text documents, which we have not developed yet.
Reference: [5] <author> I. H. Witten, T. C. Bell, M. E. Harrison, M. L. James, and A. Moffat. </author> <title> Textual image compression. </title> <booktitle> In Proceedings of the 2nd IEEE Data Compression Conference, </booktitle> <pages> pages 42-51. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1992. </year>
Reference-contexts: Character-based schemes attempt to derive the original text from the document by inferring or keeping information regarding character boundaries and using derived or provided font information. The mg system also includes such a scheme, called mgtic [6, 7], based on the work presented in <ref> [5] </ref>. We suggest a novel compression scheme based neither on pixels nor characters but on patterns determined from simple groupings of pixels.
Reference: [6] <author> I. H. Witten, A. Moffat, and T. Bell. </author> <title> Managing Gigabytes: Compressing and Indexing Documents and Images. </title> <publisher> Van Nostrand Reinhold, </publisher> <year> 1994. </year>
Reference-contexts: Pixel-based schemes consider fl Supported by the Office of Naval Research. This work was done during an internship at Digital Systems Research Center. and encode each pixel individually. Examples include the international standard jbig [3], felics [2], and mgbilevel, part of the mg system <ref> [6, 7] </ref>. Character-based schemes attempt to derive the original text from the document by inferring or keeping information regarding character boundaries and using derived or provided font information. The mg system also includes such a scheme, called mgtic [6, 7], based on the work presented in [5]. <p> standard jbig [3], felics [2], and mgbilevel, part of the mg system <ref> [6, 7] </ref>. Character-based schemes attempt to derive the original text from the document by inferring or keeping information regarding character boundaries and using derived or provided font information. The mg system also includes such a scheme, called mgtic [6, 7], based on the work presented in [5]. We suggest a novel compression scheme based neither on pixels nor characters but on patterns determined from simple groupings of pixels.
Reference: [7] <author> I. H. Witten, A. Moffat, T. Bell, et al. </author> <title> Software kit for mg. </title> <note> Available via anonymous ftp from munnari.oz.au in the directory /pub/mg. </note>
Reference-contexts: Pixel-based schemes consider fl Supported by the Office of Naval Research. This work was done during an internship at Digital Systems Research Center. and encode each pixel individually. Examples include the international standard jbig [3], felics [2], and mgbilevel, part of the mg system <ref> [6, 7] </ref>. Character-based schemes attempt to derive the original text from the document by inferring or keeping information regarding character boundaries and using derived or provided font information. The mg system also includes such a scheme, called mgtic [6, 7], based on the work presented in [5]. <p> standard jbig [3], felics [2], and mgbilevel, part of the mg system <ref> [6, 7] </ref>. Character-based schemes attempt to derive the original text from the document by inferring or keeping information regarding character boundaries and using derived or provided font information. The mg system also includes such a scheme, called mgtic [6, 7], based on the work presented in [5]. We suggest a novel compression scheme based neither on pixels nor characters but on patterns determined from simple groupings of pixels.
References-found: 7

