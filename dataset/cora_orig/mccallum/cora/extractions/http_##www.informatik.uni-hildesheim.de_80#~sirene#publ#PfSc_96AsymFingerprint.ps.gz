URL: http://www.informatik.uni-hildesheim.de:80/~sirene/publ/PfSc_96AsymFingerprint.ps.gz
Refering-URL: http://www.informatik.uni-hildesheim.de:80/~sirene/lit/sirene.lit.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Asymmetric Fingerprinting (Extended Abstract)  
Author: Birgit Pfitzmann Matthias Schunter 
Address: D-31141 Hildesheim, Germany  
Affiliation: Universitt Hildesheim, Institut fr Informatik  
Note: Final Version for Eurocrypt 96, Zaragoza, May 1996, proceedings to appear in LNCS, Springer-Verlag  
Abstract: Fingerprinting schemes deter people from illegal copying of digital data by enabling the merchant of the data to identify the original buyer of a copy that was redistributed illegally. All known fingerprinting schemes are symmetric in the following sense: Both the buyer and the merchant know the fingerprinted copy. Thus, when the merchant finds this copy somewhere, there is no proof that it was the buyer who put it there, and not the merchant. We introduce asymmetric fingerprinting, where only the buyer knows the fingerprinted copy, and the merchant, upon finding it somewhere, can find out and prove to third parties whose copy it was. We present a detailed definition of this concept and constructions. The first construction is based on a quite general symmetric fingerprinting scheme and general cryptographic primitives; it is provably secure if all these underlying schemes are. We also present more specific and more efficient constructions.
Abstract-found: 1
Intro-found: 1
Reference: [B87] <author> Josh Cohen Benaloh: </author> <title> Verifiable Secret-Ballot Elections; Dissertation, </title> <institution> Yale University, </institution> <month> September </month> <year> 1987. </year>
Reference-contexts: These commitments are homomorphic with respect to addition modulo r. We denote them by HRC. More details, in particular about efficient en and decoding, can be found in <ref> [B87] </ref>. 11 We want to improve efficiency by a factor of k * by using these commitments on k * bit blocks of Pic. This may seem impossible at first sight, because we have to execute bitwise exor on the hidden values, not addition modulo r.
Reference: [B91] <author> Donald Beaver: </author> <title> Secure Multiparty Protocols and Zero Knowledge Proof Systems Tolerating a Faulty Minority; Journal of Cryptology 4/2 (1991) 75-122. </title>
Reference-contexts: Note that with some unsolved problems about definitions of secure computation, see <ref> [B91, MR91] </ref>, our requirement on the 2-party protocol, or at least on its proof, is quite strong, even though we do not require simultaneous outputs; to our knowledge no such proof has been fully carried out.
Reference: [BCC88] <editor> Gilles Brassard, David Chaum, Claude Crpeau: </editor> <title> Minimum Disclosure Proofs of Knowledge; Journal of Computer and System Sciences 37 (1988) 156-189. </title>
Reference-contexts: For black-and-white pictures, this means changing certain pixels in the square from 0 to 1. The set of these pixels within one square, which is fixed given Pic, is a mark. The following construction relies on a homomorphic bit commitment scheme, see <ref> [BCC88] </ref>. For brevity, we restrict ourselves to the quadratic residuosity scheme: One party chooses a Blum integer n = p q , i.e., p and q are primes with p q 3 mod 4. Commitments to 0 are quadratic residues, commitments to 1 are quadratic non-residues with Jacobi symbol +1.
Reference: [BLM94] <author> J. Brassil, S. Low, N. Maxemchuk, L. OGorman: </author> <title> Electronic Marking and Identification Techniques to Discourage Document Copying; Proceedings IEEE INFOCOM 94, </title> <institution> Toronto, </institution> <month> June 12-16, </month> <year> 1994, </year> <pages> 1278-1287. 12 </pages>
Reference-contexts: In other words, the fingerprints should tolerate a greater level of noise than the data. In particular, this should hold for lossy data compression. For previous literature on fingerprinting, see, e.g., [W83, BMP86, C95, BS95]. Related problems are treated in [CFN94] for Pay-TV, in <ref> [BLM94, CMP95] </ref> for data that are not digital, but on paper, and in [MQ95, Section V], where a socalled watermark that proves the identity of the merchant is desired.
Reference: [BMP86] <author> G. R. Blakley, C. Meadows, G. B. Purdy: </author> <title> Fingerprinting Long Forgiving Messages; Crypto 85, </title> <publisher> LNCS 218, Springer-Verlag, </publisher> <address> Berlin 1986, </address> <pages> 180-189. </pages>
Reference-contexts: In other words, the fingerprints should tolerate a greater level of noise than the data. In particular, this should hold for lossy data compression. For previous literature on fingerprinting, see, e.g., <ref> [W83, BMP86, C95, BS95] </ref>. Related problems are treated in [CFN94] for Pay-TV, in [BLM94, CMP95] for data that are not digital, but on paper, and in [MQ95, Section V], where a socalled watermark that proves the identity of the merchant is desired.
Reference: [BS95] <author> Dan Boneh, James Shaw: </author> <title> CollusionSecure Fingerprinting for Digital Data; Crypto 95, </title> <publisher> LNCS 963, Springer-Verlag, </publisher> <address> Berlin 1995, </address> <pages> 452-465. </pages>
Reference-contexts: In other words, the fingerprints should tolerate a greater level of noise than the data. In particular, this should hold for lossy data compression. For previous literature on fingerprinting, see, e.g., <ref> [W83, BMP86, C95, BS95] </ref>. Related problems are treated in [CFN94] for Pay-TV, in [BLM94, CMP95] for data that are not digital, but on paper, and in [MQ95, Section V], where a socalled watermark that proves the identity of the merchant is desired. <p> Then we need that L is polynomial in id_len. This is the case, e.g., in the explicit examples in [C95] and the main scheme in <ref> [BS95] </ref>. In the following construction, we use a general 2-party protocol for secure evaluation of an arbitrary function; see, e.g., [Y86, CDG88, GMW87]. We do not particularly require either party to be unconditionally secure, nor do we require gradual release of a secret. Construction 1. <p> For specific symmetric fingerprinting schemes, we need efficient zero-knowledge proof systems for Step 4 of fing asym in Construction 2. We show this for a small example from <ref> [BS95] </ref>. Example. <p> For specific symmetric fingerprinting schemes, we need efficient zero-knowledge proof systems for Step 4 of fing asym in Construction 2. We show this for a small example from [BS95]. Example. Consider code = G 0 from <ref> [BS95, Section 4] </ref>: For m identities, code (id) is the id-th row of the following table, where the length of each block is a certain parameter d related to our k. 111 111 111 000 000 To gain efficiency, we do not let the buyer commit to a complete codeword.
Reference: [C95] <author> Germano Caronni: </author> <title> Assuring Ownership Rights for Digital Images; Proceedings VIS 95; Vieweg, </title> <booktitle> Wiesbaden 1995, </booktitle> <pages> 251-263. </pages>
Reference-contexts: In other words, the fingerprints should tolerate a greater level of noise than the data. In particular, this should hold for lossy data compression. For previous literature on fingerprinting, see, e.g., <ref> [W83, BMP86, C95, BS95] </ref>. Related problems are treated in [CFN94] for Pay-TV, in [BLM94, CMP95] for data that are not digital, but on paper, and in [MQ95, Section V], where a socalled watermark that proves the identity of the merchant is desired. <p> Then we need that L is polynomial in id_len. This is the case, e.g., in the explicit examples in <ref> [C95] </ref> and the main scheme in [BS95]. In the following construction, we use a general 2-party protocol for secure evaluation of an arbitrary function; see, e.g., [Y86, CDG88, GMW87]. We do not particularly require either party to be unconditionally secure, nor do we require gradual release of a secret. <p> Id_Space must be -0, 1-id_len (k) with sufficiently large id_len, where in theory, id_len (k) k e is again sufficient, and the use in practice can be seen in Construction 2 below. For instance, in <ref> [C95] </ref>, the marks are essentially small squares, chosen according to characteristics of Pic, and encoding a 1 means making the square slightly darker. For black-and-white pictures, this means changing certain pixels in the square from 0 to 1.
Reference: [CDG88] <author> David Chaum, Ivan B. Damgfird, Jeroen van de Graaf: </author> <title> Multiparty computations ensuring privacy of each partys input and correctness of the result; Crypto 87, </title> <publisher> LNCS 293, Springer-Verlag, </publisher> <address> Berlin 1988, </address> <pages> 87-119. </pages>
Reference-contexts: Then we need that L is polynomial in id_len. This is the case, e.g., in the explicit examples in [C95] and the main scheme in [BS95]. In the following construction, we use a general 2-party protocol for secure evaluation of an arbitrary function; see, e.g., <ref> [Y86, CDG88, GMW87] </ref>. We do not particularly require either party to be unconditionally secure, nor do we require gradual release of a secret. Construction 1.
Reference: [CF85] <author> Josh D. Cohen, Michael J. Fischer: </author> <title> A robust and verifiable cryptographically secure election scheme; 26th FOCS, </title> <booktitle> 1985, </booktitle> <pages> 372-382. </pages>
Reference-contexts: We can commit to a value from -0, 1, , r1- using the r residue classes modulo the subgroup of r-th powers within Z Z n * , if we believe that distinguishing these classes is hard <ref> [CF85] </ref>. These commitments are homomorphic with respect to addition modulo r. We denote them by HRC.
Reference: [CFN94] <author> Benny Chor, Amos Fiat, Moni Naor: </author> <title> Tracing traitors; Crypto 94, </title> <publisher> LNCS 839, Springer-Verlag, </publisher> <address> Berlin 1994, </address> <pages> 257-270. </pages>
Reference-contexts: In other words, the fingerprints should tolerate a greater level of noise than the data. In particular, this should hold for lossy data compression. For previous literature on fingerprinting, see, e.g., [W83, BMP86, C95, BS95]. Related problems are treated in <ref> [CFN94] </ref> for Pay-TV, in [BLM94, CMP95] for data that are not digital, but on paper, and in [MQ95, Section V], where a socalled watermark that proves the identity of the merchant is desired.
Reference: [CMP95] <author> Abhijit K. Choudhury, Nicholas F. Maxemchuk, Sanjoy Paul, Henning G. Schulzrinne: </author> <title> Copyright Protection for Electronic Publishing Over Computer Networks; IEEE Network 9/3 (1995) 12-20. </title>
Reference-contexts: In other words, the fingerprints should tolerate a greater level of noise than the data. In particular, this should hold for lossy data compression. For previous literature on fingerprinting, see, e.g., [W83, BMP86, C95, BS95]. Related problems are treated in [CFN94] for Pay-TV, in <ref> [BLM94, CMP95] </ref> for data that are not digital, but on paper, and in [MQ95, Section V], where a socalled watermark that proves the identity of the merchant is desired.
Reference: [G87] <author> Oded Goldreich: </author> <title> Towards a Theory of Software Protection and Simulation by Oblivious RAMs; 19th STOC, </title> <booktitle> 1987, </booktitle> <pages> 182-194. </pages>
Reference-contexts: Examples of cryptographic work on software copyright protection with special hardware are <ref> [G87, O90] </ref>. 1 . 2 Asymmetric Fingerprinting In all the previous fingerprinting schemes, two parties know the data with the fingerprint: the buyer of the original copy and the merchant.
Reference: [GMW87] <author> Oded Goldreich, Silvio Micali, Avi Wigderson: </author> <title> How to play any mental game or a completeness theorem for protocols with honest majority; 19th STOC, </title> <booktitle> 1987, </booktitle> <pages> 218-229. </pages>
Reference-contexts: Then we need that L is polynomial in id_len. This is the case, e.g., in the explicit examples in [C95] and the main scheme in [BS95]. In the following construction, we use a general 2-party protocol for secure evaluation of an arbitrary function; see, e.g., <ref> [Y86, CDG88, GMW87] </ref>. We do not particularly require either party to be unconditionally secure, nor do we require gradual release of a secret. Construction 1.
Reference: [GP88] <author> Jeroen van de Graaf, Ren Peralta: </author> <title> A simple and secure way to show the validity of your public key; Crypto 87, </title> <publisher> LNCS 293, Springer-Verlag, </publisher> <address> Berlin 1988, </address> <pages> 128-134. </pages>
Reference-contexts: The buyer chooses an instance n B of the bit commitment scheme. She gives the merchant a zero-knowledge proof that n B is at least a generalized Blum integer, i.e., of the form p r q s with p, q as above and r, s odd <ref> [GP88] </ref>. 3 . The buyer chooses a value id_proof -0, 1-len 2 randomly and sets id sym := (seq_no, id_proof) Id_Space sym . She encodes id sym according to the symmetric fingerprinting scheme and commits to the result, i.e., she computes com := BC (code (id sym )).
Reference: [MQ95] <author> Benoit M. Macq, Jean-Jacques Quisquater: </author> <booktitle> Cryptology for Digital TV Broadcasting; Proceedings of the IEEE 83/6 (1995) 944-957. </booktitle>
Reference-contexts: In particular, this should hold for lossy data compression. For previous literature on fingerprinting, see, e.g., [W83, BMP86, C95, BS95]. Related problems are treated in [CFN94] for Pay-TV, in [BLM94, CMP95] for data that are not digital, but on paper, and in <ref> [MQ95, Section V] </ref>, where a socalled watermark that proves the identity of the merchant is desired.
Reference: [MR91] <author> Silvio Micali, Phillip Rogaway: </author> <note> Secure Computation (Chapters 1-3); Laboratory for Computer Science, MIT; distributed at Crypto 91. </note>
Reference-contexts: Note that with some unsolved problems about definitions of secure computation, see <ref> [B91, MR91] </ref>, our requirement on the 2-party protocol, or at least on its proof, is quite strong, even though we do not require simultaneous outputs; to our knowledge no such proof has been fully carried out.
Reference: [O90] <author> Rafail Ostrovsky: </author> <title> An efficient software protection scheme; Crypto 89, </title> <publisher> LNCS 435, Springer-Verlag, </publisher> <address> Heidelberg 1990, </address> <pages> 610-611. </pages>
Reference-contexts: Examples of cryptographic work on software copyright protection with special hardware are <ref> [G87, O90] </ref>. 1 . 2 Asymmetric Fingerprinting In all the previous fingerprinting schemes, two parties know the data with the fingerprint: the buyer of the original copy and the merchant.
Reference: [W83] <author> Neal R. Wagner: </author> <booktitle> Fingerprinting; IEEE Symposium on Security and Privacy, </booktitle> <address> Oakland, </address> <year> 1983, </year> <pages> 18-22. </pages>
Reference-contexts: In other words, the fingerprints should tolerate a greater level of noise than the data. In particular, this should hold for lossy data compression. For previous literature on fingerprinting, see, e.g., <ref> [W83, BMP86, C95, BS95] </ref>. Related problems are treated in [CFN94] for Pay-TV, in [BLM94, CMP95] for data that are not digital, but on paper, and in [MQ95, Section V], where a socalled watermark that proves the identity of the merchant is desired.
Reference: [Y86] <author> Andrew ChiChih Yao: </author> <title> How to Generate and Exchange Secrets; 27th FOCS, </title> <booktitle> 1986, </booktitle> <pages> 162-167. </pages>
Reference-contexts: Then we need that L is polynomial in id_len. This is the case, e.g., in the explicit examples in [C95] and the main scheme in [BS95]. In the following construction, we use a general 2-party protocol for secure evaluation of an arbitrary function; see, e.g., <ref> [Y86, CDG88, GMW87] </ref>. We do not particularly require either party to be unconditionally secure, nor do we require gradual release of a secret. Construction 1.
References-found: 19

