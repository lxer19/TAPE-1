URL: ftp://ftp.cs.unm.edu/pub/forrest/dna-fragment-94.ps.gz
Refering-URL: http://www.cs.unm.edu/~forrest/papers.html
Root-URL: http://www.cs.unm.edu
Title: Genetic Algorithms, Operators, and DNA Fragment Assembly Machine Learning To Appear  
Author: REBECCA J. PARSONS STEPHANIE FORREST CHRISTIAN BURKS 
Keyword: genetic algorithms, DNA fragment assembly, human genome project, ordering problems, edge-recombination crossover, building blocks  
Address: Current Address:  Orlando, FL 32816-0362  Albuquerque, NM 87131-1386  MS K710, Los Alamos, NM 87545  
Affiliation: Los Alamos National Laboratory  University of Central Florida, Department of Computer Science,  University of New Mexico, Department of Computer Science,  Group,  
Note: Machine Learning, To Appear, 1-24 c Kluwer Academic Publishers, Boston. Manufactured in The Netherlands.  Los Alamos National Laboratory, Theoretical Biology and Biophysics  To Appear Editor: David Searls  
Email: rebecca@cs.ucf.edu  forrest@cs.unm.edu  cb@t10.lanl.gov  
Date: Received October 30, 1993; Revised October, 1994:  
Abstract: We study different genetic algorithm operators for one permutation problem associated with the Human Genome Project|the assembly of DNA sequence fragments from a parent clone whose sequence is unknown into a consensus sequence corresponding to the parent sequence. The sorted-order representation, which does not require specialized operators, is compared with a more traditional permutation representation, which does require specialized operators. The two representations and their associated operators are compared on problems ranging from 2K to 34K base pairs (KB). Edge-recombination crossover used in conjunction with several specialized operators is found to perform best in these experiments; these operators solved a 10KB sequence, consisting of 177 fragments, with no manual intervention. Natural building blocks in the problem are exploited at progressively higher levels through "macro-operators." This significantly improves performance. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Bean, J. C. </author> <year> 1992. </year> <title> Genetics and random keys for sequencing and optimization. </title> <type> Technical Report 92-43, </type> <institution> The University of Michigan. </institution>
Reference-contexts: We studied the remaining two approaches, first trying the sorted-order representation, in which all solutions map to a legal permutation order [(Syswerda 1989); <ref> (Bean 1992) </ref>]. We then studied the performance of the simple permutation representation in combination with two special-purpose recombination operators, edge-recombination [(Starkweather et al. 1991)] and order crossover [(Davis 1985)].
Reference: <author> Burks, C.; Engle, M.; Lowenstein, M.; Parsons, R.; and Soderlund, C. </author> <year> 1993. </year> <title> Stochastic optimization tools for DNA assembly: integration of physical map and sequence data. </title> <note> Poster presented at Genome Sequencing and Analysis Conference V. </note>
Reference: <author> Burks, C.; Engle, M.; Forrest, S.; Parsons, R.; Soderlund, C.; and Stolorz, P. </author> <year> 1994. </year> <title> Stochastic optimization tools for genomic sequence assembly. </title> <editor> In Venter, J. C., ed., </editor> <title> Automated DNA Sequencing and Analysis Techniques. </title> <publisher> Academic Press. </publisher>
Reference-contexts: Typically in a greedy algorithm, a candidate solution is presented to the researcher who must then massage it to obtain a biologically plausible final result. Simulated annealing has been applied to the ordering step of the fragment assembly problem [(Churchill et al. 1993); <ref> (Burks et al. 1994) </ref>], and genetic algorithms have been applied to this problem by the authors [(Parsons, Forrest, & Burks 1993)] and to a related ordering problem, map assembly, by others [(Fickett & Cinkosky 1993); (Cedeno & Vemuri 1993)]. <p> An overview of the process is shown in Figure 1 (see also [(Churchill et al. 1993); <ref> (Burks et al. 1994) </ref>] for a more detailed explanation of the sequencing process). <p> This process includes a detailed alignment step that must account for the insertion and deletion errors potentially present in the data. As shown in Figure 2, the steps from raw sequence data from a random sequencing project to a consensus sequence are as follows [(Churchill et al. 1993); <ref> (Burks et al. 1994) </ref>]: 4 G C A T A T AT G C Replication Shotgun produces fragments Sequence Fragments Reassemble Consensus Sequence CGT AT CTGATAC ATC GCAT GTCA CGTA ATGATC ATA G CGTA GTAGTAC CG GATATA ATGA TGC ATACGTG GATGA ATCGTA CGTA GTCATCAAT TGCGCGTAGTCATGC GATGA ATCGTA ATACGTGAT CGTAGTCATGC TGCG TATCCAGTATCAT...
Reference: <author> Carlsson, P.; Darnfors, C.; Olofsson, S.-O.; and Bjursell, G. </author> <year> 1986. </year> <title> Analysis of the human apolipoprotein B gene; complete structure of the B-74 region. </title> <type> Gene 49 </type> <pages> 29-51. </pages>
Reference: <author> Cedeno, W., and Vemuri, V. </author> <year> 1993. </year> <title> An investigation of DNA mapping with genetic algorithms: preliminary results. </title> <booktitle> In Proc. of the Fifth Workshop on Neural Networks, volume 2204 of SPIE. </booktitle>
Reference-contexts: been applied to the ordering step of the fragment assembly problem [(Churchill et al. 1993); (Burks et al. 1994)], and genetic algorithms have been applied to this problem by the authors [(Parsons, Forrest, & Burks 1993)] and to a related ordering problem, map assembly, by others [(Fickett & Cinkosky 1993); <ref> (Cedeno & Vemuri 1993) </ref>]. The next section of this paper contains a detailed explanation of the flow of information in the fragment assembly problem and the general computational approach we follow. Section 3 details the genetic algorithm explored in this paper, with the results appearing in Section 4.
Reference: <author> Chen, W. Q., and Hunkapiller, T. </author> <year> 1992. </year> <title> Sequence accuracy of large DNA sequencing projects. </title>
Reference: <author> J. </author> <title> DNA Seq. </title> <type> Map 2 </type> <pages> 335-342. </pages>
Reference: <author> Churchill, G.; Burks, C.; Eggert, M.; Engle, M.; and Waterman, M. </author> <year> 1993. </year> <title> Assembling DNA sequence fragments by shu*ing and simulated annealing. </title> <type> Technical Report LAUR 93-2287, </type> <institution> Los Alamos National Lab., </institution> <address> Los Alamos, NM. </address>
Reference-contexts: This progression is an explicit example of the implicit behavior described by the building-blocks hypothesis. The accuracy of the various sequencing processes constrain laboratory approaches to DNA sequencing [(Howe & Ward 1989); (Hunkapiller, Kaiser, & Hood 1991); (Hunkapiller et al. 1991); <ref> (Churchill et al. 1993) </ref>]. Currently, strands of DNA longer than approximately 500 base pairs cannot routinely be sequenced accurately. Consequently, large strands of DNA are broken into smaller pieces for sequencing. <p> This paper addresses the first of these problems, hereafter referred to as the fragment assembly problem, relying on previously developed methods for addressing the alignment and strand assignment problems [(Staden 1980); (Kececioglu 1991); (Huang 1992); <ref> (Churchill et al. 1993) </ref>]. Large-scale shotgun sequencing projects require automated solutions that do more than re-create the manual processes, because the complexity of the assembly process grows exponentially with the size of the project. There are several complicating factors to be considered in designing computational solutions.
Reference: <author> Davis, L. </author> <year> 1985. </year> <title> Applying adaptive algorithms to epistatic domains. </title> <booktitle> In Proc. of the 1985 Joint Conference on Artificial Intelligence. </booktitle>
Reference: <author> Engle, M., and Burks, C. </author> <year> 1993. </year> <title> Artificially generated data sets for testing DNA fragment assembly algorithms. </title> <note> Genomics 286-288. 24 Fickett, </note> <author> J., and Cinkosky, M. </author> <year> 1993. </year> <title> A genetic algorithm for assembling chromosome physical maps. </title> <editor> In Cantor, C. R., and Robbins, R., eds., </editor> <booktitle> Proc. of the Second International Conference on Bioinformatics, Supercomputing, and Complex Genome Analysis. World Scientific. </booktitle> <pages> 272-285. </pages>
Reference: <author> Forrest, S. </author> <year> 1993. </year> <title> Genetic algorithms: Principles of natural selection applied to computation. </title> <booktitle> Science 261 </booktitle> <pages> 872-878. </pages>
Reference-contexts: These operators and representations are described in the next section, along with the data sets used for testing. 3. Genetic Algorithms Applied to Fragment Assembly Genetic algorithms operate on a population of candidate solutions, called individuals [(Holland 1975); (Goldberg 1989); <ref> (Forrest 1993) </ref>]. Typically, the population is initialized with random individuals. After that, individuals are deleted from or reproduced in the population on the basis of their relative fitness. New individuals are formed by applying various operators to the existing population of individuals (see below).
Reference: <author> Goldberg, D. E. </author> <year> 1989. </year> <title> Genetic Algorithms in Search, Optimization, and Machine Learning. </title> <publisher> Addison Wesley Publishing Company. </publisher>
Reference-contexts: These operators and representations are described in the next section, along with the data sets used for testing. 3. Genetic Algorithms Applied to Fragment Assembly Genetic algorithms operate on a population of candidate solutions, called individuals [(Holland 1975); <ref> (Goldberg 1989) </ref>; (Forrest 1993)]. Typically, the population is initialized with random individuals. After that, individuals are deleted from or reproduced in the population on the basis of their relative fitness. New individuals are formed by applying various operators to the existing population of individuals (see below).
Reference: <author> Grefenstette, J. J. </author> <year> 1984. </year> <title> Genesis: A system for using genetic search procedures. </title> <booktitle> In Proc. of a Conference on Intelligent Systems and Machines, </booktitle> <pages> 161-165. </pages>
Reference: <author> Holland, J. H. </author> <year> 1975. </year> <booktitle> Adaptation in Natural and Artificial Systems. </booktitle> <address> Ann Arbor, MI: </address> <publisher> The University of Michigan Press. </publisher>
Reference: <author> Howe, C., and Ward, E., eds. </author> <year> 1989. </year> <title> Nucleic Acids Sequencing: A Practical Approach. </title> <publisher> IRL Press. </publisher>
Reference: <author> Huang, X. </author> <year> 1992. </year> <title> A contig assembly program based on sensitive detection of fragment overlaps. </title> <booktitle> Genomics 14 </booktitle> <pages> 18-25. </pages>
Reference-contexts: This paper addresses the first of these problems, hereafter referred to as the fragment assembly problem, relying on previously developed methods for addressing the alignment and strand assignment problems [(Staden 1980); (Kececioglu 1991); <ref> (Huang 1992) </ref>; (Churchill et al. 1993)]. Large-scale shotgun sequencing projects require automated solutions that do more than re-create the manual processes, because the complexity of the assembly process grows exponentially with the size of the project. There are several complicating factors to be considered in designing computational solutions. <p> Comparison to a Greedy Approach Many of the standard assembly packages use some form of greedy algorithm to find the appropriate ordering [(Staden 1980); <ref> (Huang 1992) </ref>]. To evaluate the performance of the genetic algorithm, we compare our results to those found by a greedy algorithm. The greedy algorithm we use, which is similar to that used in [(Huang 1992)], examines overlap strengths and picks the strongest overlap that connects some as yet unplaced fragment to
Reference: <author> Hunkapiller, T.; Kaiser, R.; Koop, B.; and Hood, L. </author> <year> 1991. </year> <title> Large-scale and automated DNA sequence determination. </title> <booktitle> Science 254 </booktitle> <pages> 59-67. </pages>
Reference-contexts: This progression is an explicit example of the implicit behavior described by the building-blocks hypothesis. The accuracy of the various sequencing processes constrain laboratory approaches to DNA sequencing [(Howe & Ward 1989); <ref> (Hunkapiller, Kaiser, & Hood 1991) </ref>; (Hunkapiller et al. 1991); (Churchill et al. 1993)]. Currently, strands of DNA longer than approximately 500 base pairs cannot routinely be sequenced accurately. Consequently, large strands of DNA are broken into smaller pieces for sequencing. <p> This progression is an explicit example of the implicit behavior described by the building-blocks hypothesis. The accuracy of the various sequencing processes constrain laboratory approaches to DNA sequencing [(Howe & Ward 1989); (Hunkapiller, Kaiser, & Hood 1991); <ref> (Hunkapiller et al. 1991) </ref>; (Churchill et al. 1993)]. Currently, strands of DNA longer than approximately 500 base pairs cannot routinely be sequenced accurately. Consequently, large strands of DNA are broken into smaller pieces for sequencing.
Reference: <author> Hunkapiller, T.; Kaiser, R.; and Hood, L. </author> <year> 1991. </year> <title> Large-scale DNA sequencing. </title> <journal> Curr. Opin. Biotech. </journal> <volume> 2 </volume> <pages> 92-101. </pages>
Reference-contexts: This progression is an explicit example of the implicit behavior described by the building-blocks hypothesis. The accuracy of the various sequencing processes constrain laboratory approaches to DNA sequencing [(Howe & Ward 1989); <ref> (Hunkapiller, Kaiser, & Hood 1991) </ref>; (Hunkapiller et al. 1991); (Churchill et al. 1993)]. Currently, strands of DNA longer than approximately 500 base pairs cannot routinely be sequenced accurately. Consequently, large strands of DNA are broken into smaller pieces for sequencing. <p> This progression is an explicit example of the implicit behavior described by the building-blocks hypothesis. The accuracy of the various sequencing processes constrain laboratory approaches to DNA sequencing [(Howe & Ward 1989); (Hunkapiller, Kaiser, & Hood 1991); <ref> (Hunkapiller et al. 1991) </ref>; (Churchill et al. 1993)]. Currently, strands of DNA longer than approximately 500 base pairs cannot routinely be sequenced accurately. Consequently, large strands of DNA are broken into smaller pieces for sequencing.
Reference: <author> Kececioglu, J. </author> <year> 1991. </year> <title> Exact and approximation algorithms for DNA sequence reconstruction. </title> <type> Ph.D. Dissertation, </type> <institution> University of Arizona, Tucson, AZ. </institution> <type> TR 91-26, </type> <institution> Department of Computer Science. </institution>
Reference-contexts: This paper addresses the first of these problems, hereafter referred to as the fragment assembly problem, relying on previously developed methods for addressing the alignment and strand assignment problems [(Staden 1980); <ref> (Kececioglu 1991) </ref>; (Huang 1992); (Churchill et al. 1993)]. Large-scale shotgun sequencing projects require automated solutions that do more than re-create the manual processes, because the complexity of the assembly process grows exponentially with the size of the project. There are several complicating factors to be considered in designing computational solutions.
Reference: <author> Lawler, E.; Rinnooy Kan, A.; and Shmoys, D., eds. </author> <year> 1985. </year> <title> The Traveling Salesman Problem. </title> <address> New York: </address> <publisher> John Wiley and Sons. </publisher>
Reference: <author> Lin, S., and Kernighan, H. W. </author> <year> 1973. </year> <title> An effective heuristic algorithm for the traveling-salesman problem. </title> <journal> Operations Research 21 </journal> <pages> 498-516. </pages>
Reference: <author> Matsumoto, K.; Arai, M.; Ishihara, N.; Ando, A.; Inoko, H.; and Ikemura, T. </author> <year> 1991. </year> <title> Cluster of fibronectin type-III repeats found in the human major histocompatibility complex class III region shows highest homology with repeats in an extracellular matrix protein, </title> <journal> tenascin. </journal> <volume> Genomics 12 </volume> <pages> 485-491. </pages>
Reference: <author> Parsons, R.; Forrest, S.; and Burks, C. </author> <year> 1993. </year> <title> Genetic algorithms for DNA sequence assembly. </title> <booktitle> In Proc. of the 1st International Conference on Intelligent Systems in Molecular Biology, </booktitle> <pages> 310-318. </pages> <publisher> AAAI Press. </publisher>
Reference: <author> Sanger, F.; Coulson, A.; Hill, D.; and Petersen, G. </author> <year> 1982. </year> <title> Nucleotide sequence of bacteriophage lambda DNA. </title> <journal> J. Mol. Biol. </journal> <volume> 162 </volume> <pages> 729-773. </pages>
Reference: <author> Schaffer, J. D.; Caruana, R.; L.J.Eshelman; and R.Das. </author> <year> 1989. </year> <title> A study of control parameters affecting online performance of genetic algorithms for function optimization. </title> <booktitle> In Proc. of the Third International Conference on Genetic Algorithms, </booktitle> <pages> 51-60. </pages> <address> San Mateo, CA: </address> <publisher> Morgan Kaufmann. </publisher>
Reference: <author> Seto, D.; Koop, B.; and Hood, L. </author> <year> 1993. </year> <title> An experimentally-derived data set constructed for testing large-scale DNA sequence assembly algorithms. </title> <booktitle> Genomics 15 </booktitle> <pages> 673-676. </pages>
Reference: <author> Staden, R. </author> <year> 1980. </year> <title> A new computer method for the storage and manipulation of DNA gel reading data. Nucl. </title> <journal> Acids Res. </journal> <volume> 8 </volume> <pages> 3673-3694. </pages>
Reference: <author> Starkweather, T.; McDaniel, S.; Mathias, K.; Whitley, D.; and Whitley, C. </author> <year> 1991. </year> <title> A comparison of genetic sequencing operators. </title> <booktitle> In 4th International Conference on Genetic Algorithms, </booktitle> <pages> 69-76. </pages>
Reference: <author> Sverdlov, E.; Monastyrskaya, G.; Broude, N.; Ushkarev, Y.; Melkov, A.; Smirnov, Y.; Malyshev, I.; Allikmets, R.; Kostina, M.; Dulubova, I.; Kiyatkin, N.; Grishin, A.; Modyanov, N.; and Ovchinnikov, Y. </author> <year> 1987. </year> <title> Family of human Na+, K+-ATPase genes. Structure of the gene of isoform alpha-III. </title> <journal> Cokl. Biochem. </journal> <volume> 297 </volume> <pages> 426-431. </pages>
Reference: <author> Syswerda, G. </author> <year> 1989. </year> <title> Uniform crossover in genetic algorithms. </title> <booktitle> In Proc. of the Third International Conference on Genetic Algorithms, </booktitle> <pages> 2-9. </pages> <address> San Mateo, CA: </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Using this type of representation provides the isolation of problem-specific information from which the genetic algorithm derives its generality. For this reason, we chose to try the sorted-order representation [(Schaffer et al. 1989); <ref> (Syswerda 1989) </ref>], also referred to as the random-key representation [(Bean 1992)]. The sorted-order representation provides a rather complex mapping from the individual to the permutation ordering.
Reference: <author> Waterman, M. S., ed. </author> <year> 1989. </year> <title> Mathematical Methods for DNA Sequences. </title> <publisher> CRC Press. </publisher>
Reference: <author> Whitley, D. </author> <year> 1993. </year> <type> Personal Communication, </type> <month> August 30. </month>
References-found: 32

