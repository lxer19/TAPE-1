URL: http://www.cs.ucsd.edu/groups/csl/pubs/conf/DMMR.ps
Refering-URL: http://www.cs.ucsd.edu/groups/csl/pubs/author.html
Root-URL: http://www.cs.ucsd.edu
Email: polyzosg@cs.ucsd.edu  
Title: Two Distributed Algorithms for Multicasting Multimedia Information  
Author: Vachaspathi P. Kompella, Joseph C. Pasquale, George C. Polyzos fkompella, pasquale, 
Keyword: Multicast, interactive multimedia, Steiner tree, distributed algorithm, constrained optimization.  
Address: La Jolla, CA 92093-0114.  
Affiliation: Computer Systems Laboratory Department of Computer Science and Engineering University of California, San Diego  
Abstract: This paper addresses the problem of effective multicast tree construction for interactive audiovisual communication to several destinations. We believe that the effectiveness of a multicast tree for such applications is determined by two factors: (i) the end-to-end delay along the individual paths from source to each destination, and (ii) the cost of the multicast tree, for example, in terms of network bandwidth utilization. Note that while the cost of the tree should be minimized, it is sufficient simply to bound the delay. The problem of computing the optimal constrained multicast tree is NP-complete. We present two distributed algorithms that compute low cost trees with delay-bounded paths from the source to each destination. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R.E. Bellman. </author> <title> Dynamic Programming. </title> <publisher> Princeton University Press, </publisher> <address> Princeton, N.J., </address> <year> 1957. </year>
Reference-contexts: This is a distributed version of the Bellman-Ford shortest path algorithm <ref> [1] </ref>. Obviously, the tree has to be pruned to remove unnecessary branches. It is guaranteed to be successful in finding a constrained spanning tree (if one exists), but does not attempt to optimize on the cost of the solution. <p> The nodes in the graphs were randomly placed in a unit square, and the edge delays were proportional to the Eu-clidean distance separating the endpoints. We used both unit edge costs and random edge cost generated uniformly from the set <ref> [1, 10] </ref>. The random edge costs match typical values for costs used in the NSFNET backbone network. However, earlier results indicate that the properties of the heuristics and their relative performance remain the same for both unit costs and random costs. <p> The distributed Bellman-Ford algorithm for the shortest paths takes O (n 3 ) time <ref> [1] </ref>. The distributed algorithms DM CT C and DM CT CD are based on the distributed MST algorithm. However, there are four differences. Firstly, instead of allowing the tree to be built up in fragments that eventually connect together, this tree is built from a single root.
Reference: [2] <author> C.-H. Chow. </author> <title> On multicast path finding algorithms. </title> <booktitle> Proc. of IEEE INFOCOMM '91, </booktitle> <address> New York, NY, </address> <pages> pp. 1274-1283, </pages> <year> 1991. </year>
Reference-contexts: The least cost tree is called a Steiner tree [5], and the problem of finding a Steiner tree is known to be NP-complete [7]. Several centralized algorithms that construct low-cost multicast routes <ref> [2, 6, 13, 14] </ref> are based on heuristics for approximate Steiner trees [10, 11, 12]. Empirical observations show that the heuristics produce near optimal trees quickly. These algorithms take polynomial time, ranging from O (n 3 ) to O (n 4 ).
Reference: [3] <author> E.W. Dijkstra. </author> <title> A note on two problems in connexion with graphs. </title> <journal> Numerische Mathematik, </journal> <volume> 1 </volume> <pages> 269-271, </pages> <year> 1959. </year>
Reference-contexts: A minimum average path delay tree can be constructed in O (n 2 ) time fl This work was supported by grants from Digital Equipment Corp., IBM, UC Micro, NCR, TRW, and the National Science Foundation. using Dijkstra's shortest path algorithm <ref> [3] </ref>, where n is the number of nodes in the graph. The second measure of efficiency is in terms of the cost of the multicast tree, C T , which is the sum of the costs on the edges in the multicast tree. <p> The same is true for CM CT CD and CM CT C . 4.2 Complexity of the Heuristics If the source knows the network status, then Dijkstra's shortest paths algorithm takes O (n 2 ) time <ref> [3] </ref>. The distributed Bellman-Ford algorithm for the shortest paths takes O (n 3 ) time [1]. The distributed algorithms DM CT C and DM CT CD are based on the distributed MST algorithm. However, there are four differences.
Reference: [4] <author> R.G. Gallager, </author> <title> P.A. Humblett, and P.M. Spira. A distributed algorithm for minimum-weight spanning trees. </title> <journal> ACM Trans. on Prog. Lang. Syst., </journal> <volume> 5 </volume> <pages> 66-77, </pages> <year> 1983. </year>
Reference-contexts: These two algorithms are based on a distributed minimum spanning tree (MST) algorithm. Essentially, the algorithm mimics Prim's MST algorithm. The reader can find more details on the distributed MST algorithm in <ref> [4] </ref>. The most significant problem with using the distributed MST algorithm to construct an approximate constrained Steiner tree is that there is no way to know a priori whether the tree is growing in the right direction. <p> This corresponds to the distributed MST algorithm running with a single node woken up initially. This would cause the distributed MST algorithm to run with O (n 3 ) number of messages <ref> [4] </ref>. Thus, the number of messages for DM CT C or DM CT CD would be O (n 3 ) also.
Reference: [5] <author> S.L. Hakimi. </author> <title> Steiner's problem in graphs and its implications. </title> <journal> Networks, </journal> <volume> 1 </volume> <pages> 113-133, </pages> <year> 1971. </year>
Reference-contexts: The second measure of efficiency is in terms of the cost of the multicast tree, C T , which is the sum of the costs on the edges in the multicast tree. The least cost tree is called a Steiner tree <ref> [5] </ref>, and the problem of finding a Steiner tree is known to be NP-complete [7]. Several centralized algorithms that construct low-cost multicast routes [2, 6, 13, 14] are based on heuristics for approximate Steiner trees [10, 11, 12]. Empirical observations show that the heuristics produce near optimal trees quickly.
Reference: [6] <author> B.K. Kadaba and J.M. Jaffe. </author> <title> Routing to multiple destinations in computer networks. </title> <journal> IEEE Trans. on Comm., </journal> <volume> COM-31(3):343-351, </volume> <month> Mar. </month> <year> 1983. </year>
Reference-contexts: The least cost tree is called a Steiner tree [5], and the problem of finding a Steiner tree is known to be NP-complete [7]. Several centralized algorithms that construct low-cost multicast routes <ref> [2, 6, 13, 14] </ref> are based on heuristics for approximate Steiner trees [10, 11, 12]. Empirical observations show that the heuristics produce near optimal trees quickly. These algorithms take polynomial time, ranging from O (n 3 ) to O (n 4 ).
Reference: [7] <author> R.M. Karp. </author> <title> Reducibility among combinatorial problems. In R.E. </title> <editor> Miller and J.W. Thatcher, editors, </editor> <booktitle> Complexity of Computer Computations, </booktitle> <pages> pp. 85-103. </pages> <publisher> Plenum Press, </publisher> <address> New York, </address> <year> 1972. </year>
Reference-contexts: The least cost tree is called a Steiner tree [5], and the problem of finding a Steiner tree is known to be NP-complete <ref> [7] </ref>. Several centralized algorithms that construct low-cost multicast routes [2, 6, 13, 14] are based on heuristics for approximate Steiner trees [10, 11, 12]. Empirical observations show that the heuristics produce near optimal trees quickly.
Reference: [8] <author> V.P. Kompella, J.C. Pasquale, </author> <title> and G.C. Polyzos. Multicast routing for multimedia communications. </title> <journal> ACM/IEEE Trans. on Networking., </journal> <month> Jun. </month> <year> 1993. </year>
Reference-contexts: In our formulation, a multicast tree is a constrained Steiner tree, i.e., a delay-bounded minimum cost tree, where the delay bound is specified by the application performing the multicast. A centralized approach to determining a constrained Steiner tree can be found in <ref> [8, 9] </ref>. The centralized algorithms perform very well, on the average, generating trees that cost about 5-10% more than the optimal. In dealing with larger networks, where the cost of maintaining consistent information at all nodes regarding the network status may be prohibitive, a distributed approach may prove cheaper. <p> We also posit that, in selecting edges for inclusion in the constrained Steiner tree, it is advantageous to factor in the delay that is incurred on a path from the source through that edge. From earlier results (see <ref> [8] </ref>), the same is not true for the centralized algorithms that we developed. 2 The Constrained Steiner Tree The constrained Steiner tree (CST) problem can be formulated as follows. <p> The delay constraint is 5. Thus, all paths must have a delay between 1 and 4. Fig. 2 shows the optimal tree which has a cost of 20. 3.1 Centralized Routing Algorithms We briefly describe the centralized algorithms, but the reader is referred to <ref> [8] </ref> for further details. The basic strategy is to construct a closure graph on the source and destination nodes only. The closure graph encapsulates the costs of the fB,D,E,Hg with = 5, and s = F. cheapest delay-bounded paths between any two nodes, and the corresponding delays. <p> Now complete the algorithm, and prune the unnecessary edge (AU), to yield the tree in Fig. 7 (c). This cycle "make-and-break" phase can now be included in the algorithm, between steps 6 and 7. It is given in Appendix 2. 4 Performance Analysis of the Heuris- tics In <ref> [8] </ref>, we showed that the performance of the centralized heuristics was very good. In fact, CM CT C , the centralized heuristic that uses f C , comes to within 5-10% of the cost of the optimal in the empirical performance evaluation of the centralized algorithms.
Reference: [9] <author> V.P. Kompella, J.C. Pasquale, </author> <title> and G.C. Polyzos. Mul-ticasting for multimedia applications. </title> <booktitle> Proc. of IEEE INFOCOMM '92, </booktitle> <address> Florence, Italy, </address> <month> May </month> <year> 1992. </year>
Reference-contexts: In our formulation, a multicast tree is a constrained Steiner tree, i.e., a delay-bounded minimum cost tree, where the delay bound is specified by the application performing the multicast. A centralized approach to determining a constrained Steiner tree can be found in <ref> [8, 9] </ref>. The centralized algorithms perform very well, on the average, generating trees that cost about 5-10% more than the optimal. In dealing with larger networks, where the cost of maintaining consistent information at all nodes regarding the network status may be prohibitive, a distributed approach may prove cheaper. <p> v 2 S, if P (s; v) is the path in T from s to v, X D (e) &lt; The constrained Steiner tree can now be described as a constrained spanning tree such that X C (e) is minimized We note that this problem is NP-complete, as shown in <ref> [9] </ref>. 3 Distributed Algorithms for the Con strained Steiner Tree When a network is small, it is possible to maintain a consistent view of the network status by broadcasting this information. As the network gets larger, this process becomes less reliable, less accurate, and more expensive. <p> We have addressed one aspect of the problem, i.e., routing algorithms that take into account quality of service parameters required to make interactive multimedia communication successful. The analysis presented in <ref> [9] </ref> shows that the problem of multicast routing as presented is intractable. We have shown that there are fast distributed algorithms that produce extremely good solutions.
Reference: [10] <author> L. Kou, G. Markowsky, and L. Berman. </author> <title> A fast algorithm for Steiner trees. </title> <journal> Acta Informatica, </journal> <volume> 15 </volume> <pages> 141-145, </pages> <year> 1981. </year>
Reference-contexts: The least cost tree is called a Steiner tree [5], and the problem of finding a Steiner tree is known to be NP-complete [7]. Several centralized algorithms that construct low-cost multicast routes [2, 6, 13, 14] are based on heuristics for approximate Steiner trees <ref> [10, 11, 12] </ref>. Empirical observations show that the heuristics produce near optimal trees quickly. These algorithms take polynomial time, ranging from O (n 3 ) to O (n 4 ). <p> The nodes in the graphs were randomly placed in a unit square, and the edge delays were proportional to the Eu-clidean distance separating the endpoints. We used both unit edge costs and random edge cost generated uniformly from the set <ref> [1, 10] </ref>. The random edge costs match typical values for costs used in the NSFNET backbone network. However, earlier results indicate that the properties of the heuristics and their relative performance remain the same for both unit costs and random costs.
Reference: [11] <author> V.J. Rayward-Smith. </author> <title> The computation of nearly minimal Steiner trees in graphs. </title> <journal> Intl. J. Math. Educ. Sci. Tech., </journal> <volume> 14(1) </volume> <pages> 15-23, </pages> <year> 1983. </year>
Reference-contexts: The least cost tree is called a Steiner tree [5], and the problem of finding a Steiner tree is known to be NP-complete [7]. Several centralized algorithms that construct low-cost multicast routes [2, 6, 13, 14] are based on heuristics for approximate Steiner trees <ref> [10, 11, 12] </ref>. Empirical observations show that the heuristics produce near optimal trees quickly. These algorithms take polynomial time, ranging from O (n 3 ) to O (n 4 ).
Reference: [12] <author> H. Takahashi and A. </author> <title> Matsuyama. An approximate solution for the Steiner problem in graphs. </title> <journal> Math. Japonica, </journal> <volume> 6 </volume> <pages> 573-577, </pages> <year> 1980. </year>
Reference-contexts: The least cost tree is called a Steiner tree [5], and the problem of finding a Steiner tree is known to be NP-complete [7]. Several centralized algorithms that construct low-cost multicast routes [2, 6, 13, 14] are based on heuristics for approximate Steiner trees <ref> [10, 11, 12] </ref>. Empirical observations show that the heuristics produce near optimal trees quickly. These algorithms take polynomial time, ranging from O (n 3 ) to O (n 4 ).
Reference: [13] <author> D.W. Wall. </author> <title> Mechanisms for Broadcast and Selective Broadcast. </title> <type> PhD thesis, </type> <institution> Elect. Eng. Dept., Stanford University, </institution> <month> Jun </month> <year> 1980. </year>
Reference-contexts: The least cost tree is called a Steiner tree [5], and the problem of finding a Steiner tree is known to be NP-complete [7]. Several centralized algorithms that construct low-cost multicast routes <ref> [2, 6, 13, 14] </ref> are based on heuristics for approximate Steiner trees [10, 11, 12]. Empirical observations show that the heuristics produce near optimal trees quickly. These algorithms take polynomial time, ranging from O (n 3 ) to O (n 4 ).
Reference: [14] <author> B.M. Waxman. </author> <title> Routing of multipoint connections. </title> <journal> IEEE J. on Selected Areas in Comm., </journal> <volume> 6(9) </volume> <pages> 1617-1622, </pages> <month> Dec </month> <year> 1988. </year>
Reference-contexts: The least cost tree is called a Steiner tree [5], and the problem of finding a Steiner tree is known to be NP-complete [7]. Several centralized algorithms that construct low-cost multicast routes <ref> [2, 6, 13, 14] </ref> are based on heuristics for approximate Steiner trees [10, 11, 12]. Empirical observations show that the heuristics produce near optimal trees quickly. These algorithms take polynomial time, ranging from O (n 3 ) to O (n 4 ).
References-found: 14

