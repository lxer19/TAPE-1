URL: http://www.cs.bu.edu/techreports/93-008-monadic-fo-vs-fp.ps.Z
Refering-URL: http://cs-www.bu.edu/techreports/Home.html
Root-URL: 
Title: Fixed Point vs. First-Order Logic on Finite Ordered Structures with Unary Relations  
Author: A. J. Kfoury M. Wymann-Boni 
Date: August 11, 1993  
Abstract: We prove that first order logic is strictly weaker than fixed point logic over every infinite classes of finite ordered structures with unary relations: Over these classes there is always an inductive unary relation which cannot be defined by a first-order formula, even when every inductive sentence (i.e., closed formula) can be expressed in first-order over this particular class. Our proof first establishes a property valid for every unary relation definable by first-order logic over these classes which is peculiar to classes of ordered structures with unary relations. In a second step we show that this property itself can be expressed in fixed point logic and can be used to construct a non-elementary unary relation.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. V. Aho and J. D. Ullman, </author> <title> Universality of data retrieval languages, </title> <booktitle> Proc. 6th ACM Symp. on Principles of Programming Languages, </booktitle> <year> 1979, </year> <pages> pp. 110-117. </pages>
Reference-contexts: Yet, on finite structures, first-order logic is not very expressive in many cases. For this reason, one has started to add constructs intended to reflect more closely the computable queries on a database. (See Aho and Ullman <ref> [1] </ref>, Chandra and Harel [2], Immerman [9], Ioannides [11], Kanellakis and Abiteboul [12], Naughton [16], Vardi [17] and many more.) Another aspect of finite models is that various logics over finite (typically ordered) structures can describe complexity classes; the first result of this nature was Fagin's "NP = 1 1 "
Reference: [2] <author> A. Chandra and D. Harel, </author> <title> Structure and complexity of relational queries, </title> <journal> Journal of Computer and System Sciences 25 (1982), </journal> <pages> 99-128. </pages>
Reference-contexts: Yet, on finite structures, first-order logic is not very expressive in many cases. For this reason, one has started to add constructs intended to reflect more closely the computable queries on a database. (See Aho and Ullman [1], Chandra and Harel <ref> [2] </ref>, Immerman [9], Ioannides [11], Kanellakis and Abiteboul [12], Naughton [16], Vardi [17] and many more.) Another aspect of finite models is that various logics over finite (typically ordered) structures can describe complexity classes; the first result of this nature was Fagin's "NP = 1 1 " in his celebrated paper
Reference: [3] <author> C. C. Chang and Keisler H. J., </author> <title> Model theory, </title> <booktitle> 3rd ed., Studies in Logic, </booktitle> <volume> vol. 73, </volume> <publisher> North-Holland, </publisher> <year> 1990. </year>
Reference-contexts: Our standard reference is "Model Theory" by Chang and Keisler <ref> [3] </ref>. We follow their notations as closely as possible.
Reference: [4] <author> A. Ehrenfeucht, </author> <title> An application of games to the completeness problem for formalized theories, </title> <booktitle> Fundament Mathematic 49 (1961), </booktitle> <pages> 129-141. 14 </pages>
Reference-contexts: We use only the simplest of all the variants, the so-called Ehrenfeucht-Frasse games (see Ehrenfeucht <ref> [4] </ref>, or Frasse [6]). <p> It is not difficult to see that the previously defined relation k describes exactly the existence of a winning strategy for the duplicator for the k-move game. We state some basic properties of the relation k that we use later. (For details and proofs, see Ehrenfeucht <ref> [4] </ref>.) Theorem 3.2 (Ehrenfeucht) 1. For all k, the relation k is an equivalence relation. 2.
Reference: [5] <author> R. Fagin, </author> <title> Monadic generalized spectra, </title> <journal> Zeitschrift fur mathematische Logik und Grundlagen der Mathematik 21 (1975), </journal> <pages> 89-96. </pages>
Reference-contexts: Immerman [9], Ioannides [11], Kanellakis and Abiteboul [12], Naughton [16], Vardi [17] and many more.) Another aspect of finite models is that various logics over finite (typically ordered) structures can describe complexity classes; the first result of this nature was Fagin's "NP = 1 1 " in his celebrated paper <ref> [5] </ref>. Since then it has become possible to find an appropriate logic for every imaginable complexity class. (See Gurevich [7], Immerman [9, 10].) Most often, the question of whether one logic is more expressive than another is studied by considering only sentences (i.e., closed formulae) of the respective logics.
Reference: [6] <author> R. Frasse, </author> <title> Sur quelques classifications des systemes de relations, </title> <type> Publ. </type> <institution> Sci. Univ. </institution> <note> Alger Ser. A 1 (1954), 35-185. </note>
Reference-contexts: We use only the simplest of all the variants, the so-called Ehrenfeucht-Frasse games (see Ehrenfeucht [4], or Frasse <ref> [6] </ref>).
Reference: [7] <author> Y. Gurevich, </author> <title> Towards a logic tailored for computational complexity, Computation and Proof Theory, </title> <booktitle> LNCS, </booktitle> <volume> vol. 1104, </volume> <publisher> Springer, </publisher> <year> 1984, </year> <pages> pp. 175-216. </pages>
Reference-contexts: Since then it has become possible to find an appropriate logic for every imaginable complexity class. (See Gurevich <ref> [7] </ref>, Immerman [9, 10].) Most often, the question of whether one logic is more expressive than another is studied by considering only sentences (i.e., closed formulae) of the respective logics.
Reference: [8] <author> Y. Gurevich and S. Shelah, </author> <title> Fixed-point extensions of first-order logic, </title> <booktitle> Annals of Pure and Applied Logic 32 (1986), </booktitle> <pages> 265-280. </pages>
Reference-contexts: Fixed point logic is an extension of first-order logic designed to reflect the power of induction. There are several formalizations which are not in general equivalent, but the differences are of no concern to us. This is also justified by the results of Gurevich and Shelah <ref> [8] </ref> stating that many different definitions of fixed point logic coincide for finite structures. We use "fixed point logic" and "induction" as synonyms.
Reference: [9] <author> N. Immerman, </author> <title> Relational queries computable in polynomial time, Information and Control 68 (1986), 76-98. [10] , Languages that capture complexity classes, </title> <journal> SIAM J. Comput. </journal> <volume> 16 (1987), </volume> <pages> 760-778. </pages>
Reference-contexts: Yet, on finite structures, first-order logic is not very expressive in many cases. For this reason, one has started to add constructs intended to reflect more closely the computable queries on a database. (See Aho and Ullman [1], Chandra and Harel [2], Immerman <ref> [9] </ref>, Ioannides [11], Kanellakis and Abiteboul [12], Naughton [16], Vardi [17] and many more.) Another aspect of finite models is that various logics over finite (typically ordered) structures can describe complexity classes; the first result of this nature was Fagin's "NP = 1 1 " in his celebrated paper [5]. <p> Since then it has become possible to find an appropriate logic for every imaginable complexity class. (See Gurevich [7], Immerman <ref> [9, 10] </ref>.) Most often, the question of whether one logic is more expressive than another is studied by considering only sentences (i.e., closed formulae) of the respective logics. <p> These facts are proved by Moschovakis [15] and McColm [13] for closure under positive operations (for the one infinite structure and for a class of 4 finite structures respectively), and by Immerman <ref> [9] </ref> for negation. (Note, however, that for infinite models the closure under negation is not given in general. It is only true for quite pathological structures.) We will freely apply these facts whenever convenient. <p> computation using a form of codes, one has to introduce more variables, but this has to be a fixed number that cannot be adapted after the inductive property is defined. (This also corresponds to the fact that all inductive definitions on finite structures can be computed in PTIME, see Immerman <ref> [9] </ref>.) For details of this approach see McColm [14]. We prove a similar theorem under different conditions. Our method of proof is partly inspired by the parametrization idea of McColm.
Reference: [11] <author> Y. E. Ioannides, </author> <title> Bounded recursion in deductive databases, </title> <booktitle> Algorithmica 1 (1986), </booktitle> <pages> 86-104. </pages>
Reference-contexts: Yet, on finite structures, first-order logic is not very expressive in many cases. For this reason, one has started to add constructs intended to reflect more closely the computable queries on a database. (See Aho and Ullman [1], Chandra and Harel [2], Immerman [9], Ioannides <ref> [11] </ref>, Kanellakis and Abiteboul [12], Naughton [16], Vardi [17] and many more.) Another aspect of finite models is that various logics over finite (typically ordered) structures can describe complexity classes; the first result of this nature was Fagin's "NP = 1 1 " in his celebrated paper [5].
Reference: [12] <author> P. Kanellakis and S. Abiteboul, </author> <title> Deciding bounded recursion in database logic programs, </title> <journal> SIGAct News 20 (1989), </journal> <volume> no. </volume> <pages> 4. </pages>
Reference-contexts: Yet, on finite structures, first-order logic is not very expressive in many cases. For this reason, one has started to add constructs intended to reflect more closely the computable queries on a database. (See Aho and Ullman [1], Chandra and Harel [2], Immerman [9], Ioannides [11], Kanellakis and Abiteboul <ref> [12] </ref>, Naughton [16], Vardi [17] and many more.) Another aspect of finite models is that various logics over finite (typically ordered) structures can describe complexity classes; the first result of this nature was Fagin's "NP = 1 1 " in his celebrated paper [5].
Reference: [13] <author> G. L. McColm, </author> <title> Parametrization over inductive relations of abounded number of variables, Ann. of Pure and Applied Logic 48 (1990), 103-134. [14] , When is arithmetic possible?, Ann. </title> <booktitle> of Pure and Applied Logic 50 (1990), </booktitle> <pages> 29-51. </pages>
Reference-contexts: For considerations about fixed point logic, or equivalently, inductive relations, the standard is given by Moschovakis' book "Elementary Induction on Abstract Structures" [15], or for its application to classes of finite structures rather than a single infinite structure the two articles by McColm <ref> [13, 14] </ref>. However, the following should be sufficient for the scope of this article. Fixed point logic is an extension of first-order logic designed to reflect the power of induction. There are several formalizations which are not in general equivalent, but the differences are of no concern to us. <p> This is also justified by the results of Gurevich and Shelah [8] stating that many different definitions of fixed point logic coincide for finite structures. We use "fixed point logic" and "induction" as synonyms. We choose to follow here the definition of McColm <ref> [13] </ref> inspired by Moscho-vakis [15], using what they call positive elementary induction. 3 To start with, we need a system of positive elementary (i.e, first-order) formulae ' 0 (x 1 ; : : : ; x k 1 ; S 0 ; : : : ; S n ); : : <p> These facts are proved by Moschovakis [15] and McColm <ref> [13] </ref> for closure under positive operations (for the one infinite structure and for a class of 4 finite structures respectively), and by Immerman [9] for negation. (Note, however, that for infinite models the closure under negation is not given in general. <p> It is only true for quite pathological structures.) We will freely apply these facts whenever convenient. The expressiveness of fixed point logic on classes of finite structures was extensively investigated by McColm <ref> [13, 14] </ref>. It is there that he states the conjecture which was the motivation for our work.
Reference: [15] <author> Y. N. Moschovakis, </author> <title> Elementary induction on abstract structures, </title> <publisher> North Holland, </publisher> <year> 1974. </year>
Reference-contexts: Our standard reference is "Model Theory" by Chang and Keisler [3]. We follow their notations as closely as possible. For considerations about fixed point logic, or equivalently, inductive relations, the standard is given by Moschovakis' book "Elementary Induction on Abstract Structures" <ref> [15] </ref>, or for its application to classes of finite structures rather than a single infinite structure the two articles by McColm [13, 14]. However, the following should be sufficient for the scope of this article. <p> This is also justified by the results of Gurevich and Shelah [8] stating that many different definitions of fixed point logic coincide for finite structures. We use "fixed point logic" and "induction" as synonyms. We choose to follow here the definition of McColm [13] inspired by Moscho-vakis <ref> [15] </ref>, using what they call positive elementary induction. 3 To start with, we need a system of positive elementary (i.e, first-order) formulae ' 0 (x 1 ; : : : ; x k 1 ; S 0 ; : : : ; S n ); : : : ; ' n <p> These facts are proved by Moschovakis <ref> [15] </ref> and McColm [13] for closure under positive operations (for the one infinite structure and for a class of 4 finite structures respectively), and by Immerman [9] for negation. (Note, however, that for infinite models the closure under negation is not given in general.
Reference: [16] <author> J. F. Naughton, </author> <title> Data independent recursion in deductive databases, </title> <journal> Journal of Computer and System Sciences 38 (1989), </journal> <pages> 259-289. </pages>
Reference-contexts: For this reason, one has started to add constructs intended to reflect more closely the computable queries on a database. (See Aho and Ullman [1], Chandra and Harel [2], Immerman [9], Ioannides [11], Kanellakis and Abiteboul [12], Naughton <ref> [16] </ref>, Vardi [17] and many more.) Another aspect of finite models is that various logics over finite (typically ordered) structures can describe complexity classes; the first result of this nature was Fagin's "NP = 1 1 " in his celebrated paper [5].
Reference: [17] <author> M. Y. Vardi, </author> <title> The complexity of relational query languages, </title> <booktitle> Proc. 14th ACM Symp. on Theory of Computing, </booktitle> <year> 1982, </year> <pages> pp. 137-146. 15 </pages>
Reference-contexts: For this reason, one has started to add constructs intended to reflect more closely the computable queries on a database. (See Aho and Ullman [1], Chandra and Harel [2], Immerman [9], Ioannides [11], Kanellakis and Abiteboul [12], Naughton [16], Vardi <ref> [17] </ref> and many more.) Another aspect of finite models is that various logics over finite (typically ordered) structures can describe complexity classes; the first result of this nature was Fagin's "NP = 1 1 " in his celebrated paper [5].
References-found: 15

