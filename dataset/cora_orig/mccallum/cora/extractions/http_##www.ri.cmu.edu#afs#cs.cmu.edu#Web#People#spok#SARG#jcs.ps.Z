URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/Web/People/spok/SARG/jcs.ps.Z
Refering-URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/Web/People/spok/SARG/sep20-talk.html
Root-URL: 
Email: danzig@usc.edu 213-740-4780  
Title: Distributed Indexing of Autonomous Internet Services  
Author: Peter B. Danzig and Shih-Hao Li and Katia Obraczka 
Address: Los Angeles, California 90089-0781  
Affiliation: Computer Science Department University of Southern California  
Abstract: This paper describes the architecture and the design decisions behind a resource discovery tool that we proto-typed to knit together the Internet's resource discovery fabric. We call the architecture distributed indexing or Indie for short. Indie consists of a directory of services and an unlimited number of broker databases that index their own data, data stored in other brokers, and data available from other resource discovery services. The indexing mechanism doubles as a lazily consistent data replication mechanism that can replicate the directory of services or any other broker at will. An Indie broker automatically clusters references to related objects stored in other autonomous discovery and database services. Since Indie brokers cluster related information skimmed from thousands of scattered services, efficient exhaustive search is possible. This centralization led to the success of the archie file location service. In a way, Indie is a generalized archie that locates autonomously maintained data stored in different discovery services. We believe that other discovery tools can benefit from the architectural principles that Indie illustrates and the ability to cluster related information that Indie provides. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Alberti, F. Anklesaria, P. Lindner, M. McCahill, and D. Torrey. </author> <title> The Internet Gopher protocol: a distributed document search and retrieval protocol. On-line documentation, </title> <month> Spring </month> <year> 1992. </year>
Reference-contexts: 1 Introduction Roughly speaking, resource discovery tools either organize or search information distributed across many repositories. Tools like the Internet gopher <ref> [1] </ref>, the World-To appear in Computing Systems: Volume 5, Number 4, 1992. (ALso USC TR-92-519) Wide-Web [3], and Prospero [11] organize information into a distributed hypertext. With these tools, people create links between relevant information which may reside on different servers. <p> In response to a query, a WAIS server returns a list of relevant document descriptors which the client displays. WAIS clients support relevance feedback to help users refine their queries. The client retrieves documents from the appropriate servers and displays them for the user. 3.3 Gopher The Internet gopher <ref> [1] </ref> both organizes and searches distributed information. Gopher organizes information hierarchically 1 , where intermediate nodes are directories or indices, and leaf nodes are documents. The root of Gopher's hierarchy is stored on host rawBits.micro.-umn.edu at the University of Minnesota.
Reference: [2] <author> Jon Louis Bentley and Derick Wood. </author> <title> An opti mal worst case algorithm for reporting intersections of rectangles. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 29(7) </volume> <pages> 571-577, </pages> <month> July, </month> <year> 1980. </year>
Reference-contexts: For example, the query for QA76.64 returns the ordered list G3, G2, G1. Brokers that do not list their ranges are ranked last. Indie employs a data structure called a segment tree <ref> [2] </ref> to implement this index.
Reference: [3] <author> T. Berners-Lee, R. Cailliau, J-F. Groff, and B. Pollermann. </author> <title> World-Wide Web: An information infrastructure for high-energy physics. </title> <booktitle> Proceedings of the Workshop on Software Engineering, Artificial Intelligence and Expert Systems for High Energy and Nuclear Physics, </booktitle> <month> January </month> <year> 1992. </year> <title> 2 Editor: would you like more references. We tried to minimize the number to constrain the length of the paper. We could easily cite quite a few more. </title> <type> 11 </type>
Reference-contexts: 1 Introduction Roughly speaking, resource discovery tools either organize or search information distributed across many repositories. Tools like the Internet gopher [1], the World-To appear in Computing Systems: Volume 5, Number 4, 1992. (ALso USC TR-92-519) Wide-Web <ref> [3] </ref>, and Prospero [11] organize information into a distributed hypertext. With these tools, people create links between relevant information which may reside on different servers. Tools like archie [7], Nomencla-tor [14], and netfind [15] build indices from information scavenged from various repositories and sources.
Reference: [4] <author> T. Berners-Lee, R. Cailliau, J-F. Groff, and B. Pollermann. </author> <title> World-Wide Web: The information universe. </title> <journal> Electronic Networking: Research, Applications and Policy, </journal> <volume> 1(2), </volume> <month> Spring </month> <year> 1992. </year>
Reference-contexts: They return to the client handles to documents that match a Boolean search pattern. Gopher clients can retrieve objects from archie and WAIS. 1 Actually, the gopher information space is a directed graph, since it allows cycles. 3.4 World-Wide Web The World-Wide Web, or WWW <ref> [4] </ref>, organizes data into a distributed hypertext, where nodes are full-text objects, directory objects called cover pages, and indices. WWW also supports full text search over documents stored at a particular WWW server. The WWW client provides users with a hypertext browsing interface.
Reference: [5] <author> Peter B. Danzig, Jong Suk Ahn, John Noll, and Katia Obraczka. </author> <title> Distributed indexing: A technique for scalable, </title> <booktitle> distributed information retrieval systems. ACM SIGIR 91, </booktitle> <pages> pages 220-229, </pages> <month> March, </month> <year> 1991. </year>
Reference-contexts: This paper describes a discovery architecture that, similar to this second set of tools, automatically clusters pointers to related information obtained from other repositories and discovery services so that it can be efficiently searched. We call our prototype of this architecture distributed indexing or Indie for short <ref> [5] </ref>. 1.1 Indie Architecture Indie consists of a replicated directory of services and a collection of servers or Indie brokers that index information available from other brokers, repositories, and discovery services. Indie specializes in efficiently locating information with minimal need to organize it manually.
Reference: [6] <author> Mark A. Sheldon David K. Gifford, Pierre Jouvelot and James W. O'Toole Jr. </author> <title> Semantic file systems. </title> <booktitle> Proceedings of the 13th ACM Symposium on Operating Systems Principles, </booktitle> <pages> pages 16-25, </pages> <month> October </month> <year> 1991. </year>
Reference-contexts: Among its advantages, we should point out that netfind relies only on already available information and mechanisms. However, because of its probing nature, netfind generates considerable network and server load. The Semantic File System <ref> [6] </ref> integrates associative access into a traditional tree-structured file system. Associative access is achieved by providing file systems with an attribute extraction and query interface. Attribute extraction is performed by filters called transducers. Queries consist of boolean combinations of the desired attribute-value pairs.
Reference: [7] <author> Alan Emtage and Peter Deutsch. archie: </author> <title> An elec tronic directory service for the internet. </title> <booktitle> Proceedings of the Winter 1992 Usenix Conference, </booktitle> <month> Jan-uary </month> <year> 1992. </year>
Reference-contexts: Tools like the Internet gopher [1], the World-To appear in Computing Systems: Volume 5, Number 4, 1992. (ALso USC TR-92-519) Wide-Web [3], and Prospero [11] organize information into a distributed hypertext. With these tools, people create links between relevant information which may reside on different servers. Tools like archie <ref> [7] </ref>, Nomencla-tor [14], and netfind [15] build indices from information scavenged from various repositories and sources. This paper describes a discovery architecture that, similar to this second set of tools, automatically clusters pointers to related information obtained from other repositories and discovery services so that it can be efficiently searched. <p> Client programs can use this field, if present, to select a geographically close replica. 3 Contrast with Other Tools This section briefly overviews resource discovery tools currently available on the Internet, contrasts them with Indie, and discusses how Indie can cooperate with them. 3.1 Archie Archie servers <ref> [7] </ref> index names of files available from hundreds of FTP archive sites. Users can query an archie server for file names that match specified patterns, a complete list of the FTP archive sites, or a list of the files available from specific sites.
Reference: [8] <author> David K Gifford, Robert W. Baldwin, Stephen T. Berlin, and John M. Lucassen. </author> <title> An architecture for large scale information systems. </title> <booktitle> Proceedings of the 10th ACM Symposium on Operating Systems Principles, </booktitle> <volume> 19(5) </volume> <pages> 161-171, </pages> <month> December </month> <year> 1985. </year>
Reference-contexts: Similar to the way that network news reading programs and Gifford's news clipping service <ref> [8] </ref> subscribe to particular data sources, the manager of an Indie broker registers its interest with other applicable brokers and gateways. Indie further exploits its rules and timestamped based consistency algorithm to replicate data. The Internet community widely uses half a dozen resource discovery tools.
Reference: [9] <author> Brewster Khale and Art Medlar. </author> <title> An information system for corporate users: Wide area information servers. ConneXions The Interoperability Report, </title> <type> 5(11), </type> <month> November </month> <year> 1991. </year>
Reference-contexts: According to its developers, archie needs a more efficient consistency maintenance protocol so that topics can be distributed across different servers. This will make archie more scalable and resilient. Archie's developers also plan to build more elaborate indices and enable attribute-based searches. 3.2 The Wide Area Information Server WAIS <ref> [9] </ref> is a full text information retrieval architecture whose clients and servers communicate through an extension of the Z39-50 standard [10]. One server is distinguished as the directory of services, but it is un-replicated and manually maintained.
Reference: [10] <author> Clifford A. Lynch. </author> <title> The Z39-50 information re trieval protocol: An overview and status report. </title> <journal> ACM Computer Communication Review, </journal> <volume> 21(1) </volume> <pages> 58-70, </pages> <year> 1991. </year>
Reference-contexts: This will make archie more scalable and resilient. Archie's developers also plan to build more elaborate indices and enable attribute-based searches. 3.2 The Wide Area Information Server WAIS [9] is a full text information retrieval architecture whose clients and servers communicate through an extension of the Z39-50 standard <ref> [10] </ref>. One server is distinguished as the directory of services, but it is un-replicated and manually maintained. WAIS clients can query the WAIS directory for relevant servers, and query a subset of these for pertinent documents.
Reference: [11] <author> B. Clifford Neuman. </author> <title> The virtual system model: A scalable approach to organizing large systems: A thesis proposal. </title> <type> Technical Report TR-90-05-01, </type> <institution> University of Washington, </institution> <address> Seattle, </address> <month> May </month> <year> 1990. </year>
Reference-contexts: 1 Introduction Roughly speaking, resource discovery tools either organize or search information distributed across many repositories. Tools like the Internet gopher [1], the World-To appear in Computing Systems: Volume 5, Number 4, 1992. (ALso USC TR-92-519) Wide-Web [3], and Prospero <ref> [11] </ref> organize information into a distributed hypertext. With these tools, people create links between relevant information which may reside on different servers. Tools like archie [7], Nomencla-tor [14], and netfind [15] build indices from information scavenged from various repositories and sources.
Reference: [12] <author> B. Clifford Neuman. Prospero: </author> <title> A tool for organiz ing internet resources. </title> <journal> Electronic Networking: Research, Applications and Policy, </journal> <volume> 2(1), </volume> <month> Spring </month> <year> 1992. </year>
Reference-contexts: HTTP allows document retrieval and full-text searches. HTTP objects are identified by their protocol type, the corresponding server's name, and the path name of the file where the directory or full-text object is stored. 3.5 Prospero The Prospero File System <ref> [12] </ref> lets users build customized views, or virtual systems, of directories available throughout the Internet. Views are essentially directories composed from various sources including a user's own views and imported views from other users. A user organizes his information space hierarchically, just like traditional file systems.
Reference: [13] <author> John Noll and Walt Scacchi. </author> <title> Integrating diverse information repositories: A distributed hypertext approach. </title> <journal> IEEE Computer, </journal> <volume> 24(12) </volume> <pages> 38-45, </pages> <month> Decem-ber </month> <year> 1991. </year>
Reference-contexts: We built Indie atop a real memory database and set of communication primitives called DHT that were designed for an ongoing distributed hypertext project here at USC <ref> [13] </ref>. We chose DHT because its creator agreed to support it rather than for reasons of design or functionality. However, because Indie's database and interprocess communication calls go through less than twenty DHT primitives, we can easily incorporate a different storage manager and communication library in future versions of Indie.
Reference: [14] <author> Joan J. Ordille and Barton P. Miller. </author> <title> Nomenclator descriptive query optimization for large X.500 environments. </title> <booktitle> ACM SIGCOMM 91 Conference, </booktitle> <pages> pages 185-196, </pages> <month> September </month> <year> 1991. </year>
Reference-contexts: With these tools, people create links between relevant information which may reside on different servers. Tools like archie [7], Nomencla-tor <ref> [14] </ref>, and netfind [15] build indices from information scavenged from various repositories and sources. This paper describes a discovery architecture that, similar to this second set of tools, automatically clusters pointers to related information obtained from other repositories and discovery services so that it can be efficiently searched. <p> Queries consist of boolean combinations of the desired attribute-value pairs. Transducers and queries produce customized views of the file system hierarchy called virtual directories, which help locate and organize information. A semantic file system research prototype has been implemented on top of Sun NFS. Nomenclator <ref> [14] </ref> implements attribute-based or yel-low-page naming on top of hierarchical, white-page naming systems. A Nomenclator access function is, in essence, a server that periodically traverses other access functions and appropriate parts of the white-page name space, and constructs an index of the objects encountered that satisfy certain properties.
Reference: [15] <author> M. F. Schwartz, D. R. Hardy, W. K. Heinzman, and G. Hirschowitz. </author> <title> Supporting resource discovery among public internet archives using a spectrum of information quality. </title> <type> Technical Report Technical Report CU-CS-487-90, </type> <institution> Department of Computer Science, University of Colorado, Boulder, Colorado, </institution> <month> September </month> <year> 1990. </year>
Reference-contexts: With these tools, people create links between relevant information which may reside on different servers. Tools like archie [7], Nomencla-tor [14], and netfind <ref> [15] </ref> build indices from information scavenged from various repositories and sources. This paper describes a discovery architecture that, similar to this second set of tools, automatically clusters pointers to related information obtained from other repositories and discovery services so that it can be efficiently searched.
Reference: [16] <author> Michael F. Schwartz. </author> <title> Experience with a semanti cally cognizant internet white pages directory tool. </title> <journal> Journal of Internetworking Research and Experience, </journal> <volume> 1(2), </volume> <month> December </month> <year> 1990. </year>
Reference-contexts: The administrator creates a link to the new virtual system in the master view of virtual systems, where other users can see and navigate through it. 3.6 Other Discovery Tools Besides the services described above, other prototyped discovery tools include netfind, Semantic File Systems, and Nomenclator. 2 Netfind <ref> [16] </ref> is a white-pages directory tool, which, given an Internet user's name and organization, tries to 2 We would like suggestions from the editor on whether we should delete or shorten this section. 7 locate available information about the user.

References-found: 16

