URL: http://www.cs.wisc.edu/~watrous/qca.ps
Refering-URL: http://www.cs.wisc.edu/~watrous/publications.html
Root-URL: 
Title: On One-Dimensional Quantum Cellular Automata  
Author: John Watrous 
Address: Madison, Wisconsin 53706  
Affiliation: Computer Sciences Department University of Wisconsin  
Abstract: Since Richard Feynman introduced the notion of quantum computation in 1982, various models of "quantum computers" have been proposed. These models include quantum Turing machines and quantum circuits. In this paper we define another quantum computational model, one-dimensional quantum cellular automata, and demonstrate that any quantum Turing machine can be efficiently simulated by a one-dimensional quantum cellular automaton with constant slowdown. This can be accomplished by consideration of a restricted class of one-dimensional quantum cellular automata called one-dimensional partitioned quantum cellular automata. We also show that any one-dimensional partitioned quantum cellular automaton can be simulated by a quantum Turing machine with linear slowdown, but the problem of efficiently simulating an arbitrary one-dimensional quantum cellular automaton with a quantum Turing machine is left open. From this discussion, some interesting facts concerning these models are easily deduced. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. </author> <title> Feynman, Simulating Physics with Computers, </title> <journal> International Journal of Theoretical Physics, </journal> <volume> Vol. 21, </volume> <pages> nos. </pages> <month> 6/7 </month> <year> (1982) </year> <month> 467-488. </month>
Reference-contexts: 1 Introduction The idea that certain principles of quantum mechanics might be powerful computational tools has led to the study of various theoretical models of quantum computers. The archetypal quantum computer, as introduced by Richard Feynman in <ref> [1] </ref>, is a computer which can simulate quantum physical processes, and which operates in accordance with quantum physical laws.
Reference: [2] <author> D. Deutsch, </author> <title> Quantum Theory, the Church-Turing Principle and the Universal Quantum Computer, </title> <journal> Proc. R. Soc. Lond., </journal> <volume> Vol. </volume> <month> A400 </month> <year> (1985) </year> <month> 97-117. </month>
Reference-contexts: David Deutsch later formalized the notion of quantum computation by defining what has become known as the fl Supported in part by NSF Grant CCR-9208639. quantum Turing machine (QTM) in <ref> [2] </ref>, and in [3] Ethan Bernstein and Umesh Vazirani, expanding on Deutsch's work, showed that there exists a universal QTM which can simulate any QTM to any required accuracy with at most polynomial slowdown.
Reference: [3] <author> E. Bernstein and U. Vazirani, </author> <title> Quantum Complexity Theory, </title> <booktitle> Proc. 25th Ann. ACM Symp. on Theory of Computing (1993) 11-20. </booktitle>
Reference-contexts: David Deutsch later formalized the notion of quantum computation by defining what has become known as the fl Supported in part by NSF Grant CCR-9208639. quantum Turing machine (QTM) in [2], and in <ref> [3] </ref> Ethan Bernstein and Umesh Vazirani, expanding on Deutsch's work, showed that there exists a universal QTM which can simulate any QTM to any required accuracy with at most polynomial slowdown. <p> We therefore have that M 2 1d-PQCA. The converse is straightforward. Corollary 3.1 For any M 2 1d-PQCA, the associ ated time-evolution operator E is unitary. 4 Quantum Turing Machines In this section we will review the quantum Turing machine model as defined in <ref> [3] </ref>.
Reference: [4] <author> A. Yao, </author> <title> Quantum Circuit Complexity, </title> <booktitle> Proc. 34th Ann. Symp. Foundations of Computer Science (1993) 352-361. </booktitle>
Reference-contexts: Another quantum computational model, the quantum circuit, was introduced by Andrew Yao in <ref> [4] </ref> and shown to be equivalent to the quantum Turing machine. It is not known whether or not these models are more powerful than their classical analogues.
Reference: [5] <author> P. Shor, </author> <title> Algorithms for Quantum Computation: Discrete Logarithms and Factoring, </title> <booktitle> Proc. 35th Ann. Symp. Foundations of Computer Science (1994) 124-134. </booktitle>
Reference-contexts: It is not known whether or not these models are more powerful than their classical analogues. However, there is evidence to suggest that this is the case; most notably Peter Shor has shown in <ref> [5] </ref> that the integer factoring and discrete log problems can be solved in polynomial time using a QTM. (These problems are believed not to be solvable in polynomial time using a probabilistic Turing machine.) It is natural to extend the idea of quantum computation to other computational models; in this paper
Reference: [6] <author> K. Morita and M. Harao, </author> <title> Computation Universality of One-Dimensional Reversible (Injective) Cellular Automata, </title> <journal> Transactions of the IEICE, </journal> <volume> Vol. E 72 (1989) 758-762. </volume>
Reference-contexts: This is the quantum analogue of the partitioned cellular automaton discussed by Kenichi Morita and Masateru Harao in <ref> [6] </ref>. The advantage of the 1d-PQCA class is that it is a simple matter to determine whether or not a given 1d-PQCA is well-formed, while this is not a trivial matter for an arbitrary 1d-QCA. It is not clear that an arbitrary 1d-QCA can be efficiently simulated by a QTM. <p> For this reason we now define a restricted class of 1d-QCA called partitioned quantum cellular automata for which this can easily be determined. This is a generalization of (deterministic) partitioned cellular automata discussed by Morita and Harao in <ref> [6] </ref>.
Reference: [7] <author> R. Cooke, </author> <title> Infinite Matrices and Sequence Spaces, </title> <publisher> Macmillan and Co., </publisher> <address> London, </address> <year> 1950. </year>
Reference-contexts: Thus E is a bounded linear opera tor, and hence we have that hEx; yi = b2C a2C is a bounded bilinear form. This allows us (see <ref> [7] </ref>, for example) to change the order of summation in (11) to get X X x (a)u b (a)y (b) X x (a) b2C = hx; F yi for any x; y 2 ` 2 (C), so that E fl = F .
Reference: [8] <author> N. Young, </author> <title> An Introduction to Hilbert Space, </title> <publisher> Cam-bridge University Press, </publisher> <address> Cambridge, </address> <year> 1988. </year>
References-found: 8

