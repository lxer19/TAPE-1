URL: http://www.cs.princeton.edu/~erez/pr.ps
Refering-URL: http://www.cs.princeton.edu/~erez/publications.html
Root-URL: http://www.cs.princeton.edu
Email: e-mail: erez@dimacs.rutgers.edu.  e-mail: ronny@cs.technion.ac.il.  
Title: Is Code Equivalence Easy to Decide?  
Author: Erez Petrank Ron M. Roth 
Keyword: Code equivalence, Graph isomorphism, Interactive proofs, Polynomial hierarchy.  
Address: P.O.Box 1179, Piscataway, NJ 08855.  32000, Israel.  Mill Road, Palo Alto, CA 94304, USA.  
Affiliation: Center,  Computer Science Department, Technion, Haifa  
Note: DIMACS  Currently on sabbatical leave at Hewlett-Packard Laboratories, 1501 Page  
Abstract: We study the computational difficulty of deciding whether two matrices generate equivalent linear codes, i.e., codes that consist of the same codewords up to a fixed permutation on the codeword coordinates. We call this problem Code Equivalence. Using techniques from the area of interactive proofs, we show on the one hand, that under the assumption that the polynomial-time hierarchy does not collapse, Code Equivalence is not NP-complete. On the other hand, we present a polynomial-time reduction from the Graph Isomorphism problem to Code Equivalence. Thus, if one could find an efficient (i.e., polynomial-time) algorithm for Code Equivalence, then one could settle the long-standing problem of determining whether there is an efficient algorithm for solving Graph Isomorphism. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> L. Babai, S. Moran, </author> <title> Arthur-Merlin games: A randomized proof system, and a hierarchy of complexity classes, </title> <journal> JCSS, </journal> <volume> 36 (1988), </volume> <pages> 254-276. 6 </pages>
Reference-contexts: Having found a constant-round interactive proof for the Code non-Equivalence problem, we then invoke a result of Goldwasser and Sipser [5], stating that if a problem has a constant-round interactive proof, then it also has a constant-round Arthur-Merlin protocol (Arthur-Merlin protocols <ref> [1] </ref> are a special case of interactive proofs which we do not present here).
Reference: [2] <author> R. Boppana, J. H -astad, S. Zachos, </author> <title> Does co-NP have short interactive proofs, </title> <journal> Information Proc. Letters, </journal> <volume> 25 (1987), </volume> <pages> 27-132. </pages>
Reference-contexts: The proof of this assertion relies on techniques developed in the field of interactive proofs, which we summarize in Section 2. In Section 3, we invoke results of Goldwasser, Micali, and Rackoff [4], Goldreich, Micali, and Wigderson [3], Goldwasser and Sipser [5], and Boppana, H-astad, and Zachos <ref> [2] </ref>, to show that if Code Equivalence is NP-Complete, then the polynomial hierarchy collapses. Yet, we do state also a negative result, namely, that Code Equivalence is also unlikely to be too easy. We do this by relating Code Equivalence to the Graph Isomorphism problem. <p> At this point, we apply a result of Boppana, H-astad, and Zachos <ref> [2] </ref>, stating that if 3 the complement of a problem has an Arthur-Merlin protocol with a constant number of rounds, and if is NP-complete, then the polynomial-time hierarchy collapses.
Reference: [3] <author> O. Goldreich, S. Micali, A. Wigderson, </author> <title> Proofs that yield nothing but their validity and a methodology of cryptographic protocol design, </title> <journal> J. of ACM, </journal> <volume> 38 (1991), </volume> <pages> 691-729. </pages> <note> See also Proc. 27th IEEE Symp. Found. of Comp. Science (1986). </note>
Reference-contexts: The proof of this assertion relies on techniques developed in the field of interactive proofs, which we summarize in Section 2. In Section 3, we invoke results of Goldwasser, Micali, and Rackoff [4], Goldreich, Micali, and Wigderson <ref> [3] </ref>, Goldwasser and Sipser [5], and Boppana, H-astad, and Zachos [2], to show that if Code Equivalence is NP-Complete, then the polynomial hierarchy collapses. Yet, we do state also a negative result, namely, that Code Equivalence is also unlikely to be too easy. <p> To do this, we use techniques developed by Goldreich, Micali, and Wigderson in <ref> [3] </ref>, who, in turn, used ideas developed by Goldwasser, Micali, and Rackoff in [4]. <p> Hence, it remains to show the constant-round interactive proof for the Code nonEquivalence problem. We present next a protocol for an interactive proof for Code non-Equivalence that follows along the ideas of the protocols for Quadratic non-Residuosity in [4] and for Graph non-Isomorphism in <ref> [3] </ref>. The infinitely-powerful prover and the polynomial-time verifier have on their input tapes two k fi n matrices, G 1 and G 2 , over a given finite field F . The prover would like to convince the verifier that G 1 6~ G 2 .
Reference: [4] <author> S. Goldwasser, S. Micali, C. Rackoff, </author> <title> The knowledge complexity of interactive proofs, </title> <journal> SIAM J. Comput., </journal> <volume> 18 (1989), </volume> <pages> 186-208. </pages> <note> See also Proc. 17th Annual ACM Symp. on the Theory of Computing (1985). </note>
Reference-contexts: On the positive side, we first show that the Code Equivalence problem is unlikely to be NP-complete. The proof of this assertion relies on techniques developed in the field of interactive proofs, which we summarize in Section 2. In Section 3, we invoke results of Goldwasser, Micali, and Rackoff <ref> [4] </ref>, Goldreich, Micali, and Wigderson [3], Goldwasser and Sipser [5], and Boppana, H-astad, and Zachos [2], to show that if Code Equivalence is NP-Complete, then the polynomial hierarchy collapses. Yet, we do state also a negative result, namely, that Code Equivalence is also unlikely to be too easy. <p> To do this, we use techniques developed by Goldreich, Micali, and Wigderson in [3], who, in turn, used ideas developed by Goldwasser, Micali, and Rackoff in <ref> [4] </ref>. <p> Hence, it remains to show the constant-round interactive proof for the Code nonEquivalence problem. We present next a protocol for an interactive proof for Code non-Equivalence that follows along the ideas of the protocols for Quadratic non-Residuosity in <ref> [4] </ref> and for Graph non-Isomorphism in [3]. The infinitely-powerful prover and the polynomial-time verifier have on their input tapes two k fi n matrices, G 1 and G 2 , over a given finite field F .
Reference: [5] <author> S. Goldwasser, M. Sipser, </author> <title> Private coins vs. public coins in interactive proof systems, </title> <booktitle> Advances in Computing Research, </booktitle> <editor> S. Micali (Ed.), </editor> <month> 5 </month> <year> (1989), </year> <pages> 73-90. </pages>
Reference-contexts: The proof of this assertion relies on techniques developed in the field of interactive proofs, which we summarize in Section 2. In Section 3, we invoke results of Goldwasser, Micali, and Rackoff [4], Goldreich, Micali, and Wigderson [3], Goldwasser and Sipser <ref> [5] </ref>, and Boppana, H-astad, and Zachos [2], to show that if Code Equivalence is NP-Complete, then the polynomial hierarchy collapses. Yet, we do state also a negative result, namely, that Code Equivalence is also unlikely to be too easy. <p> To do this, we use techniques developed by Goldreich, Micali, and Wigderson in [3], who, in turn, used ideas developed by Goldwasser, Micali, and Rackoff in [4]. Having found a constant-round interactive proof for the Code non-Equivalence problem, we then invoke a result of Goldwasser and Sipser <ref> [5] </ref>, stating that if a problem has a constant-round interactive proof, then it also has a constant-round Arthur-Merlin protocol (Arthur-Merlin protocols [1] are a special case of interactive proofs which we do not present here).
Reference: [6] <author> T. Kasami, S. Lin, </author> <title> W.W. Peterson, New generalizations of the Reed-Muller codes, Part I: Primitive codes, </title> <journal> IEEE Trans. Inform. Theory, </journal> <volume> 14 (1968), </volume> <pages> 189-199. </pages>
Reference-contexts: This was pointed out explicitly by Sidelnikov and Shestakov in [13]. For related work, see also the references cited in [10, p. 317]. The significance of the Code Equivalence problem can also be exhibited through the results of Kasami, Lin, and Peterson <ref> [6] </ref>, and Kolesnik and Mironchikov [7], who showed that Reed Muller codes are equivalent to subcodes of extended BCH codes.
Reference: [7] <author> V.D. Kolesnik, E.T. Mironchikov, </author> <title> Cyclic Reed-Muller codes and their decoding, Problems Infor. </title> <journal> Trans., </journal> <volume> 4 (1968), </volume> <pages> 15-19. </pages>
Reference-contexts: This was pointed out explicitly by Sidelnikov and Shestakov in [13]. For related work, see also the references cited in [10, p. 317]. The significance of the Code Equivalence problem can also be exhibited through the results of Kasami, Lin, and Peterson [6], and Kolesnik and Mironchikov <ref> [7] </ref>, who showed that Reed Muller codes are equivalent to subcodes of extended BCH codes. Thus, it should be interesting to design an efficient algorithm that decides whether two codes are indeed equivalent, and thus, infer from the properties that arise from one code representation to the other.
Reference: [8] <author> F.J. MacWilliams, N.J.A Sloane, </author> <title> The Theory of Error-Correcting Codes, </title> <publisher> North Holland, </publisher> <address> Amsterdam, </address> <year> 1977. </year>
Reference-contexts: an alternant code over GF (q) is defined by a parity-check matrix of the form [ y j ff i j ] i=0;j=0 , where the ff j 's are distinct elements in GF (q m ) and the y j 's are nonzero elements in GF (q m ) <ref> [8, Ch. 12] </ref>. Goppa codes are special cases of alternant codes where certain restrictions are imposed on the values y j 's, and generalized Reed-Solomon codes are special cases of alternant codes where m = 1.
Reference: [9] <author> R.J. </author> <title> McEliece, A public-key cryptosystem based on algebraic coding theory, </title> <type> DSN Progress Report 42-44, JPL, </type> <institution> Caltech, Pasadena, </institution> <address> CA (Jan-Feb 1978), </address> <pages> 114-116. </pages>
Reference-contexts: The purpose of this note is to study the computational difficulty of the Code Equivalence problem. As one application of a related problem, we mention the public-key cryptosystems due to McEliece <ref> [9] </ref> and Niederreiter [11].
Reference: [10] <editor> A.J. Menezes, P.C. van Oorschot, S.A. Vanstone, </editor> <booktitle> Handbook of Applied Cryptography, </booktitle> <publisher> CRC Press, </publisher> <address> Boca Raton, Florida, </address> <year> 1997. </year>
Reference-contexts: This was pointed out explicitly by Sidelnikov and Shestakov in [13]. For related work, see also the references cited in <ref> [10, p. 317] </ref>. The significance of the Code Equivalence problem can also be exhibited through the results of Kasami, Lin, and Peterson [6], and Kolesnik and Mironchikov [7], who showed that Reed Muller codes are equivalent to subcodes of extended BCH codes.
Reference: [11] <author> H. Niederreiter, </author> <title> Knapsack-type cryptosystems and algebraic coding theory, </title> <journal> Prob. Contr. Inform. Theory, </journal> <volume> 15 (1986), </volume> <pages> 157-166. </pages>
Reference-contexts: The purpose of this note is to study the computational difficulty of the Code Equivalence problem. As one application of a related problem, we mention the public-key cryptosystems due to McEliece [9] and Niederreiter <ref> [11] </ref>.
Reference: [12] <author> R.M. Roth, G. Seroussi, </author> <title> On generator matrices of MDS codes, </title> <journal> IEEE Trans. Inform. Theory, </journal> <volume> 31 (1986), </volume> <pages> 826-830. </pages>
Reference-contexts: Namely, it is difficult to obtain a code-equivalent matrix of the form [ y j ff i j ] i=0;j=0 . On the other hand, as shown in <ref> [12] </ref>, it is easy to extract the values ff j and y j from any sys tematic generator matrix of a generalized Reed-Solomon code; hence, cryptosystems based on such a code are breakable. This was pointed out explicitly by Sidelnikov and Shestakov in [13].
Reference: [13] <author> V.M. Sidelnikov, S.O. Shestakov, </author> <title> On cryptosystems based on generalized Reed-Solomon codes, </title> <journal> Discretnaya Math., </journal> <note> 4 (1992), 57-63 (in Russian). 7 </note>
Reference-contexts: This was pointed out explicitly by Sidelnikov and Shestakov in <ref> [13] </ref>. For related work, see also the references cited in [10, p. 317].
References-found: 13

