URL: http://www.cs.man.ac.uk/~tessaris/DL/docs/ECAI96/calv.ps.gz
Refering-URL: http://www.cs.man.ac.uk/~tessaris/DL/papers.html
Root-URL: http://www.cs.man.ac.uk
Title: Reasoning with Inclusion Axioms in Description Logics: Algorithms and Complexity  
Author: Diego Calvanese 
Abstract: The computational complexity of reasoning on pure concept expressions has been characterized completely for all relevant description logics. On the contrary, reasoning in the presence of schema axioms is not so well understood and far from being settled completely. An important class of schemata is that of primitive schemata (in which the schema axioms express only necessary conditions) possibly containing cycles. In this paper we provide, for a relevant class of description logics, a complete characterization of computational complexity of reasoning in these types of schemata, both in the presence and in the absence of cycles. The results are obtained by devising reasoning procedures, establishing direct reductions to show lower bounds, and introducing a general technique by which the constructor for existential quantification can be removed without influencing the result of reasoning. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> F. Baader, </author> <title> `Terminological cycles in KL-ONE-based knowledge representation languages', </title> <booktitle> in Proc. of AAAI-90, </booktitle> <pages> pp. 621-626, </pages> <year> (1990). </year>
Reference-contexts: This is further confirmed by the fact that their use is allowed in most database models. Cycles not only require a special treatment by reasoning procedures and greatly increase the complexity of reasoning <ref> [1, 2, 17] </ref>, but raise also the problem of which semantics to ad 1 Dipartimento di Informatica e Sistemistica, Univ. di Roma La Sapienza, Via Salaria 113, 00198 Roma, Italy. calvanese@dis.uniroma1.it opt to interpret them [17]. So called descriptive semantics accepts all interpretations that satisfy the axioms. <p> Deduction on schemata is not so well understood and far from being settled in all relevant cases. Cyclic definitions are investigated in <ref> [1, 17] </ref>, where for a simple logic containing only conjunction and universal quantification, subsumption in possibly cyclic schemata is shown to be already PSPACE-complete for fixpoints semantics and in PSPACE for descriptive semantics (In fact, in [17] more expressive logics are considered).
Reference: [2] <author> F. Baader, </author> <title> `Augmenting concept languages by transitive closure of roles: An alternative to terminological cycles', </title> <booktitle> in Proc. of IJCAI-91, </booktitle> <year> (1991). </year>
Reference-contexts: This is further confirmed by the fact that their use is allowed in most database models. Cycles not only require a special treatment by reasoning procedures and greatly increase the complexity of reasoning <ref> [1, 2, 17] </ref>, but raise also the problem of which semantics to ad 1 Dipartimento di Informatica e Sistemistica, Univ. di Roma La Sapienza, Via Salaria 113, 00198 Roma, Italy. calvanese@dis.uniroma1.it opt to interpret them [17]. So called descriptive semantics accepts all interpretations that satisfy the axioms.
Reference: [3] <author> A. Borgida, </author> <title> `Description logics in data management', </title> <journal> IEEE Trans. on Knowledge and Data Engineering, </journal> <volume> 7(5), </volume> <pages> 671-682, </pages> <year> (1995). </year>
Reference-contexts: In fact, the constraints that can be expressed in most semantic and object-oriented data models correspond naturally to primitive concept specifications, and as shown in <ref> [10, 3] </ref>, reasoning in these formalisms can correctly be captured by reasoning on primitive schemata. Deduction on schemata is not so well understood and far from being settled in all relevant cases.
Reference: [4] <author> M. Buchheit, F. Donini, W. Nutt, and A. Schaerf, </author> <title> `A refined architecture for terminological systems: Terminology = schema + views', </title> <type> Technical Report RR-95-09, </type> <institution> DFKI, </institution> <year> (1995). </year>
Reference-contexts: So called descriptive semantics accepts all interpretations that satisfy the axioms. For this reason, under descriptive semantics a cyclic schema does not provide definitions, and alternative semantics, which are based on fixpoint definitions have been proposed to overcome this problem [17, 18, 12]. Following <ref> [4] </ref> we argue, however that a schema represents a set of constraints on the domain to be modeled, and therefore we should adopt descriptive semantics which interprets axioms precisely as constraints. <p> Also, the known lower bounds are the ones that follow trivially from the lower bounds established for reasoning on concept expressions. Exceptions are the results established in <ref> [6, 10, 4] </ref>, which deal explicitly with primitive schemata. We discuss the results in [6, 4] relevant for this paper in Section 3. [10] shows decidability in deterministic exponential time of reasoning on primitive schemata in an expressive logic that allows to represent database models and frame based systems. <p> Also, the known lower bounds are the ones that follow trivially from the lower bounds established for reasoning on concept expressions. Exceptions are the results established in [6, 10, 4], which deal explicitly with primitive schemata. We discuss the results in <ref> [6, 4] </ref> relevant for this paper in Section 3. [10] shows decidability in deterministic exponential time of reasoning on primitive schemata in an expressive logic that allows to represent database models and frame based systems. <p> Notice that we have adopted descriptive semantics, which seems to be the most appropriate one for the interpretation of schemata <ref> [4, 17] </ref>. In the following we assume to deal only with primitive schemata. 3 COMPLEXITY RESULTS In this section we analyze the complexity of reasoning on primitive schemata, both acyclic and general, expressed in ALC and its relev ant sub-logics. <p> is a single concept name, since a generic concept C is consistent in a schema S := (A; P; T ) iff A is consistent in S 0 := (A [ fAg; P; T [ fA _ Cg), where A is a new concept name. 3.1 Direct upper bounds In <ref> [4] </ref> an algorithm is given for verifying concept consistency in schemata in a slight extension of AL. We briefly sketch this method for the case of AL-schemata. <p> Then C is consistent in S iff consistent (fA 1 ; : : : ; A n g; S) = true. Since the schema is acyclic we can apply the same argument used in <ref> [4] </ref> to show that the length of a chain of successor nodes is linear in the size of S. Therefore, when executing procedure consistent, we have at most a linear number of nestings of recursive calls, and the space taken up by the activation stack is polynomial. <p> Theorem 2 Concept consistency in acyclic ALU -schemata can be decided in worst case polynomial space in the size of the schema. 3.2 Direct reductions to show lower bounds As already mentioned, in <ref> [4] </ref> it is shown that when moving from F L to AL (which allows to express inconsistent concepts) verifying concept consistency becomes intractable. <p> S 0 q contains a distinguished concept name D 0 , and D 0 is consistent in S 0 q iff q is valid. Corollary 7 Concept consistency in general-AL-schemata is PSPACE-hard. 3.3 Eliminating existential quantification In <ref> [4] </ref> it is shown that verifying concept consistency in AL-schemata is coNP-hard. The result is established by exploiting a reduction from subsumption between concept expressions in ALE (which was shown coNP-complete in [13]) to concept consistency in AL-schemata. <p> First, one can study the impact on computational complexity of augmenting the expressivity of the logic used to express the schema. Particularly important in this context is the addition of inverse roles, and first steps in this direction are done in <ref> [4, 10] </ref>. Second, one can study heuristics to reduce the computational complexity of reasoning under assumptions that are reasonable in practice and that are common in databases, following e.g. the ideas given in [9].
Reference: [5] <author> M. Buchheit, F. Donini, </author> <title> and A, Schaerf, `Decidable reasoning in terminological knowledge representation systems', </title> <journal> J. of Artificial Intelligence Research, </journal> <volume> 1, </volume> <pages> 109-138, </pages> <year> (1993). </year>
Reference-contexts: In particular, from PSPACE-hardness of concept consistency in acyclic ALC-schemata (which follows immediately from the hardness result for ALC proved in [19]), by applying Theorem 8 we obtain an alternative proof of Theorem 5. From EXPTIME-completeness of reasoning on general ALC-schemata <ref> [5] </ref>, we obtain the same completeness result for reasoning on general ALU-schemata, of which the hardness part was open.
Reference: [6] <author> M. Buchheit, M. Jeusfeld, W. Nutt, and M. Staudt, </author> <title> `Subsumption between queries to Object-Oriented databases', </title> <journal> Information Systems, </journal> <volume> 19(1), </volume> <pages> 33-54, </pages> <year> (1994). </year>
Reference-contexts: Also, the known lower bounds are the ones that follow trivially from the lower bounds established for reasoning on concept expressions. Exceptions are the results established in <ref> [6, 10, 4] </ref>, which deal explicitly with primitive schemata. We discuss the results in [6, 4] relevant for this paper in Section 3. [10] shows decidability in deterministic exponential time of reasoning on primitive schemata in an expressive logic that allows to represent database models and frame based systems. <p> Also, the known lower bounds are the ones that follow trivially from the lower bounds established for reasoning on concept expressions. Exceptions are the results established in [6, 10, 4], which deal explicitly with primitive schemata. We discuss the results in <ref> [6, 4] </ref> relevant for this paper in Section 3. [10] shows decidability in deterministic exponential time of reasoning on primitive schemata in an expressive logic that allows to represent database models and frame based systems. <p> For F L -schemata concept consistency is trivial, since F L contains no combination of constructs that can give rise to a contradiction. Therefore any concept in an F L -schema is consistent. An immediate consequence of the polynomial algorithm for query sub-sumption given in <ref> [6] </ref> is that concept subsumption in F L can be decided in polynomial time even with general schemata. In the following, for lack of space, we concentrate on concept consistency only. However, it is possible to show that the corresponding complexity bounds hold also for the case of subsumption.
Reference: [7] <author> D. Calvanese, </author> <title> Unrestricted and Finite Model Reasoning in Class-Based Representation Formalisms, </title> <type> Ph.D. dissertation, </type> <institution> Dip. di Inf. e Sist., Univ. di Roma La Sapienza, </institution> <year> 1996. </year>
Reference-contexts: This ensures that they are both traversed as the count proceeds and can separately contribute to block it. For the full details of the schema S 0 q that implements the desired reduction we refer to <ref> [7] </ref>, and we state here only the final result. Theorem 6 Let q be a QBF and S 0 q the cyclic AL-schema obtained from q. S 0 q contains a distinguished concept name D 0 , and D 0 is consistent in S 0 q iff q is valid.
Reference: [8] <author> D. Calvanese, G. De Giacomo, and M. Lenzerini, </author> <title> `Structured objects: Modeling and reasoning', </title> <booktitle> in Proc. of DOOD-95, number 1013 in LNCS, </booktitle> <pages> pp. 229-246, </pages> <year> (1995). </year>
Reference-contexts: For much more powerful logics EXPTIME-completeness of schema level reasoning is established in <ref> [11, 8] </ref>. Primitive schemata, on the other hand, have been investigated only recently, motivated by the tight correspondence with database models. The impact of the assumption that the schema contains no definitions is not well understood.
Reference: [9] <author> D. Calvanese and M. Lenzerini, </author> <title> `Making object-oriented schemas more expressive', </title> <booktitle> in Proc. of PODS-94, </booktitle> <pages> pp. 243-254, </pages> <year> (1994). </year>
Reference-contexts: Second, one can study heuristics to reduce the computational complexity of reasoning under assumptions that are reasonable in practice and that are common in databases, following e.g. the ideas given in <ref> [9] </ref>.
Reference: [10] <author> D. Calvanese, M. Lenzerini, and D. Nardi, </author> <title> `A unified framework for class based representation formalisms', </title> <booktitle> in Proc. of KR-94, </booktitle> <year> (1994). </year>
Reference-contexts: In fact, the constraints that can be expressed in most semantic and object-oriented data models correspond naturally to primitive concept specifications, and as shown in <ref> [10, 3] </ref>, reasoning in these formalisms can correctly be captured by reasoning on primitive schemata. Deduction on schemata is not so well understood and far from being settled in all relevant cases. <p> Also, the known lower bounds are the ones that follow trivially from the lower bounds established for reasoning on concept expressions. Exceptions are the results established in <ref> [6, 10, 4] </ref>, which deal explicitly with primitive schemata. We discuss the results in [6, 4] relevant for this paper in Section 3. [10] shows decidability in deterministic exponential time of reasoning on primitive schemata in an expressive logic that allows to represent database models and frame based systems. <p> Exceptions are the results established in [6, 10, 4], which deal explicitly with primitive schemata. We discuss the results in [6, 4] relevant for this paper in Section 3. <ref> [10] </ref> shows decidability in deterministic exponential time of reasoning on primitive schemata in an expressive logic that allows to represent database models and frame based systems. <p> First, one can study the impact on computational complexity of augmenting the expressivity of the logic used to express the schema. Particularly important in this context is the addition of inverse roles, and first steps in this direction are done in <ref> [4, 10] </ref>. Second, one can study heuristics to reduce the computational complexity of reasoning under assumptions that are reasonable in practice and that are common in databases, following e.g. the ideas given in [9].
Reference: [11] <author> G. De Giacomo, </author> <title> Decidability of Class-Based Knowledge Representation Formalisms, </title> <type> Ph.D. dissertation, </type> <institution> Dip. di Inf. e Sist., Univ. di Roma La Sapienza, </institution> <year> 1995. </year>
Reference-contexts: For much more powerful logics EXPTIME-completeness of schema level reasoning is established in <ref> [11, 8] </ref>. Primitive schemata, on the other hand, have been investigated only recently, motivated by the tight correspondence with database models. The impact of the assumption that the schema contains no definitions is not well understood.
Reference: [12] <author> G. De Giacomo and M. Lenzerini, </author> <title> `Concept language with number restrictions and fixpoints, and its relationship with -calculus', </title> <booktitle> in Proc. of ECAI-94, </booktitle> <pages> pp. 411-415, </pages> <year> (1994). </year>
Reference-contexts: So called descriptive semantics accepts all interpretations that satisfy the axioms. For this reason, under descriptive semantics a cyclic schema does not provide definitions, and alternative semantics, which are based on fixpoint definitions have been proposed to overcome this problem <ref> [17, 18, 12] </ref>. Following [4] we argue, however that a schema represents a set of constraints on the domain to be modeled, and therefore we should adopt descriptive semantics which interprets axioms precisely as constraints.
Reference: [13] <author> F. Donini, B. Hollunder, M. Lenzerini, A. Marchetti Spaccamela, D. Nardi, and W. Nutt, </author> <title> `The complexity of existential quantification in concept languages', </title> <booktitle> AIJ, </booktitle> <pages> 2-3, 309-327, </pages> <year> (1992). </year>
Reference-contexts: Corollary 7 Concept consistency in general-AL-schemata is PSPACE-hard. 3.3 Eliminating existential quantification In [4] it is shown that verifying concept consistency in AL-schemata is coNP-hard. The result is established by exploiting a reduction from subsumption between concept expressions in ALE (which was shown coNP-complete in <ref> [13] </ref>) to concept consistency in AL-schemata. The reduction is based essentially on the elimination of existential quantification from an ALE concept containing a single role by introducing suitable axioms in the schema. The elimination of existential quantification can easily be generalized to schemata and to an arbitrary number of roles.
Reference: [14] <author> F. Donini, M. Lenzerini, D. Nardi, and W. Nutt, </author> <title> `Tractable concept languages', </title> <booktitle> in Proc. of IJCAI-91, </booktitle> <pages> pp. 458-463, </pages> <year> (1991). </year>
Reference-contexts: Although this can in the worst case lead to an exponential increase in the size of the concepts [16], this seems not to happen in practical cases. The computational complexity of reasoning on concept expressions has been exactly characterized for all relevant description logics <ref> [14, 19, 15] </ref>, and this problem can now be regarded as solved. However, although the assumption of acyclicity is common to many terminological systems, it is unrealistic in practice, and cycles are definitely necessary for a correct modeling in many application domains.
Reference: [15] <author> F. Donini, M. Lenzerini, D. Nardi, and W. Nutt, </author> <title> `The complexity of concept languages', </title> <type> Technical Report RR-95-07, </type> <institution> DFKI, </institution> <year> (1995). </year>
Reference-contexts: Although this can in the worst case lead to an exponential increase in the size of the concepts [16], this seems not to happen in practical cases. The computational complexity of reasoning on concept expressions has been exactly characterized for all relevant description logics <ref> [14, 19, 15] </ref>, and this problem can now be regarded as solved. However, although the assumption of acyclicity is common to many terminological systems, it is unrealistic in practice, and cycles are definitely necessary for a correct modeling in many application domains. <p> In this paper we present a systematic study of the complexity of deduction on primitive schemata expressed in the basic description logics of the AL-family <ref> [15] </ref>, namely ALC and its sub-languages. <p> A systematic presentation of the class of description logics we deal with in this paper, namely AL-logics, can be found for example in <ref> [15] </ref>, and we refer to this paper for the denotation of the logics and formal definitions of syntax and semantics. Given a description logic L, an L-schema introduces concept and role names and states conditions that objects have to satisfy in order to be instances of certain concepts.
Reference: [16] <author> B. Nebel, </author> <title> `Terminological reasoning is inherently intractable', </title> <journal> AIJ, </journal> <volume> 43, </volume> <pages> 235-249, </pages> <year> (1990). </year>
Reference-contexts: This is achieved simply by unfolding the axioms in the schema. Although this can in the worst case lead to an exponential increase in the size of the concepts <ref> [16] </ref>, this seems not to happen in practical cases. The computational complexity of reasoning on concept expressions has been exactly characterized for all relevant description logics [14, 19, 15], and this problem can now be regarded as solved.
Reference: [17] <author> B. Nebel, </author> <title> `Terminological cycles: Semantics and computational properties', in Principles of Semantic Networks, </title> <editor> ed., John F. Sowa, </editor> <address> 331-361, </address> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos, </address> <year> (1991). </year>
Reference-contexts: This is further confirmed by the fact that their use is allowed in most database models. Cycles not only require a special treatment by reasoning procedures and greatly increase the complexity of reasoning <ref> [1, 2, 17] </ref>, but raise also the problem of which semantics to ad 1 Dipartimento di Informatica e Sistemistica, Univ. di Roma La Sapienza, Via Salaria 113, 00198 Roma, Italy. calvanese@dis.uniroma1.it opt to interpret them [17]. So called descriptive semantics accepts all interpretations that satisfy the axioms. <p> only require a special treatment by reasoning procedures and greatly increase the complexity of reasoning [1, 2, 17], but raise also the problem of which semantics to ad 1 Dipartimento di Informatica e Sistemistica, Univ. di Roma La Sapienza, Via Salaria 113, 00198 Roma, Italy. calvanese@dis.uniroma1.it opt to interpret them <ref> [17] </ref>. So called descriptive semantics accepts all interpretations that satisfy the axioms. For this reason, under descriptive semantics a cyclic schema does not provide definitions, and alternative semantics, which are based on fixpoint definitions have been proposed to overcome this problem [17, 18, 12]. <p> So called descriptive semantics accepts all interpretations that satisfy the axioms. For this reason, under descriptive semantics a cyclic schema does not provide definitions, and alternative semantics, which are based on fixpoint definitions have been proposed to overcome this problem <ref> [17, 18, 12] </ref>. Following [4] we argue, however that a schema represents a set of constraints on the domain to be modeled, and therefore we should adopt descriptive semantics which interprets axioms precisely as constraints. <p> Deduction on schemata is not so well understood and far from being settled in all relevant cases. Cyclic definitions are investigated in <ref> [1, 17] </ref>, where for a simple logic containing only conjunction and universal quantification, subsumption in possibly cyclic schemata is shown to be already PSPACE-complete for fixpoints semantics and in PSPACE for descriptive semantics (In fact, in [17] more expressive logics are considered). <p> Cyclic definitions are investigated in [1, 17], where for a simple logic containing only conjunction and universal quantification, subsumption in possibly cyclic schemata is shown to be already PSPACE-complete for fixpoints semantics and in PSPACE for descriptive semantics (In fact, in <ref> [17] </ref> more expressive logics are considered). For much more powerful logics EXPTIME-completeness of schema level reasoning is established in [11, 8]. Primitive schemata, on the other hand, have been investigated only recently, motivated by the tight correspondence with database models. <p> Notice that we have adopted descriptive semantics, which seems to be the most appropriate one for the interpretation of schemata <ref> [4, 17] </ref>. In the following we assume to deal only with primitive schemata. 3 COMPLEXITY RESULTS In this section we analyze the complexity of reasoning on primitive schemata, both acyclic and general, expressed in ALC and its relev ant sub-logics.
Reference: [18] <author> K. Schild, </author> <title> `Terminological cycles and the propositional -calculus', </title> <booktitle> in Proc. of KR-94, </booktitle> <pages> pp. 509-520, </pages> <year> (1994). </year>
Reference-contexts: So called descriptive semantics accepts all interpretations that satisfy the axioms. For this reason, under descriptive semantics a cyclic schema does not provide definitions, and alternative semantics, which are based on fixpoint definitions have been proposed to overcome this problem <ref> [17, 18, 12] </ref>. Following [4] we argue, however that a schema represents a set of constraints on the domain to be modeled, and therefore we should adopt descriptive semantics which interprets axioms precisely as constraints.
Reference: [19] <author> M. Schmidt-Schau and G. Smolka, </author> <title> `Attributive concept descriptions with complements', </title> <journal> AIJ, </journal> <volume> 48(1), </volume> <pages> 1-26, </pages> <year> (1991). </year> <title> Knowledge Representation 307 D. </title> <publisher> Calvanese </publisher>
Reference-contexts: Although this can in the worst case lead to an exponential increase in the size of the concepts [16], this seems not to happen in practical cases. The computational complexity of reasoning on concept expressions has been exactly characterized for all relevant description logics <ref> [14, 19, 15] </ref>, and this problem can now be regarded as solved. However, although the assumption of acyclicity is common to many terminological systems, it is unrealistic in practice, and cycles are definitely necessary for a correct modeling in many application domains. <p> Validity of QBFs is a well known PSPACE-complete problem, and the hardness result holds already for the restricted case where the propositional part is in DNF, which is the one we consider here. We use a reformulation of the problem similar to the one presented in <ref> [19] </ref>, where a QBF q := Q.f is constituted by a quantifier prefix Q := (Q m m) (Q 1 1), and a set f of clauses in DNF over V := f1; : : : ; mg. <p> E-elimination allows us also to show lower bounds for reasoning on ALU -schemata, by exploiting the lower bounds for ALC. In particular, from PSPACE-hardness of concept consistency in acyclic ALC-schemata (which follows immediately from the hardness result for ALC proved in <ref> [19] </ref>), by applying Theorem 8 we obtain an alternative proof of Theorem 5. From EXPTIME-completeness of reasoning on general ALC-schemata [5], we obtain the same completeness result for reasoning on general ALU-schemata, of which the hardness part was open.
References-found: 19

