URL: http://www.cs.cmu.edu/~quake-papers/related/BernEppstein.ps
Refering-URL: http://www.cs.cmu.edu/afs/cs/project/quake/public/www/triangle.research.html
Root-URL: 
Title: MESH GENERATION AND OPTIMAL TRIANGULATION  
Author: MARSHALL BERN and DAVID EPPSTEIN 
Address: Palo Alto, California 94304, U.S.A.  Irvine, California 92717-3425, U.S.A.  
Affiliation: Xerox Palo Alto Research Center,  Dept. of Information and Computer Science, University of California  
Abstract: We survey the computational geometry relevant to finite element mesh generation. We especially focus on optimal triangulations of geometric domains in two- and three-dimensions. An optimal triangulation is a partition of the domain into triangles or tetrahedra, that is best according to some criterion that measures the size, shape, or number of triangles. We discuss algorithms both for the optimization of triangulations on a fixed set of vertices and for the placement of new vertices (Steiner points). We briefly survey the heuristic algorithms used in some practical mesh generators.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Aggarwal, L.J. Guibas, J. Saxe, and P.W. Shor. </author> <title> A linear time algorithm for computing the Voronoi diagram of a convex polygon. </title> <journal> Disc. and Comp. </journal> <note> Geometry 4 (1989) 591-604. </note>
Reference-contexts: The CDT of a simple polygon, though not of a PSLG, can be constructed even more quickly. Aggarwal et al. <ref> [1] </ref> showed that, if the input is a convex polygon, the DT (which is also the CDT) can be found in linear time. The algorithm is based on the lifting transformation, and it also solves the problem for certain other types of point sets. <p> For convex polygons [135] or random point sets [62] the time bound can be improved to O (n). Eppstein [80] obtained another min-min triangulation result: the farthest-point Delaunay triangulation of a convex polygon minimizes the minimum angle. This triangulation can again be constructed in time O (n) <ref> [1] </ref>. The farthest-point DT dualizes the farthest-point Voronoi diagram, a data structure for finding the farthest input point from a query point.
Reference: [2] <author> E. Anagnostou and D. Corneil. </author> <title> Polynomial-time instances of the minimum weight triangulation problem. </title> <journal> Comp. </journal> <note> Geometry Theory and Applications 3 (1992) 247-259. </note>
Reference: [3] <author> F. Aurenhammer. </author> <title> Voronoi diagrams|a survey of a fundamental geometric data structure. </title> <booktitle> ACM Computing Surveys 23 (1991) 345-405. </booktitle>
Reference-contexts: One important generalization, known as power diagrams and regular triangulations, replaces the distance to an input point by the squared distance minus a real-valued weight. For more information on Delaunay triangulations and Voronoi diagrams, see the surveys by Fortune [88] and Aurenhammer <ref> [3] </ref>. There is a nice relationship between Delaunay triangulation and three-dimensional convex hulls [34, 70]. Lift each point of the input to a paraboloid in three-space by mapping the point with coordinates (x; y) to the point (x; y; x 2 + y 2 ).
Reference: [4] <author> D. Avis and H. ElGindy. </author> <title> Triangulating point sets in space. </title> <journal> Disc. and Comp. </journal> <note> Geometry 2 (1987) 99-111. </note>
Reference-contexts: After tetrahedraliz-ing the convex hull with only linear complexity as above, interior points are added one at a time. When a point is added, the tetrahedron containing it is replaced by four smaller tetrahedra. In contrast, linear complexity is not always possible for points in special position <ref> [4] </ref>. When we try to extend these results to nonconvex polyhedra, we meet a second surprise: not all polyhedra are tetrahedralizable [132]. The following counterexample is due to Schonhardt [193].
Reference: [5] <author> I. Babuska and A. Aziz. </author> <title> On the angle condition in the finite element method, </title> <note> SIAM J. Numer. Analysis 13 (1976) 214-227. </note>
Reference-contexts: The numerical condition of matrices in a finite element computation is related to the minimum angle in the triangulation. The error of a finite element approximation is 7 also related to the minimum angle [91, 209], and even more closely related to the maximum angle <ref> [5, 112] </ref>. The minimum height of a triangle relates to the quality of a curved-surface approximation [98], and to a key step in a new three-dimensional mesh generation algorithm [157]. Several other optimization criteria find application in interpolation [69, 178]. <p> A triangulation minimizing the maximum distance of a triangle from its circumcenter can be found in time O (n 3 ). The minmax angle triangulation has direct relevance to mesh generation due to the error estimate of Babuska and Aziz <ref> [5] </ref>. The distance from the circum-center, or "eccentricity", is a measure of obtuseness, with larger triangles weighted more heavily. In Section 2.5, we show that edge insertion also finds an interpolating surface with minimum slope. All of these criteria are mentioned in [220]. 2.2.3. <p> Halt when all new angles are acceptable. 2.3.2. No Large Angles Many practitioners have suggested largest angle as an important quality measure for both mesh generation [17, 104] and surface interpolation [98, 100]. Babuska and Aziz <ref> [5] </ref> (see also [112]) provide theoretical justification by proving convergence of the finite element method as triangle sizes diminish, so long as the maximum angle is bounded away from 180 ffi ; they also give an example in which convergence fails when angles grow arbitrarily flat.
Reference: [6] <author> I. Babuska and W.C. Rheinboldt. </author> <title> A-posteriori error estimates for the finite element method. </title> <journal> Int. J. Numer. Meth. Eng. </journal> <month> 12 </month> <year> (1978) </year> <month> 1597-1615. </month>
Reference-contexts: medium|size is appropriately measured by the area of the "min-containment circle", after the domain has been transformed by an appropriate affine map [55]. (Sizes of elements are typically used to weight finite element residuals in a-posteriori error estimates, in order to find regions of the mesh in need of refinement <ref> [6, 37] </ref>.) 2.2.1. Delaunay Triangulation and the Flip Algorithm A well-known construction, called the Delaunay triangulation, simultaneously optimizes several of the quality measures mentioned above: maxmin angle, minmax circumcircle, and minmax min-containment circle. The Delaunay triangulation (DT) of a point set is the planar dual of the famous Voronoi diagram.
Reference: [7] <author> P.L. Baehmann, S.L. Wittchen, M.S. Shepard, K.R. Grice, and M.A. Yerry. </author> <title> Robust geometrically-based automatic two-dimensional generation, </title> <journal> Int. J. Numer. Meth. Eng. </journal> <month> 24 </month> <year> (1987) </year> <month> 1043-1078. </month>
Reference-contexts: Triangulating each face then yields a mesh that approximates the domain. A more advanced version of the algorithm uses warping and trimming methods to produce a mesh that does not change the shape of the input <ref> [7] </ref>. The theoretical paper by Bern et al. [25], contributed warping rules guaranteed not to produce small angles, as well as an analysis of the number of triangles in the mesh. Figure 24 shows an example mesh computed by Mitchell [157], using a modification of the algorithm in [25].
Reference: [8] <author> T.J. Baker. </author> <title> Automatic mesh generation for complex three-dimensional regions using a constrained Delaunay triangulation. </title> <journal> Eng. </journal> <note> with Computers 5 (1989) 161-175. </note>
Reference-contexts: A final improvement step merges tetrahedra or moves Steiner points to remove slivers (very flat tetrahedra). Joe [118] is currently working on a generalization of his two-dimensional convex-decomposition generator [119]. 3.4.4. Advancing Front Lohner [144, 145], Baker <ref> [8, 9] </ref>, Jameson et al. [111], Peraire et al. [168], and others have generated tetrahedral meshes for entire aircraft. Typically, something akin to the advancing front method places Steiner points in layers around the aircraft. <p> Typically, something akin to the advancing front method places Steiner points in layers around the aircraft. Jameson et al. [111] use a number of overlapping structured grids to place Steiner points, and then produce an unstructured tetrahedral grid with the Delau-nay triangulation. Baker's method <ref> [8] </ref> starts with a surface triangulation, as described in Section 2.5 above. Steiner points are then added exterior to the aircraft. Regular lattices of Steiner points surround the aircraft, with the density of Steiner points decreasing away from the surface.
Reference: [9] <author> T.J. Baker. </author> <title> Developments and trends in three-dimensional mesh generation. </title> <journal> Appl. Numer. Math. </journal> <month> 5 </month> <year> (1989) </year> <month> 275-304. </month>
Reference-contexts: Heuristically Generated Three-Dimensional Meshes Most of the techniques for generating and improving two-dimensional meshes can be generalized to three dimensions, though not without some difficulties. See <ref> [9, 95, 144] </ref> for surveys discussing both structured and unstructured meshes primarily for fluid flow problems. Overall, three-dimensional unstructured mesh generation is still in its early stages of development. 3.4.1. <p> A final improvement step merges tetrahedra or moves Steiner points to remove slivers (very flat tetrahedra). Joe [118] is currently working on a generalization of his two-dimensional convex-decomposition generator [119]. 3.4.4. Advancing Front Lohner [144, 145], Baker <ref> [8, 9] </ref>, Jameson et al. [111], Peraire et al. [168], and others have generated tetrahedral meshes for entire aircraft. Typically, something akin to the advancing front method places Steiner points in layers around the aircraft.
Reference: [10] <author> T.J. Baker. </author> <title> Element quality in tetrahedral meshes. 7th Int. Conf. on Finite Element Models in Flow Problems, </title> <type> Huntsville, </type> <institution> Alabama, </institution> <year> 1989. </year>
Reference-contexts: Bounded aspect ratio is equivalent to no small d-angles. We now give descriptive names to the six different types of three-dimensional simplices, classified according to the types of bad angles allowed. (See <ref> [10, 60] </ref> for similar classifications.) * Round. A round tetrahedron has no bad angles of any kind. * Needle. A needle has one small solid angle, but no small or large dihedrals. 60 * Wedge. A wedge has small but not large dihedrals and no large angles of any kind.
Reference: [11] <author> T.J. Baker. </author> <title> Unstructured meshes and surface fidelity for complex shapes. </title> <booktitle> In Proc. 10th AIAA Comp. Fluid Dynamics Conf., Hawaii, </booktitle> <year> 1991. </year>
Reference-contexts: Solids can be approximately defined by point sets, either all interior to the solid, or labeled "interior" and "exterior". Such inputs occur in scientific visualization, learning theory, and computer graphics. Inputs in medical and aerospace applications often take the form of regularly spaced planar cross-sections <ref> [11, 15, 31] </ref>. Finally, curved surfaces in design and graphics may be defined by spline patches [18], or by "implicit surfaces"|level sets of functions of three variables. Triangulating the surface of a polyhedron reduces to triangulating a PSLG; Lindholm [136] uses an advancing-front generator within each face. <p> Boissonat [31] takes each adjacent pair of cross-sections and uses planar conforming Delaunay triangulations to help compute a three-dimensional tetrahedralization spanning the pair. Baker <ref> [11] </ref> uses a related heuristic to compute a surface triangulation of an aircraft. He places points interior to each polygonal cross-section, roughly one point for each of the polygon's vertices, and then computes the three-dimensional DT of all input and interior vertices.
Reference: [12] <author> B.S. Baker, E. Grosse, and C.S. Rafferty. </author> <title> Nonobtuse triangulation of polygons. </title> <journal> Disc. and Comp. </journal> <note> Geometry 3 (1988) 147-168. </note>
Reference-contexts: Each successive edge can be only a constant multiple longer than the previous edge, and the first edge must have length O (1). Therefore there must be (log A) edges in the walk. We now turn to upper bounds, meaning algorithms. Baker, Grosse, and Rafferty <ref> [12] </ref> first solved the problem of computing no-small-angle triangulations of polygonal regions and PSLGs. Their algorithm uses only triangles with angles between 13 ffi and 90 ffi , thereby also solving the nonobtuse triangulation problem described in the next section. <p> Bern, Eppstein, and Gilbert [25] combined a similar approach to mesh generation with an innovative optimality analysis. Their algorithms use quadtrees, which had been used in heuristics since the early 80's [224] and suggested by Baker et al. <ref> [12] </ref> as a natural enhancement to their algorithm. Unlike a uniform mesh, a 22 quadtree can produce elements of widely varying sizes, resulting in greater accuracy and efficiency. <p> Thus the strongest bound on the largest angle, that does not imply a bound on the smallest angle, is 90 ffi ; in other words, the triangulation must be nonobtuse. Nonobtuse triangulation claims a number of motivations. A nonobtuse mesh guarantees some desirable numerical properties related to diagonal dominance <ref> [12, 217] </ref>. Vavasis [217] recently proved that for problems with physical characteristics that vary enormously over the domain, a nonobtuse mesh implies faster convergence of a certain numerical method. A second motivation involves planar duality. <p> The maxmin height triangulation is discussed below. An examination of cases shows that, if the triangle with minimum height is nonobtuse, then in any other triangulation there is an equal or smaller height triangle involving one of the same three vertices. As noted above, Baker et al. <ref> [12] </ref> give an algorithm for nonobtuse triangulation of polygons. Their algorithm also avoids small angles, and hence must have complexity that depends on geometry, as well as on n. There are also heuristic algorithms of this type [13, 161]. <p> Due to Lemma 9, a solution to this problem would also solve the conforming Delaunay triangulation problem described below. The hard part of the problem is getting "exterior" and "interior" Steiner points to match at the polygon 31 boundary. There are however nonpolynomial algorithms <ref> [12, 151] </ref>, and an (n 2 ) lower bound [186], similar to Paterson's lower bound example. Open Problem 3.
Reference: [13] <author> R.E. Bank. </author> <title> PLTMG User's Guide. </title> <publisher> SIAM, </publisher> <year> 1990. </year>
Reference-contexts: As noted above, Baker et al. [12] give an algorithm for nonobtuse triangulation of polygons. Their algorithm also avoids small angles, and hence must have complexity that depends on geometry, as well as on n. There are also heuristic algorithms of this type <ref> [13, 161] </ref>. Is it possible to eliminate dependence on geometry? Bern and Eppstein [24] devised the first polynomially bounded algorithm. The first step dices the polygon into rectangles, with nonrectangular portions left over at the boundaries. <p> Refinement and its reverse|"derefinement" or coarsening| assume even greater importance when the solution varies with time, and small features move across the domain [121]. Bank <ref> [13, 14] </ref> refines by splitting selected triangles into four similar copies of themselves, and then splitting neighboring triangles into two triangles to correct subdivision points. <p> The user inputs a very rough, triangular, initial mesh, with the correct number of boundary components in roughly correct locations. The user assigns a 44 local feature size to each node of the initial mesh. Triangles larger than their vertices' smallest feature size are then split as in <ref> [13, 14] </ref> into four similar copies of themselves by adding Steiner points at the midpoints of sides. A midpoint is assigned the average feature size of the endpoints. Neighboring faces are split in two to correct subdivision points.
Reference: [14] <author> R.E. Bank, A.H. Sherman, and A. Weiser. </author> <title> Refinement algorithms and data structures for regular local mesh refinement. </title> <editor> In R. Stepleman et al., </editor> <booktitle> Scientific Computing. </booktitle> <address> IMACS/North-Holland, </address> <year> 1983, </year> <pages> 3-17. </pages>
Reference-contexts: Refinement and its reverse|"derefinement" or coarsening| assume even greater importance when the solution varies with time, and small features move across the domain [121]. Bank <ref> [13, 14] </ref> refines by splitting selected triangles into four similar copies of themselves, and then splitting neighboring triangles into two triangles to correct subdivision points. <p> Such a triangulation is an especially efficient mesh for laminar flows. (See [55, 171] for other stretched triangulations.) 2.4.5. Mesh Refinement A number of researchers have taken mesh refinement as the central step in mesh generation itself <ref> [14, 89, 179] </ref>. For example, the algorithms of Chew [49] and Rup-pert [183], discussed in the last section, refine the constrained Delaunay triangulation by adding centers of circumcircles. An earlier, somewhat related, heuristic method is due to Frey [89]. <p> The user inputs a very rough, triangular, initial mesh, with the correct number of boundary components in roughly correct locations. The user assigns a 44 local feature size to each node of the initial mesh. Triangles larger than their vertices' smallest feature size are then split as in <ref> [13, 14] </ref> into four similar copies of themselves by adding Steiner points at the midpoints of sides. A midpoint is assigned the average feature size of the endpoints. Neighboring faces are split in two to correct subdivision points.
Reference: [15] <author> G. Barequet and M. Sharir. </author> <title> Piecewise-linear interpolation between polygonal slices. </title> <booktitle> In Proc. 10th ACM Symp. Comp. Geometry (1994) 93-102. </booktitle>
Reference-contexts: Solids can be approximately defined by point sets, either all interior to the solid, or labeled "interior" and "exterior". Such inputs occur in scientific visualization, learning theory, and computer graphics. Inputs in medical and aerospace applications often take the form of regularly spaced planar cross-sections <ref> [11, 15, 31] </ref>. Finally, curved surfaces in design and graphics may be defined by spline patches [18], or by "implicit surfaces"|level sets of functions of three variables. Triangulating the surface of a polyhedron reduces to triangulating a PSLG; Lindholm [136] uses an advancing-front generator within each face. <p> The following problem is an example. Open Problem 8. For points in three dimensions, can an approximate min-surface-area enclosing polyhedron be found in polynomial time? A number of authors (see <ref> [15, 102, 196] </ref> for surveys) have considered the 48 problem of computing a triangulated surface interpolating a number of parallel planar cross-sections. Boissonat [31] takes each adjacent pair of cross-sections and uses planar conforming Delaunay triangulations to help compute a three-dimensional tetrahedralization spanning the pair. <p> See Figures 30 and 31. For this algorithm to succeed, input vertices must be closely spaced relative to the thickness and separation of aircraft parts. Barequet and Sharir <ref> [15] </ref> propose a different heuristic for this same problem. They take two adjacent cross-sections and project them onto the same parallel plane. Matching sections of polygons are "stitched" together with a back-and-forth triangulation.
Reference: [16] <author> R.E. Barnhill. </author> <title> Representation and approximation of surfaces. Math. Software III, </title> <editor> J.R. Rice, ed., </editor> <publisher> Academic Press, </publisher> <year> 1977, </year> <pages> 69-120. </pages>
Reference-contexts: algorithm for Delaunay triangulation has led to the use of edge flipping (with the appropriate definitions of reversed quadrilateral) for finding triangulations that approximately optimize other criteria, such as vertex degree [90], maximum angle [104], total edge length [220], or the ratio of the areas of inscribed circle and triangle <ref> [16] </ref>. Edge flipping to improve these criteria, however, will not usually compute a global optimum. The problem is that the algorithm can get stuck in a local optimum, in which no flip improves the triangulation. <p> We say that f T interpolates S. The question arises: which triangulations are good for interpolation? This question has been discussed in the literature <ref> [16, 56, 66, 128, 195] </ref>. Rippa [177] recently proved a surprising result. Regardless of the input elevations, the Delaunay triangulation gives an interpolating surface, or elevated triangulation, optimal in a certain least energy sense. Theorem 12 (Rippa [177]). <p> We may think of the DT as giving the stretched membrane (a "drumhead") with least potential energy, among all elevated-triangulation membranes. Rippa and Schiff also discuss other energy functionals, and use the flip algorithm as a heuristic for their minimization. See <ref> [16, 69] </ref> for heuristic solutions to other interpolation problems. Bern et al. [23] recently considered the problem of finding the minimum slope interpolating surface for input points with elevations (an optimization criterion mentioned in [220]).
Reference: [17] <author> R.E. Barnhill. </author> <title> Computer aided surface representation and design, Surfaces in Computer Aided Geometric Design, </title> <editor> R. Barnhill and W. Boehm, eds., </editor> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1983, </year> <pages> 1-24. 66 </pages>
Reference-contexts: Halt when all new angles are acceptable. 2.3.2. No Large Angles Many practitioners have suggested largest angle as an important quality measure for both mesh generation <ref> [17, 104] </ref> and surface interpolation [98, 100].
Reference: [18] <author> R.H. Bartels, J.C. Beatty, and B.A. Barsky. </author> <title> An Introduction to Splines for Use in Computer Graphics and Modeling, </title> <publisher> Morgan Kaufmann, </publisher> <year> 1987. </year>
Reference-contexts: Such inputs occur in scientific visualization, learning theory, and computer graphics. Inputs in medical and aerospace applications often take the form of regularly spaced planar cross-sections [11, 15, 31]. Finally, curved surfaces in design and graphics may be defined by spline patches <ref> [18] </ref>, or by "implicit surfaces"|level sets of functions of three variables. Triangulating the surface of a polyhedron reduces to triangulating a PSLG; Lindholm [136] uses an advancing-front generator within each face. Solids defined by point sets, however, present some fresh problems.
Reference: [19] <author> T.J. Barth and D.C. Jespersen. </author> <title> The design and application of upwind schemes on unstructured meshes. </title> <booktitle> In Proc. AIAA 27th Aerospace Sciences Meeting, </booktitle> <address> Reno, </address> <year> 1989. </year>
Reference-contexts: In this approach, the domain's boundary P is first subdivided appropriately, and then Steiner points are placed in successive layers around each connected component of P . This yields triangles oriented with the flow field. Figure 27 shows a mesh computed by Barth and Jespersen <ref> [19] </ref>; this mesh is the Delaunay triangulation of vertices placed by the advancing front method. Lo [143] has developed a mesh generator that places Steiner points along 43 predefined contour lines, that need not follow the domain boundary.
Reference: [20] <author> M. Bern. </author> <title> Compatible tetrahedralizations. </title> <booktitle> In Proc. 9th ACM Symp. Comp. Geometry (1993) 281-288. </booktitle>
Reference-contexts: Goodman and Pach [99] prove that the region between two convex polyhedra (the convex hull of the union, minus the polyhedra) can be tetrahedralized into O (n 2 ) tetrahedra by lifting the polyhedra onto a folded plane in four dimensions. (This result generalizes to arbitrary dimension.) Bern <ref> [20] </ref> improves this bound to O (n log n) for the region between two nested convex polyhedra. He also shows that even for general polyhedra, only interior Steiner points are necessary.
Reference: [21] <author> M. Bern, L.P. Chew, D. Eppstein, and J. Ruppert. </author> <title> Dihedral bounds for mesh generation in high dimensions. </title> <type> Manuscript, </type> <year> 1994. </year>
Reference-contexts: Finally, in order to generalize perpendicular duals, we need a stronger condition than self-centered that we shall call fully self-centered : triangles and tetrahedra are all self-centered. In a recent paper, Bern, Chew, Eppstein, and Mitchell <ref> [21] </ref> give an algorithm that solves all these generalizations for point sets in arbitrary dimension d. They 59 show how to Steiner-triangulate n input points with O (n dd=2e ) path simplices. <p> Back in IR d , the products of right triangles form solids|right-triangular prisms in IR 3 |that can be triangulated with path simplices. Bern et al. <ref> [21] </ref> also give a lower bound result. To explain this result, we require some preliminaries. Any set of k &lt; d vertices|a (k 1)-simplex|in a d-dimensional simplex defines a (d + 1 k)-dimensional angle.
Reference: [22] <author> M. Bern, D. Dobkin, and D. Eppstein. </author> <title> Triangulating polygons without large angles. </title> <booktitle> In Proc. 8th ACM Symp. Comp. Geometry (1992) 222-231. </booktitle>
Reference-contexts: Open Problem 3. Is there an algorithm for polynomial-complexity nonobtuse triangulation of both the interior and exterior of a polygon? Of a PSLG? It is also natural to ask about no-large-angle requirements less stringent than nonobtuse triangulation. Bern, Dobkin, and Eppstein <ref> [22] </ref> gave a grid-based algorithm to triangulate simple polygons using O (n log n) triangles|and polygons with holes using O (n 3=2 ) triangles|so that all angles measure at most 150 ffi ; both of these results are superceded by the linear nonobtuse triangulation result outlined above. <p> The no-small-angle quadtree algorithm produces a triangulation with minimum height (s), but with nonpolynomial complexity. The nonobtuse triangulation algorithms described above do not help, as both the grid-and circle-based algorithms can produce triangles with small height. Theorem 10 (Bern et al. <ref> [22] </ref>). A polygon with holes can be triangulated into O (n) triangles of height (s). Proof Sketch: We give a very rough sketch. <p> The total number of Steiner points added in the sweeps is O (n), as it is the sum of a geometric series. This result can be combined with a grid-based no-large-angle triangulation algorithm <ref> [22] </ref> to triangulate simple polygons with O (n log n) Steiner points, with maximum angle at most 150 ffi and minimum height (s). 2.3.4.
Reference: [23] <author> M. Bern, H. Edelsbrunner, D. Eppstein, S. Mitchell, and T.S. Tan. </author> <title> Edge-insertion for optimal triangulations. </title> <journal> Disc. and Comp. </journal> <note> Geometry 10 (1993) 47-65. Also in Proc. Latin American Theoretical Informatics, Springer-Verlag LNCS 583 (1992) 46-60. </note>
Reference-contexts: The correctness of edge insertion for this problem follows from an abstract property of the maximum angle measure, that also holds for several other natural quality measures, as shown in a subsequent paper by Bern, Edelsbrunner, Eppstein, Mitchell, and Tan <ref> [23] </ref>. Let f be a function measuring the badness of triangles, and assume that the quality of a triangulation T is defined to be the maximum (that is, worst) value of f over all triangles in T , denoted f (T ). Definition 2. <p> Similarly, f has the strong anchor property if all triangles of T (not just worst triangles) have anchors. 15 Lemma 5 (Bern et al. <ref> [23] </ref>). Let f be a function with the weak anchor property. Then edge insertion finds a triangulation minimizing f . Proof Sketch: Assume T does not optimize f , abc is a worst triangle in T , and abc has anchor vertex a. <p> If the strong anchor property holds and insertions are performed in a certain order, then all crossed edges|not just the one in the worst triangle|can be eliminated in a successful insertion; then the running time can be improved to O (n 2 log n) <ref> [23, 78] </ref>. Theorem 3 (Edelsbrunner et al. [78], Bern et al. [23]). A triangulation minimizing the maximum angle, or maximizing the minimum height, can be computed 16 in time O (n 2 log n). <p> Theorem 3 (Edelsbrunner et al. [78], Bern et al. <ref> [23] </ref>). A triangulation minimizing the maximum angle, or maximizing the minimum height, can be computed 16 in time O (n 2 log n). A triangulation minimizing the maximum distance of a triangle from its circumcenter can be found in time O (n 3 ). <p> Maxmin Height We now consider maximizing the minimum height of a triangle. This problem arises in Mitchell and Vavasis's three-dimensional mesh generation algorithm [157]. As we saw above, a minimum-height triangulation without Steiner points can be computed using the edge-insertion paradigm <ref> [23] </ref>. It is not immediately obvious that Steiner points can improve the height. Consider a regular n-gon, however, with sides of unit length. <p> Rippa and Schiff also discuss other energy functionals, and use the flip algorithm as a heuristic for their minimization. See [16, 69] for heuristic solutions to other interpolation problems. Bern et al. <ref> [23] </ref> recently considered the problem of finding the minimum slope interpolating surface for input points with elevations (an optimization criterion mentioned in [220]).
Reference: [24] <author> M. Bern and D. Eppstein. </author> <note> Polynomial-size nonobtuse triangulation of polygons. Int. J. Comp. Geometry and Applications 2 (1992) 241-255. </note>
Reference-contexts: Their algorithm also avoids small angles, and hence must have complexity that depends on geometry, as well as on n. There are also heuristic algorithms of this type [13, 161]. Is it possible to eliminate dependence on geometry? Bern and Eppstein <ref> [24] </ref> devised the first polynomially bounded algorithm. The first step dices the polygon into rectangles, with nonrectangular portions left over at the boundaries. Start by passing a vertical line through each input vertex, stopping the line at the polyon boundary. <p> These reduction steps are due to Chew (personal communication); the original paper included a couple more cases. Theorem 8 (Bern and Eppstein <ref> [24] </ref>). The grid-based algorithm above triangulates an n-vertex polygon (with holes) with O (n 2 ) nonobtuse triangles. Recently, Bern, Mitchell, and Ruppert [29] improved the bound on nonob-tuse triangulation to O (n) by inventing a more intricate, circle-based, algorithm.
Reference: [25] <author> M. Bern, D. Eppstein, and J.R. Gilbert. </author> <title> Provably good mesh generation. </title> <note> In Proc. 31st IEEE Symp. Foundations of Computer Science (1990) 231-241. To appear in J. Comp. System Science. </note>
Reference-contexts: Using a number of special cases, they show how input edges may be incorporated into the mesh, by retriangulating the squares within a small distance of the edges. They also provide a similar set of special cases to handle the triangulation near each vertex. Bern, Eppstein, and Gilbert <ref> [25] </ref> combined a similar approach to mesh generation with an innovative optimality analysis. Their algorithms use quadtrees, which had been used in heuristics since the early 80's [224] and suggested by Baker et al. [12] as a natural enhancement to their algorithm. <p> Since a balanced quadtree successively doubles square sizes, the number of splits charged to a single triangle is proportional to the logarithm of its aspect ratio. Theorem 6 (Bern et al. <ref> [25] </ref>). The quadtree algorithm above uses O (k) triangles, where k is the minimum number of triangles in a triangulation of the input with no angle smaller than 20 ffi . <p> Theorem 6 extends to polygon input, guaranteeing mesh size within a constant of optimality, only the analog of Lemma 8 necessarily becomes slightly weaker, guaranteeing O (nA) quadtree squares where A is now the maximum aspect ratio in the CDT. Though not included in the original paper <ref> [25] </ref>, this quadtree-based algorithm can be further extended to PSLGs. For this extension, an idea due to Mitchell and Vavasis [157] proves useful: duplicate each quadtree square that contains more than one face of the domain. <p> In practice Rivara refinement typically improves angles. 2.4.2. Quadtrees Long before the theoretically good mesh generation methods described in the last section <ref> [25] </ref>, quadtrees had been used in heuristic methods. Yerry and Shep-hard [224] construct a quadtree representation of a polygonal or curved domain by recursively splitting squares intersected by the boundary of the domain, until squares reach some minimum size bound. <p> Triangulating each face then yields a mesh that approximates the domain. A more advanced version of the algorithm uses warping and trimming methods to produce a mesh that does not change the shape of the input [7]. The theoretical paper by Bern et al. <ref> [25] </ref>, contributed warping rules guaranteed not to produce small angles, as well as an analysis of the number of triangles in the mesh. Figure 24 shows an example mesh computed by Mitchell [157], using a modification of the algorithm in [25]. <p> The theoretical paper by Bern et al. <ref> [25] </ref>, contributed warping rules guaranteed not to produce small angles, as well as an analysis of the number of triangles in the mesh. Figure 24 shows an example mesh computed by Mitchell [157], using a modification of the algorithm in [25]. This example demonstrates careful selection of quadtree square sizes around holes and "almost holes". Quadtrees are the most convenient way to produce graded meshes, that is, meshes with small elements near complicated parts of the boundary that grade up to larger elements elsewhere. <p> Quadtree methods, however, have been criticized for occasionally producing poorly-shaped boundary elements, and for introducing artificial preferred directions (namely parallel to the x- or y-axes) [208]. The problem of poorly-shaped elements can be solved by the warping methods of Bern et al. <ref> [25] </ref>. The second problem may be more inherent, although non-square quadtree tiles, as used in [25, 158], or some sort of randomization procedure, coupled with Laplacian smoothing, may sufficiently break up the directionality. 2.4.3. <p> The problem of poorly-shaped elements can be solved by the warping methods of Bern et al. [25]. The second problem may be more inherent, although non-square quadtree tiles, as used in <ref> [25, 158] </ref>, or some sort of randomization procedure, coupled with Laplacian smoothing, may sufficiently break up the directionality. 2.4.3. Polygon Decomposition The polygon decomposition approach also initially divides the domain (most generally a PSLG) into simple regions. <p> The concept of local feature size recurs in most mesh generation approaches. We may define the local feature size at point a to be the size of the quadtree box that contains a, as produced by the polygon version of the algorithm of Bern et al. <ref> [25] </ref>, described in Section 2.3.2. This sets the local feature size at a vertex v of the polygonal boundary P to be proportional to the minimum distance (within the domain) to an edge of P not incident to v. Local feature size then varies fairly smoothly between vertices. <p> Results stronger by log factors hold for diameter spheres and rectangular boxes. Bern, Eppstein, and Gilbert <ref> [25] </ref> showed how to use more Steiner points, and reduce the complexity of a Delaunay triangulation to O (n). Their technique is completely different, and it works for any fixed dimension. <p> The algorithm successively projects the point set onto two-dimensional planes, and solves bd=2c planar problems using a linear-complexity all-right-triangle algorithm for point sets <ref> [25, 29] </ref>. Back in IR d , the products of right triangles form solids|right-triangular prisms in IR 3 |that can be triangulated with path simplices. Bern et al. [21] also give a lower bound result. To explain this result, we require some preliminaries. <p> A cap has a large|nearly flat|solid angle. The circumsphere's radius is hence much larger than the longest edge. What is known on bounded-aspect-ratio triangulation in three dimensions? Bern et al. <ref> [25] </ref> use octrees (or in general 2 d -ary trees) to triangulate point set input, using only a constant times the minimum number of bounded-aspect-ratio tetrahedra. Dey, Bajaj, and Sugihara [60] generalize Chew's mesh generation algorithm to three dimensions. <p> Dey, Bajaj, and Sugihara [60] generalize Chew's mesh generation algorithm to three dimensions. For point sets or convex polyhedra with point holes, this method avoids all bad tetrahedra except slivers. Mitchell and Vavasis [157] have recently generalized the quadtree polygon mesh generation of Bern et al. <ref> [25] </ref> to three dimensions, avoiding all types of bad tetrahedra. The generalization is not straightforward, primarily because vertices of polyhedra may have arbitrary degree. Their algorithm first computes a balanced octree that safely separates| that is, by some constant number of cubes|faces of the input polyhedron D. <p> The proof of this theorem also requires a new idea beyond <ref> [25] </ref>.
Reference: [26] <author> M. Bern, D. Eppstein, and S.-H. Teng. </author> <title> Parallel construction of quadtrees and quality triangulations. </title> <booktitle> In Proc. 3rd Workshop on Algorithms and Data Structures, </booktitle> <publisher> Springer-Verlag LNCS 709 (1993) 188-199. </publisher>
Reference-contexts: Melissaratos and Souvaine [151] combine the algorithms of Baker et al. and Bern et al. to guarantee no obtuse angles as well. Bern, Eppstein, and Teng <ref> [26] </ref> consider parallel algorithms for quadtree-based meshes. The algorithms just described are grid-based algorithms. Chew [50, 51] found a quite different, circle-based approach to no-small-angle triangulation of PSLGs. The following definition facilitates description of the algorithm. Definition 8.
Reference: [27] <author> M. Bern, D. Eppstein, and F. Yao. </author> <title> The expected extremes in a Delaunay triangulation. </title> <note> Int. J. Comp. Geometry and Applications 1 (1991) 79-92. </note>
Reference-contexts: Fortune [87, 88] invented an elegant sweepline algorithm. Guibas, Knuth, and Sharir [101] gave a simple, randomized incremental algorithm. (For a simpler analysis of this algorithm see [162, 199].) Maus [149] gave an algorithm for random points with expected linear running time; see also <ref> [27, 68, 152] </ref> for expected case analyses. The typical domain for mesh generation, however, is not a point set, but a polygonal region. <p> Polyhedron Decomposition Cavendish, Field, and Frey [41] developed one of the first three-dimensional mesh generators. Their approach cuts the polyhedron into polygonal cross-sections, adds randomly chosen Steiner points with average spacing determined by a measure of local feature size [40], and then computes the Delaunay triangulation. (See <ref> [27, 152] </ref> for analyses of DTs of random points.) If Steiner points are sufficiently closely spaced on the boundaries of the polygonal cross-sections, the DT will be conforming. A final improvement step merges tetrahedra or moves Steiner points to remove slivers (very flat tetrahedra).
Reference: [28] <author> M. Bern and J.R. Gilbert. </author> <title> Drawing the planar dual. </title> <journal> Inform. Process. Lett. </journal> <month> 43 </month> <year> (1992) </year> <month> 7-13. </month>
Reference-contexts: A second motivation involves planar duality. Each (closed) triangle in a triangulation contains its circumcenter exactly when all angles measure at most 90 ffi . The planar dual of such a triangulation can be formed by simply adding perpendicular bisectors of edges (see <ref> [28] </ref> for more on constructing planar duals). Practitioners use dual meshes in the "finite volume" method in which each mesh vertex has an associated control volume; a perpendicular planar dual defines especially convenient control volumes, simplifying the calculation of flow or forces across element boundaries.
Reference: [29] <author> M. Bern, S. Mitchell, and J. Ruppert. </author> <title> Linear-size nonobtuse triangulation of polygons. </title> <booktitle> In Proc. 10th ACM Symp. Comp. Geometry (1994) 221-230. </booktitle>
Reference-contexts: These reduction steps are due to Chew (personal communication); the original paper included a couple more cases. Theorem 8 (Bern and Eppstein [24]). The grid-based algorithm above triangulates an n-vertex polygon (with holes) with O (n 2 ) nonobtuse triangles. Recently, Bern, Mitchell, and Ruppert <ref> [29] </ref> improved the bound on nonob-tuse triangulation to O (n) by inventing a more intricate, circle-based, algorithm. This algorithm packs the domain with O (n) non-overlapping disks, until each region not covered has at most four sides (line segments or arcs), as shown on the left in Figure 15. <p> Luckily these can be reduced to the illustrated cases by packing in a few more disks, such as the second disk along the bottom in Figure 15 (middle). Theorem 9 (Bern et al. <ref> [29] </ref>). The circle-based algorithm just sketched triangulates an n-vertex polygon (with holes) with O (n) nonobtuse triangles. We now turn to nonobtuse triangulation of more complicated domains. Nonobtuse triangulations of PSLGs have application to mesh generation for multiple domains, such as a domain composed of more than one material. <p> The algorithm successively projects the point set onto two-dimensional planes, and solves bd=2c planar problems using a linear-complexity all-right-triangle algorithm for point sets <ref> [25, 29] </ref>. Back in IR d , the products of right triangles form solids|right-triangular prisms in IR 3 |that can be triangulated with path simplices. Bern et al. [21] also give a lower bound result. To explain this result, we require some preliminaries.
Reference: [30] <author> J. Bloomenthal. </author> <title> Polygonization of implicit surfaces. </title> <address> CAGD 5 (1988) 341-355. </address>
Reference-contexts: In their scheme, the restricted DT is the dual of the diagram obtained by intersecting the Voronoi diagram with the subspace. In general, their method produces a simplicial complex rather than a triangulation, meaning that lower-dimensional faces (vertices and edges) need not be contained in triangles. Finally, Bloomenthal <ref> [30] </ref> uses octrees to polygonize implicit surfaces; these surfaces can then be triangulated if desired. Octrees have been applied to polygonizing spline surfaces as well. 3. Three dimensional triangulations Triangulation in three dimensions is called tetrahedralization (or sometimes tetra-hedrization).
Reference: [31] <author> J.D. Boissonat. </author> <title> Shape reconstruction from planar cross sections. Comp. Vision, Graphics, </title> <booktitle> and Image Processing 44 (1988) 1-29. </booktitle>
Reference-contexts: Solids can be approximately defined by point sets, either all interior to the solid, or labeled "interior" and "exterior". Such inputs occur in scientific visualization, learning theory, and computer graphics. Inputs in medical and aerospace applications often take the form of regularly spaced planar cross-sections <ref> [11, 15, 31] </ref>. Finally, curved surfaces in design and graphics may be defined by spline patches [18], or by "implicit surfaces"|level sets of functions of three variables. Triangulating the surface of a polyhedron reduces to triangulating a PSLG; Lindholm [136] uses an advancing-front generator within each face. <p> Open Problem 8. For points in three dimensions, can an approximate min-surface-area enclosing polyhedron be found in polynomial time? A number of authors (see [15, 102, 196] for surveys) have considered the 48 problem of computing a triangulated surface interpolating a number of parallel planar cross-sections. Boissonat <ref> [31] </ref> takes each adjacent pair of cross-sections and uses planar conforming Delaunay triangulations to help compute a three-dimensional tetrahedralization spanning the pair. Baker [11] uses a related heuristic to compute a surface triangulation of an aircraft.
Reference: [32] <author> J.D. Boissonat, O.D. Faugeras, and E. Le Bras-Mehlman. </author> <title> Representing stereo data with the Delaunay triangulation. </title> <type> Tech. Rep. 788, </type> <institution> INRIA, France, </institution> <year> 1988. </year>
Reference-contexts: We first consider an approach to the conforming DT problem that uses a number of Steiner points dependent upon the geometry of the input as well as on n. The algorithm is a modification of one due to Saalfeld [185], also related to two previous algorithms <ref> [32, 190] </ref>. Start with a triangulation of the input, and let * be the minimum height of any triangle. On each edge, add two Steiner points at distances *=3 from the endpoints.
Reference: [33] <author> A. Bowyer. </author> <title> Computing Dirichlet tessellations. </title> <journal> Computer J. </journal> <month> 24 </month> <year> (1981) </year> <month> 162-166. </month>
Reference-contexts: Coupled with an algorithm for computing four-dimensional convex hulls [197], this gives a worst-case optimal, quadratic-time algorithm to compute the DT. There are also direct algorithms. Bowyer <ref> [33] </ref> and Watson [219, 82] gave incremental algorithms that are quite popular in practice. Watson's algorithm inserts points in sorted order by one coordinate, testing all old circumspheres that intersect the current sweep plane.
Reference: [34] <author> K.Q. Brown. </author> <title> Voronoi diagrams from convex hulls. </title> <journal> Inform. Process. Lett. </journal> <month> 9 </month> <year> (1979) </year> <month> 223-228. </month>
Reference-contexts: For more information on Delaunay triangulations and Voronoi diagrams, see the surveys by Fortune [88] and Aurenhammer [3]. There is a nice relationship between Delaunay triangulation and three-dimensional convex hulls <ref> [34, 70] </ref>. Lift each point of the input to a paraboloid in three-space by mapping the point with coordinates (x; y) to the point (x; y; x 2 + y 2 ).
Reference: [35] <author> E.K. Buratynski. </author> <title> A fully automatic three-dimensional mesh generator for complex geometries. </title> <journal> Int. J. Numer. Meth. Eng. </journal> <volume> 30 (1990) 931-952. </volume> <pages> 67 </pages>
Reference-contexts: Further progress on their octree algorithm is reported by Shephard et al. [203]. Perucchio et al. [169, 189] have also advanced the octree approach with a different way of handling boundary cubes. Buratynski <ref> [35] </ref> uses rectangular octrees, that is, noncubical boxes, and a hierarchical set of warping rules. Boxes are first warped to input corners, then input edges, and finally input faces.
Reference: [36] <author> A. Bykat. </author> <title> Design of a recursive, shape controlling mesh generator. </title> <journal> Int. J. Numer. Meth. Eng. </journal> <month> 19 </month> <year> (1983) </year> <month> 1375-1390. </month>
Reference: [37] <author> G.F. Carey and J.T. Oden. </author> <title> Finite Elements: Computational Aspects. </title> <publisher> Prentice-Hall, </publisher> <year> 1984. </year>
Reference-contexts: medium|size is appropriately measured by the area of the "min-containment circle", after the domain has been transformed by an appropriate affine map [55]. (Sizes of elements are typically used to weight finite element residuals in a-posteriori error estimates, in order to find regions of the mesh in need of refinement <ref> [6, 37] </ref>.) 2.2.1. Delaunay Triangulation and the Flip Algorithm A well-known construction, called the Delaunay triangulation, simultaneously optimizes several of the quality measures mentioned above: maxmin angle, minmax circumcircle, and minmax min-containment circle. The Delaunay triangulation (DT) of a point set is the planar dual of the famous Voronoi diagram.
Reference: [38] <author> G.F. Carey, M. Sharma, and K.C. Wang. </author> <title> A class of data structures for 2-d and 3-d adaptive mesh refinement. </title> <journal> Int. J. Numer. Meth. Eng. </journal> <month> 26 </month> <year> (1988) </year> <month> 2607-2622. </month>
Reference: [39] <author> J.E. Castillo, ed. </author> <title> Mathematical Aspects of Numerical Grid Generation. </title> <note> SIAM , 1991. </note>
Reference-contexts: Overall, two-dimensional mesh generation seems fairly mature, and a number of different approaches give good results. As we mentioned in the introduction, we restrict our discussion to generation of unstructured triangular meshes; for structured meshes, such as quadrilateral meshes given by conformal mapping techniques, see <ref> [39, 213, 214] </ref>. 2.4.1. Mesh Improvement Techniques Before describing heuristic mesh generation methods, we mention some mesh improvement techniques, which can be used as post-processing steps after any of the heuristics.
Reference: [40] <author> J.C. Cavendish. </author> <title> Automatic triangulation of arbitrary planar domains for the finite element method. </title> <journal> Int. J. Numer. Meth. Eng. </journal> <month> 8 </month> <year> (1974) </year> <month> 679-696. </month>
Reference-contexts: Tetrahedra spawn fewer boundary patterns than hexahedra. 63 3.4.3. Polyhedron Decomposition Cavendish, Field, and Frey [41] developed one of the first three-dimensional mesh generators. Their approach cuts the polyhedron into polygonal cross-sections, adds randomly chosen Steiner points with average spacing determined by a measure of local feature size <ref> [40] </ref>, and then computes the Delaunay triangulation. (See [27, 152] for analyses of DTs of random points.) If Steiner points are sufficiently closely spaced on the boundaries of the polygonal cross-sections, the DT will be conforming.
Reference: [41] <author> J.C. Cavendish, D.A. </author> <title> Field, and W.H. Frey. An approach to automatic three-dimensional finite element mesh generation. </title> <journal> Int. J. Numer. Meth. Eng. </journal> <month> 21 </month> <year> (1985) </year> <month> 329-347. </month>
Reference-contexts: See [9, 95, 144] for surveys discussing both structured and unstructured meshes primarily for fluid flow problems. Overall, three-dimensional unstructured mesh generation is still in its early stages of development. 3.4.1. Mesh improvement Laplacian smoothing (see Section 2.4.1) generalizes to three dimensions <ref> [41, 225] </ref>, but the improvement it offers may not be as significant as in two dimensions. 62 There are local tranformations that trade two tetrahedra for three, and three tetrahedra for two, as discussed above (Section 3.2.1). <p> Field and Smith [85] and others [158, 166] suggest the use of a tetrahedral octree, built by recursively cutting a "bcc tetrahedron" (body-centered cubic) into eight copies of itself. Tetrahedra spawn fewer boundary patterns than hexahedra. 63 3.4.3. Polyhedron Decomposition Cavendish, Field, and Frey <ref> [41] </ref> developed one of the first three-dimensional mesh generators.
Reference: [42] <author> B. Chazelle. </author> <title> Convex partitions of polyhedra: a lower bound and worst-case optimal algorithm. </title> <journal> SIAM J. Comput. </journal> <month> 13 </month> <year> (1984) </year> <month> 488-507. </month>
Reference-contexts: So the polyhedron contains no tetrahedron, and tetrahedralization is impossible. 51 Schonhardt's polyhedron can be tetrahedralized if we add one Steiner point. This leads to the question of how many Steiner points may be required for tetrahe-dralization. Chazelle <ref> [42] </ref> found a simple polyhedron in which (n 2 ) Steiner points are needed even to partition the polyhedron into convex regions. Clearly, this is also a lower bound for tetrahedralization. Chazelle's polyhedron (Figure 34) can be built from a cube by removing numerous thin wedges.
Reference: [43] <author> B. Chazelle. </author> <title> Triangulating a simple polygon in linear time. Disc. </title> <booktitle> and Comp. Geometry 6 (1991), </booktitle> <pages> 485-524. </pages>
Reference-contexts: For many geometric problems there are matching (n log n) lower bounds, but none was known in this case. There were also many faster special case algorithms [45, 93, 108]. After Tarjan and Van Wyk [211] broke through to O (n log log n), Chazelle <ref> [43] </ref> ended the quest by announcing a linear-time triangulation algorithm for simple polygons. 6 We now discuss the other types of input domains.
Reference: [44] <author> B. Chazelle, H. Edelsbrunner, L.J. Guibas, J.E. Hershberger, R. Seidel, and M. Sharir. </author> <title> Selecting multiply covered points and reducing the size of Delaunay triangulations. </title> <booktitle> In Proc. 6th ACM Symp. Comp. Geometry (1990) 116-127. </booktitle>
Reference-contexts: This raises the question of whether Steiner points can be used to reduce the complexity of the DT. 58 Chazelle et al. <ref> [44] </ref> answered this question affirmatively by showing that for any point set, there exists a set of O (n 1=2 log 3 n) points, such that the Delaunay triangulation of the union of the two point sets has O (n 3=2 log 3 n) tetrahedra.
Reference: [45] <author> B. Chazelle and J. Incerpi. </author> <title> Triangulation and shape complexity. </title> <journal> ACM Trans. </journal> <note> on Graphics 3 (1984) 135-152. </note>
Reference-contexts: It is not difficult to improve the running time to O (n log n) [93, 174]. For many geometric problems there are matching (n log n) lower bounds, but none was known in this case. There were also many faster special case algorithms <ref> [45, 93, 108] </ref>. After Tarjan and Van Wyk [211] broke through to O (n log log n), Chazelle [43] ended the quest by announcing a linear-time triangulation algorithm for simple polygons. 6 We now discuss the other types of input domains.
Reference: [46] <author> B. Chazelle and L. Palios. </author> <title> Triangulating a nonconvex polytope. Disc. </title> <booktitle> and Comp. Geometry 5 (1990), </booktitle> <pages> 505-526. </pages>
Reference-contexts: This suggests the possibility that an appropriate measure of nonconvexity would interpolate these bounds and achieve o (n 2 ) tetrahedra for "slightly nonconvex" polyhedra. One natural measure is r, the number of reflex edges. Chazelle and Palios <ref> [46] </ref> developed a triangulation algorithm sensitive to this measure. Let N (v) be the set of neighbors of vertex v, and define the cap of v to be the star-shaped polyhedron formed by removing the convex hull of N (v) from the convex hull of N (v) [ fvg. <p> And finally w must be an endpoint of at least three reflex edges; otherwise, one of the faces incident to w would have a vertex closer to v. So we can charge penetrated caps one-for-one to endpoints of reflex edges. Theorem 14 (Chazelle and Palios <ref> [46] </ref>). Any simple polyhedron with n vertices and r reflex edges can be partitioned into O (n + r 2 ) tetrahedra using O (n + r 2 ) Steiner points. Proof: Start by triangulating the faces of the polyhedron. <p> The final product is a triangulation with O (n + r 2 ) tetrahedra, that with careful implementation can be constructed in time O ((n + r 2 ) log r) <ref> [46] </ref>. The algorithm just given does not use the assumption that the polyhedron is simple in any essential way, only in the analysis of the number of tetrahedra.
Reference: [47] <author> B. Chazelle and N. Shouraboura. </author> <title> Bounds on the size of tetrahedralizations. </title> <booktitle> In Proc. 10th ACM Symp. Comp. Geometry (1994) 231-239. </booktitle>
Reference-contexts: The algorithm just given does not use the assumption that the polyhedron is simple in any essential way, only in the analysis of the number of tetrahedra. Recently, Chazelle and Shouraboura <ref> [47] </ref> used the Gauss-Bonnet formula to show that the genus of a polyhedron is bounded by the number of reflex edges, thereby extending the same O (n + r 2 ) bound to non-simple polyhedra. 54 Dey [59] and Hershberger and Snoeyink [107] analyze another algorithm| called notch cutting [42]|for convex <p> This result may have application to multiple domains (see also [156]); it follows from "fattening" each face into a roughly prism-shaped solid. Toussaint et al. [215] prove that the union of three convex polyhedra can be tetrahedralized without Steiner points. Chazelle and Shouraboura <ref> [47] </ref> improve Bern's O (n log n) bound to linear by reintroducing Steiner points. They also prove that the region between a convex polyhedron and a terrain (a polyhedral surface intersected once by each vertical line) can be triangulated with O (n log n) tetrahedra, and|remarkably|this bound is tight.
Reference: [48] <author> L.P. Chew. </author> <title> There are planar graphs almost as good as the complete graph. </title> <journal> J. Comp. </journal> <note> System Science 39 (1989) 205-219. </note>
Reference-contexts: The DT contains the minimum spanning tree; the distance between vertices in the DT is O (1) times their distance in the plane <ref> [48, 65, 122] </ref>; and, from any viewpoint, DT triangles are acyclically ordered by distance [57, 71].) For very complex domains, an O (n 2 )-time algorithm for computing the CDT may be too slow. Chew [49] and others [198, 218] have improved this bound to O (n log n).
Reference: [49] <author> L.P. Chew. </author> <title> Constrained Delaunay triangulations. </title> <note> Algorithmica 4 (1989) 97-108. </note>
Reference-contexts: We consider this conforming Delaunay triangulation problem in Section 2.3.5. The alternative approach generalizes the definition of the DT in order to force certain edges (the boundary) into the triangulation. Such a triangulation is known as a constrained Delaunay triangulation (CDT) <ref> [49, 54, 56, 129, 131, 198] </ref>. For generality, we allow the domain to be a planar straight line graph. The CDT of a polygonal region may be obtained by treating the polygon as a PSLG, and then removing all CDT edges exterior to the polygon. <p> Chew <ref> [49] </ref> and others [198, 218] have improved this bound to O (n log n). Theorem 2 (Chew [49]). The CDT can be constructed in time O (n log n). Proof Sketch: Chew gives a divide-and-conquer algorithm. <p> Chew <ref> [49] </ref> and others [198, 218] have improved this bound to O (n log n). Theorem 2 (Chew [49]). The CDT can be constructed in time O (n log n). Proof Sketch: Chew gives a divide-and-conquer algorithm. Line segment endpoints are sorted by x-coordinates, and split by a vertical line into two subsets, each with at most dn=2e endpoints. <p> Such a triangulation is an especially efficient mesh for laminar flows. (See [55, 171] for other stretched triangulations.) 2.4.5. Mesh Refinement A number of researchers have taken mesh refinement as the central step in mesh generation itself [14, 89, 179]. For example, the algorithms of Chew <ref> [49] </ref> and Rup-pert [183], discussed in the last section, refine the constrained Delaunay triangulation by adding centers of circumcircles. An earlier, somewhat related, heuristic method is due to Frey [89].
Reference: [50] <author> L.P. Chew. </author> <title> Guaranteed-quality triangular meshes. </title> <type> Tech. Rep. </type> <institution> TR-89-983, Comp. Science Dept., Cornell University, </institution> <year> 1989. </year>
Reference-contexts: Melissaratos and Souvaine [151] combine the algorithms of Baker et al. and Bern et al. to guarantee no obtuse angles as well. Bern, Eppstein, and Teng [26] consider parallel algorithms for quadtree-based meshes. The algorithms just described are grid-based algorithms. Chew <ref> [50, 51] </ref> found a quite different, circle-based approach to no-small-angle triangulation of PSLGs. The following definition facilitates description of the algorithm. Definition 8. The input feature size of a point set is the minimum distance between input points. <p> The input feature size of a PSLG is the minimum distance between a vertex and an edge not incident to that vertex. For a polygon or a polygon with holes, we only consider distances interior to the polygon. In a version of his algorithm that produces uniform meshes, Chew <ref> [50] </ref> assumes that all boundary edges have lengths between s and p 3s, where s is the input feature size. This condition can be enforced by subdividing edges. Chew starts with the constrained Delaunay triangulation of the input, since it maximizes the minimum angle. <p> Then, while there is a triangle with circumcircle of radius greater than s, he adds a Steiner point at the center of the circle, and recomputes the CDT. See Figure 11 for an example. 25 Theorem 7 (Chew <ref> [50] </ref>). The circle-based algorithm computes a Steiner triangulation in which all angles are between 30 ffi and 120 ffi . Proof Sketch: No point is ever added closer than s to another point. Hence the procedure terminates, as only a finite number of points can fit into the polygonal region.
Reference: [51] <author> L.P. Chew. </author> <title> Guaranteed-quality mesh generation for curved surfaces. </title> <booktitle> In Proc. 9th ACM Symp. Comp. Geometry (1993) 274-280. </booktitle>
Reference-contexts: Melissaratos and Souvaine [151] combine the algorithms of Baker et al. and Bern et al. to guarantee no obtuse angles as well. Bern, Eppstein, and Teng [26] consider parallel algorithms for quadtree-based meshes. The algorithms just described are grid-based algorithms. Chew <ref> [50, 51] </ref> found a quite different, circle-based approach to no-small-angle triangulation of PSLGs. The following definition facilitates description of the algorithm. Definition 8. The input feature size of a point set is the minimum distance between input points. <p> This last step may use triangles contained in the cross-sectional planes; indeed this capability is necessary in order to form a surface that does not intersect itself [97]. A number of researchers <ref> [51, 84, 103, 191] </ref> have worked on meshing curved surfaces. Chew [51] has extended his two-dimensional mesh generator (Section 2.3.1) to curved surfaces by generalizing planar Delaunay triangulation. <p> This last step may use triangles contained in the cross-sectional planes; indeed this capability is necessary in order to form a surface that does not intersect itself [97]. A number of researchers [51, 84, 103, 191] have worked on meshing curved surfaces. Chew <ref> [51] </ref> has extended his two-dimensional mesh generator (Section 2.3.1) to curved surfaces by generalizing planar Delaunay triangulation. He defines the circumcircle of a triangle to be the intersection of the curved surface with a sphere that has its center on the surface and passes through the triangle's vertices.
Reference: [52] <author> N. Chiba and T. Nishizeki. </author> <title> Arboricity and subgraph listing algorithms. </title> <note> SIAM J. Computing 14 (1985) 210-223. </note>
Reference-contexts: The time bound depends on the number 18 of triangles in the polygon; below we show that few edges imply few triangles, a fact previously observed by Chiba and Nishizeki <ref> [52] </ref>. Lemma 7. A graph with E edges has at most O (E 3=2 ) triangles. Proof: Divide the vertices into two classes: heavy vertices with degree at least p E, and light vertices with smaller degree.
Reference: [53] <author> K. Clarkson. </author> <title> Approximation algorithms for planar traveling salesman tours and minimum-length triangulations. </title> <booktitle> In Proc. 2nd ACM-SIAM Symp. Disc. Algorithms (1991) 17-23. </booktitle>
Reference-contexts: This partitions the plane into polygons, that can be triangulated optimally using dynamic programming. Lin-gas did not consider using Steiner points, and his algorithm does not yield a good 34 approximation to the MWST. Clarkson <ref> [53] </ref> extended Lingas's approach, and gave the first nontrivial MWST approximation. (It can be shown that any triangulation approximates the MWST within a factor of O (n).) Clarkson showed that any polygon has a Steiner triangulation with total edge length O (log n) times the polygon's perimeter. (The same result can <p> an efficient algorithm for approximating the MWST of an arbitrary nonconvex polygon? Using his quadtree characterization of the MWST length, Eppstein also proves some further properties of the MWST of a point set. * The MWST has total edge length O (log n) times that of the minimum spanning tree <ref> [53] </ref>. For any n, there exist point sets for which the MWST has edge length (log n) times the minimum spanning tree length. * For any n, there exist point sets for which the MWT has total length (n) times the MWST length.
Reference: [54] <author> A.K. Cline and R.J. Renka. </author> <title> A constrained two-dimensional triangulation and the so-lution of closest node problems in the presence of barriers. </title> <note> SIAM J. Numer. Analysis 27 (1990) 1305-1321. </note>
Reference-contexts: We consider this conforming Delaunay triangulation problem in Section 2.3.5. The alternative approach generalizes the definition of the DT in order to force certain edges (the boundary) into the triangulation. Such a triangulation is known as a constrained Delaunay triangulation (CDT) <ref> [49, 54, 56, 129, 131, 198] </ref>. For generality, we allow the domain to be a planar straight line graph. The CDT of a polygonal region may be obtained by treating the polygon as a PSLG, and then removing all CDT edges exterior to the polygon.
Reference: [55] <author> E.F. D'Azevedo and R.B. Simpson. </author> <title> On optimal interpolation triangle incidences. </title> <note> SIAM J. </note> <institution> Sci. Stat. Comput. </institution> <month> 10 </month> <year> (1989) </year> <month> 1063-1075. </month>
Reference-contexts: For some applications|such as modeling diffusion in a nonisotropic medium|size is appropriately measured by the area of the "min-containment circle", after the domain has been transformed by an appropriate affine map <ref> [55] </ref>. (Sizes of elements are typically used to weight finite element residuals in a-posteriori error estimates, in order to find regions of the mesh in need of refinement [6, 37].) 2.2.1. <p> The flip algorithm also gives a number of useful optimality properties of the CDT. The min-containment circle of a triangle t is the smallest circle containing t. Theorem 1. Of all triangulations of a PSLG, the CDT (1) minimizes the largest circumcircle; (2) minimizes the largest min-containment circle <ref> [55, 176] </ref>; and (3) maximizes the minimum angle in the triangulation [128]. Proof: Each of these properties is improved by flipping a reversed quadrilateral. The optimal triangulation cannot be improved, so it has no reversed quadrilaterals, and hence by Lemma 3 must be the CDT. <p> Local, structured meshes generate interior Steiner points. The method then computes Delaunay triangulations in locally transformed regions in order to generate long, thin|but not overly obtuse| triangles oriented with the flow. Such a triangulation is an especially efficient mesh for laminar flows. (See <ref> [55, 171] </ref> for other stretched triangulations.) 2.4.5. Mesh Refinement A number of researchers have taken mesh refinement as the central step in mesh generation itself [14, 89, 179]. <p> Otherwise, the min-containment sphere circumscribes a lower-dimensional face of t. For example, in two dimensions, the min-containment sphere is either the circumcircle or the diameter circle of the longest edge. Rajan proved the following, which generalizes a result of D'Azevedo and Simpson for the planar case <ref> [55] </ref>. Theorem 15 (Rajan [176]). The Delaunay triangulation is the triangulation that minimizes the maximum radius of a min-containment sphere. Proof Sketch: Lift the points to the paraboloid (x; y; z; x 2 + y 2 + z 2 ).
Reference: [56] <author> L. De Floriani, B. Falcidieno, and C. Pienovi. </author> <title> Delaunay-based representation of surfaces defined over arbitrarily shaped domains. Computer Vision, Graphics, </title> <booktitle> and Image Processing 32 (1985) 127-140. </booktitle>
Reference-contexts: We consider this conforming Delaunay triangulation problem in Section 2.3.5. The alternative approach generalizes the definition of the DT in order to force certain edges (the boundary) into the triangulation. Such a triangulation is known as a constrained Delaunay triangulation (CDT) <ref> [49, 54, 56, 129, 131, 198] </ref>. For generality, we allow the domain to be a planar straight line graph. The CDT of a polygonal region may be obtained by treating the polygon as a PSLG, and then removing all CDT edges exterior to the polygon. <p> We say that f T interpolates S. The question arises: which triangulations are good for interpolation? This question has been discussed in the literature <ref> [16, 56, 66, 128, 195] </ref>. Rippa [177] recently proved a surprising result. Regardless of the input elevations, the Delaunay triangulation gives an interpolating surface, or elevated triangulation, optimal in a certain least energy sense. Theorem 12 (Rippa [177]). <p> Rippa's theorem states that the sum of these contributions over all triangles is minimized by the Delaunay triangulation. The proof of Rippa's theorem is an intricate calculation showing that the flip procedure cannot increase the integral. Hence the CDT is also an optimal interpolating surface. (De Floriani et al. <ref> [56] </ref> had previously proposed the use of the CDT for this purpose.) Rippa and Schiff [178] show that the minimization above corresponds to the energy functional associated with the nonhomogeneous Laplace equation.
Reference: [57] <author> L. De Floriani, B. Falcidieno, C. Pienovi, and G. Nagy. </author> <title> On sorting triangles in a Delaunay tessellation. </title> <note> Algorithmica 6 (1991) 522-532. </note>
Reference-contexts: The DT contains the minimum spanning tree; the distance between vertices in the DT is O (1) times their distance in the plane [48, 65, 122]; and, from any viewpoint, DT triangles are acyclically ordered by distance <ref> [57, 71] </ref>.) For very complex domains, an O (n 2 )-time algorithm for computing the CDT may be too slow. Chew [49] and others [198, 218] have improved this bound to O (n log n). Theorem 2 (Chew [49]). The CDT can be constructed in time O (n log n).
Reference: [58] <author> B. </author> <title> Delaunay. Sur la sphere vide. </title> <journal> Izvestia Akademia Nauk SSSR, </journal> <note> VII Seria, Otdelenie Matematicheskii i Estestvennyka Nauk 7 (1934) 793-800. </note>
Reference-contexts: The converse is also true, giving an example of a local optimization leading to global optimality. Lemma 3. If no quadrilaterals are reversed, the triangulation is the CDT. Proof: The idea behind this proof can be traced back to Delaunay <ref> [58] </ref>. We show that the circumcircle of each triangle abc contains no vertex d. Therefore each edge is a correct Delaunay edge. Suppose such a point d does exist for some triangle abc. The proof of Lemma 2 shows that we may choose d visible to a.
Reference: [59] <author> T. Dey. </author> <title> Triangulation and CSG representation of polyhedra with arbitrary genus. </title> <booktitle> In Proc. 7th ACM Symp. Comp. Geometry (1991) 364-372. </booktitle>
Reference-contexts: Recently, Chazelle and Shouraboura [47] used the Gauss-Bonnet formula to show that the genus of a polyhedron is bounded by the number of reflex edges, thereby extending the same O (n + r 2 ) bound to non-simple polyhedra. 54 Dey <ref> [59] </ref> and Hershberger and Snoeyink [107] analyze another algorithm| called notch cutting [42]|for convex partition and tetrahedralization of non-simple polyhedra. This algorithm incrementally bisects reflex dihedrals with planes, extending the plane in all directions away from the reflex edge until it first hits the polyhedron boundary.
Reference: [60] <author> T. Dey, C. Bajaj, and K. Sugihara. </author> <title> On good triangulations in three dimensions. </title> <note> Int. J. Comp. Geometry and Applications 2 (1992) 75-95. </note>
Reference-contexts: Bounded aspect ratio is equivalent to no small d-angles. We now give descriptive names to the six different types of three-dimensional simplices, classified according to the types of bad angles allowed. (See <ref> [10, 60] </ref> for similar classifications.) * Round. A round tetrahedron has no bad angles of any kind. * Needle. A needle has one small solid angle, but no small or large dihedrals. 60 * Wedge. A wedge has small but not large dihedrals and no large angles of any kind. <p> What is known on bounded-aspect-ratio triangulation in three dimensions? Bern et al. [25] use octrees (or in general 2 d -ary trees) to triangulate point set input, using only a constant times the minimum number of bounded-aspect-ratio tetrahedra. Dey, Bajaj, and Sugihara <ref> [60] </ref> generalize Chew's mesh generation algorithm to three dimensions. For point sets or convex polyhedra with point holes, this method avoids all bad tetrahedra except slivers.
Reference: [61] <author> T. Dey, M.B. Dillencourt, and S.K. Ghosh. </author> <title> Triangulating with high connectivity. </title> <type> Tech. Report 94-24, </type> <institution> Dept. of Inform. and Comp. Science, UC-Irvine, </institution> <year> 1994. </year> <note> To appear in 6th Canad. Conf. Comp. Geometry. </note>
Reference-contexts: Open Problem 1. Can the minimum weight triangulation of a convex polygon be constructed in time o (n 3 )? 19 2.2.4. Other Optimal Triangulations A few authors have considered problems of optimizing combinatorial properties of triangulations such as their degree [113] or connectivity <ref> [61] </ref>. Most of the remaining work on optimal triangulation has used edge length as a quality measure. As mentioned above, edge length can be used as a simple measure of triangle size, which in turn affects finite element approximation error.
Reference: [62] <author> M.T. Dickerson, R.L.S. Drysdale, S.A. McElfresh, E. Welzl. </author> <title> Fast greedy triangulation algorithms. </title> <booktitle> In Proc. 10th ACM Symp. Comp. Geometry (1994) 211-220. </booktitle>
Reference-contexts: This triangulation lexicographically minimizes the sorted vector of edge lengths. For arbitrary point sets the greedy triangulation can be computed in time O (n 2 ) by dynamic maintenance of a CDT [135]. For convex polygons [135] or random point sets <ref> [62] </ref> the time bound can be improved to O (n). Eppstein [80] obtained another min-min triangulation result: the farthest-point Delaunay triangulation of a convex polygon minimizes the minimum angle. This triangulation can again be constructed in time O (n) [1].
Reference: [63] <author> M.B. Dillencourt and W.D. Smith. </author> <title> A simple method for resolving degeneracies in Delaunay triangulations. </title> <booktitle> In Proc. 20th Int. Colloq.| Automata, Languages, and Programming. </booktitle> <publisher> (1993) Springer-Verlag LNCS 700, </publisher> <pages> 177-188. </pages>
Reference-contexts: Alternatively, the triangulation may be completed after the computation. Mount and Saalfeld [159] show how to quickly complete a special-position DT or CDT to maintain the lexicographically maximum angle property. Dillencourt and Smith <ref> [63] </ref> prove that most completions can be realized as the DT of a small perturbation of the input. Unfortunately it is possible for the angle-maximizing completion to be one of the exceptions.
Reference: [64] <author> H. Djidjev and A. Lingas. </author> <title> On computing the Voronoi diagram for restricted planar figures. </title> <booktitle> In Proc. 2nd Worksh. Algorithms and Data Structures. </booktitle> <publisher> Springer-Verlag LNCS 519 (1991) 54-64. </publisher>
Reference-contexts: The algorithm is based on the lifting transformation, and it also solves the problem for certain other types of point sets. In particular, it can update the DT after the removal of a vertex or edge. Djidjev and Lingas <ref> [64] </ref> devised a linear-time algorithm to compute the DT of a more general special case called a "monotone histogram". Finally, Klein and Lingas [126] gave a linear-time randomized algorithm for the CDT of a simple polygon. 2.2.2.
Reference: [65] <author> D. Dobkin, S. Friedman, and K. Supowit. </author> <title> Delaunay graphs are almost as good as complete graphs. </title> <journal> Disc. and Comp. </journal> <note> Geometry 5 (1990) 399-407. </note>
Reference-contexts: The DT contains the minimum spanning tree; the distance between vertices in the DT is O (1) times their distance in the plane <ref> [48, 65, 122] </ref>; and, from any viewpoint, DT triangles are acyclically ordered by distance [57, 71].) For very complex domains, an O (n 2 )-time algorithm for computing the CDT may be too slow. Chew [49] and others [198, 218] have improved this bound to O (n log n).
Reference: [66] <author> D. Dobkin, S. Levy, W. Thurston, and A. Wilks. </author> <title> Contour tracing by piecewise linear approximations. </title> <journal> ACM Trans. </journal> <note> on Graphics 9 (1990) 389-423. </note>
Reference-contexts: We say that f T interpolates S. The question arises: which triangulations are good for interpolation? This question has been discussed in the literature <ref> [16, 56, 66, 128, 195] </ref>. Rippa [177] recently proved a surprising result. Regardless of the input elevations, the Delaunay triangulation gives an interpolating surface, or elevated triangulation, optimal in a certain least energy sense. Theorem 12 (Rippa [177]).
Reference: [67] <author> R.D. Duppe and H.J. Gottschalk. </author> <title> Automatische Interpolation von Isolinien bei willkurlichen Stutzpunkten. </title> <note> Allgemeine Vermessungsnachrichten 77 (1970) 423-426. </note>
Reference-contexts: Perhaps the most longstanding open problem in computational geometry is the complexity of the minimum weight triangulation (MWT) for arbitrary point sets <ref> [67] </ref>. (Recall that the MWT asks for the minimum total edge length.) Indeed, early authors called this the "optimal triangulation" problem. Garey and Johnson [92] included MWT in their list of famous problems neither known to be NP-complete nor known to be solvable in polynomial time.
Reference: [68] <author> R.A. Dwyer. </author> <title> Higher-dimensional Voronoi diagrams in linear expected time. </title> <journal> Disc. and Comp. </journal> <note> Geometry 6 (1991) 343-367. </note>
Reference-contexts: Fortune [87, 88] invented an elegant sweepline algorithm. Guibas, Knuth, and Sharir [101] gave a simple, randomized incremental algorithm. (For a simpler analysis of this algorithm see [162, 199].) Maus [149] gave an algorithm for random points with expected linear running time; see also <ref> [27, 68, 152] </ref> for expected case analyses. The typical domain for mesh generation, however, is not a point set, but a polygonal region. <p> Watson's algorithm inserts points in sorted order by one coordinate, testing all old circumspheres that intersect the current sweep plane. Bowyer includes evidence that his algorithm runs in time O (n 4=3 ) for a random point set. Dwyer <ref> [68] </ref> gives a linear-expected-time algorithm for random points in the unit ball. Joe [115] and Rajan [176] generalize the flip algorithm for DT construction. In three dimensions, flips involve sets of five points, forming a tetrahedral bipyramid. <p> We now discuss problems in which Steiner points are used to improve the quality of the solution. 3.3.1. Reducing Delaunay Triangulations The Delaunay triangulation of a set of n points in IR 3 may have (n 2 ) tetrahedra, though a "typical" point set has only O (n) <ref> [68] </ref>.
Reference: [69] <author> N. Dyn, D. Levin, and S. Rippa. </author> <title> Data dependent triangulations for piecewise linear interpolation. </title> <note> IMA J. Numer. Analysis 10 (1990) 137-154. </note>
Reference-contexts: The minimum height of a triangle relates to the quality of a curved-surface approximation [98], and to a key step in a new three-dimensional mesh generation algorithm [157]. Several other optimization criteria find application in interpolation <ref> [69, 178] </ref>. For a given element shape, approximation error grows with element size, which can be measured simply by maximum edge length [209] or by more complicated metrics. <p> We may think of the DT as giving the stretched membrane (a "drumhead") with least potential energy, among all elevated-triangulation membranes. Rippa and Schiff also discuss other energy functionals, and use the flip algorithm as a heuristic for their minimization. See <ref> [16, 69] </ref> for heuristic solutions to other interpolation problems. Bern et al. [23] recently considered the problem of finding the minimum slope interpolating surface for input points with elevations (an optimization criterion mentioned in [220]). <p> For point set data with elevations, can a triangulation with least-sharp sharpest dihedral angle be computed in polynomial time? (See <ref> [69] </ref>.) 2.5.2. Surfaces for three-dimensional models Here the input is a "solid model" and the output is a triangulated surface. This step often precedes three-dimensional mesh generation, especially in advancing-front mesh generators. Solid models take a number of rather varied forms, which complicates even the definition of problems.
Reference: [70] <author> H. Edelsbrunner. </author> <title> Algorithms in Combinatorial Geometry. </title> <publisher> Springer-Verlag, </publisher> <year> 1987. </year> <month> 69 </month>
Reference-contexts: For more information on Delaunay triangulations and Voronoi diagrams, see the surveys by Fortune [88] and Aurenhammer [3]. There is a nice relationship between Delaunay triangulation and three-dimensional convex hulls <ref> [34, 70] </ref>. Lift each point of the input to a paraboloid in three-space by mapping the point with coordinates (x; y) to the point (x; y; x 2 + y 2 ). <p> Roughly speaking, an ff-shape generalizes the convex hull by replacing half-spaces with balls or complements of balls, with radius 1=ff <ref> [70, 74] </ref>. This generalization allows more faithful shape representation, but may have complexity (n 2 ). Another approach to shape representation, about which little is known, is to find an enclosing or interpolating polyhedron (without Steiner points) that is optimal for some criterion. The following problem is an example.
Reference: [71] <author> H. Edelsbrunner. </author> <title> An acyclicity theorem for cell complexes in d dimensions. </title> <address> Combi--natorica 18 (1990) 251-260. </address>
Reference-contexts: The DT contains the minimum spanning tree; the distance between vertices in the DT is O (1) times their distance in the plane [48, 65, 122]; and, from any viewpoint, DT triangles are acyclically ordered by distance <ref> [57, 71] </ref>.) For very complex domains, an O (n 2 )-time algorithm for computing the CDT may be too slow. Chew [49] and others [198, 218] have improved this bound to O (n log n). Theorem 2 (Chew [49]). The CDT can be constructed in time O (n log n).
Reference: [72] <author> H. Edelsbrunner and E.P. Mucke. </author> <title> Simulation of simplicity, a technique to cope with degenerate cases in geometric computations. </title> <journal> ACM Trans. </journal> <note> Graphics 9 (1990) 66-104. </note>
Reference-contexts: If the input is not in general position, some faces of the CDT may have more than three vertices, all on a common circle. To avoid this situation, the input can be slightly perturbed before computing the triangulation; Edelsbrunner and Mucke propose symbolic perturbations <ref> [72] </ref>. Alternatively, the triangulation may be completed after the computation. Mount and Saalfeld [159] show how to quickly complete a special-position DT or CDT to maintain the lexicographically maximum angle property.
Reference: [73] <author> H. Edelsbrunner and N.R. Shah. </author> <title> Incremental topological flipping works for regular triangulations. </title> <booktitle> In Proc. 8th ACM Symp. Comp. Geometry (1992) 43-52. </booktitle>
Reference-contexts: His procedure flips tetrahedra in the order corresponding to the changes in the convex hull of the lifted points as the new point is moved vertically down onto the paraboloid. Thus, Rajan's algorithm generalizes to higher-dimensional DT construction. Edelsbrunner and Shah <ref> [73] </ref> extended Joe's algorithm to higher dimensions and to regular triangulations of weighted points. Though the worst-case time bound for computing the three-dimensional DT must be (n 2 ), an "output-sensitive" algorithm runs much more quickly on simple input instances. <p> In three dimensions, however, the flip procedure may get stuck in a local optimum that is not a global optimum [115]. Joe [117], Rajan [176], and Edelsbrunner and Shah <ref> [73] </ref> have shown that, for the Delaunay criterion, special starting triangulations always lead to a global optimum. Joe has also used the flip procedure to locally maximize the minimum solid angle [118]. Starting from the Delaunay triangulation, he significantly improved aspect ratios, while also slightly decreasing the number of tetrahedra.
Reference: [74] <author> H. Edelsbrunner and N.R. Shah. </author> <title> Triangulating topological spaces. </title> <booktitle> In Proc. 10th ACM Symp. Comp. Geometry (1994) 285-292. </booktitle>
Reference-contexts: Roughly speaking, an ff-shape generalizes the convex hull by replacing half-spaces with balls or complements of balls, with radius 1=ff <ref> [70, 74] </ref>. This generalization allows more faithful shape representation, but may have complexity (n 2 ). Another approach to shape representation, about which little is known, is to find an enclosing or interpolating polyhedron (without Steiner points) that is optimal for some criterion. The following problem is an example. <p> As before, the resulting mesh has all angles greater than 30 ffi , but now triangle sizes are controlled locally by deviation 49 from the curved surface. See Figure 32. Edelsbrunner and Shah <ref> [74] </ref> recently gave a more formal development of Delaunay triangulation restricted to a subspace such as a curved surface. In their scheme, the restricted DT is the dual of the diagram obtained by intersecting the Voronoi diagram with the subspace.
Reference: [75] <author> H. Edelsbrunner and T.S. Tan. </author> <title> A quadratic time algorithm for the minmax length triangulation. </title> <booktitle> In Proc. 32nd IEEE Symp. Foundations of Comp. </booktitle> <address> Science (1991) 414-423. </address>
Reference-contexts: Most of the remaining work on optimal triangulation has used edge length as a quality measure. As mentioned above, edge length can be used as a simple measure of triangle size, which in turn affects finite element approximation error. Edelsbrunner and Tan <ref> [75] </ref> considered the triangulation minimizing the maximum edge length. They showed that this triangulation (like the DT) contains the edges of the minimum spanning tree.
Reference: [76] <author> H. Edelsbrunner and T.S. Tan. </author> <title> An upper bound for conforming Delaunay triangulations. </title> <journal> Disc. and Comp. </journal> <note> Geometry 10 (1993) 197-213. </note>
Reference-contexts: But this is no guarantee that the algorithm uses a minimum number of Steiner points|indeed, Nackman and Srinivasan give an example of constant complexity for which their method requires a nonconstant number of Steiner points. In a theoretical breakthrough, Edelsbrunner and Tan <ref> [76] </ref> gave an algorithm that uses only a polynomial number of Steiner points, regardless of the input geometry. Their algorithm places Steiner points in two stages, called the "blocking" and "propagation" phases. <p> This phase takes any not-yet-covered segment ab and attempts to add its diameter circle. If the diameter circle encloses another vertex c visible to ab, the orthogonal projection of c is added to ab, forming two shorter segments. See Figure 22. Theorem 11 (Edelsbrunner and Tan <ref> [76] </ref>). The algorithm just sketched gives a set of O (n 3 ) points for which (a completion of) the Delaunay triangulation conforms to all input edges.
Reference: [77] <author> H. Edelsbrunner, </author> <title> F.P. Preparata, and D.B. West. Tetrahedrizing point sets in three dimensions. </title> <journal> J. Symbolic Comp. </journal> <month> 10 </month> <year> (1990) </year> <month> 335-347. </month>
Reference-contexts: This bound is within a factor of two of optimal, as any tetrahedralization of a simple polyhedron has at least n 3 tetrahedra. Edelsbrunner, Preparata, and West <ref> [77] </ref> show how to construct a linear-complexity tetrahedralization of point sets in general position. After tetrahedraliz-ing the convex hull with only linear complexity as above, interior points are added one at a time. When a point is added, the tetrahedron containing it is replaced by four smaller tetrahedra.
Reference: [78] <author> H. Edelsbrunner, T.S. Tan, and R. Waupotitsch. </author> <title> A polynomial time algorithm for the minmax angle triangulation. </title> <journal> SIAM J. Sci. Stat. Comp. </journal> <month> 13 </month> <year> (1992) </year> <month> 994-1008. </month>
Reference-contexts: A different approach is to generalize the local improvement procedure. This reduces the number of local optima, as a triangulation without an edge to flip may still admit the generalized move. 14 This section describes one such generalization, called edge insertion, introduced by Edelsbrunner, Tan, and Waupotitsch <ref> [78] </ref> for the minmax angle problem. Consider adding a new edge e to some existing triangulation T of a PSLG. Edge e crosses other edges in T , causing them to be removed. At this point there will be two simple polygons without diagonals, one on each side of e. <p> Because of the increased number of possibilities, intuitively edge insertion should reach better local optima than edge flipping, but take longer to do so. Edelsbrunner et al. <ref> [78] </ref> showed that edge insertion can in fact compute a global optimum that edge flipping cannot: the triangulation minimizing the maximum angle. <p> If the strong anchor property holds and insertions are performed in a certain order, then all crossed edges|not just the one in the worst triangle|can be eliminated in a successful insertion; then the running time can be improved to O (n 2 log n) <ref> [23, 78] </ref>. Theorem 3 (Edelsbrunner et al. [78], Bern et al. [23]). A triangulation minimizing the maximum angle, or maximizing the minimum height, can be computed 16 in time O (n 2 log n). <p> Theorem 3 (Edelsbrunner et al. <ref> [78] </ref>, Bern et al. [23]). A triangulation minimizing the maximum angle, or maximizing the minimum height, can be computed 16 in time O (n 2 log n). A triangulation minimizing the maximum distance of a triangle from its circumcenter can be found in time O (n 3 ).
Reference: [79] <author> H. ElGindy and D. Avis. </author> <title> A linear algorithm for computing the visibility polygon from a point. </title> <journal> J. </journal> <note> Algorithms 2 (1981) 186-197. </note>
Reference-contexts: Let E be the number of edges in the visibility graph. The visibility graph can be computed in time O (n 2 ) by traversing the boundary of the polygon once per vertex, performing a simple stack algorithm in each traversal <ref> [79, 116, 120, 130] </ref>. A more complicated algorithm reduces the time to O (n log n + E) [106]. We can easily improve the dynamic programming algorithm from O (n 3 ) to O (En), but we can even do a little better.
Reference: [80] <author> D. Eppstein. </author> <title> The farthest point Delaunay triangulation minimizes angles. </title> <journal> Comp. </journal> <note> Geometry Theory and Applications 1 (1992) 143-148. </note>
Reference-contexts: For arbitrary point sets the greedy triangulation can be computed in time O (n 2 ) by dynamic maintenance of a CDT [135]. For convex polygons [135] or random point sets [62] the time bound can be improved to O (n). Eppstein <ref> [80] </ref> obtained another min-min triangulation result: the farthest-point Delaunay triangulation of a convex polygon minimizes the minimum angle. This triangulation can again be constructed in time O (n) [1]. The farthest-point DT dualizes the farthest-point Voronoi diagram, a data structure for finding the farthest input point from a query point.
Reference: [81] <author> D. Eppstein. </author> <title> Approximating the minimum weight triangulation. </title> <journal> Disc. and Comp. </journal> <note> Geometry 11 (1994) 163-191. </note>
Reference-contexts: Clarkson's result was improved by Eppstein <ref> [81] </ref>, who gave a constant-factor approximation to the MWST. Eppstein showed that the quadtree triangulation algorithm of Bern et al. (Section 2.3.1), which was designed for angle bounds, actually gives such an approximation.
Reference: [82] <author> D.A. </author> <title> Field. Implementing Watson's algorithm in three dimensions. </title> <booktitle> In Proc. 2nd ACM Symp. Comp. Geometry (1986) 246-259. </booktitle>
Reference-contexts: Coupled with an algorithm for computing four-dimensional convex hulls [197], this gives a worst-case optimal, quadratic-time algorithm to compute the DT. There are also direct algorithms. Bowyer [33] and Watson <ref> [219, 82] </ref> gave incremental algorithms that are quite popular in practice. Watson's algorithm inserts points in sorted order by one coordinate, testing all old circumspheres that intersect the current sweep plane. Bowyer includes evidence that his algorithm runs in time O (n 4=3 ) for a random point set. <p> And, getting back to more realistic mesh generation questions, no algorithms are known for nonobtuse tetrahedralization of polyhedra. 3.3.3. Bounded-Aspect-Ratio Mesh Generation The most commonly used definition of the aspect ratio of a simplex is the ratio of the radii of the circumscribed sphere to the inscribed sphere <ref> [82] </ref>. Bounded aspect ratio is equivalent to no small d-angles. We now give descriptive names to the six different types of three-dimensional simplices, classified according to the types of bad angles allowed. (See [10, 60] for similar classifications.) * Round.
Reference: [83] <author> D.A. </author> <title> Field. Laplacian smoothing and Delaunay triangulations. </title> <journal> Comm. </journal> <note> in Applied Numer. Analysis 4 (1988) 709-712. </note>
Reference-contexts: A midpoint is assigned the average feature size of the endpoints. Neighboring faces are split in two to correct subdivision points. Splitting is followed by a few cycles of Delaunay flipping and weighted Laplacian smoothing, and the refinement cycle repeats. (Field <ref> [83] </ref> also interleaves Laplacian smoothing and Delaunay flipping.) As the boundary triangles refine, they are parametrically "pulled" to the correct geometry (which may include spline curves), thereby computing a valid boundary element mesh at the same time as the rest of the mesh.
Reference: [84] <author> D.A. </author> <title> Field. Delaunay criteria for triangulating surfaces. In Curves and Surfaces in Comp. Vision and Graphics III. </title> <booktitle> Proc. SPIE 1830 (1992) 237-246. </booktitle>
Reference-contexts: This last step may use triangles contained in the cross-sectional planes; indeed this capability is necessary in order to form a surface that does not intersect itself [97]. A number of researchers <ref> [51, 84, 103, 191] </ref> have worked on meshing curved surfaces. Chew [51] has extended his two-dimensional mesh generator (Section 2.3.1) to curved surfaces by generalizing planar Delaunay triangulation.
Reference: [85] <author> D.A. Field and W.D. Smith. </author> <title> Graded tetrahedral finite element meshes. </title> <journal> Int. J. Nu-mer. Meth. Eng. </journal> <month> 31 </month> <year> (1991) </year> <month> 413-425. </month>
Reference-contexts: Field and Smith <ref> [85] </ref> and others [158, 166] suggest the use of a tetrahedral octree, built by recursively cutting a "bcc tetrahedron" (body-centered cubic) into eight copies of itself. Tetrahedra spawn fewer boundary patterns than hexahedra. 63 3.4.3. Polyhedron Decomposition Cavendish, Field, and Frey [41] developed one of the first three-dimensional mesh generators.
Reference: [86] <author> R.A. Finkel and J.L. Bentley. </author> <title> Quad trees: a data structure for retrieval on composite keys. </title> <journal> Acta Inform. </journal> <month> 4 </month> <year> (1974) </year> <month> 1-9. </month>
Reference-contexts: Unlike a uniform mesh, a 22 quadtree can produce elements of widely varying sizes, resulting in greater accuracy and efficiency. For example, in fluid flow simulations small triangles can be used in turbulent regions for accuracy, and large triangles in smooth regions for efficiency. Definition 7. A quadtree <ref> [86, 187, 188] </ref> is a recursive partition of a region of the plane into axis-aligned squares. One square, the root, covers the entire region. A square can be divided into four child squares, by splitting it with horizontal and vertical line segments through its center.
Reference: [87] <author> S. Fortune. </author> <title> A sweepline algorithm for Voronoi diagrams. </title> <note> Algorithmica 2 (1987) 153-174. </note>
Reference-contexts: The relation between Delaunay triangulation and convex hulls allows the use of any O (n log n)-time three-dimensional convex hull algorithm, such as that of Preparata and Hong [173]. Fortune <ref> [87, 88] </ref> invented an elegant sweepline algorithm. Guibas, Knuth, and Sharir [101] gave a simple, randomized incremental algorithm. (For a simpler analysis of this algorithm see [162, 199].) Maus [149] gave an algorithm for random points with expected linear running time; see also [27, 68, 152] for expected case analyses.
Reference: [88] <author> S. Fortune. </author> <title> Voronoi diagrams and Delaunay triangulations. In Computing in Eu-clidean Geometry, </title> <editor> F.K. Hwang and D.Z. Du, eds., </editor> <publisher> World Scientific, </publisher> <year> 1992. </year>
Reference-contexts: One important generalization, known as power diagrams and regular triangulations, replaces the distance to an input point by the squared distance minus a real-valued weight. For more information on Delaunay triangulations and Voronoi diagrams, see the surveys by Fortune <ref> [88] </ref> and Aurenhammer [3]. There is a nice relationship between Delaunay triangulation and three-dimensional convex hulls [34, 70]. Lift each point of the input to a paraboloid in three-space by mapping the point with coordinates (x; y) to the point (x; y; x 2 + y 2 ). <p> The relation between Delaunay triangulation and convex hulls allows the use of any O (n log n)-time three-dimensional convex hull algorithm, such as that of Preparata and Hong [173]. Fortune <ref> [87, 88] </ref> invented an elegant sweepline algorithm. Guibas, Knuth, and Sharir [101] gave a simple, randomized incremental algorithm. (For a simpler analysis of this algorithm see [162, 199].) Maus [149] gave an algorithm for random points with expected linear running time; see also [27, 68, 152] for expected case analyses. <p> Techniques recently developed by Matousek [148] for half-space range queries give an algorithm with running time O (n 4=3+* + k log n), where k is the complexity of the DT. See Fortune's survey <ref> [88] </ref> for more details on three-dimensional DT algorithms, including some important implementation issues. Because the DT possesses so many optimality properties in two dimensions, geometers long suspected that it should optimize something in three dimensions.
Reference: [89] <author> W.H. Frey. </author> <title> Selective refinement: a new strategy for automatic node placement in graded triangular meshes. </title> <journal> Int. J. Numer. Meth. Eng. </journal> <volume> 24 (1987) 2183-2200. </volume> <pages> 70 </pages>
Reference-contexts: Such a triangulation is an especially efficient mesh for laminar flows. (See [55, 171] for other stretched triangulations.) 2.4.5. Mesh Refinement A number of researchers have taken mesh refinement as the central step in mesh generation itself <ref> [14, 89, 179] </ref>. For example, the algorithms of Chew [49] and Rup-pert [183], discussed in the last section, refine the constrained Delaunay triangulation by adding centers of circumcircles. An earlier, somewhat related, heuristic method is due to Frey [89]. <p> For example, the algorithms of Chew [49] and Rup-pert [183], discussed in the last section, refine the constrained Delaunay triangulation by adding centers of circumcircles. An earlier, somewhat related, heuristic method is due to Frey <ref> [89] </ref>. In Frey's method, Steiner points are initially added to the boundary according to a "spacing function" that approximates local feature size.
Reference: [90] <author> W.H. Frey and D.A. </author> <title> Field. Mesh relaxation: a new technique for improving trian-gulations. </title> <journal> Int. J. Numer. Meth. Eng. </journal> <month> 31 </month> <year> (1991) </year> <month> 1121-1133. </month>
Reference-contexts: The success of the flip algorithm for Delaunay triangulation has led to the use of edge flipping (with the appropriate definitions of reversed quadrilateral) for finding triangulations that approximately optimize other criteria, such as vertex degree <ref> [90] </ref>, maximum angle [104], total edge length [220], or the ratio of the areas of inscribed circle and triangle [16]. Edge flipping to improve these criteria, however, will not usually compute a global optimum. <p> A variation weights neighbor vertices by the areas of their surrounding elements. Laplacian smoothing is applied successively to each interior node of the mesh, for several (four or five) rounds. See A second technique, called mesh relaxation by Frey and Field <ref> [90] </ref>, flips edges to regularize degrees. Removing high- and low-degree vertices makes subsequent Laplacian smoothing more effective. A quadrilateral diagonal is flipped if the sum of its endpoints' degrees exceeds the opposing diagonal's sum by more than two.
Reference: [91] <author> I. Fried. </author> <title> Condition of finite element matrices generated from nonuniform meshes. </title> <journal> AIAA J. </journal> <month> 10 </month> <year> (1972) </year> <month> 219-221. </month>
Reference-contexts: A number of quality measures find motivation in finite element methods. The numerical condition of matrices in a finite element computation is related to the minimum angle in the triangulation. The error of a finite element approximation is 7 also related to the minimum angle <ref> [91, 209] </ref>, and even more closely related to the maximum angle [5, 112]. The minimum height of a triangle relates to the quality of a curved-surface approximation [98], and to a key step in a new three-dimensional mesh generation algorithm [157].
Reference: [92] <author> M.R. Garey and D.S. Johnson. </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness. W.H. </title> <publisher> Freeman, </publisher> <year> 1979. </year>
Reference-contexts: Therefore it can be found in time O (n 3 ), by first computing the minimum spanning tree and then triangulating each remaining polygon using dynamic programming. They reduced this time to O (n 2 ). The greedy triangulation <ref> [92, 135] </ref> can be found by adding edges one at a time, always choosing the shortest edge that is not already crossed. This triangulation lexicographically minimizes the sorted vector of edge lengths. <p> Perhaps the most longstanding open problem in computational geometry is the complexity of the minimum weight triangulation (MWT) for arbitrary point sets [67]. (Recall that the MWT asks for the minimum total edge length.) Indeed, early authors called this the "optimal triangulation" problem. Garey and Johnson <ref> [92] </ref> included MWT in their list of famous problems neither known to be NP-complete nor known to be solvable in polynomial time. If the MWT problem is generalized slightly, so that the weight of an edge is an arbitrary function unrelated to its length, minimum weight triangulation becomes NP-complete [140]. <p> The question arises: can we find an efficient algorithm that uses the minimum number of Steiner points? Ruppert and Seidel [184] give a negative answer to this question. They show that testing whether Steiner points are necessary to triangulate a given polyhedron is NP-complete (see <ref> [92] </ref>), even for star-shaped polyhedra (which can trivially be triangulated with a single Steiner point). They similarly prove that, for any k, it is NP-hard to test whether k Steiner points suffice. The following open question asks for an approximation algorithm. Open Problem 9.
Reference: [93] <author> M.R. Garey, D.S. Johnson, F.P. Preparata, and R.E. Tarjan. </author> <title> Triangulating a simple polygon. </title> <journal> Inform. Process. Lett. </journal> <month> 7 </month> <year> (1978) </year> <month> 175-179. </month>
Reference-contexts: Now the following question arises: how quickly can we compute a triangulation? This problem attracted more than a decade of intensive research. It is not difficult to improve the running time to O (n log n) <ref> [93, 174] </ref>. For many geometric problems there are matching (n log n) lower bounds, but none was known in this case. There were also many faster special case algorithms [45, 93, 108]. <p> It is not difficult to improve the running time to O (n log n) [93, 174]. For many geometric problems there are matching (n log n) lower bounds, but none was known in this case. There were also many faster special case algorithms <ref> [45, 93, 108] </ref>. After Tarjan and Van Wyk [211] broke through to O (n log log n), Chazelle [43] ended the quest by announcing a linear-time triangulation algorithm for simple polygons. 6 We now discuss the other types of input domains.
Reference: [94] <author> P.L. George, F. Hecht, and E. Saltel. </author> <title> Constraint of the boundary and automatic mesh generation. </title> <booktitle> In Proc. 2nd Int. Conf. on Numer. Grid Generation in Comp. Fluid Mechanics (1988). </booktitle>
Reference: [95] <author> P.L. George, F. Hecht, and E. Saltel. </author> <title> Fully automatic mesh generator for 3D domains of any shape. Impact of Com. </title> <institution> in Sci. and Eng. </institution> <month> 2 </month> <year> (1990) </year> <month> 187-218. </month>
Reference-contexts: Heuristically Generated Three-Dimensional Meshes Most of the techniques for generating and improving two-dimensional meshes can be generalized to three dimensions, though not without some difficulties. See <ref> [9, 95, 144] </ref> for surveys discussing both structured and unstructured meshes primarily for fluid flow problems. Overall, three-dimensional unstructured mesh generation is still in its early stages of development. 3.4.1.
Reference: [96] <author> P.D. Gilbert. </author> <title> New results in planar triangulations. </title> <type> Report R-850, </type> <institution> Univ. Illinois Coordinated Science Lab (1979). </institution>
Reference: [97] <author> C. Gitlin, J. O'Rourke, and V. Subramanian. </author> <title> On reconstructing polyhedra from parallel slices. </title> <type> Tech. Report 025, </type> <institution> Dept. of Computer Science, Smith College, </institution> <year> 1993. </year>
Reference-contexts: This last step may use triangles contained in the cross-sectional planes; indeed this capability is necessary in order to form a surface that does not intersect itself <ref> [97] </ref>. A number of researchers [51, 84, 103, 191] have worked on meshing curved surfaces. Chew [51] has extended his two-dimensional mesh generator (Section 2.3.1) to curved surfaces by generalizing planar Delaunay triangulation.
Reference: [98] <author> C. Gold, T. Charters, and J. Ramsden. </author> <title> Automated contour mapping using triangular element data structures and an interpolant over each irregular triangular domain, </title> <booktitle> In Proc. Siggraph, </booktitle> <year> 1977, </year> <pages> 170-175. </pages>
Reference-contexts: The error of a finite element approximation is 7 also related to the minimum angle [91, 209], and even more closely related to the maximum angle [5, 112]. The minimum height of a triangle relates to the quality of a curved-surface approximation <ref> [98] </ref>, and to a key step in a new three-dimensional mesh generation algorithm [157]. Several other optimization criteria find application in interpolation [69, 178]. For a given element shape, approximation error grows with element size, which can be measured simply by maximum edge length [209] or by more complicated metrics. <p> Halt when all new angles are acceptable. 2.3.2. No Large Angles Many practitioners have suggested largest angle as an important quality measure for both mesh generation [17, 104] and surface interpolation <ref> [98, 100] </ref>.
Reference: [99] <author> J.E. Goodman and J. Pach. </author> <title> Cell decomposition of polytopes by bending. </title> <journal> Israel J. of Math. </journal> <month> 64 </month> <year> (1988) </year> <month> 129-138. </month>
Reference-contexts: The following open question asks for an approximation algorithm. Open Problem 9. Is there an efficient algorithm for triangulating any n-vertex polyhedron into O (m) tetrahedra, where m is the minimum possible number? Certain very special polyhedra can be triangulated without Steiner points. Goodman and Pach <ref> [99] </ref> prove that the region between two convex polyhedra (the convex hull of the union, minus the polyhedra) can be tetrahedralized into O (n 2 ) tetrahedra by lifting the polyhedra onto a folded plane in four dimensions. (This result generalizes to arbitrary dimension.) Bern [20] improves this bound to O
Reference: [100] <author> J. Gregory. </author> <title> Error bounds for linear interpolation on triangles, The Mathematics of Finite Elements and Application II , J. </title> <editor> R. Whiteman, ed., </editor> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1975, </year> <pages> 163-170. </pages>
Reference-contexts: Halt when all new angles are acceptable. 2.3.2. No Large Angles Many practitioners have suggested largest angle as an important quality measure for both mesh generation [17, 104] and surface interpolation <ref> [98, 100] </ref>.
Reference: [101] <author> L.J. Guibas, D.E. Knuth, and M. Sharir. </author> <title> Randomized incremental construction of Delaunay and Voronoi diagrams. </title> <note> Algorithmica 7 (1992) 381-413. Also in Proc. 17th Int. Colloq.| Automata, Languages, and Programming. Springer-Verlag LNCS 443 (1990) 414-431. </note>
Reference-contexts: The relation between Delaunay triangulation and convex hulls allows the use of any O (n log n)-time three-dimensional convex hull algorithm, such as that of Preparata and Hong [173]. Fortune [87, 88] invented an elegant sweepline algorithm. Guibas, Knuth, and Sharir <ref> [101] </ref> gave a simple, randomized incremental algorithm. (For a simpler analysis of this algorithm see [162, 199].) Maus [149] gave an algorithm for random points with expected linear running time; see also [27, 68, 152] for expected case analyses.
Reference: [102] <author> H. Hagen, M. Muller, and G.M. Nielson. </author> <title> Focus on Scientific Visualization, </title> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: The following problem is an example. Open Problem 8. For points in three dimensions, can an approximate min-surface-area enclosing polyhedron be found in polynomial time? A number of authors (see <ref> [15, 102, 196] </ref> for surveys) have considered the 48 problem of computing a triangulated surface interpolating a number of parallel planar cross-sections. Boissonat [31] takes each adjacent pair of cross-sections and uses planar conforming Delaunay triangulations to help compute a three-dimensional tetrahedralization spanning the pair.
Reference: [103] <author> B. Hamann. </author> <title> A data reduction scheme for triangulated surface. </title> <address> CAGD 11 (1994) 197-214. </address>
Reference-contexts: This last step may use triangles contained in the cross-sectional planes; indeed this capability is necessary in order to form a surface that does not intersect itself [97]. A number of researchers <ref> [51, 84, 103, 191] </ref> have worked on meshing curved surfaces. Chew [51] has extended his two-dimensional mesh generator (Section 2.3.1) to curved surfaces by generalizing planar Delaunay triangulation.
Reference: [104] <author> D. Hansford. </author> <title> The neutral case for the min-max triangulation. </title> <address> CAGD 7 (1990) 431-438. </address>
Reference-contexts: The success of the flip algorithm for Delaunay triangulation has led to the use of edge flipping (with the appropriate definitions of reversed quadrilateral) for finding triangulations that approximately optimize other criteria, such as vertex degree [90], maximum angle <ref> [104] </ref>, total edge length [220], or the ratio of the areas of inscribed circle and triangle [16]. Edge flipping to improve these criteria, however, will not usually compute a global optimum. <p> Halt when all new angles are acceptable. 2.3.2. No Large Angles Many practitioners have suggested largest angle as an important quality measure for both mesh generation <ref> [17, 104] </ref> and surface interpolation [98, 100].
Reference: [105] <author> L.R. Hermann. </author> <title> Laplacian-isoparametric grid generation scheme. </title> <journal> J. of the Eng. Mechanics Div. of the American Soc. </journal> <note> of Civil Engineers 102 (October 1976) 749-756. </note>
Reference-contexts: One very useful technique, dating to the 1960s [222], is called Laplacian smoothing because its repositioning formula can be derived from a finite difference approximation of Laplace's equation <ref> [105] </ref>. In Laplacian smoothing, a vertex v in the interior of the mesh is moved to the centroid (center of mass) of its neighbors. 38 The vertex should not be moved if the centroid lies outside the polygon formed by its neighbors.
Reference: [106] <author> J. Hershberger. </author> <title> Finding the visibility graph of a polygon in time proportional to its size. </title> <note> Algorithmica 4 (1989) 141-155. 71 </note>
Reference-contexts: The visibility graph can be computed in time O (n 2 ) by traversing the boundary of the polygon once per vertex, performing a simple stack algorithm in each traversal [79, 116, 120, 130]. A more complicated algorithm reduces the time to O (n log n + E) <ref> [106] </ref>. We can easily improve the dynamic programming algorithm from O (n 3 ) to O (En), but we can even do a little better.
Reference: [107] <author> J. Hershberger and J. Snoeyink. </author> <title> Convex polygons made from few lines and convex decompositions of polyhedra. </title> <booktitle> In Proc. 3rd Scand. Workshop on Algorithm Theory, </booktitle> <publisher> Springer-Verlag LNCS 621 (1992) 376-387. </publisher>
Reference-contexts: Recently, Chazelle and Shouraboura [47] used the Gauss-Bonnet formula to show that the genus of a polyhedron is bounded by the number of reflex edges, thereby extending the same O (n + r 2 ) bound to non-simple polyhedra. 54 Dey [59] and Hershberger and Snoeyink <ref> [107] </ref> analyze another algorithm| called notch cutting [42]|for convex partition and tetrahedralization of non-simple polyhedra. This algorithm incrementally bisects reflex dihedrals with planes, extending the plane in all directions away from the reflex edge until it first hits the polyhedron boundary.
Reference: [108] <author> S. Hertel and K. Mehlhorn. </author> <title> Fast triangulation of simple polygons. </title> <booktitle> 4th Conf. Foundations of Computation Theory . Springer-Verlag LNCS 158 (1983) 207-218. </booktitle>
Reference-contexts: It is not difficult to improve the running time to O (n log n) [93, 174]. For many geometric problems there are matching (n log n) lower bounds, but none was known in this case. There were also many faster special case algorithms <ref> [45, 93, 108] </ref>. After Tarjan and Van Wyk [211] broke through to O (n log log n), Chazelle [43] ended the quest by announcing a linear-time triangulation algorithm for simple polygons. 6 We now discuss the other types of input domains.
Reference: [109] <author> K. Ho-Le. </author> <title> Finite element mesh generation methods: a review and classification. </title> <booktitle> Computer-Aided Design 20 (1988) 27-38. </booktitle>
Reference-contexts: We do not attempt a thorough literature survey, rather we give informal descriptions of a few mesh generation approaches, chosen to illustrate some of the main ideas in the field. There are already a number of articles that survey and classify the literature on automatic mesh generation <ref> [109, 189, 202, 208, 212, 221] </ref>, although we are not aware of a recent survey of two-dimensional mesh generation with an extensive bibliography. Overall, two-dimensional mesh generation seems fairly mature, and a number of different approaches give good results.
Reference: [110] <author> T.C. Hu and A.C. Tucker. </author> <title> Optimal computer search trees and variable length alphabetic codes. </title> <journal> SIAM J. Applied Math. </journal> <month> 21 </month> <year> (1971) </year> <month> 514-532. </month>
Reference-contexts: Yao [223] improved this to O (n 2 ) using the quadrangle inequality, a relation that also holds for diagonal lengths in a convex polygon. In some cases this can be further improved to O (n log n) <ref> [110] </ref>. These results suggest that, at least for minimum weight triangulation of convex polygons, O (n 3 ) is too slow. Open Problem 1. Can the minimum weight triangulation of a convex polygon be constructed in time o (n 3 )? 19 2.2.4.
Reference: [111] <author> A. Jameson, T.J. Baker, </author> <title> and N.P. Weatherill. Calculation of inviscid transonic flow over a complete aircraft. </title> <booktitle> In Proc. AIAA 24th Aerospace Sciences Meeting, </booktitle> <address> Reno, </address> <year> 1986. </year>
Reference-contexts: A final improvement step merges tetrahedra or moves Steiner points to remove slivers (very flat tetrahedra). Joe [118] is currently working on a generalization of his two-dimensional convex-decomposition generator [119]. 3.4.4. Advancing Front Lohner [144, 145], Baker [8, 9], Jameson et al. <ref> [111] </ref>, Peraire et al. [168], and others have generated tetrahedral meshes for entire aircraft. Typically, something akin to the advancing front method places Steiner points in layers around the aircraft. Jameson et al. [111] use a number of overlapping structured grids to place Steiner points, and then produce an unstructured tetrahedral <p> Advancing Front Lohner [144, 145], Baker [8, 9], Jameson et al. <ref> [111] </ref>, Peraire et al. [168], and others have generated tetrahedral meshes for entire aircraft. Typically, something akin to the advancing front method places Steiner points in layers around the aircraft. Jameson et al. [111] use a number of overlapping structured grids to place Steiner points, and then produce an unstructured tetrahedral grid with the Delau-nay triangulation. Baker's method [8] starts with a surface triangulation, as described in Section 2.5 above. Steiner points are then added exterior to the aircraft.
Reference: [112] <author> P. Jamet. </author> <title> Estimations d'erreur pour des elements finis droits presque degeneres. </title> <type> Tech. Report CRM-447, </type> <institution> Centre d'Etudes de Limeil. </institution>
Reference-contexts: The numerical condition of matrices in a finite element computation is related to the minimum angle in the triangulation. The error of a finite element approximation is 7 also related to the minimum angle [91, 209], and even more closely related to the maximum angle <ref> [5, 112] </ref>. The minimum height of a triangle relates to the quality of a curved-surface approximation [98], and to a key step in a new three-dimensional mesh generation algorithm [157]. Several other optimization criteria find application in interpolation [69, 178]. <p> Halt when all new angles are acceptable. 2.3.2. No Large Angles Many practitioners have suggested largest angle as an important quality measure for both mesh generation [17, 104] and surface interpolation [98, 100]. Babuska and Aziz [5] (see also <ref> [112] </ref>) provide theoretical justification by proving convergence of the finite element method as triangle sizes diminish, so long as the maximum angle is bounded away from 180 ffi ; they also give an example in which convergence fails when angles grow arbitrarily flat.
Reference: [113] <author> K. Jansen. </author> <title> One strike against the min-max degree triangulation problem. </title> <journal> Comp. </journal> <note> Geometry Theory and Applications 3 (1993) 107-120. </note>
Reference-contexts: Open Problem 1. Can the minimum weight triangulation of a convex polygon be constructed in time o (n 3 )? 19 2.2.4. Other Optimal Triangulations A few authors have considered problems of optimizing combinatorial properties of triangulations such as their degree <ref> [113] </ref> or connectivity [61]. Most of the remaining work on optimal triangulation has used edge length as a quality measure. As mentioned above, edge length can be used as a simple measure of triangle size, which in turn affects finite element approximation error.
Reference: [114] <author> B. Joe. </author> <title> Delaunay triangular meshes in convex polygons. </title> <note> SIAM J. </note> <institution> Sci. Stat. Comput. </institution> <month> 7 </month> <year> (1986) </year> <month> 514-539. </month>
Reference-contexts: Polygon Decomposition The polygon decomposition approach also initially divides the domain (most generally a PSLG) into simple regions. This approach, however, attempts to find intrinsic dividing lines, rather than dividing lines from a rectilinear grid. Joe and Simpson <ref> [119, 114] </ref> first divide the domain into convex polygons by cutting along lines extending from reflex vertices (that is, vertices at which the interior angle measures more than 180 ffi ).
Reference: [115] <author> B. Joe. </author> <title> Three-dimensional triangulations from local transformations. </title> <note> SIAM J. </note> <institution> Sci. Stat. Comput. </institution> <month> 10 </month> <year> (1989) </year> <month> 718-741. </month>
Reference-contexts: Bowyer includes evidence that his algorithm runs in time O (n 4=3 ) for a random point set. Dwyer [68] gives a linear-expected-time algorithm for random points in the unit ball. Joe <ref> [115] </ref> and Rajan [176] generalize the flip algorithm for DT construction. In three dimensions, flips involve sets of five points, forming a tetrahedral bipyramid. <p> Thus flips trade two tetrahedra for three, or vice versa. See Figure 37. Starting from an arbitrary tetrahedralization, however, the flip algorithm can get stuck in a local optimum and fail to produce the DT <ref> [115] </ref>. <p> In three dimensions, however, the flip procedure may get stuck in a local optimum that is not a global optimum <ref> [115] </ref>. Joe [117], Rajan [176], and Edelsbrunner and Shah [73] have shown that, for the Delaunay criterion, special starting triangulations always lead to a global optimum. Joe has also used the flip procedure to locally maximize the minimum solid angle [118].
Reference: [116] <author> B. Joe. </author> <title> On the correctness of a linear-time visibility polygon algorithm. </title> <journal> Intern. J. Computer Math. </journal> <month> 32 </month> <year> (1990) </year> <month> 155-172. </month>
Reference-contexts: Let E be the number of edges in the visibility graph. The visibility graph can be computed in time O (n 2 ) by traversing the boundary of the polygon once per vertex, performing a simple stack algorithm in each traversal <ref> [79, 116, 120, 130] </ref>. A more complicated algorithm reduces the time to O (n log n + E) [106]. We can easily improve the dynamic programming algorithm from O (n 3 ) to O (En), but we can even do a little better.
Reference: [117] <author> B. Joe. </author> <title> Construction of three-dimensional Delaunay triangulations using local transformations. </title> <address> CAGD 8 (1991) 123-142. </address>
Reference-contexts: Thus flips trade two tetrahedra for three, or vice versa. See Figure 37. Starting from an arbitrary tetrahedralization, however, the flip algorithm can get stuck in a local optimum and fail to produce the DT [115]. Joe <ref> [117] </ref> showed that, if we start with the DT of some point set, and add a single point (dividing the tetrahedron containing it into four, or if the new point is outside the convex hull, adding tetrahedra connecting it to the triangles it can see), then flipping from the resulting triangulation <p> In three dimensions, however, the flip procedure may get stuck in a local optimum that is not a global optimum [115]. Joe <ref> [117] </ref>, Rajan [176], and Edelsbrunner and Shah [73] have shown that, for the Delaunay criterion, special starting triangulations always lead to a global optimum. Joe has also used the flip procedure to locally maximize the minimum solid angle [118].
Reference: [118] <author> B. Joe. </author> <title> Delaunay versus max-min solid angle triangulations for three-dimensional mesh generation. </title> <journal> Int. J. Numer. Meth. Eng. </journal> <month> 31 </month> <year> (1991) </year> <month> 987-997. </month>
Reference-contexts: Joe [117], Rajan [176], and Edelsbrunner and Shah [73] have shown that, for the Delaunay criterion, special starting triangulations always lead to a global optimum. Joe has also used the flip procedure to locally maximize the minimum solid angle <ref> [118] </ref>. Starting from the Delaunay triangulation, he significantly improved aspect ratios, while also slightly decreasing the number of tetrahedra. Rivara refinement generalizes as follows: split a tetrahedron by adding a triangle with apex equal to the midpoint of the longest edge and base equal to the opposite edge. <p> A final improvement step merges tetrahedra or moves Steiner points to remove slivers (very flat tetrahedra). Joe <ref> [118] </ref> is currently working on a generalization of his two-dimensional convex-decomposition generator [119]. 3.4.4. Advancing Front Lohner [144, 145], Baker [8, 9], Jameson et al. [111], Peraire et al. [168], and others have generated tetrahedral meshes for entire aircraft.
Reference: [119] <author> B. Joe and R.B. Simpson. </author> <title> Triangular meshes for regions of complicated shape. </title> <journal> Int. J. Numer. Meth. Eng. </journal> <month> 23 </month> <year> (1986) </year> <month> 751-778. </month>
Reference-contexts: Polygon Decomposition The polygon decomposition approach also initially divides the domain (most generally a PSLG) into simple regions. This approach, however, attempts to find intrinsic dividing lines, rather than dividing lines from a rectilinear grid. Joe and Simpson <ref> [119, 114] </ref> first divide the domain into convex polygons by cutting along lines extending from reflex vertices (that is, vertices at which the interior angle measures more than 180 ffi ). <p> A final improvement step merges tetrahedra or moves Steiner points to remove slivers (very flat tetrahedra). Joe [118] is currently working on a generalization of his two-dimensional convex-decomposition generator <ref> [119] </ref>. 3.4.4. Advancing Front Lohner [144, 145], Baker [8, 9], Jameson et al. [111], Peraire et al. [168], and others have generated tetrahedral meshes for entire aircraft. Typically, something akin to the advancing front method places Steiner points in layers around the aircraft.
Reference: [120] <author> B. Joe and R.B. Simpson. </author> <title> Corrections to Lee's visibility polygon algorithm. </title> <note> BIT 27 (1987) 458-473. </note>
Reference-contexts: Let E be the number of edges in the visibility graph. The visibility graph can be computed in time O (n 2 ) by traversing the boundary of the polygon once per vertex, performing a simple stack algorithm in each traversal <ref> [79, 116, 120, 130] </ref>. A more complicated algorithm reduces the time to O (n log n + E) [106]. We can easily improve the dynamic programming algorithm from O (n 3 ) to O (En), but we can even do a little better.
Reference: [121] <author> M.T. Jones and P.E. Plassmann. </author> <title> Parallel algorithms for adaptive mesh refinement. </title> <type> Tech. Report MCS-P421-0394, </type> <institution> Mathematics and Computer Science Division, Ar-gonne National Laboratory, </institution> <year> 1994. </year>
Reference-contexts: Refinement and its reverse|"derefinement" or coarsening| assume even greater importance when the solution varies with time, and small features move across the domain <ref> [121] </ref>. Bank [13, 14] refines by splitting selected triangles into four similar copies of themselves, and then splitting neighboring triangles into two triangles to correct subdivision points.
Reference: [122] <author> J.M. Keil and C.A. Gutwin. </author> <title> The Delaunay triangulation closely approximates the complete Euclidean graph. </title> <booktitle> 1st Worksh. on Algorithms and Data Structures. </booktitle> <publisher> Springer-Verlag LNCS 382 (1989) 47-56. </publisher>
Reference-contexts: The DT contains the minimum spanning tree; the distance between vertices in the DT is O (1) times their distance in the plane <ref> [48, 65, 122] </ref>; and, from any viewpoint, DT triangles are acyclically ordered by distance [57, 71].) For very complex domains, an O (n 2 )-time algorithm for computing the CDT may be too slow. Chew [49] and others [198, 218] have improved this bound to O (n log n).
Reference: [123] <author> J.M. Keil and C.A. Gutwin. </author> <title> Classes of graphs which approximate the complete Euclidean graph. </title> <journal> Disc. and Comp. </journal> <note> Geometry 7 (1992) 13-28. 72 </note>
Reference: [124] <author> D.G. Kirkpatrick. </author> <title> A note on Delaunay and optimal triangulations. </title> <journal> Inform. Process. Lett. </journal> <month> 10 </month> <year> (1980) </year> <month> 127-128. </month>
Reference-contexts: If the MWT problem is generalized slightly, so that the weight of an edge is an arbitrary function unrelated to its length, minimum weight triangulation becomes NP-complete [140]. Therefore, authors have concentrated on approximating the MWT. Any triangulation achieves total edge length O (n) times the minimum <ref> [124] </ref>. The DT, once claimed to be the MWT, can be as long as (n) times the optimum [124, 146]. The same is true of the triangulation computed by edge-flipping for minimum length. <p> Therefore, authors have concentrated on approximating the MWT. Any triangulation achieves total edge length O (n) times the minimum [124]. The DT, once claimed to be the MWT, can be as long as (n) times the optimum <ref> [124, 146] </ref>. The same is true of the triangulation computed by edge-flipping for minimum length. It remains open how well edge insertion approximates the MWT, but it does not provide an exact solution. The greedy triangulation can be as bad as ( n) [133, 146].
Reference: [125] <author> S. Kirkpatrick, </author> <title> C.D. Gelatt, and M.P. Vecchi. Optimization by simulated annealing. </title> <note> Science 220 (1983) 671-680. </note>
Reference-contexts: A local optimum can be very far from a global optimum; for example, it may have total edge length (n) times the true optimal length; see Figure 6. One way to escape local optima is to allow local moves that do not improve the triangulation, as in simulated annealing <ref> [125, 216] </ref>. A different approach is to generalize the local improvement procedure.
Reference: [126] <author> R. Klein and A. Lingas. </author> <title> A linear-time randomized algorithm for the bounded Voronoi diagram of a simple polygon. </title> <booktitle> In Proc. 9th ACM Symp. on Comp. Geometry (1993) 124-132. </booktitle>
Reference-contexts: In particular, it can update the DT after the removal of a vertex or edge. Djidjev and Lingas [64] devised a linear-time algorithm to compute the DT of a more general special case called a "monotone histogram". Finally, Klein and Lingas <ref> [126] </ref> gave a linear-time randomized algorithm for the CDT of a simple polygon. 2.2.2. Edge Insertion The flip algorithm described above provides our first example of a local improvement algorithm.
Reference: [127] <author> G.T. Klincsek. </author> <title> Minimal triangulations of polygonal domains. </title> <journal> Ann. Disc. Math. </journal> <month> 9 </month> <year> (1980) </year> <month> 121-123. </month>
Reference-contexts: We next show that many more such problems can be solved in polynomial time, for simple polygons only, using a dynamic programming approach usually attributed to Klincsek <ref> [127] </ref>. Let f be a quality measure of triangulations of simple polygons, that is a mapping from triangulations to the real numbers. Let P be a simple polygon. An arbitrary diagonal fa; bg splits P into two simple polygons, P 1 and P 2 . <p> A measure that fails the monotonicity requirement is the difference in areas between the largest and smallest triangles. (Incidentally, both of these measures can be optimized by slightly more complicated dynamic programming.) Theorem 4 (Klincsek <ref> [127] </ref>). A triangulation of a simple polygon optimizing any decomposable function can be computed in time O (n 3 ). Proof: Assume we are trying to minimize f (T ).
Reference: [128] <author> C.L. Lawson. </author> <title> Software for C 1 surface interpolation. </title> <editor> in J. Rice, ed., </editor> <booktitle> Mathematical Software III, </booktitle> <publisher> Academic Press (1977) 161-194. </publisher>
Reference-contexts: We now describe the flip algorithm, which computes the CDT of a PSLG using a simple local optimization technique; it is derived from a similar algorithm for the DT <ref> [128] </ref>. The worst-case running time of this algorithm, O (n 2 ), is not optimal, but its ease of programming makes it quite practical for medium-sized input. Moreover, the algorithm is useful 11 for proving a number of optimality properties. The flip algorithm starts with any triangulation. <p> The min-containment circle of a triangle t is the smallest circle containing t. Theorem 1. Of all triangulations of a PSLG, the CDT (1) minimizes the largest circumcircle; (2) minimizes the largest min-containment circle [55, 176]; and (3) maximizes the minimum angle in the triangulation <ref> [128] </ref>. Proof: Each of these properties is improved by flipping a reversed quadrilateral. The optimal triangulation cannot be improved, so it has no reversed quadrilaterals, and hence by Lemma 3 must be the CDT. <p> We say that f T interpolates S. The question arises: which triangulations are good for interpolation? This question has been discussed in the literature <ref> [16, 56, 66, 128, 195] </ref>. Rippa [177] recently proved a surprising result. Regardless of the input elevations, the Delaunay triangulation gives an interpolating surface, or elevated triangulation, optimal in a certain least energy sense. Theorem 12 (Rippa [177]).
Reference: [129] <author> D.T. Lee. </author> <title> Proximity and reachability in the plane. </title> <type> Tech. Rep. </type> <institution> R-831, Coordinated Science Laboratory, Univ. Illinois, </institution> <year> 1978. </year>
Reference-contexts: We consider this conforming Delaunay triangulation problem in Section 2.3.5. The alternative approach generalizes the definition of the DT in order to force certain edges (the boundary) into the triangulation. Such a triangulation is known as a constrained Delaunay triangulation (CDT) <ref> [49, 54, 56, 129, 131, 198] </ref>. For generality, we allow the domain to be a planar straight line graph. The CDT of a polygonal region may be obtained by treating the polygon as a PSLG, and then removing all CDT edges exterior to the polygon. <p> The optimal triangulation cannot be improved, so it has no reversed quadrilaterals, and hence by Lemma 3 must be the CDT. Result (3) is sometimes called "equiangularity" and, in fact, a stronger form holds: the CDT lexicographically maximizes the list of angles, from smallest to largest <ref> [129, 131] </ref>. An optimal interpolation property of the CDT appears in Section 2.5; there the input vertices include elevations. (The DT of a point set has some further properties.
Reference: [130] <author> D.T. Lee. </author> <title> Visibility of a simple polygon. Comput. Vision, Graphics, </title> <booktitle> and Image Proc. </booktitle> <month> 22 </month> <year> (1983) </year> <month> 207-221. </month>
Reference-contexts: Let E be the number of edges in the visibility graph. The visibility graph can be computed in time O (n 2 ) by traversing the boundary of the polygon once per vertex, performing a simple stack algorithm in each traversal <ref> [79, 116, 120, 130] </ref>. A more complicated algorithm reduces the time to O (n log n + E) [106]. We can easily improve the dynamic programming algorithm from O (n 3 ) to O (En), but we can even do a little better.
Reference: [131] <author> D.T. Lee and A. Lin. </author> <title> Generalized Delaunay triangulation for planar graphs. </title> <journal> Disc. and Comp. </journal> <note> Geometry 1 (1986) 201-217. </note>
Reference-contexts: We consider this conforming Delaunay triangulation problem in Section 2.3.5. The alternative approach generalizes the definition of the DT in order to force certain edges (the boundary) into the triangulation. Such a triangulation is known as a constrained Delaunay triangulation (CDT) <ref> [49, 54, 56, 129, 131, 198] </ref>. For generality, we allow the domain to be a planar straight line graph. The CDT of a polygonal region may be obtained by treating the polygon as a PSLG, and then removing all CDT edges exterior to the polygon. <p> The optimal triangulation cannot be improved, so it has no reversed quadrilaterals, and hence by Lemma 3 must be the CDT. Result (3) is sometimes called "equiangularity" and, in fact, a stronger form holds: the CDT lexicographically maximizes the list of angles, from smallest to largest <ref> [129, 131] </ref>. An optimal interpolation property of the CDT appears in Section 2.5; there the input vertices include elevations. (The DT of a point set has some further properties.
Reference: [132] <author> N.J. Lennes. </author> <title> Theorems on the simple finite polygon and polyhedron. </title> <journal> Am. J. Math. </journal> <month> 33 </month> <year> (1911) </year> <month> 37-62. </month>
Reference-contexts: When a point is added, the tetrahedron containing it is replaced by four smaller tetrahedra. In contrast, linear complexity is not always possible for points in special position [4]. When we try to extend these results to nonconvex polyhedra, we meet a second surprise: not all polyhedra are tetrahedralizable <ref> [132] </ref>. The following counterexample is due to Schonhardt [193]. Start with a triangular prism, and twist one triangle relative to the other so that each rectangular face of the prism folds into two triangles with a reflex edge between them (Figure 33).
Reference: [133] <author> C. Levcopoulos. </author> <title> An ( p n) lower bound for non-optimality of the greedy triangulation. </title> <journal> Inform. Process. Lett. </journal> <month> 25 </month> <year> (1987) </year> <month> 247-251. </month>
Reference-contexts: The same is true of the triangulation computed by edge-flipping for minimum length. It remains open how well edge insertion approximates the MWT, but it does not provide an exact solution. The greedy triangulation can be as bad as ( n) <ref> [133, 146] </ref>. For convex polygons, however, the greedy triangulation is an O (1) approximation [134, 135]. The simple ring heuristic, that repeatedly con nects every other vertex, gives a triangulation of length O (log n) times the boundary 20 length of a convex polygon [170].
Reference: [134] <author> C. Levcopoulos and A. Lingas. </author> <title> On approximation behavior of the greedy triangulation for convex polygons. </title> <note> Algorithmica 2 (1987) 175-193. </note>
Reference-contexts: It is curious that the worst case of this algorithm occurs when the polygon is convex (so that the visibility graph contains all possible edges). Typically, convexity makes optimization problems easier. Examples include geometric matching [147] and greedy triangulation (see below) <ref> [134, 135] </ref>. In the matching problem, one must connect the vertices in pairs by diagonals, minimizing the total edge length. The resulting graph has no crossings, and in this sense resembles the minimum weight triangulation. <p> It remains open how well edge insertion approximates the MWT, but it does not provide an exact solution. The greedy triangulation can be as bad as ( n) [133, 146]. For convex polygons, however, the greedy triangulation is an O (1) approximation <ref> [134, 135] </ref>. The simple ring heuristic, that repeatedly con nects every other vertex, gives a triangulation of length O (log n) times the boundary 20 length of a convex polygon [170].
Reference: [135] <author> C. Levcopoulos and A. Lingas. </author> <title> Fast algorithms for greedy triangulation. </title> <note> BIT 32 (1992) 280-296. Also in Proc. 2nd Scand. Worksh. Algorithm Theory, Springer-Verlag LNCS 447 (1990) 238-250. </note>
Reference-contexts: It is curious that the worst case of this algorithm occurs when the polygon is convex (so that the visibility graph contains all possible edges). Typically, convexity makes optimization problems easier. Examples include geometric matching [147] and greedy triangulation (see below) <ref> [134, 135] </ref>. In the matching problem, one must connect the vertices in pairs by diagonals, minimizing the total edge length. The resulting graph has no crossings, and in this sense resembles the minimum weight triangulation. <p> Therefore it can be found in time O (n 3 ), by first computing the minimum spanning tree and then triangulating each remaining polygon using dynamic programming. They reduced this time to O (n 2 ). The greedy triangulation <ref> [92, 135] </ref> can be found by adding edges one at a time, always choosing the shortest edge that is not already crossed. This triangulation lexicographically minimizes the sorted vector of edge lengths. <p> This triangulation lexicographically minimizes the sorted vector of edge lengths. For arbitrary point sets the greedy triangulation can be computed in time O (n 2 ) by dynamic maintenance of a CDT <ref> [135] </ref>. For convex polygons [135] or random point sets [62] the time bound can be improved to O (n). Eppstein [80] obtained another min-min triangulation result: the farthest-point Delaunay triangulation of a convex polygon minimizes the minimum angle. This triangulation can again be constructed in time O (n) [1]. <p> This triangulation lexicographically minimizes the sorted vector of edge lengths. For arbitrary point sets the greedy triangulation can be computed in time O (n 2 ) by dynamic maintenance of a CDT <ref> [135] </ref>. For convex polygons [135] or random point sets [62] the time bound can be improved to O (n). Eppstein [80] obtained another min-min triangulation result: the farthest-point Delaunay triangulation of a convex polygon minimizes the minimum angle. This triangulation can again be constructed in time O (n) [1]. <p> It remains open how well edge insertion approximates the MWT, but it does not provide an exact solution. The greedy triangulation can be as bad as ( n) [133, 146]. For convex polygons, however, the greedy triangulation is an O (1) approximation <ref> [134, 135] </ref>. The simple ring heuristic, that repeatedly con nects every other vertex, gives a triangulation of length O (log n) times the boundary 20 length of a convex polygon [170].
Reference: [136] <author> D.A. Lindholm. </author> <title> Automatic triangular mesh generation on surfaces of polyhedra. </title> <journal> IEEE Trans. </journal> <note> Magnetics MAG-19 (1983) 2539-2542. </note>
Reference-contexts: The node spacing function guides an iterative process that adds and deletes more Steiner points. Final triangulation is accomplished by the constrained Delaunay triangulation (shown in (e) and in a zoom in (f)). 2.4.4. Advancing Front The advancing front approach to mesh generation <ref> [136, 141] </ref> is especially well-suited to fluid dynamics problems. In this approach, the domain's boundary P is first subdivided appropriately, and then Steiner points are placed in successive layers around each connected component of P . This yields triangles oriented with the flow field. <p> Finally, curved surfaces in design and graphics may be defined by spline patches [18], or by "implicit surfaces"|level sets of functions of three variables. Triangulating the surface of a polyhedron reduces to triangulating a PSLG; Lindholm <ref> [136] </ref> uses an advancing-front generator within each face. Solids defined by point sets, however, present some fresh problems. One may want to represent such an input with an enclosing or interpolating polyhedron.
Reference: [137] <author> A. Lingas. </author> <title> Advances in minimum weight triangulation. </title> <type> Ph.D. thesis, </type> <institution> Linkoping Univ., </institution> <year> 1983. </year>
Reference-contexts: For convex polygons, however, the greedy triangulation is an O (1) approximation [134, 135]. The simple ring heuristic, that repeatedly con nects every other vertex, gives a triangulation of length O (log n) times the boundary 20 length of a convex polygon [170]. Lingas <ref> [137] </ref> suggested the following approach to MWT: start by adding the edges of the convex hull and the minimum spanning tree, and then compute the optimal triangulation within each polygonal region. Building on this approach, Plaisted and Hong [170, 165] gave what is currently the best MWT approximation. <p> But it is not hard to make examples (say, n 1 points on an arc that bows towards one distant point) to show that the minimum weight Steiner triangulation (MWST) can have total edge length (n) times smaller than the minimum weight triangulation (MWT). Lingas <ref> [137] </ref> suggested approximating the MWT of a point set by first choosing all edges from a minimum spanning tree. This partitions the plane into polygons, that can be triangulated optimally using dynamic programming.
Reference: [138] <author> A. Lingas. </author> <title> Voronoi diagrams with barriers and their applications. </title> <journal> Inform. Process. Lett. </journal> <month> 32 </month> <year> (1989) </year> <month> 191-198. </month>
Reference-contexts: Unfortunately it is possible for the angle-maximizing completion to be one of the exceptions. Just as the DT is dual to the Voronoi diagram, the CDT is related to the bounded Voronoi diagram <ref> [138, 198, 218] </ref>, a division of the plane into cells, one for each input vertex, so that the cell for vertex a consists of the region of the plane for which a is the nearest visible input point.
Reference: [139] <author> R.J. Lipton, D.J. Rose, and R.E. Tarjan. </author> <title> Generalized nested dissection. </title> <note> SIAM J. Numer. Analysis 16 (1979) 346-358. </note>
Reference-contexts: O (n 2=3 ) [153, 154]. (A separator is a set of vertices whose removal disconnects the graph into two pieces of roughly equal size.) Nested dissection then saves a factor of O (n) in the asymptotic time to solve the linear equations that arise in the finite element method <ref> [139] </ref>. 3.4. Heuristically Generated Three-Dimensional Meshes Most of the techniques for generating and improving two-dimensional meshes can be generalized to three dimensions, though not without some difficulties. See [9, 95, 144] for surveys discussing both structured and unstructured meshes primarily for fluid flow problems.
Reference: [140] <author> E.L. Lloyd. </author> <title> On triangulations of a set of points in the plane. </title> <booktitle> In Proc. 18th IEEE Symp. </booktitle> <institution> Found. Comp. Sci. </institution> <year> (1977) </year> <month> 228-240. </month>
Reference-contexts: Using Chazelle's algorithm, the time for polygons with holes can be improved to O (n log h), where h is the number of holes. In contrast to these positive results, determining whether a straight line graph (with crossing edges) contains a triangulation is NP-complete <ref> [140] </ref>. Also NP-complete is the problem of determining whether a given collection of triangles includes a triangulation of the triangles' vertex set. (These results tend to rule out greedy algorithms for optimal triangulation.) 2.2. <p> If the MWT problem is generalized slightly, so that the weight of an edge is an arbitrary function unrelated to its length, minimum weight triangulation becomes NP-complete <ref> [140] </ref>. Therefore, authors have concentrated on approximating the MWT. Any triangulation achieves total edge length O (n) times the minimum [124]. The DT, once claimed to be the MWT, can be as long as (n) times the optimum [124, 146].
Reference: [141] <author> S.H. Lo. </author> <title> A new mesh generation scheme for arbitrary planar domains. </title> <journal> Int. J. Numer. Meth. Eng. </journal> <volume> 21 (1985) 1403-1426. </volume> <pages> 73 </pages>
Reference-contexts: The node spacing function guides an iterative process that adds and deletes more Steiner points. Final triangulation is accomplished by the constrained Delaunay triangulation (shown in (e) and in a zoom in (f)). 2.4.4. Advancing Front The advancing front approach to mesh generation <ref> [136, 141] </ref> is especially well-suited to fluid dynamics problems. In this approach, the domain's boundary P is first subdivided appropriately, and then Steiner points are placed in successive layers around each connected component of P . This yields triangles oriented with the flow field.
Reference: [142] <author> S.H. Lo. </author> <title> Delaunay triangulation of nonconvex planar domains. </title> <journal> Int. J. Numer. Meth. Eng. </journal> <month> 28 </month> <year> (1989) </year> <month> 2695-2707. </month>
Reference: [143] <author> S.H. Lo. </author> <title> Automatic mesh generation and adaptation by using contours. </title> <journal> Int. J. Nu-mer. Meth. Eng. </journal> <month> 31 </month> <year> (1991) </year> <month> 689-707. </month>
Reference-contexts: This yields triangles oriented with the flow field. Figure 27 shows a mesh computed by Barth and Jespersen [19]; this mesh is the Delaunay triangulation of vertices placed by the advancing front method. Lo <ref> [143] </ref> has developed a mesh generator that places Steiner points along 43 predefined contour lines, that need not follow the domain boundary. This generalization allows the output of an initial finite element computation to control the generation of the next mesh.
Reference: [144] <author> R. Lohner. </author> <title> Finite elements in CFD: what lies ahead. </title> <journal> Int. J. Numer. Meth. Eng. </journal> <month> 24 </month> <year> (1987) </year> <month> 1741-1756. </month>
Reference-contexts: Heuristically Generated Three-Dimensional Meshes Most of the techniques for generating and improving two-dimensional meshes can be generalized to three dimensions, though not without some difficulties. See <ref> [9, 95, 144] </ref> for surveys discussing both structured and unstructured meshes primarily for fluid flow problems. Overall, three-dimensional unstructured mesh generation is still in its early stages of development. 3.4.1. <p> A final improvement step merges tetrahedra or moves Steiner points to remove slivers (very flat tetrahedra). Joe [118] is currently working on a generalization of his two-dimensional convex-decomposition generator [119]. 3.4.4. Advancing Front Lohner <ref> [144, 145] </ref>, Baker [8, 9], Jameson et al. [111], Peraire et al. [168], and others have generated tetrahedral meshes for entire aircraft. Typically, something akin to the advancing front method places Steiner points in layers around the aircraft.
Reference: [145] <author> R. Lohner. </author> <title> Generation of three-dimensional unstructured grids by the advancing-front method. </title> <booktitle> In Proc. AIAA 26th Aerospace Sciences Meeting, </booktitle> <address> Reno, </address> <year> 1988. </year>
Reference-contexts: A final improvement step merges tetrahedra or moves Steiner points to remove slivers (very flat tetrahedra). Joe [118] is currently working on a generalization of his two-dimensional convex-decomposition generator [119]. 3.4.4. Advancing Front Lohner <ref> [144, 145] </ref>, Baker [8, 9], Jameson et al. [111], Peraire et al. [168], and others have generated tetrahedral meshes for entire aircraft. Typically, something akin to the advancing front method places Steiner points in layers around the aircraft.
Reference: [146] <author> G.K. Manacher and A.L. Zobrist. </author> <title> Neither the greedy nor the Delaunay triangulation approximates the optimum. </title> <journal> Inform. Process. Lett. </journal> <month> 9 </month> <year> (1979) </year> <month> 31-34. </month>
Reference-contexts: Therefore, authors have concentrated on approximating the MWT. Any triangulation achieves total edge length O (n) times the minimum [124]. The DT, once claimed to be the MWT, can be as long as (n) times the optimum <ref> [124, 146] </ref>. The same is true of the triangulation computed by edge-flipping for minimum length. It remains open how well edge insertion approximates the MWT, but it does not provide an exact solution. The greedy triangulation can be as bad as ( n) [133, 146]. <p> The same is true of the triangulation computed by edge-flipping for minimum length. It remains open how well edge insertion approximates the MWT, but it does not provide an exact solution. The greedy triangulation can be as bad as ( n) <ref> [133, 146] </ref>. For convex polygons, however, the greedy triangulation is an O (1) approximation [134, 135]. The simple ring heuristic, that repeatedly con nects every other vertex, gives a triangulation of length O (log n) times the boundary 20 length of a convex polygon [170].
Reference: [147] <author> O. Marcotte and S. Suri. </author> <title> Fast matching algorithms for points on a polygon. </title> <journal> SIAM J. Comput. </journal> <month> 20 </month> <year> (1991) </year> <month> 405-422. </month>
Reference-contexts: It is curious that the worst case of this algorithm occurs when the polygon is convex (so that the visibility graph contains all possible edges). Typically, convexity makes optimization problems easier. Examples include geometric matching <ref> [147] </ref> and greedy triangulation (see below) [134, 135]. In the matching problem, one must connect the vertices in pairs by diagonals, minimizing the total edge length. The resulting graph has no crossings, and in this sense resembles the minimum weight triangulation. <p> The resulting graph has no crossings, and in this sense resembles the minimum weight triangulation. Matching can be solved by the same dynamic programming techniques as above; however, for convex polygons this can be improved to O (n log n) <ref> [147] </ref>. Another problem, construction of optimal binary trees, is also related to triangulation of convex polygons [205], and again the O (n 3 ) dynamic program solves this problem.
Reference: [148] <author> J. Matousek. </author> <title> Reporting points in halfspaces. </title> <booktitle> In Proc. 32nd IEEE Symp. Foundations of Comp. </booktitle> <address> Science (1991) 207-215. </address>
Reference-contexts: Edelsbrunner and Shah [73] extended Joe's algorithm to higher dimensions and to regular triangulations of weighted points. Though the worst-case time bound for computing the three-dimensional DT must be (n 2 ), an "output-sensitive" algorithm runs much more quickly on simple input instances. Techniques recently developed by Matousek <ref> [148] </ref> for half-space range queries give an algorithm with running time O (n 4=3+* + k log n), where k is the complexity of the DT. See Fortune's survey [88] for more details on three-dimensional DT algorithms, including some important implementation issues.
Reference: [149] <author> A. Maus. </author> <title> Delaunay triangulation and the convex hull of n points in expected linear time. </title> <note> BIT 24 (1984) 151-163. </note>
Reference-contexts: Fortune [87, 88] invented an elegant sweepline algorithm. Guibas, Knuth, and Sharir [101] gave a simple, randomized incremental algorithm. (For a simpler analysis of this algorithm see [162, 199].) Maus <ref> [149] </ref> gave an algorithm for random points with expected linear running time; see also [27, 68, 152] for expected case analyses. The typical domain for mesh generation, however, is not a point set, but a polygonal region.
Reference: [150] <author> D.J. Mavriplis. </author> <title> Unstructured and adaptive mesh generation for high Reynolds number viscous flows. </title> <type> ICASE Report 91-25, </type> <institution> NASA Langley Research Center, </institution> <year> 1991. </year>
Reference-contexts: Lo [143] has developed a mesh generator that places Steiner points along 43 predefined contour lines, that need not follow the domain boundary. This generalization allows the output of an initial finite element computation to control the generation of the next mesh. Mavriplis <ref> [150] </ref> has computed meshes for high Reynolds number flows using an idea related to contour lines. His method identifies "stretching" lines and places the first Steiner points along these curves. Local, structured meshes generate interior Steiner points.
Reference: [151] <author> E. Melissaratos and D. Souvaine. </author> <title> Coping with inconsistencies: a new approach to produce quality triangulations of polygonal domains with holes for the the finite element method. </title> <booktitle> In Proc. 8th ACM Symp. Comp. Geom. </booktitle> <year> (1992) </year> <month> 202-211. </month>
Reference-contexts: Though not included in the original paper [25], this quadtree-based algorithm can be further extended to PSLGs. For this extension, an idea due to Mitchell and Vavasis [157] proves useful: duplicate each quadtree square that contains more than one face of the domain. Melissaratos and Souvaine <ref> [151] </ref> combine the algorithms of Baker et al. and Bern et al. to guarantee no obtuse angles as well. Bern, Eppstein, and Teng [26] consider parallel algorithms for quadtree-based meshes. The algorithms just described are grid-based algorithms. <p> Due to Lemma 9, a solution to this problem would also solve the conforming Delaunay triangulation problem described below. The hard part of the problem is getting "exterior" and "interior" Steiner points to match at the polygon 31 boundary. There are however nonpolynomial algorithms <ref> [12, 151] </ref>, and an (n 2 ) lower bound [186], similar to Paterson's lower bound example. Open Problem 3.
Reference: [152] <author> R.E. Miles. </author> <title> On the homogeneous planar Poisson point process. </title> <note> Mathematical Biosciences 6 (1970) 85-127. </note>
Reference-contexts: Fortune [87, 88] invented an elegant sweepline algorithm. Guibas, Knuth, and Sharir [101] gave a simple, randomized incremental algorithm. (For a simpler analysis of this algorithm see [162, 199].) Maus [149] gave an algorithm for random points with expected linear running time; see also <ref> [27, 68, 152] </ref> for expected case analyses. The typical domain for mesh generation, however, is not a point set, but a polygonal region. <p> Polyhedron Decomposition Cavendish, Field, and Frey [41] developed one of the first three-dimensional mesh generators. Their approach cuts the polyhedron into polygonal cross-sections, adds randomly chosen Steiner points with average spacing determined by a measure of local feature size [40], and then computes the Delaunay triangulation. (See <ref> [27, 152] </ref> for analyses of DTs of random points.) If Steiner points are sufficiently closely spaced on the boundaries of the polygonal cross-sections, the DT will be conforming. A final improvement step merges tetrahedra or moves Steiner points to remove slivers (very flat tetrahedra).
Reference: [153] <author> G.L. Miller and W. Thurston. </author> <title> Separators in two and three dimensions. </title> <booktitle> In Proc. 22nd ACM Symp. Theory of Computing (1990) 300-309. </booktitle>
Reference-contexts: The theorem has special importance because the edge skeleton of a bounded-aspect-ratio tetrahedralization has a "separator" of complexity O (n 2=3 ) <ref> [153, 154] </ref>. (A separator is a set of vertices whose removal disconnects the graph into two pieces of roughly equal size.) Nested dissection then saves a factor of O (n) in the asymptotic time to solve the linear equations that arise in the finite element method [139]. 3.4.
Reference: [154] <author> G.L. Miller, S.-H. Teng, and S.A. Vavasis. </author> <title> A unified geometric approach to graph separators. </title> <booktitle> In Proc. 32nd IEEE Symp. on Foundations of Comp. </booktitle> <address> Science (1991) 538-547. </address>
Reference-contexts: The theorem has special importance because the edge skeleton of a bounded-aspect-ratio tetrahedralization has a "separator" of complexity O (n 2=3 ) <ref> [153, 154] </ref>. (A separator is a set of vertices whose removal disconnects the graph into two pieces of roughly equal size.) Nested dissection then saves a factor of O (n) in the asymptotic time to solve the linear equations that arise in the finite element method [139]. 3.4.
Reference: [155] <author> S.A. Mitchell. </author> <title> Refining a triangulation of a planar straight-line graph to eliminate large angles. </title> <booktitle> In Proc. 34th IEEE Symp. on Foundations of Comp. </booktitle> <address> Science (1993) 583-591. </address>
Reference-contexts: No-large-angle triangulations, however, are known for some types of input for which nonobtuse triangulation remains open. Recently, Mitchell <ref> [155] </ref> showed how to triangulate any planar straight-line graph using O (n 2 log n) triangles with maximum angle 157:5 ffi . Tan [210] improved the maximum angle bound to 132 ffi and the complexity to the optimal O (n 2 ). These two results use a similar global approach.
Reference: [156] <author> S.A. Mitchell. </author> <title> Finding a covering triangulation whose maximum angle is provably small. </title> <booktitle> In Proc. 17th Computer Science Conference, Australian Comp. Science Comm. </booktitle> <month> 16 </month> <year> (1994) </year> <month> 55-64. </month>
Reference-contexts: He also shows that even for general polyhedra, only interior Steiner points are necessary. This result may have application to multiple domains (see also <ref> [156] </ref>); it follows from "fattening" each face into a roughly prism-shaped solid. Toussaint et al. [215] prove that the union of three convex polyhedra can be tetrahedralized without Steiner points. Chazelle and Shouraboura [47] improve Bern's O (n log n) bound to linear by reintroducing Steiner points.
Reference: [157] <author> S.A. Mitchell and S. Vavasis. </author> <title> Quality mesh generation in three dimensions. </title> <booktitle> In Proc. 8th ACM Symp. Comp. Geom. </booktitle> <year> (1992) </year> <month> 212-221. </month>
Reference-contexts: The minimum height of a triangle relates to the quality of a curved-surface approximation [98], and to a key step in a new three-dimensional mesh generation algorithm <ref> [157] </ref>. Several other optimization criteria find application in interpolation [69, 178]. For a given element shape, approximation error grows with element size, which can be measured simply by maximum edge length [209] or by more complicated metrics. <p> Though not included in the original paper [25], this quadtree-based algorithm can be further extended to PSLGs. For this extension, an idea due to Mitchell and Vavasis <ref> [157] </ref> proves useful: duplicate each quadtree square that contains more than one face of the domain. Melissaratos and Souvaine [151] combine the algorithms of Baker et al. and Bern et al. to guarantee no obtuse angles as well. Bern, Eppstein, and Teng [26] consider parallel algorithms for quadtree-based meshes. <p> Maxmin Height We now consider maximizing the minimum height of a triangle. This problem arises in Mitchell and Vavasis's three-dimensional mesh generation algorithm <ref> [157] </ref>. As we saw above, a minimum-height triangulation without Steiner points can be computed using the edge-insertion paradigm [23]. It is not immediately obvious that Steiner points can improve the height. Consider a regular n-gon, however, with sides of unit length. <p> The theoretical paper by Bern et al. [25], contributed warping rules guaranteed not to produce small angles, as well as an analysis of the number of triangles in the mesh. Figure 24 shows an example mesh computed by Mitchell <ref> [157] </ref>, using a modification of the algorithm in [25]. This example demonstrates careful selection of quadtree square sizes around holes and "almost holes". <p> Dey, Bajaj, and Sugihara [60] generalize Chew's mesh generation algorithm to three dimensions. For point sets or convex polyhedra with point holes, this method avoids all bad tetrahedra except slivers. Mitchell and Vavasis <ref> [157] </ref> have recently generalized the quadtree polygon mesh generation of Bern et al. [25] to three dimensions, avoiding all types of bad tetrahedra. The generalization is not straightforward, primarily because vertices of polyhedra may have arbitrary degree. <p> Theorem 16 (Mitchell and Vavasis <ref> [157] </ref>). There is an algorithm, based on octrees, that computes an approximate optimal-aspect-ratio tetrahedralization of an arbitrary polyhedral domain, using no more than a constant times the optimal number of tetrahedra. <p> The rules are somewhat simplified by the fact that the octree is initially refined so that input edges intersect boxes of only one size. (Hence, this method does not come with the theoretical size guarantee of Mitchell and Vavasis's method <ref> [157] </ref>.) Empirically, Buratynski's method seems to give no tetrahedra with bad aspect ratio. Field and Smith [85] and others [158, 166] suggest the use of a tetrahedral octree, built by recursively cutting a "bcc tetrahedron" (body-centered cubic) into eight copies of itself.
Reference: [158] <author> D. Moore and J. Warren. </author> <title> Adaptive mesh generation I: packing space. </title> <type> Tech. Report TR 90-106, </type> <institution> Dept. of Computer Science, Rice University, </institution> <year> 1990. </year> <month> 74 </month>
Reference-contexts: The problem of poorly-shaped elements can be solved by the warping methods of Bern et al. [25]. The second problem may be more inherent, although non-square quadtree tiles, as used in <ref> [25, 158] </ref>, or some sort of randomization procedure, coupled with Laplacian smoothing, may sufficiently break up the directionality. 2.4.3. Polygon Decomposition The polygon decomposition approach also initially divides the domain (most generally a PSLG) into simple regions. <p> Field and Smith [85] and others <ref> [158, 166] </ref> suggest the use of a tetrahedral octree, built by recursively cutting a "bcc tetrahedron" (body-centered cubic) into eight copies of itself. Tetrahedra spawn fewer boundary patterns than hexahedra. 63 3.4.3. Polyhedron Decomposition Cavendish, Field, and Frey [41] developed one of the first three-dimensional mesh generators.
Reference: [159] <author> D.M. Mount and A. Saalfeld. </author> <title> Globally-equiangular triangulations of co-circular points in O(n log n) time. </title> <booktitle> In Proc. 4th ACM Symp. Comp. Geom. </booktitle> <year> (1988) </year> <month> 143-152. </month>
Reference-contexts: To avoid this situation, the input can be slightly perturbed before computing the triangulation; Edelsbrunner and Mucke propose symbolic perturbations [72]. Alternatively, the triangulation may be completed after the computation. Mount and Saalfeld <ref> [159] </ref> show how to quickly complete a special-position DT or CDT to maintain the lexicographically maximum angle property. Dillencourt and Smith [63] prove that most completions can be realized as the DT of a small perturbation of the input.
Reference: [160] <author> J.-D. Muller. </author> <title> Proven angular bounds and stretched triangulations with the frontal Delaunay method. </title> <booktitle> In Proc. 11th AIAA Comp. Fluid Dyanmics, </booktitle> <address> Orlando, </address> <year> 1993. </year>
Reference: [161] <author> S. Muller, K. Kells, and W. Fichtner. </author> <title> Automatic rectangle-based adaptvie mesh generation without obtuse angles. </title> <journal> IEEE Trans. </journal> <note> Computer-Aided Design 11 (1992) 855-863. </note>
Reference-contexts: As noted above, Baker et al. [12] give an algorithm for nonobtuse triangulation of polygons. Their algorithm also avoids small angles, and hence must have complexity that depends on geometry, as well as on n. There are also heuristic algorithms of this type <ref> [13, 161] </ref>. Is it possible to eliminate dependence on geometry? Bern and Eppstein [24] devised the first polynomially bounded algorithm. The first step dices the polygon into rectangles, with nonrectangular portions left over at the boundaries.
Reference: [162] <author> K. Mulmuley. </author> <title> Computational Geometry: An Introduction through Randomized Algorithms. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, </address> <year> 1994. </year>
Reference-contexts: Fortune [87, 88] invented an elegant sweepline algorithm. Guibas, Knuth, and Sharir [101] gave a simple, randomized incremental algorithm. (For a simpler analysis of this algorithm see <ref> [162, 199] </ref>.) Maus [149] gave an algorithm for random points with expected linear running time; see also [27, 68, 152] for expected case analyses. The typical domain for mesh generation, however, is not a point set, but a polygonal region.
Reference: [163] <author> O.R. Musin. </author> <title> Delaunay triangulation and optimality. </title> <booktitle> ARO Worksh. Comp. Geometry, </booktitle> <address> Raleigh, North Carolina, </address> <year> 1993. </year>
Reference-contexts: For point set data with elevations, can a triangulation maximizing the minimum angle on an elevated triangle be computed in polynomial time? Open Problem 6. For point set data with elevations, can a triangulation approximately minimizing the total surface area be computed in polynomial time? (An intriguing result <ref> [163] </ref> shows that for any such point set there exists a "flattening coefficient" * &gt; 0, such that if all z-coordinates are multiplied by *, Delaunay triangulation minimizes area.) Open Problem 7.
Reference: [164] <author> L.R. Nackman and V. Srinivasan. </author> <title> Point placement for Delaunay triangulation of polygonal domains. </title> <booktitle> In Proc. 3rd Canadian Conf. Comp. Geometry (1991) 37-40. </booktitle>
Reference-contexts: Hence if we partition these segments into subsegments of length less than ffi, each subsegment will have an empty diameter circle, and the result will be a Delaunay triangulation that covers the input (Figure 20). Nackman and Srinivasan <ref> [164] </ref> describe an alternative for polygons with holes. It is not necessary to subdivide input edges so finely that each segment has an empty diameter circle, as in the previous method; in fact any empty circle through the endpoints of a segment suffices. <p> The assumption that the 36 input is a polygon implies the existence of a finite set of suitable disks, and it is even possible to minimize the number of disks <ref> [164] </ref>. But this is no guarantee that the algorithm uses a minimum number of Steiner points|indeed, Nackman and Srinivasan give an example of constant complexity for which their method requires a nonconstant number of Steiner points. <p> In Frey's method, Steiner points are initially added to the boundary according to a "spacing function" that approximates local feature size. After this step, for most practical inputs, a Delaunay triangulation of the input vertices and the Steiner points includes the domain boundary. (Using the recent results of <ref> [164, 185] </ref>, this step can be made exact; see Section 2.3.5 above.) Next interior Steiner points are added.
Reference: [165] <author> S. Olariu, S. Toida, and M. Zubair. </author> <title> On a conjecture by Plaisted and Hong. </title> <journal> J. Alg. </journal> <month> 9 </month> <year> (1988) </year> <month> 597-598. </month>
Reference-contexts: Lingas [137] suggested the following approach to MWT: start by adding the edges of the convex hull and the minimum spanning tree, and then compute the optimal triangulation within each polygonal region. Building on this approach, Plaisted and Hong <ref> [170, 165] </ref> gave what is currently the best MWT approximation. Instead of starting with the minimum spanning tree, they partition the convex hull into convex polygons. Then the optimal triangulation, greedy triangulation, or ring heuristic can be used to triangulate these polygons, achieving an O (log n) approximation.
Reference: [166] <author> M.E.G. Ong. </author> <title> Uniform refinement of a tetrahedron. </title> <note> To appear in SIAM J. </note> <institution> Sci. Stat. Comp. </institution>
Reference-contexts: Field and Smith [85] and others <ref> [158, 166] </ref> suggest the use of a tetrahedral octree, built by recursively cutting a "bcc tetrahedron" (body-centered cubic) into eight copies of itself. Tetrahedra spawn fewer boundary patterns than hexahedra. 63 3.4.3. Polyhedron Decomposition Cavendish, Field, and Frey [41] developed one of the first three-dimensional mesh generators.
Reference: [167] <author> C.H. Papadimitriou, A.A. Schaffer, and M. Yannakakis. </author> <title> Simple local search problems that are hard to solve. </title> <journal> SIAM J. Comput. </journal> <month> 20 </month> <year> (1991) </year> <month> 56-87. </month>
Reference: [168] <author> J. Peraire, J. Peiro, L. Formaggia, K. Morgan, </author> <title> and O.C. Zienkiewicz. Finite element Euler computations in three dimensions. </title> <booktitle> In Proc. AIAA 26th Aerospace Sciences Meeting, </booktitle> <address> Reno, </address> <year> 1988. </year>
Reference-contexts: A final improvement step merges tetrahedra or moves Steiner points to remove slivers (very flat tetrahedra). Joe [118] is currently working on a generalization of his two-dimensional convex-decomposition generator [119]. 3.4.4. Advancing Front Lohner [144, 145], Baker [8, 9], Jameson et al. [111], Peraire et al. <ref> [168] </ref>, and others have generated tetrahedral meshes for entire aircraft. Typically, something akin to the advancing front method places Steiner points in layers around the aircraft.
Reference: [169] <author> R. Perucchio, M. Saxena, and A. Kela. </author> <title> Automatic mesh generation from solid models based on recursive spatial decomposition. </title> <journal> Int. J. Numer. Meth. Eng. </journal> <month> 28 </month> <year> (1989) </year> <month> 2469-2502. </month>
Reference-contexts: In the final steps, patterns are warped to approximate the actual boundary of the input, and Laplacian smoothing is applied. Further progress on their octree algorithm is reported by Shephard et al. [203]. Perucchio et al. <ref> [169, 189] </ref> have also advanced the octree approach with a different way of handling boundary cubes. Buratynski [35] uses rectangular octrees, that is, noncubical boxes, and a hierarchical set of warping rules. Boxes are first warped to input corners, then input edges, and finally input faces.
Reference: [170] <author> D.A. Plaisted and J. Hong. </author> <title> A heuristic triangulation algorithm. </title> <journal> J. </journal> <note> Algorithms 8 (1987) 405-437. </note>
Reference-contexts: For convex polygons, however, the greedy triangulation is an O (1) approximation [134, 135]. The simple ring heuristic, that repeatedly con nects every other vertex, gives a triangulation of length O (log n) times the boundary 20 length of a convex polygon <ref> [170] </ref>. Lingas [137] suggested the following approach to MWT: start by adding the edges of the convex hull and the minimum spanning tree, and then compute the optimal triangulation within each polygonal region. Building on this approach, Plaisted and Hong [170, 165] gave what is currently the best MWT approximation. <p> Lingas [137] suggested the following approach to MWT: start by adding the edges of the convex hull and the minimum spanning tree, and then compute the optimal triangulation within each polygonal region. Building on this approach, Plaisted and Hong <ref> [170, 165] </ref> gave what is currently the best MWT approximation. Instead of starting with the minimum spanning tree, they partition the convex hull into convex polygons. Then the optimal triangulation, greedy triangulation, or ring heuristic can be used to triangulate these polygons, achieving an O (log n) approximation.
Reference: [171] <author> M.-A. Posenau. </author> <title> Approaches to high aspect ratio triangulations. </title> <booktitle> In Proc. 5th Cana-dian Conf. Comp. Geometry (1993) 30-35. </booktitle>
Reference-contexts: Local, structured meshes generate interior Steiner points. The method then computes Delaunay triangulations in locally transformed regions in order to generate long, thin|but not overly obtuse| triangles oriented with the flow. Such a triangulation is an especially efficient mesh for laminar flows. (See <ref> [55, 171] </ref> for other stretched triangulations.) 2.4.5. Mesh Refinement A number of researchers have taken mesh refinement as the central step in mesh generation itself [14, 89, 179].
Reference: [172] <author> M.-A. Posenau and D.M. Mount. </author> <title> Delaunay triangulation and computational fluid dynamics meshes. </title> <booktitle> In Proc. 4th Canadian Conf. Comp. Geometry (1993) 316-321. </booktitle>
Reference: [173] <author> F.P. Preparata and S.J. Hong. </author> <title> Convex hulls of finite sets of points in two and three dimensions. </title> <journal> Commun. Assoc. Comput. Mach. </journal> <month> 20 </month> <year> (1977) </year> <month> 87-93. </month>
Reference-contexts: The relation between Delaunay triangulation and convex hulls allows the use of any O (n log n)-time three-dimensional convex hull algorithm, such as that of Preparata and Hong <ref> [173] </ref>. Fortune [87, 88] invented an elegant sweepline algorithm.
Reference: [174] <author> F.P. Preparata and M.I. Shamos. </author> <title> Computational Geometry: An Introduction, </title> <publisher> Springer-Verlag, </publisher> <year> 1985. </year>
Reference-contexts: Now the following question arises: how quickly can we compute a triangulation? This problem attracted more than a decade of intensive research. It is not difficult to improve the running time to O (n log n) <ref> [93, 174] </ref>. For many geometric problems there are matching (n log n) lower bounds, but none was known in this case. There were also many faster special case algorithms [45, 93, 108]. <p> It turns out that any point set can be triangulated in time O (n log n), and conversely a point set triangulation algorithm can sort real numbers, so there is a matching lower bound in the algebraic decision tree model of computation (see <ref> [174] </ref>). Lemma 1 applies to any polygon with holes, and hence to each face in a PSLG. (A face is a connected component of the plane minus the PSLG.) Hence every PSLG can be triangulated.
Reference: [175] <author> J.F. Randolph. </author> <title> Calculus and Analytic Geometry. </title> <publisher> Wadsworth, </publisher> <year> 1961, </year> <pages> 373-374. </pages>
Reference-contexts: An elementary example in which large angles spoil convergence is Schwarz's paradox <ref> [175] </ref>. A bound on the smallest angle implies a bound on the largest angle, but as we have seen, the elimination of small angles 26 requires a triangulation with complexity dependent not only on the number of input vertices n, but also on the geometry of the input.
Reference: [176] <author> V.T. Rajan. </author> <title> Optimality of the Delaunay triangulation in R d . In Proc. </title> <booktitle> 7th ACM Symp. Comp. Geometry (1991) 357-363. </booktitle> <pages> 75 </pages>
Reference-contexts: The flip algorithm also gives a number of useful optimality properties of the CDT. The min-containment circle of a triangle t is the smallest circle containing t. Theorem 1. Of all triangulations of a PSLG, the CDT (1) minimizes the largest circumcircle; (2) minimizes the largest min-containment circle <ref> [55, 176] </ref>; and (3) maximizes the minimum angle in the triangulation [128]. Proof: Each of these properties is improved by flipping a reversed quadrilateral. The optimal triangulation cannot be improved, so it has no reversed quadrilaterals, and hence by Lemma 3 must be the CDT. <p> Bowyer includes evidence that his algorithm runs in time O (n 4=3 ) for a random point set. Dwyer [68] gives a linear-expected-time algorithm for random points in the unit ball. Joe [115] and Rajan <ref> [176] </ref> generalize the flip algorithm for DT construction. In three dimensions, flips involve sets of five points, forming a tetrahedral bipyramid. Such a figure can be tetrahedralized in two ways: either as a pair of tetrahedra separated by a face, or as three tetrahedra surrounding an interior diagonal. <p> This result gives another O (n 2 )-time algorithm for computing the DT: add points one by one (say, in sorted order by x-coordinate) and, after each addition, flip until the DT is reached. Ra-jan <ref> [176] </ref> described a similar procedure for incrementally adding points and flipping 56 tetrahedra to find the DT. His procedure flips tetrahedra in the order corresponding to the changes in the convex hull of the lifted points as the new point is moved vertically down onto the paraboloid. <p> See Fortune's survey [88] for more details on three-dimensional DT algorithms, including some important implementation issues. Because the DT possesses so many optimality properties in two dimensions, geometers long suspected that it should optimize something in three dimensions. Recently, Rajan <ref> [176] </ref> discovered the first such result. (His result actually holds in all dimensions.) The min-containment sphere of a simplex t is the smallest sphere containing t. If t contains its circumcenter, then the min-containment sphere is identical to the circumsphere. Otherwise, the min-containment sphere circumscribes a lower-dimensional face of t. <p> For example, in two dimensions, the min-containment sphere is either the circumcircle or the diameter circle of the longest edge. Rajan proved the following, which generalizes a result of D'Azevedo and Simpson for the planar case [55]. Theorem 15 (Rajan <ref> [176] </ref>). The Delaunay triangulation is the triangulation that minimizes the maximum radius of a min-containment sphere. Proof Sketch: Lift the points to the paraboloid (x; y; z; x 2 + y 2 + z 2 ). <p> Nonobtuse dihedrals, however, do not imply that the mesh is a Delaunay triangulation. For this implication we need a different generalization: each tetrahedron is self-centered , meaning that it contains its circumcenter <ref> [176] </ref>. Finally, in order to generalize perpendicular duals, we need a stronger condition than self-centered that we shall call fully self-centered : triangles and tetrahedra are all self-centered. <p> In three dimensions, however, the flip procedure may get stuck in a local optimum that is not a global optimum [115]. Joe [117], Rajan <ref> [176] </ref>, and Edelsbrunner and Shah [73] have shown that, for the Delaunay criterion, special starting triangulations always lead to a global optimum. Joe has also used the flip procedure to locally maximize the minimum solid angle [118].
Reference: [177] <author> S. Rippa. </author> <title> Minimal roughness property of the Delaunay triangulation. </title> <address> CAGD 7 (1990) 489-497. </address>
Reference-contexts: We say that f T interpolates S. The question arises: which triangulations are good for interpolation? This question has been discussed in the literature [16, 56, 66, 128, 195]. Rippa <ref> [177] </ref> recently proved a surprising result. Regardless of the input elevations, the Delaunay triangulation gives an interpolating surface, or elevated triangulation, optimal in a certain least energy sense. Theorem 12 (Rippa [177]). Let f T be a piecewise-linear function interpolating S induced by a triangulation T . <p> Rippa <ref> [177] </ref> recently proved a surprising result. Regardless of the input elevations, the Delaunay triangulation gives an interpolating surface, or elevated triangulation, optimal in a certain least energy sense. Theorem 12 (Rippa [177]). Let f T be a piecewise-linear function interpolating S induced by a triangulation T . The piecewise-linear function f DT induced by the Delaunay triangulation satisfies Z Z (rf DT ) 2 R 45 We now explain the integrals above in terms more familiar to computational geometers.
Reference: [178] <author> S. Rippa and B. Schiff. </author> <title> Minimum energy triangulations for elliptic problems. </title> <journal> Comp. Meth. in Applied Mech. and Eng. </journal> <month> 84 </month> <year> (1990) </year> <month> 257-274. </month>
Reference-contexts: The minimum height of a triangle relates to the quality of a curved-surface approximation [98], and to a key step in a new three-dimensional mesh generation algorithm [157]. Several other optimization criteria find application in interpolation <ref> [69, 178] </ref>. For a given element shape, approximation error grows with element size, which can be measured simply by maximum edge length [209] or by more complicated metrics. <p> The proof of Rippa's theorem is an intricate calculation showing that the flip procedure cannot increase the integral. Hence the CDT is also an optimal interpolating surface. (De Floriani et al. [56] had previously proposed the use of the CDT for this purpose.) Rippa and Schiff <ref> [178] </ref> show that the minimization above corresponds to the energy functional associated with the nonhomogeneous Laplace equation. We may think of the DT as giving the stretched membrane (a "drumhead") with least potential energy, among all elevated-triangulation membranes.
Reference: [179] <author> M.-C. Rivara. </author> <title> Algorithms for refining triangular grids suitable for adaptive and multigrid techniques. </title> <journal> Int. J. Numer. Meth. Eng. </journal> <month> 20 </month> <year> (1984) </year> <month> 745-756. </month>
Reference-contexts: Smoothing can fix sharp angles, but the resulting mesh will not then be a strict refinement of the original mesh. Addressing this flaw, Rivara <ref> [179, 180] </ref> proposed the following recursive algorithm: bisect a triangle in need of refinement by adding a diagonal from the opposite vertex to the midpoint of the longest edge, then refine its neighbor the same way. <p> Such a triangulation is an especially efficient mesh for laminar flows. (See [55, 171] for other stretched triangulations.) 2.4.5. Mesh Refinement A number of researchers have taken mesh refinement as the central step in mesh generation itself <ref> [14, 89, 179] </ref>. For example, the algorithms of Chew [49] and Rup-pert [183], discussed in the last section, refine the constrained Delaunay triangulation by adding centers of circumcircles. An earlier, somewhat related, heuristic method is due to Frey [89].
Reference: [180] <author> M.-C. Rivara. </author> <title> A discussion on the triangulation refinement problem. </title> <booktitle> In Proc. 5th Canadian Conf. Comp. Geometry (1993) 42-47. </booktitle>
Reference-contexts: Smoothing can fix sharp angles, but the resulting mesh will not then be a strict refinement of the original mesh. Addressing this flaw, Rivara <ref> [179, 180] </ref> proposed the following recursive algorithm: bisect a triangle in need of refinement by adding a diagonal from the opposite vertex to the midpoint of the longest edge, then refine its neighbor the same way.
Reference: [181] <author> M.-C. Rivara and C. Levin. </author> <title> A 3-d refinement algorithm suitable for adaptive and multi-grid techniques. </title> <journal> Comm. in Appl. Numer. Meth. </journal> <month> 8 </month> <year> (1992) </year> <month> 281-290. </month>
Reference-contexts: Rivara refinement generalizes as follows: split a tetrahedron by adding a triangle with apex equal to the midpoint of the longest edge and base equal to the opposite edge. Recursively split all tetrahedra sharing the bisected edge. This algorithm performs quite well in practice <ref> [181] </ref>, but the generalization of the minimum angle bound is currently open. Open Problem 12. Does repeated application of three-dimensional Rivara refinement keep the minimum solid angle bounded away from zero? 3.4.2. Octrees Yerry and Shephard generalized their quadtree algorithm to a three-dimensional algorithm using balanced octrees [225].
Reference: [182] <author> I.G. Rosenberg and F. Stenger. </author> <title> A lower bound on the angles of triangles constructed by bisecting the longest side. </title> <journal> Math. Comp. </journal> <month> 29 </month> <year> (1975) </year> <month> 390-395. </month>
Reference-contexts: Bisections may propagate for some way across the triangulation, but this algorithm|now called Rivara refinement |always terminates, since each bisection splits a longer edge. Based on a theorem of Rosenberg and Stenger <ref> [182] </ref>, 39 Rivara showed that arbitrary repetition of this algorithm never produces an angle smaller than half the minimum original angle. In practice Rivara refinement typically improves angles. 2.4.2.
Reference: [183] <author> J. Ruppert. </author> <title> A new and simple algorithm for quality 2-dimensional mesh generation. </title> <booktitle> In Proc. 4th ACM-SIAM Symp. on Disc. Algorithms (1993) 83-92. </booktitle>
Reference-contexts: No triangle with edge lengths in this range can be more acute than 30 ffi or more obtuse than 120 ffi , without having a circumcircle radius larger than s. Recently, Ruppert <ref> [183] </ref> built upon Chew's approach to give a remarkably simple PSLG triangulation algorithm with the theoretical guarantee of Theorem 6. <p> Such a triangulation is an especially efficient mesh for laminar flows. (See [55, 171] for other stretched triangulations.) 2.4.5. Mesh Refinement A number of researchers have taken mesh refinement as the central step in mesh generation itself [14, 89, 179]. For example, the algorithms of Chew [49] and Rup-pert <ref> [183] </ref>, discussed in the last section, refine the constrained Delaunay triangulation by adding centers of circumcircles. An earlier, somewhat related, heuristic method is due to Frey [89]. In Frey's method, Steiner points are initially added to the boundary according to a "spacing function" that approximates local feature size.
Reference: [184] <author> J. Ruppert and R. Seidel. </author> <title> On the difficulty of tetrahedralizing 3-dimensional non-convex polyhedra. </title> <journal> Disc. and Comp. </journal> <note> Geometry 7 (1992) 227-253. </note>
Reference-contexts: Hershberger and Snoeyink prove a tight worst-case bound of O (nr + r 7=3 ) tetrahedra. These results reveal that nearly convex polyhedra require few Steiner points. The question arises: can we find an efficient algorithm that uses the minimum number of Steiner points? Ruppert and Seidel <ref> [184] </ref> give a negative answer to this question. They show that testing whether Steiner points are necessary to triangulate a given polyhedron is NP-complete (see [92]), even for star-shaped polyhedra (which can trivially be triangulated with a single Steiner point).
Reference: [185] <author> A. Saalfeld. </author> <title> Delaunay edge refinements. </title> <booktitle> In Proc. 3rd Canadian Conf. Comp. Geometry (1991) 33-36. </booktitle>
Reference-contexts: We first consider an approach to the conforming DT problem that uses a number of Steiner points dependent upon the geometry of the input as well as on n. The algorithm is a modification of one due to Saalfeld <ref> [185] </ref>, also related to two previous algorithms [32, 190]. Start with a triangulation of the input, and let * be the minimum height of any triangle. On each edge, add two Steiner points at distances *=3 from the endpoints. <p> In Frey's method, Steiner points are initially added to the boundary according to a "spacing function" that approximates local feature size. After this step, for most practical inputs, a Delaunay triangulation of the input vertices and the Steiner points includes the domain boundary. (Using the recent results of <ref> [164, 185] </ref>, this step can be made exact; see Section 2.3.5 above.) Next interior Steiner points are added.
Reference: [186] <author> S. Salzberg, A. Delcher, D. Heath, and S. Kasif. </author> <title> Learning with a helpful teacher. </title> <booktitle> In Proc. 12th Int. Joint Conf. Artificial Intelligence (1991). </booktitle>
Reference-contexts: Practitioners use dual meshes in the "finite volume" method in which each mesh vertex has an associated control volume; a perpendicular planar dual defines especially convenient control volumes, simplifying the calculation of flow or forces across element boundaries. Third, nonobtuse triangulation has application to computational learning theory <ref> [186] </ref>. Fourth, a nonobtuse triangulation simultaneously guarantees some optimality properties, as shown by the following lemma. Lemma 9. Any triangulation in which no triangle is obtuse must be a Delau-nay triangulation or constrained DT. A nonobtuse triangulation also minimizes the maximum angle, and maximizes the minimum height. <p> Apparently, neither the grid- nor circle-based algorithms solves a more difficult special case: nonobtuse triangulation of both the interior and exterior (up to the convex hull) of a polygon. This problem arises in computational learning theory <ref> [186] </ref>. Due to Lemma 9, a solution to this problem would also solve the conforming Delaunay triangulation problem described below. The hard part of the problem is getting "exterior" and "interior" Steiner points to match at the polygon 31 boundary. <p> The hard part of the problem is getting "exterior" and "interior" Steiner points to match at the polygon 31 boundary. There are however nonpolynomial algorithms [12, 151], and an (n 2 ) lower bound <ref> [186] </ref>, similar to Paterson's lower bound example. Open Problem 3. Is there an algorithm for polynomial-complexity nonobtuse triangulation of both the interior and exterior of a polygon? Of a PSLG? It is also natural to ask about no-large-angle requirements less stringent than nonobtuse triangulation.
Reference: [187] <author> H. Samet. </author> <title> The quadtree and related hierarchical data structures. </title> <note> Computing Surveys 16 (1984) 188-260. </note>
Reference-contexts: Unlike a uniform mesh, a 22 quadtree can produce elements of widely varying sizes, resulting in greater accuracy and efficiency. For example, in fluid flow simulations small triangles can be used in turbulent regions for accuracy, and large triangles in smooth regions for efficiency. Definition 7. A quadtree <ref> [86, 187, 188] </ref> is a recursive partition of a region of the plane into axis-aligned squares. One square, the root, covers the entire region. A square can be divided into four child squares, by splitting it with horizontal and vertical line segments through its center.
Reference: [188] <author> H. Samet. </author> <title> The Design and Analysis of Spatial Data Structures. </title> <publisher> Addison-Wesley, </publisher> <year> 1990. </year>
Reference-contexts: Unlike a uniform mesh, a 22 quadtree can produce elements of widely varying sizes, resulting in greater accuracy and efficiency. For example, in fluid flow simulations small triangles can be used in turbulent regions for accuracy, and large triangles in smooth regions for efficiency. Definition 7. A quadtree <ref> [86, 187, 188] </ref> is a recursive partition of a region of the plane into axis-aligned squares. One square, the root, covers the entire region. A square can be divided into four child squares, by splitting it with horizontal and vertical line segments through its center.
Reference: [189] <author> N. Sapidis and R. Perucchio. </author> <title> Advanced techniques for automatic finite element meshing from solid models. </title> <booktitle> Computer-Aided Design 21 (1989) 248-253. </booktitle>
Reference-contexts: We do not attempt a thorough literature survey, rather we give informal descriptions of a few mesh generation approaches, chosen to illustrate some of the main ideas in the field. There are already a number of articles that survey and classify the literature on automatic mesh generation <ref> [109, 189, 202, 208, 212, 221] </ref>, although we are not aware of a recent survey of two-dimensional mesh generation with an extensive bibliography. Overall, two-dimensional mesh generation seems fairly mature, and a number of different approaches give good results. <p> In the final steps, patterns are warped to approximate the actual boundary of the input, and Laplacian smoothing is applied. Further progress on their octree algorithm is reported by Shephard et al. [203]. Perucchio et al. <ref> [169, 189] </ref> have also advanced the octree approach with a different way of handling boundary cubes. Buratynski [35] uses rectangular octrees, that is, noncubical boxes, and a hierarchical set of warping rules. Boxes are first warped to input corners, then input edges, and finally input faces.
Reference: [190] <author> N. Sapidis and R. Perucchio. </author> <title> Delaunay triangulation of arbitrarily shaped planar domains. </title> <address> CAGD 8 (1991) 421-438. </address>
Reference-contexts: We first consider an approach to the conforming DT problem that uses a number of Steiner points dependent upon the geometry of the input as well as on n. The algorithm is a modification of one due to Saalfeld [185], also related to two previous algorithms <ref> [32, 190] </ref>. Start with a triangulation of the input, and let * be the minimum height of any triangle. On each edge, add two Steiner points at distances *=3 from the endpoints.
Reference: [191] <author> L.L. Scarlatos and T. Pavlidis. </author> <title> Optimizing triangulations by curvature equalization. </title> <booktitle> In Proc. Visualization '92 , IEEE Comput. </booktitle> <publisher> Soc. Press, </publisher> <pages> 333-339. </pages>
Reference-contexts: This last step may use triangles contained in the cross-sectional planes; indeed this capability is necessary in order to form a surface that does not intersect itself [97]. A number of researchers <ref> [51, 84, 103, 191] </ref> have worked on meshing curved surfaces. Chew [51] has extended his two-dimensional mesh generator (Section 2.3.1) to curved surfaces by generalizing planar Delaunay triangulation.
Reference: [192] <author> D. Schmitt and J.-C. Spehner. </author> <title> On equiangularity of Delaunay diagrams in every dimension. </title> <booktitle> In Proc. 5th Canadian Conf. Comp. Geometry (1993) 346-351. </booktitle>
Reference-contexts: Figure 38 gives a counterexample to the plausible conjecture that the DT also minimizes the radius of the largest circumsphere. Recently, Schmitt and Spehner <ref> [192] </ref> proved a second optimality theorem that holds in arbitrary dimension. We describe the result for IR 3 . Define the co-angle of a triangle in a tetrahedron t to be half the angle of the cone with apex at t's circumcenter and base equal to the triangle's circumcircle.
Reference: [193] <author> E. Schonhardt. </author> <title> Uber die Zerlegung von Dreieckspolyedern in Tetraeder. </title> <journal> Math. </journal> <note> An-nalen 98 (1928) 309-312. </note>
Reference-contexts: In contrast, linear complexity is not always possible for points in special position [4]. When we try to extend these results to nonconvex polyhedra, we meet a second surprise: not all polyhedra are tetrahedralizable [132]. The following counterexample is due to Schonhardt <ref> [193] </ref>. Start with a triangular prism, and twist one triangle relative to the other so that each rectangular face of the prism folds into two triangles with a reflex edge between them (Figure 33).
Reference: [194] <author> W.J. Schroeder and M.S. Shephard. </author> <title> Geometry-based fully automatic mesh generation and the Delaunay triangulation. </title> <journal> Int. J. Numer. Meth. Eng. </journal> <month> 26 </month> <year> (1988) </year> <month> 2503-2515. </month>
Reference: [195] <author> L.L. Schumaker. </author> <title> Triangulation methods. In Topics in Multivariate Approximation, </title> <editor> C.K. Chui, L.L. Schumaker, and F.I. Utreras, eds., </editor> <publisher> Academic Press, </publisher> <year> 1987, </year> <pages> 219-232. 76 </pages>
Reference-contexts: We say that f T interpolates S. The question arises: which triangulations are good for interpolation? This question has been discussed in the literature <ref> [16, 56, 66, 128, 195] </ref>. Rippa [177] recently proved a surprising result. Regardless of the input elevations, the Delaunay triangulation gives an interpolating surface, or elevated triangulation, optimal in a certain least energy sense. Theorem 12 (Rippa [177]).
Reference: [196] <author> L.L. Schumaker. </author> <title> Reconstructing 3D objects from cross-sections. In Computation of Curves and Surfaces, </title> <editor> W. Dahmen, M. Gasca, and C.A. Micchelli, eds., </editor> <publisher> Kluwer Academic Publishers, </publisher> <year> 1989, </year> <pages> 275-309. </pages>
Reference-contexts: The following problem is an example. Open Problem 8. For points in three dimensions, can an approximate min-surface-area enclosing polyhedron be found in polynomial time? A number of authors (see <ref> [15, 102, 196] </ref> for surveys) have considered the 48 problem of computing a triangulated surface interpolating a number of parallel planar cross-sections. Boissonat [31] takes each adjacent pair of cross-sections and uses planar conforming Delaunay triangulations to help compute a three-dimensional tetrahedralization spanning the pair.
Reference: [197] <author> R. Seidel. </author> <title> A convex hull algorithm optimal for point sets in even dimensions. </title> <type> Report 81-14, </type> <institution> Dept. of Computer Science, U. British Columbia, </institution> <year> 1981. </year>
Reference-contexts: The image points all lie on a paraboloid in four dimensions; the projection of the lower convex hull back onto the xyz-hyperplane gives the DT. Coupled with an algorithm for computing four-dimensional convex hulls <ref> [197] </ref>, this gives a worst-case optimal, quadratic-time algorithm to compute the DT. There are also direct algorithms. Bowyer [33] and Watson [219, 82] gave incremental algorithms that are quite popular in practice.
Reference: [198] <author> R. Seidel. </author> <title> Constrained Delaunay triangulations and Voronoi diagrams with obstacles. </title> <editor> In H.S. Poingratz and W. Schinnerl, eds., </editor> <address> 1978-1988 Ten Years IIG (1988) 178-191. </address>
Reference-contexts: We consider this conforming Delaunay triangulation problem in Section 2.3.5. The alternative approach generalizes the definition of the DT in order to force certain edges (the boundary) into the triangulation. Such a triangulation is known as a constrained Delaunay triangulation (CDT) <ref> [49, 54, 56, 129, 131, 198] </ref>. For generality, we allow the domain to be a planar straight line graph. The CDT of a polygonal region may be obtained by treating the polygon as a PSLG, and then removing all CDT edges exterior to the polygon. <p> Unfortunately it is possible for the angle-maximizing completion to be one of the exceptions. Just as the DT is dual to the Voronoi diagram, the CDT is related to the bounded Voronoi diagram <ref> [138, 198, 218] </ref>, a division of the plane into cells, one for each input vertex, so that the cell for vertex a consists of the region of the plane for which a is the nearest visible input point. <p> Chew [49] and others <ref> [198, 218] </ref> have improved this bound to O (n log n). Theorem 2 (Chew [49]). The CDT can be constructed in time O (n log n). Proof Sketch: Chew gives a divide-and-conquer algorithm.
Reference: [199] <author> R. Seidel. </author> <title> Backwards analysis of randomized geometric algorithms. </title> <type> ICSI Tech. Report TR-92-014, </type> <year> 1992. </year>
Reference-contexts: Fortune [87, 88] invented an elegant sweepline algorithm. Guibas, Knuth, and Sharir [101] gave a simple, randomized incremental algorithm. (For a simpler analysis of this algorithm see <ref> [162, 199] </ref>.) Maus [149] gave an algorithm for random points with expected linear running time; see also [27, 68, 152] for expected case analyses. The typical domain for mesh generation, however, is not a point set, but a polygonal region.
Reference: [200] <author> M.I. Shamos and D. Hoey. </author> <title> Closest-point problems. </title> <booktitle> In Proc. 16th IEEE Symp. Foundations of Comp. </booktitle> <address> Science (1975) 151-162. </address>
Reference-contexts: Moreover, each circumscribing circle (circumcircle) of a DT triangle contains no input points in its interior. Many O (n log n)-time algorithms are known for computing the DT of a point set, the first being Shamos and Hoey's divide-and-conquer algorithm <ref> [200] </ref>. The relation between Delaunay triangulation and convex hulls allows the use of any O (n log n)-time three-dimensional convex hull algorithm, such as that of Preparata and Hong [173]. Fortune [87, 88] invented an elegant sweepline algorithm. <p> The algorithm computes the CDT only for those regions containing at least one endpoint. The major remaining difficulty is merging two adjacent strips. This problem can be reduced to merging adjacent regions. As in some DT algorithms <ref> [200] </ref>, the 13 merger is performed by sweeping a circle along the boundary between the two regions. The work is proportional to the number of old edges removed and new ones added; since the sizes of the old and new triangulations are linear, so is the time bound.
Reference: [201] <institution> J.G. Shaw. Xerox Webster Research Center, Webster, </institution> <address> New York. </address>
Reference-contexts: Shaw <ref> [201] </ref> has recently developed a simple, refinement-based mesh generator. The user inputs a very rough, triangular, initial mesh, with the correct number of boundary components in roughly correct locations. The user assigns a 44 local feature size to each node of the initial mesh.
Reference: [202] <author> M.S. Shephard. </author> <title> Approaches to the automatic generation and control of finite element meshes. </title> <journal> Appl. Mech. Rev. </journal> <month> 41 </month> <year> (1988) </year> <month> 169-185. </month>
Reference-contexts: We do not attempt a thorough literature survey, rather we give informal descriptions of a few mesh generation approaches, chosen to illustrate some of the main ideas in the field. There are already a number of articles that survey and classify the literature on automatic mesh generation <ref> [109, 189, 202, 208, 212, 221] </ref>, although we are not aware of a recent survey of two-dimensional mesh generation with an extensive bibliography. Overall, two-dimensional mesh generation seems fairly mature, and a number of different approaches give good results.
Reference: [203] <author> M.S. Shephard, F. Guerinoni, J.E. Flaherty, R.A. Ludwig, and P.L. Baehmann. </author> <title> Finite octree mesh generation for automated adaptive three-dimensional flow analysis. </title> <booktitle> In Proc. of 2nd Int. Conf. on Numer. Grid Generation in Computational Fluid Mechanics (1988) 709-718. </booktitle>
Reference-contexts: In the final steps, patterns are warped to approximate the actual boundary of the input, and Laplacian smoothing is applied. Further progress on their octree algorithm is reported by Shephard et al. <ref> [203] </ref>. Perucchio et al. [169, 189] have also advanced the octree approach with a different way of handling boundary cubes. Buratynski [35] uses rectangular octrees, that is, noncubical boxes, and a hierarchical set of warping rules. Boxes are first warped to input corners, then input edges, and finally input faces.
Reference: [204] <author> R. Sibson. </author> <title> Locally equiangular triangulations. </title> <journal> Computer J. </journal> <month> 21 </month> <year> (1978) </year> <month> 243-245. </month>
Reference: [205] <author> D. Sleator, R.E. Tarjan, and W. Thurston. </author> <title> Rotation distance, triangulations, and hyperbolic geometry. </title> <journal> J. Amer. Math. Soc. </journal> <month> 1 </month> <year> (1988) </year> <month> 647-682. </month>
Reference-contexts: Matching can be solved by the same dynamic programming techniques as above; however, for convex polygons this can be improved to O (n log n) [147]. Another problem, construction of optimal binary trees, is also related to triangulation of convex polygons <ref> [205] </ref>, and again the O (n 3 ) dynamic program solves this problem. Yao [223] improved this to O (n 2 ) using the quadrangle inequality, a relation that also holds for diagonal lengths in a convex polygon.
Reference: [206] <author> W.D. Smith. </author> <title> Studies in Discrete and Computational Geometry. </title> <type> PhD thesis, </type> <institution> Prince-ton University, </institution> <year> 1988. </year>
Reference: [207] <author> W.D. Smith. </author> <title> Implementing the Plaisted-Hong min-length plane triangulation heuristic. </title> <type> Manuscript cited by [53], </type> <year> 1989. </year>
Reference-contexts: Then the optimal triangulation, greedy triangulation, or ring heuristic can be used to triangulate these polygons, achieving an O (log n) approximation. The Plaisted-Hong algorithm has recently been implemented with a running time of O (n 2 log n) <ref> [207] </ref>. Open Problem 2. Is it possible to find the MWT (or an O (1) approximation to the MWT) of a point set in polynomial time? Or is this problem NP-complete? 2.3. Steiner Triangulation In this section we discuss triangulations using Steiner points.
Reference: [208] <author> V. Srinivasan, L.R. Nackman, J-M. Tang, </author> <title> and S.N. Meshkat. Automatic mesh generation using the symmetric axis tranformation of polygonal domains. </title> <type> Tech. Rept. RC 16132, </type> <institution> Comp. Science, IBM Research Division, </institution> <address> Yorktown Heights, NY, </address> <year> 1990. </year>
Reference-contexts: We do not attempt a thorough literature survey, rather we give informal descriptions of a few mesh generation approaches, chosen to illustrate some of the main ideas in the field. There are already a number of articles that survey and classify the literature on automatic mesh generation <ref> [109, 189, 202, 208, 212, 221] </ref>, although we are not aware of a recent survey of two-dimensional mesh generation with an extensive bibliography. Overall, two-dimensional mesh generation seems fairly mature, and a number of different approaches give good results. <p> Quadtree methods, however, have been criticized for occasionally producing poorly-shaped boundary elements, and for introducing artificial preferred directions (namely parallel to the x- or y-axes) <ref> [208] </ref>. The problem of poorly-shaped elements can be solved by the warping methods of Bern et al. [25]. <p> This extra control is important in applications in which the solution to the finite element computation is expected to show features smaller than the features of the domain. 42 Srinivasan et al. <ref> [208] </ref> recently developed an interesting polygon decomposition mesh generator, using the symmetric axis transform. The symmetric axis is the set of all centers of disks contained in P that contact P at two or more points; it consists of straight lines and parabolic arcs.
Reference: [209] <author> G. Strang and G.J. Fix. </author> <title> An Analysis of the Finite Element Method. </title> <publisher> Prentice-Hall, </publisher> <year> 1973. </year>
Reference-contexts: A number of quality measures find motivation in finite element methods. The numerical condition of matrices in a finite element computation is related to the minimum angle in the triangulation. The error of a finite element approximation is 7 also related to the minimum angle <ref> [91, 209] </ref>, and even more closely related to the maximum angle [5, 112]. The minimum height of a triangle relates to the quality of a curved-surface approximation [98], and to a key step in a new three-dimensional mesh generation algorithm [157]. <p> Several other optimization criteria find application in interpolation [69, 178]. For a given element shape, approximation error grows with element size, which can be measured simply by maximum edge length <ref> [209] </ref> or by more complicated metrics.
Reference: [210] <author> T.-S. Tan. </author> <title> An optimal bound for conforming quality triangulations. </title> <booktitle> In Proc. 10th ACM Symp. Comp. Geometry (1994) 240-249. </booktitle>
Reference-contexts: No-large-angle triangulations, however, are known for some types of input for which nonobtuse triangulation remains open. Recently, Mitchell [155] showed how to triangulate any planar straight-line graph using O (n 2 log n) triangles with maximum angle 157:5 ffi . Tan <ref> [210] </ref> improved the maximum angle bound to 132 ffi and the complexity to the optimal O (n 2 ). These two results use a similar global approach. Starting from any triangulation of the PSLG, Mitchell and Tan split over-large angles by dropping perpendiculars to opposite sides.
Reference: [211] <author> R.E. Tarjan and C.J. Van Wyk. </author> <title> An O(n log log n)-time algorithm for triangulating a simple polygon. </title> <journal> SIAM J. Comput. </journal> <month> 17 </month> <year> (1988) </year> <month> 143-178. </month>
Reference-contexts: For many geometric problems there are matching (n log n) lower bounds, but none was known in this case. There were also many faster special case algorithms [45, 93, 108]. After Tarjan and Van Wyk <ref> [211] </ref> broke through to O (n log log n), Chazelle [43] ended the quest by announcing a linear-time triangulation algorithm for simple polygons. 6 We now discuss the other types of input domains.
Reference: [212] <author> W.C. Thacker. </author> <title> A brief review of techniques for generating irregular computational grids. </title> <journal> Int. J. Numer. Meth. Eng. </journal> <month> 15 </month> <year> (1980) </year> <month> 1335-1341. </month>
Reference-contexts: We do not attempt a thorough literature survey, rather we give informal descriptions of a few mesh generation approaches, chosen to illustrate some of the main ideas in the field. There are already a number of articles that survey and classify the literature on automatic mesh generation <ref> [109, 189, 202, 208, 212, 221] </ref>, although we are not aware of a recent survey of two-dimensional mesh generation with an extensive bibliography. Overall, two-dimensional mesh generation seems fairly mature, and a number of different approaches give good results.
Reference: [213] <author> J.F. Thompson, ed. </author> <title> Numerical Grid Generation. </title> <publisher> North-Holland, </publisher> <year> 1982. </year> <month> 77 </month>
Reference-contexts: Overall, two-dimensional mesh generation seems fairly mature, and a number of different approaches give good results. As we mentioned in the introduction, we restrict our discussion to generation of unstructured triangular meshes; for structured meshes, such as quadrilateral meshes given by conformal mapping techniques, see <ref> [39, 213, 214] </ref>. 2.4.1. Mesh Improvement Techniques Before describing heuristic mesh generation methods, we mention some mesh improvement techniques, which can be used as post-processing steps after any of the heuristics.
Reference: [214] <author> J.F. Thompson, Z.U.A. Warsi, C.W. Mastin. </author> <title> Numerical Grid Generation: Founda--tions and Applications. </title> <publisher> North-Holland, </publisher> <year> 1985. </year>
Reference-contexts: Overall, two-dimensional mesh generation seems fairly mature, and a number of different approaches give good results. As we mentioned in the introduction, we restrict our discussion to generation of unstructured triangular meshes; for structured meshes, such as quadrilateral meshes given by conformal mapping techniques, see <ref> [39, 213, 214] </ref>. 2.4.1. Mesh Improvement Techniques Before describing heuristic mesh generation methods, we mention some mesh improvement techniques, which can be used as post-processing steps after any of the heuristics.
Reference: [215] <author> G.T. Toussaint, C. Verbrugge, C. Wang, and B. Zhu. </author> <title> Tetrahedralization of simple and non-simple polyhedra. </title> <booktitle> In Proc. 5th Canadian Conf. Comp. Geometry (1993) 24-29. </booktitle>
Reference-contexts: He also shows that even for general polyhedra, only interior Steiner points are necessary. This result may have application to multiple domains (see also [156]); it follows from "fattening" each face into a roughly prism-shaped solid. Toussaint et al. <ref> [215] </ref> prove that the union of three convex polyhedra can be tetrahedralized without Steiner points. Chazelle and Shouraboura [47] improve Bern's O (n log n) bound to linear by reintroducing Steiner points.
Reference: [216] <author> P.J.M. van Laarhoven and E.H.L. Aarts. </author> <title> Simulated Annealing: Theory and Practice. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Dordrecht, the Netherlands, </address> <year> 1987. </year>
Reference-contexts: A local optimum can be very far from a global optimum; for example, it may have total edge length (n) times the true optimal length; see Figure 6. One way to escape local optima is to allow local moves that do not improve the triangulation, as in simulated annealing <ref> [125, 216] </ref>. A different approach is to generalize the local improvement procedure.
Reference: [217] <author> S.A. Vavasis. </author> <title> Stable finite elements for problems with wild coefficients. </title> <type> Tech. Report TR93-1364, </type> <institution> Dept. of Comp. Science, Cornell University, </institution> <year> 1993. </year>
Reference-contexts: Thus the strongest bound on the largest angle, that does not imply a bound on the smallest angle, is 90 ffi ; in other words, the triangulation must be nonobtuse. Nonobtuse triangulation claims a number of motivations. A nonobtuse mesh guarantees some desirable numerical properties related to diagonal dominance <ref> [12, 217] </ref>. Vavasis [217] recently proved that for problems with physical characteristics that vary enormously over the domain, a nonobtuse mesh implies faster convergence of a certain numerical method. A second motivation involves planar duality. <p> Nonobtuse triangulation claims a number of motivations. A nonobtuse mesh guarantees some desirable numerical properties related to diagonal dominance [12, 217]. Vavasis <ref> [217] </ref> recently proved that for problems with physical characteristics that vary enormously over the domain, a nonobtuse mesh implies faster convergence of a certain numerical method. A second motivation involves planar duality. <p> Nonobtuse Triangulation There is more than one way to generalize nonobtuse triangulation to three dimensions. For a convergence bound on a certain numerical method, Vavasis <ref> [217] </ref> assumes that no dihedral angle is obtuse. Nonobtuse dihedrals, however, do not imply that the mesh is a Delaunay triangulation. For this implication we need a different generalization: each tetrahedron is self-centered , meaning that it contains its circumcenter [176].
Reference: [218] <author> C. Wang and L. Schubert. </author> <title> An optimal algorithm for constructing the Delaunay triangulation of a set of line segments. </title> <booktitle> In Proc. 3rd ACM Symp. Comp. Geometry (1987) 223-232. </booktitle>
Reference-contexts: Unfortunately it is possible for the angle-maximizing completion to be one of the exceptions. Just as the DT is dual to the Voronoi diagram, the CDT is related to the bounded Voronoi diagram <ref> [138, 198, 218] </ref>, a division of the plane into cells, one for each input vertex, so that the cell for vertex a consists of the region of the plane for which a is the nearest visible input point. <p> Chew [49] and others <ref> [198, 218] </ref> have improved this bound to O (n log n). Theorem 2 (Chew [49]). The CDT can be constructed in time O (n log n). Proof Sketch: Chew gives a divide-and-conquer algorithm.
Reference: [219] <author> D.F. Watson. </author> <title> Computing the n-dimensional Delaunay tessellation with application to Voronoi polytopes. </title> <journal> Computer J. </journal> <month> 24 </month> <year> (1981) </year> <month> 167-171. </month>
Reference-contexts: Coupled with an algorithm for computing four-dimensional convex hulls [197], this gives a worst-case optimal, quadratic-time algorithm to compute the DT. There are also direct algorithms. Bowyer [33] and Watson <ref> [219, 82] </ref> gave incremental algorithms that are quite popular in practice. Watson's algorithm inserts points in sorted order by one coordinate, testing all old circumspheres that intersect the current sweep plane. Bowyer includes evidence that his algorithm runs in time O (n 4=3 ) for a random point set.
Reference: [220] <author> D.F. Watson and G.M. Philip. </author> <title> Systematic triangulations. Computer Vision, Graphics, </title> <booktitle> and Image Processing 26 (1984) 217-223. </booktitle>
Reference-contexts: The success of the flip algorithm for Delaunay triangulation has led to the use of edge flipping (with the appropriate definitions of reversed quadrilateral) for finding triangulations that approximately optimize other criteria, such as vertex degree [90], maximum angle [104], total edge length <ref> [220] </ref>, or the ratio of the areas of inscribed circle and triangle [16]. Edge flipping to improve these criteria, however, will not usually compute a global optimum. The problem is that the algorithm can get stuck in a local optimum, in which no flip improves the triangulation. <p> The distance from the circum-center, or "eccentricity", is a measure of obtuseness, with larger triangles weighted more heavily. In Section 2.5, we show that edge insertion also finds an interpolating surface with minimum slope. All of these criteria are mentioned in <ref> [220] </ref>. 2.2.3. Dynamic Programming We have seen that a number of optimal triangulation problems admit efficient solutions for PSLGs (including polygons as a special case). <p> See [16, 69] for heuristic solutions to other interpolation problems. Bern et al. [23] recently considered the problem of finding the minimum slope interpolating surface for input points with elevations (an optimization criterion mentioned in <ref> [220] </ref>). The slope of an elevated triangle is the slope in the direction of steepest descent, and the slope of an elevated triangulation is the maximum slope of any of its elevated triangles.
Reference: [221] <author> R.D. Williams. </author> <title> Adaptive parallel meshes with complex geometry. </title> <type> Tech. Report CRPC-91-2, </type> <institution> Center for Research on Parallel Computation, California Inst. of Technology, </institution> <year> 1991. </year>
Reference-contexts: We do not attempt a thorough literature survey, rather we give informal descriptions of a few mesh generation approaches, chosen to illustrate some of the main ideas in the field. There are already a number of articles that survey and classify the literature on automatic mesh generation <ref> [109, 189, 202, 208, 212, 221] </ref>, although we are not aware of a recent survey of two-dimensional mesh generation with an extensive bibliography. Overall, two-dimensional mesh generation seems fairly mature, and a number of different approaches give good results.
Reference: [222] <author> A.M. </author> <title> Winslow. An irregular triangle mesh generator. </title> <type> Report UCXRL-7880, </type> <institution> National Technical Information Service, Springfield, VA, </institution> <year> 1964. </year>
Reference-contexts: Mesh Improvement Techniques Before describing heuristic mesh generation methods, we mention some mesh improvement techniques, which can be used as post-processing steps after any of the heuristics. One very useful technique, dating to the 1960s <ref> [222] </ref>, is called Laplacian smoothing because its repositioning formula can be derived from a finite difference approximation of Laplace's equation [105].
Reference: [223] <author> F.F. Yao. </author> <title> Speed-up in dynamic programming. </title> <journal> SIAM J. Algebraic and Disc. </journal> <note> Methods 3 (1982) 532-540. </note>
Reference-contexts: Another problem, construction of optimal binary trees, is also related to triangulation of convex polygons [205], and again the O (n 3 ) dynamic program solves this problem. Yao <ref> [223] </ref> improved this to O (n 2 ) using the quadrangle inequality, a relation that also holds for diagonal lengths in a convex polygon. In some cases this can be further improved to O (n log n) [110].
Reference: [224] <author> M.A. </author> <title> Yerry and M.S. Shephard. A modified quadtree approach to finite element mesh generation. </title> <booktitle> IEEE Computer Graphics and Applications 3 (January/February 1983) 39-46. </booktitle>
Reference-contexts: They also provide a similar set of special cases to handle the triangulation near each vertex. Bern, Eppstein, and Gilbert [25] combined a similar approach to mesh generation with an innovative optimality analysis. Their algorithms use quadtrees, which had been used in heuristics since the early 80's <ref> [224] </ref> and suggested by Baker et al. [12] as a natural enhancement to their algorithm. Unlike a uniform mesh, a 22 quadtree can produce elements of widely varying sizes, resulting in greater accuracy and efficiency. <p> In practice Rivara refinement typically improves angles. 2.4.2. Quadtrees Long before the theoretically good mesh generation methods described in the last section [25], quadtrees had been used in heuristic methods. Yerry and Shep-hard <ref> [224] </ref> construct a quadtree representation of a polygonal or curved domain by recursively splitting squares intersected by the boundary of the domain, until squares reach some minimum size bound.
Reference: [225] <author> M.A. </author> <title> Yerry and M.S. Shephard. Automatic three-dimensional mesh generation by the modified-octree technique. </title> <journal> Int. J. Numer. Meth. Eng. </journal> <volume> 20 (1984) 1965-1990. </volume> <pages> 78 </pages>
Reference-contexts: See [9, 95, 144] for surveys discussing both structured and unstructured meshes primarily for fluid flow problems. Overall, three-dimensional unstructured mesh generation is still in its early stages of development. 3.4.1. Mesh improvement Laplacian smoothing (see Section 2.4.1) generalizes to three dimensions <ref> [41, 225] </ref>, but the improvement it offers may not be as significant as in two dimensions. 62 There are local tranformations that trade two tetrahedra for three, and three tetrahedra for two, as discussed above (Section 3.2.1). <p> Open Problem 12. Does repeated application of three-dimensional Rivara refinement keep the minimum solid angle bounded away from zero? 3.4.2. Octrees Yerry and Shephard generalized their quadtree algorithm to a three-dimensional algorithm using balanced octrees <ref> [225] </ref>. They kept the number of "patterns" for boundary cubes manageable by assuming that each cube was cut by at most three facets of the input polyhedron. In the final steps, patterns are warped to approximate the actual boundary of the input, and Laplacian smoothing is applied.
References-found: 225

