URL: http://http.cs.berkeley.edu/~parsons/papers/robotics/ICRA90/paper.ps
Refering-URL: http://http.cs.berkeley.edu/~parsons/
Root-URL: 
Title: A Motion Planner for Multiple Mobile Robots  
Author: David Parsons John Canny 
Date: 1990  
Note: presented at the Seventh IEEE International Conference on Robotics and Automation, Cinncinnati, Ohio,  
Address: Berkeley, CA 94720  
Affiliation: Department of Electrical Engineering and Computer Science Electronics Research Laboratory University of California  
Abstract: We describe an algorithm for planning the motions of several mobile robots which share the same workspace. Each robot is capable of independent translational motion in two dimensions, and the workspace contains polygonal obstacles. The algorithm computes a path for each robot which avoids all obstacles in the workspace as well as the other robots. It is guaranteed to find a solution if one exists. The algorithm takes a cell decomposition approach, where the decomposition used is based on the idea of a product operation defined on the cells in a decomposition of a two-dimensional free space. We are implementing this algorithm for the case of two robots as part of ongoing research into useful algorithms for task-level programming of the RobotWorld 1 system.
Abstract-found: 1
Intro-found: 1
Reference: [BLL89] <author> Jerome Barraquand, Bruno Langlois, and Jean-Claude Latombe. </author> <title> Robot motion planning with many degrees of freedom and dynamic constraints. </title> <booktitle> In 5th International Symposium on Robotics Research, </booktitle> <pages> pages 74-83, </pages> <address> Tokyo, Japan, </address> <month> August </month> <year> 1989. </year> <note> IEEE. </note>
Reference-contexts: For problems involving configuration spaces of very high dimension, therefore, only heuristic solutions will be acceptable in practice. See <ref> [BLL89] </ref> for a recent fast heuristic approach to a wide class of motion planning problems of high dimension. Practical complete algorithms have been developed for some motion planning problems of dimension ranging from 2 to about 6.
Reference: [Buc89] <author> Stephen J. Buckley. </author> <title> Fast motion planning for multiple moving robots. </title> <booktitle> In International Conference on Robotics and Automation, </booktitle> <pages> pages 322-326, </pages> <address> Scottsdale, Arizona, </address> <month> May </month> <year> 1989. </year> <note> IEEE. </note>
Reference: [Ede87] <author> Herbert Edelsbrunner. </author> <title> Algorithms in Combinatorial Geometry. </title> <publisher> Springer-Verlag, </publisher> <address> Berlin Heidelberg, </address> <year> 1987. </year>
Reference-contexts: The slicing of a cell is in fact completely determined by its 1-skeleton; however, since we need the 3-D facets for path planning it is necessary to explicitly represent all the faces of all dimensions, 0-4. For this we use a general incidence graph structure as described in <ref> [Ede87] </ref>.
Reference: [ELP87] <author> Michael Erdmann and Tomas Lozano-Perez. </author> <title> On multiple moving objects. </title> <journal> Al-gorithmica, </journal> <volume> 2 </volume> <pages> 477-521, </pages> <year> 1987. </year>
Reference: [HSS84] <author> J. E. Hopcroft, Jacob T. Schwartz, and Micha Sharir. </author> <title> On the complexity of motion planning for multiple independent objects; PSPACE-hardness of the "warehouseman's problem". </title> <journal> International Journal of Robotics Research, </journal> <volume> 3(4) </volume> <pages> 76-88, </pages> <year> 1984. </year>
Reference: [LP83] <author> Tomas Lozano-Perez. </author> <title> Spatial planning: A configuration space approach. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 32(2) </volume> <pages> 108-120, </pages> <month> February </month> <year> 1983. </year>
Reference-contexts: A valid path between two configurations exists if and only if they lie in the same connected component of free space. (For an explanation of the notion of configuration space see <ref> [LP83] </ref>.) The algorithm we describe here is a complete solution in the sense that it is guaranteed to find a valid path if one exists.
Reference: [LS87] <author> Daniel Leven and Micha Sharir. </author> <title> Planning a purely translational motion for a convex object. </title> <journal> Discrete and Computational Geometry, </journal> <volume> 2(1) </volume> <pages> 9-31, </pages> <year> 1987. </year>
Reference-contexts: If n denotes the size of the environment description (e.g. n is the number of vertices in the obstacle polygons), it can be shown that the free space F 1 computed in step 1 has O (n) size (see <ref> [LS87] </ref>). This implies in turn that the tesselation T computed in step 2 has O (n) polygons (an upper bound is the number of triangles in a triangulation, which is O (n)). Step 3 therefore yields O (n k ) product cells.
Reference: [OSY83] <author> Colm O'Dunlaing, Micha Sharir, and Chee-Keng Yap. Retraction: </author> <title> A new approach to motion planning. </title> <booktitle> In 15th Symposium on the Theory of Computing. ACM, </booktitle> <year> 1983. </year>
Reference: [PS85] <author> Franco P. Preparata and Michael Ian Shamos. </author> <title> Computational Geometry: an Introduction. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1985. </year>
Reference-contexts: solution to a motion planning query problem, in which extra preprocessing time is deemed acceptable in the interest of fast complete path finding for particular start/goal configuration pairs. (This distinction between preprocessing time and query time is common in many problems in computational geometry; many examples may be found in <ref> [PS85] </ref>.) Since answering a particular query reduces to finding a path through a graph, a variety of fast search algorithms are applicable to the second phase.
Reference: [Sch87] <author> V. Scheinman. Robotworld: </author> <title> A multiple robot vision guided assembly system. </title> <booktitle> In 3rd International Symposium on Robotics Research, </booktitle> <year> 1987. </year> <month> 13 </month>
Reference-contexts: In particular, we are motivated by the need to develop practical algorithms for motion coordination in the RobotWorld environment. (RobotWorld is a general-purpose robotic assembly system consisting of a number of two-dimensional Sawyer motors magnetically suspended from a horizontal platten; see <ref> [Sch87] </ref> for details.) The geometric problem of computing viable motions for a robot system in the presence of physical obstacles has received much attention during the last decade. Both theoretical lower bounds and useful algorithms for particular cases of the problem have been obtained.
Reference: [Sha89] <author> Micha Sharir. </author> <title> Algorithmic motion planning in robotics. </title> <booktitle> Computer, </booktitle> <pages> pages 9-19, </pages> <month> March </month> <year> 1989. </year>
Reference-contexts: Both theoretical lower bounds and useful algorithms for particular cases of the problem have been obtained. Excellent overviews of this work can be found in <ref> [Sha89] </ref>, [Yap87], and [Whi85]. Many particular cases have been shown to be PSPACE-hard, suggesting an exponential lower bound on the worst-case running time of any algorithm which solves one of these cases (unless PSPACE = P ).
Reference: [SS83] <author> Jacob T. Schwartz and Micha Sharir. </author> <title> On the piano movers' problem: ii. general techniques for computing topological properties of real algebraic manifolds. </title> <booktitle> Advances in Applied Mathematics, </booktitle> <volume> 4 </volume> <pages> 298-351, </pages> <year> 1983. </year>
Reference: [SS88] <author> Micha Sharir and Shmuel Sifrony. </author> <title> Coordinated motion planning for two independent robots. </title> <booktitle> In 4th Symposium on Computational Geometry, </booktitle> <pages> pages 319-328. </pages> <publisher> ACM, </publisher> <year> 1988. </year>
Reference-contexts: The algorithm therefore works well in sparse environments, but fails when many obstacles are introduced. Our algorithm takes the general approach described for the case of 2 robots in <ref> [SS88] </ref>. They introduce the paradigm of taking the product of 2-dimensional cells in a cell decomposition of the free space for each robot alone, and then further decomposing the product cells in order to avoid collisions between the two robots.
Reference: [Whi85] <author> Sue H. Whitesides. </author> <title> Computational geometry and motion planning. </title> <editor> In G. T. Toussaint, editor, </editor> <booktitle> Computational Geometry, </booktitle> <pages> pages 377-427. </pages> <publisher> Elsevier Science (North-Holland), </publisher> <year> 1985. </year>
Reference-contexts: Both theoretical lower bounds and useful algorithms for particular cases of the problem have been obtained. Excellent overviews of this work can be found in [Sha89], [Yap87], and <ref> [Whi85] </ref>. Many particular cases have been shown to be PSPACE-hard, suggesting an exponential lower bound on the worst-case running time of any algorithm which solves one of these cases (unless PSPACE = P ).
Reference: [Yap87] <author> Chee-Keng Yap. </author> <title> Algorithmic motion planning. </title> <editor> In Jacob T. Schwartz and Chee-Keng Yap, editors, </editor> <booktitle> Advances in Robotics, chapter 3, </booktitle> <pages> pages 95-143. </pages> <publisher> Lawrence Erlbaum Associates, </publisher> <year> 1987. </year> <month> 14 </month>
Reference-contexts: Both theoretical lower bounds and useful algorithms for particular cases of the problem have been obtained. Excellent overviews of this work can be found in [Sha89], <ref> [Yap87] </ref>, and [Whi85]. Many particular cases have been shown to be PSPACE-hard, suggesting an exponential lower bound on the worst-case running time of any algorithm which solves one of these cases (unless PSPACE = P ).
References-found: 15

