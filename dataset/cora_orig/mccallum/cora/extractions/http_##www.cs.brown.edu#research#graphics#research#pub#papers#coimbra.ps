URL: http://www.cs.brown.edu/research/graphics/research/pub/papers/coimbra.ps
Refering-URL: http://www.cs.brown.edu/research/graphics/research/pub/
Root-URL: http://www.cs.brown.edu
Title: Interacting with virtual reality  
Author: M. M. Wloka 
Keyword: Virtual reality, interaction, user interface, performance  
Address: Box  Providence, RI 02912, USA.  
Affiliation: Science and Technology Center for Computer Graphics and Scien tific Visualization, Brown University Site Department of Computer Science,  Brown University,  
Email: email: mmw@cs.brown.edu  
Phone: Telephone: (401) 863-7600. Fax: (401) 863-7657.  
Date: 1910,  
Abstract: Interacting with virtual reality is fundamentally different from interacing with traditional desktop graphics. The three features that characterize virtual reality interaction are immersion, rich interaction and presence; I define these features. To achieve them, virtual reality system designers need to address many different issues. I discuss some of these issues, in particular multiple inputs, multiple outputs, multiple participants, dynamic virtual worlds, user interface paradigms and performance. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Adelstein, B.D., Johnston, E.R. and Ellis, </author> <title> S.R. (1992) A testbed for characterizing dynamic response of virtual environment spatial sensors. </title> <booktitle> 1992 UIST Proceedings, </booktitle> <pages> 15-22. </pages>
Reference-contexts: Total user input characteristic components. device lag includes signal generation and communication time. Depending on the type of device and mode of operation (i.e. noise filtering on/off, different orientation reporting modes, etc.), lag ranges from 10ms to 120ms; throughput is between 30 and 50 samples per second <ref> (Adelstein et al., 1992) </ref>. Application-dependent processing lag Once the user input device data arrives at the host workstation, the application processes it.
Reference: <author> Beaudouin-Lafon, M. and Gaver, </author> <title> W.W. (1994) ENO: Synthesizing structured sound spaces. </title> <booktitle> 1994 UIST Proceedings, </booktitle> <pages> 49-57. </pages>
Reference: <author> Bryson, S., Feiner, S., Pausch, R., Proffitt, D., Sowizral, H. and van Dam, A. </author> <title> (1994) Developing advanced virtual reality applications. </title> <note> Course Notes of Course 02 at SIGGRAPH'94. </note>
Reference-contexts: Researchers are thus searching for different paradigms that inherently incorporate haptics. For example, Randy Pausch is taking the approach of building a specific user input device for every new application task <ref> (Bryson et al., 1994) </ref>. While this approach is effective, it seems cumbersome to build new hardware for every software application. In addition, all the above paradigms are less immediate than the human-object interactions in the real world.
Reference: <author> Bryson, S. and Levitt, C. </author> <title> (1991) The virtual windtunnel: An environment for the exploration of three-dimensional unsteady flows. </title> <booktitle> Visualization '91, </booktitle> <pages> 17-24. </pages>
Reference-contexts: Processing can be as simple as transforming the data from the device format to the rendering format, i.e. the application echoes the user input device position to the virtual environment. Other more complicated application processes are common, for example, interactive streamline computations for virtual windtunnels <ref> (Bryson and Levitt, 1991) </ref>. Processing lag is highly application-dependent and thus highly variable. The simple echoing scheme above is the lower bound; today's workstations perform these data transformations in less than one millisecond. The upper bound is harder to characterize.
Reference: <author> Bulterman, D.C.A., van Rossum, G. and van Liere, R. </author> <title> (1991) A structure for transportable, dynamic multimedia documents. </title> <booktitle> Usenix Summer 1991. </booktitle>
Reference: <author> Elliott, C., Schechter, G., Yeung, R. and Abi-Ezzi, S. </author> <year> (1994) </year> <month> TBAG: </month> <title> A high level framework for interactive, animated 3D graphics applications. </title> <booktitle> Computer Graphics (SIGGRAPH '94 Proceedings), </booktitle> <volume> 28, </volume> <pages> 421-434. </pages>
Reference-contexts: Doing so has immediate benefits, for example, allowing high-level optimizations <ref> (Elliott et al., 1994) </ref>. In order to manage the added complexity, control structures similar to those used for managing spatial information are useful.
Reference: <author> Foley, J.D. and van Dam, A. </author> <title> (1982) Fundamentals of Interactive Computer Graphics. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA. </address>
Reference-contexts: Therefore, the applicability of even basic concepts of interactive 3D graphics is questioned. For example, 3D graphics architectures have used essentially the same 3D viewing pipelines <ref> (Foley and van Dam, 1982) </ref> for more than a decade; recently, Regan and Pose (1994) proposed a much different pipeline that better satisfies the needs of VR applications. Accordingly, interacting with VR is different from interacting with traditional 3D graphics applications.
Reference: <author> Friedmann, M., Starner, T. and Pentland, A. </author> <title> (1992) Device synchronization using an optimal linear filter. </title> <booktitle> Computer Graphics (1992 Symposium on Interactive 3D Graphics), </booktitle> <volume> 25(2), </volume> <pages> 57-62. </pages>
Reference-contexts: (33 + 500 + 100) ms = 316:5ms. (3) While synchronization lag is easy to overlook, it contributes up to 50% of the total lag in a VR system. 7.2 Techniques to reduce lag Prediction Prediction methods extrapolate past user input data to future time points, thus reducing perceived lag <ref> (Friedmann et al., 1992) </ref>. However, this extrapolation process introduces spatial inaccuracies that increase under the following three conditions (Friedmann et al., 1992): (1) the user input device throughput is too low; (2) prediction is too far in the future; and (3) the user input device acceleration is too high. <p> up to 50% of the total lag in a VR system. 7.2 Techniques to reduce lag Prediction Prediction methods extrapolate past user input data to future time points, thus reducing perceived lag <ref> (Friedmann et al., 1992) </ref>. However, this extrapolation process introduces spatial inaccuracies that increase under the following three conditions (Friedmann et al., 1992): (1) the user input device throughput is too low; (2) prediction is too far in the future; and (3) the user input device acceleration is too high.
Reference: <author> Gibbs, S. </author> <title> (1991) Composite multimedia and active objects. </title> <booktitle> Proceedings of OOPSLA'91, </booktitle> <pages> 97-112. </pages>
Reference-contexts: So far, the following advanced models of time are being proposed: encapsulating and reusing dynamic behaviors (Kalra and Barr, 1992), constructing hierarchical time coordinate systems (Tarlton and Tarlton, 1992) and using synchronization primitives <ref> (Gibbs, 1991) </ref>. The idea of making time a first-class notion also applies to interactive behaviors: instead of simulating interactive behavior by reediting a static database, interactive behaviors are described and stored directly in the database.
Reference: <author> Held, R. and Durlach, N. </author> <year> (1991) </year> <month> Telepresence, </month> <title> time delay and adaptation, in Pictorial Communication in Virtual and Real Environments (ed. S.R. Ellis), chapter 14. Taylor and Francis. Id Software. (1994) Doom. Video game for IBM PC compatible computers. </title>
Reference-contexts: Even worse, if lag exceeds 300ms, humans start to dissociate their movements from the displayed effects, thus destroying any im-mersive effects <ref> (Held and Durlach, 1991) </ref>. Throughput measurements cannot substitute for lag measurements in assessing the interac-tivity of an application, since lag and throughput measure different quantities: lag measures how long a computation process delays data and throughput measures how frequently a computation process delivers a result.
Reference: <author> Isaacs, E.A. and Tang, </author> <title> J.C. (1993) What video can and can't do for collaboration: A case study. </title> <booktitle> Computer Graphics (Multimedia '93 Proceedings), </booktitle> <pages> 199-206. </pages> <publisher> ACM, Addison-Wesley. </publisher>
Reference-contexts: For example, in limited bandwidth, computer-supported cooperative work applications, it is preferable to sacrifice synchronization to enable low-latency, audio-only communication <ref> (Isaacs and Tang, 1993) </ref>. 4 MULTIPLE PARTICIPANTS Future virtual worlds will host multiple participants not two or three, but rather multiple thousand (Zyda et al., 1992). Current solutions, for example, for synchronizing actions and interactions among the participants, are ill-suited to handle such numbers.
Reference: <author> Kalra, D. and Barr, A.H. </author> <title> (1992) Modeling with time and events in computer animation. </title> <journal> Computer Graphics Forum (EUROGRAPHICS'92), </journal> <volume> 11(3), </volume> <month> C45-C58. </month>
Reference-contexts: Doing so has immediate benefits, for example, allowing high-level optimizations (Elliott et al., 1994). In order to manage the added complexity, control structures similar to those used for managing spatial information are useful. So far, the following advanced models of time are being proposed: encapsulating and reusing dynamic behaviors <ref> (Kalra and Barr, 1992) </ref>, constructing hierarchical time coordinate systems (Tarlton and Tarlton, 1992) and using synchronization primitives (Gibbs, 1991).
Reference: <author> Lewis, J.B., Koved, L. and Ling, </author> <title> D.T. (1991) Dialogue structures for virtual worlds. </title> <booktitle> Proceedings of CHI'91, </booktitle> <pages> 131-136. </pages>
Reference: <author> Liu, A., Tharp, G., French, L., Lai, S. and Stark, L. </author> <title> (1993) Some of what one needs to know about using headmounted displays to improve teleoperator performance. </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> 9(5), </volume> <pages> 638-648. </pages>
Reference-contexts: However, frame rate is only one of the important parameters that determine immersion: but it is still less direct than interacting with the real world. lag is equally important <ref> (Liu et al., 1993) </ref>. Lag is the time between when a user performs an action and when the application displays the result of that action.
Reference: <author> Regan, M. and Pose, R. </author> <title> (1994) Priority rendering with a virtual reality address recalculation pipeline. </title> <booktitle> Computer Graphics (SIGGRAPH '94 Proceedings), </booktitle> <volume> 28, </volume> <pages> 155-162. </pages>
Reference: <author> Schaufler, R. </author> <title> (1992) Realtime workstation performance for MIDI. </title> <booktitle> Usenix Winter '92. </booktitle>
Reference: <author> Shaw, C., Liang, J., Green, M. and Sun, Y. </author> <title> (1992) The decoupled simulation model for virtual reality systems. </title> <booktitle> Proceedings of CHI'92, </booktitle> <pages> 321-328. </pages>
Reference: <author> Snibbe, S.S., </author> <title> Herndon, K.P., Robbins, D.C., Conner, D.B. </title> <editor> and van Dam, A. </editor> <title> (1992) Using deformations to explore 3D widget design. </title> <booktitle> Computer Graphics (SIGGRAPH '92 Proceedings), </booktitle> <volume> 26(2), </volume> <pages> 351-352. </pages>
Reference-contexts: For example, the rack widget <ref> (Snibbe et al., 1992) </ref> graphically represents a vise with several handles. The handles move in three dimensions; their movements directly map to the parameters of a deform operator applied to an object in the vise. Using 3D widgets as an user interface paradigm has many advantages.
Reference: <author> Tarlton, M.A. and Tarlton, </author> <title> N.P. (1992) A framework for dynamic visual applications. </title> <booktitle> Computer Graphics (1992 Symposium on Interactive 3D Graphics), </booktitle> <volume> 25(2), </volume> <pages> 161-164. </pages>
Reference-contexts: In order to manage the added complexity, control structures similar to those used for managing spatial information are useful. So far, the following advanced models of time are being proposed: encapsulating and reusing dynamic behaviors (Kalra and Barr, 1992), constructing hierarchical time coordinate systems <ref> (Tarlton and Tarlton, 1992) </ref> and using synchronization primitives (Gibbs, 1991). The idea of making time a first-class notion also applies to interactive behaviors: instead of simulating interactive behavior by reediting a static database, interactive behaviors are described and stored directly in the database.
Reference: <author> Tarlton, M.A. </author> <title> (1993) A Declarative Representation System for Dynamic Visualization. </title> <type> PhD thesis, </type> <institution> University of Texas at Austin. </institution>
Reference-contexts: This simple example clarifies the need for VR systems to correlate the various user input streams to disambiguate the user's commands. Research is underway to address these problems, for example, by time-stamping and abstracting the input streams <ref> (Tarlton, 1993) </ref>. 3 MULTIPLE OUTPUTS To improve a user's feeling of presence it is important to engage more than just the visual sense. Movie producers know that the audience perceives a movie's visuals as of higher quality if the soundtrack is of high quality.
Reference: <author> Wloka, </author> <title> M.M. </title> <type> (1993) PhD thesis proposal: Time-critical graphics. Technical Report CS-93-50, </type> <institution> Brown University, Department of Computer Science, Providence, RI. </institution>
Reference-contexts: In general, even prediction cannot eliminate perceived lag, because of variations in total end-to-end lag. Figure 5 illustrates these requirements. Time-critical computing It is not advisable to use time-critical computing <ref> (Wloka, 1993) </ref> directly to reduce lag. Since time-critical computing trades computation time for computation accuracy, saving maximum time by computing with the least accuracy produces gross visual errors while still not fully eliminating lag. The benefit gained is questionable.
Reference: <author> Wloka, </author> <title> M.M. (1995) Lag in multiprocessor virtual reality. PRESENCE: Teleoperators and Virtual Environments, </title> <type> 4(1). </type>
Reference-contexts: For example, using multiple processors in a pipelined configuration increases throughput yet maintains the same lag. A VR system has several characteristic lag sources. The following two sections describe these sources and how to combat the lag, respectively. Additional information about lag in VR is described in <ref> (Wloka, 1995) </ref>. 7.1 Lag sources in VR systems User input device lag The user input device in a VR application reports 3D position and orientation data. It is external to the host workstation and typically communicates data via the serial port.
Reference: <author> Zeleznik, R.C., Conner, D.B., Wloka, M.M., Aliaga, D.G., Huang, N.T., Hubbard, P.M., Knep, B., Kaufman, H., Hughes, J.F. and van Dam, A. </author> <title> (1991) An object-oriented framework for the integration of interactive animation techniques. </title> <journal> Computer Graphics (SIGGRAPH'91 Proceedings), </journal> <volume> 25(4), </volume> <pages> 105-112. </pages>
Reference-contexts: how to handle the unpredictable delays common to networking and how to approach fault-tolerant computing. 5 DYNAMIC VIRTUAL WORLDS To make virtual worlds believable they have to be dynamic. (A static virtual world feels empty and dead.) To support such a dynamic environment, time has to become a first-class notion <ref> (Zeleznik et al., 1991) </ref>: instead of simulating dynamic behavior by reediting a static database, the VR database must inherently support dynamic behavior. Doing so has immediate benefits, for example, allowing high-level optimizations (Elliott et al., 1994).
Reference: <author> Zyda, M.J., Pratt, D.R., Monahan, J.G. and Wilson, K.P. </author> <year> (1992) </year> <month> NPSNET: </month> <title> Constructing a 3D virtual world. Computer Graphics (1992 Symposium on Interactive 3D Graphics), 25(2), 147. 11 BIOGRAPHY Matthias M. Wloka is currently a PhD student at Brown University, Providence, USA; he is working with Professor Andries van Dam and the Brown Computer Graphics Group. Mr. </title> <note> Wloka received his B.Sci. in Computer Science from Christian Albrechts University, Kiel, Germany in 1987 and his M.Sci. degree from Brown University in 1990. </note> <institution> His research interests include interactive, real-time computer graphics, </institution> <note> in particular computing object behavior and geometry time-critically. </note>
Reference-contexts: For example, in limited bandwidth, computer-supported cooperative work applications, it is preferable to sacrifice synchronization to enable low-latency, audio-only communication (Isaacs and Tang, 1993). 4 MULTIPLE PARTICIPANTS Future virtual worlds will host multiple participants not two or three, but rather multiple thousand <ref> (Zyda et al., 1992) </ref>. Current solutions, for example, for synchronizing actions and interactions among the participants, are ill-suited to handle such numbers. Hosting multiple thousand participants also implies use of multiprocessing and networking.
References-found: 24

