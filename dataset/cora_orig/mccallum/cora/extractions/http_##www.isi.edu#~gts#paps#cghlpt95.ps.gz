URL: http://www.isi.edu/~gts/paps/cghlpt95.ps.gz
Refering-URL: http://www.isi.edu/~gts/pubs.html
Root-URL: http://www.isi.edu
Title: Itinerant Agents for Mobile Computing  
Author: David Chess, Benjamin Grosof, Colin Harrison, David Levine, Colin Parris Gene Tsudik 
Keyword: LIMITED DISTRIBUTION NOTICE  
Address: Yorktown Heights, New York  Rueschlikon, Switzerland.  
Affiliation: Computer Science IBM Research  IBM Research Division T.J. Watson Research Center  IBM Zurich Research Laboratory  IBM Research Division Almaden T.J. Watson Tokyo Zurich  
Note: RC 20010 (10/17/95; revised from 3/27/95)  
Pubnum: Report  
Email: fchess,grosof,cgh,dwl,cjparrisg@watson.ibm.com  
Phone: (914) 784-7100 main  
Web: WWW: http://www.research.ibm.com  
Abstract: This report has been submitted for publication outside of IBM and will probably be copyrighted if accepted for publication. It has been issued as a Research Report for early dissemination of its contents. In view of the transfer of copyright to the outside publisher, its distribution outside of IBM prior to publication should be limited to peer communications and specific requests. After outside publication, requests should be filled only by reprints or legally obtained copies of the article (e.g., payment of royalties). 
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> Emergent Phenomena in Distributed Systems. </institution> <note> http://www.research.ibm.com/massdist. </note>
Reference-contexts: This 22 section presents a brief overview of the basic security issues and concerns. More de-tailed treatments, concentrating on some of the new issues that arise in agent-based and highly-distributed systems, may be found in [9] and <ref> [1] </ref>. The most fundamental security building block in an itinerant agent environment is the digital signature. Digital signatures are typically associated with public key cryptography 7 . The best-known and most popular method of obtaining digital signatures is the RSA public key cryptosystem [27].
Reference: [2] <editor> Middleware to go mobile. Computerworld, </editor> <volume> 29(4), </volume> <month> January </month> <year> 1995. </year>
Reference-contexts: The agent is initialized with the user's task (see below for examples) and transmitted by a message channel <ref> [26, 2] </ref>. The sending client may specify a destination service directly. But the client will more likely send the agent initially to, for example, a Yellow Pages server, which can propose servers to be visited to fulfill the user's task.
Reference: [3] <author> J. K. Boggs. </author> <title> IBM Remote Job Entry Facility: Generalized Subsystem Remote Job Entry Facility. </title> <journal> IBM Technical Disclosure Bulletin, </journal> <volume> 752, </volume> <month> August </month> <year> 1973. </year>
Reference-contexts: In the 1960s such schemes were employed to enable mini-computers to submit batch jobs on mainframes and to receive results, typically print files, back for local processing <ref> [3] </ref>. In the 1970s executable scripts were dispatched among networks of mini-computers to permit distributed, real-time processing [10]. Recently scripts have become a focus of attention. The concept of active mail has been used to enable widely available electronic mail services [4] to deliver executable scripts [23].
Reference: [4] <author> N. Borenstein and N. Freed. </author> <title> MIME (Multipurpose Internet Mail Extensions). Internet RFC 1521, </title> <year> 1993. </year>
Reference-contexts: In the 1970s executable scripts were dispatched among networks of mini-computers to permit distributed, real-time processing [10]. Recently scripts have become a focus of attention. The concept of active mail has been used to enable widely available electronic mail services <ref> [4] </ref> to deliver executable scripts [23]. The Telescript mobile scripting language, for example, was deployed in 1994 for an initial set of services on AT&T's public PersonaLink network. Telescript provides security features intended to support electronic commerce by means of mobile agents [29].
Reference: [5] <author> H. Chalupsky, T. Finin, R. Fritzson, D. McKay, S. Shapiro, and G. Wiederhold. </author> <title> An overview of KQML: A knowledge query and manipulation language. </title> <type> Technical report, </type> <month> April </month> <year> 1992. </year>
Reference-contexts: Interestingly, an AMP itself as a domain requires a vocabulary. The Knowledge Sharing Effort approach supports named vocabularies, which qualify vocabulary terms. This helps to reduce confusion when agents and AMPs are communicating in multiple vocabularies. 12 * KQML Knowledge Query and Manipulation Language (KQML) <ref> [12, 11, 5] </ref> is a high-level protocol and language for agent-service and agent-agent interactions and communications. KQML can be viewed as providing a "package" layer to wrap around the transport of "content" such as might be described in KIF.
Reference: [6] <author> D. M. Chess, C. G. Harrison, and A. Kershenbaum. </author> <title> Mobile agents: Are they a good idea? IBM Research Report, RC 19887, </title> <month> October </month> <year> 1994. </year>
Reference-contexts: A major focus of the paper is the Agent Meeting Point, an abstraction that supports the interaction of agents with each other and server based resources. Why is this extended form of client-server computing desirable or valuable? There are many detailed motivations for using itinerant agents <ref> [6] </ref>. They fall broadly into two categories: 1) support for mobile computers or lightweight devices and 2) the emerging need in rapidly evolving networks for an asynchronous method of searching for information or transaction services. For example: 1.
Reference: [7] <author> S. Chokhani. </author> <title> Toward a national public key infrastructure. </title> <journal> IEEE Communications Magazine, </journal> <volume> 32(9) </volume> <pages> 70-74, </pages> <month> September </month> <year> 1994. </year>
Reference-contexts: Recent interest in on-demand electronic commerce is leading to the creation of public security services such as TERISA, the joint effort of RSA and EIT <ref> [7] </ref>. The emergence of standard, distributed object-oriented frameworks is another important enabler for mobile scripts. In such frameworks, the need to transport methods can often be greatly reduced when common methods can be presumed to be remotely available.
Reference: [8] <author> F. Cohen. </author> <title> Computer Viruses: Theory and Experiment. </title> <booktitle> Computers and Security 6 </booktitle> <pages> 22-35, </pages> <year> 1987. </year>
Reference-contexts: Nonetheless, this is an area of active research (see, for example, [24]) and if it proves useful in agent-based computing, economies of scale will drive the prices down. * It is impossible to verify with complete certainty that an arbitrary program (such as an incoming agent) is not a virus <ref> [8] </ref>. In practice, the problem of writing a program that can verify the correct (or even simply non-malicious) behavior of another program is unsolved.
Reference: [9] <author> L. Hoffman (ed). </author> <title> Rogue Programs: Viruses Worms and Trojan Horses. </title> <publisher> Van Nostrand Reinhold, </publisher> <address> New York, </address> <year> 1990. </year>
Reference-contexts: This 22 section presents a brief overview of the basic security issues and concerns. More de-tailed treatments, concentrating on some of the new issues that arise in agent-based and highly-distributed systems, may be found in <ref> [9] </ref> and [1]. The most fundamental security building block in an itinerant agent environment is the digital signature. Digital signatures are typically associated with public key cryptography 7 . The best-known and most popular method of obtaining digital signatures is the RSA public key cryptosystem [27].
Reference: [10] <author> M. Crowley-Milling et al. </author> <title> The Nodal System for the SPS. </title> <publisher> CERN, </publisher> <pages> 78-87, </pages> <year> 1978. </year>
Reference-contexts: In the 1960s such schemes were employed to enable mini-computers to submit batch jobs on mainframes and to receive results, typically print files, back for local processing [3]. In the 1970s executable scripts were dispatched among networks of mini-computers to permit distributed, real-time processing <ref> [10] </ref>. Recently scripts have become a focus of attention. The concept of active mail has been used to enable widely available electronic mail services [4] to deliver executable scripts [23].
Reference: [11] <author> T. Finin, R. Fritzson, D. McKay, and R. McEntire. </author> <title> KQML as an Agent Communication Language. </title> <booktitle> In The Proceedings of the Third International Conference on Information and Knowledge Management (CIKM '94), </booktitle> <publisher> ACM Press, </publisher> <month> November </month> <year> 1994. </year>
Reference-contexts: Other recent developments include the emergence of knowledge representation lan 3 guages and protocols such as those in the ARPA Knowledge Sharing Effort. These include the Knowledge Query and Manipulation Language (KQML) <ref> [11] </ref>, and the Knowledge Interchange Facility (KIF) [13], which provide a basis for agent-server or agent-agent communication. Recent interest in on-demand electronic commerce is leading to the creation of public security services such as TERISA, the joint effort of RSA and EIT [7]. <p> Interestingly, an AMP itself as a domain requires a vocabulary. The Knowledge Sharing Effort approach supports named vocabularies, which qualify vocabulary terms. This helps to reduce confusion when agents and AMPs are communicating in multiple vocabularies. 12 * KQML Knowledge Query and Manipulation Language (KQML) <ref> [12, 11, 5] </ref> is a high-level protocol and language for agent-service and agent-agent interactions and communications. KQML can be viewed as providing a "package" layer to wrap around the transport of "content" such as might be described in KIF.
Reference: [12] <author> T. Finin and others: </author> <title> External Interfaces Working Group of the DARPA Knowledge Sharing Effort. Specification of the KQML Agent-Communication Language plus example agent policies and architectures. </title> <type> Technical report, </type> <note> Working paper, </note> <month> June </month> <year> 1993. </year> <month> 29 </month>
Reference-contexts: Interestingly, an AMP itself as a domain requires a vocabulary. The Knowledge Sharing Effort approach supports named vocabularies, which qualify vocabulary terms. This helps to reduce confusion when agents and AMPs are communicating in multiple vocabularies. 12 * KQML Knowledge Query and Manipulation Language (KQML) <ref> [12, 11, 5] </ref> is a high-level protocol and language for agent-service and agent-agent interactions and communications. KQML can be viewed as providing a "package" layer to wrap around the transport of "content" such as might be described in KIF.
Reference: [13] <author> M. R. Genesereth and R. E. Fikes. </author> <title> Knowledge Interchange Format Version 3.0 Reference Manual. </title> <type> Technical report, </type> <institution> Stanford University, </institution> <type> Technical Report Logic-92-1, </type> <month> January </month> <year> 1992. </year>
Reference-contexts: Other recent developments include the emergence of knowledge representation lan 3 guages and protocols such as those in the ARPA Knowledge Sharing Effort. These include the Knowledge Query and Manipulation Language (KQML) [11], and the Knowledge Interchange Facility (KIF) <ref> [13] </ref>, which provide a basis for agent-server or agent-agent communication. Recent interest in on-demand electronic commerce is leading to the creation of public security services such as TERISA, the joint effort of RSA and EIT [7]. The emergence of standard, distributed object-oriented frameworks is another important enabler for mobile scripts. <p> A leading approach to interoperation and high-level languages for interchange and interaction is via the ARPA Knowledge Sharing Effort [22, 25]. The Knowledge Sharing Effort today has several parts; we focus here on three. * KIF Knowledge Interchange Format (KIF) <ref> [13] </ref> is a rich standard language for interchange between other KR languages. It can express beliefs, rules, facts, partial descriptions of procedures, and more. Currently under construction are translators for a number of specific KR languages (services, systems) already in practical use.
Reference: [14] <author> Object Management Group. </author> <title> Common Object Request Broker Architecture and Specifications. Document number 91.12.1, </title> <type> 1(1). </type>
Reference-contexts: RPC or CORBA/OMG <ref> [14] </ref> style bindings can be made available to these potential clients.
Reference: [15] <author> Tom R. Gruber. </author> <title> A translation approach to portable ontology specifications. </title> <journal> Knowledge Acquisition, </journal> <volume> 5(2) </volume> <pages> 199-220, </pages> <year> 1993. </year>
Reference-contexts: These translate between various KR languages and KIF, and therefore transitively to each other. Translating between n KR languages through one central common language, such as KIF, reduces the number of translators from O (n 2 ) to O (n). * Ontolingua Ontolingua <ref> [15] </ref> [16] is a facility (system and approach) for creating and maintaining vocabularies. In Ontolingua a number of domain-specific vocabularies already exist for mechanical and electrical engineering, where the vocabularies contain terminologies usually found in standard introductory textbooks.
Reference: [16] <author> Tom R. Gruber. </author> <title> Ontolingua overview (World Wide Web home page). </title> <type> Technical report, </type> <institution> Stanford University, Knowledge Systems Laboratory, </institution> <year> 1995. </year> <note> Hypertext document on World-Wide-Web: URL http://www-ksl.stanford.edu/knowledge-sharing/ontolingua/index.html. </note>
Reference-contexts: These translate between various KR languages and KIF, and therefore transitively to each other. Translating between n KR languages through one central common language, such as KIF, reduces the number of translators from O (n 2 ) to O (n). * Ontolingua Ontolingua [15] <ref> [16] </ref> is a facility (system and approach) for creating and maintaining vocabularies. In Ontolingua a number of domain-specific vocabularies already exist for mechanical and electrical engineering, where the vocabularies contain terminologies usually found in standard introductory textbooks.
Reference: [17] <author> L. J. Haisting. EDI: </author> <title> A New Way of Doing Business. </title> <booktitle> St. Paul Software, </booktitle> <address> St. Paul, MN, </address> <year> 1993. </year>
Reference-contexts: In some cases the ACL may be a knowledge representation language from the artificial intelligence community. In other cases it may be a language developed specifically for a certain purpose, such as Electronic Data Interchange <ref> [17] </ref>. * A Procurement Model An example of this interaction is that of an open-bidding auction in which multiple itinerant agents attempt to bid for goods or services offered by an auctioneer (usually a static agent). <p> Currently defined performatives include: ask, tell, forward, and broker. KQML passes as parameters: the language and vocabulary in which the content is represented. Also, KQML can nest performatives, such that, more specialized performatives can be nested within more general-purpose performatives. EDI (Electronic Data Interchange) <ref> [17] </ref> deserves special mention as a KR language because of its importance as a standard practical framework for electronic commerce. While not an AI-style language, it serves much the same purpose. Knowledge representation is important for routing in the broad sense.
Reference: [18] <author> J. Kephart, T. Hogg, and B. Huberman. </author> <title> Collective behavior of predictive agents. </title> <journal> Physica D, </journal> <volume> 42, </volume> <year> 1990. </year>
Reference-contexts: authentication services will reduce the danger, but these issues of trust will have to be addressed in designing AMP controls and agent abilities. * Even agent strategies that seem logical and benign if considered by themselves can lead to undesirable results when embedded in a complex and highly interactive world <ref> [18, 19] </ref>. Security and integrity systems will have to deal with both innocent and malicious instances of various sorts of emergent behavior. Mail loops, the simplest and oldest example, can appear in an array of new forms as transmitted objects become active themselves.
Reference: [19] <author> J. Kephart, T. Hogg, and B. A. Huberman. </author> <title> Can predictive agents prevent chaos? In Economics and Cognitive Science, </title> <publisher> Pergamon Press, Oxford, </publisher> <year> 1991. </year>
Reference-contexts: authentication services will reduce the danger, but these issues of trust will have to be addressed in designing AMP controls and agent abilities. * Even agent strategies that seem logical and benign if considered by themselves can lead to undesirable results when embedded in a complex and highly interactive world <ref> [18, 19] </ref>. Security and integrity systems will have to deal with both innocent and malicious instances of various sorts of emergent behavior. Mail loops, the simplest and oldest example, can appear in an array of new forms as transmitted objects become active themselves.
Reference: [20] <author> J. Linn, S. Kent, D. Balenson, and B. Kaliski. </author> <title> Privacy enhancement for internet electronic mail: Parts i-iv. </title> <type> Internet RFC 1421-1424, </type> <year> 1993. </year>
Reference-contexts: Universal certification is a lengthy and cumbersome process, mostly because it involves the establishment of a global certification hierarchy similar to that in the electronic mail milieu. (Privacy-Enhanced Mail, PEM <ref> [20] </ref>, is a case in point.) The good news is that certification hierarchies have been springing up in the last few years and there is no need to create a new hierarchy for the purpose of itinerant agents. <p> organizational affiliation, and pricing, to name a few. * Agent's Privacy As alluded to above, it is impossible to keep an agent private unless its itinerary is known in advance. (In the latter case, the agent code can be wrapped up and delivered as multi-destination secure email, as in PEM <ref> [20] </ref>.) Since one of the aesthetically appealing features of itinerant agents is precisely the freedom of movement, it is unrealistic to expect all agents to be launched with a set itinerary.
Reference: [21] <author> Sun Microsystems. </author> <title> The HotJava Browser: a white paper. </title> <type> White Paper, </type> <year> 1995. </year>
Reference-contexts: The Telescript mobile scripting language, for example, was deployed in 1994 for an initial set of services on AT&T's public PersonaLink network. Telescript provides security features intended to support electronic commerce by means of mobile agents [29]. The HotJava web browser <ref> [21] </ref> from Sun Microsystems will retrieve programs from World-Wide Web servers for immediate execution on the local machine. The programs are typically written in the Java language and compiled into a machine-independent intermediate code.
Reference: [22] <author> R. Neches, R. Fikes, P. Patel-Schneider, R. Patil, T. Senator, and W. Swartout. </author> <title> Enabling technology for knowledge sharing. </title> <journal> AI Magazine, </journal> <volume> 12(3), </volume> <month> September </month> <year> 1991. </year>
Reference-contexts: There are, of course, many different kinds of KR languages. A leading approach to interoperation and high-level languages for interchange and interaction is via the ARPA Knowledge Sharing Effort <ref> [22, 25] </ref>. The Knowledge Sharing Effort today has several parts; we focus here on three. * KIF Knowledge Interchange Format (KIF) [13] is a rich standard language for interchange between other KR languages. It can express beliefs, rules, facts, partial descriptions of procedures, and more.
Reference: [23] <author> J. K. Ousterhout. </author> <title> TcL and the Tk toolkit. </title> <publisher> Addison-Wesley Publication Company, </publisher> <year> 1994. </year>
Reference-contexts: In the 1970s executable scripts were dispatched among networks of mini-computers to permit distributed, real-time processing [10]. Recently scripts have become a focus of attention. The concept of active mail has been used to enable widely available electronic mail services [4] to deliver executable scripts <ref> [23] </ref>. The Telescript mobile scripting language, for example, was deployed in 1994 for an initial set of services on AT&T's public PersonaLink network. Telescript provides security features intended to support electronic commerce by means of mobile agents [29].
Reference: [24] <author> E. Palmer. </author> <title> An Introduction to Citadel a secure crypto coprocessor for workstations. </title> <booktitle> In IFIP SEC'94 Conference, Curacao, Dutch Antilles, </booktitle> <month> May </month> <year> 1994. </year>
Reference-contexts: Currently tamper-resistant hardware and the enabling software are expensive and not readily available. Nonetheless, this is an area of active research (see, for example, <ref> [24] </ref>) and if it proves useful in agent-based computing, economies of scale will drive the prices down. * It is impossible to verify with complete certainty that an arbitrary program (such as an incoming agent) is not a virus [8].
Reference: [25] <author> R. Patil, R. Fikes, P. Patel-Schneider, D. McKay, T. Finin, T. Gruber, and R. Neches. </author> <title> The DARPA Knowledge Sharing Effort: Progress Report. </title> <booktitle> In Proceedings of the Third International Conference on Principles of Knowledge Representation and Reasoning, </booktitle> <publisher> Morgan Kaufmann, </publisher> <address> San Francisco, CA., </address> <month> November </month> <year> 1992. </year>
Reference-contexts: There are, of course, many different kinds of KR languages. A leading approach to interoperation and high-level languages for interchange and interaction is via the ARPA Knowledge Sharing Effort <ref> [22, 25] </ref>. The Knowledge Sharing Effort today has several parts; we focus here on three. * KIF Knowledge Interchange Format (KIF) [13] is a rich standard language for interchange between other KR languages. It can express beliefs, rules, facts, partial descriptions of procedures, and more.
Reference: [26] <author> J. B. Postel. </author> <title> SMTP (Simple Mail Transport Protocol). Internet RFC 821, </title> <year> 1982. </year>
Reference-contexts: The agent is initialized with the user's task (see below for examples) and transmitted by a message channel <ref> [26, 2] </ref>. The sending client may specify a destination service directly. But the client will more likely send the agent initially to, for example, a Yellow Pages server, which can propose servers to be visited to fulfill the user's task.
Reference: [27] <author> R. Rivest, A. Shamir, and L. Adleman. </author> <title> A method for obtaining digital signatures and public-key crypto-systems. </title> <journal> CACM, </journal> <volume> 21(2), </volume> <year> 1978. </year>
Reference-contexts: The most fundamental security building block in an itinerant agent environment is the digital signature. Digital signatures are typically associated with public key cryptography 7 . The best-known and most popular method of obtaining digital signatures is the RSA public key cryptosystem <ref> [27] </ref>. Very germane to public key-based digital signatures is the concept of universal certification of all potential signers the users that originate agents as well as the AMPs that execute them.
Reference: [28] <author> J. S. Rosenschein and G. Zlotkin. </author> <title> Rules of Encounter. </title> <publisher> The MIT Press, </publisher> <year> 1994. </year>
Reference-contexts: This model represents a very complex interaction governed by an auction protocol in which the agents' goals and monetary resources are hidden from other agents <ref> [28] </ref>. The procurement model also includes the activities of strategy and electronic commerce. This model has many "sub models" such as electronic malls (many static agents and itinerant agents), flea markets (many itinerant agents), and sealed bidding auctions.
Reference: [29] <author> J. E. White. </author> <title> Telescript Technology: The Foundation for the Electronic Marketplace. </title> <publisher> General Magic Inc., </publisher> <address> Mountain View, CA, </address> <year> 1994. </year> <month> 30 </month>
Reference-contexts: The Telescript mobile scripting language, for example, was deployed in 1994 for an initial set of services on AT&T's public PersonaLink network. Telescript provides security features intended to support electronic commerce by means of mobile agents <ref> [29] </ref>. The HotJava web browser [21] from Sun Microsystems will retrieve programs from World-Wide Web servers for immediate execution on the local machine. The programs are typically written in the Java language and compiled into a machine-independent intermediate code.
References-found: 29

