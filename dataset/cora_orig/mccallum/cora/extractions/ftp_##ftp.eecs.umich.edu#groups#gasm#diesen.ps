URL: ftp://ftp.eecs.umich.edu/groups/gasm/diesen.ps
Refering-URL: http://www.eecs.umich.edu/gasm/papers.html
Root-URL: http://www.cs.umich.edu
Title: Specifying Algorithms Using Evolving Algebra. Implementation of Functional Programming Languages.  
Author: by Dag Diesen 
Date: March 1995  
Abstract: This report is a thesis for the dr. scient degree at Department of Informatics University of Oslo Norway 
Abstract-found: 1
Intro-found: 1
Reference: [AN90] <author> editor Adrian Nye. </author> <title> X Protocol Reference Manual. </title> <booktitle> O'Reilly, Sebastopol, 2nd edition, </booktitle> <year> 1990. </year>
Reference: [Br90a] <author> Egon Brger. </author> <title> A logical operational semantics of full prolog. </title> <type> Report 111, </type> <institution> Wissenschaftliches Zentrum, Institut fr Wissensbasierte Systeme, </institution> <year> 1990. </year>
Reference: [Br90b] <author> Egon Brger. </author> <title> A logical operational semantics of full prolog part II. Built-in predicates for database manipulations. </title> <editor> In B. Rovan, editor, </editor> <booktitle> MFCS'90 Mathematical Foundations of Computer Science, volume 452 of LNCS, </booktitle> <pages> pages 114. </pages> <publisher> Springer, </publisher> <year> 1990. </year>
Reference: [Br90c] <author> Egon Brger. </author> <title> A logical operational semantics of full prolog part III: Built-in predicates for tles, terms, arithmetic and input-output. </title> <type> Report 117, </type> <institution> Wissenschaftliches Zentrum Institut fr Wissensbasierte Systeme, </institution> <year> 1990. </year>
Reference: [BR91a] <author> Egon Brger and Elvinia Riccobene. </author> <title> A formal specitcation of PARLOG. </title> <type> Unpublished, </type> <year> 1991. </year>
Reference: [BR91b] <author> Egon Brger and Dean Rosenzweig. </author> <title> A formal analysis of prolog database views and their uniform implementation. To appear as: </title> <type> [Tech. Rep. </type> <institution> EECS Univ. of Michigan], </institution> <year> 1991. </year>
Reference: [BR91c] <author> Egon Brger and Dean Rosenzweig. </author> <title> From prolog algebras towards WAM a mathematical study of implementation. </title> <note> To appear in: </note> <editor> CSL'90. </editor> <booktitle> 4th Workshop on Computer Science Logic, </booktitle> <publisher> Springer LNCS, </publisher> <year> 1991. </year>
Reference: [BR94] <author> Egon Brger and Dean Rosenzweig. </author> <title> A mathematical detnition of full prolog. </title> <type> Report, </type> <institution> EECS Departement, University of Michigan, </institution> <year> 1994. </year> <note> URL: ftp://ftp.eecs.umich.edu /groups/Ealgebras/prolog.ps. </note>
Reference: [FN84] <author> Jens Erik Fenstad and Dag Normann. </author> <title> Algorithms and logic. </title> <type> Unpublished, </type> <year> 1984. </year>
Reference: [GK93] <author> Yuri Gurevich and James K.Huggins. </author> <title> The semantics for the c programming language. </title> <type> Report, </type> <institution> EECS Departement, University of Michigan, </institution> <year> 1993. </year> <note> URL: ftp://ftp.eecs.umich.edu /groups/Ealgebras/calgebra.ps. 231 </note>
Reference: [Gur93] <author> Yuri Gurevich, </author> <year> 1993. </year> <type> Personal communication. </type>
Reference: [HS86] <author> J. Roger Hindley and Jonathan P. Seldin. </author> <title> Introduction to Combinators and Lambda-calculus. </title> <publisher> Cambridge University Press, </publisher> <year> 1986. </year>
Reference: [Hug94] <author> James K. Huggins. </author> <title> An evolving algebra interpreter. </title> <type> Unpublished, </type> <year> 1994. </year>
Reference-contexts: which has all properties as described in chapter 9 4 and in addition implements the extensions proposed in this report. 13.4 Short Summary of other Evolving Algebra Implementations 13.4.1 Evolving Algebra Interpreter Written in C An implementation of an Evolving Algebra interpreter in C which the author know about (See <ref> [Hug94] </ref>) is based on a txed number of functions, which may be combined in order to detne the implementation of new functions. <p> The reason is that the whole specitcation is dependent on those (may bee too few) basic functions (See section 9.5 for a comparison between the C interpreter and the Scheme interpreter). This interpreter (See <ref> [Hug94] </ref>) is the only interpreter besides the author's interpreter the author has inspected. 13.4.2 DASL Compiler Implemented in Prolog In addition to the interpreter mentioned in subsection13.4.1 above, the author is recently become aware of a report by [Kap93].
Reference: [JL91] <author> Simon L. Peyton Jones and David Lester. </author> <title> Implementing Functional Languages. A tutorial. </title> <publisher> Prentic Hall, </publisher> <year> 1991. </year>
Reference: [Jon87] <editor> Simon L. Peyton Jones. </editor> <booktitle> The Implementation of Functional Programming Languages. </booktitle> <publisher> Prentic Hall, </publisher> <year> 1987. </year>
Reference: [Kap93] <author> Angelica Maria Kappel. </author> <title> Executable specitcation based on dynamic algebra. </title> <editor> In A. Voronkov, editor, </editor> <booktitle> Logic Programming and Automated Reasoning, volume 698 of LNAI, </booktitle> <pages> pages 578592. </pages> <publisher> Springer, </publisher> <year> 1993. </year> <note> URL: ftp://ftp.eecs.umich.edu /groups/Ealgebras/prolint.abst.ps. </note>
Reference-contexts: This interpreter (See [Hug94]) is the only interpreter besides the author's interpreter the author has inspected. 13.4.2 DASL Compiler Implemented in Prolog In addition to the interpreter mentioned in subsection13.4.1 above, the author is recently become aware of a report by <ref> [Kap93] </ref>. This report describes a prototype of a compiler for the language DASL which is an extension to the Evolving Algebra specitcation language. In addition to pure Evolving Algebra the language includes polymorphic types and equational specitcations which constitutes a conuent rewrite system.
Reference: [Kir91] <author> Bjrn Kirkerud. </author> <title> The semantics of programming languages. </title> <type> Unpublished, </type> <year> 1991. </year>
Reference: [Mor90] <author> Carrol Morgan. </author> <title> Programming from specitcations. </title> <publisher> Prentic Hall, </publisher> <year> 1990. </year>
Reference: [NN92] <author> Hanne Riis Nielson and Flemming Nielson. </author> <title> Semantics with applications. A formal Introduction. </title> <publisher> John Wiley, </publisher> <year> 1992. </year>
Reference: [Plo81] <author> Gordon D. Plotkin. </author> <title> A structural approach to operational semantic. </title> <type> Report, </type> <institution> Computer Science Department, Aarhus University, rhus, </institution> <year> 1981. </year> <note> Reprinted 1991. </note>
Reference: [RWC86] <editor> Jonathan Rees and editors William Clinger. </editor> <title> Revised 3 report on the algorithmic language scheme. </title> <journal> ACM SIGPLAN Notices, </journal> <volume> (21(12)), </volume> <year> 1986. </year>
Reference: [Wan77] <author> Arne Wang. Kvasiparallelle rutiner - korutiner. </author> <type> Kompendium 3, </type> <institution> Institutt for Informatikk, Universitetet i Oslo, </institution> <year> 1977. </year> <title> 232 Part V </title>
References-found: 22

