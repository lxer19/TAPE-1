URL: http://www.eecs.umich.edu/~avigupta/papers/vlsi_design97.ps
Refering-URL: http://www.eecs.umich.edu/~avigupta/professional.html
Root-URL: http://www.eecs.umich.edu
Note: This research was supported by a grant from Intel Corporation. Abstract  
Abstract: We present a hierarchical technique, based on integer linear programming (ILP), to generate area-efficient layouts of relatively large complex CMOS cells in the two-dimensional (2-D or multi-row) style. First, the CMOS circuit is partitioned into subcircuits called clusters. Next, the set of all minimum-width 1-D placements (chain covers) are generated for each cluster, and form the input to the ILP model. The model aims at selecting exactly one cover for each cluster such that the overall 2-D cell width is minimized. In the process, all possible diffusion sharing between transistor chains belonging to clusters are considered; the inter-row connections that contribute to the overall cell width are also reduced. Experimental results demonstrate that the technique reduces run times by several orders of magnitude over non-hierarchical methods, and yields optimal or near-optimal layouts in most cases. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> P. Barth, </author> <title> A Davis-Putnam Based Enumeration Algorithm for Linear Pseudo-Boolean Optimization, </title> <type> Tech. report MIP-I-95-2-003, </type> <institution> Max-Planck-Institut Fur Informatik, </institution> <month> Jan. </month> <year> 1995. </year>
Reference-contexts: [c]) c chains + S X [c, r] S merged [c 1 , c 2 , r] + S V [r, n] 1 c chains c 1 , c 2 chains n nets 5 Experimental Results The hierarchical 0-1 ILP model has been solved using OPBDP (Optimization with Pseudo-Boolean Davis-Put-nam) <ref> [1] </ref>, a specialized solver for binary ILPs. Table 4 presents our results for placements in one through four P/N rows for typical circuits with up to 100 transistors. Where feasible, we also present the optimal cell width obtained with our non-hierarchical method [5].
Reference: [2] <author> D. G. Baltus and J. Allen, </author> <title> SOLO: A Generator of Efficient Layouts From Optimized MOS Circuit Schematics, </title> <booktitle> Proc. 25th Design Automation Conf., </booktitle> <pages> pp. 445-452, </pages> <month> June </month> <year> 1988. </year>
Reference: [3] <author> C. C. Chen and S. L. Chow, </author> <title> The Layout Synthesizer: An Automatic Netlist-to-Layout System, </title> <booktitle> Proc. 26th Design Automation Conf., </booktitle> <pages> pp. 232-238, </pages> <month> June </month> <year> 1989. </year>
Reference-contexts: For larger circuits, such hierarchical techniques offer similarly dramatic speed-ups, while yielding layouts that are close to optimal and much better than those generated by heuristic techniques applied to the entire circuit. Unlike the extensively studied 1-D style <ref> [3, 4, 7, 8, 10, 13] </ref>, 2-D cell layout generation has received little attention and the few techniques proposed are largely ad hoc [12, 14, 15]. In recent work [5], the authors have developed an exact layout method based on integer linear programming (ILP) for 2-D cell width minimization.
Reference: [4] <author> A. Gupta, S-C. The, and J. P. Hayes, XPRESS: </author> <title> A Cell Layout Generator with Integrated Transistor Folding, </title> <booktitle> Proc. European Design & Test Conf., </booktitle> <pages> pp. 393-400, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: For larger circuits, such hierarchical techniques offer similarly dramatic speed-ups, while yielding layouts that are close to optimal and much better than those generated by heuristic techniques applied to the entire circuit. Unlike the extensively studied 1-D style <ref> [3, 4, 7, 8, 10, 13] </ref>, 2-D cell layout generation has received little attention and the few techniques proposed are largely ad hoc [12, 14, 15]. In recent work [5], the authors have developed an exact layout method based on integer linear programming (ILP) for 2-D cell width minimization. <p> A fundamental sub-problem is to determine the position of each pair in the 2-D plane by considering pairwise diffusion sharing. This is modeled implicitly by generating the set of all transistor chains. We use the chain generation algorithm proposed for the XPRESS cell synthesis tool <ref> [4] </ref> since it is applicable to most types of CMOS circuits. The width minimization problem then translates into a covering problem: Find a subset of chains that covers every pair and has the minimum 2-D cell width. Items 15 in Table 2 are the input circuit parameters. <p> The input circuit is first partitioned into clusters, typically logic gates, using known methods <ref> [4, 11] </ref>. Next, the set of all min-coversthe smallest set of chains that covers the cir-cuitis generated for each cluster. We use the min-cover algorithm described in [4] for XPRESS. The combined set of min-covers for each cluster forms the input to the ILP model. <p> The input circuit is first partitioned into clusters, typically logic gates, using known methods [4, 11]. Next, the set of all min-coversthe smallest set of chains that covers the cir-cuitis generated for each cluster. We use the min-cover algorithm described in <ref> [4] </ref> for XPRESS. The combined set of min-covers for each cluster forms the input to the ILP model. Although min-covers do not necessarily minimize 2-D cell width, our results indicate that they can yield area-efficient, and often minimum-width layouts, especially when the average cluster size is small.
Reference: [5] <author> A. Gupta and J. P. Hayes, </author> <title> Width Minimization of Two-Dimensional CMOS Cells Using Integer Programming, </title> <booktitle> Proc. Intl Conf. on CAD, </booktitle> <month> Nov. </month> <year> 1996, </year> <note> to appear. </note>
Reference-contexts: The 2-D stylea generalization of the more restricted one-dimensional (1-D or linear) styleallows multiple parallel rows of P and N diffusions. It is not only necessary in several domains such as datapath cell layout, but can also yield area and performance advantages over the 1-D style <ref> [5] </ref>. Hierarchical methods partition the circuit into subcir-cuits or clusters, thereby decomposing the layout problem into two interdependent problems: generate a layout for each cluster, and find a 2-D placement of the cluster layouts so that the overall cell width is minimized. <p> Design Technology, Intel Corporation 2200 Mission College Blvd. Santa Clara, CA 95052, U.S.A. generated using the hierarchical technique proposed here are shown in Fig. 1. As discussed later, the proposed method produces minimum-width 2-D layouts for all these cases. While the non-hierarchical technique of <ref> [5] </ref> requires 3, 19, and 58 seconds of CPU time, respectively, for one, two, and three-row layouts, our hierarchical technique requires only 0.03, 0.05, and 0.07 seconds. <p> Unlike the extensively studied 1-D style [3, 4, 7, 8, 10, 13], 2-D cell layout generation has received little attention and the few techniques proposed are largely ad hoc [12, 14, 15]. In recent work <ref> [5] </ref>, the authors have developed an exact layout method based on integer linear programming (ILP) for 2-D cell width minimization. The ILP approach generates optimal width layouts and has run times in minutes for practical CMOS cells of up to 25 transistors. <p> The gener ation of a minimum-width 2-D placement is then formulated as an ILP model; the set of all minimal covers for each cluster form the input to the model. When the circuit hierarchy is attened to the transistor level, our technique reduces to the non-hierarchical method of <ref> [5] </ref>. The proposed technique has several advantages over other heuristic methods: 1. It considers all diffusion sharing possibilities among transistor chains in different clusters, and selects a cover for each cluster that tends to maximize the sharing and minimize the inter-row connections. 2. <p> Section 2 defines the width minimization problem for 1-D and 2-D layouts and discusses the factors that inuence 2-D cell widths. The ILP formulation for 2-D layout of single CMOS cells proposed in our earlier work <ref> [5] </ref> is reviewed in Section 3. Section 4 outlines the proposed ILP technique for hierarchical 2-D cell width minimization. Experimental results for representative CMOS circuits are presented in Section 5. 2 Cell Width Minimization The 2-D cell layout style is illustrated in Fig. 2, with its 1. <p> width W cell by placing the pairs in a given number of rows so that the maximum width among all rows is minimized, that is, minimize W cell , where W cell = max -W r : for each P/N row r = 1, 2, ...- (1) As discussed in <ref> [5] </ref>, W cell for a 2-D layout depends on several factors: 1. Chain cover or diffusion sharing: The selection of the chain cover affects W cell since covers that yield optimum 1-D widths do not also guarantee minimum 2-D widths. 2. <p> Inter-row connectivity: If the variable V [r, n] = 1 denotes that net n must be routed vertically along row r, then its value can be defined by the following logic equation <ref> [5] </ref>: V [r, n] = (above [r, n] and below [r, n] and not top [r, n]) or (above [r, n] and bottom [r, n] and not top [r, n]) or (below [r, n] and not bottom [r, n] and top [r, n]) Here, above [r, n], below [r, n], top <p> Table 4 presents our results for placements in one through four P/N rows for typical circuits with up to 100 transistors. Where feasible, we also present the optimal cell width obtained with our non-hierarchical method <ref> [5] </ref>. When the optimum widths are not known, Table 4 presents a lower bound for W cell , which ignores the effects of the inter-row connectiv ity in equation (2) on the cell width. <p> The problem is formulated as an integer linear program that models the various factors that inuence 2-D cell width. It extends the non-hierarchical ILP-based approach for 2-D layouts <ref> [5] </ref> to much larger circuits while producing area-efficient layouts in practical time.
Reference: [6] <author> D. V. Heinbuch, </author> <title> CMOS3 Cell Library, </title> <publisher> Addison-Wesley, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1988. </year>
Reference: [7] <author> Y-C Hsieh, C-Y Hwang, Y-L Lin, and Y-C Hsu, </author> <title> LiB: A CMOS Cell Compiler, </title> <journal> IEEE Trans. on CAD, </journal> <volume> Vol. 10, </volume> <pages> pp. 994-1005, </pages> <month> Aug. </month> <year> 1991. </year>
Reference-contexts: For larger circuits, such hierarchical techniques offer similarly dramatic speed-ups, while yielding layouts that are close to optimal and much better than those generated by heuristic techniques applied to the entire circuit. Unlike the extensively studied 1-D style <ref> [3, 4, 7, 8, 10, 13] </ref>, 2-D cell layout generation has received little attention and the few techniques proposed are largely ad hoc [12, 14, 15]. In recent work [5], the authors have developed an exact layout method based on integer linear programming (ILP) for 2-D cell width minimization. <p> In any hierarchical approach, the layout of individual clusters significantly affects the overall cell layout. For example, diffusion sharing between transistors belonging to different clusters depends on transistor placement within each cluster. Hence, hierarchical techniques <ref> [7, 10, 14] </ref> that treat the generation of intra and inter-cluster layouts in two sequential stages can yield sub-optimal results.
Reference: [8] <author> R. L. Maziasz and J. P. Hayes, </author> <title> Layout Minimization of CMOS Cells, </title> <publisher> Kluwer, </publisher> <address> Boston, </address> <year> 1992. </year>
Reference-contexts: For larger circuits, such hierarchical techniques offer similarly dramatic speed-ups, while yielding layouts that are close to optimal and much better than those generated by heuristic techniques applied to the entire circuit. Unlike the extensively studied 1-D style <ref> [3, 4, 7, 8, 10, 13] </ref>, 2-D cell layout generation has received little attention and the few techniques proposed are largely ad hoc [12, 14, 15]. In recent work [5], the authors have developed an exact layout method based on integer linear programming (ILP) for 2-D cell width minimization.
Reference: [9] <author> G. L. Nemhauser and L. A. Wolsey, </author> <title> Integer and Combinatorial Optimization, </title> <publisher> John Wiley, </publisher> <address> New York, </address> <year> 1988. </year>
Reference-contexts: should be placed; an ordering of the rows that minimizes the number of inter-row connections; and, the diffusion type, P or N, to be placed at the bottom of the cell. 3 Non-Hierarchical 2-D Cell Model The general mixed integer linear programming (MILP) problem is stated below using matrix notation <ref> [9] </ref>. Minimize cx + dy subject to Ax + Dy b, x 0, y 0 Its goal is to minimize a linear cost function while satisfying a set of linear constraints.
Reference: [10] <author> C.L. Ong, J.T. Li, and C.Y. Lo, GENAC: </author> <title> An Automatic Cell Synthesis Tool, </title> <booktitle> Proc. 26th Design Automation Conf., </booktitle> <pages> pp. 239-244, </pages> <month> June </month> <year> 1989. </year>
Reference-contexts: For larger circuits, such hierarchical techniques offer similarly dramatic speed-ups, while yielding layouts that are close to optimal and much better than those generated by heuristic techniques applied to the entire circuit. Unlike the extensively studied 1-D style <ref> [3, 4, 7, 8, 10, 13] </ref>, 2-D cell layout generation has received little attention and the few techniques proposed are largely ad hoc [12, 14, 15]. In recent work [5], the authors have developed an exact layout method based on integer linear programming (ILP) for 2-D cell width minimization. <p> In any hierarchical approach, the layout of individual clusters significantly affects the overall cell layout. For example, diffusion sharing between transistors belonging to different clusters depends on transistor placement within each cluster. Hence, hierarchical techniques <ref> [7, 10, 14] </ref> that treat the generation of intra and inter-cluster layouts in two sequential stages can yield sub-optimal results.
Reference: [11] <author> T. Sadakane, H. Nakao, and M. Terai, </author> <title> A New Hierarchical Algorithm for Transistor Placement in CMOS Macro Cell Design, </title> <booktitle> Proc. Custom Integrated Circuits Conf., </booktitle> <pages> pp. 461-464, </pages> <year> 1995. </year>
Reference-contexts: If the partitioning is at the boundaries of logic gates, this approach ensures that the fundamental problem of diffusion sharing, which is concentrated within each gate, is first solved locally. NAND function from <ref> [11] </ref>. <p> For example, diffusion sharing between transistors belonging to different clusters depends on transistor placement within each cluster. Hence, hierarchical techniques [7, 10, 14] that treat the generation of intra and inter-cluster layouts in two sequential stages can yield sub-optimal results. Sada-kane et al. <ref> [11] </ref> propose a method that first generates the set of all minimum-width 1-D placements for each cluster, and then simultaneously selects a layout for each cluster and a placement of the clusters so that the overall 1-D width is reduced. <p> The input circuit is first partitioned into clusters, typically logic gates, using known methods <ref> [4, 11] </ref>. Next, the set of all min-coversthe smallest set of chains that covers the cir-cuitis generated for each cluster. We use the min-cover algorithm described in [4] for XPRESS. The combined set of min-covers for each cluster forms the input to the ILP model. <p> As these results indicate, the proposed method yields optimal 1-D cell widths in all cases with run times that are in seconds, several orders of magnitude better than those of the 1-D hierarchical technique of Sadakane et al. <ref> [11] </ref>. Moreover, unlike [11], our technique guarantees a layout of minimum width for a given set of covers, and solves the 2-D layout problem as well. <p> As these results indicate, the proposed method yields optimal 1-D cell widths in all cases with run times that are in seconds, several orders of magnitude better than those of the 1-D hierarchical technique of Sadakane et al. <ref> [11] </ref>. Moreover, unlike [11], our technique guarantees a layout of minimum width for a given set of covers, and solves the 2-D layout problem as well. For most circuits, the resulting 2-D layouts have widths that are close to the lower bound; they are optimal in over 60% of the cases.
Reference: [12] <author> K. Tani, et al., </author> <title> Two-Dimensional Layout Synthesis for Large-Scale CMOS Circuits, </title> <booktitle> Proc. Intl Conf. on CAD, </booktitle> <pages> pp. 490-493, </pages> <month> Nov. </month> <year> 1991. </year>
Reference-contexts: Unlike the extensively studied 1-D style [3, 4, 7, 8, 10, 13], 2-D cell layout generation has received little attention and the few techniques proposed are largely ad hoc <ref> [12, 14, 15] </ref>. In recent work [5], the authors have developed an exact layout method based on integer linear programming (ILP) for 2-D cell width minimization. The ILP approach generates optimal width layouts and has run times in minutes for practical CMOS cells of up to 25 transistors. <p> In the 2-D realm, the hierarchical technique proposed by Tani et al. <ref> [12] </ref> for layout of 2-D cell arrays also decouples the intra- and inter-cluster placement stages. Moreover, none of the above methods consider diffusion sharing between the chains of each cluster.
Reference: [13] <author> T. Uehara and W.M. VanCleemput, </author> <title> Optimal Layout of CMOS Functional Arrays, </title> <journal> IEEE Trans. on Computers, </journal> <volume> Vol. C-30, </volume> <pages> pp. 305-312, </pages> <month> May </month> <year> 1981. </year>
Reference-contexts: For larger circuits, such hierarchical techniques offer similarly dramatic speed-ups, while yielding layouts that are close to optimal and much better than those generated by heuristic techniques applied to the entire circuit. Unlike the extensively studied 1-D style <ref> [3, 4, 7, 8, 10, 13] </ref>, 2-D cell layout generation has received little attention and the few techniques proposed are largely ad hoc [12, 14, 15]. In recent work [5], the authors have developed an exact layout method based on integer linear programming (ILP) for 2-D cell width minimization.
Reference: [14] <author> S. Wimer, R.Y. Pinter, and J.A. Feldman, </author> <title> Optimal Chaining of CMOS Transistors in a Functional Cell, </title> <journal> IEEE Trans. on CAD, </journal> <volume> Vol. CAD-6, </volume> <pages> pp. 795-801, </pages> <month> Sept. </month> <year> 1987. </year>
Reference-contexts: Unlike the extensively studied 1-D style [3, 4, 7, 8, 10, 13], 2-D cell layout generation has received little attention and the few techniques proposed are largely ad hoc <ref> [12, 14, 15] </ref>. In recent work [5], the authors have developed an exact layout method based on integer linear programming (ILP) for 2-D cell width minimization. The ILP approach generates optimal width layouts and has run times in minutes for practical CMOS cells of up to 25 transistors. <p> In any hierarchical approach, the layout of individual clusters significantly affects the overall cell layout. For example, diffusion sharing between transistors belonging to different clusters depends on transistor placement within each cluster. Hence, hierarchical techniques <ref> [7, 10, 14] </ref> that treat the generation of intra and inter-cluster layouts in two sequential stages can yield sub-optimal results.

References-found: 14

