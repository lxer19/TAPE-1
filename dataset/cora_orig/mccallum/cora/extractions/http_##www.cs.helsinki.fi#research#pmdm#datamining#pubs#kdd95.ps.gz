URL: http://www.cs.helsinki.fi/research/pmdm/datamining/pubs/kdd95.ps.gz
Refering-URL: http://www.cs.helsinki.fi/research/pmdm/publications/
Root-URL: 
Email: fmarcel,mkg@cwi.nl  fHeikki.Mannila,Hannu.Toivoneng@cs.Helsinki.FI  
Title: A Perspective on Databases and Data Mining  
Author: Marcel Holsheimer Martin Kersten Heikki Mannila Hannu Toivonen 
Address: P.O.Box 94079 NL-1090 GB Amsterdam The Netherlands  P.O.Box 26  Finland  
Affiliation: CWI Database Research group  University of Helsinki Department of Computer Science  University of Helsinki  
Pubnum: FIN-00014  
Abstract: We discuss the use of database methods for data mining. Recently impressive results have been achieved for some data mining problems using highly specialized and clever data structures. We study how well one can manage by using general purpose database management systems. We illustrate our ideas by investigating the use of a dbms for a well-researched area: the discovery of association rules. We present a simple algorithm, consisting of only union and intersection operations, and show that it achieves quite good performance on an efficient dbms. Our method can incorporate inheritance hierarchies to the association rule algorithm easily. We also present a technique that effectively reduces the number of database operations when searching large search spaces that contain only few interesting items. Our work shows that database techniques are promising for data mining: general architectures can achieve reasonable results. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Agrawal, R., and Srikant, R. </author> <year> 1994. </year> <title> Fast algorithms for mining association rules in large databases. </title> <booktitle> In VLDB '94. </booktitle>
Reference: <author> Agrawal, R.; Mannila, H.; Srikant, R.; Toivonen, H.; and Verkamo, A. I. </author> <year> 1995. </year> <title> Fast discovery of association rules. </title> <editor> In Fayyad, U. M.; Piatetsky-Shapiro, G.; Smyth, P.; and Uthurusamy, R., eds., </editor> <title> Advances in Knowledge Discovery and Data Mining. </title> <note> AAAI/MIT Press. To appear. </note>
Reference: <author> Agrawal, R.; Imielinski, T.; and Swami, A. </author> <year> 1993. </year> <title> Mining association rules between sets of items in large databases. </title> <booktitle> In Proceedings of the 1993 International Conference on Management of Data (SIGMOD 93), </booktitle> <volume> 207 - 216. </volume>
Reference-contexts: Experiments in Section 5 show that this technique can reduce execution time by 50% and the number of database operations by up to 90%. Section 6 is a short conclusion. Association rules Association rules are a class of regularities in binary databases <ref> (Agrawal, Imielinski, & Swami 1993) </ref>. An association rule is an expression X ) Y , where X and Y are sets of attributes, meaning that in the rows of the database where the attributes in X have value true, also the attributes in Y tend to have value true. <p> An itemset consisting of s items is called an s-itemset. All association rules X ) Y with s (XY ) can be found in two phases <ref> (Agrawal, Imielinski, & Swami 1993) </ref>. In the first, expensive phase the database is searched for all large itemsets, i.e., sets of items that occur together at least in transactions in the database. In the second and easy phase, association rules are generated from these large itemsets. <p> In the second and easy phase, association rules are generated from these large itemsets. In this paper, we focus on the first phase: the discovery of large itemsets. Details on the construction of association rules can be found in <ref> (Agrawal, Imielinski, & Swami 1993) </ref>. Most algorithms for the discovery of large itemsets work as follows (Agrawal et al. 1995; Agrawal & Srikant 1994; Mannila, Toivonen, & Verkamo 1994). First, the supports for single items are computed and large 1-itemsets are found. <p> For example, Budweiser and Heineken are both beer ; beer, lemonade, and juice are beverages, etc. Rules expressed in terms of such gen 1 We use a notion of support slightly different from <ref> (Agrawal, Imielinski, & Swami 1993) </ref>, where s (X) is defined as the fraction of the database that contains X. eral categories provide very useful high-level information.
Reference: <editor> Fayyad, U. M., and Uthurusamy, R., eds. </editor> <year> 1994. </year> <note> AAAI-94 Workshop Knowledge Discovery in Databases. </note>
Reference: <author> Holsheimer, M., and Kersten, M. L. </author> <year> 1994. </year> <title> Architectural support for data mining. </title> <booktitle> In Fayyad and Uthu-rusamy (1994), </booktitle> <volume> 217 - 228. </volume>
Reference: <author> Holsheimer, M.; Klosgen, W.; Mannila, H.; and Siebes, A. </author> <year> 1995. </year> <title> A data mining architecture. </title> <note> In preparation. </note>
Reference-contexts: Our results support the notion that dbms techniques can be used profitably in building data mining tools <ref> (Holsheimer et al. 1995) </ref>. We are currently investigating how this approach works on other topics, e.g., for finding integrity constraints on databases (Mannila & Raiha 1994). While our goal was not to develop a yet faster association rule finding method, the approach described above gives some possibilities even for that.
Reference: <author> Holsheimer, M.; Kersten, M.; and Siebes, A. </author> <title> forthcoming. Data Surveyor: Searching the nuggets in parallel. </title> <editor> In Fayyad, U. M.; Piatetsky-Shapiro, G.; Smyth, P.; and Uthurusamy, R., eds., </editor> <booktitle> Advances in Knowledge Discovery and Data Mining. </booktitle> <publisher> AAAI/MIT Press. </publisher>
Reference: <author> Kersten, M. L. </author> <month> August </month> <year> 1991. </year> <title> Goblin: A DBPL designed for Advanced Database Applications. </title> <booktitle> In 2nd Int. Conf. on Database and Expert Systems Applications, </booktitle> <address> DEXA'91. </address>
Reference: <author> Khoshafian, S.; Copeland, G.; Jadodits, T.; Boral, H.; and Valduriez, P. </author> <year> 1987. </year> <title> A query processing strategy for the decomposed storage model. </title> <booktitle> In Proc. IEEE Data Engineering Conf, </booktitle> <pages> 636-643. </pages>
Reference-contexts: Monet offers the necessary storage structures and operations, and takes care of optimizing the database activity. Data representation The database is stored as a decomposed storage structure <ref> (Khoshafian et al. 1987) </ref>. Normally one would store the data as a set of transactions (rows), and for each transaction enumerate the items that are members of this transaction.
Reference: <author> Mannila, H., and Raiha, K.-J. </author> <year> 1994. </year> <title> Algorithms for inferring functional dependencies. </title> <booktitle> Data & Knowledge Engineering 12(1) </booktitle> <pages> 83-99. </pages>
Reference-contexts: Our results support the notion that dbms techniques can be used profitably in building data mining tools (Holsheimer et al. 1995). We are currently investigating how this approach works on other topics, e.g., for finding integrity constraints on databases <ref> (Mannila & Raiha 1994) </ref>. While our goal was not to develop a yet faster association rule finding method, the approach described above gives some possibilities even for that. For example, if the construction of the tree in Section 4 succeeds in an optimal way, there will be very few alarms.
Reference: <author> Mannila, H.; Toivonen, H.; and Verkamo, A. I. </author> <year> 1994. </year> <title> Efficient algorithms for discovering association rules. </title>
Reference-contexts: Our results support the notion that dbms techniques can be used profitably in building data mining tools (Holsheimer et al. 1995). We are currently investigating how this approach works on other topics, e.g., for finding integrity constraints on databases <ref> (Mannila & Raiha 1994) </ref>. While our goal was not to develop a yet faster association rule finding method, the approach described above gives some possibilities even for that. For example, if the construction of the tree in Section 4 succeeds in an optimal way, there will be very few alarms.
Reference: <editor> In Fayyad and Uthurusamy (1994), </editor> <volume> 181 - 192. </volume> <editor> van den Berg, C. A., and Kersten, M. L. </editor> <year> 1994. </year> <title> An analysis of a dynamic query optimisation scheme for different data distributions. </title> <editor> In Freytag, J.; Maier, D.; and Vossen, G., eds., </editor> <booktitle> Advances in Query Processing. </booktitle> <publisher> Morgan-Kaufmann. </publisher> <pages> 449 - 470. </pages>
References-found: 12

