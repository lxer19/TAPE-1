URL: ftp://ftp.cs.washington.edu/homes/pardo/wwos93.ps.Z
Refering-URL: http://www.cs.washington.edu/homes/pardo/papers.d/cust-os.html
Root-URL: 
Title: The Need for Customizable Operating Systems Although modern operating systems provide powerful abstractions to application
Author: Gregor Kiczales John Lamping Chris Maeda David Keppel, Dylan McNamee 
Affiliation: Xerox Palo Alto Research Center  Carnegie Mellon University  University of Washington  
Note: (Appears in the proceedings of WWOS'93.)  
Pubnum: system[And92].  
Abstract: The operating system community has implicitly recognized this problem by providing mechanisms that give client programmers more access to the physical substrate. The Mach External Pager allows clients to replace the paging mechanism. More recent work, [MA90], [HC92] and [KLVA93], allows client replacement of the paging policy as well. Scheduler activations share the job of thread management between clients and the system. Apertos[Yok92] allows these and other aspects of operating system implementation to be client-controlled. Object-oriented operating systems under development also provide these kinds of control. We contend that there is a very general issue here, which operating systems have been among the first kinds of software to have to face head-on: some implementation decisions are crucial strategy decisions whose resolution will invariably bias the performance of the resulting implementation. Explicitly recognizing this issue helps to make sense of current trends and suggests new directions to explore. We consider the implications of this issue for operating systems, providing a framework with which to analyze systems such as those mentioned above, and suggesting connections with similar problems in other domains. fl 3333 Coyote Hill Rd., Palo Alto, CA 94304; (415)812-4888; Gregor@parc.xerox.com.
Abstract-found: 1
Intro-found: 1
Reference: [And92] <author> Thomas E. Anderson. </author> <title> The case of application-specific operating systems. </title> <booktitle> In 3rd Workshop on Workstation Operating Systems, </booktitle> <month> April </month> <year> 1992, </year> <month> April </month> <year> 1992. </year>
Reference-contexts: Rather than start from scratch every time, it makes more sense to have operating systems that can ac-comodate intervention, customizable operating systems. Anderson <ref> [And92] </ref> suggested one way of achieving this: an application-specific structure where as much of the operating system as possible is pushed into runtime library routines linked in with each application. We want to understand and evaluate this and other approaches to customizabil-ity.
Reference: [HC92] <author> Kieran Harty and David R. Cheriton. </author> <title> Application-controlled physical memory using external page-cache management. </title> <booktitle> Proceedings of the Fifth International Symposium on Architectural Support for Programming Languages and Operating Systems (ASPLOS-V), </booktitle> <pages> pages 187-197, </pages> <year> 1992. </year>
Reference: [KLVA93] <author> Keith Krueger, David Loftesness, Amin Vahdat, and Thomas Anderson. </author> <title> Tools for the development of application-specific virtual memory management. </title> <editor> In Andreas Paepcke, editor, </editor> <booktitle> Proceedings of the Conference on Object-Oriented Programming: Systems, Languages, and Applications, </booktitle> <pages> pages 48-64. </pages> <publisher> ACM/SIGPLAN, ACM Press, </publisher> <month> October </month> <year> 1993. </year> <title> Volume 28, Number 10. </title>
Reference: [MA90] <author> Dylan McNamee and Katherine Arm-strong. </author> <title> Extending the mach external pager interface to allow user-level page replacement policies. </title> <type> Technical Report UWCSE 90-09-05, </type> <institution> University of Wash-ington, </institution> <month> September </month> <year> 1990. </year>
Reference: [Yok92] <author> Yasuhiko Yokote. </author> <title> The apertos reflective operating system: The concept and its implementation. </title> <booktitle> In Proceedings of the Conference on Object-Oriented Programming: Systems, Languages, and Applications, </booktitle> <pages> pages 414-434, </pages> <month> October </month> <year> 1992. </year>
References-found: 5

