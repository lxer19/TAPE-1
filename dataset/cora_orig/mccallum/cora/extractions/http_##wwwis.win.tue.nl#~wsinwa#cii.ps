URL: http://wwwis.win.tue.nl/~wsinwa/cii.ps
Refering-URL: http://wwwis.win.tue.nl/~wsinwa/publications.html
Root-URL: http://www.win.tue.nl
Title: Putting high-level Petri nets to work in industry  
Author: W.M.P. van der Aalst 
Keyword: high-level Petri nets; applications of Petri nets  
Address: P.O. Box 513, 5600 MB, Eindhoven, The Netherlands  
Affiliation: Department of Mathematics and Computing Science, Eindhoven University of Technology,  
Abstract: Petri nets exist for over 30 years. Especially in the last decade Petri nets have been put into practice extensively. Thanks to several useful extensions and the availability of computer tools, Petri nets have become a mature tool for modelling and analysing industrial systems. This paper describes an approach based on a high-level Petri net model, i.e. an extended version of the classical Petri net model. This approach has been used to model and analyse a variety of systems in application domains ranging from logistics to office automation. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> W.M.P. van der Aalst. </author> <title> Modelling and Analysis of Complex Logistic Systems. </title> <editor> In H.J. Pels and J.C. Wortmann, editors, </editor> <title> Integration in Production Management Systems, </title> <journal> volume B-7 of IFIP Transactions, </journal> <pages> pages 277-292. </pages> <publisher> Elsevier Science Publishers, </publisher> <address> Amsterdam, </address> <year> 1992. </year>
Reference-contexts: Moreover, tools such as ExSpect allow for the animation of systems modelled in terms of a Petri net (see figure 9). For a more detailed discussion on this subject the reader is referred to <ref> [1, 2] </ref>. ExSpect has been used to model many logistic systems. The TASTE project ([6]) resulted in the development of a comprehensive set of logistic building blocks. These building blocks have been used to model distribution processes of Dutch companies such as Ahold, Unilever, DAF, Buhrmann-Tetterode, etc.
Reference: [2] <author> W.M.P. van der Aalst. </author> <title> Timed coloured Petri nets and their application to logistics. </title> <type> PhD thesis, </type> <institution> Eindhoven University of Technology, Eindhoven, </institution> <year> 1992. </year>
Reference-contexts: In a coloured Petri net each token has a value often referred to as `colour'. Many coloured Petri net models have been proposed in literature (cf. <ref> [2, 12, 14, 15] </ref>). One of the main reasons for such an extension is the fact that uncoloured nets tend to become too large to handle. We will use the machine modelled in figure 1 to clarify this concept. Tokens in the places cin and cout represent jobs. <p> The timestamp of this token is equal to 1+3=4. Transition finish will be the next to fire (at time 4), etc. The delay of a produced token can be described by a fixed value, an interval or a probability distribution (cf. <ref> [2, 10, 16, 17] </ref>). 2.4 Adding hierarchy Although timed coloured Petri nets allow for a succinct description of many industrial processes, precise specifications for real systems have a tendency to become large and complex. This is the reason we provide a hierarchy construct, called system. <p> At one level we want to give a simple description of the system (without having to consider all the details). At another level we want to specify a more detailed behaviour. For a more elaborate discussion on hierarchy constructs, the reader is referred to Jensen [14], van der Aalst <ref> [2, 8] </ref> and van Hee [12]. 2.5 Language and tools In the remainder of this paper we will refer to Petri nets extended with `colour', `time' and `hierarchy' as high-level Petri nets. <p> For an overview of the many analysis methods developed for Petri nets the reader is referred to Jensen [15], Murata [17], Silva and Vallette [19] and <ref> [3, 2] </ref>. These methods can be used to prove properties (safety properties, invariance properties, deadlock, etc.) and to calculate performance measures (response times, waiting times, occupation rates, etc.). <p> Moreover, tools such as ExSpect allow for the animation of systems modelled in terms of a Petri net (see figure 9). For a more detailed discussion on this subject the reader is referred to <ref> [1, 2] </ref>. ExSpect has been used to model many logistic systems. The TASTE project ([6]) resulted in the development of a comprehensive set of logistic building blocks. These building blocks have been used to model distribution processes of Dutch companies such as Ahold, Unilever, DAF, Buhrmann-Tetterode, etc.
Reference: [3] <author> W.M.P. van der Aalst. </author> <title> Interval Timed Coloured Petri Nets and their Analysis. </title> <editor> In M. Ajmone Marsan, editor, </editor> <booktitle> Application and Theory of Petri Nets 1993, volume 691 of Lecture Notes in Computer Science, </booktitle> <pages> pages 453-472. </pages> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1993. </year>
Reference-contexts: For an overview of the many analysis methods developed for Petri nets the reader is referred to Jensen [15], Murata [17], Silva and Vallette [19] and <ref> [3, 2] </ref>. These methods can be used to prove properties (safety properties, invariance properties, deadlock, etc.) and to calculate performance measures (response times, waiting times, occupation rates, etc.).
Reference: [4] <author> W.M.P. van der Aalst, K.M. van Hee, and G.J. Houben. </author> <title> Modelling workflow management systems with high-level Petri nets. </title> <booktitle> In Proceedings of the second Workshop on Computer-Supported Cooperative Work, Petri nets and related formalisms. </booktitle> <publisher> (forthcoming), </publisher> <year> 1994. </year>
Reference-contexts: There are several commercial workflow management systems on the market and experiments have shown that they are successful. High-level Petri nets seem to be a suitable tools for the modelling and analysis of workflow and workflow management systems (cf. Ellis and Nutt [11] and <ref> [4] </ref>). 3.4 Traffic control The Dutch Railway Company (NS) is currently involved in a number of large development projects. The goal of these projects is to improve the management of trains.
Reference: [5] <author> W.M.P. van der Aalst, K.M. van Hee, N. Treves, and R. di Giovanni. </author> <title> PROOFS: formalisms and methods. </title> <address> TUE-TR-0035-V4.0-WP1, </address> <year> 1993. </year>
Reference-contexts: ExSpect also allows for the definition of a customized user-interface, this way it is possible to create a tailor-made prototype for a specific application. Such a prototype can be used to validate the specification by future users of the program. In the Esprit project PROOFS (EP 5342, cf. <ref> [5] </ref>), high-level Petri nets have been used to prototype distributed applications for companies such as Alcatel, Eritel, Prisma and Telesystems. Typical applications prototyped in PROOFS are traffic control systems, banking systems and conferencing systems. One of the main results of this project was the `PROOFS method' ([5]), a coherent set of
Reference: [6] <author> W.M.P. van der Aalst, M. Voorhoeve, and A.W. Waltmans. </author> <title> The TASTE project. </title> <booktitle> In Proceedings of the 10th International Conference on Applications and Theory of Petri Nets, </booktitle> <pages> pages 371-372, </pages> <address> Bonn, </address> <month> June </month> <year> 1989. </year>
Reference: [7] <author> W.M.P. van der Aalst and A.W. Waltmans. </author> <title> Modelling Flexible Manufacturing Systems with EXSPECT. </title> <editor> In B. Schmidt, editor, </editor> <booktitle> Proceedings of the 1990 European Simulation Multicon-ference, </booktitle> <pages> pages 330-338, </pages> <address> Nurnberg, </address> <month> June </month> <year> 1990. </year> <institution> Simulation Councils Inc. </institution>
Reference: [8] <author> W.M.P. van der Aalst and A.W. Waltmans. </author> <title> Modelling logistic systems with EXSPECT. </title> <editor> In H.G. Sol and K.M. van Hee, editors, </editor> <booktitle> Dynamic Modelling of Information Systems, </booktitle> <pages> pages 269-288. </pages> <publisher> Elsevier Science Publishers, </publisher> <address> Amsterdam, </address> <year> 1991. </year>
Reference-contexts: At one level we want to give a simple description of the system (without having to consider all the details). At another level we want to specify a more detailed behaviour. For a more elaborate discussion on hierarchy constructs, the reader is referred to Jensen [14], van der Aalst <ref> [2, 8] </ref> and van Hee [12]. 2.5 Language and tools In the remainder of this paper we will refer to Petri nets extended with `colour', `time' and `hierarchy' as high-level Petri nets.
Reference: [9] <author> T. Agerwala. </author> <title> Putting Petri Nets to Work. </title> <journal> IEEE Computer, </journal> <volume> 12(12) </volume> <pages> 85-94, </pages> <month> Dec </month> <year> 1979. </year>
Reference-contexts: Petri nets may offer a solution.". Since then Petri nets have become a popular tool for describing and studying concurrent systems. Nevertheless, we believe that the classical Petri net model described in <ref> [9] </ref> will be inadequate for the complex industrial systems of the 90's. Therefore, we propose a Petri net model extended with `colour', `time' and `hierarchy'. Automated systems encountered in the fields of logistics, manufacturing, communication and administration have become more complex in the last decade. <p> Petri nets are able to represent the flow of control in a program in a straightforward manner. Moreover, Petri nets can clearly and explicitly represent the interaction between concurrent processes (see Agerwala <ref> [9] </ref>). By specifying a piece of software in terms of a high-level Petri net, it is possible to analyse the corresponding specification by means of Petri net based analysis techniques.
Reference: [10] <author> B. Berthomieu and M. Diaz. </author> <title> Modelling and verification of time dependent systems using Time Petri Nets. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 17(3) </volume> <pages> 259-273, </pages> <month> March </month> <year> 1991. </year>
Reference-contexts: The timestamp of this token is equal to 1+3=4. Transition finish will be the next to fire (at time 4), etc. The delay of a produced token can be described by a fixed value, an interval or a probability distribution (cf. <ref> [2, 10, 16, 17] </ref>). 2.4 Adding hierarchy Although timed coloured Petri nets allow for a succinct description of many industrial processes, precise specifications for real systems have a tendency to become large and complex. This is the reason we provide a hierarchy construct, called system.
Reference: [11] <author> C.A. Ellis and G.J. Nutt. </author> <title> Modelling and Enactment of Workflow Systems. </title> <editor> In M. Ajmone Marsan, editor, </editor> <booktitle> Application and Theory of Petri Nets 1993, volume 691 of Lecture Notes in Computer Science, </booktitle> <pages> pages 1-16. </pages> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1993. </year>
Reference-contexts: There are several commercial workflow management systems on the market and experiments have shown that they are successful. High-level Petri nets seem to be a suitable tools for the modelling and analysis of workflow and workflow management systems (cf. Ellis and Nutt <ref> [11] </ref> and [4]). 3.4 Traffic control The Dutch Railway Company (NS) is currently involved in a number of large development projects. The goal of these projects is to improve the management of trains.
Reference: [12] <author> K.M. van Hee. </author> <title> Information System Engineering: a Formal Approach. </title> <publisher> Cambridge University Press, </publisher> <year> 1994. </year>
Reference-contexts: In a coloured Petri net each token has a value often referred to as `colour'. Many coloured Petri net models have been proposed in literature (cf. <ref> [2, 12, 14, 15] </ref>). One of the main reasons for such an extension is the fact that uncoloured nets tend to become too large to handle. We will use the machine modelled in figure 1 to clarify this concept. Tokens in the places cin and cout represent jobs. <p> At another level we want to specify a more detailed behaviour. For a more elaborate discussion on hierarchy constructs, the reader is referred to Jensen [14], van der Aalst [2, 8] and van Hee <ref> [12] </ref>. 2.5 Language and tools In the remainder of this paper we will refer to Petri nets extended with `colour', `time' and `hierarchy' as high-level Petri nets. Only a few high-level Petri net models (i.e. hierarchical timed coloured Petri net models) have been proposed in literature.
Reference: [13] <author> K.M. van Hee, L.J. Somers, and M. Voorhoeve. </author> <title> Executable specifications for distributed information systems. </title> <editor> In E.D. Falkenberg and P. Lindgreen, editors, </editor> <booktitle> Proceedings of the IFIP TC 8 / WG 8.1 Working Conference on Information System Concepts: An In-depth Analysis, </booktitle> <pages> pages 139-156, </pages> <address> Namur, Belgium, 1989. </address> <publisher> Elsevier Science Publishers, Amsterdam. </publisher>
Reference: [14] <author> K. Jensen. </author> <title> Coloured Petri Nets: A High Level Language for System Design and Analysis. </title> <editor> In G. Rozenberg, editor, </editor> <booktitle> Advances in Petri Nets 1990, volume 483 of Lecture Notes in Computer Science, </booktitle> <pages> pages 342-416. </pages> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1990. </year>
Reference-contexts: In a coloured Petri net each token has a value often referred to as `colour'. Many coloured Petri net models have been proposed in literature (cf. <ref> [2, 12, 14, 15] </ref>). One of the main reasons for such an extension is the fact that uncoloured nets tend to become too large to handle. We will use the machine modelled in figure 1 to clarify this concept. Tokens in the places cin and cout represent jobs. <p> At one level we want to give a simple description of the system (without having to consider all the details). At another level we want to specify a more detailed behaviour. For a more elaborate discussion on hierarchy constructs, the reader is referred to Jensen <ref> [14] </ref>, van der Aalst [2, 8] and van Hee [12]. 2.5 Language and tools In the remainder of this paper we will refer to Petri nets extended with `colour', `time' and `hierarchy' as high-level Petri nets.
Reference: [15] <author> K. Jensen. </author> <title> Coloured Petri Nets. Basic concepts, analysis methods and practical use. </title> <booktitle> EATCS monographs on Theoretical Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1992. </year>
Reference-contexts: In a coloured Petri net each token has a value often referred to as `colour'. Many coloured Petri net models have been proposed in literature (cf. <ref> [2, 12, 14, 15] </ref>). One of the main reasons for such an extension is the fact that uncoloured nets tend to become too large to handle. We will use the machine modelled in figure 1 to clarify this concept. Tokens in the places cin and cout represent jobs. <p> For an overview of the many analysis methods developed for Petri nets the reader is referred to Jensen <ref> [15] </ref>, Murata [17], Silva and Vallette [19] and [3, 2]. These methods can be used to prove properties (safety properties, invariance properties, deadlock, etc.) and to calculate performance measures (response times, waiting times, occupation rates, etc.).
Reference: [16] <author> M. Ajmone Marsan, G. Balbo, and G. Conte. </author> <title> A Class of Generalised Stochastic Petri Nets for the Performance Evaluation of Multiprocessor Systems. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 2(2) </volume> <pages> 93-122, </pages> <month> May </month> <year> 1984. </year>
Reference-contexts: The timestamp of this token is equal to 1+3=4. Transition finish will be the next to fire (at time 4), etc. The delay of a produced token can be described by a fixed value, an interval or a probability distribution (cf. <ref> [2, 10, 16, 17] </ref>). 2.4 Adding hierarchy Although timed coloured Petri nets allow for a succinct description of many industrial processes, precise specifications for real systems have a tendency to become large and complex. This is the reason we provide a hierarchy construct, called system.
Reference: [17] <author> T. Murata. </author> <title> Petri Nets: Properties, Analysis and Applications. </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> 77(4) </volume> <pages> 541-580, </pages> <month> April </month> <year> 1989. </year>
Reference-contexts: Since then the use and study of Petri nets has increased considerably. For a review of the history of Petri nets and an extensive bibliography the reader is referred to Murata <ref> [17] </ref>. The classical Petri net is a directed bipartite graph with two node types called places and transitions. The nodes are connected via directed arcs. Connections between two nodes of the same type are not allowed. <p> The classical Petri net model has been used in many application areas, e.g. communication protocols, flexible manufacturing systems and distributed information systems (see Murata <ref> [17] </ref>). However, Petri nets describing real systems tend to be complex and extremely large. To solve these problems, many authors propose extensions of the basic Petri net model. We will discuss three of these extensions; `colour', `time' and `hierarchy'. <p> The timestamp of this token is equal to 1+3=4. Transition finish will be the next to fire (at time 4), etc. The delay of a produced token can be described by a fixed value, an interval or a probability distribution (cf. <ref> [2, 10, 16, 17] </ref>). 2.4 Adding hierarchy Although timed coloured Petri nets allow for a succinct description of many industrial processes, precise specifications for real systems have a tendency to become large and complex. This is the reason we provide a hierarchy construct, called system. <p> For an overview of the many analysis methods developed for Petri nets the reader is referred to Jensen [15], Murata <ref> [17] </ref>, Silva and Vallette [19] and [3, 2]. These methods can be used to prove properties (safety properties, invariance properties, deadlock, etc.) and to calculate performance measures (response times, waiting times, occupation rates, etc.).
Reference: [18] <institution> C.A. Petri. Kommunikation mit Automaten. </institution> <type> PhD thesis, </type> <institution> Institut fur instrumentelle Math-ematik, Bonn, </institution> <year> 1962. </year>
Reference: [19] <author> M. Silva and R. Valette. </author> <title> Petri Nets and Flexible Manufacturing. </title> <editor> In G. Rozenberg, editor, </editor> <booktitle> Advances in Petri Nets 1989, volume 424 of Lecture Notes in Computer Science, </booktitle> <pages> pages 274-417. </pages> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1990. </year>
Reference-contexts: For an overview of the many analysis methods developed for Petri nets the reader is referred to Jensen [15], Murata [17], Silva and Vallette <ref> [19] </ref> and [3, 2]. These methods can be used to prove properties (safety properties, invariance properties, deadlock, etc.) and to calculate performance measures (response times, waiting times, occupation rates, etc.).
Reference: [20] <author> J.M. Spivey. </author> <title> The Z Notation: A Reference Manual. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, </address> <year> 1989. </year> <title> Wil van der Aalst is an Assistant Professor in the Department of Mathematics and Com--puting Science at Eindhoven University of Technology. In 1992, he completed his PhD thesis on Petri nets and their application to logistics. His research interests are in simulation, information systems, manufacturing and real-time systems. </title> <note> He is also working as a part-time consultant for Bakkenist Management Consultants. </note>
Reference-contexts: To specify the behaviour of each transition (i.e. the number of tokens produced and the value and delay of each produced token), Design/CPN provides an `inscription language' (expressions on the input and output arcs of a transition). ExSpect (Executable Specification Tool) uses a `Z-like' specification language (Spivey <ref> [20] </ref>) to describe the behaviour of a transition. Both languages originate from `pure' functional languages. The approach described in this paper is based on the software package ExSpect. ExSpect has been developed by the information systems department of Eindhoven University of Technology.
References-found: 20

