URL: http://www.cs.brandeis.edu/~tim/Papers/fspn_exp.ps
Refering-URL: http://www.cs.brandeis.edu/~tim/Papers/
Root-URL: http://www.cs.brandeis.edu
Title: Fast, Sound and Precise Narrowing of the Exponential Function  
Author: Timothy Hickey and Qun Ju 
Date: March 27, 1996  
Address: Waltham MA, 02254  
Affiliation: Michtom School of Computer Science Volen Center for Complex Systems Brandeis University,  
Abstract: In this paper we present an algorithm for narrowing the constraint y = e x . The algorithm has been designed to be fast by using only IEEE multiplication. The main difficulty is to design algorithms which soundly, rapidly, and precisely compute upper and lower bounds on e x and ln(y). We prove that our algorithms are correct and produce upper and lower bounds which differ by at most 2 ULP. Experiments indicate that the bounds differ by 1 ULP 99.8% of the time. The method we describe is table-driven as is Gal's accurate tables method, but the table is easier to construct and hence this method may be applicable to wider classes of functions. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Bate, R. and Mueller, D. and White, J., </author> <title> Fundamentals of Astrodynamics. </title> <publisher> Dover, </publisher> <year> 1971. </year>
Reference-contexts: Consider now the case where jaj 2jfij. We may assume without loss of generality, that a &gt; 0 and fi &lt; 0. Again letting c = s (a + fi), we find that a c a=2 a c 0 Thus, we see that (c) 2 (a) + <ref> [0; 1] </ref> and (a c) (a) 1. Since (a c) (c) we must be able to represent a c with a fractional part of at most F bits and with the position of its last nonzero bit no smaller than (c). <p> on M ,B,and C are: F &gt; F E C B + 3 &gt; B E + 4 &gt; E 11 C E 1 M 3 D 52=(M 1) + 2 In our experiments, we selected C = 32 and B = 16 and let M range in the interval <ref> [1; 10] </ref>.
Reference: [2] <editor> Benhamou, F. and Older, W., </editor> <title> Applying interval arithmetic to real, integer, and boolean constraints. </title> <journal> Journal of Logic Programming, </journal> <note> (To Appear), </note> <year> 1994. </year>
Reference-contexts: Relational interval arithmetic is an extensions grows out of earlier work by Moore [15] on interval arithmetic. These new CLP languages allow the user to solve complex arithmetic constraints involving not just the algebraic functions (+,-,*,/), but a wide range of other functions as well <ref> [2] </ref>.
Reference: [3] <author> Cohen, H. </author> <note> PARI reference manual 1996. </note>
Reference: [4] <author> Colmerauer, A., </author> <title> Solving Equations and Inequations on Finite and Infinite Trees. </title> <booktitle> in Proceedings of the Conference on Fifth Generations Computer Systems, </booktitle> <editor> K.L. Clark and S.A. Tarnlund (eds.), </editor> <year> 1984. </year>
Reference: [5] <author> Colmerauer, A., </author> <title> An Introduction to Prolog III. </title> <journal> Communications of the ACM, </journal> <month> july </month> <year> 1990. </year>
Reference: [6] <author> Eckmann, J-P. and Wittwer, P., </author> <title> Computer Methods and Borel Summabil-ity Applied to Feigenbaum's Equation. Springer-Verlag, </title> <booktitle> Lecture Notes in Physics, </booktitle> <volume> 227, </volume> <year> 1985. </year>
Reference: [7] <institution> Computer Evaluation of Mathematical Functions Fike, </institution> <address> C.T. </address> <publisher> Prentice Hall Series in Automatic Computation, Prentic-Hall Inc., </publisher> <year> 1968. </year>
Reference: [8] <author> Gal S., </author> <title> Computing Elementary Functions: A New Approach for Achieving High Accuracy and Good Performance, in Accurate Scientific Computations, </title> <editor> (eds. Miranker, W.L., and Toupin, R.A.), </editor> <booktitle> Springer-Verlag Lecture Notes in Computer Science No. </booktitle> <volume> 235, </volume> <publisher> Springer-Verlag, </publisher> <year> 1985. </year>
Reference: [9] <author> Gal, S. and Bachelis, B. </author> , <title> An Accurate Elementary Mathematical Library for the IEEE Floating Point Standard, </title> <journal> ACM Transactions on Mathematical Software, </journal> <volume> Vol. 17, No. 1, </volume> <month> March </month> <year> 1991. </year>
Reference-contexts: These results are supported by experimental evidence. The method that we use is a variation of Gal's accurate tables approach <ref> [9] </ref>, but our tables are somewhat simpler and more generally applicable.
Reference: [10] <author> Goldberg, D. </author> <title> What Every Computer Scientist Should Know About Floating-Point Arithmetic ACM Computing Surveys, </title> <journal> Vol. </journal> <volume> 23, No. 1, </volume> <year> 1991. </year>
Reference-contexts: Our goal in the following section is to show how to compute upper and lower bounds for these functions with a provably small error using the arithmetic operations as described by the IEEE standard. A good introduction to floating point arithmetic is Goldberg's survey <ref> [10] </ref>. 2.2 Overview of the IEEE 754 standard IEEE 754 is a standard for binary floating-point arithmetic, which specifies the precise layout in different precisions such as single and double precisions. <p> on M ,B,and C are: F &gt; F E C B + 3 &gt; B E + 4 &gt; E 11 C E 1 M 3 D 52=(M 1) + 2 In our experiments, we selected C = 32 and B = 16 and let M range in the interval <ref> [1; 10] </ref>.
Reference: [11] <author> Hickey, T. </author> <title> CLP(F) and Constrained ODEs ECRC Technical report Proceedings of the Workshop and Constraints and Modelling Ithica, </title> <address> NY, </address> <year> 1994 </year>
Reference-contexts: 1 Introduction One of the most exciting advances in constraint logic programming over the last few years has been the incorporation of the relational interval arithmetic constraint solving algorithm in CLP systems (see CLP (BNR) [16] and CLP (F) <ref> [11] </ref>). Relational interval arithmetic is an extensions grows out of earlier work by Moore [15] on interval arithmetic. These new CLP languages allow the user to solve complex arithmetic constraints involving not just the algebraic functions (+,-,*,/), but a wide range of other functions as well [2].
Reference: [12] <editor> IEEE standard 754-1985 for Binary Floating-Point Arithmetic IEEE. </editor> <booktitle> Reprinted in SIGPLAN 22(2), </booktitle> <pages> pp. 9-25, </pages> <year> 1985 </year>
Reference-contexts: For the narrowing of addition and multiplication, this is a relatively straightforward problem, since the IEEE 754 standard <ref> [12] </ref> for double precision arithmetic allows the user to specify the rounding mode for the primary operations (+,-,*,/) and the square root. In this paper we show how to implement a sound narrowing algorithm for constraint y = x x .
Reference: [13] <author> Jaffar, J. and Lassez, J. L., </author> <title> Constraint Logic Programming. </title> <booktitle> in Proceedings of the 14th ACM Symposium on the Principles of Programming Languages, </booktitle> <year> 1987. </year>
Reference: [14] <author> Jaffar, J. and Michaylov, S., </author> <title> Methodology and Implementation of a Constraint Logic Programming System. </title> <booktitle> in Proceedings of the Fourth International Conference on Logic Programming, </booktitle> <publisher> MIT Press, </publisher> <year> 1987. </year> <month> 18 </month>
Reference: [15] <author> Moore, R. E., </author> <title> Interval Analysis. </title> <publisher> Prentice-Hall, </publisher> <year> 1966. </year>
Reference-contexts: Relational interval arithmetic is an extensions grows out of earlier work by Moore <ref> [15] </ref> on interval arithmetic. These new CLP languages allow the user to solve complex arithmetic constraints involving not just the algebraic functions (+,-,*,/), but a wide range of other functions as well [2].
Reference: [16] <author> Older, W. and Vellino, A., </author> <title> Constraint Arithmetic on Real Intervals, in Constraint Logic Programming: Selected Research Colmerauer, </title> <editor> A. and Ben-hamou, F. (eds), </editor> <publisher> MIT Press 1993. </publisher>
Reference-contexts: 1 Introduction One of the most exciting advances in constraint logic programming over the last few years has been the incorporation of the relational interval arithmetic constraint solving algorithm in CLP systems (see CLP (BNR) <ref> [16] </ref> and CLP (F) [11]). Relational interval arithmetic is an extensions grows out of earlier work by Moore [15] on interval arithmetic.
Reference: [17] <author> Ziv, A., </author> <title> Fast Evaluation of Elementary Mathematical Functions with Correctly Rounded Last Bit, </title> <journal> ACM Transactions on Mathematical Software, </journal> <volume> Vol. 17, No. 3, </volume> <month> September </month> <year> 1991. </year>
Reference-contexts: Just as with Gal's method, there is a simple test for "dangerous" situations which might result in 2 ULP errors and in this case, one can apply Ziv's observation <ref> [17] </ref> and call a multiprecision routine (possibly many times with increasingly larger precision) to attain the best possible upper (or lower) bound.
References-found: 17

