URL: http://www.cs.wvu.edu/~atkinson/pubs/wisr8.ps.gz
Refering-URL: http://www.cs.wvu.edu/~atkinson/publications.html
Root-URL: http://www.cs.wvu.edu
Email: Email: atkis@cs.uq.edu.au  
Phone: Tel: +61 (0)7 3365-1003  
Title: Examining Behavioural Retrieval Goals: extending behavioural theory to reuse-in-the-large, networking Working Groups: "Rigorous Behavioural Specification
Author: Steven Atkinson 
Keyword: reuse, component behaviour models, retrieval  
Note: Workshop  
Address: Brisbane, AUSTRALIA, 4072  
Affiliation: Software Verification Research Centre Department of Computer Science University of Queensland  
Abstract: The challenge of software reuse is to record software development knowledge in such a way that it is readily stored digitally and easily retrieved, understood and used by other software engineers. Hence at the highest level, the process of retrieval from a repository is to take a description of a problem, and search for stored knowledge which may help to solve the described problem. The purpose of component retrieval is therefore concerned with finding component be-haviours which solve a problem described by a query. Most proposed component retrieval schemes simulate this search for desired behaviour, either by using text-based, vocabulary classification, structural matching or specification matching techniques. Of course, most retrieval schemes also consider contextual aspects, such as resource usage, efficiency and internal representation. A theoretical definition of behavioural retrieval is required to describe the ideal (modulo contextual aspects) retrieval scheme, despite its probable inefficiency in practice. In this paper a theoretical definition of behavioural retrieval is outlined, showing that useful, exploitable structure does exist in behaviour. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Atkinson and R. Duke. </author> <title> Behavioural retrieval from class libraries. </title> <journal> Australian Computer Science Communications, </journal> <volume> 17(1) </volume> <pages> 13-20, </pages> <month> January </month> <year> 1995. </year> <note> An extended version appears as Software Verification Research Centre Technical Report 94-28, 1994., available at URL ftp://ftp.cs.uq.edu.au/pub/SVRC/techreports/tr94-28.ps.Z. </note>
Reference-contexts: Given a query (p; b), behavioural retrieval proceeds as shown in Figure 1: 1 This definition of join is a slight simplification; the full definition can be found in <ref> [1] </ref>. 4 Phase 1: the program is executed on each component in the library, resulting in a set of behaviours SB ; Phase 2: the set of behaviours SB is by definition embedded in the lattice of v. The position of the desired behaviour b in the lattice is found. <p> The proof of this property is given in <ref> [1] </ref>. 4 Comparison The principle of behavioural retrieval was first suggested by Podgurski and Pierce [8]. <p> The theory for behavioural retrieval, outlined here and given in detail in <ref> [1] </ref>, combines and extends the behavioural sampling and lattice-based retrieval work in three directions. Firstly, an abstract model of execution and behaviour was defined, independent of any particular language formalism. 5 Secondly, a notion of rejection is included in the behavioural model.
Reference: [2] <author> S. Butler and R. Duke. </author> <title> Defining Composition Operators for Object Interaction. </title> <type> Technical Report 96-12, </type> <institution> Software Verification Research Centre, Dept. of Computer Science , Univ. of Queensland, </institution> <year> 1996. </year> <note> Accepted for publication in Journal of Object-oriented Systems (OOS). </note>
Reference-contexts: Thirdly, a sound prescription for behavioural retrieval including a precise notion of approximate behaviour is provided. It is intended that current research into composition in object-oriented systems <ref> [2] </ref> will be combined with this theory of behavioural retrieval to directly address the problem of compositional retrieval (i.e. retrieval of composed components to satisfy a behavioural requirement). The compositional retrieval problem was noted by Hall [4] and repeated in Mili et al [7].
Reference: [3] <author> R. Duke, P. King, G. Rose, and G. Smith. </author> <title> The Object-Z specification language. </title> <editor> In T. Korson, V. Vaishnavi, and B. Meyer, editors, </editor> <booktitle> Technology of Object-Oriented Languages and Systems: TOOLS 5, </booktitle> <pages> pages 465-483. </pages> <publisher> Prentice-Hall, </publisher> <year> 1991. </year>
Reference: [4] <author> R. J. Hall. </author> <title> Generalized behavior-based retrieval. </title> <booktitle> In Proc. 15th ICSE, </booktitle> <pages> pages 371-380, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: It is intended that current research into composition in object-oriented systems [2] will be combined with this theory of behavioural retrieval to directly address the problem of compositional retrieval (i.e. retrieval of composed components to satisfy a behavioural requirement). The compositional retrieval problem was noted by Hall <ref> [4] </ref> and repeated in Mili et al [7]. In conclusion, the theory of behavioural retrieval has revealed an exploitable lattice structure by directly using perfect knowledge of component behaviour, rather than approximations to it. Despite its impracticality, the behavioural retrieval scheme is an important backdrop for other retrieval schemes.
Reference: [5] <author> J. Harrison, P.A. Bailes, A. Berglas, and I. Peake. </author> <title> Re-engineering 4gl-based information system applications. </title> <booktitle> In Asia-Pacific Software Engineering Conference, </booktitle> <pages> pages 448-457. </pages> <publisher> IEEE Computer Society Press, </publisher> <address> Los Alamitos CA., </address> <year> 1995. </year>
Reference: [6] <author> A. Mili, R. Mili, and R. Mittermeir. </author> <title> Storing and retrieving software components: A refinement based system. </title> <booktitle> In Proc. 16th ICSE, </booktitle> <pages> pages 91-100. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> May </month> <year> 1994. </year>
Reference-contexts: The idea of using a lattice structure as a vehicle for retrieval has been suggested by Mili et al <ref> [6] </ref>. In their retrieval system the nodes of the lattice were relations, serving as surrogates for specifications.
Reference: [7] <author> H. Mili, F. Mili, and A. Mili. </author> <title> Reusing Software: Issues and Research Directions. </title> <journal> IEEE Transaction on Software Engineering, </journal> <volume> 21(6) </volume> <pages> 528-561, </pages> <month> June </month> <year> 1995. </year>
Reference-contexts: The compositional retrieval problem was noted by Hall [4] and repeated in Mili et al <ref> [7] </ref>. In conclusion, the theory of behavioural retrieval has revealed an exploitable lattice structure by directly using perfect knowledge of component behaviour, rather than approximations to it. Despite its impracticality, the behavioural retrieval scheme is an important backdrop for other retrieval schemes.

References-found: 7

