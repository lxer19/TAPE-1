URL: http://www.cs.colorado.edu/~lizb/papers/ai-math98.ps.gz
Refering-URL: http://www.cs.colorado.edu/~lizb/papers/ai-math98.html
Root-URL: http://www.cs.colorado.edu
Email: lizb@cs.colorado.edu  [abbie,jrogers]@boulder.nist.gov  
Title: Global Solutions for Nonlinear Systems Using Qualitative Reasoning  
Author: E. Bradley A. O'Gallagher and J. Rogers 
Note: Contribution of the National Institute of Standards and Technology and not subject to copyright in the United States. Supported by NSF NYI #CCR-9357740, NSF #MIP-9403223, ONR #N00014-96-1-0720, and a Packard Fellowship in Science and Engineering from the David and Lucile Packard Foundation.  
Date: April 1, 1998  
Address: Boulder, CO 80309-0430  Boulder CO 80303-3328  
Affiliation: University of Colorado, Department of Computer Science,  National Institute of Standards and Technology,  
Abstract: This paper explores how qualitative information can be used to improve the performance of global optimization procedures. Specifically, we have constructed a nonlinear parameter estimation reasoner (nper) for finding parameter values that match an ordinary differential equation (ode) model to observed data. Qualitative reasoning (qr) is used within the nper, for instance, to intelligently choose starting values for the unknown parameters and to empirically determine when the system appears to be chaotic. This enables odrpack, the nonlinear least-squares solver that lies at the heart of this nper, to avoid terminating at local extrema in the regression landscape. odrpack is uniquely suited to this task because of its efficiency and stability. The nper's robustness is demonstrated via a Monte Carlo analysis of simulated examples drawn from across the domain of dynamics, including systems that are nonlinear, chaotic, and noisy. It is shown to locate solutions for noisy, incomplete real-world sensor data from radio-controlled cars used in the University of British Columbia's soccer-playing robot project. The parameter estimation scheme described in this paper is a component of pret, an implemented computer program that uses a variety of artificial intelligence 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J.-N. Juang. </author> <title> Applied system identification. </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1994. </year> <month> 13 </month>
Reference-contexts: In this event, the structural identification process must be repeated|often using information about why the previous attempt failed|until the process converges to a solution, as shown diagrammatically in Figure 1. In linear physical systems, parameter estimation is well-understood. One textbook approach <ref> [1] </ref> is to choose a generic ode system _ ~x = A~x, fast-Fourier-transform (fft) the sensor data, and use the characteristics of the resulting impulse response 1 to determine the coefficients of A. If a solution exists, this process is relatively straightforward. <p> If a solution exists, this process is relatively straightforward. The difficulties|and the subtleties employed by practitioners| arise where noisy or incomplete data are involved, or where efficiency is an issue. See <ref> [1, 2] </ref> for some examples. In nonlinear systems, sid is vastly more difficult. Because linear signal processing methods like ffts do not apply, we must fall back on regression, and nonlinear regression landscapes typically exhibit local extrema that can trap numerical methods.
Reference: [2] <author> L. Ljung, </author> <title> editor. System Identification: Theory for the User. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1987. </year>
Reference-contexts: If a solution exists, this process is relatively straightforward. The difficulties|and the subtleties employed by practitioners| arise where noisy or incomplete data are involved, or where efficiency is an issue. See <ref> [1, 2] </ref> for some examples. In nonlinear systems, sid is vastly more difficult. Because linear signal processing methods like ffts do not apply, we must fall back on regression, and nonlinear regression landscapes typically exhibit local extrema that can trap numerical methods.
Reference: [3] <author> R. Horst, P. Pardalos, and N. Thoai. </author> <title> Introduction to Global Optimization, volume 3 of Nonconvex Optimization and its Applications. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Dordrecht, Germany, </address> <year> 1995. </year>
Reference-contexts: Because linear signal processing methods like ffts do not apply, we must fall back on regression, and nonlinear regression landscapes typically exhibit local extrema that can trap numerical methods. Finding the optimal solution in such landscapes is the difficult problem addressed by global optimization research <ref> [3, 4] </ref>. This paper contributes to this body of work by presenting a new, highly effective global optimization method|constructed using a combination of qualitative reasoning (qr) and local optimization techniques|for the nonlinear problems encountered in sid. <p> The harder problem of finding global solutions to nonlinear optimization problems is being addressed by a number of researchers, including [32]. Two books on this topic are [4] and <ref> [3] </ref>, the first of which is primarily about general continuous nonlinear problems, and the second of which addresses special cases such as concave problems and network problems. 12 7 Conclusion This paper describes the construction of an nper (nonlinear parameter estimation reasoner) that solves a global optimization problem by augmenting a
Reference: [4] <author> A. Torn and A. Zilinskas. </author> <title> Global Optimization. </title> <booktitle> Number 350 in Lecture Notes in Computer Science. </booktitle> <publisher> Springer Verlag, </publisher> <address> Berlin, </address> <year> 1989. </year>
Reference-contexts: Because linear signal processing methods like ffts do not apply, we must fall back on regression, and nonlinear regression landscapes typically exhibit local extrema that can trap numerical methods. Finding the optimal solution in such landscapes is the difficult problem addressed by global optimization research <ref> [3, 4] </ref>. This paper contributes to this body of work by presenting a new, highly effective global optimization method|constructed using a combination of qualitative reasoning (qr) and local optimization techniques|for the nonlinear problems encountered in sid. <p> Quality software for solving the unconstrained nls problem is available from packages such as odrpack [7, 8], minpack [30] and nl2sol [31]. The harder problem of finding global solutions to nonlinear optimization problems is being addressed by a number of researchers, including [32]. Two books on this topic are <ref> [4] </ref> and [3], the first of which is primarily about general continuous nonlinear problems, and the second of which addresses special cases such as concave problems and network problems. 12 7 Conclusion This paper describes the construction of an nper (nonlinear parameter estimation reasoner) that solves a global optimization problem by
Reference: [5] <author> E. Bradley and R. Stolle. </author> <title> Automatic construction of accurate models of physical systems. </title> <journal> Annals of Mathematics and Artificial Intelligence, </journal> <volume> 17 </volume> <pages> 1-28, </pages> <year> 1996. </year>
Reference-contexts: This paper contributes to this body of work by presenting a new, highly effective global optimization method|constructed using a combination of qualitative reasoning (qr) and local optimization techniques|for the nonlinear problems encountered in sid. The context within which we apply these ideas is the computer program pret <ref> [5] </ref>, which automates the sid process diagrammed in Figure 1 by building an artificial intelligence (ai) layer on top of a set of traditional sid techniques. This ai layer automates the high-level stages of the identification process that are normally performed by a human expert. <p> It is written in scheme [9] and maple [10]; its implementation is a hybridization of traditional numerical analysis methods, such as nonlinear regression, with qr and logic programming. of the syntax are covered elsewhere <ref> [11, 5] </ref>; briefly, the bulk of the user's input consists of three types of information about the target system: hypotheses, observations, and specifications. The first are ode fragments from which pret constructs the model and the third prescribe resolutions to which that model must adhere.
Reference: [6] <author> R. M. Stolle and E. Bradley. </author> <title> Multimodal reasoning for automatic model construction. </title> <booktitle> In Proceedings AAAI-98, </booktitle> <year> 1998. </year>
Reference-contexts: This ai layer automates the high-level stages of the identification process that are normally performed by a human expert. In particular, several forms of qr are combined in a custom logic system <ref> [6] </ref> to perform structural identification, assembling a combination of user-specified 1 The natural frequencies, which appear as spikes on the impulse response, yield its eigenvalues; the off-diagonal elements can be determined via a residual analysis of the mode shapes between those spikes. 2 and automatically generated model fragments into nonlinear ode <p> To construct an ode model from this information, pret employs a special logic engine <ref> [6] </ref> to combine powerful mathematical formalisms, such as the link between the divergence of an ode (r f ) and the friction of the system that it describes, with domain-specific notions, such as force balances in mechanical systems, in order to: 1. build ode models from the user's hypotheses; 2. check <p> For example, consider a trial model, a second-order linear ode, being matched against a system whose sensor observations contain an oscillation. The outer 8 layers of pret recognize this oscillation using geometric reasoning [12]; the logic system <ref> [6] </ref> then infers that the two roots of the model's characteristic polynomial must be complex.
Reference: [7] <author> P. T. Boggs, R. H. Byrd, J. E. Rogers, and R. B. Schnabel. </author> <title> User's reference guide for odrpack | software for weighted orthogonal distance regression. </title> <type> Internal Report 4103, </type> <institution> National Institute of Standards and Technology, Gaithersburg, MD 20899, </institution> <year> 1991. </year>
Reference-contexts: The method that lies at the core of the nper is odrpack <ref> [7, 8] </ref>, a robust nonlinear least-squares solver. Around this core is built a layer of qr techniques that allow pret to automatically interact with and exploit odrpack's unique and powerful features. <p> In our analysis, we fit the observed data to a series generated by a numerical ode integration procedure that takes the definition of an ode and produces a time-series approximation to its solution. We use the nls procedure provided by odrpack <ref> [7, 8] </ref>, an efficient and stable trust region Levenberg-Marquardt code, to estimate the coefficients fi and initial conditions Y 0 that complete the definition of the ode. The ode integration routine we use, ddebdf from the package depac [14], is robust and suitable for the odes we encounter. <p> Finally, nonlinear optimization is addressed in a variety of books, including [27], [28], and [29]. Quality software for solving the unconstrained nls problem is available from packages such as odrpack <ref> [7, 8] </ref>, minpack [30] and nl2sol [31]. The harder problem of finding global solutions to nonlinear optimization problems is being addressed by a number of researchers, including [32].
Reference: [8] <author> P. T. Boggs, R. H. Byrd, and R. B. Schnabel. </author> <title> A stable and efficient algorithm for nonlinear orthogonal distance regression. </title> <journal> SIAM Journal of Scientific and Statistical Computing, </journal> <volume> 8(6) </volume> <pages> 1052-1078, </pages> <year> 1987. </year>
Reference-contexts: The method that lies at the core of the nper is odrpack <ref> [7, 8] </ref>, a robust nonlinear least-squares solver. Around this core is built a layer of qr techniques that allow pret to automatically interact with and exploit odrpack's unique and powerful features. <p> In our analysis, we fit the observed data to a series generated by a numerical ode integration procedure that takes the definition of an ode and produces a time-series approximation to its solution. We use the nls procedure provided by odrpack <ref> [7, 8] </ref>, an efficient and stable trust region Levenberg-Marquardt code, to estimate the coefficients fi and initial conditions Y 0 that complete the definition of the ode. The ode integration routine we use, ddebdf from the package depac [14], is robust and suitable for the odes we encounter. <p> Finally, nonlinear optimization is addressed in a variety of books, including [27], [28], and [29]. Quality software for solving the unconstrained nls problem is available from packages such as odrpack <ref> [7, 8] </ref>, minpack [30] and nl2sol [31]. The harder problem of finding global solutions to nonlinear optimization problems is being addressed by a number of researchers, including [32].
Reference: [9] <editor> J. Rees and W. Clinger. </editor> <title> The revised 3 report on the algorithmic language Scheme. </title> <journal> ACM SIGPLAN Notices, </journal> <volume> 21:37, </volume> <year> 1986. </year>
Reference-contexts: It is written in scheme <ref> [9] </ref> and maple [10]; its implementation is a hybridization of traditional numerical analysis methods, such as nonlinear regression, with qr and logic programming. of the syntax are covered elsewhere [11, 5]; briefly, the bulk of the user's input consists of three types of information about the target system: hypotheses, observations, and
Reference: [10] <author> B. W. Char, K. O. Geddes, G. H. Gonnet, B. L. Leong, M. B. Monagan, and S. M. Watt. </author> <title> Maple V Language Reference Manual. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1991. </year>
Reference-contexts: It is written in scheme [9] and maple <ref> [10] </ref>; its implementation is a hybridization of traditional numerical analysis methods, such as nonlinear regression, with qr and logic programming. of the syntax are covered elsewhere [11, 5]; briefly, the bulk of the user's input consists of three types of information about the target system: hypotheses, observations, and specifications.
Reference: [11] <author> E. Bradley. </author> <title> Automatic construction of accurate models of physical systems. </title> <booktitle> In Proceedings of the 8th International Workshop on Qualitative Reasoning about Physical Systems, </booktitle> <address> Nara, Japan, </address> <year> 1994. </year>
Reference-contexts: It is written in scheme [9] and maple [10]; its implementation is a hybridization of traditional numerical analysis methods, such as nonlinear regression, with qr and logic programming. of the syntax are covered elsewhere <ref> [11, 5] </ref>; briefly, the bulk of the user's input consists of three types of information about the target system: hypotheses, observations, and specifications. The first are ode fragments from which pret constructs the model and the third prescribe resolutions to which that model must adhere.
Reference: [12] <author> E. Bradley and M. Easley. </author> <title> Reasoning about sensor data for automated system identification. </title> <booktitle> In Proceedings of the 2nd International Symposium on Intelligent Data Analysis (IDA-97), </booktitle> <year> 1997. </year> <note> Also to appear in Intelligent Data Analysis. </note>
Reference-contexts: system that it describes, with domain-specific notions, such as force balances in mechanical systems, in order to: 1. build ode models from the user's hypotheses; 2. check those models against the observations; 3. manipulate actuators and interpret the resulting sensor data to verify or augment observations of the system structure <ref> [12] </ref>; 4. and, if the user's input is inadequate, to * synthesize hypotheses from power-series expansions [13], and * infer unobserved internal state variables using time-series embedding theory [12]. <p> models against the observations; 3. manipulate actuators and interpret the resulting sensor data to verify or augment observations of the system structure <ref> [12] </ref>; 4. and, if the user's input is inadequate, to * synthesize hypotheses from power-series expansions [13], and * infer unobserved internal state variables using time-series embedding theory [12]. Effective qr-guided parameter estimation, the focus of this paper and the goal of the methods described in the next section, is one element in step 2. <p> Expanding pret's repertoire of qualitative observer theory techniques is a primary thrust in our current research efforts <ref> [12, 13] </ref>. Two forms of reasoning help the nper solve parts of the observer problem, allowing it to compute values for the qr-adapted nls solver's Y 0 arguments: divided differencing and symbolic algebra. <p> For example, consider a trial model, a second-order linear ode, being matched against a system whose sensor observations contain an oscillation. The outer 8 layers of pret recognize this oscillation using geometric reasoning <ref> [12] </ref>; the logic system [6] then infers that the two roots of the model's characteristic polynomial must be complex.
Reference: [13] <author> E. Bradley, M. Easley, and A. Hogan. </author> <title> Qualitative observer theory. In process. </title>
Reference-contexts: to: 1. build ode models from the user's hypotheses; 2. check those models against the observations; 3. manipulate actuators and interpret the resulting sensor data to verify or augment observations of the system structure [12]; 4. and, if the user's input is inadequate, to * synthesize hypotheses from power-series expansions <ref> [13] </ref>, and * infer unobserved internal state variables using time-series embedding theory [12]. Effective qr-guided parameter estimation, the focus of this paper and the goal of the methods described in the next section, is one element in step 2. <p> Expanding pret's repertoire of qualitative observer theory techniques is a primary thrust in our current research efforts <ref> [12, 13] </ref>. Two forms of reasoning help the nper solve parts of the observer problem, allowing it to compute values for the qr-adapted nls solver's Y 0 arguments: divided differencing and symbolic algebra.
Reference: [14] <author> L. F. Shampine and H. A. Watts. </author> <title> depac | design of a user oriented package of ODE solvers. </title> <type> Technical Report SAND79-2374, </type> <institution> Sandia National Laboratories, </institution> <year> 1979. </year> <month> 14 </month>
Reference-contexts: We use the nls procedure provided by odrpack [7, 8], an efficient and stable trust region Levenberg-Marquardt code, to estimate the coefficients fi and initial conditions Y 0 that complete the definition of the ode. The ode integration routine we use, ddebdf from the package depac <ref> [14] </ref>, is robust and suitable for the odes we encounter. Most nls procedures, including odrpack, solve a sequence of Taylor-series approximations to a nonlinear model.
Reference: [15] <author> A. C. Capelo, L. Ironi, and S. Tentoni. </author> <title> The need for qualitative reasoning in automated modeling: A case study. </title> <editor> In Y. I. and Adam Farquhar, editors, </editor> <booktitle> Proceedings of the 10th International Workshop on Qualitative Reasoning, </booktitle> <pages> pages 32-39, </pages> <address> Stanford Sierra Camp, CA, </address> <year> 1996. </year> <note> Also published as AAAI Technical Report WS-96-01. </note>
Reference-contexts: Because pret is designed for both linear and nonlinear ode models, we cannot set ~ 0 by employing the techniques in <ref> [15] </ref>. However, we have been able to use qr to construct a robust strategy for obtaining the best possible solution for a given data set and a specific ode model. <p> The parameter estimation phase of the modeling process has also received attention in a variety of fields. This includes control theory's work on Kalman filtering [25], an interesting AI tool [26] that uses dynamics to improve the estimation process, and lately, research by the qr community <ref> [15] </ref>. pret's nper is most closely related to the work of the qr community.
Reference: [16] <author> P. Langley, H. A. Simon, G. L. Bradshaw, and J. M. Zytkow, </author> <title> editors. Scientific Discovery: Computational Explorations of the Creative Process. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1987. </year>
Reference-contexts: Modeling research spans many fields, from the cognitive science-related branch of ai <ref> [16] </ref> through design engineering [17], nonlinear dynamics [18], and control theory [19] to the qualitative reasoning community [20].
Reference: [17] <author> D. L. Smith. </author> <title> Introduction to Dynamic System Modeling for Design. </title> <publisher> Prentice-Hall, </publisher> <year> 1994. </year>
Reference-contexts: Modeling research spans many fields, from the cognitive science-related branch of ai [16] through design engineering <ref> [17] </ref>, nonlinear dynamics [18], and control theory [19] to the qualitative reasoning community [20].
Reference: [18] <author> H. D. I. Abarbanel. </author> <title> Analysis of Observed Chaotic Data. </title> <publisher> Springer, </publisher> <year> 1995. </year>
Reference-contexts: Modeling research spans many fields, from the cognitive science-related branch of ai [16] through design engineering [17], nonlinear dynamics <ref> [18] </ref>, and control theory [19] to the qualitative reasoning community [20].
Reference: [19] <author> K. J. Astrom and P. Eykhoff. </author> <title> System identification | a survey. </title> <journal> Automatica, </journal> <volume> 7 </volume> <pages> 123-167, </pages> <year> 1971. </year>
Reference-contexts: Modeling research spans many fields, from the cognitive science-related branch of ai [16] through design engineering [17], nonlinear dynamics [18], and control theory <ref> [19] </ref> to the qualitative reasoning community [20]. The spectrum ranges from models and tools that use a language that is very close to the physics of the system (e.g., qpt/qpe [21, 22]) to models that use a language that is well suited to describe the system mathematically (e.g., odes).
Reference: [20] <author> D. G. Bobrow, </author> <title> editor. Qualitative Reasoning about Physical Systems. </title> <publisher> MIT Press, </publisher> <address> Cambridge MA, </address> <year> 1985. </year>
Reference-contexts: Modeling research spans many fields, from the cognitive science-related branch of ai [16] through design engineering [17], nonlinear dynamics [18], and control theory [19] to the qualitative reasoning community <ref> [20] </ref>. The spectrum ranges from models and tools that use a language that is very close to the physics of the system (e.g., qpt/qpe [21, 22]) to models that use a language that is well suited to describe the system mathematically (e.g., odes).
Reference: [21] <author> K. D. Forbus. </author> <title> Qualitative process theory. </title> <journal> Artificial Intelligence, </journal> <volume> 24 </volume> <pages> 85-168, </pages> <year> 1984. </year>
Reference-contexts: The spectrum ranges from models and tools that use a language that is very close to the physics of the system (e.g., qpt/qpe <ref> [21, 22] </ref>) to models that use a language that is well suited to describe the system mathematically (e.g., odes).
Reference: [22] <author> K. D. Forbus. </author> <title> The qualitative process engine. </title> <editor> In D. S. Weld and J. de Kleer, editors, </editor> <title> Readings in Qualitative Reasoning About Physical Systems. </title> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo CA, </address> <year> 1990. </year>
Reference-contexts: The spectrum ranges from models and tools that use a language that is very close to the physics of the system (e.g., qpt/qpe <ref> [21, 22] </ref>) to models that use a language that is well suited to describe the system mathematically (e.g., odes).
Reference: [23] <author> A. Farquhar and G. Brajnik. </author> <title> A semi-quantitative physics compiler. </title> <booktitle> In Proceedings of the 8th International Workshop on Qualitative Reasoning about Physical Systems, </booktitle> <address> Nara, Japan, </address> <year> 1994. </year>
Reference-contexts: The spectrum ranges from models and tools that use a language that is very close to the physics of the system (e.g., qpt/qpe [21, 22]) to models that use a language that is well suited to describe the system mathematically (e.g., odes). Like many other projects, for example <ref> [23, 24] </ref>, pret aims to integrate quantitative and qualitative information; unlike other qr modeling tools, it takes a practical engineering approach: it works with noisy, incomplete sensor data from partially observable real-world systems, and its aim is not to "discover" the underlying physics, but rather to find the simplest ode that
Reference: [24] <author> B. C. Williams. </author> <title> A theory of interactions: Unifying qualitative and quantitative algebraic reasoning. </title> <journal> Artificial Intelligence, </journal> <volume> 51, </volume> <year> 1991. </year>
Reference-contexts: The spectrum ranges from models and tools that use a language that is very close to the physics of the system (e.g., qpt/qpe [21, 22]) to models that use a language that is well suited to describe the system mathematically (e.g., odes). Like many other projects, for example <ref> [23, 24] </ref>, pret aims to integrate quantitative and qualitative information; unlike other qr modeling tools, it takes a practical engineering approach: it works with noisy, incomplete sensor data from partially observable real-world systems, and its aim is not to "discover" the underlying physics, but rather to find the simplest ode that
Reference: [25] <author> R. E. </author> <title> Kalman. A new approach to filtering and prediction problems. </title> <journal> J. Basic Eng., </journal> <volume> 82D:35-45, </volume> <year> 1960. </year>
Reference-contexts: The parameter estimation phase of the modeling process has also received attention in a variety of fields. This includes control theory's work on Kalman filtering <ref> [25] </ref>, an interesting AI tool [26] that uses dynamics to improve the estimation process, and lately, research by the qr community [15]. pret's nper is most closely related to the work of the qr community.
Reference: [26] <author> E. Hung. </author> <title> Parameter estimation in chaotic systems. </title> <type> Technical Report AIM 1541, </type> <institution> MIT Artificial Intelligence Lab, </institution> <month> May </month> <year> 1995. </year>
Reference-contexts: The parameter estimation phase of the modeling process has also received attention in a variety of fields. This includes control theory's work on Kalman filtering [25], an interesting AI tool <ref> [26] </ref> that uses dynamics to improve the estimation process, and lately, research by the qr community [15]. pret's nper is most closely related to the work of the qr community.
Reference: [27] <author> J. E. Dennis and R. B. Schnabel. </author> <title> Numerical Methods for Unconstrained Optimization and Nonlinear Equations. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1983. </year>
Reference-contexts: Finally, nonlinear optimization is addressed in a variety of books, including <ref> [27] </ref>, [28], and [29]. Quality software for solving the unconstrained nls problem is available from packages such as odrpack [7, 8], minpack [30] and nl2sol [31]. The harder problem of finding global solutions to nonlinear optimization problems is being addressed by a number of researchers, including [32].
Reference: [28] <author> R. Fletcher. </author> <title> Practical Methods of Optimization. </title> <publisher> John Wiley and Sons, </publisher> <address> second edition, </address> <year> 1987. </year>
Reference-contexts: Finally, nonlinear optimization is addressed in a variety of books, including [27], <ref> [28] </ref>, and [29]. Quality software for solving the unconstrained nls problem is available from packages such as odrpack [7, 8], minpack [30] and nl2sol [31]. The harder problem of finding global solutions to nonlinear optimization problems is being addressed by a number of researchers, including [32].
Reference: [29] <author> P. E. Gill, W. Murray, and M. H. Wright. </author> <title> Practical Optimization. </title> <publisher> Academic Press, Inc., </publisher> <address> Boston, </address> <year> 1981. </year>
Reference-contexts: Finally, nonlinear optimization is addressed in a variety of books, including [27], [28], and <ref> [29] </ref>. Quality software for solving the unconstrained nls problem is available from packages such as odrpack [7, 8], minpack [30] and nl2sol [31]. The harder problem of finding global solutions to nonlinear optimization problems is being addressed by a number of researchers, including [32].
Reference: [30] <author> J. J. More, D. C. Sorensen, K. E. Hillstrom, and B. S. Garbow. </author> <title> Sources and Development of Mathematical Software, </title> <editor> W. J. Cowell, ed., </editor> <title> chapter The minpack project. </title> <publisher> Prentice-Hall, </publisher> <year> 1984. </year>
Reference-contexts: Finally, nonlinear optimization is addressed in a variety of books, including [27], [28], and [29]. Quality software for solving the unconstrained nls problem is available from packages such as odrpack [7, 8], minpack <ref> [30] </ref> and nl2sol [31]. The harder problem of finding global solutions to nonlinear optimization problems is being addressed by a number of researchers, including [32].
Reference: [31] <author> J. E. Dennis, D. M. Gay, and R. E. Welsch. </author> <title> An adaptive nonlinear least-squares algorithm. </title> <journal> ACM Transactions on Mathematical Software, </journal> <volume> 7(3) </volume> <pages> 348-368, </pages> <year> 1981. </year>
Reference-contexts: Finally, nonlinear optimization is addressed in a variety of books, including [27], [28], and [29]. Quality software for solving the unconstrained nls problem is available from packages such as odrpack [7, 8], minpack [30] and nl2sol <ref> [31] </ref>. The harder problem of finding global solutions to nonlinear optimization problems is being addressed by a number of researchers, including [32].

References-found: 31

