URL: http://pertsserver.cs.uiuc.edu/papers/Feng96.ps.gz
Refering-URL: http://pertsserver.cs.uiuc.edu/papers/
Root-URL: http://www.cs.uiuc.edu
Title: c  
Author: flCopyright by Wu-chun Feng 
Date: 1996  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> P. T. Brady. </author> <title> A statistical analysis of on-off patterns in 16 conversations. </title> <journal> The Bell System Technical Journal, </journal> <month> January </month> <year> 1968. </year>
Reference-contexts: Traffic sources periodically transmit video information at a rate of 30 fps, or 1 frame every 1/30 second (s), during its active interval. The length of this interval obviously depends on the size of the current frame. Table 3.2 shows the parameters for our statistical telephone sources <ref> [1] </ref>. The active interval is the interval of time where someone is speaking and producing samples at a rate of 64 kbps. 31 Similarly, the silent interval is the interval of time where no one is speaking. <p> Exponential distributions characterize the active and silent intervals; and to accurately reflect the data from <ref> [1] </ref>, the shifted value shown in Table 3.2 is added to the random value taken from the exponential distribution. Parameter Value Average Bit Rate 25.175 kbps Active Interval Length Exponentially distributed. Mean: 1.187 s. Shifted: 10 ms Active Interval Bit Rate 64 kbps Silent Interval Length Exponentially distributed. <p> Our algorithms work with the transformed parameters m i1 and o i1 , not the corresponding given parameters. The allowed range of the fraction of discarded work F i1 , based on the computed value o i1 is <ref> [0; 1] </ref>. Adopting the straight-line segments with finite slopes in this range, we have the 125 following approximate extension functions: H i (F i ) = XF i1 where X and Y are the values defined in Figure 4.8. Hence, h i = X and k i = Y .
Reference: [2] <author> CCITT Recommendation H.261. Rm8, </author> <year> 1988. </year>
Reference-contexts: The optional packets carry the extra-quality portion, which is the additional information needed to upgrade the reduced-service quality to full-service quality. Such a partitioning of packets can 23 be achieved by using layered coding [42, 45, 48], H.261 video coding <ref> [2, 27] </ref>, or MPEG-I video coding [20, 34]. For instance, bit-plane separation [42] is a layered coding scheme used for voice coding. The most significant bits of a quantized speech sample are the basic-quality portion of the sample, and the least significant bits are the extra-quality portion. <p> A video frame is filtered into a low-frequency band and a high-frequency band. The low-frequency band is the basic-quality portion of the frame, and the high-frequency band is the extra-quality portion. Other kinds of layered coding schemes include combined bit-plane-frequency separation and feature-plane separation. The H.261 standard <ref> [2, 27] </ref> encodes video into a hierarchical block structure consisting of pictures, groups of (macro)blocks (GOBs), macroblocks (MBs), and blocks. A MB contains four 8x8 luminance (Y) blocks and two 8x8 chrominance (C B and C R ) blocks. A GOB consists of 3x11 MBs. <p> Mbps (p = 30) Frame Rate 30 fps Frame Period 33.3 ms Active Interval Length Uniformly distributed in [5,23.444] ms Active Interval Bit Rate 3 Mbps Table 3.1: Model of a Video-Telephone Traffic Source The parameters in Table 3.1 are also the same as those given in the H.261 standard <ref> [2] </ref>. Traffic sources periodically transmit video information at a rate of 30 fps, or 1 frame every 1/30 second (s), during its active interval. The length of this interval obviously depends on the size of the current frame. Table 3.2 shows the parameters for our statistical telephone sources [1].
Reference: [3] <author> CCITT Recommendation I.121. </author> <title> Broadband aspects of ISDN, </title> <year> 1988. </year>
Reference-contexts: Thus, general observations based on specific, analytical models are tenuous at best. 20 Chapter 3 An Application of the Imprecise-Computation Model This chapter describes an application of the imprecise-computation technique. Specifically, the technique is used to control congestion in an ATM network. ATM <ref> [3] </ref> is a connection-oriented technique where streams of traffic (e.g., video, voice, and data) are decomposed into packets for transmission over their respective virtual circuits.
Reference: [4] <author> CCITT Recommendation I.361. </author> <title> B-ISDN ATM layer specification, </title> <year> 1991. </year>
Reference-contexts: The two real-time sub-buffers store packets from two different types of real-time traffic while the non-real-time sub-buffer only stores non-real-time packets. The transmission circuits deliver packets, one at a time, down the output link at a transmission bit rate of 149.760 Mbps, in accordance with the ATM standard <ref> [4, 5] </ref>. This bandwidth yields a cell transmission time of 2.831 s. When the overhead from the cell header is accounted for, the actual available bandwidth is 135.632 Mbps.
Reference: [5] <author> CCITT Recommendation I.432. </author> <title> B-ISDN user-network interface physical layer specification, </title> <year> 1988. </year>
Reference-contexts: The two real-time sub-buffers store packets from two different types of real-time traffic while the non-real-time sub-buffer only stores non-real-time packets. The transmission circuits deliver packets, one at a time, down the output link at a transmission bit rate of 149.760 Mbps, in accordance with the ATM standard <ref> [4, 5] </ref>. This bandwidth yields a cell transmission time of 2.831 s. When the overhead from the cell header is accounted for, the actual available bandwidth is 135.632 Mbps.
Reference: [6] <author> H. J. Chao and N. Uzun. </author> <title> A vlsi sequencer chip for atm traffic shaper and queue manager. </title> <journal> IEEE Journal on Solid-State Circuits, </journal> <pages> pages 1634-1643, </pages> <month> November </month> <year> 1992. </year>
Reference-contexts: To ensure that the non-real-time sub-buffer did not starve, we implemented a periodic server which provided non-real-time packets with higher transmission priority over 10% of the available bandwidth. This proposed 130 congestion-control scheme can be implemented by the architectures in <ref> [6] </ref> using the Sequencer chip. The results of our experiments demonstrated that our congestion-control scheme is effective in handling congestion. The degree to which congestion was handled depended strongly on the traffic profile of the video sources: overall traffic distribution, imprecision ratio, absolute frame size, and video-playback sequence.
Reference: [7] <author> I. K. Cheong. </author> <title> Scheduling imprecise hard real-time jobs with cumulative error. </title> <type> Technical Report UIUCDCS-R-92-1758, </type> <institution> Department of Computer Science, University of Illinois at Urbana-Champaign, </institution> <month> June </month> <year> 1992. </year>
Reference-contexts: By definition, we say that a real-time system is predictable if it can guarantee an acceptable result under all operating conditions. The imprecise-computation model used in previous studies <ref> [7, 9, 10, 22-26, 31, 38, 39, 41, 49] </ref> assumes that the quality of a task's result depends solely on the time spent by the task to produce the result. Specifically, the input of each task is free of error. <p> The ensuing sections examine related work in the areas of error modelling for imprecise computation, anytime algorithms, real-time packet scheduling, and congestion control. 2.1 Imprecise-Computation Model The imprecise-computation model used in previous studies <ref> [7, 9, 10, 22-26, 31, 38, 39, 41, 49] </ref> characterizes the workload on a real-time system as a set of tasks T = fT 1 ; T 2 ; : : : ; T q g. A task is a basic unit of work to be scheduled and executed. <p> In previous studies on imprecise computation, the output error E i in the result of T i is assumed to be a function of the amount of discarded work. Most existing algorithms <ref> [7, 9, 10, 22-26, 31, 38, 39, 41, 49] </ref> for scheduling tasks with optional parts assume that the tasks are monotone. Figure 2.1 shows an example where the solid curve shows a general error function of a monotone task. <p> The chapter then analyzes the effects of these extensions and demonstrates their applicability to several real-time applications. 2.2 Error Modelling for Imprecise Computation Cheong <ref> [7] </ref> studied different types of output-error accumulation on periodic jobs: error-noncumulative, limitedly-cumulative error, and error-cumulative. A periodic job is defined to be a sequence of identical tasks that becomes available and ready for execution periodically. For an error-non-cumulative job, the output error does not accumulate across the sequence of tasks. <p> For an error-cumulative job, the error generated by not completing an optional task has a cumulative effect on the results generated by tasks later in the periodic job. The example that Cheong <ref> [7] </ref> uses for illustration is a periodic job in which each task receives sensor signals from a tracked target and produces estimates of the target's position, velocity, and acceleration. When a task is unable to complete its optional part, it produces approximate estimates of the position, velocity, and acceleration.
Reference: [8] <author> R. Chipalkatti, J. F. Kurose, and D. Towsley. </author> <title> Scheduling policies for real-time and non-real-time traffic in a statistical multiplexer. </title> <booktitle> In Proceedings of IEEE INFOCOM, </booktitle> <month> April </month> <year> 1989. </year>
Reference-contexts: Many real-time applications provide only high-level timing constraints and leave the assignment of the lower-level timing constraints to the scheduler. Since the late 1980s, the area of ATM congestion control over a distributed B-ISDN network has received considerable attention <ref> [8, 15-18, 36, 37, 43] </ref>. This type of network must support both real-time and non-real-time communication services. <p> problem is not considered here since the real-time systems community in general assumes that resource requirements are known at run-time. 2.4 Real-Time Packet Scheduling The congestion-control scheme based on the imprecise-computation technique evaluated in Chapter 3 makes use of the queue-length threshold (QLT) policy proposed by Chipalkatti, Kurose, and Towsley <ref> [8] </ref>. QLT is one of the many policies that the authors propose for scheduling real-time and non-real-time traffic over a statistical multiplexer; others are first-come, first-serve (FCFS); static, real-time priority (SRTP) which gives priority to the real-time traffic; and minimum-laxity threshold (MLT). <p> Their study shows that MLT and QLT perform similarly and that both perform better than SRTP. QLT is more practical because of its ease of implementation. While the emphasis of Chipalkatti, Kurose, and Towsley <ref> [8] </ref> is in trading off real-time packet loss for non-real-time packet delay (i.e., interservice tradeoff), we make the observation than many real-time services can trade service quality for information timeliness (i.e., intraservice tradeoff). <p> Because real-time packets are considered high priority and non-real-time packets are low priority, as in <ref> [8] </ref>, their proposed service discipline is an enhanced version of the QLT strategy. Tassiulas, Hung, and Panwar [43] study the problem of optimal, buffer-space, priority control in an ATM network node. They examine three well-known, congestion-control policies: cell discarding, pushout, and expelling. <p> Tassiulas, Hung, and Panwar [43] study the problem of optimal, buffer-space, priority control in an ATM network node. They examine three well-known, congestion-control policies: cell discarding, pushout, and expelling. They optimize the policies with respect to packet loss, using a FCFS scheduling policy (which was shown by <ref> [8] </ref> to cause high losses for real-time traffic while providing low delays for non-real-time traffic). The issues of real-time constraints and non-real-time throughput are not addressed. Furthermore, their video-traffic sources are based on a statistical model.
Reference: [9] <author> E. K. P. Chong and W. Zhao. </author> <title> Performance evaluation of scheduling algorithms for im-precise computer systems. </title> <type> Technical Report SA-5001, </type> <institution> Department of Computer Science, University of Adelaide, </institution> <month> September </month> <year> 1988. </year>
Reference-contexts: By definition, we say that a real-time system is predictable if it can guarantee an acceptable result under all operating conditions. The imprecise-computation model used in previous studies <ref> [7, 9, 10, 22-26, 31, 38, 39, 41, 49] </ref> assumes that the quality of a task's result depends solely on the time spent by the task to produce the result. Specifically, the input of each task is free of error. <p> The ensuing sections examine related work in the areas of error modelling for imprecise computation, anytime algorithms, real-time packet scheduling, and congestion control. 2.1 Imprecise-Computation Model The imprecise-computation model used in previous studies <ref> [7, 9, 10, 22-26, 31, 38, 39, 41, 49] </ref> characterizes the workload on a real-time system as a set of tasks T = fT 1 ; T 2 ; : : : ; T q g. A task is a basic unit of work to be scheduled and executed. <p> In previous studies on imprecise computation, the output error E i in the result of T i is assumed to be a function of the amount of discarded work. Most existing algorithms <ref> [7, 9, 10, 22-26, 31, 38, 39, 41, 49] </ref> for scheduling tasks with optional parts assume that the tasks are monotone. Figure 2.1 shows an example where the solid curve shows a general error function of a monotone task.
Reference: [10] <author> J.-Y. Chung, J. W.-S. Liu, and K.-J. Lin. </author> <title> Scheduling periodic jobs that allow imprecise results. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 19(9) </volume> <pages> 1156-1173, </pages> <month> September </month> <year> 1990. </year>
Reference-contexts: By definition, we say that a real-time system is predictable if it can guarantee an acceptable result under all operating conditions. The imprecise-computation model used in previous studies <ref> [7, 9, 10, 22-26, 31, 38, 39, 41, 49] </ref> assumes that the quality of a task's result depends solely on the time spent by the task to produce the result. Specifically, the input of each task is free of error. <p> The ensuing sections examine related work in the areas of error modelling for imprecise computation, anytime algorithms, real-time packet scheduling, and congestion control. 2.1 Imprecise-Computation Model The imprecise-computation model used in previous studies <ref> [7, 9, 10, 22-26, 31, 38, 39, 41, 49] </ref> characterizes the workload on a real-time system as a set of tasks T = fT 1 ; T 2 ; : : : ; T q g. A task is a basic unit of work to be scheduled and executed. <p> In previous studies on imprecise computation, the output error E i in the result of T i is assumed to be a function of the amount of discarded work. Most existing algorithms <ref> [7, 9, 10, 22-26, 31, 38, 39, 41, 49] </ref> for scheduling tasks with optional parts assume that the tasks are monotone. Figure 2.1 shows an example where the solid curve shows a general error function of a monotone task.
Reference: [11] <author> M. de Prycker. </author> <title> Asynchronous Transfer Mode: Solution for Broadband ISDN. </title> <publisher> Ellis Horwood Limited, </publisher> <year> 1991. </year>
Reference-contexts: Within each set of experiments, we run a base experiment with RD = (1; 2), I R = 1=1 except for MPEG-I where IR is video-dependent, %BW = 10%, and P = 10 ms. These parameters for the base experiments are based on <ref> [11, 13, 32] </ref>. For the statistical video-telephone and telephone sources, having a 1/1 imprecision ratio means that mandatory and optional packets are generated in the same proportion and in an interleaved manner. As mentioned earlier, the non-real-time data sources use an imprecision ratio of 1=0 and relative deadline of 1. <p> Relative Deadlines (1,2) ms Imprecision Ratio Video-dependent Reserved Bandwidth 10% Periodic Server Period 10 ms Congestion Thresholds f50, 300, 500, 800, 2000, 4000, 1g Table 3.8: Parameters for the Identical MPEG-I Base Experiment Based on the work of <ref> [11, 13,32,33] </ref>, we fix the parameters for this base experiment to those listed in Table 3.8. The only differences between this table and the one used for the H.261 base experiment (see Table 3.6) are in the imprecision ratio and congestion threshold.
Reference: [12] <author> T. Dean and M. Boddy. </author> <title> An analysis of time-dependent planning. </title> <booktitle> In Proceedings of AAAI, </booktitle> <pages> pages 49-54, </pages> <year> 1988. </year>
Reference-contexts: A year after the imprecise-computation model was first introduced, Dean and Boddy <ref> [12] </ref> proposed the use of anytime algorithms in the framework of time-dependent planning and decision-making. The execution of an anytime algorithm may 14 be interrupted at any point to return a result whose quality is a function of the execution time.
Reference: [13] <author> D. Ferrari. </author> <title> Client requirements for real-time communication services. </title> <type> Technical Report TR-90-007, </type> <institution> International Computer Science Institute, Berkeley, </institution> <month> March </month> <year> 1990. </year>
Reference-contexts: Within each set of experiments, we run a base experiment with RD = (1; 2), I R = 1=1 except for MPEG-I where IR is video-dependent, %BW = 10%, and P = 10 ms. These parameters for the base experiments are based on <ref> [11, 13, 32] </ref>. For the statistical video-telephone and telephone sources, having a 1/1 imprecision ratio means that mandatory and optional packets are generated in the same proportion and in an interleaved manner. As mentioned earlier, the non-real-time data sources use an imprecision ratio of 1=0 and relative deadline of 1.
Reference: [14] <author> E. A. Fox. </author> <title> Advance in interactive digital multimedia system. </title> <booktitle> IEEE Computer, </booktitle> <pages> pages 9-21, </pages> <month> October </month> <year> 1991. </year>
Reference-contexts: The frame rate and frame period are 30 frames per second (fps) and 33.3 milliseconds (ms), respectively. The picture sizes range from as small as 150fi150 pixels to 352fi240 pixels. Table 3.1 shows the parameters for our statistical H.261 video-telephone sources <ref> [14] </ref>. These parameters are similar to those adopted in [32, 33]; the only change is in the average bit rate. Rather than running medium-fidelity, video-telephone sources at 1.28 Mbps (pfi 64 kbps, where p = 20), we use higher-fidelity, video-telephone sources at 1.96 Mbps (p = 30).
Reference: [15] <author> T.-Y. Huang and J.-L. C. Wu. </author> <title> Performance analysis of atm switches using priority schemes. </title> <booktitle> In IEE Proceedings-Communications, </booktitle> <month> August </month> <year> 1994. </year>
Reference-contexts: This allows us to assign high priority to essential real-time packets and low priority to non-essential real-time packets. 18 The most recent work on congestion control over ATM networks includes the research of Huang and Wu <ref> [15] </ref> and Tassiulas, Hung, and Panwar [43]. Huang and Wu [15] propose a space-priority scheme which uses a combination of the pushout and partial-buffer sharing schemes on a single queue. <p> This allows us to assign high priority to essential real-time packets and low priority to non-essential real-time packets. 18 The most recent work on congestion control over ATM networks includes the research of Huang and Wu <ref> [15] </ref> and Tassiulas, Hung, and Panwar [43]. Huang and Wu [15] propose a space-priority scheme which uses a combination of the pushout and partial-buffer sharing schemes on a single queue.
Reference: [16] <author> J. M. Hyman, A. A. Lazar, and G. Pacifici. </author> <title> Real-time scheduling with quality of service constraints. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 9(7), </volume> <month> September </month> <year> 1991. </year>
Reference-contexts: Overall, as will be shown in Chapter 3, the imprecise-computation technique with queue-length thresholding on the real-time queue produces low packet loss and information timeliness for the real-time packets and no packet loss and good response time for the non-real-time packets. Hyman, Lazar, and Pacifici <ref> [16] </ref> study the effects of having multiple traffic classes (Class I: video, Class II: voice, Class III: data, and Class C: traffic of the network management system) in ATM networks. <p> The output system is the portion of the switching element containing one output buffer and its corresponding transmission circuits and output link. several previous studies, most notably in <ref> [16] </ref>. The difference between our output system and those used in previous studies is the addition of an imprecision filter. The imprecision filter is the component that implements our congestion-control scheme. The output buffer is split into three independent sub-buffers which share the same output link.
Reference: [17] <author> H. Kroner. </author> <title> Comparative performance study of space priority mechanisms for atm networks. </title> <booktitle> In Proceedings of the IEEE INFOCOM, </booktitle> <pages> pages 1136-1143, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: In contrast, much of the work on congestion control in ATM networks has pertained to constant bit rate (CBR). Existing congestion-control schemes typically employ space-priority schemes such as pushout and partial-buffer sharing <ref> [17, 18, 36, 37] </ref>. The pushout method simply decides which packet to pushout of the ATM switch buffer (i.e., queue) in order to make space for an incoming packet. When the queue is full (i.e., the buffer is saturated), incoming, lower priority packets are discarded.
Reference: [18] <author> H. Kroner, G. Hebuterne, P. Boyer, and A. Gravey. </author> <title> Priority management in atm switching nodes. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 9(3) </volume> <pages> 418-427, </pages> <month> April </month> <year> 1991. </year> <month> 136 </month>
Reference-contexts: In contrast, much of the work on congestion control in ATM networks has pertained to constant bit rate (CBR). Existing congestion-control schemes typically employ space-priority schemes such as pushout and partial-buffer sharing <ref> [17, 18, 36, 37] </ref>. The pushout method simply decides which packet to pushout of the ATM switch buffer (i.e., queue) in order to make space for an incoming packet. When the queue is full (i.e., the buffer is saturated), incoming, lower priority packets are discarded.
Reference: [19] <author> J. Kurose. </author> <title> On computing per-session performance bounds in high-speed multi-hop com-puter networks. </title> <booktitle> In Proceedings of ACM SIGMETRICS, </booktitle> <pages> pages 128-139, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: Consequently, end-to-end delay and delay jitter become excessive and noticeable only when the network is congested at a catastrophic level. However, such a situation should not occur if we couple our congestion-control scheme with a good connection-acceptance policy <ref> [19, 46, 47] </ref>. With respect to ATM, packets are fixed in size and are called cells. Figure 3.1 shows that a cell is 53 bytes in length and consists of a 5-byte header and a 48-byte information field. The header field contains information pertaining to the ATM-layer functionality.
Reference: [20] <author> D. Legall. </author> <title> Mpeg | a video compression standard for multimedia applications. </title> <journal> Communications of the ACM, </journal> <volume> 34(4) </volume> <pages> 47-58, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: The real-time packets which provide a minimum quality-of-service (QoS) are marked as mandatory packets while the real-time packets which enhance the minimum QoS are marked as optional. For example, the MPEG-I standard <ref> [20, 34] </ref> classifies frames into three types: intracoded (I), predicted (P), and bi-directionally interpolated (B). An I frame is a compressed version of an entire video frame. A P frame is encoded with respect to a past frame (either an I or P frame). <p> The optional packets carry the extra-quality portion, which is the additional information needed to upgrade the reduced-service quality to full-service quality. Such a partitioning of packets can 23 be achieved by using layered coding [42, 45, 48], H.261 video coding [2, 27], or MPEG-I video coding <ref> [20, 34] </ref>. For instance, bit-plane separation [42] is a layered coding scheme used for voice coding. The most significant bits of a quantized speech sample are the basic-quality portion of the sample, and the least significant bits are the extra-quality portion. <p> For example, when motion estimation is accurate within a given tolerance, the block data for the discrete cosine transform is optional. 24 Also, a MB in a GOB can be optional if it does not contain any information for that part of the picture. For the MPEG-I standard <ref> [20, 34] </ref>, video frames are classified as intracoded (I), predicted (P), or bi-directionally interpolated (B) frames. An I frame is a compressed version of an entire video frame. A P frame is encoded with respect to a past frame (either an I or P frame).
Reference: [21] <author> J. P. Lehoczky, L. Sha, and J. Strosnider. </author> <title> Enhancing aperiodic responsiveness in a hard-real-time environment. </title> <booktitle> In Proceedings of 8th IEEE Real-Time Systems Symposium, </booktitle> <pages> pages 261-270, </pages> <month> December </month> <year> 1987. </year>
Reference-contexts: Consequently, this simplified EDF algorithm can be implemented with negligible run-time overhead. The scheduler uses a non-preemptive FCFS algorithm to schedule non-real-time packets. In order to reduce the delay of these packets and hence ensure a reasonable response time, a periodic server <ref> [21] </ref> is used. A periodic server is defined by its period (P) and the percentage of bandwidth (% BW) that it reserves for non-real-time packets. <p> Although the buffers in a given switch may not be full, we consider the switching element to be congested if the combined number of packets in the two real-time sub-buffers exceeds its congestion threshold. The periodic server has two adjustable parameters: reserved bandwidth and period <ref> [21] </ref>. The reserved bandwidth of a periodic server, denoted by %BW , is the percentage of the link bit rate which is saved for non-real-time traffic (i.e., utilization of the periodic server). If the reserved bandwidth is unused, it may be claimed by the real-time traffic.
Reference: [22] <author> J. Y.-T. Leung, T. W. Tam, C. S. Wong, and G. H. Young. </author> <title> Minimizing mean flow time with error constraints. </title> <booktitle> In Proceedings of 10th IEEE Real-Time Systems Symposium, </booktitle> <pages> pages 2-11, </pages> <month> December </month> <year> 1989. </year>
Reference: [23] <author> J. Y.-T. Leung and C. S. Wong. </author> <title> Minimizing the number of late tasks with error constraints. </title> <booktitle> In Proceedings of 11th IEEE Real-Time Systems Symposium, </booktitle> <pages> pages 32-40, </pages> <month> December </month> <year> 1990. </year>
Reference: [24] <author> K.-J. Lin and S. Natarajan. </author> <title> Concord: A system of imprecise computations. </title> <booktitle> In Proceedings of the 1987 IEEE Compsac, </booktitle> <pages> pages 75-81, </pages> <month> October </month> <year> 1987. </year>
Reference: [25] <author> K.-J. Lin, S. Natarajan, and J. W.-S. Liu. </author> <title> Imprecise results: Utilizing partial computation in real-time systems. </title> <booktitle> In Proceedings of 8th IEEE Real-Time Systems Symposium, </booktitle> <month> December </month> <year> 1987. </year>
Reference-contexts: For example, a video-on-demand server which provides movies to homes over an ATM-based network may unexpectedly encounter network congestion, potentially causing some deadlines to be missed. Under such an overload condition, the real-time system must remain robust and maintain an acceptable level of performance. The imprecise-computation technique <ref> [25, 29, 30] </ref> is a way to deal with these transient overloads. 1 1.1 Motivation The imprecise-computation technique is motivated by the fact that one can often trade off precision for timeliness.
Reference: [26] <author> K.-J. Lin, S. Natarajan, and J. W.-S. Liu. </author> <title> Imprecise results: Utilizing partial computations in real-time systems. </title> <booktitle> In Proceedings of 8th IEEE Real-Time Systems Symposium, </booktitle> <month> December </month> <year> 1987. </year>
Reference: [27] <author> M. Liou. </author> <title> Overview of the px64 kbits/s video coding standard. </title> <journal> Communications of the ACM, </journal> <volume> 34(4) </volume> <pages> 59-63, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: The optional packets carry the extra-quality portion, which is the additional information needed to upgrade the reduced-service quality to full-service quality. Such a partitioning of packets can 23 be achieved by using layered coding [42, 45, 48], H.261 video coding <ref> [2, 27] </ref>, or MPEG-I video coding [20, 34]. For instance, bit-plane separation [42] is a layered coding scheme used for voice coding. The most significant bits of a quantized speech sample are the basic-quality portion of the sample, and the least significant bits are the extra-quality portion. <p> A video frame is filtered into a low-frequency band and a high-frequency band. The low-frequency band is the basic-quality portion of the frame, and the high-frequency band is the extra-quality portion. Other kinds of layered coding schemes include combined bit-plane-frequency separation and feature-plane separation. The H.261 standard <ref> [2, 27] </ref> encodes video into a hierarchical block structure consisting of pictures, groups of (macro)blocks (GOBs), macroblocks (MBs), and blocks. A MB contains four 8x8 luminance (Y) blocks and two 8x8 chrominance (C B and C R ) blocks. A GOB consists of 3x11 MBs.
Reference: [28] <author> C. L. Liu and J. W. Layland. </author> <title> Scheduling algorithms for multiprogramming in a hard real-time environment. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 20(1) </volume> <pages> 46-61, </pages> <month> January </month> <year> 1973. </year>
Reference-contexts: Thus, we adopt a non-preemptive scheduling policy for the output system. This scheduling policy combines the earliest-deadline-first algorithm, a priority scheme with a periodic server, and the imprecise-computation technique. The scheduler uses a non-preemptive version of the earliest-deadline-first (EDF) algorithm <ref> [28, 40] </ref> to schedule real-time packets. Whenever the output link is free, the packet with the nearest absolute deadline is transmitted next; conflicts are resolved on a first-come-first-serve (FCFS) basis.
Reference: [29] <author> J. W.-S. Liu, K.-J. Lin, and C. L. Liu. </author> <title> A position paper for the 1987 IEEE workshop on real-time operating systems. </title> <booktitle> In Proceedings of the 1987 IEEE Workshop on Real-Time Operating Systems, </booktitle> <month> May </month> <year> 1987. </year>
Reference-contexts: For example, a video-on-demand server which provides movies to homes over an ATM-based network may unexpectedly encounter network congestion, potentially causing some deadlines to be missed. Under such an overload condition, the real-time system must remain robust and maintain an acceptable level of performance. The imprecise-computation technique <ref> [25, 29, 30] </ref> is a way to deal with these transient overloads. 1 1.1 Motivation The imprecise-computation technique is motivated by the fact that one can often trade off precision for timeliness.
Reference: [30] <author> J. W.-S. Liu, K.-J. Lin, and S. Natarajan. </author> <title> Scheduling real-time, periodic jobs using imprecise results. </title> <booktitle> In Proceedings of 8th IEEE Real-Time Systems Symposium, </booktitle> <month> December </month> <year> 1987. </year>
Reference-contexts: For example, a video-on-demand server which provides movies to homes over an ATM-based network may unexpectedly encounter network congestion, potentially causing some deadlines to be missed. Under such an overload condition, the real-time system must remain robust and maintain an acceptable level of performance. The imprecise-computation technique <ref> [25, 29, 30] </ref> is a way to deal with these transient overloads. 1 1.1 Motivation The imprecise-computation technique is motivated by the fact that one can often trade off precision for timeliness.
Reference: [31] <author> J. W.-S. Liu, K.-J. Lin, W.-K. Shih, A. C.-S. Yu, J.-Y. Chung, and W. Zhao. </author> <title> Algorithms for scheduling imprecise computations. </title> <journal> IEEE Computer, </journal> <volume> 24(5) </volume> <pages> 58-68, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: During transient overloads, it prevents missed deadlines (i.e., timing faults) and provides graceful degradation by ensuring that an approximate result of acceptable quality is available whenever the exact result cannot be obtained in time. Since the introduction of this technique, several workload models have been proposed <ref> [31] </ref> where the quality of a result produced by a real-time task is traded off with the amount of computation time needed to produce it. Each task in a real-time system is logically decomposed into two subtasks: mandatory and optional. The mandatory part produces an approximate but acceptable result. <p> By definition, we say that a real-time system is predictable if it can guarantee an acceptable result under all operating conditions. The imprecise-computation model used in previous studies <ref> [7, 9, 10, 22-26, 31, 38, 39, 41, 49] </ref> assumes that the quality of a task's result depends solely on the time spent by the task to produce the result. Specifically, the input of each task is free of error. <p> The ensuing sections examine related work in the areas of error modelling for imprecise computation, anytime algorithms, real-time packet scheduling, and congestion control. 2.1 Imprecise-Computation Model The imprecise-computation model used in previous studies <ref> [7, 9, 10, 22-26, 31, 38, 39, 41, 49] </ref> characterizes the workload on a real-time system as a set of tasks T = fT 1 ; T 2 ; : : : ; T q g. A task is a basic unit of work to be scheduled and executed. <p> In previous studies on imprecise computation, the output error E i in the result of T i is assumed to be a function of the amount of discarded work. Most existing algorithms <ref> [7, 9, 10, 22-26, 31, 38, 39, 41, 49] </ref> for scheduling tasks with optional parts assume that the tasks are monotone. Figure 2.1 shows an example where the solid curve shows a general error function of a monotone task. <p> This results in severe degradation of the quality of real-time communication services. To address the above problem, we propose a congestion-control scheme which delays the onset of congestion by using the imprecise-computation technique <ref> [31] </ref>, coupled with a good-acceptance strategy [19,46,47]. As we will show later in this chapter, this scheme can effectively handle fluctuations in real-time traffic, in particular, variable bit-rate traffic. The imprecise-computation technique [31] is applicable because it is often desirable to sacrifice the quality of real-time communications for timeliness. <p> above problem, we propose a congestion-control scheme which delays the onset of congestion by using the imprecise-computation technique <ref> [31] </ref>, coupled with a good-acceptance strategy [19,46,47]. As we will show later in this chapter, this scheme can effectively handle fluctuations in real-time traffic, in particular, variable bit-rate traffic. The imprecise-computation technique [31] is applicable because it is often desirable to sacrifice the quality of real-time communications for timeliness. <p> The likelihood of a data packet just missing a period is also greater when the period of the server is shorter. 94 3.7 Conclusions This chapter presented a congestion-control scheme which delays the onset of congestion by using the imprecise-computation technique <ref> [31] </ref> along with queue-length thresholding. The objective of our scheme is to reduce the number of packets that miss their deadlines under congestion conditions while still guaranteeing a level of quality acceptable to the end users.
Reference: [32] <author> V. M. Lopez-Millan. </author> <title> A congestion control scheme for a real-time traffic switching element using the imprecise computations technique. </title> <type> Master's thesis, </type> <institution> Department of Computer Science, University of Illinois at Urbana-Champaign, </institution> <year> 1993. </year>
Reference-contexts: The picture sizes range from as small as 150fi150 pixels to 352fi240 pixels. Table 3.1 shows the parameters for our statistical H.261 video-telephone sources [14]. These parameters are similar to those adopted in <ref> [32, 33] </ref>; the only change is in the average bit rate. Rather than running medium-fidelity, video-telephone sources at 1.28 Mbps (pfi 64 kbps, where p = 20), we use higher-fidelity, video-telephone sources at 1.96 Mbps (p = 30). <p> Mean: 1.187 s. Shifted: 10 ms Active Interval Bit Rate 64 kbps Silent Interval Length Exponentially distributed. Mean: 1.646 s. Shifted: 200 ms Table 3.2: Model of a Telephone Traffic Source Table 3.3 shows the parameters for our data sources. These parameters are the same as those used in <ref> [32, 33] </ref>. Like a telephone source, the active and silent intervals of a data source alternate. During the active interval, data is transmitted at a constant rate (i.e., 2 Mbps); during the silent interval, no data is transmitted. <p> The LINK server models the transmission circuits and the output link and follows the scheduling policy described in Section 3.3. In order to remove the dependency on the actual bit rate of the output link, we normalize time with respect to the packet transmission time, as in <ref> [32, 33] </ref>. Packet transmission time is 33 the amount of time it takes to transmit a single packet down the output link. We refer to this unit of time as a packet slot. <p> Experimental Parameters Traffic Traffic Load Relative Deadlines Imprecision Ratio Output System Congestion Threshold Periodic Server Table 3.4: Parameters for the Simulation Experiments A traffic load consists of the number of H.261 video-telephone or MPEG-I video connections, telephone connections, and data connections. As in <ref> [32, 33] </ref>, each traffic load starts out with a background load of 20 video-telephone, 1000 telephone, and 13 data connections. Connections are then gradually added as part of the foreground load until the link reaches full utilization. <p> Our simulation study uses two types of foreground traffic loads: H.261 video-telephone and MPEG-I video. We do not present results for the voice-predominant traffic loads (i.e., foreground loads consisting of telephone connections) since the results are similar to those obtained in <ref> [32, 33] </ref>. In [32, 33], it was shown that the imprecise-computation technique is not as effective on voice-predominant loads as it is on video-predominant loads. 34 The relative deadlines parameters, denoted by RD, consists of a pair of values in milliseconds | the relative deadlines of the packets in the Real-Time <p> Our simulation study uses two types of foreground traffic loads: H.261 video-telephone and MPEG-I video. We do not present results for the voice-predominant traffic loads (i.e., foreground loads consisting of telephone connections) since the results are similar to those obtained in <ref> [32, 33] </ref>. In [32, 33], it was shown that the imprecise-computation technique is not as effective on voice-predominant loads as it is on video-predominant loads. 34 The relative deadlines parameters, denoted by RD, consists of a pair of values in milliseconds | the relative deadlines of the packets in the Real-Time I and Real-Time <p> Within each set of experiments, we run a base experiment with RD = (1; 2), I R = 1=1 except for MPEG-I where IR is video-dependent, %BW = 10%, and P = 10 ms. These parameters for the base experiments are based on <ref> [11, 13, 32] </ref>. For the statistical video-telephone and telephone sources, having a 1/1 imprecision ratio means that mandatory and optional packets are generated in the same proportion and in an interleaved manner. As mentioned earlier, the non-real-time data sources use an imprecision ratio of 1=0 and relative deadline of 1. <p> We refer to this region as the common region. Once the loss ratio becomes non-negligible (i.e., greater than 10 5 , the resolution of the experiments), we reach the activation point <ref> [32, 33] </ref>. At this point, the loss ratio becomes significant, as shown in Figure 3.6, and the link utilization becomes a sub-linear function of the number of foreground connections. The link-utilization curves then begin to separate from each other in what is called the active region. <p> The point at which this happens is called the saturation point. For the link-utilization curves with finite congestion thresholds, the saturation point occurs around 65 connections. Beyond the saturation point, we enter the unstable region <ref> [32, 33] </ref>. <p> Other than the above anomaly, the lower the congestion threshold, the better the invalid ratio. In contrast to the H.261, p = 20 video-telephone connections used in <ref> [32, 33] </ref>, the H.261, p = 30 video-telephone connections used in our foreground load result in a higher bit rate; shorter common, active, stable, and unstable regions; and consequently, earlier occurrences of the activation, stability, and saturation points. <p> The best solution in this case is to choose a congestion threshold which is low (e.g., 50). For voice-predominant workloads <ref> [32, 33] </ref>, the imprecise-computation technique is even less effective than in any of the above video-predominant experiments. The authors surmised that its ineffectiveness was due to a uniformly-distributed traffic load.
Reference: [33] <author> V. M. Lopez-Millan, W. Feng, and J. W.-S. Liu. </author> <title> Using the imprecise-computation technique for congestion control on a real-time traffic switching element. </title> <booktitle> In Proceedings of 1994 International Conference on Parallel and Distributed Systems, </booktitle> <month> December </month> <year> 1994. </year>
Reference-contexts: The picture sizes range from as small as 150fi150 pixels to 352fi240 pixels. Table 3.1 shows the parameters for our statistical H.261 video-telephone sources [14]. These parameters are similar to those adopted in <ref> [32, 33] </ref>; the only change is in the average bit rate. Rather than running medium-fidelity, video-telephone sources at 1.28 Mbps (pfi 64 kbps, where p = 20), we use higher-fidelity, video-telephone sources at 1.96 Mbps (p = 30). <p> Mean: 1.187 s. Shifted: 10 ms Active Interval Bit Rate 64 kbps Silent Interval Length Exponentially distributed. Mean: 1.646 s. Shifted: 200 ms Table 3.2: Model of a Telephone Traffic Source Table 3.3 shows the parameters for our data sources. These parameters are the same as those used in <ref> [32, 33] </ref>. Like a telephone source, the active and silent intervals of a data source alternate. During the active interval, data is transmitted at a constant rate (i.e., 2 Mbps); during the silent interval, no data is transmitted. <p> The LINK server models the transmission circuits and the output link and follows the scheduling policy described in Section 3.3. In order to remove the dependency on the actual bit rate of the output link, we normalize time with respect to the packet transmission time, as in <ref> [32, 33] </ref>. Packet transmission time is 33 the amount of time it takes to transmit a single packet down the output link. We refer to this unit of time as a packet slot. <p> Experimental Parameters Traffic Traffic Load Relative Deadlines Imprecision Ratio Output System Congestion Threshold Periodic Server Table 3.4: Parameters for the Simulation Experiments A traffic load consists of the number of H.261 video-telephone or MPEG-I video connections, telephone connections, and data connections. As in <ref> [32, 33] </ref>, each traffic load starts out with a background load of 20 video-telephone, 1000 telephone, and 13 data connections. Connections are then gradually added as part of the foreground load until the link reaches full utilization. <p> Our simulation study uses two types of foreground traffic loads: H.261 video-telephone and MPEG-I video. We do not present results for the voice-predominant traffic loads (i.e., foreground loads consisting of telephone connections) since the results are similar to those obtained in <ref> [32, 33] </ref>. In [32, 33], it was shown that the imprecise-computation technique is not as effective on voice-predominant loads as it is on video-predominant loads. 34 The relative deadlines parameters, denoted by RD, consists of a pair of values in milliseconds | the relative deadlines of the packets in the Real-Time <p> Our simulation study uses two types of foreground traffic loads: H.261 video-telephone and MPEG-I video. We do not present results for the voice-predominant traffic loads (i.e., foreground loads consisting of telephone connections) since the results are similar to those obtained in <ref> [32, 33] </ref>. In [32, 33], it was shown that the imprecise-computation technique is not as effective on voice-predominant loads as it is on video-predominant loads. 34 The relative deadlines parameters, denoted by RD, consists of a pair of values in milliseconds | the relative deadlines of the packets in the Real-Time I and Real-Time <p> We refer to this region as the common region. Once the loss ratio becomes non-negligible (i.e., greater than 10 5 , the resolution of the experiments), we reach the activation point <ref> [32, 33] </ref>. At this point, the loss ratio becomes significant, as shown in Figure 3.6, and the link utilization becomes a sub-linear function of the number of foreground connections. The link-utilization curves then begin to separate from each other in what is called the active region. <p> The point at which this happens is called the saturation point. For the link-utilization curves with finite congestion thresholds, the saturation point occurs around 65 connections. Beyond the saturation point, we enter the unstable region <ref> [32, 33] </ref>. <p> Other than the above anomaly, the lower the congestion threshold, the better the invalid ratio. In contrast to the H.261, p = 20 video-telephone connections used in <ref> [32, 33] </ref>, the H.261, p = 30 video-telephone connections used in our foreground load result in a higher bit rate; shorter common, active, stable, and unstable regions; and consequently, earlier occurrences of the activation, stability, and saturation points. <p> The best solution in this case is to choose a congestion threshold which is low (e.g., 50). For voice-predominant workloads <ref> [32, 33] </ref>, the imprecise-computation technique is even less effective than in any of the above video-predominant experiments. The authors surmised that its ineffectiveness was due to a uniformly-distributed traffic load.
Reference: [34] <author> MPEG. </author> <title> Coding of moving pictures and associated audio for digital storage media at up to about 1.5 mbits/s. </title> <type> MPEG 91/185, </type> <year> 1991. </year> <month> 138 </month>
Reference-contexts: The real-time packets which provide a minimum quality-of-service (QoS) are marked as mandatory packets while the real-time packets which enhance the minimum QoS are marked as optional. For example, the MPEG-I standard <ref> [20, 34] </ref> classifies frames into three types: intracoded (I), predicted (P), and bi-directionally interpolated (B). An I frame is a compressed version of an entire video frame. A P frame is encoded with respect to a past frame (either an I or P frame). <p> The optional packets carry the extra-quality portion, which is the additional information needed to upgrade the reduced-service quality to full-service quality. Such a partitioning of packets can 23 be achieved by using layered coding [42, 45, 48], H.261 video coding [2, 27], or MPEG-I video coding <ref> [20, 34] </ref>. For instance, bit-plane separation [42] is a layered coding scheme used for voice coding. The most significant bits of a quantized speech sample are the basic-quality portion of the sample, and the least significant bits are the extra-quality portion. <p> For example, when motion estimation is accurate within a given tolerance, the block data for the discrete cosine transform is optional. 24 Also, a MB in a GOB can be optional if it does not contain any information for that part of the picture. For the MPEG-I standard <ref> [20, 34] </ref>, video frames are classified as intracoded (I), predicted (P), or bi-directionally interpolated (B) frames. An I frame is a compressed version of an entire video frame. A P frame is encoded with respect to a past frame (either an I or P frame).
Reference: [35] <author> D. J. Musliner. </author> <title> CIRCA: The Cooperative Intelligent Real-Time Control Architecture. </title> <type> PhD thesis, </type> <institution> Department of Computer Science and Engineering, University of Michigan, </institution> <year> 1993. </year>
Reference-contexts: The conditional performance profiles are then modelled in a discrete representation and stored in a table. In contrast, the extended imprecise-computation model uses a continuous representation and eliminates the need for tables. 15 Recently, Musliner <ref> [35] </ref> introduced the concept of any-dimension algorithms | a general class of iterative-improvement algorithms. This concept generalizes the anytime-algorithm concept by providing guarantees along dimensions other than time, in particular, resources.
Reference: [36] <author> D. W. Petr and V. S. Frost. </author> <title> Optimal packet discarding: An atm-oriented analysis model and initial results. </title> <booktitle> In Proceedings of the IEEE INFOCOM, </booktitle> <pages> pages 537-542, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: Many real-time applications provide only high-level timing constraints and leave the assignment of the lower-level timing constraints to the scheduler. Since the late 1980s, the area of ATM congestion control over a distributed B-ISDN network has received considerable attention <ref> [8, 15-18, 36, 37, 43] </ref>. This type of network must support both real-time and non-real-time communication services. <p> In contrast, much of the work on congestion control in ATM networks has pertained to constant bit rate (CBR). Existing congestion-control schemes typically employ space-priority schemes such as pushout and partial-buffer sharing <ref> [17, 18, 36, 37] </ref>. The pushout method simply decides which packet to pushout of the ATM switch buffer (i.e., queue) in order to make space for an incoming packet. When the queue is full (i.e., the buffer is saturated), incoming, lower priority packets are discarded.
Reference: [37] <author> D. W. Petr and V. S. Frost. </author> <title> Nested threshold cell discarding for atm overload control: Optimization under cell loss constraints. </title> <booktitle> In Proceedings of the IEEE INFOCOM, </booktitle> <pages> pages 1403-1412, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: Many real-time applications provide only high-level timing constraints and leave the assignment of the lower-level timing constraints to the scheduler. Since the late 1980s, the area of ATM congestion control over a distributed B-ISDN network has received considerable attention <ref> [8, 15-18, 36, 37, 43] </ref>. This type of network must support both real-time and non-real-time communication services. <p> In contrast, much of the work on congestion control in ATM networks has pertained to constant bit rate (CBR). Existing congestion-control schemes typically employ space-priority schemes such as pushout and partial-buffer sharing <ref> [17, 18, 36, 37] </ref>. The pushout method simply decides which packet to pushout of the ATM switch buffer (i.e., queue) in order to make space for an incoming packet. When the queue is full (i.e., the buffer is saturated), incoming, lower priority packets are discarded.
Reference: [38] <author> W.-K. Shih and J. W.-S. Liu. </author> <title> Algorithms for scheduling imprecise computations with timing constraints to minimize maximum error. </title> <note> To appear in IEEE Transactions on Computers. </note>
Reference-contexts: By definition, we say that a real-time system is predictable if it can guarantee an acceptable result under all operating conditions. The imprecise-computation model used in previous studies <ref> [7, 9, 10, 22-26, 31, 38, 39, 41, 49] </ref> assumes that the quality of a task's result depends solely on the time spent by the task to produce the result. Specifically, the input of each task is free of error. <p> The ensuing sections examine related work in the areas of error modelling for imprecise computation, anytime algorithms, real-time packet scheduling, and congestion control. 2.1 Imprecise-Computation Model The imprecise-computation model used in previous studies <ref> [7, 9, 10, 22-26, 31, 38, 39, 41, 49] </ref> characterizes the workload on a real-time system as a set of tasks T = fT 1 ; T 2 ; : : : ; T q g. A task is a basic unit of work to be scheduled and executed. <p> In previous studies on imprecise computation, the output error E i in the result of T i is assumed to be a function of the amount of discarded work. Most existing algorithms <ref> [7, 9, 10, 22-26, 31, 38, 39, 41, 49] </ref> for scheduling tasks with optional parts assume that the tasks are monotone. Figure 2.1 shows an example where the solid curve shows a general error function of a monotone task. <p> Therefore, the problem of scheduling a set of preemptable composite tasks reduces to the problem of scheduling a set of independent preemptable tasks. scheduling composite tasks. This algorithm makes use of a modified version of the earliest-deadline-first algorithm (M-EDF), described in [41], and Algorithm G, described in <ref> [38] </ref>. The M-EDF algorithm treats every composite task as if it were entirely optional and schedules the composite tasks on an earliest-deadline-first basis. It never schedules any composite task after its deadline. In other words, every composite task is terminated at its deadline if it is not completed.
Reference: [39] <author> W.-K. Shih and J. W.-S. Liu. </author> <title> On-line scheduling of imprecise computations to minimize error. </title> <booktitle> In Proceedings of the 13th IEEE Real-Time Systems Symposium, </booktitle> <month> December </month> <year> 1992. </year>
Reference-contexts: By definition, we say that a real-time system is predictable if it can guarantee an acceptable result under all operating conditions. The imprecise-computation model used in previous studies <ref> [7, 9, 10, 22-26, 31, 38, 39, 41, 49] </ref> assumes that the quality of a task's result depends solely on the time spent by the task to produce the result. Specifically, the input of each task is free of error. <p> The ensuing sections examine related work in the areas of error modelling for imprecise computation, anytime algorithms, real-time packet scheduling, and congestion control. 2.1 Imprecise-Computation Model The imprecise-computation model used in previous studies <ref> [7, 9, 10, 22-26, 31, 38, 39, 41, 49] </ref> characterizes the workload on a real-time system as a set of tasks T = fT 1 ; T 2 ; : : : ; T q g. A task is a basic unit of work to be scheduled and executed. <p> In previous studies on imprecise computation, the output error E i in the result of T i is assumed to be a function of the amount of discarded work. Most existing algorithms <ref> [7, 9, 10, 22-26, 31, 38, 39, 41, 49] </ref> for scheduling tasks with optional parts assume that the tasks are monotone. Figure 2.1 shows an example where the solid curve shows a general error function of a monotone task.
Reference: [40] <author> W.-K. Shih, J. W.-S. Liu, and J.-Y. Chung. </author> <title> Fast algorithms for scheduling imprecise computations. </title> <booktitle> In Proceedings of the 10th IEEE Real-Time Systems Symposium, </booktitle> <month> December </month> <year> 1989. </year>
Reference-contexts: Thus, we adopt a non-preemptive scheduling policy for the output system. This scheduling policy combines the earliest-deadline-first algorithm, a priority scheme with a periodic server, and the imprecise-computation technique. The scheduler uses a non-preemptive version of the earliest-deadline-first (EDF) algorithm <ref> [28, 40] </ref> to schedule real-time packets. Whenever the output link is free, the packet with the nearest absolute deadline is transmitted next; conflicts are resolved on a first-come-first-serve (FCFS) basis.
Reference: [41] <author> W.-K. Shih, J. W.-S. Liu, and J.-Y. Chung. </author> <title> Algorithms for scheduling imprecise computations to minimize total error. </title> <journal> SIAM Journal on Computing, </journal> <volume> 20(3), </volume> <month> July </month> <year> 1991. </year>
Reference-contexts: By definition, we say that a real-time system is predictable if it can guarantee an acceptable result under all operating conditions. The imprecise-computation model used in previous studies <ref> [7, 9, 10, 22-26, 31, 38, 39, 41, 49] </ref> assumes that the quality of a task's result depends solely on the time spent by the task to produce the result. Specifically, the input of each task is free of error. <p> The ensuing sections examine related work in the areas of error modelling for imprecise computation, anytime algorithms, real-time packet scheduling, and congestion control. 2.1 Imprecise-Computation Model The imprecise-computation model used in previous studies <ref> [7, 9, 10, 22-26, 31, 38, 39, 41, 49] </ref> characterizes the workload on a real-time system as a set of tasks T = fT 1 ; T 2 ; : : : ; T q g. A task is a basic unit of work to be scheduled and executed. <p> In previous studies on imprecise computation, the output error E i in the result of T i is assumed to be a function of the amount of discarded work. Most existing algorithms <ref> [7, 9, 10, 22-26, 31, 38, 39, 41, 49] </ref> for scheduling tasks with optional parts assume that the tasks are monotone. Figure 2.1 shows an example where the solid curve shows a general error function of a monotone task. <p> Therefore, the problem of scheduling a set of preemptable composite tasks reduces to the problem of scheduling a set of independent preemptable tasks. scheduling composite tasks. This algorithm makes use of a modified version of the earliest-deadline-first algorithm (M-EDF), described in <ref> [41] </ref>, and Algorithm G, described in [38]. The M-EDF algorithm treats every composite task as if it were entirely optional and schedules the composite tasks on an earliest-deadline-first basis. It never schedules any composite task after its deadline. <p> It never schedules any composite task after its deadline. In other words, every composite task is terminated at its deadline if it is not completed. It has been shown in <ref> [41] </ref> that the M-EDF algorithm minimizes the total processing time of the discarded portions of all tasks. Algorithm G distributes the total available processor 111 time as evenly as possible among the tasks. <p> If Step 1 fails to find a precise schedule of T, no precise schedule of T exists <ref> [41] </ref>. Step 2 then tries to precisely schedule every composite task whose optional processing time o j is small compared with its maximum extended-mandatory processing time. It does so in Step 2 (a) by reducing the amounts of time assigned to tasks which have relatively large optional processing times.
Reference: [42] <author> J. Suzuki and M. Taka. </author> <title> Missing packet recovery techniques for low-bit-rate coded speech. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 7(5), </volume> <month> June </month> <year> 1989. </year>
Reference-contexts: The optional packets carry the extra-quality portion, which is the additional information needed to upgrade the reduced-service quality to full-service quality. Such a partitioning of packets can 23 be achieved by using layered coding <ref> [42, 45, 48] </ref>, H.261 video coding [2, 27], or MPEG-I video coding [20, 34]. For instance, bit-plane separation [42] is a layered coding scheme used for voice coding. <p> Such a partitioning of packets can 23 be achieved by using layered coding [42, 45, 48], H.261 video coding [2, 27], or MPEG-I video coding [20, 34]. For instance, bit-plane separation <ref> [42] </ref> is a layered coding scheme used for voice coding. The most significant bits of a quantized speech sample are the basic-quality portion of the sample, and the least significant bits are the extra-quality portion. Mandatory packets and optional packets contain the basic-quality and extra-quality portions of the samples, respectively.
Reference: [43] <author> L. Tassiulas, Y. C. Hung, and S. S. Panwar. </author> <title> Optimal buffer control during congestion in an atm network node. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 2(4), </volume> <month> August </month> <year> 1994. </year> <month> 139 </month>
Reference-contexts: Many real-time applications provide only high-level timing constraints and leave the assignment of the lower-level timing constraints to the scheduler. Since the late 1980s, the area of ATM congestion control over a distributed B-ISDN network has received considerable attention <ref> [8, 15-18, 36, 37, 43] </ref>. This type of network must support both real-time and non-real-time communication services. <p> This allows us to assign high priority to essential real-time packets and low priority to non-essential real-time packets. 18 The most recent work on congestion control over ATM networks includes the research of Huang and Wu [15] and Tassiulas, Hung, and Panwar <ref> [43] </ref>. Huang and Wu [15] propose a space-priority scheme which uses a combination of the pushout and partial-buffer sharing schemes on a single queue. <p> Because real-time packets are considered high priority and non-real-time packets are low priority, as in [8], their proposed service discipline is an enhanced version of the QLT strategy. Tassiulas, Hung, and Panwar <ref> [43] </ref> study the problem of optimal, buffer-space, priority control in an ATM network node. They examine three well-known, congestion-control policies: cell discarding, pushout, and expelling.
Reference: [44] <author> T. Urabe, H. Afzal, G. Ho, P. Pancha, and M. El Zarki. Mpegtool: </author> <title> An x window based mpeg encoder and statistics tool. </title> <booktitle> In Proceedings of ACM Multimedia, </booktitle> <year> 1993. </year>
Reference-contexts: Table 3.9 lists the average sizes of the I, P, and B frames in units of ATM packets, the average imprecision ratio IR, and the playback sequence (N; M ) <ref> [44] </ref>. The parameter N specifies the I frame interval, and M specifies the I or P frame interval.
Reference: [45] <author> J. Woods and S. O'Neil. </author> <title> Sub-band coding of images. </title> <journal> IEEE Transactions on Acoustic Speech Signal Communications, </journal> <volume> ASSP-34:1278-1288, </volume> <month> October </month> <year> 1986. </year>
Reference-contexts: The optional packets carry the extra-quality portion, which is the additional information needed to upgrade the reduced-service quality to full-service quality. Such a partitioning of packets can 23 be achieved by using layered coding <ref> [42, 45, 48] </ref>, H.261 video coding [2, 27], or MPEG-I video coding [20, 34]. For instance, bit-plane separation [42] is a layered coding scheme used for voice coding. <p> The most significant bits of a quantized speech sample are the basic-quality portion of the sample, and the least significant bits are the extra-quality portion. Mandatory packets and optional packets contain the basic-quality and extra-quality portions of the samples, respectively. Similarly, frequency-domain separation <ref> [45] </ref> is a scheme used for video coding. A video frame is filtered into a low-frequency band and a high-frequency band. The low-frequency band is the basic-quality portion of the frame, and the high-frequency band is the extra-quality portion.
Reference: [46] <author> H. Zhang and E. Knightly. </author> <title> Providing end-to-end statistical performance guarantees with bounding interval dependent stochastic models. </title> <booktitle> In Proceedings of ACM SIGMETRICS, </booktitle> <pages> pages 211-220, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: Consequently, end-to-end delay and delay jitter become excessive and noticeable only when the network is congested at a catastrophic level. However, such a situation should not occur if we couple our congestion-control scheme with a good connection-acceptance policy <ref> [19, 46, 47] </ref>. With respect to ATM, packets are fixed in size and are called cells. Figure 3.1 shows that a cell is 53 bytes in length and consists of a 5-byte header and a 48-byte information field. The header field contains information pertaining to the ATM-layer functionality.
Reference: [47] <author> H. Zhang and E. Knightly. Red-vbr: </author> <title> A new approach to support vbr video in packet-switched networks. </title> <booktitle> In Proceedings of 5th International Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <month> April </month> <year> 1995. </year>
Reference-contexts: Consequently, end-to-end delay and delay jitter become excessive and noticeable only when the network is congested at a catastrophic level. However, such a situation should not occur if we couple our congestion-control scheme with a good connection-acceptance policy <ref> [19, 46, 47] </ref>. With respect to ATM, packets are fixed in size and are called cells. Figure 3.1 shows that a cell is 53 bytes in length and consists of a 5-byte header and a 48-byte information field. The header field contains information pertaining to the ATM-layer functionality.
Reference: [48] <author> Y.-Q. Zhang, W. W. Wu, K. S. Kim, R. L. Pickholtz, and J. Ramasastry. </author> <title> Variable-bit-rate video transmission in the broadband-ISDN environment. </title> <publisher> IEEE, </publisher> <year> 1990. </year>
Reference-contexts: The optional packets carry the extra-quality portion, which is the additional information needed to upgrade the reduced-service quality to full-service quality. Such a partitioning of packets can 23 be achieved by using layered coding <ref> [42, 45, 48] </ref>, H.261 video coding [2, 27], or MPEG-I video coding [20, 34]. For instance, bit-plane separation [42] is a layered coding scheme used for voice coding.
Reference: [49] <author> W. Zhao, J. W.-S. Liu, and S. Vrbsky. </author> <title> Imprecise scheduling in multiprocessor systems. </title> <booktitle> In Proceedings of the 5th IEEE International Conference on Parallel and Distributed Computing Systems, </booktitle> <month> September </month> <year> 1992. </year>
Reference-contexts: By definition, we say that a real-time system is predictable if it can guarantee an acceptable result under all operating conditions. The imprecise-computation model used in previous studies <ref> [7, 9, 10, 22-26, 31, 38, 39, 41, 49] </ref> assumes that the quality of a task's result depends solely on the time spent by the task to produce the result. Specifically, the input of each task is free of error. <p> The ensuing sections examine related work in the areas of error modelling for imprecise computation, anytime algorithms, real-time packet scheduling, and congestion control. 2.1 Imprecise-Computation Model The imprecise-computation model used in previous studies <ref> [7, 9, 10, 22-26, 31, 38, 39, 41, 49] </ref> characterizes the workload on a real-time system as a set of tasks T = fT 1 ; T 2 ; : : : ; T q g. A task is a basic unit of work to be scheduled and executed. <p> In previous studies on imprecise computation, the output error E i in the result of T i is assumed to be a function of the amount of discarded work. Most existing algorithms <ref> [7, 9, 10, 22-26, 31, 38, 39, 41, 49] </ref> for scheduling tasks with optional parts assume that the tasks are monotone. Figure 2.1 shows an example where the solid curve shows a general error function of a monotone task.
Reference: [50] <author> S. Zilberstein. </author> <title> Constructing utility-driven real-time systems using anytime algorithms. </title> <booktitle> In Proceedings of the 1st IEEE Workshop on Imprecise and Approximate Computation, </booktitle> <month> December </month> <year> 1992. </year>
Reference-contexts: Zilberstein <ref> [50, 51] </ref> extended the work of Dean and Boddy by introducing the concept of conditional performance profiles.
Reference: [51] <author> S. Zilberstein. </author> <title> Operational Rationality Through Compilation of Anytime Algorithms. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, University of California at Berkeley, </institution> <year> 1993. </year> <month> 140 </month>
Reference-contexts: Zilberstein <ref> [50, 51] </ref> extended the work of Dean and Boddy by introducing the concept of conditional performance profiles.
References-found: 51

