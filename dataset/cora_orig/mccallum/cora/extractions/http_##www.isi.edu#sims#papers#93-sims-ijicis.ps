URL: http://www.isi.edu/sims/papers/93-sims-ijicis.ps
Refering-URL: http://www.isi.edu/~knoblock/
Root-URL: 
Email: knoblockg@isi.edu  
Title: RETRIEVING AND INTEGRATING DATA FROM MULTIPLE INFORMATION SOURCES  
Author: YIGAL ARENS CHIN Y. CHEE CHUN-NAN HSU CRAIG A. KNOBLOCK farens, chee, chunnan, 
Keyword: Information server, multidatabases, planning, query reformulation, knowledge representation, SIMS  
Note: To appear in the International Journal on Intelligent and Cooperative Information Systems.  
Address: 4676 Admiralty Way, Marina del Rey, CA 90292, U.S.A.  
Affiliation: Information Sciences Institute, University of Southern California  
Abstract: With the current explosion of data, retrieving and integrating information from various sources is a critical problem. Work in multidatabase systems has begun to address this problem, but it has primarily focused on methods for communicating between databases and requires significant effort for each new database added to the system. This paper describes a more general approach that exploits a semantic model of a problem domain to integrate the information from various information sources. The information sources handled include both databases and knowledge bases, and other information sources (e.g., programs) could potentially be incorporated into the system. This paper describes how both the domain and the information sources are modeled, shows how a query at the domain level is mapped into a set of queries to individual information sources, and presents algorithms for automatically improving the efficiency of queries using knowledge about both the domain and the information sources. This work is implemented in a system called SIMS and has been tested in a transportation planning domain using nine Oracle databases and a Loom knowledge base. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Yigal Arens. </author> <title> Services and information management for decision support. </title> <booktitle> In AISIG-90: Proceedings of the Annual AI Systems in Government Conference, </booktitle> <address> George Washington University, Washington, DC, </address> <year> 1990. </year> <month> 29 </month>
Reference-contexts: An earlier prototype was applied to information needed for daily Naval briefings given in Hawaii about the status of the Pacific Fleet <ref> [1] </ref>. The system currently has access to nine Oracle databases and a Loom knowledge base with information about ships, ports, locations, relevant activities, etc. SIMS is controlled via a graphical user interface. It is written in Common Lisp and uses CLIM for its graphics.
Reference: [2] <author> Yigal Arens and Craig A. Knoblock. </author> <title> Planning and reformulating queries for semantically-modeled multidabase systems. </title> <booktitle> In Proceedings of the First International Conference on Information and Knowledge Management, </booktitle> <address> Baltimore, MD, </address> <year> 1992. </year>
Reference-contexts: An initial prototype incorporating many features of the SIMS approach has been built and applied to the domain of transportation planning | organizing the movement of personnel and materiel from one geographic location to another using available transportation facilities and vehicles <ref> [2] </ref>. An earlier prototype was applied to information needed for daily Naval briefings given in Hawaii about the status of the Pacific Fleet [1]. The system currently has access to nine Oracle databases and a Loom knowledge base with information about ships, ports, locations, relevant activities, etc.
Reference: [3] <author> J.M. Blanco, A. Illarramendi, and A. Go~ni. </author> <title> Using a terminological system to integrate relational databases. </title> <institution> Facultad de Informatica, Universidad del Pa is Vasco, </institution> <address> Apdo 649, San Sebastian, Spain, </address> <year> 1992. </year>
Reference-contexts: In contrast, the domain model in SIMS is an integral part of the system, and allows SIMS to both combine information stored in the knowledge base and to reformulate queries. Illarramendi et al. <ref> [3, 13] </ref> present an approach to automatically integrating knowledge-base models from individual relational database schemas. In SIMS, the integration of the database models is not automated, although the translation of the individual database schemas into 3 knowledge-base models is automated by the LIM system, which is used by SIMS.
Reference: [4] <author> R.J. Brachman and J.G. Schmolze. </author> <title> An overview of the KL-ONE knowledge representation system. </title> <journal> Cognitive Science, </journal> <volume> 9(2) </volume> <pages> 171-216, </pages> <year> 1985. </year>
Reference-contexts: It provides both a language and an environment for constructing intelligent applications. Loom combines features of both frame-based and semantic network languages, and provides some reasoning facilities. As a knowledge representation language it is a descendent of the KL-ONE <ref> [4] </ref> system. The heart of Loom is a powerful knowledge representation system, which is used to provide deductive support for the declarative portion of the Loom language. Declarative knowledge in Loom consists of definitions, rules, facts, and default rules.
Reference: [5] <author> Yandong Cai, Nick Cercone, and Jiawei Han. </author> <title> Learning in relational databases: An attribute-oriented approach. </title> <journal> Computational Intelligence, </journal> <volume> 7(3) </volume> <pages> 119-132, </pages> <year> 1991. </year>
Reference-contexts: The algorithm retrieves the data that satisfy the condition A, then compiles the data for the conclusions B. We are now developing an automatic learning algorithm that is driven by example queries. We plan to use inductive learning <ref> [5, 11, 20] </ref> to identify the costly aspects of the example subqueries, propose candidate rules to learn, and then refine the candidate rules to the desired operationality. Previous work that automatically derives the content knowledge is proposed by Siegel [25].
Reference: [6] <author> Jaime G. Carbonell, Craig A. Knoblock, and Steven Minton. </author> <title> PRODIGY: An integrated architecture for planning and learning. </title> <editor> In Kurt VanLehn, editor, </editor> <booktitle> Architectures for Intelligence, </booktitle> <pages> pages 241-278. </pages> <publisher> Lawrence Erlbaum, </publisher> <address> Hillsdale, NJ, </address> <year> 1991. </year>
Reference-contexts: SIMS handles direct queries to the Loom knowledge base on its own. 1.1.3 Prodigy The two problems of selecting information sources and ordering queries can be easily cast as planning problems. SIMS uses Prodigy <ref> [6, 21] </ref>, a means-ends analysis planner, to solve both these problems. Prodigy has an expressive operator and control language and has been linked to Loom, so that it can use the Loom domain model as its model of the world.
Reference: [7] <author> Upen S. Chakravarthy, John Grant, and Jack Minker. </author> <title> Logic-based approach to semantic query optimization. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 15(2) </volume> <pages> 162-207, </pages> <year> 1990. </year>
Reference-contexts: One approach to reducing this cost is to search for reformulations of the query access plan that reduce it. Database management systems (DBMSs) often perform syntactic query reformulation [14]. We leave that task to the respective DBMS then, and focus instead on more global semantic query reformulation <ref> [7, 15] </ref>. The idea is to transform the query resulting from the planning process into a semantically equivalent one that can be executed more efficiently. 20 Consider the planned query illustrated in Figure 10. <p> In contrast with syntactic query optimization, which has been widely studied in the database community, QUIST uses the rules of semantic integrity constraint of the database as background knowledge to reformulate the given query. However, QUIST and the following work <ref> [25, 7] </ref> use heuristics to select the reformulation operators and rules to reformulate the query in a hill-climbing manner. Our reformulation algorithm does not require heuristic control and is thus more flexible.
Reference: [8] <author> Arvola Chan, Sy Danberg, Stephen Fox, Wen-Te K. Lin, Anil Nori, and Daniel Ries. </author> <title> Storage and access sturctures to support a semantic data model. </title> <booktitle> In Proceedings of the 8th International Conference on Very Large Data Bases, </booktitle> <pages> pages 122-130, </pages> <booktitle> Very Large Database Endowment, </booktitle> <address> Saratoga, CA, </address> <year> 1982. </year>
Reference-contexts: Finally, Papazoglou et al. [22] present a framework for intelligent information systems where, like SIMS, an explicit knowledge model is an integral part of an intelligent information agent. Some additional related research has been performed by those working on semantic and object-oriented data models, e.g., <ref> [8, 12, 26] </ref>. Since they are interested in constructing a single DBMS, however, they take an almost diametrically opposed view of the problem from that of SIMS.
Reference: [9] <author> Christine Collet, Michael N. Huhns, and Wei-Min Shen. </author> <title> Resource integration using a large knowledge base in carnot. </title> <booktitle> IEEE Computer, </booktitle> <pages> pages 55-62, </pages> <month> December </month> <year> 1991. </year>
Reference-contexts: Our approach thus provides a much more flexible and easily extensible interface to a possibly changing collection of information sources. The AI-oriented database community has done work on various aspects of using a knowledge base to integrate a variety of information sources. The Carnot project <ref> [9] </ref> integrates heterogeneous databases using a set of articulation axioms that describe how to map between SQL queries and domain concepts. Carnot uses the Cyc knowledge base [16] to build the articulation axioms, but after the axioms are built the domain model is no longer used or needed.
Reference: [10] <author> C.L. Forgy. </author> <title> RETE: A fast algorithm for the many pattern/many object pattern matching problem. </title> <booktitle> Artificial Intelligence, </booktitle> <pages> pages 17-37, </pages> <year> 1982. </year>
Reference-contexts: This complexity analysis assumes that the system matches database abstractions by linear search. Therefore, a very large set of database abstractions could make the reformulation costly. To avoid this problem, we plan to adopt a more sophisticated rule match algorithm, such as the RETE algorithm <ref> [10] </ref>, that will improve the algorithm's efficiency. 5.2 Reformulation of Query Plans We can reformulate every subquery in the query plan with the subquery reformulation algorithm and improve their efficiency. However, the most expensive aspect of the multidatabase query is often processing intermediate data.
Reference: [11] <author> David Haussler. </author> <title> Quantifying inductive bias: AI learning algorithms and Valiant's learning framework. </title> <journal> Artificial Intelligence, </journal> <volume> 36 </volume> <pages> 177-221, </pages> <year> 1988. </year>
Reference-contexts: The algorithm retrieves the data that satisfy the condition A, then compiles the data for the conclusions B. We are now developing an automatic learning algorithm that is driven by example queries. We plan to use inductive learning <ref> [5, 11, 20] </ref> to identify the costly aspects of the example subqueries, propose candidate rules to learn, and then refine the candidate rules to the desired operationality. Previous work that automatically derives the content knowledge is proposed by Siegel [25].
Reference: [12] <author> R. Hull and R. King. </author> <title> Semantic database modeling: Survey, applications, and research issues. </title> <journal> ACM Computing Surveys, </journal> <volume> 19(3) </volume> <pages> 201-260, </pages> <year> 1987. </year>
Reference-contexts: Finally, Papazoglou et al. [22] present a framework for intelligent information systems where, like SIMS, an explicit knowledge model is an integral part of an intelligent information agent. Some additional related research has been performed by those working on semantic and object-oriented data models, e.g., <ref> [8, 12, 26] </ref>. Since they are interested in constructing a single DBMS, however, they take an almost diametrically opposed view of the problem from that of SIMS.
Reference: [13] <author> A. Illarramendi, J.M. Blanco, and A. Go~ni. </author> <title> One step to integrate data and knowledge bases. </title> <institution> Facultad de Informatica, Universidad del Pa is Vasco, </institution> <address> Apdo 649, San Sebastian, Spain, </address> <year> 1992. </year>
Reference-contexts: In contrast, the domain model in SIMS is an integral part of the system, and allows SIMS to both combine information stored in the knowledge base and to reformulate queries. Illarramendi et al. <ref> [3, 13] </ref> present an approach to automatically integrating knowledge-base models from individual relational database schemas. In SIMS, the integration of the database models is not automated, although the translation of the individual database schemas into 3 knowledge-base models is automated by the LIM system, which is used by SIMS.
Reference: [14] <author> M. Jarke and J. Koch. </author> <title> Query optimization in database systems. </title> <journal> ACM Computer Surveys, </journal> <volume> 16 </volume> <pages> 111-152, </pages> <year> 1984. </year>
Reference-contexts: One approach to reducing this cost is to search for reformulations of the query access plan that reduce it. Database management systems (DBMSs) often perform syntactic query reformulation <ref> [14] </ref>. We leave that task to the respective DBMS then, and focus instead on more global semantic query reformulation [7, 15].
Reference: [15] <author> Jonathan Jay King. </author> <title> Query Optimization by Semantic Reasoning. </title> <type> PhD thesis, </type> <institution> Stanford University, Department of Computer Science, </institution> <year> 1981. </year> <month> 30 </month>
Reference-contexts: One approach to reducing this cost is to search for reformulations of the query access plan that reduce it. Database management systems (DBMSs) often perform syntactic query reformulation [14]. We leave that task to the respective DBMS then, and focus instead on more global semantic query reformulation <ref> [7, 15] </ref>. The idea is to transform the query resulting from the planning process into a semantically equivalent one that can be executed more efficiently. 20 Consider the planned query illustrated in Figure 10. <p> Two queries are defined to be semantically equivalent [25] if they return identical answers given the same contents of the database. The alternative definition of semantic equivalence <ref> [15] </ref> requires that the queries return identical answers given any contents of the database, but this definition would limit us to using only semantic integrity constraints which are often not available. <p> The earliest work in query reformulation was referred to as semantic query optimization and was applied to the single database query processing domain in a system called QUIST <ref> [15] </ref>. In contrast with syntactic query optimization, which has been widely studied in the database community, QUIST uses the rules of semantic integrity constraint of the database as background knowledge to reformulate the given query.
Reference: [16] <author> D. Lenat and R.V. Guha. </author> <title> Building Large Knowledge-Based Systems: Repre--sentation and Inference in the Cyc Project. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1990. </year>
Reference-contexts: The Carnot project [9] integrates heterogeneous databases using a set of articulation axioms that describe how to map between SQL queries and domain concepts. Carnot uses the Cyc knowledge base <ref> [16] </ref> to build the articulation axioms, but after the axioms are built the domain model is no longer used or needed.
Reference: [17] <author> R. MacGregor. </author> <title> A deductive pattern matcher. </title> <booktitle> In Proceedings of AAAI-88, The National Conference on Artificial Intelligence, </booktitle> <address> St. Paul, MN, </address> <year> 1988. </year>
Reference-contexts: A deductive engine called a classifier utilizes forward-chaining, semantic unification and object-oriented truth maintenance technologies in order to compile the declarative knowledge into a network designed to efficiently support on-line deductive query processing. For a detailed description of Loom see <ref> [17, 18] </ref>. To illustrate both Loom and the form of SIMS' queries, consider Figure 1, which contains a simple semantic query to SIMS. This query requests the value of the depth of the San Diego port. <p> This is done by including relations | 5 We have chosen simple examples for use in this paper. Loom supports far more powerful statements. For a full description see <ref> [17, 18] </ref>. 10 hierarchical (is-a) or others | to precisely describe every aspect of the contents of the database in terms of the domain model (cf. Section 2.1).
Reference: [18] <author> R. MacGregor. </author> <title> The evolving technology of classification-based knowledge representation systems. </title> <editor> In John Sowa, editor, </editor> <booktitle> Principles of Semantic Networks: Explorations in the Representation of Knowledge. </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1990. </year>
Reference-contexts: A deductive engine called a classifier utilizes forward-chaining, semantic unification and object-oriented truth maintenance technologies in order to compile the declarative knowledge into a network designed to efficiently support on-line deductive query processing. For a detailed description of Loom see <ref> [17, 18] </ref>. To illustrate both Loom and the form of SIMS' queries, consider Figure 1, which contains a simple semantic query to SIMS. This query requests the value of the depth of the San Diego port. <p> This is done by including relations | 5 We have chosen simple examples for use in this paper. Loom supports far more powerful statements. For a full description see <ref> [17, 18] </ref>. 10 hierarchical (is-a) or others | to precisely describe every aspect of the contents of the database in terms of the domain model (cf. Section 2.1).
Reference: [19] <author> Donald P. McKay, Timothy W. Finin, and Anthony O'Hare. </author> <title> The intelligent database interface: Integrating AI and database systems. </title> <booktitle> In AAAI-90: Proceedings of The Eighth National Conference on Artificial Intelligence, </booktitle> <year> 1990. </year>
Reference-contexts: Instead, databases provide more efficient structures for organizing large numbers of such objects, and DBMSs are more efficient than AI languages for manipulating them. The Loom Interface Module (LIM) <ref> [19] </ref> is being developed by researchers at Para-max Systems Corp. to mediate between Loom and databases. LIM reads an external database's schema and uses it to build a Loom representation of the database. <p> In fact, most of the modeling effort done for SIMS goes to describing the content of databases. These models are used by both LIM and SIMS, for their own respective purposes (cf. <ref> [19] </ref> for LIM's work on database modeling). Simply put, the model of a database must describe precisely what type of information is stored in it.
Reference: [20] <author> Ryszard S. Michalski. </author> <title> A theory and methodology of inductive learning. </title> <booktitle> In Machine Learning: An Artificial Intelligence Approach, </booktitle> <volume> volume I, </volume> <pages> pages 83-134. </pages> <publisher> Morgan Kaufmann Publishers, Inc., </publisher> <address> Los Altos, CA, </address> <year> 1983. </year>
Reference-contexts: The algorithm retrieves the data that satisfy the condition A, then compiles the data for the conclusions B. We are now developing an automatic learning algorithm that is driven by example queries. We plan to use inductive learning <ref> [5, 11, 20] </ref> to identify the costly aspects of the example subqueries, propose candidate rules to learn, and then refine the candidate rules to the desired operationality. Previous work that automatically derives the content knowledge is proposed by Siegel [25].
Reference: [21] <author> Steven Minton, Jaime G. Carbonell, Craig A. Knoblock, Daniel R. Kuokka, Oren Etzioni, and Yolanda Gil. </author> <title> Explanation-based learning: A problem solving perspective. </title> <journal> Artificial Intelligence, </journal> <volume> 40(1-3):63-118, </volume> <year> 1989. </year>
Reference-contexts: SIMS handles direct queries to the Loom knowledge base on its own. 1.1.3 Prodigy The two problems of selecting information sources and ordering queries can be easily cast as planning problems. SIMS uses Prodigy <ref> [6, 21] </ref>, a means-ends analysis planner, to solve both these problems. Prodigy has an expressive operator and control language and has been linked to Loom, so that it can use the Loom domain model as its model of the world.
Reference: [22] <author> Mike P. Papazoglou. </author> <title> An organizational framework for cooperating intelligent information systems. </title> <journal> International Journal of Intelligent and Cooperative Information Systems, </journal> <volume> 1(1) </volume> <pages> 169-202, </pages> <year> 1992. </year>
Reference-contexts: Elements of the approach described in that work can be applied to further automating the process of database modeling in SIMS. Finally, Papazoglou et al. <ref> [22] </ref> present a framework for intelligent information systems where, like SIMS, an explicit knowledge model is an integral part of an intelligent information agent. Some additional related research has been performed by those working on semantic and object-oriented data models, e.g., [8, 12, 26].
Reference: [23] <author> G. Piatetsky-Shapiro. </author> <title> Discovery, analysis, and presentation of strong rules. </title> <editor> In G. Piatetsky-Shapiro, editor, </editor> <booktitle> Knowledge Discovery in Databases, </booktitle> <pages> pages 229-248. </pages> <publisher> MIT Press, </publisher> <year> 1991. </year>
Reference-contexts: If the number of possible values exceeds a threshold, this range information is discarded. The rules were prepared by a semi-automatic learning algorithm similar to the KID3 <ref> [23] </ref>. This algorithm takes a user input condition A, and learns a set of rules of the form A ! B from the database. The algorithm retrieves the data that satisfy the condition A, then compiles the data for the conclusions B.
Reference: [24] <author> M.P. Reddy, B.E. Prasad, and P.G. Reddy. </author> <title> Query processing in heterogeneous distributed database management systems. </title> <editor> In Amar Gupta, editor, </editor> <booktitle> Integration of Information Systems: Bridging Heterogeneous Databases, </booktitle> <pages> pages 264-277. </pages> <publisher> IEEE Press, </publisher> <address> NY, </address> <year> 1989. </year>
Reference-contexts: Work in heterogeneous distributed databases includes the MULTIBASE, MERMAID, NDMS, IISS, IMDAS, ADDS, PRECI* and MRDSM systems. A survey and comparison of these can be found in <ref> [24] </ref>. Of these systems, only the first four attempt to support total integration of all information sources in the sense that SIMS provides.
Reference: [25] <author> Michael D. Siegel. </author> <title> Automatic rule derivation for semantic query optimization. </title> <editor> In Larry Kerschberg, editor, </editor> <booktitle> Proceedings of the Second International Conference on Expert Database Systems, </booktitle> <pages> pages 371-385. </pages> <institution> George Mason Foundation, Fairfax, VA, </institution> <year> 1988. </year>
Reference-contexts: The goal of query reformulation is to use reformulation to search for the least expensive query from the space of semantically equivalent queries to the original one. Two queries are defined to be semantically equivalent <ref> [25] </ref> if they return identical answers given the same contents of the database. The alternative definition of semantic equivalence [15] requires that the queries return identical answers given any contents of the database, but this definition would limit us to using only semantic integrity constraints which are often not available. <p> In contrast with syntactic query optimization, which has been widely studied in the database community, QUIST uses the rules of semantic integrity constraint of the database as background knowledge to reformulate the given query. However, QUIST and the following work <ref> [25, 7] </ref> use heuristics to select the reformulation operators and rules to reformulate the query in a hill-climbing manner. Our reformulation algorithm does not require heuristic control and is thus more flexible. <p> We plan to use inductive learning [5, 11, 20] to identify the costly aspects of the example subqueries, propose candidate rules to learn, and then refine the candidate rules to the desired operationality. Previous work that automatically derives the content knowledge is proposed by Siegel <ref> [25] </ref>. Our approach differs from theirs in that it is driven by the need for reformulation in the example instead of by a fixed set of heuristics, and it is flexible with regard to various database implementations.
Reference: [26] <author> Shalom Tsur and Carlo Zaniolo. </author> <title> An implementation of gem supporting a semantic data model on a relational back-end. </title> <booktitle> In Proceedings of the ACM SIGMOD International Conference on the Management of Data, </booktitle> <pages> pages 286-295, </pages> <publisher> ACM, </publisher> <address> New York, </address> <year> 1984. </year>
Reference-contexts: Finally, Papazoglou et al. [22] present a framework for intelligent information systems where, like SIMS, an explicit knowledge model is an integral part of an intelligent information agent. Some additional related research has been performed by those working on semantic and object-oriented data models, e.g., <ref> [8, 12, 26] </ref>. Since they are interested in constructing a single DBMS, however, they take an almost diametrically opposed view of the problem from that of SIMS.
Reference: [27] <author> Manuela M. Veloso. </author> <title> Nonlinear problem solving using intelligent casual-commitment. </title> <type> Technical Report CMU-CS-89-210, </type> <institution> School of Computer Science, Carnegie Mellon University, </institution> <address> Pittsburgh, PA, </address> <year> 1989. </year> <month> 31 </month>
Reference-contexts: This plan is then converted into a partially ordered set of plan steps free of unnecessary ordering constraints. Each of an operator's preconditions in the database access plan explicitly states the conditions on which that operator depends. We use the algorithm of Veloso <ref> [27] </ref> to convert the totally ordered plan into a partially ordered plan from the definitions of the operators. This algorithm is polynomial in the length of the plan.
References-found: 27

