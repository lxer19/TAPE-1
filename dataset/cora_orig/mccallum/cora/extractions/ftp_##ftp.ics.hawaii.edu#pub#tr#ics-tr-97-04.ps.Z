URL: ftp://ftp.ics.hawaii.edu/pub/tr/ics-tr-97-04.ps.Z
Refering-URL: ftp://ftp.ics.hawaii.edu/pub/tr/INDEX.html
Root-URL: 
Title: Genetic Algorithms for Adaptive Planning of Path and Trajectory of a Mobile Robot in 2D Terrains  
Author: Kazuo Sugihara and John Smith S. A. 
Keyword: Genetic algorithms, adaptivity, autonomous mobile robots, path planning, trajectory planning  
Note: U.  
Address: Honolulu, HI 96822,  
Affiliation: Department of Information and Computer Sciences the University of Hawaii at Manoa  
Email: sugihara@hawaii.edu and jksmith@uhics.ics.hawaii.edu  
Date: May 26, 1997  
Abstract: This paper proposes genetic algorithms (GAs) for path planning and trajectory planning of an autonomous mobile robot. Our GA-based approach has an advantage of adaptivity such that the GAs work even if an environment is time-varying or unknown. Therefore, it is suitable for both off-line and on-line motion planning. We first presents a GA for path planning in a 2D terrain. Simulation results on the performance and adaptivity of the GA on randomly generated terrains are shown. Then, we discuss extensions of the GA for solving both path planning and trajectory planning simultaneously.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> David Beasley, David R. Bull and Ralph R. Martin, </author> <title> "An overview of genetic algorithms, </title> " <journal> University Computing, </journal> <volume> Vol. 15, No. </volume> <booktitle> 2 and 4, </booktitle> <address> pp.58-69 and 170-181, </address> <year> 1993. </year>
Reference-contexts: It has an immediate application to sensor-based motion planning of an autonomous underwater vehicle (AUV ) [3]. 1 Recently, applications of genetic algorithms (GAs for short) <ref> [1, 4] </ref> to path planning or trajectory planning have been recognized [2, 6, 9, 10, 15]. GA is a search strategy using a mechanism analogous to evolution of life in nature. <p> Similarly, y-monotone is defined. When there is no confusion, we simply say monotone. A genetic algorithm (GA) <ref> [1, 4] </ref> 2 for an optimization problem consists of two major components. First, GA maintains a population of individuals, where each individual corresponds to a candidate solution and the population is a collection of such potential solutions. In GA, an individual is commonly represented by a binary string. <p> Thus, the path can be encoded into a binary string of the fixed length proportional to n as shown in Figure 1. Note that the path in Figure 1 is x-monotone, but not y-monotone. 2 What we call GA in this paper is the so-called simple GA <ref> [1, 4] </ref>. 3 0 01000000 10000000 01000000 11000000 direction distance monotone w.r.t. x y .. . 00100011 n-1 pairs of direction and distance The first bit ff indicates that a path is x-monotone if ff = 0; and it is y-monotone if ff = 1. <p> The initial population includes binary strings generated by selecting directions and distances randomly as well as binary strings representing the straight-line path connecting s and d. Two genetic operators are used. The first one is a 1-point crossover <ref> [1] </ref> which gets two individuals, cuts their strings at a randomly chosen position, swaps their second substrings, and produces two new strings of the original length. It has a parameter called crossover rate that is the ratio of individuals involved in the crossover over the entire population. <p> It has a parameter called crossover rate that is the ratio of individuals involved in the crossover over the entire population. The second genetic operator is a mutation <ref> [1] </ref> which gets an individual, flips bits of its string at random, and produces a new string. It has a parameter called mutation rate that is the probability of bit alternation per bit on a string. In this implementation, all parents are replaced by their offspring.
Reference: [2] <author> Pierre Bessiere, Juan-Manuel Ahuactzin, El-Ghazali Talbi and Emmanuel Mazer, </author> <title> "The "ARIADNE'S CLEW" algorithm: Global planning with local methods," </title> <booktitle> Proc. 1993 IEEE/RSJ Int'l Conf. on Intelligent Robots and Systems, </booktitle> <volume> Vol. </volume> <pages> 2, </pages> <address> Yokohama, Japan, </address> <month> July </month> <year> 1993, </year> <month> pp.1373-1380. </month>
Reference-contexts: It has an immediate application to sensor-based motion planning of an autonomous underwater vehicle (AUV ) [3]. 1 Recently, applications of genetic algorithms (GAs for short) [1, 4] to path planning or trajectory planning have been recognized <ref> [2, 6, 9, 10, 15] </ref>. GA is a search strategy using a mechanism analogous to evolution of life in nature. It has widely been recognized that GA works even for complex problems such that traditional algorithms cannot find a satisfactory solution within a reasonable amount of time [5].
Reference: [3] <author> Song K. Choi, Junku Yuh and Gregg Y. Takashige, </author> <title> "Design of an Omni-Directional Intelligent Navigator," in Underwater Robotic Vehicles: Design and Control , J. </title> <editor> Yuh (Ed.), </editor> <publisher> TSI Press, </publisher> <address> Albuquerque, New Mexico, pp.277-297, </address> <year> 1995. </year>
Reference-contexts: In this paper, we address adaptive motion planning which can modify the existing path whenever an environmental change occurs (e.g., a mobile robot detects an unknown obstacle). It has an immediate application to sensor-based motion planning of an autonomous underwater vehicle (AUV ) <ref> [3] </ref>. 1 Recently, applications of genetic algorithms (GAs for short) [1, 4] to path planning or trajectory planning have been recognized [2, 6, 9, 10, 15]. GA is a search strategy using a mechanism analogous to evolution of life in nature. <p> They have an immediate application to motion planning of an autonomous underwater vehicle [14]. Thus one of future directions of our research is to test the proposed GAs on an autonomous underwater vehicle such as ODIN <ref> [3] </ref> which was developed at the University of Hawaii.
Reference: [4] <author> David E. Goldberg, </author> <title> Genetic Algorithms in Search, Optimization, and Machine Learning, </title> <publisher> Addison-Wesley, </publisher> <year> 1989. </year>
Reference-contexts: It has an immediate application to sensor-based motion planning of an autonomous underwater vehicle (AUV ) [3]. 1 Recently, applications of genetic algorithms (GAs for short) <ref> [1, 4] </ref> to path planning or trajectory planning have been recognized [2, 6, 9, 10, 15]. GA is a search strategy using a mechanism analogous to evolution of life in nature. <p> Similarly, y-monotone is defined. When there is no confusion, we simply say monotone. A genetic algorithm (GA) <ref> [1, 4] </ref> 2 for an optimization problem consists of two major components. First, GA maintains a population of individuals, where each individual corresponds to a candidate solution and the population is a collection of such potential solutions. In GA, an individual is commonly represented by a binary string. <p> Thus, the path can be encoded into a binary string of the fixed length proportional to n as shown in Figure 1. Note that the path in Figure 1 is x-monotone, but not y-monotone. 2 What we call GA in this paper is the so-called simple GA <ref> [1, 4] </ref>. 3 0 01000000 10000000 01000000 11000000 direction distance monotone w.r.t. x y .. . 00100011 n-1 pairs of direction and distance The first bit ff indicates that a path is x-monotone if ff = 0; and it is y-monotone if ff = 1. <p> Second, straightforward applications of genetic operators to strings of the fixed length always produce syntactically valid strings. This simplifies a process of recombination and makes the entire GA efficient. Therefore, with the coding, a simple GA <ref> [4] </ref> works well without any special operator. There is a potential disadvantage which we noticed through simulation study presented in the next section.
Reference: [5] <author> David E. Goldberg, </author> <title> "Genetic and evolutionary algorithms come of age," </title> <journal> Commun. ACM , Vol. </journal> <volume> 37, No. 3, pp.113-119, </volume> <month> March </month> <year> 1994. </year>
Reference-contexts: GA is a search strategy using a mechanism analogous to evolution of life in nature. It has widely been recognized that GA works even for complex problems such that traditional algorithms cannot find a satisfactory solution within a reasonable amount of time <ref> [5] </ref>. However, the previously proposed GAs have drawbacks and could not fully exploit benefits and ability of GAs. First, a coding which maps solutions to symbolic representations often employs a variable-length string such as a sequence of line segments in path planning [9, 10].
Reference: [6] <author> Cem Hocaoglu and Arthur C. Sanderson, </author> <title> "Planning multi-paths using speciation in genetic algorithms," </title> <booktitle> Proc. 1997 IEEE Int'l Conf. on Evolutionary Computation, </booktitle> <address> Nagoya, Japan, </address> <month> May </month> <year> 1996, </year> <note> pp.378-383. 14 </note>
Reference-contexts: It has an immediate application to sensor-based motion planning of an autonomous underwater vehicle (AUV ) [3]. 1 Recently, applications of genetic algorithms (GAs for short) [1, 4] to path planning or trajectory planning have been recognized <ref> [2, 6, 9, 10, 15] </ref>. GA is a search strategy using a mechanism analogous to evolution of life in nature. It has widely been recognized that GA works even for complex problems such that traditional algorithms cannot find a satisfactory solution within a reasonable amount of time [5].
Reference: [7] <author> Young K. Hwang and Narendra Ahuja, </author> <title> "Gross motion planning | A survey," </title> <journal> ACM Compt. Surveys, </journal> <volume> Vol. 24, No. 3, pp.219-291, </volume> <month> Sept. </month> <year> 1992. </year>
Reference-contexts: 1 Introduction Motion planning <ref> [7, 8] </ref> is one of important tasks in intelligent control of an autonomous mobile robot. It is often decomposed into path planning and trajectory planning, although they are not independent of each other. <p> Trajectory planning is to schedule the movement of a mobile robot along the planned path. There have been a number of methods proposed for motion planning of a mobile robot <ref> [7] </ref>. However, few algorithms have been developed for on-line motion planning of a mobile robot in a time-varying or unknown terrain. In this paper, we address adaptive motion planning which can modify the existing path whenever an environmental change occurs (e.g., a mobile robot detects an unknown obstacle).
Reference: [8] <author> Jean-Claude Latombe, </author> <title> Robot Motion Planning, </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1991. </year>
Reference-contexts: 1 Introduction Motion planning <ref> [7, 8] </ref> is one of important tasks in intelligent control of an autonomous mobile robot. It is often decomposed into path planning and trajectory planning, although they are not independent of each other.
Reference: [9] <author> Hoi-Shan Lin, Jiang Xiao and Zbigniew Michalewicz, </author> <title> "Evolutionary algorithm for path planning in mobile robot environment," </title> <booktitle> Proc. 1st IEEE Conf. on Evolutionary Computation, Vol. I, </booktitle> <address> Orland, FL, </address> <year> 1994, </year> <month> pp.211-216. </month>
Reference-contexts: It has an immediate application to sensor-based motion planning of an autonomous underwater vehicle (AUV ) [3]. 1 Recently, applications of genetic algorithms (GAs for short) [1, 4] to path planning or trajectory planning have been recognized <ref> [2, 6, 9, 10, 15] </ref>. GA is a search strategy using a mechanism analogous to evolution of life in nature. It has widely been recognized that GA works even for complex problems such that traditional algorithms cannot find a satisfactory solution within a reasonable amount of time [5]. <p> However, the previously proposed GAs have drawbacks and could not fully exploit benefits and ability of GAs. First, a coding which maps solutions to symbolic representations often employs a variable-length string such as a sequence of line segments in path planning <ref> [9, 10] </ref>. Since the string length of an optimal solution is not known, the configuration (e.g., genetic operators) of a GA must be designed in an ad hoc manner to guarantee generation of strings of any lengths. Second, the GAs solve either path planning or trajectory planning, but not both.
Reference: [10] <author> Takanori Shibata and Toshio Fukuda, </author> <title> "Intelligent motion planning by genetic algorithm with fuzzy critic," </title> <booktitle> Proc. 8th IEEE Int'l Symp. on Intelligent Control , Chicago, </booktitle> <address> IL, </address> <month> Aug. </month> <year> 1993, </year> <month> pp.565-570. </month>
Reference-contexts: It has an immediate application to sensor-based motion planning of an autonomous underwater vehicle (AUV ) [3]. 1 Recently, applications of genetic algorithms (GAs for short) [1, 4] to path planning or trajectory planning have been recognized <ref> [2, 6, 9, 10, 15] </ref>. GA is a search strategy using a mechanism analogous to evolution of life in nature. It has widely been recognized that GA works even for complex problems such that traditional algorithms cannot find a satisfactory solution within a reasonable amount of time [5]. <p> However, the previously proposed GAs have drawbacks and could not fully exploit benefits and ability of GAs. First, a coding which maps solutions to symbolic representations often employs a variable-length string such as a sequence of line segments in path planning <ref> [9, 10] </ref>. Since the string length of an optimal solution is not known, the configuration (e.g., genetic operators) of a GA must be designed in an ad hoc manner to guarantee generation of strings of any lengths. Second, the GAs solve either path planning or trajectory planning, but not both.
Reference: [11] <author> John Smith and Kazuo Sugihara, </author> <title> "GA toolkit on the Web," </title> <booktitle> Proc. 1st Online Workshop on Soft Computing, </booktitle> <month> Aug. </month> <year> 1996, </year> <month> pp.93-98. </month>
Reference-contexts: Therefore, it is feasible to solve path planning in a large area with a sufficiently fine-grained grid. We have implemented the GA for path planning by using the GA Toolkit <ref> [11] </ref> which we developed for design and prototyping of GAs on WWW. 3 For convenience, we changed minimization of a path into maximization by defining the fitness function as (1 + w max )n 2 (the length of a weighted path) if the path does not intersect any solid obstacle and <p> It is worth to investigate further whether this idea works and how to find such an appropriate schedule and timing for incremental input. 7 4 Simulation Results We have conducted simulation study of the proposed GA by using the GA toolkit <ref> [11] </ref>. The GA was first tuned by preliminary simulation on the terrain in Figure 2 and two more terrains of similar sizes.
Reference: [12] <author> John Smith, </author> <title> Parallel Genetic Algorithm Toolkit for the World Wide Web, </title> <type> Master Thesis, </type> <institution> Dept. of Information and Computer Sciences, Univ. of Hawaii at Manoa, </institution> <month> Dec. </month> <year> 1996. </year>
Reference: [13] <author> Kazuo Sugihara, </author> <title> "Measures for performance evaluation of genetic algorithms," </title> <booktitle> Proc. 3rd Joint Conference on Information Sciences (JCIS '97), Vol. I, </booktitle> <address> Research Triangle Park, NC, </address> <month> March </month> <year> 1997, </year> <month> pp.172-175. </month>
Reference-contexts: The GA was first tuned by preliminary simulation on the terrain in Figure 2 and two more terrains of similar sizes. The simulation examined all combinations of 3 selection operators, 3 genetic operators, 1 mutation operator, and various parameter values for each operator with respect to several performance measures <ref> [13] </ref> such as the average fitness value and likelihood of optimality L opt (k) which is the estimated probability of finding an optimal solution within k generations. Preliminary simulation with 100 runs for each combination suggested the following tun ing [13]. 1. <p> values for each operator with respect to several performance measures <ref> [13] </ref> such as the average fitness value and likelihood of optimality L opt (k) which is the estimated probability of finding an optimal solution within k generations. Preliminary simulation with 100 runs for each combination suggested the following tun ing [13]. 1. Operators: A sequence of roulette tournament selection, 1-point crossover and multi point mutation is best. 2. Population size p = 30: It is the number of individuals in a population. This choice is for the grid size 16 fi 16. 3.
Reference: [14] <author> Kazuo Sugihara and Junku Yuh, </author> <title> "GA-based motion planning for underwater robotic vehicles," </title> <booktitle> Proc. 10th International Symposium on Unmanned Untethered Submersible Technology (UUST-10), </booktitle> <address> Durham, NH, </address> <month> Sept. </month> <year> 1997, </year> <note> to appear. </note>
Reference-contexts: Thus, if there are obstacles restricting the areas that optimal paths go through, it is possible that the speed of evolution in a GA slows down once almost the entire path except the beginning part becomes identical to an optimal path. Although we have some idea <ref> [14] </ref>, it will be discussed in a subsequent paper. Now, we analyze space requirements of the GA. Since the GA does not need any special data structure for storing map data of a terrain, it does not require any more space for the terrain information than other algorithms. <p> Since the GAs are adaptive so that they work even if an environment is time-varying or unknown, the GAs are suitable for both off-line and on-line motion planning. They have an immediate application to motion planning of an autonomous underwater vehicle <ref> [14] </ref>. Thus one of future directions of our research is to test the proposed GAs on an autonomous underwater vehicle such as ODIN [3] which was developed at the University of Hawaii.
Reference: [15] <author> H. Y. Xu and G. Vukovich, </author> <title> "Fuzzy evolutionary algorithms and automatic robot trajectory generation," </title> <booktitle> Proc. 1st IEEE Conf. on Evolutionary Computation, Vol. II, </booktitle> <address> Orland, FL, </address> <year> 1994, </year> <month> pp.595-600. </month>
Reference-contexts: It has an immediate application to sensor-based motion planning of an autonomous underwater vehicle (AUV ) [3]. 1 Recently, applications of genetic algorithms (GAs for short) [1, 4] to path planning or trajectory planning have been recognized <ref> [2, 6, 9, 10, 15] </ref>. GA is a search strategy using a mechanism analogous to evolution of life in nature. It has widely been recognized that GA works even for complex problems such that traditional algorithms cannot find a satisfactory solution within a reasonable amount of time [5].
References-found: 15

