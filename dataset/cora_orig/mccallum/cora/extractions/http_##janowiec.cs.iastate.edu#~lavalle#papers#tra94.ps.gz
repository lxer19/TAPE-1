URL: http://janowiec.cs.iastate.edu/~lavalle/papers/tra94.ps.gz
Refering-URL: http://janowiec.cs.iastate.edu/~lavalle/
Root-URL: http://www.cs.iastate.edu
Email: lavalle@cs.iastate.edu seth@uiuc.edu  
Title: Optimal Motion Planning for Multiple Robots Having Independent Goals  
Author: Steven M. LaValle Seth A. Hutchinson 
Address: Ames, IA 50011 Urbana, IL 61801  
Affiliation: Dept. of Computer Science Dept. of Elect. Comp. Engineering Iowa State University University of Illinois  
Abstract: This work makes two contributions to geometric motion planning for multiple robots: i) Motion plans are computed that simultaneously optimize an independent performance measure for each robot; ii) A general spectrum is defined between decoupled and centralized planning, in which we introduce coordination along independent roadmaps. By considering independent performance measures, we introduce a form of optimality that is consistent with concepts from multi-objective optimization and game theory literature. Previous multiple-robot motion planning approaches that consider optimality combine individual performance measures into a scalar criterion. As a result, these methods can fail to find many potentially useful motion plans. We present implemented, multiple-robot motion planning algorithms that are derived from the principle of optimality, for three problem classes along the spectrum between centralized and decoupled planning: i) coordination along fixed, independent paths; ii) coordination along independent roadmaps; iii) general, unconstrained motion planning. Computed examples are presented for all three problem classes that illustrate the concepts and algorithms. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. D. Ardema and J. M. Skowronski. </author> <title> Dynamic game applied to coordination control of two arm robotic system. </title> <editor> In R. P. Hamalainen and H. K. Ehtamo, editors, </editor> <booktitle> Differential Games Developments in Modelling and Computation, </booktitle> <pages> pages 118-130. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1991. </year>
Reference-contexts: Previous approaches to multiple-robot motion planning are often categorized as centralized or decoupled. A centralized approach typically constructs a path in a composite configuration space, which is formed by forming the Cartesian product of the configuration spaces of the individual robots (e.g., <ref> [1, 3, 20] </ref>). A decoupled approach typically generates paths for each robot independently, and then considers the interactions between the robots (e.g., [7, 10]). In [6, 9, 16] robot paths are independently determined, and a coordination diagram is used to plan a collision-free trajectory along the paths. <p> We have also shown through homotopy that few minimal quotient strategies will typically exist, and present an algorithm that determines the minimal quotient strategies. 3.1 Concepts and Definitions We assume that each robot, A i , is given a path, t i , which is a continuous mapping <ref> [0; 1] </ref> ! C i valid . Without loss of generality, assume that the parameterization of t i is of constant speed. Let S i = [0; 1] denote the set of parameter values that place the robot along the path t i . <p> 3.1 Concepts and Definitions We assume that each robot, A i , is given a path, t i , which is a continuous mapping <ref> [0; 1] </ref> ! C i valid . Without loss of generality, assume that the parameterization of t i is of constant speed. Let S i = [0; 1] denote the set of parameter values that place the robot along the path t i . We define a path coordination space as S = S 1 fi S 2 fi fi S N . <p> Discretized time allows S to be represented by a finite number of locations, which correspond to possible positions along the paths at time kt for some k. For each robot, say A 1 , we partition the interval S 1 = <ref> [0; 1] </ref> into values that are indexed by i 1 2 f0; 1; : : : ; i 1 max g, in which i 1 max is given by blength (t 1 )=kv 1 ktc. Each indexed value yields t 1 (i 1 kv 1 kt=length (t 1 )). <p> A different strategy, fl 0 2 ~ yields a trajectory ff fl 0 . The two paths ff fl and ff 0 fl are homotopic in ~ S valid (with endpoints fixed) if there exists a continuous map h : [0; T ] fi <ref> [0; 1] </ref> ! ~ S valid with h (t; 0) = ff fl (t) and h (t; 1) = ff fl 0 (t) for all t 2 [0; T ], and h (0; s) = h (0; 0) and h (1; s) = h (1; 0) for all s 2 [0; <p> <ref> [0; 1] </ref> ! ~ S valid with h (t; 0) = ff fl (t) and h (t; 1) = ff fl 0 (t) for all t 2 [0; T ], and h (0; s) = h (0; 0) and h (1; s) = h (1; 0) for all s 2 [0; 1]. This homotopy determines an equivalence relation on the state trajectories, and hence on the space of strategies, ~ . <p> those from the last section; however, the topological structure of a Cartesian product of roadmaps makes this problem more complex. 10 4.1 Concepts and Definitions We consider a roadmap for A i to be a collection of constant-speed curves, T i , such that for each t i j : <ref> [0; 1] </ref> ! C i valid . The endpoints of some paths coincide in C i valid , to form a network. Recall that in the previous section we considered robot coordination on the Cartesian product of unit intervals, which represented the domains of the paths. <p> If u i k = ;, then the robot remains motionless. The state transition equation for robot A i is x i " k <ref> [1] </ref> + kv i kt cos (u i x i k ) : (17) Suppose that at some stage k, the optimal strategy is known for each stage i 2 fk; : : : ; Kg.
Reference: [2] <author> T. Ba~sar and G. J. Olsder. </author> <title> Dynamic Noncooperative Game Theory. </title> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1982. </year>
Reference-contexts: We also show that the minimal strategies are consistent with certain optimality concepts from multiobjective optimization (e.g., [19]) and dynamic game theory (e.g., <ref> [2] </ref>) literature. Previous approaches to multiple-robot motion planning are often categorized as centralized or decoupled. A centralized approach typically constructs a path in a composite configuration space, which is formed by forming the Cartesian product of the configuration spaces of the individual robots (e.g., [1, 3, 20]). <p> g i (t; x i (t); u i (t))dt (12) c k (x ()) = 0 if x (t) 62 S coll 8t 2 [(k 1)t; kt] 1 otherwise : (13) k and q i terms of (11) comprise the standard terms that appear in a discrete-time dynamic optimization context <ref> [2] </ref>. The middle term, c ij k represents the interaction between the robots, by penalizing collision. As will be seen shortly, l i k will typically be considered as a constant, which for instance, measures time.
Reference: [3] <author> J. Barraquand and J.-C. Latombe. </author> <title> Robot motion planning: A distributed representation approach. </title> <journal> Int. J. Robot. Res., </journal> <volume> 10(6) </volume> <pages> 628-649, </pages> <month> December </month> <year> 1991. </year>
Reference-contexts: Previous approaches to multiple-robot motion planning are often categorized as centralized or decoupled. A centralized approach typically constructs a path in a composite configuration space, which is formed by forming the Cartesian product of the configuration spaces of the individual robots (e.g., <ref> [1, 3, 20] </ref>). A decoupled approach typically generates paths for each robot independently, and then considers the interactions between the robots (e.g., [7, 10]). In [6, 9, 16] robot paths are independently determined, and a coordination diagram is used to plan a collision-free trajectory along the paths. <p> The algorithm terminates when all states have been considered. This algorithm could be viewed as a multiple-objective extension of the wavefront algorithm that is used in <ref> [3] </ref>. 4.3 Computed Examples We present some computed examples that were obtained with the algorithm in Figure 2. There were 1620 collision checks which took 18s, and the solution computation took 17s.
Reference: [4] <author> A. G. Barto, R. S. Sutton, and C. J. C. H. Watkins. </author> <title> Learning and sequential decision making. </title> <editor> In M. Gabriel and J.W. Moore, editors, </editor> <booktitle> Learning and Computational Neuroscience: Foundations of Adaptive Networks, </booktitle> <pages> pages 539-602. </pages> <publisher> MIT Press, </publisher> <year> 1990. </year>
Reference-contexts: The generation of these solutions is significantly more challenging in comparison to the standard case of scalar optimization. Many variations of dynamic programming for scalar optimization have been applied in motion planning (e.g., [11, 15, 22]) and in AI planning (e.g., <ref> [4, 5, 23] </ref>); however, techniques are presented in this paper to derive multiple solutions for the case of multiple, independent performance measures. 2 Problem Definition and General Concepts 2.1 Basic Definitions Each robot, A i , is considered as a rigid object, capable of moving in a workspace that is a
Reference: [5] <author> K. Basye, T. Dean, J. Kirman, and M. Lejter. </author> <title> A decision-theoretic approach to planning, </title> <journal> perception, and control. IEEE Expert, </journal> <volume> 7(4) </volume> <pages> 58-65, </pages> <month> August </month> <year> 1992. </year>
Reference-contexts: The generation of these solutions is significantly more challenging in comparison to the standard case of scalar optimization. Many variations of dynamic programming for scalar optimization have been applied in motion planning (e.g., [11, 15, 22]) and in AI planning (e.g., <ref> [4, 5, 23] </ref>); however, techniques are presented in this paper to derive multiple solutions for the case of multiple, independent performance measures. 2 Problem Definition and General Concepts 2.1 Basic Definitions Each robot, A i , is considered as a rigid object, capable of moving in a workspace that is a
Reference: [6] <author> Z. Bien and J. Lee. </author> <title> A minimum-time trajectory planning method for two robots. </title> <journal> IEEE Trans. Robot. & Autom., </journal> <volume> 8(3) </volume> <pages> 414-418, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: This final point differs from previous approaches to multiple-robot motion planning. Typically, if optimality is considered, individual performance measures for the robots are combined into a single scalar criterion. For example, in <ref> [6, 21] </ref> the criterion is to minimize the time taken by the last robot to reach the goal. In [24], the performance measures are added to yield a scalar criterion. <p> A decoupled approach typically generates paths for each robot independently, and then considers the interactions between the robots (e.g., [7, 10]). In <ref> [6, 9, 16] </ref> robot paths are independently determined, and a coordination diagram is used to plan a collision-free trajectory along the paths.
Reference: [7] <author> S. J. Buckley. </author> <title> Fast motion planning for multiple moving robots. </title> <booktitle> In IEEE Int. Conf. Robot. & Autom., </booktitle> <pages> pages 322-326, </pages> <year> 1989. </year> <month> 15 </month>
Reference-contexts: A decoupled approach typically generates paths for each robot independently, and then considers the interactions between the robots (e.g., <ref> [7, 10] </ref>). In [6, 9, 16] robot paths are independently determined, and a coordination diagram is used to plan a collision-free trajectory along the paths.
Reference: [8] <author> J. F. Canny. </author> <title> The Complexity of Robot Motion Planning. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1988. </year>
Reference-contexts: By utilizing this view, we show that many useful solutions can be obtained by constraining the robots to travel on independent networks of paths called roadmaps. Many approaches exist that construct roadmaps for a single robot (e.g., <ref> [8, 17] </ref>), which can be used as a preprocessing step in our coordination approach. Our algorithms are based on applying the dynamic programming principle to generate multiple solutions in a partially-ordered space of motion strategies.
Reference: [9] <author> C. Chang, M. J. Chung, and B. H. Lee. </author> <title> Collision avoidance of two robot manipulators by minimum delay time. </title> <journal> IEEE Trans. Syst., Man, Cybern., </journal> <volume> 24(3) </volume> <pages> 517-522, </pages> <year> 1994. </year>
Reference-contexts: A decoupled approach typically generates paths for each robot independently, and then considers the interactions between the robots (e.g., [7, 10]). In <ref> [6, 9, 16] </ref> robot paths are independently determined, and a coordination diagram is used to plan a collision-free trajectory along the paths.
Reference: [10] <author> M. Erdmann and T. Lozano-Perez. </author> <title> On multiple moving objects. </title> <booktitle> In IEEE Int. Conf. Robot. & Autom., </booktitle> <pages> pages 1419-1424, </pages> <year> 1986. </year>
Reference-contexts: A decoupled approach typically generates paths for each robot independently, and then considers the interactions between the robots (e.g., <ref> [7, 10] </ref>). In [6, 9, 16] robot paths are independently determined, and a coordination diagram is used to plan a collision-free trajectory along the paths. <p> Since we focus on the geometric aspects of a motion planning problem, we will compute trajectories that apparently allow a robot to switch instantaneously between a fixed speed kv i k and halting. This represents a typical assumption in multiple-robot motion planning <ref> [10, 12, 16] </ref>. In a sense, the results we ultimately obtain will involve both path and scheduling information.
Reference: [11] <author> H. Hu, M. Brady, and P. Probert. </author> <title> Coping with uncertainty in control and planning for a mobile robot. </title> <booktitle> In IEEE/RSJ Int. Workshop on Intelligent Robots and Systems, </booktitle> <pages> pages 1025-1030, </pages> <address> Osaka, Japan, </address> <month> November </month> <year> 1991. </year>
Reference-contexts: The generation of these solutions is significantly more challenging in comparison to the standard case of scalar optimization. Many variations of dynamic programming for scalar optimization have been applied in motion planning (e.g., <ref> [11, 15, 22] </ref>) and in AI planning (e.g., [4, 5, 23]); however, techniques are presented in this paper to derive multiple solutions for the case of multiple, independent performance measures. 2 Problem Definition and General Concepts 2.1 Basic Definitions Each robot, A i , is considered as a rigid object, capable
Reference: [12] <author> K. Kant and S. W. Zucker. </author> <title> Toward efficient trajectory planning: The path-velocity decomposition. </title> <journal> Int. J. Robot. Res., </journal> <volume> 5(3) </volume> <pages> 72-89, </pages> <year> 1986. </year>
Reference-contexts: Since we focus on the geometric aspects of a motion planning problem, we will compute trajectories that apparently allow a robot to switch instantaneously between a fixed speed kv i k and halting. This represents a typical assumption in multiple-robot motion planning <ref> [10, 12, 16] </ref>. In a sense, the results we ultimately obtain will involve both path and scheduling information.
Reference: [13] <author> J.-C. Latombe. </author> <title> Robot Motion Planning. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, MA, </address> <year> 1991. </year>
Reference-contexts: The closure of the subset of C i that corresponds to configurations in which A i does not intersect any obstacles is referred to as the valid configuration space, C i valid <ref> [13] </ref>. We define a state space, X, that simultaneously represents the configurations of all of the robots. A natural choice for the state space is X = C 1 valid fi C 2 valid fi fi C N valid ; (1) in which fi denotes the Cartesian product. <p> This is a widely-utilized assumption that forms the basis of motion planning research (see <ref> [13] </ref> and references therein). We expect that in many applications, especially mobile robotics, optimal solutions generated with the first 3 module will be suitable for an integrated system. <p> The discrete-time representation induces a discretization of the state space, which is typically obtained in motion planning research (e.g., [16]). The tradeoff is that general completeness is sacrificed, and replaced by resolution completeness, which is typically applied to 6 approximate decomposition methods <ref> [13] </ref>. This implies that our method will find solutions that exist at a certain resolution, and this resolution can be arbitrarily improved. We assume that we can send an action (or motion command) to each robot every t seconds. <p> An individual roadmap could also be extended to cover a new initial or goal position in a motion planning query <ref> [13] </ref>. During the time interval [(k 1)t; kt] each robot can decide to either remain motionless, or move a distance kv i kt in either direction along a path.
Reference: [14] <author> S. M. LaValle. </author> <title> A Game-Theoretic Framework for Robot Motion Planning. </title> <type> PhD thesis, </type> <institution> University of Illinois, Urbana, IL, </institution> <month> July </month> <year> 1995. </year>
Reference-contexts: and [fl fl ] L are not incomparable, then [fl fl ] L [fl] L . 2.3 Relationships to Established Forms of Optimality In this section we briefly state how the minimal strategies relate to optimality concepts from multiobjective optimization and dynamic game theory; a more thorough discussion appears in <ref> [14] </ref>. The minimal quotient strategies are equivalent to the nondominated strategies used in multiobjective optimization and Pareto optimal strategies used in cooperative game theory. Furthermore, we have shown [14] that under the general loss functional (6), the minimal strategies satisfy the Nash equilibrium condition from noncooperative game theory, which implies that <p> state how the minimal strategies relate to optimality concepts from multiobjective optimization and dynamic game theory; a more thorough discussion appears in <ref> [14] </ref>. The minimal quotient strategies are equivalent to the nondominated strategies used in multiobjective optimization and Pareto optimal strategies used in cooperative game theory. Furthermore, we have shown [14] that under the general loss functional (6), the minimal strategies satisfy the Nash equilibrium condition from noncooperative game theory, which implies that for a strategy fl fl = ffl 1fl : : : fl Nfl g, the following holds for each i and each fl i 2 i : L <p> It has been shown that for a fixed fi, if fl fl is a strategy that minimizes H (fl; fi), then the quotient strategy, [fl fl ] L is minimal <ref> [14] </ref>. 3 Motion Planning Along Fixed Paths In this section we consider the problem of coordinating the motions of multiple robots, when each robot is independently constrained to traverse a fixed path. This work makes some new contributions to the problem of coordinating multiple robots along fixed paths. <p> The proof of this and remaining propositions appear in <ref> [14] </ref>. <p> A more thorough presentation appears in <ref> [14] </ref>. 5.1 Concepts and Definitions We first choose a vector fi such that a linear scalarizing function, H, is defined using (9). As opposed to a point goal in X, we allow each robot goal to be a subset, X i G X i .
Reference: [15] <author> J. Miura and Y. Shirai. </author> <title> Planning of vision and motion for a mobile robot using a probabilistic model of uncertainty. </title> <booktitle> In IEEE/RSJ Int. Workshop on Intelligent Robots and Systems, </booktitle> <pages> pages 403-408, </pages> <address> Osaka, Japan, </address> <month> May </month> <year> 1991. </year>
Reference-contexts: The generation of these solutions is significantly more challenging in comparison to the standard case of scalar optimization. Many variations of dynamic programming for scalar optimization have been applied in motion planning (e.g., <ref> [11, 15, 22] </ref>) and in AI planning (e.g., [4, 5, 23]); however, techniques are presented in this paper to derive multiple solutions for the case of multiple, independent performance measures. 2 Problem Definition and General Concepts 2.1 Basic Definitions Each robot, A i , is considered as a rigid object, capable
Reference: [16] <author> P. A. O'Donnell and T. Lozano-Perez. </author> <title> Deadlock-free and collision-free coordination of two robot manipulators. </title> <booktitle> In IEEE Int. Conf. Robot. & Autom., </booktitle> <pages> pages 484-489, </pages> <year> 1989. </year>
Reference-contexts: A decoupled approach typically generates paths for each robot independently, and then considers the interactions between the robots (e.g., [7, 10]). In <ref> [6, 9, 16] </ref> robot paths are independently determined, and a coordination diagram is used to plan a collision-free trajectory along the paths. <p> Since we focus on the geometric aspects of a motion planning problem, we will compute trajectories that apparently allow a robot to switch instantaneously between a fixed speed kv i k and halting. This represents a typical assumption in multiple-robot motion planning <ref> [10, 12, 16] </ref>. In a sense, the results we ultimately obtain will involve both path and scheduling information. <p> The discrete-time representation induces a discretization of the state space, which is typically obtained in motion planning research (e.g., <ref> [16] </ref>). The tradeoff is that general completeness is sacrificed, and replaced by resolution completeness, which is typically applied to 6 approximate decomposition methods [13]. This implies that our method will find solutions that exist at a certain resolution, and this resolution can be arbitrarily improved.
Reference: [17] <author> C. O'Dunlaing and C. K. Yap. </author> <title> A retraction method for planning the motion of a disc. </title> <journal> Journal of Algorithms, </journal> <volume> 6 </volume> <pages> 104-111, </pages> <year> 1982. </year>
Reference-contexts: By utilizing this view, we show that many useful solutions can be obtained by constraining the robots to travel on independent networks of paths called roadmaps. Many approaches exist that construct roadmaps for a single robot (e.g., <ref> [8, 17] </ref>), which can be used as a preprocessing step in our coordination approach. Our algorithms are based on applying the dynamic programming principle to generate multiple solutions in a partially-ordered space of motion strategies.
Reference: [18] <author> E. Rimon and D. E. Koditschek. </author> <title> Exact robot navigation using artificial potential fields. </title> <journal> IEEE Trans. Robot. & Autom., </journal> <volume> 8(5) </volume> <pages> 501-518, </pages> <month> October </month> <year> 1992. </year>
Reference-contexts: These iterations continue until k = 1. Finally, we take fl fl = ffl fl 1 ; : : : ; fl fl K g. The final cost-to-go function is essentially a global navigation function <ref> [18] </ref>. 5.2 Computed Examples We present a computed example that was obtained with the algorithm described in this section. The example involves motion planning for two robots, which are allowed to independently translate in &lt; 2 (without restriction to a path or roadmap).
Reference: [19] <author> Y. Sawaragi, H. Nakayama, and T. Tanino. </author> <title> Theory of Multiobjective Optimization. </title> <publisher> Academic Press, </publisher> <address> New York, NY, </address> <year> 1985. </year>
Reference-contexts: In [24], the performance measures are added to yield a scalar criterion. When individial performance measures are combined, certain information about potential solutions and alternatives is lost (for a general discussion, see <ref> [19] </ref>). For example, the amount of sacrifice that each robot makes to avoid other robots is not usually taken into account. It might be that one robot's goal is nearby, while the other robot has a distant goal. <p> If the same tasks are repeated and priorities change, then only needs to select an alternative minimal plan, as opposed to re-exploring the entire space of motion strategies. We also show that the minimal strategies are consistent with certain optimality concepts from multiobjective optimization (e.g., <ref> [19] </ref>) and dynamic game theory (e.g., [2]) literature. Previous approaches to multiple-robot motion planning are often categorized as centralized or decoupled. <p> In multiobjective optimization literature, this is referred to as scalarization <ref> [19] </ref>, in which a mapping that projects the loss vector to a scalar, while guaranteeing that optimizing the scalar loss produces a nondominated strategy. This function is used in Section 5, in an algorithm that determines minimal strategies.
Reference: [20] <author> J. T. Schwartz and M. Sharir. </author> <title> On the piano movers' problem: III. Coordinating the motion of several independent bodies. </title> <journal> Int. J. Robot. Res., </journal> <volume> 2(3) </volume> <pages> 97-140, </pages> <year> 1983. </year>
Reference-contexts: Previous approaches to multiple-robot motion planning are often categorized as centralized or decoupled. A centralized approach typically constructs a path in a composite configuration space, which is formed by forming the Cartesian product of the configuration spaces of the individual robots (e.g., <ref> [1, 3, 20] </ref>). A decoupled approach typically generates paths for each robot independently, and then considers the interactions between the robots (e.g., [7, 10]). In [6, 9, 16] robot paths are independently determined, and a coordination diagram is used to plan a collision-free trajectory along the paths.
Reference: [21] <author> K. G. Shin and Q. Zheng. </author> <title> Minimum-time collision-free trajectory planning for dual-robot systems. </title> <journal> IEEE Trans. Robot. & Autom., </journal> <volume> 8(5) </volume> <pages> 641-644, </pages> <month> October </month> <year> 1992. </year>
Reference-contexts: This final point differs from previous approaches to multiple-robot motion planning. Typically, if optimality is considered, individual performance measures for the robots are combined into a single scalar criterion. For example, in <ref> [6, 21] </ref> the criterion is to minimize the time taken by the last robot to reach the goal. In [24], the performance measures are added to yield a scalar criterion.
Reference: [22] <author> S.-H. Suh and K. G. Shin. </author> <title> A variational dynamic programming approach to robot-path planning with a distance-safety criterion. </title> <journal> IEEE Trans. Robot. & Autom., </journal> <volume> 4(3) </volume> <pages> 334-349, </pages> <month> June </month> <year> 1988. </year>
Reference-contexts: The generation of these solutions is significantly more challenging in comparison to the standard case of scalar optimization. Many variations of dynamic programming for scalar optimization have been applied in motion planning (e.g., <ref> [11, 15, 22] </ref>) and in AI planning (e.g., [4, 5, 23]); however, techniques are presented in this paper to derive multiple solutions for the case of multiple, independent performance measures. 2 Problem Definition and General Concepts 2.1 Basic Definitions Each robot, A i , is considered as a rigid object, capable
Reference: [23] <author> R. S. Sutton. </author> <title> Planning by incremental dynamic programming. </title> <booktitle> In Proceedings of the Eighth International Workshop on Machine Learning, </booktitle> <pages> pages 353-357. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1991. </year>
Reference-contexts: The generation of these solutions is significantly more challenging in comparison to the standard case of scalar optimization. Many variations of dynamic programming for scalar optimization have been applied in motion planning (e.g., [11, 15, 22]) and in AI planning (e.g., <ref> [4, 5, 23] </ref>); however, techniques are presented in this paper to derive multiple solutions for the case of multiple, independent performance measures. 2 Problem Definition and General Concepts 2.1 Basic Definitions Each robot, A i , is considered as a rigid object, capable of moving in a workspace that is a
Reference: [24] <author> F.-Y. Wang and P. J. A. Lever. </author> <title> A cell mapping method for general optimum trajectory planning of multiple robotic arms. </title> <booktitle> Robots and Autonomous Systems, </booktitle> <volume> 12 </volume> <pages> 15-27, </pages> <year> 1994. </year>
Reference-contexts: Typically, if optimality is considered, individual performance measures for the robots are combined into a single scalar criterion. For example, in [6, 21] the criterion is to minimize the time taken by the last robot to reach the goal. In <ref> [24] </ref>, the performance measures are added to yield a scalar criterion. When individial performance measures are combined, certain information about potential solutions and alternatives is lost (for a general discussion, see [19]).

References-found: 24

