URL: http://www.cs.toronto.edu/~micah/pubs/space.ps
Refering-URL: http://www.cs.toronto.edu/~micah/pubs/pubs.html
Root-URL: 
Email: gibbons@research.bell-labs.com.  matias@research.bell-labs.com.  
Title: Scheduling Space-Sharing for Internet Advertising  
Author: Micah Adler Phillip B. Gibbons Yossi Matias 
Note: Work done while visiting Bell Laboratories.  
Address: Room F1-119, Furstenallee 11, D-33102 Paderborn, Germany. micah@uni-paderborn.de.  Room 2D-148, 600 Mountain Avenue, Murray Hill NJ 07974.  Room 2D-146, 600 Mountain Avenue, Murray Hill NJ 07974.  
Affiliation: Heinz Nixdorf Institute,  Bell Laboratories, Lucent Technologies,  Bell Laboratories, Lucent Technologies,  
Date: July 8, 1997  
Abstract: This paper provides the first in-depth study of the algorithmic questions involved in the scheduling of space-sharing for Internet advertising. Given a set of ads specified by geometry and display frequency, we consider the problem of finding the optimal schedule of the entire set of ads, and, in the case where all the requested ads cannot be scheduled, determining the best subset of the ads that can be scheduled. We show that both problems are NP-Hard. However, we describe an algorithm that finds the optimal schedule when the allowed ad geometries are slightly restricted; this provides a 2-approximation for the unrestricted case. We also present an algorithm that provides a 2-approximation for the problem of finding the best subset of the ads that can be scheduled. We then consider the on-line scheduling problem, where requests to purchase ad space arrive sequentially and after each request arrives, a decision must be made whether or not to sell the requested space without knowledge of future requests. We provide an algorithm that makes these decisions in a manner that is optimal. 
Abstract-found: 1
Intro-found: 1
Reference: [BCR80] <author> B. Baker, E. Coffman, and R. Rivest. </author> <title> Orthogonal packings in two dimensions. </title> <journal> SIAM Journal of Computing, </journal> <volume> 9(4):846 - 855, </volume> <year> 1980. </year>
Reference-contexts: To our knowledge, bin packing with this additional requirement has not been previously considered. The ad placement problem can also be compared with the 2-D bin packing problem <ref> [BCR80, CGJT80, BS83] </ref>, in which rectangles must be placed into a strip of fixed width, where the objective is to minimize the height of the strip.
Reference: [Bel97] <author> Bellcore. </author> <title> Adapt/x advertiser(tm) product overview. </title> <note> See http://www.bellcore.com/ADAPTX/ADVERTISER/index.htm, 1997. </note>
Reference-contexts: Examples similar to the 2-D bin packing problem considered above show that changing any of the requirements can change the optimal schedule. There are a growing number of companies providing services for scheduling Internet advertising 4 (e.g., <ref> [Bel97] </ref>). To our knowledge, none of these permit the scheduling of ads of more than one shape, and there are no available references that provide details on the techniques used or the quality of the solutions provided. Outline.
Reference: [BS83] <author> B. Baker and J. Schwarz. </author> <title> Shelf algorithms for two-dimensional packing problems. </title> <journal> SIAM Journal on Computing, </journal> <volume> 12(3):508 - 525, </volume> <year> 1983. </year>
Reference-contexts: To our knowledge, bin packing with this additional requirement has not been previously considered. The ad placement problem can also be compared with the 2-D bin packing problem <ref> [BCR80, CGJT80, BS83] </ref>, in which rectangles must be placed into a strip of fixed width, where the objective is to minimize the height of the strip.
Reference: [CGJ87] <author> E. Coffman, M. Garey, and D. Johnson. </author> <title> Bin packing with divisible item sizes. </title> <journal> Journal of Complexity, </journal> <volume> 3:406 - 428, </volume> <year> 1987. </year>
Reference-contexts: We also show that this is the best possible for any on-line algorithm, even when randomness is used. 1.3 Previous work The power of using divisible sizes in a related context has been demonstrated in <ref> [CGJ87] </ref>, which considers variations on the bin packing problem using the same assumption.
Reference: [CGJT80] <author> E. Coffman, M. Garey, D. Johnson, and R. Tarjan. </author> <title> Performance bounds for level-oriented two-dimentional packing algorithms. </title> <journal> SIAM Journal on Computing, </journal> <volume> 9:808 - 826, </volume> <year> 1980. </year>
Reference-contexts: To our knowledge, bin packing with this additional requirement has not been previously considered. The ad placement problem can also be compared with the 2-D bin packing problem <ref> [BCR80, CGJT80, BS83] </ref>, in which rectangles must be placed into a strip of fixed width, where the objective is to minimize the height of the strip.
Reference: [CM96] <author> S. Chakrabarti and S. Muthukrishnan. </author> <title> Resource scheduling for parallel database and scientific applications. </title> <booktitle> In Proc. 8th ACM Symp. on Parallel Algorithms and Architectures, </booktitle> <pages> pages 329 - 335, </pages> <month> June </month> <year> 1996. </year>
Reference-contexts: Furthermore, we see in section 2 that the algorithm Best Fit, which works well in many bin packing scenarios, is not always the best algorithm to use for the ad placement problem. Many authors have considered the problem of scheduling parallel jobs on a set of processors; see, e.g., <ref> [CM96, GG75, FKST93, HSW96, LT94, SWW91, TSWY94, TWY92, Sch96] </ref>.
Reference: [Dou97] <institution> Homepage of DoubleClick. </institution> <note> See: http://www.doubleclick.net, 1997. </note>
Reference-contexts: These techniques allow advertisers to purchase small portions of expensive spaces, increasing the demand for advertising, and they allow users to be shown a greater variety of ads, increasing the overall advertising effectiveness <ref> [Dou97] </ref>. Also, space-sharing allows advertisers to target specific subsets of the audience, and in fact much of the existing software for scheduling Internet advertisements focuses on audience targeting [Dou97, Net97, W3.97]. This paper provides the first in-depth study of algorithmic questions involved in the scheduling of space-sharing for Internet advertising. <p> Also, space-sharing allows advertisers to target specific subsets of the audience, and in fact much of the existing software for scheduling Internet advertisements focuses on audience targeting <ref> [Dou97, Net97, W3.97] </ref>. This paper provides the first in-depth study of algorithmic questions involved in the scheduling of space-sharing for Internet advertising. We consider a scenario where the advertisements are specified in terms of three parameters.
Reference: [FKST93] <author> A. Feldmann, M. Kao, J. Sgall, and S. Teng. </author> <title> Optimal online scheduling of parallel jobs with dependencies. </title> <booktitle> In Proc. 25th ACM Symp. on the Theory of Computing, </booktitle> <pages> pages 642 - 651, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: Furthermore, we see in section 2 that the algorithm Best Fit, which works well in many bin packing scenarios, is not always the best algorithm to use for the ad placement problem. Many authors have considered the problem of scheduling parallel jobs on a set of processors; see, e.g., <ref> [CM96, GG75, FKST93, HSW96, LT94, SWW91, TSWY94, TWY92, Sch96] </ref>.
Reference: [GG75] <author> M. Garey and R. Graham. </author> <title> Bounds for multiprocessor scheduling with resource constraints. </title> <journal> SIAM Journal on Computing, </journal> <volume> 4(2):187 - 200, </volume> <year> 1975. </year>
Reference-contexts: Furthermore, we see in section 2 that the algorithm Best Fit, which works well in many bin packing scenarios, is not always the best algorithm to use for the ad placement problem. Many authors have considered the problem of scheduling parallel jobs on a set of processors; see, e.g., <ref> [CM96, GG75, FKST93, HSW96, LT94, SWW91, TSWY94, TWY92, Sch96] </ref>.
Reference: [HSW96] <author> L. Hall, D. Shmoys, and J. Wein. </author> <title> Scheduling to minimize average completion time: Offline and on-line algorithms. </title> <booktitle> In Proc. 7th ACM-SIAM Symp. on Discrete Algorithms, </booktitle> <pages> pages 142 - 151, </pages> <month> January </month> <year> 1996. </year>
Reference-contexts: Furthermore, we see in section 2 that the algorithm Best Fit, which works well in many bin packing scenarios, is not always the best algorithm to use for the ad placement problem. Many authors have considered the problem of scheduling parallel jobs on a set of processors; see, e.g., <ref> [CM96, GG75, FKST93, HSW96, LT94, SWW91, TSWY94, TWY92, Sch96] </ref>.
Reference: [KRS96] <author> Claire Kenyon, Yuval Rabani, and Alistair Sinclair. </author> <title> Biased random walks, lyapunov functions, and stochastic analysis of best fit bin packing. </title> <booktitle> Proc. 7th ACM-SIAM Symp. on Discrete Algorithms, </booktitle> <pages> pages 351-358, </pages> <year> 1996. </year>
Reference-contexts: We use the example depicted in figure 1, which when T = 4, has the (optimal) solution depicted in figure 2. An algorithm commonly used to approximate bin packing (see for example <ref> [KRS96] </ref>), called Best Fit, is to place each ad in the slot that would maximize the resulting fullness of the slot. However, in the given example, this places ad 1 and ad 2 in the same slot, after which ads 5,6,7 and 8 cannot be placed.
Reference: [LT94] <author> W. Ludwig and P. Tiwari. </author> <title> Scheduling malleable and nonmaleable parallel tasks. </title> <booktitle> In Proc. 5th ACM-SIAM Symp. on Discrete Algorithms, </booktitle> <pages> pages 167 - 176, </pages> <month> January </month> <year> 1994. </year>
Reference-contexts: Furthermore, we see in section 2 that the algorithm Best Fit, which works well in many bin packing scenarios, is not always the best algorithm to use for the ad placement problem. Many authors have considered the problem of scheduling parallel jobs on a set of processors; see, e.g., <ref> [CM96, GG75, FKST93, HSW96, LT94, SWW91, TSWY94, TWY92, Sch96] </ref>.
Reference: [Net97] <institution> Homepage of NetGravity. </institution> <note> See: http://www.netgravity.com, 1997. 12 </note>
Reference-contexts: Also, space-sharing allows advertisers to target specific subsets of the audience, and in fact much of the existing software for scheduling Internet advertisements focuses on audience targeting <ref> [Dou97, Net97, W3.97] </ref>. This paper provides the first in-depth study of algorithmic questions involved in the scheduling of space-sharing for Internet advertising. We consider a scenario where the advertisements are specified in terms of three parameters.
Reference: [Poi97] <institution> Homepage of PointCast. </institution> <note> See: http://www.pointcast.com/, 1997. </note>
Reference-contexts: Space providers that are accessed for longer periods of time include on-line news services, and in fact the on-line news service PointCast <ref> [Poi97] </ref> updates its advertising space periodically. It is also possible that advertisements in the future will appear on web browsers, another set of potential space providers that are accessed for longer periods of time.
Reference: [Sch96] <author> Uwe Schwiegelshohn. </author> <title> Preemptive weighted completion time scheduling of parallel jobs. </title> <booktitle> Proceedings of ESA 96, </booktitle> <volume> LNCS 1136, </volume> <pages> pages 39-51, </pages> <year> 1996. </year>
Reference-contexts: Furthermore, we see in section 2 that the algorithm Best Fit, which works well in many bin packing scenarios, is not always the best algorithm to use for the ad placement problem. Many authors have considered the problem of scheduling parallel jobs on a set of processors; see, e.g., <ref> [CM96, GG75, FKST93, HSW96, LT94, SWW91, TSWY94, TWY92, Sch96] </ref>.
Reference: [SWW91] <author> D. Shmoys, J. Wein, and D. Williamson. </author> <title> Scheduling parallel machines online. </title> <booktitle> In Proc. 32nd IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pages 131 - 140, </pages> <month> October </month> <year> 1991. </year>
Reference-contexts: Furthermore, we see in section 2 that the algorithm Best Fit, which works well in many bin packing scenarios, is not always the best algorithm to use for the ad placement problem. Many authors have considered the problem of scheduling parallel jobs on a set of processors; see, e.g., <ref> [CM96, GG75, FKST93, HSW96, LT94, SWW91, TSWY94, TWY92, Sch96] </ref>.
Reference: [TSWY94] <author> J. Turek, U. Schwiegelshohn, J. Wolf, and P. Yu. </author> <title> Scheduling parallel tasks to minimize average response time. </title> <booktitle> In Proc. 5th ACM-SIAM Symp. on Discrete Algorithms, </booktitle> <pages> pages 112 - 121, </pages> <month> January </month> <year> 1994. </year>
Reference-contexts: Furthermore, we see in section 2 that the algorithm Best Fit, which works well in many bin packing scenarios, is not always the best algorithm to use for the ad placement problem. Many authors have considered the problem of scheduling parallel jobs on a set of processors; see, e.g., <ref> [CM96, GG75, FKST93, HSW96, LT94, SWW91, TSWY94, TWY92, Sch96] </ref>.
Reference: [TWY92] <author> J. Turek, J. Wolf, and P. Yu. </author> <title> Approximate algorithms for scheduling parallelizable tasks. </title> <booktitle> In Proc. 4th ACM Symp. on Parallel Algorithms and Architectures, </booktitle> <pages> pages 323 - 332, </pages> <month> June-July </month> <year> 1992. </year>
Reference-contexts: Furthermore, we see in section 2 that the algorithm Best Fit, which works well in many bin packing scenarios, is not always the best algorithm to use for the ad placement problem. Many authors have considered the problem of scheduling parallel jobs on a set of processors; see, e.g., <ref> [CM96, GG75, FKST93, HSW96, LT94, SWW91, TSWY94, TWY92, Sch96] </ref>.
Reference: [W3.97] <institution> Homepage of W3.COM. </institution> <note> See: http://www.w3.com/home/, 1997. </note>
Reference-contexts: Also, space-sharing allows advertisers to target specific subsets of the audience, and in fact much of the existing software for scheduling Internet advertisements focuses on audience targeting <ref> [Dou97, Net97, W3.97] </ref>. This paper provides the first in-depth study of algorithmic questions involved in the scheduling of space-sharing for Internet advertising. We consider a scenario where the advertisements are specified in terms of three parameters.
References-found: 19

