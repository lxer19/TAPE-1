URL: http://robotics.eecs.berkeley.edu/papers/motion_planning/n_trailers.ps.gz
Refering-URL: http://robotics.eecs.berkeley.edu/research/motion_planning.html
Root-URL: 
Title: GENERATION FOR THE N-TRAILER PROBLEM USING GOURSAT NORMAL FORM  
Author: D. TILBURY, R. MURRAY, S. SASTRY 
Date: February 24, 1994  
Address: BERKELEY, CA 94720  
Note: TRAJECTORY  
Affiliation: UC Berkeley  ELECTRONICS RESEARCH LABORATORY DEPARTMENT OF ELECTRICAL ENGINEERING AND COMPUTER SCIENCE UNIVERSITY OF CALIFORNIA  
Pubnum: ERL Memorandum Number M93/12  
Abstract: A short version of this paper appeared at the 32nd IEEE Conference on Decision and Control San Antonio, Texas December 15-17, 1993 Abstract. In this paper, we develop the machinery of exterior differential forms, more particularly the Goursat normal form for a Pfaffian system, for solving nonholonomic motion planning problems, i.e. planning problems with non-integrable velocity constraints. We apply this technique to solving the problem of steering a mobile robot with n trailers. We present an algorithm for finding a family of transformations which will display the given system of rolling constraints on the wheels of the robot with n trailers in the Goursat canonical form. Two of these transformations are studied in detail. The Goursat normal form for exterior differential systems is dual to the so-called chained form for vector fields that we have studied in our earlier work. Consequently, we are able to give the state feedback law and change of coordinates to convert the N -trailer system into chained form. Three methods for steering chained form systems using sinusoids, piecewise constants and polynomials as inputs are presented. The motion planning strategy is therefore to first convert the N -trailer system into chained form, steer the corresponding chained form system, then transform the resulting trajectory back into the original coordinates. Simulations and frames of movie animations of the N -trailer system for parallel parking and backing into a loading dock using this strategy are also included. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> J. C. Alexander and J. H. Maddocks. </author> <title> On the maneuvering of vehicles. </title> <journal> SIAM Journal of Applied Mathematics, </journal> <volume> 48(1) </volume> <pages> 38-51, </pages> <year> 1988. </year>
Reference-contexts: Strictly speaking, if an axle has a differential that keeps the pair of wheels rolling without slipping, then each wheel turns a different amount in accordance with a simple geometric relationship called the Alexander-Maddocks condition <ref> [1] </ref>. In our system we will neglect this and model the wheels on an axle as being parallel. <p> 5 steps, *) x1T = Expand [x1 [5]]; x2T = Expand [x2 [5]]; x3T = Expand [x3 [5]]; x4T = Expand [x4 [5]]; x5T = Expand [x5 [5]]; x6T = Expand [x6 [5]]; (* We define u1 to be constant over all 5 time periods *) u1 [2] := u1 <ref> [1] </ref>; u1 [3] := u1 [1]; u1 [4] := u1 [1]; u1 [5] := u1 [1]; (* And now we solve for the input magnitudes *) Solve [fx1T == xf1g,fu1 [1]g] &gt;>> pc inputs.m (* We know that xiT are linear in the inputs u2 [i], namely * final = Matrix.input2 <p> Expand [x1 [5]]; x2T = Expand [x2 [5]]; x3T = Expand [x3 [5]]; x4T = Expand [x4 [5]]; x5T = Expand [x5 [5]]; x6T = Expand [x6 [5]]; (* We define u1 to be constant over all 5 time periods *) u1 [2] := u1 <ref> [1] </ref>; u1 [3] := u1 [1]; u1 [4] := u1 [1]; u1 [5] := u1 [1]; (* And now we solve for the input magnitudes *) Solve [fx1T == xf1g,fu1 [1]g] &gt;>> pc inputs.m (* We know that xiT are linear in the inputs u2 [i], namely * final = Matrix.input2 + constant * so we <p> Expand [x2 [5]]; x3T = Expand [x3 [5]]; x4T = Expand [x4 [5]]; x5T = Expand [x5 [5]]; x6T = Expand [x6 [5]]; (* We define u1 to be constant over all 5 time periods *) u1 [2] := u1 <ref> [1] </ref>; u1 [3] := u1 [1]; u1 [4] := u1 [1]; u1 [5] := u1 [1]; (* And now we solve for the input magnitudes *) Solve [fx1T == xf1g,fu1 [1]g] &gt;>> pc inputs.m (* We know that xiT are linear in the inputs u2 [i], namely * final = Matrix.input2 + constant * so we set goal = final and <p> Expand [x3 [5]]; x4T = Expand [x4 [5]]; x5T = Expand [x5 [5]]; x6T = Expand [x6 [5]]; (* We define u1 to be constant over all 5 time periods *) u1 [2] := u1 <ref> [1] </ref>; u1 [3] := u1 [1]; u1 [4] := u1 [1]; u1 [5] := u1 [1]; (* And now we solve for the input magnitudes *) Solve [fx1T == xf1g,fu1 [1]g] &gt;>> pc inputs.m (* We know that xiT are linear in the inputs u2 [i], namely * final = Matrix.input2 + constant * so we set goal = final and solve for the magnitudes of <p> [fx1T == xf1g,fu1 <ref> [1] </ref>g] &gt;>> pc inputs.m (* We know that xiT are linear in the inputs u2 [i], namely * final = Matrix.input2 + constant * so we set goal = final and solve for the magnitudes of input2: * solution = Inverse [Matrix].(goal constant) *) input2 = fu2 [1], u2 [2], u2 [3], u2 [4], u2 [5]g; final = f x2T, x3T, x4T, x5T, x6T g; goal = f xf2, xf3, xf4, xf5, xf6 g; Matrix = Jac [final,input2]; constant = final - Matrix.input2; solution = (Inverse [Matrix].(goal constant)) &gt;>> pc inputs.m 48 TILBURY, MURRAY, SASTRY (* polynomial.m D.
Reference: 2. <author> J. Barraquand and J-C. Latombe. </author> <title> On nonholonomic mobile robots and optimal maneuvering. </title> <booktitle> In 4th International Symposium on Intelligent Control, </booktitle> <pages> pages 74-83, </pages> <address> Albany, NY, </address> <year> 1989. </year>
Reference-contexts: A more detailed review of the general nonholonomic motion planning problem can be found in [30] or in a recent collection of papers [25]. A more detailed description of the N -trailer problem and its variations can be found in [22]. Barraquand and Latombe <ref> [2] </ref> proposed a planner for cars with trailers in a cluttered environment, with an attempt at finding one with a minimal number of backups. <p> we iterate for 5 steps, *) x1T = Expand [x1 [5]]; x2T = Expand [x2 [5]]; x3T = Expand [x3 [5]]; x4T = Expand [x4 [5]]; x5T = Expand [x5 [5]]; x6T = Expand [x6 [5]]; (* We define u1 to be constant over all 5 time periods *) u1 <ref> [2] </ref> := u1 [1]; u1 [3] := u1 [1]; u1 [4] := u1 [1]; u1 [5] := u1 [1]; (* And now we solve for the input magnitudes *) Solve [fx1T == xf1g,fu1 [1]g] &gt;>> pc inputs.m (* We know that xiT are linear in the inputs u2 [i], namely * <p> xf1g,fu1 [1]g] &gt;>> pc inputs.m (* We know that xiT are linear in the inputs u2 [i], namely * final = Matrix.input2 + constant * so we set goal = final and solve for the magnitudes of input2: * solution = Inverse [Matrix].(goal constant) *) input2 = fu2 [1], u2 <ref> [2] </ref>, u2 [3], u2 [4], u2 [5]g; final = f x2T, x3T, x4T, x5T, x6T g; goal = f xf2, xf3, xf4, xf5, xf6 g; Matrix = Jac [final,input2]; constant = final - Matrix.input2; solution = (Inverse [Matrix].(goal constant)) &gt;>> pc inputs.m 48 TILBURY, MURRAY, SASTRY (* polynomial.m D.
Reference: 3. <author> R. W. Brockett. </author> <title> Control theory and singular Riemannian geometry. </title> <booktitle> In New Directions in Applied Mathematics, </booktitle> <pages> pages 11-27. </pages> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1981. </year>
Reference-contexts: motion planning for nonholonomic systems, and focused attention on a specific class of systems in so-called "chained form": _x 1 = u 1 _x 3 = x 2 u 1 _x n = x n1 u 1 : This class of systems was inspired by some early work of Brockett <ref> [3] </ref> on optimal control of "canonical systems". In [30], we gave sufficient conditions for converting systems into chained form, and an algorithm (using sinusoids at integrally related frequencies) for steering chained form systems. <p> *) x1T = Expand [x1 [5]]; x2T = Expand [x2 [5]]; x3T = Expand [x3 [5]]; x4T = Expand [x4 [5]]; x5T = Expand [x5 [5]]; x6T = Expand [x6 [5]]; (* We define u1 to be constant over all 5 time periods *) u1 [2] := u1 [1]; u1 <ref> [3] </ref> := u1 [1]; u1 [4] := u1 [1]; u1 [5] := u1 [1]; (* And now we solve for the input magnitudes *) Solve [fx1T == xf1g,fu1 [1]g] &gt;>> pc inputs.m (* We know that xiT are linear in the inputs u2 [i], namely * final = Matrix.input2 + constant <p> &gt;>> pc inputs.m (* We know that xiT are linear in the inputs u2 [i], namely * final = Matrix.input2 + constant * so we set goal = final and solve for the magnitudes of input2: * solution = Inverse [Matrix].(goal constant) *) input2 = fu2 [1], u2 [2], u2 <ref> [3] </ref>, u2 [4], u2 [5]g; final = f x2T, x3T, x4T, x5T, x6T g; goal = f xf2, xf3, xf4, xf5, xf6 g; Matrix = Jac [final,input2]; constant = final - Matrix.input2; solution = (Inverse [Matrix].(goal constant)) &gt;>> pc inputs.m 48 TILBURY, MURRAY, SASTRY (* polynomial.m D.
Reference: 4. <author> R. W. Brockett. </author> <title> Asymptotic stability and feedback stabilization. </title> <editor> In R. W. Brockett, R. S. Millman, and H. J. Sussman, editors, </editor> <booktitle> Differential Geometric Control Theory, </booktitle> <pages> pages 181-191. </pages> <publisher> Birkhauser, </publisher> <year> 1983. </year>
Reference-contexts: The trajectories generated by our method need to be stabilized, perhaps using a technique such as that outlined in [36]. There has also been considerable interest in stabilizing nonholonomic systems not to trajectories but to points. Although from Brockett's necessary condition <ref> [4] </ref> it follows that such stabilizing control laws cannot be both C 0 and time-invariant, methods using either discontinuous or time-varying feedback have been suggested. <p> [5]]; x2T = Expand [x2 [5]]; x3T = Expand [x3 [5]]; x4T = Expand [x4 [5]]; x5T = Expand [x5 [5]]; x6T = Expand [x6 [5]]; (* We define u1 to be constant over all 5 time periods *) u1 [2] := u1 [1]; u1 [3] := u1 [1]; u1 <ref> [4] </ref> := u1 [1]; u1 [5] := u1 [1]; (* And now we solve for the input magnitudes *) Solve [fx1T == xf1g,fu1 [1]g] &gt;>> pc inputs.m (* We know that xiT are linear in the inputs u2 [i], namely * final = Matrix.input2 + constant * so we set goal <p> inputs.m (* We know that xiT are linear in the inputs u2 [i], namely * final = Matrix.input2 + constant * so we set goal = final and solve for the magnitudes of input2: * solution = Inverse [Matrix].(goal constant) *) input2 = fu2 [1], u2 [2], u2 [3], u2 <ref> [4] </ref>, u2 [5]g; final = f x2T, x3T, x4T, x5T, x6T g; goal = f xf2, xf3, xf4, xf5, xf6 g; Matrix = Jac [final,input2]; constant = final - Matrix.input2; solution = (Inverse [Matrix].(goal constant)) &gt;>> pc inputs.m 48 TILBURY, MURRAY, SASTRY (* polynomial.m D.
Reference: 5. <author> R. L. Bryant, S. S. Chern, R. B. Gardner, H. L. Goldschmidt, and P. A. Griffiths. </author> <title> Exterior Differential Systems. </title> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference-contexts: This system I is called a Pfaffian system (of codimension 2); such exterior differential systems and their properties were first studied by Pfaff in the early 1800's. There exists a large body of work on Pfaff's problem in the literature (see <ref> [5] </ref> for a historical overview). The formulation of the N -trailer problem as an exterior differential system allows us to draw on classical results by Goursat, Engel, Cartan, and others on classification and canonical forms. Most of the relevant results in this area are presented in abbreviated fashion in [5] and <p> (see <ref> [5] </ref> for a historical overview). The formulation of the N -trailer problem as an exterior differential system allows us to draw on classical results by Goursat, Engel, Cartan, and others on classification and canonical forms. Most of the relevant results in this area are presented in abbreviated fashion in [5] and are reviewed in Section 2 of this paper. The normal form for Pfaffian systems of codimension 2 that was proposed by Goursat is in fact the dual of chained canonical form as defined above. <p> We present only a very brief review of the necessary tools here, concentrating on the computations that must be performed. A much more detailed description can be found in the monograph by Bryant et al. <ref> [5] </ref>. 2.1. Exterior algebra. Let V be a vector space over R, which we also refer to using the notation fl 1 . <p> For most examples, can be determined by a combination of physical insight and repeated guessing. A complete proof of this theorem can be found in <ref> [5] </ref>. It can be summarized in the following algorithm for converting a system into Goursat form (see [13] for the feedback linearization version of this algorithm, on which this is based). Algorithm 1. <p> [i-1] + d x4 [i-1] u1 [i] + d^2 x3 [i-1] u1 [i]^2/2 + x6 [i ] := x6 [i-1] + d x5 [i-1] u1 [i] + d^2 x4 [i-1] u1 [i]^2/2 + d^5 u1 [i]^4 u2 [i]/5!; (* Then we iterate for 5 steps, *) x1T = Expand [x1 <ref> [5] </ref>]; x2T = Expand [x2 [5]]; x3T = Expand [x3 [5]]; x4T = Expand [x4 [5]]; x5T = Expand [x5 [5]]; x6T = Expand [x6 [5]]; (* We define u1 to be constant over all 5 time periods *) u1 [2] := u1 [1]; u1 [3] := u1 [1]; u1 [4] <p> u1 [i] + d^2 x3 [i-1] u1 [i]^2/2 + x6 [i ] := x6 [i-1] + d x5 [i-1] u1 [i] + d^2 x4 [i-1] u1 [i]^2/2 + d^5 u1 [i]^4 u2 [i]/5!; (* Then we iterate for 5 steps, *) x1T = Expand [x1 <ref> [5] </ref>]; x2T = Expand [x2 [5]]; x3T = Expand [x3 [5]]; x4T = Expand [x4 [5]]; x5T = Expand [x5 [5]]; x6T = Expand [x6 [5]]; (* We define u1 to be constant over all 5 time periods *) u1 [2] := u1 [1]; u1 [3] := u1 [1]; u1 [4] := u1 [1]; u1 [5] <p> [i-1] u1 [i]^2/2 + x6 [i ] := x6 [i-1] + d x5 [i-1] u1 [i] + d^2 x4 [i-1] u1 [i]^2/2 + d^5 u1 [i]^4 u2 [i]/5!; (* Then we iterate for 5 steps, *) x1T = Expand [x1 <ref> [5] </ref>]; x2T = Expand [x2 [5]]; x3T = Expand [x3 [5]]; x4T = Expand [x4 [5]]; x5T = Expand [x5 [5]]; x6T = Expand [x6 [5]]; (* We define u1 to be constant over all 5 time periods *) u1 [2] := u1 [1]; u1 [3] := u1 [1]; u1 [4] := u1 [1]; u1 [5] := u1 [1]; (* And <p> [i ] := x6 [i-1] + d x5 [i-1] u1 [i] + d^2 x4 [i-1] u1 [i]^2/2 + d^5 u1 [i]^4 u2 [i]/5!; (* Then we iterate for 5 steps, *) x1T = Expand [x1 <ref> [5] </ref>]; x2T = Expand [x2 [5]]; x3T = Expand [x3 [5]]; x4T = Expand [x4 [5]]; x5T = Expand [x5 [5]]; x6T = Expand [x6 [5]]; (* We define u1 to be constant over all 5 time periods *) u1 [2] := u1 [1]; u1 [3] := u1 [1]; u1 [4] := u1 [1]; u1 [5] := u1 [1]; (* And now we solve for the <p> + d x5 [i-1] u1 [i] + d^2 x4 [i-1] u1 [i]^2/2 + d^5 u1 [i]^4 u2 [i]/5!; (* Then we iterate for 5 steps, *) x1T = Expand [x1 <ref> [5] </ref>]; x2T = Expand [x2 [5]]; x3T = Expand [x3 [5]]; x4T = Expand [x4 [5]]; x5T = Expand [x5 [5]]; x6T = Expand [x6 [5]]; (* We define u1 to be constant over all 5 time periods *) u1 [2] := u1 [1]; u1 [3] := u1 [1]; u1 [4] := u1 [1]; u1 [5] := u1 [1]; (* And now we solve for the input magnitudes *) Solve [fx1T <p> [i] + d^2 x4 [i-1] u1 [i]^2/2 + d^5 u1 [i]^4 u2 [i]/5!; (* Then we iterate for 5 steps, *) x1T = Expand [x1 <ref> [5] </ref>]; x2T = Expand [x2 [5]]; x3T = Expand [x3 [5]]; x4T = Expand [x4 [5]]; x5T = Expand [x5 [5]]; x6T = Expand [x6 [5]]; (* We define u1 to be constant over all 5 time periods *) u1 [2] := u1 [1]; u1 [3] := u1 [1]; u1 [4] := u1 [1]; u1 [5] := u1 [1]; (* And now we solve for the input magnitudes *) Solve [fx1T == xf1g,fu1 [1]g] &gt;>> pc <p> <ref> [5] </ref>]; x3T = Expand [x3 [5]]; x4T = Expand [x4 [5]]; x5T = Expand [x5 [5]]; x6T = Expand [x6 [5]]; (* We define u1 to be constant over all 5 time periods *) u1 [2] := u1 [1]; u1 [3] := u1 [1]; u1 [4] := u1 [1]; u1 [5] := u1 [1]; (* And now we solve for the input magnitudes *) Solve [fx1T == xf1g,fu1 [1]g] &gt;>> pc inputs.m (* We know that xiT are linear in the inputs u2 [i], namely * final = Matrix.input2 + constant * so we set goal = final and solve for
Reference: 6. <author> L. Bushnell, D. Tilbury, and S. S. Sastry. </author> <title> Steering chained form nonholonomic systems using sinusoids: The fire truck example. </title> <type> Technical Report UCB/ERL M92/107, </type> <institution> University of California, Berkeley, Electronics Research Lab, </institution> <year> 1992. </year> <note> Also appeared in Proceedings of the 1993 European Control Conference. </note>
Reference-contexts: The firetruck has three inputs: driving and steering in the front and another steering wheel at the tiller <ref> [6] </ref> (multi-input chained form systems are also discussed in [30]).
Reference: 7. <author> J. F. Canny. </author> <title> The Complexity of Robot Motion Planning. </title> <publisher> MIT Press, </publisher> <address> Cambridge, </address> <year> 1988. </year>
Reference-contexts: These constraints on the instantaneous velocities that can be achieved arise from the kinematics of the drive mechanisms of the carts. This work has been a departure from the traditional robot motion planning (see for example <ref> [7, 16, 19] </ref>) which concentrated on understanding the complexity of the computational effort associated with planning trajectories for robots (with no constraints on their instantaneous velocities) which would avoid both fixed and moving obstacles.
Reference: 8. <author> R. Chatila. </author> <title> Mobile robot navigation: Space modeling and decisional processes. </title> <editor> In O. Faugeras and G. Giralt, editors, </editor> <booktitle> Robotics Research: The Third International Symposium, </booktitle> <pages> pages 373-378. </pages> <publisher> MIT Press, </publisher> <year> 1986. </year>
Reference-contexts: We have assumed that the bodies are connected between 1 The Hilare family of mobile robots resides at LAAS in Toulouse, see for example <ref> [8, 14] </ref>. 2 The intuition for this comes from the oft repeated dictum: "when backing up a car with a trailer, keep your eye on the hind part of the trailer".
Reference: 9. <author> A. W. Divelbiss and J. Wen. </author> <title> A global approach to nonholonomic motion planning. </title> <booktitle> In Proceedings of the IEEE Conference on Decision and Control, </booktitle> <pages> pages 1597-1602, </pages> <address> Tucson, Arizona, </address> <year> 1992. </year>
Reference-contexts: Consequently, the method became computationally infeasible for a large number of trailers. The method, however, worked well in a very cluttered environment since the presence of many obstacles drastically reduced the number of search directions. Related to this work is that of Divelbiss and Wen <ref> [9] </ref> which uses gradient descent in a discretized input space. Obstacles can be incorpo 2 TILBURY, MURRAY, SASTRY rated into their method using potential fields. The convergence properties of their methods are currently under investigation. <p> This method was applied to the system of Hilare with two trailers in [35], but the paths generated were highly oscillatory and impractical, owing to their use of high magnitude and frequency sinusoids. Divelbiss and Wen <ref> [9] </ref> have explored a computational approach to the N-trailer problem, in which they discretize the system and use gradient descent in the (dis-cretized) input space to generate a feasible path. <p> This line of work has been started in [26] where the authors considered the motion of a single Hilare-like robot in a cluttered environment. Another approach for a Hilare-like robot was defined in [24]. Other methods for obstacle avoidance which use optimization based approaches may be found in <ref> [9, 10] </ref>. (2) The stabilization of open loop trajectories. The trajectories generated by our method need to be stabilized, perhaps using a technique such as that outlined in [36]. There has also been considerable interest in stabilizing nonholonomic systems not to trajectories but to points.
Reference: 10. <author> C. Fernandes, L. Gurvits, and Z. Li. </author> <title> Foundations of nonholonomic motion planning. </title> <institution> Technical Report Robotics Research Laboratory, Courant Institute of Mathematical Sciences, </institution> <year> 1991. </year>
Reference-contexts: Recently Strdalen [?] showed that the system of the car with n trailers could be put into chained form using the coordinates of the n th trailer (rather than those of the cab) for parameterizing the configuration space of the system. Fernandes, Gurvits and Li <ref> [10] </ref> used numerical methods for solving constrained optimal control problems associated with nonholonomic motion planning problems, using a perturbation (of the cost functional) to make the singular optimal control problem regular. <p> This line of work has been started in [26] where the authors considered the motion of a single Hilare-like robot in a cluttered environment. Another approach for a Hilare-like robot was defined in [24]. Other methods for obstacle avoidance which use optimization based approaches may be found in <ref> [9, 10] </ref>. (2) The stabilization of open loop trajectories. The trajectories generated by our method need to be stabilized, perhaps using a technique such as that outlined in [36]. There has also been considerable interest in stabilizing nonholonomic systems not to trajectories but to points.
Reference: 11. <author> C. Fernandes, L. Gurvits, and Z. Li. </author> <title> Optimal nonholonomic motion planning for a falling cat. </title> <editor> In Z. Li and J. Canny, editors, </editor> <booktitle> Nonholonomic Motion Planning, </booktitle> <pages> pages 379-421. </pages> <publisher> Kluwer Academic Publishers, </publisher> <year> 1993. </year>
Reference-contexts: Fernandes, Gurvits and Li [10] used numerical methods for solving constrained optimal control problems associated with nonholonomic motion planning problems, using a perturbation (of the cost functional) to make the singular optimal control problem regular. In other work <ref> [11] </ref>, they also suggested the use of input sinusoids (as basis functions) in a Ritz approximation algorithm for steering nonholonomic systems. Sinusoids were also used in a method proposed by Sussmann and Liu [33], see also Gurvits and Li [15].
Reference: 12. <author> M. Fliess, J. Levine, P. Martin, and P. Rouchon. </author> <title> On differentially flat nonlinear systems. </title> <booktitle> In Proceedings of the IFAC Nonlinear Control Systems Design Symposium (NOLCOS), </booktitle> <pages> pages 408-412, </pages> <address> Bordeaux, France, </address> <year> 1992. </year>
Reference-contexts: (t) will completely define all the state variables of a chained-form system, 4 since the other m 2 states and the two inputs 4 As this paper was being finished it was pointed out to the authors that this situation is referred to by Fliess et al. as flat outputs <ref> [12] </ref>.
Reference: 13. <author> R. B. Gardner and W. F. Shadwick. </author> <title> The GS algorithm for exact linearization to Brunovsky normal form. </title> <journal> IEEE Transactions on Automatic Control, </journal> <volume> 37(2) </volume> <pages> 224-230, </pages> <year> 1992. </year>
Reference-contexts: For most examples, can be determined by a combination of physical insight and repeated guessing. A complete proof of this theorem can be found in [5]. It can be summarized in the following algorithm for converting a system into Goursat form (see <ref> [13] </ref> for the feedback linearization version of this algorithm, on which this is based). Algorithm 1. <p> One approach to stabilizing chained form nonholonomic systems is given in [34]. (3) Generalized Goursat type canonical forms for exterior differential systems for higher codimension systems are discussed in <ref> [13, 28] </ref> and were useful in transforming to chained form a firetruck system. The firetruck has three inputs: driving and steering in the front and another steering wheel at the tiller [6] (multi-input chained form systems are also discussed in [30]).
Reference: 14. <author> G. Giralt, R. Chatila, and M. Vaisset. </author> <title> An integrated navigation and motion control system for autonomous multisensory mobile robots. </title> <editor> In M. Brady and R. Paul, editors, </editor> <booktitle> Robotics Research : The First International Symposium, </booktitle> <pages> pages 191-214. </pages> <publisher> MIT Press, </publisher> <address> Cambridge, Massachusetts, </address> <year> 1984. </year>
Reference-contexts: We have assumed that the bodies are connected between 1 The Hilare family of mobile robots resides at LAAS in Toulouse, see for example <ref> [8, 14] </ref>. 2 The intuition for this comes from the oft repeated dictum: "when backing up a car with a trailer, keep your eye on the hind part of the trailer".
Reference: 15. <author> L. Gurvits and Z. Li. </author> <title> Smooth time-periodic feedback solutions for nonholonmic motion planning. </title> <editor> In Z. Li and J. Canny, editors, </editor> <booktitle> Nonholonomic Motion Planning, </booktitle> <pages> pages 53-108. </pages> <publisher> Kluwer Academic Publishers, </publisher> <year> 1993. </year>
Reference-contexts: In other work [11], they also suggested the use of input sinusoids (as basis functions) in a Ritz approximation algorithm for steering nonholonomic systems. Sinusoids were also used in a method proposed by Sussmann and Liu [33], see also Gurvits and Li <ref> [15] </ref>. Their method was completely general in that it applied to any controllable nonholonomic system, and used asymptotically high frequency, high magnitude sinusoids to achieve convergence.
Reference: 16. <author> J. Hopcroft J. T. Schwartz, M. Sharir. </author> <title> Planning, Geometry and Complexity of Robot Motion. </title> <publisher> Ablex, </publisher> <address> Norwood, New Jersey, </address> <year> 1987. </year>
Reference-contexts: These constraints on the instantaneous velocities that can be achieved arise from the kinematics of the drive mechanisms of the carts. This work has been a departure from the traditional robot motion planning (see for example <ref> [7, 16, 19] </ref>) which concentrated on understanding the complexity of the computational effort associated with planning trajectories for robots (with no constraints on their instantaneous velocities) which would avoid both fixed and moving obstacles.
Reference: 17. <author> G. Jacob. </author> <title> Motion planning by piecewise constant or polynomial inputs. </title> <booktitle> In Proceedings of the IFAC Nonlinear Control Systems Design Symposium (NOLCOS), </booktitle> <pages> pages 628-633, </pages> <address> 50 TILBURY, MURRAY, SASTRY Bordeaux, France, </address> <year> 1992. </year>
Reference-contexts: Convergence properties of their N -TRAILER PROBLEM 3 method are currently under investigation, but the algorithm has demonstrated good performance in simulation. They are also able to incorporate obstables into the problem formulation, using potential field methods. Several other methods have been proposed which used piecewise constant inputs <ref> [17, 18, 27] </ref>. All of these worked best in the cases where the control Lie algebra is nilpotent. Their extension to systems whose control Lie algebra is not nilpotent is not fully satisfactory, requiring a large number of steps to come close to the goal point.
Reference: 18. <author> G. Lafferriere and H. J. Sussmann. </author> <title> Motion planning for controllable systems without drift. </title> <booktitle> In Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 1148-1153, </pages> <address> Sacramento, California, </address> <year> 1991. </year>
Reference-contexts: Convergence properties of their N -TRAILER PROBLEM 3 method are currently under investigation, but the algorithm has demonstrated good performance in simulation. They are also able to incorporate obstables into the problem formulation, using potential field methods. Several other methods have been proposed which used piecewise constant inputs <ref> [17, 18, 27] </ref>. All of these worked best in the cases where the control Lie algebra is nilpotent. Their extension to systems whose control Lie algebra is not nilpotent is not fully satisfactory, requiring a large number of steps to come close to the goal point.
Reference: 19. <author> J-C. Latombe. </author> <title> Robot Motion Planning. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, </address> <year> 1991. </year>
Reference-contexts: These constraints on the instantaneous velocities that can be achieved arise from the kinematics of the drive mechanisms of the carts. This work has been a departure from the traditional robot motion planning (see for example <ref> [7, 16, 19] </ref>) which concentrated on understanding the complexity of the computational effort associated with planning trajectories for robots (with no constraints on their instantaneous velocities) which would avoid both fixed and moving obstacles.
Reference: 20. <author> J-P. Laumond. </author> <title> Feasible trajectories for mobile robots with kinematic and environment constraints. </title> <editor> In L. O. Hertzberger and F. C. A. Green, editors, </editor> <booktitle> Intelligent Autonomous Systems, </booktitle> <pages> pages 346-354. </pages> <publisher> North Holland, </publisher> <year> 1987. </year>
Reference-contexts: Unfortunately the motion plans arising from these more traditional methods often required sideways motion of robot carts with wheels, and as was pointed out by Laumond, most mobile robots are not on castors <ref> [20, 21] </ref>. In this paper, we consider and solve the motion planning problem for a system consisting of a car-like mobile robot pulling n trailers. This system has been an important canonical example for the work on nonholonomic motion planning ever since it was posed in [23, 29].
Reference: 21. <author> J-P. Laumond. </author> <title> Finding collision-free smooth trajectories for a non-holonomic mobile robot. </title> <booktitle> In Proceedings of the International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 1120-1123, </pages> <year> 1987. </year>
Reference-contexts: Unfortunately the motion plans arising from these more traditional methods often required sideways motion of robot carts with wheels, and as was pointed out by Laumond, most mobile robots are not on castors <ref> [20, 21] </ref>. In this paper, we consider and solve the motion planning problem for a system consisting of a car-like mobile robot pulling n trailers. This system has been an important canonical example for the work on nonholonomic motion planning ever since it was posed in [23, 29].
Reference: 22. <author> J-P. Laumond. </author> <title> Nonholonomic motion planning versus controllability via the multibody car system example. </title> <type> Technical Report STAN-CS-90-1345, </type> <institution> Stanford University, Department of Computer Science, </institution> <month> December </month> <year> 1990. </year>
Reference-contexts: A more detailed review of the general nonholonomic motion planning problem can be found in [30] or in a recent collection of papers [25]. A more detailed description of the N -trailer problem and its variations can be found in <ref> [22] </ref>. Barraquand and Latombe [2] proposed a planner for cars with trailers in a cluttered environment, with an attempt at finding one with a minimal number of backups.
Reference: 23. <author> J-P. Laumond. </author> <title> Controllability of a multibody mobile robot. </title> <booktitle> In Proceedings of the International Conference on Advanced Robotics, </booktitle> <pages> pages 1033-1038, </pages> <address> Pisa, Italy, </address> <year> 1991. </year>
Reference-contexts: In this paper, we consider and solve the motion planning problem for a system consisting of a car-like mobile robot pulling n trailers. This system has been an important canonical example for the work on nonholonomic motion planning ever since it was posed in <ref> [23, 29] </ref>. The nonholonomic constraints for this system arise from constraining each pair of wheels to roll without slipping. <p> Regardless of the number of trailers attached, the general system always has two degrees of freedom, corresponding to the driving and steering directions of the front car. It has been shown that every point in the state space is reachable, i.e. that the system is completely controllable <ref> [23] </ref>. The question that is answered in this paper is one of constructive controllability; explicit open loop controls for steering the car with n trailers from an initial to a final position are given. We first give a brief description of some of the previous work on this problem.
Reference: 24. <author> J-P. Laumond, P. Jacobs, M. Tax, and R. M. Murray. </author> <title> A motion planner for nonholo-nomic mobile robots. </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <note> 1993. In press. </note>
Reference-contexts: This line of work has been started in [26] where the authors considered the motion of a single Hilare-like robot in a cluttered environment. Another approach for a Hilare-like robot was defined in <ref> [24] </ref>. Other methods for obstacle avoidance which use optimization based approaches may be found in [9, 10]. (2) The stabilization of open loop trajectories. The trajectories generated by our method need to be stabilized, perhaps using a technique such as that outlined in [36].
Reference: 25. <author> Z. Li and J. Canny, </author> <title> editors. Nonholonomic Motion Planning. </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1993. </year>
Reference-contexts: We first give a brief description of some of the previous work on this problem. A more detailed review of the general nonholonomic motion planning problem can be found in [30] or in a recent collection of papers <ref> [25] </ref>. A more detailed description of the N -trailer problem and its variations can be found in [22]. Barraquand and Latombe [2] proposed a planner for cars with trailers in a cluttered environment, with an attempt at finding one with a minimal number of backups.
Reference: 26. <author> B. Mirtich and J. Canny. </author> <title> Using skeletons for nonholonomic path planning among obstacles. </title> <booktitle> In Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 2533-2540, </pages> <address> Nice, France, </address> <year> 1992. </year>
Reference-contexts: Three different methods for steering chained form systems were proposed. The work done in this paper has several natural avenues of continuation: (1) The generation of trajectories for the N -trailer system in an environment cluttered with obstacles. This line of work has been started in <ref> [26] </ref> where the authors considered the motion of a single Hilare-like robot in a cluttered environment. Another approach for a Hilare-like robot was defined in [24]. Other methods for obstacle avoidance which use optimization based approaches may be found in [9, 10]. (2) The stabilization of open loop trajectories.
Reference: 27. <author> S. Monaco and D. Normand-Cyrot. </author> <title> An introduction to motion planning under multirate digital control. </title> <booktitle> In Proceedings of the IEEE Conference on Decision and Control, </booktitle> <pages> pages 1780-1785, </pages> <address> Tucson, Arizona, </address> <year> 1992. </year>
Reference-contexts: Convergence properties of their N -TRAILER PROBLEM 3 method are currently under investigation, but the algorithm has demonstrated good performance in simulation. They are also able to incorporate obstables into the problem formulation, using potential field methods. Several other methods have been proposed which used piecewise constant inputs <ref> [17, 18, 27] </ref>. All of these worked best in the cases where the control Lie algebra is nilpotent. Their extension to systems whose control Lie algebra is not nilpotent is not fully satisfactory, requiring a large number of steps to come close to the goal point. <p> We show in Section 3 that this system can be converted into Goursat's normal form or equivalently chained form. Section 4 is devoted to presenting methods for steering systems in chained form. Three different methods are presented using as inputs sinusoids, piecewise constant inputs (as in <ref> [27] </ref>) and polynomials. Finally, we apply some of these steering methods to the N -trailers example, and display the results in Section 5. <p> The parameters were chosen to be T = 10 seconds and a 1 = 6 T . 36 TILBURY, MURRAY, SASTRY 4.2. Piecewise Constant Inputs. The second method we investigate for steering chained form systems uses piecewise constant inputs. This method was originally proposed by Monaco and Normand-Cyrot <ref> [27] </ref>, and was inspired by multirate digital control. It is most easily understood in the context of nonholonomic motion planning simply as piecewise constant inputs.
Reference: 28. <author> R. M. Murray. </author> <title> Nilpotent bases for a class of non-integrable distributions with applications to trajectory generation for nonholonomic systems. </title> <type> Technical Report CIT/CDS 92-002, </type> <institution> California Institute of Technology, </institution> <year> 1992. </year>
Reference-contexts: Necessary and sufficient conditions for the existence of such a , and hence for converting a set of constraints into Goursat normal form, were presented in <ref> [28] </ref>. We summarize the main result here. Let I = spanf! 1 ; : : :; ! s g be a codistribution on R n and write = I ? for the distribution which spans the null space of the codistribution. <p> One approach to stabilizing chained form nonholonomic systems is given in [34]. (3) Generalized Goursat type canonical forms for exterior differential systems for higher codimension systems are discussed in <ref> [13, 28] </ref> and were useful in transforming to chained form a firetruck system. The firetruck has three inputs: driving and steering in the front and another steering wheel at the tiller [6] (multi-input chained form systems are also discussed in [30]).
Reference: 29. <author> R. M. Murray and S. S. Sastry. </author> <title> Grasping and manipulation using multifingered robot hands. </title> <editor> In R. W. Brockett, editor, </editor> <booktitle> Robotics: Proceedings of Symposia in Applied Mathematics, </booktitle> <volume> Volume 41, </volume> <pages> pages 91-128. </pages> <publisher> American Mathematical Society, </publisher> <year> 1990. </year>
Reference-contexts: In this paper, we consider and solve the motion planning problem for a system consisting of a car-like mobile robot pulling n trailers. This system has been an important canonical example for the work on nonholonomic motion planning ever since it was posed in <ref> [23, 29] </ref>. The nonholonomic constraints for this system arise from constraining each pair of wheels to roll without slipping.
Reference: 30. <author> R. M. Murray and S. S. Sastry. </author> <title> Nonholonomic motion planning: Steering using sinu-soids. </title> <type> Technical Report UCB/ERL M91/45, </type> <institution> Electronics Research Laboratory, University of California at Berkeley, </institution> <year> 1991. </year> <note> To appear in IEEE Transactions on Automatic Control, </note> <month> May </month> <year> 1993. </year>
Reference-contexts: We first give a brief description of some of the previous work on this problem. A more detailed review of the general nonholonomic motion planning problem can be found in <ref> [30] </ref> or in a recent collection of papers [25]. A more detailed description of the N -trailer problem and its variations can be found in [22]. <p> They showed that the optimal length path belonged to a family of paths that consisted of segments of straight lines and arcs of circles. It seems doubtful that such a method could be generalized easily to a car with n trailers. A paper by Murray and Sastry <ref> [30] </ref> studied motion planning for nonholonomic systems, and focused attention on a specific class of systems in so-called "chained form": _x 1 = u 1 _x 3 = x 2 u 1 _x n = x n1 u 1 : This class of systems was inspired by some early work of <p> In <ref> [30] </ref>, we gave sufficient conditions for converting systems into chained form, and an algorithm (using sinusoids at integrally related frequencies) for steering chained form systems. <p> We present three methods to steer the chained form system: (1) Sinusoidal inputs (2) Piecewise constant inputs (3) Polynomial inputs 4.1. Sinusoidal inputs. The first steering method that we consider uses sinusoidal inputs. Steering chained form systems with sinusoids was originally proposed by us in <ref> [30] </ref>. The method that we have developed here is different from the original algorithm in that it steers all the states in one step, instead of one state at a time. <p> The firetruck has three inputs: driving and steering in the front and another steering wheel at the tiller [6] (multi-input chained form systems are also discussed in <ref> [30] </ref>). <p> there is a very large number of different possibilities for the normal form in this instance. (4) There are several examples of nonholonomic systems whose constraints fail to meet the conditions of the Goursat normal form, for example, the system modeling a circular finger tip rolling on a planar face <ref> [30] </ref>. The problem of steering such systems remains an open one.
Reference: 31. <author> J. A. Reeds and L. A. Shepp. </author> <title> Optimal paths for a car that goes both forwards and backwards. </title> <journal> Pacific Journal of Mathematics, </journal> <volume> 145(2) </volume> <pages> 367-393, </pages> <year> 1990. </year>
Reference-contexts: Related to this work is that of Divelbiss and Wen [9] which uses gradient descent in a discretized input space. Obstacles can be incorpo 2 TILBURY, MURRAY, SASTRY rated into their method using potential fields. The convergence properties of their methods are currently under investigation. Reeds and Shepp <ref> [31] </ref> proved an interesting result on the minimum length feasible paths for a robot of the Hilare type with bounded turning radius. They showed that the optimal length path belonged to a family of paths that consisted of segments of straight lines and arcs of circles.
Reference: 32. <author> C. Samson. </author> <title> Velocity and torque feedback control of a nonholonomic cart. </title> <booktitle> In International Workshop in Adaptive and Nonlinear Control: Issues in Robotics, </booktitle> <pages> pages 125-151, </pages> <year> 1990. </year>
Reference-contexts: Transformation 2: Coordinates of the origin seen from the last trailer. Yet another choice for f 1 corresponds to writing the coordinates of the origin as seen from the last trailer. This is reminiscent of a transformation used by Samson <ref> [32] </ref> in a different context, and is given by z 1 := f 1 (x) = x n cos n + y n sin n : This has the physical interpretation of being the origin of the reference frame when viewed from a coordinate frame attached to the n th trailer.
Reference: 33. <author> H. J. Sussmann and W. Liu. </author> <title> Limits of highly oscillatory controls and the approximation of general paths by admissible trajectories. </title> <booktitle> In Proceedings of the IEEE Conference on Decision and Control, </booktitle> <pages> pages 437-442, </pages> <year> 1991. </year>
Reference-contexts: In other work [11], they also suggested the use of input sinusoids (as basis functions) in a Ritz approximation algorithm for steering nonholonomic systems. Sinusoids were also used in a method proposed by Sussmann and Liu <ref> [33] </ref>, see also Gurvits and Li [15]. Their method was completely general in that it applied to any controllable nonholonomic system, and used asymptotically high frequency, high magnitude sinusoids to achieve convergence.
Reference: 34. <author> A. Teel, R. M. Murray, and G. Walsh. </author> <title> Nonholonomic control systems: From steering to stabilization with sinusoids. </title> <booktitle> In Proceedings of the IEEE Conference on Decision and Control, </booktitle> <pages> pages 1603-1609, </pages> <address> Tucson, Arizona, </address> <year> 1992. </year>
Reference-contexts: Although from Brockett's necessary condition [4] it follows that such stabilizing control laws cannot be both C 0 and time-invariant, methods using either discontinuous or time-varying feedback have been suggested. One approach to stabilizing chained form nonholonomic systems is given in <ref> [34] </ref>. (3) Generalized Goursat type canonical forms for exterior differential systems for higher codimension systems are discussed in [13, 28] and were useful in transforming to chained form a firetruck system.
Reference: 35. <author> D. Tilbury, J-P. Laumond, R. Murray, S. Sastry, and G. Walsh. </author> <title> Steering car-like systems N -TRAILER PROBLEM 51 with trailers using sinusoids. </title> <booktitle> In Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 1993-1998, </pages> <address> Nice, France, </address> <year> 1992. </year>
Reference-contexts: Their method was completely general in that it applied to any controllable nonholonomic system, and used asymptotically high frequency, high magnitude sinusoids to achieve convergence. This method was applied to the system of Hilare with two trailers in <ref> [35] </ref>, but the paths generated were highly oscillatory and impractical, owing to their use of high magnitude and frequency sinusoids.
Reference: 36. <author> G. Walsh, D. Tilbury, S. Sastry, R. Murray, and J-P. Laumond. </author> <title> Stabilization of trajectories for systems with nonholonomic constraints. </title> <booktitle> In Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 1999-2004, </pages> <address> Nice, France, </address> <year> 1992. </year> <note> To appear in IEEE Transactions on Automatic Control, </note> <month> November </month> <year> 1993. </year>
Reference-contexts: Other methods for obstacle avoidance which use optimization based approaches may be found in [9, 10]. (2) The stabilization of open loop trajectories. The trajectories generated by our method need to be stabilized, perhaps using a technique such as that outlined in <ref> [36] </ref>. There has also been considerable interest in stabilizing nonholonomic systems not to trajectories but to points. Although from Brockett's necessary condition [4] it follows that such stabilizing control laws cannot be both C 0 and time-invariant, methods using either discontinuous or time-varying feedback have been suggested.
Reference: 37. <author> Stephen Wolfram. </author> <title> Mathematica: A System for Doing Mathematics by Computer. </title> <publisher> Addison-Wesley, </publisher> <address> Redwood City, California, </address> <note> second edition, </note> <year> 1991. </year>
References-found: 37

