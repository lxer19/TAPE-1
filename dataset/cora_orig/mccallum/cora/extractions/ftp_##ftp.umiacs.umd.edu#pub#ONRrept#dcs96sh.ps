URL: ftp://ftp.umiacs.umd.edu/pub/ONRrept/dcs96sh.ps
Refering-URL: http://www.umiacs.umd.edu/labs/CLIP/WW.html
Root-URL: 
Email: Anthony.Tomasic@inria.fr  louiqa@umiacs.umd.edu  Patrick.Valduriez@inria.fr  
Title: Scaling Heterogeneous Databases and the Design of Disco  
Author: Anthony Tomasic Louiqa Raschid Patrick Valduriez 
Web: http://rodin.inria.fr/tomasic  http://umiacs.umd.edu/ louiqa  http://rodin.inria.fr  
Address: 78153 Le Chesnay, France  College Park, MD, 20742, USA.  78153 Le Chesnay, France  
Affiliation: INRIA Rocquencourt  University of Maryland  INRIA Rocquencourt  
Abstract: Access to large numbers of data sources introduces new problems for users of heterogeneous distributed databases. End users and application programmers must deal with unavailable data sources. Database administrators must deal with incorporating new sources into the model. Database implementors must deal with the translation of queries between query languages and schemas. The Distributed Information Search COmponent (Disco) 1 addresses these problems. Query processing semantics are developed to process queries over data sources which do not return answers. Data modeling techniques manage connections to data sources. The component interface to data sources flexibly handles different query languages and translates queries. This paper describes (a) the distributed mediator architecture of Disco, (b) its query processing semantics, (c) the data model and its modeling of data source connections, and (d) the interface to underlying data sources. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Ahmed et al. </author> <title> The pegasus heterogeneous multidatabase system. </title> <journal> IEEE Computer, </journal> <volume> 24(12), </volume> <year> 1991. </year>
Reference-contexts: Disco provides subtyping for modeling similar substructures, maps for modeling similar structures, and views for modeling dissimilar structures. All these features can be applied while incorporating new data sources, and associating types of objects in the data sources to the types defined in the mediators. In related research <ref> [1, 14, 16, 15, 17] </ref>, the main objective when integrating multiple data sources was obtaining a single unified type. <p> We plan to extend maps to handle nested types. A further extension is functions which map between domains and ranges, and will allow the mediator to resolve mismatch of values in the data sources during query processing. In prior research <ref> [1, 14, 16] </ref>, there has been much discussion about the mismatch of the data types, formats, values, etc., with respect to data sources and mediator types. In these previous approaches, the DBA resolves all conflict to obtain a single unifying type. Disco has no such objective. <p> First, the semantics of an answer are clearly defined. Second, if the unavailable data sources become available, and the answer is evaluated again, the original answer to the first query will be returned, as if all data sources were available in the first place. 5 Related work Pegasus <ref> [1] </ref>, UniSQL/M [16, 15] and SIMS [2] support mediator capabilities through a unified global schema which integrates each remote database and resolves conflicts among these remote databases [4] within this unified schema. These projects made substantial contributions in resolving conflicts among different schema and data models.
Reference: [2] <author> Y. Arens, C. Chee, C.-N. Hsu, and C. Knoblock. </author> <title> Retrieving and integrating data from multiple information sources. </title> <journal> Int. Journal of Intelligent and Coop. Inf. Systems, </journal> <volume> 2(2), </volume> <year> 1993. </year>
Reference-contexts: Second, if the unavailable data sources become available, and the answer is evaluated again, the original answer to the first query will be returned, as if all data sources were available in the first place. 5 Related work Pegasus [1], UniSQL/M [16, 15] and SIMS <ref> [2] </ref> support mediator capabilities through a unified global schema which integrates each remote database and resolves conflicts among these remote databases [4] within this unified schema. These projects made substantial contributions in resolving conflicts among different schema and data models.
Reference: [3] <author> T. Barsalou and D. Gangopadhay. </author> <title> M(DM): An open framework for interoperation of multimodel multidatabase systems. </title> <booktitle> Int. Conf. on Data Engineering, </booktitle> <year> 1992. </year>
Reference-contexts: Disco differs from these projects since we focus on dynamic features such as scalability as new sources are added, and query processing when sources are unavailable. Alternately, the capability of a mediator is supported by the use of higher-order query languages or meta-models <ref> [3, 8, 14, 17, 18] </ref>. Mediators are also implemented by mapping knowledge bases that capture the knowledge required to resolve conflicts among the local schema, and transformation algorithms that support query mediation and interopera-tion among relational and object databases [7, 19, 26, 27, 28].
Reference: [4] <author> C. Batini, M. Lenzerini, and S. Navathe. </author> <title> A comparative analysis of methodologies for database schema integration. </title> <journal> ACM Computing Surveys, </journal> <volume> 18(4) </volume> <pages> 323-364, </pages> <month> December </month> <year> 1986. </year>
Reference-contexts: answer to the first query will be returned, as if all data sources were available in the first place. 5 Related work Pegasus [1], UniSQL/M [16, 15] and SIMS [2] support mediator capabilities through a unified global schema which integrates each remote database and resolves conflicts among these remote databases <ref> [4] </ref> within this unified schema. These projects made substantial contributions in resolving conflicts among different schema and data models. Scalability was not explicitly addressed, and will pose problems, since the unified schema must be substantially modified as new sources are integrated.
Reference: [5] <author> M. Carey et al. </author> <title> Towards heterogeneous multimedia information systems: the garlic approach. </title> <type> Technical report, </type> <institution> IBM Almaden Research, </institution> <year> 1995. </year>
Reference-contexts: Arcs represent exchange of queries and answers. As shown in Figure 1, current distributed heterogeneous database systems <ref> [5, 24] </ref>, scale up by adopting a distributed architecture of several specialized components. End users interact with applications (A) written by application programmers. Applications access a uniform representation of the underlying sources through a uniform query language. <p> Thus, each Disco extent represents a collection of data in one data source. This intuition is the key to the Disco data model. (A more general approach associates an implementation with each data source <ref> [5, 29] </ref>) At this point, data access from the data source is possible. The following query: select x.name from x in person0 where x.salary &gt; 10 returns the answer Bag ("Mary") with respect to the data source defined in the introduction. <p> Here, too, scalability is a problem, since the higher-order queries or the mapping knowledge has to adapt, as additional sources are incorporated. In contrast to the unified global schema which resolves all conflicts among the entities of the local schema, the Garlic system <ref> [5] </ref>, and research described in [9, 21, 20], assume a mediator environment based on a common data model. In [9], the common data model is the ODMG standard object model [6], which extends the OMG object-oriented data model [12].
Reference: [6] <author> R. Cattell et al. </author> <title> The Object Database Standard - ODMG 93. </title> <publisher> Morgan Kaufmann, </publisher> <year> 1993. </year>
Reference-contexts: When objects are created or destroyed, the extent is updated automatically. Extents are the primary entry point for access to data. The Disco data model is based on the ODMG-93 data model specification <ref> [6] </ref>. <p> In [9], the common data model is the ODMG standard object model <ref> [6] </ref>, which extends the OMG object-oriented data model [12]. Semantic knowledge expresses the mappings among the multidatabase interface description and the local interface descriptions corresponding to each local database.
Reference: [7] <author> S. Chakravarthy, W.-K. Whang, and S. Navathe. </author> <title> A logic-based approach to query processing in federated databases. </title> <type> Tech. rep., </type> <institution> University of Florida, </institution> <year> 1993. </year>
Reference-contexts: Mediators are also implemented by mapping knowledge bases that capture the knowledge required to resolve conflicts among the local schema, and transformation algorithms that support query mediation and interopera-tion among relational and object databases <ref> [7, 19, 26, 27, 28] </ref>. Here, too, scalability is a problem, since the higher-order queries or the mapping knowledge has to adapt, as additional sources are incorporated.
Reference: [8] <author> J. Chomicki and W. Litwin. </author> <title> Declarative definition of object-oriented multidatabase mappings. In Distributed Object Management. </title> <publisher> Morgan Kauffman, </publisher> <year> 1993. </year>
Reference-contexts: Disco differs from these projects since we focus on dynamic features such as scalability as new sources are added, and query processing when sources are unavailable. Alternately, the capability of a mediator is supported by the use of higher-order query languages or meta-models <ref> [3, 8, 14, 17, 18] </ref>. Mediators are also implemented by mapping knowledge bases that capture the knowledge required to resolve conflicts among the local schema, and transformation algorithms that support query mediation and interopera-tion among relational and object databases [7, 19, 26, 27, 28].
Reference: [9] <author> D. Florescu, L. Raschid, and P. Valduriez. </author> <title> Using heterogeneous equivalences for query rewriting in multidatabase systems. </title> <booktitle> Intl. Conf. on Cooperative Inf. Systems, </booktitle> <year> 1995. </year>
Reference-contexts: Here, too, scalability is a problem, since the higher-order queries or the mapping knowledge has to adapt, as additional sources are incorporated. In contrast to the unified global schema which resolves all conflicts among the entities of the local schema, the Garlic system [5], and research described in <ref> [9, 21, 20] </ref>, assume a mediator environment based on a common data model. In [9], the common data model is the ODMG standard object model [6], which extends the OMG object-oriented data model [12]. <p> In contrast to the unified global schema which resolves all conflicts among the entities of the local schema, the Garlic system [5], and research described in [9, 21, 20], assume a mediator environment based on a common data model. In <ref> [9] </ref>, the common data model is the ODMG standard object model [6], which extends the OMG object-oriented data model [12]. Semantic knowledge expresses the mappings among the multidatabase interface description and the local interface descriptions corresponding to each local database. <p> All these equivalences are used for query reformulation. They address the problem of mismatch in the querying capability of the servers, since a query is reformulated using the views <ref> [9, 21, 20] </ref>. However, they do not focus on scalability issues. Although it is not described in this paper, we assume that there is such semantic knowledge, and it is used in query reformulation. <p> Acknowledgements Thanks to Eric Dujardin, Daniela Florescu, Michael Franklin, Jean-Robert Gruser, Catherine Hamon, Peter Schwarz, and Victor Vianu. Olga Kapit-skaia and Nicolas Gouble constructed a prototype Disco 0, based on the Flora query optimizer <ref> [9] </ref>.
Reference: [10] <author> G. Gardarin et al. IRO-DB: </author> <title> A distributed system federating object and relational databases. In Object-Oriented Multi-database Systems : A solution for Advanced Applications. </title> <publisher> Prentice Hall, </publisher> <year> 1996. </year>
Reference-contexts: They also do not consider data sources that do not have a fixed schema, or servers which have a less powerful query capability. Federated multidatabases include Interbase* [22], which provides transaction semantics for federations of heterogeneous servers, and IRO-DB <ref> [10] </ref>. The latter also uses ODMG as the common model and provides integrated schemas and global transaction management. Disco differs from these projects since we focus on dynamic features such as scalability as new sources are added, and query processing when sources are unavailable.
Reference: [11] <author> G. Graefe. </author> <title> Encapsulation of parallelism in the volcano query processing system. </title> <booktitle> ACM SIGMOD Intl. Conf., </booktitle> <year> 1990. </year>
Reference-contexts: Each logical expression can be executed by the mediator or by a wrapper, as appropriate. Each expression has an associated estimated cost. The expression with the lowest estimated cost is then executed by the run time system <ref> [11] </ref>. Disco models calls to a wrapper with the submit (source, expression) logical operator. This operator means that the meaning of the logical expression expression is located at source. When the query optimizer translates an OQL query into a logical expression, references to extents are translated into the submit operator.
Reference: [12] <institution> The Common Object Request Broker : Architecture and Specification. </institution> <address> Framingham, MA, </address> <year> 1992. </year>
Reference-contexts: In [9], the common data model is the ODMG standard object model [6], which extends the OMG object-oriented data model <ref> [12] </ref>. Semantic knowledge expresses the mappings among the multidatabase interface description and the local interface descriptions corresponding to each local database. Semantic knowledge is expressed as general equivalences, query i query j , where each query is expressed using the OQL query language.
Reference: [13] <author> A. Keller and J. Basu. </author> <title> A predicate-based caching scheme for client-server database architectures. </title> <note> To appear in the VLDB Journal, </note> <month> January </month> <year> 1996. </year>
Reference-contexts: In the case that the submit call does not exactly match, Disco searches for close matches. A close match is, e.g., a selection logical operator whose comparison operators match, but where the constants do not match. We believe that a variant of predicate-based caching <ref> [13] </ref> will accomplish close matching. While the associated statistics may be somewhat inaccurate, particularly if there is high data skew, we believe that these estimates are still useful.
Reference: [14] <author> W. Kent. </author> <title> Solving domain mismatch and schema mismatch problems with an object-oriented database programming language. </title> <booktitle> Very Large Data Bases, </booktitle> <year> 1991. </year>
Reference-contexts: Disco provides subtyping for modeling similar substructures, maps for modeling similar structures, and views for modeling dissimilar structures. All these features can be applied while incorporating new data sources, and associating types of objects in the data sources to the types defined in the mediators. In related research <ref> [1, 14, 16, 15, 17] </ref>, the main objective when integrating multiple data sources was obtaining a single unified type. <p> We plan to extend maps to handle nested types. A further extension is functions which map between domains and ranges, and will allow the mediator to resolve mismatch of values in the data sources during query processing. In prior research <ref> [1, 14, 16] </ref>, there has been much discussion about the mismatch of the data types, formats, values, etc., with respect to data sources and mediator types. In these previous approaches, the DBA resolves all conflict to obtain a single unifying type. Disco has no such objective. <p> Disco differs from these projects since we focus on dynamic features such as scalability as new sources are added, and query processing when sources are unavailable. Alternately, the capability of a mediator is supported by the use of higher-order query languages or meta-models <ref> [3, 8, 14, 17, 18] </ref>. Mediators are also implemented by mapping knowledge bases that capture the knowledge required to resolve conflicts among the local schema, and transformation algorithms that support query mediation and interopera-tion among relational and object databases [7, 19, 26, 27, 28].
Reference: [15] <author> W. Kim et al. </author> <title> On resolving schematic heterogeneity in multi-database systems. Distributed and Parallel Databases, </title> <type> 3(1), </type> <year> 1993. </year>
Reference-contexts: Disco provides subtyping for modeling similar substructures, maps for modeling similar structures, and views for modeling dissimilar structures. All these features can be applied while incorporating new data sources, and associating types of objects in the data sources to the types defined in the mediators. In related research <ref> [1, 14, 16, 15, 17] </ref>, the main objective when integrating multiple data sources was obtaining a single unified type. <p> Second, if the unavailable data sources become available, and the answer is evaluated again, the original answer to the first query will be returned, as if all data sources were available in the first place. 5 Related work Pegasus [1], UniSQL/M <ref> [16, 15] </ref> and SIMS [2] support mediator capabilities through a unified global schema which integrates each remote database and resolves conflicts among these remote databases [4] within this unified schema. These projects made substantial contributions in resolving conflicts among different schema and data models.
Reference: [16] <author> W. Kim and J.Seo. </author> <title> Classifying schematic and data heterogeneity in multi-database systems. </title> <booktitle> IEEE Computer, </booktitle> <pages> pages 12-18, </pages> <month> December </month> <year> 1991. </year>
Reference-contexts: Disco provides subtyping for modeling similar substructures, maps for modeling similar structures, and views for modeling dissimilar structures. All these features can be applied while incorporating new data sources, and associating types of objects in the data sources to the types defined in the mediators. In related research <ref> [1, 14, 16, 15, 17] </ref>, the main objective when integrating multiple data sources was obtaining a single unified type. <p> We plan to extend maps to handle nested types. A further extension is functions which map between domains and ranges, and will allow the mediator to resolve mismatch of values in the data sources during query processing. In prior research <ref> [1, 14, 16] </ref>, there has been much discussion about the mismatch of the data types, formats, values, etc., with respect to data sources and mediator types. In these previous approaches, the DBA resolves all conflict to obtain a single unifying type. Disco has no such objective. <p> Second, if the unavailable data sources become available, and the answer is evaluated again, the original answer to the first query will be returned, as if all data sources were available in the first place. 5 Related work Pegasus [1], UniSQL/M <ref> [16, 15] </ref> and SIMS [2] support mediator capabilities through a unified global schema which integrates each remote database and resolves conflicts among these remote databases [4] within this unified schema. These projects made substantial contributions in resolving conflicts among different schema and data models.
Reference: [17] <author> R. Krishnamurthy, W. Litwin, and W. Kent. </author> <title> Language features for interoperability of databases with schematic discrepancies. </title> <booktitle> ACM SIGMOD International Conference, </booktitle> <month> May </month> <year> 1991. </year>
Reference-contexts: In summary, Disco attacks fundamental problems in accessing a large number of heterogeneous sources. Explicit specification of the data sources, as objects, in the Disco data model, gives the DBA the capability to express queries that range over an unspecified collection of data sources <ref> [17] </ref>, or queries that refer to particular data sources. As a result, the mediator can use the full power of the OQL query language to query data in heterogeneous servers, in a transparent manner. <p> Disco provides subtyping for modeling similar substructures, maps for modeling similar structures, and views for modeling dissimilar structures. All these features can be applied while incorporating new data sources, and associating types of objects in the data sources to the types defined in the mediators. In related research <ref> [1, 14, 16, 15, 17] </ref>, the main objective when integrating multiple data sources was obtaining a single unified type. <p> Disco differs from these projects since we focus on dynamic features such as scalability as new sources are added, and query processing when sources are unavailable. Alternately, the capability of a mediator is supported by the use of higher-order query languages or meta-models <ref> [3, 8, 14, 17, 18] </ref>. Mediators are also implemented by mapping knowledge bases that capture the knowledge required to resolve conflicts among the local schema, and transformation algorithms that support query mediation and interopera-tion among relational and object databases [7, 19, 26, 27, 28].
Reference: [18] <author> L. Lakshmanan, F. Sadri, and I. Subramanian. </author> <title> On the logical foundations of schema integration and evolution in heterogeneous database systems. Deductive and Object-Oriented Databases, </title> <year> 1993. </year>
Reference-contexts: Disco differs from these projects since we focus on dynamic features such as scalability as new sources are added, and query processing when sources are unavailable. Alternately, the capability of a mediator is supported by the use of higher-order query languages or meta-models <ref> [3, 8, 14, 17, 18] </ref>. Mediators are also implemented by mapping knowledge bases that capture the knowledge required to resolve conflicts among the local schema, and transformation algorithms that support query mediation and interopera-tion among relational and object databases [7, 19, 26, 27, 28].
Reference: [19] <author> A. Lefebvre, P. Bernus, and R. Topor. </author> <title> Query transformation for accessing heterogeneous databases. </title> <booktitle> Joint Intl. Conf. and Symp. on Logic Programming, </booktitle> <year> 1992. </year>
Reference-contexts: Mediators are also implemented by mapping knowledge bases that capture the knowledge required to resolve conflicts among the local schema, and transformation algorithms that support query mediation and interopera-tion among relational and object databases <ref> [7, 19, 26, 27, 28] </ref>. Here, too, scalability is a problem, since the higher-order queries or the mapping knowledge has to adapt, as additional sources are incorporated.
Reference: [20] <author> A. Levy, A. Mendelzon, Y. Sagiv, and D. Srivastava. </author> <title> Answering queries using views. </title> <booktitle> ACM PODS Symp., </booktitle> <year> 1995. </year>
Reference-contexts: Here, too, scalability is a problem, since the higher-order queries or the mapping knowledge has to adapt, as additional sources are incorporated. In contrast to the unified global schema which resolves all conflicts among the entities of the local schema, the Garlic system [5], and research described in <ref> [9, 21, 20] </ref>, assume a mediator environment based on a common data model. In [9], the common data model is the ODMG standard object model [6], which extends the OMG object-oriented data model [12]. <p> All these equivalences are used for query reformulation. They address the problem of mismatch in the querying capability of the servers, since a query is reformulated using the views <ref> [9, 21, 20] </ref>. However, they do not focus on scalability issues. Although it is not described in this paper, we assume that there is such semantic knowledge, and it is used in query reformulation.
Reference: [21] <author> A. Levy, D. Srivastava, and T. Kirk. </author> <title> Data model and query evaluation in global information systems. </title> <journal> Journal on Intelligent Inf. Systems -Networked Information Retrieval, </journal> <year> 1995. </year>
Reference-contexts: Here, too, scalability is a problem, since the higher-order queries or the mapping knowledge has to adapt, as additional sources are incorporated. In contrast to the unified global schema which resolves all conflicts among the entities of the local schema, the Garlic system [5], and research described in <ref> [9, 21, 20] </ref>, assume a mediator environment based on a common data model. In [9], the common data model is the ODMG standard object model [6], which extends the OMG object-oriented data model [12]. <p> All these equivalences are used for query reformulation. They address the problem of mismatch in the querying capability of the servers, since a query is reformulated using the views <ref> [9, 21, 20] </ref>. However, they do not focus on scalability issues. Although it is not described in this paper, we assume that there is such semantic knowledge, and it is used in query reformulation.
Reference: [22] <author> J. Mullen, O. Bukhres, and A. Elmagarmid. </author> <title> Interbase*: A multidatabase system. In Object-Oriented Multidatabase Systems. </title> <publisher> Prentice Hall, </publisher> <year> 1995. </year>
Reference-contexts: Scalability was not explicitly addressed, and will pose problems, since the unified schema must be substantially modified as new sources are integrated. They also do not consider data sources that do not have a fixed schema, or servers which have a less powerful query capability. Federated multidatabases include Interbase* <ref> [22] </ref>, which provides transaction semantics for federations of heterogeneous servers, and IRO-DB [10]. The latter also uses ODMG as the common model and provides integrated schemas and global transaction management.
Reference: [23] <author> Y. Papakonstantinou, H. Garcia-Molina, and J. Ullman. Medmaker: </author> <title> A mediation system based on declarative specifications. </title> <booktitle> IEEE Conference on Data Engg., </booktitle> <year> 1996. </year>
Reference-contexts: However, they do not focus on scalability issues. Although it is not described in this paper, we assume that there is such semantic knowledge, and it is used in query reformulation. The focus of the TSIMMIS project <ref> [24, 25, 23] </ref> is the integration of structured and unstructured (schema-less) data sources, techniques for the rapid prototyping of wrappers and techniques for implementing mediators. The common model is an object-based information exchange model (OEM), which has a very simple specification.
Reference: [24] <author> Y. Papakonstantinou et al. </author> <title> Object exchange across heterogeneous information sources. </title> <booktitle> IEEE Conf. on Data Engg., </booktitle> <year> 1995. </year>
Reference-contexts: Arcs represent exchange of queries and answers. As shown in Figure 1, current distributed heterogeneous database systems <ref> [5, 24] </ref>, scale up by adopting a distributed architecture of several specialized components. End users interact with applications (A) written by application programmers. Applications access a uniform representation of the underlying sources through a uniform query language. <p> However, they do not focus on scalability issues. Although it is not described in this paper, we assume that there is such semantic knowledge, and it is used in query reformulation. The focus of the TSIMMIS project <ref> [24, 25, 23] </ref> is the integration of structured and unstructured (schema-less) data sources, techniques for the rapid prototyping of wrappers and techniques for implementing mediators. The common model is an object-based information exchange model (OEM), which has a very simple specification.
Reference: [25] <author> Y. Papakonstantinou,A. Gupta, H. Garcia-Molina, and J. Ull-man. </author> <title> A query translation schema for rapid implementation of wrappers. Deductive and Object-Oriented Databases, </title> <year> 1995. </year>
Reference-contexts: However, they do not focus on scalability issues. Although it is not described in this paper, we assume that there is such semantic knowledge, and it is used in query reformulation. The focus of the TSIMMIS project <ref> [24, 25, 23] </ref> is the integration of structured and unstructured (schema-less) data sources, techniques for the rapid prototyping of wrappers and techniques for implementing mediators. The common model is an object-based information exchange model (OEM), which has a very simple specification. <p> The common model is an object-based information exchange model (OEM), which has a very simple specification. They too address the issue of mismatch in the querying capability of different data sources, and propose techniques for query reformulation that resolves this mismatch. In <ref> [25] </ref>, they describe techniques for rapid prototyping of wrappers using query translation techniques.
Reference: [26] <author> X. Qian. </author> <title> Semantic interoperation via intelligent mediation. </title> <booktitle> IEEE Data Engg. Conference, RIDE Workshop, </booktitle> <year> 1993. </year>
Reference-contexts: Mediators are also implemented by mapping knowledge bases that capture the knowledge required to resolve conflicts among the local schema, and transformation algorithms that support query mediation and interopera-tion among relational and object databases <ref> [7, 19, 26, 27, 28] </ref>. Here, too, scalability is a problem, since the higher-order queries or the mapping knowledge has to adapt, as additional sources are incorporated.
Reference: [27] <author> X. Qian and L. Raschid. </author> <title> Translating object-oriented queries to relational queries. </title> <booktitle> IEEE Intl. Conf. on Data Engg., </booktitle> <year> 1995. </year>
Reference-contexts: Mediators are also implemented by mapping knowledge bases that capture the knowledge required to resolve conflicts among the local schema, and transformation algorithms that support query mediation and interopera-tion among relational and object databases <ref> [7, 19, 26, 27, 28] </ref>. Here, too, scalability is a problem, since the higher-order queries or the mapping knowledge has to adapt, as additional sources are incorporated.
Reference: [28] <author> L. Raschid and Y. Chang. </author> <title> Interoperable query processing from object to relational schemas based on a parameterized canonical representation. </title> <journal> Intl. Journal of Intelligent and Cooperative Inf. Systems, </journal> <year> 1995. </year>
Reference-contexts: Mediators are also implemented by mapping knowledge bases that capture the knowledge required to resolve conflicts among the local schema, and transformation algorithms that support query mediation and interopera-tion among relational and object databases <ref> [7, 19, 26, 27, 28] </ref>. Here, too, scalability is a problem, since the higher-order queries or the mapping knowledge has to adapt, as additional sources are incorporated.
Reference: [29] <author> P. Schwarz and K. Shoens. </author> <title> Managing change in the rufus system. </title> <booktitle> IEEE Intl. Conf. on Data Engg., </booktitle> <year> 1994. </year>
Reference-contexts: Thus, each Disco extent represents a collection of data in one data source. This intuition is the key to the Disco data model. (A more general approach associates an implementation with each data source <ref> [5, 29] </ref>) At this point, data access from the data source is possible. The following query: select x.name from x in person0 where x.salary &gt; 10 returns the answer Bag ("Mary") with respect to the data source defined in the introduction.
References-found: 29

