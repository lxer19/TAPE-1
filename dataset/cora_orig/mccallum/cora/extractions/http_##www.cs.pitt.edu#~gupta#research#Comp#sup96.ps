URL: http://www.cs.pitt.edu/~gupta/research/Comp/sup96.ps
Refering-URL: http://www.cs.pitt.edu/~gupta/research/dm.html
Root-URL: 
Email: fxyuan,melhem,guptag@cs.pitt.edu  
Title: Compiled Communication for All-optical TDM Networks  
Author: Xin Yuan Rami Melhem Rajiv Gupta 
Keyword: Keyword: Compiled Communication, Time-division Multiplexing, Interconnection Network, All-optical.  
Web: http://www.cs.pitt.edu/f~xyuan, ~melhem, ~guptag  
Address: Pittsburgh Pittsburgh, PA 15260  
Affiliation: Department of Computer Science University of  
Abstract: While all-optical networks offer large bandwidth for transferring data, the control mechanisms to dynamically establish all-optical paths incur large overhead. In this paper, we consider adapting all-optical multiplexed networks in multiprocessor or multicomputer environment by using compiled communication as an alternative to dynamic network control. Compiled communication eliminates the runtime overhead by managing network resources statically. Thus, it can employ complex off-line algorithms to improve resource utilization. We studied several off-line connection scheduling algorithms for minimizing the multiplexing degree required to satisfy communication requests. The performance of compiled communication is evaluated and compared with that of dynamically controlled communication for static communications in a number of application programs. Our results show that compiled communication out-performs dynamic communication to a large degree. Since most of the communication patterns in scientific applications are static, we conclude that compiled communication is an effective mechanism for all-optical networks in multiproces sor environments.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. A. Brackett, </author> <title> "Dense wavelength division multiplexing networks: Principles and applications," </title> <journal> IEEE Journal on Selected Areas of Communications, </journal> <volume> Vol. 8, </volume> <month> Aug. </month> <year> 1990. </year>
Reference-contexts: Therefore for a given topology multiplexing increases the connectivity of the network. Many research efforts have focussed on two multiplexing techniques for optical interconnection networks, namely time-division multiplexing (TDM) [12, 13, 14] and wavelength-division multiplexing (WDM) <ref> [1, 4] </ref>. TDM multiplexes the links by establishing different virtual channels during different time slots while WDM multiplexes the links by having different virtual channels use different wavelengths.
Reference: [2] <author> M. Bromley, S. Heller, T. McNerney and G. L. Steele, Jr. </author> <title> "Fortran at Ten Gigaflops: the Connection Machine Convolution Compiler," </title> <booktitle> in Proc. of SIGPLAN'91 Conf. on Programming Language Design and Implementation. </booktitle> <month> June, </month> <year> 1991. </year>
Reference-contexts: In order to apply compiled communication to a large scale multiprocessor system, three main issues must be addressed: 4 Communication pattern recognition: This issue has been considered by many researchers since information on communication patterns has been previously used to perform communication optimizations <ref> [2, 11, 7, 9] </ref>. The stencil compiler for CM-2 recognizes stencil communication patterns [2]. Chen and Li [11] incorporated pattern extraction mechanism in a compiler to support the use of collective communication primitives. Techniques for recognizing a broad set of communication patterns were also proposed in [7]. <p> The stencil compiler for CM-2 recognizes stencil communication patterns <ref> [2] </ref>. Chen and Li [11] incorporated pattern extraction mechanism in a compiler to support the use of collective communication primitives. Techniques for recognizing a broad set of communication patterns were also proposed in [7]. In this paper we rely upon existing techniques for identifying communication patterns.
Reference: [3] <author> F. Cappelllo and C. </author> <title> Germain. "Toward high communication performance through compiled communications on a circuit switched interconnection network," </title> <booktitle> in Proceedings of the Int'l Symp. on High Performance Computer Architecture, </booktitle> <pages> pages 44-53, </pages> <month> Jan. </month> <year> 1995. </year> <month> 14 </month>
Reference-contexts: Since the multiplexing degree for the network is controlled by the compiler, different multiplexing degrees can be used in different phases of the parallel program to establish the connections needed for interprocessor communication. 3 Compiled Communication Compiled Communication has recently drawn the attention of several researchers <ref> [3, 8] </ref>. It has been used in combination with message passing in the iWarp system [6]. Compiled communication is used for a specific set of patterns while other communications are handled using message passing. The prototype system described in [3] avoids the cost of supporting multiple communication models. <p> It has been used in combination with message passing in the iWarp system [6]. Compiled communication is used for a specific set of patterns while other communications are handled using message passing. The prototype system described in <ref> [3] </ref> avoids the cost of supporting multiple communication models. It relies exclusively upon compiled communication. However, the performance of this system is severely limited due to frequent dynamic reconfiguration of the network. In this paper we also assume that the system supports only the compiled communication model.
Reference: [4] <author> I. Chlamtac, A. Ganz and G. Karmi. </author> <title> "Lightpath Communications: An Approach to High Bandwidth Optical WAN's," </title> <journal> IEEE Trans. on Communications, </journal> <volume> Vol. 40, No. 7, </volume> <month> July </month> <year> 1992. </year>
Reference-contexts: Moreover, conversion of this information into the electronic domain increases the latency at intermediate nodes relative to the internode propagation delay. 1 Although this optical/electronic conversion may be acceptable for large distributed networks <ref> [4] </ref>, it represents a disadvantage for multiprocessor networks in which internode propagation delays are very small. Multiplexing techniques are used in optical networks to fully utilize the large bandwidth of optics. Multiplexing enables multiple virtual channels to be formed on a single link. <p> Therefore for a given topology multiplexing increases the connectivity of the network. Many research efforts have focussed on two multiplexing techniques for optical interconnection networks, namely time-division multiplexing (TDM) [12, 13, 14] and wavelength-division multiplexing (WDM) <ref> [1, 4] </ref>. TDM multiplexes the links by establishing different virtual channels during different time slots while WDM multiplexes the links by having different virtual channels use different wavelengths. <p> We have developed a number of message scheduling algorithms for computing the minimal set of configurations that satisfy a given set of communication patterns. Note that each configuration set corresponds to a multiplexing degree. It has been shown that optimal message scheduling for arbitrary topologies is NP-complete <ref> [4] </ref>. Therefore our algorithms are heuristics that are demonstrated to provide good performance. The configurations found by these heuristics are established using TDM. Handling dynamic patterns: Compiled communication cannot handle dynamic patterns efficiently.
Reference: [5] <author> A. Feldmann, T. M. Stricker and T. E. Warfel. </author> <title> "Supporting sets of arbitrary connections on iWarp through communication context switches," </title> <booktitle> in 5th ACM Symp. on Algorithms and Architectures, </booktitle> <pages> pages 203-212, </pages> <year> 1993 </year>
Reference: [6] <author> T. Gross. </author> <title> "Communication in iWarp Systems," </title> <booktitle> in Proceedings Supercomputing'89, </booktitle> <pages> pages 436-445, </pages> <address> ACM/IEEE, </address> <month> Nov. </month> <year> 1989. </year>
Reference-contexts: It has been used in combination with message passing in the iWarp system <ref> [6] </ref>. Compiled communication is used for a specific set of patterns while other communications are handled using message passing. The prototype system described in [3] avoids the cost of supporting multiple communication models. It relies exclusively upon compiled communication.
Reference: [7] <author> M. Gupta and P. Banerjee. </author> <title> "A Methodology for High-Level Synthesis of Communication on Multicomputers," </title> <booktitle> in International Conference on Supercomputing, </booktitle> <year> 1992. </year>
Reference-contexts: In order to apply compiled communication to a large scale multiprocessor system, three main issues must be addressed: 4 Communication pattern recognition: This issue has been considered by many researchers since information on communication patterns has been previously used to perform communication optimizations <ref> [2, 11, 7, 9] </ref>. The stencil compiler for CM-2 recognizes stencil communication patterns [2]. Chen and Li [11] incorporated pattern extraction mechanism in a compiler to support the use of collective communication primitives. Techniques for recognizing a broad set of communication patterns were also proposed in [7]. <p> The stencil compiler for CM-2 recognizes stencil communication patterns [2]. Chen and Li [11] incorporated pattern extraction mechanism in a compiler to support the use of collective communication primitives. Techniques for recognizing a broad set of communication patterns were also proposed in <ref> [7] </ref>. In this paper we rely upon existing techniques for identifying communication patterns. Compiling static patterns: Because the communication time in a multiplexed network is proportional to the multiplexing degree, compiled communication computes the minimal multiplexing degree required for satisfying the static communication patterns.
Reference: [8] <author> S. Hinrichs, C. Kosak, D.R. O'Hallaron, T. Stricker and R. </author> <title> Take. "An Architecture for Optimal All-to-All Personalized Communication," </title> <booktitle> in 6th Annual ACM Symposium on Parallel Algorithms and Architectures, </booktitle> <pages> pages 310-319, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: Since the multiplexing degree for the network is controlled by the compiler, different multiplexing degrees can be used in different phases of the parallel program to establish the connections needed for interprocessor communication. 3 Compiled Communication Compiled Communication has recently drawn the attention of several researchers <ref> [3, 8] </ref>. It has been used in combination with message passing in the iWarp system [6]. Compiled communication is used for a specific set of patterns while other communications are handled using message passing. The prototype system described in [3] avoids the cost of supporting multiple communication models. <p> Dense communication patterns may at most require all-to-all personalized communication (AAPC) where each node sends a message to every other node in the system. Any communication pattern can be embedded in AAPC. Many algorithms have been designed to perform AAPC efficiently for different topologies <ref> [8] </ref>. Among these algorithms, the ones that are of interest to us are the phased AAPC algorithms in which the AAPC connections are partitioned into contention-free phases. Since all the connections in each AAPC phase are contention-free, they form a configuration referred to as an AAPC configuration. <p> For example, following the algorithms in <ref> [8] </ref> at most N 3 =8 phases are needed for AAPC communication in a N fi N torus. Therefore in a N fi N torus, N 3 =8 degree is enough to satisfy any communication pattern. <p> In this case, the control overhead does not significantly affect communication efficiency. However, dense communication results in large number of conflicts in the system, and the dynamic control system may not be able 13 to resolve these conflicts efficiently. Our simulation confirms the conclusion in <ref> [8] </ref> that static management of the dense communication patterns results in large performance gains. In summary, compiled communication achieves high performance for all types of static patterns. Four factors contribute to the performance gain. First, compiled communication eliminates dynamic control overhead.
Reference: [9] <author> S. Hinrichs. </author> <title> "Compiler Directed Architecture-Dependent Communication Optimization," </title> <type> Ph.D dissertation, </type> <institution> School of Computer Science, Carnegie Mellon University, </institution> <year> 1995. </year>
Reference-contexts: In order to apply compiled communication to a large scale multiprocessor system, three main issues must be addressed: 4 Communication pattern recognition: This issue has been considered by many researchers since information on communication patterns has been previously used to perform communication optimizations <ref> [2, 11, 7, 9] </ref>. The stencil compiler for CM-2 recognizes stencil communication patterns [2]. Chen and Li [11] incorporated pattern extraction mechanism in a compiler to support the use of collective communication primitives. Techniques for recognizing a broad set of communication patterns were also proposed in [7].
Reference: [10] <author> D. Lahaut and C. </author> <title> Germain, "Static Communications in Parallel Scientific Programs," </title> <booktitle> in PARLE'94, Parallel Architecture & Languages, </booktitle> <address> Athen, Greece, </address> <month> July </month> <year> 1994. </year>
Reference-contexts: Although compiled communication is most effective for communication patterns that can be determined at compile time, the use of compiled communication is expected to improve the overall network performance significantly since over 95% of the communications in large scientific programs can be determined completely or parametrically at compile time <ref> [10] </ref>. Moreover, multiplexing improves the efficiency of compiled communication by reducing the frequency of network reconfiguration and the need for inserting additional synchronization operations at reconfiguration points. In this paper, we investigate the effectiveness of applying compiled communication technique to time-multiplexed all-optical networks. <p> Compiled communication handles the static patterns with high efficiency and at the same time it provides acceptable performance for dynamic patterns. Since recent studies <ref> [10] </ref> have shown that over 95% of the patterns in scientific computations are statically known, compiled communication provides an efficient means for handling communication requests. For the static patterns, compiled communication computes a minimal set of network configurations that satisfy the requirements of the patterns.
Reference: [11] <author> J. Li and M. Chen. </author> <title> "Compiling Communication -efficient Programs for Massive Parallel Machines," </title> <journal> IEEE Trans. on Parallel and Distributed Systems, </journal> <volume> 2(3) </volume> <pages> 361-376, </pages> <month> July </month> <year> 1991. </year>
Reference-contexts: In order to apply compiled communication to a large scale multiprocessor system, three main issues must be addressed: 4 Communication pattern recognition: This issue has been considered by many researchers since information on communication patterns has been previously used to perform communication optimizations <ref> [2, 11, 7, 9] </ref>. The stencil compiler for CM-2 recognizes stencil communication patterns [2]. Chen and Li [11] incorporated pattern extraction mechanism in a compiler to support the use of collective communication primitives. Techniques for recognizing a broad set of communication patterns were also proposed in [7]. <p> The stencil compiler for CM-2 recognizes stencil communication patterns [2]. Chen and Li <ref> [11] </ref> incorporated pattern extraction mechanism in a compiler to support the use of collective communication primitives. Techniques for recognizing a broad set of communication patterns were also proposed in [7]. In this paper we rely upon existing techniques for identifying communication patterns.
Reference: [12] <author> R. Melhem, </author> <booktitle> "Time-Multiplexing Optical Interconnection Network; Why Does it Pay Off?" in Proceedings of the 1995 ICPP workshop on Challenges for Parallel Processing, </booktitle> <pages> pages 30-35, </pages> <month> August </month> <year> 1995. </year>
Reference-contexts: It is possible to concurrently establish multiple connections using a single fiber in a multiplexed network. Therefore for a given topology multiplexing increases the connectivity of the network. Many research efforts have focussed on two multiplexing techniques for optical interconnection networks, namely time-division multiplexing (TDM) <ref> [12, 13, 14] </ref> and wavelength-division multiplexing (WDM) [1, 4]. TDM multiplexes the links by establishing different virtual channels during different time slots while WDM multiplexes the links by having different virtual channels use different wavelengths.
Reference: [13] <author> C. Qiao and R. Melhem, </author> <title> "Reconfiguration with Time Division Multiplexed MIN's for Multiprocessor Communications." </title> <journal> IEEE Trans. on Parallel and Distributed Systems, </journal> <volume> Vol. 5, No. 4, </volume> <month> April </month> <year> 1994. </year>
Reference-contexts: It is possible to concurrently establish multiple connections using a single fiber in a multiplexed network. Therefore for a given topology multiplexing increases the connectivity of the network. Many research efforts have focussed on two multiplexing techniques for optical interconnection networks, namely time-division multiplexing (TDM) <ref> [12, 13, 14] </ref> and wavelength-division multiplexing (WDM) [1, 4]. TDM multiplexes the links by establishing different virtual channels during different time slots while WDM multiplexes the links by having different virtual channels use different wavelengths. <p> Many current commercially massively parallel systems, such as CRAY-T3D and CM5, support a distributed clock that is synchronous in all processors. Dynamic control of TDM networks can be either centralized or distributed <ref> [13] </ref>. The centralized control mechanism uses a single controller to process all the requests and thus it does not scale with the system size. Since our approach targets large systems, the dynamic control 3 mechanism is assumed to be distributed. <p> Since our approach targets large systems, the dynamic control 3 mechanism is assumed to be distributed. Consequently, a fixed multiplexing degree is assumed because varying the multiplexing degree with distributed control is too costly to implement <ref> [13] </ref>. Distributed dynamic control schemes for TDM networks are discussed in [15, 17]. Compiled communication can be supported in TDM networks by inserting, in to the code executed on the processors, instructions to appropriately set the registers controlling the switches. <p> If additional requests remain, another configuration is created. This process is repeated till all requests have been included in some configuration. The algorithm described is a modification of an algorithm proposed in <ref> [13] </ref>. The algorithm is shown in Fig. 2.
Reference: [14] <author> C. Qiao and R. Melhem. </author> <title> "Reducing Communication Latency with Path Multiplexing in Optically Interconnected Multiprocessor Systems," </title> <booktitle> in Proceedings of the International Symposium on High Performance Computer Architecture, </booktitle> <pages> pages 34-43, </pages> <month> January </month> <year> 1995. </year>
Reference-contexts: It is possible to concurrently establish multiple connections using a single fiber in a multiplexed network. Therefore for a given topology multiplexing increases the connectivity of the network. Many research efforts have focussed on two multiplexing techniques for optical interconnection networks, namely time-division multiplexing (TDM) <ref> [12, 13, 14] </ref> and wavelength-division multiplexing (WDM) [1, 4]. TDM multiplexes the links by establishing different virtual channels during different time slots while WDM multiplexes the links by having different virtual channels use different wavelengths. <p> An example of such a network is the two-dimensional torus network shown in Fig. 1, where each processor is connected to a 5 fi 5 electro-optical switch, which is, in turn, connected to four other switches in a torus topology <ref> [14] </ref>. By controlling the contents of an electronic control register, a switch can connect any of its five optical inputs to any of its five optical outputs. The state of the network is determined by the states of all its switches.
Reference: [15] <author> C. Qiao and Y. Mei, </author> <title> "Wavelength Reservation Under Distributed Control," </title> <booktitle> in IEEE/LEOS summer topical meeting: Broadband Optical Networks, </booktitle> <month> August </month> <year> 1996. </year>
Reference-contexts: Since our approach targets large systems, the dynamic control 3 mechanism is assumed to be distributed. Consequently, a fixed multiplexing degree is assumed because varying the multiplexing degree with distributed control is too costly to implement [13]. Distributed dynamic control schemes for TDM networks are discussed in <ref> [15, 17] </ref>. Compiled communication can be supported in TDM networks by inserting, in to the code executed on the processors, instructions to appropriately set the registers controlling the switches. Writing onto these registers must be synchronized to avoid non-deterministic network states. <p> When using dynamically controlled communication, a path reservation protocol must be supported. Detailed discussion about the path reservation protocols can be found in <ref> [15, 17] </ref>.
Reference: [16] <author> K.M. Sivalingam and P.W. Dowd, </author> <title> "Latency hiding strategies of pre-allocation based media access protocols for WDM photonic networks," </title> <booktitle> in Proc. 26th IEEE Simulation Symposium, </booktitle> <pages> pages 68 - 77, </pages> <month> Mar. </month> <year> 1993. </year>
Reference-contexts: Since the control algorithms are executed off-line by the compiler, complex strategies to manage the network resources can be employed. The control network, along with the limitations in its implementation, such as the head-of-line effect due to single queue <ref> [16] </ref>, is altogether eliminated. Since no routing decisions are made at runtime, the packet header can also be eliminated causing the network bandwidth to be utilized more effectively. The combination of TDM and compiled communication enables the reduction of network synchronization and reconfiguration overhead. <p> This is most significant for communication with small message sizes, where the overhead in dynamic communication is large compared to the communication time. Second, compiled communication takes the whole communication pattern into consideration, while dynamic communication, which considers the connection requests one by one, suffers from the head-of-line effect <ref> [16] </ref>. Third, the off-line message scheduling algorithm further optimizes the communication efficiency for compiled communication. Fourth, compiled communication allows the system to use various multiplexing degrees for different communication patterns. In dynamic communication, control mechanism with variable multiplexing degree is very difficult to implement and results in large overhead.
Reference: [17] <author> X. Yuan, R. Gupta and R. Melhem, </author> <title> "Distributed Control in Optical WDM Networks," </title> <booktitle> in IEEE Conf. on Military Communications, </booktitle> <month> Oct. </month> <pages> 21-24, </pages> <address> 1996, McLean, VA. </address> <month> 15 </month>
Reference-contexts: Since our approach targets large systems, the dynamic control 3 mechanism is assumed to be distributed. Consequently, a fixed multiplexing degree is assumed because varying the multiplexing degree with distributed control is too costly to implement [13]. Distributed dynamic control schemes for TDM networks are discussed in <ref> [15, 17] </ref>. Compiled communication can be supported in TDM networks by inserting, in to the code executed on the processors, instructions to appropriately set the registers controlling the switches. Writing onto these registers must be synchronized to avoid non-deterministic network states. <p> When using dynamically controlled communication, a path reservation protocol must be supported. Detailed discussion about the path reservation protocols can be found in <ref> [15, 17] </ref>.
References-found: 17

