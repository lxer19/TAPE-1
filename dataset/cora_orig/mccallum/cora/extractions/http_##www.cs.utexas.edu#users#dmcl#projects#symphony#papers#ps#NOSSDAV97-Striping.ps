URL: http://www.cs.utexas.edu/users/dmcl/projects/symphony/papers/ps/NOSSDAV97-Striping.ps
Refering-URL: http://www.cs.utexas.edu/users/dmcl/projects/symphony/papers.html
Root-URL: http://www.cs.utexas.edu
Email: E-mail: fshenoy,ving@cs.utexas.edu,  
Phone: Telephone: (512) 471-9732, Fax: (512) 471-8885  
Title: Efficient Striping Techniques for Multimedia File Servers  
Author: Prashant J. Shenoy and Harrick M. Vin 
Web: URL: http://www.cs.utexas.edu/users/dmcl  
Address: Taylor Hall 2.124, Austin, Texas 78712-1188, USA  
Affiliation: Distributed Multimedia Computing Laboratory Department of Computer Sciences, University of Texas at Austin  
Abstract: The performance of striped disk arrays is governed by two parameters: the stripe unit size and the degree of striping. In this paper, we describe techniques for determining the stripe unit size and degree of striping for disk arrays storing variable bit rate continuous media data. We present an analytical model that uses the server configuration and the workload characteristics to predict the load on the most heavily loaded disk in redundant and non-redundant arrays. We then use the model to determine the optimal stripe unit size for different workloads. We also use the model to study the effect of various system parameters on the optimal stripe unit size. To determine the degree of striping, we first demonstrate that striping a continuous media stream across all disks in the array causes the number of clients supported to increase sub-linearly with increase in the number of disks. To maximize the number of clients supported in large arrays, we propose a technique that partitions a disk array and stripes each media stream across a single partition. Since load imbalance can occur in such partitioned arrays, we present an analytical model to compute the imbalance across partitions in the array. We then use the model to determine a partition size that minimizes the load imbalance, and hence, maximizes the number of clients supported by the array. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Berson, S. Ghandeharizadeh, R. Muntz, and X. Ju. </author> <title> Staggered Striping in Multimedia Information Systems. </title> <booktitle> In Proceedings of ACM SIGMOD, </booktitle> <year> 1994. </year>
Reference-contexts: Simulation studies of the cost-performance tradeoffs of striped continuous media servers were carried out in [2, 11]. These studies examine the tradeoffs of using different placement schemes in striped disk arrays. Striping in continuous media servers employing declus-tered parity arrays was investigated in <ref> [1] </ref>. A comparison of striping in RAID-3 and RAID-5 based continuous media servers was presented in [15]. The paper demonstrates that bit-interleaved RAID-3 arrays can cause a significant degradation in the number of clients supported as compared to block-interleaved RAID-5 arrays.
Reference: [2] <author> E. Chang and A. Zakhor. </author> <title> Cost Analyses for VBR Video Servers. </title> <booktitle> In Proceedings of Multimedia Computing and Networking (MMCN) Conference, </booktitle> <pages> pages 381397, </pages> <year> 1996. </year>
Reference-contexts: Many other striping related issues that are complementary to the problem addressed in this paper have been investigated. Striping techniques that minimize buffer requirements in continuous media servers have been proposed in <ref> [2, 7, 22] </ref>. Simulation studies of the cost-performance tradeoffs of striped continuous media servers were carried out in [2, 11]. These studies examine the tradeoffs of using different placement schemes in striped disk arrays. Striping in continuous media servers employing declus-tered parity arrays was investigated in [1]. <p> Striping techniques that minimize buffer requirements in continuous media servers have been proposed in [2, 7, 22]. Simulation studies of the cost-performance tradeoffs of striped continuous media servers were carried out in <ref> [2, 11] </ref>. These studies examine the tradeoffs of using different placement schemes in striped disk arrays. Striping in continuous media servers employing declus-tered parity arrays was investigated in [1]. A comparison of striping in RAID-3 and RAID-5 based continuous media servers was presented in [15].
Reference: [3] <author> P. Chen and D. Patterson. </author> <title> Maximizing Performance in a Striped Disk Array. </title> <booktitle> Proceedings of ACM SIGARCH Conference on Computer Architecture, </booktitle> <address> Seattle, WA, </address> <pages> pages 322331, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: Recently, techniques for determining the stripe unit size and the degree of striping for conventional workloads consisting of textual and numeric data accesses have been proposed <ref> [3, 5, 14] </ref>. However, these techniques are not directly applicable to file servers optimized for storing audio or video (referred to as continuous media) due to the following fundamental characteristics: * Real-time requirements of continuous media: Textual and numeric data accesses require good response times but no absolute performance guarantees. <p> In contrast, due to its real-time nature, continuous media accesses require the file server to provide bounds on response times. Hence, a stripe unit size that minimizes the average response time is considered optimal for textual and numeric data <ref> [3] </ref>, while a stripe unit size that minimizes the tail of the response time distribution (possibly at the expense of an increased average response time) is more desirable for continuous media data. This fundamental difference in the optimization criterion has a significant impact on the selection of stripe unit size. <p> For each parameter, we also compute the range of block sizes that yields a service time within x% of the minimum. The upper and lower bounds of this set of block sizes define the x% optimal envelope for the workload <ref> [3, 20] </ref>. <p> parameters on the optimal block size can be explained using arguments similar to those presented above. 6 Due to space limitations, we present only a summary of our results in Table 2 and refer the reader to [19] for details. 6 Similar trends have been observed for conventional disk arrays <ref> [3] </ref>. However, the actual values of the stripe unit sizes obtained for the two environments are different. <p> In such a scenario, a block size that yields good performance over a wide range of workloads must be chosen <ref> [3] </ref>. For every parameter that is unknown at design time, the range over which the parameter is likely to vary must first be estimated. The optimal block size and the x% optimal envelope for each combination of these parameters is then computed using the model. <p> Detailed cost-performance tradeoffs of such an approach is beyond the scope of this paper. 4 Related Work Several research projects have developed simulation and analytical techniques for optimizing the performance of striped disk arrays for conventional workloads <ref> [3, 4, 5, 14] </ref>. As demonstrated in Section 1, due to the real-time nature of continuous media accesses, these techniques are not directly applicable for optimizing performance in multimedia servers. The problem of determining the optimal stripe unit size for non-redundant arrays storing continuous media was studied in [20].
Reference: [4] <author> P. M. Chen, G. A. Gibson, R. H. Katz, and D. A. Pat-terson. </author> <title> An Evaluation of Redundant Arrays of Disks using an Amdahl 5890. </title> <booktitle> In Proceedings of ACM SIG-METRICS, </booktitle> <pages> pages 7485, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: Detailed cost-performance tradeoffs of such an approach is beyond the scope of this paper. 4 Related Work Several research projects have developed simulation and analytical techniques for optimizing the performance of striped disk arrays for conventional workloads <ref> [3, 4, 5, 14] </ref>. As demonstrated in Section 1, due to the real-time nature of continuous media accesses, these techniques are not directly applicable for optimizing performance in multimedia servers. The problem of determining the optimal stripe unit size for non-redundant arrays storing continuous media was studied in [20].
Reference: [5] <author> P. M. Chen and E. K. Lee. </author> <title> Striping in a RAID Level 5 Disk Array. </title> <booktitle> In Proceedings of the 1995 ACM SIG-METRICS Conference on Measurement and Modeling of Computer Systems, </booktitle> <month> May </month> <year> 1995. </year>
Reference-contexts: Recently, techniques for determining the stripe unit size and the degree of striping for conventional workloads consisting of textual and numeric data accesses have been proposed <ref> [3, 5, 14] </ref>. However, these techniques are not directly applicable to file servers optimized for storing audio or video (referred to as continuous media) due to the following fundamental characteristics: * Real-time requirements of continuous media: Textual and numeric data accesses require good response times but no absolute performance guarantees. <p> Detailed cost-performance tradeoffs of such an approach is beyond the scope of this paper. 4 Related Work Several research projects have developed simulation and analytical techniques for optimizing the performance of striped disk arrays for conventional workloads <ref> [3, 4, 5, 14] </ref>. As demonstrated in Section 1, due to the real-time nature of continuous media accesses, these techniques are not directly applicable for optimizing performance in multimedia servers. The problem of determining the optimal stripe unit size for non-redundant arrays storing continuous media was studied in [20].
Reference: [6] <author> P. M. Chen, E. K. Lee, G. A. Gibson, R. H. Katz, and D. A. Patterson. </author> <title> RAID: High-Performance, Reliable Secondary Storage. </title> <journal> ACM Computing Surveys, </journal> <pages> pages 145185, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: Moreover, the model also yields the distribution of the number of blocks accessed from a disk with average load (i.e., N j ). The service time of such a disk can then be computed using the disk model. The analytical model for redundant arrays assumes a RAID architecture <ref> [6, 17] </ref>, in which fault-tolerance is achieved by maintaining error correcting codes (referred to as parity) on disks in the array. Our model can predict the service time of the most heavily loaded disk, both in the presence and absence of disk failures.
Reference: [7] <author> A. Cohen, W. A. Burkhard, and P. V. Rangan. </author> <title> Pipelined Disk Arrays for Digital Movie Retrieval. </title> <booktitle> In Proceedings of the International Conference on Multimedia Computing Systems (ICMCS), </booktitle> <pages> pages 312 317, </pages> <year> 1995. </year>
Reference-contexts: Many other striping related issues that are complementary to the problem addressed in this paper have been investigated. Striping techniques that minimize buffer requirements in continuous media servers have been proposed in <ref> [2, 7, 22] </ref>. Simulation studies of the cost-performance tradeoffs of striped continuous media servers were carried out in [2, 11]. These studies examine the tradeoffs of using different placement schemes in striped disk arrays. Striping in continuous media servers employing declus-tered parity arrays was investigated in [1].
Reference: [8] <author> A. Dan and D. Sitaram. </author> <title> An Online Video Placement Policy based on Bandwidth to Space Ratio (BSR). </title> <booktitle> In Proceedings of ACM SIGMOD'95, </booktitle> <address> San Jose, CA, </address> <pages> pages 376385, </pages> <month> May </month> <year> 1995. </year>
Reference-contexts: Let us assume that the server employs a placement policy that assigns streams to partitions such that each partition is equally likely to be accessed by a new request <ref> [8, 21] </ref>. That is, the probability that a newly arriving client accesses a partition is q = d=D. <p> The problem of determining the partition size was not addressed in the paper. The problem of assigning media streams to array partitions subject so as to balance the load across partitions has been dealt in <ref> [8, 21] </ref>. These efforts complement our work since they do not deal with the issue of determining an optimal partition size for large disk arrays. Many other striping related issues that are complementary to the problem addressed in this paper have been investigated.
Reference: [9] <author> J. K. Dey-Sircar, J. D. Salehi, J. F. Kurose, and D. Towsley. </author> <title> Providing VCR Capabilities in Large-Scale Video Servers. </title> <booktitle> In Proceedings of the Second ACM International Conference on Multimedia, </booktitle> <pages> pages 2532, </pages> <month> October </month> <year> 1994. </year>
Reference-contexts: The paper investigates application level striping and disk driver level striping with respect to scalability and performance. The effect of fast-forward operations on the performance of striped continuous media servers was investigated in <ref> [9] </ref>. Finally, striping techniques for tertiary storage systems were analyzed in [12]. 5 Concluding Remarks In this paper, we have described techniques for determining the stripe unit size and the degree of striping for file servers storing continuous media data.
Reference: [10] <author> R. Flynn and W. Tetzlaff. </author> <title> Disk Striping and Block Replication Algorithms for Video File Servers. </title> <booktitle> In Proceedings of the International Conference on Multimedia Computing Systems (ICMCS), </booktitle> <pages> pages 590 597, </pages> <year> 1996. </year>
Reference-contexts: The problem of determining block size in redundant arrays or determining the degree of striping was not addressed in the paper. The problem of determining the degree of striping has not received much attention in the literature. A comparison of wide and narrow striping schemes was presented in <ref> [10] </ref>. The focus of their effort was to evaluate the effect of replicating media streams across array partitions on the response time. The problem of determining the partition size was not addressed in the paper.
Reference: [11] <author> S. Ghandeharizadeh and S. H. Kim. </author> <title> Striping in Multi-disk Video Servers. </title> <booktitle> In Proceedings of the SPIE High-Density Data Recording and Retrieval Technologies Conference, </booktitle> <month> Oct </month> <year> 1995. </year>
Reference-contexts: Striping techniques that minimize buffer requirements in continuous media servers have been proposed in [2, 7, 22]. Simulation studies of the cost-performance tradeoffs of striped continuous media servers were carried out in <ref> [2, 11] </ref>. These studies examine the tradeoffs of using different placement schemes in striped disk arrays. Striping in continuous media servers employing declus-tered parity arrays was investigated in [1]. A comparison of striping in RAID-3 and RAID-5 based continuous media servers was presented in [15].
Reference: [12] <author> L. Golubchik, R. R. Muntz, and R. W. Watson. </author> <title> Analysis of Striping Techniques in Robotic Storage Libraries. </title> <booktitle> In Proceedings of the 14th IEEE Symposium on Mass Storage Systems, Also Appeared as a poster at Supercomputing '94, </booktitle> <address> Washington, D.C., </address> <month> November </month> <year> 1994. </year>
Reference-contexts: The paper investigates application level striping and disk driver level striping with respect to scalability and performance. The effect of fast-forward operations on the performance of striped continuous media servers was investigated in [9]. Finally, striping techniques for tertiary storage systems were analyzed in <ref> [12] </ref>. 5 Concluding Remarks In this paper, we have described techniques for determining the stripe unit size and the degree of striping for file servers storing continuous media data.
Reference: [13] <author> J. Hsieh, M. Lin, J. C. L. Liu, and D. H. C. Du. </author> <title> Performance of A Mass Storage System for Video-On-Demand. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <note> Special Issue on Multimedia Processing and Technology (to appear), </note> <year> 1996. </year>
Reference-contexts: The paper demonstrates that bit-interleaved RAID-3 arrays can cause a significant degradation in the number of clients supported as compared to block-interleaved RAID-5 arrays. A performance evaluation of striping techniques in an actual continuous media server based on RAID-3 arrays was presented in <ref> [13] </ref>. The paper investigates application level striping and disk driver level striping with respect to scalability and performance. The effect of fast-forward operations on the performance of striped continuous media servers was investigated in [9].
Reference: [14] <author> E.K. Lee and R.H. Katz. </author> <title> An Analytic Performance Model for Disk Arrays. </title> <booktitle> In Proceedings of the 1993 ACM SIGMETRICS, </booktitle> <pages> pages 98109, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: Recently, techniques for determining the stripe unit size and the degree of striping for conventional workloads consisting of textual and numeric data accesses have been proposed <ref> [3, 5, 14] </ref>. However, these techniques are not directly applicable to file servers optimized for storing audio or video (referred to as continuous media) due to the following fundamental characteristics: * Real-time requirements of continuous media: Textual and numeric data accesses require good response times but no absolute performance guarantees. <p> Having determined the distribution of the number of blocks accessed from the most heavily loaded disk, the service time of the disk can then be computed by using a disk model. We use one such model that has been proposed in the literature <ref> [14, 20] </ref> (see [19] for the complete disk model). <p> Detailed cost-performance tradeoffs of such an approach is beyond the scope of this paper. 4 Related Work Several research projects have developed simulation and analytical techniques for optimizing the performance of striped disk arrays for conventional workloads <ref> [3, 4, 5, 14] </ref>. As demonstrated in Section 1, due to the real-time nature of continuous media accesses, these techniques are not directly applicable for optimizing performance in multimedia servers. The problem of determining the optimal stripe unit size for non-redundant arrays storing continuous media was studied in [20].
Reference: [15] <author> B. Ozden, R. Rastogi, and A. Silberschatz. </author> <title> Disk Striping in Video Server Environments. </title> <booktitle> In Proceedings of the International Conference on Multimedia Computing Systems (ICMCS), </booktitle> <pages> pages 580589, </pages> <year> 1996. </year>
Reference-contexts: These studies examine the tradeoffs of using different placement schemes in striped disk arrays. Striping in continuous media servers employing declus-tered parity arrays was investigated in [1]. A comparison of striping in RAID-3 and RAID-5 based continuous media servers was presented in <ref> [15] </ref>. The paper demonstrates that bit-interleaved RAID-3 arrays can cause a significant degradation in the number of clients supported as compared to block-interleaved RAID-5 arrays. A performance evaluation of striping techniques in an actual continuous media server based on RAID-3 arrays was presented in [13].
Reference: [16] <author> A. Papoulis. </author> <title> Probability, Random Variables, and Stochastic Processes. </title> <publisher> McGraw Hill, </publisher> <year> 1991. </year>
Reference-contexts: The distribution of Y can then be computed using a polynomial multiplication of the z-transforms of U 1 ; U 2 ; ; U n <ref> [16] </ref>. where Z (X i ) = p 0 ij + z 2 p 2 ij + (6) Then, the number of blocks accessed from the most heavily loaded disk is given by N max = max (N 1 ; N 2 ; ; N D ) (7) Due to the <p> Then, the distribution of N max can be computed as F N max (x) = F N 1 (x) F N 2 (x) F N D (x) (8) where F N j is the cumulative probability distribution func tion of the random variable N j <ref> [16] </ref>. Having determined the distribution of the number of blocks accessed from the most heavily loaded disk, the service time of the disk can then be computed by using a disk model. <p> Hence, the distribution of Y max can be computed as: F Y max (x) = F Y 1 (x) F Y 2 (x) F D (x) (14) where F Y j is the cumulative probability distribution func tion of the random variable Y j <ref> [16] </ref>. Given the distribution of Y i and Y max , we can compute the expected number of requests on the average and the most heavily loaded partitions (denoted by b Y and b Y max , respectively).
Reference: [17] <author> D. Patterson, G. Gibson, and R. Katz. </author> <title> A Case for Redundant Array of Inexpensive Disks (RAID). </title> <booktitle> ACM SIGMOD'88, </booktitle> <pages> pages 109116, </pages> <month> June </month> <year> 1988. </year>
Reference-contexts: Moreover, the model also yields the distribution of the number of blocks accessed from a disk with average load (i.e., N j ). The service time of such a disk can then be computed using the disk model. The analytical model for redundant arrays assumes a RAID architecture <ref> [6, 17] </ref>, in which fault-tolerance is achieved by maintaining error correcting codes (referred to as parity) on disks in the array. Our model can predict the service time of the most heavily loaded disk, both in the presence and absence of disk failures.
Reference: [18] <author> J. Salehi, Z. Zhang, J. Kurose, and D. Towsley. </author> <title> Supporting Stored Video: Reducing Rate Variability and End-to-End Resource Requirements through Optimal Smoothing. </title> <booktitle> In Proceedings of SIGMETRICS '96, </booktitle> <address> Philadelphia, PA, </address> <month> May </month> <year> 1996. </year>
Reference-contexts: Even when fixed-size blocks are used, the number of blocks accessed by a client during each round can be made constant by prefetching and buffering sufficient of data. Depending on the amount of variation in the stream bit rate, such an approach can increase the initiation latency <ref> [18] </ref>, or reduce the number of clients supported by the server. Thus, these alternative approaches have their tradeoffs.
Reference: [19] <author> P. J. Shenoy and H M. Vin. </author> <title> Efficient Striping Techniques for Multimedia File Servers. </title> <type> Technical Report TR96-27, </type> <institution> Dept. of Computer Sciences, Univ. of Texas at Austin, </institution> <year> 1996. </year>
Reference-contexts: Having determined the distribution of the number of blocks accessed from the most heavily loaded disk, the service time of the disk can then be computed by using a disk model. We use one such model that has been proposed in the literature [14, 20] (see <ref> [19] </ref> for the complete disk model). <p> Due to lack of space, we omit the presentation of the model. A detailed description of the model can be found in <ref> [19] </ref>. To validate the model, we have built an event-based, trace-driven disk array simulator called DiskSim. 5 We digitized a number of traces and used these traces to run simulations over a wide range of system parameters (e.g., different number of clients, different number of disks, different round durations, etc.). <p> The effect of all of these parameters on the optimal block size can be explained using arguments similar to those presented above. 6 Due to space limitations, we present only a summary of our results in Table 2 and refer the reader to <ref> [19] </ref> for details. 6 Similar trends have been observed for conventional disk arrays [3]. However, the actual values of the stripe unit sizes obtained for the two environments are different.
Reference: [20] <author> H.M. Vin, S.S. Rao, and P. Goyal. </author> <title> Optimizing the Placement of Multimedia Objects on Disk Arrays. </title> <booktitle> In Proceedings of the Second IEEE International Conference on Multimedia Computing and Systems, </booktitle> <address> Washington, D.C., </address> <pages> pages 158165, </pages> <month> May </month> <year> 1995. </year>
Reference-contexts: For instance, the sever can use variable-size blocks and store a fixed number of media units in each block <ref> [20] </ref>. However, due to variable block sizes, such a policy makes file system design more complex. Even when fixed-size blocks are used, the number of blocks accessed by a client during each round can be made constant by prefetching and buffering sufficient of data. <p> Having determined the distribution of the number of blocks accessed from the most heavily loaded disk, the service time of the disk can then be computed by using a disk model. We use one such model that has been proposed in the literature <ref> [14, 20] </ref> (see [19] for the complete disk model). <p> For each parameter, we also compute the range of block sizes that yields a service time within x% of the minimum. The upper and lower bounds of this set of block sizes define the x% optimal envelope for the workload <ref> [3, 20] </ref>. <p> As demonstrated in Section 1, due to the real-time nature of continuous media accesses, these techniques are not directly applicable for optimizing performance in multimedia servers. The problem of determining the optimal stripe unit size for non-redundant arrays storing continuous media was studied in <ref> [20] </ref>. A model that predicts the service time increase in the partition size of the most heavily loaded disk for non-redundant arrays (henceforth referred to as the VRG model) was also proposed in the paper. <p> The analytical models presented in this paper are the first to accurately characterize the load on the disk array for VBR streams. The only previously known model for VBR streams <ref> [20] </ref> uses worst case assumptions, and hence, yields sub-optimal results. Furthermore, our models can also be used by multimedia file servers to compute the number of clients that can be supported, which can then be used for admission control.
Reference: [21] <author> J. Wolf, P. S. Yu, and H. Shachnai. </author> <title> DASD Dancing-A Disk Load Balancing Optimization Scheme for Video-on-Demand Computer Systems. </title> <booktitle> In Proceedings of ACM SIGMETRICS'95, </booktitle> <pages> pages 157166, </pages> <year> 1995. </year>
Reference-contexts: Let us assume that the server employs a placement policy that assigns streams to partitions such that each partition is equally likely to be accessed by a new request <ref> [8, 21] </ref>. That is, the probability that a newly arriving client accesses a partition is q = d=D. <p> The problem of determining the partition size was not addressed in the paper. The problem of assigning media streams to array partitions subject so as to balance the load across partitions has been dealt in <ref> [8, 21] </ref>. These efforts complement our work since they do not deal with the issue of determining an optimal partition size for large disk arrays. Many other striping related issues that are complementary to the problem addressed in this paper have been investigated.
Reference: [22] <author> P. Yu, M.S. Chen, and D.D. Kandlur. </author> <title> Design and Analysis of a Grouped Sweeping Scheme for Multimedia Storage Management. </title> <booktitle> Proceedings of Third International Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <address> San Diego, </address> <pages> pages 3849, </pages> <month> November </month> <year> 1992. </year>
Reference-contexts: Many other striping related issues that are complementary to the problem addressed in this paper have been investigated. Striping techniques that minimize buffer requirements in continuous media servers have been proposed in <ref> [2, 7, 22] </ref>. Simulation studies of the cost-performance tradeoffs of striped continuous media servers were carried out in [2, 11]. These studies examine the tradeoffs of using different placement schemes in striped disk arrays. Striping in continuous media servers employing declus-tered parity arrays was investigated in [1].
References-found: 22

