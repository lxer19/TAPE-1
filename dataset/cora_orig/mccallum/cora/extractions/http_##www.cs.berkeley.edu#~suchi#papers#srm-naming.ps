URL: http://www.cs.berkeley.edu/~suchi/papers/srm-naming.ps
Refering-URL: http://www.cs.berkeley.edu/~suchi/research/
Root-URL: 
Email: fsuchi,mccanneg@cs.berkeley.edu  
Title: Scalable Data Naming for Application Level Framing in Reliable Multicast  
Author: Suchitra Raman and Steven McCanne 
Affiliation: Department of Electrical Engineering and Computer Science University of California, Berkeley  
Pubnum: Tracking No. S-166  
Abstract: Traditional ARQ-based reliable transport protocols for unicast and multicast use sequential numbering of data units and detect losses from discontinuities in the sequence of received packets. The Application Level Framing (ALF) [2] model encourages sophisticated application control over loss-detection and recovery. With sequence numbers, the application must express its selective reliability requirements using ranges of sequence numbers. This is both cumbersome and restrictive for applications since they have no knowledge of the mapping from data to transport-level sequence numbers. Distributed whiteboard applications, webcast, and file system multicasting are some examples of applications where receivers can greatly benefit from customizing their reliability requirements. In this paper, we propose a hierarchical data naming scheme that enhances the expressibility of an application's reliability and ordering requirements. We apply this scheme to build a framework for light-weight Scalable Reliable Multicast (SRM) [7] sessions, and develop a reliable and scalable announcement protocol to disseminate the structure of the namespace. Based on simulation studies of convergence time and message complexity of the protocol, we demostrate that the protocol's bandwidth consumption scales well to large group sizes. We have designed and implemented this Scalable Naming and Announcement Protocol (SNAP) as part of the MASH [18] toolkit. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> CHESSON, G. </author> <title> XTP/protocol engine design. </title> <booktitle> In Proceedings of the IFIP WG6.1/6.4 Workshop (Ruschlikon, </booktitle> <month> May </month> <year> 1989). </year> <title> Submitted to ACM Multimedia '98 Tracking No. S-166 13 plements the mapping from structured names used by the application to transport level identifiers. SRM timer mechanisms and the namespace dissemination protocol (SNAP) are core transport layer functions. The transport layer ex poses a low-level API to the application or middleware component that enables selective reliability. </title>
Reference-contexts: section describes these problems and motivates the need for an integrated data naming scheme between the application and the reliable multicast transport protocol, using ALF concepts. 3.1 Data Buffering One of the main problems in designing a reliable multi-cast protocol in a scalable manner is the problem of message implosion <ref> [21, 1, 7] </ref>. In a positive acknowledgment-based reliable multicast scheme, each correctly received packet results in a storm of acknowledgments towards the source overwhelming it and congesting the routers en route. Many reliable multicast algorithms [1, 11, 7] therefore resort to negative acknowledgments from receivers to detect lost packets. <p> In a positive acknowledgment-based reliable multicast scheme, each correctly received packet results in a storm of acknowledgments towards the source overwhelming it and congesting the routers en route. Many reliable multicast algorithms <ref> [1, 11, 7] </ref> therefore resort to negative acknowledgments from receivers to detect lost packets. In such schemes, the source must buffer transmitted packets in order to respond to NACKs.
Reference: [2] <author> CLARK, D. D., AND TENNENHOUSE, D. L. </author> <title> Architectural Considerations for a New Generation of Protocols. </title> <booktitle> In Proceedings of SIGCOMM '90 (Philadelphia, </booktitle> <address> PA, </address> <month> Sept. </month> <year> 1990), </year> <note> ACM. </note>
Reference-contexts: This method of accounting for application semantics in protocol design, known as Application Level Framing of ALF <ref> [2] </ref>, is a boon to protocol performance because the application is optimized for the network and vice versa, but it burdens the implementor with a potentially difficult proto 1 Submitted to ACM Multimedia '98 Tracking No. S-166 2 col design problem. <p> Instead, much of the wb protocol machinery is highly intertwined with the application itself, making it virtually impossible to re-use its reliable multicast transport in other applications. Clark and Tennenhouse <ref> [2] </ref> predicted that numerous, heterogeneous applications would emerge and protocol designers would have to design with this in mind. Their solution to overcome heterogeneity in applications was to involve the application in decision making in protocol functions, which they called the ALF model. <p> Once again, the notation is the same as in Figure 5. First, R recovers missing bindings from the map. Missing data from the containers I; J; and K is then recovered. same address space as the application. Since the application and protocol share an address space, upcalls <ref> [2] </ref> by the transport protocol to query the application are implemented as function calls. The Namemap, that implements the mapping from names to transport level identifiers is a separate module, s shown in Figure 10. The SRM namespace has an interface similar to hierarchical filesystems.
Reference: [3] <author> CROWCROFT, J., WANG, Z., GHOSH, A., AND DIOT, C. RMFP: </author> <title> A Reliable Multicast Framing Protocol, </title> <month> Mar. </month> <year> 1997. </year> <note> Internet Draft (expires 15 Sept, 1997.). </note>
Reference-contexts: While it is important to develop transport-level reliability and congestion control algorithms independent of the application, augmenting this with a naming scheme that enables receiver-reliability enhances the scaling properties of the protocol. Recent work on a reliable multicast framing protocol (RMFP) <ref> [3, 9] </ref> proposes a two-layered data stream with embedded objects and sequence offsets within objects. However, the authors of this work do not propose a mechanism to discover the structure of the namespace.
Reference: [4] <author> DECLEENE, B., BHATTACHARAYA, S., FRIEDMAN, T., KEATON, M., KUROSE, J., RUBENSTEIN, D., AND TOWSLEY, D. </author> <title> Reliable Multicast Framework(RMF): A White Paper, </title> <month> Mar. </month> <year> 1997. </year>
Reference-contexts: This introduces extra message types and restricts applications to use ASCII string names. Separating the namemap module from the core SRM namespace mechanisms provides the application with the flexibility to use any naming convention of choice. Other work on a reliable multicast framework (RMF) <ref> [4] </ref> proposes universal receivers, a concept that allows several protocols to be defined using a set of common packet formats.
Reference: [5] <author> DEERING, S. E. </author> <title> Multicast Routing in a Datagram Internet-work. </title> <type> PhD thesis, </type> <institution> Stanford University, </institution> <month> Dec. </month> <year> 1991. </year>
Reference-contexts: 1 Introduction The advent and deployment of IP Multicast <ref> [5] </ref> has enabled a number of new applications [19, 13, 12, 8, 27] that utilize large-scale multipoint communication over wide area internetworks. IP Multicast extends the traditional, best-effort unicast delivery model of the Internet architecture for efficient multipoint packet delivery [5]. <p> 1 Introduction The advent and deployment of IP Multicast <ref> [5] </ref> has enabled a number of new applications [19, 13, 12, 8, 27] that utilize large-scale multipoint communication over wide area internetworks. IP Multicast extends the traditional, best-effort unicast delivery model of the Internet architecture for efficient multipoint packet delivery [5]. This communication model is especially suited to applications and protocols for large-scale audio/video dissemination, where digitized signals are packetized and multicast over the network.
Reference: [6] <author> FIELDING, R., GETTYS, J., MOGUL, J., FRYSTYK, H., AND BERNERS-LEE, T. </author> <title> Hypertext Transfer Protocol - HTTP/1.1, Jan 1997. </title> <publisher> RFC-2068. </publisher>
Reference-contexts: To minimize user-perceived latency, it is highly desirable for these components to be disseminated in parallel to each receiver. If the application used a sequence-based TCP-like protocol, data across all the individual components would be coalesced into a single stream (much like Persistent-HTTP in HTTP 1.1 <ref> [6] </ref>). This imposes an artificial serial order amongst the different components, where none was mandated, resulting in increased latency for many data items. In addition, the loss of data on one component could stall the delivery of data belonging to another one, because of the imposed in-order delivery abstraction.
Reference: [7] <author> FLOYD, S., JACOBSON, V., MCCANNE, S., LIU, C.-G., AND ZHANG, L. </author> <title> A Reliable Multicast Framework for Light-weight Sessions and Application Level Framing. </title> <booktitle> In Proceedings of SIGCOMM '95 (Boston, </booktitle> <address> MA, </address> <month> Sept. </month> <year> 1995), </year> <note> ACM. </note>
Reference-contexts: S-166 2 col design problem. The notion that ALF be applied to the design of reliable multicast and that the protocol be structured as a framework rather than a monolithic layer was born in the Scalable Reliable Multicast or SRM framework <ref> [7] </ref>. While the SRM authors sketched an architecture for a framework-based approach, no comprehensive set of mechanisms was specifically proposed. <p> ALF provides an elegant solution to the problem of reliable-multicast API design because its flexibility offers applications the opportuntity to actively participate in the loss-recovery procedure. The protocol used in SRM for loss recovery is a NACK-based, fully-decentralized originally described by Floyd, et al., in <ref> [7] </ref>. To avoid ACK-implosion, SRM uses a negative acknowledgment-based (NACK-based) algorithm in which receivers detect losses from discontinuities in sequence numbers and transmit NACKs as a request for retransmission of the lost data. This is the data-driven mode of loss recovery. A random ized algorithm described in [7] determines when a <p> et al., in <ref> [7] </ref>. To avoid ACK-implosion, SRM uses a negative acknowledgment-based (NACK-based) algorithm in which receivers detect losses from discontinuities in sequence numbers and transmit NACKs as a request for retransmission of the lost data. This is the data-driven mode of loss recovery. A random ized algorithm described in [7] determines when a receiver transmits a NACK. These NACKs are multicast to the entire group so that any receiver, in particular the closest receiver with the requested data, may generate a repair in response to a NACK. <p> section describes these problems and motivates the need for an integrated data naming scheme between the application and the reliable multicast transport protocol, using ALF concepts. 3.1 Data Buffering One of the main problems in designing a reliable multi-cast protocol in a scalable manner is the problem of message implosion <ref> [21, 1, 7] </ref>. In a positive acknowledgment-based reliable multicast scheme, each correctly received packet results in a storm of acknowledgments towards the source overwhelming it and congesting the routers en route. Many reliable multicast algorithms [1, 11, 7] therefore resort to negative acknowledgments from receivers to detect lost packets. <p> In a positive acknowledgment-based reliable multicast scheme, each correctly received packet results in a storm of acknowledgments towards the source overwhelming it and congesting the routers en route. Many reliable multicast algorithms <ref> [1, 11, 7] </ref> therefore resort to negative acknowledgments from receivers to detect lost packets. In such schemes, the source must buffer transmitted packets in order to respond to NACKs. <p> We argue that an integrated naming scheme is essential fo ALF and present a hierarchical data naming scheme that enhances the expressibility of an application's reliability and ordering requirements. We apply this scheme to build a framework for light-weight Scalable Reliable Multicast (SRM) <ref> [7] </ref> sessions, and develop a reliable announcement protocol to disseminate the structure of the Submitted to ACM Multimedia '98 Tracking No. S-166 12 Function call #/" Comments srm session () # Create a new SRM session object and return a handle to it.
Reference: [8] <author> FREDERICK, R. </author> <title> Network Video (nv). </title> <institution> Xerox Palo Alto Research Center. </institution> <note> Software on-line 5 </note> . 
Reference-contexts: 1 Introduction The advent and deployment of IP Multicast [5] has enabled a number of new applications <ref> [19, 13, 12, 8, 27] </ref> that utilize large-scale multipoint communication over wide area internetworks. IP Multicast extends the traditional, best-effort unicast delivery model of the Internet architecture for efficient multipoint packet delivery [5].
Reference: [9] <author> FUCHS, M. </author> <title> Hierarchical data naming with objects. In Presentation at the 3 r d Reliable Multicast Research Group (RMRG) meeting (Orlando, </title> <address> FL, </address> <month> Feb. </month> <year> 1998). </year>
Reference-contexts: While it is important to develop transport-level reliability and congestion control algorithms independent of the application, augmenting this with a naming scheme that enables receiver-reliability enhances the scaling properties of the protocol. Recent work on a reliable multicast framing protocol (RMFP) <ref> [3, 9] </ref> proposes a two-layered data stream with embedded objects and sequence offsets within objects. However, the authors of this work do not propose a mechanism to discover the structure of the namespace.
Reference: [10] <author> GRAHAM, R. L., KNUTH, D. E., AND PATASHNIK, O. </author> <title> Concrete Mathematics, second ed. </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year> <note> 5 ftp://ftp.parc.xerox.com/net-research </note>
Reference-contexts: The details of the algorithm and its analysis are shown in Appendix A. This technique is similar to the lottery scheduling algorithm [28], and its analysis is akin to the coupon collectors problem <ref> [10] </ref>. Receiver Processing. Each receiver updates its snapshot of a source's tree when an announcement is received. If, after applying the updates, the source's advertized root signature does still not match the receiver's copy, the receiver initiates a recursive descent procedure to explore the namespace and detect the mismatched nodes.
Reference: [11] <author> HOLBROOK, H., SINGHAL, S., AND CHERITON, D. </author> <title> Log-Based Receiver-Reliable Multicast for Distributed Interactive Simulation. </title> <booktitle> In Proceedings of SIGCOMM '95 (Boston, </booktitle> <address> MA, </address> <month> Sept. </month> <year> 1995), </year> <note> ACM. </note>
Reference-contexts: In a positive acknowledgment-based reliable multicast scheme, each correctly received packet results in a storm of acknowledgments towards the source overwhelming it and congesting the routers en route. Many reliable multicast algorithms <ref> [1, 11, 7] </ref> therefore resort to negative acknowledgments from receivers to detect lost packets. In such schemes, the source must buffer transmitted packets in order to respond to NACKs.
Reference: [12] <author> JACOBSON, V., AND MCCANNE, S. </author> <note> LBL Whiteboard. </note> <institution> Lawrence Berkeley Laboratory. </institution> <note> Software on-line 6 </note> . 
Reference-contexts: 1 Introduction The advent and deployment of IP Multicast [5] has enabled a number of new applications <ref> [19, 13, 12, 8, 27] </ref> that utilize large-scale multipoint communication over wide area internetworks. IP Multicast extends the traditional, best-effort unicast delivery model of the Internet architecture for efficient multipoint packet delivery [5]. <p> While the SRM authors sketched an architecture for a framework-based approach, no comprehensive set of mechanisms was specifically proposed. The SRM work derived from experience with the design of the LBL whiteboard application wb <ref> [12] </ref>; but wb predated the framework model and thus does not actually conform to this approach. Instead, much of the wb protocol machinery is highly intertwined with the application itself, making it virtually impossible to re-use its reliable multicast transport in other applications. <p> Several applications require sophisticated control over Submitted to ACM Multimedia '98 Tracking No. S-166 4 what portions of a data space they want reliably delivered. For example, in the shared whiteboard application <ref> [12, 26] </ref>, receivers do not require immediate recovery of items on pages not currently being viewed. Since loss recovery is initiated by the receiver, the receiving application must have the right information to decide whether a loss needs to be repaired. <p> At the receiving side, data is passed up to the application in ADU units, as determined by the sender. A single scan of a JPEG image is an example of an ADU, as is a whiteboard draw op <ref> [12] </ref>. In designing our reliable multicast protocol framework, we try not to rely on IP fragmentation and reassembly [20]. Hence, a packet, which is the unit of network transmission is at most the network maximum transmission unit (MTU).
Reference: [13] <author> JACOBSON, V., AND MCCANNE, S. </author> <title> Visual Audio Tool. </title> <institution> Lawrence Berkeley Laboratory. </institution> <note> Software on-line 7 </note> . 
Reference-contexts: 1 Introduction The advent and deployment of IP Multicast [5] has enabled a number of new applications <ref> [19, 13, 12, 8, 27] </ref> that utilize large-scale multipoint communication over wide area internetworks. IP Multicast extends the traditional, best-effort unicast delivery model of the Internet architecture for efficient multipoint packet delivery [5].
Reference: [14] <author> LEACH, P. J., AND SALZ, R. UUIDs and GUIDs, </author> <month> Feb. </month> <year> 1997. </year> <title> Internet Draft. </title>
Reference-contexts: The same applies to source crashes and subsequent recovery. Existing approaches like RTP's randomized identifiers and OSF's clock-based Universally unique IDs (UUIDs) <ref> [14] </ref> violate this requirement. * Terminal independence. In several reliable multicast applications, a source must have the choice of retaining the same identity independent of the terminal or host used to participate in the session.
Reference: [15] <author> LEVINE, B., LAVO, D. B., AND GARCIA-LUNA-ACEVES, J. J. </author> <title> The Case for Concurrent Reliable Multicasting Using Shared Ack Trees. </title> <booktitle> In Proceedings of ACM Multimedia (Boston, </booktitle> <address> MA, </address> <month> Nov. </month> <year> 1996), </year> <note> ACM. </note>
Reference: [16] <author> LIN, J. C., AND PAUL, S. RMTP: </author> <title> A Reliable Multicast Transport Protocol. </title> <booktitle> In Proceedings IEEE Infocom '96 (San Francisco, </booktitle> <address> CA, </address> <month> Mar. </month> <year> 1996), </year> <pages> pp. 1414-1424. </pages>
Reference: [17] <author> MCCANNE, S., ET AL. </author> <note> Ucb/lbnl/vint network simulator - ns (version 2). http://www-mash.cs.berkeley.edu/ns/. </note>
Reference-contexts: Since we wanted to measure the worst case recovery time for a late joiner, we used the recursive descent scheme, without any heuristics or selective reliability. The simulations were written in ns <ref> [17] </ref> We used a single source with up to 55 receivers. Background traffic was generated using TCP connections. We used convergence time to study the latency to recover from a tail loss.
Reference: [18] <author> MCCANNE, S., ET AL. </author> <title> Towards a Common Infrastructure for Multimedia-Networking Middleware. </title> <booktitle> In Proceedings of the Seventh International Workshop on Network and OS Support for Digital Audio and Video (St. </booktitle> <address> Louis, CA, </address> <month> May </month> <year> 1997), </year> <note> ACM. </note>
Reference-contexts: Schemes such as local recovery that are generally applicable to SRM can also be applied to this case to improve scaling behavior and eliminate the extra duplicates. 8 Implementation We have implemented a prototype of the naming scheme and SNAP in the MASH <ref> [18] </ref> toolkit. The MASH toolkit provides basic building blocks such as network objects, and an event-driven programming model, for network protocols and applications. We implemented SNAP as a library of classes in the toolkit. SNAP runs at user-level in the Submitted to ACM Multimedia '98 Tracking No. S-166 10 /map. <p> We report results from our simulation studies of convergence time and message complexity of the protocol, we demostrate that the protocol's bandwidth consumption scales well to large group sizes. We have also designed and implemented this State Naming and Announcement Protocol (SNAP) as part of the MASH <ref> [18] </ref> toolkit. 12 Acknowledgments We would like to thank Steve Casner, Steve Deering, Deborah Estrin, Sally Floyd, Mark Handley and the participants of the January '98 MASH retreat for discussions on SNAP.
Reference: [19] <author> MCCANNE, S., AND JACOBSON, V. </author> <title> vic: video conference. </title> <institution> Lawrence Berkeley Laboratory and University of Califor-nia, Berkeley. </institution> <note> Software on-line 8 </note> . 
Reference-contexts: 1 Introduction The advent and deployment of IP Multicast [5] has enabled a number of new applications <ref> [19, 13, 12, 8, 27] </ref> that utilize large-scale multipoint communication over wide area internetworks. IP Multicast extends the traditional, best-effort unicast delivery model of the Internet architecture for efficient multipoint packet delivery [5].
Reference: [20] <author> MOGUL, J. C. </author> <title> Efficient use of workstations for passive monitoring of local area networks. </title> <booktitle> In Proceedings of SIG-COMM '90 (Philadelphia, </booktitle> <address> PA, </address> <month> Sept. </month> <year> 1990), </year> <note> ACM. </note>
Reference-contexts: A single scan of a JPEG image is an example of an ADU, as is a whiteboard draw op [12]. In designing our reliable multicast protocol framework, we try not to rely on IP fragmentation and reassembly <ref> [20] </ref>. Hence, a packet, which is the unit of network transmission is at most the network maximum transmission unit (MTU). While the path MTU in a unicast session is well-defined [20], the same is not true in a multicast session, involving many receivers and hence multiple data paths from the sender. <p> In designing our reliable multicast protocol framework, we try not to rely on IP fragmentation and reassembly <ref> [20] </ref>. Hence, a packet, which is the unit of network transmission is at most the network maximum transmission unit (MTU). While the path MTU in a unicast session is well-defined [20], the same is not true in a multicast session, involving many receivers and hence multiple data paths from the sender. We use the interface MTU for the value. [20]. <p> While the path MTU in a unicast session is well-defined <ref> [20] </ref>, the same is not true in a multicast session, involving many receivers and hence multiple data paths from the sender. We use the interface MTU for the value. [20]. If any link has a smaller MTU than sender's packet size, fragment loss can result in the (multicast) retransmission of the entire packet, since IP does not keep track of reliably re ADUs, and fragments. ceived fragments. It is therefore important to choose an accurate packet size.
Reference: [21] <author> PINGALI, S., TOWSLEY, D., AND KUROSE, J. F. </author> <title> A comparison of sender-initiated and receiver-initiated reliable multicast protocols. </title> <booktitle> In Proceedings of SIGMETRICS '94 (Santa Clara, </booktitle> <address> CA, </address> <month> May </month> <year> 1994). </year>
Reference-contexts: section describes these problems and motivates the need for an integrated data naming scheme between the application and the reliable multicast transport protocol, using ALF concepts. 3.1 Data Buffering One of the main problems in designing a reliable multi-cast protocol in a scalable manner is the problem of message implosion <ref> [21, 1, 7] </ref>. In a positive acknowledgment-based reliable multicast scheme, each correctly received packet results in a storm of acknowledgments towards the source overwhelming it and congesting the routers en route. Many reliable multicast algorithms [1, 11, 7] therefore resort to negative acknowledgments from receivers to detect lost packets.
Reference: [22] <author> RIVEST, R. </author> <title> The MD5 Message-Digest Algorithm. ARPANET Working Group Requests for Comment, </title> <institution> DDN Network Information Center, MIT Laboratory for Computer Science and RSA Data Security, Inc., </institution> <year> 1992. </year> <month> RFC-1321. </month>
Reference-contexts: An example of such as hash function h is MD-5 <ref> [22] </ref>. MD-5 has the property that it is computa-tionally infeasible to produce distinct two messages having the same hash value. Such a hash function gives us signatures that are unique with high probability.
Reference: [23] <author> SCHULZRINNE, H., CASNER, S., FREDERICK, R., AND JACOBSON, V. RTP: </author> <title> A Transport Protocol for Real-Time Applications. </title> <institution> Internet Engineering Task Force, Audio-Video Transport Working Group, </institution> <month> Nov. </month> <year> 1991. </year> <note> Internet Draft expires 3/1/96. </note>
Reference-contexts: Names could be URL strings, for example in a webcast application. However, it is conceivable that a sophisticated application may use other types of names, perhaps with a different profile specification just as different application-specific RTP <ref> [23] </ref> profiles are possible. The binding between application names and container IDs is called the name map. 5 Source Identifiers A namespace is source-specific and reflects the structure of data generated by that source. Typically, in many reliable multicast applications, a receiver maintains a copy of each active source's namespace. <p> A source ID collision occurs when two distinct sources use the same identifier while transmitting data; this is an event that must ideally be avoided, or Submitted to ACM Multimedia '98 Tracking No. S-166 6 at the very least, its occurrence must be minimized. RTP <ref> [23] </ref> uses randomly generated 64-bit source identifiers for multicast audio/video transmission and detects collisions and resolves them, but does not perform any repair when one is detected. The only ill-effects of a collision in this case are degraded quality for a brief duration of time, until the collision is resolved. <p> These requirements preclude the use of user- and machine-specific identifiers based on a combination of host IP address and user name. Our solution minimizes the probability of collisions and resolves any collisions that might occur using the technique described in the RTP specification <ref> [23] </ref>. In addition, we ensure that the two important requirements of time invariance and terminal independence are met. To enable time invariance, we allow sources to identify themselves using arbitrary application-level strings.
Reference: [24] <author> SMITH, W. G., AND KOIFMAN, A. </author> <title> A Distributed Interactive Simulation Intranet Using RAMP, a Reliable Adaptive Multicast Protocol. </title> <booktitle> In Proceedings of the Fourteenth Workshop on Standards for the Interoperability of Distributed Simulations, </booktitle> <address> Orlando, FL (Mar. </address> <year> 1996). </year> <note> 6 ftp://ftp.ee.lbl.gov/conferencing/wb 7 ftp://ftp.ee.lbl.gov/conferencing/vat 8 ftp://ftp.ee.lbl.gov/conferencing/vic Submitted to ACM Multimedia '98 Tracking No. S-166 14 </note>
Reference: [25] <author> STEVENS, W. R. </author> <title> TCP/IP Illustrated Volume 1. </title> <publisher> Addison-Wesley, </publisher> <month> Nov </month> <year> 1994. </year>
Reference-contexts: Figure 1 illustrates these Submitted to ACM Multimedia '98 Tracking No. S-166 3 two recovery modes. 3 The Case for Integrated Naming Traditionally, transport protocols have used monolothic sequence numbers to identify data and detect losses. Uni-cast transport protocols like TCP <ref> [25] </ref>, and several multi-cast ones ([16, 11, 24]) adopt this approach. While this approach is simple and easy to implement, it is inflexible in three key aspects: data buffering, supporting structured application data, and receiver-tailored data retransmissions.
Reference: [26] <author> TUNG, T.-L. MediaBoard: </author> <title> A distributed, shared collaboration application. </title> <type> UCB CS Masters Report, </type> <month> Feb. </month> <year> 1998. </year>
Reference-contexts: Several applications require sophisticated control over Submitted to ACM Multimedia '98 Tracking No. S-166 4 what portions of a data space they want reliably delivered. For example, in the shared whiteboard application <ref> [12, 26] </ref>, receivers do not require immediate recovery of items on pages not currently being viewed. Since loss recovery is initiated by the receiver, the receiving application must have the right information to decide whether a loss needs to be repaired. <p> We plan to port a number of existing MASH applications in cluding mediaboard <ref> [26] </ref>, and mashcast [29] to effectively demonstrate the power of application-level framing. We are also in the process of implementing a reusable library independent of the MASH toolkit based on a simple C API for other application developers.
Reference: [27] <author> TURLETTI, T. </author> <title> INRIA Video Conferencing System (ivs). </title> <institution> In-stitut National de Recherche en Informatique et an Automa-tique. </institution> <note> Software on-line 9 </note> . 
Reference-contexts: 1 Introduction The advent and deployment of IP Multicast [5] has enabled a number of new applications <ref> [19, 13, 12, 8, 27] </ref> that utilize large-scale multipoint communication over wide area internetworks. IP Multicast extends the traditional, best-effort unicast delivery model of the Internet architecture for efficient multipoint packet delivery [5].
Reference: [28] <author> WALDSPURGER, C. A., AND WEIHL, W. E. </author> <title> Lottery Scheduling: Flexible Proportional-Share Resource Management. </title> <booktitle> In First Symposium on Operating Systems Design and Implementation (OSDI) (1995), USENIX Association, </booktitle> <pages> pp. 1-11. </pages>
Reference-contexts: At the time of selecting (CID; signature) pairs, a source picks a node with probability proportional to its weight. The details of the algorithm and its analysis are shown in Appendix A. This technique is similar to the lottery scheduling algorithm <ref> [28] </ref>, and its analysis is akin to the coupon collectors problem [10]. Receiver Processing. Each receiver updates its snapshot of a source's tree when an announcement is received.
Reference: [29] <author> WRIGHT, K. MASHCast: </author> <note> Applying SRM Middleware to Webcast. Presentation at the Winter '98 MASH Retreat. </note>
Reference-contexts: We plan to port a number of existing MASH applications in cluding mediaboard [26], and mashcast <ref> [29] </ref> to effectively demonstrate the power of application-level framing. We are also in the process of implementing a reusable library independent of the MASH toolkit based on a simple C API for other application developers.
References-found: 29

