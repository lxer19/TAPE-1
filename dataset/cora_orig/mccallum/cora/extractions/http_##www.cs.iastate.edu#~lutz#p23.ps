URL: http://www.cs.iastate.edu/~lutz/p23.ps
Refering-URL: http://www.cs.iastate.edu/~lutz/papers.html
Root-URL: http://www.cs.iastate.edu
Title: Circuit Size Relative to Pseudorandom Oracles hold for almost every n. Since a randomly selected
Author: Jack H. Lutz and William J. Schmidt 
Note: (i) NP A is not contained in SIZE A (2 ffn for any real ff &lt; 1 3 (ii) E A is not contained in SIZE A 2 n n Thus, neither NP A nor E A is contained in P A /Poly. In fact, these separations are shown to  Gill [9] and answering open questions of Wilson [47].  
Address: Ames, IA 50011  
Affiliation: Department of Computer Science Iowa State University  
Abstract: the corresponding random oracle separations, thus improving a result of Bennett and 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E. Allender and R. Rubinstein, </author> <title> P-printable sets, </title> <journal> SIAM Journal on Computing 17 (1988), </journal> <pages> pp. 1193-1202. </pages>
Reference-contexts: We write jxj for the length of x. Thus jxj 2 N [ f1g, where N is the set of nonnegative integers. The unique string of length 0 is , the empty string. We write x [i] for the i th bit of x. Thus x = x [0]x <ref> [1] </ref> x [jxj 1] if x is a string. If x is a string and y is a string or sequence, then xy is the concatenation of x and y. If x is already a sequence, then xy = x. <p> Intuitively, for example, we now know that NP A 6 P A /Poly for every oracle A whose information content is high enough that A is pspace-random. In contrast, work of Hartmanis [19], Long and Selman [29], Balcazar and Book [6], and Allender and Rubinstein <ref> [1] </ref>, can be used to show the following. If there exists an oracle A, whose information content is sufficiently low (e.g., A 2 K [log,poly]), such that NP A 6 P A /Poly, then the unrelativized separation NP 6 P/Poly follows.
Reference: [2] <author> K. Ambos-Spies, </author> <title> Randomness, relativizations, and polynomial reducibilities, </title> <booktitle> Proceedings of the First Structure in Complexity Theory Conference, </booktitle> <year> 1986, </year> <pages> pp. 23-34. </pages>
Reference-contexts: A scientific analysis and explanation of this correspondence and its limitations is likely to be instructive. Second, oracle properties that hold with probability 1 have proven to be useful for characterizing complexity classes. Bennett and Gill [9] and Ambos-Spies <ref> [2] </ref> have shown that a language L is in BPP if and only if L 2 P A for almost every oracle A. <p> Nisan and Wigderson [40] have given a similar characterization of the Arthur-Merlin class AM of Babai [3], showing that a language L is in AM if and only if L 2 NP A for almost every oracle A. Other complexity classes have been given similar characterizations by Ambos-Spies <ref> [2] </ref>, Tang and Watanabe [45], and Book and Tang [12]. Results of this type indicate that a systematic study of random oracle properties may be a fruitful enterprise. Random oracle results, though interesting, are uninformative in a crucial respect. For example, consider the random oracle separation of P from NP.
Reference: [3] <author> L. Babai, </author> <title> Trading group theory for randomness, </title> <booktitle> Proceedings of the Seventeenth Annual ACM Symposium on Theory of Computing, </booktitle> <year> 1985, </year> <pages> pp. 421-429. </pages>
Reference-contexts: Bennett and Gill [9] and Ambos-Spies [2] have shown that a language L is in BPP if and only if L 2 P A for almost every oracle A. Nisan and Wigderson [40] have given a similar characterization of the Arthur-Merlin class AM of Babai <ref> [3] </ref>, showing that a language L is in AM if and only if L 2 NP A for almost every oracle A. Other complexity classes have been given similar characterizations by Ambos-Spies [2], Tang and Watanabe [45], and Book and Tang [12].
Reference: [4] <author> L. Babai, </author> <title> Random oracles separate PSPACE from the polynomial-time hierarchy, </title> <booktitle> Information Processing Letters 26 (1987), </booktitle> <pages> pp. 51-53. </pages>
Reference-contexts: In fact, recent work of Book [11] indicates that such separations do not provide such evidence. Nevertheless, random oracle separations continue to be of interest. Notably, Cai [14] and Babai <ref> [4] </ref> have proven that PH 6= PSPACE relative to almost every oracle; Kurtz, Mahaney, and Royer [26] have proven that the Berman-Hartmanis [10] isomorphism conjecture fails relative to almost every oracle; and Beigel [8] has shown that almost every oracle supports a fine hierarchy between UP and NP, based upon the
Reference: [5] <author> T. Baker, J. Gill, and R. Solovay, </author> <title> Relativizations of the P =?NP question, </title> <journal> SIAM Journal on Computing 4 (1975), </journal> <pages> pp. 431-442. </pages>
Reference-contexts: Baker, Gill, and Solovay <ref> [5] </ref> exhibited oracles A and B such that P A = NP A and P B 6= NP B .
Reference: [6] <author> J. L. Balcazar and R. V. </author> <title> Book, Sets with small generalized Kolmogorov complexity, </title> <journal> Acta Informatica 23 (1986), </journal> <pages> pp. 679-688. </pages>
Reference-contexts: Intuitively, for example, we now know that NP A 6 P A /Poly for every oracle A whose information content is high enough that A is pspace-random. In contrast, work of Hartmanis [19], Long and Selman [29], Balcazar and Book <ref> [6] </ref>, and Allender and Rubinstein [1], can be used to show the following. If there exists an oracle A, whose information content is sufficiently low (e.g., A 2 K [log,poly]), such that NP A 6 P A /Poly, then the unrelativized separation NP 6 P/Poly follows.
Reference: [7] <author> J. L. Balcazar, J. Daz, and J. Gabarro, </author> <title> Structural Complexity I, </title> <publisher> Springer-Verlag, </publisher> <year> 1988. </year>
Reference-contexts: For a formal definition of the oracle Turing machine, see for example Balcazar, Daz, and Gabarro <ref> [7] </ref>. Recall that we write DTIME (T (n)) [resp., NTIME (T (n))] for the set of languages accepted by deterministic [resp., nondeterministic] Turing machines in O (T (n)) time.
Reference: [8] <author> R. Beigel, </author> <title> On the relativized power of additional accepting paths, </title> <booktitle> Proceedings of the Fourth Annual Structure in Complexity Theory Conference, </booktitle> <year> 1989, </year> <pages> pp. 216-224. </pages>
Reference-contexts: Nevertheless, random oracle separations continue to be of interest. Notably, Cai [14] and Babai [4] have proven that PH 6= PSPACE relative to almost every oracle; Kurtz, Mahaney, and Royer [26] have proven that the Berman-Hartmanis [10] isomorphism conjecture fails relative to almost every oracle; and Beigel <ref> [8] </ref> has shown that almost every oracle supports a fine hierarchy between UP and NP, based upon the number of accepting computations. At our present state of knowledge (i.e., lack thereof), results of this type merit careful attention. There are several reasons for this.
Reference: [9] <author> C. H. Bennett and J. Gill, </author> <title> Relative to a random oracle A, P A 6= NP A 6= co-NP A with probability 1, </title> <journal> SIAM Journal on Computing 10 (1981), </journal> <pages> pp. 96-113. </pages>
Reference-contexts: As a remedy for this situation, Bennett and Gill <ref> [9] </ref> proposed the study of complexity classes relative to randomly selected oracles. In this scheme, an oracle A f0; 1g fl is chosen probabilistically by using an independent toss of a fair coin to decide whether each string x 2 f0; 1g fl is in A. Bennett and Gill [9] proved <p> Gill <ref> [9] </ref> proposed the study of complexity classes relative to randomly selected oracles. In this scheme, an oracle A f0; 1g fl is chosen probabilistically by using an independent toss of a fair coin to decide whether each string x 2 f0; 1g fl is in A. Bennett and Gill [9] proved (among other things) that P A 6= NP A holds with probability 1 when the oracle A is so selected. That is, the conjecture P 6= NP holds relative to almost every oracle. Moreover, Bennett and Gill [9] formulated and proposed the random oracle hypothesis, which posits that any <p> Bennett and Gill <ref> [9] </ref> proved (among other things) that P A 6= NP A holds with probability 1 when the oracle A is so selected. That is, the conjecture P 6= NP holds relative to almost every oracle. Moreover, Bennett and Gill [9] formulated and proposed the random oracle hypothesis, which posits that any reasonably formed conjecture that holds relative to almost every oracle is in fact true. Thus, the random oracle result, P A 6= NP A with probability 1, is regarded as evidence that P 6= NP. <p> A scientific analysis and explanation of this correspondence and its limitations is likely to be instructive. Second, oracle properties that hold with probability 1 have proven to be useful for characterizing complexity classes. Bennett and Gill <ref> [9] </ref> and Ambos-Spies [2] have shown that a language L is in BPP if and only if L 2 P A for almost every oracle A. <p> It is shown in Corollary 5.2 below that, relative to every pspace-random oracle A, P A 6= NP A . Thus (i) and (ii) above hold for this separation property when = pspace. This refines the random oracle separation of Bennett and Gill <ref> [9] </ref>. (Such refinements are not automatic. For example, the separation P A 6 REC holds for a randomly selected oracle with probability one, but fails for every decidable pspace-random oracle.) This improvement, from randomly selected relativization to pseudorandom relativization, is only one dimension of the progress reported in this paper. <p> We thus seek an upper bound for j n;fl j. We use a refinement of the measure-preserving transformation argument of <ref> [9] </ref>. However, we give our argument in purely combinatorial terms. For convenience, write N = 1 8 2 3 and let 2N Intuitively, we will show that j n;fl j cannot be much larger than j n j=j n j. <p> We can now answer this question. Corollary 5.5. For a randomly selected oracle A, Pr [NP A 6 P A /Poly] = 1: Proof. Immediate from Corollary 5.4. 2 Of course the original random oracle result is an immediate consequence of Corollary 5.4. Corollary 5.6 (Bennett and Gill <ref> [9] </ref>). For a randomly selected oracle A, Pr P A 6= NP A = 1: Often one is only interested in the case of polynomial advice. Corollary 5.7. For every pspace-random oracle A, NP A 6 P A /Poly. Proof.
Reference: [10] <author> L. Berman and J. Hartmanis, </author> <title> On isomorphism and density of NP and other complete sets, </title> <journal> SIAM Journal on Computing 6 (1977), </journal> <pages> pp. 305-322. </pages>
Reference-contexts: Nevertheless, random oracle separations continue to be of interest. Notably, Cai [14] and Babai [4] have proven that PH 6= PSPACE relative to almost every oracle; Kurtz, Mahaney, and Royer [26] have proven that the Berman-Hartmanis <ref> [10] </ref> isomorphism conjecture fails relative to almost every oracle; and Beigel [8] has shown that almost every oracle supports a fine hierarchy between UP and NP, based upon the number of accepting computations. At our present state of knowledge (i.e., lack thereof), results of this type merit careful attention.
Reference: [11] <author> R. V. </author> <title> Book, Some observations on separating complexity classes, </title> <journal> SIAM Journal on Computing 20 (1991), </journal> <pages> pp. 246-258. </pages>
Reference-contexts: The random oracle hypothesis was refuted by Kurtz [25], so it is not clear that random oracle separations of the above type provide evidence that the corresponding unrelativized conjectures are true. In fact, recent work of Book <ref> [11] </ref> indicates that such separations do not provide such evidence. Nevertheless, random oracle separations continue to be of interest.
Reference: [12] <author> R. V. Book and S. Tang, </author> <title> Characterizing polynomial complexity classes by reducibilities, </title> <booktitle> Mathematical Systems Theory 23 (1990), </booktitle> <pages> pp. 165-174. </pages>
Reference-contexts: Other complexity classes have been given similar characterizations by Ambos-Spies [2], Tang and Watanabe [45], and Book and Tang <ref> [12] </ref>. Results of this type indicate that a systematic study of random oracle properties may be a fruitful enterprise. Random oracle results, though interesting, are uninformative in a crucial respect. For example, consider the random oracle separation of P from NP.
Reference: [13] <author> E. Borel, </author> <title> Sur les probabilites denombrables et leurs applications arithmetiques, Rend. Circ. Mat. </title> <booktitle> Palermo 27 (1909), </booktitle> <pages> pp. 247-271. </pages>
Reference-contexts: The first is a special case (for pspace) of a resource-bounded version of the classical first Borel-Cantelli lemma. 7 Theorem 3.3 (Borel <ref> [13] </ref>, Cantelli [15], Lutz [35]).
Reference: [14] <author> J. Cai, </author> <title> With probability one, a random oracle separates PSPACE from the polynomial-time hierarchy, </title> <journal> Journal of Computer and System Sciences 38 (1989), </journal> <pages> pp. 68-85. </pages>
Reference-contexts: In fact, recent work of Book [11] indicates that such separations do not provide such evidence. Nevertheless, random oracle separations continue to be of interest. Notably, Cai <ref> [14] </ref> and Babai [4] have proven that PH 6= PSPACE relative to almost every oracle; Kurtz, Mahaney, and Royer [26] have proven that the Berman-Hartmanis [10] isomorphism conjecture fails relative to almost every oracle; and Beigel [8] has shown that almost every oracle supports a fine hierarchy between UP and NP,
Reference: [15] <author> F. P. Cantelli, La tendenza ad un limite nel senzo del calcolo delle probabilita, Rend. Circ. </author> <title> Mat. </title> <booktitle> Palermo 41 (1916), </booktitle> <pages> pp. 191-201. </pages>
Reference-contexts: The first is a special case (for pspace) of a resource-bounded version of the classical first Borel-Cantelli lemma. 7 Theorem 3.3 (Borel [13], Cantelli <ref> [15] </ref>, Lutz [35]).
Reference: [16] <author> G. J. Chaitin, </author> <title> On the length of programs for computing finite binary sequences, </title> <journal> Journal of the Association for Computing Machinery 13 (1966), </journal> <pages> pp. 547-569. 23 </pages>
Reference-contexts: Kolmogorov complexity (also called program-size complexity) was introduced independently by Solomonoff [44], Kolmogorov [23], and Chaitin <ref> [16] </ref>. Time-bounded, space-bounded, and conditional Kolmogorov complexities have since been studied by Hartmanis [19], Sipser [43], Levin [27], Huynh [20], Ko [22], Longpre [30], Lutz [32, 35], and many others. For an overview of work in this area, see Kolmogorov and Uspenskii [24] or Li and Vitanyi [28].
Reference: [17] <author> A. K. Chandra, D. C. Kozen, and L. J. Stockmeyer, </author> <title> Alternation, </title> <journal> Journal of the ACM 28 (1981), </journal> <pages> pp. 114-133. </pages>
Reference-contexts: This is taken as evidence that these problems may be very hard to solve. (Such evidence is to be interpreted with caution. For example, the theorems ALOG = P of Chandra, Kozen, and Stockmeyer <ref> [17] </ref> and IP = PSPACE of Shamir [42] have simple proofs but do not relativize, unless one modifies oracle access mechanisms to force them to relativize.) fl This research was supported in part by NSF Grants CCR-8809238 and CCR-9157382, and by a National Science Foundation Graduate Fellowship. 1 Unfortunately, oracle existence
Reference: [18] <author> H. Chernoff, </author> <title> A measure of asymptotic efficiency for tests of a hypothesis based on the sum of observations, </title> <journal> Annals of Mathematical Statistics 23 (1952), </journal> <pages> pp. 493-509. </pages>
Reference-contexts: We use the discrete logarithm log n = minfk 2 N j 2 k ng: Note that log 0 = 0. 4 We will use the following combinatorial bound in section 5. Proposition 2.1 (Chernoff <ref> [18] </ref>).
Reference: [19] <author> J. Hartmanis, </author> <title> Generalized Kolmogorov complexity and the structure of feasible computations, </title> <booktitle> Proceedings of the 24th IEEE Symposium on the Foundations of Computer Science, </booktitle> <year> 1983, </year> <pages> pp. 439-445. </pages>
Reference-contexts: Kolmogorov complexity (also called program-size complexity) was introduced independently by Solomonoff [44], Kolmogorov [23], and Chaitin [16]. Time-bounded, space-bounded, and conditional Kolmogorov complexities have since been studied by Hartmanis <ref> [19] </ref>, Sipser [43], Levin [27], Huynh [20], Ko [22], Longpre [30], Lutz [32, 35], and many others. For an overview of work in this area, see Kolmogorov and Uspenskii [24] or Li and Vitanyi [28]. We begin with some terminology. <p> Intuitively, for example, we now know that NP A 6 P A /Poly for every oracle A whose information content is high enough that A is pspace-random. In contrast, work of Hartmanis <ref> [19] </ref>, Long and Selman [29], Balcazar and Book [6], and Allender and Rubinstein [1], can be used to show the following.
Reference: [20] <author> D. T. Huynh, </author> <title> Resource-bounded Kolmogorov complexity of hard languages, </title> <booktitle> Structure in Complexity Theory, </booktitle> <pages> pp. 184-195, </pages> <publisher> Springer-Verlag, </publisher> <year> 1986. </year>
Reference-contexts: Kolmogorov complexity (also called program-size complexity) was introduced independently by Solomonoff [44], Kolmogorov [23], and Chaitin [16]. Time-bounded, space-bounded, and conditional Kolmogorov complexities have since been studied by Hartmanis [19], Sipser [43], Levin [27], Huynh <ref> [20] </ref>, Ko [22], Longpre [30], Lutz [32, 35], and many others. For an overview of work in this area, see Kolmogorov and Uspenskii [24] or Li and Vitanyi [28]. We begin with some terminology.
Reference: [21] <author> R. M. Karp and R. J. Lipton, </author> <title> Some connections between nonuniform and uniform complexity classes, </title> <booktitle> Proceedings of the 12th ACM Symposium on Theory of Computing, </booktitle> <year> 1980, </year> <pages> pp. 302-309. </pages>
Reference-contexts: Let C be a class of languages, and let F be a class of advice functions from N into f0; 1g fl As in Karp and Lipton <ref> [21] </ref>, we define C=F to be the class of languages B for which there exists a set C 2 C and a function f 2 F such that B = fx j hx; f (jxj)i 2 Cg.
Reference: [22] <author> K. Ko, </author> <title> On the notion of infinite pseudorandom sequences, </title> <booktitle> Theoretical Computer Science 48 (1986), </booktitle> <pages> pp. 9-33. </pages>
Reference-contexts: Kolmogorov complexity (also called program-size complexity) was introduced independently by Solomonoff [44], Kolmogorov [23], and Chaitin [16]. Time-bounded, space-bounded, and conditional Kolmogorov complexities have since been studied by Hartmanis [19], Sipser [43], Levin [27], Huynh [20], Ko <ref> [22] </ref>, Longpre [30], Lutz [32, 35], and many others. For an overview of work in this area, see Kolmogorov and Uspenskii [24] or Li and Vitanyi [28]. We begin with some terminology.
Reference: [23] <author> A. N. </author> <title> Kolmogorov, Three approaches to the quantitative definition of `information', </title> <booktitle> Problems of Information Transmission 1 (1965), </booktitle> <pages> pp. 1-7. </pages>
Reference-contexts: Kolmogorov complexity (also called program-size complexity) was introduced independently by Solomonoff [44], Kolmogorov <ref> [23] </ref>, and Chaitin [16]. Time-bounded, space-bounded, and conditional Kolmogorov complexities have since been studied by Hartmanis [19], Sipser [43], Levin [27], Huynh [20], Ko [22], Longpre [30], Lutz [32, 35], and many others.
Reference: [24] <author> A. N. Kolmogorov and V. A. Uspenskii, </author> <title> Algorithms and randomness, </title> <booktitle> translated in Theory of Probability and its Applications 32 (1987), </booktitle> <pages> pp. 389-412. </pages>
Reference-contexts: Time-bounded, space-bounded, and conditional Kolmogorov complexities have since been studied by Hartmanis [19], Sipser [43], Levin [27], Huynh [20], Ko [22], Longpre [30], Lutz [32, 35], and many others. For an overview of work in this area, see Kolmogorov and Uspenskii <ref> [24] </ref> or Li and Vitanyi [28]. We begin with some terminology.
Reference: [25] <author> S. Kurtz, </author> <title> On the random oracle hypothesis, </title> <booktitle> Information and Control 57 (1983), </booktitle> <pages> pp. 40-47. </pages>
Reference-contexts: Thus, the random oracle result, P A 6= NP A with probability 1, is regarded as evidence that P 6= NP. The random oracle hypothesis was refuted by Kurtz <ref> [25] </ref>, so it is not clear that random oracle separations of the above type provide evidence that the corresponding unrelativized conjectures are true. In fact, recent work of Book [11] indicates that such separations do not provide such evidence. Nevertheless, random oracle separations continue to be of interest.
Reference: [26] <author> S. Kurtz, S. Mahaney, and J. Royer, </author> <title> The isomorphism conjecture fails relative to a random oracle, </title> <booktitle> Proceedings of the 21st ACM Symposium on Theory of Computing, </booktitle> <year> 1989, </year> <pages> pp. 157-166. </pages>
Reference-contexts: In fact, recent work of Book [11] indicates that such separations do not provide such evidence. Nevertheless, random oracle separations continue to be of interest. Notably, Cai [14] and Babai [4] have proven that PH 6= PSPACE relative to almost every oracle; Kurtz, Mahaney, and Royer <ref> [26] </ref> have proven that the Berman-Hartmanis [10] isomorphism conjecture fails relative to almost every oracle; and Beigel [8] has shown that almost every oracle supports a fine hierarchy between UP and NP, based upon the number of accepting computations.
Reference: [27] <author> L. A. Levin, </author> <title> Randomness conservation inequalities; information and independence in mathematical theories, </title> <booktitle> Information and Control 61 (1984), </booktitle> <pages> pp. 15-37. </pages>
Reference-contexts: Kolmogorov complexity (also called program-size complexity) was introduced independently by Solomonoff [44], Kolmogorov [23], and Chaitin [16]. Time-bounded, space-bounded, and conditional Kolmogorov complexities have since been studied by Hartmanis [19], Sipser [43], Levin <ref> [27] </ref>, Huynh [20], Ko [22], Longpre [30], Lutz [32, 35], and many others. For an overview of work in this area, see Kolmogorov and Uspenskii [24] or Li and Vitanyi [28]. We begin with some terminology.
Reference: [28] <author> M. Li and P. M. B. Vitanyi, </author> <title> Kolmogorov complexity and its applications, </title> <editor> in J. van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, Volume A, </booktitle> <pages> pp. 187-254. </pages> <publisher> Elsevier, </publisher> <year> 1990. </year>
Reference-contexts: Time-bounded, space-bounded, and conditional Kolmogorov complexities have since been studied by Hartmanis [19], Sipser [43], Levin [27], Huynh [20], Ko [22], Longpre [30], Lutz [32, 35], and many others. For an overview of work in this area, see Kolmogorov and Uspenskii [24] or Li and Vitanyi <ref> [28] </ref>. We begin with some terminology.
Reference: [29] <author> T. J. Long and A. L. Selman, </author> <title> Relativizing complexity classes with sparse oracles, </title> <journal> Journal of the ACM 33 (1986), </journal> <pages> pp. 618-627. </pages>
Reference-contexts: Intuitively, for example, we now know that NP A 6 P A /Poly for every oracle A whose information content is high enough that A is pspace-random. In contrast, work of Hartmanis [19], Long and Selman <ref> [29] </ref>, Balcazar and Book [6], and Allender and Rubinstein [1], can be used to show the following. If there exists an oracle A, whose information content is sufficiently low (e.g., A 2 K [log,poly]), such that NP A 6 P A /Poly, then the unrelativized separation NP 6 P/Poly follows.
Reference: [30] <author> L. Longpre, </author> <title> Resource Bounded Kolmogorov Complexity, a Link Between Computational Complexity and Information Theory, </title> <type> PhD thesis, </type> <institution> Cornell University, </institution> <year> 1986, </year> <note> Technical Report TR-86-776. </note>
Reference-contexts: Kolmogorov complexity (also called program-size complexity) was introduced independently by Solomonoff [44], Kolmogorov [23], and Chaitin [16]. Time-bounded, space-bounded, and conditional Kolmogorov complexities have since been studied by Hartmanis [19], Sipser [43], Levin [27], Huynh [20], Ko [22], Longpre <ref> [30] </ref>, Lutz [32, 35], and many others. For an overview of work in this area, see Kolmogorov and Uspenskii [24] or Li and Vitanyi [28]. We begin with some terminology.
Reference: [31] <author> O. B. Lupanov, </author> <title> On the synthesis of contact networks, </title> <journal> Dokl. Akad. Nauk SSSR 119 (1958), </journal> <pages> pp. 23-26. </pages>
Reference-contexts: As a result of the fact that any language accepted by a family of standard circuits can be accepted by a family of oracle circuits, a proof of Lupanov <ref> [31] </ref> gives us the following useful fact. Proposition 4.3.
Reference: [32] <author> J. H. Lutz, </author> <title> Category and measure in complexity classes, </title> <journal> SIAM Journal on Computing 19 (1990), </journal> <pages> pp. 1100-1131. </pages>
Reference-contexts: = ff : f0; 1g fl ! f0; 1g fl j f is computable in polynomial spaceg: (The length jf (x)j of the output is included as part of the space used in computing f .) Resource-bounded measure and pseudorandomness were originally developed in terms of "modulated covering by cylinders" <ref> [32, 33, 34] </ref>. Though the main results of these papers are true, the underlying development was technically flawed. This situation was remedied in [35], where resource-bounded measure was reformulated in terms of density functions. We review relevant aspects of the latter formulation here. <p> Kolmogorov complexity (also called program-size complexity) was introduced independently by Solomonoff [44], Kolmogorov [23], and Chaitin [16]. Time-bounded, space-bounded, and conditional Kolmogorov complexities have since been studied by Hartmanis [19], Sipser [43], Levin [27], Huynh [20], Ko [22], Longpre [30], Lutz <ref> [32, 35] </ref>, and many others. For an overview of work in this area, see Kolmogorov and Uspenskii [24] or Li and Vitanyi [28]. We begin with some terminology.
Reference: [33] <author> J. H. Lutz, </author> <title> Pseudorandom sources for BPP, </title> <journal> Journal of Computer and System Sciences 41 (1990), </journal> <pages> pp. 307-320. </pages>
Reference-contexts: = ff : f0; 1g fl ! f0; 1g fl j f is computable in polynomial spaceg: (The length jf (x)j of the output is included as part of the space used in computing f .) Resource-bounded measure and pseudorandomness were originally developed in terms of "modulated covering by cylinders" <ref> [32, 33, 34] </ref>. Though the main results of these papers are true, the underlying development was technically flawed. This situation was remedied in [35], where resource-bounded measure was reformulated in terms of density functions. We review relevant aspects of the latter formulation here.
Reference: [34] <author> J. H. Lutz, </author> <title> Almost everywhere high nonuniform complexity, </title> <booktitle> Proceedings of the Fourth Structure in Complexity Theory Conference, </booktitle> <year> 1989, </year> <pages> pp. 37-53. </pages>
Reference-contexts: = ff : f0; 1g fl ! f0; 1g fl j f is computable in polynomial spaceg: (The length jf (x)j of the output is included as part of the space used in computing f .) Resource-bounded measure and pseudorandomness were originally developed in terms of "modulated covering by cylinders" <ref> [32, 33, 34] </ref>. Though the main results of these papers are true, the underlying development was technically flawed. This situation was remedied in [35], where resource-bounded measure was reformulated in terms of density functions. We review relevant aspects of the latter formulation here.
Reference: [35] <author> J. H. Lutz, </author> <title> Almost everywhere high nonuniform complexity, </title> <journal> Journal of Computer and System Sciences (1991), </journal> <note> to appear. </note>
Reference-contexts: The notion of -randomness used here was developed and investigated by Lutz <ref> [35, 38] </ref> and is discussed in some detail in section 3 below. It is the level = pspace that is of interest in this paper. <p> Since Martin-Lof [39] proved that a randomly selected oracle A is random with probability 1, it immediately follows that property (ii) above holds when = pspace. However, much more is true. The definition of -randomness is based on the resource-bounded measure theory developed by Lutz <ref> [35, 37] </ref>. This underlying measure theory articulates the internal measure-theoretic structure of various complexity classes and, as it turns out, ensures that most decidable languages are -random. For example, almost every language decidable in 2 polynomial space is pspace-random [38]. <p> The interested reader is referred to <ref> [35, 37, 38] </ref> for a more complete treatment. We work in two alphabets, the binary alphabet f0; 1g and the extended binary alphabet = f0; 1; ?g. <p> Though the main results of these papers are true, the underlying development was technically flawed. This situation was remedied in <ref> [35] </ref>, where resource-bounded measure was reformulated in terms of density functions. We review relevant aspects of the latter formulation here. A density function is a function d : f0; 1g fl ! [0; 1) satisfying d (x) 2 for all x 2 f0; 1g fl . <p> A set X has measure 1 in ESPACE, and we write (X j ESPACE) = 1, if (X c j ESPACE) = 0. In this case we say that almost every sequence in ESPACE is in X. The following routine result of <ref> [35] </ref> relates pspace-measure to measure in ESPACE and to classical Lebesgue measure. Lemma 3.1. <p> Lemma 3.1. Let X be a set of languages. (a) If pspace (X) = 0, then (X j ESPACE) = 0. (b) If pspace (X) = 0, then (X) = 0, where (X) is the classical Lebesgue measure of the set X. 2 It is shown in <ref> [35] </ref> that the above definitions endow ESPACE with internal measure-theoretic structure. <p> The first is a special case (for pspace) of a resource-bounded version of the classical first Borel-Cantelli lemma. 7 Theorem 3.3 (Borel [13], Cantelli [15], Lutz <ref> [35] </ref>). <p> Kolmogorov complexity (also called program-size complexity) was introduced independently by Solomonoff [44], Kolmogorov [23], and Chaitin [16]. Time-bounded, space-bounded, and conditional Kolmogorov complexities have since been studied by Hartmanis [19], Sipser [43], Levin [27], Huynh [20], Ko [22], Longpre [30], Lutz <ref> [32, 35] </ref>, and many others. For an overview of work in this area, see Kolmogorov and Uspenskii [24] or Li and Vitanyi [28]. We begin with some terminology. <p> Theorem 3.4 (Lutz <ref> [35] </ref>). Let q be any polynomial, let " &gt; 0 be real, and let X be the set of all languages L such that KS q (L n ) &lt; 2 n+1 2 "n i.o. <p> There are several additional properties of pspace-random languages that support characterizing them as pseudorandom. For example, every pspace-random language L has nearly maximal circuit-size complexity and nearly maximal space-bounded Kolmogorov complexity almost everywhere <ref> [35] </ref>. Also, every pspace-random sequence x 2 f0; 1g 1 is a structurally adequate source for every bounded-error probabilistic machine [36]. 8 4 Relativized Complexity We use the oracle Turing machine and the oracle circuit as our models of relativized uniform and nonuniform complexity, respectively. <p> Then using methods of Lutz <ref> [35] </ref>, together with the counting argument of Lemma 4.2 above, the following can also be shown. Proposition 4.4.
Reference: [36] <author> J. H. Lutz, </author> <title> A pseudorandom oracle characterization of BPP, </title> <note> SIAM Journal on Computing , to appear. </note>
Reference-contexts: For example, every pspace-random language L has nearly maximal circuit-size complexity and nearly maximal space-bounded Kolmogorov complexity almost everywhere [35]. Also, every pspace-random sequence x 2 f0; 1g 1 is a structurally adequate source for every bounded-error probabilistic machine <ref> [36] </ref>. 8 4 Relativized Complexity We use the oracle Turing machine and the oracle circuit as our models of relativized uniform and nonuniform complexity, respectively. For a formal definition of the oracle Turing machine, see for example Balcazar, Daz, and Gabarro [7].
Reference: [37] <author> J. H. Lutz, </author> <title> Resource-bounded measure, </title> <note> in preparation. </note>
Reference-contexts: Since Martin-Lof [39] proved that a randomly selected oracle A is random with probability 1, it immediately follows that property (ii) above holds when = pspace. However, much more is true. The definition of -randomness is based on the resource-bounded measure theory developed by Lutz <ref> [35, 37] </ref>. This underlying measure theory articulates the internal measure-theoretic structure of various complexity classes and, as it turns out, ensures that most decidable languages are -random. For example, almost every language decidable in 2 polynomial space is pspace-random [38]. <p> The interested reader is referred to <ref> [35, 37, 38] </ref> for a more complete treatment. We work in two alphabets, the binary alphabet f0; 1g and the extended binary alphabet = f0; 1; ?g. <p> A null cover of a set X of languages is a 1-DS d such that, for all k 2 N, d k covers X with global value d k () 2 k . 6 It is easy to show <ref> [37] </ref> that a set X of languages has classical Lebesgue measure 0 (i.e., probability 0 in the coin-tossing random experiment) if and only if there exists a null cover of X. In this paper we are interested in the situation where the null cover d is pspace-computable.
Reference: [38] <author> J. H. Lutz, </author> <title> Intrinsically pseudorandom sequences, </title> <note> in preparation. </note>
Reference-contexts: The notion of -randomness used here was developed and investigated by Lutz <ref> [35, 38] </ref> and is discussed in some detail in section 3 below. It is the level = pspace that is of interest in this paper. <p> This underlying measure theory articulates the internal measure-theoretic structure of various complexity classes and, as it turns out, ensures that most decidable languages are -random. For example, almost every language decidable in 2 polynomial space is pspace-random <ref> [38] </ref>. Since no decidable (or even recursively enumerable) language is random [39], then, pspace-random languages are pseudorandom, with pspace specifying the "level of randomness". It is shown in Corollary 5.2 below that, relative to every pspace-random oracle A, P A 6= NP A . <p> The interested reader is referred to <ref> [35, 37, 38] </ref> for a more complete treatment. We work in two alphabets, the binary alphabet f0; 1g and the extended binary alphabet = f0; 1; ?g. <p> As discussed in the introduction, this implies that a randomly selected language is pspace-random with probability one. Thus, separations that hold relative to every pspace-random oracle also hold relative to a randomly selected oracle with probability one. It has also been shown in <ref> [38] </ref> that results about pspace-random sequences give information about reasonably low complexity classes. Specifically, almost every language in E 2 SPACE = DSPACE (2 polynomial ) is pspace-random, but no language in ESPACE is pspace-random. There are several additional properties of pspace-random languages that support characterizing them as pseudorandom.
Reference: [39] <author> P. Martin-Lof, </author> <title> On the definition of random sequences, </title> <booktitle> Information and Control 9 (1966), </booktitle> <pages> pp. 602-619. </pages>
Reference-contexts: Briefly, a language A (equivalently, the characteristic sequence of A) is pspace-random if and only if it has no "pspace-specifiable special properties", i.e., if it is in no pspace-measure 0 set of languages. (See section 3 for details.) This definition resembles the Martin-Lof <ref> [39] </ref> definition of random sequences; indeed every random sequence is pspace-random. Since Martin-Lof [39] proved that a randomly selected oracle A is random with probability 1, it immediately follows that property (ii) above holds when = pspace. However, much more is true. <p> characteristic sequence of A) is pspace-random if and only if it has no "pspace-specifiable special properties", i.e., if it is in no pspace-measure 0 set of languages. (See section 3 for details.) This definition resembles the Martin-Lof <ref> [39] </ref> definition of random sequences; indeed every random sequence is pspace-random. Since Martin-Lof [39] proved that a randomly selected oracle A is random with probability 1, it immediately follows that property (ii) above holds when = pspace. However, much more is true. The definition of -randomness is based on the resource-bounded measure theory developed by Lutz [35, 37]. <p> This underlying measure theory articulates the internal measure-theoretic structure of various complexity classes and, as it turns out, ensures that most decidable languages are -random. For example, almost every language decidable in 2 polynomial space is pspace-random [38]. Since no decidable (or even recursively enumerable) language is random <ref> [39] </ref>, then, pspace-random languages are pseudorandom, with pspace specifying the "level of randomness". It is shown in Corollary 5.2 below that, relative to every pspace-random oracle A, P A 6= NP A . Thus (i) and (ii) above hold for this separation property when = pspace. <p> A language A f0; 1g fl is pspace-random if A passes all pspace-tests. It is easily shown that every language A that is random (i.e., whose characteristic sequence A 2 f0; 1g is random) in the sense of Martin-Lof <ref> [39] </ref> is also pspace-random. As discussed in the introduction, this implies that a randomly selected language is pspace-random with probability one. Thus, separations that hold relative to every pspace-random oracle also hold relative to a randomly selected oracle with probability one.
Reference: [40] <author> N. Nisan and A. Wigderson, </author> <title> Hardness vs. randomness, </title> <booktitle> Proceedings of the 29th IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1988, </year> <pages> pp. 2-11. </pages>
Reference-contexts: Second, oracle properties that hold with probability 1 have proven to be useful for characterizing complexity classes. Bennett and Gill [9] and Ambos-Spies [2] have shown that a language L is in BPP if and only if L 2 P A for almost every oracle A. Nisan and Wigderson <ref> [40] </ref> have given a similar characterization of the Arthur-Merlin class AM of Babai [3], showing that a language L is in AM if and only if L 2 NP A for almost every oracle A.
Reference: [41] <author> U. Schoning, </author> <title> Complexity and Structure, </title> <publisher> Springer-Verlag, </publisher> <year> 1986. </year>
Reference-contexts: The standard proof (see, for instance, Schoning <ref> [41] </ref>) that PSIZE = P/Poly may easily be modified to show that PSIZE A = P A /Poly, and that PSIZE A i.o. = P A /Poly i.o. for every oracle A.
Reference: [42] <author> A. Shamir, </author> <title> IP = PSPACE, </title> <booktitle> Proceedings of the 31st Annual Symposium on Foundations of Computer Science, </booktitle> <year> 1990, </year> <pages> pp. 11-15. </pages>
Reference-contexts: This is taken as evidence that these problems may be very hard to solve. (Such evidence is to be interpreted with caution. For example, the theorems ALOG = P of Chandra, Kozen, and Stockmeyer [17] and IP = PSPACE of Shamir <ref> [42] </ref> have simple proofs but do not relativize, unless one modifies oracle access mechanisms to force them to relativize.) fl This research was supported in part by NSF Grants CCR-8809238 and CCR-9157382, and by a National Science Foundation Graduate Fellowship. 1 Unfortunately, oracle existence results of the above type provide no
Reference: [43] <author> M. Sipser, </author> <title> A complexity-theoretic approach to randomness, </title> <booktitle> Proceedings of the 15th ACM Symposium on Theory of Computing, </booktitle> <year> 1983, </year> <pages> pp. 330-335. </pages>
Reference-contexts: Kolmogorov complexity (also called program-size complexity) was introduced independently by Solomonoff [44], Kolmogorov [23], and Chaitin [16]. Time-bounded, space-bounded, and conditional Kolmogorov complexities have since been studied by Hartmanis [19], Sipser <ref> [43] </ref>, Levin [27], Huynh [20], Ko [22], Longpre [30], Lutz [32, 35], and many others. For an overview of work in this area, see Kolmogorov and Uspenskii [24] or Li and Vitanyi [28]. We begin with some terminology.
Reference: [44] <author> R. J. Solomonoff, </author> <title> A formal theory of inductive inference, </title> <booktitle> Information and Control 7 (1964), </booktitle> <pages> pp. 1-22, 224-254. </pages>
Reference-contexts: Kolmogorov complexity (also called program-size complexity) was introduced independently by Solomonoff <ref> [44] </ref>, Kolmogorov [23], and Chaitin [16]. Time-bounded, space-bounded, and conditional Kolmogorov complexities have since been studied by Hartmanis [19], Sipser [43], Levin [27], Huynh [20], Ko [22], Longpre [30], Lutz [32, 35], and many others.
Reference: [45] <author> S. Tang and O. Watanabe, </author> <title> On tally relativizations of BP-complexity classes, </title> <journal> SIAM Journal on Computing 18 (1989), </journal> <pages> pp. 449-462. </pages>
Reference-contexts: Other complexity classes have been given similar characterizations by Ambos-Spies [2], Tang and Watanabe <ref> [45] </ref>, and Book and Tang [12]. Results of this type indicate that a systematic study of random oracle properties may be a fruitful enterprise. Random oracle results, though interesting, are uninformative in a crucial respect. For example, consider the random oracle separation of P from NP.
Reference: [46] <author> C. B. Wilson, Relativization, </author> <title> reducibilities, and the exponential hierarchy, </title> <type> Technical Report TR-140, </type> <institution> University of Toronto, </institution> <year> 1980. </year>
Reference-contexts: Two n-input oracle circuits fl 1 and fl 2 are functionally distinct if there exists an oracle A relative to which fl 1 and fl 2 compute different sets. This model was first introduced by Wilson <ref> [46, 47] </ref>. As defined in these references, the size of a circuit fl = (V; E) is equal to jEj, i.e., the number of "wires" in fl, or the sum of the indegrees of fl's component gates. We will find it convenient to use the following "almost equivalent" definition.
Reference: [47] <author> C. B. Wilson, </author> <title> Relativized circuit complexity, </title> <journal> Journal of Computer and System Sciences 31 (1985), </journal> <pages> pp. 169-181. </pages>
Reference-contexts: Baker, Gill, and Solovay [5] exhibited oracles A and B such that P A = NP A and P B 6= NP B . Wilson <ref> [47] </ref> exhibited oracles C, D, E, F , and G such that NP C LINSIZE C , E D LINSIZE D , E E 2 PSIZE E , NP F 6 PSIZE F , and E G 6 PSIZE G . <p> The main result of this paper, Theorem 5.1, compares circuit size to nondeterministic time, relative to pseudorandom oracles. After constructing the above-mentioned oracles C and F , Wilson <ref> [47] </ref> asked what occurs with high probability relative to a randomly selected oracle. Theorem 5.1 below implies immediately that oracle F represents the typical case, i.e., that NP A 6 PSIZE A holds with probability 1. <p> Theorem 6.2 gives an even stronger separation for deterministic exponential time. In this case, the result states that the condition E A 6 SIZE A i.o. ( 2 n n ) is a pspace-test. This answers another open question of Wilson <ref> [47] </ref>, since it implies that, of the above-mentioned oracles D, E, and G, oracle G represents the probability-one case. Moreover, Theorem 6.2 is stronger than the answer to Wilson's question in respects (a), (b), and (c) above. <p> Two n-input oracle circuits fl 1 and fl 2 are functionally distinct if there exists an oracle A relative to which fl 1 and fl 2 compute different sets. This model was first introduced by Wilson <ref> [46, 47] </ref>. As defined in these references, the size of a circuit fl = (V; E) is equal to jEj, i.e., the number of "wires" in fl, or the sum of the indegrees of fl's component gates. We will find it convenient to use the following "almost equivalent" definition. <p> Proposition 4.4. For every fixed oracle A and every ff &lt; 1, the set of all L such that CS A n 1 + ff log n a.e. has pspace A -measure 1, hence measure 1 in ESPACE A . 2 This strengthens a result of Wilson <ref> [47] </ref> and, together with Proposition 4.3, shows that ESPACE A exhibits a weak Shannon effect: For any fixed oracle A, almost every language in ESPACE A has circuit-size complexity that is within a factor of 2 of maximal. <p> Proof. Immediate from Theorem 5.1 and Lemma 3.1. 2 Corollary 5.4. For every real ff &lt; 1 3 , for a randomly selected oracle A, Pr NP A 6 SIZE A i.o. (2 ffn ) = 1: Proof. Immediate from Theorem 5.1 and Lemma 3.1. 2 Wilson <ref> [47] </ref> constructed oracles A and B such that NP A LINSIZE A and NP B 6 P B /Poly, and asked which of these holds with probability one. We can now answer this question. Corollary 5.5. <p> Immediate from Corollary 6.5. 2 Although Corollary 6.6 is considerably weaker than Corollary 6.5 (which, in turn, is much weaker than Theorem 6.2), Corollary 6.6 gives an explicit answer to an open question of Wilson <ref> [47] </ref>. Specifically, after exhibiting oracles A, B, and C such that E A LINSIZE A , E B 2 P B /Poly, and E C 6 P C /Poly, Wilson asked what relation holds for randomly selected oracles.
References-found: 47

