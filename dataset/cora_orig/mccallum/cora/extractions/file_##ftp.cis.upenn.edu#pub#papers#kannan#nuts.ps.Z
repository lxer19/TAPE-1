URL: file://ftp.cis.upenn.edu/pub/papers/kannan/nuts.ps.Z
Refering-URL: http://www.cis.upenn.edu/~kannan/home.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: e-mail: noga@math.tau.ac.il.  e-mail: blum@cs.berkeley.edu.  e-mail: fiat@math.tau.ac.il.  e-mail: kannan@cs.arizona.edu.  e-mail: naor@wisdom.weizmann.ac.il.  e-mail: rafail@melody.berkeley.edu.  
Phone: Tel  
Title: Matching nuts and bolts (Extended Abstract) time deterministic algorithm, based on expander graphs, for matching
Author: Noga Alon Manuel Blum Amos Fiat Sampath Kannan Moni Naor Rafail Ostrovsky k Raymond and Beverly Sackler 
Address: Murray Hill, NJ 07974, USA.  Berke-ley, Berkeley, CA 94720, USA.  Israel.  USA.  Rehovot 76100, Israel.  Berkeley.  
Affiliation: Faculty of Exact Sciences, Tel Aviv University, Tel Aviv, Israel and AT T Bell Labs,  Computer Science Division, University of California at  Department of Computer Science, Raymond and Beverly Sackler Faculty of Exact Sciences, Tel Aviv University, Tel Aviv,  Academy of Sciences Department of Computer Science, University of Arizona,  Department of Applied Mathematics and Computer Science, The Weizmann Institute of Science,  University of California at Berkeley Computer Science Division, and International Computer Science Institute at  Aviv University and Hebrew University of Jerusalem.  
Note: Department of Mathematics,  Research supported in part by a United States Israel BSF Grant  Supported by NSF grant CCR92-01092.  Research supported by a grant from the Israeli  Supported by an Alon Fellowship. k  Supported by NSF postdoctoral fellowship and ICSI. Part of this work was done while visiting  
Abstract: We describe a procedure which may be helpful to any disorganized carpenter who has a mixed pile of bolts and nuts and wants to find the corresponding pairs of bolts and nuts. The procedure uses our (and the carpenter's) ability to construct efficiently highly expanding graphs. The problem considered is given a collection of n bolts of distinct widths and n nuts such that there is a 1-1 correspondence between the nuts and bolts. The goal is to find for each bolt its corresponding nut by comparing nuts to bolts but not nuts to nuts or bolts to bolts. Our objective is to minimize the number of operations of this kind (as well as the total running time). The problem has a randomized algorithm similar to Quicksort. Our main result is an n(log n) O(1) - 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Ajtai, J. Komlos, W.L. Steiger and E. Szemeredi, </author> <title> Almost sorting in one round, </title> <booktitle> Advances in Computing Research, </booktitle> <volume> Vol. </volume> <pages> 5, </pages> <address> 1989, </address> <publisher> JAI Press, </publisher> <pages> pp. 117-126. </pages>
Reference-contexts: We have two different approaches for the problem. If we count only comparisons, and allow ourselves to deduce implications by transitivity for free, then we can apply some of the techniques used in the study of parallel approximate sorting and selecting comparison algorithms (see <ref> [1] </ref>, [2], [3] [7] [13]) and obtain deterministic, explicit algorithms with O (n (log n) 3+* ) comparisons.
Reference: [2] <author> N. Alon and Y. Azar, </author> <title> Finding an approximate maximum, </title> <journal> SIAM J. on Computing 18, </journal> <year> 1989, </year> <pages> pp. 258-267. </pages>
Reference-contexts: We have two different approaches for the problem. If we count only comparisons, and allow ourselves to deduce implications by transitivity for free, then we can apply some of the techniques used in the study of parallel approximate sorting and selecting comparison algorithms (see [1], <ref> [2] </ref>, [3] [7] [13]) and obtain deterministic, explicit algorithms with O (n (log n) 3+* ) comparisons.
Reference: [3] <author> N. Alon and Y. Azar, </author> <title> Parallel comparison algorithms for approximation problems, </title> <booktitle> Proc. 29 th IEEE Symp. on Foundations of Computer Science, </booktitle> <address> Yorktown Heights, NY, </address> <year> 1988, </year> <pages> pp. 194-203. </pages> <note> Also: Combinatorica 11, </note> <year> 1991, </year> <pages> pp. 97-122. </pages>
Reference-contexts: We have two different approaches for the problem. If we count only comparisons, and allow ourselves to deduce implications by transitivity for free, then we can apply some of the techniques used in the study of parallel approximate sorting and selecting comparison algorithms (see [1], [2], <ref> [3] </ref> [7] [13]) and obtain deterministic, explicit algorithms with O (n (log n) 3+* ) comparisons.
Reference: [4] <author> N. Alon and F. R. K. Chung, </author> <title> Explicit construction of linear sized tolerant networks, </title> <journal> Discrete Math. </journal> <volume> 72(1988), </volume> <pages> pp. </pages> <booktitle> 15-19; ( Proc. of the First Japan Conference on Graph Theory and Applications, </booktitle> <address> Hakone, Japan, </address> <year> 1986.) </year>
Reference-contexts: Let n (v) = n A (v) denote the number of neighbors of v in A. By <ref> [4] </ref> (see also [5], page 122), v2V (n (v)jAjd=n) 2 2 jAj (1jAj=n) 2 jAj: By the Cauchy-Schwartz Inequality, for each fixed j, 1 (e (V j ; A) jAjdjV j j=n) 2 = jV j j X (n (v) jAjd=n)) 2 v2V j (n (v) jAjd=n) 2 : Since jV
Reference: [5] <author> N. Alon and J. H. Spencer, </author> <title> The Probabilistic Method, </title> <publisher> Wiley, </publisher> <year> 1991. </year>
Reference-contexts: Let n (v) = n A (v) denote the number of neighbors of v in A. By [4] (see also <ref> [5] </ref>, page 122), v2V (n (v)jAjd=n) 2 2 jAj (1jAj=n) 2 jAj: By the Cauchy-Schwartz Inequality, for each fixed j, 1 (e (V j ; A) jAjdjV j j=n) 2 = jV j j X (n (v) jAjd=n)) 2 v2V j (n (v) jAjd=n) 2 : Since jV j j 2n=I
Reference: [6] <author> N. Alon and Y. Roichman, </author> <title> Random Cayley graphs and Expanders, Random Structures and Algorithms, </title> <publisher> in press. </publisher>
Reference-contexts: It is worth noting that since we applied expanders of polylogarithmic degrees there are simpler explicit constructions than those given in [10] and [11] and we can take appropriate Cayley graphs of the groups Z k 2 by applying some known constructions of Linear Error Correcting Codes, as described in <ref> [6] </ref>. This gives somewhat simpler graphs at the cost of increasing the complexity by a polylogarithmic factor. We omit the details. It is conceivable that using the techniques of this paper one can get an O (n log 2 n) algorithm.
Reference: [7] <author> B. Bollobas and G. Brightwell, </author> <title> Graphs whose every transitive orientation contains almost every relation, </title> <journal> Israel J. Math. </journal> <volume> 59, </volume> <year> 1987, </year> <pages> pp. 112-128. </pages>
Reference-contexts: We have two different approaches for the problem. If we count only comparisons, and allow ourselves to deduce implications by transitivity for free, then we can apply some of the techniques used in the study of parallel approximate sorting and selecting comparison algorithms (see [1], [2], [3] <ref> [7] </ref> [13]) and obtain deterministic, explicit algorithms with O (n (log n) 3+* ) comparisons.
Reference: [8] <author> T. H. Cormen, C. E. Leiserson and R. L. Rivest, </author> <title> Introduction to Algorithms, </title> <publisher> MIT Press, </publisher> <year> 1990. </year>
Reference-contexts: Repeating in this manner yields an algorithm whose expected running time can be analyzed by imitating the known analysis for Quicksort (see, e.g., <ref> [8] </ref>) showing that it is fi (n log n). Moreover, it is easy to modify the above algorithm and make sure that the probability its running time will considerably exceed its expectation will be exponentially small. Deterministic algorithms seem more difficult to find.
Reference: [9] <author> W. Goddard, C. Kenyon, V. King and L. Schulman, </author> <title> Optimal randomized algorithms for local sorting and set-maxima, </title> <journal> SIAM J. on Comput. </journal> <volume> 22, </volume> <year> 1993, </year> <pages> pp. 272-283. </pages>
Reference-contexts: We can think of two problems where our deterministic sampling methods may be helpful: one is local sorting where the goal is to answer all the the relationships between elements who are neighbors in a given graph. An optimal probabilistic algorithm is known <ref> [9] </ref>. The other problem is selection where the input is stored in a read only memroy and ther is also some small read/write memory [12]. Acknowledgements The last author wishes to thank Leonard Schul-man for helpful discussions and Yishay Man sour for his hospitality while visiting Tel Aviv.
Reference: [10] <author> A. Lubotzky, R. Phillips and P. Sarnak, </author> <title> Explicit expanders and the Ramanujan conjectures, </title> <booktitle> Proc. 18 th ACM Symp. on Theory of Computing, </booktitle> <year> 1986, </year> <pages> pp. 240-246. </pages> <note> See also: </note> <author> A. Lubotzky, R. Phillips and P. Sarnak, </author> <title> Ra-manujan graphs, </title> <type> Combinatorica 8, </type> <year> 1988, </year> <pages> pp. 261-277. </pages>
Reference-contexts: Let G = (V; E) be a d-regular graph on a set V = fv 1 ; : : : ; v n g of n vertices in which the absolute value of all nontrivial eigenvalues is at most 2 p There are known explicit constructions of such graphs (see <ref> [10] </ref>, [11]) for any d for which d1 is a prime power congruent to 1 modulo 4, where for each such d there are constructions for an infinite set of values of n containing a number between x and cx for all large x, where c is some absolute constant. <p> It is worth noting that since we applied expanders of polylogarithmic degrees there are simpler explicit constructions than those given in <ref> [10] </ref> and [11] and we can take appropriate Cayley graphs of the groups Z k 2 by applying some known constructions of Linear Error Correcting Codes, as described in [6]. This gives somewhat simpler graphs at the cost of increasing the complexity by a polylogarithmic factor. We omit the details.
Reference: [11] <author> G. A. Margulis, </author> <title> Explicit group-theoretical constructions of combinatorial schemes and their application to the design of expanders Matching nuts and bolts 7 and superconcentrators, </title> <type> Problemy Peredachi Informatsii 24, </type> <year> 1988, </year> <pages> pp. </pages> <booktitle> 51-60 (in Russian). English translation in Problems of Information Transmission 24 (1988), </booktitle> <pages> pp. 39-46. </pages>
Reference-contexts: G = (V; E) be a d-regular graph on a set V = fv 1 ; : : : ; v n g of n vertices in which the absolute value of all nontrivial eigenvalues is at most 2 p There are known explicit constructions of such graphs (see [10], <ref> [11] </ref>) for any d for which d1 is a prime power congruent to 1 modulo 4, where for each such d there are constructions for an infinite set of values of n containing a number between x and cx for all large x, where c is some absolute constant. <p> It is worth noting that since we applied expanders of polylogarithmic degrees there are simpler explicit constructions than those given in [10] and <ref> [11] </ref> and we can take appropriate Cayley graphs of the groups Z k 2 by applying some known constructions of Linear Error Correcting Codes, as described in [6]. This gives somewhat simpler graphs at the cost of increasing the complexity by a polylogarithmic factor. We omit the details.
Reference: [12] <author> J. I. Munro and M. Paterson, </author> <title> Selection and sorting with limited storage, </title> <booktitle> Theoretical Computer Science 12, </booktitle> <year> 1980, </year> <pages> pp. 315-323. </pages>
Reference-contexts: An optimal probabilistic algorithm is known [9]. The other problem is selection where the input is stored in a read only memroy and ther is also some small read/write memory <ref> [12] </ref>. Acknowledgements The last author wishes to thank Leonard Schul-man for helpful discussions and Yishay Man sour for his hospitality while visiting Tel Aviv.
Reference: [13] <author> N. Pippenger, </author> <title> Sorting and selecting in rounds, </title> <journal> SIAM J. Comput. </journal> <volume> 6, </volume> <year> 1987, </year> <pages> pp. 1032-1038. </pages>
Reference-contexts: We have two different approaches for the problem. If we count only comparisons, and allow ourselves to deduce implications by transitivity for free, then we can apply some of the techniques used in the study of parallel approximate sorting and selecting comparison algorithms (see [1], [2], [3] [7] <ref> [13] </ref>) and obtain deterministic, explicit algorithms with O (n (log n) 3+* ) comparisons.
Reference: [14] <author> G. J. E. Rawlins, </author> <title> Compared to what? an introduction to the analysis of algorithms, </title> <publisher> Computer Science Press, </publisher> <year> 1991. </year>
Reference-contexts: The answer to each such query is either b i &gt; s j or b i = s j or b i &lt; s j . The nuts and bolts matching problem is first mentioned as an exercise in <ref> [14] </ref>, page 293. There is a simple randomized algorithm along the lines of Quicksort for this problem and this solution is described later in this section.
References-found: 14

