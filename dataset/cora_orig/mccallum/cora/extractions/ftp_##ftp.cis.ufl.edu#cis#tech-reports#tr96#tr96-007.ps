URL: ftp://ftp.cis.ufl.edu/cis/tech-reports/tr96/tr96-007.ps
Refering-URL: http://www.cis.ufl.edu/~fishwick/tr/tr96-007.html
Root-URL: http://www.cis.ufl.edu
Title: TWO METHODS FOR EXPLOITING ABSTRACTION IN SYSTEMS  
Author: Paul A. Fishwick and Kangsun Lee 
Address: Gainesville, FL 32601  
Affiliation: Computer and Information Science and Engineering Department University of Florida  
Abstract: As complex models are used in practice, modelers require ways of abstracting their models and having the ability to traverse levels of abstraction. The use of abstraction in modeling is spread over many disciplines and it is often difficult to locate an abstraction methodology or a set of practical techniques to help the modeler to perform the abstraction. Several approaches have been discussed in the general simulation literature: (1) variable resolution modeling; (2) combined modeling; (3) multimodeling; and (4) metamodeling. Our premise is that there are two different approaches to abstraction: behavioral and structural. We present one physical example of heat transfer and display the different abstraction approaches on this example. The approach taken to abstraction is an important design approach|to break a system into hierarchical levels. Behavioral abstraction serves to simplify the dynamic of a system without gaining the kind of reductionist knowledge one obtains through hierarchical decomposition. This work provides a comprehensive approach to system abstraction, while including specific practical behavioral methods to achieve abstract system descriptions. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> System Identification Toolbox. The MathWorks, Inc., </institution> <year> 1991. </year>
Reference-contexts: This parameter estimation procedure provides a search through parameter space, effectively, to achieve a close-to optimal mapping between the actual simulated values of the system and the approximate abstract system. The Box-Jenkins method is a method used frequently in time series analysis <ref> [19, 1] </ref>.
Reference: [2] <institution> Neural Network Toolbox. The MathWorks, Inc., </institution> <year> 1992. </year>
Reference-contexts: The typical two layer architecture used for a function approximation network is shown in Fig. 5. It has one hidden layer of sigmoidal neurons which receive inputs directly and then broadcast their outputs to a layer of linear neurons, which compute the network output <ref> [2, 14] </ref>. Fig. 9 shows the approximation result. This also shows poor performance in abstracting the sharp changing part like the linear regression model. 4.2 Dynamic Approach In the dynamic approach, we're interested in time dependent behavior.
Reference: [3] <author> B.Widrow and S.D.Sterns. </author> <title> Adaptive Signal Pro-cesing. </title> <publisher> Prentice-Hall, </publisher> <year> 1985. </year>
Reference-contexts: The number nk is the number of delays from input to output. Fig. 10 shows the approximation result. 4.2.2 ADALINE Neural Network The adaptive linear element (ADALINE) was developed by Widrow and Hoff <ref> [3] </ref>. Their neural network model differs from the perceptron in that their neurons have a linear transfer function. The ADALINE network also enables the Widrow-Hoff learning rule, known as the Least Mean Square (LMS) rule, to adjust weights and biases according to the magnitute of errors, not just their presence.
Reference: [4] <author> Bert de Vries and Jose C. Principe. </author> <title> The Gamma Model-A New Neural Model for Temporal Processing. </title> <booktitle> Neural Networks, </booktitle> <volume> 5 </volume> <pages> 565-576, </pages> <year> 1992. </year>
Reference-contexts: It includes memory structures so that temporal patterns can be converted into static input patterns. A Gamma network focuses on the network architecture whose memory structures are implemented only at the input layer to alleviate the difficulty in determining the memory order <ref> [4, 18] </ref>. A schematic diagram of Gamma network for our example is shown in Fig. 7. The abstraction result for the Gamma network is shown in Fig. 14. 5 Summary and Conclusions We have provided two practical approaches to system abstraction.
Reference: [5] <author> Paul A. Fishwick. </author> <title> A Taxonomy for Simulation Modeling Based on a Computational Framework. </title> <journal> IIE Transactions on IE Research, </journal> <note> Submitted Au-guest 1995. </note>
Reference-contexts: We term this iterative procedure model engineering. The more complex types are refinements of model components at the next highest abstraction level. Hierarchical system development has been commonly used for many years in software and systems engineering <ref> [5, 6] </ref>, but the multimodeling approach makes it more flexible by allowing for heterogeneous, inter-level coupling of systems. After creating the hierarchy, we may want to isolate abstraction levels, so a level can be executed apart from the rest of the hierarchy.
Reference: [6] <author> Paul A. Fishwick. </author> <title> Dynamic Models as Patterns for System and Software Development. </title> <journal> Communications of the ACM, </journal> <note> Submitted January 1996; Special issue on Design Patterns and Pattern Languages. </note>
Reference-contexts: We term this iterative procedure model engineering. The more complex types are refinements of model components at the next highest abstraction level. Hierarchical system development has been commonly used for many years in software and systems engineering <ref> [5, 6] </ref>, but the multimodeling approach makes it more flexible by allowing for heterogeneous, inter-level coupling of systems. After creating the hierarchy, we may want to isolate abstraction levels, so a level can be executed apart from the rest of the hierarchy.
Reference: [7] <author> Paul A. Fishwick. </author> <title> The Role of Process Abstrac--tion in Simulation. </title> <journal> IEEE Transactions on Systems, Man and Cybernetics, </journal> <volume> 18(1):18 - 39, </volume> <month> Jan-uary/February </month> <year> 1988. </year>
Reference-contexts: To incorporate different levels together, we have constructed a mul-timodeling methodology [8, 13, 9, 10, 12], which provides a way of structuring a heterogeneous set of model types together in a way so that each type performs its part, and the behavior is preserved as levels are mapped <ref> [7, 20, 23] </ref>. While the multimodel approach is sound for well-structured models defined in terms of state space functions and set-theoretic components, there are significant problems with it. The multimodeling approach provides for a hierarchical model structure, but select system components in each level are dependent on the next-lowest level.
Reference: [8] <author> Paul A. Fishwick. </author> <title> Heterogeneous Decomposition and Coupling for Combined Modeling. </title> <booktitle> In 1991 Winter Simulation Conference, </booktitle> <pages> pages 1199 - 1208, </pages> <address> Phoenix, AZ, </address> <month> December </month> <year> 1991. </year>
Reference-contexts: To incorporate different levels together, we have constructed a mul-timodeling methodology <ref> [8, 13, 9, 10, 12] </ref>, which provides a way of structuring a heterogeneous set of model types together in a way so that each type performs its part, and the behavior is preserved as levels are mapped [7, 20, 23]. <p> In the structural abstraction approach to systems, we first need to define our levels of abstraction and then choose which models types to use at each level. In <ref> [8, 13, 11] </ref>, we have the following model levels: 1. Level 1: Petri net, defines the action of the human operator and the mixing process. ing Water Multimodel 2.
Reference: [9] <author> Paul A. Fishwick. </author> <title> An Integrated Approach to System Modelling using a Synthesis of Artificial Intelligence, </title> <booktitle> Software Engineering and Simulation Methodologies. ACM Transactions on Modeling and Computer Simulation, </booktitle> <year> 1992. </year> <note> (submitted for review). </note>
Reference-contexts: To incorporate different levels together, we have constructed a mul-timodeling methodology <ref> [8, 13, 9, 10, 12] </ref>, which provides a way of structuring a heterogeneous set of model types together in a way so that each type performs its part, and the behavior is preserved as levels are mapped [7, 20, 23].
Reference: [10] <author> Paul A. Fishwick. </author> <title> A Simulation Environment for Multimodeling. Discrete Event Dynamic Systems: </title> <journal> Theory and Applications, </journal> <volume> 3 </volume> <pages> 151-171, </pages> <year> 1993. </year>
Reference-contexts: To incorporate different levels together, we have constructed a mul-timodeling methodology <ref> [8, 13, 9, 10, 12] </ref>, which provides a way of structuring a heterogeneous set of model types together in a way so that each type performs its part, and the behavior is preserved as levels are mapped [7, 20, 23].
Reference: [11] <author> Paul A. Fishwick. </author> <title> Simulation Model Design and Execution: Building Digital Worlds. </title> <publisher> Prentice Hall, </publisher> <year> 1995. </year>
Reference-contexts: law with the capacitance law, and using the law of capacitors in series, we arrive at: k = RC 1 C 2 _ T = k (T 1 T ) (2) 3 Structural Abstraction The structural approach to system abstraction for the boiling water is defined in a recent text <ref> [11] </ref> where the boiling water is included as a sub-system within a system of two flasks and a human operator who mixes the flasks once the liquids are boiling. <p> In the structural abstraction approach to systems, we first need to define our levels of abstraction and then choose which models types to use at each level. In <ref> [8, 13, 11] </ref>, we have the following model levels: 1. Level 1: Petri net, defines the action of the human operator and the mixing process. ing Water Multimodel 2.
Reference: [12] <author> Paul A. Fishwick, Hari Narayanan, Jon Sticklen, and Andrea Bonarini. </author> <title> Multimodel approaches for system reasoning and simulation. </title> <journal> IEEE Transactions on Systems, Man and Cybernetics, </journal> <note> 1994. to be published. </note>
Reference-contexts: To incorporate different levels together, we have constructed a mul-timodeling methodology <ref> [8, 13, 9, 10, 12] </ref>, which provides a way of structuring a heterogeneous set of model types together in a way so that each type performs its part, and the behavior is preserved as levels are mapped [7, 20, 23].
Reference: [13] <author> Paul A. Fishwick and Bernard P. Zeigler. </author> <title> A Mul-timodel Methodology for Qualitative Model Engineering. </title> <journal> ACM Transactions on Modeling and Computer Simulation, </journal> <volume> 2(1) </volume> <pages> 52-81, </pages> <year> 1992. </year>
Reference-contexts: To incorporate different levels together, we have constructed a mul-timodeling methodology <ref> [8, 13, 9, 10, 12] </ref>, which provides a way of structuring a heterogeneous set of model types together in a way so that each type performs its part, and the behavior is preserved as levels are mapped [7, 20, 23]. <p> In the structural abstraction approach to systems, we first need to define our levels of abstraction and then choose which models types to use at each level. In <ref> [8, 13, 11] </ref>, we have the following model levels: 1. Level 1: Petri net, defines the action of the human operator and the mixing process. ing Water Multimodel 2.
Reference: [14] <author> Li Min Fu. </author> <booktitle> Neural Networks in Computer Intelligence. </booktitle> <publisher> McGraw-Hill, </publisher> <year> 1994. </year>
Reference-contexts: The typical two layer architecture used for a function approximation network is shown in Fig. 5. It has one hidden layer of sigmoidal neurons which receive inputs directly and then broadcast their outputs to a layer of linear neurons, which compute the network output <ref> [2, 14] </ref>. Fig. 9 shows the approximation result. This also shows poor performance in abstracting the sharp changing part like the linear regression model. 4.2 Dynamic Approach In the dynamic approach, we're interested in time dependent behavior.
Reference: [15] <author> R. E. Kalman, P. L. Falb, and M. A. Arbib. </author> <title> Topics in Mathematical Systems Theory. </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1962. </year>
Reference-contexts: A new definition and methodology is needed to better handle abstraction of systems and components. We define system abstraction to be one of two types: behavioral and structural. The concepts of behavior and structure are fundamental to systems theory <ref> [15, 17] </ref>, and have also been formalized within discrete event simulation [21, 22]. We need a way to augment multimodeling so that abstraction can take place on these two fronts.
Reference: [16] <author> Averill M. Law and W. David Kelton. </author> <title> Simulation Modeling and Analysis. </title> <publisher> McGraw-Hill, </publisher> <year> 1991. </year>
Reference-contexts: The regression coefficients c 1 ; c 2 ; :::; c n are determined by solving a system of simultaneous linear equations: Ac = y <ref> [16] </ref>. Fig. 8 shows the result. The approximation is poor in the graph's central region because linear regression is done by polynomial fit, and so it generates a monotonically increasing function. 4.1.2 Backpropagation Network One of the traditional uses of a neural network is function approximation.
Reference: [17] <author> Louis Padulo and Michael A. Arbib. </author> <title> Systems Theory: A Unified State Space Approach to Continuous and Discrete Systems. </title> <editor> W. B. </editor> <publisher> Saunders, </publisher> <address> Philadelphia, PA, </address> <year> 1974. </year>
Reference-contexts: A new definition and methodology is needed to better handle abstraction of systems and components. We define system abstraction to be one of two types: behavioral and structural. The concepts of behavior and structure are fundamental to systems theory <ref> [15, 17] </ref>, and have also been formalized within discrete event simulation [21, 22]. We need a way to augment multimodeling so that abstraction can take place on these two fronts.
Reference: [18] <author> Jose C. Principe and Pedro G. de Oliveira. </author> <title> The Gamma Filter-A New Class of Adaptive IIR Filters with Restricted Feedback. </title> <journal> IEEE transactions on signal procesing, </journal> <volume> 41(2) </volume> <pages> 649-656, </pages> <year> 1993. </year>
Reference-contexts: It includes memory structures so that temporal patterns can be converted into static input patterns. A Gamma network focuses on the network architecture whose memory structures are implemented only at the input layer to alleviate the difficulty in determining the memory order <ref> [4, 18] </ref>. A schematic diagram of Gamma network for our example is shown in Fig. 7. The abstraction result for the Gamma network is shown in Fig. 14. 5 Summary and Conclusions We have provided two practical approaches to system abstraction.
Reference: [19] <author> Zaiyong Tang and Paul A. Fishwick. </author> <title> Feed-forward Neural Nets as Models for Time Series Forecasting. </title> <institution> TR91-008 Computer and Information Sciences, University of Florida, </institution> <year> 1991. </year>
Reference-contexts: This parameter estimation procedure provides a search through parameter space, effectively, to achieve a close-to optimal mapping between the actual simulated values of the system and the approximate abstract system. The Box-Jenkins method is a method used frequently in time series analysis <ref> [19, 1] </ref>.
Reference: [20] <author> Bernard P. Zeigler. </author> <title> Towards a Formal Theory of Modelling and Simulation: Structure Preserving Morphisms. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 19(4):742 - 764, </volume> <year> 1972. </year>
Reference-contexts: To incorporate different levels together, we have constructed a mul-timodeling methodology [8, 13, 9, 10, 12], which provides a way of structuring a heterogeneous set of model types together in a way so that each type performs its part, and the behavior is preserved as levels are mapped <ref> [7, 20, 23] </ref>. While the multimodel approach is sound for well-structured models defined in terms of state space functions and set-theoretic components, there are significant problems with it. The multimodeling approach provides for a hierarchical model structure, but select system components in each level are dependent on the next-lowest level.
Reference: [21] <author> Bernard P. Zeigler. </author> <title> Theory of Modelling and Simulation. </title> <publisher> John Wiley and Sons, </publisher> <year> 1976. </year>
Reference-contexts: We define system abstraction to be one of two types: behavioral and structural. The concepts of behavior and structure are fundamental to systems theory [15, 17], and have also been formalized within discrete event simulation <ref> [21, 22] </ref>. We need a way to augment multimodeling so that abstraction can take place on these two fronts.
Reference: [22] <author> Bernard P. Zeigler. </author> <title> Multi-Facetted Modelling and Discrete Event Simulation. </title> <publisher> Academic Press, </publisher> <year> 1984. </year>
Reference-contexts: We define system abstraction to be one of two types: behavioral and structural. The concepts of behavior and structure are fundamental to systems theory [15, 17], and have also been formalized within discrete event simulation <ref> [21, 22] </ref>. We need a way to augment multimodeling so that abstraction can take place on these two fronts.
Reference: [23] <author> Bernard P. Zeigler. </author> <title> Object Oriented Simulation with Hierarchical, Modular Models: Intelligent Agents and Endomorphic Systems. </title> <publisher> Academic Press, </publisher> <year> 1990. </year>
Reference-contexts: To incorporate different levels together, we have constructed a mul-timodeling methodology [8, 13, 9, 10, 12], which provides a way of structuring a heterogeneous set of model types together in a way so that each type performs its part, and the behavior is preserved as levels are mapped <ref> [7, 20, 23] </ref>. While the multimodel approach is sound for well-structured models defined in terms of state space functions and set-theoretic components, there are significant problems with it. The multimodeling approach provides for a hierarchical model structure, but select system components in each level are dependent on the next-lowest level.
References-found: 23

