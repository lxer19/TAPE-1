URL: http://janowiec.cs.iastate.edu/~lavalle/papers/icra99c.ps.gz
Refering-URL: http://janowiec.cs.iastate.edu/~lavalle/
Root-URL: http://www.cs.iastate.edu
Email: lavalle@iastate.edu john4@andrew.cmu.edu  
Title: Visibility-Based Pursuit-Evasion: The Case of Curved Environments  
Author: Steven M. LaValle John E. Hinrichsen 
Note: To appear in Proc. 1999 IEEE International Conference on Robotics and Automation  
Address: Ames, IA 50011 USA Pittsburgh, PA 15213 USA  
Affiliation: Dept. of Computer Science Dept. of Mathematical Sciences Iowa State University Carnegie Mellon University  
Abstract: We consider the problem of visually searching for an unpredictable target that can move arbitrarily fast in a simply-connected, curved, two-dimensional environment. A complete algorithm is presented that is guaranteed to find the elusive target if it is possible for a single pursuer. The key to the algorithm is a cell decomposition based on critical visibility events that occur because of inflections and bitangents of the environment boundary. We have implemented the cell decomposition algorithm, and show several computed examples. The technique is an extension and simplification of a previous technique for searching a polygonal environment. Our solution can also be considered as a step towards a unified approach to pursuit-evasion strategies that have little dependency on the representation of the environment. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T. Ba~sar and G. J. Olsder. </author> <title> Dynamic Noncooperative Game Theory. </title> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1982. </year> <title> 5 (a) (b) different problems. </title>
Reference-contexts: Related problems have been considered in dynamic (or differential) game theory, graph theory, and computational geometry. In game theory, pursuit-evasion scenarios, such as the Homicidal Chauffeur problem, express differential motion models for two opponents, and conditions of capture or optimal strategies are sought <ref> [1, 9, 10] </ref>. In graph theory, the several interesting results have been obtained for pursuit-evasion in a graph, in which the pursuers and evader can move from vertex to vertex until eventually a pursuer and evader lie in the same vertex [14, 15, 16, 18]. <p> Let X denote any topological space. Let f : X ! &lt; and g : X ! &lt; denote two piecewise continuous functions that each have exactly k points of discontinuity. Let h : <ref> [0; 1] </ref> fi X ! &lt; denote a function for which the following hold: 1) h (0; x) = f (x) for each x 2 X; 2) h (1; x) = g (x) for each x 2 X; 3) h (t; x) : X ! &lt; has exactly k points of <p> a function for which the following hold: 1) h (0; x) = f (x) for each x 2 X; 2) h (1; x) = g (x) for each x 2 X; 3) h (t; x) : X ! &lt; has exactly k points of discontinuity for any fixed t 2 <ref> [0; 1] </ref>; 4) h is continuous, except at any of the k discontinuities for each h (t; x). Using h, attempt to construct k functions, 1 ; 2 ; : : : ; k , that "track" the discontinuties in h as follows. Let i : [0; 1] ! X be <p> any fixed t 2 <ref> [0; 1] </ref>; 4) h is continuous, except at any of the k discontinuities for each h (t; x). Using h, attempt to construct k functions, 1 ; 2 ; : : : ; k , that "track" the discontinuties in h as follows. Let i : [0; 1] ! X be defined such that if (t) = x, then h (t; x) is a point of discontinuity. <p> If the functions 1 ; 2 ; : : : ; k can be defined such that each is continuous, and i (t) 6= j (t) for each t 2 <ref> [0; 1] </ref> and each i 6= j, then we say that h defines a piecewise homotopy. Intuitively, piecewise homotopy can be considered as a generalization of classical homo-topy to piecewise continuous functions. The points of discontinuity must move continuously in the piecewise homotopy. Let fl : [0; 1] ! R be <p> for each t 2 <ref> [0; 1] </ref> and each i 6= j, then we say that h defines a piecewise homotopy. Intuitively, piecewise homotopy can be considered as a generalization of classical homo-topy to piecewise continuous functions. The points of discontinuity must move continuously in the piecewise homotopy. Let fl : [0; 1] ! R be a continuous, closed-loop path for the pursuer. Note that fl can be composed with the first argument of d to yield a function h : [0; 1]fiS 1 ! &lt;. <p> The points of discontinuity must move continuously in the piecewise homotopy. Let fl : <ref> [0; 1] </ref> ! R be a continuous, closed-loop path for the pursuer. Note that fl can be composed with the first argument of d to yield a function h : [0; 1]fiS 1 ! &lt;. Lemma 2 If, for some continuous, closed-loop path fl, h defines a piecewise homotopy, then the image of fl in R is contained in a conservative region.
Reference: [2] <author> J. Barraquand and P. Ferbach. </author> <title> Motion planning with uncertainty: The information space approach. </title> <booktitle> In IEEE Int. Conf. Robot. & Autom., </booktitle> <pages> pages 1341-1348, </pages> <year> 1995. </year>
Reference-contexts: The set of all possible information states will be referred to as the information space, I. The information space is a standard representational tool for problems that have imperfect state information, and variations of it have appeared in many related planning contexts <ref> [2, 6, 7, 8, 12] </ref>. Suppose that a strategy is parameterized with a time interval t 2 [0; t f ] for some fixed t f &gt; 0. For a fixed strategy, fl, and an initial set of contaminated points, S (0), a path in the information space is obtained.
Reference: [3] <author> D. Bienstock and P. Seymour. </author> <title> Monotonicity in graph searching. </title> <journal> J. Algorithms, </journal> <volume> 12 </volume> <pages> 239-245, </pages> <year> 1991. </year>
Reference-contexts: One interesting result, which does not hold true for our problem, is that a graph can be searched monotonically (without clearing places 1 multiple times) <ref> [3, 11] </ref>. Art gallery problems in computa-tional geometry [4, 17, 21] can be considered as a limiting case for our problem, in which the pursuers are not allowed to move. Several variations of pursuit-evasion in a polygonal environment have also been considered in [5, 22].
Reference: [4] <author> W.-P. Chin and S. Ntafos. </author> <title> Optimum watchman routes. </title> <journal> Information Processing Letters, </journal> <volume> 28 </volume> <pages> 39-44, </pages> <year> 1988. </year>
Reference-contexts: One interesting result, which does not hold true for our problem, is that a graph can be searched monotonically (without clearing places 1 multiple times) [3, 11]. Art gallery problems in computa-tional geometry <ref> [4, 17, 21] </ref> can be considered as a limiting case for our problem, in which the pursuers are not allowed to move. Several variations of pursuit-evasion in a polygonal environment have also been considered in [5, 22]. Plenty of applications exist that could benefit from visibility-based pursuit-evasion strategies.
Reference: [5] <author> D. Crass, I. Suzuki, and M. Yamashita. </author> <title> Searching for a mobile intruder in a corridor the open edge variant of the polygon search problem. </title> <journal> Int. J. Comput. Geom. & Appl., </journal> <volume> 5(4) </volume> <pages> 397-412, </pages> <year> 1995. </year>
Reference-contexts: Art gallery problems in computa-tional geometry [4, 17, 21] can be considered as a limiting case for our problem, in which the pursuers are not allowed to move. Several variations of pursuit-evasion in a polygonal environment have also been considered in <ref> [5, 22] </ref>. Plenty of applications exist that could benefit from visibility-based pursuit-evasion strategies. They can be embedded in surveillance systems that use mobile robotics with various types of sensors (motion, thermal, cameras, etc.).
Reference: [6] <author> B. R. Donald. </author> <booktitle> On information invariants in robotics. Artif. Intell., </booktitle> <volume> 72 </volume> <pages> 217-304, </pages> <year> 1995. </year>
Reference-contexts: The set of all possible information states will be referred to as the information space, I. The information space is a standard representational tool for problems that have imperfect state information, and variations of it have appeared in many related planning contexts <ref> [2, 6, 7, 8, 12] </ref>. Suppose that a strategy is parameterized with a time interval t 2 [0; t f ] for some fixed t f &gt; 0. For a fixed strategy, fl, and an initial set of contaminated points, S (0), a path in the information space is obtained.
Reference: [7] <author> M. Erdmann. </author> <title> Randomization for robot tasks: Using dynamic programming in the space of knowledge states. </title> <journal> Algorithmica, </journal> <volume> 10 </volume> <pages> 248-291, </pages> <year> 1993. </year>
Reference-contexts: The set of all possible information states will be referred to as the information space, I. The information space is a standard representational tool for problems that have imperfect state information, and variations of it have appeared in many related planning contexts <ref> [2, 6, 7, 8, 12] </ref>. Suppose that a strategy is parameterized with a time interval t 2 [0; t f ] for some fixed t f &gt; 0. For a fixed strategy, fl, and an initial set of contaminated points, S (0), a path in the information space is obtained.
Reference: [8] <author> K. Y. Goldberg. </author> <title> Orienting polygonal parts without sensors. </title> <journal> Algorithmica, </journal> <volume> 10 </volume> <pages> 201-225, </pages> <year> 1993. </year>
Reference-contexts: The set of all possible information states will be referred to as the information space, I. The information space is a standard representational tool for problems that have imperfect state information, and variations of it have appeared in many related planning contexts <ref> [2, 6, 7, 8, 12] </ref>. Suppose that a strategy is parameterized with a time interval t 2 [0; t f ] for some fixed t f &gt; 0. For a fixed strategy, fl, and an initial set of contaminated points, S (0), a path in the information space is obtained.
Reference: [9] <author> O. Hajek. </author> <title> Pursuit Games. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1975. </year>
Reference-contexts: Related problems have been considered in dynamic (or differential) game theory, graph theory, and computational geometry. In game theory, pursuit-evasion scenarios, such as the Homicidal Chauffeur problem, express differential motion models for two opponents, and conditions of capture or optimal strategies are sought <ref> [1, 9, 10] </ref>. In graph theory, the several interesting results have been obtained for pursuit-evasion in a graph, in which the pursuers and evader can move from vertex to vertex until eventually a pursuer and evader lie in the same vertex [14, 15, 16, 18].
Reference: [10] <author> R. Isaacs. </author> <title> Differential Games. </title> <publisher> Wiley, </publisher> <address> New York, NY, </address> <year> 1965. </year>
Reference-contexts: Related problems have been considered in dynamic (or differential) game theory, graph theory, and computational geometry. In game theory, pursuit-evasion scenarios, such as the Homicidal Chauffeur problem, express differential motion models for two opponents, and conditions of capture or optimal strategies are sought <ref> [1, 9, 10] </ref>. In graph theory, the several interesting results have been obtained for pursuit-evasion in a graph, in which the pursuers and evader can move from vertex to vertex until eventually a pursuer and evader lie in the same vertex [14, 15, 16, 18].
Reference: [11] <author> A. S. Lapaugh. </author> <title> Recontamination does not help to search a graph. </title> <journal> Journal of the ACM, </journal> <volume> 40(2) </volume> <pages> 224-245, </pages> <month> April </month> <year> 1993. </year>
Reference-contexts: One interesting result, which does not hold true for our problem, is that a graph can be searched monotonically (without clearing places 1 multiple times) <ref> [3, 11] </ref>. Art gallery problems in computa-tional geometry [4, 17, 21] can be considered as a limiting case for our problem, in which the pursuers are not allowed to move. Several variations of pursuit-evasion in a polygonal environment have also been considered in [5, 22].
Reference: [12] <author> S. M. LaValle. </author> <title> A Game-Theoretic Framework for Robot Motion Planning. </title> <type> PhD thesis, </type> <institution> University of Illinois, Ur-bana, IL, </institution> <month> July </month> <year> 1995. </year>
Reference-contexts: The set of all possible information states will be referred to as the information space, I. The information space is a standard representational tool for problems that have imperfect state information, and variations of it have appeared in many related planning contexts <ref> [2, 6, 7, 8, 12] </ref>. Suppose that a strategy is parameterized with a time interval t 2 [0; t f ] for some fixed t f &gt; 0. For a fixed strategy, fl, and an initial set of contaminated points, S (0), a path in the information space is obtained.
Reference: [13] <author> S. M. LaValle, D. Lin, L. J. Guibas, J.-C. Latombe, and R. Motwani. </author> <title> Finding an unpredictable target in a workspace with obstacles. </title> <booktitle> In Proc. IEEE Int'l Conf. on Robotics and Automation, </booktitle> <pages> pages 737-742, </pages> <year> 1997. </year>
Reference-contexts: See Figure 1. In this paper, we propose a complete algorithm that will compute a path that a pursuer must follow to be guaranteed that all evaders will be seen, regardless of their paths. The approach developed in this paper extends previous work by LaValle et al. <ref> [13] </ref>, from the case of a polygonal environment to an environment with arbitrary curves. In both cases, critical evaders in the curved environment. events are found in an information space, and a finite, combinatorial structure is searched that is induced by a special cell decomposition of the environment. <p> In both cases, critical evaders in the curved environment. events are found in an information space, and a finite, combinatorial structure is searched that is induced by a special cell decomposition of the environment. The method in <ref> [13] </ref> would tend toward an infinite number of cells if we considered approximating curved models with arbitrarily-fine polygons. This problem motivated the current work, which identifies a finite set of critical events for a curved environment, and ultimately leads to a simplification of the cell decomposition for polygonal environments. <p> This implies that the information state cannot be altered by moving along closed paths in C. Just as in the case of motions in a conservative field, the following holds <ref> [13] </ref>: Lemma 1 If C is conservative then for any two continuous paths, fl 1 ; fl 2 , mapping into C such that fl 1 (t 0 ) = fl 2 (t 0 ) and fl 1 (t 1 ) = fl 2 (t 1 ) then (; fl 1 <p> The approach can be considered as an extension to the case of a polygonal environment <ref> [13] </ref>, that brings some additional insight into pursuit-evasion problems. In particular, we used a sensor-based representation that enabled us to develop a complete algorithm based on inflections and bitangents.
Reference: [14] <author> F. Makedon and I. H. Sudborough. </author> <title> Minimizing width in linear layouts. In Proc. 10th ICALP, Lecture Notes in (a) (b) vironment; (b) interpreting the data; (c) a possible envi ronment that is consistent with the data; (d) the sensor based representation can be applied to this case. </title> <booktitle> Computer Science 154, </booktitle> <pages> pages 478-490. </pages> <publisher> Springer-Verlag, </publisher> <year> 1983. </year>
Reference-contexts: In graph theory, the several interesting results have been obtained for pursuit-evasion in a graph, in which the pursuers and evader can move from vertex to vertex until eventually a pursuer and evader lie in the same vertex <ref> [14, 15, 16, 18] </ref>. One interesting result, which does not hold true for our problem, is that a graph can be searched monotonically (without clearing places 1 multiple times) [3, 11].
Reference: [15] <author> N. Megiddo, S. L. Hakimi, M. R. Garey, D. S. Johnson, and C. H. Papadimitriou. </author> <title> The complexity of searching a graph. </title> <journal> Journal of the ACM, </journal> <volume> 35(1) </volume> <pages> 18-44, </pages> <month> January </month> <year> 1988. </year>
Reference-contexts: In graph theory, the several interesting results have been obtained for pursuit-evasion in a graph, in which the pursuers and evader can move from vertex to vertex until eventually a pursuer and evader lie in the same vertex <ref> [14, 15, 16, 18] </ref>. One interesting result, which does not hold true for our problem, is that a graph can be searched monotonically (without clearing places 1 multiple times) [3, 11].
Reference: [16] <author> B. Monien and I. H. Sudborough. </author> <title> Min cut is NP-complete for edge weighted graphs. </title> <journal> Theoretical Computer Science, </journal> <volume> 58 </volume> <pages> 209-229, </pages> <year> 1988. </year>
Reference-contexts: In graph theory, the several interesting results have been obtained for pursuit-evasion in a graph, in which the pursuers and evader can move from vertex to vertex until eventually a pursuer and evader lie in the same vertex <ref> [14, 15, 16, 18] </ref>. One interesting result, which does not hold true for our problem, is that a graph can be searched monotonically (without clearing places 1 multiple times) [3, 11].
Reference: [17] <author> J. O'Rourke. </author> <title> Art Gallery Theorems and Algorithms. </title> <publisher> Oxford University Press, </publisher> <address> New York, NY, </address> <year> 1987. </year>
Reference-contexts: One interesting result, which does not hold true for our problem, is that a graph can be searched monotonically (without clearing places 1 multiple times) [3, 11]. Art gallery problems in computa-tional geometry <ref> [4, 17, 21] </ref> can be considered as a limiting case for our problem, in which the pursuers are not allowed to move. Several variations of pursuit-evasion in a polygonal environment have also been considered in [5, 22]. Plenty of applications exist that could benefit from visibility-based pursuit-evasion strategies.
Reference: [18] <author> T. D. Parsons. </author> <title> Pursuit-evasion in a graph. </title> <editor> In Y. Alani and D. R. Lick, editors, </editor> <booktitle> Theory and Applcation of Graphs, </booktitle> <pages> pages 426-441. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1976. </year>
Reference-contexts: In graph theory, the several interesting results have been obtained for pursuit-evasion in a graph, in which the pursuers and evader can move from vertex to vertex until eventually a pursuer and evader lie in the same vertex <ref> [14, 15, 16, 18] </ref>. One interesting result, which does not hold true for our problem, is that a graph can be searched monotonically (without clearing places 1 multiple times) [3, 11]. <p> In other words, guaranteeing that one evader will be found is the same as guaranteeing that for n evaders, they will all be found. Note that the set of points not visible, R n V (x), is a finite collection of disjoint subsets of R. In the spirit of <ref> [18] </ref>, any such subset of R that might contain the evader is referred to as a contaminated region. If it is guaranteed not to contain the evader, then it is referred to as cleared.
Reference: [19] <author> S. Petitjean, D. Kriegman, and J. Ponce. </author> <title> Computing exact aspect graphs of curved objects: algebraic surfaces. </title> <journal> Int. J. Comput. Vis., </journal> <volume> 9 </volume> <pages> 231-255, </pages> <month> Dec </month> <year> 1992. </year>
Reference-contexts: From this adjacency, a finite graph, G, can be derived (i.e., the dual) in which the vertices represent cells and the edges represent adjacencies between cells. The resulting cell decomposition is similar to a visibility complex in computational geometry [20] and an aspect graph in computer vision <ref> [19] </ref>. The graph G corresponds to a finite collection of conservative cells in R, but what is needed is a finite collection of cells in the information space I. A directed information graph, G I , can be derived from G.
Reference: [20] <author> M. Pocchiola and G. Vegter. </author> <title> The visibility complex. </title> <journal> Int. J. Comput. Geom. & Appl., </journal> <volume> 6(3) </volume> <pages> 279-308, </pages> <year> 1996. </year>
Reference-contexts: Two cells are adjacent if they share a one-dimensional boundary. From this adjacency, a finite graph, G, can be derived (i.e., the dual) in which the vertices represent cells and the edges represent adjacencies between cells. The resulting cell decomposition is similar to a visibility complex in computational geometry <ref> [20] </ref> and an aspect graph in computer vision [19]. The graph G corresponds to a finite collection of conservative cells in R, but what is needed is a finite collection of cells in the information space I. A directed information graph, G I , can be derived from G.
Reference: [21] <author> T. Shermer. </author> <title> Recent results in art galleries. </title> <journal> Proc. IEEE, </journal> <volume> 80(9) </volume> <pages> 1384-1399, </pages> <month> September </month> <year> 1992. </year>
Reference-contexts: One interesting result, which does not hold true for our problem, is that a graph can be searched monotonically (without clearing places 1 multiple times) [3, 11]. Art gallery problems in computa-tional geometry <ref> [4, 17, 21] </ref> can be considered as a limiting case for our problem, in which the pursuers are not allowed to move. Several variations of pursuit-evasion in a polygonal environment have also been considered in [5, 22]. Plenty of applications exist that could benefit from visibility-based pursuit-evasion strategies.
Reference: [22] <author> I. Suzuki and M. Yamashita. </author> <title> Searching for a mobile intruder in a polygonal region. </title> <journal> SIAM J. Computing, </journal> <volume> 21(5) </volume> <pages> 863-888, </pages> <month> October </month> <year> 1992. </year> <month> 6 </month>
Reference-contexts: Art gallery problems in computa-tional geometry [4, 17, 21] can be considered as a limiting case for our problem, in which the pursuers are not allowed to move. Several variations of pursuit-evasion in a polygonal environment have also been considered in <ref> [5, 22] </ref>. Plenty of applications exist that could benefit from visibility-based pursuit-evasion strategies. They can be embedded in surveillance systems that use mobile robotics with various types of sensors (motion, thermal, cameras, etc.).
References-found: 22

