URL: http://ebbets.poly.edu/hstein/pubs/matroid.ps
Refering-URL: http://ebbets.poly.edu/hstein/journal.html
Root-URL: 
Title: Independence and Port Oracles for Matroids, with an Application to Computational Learning Theory  
Author: Collette R. Coullard Lisa Hellerstein 
Address: Evanston, IL 60208  
Affiliation: Department of Industrial Engineering and Management Sciences Northwestern University  Department of Electrical Engineering and Computer Science Northwestern University  
Abstract: Evanston, IL 60208 To appear in Combinatorica. A preliminary version of this paper appeared in Proceedings of the Fifth Annual ACM-SIAM Symposium on Discrete Algorithms (SODA), 1994. Abstract Given a matroid M with distinguished element e, a port oracle with respect to e reports whether or not a given subset contains a circuit that contains e. The first main result of this paper is an algorithm for computing an e-based ear decomposition (that is, an ear decomposition every circuit of which contains element e) of a matroid using only a polynomial number of elementary operations and port oracle calls. In the case that M is binary, the incidence vectors of the circuits in the ear decomposition form a matrix representation for M . Thus, this algorithm solves a problem in computational learning theory; it learns the class of binary matroid port (BMP) functions with membership queries in polynomial time. In this context, the algorithm generalizes results of Angluin, Hellerstein, and Karpinski [1], and Raghavan and Schach [17], who showed that certain subclasses of the BMP functions are learnable in polynomial time using membership queries. The second main result of this paper is an algorithm for testing independence of a given input set of the matroid M. This algorithm, which uses the ear decomposition algorithm as a subroutine, uses only a polynomial number of elementary operations and port oracle calls. The algorithm proves a constructive version of an early theorem of Lehman [13], which states that the port of a connected matroid uniquely determines the matroid.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Angluin, L. Hellerstein, and M. Karpinski, </author> <title> Learning read-once formulas with queries. </title> <editor> J. </editor> <booktitle> of the Association for Computing Machinery 40 (1993) 185-210. </booktitle> <pages> 14 </pages>
Reference-contexts: The algorithm generalizes results of Angluin, Hellerstein, and Karpinski <ref> [1] </ref>, and Raghavan and Schach [17], who showed that certain subclasses of the BMP functions are learnable in polynomial time using membership queries. <p> There are few classes of boolean functions known to be learnable in polynomial time with membership queries. Angluin, Hellerstein, and Karpinski gave a polynomial time membership query algorithm for learning the class of read-once formulas over the basis (AND, OR) <ref> [1] </ref>. A boolean formula over (AND,OR) is a rooted tree whose internal nodes are each labeled AND or OR, and whose leaves are labeled with variables. It computes a boolean function in the natural way, from leaves to root. <p> A formula is read-once if no variable appears at more than one leaf. Read-once formulas are an example of a class of formulas learnable in polynomial time with membership queries, but not in Valiant's PAC learning model <ref> [1] </ref> (unless RP = NP). Raghavan and Schach subsequently showed that a generalization of read-once (AND,OR) formulas, the class of switch configurations, is also learnable in polynomial time with membership queries [17]. <p> The circuits in C are the edge sets of the simple cycles in the graph. 4 Computational model and running times In determining the running time of our algorithms, we use the model of Angluin, Hellerstein, and Karpinski <ref> [1] </ref>. This model is essentially a unit-cost random access machine modified to handle queries. Queries are given as bit strings placed in consecutive registers of the machine, one bit per register.
Reference: [2] <author> N. Bshouty, T. Hancock, L. Hellerstein, and M. Karpinski, </author> <title> An algorithm to learn read-once threshold formulas, and transformations between learning models. </title> <note> Computational Complexity 4 (1994) 37-61. </note>
Reference-contexts: We note that there are classes of boolean functions other than BMP functions that are learnable in polynomial time with membership queries. An example is the class of read-once formulas over the basis of boolean threshold gates <ref> [2] </ref>. It is possible to show that the consistency problem for BMP functions is NP-complete. Therefore, BMP functions cannot be learned in polynomial time in Valiant's PAC learning model unless RP = NP [16]. <p> The first algorithm in this paper constructs an e-based ear decomposition using a port oracle. The statement "A B" means A is a proper subset of B. A matroid M = (E; C) is binary if there exists a vector space V over GF <ref> [2] </ref> that satisfies the following properties: 1. The vectors of V are binary, of length jEj, and are indexed by the elements of E. 2. For ~v 2 V, let supp (~v) = fe 2 Ej~v [e] = 1g. <p> Form a binary matrix whose rows span the space orthogonal to the circuit space. Determining whether a set A contains a circuit containing e is equivalent to determining whether some subset of the columns indexed by the elements of A is minimally linearly dependent (over GF <ref> [2] </ref>), and includes the column indexed by e. This latter problem can be solved by standard linear algebraic techniques. This justifies our earlier claim that, when used to learn BMP function, our ear decomposition algorithm outputs a polynomially evaluatable hypothesis. <p> This is not the case for arbitrary connected matroids, or even for arbitrary connected ternary matroids. In this paper we have considered the problem of learning the port functions of binary matroids, but not of matroids representable over fields other than GF <ref> [2] </ref>. However, we have shown that an independence oracle for an arbitrary connected matroid can be simulated in polynomial time by a port oracle.
Reference: [3] <author> R. E. Bixby, </author> <title> Matroids and operations research. in: Advanced Techniques in the Practice of Operations Research, </title> <editor> (H. J. Greenberg, F. H. Murphy, and S. H. Shaw, eds.), </editor> <publisher> North-Holland Publishers (1980) 333-459. </publisher>
Reference-contexts: This representation, like the graphic representation, is polynomially evaluatable. That is, given an input to the associated BMP function, the output of the function can be computed from the representation in polynomial time. If the BMP function is, in fact, a switch configuration, then existing graph realization techniques <ref> [4, 3, 5, 24] </ref> can be used to convert the basis representation into a graph representation in polynomial time. We note that there are classes of boolean functions other than BMP functions that are learnable in polynomial time with membership queries. <p> Kahn [10] proved a unique-representability result for matroids over the field GF [4] and Oxley et al [15] established the extent to which representability over GF [5] is unique. For these fields, the definition of uniqueness is more complicated than for GF <ref> [3] </ref>, involving field automorphisms, and requiring 3-connectivity. The open question here is whether there exists a polynomial algorithm for constructing a representation matrix over GF [4] for a 3-connected quaternary matroid, where the matroid is given via an independence oracle.
Reference: [4] <author> R. E. Bixby and W. H. Cunningham, </author> <title> Converting linear programs to network problems, </title> <note> Mathematics of Operations Research 5 (1980) 321-357. </note>
Reference-contexts: This representation, like the graphic representation, is polynomially evaluatable. That is, given an input to the associated BMP function, the output of the function can be computed from the representation in polynomial time. If the BMP function is, in fact, a switch configuration, then existing graph realization techniques <ref> [4, 3, 5, 24] </ref> can be used to convert the basis representation into a graph representation in polynomial time. We note that there are classes of boolean functions other than BMP functions that are learnable in polynomial time with membership queries. <p> That the above algorithm works is really equivalent to the unique representability of connected ternary matroids, which was first proved by Brylawski and Lucas [6]. Kahn [10] proved a unique-representability result for matroids over the field GF <ref> [4] </ref> and Oxley et al [15] established the extent to which representability over GF [5] is unique. For these fields, the definition of uniqueness is more complicated than for GF [3], involving field automorphisms, and requiring 3-connectivity. <p> For these fields, the definition of uniqueness is more complicated than for GF [3], involving field automorphisms, and requiring 3-connectivity. The open question here is whether there exists a polynomial algorithm for constructing a representation matrix over GF <ref> [4] </ref> for a 3-connected quaternary matroid, where the matroid is given via an independence oracle. The analogous question for GF [5] representable matroids is also open.
Reference: [5] <author> R.E. Bixby and D.K. Wagner, </author> <title> An almost linear time algorithm for graph realization. </title> <note> Mathematics of Operations Research 13 (1988) 99-123. </note>
Reference-contexts: This representation, like the graphic representation, is polynomially evaluatable. That is, given an input to the associated BMP function, the output of the function can be computed from the representation in polynomial time. If the BMP function is, in fact, a switch configuration, then existing graph realization techniques <ref> [4, 3, 5, 24] </ref> can be used to convert the basis representation into a graph representation in polynomial time. We note that there are classes of boolean functions other than BMP functions that are learnable in polynomial time with membership queries. <p> Kahn [10] proved a unique-representability result for matroids over the field GF [4] and Oxley et al [15] established the extent to which representability over GF <ref> [5] </ref> is unique. For these fields, the definition of uniqueness is more complicated than for GF [3], involving field automorphisms, and requiring 3-connectivity. <p> The open question here is whether there exists a polynomial algorithm for constructing a representation matrix over GF [4] for a 3-connected quaternary matroid, where the matroid is given via an independence oracle. The analogous question for GF <ref> [5] </ref> representable matroids is also open. Turning to general matroids, it is known that there are a doubly exponential number of matroids on a set of n elements [14], and it easily follows that there also are a doubly exponential number of connected matroids on n elements.
Reference: [6] <author> T.H. Brylawski and D. Lucas, </author> <title> Uniquely representable combinatorial geometries. </title> <booktitle> Teorie Combinatorie (Proc. 1973 Internat. Colloq.) </booktitle> <pages> pp. 83-104, </pages> <address> Accademia nazionale dei Lincei, Rome, </address> <year> (1976). </year>
Reference-contexts: That the above algorithm works is really equivalent to the unique representability of connected ternary matroids, which was first proved by Brylawski and Lucas <ref> [6] </ref>. Kahn [10] proved a unique-representability result for matroids over the field GF [4] and Oxley et al [15] established the extent to which representability over GF [5] is unique. For these fields, the definition of uniqueness is more complicated than for GF [3], involving field automorphisms, and requiring 3-connectivity.
Reference: [7] <author> D. Hausmann and B. </author> <title> Korte, The relative strength of oracles for independence systems. in: Special Topics of Applied Mathematics, </title> <editor> (J. Frehse, D. Pallaschke, and U Trottenberg, eds.), </editor> <publisher> North-Holland Publishers (1980) 195-211. </publisher>
Reference-contexts: It is well known that other matroid oracles, such as basis, circuit, and rank oracles are polynomially equivalent to independence oracles. The question of oracle equivalence for general independence systems (not just matroids) has been studied by Hausmann and Korte <ref> [7] </ref>. Our algorithm proves a constructive version of an early theorem of Lehman [13], which states that the port of a connected matroid uniquely determines the matroid.
Reference: [8] <author> L. Hellerstein and C. Coullard, </author> <title> Learning binary matroid ports. </title> <booktitle> Proceedings of the 5th Annual SIAM Symposium on Discrete Algorithms (1994) 328-335. </booktitle>
Reference-contexts: The algorithm also has an application in the field of computational learning theory; it learns the class of binary matroid port functions with membership queries in polynomial time. (This learning theory application was described in a preliminary version of this paper <ref> [8] </ref>). The algorithm generalizes results of Angluin, Hellerstein, and Karpinski [1], and Raghavan and Schach [17], who showed that certain subclasses of the BMP functions are learnable in polynomial time using membership queries.
Reference: [9] <author> P. M. Jensen and B. </author> <title> Korte. Complexity of matroid property algorithms. </title> <note> SIAM Journal of Computation 11 (1) (1982) 184-190. </note>
Reference: [10] <author> J. Kahn, </author> <title> On the uniqueness of matroid representations over GF(4). </title> <journal> Bull. London Math Soc. </journal> <month> 20 </month> <year> (1988) </year> <month> 5-10. </month>
Reference-contexts: That the above algorithm works is really equivalent to the unique representability of connected ternary matroids, which was first proved by Brylawski and Lucas [6]. Kahn <ref> [10] </ref> proved a unique-representability result for matroids over the field GF [4] and Oxley et al [15] established the extent to which representability over GF [5] is unique. For these fields, the definition of uniqueness is more complicated than for GF [3], involving field automorphisms, and requiring 3-connectivity.
Reference: [11] <author> M. Kearns, M. Li, L. Pitt, and L. Valiant, </author> <title> On the learnability of boolean formulae. </title> <booktitle> Proc. 19th ACM Symposium on Theory of Computing (1987) 285-295. </booktitle>
Reference-contexts: Therefore, BMP functions cannot be learned in polynomial time in Valiant's PAC learning model unless RP = NP [16]. Because read-once formulas represent a subclass of the BMP functions, it follows immediately from the results in <ref> [11, 12] </ref> that, unless certain cryptographic schemes can be broken in polynomial time, BMP functions also cannot be learned in polynomial time in the more general PAC prediction model. 3 Matroid definitions We give some definitions concerning matroids. For a thorough introduction, we suggest [14] or [25].
Reference: [12] <author> M. Kearns and L. Valiant, </author> <title> Cryptographic limitations on learning boolean formulae and finite automata. </title> <booktitle> Proc. 21st ACM Symposium on Theory of Computing (1989) 433-444. </booktitle>
Reference-contexts: Therefore, BMP functions cannot be learned in polynomial time in Valiant's PAC learning model unless RP = NP [16]. Because read-once formulas represent a subclass of the BMP functions, it follows immediately from the results in <ref> [11, 12] </ref> that, unless certain cryptographic schemes can be broken in polynomial time, BMP functions also cannot be learned in polynomial time in the more general PAC prediction model. 3 Matroid definitions We give some definitions concerning matroids. For a thorough introduction, we suggest [14] or [25].
Reference: [13] <author> A. Lehman, </author> <title> A solution of the Shannon switching game. </title> <journal> Journal of the Society of Industrial and Applied Mathematics 12:4 (1964) 687-725. </journal>
Reference-contexts: The question of oracle equivalence for general independence systems (not just matroids) has been studied by Hausmann and Korte [7]. Our algorithm proves a constructive version of an early theorem of Lehman <ref> [13] </ref>, which states that the port of a connected matroid uniquely determines the matroid. Before presenting our algorithms, we begin in Section 2 by discussing relevant previous work in computational learning theory, and describe the relation of our ear decomposition algorithm to that work. <p> Lehman gave a characterization of BMP functions in terms of minterms and maxterms <ref> [13] </ref>. A subset S V is a minterm of a monotone boolean function f : f0; 1g V ! f0; 1g if for all assignments a 2 f0; 1g V setting the variables in S to 1, f (a) = 1, and S is minimal with respect to this property.
Reference: [14] <author> J.G. Oxley, </author> <title> Matroid Theory. </title> <publisher> Oxford University Press, </publisher> <address> New York, </address> <year> (1992). </year>
Reference-contexts: For a thorough introduction, we suggest <ref> [14] </ref> or [25]. A matroid M is defined by giving its ground set E and its collection C of subsets of E called circuits. <p> It is a well-known property of matroids that if elements e and f are in some circuit of M and elements f and g are in some circuit of M , then e and g are in some circuit of M . (See Proposition 4.1.2 of <ref> [14] </ref>.) Therefore, the blocks E 1 ; E 2 ; : : :; E k of M form a partition of E. Moreover, each circuit of M is completely contained in one block. <p> One such algorithm is identical to a procedure for constructing a totally unimodular real representation of a given regular matroid (See, for example, <ref> [14] </ref>, Section 6.6, or [23], Corollary 9.2.7.), and proceeds as follows: First construct a fundamental circuit matrix for the matroid. The remaining effort involves "signing" the submatrix D, that is, determining the sign for each of the 1's. <p> The analogous question for GF [5] representable matroids is also open. Turning to general matroids, it is known that there are a doubly exponential number of matroids on a set of n elements <ref> [14] </ref>, and it easily follows that there also are a doubly exponential number of connected matroids on n elements. Therefore, any system for representing arbitrary matroids, or even arbitrary connected matroids, uses a number of bits exponential in n.
Reference: [15] <author> J.G. Oxley, D. Vertigan and G. Whittle, </author> <title> On inequivalent representations of matroids over finite fields. </title> <type> Technical Report, </type> <institution> Department of Mathematics, Louisiana State University, Baton Rouge, </institution> <address> LA 70803, </address> <year> (1994). </year>
Reference-contexts: That the above algorithm works is really equivalent to the unique representability of connected ternary matroids, which was first proved by Brylawski and Lucas [6]. Kahn [10] proved a unique-representability result for matroids over the field GF [4] and Oxley et al <ref> [15] </ref> established the extent to which representability over GF [5] is unique. For these fields, the definition of uniqueness is more complicated than for GF [3], involving field automorphisms, and requiring 3-connectivity.
Reference: [16] <author> L. Pitt and L. Valiant, </author> <title> Computational limitations on learning from examples. </title> <journal> J. </journal> <note> ACM 35 (1988) 965-984. </note>
Reference-contexts: An example is the class of read-once formulas over the basis of boolean threshold gates [2]. It is possible to show that the consistency problem for BMP functions is NP-complete. Therefore, BMP functions cannot be learned in polynomial time in Valiant's PAC learning model unless RP = NP <ref> [16] </ref>.
Reference: [17] <author> V. Raghavan and S. Schach, </author> <title> Learning switch configurations. </title> <booktitle> Proceedings of Third Annual Workshop on Computational Learning Theory, </booktitle> <publisher> Morgan Kaufmann Publishers (1990) 38-51. </publisher>
Reference-contexts: The algorithm generalizes results of Angluin, Hellerstein, and Karpinski [1], and Raghavan and Schach <ref> [17] </ref>, who showed that certain subclasses of the BMP functions are learnable in polynomial time using membership queries. We also present an algorithm that simulates an independence oracle for a connected matroid M using a port oracle for M with respect to a fixed element e. <p> Raghavan and Schach subsequently showed that a generalization of read-once (AND,OR) formulas, the class of switch configurations, is also learnable in polynomial time with membership queries <ref> [17] </ref>. A switch configuration is a monotone boolean function that is defined by a connected graph containing two distinguished vertices s and t.
Reference: [18] <author> V. Raghavan and D. Wilkins, </author> <title> Learning -branching programs with queries. </title> <booktitle> Proceedings of the Sixth Annual Workshop on Computational Learning Theory, </booktitle> <publisher> ACM Press (1993) 27-36. </publisher>
Reference-contexts: Some simple generalizations of this type are easily shown not to be learnable in polynomial time with membership queries alone. One generalization includes the class of read-once branching programs, for which a learning algorithm has been developed in the more powerful membership and equivalence query model <ref> [18] </ref>. 8 Acknowledgments We thank David Hartvigsen for suggesting the use of ear decompositions in this work, and Nader Bshouty and Andras Frank for useful discussions. We also thank Andras Sebo and the referees for their careful reading and very helpful suggestions.
Reference: [19] <author> P. D. Seymour, </author> <title> The forbidden minors of binary clutters. </title> <journal> J. London Math. Soc. </journal> <note> (2) 12 (1975) 356-360. </note>
Reference-contexts: Lehman proved that a BMP function is a monotone boolean function with the property that for every minterm S of the function, and for every maxterm T of the function, jS T Seymour gave a forbidden minor characterization of binary clutters <ref> [19] </ref>. A binary clutter is the set of all minterms of a BMP function. Our ear decomposition algorithm gives an algorithm for learning BMP functions in the membership query model of learning. The membership query model is one of the simplest models in computational learning theory.
Reference: [20] <author> P. D. Seymour, </author> <title> A note on the production of matroid minors. </title> <journal> J. of Combinatorial Theory (B) 22 (1977) 289-295. </journal>
Reference-contexts: Therefore a switch configuration satisfies the property that for each minterm S and each maxterm T , jS T There are classes of BMP functions other than switch configurations. Seymour gave a forbidden minor characterization of switch configurations and presented a few BMP functions that are not switch configurations <ref> [20] </ref>. For example, let G be a graph. Define a boolean function on the edges of G whose output is 1 on a given assignment iff the edges set to 1 contain an odd cycle of G. This is a BMP function, but is not, in general, a switch configuration.
Reference: [21] <author> P. D. Seymour, </author> <title> The matroids with the max-flow min-cut property. </title> <journal> J. of Combinatorial Theory (B) 23 (1977) 189-222. </journal>
Reference: [22] <author> P. D. Seymour, </author> <title> Recognizing graphic matroids. </title> <note> Combinatorica 1 (1981) 75-78. </note>
Reference-contexts: We have shown that, for connected matroids, any problem that can be solved in polynomial time given an independence oracle (such as testing for graphicness <ref> [22] </ref>) can be solved in polynomial time given a port oracle. The work in the first part of this paper represents the first use of matroid theory techniques in solving computational learning theory problems.
Reference: [23] <author> K. Truemper, </author> <title> Matroid Decomposition. </title> <publisher> Academic Press, </publisher> <address> San Diego, </address> <year> (1992). </year>
Reference-contexts: One such algorithm is identical to a procedure for constructing a totally unimodular real representation of a given regular matroid (See, for example, [14], Section 6.6, or <ref> [23] </ref>, Corollary 9.2.7.), and proceeds as follows: First construct a fundamental circuit matrix for the matroid. The remaining effort involves "signing" the submatrix D, that is, determining the sign for each of the 1's.
Reference: [24] <author> W. T. Tutte, </author> <title> An algorithm for determining whether a given binary matroid is graphic. </title> <journal> Proc. Amer. Math. Soc. </journal> <month> 11 </month> <year> (1960) </year> <month> 905-917. </month>
Reference-contexts: This representation, like the graphic representation, is polynomially evaluatable. That is, given an input to the associated BMP function, the output of the function can be computed from the representation in polynomial time. If the BMP function is, in fact, a switch configuration, then existing graph realization techniques <ref> [4, 3, 5, 24] </ref> can be used to convert the basis representation into a graph representation in polynomial time. We note that there are classes of boolean functions other than BMP functions that are learnable in polynomial time with membership queries.
Reference: [25] <author> D.J.A. Welsh, </author> <title> Matroid Theory. </title> <publisher> Academic Press, </publisher> <address> London, </address> <year> (1976). </year> <title> 16 associated electrical switches. </title> <type> 17 </type>
Reference-contexts: For a thorough introduction, we suggest [14] or <ref> [25] </ref>. A matroid M is defined by giving its ground set E and its collection C of subsets of E called circuits.
References-found: 25

