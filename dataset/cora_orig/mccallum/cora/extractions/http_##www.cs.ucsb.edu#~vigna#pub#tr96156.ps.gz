URL: http://www.cs.ucsb.edu/~vigna/pub/tr96156.ps.gz
Refering-URL: http://www.cs.ucsb.edu/~vigna/listpub.html
Root-URL: http://www.cs.ucsb.edu
Title: A Topological Characterization of TCP/IP Security  
Author: Giovanni Vigna 
Keyword: Security, TCP/IP protocols, formal model, topology.  
Address: Piazza Leonardo da Vinci, 32 20133 Milano, Italy  
Affiliation: Dipartimento di Elettronica e Informazione Politecnico di Milano  
Email: vigna@elet.polimi.it  
Phone: +39-2-2399-3638  
Date: December 19, 1996  
Abstract: The TCP/IP protocol suite has been designed to provide a simple, open communication infrastructure in an academic collaborative environment. Little attention has been paid to security issues. Therefore, the TCP/IP protocols are not able to provide the authentication, integrity, and privacy mechanisms to protect communication in a hostile environment. To solve the security problem, several secure higher-level protocols have been designed and implemented on top of TCP/IP, and ad hoc techniques have been developed to protect enterprise networks from TCP/IP-based attacks. Nonetheless, a formal approach to TCP/IP security is still lacking. This work presents a formal model of TCP/IP networks and describes some well-known attacks using the model. The formal topological characterization of TCP/IP security enables better understanding of the vulnerabilities and supports the design of tougher detection, protection and testing tools. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T. Shimomura amd J. Markoff. Takedown. Hyperion, </author> <year> 1996. </year>
Reference-contexts: For examples, as described in [16], 4.2 BSD Unix software increases the number used for new connections by 128 each second and by 64 after each new connection setup. Even if modern implementations use faster rates, the attack remains feasible as stated in [2]. A recent break-in <ref> [1] </ref> was based on this technique.
Reference: [2] <author> Steven M. Bellovin. </author> <title> Security Problems in the TCP/IP Protocol Suite. </title> <journal> Computer Communications Review, </journal> <volume> 19(2), </volume> <year> 1990. </year>
Reference-contexts: 1 Introduction Security has become a major concern in the ever-growing Internet. Break-ins are becoming more wide-spread and more sophisticated [4]. Some of these attacks exploit well-known flaws in the TCP/IP protocol suite <ref> [16, 2] </ref>. In facts, the TCP/IP protocol suite was designed years ago to provide a simple, efficient, open communication infrastructure in a collaborative and friendly environment. 1 Little attention has been paid to security issues. <p> The TELNET protocol [22] provides a remote session service. 2.5 Security issues The TCP/IP protocol suite has been designed for a friendly environment. It does not provide any strong mean to assure authenticity, integrity, and privacy of the exchanged data. As Steven Bellovin extensively describes in <ref> [2] </ref>, the TCP/IP protocol suite has a series of flaws that derive from the use of the source IP address as the basis of authentication and from the lack of any kind of payload encryption. <p> This attack has been discussed in <ref> [2, 16] </ref>. In order to successfully impersonate host H j , H i must be able to: 1. avoid that any segment from H k reaches the spoofed host H j ; 2. determine the first sequence number produced by the attacked host H k . <p> Some implementations have chosen slower rates. For examples, as described in [16], 4.2 BSD Unix software increases the number used for new connections by 128 each second and by 64 after each new connection setup. Even if modern implementations use faster rates, the attack remains feasible as stated in <ref> [2] </ref>. A recent break-in [1] was based on this technique.
Reference: [3] <author> C. Berge. </author> <title> Hypergraphs. </title> <publisher> North-Holland, </publisher> <year> 1989. </year>
Reference-contexts: His paper describes how these vulnerabilities happily combine with the easy tampering of normal routing procedures. Some of the attacks described there will be analyzed in the rest of this work. 3 A network model A network is a hypergraph <ref> [3] </ref> N on the set of interfaces I = fi 1 ; i 2 ; : : : ; i n g, i.e., is a family N = (E 1 ; E 2 ; : : : ; E m ) where each E i is a subset of I called
Reference: [4] <author> CERT. CERT Advisories. </author> <note> Available via anonymous ftp at ftp.cert.org. </note>
Reference-contexts: 1 Introduction Security has become a major concern in the ever-growing Internet. Break-ins are becoming more wide-spread and more sophisticated <ref> [4] </ref>. Some of these attacks exploit well-known flaws in the TCP/IP protocol suite [16, 2]. In facts, the TCP/IP protocol suite was designed years ago to provide a simple, efficient, open communication infrastructure in a collaborative and friendly environment. 1 Little attention has been paid to security issues.
Reference: [5] <institution> Computer Emergency Response Team (CERT). IP Spoofing Attacks and Hijacked Terminal Connections. CA-95:01, </institution> <month> January </month> <year> 1995. </year>
Reference-contexts: host H 9 along route hL 4 ; H 7 ; L 5 i, it is SS (d) = fH 5 ; H 6 ; H 7 ; H 8 g. 5 Spoofing When a host tries to impersonate another host in a communication, we are in presence of spoofing <ref> [5] </ref>. The spoofed host may have a privileged access to the attacked host or may be regarded as a source of sensitive information.
Reference: [6] <author> Brent Chapman and Elizabeth Zwicky. </author> <title> Building Internet Firewalls. </title> <publisher> O'Reilly & Associates, </publisher> <year> 1995. </year>
Reference-contexts: To provide secure communication services, several secure higher-level protocols (e.g., Kerberos [14]) have been designed and implemented on top of the TCP/IP stack. Nonetheless, the original (insecure) protocols are still widely used. In order to protect TCP/IP networks from attacks based on those protocols ad hoc techniques (e.g., firewalls <ref> [7, 6] </ref>) have been developed. Even if in the last few years a more systematic approach to the problem has been followed, a formal approach to TCP/IP security is still lacking. This work presents a formal model of TCP/IP networks and uses it to describe some well-known attacks.
Reference: [7] <author> W. R. Cheswick and S. M. Bellovin. </author> <title> Firewalls and Internet Security: </title> <publisher> Repelling the Wiley Hacker. Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: To provide secure communication services, several secure higher-level protocols (e.g., Kerberos [14]) have been designed and implemented on top of the TCP/IP stack. Nonetheless, the original (insecure) protocols are still widely used. In order to protect TCP/IP networks from attacks based on those protocols ad hoc techniques (e.g., firewalls <ref> [7, 6] </ref>) have been developed. Even if in the last few years a more systematic approach to the problem has been followed, a formal approach to TCP/IP security is still lacking. This work presents a formal model of TCP/IP networks and uses it to describe some well-known attacks.
Reference: [8] <author> Dan Farmer and Wietse Venema. SATAN Documentation, </author> <month> April </month> <year> 1995. </year> <month> 26 </month>
Reference-contexts: Nonetheless, an attacker may use injection in order to realize a "denial of service" attack, preventing any information exchange. 7.3 Testing and validation Most testing of network security tools <ref> [8, 12] </ref> use ad hoc techniques that are based neither on a formal model nor on information as network topology and trust. Instead, the proposed model can be used as a basis for the automatic generation of test cases for network security software (e.g., firewalls).
Reference: [9] <author> International Organization for Standardization. </author> <title> Information Processing Systems Open Systems Interconnection. International Standard, </title> <year> 1986. </year>
Reference-contexts: The header contains, among other fields, the source and destination IP addresses, the type of the 1 Here we will refer to an "internet" as a collection of TCP/IP networks and to the "Inter net" as the well-known global TCP/IP network. 2 We will refer to the ISO/OSI reference model <ref> [9] </ref>. 2 payload and possible options. Every host on an internet can communicate with every other host by sending an IP datagram containing the recipient IP address. The datagram is forwarded by a series of gateways until it reaches the intended destination.
Reference: [10] <author> David K. Hess, David R. Safford, and Udo W. Pooch. </author> <title> A Unix Network Protocol Security Study: Network Information Service. </title>
Reference-contexts: 1 p ); 1 ; : : : ; m 2 q i with dpl (m 2 2 )) si (m 2 1 ) 2 H i ; a j = addr (m 2 q ): An example of this attack applied to the Network Information System is given in <ref> [10] </ref>. Sun's NIS is used in a network of hosts in order to manage and 16 distribute system maps, like host names and user passwords.
Reference: [11] <author> L. Joncheray. </author> <title> A Simple Active Attack Against TCP. </title> <type> Technical report, </type> <institution> Merit Network Inc., </institution> <month> April </month> <year> 1995. </year>
Reference-contexts: Therefore it must be: H i 2 DS (s t ). 6.2.2 Take over In a take over attack a host H i gains complete control over an existing session between two hosts H j and H k . In this attack, extensively described in <ref> [11] </ref>, the attacker creates a desynchronized state in the TCP session. In a synchronized TCP session, when all data have been acknowledged, the client (say, H j ) sequence number is equal to the server (say, H k ) acknowledgment number and viceversa. <p> If the attacker knows the sequence numbers that the parties expect from each other it may filter all traffic by producing the right segments. In <ref> [11] </ref> two ways to create a desynchronized state are described. In the first case, the attacker resets the current session between H j and H k and immediately opens a new connection with H k .
Reference: [12] <author> Christopher Klaus. </author> <title> Internet security scanner, </title> <year> 1992. </year>
Reference-contexts: Nonetheless, an attacker may use injection in order to realize a "denial of service" attack, preventing any information exchange. 7.3 Testing and validation Most testing of network security tools <ref> [8, 12] </ref> use ad hoc techniques that are based neither on a formal model nor on information as network topology and trust. Instead, the proposed model can be used as a basis for the automatic generation of test cases for network security software (e.g., firewalls).
Reference: [13] <author> Sun Microsystems. NFS: </author> <title> Network File System Protocol specification. </title> <type> RFC 1094, </type> <year> 1989. </year>
Reference-contexts: UDP introduces the concept of port that allows to distinguish several datagram sources and destinations for a single host. UDP datagrams contains a source and destination port number and a payload. UDP is used mostly for request/reply services (e.g., NFS <ref> [13] </ref>). 2.3 TCP The Transmission Control Protocol [20] relies on IP to provide a reliable, best-effort, connection-oriented, full-duplex stream delivery service. The TCP protocol uses the port abstraction in order to distinguish among different virtual circuits between the same hosts. <p> A protocol that is vulnerable to this attack is the NFS protocol <ref> [13] </ref>. NFS servers accept requests to access the exported file systems only from a restricted set of addresses. An attacker may use spoofing in order to impersonate an authorized address and therefore gain access to the exported file system.
Reference: [14] <author> S. P. Miller, B. C. Neuman, J. I. Schiller, and J. H. Saltzer. </author> <title> Kerberos authentication and authorization system. </title> <type> Technical report, </type> <institution> Massachusetts Institute of Technology, </institution> <year> 1987. </year> <note> In section E.2.1 of Project Athena Technical Plan. </note>
Reference-contexts: Therefore, the TCP/IP pro-tocols are not able to provide the authentication, integrity, and privacy mechanisms to protect communication in the present potentially hostile environment. To provide secure communication services, several secure higher-level protocols (e.g., Kerberos <ref> [14] </ref>) have been designed and implemented on top of the TCP/IP stack. Nonetheless, the original (insecure) protocols are still widely used. In order to protect TCP/IP networks from attacks based on those protocols ad hoc techniques (e.g., firewalls [7, 6]) have been developed.
Reference: [15] <author> P. Mockapetris. </author> <title> Domain Name System. </title> <type> RFC 1034, </type> <month> November </month> <year> 1987. </year>
Reference-contexts: Examples are the DNS, SMTP, FTP, and TELNET protocols. The Domain Name System <ref> [15] </ref> is a distributed database that maps IP addresses to hosts symbolic names (e.g., mingus.jazz.org) and viceversa. The DNS protocol rules the interaction between DNS servers and the queries from DNS clients to DNS servers.
Reference: [16] <author> Robert T. Morris. </author> <title> A Weakness in the 4.2BSD UNIX TCP/IP Software. </title> <type> Technical report, </type> <institution> AT&T Bell Laboratories, </institution> <month> February </month> <year> 1985. </year>
Reference-contexts: 1 Introduction Security has become a major concern in the ever-growing Internet. Break-ins are becoming more wide-spread and more sophisticated [4]. Some of these attacks exploit well-known flaws in the TCP/IP protocol suite <ref> [16, 2] </ref>. In facts, the TCP/IP protocol suite was designed years ago to provide a simple, efficient, open communication infrastructure in a collaborative and friendly environment. 1 Little attention has been paid to security issues. <p> This attack has been discussed in <ref> [2, 16] </ref>. In order to successfully impersonate host H j , H i must be able to: 1. avoid that any segment from H k reaches the spoofed host H j ; 2. determine the first sequence number produced by the attacked host H k . <p> The TCP specification suggests that the number used to generate initial sequence numbers should be increased 250,000 times per second. Some implementations have chosen slower rates. For examples, as described in <ref> [16] </ref>, 4.2 BSD Unix software increases the number used for new connections by 128 each second and by 64 after each new connection setup. Even if modern implementations use faster rates, the attack remains feasible as stated in [2]. A recent break-in [1] was based on this technique. <p> ; p k ; seq 0 k + 1; fACKg; p 00 empty )): If segment s 3 reaches H j , it will start an acknowledgment storm between H j 7 From a theoretical point of view, this attack could be composed with the one described by Morris in <ref> [16] </ref> in order to be able to mount an attack from a host that it is not a listener of traffic between the attacked hosts, but it would be rather difficult to guess the correct sequence number in an established session over which random traffic may occur. 8 Actually the sequence
Reference: [17] <author> B. Mukherjee, L. T. Heberlein, and K. N. Levitt. </author> <title> Network Intrusion Detection. </title> <journal> IEEE Network, </journal> <pages> pages 26-41, </pages> <month> May/June </month> <year> 1994. </year>
Reference-contexts: In addition, the model can be used by solution vendors to validate and certify security protections towards stakeholders. 7.1 Detection Defining exactly which messages are produced during attacks and where they appear provides hints for network intrusion detection systems <ref> [17] </ref>.
Reference: [18] <author> J. Postel. </author> <title> User Datagram Protocol. </title> <type> RFC 768, </type> <month> August </month> <year> 1980. </year>
Reference-contexts: Gateways that receive the source routed datagram should not consider their routing tables and should deliver the datagram to the IP address corresponding to the next hop as indicated by the datagram option. 2.2 UDP The User Datagram Protocol <ref> [18] </ref> relies on IP to provide an unreliable, best-effort, connectionless datagram delivery service. UDP introduces the concept of port that allows to distinguish several datagram sources and destinations for a single host. UDP datagrams contains a source and destination port number and a payload.
Reference: [19] <author> J. Postel. </author> <title> Internet Protocol. </title> <type> RFC 792, </type> <year> 1981. </year>
Reference-contexts: Since the TCP/IP protocol suite does not feature any session and presentation layer protocols, application level protocols (e.g., Telnet or FTP) are based directly on TCP/UDP protocols. 2.1 Internet Protocol The IP protocol <ref> [19] </ref> provides an unreliable, best-effort, connectionless packet delivery service. Each possible source or destination of a message in the network (i.e., each network interface) has a unique IP address, composed of 32 bit (e.g., 131.175.2.21).
Reference: [20] <author> J. Postel. </author> <title> Transmission Control Protocol. </title> <type> RFC 793, </type> <month> September </month> <year> 1981. </year>
Reference-contexts: UDP introduces the concept of port that allows to distinguish several datagram sources and destinations for a single host. UDP datagrams contains a source and destination port number and a payload. UDP is used mostly for request/reply services (e.g., NFS [13]). 2.3 TCP The Transmission Control Protocol <ref> [20] </ref> relies on IP to provide a reliable, best-effort, connection-oriented, full-duplex stream delivery service. The TCP protocol uses the port abstraction in order to distinguish among different virtual circuits between the same hosts. <p> a host that it is not a listener of traffic between the attacked hosts, but it would be rather difficult to guess the correct sequence number in an established session over which random traffic may occur. 8 Actually the sequence number must be out of a window of acceptable values <ref> [20] </ref>, but we will assume that the session is sufficiently desynchronized. 18 and H k : s i = (a j ; a k ; (p j ; p k ; seq j ; seq k ; fACKg; p 00 empty )); s i+1 = (a k ; a j ;
Reference: [21] <author> J. Postel. </author> <title> Simple Mail Transfer Protocol. </title> <type> RFC 821, </type> <year> 1982. </year>
Reference-contexts: The Domain Name System [15] is a distributed database that maps IP addresses to hosts symbolic names (e.g., mingus.jazz.org) and viceversa. The DNS protocol rules the interaction between DNS servers and the queries from DNS clients to DNS servers. The Simple Mail Transfer Protocol <ref> [21] </ref> is the protocol used to exchange electronic mail messages between hosts in an internet. The File Transfer Protocol [23] is used to exchange files between hosts. The TELNET protocol [22] provides a remote session service. 2.5 Security issues The TCP/IP protocol suite has been designed for a friendly environment.
Reference: [22] <author> J. Postel and J. Reynolds. </author> <title> Telnet Protocol. </title> <type> RFC 854, </type> <month> May </month> <year> 1983. </year>
Reference-contexts: The Simple Mail Transfer Protocol [21] is the protocol used to exchange electronic mail messages between hosts in an internet. The File Transfer Protocol [23] is used to exchange files between hosts. The TELNET protocol <ref> [22] </ref> provides a remote session service. 2.5 Security issues The TCP/IP protocol suite has been designed for a friendly environment. It does not provide any strong mean to assure authenticity, integrity, and privacy of the exchanged data.
Reference: [23] <author> J. Postel and J. Reynolds. </author> <title> File Transfer Protocol. </title> <type> RFC 959, </type> <month> October </month> <year> 1985. </year>
Reference-contexts: The DNS protocol rules the interaction between DNS servers and the queries from DNS clients to DNS servers. The Simple Mail Transfer Protocol [21] is the protocol used to exchange electronic mail messages between hosts in an internet. The File Transfer Protocol <ref> [23] </ref> is used to exchange files between hosts. The TELNET protocol [22] provides a remote session service. 2.5 Security issues The TCP/IP protocol suite has been designed for a friendly environment. It does not provide any strong mean to assure authenticity, integrity, and privacy of the exchanged data.
Reference: [24] <author> Philip Zimmerman. </author> <title> PGP User's Guide, </title> <month> March </month> <year> 1993. </year> <month> 27 </month>
Reference-contexts: Such protection must be implemented at the application level (e.g., <ref> [24] </ref>), since the TCP/IP protocol suite does not provide any mechanisms to protect the transmitted data. Nonetheless, the model may provide useful information.
References-found: 24

