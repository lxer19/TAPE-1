URL: http://www.javasoft.com/security/compcon97.ps
Refering-URL: http://www.javasoft.com/security/index.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: gong@eng.sun.com  
Title: New Security Architectural Directions for Java (Extended Abstract)  
Author: Li Gong 
Web: http://java.sun.com/people/gong/  
Address: California  
Affiliation: JavaSoft, Cupertino,  
Date: February 1997  December 19, 1996  
Note: In Proceedings of IEEE COMPCON, San Jose, California,  
Abstract: This paper gives an overview of the technical direction of Java in terms of the security architecture and desirable features. It also highlights some of the feasibility constraints on the security solutions. This paper assumes that the reader has prior knowledge of Java basics and general security issues. This document is a purely technical discussion for the wider Java community, and does not necessarily commit JavaSoft to any particular features or implementations. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> L. Gong, T.M.A. Lomas, R.M. Needham, and J.H. Saltzer. </author> <title> Protecting Poorly Chosen Secrets from Guessing Attacks. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 11(5) </volume> <pages> 648-656, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: We have chosen to describe in some detail the design of the cryptographic library and the concept of protection domain [9, 3, 10], but have had no room to elaborate on other topics such as password-protected authentication protocols <ref> [1] </ref>, access control and delegation [5, 7, 4], and secure remote method invocation. We expect to report our design and implementation experiences in future papers. Acknowledgments Ideas from decades of research in computer security have influenced what are presented here.
Reference: [2] <author> J. Gosling, Bill Joy, and Guy Steele. </author> <title> The Java Language Specification. </title> <publisher> Addison-Wesley, </publisher> <address> Menlo Park, California, </address> <month> August </month> <year> 1996. </year>
Reference-contexts: 1 Introduction Since the inception of Java <ref> [2, 6] </ref>, there has been strong and growing interest around the security of Java as well as new security issues raised by the deployment of Java technology.
Reference: [3] <author> A.K. Jones. </author> <title> Protection in Programmed Systems. </title> <type> Ph.D. dissertation, </type> <institution> Carnegie-Mellon University, </institution> <address> Pittsburgh, PA 15213, </address> <month> June </month> <year> 1973. </year>
Reference-contexts: New rules can be considered in the future. 3 Summary In this paper we have outlined, at a fairly abstract level, the Java security architecture. We have chosen to describe in some detail the design of the cryptographic library and the concept of protection domain <ref> [9, 3, 10] </ref>, but have had no room to elaborate on other topics such as password-protected authentication protocols [1], access control and delegation [5, 7, 4], and secure remote method invocation. We expect to report our design and implementation experiences in future papers.
Reference: [4] <author> B. Lampson, M. Abadi, M. Burrows, and E. Wob-ber. </author> <title> Authentication in Distributed Systems: </title> <journal> Theory and Practice. ACM Transactions on Computer Systems, </journal> <volume> 10(4) </volume> <pages> 265-310, </pages> <month> November </month> <year> 1992. </year>
Reference-contexts: We have chosen to describe in some detail the design of the cryptographic library and the concept of protection domain [9, 3, 10], but have had no room to elaborate on other topics such as password-protected authentication protocols [1], access control and delegation <ref> [5, 7, 4] </ref>, and secure remote method invocation. We expect to report our design and implementation experiences in future papers. Acknowledgments Ideas from decades of research in computer security have influenced what are presented here.
Reference: [5] <author> B.W. Lampson. </author> <title> Protection. </title> <booktitle> In Proceedings of the 5th Princeton Symposium on Information Sciences and Systems, </booktitle> <address> Princeton University, </address> <month> March </month> <year> 1971. </year> <journal> Reprinted in ACM Operating Systems Review, </journal> <volume> 8(1) </volume> <pages> 18-24, </pages> <month> January, </month> <year> 1974. </year>
Reference-contexts: We have chosen to describe in some detail the design of the cryptographic library and the concept of protection domain [9, 3, 10], but have had no room to elaborate on other topics such as password-protected authentication protocols [1], access control and delegation <ref> [5, 7, 4] </ref>, and secure remote method invocation. We expect to report our design and implementation experiences in future papers. Acknowledgments Ideas from decades of research in computer security have influenced what are presented here.
Reference: [6] <author> T. Lindholm and F. Yellin. </author> <title> The Java Virtual Machine Specification. </title> <publisher> Addison-Wesley, </publisher> <address> Menlo Park, California, </address> <year> 1997. </year>
Reference-contexts: 1 Introduction Since the inception of Java <ref> [2, 6] </ref>, there has been strong and growing interest around the security of Java as well as new security issues raised by the deployment of Java technology.
Reference: [7] <author> J.H. Saltzer. </author> <title> Protection and the Control of Information Sharing in Multics. </title> <journal> Communications of the ACM, </journal> <volume> 17(7) </volume> <pages> 388-402, </pages> <month> July </month> <year> 1974. </year>
Reference-contexts: We have chosen to describe in some detail the design of the cryptographic library and the concept of protection domain [9, 3, 10], but have had no room to elaborate on other topics such as password-protected authentication protocols [1], access control and delegation <ref> [5, 7, 4] </ref>, and secure remote method invocation. We expect to report our design and implementation experiences in future papers. Acknowledgments Ideas from decades of research in computer security have influenced what are presented here.
Reference: [8] <author> J.H. Saltzer and M.D. Schroeder. </author> <title> The Protection of Information in Computer Systems. </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> 63(9) </volume> <pages> 1278-1308, </pages> <month> September </month> <year> 1975. </year>
Reference-contexts: COM.JavaSoft file read path COM.JavaSoft net connect remote_IP:port COM.JavaSoft awt maketoplevelwindow number We expect that this format will evolve in the near future and a full specification will be published for consultation. 2.4 Protection Domains A fundamental concept and important building block of system security is called protection domain <ref> [8] </ref>. A domain can be scoped by the set of objects that are currently directly accessible by a principle, where a principle is an entity in the computer system to which authorizations (and as a result, accountability) are granted.
Reference: [9] <author> M.D. Schroeder. </author> <title> Cooperation of Mutually Suspicious Subsystems in a Computer Utility. </title> <type> Ph.D. dissertation, </type> <institution> Massachusetts Institute of Technology, </institution> <address> Cambridge, MA 02139, </address> <month> September </month> <year> 1972. </year>
Reference-contexts: New rules can be considered in the future. 3 Summary In this paper we have outlined, at a fairly abstract level, the Java security architecture. We have chosen to describe in some detail the design of the cryptographic library and the concept of protection domain <ref> [9, 3, 10] </ref>, but have had no room to elaborate on other topics such as password-protected authentication protocols [1], access control and delegation [5, 7, 4], and secure remote method invocation. We expect to report our design and implementation experiences in future papers.
Reference: [10] <author> W.A. Wulf, R. Levin, and S.P. Harbison. </author> <title> HYDRA/C.mmp An Experimental Computer System. </title> <publisher> McGraw-Hill, </publisher> <year> 1981. </year> <month> 6 </month>
Reference-contexts: New rules can be considered in the future. 3 Summary In this paper we have outlined, at a fairly abstract level, the Java security architecture. We have chosen to describe in some detail the design of the cryptographic library and the concept of protection domain <ref> [9, 3, 10] </ref>, but have had no room to elaborate on other topics such as password-protected authentication protocols [1], access control and delegation [5, 7, 4], and secure remote method invocation. We expect to report our design and implementation experiences in future papers.
References-found: 10

