URL: http://www.cs.umd.edu/projects/active/papers/dissertations/madhura_thesis.ps
Refering-URL: http://www.cs.umd.edu/projects/active/papers/papers.html
Root-URL: 
Title: Time-Situated Reasoning within Tight Deadlines and Realistic Space and Computation Bounds  
Degree: Madhura Nirkhe, Doctor of Philosophy, 1994 Dissertation directed by: Professor Joseph Ja' Ja', and Associate Professor Donald Perlis  
Affiliation: Department of Electrical Engineering  
Note: Abstract Title of Dissertation:  
Abstract: We develop an effective representational and inferential framework for fully deadline-coupled planning and acting in hard, non-extensible, unforeseen deadline situations. While meta-planning is the usual proposal for reasoning about the reasoning process, few formalisms to date acknowledge that meta-planning takes time too. In traditional mechanisms, the planning effort is treated as a different kind of beast, not an action itself that takes time. A paradigmatic time-critical problem scenario was chosen: Nell, Dudley and the railroad tracks. Nell is tied to the railroad tracks and a train approaches. Dudley, the agent, must formulate a plan to save her and carry it out before the oncoming train reaches her. We design a time-situated inference mechanism based on an underlying framework of active logics. We demonstrate the generality of our formal methods by using them to tackle projection issues in some real-time versions of the canonical Yale Shooting Problem. In a realistic setting, an agent planning under time-pressure must also measure up to two other crucial resource limitations as well, namely, space and computation bounds. We introduce a limited short-term memory combined with a primitive relevance mechanism, and a limited-capacity inference engine. We propose heuristics to maximize an agent's chances of meeting a deadline in this enhanced framework. 
Abstract-found: 1
Intro-found: 1
Reference: [AC87] <author> P. E. Agre and D. Chapman. Pengi: </author> <title> An implementation of a theory of activity. </title> <booktitle> In Proceeding, AAAI-87, </booktitle> <pages> pages 268-272, </pages> <year> 1987. </year>
Reference-contexts: Some activities can be looked upon as reactive or reflex behaviors that require very little deliberation. Explicit execution-time reasoning is eliminated by compiling all the decisions about what to do in particular situations <ref> [AC87, Bro91, RK89] </ref>. Clearly, these have significant bearing on the survival and effective functioning of an agent in its environment, especially in a world where changes are rampant but regular. <p> Using them we demonstrated Dudley's time-situated handling of the three frame problems, namely projection, qualification and ramification. 62 Chapter 6 Time-situated Planning Recently there has been a surge of interest in systems capable of intelligent behavior in dynamic and unpredictable environments <ref> [AC87, Bro91, Kae88, HR90] </ref>. Resource limitations, including the treatment of time as a consumable resource has received attention in systems that perform real-time planning. In chapter 1 we examined some of the relevant literature in traditional AI planning, and discussed recent trends in the field. <p> This is the metareasoning challenge. Reactive systems eschew meta-level planning, and even planning. by considering all contingencies at design time. Typical of this group is the work of Brooks [Bro91, 74 Bro86]. Other efforts that obviate the need for explicit reasoning at execution time are <ref> [AC87] </ref> and [RK86] and [Kae87]. This is an interesting approach.
Reference: [AHT90] <editor> J. Allen, J. Hendler, and A. Tate. </editor> <booktitle> Readings in Planning. </booktitle> <publisher> Morgan Kauf-mann Publishers, Inc., </publisher> <year> 1990. </year>
Reference-contexts: More details and features of step-logics that guided our choice are described in Chapter 2. 1.1.6 The frame problem Inherently, the planning problem has been demonstrated to be computationally intractable [Cha87]. even in very simple domains, and under simplifying assumptions such as the static world assumption <ref> [AHT90] </ref>, which forbids simultaneous actions, or erratic random changes during the course of planning or execution. With the added constraints we have imposed on our problem characterization, we have an even more difficult problem at hand. We have selected a largely declarative logic-based framework for our purpose. <p> AI research in planning has progressed from static well-defined domains to dynamic, unpredictable domains, planning and acting are closely coupled and interleaved, and increasing efforts have been invested in designing agents who can reason about their own resource limitations in the course of their planning. <ref> [AHT90] </ref> offers a comprehensive overview of planning techniques and the recent shift of interest towards more dynamic, complex and situated domains. <p> Of interest to us are planning formalisms that incorporate (a) representation and reasoning about time, causality, and intentions (b) uncertainty of plan execution and (c) sensation and perception of the real-world. <ref> [AHT90] </ref> also gives a chronology of planning systems dating from 1960 thru 1990. They provide useful classification of planners based on how they handle goal ordering and interactions, abstraction, search, and on how they combine planning and execution. <p> Planning with conditional operators and iterators has been dealt with in NOAH [Sac75], SIPE [Wil83b] among others. There have been numerous efforts to improve planning by recognizing goal interactions and dependencies during the planning process, and better representations of actions and plans; we refer to <ref> [AHT90] </ref> for a collection of these. These researchers recognize the need to use features of the plan to reason about improving the plan. But this is not done by the planner itself.
Reference: [All84] <author> J. Allen. </author> <title> Towards a general theory of action and time. </title> <journal> Artificial Intelligence, </journal> <volume> 23 </volume> <pages> 123-154, </pages> <year> 1984. </year>
Reference-contexts: However, no existing works have provided a semantics that can address the issue of how the reasoning progresses vis a vis the passage of time. Although work in temporal logic involves reasoning about time (e.g., <ref> [All84, McD82, MS87] </ref>), time is not treated as a crucial resource that must be carefully rationed by the agent as it is being spent in every step of reasoning. <p> However, no existing works provide a semantics addressing the issue of how the reasoning progresses vis a vis the passage of time. Although work in temporal logic involves reasoning about time (e.g., <ref> [All84, McD82, MS87] </ref>), time is not treated as a crucial resource that must be carefully rationed by the agent, as it is spent in every step of reasoning. Step-logics [EDP90, PEDM] as a formal apparatus to model an agent's ongoing process of reasoning were described in Chapter 2.
Reference: [Ams91] <author> J. </author> <title> Amsterdam. Temporal reasoning and narrative conventions. </title> <booktitle> In Proc. of KR-91, </booktitle> <pages> pages 15-21, </pages> <year> 1991. </year>
Reference-contexts: Numerous solutions have been proposed to the temporal projection problem [Gel88, Geo87, Hau87, Kau86, Lif87b, Lif87a, Mor88, Pea88, Sho88, Bak89] to mention a few. They may be grouped into four categories: 1. chronological minimization [Sho88, Kau86] 2. causal minimization [Hau87, Lif87b] 3. model approach <ref> [MS88, Ams91, GS87] </ref> 4. time map approach [DM87] Our projection mechanism has commonalities with some of the chronological minimization approaches, notably those of Shoham [Sho88], Lifschitz [Lif87a], and Kautz [Kau86]. <p> The mechanism functions for the agent whether he/she is the one performing the actions, or observing them. We have compared our temporal projection approach with chronological minimization [Sho88, Kau86], causal minimization [Hau87, Lif87b], the model approach <ref> [MS88, Ams91] </ref>. and the time map approach [DM87] in Chapter 4. Here, we compare our solution with two other recent works that address the YSP. Baker [Bak89] provides a solution to the YSP using situation calculus and circumscription, with an `Ab' predicate in which the result is varied. <p> We do not postpone changes until the last possible moment unless a potential cause for the change is known. 61 <ref> [Ams91] </ref> is the only other work other than ours that attempts to discuss the issue of who the reasoner is in a given scenario, which we have addressed at length. <p> This allows the agent to utilize the closure property - "if an action is not mentioned then it did not happen". However, here again, there is a meta-reasoner doing the inference. That theory's greatest limitation (and this is said in <ref> [Ams91] </ref>) is the rigidity of the above mentioned closure principle. There are scenarios where actions can be derived from propositions and hence do not have to be explicitly specified. In this chapter we developed various real-time versions of the Yale Shooting scenario.
Reference: [Ash88] <author> N. Asher. </author> <title> Reasoning about belief and knowledge with self-reference and time. </title> <booktitle> In Proceedings of the second conferennce on Theoretical Aspects of Reasoning About Knowledge, </booktitle> <pages> pages 61-81. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1988. </year>
Reference-contexts: There are a number of works that have considered logics of knowledge and time e.g. <ref> [Sat77, Leh84, KL88, LR86, Ash88] </ref>. Fagin and Halpern discuss the possibility of capturing bounded and situated reasoning by letting the awareness set vary over time.
Reference: [Bak89] <author> Andrew B. Baker. </author> <title> A simple solution to the Yale Shooting Problem. </title> <booktitle> In Proceedings, KR89, </booktitle> <pages> pages 11-20, </pages> <year> 1989. </year>
Reference-contexts: This is the problem of determining all the facts that will true during a future time period, given a partial description of the facts that are known. Numerous solutions have been proposed to the temporal projection problem <ref> [Gel88, Geo87, Hau87, Kau86, Lif87b, Lif87a, Mor88, Pea88, Sho88, Bak89] </ref> to mention a few. <p> We have compared our temporal projection approach with chronological minimization [Sho88, Kau86], causal minimization [Hau87, Lif87b], the model approach [MS88, Ams91]. and the time map approach [DM87] in Chapter 4. Here, we compare our solution with two other recent works that address the YSP. Baker <ref> [Bak89] </ref> provides a solution to the YSP using situation calculus and circumscription, with an `Ab' predicate in which the result is varied. It is necessary to add "existence" axioms for situations, but this is done elegantly in this framework. <p> Our approach can handle all the other problems mentioned here, although our detective scenario is closer to that in [MS88] and different from the murder mystery described. Our approach can also offer a treatment for all the ramification problems mentioned in <ref> [Bak89] </ref>. 3 The `stolen car' problem, is a problem with chronological minimization. Upon seeing his car stolen, the agent is forced to conclude that the car was stolen only at the last possible moment before it was found missing.
Reference: [BD94] <author> M. Boddy and T. Dean. </author> <title> Deliberation scheduling for problem solving in time-constrained environments. </title> <journal> Artificial Intelligence, </journal> <note> 1994. To appear. 147 </note>
Reference-contexts: Even when the two are intertwined, as in real-time, dynamic or reactive planning, the planning effort is treated as a different kind of beast, not an action itself. We propose a formalism that treats thinking and acting uniformly with respect to the resources they consume. 1 Dean and Boddy <ref> [BD94] </ref> define inferential actions as computational procedures that have no effect on the world external to the agent, but affect the internal state of the agent. Inferential actions may provide the basis for selecting a physical action. <p> Performance profiles graph the expected value of parameters returned by a given procedure as a function of time. Quoting from <ref> [BD94] </ref>: "knowing expected value is also in general insufficient; there is need for the complete probability distribution." This type of complex knowledge, sometimes represented by surfaces in three-space needs to be analyzed so that these techniques can yield significant incremental benefits due to deliberation. <p> This is an issue that has received extensive attention in works such as <ref> [Hor88, BD94] </ref>. Often this involves reasoning about the probability of success and a numerical measure of the utility of various actions. One can implement algorithms such as these in a time-situated active-logic framework. <p> Those in the last category put the time that is available in the best use. These approaches have been collectively characterized by terms such as flexible computation [HR91], deliberation scheduling <ref> [BD94] </ref>, and anytime algorithms [DB88, ZR92]. They spend the resources available to the agent in deciding whether to act, how to act, and when to act.
Reference: [BH91] <author> S. Shekhar B. Hamidzadeh. Dynora: </author> <title> A real-time planning algorithm to meet response-time constraints in dynamic environments. </title> <booktitle> In Proceedings, IEEE international Conf. on Tools for AI, </booktitle> <year> 1991. </year>
Reference-contexts: Real-time truth maintenance ensures that all the contexts are kept current. 6.0.1 Issues in real-time planning Real-time systems research from the AI perspective has regard for two major problems as described in <ref> [BH91] </ref>: 1. Response time constraints 63 2. Dynamic situations Response time constraints for a task pose a limitation on the total time (the time to plan and the time to execute) of a solution. <p> Dynamic situations are those where the world changes in the course of planning. Planning completely before the execution phase can lead to obsolete solutions. Typically, cycles of planning followed by execution are suggested as a solution to this problem <ref> [Kor90, BH91] </ref>. However, the time required to decide how much planning must be done before execution begins is not often taken into account. 6.0.2 Where the active-logic work fits in Our work overlaps with the above concerns in real-time planning. We explore two particular aspects: 1. Real-time embeddedness 2.
Reference: [Bro86] <author> Rodney Brooks. </author> <title> A robust layered control system for a mobile robot. </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> 2(1) </volume> <pages> 14-23, </pages> <year> 1986. </year>
Reference-contexts: Russell and Wefald [RW91] define a limited rational agent. SOAR [LNR87] is the most ambitious attempt to build an intelligent agent architecture. Kurt Konolige [Kon86a] argues that the property that marks a situated agent who reasons 6 Curiously, analogous findings are reported in <ref> [Bro86] </ref> regarding a totally non-declarative design methodology.
Reference: [Bro91] <author> R. Brooks. </author> <title> Intelligence without reason. </title> <booktitle> In Proceedings of IJCAI-91, Prepared for Computers and Thought, </booktitle> <year> 1991. </year>
Reference-contexts: Some activities can be looked upon as reactive or reflex behaviors that require very little deliberation. Explicit execution-time reasoning is eliminated by compiling all the decisions about what to do in particular situations <ref> [AC87, Bro91, RK89] </ref>. Clearly, these have significant bearing on the survival and effective functioning of an agent in its environment, especially in a world where changes are rampant but regular. <p> Recent radical research in AI has prompted the claim that reactive activity is the sole component of intelligent behavior, and can be engineered through a careful composition of very elementary, ready-to-use behavioral units <ref> [Bro91] </ref>. <p> Using them we demonstrated Dudley's time-situated handling of the three frame problems, namely projection, qualification and ramification. 62 Chapter 6 Time-situated Planning Recently there has been a surge of interest in systems capable of intelligent behavior in dynamic and unpredictable environments <ref> [AC87, Bro91, Kae88, HR90] </ref>. Resource limitations, including the treatment of time as a consumable resource has received attention in systems that perform real-time planning. In chapter 1 we examined some of the relevant literature in traditional AI planning, and discussed recent trends in the field. <p> This introduces flexible systems, but along with it also introduces the possibility of infinite regress. This is the metareasoning challenge. Reactive systems eschew meta-level planning, and even planning. by considering all contingencies at design time. Typical of this group is the work of Brooks <ref> [Bro91, 74 Bro86] </ref>. Other efforts that obviate the need for explicit reasoning at execution time are [AC87] and [RK86] and [Kae87]. This is an interesting approach.
Reference: [Cha87] <author> David Chapman. </author> <title> Planning for conjunctive goals. </title> <journal> Artificial Intelligence, </journal> <volume> 32(3) </volume> <pages> 333-378, </pages> <year> 1987. </year>
Reference-contexts: More details and features of step-logics that guided our choice are described in Chapter 2. 1.1.6 The frame problem Inherently, the planning problem has been demonstrated to be computationally intractable <ref> [Cha87] </ref>. even in very simple domains, and under simplifying assumptions such as the static world assumption [AHT90], which forbids simultaneous actions, or erratic random changes during the course of planning or execution.
Reference: [Che80] <author> B. Chellas. </author> <title> Modal Logic: An Introduction. </title> <publisher> Cambridge University Press, </publisher> <year> 1980. </year>
Reference-contexts: This modal logic is based on Montague's intensional logic of belief [Mon70], that uses structures referred to in the literature as neighborhood structures or minimal structures <ref> [Che80] </ref>. They 1 SL 0 :none; SL 1 :S; SL 2 :T; SL 3 :R; SL 4 :S,R; SL 5 :S,T; SL 6 : R,T; and SL 7 :S,T,R. 2 However, this condition may be relaxed if for example, we desire to model an agent with default reasoning capability.
Reference: [CL90] <author> P. Cohen and H. Levesque. </author> <title> Intention is choice with commitment. </title> <journal> Artificial Intelligence, </journal> <volume> 42 </volume> <pages> 213-261, </pages> <year> 1990. </year>
Reference-contexts: Each theorem is marked uniquely by a time-stamp. The logic thus effectively represents what has been 1 This problem was first mentioned in the context of time-dependent reasoning by McDermott [McD78], and more recently discussed in <ref> [CL90] </ref>. 6 proven up to any given point in time, as opposed to traditional logics which focus only on a limiting (cumulative) theorem set.
Reference: [Dav88] <author> D. E. Davis. </author> <title> Inferring ignorance from the locality of visual perception. </title> <booktitle> In Proceedings, AAAI-88, </booktitle> <address> St. Paul, Minnesota, </address> <year> 1988. </year>
Reference-contexts: This in turn relates to existing work ([KP89], <ref> [Dav88] </ref>) on ignorance and perception. 9 This is also linked to the notion of plan commitment.
Reference: [DB88] <author> Thomas Dean and Mark Boddy. </author> <title> An analysis of time-dependent planning. </title> <booktitle> In Proceedings, AAAI-88, </booktitle> <pages> pages 49-54, </pages> <address> St. Paul, Minnesota, </address> <year> 1988. </year>
Reference-contexts: Typically, planning time and solution quality have a trade-off between them. This has been extensively studied in several works based on decision theory <ref> [Hor88, DB88, RW91] </ref>. They tackle the response time optimization problem, which is aimed at finding the best possible solution within the least amount of time. However, these works do not have the means to account for all the time spent in their reasoning, nor is it their main concern. <p> Those in the last category put the time that is available in the best use. These approaches have been collectively characterized by terms such as flexible computation [HR91], deliberation scheduling [BD94], and anytime algorithms <ref> [DB88, ZR92] </ref>. They spend the resources available to the agent in deciding whether to act, how to act, and when to act. <p> Below, we give a more detailed account of a few works in this deliberative category. 7.6.1 Anytime algorithms This now widely used term was first coined by Dean and Boddy <ref> [DB88] </ref>.
Reference: [DF89] <author> B. D'Ambrosio and M. Fehling. </author> <title> Resource bounded-agents in an uncertain world. </title> <booktitle> In Proceeding, AAAI symposium on limited rationality, </booktitle> <address> Stanford, California, </address> <year> 1989. </year>
Reference-contexts: Although the debate as to whether the completely reactive non-deliberative behavior can live up to its stronger claims still goes on, we and others <ref> [DF89, Doy82, PR90, IG90] </ref> believe that deliberation is often the crucial component that highlights intelligent behavior in non-trivial problem solving. 1.1.1 Foreseen and unforeseen situations We roughly characterize commonsense planning and acting problems into two categories. <p> This is an interesting approach. In the problems that we have dealt with in this dissertation, which fall in the "unforeseen" category, the fully reactive approach is often believed to lead to brittle and inflexible systems if no real-time deliberation is performed <ref> [DF89, Doy88, PR90, IG90] </ref>. 4 At middle of the deliberation spectrum, many researchers agree that some form of deliberation is necessary in planning.
Reference: [DFM88] <author> Thomas Dean, R. James Firby, and David Miller. </author> <title> Hierarchical planning involving deadlines, travel time and resources. </title> <journal> Computational Intelligence, </journal> <volume> 4 </volume> <pages> 381-389, </pages> <year> 1988. </year> <month> 148 </month>
Reference-contexts: Lastly we mention work in the direction of building systems and architectures that exhibit desirable real-time behaviors, although not all components of these systems function in the real-time domain: Guardian [HRWA + 92] Phoenix [HHC90] and PRS [IG90]. FORBIN <ref> [DFM88] </ref> which is a planning architecture that supports hierarchical planning involving reasoning about deadlines, travel time, and resources are some 91 examples of such systems. TILEWORLD [PR90] is a simulated dynamic and unpre-dictable parametrized agent and environment.
Reference: [DM87] <author> T. Dean and D. McDermott. </author> <title> Temporal data base management. </title> <journal> Artificial Intelligence, </journal> <volume> 32(1) </volume> <pages> 1-55, </pages> <year> 1987. </year>
Reference-contexts: In all the problems that we tackle though, we will treat observations and facts synonymously. 5 Projections (and persistences) have been studied by numerous authors; see e.g., [Wil83a, Kau86, McD87]. Our treatment is along the lines of time-maps of <ref> [DM87] </ref>. 31 is contradicted by later observations, or by theorems whose premises do not contain defaults, it must be disbelieved, and so must any formula that used it as a premise. 3.2.5 Working estimate of time and feasibility The belief WET (i; p; N ) denotes the working estimate of time <p> They may be grouped into four categories: 1. chronological minimization [Sho88, Kau86] 2. causal minimization [Hau87, Lif87b] 3. model approach [MS88, Ams91, GS87] 4. time map approach <ref> [DM87] </ref> Our projection mechanism has commonalities with some of the chronological minimization approaches, notably those of Shoham [Sho88], Lifschitz [Lif87a], and Kautz [Kau86]. In our approach as well as theirs, defaults are applied forward in time, so that earlier events play out their consequences for later ones. <p> There is no explicit notion of time in this approach and the reasoning done by an "outside" reasoner, hence the time of reasoning is not a concern. Dean and McDermott <ref> [DM87] </ref> present techniques for temporal database management. They allow two types of prediction in their system: projection and refinment. <p> We use ordered lists as a simpler data structure and in our framework time is associated with events and predicates, and not the other way around as in <ref> [DM87] </ref>; 11 however, the projection is done in a similar way. As in previous systems we compared with, Dean and McDermott describe their mechanism as "reasoning about time from the outside. <p> It has only the past and the present in front of it, and it takes the passage of time into its reasoning process. 11 Our projection mechanism is similar to that of <ref> [DM87] </ref>, but we distinguish the case where a change occurs but it is not clear when it occurs. <p> The mechanism functions for the agent whether he/she is the one performing the actions, or observing them. We have compared our temporal projection approach with chronological minimization [Sho88, Kau86], causal minimization [Hau87, Lif87b], the model approach [MS88, Ams91]. and the time map approach <ref> [DM87] </ref> in Chapter 4. Here, we compare our solution with two other recent works that address the YSP. Baker [Bak89] provides a solution to the YSP using situation calculus and circumscription, with an `Ab' predicate in which the result is varied.
Reference: [Doy82] <author> J. Doyle. </author> <title> Some theories of reasoned assumptions: An essay in rational psychology. </title> <type> Technical report, </type> <institution> Department of Computer Science, Carnegie Mellon University, </institution> <year> 1982. </year>
Reference-contexts: Although the debate as to whether the completely reactive non-deliberative behavior can live up to its stronger claims still goes on, we and others <ref> [DF89, Doy82, PR90, IG90] </ref> believe that deliberation is often the crucial component that highlights intelligent behavior in non-trivial problem solving. 1.1.1 Foreseen and unforeseen situations We roughly characterize commonsense planning and acting problems into two categories.
Reference: [Doy88] <author> J. Doyle. </author> <booktitle> Artificial intelligence and rational self-government. In TR CS-88-124, </booktitle> <address> CMU, Pittsburgh, </address> <year> 1988. </year>
Reference-contexts: This is an interesting approach. In the problems that we have dealt with in this dissertation, which fall in the "unforeseen" category, the fully reactive approach is often believed to lead to brittle and inflexible systems if no real-time deliberation is performed <ref> [DF89, Doy88, PR90, IG90] </ref>. 4 At middle of the deliberation spectrum, many researchers agree that some form of deliberation is necessary in planning.
Reference: [Ebe74] <author> R. A. Eberle. </author> <title> A logic of believing, knowing and inferring. </title> <journal> Synthese, </journal> <volume> 26 </volume> <pages> 356-382, </pages> <year> 1974. </year>
Reference-contexts: The agent in the classical model of knowledge [Hin62] has all the undesirable properties (a), (b) and (c) above. Several improvements have been suggested, and they have been broadly classified as "syntactic" and "semantic" approaches. In the syntactic approach e.g. <ref> [Ebe74, MH79] </ref>, what the agent knows is represented by a set of formulas and hence is not constrained under consequence. But such approaches are difficult to analyze, since they are not guided by knowledge-based principles.
Reference: [ED88a] <author> J. Elgot-Drapkin. Step-logic: </author> <title> Reasoning Situated in Time. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, University of Maryland, College Park, Maryland, </institution> <year> 1988. </year>
Reference-contexts: Although work in temporal logic involves reasoning about time (e.g., [All84, McD82, MS87]), time is not treated as a crucial resource that must be carefully rationed by the agent as it is being spent in every step of reasoning. In <ref> [ED88a] </ref>, a very limited first attempt was made at providing a semantics associated with step-logics by defining the notion of a step-model. Although active logics have since been characterized and implemented, no further attempts have been made to give a formal semantics for the step-like reasoning process. <p> Step-logics <ref> [ED88a, EDP90] </ref> were introduced to battle these two evils, in an effort to model a commonsense reasoner with limited reasoning capability. A step-logic is characterized by a language, observations and inference rules. A step is defined as a fundamental unit of inference time. <p> Each step of reasoning advances i by 1. At each new step i, the only information available to the 15 agent upon which to base his further reasoning is a snap-shot of his deduction process completed up to and including step i 1. Figure 2.1, adapted from <ref> [ED88a] </ref> illustrates three steps in a step-logic with Modus Ponens ( i:ff;ff!fi i+1:fi ) as one of its inference rules. An agent starts out with a finite (possibly empty) set of beliefs at time step 0. <p> on the physical capabilities of the agent as to how many physical actions can be done in parallel in the same time step, there must be a limit to the parallel capacity of the inference engine as well. 8.3 The step-logic meaning of a step and realism In Elgot-Drapkin's work <ref> [ED88a] </ref> the issue of space and computation bounds was recognized partially while defining a step.
Reference: [ED88b] <author> J. Elgot-Drapkin. Step-logic: </author> <title> Reasoning Situated in Time. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, University of Maryland, College Park, Maryland, </institution> <year> 1988. </year>
Reference-contexts: Early work in active logics began with the development of a theoretical tool called the step-logics. Step-logics <ref> [ED88b, EDP90, ED91] </ref> were introduced to model a com-monsense agent's ongoing process of reasoning in a changing world 1 . In the next section we briefly describe step-logics, their structure and intent.
Reference: [ED91] <author> J. Elgot-Drapkin. </author> <title> Step-logic and the three wise men problem. </title> <booktitle> In Proceeding, AAAI-91, </booktitle> <address> Anaheim, California, </address> <year> 1991. </year>
Reference-contexts: Early work in active logics began with the development of a theoretical tool called the step-logics. Step-logics <ref> [ED88b, EDP90, ED91] </ref> were introduced to model a com-monsense agent's ongoing process of reasoning in a changing world 1 . In the next section we briefly describe step-logics, their structure and intent.
Reference: [EDMP87] <author> J. Elgot-Drapkin, M. Miller, and D. Perlis. </author> <title> Life on a desert island: Ongoing work on real-time reasoning. </title> <editor> In F. M. Brown, editor, </editor> <booktitle> Proceedings of the 1987 Workshop on The Frame Problem, </booktitle> <pages> pages 349-357. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1987. </year> <institution> Lawrence, Kansas. </institution>
Reference-contexts: We suggest a solution that does not change the mapping between a step and real-time (absolute time) as the reasoning progresses. Instead we follow another suggestion made in <ref> [EDMP87] </ref> to keep the total number of beliefs in each step under check. We also propose a means of addressing the parallelism and granularity of the inference process. <p> We revisit the fully deadline-coupled planning problem in the light of this new framework. 8.4 A limited span of attention We propose a solution to the space problem partially based on <ref> [EDMP87] </ref> as follows. The agent's current focus of attention is limited to a small fixed number of beliefs forming the STM (short term memory), while the complete belief set is archived away in a bigger associative store, namely, the LTM (long term memory). <p> Only when they are still relevant to the current focus do they become candidates and must compete with other relevant formulae to fit into the limited size STM. The focus holds the keywords of current interest. It has similarities with the RTM proposed in <ref> [EDMP87] </ref>. We imagine that in a more general framework the focus would contain keywords arranged in a partial order according to priorities. 6 Beliefs related to high priority topics are given preference for being brought into the STM.
Reference: [EDP90] <author> J. Elgot-Drapkin and D. Perlis. </author> <title> Reasoning situated in time I: Basic concepts. </title> <journal> Journal of Experimental and Theoretical Artificial Intelligence, </journal> <volume> 2(1) </volume> <pages> 75-98, </pages> <year> 1990. </year>
Reference-contexts: He must reason in time about his own reasoning in time. 1.1.5 Active logics The platform that we have chosen for our work is called active logics. Active logics are generalizations of step-logics which were introduced by Elgot-Drapkin and Perlis <ref> [EDP90] </ref>. A step-logic is an inference mechanism situated in time which allows the modeling of the agent's reasoning process as it unfolds, one-step-at-a-time. <p> Early work in active logics began with the development of a theoretical tool called the step-logics. Step-logics <ref> [ED88b, EDP90, ED91] </ref> were introduced to model a com-monsense agent's ongoing process of reasoning in a changing world 1 . In the next section we briefly describe step-logics, their structure and intent. <p> Step-logics <ref> [ED88a, EDP90] </ref> were introduced to battle these two evils, in an effort to model a commonsense reasoner with limited reasoning capability. A step-logic is characterized by a language, observations and inference rules. A step is defined as a fundamental unit of inference time. <p> Although work in temporal logic involves reasoning about time (e.g., [All84, McD82, MS87]), time is not treated as a crucial resource that must be carefully rationed by the agent, as it is spent in every step of reasoning. Step-logics <ref> [EDP90, PEDM] </ref> as a formal apparatus to model an agent's ongoing process of reasoning were described in Chapter 2. We have thus far described an active logic based fully deadline-coupled planning and reasoning mechanism which is a combination of declarative and procedural approaches.
Reference: [Etz91] <author> Oren Etzioni. </author> <title> Embedding decision-analytic control in a learning archi-tecture. </title> <journal> Artificial Intelligence, </journal> <volume> 49 </volume> <pages> 129-159, </pages> <year> 1991. </year>
Reference-contexts: Lesser et al [LPD88] provide a design-to-time approach which combines existing multiple methods for various tasks to maximize the quality of the combined solution within the available time. In an approach that is inspired by economics, Etzioni <ref> [Etz91] </ref> addresses the problem for a time-constrained agent using special terms commonly used in economics. When a particular resource is available in limited quantity, it renders competing actions mutually exclusive. He defines an opportunity cost for each action, which is the maximum of the utilities of the other contending actions.
Reference: [FH88] <author> R. Fagin and J. Halpern. </author> <title> Belief, awareness, and limited reasoning. </title> <journal> Artificial Intelligence, </journal> <volume> 34(1) </volume> <pages> 39-76, </pages> <year> 1988. </year>
Reference-contexts: For most of these systems the goal is not so much to model human com-monsense behavior in real-time but to come up with an effective program that will perform certain tasks in the real-time domain. These approaches are largely proce 5 Konolige [Kon86a], Levesque [Lev84] and Fagin and Halpern <ref> [FH88] </ref> proposed systems in which the agents are not omniscient. However, the inference time is not explicitly captured in their systems. 21 dural. Implementation of procedural methods tends to be much more time efficient while the logic based inference engine often shows poor performance speeds. <p> In contrast, we are concerned with bounded rationality of a time-situated nature. In Chapter 9 we give detailed comparison of our work with other works ( <ref> [FH88, Lev84] </ref> etc.) that attempt to circumvent the logical omniscience problem. Most of these formal approaches are still constrained to a static model of reasoning. Step-logics have a place in this spectrum of research towards the design of rational agents that are constrained by various resource limitations. <p> In section 9.5 we examine how our approach addresses the logical omniscience problem and summarize our contribution. 9.1 The various aspects of omniscience and its treat ment Fagin and Halpern <ref> [FH88] </ref> have analyzed what is meant by the notion of logical omniscience. They define an agent to be logically omniscient if whenever he believes formulas in a set , and logically implies the formula , then the agent also believes . <p> However, we provide the distinction of incorporating time-situatedness. Vardi [Var86] provides a co-relation between restrictions on models in the Montague semantics and the corresponding agent properties that they characterize. Fagin and Halpern <ref> [FH88] </ref> have presented a series of interesting approaches to limited reasoning that marry the syntactic and semantic approaches. They provide an extension to Levesque's approach for the multi-agent case, and introduce a notion of awareness. <p> The agent also believes only those tautologies that are in G. Hence the scope of (b) and (c) is reduced in the modified structure. The agent's language G has similarities to the awareness set concept of <ref> [FH88] </ref>. If one considers multiagent belief operators B i without a time parameter then a modified version of Axiom (A2), and rule (R3) from figure 9.3 are true in the model of local reasoning of [FH88], (without modalities for implicit belief ). <p> The agent's language G has similarities to the awareness set concept of <ref> [FH88] </ref>. If one considers multiagent belief operators B i without a time parameter then a modified version of Axiom (A2), and rule (R3) from figure 9.3 are true in the model of local reasoning of [FH88], (without modalities for implicit belief ). Note, that we have only explicit beliefs, and there is no notion of implicit beliefs. In [FH88] the models are still static, in that even though they suggest incorporating reasoning about time, and changing awareness functions, there is no way to account for inference <p> i without a time parameter then a modified version of Axiom (A2), and rule (R3) from figure 9.3 are true in the model of local reasoning of <ref> [FH88] </ref>, (without modalities for implicit belief ). Note, that we have only explicit beliefs, and there is no notion of implicit beliefs. In [FH88] the models are still static, in that even though they suggest incorporating reasoning about time, and changing awareness functions, there is no way to account for inference time in their models. 123 Chapter 10 Conclusions and future directions We have designed a declarative planning framework based on active logics that
Reference: [FN71] <author> R. E. Fikes and N. J. Nilsson. </author> <title> Strips: A new approach to the application of theorem proving to problem solving. </title> <journal> Artificial Intelligence, </journal> <volume> 2 </volume> <pages> 189-208, </pages> <year> 1971. </year>
Reference-contexts: They provide useful classification of planners based on how they handle goal ordering and interactions, abstraction, search, and on how they combine planning and execution. To give a glimpse of the evolution of planning systems, we mention a few classical systems here: * STRIPS <ref> [FN71] </ref> was the earliest and the most influential planning system.
Reference: [Gel88] <author> Michael Gelfond. </author> <title> Autoepistemic logic and formalization of common-sense reasoning. </title> <booktitle> In Proceedings of the second international workshop on non-monotonic reasoning, 1988. </booktitle> <address> Munich 88. </address>
Reference-contexts: This is the problem of determining all the facts that will true during a future time period, given a partial description of the facts that are known. Numerous solutions have been proposed to the temporal projection problem <ref> [Gel88, Geo87, Hau87, Kau86, Lif87b, Lif87a, Mor88, Pea88, Sho88, Bak89] </ref> to mention a few.
Reference: [Geo87] <author> Michael P. Georgeff. </author> <title> Many agents are better than one. </title> <editor> In F. M. Brown, editor, </editor> <booktitle> Proceedings of the 1987 Workshop on The Frame Problem, pages 59-75x. </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1987. </year> <institution> Lawrence, Kansas. </institution>
Reference-contexts: This is the problem of determining all the facts that will true during a future time period, given a partial description of the facts that are known. Numerous solutions have been proposed to the temporal projection problem <ref> [Gel88, Geo87, Hau87, Kau86, Lif87b, Lif87a, Mor88, Pea88, Sho88, Bak89] </ref> to mention a few.
Reference: [Ger90] <author> M.T. Gervasio. </author> <title> Learning general completable reactive plans. </title> <booktitle> In Proceeding, AAAI-90, </booktitle> <pages> pages 1016-1021, </pages> <year> 1990. </year>
Reference-contexts: This observation (signaling condition) may or may not coincide with the goal. For example, dialing the telephone repeatedly until a connection is obtained, is a means for establishing contact with someone. Similarly, beating egg whites until stiff peaks appear <ref> [Ger90] </ref> is a means for beating eggs to the right consistency. An agent must incorporate repeated actions into plans in many day to day situations. The signaling condition is often known to the agent.
Reference: [GL88] <author> M. Georgeff and A. Lansky. </author> <title> Reactive reasoning and planning. </title> <booktitle> In Proceedings AAAI-88, </booktitle> <pages> pages 677-682, </pages> <year> 1988. </year>
Reference-contexts: The PRS system <ref> [GL88] </ref> uses metareasoning to recognize the need for additional planning. More recently [IG90] proposed a situated architecture for real-time reasoning. Based on PRS, it provides management representation of metareasoning strategies in the form of metalevel plans, and describes an interpreter that selects and executes them.
Reference: [GL94] <author> A. Garvey and V. Lesser. </author> <title> A survey of research in deliberative real-time ai. </title> <journal> Journal of Real Time Sytems, </journal> <volume> 6 </volume> <pages> 317-347, </pages> <year> 1994. </year>
Reference-contexts: In chapter 1 we examined some of the relevant literature in traditional AI planning, and discussed recent trends in the field. A comprehensive survey of research in deliberative real-time AI can be found in <ref> [GL94] </ref>. In this section we describe the extent of our contribution to AI planning. While our research tackles issues involving time and deadlines, it deals only modestly with optimality issues in planning. This chapter describes the details of the planning mechanism. <p> We showed how knowledge of action categories can help in estimating EET of the plan. We briefly discussed some issues in more elaborate meta-level decision making. An excellent survey of research in deliberative real-time AI is available in <ref> [GL94] </ref>.
Reference: [GS87] <author> M. L. Ginsberg and D. E. Smith. </author> <title> Reasoning about action I: A possible worlds approach. </title> <editor> In F. M. Brown, editor, </editor> <booktitle> Proceedings of the 1987 Workshop on The Frame Problem, </booktitle> <pages> pages 233-258, </pages> <publisher> Lawrence, </publisher> <address> KS, 1987. </address> <publisher> Morgan Kaufmann. </publisher> <pages> 150 </pages>
Reference-contexts: Numerous solutions have been proposed to the temporal projection problem [Gel88, Geo87, Hau87, Kau86, Lif87b, Lif87a, Mor88, Pea88, Sho88, Bak89] to mention a few. They may be grouped into four categories: 1. chronological minimization [Sho88, Kau86] 2. causal minimization [Hau87, Lif87b] 3. model approach <ref> [MS88, Ams91, GS87] </ref> 4. time map approach [DM87] Our projection mechanism has commonalities with some of the chronological minimization approaches, notably those of Shoham [Sho88], Lifschitz [Lif87a], and Kautz [Kau86]. <p> They select models using the criterion of "fewer unmotivated actions". However, there is no acting agent who can actually compute these models and check which one is preferred. Ginsberg and Smith <ref> [GS87] </ref> present an approach of reasoning about action and change using possible worlds. The approach involves keeping a single model of the world that is updated when actions are performed. <p> f loor) obs ; Drop (14 : 15; ball); In c (15; ball; bucket); W alk (15 : 18; dudley; bucket loc : nextroom); At c (18; dudley; nextroom)g) 2 with suitable knowledge about the domain, our mechanism will also allow us to deal with actions in the self-defeating category <ref> [GS87] </ref>.
Reference: [Ham89] <author> K. Hammond. </author> <title> Case-based planning: Viewing planning as a memory task. </title> <booktitle> Perspectives in AI, </booktitle> <volume> 1, </volume> <year> 1989. </year>
Reference-contexts: In these situations deliberation is essential in the formulation of a plan. Even in solutions that employ techniques such as CBR (case based reasoning) which rely on prior experiences, deliberation is required in the phases of retrieval, matching, and refitting of existing solutions to form a novel solution <ref> [Ham89] </ref>. In unforeseen situations, not all planning can be done a priori, and hence involves inevitable expenditure of time. 1.1.2 Deadlines It is possible to characterize situations on the basis of the total time available to an agent to formulate and enact a solution.
Reference: [Hau87] <author> Brian A. Haugh. </author> <title> Simple causal minimizations for temporal persistence and projection. </title> <booktitle> In Proceedings of the sixth national conference on artificial intelligence, </booktitle> <pages> pages 218-223, </pages> <year> 1987. </year>
Reference-contexts: This is the problem of determining all the facts that will true during a future time period, given a partial description of the facts that are known. Numerous solutions have been proposed to the temporal projection problem <ref> [Gel88, Geo87, Hau87, Kau86, Lif87b, Lif87a, Mor88, Pea88, Sho88, Bak89] </ref> to mention a few. <p> Numerous solutions have been proposed to the temporal projection problem [Gel88, Geo87, Hau87, Kau86, Lif87b, Lif87a, Mor88, Pea88, Sho88, Bak89] to mention a few. They may be grouped into four categories: 1. chronological minimization [Sho88, Kau86] 2. causal minimization <ref> [Hau87, Lif87b] </ref> 3. model approach [MS88, Ams91, GS87] 4. time map approach [DM87] Our projection mechanism has commonalities with some of the chronological minimization approaches, notably those of Shoham [Sho88], Lifschitz [Lif87a], and Kautz [Kau86]. <p> The chronological minimization approaches were criticized by Kautz [Kau86], in that, by always granting preference to later changes over earlier ones, the agent may draw artificial conclusions about the time of an action that caused a change. The causal minimization approaches <ref> [Hau87, Lif87b] </ref> introduce a special "Causes" predicate which they then minimize using circumscription. A drawback is that the axioms cannot be written in an unrestricted logic and therefore it may be difficult to use it in a planning system. Changes that have known causes are preferred over unjustifiable changes. <p> Changes that have known causes are preferred over unjustifiable changes. However, this means that when no knowledge about a cause exists, changes cannot be reasoned with correctly. Uncertainty is tackled to some extent in <ref> [Hau87] </ref> through the notion of "potential causes" when the agent knows about the occurrence of an action but is uncertain about its success. We do not yet have a mechanism to handle this type of uncertainty (we assume that all actions in the agent's plan succeed unless observed otherwise). <p> The mechanism functions for the agent whether he/she is the one performing the actions, or observing them. We have compared our temporal projection approach with chronological minimization [Sho88, Kau86], causal minimization <ref> [Hau87, Lif87b] </ref>, the model approach [MS88, Ams91]. and the time map approach [DM87] in Chapter 4. Here, we compare our solution with two other recent works that address the YSP.
Reference: [HB90] <author> Eric J. Horvitz and John S. Breese. </author> <title> Ideal partition of resources for metar-easoning. </title> <type> Technical Report KSL-90-26, </type> <institution> Knowledge Systems Laboratory, Stanford University, </institution> <month> March </month> <year> 1990. </year>
Reference-contexts: Horvitz et al have also addressed the problem of dividing computational resources between meta-reasoning and object-level problem solving, particularly in the case when both are being solved using anytime algorithms <ref> [HB90] </ref>. By the use of mathematical functions which assume particular forms for the various utilities, they manage to keep the meta-reasoning cost quite small or constant.
Reference: [HHC90] <author> Adele E. Howe, David M. Hart, and Paul R. Cohen. </author> <title> Addressing real-time constraints in the design of autonomous agents. </title> <journal> Journal of Real-Time Systems, </journal> <volume> 2(12) </volume> <pages> 81-97, </pages> <year> 1990. </year>
Reference-contexts: Lastly we mention work in the direction of building systems and architectures that exhibit desirable real-time behaviors, although not all components of these systems function in the real-time domain: Guardian [HRWA + 92] Phoenix <ref> [HHC90] </ref> and PRS [IG90]. FORBIN [DFM88] which is a planning architecture that supports hierarchical planning involving reasoning about deadlines, travel time, and resources are some 91 examples of such systems. TILEWORLD [PR90] is a simulated dynamic and unpre-dictable parametrized agent and environment.
Reference: [Hin62] <author> J. Hintikka. </author> <title> Knowledge and Belief. </title> <publisher> Cornell University Press, </publisher> <year> 1962. </year>
Reference-contexts: Resource limitations have been of some concern in formal work. In particular, the problem of logical omniscience has received attention in the epistemic logic literature. It concerns the difficulty with the classical Hintikka possible world semantics <ref> [Hin62] </ref> that the agent always knows the logical consequences of her beliefs. However, no existing works have provided a semantics that can address the issue of how the reasoning progresses vis a vis the passage of time. <p> Resource limitations have been of some concern in formal work. In particular, the problem of logical omniscience has received attention in the epistemic logic literature. It concerns the difficulty with the classical Hintikka possible world semantics <ref> [Hin62] </ref> that the agent always knows the logical consequences of her beliefs. However, no existing works provide a semantics addressing the issue of how the reasoning progresses vis a vis the passage of time. <p> The agent in the classical model of knowledge <ref> [Hin62] </ref> has all the undesirable properties (a), (b) and (c) above. Several improvements have been suggested, and they have been broadly classified as "syntactic" and "semantic" approaches.
Reference: [HM87] <author> S. Hanks and D. McDermott. </author> <title> Nonmonotonic logic and temporal projection. </title> <journal> Artificial Intelligence, </journal> <volume> 33 </volume> <pages> 379-412, </pages> <year> 1987. </year>
Reference-contexts: Other aspects of the planner related to time estimates and feasibility analysis with respect to tight deadlines are described in Chapter 7 and also in Chapter 6. We demonstrate here how this mechanism applies to several real-time variations of the Yale Shooting Problem <ref> [HM87] </ref> appropriate to active logics. The first is a witness scenario where Dudley is a witness to the scene of the crime. <p> Dudley is then draws the commonsense conclusion that Fred has been killed. Here we are mimicking Baker's simplified version of the YSP (no loading action <ref> [HM87] </ref> is required, and the wait action occurs between steps 0 and 4). Below we sketch the steps in this reasoning.
Reference: [Hor88] <author> E. J. Horvitz. </author> <title> Reasoning under varying and uncertain resource constraints. </title> <booktitle> In Proceeding, AAAI-88, </booktitle> <pages> pages 111-116, </pages> <address> St. Paul, Minnesota, </address> <year> 1988. </year>
Reference-contexts: Typically, planning time and solution quality have a trade-off between them. This has been extensively studied in several works based on decision theory <ref> [Hor88, DB88, RW91] </ref>. They tackle the response time optimization problem, which is aimed at finding the best possible solution within the least amount of time. However, these works do not have the means to account for all the time spent in their reasoning, nor is it their main concern. <p> This is an issue that has received extensive attention in works such as <ref> [Hor88, BD94] </ref>. Often this involves reasoning about the probability of success and a numerical measure of the utility of various actions. One can implement algorithms such as these in a time-situated active-logic framework. <p> We do not care if at any point of time he has found an approximate solution of an inferior quality. Having that assurance is not crucial. 90 7.6.2 Flexible computation Work by Horvitz et al <ref> [Hor88, Hor89, HR91] </ref> attacks problems that may be classified as "high stakes decision problems". A typical example is in the medical domain where the decision making is complex, but highly informed.
Reference: [Hor89] <author> Eric J. Horvitz. </author> <title> Reasoning about beliefs and actions under computational resource constraints. In T.S. </title> <editor> Levitt L.N. Kanal and J.F. Lemmer, editors, </editor> <booktitle> Uncertainity in Artificial Intelligence 3. </booktitle> <publisher> Elevesier Science Publishers, </publisher> <year> 1989. </year>
Reference-contexts: We do not care if at any point of time he has found an approximate solution of an inferior quality. Having that assurance is not crucial. 90 7.6.2 Flexible computation Work by Horvitz et al <ref> [Hor88, Hor89, HR91] </ref> attacks problems that may be classified as "high stakes decision problems". A typical example is in the medical domain where the decision making is complex, but highly informed.
Reference: [HR79] <author> B. Hayes-Roth. </author> <title> A cognitive model of planning. </title> <booktitle> Cognitive Science, </booktitle> <pages> pages 275-310, </pages> <year> 1979. </year>
Reference-contexts: This made the planner more "reactive" but less likely to reason about the effects of immediate action. (Our work in active-logic planning is close to NASL in the way it advocated planning and acting as two equally important aspects of problem solving.) * PMM <ref> [HR79] </ref> provided an opportunistic planning framework in a blackboard architecture. They introduced the concept of cognitive specialists which are external to the planner and which influence planning decisions; They showed how to utilize measures of worth of invoking these specialists. Our work borrows from these and other early planning systems.
Reference: [HR90] <author> B. Hayes-Roth. </author> <title> Architectural foundations for real-time eperformance in intelligent agents. Journal of Real Time Sytems, </title> <year> 1990. </year>
Reference-contexts: Using them we demonstrated Dudley's time-situated handling of the three frame problems, namely projection, qualification and ramification. 62 Chapter 6 Time-situated Planning Recently there has been a surge of interest in systems capable of intelligent behavior in dynamic and unpredictable environments <ref> [AC87, Bro91, Kae88, HR90] </ref>. Resource limitations, including the treatment of time as a consumable resource has received attention in systems that perform real-time planning. In chapter 1 we examined some of the relevant literature in traditional AI planning, and discussed recent trends in the field.
Reference: [HR91] <author> Eric J. Horvitz and Geoffrey Rutledge. </author> <title> Time-dependent utility and action under uncertainity. </title> <booktitle> In Uncertainity in Artificial Intelligence 6, </booktitle> <year> 1991. </year>
Reference-contexts: Those in the last category put the time that is available in the best use. These approaches have been collectively characterized by terms such as flexible computation <ref> [HR91] </ref>, deliberation scheduling [BD94], and anytime algorithms [DB88, ZR92]. They spend the resources available to the agent in deciding whether to act, how to act, and when to act. <p> We do not care if at any point of time he has found an approximate solution of an inferior quality. Having that assurance is not crucial. 90 7.6.2 Flexible computation Work by Horvitz et al <ref> [Hor88, Hor89, HR91] </ref> attacks problems that may be classified as "high stakes decision problems". A typical example is in the medical domain where the decision making is complex, but highly informed.
Reference: [HRWA + 92] <author> B. Hayes-Roth, R. Washington, D. Ash, A. Collinot, A. Vina, and A. Se-vier. Guardian: </author> <title> A prototype intensive-care monitoring agent. </title> <journal> Artificial Intelligence in Medicine, </journal> <volume> 4 </volume> <pages> 165-185, </pages> <year> 1992. </year>
Reference-contexts: It seems that it would be possible in principle to implement Etzioni's methods within our active logic framework. Lastly we mention work in the direction of building systems and architectures that exhibit desirable real-time behaviors, although not all components of these systems function in the real-time domain: Guardian <ref> [HRWA + 92] </ref> Phoenix [HHC90] and PRS [IG90]. FORBIN [DFM88] which is a planning architecture that supports hierarchical planning involving reasoning about deadlines, travel time, and resources are some 91 examples of such systems. TILEWORLD [PR90] is a simulated dynamic and unpre-dictable parametrized agent and environment.
Reference: [HY92] <author> J. Halpern and Moses Y. </author> <title> A guide to completeness and complexity for modal logics of knowledge and belief. </title> <journal> Artificial Intelligence, </journal> <volume> 54 </volume> <pages> 319-379, </pages> <year> 1992. </year>
Reference-contexts: In M c we have a timeline l V corresponding to every maximal consistent set V . For definition and properties of maximal consistent sets we refer to <ref> [HY92] </ref>. Let I denote 8 A formula is provable if is one of the axioms or follows from provable formulas by application of one or more inference rules. A formula is consistent if : is not provable. 121 the set f l W j 2 W g. <p> Proof (of Lemma B.1) The first three are straightforward to prove, for proof refer to <ref> [HY92] </ref>. For part (4), we need to show that every which is provable is in F . Suppose this is not the case. From property (1), : 2 F . Thus every model of F is a model of :.
Reference: [IG90] <author> F. Ingrand and M. Georgeff. </author> <title> Managing deliberation and reasoning in real-time ai systems. </title> <booktitle> In Proceedings of 1990 DARPA workshop on Innovative Approaches to Planning, Scheduling and Control, </booktitle> <pages> pages 284-291, </pages> <address> San Diego, CA, </address> <month> November </month> <year> 1990. </year>
Reference-contexts: Although the debate as to whether the completely reactive non-deliberative behavior can live up to its stronger claims still goes on, we and others <ref> [DF89, Doy82, PR90, IG90] </ref> believe that deliberation is often the crucial component that highlights intelligent behavior in non-trivial problem solving. 1.1.1 Foreseen and unforeseen situations We roughly characterize commonsense planning and acting problems into two categories. <p> This is an interesting approach. In the problems that we have dealt with in this dissertation, which fall in the "unforeseen" category, the fully reactive approach is often believed to lead to brittle and inflexible systems if no real-time deliberation is performed <ref> [DF89, Doy88, PR90, IG90] </ref>. 4 At middle of the deliberation spectrum, many researchers agree that some form of deliberation is necessary in planning. <p> The PRS system [GL88] uses metareasoning to recognize the need for additional planning. More recently <ref> [IG90] </ref> proposed a situated architecture for real-time reasoning. Based on PRS, it provides management representation of metareasoning strategies in the form of metalevel plans, and describes an interpreter that selects and executes them. <p> Lastly we mention work in the direction of building systems and architectures that exhibit desirable real-time behaviors, although not all components of these systems function in the real-time domain: Guardian [HRWA + 92] Phoenix [HHC90] and PRS <ref> [IG90] </ref>. FORBIN [DFM88] which is a planning architecture that supports hierarchical planning involving reasoning about deadlines, travel time, and resources are some 91 examples of such systems. TILEWORLD [PR90] is a simulated dynamic and unpre-dictable parametrized agent and environment.
Reference: [Kae87] <author> L. Kaelbling. </author> <title> An architecture for intelligent reactive systems. </title> <editor> In M. Georgeff and A. Lansky, editors, </editor> <booktitle> Reasoning about Actions and Plans. </booktitle> <publisher> Morgan-Kaufmann, </publisher> <year> 1987. </year>
Reference-contexts: This is the metareasoning challenge. Reactive systems eschew meta-level planning, and even planning. by considering all contingencies at design time. Typical of this group is the work of Brooks [Bro91, 74 Bro86]. Other efforts that obviate the need for explicit reasoning at execution time are [AC87] and [RK86] and <ref> [Kae87] </ref>. This is an interesting approach.
Reference: [Kae88] <author> L. Kaelbling. </author> <title> Goals as parallel program specifications. </title> <booktitle> In Proceedings of the 7th National Conference on Artificial Intelligence, </booktitle> <pages> pages 60-65, </pages> <address> St. Paul, Minnesota, </address> <year> 1988. </year>
Reference-contexts: Using them we demonstrated Dudley's time-situated handling of the three frame problems, namely projection, qualification and ramification. 62 Chapter 6 Time-situated Planning Recently there has been a surge of interest in systems capable of intelligent behavior in dynamic and unpredictable environments <ref> [AC87, Bro91, Kae88, HR90] </ref>. Resource limitations, including the treatment of time as a consumable resource has received attention in systems that perform real-time planning. In chapter 1 we examined some of the relevant literature in traditional AI planning, and discussed recent trends in the field.
Reference: [Kau86] <author> H. Kautz. </author> <title> The logic of persistence. </title> <booktitle> In Proceedings, AAAI-86, </booktitle> <pages> pages 401-405, </pages> <year> 1986. </year>
Reference-contexts: In all the problems that we tackle though, we will treat observations and facts synonymously. 5 Projections (and persistences) have been studied by numerous authors; see e.g., <ref> [Wil83a, Kau86, McD87] </ref>. <p> This is the problem of determining all the facts that will true during a future time period, given a partial description of the facts that are known. Numerous solutions have been proposed to the temporal projection problem <ref> [Gel88, Geo87, Hau87, Kau86, Lif87b, Lif87a, Mor88, Pea88, Sho88, Bak89] </ref> to mention a few. <p> Numerous solutions have been proposed to the temporal projection problem [Gel88, Geo87, Hau87, Kau86, Lif87b, Lif87a, Mor88, Pea88, Sho88, Bak89] to mention a few. They may be grouped into four categories: 1. chronological minimization <ref> [Sho88, Kau86] </ref> 2. causal minimization [Hau87, Lif87b] 3. model approach [MS88, Ams91, GS87] 4. time map approach [DM87] Our projection mechanism has commonalities with some of the chronological minimization approaches, notably those of Shoham [Sho88], Lifschitz [Lif87a], and Kautz [Kau86]. <p> They may be grouped into four categories: 1. chronological minimization [Sho88, Kau86] 2. causal minimization [Hau87, Lif87b] 3. model approach [MS88, Ams91, GS87] 4. time map approach [DM87] Our projection mechanism has commonalities with some of the chronological minimization approaches, notably those of Shoham [Sho88], Lifschitz [Lif87a], and Kautz <ref> [Kau86] </ref>. In our approach as well as theirs, defaults are applied forward in time, so that earlier events play out their consequences for later ones. <p> This is also the central idea behind the resolution rule (RMP) described in Chapterchapter:temporal. The chronological minimization approaches were criticized by Kautz <ref> [Kau86] </ref>, in that, by always granting preference to later changes over earlier ones, the agent may draw artificial conclusions about the time of an action that caused a change. The causal minimization approaches [Hau87, Lif87b] introduce a special "Causes" predicate which they then minimize using circumscription. <p> The mechanism functions for the agent whether he/she is the one performing the actions, or observing them. We have compared our temporal projection approach with chronological minimization <ref> [Sho88, Kau86] </ref>, causal minimization [Hau87, Lif87b], the model approach [MS88, Ams91]. and the time map approach [DM87] in Chapter 4. Here, we compare our solution with two other recent works that address the YSP.
Reference: [KL88] <author> S. Kraus and D. Lehmann. </author> <title> Knowledge, belief and time. </title> <journal> Theoretical Computer Science, </journal> <volume> 58 </volume> <pages> 155-174, </pages> <year> 1988. </year> <month> 152 </month>
Reference-contexts: There are a number of works that have considered logics of knowledge and time e.g. <ref> [Sat77, Leh84, KL88, LR86, Ash88] </ref>. Fagin and Halpern discuss the possibility of capturing bounded and situated reasoning by letting the awareness set vary over time.
Reference: [KNP90] <author> S. Kraus, M. Nirkhe, and D. Perlis. </author> <title> Deadline-coupled real-time planning. </title> <booktitle> In Proceedings of 1990 DARPA workshop on Innovative Approaches to Planning, Scheduling and Control, </booktitle> <pages> pages 100-108, </pages> <address> San Diego, CA, </address> <year> 1990. </year>
Reference-contexts: It has also been described in <ref> [KNP90, NKP91] </ref>. The original step-logic work suffered from the litterbug problem. In a step-logic with the inheritance property, the agent's finite set of beliefs increases steadily as time goes by. <p> The *7! as it appears in X (S : T *7! R; : : :) denotes that X is intended to hold beyond S : T up to R (by default). Its use in a result of an action 2 For fuller details see <ref> [KNP90, NKP91] </ref>. 129 indicates that the result must be preserved for use in a later segment of the plan. The number at the right bottom corner of a triplet denotes its place in the plan sequence.
Reference: [Kon86a] <author> K. Konolige. </author> <title> A Deduction Model of Belief. </title> <publisher> Pitman, </publisher> <address> London, </address> <year> 1986. </year>
Reference-contexts: For most of these systems the goal is not so much to model human com-monsense behavior in real-time but to come up with an effective program that will perform certain tasks in the real-time domain. These approaches are largely proce 5 Konolige <ref> [Kon86a] </ref>, Levesque [Lev84] and Fagin and Halpern [FH88] proposed systems in which the agents are not omniscient. However, the inference time is not explicitly captured in their systems. 21 dural. <p> Russell and Wefald [RW91] define a limited rational agent. SOAR [LNR87] is the most ambitious attempt to build an intelligent agent architecture. Kurt Konolige <ref> [Kon86a] </ref> argues that the property that marks a situated agent who reasons 6 Curiously, analogous findings are reported in [Bro86] regarding a totally non-declarative design methodology. <p> Simon's hypothesis is that there is no perfect deliberation. Organisms adapt well enough to satisfice; they do not in general optimize. Deduction models challenge the hypothesis of logical omniscience in various ways. Konolige <ref> [Kon86a] </ref> suggests a deduction model that is deductively closed under a set of rules, though not necessarily consequentially closed, since the rules may not be logically complete. The assumption of deductive closure greatly simplifies the technical problems by disregarding any particular control strategy. <p> But such approaches are difficult to analyze, since they are not guided by knowledge-based principles. A commendable syntactic approach is presented by Konolige in his deduction model <ref> [Kon86a] </ref> which gives a formal characterization of explicit beliefs and captures how agents syntactically 113 derive new beliefs, possibly with an incomplete set of inference rules. In contrast, semantic approaches attempt to give semantics similar in most cases to the possible world semantics, but with "fixes".
Reference: [Kon86b] <author> K. Konolige. </author> <title> What awareness isn't. </title> <editor> In J. Halpern, editor, </editor> <booktitle> Proceedings of the first conferennce on Theoretical Aspects of Reasoning About Knowledge, </booktitle> <address> Monterey, CA, 1986. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: They also provide an approach to local reasoning that they call a society of minds approach. Fagin and Halpern's awareness notion, in their logic of general awareness acts like a filter on semantic formulations. It has been evaluated and criticized in <ref> [Kon86b] </ref>. One of the criticisms is that the model is unintuitive, since it is unlikely that an agent can compute all logical consequences, discarding the one's that it is not aware of, say, because of memory limitations, because in fact, agents are also affected by time limitations.
Reference: [Kor90] <author> R. E. Korf. </author> <title> Real-time heuristic search. </title> <journal> Artificial Intelligence, </journal> <volume> 42 </volume> <pages> 189-211, </pages> <year> 1990. </year>
Reference-contexts: Dynamic situations are those where the world changes in the course of planning. Planning completely before the execution phase can lead to obsolete solutions. Typically, cycles of planning followed by execution are suggested as a solution to this problem <ref> [Kor90, BH91] </ref>. However, the time required to decide how much planning must be done before execution begins is not often taken into account. 6.0.2 Where the active-logic work fits in Our work overlaps with the above concerns in real-time planning. We explore two particular aspects: 1. Real-time embeddedness 2.
Reference: [KP89] <author> S. Kraus and D. Perlis. </author> <title> Assessing others' knowledge and ignorance. </title> <booktitle> In Proc. of the 4th International Symposium on Methodologies for Intelligent Systems, </booktitle> <pages> pages 220-225, </pages> <address> Charlotte, North Carolina, </address> <year> 1989. </year>
Reference: [KR92] <author> S. Kraus and J. Rosenschein. </author> <title> The role of representation in interaction: Discovering focal points among alternative solutions. </title> <booktitle> In Decentralized Artificial Intelligence, Volume 3, </booktitle> <address> Germany, 1992. </address> <publisher> Elsevier Science Publishers. </publisher>
Reference-contexts: In the next section we briefly describe step-logics, their structure and intent. In Section 2.2 we elaborate on desirable features of active-logics that prompted us to for our particular 1 Step-logics have also been used for multi-agent coordination without communication using focal points <ref> [KR92] </ref>, and for the introduction of new expressions into the language over time [Mil92]. 14 0 : ; i : : : : ff : : : i + 2 : : : : fi : : : . . . problem.
Reference: [Lak86] <author> G. Lakemeyer. </author> <title> Steps towards a first order logic of explicit and implicit belief. </title> <editor> In J. Halpern, editor, </editor> <booktitle> Proceedings of the first conferennce on Theoretical Aspects of Reasoning About Knowledge, </booktitle> <address> Monterey, CA, 1986. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Levesque's approach was subject to the criticism that an agent in the logic is a perfect reasoner in relevance logic. Levesque's ideas have been extended in [PS85] and <ref> [Lak86] </ref>. Montague has given a possible world semantics that gets around problem (a) of logical consequence. We use the main idea in this model, namely, to define knowledge as a relation between a world and a set of sets of possible worlds. However, we provide the distinction of incorporating time-situatedness.
Reference: [Leh84] <author> D. J. Lehmann. </author> <title> Knowledge, common knowledge and related puzzles. </title> <booktitle> In Proceedings of the third annual ACM conference on principles of distributed computing, </booktitle> <pages> pages 62-67, </pages> <year> 1984. </year> <month> 153 </month>
Reference-contexts: There are a number of works that have considered logics of knowledge and time e.g. <ref> [Sat77, Leh84, KL88, LR86, Ash88] </ref>. Fagin and Halpern discuss the possibility of capturing bounded and situated reasoning by letting the awareness set vary over time.
Reference: [Lev84] <author> H. Levesque. </author> <title> A logic of implicit and explicit belief. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence, </booktitle> <pages> pages 198-202, </pages> <address> Austin, TX, 1984. </address> <publisher> AAAI. </publisher>
Reference-contexts: For most of these systems the goal is not so much to model human com-monsense behavior in real-time but to come up with an effective program that will perform certain tasks in the real-time domain. These approaches are largely proce 5 Konolige [Kon86a], Levesque <ref> [Lev84] </ref> and Fagin and Halpern [FH88] proposed systems in which the agents are not omniscient. However, the inference time is not explicitly captured in their systems. 21 dural. Implementation of procedural methods tends to be much more time efficient while the logic based inference engine often shows poor performance speeds. <p> In contrast, we are concerned with bounded rationality of a time-situated nature. In Chapter 9 we give detailed comparison of our work with other works ( <ref> [FH88, Lev84] </ref> etc.) that attempt to circumvent the logical omniscience problem. Most of these formal approaches are still constrained to a static model of reasoning. Step-logics have a place in this spectrum of research towards the design of rational agents that are constrained by various resource limitations. <p> In contrast, semantic approaches attempt to give semantics similar in most cases to the possible world semantics, but with "fixes". Levesque <ref> [Lev84] </ref> gives a semantic account of implicit and explicit belief where implicit beliefs are the logical consequences of explicit belief. A solution to (a) and the possibility of having contradictory beliefs is achieved by introducing an artificial notion of incoherent or impossible worlds.
Reference: [Lif87a] <author> V. Lifschitz. </author> <title> Pointwise circumscription. </title> <booktitle> In Readings in Nonmonotonic Reasoning. </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1987. </year>
Reference-contexts: This is the problem of determining all the facts that will true during a future time period, given a partial description of the facts that are known. Numerous solutions have been proposed to the temporal projection problem <ref> [Gel88, Geo87, Hau87, Kau86, Lif87b, Lif87a, Mor88, Pea88, Sho88, Bak89] </ref> to mention a few. <p> They may be grouped into four categories: 1. chronological minimization [Sho88, Kau86] 2. causal minimization [Hau87, Lif87b] 3. model approach [MS88, Ams91, GS87] 4. time map approach [DM87] Our projection mechanism has commonalities with some of the chronological minimization approaches, notably those of Shoham [Sho88], Lifschitz <ref> [Lif87a] </ref>, and Kautz [Kau86]. In our approach as well as theirs, defaults are applied forward in time, so that earlier events play out their consequences for later ones.
Reference: [Lif87b] <author> Vladimir Lifschitz. </author> <title> Formal theories of action. </title> <booktitle> In The Frame Problem in Artificial Intelligence, </booktitle> <pages> pages 35-57, </pages> <address> Los Altos, CA, 1987. </address> <publisher> Morgan-Kaufmann. </publisher>
Reference-contexts: This is the problem of determining all the facts that will true during a future time period, given a partial description of the facts that are known. Numerous solutions have been proposed to the temporal projection problem <ref> [Gel88, Geo87, Hau87, Kau86, Lif87b, Lif87a, Mor88, Pea88, Sho88, Bak89] </ref> to mention a few. <p> Numerous solutions have been proposed to the temporal projection problem [Gel88, Geo87, Hau87, Kau86, Lif87b, Lif87a, Mor88, Pea88, Sho88, Bak89] to mention a few. They may be grouped into four categories: 1. chronological minimization [Sho88, Kau86] 2. causal minimization <ref> [Hau87, Lif87b] </ref> 3. model approach [MS88, Ams91, GS87] 4. time map approach [DM87] Our projection mechanism has commonalities with some of the chronological minimization approaches, notably those of Shoham [Sho88], Lifschitz [Lif87a], and Kautz [Kau86]. <p> The chronological minimization approaches were criticized by Kautz [Kau86], in that, by always granting preference to later changes over earlier ones, the agent may draw artificial conclusions about the time of an action that caused a change. The causal minimization approaches <ref> [Hau87, Lif87b] </ref> introduce a special "Causes" predicate which they then minimize using circumscription. A drawback is that the axioms cannot be written in an unrestricted logic and therefore it may be difficult to use it in a planning system. Changes that have known causes are preferred over unjustifiable changes. <p> The mechanism functions for the agent whether he/she is the one performing the actions, or observing them. We have compared our temporal projection approach with chronological minimization [Sho88, Kau86], causal minimization <ref> [Hau87, Lif87b] </ref>, the model approach [MS88, Ams91]. and the time map approach [DM87] in Chapter 4. Here, we compare our solution with two other recent works that address the YSP.
Reference: [LNR87] <author> J. E. Laird, A. Newell, and P. S. Rosenbloom. </author> <title> Soar: An architecture for general intelligence. </title> <journal> Artificial Intelligence, </journal> <volume> 33(1) </volume> <pages> 1-64, </pages> <year> 1987. </year>
Reference-contexts: Russell and Wefald [RW91] define a limited rational agent. SOAR <ref> [LNR87] </ref> is the most ambitious attempt to build an intelligent agent architecture. Kurt Konolige [Kon86a] argues that the property that marks a situated agent who reasons 6 Curiously, analogous findings are reported in [Bro86] regarding a totally non-declarative design methodology.
Reference: [LPD88] <author> Victor Lesser, Jasmina Pavlin, and Edmund Durfee. </author> <title> Approximate processing in real-time problem solving. </title> <journal> AI Magazine, </journal> <volume> 9(1) </volume> <pages> 49-61, `988. </pages>
Reference-contexts: By the use of mathematical functions which assume particular forms for the various utilities, they manage to keep the meta-reasoning cost quite small or constant. Lesser et al <ref> [LPD88] </ref> provide a design-to-time approach which combines existing multiple methods for various tasks to maximize the quality of the combined solution within the available time. In an approach that is inspired by economics, Etzioni [Etz91] addresses the problem for a time-constrained agent using special terms commonly used in economics.
Reference: [LR86] <author> R. Ladner and J. H. Reif. </author> <title> The logic of distributed protocols. </title> <editor> In J. Halpern, editor, </editor> <booktitle> Proceedings of the first conferennce on Theoretical Aspects of Reasoning About Knowledge, </booktitle> <address> Monterey, CA, 1986. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: There are a number of works that have considered logics of knowledge and time e.g. <ref> [Sat77, Leh84, KL88, LR86, Ash88] </ref>. Fagin and Halpern discuss the possibility of capturing bounded and situated reasoning by letting the awareness set vary over time.
Reference: [McD78] <author> D. McDermott. </author> <title> Planning and acting. </title> <journal> Cognitive Science, </journal> <volume> 2 </volume> <pages> 71-109, </pages> <year> 1978. </year>
Reference-contexts: Each theorem is marked uniquely by a time-stamp. The logic thus effectively represents what has been 1 This problem was first mentioned in the context of time-dependent reasoning by McDermott <ref> [McD78] </ref>, and more recently discussed in [CL90]. 6 proven up to any given point in time, as opposed to traditional logics which focus only on a limiting (cumulative) theorem set. <p> One can implement algorithms such as these in a time-situated active-logic framework. We currently adopt the simple strategy that was adopted very early on in one of the first works that attempted to interleave planning and acting <ref> [McD78] </ref>. Whenever Dudley is ready to act, he performs the action.
Reference: [McD82] <author> D. McDermott. </author> <title> A temporal logic for reasoning about processes and plans. </title> <journal> Cognitive Science, </journal> <volume> 6, </volume> <year> 1982. </year>
Reference-contexts: However, no existing works have provided a semantics that can address the issue of how the reasoning progresses vis a vis the passage of time. Although work in temporal logic involves reasoning about time (e.g., <ref> [All84, McD82, MS87] </ref>), time is not treated as a crucial resource that must be carefully rationed by the agent as it is being spent in every step of reasoning. <p> They introduced constraint formulation and propagation techniques in planning. * NASL <ref> [McD82] </ref> was the first approach to planning that relaxed the "static world assumption" and allowed for execution of each step as it was generated in a (partial) plan. <p> However, no existing works provide a semantics addressing the issue of how the reasoning progresses vis a vis the passage of time. Although work in temporal logic involves reasoning about time (e.g., <ref> [All84, McD82, MS87] </ref>), time is not treated as a crucial resource that must be carefully rationed by the agent, as it is spent in every step of reasoning. Step-logics [EDP90, PEDM] as a formal apparatus to model an agent's ongoing process of reasoning were described in Chapter 2.
Reference: [McD87] <author> D. McDermott. </author> <title> Nonmonotonic logic and temporal projection. </title> <journal> Artificial Intelligence, </journal> <volume> 33 </volume> <pages> 379-412, </pages> <year> 1987. </year>
Reference-contexts: In all the problems that we tackle though, we will treat observations and facts synonymously. 5 Projections (and persistences) have been studied by numerous authors; see e.g., <ref> [Wil83a, Kau86, McD87] </ref>.
Reference: [MH69] <author> J. McCarthy and P. Hayes. </author> <title> Some philosophical problems from the standpoint of artificial intelligence. </title> <editor> In B. Meltzer and D. Michie, editors, </editor> <booktitle> Ma 154 chine Intelligence, </booktitle> <volume> volume 4, </volume> <pages> pages 463-502. </pages> <publisher> Edinburgh University Press, </publisher> <year> 1969. </year>
Reference-contexts: The most obvious one is N ow (i), which is believed at step i but not at i + 1. The nonmonotonic behavior enables the frame-default reasoning that the commonsense agent must be capable of <ref> [MH69] </ref>. 2.3 Merits of a (largely) declarative framework In recent years real-time planning systems have largely been geared towards robot-planning.
Reference: [MH79] <author> R. C. Moore and G. Hendrix. </author> <title> Computational models of beliefs and the semantics of belief sentences. </title> <type> Technical Report Technical note 187, </type> <institution> SRI International, </institution> <address> Menlo Park, </address> <year> 1979. </year>
Reference-contexts: The agent in the classical model of knowledge [Hin62] has all the undesirable properties (a), (b) and (c) above. Several improvements have been suggested, and they have been broadly classified as "syntactic" and "semantic" approaches. In the syntactic approach e.g. <ref> [Ebe74, MH79] </ref>, what the agent knows is represented by a set of formulas and hence is not constrained under consequence. But such approaches are difficult to analyze, since they are not guided by knowledge-based principles.
Reference: [Mil56] <author> G. Miller. </author> <title> The magical number seven plus or minus two. </title> <journal> The Psychological Review, </journal> <volume> 63 </volume> <pages> 81-97, </pages> <year> 1956. </year>
Reference-contexts: Sir William Hamilton was the first to have recorded evidence of the limited size of the STM. Amazingly, the capacity of the STM seems to be independent of the type of data involved, or the length pf the actual strings. Miller <ref> [Mil56] </ref> offered an explanation. He postulated chunking of data into units which could occupy a slot in the STM. This increased the capacity of the STM in what we would today call the physical capacity measured in bits and bytes. <p> The f ocus and N ow which are crucial to time-situated reasoning are always accessible to the agent. 1 What is a realistic K for a commonsense reasoner? There is psychological basis that suggests that human short-term memory holds seven-plus-or-minus-two `chunks' of data at one time <ref> [Mil56] </ref>. 2 There is a ranking among the relevant formulae and the K at the top of the list are picked.
Reference: [Mil92] <author> Michael J. Miller. </author> <title> A view of one's past and other aspects of reasoned change in belief. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, University of Maryland, Collge Park, MD, U.S.A, </institution> <year> 1992. </year> <type> Ph.D. dissertation. </type>
Reference-contexts: In Section 2.2 we elaborate on desirable features of active-logics that prompted us to for our particular 1 Step-logics have also been used for multi-agent coordination without communication using focal points [KR92], and for the introduction of new expressions into the language over time <ref> [Mil92] </ref>. 14 0 : ; i : : : : ff : : : i + 2 : : : : fi : : : . . . problem. <p> They are given special treatment that allows for a real-time truth maintenance to spring into action to resolve the contradiction and allow its scope to be restricted in future theorem-proving. We follow the general rule schema (RS) defined in <ref> [Mil92] </ref> which represents the structure of an inference rule for active logics: RS: i j : ff ij 1 ; : : : ; ff ij m . . . i + 1 : fi 1 ; : : : ; fi p where i; j 2 N and (i j) <p> Projections are not made in the interval between the contradiction and S k , until the contradiction is resolved. <ref> [Mil92] </ref> gives an account of contradiction handling in step-logics that addresses the problems of lingering consequences and the difficulties in designing recovery mechanisms. We handle only those contradictions that are the result of default beliefs derived from temporal projection. These are internal contradictions within the context set.
Reference: [Mon68] <author> R. Montague. </author> <title> Pragmatics. </title> <booktitle> Contemporary Philosophy, </booktitle> <pages> pages 101-121, </pages> <address> 1968. La Nuova Italia Editrice. </address>
Reference-contexts: The modal logic approach which is motivated by the step logic work is powerful enough to deal with contradictions. 115 i : ::: ff;fi ::: Conjunction i : ::: ff^fi ::: Detachment i : ::: ff ::: i+1 : ::: ff ::: Inheritance were first used in <ref> [Mon68] </ref> and in [Sco70]. Montague gives a possible world semantics to epistemic logic where, unlike in the classical model 3 , knowledge is defined as a relation between a world and a set of sets of worlds.
Reference: [Mon70] <author> R. Montague. </author> <title> Universal grammar. </title> <journal> Theoria, </journal> <volume> 36 </volume> <pages> 373-398, </pages> <year> 1970. </year>
Reference-contexts: This modal logic is based on Montague's intensional logic of belief <ref> [Mon70] </ref>, that uses structures referred to in the literature as neighborhood structures or minimal structures [Che80].
Reference: [Mor88] <author> P. H. Morris. </author> <title> The anomalous extension problem in default reasoning. </title> <journal> Artificial Intelligence, </journal> <volume> 35 </volume> <pages> 383-399, </pages> <year> 1988. </year>
Reference-contexts: This is the problem of determining all the facts that will true during a future time period, given a partial description of the facts that are known. Numerous solutions have been proposed to the temporal projection problem <ref> [Gel88, Geo87, Hau87, Kau86, Lif87b, Lif87a, Mor88, Pea88, Sho88, Bak89] </ref> to mention a few.
Reference: [MS87] <author> E. McKenzie and R. Snodgrass. </author> <title> Extending the relational algebra to support transaction time. </title> <booktitle> In Proceedings of the SIGMOD conference. ACM, </booktitle> <year> 1987. </year>
Reference-contexts: However, no existing works have provided a semantics that can address the issue of how the reasoning progresses vis a vis the passage of time. Although work in temporal logic involves reasoning about time (e.g., <ref> [All84, McD82, MS87] </ref>), time is not treated as a crucial resource that must be carefully rationed by the agent as it is being spent in every step of reasoning. <p> However, no existing works provide a semantics addressing the issue of how the reasoning progresses vis a vis the passage of time. Although work in temporal logic involves reasoning about time (e.g., <ref> [All84, McD82, MS87] </ref>), time is not treated as a crucial resource that must be carefully rationed by the agent, as it is spent in every step of reasoning. Step-logics [EDP90, PEDM] as a formal apparatus to model an agent's ongoing process of reasoning were described in Chapter 2.
Reference: [MS88] <author> L. Morgenstern and L. A. Stein. </author> <title> Why things go wrong: A formal theory of causal reasoning. </title> <booktitle> In Proceeding, AAAI-88, </booktitle> <pages> pages 518-523, </pages> <year> 1988. </year>
Reference-contexts: Numerous solutions have been proposed to the temporal projection problem [Gel88, Geo87, Hau87, Kau86, Lif87b, Lif87a, Mor88, Pea88, Sho88, Bak89] to mention a few. They may be grouped into four categories: 1. chronological minimization [Sho88, Kau86] 2. causal minimization [Hau87, Lif87b] 3. model approach <ref> [MS88, Ams91, GS87] </ref> 4. time map approach [DM87] Our projection mechanism has commonalities with some of the chronological minimization approaches, notably those of Shoham [Sho88], Lifschitz [Lif87a], and Kautz [Kau86]. <p> We do not yet have a mechanism to handle this type of uncertainty (we assume that all actions in the agent's plan succeed unless observed otherwise). Among the other original approaches, Morgenstern and Stein <ref> [MS88] </ref> provide an elegant solution to both backward and forward projections. However, in their solution, there is no time attached to the reasoning; a meta-reasoner concludes (supposedly sometime after all the observations) all the facts true in a "chronicle", given the partial description. <p> The mechanism functions for the agent whether he/she is the one performing the actions, or observing them. We have compared our temporal projection approach with chronological minimization [Sho88, Kau86], causal minimization [Hau87, Lif87b], the model approach <ref> [MS88, Ams91] </ref>. and the time map approach [DM87] in Chapter 4. Here, we compare our solution with two other recent works that address the YSP. Baker [Bak89] provides a solution to the YSP using situation calculus and circumscription, with an `Ab' predicate in which the result is varied. <p> It can not solve the `stolen car' problem, 3 which we can address. Our approach can handle all the other problems mentioned here, although our detective scenario is closer to that in <ref> [MS88] </ref> and different from the murder mystery described. Our approach can also offer a treatment for all the ramification problems mentioned in [Bak89]. 3 The `stolen car' problem, is a problem with chronological minimization.
Reference: [Nil83] <author> N. Nilsson. </author> <title> Artificial intelligence prepares for 2001. </title> <journal> AI Magazine, </journal> <volume> 4(4) </volume> <pages> 7-14, </pages> <year> 1983. </year>
Reference-contexts: They are logics that treat time not merely as an external entity to be reasoned about, but rather as a feature guiding the inferences within. They are inspired by the view of logic as having an evolving life (see <ref> [Nil83, Tho90] </ref>), in which theorems are proven, and sometimes later disbelieved, as it interacts with its environment.
Reference: [NKP91] <author> M. Nirkhe, S. Kraus, and D. Perlis. </author> <title> Fully deadline-coupled planning: One step at a time. </title> <booktitle> In Proceedings of the sixth international symposium on methodologies for intelligent systems, </booktitle> <address> Charlotte, NC, </address> <year> 1991. </year>
Reference-contexts: It has also been described in <ref> [KNP90, NKP91] </ref>. The original step-logic work suffered from the litterbug problem. In a step-logic with the inheritance property, the agent's finite set of beliefs increases steadily as time goes by. <p> The *7! as it appears in X (S : T *7! R; : : :) denotes that X is intended to hold beyond S : T up to R (by default). Its use in a result of an action 2 For fuller details see <ref> [KNP90, NKP91] </ref>. 129 indicates that the result must be preserved for use in a later segment of the plan. The number at the right bottom corner of a triplet denotes its place in the plan sequence.
Reference: [NKP93] <author> M. Nirkhe, S. Kraus, and D. Perlis. </author> <title> Situated reasoning within tight deadlines and realistic space and computation bounds. </title> <booktitle> In Proceedings of the Second Symposium On Logical Formalizations Of Commonsense Reasoning, </booktitle> <address> Austin, TX, </address> <year> 1993. </year>
Reference-contexts: Thus, the above formalism, combined with a relevance mechanism offers a fuller treatment of the qualification problem. Details of the space constrained agent are in <ref> [NKP93] </ref>. 5.2.2 The ramification problem This is the difficulty in explicitly recording all the consequences of an action.
Reference: [Pea88] <author> Judea Pearl. </author> <title> On logic and probability. </title> <journal> Computational Intelligence, </journal> <volume> 4 </volume> <pages> 99-103, </pages> <year> 1988. </year>
Reference-contexts: This is the problem of determining all the facts that will true during a future time period, given a partial description of the facts that are known. Numerous solutions have been proposed to the temporal projection problem <ref> [Gel88, Geo87, Hau87, Kau86, Lif87b, Lif87a, Mor88, Pea88, Sho88, Bak89] </ref> to mention a few.
Reference: [PEDM] <author> D. Perlis, J. Elgot-Drapkin, and M. Miller. </author> <title> Stop the world! I want to think! Invited paper, </title> <journal> International J. of Intelligent Systems, </journal> <note> special issue on Temporal Reasoning, </note> <editor> K. Ford and F. Anger (eds.), </editor> <volume> vol. 6, </volume> <year> 1991, </year> <pages> pp. 443-456. </pages>
Reference-contexts: Deliberation is time consuming. Action occurs in the mere form of thinking or reasoning. In "Stop the world: I want to think" <ref> [PEDM] </ref>, it is argued that traditionally actions in AI are viewed as separate from the planning process which leads to those actions. Even when the two are intertwined, as in real-time, dynamic or reactive planning, the planning effort is treated as a different kind of beast, not an action itself. <p> Although work in temporal logic involves reasoning about time (e.g., [All84, McD82, MS87]), time is not treated as a crucial resource that must be carefully rationed by the agent, as it is spent in every step of reasoning. Step-logics <ref> [EDP90, PEDM] </ref> as a formal apparatus to model an agent's ongoing process of reasoning were described in Chapter 2. We have thus far described an active logic based fully deadline-coupled planning and reasoning mechanism which is a combination of declarative and procedural approaches.
Reference: [PR90] <author> M. E. Pollack and M. Ringuette. </author> <title> Introducing the tileworld: Experimentally evaluating agent architectures. </title> <booktitle> In Proceedings, AAAI-90, </booktitle> <pages> pages 183-189, </pages> <year> 1990. </year>
Reference-contexts: Although the debate as to whether the completely reactive non-deliberative behavior can live up to its stronger claims still goes on, we and others <ref> [DF89, Doy82, PR90, IG90] </ref> believe that deliberation is often the crucial component that highlights intelligent behavior in non-trivial problem solving. 1.1.1 Foreseen and unforeseen situations We roughly characterize commonsense planning and acting problems into two categories. <p> This is an interesting approach. In the problems that we have dealt with in this dissertation, which fall in the "unforeseen" category, the fully reactive approach is often believed to lead to brittle and inflexible systems if no real-time deliberation is performed <ref> [DF89, Doy88, PR90, IG90] </ref>. 4 At middle of the deliberation spectrum, many researchers agree that some form of deliberation is necessary in planning. <p> FORBIN [DFM88] which is a planning architecture that supports hierarchical planning involving reasoning about deadlines, travel time, and resources are some 91 examples of such systems. TILEWORLD <ref> [PR90] </ref> is a simulated dynamic and unpre-dictable parametrized agent and environment. It is possible to experiment with the behavior of the agent and various meta-level strategies by tuning parameters of the TILEWORLD system.
Reference: [PS85] <author> P.F. Patel-Schneider. </author> <title> A decidable first order logic for knowledge representation. </title> <booktitle> In Proceedings of the 9th Int'l Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 455-458, </pages> <address> Los Angeles, CA, </address> <year> 1985. </year>
Reference-contexts: A solution to (a) and the possibility of having contradictory beliefs is achieved by introducing an artificial notion of incoherent or impossible worlds. Levesque's approach was subject to the criticism that an agent in the logic is a perfect reasoner in relevance logic. Levesque's ideas have been extended in <ref> [PS85] </ref> and [Lak86]. Montague has given a possible world semantics that gets around problem (a) of logical consequence. We use the main idea in this model, namely, to define knowledge as a relation between a world and a set of sets of possible worlds.
Reference: [RK86] <author> S.J. </author> <title> Rosenschein and L.P. Kaelbling. The synthesis of digital machines with provable epistemic properties. </title> <booktitle> In Proceedings of Workshop on Theoretical Aspects of Knowledge, </booktitle> <address> Monterey, CA, </address> <year> 1986. </year>
Reference-contexts: This is the metareasoning challenge. Reactive systems eschew meta-level planning, and even planning. by considering all contingencies at design time. Typical of this group is the work of Brooks [Bro91, 74 Bro86]. Other efforts that obviate the need for explicit reasoning at execution time are [AC87] and <ref> [RK86] </ref> and [Kae87]. This is an interesting approach.
Reference: [RK89] <author> S.J. </author> <title> Rosenschein and L.P. Kaelbling. Integrating planning and reactive control. </title> <booktitle> In Proceedings of NASA Telerobotics conference, 1989. </booktitle> <address> Pasadena, CA. </address>
Reference-contexts: Some activities can be looked upon as reactive or reflex behaviors that require very little deliberation. Explicit execution-time reasoning is eliminated by compiling all the decisions about what to do in particular situations <ref> [AC87, Bro91, RK89] </ref>. Clearly, these have significant bearing on the survival and effective functioning of an agent in its environment, especially in a world where changes are rampant but regular.
Reference: [RW91] <author> S. Russell and E. Wefald. </author> <title> Do the right thing. </title> <publisher> MIT press, </publisher> <year> 1991. </year>
Reference-contexts: Turing's original proposal for a definition of intelligence was associated with the notion of a continuous temporal property of an agent (the famous Turing test challenges the automated agent to withstand a process of interrogation and emerge indistinguishable from a human). Russell and Wefald <ref> [RW91] </ref> define a limited rational agent. SOAR [LNR87] is the most ambitious attempt to build an intelligent agent architecture. Kurt Konolige [Kon86a] argues that the property that marks a situated agent who reasons 6 Curiously, analogous findings are reported in [Bro86] regarding a totally non-declarative design methodology. <p> Typically, planning time and solution quality have a trade-off between them. This has been extensively studied in several works based on decision theory <ref> [Hor88, DB88, RW91] </ref>. They tackle the response time optimization problem, which is aimed at finding the best possible solution within the least amount of time. However, these works do not have the means to account for all the time spent in their reasoning, nor is it their main concern.
Reference: [Sac73] <author> E. D. Sacerdoti. </author> <title> Planning in a hierarchy of abstraction spaces. </title> <booktitle> In Proceedings of the 3rd Int'l Joint Conference on Artificial Intelligence, </booktitle> <address> Palo Alto, California, </address> <year> 1973. </year>
Reference-contexts: Thus, we 76 add at least 2n to the EET of the plan if there are n non-primitive actions currently in the plan. If a measure of the level of abstraction of an action is available (such as in the representation in the ABSTRIPS planner <ref> [Sac73] </ref>, that number would reflect the number of steps required to refine the action into primitive level actions, and could be substituted as an estimate in place of the constant 2.
Reference: [Sac75] <author> Earl Sacerdoti. </author> <title> The non-linear nature of plans. </title> <booktitle> In Advance papers for IJCAI - 75, </booktitle> <year> 1975. </year>
Reference-contexts: Its representation of world model and plan steps in terms of a set of operators and add-delete lists has influenced the knowledge representation of our planner, e.g., in the use of action triplets in plans. 9 * NOAH (Nets of Action Hierarchies) <ref> [Sac75] </ref> reasoned about the intrinsic non-linearity of plan steps and some schemes in which the temporal ordering as well as conditional iterations and loops can be represented. NOAH's procedural nets represented meta-planning knowledge. This task-specific information was written in procedural form in SOUP (Semantics of User's Problem). <p> NOAH's procedural nets, and SOUP (Semantics of User's Problem) <ref> [Sac75] </ref> used critics which are outside advisors that perform decision making regarding non-linearity and plan optimization. It was the 73 first partial-order planner. We have a total-order planner, simply because it turned out to be the simplest kind to build while we concentrated on the time-related aspects. <p> NONLIN [Tat77b] could detect interactions and take the necessary corrective action. DEVISER [Ver83] went a step further and handled time limits while performing partial order planning. Planning with conditional operators and iterators has been dealt with in NOAH <ref> [Sac75] </ref>, SIPE [Wil83b] among others. There have been numerous efforts to improve planning by recognizing goal interactions and dependencies during the planning process, and better representations of actions and plans; we refer to [AHT90] for a collection of these. <p> But this is not done by the planner itself. In our work, although we do not make any attempts to optimize plans, we perform domain-independent meta-level reasoning within the same framework as the object-level planning; and unlike the "critics" <ref> [Sac75] </ref>, the meta-reasoning is an intrinsic part of the planning that also consumes time. 6.3.2 Approaches to handling meta-planning tasks One way to implement meta-level decision making is to design two distinct component systems, one for object-level and one for meta-level reasoning.
Reference: [Sat77] <author> M. Sato. </author> <title> A study of kripke-style methods of some modal logics by gentzen's sequential method. </title> <journal> Publications of the REsearch Institute for Mathematical Sciences, </journal> <volume> 13(2), </volume> <year> 1977. </year>
Reference-contexts: There are a number of works that have considered logics of knowledge and time e.g. <ref> [Sat77, Leh84, KL88, LR86, Ash88] </ref>. Fagin and Halpern discuss the possibility of capturing bounded and situated reasoning by letting the awareness set vary over time.
Reference: [Sco70] <author> D. Scott. </author> <title> Advice on modal logic. </title> <booktitle> Philosophical Problems in Logic, </booktitle> <pages> pages 143-173, </pages> <year> 1970. </year>
Reference-contexts: The modal logic approach which is motivated by the step logic work is powerful enough to deal with contradictions. 115 i : ::: ff;fi ::: Conjunction i : ::: ff^fi ::: Detachment i : ::: ff ::: i+1 : ::: ff ::: Inheritance were first used in [Mon68] and in <ref> [Sco70] </ref>. Montague gives a possible world semantics to epistemic logic where, unlike in the classical model 3 , knowledge is defined as a relation between a world and a set of sets of worlds.
Reference: [Sho88] <author> Yoav Shoham. </author> <title> Chronological ignorance: Experiments in nonmonotonic temporal reasoning. </title> <journal> Artificial Intelligence, </journal> <volume> 36 </volume> <pages> 279-331, </pages> <year> 1988. </year>
Reference-contexts: This is the problem of determining all the facts that will true during a future time period, given a partial description of the facts that are known. Numerous solutions have been proposed to the temporal projection problem <ref> [Gel88, Geo87, Hau87, Kau86, Lif87b, Lif87a, Mor88, Pea88, Sho88, Bak89] </ref> to mention a few. <p> Numerous solutions have been proposed to the temporal projection problem [Gel88, Geo87, Hau87, Kau86, Lif87b, Lif87a, Mor88, Pea88, Sho88, Bak89] to mention a few. They may be grouped into four categories: 1. chronological minimization <ref> [Sho88, Kau86] </ref> 2. causal minimization [Hau87, Lif87b] 3. model approach [MS88, Ams91, GS87] 4. time map approach [DM87] Our projection mechanism has commonalities with some of the chronological minimization approaches, notably those of Shoham [Sho88], Lifschitz [Lif87a], and Kautz [Kau86]. <p> They may be grouped into four categories: 1. chronological minimization [Sho88, Kau86] 2. causal minimization [Hau87, Lif87b] 3. model approach [MS88, Ams91, GS87] 4. time map approach [DM87] Our projection mechanism has commonalities with some of the chronological minimization approaches, notably those of Shoham <ref> [Sho88] </ref>, Lifschitz [Lif87a], and Kautz [Kau86]. In our approach as well as theirs, defaults are applied forward in time, so that earlier events play out their consequences for later ones. <p> The mechanism functions for the agent whether he/she is the one performing the actions, or observing them. We have compared our temporal projection approach with chronological minimization <ref> [Sho88, Kau86] </ref>, causal minimization [Hau87, Lif87b], the model approach [MS88, Ams91]. and the time map approach [DM87] in Chapter 4. Here, we compare our solution with two other recent works that address the YSP.
Reference: [Sho91] <author> Yoav Shoham. Agent0: </author> <title> A simple agent language and its interpreter. </title> <booktitle> In Proc. Ninth National Conference on Artificial Intelligence, </booktitle> <pages> pages 704-709. </pages> <booktitle> American Association for Artificial Intelligence, </booktitle> <year> 1991. </year>
Reference-contexts: We stipulate that the difficult problem of `when to decide to choose' depends on mental states and attitudes of agents <ref> [Sho91] </ref>. A more `cautious' type of agent will skeptically continue to process two alternatives, perhaps risking overshooting the deadline, but a more `dashing' type of agent will take the risk to pursue just one plan.
Reference: [Sim82] <author> H. Simon. </author> <title> Models of bounded rationality. </title> <publisher> MIT Press, </publisher> <address> Cambridge, Mass., </address> <year> 1982. </year>
Reference-contexts: The above research is representative of what that can be grouped under the "bounded rationality" <ref> [Sim82] </ref> approach to commonsense reasoning. Simon's hypothesis is that there is no perfect deliberation. Organisms adapt well enough to satisfice; they do not in general optimize. Deduction models challenge the hypothesis of logical omniscience in various ways.
Reference: [Ste81] <author> M. J. Stefik. </author> <title> Planning with constraints. </title> <journal> Artificial Intelligence, </journal> <volume> 16 </volume> <pages> 111-140, </pages> <year> 1981. </year>
Reference-contexts: It used "critics" which are outside advisors that performed decision making regarding non-linearity and plan optimization. * NONLIN [Tat77a] introduced the notion of goal structure and the use of typed preconditions. * DEVISER [Ver83] was an extension of NONLIN that handled reasoning about time and events. * MOLGEN <ref> [Ste81] </ref> introduced the least commitment principle. They introduced constraint formulation and propagation techniques in planning. * NASL [McD82] was the first approach to planning that relaxed the "static world assumption" and allowed for execution of each step as it was generated in a (partial) plan.
Reference: [Sus73] <author> G.A. Sussman. </author> <title> A computational model of skill acquistion. </title> <type> Technical Report AI-TR-297, </type> <institution> MIT AI Lab, </institution> <year> 1973. </year>
Reference-contexts: In this section we also mention some reactive planning research as well as those planners that perform a modest amount of meta-reasoning but do not reason about the deliberations themselves. 6.3.1 Plan interactions and dependencies The Sussman anomaly <ref> [Sus73] </ref> showed that certain planning situations are intrinsically non-linear. Waldinger [Wal75] first suggested the technique of "goal regression" to tackle the problem of conjunctive goals.
Reference: [Tat75] <author> A. Tate. </author> <title> Interacting goals and their use. </title> <booktitle> In Proceedings of the 4th Int'l Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 215-218, </pages> <year> 1975. </year> <month> 157 </month>
Reference-contexts: Waldinger [Wal75] first suggested the technique of "goal regression" to tackle the problem of conjunctive goals. With INTERPLAN <ref> [Tat75] </ref>, Tate suggested recording a link between the effect of one action and the condition of another. (We have used a similar idea by using the "*7!" symbol to record the need to preserve a certain effect of an action until a later time).
Reference: [Tat77a] <author> A. Tate. </author> <title> Generating project networks. </title> <booktitle> In Proceedings of the 5th Int'l Joint Conference on Artificial Intelligence, </booktitle> <year> 1977. </year>
Reference-contexts: NOAH's procedural nets represented meta-planning knowledge. This task-specific information was written in procedural form in SOUP (Semantics of User's Problem). It used "critics" which are outside advisors that performed decision making regarding non-linearity and plan optimization. * NONLIN <ref> [Tat77a] </ref> introduced the notion of goal structure and the use of typed preconditions. * DEVISER [Ver83] was an extension of NONLIN that handled reasoning about time and events. * MOLGEN [Ste81] introduced the least commitment principle.
Reference: [Tat77b] <author> A. Tate. </author> <title> Project planning using a hierarchical non-linear planner. </title> <type> Technical Report Report 25, </type> <institution> Dept. of Artificial Intelligence, Edinburgh University, </institution> <year> 1977. </year>
Reference-contexts: We commit to a sequence of actions, but the actual times at which the action must be executed is bound to the N ow only at the time of acting. NONLIN <ref> [Tat77b] </ref> could detect interactions and take the necessary corrective action. DEVISER [Ver83] went a step further and handled time limits while performing partial order planning. Planning with conditional operators and iterators has been dealt with in NOAH [Sac75], SIPE [Wil83b] among others.
Reference: [Tho90] <author> R. Thomason. </author> <title> Accommodation, meaning, and implicature: interdisciplinary foundations for pragmatics. </title> <editor> In P. Cohen, J. Morgan, and M. Pol-lack, editors, </editor> <booktitle> Intentions in Communication, </booktitle> <pages> pages 325-363. </pages> <publisher> MIT Press, </publisher> <year> 1990. </year>
Reference-contexts: They are logics that treat time not merely as an external entity to be reasoned about, but rather as a feature guiding the inferences within. They are inspired by the view of logic as having an evolving life (see <ref> [Nil83, Tho90] </ref>), in which theorems are proven, and sometimes later disbelieved, as it interacts with its environment.
Reference: [TSSK91] <author> Becky Thomas, Yoav Shoham, Anton Schwartz, and Sarit Kraus. </author> <title> Preliminary thoughts on an agent description language. </title> <journal> International Journal of Intelligent Systems, </journal> <volume> 6(5) </volume> <pages> 497-508, </pages> <month> August </month> <year> 1991. </year>
Reference-contexts: An intension of a formula denoted by jjjj is the set of worlds w such that w j= . We prefer to use timelines instead of possible worlds, since this gives us a way to naturally incorporate time into our framework. L denotes the set of timelines <ref> [TSSK91] </ref>. We consider time lines that are restricted to be finite from one side and infinite from the other (i.e., are rays). At every time point in each timeline some propositions are true and the rest are false.
Reference: [Var86] <author> M. Vardi. </author> <title> On epistemic logic and logical omniscience. </title> <editor> In J. Halpern, editor, </editor> <booktitle> Proceedings of the 1986 Conference on Theoretical Aspects of Reasoning about Knowledge, </booktitle> <pages> pages 293-305, </pages> <address> Monterey, CA, 1986. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: We use the main idea in this model, namely, to define knowledge as a relation between a world and a set of sets of possible worlds. However, we provide the distinction of incorporating time-situatedness. Vardi <ref> [Var86] </ref> provides a co-relation between restrictions on models in the Montague semantics and the corresponding agent properties that they characterize. Fagin and Halpern [FH88] have presented a series of interesting approaches to limited reasoning that marry the syntactic and semantic approaches.
Reference: [Ver83] <author> S. Vere. </author> <title> Planning in time: Windows and durations for activities and goals. In Proceedings, </title> <journal> IEEE Trans. on Pattern Analysis and Machine Intelligence, </journal> <pages> pages 246-267, </pages> <year> 1983. </year>
Reference-contexts: This task-specific information was written in procedural form in SOUP (Semantics of User's Problem). It used "critics" which are outside advisors that performed decision making regarding non-linearity and plan optimization. * NONLIN [Tat77a] introduced the notion of goal structure and the use of typed preconditions. * DEVISER <ref> [Ver83] </ref> was an extension of NONLIN that handled reasoning about time and events. * MOLGEN [Ste81] introduced the least commitment principle. <p> We commit to a sequence of actions, but the actual times at which the action must be executed is bound to the N ow only at the time of acting. NONLIN [Tat77b] could detect interactions and take the necessary corrective action. DEVISER <ref> [Ver83] </ref> went a step further and handled time limits while performing partial order planning. Planning with conditional operators and iterators has been dealt with in NOAH [Sac75], SIPE [Wil83b] among others.
Reference: [Wal75] <author> R. Waldinger. </author> <title> Achieving several goals simultaneously. </title> <type> Technical Report Technical Note 107, </type> <institution> SRI AI Center, </institution> <year> 1975. </year>
Reference-contexts: In this section we also mention some reactive planning research as well as those planners that perform a modest amount of meta-reasoning but do not reason about the deliberations themselves. 6.3.1 Plan interactions and dependencies The Sussman anomaly [Sus73] showed that certain planning situations are intrinsically non-linear. Waldinger <ref> [Wal75] </ref> first suggested the technique of "goal regression" to tackle the problem of conjunctive goals.
Reference: [WHR89] <author> R. Washington and B. Hayes-Roth. </author> <title> Input data management for real-time ai systems. </title> <booktitle> In Proceedings of IJCAI-89, </booktitle> <address> Detroit, Michigan, </address> <year> 1989. </year> <month> 158 </month>
Reference-contexts: In our example, Dudley may first start to think about running to Nell to rescue her, when he suddenly sees a telephone. This brings `calling', and subsequently the related axiom of calling the driver to stop the train into focus. This spawns the generation of a second plan. 8 <ref> [WHR89] </ref> have discussed the relative merits of refinement into lower levels v/s searching to greater depth to find the right action. 105 R A ! e), to compute the extended effects.
Reference: [Wil83a] <author> R. Wilensky. </author> <title> Planning and understanding. </title> <publisher> Addison Wesley, </publisher> <address> Reading, Mass, </address> <year> 1983. </year>
Reference-contexts: In all the problems that we tackle though, we will treat observations and facts synonymously. 5 Projections (and persistences) have been studied by numerous authors; see e.g., <ref> [Wil83a, Kau86, McD87] </ref>. <p> In the next chapter we describe the inference rules that manipulate them. 6 An agent must be able to infer goals from a current situation. This topic has received a great deal pf attention and treatment (e.g. <ref> [Wil83a] </ref>), but is is not within the scope of our work. <p> Time must be spent to choose between alternatives or to adjust the plan to ensure that it does not violate other goals <ref> [Wil83a] </ref>. Inferencing such as this constitutes the meta-planning that Dudley performs. We do account for the time spent in making these inferences, as they are made. But the WET is restricted to actions in the plan, namely object level actions. This is not a serious disadvantage. <p> The new WET will continue to reflect only the execution time of the plan to walk outside 1 Current and past meta-planning time is fully accounted in the sliding Now predicate and is factored already into the feasibility analysis. 2 This example is mentioned in <ref> [Wil83a] </ref>. 3 A sustenance goal is one which must be preserved during the entire planning process. 77 and fetch the newspaper while the meta-planning proceeds in time. <p> Within a plan, the effect that the goals have on each other is recorded in the context set and reasoned about. Goal interactions must be reasoned about using 86 meta-plans. Some of the agents goals are sustenance goals <ref> [Wil83a] </ref> and therefore beliefs regarding them appear in the context of every plan. We can reason about sustenance goal conflicts without significantly enhancing our framework. Whenever an action in a plan contradicts a sustenance goal, Dudley tries to construct a meta-plan to protect that goal.
Reference: [Wil83b] <author> D.E. Wilkins. </author> <title> Representation in a domain-independent planner. </title> <booktitle> In Proceedings of the 8th Int'l Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 733-740, </pages> <year> 1983. </year>
Reference-contexts: NONLIN [Tat77b] could detect interactions and take the necessary corrective action. DEVISER [Ver83] went a step further and handled time limits while performing partial order planning. Planning with conditional operators and iterators has been dealt with in NOAH [Sac75], SIPE <ref> [Wil83b] </ref> among others. There have been numerous efforts to improve planning by recognizing goal interactions and dependencies during the planning process, and better representations of actions and plans; we refer to [AHT90] for a collection of these. <p> We mention a few of these here. (A detailed relationship with several approaches to associating a cost with the deliberation process is discussed at the end of Chapter 7.) SIPE <ref> [Wil83b] </ref> separated execution and generation by allowing the user to guide the planning process (perform the meta reasoning) during execution. The PRS system [GL88] uses metareasoning to recognize the need for additional planning. More recently [IG90] proposed a situated architecture for real-time reasoning.
Reference: [ZR92] <author> S. Zilberstein and S. Russell. </author> <title> Constructing utility-driven real-time systems using anytime algorithms. </title> <booktitle> In Proceedings of the IEEE workshop on imprecise and approximate computation, </booktitle> <pages> pages 6-10, </pages> <year> 1992. </year> <month> 159 </month>
Reference-contexts: Those in the last category put the time that is available in the best use. These approaches have been collectively characterized by terms such as flexible computation [HR91], deliberation scheduling [BD94], and anytime algorithms <ref> [DB88, ZR92] </ref>. They spend the resources available to the agent in deciding whether to act, how to act, and when to act.
References-found: 110

