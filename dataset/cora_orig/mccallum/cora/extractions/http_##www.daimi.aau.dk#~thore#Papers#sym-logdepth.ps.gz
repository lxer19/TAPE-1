URL: http://www.daimi.aau.dk/~thore/Papers/sym-logdepth.ps.gz
Refering-URL: http://www.daimi.aau.dk/~thore/Papers/sym-logdepth.html
Root-URL: http://www.daimi.aau.dk
Title: A COMMUNICATION COMPLEXITY PROOF THAT SYMMETRIC FUNCTIONS HAVE LOGARITHMIC DEPTH  
Author: GERTH STOLTING BRODAL AND THORE HUSFELDT 
Address: Ny Munkegade, DK-8000 Arhus C, Denmark  
Affiliation: BRICS Department of Computer Science, University of Aarhus,  
Abstract: We present a direct protocol with logarithmic communication that finds an element in the symmetric difference of two sets of different size. This yields a simple proof that symmetric functions have logarithmic circuit depth. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Mauricio Karchmer and Avi Wigderson. </author> <title> Monotone circuits for connectivity require super-logarithmic depth. </title> <journal> SIAM Journal of Computing, </journal> <volume> 3(2) </volume> <pages> 255-265, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: The latter happens at most log n times in the entire protocol. 3. Symmetric Functions Have Logarithmic Circuit Depth To prove Theorem 1 we use the well-known equivalence result of Karchmer and Wigderson <ref> [1] </ref>, which we state for completeness. Let f be a Boolean function. Let R f denote the game in which Alice gets A 2 f 1 (0), Bob gets B 2 f 1 (1), and they want to find an index where their input strings differ.
Reference: [2] <author> Ingo Wegener. </author> <title> The Complexity of Boolean Functions. </title> <publisher> Teubner, Stuttgart/Wiley & Sons, </publisher> <address> Chichester, </address> <year> 1987. </year> <month> 3 </month>
Reference-contexts: A function is symmetric if its value depends only on the number of ones in the argument. Parity and the threshold functions are popular examples. Theorem 1. If f : f0; 1g n ! f0; 1g is symmetric then d (f) 2 O (log n): Wegener <ref> [2] </ref> presents the standard proof of this result and provides a general treatment of Boolean circuit complexity. 1.1. Notation. To alleviate notation we assume that n is a power of two. We write log for the logarithm with base two.
References-found: 2

