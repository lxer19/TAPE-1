URL: ftp://ftpipr.ira.uka.de/pub/papers/1997/ici97tl.ps.gz
Refering-URL: ftp://ftpipr.ira.uka.de/.public_html/papersna.html
Root-URL: 
Title: Distributed Control Architecture for Intelligent Systems  
Author: Thomas Laengle, Ulrich Rembold 
Keyword: Distributed Control, Multi-Agent-Systems, Optimization, Cooperation  
Address: Kaiserstr. 12, D-76128 Karlsruhe, F.R. Germany  
Affiliation: Institute for Real-Time Computer Systems and Robotics Faculty for Computer Science, University of Karlsruhe  
Abstract: During the past few years, the need for large scale and complex systems has become obvious. They are necessary to intelligently carry out tasks in the area of transportation, manufacturing, and maintenance. The main problem is often the design of the intelligent control structure for such complex systems. Up to now, the control structures were usually designed as a hierarchical and centralized structure with a top-down process for planning and decision making. The number and complexity of the hierarchical layers determine the time that is required for a reaction and also for the quality of a chosen action. In most cases, additional components, actuators or sensors have to be added during the development cycle to improve the capability of the overall system. In this case and if the integration of the components' capabilities is required, it is easy to see the disadvantages of the hierarchical and centralized approach in comparison with the advantages existing at the initial system design process. In contrast to that, distributed or decentralized control architectures reveal their main advantages when it is necessary to enhance the system, to integrate components, and to maintain the system. This way, properties for the design of flexible control architectures like modularity, fault-tolerance and extendibility are easy to obtain, further it is possible to use the concepts of distributed knowledge and decentralized world representation. The main disadvantage of not centralized architectures is having to make sure that the system will fulfill an overall or global goal. To investigate these problems, a distributed control architecture for intelligent systems was developed at the University of Karlsruhe. To evaluate the concepts for task distribution, cooperation, coordination and optimization, the Karlsruhe Autonomous Mobile Robot KAMRO is considered which is also being developed at IPR. It consists of several subcomponents like two manipulators, hand-eye-cameras, one overhead-camera and a mobile platform. In this paper, the methods for optimization and deadlock-free coordination and cooperation are explained, further it is described how the architecture can be used in the manufacturing area. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Rembold, U.; Lueth, T.C.; Hrmann, A. </author> <title> Advancement of Intelligent Machines. </title> <booktitle> ICAM JSME Intl Conf. on Advanced Mechatronics, </booktitle> <address> Tokyo, Japan, </address> <month> August 2-4, </month> <year> 1993, </year> <pages> pp. 1-7. </pages>
Reference-contexts: They are necessary to intelligently carry out tasks in the area of transportation, manufacturing, and maintenance. Examples are automatically guided transport systems containing many vehicles, complex flexible manufacturing cells, or eventually mobile manipulator systems, which could be used for autonomous service applications in an industrial setting <ref> [1, 2] </ref>. The main problem is mostly the design of the intelligent control structure (ICS) for such complex systems, and also for system components if the overall system consists of several separate systems.
Reference: 2. <institution> Schraft, R.D. Vom Industrieroboter zum Serviceroboter - Stand der Technik, Chancen und Grenzen. ISRR VDI/VDE-GMA Intelligente Steuerung und Regelung von Robotern, </institution> <address> Langen, Nov. 9.-10., </address> <year> 1993 </year>
Reference-contexts: They are necessary to intelligently carry out tasks in the area of transportation, manufacturing, and maintenance. Examples are automatically guided transport systems containing many vehicles, complex flexible manufacturing cells, or eventually mobile manipulator systems, which could be used for autonomous service applications in an industrial setting <ref> [1, 2] </ref>. The main problem is mostly the design of the intelligent control structure (ICS) for such complex systems, and also for system components if the overall system consists of several separate systems.
Reference: 3. <author> Beni, G.; Hackwood, S. </author> <title> Coherent swarm motion under distributed control. </title> <booktitle> DARS Int. Symp. on Distributed Autonomous Robotic System, </booktitle> <address> Wako, Japan, </address> <month> Sept. </month> <pages> 21-22, </pages> <year> 1992, 1992, </year> <pages> pp. 39-52. </pages>
Reference: 4. <author> Camargo, R.F.; Chatila, R.; Alami, R. </author> <title> A Distributed Evolvable Control Architecture for Mobile Robots. </title> <booktitle> ICAR Int. Conf. on Advanced Robotics, </booktitle> <address> Pisa, Italy, </address> <month> June, </month> <pages> 4-6, </pages> <year> 1991, </year> <pages> pp. 1646-1649. </pages>
Reference: 5. <author> Drogoul, A. </author> <title> When Ants Play Chess. MAAMAW Europ. WS on Modelling Autonomous Agents in a Multi-Agent World, </title> <address> Neuchatel, Swizerland, </address> <month> August 24-27, </month> <year> 1993. </year>
Reference: 6. <author> Kotosaka, S.; Asama, H.; Kaetsu, H.; Endo, I., Sato, K.; Okada, S.; Nakayama, R. </author> <title> Fault Tolerance of a Functionally Adaptive and Robust Manipulator. </title> <booktitle> IROS IEEE/RSJ Int. Conf. on Intelligent Robots and Systems, </booktitle> <address> Yokohama, Japan, </address> <month> July 26-30, </month> <year> 1993, </year> <pages> pp. 294-300. </pages>
Reference: 7. <author> Lueth, </author> <title> T.C.; Laengle, Th. Task Description, Decomposition and Allocation in a Distributed Autonomous Multi-Agent Robot System. </title> <booktitle> IROS IEEE/RSJ Int. Conf. on Intelligent Robots and Systems, </booktitle> <address> Munich, Germany, </address> <month> Sept 12-16 </month> <year> 1994, </year> <pages> pp. 1516-1523. </pages>
Reference: 8. <author> Noreils, F.R. </author> <title> An Architecture for Cooperative and Autonomous Mobile Robots. </title> <booktitle> ICRA IEEE Int. Conf. on Robotics and Automation, </booktitle> <address> Nice, France, </address> <year> 1992, </year> <pages> pp. 2703-2710. </pages>
Reference: 9. <author> Ohmori, Y.; Nakauchi, Y.; Itoh, Y.; Anzai, Y. </author> <title> A Task Allocation Algorithm for Multiple Mobile Robot Environment. </title> <booktitle> 2nd ICARV Int. Conf. on Autonmation, Robotics and Computer Vision, </booktitle> <address> Singapore, </address> <month> September 16-18, </month> <year> 1992, </year> <pages> pp. </pages> <month> RO-15.3 </month>
Reference: 10. <author> Ozaki, K.; Asama, H.; Ishida, Y.; Matsumoto, A.; Kaetsu, H.; Endo, I. </author> <title> The Cooperation among Multiple Mobile Robots using Communication System. </title> <booktitle> DARS Int. Symp. on Distributed Autonomous Robotic System, </booktitle> <address> Wako, Japan, </address> <month> Sept. </month> <pages> 21-22, </pages> <year> 1992 </year>
Reference: 11. <author> Tigli, J.Y.; Occello, M.; Thomas, </author> <title> M.C. A Reactive Multi-Agents System As Mobile Robot Controller. </title> <booktitle> IROS IEEE/RSJ Int. Conf. on Intelligent Robots and Systems, </booktitle> <address> Yokohama, Japan, </address> <month> July 26-30, </month> <year> 1993, 1993, </year> <pages> pp. 2008-2014. </pages>
Reference: 12. <author> Yuta, S.; Premvuti, S. </author> <title> Coordinating Autonomous and Centralized Decision Making to Achieve Cooperative Behaviors between Multiple Mobile Robots. </title> <booktitle> IROS IEEE/RSJ Int. Conf. on Intelligent Robots and Systems, </booktitle> <address> Raleigh, NC (USA), </address> <month> July 7-10, </month> <year> 1992, </year> <note> p. 1566 ff </note>
Reference: 13. <editor> Demazeau, Y; Mueller, J.-P. </editor> <booktitle> Decentralized Artificial Intelligence, </booktitle> <publisher> North-Holland, </publisher> <year> 1992 </year>
Reference-contexts: Distributed Systems: The decision is made by a negotiation process among the executive components and executed by them (Fig.1b). This way, it is possible to fulfil a global goal <ref> [13] </ref>. Decentralized Systems: Each executive component makes its own decisions to fulfil the individual goal of the component and executes only these decisions (Fig.1c).
Reference: 14. <author> Steiner, D. </author> <title> A Priliminary Agent Model: Cooperating Agents. </title> <booktitle> Deliverable D-II.2.ii. IMAGINE, Esprit Project 5362, Siemens, </booktitle> <year> 1991. </year>
Reference-contexts: An agent consists of three parts: communicator, head (for planning and action selection), and body (for action execution) <ref> [14] </ref>. Communicator Planning/ Action selection Com munication Execution Head Body Fig.2: Elements of an agent The communicator connects the head to other agents on the same communication level or higher.
Reference: 15. <author> Hayes-Roth: </author> <title> A blackboard architecture for control. </title> <booktitle> Artificial Intelligence 26 (1985), </booktitle> <pages> pp. 251-321. </pages>
Reference-contexts: Distributed action selection: Available information is processed by several decision making components, which communicate and negotiate to come to a decision. Afterwards the information is transformed locally and globally into an action for the agent's body (Blackboard <ref> [15] </ref>, Whiteboard [16]) Decentralized action selection: The available information is processed independently by several decision making components and transformed locally into their own action decision for the agent's body (Motor schema [17]). a) Information Action b) Information Action Communication Channel c) Information Action Fig.3: Three different ways to make decisions, plan,
Reference: 16. <author> Thorpe, C.E., Ed. </author> <title> Vision and Navigation - The Carnegie Mellon Navlab, </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, </address> <year> 1990. </year>
Reference-contexts: Distributed action selection: Available information is processed by several decision making components, which communicate and negotiate to come to a decision. Afterwards the information is transformed locally and globally into an action for the agent's body (Blackboard [15], Whiteboard <ref> [16] </ref>) Decentralized action selection: The available information is processed independently by several decision making components and transformed locally into their own action decision for the agent's body (Motor schema [17]). a) Information Action b) Information Action Communication Channel c) Information Action Fig.3: Three different ways to make decisions, plan, or select
Reference: 17. <author> Arkin, </author> <title> R.C. Motor Schema-Based Mobile Robot Navigation. </title> <journal> The International Journal of Robotics Research, </journal> <volume> 8, 4 (1989), </volume> <pages> pp. 92-112. </pages>
Reference-contexts: Afterwards the information is transformed locally and globally into an action for the agent's body (Blackboard [15], Whiteboard [16]) Decentralized action selection: The available information is processed independently by several decision making components and transformed locally into their own action decision for the agent's body (Motor schema <ref> [17] </ref>). a) Information Action b) Information Action Communication Channel c) Information Action Fig.3: Three different ways to make decisions, plan, or select actions From an execution-oriented point of view, the presented taxonomy not only allows the classification of already described ICS for planning and control.
Reference: 18. <author> Hrmann,A.; Meier,W.; Schloen,J. </author> <title> A control architecture for an advanced fault-tolerant robot system. </title> <booktitle> Robotics and Autonomous Systems, 7 (1991), </booktitle> <pages> pp. 211-225. </pages>
Reference-contexts: Fig. 4: The mobile robot KAMRO The robot receives assembly tasks from a cell controller, which are represented by assembly precedence graphs. Afterwards, the robot travels to a workstation, searches for the necessary assembly parts with its camera system and performs the assembly autonomously. The used control architecture FATE <ref> [18] </ref> consists of a blackboard planning level that generates situation-dependent manipulatorspecific elementary operations. The real-time robot control system RT-RCS executes the elementary operations. The real-time controller is able to control the manipulators independently or in a closed kinematic chain.
References-found: 18

