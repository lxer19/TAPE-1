URL: http://www-cs-faculty.stanford.edu/~koza/ICESADF.ps
Refering-URL: http://www.cs.bham.ac.uk/~wbl/biblio/gp-bibliography.html
Root-URL: 
Email: koza@cs.stanford.edu  
Phone: 2)  3)  
Title: Reuse, Parameterized Reuse, and Hierarchical Reuse of Substructures in Evolving Electrical Circuits Using Genetic Programming  
Author: John R.Koza Forrest H Bennett III David Andre Martin A. Keane 
Address: 94305 USA  5733 West Grover Chicago, IL 60630 USA  
Web: http://www-cs-faculty.stanford.edu/~koza/  
Affiliation: 1) Computer Science Department, Stanford University  Visiting Scholar, Computer Science Department, Stanford University, Stanford, California  Econometrics Inc.,  
Abstract: Most practical electrical circuits contain modular substructures that are repeatedly used to create the overall circuit. Genetic programming with automatically defined functions and architecture-altering operations successfully evolved a design for a two-band crossover (woofer and tweeter) filter with a crossover frequency of 2,512 Hz. Both the topology and the sizing (numerical values) for each component of a the circuit were evolved. In the evolved circuit, three different electrical substructures were used; one was invoked five times; and one was invoked as part of a hierarchy; and one substructure was invoked with different numerical arguments so that different numerical component values were assigned to the substructure's components.
Abstract-found: 1
Intro-found: 1
Reference: <author> Andre, David and Koza, John R. </author> <year> 1996. </year> <title> Parallel genetic programming: A scalable implementation using the transputer architecture. </title> <editor> In Angeline, P. J. and Kinnear, K. E. Jr. (editors). </editor> <booktitle> 1996. Advances in Genetic Programming 2. </booktitle> <address> Cambridge: </address> <publisher> MIT Press. </publisher>
Reference: <editor> Angeline, Peter J. and Kinnear, Kenneth E. Jr. (editors). </editor> <booktitle> 1996. Advances in Genetic Programming 2. </booktitle> <address> Cambridge, MA: </address> <publisher> The MIT Press. </publisher>
Reference: <author> Gruau, Frederic. </author> <year> 1996. </year> <title> Artificial cellular development in optimization and compilation. </title> <editor> In Sanchez, Eduardo and Tomassini, Marco (editors). </editor> <year> 1996. </year> <title> Towards Evolvable Hardware. </title> <booktitle> Lecture Notes in Computer Science, </booktitle> <volume> Volume 1062. </volume> <publisher> Berlin: Springer-Verlag. </publisher> <pages> Pages 48 75. </pages>
Reference: <author> Hemmi, Hitoshi, Mizoguchi, Jun'ichi, and Shimohara, Katsunori. </author> <year> 1994. </year> <title> Development and evolution of hardware behaviors. </title> <editor> In Brooks, R. and Maes, P. (editors). </editor> <booktitle> Artificial Life IV: Proceedings of the Fourth International Workshop on the Synthesis and Simulation of Living Systems. </booktitle> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher> <pages> Pages 371376. </pages>
Reference: <author> Higuchi, T., Niwa, T., Tanaka, H., Iba, H., de Garis, H. and Furuya, T. </author> <year> 1993. </year> <title> Evolvable hardware Genetic-based generation of electric circuitry at gate and hardware description language (HDL) levels. </title> <type> Electrotechnical Laboratory technical report 93-4, </type> <institution> Tsukuba, </institution> <address> Ibaraki, Japan. </address>
Reference: <author> Holland, John H. </author> <year> 1975. </year> <title> Adaptation in Natural and Artificial System. </title> <address> Ann Arbor, MI: </address> <publisher> University of Michigan Press. </publisher>
Reference: <editor> Kinnear, Kenneth E. Jr. (editor). </editor> <booktitle> 1994. Advances in Genetic Programming. </booktitle> <address> Cambridge, MA: </address> <publisher> The MIT Press. </publisher>
Reference: <author> Koza, John R. </author> <year> 1992. </year> <title> Genetic Programming: On the Programming of Computers by Means of Natural Selection. </title> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference-contexts: Genetic Programming Genetic programming is an extension of the genetic algorithm described in John Holland's pioneering Adaptation in Natural and Artificial Systems (1975). The book Genetic Programming: On the Programming of Computers by Means of Natural Selection <ref> (Koza 1992) </ref> provides evidence that genetic programming can solve, or approximately solve, a variety of problems. See also Koza and Rice 1992.
Reference: <author> Koza, John R. </author> <year> 1994a. </year> <title> Genetic Programming II: Automatic Discovery of Reusable Programs. </title> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference-contexts: The book Genetic Programming: On the Programming of Computers by Means of Natural Selection (Koza 1992) provides evidence that genetic programming can solve, or approximately solve, a variety of problems. See also Koza and Rice 1992. The book Genetic Programming II: Automatic Discovery of Reusable Programs <ref> (Koza 1994a, 1994b) </ref> describes multipart programs consisting of a main program and one or more reusable, parameterized, hierarchically-called subprograms. See Kinnear 1994, Angeline and Kinnear 1996, Koza, Goldberg, Fogel, and Riolo 1996 for recent work in this field. <p> Connection-modifying functions have one or more construction-continuing subtrees, but no arithmetic-performing subtrees. Component-creating functions have one construction-continuing subtree and typically have one arithmetic-performing subtree. This constrained syntactic structure is preserved by using structure-preserving crossover with point typing <ref> (Koza 1994a) </ref>. 4 . 1 . The Embryonic Circuit The developmental process for converting a program tree into an electrical circuit begins with an embryonic circuit. L C LIST C 3 The bottom of figure 1 shows an embryonic circuit for a one-input, two-output circuit.
Reference: <author> Koza, John R. </author> <year> 1994b. </year> <title> Genetic Programming II Videotape: The Next Generation. </title> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference: <author> Koza, John R. </author> <year> 1995a. </year> <title> Evolving the architecture of a multipart program in genetic programming using architecture-altering operations. </title> <editor> In McDonnell, John R., Reynolds, Robert G., and Fogel, David B. (editors). </editor> <booktitle> 1995. Evolutionary Programming IV: Proceedings of the Fourth Annual Conference on Evolutionary Programming. </booktitle> <address> Cambridge, MA: </address> <publisher> The MIT Press. </publisher> <pages> 695717. </pages>
Reference: <author> Koza, John R., Andre, David, Bennett III, Forrest H, and Keane, Martin A. </author> <year> 1996. </year> <title> Use of automatically defined functions and architecture-altering operations in automated circuit synthesis using genetic programming. </title> <editor> In Koza, John R., Goldberg, David E., Fogel, David B., and Riolo, Rick L. (editors). </editor> <booktitle> 1996. Genetic Programming 1996: Proceedings of the First Annual Conference, </booktitle> <month> July 28-31, </month> <year> 1996, </year> <institution> Stanford University. </institution> <address> Cambridge, MA: </address> <publisher> The MIT Press. </publisher>
Reference: <author> Koza, John R., Bennett III, Forrest H, Andre, David, and Keane, Martin A. </author> <year> 1996a. </year> <title> Toward evolution of electronic animals using genetic programming. </title> <booktitle> Artificial Life V: Proceedings of the Fifth International Workshop on the Synthesis and Simulation of Living Systems. </booktitle> <address> Cambridge, MA: </address> <publisher> The MIT Press. </publisher>
Reference: <author> Koza, John R., Bennett III, Forrest H, Andre, David, and Keane, Martin A. </author> <year> 1996b. </year> <title> Four problems for which a computer program evolved by genetic programming is competitive with human performance. </title> <booktitle> Proceedings of the 1996 IEEE International Conference on Evolutionary Computation. </booktitle> <publisher> IEEE Press. </publisher> <pages> Pages 110. </pages>
Reference-contexts: The best-of-generation circuit from generation 158 has a fitness of 0.107 and scores 200 hits (out of 202). This fitness compares favorably with the fitness of 0.7807 and 192 hits achieved in a previously reported run of this problem without the architecture-altering operations <ref> (Koza, Bennett, Andre, and Keane, 1996b) </ref>. 1 5 8 . result-producing branches have 69, 158, and 127 points, respectively. This circuit has five automatically defined functions with 6, 24, 101, 185, and 196 points, respectively. Boxes indicate the use of ADF2 , ADF3, and ADF4.
Reference: <author> Koza, John R., Bennett III, Forrest H, Andre, David, and Keane, Martin A. </author> <year> 1996c. </year> <title> Automated design of both the topology and sizing of analog electrical circuits using genetic programming. </title> <editor> In Gero, John S. and Sudweeks, Fay (editors). </editor> <booktitle> Artificial Intelligence in Design '96. </booktitle> <address> Dordrecht: </address> <publisher> Kluwer. </publisher> <pages> 151-170. </pages>

Reference: <author> Koza, John R., and Rice, James P. </author> <year> 1992. </year> <title> Genetic Programming: The Movie. </title> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher> <address> Kruiskamp, Marinum Wilhelmus. </address> <year> 1996. </year> <title> Analog design automation using genetic algorithms and polytopes. </title> <institution> Eindhoven, The Netherlands: Data Library Technische Universiteit Eindhoven. Kruiskamp Marinum Wilhelmus and Leenaerts, Domine. </institution> <year> 1995. </year> <title> DARWIN: CMOS opamp synthesis by means of a genetic algorithm. </title> <booktitle> Proceedings of the 32nd Design Automation Conference. </booktitle> <address> New York, NY: </address> <publisher> Association for Computing Machinery. </publisher> <pages> Pages 433438. </pages>
Reference-contexts: Genetic Programming Genetic programming is an extension of the genetic algorithm described in John Holland's pioneering Adaptation in Natural and Artificial Systems (1975). The book Genetic Programming: On the Programming of Computers by Means of Natural Selection <ref> (Koza 1992) </ref> provides evidence that genetic programming can solve, or approximately solve, a variety of problems. See also Koza and Rice 1992.
Reference: <author> Mizoguchi, Junichi, Hemmi, Hitoshi, and Shimohara, Katsunori. </author> <year> 1994. </year> <title> Production genetic algorithms for automated hardware design through an evolutionary process. </title> <booktitle> Proceedings of the First IEEE Conference on Evolutionary Computation. </booktitle> <publisher> IEEE Press. Vol. I. </publisher> <pages> 661-664. </pages>
Reference: <author> Quarles, Thomas, Newton, A. R., Pederson, D. O., and Sangiovanni-Vincentelli, A. </author> <year> 1994. </year> <note> SPICE 3 Version 3F5 User's Manual. </note> <institution> Department of Electrical Engineering and Computer Science, University of California, Berkeley, </institution> <address> CA. </address> <month> March </month> <year> 1994. </year>
Reference-contexts: The netlist identifies each component of the circuit, the nodes to which that component is connected, and the value of that component. Each circuit is then simulated to determine its behavior. The 217,000-line SPICE (Simulation Program with Integrated Circuit Emphasis) simulation program <ref> (Quarles et al. 1994) </ref> was modified to run as a submodule within the genetic programming system.
Reference: <author> Rutenbar, R. A. </author> <year> 1993. </year> <title> Analog design automation: Where are we? Where are we going? Proceedings of the l5th IEEE CICC. </title> <address> New York: </address> <publisher> IEEE. </publisher> <editor> 13.1.1-13.1.8. Sanchez, Eduardo and Tomassini, Marco (editors). </editor> <booktitle> 1996.Towards Evolvable Hardware. Lecture Notes in Computer Science, </booktitle> <volume> Volume 1062. </volume> <publisher> Berlin: Springer-Verlag. </publisher>
Reference-contexts: The design of analog circuits and mixed analog-digital circuits has not proved to be amenable to automation <ref> (Rutenbar 1993) </ref>. CMOS operational amplifier (op amp) circuits have been designed using a modified version of the genetic algorithm (Kruiskamp 1996; Kruiskamp and Leenaerts 1995); however, the topology of each op amp was one of 24 topologies based the conventional human-designed stages of an op amp.
Reference: <author> Thompson, Adrian. </author> <year> 1996. </year> <title> Silicon evolution. </title> <editor> In Koza, John R., Goldberg, David E., Fogel, David B., and Riolo, Rick L. (editors). </editor> <booktitle> 1996. Genetic Programming 1996: Proceedings of the First Annual Conference, </booktitle> <month> July 28-31, </month> <year> 1996, </year> <institution> Stanford University. </institution> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
References-found: 20

