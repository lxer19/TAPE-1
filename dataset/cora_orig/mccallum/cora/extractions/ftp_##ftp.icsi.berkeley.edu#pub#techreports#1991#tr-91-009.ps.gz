URL: ftp://ftp.icsi.berkeley.edu/pub/techreports/1991/tr-91-009.ps.gz
Refering-URL: http://www.icsi.berkeley.edu/techreports/1991.html
Root-URL: http://www.icsi.berkeley.edu
Title: Bumptrees for Efficient Function, Constraint, and Classification Learning  
Author: Stephen M. Omohundro 
Address: 1947 Center Street, Suite 600 Berkeley, California 94704  
Affiliation: International Computer Science Institute  
Abstract: A new class of data structures called bumptrees is described. These structures are useful for efficiently implementing a number of neural network related operations. An empirical comparison with radial basis functions is presented on a robot arm mapping learning task. Applications to density estimation, classification, and constraint representation and learning are also outlined. 
Abstract-found: 1
Intro-found: 1
Reference: <author> L. Devroye and L. Gyorfi. </author> <title> (1985) Nonparametric Density Estimation: The L1 View, </title> <address> New York: </address> <publisher> Wiley. </publisher>
Reference-contexts: Perhaps the most fundamental such task is density estimation which attempts to model a probability distribution on a space on the basis of samples drawn from that distribution. One powerful technique is adaptive kernel estimation <ref> (Devroye and Gyorfi, 1985) </ref>. The estimated distribution is represented as a Gaussian mixture in which a spherically symmetric Gaussian is centered on each data point and the widths are chosen according to the local density of samples.
Reference: <author> J. H. Friedman, J. L. Bentley and R. A. Finkel. </author> <title> (1977) An algorithm for finding best matches in logarithmic expected time. </title> <journal> ACM Trans. Math. </journal> <volume> Software 3 </volume> <pages> 209-226. </pages>
Reference-contexts: There are several approaches to choosing a tree structure to build over given leaf data. Each of the algorithms studied for balltree construction in (Omohundro, 1989) may be applied to the more general task of bumptree construction. The fastest approach is analogous to the basic k-d tree construction technique <ref> (Friedman, et. al, 1977) </ref> and is top down and recursively splits the functions into two sets of almost the same size. This is what is used in the simulations described in the next section.
Reference: <author> B. </author> <title> Mel. (1990) Connectionist Robot Motion Planning, A Neurally-Inspired Approach to Visually-Guided Reaching, </title> <address> San Diego, CA: </address> <publisher> Academic Press. </publisher>
Reference: <author> S. M. Omohundro. </author> <title> (1987) Efficient algorithms with neural network behavior. </title> <booktitle> Complex Systems 1 </booktitle> <pages> 273-347. </pages>
Reference: <author> S. M. Omohundro. </author> <title> (1989) Five balltree construction algorithms. </title> <institution> International Computer Science Institute Technical Report TR-89-063. </institution>
Reference-contexts: next section are based on bumptrees with this kind of internal node function. a c f a b c d e f B E B D 2-d leaf functions tree structure tree functions Ball supported bump a b c d B A a c 1987), B) and C) for balltrees <ref> (Omohundro, 1989) </ref>, and D) for Sproulls higher performance kd-tree (Sproull, 1990). There are several approaches to choosing a tree structure to build over given leaf data. Each of the algorithms studied for balltree construction in (Omohundro, 1989) may be applied to the more general task of bumptree construction. <p> bump a b c d B A a c 1987), B) and C) for balltrees <ref> (Omohundro, 1989) </ref>, and D) for Sproulls higher performance kd-tree (Sproull, 1990). There are several approaches to choosing a tree structure to build over given leaf data. Each of the algorithms studied for balltree construction in (Omohundro, 1989) may be applied to the more general task of bumptree construction. The fastest approach is analogous to the basic k-d tree construction technique (Friedman, et. al, 1977) and is top down and recursively splits the functions into two sets of almost the same size.
Reference: <author> S. M. Omohundro. </author> <title> (1990) Geometric learning algorithms. </title> <journal> Physica D 42 </journal> <pages> 307-321. </pages>
Reference-contexts: does a good job of discovering and representing linear parts of a map with a single model and putting many higher resolution models in areas with strong nonlinearities. 3 EXTENSIONS TO OTHER TASKS The bumptree structure is useful for implementing efficient versions of a variety of other geometric learning tasks <ref> (Omohundro, 1990) </ref>. Perhaps the most fundamental such task is density estimation which attempts to model a probability distribution on a space on the basis of samples drawn from that distribution. One powerful technique is adaptive kernel estimation (Devroye and Gyorfi, 1985).
Reference: <author> R. F. Sproull. </author> <title> (1990) Refinements to Nearest-Neighbor Searching in k-d Trees. Sutherland, </title> <note> Sproull and Associates Technical Report SSAPP #184c, to appear in Algorithmica. </note>
Reference-contexts: Such a function may be evaluated extremely efficiently on a data point and so is useful for fast pruning operations. Such evaluations are effectively what is used in <ref> (Sproull, 1990) </ref> to implement fast nearest neighbor computation. The bumptree structure generalizes this kind of query to allow for different scales for different points and directions. <p> of internal node function. a c f a b c d e f B E B D 2-d leaf functions tree structure tree functions Ball supported bump a b c d B A a c 1987), B) and C) for balltrees (Omohundro, 1989), and D) for Sproulls higher performance kd-tree <ref> (Sproull, 1990) </ref>. There are several approaches to choosing a tree structure to build over given leaf data. Each of the algorithms studied for balltree construction in (Omohundro, 1989) may be applied to the more general task of bumptree construction.
References-found: 7

