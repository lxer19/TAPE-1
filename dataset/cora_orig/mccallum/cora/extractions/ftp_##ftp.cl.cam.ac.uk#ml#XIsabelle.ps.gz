URL: ftp://ftp.cl.cam.ac.uk/ml/XIsabelle.ps.gz
Refering-URL: ftp://ftp.cl.cam.ac.uk/ml/index.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: XIsabelle: A Graphical User Interface to the Isabelle Theorem Prover  
Author: A. Cant and M. A. Ozols 
Note: (DRAFT)  
Date: 12 October 1995  
Address: PO Box 1500 Salisbury SOUTH AUSTRALIA 5108  
Affiliation: Information Technology Division Electronics and Surveillance Research Laboratory Defence Science and Technology Organisation  
Abstract: Interactive theorem provers such as Isabelle are powerful tools, but are difficult and time-consuming to learn. If a suitable Graphical User Interface (GUI) is provided for such a tool, it can speed up the learning process considerably, leading to greater productivity for users of the tool, and increased takeup in industry. In this paper, we discuss the user-interface aspects of Isabelle, and formulate requirements for a GUI. XIsabelle, a GUI for Isabelle, is described in detail. XIsabelle uses standard easily available methods for providing X Windows wrappers to interactive non-GUI programs, namely Tcl/Tk and the program Expect. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Craigen, S. Gerhart, and T. Ralston. </author> <title> An International Survey of Industrial Applications of Formal Methods. Volume 1 : Purpose, Approach, Analysis and Conclusions. Volume 2 : Case Studies. </title> <type> Report, </type> <institution> National Institute of Standards and Technology, Gaithersburg, MD 20899 USA, </institution> <year> 1993. </year>
Reference: [2] <institution> UK Ministry of Defence. Interim Defence Standard 00-55: The Procurement of Safety-Critical Software in Defence Equipment, </institution> <month> April </month> <year> 1991. </year>
Reference: [3] <author> UK Ministry of Defence. </author> <title> Draft Defence Standard 00-56: Hazard Analysis and Safety Classification of the Computer and Programmable Electronic System Elements of Defence Equipment, </title> <month> February </month> <year> 1993. </year>
Reference: [4] <institution> Australian Ordnance Council, Department of Defence, Canberra. Pillar Proceeding 223.93: Assessment of Munition Related Safety Critical Computing Systems, </institution> <month> August </month> <year> 1993. </year>
Reference: [5] <institution> Department of Defense DoD 5200.28-STD. Trusted Computer System Evaluation Criteria, </institution> <month> August </month> <year> 1985. </year>
Reference: [6] <author> Michael J. C. Gordon and Thomas F. Melham. </author> <title> Introduction to HOL: A theorem proving environment for higher order logic. </title> <publisher> Cambridge University Press, </publisher> <year> 1993. </year>
Reference: [7] <author> L. C. Paulson. </author> <title> Introduction to Isabelle, The Isabelle Reference Manual and Isabelle's Object Logics. </title> <institution> Computer Laboratory, University of Cambridge, </institution> <month> June </month> <year> 1993. </year>
Reference: [8] <author> D. Craigen. </author> <title> Strengths and Weaknesses of Program Verification Systems. </title> <address> Stras-bourg, France, </address> <month> 9-11 September </month> <year> 1987. </year> <booktitle> 1st European Software Engineering Conference, </booktitle> <publisher> Springer-Verlag. </publisher>
Reference: [9] <author> A. Cant and M. A. Ozols. </author> <title> An Approach to Automated Reasoning About Operational Semantics. </title> <institution> Research Report RR-0008, Electronics and Surveillance Research Laboratory, DSTO, </institution> <year> 1994. </year>
Reference: [10] <author> W. A. Halang, B. Kramer, and N. Volker. </author> <title> Formally Verified Building Blocks in Functional Logic Diagrams for Emergency Shutdown System Design. </title> <booktitle> High Integrity Systems, </booktitle> <volume> 1(3) </volume> <pages> 277-286, </pages> <year> 1995. </year>
Reference: [11] <author> D. Craigen et al. </author> <title> EVES: An Overview. </title> <note> Conference Paper CP-91-5402-43, </note> <institution> Odyssey Research Associates, </institution> <address> 265 Carling Avenue, Suite 506, Ottawa, Ontario, </address> <month> March </month> <year> 1991. </year>
Reference: [12] <author> C. B. Jones, K.D. Jones, P. A. Lindsay, and R. Moore. </author> <title> Mural: A Formal Development Support System. </title> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference-contexts: To finish on a light-hearted note, we have found that carrying out theory and proof development using Isabelle usually requires using the `spare-feet-on-the-desk paradigm' which has been stressed by Ritchie et al. for the Mural prover <ref> [12] </ref>. It can be very hard for one person to get through complex proofs alone; we have found that having one person `drive' the proof, while another makes suggestions when needed, is an effective way of 40 making progress.
Reference: [13] <author> D Clement. GIPE: </author> <title> Generation of Interactive Programming Environments. </title> <journal> Technique et Science Informatiques, </journal> <volume> 9 </volume> <pages> 157-165, </pages> <year> 1990. </year>
Reference: [14] <author> L. Thery, Y. Bertot, and G. Kahn. </author> <title> Real Theorem Provers Deserve Real User-Interfaces. </title> <booktitle> In Proceedings of Fifth Symposium on Software Development Environments. ACM, </booktitle> <year> 1992. </year> <month> 43 </month>
Reference: [15] <author> S. Finn and M. Crawley. </author> <title> Using Poly/ML 2.05M. Abstract Hardware Ltd, </title> <type> Building 2, </type> <institution> The Science Park, Brunel University,Uxbridge, Middlesex.UB8 3PQ, U.K., </institution> <month> October </month> <year> 1993. </year>
Reference: [16] <author> J. K. Ousterhout. </author> <title> Tcl and the Tk Toolkit. </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference: [17] <author> D. Libes. </author> <title> Exploring Expect. </title> <publisher> O'Reilly and Associates, </publisher> <year> 1995. </year>
Reference: [18] <author> D. Libes. </author> <title> X Wrappers for Non-Graphic Interactive Programs. </title> <booktitle> In Proceedings of Xhibition '94, </booktitle> <year> 1994. </year>
Reference: [19] <author> L. C. Paulson. </author> <title> The Foundation of a Generic Theorem Prover. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 5 </volume> <pages> 363-397, </pages> <year> 1989. </year>
Reference: [20] <author> L. C. Paulson. </author> <title> Isabelle: The Next 700 Theorem Provers. Logic and Computer Science (P Odifreddi, </title> <publisher> ed), </publisher> <pages> pages 361-385, </pages> <year> 1990. </year>
Reference: [21] <author> L. C. Paulson. </author> <title> Logic and Computation: Interactive Proof with Cambridge LCF. </title> <publisher> Cambridge University Press, </publisher> <year> 1987. </year>
Reference: [22] <author> L. C. Paulson. </author> <title> A Fixedpoint Approach to Implementing (Co)Inductive Definitions. </title> <type> Report, </type> <institution> University of Cambridge, </institution> <year> 1994. </year>
Reference: [23] <author> Imperial Software Technology, </author> <title> Cambridge UK. The Z User Manual (Volume I: User Guide and Tutorial, Volume II: Z Language Reference, Volume III: Programmer's Reference Manual), </title> <booktitle> 1995. </booktitle> <pages> 44 </pages>
Reference-contexts: The feature is found in the Balzac/Zola tool <ref> [23] </ref>. 8.6 Final Comments The authors are very conscious that XIsabelle is a tool which can grow in any number of possible ways. Valuable lessons can be learned from related tools as they are developed.
References-found: 23

