URL: ftp://ftp.cs.umass.edu/pub/lesser/winograd-icassp95-c++.ps
Refering-URL: http://dis.cs.umass.edu/research/ipus/ipus-pubs.html
Root-URL: 
Title: A C SOFTWARE ENVIRONMENT FOR THE DEVELOPMENT OF EMBEDDED SIGNAL PROCESSING SYSTEMS  
Author: Joseph M. Winograd and S. Hamid Nawab 
Address: Boston, MA 02215  
Affiliation: ECS Department, Boston University,  
Abstract: A new environment for the rapid development of embedded signal processing software is described. The environment encourages incremental design via modular and hierarchical structuring of applications and additional features are included which support the prototyping, testing, implementation, and integration stages of the system design cycle. Written in C ++ , the environment is comprised of a scripting language for the definition of system components and a class library which includes a basic application framework. Support is provided for incorporating both numeric and symbolic signal representations, as well as integrating multiple signal processing techniques within a single application. A sophisticated control mechanism allows dynamic scheduling of signal processing operations according to algorithmically defined schema. Signal processing applications developed in this environment are themselves objects and are suitable for embedding within a larger overall system. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Buck, S. Ha, E. A. Lee, and D. G. Messerschmitt. Ptolemy: </author> <title> A framework for simulating and prototyping heterogeneous systems. </title> <journal> Int. J. Comp. Sim., </journal> <volume> 4 </volume> <pages> 155-182, </pages> <month> April </month> <year> 1994. </year>
Reference-contexts: 1. INTRODUCTION This paper describes a new software environment for the rapid development of embedded signal processing systems which offers a unique combination of features with respect to currently available design tools such as Ptolemy <ref> [1] </ref>, ADE [2], and Matlab [3]. The environment presents a unified platform in which embedded signal processing applications which require sophisticated control can be designed, proto-typed, tested, and implemented. <p> The ability to perform data visualization at all stages of processing can greatly simplify this procedure. Notably lacking from Matlab, though, is support for object-oriented design and the migration of prototypes outside of the interpreted Matlab environment. Ptolemy <ref> [1] </ref> represents the current state-of-the-art of design tools for signal processing systems. It fully embraces object-oriented design principles using C ++ , supports abstract signal representations through object polymorphism in a similar manner to ICP, and offers a graphical meta-language for system design.
Reference: [2] <author> M. M. Covell, C. S. Myers, and A. V. Oppenheim. </author> <title> Computer-aided algorithm design and rearrangement. </title> <editor> In A. V. Oppenheim and S. H. Nawab, editors, </editor> <booktitle> Symbolic and Knowledge-Based Signal Processing, </booktitle> <pages> pages 30-87. </pages> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1992. </year>
Reference-contexts: 1. INTRODUCTION This paper describes a new software environment for the rapid development of embedded signal processing systems which offers a unique combination of features with respect to currently available design tools such as Ptolemy [1], ADE <ref> [2] </ref>, and Matlab [3]. The environment presents a unified platform in which embedded signal processing applications which require sophisticated control can be designed, proto-typed, tested, and implemented. <p> We have already pointed out several benefits of taking an object-oriented approach to the design of complex signal processing systems. The application of this design philosophy to signal processing domains was pioneered by a series of projects at MIT which culminated in the development of the ADE system <ref> [2] </ref>. A focal point of this work was the development of a well-defined concept of the "signal as object." Related work by Milios and Nawab [7] proposed the use of numeric and symbolic representations for encoding signals in a hierarchy of levels of abstraction, as is done by ICP.
Reference: [3] <author> The MathWorks, Inc., Natick, MA. </author> <title> Matlab User's Guide, </title> <month> August </month> <year> 1992. </year>
Reference-contexts: 1. INTRODUCTION This paper describes a new software environment for the rapid development of embedded signal processing systems which offers a unique combination of features with respect to currently available design tools such as Ptolemy [1], ADE [2], and Matlab <ref> [3] </ref>. The environment presents a unified platform in which embedded signal processing applications which require sophisticated control can be designed, proto-typed, tested, and implemented. <p> The Matlab <ref> [3] </ref> system provides an interactive environment for prototyping and testing of system components. One important feature shared by Matlab and ICP is the support for graphical display of signals during debugging sessions. The data-intensive nature of most signal processing applications can make text-based error diagnosis a difficult task.
Reference: [4] <author> S. H. Nawab and V. Lesser. </author> <title> Integrated processing and understanding of signals. </title> <editor> In A. V. Oppenheim and S. H. Nawab, editors, </editor> <booktitle> Symbolic and Knowledge-Based Signal Processing, </booktitle> <pages> pages 251-285. </pages> <publisher> Prentice-Hall, </publisher> <address> En-glewood Cliffs, NJ, </address> <year> 1992. </year>
Reference-contexts: An object-oriented design philosophy is employed throughout the environment, enabling applications to be constructed and tested in an incremental manner. The environment has been used to develop systems employing the IPUS signal processing model <ref> [4] </ref> and has therefore been entitled the IPUS C ++ Platform (ICP). This work was sponsored in part by the Department of the Navy, Office of the Chief of Naval Research, contract number N00014-93-1-0686 as part of the Advanced Research Projects Agency's RASSP program. <p> Graphical displays of these representations, generated using the trace facility of ICP, are shown in Fig. 2 (a)-(d). Algorithms for producing these successive representations of the radar data have been adapted to a control strategy for signal reprocessing <ref> [4] </ref> and encoded as a set of control plans.
Reference: [5] <institution> CenterLine Software, Inc., Cambridge, MA. AT&T C++ Language System, </institution> <year> 1990. </year>
Reference-contexts: C ++ was selected for its efficiency, portability, reverse compatibility with the C language and the potential for porting applications to DSP hardware through the use of target independent C ++ to C translators (such as one of the widely used derivatives of AT&T's cfront <ref> [5] </ref>) in conjunction with C language cross-compilers. ICP provides a library of base classes with a rich set of default behaviors. Mechanisms are provided for all system level features such as execution of control plans, invocation of signal processing algorithms, and organization of shared data objects.
Reference: [6] <author> N. Carver and V. Lesser. </author> <title> A planner for the control of problem-solving systems. </title> <journal> IEEE Trans. on Sys., Man, and Cybernetics, </journal> <volume> 23(6) </volume> <pages> 1519-1536, </pages> <year> 1993. </year>
Reference-contexts: This flexibility is provided through the use of a control mechanism (or planner) based on the RESUN control paradigm <ref> [6] </ref>. The planner allows for both strategic (plan-based) and opportunistic (reactive) control to be applied.
Reference: [7] <author> E. E. Milios and S. H. Nawab. </author> <title> Signal abstractions in signal processing software. </title> <journal> IEEE Trans. Acoust. Speech and Signal Processing, </journal> <volume> 37(6) </volume> <pages> 913-928, </pages> <month> June </month> <year> 1989. </year>
Reference-contexts: ICP's architectural model casts the process of generating the output associated with a given input signal as a series of transformations between multiple abstract signal representations <ref> [7] </ref>. These representations may be strictly numeric, such as raw signal data or the results of a DFT, or symbolic, as in the determination of a radar return cell as background noise, clutter, or target. All signal representations are stored on a global, hierarchical blackboard data structure [8]. 4. <p> A focal point of this work was the development of a well-defined concept of the "signal as object." Related work by Milios and Nawab <ref> [7] </ref> proposed the use of numeric and symbolic representations for encoding signals in a hierarchy of levels of abstraction, as is done by ICP. In ADE, the automation of certain design tasks is facilitated by the symbolic encoding of properties of the component systems.
Reference: [8] <author> N. Carver and V. Lesser. </author> <title> Blackboard systems for knowledge-based signal processing. </title> <editor> In A. V. Op-penheim and S. H. Nawab, editors, </editor> <booktitle> Symbolic and Knowledge-Based Signal Processing, </booktitle> <pages> pages 205-250. </pages> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1992. </year>
Reference-contexts: These representations may be strictly numeric, such as raw signal data or the results of a DFT, or symbolic, as in the determination of a radar return cell as background noise, clutter, or target. All signal representations are stored on a global, hierarchical blackboard data structure <ref> [8] </ref>. 4. APPLICATION We have used ICP to construct a system for the analysis of radar signals based on techniques from [9, 10, 11]. The problem addressed by the system is the detection and separation of clutter patches of homogeneous probability distribution within range-azimuth returns of a non-imaging radar.
Reference: [9] <author> M. Slamani. </author> <title> A New Approach to Radar Detection Based on the Partitioning and Statistical Characterization of the Surveillance Volume. </title> <type> Ph.D. dissertation, </type> <institution> Syracuse Univ., </institution> <year> 1994. </year>
Reference-contexts: All signal representations are stored on a global, hierarchical blackboard data structure [8]. 4. APPLICATION We have used ICP to construct a system for the analysis of radar signals based on techniques from <ref> [9, 10, 11] </ref>. The problem addressed by the system is the detection and separation of clutter patches of homogeneous probability distribution within range-azimuth returns of a non-imaging radar. The input to the application is a record of the amplitude of radar pulse returns across a partitioned range-azimuth plane. <p> Algorithms for producing these successive representations of the radar data have been adapted to a control strategy for signal reprocessing [4] and encoded as a set of control plans. Within these plans, the map representation is produced from the return representation by application of a technique from <ref> [9] </ref> in which the parameters to a series of morphological operations are iteratively refined until satisfactory segregation of clutter regions from background noise is achieved. Clutter regions are produced from the map representation using a recursive nearest-neighbor region growing algorithm.
Reference: [10] <author> M. Rangaswamy et al. </author> <title> Signal detection in correlated Gaussian and non-Gaussian radar clutter. </title> <type> Technical Report RL-TR-93-79, </type> <institution> Rome Laboratory Air Force Material Command, Griffiss Air Force Base, </institution> <address> NY, </address> <month> May </month> <year> 1993. </year>
Reference-contexts: All signal representations are stored on a global, hierarchical blackboard data structure [8]. 4. APPLICATION We have used ICP to construct a system for the analysis of radar signals based on techniques from <ref> [9, 10, 11] </ref>. The problem addressed by the system is the detection and separation of clutter patches of homogeneous probability distribution within range-azimuth returns of a non-imaging radar. The input to the application is a record of the amplitude of radar pulse returns across a partitioned range-azimuth plane. <p> Clutter regions are produced from the map representation using a recursive nearest-neighbor region growing algorithm. Patch level representations are produced from the clutter regions through the use of Oz-turk's algorithm <ref> [10] </ref> for distribution estimation. Statistical characterizations are made independently for a series of non-overlapping 10-by-10 cell tiles within each clutter region to detect possible homogeneous patches.
Reference: [11] <author> D. Weiner. </author> <title> Private communications, 1991. (a) (b) portion of the goal/plan/subgoal hierarchy from a radar clutter analysis application. (a) (b) level (d) Patch level. </title>
Reference-contexts: All signal representations are stored on a global, hierarchical blackboard data structure [8]. 4. APPLICATION We have used ICP to construct a system for the analysis of radar signals based on techniques from <ref> [9, 10, 11] </ref>. The problem addressed by the system is the detection and separation of clutter patches of homogeneous probability distribution within range-azimuth returns of a non-imaging radar. The input to the application is a record of the amplitude of radar pulse returns across a partitioned range-azimuth plane.
References-found: 11

