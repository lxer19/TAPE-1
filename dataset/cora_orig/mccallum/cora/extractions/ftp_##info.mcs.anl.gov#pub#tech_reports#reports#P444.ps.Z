URL: ftp://info.mcs.anl.gov/pub/tech_reports/reports/P444.ps.Z
Refering-URL: http://www.mcs.anl.gov/publications/abstracts/abstracts94.htm
Root-URL: http://www.mcs.anl.gov
Title: New Techniques for Parallel Simulation of High-Temperature Superconductors  
Author: Lori Freitag Mark Jones Paul Plassmann 
Address: Argonne, IL 60439 Knoxville, TN 37996 Argonne, IL 60439  
Affiliation: MCS Division Computer Science Department MCS Division Argonne National Lab. University of Tennessee Argonne National Lab.  
Abstract: In this paper we discuss several new techniques used for the simulation of high-temperature superconductors on parallel computers. We introduce an innovative methodology to study the effects of temperature fluctuations on the vortex lattice configuration of these materials. We have found that the use of uniform orthogonal meshes results in several limitations. To address these limitations, we consider nonorthogonal meshes and describe a new discrete formulation that solves the difficult problem of maintaining gauge invariance on nonorthogonal meshes. With this discretization, adaptive refinement strategies are used to concentrate grid points where error contributions are large (in this case, near vortex cores). We describe the algorithm used for the parallel implementation of this refinement strategy, and we present computational results obtained on the Intel DELTA. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Berger and S. Bokhari. </author> <title> A partitioning strategy for nonuniform problems on multiprocessors. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-36(5):570-580, </volume> <year> 1987. </year>
Reference-contexts: Although the eigenvectors generally do not need to be found to much accuracy, spectral methods fail to utilize the geometric information known about the vertices of the mesh. Geometric information is used in bisection partitioning algorithms such as the orthogonal recursive bisection (ORB) algorithm <ref> [1] </ref>. This algorithm makes an initial cut to divide the grid points in half. Orthogonal cuts are then made recursively in the new subdomains until the grid points are evenly distributed among the processors.
Reference: [2] <author> Lori A. Freitag, Mark T. Jones, and Paul E. Plass-mann. </author> <booktitle> New advances in the modeling of high-temperature superconductors. In 1994 International Simulation Conference, "Grand Challenges in Computer Simulation", </booktitle> <address> La Jolla, California, </address> <month> April 11-15, </month> <year> 1994. </year>
Reference-contexts: We found that the standard finite-difference and finite-element approximation techniques do not maintain gauge invariance on nonorthogonal meshes as defined above (see <ref> [2] </ref>). Therefore, we have developed a new discrete formulation for use on nonorthogonal meshes that ensures that a discrete version of gauge invariance is preserved.
Reference: [3] <author> J. Garner, M. Spanbauer, R. Benedek, K. Strand-burg, S. Wright, and P. Plassmann. </author> <title> Critical fields of Josephson-coupled superconducting multilayers. </title> <journal> Physical Review B, </journal> <volume> 45 </volume> <pages> 7973-7983, </pages> <month> April </month> <year> 1992. </year> <title> pinned to a square lattice configuration on 64 processors of the Intel DELTA </title>
Reference-contexts: As a result of the gauge symmetries of the problem, the Hessian is highly singular at the solution (approximately one-fourth of the eigenvalues are zero in two dimensions), and we include the damping term, fl i , to improve the convergence of the method as described in Garner et al. <ref> [3] </ref>. The computational kernel of this technique is the solution of the damped Newton system|a large, sparse linear system of equations. We do not explicitly invert this system but use an iterative solver to obtain an approximate (inexact) solution to the Newton system. <p> Although this is still a computationally intensive operation, it is tractable for the current high-performance computing architectures. We start with an orthogonal mesh and use the standard finite difference discretization of the free energy functional (2)-(5) (see, for example, <ref> [3] </ref>). To find the characteristic energies that most affect the partition function evaluation for a sample containing two vortices, we use asymptotic analysis. The results for the smallest four nonzero eigenvalues are shown in Figure 1. These are the smallest nonzero eigenvalues of the Hessian associated with each problem size.
Reference: [4] <author> Mark T. Jones and Paul E. Plassmann. </author> <title> Parallel algorithms for the adaptive refinement and partitioning of unstructured meshes. </title> <booktitle> In Scalable High Performance Computing Conference, </booktitle> <address> Knoxville,Tennessee, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: We may circumvent these problems by using adaptive mesh refinement on nonorthogonal meshes. To take advantage of the computing power and large memory capacity of state-of-the-art distributed memory architectures, we have developed the algorithms and software necessary to perform adaptive refinement on parallel computers <ref> [4] </ref>. We refine elements of the mesh according to proximity to the vortex core. In this way, grid points are concentrated where the solution changes rapidly and are relatively sparsely placed in areas where the solution is essentially constant. <p> We note that finding I k requires no communication, since each processor stores the triangle neighbor information. Using independent sets, we now describe an algorithm that avoids the synchronization problems mentioned above and has a provably good run time (for a complete description of this algorithm see <ref> [4] </ref>). k = 0 Based on local error estimates, let Q 0 be the set of triangles initially marked for refinement While Q k 6= do Choose I k 2 D from Q k Simultaneously refine the triangles in I k Distribute updated element information k = k + 1 Q
Reference: [5] <author> Mark T. Jones and Paul E. Plassmann. </author> <title> Block-Solve v1.0: Scalable library software for the parallel solution of sparse linear systems. </title> <type> ANL Report ANL-92/46, </type> <institution> Mathematics and Computer Science Division, Argonne National Laboratory, Argonne, Ill., </institution> <year> 1992. </year>
Reference-contexts: We do not explicitly invert this system but use an iterative solver to obtain an approximate (inexact) solution to the Newton system. The BlockSolve package developed at Argonne National Laboratory by Mark Jones and Paul Plass-mann <ref> [5] </ref> is used for this purpose. 2.2 Fluctuation calculations Given that one can compute minimizers of the free energy functional using a Newton iteration, we note 2 that it is possible to incorporate the effects of tempera-ture into the model.
Reference: [6] <author> Mark T. Jones and Paul E. Plassmann. </author> <title> Computation of equilibrium vortex structures for type-II superconductors. </title> <journal> The International Journal of Supercomputer Applications, </journal> <volume> 7(2), </volume> <year> 1993. </year>
Reference-contexts: Using the standard discretization scheme on an orthogonal mesh, we have successfully modeled vortex lattice structure in three-dimensional superconducting materials for temperatures T &lt; T c . On the Intel DELTA, this approach obtained sustained computational rates of 4.26 gigaflops with 512 processors <ref> [6] </ref>. A problem of more current interest to physicists is the study of the effect of temperature fluctuations, T &gt; T c , on the vortex lattice configuration and structure.
Reference: [7] <author> Alex Pothen, Horst Simon, and Kang-Pu Liou. </author> <title> Partitioning sparse matrices with eigenvectors of graphs. </title> <journal> SIAM Journal on Matrix Analysis, </journal> <volume> 11 </volume> <pages> 430-452, </pages> <year> 1990. </year>
Reference-contexts: For unstructured adaptive meshes, however, the partitioning cannot be predetermined because it changes with each new refinement of the mesh. Several interesting techniques may be used to determine the partitioning of an unstructured mesh. Spectral methods (see <ref> [7] </ref>, for example) have the advantage of global access to information about the graph to find good separators at the cost of eigenvalue/eigenvector computation.
Reference: [8] <author> M. Rivara. </author> <title> Mesh refinement processes based on the generalized bisection of simplices. </title> <journal> SIAM Journal on Numerical Analysis, </journal> <volume> 21 </volume> <pages> 604-613, </pages> <year> 1984. </year>
Reference-contexts: As the maximum final angle of the mesh approaches , the interpolation error in the approximate solution increases. One refinement technique that guarantees mesh quality is the bisection algorithm of Rivara <ref> [8] </ref>. In 5 this algorithm, a triangle marked for refinement is di-vided by connecting the midpoint of the longest side to the opposite vertex.
Reference: [9] <author> I. Rosenberg and F. Stenger. </author> <title> A lower bound on the angles of triangles constructed by bisecting the longest side. </title> <journal> Mathematics of Computation, </journal> <volume> 29 </volume> <pages> 390-395, </pages> <year> 1975. </year>
Reference-contexts: In particular, the smallest angle of the k th mesh, k min , is greater than or equal to one-half of the smallest angle in the initial mesh 0 min <ref> [9] </ref>. Using this result, we may also choose to bisect a triangle selectively across a smaller side if the resulting angles are greater than 1 2 0 min and still maintain mesh quality.
References-found: 9

