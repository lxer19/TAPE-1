URL: ftp://ftp.cs.buffalo.edu/pub/tech-reports/95-41.ps.Z
Refering-URL: ftp://ftp.cs.buffalo.edu/pub/tech-reports/README.html
Root-URL: 
Title: Sparse Sets versus Complexity Classes  
Author: Jin-Yi Cai Mitsunori Ogihara 
Note: This is page 1 Printer: Opaque this  
Abstract: The study of sparse hard sets and sparse complete sets has been a central research area in complexity theory for nearly two decades. Recently new results using unexpected techniques have been obtained. They provide new and easier proofs of old theorems, proofs of new theorems that unify previously known results, resolutions of old conjectures, and connections to the fascinating world of randomization and derandom ization. In this article we give an exposition of this vibrant research area. 
Abstract-found: 1
Intro-found: 1
Reference: [AA95] <author> M. Agrawal and V. Arvind. </author> <title> Reductions of self-reducible sets to depth-1 weighted threshold circuit classes, and sparse sets. </title> <booktitle> In Proc. 10th Conf. on Structure in Complex. Theory, </booktitle> <pages> pages 264-276. </pages> <publisher> IEEE, </publisher> <month> June </month> <year> 1995. </year>
Reference-contexts: The theorem of Ogihara and Watanabe is proved. 4.1 Extensions The breakthrough by Ogihara and Watanabe has provoked a flurry of results about sparse hard/complete set problems <ref> [HL94, AHH + 93, AKM92b, AKM92a, AA95, RR92, OL93] </ref> (see [HOW92] for a survey). Below we state the best known results on polynomial time sparse hard sets for NP. <p> We note here that very recently, this part has been slightly strengthend by Agrawal and Arvind <ref> [AA95] </ref>: they showed that NP C ) P = NP holds for a circuit class C provably larger than the " P btt of P ctt " closure of sparse sets in Part 1.
Reference: [AHH + 93] <author> V. Arvind, Y. Han, L. Hemachandra, J. Kobler, A. Lozano, M. Mundhenk, M. Ogiwara, U. Schoning, R. Silvestri, and T. Thierauf. </author> <title> Reductions to sets of low information content. </title> <editor> In K. Ambos-spies, S. Homer, and U. Schoning, editors, </editor> <booktitle> Complexity Theory, </booktitle> <pages> pages 1-46. </pages> <publisher> Cambridge University Press, </publisher> <year> 1993. </year>
Reference-contexts: The theorem of Ogihara and Watanabe is proved. 4.1 Extensions The breakthrough by Ogihara and Watanabe has provoked a flurry of results about sparse hard/complete set problems <ref> [HL94, AHH + 93, AKM92b, AKM92a, AA95, RR92, OL93] </ref> (see [HOW92] for a survey). Below we state the best known results on polynomial time sparse hard sets for NP.
Reference: [AKM92a] <author> V. Arvind, J. Kobler, and M. Mundhenk. </author> <title> Lowness and the complexity of sparse and tally descriptions. </title> <booktitle> In Proc. 3rd Int'l Symp. on Alg. and Comput., </booktitle> <pages> pages 249-258. </pages> <note> Springer-Verlag Lecture Notes in Comp. Sci. #650, </note> <month> December </month> <year> 1992. </year> <title> 1. Sparse Sets versus Complexity Classes 27 </title>
Reference-contexts: The theorem of Ogihara and Watanabe is proved. 4.1 Extensions The breakthrough by Ogihara and Watanabe has provoked a flurry of results about sparse hard/complete set problems <ref> [HL94, AHH + 93, AKM92b, AKM92a, AA95, RR92, OL93] </ref> (see [HOW92] for a survey). Below we state the best known results on polynomial time sparse hard sets for NP. <p> Below we state the best known results on polynomial time sparse hard sets for NP. Theorem 4.2 1. [AKM92b] NP is included in the P btt -reducibility clo sure of the languages that are P ctt -reducible to sparse sets if and only if P = NP. 2. <ref> [AKM92a] </ref> Sparse P dtt -hard sets for NP exist only if PH = p 3. [HL94] Sparse P O (log n)-tt -hard sets for NP exist only if NP is in cluded in DTIME [2 O (log 2 n) ]. 16 Jin-Yi Cai, Mitsunori Ogihara Note that Part 1 in the
Reference: [AKM92b] <author> V. Arvind, J. Kobler, and M. Mundhenk. </author> <title> On bounded truth-table, conjunctive, and randomized reductions to sparse sets. </title> <booktitle> In Proc. 12th Symp. on Found. of Software Tech. and Theoret. Comp. Sci., </booktitle> <pages> pages 140-151. </pages> <note> Springer-Verlag Lecture Notes in Comp. Sci. #652, </note> <year> 1992. </year>
Reference-contexts: The theorem of Ogihara and Watanabe is proved. 4.1 Extensions The breakthrough by Ogihara and Watanabe has provoked a flurry of results about sparse hard/complete set problems <ref> [HL94, AHH + 93, AKM92b, AKM92a, AA95, RR92, OL93] </ref> (see [HOW92] for a survey). Below we state the best known results on polynomial time sparse hard sets for NP. <p> Below we state the best known results on polynomial time sparse hard sets for NP. Theorem 4.2 1. <ref> [AKM92b] </ref> NP is included in the P btt -reducibility clo sure of the languages that are P ctt -reducible to sparse sets if and only if P = NP. 2. [AKM92a] Sparse P dtt -hard sets for NP exist only if PH = p 3. [HL94] Sparse P O (log n)-tt
Reference: [AKS83] <author> M. Ajtai, J. Komlos, and E. Szemeredi. </author> <title> Sorting in c log n parallel steps. </title> <journal> Combinatorica, </journal> <volume> 3(1) </volume> <pages> 1-19, </pages> <year> 1983. </year>
Reference-contexts: There is no evidence that all these heavy duty computations can be accomplished in NC 1 . On the contrary, NC 1 is considered rather weak; it was the celebrated AKS sorting network <ref> [AKS83] </ref> that finally puts sorting in NC 1 . It appears that it would be overly optimistic to hope to do all that linear algebra in NC 1 .
Reference: [BCG + 95] <author> N. Bshouty, R. Cleve, R. Gavalda, S. Kannan, and C. Tamon. </author> <title> Oracles and queries that are sufficient for exact learning. Tech. Report TR95-015, </title> <booktitle> The Electronic Colloquium on Computational Complexity, </booktitle> <year> 1995. </year>
Reference-contexts: Corollary 2.1 If there exists a sparse set S 2 p 2 such that NP P T S, then PH = p Very recently, Bshouty et al. <ref> [BCG + 95] </ref> (see also [KW95]) show that polynomial size circuits are learnable in ZPP with equivalence queries and with additional queries to NP, from which it follows that polynomial size circuits for SAT is learnable in ZPP NP , and thus, sparse P T -hard sets for NP collapse the
Reference: [BDG88] <author> J. Balcazar, J. Daz, and J. Gabarro. </author> <title> Structural Complexity I. </title> <booktitle> EATCS Monographs in Theoretical Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1988. </year>
Reference-contexts: For instance, within NP, we can consider reducibilities P m , P btt . Within P, we can consider L m . We refer the readers to any standard textbook on definitions of complexity classes and reducibilities mentioned here, for example <ref> [BDG88] </ref>. The complexity classes mentioned above are all based on uniform complexity measures, where a Turing machine which has a code of a fixed length will handle all inputs of increasing length. This is the usual concept of an algorithm which solves a computational problem consisting of infinitely many instances. <p> For a survey of earlier results, see [Mah89, HOW92, You92]. The two questions raised here are fascinating because they link together both uniform complexity, in terms of a complexity class and a reducibility, and non-uniform complexity, via a sparse set. The P T -closure of sparse sets is known <ref> [BDG88] </ref> to be identical to the class of languages having polynomial-size circuits, and to P=poly|the class of languages decidable in polynomial time with short advice, introduced by Karp and Lipton [KL82]. <p> Sparse Sets versus Complexity Classes 5 2 Earlier results for Turing reductions 2.1 Sparse sets and polynomial size circuits We will start with a theorem attributed to A. Meyer [BH77], see also <ref> [BDG88, page 128] </ref>. Theorem 2.1 A set is in the closure of a sparse set under polynomial time Turing reducibility P T if and only if A has polynomial size circuits.
Reference: [Ber78] <author> P. Berman. </author> <title> Relationship between density and deterministic complexity of NP-complete languages. </title> <booktitle> In Proc. 5th Conf. on Automata, Lang. and Prog., </booktitle> <pages> pages 63-71. </pages> <note> Springer-Verlag Lecture Notes in Comp. Sci. #62, </note> <year> 1978. </year>
Reference-contexts: Theorem 3.1 There are no sparse NP-complete (or NP-hard) languages under P m if and only if NP 6= P. Mahaney's theorem was the culmination of considerable earlier efforts toward the sparse non-completeness conjecture of Berman and Hartmanis. In particular we mention that P. Berman <ref> [Ber78] </ref> was the first to obtain a partial result in this direction. He showed that NP-hard sets over one-letter alphabet exist if and only if P = NP. This was subsumed by a result of Fortune [For79], who showed that sparse coNP-hard sets collapse NP to P.
Reference: [BH77] <author> L. Berman and J. Hartmanis. </author> <title> On isomorphisms and density of NP and other complete sets. </title> <journal> SIAM J. Comput., </journal> <volume> 6(2) </volume> <pages> 305-322, </pages> <year> 1977. </year>
Reference-contexts: Sparse Sets versus Complexity Classes 3 collapses to its second level. The second major motivation for the study on sparse sets was the iso-morphism conjectures of Berman-Hartmanis for NP <ref> [BH77] </ref>, and the conjectures for P by Hartmanis [Har78]. In 1976, L. Berman and Hartmanis [BH77] showed that all NP-complete languages known at the time (such as those found in [GJ79]) under P m - reductions are isomorphic under one-to-one, onto, P-computable, and P-invertible functions on fl . <p> Sparse Sets versus Complexity Classes 3 collapses to its second level. The second major motivation for the study on sparse sets was the iso-morphism conjectures of Berman-Hartmanis for NP <ref> [BH77] </ref>, and the conjectures for P by Hartmanis [Har78]. In 1976, L. Berman and Hartmanis [BH77] showed that all NP-complete languages known at the time (such as those found in [GJ79]) under P m - reductions are isomorphic under one-to-one, onto, P-computable, and P-invertible functions on fl . They went on to conjecture that this is true for all NP-complete languages under P m . <p> The literature on this subject is vast, we refer readers to the bibliography for additional research not covered here. 1. Sparse Sets versus Complexity Classes 5 2 Earlier results for Turing reductions 2.1 Sparse sets and polynomial size circuits We will start with a theorem attributed to A. Meyer <ref> [BH77] </ref>, see also [BDG88, page 128]. Theorem 2.1 A set is in the closure of a sparse set under polynomial time Turing reducibility P T if and only if A has polynomial size circuits. <p> the optimality of these results in terms of oracles have been proven [Hel86, IM89, Kad89]. 3 Earlier results for many-one reductions 3.1 The isomorphism conjecture for NP As we mentioned earlier, one of the major motivations for the study of sparse sets is the isomorphism conjecture of Berman and Hartmanis <ref> [BH77] </ref>. It says that all NP-complete languages under P m are isomorphic. The conjecture will imply, among other things, NP 6= P. Berman and Hartmanis showed in 1976, that all known NP-complete languages at the time under polynomial time many-one reduction P m are 1. <p> It was observed in <ref> [BH77] </ref> that the usual NP-complete languages L, such as those found in [GJ79], all admit a padding function: : fl fi fl ! fl satisfying the following conditions: 1) jxj + jyj &lt; j (x; y)j, 2) given x and y, (x; y) is polynomial time computable, 3) given (x; y), <p> Thus, for a given reduction : A P m B, we can modify it to be x 7! B ((x); 1 jxj ), provided a padding function B exists for B. Suppose now there are two length increasing reductions : A P m B m A. Berman and Hartmanis <ref> [BH77] </ref> show how to obtain a polynomial time isomorphism between A and B. Denote by and respectively the alphabets over which the languages A and B are defined ( and could be identical of course). Define 0 = fl and 0 = fl .
Reference: [BvzGH82] <author> A. Borodin, J. von zur Gathen, and J. Hopcroft. </author> <title> Fast parallel matrix and GCD computations. </title> <journal> Inf. and Control, </journal> <volume> 52 </volume> <pages> 241-256, </pages> <year> 1982. </year>
Reference-contexts: Each one of these can be solved in log 2 n depth and poly (n) size using the algorithm due to Borodin, et al. <ref> [BvzGH82] </ref>. <p> After some ten years of continued progress, starting with the pioneer work of Csanky, culminating in the remarkable achievement of Mulmuley, it was shown ultimately that many tasks in linear algebra such as rank, determinant, inverse, etc. over arbitrary characteristic can be done in NC 2 <ref> [Csa76, BvzGH82, Chi85, Mul87] </ref>. There is no evidence that all these heavy duty computations can be accomplished in NC 1 . On the contrary, NC 1 is considered rather weak; it was the celebrated AKS sorting network [AKS83] that finally puts sorting in NC 1 .
Reference: [Chi85] <author> A. Chistov. </author> <title> Fast parallel calculation of the rank of matrices over a field of arbitrary characteristic. </title> <booktitle> In Proc. 5th Int'l Conf. on Fundamentals of Comput. Theory, </booktitle> <pages> pages 63-69. </pages> <note> Springer-Verlag Lecture Notes in Comp. Sci. 199, </note> <year> 1985. </year>
Reference-contexts: After some ten years of continued progress, starting with the pioneer work of Csanky, culminating in the remarkable achievement of Mulmuley, it was shown ultimately that many tasks in linear algebra such as rank, determinant, inverse, etc. over arbitrary characteristic can be done in NC 2 <ref> [Csa76, BvzGH82, Chi85, Mul87] </ref>. There is no evidence that all these heavy duty computations can be accomplished in NC 1 . On the contrary, NC 1 is considered rather weak; it was the celebrated AKS sorting network [AKS83] that finally puts sorting in NC 1 .
Reference: [CNS95] <author> J. Cai, A. Naik, and D. Sivakumar. </author> <title> On the existence of hard sparse sets under weak reductions. </title> <type> Tech. Report 95-31, </type> <institution> Department of Computer Science, State University of New York at Buffalo, Buffalo, </institution> <address> NY, </address> <month> July </month> <year> 1995. </year>
Reference-contexts: The algebraic approach presented here is rather powerful. Many additional results have been obtained including the Hartmanis conjecture for NL, probabilistic and other weaker reductions, and logspace bounded truth table reductions for P <ref> [CS95b, CNS95, vM95] </ref>. 6 Conclusions We have seen that the study of sparse sets shows great vitality. Significant progress is being made which provides unifying perspectives to known and new results, and reaches out to new territory with unexpected links to parallel computation and randomization.
Reference: [Cob65] <author> A. Cobham. </author> <title> The intrinsic computational difficulty of functions. </title> <editor> In Y. Bar-Hellel, editor, </editor> <booktitle> Proc. 1964 Int'l Cong. for Logic, Methodology, and Phil. of Sci., </booktitle> <pages> pages 24-30. </pages> <publisher> North Holland, </publisher> <address> Amsterdam, </address> <year> 1965. </year>
Reference-contexts: 1 Introduction Complexity theory is concerned with the quantitative limitation and power of computation. During the past several decades computational complexity theory developed gradually from its initial awakening <ref> [Rab59, Yam62, HS65, Cob65] </ref> to the current edifice of a scientific discipline that is rich in beautiful results, powerful techniques, fascinating research topics and conjectures, deep connections to other mathematical subjects, and of critical importance to everyday computing. The building blocks of complexity theory are the various complexity classes.
Reference: [Coo71] <author> S. Cook. </author> <title> The complexity of theorem proving procedures. </title> <booktitle> In Proc. 3rd Symp. on Theory of Comput., </booktitle> <pages> pages 151-158. </pages> <publisher> ACM Press, </publisher> <year> 1971. </year> <type> 28 Jin-Yi Cai, Mitsunori Ogihara </type>
Reference-contexts: Let L be an arbitrary language in 2 . We will design a p 2 -machine M to accept L, thus p p theorem follows from that. By Cook's theorem <ref> [Coo71] </ref>, there is a polynomial time function (; ), such that, L = fx j (8 p y) [(x; y) 2 SAT]g; where 8 p y ranges over all y of length some polynomial in the length of x, say jxj d .
Reference: [CS95a] <author> J. Cai and D. Sivakumar. </author> <title> The resolution of a Hartmanis conjecture. </title> <booktitle> In Proc. 36th Symp. on Found. of Comp. Sci. IEEE, </booktitle> <year> 1995. </year> <note> To appear. </note>
Reference-contexts: His proof then proceeds by solving CVP in DSPACE [log 2 n] with a clever searching procedure using the P-hard sparse set. This was improved by Cai and Sivakumar <ref> [CS95a] </ref>. The starting point of their proof is Ogihara's auxiliary language. Their proof consists of three stages. <p> Ogihara defined an ingenious auxiliary language, which is P-complete and has a certain built-in self-reducibility. The proof then proceeds by simulation of P in DSPACE [log 2 n] using the P-hard sparse set. This was followed by the decisive improvement of Cai and Sivaku-mar <ref> [CS95a] </ref> that resolved the conjecture for P. The Cai-Sivakumar proof uses algebra extensively. Parallel computation and randomization play a crucial role as well. The starting point is the language defined by Ogihara. This language enables one to set up linear equations to solve for CVP, the circuit value problem. <p> We omit the proof here. The interested reader can find it in <ref> [CS95a] </ref>. The randomized NC 2 algorithm By the above lemma, if in parallel we try polynomially many uniformly and independently chosen I, with high probability we will obtain a system of linear equations with rank deficiency at most log 2 p (n).
Reference: [CS95b] <author> J. Cai and D. Sivakumar. </author> <title> The resolution of a Hartmanis conjecture for NL. </title> <type> Manuscript, </type> <year> 1995. </year>
Reference-contexts: The Hart-manis conjecture for NL was also resolved: There are no sparse complete sets in NL under L m unless NL = LOGSPACE <ref> [CS95b] </ref>. The Cai-Sivakumar proof is highly algebraic. Under the hypothesis that a sparse hard set exists for P, it is shown that the P-complete circuit value problem CVP can be solved in NC 1 , modulo the reduction. <p> The algebraic approach presented here is rather powerful. Many additional results have been obtained including the Hartmanis conjecture for NL, probabilistic and other weaker reductions, and logspace bounded truth table reductions for P <ref> [CS95b, CNS95, vM95] </ref>. 6 Conclusions We have seen that the study of sparse sets shows great vitality. Significant progress is being made which provides unifying perspectives to known and new results, and reaches out to new territory with unexpected links to parallel computation and randomization.
Reference: [Csa76] <author> L. Csanky. </author> <title> Fast parallel matrix inversion algorithms. </title> <journal> SIAM J. Comput., </journal> <volume> 5(4) </volume> <pages> 618-623, </pages> <year> 1976. </year>
Reference-contexts: After some ten years of continued progress, starting with the pioneer work of Csanky, culminating in the remarkable achievement of Mulmuley, it was shown ultimately that many tasks in linear algebra such as rank, determinant, inverse, etc. over arbitrary characteristic can be done in NC 2 <ref> [Csa76, BvzGH82, Chi85, Mul87] </ref>. There is no evidence that all these heavy duty computations can be accomplished in NC 1 . On the contrary, NC 1 is considered rather weak; it was the celebrated AKS sorting network [AKS83] that finally puts sorting in NC 1 .
Reference: [FFK92] <author> S. Fenner, L. Fortnow, and S. Kurtz. </author> <title> The isomorphism conjecture holds relative to an oracle. </title> <booktitle> In Proc. 33rd Symp. on Found. of Comp. Sci., </booktitle> <pages> pages 30-39. </pages> <publisher> IEEE, </publisher> <month> October </month> <year> 1992. </year>
Reference-contexts: However, there is now considerable doubt whether the Berman-Hartmanis isomorphism conjecture is true [JY85]. The isomorphism conjecture is an active research topic with considerable work on the subject. (For the current status of the subject, see <ref> [FFK92, KMR90, You90] </ref>.) We will not go into this any further in this article. 3.2 Mahaney's theorem As typical NP-complete languages such as SAT are all exponentially dense, and polynomial time isomorphisms cannot change the density from exponential to polynomial, it follows from the isomorphism conjecture that no sparse set can
Reference: [For79] <author> S. Fortune. </author> <title> A note on sparse complete sets. </title> <journal> SIAM J. Comput., </journal> <volume> 8(3) </volume> <pages> 431-433, </pages> <year> 1979. </year>
Reference-contexts: This is a remarkable achievement, unifying many previous partial results. Their proof introduced the notion of a left-set which is very effective. We will demonstrate its usefulness by giving easier proofs of earlier results of Mahaney [Mah82] and Fortune <ref> [For79] </ref>. The issue of isomorphism for complete languages in P was also raised by Hartmanis in [Har78]. <p> In particular we mention that P. Berman [Ber78] was the first to obtain a partial result in this direction. He showed that NP-hard sets over one-letter alphabet exist if and only if P = NP. This was subsumed by a result of Fortune <ref> [For79] </ref>, who showed that sparse coNP-hard sets collapse NP to P. Note that if S 1 fl is NP-hard, then the complement 1 fl S of S within 1 fl becomes a coNP-hard sparse set. Theorem 3.2 Sparse coNP-hard sets exist if and only if P = NP.
Reference: [GJ79] <author> M. Garey and D. Johnson. </author> <title> Computers and intractability: A guide to the theory of NP-completeness. </title> <editor> W. H. </editor> <publisher> Freeman and Company, </publisher> <year> 1979. </year>
Reference-contexts: The second major motivation for the study on sparse sets was the iso-morphism conjectures of Berman-Hartmanis for NP [BH77], and the conjectures for P by Hartmanis [Har78]. In 1976, L. Berman and Hartmanis [BH77] showed that all NP-complete languages known at the time (such as those found in <ref> [GJ79] </ref>) under P m - reductions are isomorphic under one-to-one, onto, P-computable, and P-invertible functions on fl . They went on to conjecture that this is true for all NP-complete languages under P m . <p> It was observed in [BH77] that the usual NP-complete languages L, such as those found in <ref> [GJ79] </ref>, all admit a padding function: : fl fi fl ! fl satisfying the following conditions: 1) jxj + jyj &lt; j (x; y)j, 2) given x and y, (x; y) is polynomial time computable, 3) given (x; y), it is also polynomial time computable to extract x and y uniquely, <p> From a structural complexity point of view, the theorem of Berman and Hartmanis and their isomorphism conjecture, if true, are esthetically pleasing. If we consider polynomial time isomorphisms as merely renaming of inputs within polynomial time, then the theorem says that all these NP-complete problems in <ref> [GJ79] </ref>, while varied and fascinating combinatorially, are essentially one and the same problem. However, there is now considerable doubt whether the Berman-Hartmanis isomorphism conjecture is true [JY85].
Reference: [GNW90] <author> T. Gundermann, N. Nasser, and G. Wechsung. </author> <title> A survey of counting classes. </title> <booktitle> In Proc. 5th Conf. on Structure in Complex. Theory, </booktitle> <pages> pages 140-153. </pages> <publisher> IEEE, </publisher> <month> July </month> <year> 1990. </year>
Reference-contexts: Generally speaking, for every counting class in the sense of <ref> [GNW90] </ref>, sparse P btt -hard sets for the class collapse it within NP T coNP [OL93]. The story for modulo-based counting complexity classes such as P is slightly different, for it is not known whether the class contain NP or coNP.
Reference: [GS88] <author> J. Grollmann and A. Selman. </author> <title> Complexity measures for public-key cryptosystems. </title> <journal> SIAM J. Comput., </journal> <volume> 17(2) </volume> <pages> 309-335, </pages> <year> 1988. </year>
Reference-contexts: Miller [Mil76] where he defined the following set for a partial function f R f = f (x; y) j x 2 dom (f) and y f (x)g: Similar notions were also used in the study on public-key cryptosystems by Groll mann and Selman <ref> [GS88] </ref>. 12 Jin-Yi Cai, Mitsunori Ogihara where A consists of pairs h; i such that is a boolean formula, and is a satisfying assignment for .
Reference: [Har78] <author> J. Hartmanis. </author> <title> On log-tape isomorphisms of complete sets. </title> <journal> Theoret. Comput. Sci., </journal> <volume> 7(3) </volume> <pages> 273-286, </pages> <year> 1978. </year>
Reference-contexts: Sparse Sets versus Complexity Classes 3 collapses to its second level. The second major motivation for the study on sparse sets was the iso-morphism conjectures of Berman-Hartmanis for NP [BH77], and the conjectures for P by Hartmanis <ref> [Har78] </ref>. In 1976, L. Berman and Hartmanis [BH77] showed that all NP-complete languages known at the time (such as those found in [GJ79]) under P m - reductions are isomorphic under one-to-one, onto, P-computable, and P-invertible functions on fl . <p> Their proof introduced the notion of a left-set which is very effective. We will demonstrate its usefulness by giving easier proofs of earlier results of Mahaney [Mah82] and Fortune [For79]. The issue of isomorphism for complete languages in P was also raised by Hartmanis in <ref> [Har78] </ref>. Just as in the case of NP, he showed that all known P-complete languages under logspace computable many-one reduction L m are isomorphic under one-to-one, onto, logspace computable, and logspace invertible functions on fl . <p> This is the Hartmanis conjecture on the non-existence of sparse complete sets in P. A similar conjecture was also made by Hartmanis <ref> [Har78] </ref> for NL, the nondeterministic logspace. However, unlike in the NP case, for nearly two decades, Hartmanis's conjecture for P remained open with little progress until very recently.
Reference: [Hel86] <author> H. Heller. </author> <title> On relativized exponential and probabilistic complexity classes. </title> <journal> Inf. and Control, </journal> <volume> 71(3) </volume> <pages> 231-243, </pages> <year> 1986. </year>
Reference-contexts: Theorem 2.5 If sparse P T -complete sets exist for NP, then PH = P NP [log] . Improving the Karp-Lipton collapse to P = NP, or even NP = coNP appears hard. We note that the optimality of these results in terms of oracles have been proven <ref> [Hel86, IM89, Kad89] </ref>. 3 Earlier results for many-one reductions 3.1 The isomorphism conjecture for NP As we mentioned earlier, one of the major motivations for the study of sparse sets is the isomorphism conjecture of Berman and Hartmanis [BH77]. It says that all NP-complete languages under P m are isomorphic.
Reference: [HL94] <author> S. Homer and L. Longpre. </author> <title> On reductions of NP sets to sparse sets. </title> <journal> J. Comput. System Sci., </journal> <volume> 48(2) </volume> <pages> 324-336, </pages> <year> 1994. </year>
Reference-contexts: In general, however, a truth table reduction produces a truth table that is also dependent on the input. We will present a proof based on an idea of Homer and Longpre <ref> [HL94] </ref>. We will try to inductively build a pruning strategy that prunes any given set T of nodes at a fixed level of the assignment tree, given a fixed k-truth table ff. The k-tt strategy will utilize the (k 1)-tt strategy. <p> The theorem of Ogihara and Watanabe is proved. 4.1 Extensions The breakthrough by Ogihara and Watanabe has provoked a flurry of results about sparse hard/complete set problems <ref> [HL94, AHH + 93, AKM92b, AKM92a, AA95, RR92, OL93] </ref> (see [HOW92] for a survey). Below we state the best known results on polynomial time sparse hard sets for NP. <p> Theorem 4.2 1. [AKM92b] NP is included in the P btt -reducibility clo sure of the languages that are P ctt -reducible to sparse sets if and only if P = NP. 2. [AKM92a] Sparse P dtt -hard sets for NP exist only if PH = p 3. <ref> [HL94] </ref> Sparse P O (log n)-tt -hard sets for NP exist only if NP is in cluded in DTIME [2 O (log 2 n) ]. 16 Jin-Yi Cai, Mitsunori Ogihara Note that Part 1 in the above subsumes the Ogihara-Watanabe theorem.
Reference: [HOW92] <author> L. Hemachandra, M. Ogiwara, and O. Watanabe. </author> <title> How hard are sparse sets. </title> <booktitle> In Proc. 7th Conf. on Structure in Complex. Theory, </booktitle> <pages> pages 222-238. </pages> <publisher> IEEE, </publisher> <month> June </month> <year> 1992. </year>
Reference-contexts: Alternatively, having a sparse hard or complete set can be viewed as having a strong handle on the power of the complexity class. Many consequences are known assuming the existence of sparse hard sets. For a survey of earlier results, see <ref> [Mah89, HOW92, You92] </ref>. The two questions raised here are fascinating because they link together both uniform complexity, in terms of a complexity class and a reducibility, and non-uniform complexity, via a sparse set. <p> The theorem of Ogihara and Watanabe is proved. 4.1 Extensions The breakthrough by Ogihara and Watanabe has provoked a flurry of results about sparse hard/complete set problems [HL94, AHH + 93, AKM92b, AKM92a, AA95, RR92, OL93] (see <ref> [HOW92] </ref> for a survey). Below we state the best known results on polynomial time sparse hard sets for NP.
Reference: [HS65] <author> J. Hartmanis and R. Stearns. </author> <title> On the computational complexity of algorithms. </title> <journal> Trans. Amer. Math. Soc., </journal> <volume> 117 </volume> <pages> 285-306, </pages> <year> 1965. </year>
Reference-contexts: 1 Introduction Complexity theory is concerned with the quantitative limitation and power of computation. During the past several decades computational complexity theory developed gradually from its initial awakening <ref> [Rab59, Yam62, HS65, Cob65] </ref> to the current edifice of a scientific discipline that is rich in beautiful results, powerful techniques, fascinating research topics and conjectures, deep connections to other mathematical subjects, and of critical importance to everyday computing. The building blocks of complexity theory are the various complexity classes.
Reference: [IM89] <author> N. Immerman and S. Mahaney. </author> <title> Relativizing relativized computations. </title> <journal> Theoret. Comput. Sci., </journal> <volume> 68(3) </volume> <pages> 267-276, </pages> <year> 1989. </year>
Reference-contexts: Theorem 2.5 If sparse P T -complete sets exist for NP, then PH = P NP [log] . Improving the Karp-Lipton collapse to P = NP, or even NP = coNP appears hard. We note that the optimality of these results in terms of oracles have been proven <ref> [Hel86, IM89, Kad89] </ref>. 3 Earlier results for many-one reductions 3.1 The isomorphism conjecture for NP As we mentioned earlier, one of the major motivations for the study of sparse sets is the isomorphism conjecture of Berman and Hartmanis [BH77]. It says that all NP-complete languages under P m are isomorphic.
Reference: [JY85] <author> D. Joseph and P. Young. </author> <title> Some remarks on witness functions for non-polynomial and non-complete sets in NP. </title> <journal> Theoret. Comput. Sci., </journal> <volume> 39 </volume> <pages> 225-237, </pages> <year> 1985. </year> <title> 1. Sparse Sets versus Complexity Classes 29 </title>
Reference-contexts: However, there is now considerable doubt whether the Berman-Hartmanis isomorphism conjecture is true <ref> [JY85] </ref>.
Reference: [Kad89] <author> J. Kadin. </author> <title> P NP[log n] and sparse Turing-complete sets for NP. </title> <journal> J. Comput. System Sci., </journal> <volume> 39(3) </volume> <pages> 282-298, </pages> <year> 1989. </year>
Reference-contexts: Theorem 2.4 If sparse P T -hard sets exist for NP, then PH = ZPP NP . We also mention that for P T -completeness, Kadin <ref> [Kad89] </ref> show that PH collapses to the class P NP [log] , the class of languages decidable in polynomial time with O (log n) queries to an NP oracle. Theorem 2.5 If sparse P T -complete sets exist for NP, then PH = P NP [log] . <p> Theorem 2.5 If sparse P T -complete sets exist for NP, then PH = P NP [log] . Improving the Karp-Lipton collapse to P = NP, or even NP = coNP appears hard. We note that the optimality of these results in terms of oracles have been proven <ref> [Hel86, IM89, Kad89] </ref>. 3 Earlier results for many-one reductions 3.1 The isomorphism conjecture for NP As we mentioned earlier, one of the major motivations for the study of sparse sets is the isomorphism conjecture of Berman and Hartmanis [BH77]. It says that all NP-complete languages under P m are isomorphic.
Reference: [Kar] <author> R. Karp. </author> <type> Personal communication. </type>
Reference-contexts: time with polynomial length advice is identical to the class of languages having polynomial-size circuits, thus also identical to the P T -closure of sparse sets. 6 Jin-Yi Cai, Mitsunori Ogihara 2.2 Karp-Lipton theorem We now come to the beautiful theorem of Karp and Lipton [KL82] with contributions by Sipser <ref> [Kar] </ref>.
Reference: [KL82] <author> R. Karp and R. Lipton. </author> <title> Turing machines that take advice. </title> <journal> L'enseignement Mathematique, </journal> 28(3/4):191-209, 1982. 
Reference-contexts: The P T -closure of sparse sets is known [BDG88] to be identical to the class of languages having polynomial-size circuits, and to P=poly|the class of languages decidable in polynomial time with short advice, introduced by Karp and Lipton <ref> [KL82] </ref>. The connection to non-uniform complexity, especially polynomial size circuits, was the first primary motivation for the study of sparse sets. A fundamental result of Karp and Lipton [KL82] states that if a sparse set is NP-hard under polynomial time Turing reduction P T , i.e., every language in NP has <p> languages having polynomial-size circuits, and to P=poly|the class of languages decidable in polynomial time with short advice, introduced by Karp and Lipton <ref> [KL82] </ref>. The connection to non-uniform complexity, especially polynomial size circuits, was the first primary motivation for the study of sparse sets. A fundamental result of Karp and Lipton [KL82] states that if a sparse set is NP-hard under polynomial time Turing reduction P T , i.e., every language in NP has polynomial size circuits, then the polynomial time hierarchy 1. Sparse Sets versus Complexity Classes 3 collapses to its second level. <p> of languages decidable in polynomial time with polynomial length advice is identical to the class of languages having polynomial-size circuits, thus also identical to the P T -closure of sparse sets. 6 Jin-Yi Cai, Mitsunori Ogihara 2.2 Karp-Lipton theorem We now come to the beautiful theorem of Karp and Lipton <ref> [KL82] </ref> with contributions by Sipser [Kar].
Reference: [KMR90] <author> S. Kurtz, S. Mahaney, and J. Royer. </author> <title> The structure of complete degrees. </title> <editor> In A. Selman, editor, </editor> <booktitle> Complexity Theory Retrospective, </booktitle> <pages> pages 108-146. </pages> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: However, there is now considerable doubt whether the Berman-Hartmanis isomorphism conjecture is true [JY85]. The isomorphism conjecture is an active research topic with considerable work on the subject. (For the current status of the subject, see <ref> [FFK92, KMR90, You90] </ref>.) We will not go into this any further in this article. 3.2 Mahaney's theorem As typical NP-complete languages such as SAT are all exponentially dense, and polynomial time isomorphisms cannot change the density from exponential to polynomial, it follows from the isomorphism conjecture that no sparse set can
Reference: [KW95] <author> J. Kobler and O. Watanabe. </author> <title> New collapse consequences of NP having small circuits. </title> <booktitle> In Proc. 22nd Conf. on Automata, Lang. and Prog., </booktitle> <pages> pages 196-207. </pages> <note> Springer-Verlag Lecture Notes in Comp. Sci. #944, </note> <month> July </month> <year> 1995. </year>
Reference-contexts: Corollary 2.1 If there exists a sparse set S 2 p 2 such that NP P T S, then PH = p Very recently, Bshouty et al. [BCG + 95] (see also <ref> [KW95] </ref>) show that polynomial size circuits are learnable in ZPP with equivalence queries and with additional queries to NP, from which it follows that polynomial size circuits for SAT is learnable in ZPP NP , and thus, sparse P T -hard sets for NP collapse the polynomial time hierarchy to ZPP
Reference: [Lad75] <author> R. Ladner. </author> <title> The circuit value problem is log space complete for P. </title> <journal> SIGACT News, </journal> <volume> 7(1) </volume> <pages> 18-20, </pages> <year> 1975. </year>
Reference-contexts: Hartmanis then conjectured that this is true for all P-complete languages under L m -reductions. Again typical P-complete languages such as CVP, the circuit value problem <ref> [Lad75] </ref>, are all exponentially dense, it follows that no sparse set can be P-complete under L m . This is the Hartmanis conjecture on the non-existence of sparse complete sets in P. A similar conjecture was also made by Hartmanis [Har78] for NL, the nondeterministic logspace. <p> The gadget produces the output simulating the Turing machine move at step i and location j. The output affects cell location j 1, j and j + 1, at time i + 1. (This is in fact a LOGSPACE reduction from P to the circuit value problem CVP <ref> [Lad75] </ref>, which will be used later.) Now the only modification for the machine M with oracle S is as follows: Let S =n be represented by a boolean formula s n in disjunctive normal form.
Reference: [Lon82] <author> T. </author> <title> Long. A note on sparse oracles for NP. </title> <journal> J. Comput. System Sci., </journal> <volume> 24 </volume> <pages> 224-232, </pages> <year> 1982. </year>
Reference-contexts: One can modify the same circuit to solve a p p 2 problem "locally." Whether this is also true for sparse oracles is answered by the following theorem of Long <ref> [Lon82] </ref>.
Reference: [Mah82] <author> S. Mahaney. </author> <title> Sparse complete sets for NP: Solution of a conjecture of Berman and Hartmanis. </title> <journal> J. Comput. System Sci., </journal> <volume> 25(2) </volume> <pages> 130-143, </pages> <year> 1982. </year>
Reference-contexts: This becomes the sparse non-completeness conjecture for NP by Berman and Hartmanis. This latter conjecture was resolved by Mahaney, who showed that this is true if and only if NP 6= P <ref> [Mah82] </ref>. While Karp-Lipton's theorem deals with P T , and Mahaney's theorem settles the case for P m , the case for polynomial time bounded truth-table reducibility P btt , which is intermediate between P m and P T , was left open for ten years. <p> This is a remarkable achievement, unifying many previous partial results. Their proof introduced the notion of a left-set which is very effective. We will demonstrate its usefulness by giving easier proofs of earlier results of Mahaney <ref> [Mah82] </ref> and Fortune [For79]. The issue of isomorphism for complete languages in P was also raised by Hartmanis in [Har78]. <p> This becomes the sparse non-completeness conjecture for NP by Berman and Hartmanis. It was resolved by the following definitive theorem of Mahaney <ref> [Mah82] </ref>. Theorem 3.1 There are no sparse NP-complete (or NP-hard) languages under P m if and only if NP 6= P. Mahaney's theorem was the culmination of considerable earlier efforts toward the sparse non-completeness conjecture of Berman and Hartmanis. In particular we mention that P.
Reference: [Mah89] <author> S. Mahaney. </author> <title> The isomorphism conjecture and sparse sets. </title> <editor> In J. Hartmanis, editor, </editor> <booktitle> Computational Complexity Theory, </booktitle> <pages> pages 18-46. </pages> <booktitle> American Mathematical Society Proceedings of Symposia in Applied Mathematics #38, </booktitle> <year> 1989. </year>
Reference-contexts: Alternatively, having a sparse hard or complete set can be viewed as having a strong handle on the power of the complexity class. Many consequences are known assuming the existence of sparse hard sets. For a survey of earlier results, see <ref> [Mah89, HOW92, You92] </ref>. The two questions raised here are fascinating because they link together both uniform complexity, in terms of a complexity class and a reducibility, and non-uniform complexity, via a sparse set.
Reference: [Mil76] <author> G. Miller. </author> <title> Riemann's hypothesis and tests for primality. </title> <journal> J. Comput. System Sci., </journal> <volume> 13 </volume> <pages> 300-317, </pages> <year> 1976. </year>
Reference-contexts: Then for SAT, its left-set Left [p; A] is P m -reducible to S via some reduction f , 1 The genesis of the idea of a left set can be found in a paper by G. Miller <ref> [Mil76] </ref> where he defined the following set for a partial function f R f = f (x; y) j x 2 dom (f) and y f (x)g: Similar notions were also used in the study on public-key cryptosystems by Groll mann and Selman [GS88]. 12 Jin-Yi Cai, Mitsunori Ogihara where A
Reference: [Mul87] <author> K. Mulmuley. </author> <title> A fast parallel algorithm to computer the rank of a matrix over an arbitrary field. </title> <journal> Combinatorica, </journal> <volume> 7(1) </volume> <pages> 101-104, </pages> <year> 1987. </year>
Reference-contexts: Then, it is possible to prove that the system has a sufficiently high rank, with high probability. With a lower bound on the rank, one can then appeal to the NC 2 algorithm of Mulmuley <ref> [Mul87] </ref> to solve the linear system. This gives a randomized NC 2 algorithm for CVP. Thus, both randomization and parallel complexity class NC enters the picture quite naturally, even though no mention of either subjects is made in the original conjecture. <p> Clearly the number of useful equations is n log 2 p (n). Mulmuley <ref> [Mul87] </ref> gives an algorithm to compute the rank of an ` fi n matrix, which, for ` = n O (1) , can be implemented by a circuit of depth O (log 2 n) and size n O (1) . <p> After some ten years of continued progress, starting with the pioneer work of Csanky, culminating in the remarkable achievement of Mulmuley, it was shown ultimately that many tasks in linear algebra such as rank, determinant, inverse, etc. over arbitrary characteristic can be done in NC 2 <ref> [Csa76, BvzGH82, Chi85, Mul87] </ref>. There is no evidence that all these heavy duty computations can be accomplished in NC 1 . On the contrary, NC 1 is considered rather weak; it was the celebrated AKS sorting network [AKS83] that finally puts sorting in NC 1 .
Reference: [Ogi95] <author> M. Ogihara. </author> <title> Sparse hard sets for P yield space-efficient algorithms. </title> <booktitle> In Proc. 36th Symp. on Found. of Comp. Sci. IEEE, </booktitle> <year> 1995. </year> <note> To appear. </note>
Reference-contexts: A similar conjecture was also made by Hartmanis [Har78] for NL, the nondeterministic logspace. However, unlike in the NP case, for nearly two decades, Hartmanis's conjecture for P remained open with little progress until very recently. In a breakthrough, Ogihara <ref> [Ogi95] </ref> showed that if sparse L m -hard sets for P exist, then P is contained in poly-logarithmic space DSPACE [log 2 n]. In order to prove his theorem, Ogihara introduced an ingenious auxiliary language based on the P-complete language CVP, which has a certain built-in self-reducibility. <p> It is interesting to note that the original problem speaks neither parallel nor probabilistic computations. Second with derandomization techniques using finite fields, they showed that the result can be improved to deterministic NC 2 . As NC 2 DSPACE [log 2 n], this gives another proof of Ogihara's theorem <ref> [Ogi95] </ref>. It should be noted that at this stage, there is still an underlying randomized computation to be "simulated" deterministically. <p> This conjecture, unlike its NP analog, remained open for many years. In a breakthrough Ogihara showed that the existence of P-hard sparse sets implies that P DSPACE [log 2 n] <ref> [Ogi95] </ref>. Ogihara defined an ingenious auxiliary language, which is P-complete and has a certain built-in self-reducibility. The proof then proceeds by simulation of P in DSPACE [log 2 n] using the P-hard sparse set. <p> Recall that a typical P-complete language is the circuit value problem CVP. In <ref> [Ogi95] </ref>, Ogihara defined a set A closely related to CVP: It consists of tuples hC; x; I; bi, where C is a boolean circuit, x is an input to C, I is a subset of the gates, and b is a bit (0 or 1), such that the sum mod 2
Reference: [OL93] <author> M. Ogiwara and A. Lozano. </author> <title> Sparse hard sets for counting classes. </title> <journal> Theoret. Comput. Sci., </journal> <volume> 112(2) </volume> <pages> 255-276, </pages> <year> 1993. </year>
Reference-contexts: The theorem of Ogihara and Watanabe is proved. 4.1 Extensions The breakthrough by Ogihara and Watanabe has provoked a flurry of results about sparse hard/complete set problems <ref> [HL94, AHH + 93, AKM92b, AKM92a, AA95, RR92, OL93] </ref> (see [HOW92] for a survey). Below we state the best known results on polynomial time sparse hard sets for NP. <p> Generally speaking, for every counting class in the sense of [GNW90], sparse P btt -hard sets for the class collapse it within NP T coNP <ref> [OL93] </ref>. The story for modulo-based counting complexity classes such as P is slightly different, for it is not known whether the class contain NP or coNP. Ogihara and Lozano [OL93] extend the notion of left-sets and show that sparse P btt -hard sets for a modulo-based counting class collapse it to <p> counting class in the sense of [GNW90], sparse P btt -hard sets for the class collapse it within NP T coNP <ref> [OL93] </ref>. The story for modulo-based counting complexity classes such as P is slightly different, for it is not known whether the class contain NP or coNP. Ogihara and Lozano [OL93] extend the notion of left-sets and show that sparse P btt -hard sets for a modulo-based counting class collapse it to P. This framework allows one to obtain a clone of Theorem 4.2 (1) for many counting classes.
Reference: [OW91] <author> M. Ogiwara and O. Watanabe. </author> <title> On polynomial time bounded truth-table reducibility of NP sets to sparse sets. </title> <journal> SIAM J. Comput., </journal> <volume> 20(3) </volume> <pages> 471-483, </pages> <year> 1991. </year> <type> 30 Jin-Yi Cai, Mitsunori Ogihara </type>
Reference-contexts: It was settled by Ogihara and Watanabe <ref> [OW91] </ref> in 1990. They showed that the existence of sparse P btt -hard sets for NP implies P = NP. This is a remarkable achievement, unifying many previous partial results. Their proof introduced the notion of a left-set which is very effective. <p> In particular, quite a few partial results toward the case 1. Sparse Sets versus Complexity Classes 11 of bounded truth-table reduction were obtained [Yap83, Ukk83, Wat92, Yes83]. In 1990, Ogihara and Watanabe <ref> [OW91] </ref> settled this case completely. We will discuss their proof in the next section in detail; here we will give a simultaneous and simple proof of both Mahaney's theorem and Fortune's theorem, using a tool introduced by Ogihara and Watanabe, called left-sets. <p> Hence 2 SAT. 1. Sparse Sets versus Complexity Classes 13 4 Bounded truth table reduction of NP We have seen that the left-sets introduced in <ref> [OW91] </ref> give new and uniform proofs of earlier results. Not only that, using the new technique Ogihara and Watanabe succeeded in proving the following theorem that unifies many previous results: Theorem 4.1 If NP P btt S, a sparse set, then NP = P.
Reference: [Pip79] <author> N. Pippenger. </author> <title> On simultaneous resource bound. </title> <booktitle> In Proc. 11th Symp. on Theory of Comput., </booktitle> <pages> pages 307-311. </pages> <publisher> ACM Press, </publisher> <year> 1979. </year>
Reference-contexts: An extra bit vector at each time step i can be used to store the queried string. And the query is answered by the formulae s ` . A related result of Pippenger <ref> [Pip79] </ref> is the following: The class of languages decidable in polynomial time with polynomial length advice is identical to the class of languages having polynomial-size circuits, thus also identical to the P T -closure of sparse sets. 6 Jin-Yi Cai, Mitsunori Ogihara 2.2 Karp-Lipton theorem We now come to the beautiful
Reference: [Rab59] <author> M. Rabin. </author> <title> Speed of computation and classification of recursive sets. </title> <booktitle> In Proc. 3rd Convention Sci. </booktitle> <publisher> Soc., </publisher> <pages> pages 1-2, </pages> <year> 1959. </year>
Reference-contexts: 1 Introduction Complexity theory is concerned with the quantitative limitation and power of computation. During the past several decades computational complexity theory developed gradually from its initial awakening <ref> [Rab59, Yam62, HS65, Cob65] </ref> to the current edifice of a scientific discipline that is rich in beautiful results, powerful techniques, fascinating research topics and conjectures, deep connections to other mathematical subjects, and of critical importance to everyday computing. The building blocks of complexity theory are the various complexity classes.
Reference: [RR92] <author> D. Ranjan and P. Rohatgi. </author> <title> On randomized reductions to sparse sets. </title> <booktitle> In Proc. 7th Conf. on Structure in Complex. Theory, </booktitle> <pages> pages 239-242. </pages> <publisher> IEEE, </publisher> <month> June </month> <year> 1992. </year>
Reference-contexts: The theorem of Ogihara and Watanabe is proved. 4.1 Extensions The breakthrough by Ogihara and Watanabe has provoked a flurry of results about sparse hard/complete set problems <ref> [HL94, AHH + 93, AKM92b, AKM92a, AA95, RR92, OL93] </ref> (see [HOW92] for a survey). Below we state the best known results on polynomial time sparse hard sets for NP.
Reference: [Ukk83] <author> E. Ukkonen. </author> <title> Two results on polynomial time truth-table reductions to sparse sets. </title> <journal> SIAM J. Comput., </journal> <volume> 12(3) </volume> <pages> 580-587, </pages> <year> 1983. </year>
Reference-contexts: In particular, quite a few partial results toward the case 1. Sparse Sets versus Complexity Classes 11 of bounded truth-table reduction were obtained <ref> [Yap83, Ukk83, Wat92, Yes83] </ref>. In 1990, Ogihara and Watanabe [OW91] settled this case completely.
Reference: [vL91] <author> J. van Lint. </author> <title> Introduction to Coding Theory. </title> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference-contexts: Proof It is known that the polynomial X 23 ` + X 3 ` an irreducible polynomial over Z 2 for all ` 0 <ref> [vL91] </ref>. In the following, by a finite field GF (2 m ), where m = 2 3 ` , we refer explicitly to the field Z 2 [X]=(X 23 ` + 1). Let S be a sparse set hard for P under logspace-computable many-one reductions.
Reference: [vM95] <author> D. van Melkebeek. </author> <title> On truth-table reductions of P sets to sparse sets. </title> <type> Manuscript, </type> <year> 1995. </year>
Reference-contexts: The algebraic approach presented here is rather powerful. Many additional results have been obtained including the Hartmanis conjecture for NL, probabilistic and other weaker reductions, and logspace bounded truth table reductions for P <ref> [CS95b, CNS95, vM95] </ref>. 6 Conclusions We have seen that the study of sparse sets shows great vitality. Significant progress is being made which provides unifying perspectives to known and new results, and reaches out to new territory with unexpected links to parallel computation and randomization.
Reference: [Wat92] <author> O. Watanabe. </author> <title> On polynomial-time one-truth-table reducibility to a sparse set. </title> <journal> J. Comput. System Sci., </journal> <volume> 44 </volume> <pages> 500-516, </pages> <year> 1992. </year>
Reference-contexts: In particular, quite a few partial results toward the case 1. Sparse Sets versus Complexity Classes 11 of bounded truth-table reduction were obtained <ref> [Yap83, Ukk83, Wat92, Yes83] </ref>. In 1990, Ogihara and Watanabe [OW91] settled this case completely.
Reference: [Yam62] <author> H. Yamada. </author> <title> Real time computation and recursive functions not real-time computable. </title> <journal> IRE Trans. Electronics Computers, </journal> <volume> EC-11:753-760, </volume> <year> 1962. </year>
Reference-contexts: 1 Introduction Complexity theory is concerned with the quantitative limitation and power of computation. During the past several decades computational complexity theory developed gradually from its initial awakening <ref> [Rab59, Yam62, HS65, Cob65] </ref> to the current edifice of a scientific discipline that is rich in beautiful results, powerful techniques, fascinating research topics and conjectures, deep connections to other mathematical subjects, and of critical importance to everyday computing. The building blocks of complexity theory are the various complexity classes.
Reference: [Yap83] <author> C. Yap. </author> <title> Some consequences of non-uniform conditions on uniform classes. </title> <journal> Theoret. Comput. Sci., </journal> <volume> 26(3) </volume> <pages> 287-300, </pages> <year> 1983. </year>
Reference-contexts: In particular, quite a few partial results toward the case 1. Sparse Sets versus Complexity Classes 11 of bounded truth-table reduction were obtained <ref> [Yap83, Ukk83, Wat92, Yes83] </ref>. In 1990, Ogihara and Watanabe [OW91] settled this case completely.
Reference: [Yes83] <author> Y. Yesha. </author> <title> On certain polynomial-time truth-table reducibil-ities of complete sets to sparse sets. </title> <journal> SIAM J. Comput., </journal> <volume> 12(3) </volume> <pages> 411-425, </pages> <year> 1983. </year>
Reference-contexts: In particular, quite a few partial results toward the case 1. Sparse Sets versus Complexity Classes 11 of bounded truth-table reduction were obtained <ref> [Yap83, Ukk83, Wat92, Yes83] </ref>. In 1990, Ogihara and Watanabe [OW91] settled this case completely.
Reference: [You90] <author> P. Young. Juris Hartmanis: </author> <title> fundamental contributions to iso-morphism problems. </title> <editor> In A. Selman, editor, </editor> <booktitle> Complexity Theory Retrospective, </booktitle> <pages> pages 28-58. </pages> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: However, there is now considerable doubt whether the Berman-Hartmanis isomorphism conjecture is true [JY85]. The isomorphism conjecture is an active research topic with considerable work on the subject. (For the current status of the subject, see <ref> [FFK92, KMR90, You90] </ref>.) We will not go into this any further in this article. 3.2 Mahaney's theorem As typical NP-complete languages such as SAT are all exponentially dense, and polynomial time isomorphisms cannot change the density from exponential to polynomial, it follows from the isomorphism conjecture that no sparse set can
Reference: [You92] <author> P. Young. </author> <title> How reductions to sparse sets collapse the polynomial-time hierarchy: A primer. </title> <journal> SIGACT News, 1992. </journal> <volume> Part I (#3, </volume> <pages> pages 107-117), </pages> <booktitle> Part II (#4, </booktitle> <pages> pages 83-94), </pages> <note> and Corrigendum (#4, page 94). </note>
Reference-contexts: Alternatively, having a sparse hard or complete set can be viewed as having a strong handle on the power of the complexity class. Many consequences are known assuming the existence of sparse hard sets. For a survey of earlier results, see <ref> [Mah89, HOW92, You92] </ref>. The two questions raised here are fascinating because they link together both uniform complexity, in terms of a complexity class and a reducibility, and non-uniform complexity, via a sparse set.
References-found: 55

