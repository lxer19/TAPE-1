URL: http://www.cse.psu.edu/~ugrain/vlsi-cad/MGAP/icassp95.ps
Refering-URL: http://www.cse.psu.edu/~ugrain/publications.html
Root-URL: 
Note: Copyright  
Abstract: c fl1995 IEEE. All rights reserved. Personal use of this material is permitted. However, permission to reprint/republish this material for advertising or promotional purposes or for creating new collective works for resale or redistribution must be obtained from the IEEE. For information on obtaining permission, send a blank email message to info.pub.permission@ieee.org. By choosing to view this document, you agree to all provisions of the copyright laws protecting it. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. J. Irwin and R. M. Owens, </author> <title> "A Micro-Grained VLSI Signal Processor", </title> <booktitle> In ICASSP-92, </booktitle> <pages> pp 641-644, </pages> <month> March </month> <year> 1992. </year>
Reference-contexts: 1. INTRODUCTION The Micro-Grain Array Processor (MGAP) is a family of two-dimensional, micro-grained VLSI array processors which maintains both a high degree of flexibility and fine grainess <ref> [1, 2, 3, 4] </ref>. The range of problems to which the MGAP may be applied is large, including signal and image processing, graph problems, sorting and searching, matrix computations, astronomy, computational biology, and computational fluid dynamics.
Reference: [2] <author> M. J. Irwin and R. M. Owens, </author> <title> "A two-Dimensional, Distributed Logic Processor", </title> <journal> IEEE Transactions on Computers, </journal> <volume> 40(10) </volume> <pages> 1094-1101, </pages> <month> October </month> <year> 1991. </year>
Reference-contexts: 1. INTRODUCTION The Micro-Grain Array Processor (MGAP) is a family of two-dimensional, micro-grained VLSI array processors which maintains both a high degree of flexibility and fine grainess <ref> [1, 2, 3, 4] </ref>. The range of problems to which the MGAP may be applied is large, including signal and image processing, graph problems, sorting and searching, matrix computations, astronomy, computational biology, and computational fluid dynamics.
Reference: [3] <author> R. S. Bajwa, R. M. Owens, and M. J. Irwin, </author> <title> "Area Time Tradeoffs in Micro-Grain VLSI Array Architectures", </title> <journal> IEEE Transactions on Computers, </journal> <volume> 43(10) </volume> <pages> 1121-1128, </pages> <month> Oct. </month> <year> 1994. </year>
Reference-contexts: 1. INTRODUCTION The Micro-Grain Array Processor (MGAP) is a family of two-dimensional, micro-grained VLSI array processors which maintains both a high degree of flexibility and fine grainess <ref> [1, 2, 3, 4] </ref>. The range of problems to which the MGAP may be applied is large, including signal and image processing, graph problems, sorting and searching, matrix computations, astronomy, computational biology, and computational fluid dynamics.
Reference: [4] <author> R. M. Owens, M. J. Irwin, T. P. Kelliher, M. Vish-wanath, and R. S. Bajwa, </author> <title> "Implementing a Family of High Performance, Micrograined Architectures", In Application Specific Array Processors, </title> <month> August </month> <year> 1992. </year>
Reference-contexts: 1. INTRODUCTION The Micro-Grain Array Processor (MGAP) is a family of two-dimensional, micro-grained VLSI array processors which maintains both a high degree of flexibility and fine grainess <ref> [1, 2, 3, 4] </ref>. The range of problems to which the MGAP may be applied is large, including signal and image processing, graph problems, sorting and searching, matrix computations, astronomy, computational biology, and computational fluid dynamics.
Reference: [5] <author> R. M. Owens, M. J. Irwin, C. Nagendra, and R. S. Bajwa, </author> <booktitle> "Computer Vision on the MGAP", in Proc. </booktitle> <month> CAMP'93 , </month> <year> 1993. </year>
Reference-contexts: In cases where complex, expensive operations cannot be avoided or there is insufficient high-level parallelism, digit-level parallelism will still provide a significant speedup. This is illustrated by our one-dimensional wavelet transform algorithm [9]. Some other signal and image processing applications are discussed in <ref> [5, 10, 11] </ref>. 4. DCT ON THE MGAP-2 The 2-D DCT is a powerful tool for image compression. We show how an algorithm based upon the so-called small-n algorithms and using the minimum number of multiplications for the DCT can be mapped onto the MGAP-2.
Reference: [6] <author> Meta-Software. </author> <title> HSPICE User's Manual H9001. </title> <address> Camp-bell, CA, </address> <year> 1990 </year>
Reference-contexts: Finally there is a write phase in which one of the bit lines is set to 0V; the other is in the high impedance state. The desired latency for reads is under 2 ns. We used Hspice <ref> [6] </ref> to test the DP memory design. Our simulations produced read times under 2 ns and write times under 3 ns. The two ULMs in each DP were designed using pass transistor logic. The schematic is shown in Figure 3.
Reference: [7] <author> R. M. Owens, T. P. Kelliher, and M. J. Irwin, </author> <title> "Building High Performance Signal Processors Cheaply and Quickly," </title> <booktitle> in Proc. 1993 IEEE Workshop on VLSI Signal Processing, </booktitle> <month> Oct. </month> <year> 1993. </year>
Reference: [8] <author> C. Nagendra, M. Borah, M. Vishwanath, R. Owens, and M. J. Irwin, </author> <title> "Edge Detection using Fine-Grain Parallelism in VLSI," </title> <booktitle> in Proc. ICASSP '93 , vol. </booktitle> <volume> 1, </volume> <pages> pp. 401-404, </pages> <month> Apr. </month> <year> 1993. </year>
Reference-contexts: An edge detection algorithm, using the Hough transform, which we have have developed, completely avoids expensive multiplications in favor of cheap additions and subtractions <ref> [8] </ref>. In cases where complex, expensive operations cannot be avoided or there is insufficient high-level parallelism, digit-level parallelism will still provide a significant speedup. This is illustrated by our one-dimensional wavelet transform algorithm [9]. Some other signal and image processing applications are discussed in [5, 10, 11]. 4.
Reference: [9] <author> C. Nagendra, M. J. Irwin, and R. Owens, </author> <title> "Digit Pipelined Discrete Wavelet Transform," </title> <booktitle> in Proc. ICASSP '94 , Apr. </booktitle> <year> 1994. </year>
Reference-contexts: In cases where complex, expensive operations cannot be avoided or there is insufficient high-level parallelism, digit-level parallelism will still provide a significant speedup. This is illustrated by our one-dimensional wavelet transform algorithm <ref> [9] </ref>. Some other signal and image processing applications are discussed in [5, 10, 11]. 4. DCT ON THE MGAP-2 The 2-D DCT is a powerful tool for image compression.
Reference: [10] <author> R. Bajwa, R. M. Owens, and M. J. Irwin, </author> <title> "Image Processing with the MGAP: A Cost Effective Approach," </title> <booktitle> in Proc. </booktitle> <pages> IPPS'93 , pp. 439-443, </pages> <month> Apr. </month> <year> 1993. </year>
Reference-contexts: In cases where complex, expensive operations cannot be avoided or there is insufficient high-level parallelism, digit-level parallelism will still provide a significant speedup. This is illustrated by our one-dimensional wavelet transform algorithm [9]. Some other signal and image processing applications are discussed in <ref> [5, 10, 11] </ref>. 4. DCT ON THE MGAP-2 The 2-D DCT is a powerful tool for image compression. We show how an algorithm based upon the so-called small-n algorithms and using the minimum number of multiplications for the DCT can be mapped onto the MGAP-2.
Reference: [11] <author> H. N. Kim, M. J. Irwin, R. M. Owens, and C.-M. Wu, </author> <title> "Dynamic Space Warping Algorithms on Fine-Grain Array Processors," </title> <booktitle> in Proc. </booktitle> <address> IPPS'94 </address> . 
Reference-contexts: In cases where complex, expensive operations cannot be avoided or there is insufficient high-level parallelism, digit-level parallelism will still provide a significant speedup. This is illustrated by our one-dimensional wavelet transform algorithm [9]. Some other signal and image processing applications are discussed in <ref> [5, 10, 11] </ref>. 4. DCT ON THE MGAP-2 The 2-D DCT is a powerful tool for image compression. We show how an algorithm based upon the so-called small-n algorithms and using the minimum number of multiplications for the DCT can be mapped onto the MGAP-2.
Reference: [12] <author> H. N. Kim, M. Borah, R. M. Owens, and M. J. Ir-win, </author> <title> "2-D Discrete Cosine Transforms on a Fine Grain Array Processor," </title> <booktitle> in Proc. 1994 IEEE Workshop on VLSI Signal Processing. </booktitle>
Reference-contexts: DCT ON THE MGAP-2 The 2-D DCT is a powerful tool for image compression. We show how an algorithm based upon the so-called small-n algorithms and using the minimum number of multiplications for the DCT can be mapped onto the MGAP-2. More detail can be found in <ref> [12] </ref>. The small-n algorithms efficiently compute DFTs [13] and can be used, with a small modification, to compute the discrete Hartley transform (DHT) [14, 15]. The DHT thus computed can be used to compute a 1-D DCT using the relationships established in [16].
Reference: [13] <author> D. Elliot and K. Rao, </author> <title> "Fast Transforms: Algorithms, Analyses, Applications," </title> <publisher> Academic Press, </publisher> <year> 1982. </year>
Reference-contexts: We show how an algorithm based upon the so-called small-n algorithms and using the minimum number of multiplications for the DCT can be mapped onto the MGAP-2. More detail can be found in [12]. The small-n algorithms efficiently compute DFTs <ref> [13] </ref> and can be used, with a small modification, to compute the discrete Hartley transform (DHT) [14, 15]. The DHT thus computed can be used to compute a 1-D DCT using the relationships established in [16].
Reference: [14] <author> R. Bracewell, </author> <title> "The Hartley Transform," </title> <publisher> Oxford University Press, </publisher> <year> 1986. </year>
Reference-contexts: More detail can be found in [12]. The small-n algorithms efficiently compute DFTs [13] and can be used, with a small modification, to compute the discrete Hartley transform (DHT) <ref> [14, 15] </ref>. The DHT thus computed can be used to compute a 1-D DCT using the relationships established in [16].
Reference: [15] <author> C. Chakrabarti and J. JaJa, </author> <title> "Systolic Architectures for the Computation of the Discrete Hartley and Discrete Cosine Transforms Based on Prime Factor Decomposition," </title> <journal> IEEE Trans. Comp., </journal> <volume> vol. 39, </volume> <pages> pp. 1359-1368, </pages> <month> Nov. </month> <year> 1990. </year>
Reference-contexts: More detail can be found in [12]. The small-n algorithms efficiently compute DFTs [13] and can be used, with a small modification, to compute the discrete Hartley transform (DHT) <ref> [14, 15] </ref>. The DHT thus computed can be used to compute a 1-D DCT using the relationships established in [16].
Reference: [16] <author> H. Malvar, </author> <title> "Fast Computation of Discrete Cosine Transform Through Fast Hartley Transform," </title> <journal> Electronic Letters, </journal> <volume> vol. 22, </volume> <pages> pp. 352-353, </pages> <month> Mar. </month> <year> 1986. </year>
Reference-contexts: More detail can be found in [12]. The small-n algorithms efficiently compute DFTs [13] and can be used, with a small modification, to compute the discrete Hartley transform (DHT) [14, 15]. The DHT thus computed can be used to compute a 1-D DCT using the relationships established in <ref> [16] </ref>.
Reference: [17] <author> T. Fountain, </author> <title> "An Evaluation of Some Chips for Image Processing," </title> <editor> in L. Uhr, K. Preston, S. Levialdi, and M. J. B. Duff, editors, </editor> <title> Evaluation of Multicomputers for Image Processing, ch. 4, </title> <publisher> Academic Press, </publisher> <year> 1986. </year>
Reference: [18] <author> F. A. Gerritsen, </author> <title> "A Comparison of the CLIP IV, DAP, and MPP Processor-Array Implementations," </title> <editor> in M. J. B. Duff, editor, </editor> <title> Computing Structures for Image Processing, ch. 2, </title> <publisher> Academic Press, </publisher> <year> 1983. </year>
Reference: [19] <author> R. M. Hord, </author> <title> Parallel Supercomputing in SIMD Architectures, </title> <publisher> CRC Press, </publisher> <year> 1990. </year> <month> 4 </month>
References-found: 19

