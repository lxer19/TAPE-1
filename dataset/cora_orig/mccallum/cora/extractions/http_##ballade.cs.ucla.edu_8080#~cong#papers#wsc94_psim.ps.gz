URL: http://ballade.cs.ucla.edu:8080/~cong/papers/wsc94_psim.ps.gz
Refering-URL: http://ballade.cs.ucla.edu/~cong/publications.html
Root-URL: http://www.cs.ucla.edu
Title: Parallel Logic Level simulation of VLSI Circuits  
Abstract: In this paper, we study parallel logic level simulation of combinational VLSI Boolean networks. The simulator is written in Maisie, a simulation language developed at UCLA. The unique feature of it is that it allows a simulation model to be executed in either conservative or optimistic modes with minimal changes to the model. It also supports a number of optimizations to reduce both checkpointing and blocking overheads for the corresponding simulation protocol. Maisie also supports a variety of parallel and distributed architectures including a network of workstations. We also have implemented our efficient acyclic multi-way network partitioning algorithm named K-MAFM algorithm, which consistantly outperforms conventional undirected methods. We have evaluated the impact on parallel circuit simulation of different number of partitions with different parallel and sequential simulation algorithms on different number of processors and obtained very interesting and encouraging experimental results on various Boolean networks from the ISCAS85 benchmark circuits. Significant speed-ups are achieved when either optimistic or conservative algorithm is used. We have evaluated and understood the relationship among several important facts of the parallel language system and performance of simulations. 
Abstract-found: 1
Intro-found: 1
Reference: [(null)] 
Reference: [CoDi93] <author> Cong, J. and Y. Ding, </author> <title> ``On Area/Depth Trade-off in LUT-Based FPGA Technology Mapping,'' </title> <booktitle> Proc. 30th ACM/IEEE Design Automation Conf., </booktitle> <pages> pp. 213-218, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: Therefore, it is very natural to cluster u and v together. In general, we can treat each MFFC as a cluster. The results in <ref> [CoDi93] </ref> showed that MFFCs have the following important properties. -11- Lemma 1 If w MFFC v , then MFFC w MFFC v . Lemma 2 Two MFFCs are either disjoint or one must contain another.
Reference: [CoLB94] <author> Cong, J., Z. Li, and R. Bagrodia, </author> <title> ``Acyclic Multi-Way Partitioning of Boolean Networks,'' </title> <booktitle> Proc. ACM/IEEE 31st Design Automation Conf., </booktitle> <month> June </month> <year> 1994. </year>
Reference-contexts: Based on FM_algorithm [FiMa82], We have implemented efficient multi-way partitioning algorithms: generalized undirected K-FM, acyclic K-AFM and maximum fanout free cone (MFFC) decomposition based acyclic K-MAFM algorithm <ref> [CoLB94] </ref>. We have also observed that the K-MAFM algorithm not only guarantees an acyclic partitioning solution but also consistently outperforms the undirected K-FM algorithm, despite the acyclic constraint. K-MAFM algorithm is an MFFC cluster-based iterative partitioning approach. First, We introduce a few definitions related to MFFC decomposition.
Reference: [FiMa82] <author> Fiduccia, C. and R. Mattheyses, </author> <title> ``A Linear Time Heuristic for Improving Network Partitions,'' </title> <booktitle> ACM/IEEE Design Automation Conf., </booktitle> <pages> pp. 175-181, </pages> <year> 1982. </year>
Reference-contexts: Since each signal line across the boundary represents a communication channel, cyclic dependency among the subnetworks on different processors can cause unnecessary roll-backs when optimistic simulation strategies are used or zero lookahead when Null message algorithm is used in our simulators. Based on FM_algorithm <ref> [FiMa82] </ref>, We have implemented efficient multi-way partitioning algorithms: generalized undirected K-FM, acyclic K-AFM and maximum fanout free cone (MFFC) decomposition based acyclic K-MAFM algorithm [CoLB94].
Reference: [BaLi94] <author> Bagrodia, R. and W.-t. Liao, </author> <title> ``A Language for design of Efficient Discret-Event Simulations,'' </title> <journal> IEEE Transactions on Software Engineering, </journal> <month> March, </month> <year> 1994. </year>
Reference-contexts: We introduce our logic simulation algorithm which efficiently minimize communication overheads. Our simulator is written in Maisie, a simulation language developed at UCLA, which allows a simulation model to be executed in either sequential, parallel conservative, or parallel optimistic modes with minimal changes to the model <ref> [BaLi94] </ref>. -2- 2. Maisie: Overview Maisie adopts the process interaction approach to discrete-event simulation. An object (also referred to as a PP for physical process) or set of objects in the physical system is represented by a logical process or LP [(null)].
References-found: 5

