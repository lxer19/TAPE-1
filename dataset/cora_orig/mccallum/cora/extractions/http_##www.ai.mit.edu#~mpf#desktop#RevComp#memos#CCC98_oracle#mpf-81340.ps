URL: http://www.ai.mit.edu/~mpf/desktop/RevComp/memos/CCC98_oracle/mpf-81340.ps
Refering-URL: 
Root-URL: 
Title: Relativized separation of reversible and irreversible space-time complexity classes (extended abstract)  
Author: Michael P. Frank and M. Josephine Ammer 
Address: Cambridge, Massachusetts  
Affiliation: MIT Artificial Intelligence Laboratory  
Abstract: We prove, relative to a reversible oracle, that reversible machines cannot emulate irreversible machines without taking asymptotically more space or time than the machine being simulated. This suggests that certain parallel architectures cannot be efficiently implemented within our micro-reversible universe. We conjecture that the alternative reversible models, either classical or quantum, describe the most powerful computers that can physically exist.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Theodore Baker, John Gill, and Robert Solovay. </author> <title> Relativizations of the P =?N P question. </title> <journal> SIAM J. Comput., </journal> <volume> 4(4) </volume> <pages> 431-442, </pages> <month> December </month> <year> 1975. </year>
Reference-contexts: But we are not specialists in quantum systems, and so for now we leave those deep and important questions to others. Acknowledgments Thanks to Dan Spielman for explaining the helpful Baker et al. <ref> [1] </ref> proof. Gratitude to Alain Tapp of the University of Montreal for discussing his group's work [8] and commenting on our proof idea. Thanks very much to Michael Sipser for his guidance and especially for recommending we try an incompressibility argument.
Reference: [2] <author> C. H. Bennett. </author> <title> Logical reversibility of computation. </title> <journal> IBM Journal of Research and Development, </journal> <volume> 6 </volume> <pages> 525-532, </pages> <year> 1973. </year>
Reference-contexts: Lecerf '63 [9] first established that reversible Turing machines are universal, and Ben-nett '73 <ref> [2] </ref> independently rediscovered this, describing a linear-time (but space-inefficient) simulation of irreversible Turing machines by reversible ones. Coppersmith and Grossman '75 [4] proved a result in group theory which implied that reversible circuits only 1 bit wider than their input can compute arbitary boolean functions. <p> Crescenzi and Papadimitriou '95 [5] extended this to nondeterministic machines. Li and Vitanyi '96 [12] characterized the benefits of partial reversibility. Most recently, Lange, McKenzie, and Tapp [8] showed how to simulate Turing machines reversibly in linear space. Although Bennett and Lange et al. <ref> [2, 8] </ref> respectively showed how to simulate irreversible Turing machines reversibly in linear time or space, to our knowledge the current paper is the first to address the question of whether a single reversible simulation can run in both linear time and linear space. <p> Proof. Part (a): Due to existing relativizable simulations. When S fi = T , Bennett's simple reversible simulation technique <ref> [2] </ref> can be applied because it takes time O (T ) and space O (T ). Similarly, when T fi ulation of Lange et al. can be used because it takes time O (2 S ) and space O (S).
Reference: [3] <author> C. H. Bennett. </author> <title> Time/space trade-offs for reversible computation. </title> <journal> SIAM J. Comput., </journal> <volume> 18(4) </volume> <pages> 766-776, </pages> <year> 1989. </year>
Reference-contexts: Toffoli '77 [14] showed that reversible cellular automata can simulate irreversible ones in linear time using an extra spatial dimension. Toffoli and Fredkin also developed much reversible circuit theory [6]. Bennett '89 <ref> [3] </ref> introduced a new, more space-efficient reversible simulation technique for Turing machines. Crescenzi and Papadimitriou '95 [5] extended this to nondeterministic machines. Li and Vitanyi '96 [12] characterized the benefits of partial reversibility. Most recently, Lange, McKenzie, and Tapp [8] showed how to simulate Turing machines reversibly in linear space. <p> To do this, we would like to show how M i can be interpreted as following the rules of Bennett's reversible "pebble game," introduced in <ref> [3] </ref> and analyzed by Li and Vitanyi in [12]. We briefly describe the game here. In the pebble game there is a linear list of nodes, which we will identify with our query strings q 1 ; : : : ; q t .
Reference: [4] <author> Don Coppersmith and Edna Grossman. </author> <title> Generators for certain alternating groups with applications to cryptography. </title> <journal> SIAM J. Appl. Math., </journal> <volume> 29(4) </volume> <pages> 624-627, </pages> <month> December </month> <year> 1975. </year>
Reference-contexts: Lecerf '63 [9] first established that reversible Turing machines are universal, and Ben-nett '73 [2] independently rediscovered this, describing a linear-time (but space-inefficient) simulation of irreversible Turing machines by reversible ones. Coppersmith and Grossman '75 <ref> [4] </ref> proved a result in group theory which implied that reversible circuits only 1 bit wider than their input can compute arbitary boolean functions. Toffoli '77 [14] showed that reversible cellular automata can simulate irreversible ones in linear time using an extra spatial dimension.
Reference: [5] <author> Pierluigi Crescenzi and Christos H. Papadimitriou. </author> <title> Reversible simulation of space-bounded computation. </title> <journal> Theoretical Computer Science, </journal> <volume> 143 </volume> <pages> 159-165, </pages> <year> 1995. </year>
Reference-contexts: Toffoli '77 [14] showed that reversible cellular automata can simulate irreversible ones in linear time using an extra spatial dimension. Toffoli and Fredkin also developed much reversible circuit theory [6]. Bennett '89 [3] introduced a new, more space-efficient reversible simulation technique for Turing machines. Crescenzi and Papadimitriou '95 <ref> [5] </ref> extended this to nondeterministic machines. Li and Vitanyi '96 [12] characterized the benefits of partial reversibility. Most recently, Lange, McKenzie, and Tapp [8] showed how to simulate Turing machines reversibly in linear space.
Reference: [6] <author> E. F. Fredkin and T. Toffoli. </author> <title> Conservative logic. </title> <journal> Int'l J. of Theoretical Physics, </journal> 21(3/4):219-253, 1982. 
Reference-contexts: Toffoli '77 [14] showed that reversible cellular automata can simulate irreversible ones in linear time using an extra spatial dimension. Toffoli and Fredkin also developed much reversible circuit theory <ref> [6] </ref>. Bennett '89 [3] introduced a new, more space-efficient reversible simulation technique for Turing machines. Crescenzi and Papadimitriou '95 [5] extended this to nondeterministic machines. Li and Vitanyi '96 [12] characterized the benefits of partial reversibility.
Reference: [7] <author> R. Landauer. </author> <title> Irreversibility and heat generation in the computing process. </title> <journal> IBM Journal of Research and Development, </journal> <volume> 5 </volume> <pages> 183-191, </pages> <year> 1961. </year>
Reference-contexts: It seems likely that similar techniques might be used to show that a related language without an oracle gives a provable separation of reversible and irreversible space-time complexity classes. 2 Related Work Landauer '61 <ref> [7] </ref> was probably the first to point out that irreversible computer operations cause unavoidable energy dissipation due to the laws of thermodynamics, a fact that has been the primary motivation for the study of reversible models.
Reference: [8] <author> Klaus-Jorn Lange, Pierre McKenzie, and Alain Tapp. </author> <title> Reversible space equals deterministic space. </title> <type> Manuscript, </type> <month> December </month> <year> 1996. </year> <note> To be published in the proceedings of the 12th Annual IEEE Conference on Computational Complexity (CCC '97). </note>
Reference-contexts: Bennett '89 [3] introduced a new, more space-efficient reversible simulation technique for Turing machines. Crescenzi and Papadimitriou '95 [5] extended this to nondeterministic machines. Li and Vitanyi '96 [12] characterized the benefits of partial reversibility. Most recently, Lange, McKenzie, and Tapp <ref> [8] </ref> showed how to simulate Turing machines reversibly in linear space. <p> Crescenzi and Papadimitriou '95 [5] extended this to nondeterministic machines. Li and Vitanyi '96 [12] characterized the benefits of partial reversibility. Most recently, Lange, McKenzie, and Tapp [8] showed how to simulate Turing machines reversibly in linear space. Although Bennett and Lange et al. <ref> [2, 8] </ref> respectively showed how to simulate irreversible Turing machines reversibly in linear time or space, to our knowledge the current paper is the first to address the question of whether a single reversible simulation can run in both linear time and linear space. <p> But we are not specialists in quantum systems, and so for now we leave those deep and important questions to others. Acknowledgments Thanks to Dan Spielman for explaining the helpful Baker et al. [1] proof. Gratitude to Alain Tapp of the University of Montreal for discussing his group's work <ref> [8] </ref> and commenting on our proof idea. Thanks very much to Michael Sipser for his guidance and especially for recommending we try an incompressibility argument.
Reference: [9] <author> Y. Lecerf. </author> <title> Machines de turing reversibles. insolu-bilite recursive en n 2 N de l'equation u = n , ou est un "isomorphisme de codes". </title> <journal> Comptes Rendus, </journal> <volume> 257 </volume> <pages> 2597-2600, </pages> <year> 1963. </year>
Reference-contexts: Lecerf '63 <ref> [9] </ref> first established that reversible Turing machines are universal, and Ben-nett '73 [2] independently rediscovered this, describing a linear-time (but space-inefficient) simulation of irreversible Turing machines by reversible ones.
Reference: [10] <author> Robert Y. Levine and Alan T. Sherman. </author> <title> A note on Bennett's time-space tradeoff for reversible computation. </title> <journal> SIAM J. Comput., </journal> <volume> 19(4) </volume> <pages> 673-677, </pages> <year> 1990. </year>
Reference-contexts: The most space-efficient general linear-time reversible simulation technique currently known was provided by Bennett ([3], p. 770), and analyzed by Levine and Sher-man <ref> [10] </ref> to take space O (S (T =S) 1=(0:58lg (T =S)) ). Ben-nett's simulation can be easily seen to work with all self-reversible oracles, so it gives a relativizable upper bound on space. Note there is still a gap between the known lower and upper bounds.
Reference: [11] <author> Ming Li and Paul Vitanyi. </author> <title> An Introduction to Kol-mogorov Complexity and Its Applications. Graduate Texts in Computer Science. </title> <publisher> Springer-Verlag, </publisher> <address> 2nd edition, </address> <year> 1997. </year>
Reference-contexts: Thanks very much to Michael Sipser for his guidance and especially for recommending we try an incompressibility argument. Appreciation also to Ming Li and Paul Vitanyi for their analysis of the pebble game [12], and their introduction to incompressibility methods in their book on Kol-mogorov complexity <ref> [11] </ref>.
Reference: [12] <author> Ming Li and Paul M. B. Vitanyi. </author> <title> Reversibility and adiabatic computation: trading time and space for energy. </title> <journal> Proc. Royal Society of London, Series A, </journal> <volume> 452 </volume> <pages> 1-21, </pages> <year> 1996. </year>
Reference-contexts: Toffoli and Fredkin also developed much reversible circuit theory [6]. Bennett '89 [3] introduced a new, more space-efficient reversible simulation technique for Turing machines. Crescenzi and Papadimitriou '95 [5] extended this to nondeterministic machines. Li and Vitanyi '96 <ref> [12] </ref> characterized the benefits of partial reversibility. Most recently, Lange, McKenzie, and Tapp [8] showed how to simulate Turing machines reversibly in linear space. <p> In the cases where the reversible machine takes too much space, we will prove this by equating the machine's operation with the "pebble game" for which Li and Vitanyi <ref> [12] </ref> have already proven lower bounds, and by showing that if the machine does not take too much space, then we can build a shorter description of the chain of nodes using the ma chine's small intermediate configurations, thus contra dicting our choice of an incompressible chain. <p> To do this, we would like to show how M i can be interpreted as following the rules of Bennett's reversible "pebble game," introduced in [3] and analyzed by Li and Vitanyi in <ref> [12] </ref>. We briefly describe the game here. In the pebble game there is a linear list of nodes, which we will identify with our query strings q 1 ; : : : ; q t . At any time during the game some set of nodes is pebbled. <p> Li and Vitanyi's analysis of the pebble game <ref> [12] </ref> showed that no strategy can win the game for 2 k nodes or more without at some time having more than k nodes pebbled at once. <p> Then the incompressibility of x in s shows that the assumption that q j is initially pebbled is inconsistent. Thus M i exactly obeys all the rules of the Bennett pebble game. Now, Li and Vitanyi have shown <ref> [12] </ref> that any strategy for the pebble game that eventually pebbles a node at or beyond node 2 k must at some time have at least k+1 nodes pebbled at once. <p> Thanks very much to Michael Sipser for his guidance and especially for recommending we try an incompressibility argument. Appreciation also to Ming Li and Paul Vitanyi for their analysis of the pebble game <ref> [12] </ref>, and their introduction to incompressibility methods in their book on Kol-mogorov complexity [11].
Reference: [13] <author> Peter W. Shor. </author> <title> Algorithms for quantum computation: Discrete log and factoring. </title> <booktitle> In Proccedings, 35th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 124-134. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> November </month> <year> 1994. </year>
Reference-contexts: Of course, ultimately we would like to also know whether quantum models of computation are really physically implementable as well, and whether they are truly more powerful than any physically-implementable classical model, as results such as Shor's <ref> [13] </ref> seem to indicate. But we are not specialists in quantum systems, and so for now we leave those deep and important questions to others. Acknowledgments Thanks to Dan Spielman for explaining the helpful Baker et al. [1] proof.
Reference: [14] <author> Tommaso Toffoli. </author> <title> Computation and construction universality of reversible cellular automata. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 15 </volume> <pages> 213-231, </pages> <year> 1977. </year>
Reference-contexts: Coppersmith and Grossman '75 [4] proved a result in group theory which implied that reversible circuits only 1 bit wider than their input can compute arbitary boolean functions. Toffoli '77 <ref> [14] </ref> showed that reversible cellular automata can simulate irreversible ones in linear time using an extra spatial dimension. Toffoli and Fredkin also developed much reversible circuit theory [6]. Bennett '89 [3] introduced a new, more space-efficient reversible simulation technique for Turing machines.
References-found: 14

