URL: http://www.isi.edu/sims/minton/papers/aaai94.ps
Refering-URL: http://www.isi.edu/sims/minton/homepage.html
Root-URL: http://www.isi.edu
Title: (neighbor edge Occam's razor. Information Processing Letters 24:377-380. Where the really hard problems are. In
Author: Blumer, A.; Ehrenfeucht, A.; Haussler, D.; and War-muth, M. K. . Cheeseman, P.; Kanefsky, B.; and Taylor, W. . Etzioni, O., and Minton, S. . Garey, M., and Johnson, D. . Holte, R. . Minton, S. b. Mitchell, D.; Selman, B.; and Levesque, H. . Riddle, P.; Segal, R.; and Etzioni, O. . :-. Schlimmer, J. . Weiss, S.; Galen, R.; and Tadepalli, P. . Maximis-ing 
Note: References  Minton, S.  Proc. AAAI-92. Muggleton, S. 1992. Inductive Logic Progamming. Academic Press.  Intelligence 45.  
Abstract: 1 edge 2 ) if edge 1 and edge 2 share a common endpoint. Currently, Multi-tac is capable of inventing new predicates (through finite-differencing and related techniques), but these are used only to rewrite the problem constraints for efficiency purposes. We plan to investigate whether the invented predicates Related Work Most the the empirical work on first-order learning has been in the context of inductive logic programming (ilp), a paradigm which is quite different from ours (Muggleton 1992). In ilp the target language is usually restricted to horn clauses, while we allow full first-order formulas. On the other hand, ilp methods can be used to learn recursive programs, while we are interested only in simple formulas. Furthermore, ilp methods are generally concerned with optimizing accuracy in an environment that is typically noisy. In contrast, our applications have led us to focus primarily on efficiency. Finally, perhaps the most significant difference is that ilp systems usually operate by generalizing or specializing hypotheses. In our approach, the hypothesis space is explicitly enumerated. All in all, there has been surprising little applied work using brute force enumeration of formulas, perhaps because the approach seems so simplistic. Weiss et al.(1990) describe an algorithm that looks for the best logical expression of a fixed length or less that covers a sample population, but they search the space heuristically. Systematic enumeration techniques have received a bit more attention from researchers interested in more restricted languages. Riddle, Segal and Etzioni (1994) report good results with an exhaustive, depth-bounded algorithm for learning decision trees, and Schlimmer (1993) describes an exhaustive, but efficient, method for learning determinations. Methodologically, we were influenced by Holte's (1993) study showing that one-level decision trees perform well on many commonly used datasets. Holte advocates exploring algorithms that have small hypothesis spaces, a methodology he refers to as "simplicity-first". If a simple algorithm works, then one can analyze why it worked, otherwise the hypothesis space can be expanded to rectify specific deficiencies. We view our work as an instance of this methodology. Conclusion We have shown that brute force induction is surprisingly useful for learning axioms and control rules in Multi-tac. Our approach relies on a bias in favor of small formulas. One reason that this bias is appropriate is that small formulas tend to have much higher utility in our applications, a point rarely discussed in the induction literature. The success of our approach also depends on certain aspects of the domain. In particular, we limit the predicates and terms in our generalization language to those mentioned in the problem specification, a type of a language bias. We pointed out that our approach will be successful only if the target concepts can be represented concisely. Since presumably the language allows the problem constraints to be represented concisely, we conjectured that the language is also sufficient to allow the target concepts to be represented concisely. We expect that our approach will prove useful for many of the problems that Multi-tac encounters. It also seems plausible that the approach will work for other types of design problems, and thus may be a promising avenue for further research. Minton, S. 1990. Quantitative results concerning the utility of explanation-based learning. Artificial Intelligence 42. can improve the induction process as well.
Abstract-found: 1
Intro-found: 1
Reference: <author> Blumer, A.; Ehrenfeucht, A.; Haussler, D.; and War-muth, M. K. </author> <year> 1987. </year> <title> Occam's razor. </title> <journal> Information Processing Letters 24 </journal> <pages> 377-380. </pages>
Reference: <author> Cheeseman, P.; Kanefsky, B.; and Taylor, W. </author> <year> 1991. </year> <title> Where the really hard problems are. </title> <booktitle> In IJCAI-91. </booktitle>
Reference: <author> Etzioni, O., and Minton, S. </author> <year> 1992. </year> <title> Why EBL produces overly-specific knowledge: A critique of the prodigy approaches. </title> <booktitle> In Proc. Ninth International Machine Learning Conference. </booktitle>
Reference: <author> Garey, M., and Johnson, D. </author> <year> 1979. </year> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness. W.H. </title> <publisher> Freeman and Co. </publisher>
Reference: <author> Holte, R. </author> <year> 1993. </year> <title> Very simple classification rules perform well on most commonly used datasets. </title> <booktitle> Machine Learning 1(11) </booktitle> <pages> 63-90. </pages>
Reference: <author> Minton, S. </author> <year> 1990. </year> <title> Quantitative results concerning the utility of explanation-based learning. </title> <booktitle> Artificial Intelligence 42. </booktitle>
Reference: <author> Minton, S. </author> <year> 1993a. </year> <title> An analytic learning system for specializing heuristics. </title> <booktitle> In Proc. IJCAI-93. </booktitle>
Reference: <author> Minton, S. </author> <year> 1993b. </year> <title> Integrating heuristics for constraint satisfaction problems: A case study. </title> <booktitle> In Proc. </booktitle> <publisher> AAAI. </publisher>
Reference: <author> Mitchell, D.; Selman, B.; and Levesque, H. </author> <year> 1992. </year> <title> Hard and easy distributions of SAT problems. </title> <booktitle> In Proc. AAAI-92. </booktitle>
Reference: <author> Muggleton, S. </author> <year> 1992. </year> <title> Inductive Logic Progamming. </title> <publisher> Academic Press. </publisher>
Reference: <author> Riddle, P.; Segal, R.; and Etzioni, O. </author> <year> 1994. </year> <title> Representation design and brute-force induction in a Boeing manufacturing domain. </title> <booktitle> Applied Artificial Intelligence 8 </booktitle> <pages> 125-147. </pages>
Reference: <author> Schlimmer, J. </author> <year> 1993. </year> <title> Efficiently inducing determinations: A complete and systematic search algorithm that uses optimal pruning. </title> <booktitle> In Proc. Tenth International Machine Learning Conference. </booktitle>

References-found: 12

