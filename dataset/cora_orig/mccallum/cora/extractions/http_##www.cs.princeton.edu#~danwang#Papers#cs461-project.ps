URL: http://www.cs.princeton.edu/~danwang/Papers/cs461-project.ps
Refering-URL: http://www.cs.princeton.edu/~danwang/
Root-URL: http://www.cs.princeton.edu
Title: A Distributed Extensible Notification System  
Author: Daniel C. Wang 
Date: January 9, 1997  
Abstract: This paper describes Favonius 1 an extensible distributed messaging system. Favo-nius is based in part on the Zephyr notification system developed at M.I.T. However, Favonius is a complete redesign that attempts to address several technical and design failings of Zephyr . Favonius can be seen as an attempt Do Zephyr right and better. This documents provides a short overview of some of the key ideas from Zephyr , discusses the initial design requirements and assumptions, describes the current prototype implementation, and attempts to evaluate how well the prototype system meets the the initial design criteria.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Mark S. Ackerman and Leysia Palen. </author> <title> The Zephyr help instance: Promoting ongoing activity in a CSCW system. </title> <editor> In Michael J. Tauber, Victoria Bellotti, Robin Jeffries, Jock D. Mackinlay, and Jakob Nielsen, editors, </editor> <booktitle> Proceedings of the Conference on Human Factors in Computing Systems : Common Ground, </booktitle> <pages> pages 268275, </pages> <address> New York, 1318 April 1996. </address> <publisher> ACM Press. </publisher>
Reference-contexts: Zephyr is not only a system by which machines can talk to users but also has provided a very successful mechanism for users to talk to users. Ackerman and Palen <ref> [1] </ref> provide a description of Zephyr 's success as a CSCW 3 system.
Reference: [2] <author> Andrew D. Birrell, Roy Levin, Roger M. Needham, and Michael D. Schroeder. Grapevine: </author> <title> an exercise in distributed computing. </title> <journal> Communications of the Association for Computing Machinery, </journal> <volume> 25(4):260274 (or 260273??), </volume> <month> April </month> <year> 1982. </year>
Reference: [3] <author> C. Anthony DellaFera, Mark W. Eichin, Robert S. French, David C. Jedlinsky, John T. Kohl, and William E. Sommerfeld. </author> <title> The Zephyr notification service. </title> <booktitle> In USENIX Association, editor, USENIX Conference Proceedings (Dallas, </booktitle> <address> TX, USA), </address> <pages> pages 213219, </pages> <address> Berkeley, CA, USA, </address> <booktitle> Winter 1988. USENIX. </booktitle>
Reference-contexts: Introduction DellaFera et ala. <ref> [3] </ref> provides an overview of Zephyr a distributed notification service for the Athena Project at MIT.
Reference: [4] <author> Norman C. Hutchinson and Larry L. Peterson. </author> <title> The x-Kernel: An Architecture for Implementing Network Protocols. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 17(1):64 76, </volume> <month> January </month> <year> 1991. </year>
Reference-contexts: The design of Favonius isolates the modification to individual group servers. In order to make it easier for future extensions of the protocols and to allow users to experiment with various system configurations an extensible protocol architecture described by Hutchinson and Peterson <ref> [4] </ref> was used to implement the prototype. The x-kernel software architecture described by Hutchinson uses an object oriented model. However the implementation is carried out in ANSI C which does not provide language support for objects. The encoding of an object model in ANSI C is somewhat tedious.
Reference: [5] <author> J. Linn. </author> <title> Generic security service application program interface. Request for Comments (Proposed Standard) RFC 1508, </title> <institution> Internet Engineering Task Force, </institution> <month> September </month> <year> 1993. </year>
Reference-contexts: In order to support multiple authentication mechanisms we envision that a generic authentication layer could be built using the GSS API <ref> [5] </ref>, which provides a generic framework for integrating network data with various authentication mechanisms. Evaluation Comparisons with Zephyr The prototype Favonius implementation provides the basic functionality that existing Zephyr systems do, but with a much more extensible, scalable, and efficient design.
Reference: [6] <author> Larry L. Peterson and Bruce S. Davie. </author> <title> Computer networks: a systems approach. </title> <publisher> Morgan Kaufmann, </publisher> <address> San Francisco, CA 94104-3205, USA, </address> <year> 1996. </year>
Reference-contexts: It is a variation of the chan protocol described in <ref> [6] </ref>. A variation of the protocol was used in order to reduce the amount of connection state a server must maintain.
Reference: [7] <author> Andrew S. Tanenbaum. </author> <title> Distributed operating systems. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, NJ 07632, USA, </address> <year> 1995. </year> <month> 15 </month>
Reference-contexts: Rather than using a timer per reply to immediately free these replies a time stamp on each connections allows the protocol to garbage collect old replies. lake Group Communication The lake protocol is a variation of the closed group atomic broadcast protocol used by the Amoeba <ref> [7] </ref> operating system. One important observation to make about the Amoeba protocol is that it provides two distinct services in order to provide reliable broadcast. Detection of missing messages and recovery.
References-found: 7

