URL: ftp://ftp.mcs.anl.gov/pub/nexus/reports/isoft.ps.Z
Refering-URL: http://www.mcs.anl.gov/~foster/papers.html
Root-URL: http://www.mcs.anl.gov
Email: ffoster,geisler,nickless,wsmith,tueckeg@mcs.anl.gov  
Title: Software Infrastructure for the I-WAY High-Performance Distributed Computing Experiment  
Author: Ian Foster, Jonathan Geisler, Bill Nickless, Warren Smith, Steven Tuecke 
Date: March 16, 1996  
Web: http://www.mcs.anl.gov/globus  
Address: Argonne, IL 60439  
Affiliation: Mathematics and Computer Science Division Argonne National Laboratory  
Abstract: High-speed wide area networks are expected to enable innovative applications that integrate geographically distributed, high-performance computing, database, graphics, and networking resources. However, there is as yet little understanding of the higher-level services required to support these applications, or of the techniques required to implement these services in a scalable, secure manner. We report on a large-scale prototyping effort that has yielded some insights into these issues. Building on the hardware base provided by the I-WAY, a national-scale Asynchronous Transfer Mode (ATM) network, we developed an integrated management and application programming system, called I-Soft. This system was deployed at most of the 17 I-WAY sites and used by many of the 60 applications demonstrated on the I-WAY network. In this paper, we describe the I-Soft design and report on lessons learned from application experiments. We focus on four novel concepts that we believe may have relevance to future, similar systems: point of presence machines as a means of simplifying implementation and management; scheduler proxies to integrate local schedulers to computational resource brokers; authentication proxies to provide a uniform authentication environment across multiple administrative domains; and network-aware parallel programming tools to hide heterogeneity and improve performance in heterogeneous environments. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Abramson, R. Sosic, J. Giddy, and B. Hall. Nimrod: </author> <title> A tool for performing parameterised simulations using distributed workstations. </title> <booktitle> In Proc. 4th IEEE Symp. on High Performance Distributed Computing. </booktitle> <publisher> IEEE Press, </publisher> <year> 1995. </year>
Reference-contexts: Previous research and development efforts have produced a variety of candidate "point solutions" [23]. For example, DCE, CORBA, Condor [19], Nimrod <ref> [1] </ref>, and Prospero [21] address problems of locating and/or accessing distributed resources; file systems such as AFS [20], DFS, and Tru*es [6] address problems of sharing distributed data; tools such as Nexus [11], MPI [17], PVM [13], and Isis [2] address problems of coupling distributed computational resources; and low-level network technologies
Reference: [2] <author> K. Birman. </author> <title> The process group approach to reliable distributed computing. </title> <journal> CACM, </journal> <volume> 36(12) </volume> <pages> 37-53, </pages> <year> 1993. </year>
Reference-contexts: For example, DCE, CORBA, Condor [19], Nimrod [1], and Prospero [21] address problems of locating and/or accessing distributed resources; file systems such as AFS [20], DFS, and Tru*es [6] address problems of sharing distributed data; tools such as Nexus [11], MPI [17], PVM [13], and Isis <ref> [2] </ref> address problems of coupling distributed computational resources; and low-level network technologies such as Asynchronous Transfer Mode (ATM) promise gigabit/sec communication. <p> Several other parallel tools besides Nexus provide some degree of support for heterogeneous systems. Both the Argonne MPI implementation [16] and the PVM [13] communication library support heterogeneous environments, but neither handles multiple protocols. Isis <ref> [2] </ref> provides an integrated set of mechanisms for constructing distributed computations, but focuses on issues relating to fault tolerance and group communication, rather than high-performance computing. 8 File Systems I-WAY-like systems introduce three related requirements with a file-system flavor.
Reference: [3] <author> T. L. Casavant and J. G. Kuhl. </author> <title> A taxonomy of scheduling in general-purpose distributed computing systems. </title> <journal> IEEE TSE, </journal> <volume> 14 </volume> <pages> 141-154, </pages> <year> 1988. </year> <month> 14 </month>
Reference-contexts: However, applications also may need to become more flexible about what type and "quality" of resources they can accept. We note that while many researchers have addressed problems relating to scheduling computational resources in parallel computers or local area networks <ref> [3] </ref>, few have addressed the distinctive problems that arise when resources are distributed across many sites. Legion [15] and Prospero [21] are two exceptions. In particular, Prospero's "system manager" and "node manager" processes have some similarities to our central and local managers.
Reference: [4] <author> C. Catlett and L. </author> <title> Smarr. Metacomputing. </title> <journal> CACM, </journal> <year> 1992. </year>
Reference-contexts: Indeed, other groups exploring the concept of a "metacomputer" have proposed software-only solutions <ref> [4, 14] </ref>. A novel aspect of our approach was the deployment of a dedicated I-WAY Point of Presence, or I-POP, machine at each participating site.
Reference: [5] <author> K. M. Chandy and C. Kesselman. </author> <title> CC++: A declarative concurrent object-oriented programming notation. In Research Directions in Concurrent Object-Oriented Programming. </title> <publisher> MIT Press, </publisher> <year> 1993. </year>
Reference-contexts: Since MPICH is defined in terms of an "abstract point-to-point communication device," an implementation of this device in terms of Nexus mechanisms was not difficult. Other systems that use Nexus mechanisms include the parallel language CC++ <ref> [5] </ref> and the parallel scripting language nPerl [12], used to write the I-WAY scheduler. 7.2 Parallel Tools Discussion The I-WAY experiment demonstrated the advantages of the Nexus automatic configuration mechanisms.
Reference: [6] <author> J. Cook, S.D. Crocker, Jr. T. Page, G. Popek, and P. Reiher. Tru*es: </author> <title> Secure file sharing with minimal system administratore intervention. </title> <booktitle> In Proc. SANS-II, The World Conference On Tools and Techniques For System Administration, Networking, and Security. </booktitle> <year> 1993. </year>
Reference-contexts: Previous research and development efforts have produced a variety of candidate "point solutions" [23]. For example, DCE, CORBA, Condor [19], Nimrod [1], and Prospero [21] address problems of locating and/or accessing distributed resources; file systems such as AFS [20], DFS, and Tru*es <ref> [6] </ref> address problems of sharing distributed data; tools such as Nexus [11], MPI [17], PVM [13], and Isis [2] address problems of coupling distributed computational resources; and low-level network technologies such as Asynchronous Transfer Mode (ATM) promise gigabit/sec communication.
Reference: [7] <author> C. Cruz-Neira, D.J. Sandin, T.A. DeFanti, R.V. Kenyon, and J.C. Hart. </author> <title> The CAVE: Audio visual experience automatic virtual environment. </title> <journal> CACM, </journal> <volume> 35(6) </volume> <pages> 65-72, </pages> <year> 1992. </year>
Reference-contexts: are prototypes for future "network-enabled tools" that enhance local computational environments with remote compute and information resources; applications in the third class are prototypes of future collaborative environments. 2.2 The I-WAY Network The I-WAY network connected multiple high-end display devices (including immersive CAVE TM and ImmersaDesk TM virtual reality devices <ref> [7] </ref>); mass storage systems; specialized instruments (such as microscopes); and supercomputers of different architectures, including distributed 3 memory multicomputers (IBM SP, Intel Paragon, Cray T3D, etc.), shared-memory multipro-cessors (SGI Challenge, Convex Exemplar), and vector multiprocessors (Cray C90, Y-MP). These devices were located at 17 different sites across North America.
Reference: [8] <author> T. DeFanti, I. Foster, M. Papka, R. Stevens, and T. Kuhfuss. </author> <title> Overview of the I-WAY: Wide area visual supercomputing. </title> <booktitle> Intl J. Supercomputer Applications, </booktitle> <year> 1996. </year> <note> (to appear). </note>
Reference-contexts: However, little work has been done to integrate these solutions in a way that satisfies the scalability, performance, functionality, reliability, and security requirements of realistic high-performance distributed applications in large-scale internetworks. It is in this context that the I-WAY project <ref> [8] </ref> was conceived in early 1995, with the goal of providing a large-scale testbed in which innovative high-performance and geographically-distributed applications could be deployed. <p> As a result of a competitive proposal process in early 1995, around 70 application groups were selected to run on the I-WAY (over 60 were demonstrated at SC'95). These applications fell into three general classes <ref> [8] </ref>: 1. Many applications coupled immersive virtual environments with remote supercomputers, data systems, and/or scientific instruments.
Reference: [9] <author> B. Ewy, J. Evans, V. Frost, and G. Minden. </author> <title> TCP and ATM in wide area networks. </title> <booktitle> In Proc. 1994 IEEE Gigabit Networking Workshop. IEEE, </booktitle> <year> 1994. </year>
Reference-contexts: Previous gigabit testbed experiments focused on network technologies and low-level protocol issues, using either synthetic network loads or specialized applications for experiments (e.g., see <ref> [9] </ref>). The I-WAY, in contrast, was driven primarily by the requirements of a large application suite. As a result of a competitive proposal process in early 1995, around 70 application groups were selected to run on the I-WAY (over 60 were demonstrated at SC'95). <p> The most closely related development is that of the ACTS ATM Internetwork (AAI) network testbed group: they deployed fast workstations at each site in a Gigabit testbed, to support network throughput experiments <ref> [9] </ref>. 5 Scheduler I-WAY-like systems require the ability to locate computational resources matching various criteria in a heterogeneous, geographically distributed pool.
Reference: [10] <author> I. Foster, C. Kesselman, S. Schwab, and S. Tuecke. </author> <title> Configuration of complex distributed and parallel computations. </title> <type> Preprint, </type> <institution> Mathematics and Computer Science Division, Argonne National Laboratory, Argonne, Ill., </institution> <year> 1996. </year>
Reference-contexts: A computational resource broker that uses scheduler proxies to provide a uniform schedul ing environment that integrates diverse local schedulers. 3. The use of authorization proxies to construct a uniform authentication environment and define trust relationships across multiple administrative domains. 4. Network-aware parallel programming tools that use configuration information <ref> [10] </ref> regarding topology, network interfaces, startup mechanisms, and node naming to provide a uniform view of heterogeneous systems and to optimize communication performance. 2 The rest of this paper is as follows. <p> However, this low-level approach did not hide (or exploit) any details of the underlying network. To support the needs of users desiring a higher-level programming model, we adapted the Nexus multithreaded communication library [11] to execute in an I-WAY environment. Nexus supports automatic configuration mechanisms <ref> [10] </ref> that allow it to use information contained in resource databases to determine which startup mechanisms, network interfaces, and protocols to use in different situations.
Reference: [11] <author> I. Foster, C. Kesselman, and S. Tuecke. </author> <title> The Nexus task-parallel runtime system. </title> <booktitle> In Proc. 1st Intl Workshop on Parallel Processing, </booktitle> <pages> pages 457-462. </pages> <publisher> Tata McGraw Hill, </publisher> <year> 1994. </year>
Reference-contexts: For example, DCE, CORBA, Condor [19], Nimrod [1], and Prospero [21] address problems of locating and/or accessing distributed resources; file systems such as AFS [20], DFS, and Tru*es [6] address problems of sharing distributed data; tools such as Nexus <ref> [11] </ref>, MPI [17], PVM [13], and Isis [2] address problems of coupling distributed computational resources; and low-level network technologies such as Asynchronous Transfer Mode (ATM) promise gigabit/sec communication. <p> However, this low-level approach did not hide (or exploit) any details of the underlying network. To support the needs of users desiring a higher-level programming model, we adapted the Nexus multithreaded communication library <ref> [11] </ref> to execute in an I-WAY environment. Nexus supports automatic configuration mechanisms [10] that allow it to use information contained in resource databases to determine which startup mechanisms, network interfaces, and protocols to use in different situations.
Reference: [12] <author> I. Foster and R. Olson. </author> <title> A guide to parallel and distributed programming in nPerl. </title> <type> Technical report, </type> <institution> Argonne National Laboratory, </institution> <year> 1995. </year> <note> http://www.mcs.anl.gov/nexus/nperl/. </note>
Reference-contexts: Since MPICH is defined in terms of an "abstract point-to-point communication device," an implementation of this device in terms of Nexus mechanisms was not difficult. Other systems that use Nexus mechanisms include the parallel language CC++ [5] and the parallel scripting language nPerl <ref> [12] </ref>, used to write the I-WAY scheduler. 7.2 Parallel Tools Discussion The I-WAY experiment demonstrated the advantages of the Nexus automatic configuration mechanisms.
Reference: [13] <author> G. Geist, A. Beguelin, J. Dongarra, W. Cheng, R. Manchek, and V. Sunderam. </author> <title> Parallel Virtual Machine: A User's Guide and Tutorial for Network Parallel Computing. </title> <publisher> MIT Press, </publisher> <year> 1995. </year>
Reference-contexts: For example, DCE, CORBA, Condor [19], Nimrod [1], and Prospero [21] address problems of locating and/or accessing distributed resources; file systems such as AFS [20], DFS, and Tru*es [6] address problems of sharing distributed data; tools such as Nexus [11], MPI [17], PVM <ref> [13] </ref>, and Isis [2] address problems of coupling distributed computational resources; and low-level network technologies such as Asynchronous Transfer Mode (ATM) promise gigabit/sec communication. <p> Several other parallel tools besides Nexus provide some degree of support for heterogeneous systems. Both the Argonne MPI implementation [16] and the PVM <ref> [13] </ref> communication library support heterogeneous environments, but neither handles multiple protocols.
Reference: [14] <author> A. Grimshaw, J. Weissman, E. West, and E. Lyot, Jr. Metasystems: </author> <title> An approach combining parallel processing and heterogeneous distributed computing systems. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 21(3) </volume> <pages> 257-270, </pages> <year> 1994. </year>
Reference-contexts: Indeed, other groups exploring the concept of a "metacomputer" have proposed software-only solutions <ref> [4, 14] </ref>. A novel aspect of our approach was the deployment of a dedicated I-WAY Point of Presence, or I-POP, machine at each participating site.
Reference: [15] <author> A. Grimshaw, W. Wulf, J. French, A. Weaver, and P. Reynolds, Jr. Legion: </author> <title> The next logical step toward a nationwide virtual computer. </title> <type> Technical Report CS-94-21, </type> <institution> Department of Computer Science, University of Virginia, </institution> <year> 1994. </year>
Reference-contexts: We note that while many researchers have addressed problems relating to scheduling computational resources in parallel computers or local area networks [3], few have addressed the distinctive problems that arise when resources are distributed across many sites. Legion <ref> [15] </ref> and Prospero [21] are two exceptions. In particular, Prospero's "system manager" and "node manager" processes have some similarities to our central and local managers. <p> However, both DCE and CORBA appear to have significant deficiencies as a basis for application programming in I-WAY-like systems. In particular, the remote procedure call is not well-suited to applications in which performance requirements demand asynchronous communication, multiple outstanding requests, and/or efficient collective operations. The Legion project <ref> [15] </ref> is another project developing software technology to support computing in wide-area environments. Issues addressed by this wide-reaching effort include scheduling, file systems, security, fault tolerance, and network protocols.
Reference: [16] <author> W. Gropp, E. Lusk, N. Doss, and A. Skjellum. </author> <title> A high-performance, portable implementation of the MPI message-passing interface standard. </title> <type> Technical report, </type> <institution> Argonne National Laboratory, </institution> <year> 1996. </year>
Reference-contexts: Nexus could then use this information when creating a user computation. (Nexus support for multithreading should, in principle, also be useful|for latency hiding|although in practice it was not used for that purpose during the I-WAY experiment.) Several other libraries, notably the CAVEcomm virtual reality library [22] and the MPICH <ref> [16] </ref> implementation of MPI, were extended to use Nexus mechanisms. Since MPICH is defined in terms of an "abstract point-to-point communication device," an implementation of this device in terms of Nexus mechanisms was not difficult. <p> Currently, this library implements collective operations using algorithms designed for multicomputer environments; presumably, communication costs can often be reduced by using communication structures that avoid intermachine communication. Several other parallel tools besides Nexus provide some degree of support for heterogeneous systems. Both the Argonne MPI implementation <ref> [16] </ref> and the PVM [13] communication library support heterogeneous environments, but neither handles multiple protocols.
Reference: [17] <author> W. Gropp, E. Lusk, and A. Skjellum. </author> <title> Using MPI: Portable Parallel Programming with the Message Passing Interface. </title> <publisher> MIT Press, </publisher> <year> 1995. </year>
Reference-contexts: For example, DCE, CORBA, Condor [19], Nimrod [1], and Prospero [21] address problems of locating and/or accessing distributed resources; file systems such as AFS [20], DFS, and Tru*es [6] address problems of sharing distributed data; tools such as Nexus [11], MPI <ref> [17] </ref>, PVM [13], and Isis [2] address problems of coupling distributed computational resources; and low-level network technologies such as Asynchronous Transfer Mode (ATM) promise gigabit/sec communication.
Reference: [18] <author> G. H. Kim and E. H. Spafford. </author> <title> Writing, supporting, and evaluating Tripwire: A publically available security tool. </title> <booktitle> In Proc. USENIX Unix Applications Development Symp., </booktitle> <pages> pages 89-107. </pages> <booktitle> The USENIX Association, </booktitle> <year> 1994. </year>
Reference-contexts: In the I-WAY experiment, we standardized on Sun SPARCStations. A standard software configuration included SunOS 4.1.4 with latest patches; a limited set of Unix utilities; the Cygnus release of Kerberos 4; AFS; the I-WAY scheduler; and various security tools such as Tripwire <ref> [18] </ref>, TCP wrappers, and auditing software. This software was maintained at a central site (via AFS) and could be installed easily on each I-POP; furthermore, the use of Tripwire meant that it was straightforward to detect changes to the base configuration.
Reference: [19] <author> M. Litzkow, M. Livney, and M. </author> <title> Mutka. Condor ahunter of idle workstations. </title> <booktitle> In Proc. 8th Intl Conf. on Distributed Computing Systems, </booktitle> <pages> pages 104-111, </pages> <year> 1988. </year>
Reference-contexts: Previous research and development efforts have produced a variety of candidate "point solutions" [23]. For example, DCE, CORBA, Condor <ref> [19] </ref>, Nimrod [1], and Prospero [21] address problems of locating and/or accessing distributed resources; file systems such as AFS [20], DFS, and Tru*es [6] address problems of sharing distributed data; tools such as Nexus [11], MPI [17], PVM [13], and Isis [2] address problems of coupling distributed computational resources; and low-level
Reference: [20] <author> J.H. Morris et al. Andrew: </author> <title> A distributed personal computing environment. </title> <journal> CACM, </journal> <volume> 29(3), </volume> <year> 1986. </year> <month> 15 </month>
Reference-contexts: Previous research and development efforts have produced a variety of candidate "point solutions" [23]. For example, DCE, CORBA, Condor [19], Nimrod [1], and Prospero [21] address problems of locating and/or accessing distributed resources; file systems such as AFS <ref> [20] </ref>, DFS, and Tru*es [6] address problems of sharing distributed data; tools such as Nexus [11], MPI [17], PVM [13], and Isis [2] address problems of coupling distributed computational resources; and low-level network technologies such as Asynchronous Transfer Mode (ATM) promise gigabit/sec communication. <p> Site-specific implementations of a simple management interface allow I-WAY management systems to communicate with other machines at the site to allocate resources to users, start processes on resources, and so forth. The Andrew distributed file system (AFS) <ref> [20] </ref> is used as a repository for system software and status information. Development, maintenance, and auditing costs are significantly reduced if all I-POP computers are of the same type. In the I-WAY experiment, we standardized on Sun SPARCStations.
Reference: [21] <author> B. Clifford Neumann and Santosh Rao. </author> <title> The Prospero resource manager: A scalable framework for processor allocation in distributed systems. </title> <journal> Concurrency: Practice and Experience, </journal> <month> June </month> <year> 1994. </year>
Reference-contexts: Previous research and development efforts have produced a variety of candidate "point solutions" [23]. For example, DCE, CORBA, Condor [19], Nimrod [1], and Prospero <ref> [21] </ref> address problems of locating and/or accessing distributed resources; file systems such as AFS [20], DFS, and Tru*es [6] address problems of sharing distributed data; tools such as Nexus [11], MPI [17], PVM [13], and Isis [2] address problems of coupling distributed computational resources; and low-level network technologies such as Asynchronous <p> We note that while many researchers have addressed problems relating to scheduling computational resources in parallel computers or local area networks [3], few have addressed the distinctive problems that arise when resources are distributed across many sites. Legion [15] and Prospero <ref> [21] </ref> are two exceptions. In particular, Prospero's "system manager" and "node manager" processes have some similarities to our central and local managers. However, neither system supports interfaces to other schedulers: they require full control of scheduled resources. 6 Security Security is a major and multifaceted issue in I-WAY-like systems.
Reference: [22] <author> M. Papka. </author> <title> The CAVEcomm library. </title> <type> Technical report, </type> <institution> Argonne National Laboratory, </institution> <year> 1995. </year> <note> http://www.mcs.anl.gov/FUTURES LAB/VR/APPS/C2C/. </note>
Reference-contexts: Nexus could then use this information when creating a user computation. (Nexus support for multithreading should, in principle, also be useful|for latency hiding|although in practice it was not used for that purpose during the I-WAY experiment.) Several other libraries, notably the CAVEcomm virtual reality library <ref> [22] </ref> and the MPICH [16] implementation of MPI, were extended to use Nexus mechanisms. Since MPICH is defined in terms of an "abstract point-to-point communication device," an implementation of this device in terms of Nexus mechanisms was not difficult.
Reference: [23] <author> S. Mullender (ed). </author> <title> Distributed Systems. </title> <publisher> ACM Press, </publisher> <year> 1989. </year>
Reference-contexts: Previous research and development efforts have produced a variety of candidate "point solutions" <ref> [23] </ref>.
Reference: [24] <author> J. Steiner, B. Neumann, and J. Schiller. </author> <title> Kerberos: An authentication system for open network systems. </title> <booktitle> In Usenix Conference Proceedings, </booktitle> <pages> pages 191-202. </pages> <year> 1988. </year> <month> 16 </month>
Reference-contexts: Root rsh is an unacceptable long-term solution even when the I-POP is totally trusted, because of the possibility of IP-spoofing attacks. We can protect against these attacks by using a remote shell function that uses authentication (for example, one based on Kerberos <ref> [24] </ref> or PGP, either directly or via DCE). For similar reasons, communications between the scheduling daemons should also be authenticated. A more fundamental limitation of the I-WAY authentication scheme as implemented was that each user had to have an account at each site to which access was required.
References-found: 24

