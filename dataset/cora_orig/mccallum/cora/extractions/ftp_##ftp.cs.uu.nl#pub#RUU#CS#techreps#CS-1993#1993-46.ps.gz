URL: ftp://ftp.cs.uu.nl/pub/RUU/CS/techreps/CS-1993/1993-46.ps.gz
Refering-URL: http://www.cs.ruu.nl/docs/research/publication/TechList1.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: bindings give a better incremental behavior when memoing the traversing functions. The reason for this
Author: Paul Hudak and Joseph H. Fasel. [HPJW ] P. Hudak, S. Peyton-Jones, P. Wadler, et al. 
Address: Netherlands,  Netherlands,  
Affiliation: Utrecht University, Department of Computer Science, Utrecht, The  Utrecht University, Department of Computer Science, Utrecht, The  
Date: 27(5), may 1992.  27(5), may 1992.  September 1985.  November 1991.  November 1989.  April  February 1993.  1-14, January 1992.  
Note: Finally,  Acta Informatica, 21:239-250, 1984. [HF92]  ACM SIGPLAN Notices, Haskell special issue,  (version 1.2). ACM SIGPLAN Notices, Haskell special issue,  [Hug85] John Hughes. Lazy memo-functions. In Jean-Pierre Jouannaud, editor, Proceedings of the IFIP Conference on Functional Programming Languages and Computer Architecture, volume 201 of Lecture Notes in Computer Science, pages 129-146. Springer-Verlag,  [Jon91] Mark P. Jones. Introduction to Gofer 2.20. Oxford Programming Research Group,  Computing Science in the Netherlands CSN '87, November 1987. [Kui89] Matthijs F. Kuiper. Parallel Attribute Evaluation. PhD thesis,  1992. [Vog93] Harald Vogt. Higher order Attribute Grammars. PhD thesis,  [Wad90] Philip Wadler. Comprehending monads. In Conference on Lisp and Functional Programming, Nice, France, June 1990. ACM. [Wad92] Philip Wadler. The essence of functional programming. In Proceedings of the 19th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, pages  volume 118 of Nato ASI Series F: Computer and Systems Sciences, pages 233-264. Springer-Verlag, 1993. 14  
Pubnum: note),  
Abstract: bindings we can still benefit from strong typing. Not only can we still use a strongly typed tree, but we have the additional type information of the bindings themselves as well. This is especially useful when the functional program is generated, as in our case. 
Abstract-found: 1
Intro-found: 1
Reference: [Bir84] <author> R.S. Bird. </author> <title> Using circular programs to eliminate multiple traversals of data. </title> <journal> Acta Informatica, </journal> <volume> 21 </volume> <pages> 239-250, </pages> <year> 1984. </year>
Reference: [HF92] <author> Paul Hudak and Joseph H. Fasel. </author> <title> A gentle introduction to haskell. </title> <journal> ACM SIGPLAN Notices, Haskell special issue, </journal> <volume> 27(5), </volume> <month> may </month> <year> 1992. </year>
Reference: [HPJW + 92] <editor> P. Hudak, S. Peyton-Jones, P. Wadler, et al. </editor> <title> Report on the programming language haskell, a non-strict purely functional language (version 1.2). </title> <journal> ACM SIGPLAN Notices, Haskell special issue, </journal> <volume> 27(5), </volume> <month> may </month> <year> 1992. </year>
Reference: [Hug85] <editor> John Hughes. Lazy memo-functions. In Jean-Pierre Jouannaud, editor, </editor> <booktitle> Proceedings of the IFIP Conference on Functional Programming Languages and Computer Architecture, volume 201 of Lecture Notes in Computer Science, </booktitle> <pages> pages 129-146. </pages> <publisher> Springer-Verlag, </publisher> <month> September </month> <year> 1985. </year>
Reference: [Jon91] <author> Mark P. Jones. </author> <title> Introduction to Gofer 2.20. </title> <booktitle> Oxford Programming Research Group, </booktitle> <month> November </month> <year> 1991. </year>
Reference: [KS87] <author> M.F. Kuiper and S.D. Swierstra. </author> <title> Using attribute grammars to derive efficient functional programs. </title> <booktitle> Computing Science in the Netherlands CSN '87, </booktitle> <month> November </month> <year> 1987. </year>
Reference: [Kui89] <author> Matthijs F. Kuiper. </author> <title> Parallel Attribute Evaluation. </title> <type> PhD thesis, </type> <institution> Utrecht University, Department of Computer Science, </institution> <address> Utrecht, The Netherlands, </address> <month> November </month> <year> 1989. </year>
Reference: [Pen92] <author> Maarten Pennings. </author> <title> Bindings: their definition and their type. (a personal note), </title> <month> April </month> <year> 1992. </year>
Reference: [Vog93] <author> Harald Vogt. </author> <title> Higher order Attribute Grammars. </title> <type> PhD thesis, </type> <institution> Utrecht University, Department of Computer Science, </institution> <address> Utrecht, The Netherlands, </address> <month> February </month> <year> 1993. </year>
Reference: [Wad90] <author> Philip Wadler. </author> <title> Comprehending monads. </title> <booktitle> In Conference on Lisp and Functional Programming, </booktitle> <address> Nice, France, </address> <month> June </month> <year> 1990. </year> <note> ACM. </note>
Reference: [Wad92] <editor> Philip Wadler. </editor> <booktitle> The essence of functional programming. In Proceedings of the 19th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, </booktitle> <pages> pages 1-14, </pages> <month> January </month> <year> 1992. </year>

References-found: 11

