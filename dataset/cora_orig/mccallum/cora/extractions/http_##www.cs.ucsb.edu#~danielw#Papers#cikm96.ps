URL: http://www.cs.ucsb.edu/~danielw/Papers/cikm96.ps
Refering-URL: http://www.cs.ucsb.edu/~danielw/Papers/publications.html
Root-URL: http://www.cs.ucsb.edu
Email: danielw@cs.ucsb.edu  agrawal@cs.ucsb.edu  amr@cs.ucsb.edu  ambuj@cs.ucsb.edu  smithtr@cs.ucsb.edu  
Title: Efficient Retrieval for Browsing Large Image Databases  
Author: Daniel Wu Divyakant Agrawal Amr El Abbadi Ambuj Singh Terrence R. Smith 
Address: Santa Barbara  Santa Barbara  Santa Barbara  Santa Barbara  Santa Barbara  
Affiliation: University of California,  University of California,  University of California,  University of California,  University of California,  
Abstract: The Alexandria project has been initiated to build a digital library for map and satellite images. Designed for content-based retrieval, the relevant information in each image is encoded in the form of a multi-dimensional feature vector. Though representing images by feature vectors greatly facilitates user queries, indexing these vectors degrades performance when the number of dimensions is large. We consider 2 popular techniques (DFT and SVD) to reduce the dimension of feature vectors, and study their retrieval performance with respect to recall and precision. We find that though SVD generally out-performs DFT, DFT compares favorably in a limited range suitable for browsing large image databases. 
Abstract-found: 1
Intro-found: 1
Reference: [AFS93] <author> R. Agrawal, C. Faloutsos, and A. Swami. </author> <title> Efficient similarity search in sequence databases. </title> <booktitle> In Foundations of Data Organization and Algorithms. 4th Intl. Conf., </booktitle> <pages> pages 6984, </pages> <year> 1993. </year>
Reference-contexts: Using the geometric model of representing an image in the database as a feature vector in some n-dimensional space, the types of queries that we make also have geometric interpretation. We consider two types of similarity queries: nearest-neighbor queries and epsilon-queries <ref> [AFS93] </ref>. A nearest-neighbor query takes two arguments, an image specification (I ) and the number of nearest neighbors (M ) to retrieve M closest images of the specified image in the n-dimensional space. <p> Taking the n-point Discrete Fourier Transform of a finite-length realvalued sequence ~x = fx i g n1 i=0 we obtain a complexvalued sequence ~ X = fX i g n1 A basic result from harmonic analysis is Parseval's Theorem <ref> [AFS93] </ref>: Given a sequence ~x and its Fourier transform ~ X their norms must be equal.
Reference: [AMAM93] <author> A. D. Alexandrov, W. Y. Ma, A. El Abbadi, and B. S. Manjunath. </author> <title> Adaptive filtering and indexing for image databases. </title> <booktitle> In Proc. of the SPIE Int. Conf. on Storage and Retrieval for Image and Video Databases - III, </booktitle> <pages> pages 1223, </pages> <address> San Jose, CA, </address> <month> February 5993. </month>
Reference-contexts: A search structure such as an R ? -tree [BKSS90] is fully capable of indexing feature vectors and other multi-dimensional data, but its performance degrades with increase in the number of dimensions <ref> [FRM94, AMAM93] </ref>. Feature vectors with number of dimensions 48 would not perform well using an R ? -tree. We must examine other approaches to solving this problem. One technique which we will explore is to reduce the dimension of the feature vectors.
Reference: [BKSS90] <author> N. Beckmann, H.-P. Kriegel, R. Schneider, and B. Seeger. </author> <title> The r ? -tree: an efficient and robust access method for points and rectangle. </title> <booktitle> In Proc. ACM SIGMOD Int. Conf. on Management of Data, </booktitle> <pages> pages 322331, </pages> <month> May </month> <year> 1990. </year> <note> Num Ave Correct Ave Recall Neighbors DFT DFT fl SVD DFT DFT fl SVD 1 0.58 0.73 0.73 0.5835 0.7274 0.7344 10 8.28 8.99 9.15 0.8284 0.8991 0.9154 20 16.28 18.14 18.68 0.8142 0.9070 0.9341 </note>
Reference-contexts: Due to the growing number of feature vectors in the database, the problem of how to efficiently retrieve these vectors must be addressed. A search structure such as an R ? -tree <ref> [BKSS90] </ref> is fully capable of indexing feature vectors and other multi-dimensional data, but its performance degrades with increase in the number of dimensions [FRM94, AMAM93]. Feature vectors with number of dimensions 48 would not perform well using an R ? -tree. We must examine other approaches to solving this problem.
Reference: [Bro66] <author> P. Brodatz. </author> <title> Textures: A Photographic Album for Artists & Designers. </title> <publisher> Dover, </publisher> <address> New York, New York, </address> <year> 1966. </year>
Reference-contexts: Our approach is motivated primarily by the need to support browsing, rather than exact searches of image databases. 2 Similarity Queries of Feature Vectors The dataset used in this paper is based on the collection of textures in the Brodatz album <ref> [Bro66] </ref>. This collection was originally used as a testbed to gauge the accuracy of the texture identification system in Alexandria. The work of [MM96] described how feature extraction was performed from this data. Each image from the Brodatz album was partitioned into 16 subimages.
Reference: [FBF + 94] <author> C. Faloutsos, R. Barber, M. Flickner, J. Hafner, W. Niblack, D. Petkovic, and W. Equitz. </author> <title> Efficient and effective querying by image content. </title> <journal> In Journal of Intelligent Information Systems, </journal> <volume> volume 3, </volume> <pages> pages 231262, </pages> <year> 1994. </year>
Reference-contexts: Some databases organize their data based upon the content of the images, and permit fuzzy searches for an image by describing general properties of the image. The research project QBIC at IBM Almaden lets users formulate queries based on colors, shapes, and sketches against a database of color photographs <ref> [FBF + 94] </ref>. This is an example of a fl Work supported by a research grant from NSF/ARPA/NASA IRI9411330. similarity query or query-by-example: The user specifies a sample image and initiates a search to retrieve similar images from the database. <p> One advantage of epsilon-queries is that they are easier to implement in indexing structures such as an R ? -tree. Recent papers, though, have described implementations of nearest-neighbor searches in R ? -trees [RKV95]. In the browsing model that we have adopted <ref> [FBF + 94, OS95] </ref>, the user begins by specifying a sample image. For databases which store synthetic patterns, this sample image can be constructed on screen using a graphical user interface, a library of sample images, and an array of image-processing tools.
Reference: [FRM94] <author> C. Faloutsos, M. Ranganathan, and Y. Manolopoulos. </author> <title> Fast subsequence matching in time-series databases. </title> <booktitle> In Proc. ACM SIG-MOD Int. Conf. on Management of Data, </booktitle> <pages> pages 419429, </pages> <address> Minneapolis, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: A search structure such as an R ? -tree [BKSS90] is fully capable of indexing feature vectors and other multi-dimensional data, but its performance degrades with increase in the number of dimensions <ref> [FRM94, AMAM93] </ref>. Feature vectors with number of dimensions 48 would not perform well using an R ? -tree. We must examine other approaches to solving this problem. One technique which we will explore is to reduce the dimension of the feature vectors. <p> To achieve this reduction in the dimension of the feature vectors, we consider two different compression techniques using the Discrete Fourier Transform (DFT) and the Singular Value Decomposition (SVD). These techniques have been used to reduce the dimensionality of information in several projects <ref> [FRM94] </ref>. For time-series data such as stock market prices, one may obtain a good approximation to the data by retaining only its low-frequency Fourier coefficients. <p> We will study both of these techniques as we seek to browse a database. 3.1 Discrete Fourier Transform Following the approach taken by <ref> [FRM94] </ref>, we begin by studying the properties of the DFT. In our earlier discussion, we have been dealing with feature vectors, but it is just as easy to represent each vector of length n as a finite-length sequence of length n. <p> This does not necessarily produce the best result. In the experiments of Falout-sos et al <ref> [FRM94] </ref>, the data consisting of stock market prices was very smooth, very slow-growing, and had very few high frequency harmonics. Consequently, it made sense to truncate each DFT vector by retaining the first few Fourier coefficients. There is no reason to assume that this property holds for our texture images.
Reference: [MM96] <author> B. S. Manjunath and W. Y. Ma. </author> <title> Texture features for browsing and retrieval of image data. </title> <journal> IEEE Trans. on Pattern Analysis and Machine Intelligence, </journal> <month> November </month> <year> 1996. </year>
Reference-contexts: One of the goals of the Alexandria project at UC Santa Barbara is to support a wide range of similarity queries over map and image data. The current implementation provides similarity queries for texture data <ref> [MM96] </ref>. The user selects from a library of standard textures, and issues a query for images containing similar textures. Geographers can use this tool to retrieve images with specific topological features for modeling and simulation purposes. <p> This collection was originally used as a testbed to gauge the accuracy of the texture identification system in Alexandria. The work of <ref> [MM96] </ref> described how feature extraction was performed from this data. Each image from the Brodatz album was partitioned into 16 subimages. A Gabor transform 11 was performed on each subimage at different scales and orientations.
Reference: [Nas79] <author> J. C. Nash. </author> <title> Compact Numerical Methods for Computers: linear algebra and function minimisation. </title> <publisher> Adam Hilger Ltd, </publisher> <year> 1979. </year>
Reference-contexts: Collecting these m n-dimensional vectors into an m fi n matrix A, the Singular Value Decomposition of A is given by: A = U V T ; (1) where U is an m fi n matrix, and and V are n fi n matrices <ref> [Nas79] </ref>. In this decomposition, the matrix U comprises a set of column-orthonormal row vectors, while V is an orthonormal matrix. The matrix is a diagonal matrix with non-negative elements, called singular values, 1 ; 2 ; : : : ; n along its diagonal.
Reference: [OS95] <author> V. E. Ogle and M. Stonebraker. Chabot: </author> <title> Retrieval from a relational database of images. </title> <booktitle> IEEE Computer, </booktitle> <pages> pages 4148, </pages> <month> Septem-ber </month> <year> 1995. </year>
Reference-contexts: One advantage of epsilon-queries is that they are easier to implement in indexing structures such as an R ? -tree. Recent papers, though, have described implementations of nearest-neighbor searches in R ? -trees [RKV95]. In the browsing model that we have adopted <ref> [FBF + 94, OS95] </ref>, the user begins by specifying a sample image. For databases which store synthetic patterns, this sample image can be constructed on screen using a graphical user interface, a library of sample images, and an array of image-processing tools.
Reference: [PTVF92] <author> William H. Press, Saul A. Teukolsky, William T. Vetterling, and Brian P. Flannery. </author> <title> Numerical Recipes in C: </title> <booktitle> The Art of Scientific Computing, 2nd Ed. </booktitle> <publisher> Cambridge University Press, </publisher> <year> 1992. </year> <note> 17 i-th Harmonic Scaled jX i j i-th Harmonic Scaled jX i j 0 3.40 3 0.42 4 0.97 7 0.36 8 1.88 11 0.25 12 0.64 15 0.43 16 1.75 19 0.27 20 0.48 23 0.35 24 0.68 </note>
Reference-contexts: The matrix is a diagonal matrix with non-negative elements, called singular values, 1 ; 2 ; : : : ; n along its diagonal. Details on how to to compute the SVD of a matrix are given in <ref> [PTVF92] </ref>. The important thing to note is that the SVD provides the best least squares fit to a set of data points. If each image can be mapped to a point in n-dimensional space, then the database consists of a collection of points scattered in n-dimensional space. <p> Most SVD code such as the C routine svdcmp in <ref> [PTVF92] </ref> arrange the singular values of in sorted order; i.e., 1 is the largest singular value, 2 is the next largest, and so on.
Reference: [RKV95] <author> N. Roussooulos, S. Kelley, and F. Vincent. </author> <title> Nearest neighbor queries. </title> <booktitle> In Proc. ACM SIGMOD Int. Conf. on Management of Data, </booktitle> <pages> pages 7179, </pages> <month> May </month> <year> 1995. </year>
Reference-contexts: One advantage of epsilon-queries is that they are easier to implement in indexing structures such as an R ? -tree. Recent papers, though, have described implementations of nearest-neighbor searches in R ? -trees <ref> [RKV95] </ref>. In the browsing model that we have adopted [FBF + 94, OS95], the user begins by specifying a sample image.
Reference: [Sal89] <author> G. Salton. </author> <title> Automatic Text Processing. </title> <publisher> Addison-Wesley, </publisher> <year> 1989. </year> <note> An expanded version of this paper with further details is available as a Technical Report (TRCS96-19) at http://www.cs.ucsb.edu/TRs. 18 </note>
Reference-contexts: To determine whether DFT or SVD produces more accurate results from each query, we adopt the following 2 criteria: we will measure the recall and precision of each query <ref> [Sal89] </ref>. A similarity query seeks to retrieve all vectors ~x that lie in a neighborhood of radius r about the reference vector ~q. <p> We consider a truncated vector ~ X N in the neighborhood about ~ Q N to be correct if ~x lies in the neighborhood about ~q in the original n-dimensional space. A similar definition of correctness holds for nearest-neighbor queries. In the information retrieval literature <ref> [Sal89] </ref>, the concept of relevant rather than correct image is usually considered. 13 However, the notion of relevance is difficult to ascertain. It involves human testing and cognition, and is very difficult to determine in an automated fashion.
References-found: 12

