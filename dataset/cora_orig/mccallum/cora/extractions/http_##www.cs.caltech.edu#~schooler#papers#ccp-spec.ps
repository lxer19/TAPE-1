URL: http://www.cs.caltech.edu/~schooler/papers/ccp-spec.ps
Refering-URL: http://www.cs.caltech.edu/~schooler/techreports.html
Root-URL: http://www.cs.caltech.edu
Email: schooler@isi.edu  
Title: The Connection Control Protocol: Specification Version 1.1  
Author: Eve M. Schooler 
Date: January 29, 1992  
Affiliation: USC/Information Sciences Institute  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Birman, K., Schiper, A., Stephenson, P. </author> <title> "Lighweight Causal and Atomic Group Multicast", </title> <type> Technical Report TR90-1105, </type> <institution> Department of Computer Science, Cornell University (1990). </institution>
Reference-contexts: Yet, the model is rigidly client-server, where connection management is peer-to-peer, and while this too is surmountable, there is the issue that a group interface is missing from the Sun RPC specification [19]. Group-oriented protocols such as ISIS' CBCAST <ref> [1] </ref> or VMTP [4, 5] might also have served well as a basis for CCP, but group communication under ISIS pays a high penalty unless the groups are large, and group communication under VMTP is of the unreliable variety.
Reference: [2] <author> Braden, R., Ed., </author> <title> "Requirements for Internet Hosts -- Communication Layers", </title> <type> RFC 1122, </type> <institution> USC/Information Sciences Institute, Marina del Rey, </institution> <address> CA (Oct 1989). </address>
Reference-contexts: Therefore, timeouts are dynamically adjusted on a site-by-site basis. These timeout values are regularly updated, as is done for TCP <ref> [2, 8, 9] </ref>, to reflect the expected roundtrip time (RTT) for a packet between two connection managers. RTT is useful not only for the transport level timeout approximation, but also for media synchronization.
Reference: [3] <author> Casner, S., Seo, K., Edmond, W., Topolcic, C., </author> <title> "N-Way Conferencing with Packet Video", </title> <booktitle> Proceedings 3rd International Workshop on Packet Video, </booktitle> <address> VISICOM '90, Morristown, NJ (Mar 1990). </address>
Reference-contexts: The model within which it was framed and the motivation for this work are discussed in a companion document, "The Connection Control Protocol: Architecture Overview" [14] and in earlier documents <ref> [3, 15, 16] </ref>. This document provides information for the Internet community. It does not specify an Internet standard and is considered work in progress. 2. Transport Requirements The development of CCP has revealed as much about application level requirements as it has about those at the transport level.
Reference: [4] <author> Cheriton, D., Williamson, C., </author> <title> "VMTP as the Transport Layer for High-Performance Distributed Systems", </title> <journal> IEEE Communications Magazine, </journal> <month> pp.37-44 (June </month> <year> 1989). </year>
Reference-contexts: Yet, the model is rigidly client-server, where connection management is peer-to-peer, and while this too is surmountable, there is the issue that a group interface is missing from the Sun RPC specification [19]. Group-oriented protocols such as ISIS' CBCAST [1] or VMTP <ref> [4, 5] </ref> might also have served well as a basis for CCP, but group communication under ISIS pays a high penalty unless the groups are large, and group communication under VMTP is of the unreliable variety.
Reference: [5] <author> Cheriton, D., "VMTP: </author> <title> Versatile Message Transaction Protocol - Protocol Specification", </title> <type> RFC 1045, </type> <institution> Stanford University, Stanford, </institution> <address> CA (Feb 1988). </address>
Reference-contexts: Yet, the model is rigidly client-server, where connection management is peer-to-peer, and while this too is surmountable, there is the issue that a group interface is missing from the Sun RPC specification [19]. Group-oriented protocols such as ISIS' CBCAST [1] or VMTP <ref> [4, 5] </ref> might also have served well as a basis for CCP, but group communication under ISIS pays a high penalty unless the groups are large, and group communication under VMTP is of the unreliable variety.
Reference: [6] <author> Deering, S., </author> <title> "Host Extensions for IP Multicasting", </title> <note> RFC 1054 (May 1988). </note>
Reference-contexts: Therefore, CCP requires a group interface to the transaction service, where a list of participants are sent the same message simultaneously from CCP's perspective. Depending on the capabilities of the transport, the client either multicasts the request <ref> [6] </ref> or simulates group multicast by using sequential interaction with each remote peer. For the latter case, it is suggested, but not required, that the transport service allow multiple transactions to be outstanding at once in order to parallelize group communication.
Reference: [7] <author> Escobar, J., Deutsch, D., Partridge, C., </author> <title> "A Multi-Service Flow Synchronization Protocol", BBN Systems and Technologies Division, </title> <address> Cambridge, MA (Mar 1991). </address>
Reference-contexts: RTT is useful not only for the transport level timeout approximation, but also for media synchronization. A connection manager conveys RTT information to its media agents for the synchronization of data flows <ref> [7] </ref> that travel over different routes between source and destination. 2.4.2 Variability Due to Heterogeneity Timeout assignment is further complicated by the fact that other delays figure into the complete timeout computation.
Reference: [8] <author> Jacobson, V., </author> <title> "Congestion Avoidance and Control", </title> <booktitle> Proceedings ACM SIGCOMM '88 (Aug 1988). </booktitle>
Reference-contexts: Therefore, timeouts are dynamically adjusted on a site-by-site basis. These timeout values are regularly updated, as is done for TCP <ref> [2, 8, 9] </ref>, to reflect the expected roundtrip time (RTT) for a packet between two connection managers. RTT is useful not only for the transport level timeout approximation, but also for media synchronization.
Reference: [9] <author> Karn, P., Partridge, C., </author> <title> "Round Trip Time Estimation", </title> <booktitle> Proceedings ACM SIGCOMM '87 (Aug 1987). </booktitle>
Reference-contexts: Therefore, timeouts are dynamically adjusted on a site-by-site basis. These timeout values are regularly updated, as is done for TCP <ref> [2, 8, 9] </ref>, to reflect the expected roundtrip time (RTT) for a packet between two connection managers. RTT is useful not only for the transport level timeout approximation, but also for media synchronization.
Reference: [10] <author> Leib, M., </author> <title> "Host Control Protocol", BBN, </title> <address> Cambridge, MA (Apr 1990). </address>
Reference-contexts: For requests that require lengthy activity before issuing a response, the request-reply pair is broken into two components; we refer to this as a two-tier acknowledgment scheme, which has been used successfully in <ref> [10] </ref>. When a request is sent to a remote connection manager, unless the reply will be nearly instantaneous, the recipient sends an immediate acknowledgment (ACK) of receipt back to the sender. The recipient sends a full-fledged reply once the result of the request is learned.
Reference: [11] <author> Mills, </author> <title> D.L., "Network Time Protocol (version 2) specification and implementation", </title> <type> RFC 1119, </type> <institution> University of Delaware (Sept 1989). </institution>
Reference-contexts: Otherwise known as the confid, or the parameter which uniquely identifies each conference. It combines the connection initiator's login id, the initiator's internetwork address, and the time the conference started in terms of a NTP timestamp <ref> [11] </ref>. o Participant list. The list of conferees delineated as &lt;user login id, internetwork address&gt; tuples. o Status.
Reference: [12] <author> Postel, J., </author> <title> "User Datagram Protocol", </title> <type> RFC 768, </type> <institution> USC/Information Sciences Institute, Marina del Rey, </institution> <address> CA (Aug 1980). </address>
Reference-contexts: The end system doing the requesting is considered the client end of the transaction, while the recipient of the request is the server. Each connection manager is equipped to play the role of both client and server. For optimal performance, the transport service is connectionless (based on UDP sockets <ref> [12, 18] </ref>), since control information is exchanged infrequently by comparison to the duration of an average conference and does not warrant the overhead associated with dedicated connections. In addition, the connectionless model makes transient use of resources. This presents a large savings for n-way connectivity.
Reference: [13] <author> Postel, J., </author> <title> "Transport Control Protocol", </title> <type> RFC 793, </type> <institution> USC/Information Sciences Institute, Marina del Rey, </institution> <address> CA (Sept 1981). </address>
Reference-contexts: In addition, the connectionless model makes transient use of resources. This presents a large savings for n-way connectivity. Furthermore, in our experience [15] dedicated transport level connections (e.g., TCP <ref> [13] </ref>) do not survive intermittent Internet network outages. -1 2.2 Group Communication A connection manager is as likely to perform a group transaction as it is a point-to-point one.
Reference: [14] <author> Schooler, </author> <title> E.M., "The Connection Control Protocol: Architecture Overview", </title> <type> Version 1.0, </type> <institution> USC/Information Sciences Institute, Marina del Rey, </institution> <address> CA (Jan 1992). </address>
Reference-contexts: The model within which it was framed and the motivation for this work are discussed in a companion document, "The Connection Control Protocol: Architecture Overview" <ref> [14] </ref> and in earlier documents [3, 15, 16]. This document provides information for the Internet community. It does not specify an Internet standard and is considered work in progress. 2. <p> This may happen, for instance, when the network becomes partitioned, and communication is interrupted between sites. State transitions may or may not be reported to the media and user interface agents associated with the connection manager <ref> [14] </ref>. <p> The configuration is a variable structure, specifying the types of media requested, as well as suggested devices, protocols, conference attributes, data rates, etc., that all potential conferees have agreed to thus far. See <ref> [14] </ref> for further details. Note that the conferee list is already part of the CCP header. 3210 configuration... pre-scheduleautopilot Connect 3.4.4 Connectr After the CCP header, the Connectr reply message begins with the boolean reply status, the either positive (1) or negative (0) outcome of the transaction. <p> The configuration is a variable structure, specifying the types of media requested, as well as suggested devices, protocols, conference attributes, data rates, etc. See <ref> [14] </ref> for further details. Note that the conferee list is part of the CCP header. -17 3210 configuration... alias... pre-scheduletype of connect Request 3.4.10 Requestr After the CCP header, the Requestr reply message begins with the boolean reply status, the either positive (1) or negative (0) outcome of the transaction. <p> Remote Control: if a remote site can use autopilot to commandeer the local site (by default no). Synchronization policies. Whether or not to orchestrate the resynchronization process on receiving stale or mismatched state in a reply message, and whether to employ the use of active status messages. Agent policies <ref> [14] </ref> referred to in this document: Update policy. Which state transitions merit communication with the media agent. A per media agent policy, which by default is all state transitions. Agent order policy. Order among the agents themselves; sequential or parallel. Again, which ones when. The ordering is parallel by default.
Reference: [15] <author> Schooler, </author> <title> E.M., "A Distributed Architecture for Multimedia Conference Control", </title> <type> Technical Report ISI/RS-91-289, </type> <institution> USC/Information Sciences Institute, Marina del Rey, </institution> <address> CA (November 1991). </address>
Reference-contexts: The model within which it was framed and the motivation for this work are discussed in a companion document, "The Connection Control Protocol: Architecture Overview" [14] and in earlier documents <ref> [3, 15, 16] </ref>. This document provides information for the Internet community. It does not specify an Internet standard and is considered work in progress. 2. Transport Requirements The development of CCP has revealed as much about application level requirements as it has about those at the transport level. <p> In addition, the connectionless model makes transient use of resources. This presents a large savings for n-way connectivity. Furthermore, in our experience <ref> [15] </ref> dedicated transport level connections (e.g., TCP [13]) do not survive intermittent Internet network outages. -1 2.2 Group Communication A connection manager is as likely to perform a group transaction as it is a point-to-point one.
Reference: [16] <author> Schooler, </author> <title> E.M., Casner, S.L., "A Packet-switched Multimedia Conferencing System", </title> <journal> ACM SIGOIS Bulletin, Vol.10, </journal> <volume> No.1, </volume> <month> pp.12-22 (Jan </month> <year> 1989). </year>
Reference-contexts: The model within which it was framed and the motivation for this work are discussed in a companion document, "The Connection Control Protocol: Architecture Overview" [14] and in earlier documents <ref> [3, 15, 16] </ref>. This document provides information for the Internet community. It does not specify an Internet standard and is considered work in progress. 2. Transport Requirements The development of CCP has revealed as much about application level requirements as it has about those at the transport level.
Reference: [17] <author> Sun Microsystems, Inc., </author> <title> "Remote Procedure Call: Protocol Specification", </title> <type> RFC 1057, </type> <institution> Sun Microsystems, Inc., Mountain View, </institution> <address> CA. </address>
Reference-contexts: While several were considered, no one service met all our criteria. The Sun RPC implementation is certainly transaction-oriented, and through some lower level (and not necessarily portable) system calls allows variable timeouts, supports multiple outstanding requests, and enforces at-most once execution <ref> [17] </ref>. Yet, the model is rigidly client-server, where connection management is peer-to-peer, and while this too is surmountable, there is the issue that a group interface is missing from the Sun RPC specification [19].
Reference: [18] <author> Sun Microsystems, </author> <title> "A Socket-based Interprocess Communications Tutorial", Network Programming Document, Sun Microsystems, </title> <publisher> Inc., </publisher> <address> Mountain View, CA. </address>
Reference-contexts: The end system doing the requesting is considered the client end of the transaction, while the recipient of the request is the server. Each connection manager is equipped to play the role of both client and server. For optimal performance, the transport service is connectionless (based on UDP sockets <ref> [12, 18] </ref>), since control information is exchanged infrequently by comparison to the duration of an average conference and does not warrant the overhead associated with dedicated connections. In addition, the connectionless model makes transient use of resources. This presents a large savings for n-way connectivity.
Reference: [19] <author> Tanenbaum, A.S., Van Renesse, R., </author> <title> "A Critique of the Remote Procedure Call Paradigm", </title> <booktitle> Proceedings of the European Technical Community: Research into Networks and Distributed Applications, </booktitle> <volume> EUTECO '88, </volume> <editor> R. Speth, Ed., </editor> <publisher> North-Holland (Apr 1988). </publisher>
Reference-contexts: Yet, the model is rigidly client-server, where connection management is peer-to-peer, and while this too is surmountable, there is the issue that a group interface is missing from the Sun RPC specification <ref> [19] </ref>. Group-oriented protocols such as ISIS' CBCAST [1] or VMTP [4, 5] might also have served well as a basis for CCP, but group communication under ISIS pays a high penalty unless the groups are large, and group communication under VMTP is of the unreliable variety.
References-found: 19

