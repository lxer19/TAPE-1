URL: http://www.cs.cornell.edu/Info/People/mhr/papers/lower2.ps
Refering-URL: http://www.cs.cornell.edu/Info/People/mhr/project.html
Root-URL: 
Title: Lower Bounds for Fully Dynamic Connectivity Problems in Graphs  
Author: Michael L. Fredman Monika Rauch Henzinger 
Abstract: We prove lower bounds on the complexity of maintaining fully dynamic k-edge or k-vertex connectivity in plane graphs and in (k 1)-vertex connected graphs. We show an amortized lower bound of (log n=k(log log n + log b)) per edge insertion, deletion, or query operation in the cell probe model, where b is the word size of the machine and n is the number of vertices in G. We also show an amortized lower bound of (log n=(log log n + log b)) per operation for fully dynamic planarity testing in embedded graphs. These are the first lower bounds for fully dynamic connectivity problems.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. M. Ben-Amram, </author> <title> "On the Power of Random Access Machines", </title> <type> Ph.D. Thesis, </type> <institution> Tel-Aviv University, School of Mathematical Sciences, </institution> <year> 1994. </year>
Reference-contexts: We reduce the parity prefix sum problem to the dynamic problem. The parity prefix sum problem is defined as follows: Given an array A <ref> [1] </ref>; : : : ; A [n] of integers mod 2 with initial value zero execute an arbitary sequence of the following operations: Add (l): Increase A [l] by 1. <p> The dependence of the lower bounds on the word length can be removed for the price of assuming a more specific model of computation, namely a RAM with arithmetic instructions 13 on integers of unbounded word size. Using the lower bounds of <ref> [1] </ref> for the parity prefix sum problem and the helpful parity prefix sum problem and the same reductions as in the previous sections we obtain a lower bound of (log n= log log n) if the data structure uses space that is polynomial in n and a lower bound of (log
Reference: [2] <author> D. Eppstein, G. F. Italiano, R. Tamassia, R. E. Tarjan, J. Westbrook, M. Yung, </author> <title> "Maintenance of a Minimum Spanning Forest in a Dynamic Planar Graph" J.Algorithms, </title> <booktitle> 13 (1992), </booktitle> <pages> 33-54. </pages>
Reference-contexts: We give in Figure 1 below the current best upper bounds in plane graphs, planar graphs, and general graphs. For general graphs we present both, the best deterministic and the best randomized bounds. plane planar general, rand. general, det. connectivity O (log n) <ref> [2] </ref> O (log 2 n) [4] O (log 3 n) [7] O ( p 2-edge-connectivity O (log 2 n) [9] O (log 2 n) [4] O (log 4 n) [7] O ( p 2-vertex-connectivity O (log 2 n) [11] O ( p p 3-edge-connectivity O ( p 3-vertex-connectivity O ( p
Reference: [3] <author> D. Eppstein, Z. Galil, G. F. Italiano, A. Nissenzweig, </author> <title> "Sparsification ATechnique for Speeding Up Dynamic Graph Algorithms", </title> <booktitle> Proc. 33nd Annual Symp. on Foundations of Computer Science, </booktitle> <year> 1992. </year>
Reference: [4] <author> D. Eppstein, Z. Galil, G. F. Italiano, T. H. Spencer, </author> <title> "Separator Based Sparsification for Dynamic Planar Graph Algorithms", </title> <booktitle> Proc. 23nd Annual Symp. on Theory of Computing, </booktitle> <year> 1993. </year>
Reference-contexts: We give in Figure 1 below the current best upper bounds in plane graphs, planar graphs, and general graphs. For general graphs we present both, the best deterministic and the best randomized bounds. plane planar general, rand. general, det. connectivity O (log n) [2] O (log 2 n) <ref> [4] </ref> O (log 3 n) [7] O ( p 2-edge-connectivity O (log 2 n) [9] O (log 2 n) [4] O (log 4 n) [7] O ( p 2-vertex-connectivity O (log 2 n) [11] O ( p p 3-edge-connectivity O ( p 3-vertex-connectivity O ( p 4-edge-connectivity O ( p planarity <p> For general graphs we present both, the best deterministic and the best randomized bounds. plane planar general, rand. general, det. connectivity O (log n) [2] O (log 2 n) <ref> [4] </ref> O (log 3 n) [7] O ( p 2-edge-connectivity O (log 2 n) [9] O (log 2 n) [4] O (log 4 n) [7] O ( p 2-vertex-connectivity O (log 2 n) [11] O ( p p 3-edge-connectivity O ( p 3-vertex-connectivity O ( p 4-edge-connectivity O ( p planarity testing O (log 2 n) [10] O ( p We establish lower bounds on the time per operation for
Reference: [5] <author> S. </author> <title> Even, "Graph Algorithms", </title> <publisher> Computer Science Press, </publisher> <year> 1979. </year>
Reference-contexts: An embedding of a graph G is uniquely determined by fixing at each vertex the order of its incident edges. Two nodes x and y are k-edge (k-vertex) connected if there are k edge-disjoint (vertex-disjoint) paths connecting them. For further terminology we refer to <ref> [5] </ref>. Given a graph G, the fully dynamic k-edge (k-vertex) connectivity problem is to execute the following operations in arbitrary order: Insert (u; v) : Add the edge (u; v) to G. Delete (u; v) : Remove the edge (u; v) from G.
Reference: [6] <author> M. L. Fredman and M. E. Saks, </author> <title> "The Cell Probe Complexity of Dynamic Data Structures", </title> <booktitle> Proc. 19th Annual Symp. on Theory of Computing, </booktitle> <year> 1989, </year> <pages> 345-354. </pages>
Reference-contexts: An Add (l) operation corresponds to inserting and deleting a constant number of suitable edges. To determine the suitable edges we use a constant number of operations in an additional data structure, namely in a Van-Emde-Boas priority queue [12]. 3 Fredman and Saks <ref> [6] </ref> give a lower bound of (m log n=(log log n + log b)) for the parity prefix sum problem for any sequence of m operations in the cell probe model with word size b.
Reference: [7] <author> M. Rauch Henzinger and Valerie King, </author> <title> "Randomized Dynamic Algorithms with Poly-logarithmic Time per Operation", </title> <booktitle> to appear in Proc. 27th Annual Symp. on Theory of Computing, </booktitle> <year> 1995. </year>
Reference-contexts: For general graphs we present both, the best deterministic and the best randomized bounds. plane planar general, rand. general, det. connectivity O (log n) [2] O (log 2 n) [4] O (log 3 n) <ref> [7] </ref> O ( p 2-edge-connectivity O (log 2 n) [9] O (log 2 n) [4] O (log 4 n) [7] O ( p 2-vertex-connectivity O (log 2 n) [11] O ( p p 3-edge-connectivity O ( p 3-vertex-connectivity O ( p 4-edge-connectivity O ( p planarity testing O (log 2 n) <p> we present both, the best deterministic and the best randomized bounds. plane planar general, rand. general, det. connectivity O (log n) [2] O (log 2 n) [4] O (log 3 n) <ref> [7] </ref> O ( p 2-edge-connectivity O (log 2 n) [9] O (log 2 n) [4] O (log 4 n) [7] O ( p 2-vertex-connectivity O (log 2 n) [11] O ( p p 3-edge-connectivity O ( p 3-vertex-connectivity O ( p 4-edge-connectivity O ( p planarity testing O (log 2 n) [10] O ( p We establish lower bounds on the time per operation for the above problems in the
Reference: [8] <author> M. Rauch Henzinger and Han La Poutre, </author> <title> "Certificates and Fast Algorithms for Bicon-nectivity in Fully-Dynamic Graphs", </title> <note> submitted. </note>
Reference: [9] <author> J. Hershberger, M. Rauch, and S. Suri, </author> <title> "Fully Dynamic 2-Edge-Connectivity in Planar Graphs", </title> <booktitle> Proc. 3rd Scandinavian Workshop on Algorithm Theory, </booktitle> <publisher> LNCS 621, Springer-Verlag, </publisher> <year> 1992, </year> <pages> 233-244. 14 </pages>
Reference-contexts: For general graphs we present both, the best deterministic and the best randomized bounds. plane planar general, rand. general, det. connectivity O (log n) [2] O (log 2 n) [4] O (log 3 n) [7] O ( p 2-edge-connectivity O (log 2 n) <ref> [9] </ref> O (log 2 n) [4] O (log 4 n) [7] O ( p 2-vertex-connectivity O (log 2 n) [11] O ( p p 3-edge-connectivity O ( p 3-vertex-connectivity O ( p 4-edge-connectivity O ( p planarity testing O (log 2 n) [10] O ( p We establish lower bounds on
Reference: [10] <author> G. Italiano, H. La Poutre, and M. Rauch, </author> <title> "Fully Dynamic Planarity Testing in Embed--ded Graphs", </title> <editor> in: T. Lengauer (Ed.), </editor> <booktitle> Algorithms - ESA '93, </booktitle> <publisher> LNCS 726, Springer Verlag, </publisher> <year> 1993, </year> <pages> pages 212-223. </pages>
Reference-contexts: O ( p 2-edge-connectivity O (log 2 n) [9] O (log 2 n) [4] O (log 4 n) [7] O ( p 2-vertex-connectivity O (log 2 n) [11] O ( p p 3-edge-connectivity O ( p 3-vertex-connectivity O ( p 4-edge-connectivity O ( p planarity testing O (log 2 n) <ref> [10] </ref> O ( p We establish lower bounds on the time per operation for the above problems in the cell probe model. We show the lower bounds in the cell probe model of computation with wordsize b [16].
Reference: [11] <author> M. H. Rauch. </author> <title> "Improved Data Structures for Fully Dynamic Biconnectivity", </title> <booktitle> Proc. 26th Annual Symp. on Theory of Computing, </booktitle> <year> 1994, </year> <pages> 686-695. </pages>
Reference-contexts: randomized bounds. plane planar general, rand. general, det. connectivity O (log n) [2] O (log 2 n) [4] O (log 3 n) [7] O ( p 2-edge-connectivity O (log 2 n) [9] O (log 2 n) [4] O (log 4 n) [7] O ( p 2-vertex-connectivity O (log 2 n) <ref> [11] </ref> O ( p p 3-edge-connectivity O ( p 3-vertex-connectivity O ( p 4-edge-connectivity O ( p planarity testing O (log 2 n) [10] O ( p We establish lower bounds on the time per operation for the above problems in the cell probe model. <p> An earlier version of this work has appeared in <ref> [11] </ref>. In the next section we give the general ideas of the lower bound proofs. In Section 3 and Section 4 we present the proofs for fully dynamic planarity testing and k-edge and k-vertex connectivity if b &lt; n 1= log log n = log n.
Reference: [12] <author> P. van Emde Boas, </author> <title> "Preserving order in a Forest in Less Than Logarithmic Time and Linear Space", </title> <journal> Inform. Process. Lett., </journal> <volume> 6(3), </volume> <year> 1977, </year> <pages> 80-82. </pages>
Reference-contexts: An Add (l) operation corresponds to inserting and deleting a constant number of suitable edges. To determine the suitable edges we use a constant number of operations in an additional data structure, namely in a Van-Emde-Boas priority queue <ref> [12] </ref>. 3 Fredman and Saks [6] give a lower bound of (m log n=(log log n + log b)) for the parity prefix sum problem for any sequence of m operations in the cell probe model with word size b.
Reference: [13] <author> J. Westbrook, </author> <title> "Fast Incremental Planarity Testing", </title> <booktitle> Proc. 19th Int. Colloq. on Automata, Languages, and Programming (ICALP), </booktitle> <year> 1992, </year> <pages> 342-353. </pages>
Reference-contexts: If only insertions and queries, but no deletions are allowed, then tight lower bounds of (ff (m; n)) per operation are known for connectivity, 2-edge connectivity, 2-vertex connectivity, 3-edge connectivity, 3-vertex connectivity, and planarity testing <ref> [15, 13] </ref> by reducing these problems to the union-find problem. An earlier version of this work has appeared in [11]. In the next section we give the general ideas of the lower bound proofs.
Reference: [14] <author> J. Westbrook and R E. Tarjan, </author> <title> "Amortized Analysis of Algorithms for Set Union with Backtracking", </title> <journal> SIAM J. Comput., </journal> <volume> 18(1), </volume> <year> 1989, </year> <pages> 1-11. </pages>
Reference-contexts: We review next some related work. Westbrook and Tarjan <ref> [14] </ref> gave a lower bound for a (stronger) variant of the dynamic connectivity, 2-edge-connectivity, and 2-vertex-connectivity problems. Their model of a dynamic algorithm requires that a query returns the component to which a vertex belongs.
Reference: [15] <author> J. Westbrook and R E. Tarjan, </author> <title> "Maintaining Bridge-Connected and Biconnected Components On-Line" Algorithmica 7 (1992), </title> <type> 433-464. </type>
Reference-contexts: If only insertions and queries, but no deletions are allowed, then tight lower bounds of (ff (m; n)) per operation are known for connectivity, 2-edge connectivity, 2-vertex connectivity, 3-edge connectivity, 3-vertex connectivity, and planarity testing <ref> [15, 13] </ref> by reducing these problems to the union-find problem. An earlier version of this work has appeared in [11]. In the next section we give the general ideas of the lower bound proofs.
Reference: [16] <author> A. Yao, </author> <title> "Should Tables Be Sorted", </title> <journal> J. Assoc. Comput. Mach., </journal> <volume> 28(3), </volume> <year> 1981, </year> <pages> 615-628. 15 </pages>
Reference-contexts: We show the lower bounds in the cell probe model of computation with wordsize b <ref> [16] </ref>. The time complexity of a sequential computation is defined to be the number of accessed memory words in a RAM of fixed word size b. All other operations are free. This model is at least as powerful as a random access machine of the same word size.
References-found: 16

