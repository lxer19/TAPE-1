URL: http://www.icsi.berkeley.edu/ftp/global/pub/techreports/1994/tr-94-005.ps.gz
Refering-URL: http://www.icsi.berkeley.edu/ftp/global/pub/techreports/1994/
Root-URL: http://www.icsi.berkeley.edu
Email: email: becker@informatik.uni-frankfurt.de  email: &lt;name&gt;@informatik.uni  
Title: On the Relation Between BDDs and FDDs (Extended Abstract)  
Author: Bernd Becker Rolf Drechsler Ralph Werchner 
Note: frankfurt.de The first and second author were supported by DFG grant Be 1176/4-1.  
Address: Berkeley, CA 94707;  20 Informatik, J.W.Goethe-Universitat, D-60054 Frankfurt;  
Affiliation: Fachbereich 20 Informatik, J.W.Goethe-Universitat, D-60054 Frankfurt, and International Computer Science Institute,  Fachbereich  
Pubnum: TR-94-005  
Abstract-found: 0
Intro-found: 1
Reference: [ABH + 86] <author> M. Ajtai, L. Babai, P. Hajnal, J. Komlos, P. Pudlak, V. Rodl, E. Szemeredi, and G. Turan. </author> <title> Two lower bounds for branching programs. </title> <booktitle> In Proceedings of 18th ACM STOC, </booktitle> <pages> pages 30-38, </pages> <year> 1986. </year>
Reference-contexts: Let -cl n;3 (x) = 1, iff the undirected graph G (x) = (V; E), with V = f1; ::; ng and E = ffi; jg j x ij = 1g contains an odd number of 3-cliques. It has been proven in <ref> [ABH + 86] </ref> that each FBDD representing -cl n;3 requires size 2 (n 2 ) . <p> Since each path from the root of T to a leaf labeled 1 contains exactly 3 high-edges, the size of the (t f3g )-reduction of T is at most 3 n The lower bound for FBDD-SIZE (-cl n;3 ) was derived in <ref> [ABH + 86] </ref> and the lower bound for FFDD-SIZE (1-cl n;3 ) is an application of theorem 3. 2 For OBDDs it is well-known that synthesis operations can be performed efficiently.
Reference: [Ake78] <author> S.B. Akers. </author> <title> Binary decision diagrams. </title> <journal> IEEE Trans. on Comp., </journal> <volume> C-27:509-516, </volume> <year> 1978. </year>
Reference: [BDT93] <author> B. Becker, R. Drechsler, and M. Theobald. </author> <title> On the implementation of a package for efficient representation and manipulation of functional decision diagrams. </title> <booktitle> IFIP WG 10.5 Workshop on Applications of the Reed-Muller Expansion in Circuit Design, </booktitle> <address> Hamburg, </address> <year> 1993. </year>
Reference-contexts: Furthermore, AND/EXOR realizations proved to be very efficient for large classes of circuits, e.g., arithmetic circuits, error correcting circuits and circuits for tele-communication ([Ber68, Sau92]), and, in addition, have nice testability properties ([Red72, DB93]). First experimental results given in <ref> [KSR92, SKR92, KR93, BDT93] </ref> demonstrate that OFDDs might be very useful for AND/EXOR based synthesis and might even be an interesting alternative data structure for the representation of Boolean functions.
Reference: [Ber68] <author> E. R. Berlekamp. </author> <title> Algebraic Coding Theory. </title> <publisher> McGraw-Hill Book Company, </publisher> <year> 1968. </year>
Reference: [Bry86] <author> R.E. Bryant. </author> <title> Graph based algorithms for Boolean function manipulation. </title> <journal> IEEE Trans. on Comp., </journal> <volume> 8 </volume> <pages> 677-691, </pages> <year> 1986. </year>
Reference-contexts: In [KSR92] they have also been applied to OFDDs. In the following it turns out that for OFDDs (t f1;3g )-reductions are more natural. A careful analysis of the proofs in <ref> [Bry86, SW92b] </ref> shows that the following lemma is valid for ordered DDs: Lemma 1 The (t S )-reduction of an ordered DD G for S 2 ff1g; f2g; f3g; f1; 2g; f1; 3gg is uniquely determined and can be computed in time O (jGj). <p> Consider f = (x 1 x 2 + :: + x 2n1 x 2n ) ^ V (i mod 2)=1 (x i = x i+1 ). A straightforward computation shows that f = t (x 1 x 2 + :: + x 2n1 x 2n ). From <ref> [Bry86] </ref> and theorem 2 we conclude that there are two orders and 0 of X 2n so that OFDD-SIZE (f ) = O (n 2 ) but OFDD-SIZE 0 (f ) = ( 1 n 2 n ), i.e. variable ordering is important. <p> Now we show that OFDDs are suitable for the representation of symmetric functions as well as OBDDs. This can be concluded as follows: A complete OBDD of size n (n 1)=2 for a symmetric function in n variables is easy to construct (see <ref> [Bry86] </ref>). Furthermore, it follows from the definition of t that the family of symmetric functions in n variables is invariant under t .
Reference: [Bry91] <author> R.E. Bryant. </author> <title> On the complexity of VLSI implementations and graph representations of Boolean functions with application to integer multiplication. </title> <journal> IEEE Trans. on Comp., </journal> <volume> 40 </volume> <pages> 205-213, </pages> <year> 1991. </year>
Reference-contexts: From [Bry86] and theorem 2 we conclude that there are two orders and 0 of X 2n so that OFDD-SIZE (f ) = O (n 2 ) but OFDD-SIZE 0 (f ) = ( 1 n 2 n ), i.e. variable ordering is important. In <ref> [Bry91] </ref> it is shown that the hidden weighted bit function (HWB) (which will be investigated in more detail in subsection 4.2) requires OBDDs of exponential size, but it is known that there are polynomial size FBDDs for HWB [SW92a]. <p> Obviously, the assertion of the theorem follows from 1-cl n;3 = -cl n;3 T 3 n (n2)=2 4.2 Exponential Lower Bounds for OFDDs In this subsection we prove that the two Boolean functions for which Bryant gave exponential lower bounds on the OBDD-SIZE also require exponentially large OFDDs. In <ref> [Bry91] </ref> lower bounds for the size of OBDDs have been proven using lower bound techniques from VLSI design. We now show how to adapt these arguments to OFDDs. <p> Then HWB : B n ! B is given by: HWB (x) = 0; wt (x) = 0 7 We shortly review the argument of <ref> [Bry91] </ref> giving a lower bound on OBDD-SIZE (f ) for f : B n ! B: Let (L; R) be a partition of X n . <p> Fixing a real parameter ! 2 (0; 1) and a subset Y X n a partition (L; R) is called a balanced partition iff b! jY jc jY "Lj d! jY je. The main tool in <ref> [Bry91] </ref> for proving lower bounds on the size of OBDDs is: Lemma 3 ([Bry91]) If, for each balanced partition (L; R) (with respect to some ! and Y ), f has a fooling set F (L;R) of size c, then OBDD-SIZE (f ) c 2. <p> We now prove: Theorem 7 Any OFDD representing HWB has 2 (n) nodes. Proof: W.l.o.g. assume that n is a multiple of 10. We show that OBDD-SIZE (t (HWB)) 0:2n Then, the assertion follows from theorem 3. In general, we follow <ref> [Bry91] </ref> except in the last step, where the argument for HWB has to be modified appropriately to work for t (HWB). <p> Denote by MULT n i the function mapping two n-bit numbers a n1 : : : a 1 a 0 and b n1 : : : b 1 b 0 to the i-th bit of their product. In <ref> [Bry91] </ref> it is shown that OBDD-SIZE (MULT n n1 ) = 2 (n) . But again, by a slight modification of Bryant's lower bound argument the same applies to OFDDs as we will prove now. Theorem 8 OFDD-SIZE (MULT n n1 ) = 2 (n) . <p> Theorem 8 OFDD-SIZE (MULT n n1 ) = 2 (n) . Proof: By theorem 2, it is sufficient to show OBDD-SIZE (t (MULT n n1 )) = 2 (n) . We briefly review the proof of <ref> [Bry91] </ref> giving the lower bound for MULT n n1 and point out how to change Bryant's argument to work for t (MULT n n1 ).
Reference: [Bry92] <author> R.E. Bryant. </author> <title> Symbolic boolean manipulation with ordered binary-decision diagrams. </title> <journal> ACM, Comp. Surveys, </journal> <volume> 24 </volume> <pages> 293-318, </pages> <year> 1992. </year>
Reference: [BT92] <author> Ph.W. Besslich and E.A. Trachtenberg. </author> <title> A three-valued quasi-linear transformation for logic synthesis. </title> <editor> In C. Moraga and R. Creutzburg, editors, </editor> <title> Spectral Techniques: Theory and Applications. </title> <publisher> Elsevier, North Holland, </publisher> <year> 1992. </year>
Reference-contexts: Of course, BDD representations for a family F of Boolean functions directly gives FDD representations for the family 1 The transformation was also used in [Raz86] (see also [Pat86]) to analyse circuits over f^; g and in <ref> [BT92] </ref> (as the Reed-Muller Transform) to synthesize two level circuits. 5 t (F ) := ft (f )jf 2 F g. An exponential gap between any two of the BDD representations consid-ered in the previous theorem directly translates into an exponential gap between the corresponding FDD representations.
Reference: [DB93] <author> R. Drechsler and B. Becker. </author> <title> Rapid prototyping of fully testable multi-level and/exor networks. </title> <booktitle> IFIP WG 10.5 Workshop on Applications of the Reed-Muller Expansion in Circuit Design, </booktitle> <address> Hamburg, </address> <year> 1993. </year>
Reference: [GM92] <author> J. Gergov and C. Meinel. </author> <title> Analysis and Manipulation of Boolean Functions in Terms of Decision Graphs, </title> <booktitle> volume 657 of LNCS. Symp. on Theoretical Aspects of Comp. Science, </booktitle> <year> 1992. </year>
Reference-contexts: Boolean AND of two OBDDs, test of satisfiability and test of equivalence. Nevertheless, there exist functions that cannot be represented by small OBDDs ([Bry91]). This is the reason why many authors investigate the usefulness of generalizations or modifications of OBDDs for design automation (see e.g. <ref> [GM92, SW92a, LS92] </ref>). In this context a new type of decision diagram, called ordered functional decision diagram (OFDD), has recently been introduced ([KSR92, KR93, BDT93]). BDDs (FDDs) are directed acyclic graphs, where a Shannon decomposition (Reed-Muller decomposition) is carried out in each node.
Reference: [KR93] <author> U. Kebschull and W. Rosenstiel. </author> <title> Efficient graph-based computation and manipulation of functional decision diagrams. </title> <booktitle> In Proceedings of EDAC'93, </booktitle> <pages> pages 278-282, </pages> <year> 1993. </year>
Reference-contexts: Furthermore, AND/EXOR realizations proved to be very efficient for large classes of circuits, e.g., arithmetic circuits, error correcting circuits and circuits for tele-communication ([Ber68, Sau92]), and, in addition, have nice testability properties ([Red72, DB93]). First experimental results given in <ref> [KSR92, SKR92, KR93, BDT93] </ref> demonstrate that OFDDs might be very useful for AND/EXOR based synthesis and might even be an interesting alternative data structure for the representation of Boolean functions.
Reference: [KSR92] <author> U. Kebschull, E. Schubert, and W. Rosenstiel. </author> <title> Multilevel logic based on functional decision diagrams. </title> <booktitle> In Proceedings of EDAC'92, </booktitle> <pages> pages 43-47, </pages> <year> 1992. </year>
Reference-contexts: Furthermore, AND/EXOR realizations proved to be very efficient for large classes of circuits, e.g., arithmetic circuits, error correcting circuits and circuits for tele-communication ([Ber68, Sau92]), and, in addition, have nice testability properties ([Red72, DB93]). First experimental results given in <ref> [KSR92, SKR92, KR93, BDT93] </ref> demonstrate that OFDDs might be very useful for AND/EXOR based synthesis and might even be an interesting alternative data structure for the representation of Boolean functions. <p> In the following we only consider (t S )-reduced DDs for S 2 ff1g; f2g; f3g; f1; 2g; f1; 3gg. (t f1;2g )- reductions are well-known from BDDs. In <ref> [KSR92] </ref> they have also been applied to OFDDs. In the following it turns out that for OFDDs (t f1;3g )-reductions are more natural.
Reference: [Lee59] <author> C.Y. Lee. </author> <title> Representation of switching circuits by binary decision diagrams. </title> <journal> Bell System Technical Jour., </journal> <volume> 38 </volume> <pages> 985-999, </pages> <year> 1959. </year>
Reference: [LS92] <author> Y.-T. Lai and S. Sastry. </author> <title> Edge-valued binary decision diagrams for multi-level hierarchical verification. </title> <booktitle> In Proceedings of 29th Design Automation Conference, </booktitle> <pages> pages 608-613, </pages> <year> 1992. </year>
Reference-contexts: Boolean AND of two OBDDs, test of satisfiability and test of equivalence. Nevertheless, there exist functions that cannot be represented by small OBDDs ([Bry91]). This is the reason why many authors investigate the usefulness of generalizations or modifications of OBDDs for design automation (see e.g. <ref> [GM92, SW92a, LS92] </ref>). In this context a new type of decision diagram, called ordered functional decision diagram (OFDD), has recently been introduced ([KSR92, KR93, BDT93]). BDDs (FDDs) are directed acyclic graphs, where a Shannon decomposition (Reed-Muller decomposition) is carried out in each node.
Reference: [Mei89] <author> C. Meinel. </author> <title> Modified Branching Programs and their Computational Power, </title> <booktitle> volume 370 of LNCS. </booktitle> <publisher> Springer Verlag, </publisher> <year> 1989. </year>
Reference-contexts: Up to now a theoretical background for OFDDs as it exists for OBDDs with the huge number of results on the properties of branching programs (see e.g. <ref> [Weg87, Mei89] </ref>) has not been provided. On the other hand, this background (as well as further practical experience) is necessary to judge in which sense OFDDs might be a competitive data structure for Boolean functions.
Reference: [Pat86] <author> M.S. Paterson. </author> <title> On Razborov's result for bounded depth circuits over f; ^g. </title> <type> Technical report, </type> <institution> University Warwick, </institution> <year> 1986. </year>
Reference-contexts: Of course, BDD representations for a family F of Boolean functions directly gives FDD representations for the family 1 The transformation was also used in [Raz86] (see also <ref> [Pat86] </ref>) to analyse circuits over f^; g and in [BT92] (as the Reed-Muller Transform) to synthesize two level circuits. 5 t (F ) := ft (f )jf 2 F g.
Reference: [PH91] <author> D. Pellerin and M. Holley. </author> <title> Practical Design Using Programmable Logic. </title> <publisher> Prentice-Hall, </publisher> <address> New Jersey, </address> <year> 1991. </year> <month> 11 </month>
Reference-contexts: This stems at least partly from the fact, that, due to technological improvements, in many applications it is possible to handle EXOR gates as standard gates with the same speed and costs as OR gates (see e.g. <ref> [Xil88, WP92, PH91] </ref>). Furthermore, AND/EXOR realizations proved to be very efficient for large classes of circuits, e.g., arithmetic circuits, error correcting circuits and circuits for tele-communication ([Ber68, Sau92]), and, in addition, have nice testability properties ([Red72, DB93]).
Reference: [Raz86] <author> A.A. Razborov. </author> <title> Lower bounds on the size of bounded depth networks over the basis f; ^g. </title> <type> Technical report, </type> <institution> Moscow State University, Moscow, </institution> <year> 1986. </year>
Reference-contexts: Of course, BDD representations for a family F of Boolean functions directly gives FDD representations for the family 1 The transformation was also used in <ref> [Raz86] </ref> (see also [Pat86]) to analyse circuits over f^; g and in [BT92] (as the Reed-Muller Transform) to synthesize two level circuits. 5 t (F ) := ft (f )jf 2 F g.
Reference: [Red72] <author> S. M. Reddy. </author> <title> Easily testable realizations for logic functions. </title> <journal> In IEEE Transaction on Computers, </journal> <volume> volume c-21, </volume> <pages> pages 1183-1188, </pages> <year> 1972. </year>
Reference: [Sas93] <author> T. Sasao. </author> <title> Logic Synthesis and Optimization. </title> <publisher> Kluwer Academic Publisher, </publisher> <year> 1993. </year>
Reference: [Sau92] <author> J. Saul. </author> <title> Logic synthesis for arithmetic circuits using the reed-muller representation. </title> <booktitle> In Proceedings of EDAC'92, </booktitle> <pages> pages 109-113, </pages> <year> 1992. </year>
Reference: [SKR92] <author> E. Schubert, U. Kebschull, and W. Rosenstiel. </author> <title> FDD based technology mapping for FPGA. </title> <booktitle> In Proceedings of EUROASIC, </booktitle> <pages> pages 14-18, </pages> <year> 1992. </year>
Reference-contexts: Furthermore, AND/EXOR realizations proved to be very efficient for large classes of circuits, e.g., arithmetic circuits, error correcting circuits and circuits for tele-communication ([Ber68, Sau92]), and, in addition, have nice testability properties ([Red72, DB93]). First experimental results given in <ref> [KSR92, SKR92, KR93, BDT93] </ref> demonstrate that OFDDs might be very useful for AND/EXOR based synthesis and might even be an interesting alternative data structure for the representation of Boolean functions.
Reference: [SW92a] <author> D. Sieling and I. Wegener. </author> <title> Graph driven BDDs anew data structure for Boolean functions. </title> <type> Technical report, </type> <institution> Universitat Dortmund, </institution> <year> 1992. </year>
Reference-contexts: Boolean AND of two OBDDs, test of satisfiability and test of equivalence. Nevertheless, there exist functions that cannot be represented by small OBDDs ([Bry91]). This is the reason why many authors investigate the usefulness of generalizations or modifications of OBDDs for design automation (see e.g. <ref> [GM92, SW92a, LS92] </ref>). In this context a new type of decision diagram, called ordered functional decision diagram (OFDD), has recently been introduced ([KSR92, KR93, BDT93]). BDDs (FDDs) are directed acyclic graphs, where a Shannon decomposition (Reed-Muller decomposition) is carried out in each node. <p> In [Bry91] it is shown that the hidden weighted bit function (HWB) (which will be investigated in more detail in subsection 4.2) requires OBDDs of exponential size, but it is known that there are polynomial size FBDDs for HWB <ref> [SW92a] </ref>. Thus, t (HWB) is a function with polynomial size FFDDs but only exponential size OFDDs. Now we show that OFDDs are suitable for the representation of symmetric functions as well as OBDDs.
Reference: [SW92b] <author> D. Sieling and I. Wegener. </author> <title> Reduction of BDDs in linear time. </title> <type> Technical report, </type> <institution> Univer-sitat Dortmund, </institution> <year> 1992. </year>
Reference-contexts: In [KSR92] they have also been applied to OFDDs. In the following it turns out that for OFDDs (t f1;3g )-reductions are more natural. A careful analysis of the proofs in <ref> [Bry86, SW92b] </ref> shows that the following lemma is valid for ordered DDs: Lemma 1 The (t S )-reduction of an ordered DD G for S 2 ff1g; f2g; f3g; f1; 2g; f1; 3gg is uniquely determined and can be computed in time O (jGj).
Reference: [Weg84] <author> I. Wegener. </author> <title> Optimal decision trees and one-time-only branching programs for symmetric Boolean functions. </title> <journal> Information and Control, </journal> <volume> 62 </volume> <pages> 129-143, </pages> <year> 1984. </year>
Reference-contexts: In fact, the upper bound on the OBDD-size of symmetric functions can be improved to n 2 =2 fi (n log n) <ref> [Weg84] </ref> and this bound also applies to OFDDs. 4.1 Exponential Gaps between FDDs and BDDs In the sequel it is shown that there exist functions, for which OFDDs (resp. OBDDs) are exponen tially better than OBDDs and FBDDs as well (resp. OFDDs and FFDDs as well).
Reference: [Weg87] <author> I. Wegener. </author> <title> The Complexity of Boolean Functions. </title> <publisher> John Wiley & Sons Ltd., and B.G. Teubner, Stuttgart, </publisher> <year> 1987. </year>
Reference-contexts: Up to now a theoretical background for OFDDs as it exists for OBDDs with the huge number of results on the properties of branching programs (see e.g. <ref> [Weg87, Mei89] </ref>) has not been provided. On the other hand, this background (as well as further practical experience) is necessary to judge in which sense OFDDs might be a competitive data structure for Boolean functions.
Reference: [WP92] <author> W. Wan and M. A. Perkowski. </author> <title> A new approach to the decomposition of imcompletely specified multi-output functions based on graph coloring and local transformations and its application to fpga mapping. </title> <booktitle> In European Design Automation Conf., </booktitle> <pages> pages 230-235, </pages> <year> 1992. </year>
Reference-contexts: This stems at least partly from the fact, that, due to technological improvements, in many applications it is possible to handle EXOR gates as standard gates with the same speed and costs as OR gates (see e.g. <ref> [Xil88, WP92, PH91] </ref>). Furthermore, AND/EXOR realizations proved to be very efficient for large classes of circuits, e.g., arithmetic circuits, error correcting circuits and circuits for tele-communication ([Ber68, Sau92]), and, in addition, have nice testability properties ([Red72, DB93]).
Reference: [Xil88] <author> Xilinix Inc. </author> <title> The Programmable Gate Array Data Book. </title> , <booktitle> 1988. </booktitle> <pages> 12 </pages>
Reference-contexts: This stems at least partly from the fact, that, due to technological improvements, in many applications it is possible to handle EXOR gates as standard gates with the same speed and costs as OR gates (see e.g. <ref> [Xil88, WP92, PH91] </ref>). Furthermore, AND/EXOR realizations proved to be very efficient for large classes of circuits, e.g., arithmetic circuits, error correcting circuits and circuits for tele-communication ([Ber68, Sau92]), and, in addition, have nice testability properties ([Red72, DB93]).
References-found: 28

