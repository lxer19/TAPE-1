URL: http://www.idt.unit.no/~epos/Papers/reuse93.ps
Refering-URL: http://www.idt.unit.no/~epos/bibliografia.html
Root-URL: 
Title: Experiences from Application of a Faceted Classification Scheme  
Author: Lars Sivert Strumg-ard Guttorm Sindre and Frode Stokke. 
Keyword: software reuse, faceted classification, retrieval, relaxation, structured term spaces  
Address: (NTH)  
Affiliation: Division of Computer Systems and Telematics Norwegian Institute of Technology  
Abstract: In this article we discuss various aspects of the classification and retrieval mechanisms which have been applied in the ESPRIT-2 project REBOOT 1 . This classification scheme is now being slightly modified due to requirements identified through practical application. This article first discusses different ways of classification and retrieval in general, then the classification scheme originally proposed by REBOOT is examined. With this as the background, we continue by discussing the experiences we have gained throughout the development and application of this scheme. Then, a proposal for a refined version of the scheme is presented in order to help out some of the shortcomings of the original scheme. Finally we draw some conclusions from our work, and point out problems which are of primary concern for our forthcoming research. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Richard Helm and Yoelle S. Maarek. </author> <title> Integrating information retrieval approches for browsing and retrieval in object-oriented class libraries. </title> <booktitle> In OOPSLA'91 Conference Proceedings, </booktitle> <pages> pages 47-61. </pages> <institution> IBM Thomas J. Watson Research Center, ACM Press, </institution> <month> October </month> <year> 1991. </year>
Reference-contexts: These patterns are usually restricted to regular expressions, and textual search is mainly restricted to free text. One interesting variant of this approach is to analyze sentences in free text for (noun verb) pairs, and distinguishing pairs are associated with each component <ref> [1] </ref>. Queries are natural language sentences where a similar analysis is made, and matching is performed. The problem with this approach is the necessity of an available free-text description of each reusable component.
Reference: [2] <author> Even-Andre Karlsson, Guttorm Sindre, Sivert Strumg-ard, and Eirik Tryggeseth. </author> <title> Weighted Term Spaces for Relaxed Search. </title> <booktitle> In Proc. 1st Int'l Conf. on Information and Knowledge Management (CIKM'92), </booktitle> <address> Baltimore, 5-8 Nov. ISMM, </address> <year> 1992. </year>
Reference-contexts: REBOOT applies a classification scheme in order to support categorization, search and retrieval. The rest of this article will concentrate on the classifica tion scheme we originally proposed and the application experiences we have. A more detailed description of the classification scheme we use is provided in <ref> [3, 2] </ref>. Based on these experiences, we will point out how the shortcomings and weaknesses of the scheme may be corrected. The rest of this article is organized as follows: Section 2 will provide a brief introduction to classification, in particular faceted classification will be examined. <p> The closeness we mention here is the closeness between the terms in the term space. In order to express such closeness, the relations should have a weight reflecting sim ilarity. For a further discussion of weights, consider <ref> [2] </ref>. This mechanism of finding similar components is called relaxation of the search. A similar approach to this problem is proposed by [6]. 3 Experiences from software classifica tion The purpose of this section is to describe the problems we encountered when classifying object oriented software.
Reference: [3] <author> Even-Andre Karlsson, Sivert Strumg-ard, and Eirik Tryggeseth. </author> <title> Classification of Object-Oriented Components for Reuse. </title> <booktitle> In Proc. </booktitle> <address> TOOLS'7, Dortmund. </address> <publisher> Prentice-Hall, </publisher> <year> 1992. </year>
Reference-contexts: REBOOT applies a classification scheme in order to support categorization, search and retrieval. The rest of this article will concentrate on the classifica tion scheme we originally proposed and the application experiences we have. A more detailed description of the classification scheme we use is provided in <ref> [3, 2] </ref>. Based on these experiences, we will point out how the shortcomings and weaknesses of the scheme may be corrected. The rest of this article is organized as follows: Section 2 will provide a brief introduction to classification, in particular faceted classification will be examined.
Reference: [4] <author> Charles W. Krueger. </author> <title> Software reuse. </title> <journal> ACM Computing Surveys, </journal> <month> June </month> <year> 1992. </year> <pages> p. 131-183. </pages>
Reference: [5] <author> Oscar Nierstrasz, Simon Gibbs, and Dennis Tsichritzis. </author> <title> Component-oriented software development. </title> <journal> Communications of the ACM, </journal> <volume> 35(9) </volume> <pages> 160-165, </pages> <month> September </month> <year> 1992. </year>
Reference: [6] <author> Eduardo Ostertag, James Hendler, Ruben Prieto-D iaz, and Christine Braun. </author> <title> Computing similarity in a reuse library system: An ai-based approach. </title> <journal> ACM Transactions on Software Engineering and Methodology, </journal> <volume> 1(3) </volume> <pages> 205-228, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: In order to express such closeness, the relations should have a weight reflecting sim ilarity. For a further discussion of weights, consider [2]. This mechanism of finding similar components is called relaxation of the search. A similar approach to this problem is proposed by <ref> [6] </ref>. 3 Experiences from software classifica tion The purpose of this section is to describe the problems we encountered when classifying object oriented software. The experience we have is limited to classification of two object-oriented class libraries (NIH and COOL) implemented in C++.
Reference: [7] <author> Ruben Prieto-Diaz. </author> <title> A Software Classification Scheme. </title> <type> PhD thesis, </type> <institution> University of California, Irvine, </institution> <year> 1985. </year>
Reference-contexts: R. Rang-hanathan, see e.g. [9]. The main difference from enu merated schemes is that faceted schemes do a breakdown of information in different categories, this makes it possible to consider information about several different aspects or properties of the components. Such an aspect is denoted a facet. Ruben Prieto-Daz <ref> [7, 8] </ref> has made a faceted classification scheme for reuse of traditional function oriented software. An important part of his work is the association of a structured set of legal terms, a termspace, with each facet. Terms from this termspace are used for classification and searching.
Reference: [8] <author> Ruben Prieto-Diaz and Peter Freeman. </author> <title> Classifying software for reusability. </title> <journal> IEEE Software, </journal> <pages> pages 6-16, </pages> <month> January </month> <year> 1987. </year>
Reference-contexts: R. Rang-hanathan, see e.g. [9]. The main difference from enu merated schemes is that faceted schemes do a breakdown of information in different categories, this makes it possible to consider information about several different aspects or properties of the components. Such an aspect is denoted a facet. Ruben Prieto-Daz <ref> [7, 8] </ref> has made a faceted classification scheme for reuse of traditional function oriented software. An important part of his work is the association of a structured set of legal terms, a termspace, with each facet. Terms from this termspace are used for classification and searching.
Reference: [9] <author> S. R. Ranghanathan. </author> <title> Prolegomena to Library Classification. </title> <publisher> The Garden City Press Ltd., </publisher> <address> Letchworth, Hertfordshire, </address> <year> 1957. </year>
Reference-contexts: This is an important property of classification schemes made for e.g. literature, where books on the same subject are supposed to be closely located in the library. Faceted classification was proposed by S. R. Rang-hanathan, see e.g. <ref> [9] </ref>. The main difference from enu merated schemes is that faceted schemes do a breakdown of information in different categories, this makes it possible to consider information about several different aspects or properties of the components. Such an aspect is denoted a facet.
Reference: [10] <author> Geoffrey Robinson. UDC: </author> <title> A Brief Introduction. </title> <type> Technical report, </type> <institution> International Federation for Documentation, </institution> <year> 1979. </year>
Reference-contexts: Terms from this termspace are used for classification and searching. The structure of the termspace reflects the semantical relations between 2 An example of this is the Universal Decimal Classification, consider <ref> [10] </ref> for details. the terms, so the termspace is a kind of semantic network. The relation between the termspaces, the facets and different components is shown in figure 1. Here, each component is described with an arbitrary number of terms for each facet.
Reference: [11] <author> Guttorm Sindre, Even-Andre Karlsson, and Pa-tricia Paul. </author> <title> Heuristics for maintaining a term space structure for relaxed search. </title> <booktitle> In Proc. </booktitle> <address> DEXA'92, Valencia. </address> <publisher> Springer Verlag, </publisher> <year> 1992. </year>
Reference-contexts: This will be discussed in section 4. 3.6 Termspace maintenance The process of maintaining a term space could be improved by tool support providing guidance and help for semi-automatic updating. Several aspects of this is discussed in <ref> [11] </ref>. One of the most important rules for maintenance of a term space is to keep the classification consistent. One aspect of consistence is to use the same terms for the same concepts even if the implementation of the concepts is different.
Reference: [12] <author> Will Tracz. </author> <title> Software reuse maxims. </title> <booktitle> Software Engineering Notes, </booktitle> <pages> pages 28-31, </pages> <month> October </month> <year> 1988. </year>
Reference: [13] <author> Murray Wood and Ian Sommerville. </author> <title> An information retrieval system for software components. </title> <journal> Software Engineering Journal, </journal> <volume> 3(5) </volume> <pages> 198-207, </pages> <month> September </month> <year> 1988. </year>
Reference-contexts: Faceted vs. enumerated classification Different sorts of classification schemes have been used for different purposes, each of them with their strong and weak sides. In addition to the traditional schemes, where keywords are entered to describe the component, there are other approaches as e.g. <ref> [13] </ref> where different kinds of components are characterized by component descriptor frames. In this article, we concentrate on the keyword-based approach. Traditional keyword-based classification schemes can be mainly be divided into two categories: 1. Enumerated schemes 2.
References-found: 13

