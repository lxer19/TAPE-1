URL: ftp://ftp.cs.clemson.edu/techreports/95-109.ps.Z
Refering-URL: http://www.cs.clemson.edu/html/research/techrpt.shtml
Root-URL: http://www.cs.clemson.edu
Email: steve@cs.clemson.edu  
Phone: 803-656-5880  
Title: Challenging High School Computer Oriented Students with Non-Euclidean Geometry  
Author: D. E. Stevenson R. C. Edwards Hall Student Co-Authors Michael Astel, Kevin Bathurst, Jimmy Holifield, and Andy Moise 
Address: PO Box 341906 Clemson, SC 29634-1906  
Affiliation: Department of Computer Science Clemson University  Governor's School of Science and Mathematics Hartsville, South Carolina  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Edwin Abbott. Flatland, </author> <title> a romance of many dimensions. </title> <publisher> Blackwell, </publisher> <year> 1950. </year>
Reference-contexts: Therefore, there is never any need to move into non-linear transformations. 3 The Project Our goal has been to have them plot the conic sections as seen from the outside world. The students are also asked to read Flatland <ref> [1] </ref>, a "must-read" and enchanting book for everyone interested in geometry (and a little philosophy and sociology). The project itself is centered around classical analytical geometry. The first step is to plot, using OpenGL, points, lines, line segments, circles, ellipses, parabolas, and hyperbolas in Euclidean 2-space.
Reference: [2] <author> Milton Abramowitz and Irene A. </author> <title> Stegun. Handbook of mathematical functions with formulas graphs, and mathematical tables. </title> <type> Supt. </type> <institution> of Docs, USGPO, </institution> <year> 1972. </year>
Reference: [3] <author> James D. Foley, Andries van Dam, Steven K. Feiner, and John F. Hughes. </author> <title> Computer Graphics: </title> <booktitle> Principles and Practice. </booktitle> <publisher> Addison-Wesley, </publisher> <address> 2 edition, </address> <year> 1993. </year>
Reference-contexts: The first group used PHIGS 4 as its graphics engine. This group had the harder time because PHIGS is a very difficult system to master. For the second group, we had a choice of OpenGL implemented on the Indys or the use of the SRGP 5 developed to accompany <ref> [3] </ref>. SRGP was appealing because of its wider availability; unfortunately, it does not support three-dimensional graphics as easily as OpenGL. For this reason, we chose OpenGL. Our goal is to eventually use SRGP because it supports PCs, Macs, and X-Windows.
Reference: [4] <author> G. E. Forsythe, M. A. Malcum, and C. B. Moler. </author> <title> Computer Methods for Mathematical Computation. </title> <publisher> Prentice-Hall, </publisher> <year> 1977. </year>
Reference-contexts: For example, in hyperbolic space, one metric (there are many different hyperbolic worlds) requires points on a line to actually be on minor arcs of certain circles. Both obstacles can be overcome using some good programming and a very good zero-finder. We use Richard Brent's algorithm in <ref> [4] </ref>. This zerofinder has been converted to C for their use. One assignment is to study the code and explain how it works. 4 Results and Closing Comments 4.1 Results The program reported here has been used with two separate groups of two students each.
Reference: [5] <author> T.L.J. Howard, W. T. Hewitt, R. J. Hubbold, and K. M. Wyrwas. </author> <title> A Practical Introduction to PHIGS and PHIGS PLUS. </title> <publisher> Addison Wesley, </publisher> <year> 1991. </year>
Reference-contexts: When the second group came, we had a program in place to quickly teach C. We managed to stick to the syllabus outlined in Table 1 until the third week. In week 3, we tried to make the code for the Euclidean 4 Programmer's Hierarchical Graphics System <ref> [5] </ref> 5 Simple Raster Graphics Package analytic geometry suffice for the non-Euclidean as well. This turned out to be a mistake: the elliptic figures are just too different computationally. Both groups were able to fulfill a substantial portion of their charge.
Reference: [6] <author> Jackie Neider, Tom Davis, and Mason Woo. </author> <title> OpenGL Programming Guide: The Official Guide to Learning OpenGL. </title> <publisher> Addison Wesley, </publisher> <year> 1993. </year>
Reference: [7] <author> D. E. Stevenson. </author> <title> Science, computational science, and computer science: At a crossroads. </title> <journal> Comm. ACM, </journal> <volume> 37(12) </volume> <pages> 85-96, </pages> <year> 1994. </year>
Reference-contexts: 1 Introduction The author has been involved with computational science and engineering (CSE) for seven years. The goals of CSE are to develop a new way for scientists and engineers to do science on computers. Part of the program is very foundational if not philosophical <ref> [7] </ref>. Our view of CSE calls for an overhaul of the scientific method and a change in emphasis in scientific justification. There are many places for computer science to play vital roles in CSE. The High Performance Computing and Communiciations Initiative has been largely driven by the Grand Challenges.
Reference: [8] <author> D. E. Stevenson. </author> <booktitle> Software engineering frontiers in computational science and engineering. In Proc. 33d Annual Southeast Conference, </booktitle> <address> Clemson, SC, </address> <month> 17-18 March </month> <year> 1995, </year> <pages> pages 120-127, </pages> <year> 1995. </year> <month> 6 </month>
Reference-contexts: Scientific codes are developed differently from codes in other areas. Because we can rely on theorems (with some care due to floating point arithmetic), there is more experimentation. The idea of algorithm takes on a different meaning <ref> [8] </ref>. A second goal is that of using literate programming techniques. We want the students to use literate programming in an informal way through noweb. noweb is available from any of a number of mirrors through the program archie.
References-found: 8

