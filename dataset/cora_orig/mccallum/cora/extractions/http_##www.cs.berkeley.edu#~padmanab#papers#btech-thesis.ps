URL: http://www.cs.berkeley.edu/~padmanab/papers/btech-thesis.ps
Refering-URL: http://www.cs.berkeley.edu/~padmanab/
Root-URL: http://www.cs.berkeley.edu
Title: POINT TO POINT COMMUNICATION USING VIRTUAL CHANNEL FLOW CONTROL AND WORMHOLE ROUTING  
Author: V. N. Padmanabhan Vishal Gaur Prof. B. B. Madan Dr. Gautam Shroff 
Degree: A dissertation submitted in partial fulfilment of the requirements for the degree of Bachelor of Technology in Computer Science Engineering  
Pubnum: Project Supervisors:  
Abstract: B.Tech Major Project Report Department of Computer Science and Engineering Indian Institute of Technology, Delhi. May,1993. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> W. J. Dally, </author> <title> "Virtual Channel Flow Control", </title> <journal> IEEE Trans. on Parallel and Distributed Systems, </journal> <volume> Vol. 3, No. 2, </volume> <month> March </month> <year> 1992, </year> <pages> pp. 194-205. </pages>
Reference-contexts: They also designed the Torus Routing Chip which implemented this alogorithm for a particular network topology. Dally extended the idea of virtual channels for use in flow control in an ICN. In his 1992 paper titled `Virtual-channel flow control' <ref> [1] </ref>, he has described a theoretical model for networks using virtual channel flow control and has presented the results of his simulation studies. These results indicate a dramatic increase in network throughput due to the use of virtual channels. <p> In a software implementation, like this one, although the results follow the general trends predicted in simulation studies by Dally <ref> [1] </ref>, there are some distortions. These distortions can be attributed to two main causes: 1. The sender and receiver processes on a transputer use the same CPU. Activities on different channels occur sequentially and are not overlapped. 2. <p> The experiment was conducted with 1, 2, 4, 8 and 16 virtual channels per physical channel. The results are shown in fig. 9. Interpretation: For 1, 2 and 4 virtual channels per physical channel, the throughput vs offered load curves follow the general trend predicted by simulation studies <ref> [1] </ref>. As the number of virtual channels is increased, the network is able to withstand higher load and gives higher throughput.
Reference: [2] <author> W. J. Dally and C. L. Seitz, </author> <title> "Deadlock-Free Message Routing in Multiprocessor Interconnection Networks", </title> <journal> IEEE Trans. on Computers, </journal> <volume> Vol. C-36, No. 5, </volume> <month> May </month> <year> 1987, </year> <pages> pp. 547-553. </pages>
Reference-contexts: The concept of wormhole routing originated with the Wormhole chip project at Caltech in 1985 headed by C.L.Seitz [7]. In 1987, Dally and Seitz introduced the idea of virtual channels to develop deadlock-free routing algorithms for interconnection networks (ICN) that use wormhole routing <ref> [2] </ref>. They also designed the Torus Routing Chip which implemented this alogorithm for a particular network topology. Dally extended the idea of virtual channels for use in flow control in an ICN. <p> In this routing function, we have made an improvement over the function described by Dally and Seitz <ref> [2] </ref>. In their routing function, all flits in a row of the mesh must move in the same direction. But in our design, flits are buffered only at the inputs of virtual channels. The set of buffers required to move in opposite directions are disjoint.
Reference: [3] <institution> Manuals for the MEIKO T800 Transputer system, in the Computer Centre Library, IIT Delhi. </institution>
Reference-contexts: However, the problem is that transputer processes do not seem to have process ids like normal Unix processes; so signalling them is not possible. It is, however, possible for a node process to change its priority (using the functions setpri and ldpri <ref> [3] </ref>). There are 2 levels of priority, low and high. So, instead of pausing as described above, a process may lower its priority while it is waiting for a message. The priority is raised once the message is received. <p> before sending, and the function xrecvb copies the packet in the shared data area into user data area before giving it to the user. 22 4.9 Master-Slave Arrangement We have found that if a process running on a transputer attempts input/output (other than by using the function debugf , refer <ref> [3] </ref>), CSN automatically tries to set up a link to that node. Our router uses up the hardware links to create a topology in such a way that CSN connections to all transputers used by the topology cannot be made.
Reference: [4] <author> C. L. Seitz, J. Seizovic and Wen-King Su, </author> <title> The C Programmer's abbreviated guide to Multicomputer programming, </title> <institution> California Institute of Technology, </institution> <year> 1989, </year> <title> (Cosmic Environment). </title>
Reference-contexts: These results indicate a dramatic increase in network throughput due to the use of virtual channels. The Cosmic Environment was developed by Seitz and his students at Caltech <ref> [4] </ref> in 1988. 10 The basic idea was to emulate the Cosmic cube machine on a network of UNIX hosts. One of the members of this group, Jakov Seizovic, developed the Reactive Kernel [6] for the Cosmic cube.
Reference: [5] <author> R. K. Barua and A. Goyal, </author> <title> Parallel Communication|an investigation & implementation on T800 Transputers, B. </title> <type> Tech Project report, </type> <address> IIT Delhi, </address> <month> May </month> <year> 1992. </year>
Reference-contexts: at times it took less time for a message to be sent between diagonally opposite nodes (a distance of 3 hops) than between neighbouring nodes (a distance of 1 hop). 2.7 The router developed by Barua & Goyal As a part of their B.Tech. project, Rajeev Barua and Anshuman Goyal <ref> [5] </ref> developed a crystalline router for the T800 transputer system. This router gave excellent performance. They also attempted to build a point-to-point wormhole router. However, due to shortcomings in their design, the performance of this router was very poor.
Reference: [6] <author> Jakov Seizovic, </author> <title> The Reactive Kernel, thesis for the Degree of Master of Science, </title> <institution> Cali-fornia Institute of Technology, </institution> <year> 1988. </year>
Reference-contexts: The Cosmic Environment was developed by Seitz and his students at Caltech [4] in 1988. 10 The basic idea was to emulate the Cosmic cube machine on a network of UNIX hosts. One of the members of this group, Jakov Seizovic, developed the Reactive Kernel <ref> [6] </ref> for the Cosmic cube. This kernel was essentailly a new node operating system that incorporated the idea of reactive scheduling of node processes. 2.6 The CSN router The MEIKO T800 transputer system has a point-to-point router called CSN (Computing Surface Network), which has been provided by MEIKO.
Reference: [7] <author> C. L. Seitz et al. </author> , <title> Wormhole Chip Project Report, </title> <month> Winter </month> <year> 1985. </year>
Reference-contexts: Several deadlock-free routing algorithms are known for networks employing this kind of a routing algorithm. The concept of wormhole routing originated with the Wormhole chip project at Caltech in 1985 headed by C.L.Seitz <ref> [7] </ref>. In 1987, Dally and Seitz introduced the idea of virtual channels to develop deadlock-free routing algorithms for interconnection networks (ICN) that use wormhole routing [2]. They also designed the Torus Routing Chip which implemented this alogorithm for a particular network topology.
Reference: [8] <author> J. L. Peterson and A. Silberschatz, </author> <title> Operating System Concepts, </title> <publisher> Addison-Wesley Publishing Company, Second edition, </publisher> <pages> pp. 311-313. </pages>
Reference-contexts: However, when we measured memory access times for shared memory and local memory, we found that shared memory access is approximately twice as slow as local memory access. 3.6 Semaphores CS Tools supports shared memory but does not provide any semaphores. We are therefore using Dekker's algorithm <ref> [8] </ref> to provide mutually exclusive access to shared structures. Most of the structures are shared only between two processes and so the usual form of Dekker's algorithm is sufficient.
Reference: [9] <author> A. S. Tanenbaum, </author> <title> Computer Networks, </title> <booktitle> Prentice-Hall of India, Second edition, </booktitle> <year> 1992, </year> <pages> pp. 88-89. </pages>
Reference-contexts: If several processes on one node are doing communication intensive processing, the network latency can get masked by the use of reactive scheduling. 2.5 Review of literature The idea of store-and-forward routing is quite old and is very similar to packet routing in computer networks <ref> [9] </ref>. Several deadlock-free routing algorithms are known for networks employing this kind of a routing algorithm. The concept of wormhole routing originated with the Wormhole chip project at Caltech in 1985 headed by C.L.Seitz [7].
Reference: [10] <author> I.D.Scherson, Sandeep Sen, and Yiming Ma, </author> <title> "Two nearly optimal sorting algorithms for mesh-connected processor arrays using shear-sort", </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 6 (1989), </volume> <pages> pp. 151-165. </pages>
Reference-contexts: We have also successfully run some programs written for the Cosmic Environment on the transputers using the point-to-point router. The first application a parallel sorting algorithm called shearsort <ref> [10] </ref>. This algorithm assumes a mesh topology, and distributes the data in a row-wise fashion. After log n iterations each of row and column sorts alternatingly, the sorted list is ready.
Reference: [11] <author> G.Golub and Charles F. Van Loan, </author> <title> Matrix Computations, </title> <publisher> The John Hopkins University Press, </publisher> <address> Second edition, </address> <year> 1989, </year> <pages> pp. </pages> <address> 305-308.. </address> <month> 47 </month>
Reference-contexts: The second application is a parallel algorithm solving a unit lower-triangular system (i. e. , Lx = b where L is a lower-triangular matrix with only ones in the diagonal) on a ring of processors <ref> [11] </ref>. The significance of this algorithm is that if sends are blocking, then is becomes essentially a sequential algorithm, in which only one processor is active at any time.
References-found: 11

