URL: http://polaris.cs.uiuc.edu/reports/1130.ps.gz
Refering-URL: http://polaris.cs.uiuc.edu/tech_reports.html
Root-URL: http://www.cs.uiuc.edu
Title: Experiments in Thermal Hydraulics Simulation: Multiprocessing COMMIX  
Author: S. Aslam E. Gallopoulos M. Ham T. Canfield M. Minkoff R. Blomquist 
Date: October 24, 1991  
Abstract: We present work directed towards the development of multiprocessed versions of COMMIX-1AR/P, an industrial strength, three-dimensional single-phase thermal hydraulics code. The major steps in the numerical simulation are: 1) construction of pressure and momentum equations; 2) solution for pressure and velocity; 3) construction of energy equations; and 4) solution of energy equations for enthalpy. Steps (2) and (4) require the solution of systems of large symmetric and non-symmetric linear systems. We discuss the role of automatic and manual parallelization techniques for the matrix construction steps on the performance of the code when used on the Cray Y-MP and Alliant FX shared memory multiprocessors. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> ANALYTICAL THERMAL AND HYDRAULIC RESEARCH PROGRAM, COMPONENTS TECHNOLOGY DIVISION, ARGONNE NATIONAL LABORATORY, </institution> <month> Commix-1B: </month> <title> A three-dimensional transient single-phase computer program for thermal hydraulic analysis of single and multicomponent systems. Volume I: Equations and Numerics, </title> <booktitle> 1985. </booktitle> <pages> 9 </pages>
Reference-contexts: They use a unique porous media approach to the solution of the Navier-Stokes equations in an arbitrary three-dimensional region <ref> [1] </ref>. The COMMIX-1AR/P code uses differenced momentum/mass conservation equations which are combined to form a pressure equation. Once the pressures are known, the fluid velocities are updated to provide input to the energy simulation and the next iteration or time step.
Reference: [2] <author> W. R. COWELL, S. J. HAGUE, AND R. M. J. ILES, </author> <title> Toolpack/1 release 2, Intro--ductory Guide, </title> <type> Tech. Rep. </type> <institution> ANL-86-43, Argonne, </institution> <address> IL, 60439, </address> <year> 1986. </year>
Reference-contexts: IF (IFENER.EQ.2) GO TO 180 XK1=0.5*(DX0*DIFTH1+DX1*DIFTH0) GO TO 200 180 CONTINUE XK1=0.5*(A0*DX0*DIFTH1+A1*DX1*DIFTH0) 200 CONTINUE COND1=DIFTH0*DIFTH1/XK1 DH1L=AREAX1*COND1 GO TO 260 220 AREAX1=AREA (-M1) . . . 240 CONTINUE . . . 260 CONTINUE . . . The first step in the optimization is to use TOOLPACK <ref> [2] </ref> stf and pol tools to transform the logical constructs of the routine into if-then-else blocks. This revised version is also easier to read. However, the logic for the cell surfaces is still within the large loop inhibiting effective vectorization.
Reference: [3] <author> E. </author> <title> GALLOPOULOS (editor), The advanced software development and commercialization project: </title> <type> Progress report 1, Tech. Rep. </type> <institution> ANL/TM 484 & CSRD Rpt. No 1047, Argonne National Lab. and Center for Supercomputing Research Development, </institution> <year> 1990. </year>
Reference-contexts: A part of this project is to apply tech niques of parallel computing to COMMIX-1AR/P, a mature computational fluid dynamics code. A brief description of the capabilities of these codes can be found in <ref> [3] </ref>. Below we present a brief overview of the algorithm used in COMMIX-1AR/P, fl Work supported by the State of Illinois Technology Challenge Grant, Grant No. 90-82144. Additional support was provided from the National Science Foundation Grant No.
Reference: [4] <institution> INFORMATION PROCESSING TECHNIQUES CORPORATION,PALO ALTO, CA, </institution> <note> FORTRAN-lint User's Manual, Revision 2.59. 10 </note>
References-found: 4

