URL: http://www.cs.umd.edu/projects/hpsl/html-papers/icde97.ps
Refering-URL: http://www.cs.umd.edu/projects/hpsl/html-papers/icde97-submitted.html
Root-URL: 
Email: fchialin,bkmoon,acha,ctso,als,saltzg@cs.umd.edu  
Title: Titan: a High-Performance Remote-sensing Database  
Author: Chialin Chang, Bongki Moon, Anurag Acharya, Carter Shock, Alan Sussman, Joel Saltz 
Address: College Park MD 20742  
Affiliation: Department of Computer Science and UMIACS University of Maryland,  
Abstract: There are two major challenges for a high-performance remote-sensing database. First, it must provide low-latency retrieval of very large volumes of spatio-temporal data. This requires effective declustering and placement of a multidimensional dataset onto a large disk farm. Second, the order of magnitude reduction in data-size due to post-processing makes it imperative, from a performance perspective, that the postprocessing be done on the machine that holds the data. This requires careful coordination of computation and data retrieval. This paper describes the design, implementation and evaluation of Titan, a parallel shared-nothing database designed for handling remote-sensing data. The computational platform for Titan is a 16-processor IBM SP-2 with four fast disks attached to each processor. Titan is currently operational and contains about 24 GB of AVHRR data from the NOAA-7 satellite. The experimental results show that Titan provides good performance for global queries and interactive response times for local queries. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Acharya, M. Uysal, R. Bennett, A. Mendelson, M. Beynon, J. Hollingsworth, J. Saltz, and A. Sussman. </author> <title> Tuning the performance of I/O-intensive parallel applications. </title> <booktitle> In Proceedings of the Fourth ACM Workshop on I/O in Parallel and Distributed Systems, </booktitle> <month> May </month> <year> 1996. </year>
Reference-contexts: First, the size should be large enough to allow efficient retrieval; second, the size should be small enough that most of the data retrieved is useful; and third, the block should be square (square groups of pixels provide better indexing than more elongated groups). From <ref> [1] </ref> we knew that for our configuration, the best I/O performance is achieved for blocks larger than 128 KB. Therefore, we chose to partition the AVHRR data in tiles of 204x204 pixels.
Reference: [2] <institution> Web site for AVHRR data from the NASA Goddard distributed active archive center. </institution> <address> http://daac.gsfc.nasa.gov/- CAMPAIGN DOCS/FTP SITE/readmes/pal.html. </address>
Reference-contexts: Each file consists of a sequence of scan lines, each with 409 pixels. Each pixel consists of five readings, each in a different band of the electro-magnetic spectrum. The AVHRR files provided by NASA <ref> [2] </ref> are organized in a band-interleaved form (i.e., all the values for a single pixel are stored consecutively). However, most satellite data processing programs process one of two groups bands one and two or bands three, four and five [7, 24].
Reference: [3] <author> L. T. Chen and D. Rotem. </author> <title> Declustering objects for visualization. </title> <booktitle> In Proceedings of the 19th VLDB Conference, </booktitle> <pages> pages 85-96, </pages> <year> 1993. </year>
Reference-contexts: Finally, the index is extensible it is easy to include data from other sensors without re-engineering the indexing scheme or re-indexing existing data. 3.3. Declustering Declustering methods for multidimensional datasets can be classified into two classes: grid-based <ref> [3, 6] </ref> and graph-theoretic [15, 16]. Grid-based methods have been developed to decluster Cartesian product files, while graph-theoretic methods are aimed at declustering more general spatial access structures such as grid files [20] and R-trees [11]. A survey of declustering methods can be found in [18].
Reference: [4] <author> D. DeWitt, N. Kabra, J. Luo, J. Patel, and J.-B. Yu. </author> <title> Client-server Paradise. </title> <booktitle> In Proceedings of the 20 th VLDB Conference, </booktitle> <year> 1994. </year>
Reference-contexts: This requires careful coordination of computation and data retrieval to avoid slowing down either process. Several database systems have been designed for handling geographic datasets <ref> [4, 19, 26, 27] </ref>. These systems are capable of handling map-based raster images, map points (e.g. cities) and line segments (e.g. rivers, roads) and provide powerful spatial query operations. They are, however, unsuitable for storing raw remote-sensing data that has not been projected to a map-based coordinate system.
Reference: [5] <author> K. Doan, C. Plaisant, and B. Shneiderman. </author> <title> Query previews in networked information systems. </title> <type> Technical Report CS-TR-3524, </type> <institution> University of Maryland, </institution> <month> Oct </month> <year> 1995. </year>
Reference-contexts: Second, the index supports quick winnowing of large portions of the data base when presented with localized queries. Third, the index allows query previews that enable users to quickly refine their queries, without forcing large volumes of data to be retrieved from disks <ref> [5] </ref>. Finally, the index is extensible it is easy to include data from other sensors without re-engineering the indexing scheme or re-indexing existing data. 3.3. Declustering Declustering methods for multidimensional datasets can be classified into two classes: grid-based [3, 6] and graph-theoretic [15, 16].
Reference: [6] <author> H. C. Du and J. S. Sobolewski. </author> <title> Disk allocation for Cartesian product files on multiple-disk systems. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 7(1) </volume> <pages> 82-101, </pages> <month> Mar. </month> <year> 1982. </year>
Reference-contexts: Finally, the index is extensible it is easy to include data from other sensors without re-engineering the indexing scheme or re-indexing existing data. 3.3. Declustering Declustering methods for multidimensional datasets can be classified into two classes: grid-based <ref> [3, 6] </ref> and graph-theoretic [15, 16]. Grid-based methods have been developed to decluster Cartesian product files, while graph-theoretic methods are aimed at declustering more general spatial access structures such as grid files [20] and R-trees [11]. A survey of declustering methods can be found in [18]. <p> A cluster of blocks is a group of data blocks that are contiguous on disk. 2 The model transfer time has been considered a plausible measure of the actual block transfer time <ref> [6, 16] </ref> under the assumptions that: (1) all disks can be accessed independently, and (2) the volume of data is too large for caching. The model seek time was originally proposed in [12] as a measure of the clustering properties of space-filling curves [12, 17].
Reference: [7] <author> J. Eidenshink and J. Fenno. </author> <title> Source code for LAS, </title> <editor> ADAPS and XID, </editor> <year> 1995. </year> <institution> Eros Data Center, Sioux Falls. </institution>
Reference-contexts: Data Placement Titan addresses the problem of low-latency retrieval of very large volumes of data in three ways. First, it takes advantage of the AVHRR data format and of common query patterns identified by earth science researchers <ref> [7, 10, 24] </ref>, to partition the entire dataset into coarse-grained chunks that achieve good disk bandwidth. Second, it tries to maximize disk parallelism by declustering the set of chunks onto a large disk farm. <p> The AVHRR files provided by NASA [2] are organized in a band-interleaved form (i.e., all the values for a single pixel are stored consecutively). However, most satellite data processing programs process one of two groups bands one and two or bands three, four and five <ref> [7, 24] </ref>. This grouping occurs due to the properties of the bands: the first two bands provide information to estimate the amount of chlorophyll in a region [9] whereas the last three bands can be used to estimate cloud cover and surface temperature [14]. <p> When the short spanning path algorithm was used to cluster data blocks on each disk, the average probability path length was 23.7; the corresponding number for random block assignment was 13.3. 5.2. Simulation-based evaluation of data retrieval Based on the common query patterns identified by earth science researchers <ref> [7, 9, 10, 24] </ref>, we generated synthetic queries that uniformly cover the land masses of the world. We divided the land masses into 12 disjoint regions, in total covering almost all of six continents (excluding Antarctica). We computed two metrics: model transfer time and model seek time.
Reference: [8] <author> M. T. Fang, R. C. T. Lee, and C. C. Chang. </author> <title> The idea of de-clustering and its applications. </title> <booktitle> In Proceedings of the 12th VLDB Conference, </booktitle> <pages> pages 181-8, </pages> <year> 1986. </year> <type> 9 query data blocks read data blocks processed min max min max global 599 632 634 1095 Africa 65 79 117 151 North America 137 151 172 430 South America 50 66 89 148 Australia 19 28 56 80 United Kingdom 5 9 35 48 Table 5. </type> <note> The number of data blocks read and processed by the back-end nodes. </note>
Reference-contexts: Since the Titan index is tree-based, we have adopted a graph-theoretic algorithm Moon et al. 's minimax spanning tree algorithm [16]. This algorithm was originally proposed for declustering grid files on a large disk farm and has been shown to outperform Fang et al. 's Short Spanning Path algorithm <ref> [8] </ref> for that task. The minimax algorithm models the problem as a complete graph each vertex represents a data block and each edge represents the likelihood that the corresponding data blocks will be accessed together. <p> Clustering In addition to maximizing disk parallelism by decluster-ing, it is important to reduce the number of disk seeks by suitably linearizing the data blocks assigned to a single disk. We have chosen the Short Spanning Path (SSP) algorithm <ref> [8] </ref> for this purpose. We considered a Hilbert-curve-based scheme as an alternative. Both methods can be used to map multidimensional objects onto a one-dimensional space. It is widely believed that the Hilbert curve achieves the best clustering among space-filling curves [12, 17].
Reference: [9] <author> S. Goward, B. Markham, D. Dye, W. Dulaney, and J. Yang. </author> <title> Normalized difference vegetation index measurements from the Advanced Very High Resolution Radiometer. </title> <booktitle> Remote Sensing of Environment, </booktitle> <volume> 35 </volume> <pages> 257-77, </pages> <year> 1991. </year>
Reference-contexts: However, most satellite data processing programs process one of two groups bands one and two or bands three, four and five [7, 24]. This grouping occurs due to the properties of the bands: the first two bands provide information to estimate the amount of chlorophyll in a region <ref> [9] </ref> whereas the last three bands can be used to estimate cloud cover and surface temperature [14]. To take advantage of these query patterns, Titan stores AVHRR data in two parts, one containing data for bands one and two and the other containing data for bands three, four and five. <p> When the short spanning path algorithm was used to cluster data blocks on each disk, the average probability path length was 23.7; the corresponding number for random block assignment was 13.3. 5.2. Simulation-based evaluation of data retrieval Based on the common query patterns identified by earth science researchers <ref> [7, 9, 10, 24] </ref>, we generated synthetic queries that uniformly cover the land masses of the world. We divided the land masses into 12 disjoint regions, in total covering almost all of six continents (excluding Antarctica). We computed two metrics: model transfer time and model seek time.
Reference: [10] <institution> NSF/ARPA Grand Challenge Project at the University of Maryland for Land Cover Dynamics, </institution> <year> 1995. </year> <note> http://www.umiacs.umd.edu:80/research/GC/. </note>
Reference-contexts: Data Placement Titan addresses the problem of low-latency retrieval of very large volumes of data in three ways. First, it takes advantage of the AVHRR data format and of common query patterns identified by earth science researchers <ref> [7, 10, 24] </ref>, to partition the entire dataset into coarse-grained chunks that achieve good disk bandwidth. Second, it tries to maximize disk parallelism by declustering the set of chunks onto a large disk farm. <p> When the short spanning path algorithm was used to cluster data blocks on each disk, the average probability path length was 23.7; the corresponding number for random block assignment was 13.3. 5.2. Simulation-based evaluation of data retrieval Based on the common query patterns identified by earth science researchers <ref> [7, 9, 10, 24] </ref>, we generated synthetic queries that uniformly cover the land masses of the world. We divided the land masses into 12 disjoint regions, in total covering almost all of six continents (excluding Antarctica). We computed two metrics: model transfer time and model seek time.
Reference: [11] <author> A. Guttman. R-Trees: </author> <title> A dynamic index structure for spatial searching. </title> <booktitle> In Proceedings of the 1984 ACM-SIGMOD Conference, </booktitle> <pages> pages 47-57, </pages> <address> Boston, MA, </address> <month> June </month> <year> 1984. </year>
Reference-contexts: Declustering Declustering methods for multidimensional datasets can be classified into two classes: grid-based [3, 6] and graph-theoretic [15, 16]. Grid-based methods have been developed to decluster Cartesian product files, while graph-theoretic methods are aimed at declustering more general spatial access structures such as grid files [20] and R-trees <ref> [11] </ref>. A survey of declustering methods can be found in [18]. Since the Titan index is tree-based, we have adopted a graph-theoretic algorithm Moon et al. 's minimax spanning tree algorithm [16].
Reference: [12] <author> H. V. Jagadish. </author> <title> Linear clustering of objects with multiple attributes. </title> <booktitle> In Proceedings of the 1990 ACM-SIGMOD Conference, </booktitle> <pages> pages 332-42, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: We have chosen the Short Spanning Path (SSP) algorithm [8] for this purpose. We considered a Hilbert-curve-based scheme as an alternative. Both methods can be used to map multidimensional objects onto a one-dimensional space. It is widely believed that the Hilbert curve achieves the best clustering among space-filling curves <ref> [12, 17] </ref>. In [16], however, we have empirically shown that the SSP algorithm achieves bet ter declustering (and therefore a better linearization) than a Hilbert-curve-based algorithm. Finding the shortest spanning path is NP-complete. <p> The model seek time was originally proposed in <ref> [12] </ref> as a measure of the clustering properties of space-filling curves [12, 17]. As was pointed out in [12], small gaps between fetched blocks are likely to be immaterial. <p> The model seek time was originally proposed in [12] as a measure of the clustering properties of space-filling curves <ref> [12, 17] </ref>. As was pointed out in [12], small gaps between fetched blocks are likely to be immaterial. Therefore, we use the total distance to be traveled by the disk arm, as well as the model seek time, to evaluate the clustering scheme. <p> The model seek time was originally proposed in <ref> [12] </ref> as a measure of the clustering properties of space-filling curves [12, 17]. As was pointed out in [12], small gaps between fetched blocks are likely to be immaterial. Therefore, we use the total distance to be traveled by the disk arm, as well as the model seek time, to evaluate the clustering scheme. We used 3-dimensional queries (two spatial dimensions and the temporal dimension).
Reference: [13] <author> I. Kamel and C. Faloutsos. </author> <title> Parallel R-trees. </title> <booktitle> In Proceedings of the 1992 ACM-SIGMOD Conference, </booktitle> <pages> pages 195-204, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: To generate the edge costs, we have chosen the proximity index proposed by Kamel and Faloutsos <ref> [13] </ref>. The alternative we considered, euclidean distance, is suitable for point objects that occupy zero area in the attribute space but does not capture the distinction among pairs of partially overlapped spatial objects of non-zero area or volume 1 .
Reference: [14] <author> S. Liang, S. Goward, J. Ranson, R. Dubayah, and S. Kalluri. </author> <title> Retrieval of atmospheric water vapor and land surface temperature from AVHRR thermal imagery. </title> <booktitle> In Proceedings of the 1995 International Geoscience and Remote Sensing Symposium, Quantitative Remote Sensing for Science and Applications., </booktitle> <pages> pages 1959-61, </pages> <month> July </month> <year> 1995. </year>
Reference-contexts: This grouping occurs due to the properties of the bands: the first two bands provide information to estimate the amount of chlorophyll in a region [9] whereas the last three bands can be used to estimate cloud cover and surface temperature <ref> [14] </ref>. To take advantage of these query patterns, Titan stores AVHRR data in two parts, one containing data for bands one and two and the other containing data for bands three, four and five.
Reference: [15] <author> D.-R. Liu and S. Shekhar. </author> <title> A similarity graph-based approach to declustering problems and its application towards paral-lelizing grid files. </title> <booktitle> In the 11th Inter. Conference on Data Engineering, </booktitle> <pages> pages 373-81, </pages> <month> Mar. </month> <year> 1995. </year>
Reference-contexts: Finally, the index is extensible it is easy to include data from other sensors without re-engineering the indexing scheme or re-indexing existing data. 3.3. Declustering Declustering methods for multidimensional datasets can be classified into two classes: grid-based [3, 6] and graph-theoretic <ref> [15, 16] </ref>. Grid-based methods have been developed to decluster Cartesian product files, while graph-theoretic methods are aimed at declustering more general spatial access structures such as grid files [20] and R-trees [11]. A survey of declustering methods can be found in [18].
Reference: [16] <author> B. Moon, A. Acharya, and J. Saltz. </author> <title> Study of scalable declus-tering algorithms for parallel grid files. </title> <booktitle> In Proceedings of the Tenth International Parallel Processing Symposium, </booktitle> <pages> pages 434-40, </pages> <month> Apr. </month> <year> 1996. </year> <note> An extended version is available as University of Maryland Technical Report CS-TR-3589. </note>
Reference-contexts: Finally, the index is extensible it is easy to include data from other sensors without re-engineering the indexing scheme or re-indexing existing data. 3.3. Declustering Declustering methods for multidimensional datasets can be classified into two classes: grid-based [3, 6] and graph-theoretic <ref> [15, 16] </ref>. Grid-based methods have been developed to decluster Cartesian product files, while graph-theoretic methods are aimed at declustering more general spatial access structures such as grid files [20] and R-trees [11]. A survey of declustering methods can be found in [18]. <p> A survey of declustering methods can be found in [18]. Since the Titan index is tree-based, we have adopted a graph-theoretic algorithm Moon et al. 's minimax spanning tree algorithm <ref> [16] </ref>. This algorithm was originally proposed for declustering grid files on a large disk farm and has been shown to outperform Fang et al. 's Short Spanning Path algorithm [8] for that task. <p> It requires O (N 2 ) operations and achieves perfectly balanced partitions (i.e., each disk is assigned at most dN=M e data blocks where M is the number of disks). A detailed description of this algorithm can be found in <ref> [16] </ref>. 3.4. Clustering In addition to maximizing disk parallelism by decluster-ing, it is important to reduce the number of disk seeks by suitably linearizing the data blocks assigned to a single disk. We have chosen the Short Spanning Path (SSP) algorithm [8] for this purpose. <p> We considered a Hilbert-curve-based scheme as an alternative. Both methods can be used to map multidimensional objects onto a one-dimensional space. It is widely believed that the Hilbert curve achieves the best clustering among space-filling curves [12, 17]. In <ref> [16] </ref>, however, we have empirically shown that the SSP algorithm achieves bet ter declustering (and therefore a better linearization) than a Hilbert-curve-based algorithm. Finding the shortest spanning path is NP-complete. Therefore, the SSP algorithm employs a heuristic to generate a path that is short, but not necessarily the shortest. <p> A cluster of blocks is a group of data blocks that are contiguous on disk. 2 The model transfer time has been considered a plausible measure of the actual block transfer time <ref> [6, 16] </ref> under the assumptions that: (1) all disks can be accessed independently, and (2) the volume of data is too large for caching. The model seek time was originally proposed in [12] as a measure of the clustering properties of space-filling curves [12, 17].
Reference: [17] <author> B. Moon, H. V. Jagadish, C. Faloutsos, and J. H. Saltz. </author> <title> Analysis of the clustering properties of Hilbert space-filling curve. </title> <type> Technical Report CS-TR-3611, </type> <institution> University of Mary-land, </institution> <month> Mar. </month> <year> 1996. </year>
Reference-contexts: We have chosen the Short Spanning Path (SSP) algorithm [8] for this purpose. We considered a Hilbert-curve-based scheme as an alternative. Both methods can be used to map multidimensional objects onto a one-dimensional space. It is widely believed that the Hilbert curve achieves the best clustering among space-filling curves <ref> [12, 17] </ref>. In [16], however, we have empirically shown that the SSP algorithm achieves bet ter declustering (and therefore a better linearization) than a Hilbert-curve-based algorithm. Finding the shortest spanning path is NP-complete. <p> The model seek time was originally proposed in [12] as a measure of the clustering properties of space-filling curves <ref> [12, 17] </ref>. As was pointed out in [12], small gaps between fetched blocks are likely to be immaterial. Therefore, we use the total distance to be traveled by the disk arm, as well as the model seek time, to evaluate the clustering scheme.
Reference: [18] <author> B. Moon and J. H. Saltz. </author> <title> Scalability analysis of declustering methods for Cartesian product files. </title> <type> Technical Report CS-TR-3590, </type> <institution> University of Maryland, </institution> <month> Apr. </month> <year> 1996. </year>
Reference-contexts: Grid-based methods have been developed to decluster Cartesian product files, while graph-theoretic methods are aimed at declustering more general spatial access structures such as grid files [20] and R-trees [11]. A survey of declustering methods can be found in <ref> [18] </ref>. Since the Titan index is tree-based, we have adopted a graph-theoretic algorithm Moon et al. 's minimax spanning tree algorithm [16].
Reference: [19] <author> S. Morehouse. </author> <title> The ARC/INFO geographic information system. </title> <journal> Computers and Geosciences: An International Journal, </journal> <volume> 18(4) </volume> <pages> 435-41, </pages> <month> August </month> <year> 1992. </year>
Reference-contexts: This requires careful coordination of computation and data retrieval to avoid slowing down either process. Several database systems have been designed for handling geographic datasets <ref> [4, 19, 26, 27] </ref>. These systems are capable of handling map-based raster images, map points (e.g. cities) and line segments (e.g. rivers, roads) and provide powerful spatial query operations. They are, however, unsuitable for storing raw remote-sensing data that has not been projected to a map-based coordinate system.
Reference: [20] <author> J. Nievergelt and H. Hinterberger. </author> <title> The Grid File: An adaptive, symmetric multikey file structure. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 9(1) </volume> <pages> 38-71, </pages> <month> Mar. </month> <year> 1984. </year>
Reference-contexts: Declustering Declustering methods for multidimensional datasets can be classified into two classes: grid-based [3, 6] and graph-theoretic [15, 16]. Grid-based methods have been developed to decluster Cartesian product files, while graph-theoretic methods are aimed at declustering more general spatial access structures such as grid files <ref> [20] </ref> and R-trees [11]. A survey of declustering methods can be found in [18]. Since the Titan index is tree-based, we have adopted a graph-theoretic algorithm Moon et al. 's minimax spanning tree algorithm [16].
Reference: [21] <author> J. A. Orenstein and T. H. Merrett. </author> <title> A class of data structures for associative searching. </title> <booktitle> In the 3rd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems, </booktitle> <pages> pages 181-90, </pages> <month> Apr. </month> <year> 1984. </year>
Reference-contexts: The position of a data block is described by a [disk,offset] pair. The leaf nodes are arranged in a z-ordering <ref> [21] </ref> before the index is built. Sorting the leaves spatially allows access to the index as a range tree.
Reference: [22] <author> R. C. Prim. </author> <title> Shortest connection networks and some generalizations. </title> <journal> Bell System Technical Journal, </journal> <volume> 36(11) </volume> <pages> 1389-1401, </pages> <month> Nov. </month> <year> 1957. </year>
Reference-contexts: The minimax algorithm models the problem as a complete graph each vertex represents a data block and each edge represents the likelihood that the corresponding data blocks will be accessed together. The key idea of the algorithm is to extend Prim's minimal spanning tree algorithm <ref> [22] </ref> to construct as many spanning trees as there are disks in the disk farm, and then assign all the blocks associated with a single spanning tree to a single disk. To generate the edge costs, we have chosen the proximity index proposed by Kamel and Faloutsos [13].
Reference: [23] <author> C. Shock, C. Chang, L. Davis, S. Goward, J. Saltz, and A. Sussman. </author> <title> A high performance image database system for remote sensing. </title> <booktitle> In 24th AIPR Workshop on Tools and Techniques for Modeling and Simulation, </booktitle> <address> Washington, D.C., </address> <month> Oct. </month> <year> 1995. </year>
Reference-contexts: They are, however, unsuitable for storing raw remote-sensing data that has not been projected to a map-based coordinate system. Maintaining remote-sensing data in its raw form is necessary for two reasons <ref> [23] </ref>. First, a significant amount of earth science research is devoted to developing correlations between raw sensor readings at the satellite and various properties of the earth's surface; once the composition operation is performed it is no longer possible to retrieve the original data.
Reference: [24] <author> P. Smith and B.-B. Ding. </author> <title> Source code for the AVHRR Pathfinder system, 1995. Main program of the AVHRR Land Pathfinder effort (NASA Goddard). </title>
Reference-contexts: Data Placement Titan addresses the problem of low-latency retrieval of very large volumes of data in three ways. First, it takes advantage of the AVHRR data format and of common query patterns identified by earth science researchers <ref> [7, 10, 24] </ref>, to partition the entire dataset into coarse-grained chunks that achieve good disk bandwidth. Second, it tries to maximize disk parallelism by declustering the set of chunks onto a large disk farm. <p> The AVHRR files provided by NASA [2] are organized in a band-interleaved form (i.e., all the values for a single pixel are stored consecutively). However, most satellite data processing programs process one of two groups bands one and two or bands three, four and five <ref> [7, 24] </ref>. This grouping occurs due to the properties of the bands: the first two bands provide information to estimate the amount of chlorophyll in a region [9] whereas the last three bands can be used to estimate cloud cover and surface temperature [14]. <p> When the short spanning path algorithm was used to cluster data blocks on each disk, the average probability path length was 23.7; the corresponding number for random block assignment was 13.3. 5.2. Simulation-based evaluation of data retrieval Based on the common query patterns identified by earth science researchers <ref> [7, 9, 10, 24] </ref>, we generated synthetic queries that uniformly cover the land masses of the world. We divided the land masses into 12 disjoint regions, in total covering almost all of six continents (excluding Antarctica). We computed two metrics: model transfer time and model seek time.
Reference: [25] <author> M. Snir, P. Hochschild, D. Frye, and K. Gildea. </author> <title> The communication software and parallel environment of the IBM SP2. </title> <journal> IBM Systems Journal, </journal> <volume> 34(2) </volume> <pages> 205-221, </pages> <year> 1995. </year>
Reference-contexts: The memory copy also uses the processor, leaving no time for the processor to perform other computation during communication <ref> [25] </ref>. Snir et al. [25] did, however, report that slightly better overlap between computation and communication can be achieved with wide SP-2 nodes, which have higher memory bandwidth. 6. Discussion The experimental results presented in Section 5 show that Titan delivers good performance for both small and large queries. <p> The memory copy also uses the processor, leaving no time for the processor to perform other computation during communication <ref> [25] </ref>. Snir et al. [25] did, however, report that slightly better overlap between computation and communication can be achieved with wide SP-2 nodes, which have higher memory bandwidth. 6. Discussion The experimental results presented in Section 5 show that Titan delivers good performance for both small and large queries.
Reference: [26] <author> M. Ubell. </author> <title> The Montage extensible datablade architecture. </title> <booktitle> In Proceedings of the 1994 ACM-SIGMOD Conference, </booktitle> <pages> page 482, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: This requires careful coordination of computation and data retrieval to avoid slowing down either process. Several database systems have been designed for handling geographic datasets <ref> [4, 19, 26, 27] </ref>. These systems are capable of handling map-based raster images, map points (e.g. cities) and line segments (e.g. rivers, roads) and provide powerful spatial query operations. They are, however, unsuitable for storing raw remote-sensing data that has not been projected to a map-based coordinate system.
Reference: [27] <author> T. Vijlbrief and P. van Oosterom. </author> <title> The GEO++ system: An extensible GIS. </title> <booktitle> In Proceedings of the Fifth International Symposium on Spatial Data Handling, </booktitle> <pages> pages 40-50, </pages> <month> August </month> <year> 1992. </year>
Reference-contexts: This requires careful coordination of computation and data retrieval to avoid slowing down either process. Several database systems have been designed for handling geographic datasets <ref> [4, 19, 26, 27] </ref>. These systems are capable of handling map-based raster images, map points (e.g. cities) and line segments (e.g. rivers, roads) and provide powerful spatial query operations. They are, however, unsuitable for storing raw remote-sensing data that has not been projected to a map-based coordinate system.
References-found: 27

