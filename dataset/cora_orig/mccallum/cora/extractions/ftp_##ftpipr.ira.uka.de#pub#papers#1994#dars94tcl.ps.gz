URL: ftp://ftpipr.ira.uka.de/pub/papers/1994/dars94tcl.ps.gz
Refering-URL: ftp://ftpipr.ira.uka.de/.public_html/papersna.html
Root-URL: 
Title: Fault-Tolerance and Error Recovery in an Autonomous Robot with Distributed Controlled Components  
Author: Tim C. Lueth and Thomas Laengle 
Keyword: Distributed controlled robot systems, autonomous robots, fault-tolerance, error recovery, reliability  
Address: D-76128 Karlsruhe, Germany  
Affiliation: Institute for Real-Time Computer Systems and Robotics IPR, University of Karlsruhe,  
Abstract: Most of the existing autonomous robot systems have a centralized hierarchical control architecture. In such robot systems, all planning, execution control, and monitoring tasks are performed by a single control unit on a defined level. In case of an error that occurs during the execution, this central control unit has the complete knowledge about the past executed actions and is able to reason on the error situation. Besides the centralized control architectures, distributed and decentralized control architectures have been developed to overcome some problems with the centralized systems. Because of the missing overall control, error recovery is more difficult than in centralized systems. This paper presents concepts to obtain fault-tolerance behaviour and error recovery in a distributed controlled robot system. As an example for such a robot system, the Karlsruhe Autonomous Mobile Robot KAMRO is considered that is being developed at IPR. Many experiments were performed with the former centralized control architecture. Our intention is to achieve the same and better results with the distributed control architecture KAMARA. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Albus, J.S., Barbera,A.J., Nagel,R.N.: </author> <title> Theory and practice of hierarchical control. </title> <booktitle> Proceedings of IEEE Comp. Soc. Int. Conf., </booktitle> <year> 1981, </year> <pages> pp. 18-39. </pages>
Reference-contexts: 1 Introduction In contrast to hierarchical and centralized controlled robot systems <ref> [1] </ref>, which have advantages at the initial system design process, decentralized and distributed controlled robot systems reveal their main advantages when it is necessary to enhance the system, to integrate components, and to maintain the system.
Reference: [2] <author> Fukuda, T.; Buss, M.; Hosokai, H.; Kawauchi, Y.: </author> <title> Cell Structured Robotic System CEBOT - Control, Planning and Communication Methods. </title> <booktitle> Proceedings of IAS Intelligent Autonomous Systems, </booktitle> <address> Amsterdam, </address> <month> December, </month> <pages> 11-14, </pages> <year> 1989, </year> <pages> pp. 661-671. </pages>
Reference-contexts: New components inform other components about their existence and capabilities (e.g., extension of a sensor system). Up to now, different robot systems like the CEBOT <ref> [2] </ref> have been designed to achieve this properties. On the other hand, the control of existing robot systems has been improved by using these concepts in a special communication network ACTRESS [3] among several robot system.
Reference: [3] <author> Asama, H.; Ozaki, K.; Ishida, Y.; Habib, M.K., Matsumoto, A.; Endo, I.: </author> <title> Negotiation between Multiple Mobile Robots and An Environment Manager. </title> <booktitle> Proceedings of 5th ICAR Int. Conf. on Advanced Robotics, </booktitle> <address> Pisa, Italy, </address> <month> June, </month> <pages> 4-6, </pages> <year> 1991, </year> <pages> pp. 533-538. </pages>
Reference-contexts: Up to now, different robot systems like the CEBOT [2] have been designed to achieve this properties. On the other hand, the control of existing robot systems has been improved by using these concepts in a special communication network ACTRESS <ref> [3] </ref> among several robot system. An other idea is to improve the behaviour of individual manipulators by this methods [4].
Reference: [4] <author> Kotoska, S.; Asama, H.; Kaetsu, H.; Ohmori, H.; Endo, I.; Sato, K.; Okada, S.; Nakayama, R.: </author> <title> Development of a functionally adaptive and robust manipulator. </title> <booktitle> Proceedings of DARS Int. Symp. on Distributed Autonomous Robotic System, </booktitle> <address> Wako, Japan, </address> <month> Sep. </month> <pages> 21-22, </pages> <year> 1992, </year> <pages> pp. 85-90. </pages>
Reference-contexts: On the other hand, the control of existing robot systems has been improved by using these concepts in a special communication network ACTRESS [3] among several robot system. An other idea is to improve the behaviour of individual manipulators by this methods <ref> [4] </ref>. Although the overall behaviour of distributed or decentralized controlled systems is assumed as more powerful as the behaviour of a centralized control system, some aspect like error recovery seem to be more difficult.
Reference: [5] <author> Hrmann, K.; Rembold, U.: </author> <title> A Robot Action Planner for Automatic Parts Assembly. </title> <booktitle> Proceedings of IEEE/RSJ Intl Workshop on Intelligent Robots and Systems, </booktitle> <address> Tokyo, Japan, </address> <year> 1988, </year> <pages> pp. 311-317. </pages>
Reference-contexts: The robot is controlled by a hierarchical and function oriented planning and control architecture and is capable of executing assembly tasks. In order to do this task it is necessary to generate an assembly precedence graph by means of an off line cell control system <ref> [5, 6] </ref> describing the sequence of an assembly. The assembly precedence graph is then translated into a condition event Petri net (CEP) [7] and transmitted to the KAMRO-Robot. After that the robot is ready to approach a workstation containing the assembly parts.
Reference: [6] <author> Frommherz, B.; Werling, G.: </author> <title> Generating Robot Action Plans by Means of an Heuristic Search. </title> <booktitle> Proceedings of IEEE Int. Conf. on Robotics and Automation, </booktitle> <address> Cincinnati, Ohio, </address> <month> May 13-18, </month> <year> 1990, </year> <pages> pp. 884-889. </pages>
Reference-contexts: The robot is controlled by a hierarchical and function oriented planning and control architecture and is capable of executing assembly tasks. In order to do this task it is necessary to generate an assembly precedence graph by means of an off line cell control system <ref> [5, 6] </ref> describing the sequence of an assembly. The assembly precedence graph is then translated into a condition event Petri net (CEP) [7] and transmitted to the KAMRO-Robot. After that the robot is ready to approach a workstation containing the assembly parts.
Reference: [7] <author> Hrmann, A.; Meier, W.; Schloen, J.: </author> <title> A Control Architecture for an Advanced Fault-Tolerant Robot System. </title> <booktitle> Proceedings of Intelligent Autonomous Systems, </booktitle> <address> Amsterdam, </address> <month> December, </month> <pages> 11-14, </pages> <year> 1989, </year> <pages> pp. 576-585. </pages>
Reference-contexts: In order to do this task it is necessary to generate an assembly precedence graph by means of an off line cell control system [5, 6] describing the sequence of an assembly. The assembly precedence graph is then translated into a condition event Petri net (CEP) <ref> [7] </ref> and transmitted to the KAMRO-Robot. After that the robot is ready to approach a workstation containing the assembly parts.
Reference: [8] <author> Cheng, X.; Kappey, D.; Schloen, J.: </author> <title> Elements of an Advanced Robot Control System for Assembly Tasks.Proceedings of Intl Conf. </title> <booktitle> on Advanced Robotics, </booktitle> <address> Pisa, Italy, </address> <month> June, </month> <pages> 4-6, </pages> <year> 1991, </year> <pages> pp. 411-416. </pages>
Reference-contexts: Having determined the assembly part position by means of the overhead vision system, the plan execution system generates then by interpreting the Petri net (implicit task specification) a sequence of elementary robot operations (EEO) which in turn is being translated into reactive manipulator movements by the robot control system <ref> [8] </ref>. Experiments in 1990 have shown [9] that the process of interpreting an off line generated assembly precedence graph and of its situation dependent execution is principally suited to solve the task of robot assembly. <p> The different improvements of the control architecture to achieve this goal are described in [10]. On the other hand, a new distributed control architecture is in preparation for this robot system. 3 Control Architectures The centralised control architecture FATE <ref> [8] </ref> consists of a blackboard planning level that generates situation-dependent manipulatorspecific elementary operations. The real-time robot control system RT-RCS executes the elementary operations. The real-time controller is able to control the manipulators independently or in a closed kinematic chain.
Reference: [9] <author> Hrmann, A.; Rembold, U.: </author> <title> Development of an Advanced Robot for Autonomous Assembly. </title> <booktitle> Proceedings of IEEE Int. Conf. on Robotics and Automation, </booktitle> <address> Sacramento, California, </address> <month> April </month> <year> 1991, </year> <pages> pp. 2452-2457. </pages>
Reference-contexts: Experiments in 1990 have shown <ref> [9] </ref> that the process of interpreting an off line generated assembly precedence graph and of its situation dependent execution is principally suited to solve the task of robot assembly.
Reference: [10] <author> Lueth, T.C.; Rembold, U.: </author> <title> Extensive Manipulation Capabilities and Reliable Behavior at Autononomous Robot Assembly. </title> <booktitle> Proceedings of IEEE Int. Conf. on Robotics and Automation, </booktitle> <address> San Diego, CA, </address> <month> May 8-13, </month> <year> 1994, </year> <pages> pp. 3495-3500. </pages>
Reference-contexts: However, the analyses of these experiments have also shown that it became absolutely necessary to improve the reliability of the task related performance of the robot and to expand on its manipulative capabilities. The different improvements of the control architecture to achieve this goal are described in <ref> [10] </ref>. On the other hand, a new distributed control architecture is in preparation for this robot system. 3 Control Architectures The centralised control architecture FATE [8] consists of a blackboard planning level that generates situation-dependent manipulatorspecific elementary operations. The real-time robot control system RT-RCS executes the elementary operations. <p> Fig.7: a) Error that is caused by uncertain position information, b) error that must be recovered The previously described centralized system FATE is already possible to handle uncertain information (1b), information error (2a) and precondition error (2d) <ref> [10] </ref>.
Reference: [11] <author> Lueth, </author> <title> T.C.; Laengle, Th.: Task Description, Decomposition, and Allocation in a Distributed Autonomous Multi-Agent Robot System. </title> <booktitle> Proceedings of IROS IEEE/RSJ Int. Conf. on Intelligent Robots and Systems, </booktitle> <address> Munich, Germany, </address> <month> Sep. </month> <pages> 12-16, </pages> <year> 1994, </year> <pages> pp. </pages> <note> to appear. </note>
Reference: [12] <author> Trevelyan, J.P, Nelson, M.: </author> <title> Adaptive robot control incorporating automatic error recovery. </title> <booktitle> Proceedings of IInternational Conference on Advanced Robotics, </booktitle> <year> 1987 </year>
Reference-contexts: Errors that can be avoided by the system's fault tolerance <ref> [12] </ref>, and 2 . Errors that occur by inconsistency of the world model and have to be recovered [13]. To be more specific, we have considered three different situations that require fault-tolerant behaviour: 1a.
Reference: [13] <author> Srinivas, </author> <title> S: Error recovery in robot systems. </title> <type> PhD Theses, </type> <institution> California Institute of Technology, </institution> <year> 1977 </year>
Reference-contexts: Errors that can be avoided by the system's fault tolerance [12], and 2 . Errors that occur by inconsistency of the world model and have to be recovered <ref> [13] </ref>. To be more specific, we have considered three different situations that require fault-tolerant behaviour: 1a. Broken down system components, for example a manipulator or a camera system doesn't work any longer because a computer controlled light source is damaged or a cable is squeezed, 1b.
References-found: 13

