URL: http://www-icparc.doc.ic.ac.uk/papers/managing_tasks_using_an_interval-based_t.ps
Refering-URL: http://www-icparc.doc.ic.ac.uk/papers.html
Root-URL: 
Title: Managing tasks using an interval-based temporal logic  
Author: S. K. DAS William Penney P. HAMMOND 
Keyword: Decision support system, task management, temporal logic  
Address: College, London SW7 2AZ  Middlesex UB8 3PH  
Affiliation: Laboratory, Imperial  Department of Computer Science, Brunel University,  
Note: 1-15 c Kluwer Academic Publishers, Boston. Manufactured in The Netherlands.  
Email: p.hammond@brunel.ac.uk  
Date: Received Revised  
Abstract: We develop here a logic L t for reasoning about time. The main intended application is the task management of a medical decision support system. The language of the logic is propositional extended with interval concepts. A brief description is given of the implementation of L t in Prolog. The implementation is motivated by the management of cancer treatment and illustrated in terms of a small example. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> J. F. Allen. </author> <title> Towards a general theory of action and time. </title> <journal> Artificial Intelligence, </journal> <volume> 23 </volume> <pages> 123-154, </pages> <year> 1984. </year>
Reference-contexts: We refer to the static aspects of the universe of discourse as properties (e.g., the patient has a cold) and dynamic aspects as occurrences (e.g., the patient is given an injection). For a detailed discussion of properties, occurrences, etc. readers are referred to <ref> [1] </ref>. An occurrence is either an event or a process. Some occurrences involve animate agents (i.e., decision makers) performing actions. We shall not consider occurrences where animate agents do not perform any actions. <p> We shall not consider occurrences where animate agents do not perform any actions. In light of this discussion, we consider the set of all propositional symbols sorted into properties and actions. Sentences are relations among properties and actions. Our approach towards reasoning about time is interval-based <ref> [1] </ref>, [18], first-order [17], [26], [22], discrete and linear [10], [28] in nature. Intervals are represented by their boundary time points. The most fundamental construct in the logic is 2 ?? Fig. 1. Major tasks are temporally ordered (Testicular cancer trial, TE13) Table 1. <p> Note that we quantify over boundary time points of intervals rather than intervals themselves as in <ref> [1] </ref>. Thus quantifications in L t are ordinary first-order quantifications. If an interval containing a variable occurring in a formula F is under the scope of a universal quantifier then F represents a set of formulae. <p> Suppose the same action ff is executed twice and each execution takes two units of time. Suppose also that the first execution starts at time point 1 and the second stops at 5. Although, we can infer ff <ref> [1; 5) and ff (1; 5] </ref> from these facts, we cannot infer ff [1; 5]. A left- or right- exact or compact interval is also an interval. <p> Suppose also that the first execution starts at time point 1 and the second stops at 5. Although, we can infer ff [1; 5) and ff (1; 5] from these facts, we cannot infer ff <ref> [1; 5] </ref>. A left- or right- exact or compact interval is also an interval. <p> If the property stops holding at time point 8 then we delete [4; 9] from the knowledge base and add the new temporal proposition [4; 8]. The concepts of properties and occurrences have been discussed in <ref> [1] </ref> and an interval based temporal logic has also been developed there. But our presentation of the logic is more formal here and we have provided implementation details of L t . <p> But our presentation of the logic is more formal here and we have provided implementation details of L t . On the other hand, in our logic we did not formalise the notion of agent as well as processes as in <ref> [1] </ref> although axioms (6) and (7) for properties are applicable to some continuous processes. But we have introduced the concept of time point unlike in [1]. The usefulness of time point to reason about continuous change has been discussed in [12]. The theory in [1] has been modified in [12] by <p> On the other hand, in our logic we did not formalise the notion of agent as well as processes as in <ref> [1] </ref> although axioms (6) and (7) for properties are applicable to some continuous processes. But we have introduced the concept of time point unlike in [1]. The usefulness of time point to reason about continuous change has been discussed in [12]. The theory in [1] has been modified in [12] by proposing predicates HOLDS ON , HOLDS IN and HOLDS AT to represent respectively a property holds throughout an interval, during an interval and at a <p> as well as processes as in <ref> [1] </ref> although axioms (6) and (7) for properties are applicable to some continuous processes. But we have introduced the concept of time point unlike in [1]. The usefulness of time point to reason about continuous change has been discussed in [12]. The theory in [1] has been modified in [12] by proposing predicates HOLDS ON , HOLDS IN and HOLDS AT to represent respectively a property holds throughout an interval, during an interval and at a time point. <p> For that we need to consider the underlying set of constants as sorted [2] to temporal and non-temporal. This is because the temporal constants are of type integer. Due to the discrete nature of L t , there will be so called truth gaps between two time points <ref> [1] </ref>. But this does not affect the practical applicability of the logic. This problem can be avoided in L t by considering the set of rational numbers as time points instead of integers.
Reference: 2. <author> F. Bacchus, J. Tenenberg, and J. A. Koomen. </author> <title> A non-reified temporal logic. </title> <journal> Artificial Intelligence, </journal> <volume> 52 </volume> <pages> 87-108, </pages> <year> 1991. </year>
Reference-contexts: Drug Modification Duration wbc &lt; 1.5 OR all suspend 3 days if no platelets &lt; 50 abort protocol improvement after 2 wks wbc &gt; 3 AND cisplatin 75 percent dose platelets 2 [50,75] Bone marrow wbc 2 [2.1,3] AND etoposide 75 percent dose suppression platelets &gt; 50 ifosfamide wbc 2 <ref> [1.5, 2] </ref> AND etoposide 75 percent dose platelets &gt; 75 ifosfamide wbc 2 [1.5, 2] AND ifosfamide 50 percent dose platelets 2 [ 50,75] etoposide Renal impairment creat. clear. &lt; 40 cisplatin 75 percent dose until recovery bleomycin withdraw until recovery Skin toxicity Severe rash bleomycin withdraw until recovery Mucosal toxicity <p> platelets &lt; 50 abort protocol improvement after 2 wks wbc &gt; 3 AND cisplatin 75 percent dose platelets 2 [50,75] Bone marrow wbc 2 [2.1,3] AND etoposide 75 percent dose suppression platelets &gt; 50 ifosfamide wbc 2 <ref> [1.5, 2] </ref> AND etoposide 75 percent dose platelets &gt; 75 ifosfamide wbc 2 [1.5, 2] AND ifosfamide 50 percent dose platelets 2 [ 50,75] etoposide Renal impairment creat. clear. &lt; 40 cisplatin 75 percent dose until recovery bleomycin withdraw until recovery Skin toxicity Severe rash bleomycin withdraw until recovery Mucosal toxicity Severe ulcers all withdraw until recovery Dyspnoea Shortness of breath bleomycin withdraw permanently <p> An example of such a formula CHOP (; ) is represented in L t as follows: 9t (t 1 t ^ t t 2 ^ [t 1 ; t] ^ [t; t 2 ]) Representing temporal assertions by the method of temporal arguments has been developed in <ref> [2] </ref>, [17]. This approach add to the predicates additional arguments denoting the temporal elements associated with the assertion. In our approach temporal elements are represented separately as intervals. A unified approach to temporal reasoning based on constraint-network formalism has been presented in [9]. <p> But the application specific symbols such as Cisplatin, OpenT ap have been considered as propositional. The logic can be extended to full first-order. For that we need to consider the underlying set of constants as sorted <ref> [2] </ref> to temporal and non-temporal. This is because the temporal constants are of type integer. Due to the discrete nature of L t , there will be so called truth gaps between two time points [1]. But this does not affect the practical applicability of the logic.
Reference: 3. <author> BTA. </author> <title> Guidelines on the management of asthma. </title> <journal> THORAX: The Journal of the British Thoratic Society, </journal> <volume> 48 </volume> <pages> 1-24, </pages> <year> 1993. </year> <month> ?? 15 </month>
Reference-contexts: For example, the action treatment is defined by actions G CSF , BEP and EP . Note that the property eligibility is asserted by the decision making component of the prototype. We now provide an example of a recursive rule taken from the domain of asthma management <ref> [3] </ref>. As part of the subsequent treatment for chronic asthma, drug salbutamol is applied to the patient until recovery. This is translated into L t as the following two recursive rules [3]: drug_salbutamol (X,T1,T2,Y) &lt;= patient_has_recovered (X,T1,T1,Y). drug_salbutamol (X,T1,T2,Y) &lt;= salbutamol (X,T1,T3,_) & drug_salbutamol (_,T3,T2,Y). where patient_has_recovered is a property and <p> We now provide an example of a recursive rule taken from the domain of asthma management <ref> [3] </ref>. As part of the subsequent treatment for chronic asthma, drug salbutamol is applied to the patient until recovery. This is translated into L t as the following two recursive rules [3]: drug_salbutamol (X,T1,T2,Y) &lt;= patient_has_recovered (X,T1,T1,Y). drug_salbutamol (X,T1,T2,Y) &lt;= salbutamol (X,T1,T3,_) & drug_salbutamol (_,T3,T2,Y). where patient_has_recovered is a property and drug_salbutamol and salbutamol are actions. We have similar constructions in table 1.
Reference: 4. <author> J. P. Burgess. </author> <title> Basic Tense Logic. </title> <editor> In D. Gabby and R. Guenthner, editors, </editor> <booktitle> Extensions of Classical Logic, volume 2 of Handbook of Philosophical Logic, </booktitle> <pages> pages 89-133. </pages> <address> D. </address> <publisher> Reidel Publishing Company, </publisher> <year> 1985. </year>
Reference-contexts: The intended meaning of this knowledge base includes Clark's completion [5]. Therefore, in the Prolog imple mentation we take advantage of SLDNF resolution to query the knowledge base and to verify integrity constraints. An integrity constraint has the form of a denial <ref> [4] </ref>, [5] as follows: 8 ( p 1 I 1 ^ ::: ^ p m I m ^ :p m+1 I m+1 ^ :::^ (23) where each A k and I k is defined earlier as in the case of clauses. <p> Comparison with other work In this section we briefly compare our approach with that of others. Unlike [21], we consider events with duration. Updates to knowledge bases in this approach consist only of additions. But we view an update as a deletion followed by an addition. For example, if <ref> [4; 9] </ref> is added to a knowledge base at time point 5 then we mean than the property started holding from time point 4 and is expected to hold at least until time point 9. If the property stops holding at time point 8 then we delete [4; 9] from the <p> For example, if <ref> [4; 9] </ref> is added to a knowledge base at time point 5 then we mean than the property started holding from time point 4 and is expected to hold at least until time point 9. If the property stops holding at time point 8 then we delete [4; 9] from the knowledge base and add the new temporal proposition [4; 8]. The concepts of properties and occurrences have been discussed in [1] and an interval based temporal logic has also been developed there. <p> If the property stops holding at time point 8 then we delete [4; 9] from the knowledge base and add the new temporal proposition <ref> [4; 8] </ref>. The concepts of properties and occurrences have been discussed in [1] and an interval based temporal logic has also been developed there. But our presentation of the logic is more formal here and we have provided implementation details of L t . <p> A unified approach to temporal reasoning based on constraint-network formalism has been presented in [9]. A comparison among various approaches can be found in [20]. There are point based approaches developed by several authors based on using F (future) and P (past) operators <ref> [4] </ref>, [24], [25] as well as S (since) and U (until) operators [19] and their combinations [10]. An excellent philosophical discussion on the subject can be found in [27], [28]. 14 ?? The overall advantage of our method over the others is its simplicity and practicality of implementation.
Reference: 5. <author> S. K. Das. </author> <title> Deductive Databases and Logic Programming. </title> <publisher> Addison-Wesley, </publisher> <year> 1992. </year>
Reference-contexts: Suppose the same action ff is executed twice and each execution takes two units of time. Suppose also that the first execution starts at time point 1 and the second stops at 5. Although, we can infer ff <ref> [1; 5) and ff (1; 5] </ref> from these facts, we cannot infer ff [1; 5]. A left- or right- exact or compact interval is also an interval. <p> Suppose also that the first execution starts at time point 1 and the second stops at 5. Although, we can infer ff [1; 5) and ff (1; 5] from these facts, we cannot infer ff <ref> [1; 5] </ref>. A left- or right- exact or compact interval is also an interval. <p> The intended meaning of this knowledge base includes Clark's completion <ref> [5] </ref>. Therefore, in the Prolog imple mentation we take advantage of SLDNF resolution to query the knowledge base and to verify integrity constraints. An integrity constraint has the form of a denial [4], [5] as follows: 8 ( p 1 I 1 ^ ::: ^ p m I m ^ :p <p> The intended meaning of this knowledge base includes Clark's completion <ref> [5] </ref>. Therefore, in the Prolog imple mentation we take advantage of SLDNF resolution to query the knowledge base and to verify integrity constraints. An integrity constraint has the form of a denial [4], [5] as follows: 8 ( p 1 I 1 ^ ::: ^ p m I m ^ :p m+1 I m+1 ^ :::^ (23) where each A k and I k is defined earlier as in the case of clauses. <p> Each of the proposed set of axioms is in the form of a positive Horn clause and application specific proper axioms are also in the form of a normal clause <ref> [5] </ref>. Thus we have been able to implement this approach directly and efficiently in Prolog. 11. Conclusion and future directions We have developed an interval-based temporal logic in this paper. The model theory of the logic has been studied and the soundness and completeness have been established.
Reference: 6. <author> S. K. Das and J. Fox. </author> <title> A logic for reasoning about safety in decision support systems. </title> <editor> In Clarke et al., editor, </editor> <booktitle> Proceeding of the Second European Conference on Symbolic and Quantitative Approaches to Reasoning and Uncertainty, </booktitle> <pages> pages 79-84. </pages> <publisher> Springer-Verlag, </publisher> <month> November </month> <year> 1993. </year>
Reference-contexts: The execution of this protocol stretches over a few months. It is important that every constituent action is executed in time and every constituent property is also brought about in time without violating any safety conditions <ref> [6] </ref>, [16]. Examples of some important aspects of task management are to maintain a history and status of executed actions, anticipate actions to be executed or properties to be brought about and provide a suitable interface to the decision maker about the whole activity.
Reference: 7. <author> S. K. Das, J. Fox, P. Hammond, and D. Elsdon. </author> <title> Making safe decisions. </title> <note> submitted for publication, </note> <year> 1995. </year>
Reference-contexts: of medical tasks using L t syntax In this section we show how the syntax of L t has been used to represent tasks of a number of practical domains including cancer [14] and asthma management [15] and the technique of their translation to L t has been explained in <ref> [7] </ref>. The following section describes how task management is carried out using these representations in the implementation of L t .
Reference: 8. <author> S. K. Das and M. H. Williams. </author> <title> A path finding method for checking integrity in deductive databases. </title> <journal> Data and Knowledge Engineering, </journal> <volume> 4 </volume> <pages> 223-244, </pages> <year> 1989. </year>
Reference-contexts: Implementation detail The present implementation is basically a theorem prover of a relevant subset of L t executed directly in Prolog. A meta-interpreter has also been developed to verify integrity constraints. We have employed an extension of the path finding method <ref> [8] </ref> to achieve this. To serve our purpose, we have identified two important subsets of L t to represent respectively a knowledge base and integrity constraints. <p> If the property stops holding at time point 8 then we delete [4; 9] from the knowledge base and add the new temporal proposition <ref> [4; 8] </ref>. The concepts of properties and occurrences have been discussed in [1] and an interval based temporal logic has also been developed there. But our presentation of the logic is more formal here and we have provided implementation details of L t .
Reference: 9. <author> R. Dechter, I. Meiri, and J. Pearl. </author> <title> Temporal constraint network. </title> <journal> Artificial Intelligence, </journal> <volume> 49 </volume> <pages> 61-95, </pages> <year> 1991. </year>
Reference-contexts: Comparison with other work In this section we briefly compare our approach with that of others. Unlike [21], we consider events with duration. Updates to knowledge bases in this approach consist only of additions. But we view an update as a deletion followed by an addition. For example, if <ref> [4; 9] </ref> is added to a knowledge base at time point 5 then we mean than the property started holding from time point 4 and is expected to hold at least until time point 9. If the property stops holding at time point 8 then we delete [4; 9] from the <p> For example, if <ref> [4; 9] </ref> is added to a knowledge base at time point 5 then we mean than the property started holding from time point 4 and is expected to hold at least until time point 9. If the property stops holding at time point 8 then we delete [4; 9] from the knowledge base and add the new temporal proposition [4; 8]. The concepts of properties and occurrences have been discussed in [1] and an interval based temporal logic has also been developed there. <p> This approach add to the predicates additional arguments denoting the temporal elements associated with the assertion. In our approach temporal elements are represented separately as intervals. A unified approach to temporal reasoning based on constraint-network formalism has been presented in <ref> [9] </ref>. A comparison among various approaches can be found in [20]. There are point based approaches developed by several authors based on using F (future) and P (past) operators [4], [24], [25] as well as S (since) and U (until) operators [19] and their combinations [10].
Reference: 10. <author> E. A. Emerson and J. Y. Halpern. </author> <title> `Sometime' and `Not Never' revisited: on branching versus linear time temporal logic. </title> <journal> Journal of the Association of Computing Machinery, </journal> <volume> 33 </volume> <pages> 151-178, </pages> <year> 1986. </year>
Reference-contexts: In light of this discussion, we consider the set of all propositional symbols sorted into properties and actions. Sentences are relations among properties and actions. Our approach towards reasoning about time is interval-based [1], [18], first-order [17], [26], [22], discrete and linear <ref> [10] </ref>, [28] in nature. Intervals are represented by their boundary time points. The most fundamental construct in the logic is 2 ?? Fig. 1. Major tasks are temporally ordered (Testicular cancer trial, TE13) Table 1. <p> A comparison among various approaches can be found in [20]. There are point based approaches developed by several authors based on using F (future) and P (past) operators [4], [24], [25] as well as S (since) and U (until) operators [19] and their combinations <ref> [10] </ref>. An excellent philosophical discussion on the subject can be found in [27], [28]. 14 ?? The overall advantage of our method over the others is its simplicity and practicality of implementation.
Reference: 11. <author> J. Fox, S. K. Das, and D. Elsdon. </author> <title> Decision making and planning in autonomous systems: theory, </title> <booktitle> technology and applications. In Proceeding of the ECAI Workshop on Decision Theory for DAI Applications, </booktitle> <month> August </month> <year> 1994. </year>
Reference-contexts: Our implementation is essentially a prototype and we have provided a scheme for temporal reasoning rather than a robust implementation. The implementation works as part of a prototype decision making system for its task management <ref> [11] </ref>. The interpretation of p [t 1 ; t 2 ] (and also p [t 1 ; t 2 ) and p (t 1 ; t 2 ]) in the case of p being a property is different than when p is an action.
Reference: 12. <author> A. Galton. </author> <title> A critical examination of Allen's theory of action and time. </title> <journal> Artificial Intelligence, </journal> <volume> 42 </volume> <pages> 159-188, </pages> <year> 1990. </year>
Reference-contexts: But we have introduced the concept of time point unlike in [1]. The usefulness of time point to reason about continuous change has been discussed in <ref> [12] </ref>. The theory in [1] has been modified in [12] by proposing predicates HOLDS ON , HOLDS IN and HOLDS AT to represent respectively a property holds throughout an interval, during an interval and at a time point. <p> But we have introduced the concept of time point unlike in [1]. The usefulness of time point to reason about continuous change has been discussed in <ref> [12] </ref>. The theory in [1] has been modified in [12] by proposing predicates HOLDS ON , HOLDS IN and HOLDS AT to represent respectively a property holds throughout an interval, during an interval and at a time point. <p> The interesting question which we are investigating is whether these definitions can be given using the present syntax of L t or if they need a syntax beyond first-order. These definitions are quite straightforward if one considers only properties <ref> [12] </ref>. The quantifiers and arithmetic functions and binary predicate symbols have been introduced into the logic L t just to manipulate the intervals. But the application specific symbols such as Cisplatin, OpenT ap have been considered as propositional. The logic can be extended to full first-order.
Reference: 13. <author> J. Y. Halpern and Y. Shoham. </author> <title> A propositional modal logic of time intervals. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 38 </volume> <pages> 935-962, </pages> <year> 1991. </year>
Reference-contexts: If a variable interval occurring in a formula F is under the scope of an existential quantifier then at least one instantiation of the interval makes F true. Consider the following example <ref> [13] </ref>: If the tap is opened then the container will eventually be filled in 8t 1 (OpenT ap (t 1 ) ! 9t 2 (t 1 t 2 ^ F illed (t 2 ))) where OpenT ap is an action and F illed is a property of the container. <p> The predicate HOLDS AT is simply a special case of each of these two. A modal temporal logic has been developed in <ref> [13] </ref> to deal with statements that are interpreted with respect to time intervals. They augment propositional calculus by the modal time operators &lt; A &gt;, &lt; B &gt; and &lt; E &gt; and their transposes &lt; A &gt;, &lt; B &gt; and &lt; E &gt; respectively. <p> For example, &lt; t 1 ; t 2 &gt;j=&lt; A &gt; p if and only if there exists t 3 such that t 2 &lt; t 3 and &lt; t 2 ; t 3 &gt;j= p Any formula of this logic can be transformed into a formula of first-order logic <ref> [13] </ref>. The transformed formula will have two free variables which can be written in the language of L t . Following a remark in [29] we can say that given a formula of L t with two free varibale it is not always possible to find an equivalent formula of [13]. <p> <ref> [13] </ref>. The transformed formula will have two free variables which can be written in the language of L t . Following a remark in [29] we can say that given a formula of L t with two free varibale it is not always possible to find an equivalent formula of [13]. An example of such a formula CHOP (; ) is represented in L t as follows: 9t (t 1 t ^ t t 2 ^ [t 1 ; t] ^ [t; t 2 ]) Representing temporal assertions by the method of temporal arguments has been developed in [2], [17].
Reference: 14. <author> P. Hammond. </author> <title> Decision support and safety reasoning in oncology. </title> <type> Technical Report RED Project, </type> <institution> Imperial Cancer Research Fund, </institution> <address> London, </address> <year> 1994. </year>
Reference-contexts: Representation of medical tasks using L t syntax In this section we show how the syntax of L t has been used to represent tasks of a number of practical domains including cancer <ref> [14] </ref> and asthma management [15] and the technique of their translation to L t has been explained in [7]. The following section describes how task management is carried out using these representations in the implementation of L t .
Reference: 15. <author> P. Hammond and D. Elsdon. </author> <title> Decision support and safety in asthma management. </title> <type> Technical Report RED Project, </type> <institution> Imperial Cancer Research Fund, </institution> <address> London, </address> <year> 1994. </year>
Reference-contexts: Representation of medical tasks using L t syntax In this section we show how the syntax of L t has been used to represent tasks of a number of practical domains including cancer [14] and asthma management <ref> [15] </ref> and the technique of their translation to L t has been explained in [7]. The following section describes how task management is carried out using these representations in the implementation of L t . <p> For example, if an action ff is scheduled to start at time point 15 and the current time point is 16. If no fact of the form ff <ref> [15; i] </ref> is derivable the ff is considered to be pending. An action is in a remind state if the current time point lies before the time point where it is supposed to start execution in a plan.
Reference: 16. <author> P. Hammond, A. L. Harris, S. K. Das, and J. C. Wy-att. </author> <title> Safety and decision support in oncology. </title> <booktitle> Methods of Information in Medicine, </booktitle> <volume> 33 </volume> <pages> 371-381, </pages> <year> 1994. </year>
Reference-contexts: The execution of this protocol stretches over a few months. It is important that every constituent action is executed in time and every constituent property is also brought about in time without violating any safety conditions [6], <ref> [16] </ref>. Examples of some important aspects of task management are to maintain a history and status of executed actions, anticipate actions to be executed or properties to be brought about and provide a suitable interface to the decision maker about the whole activity.
Reference: 17. <author> B. A. Haugh. </author> <title> Non-standard semantics for the method of temporal arguments. </title> <booktitle> In Proceedings of the 10th International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 449-455, </pages> <year> 1987. </year>
Reference-contexts: We shall not consider occurrences where animate agents do not perform any actions. In light of this discussion, we consider the set of all propositional symbols sorted into properties and actions. Sentences are relations among properties and actions. Our approach towards reasoning about time is interval-based [1], [18], first-order <ref> [17] </ref>, [26], [22], discrete and linear [10], [28] in nature. Intervals are represented by their boundary time points. The most fundamental construct in the logic is 2 ?? Fig. 1. Major tasks are temporally ordered (Testicular cancer trial, TE13) Table 1. <p> An example of such a formula CHOP (; ) is represented in L t as follows: 9t (t 1 t ^ t t 2 ^ [t 1 ; t] ^ [t; t 2 ]) Representing temporal assertions by the method of temporal arguments has been developed in [2], <ref> [17] </ref>. This approach add to the predicates additional arguments denoting the temporal elements associated with the assertion. In our approach temporal elements are represented separately as intervals. A unified approach to temporal reasoning based on constraint-network formalism has been presented in [9].
Reference: 18. <author> I. L. Humberstone. </author> <title> Interval semantics for tense logics: some remarks. </title> <journal> Journal of Philosophical Logic, </journal> <year> 1979. </year>
Reference-contexts: We shall not consider occurrences where animate agents do not perform any actions. In light of this discussion, we consider the set of all propositional symbols sorted into properties and actions. Sentences are relations among properties and actions. Our approach towards reasoning about time is interval-based [1], <ref> [18] </ref>, first-order [17], [26], [22], discrete and linear [10], [28] in nature. Intervals are represented by their boundary time points. The most fundamental construct in the logic is 2 ?? Fig. 1. Major tasks are temporally ordered (Testicular cancer trial, TE13) Table 1.
Reference: 19. <author> J. A. W. Kamp. </author> <title> Tense Logic and the Theory of Linear Order. </title> <type> PhD thesis, </type> <institution> University of California, </institution> <address> Los Angeles, </address> <year> 1968. </year>
Reference-contexts: A comparison among various approaches can be found in [20]. There are point based approaches developed by several authors based on using F (future) and P (past) operators [4], [24], [25] as well as S (since) and U (until) operators <ref> [19] </ref> and their combinations [10]. An excellent philosophical discussion on the subject can be found in [27], [28]. 14 ?? The overall advantage of our method over the others is its simplicity and practicality of implementation.
Reference: 20. <author> B. Knight and J. Ma. </author> <title> Time representation: a taxonomy of temporal models. </title> <journal> Artificial Intelligence Review, </journal> <volume> 7 </volume> <pages> 401-419, </pages> <year> 1994. </year>
Reference-contexts: In our approach temporal elements are represented separately as intervals. A unified approach to temporal reasoning based on constraint-network formalism has been presented in [9]. A comparison among various approaches can be found in <ref> [20] </ref>. There are point based approaches developed by several authors based on using F (future) and P (past) operators [4], [24], [25] as well as S (since) and U (until) operators [19] and their combinations [10].
Reference: 21. <author> R. Kowalski and M. Sergot. </author> <title> A logic-based calculus of events. </title> <journal> New Generation Computing, </journal> <volume> 4 </volume> <pages> 67-95, </pages> <year> 1986. </year>
Reference-contexts: If one asks whether the patient was treated in the interval (0,7), the answer will be yes because of action treatment [1,4] and the axiom (3). 10. Comparison with other work In this section we briefly compare our approach with that of others. Unlike <ref> [21] </ref>, we consider events with duration. Updates to knowledge bases in this approach consist only of additions. But we view an update as a deletion followed by an addition.
Reference: 22. <author> D. V. McDermott. </author> <title> A temporal logic for reasoning about processes and plans. </title> <journal> Cognitive Science, </journal> <volume> 6 </volume> <pages> 101-155, </pages> <year> 1982. </year>
Reference-contexts: In light of this discussion, we consider the set of all propositional symbols sorted into properties and actions. Sentences are relations among properties and actions. Our approach towards reasoning about time is interval-based [1], [18], first-order [17], [26], <ref> [22] </ref>, discrete and linear [10], [28] in nature. Intervals are represented by their boundary time points. The most fundamental construct in the logic is 2 ?? Fig. 1. Major tasks are temporally ordered (Testicular cancer trial, TE13) Table 1.
Reference: 23. <author> MRC. </author> <title> Carboplatin based combination chemotherapy for good prognosis metastatic malignant teratoma. </title> <type> Technical report, </type> <institution> MRC Cancer Trial Office, Cam-bridge, </institution> <year> 1990. </year>
Reference-contexts: 1. Motivation Reasoning about time in some areas of medicine is essential. For example, major treatment tasks in clinical oncology are temporally ordered. Figure 1 represents protocol TE13 concerned with the treatment of testicular cancer <ref> [23] </ref>. The associated clinical trial comprises activities or tasks such as consideration of eligibility for treatment, randomi-sation, actual treatment itself, and so on.
Reference: 24. <author> A. N. </author> <title> Prior. Time and Modality. </title> <publisher> Oxford University Press, </publisher> <year> 1957. </year>
Reference-contexts: A unified approach to temporal reasoning based on constraint-network formalism has been presented in [9]. A comparison among various approaches can be found in [20]. There are point based approaches developed by several authors based on using F (future) and P (past) operators [4], <ref> [24] </ref>, [25] as well as S (since) and U (until) operators [19] and their combinations [10]. An excellent philosophical discussion on the subject can be found in [27], [28]. 14 ?? The overall advantage of our method over the others is its simplicity and practicality of implementation.
Reference: 25. <author> N. Rescher and A. Urquhart. </author> <title> Temporal Logic. </title> <publisher> Springer-Verlag, </publisher> <year> 1971. </year>
Reference-contexts: A unified approach to temporal reasoning based on constraint-network formalism has been presented in [9]. A comparison among various approaches can be found in [20]. There are point based approaches developed by several authors based on using F (future) and P (past) operators [4], [24], <ref> [25] </ref> as well as S (since) and U (until) operators [19] and their combinations [10]. An excellent philosophical discussion on the subject can be found in [27], [28]. 14 ?? The overall advantage of our method over the others is its simplicity and practicality of implementation.
Reference: 26. <author> Y. Shoham. </author> <title> Temporal logics in AI: semantical and ontological considerations. </title> <journal> Artificial Intelligence, </journal> <volume> 33 </volume> <pages> 89-104, </pages> <year> 1987. </year>
Reference-contexts: In light of this discussion, we consider the set of all propositional symbols sorted into properties and actions. Sentences are relations among properties and actions. Our approach towards reasoning about time is interval-based [1], [18], first-order [17], <ref> [26] </ref>, [22], discrete and linear [10], [28] in nature. Intervals are represented by their boundary time points. The most fundamental construct in the logic is 2 ?? Fig. 1. Major tasks are temporally ordered (Testicular cancer trial, TE13) Table 1.
Reference: 27. <author> J. van Benthem. </author> <title> Time, logic and computation. In Workshop on Linear Time, Branching Time and Partial Order in Logics and Models for Concurrency (LNCS-354), </title> <address> pages 1-49. </address> <publisher> Springer-Verlag, </publisher> <month> June </month> <year> 1988. </year>
Reference-contexts: There are point based approaches developed by several authors based on using F (future) and P (past) operators [4], [24], [25] as well as S (since) and U (until) operators [19] and their combinations [10]. An excellent philosophical discussion on the subject can be found in <ref> [27] </ref>, [28]. 14 ?? The overall advantage of our method over the others is its simplicity and practicality of implementation.
Reference: 28. <editor> J. van Benthem. </editor> <booktitle> The logic of time. </booktitle> <address> Dordrecht, </address> <year> 1991. </year>
Reference-contexts: In light of this discussion, we consider the set of all propositional symbols sorted into properties and actions. Sentences are relations among properties and actions. Our approach towards reasoning about time is interval-based [1], [18], first-order [17], [26], [22], discrete and linear [10], <ref> [28] </ref> in nature. Intervals are represented by their boundary time points. The most fundamental construct in the logic is 2 ?? Fig. 1. Major tasks are temporally ordered (Testicular cancer trial, TE13) Table 1. <p> There are point based approaches developed by several authors based on using F (future) and P (past) operators [4], [24], [25] as well as S (since) and U (until) operators [19] and their combinations [10]. An excellent philosophical discussion on the subject can be found in [27], <ref> [28] </ref>. 14 ?? The overall advantage of our method over the others is its simplicity and practicality of implementation. Each of the proposed set of axioms is in the form of a positive Horn clause and application specific proper axioms are also in the form of a normal clause [5].

References-found: 28

