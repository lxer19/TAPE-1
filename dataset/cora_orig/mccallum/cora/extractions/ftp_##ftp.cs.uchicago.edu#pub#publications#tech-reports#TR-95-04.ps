URL: ftp://ftp.cs.uchicago.edu/pub/publications/tech-reports/TR-95-04.ps
Refering-URL: http://cs-www.uchicago.edu/publications/tech-reports/
Root-URL: 
Title: Using Autoreducibility to Separate Complexity Classes  
Author: Harry Buhrman Lance Fortnow Leen Torenvliet 
Date: April 26, 1995  
Abstract: A language is autoreducible if it can be reduced to itself by a Turing machine that does not ask its own input to the oracle. We use autoreducibility to separate exponential space from doubly exponential space by showing that all Turing-complete sets for exponential space are autoreducible but there exists some Turing-complete set for doubly exponential space that is not. We immediately also get a separation of logarithmic space from polynomial space. Although we already know how to separate these classes using diagonalization, our proofs separate classes solely by showing they have different structural properties, thus applying Post's Program to complexity theory. We feel such techniques may prove unknown separations in the future. In particular if we could settle the question as to whether all complete sets for doubly exponential time were autoreducible we would separate polynomial time from either logarithmic space or polynomial space. We also show several other theorems about autoreducibility. 
Abstract-found: 1
Intro-found: 1
Reference: [AS84] <author> K. Ambos-Spies. </author> <title> p-mitotic sets. </title> <editor> In E. Borger, G. Hasenjager, and D. Roding, editors, </editor> <booktitle> Logic and Machines, volume 177 of Lecture Notes in Computer Science, </booktitle> <pages> pages 1-23. </pages> <publisher> Springer, </publisher> <year> 1984. </year>
Reference-contexts: Ladner [Lad73] looked at autoreducibility in the recursion theory environment where he showed that there existed Turing-complete recursively enumerable sets that are not autoreducible. Ambos-Spies <ref> [AS84] </ref> fl CWI. PO Box 94079, 1090 GB Amsterdam, The Netherlands. E-mail: buhrman@cwi.nl. Part of this research was done while visiting the Univ. Politecnica de Catalunya in Barcelona. <p> We will also use a structural property of sets. This property can be defined as a reductions of the set to itself. The property we will use is autoreducibility. The notion was carried over from the recursion theoretical environment towards the realm of polynomial time by Ambos-Spies <ref> [AS84] </ref>. Definition 2.1 A set A is autoreducible if and only if there exist a polynomial time machine M such that: 1. L (M; A) = A. <p> Perhaps one could use this generalized model to get an appropriate non-autoreducible set to separate classes. Finally, perhaps one could use a property other than autoreducibility to separate classes. One possibility is mitoticity, a property closely related to autoreducibility <ref> [Lad73, AS84, BHT94] </ref>. A set is mitotic if it is the disjoint union of two Turing-equivalent sets. Perhaps mitoticity or some other natural or artificial property can be used to separate classes. Acknowledgments We would like to thank Manindra Agrawal and Ashish Naik for very helpful discussions.
Reference: [BDG88] <author> J. Balcazar, J. Daz, and J. Gabarro. </author> <title> Structural Complexity I. </title> <publisher> Springer, </publisher> <year> 1988. </year>
Reference-contexts: Languages are subsets of fl , and are denoted by capital letters A; B; C; S; : : :. We assume that the reader is familiar with the standard Turing machine model and other standard notions of complexity theory, as can be found in <ref> [BDG88] </ref>. Nevertheless, some of the definitions that we feel may not be common knowledge, are cited below. An oracle machine is a multitape Turing machine with an input tape, an output tape, work tapes, and a query tape.
Reference: [BF92] <author> R. Beigel and J. Feigenbaum. </author> <title> On being incoherent without being very hard. </title> <journal> Computational Complexity, </journal> <volume> 2 </volume> <pages> 1-17, </pages> <year> 1992. </year>
Reference-contexts: Email: fort-now@cs.uchicago.edu. Supported in part by NSF grant CCR 92-53582. z University of Amsterdam, Plantage Muidergracht 24, 1024 TV, Amsterdam. E-mail: leen@fwi.uva.nl. Partially supported by HC&M grant nr. ERB4050PL93-0516. 1 first transferred the notion of autoreducibility to the polynomial-time settings. More recently, Yao and others <ref> [Yao90, BF92] </ref> have studied a probabilistic variant of autoreducibility known as "coherence." In this paper, we ask for what complexity classes do all the complete sets have the autoreducibility property.
Reference: [BHT94] <author> H. Buhrman, A. Hoene, and L. Torenvliet. </author> <title> Splittings, robustness and structure of complete sets. </title> <booktitle> In Proceedings of the 10th Symposium on Theoretical Aspects of Computer Science, volume 665 of Lecture Notes in Computer Science, </booktitle> <pages> pages 175-184. </pages> <publisher> Springer, </publisher> <year> 1994. </year>
Reference-contexts: Perhaps one could use this generalized model to get an appropriate non-autoreducible set to separate classes. Finally, perhaps one could use a property other than autoreducibility to separate classes. One possibility is mitoticity, a property closely related to autoreducibility <ref> [Lad73, AS84, BHT94] </ref>. A set is mitotic if it is the disjoint union of two Turing-equivalent sets. Perhaps mitoticity or some other natural or artificial property can be used to separate classes. Acknowledgments We would like to thank Manindra Agrawal and Ashish Naik for very helpful discussions.
Reference: [BST93] <author> H. Buhrman, E. Spaan, and L. Torenvliet. </author> <title> Bounded reductions. </title> <editor> In K. Ambos-Spies, S. Homer, and U. Schoning, editors, </editor> <booktitle> Complexity Theory, </booktitle> <pages> pages 83-99. </pages> <publisher> Cambridge University Press, </publisher> <month> December </month> <year> 1993. </year>
Reference-contexts: It also shows a structural difference between p 2T -complete sets and p 2tt -complete sets. Corollary 5.6 <ref> [BST93] </ref> There exists a p 2T -complete set for EXPSPACE that is not p 2tt -complete. Proof: Use A in Theorem 5.2 together with Corollary 5.5. 2 6 Conclusions We believe that this research may lead to a separation of classes not separable by known diagonalization techniques.
Reference: [BvHT93] <author> H. Buhrman, P. van Helden, and L. Torenvliet. </author> <title> P-selective self-reducible sets: A new characterization of P. </title> <booktitle> In Proceedings of the 8th IEEE Structure in Complexity Theory Conference, </booktitle> <pages> pages 44-51. </pages> <publisher> IEEE, </publisher> <address> New York, </address> <year> 1993. </year>
Reference-contexts: An answer would prove either PSPACE 6= EXP or P 6= PSPACE. Corollary 3.6 also finds it counterpart for non-adaptive autoreductions. Theorem 5.3 All p tt -complete sets for NP are p tt autoreducible with respect to nonuniform reductions. Proof Sketch: We use techniques from <ref> [BvHT93] </ref>. Let L be a p tt -complete set for NP. On input x one can compute relative to L a witness y x that witnesses that x 2 L. Whenever x is queried in this computation answer 1 (x 2 L).
Reference: [CKS81] <author> A. Chandra, D. Kozen, and L. Stockmeyer. </author> <title> Alternation. </title> <journal> Journal of the ACM, </journal> <volume> 28(1) </volume> <pages> 114-133, </pages> <year> 1981. </year>
Reference-contexts: Proof: We use the following characterization of EXPSPACE that extends the oracle characterization of the exponential-time hierarchy due to Orponen [Orp83] and the alternating characterization of PSPACE due to Chandra, Kozen and Stockmeyer <ref> [CKS81] </ref>. Let p be a polynomial and M an oracle Turing machine running in time p (n). Let us also have two arbitrary players A and B that take turns deciding bits of an oracle D on strings of length p (n).
Reference: [FF93] <author> J. Feigenbaum and L. Fortnow. </author> <title> On the random-self-reducibility of complete sets. </title> <journal> SIAM Journal on Computing, </journal> <volume> 22 </volume> <pages> 994-1005, </pages> <year> 1993. </year>
Reference-contexts: If x 62 L then B 0 will play according to a winning strategy for B and will cause M (x) to reject. 2 Similar though simpler proofs yield the following corollary: Corollary 3.4 All Turing-complete sets for PSPACE and EXP are autoreducible. Feigenbaum and Fortnow <ref> [FF93] </ref> define the following concept of #P-robustness: A set L is #P-robust if P #P L Theorem 3.5 Every #P-robust language is nonuniformly autoreducible. Proof Sketch: Feigenbaum and Fortnow [FF93] show that every #P-robust language is random-self-reducible. <p> Feigenbaum and Fortnow <ref> [FF93] </ref> define the following concept of #P-robustness: A set L is #P-robust if P #P L Theorem 3.5 Every #P-robust language is nonuniformly autoreducible. Proof Sketch: Feigenbaum and Fortnow [FF93] show that every #P-robust language is random-self-reducible. The queries made by the random-self-reduction depend only on the length of the input. Thus only a few inputs could query themselves with high probability.
Reference: [HS65] <author> J. Hartmanis and R. Stearns. </author> <title> On the computational complexity of algorithms. </title> <journal> Transactions of the American Mathematical Society, </journal> <volume> 117 </volume> <pages> 285-306, </pages> <year> 1965. </year>
Reference-contexts: As an immediate corollary we get that EXPSPACE 6= EEXPSPACE and thus that L 6= PSPACE. Although we have known these separations via the usual space hierarchy theorems <ref> [HS65] </ref> our proof does not rely on diagonalization, rather separates the classes by showing that the classes have different structural properties. Moreover our approach does not relativize. * There exists an oracle relative to which there exist EXPSPACE-complete sets that are not autore ducible.
Reference: [Lad73] <author> R. Ladner. </author> <title> Mitotic recursively enumerable sets. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 38(2) </volume> <pages> 199-211, </pages> <year> 1973. </year>
Reference-contexts: In this paper we will concentrate on the property known as "autoreducibility." A set L is autoreducible if there is a polynomial-time oracle Turing machine M that accepts L using L as an oracle with the caveat that M (x) may not query whether x 2 L. Ladner <ref> [Lad73] </ref> looked at autoreducibility in the recursion theory environment where he showed that there existed Turing-complete recursively enumerable sets that are not autoreducible. Ambos-Spies [AS84] fl CWI. PO Box 94079, 1090 GB Amsterdam, The Netherlands. E-mail: buhrman@cwi.nl. Part of this research was done while visiting the Univ. <p> Perhaps one could use this generalized model to get an appropriate non-autoreducible set to separate classes. Finally, perhaps one could use a property other than autoreducibility to separate classes. One possibility is mitoticity, a property closely related to autoreducibility <ref> [Lad73, AS84, BHT94] </ref>. A set is mitotic if it is the disjoint union of two Turing-equivalent sets. Perhaps mitoticity or some other natural or artificial property can be used to separate classes. Acknowledgments We would like to thank Manindra Agrawal and Ashish Naik for very helpful discussions.
Reference: [LLS75] <author> R. Ladner, N. Lynch, and A. Selman. </author> <title> A comparison of polynomial time reducibilities. </title> <journal> Theoretical Computer Science, </journal> <volume> 1 </volume> <pages> 103-123, </pages> <year> 1975. </year>
Reference-contexts: We use polynomial time bounded adaptive oracle machines, to model Turing reductions ( p adaptive machines to model truth-table reductions ( p tt ). For polynomial time bounded machines, this yields definitions equivalent to the standard definitions of reducibilities in <ref> [LLS75] </ref>. The set of queries generated on input x by oracle machine M is denoted Q M (x). For adaptive machines, this set may be oracle dependent, and is therefore denoted Q A M (x), where A is the oracle set.
Reference: [Odi89] <author> P. Odifreddi. </author> <title> Classical Recursion Theory, </title> <booktitle> volume 125 of Studies in Logic and the Foundations of Mathematics. </booktitle> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1989. </year> <month> 9 </month>
Reference-contexts: Back in the early days of recursion theory, Post [Pos44] wanted to show that the set of nonrecursive recursively enumerable sets strictly contained the Turing-complete recursively enumerable sets. In what we now call "Post's Program" (see <ref> [Odi89, Soa87] </ref>), Post tried to show these classes differed by finding a property that holds for all sets in one class but not for some set in the second. We would like to resurrect Post's Program for separating classes in complexity theory.
Reference: [Orp83] <author> P. Orponen. </author> <title> Complexity classes of alternating machines with oracles. </title> <booktitle> In Proceedings of the 10th International Colloquium On Automata, Languages and Programming, volume 154 of Lecture Notes in Computer Science, </booktitle> <pages> pages 573-584. </pages> <publisher> Springer, </publisher> <year> 1983. </year>
Reference-contexts: M (x). 3 Positive Results By using the right characterization of EXPSPACE we prove the following theorem: Theorem 3.1 Every polynomial-time Turing-complete set for EXPSPACE is autoreducible. Proof: We use the following characterization of EXPSPACE that extends the oracle characterization of the exponential-time hierarchy due to Orponen <ref> [Orp83] </ref> and the alternating characterization of PSPACE due to Chandra, Kozen and Stockmeyer [CKS81]. Let p be a polynomial and M an oracle Turing machine running in time p (n).
Reference: [Pos44] <author> E. Post. </author> <title> Recursively enumerable sets of positive integers and their decision problems. </title> <journal> Bulletin of the American Mathematical Society, </journal> <volume> 50 </volume> <pages> 284-316, </pages> <year> 1944. </year>
Reference-contexts: They have developed sophisticated diagonalization, combinatorial and algebraic techniques but none of these ideas have yet proven useful in the separation task. Back in the early days of recursion theory, Post <ref> [Pos44] </ref> wanted to show that the set of nonrecursive recursively enumerable sets strictly contained the Turing-complete recursively enumerable sets.
Reference: [Soa87] <author> R. Soare. </author> <title> Recursively Enumerable Sets and Degrees. </title> <publisher> Springer, </publisher> <address> Berlin, </address> <year> 1987. </year>
Reference-contexts: Back in the early days of recursion theory, Post [Pos44] wanted to show that the set of nonrecursive recursively enumerable sets strictly contained the Turing-complete recursively enumerable sets. In what we now call "Post's Program" (see <ref> [Odi89, Soa87] </ref>), Post tried to show these classes differed by finding a property that holds for all sets in one class but not for some set in the second. We would like to resurrect Post's Program for separating classes in complexity theory.
Reference: [VV86] <author> L. Valiant and V. Vazirani. </author> <title> NP is as easy as detecting unique solutions. </title> <journal> Theoretical Computer Science, </journal> <volume> 47 </volume> <pages> 85-93, </pages> <year> 1986. </year>
Reference-contexts: Whenever x is queried in this computation answer 1 (x 2 L). If a witness y x is computed accept x otherwise reject. This procedure is an adaptive autoreduction. We now use techniques from <ref> [VV86] </ref> in order to find a witness using non-adaptive queries to L and polynomially many random bits.
Reference: [Yao90] <author> A. Yao. </author> <title> Coherent functions and program checkers. </title> <booktitle> In Proceedings of the 22nd ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 84-94. </pages> <publisher> ACM, </publisher> <address> New York, </address> <year> 1990. </year> <month> 10 </month>
Reference-contexts: Email: fort-now@cs.uchicago.edu. Supported in part by NSF grant CCR 92-53582. z University of Amsterdam, Plantage Muidergracht 24, 1024 TV, Amsterdam. E-mail: leen@fwi.uva.nl. Partially supported by HC&M grant nr. ERB4050PL93-0516. 1 first transferred the notion of autoreducibility to the polynomial-time settings. More recently, Yao and others <ref> [Yao90, BF92] </ref> have studied a probabilistic variant of autoreducibility known as "coherence." In this paper, we ask for what complexity classes do all the complete sets have the autoreducibility property.
References-found: 17

