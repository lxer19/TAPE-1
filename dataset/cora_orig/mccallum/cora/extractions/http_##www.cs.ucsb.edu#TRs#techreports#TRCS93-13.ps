URL: http://www.cs.ucsb.edu/TRs/techreports/TRCS93-13.ps
Refering-URL: http://www.cs.ucsb.edu/TRs/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: ASLANTEST TESTPLAN A Testplan for the Symbolic Execution Tool  
Author: ASLANTEST by Jeffrey G. Douglas 
Date: June 1993  
Address: Santa Barbara  
Affiliation: UNIVERSITY OF CALIFORNIA  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> B. Auernheimer and R. Kemmerer, </author> <title> ASLAN User's Manual, </title> <institution> Department of Computer Science, University of California at Santa Barbara, </institution> <address> TRCS 84-10, </address> <month> April </month> <year> 1992. </year>
Reference: [2] <author> B. Auernheimer and R. Kemmerer, </author> <title> "Procedural and Nonprocedural Semantics of the ASLAN Formal Specification Language", </title> <booktitle> In Proceedings of the Nineteenth Annual Hawaii International Conference on System Sciences, </booktitle> <pages> pages 784-794, </pages> <address> Hawaii, </address> <year> 1986. </year>
Reference: [3] <author> Shari Lawrence Pfleeger, </author> <title> Software Engineering: The Production of Quality Software, </title> <publisher> MacMillan Publishing Co., </publisher> <address> (New York, New York), </address> <year> 1987. </year>
Reference-contexts: In testing the system, four different kinds of tests are run. In listing different kinds of tests, Pfleeger <ref> [3] </ref> includes the following four types: 1. Documentation Tests: ensure that the system performs as described in the system documentation. 2. Recovery Tests: Test how the system responds to errors during use. 3. Human factors Tests: Investigate requirements dealing with `ease of use' aspects of the system.
Reference: [4] <author> Jeffrey G. Douglas, </author> <title> Aslantest User's Manual, </title> <institution> Department of Computer Science, University of California at Santa Barbara, Santa Barbara, </institution> <address> CA, TRCS93-12, </address> <month> July </month> <year> 1993. </year> <month> 116 </month>
Reference-contexts: Tests not only make sure the commands perform as described, but also that the interface is consistent. For example, the following is the description of the `quit' command contained in the Aslantest User's Manual <ref> [4] </ref>: "Exits the program and returns to UNIX. User is asked to confirm that they wish to exit the session. If he responds in the affirmative, the program exits. If the user responds no, he is asked if he wishes to load another specification. <p> Each command should be run abnormally in an attempt to cause errors to see how the system will respond. Providing improper user input, bad predicates, commands at inappropriate moments are all error-causing scenarios. Error messages and responses should be as described in the Aslantest User's Manual <ref> [4] </ref>. 4.3 Human Factors Tests Human factors tests reveal how user-friendly the system is to use.
References-found: 4

