URL: http://www.cs.dartmouth.edu/~maslen/dimacs-0.ps.gz
Refering-URL: http://www.cs.dartmouth.edu/~maslen/
Root-URL: http://www.cs.dartmouth.edu
Title: GENERALIZED FFTS A SURVEY  
Note: Contents  
Abstract: OF SOME RECENT RESULTS Abstract. In this paper we survey some recent work directed towards generalizing the fast Fourier transform (FFT). We work primarily from the point of view of group representation theory. In this setting the classical FFT can be viewed as a family of efficient algorithms for computing the Fourier transform of either a function defined on a finite abelian group, or a bandlimited function on a compact abelian group. We discuss generalizations of the FFT to arbitrary finite groups and compact Lie groups. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> N. Ahmed, T. Natarajan, and K. Rao, </author> <title> Discrete cosine transforms, </title> <journal> IEEE Trans. Comput. </journal> <volume> 23 (1974), </volume> <pages> 90-93. </pages>
Reference-contexts: For this, let w b (k), 0 k 2b, be the unique solution to the system of linear equations 2b X w b (k) P m (cos ) = ffi 0m for 0 m b;(4.6) where P m is the Legendre polynomial of degree m on <ref> [1; 1] </ref>. The weighting function we will use for X b is defined by w (j 2 ; k; j 1 ) = (1=(2b + 1) 2 )w b (k). Remark 4.4. <p> The discrete cosine transform (DCT) is the discrete polynomial transform for the Chebyshev polynomials, with weight function 1, and sample points z j = cos 1 ((2j + 1)=2N ). This transform may be computed in O (N log N ) operations using a FFT <ref> [1] </ref>, or by the extremely efficient DCT algorithm of Steidl and Tasche [86], which takes a mere (3=2)N log N N + 1 real scalar operations when N is a power of 2 and the input vector is real.
Reference: [2] <author> B. Alpert and V. Roklin, </author> <title> A fast algorithm for the evaluation of Legendre transforms, </title> <journal> SIAM J. Sci. Statist. Comput. </journal> <volume> 12 (1991), </volume> <pages> 158-179. </pages>
Reference-contexts: Previous to their work all other efficient algorithms developed (also in the context of meteorological applications) were only approximate in nature <ref> [75, 2] </ref>. To state things a bit more precisely, recall that any integrable function on the two-sphere has an expansion (its Fourier expansion) in terms of spherical harmonics.
Reference: [3] <author> L. Auslander and R. Tolmieri, </author> <title> Is computing with the fast Fourier transform pure or applied mathematics?, </title> <journal> Bull. Amer. Math. Soc. (N.S.) </journal> <volume> 1 (1979), </volume> <pages> 847-897. </pages>
Reference-contexts: Remark 2.2. The paper <ref> [3] </ref> gives a different representation theoretic interpretation of Cooley-Tukey, relating it to the Weil-Brezin map. 8 DAVID K. MASLEN AND DANIEL N. ROCKMORE 2.2.3. The transition from continuous to discrete.
Reference: [4] <author> L. Auslander, J. R. Johnson and R. W. Johnson, </author> <title> Multidimensional Cooley-Tukey algorithms revisited, 1995, </title> <type> (preprint). </type>
Reference-contexts: Orszag discusses an analogous coordinate by coordinate approach for computing eigenfunction transforms in [75]. Auslander, et. al. discuss how in the abelian case, choice of coset representatives can influence running times for various architectures <ref> [4] </ref>. 3.1.2. Adapted representations and structured matrices. Definition 3.7 (Subgroup-adapted representations). Let G be a finite group, let R be a set of matrix representations of G, and let H be a subgroup of G.
Reference: [5] <author> L. Babai and L. Ronyai, </author> <title> Computing irreducible representations of finite groups, </title> <journal> Math. Comp. </journal> <volume> 55 (1990), </volume> <pages> 705-722. </pages>
Reference-contexts: In general, constructing these matrices is a difficult problem, though a general purpose algorithm for doing this in polynomial has been developed by Babai and Ronyai <ref> [5] </ref>. In the paper [8], Baum and Clausen show that for supersolvable groups, this problem may be efficiently solved. <p> Generating irreducible matrix coefficients. Any implementation of an FFT would require the ability to actually generate a collection of irreducible matrix coefficients, possibly with some extra structure (e.g., adaptedness). While general results exist in this direction (cf. <ref> [5] </ref>), it would be of interest to find other classes of groups which have finely tuned algorithms for this task, as do the solvable groups [8]. 8. Stability.
Reference: [6] <author> L. Babai, K. Freidl, and M. Stricker, </author> <title> Decomposition of *-closed algebras in polynomial time, </title> <booktitle> Proc. 18 th ACM ISSAC (1993), </booktitle> <pages> 86-94. </pages>
Reference: [7] <author> U. Baum, </author> <title> Existence and efficient construction of fast Fourier transforms for supersolvable groups, </title> <booktitle> Comput. Complexity 1 (1991), </booktitle> <pages> 235-256. </pages>
Reference-contexts: In that case the separation of variables technique is supplemented by factoring the group representations with tensor products. This is a key idea behind the fast transforms for abelian group extensions [83], solvable groups [12, 19], and supersolvable groups <ref> [7] </ref>. 3.1. Separation of variables at the matrix level. 3.1.1. The main idea. Let G be a finite group, f a complex-valued function on G, and let be a matrix representation of G. To construct an FFT algorithm on G, proceed as follows. <p> We have already seen such methods work in Yates' algorithm for the Walsh-Hadamard transform. The works of Beth on solvable groups [12], Clausen and Baum [19] on solvable and supersolvable <ref> [7] </ref> groups and Rockmore on abelian group extensions [83] are based on the idea of factoring both the group elements and the representations. In this respect, their algorithms differ from a pure separation of variables algorithm. These methods are all based on versions of the following general approach. <p> Supersolvable groups. Theorems 3.36 and 3.38 depend on the use of representations whose matrices are block monomial. Baum <ref> [7] </ref> has shown that for a large class of groups, the supersolvable groups, the representation matrices in a basis adapted to a suitable chain of subgroups are actually monomial. Putting this together with Theorem 3.36 gives a fast transform in O (jGj log jGj) operations, on any supersolvable group, G.
Reference: [8] <author> U. Baum and M. Clausen, </author> <title> Computing irreducible representations of supersolvable groups, </title> <journal> Math. Comp. </journal> <month> 63 </month> <year> (1994), </year> <month> 351-359. </month> <title> [9] , Some lower and upper complexity bounds for generalized Fourier transforms and their inverses, </title> <journal> SIAM J. Comput. </journal> <volume> 20(3) (1991), </volume> <pages> 451-459. </pages>
Reference-contexts: In general, constructing these matrices is a difficult problem, though a general purpose algorithm for doing this in polynomial has been developed by Babai and Ronyai [5]. In the paper <ref> [8] </ref>, Baum and Clausen show that for supersolvable groups, this problem may be efficiently solved. More specifically, given a supersolvable group specified by a power-commutator presentation, they show how to construct the representation matrices, for a generating set, at a complete set of representations adapted to a chief series. <p> While general results exist in this direction (cf. [5]), it would be of interest to find other classes of groups which have finely tuned algorithms for this task, as do the solvable groups <ref> [8] </ref>. 8. Stability. Error analyses of abelian FFTs abound, mainly due to the widespread use of these algorithms in so many important applications (see e.g. [17, 79]).
Reference: [10] <author> U. Baum, M. Clausen, and B. Tietz, </author> <title> Improved upper complexity bounds for the discrete Fourier transform, </title> <booktitle> AAECC 2 (1991), </booktitle> <pages> 35-43. </pages>
Reference-contexts: This raises the question: Which combination of methods is best for a given group Z=N Z? Diaconis [30] gives a analysis of the average running times of algorithms based on each of the methods. Baum, Clausen, and Tietz <ref> [10] </ref> take a careful look at the choice of the number M occurring in the chirp-z approach, and prove a good bound valid for any cyclic group. Combining this with the result on the Fourier transform of a direct product of groups (see Section 3.5), they obtain the following theorem. <p> Combining this with the result on the Fourier transform of a direct product of groups (see Section 3.5), they obtain the following theorem. Theorem 3.33 (Baum, Clausen, Tietz <ref> [10] </ref>). The Fourier transform of a function on any finite abelian group G may be computed in less than 8 jGj log jGj scalar operations. 3.5. Tensor Products and Group Extensions.
Reference: [11] <author> T. Beth, </author> <title> On the computational complexity of the general discrete Fourier transform, </title> <type> Theoret. </type> <institution> Comput. Sci. </institution> <month> 51 </month> <year> (1987), </year> <pages> 331-339. </pages> <publisher> [12] , Verfahren der schnellen Fourier-Transformation, Teubner Studienbucher, Stuttgart, </publisher> <year> 1984. </year>
Reference-contexts: The first such results in this direction appear to be due to Willsky [92] who was looking for new algorithms for filter design. Others also did much to lay the groundwork in this relatively new interdisciplinary area looking to extend the uses of the FFT in signal processing <ref> [57, 11, 22] </ref> and data analysis [31]. In this paper we will survey some of the recent results about such generalizations. We focus primarily upon recent work using factorization of group elements, in the finite group case, and the analogous approach for compact groups [68, 69, 64].
Reference: [13] <author> L. </author> <title> Bluestein, A linear filtering approach to the computation of the discrete Fourier transform, </title> <journal> IEEE Trans. </journal> <month> AU-18 </month> <year> (1970), </year> <pages> 451-455. </pages>
Reference-contexts: We may therefore use the Cooley-Tukey algorithm to compute Fourier transforms on Z=(p 1)Z. GENERALIZED FFTS 29 The idea of writing the Fourier transform in terms of a convolution does not depend on N being prime. Rabiner et al. [77] (see also <ref> [13] </ref>) make the change of variables jk = (j 2 + k 2 (j k) 2 )=2 to obtain ^ f (k) = ! k 2 =2 j=0 f (j)! j 2 =2 ! (jk) 2 =2 This is a non-cyclic convolution of the sequence with the sequence , and may
Reference: [14] <author> A. Borodin and I. Munro, </author> <title> The computational complexity of algebraic and numeric problems, </title> <publisher> Elsevier, </publisher> <address> New York, </address> <year> 1975. </year>
Reference-contexts: By formulating an O (n log 2 n) algorithm of Borodin and Munro <ref> [14] </ref> as a factorization of the Van-dermonde matrix (the transpose of the matrix in (5.10)) an algorithm of equal complexity is obtained for the discrete monomial transform. The paper [73] also addresses stability issues.
Reference: [15] <author> O. Bratelli, </author> <title> Inductive limits of finite dimensional C fl -algebras, </title> <journal> Trans. Amer. Math. Soc. </journal> <volume> 171 (1972), </volume> <pages> 195-234. </pages>
Reference: [16] <author> P. Burgisser, M. Clausen, A. Shokrollahi, </author> <title> Algebraic Comlexity Theory, </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1996. </year> <editor> 54 DAVID K. MASLEN AND DANIEL N. </editor> <publisher> ROCKMORE </publisher>
Reference-contexts: Improve the general upper bound for finite groups. Can the general upper bound for the complexity of a finite group be improved? To date, it is known that all groups have complexity bounded jGj 1:44 . This is due to M. Clausen (see <ref> [16] </ref>). Perhaps the centralizer techniques of [70, 68, 69] will prove useful. 3. Use of group extensions. The goal here would be to relate, for G . N , the complexity of G, to the complexity of N and G=N for arbitrary G=N .
Reference: [17] <author> D. Calvetti, </author> <title> A stochastic roundoff error analysis for the fast Fourier transform, </title> <journal> Math. Com-put., </journal> <volume> 56(194) (1991), </volume> <pages> 755-774. </pages>
Reference-contexts: Stability. Error analyses of abelian FFTs abound, mainly due to the widespread use of these algorithms in so many important applications (see e.g. <ref> [17, 79] </ref>). The audience and usefulness of generalized FFTs is growing and analogous analyses for FFTs for arbitrary or specific classes of groups might be a worthwhile topic to pursue. 9. Fast algorithms for higher-dimensional recurrences.
Reference: [18] <author> C. Chui, </author> <title> An introduction to wavelets, </title> <publisher> Academic Press, </publisher> <address> NY, </address> <year> 1992. </year>
Reference-contexts: Our particular focus has caused us to omit other important generalizations of the FFT. Perhaps the most noticeable omission is a discussion of the wealth of exciting advances in the area of wavelets, for which either of the works <ref> [18, 27] </ref> would be a great place for the interested reader to begin. Acknowledgements. We would like to thank Larry Finkelstein and Bill Kantor for inviting us to participate in the DIMACS workshop on groups and computation. We would also like to thank Michael Clausen for several helpful suggestions.
Reference: [19] <author> M. Clausen and U. Baum, </author> <title> Fast Fourier transforms, </title> <booktitle> Wissenschaftsverlag, Mannheim, </booktitle> <year> 1993. </year> <title> [20] , Fast Fourier transforms for symmetric groups, theory and implementation, </title> <journal> Math. Comp. </journal> <volume> 61(204) (1993), </volume> <pages> 833-847. </pages>
Reference-contexts: This algorithm, 6 DAVID K. MASLEN AND DANIEL N. ROCKMORE together with many variants as well as different approaches to computing the DFT, yield a family of techniques which for any N give an O (N log N ) algorithm for computing the DFT (see, e.g., <ref> [19, 38, 90] </ref>). This speed-up has had tremendous significance, effectively making digital signal processing a reality. To see how this algorithm works, let us consider what happens when N = pq has factors. <p> In Section 3.5 we consider the effect of having a normal subgroup. In that case the separation of variables technique is supplemented by factoring the group representations with tensor products. This is a key idea behind the fast transforms for abelian group extensions [83], solvable groups <ref> [12, 19] </ref>, and supersolvable groups [7]. 3.1. Separation of variables at the matrix level. 3.1.1. The main idea. Let G be a finite group, f a complex-valued function on G, and let be a matrix representation of G. To construct an FFT algorithm on G, proceed as follows. <p> This sort of estimate and analysis motivates the use of the t G notation. The approach of using coset representatives together with a separation of variables type algorithm appears in <ref> [31, 23, 19] </ref>. To state a fairly general result of this type, we introduce an extension of the multiplicity notation. <p> This suggests an approach to the computation of Fourier transforms based on factorization in the space of representations rather than factorization of group elements. We have already seen such methods work in Yates' algorithm for the Walsh-Hadamard transform. The works of Beth on solvable groups [12], Clausen and Baum <ref> [19] </ref> on solvable and supersolvable [7] groups and Rockmore on abelian group extensions [83] are based on the idea of factoring both the group elements and the representations. In this respect, their algorithms differ from a pure separation of variables algorithm. <p> These transforms clearly take a total of ( P ):(jGj = jN j):t G=N (S) scalar operations. Applying Theorem 3.34 to a direct product of groups H fi K, immediately gives the usual result <ref> [19, 23, 12, 68] </ref> for the complexity of the Fourier transform on a group product. Using sets of matrix representations adapted to both H and K simultaneously, we have t HfiK t H + t K . 3.5.1. Abelian group extensions and solvable groups. <p> Applying Theorem 3.34 to this set of representations gives a method of computing Fourier transforms on G. Beth, in his work on solvable groups [12] (see also <ref> [19] </ref>), and Rockmore, in his work on abelian group extensions [83], use two additional ideas in conjunction with the method of Theorem 3.34: 1. The action of d G=N on equivalence classes of irreducible representations of G is not, in general, free. <p> Is is possible to use this formula more completely, possibly achieving an O (N log N ) algorithm? 6. Monomial representations. Can Baum's method for supersolvable groups work for other solvable groups? This is already known for extensions of abelian groups with supersolvable factor group <ref> [19] </ref>. A good place to start would be to look at other M -groups which are not supersolvable. 7. Generating irreducible matrix coefficients. Any implementation of an FFT would require the ability to actually generate a collection of irreducible matrix coefficients, possibly with some extra structure (e.g., adaptedness).
Reference: [21] <author> M. Clausen, </author> <title> Fast Fourier transforms for metabelian groups, </title> <journal> SIAM J. Comput. </journal> <month> 18 </month> <year> (1989), </year> <month> 584-593. </month> <title> [22] , Fast generalized Fourier transforms, </title> <type> Theoret. </type> <institution> Comput. Sci. </institution> <month> 67 </month> <year> (1989), </year> <type> 55-63. [23] , Beitrage zum Entwurf schneller Spektraltransformationen, </type> <institution> Habilitationsschrift, Fakultat fur Informatik der Universitat Karlsruhe (TH), </institution> <year> 1988. </year>
Reference: [24] <author> J. W. Cooley, </author> <title> The re-discovery of the fast Fourier transform algorithm, </title> <booktitle> Mikrochimica Acta III (1987), </booktitle> <month> 33-45. </month> <title> [25] , How the FFT gained acceptance, </title> <booktitle> Proceedings of the ACM conference on the history of scientific and numeric computation, </booktitle> <address> Princeton, NJ May 13-15, </address> <year> 1987, </year> <pages> 133-140. </pages>
Reference-contexts: For historical discussions of the development see <ref> [24, 25, 51] </ref>. There are various contexts in which this algorithm and its many variants may be formulated. Our point of view is a representation theoretic one. <p> In general, long time series would be obtained and fast algorithms were mandatory for a useful analysis (cf., <ref> [24, 25] </ref>). We proceed by presenting a fairly standard treatment of the algorithm and then giving it a group theoretic reinterpretation. 2.2.1. The Cooley-Tukey algorithm.
Reference: [26] <author> J. W. Cooley and J. W. Tukey, </author> <title> An algorithm for machine calculation of complex Fourier series, </title> <journal> Math. Comp. </journal> <volume> 19 (1965), </volume> <pages> 297-301. </pages>
Reference-contexts: The best known of these algorithms is the Cooley-Tukey FFT. Originally discovered by Gauss, as an efficient means of interpolating asteroid orbits [41] and later rediscovered by Cooley and Tukey for the efficient analysis of time series <ref> [26] </ref> this algorithm permits the fast and reliable computation of the Discrete Fourier Transform (DFT), which gives the decomposition of a periodic function into a linear combination of sines and cosines. For historical discussions of the development see [24, 25, 51]. <p> Our first example is an algorithm due to the statistician Yates [93]. This was developed for the efficient analysis of data from 2 k -factorial designs|a particular aspect of the statistical analysis for experimental designs. Our second example is the Cooley-Tukey FFT <ref> [26] </ref>, probably the most famous of these abelian techniques. Here too the motivation came from the need for efficient data analysis, in this case data from time series. Both algorithms may be formulated as solutions to computational problems which have naturally suggested group theoretic formulations. 2.1. <p> As N becomes large this cost quickly becomes prohibitive. Cooley and Tukey derived and implemented an algorithm which given a prime factorization of N = p 1 p r , computed the DFT in N P operations <ref> [26] </ref>. If each p i = 2, this is 2N log 2 N operations. This algorithm, 6 DAVID K. MASLEN AND DANIEL N.
Reference: [27] <author> I. Daubechies, </author> <title> Ten lectures on wavelets, </title> <publisher> SIAM, </publisher> <address> Philadephia, PA, </address> <year> 1992. </year>
Reference-contexts: Our particular focus has caused us to omit other important generalizations of the FFT. Perhaps the most noticeable omission is a discussion of the wealth of exciting advances in the area of wavelets, for which either of the works <ref> [18, 27] </ref> would be a great place for the interested reader to begin. Acknowledgements. We would like to thank Larry Finkelstein and Bill Kantor for inviting us to participate in the DIMACS workshop on groups and computation. We would also like to thank Michael Clausen for several helpful suggestions.
Reference: [28] <author> P. Diaconis, </author> <title> A generalization of spectral analysis with applications to ranked data, </title> <journal> Ann. Stat. </journal> <volume> 17 (1989), </volume> <pages> 949-979. </pages> <booktitle> [29] , Group representations in probability and statistics, </booktitle> <address> IMS, Hayward, CA, </address> <year> 1988. </year> <title> [30] , Average running time of the fast Fourier transform, </title> <editor> J. </editor> <booktitle> Algorithms 1 (1980), </booktitle> <pages> 187-208. </pages>
Reference-contexts: Applications. Generalized FFTs are slowly finding areas of application. The paper [80] attempts to survey some of these. Just to indicate a few directions of work, FFTs for finite groups have found uses in data analysis (see e.g., <ref> [28, 29] </ref>), finite element methods [39] and filter design [57, 53, 54]. The FFT on the two-sphere has potential applications in global circulation modeling [48], control theory [46, 47] and computer vision [56].
Reference: [31] <author> P. Diaconis and D. Rockmore, </author> <title> Efficient computation of the Fourier transform on finite groups, </title> <journal> J. Amer. Math Soc. </journal> <month> 3(2) </month> <year> (1990), </year> <month> 297-332. </month> <title> [32] , Efficient computation of isotypic projections for the symmetric group, </title> <journal> DIMACS Ser. Discrete Math. Theoret. Comput. Sci. </journal> <volume> 11, </volume> <editor> L. Finkelstein and W. Kantor (eds.), </editor> <year> 1993, </year> <pages> 87-104. </pages>
Reference-contexts: Others also did much to lay the groundwork in this relatively new interdisciplinary area looking to extend the uses of the FFT in signal processing [57, 11, 22] and data analysis <ref> [31] </ref>. In this paper we will survey some of the recent results about such generalizations. We focus primarily upon recent work using factorization of group elements, in the finite group case, and the analogous approach for compact groups [68, 69, 64]. <p> This more general framework seems to have been first considered by Willsky [92] for uses in signal processing. Later motivations came from filter design [57] and data analysis <ref> [31] </ref>. Definition 3.1 (Fourier Transform). Let G be a finite group and f be a complex-valued function on G. (1) Let be a matrix representation of G of dimension d , i.e., is a group homomorphism from G into the group of d fid invertible complex matrices. <p> The separation of variables approach. The separation of variables approach is a method of constructing fast Fourier transform algorithms on arbitrary finite groups, which generalizes the Cooley-Tukey method for cyclic groups. Aspects of this approach to computing Fourier transforms have previously appeared <ref> [12, 22, 31] </ref>, but it has only recently been given a general formulation [68, 69, 70]. (See also [23] for results in this direction.) The basic idea is to re-index the calculation so as to replace the single sum (3.1) defining a Fourier transform by a multiple sum over many different <p> This sort of estimate and analysis motivates the use of the t G notation. The approach of using coset representatives together with a separation of variables type algorithm appears in <ref> [31, 23, 19] </ref>. To state a fairly general result of this type, we introduce an extension of the multiplicity notation.
Reference: [33] <author> J. R. Driscoll and D. Healy, </author> <title> Computing Fourier transforms and convolutions on the 2-sphere, </title> <note> (extended abstract) Proc. 34 th IEEE FOCS, (1989) 344-349; Adv. in Appl. Math., </note> <month> 15 </month> <year> (1994), </year> <pages> 202-250. </pages>
Reference-contexts: It is the latter formulation which is of interest for this section. Stated in this way, it is natural to ask if such an algorithm might generalize to nonabelian continuous compact groups. The first real breakthrough in this direction occurred in 1989 and was due to Driscoll and Healy <ref> [33] </ref>. Motivated by potential applications in a variety of areas, including computer vision and meteorology, they described an efficient exact algorithm for computing the Fourier transform of a bandlimited function defined on the two-sphere. <p> The key algorithmic advance in Driscoll and Healy's work is a fast algorithm for computing associated Legendre transforms, for which they give an O (b log 2 b) algorithm, versus the b 2 algorithm that a direct computation takes. The a priori error analysis in <ref> [33] </ref> as well as subsequent numerical experiments and algorithmic improvements [49] strongly suggest the possibility of effective and reliable implementation of this algorithm. <p> we must use the fact that for fixed m 1 ; m 2 , the functions P l m 1 ;m 2 (cos ) satisfy a three-term recurrence relation on the index l, thereby putting us in a situation in which the fast polynomial transform techniques of Driscoll and Healy <ref> [33] </ref> and their subsequent generalization [34] apply. These algorithms show that for fixed m 1 ; m 2 , we may compute the sums (4.10) for all 0 l 2b in O (b (log b) 2 ) scalar operations. <p> In this case a pure separation of variables approach to computing the transform of a band-limited function takes O (b n+1 ) operations, whereas an approach that uses fast Gegenbauer transforms takes O (b n (log b) 2 ) operations. Here we summarize some of the recent work <ref> [33, 34, 73] </ref> on fast discrete polynomial transforms, especially as related to these new fast algorithms for discrete orthogonal polynomial transforms. The general framework is as follows. Let fP 0 ; : : :; P N1 g denote a set of linearly independent polynomials with complex coefficients. <p> In this case, the set of polynomials is orthogonal with respect to a measure on the unit interval, and as is discussed in the next section, O (n log 2 n) algorithms exist <ref> [33, 34] </ref>. Example 5.5 (Discrete spherical transforms). The spherical functions of distance transitive graphs may be written in terms of orthogonal polynomials (see [85, 35]). The paper [34] develops an algorithm for computing the spherical transform on these spaces. 5.1. Fast discrete orthogonal polynomial transforms. <p> Related techniques have already found a number of applications attacking computational bottlenecks in problems in areas such as medical imaging, geophysics and matched filter design [34, 72, 49, 48]. This general approach grew out of the fast Legendre transform algorithms in <ref> [33] </ref> (esp. Section 5). 48 DAVID K. MASLEN AND DANIEL N. ROCKMORE The main result of [34] is the following theorem. Theorem 5.6. <p> Adding up all the operations gives the result. stage 2 stage 1 stage 0 K stage 3 l for N = 16. to give the briefest summary of this algorithm. The interested reader is strongly advised to refer to <ref> [33, 34, 49] </ref>, for a more detailed discussion of the algorithm, and particularly to [72, 73] for a discussion of stability issues. [67] contains an axiomatic derivation. <p> The audience and usefulness of generalized FFTs is growing and analogous analyses for FFTs for arbitrary or specific classes of groups might be a worthwhile topic to pursue. 9. Fast algorithms for higher-dimensional recurrences. The key to the fast discrete polynomial transforms is the use of the three-term recurrence <ref> [33, 34] </ref>. Can methods like these work for higher-dimensional recurrences? (E.g., the two-dimensional recurrences for spherical functions on rank 2 homogeneous spaces). <p> Can methods like these work for higher-dimensional recurrences? (E.g., the two-dimensional recurrences for spherical functions on rank 2 homogeneous spaces). In the same spirit, it should be noted that the O (n log 2 n) FFT for the two-sphere <ref> [33] </ref> uses only the recurrence in the order parameter for the associated Legendre functions. Perhaps in combination with other recurrences that involve the degree parameter, this complexity could be reduced to O (n log n). 10. Minimal sampling.
Reference: [34] <author> J. R. Driscoll, D. Healy, and D. Rockmore. </author> <title> Fast discrete polynomial transforms with applications to data analysis for distance transitive graphs, </title> <note> SIAM J. Comput. (to appear). </note>
Reference-contexts: that for fixed m 1 ; m 2 , the functions P l m 1 ;m 2 (cos ) satisfy a three-term recurrence relation on the index l, thereby putting us in a situation in which the fast polynomial transform techniques of Driscoll and Healy [33] and their subsequent generalization <ref> [34] </ref> apply. These algorithms show that for fixed m 1 ; m 2 , we may compute the sums (4.10) for all 0 l 2b in O (b (log b) 2 ) scalar operations. <p> In this case a pure separation of variables approach to computing the transform of a band-limited function takes O (b n+1 ) operations, whereas an approach that uses fast Gegenbauer transforms takes O (b n (log b) 2 ) operations. Here we summarize some of the recent work <ref> [33, 34, 73] </ref> on fast discrete polynomial transforms, especially as related to these new fast algorithms for discrete orthogonal polynomial transforms. The general framework is as follows. Let fP 0 ; : : :; P N1 g denote a set of linearly independent polynomials with complex coefficients. <p> In this case, the set of polynomials is orthogonal with respect to a measure on the unit interval, and as is discussed in the next section, O (n log 2 n) algorithms exist <ref> [33, 34] </ref>. Example 5.5 (Discrete spherical transforms). The spherical functions of distance transitive graphs may be written in terms of orthogonal polynomials (see [85, 35]). The paper [34] develops an algorithm for computing the spherical transform on these spaces. 5.1. Fast discrete orthogonal polynomial transforms. <p> Example 5.5 (Discrete spherical transforms). The spherical functions of distance transitive graphs may be written in terms of orthogonal polynomials (see [85, 35]). The paper <ref> [34] </ref> develops an algorithm for computing the spherical transform on these spaces. 5.1. Fast discrete orthogonal polynomial transforms. In [34] an algorithm is given which computes general discrete orthogonal polynomial transforms in O (N (log N ) 2 ) operations. <p> Example 5.5 (Discrete spherical transforms). The spherical functions of distance transitive graphs may be written in terms of orthogonal polynomials (see [85, 35]). The paper <ref> [34] </ref> develops an algorithm for computing the spherical transform on these spaces. 5.1. Fast discrete orthogonal polynomial transforms. In [34] an algorithm is given which computes general discrete orthogonal polynomial transforms in O (N (log N ) 2 ) operations. By this we mean a discrete polynomial transform in which the P k are a set of orthogonal polynomials with deg P k = k. <p> Related techniques have already found a number of applications attacking computational bottlenecks in problems in areas such as medical imaging, geophysics and matched filter design <ref> [34, 72, 49, 48] </ref>. This general approach grew out of the fast Legendre transform algorithms in [33] (esp. Section 5). 48 DAVID K. MASLEN AND DANIEL N. ROCKMORE The main result of [34] is the following theorem. Theorem 5.6. <p> This general approach grew out of the fast Legendre transform algorithms in [33] (esp. Section 5). 48 DAVID K. MASLEN AND DANIEL N. ROCKMORE The main result of <ref> [34] </ref> is the following theorem. Theorem 5.6. <p> Adding up all the operations gives the result. stage 2 stage 1 stage 0 K stage 3 l for N = 16. to give the briefest summary of this algorithm. The interested reader is strongly advised to refer to <ref> [33, 34, 49] </ref>, for a more detailed discussion of the algorithm, and particularly to [72, 73] for a discussion of stability issues. [67] contains an axiomatic derivation. <p> computation of the matrix-vector product 0 B B @ z 0 z 1 z n1 0 z 2 n1 . . . . . . 0 z n1 n1 C C C B B B f (0) f (2) f (n 1) C C C :(5.10) The fast algorithms of <ref> [34, 73] </ref> are derived by consideration of the transposed computation, which is simply the evaluation of the polynomial f (0) + f (1)x + f (2)x 2 + + f (n 1)x n1 at the points fz 0 ; : : :; z n1 g. <p> The audience and usefulness of generalized FFTs is growing and analogous analyses for FFTs for arbitrary or specific classes of groups might be a worthwhile topic to pursue. 9. Fast algorithms for higher-dimensional recurrences. The key to the fast discrete polynomial transforms is the use of the three-term recurrence <ref> [33, 34] </ref>. Can methods like these work for higher-dimensional recurrences? (E.g., the two-dimensional recurrences for spherical functions on rank 2 homogeneous spaces).
Reference: [35] <author> C. Dunkl, </author> <title> A Krawtchouk polynomial addition theorem and wreath products of symmetric groups, </title> <institution> Indiana Univ. Math. J. </institution> <month> 25 </month> <year> (1976), </year> <pages> 335-358. </pages>
Reference-contexts: Example 5.5 (Discrete spherical transforms). The spherical functions of distance transitive graphs may be written in terms of orthogonal polynomials (see <ref> [85, 35] </ref>). The paper [34] develops an algorithm for computing the spherical transform on these spaces. 5.1. Fast discrete orthogonal polynomial transforms. In [34] an algorithm is given which computes general discrete orthogonal polynomial transforms in O (N (log N ) 2 ) operations.
Reference: [36] <author> A. Dutt and V. Rokhlin, </author> <title> Fast Fourier transforms for nonequispaced data, </title> <journal> SIAM J. Sci. Statist. Comput., </journal> <month> (to appear). </month> <title> [37] , Fast Fourier transforms for nonequispaced data, II Appl. </title> <booktitle> and Comp. Harmonic Analysis 2 (1995), </booktitle> <pages> 85-100. </pages>
Reference-contexts: The paper [73] also addresses stability issues. In the case of nonuniform DFTs, approximate algorithms using fast multipole expansions have also been explored <ref> [36, 37] </ref>. 6. Open questions and further research directions We hope that the preceding discussions have supported the claim that "Generalized FFTs" is an exciting interdiscplinary research area. Many open questions and potential research directions still remain.
Reference: [38] <author> D. F. Elliott and K. R. Rao, </author> <title> Fast transforms: algorithms, analyses, and applications, </title> <publisher> Academic, </publisher> <address> New York, </address> <year> 1982. </year>
Reference-contexts: To date, abelian groups have provided the most useful class of FFTs, justifying the wealth of algorithms devoted to this special case. It would be well beyond the scope of this paper to discuss all of these approaches and we refer the interested reader to the books <ref> [38, 90] </ref> and their many references for this material. Instead, to focus our attention, in this section we discuss just two of these earlier algorithms, both of which illustrate many features of a more general theory. Our first example is an algorithm due to the statistician Yates [93]. <p> This algorithm, 6 DAVID K. MASLEN AND DANIEL N. ROCKMORE together with many variants as well as different approaches to computing the DFT, yield a family of techniques which for any N give an O (N log N ) algorithm for computing the DFT (see, e.g., <ref> [19, 38, 90] </ref>). This speed-up has had tremendous significance, effectively making digital signal processing a reality. To see how this algorithm works, let us consider what happens when N = pq has factors.
Reference: [39] <author> A. Fassler and E. </author> <title> Stiefel, Group theoretical methods and their applications. </title> <publisher> Birkhauser, </publisher> <address> Boston, MA, </address> <year> 1992. </year>
Reference-contexts: Applications. Generalized FFTs are slowly finding areas of application. The paper [80] attempts to survey some of these. Just to indicate a few directions of work, FFTs for finite groups have found uses in data analysis (see e.g., [28, 29]), finite element methods <ref> [39] </ref> and filter design [57, 53, 54]. The FFT on the two-sphere has potential applications in global circulation modeling [48], control theory [46, 47] and computer vision [56]. Both investigating these current applications more thoroughly, as well as finding new uses, seem to be worthwhile research directions. 14. Parallelizability.
Reference: [40] <author> G. Gaudrey and R. Pini, </author> <title> Bernstein's theorem for compact, connected Lie groups, </title> <journal> Math. Proc. Cambridge Phil. Soc. </journal> <volume> 99 (1986), </volume> <pages> 297-305. </pages>
Reference-contexts: The result may also be formulated for sampling using distributions rather than measures, and a version of this result also holds for sections of vector bundles ([66] Theorem 3.7). The work of Gaudry and Pini <ref> [40, 76] </ref> may be used to relate kf P a f k A m to norms based on the differentiability properties of functions. 4.4. The classical compact Lie groups. We now consider four series of connected compact Lie groups.
Reference: [41] <author> C. F. </author> <title> Gauss, </title> <journal> Theoria interpolationis methodo nova tractata, Gauss' Collected Works Vol. </journal> <volume> 3, 1886, </volume> <pages> 265-303. </pages>
Reference-contexts: It is the cornerstone of many digital signal processing algorithms and as such impacts our lives daily. The best known of these algorithms is the Cooley-Tukey FFT. Originally discovered by Gauss, as an efficient means of interpolating asteroid orbits <ref> [41] </ref> and later rediscovered by Cooley and Tukey for the efficient analysis of time series [26] this algorithm permits the fast and reliable computation of the Discrete Fourier Transform (DFT), which gives the decomposition of a periodic function into a linear combination of sines and cosines.
Reference: [42] <author> I. M. Gel'fand and M. Graev, </author> <title> Finite dimensional irreducible representations of unitary and full linear groups and related special functions, </title> <journal> Izv. Akad. Nauk SSSR, Ser. Math. </journal> <volume> 29 (1965), </volume> <pages> 1329-1356 (Russian). </pages>
Reference-contexts: Indeed, Gel'fand-Tsetlin bases, and adapted representations were originally invented for the calculation of matrix coefficients, using these methods [43]. Since then there has been a tremendous amount of work done, much of it centered around N. J. Vilenkin and A. U. Klimyk, finding explicit expressions for the matrix coefficients <ref> [42, 43, 58, 60, 61, 91] </ref>. Thus most of the ideas needed to develop fast transforms on compact Lie groups and their homogeneous spaces have existed for a long time. The main new idea, as for the sphere, has been the introduction of fast polynomial transforms.
Reference: [43] <author> I. M. Gel'fand and M. Tsetlin, </author> <title> Finite dimensional representations of the group of unimodular matrices, </title> <journal> Dokl. Akad. Nauk SSSR 71 (1950), </journal> <pages> 825-828 (Russian). </pages>
Reference-contexts: Indeed, Gel'fand-Tsetlin bases, and adapted representations were originally invented for the calculation of matrix coefficients, using these methods <ref> [43] </ref>. Since then there has been a tremendous amount of work done, much of it centered around N. J. Vilenkin and A. U. Klimyk, finding explicit expressions for the matrix coefficients [42, 43, 58, 60, 61, 91]. <p> Indeed, Gel'fand-Tsetlin bases, and adapted representations were originally invented for the calculation of matrix coefficients, using these methods [43]. Since then there has been a tremendous amount of work done, much of it centered around N. J. Vilenkin and A. U. Klimyk, finding explicit expressions for the matrix coefficients <ref> [42, 43, 58, 60, 61, 91] </ref>. Thus most of the ideas needed to develop fast transforms on compact Lie groups and their homogeneous spaces have existed for a long time. The main new idea, as for the sphere, has been the introduction of fast polynomial transforms.
Reference: [44] <author> F. Goodman, P. de la Harpe, and V. F. R. Jones, </author> <title> Coxeter graphs and towers of algebras, </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1989. </year>
Reference-contexts: In this way the group algebra C [K n ] is realized as a multimatrix algebra (see eg. <ref> [44] </ref>). The beauty of the Bratteli diagram formalism lies in the convenient characterization it gives for all types of structured matrices which can arise through the use of Gel'fand-Tsetlin bases. To begin, consider a 2 K i K n .
Reference: [45] <author> T. Hagedorn. </author> <title> Multiplicities in restricted representations. </title> <type> Ph.D. Thesis, </type> <institution> Department of Mathematics, Harvard University, </institution> <year> 1994. </year>
Reference-contexts: Theorem 3.12 merely serves to organize the operation count. A similar procedure goes through for the finite groups of Lie type, using the recent work of Hagedorn <ref> [45] </ref> for bounding the multiplicities. Remark 3.14. Linton, Michler and Olsson [63] an algorithm is given to compute the Fourier transform on GL n (q) using certain monomial model representations. Theorem 3.13 improves on this result. 3.1.5. Homogeneous spaces.
Reference: [46] <author> D. Healy and P. Kim, </author> <title> An empirical Bayes approach to directional data and efficient computation on the sphere, </title> <journal> Ann. Stat., </journal> <note> (to appear). GENERALIZED FFTS 55 </note>
Reference-contexts: Just to indicate a few directions of work, FFTs for finite groups have found uses in data analysis (see e.g., [28, 29]), finite element methods [39] and filter design [57, 53, 54]. The FFT on the two-sphere has potential applications in global circulation modeling [48], control theory <ref> [46, 47] </ref> and computer vision [56]. Both investigating these current applications more thoroughly, as well as finding new uses, seem to be worthwhile research directions. 14. Parallelizability.
Reference: [47] <author> D. Healy and P. Kim, </author> <title> Spherical deconvolution with application to geometric quality assurance, </title> <type> Technical Report, </type> <institution> Department of Mathematics and Computer Science, Dartmouth College, </institution> <year> 1993. </year>
Reference-contexts: Just to indicate a few directions of work, FFTs for finite groups have found uses in data analysis (see e.g., [28, 29]), finite element methods [39] and filter design [57, 53, 54]. The FFT on the two-sphere has potential applications in global circulation modeling [48], control theory <ref> [46, 47] </ref> and computer vision [56]. Both investigating these current applications more thoroughly, as well as finding new uses, seem to be worthwhile research directions. 14. Parallelizability.
Reference: [48] <author> D. Healy, D. Maslen, S. Moore, D. Rockmore, and M. Taylor, </author> <title> Applications of a fast convolution algorithm on the 2-sphere, </title> <note> (in preparation). </note>
Reference-contexts: This observation quickly reduces the problem of finding a fast tensor harmonic transform to the well known scalar case treated by Driscoll and Healy. For a more detailed treatment of the tensor transform, see <ref> [65, 48] </ref>. 5. Fast discrete polynomial transforms The techniques we have described in Sections 3 and 4 reduce the computation of Fourier transforms on groups to sums involving matrix coefficients, taken over fixed subsets of the group. <p> Related techniques have already found a number of applications attacking computational bottlenecks in problems in areas such as medical imaging, geophysics and matched filter design <ref> [34, 72, 49, 48] </ref>. This general approach grew out of the fast Legendre transform algorithms in [33] (esp. Section 5). 48 DAVID K. MASLEN AND DANIEL N. ROCKMORE The main result of [34] is the following theorem. Theorem 5.6. <p> Just to indicate a few directions of work, FFTs for finite groups have found uses in data analysis (see e.g., [28, 29]), finite element methods [39] and filter design [57, 53, 54]. The FFT on the two-sphere has potential applications in global circulation modeling <ref> [48] </ref>, control theory [46, 47] and computer vision [56]. Both investigating these current applications more thoroughly, as well as finding new uses, seem to be worthwhile research directions. 14. Parallelizability.
Reference: [49] <author> D. Healy, S. Moore, and D. Rockmore, </author> <title> Efficiency and reliability issues in a fast Fourier transform on the 2-sphere, </title> <type> Technical Report, </type> <institution> Department of Mathematics and Computer Science, Dartmouth College, </institution> <year> 1994. </year> <title> [50] , Parallelizability of an FFT on the 2-sphere, </title> <type> Technical Report, </type> <institution> Department of Mathematics and Computer Science, Dartmouth College, </institution> <year> 1994. </year>
Reference-contexts: The a priori error analysis in [33] as well as subsequent numerical experiments and algorithmic improvements <ref> [49] </ref> strongly suggest the possibility of effective and reliable implementation of this algorithm. The advent of such an algorithm has made possible the use of spectral methods for solving PDEs in spherical geometry, a technique which was often avoided due to the expense of direct computation of Legendre transforms ([84]). <p> Related techniques have already found a number of applications attacking computational bottlenecks in problems in areas such as medical imaging, geophysics and matched filter design <ref> [34, 72, 49, 48] </ref>. This general approach grew out of the fast Legendre transform algorithms in [33] (esp. Section 5). 48 DAVID K. MASLEN AND DANIEL N. ROCKMORE The main result of [34] is the following theorem. Theorem 5.6. <p> Adding up all the operations gives the result. stage 2 stage 1 stage 0 K stage 3 l for N = 16. to give the briefest summary of this algorithm. The interested reader is strongly advised to refer to <ref> [33, 34, 49] </ref>, for a more detailed discussion of the algorithm, and particularly to [72, 73] for a discussion of stability issues. [67] contains an axiomatic derivation.
Reference: [51] <author> M. T. Heideman, D. H. Johnson, and C. S. Burrus, </author> <title> Gauss and the history of the fast Fourier transform, Archive for History of Exact Sciences 34(3) (1985), </title> <type> 265-277. </type>
Reference-contexts: For historical discussions of the development see <ref> [24, 25, 51] </ref>. There are various contexts in which this algorithm and its many variants may be formulated. Our point of view is a representation theoretic one.
Reference: [52] <author> E. Hewitt and K. Ross, </author> <title> Abstract harmonic analysis, vol. II, Die Grundlehren der mathema-tischen Wissenschaften 152, </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1963. </year>
Reference-contexts: Let us call the projection operator corresponding to this process P b . Let k k A 0 denote the norm of absolute summability on the space of absolutely summable functions on G (see <ref> [52] </ref> Section 34.4). Then kP b (f f G )k A 0 measures how close the Fourier tranform of f is to that of , for those representations in R b . <p> properly, we define the norm, k k A m , which is finite on a subspace of the continuous functions, by kf k A m = fi fi fi + 2Rnf1g where k k ;1 is the von Neumann norm on the space of d fi d matrices. (The book <ref> [52] </ref> develops the general properties of these types of norms.) GENERALIZED FFTS 41 Theorem 4.12 ([66] Theorem 2.11).
Reference: [53] <author> R. Holmes, </author> <title> Signal processing on finite groups, </title> <type> Technical Report 873, </type> <institution> MIT, Lincoln Laboratory, </institution> <year> 1990. </year> <title> [54] , Mathematical foundations of signal processing, II, </title> <type> Technical Report 781, </type> <institution> MIT, Lin-coln Laboratory, </institution> <year> 1987. </year>
Reference-contexts: Applications. Generalized FFTs are slowly finding areas of application. The paper [80] attempts to survey some of these. Just to indicate a few directions of work, FFTs for finite groups have found uses in data analysis (see e.g., [28, 29]), finite element methods [39] and filter design <ref> [57, 53, 54] </ref>. The FFT on the two-sphere has potential applications in global circulation modeling [48], control theory [46, 47] and computer vision [56]. Both investigating these current applications more thoroughly, as well as finding new uses, seem to be worthwhile research directions. 14. Parallelizability.
Reference: [55] <author> G. D. James, </author> <title> The representation theory of the symmetric groups, </title> <booktitle> Lecture Notes in Math., </booktitle> <volume> vol. 682, </volume> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1978. </year>
Reference-contexts: Computing one block at a time, the multiplications that occur satisfy the conditions of corollary 3.10 with G = S k , a = t i for some i, K = S i and H = S i2 . The branching theorem (see e.g. <ref> [55] </ref>) shows that M (S i ; S i2 ) = 2. So the matrix multiplication by (t i ) on the left that occurs at this stage takes only 2 jS k j scalar operations. The matrix additions that occur do not add to the overall operation count.
Reference: [56] <author> K. Kanatani, </author> <title> Group-theoretical methods in image understanding, </title> <publisher> Springer-Verlag, </publisher> <address> NY (1990). </address>
Reference-contexts: The FFT on the two-sphere has potential applications in global circulation modeling [48], control theory [46, 47] and computer vision <ref> [56] </ref>. Both investigating these current applications more thoroughly, as well as finding new uses, seem to be worthwhile research directions. 14. Parallelizability. The divide and conquer nature of several of the techniques explained here (eg. separation of variables, discrete orthogonal polynomial transforms) strongly suggest the possibility of effective parallel implementation.
Reference: [57] <author> M. Karpovsky and E. Trachtenberg, </author> <title> Filtering in a communication channel by Fourier transforms over finite groups, in Spectral Techniques and Fault Detection, </title> <editor> M. Karpovsky (ed.), </editor> <publisher> Academic Press, </publisher> <address> NY (1985), </address> <pages> 179-212. </pages>
Reference-contexts: The first such results in this direction appear to be due to Willsky [92] who was looking for new algorithms for filter design. Others also did much to lay the groundwork in this relatively new interdisciplinary area looking to extend the uses of the FFT in signal processing <ref> [57, 11, 22] </ref> and data analysis [31]. In this paper we will survey some of the recent results about such generalizations. We focus primarily upon recent work using factorization of group elements, in the finite group case, and the analogous approach for compact groups [68, 69, 64]. <p> This more general framework seems to have been first considered by Willsky [92] for uses in signal processing. Later motivations came from filter design <ref> [57] </ref> and data analysis [31]. Definition 3.1 (Fourier Transform). <p> Applications. Generalized FFTs are slowly finding areas of application. The paper [80] attempts to survey some of these. Just to indicate a few directions of work, FFTs for finite groups have found uses in data analysis (see e.g., [28, 29]), finite element methods [39] and filter design <ref> [57, 53, 54] </ref>. The FFT on the two-sphere has potential applications in global circulation modeling [48], control theory [46, 47] and computer vision [56]. Both investigating these current applications more thoroughly, as well as finding new uses, seem to be worthwhile research directions. 14. Parallelizability.
Reference: [58] <author> A. Klimyk, </author> <title> Matrix elements and Clebsch-Gordan coefficients of group representations, </title> <booktitle> Naukova Dumka, Kiev, 1979 (Russian). </booktitle>
Reference-contexts: Indeed, Gel'fand-Tsetlin bases, and adapted representations were originally invented for the calculation of matrix coefficients, using these methods [43]. Since then there has been a tremendous amount of work done, much of it centered around N. J. Vilenkin and A. U. Klimyk, finding explicit expressions for the matrix coefficients <ref> [42, 43, 58, 60, 61, 91] </ref>. Thus most of the ideas needed to develop fast transforms on compact Lie groups and their homogeneous spaces have existed for a long time. The main new idea, as for the sphere, has been the introduction of fast polynomial transforms.
Reference: [59] <author> A. Klimyk and N. Vilenkin, </author> <title> Relations between spherical functions of compact groups, </title> <journal> J. Math. Phys., </journal> <volume> 30 (6), </volume> <month> June </month> <year> (1989), </year> <pages> pp. 1219-1225. </pages>
Reference: [60] <author> A. Klimyk and N. Vilenkin, </author> <title> Representations of Lie groups and special functions. I, II, and III, </title> <journal> Mathematics and Its Applications (Soviet Series), vols. </journal> <volume> 72, 74 and 75, </volume> <publisher> Kluwer, </publisher> <address> Boston, </address> <year> 1991 </year> <month> and </month> <year> 1993. </year>
Reference-contexts: Indeed, Gel'fand-Tsetlin bases, and adapted representations were originally invented for the calculation of matrix coefficients, using these methods [43]. Since then there has been a tremendous amount of work done, much of it centered around N. J. Vilenkin and A. U. Klimyk, finding explicit expressions for the matrix coefficients <ref> [42, 43, 58, 60, 61, 91] </ref>. Thus most of the ideas needed to develop fast transforms on compact Lie groups and their homogeneous spaces have existed for a long time. The main new idea, as for the sphere, has been the introduction of fast polynomial transforms. <p> For a proof of this formula, see [91] or <ref> [60] </ref>. Definition 4.2 (Fourier transform on SO (3)). Assume f is a continuous complex-valued function on SO (3). <p> Then for l b 1 2b X w b (k)P l fi j 2 =0 2 j 1 =0 1 f (' 2 ; k ; ' 1 ) : Proof. The rule for tensoring two representation of SO (3) is the famous Clebsch Gordan formula (see e.g. <ref> [60] </ref>) V l 1 V l 2 l 1 +l 2 M V l : From this it follows that the product of two matrix coefficients T l 1 m 1 ;m 2 :T l 2 be written as a linear combination of matrix coefficients of representations V l with jl <p> (n) = t 1 (' n 1 )t 1 (' n 2 ) : : : : 1;n1 )u n1 ( n 2;n1 )r n ( n 1;n )u n ( n 2;n ) : fi 1;1 ):u 1 ( 1 2;1 ) For a proof of Lemma 4.13 see <ref> [60] </ref> or [65]. The sets over which the parameters k j ; k a;j should range can easily be determined from the interpretation of the factors in these expressions as double coset representatives. <p> Representations of the special orthogonal, unitary, special unitary or symplectic groups may be indexed by r-tuples of integers satisfying certain inequalities depending on the group, where r is the rank (see e.g. <ref> [60] </ref>). <p> MASLEN AND DANIEL N. ROCKMORE The matrix elements of SO (n) in a Gel'fand-Tsetlin basis were first determined in [61]. A general method of finding expressions for matrix elements is presented, and explicit expressions for the unitary groups may be found in <ref> [60] </ref>. 4.4.3. Relationship to the finite case. The fast Fourier transform on SO (n) has an interesting relation to some finite Fourier transforms.
Reference: [61] <author> E. Lambina, </author> <title> Matrix elements of irreducible representations of the group K n of orthogonal matrices, </title> <journal> Dokl. Akad. Nauk Byelorussian SSR 9 (1965), </journal> <pages> 77-81 (Russian). </pages>
Reference-contexts: Indeed, Gel'fand-Tsetlin bases, and adapted representations were originally invented for the calculation of matrix coefficients, using these methods [43]. Since then there has been a tremendous amount of work done, much of it centered around N. J. Vilenkin and A. U. Klimyk, finding explicit expressions for the matrix coefficients <ref> [42, 43, 58, 60, 61, 91] </ref>. Thus most of the ideas needed to develop fast transforms on compact Lie groups and their homogeneous spaces have existed for a long time. The main new idea, as for the sphere, has been the introduction of fast polynomial transforms. <p> For a proof, see [64]. 44 DAVID K. MASLEN AND DANIEL N. ROCKMORE The matrix elements of SO (n) in a Gel'fand-Tsetlin basis were first determined in <ref> [61] </ref>. A general method of finding expressions for matrix elements is presented, and explicit expressions for the unitary groups may be found in [60]. 4.4.3. Relationship to the finite case. The fast Fourier transform on SO (n) has an interesting relation to some finite Fourier transforms.
Reference: [62] <author> J. Lafferty and D. Rockmore, </author> <title> Fast Fourier analysis for SL 2 over a finite field and related numerical experiments, </title> <journal> J. Exp. Math. </journal> <month> 1 </month> <year> (1992) </year> <month> 115-139. </month>
Reference-contexts: Corollary 3.30. The Fourier transform of a complex function on SL 2 (q) may be computed at a complete set of irreducible representations adapted to the chain SL 2 &gt; N , in (4q 2) jSL 2 j scalar operations. This corollary improves on the results of <ref> [62] </ref>. As another example, one may apply Theorem 3.28 to symmetric groups of low order, adapting to a well-chosen abelian subgroup. A similar technique may be applied to the general linear group. <p> This would include improving the upper bounds for the various matrix groups over finite fields and Lie groups of finite type, cf. <ref> [68, 69, 62] </ref>) as well as solvable groups [12]. 2. Improve the general upper bound for finite groups. Can the general upper bound for the complexity of a finite group be improved? To date, it is known that all groups have complexity bounded jGj 1:44 .
Reference: [63] <author> S. Linton, G. Michler, and J. Olsson, </author> <title> Fourier transforms with respect to monomial representations, </title> <journal> Math. Ann. </journal> <volume> 297 (1993), </volume> <pages> 253-268. </pages>
Reference-contexts: Theorem 3.12 merely serves to organize the operation count. A similar procedure goes through for the finite groups of Lie type, using the recent work of Hagedorn [45] for bounding the multiplicities. Remark 3.14. Linton, Michler and Olsson <ref> [63] </ref> an algorithm is given to compute the Fourier transform on GL n (q) using certain monomial model representations. Theorem 3.13 improves on this result. 3.1.5. Homogeneous spaces. A nice feature of this approach is that we obtain results for homogeneous spaces with no extra effort.
Reference: [64] <author> D. Maslen, </author> <title> Efficient computation of Fourier transforms on compact groups, </title> <note> Max-Planck preprint MPI/95-8 (1995). </note>
Reference-contexts: In this paper we will survey some of the recent results about such generalizations. We focus primarily upon recent work using factorization of group elements, in the finite group case, and the analogous approach for compact groups <ref> [68, 69, 64] </ref>. We shall consider the algorithmic aspects of this work and leave a discussion of the potential applications for another paper in this volume [80]. We proceed as follows. In Section 2 we discuss two abelian FFTs, an FFT due to Yates, as well as the Cooley-Tukey FFT. <p> Thus the compact Lie group case provides a bridge between the finite group and fast polynomial transforms. We now turn to a brief survey of these questions following the lines of <ref> [65, 66, 64] </ref>. 4.1. Example: Fast Fourier analysis on the rotation group. The Fourier transform on SO (3), provides a good paradigm for the use separation of variables techniques on both compact Lie groups and finite groups. <p> To determine which matrix elements occur multiplied by each other in these expressions, we index the rows and columns of our representations by paths in a Bratteli diagram, and use the diagrammatic methods of Sections 3.3.1 and 3.3.2. For a proof, see <ref> [64] </ref>. 44 DAVID K. MASLEN AND DANIEL N. ROCKMORE The matrix elements of SO (n) in a Gel'fand-Tsetlin basis were first determined in [61]. A general method of finding expressions for matrix elements is presented, and explicit expressions for the unitary groups may be found in [60]. 4.4.3. <p> The algorithms of Driscoll and Healy were originally developed to treat such a case: the spherical harmonics are precisely the associated spherical functions for S 2 = SO (3)=SO (2). Further examples of this method applied to rank one homogeneous spaces may be found in <ref> [65, 64] </ref>. 46 DAVID K. MASLEN AND DANIEL N. ROCKMORE 4.5.2. The expansion of tensor fields.
Reference: [65] <institution> Fast Transforms and Sampling for Compact Groups, </institution> <type> Ph.D. Thesis, </type> <institution> Department of Mathematics, Harvard University, </institution> <year> 1993. </year>
Reference-contexts: Thus the compact Lie group case provides a bridge between the finite group and fast polynomial transforms. We now turn to a brief survey of these questions following the lines of <ref> [65, 66, 64] </ref>. 4.1. Example: Fast Fourier analysis on the rotation group. The Fourier transform on SO (3), provides a good paradigm for the use separation of variables techniques on both compact Lie groups and finite groups. <p> t 1 (' n 1 )t 1 (' n 2 ) : : : : 1;n1 )u n1 ( n 2;n1 )r n ( n 1;n )u n ( n 2;n ) : fi 1;1 ):u 1 ( 1 2;1 ) For a proof of Lemma 4.13 see [60] or <ref> [65] </ref>. The sets over which the parameters k j ; k a;j should range can easily be determined from the interpretation of the factors in these expressions as double coset representatives. <p> The algorithms of Driscoll and Healy were originally developed to treat such a case: the spherical harmonics are precisely the associated spherical functions for S 2 = SO (3)=SO (2). Further examples of this method applied to rank one homogeneous spaces may be found in <ref> [65, 64] </ref>. 46 DAVID K. MASLEN AND DANIEL N. ROCKMORE 4.5.2. The expansion of tensor fields. <p> This observation quickly reduces the problem of finding a fast tensor harmonic transform to the well known scalar case treated by Driscoll and Healy. For a more detailed treatment of the tensor transform, see <ref> [65, 48] </ref>. 5. Fast discrete polynomial transforms The techniques we have described in Sections 3 and 4 reduce the computation of Fourier transforms on groups to sums involving matrix coefficients, taken over fixed subsets of the group.
Reference: [66] <institution> Sampling of functions and sections for compact groups, </institution> <month> preprint. </month> <title> [67] , A polynomial approach to orthogonal polynomial transforms, </title> <note> Max-Planck preprint MPI/95-9 (1995). </note>
Reference-contexts: Thus the compact Lie group case provides a bridge between the finite group and fast polynomial transforms. We now turn to a brief survey of these questions following the lines of <ref> [65, 66, 64] </ref>. 4.1. Example: Fast Fourier analysis on the rotation group. The Fourier transform on SO (3), provides a good paradigm for the use separation of variables techniques on both compact Lie groups and finite groups. <p> The definition of band-limited in Definition 4.8 is a special case of a much more general notion. The concept of band-limit may be formulated in the context of any filtered algebra. Even more generally, we may speak of band-limited elements of a filtered module over a filtered algebras (cf. <ref> [66] </ref>). This is useful for the development of a sampling theory for tensor fields, or sections of vector bundles. Example 4.10. The irreducible representations of S 1 are indexed by integers, j.
Reference: [68] <author> D. Maslen and D. Rockmore, </author> <title> Separation of variables and the efficient computation of Fourier transforms on finite groups, I, </title> <journal> J. Amer. Math. Soc. </journal> <month> (to appear). </month> <title> [69] , Separation of variables and the efficient computation of Fourier transforms on finite groups, II, (in preparation). [70] , Adapted diameters and the efficient computation of Fourier transforms of finite groups, </title> <booktitle> in Proceedings of the 1995 ACM-SIAM Symposium on Discrete Algorithms (to appear). </booktitle>
Reference-contexts: In this paper we will survey some of the recent results about such generalizations. We focus primarily upon recent work using factorization of group elements, in the finite group case, and the analogous approach for compact groups <ref> [68, 69, 64] </ref>. We shall consider the algorithmic aspects of this work and leave a discussion of the potential applications for another paper in this volume [80]. We proceed as follows. In Section 2 we discuss two abelian FFTs, an FFT due to Yates, as well as the Cooley-Tukey FFT. <p> Direct computation of any Fourier transform gives the upper and lower bounds jGj 1 C (G) T G (R) jGj 2 In <ref> [68] </ref> we have introduced the related quantity t G (R), called the reduced com plexity and defined by t G (R) = T G (R)= jGj (3.2) This definition simplifies the statements and proofs of many following results. The separation of variables approach. <p> Aspects of this approach to computing Fourier transforms have previously appeared [12, 22, 31], but it has only recently been given a general formulation <ref> [68, 69, 70] </ref>. (See also [23] for results in this direction.) The basic idea is to re-index the calculation so as to replace the single sum (3.1) defining a Fourier transform by a multiple sum over many different "coordinates". <p> It is important here that the structure of the block matrices occurring are compatible. All this is achieved by using subgroup-adapted sets of representations, or equivalently, Gel'fand-Tsetlin bases. Remark 3.6. The above is a brief synopsis of the papers <ref> [70, 68] </ref>. Special cases of the matrix separation of variables approach also occur in work of Clausen on FFTs for the symmetric group, cf. [23], especially Section 10. Orszag discusses an analogous coordinate by coordinate approach for computing eigenfunction transforms in [75]. <p> This result is by no means the best of its type. On the one hand, we could be more careful about counting the exact number of operations appearing in the matrix multiplications. This is done in <ref> [68] </ref>, where we do a careful analysis of all the possible matrix multiplications that can occur, and how the structures of the block matrices interact with each other. <p> Using this correspondence, results for groups transfer immediately to results for homogeneous spaces. As an example, we obtain the following result for the symmetric group. (See <ref> [68] </ref> for further examples.) Theorem 3.15. <p> In this way we can index the blocks for the restriction K n # K i by paths from level i to level n. This type of indexing has proved useful in refining the application of the matrix separation of variables approach (cf. <ref> [68] </ref>, esp. Section 4.2). By restricting all the way down to K 0 = 1, we obtain an indexing scheme for the rows and columns, and hence matrix coefficients, of the chain-adapted representation . <p> These transforms clearly take a total of ( P ):(jGj = jN j):t G=N (S) scalar operations. Applying Theorem 3.34 to a direct product of groups H fi K, immediately gives the usual result <ref> [19, 23, 12, 68] </ref> for the complexity of the Fourier transform on a group product. Using sets of matrix representations adapted to both H and K simultaneously, we have t HfiK t H + t K . 3.5.1. Abelian group extensions and solvable groups. <p> This would include improving the upper bounds for the various matrix groups over finite fields and Lie groups of finite type, cf. <ref> [68, 69, 62] </ref>) as well as solvable groups [12]. 2. Improve the general upper bound for finite groups. Can the general upper bound for the complexity of a finite group be improved? To date, it is known that all groups have complexity bounded jGj 1:44 . <p> Improve the general upper bound for finite groups. Can the general upper bound for the complexity of a finite group be improved? To date, it is known that all groups have complexity bounded jGj 1:44 . This is due to M. Clausen (see [16]). Perhaps the centralizer techniques of <ref> [70, 68, 69] </ref> will prove useful. 3. Use of group extensions. The goal here would be to relate, for G . N , the complexity of G, to the complexity of N and G=N for arbitrary G=N .
Reference: [71] <author> H. Moller, </author> <title> On the construction of cubature formulae with few nodes using Groebner bases, </title> <institution> in Nato Adv. Sci. Inst. </institution> <note> Ser. C 203 (1987), </note> <editor> P. Keast, G. Fairweather (eds.), </editor> <publisher> Reidel, Dordrecht, </publisher> <pages> 177-192. </pages>
Reference-contexts: Minimal sampling. How can we find sampling distributions for band-limited functions of a fixed band-limit with a minimal number of points? This problem seems to have a more algebro-geometric flavour. See <ref> [71] </ref>. 11. General sample points. Can we find fast transforms on compact groups that use more general sampling points? A solution to this problem would be particularly useful on the sphere.
Reference: [72] <author> S. Moore, </author> <title> Efficient stabilization methods for fast polynomial transforms, </title> <type> Ph.D. Thesis, </type> <institution> Dart-mouth College, NH, </institution> <year> 1994. </year>
Reference-contexts: Related techniques have already found a number of applications attacking computational bottlenecks in problems in areas such as medical imaging, geophysics and matched filter design <ref> [34, 72, 49, 48] </ref>. This general approach grew out of the fast Legendre transform algorithms in [33] (esp. Section 5). 48 DAVID K. MASLEN AND DANIEL N. ROCKMORE The main result of [34] is the following theorem. Theorem 5.6. <p> The interested reader is strongly advised to refer to [33, 34, 49], for a more detailed discussion of the algorithm, and particularly to <ref> [72, 73] </ref> for a discussion of stability issues. [67] contains an axiomatic derivation. With the exception of the first and last stages the algorithm proceeds by divide and conquer; the k-th stage looks like 2 copies of the (k1)-th stage.
Reference: [73] <author> S. Moore, D. Healy, and D. Rockmore. </author> <title> Symmetry stabilization for polynomial evaluation and interpolation, </title> <journal> Linear Algebra Appl. </journal> <volume> 192 (1993), </volume> <pages> 249-299. </pages> <editor> 56 DAVID K. MASLEN AND DANIEL N. </editor> <publisher> ROCKMORE </publisher>
Reference-contexts: In this case a pure separation of variables approach to computing the transform of a band-limited function takes O (b n+1 ) operations, whereas an approach that uses fast Gegenbauer transforms takes O (b n (log b) 2 ) operations. Here we summarize some of the recent work <ref> [33, 34, 73] </ref> on fast discrete polynomial transforms, especially as related to these new fast algorithms for discrete orthogonal polynomial transforms. The general framework is as follows. Let fP 0 ; : : :; P N1 g denote a set of linearly independent polynomials with complex coefficients. <p> The interested reader is strongly advised to refer to [33, 34, 49], for a more detailed discussion of the algorithm, and particularly to <ref> [72, 73] </ref> for a discussion of stability issues. [67] contains an axiomatic derivation. With the exception of the first and last stages the algorithm proceeds by divide and conquer; the k-th stage looks like 2 copies of the (k1)-th stage. <p> computation of the matrix-vector product 0 B B @ z 0 z 1 z n1 0 z 2 n1 . . . . . . 0 z n1 n1 C C C B B B f (0) f (2) f (n 1) C C C :(5.10) The fast algorithms of <ref> [34, 73] </ref> are derived by consideration of the transposed computation, which is simply the evaluation of the polynomial f (0) + f (1)x + f (2)x 2 + + f (n 1)x n1 at the points fz 0 ; : : :; z n1 g. <p> By formulating an O (n log 2 n) algorithm of Borodin and Munro [14] as a factorization of the Van-dermonde matrix (the transpose of the matrix in (5.10)) an algorithm of equal complexity is obtained for the discrete monomial transform. The paper <ref> [73] </ref> also addresses stability issues. In the case of nonuniform DFTs, approximate algorithms using fast multipole expansions have also been explored [36, 37]. 6. Open questions and further research directions We hope that the preceding discussions have supported the claim that "Generalized FFTs" is an exciting interdiscplinary research area.
Reference: [74] <author> A. Oppenheim and R. Schafer, </author> <title> Discrete-time signal processing. </title> <publisher> Prentice Hall, </publisher> <address> NJ, </address> <year> 1989. </year>
Reference: [75] <author> S. Orszag, </author> <title> Fast eigenfunction transforms, in Science and Computers, </title> <editor> G. C. Rota (ed.), </editor> <title> (A Volume Dedicated to Nicholas Metropolis), </title> <journal> Adv. Math. Suppl. Stud., </journal> <volume> vol. 10, </volume> <publisher> Academic Press, </publisher> <address> Orlando, FL, </address> <year> 1984, </year> <pages> 22-30. </pages>
Reference-contexts: Special cases of the matrix separation of variables approach also occur in work of Clausen on FFTs for the symmetric group, cf. [23], especially Section 10. Orszag discusses an analogous coordinate by coordinate approach for computing eigenfunction transforms in <ref> [75] </ref>. Auslander, et. al. discuss how in the abelian case, choice of coset representatives can influence running times for various architectures [4]. 3.1.2. Adapted representations and structured matrices. Definition 3.7 (Subgroup-adapted representations). <p> Previous to their work all other efficient algorithms developed (also in the context of meteorological applications) were only approximate in nature <ref> [75, 2] </ref>. To state things a bit more precisely, recall that any integrable function on the two-sphere has an expansion (its Fourier expansion) in terms of spherical harmonics.
Reference: [76] <author> R. Pini, </author> <title> Bernstein's Theorem on SU(2), Boll. Un. Mat. </title> <booktitle> Ital. A (6) 4-A (1985), </booktitle> <pages> 381-389. </pages>
Reference-contexts: The result may also be formulated for sampling using distributions rather than measures, and a version of this result also holds for sections of vector bundles ([66] Theorem 3.7). The work of Gaudry and Pini <ref> [40, 76] </ref> may be used to relate kf P a f k A m to norms based on the differentiability properties of functions. 4.4. The classical compact Lie groups. We now consider four series of connected compact Lie groups.
Reference: [77] <author> L. Rabiner, R. Schafer, and C. Rader, </author> <title> The chirp-z transform and its applications, </title> <journal> Bell System Tech. J. </journal> <volume> 48 (1969), </volume> <pages> 1249-1292. </pages>
Reference-contexts: In this case the method of Rader [78] allows us to relate the problem to a convolution on a cyclic group of order p 1. Alternatively, the chirp-z transform due to Rabiner et al. <ref> [77] </ref> allows us to relate the problem to a cyclic group of higher order. These methods, in conjunction with the Cooley-Tukey algorithm, provides an O (n log n) algorithm for any n. They may be explained as follows. <p> We may therefore use the Cooley-Tukey algorithm to compute Fourier transforms on Z=(p 1)Z. GENERALIZED FFTS 29 The idea of writing the Fourier transform in terms of a convolution does not depend on N being prime. Rabiner et al. <ref> [77] </ref> (see also [13]) make the change of variables jk = (j 2 + k 2 (j k) 2 )=2 to obtain ^ f (k) = ! k 2 =2 j=0 f (j)! j 2 =2 ! (jk) 2 =2 This is a non-cyclic convolution of the sequence with the sequence
Reference: [78] <author> C. Rader, </author> <title> Discrete Fourier transforms when the number of data samples is prime, </title> <booktitle> IEEE Proc. 56 (1968), </booktitle> <pages> 1107-1108. </pages>
Reference-contexts: MASLEN AND DANIEL N. ROCKMORE the group is cyclic of prime order, i.e., it is equal to Z=pZ for p a prime. In this case the method of Rader <ref> [78] </ref> allows us to relate the problem to a convolution on a cyclic group of order p 1. Alternatively, the chirp-z transform due to Rabiner et al. [77] allows us to relate the problem to a cyclic group of higher order.
Reference: [79] <author> G. U. Ramos, </author> <title> Roundoff error analysis of the fast Fourier transform, </title> <journal> Math. Comp. </journal> <volume> 25 (1971), </volume> <pages> 757-768. </pages>
Reference-contexts: Stability. Error analyses of abelian FFTs abound, mainly due to the widespread use of these algorithms in so many important applications (see e.g. <ref> [17, 79] </ref>). The audience and usefulness of generalized FFTs is growing and analogous analyses for FFTs for arbitrary or specific classes of groups might be a worthwhile topic to pursue. 9. Fast algorithms for higher-dimensional recurrences.
Reference: [80] <author> D. Rockmore, </author> <title> Applications of generalized FFTs, this volume. [81] , Fast Fourier transforms for wreath products, </title> <journal> Appl. Comput. Harmon. Anal. </journal> <volume> 4 (1995), </volume> <pages> 34-55. </pages>
Reference-contexts: We focus primarily upon recent work using factorization of group elements, in the finite group case, and the analogous approach for compact groups [68, 69, 64]. We shall consider the algorithmic aspects of this work and leave a discussion of the potential applications for another paper in this volume <ref> [80] </ref>. We proceed as follows. In Section 2 we discuss two abelian FFTs, an FFT due to Yates, as well as the Cooley-Tukey FFT. These algorithms may be given formulations that reveal many properties of generalized FFTs. <p> Another example of interest is GENERALIZED FFTS 53 the motion group, for which there would be many possible applications to filter design and pattern recognition. 13. Applications. Generalized FFTs are slowly finding areas of application. The paper <ref> [80] </ref> attempts to survey some of these. Just to indicate a few directions of work, FFTs for finite groups have found uses in data analysis (see e.g., [28, 29]), finite element methods [39] and filter design [57, 53, 54].
Reference: [82] <institution> Efficient computation of Fourier inversion for finite groups, J. Assoc. Comput. Mach. </institution> <month> 41(1) </month> <year> (1994), </year> <pages> 31-66. </pages>
Reference: [83] <institution> Fast Fourier analysis for abelian group extensions, Adv. in Appl. Math. </institution> <month> 11 </month> <year> (1990), </year> <pages> 164-204. </pages>
Reference-contexts: In Section 3.5 we consider the effect of having a normal subgroup. In that case the separation of variables technique is supplemented by factoring the group representations with tensor products. This is a key idea behind the fast transforms for abelian group extensions <ref> [83] </ref>, solvable groups [12, 19], and supersolvable groups [7]. 3.1. Separation of variables at the matrix level. 3.1.1. The main idea. Let G be a finite group, f a complex-valued function on G, and let be a matrix representation of G. <p> We have already seen such methods work in Yates' algorithm for the Walsh-Hadamard transform. The works of Beth on solvable groups [12], Clausen and Baum [19] on solvable and supersolvable [7] groups and Rockmore on abelian group extensions <ref> [83] </ref> are based on the idea of factoring both the group elements and the representations. In this respect, their algorithms differ from a pure separation of variables algorithm. These methods are all based on versions of the following general approach. <p> Applying Theorem 3.34 to this set of representations gives a method of computing Fourier transforms on G. Beth, in his work on solvable groups [12] (see also [19]), and Rockmore, in his work on abelian group extensions <ref> [83] </ref>, use two additional ideas in conjunction with the method of Theorem 3.34: 1. The action of d G=N on equivalence classes of irreducible representations of G is not, in general, free. To make efficient use of Theorem 3.34, we must apply it to the representations orbit by orbit. <p> Use of group extensions. The goal here would be to relate, for G . N , the complexity of G, to the complexity of N and G=N for arbitrary G=N . As stated in Section 3.5, to date, only the case of G=N abelian has been analyzed <ref> [83] </ref>, as well as those semidirect products that arise as wreath products [81]. Investigating arbitrary semidirect products might be a good place to start. 4. Generalization of the chirp-z transform.
Reference: [84] <author> P. Schwartztrauber, </author> <title> The vector harmonic transform method for solving partial differential equations in spherical geometry, </title> <journal> Mon. Wea. Rev. </journal> <volume> 121(12) (1993), </volume> <pages> 3415-3437. </pages>
Reference: [85] <author> D. Stanton, </author> <title> Orthogonal polynomials and Chevalley groups, in Special Functions: Group Theoretical Aspects and Applications, </title> <editor> R. Askey et al. (eds.), </editor> <publisher> Kluwer, </publisher> <address> Dordrecht, </address> <year> 1984, </year> <pages> 87-128. </pages>
Reference-contexts: Example 5.5 (Discrete spherical transforms). The spherical functions of distance transitive graphs may be written in terms of orthogonal polynomials (see <ref> [85, 35] </ref>). The paper [34] develops an algorithm for computing the spherical transform on these spaces. 5.1. Fast discrete orthogonal polynomial transforms. In [34] an algorithm is given which computes general discrete orthogonal polynomial transforms in O (N (log N ) 2 ) operations.
Reference: [86] <author> G. Steidl and M. Tasche, </author> <title> A polynomial approach to fast algorithms for discrete Fourier-cosine and Fourier-sine transforms, </title> <journal> Math. Comp. </journal> <volume> 56 (1991), </volume> <pages> 281-296. </pages>
Reference-contexts: This transform may be computed in O (N log N ) operations using a FFT [1], or by the extremely efficient DCT algorithm of Steidl and Tasche <ref> [86] </ref>, which takes a mere (3=2)N log N N + 1 real scalar operations when N is a power of 2 and the input vector is real. The sample points we have used here are called the Chebyshev points and are the roots of T N .
Reference: [87] <author> L. Stiller, </author> <title> Exploiting symmetry on parallel architectures, </title> <publisher> Ph. </publisher> <address> D. </address> <institution> Dissertation, Department of Computer Science, The Johns Hopkins University, Baltimore, MD, </institution> <year> 1995. </year>
Reference-contexts: Parallelizability. The divide and conquer nature of several of the techniques explained here (eg. separation of variables, discrete orthogonal polynomial transforms) strongly suggest the possibility of effective parallel implementation. For finite groups, the recent thesis of L. Stiller <ref> [87] </ref> takes an excellent first step in this direction, developing parallel algorithms based on [70]. These algorithms were motivated by their potential use in certain large-scale linear algebra problems.
Reference: [88] <author> E. Thoma, </author> <title> Die Einschrankung der Charaktere von GL(n; q) auf GL(n 1; q), </title> <journal> Math. Z., </journal> <month> 119 </month> <year> (1971) </year> <month> 321-338. </month>
Reference-contexts: MASLEN AND DANIEL N. ROCKMORE Then we have C (GL n (q)) T GL n (q) (R) &lt; 2 The proof of this result follows the same lines as for the symmetric group, using a result of Thoma <ref> [88] </ref> to bound the multiplicities. Theorem 3.12 merely serves to organize the operation count. A similar procedure goes through for the finite groups of Lie type, using the recent work of Hagedorn [45] for bounding the multiplicities. Remark 3.14.
Reference: [89] <author> R. Tolimieri, M. An, and C. Lu, </author> <title> Algorithms for discrete Fourier transform and convolution, </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1989. </year>
Reference: [90] <author> C. Van Loan, </author> <title> Computational framework for the fast Fourier transform, </title> <publisher> SIAM, </publisher> <address> Philadelphia, </address> <year> 1992. </year>
Reference-contexts: To date, abelian groups have provided the most useful class of FFTs, justifying the wealth of algorithms devoted to this special case. It would be well beyond the scope of this paper to discuss all of these approaches and we refer the interested reader to the books <ref> [38, 90] </ref> and their many references for this material. Instead, to focus our attention, in this section we discuss just two of these earlier algorithms, both of which illustrate many features of a more general theory. Our first example is an algorithm due to the statistician Yates [93]. <p> This algorithm, 6 DAVID K. MASLEN AND DANIEL N. ROCKMORE together with many variants as well as different approaches to computing the DFT, yield a family of techniques which for any N give an O (N log N ) algorithm for computing the DFT (see, e.g., <ref> [19, 38, 90] </ref>). This speed-up has had tremendous significance, effectively making digital signal processing a reality. To see how this algorithm works, let us consider what happens when N = pq has factors.
Reference: [91] <author> N. Vilenkin, </author> <title> Special functions and the theory of group representations, </title> <journal> Translations of Mathematical Monographs, </journal> <volume> 22, </volume> <publisher> A.M.S., </publisher> <address> Providence RI, </address> <year> 1968. </year>
Reference-contexts: Indeed, Gel'fand-Tsetlin bases, and adapted representations were originally invented for the calculation of matrix coefficients, using these methods [43]. Since then there has been a tremendous amount of work done, much of it centered around N. J. Vilenkin and A. U. Klimyk, finding explicit expressions for the matrix coefficients <ref> [42, 43, 58, 60, 61, 91] </ref>. Thus most of the ideas needed to develop fast transforms on compact Lie groups and their homogeneous spaces have existed for a long time. The main new idea, as for the sphere, has been the introduction of fast polynomial transforms. <p> Likewise, the method we shall use to compute Fourier transforms on SO (3) is a continuous analogue of the methods used in Theorem 3.28. GENERALIZED FFTS 35 It is well known (see e.g. <ref> [91] </ref>) that the representations of SO (3) are indexed by the nonnegative integers, such that that the l th representation V l has dimension 2l+1. <p> For a proof of this formula, see <ref> [91] </ref> or [60]. Definition 4.2 (Fourier transform on SO (3)). Assume f is a continuous complex-valued function on SO (3).
Reference: [92] <author> A. S. Willsky, </author> <title> On the algebraic structure of certain partially observable finite-state Markov processes, </title> <journal> Inform. Contr. </journal> <volume> 38, </volume> <month> 179-212 </month> <year> (1978). </year>
Reference-contexts: ROCKMORE coset space, into a sum of irreducible matrix coefficients. In this setting the classical FFT is an algorithm for abelian groups and it is natural to look for generalizations of these techniques to other groups. The first such results in this direction appear to be due to Willsky <ref> [92] </ref> who was looking for new algorithms for filter design. Others also did much to lay the groundwork in this relatively new interdisciplinary area looking to extend the uses of the FFT in signal processing [57, 11, 22] and data analysis [31]. <p> FFTs for finite groups The first generalization we pursue casts both Yates' algorithm and the Cooley-Tukey FFT as a particular instance of a fast Fourier transform on a finite group. This more general framework seems to have been first considered by Willsky <ref> [92] </ref> for uses in signal processing. Later motivations came from filter design [57] and data analysis [31]. Definition 3.1 (Fourier Transform).
Reference: [93] <author> F. Yates, </author> <title> The design and analysis of factorial experiments, </title> <type> Imp. </type> <institution> Bur. Soil Sci. Tech. Comm. </institution> <month> 35 </month> <year> (1937). </year>
Reference-contexts: Instead, to focus our attention, in this section we discuss just two of these earlier algorithms, both of which illustrate many features of a more general theory. Our first example is an algorithm due to the statistician Yates <ref> [93] </ref>. This was developed for the efficient analysis of data from 2 k -factorial designs|a particular aspect of the statistical analysis for experimental designs. Our second example is the Cooley-Tukey FFT [26], probably the most famous of these abelian techniques. <p> For k large this cost is prohibitive. GENERALIZED FFTS 5 Yates succeeded in finding an algorithm which is much more efficient than direct computation. More precisely, he discovered an algorithm which requires at most 32 k k = 32 k log (2 k ) operations <ref> [93] </ref>. To give a brief, group theoretic interpretation of his algorithm, let H k , denote the matrix of the Fourier transform on (Z=2Z) k . Thus H 1 is the 2 fi 2 matrix H 1 = 1 1 and H 3 is the matrix appearing in equation (2.1).
Reference: [94] <author> A. Zakhor, R. Weisskoff, and R. Rzedzian, </author> <title> Optimal sampling and reconstruction of MRI signals resulting from sinusoidal gradients, </title> <journal> IEEE Trans. Signal Process. </journal> <month> 39 </month> <year> (1991) 2056-2065. </year>
Reference-contexts: Another important set of evaluation points are an arbitrary set of points on the unit circle in which case so-called "non-uniform" DFTs can be obtained. Such transforms have important applications in medical imaging (see e.g. <ref> [94] </ref>).
Reference: [95] <author> D. Zelobenko, </author> <title> Compact Lie groups and their representations, Translations of Mathematical Monographs, </title> <type> 40, </type> <institution> A.M.S., Providence RI, 1973. Department of Mathematics, Universiteit Utrecht, 3584 CD, Utrecht, Netherlands E-mail address: maslen@math.ruu.nl Department of Mathematics, Dartmouth College, Hanover, NH 03755 Current address: School of Mathematics, Institute for Advanced Study, Princeton, </institution> <address> NJ 08544 E-mail address: rockmore@cs.dartmouth.edu </address>
References-found: 79

