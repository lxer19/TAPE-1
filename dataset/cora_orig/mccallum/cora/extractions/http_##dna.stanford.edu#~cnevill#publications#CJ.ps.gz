URL: http://dna.stanford.edu/~cnevill/publications/CJ.ps.gz
Refering-URL: http://dna.stanford.edu/~cnevill/resume.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: -cgn, ihw- @cs.waikato.ac.nz  
Phone: phone +64-7-838 4021, fax +64-7-838 4155  
Title: Compression and explanation using hierarchical grammars  
Author: Craig G. Nevill-Manning and Ian H. Witten 
Address: New Zealand.  
Affiliation: Computer Science Department, University of Waikato,  
Abstract: This paper describes an algorithm, called S EQUITUR, that identifies hierarchical structure in sequences of discrete symbols and uses that information for compression. On many practical sequences it performs well at both compression and structural inference, producing comprehensible descriptions of sequence structure in the form of grammar rules. The algorithm can be stated concisely in the form of two constraints on a context-free grammar. Inference is performed incrementally, the structure faithfully representing the input at all times. It can be implemented efficiently and operates in time that is approximately linear in sequence length. Despite its simplicity and efficiency, SEQUITUR succeeds in inferring a range of interesting hierarchical structures from naturally-occurring sequences. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Bell, T.C., Cleary, J.G., and Witten, I.H. </author> <title> (1990) Text compression. </title> <address> Englewood Cliffs, NJ: </address> <publisher> Prentice-Hall. </publisher>
Reference-contexts: Rule utility eliminates superfluous rules when repetitions continue for longer than two symbols. The novel Far from the Madding Crowd by Thomas Hardy is a benchmark sequence for data compression schemes. As expressed in the file book1 as part of the Calgary corpus <ref> (Bell et al., 1990) </ref>, it is 768,771 bytes long. The grammar that S EQUITUR forms from it has 27,365 rules, whose right-hand sides have an average length of 1.97 symbols (excluding the first rule S).
Reference: <author> Cleary, J.G., and Witten, I.H. </author> <title> (1984) Data compression using adaptive coding and partial string matching, </title> <journal> IEEE Transactions on Communications, </journal> <volume> COM-32(4), </volume> <month> 396-402. </month> <title> GEDCOM Standard: Draft release 5.4, </title> <address> Salt Lake City, Utah: </address> <institution> Family History Department, The Church of Jesus Christ of Latter-day Saints. </institution>
Reference-contexts: Statistical methods such as PPM that use arithmetic coding condition the probability of a symbol on the preceding symbols <ref> (Cleary and Witten, 1984) </ref>. Because no digram appears twice in the grammar produced by SEQUITUR, this approach yields no gain. For that reason, a single distribution based on the frequency of each symbolin other words, an order-zero modelis used to encode the grammar in the first instance.
Reference: <author> Gottlieb, D., Hagerth, S.A., Lehot, P.G.H., and Rabinowitz, H.S. </author> <title> (1975) A classification of compression methods and their usefulness for a large data processing center, </title> <booktitle> Proc. National Computer Conference, </booktitle> <pages> 453-458. </pages>
Reference-contexts: To compress the database using SEQUITUR, the sequence of word numbers is compressed using the encoding described in Section 4.1. The dictionary was compressed in two stages: front coding followed by PPMC. Front coding <ref> (Gottlieb et al. , 1975) </ref> involves sorting the dictionary, and whenever an entry shares a prefix with the preceding entry, replacing the prefix by its length.
Reference: <author> Knuth, D.E. </author> <title> (1973) The art of computer programming 3: searching and sorting. </title> <address> Reading, MA: </address> <publisher> Addison-Wesley. </publisher>
Reference-contexts: To enforce the digram uniqueness constraint, whenever a new digram appearsi.e. as each symbol is appended to rule Sthe grammar must be searched for any other occurrence of it. This is accomplished by storing all digrams in a hash table, handling collisions using open addressing <ref> (Knuth, 1973) </ref> along with the standard technique of double hashing. Every time a new digram appears in the grammar, it is added to the index. A new digram appears as the result of two pointer assignments linking two symbols together in the doubly-linked list.
Reference: <author> Lindenmayer, A. </author> <title> (1968) Mathematical models for cellular interaction in development, Parts I and II, </title> <journal> Journal of Theoretical Biology, </journal> <volume> 18, </volume> <pages> 280-315. </pages>
Reference-contexts: S EQUITUR also forms rules for imperfect and perfect cadences by comparison between chorales. In order to model the topology and growth patterns of living things, Aristid Lindenmayer created a class of rewriting systems called L-systems <ref> (Lindenmayer, 1968) </ref> which excel at capturing fractal graphical structure. The L-system in Figure 6a evaluates to the sequence in Figure 6b, which, when interpreted as LOGO commands, draws the plant in Figure 6d.
Reference: <editor> Mainous, F.D., and Ottman, R.W. </editor> <address> (1966) The 371 chorales of Johann Sebastian Bach . New York: </address> <publisher> Holt, Rinehart and Winston, Inc. </publisher>
Reference-contexts: The French version is split correctly, with commencement being broken into root commence and suffix ment, analogously to beginning. leben and O Welt, Ich muss Dich lassen, harmonised by J.S. Bach <ref> (Mainous and Ottman, 1966) </ref>. Shaded boxes represent rules that SEQUITUR infers after processing a corpus of chorales (which included these two), and the nesting of the boxes indicates the hierarchy of rules.
Reference: <author> Moffat, A. </author> <title> (1989) Word-based text compression, </title> <journal> Journal of SoftwarePractice and Experience, </journal> <volume> 19(2), </volume> <pages> 185198. </pages>
Reference-contexts: WORD uses a Markov model that predicts words based on the previous word and nonwords based on the previous nonword, resorting to character-level coding whenever a new word or nonword is encountered <ref> (Moffat, 1989) </ref>. We used both a zero-order context (WORD-0) and a first-order one (WORD-1). MG is a designed for full-text retrieval and uses a semi-static zero-order word-based model, along with a separate dictionary (Witten et al., 1994).
Reference: <author> Moffat, A., Neal, R., and Witten, I.H. </author> <title> (1995) Arithmetic coding revisited, </title> <booktitle> Proc. Data Compression Conference, Snowbird, Utah, </booktitle> <pages> 202-211. </pages>
Reference-contexts: A symbol that occurs with probability p can be encoded in log 2 p bits, and arithmetic coding is a practical method that can approach this bound arbitrarily closely in the limit <ref> (Moffat et al. , 1995) </ref>. Statistical methods such as PPM that use arithmetic coding condition the probability of a symbol on the preceding symbols (Cleary and Witten, 1984). Because no digram appears twice in the grammar produced by SEQUITUR, this approach yields no gain.
Reference: <author> Nevill-Manning, C.G., Witten, I.H., and Maulsby, </author> <title> D.L. (1994) Compression by induction of hierarchical grammars, </title> <booktitle> Proc. Data Compression Conference, Snowbird, Utah, </booktitle> <pages> 244-253. </pages>
Reference: <author> Nevill-Manning, </author> <title> C.G. (1996) Inferring Sequential Structure, </title> <type> Ph.D. thesis, </type> <institution> Department of Computer Science, University of Waikato, Hamilton, </institution> <address> New Zealand. </address>
Reference: <author> Nevill-Manning, C.G., Witten, I.H., and Olsen, </author> <title> D.R. (1996) Compressing semi-structured text using hierarchical phrase identification, </title> <booktitle> Proc. Data Compression Conference, Snowbird, Utah, </booktitle> <volume> 53 72. </volume>
Reference: <author> Nevill-Manning, C.G. and Witten, I.H. </author> <title> (1997) Linear-time, incremental hierarchy inference for compression, </title> <booktitle> Proc. Data Compression Conference, </booktitle> <address> Snowbird, Utah, </address> <month> 311. </month>
Reference: <author> Storer, J.A. and Szymanski, T.G. </author> <title> (1982) Data compression via textual substitution, </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 29 (4), </volume> <pages> 928-951. </pages>
Reference: <author> Witten, I.H., Moffat, A., and Bell, </author> <title> T.C. (1994) Managing Gigabytes: compressing and indexing documents and images. </title> <address> New York: </address> <publisher> Van Nostrand Reinhold. </publisher>
Reference-contexts: With the sole exception of MG <ref> (Witten et al ., 1994) </ref>, these compression programs do not support random access to records of the database, and are not suitable for use in practice because random access is always a sine qua non for information collections of this size. <p> We used both a zero-order context (WORD-0) and a first-order one (WORD-1). MG is a designed for full-text retrieval and uses a semi-static zero-order word-based model, along with a separate dictionary <ref> (Witten et al., 1994) </ref>. In this scheme, as in W O R D -0, the code for a word is determined solely by its frequency, and does not depend on any preceding words. This proves rather ineffective on the genealogical database, indicating the importance of inter-word relationships.
Reference: <author> Wolff, J.G. </author> <title> (1980) Language acquisition and the discovery of phrase structure, </title> <journal> Language and Speech, </journal> <volume> 23(3), </volume> <pages> 255269. </pages>
Reference: <author> Ziv, J., and Lempel, A. </author> <title> (1977) A universal algorithm for sequential data compression, </title> <journal> I E E E Transactions on Information Theory, </journal> <volume> IT-23 (3), </volume> <pages> 337-343. </pages>
Reference-contexts: On its second occurrence, a pointer is sent that identifies the contents of the rule that was sent earlier. The pointer consists of an offset from the beginning of rule S and the length of the match, similar to the pointers used in LZ77 <ref> (Ziv and Lempel, 1977) </ref>. At the decoding end, this pointer is interpreted as an instruction to form a new rule, with the target of the pointer comprising the contents of the rule.

References-found: 16

