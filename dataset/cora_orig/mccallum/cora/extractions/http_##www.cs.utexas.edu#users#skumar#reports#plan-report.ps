URL: http://www.cs.utexas.edu/users/skumar/reports/plan-report.ps
Refering-URL: http://www.cs.utexas.edu/users/skumar/reports.html
Root-URL: 
Title: Improving Plan Quality and Efficiency using Iterative Deepening  
Author: Shailesh Kumar 
Address: Austin  
Affiliation: Department of Computer Science The University of Texas at  
Abstract: Plan Quality is defined as the sum of the costs associated with all the actions in a plan. This definition is incorporated into the Partial Order planner, UCPOP. For finding the optimal plans efficiently, he standard Best First Search strategy was compared against two versions of Iterative Deepening that were added to the UCPOP planner. Experiments over several problems in an extended version of blocks world domain and logistics domain show that while the first iterative deepening algorithm, based on the Depth First Search (ID-DEPTH-FS) yielded optimal plans with respect to number of actions in them, the second iterative deepening algorithm, based on the best first search (ID-BEST-FS) was both effective and efficient in finding optimal plans with respect to the total cost of all actions in it. Experiments on various ranking functions have shown that for standard Best First Search and its variants and for the the two iterative deepening algorithms added to UCPOP, ranking function based on the sum of the total number of actions and the number of open conditions in the plan performs reasonably better than others.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Richard E. Fikes, Nils J. Nilsson,STRIPS: </author> <title> a new approach to the Application if Theorem Proving to problem solving. </title> <journal> Artificial Intelligence, </journal> <volume> Vol. 2, </volume> <pages> pp 189-208, </pages> <year> 1971 </year>
Reference: [2] <author> Nilsson N.J. </author> <title> Problem solving methods in Artificial Intelligence. </title> <publisher> McGraw-Hill Book Company, </publisher> <address> New York 1971. </address>
Reference: [3] <author> Green C. </author> <title> Application of Theorem Proving in problem solving, </title> <booktitle> Proc. Int'l Joint Conf. on AI, </booktitle> <address> Washington DC(May 1969) </address>
Reference: [4] <author> Earl D. </author> <title> Sacerdoti, </title> <booktitle> The Nollinear Nature of Plans. Proc. of Fourth Int'l Joint Conf. on AI, </booktitle> <pages> 206-214, </pages> <address> Menlo Park, California.(1975) </address>
Reference-contexts: The set of plan refinement operators depend on the basic planning algorithm used. This approach is used in the partial order planners like NOAH <ref> [4] </ref> and UCPOP [7,8,9]. The search ends at the node representing a complete plan which is feasible with respect to the constraints on the actions (preconditions) and is such that executing this plan would lead from the initial to the goal state. <p> Depending on the amount of branching factor in the search tree in the two directions, one approach could be better than the other. The other approach to searching for a plan is Nonlinear or partially ordered planning <ref> [4] </ref>. In this, the set of actions in the current plan under construction has only a subset of actions that are constrained but others could occur in any order or even in parallel.
Reference: [5] <author> Russel S. </author> <title> Efficient Memeory Bound Search Algorithms, </title> <booktitle> Proc. of the tenth European Conf. on AI, </booktitle> <pages> 1-5, </pages> <address> Newyour: </address> <publisher> Wiley, </publisher> <year> 1992. </year>
Reference-contexts: If after further processing, this does not lead to a solution then the second child is considered and so on. This the queue q does not explode and remains tractable in size. (this function is called ID-BEST-SEARCH in the interface.lisp) * Efficient Memory-Bound Best First Search <ref> [5] </ref> An intermediate approach to the pure Best First Search and Linear Best First Search is this memory bound best first search in which a fixed number of of children are added to the priority queue each time the step 6 of the algorithm above i.e. executed.
Reference: [6] <author> Peot M. and Smith D, </author> <title> Threat Removal strategies for Partial order Planning. </title> <booktitle> Proc. Eleventh National Conf on AI, </booktitle> <pages> 492-499. </pages> <address> Menlo Park, California. </address>
Reference: [7] <author> Daniel S. Weld, </author> <title> An Introduction to the Least Commitment Planning, </title> <journal> AI MAgazine, </journal> <month> Winter </month> <year> 1994. </year>
Reference: [8] <author> Penberthy, J. S.,and Weld, D. ucpop: </author> <title> A Sound and Complete, Partial Order Planner for ADL. </title> <booktitle> In Proc. of Int'l Conf. on the Principles of Knowledge Representation,103-114, </booktitle> <address> San Mateo, Calif: </address> <publisher> Morgan Kauffman. </publisher>
Reference: [9] <author> Barret A; Golden K.; Penberthy J.S. amd Weld, D., </author> <note> ucpop User's MAnual, Version 2.0, </note> <institution> Tech Reoprt 93-09-06, Dept. of Computer Science and Engineering, Univ. of Washington. </institution>
Reference: [10] <author> Mike Williamson, Steve Hanks, </author> <title> Optimal Planning with Goal Directed Utility Model. </title> <journal> AIPS-94. </journal> <volume> 16 </volume>
Reference: [11] <author> Masahiko Iwamoto, </author> <title> A Planner with Quality Goal and Speed-up Learning for Optimization Problem. </title> <publisher> AIPS-94 </publisher>

References-found: 11

