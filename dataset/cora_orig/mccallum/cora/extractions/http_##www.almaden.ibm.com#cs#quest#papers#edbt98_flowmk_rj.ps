URL: http://www.almaden.ibm.com/cs/quest/papers/edbt98_flowmk_rj.ps
Refering-URL: http://www.almaden.ibm.com/cs/quest/publications.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Mining Process Models from Workflow Logs  
Author: Rakesh Agrawal Dimitrios Gunopulos Frank Leymann 
Date: January 22, 1998  
Address: San Jose, CA 95120, USA  D-71034 Boblingen, Germany  
Affiliation: IBM Almaden Research Center  IBM German Software Development Lab  
Abstract: Modern enterprises increasingly use the workflow paradigm to prescribe how business processes should be performed. Processes are typically modeled as annotated activity graphs. We present an approach for a system that constructs process models from logs of past, unstructured executions of the given process. The graph so produced conforms to the dependencies and past executions present in the log. By providing models that capture the previous executions of the process, this technique allows easier introduction of a workflow system and evaluation and evolution of existing process models. We also present results from applying the algorithm to synthetic data sets as well as process logs obtained from an IBM Flowmark instal lation.
Abstract-found: 1
Intro-found: 1
Reference: [AGU72] <author> A. V. Aho, M. R. Garey, and J. D. Ullman. </author> <title> The transitive reduction of a directed graph. </title> <journal> SIAM Journal of Computing, </journal> <volume> 1(2), </volume> <year> 1972. </year>
Reference-contexts: Remove from E the edges that appear in both directions. 4. Compute the transitive reduction 2 of G. 2 The transitive reduction of a directed graph G is the smallest subgraph of G that has the same closure as G <ref> [AGU72] </ref>. A DAG has a unique transitive reduction. 8 5. Return (V; E). Theorem 4 Given a log of m executions of a given process having n activities, Algorithm 1 computes the minimal conformal graph in O (n 2 m) time. <p> Since m n, the second step clearly dominates the running time. The running time of step 4 is O (jV jjEj) = O (n 3 ) <ref> [AGU72] </ref>. A simpler algorithm to compute the transitive reduction is given in the Appendix. 2 Example 6 Consider the log fABCDE, ACDBE, ACBDEg.
Reference: [AS95] <author> Rakesh Agrawal and Ramakrishnan Srikant. </author> <title> Mining Sequential Patterns. </title> <booktitle> In Proc. of the 11th Int'l Conference on Data Engineering, </booktitle> <address> Taipei, Taiwan, </address> <month> March </month> <year> 1995. </year>
Reference-contexts: An activity appears only once in a process graph as a vertex label, whereas the same token (activity) may appear multiple times in an automaton. The problem considered in this paper generalizes the problem of mining sequential patterns <ref> [AS95] </ref> [MTV95], but it is applicable in a more restricted setting. Sequential patterns allow only a total ordering of fully parallel subsets, whereas process graphs are richer structures: they can be used to model any partial ordering of the activities and admit cycles in the general setting. <p> Since this modeling technique is compatible with workflow systems, the algorithm's use can facilitate the introduction of such systems. In modeling the process as a graph, we generalize the problem of mining sequential patterns <ref> [AS95] </ref> [MTV95]. The algorithm is still practical, however, because it computes a single graph that conforms with all process executions. The algorithm has been implemented and tested with both real and synthetic data. The implementation uses Flowmark's model and log conventions [LA92].
Reference: [ASE + 96] <author> P. Attie, M. Singh, E.A. Emerson, A. Sheth, and M. Rusinkiewicz. </author> <title> Scheduling workflows by enforcing intertask dependencies. </title> <journal> Distributed Systems Engineering Journal, </journal> <volume> 3(4) </volume> <pages> 222-238, </pages> <month> December </month> <year> 1996. </year>
Reference-contexts: The user selects the activities that, according to user's informal model of the business process, have to be executed next. Thus the successful executions of the process are recorded. Related research The specification of dependencies between events has received much attention [Kle91] <ref> [ASE + 96] </ref>. Our dependency model is a simplification of that proposed in [Kle91], and is consistent with the directed graph process model. In previous work in process discovery [CW95] [CW96], the finite state machine model has been used to represent the process.
Reference: [CCPP96] <author> F. Casati, S. Ceri, B. Pernici, and G. Pozzi. </author> <title> Workflow evolution. </title> <booktitle> In Proceedings of ER '96, </booktitle> <publisher> Springer Verlag, Cottbus, </publisher> <address> Germany, </address> <month> October </month> <year> 1996. </year>
Reference-contexts: The user is required to provide the process model. Constructing the desired process model from an unstructured model of process execution is quite difficult, expensive and in most cases require the use of an expert <ref> [CCPP96] </ref> [Sch93]. Contribution We present a new approach to address the problem of model construction. We describe an algorithm that, given a log of unstructured executions of a process, generates a graph model of the process.
Reference: [CLR90] <author> T. Cormen, C. Leiserson, and R. Rivest. </author> <title> Introduction to Algorithms. </title> <publisher> MIT Press, </publisher> <year> 1990. </year>
Reference-contexts: We assume that * &lt; 1=2. Then, given m executions, the expected number of out of order sequences for a given pair of activities is *m. Clearly T must be larger than *m. The probability that there are at least T errors, assuming they happen at random, is <ref> [CLR90] </ref>: P [ more than T errors in m executions] = T X i * i (1 *) ni m ! The use of T implies that if two independent activities have been executed in a given order at least m T times, a dependency between them will be added.
Reference: [CW95] <author> Jonathan E. Cook and Alexander L. Wolf. </author> <title> Automating process discovery through event-data analysis. </title> <booktitle> In Proc. 17th ICSE, </booktitle> <address> Seattle, Washington, USA, </address> <month> April </month> <year> 1995. </year>
Reference-contexts: Related research The specification of dependencies between events has received much attention [Kle91] [ASE + 96]. Our dependency model is a simplification of that proposed in [Kle91], and is consistent with the directed graph process model. In previous work in process discovery <ref> [CW95] </ref> [CW96], the finite state machine model has been used to represent the process. Our process model is different from the finite state machine model.
Reference: [CW96] <author> Jonathan E. Cook and Alexander L. Wolf. </author> <title> Discovering models of software processes from event-based data. </title> <type> Research Report Technical Report CU-CS-819-96, </type> <institution> Computer Science Dept., Univ. of Colorado, </institution> <year> 1996. </year>
Reference-contexts: Related research The specification of dependencies between events has received much attention [Kle91] [ASE + 96]. Our dependency model is a simplification of that proposed in [Kle91], and is consistent with the directed graph process model. In previous work in process discovery [CW95] <ref> [CW96] </ref>, the finite state machine model has been used to represent the process. Our process model is different from the finite state machine model.
Reference: [DS93] <author> U. Dayal and M.-C. Shan. </author> <title> Issues in operation flow management for long-running acivities. </title> <journal> Data Engineering Bulletin, </journal> <volume> 16(2) </volume> <pages> 41-44, </pages> <year> 1993. </year>
Reference-contexts: A business process specifies the way in which the resources of an enterprise are used. The performance of an enterprise depends on the quality and the accuracy of the business process. Thus techniques to manage and support business processes are an active research area. [RW92] <ref> [DS93] </ref> [GHS95] [LA92] [MAGK95]. In particular, a significant amount of research has been done in the area of modeling and supporting the execution of business processes. The model generally used is the workflow model [Hol94]. Workflow systems assume that a process can be divided in small, unitary actions, called activities.
Reference: [GHS95] <author> D. Georgakopoulos, M. Hornick, and A. Sheth. </author> <title> An overview of workflow management: From process modeling to workflow automation infrastructure. Distributed and Parallel Databases, </title> <type> 3(2), </type> <year> 1995. </year> <month> 19 </month>
Reference-contexts: A business process specifies the way in which the resources of an enterprise are used. The performance of an enterprise depends on the quality and the accuracy of the business process. Thus techniques to manage and support business processes are an active research area. [RW92] [DS93] <ref> [GHS95] </ref> [LA92] [MAGK95]. In particular, a significant amount of research has been done in the area of modeling and supporting the execution of business processes. The model generally used is the workflow model [Hol94]. Workflow systems assume that a process can be divided in small, unitary actions, called activities.
Reference: [GR97] <author> D. Georgakopoulos and Marek Rusinkiewicz. </author> <title> Workflow management | from busi-ness process automation to inter-organizational collaboration. </title> <booktitle> In VLDB-97 Tutorial, </booktitle> <address> Athens, Greece, </address> <month> August </month> <year> 1997. </year>
Reference-contexts: Current workflow systems assume that a model of the process is available and the main task of the system is to insure that all the activities are performed in the right order and the process terminates successfully <ref> [GR97] </ref> [LA92]. The user is required to provide the process model. Constructing the desired process model from an unstructured model of process execution is quite difficult, expensive and in most cases require the use of an expert [CCPP96] [Sch93]. <p> The 1 For the purposes of this paper, we will not differentiate between control flow and data flow, a distinction made in some systems <ref> [GR97] </ref> [LA92]. 4 output parameters are represented as a vector (o (A)[1]; o (A)[2]). Each edge has a Boolean function on the parameters, such as: f (C;D) = (o (C)[1] &gt; 0) ^ (o (C)[2] &lt; o (C)[1])).
Reference: [Hol94] <author> D. Hollinsworth. </author> <title> Workflow reference model. </title> <type> Technical report, </type> <institution> Workflow Management Coalition, TC00-1003, </institution> <month> December </month> <year> 1994. </year>
Reference-contexts: Thus techniques to manage and support business processes are an active research area. [RW92] [DS93] [GHS95] [LA92] [MAGK95]. In particular, a significant amount of research has been done in the area of modeling and supporting the execution of business processes. The model generally used is the workflow model <ref> [Hol94] </ref>. Workflow systems assume that a process can be divided in small, unitary actions, called activities. To perform the process, one must perform the 1 set (or perhaps a subset) of the activities that comprise it. In addition, there may be dependencies between different activities.
Reference: [Kle91] <author> J. Klein. </author> <title> Advanced rule driven transaction management. </title> <booktitle> In IEEE COMPCON, </booktitle> <year> 1991. </year>
Reference-contexts: The user selects the activities that, according to user's informal model of the business process, have to be executed next. Thus the successful executions of the process are recorded. Related research The specification of dependencies between events has received much attention <ref> [Kle91] </ref> [ASE + 96]. Our dependency model is a simplification of that proposed in [Kle91], and is consistent with the directed graph process model. In previous work in process discovery [CW95] [CW96], the finite state machine model has been used to represent the process. <p> Thus the successful executions of the process are recorded. Related research The specification of dependencies between events has received much attention <ref> [Kle91] </ref> [ASE + 96]. Our dependency model is a simplification of that proposed in [Kle91], and is consistent with the directed graph process model. In previous work in process discovery [CW95] [CW96], the finite state machine model has been used to represent the process. Our process model is different from the finite state machine model.
Reference: [LA92] <author> F. Leymann and W. Altenhuber. </author> <title> Managing business processes as an information resource. </title> <journal> IBM Systems Journal, </journal> <volume> (2), </volume> <year> 1992. </year>
Reference-contexts: A business process specifies the way in which the resources of an enterprise are used. The performance of an enterprise depends on the quality and the accuracy of the business process. Thus techniques to manage and support business processes are an active research area. [RW92] [DS93] [GHS95] <ref> [LA92] </ref> [MAGK95]. In particular, a significant amount of research has been done in the area of modeling and supporting the execution of business processes. The model generally used is the workflow model [Hol94]. Workflow systems assume that a process can be divided in small, unitary actions, called activities. <p> Current workflow systems assume that a model of the process is available and the main task of the system is to insure that all the activities are performed in the right order and the process terminates successfully [GR97] <ref> [LA92] </ref>. The user is required to provide the process model. Constructing the desired process model from an unstructured model of process execution is quite difficult, expensive and in most cases require the use of an expert [CCPP96] [Sch93]. <p> The work we present has been done in the context of the IBM workflow product, Flowmark <ref> [LA92] </ref>. However, the process model we consider is quite general and the algorithms we propose are applicable to other workflow systems. The new capability we are proposing can be applied in several ways. <p> The 1 For the purposes of this paper, we will not differentiate between control flow and data flow, a distinction made in some systems [GR97] <ref> [LA92] </ref>. 4 output parameters are represented as a vector (o (A)[1]; o (A)[2]). Each edge has a Boolean function on the parameters, such as: f (C;D) = (o (C)[1] &gt; 0) ^ (o (C)[2] &lt; o (C)[1])). <p> Generally, m n. In Sections 3 and 4, we will assume that the process graph is acyclic. This assumption is reasonable in many cases and, in fact, it is also frequently the case in practice <ref> [LA92] </ref>. We will relax this assumption in Section 5 and allow for cycles in the process graph. 3 Finding directed acyclic graphs We first consider the special case of finding model graphs for acyclic processes whose executions contain exactly one instance of every activity. <p> To obtain useful information about these functions, additional information about the changes in the global state of the process must be present in the log. We can however make the simplifying assumption that the control conditions are simple Boolean functions of the output of the activity <ref> [LA92] </ref>. In this case, the set of output parameters o (u) of a given activity u define the state of the activity. From each execution of an activity u we obtain an example for all functions f (u;v) ; (u; v) 2 E. <p> The algorithm is still practical, however, because it computes a single graph that conforms with all process executions. The algorithm has been implemented and tested with both real and synthetic data. The implementation uses Flowmark's model and log conventions <ref> [LA92] </ref>. The results obtained from these experiments validated the scalability and usability of the proposed algorithm.
Reference: [MAGK95] <author> C. Mohan, G. Alonso, R. Gunthor, and M. Kanath. Exotica: </author> <title> A research perspective on workflow management systems. </title> <journal> Data Engineering, </journal> <volume> 18(1), </volume> <month> March </month> <year> 1995. </year>
Reference-contexts: A business process specifies the way in which the resources of an enterprise are used. The performance of an enterprise depends on the quality and the accuracy of the business process. Thus techniques to manage and support business processes are an active research area. [RW92] [DS93] [GHS95] [LA92] <ref> [MAGK95] </ref>. In particular, a significant amount of research has been done in the area of modeling and supporting the execution of business processes. The model generally used is the workflow model [Hol94]. Workflow systems assume that a process can be divided in small, unitary actions, called activities.
Reference: [MTV95] <author> Heikki Mannila, Hannu Toivonen, and A. Inkeri Verkamo. </author> <title> Discovering frequent episodes in sequences. </title> <booktitle> In Proc. of the 1st Int'l Conference on Knowledge Discovery in Databases and Data Mining, </booktitle> <address> Montreal, Canada, </address> <month> August </month> <year> 1995. </year>
Reference-contexts: An activity appears only once in a process graph as a vertex label, whereas the same token (activity) may appear multiple times in an automaton. The problem considered in this paper generalizes the problem of mining sequential patterns [AS95] <ref> [MTV95] </ref>, but it is applicable in a more restricted setting. Sequential patterns allow only a total ordering of fully parallel subsets, whereas process graphs are richer structures: they can be used to model any partial ordering of the activities and admit cycles in the general setting. <p> Since this modeling technique is compatible with workflow systems, the algorithm's use can facilitate the introduction of such systems. In modeling the process as a graph, we generalize the problem of mining sequential patterns [AS95] <ref> [MTV95] </ref>. The algorithm is still practical, however, because it computes a single graph that conforms with all process executions. The algorithm has been implemented and tested with both real and synthetic data. The implementation uses Flowmark's model and log conventions [LA92].
Reference: [RW92] <author> B. Reinwald and H. Wedekind. </author> <title> Automation of control and data flow in distributed application systems. </title> <booktitle> In DEXA, </booktitle> <pages> pages 475-481, </pages> <year> 1992. </year>
Reference-contexts: A business process specifies the way in which the resources of an enterprise are used. The performance of an enterprise depends on the quality and the accuracy of the business process. Thus techniques to manage and support business processes are an active research area. <ref> [RW92] </ref> [DS93] [GHS95] [LA92] [MAGK95]. In particular, a significant amount of research has been done in the area of modeling and supporting the execution of business processes. The model generally used is the workflow model [Hol94].
Reference: [Sch93] <author> A. L. Scherr. </author> <title> A new approach to business processes. </title> <journal> IBM Systems Journal, </journal> <volume> 32(1), </volume> <year> 1993. </year>
Reference-contexts: The user is required to provide the process model. Constructing the desired process model from an unstructured model of process execution is quite difficult, expensive and in most cases require the use of an expert [CCPP96] <ref> [Sch93] </ref>. Contribution We present a new approach to address the problem of model construction. We describe an algorithm that, given a log of unstructured executions of a process, generates a graph model of the process.
Reference: [WK91] <author> Sholom M. Weiss and Casimir A. </author> <title> Kulikowski. Computer Systems that Learn: Classification and Prediction Methods from Statistics, Neural Nets, Machine Learning, and Expert Systems. </title> <publisher> Morgan Kaufman, </publisher> <year> 1991. </year>
Reference-contexts: For each execution of the process that u but not v appears, the point (o (u); 0) 2 N k fi f0; 1g is inserted. We can now use a classifier <ref> [WK91] </ref> to learn the Boolean fuctions f (v;u) .
References-found: 18

