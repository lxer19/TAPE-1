URL: http://www.iro.umontreal.ca/~scriptum/IntentionsKAIS.ps.gz
Refering-URL: http://www.iro.umontreal.ca/~scriptum/PublicationsMembres.html
Root-URL: http://www.iro.umontreal.ca
Email: &lt;fasciano@IRO.UMontreal.CA&gt; &lt;lapalme@IRO.UMontreal.CA&gt;  
Title: Intentions in the coordinated generation of graphics and text from tabular data  
Author: Massimo FASCIANO Guy LAPALME 
Date: August 19, 1998  
Address: Montreal, CP 6128, Succ Centre-Ville Montreal Quebec Canada, H3C 3J7  
Affiliation: Departement d'informatique et de recherche operationnelle Universite de  
Abstract: To use graphics efficiently in an automatic report generation system, one has to model messages and how they pass from the writer (intention) to the reader (interpretation). This paper describes PostGraphe a system which generates a report integrating graphics and text from a set of writer's intentions. The system is given the data in tabular form as might be found in a spreadsheet; also input is a declaration of the types of values in the columns of the table. The user then indicates the intentions to be conveyed in the graphics (e.g. compare two variables or show the evolution of a set of variables) and the system generates a report in L A T E X with the appropriate PostScript graphic files. PostGraphe uses the same information to generate the accompanying text that helps the reader to focus on the important points of the graphics. We also describe how these ideas have been embedded to create a new Chart Wizard for Microsoft Excel. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Adobe Systems Incorporated. </author> <title> PostScript Language Reference Manual. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, USA, 2 edition, </address> <year> 1990. </year>
Reference-contexts: The second presents the comparison of the profits between companies and the evolution of the profits along the years. PostGraphe generates French reports using L A T E X [19] as its document description language and PostScript <ref> [1] </ref> for figures. The output of the current system contains a number of special annotations that would not be present in a finished product. These annotations are mainly designed as debugging aids and they indicate what schema was used in each graphic and what intentions were covered by it.
Reference: [2] <author> E. Andre, W. Finkler, W. Graf, T. Rist, A. Schauder, and W. Wahlster. WIP: </author> <title> the automatic synthesis of multimodal presentations. </title> <booktitle> In Maybury [24], </booktitle> <pages> pages 75 - 93. </pages>
Reference-contexts: SAGE was one of the first system to introduce the notion of user intention in the automatic generation of graphics but it does this in the context of graphics showing relations between parts of systems and not for the usual statistical graphics found in PostGraphe. WIP <ref> [2] </ref> generates coordinated multimedia presentations of appliances from a common representation. These presentations are customized to a user's expertise and language and to the context of use (quick repair or general information).
Reference: [3] <author> M. Berry. </author> <title> An Introduction to Systemic Linguistics, </title> <booktitle> Volume 1 Structures and Systems. </booktitle> <address> St. </address> <publisher> Martin Press, </publisher> <address> New York, </address> <year> 1975. </year> <month> 21 </month>
Reference-contexts: Finally, a post-optimization phase eliminates redundancies which can occur because the heuristics sometimes miss a compatible grouping of intentions. 4.4 Text generation The surface text generation is handled by a modified version of PreTexte [14] based on systemic grammar theory <ref> [3, 4, 23] </ref>. PreTexte was designed to deal with temporal information which is a kind of information often found in statistical reports PostGraphe was designed to deal with.
Reference: [4] <author> M. Berry. </author> <title> An Introduction to Systemic Linguistics, Volume 2 Levels and Links. </title> <address> St. </address> <publisher> Martin Press, </publisher> <address> New York, </address> <year> 1976. </year>
Reference-contexts: Finally, a post-optimization phase eliminates redundancies which can occur because the heuristics sometimes miss a compatible grouping of intentions. 4.4 Text generation The surface text generation is handled by a modified version of PreTexte [14] based on systemic grammar theory <ref> [3, 4, 23] </ref>. PreTexte was designed to deal with temporal information which is a kind of information often found in statistical reports PostGraphe was designed to deal with.
Reference: [5] <institution> Jacques Bertin. Semiology of Graphics. The University of Wisconsin Press, </institution> <year> 1983. </year> <note> Translated by William J. Berg. </note>
Reference-contexts: We will then show the adaptation of these ideas to build a new "Chart Wizard" within the Microsoft Excel spreadsheet. We then compare PostGraphe with previous work on automatic report generation. 2 Graphic design The basic reference on the structure of graphics is Bertin <ref> [5] </ref> who defines some basic elements of graphics and their properties. He presents graphics as a mapping between a number of variables and an invariant which links them. <p> The properties are organized as a multiple inheritance graph divided into a number of sub-graphs, each corresponding to a specific feature: organization (nominal, ordinal, quantitative, . . . ) <ref> [5, 20, 21] </ref>, domain (enumeration, range, . . . ), temporal (month, year, . . . ), format (integer, real, . . . ), measurements (distance, duration, . . . ), and specific objects (countries, . . . ).
Reference: [6] <author> S. M. Casner. </author> <title> A Task-analytic Approach to the Automated Design of Graphic Presentations. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 10(2) </volume> <pages> 111-151, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: Bertin defines the efficiency of a graphic in terms of the length of time it takes to decode the pertinent information and gives a set of rules for choosing the appropriate representation to get an efficient graphic. This work has had a deep influence on almost all major works <ref> [21, 31, 6] </ref> in the field of automatic presentation. A good reference on the effects of graphics upon a reader is Zelazny [38, 39] who defines a selection method for graphics depending on the information the writer wants to convey. <p> Our system has a quite different application area and is focused on tabular data which have quite different properties but they are not necessarily easier because the objects manipulated by APEX have already a predefined 3-D description and no choice has to be made in this respect. Casner <ref> [6] </ref> has built BOZ a system that designs graphics based on an analysis of the task they are intended to support: for example, the problem of using airline schedule information to locate flights obeying certain criteria, BOZ proposes customized graphic representations depending on whether we want to find the 19 cheapest
Reference: [7] <author> William S. Cleveland. </author> <title> The Elements of Graphing Data. Wadsworth Advanced Books and Software, </title> <year> 1980. </year>
Reference-contexts: Graphics such as bar and column graphs, pie charts, line or points plots are well known and often used because modern computer tools like spreadsheets [26] or statistical graphic packages [33] make them very easy to produce from tabular data. There are many guidelines and tips <ref> [34, 35, 7] </ref> for using graphics but statistical packages do not implement them; they merely reference them in their manual. <p> He then gives some elementary rules to go from the comparisons to five typical graphic kinds of graphics illustrated in figure 4: pie charts, columns, bar, point graphs which form the basic blocks upon which we build PostGraphe. Cleveland <ref> [7] </ref> identifies problems in human perception of graphics and proposes interesting solutions. He 5 shows that some graphic techniques can fool our visual system and can thus send the wrong message. For example, it is quite hard to distinguish differences in angles or length or variations in slopes or length.
Reference: [8] <author> C. J. Date. </author> <title> An Introduction to Database Systems, volume I. </title> <publisher> Addison-Wesley, </publisher> <address> 4 edition, </address> <year> 1988. </year>
Reference-contexts: If a unit cannot be found using single inheritance, the name of the type is used as a unit. This process is described in more detail in [11]. 4.2 Relational keys Relational keys are similar to the notion of the same name in relational databases <ref> [8] </ref> and help determine which variables depend on which others. They are also used for ordering variables in some graphics so that the more important ones (usually the keys) are given the more visible positions. PostGraphe computes these keys from the data but the user can also add more constraints.
Reference: [9] <author> A.S.C. </author> <title> Ehrenberg. </title> <journal> Rudiments of Numeracy. Journal of the Royal Statistical Society, </journal> <volume> 140(Part </volume> 3):277-297, 1977. 
Reference-contexts: We now describe the systems related to PostGraphe that influenced our design. 4 In a report, the separation between text and graphics may not be as clear as one might think. For example, a table presents text or data in two dimensions for the reading of individual values; see <ref> [9] </ref> for guidelines for creating readable tables. Even within the text, graphical elements are used: font changing, emphasis by means of bold or italics, global organization in paragraphs or enumerated lists or page layout rules; [16] and [28] discuss these aspects in the context of a text generator.
Reference: [10] <author> Michael Elhadad. FUF: </author> <title> the Universal Unifier. User Manual Version 5.0. </title> <type> Technical report, </type> <institution> Columbia University, </institution> <year> 1991. </year>
Reference-contexts: Text and graphics are then generated in parallel using a hierarchy of logical forms organized in an extended functional unification grammar formalism <ref> [10] </ref>. Text generation takes into account the user's knowledge for choosing the level of language of the explanations. Graphics are generated using IBIS described in section 6.1. Then both text and graphics are put together for a final display; in PostGraphe we also generate text and graphics in parallel.
Reference: [11] <institution> Massimo Fasciano. Generation integree de textes et de graphiques statistiques. </institution> <type> PhD thesis, </type> <institution> Universite de Montreal, </institution> <year> 1996. </year>
Reference-contexts: These annotations indicate the types of the variables, how to determine the relational keys for the data and a series of predicates describing the writer's intentions. The justification for these annotations and their Prolog syntax are presented in detail in <ref> [11] </ref>. See figure 8 for an example of their use. <p> A unit can be associated with a type (ex: percentage 7! %). If a unit cannot be found using single inheritance, the name of the type is used as a unit. This process is described in more detail in <ref> [11] </ref>. 4.2 Relational keys Relational keys are similar to the notion of the same name in relational databases [8] and help determine which variables depend on which others. <p> To generate the syntactic forms usually found in the reports to be generated by PostGraphe we needed to add only a few features (7 in fact, see <ref> [11] </ref> for the details). PreTexte now has about 95 systems of which we modified or added around a fourth to deal with the new added features. We implemented textual schemas as a new interface between PreTexte and the tabular informations and the graphical schemas. <p> Thus, the following intentions [comparaison ([reduce (moyenne,profits)],[compagnie]), evolution (reduce (moyenne,profits),annee)] would have lead to the generation of 2 independent figures (13 and 14). The grouping of these 2 intentions is impossible, which eliminates the variations shown in the preceding examples. This section has shown several uses of PostGraphe see <ref> [11] </ref> for more examples. Even with its 21 graphical schemas, PostGraphe does not give all the possibilities of other statistical packages but the choices we have made do cover the graphics most often encountered in practice and transmit the writer's intentions clearly and precisely.
Reference: [12] <author> S. Feiner and K. McKeown. </author> <title> Automating the generation of coordinated multimedia explanations. </title> <journal> Multimedia Information Systems, </journal> <volume> 24(10) </volume> <pages> 33-41, </pages> <month> October </month> <year> 1991. </year>
Reference-contexts: COMET <ref> [12] </ref> generates multimedia explanations (graphics and text) answering user requests about the maintenance and repair of military radio equipment.
Reference: [13] <author> Steven K. Feiner. </author> <title> Computer generation of pictorial explanations. </title> <type> Technical Report CS-87-30, </type> <institution> Brown University, </institution> <month> December </month> <year> 1987. </year>
Reference-contexts: APT only tries to optimize the graphic efficiency and does not take the user intention into account; it always gives the same graphics for the same input variables . On the other side, PostGraphe can generate different graphics depending on the user's intention. Feiner <ref> [13] </ref> has built the APEX system which generates one picture for each sub task of a graphic explanation of how to fix a piece of broken equipment.
Reference: [14] <author> M. Gagnon and G. Lapalme. </author> <title> From conceptual time to linguistic time. </title> <journal> Computational Linguistics, </journal> <volume> 22(1) </volume> <pages> 91-127, </pages> <month> January </month> <year> 1996. </year>
Reference-contexts: These informations are necessary for the references made within the text part of PostGraphe. Finally, a post-optimization phase eliminates redundancies which can occur because the heuristics sometimes miss a compatible grouping of intentions. 4.4 Text generation The surface text generation is handled by a modified version of PreTexte <ref> [14] </ref> based on systemic grammar theory [3, 4, 23]. PreTexte was designed to deal with temporal information which is a kind of information often found in statistical reports PostGraphe was designed to deal with.
Reference: [15] <author> J. L. Graham. </author> <title> Illusory trends in the observation of bar graphs. </title> <journal> Journal of Experimental Psychology, </journal> <volume> 6(20) </volume> <pages> 597-608, </pages> <month> June </month> <year> 1937. </year>
Reference-contexts: Bars and columns are very good for two variable comparisons such as comparing the profits of companies but bars are almost always preferred for two reasons: the length of columns tends to be overestimated <ref> [15] </ref> and columns give a strong impression of evolution which can generate a false interpretation of the data. Line graphs are more efficient for comparing multiple sets of variables, even though they give a strong impression of evolution.
Reference: [16] <author> Eduard H. Hovy. </author> <title> Automated discourse generation using discourse structure relations. </title> <journal> Artificial Intelligence, </journal> <volume> 63 </volume> <pages> 341-385, </pages> <year> 1993. </year>
Reference-contexts: Even within the text, graphical elements are used: font changing, emphasis by means of bold or italics, global organization in paragraphs or enumerated lists or page layout rules; <ref> [16] </ref> and [28] discuss these aspects in the context of a text generator. In the next sections, we will first present aspects of graphic design that influenced our system PostGraphe which emphasizes the importance of the writer's intentions.
Reference: [17] <author> L. Iordanskaja, M. Kim, R. Kittredge, B. Lavoie, and A. Polguere. </author> <title> Generation of extended bilingual statistical reports. </title> <booktitle> Proceedings of the 15 th International Conference on Computational Linguistics (COLING-92), </booktitle> <pages> pages 1019-1023, </pages> <year> 1992. </year>
Reference-contexts: It is based on rhetorical schemas and has inspired many text generation systems including ours. Some systems have focused on report generation, namely ANA by Karen Kukich [18] which generates stock market reports directly form the Dow Jones indicators. LFS <ref> [17] </ref> produces reports in both French and English on the active population of Canada; it has also been adapted for generating reports on detail sales and consumer report price index. It can generate good reports in the style expected from a government agency.
Reference: [18] <author> Karen Kukich. </author> <title> Design of a knowledge-based report generator. </title> <booktitle> In Proceedings of the 21st Annual Meeting of the ACL, </booktitle> <pages> pages 145-150, </pages> <institution> Massachusetts Institute of Technology, </institution> <address> Cambridge, MA, </address> <month> June 15-17, </month> <year> 1983. </year>
Reference-contexts: TEXT [25] was developped by Kathleen McKeown to answer questions on the structure of a database. It is based on rhetorical schemas and has inspired many text generation systems including ours. Some systems have focused on report generation, namely ANA by Karen Kukich <ref> [18] </ref> which generates stock market reports directly form the Dow Jones indicators. LFS [17] produces reports in both French and English on the active population of Canada; it has also been adapted for generating reports on detail sales and consumer report price index.
Reference: [19] <author> Leslie Lamport. </author> <title> L A T E X, A Document Preparation System: User's Guide and Reference Manual. </title> <address> Addi-son-Wesley, Reading, MA, USA, </address> <year> 1985. </year>
Reference-contexts: The intentions are divided in 2 sections: the first presents the 3 variables (year , company and profits). The second presents the comparison of the profits between companies and the evolution of the profits along the years. PostGraphe generates French reports using L A T E X <ref> [19] </ref> as its document description language and PostScript [1] for figures. The output of the current system contains a number of special annotations that would not be present in a finished product.
Reference: [20] <author> Jock D. Mackinlay. </author> <title> Automatic Design of Graphical Presentations. </title> <type> PhD thesis, </type> <institution> Computer Science Department, Stanford University, </institution> <year> 1986. </year>
Reference-contexts: The properties are organized as a multiple inheritance graph divided into a number of sub-graphs, each corresponding to a specific feature: organization (nominal, ordinal, quantitative, . . . ) <ref> [5, 20, 21] </ref>, domain (enumeration, range, . . . ), temporal (month, year, . . . ), format (integer, real, . . . ), measurements (distance, duration, . . . ), and specific objects (countries, . . . ). <p> For a more complete survey, see [29]. 6.1 Automatic graphic generation MacKinlay <ref> [20, 21] </ref> built the APT system which generates statistical graphics from ground principles instead of choosing between predefined templates. He identified and classified a set of graphic encodings to represent the value of a variable.
Reference: [21] <author> Jock D. Mackinlay. </author> <title> Automating the Design of Graphical Presentations of Relational Information. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 5(2) </volume> <pages> 110-141, </pages> <month> April </month> <year> 1986. </year>
Reference-contexts: Bertin defines the efficiency of a graphic in terms of the length of time it takes to decode the pertinent information and gives a set of rules for choosing the appropriate representation to get an efficient graphic. This work has had a deep influence on almost all major works <ref> [21, 31, 6] </ref> in the field of automatic presentation. A good reference on the effects of graphics upon a reader is Zelazny [38, 39] who defines a selection method for graphics depending on the information the writer wants to convey. <p> The properties are organized as a multiple inheritance graph divided into a number of sub-graphs, each corresponding to a specific feature: organization (nominal, ordinal, quantitative, . . . ) <ref> [5, 20, 21] </ref>, domain (enumeration, range, . . . ), temporal (month, year, . . . ), format (integer, real, . . . ), measurements (distance, duration, . . . ), and specific objects (countries, . . . ). <p> For a more complete survey, see [29]. 6.1 Automatic graphic generation MacKinlay <ref> [20, 21] </ref> built the APT system which generates statistical graphics from ground principles instead of choosing between predefined templates. He identified and classified a set of graphic encodings to represent the value of a variable.
Reference: [22] <author> W. Mann and S. Thompson. </author> <title> Rhetorical Structure Theory: towards a functional theory of text organization. </title> <booktitle> TEXT, </booktitle> <volume> 8(3) </volume> <pages> 243-281, </pages> <year> 1988. </year>
Reference-contexts: WIP [2] generates coordinated multimedia presentations of appliances from a common representation. These presentations are customized to a user's expertise and language and to the context of use (quick repair or general information). Content determination is done using RST rhetorical relations <ref> [22] </ref> and the medium is dynamically chosen using presentation strategies indicating the chosen medium, its effect, its application conditions and eventual substrategies. Planning is done by finding plans that unify with a goal to achieve. Sub-plans are dealt with recursively until primitive presentation strategies are found.
Reference: [23] <author> C. Matthiessen and J. Bateman. </author> <title> Text Generation and Systemic-Functional Linguistics. </title> <publisher> Pinter, </publisher> <address> London, </address> <year> 1991. </year>
Reference-contexts: Finally, a post-optimization phase eliminates redundancies which can occur because the heuristics sometimes miss a compatible grouping of intentions. 4.4 Text generation The surface text generation is handled by a modified version of PreTexte [14] based on systemic grammar theory <ref> [3, 4, 23] </ref>. PreTexte was designed to deal with temporal information which is a kind of information often found in statistical reports PostGraphe was designed to deal with.
Reference: [24] <author> M. T. </author> <title> Maybury, editor. Intelligent Multimedia Interfaces. </title> <publisher> AAAI Press, </publisher> <address> Cambridge, MA, </address> <year> 1993. </year> <month> 22 </month>
Reference-contexts: In PostGraphe, we explicitly take the writer's intention into account to generate a customized graphic for each report. 6.3 Graphic and text integration Some large scale multimedia projects integrate text and graphic generation for applications such as maintenance explanations, changes in an evolving system or presentations of every day appliances. <ref> [24] </ref> is a good source of information for those systems. COMET [12] generates multimedia explanations (graphics and text) answering user requests about the maintenance and repair of military radio equipment.
Reference: [25] <author> K. R. McKeown. </author> <title> Discourse strategies for generating natural language text. </title> <journal> Artificial Intelligence, </journal> <volume> 27(1), </volume> <year> 1985. </year>
Reference-contexts: TEXT <ref> [25] </ref> was developped by Kathleen McKeown to answer questions on the structure of a database. It is based on rhetorical schemas and has inspired many text generation systems including ours. <p> The explanations are based on a knowledge base about an object, on possible actions, on diagnostics and on geometrical informations; they also take into account the goal and level of knowledge of the user. The system uses rhetorical schemas <ref> [25] </ref> to choose what is to be said and then decides what will be expressed graphically or textually: graphics are used to emphasize the spatial properties while the text expresses abstract relations and actions.
Reference: [26] <institution> Microsoft. </institution> <address> Excel 97. </address> <publisher> Microsoft Press, </publisher> <year> 1997. </year>
Reference-contexts: Graphics such as bar and column graphs, pie charts, line or points plots are well known and often used because modern computer tools like spreadsheets <ref> [26] </ref> or statistical graphic packages [33] make them very easy to produce from tabular data. There are many guidelines and tips [34, 35, 7] for using graphics but statistical packages do not implement them; they merely reference them in their manual. <p> We were happy with this choice that gave us rapid prototyping but now that we have a working system, we have decided to adapt our intention based paradigm to the context of a real spreadsheet. We have chosen Excel <ref> [26] </ref> because of its availability on both Macintosh and PCs and because of the facilities for adding new functionalities using Visual Basic [36] which now offers a very good programming environment.
Reference: [27] <author> V. Mittal, S. Roth, J. Moore, J. Mattis, and G. Carenini. </author> <title> Generating Explanatory Captions for Information Graphics. </title> <booktitle> In Proceedings of the 14 th International Joint conference on Artificial Intelligence (IJCAI-95), </booktitle> <volume> volume 2, </volume> <pages> pages 1276-1283, </pages> <address> Montreal, Canada, </address> <month> August </month> <year> 1995. </year>
Reference-contexts: Like in expert systems explanation systems [37] for the explanations, SAGE must heavily prune 20 the dependency trees to create understandable texts. SAGE often generates quite complicated graphics that are not immediately obvious to the user. Mittal et al. <ref> [27] </ref> recently extended SAGE to produce a caption to interpret the structure of the graphic. This is a quite different approach to multimedia in the sense that it describes the form instead of the content of the graphic.
Reference: [28] <author> Elsa Pascual. </author> <title> Representation de l'architecture textuelle et generation de texte. </title> <type> PhD thesis, </type> <institution> Universite Paul Sabatier, Toulouse, </institution> <year> 1991. </year>
Reference-contexts: Even within the text, graphical elements are used: font changing, emphasis by means of bold or italics, global organization in paragraphs or enumerated lists or page layout rules; [16] and <ref> [28] </ref> discuss these aspects in the context of a text generator. In the next sections, we will first present aspects of graphic design that influenced our system PostGraphe which emphasizes the importance of the writer's intentions.
Reference: [29] <author> S. F. Roth and W. E. Hefley. </author> <title> Intelligent multimedia presentation systems: </title> <booktitle> Research and principles. In Maybury [24], </booktitle> <pages> pages 13 - 58. </pages>
Reference-contexts: For a more complete survey, see <ref> [29] </ref>. 6.1 Automatic graphic generation MacKinlay [20, 21] built the APT system which generates statistical graphics from ground principles instead of choosing between predefined templates. He identified and classified a set of graphic encodings to represent the value of a variable.
Reference: [30] <author> Stephen F. Roth and Joe Mattis. </author> <title> Data Characterization for Intelligent Graphics Presentation. Empowering People: </title> <booktitle> CHI'90 Conference Proceedings, </booktitle> <pages> pages 193-200, </pages> <month> April </month> <year> 1990. </year>
Reference-contexts: The first module of SAGE determines the content of the message as being the changes in the data that are relevant to the user's request. Roth and Mattis <ref> [30] </ref> describe the rationale behind the graphic module which is an extension of APT that takes into account the notion of goal (the user's request), but also new types of data (composite types and missing data), new graphic types such as Gantt chart showing the starting and ending dates of activities
Reference: [31] <author> Steven F. Roth, Joe Mattis, and Xavier Mesnard. </author> <title> Graphics and natural language as components of automatic explanation. </title> <editor> In Joseph W. Sullivan and Sherman W. Tyler, editors, </editor> <title> Intelligent User Interfaces, Frontier Series, chapter 10. </title> <publisher> ACM Press, </publisher> <year> 1991. </year>
Reference-contexts: There are many guidelines and tips [34, 35, 7] for using graphics but statistical packages do not implement them; they merely reference them in their manual. Text and graphic coordination pose important problems identified in <ref> [31] </ref> as structural incompatibility: text and graphics do not compose in the same way: for example, in a graphic representation of a tree, dependents are near the root but in a pre-order textual description, the links might be harder to make; lack of cohesion: for a text to make an explicit <p> Bertin defines the efficiency of a graphic in terms of the length of time it takes to decode the pertinent information and gives a set of rules for choosing the appropriate representation to get an efficient graphic. This work has had a deep influence on almost all major works <ref> [21, 31, 6] </ref> in the field of automatic presentation. A good reference on the effects of graphics upon a reader is Zelazny [38, 39] who defines a selection method for graphics depending on the information the writer wants to convey. <p> Text generation takes into account the user's knowledge for choosing the level of language of the explanations. Graphics are generated using IBIS described in section 6.1. Then both text and graphics are put together for a final display; in PostGraphe we also generate text and graphics in parallel. SAGE <ref> [31] </ref> was designed to analyse changes in an evolving system: it can deal with either models with hierarchical dependencies or spreadsheet type of models.
Reference: [32] <author> D. Seligmann and S. Feiner. </author> <title> Automated Generation of Intent-Based 3D Illustrations. </title> <journal> Computer Graphics, </journal> <volume> 25(4) </volume> <pages> 123-132, </pages> <month> July </month> <year> 1991. </year>
Reference-contexts: In PostGraphe, we ask very few supplementary information for our graphics and only a declaration of the intention to be conveyed. The graphic generator called IBIS <ref> [32] </ref> generates pictures to fulfill a communicative intent such as showing the location of an objet, its physical properties (size, form, color), its state or its change of state.
Reference: [33] <author> Luke Tierney. Lisp-Stat: </author> <title> An Object-Oriented Environment for Statistical Computing and Dynamic Graphics. </title> <publisher> Wiley, </publisher> <year> 1990. </year>
Reference-contexts: Graphics such as bar and column graphs, pie charts, line or points plots are well known and often used because modern computer tools like spreadsheets [26] or statistical graphic packages <ref> [33] </ref> make them very easy to produce from tabular data. There are many guidelines and tips [34, 35, 7] for using graphics but statistical packages do not implement them; they merely reference them in their manual.
Reference: [34] <author> Edward R. Tufte. </author> <title> The Visual Display of Quantitative Information. </title> <publisher> Graphics Press, </publisher> <year> 1983. </year>
Reference-contexts: Graphics such as bar and column graphs, pie charts, line or points plots are well known and often used because modern computer tools like spreadsheets [26] or statistical graphic packages [33] make them very easy to produce from tabular data. There are many guidelines and tips <ref> [34, 35, 7] </ref> for using graphics but statistical packages do not implement them; they merely reference them in their manual.
Reference: [35] <author> Edward R. Tufte. </author> <title> Envisioning Information. </title> <publisher> Graphics Press, </publisher> <year> 1990. </year>
Reference-contexts: Graphics such as bar and column graphs, pie charts, line or points plots are well known and often used because modern computer tools like spreadsheets [26] or statistical graphic packages [33] make them very easy to produce from tabular data. There are many guidelines and tips <ref> [34, 35, 7] </ref> for using graphics but statistical packages do not implement them; they merely reference them in their manual.
Reference: [36] <author> J. Webb. </author> <title> Using Excel Visual Basic for Applications. </title> <institution> Que Corporation, </institution> <note> second edition, </note> <year> 1996. </year>
Reference-contexts: We have chosen Excel [26] because of its availability on both Macintosh and PCs and because of the facilities for adding new functionalities using Visual Basic <ref> [36] </ref> which now offers a very good programming environment. Excel already has powerful tools for creating (too) many kinds of graphics from tabular data, but they focus on the form of the graphic, the choice of an appropriate one is left to the experience and good taste of the user.
Reference: [37] <author> J. Weiner. BLAH, </author> <title> a system which explains its reasoning. </title> <journal> Artificial Intelligence, </journal> <volume> 15 </volume> <pages> 19-48, </pages> <year> 1980. </year>
Reference-contexts: Emphasis was put on strategic generation (structure and content selection) instead of final text output. About ten new rhetorical schemata were defined such as change, cause-effet, reinforcement or dependency. Like in expert systems explanation systems <ref> [37] </ref> for the explanations, SAGE must heavily prune 20 the dependency trees to create understandable texts. SAGE often generates quite complicated graphics that are not immediately obvious to the user. Mittal et al. [27] recently extended SAGE to produce a caption to interpret the structure of the graphic.
Reference: [38] <author> Gene Zelazny. </author> <title> Choosing & Using Charts. </title> <publisher> McKinsey & Company Inc., </publisher> <year> 1972. </year>
Reference-contexts: This work has had a deep influence on almost all major works [21, 31, 6] in the field of automatic presentation. A good reference on the effects of graphics upon a reader is Zelazny <ref> [38, 39] </ref> who defines a selection method for graphics depending on the information the writer wants to convey. Zelazny takes into account five types of elementary comparisons: decompositions (e.g. in percentage), positions (ordering of elements), evolution, repartition in categories and correlation.
Reference: [39] <author> Gene Zelazny. </author> <title> Dites-le avec des graphiques. </title> <publisher> Inter Editions, </publisher> <year> 1989. </year> <month> 23 </month>
Reference-contexts: This work has had a deep influence on almost all major works [21, 31, 6] in the field of automatic presentation. A good reference on the effects of graphics upon a reader is Zelazny <ref> [38, 39] </ref> who defines a selection method for graphics depending on the information the writer wants to convey. Zelazny takes into account five types of elementary comparisons: decompositions (e.g. in percentage), positions (ordering of elements), evolution, repartition in categories and correlation. <p> The writer is thus making a subjective choice as to what is more important. In our research, we have built a system, shown in figure 5, based on Zelazny's <ref> [39] </ref> classification of messages.
References-found: 39

