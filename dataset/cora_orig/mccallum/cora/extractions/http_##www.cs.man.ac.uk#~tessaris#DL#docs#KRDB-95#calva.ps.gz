URL: http://www.cs.man.ac.uk/~tessaris/DL/docs/KRDB-95/calva.ps.gz
Refering-URL: http://www.cs.man.ac.uk/~tessaris/DL/papers.html
Root-URL: http://www.cs.man.ac.uk
Email: fcalvanese,degiacomo,lenzerinig@dis.uniroma1.it  
Title: Increasing the Power of Structured Objects  
Author: Diego Calvanese and Giuseppe De Giacomo and Maurizio Lenzerini 
Address: Via Salaria 113, I-00198 Roma, Italy  
Affiliation: Dipartimento di Informatica e Sistemistica Universita di Roma "La Sapienza"  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> S. Abiteboul and A. Bonner. </author> <title> Objects and views. </title> <editor> In J. Clifford and R. King, editors, </editor> <booktitle> Proc. of ACM SIGMOD, </booktitle> <pages> pages 238-247, </pages> <address> New York (NY, USA), </address> <year> 1991. </year>
Reference-contexts: directions by offering the following possibilities: * To specify both necessary and sufficient conditions for an object to belong to a class; necessary conditions are generally used when defining the classes that constitute the schema, whereas the specification of views requires to state conditions that are both necessary and sufficient <ref> [1] </ref>.
Reference: [2] <author> S. Abiteboul and P. Kanellakis. </author> <title> Object identity as a query language primitive. </title> <booktitle> In Proc. of ACM SIG-MOD, </booktitle> <pages> pages 159-173, </pages> <year> 1989. </year>
Reference-contexts: Additionally, by means of ^, _, and :, we are allowed not only to include intersection and union in structure expressions (as in <ref> [2] </ref>), but also to refer to all entities that do not have a certain structure. Note that, since we allow for entities having multiple structure, intersection cannot be eliminated from the definition of structure expressions (contrast this property with the model presented in [2]). <p> and union in structure expressions (as in <ref> [2] </ref>), but also to refer to all entities that do not have a certain structure. Note that, since we allow for entities having multiple structure, intersection cannot be eliminated from the definition of structure expressions (contrast this property with the model presented in [2]). Class and view definitions are built out of structure expressions by asserting constraints on the allowed links and by specifying the methods that can be invoked on the instances of the class.
Reference: [3] <author> F. Bancilhon, C. Delobel, and P. Kanellakis. </author> <title> Building an Object-Oriented Database System The story of O 2 . Morgan Kaufmann, </title> <address> Los Altos, </address> <year> 1992. </year>
Reference-contexts: We argue that the ability to define finite recursive structures in our model is an important enhancement with respect to traditional object-oriented models, where such structures, if present at all, are ad hoc additions requiring a special treatment by the reasoning procedures <ref> [6, 3] </ref>. Well-foundedness-declarations also allow us to represent well-founded binary relations. An interesting example of such possibility is the definition of the part-of relation, which has a special importance in modeling complex applications [8]. This relation is characterized by being finite, antisymmetric, ir-reflexive, and transitive. <p> be carried out by relying on the basic reasoning task introduced in the previous section. 5 Concluding remarks The combination of constructs of the CVL data model makes it powerful enough to capture most common object-oriented and semantic data models presented in the literature [12, 11], such as O 2 <ref> [3] </ref>, ODMG [6], and the entity-relationship model [7]. In fact, by adding suitable definitions to a schema we can impose conditions that reflect the assumptions FiniteTree FiniteBinTree FiniteDAG Graph BinGraph made in the various models, forcing such a schema to be interpreted exactly in the way required by each model.
Reference: [4] <author> D. Calvanese, G. De Giacomo, and M. Lenzerini. </author> <title> Structured objects: </title> <booktitle> Modeling and reasoning, </booktitle> <year> 1995. </year> <note> To appear in Proc. of DOOD-95. </note>
Reference-contexts: Space limitations prevent us from exposing our inference method, which is based on previous work relating formalisms used in knowledge representation and databases to modal logics developed for modeling properties of programs [5, 9, 10]. For more details we refer to <ref> [4] </ref>. 4 Expressivity of CV L In this section we discuss by means of examples the main distinguished features of CVL with the goal of illustrating its expressivity. 4.1 Object polymorphism In CVL, entities can be seen as having different structures simultaneously.
Reference: [5] <author> D. Calvanese, M. Lenzerini, and D. Nardi. </author> <title> A unified framework for class based representation formalisms. </title> <editor> In J. Doyle, E. Sandewall, and P. Torasso, editors, </editor> <booktitle> Proc. of KR-94, </booktitle> <pages> pages 109-120, </pages> <address> Bonn, 1994. </address> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos. </address>
Reference-contexts: Space limitations prevent us from exposing our inference method, which is based on previous work relating formalisms used in knowledge representation and databases to modal logics developed for modeling properties of programs <ref> [5, 9, 10] </ref>.
Reference: [6] <author> R. G. G. Cattell, </author> <title> editor. The Object Database Standard: ODMG-93. </title> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos, </address> <year> 1994. </year> <note> Release 1.1. </note>
Reference-contexts: We argue that the ability to define finite recursive structures in our model is an important enhancement with respect to traditional object-oriented models, where such structures, if present at all, are ad hoc additions requiring a special treatment by the reasoning procedures <ref> [6, 3] </ref>. Well-foundedness-declarations also allow us to represent well-founded binary relations. An interesting example of such possibility is the definition of the part-of relation, which has a special importance in modeling complex applications [8]. This relation is characterized by being finite, antisymmetric, ir-reflexive, and transitive. <p> out by relying on the basic reasoning task introduced in the previous section. 5 Concluding remarks The combination of constructs of the CVL data model makes it powerful enough to capture most common object-oriented and semantic data models presented in the literature [12, 11], such as O 2 [3], ODMG <ref> [6] </ref>, and the entity-relationship model [7]. In fact, by adding suitable definitions to a schema we can impose conditions that reflect the assumptions FiniteTree FiniteBinTree FiniteDAG Graph BinGraph made in the various models, forcing such a schema to be interpreted exactly in the way required by each model.
Reference: [7] <author> P. P. Chen. </author> <title> The Entity-Relationship model: Toward a unified view of data. </title> <journal> ACM Trans. on Database Systems, </journal> <volume> 1(1) </volume> <pages> 9-36, </pages> <month> Mar. </month> <year> 1976. </year>
Reference-contexts: basic reasoning task introduced in the previous section. 5 Concluding remarks The combination of constructs of the CVL data model makes it powerful enough to capture most common object-oriented and semantic data models presented in the literature [12, 11], such as O 2 [3], ODMG [6], and the entity-relationship model <ref> [7] </ref>. In fact, by adding suitable definitions to a schema we can impose conditions that reflect the assumptions FiniteTree FiniteBinTree FiniteDAG Graph BinGraph made in the various models, forcing such a schema to be interpreted exactly in the way required by each model.
Reference: [8] <author> V. Christophides, S. Abiteboul, S. Cluet, and M. Scholl. </author> <title> From structured documents to novel query facilities. </title> <editor> In R. T. Snodgrass and M. Winslett, editors, </editor> <booktitle> Proc. of ACM SIGMOD, </booktitle> <pages> pages 313-324, </pages> <address> Minneapolis (Minnesota, USA), </address> <year> 1994. </year>
Reference-contexts: Well-foundedness-declarations also allow us to represent well-founded binary relations. An interesting example of such possibility is the definition of the part-of relation, which has a special importance in modeling complex applications <ref> [8] </ref>. This relation is characterized by being finite, antisymmetric, ir-reflexive, and transitive. The first three properties are captured by imposing well-foundedness, while transitivity is handled by a careful use of the fl operator.
Reference: [9] <author> G. De Giacomo and M. Lenzerini. </author> <title> Boosting the correspondence between description logics and propositional dynamic logics. </title> <booktitle> In Proc. of AAAI-94, </booktitle> <pages> pages 205-212. </pages> <publisher> AAAI Press/The MIT Press, </publisher> <year> 1994. </year>
Reference-contexts: Space limitations prevent us from exposing our inference method, which is based on previous work relating formalisms used in knowledge representation and databases to modal logics developed for modeling properties of programs <ref> [5, 9, 10] </ref>.
Reference: [10] <author> G. De Giacomo and M. Lenzerini. </author> <title> What's in an aggregate: Foundations for description logics with tuples and sets. </title> <booktitle> In Proc. of IJCAI-95, </booktitle> <year> 1995. </year> <note> To appear. </note>
Reference-contexts: Space limitations prevent us from exposing our inference method, which is based on previous work relating formalisms used in knowledge representation and databases to modal logics developed for modeling properties of programs <ref> [5, 9, 10] </ref>.
Reference: [11] <author> R. Hull. </author> <title> A survey of theoretical research on typed complex database objects. </title> <editor> In J. Paredaens, editor, </editor> <booktitle> Databases, </booktitle> <pages> pages 193-256. </pages> <publisher> Academic Press, </publisher> <year> 1988. </year>
Reference-contexts: All these inferences can be carried out by relying on the basic reasoning task introduced in the previous section. 5 Concluding remarks The combination of constructs of the CVL data model makes it powerful enough to capture most common object-oriented and semantic data models presented in the literature <ref> [12, 11] </ref>, such as O 2 [3], ODMG [6], and the entity-relationship model [7].
Reference: [12] <author> R. B. Hull and R. King. </author> <title> Semantic database modelling: Survey, applications and research issues. </title> <journal> ACM Computing Surveys, </journal> <volume> 19(3) </volume> <pages> 201-260, </pages> <month> Sept. </month> <year> 1987. </year>
Reference-contexts: All these inferences can be carried out by relying on the basic reasoning task introduced in the previous section. 5 Concluding remarks The combination of constructs of the CVL data model makes it powerful enough to capture most common object-oriented and semantic data models presented in the literature <ref> [12, 11] </ref>, such as O 2 [3], ODMG [6], and the entity-relationship model [7].
Reference: [13] <author> C. Lecluse and P. Richard. </author> <title> Modeling complex structures in object-oriented databases. </title> <booktitle> In Proc. of PODS-89, </booktitle> <pages> pages 362-369, </pages> <year> 1989. </year>
Reference-contexts: In general, schema level reasoning in object-oriented data models can be performed by means of relatively simple algorithms (see for example <ref> [13] </ref>). The richness of CVL makes reasoning much more difficult with respect to usual data models. Indeed the question arises if consistency checking in CVL is decidable at all. One of our main results is a sound, complete, and terminating reasoning procedure to perform consistency checking.
Reference: [14] <author> M. Staudt, M. Nissen, and M. Jeusfeld. </author> <title> Query by class, rule and concept. </title> <journal> J. of Applied Intelligence, </journal> <volume> 4(2) </volume> <pages> 133-157, </pages> <year> 1994. </year>
Reference-contexts: A class definition expresses necessary conditions for an entity to be an instance of the defined class, whereas a view definition characterizes exactly (through necessary and sufficient conditions) the entities belonging to the defined view. Our concept of view bears similarity to the concept of query class of <ref> [14] </ref>.
Reference: [15] <author> W. A. Woods and J. G. Schmolze. </author> <title> The KL-ONE family. </title> <editor> In F. W. Lehmann, editor, </editor> <booktitle> Semantic Networks in Artificial Intelligence, </booktitle> <pages> pages 133-178. </pages> <publisher> Pergamon Press, </publisher> <year> 1992. </year> <note> Published as a special issue of Computers & Mathematics with Applications, Volume 23, Number 2-9. </note>
Reference-contexts: Such a declaration allows for representing inclusions between attributes, and is a restricted form of role-value map, a type of constraint commonly used in knowledge representation formalisms <ref> [15] </ref>. 3 A key-declaration has the form: key A 1 ; : : : ; A m ; A 0 m 0 ; 1 ; : : : ; U 0 It is allowed only in class definitions and states that each entity o in C is linked to at least
References-found: 15

