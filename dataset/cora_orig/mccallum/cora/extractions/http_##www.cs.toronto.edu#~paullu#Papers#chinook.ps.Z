URL: http://www.cs.toronto.edu/~paullu/Papers/chinook.ps.Z
Refering-URL: http://www.cs.toronto.edu/~paullu/publications.html
Root-URL: http://www.cs.toronto.edu
Title: A World Championship Caliber Checkers Program  
Author: Jonathan Schaeffer Joseph Culberson Norman Treloar Brent Knight Paul Lu Duane Szafron 
Address: Edmonton, Alberta Canada T6G 2H1  
Affiliation: Department of Computing Science University of Alberta  
Abstract: The checkers program Chinook has won the right to play a 40-game match for the World Checkers Championship against Dr. Marion Tinsley. This was earned by placing second, after Dr. Tinsley, at the 1990 U.S. National Open, the biennial event used to determine a challenger for the Championship. This is the first time a program has earned the right to contest for a human World Championship. In an exhibition match played in December 1990, Tinsley narrowly defeated Chinook 7.5 - 6.5. This paper describes the program, the research problems encountered and our solutions. Many of the techniques used for computer chess are directly applicable to computer checkers. However, the problems of building a world championship caliber program force us to address some issues that have, to date, been largely ignored by the computer chess community. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> T.S. Anantharaman, M.S. Campbell and F-h. Hsu, </author> <title> Singular Extensions: Adding Selectivity to Brute-Force Searching, </title> <booktitle> AAAI Spring Symposium Proceedings, </booktitle> <year> 1988, </year> <pages> 8-13. </pages> <note> Also published in the Journal of the International Computer Chess Association 11, 4 (1988), 135-143 and in Artificial Intelligence 43, </note> <month> 1 </month> <year> (1990), </year> <pages> 99-110. </pages>
Reference-contexts: Sacrifices of a single checker are common, but sacrificing two or more checkers is very rare. Lines with a material deficit can usually be curtailed quite quickly using forward pruning . Experiments with application-independent methods for extending the search along interesting lines, such as singular extensions <ref> [1] </ref>, showed little benefit. Instead, Chinook uses search results to identify positions where one move is forced (all other moves have a significantly worse minimax value), without the research overhead of singular extensions.
Reference: 2. <author> T.S. Anantharaman, </author> <title> A Statistical Study of Selective Min-Max Search, </title> <type> Ph.D. thesis, </type> <institution> Department of Computer Science, Carnegie Mellon University, </institution> <year> 1990. </year>
Reference-contexts: enough, roughly 1 in 5 positions, that at first we thought there was a bug in the - 10 - program! Of course, we could continue to "improve" the evaluation function so that it consistently plays the human moves (it isn't obvious that this is a good thing to do <ref> [2] </ref>), however this will negate a strength of the program. The ability to select moves without the biases of human preconceptions (particularly in the form of published play) allows the program to continually surprise the opponent.
Reference: 3. <author> D.F. Beal, </author> <title> A Generalized Quiescence Search Algorithm, </title> <booktitle> Artificial Intelligence 43, 1 (1990), </booktitle> <pages> 85-98. </pages> <note> An earlier version of this paper appeared in Advances in Computer Chess 5, </note> <editor> D.F. Beal (ed.), </editor> <publisher> Elsevier Science Publishers, Amsterdam, </publisher> <pages> 65-79. </pages>
Reference-contexts: Search The program uses all the standard computer chess search techniques: alpha-beta search [15] with the history heuristic [26], transposition tables and iterative deepening [29]. Considerable effort has been devoted to finding heuristics for extending and truncating the search. Null-move searches <ref> [3, 12] </ref> are useful in chess for achieving large reductions in the search trees, but cannot be reliably used by checkers programs because zugzwang is an important aspect of all stages of the game. In checkers, a material deficit is more significant than in chess.
Reference: 4. <author> H.J. Berliner, </author> <title> On the Construction of Evaluation Functions for Large Domains, </title> <booktitle> 6th International Joint Conference on Artificial Intelligence, </booktitle> <year> 1979, </year> <pages> 53-55. </pages>
Reference-contexts: However, using all 5 evaluation functions (based on the number of pieces on the board of the position being evaluated) gives rise to the blemish effect <ref> [4] </ref>. The blemish effect occurs when there isn't a smooth transition from one evaluation function to another. An exchange of men can result in a different function being used and a large change in the positional evaluation. <p> Current work involves trying to determine the type of - 11 - nonlinear evaluation function that Chinook requires and ways of automatically tuning the weights of the parameters. Berliner's SNAC function is the starting point for our work <ref> [4] </ref>. Obviously our evaluation function is currently good enough to be competitive with the best players in the world. However, there is one vital piece of knowledge missing.
Reference: 5. <author> H. Berliner, </author> <title> Backgammon Computer Program Beats World Champion, </title> <booktitle> Artificial Intelligence 14, </booktitle> <year> (1980), </year> <pages> 205-220. </pages>
Reference-contexts: This is the first time a computer program has earned the right to play for a human World Championship. Programs have played World Champions before, for example BKG 9 at backgammon <ref> [5] </ref> and Deep Thought at chess [16], but these were exhibition events with no title at stake. It appears that a Chi-nook - Tinsley match will take place, although it is not clear whether the World Championship will be at stake.
Reference: 6. <author> M. Bryant, </author> <title> personal communication to Paul Lu, </title> <address> London, </address> <year> 1990. </year>
Reference-contexts: For example, the Belle chess program had a book of over 300,000 positions! The checkers program Colossus (Martin Bryant, Great Britain) has a book of over 34,000 positions that were manually entered <ref> [6] </ref>. A problem with this approach is that the program will follow published play, usually familiar to the humans. Grandmaster Leo Levitt remarked that Chinook, without an opening book, found lots of interesting opening moves that were playable and guaranteed to throw the human opponent quickly onto his own resources.
Reference: 7. <author> I. Chernev, </author> <title> The Compleat Draughts Player, </title> <publisher> Oxford University Press, </publisher> <year> 1981. </year>
Reference-contexts: Chess and Checkers There are many variants on the game of checkers, of which two, 8 8 (draughts) and 10 10 (international checkers), are the most popular. 8 8 checkers is played on a 64-square checkerboard of which only half the squares (black or white squares) are used <ref> [7] </ref>. Checkers, like pawns in chess, can only move forward until they reach the last rank whereupon they become kings. Kings can move one square in any direction. A major difference is that in checkers capture moves are forced. <p> In checkers, not knowing the openings may lead to a quick loss. 2) Usually there is a fine line between a win and a draw. Checkers endgames can be long and subtle. For example, the so-called "Second Position" <ref> [7] </ref>, a textbook example with 3 pieces against 3 pieces, is a basic position that every checkers player knows. The winning side must play 40 accurate moves to reach an easily winning position. Even a slight deviation from the correct sequence may throw away the win.
Reference: 8. <author> M.V. Donskoy, </author> <title> Fundamental Concepts of Search, </title> <journal> Journal of the International Computer Chess Association 13, </journal> <volume> 3 (1990), </volume> <pages> 133-137. </pages>
Reference: 9. <author> R. Fortman, </author> <title> Basic Checkers, </title> <editor> R. Fortman, </editor> <year> 1982. </year> <note> Available from the American Checker Federation. </note>
Reference-contexts: However, in a few positions, the program is incapable of finding the right move, given the usual 3 minutes per move. In some cases, it took decades before humans were able to conclusively ascertain the correct move. For example, in the so-called White Doctor opening <ref> [9] </ref>, many decades of analysis has convinced the checker community that the correct line requires one side to sacrifice a man. Chinook analyzed the critical position for 48 hours, failing to search deep enough to uncover the hidden subtleties in the position.
Reference: 10. <author> R. Gasser, </author> <title> Applying Retrograde Analysis to Nine Men's Morris, </title> <booktitle> in Heuristic Programming in Artificial Intelligence; The Second Computer Olympiad, </booktitle> <editor> D.N.L. Levy and D.F. Beal (ed.), </editor> <publisher> Ellis Horwood, </publisher> <address> London, </address> <year> 1991, </year> <pages> 161-173. </pages>
Reference-contexts: This method has the property that a non-capture move always results in moving from an odd-numbered to an even-numbered position (or visa-versa), meaning a small search can uncover the value of the missing odd-numbered positions. Run-length encoding (similar to that used for Nine Man's Morris <ref> [10] </ref>) is used to convert the reduced database into a more compact form. We are currently investigating other techniques for reducing the size of the databases.
Reference: 11. <author> J.J. Gillogly, </author> <title> Performance Analysis of the Technology Chess Program, </title> <type> Ph.D. thesis, </type> <institution> Department of Computer Science, Carnegie Mellon University, </institution> <year> 1978. </year>
Reference-contexts: In contrast, the Deep Thought chess program achieves 10 or 11 ply in the middlegame using special-purpose VLSI hardware [13]. In chess, an additional ply of search usually costs a factor of 4-8 in compute time, depending on whether searching to an odd or even depth <ref> [11] </ref> (although with search extensions this difference tends to be less pronounced). Chinook performs iterative deepening 2 ply at a time to factor out some of the instabilities that arise when searching to odd and even depths.
Reference: 12. <author> G. Goetsch and M.S. Campbell, </author> <title> Experiments with the Null-Move Heuristic, in Computers, Chess and Cognition, T.A. </title> <editor> Marsland and J. Schaeffer (ed.), </editor> <publisher> Springer-Verlag, </publisher> <year> 1990. </year> <note> Also available in the AAAI Spring Symposium Proceedings, </note> <year> 1988, </year> <pages> 14-18. </pages>
Reference-contexts: Search The program uses all the standard computer chess search techniques: alpha-beta search [15] with the history heuristic [26], transposition tables and iterative deepening [29]. Considerable effort has been devoted to finding heuristics for extending and truncating the search. Null-move searches <ref> [3, 12] </ref> are useful in chess for achieving large reductions in the search trees, but cannot be reliably used by checkers programs because zugzwang is an important aspect of all stages of the game. In checkers, a material deficit is more significant than in chess.
Reference: 13. <author> F-h. Hsu, M.S. Campbell, T.S. Anantharaman and A. Nowatzyk, </author> <title> Deep Thought, in Computers, Chess and Cognition, T.A. </title> <editor> Marsland and J. Schaeffer (ed.), </editor> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1990, </year> <pages> 55-78. </pages>
Reference-contexts: Typically, 10% of the leaf nodes in a search tree are over 30 ply from the root of the tree and occasionally 40 ply deep. In contrast, the Deep Thought chess program achieves 10 or 11 ply in the middlegame using special-purpose VLSI hardware <ref> [13] </ref>. In chess, an additional ply of search usually costs a factor of 4-8 in compute time, depending on whether searching to an odd or even depth [11] (although with search extensions this difference tends to be less pronounced).
Reference: 14. <author> P. Jansen, </author> <title> Problematic Positions and Speculative Play, in Computers, Chess and Cognition, T.A. </title> <editor> Marsland and J. Schaeffer (ed.), </editor> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1990, </year> <pages> 169-182. </pages>
Reference-contexts: One could factor in psychological considerations, such as measuring how difficult it would be for the opponent to find the right moves. This is an important problem that has received scant attention in the literature <ref> [14] </ref>. At the U.S. National Open, Chinook let several opponents off easy by choosing a drawing move that ended their difficulties. In one game, the opponent thought he was lost! Currently, Chinook takes the first drawing line it comes across.
Reference: 15. <author> D.E. Knuth and R.W. Moore, </author> <title> An Analysis of Alpha-Beta Pruning, </title> <booktitle> Artificial Intelligence 6, </booktitle> <year> (1975), </year> <pages> 293-326. </pages>
Reference-contexts: For the U.S. National Open, where Chinook achieved its historic performance, the program ran on an IBM RS/6000 Model 530 workstation, with 32 megabytes of RAM. 3.1. Search The program uses all the standard computer chess search techniques: alpha-beta search <ref> [15] </ref> with the history heuristic [26], transposition tables and iterative deepening [29]. Considerable effort has been devoted to finding heuristics for extending and truncating the search.
Reference: 16. <author> D. Kopec, </author> <title> Advances in Man-Machine Play, in Computers, Chess and Cognition, T.A. </title> <editor> Marsland and J. Schaeffer (ed.), </editor> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1990, </year> <pages> 9-32. </pages>
Reference-contexts: This is the first time a computer program has earned the right to play for a human World Championship. Programs have played World Champions before, for example BKG 9 at backgammon [5] and Deep Thought at chess <ref> [16] </ref>, but these were exhibition events with no title at stake. It appears that a Chi-nook - Tinsley match will take place, although it is not clear whether the World Championship will be at stake. Neither the American Checker Federation (ACF) or English Draughts Association (EDA) will sanction the event.
Reference: 17. <author> D.N.L. Levy, </author> <title> Improving the Performance of Endgame Databases, </title> <journal> Journal of the International Computer Chess Association 10, </journal> <volume> 4 (1987), </volume> <pages> 191-192. </pages>
Reference: 18. <author> C.A. Marris, </author> <title> Compressing a Chess-endgame Database, </title> <journal> Journal of the International Computer Chess Association 12, </journal> <volume> 1 (1989), </volume> <pages> 22-24. </pages>
Reference-contexts: There are considerable difficulties to be overcome in computing databases this large, and in efficiently representing the results in a compact form that is usable in real time. Work on chess databases has not yet addressed the problems of compression for real-time access (for example, <ref> [18, 31] </ref>). Most chess databases are off-line because of their size; few programs use endgame databases for anything more than 3 or 4 pieces on the board. Although our endgame databases represent perfect knowledge, they do not imply perfect play in the endgame.
Reference: 19. <author> T.A. Marsland, </author> <title> Evaluation-Function Factors, </title> <journal> Journal of the International Computer Chess Association 8, </journal> <volume> 2 (1985), </volume> <pages> 47-57. </pages>
Reference-contexts: Initially, we attempted to tune the evaluation function to maximize the number of times Chinook selected the same move as the Grandmaster, over all the games. We used the methods developed by the Deep Thought chess team ([13] building on the results of [20] and <ref> [19] </ref>) which treats the problem as an over-determined system of equations to be solved where one dimension is the number of positions used and the other is the number of heuristic parameters.
Reference: 20. <author> M. van der Meulen, </author> <title> Weight Assessment in Evaluation Functions, </title> <booktitle> in Advances in Computer Chess 5, </booktitle> <editor> D.F. Beal (ed.), </editor> <publisher> Elsevier Science Publishers, </publisher> <address> Amsterdam, </address> <year> 1989, </year> <pages> 81-89. </pages>
Reference-contexts: Initially, we attempted to tune the evaluation function to maximize the number of times Chinook selected the same move as the Grandmaster, over all the games. We used the methods developed by the Deep Thought chess team ([13] building on the results of <ref> [20] </ref> and [19]) which treats the problem as an over-determined system of equations to be solved where one dimension is the number of positions used and the other is the number of heuristic parameters.
Reference: 21. <author> D. Michie, </author> <title> A Theory of Evaluative Comments in Chess with a Note on Minimaxing, </title> <journal> The Computer Journal 24, </journal> <volume> 3 (1981), </volume> <pages> 278-286. </pages>
Reference: 22. <author> A.L. Samuel, </author> <title> Some Studies in Machine Learning Using the Game of Checkers, </title> <journal> IBM Journal of Research and Development 3, </journal> <volume> 3 (1959), </volume> <pages> 210-229. </pages> <note> Also in Computers and Thought, E.A. </note> <editor> Feigenbaum and J. Feldman (eds.), </editor> <publisher> McGraw-Hill, </publisher> <year> 1963, </year> <pages> 71-105. - 19 </pages> - 
Reference: 23. <author> A.L. Samuel, </author> <title> Some Studies in Machine Learning Using the Game of Checkers II - Recent Progress, </title> <journal> IBM Journal of Research and Development 11, </journal> <volume> 6 (1967), </volume> <pages> 601-617. </pages>
Reference: 24. <author> A.L. Samuel, </author> <title> AI, Where It Has Been and Where It Is Going, </title> <booktitle> International Joint Conference on Artificial Intelligence, </booktitle> <year> 1983, </year> <pages> 1152-1157. </pages>
Reference: 25. <author> J. Schaeffer, </author> <title> Distributed Game-Tree Searching, </title> <journal> Journal of Parallel and Distributed Computing 6, </journal> <volume> 2 (1989), </volume> <pages> 90-114. </pages>
Reference-contexts: The branching factor also has important implications for parallel alpha-beta search algorithms. Current algorithms derive much of their parallelism by tree-splitting, searching each of the siblings of a position in parallel <ref> [25] </ref>. However, a lower branching factor results in fewer units of work available to be computed in parallel.
Reference: 26. <author> J. Schaeffer, </author> <title> The History Heuristic and Alpha-Beta Search Enhancements in Practice, </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence 11, </journal> <volume> 11 (1989), </volume> <pages> 1203-1212. </pages>
Reference-contexts: For the U.S. National Open, where Chinook achieved its historic performance, the program ran on an IBM RS/6000 Model 530 workstation, with 32 megabytes of RAM. 3.1. Search The program uses all the standard computer chess search techniques: alpha-beta search [15] with the history heuristic <ref> [26] </ref>, transposition tables and iterative deepening [29]. Considerable effort has been devoted to finding heuristics for extending and truncating the search.
Reference: 27. <author> J. Schaeffer, J. Culberson, N. Treloar, B. Knight, P. Lu and D. Szafron, </author> <title> Reviving the Game of Checkers, </title> <booktitle> in Heuristic Programming in Artificial Intelligence; The Second Computer Olympiad, </booktitle> <editor> D.N.L. Levy and D.F. Beal (ed.), </editor> <publisher> Ellis Horwood, </publisher> <address> London, </address> <year> 1991, </year> <pages> 119-136. </pages>
Reference-contexts: With only a few exceptions (the Duke program being notable [32]), little effort has been devoted to computer checkers since Samuel's pioneering effort. Chinook is a checkers program (8 8 draughts) developed at the University of Alberta <ref> [27] </ref>. The project began in June 1989 with the short-term goal of developing a program capable of defeating the human World Champion, and the long-term goal of solving the game.
Reference: 28. <author> J. Schaeffer, </author> <title> Checkers: A Preview of What Will Happen in Chess?, </title> <journal> Journal of the International Computer Chess Association 14, </journal> <volume> 2 (1991), </volume> <pages> 71-78. </pages>
Reference-contexts: Many of the ideas and techniques transfer easily from chess to checkers and Chinook has benefited greatly from the wealth of computer chess research. However, some of the techniques do not transfer well between the two problem domains <ref> [28] </ref>, thus posing the inevitable question of the generality of computer chess methods. As well, many of the problems that are proving difficult to solve in chess may be workable in the simpler domain of checkers.
Reference: 29. <author> D.J. </author> <title> Slate and L.R. Atkin, Chess 4.5The Northwestern University Chess Program, in Chess Skill in Man and Machine, </title> <editor> P. Frey (ed.), </editor> <publisher> Springer-Verlag, </publisher> <year> 1977, </year> <pages> 82-118. </pages>
Reference-contexts: National Open, where Chinook achieved its historic performance, the program ran on an IBM RS/6000 Model 530 workstation, with 32 megabytes of RAM. 3.1. Search The program uses all the standard computer chess search techniques: alpha-beta search [15] with the history heuristic [26], transposition tables and iterative deepening <ref> [29] </ref>. Considerable effort has been devoted to finding heuristics for extending and truncating the search.
Reference: 30. <author> K. Thompson, </author> <title> Retrograde Analysis of Certain Endgames, </title> <journal> Journal of the International Computer Chess Association 9, </journal> <volume> 3 (1986), </volume> <pages> 131-139. </pages>
Reference-contexts: Fortunately, checkers appears to have less diversity in the choice of long-range plans than in chess, making it a smaller, but still interesting problem. 3.3. Databases Endgame databases are a computer-generated collection of positions with a proven game-theoretic value and were pioneered in computer chess <ref> [30] </ref>. Chinook has access to the entire 6-piece databases, roughly 2. 5 10 9 positions. Whenever a position with 6 or fewer men on the board occurs, the program can look it up in the database and return an exact win, loss or draw value.
Reference: 31. <author> K. Thompson, </author> <title> Chess Endgames Volume 1, </title> <institution> available from the author at AT&T Bell Laboratories. </institution>
Reference-contexts: There are considerable difficulties to be overcome in computing databases this large, and in efficiently representing the results in a compact form that is usable in real time. Work on chess databases has not yet addressed the problems of compression for real-time access (for example, <ref> [18, 31] </ref>). Most chess databases are off-line because of their size; few programs use endgame databases for anything more than 3 or 4 pieces on the board. Although our endgame databases represent perfect knowledge, they do not imply perfect play in the endgame.
Reference: 32. <author> T. Truscott, </author> <title> The Duke Checkers Program, </title> <institution> Duke University report, </institution> <year> 1978. </year>
Reference-contexts: Unfortunately, this single moment of human oversight in one game was not representative of the relative strengths of the best humans and the best checkers pro grams. With only a few exceptions (the Duke program being notable <ref> [32] </ref>), little effort has been devoted to computer checkers since Samuel's pioneering effort. Chinook is a checkers program (8 8 draughts) developed at the University of Alberta [27].
References-found: 32

