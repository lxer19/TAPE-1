URL: http://www.insa-lyon.fr/People/LISI/patrick/CDB97.ps
Refering-URL: http://www.cs.toronto.edu/~mendel/dwbib.html
Root-URL: 
Email: fmohand,patrick,crigg@lisi.insa-lyon.fr  
Phone: Tel 72 43 85 88 Fax: 72 43 87 13  
Title: A Rule-Based CQL for 2-Dimensional Tables  
Author: Mohand-Sad Hacid, Patrick Marcel, and Christophe Rigotti 
Address: B^atiment 501, F-69621 Villeurbanne Cedex  
Affiliation: Laboratoire d'Ingenierie des Systemes d'Information INSA Lyon,  
Abstract: We describe the core of a rule-based CQL, devoted to the manipulation of 2-dimensional tabular databases. The rules provide a simple and declarative way to restructure and query tables, and the constraints allow to define cell contents by formulas over concrete domains. We define a model-theoretic semantics and develop an equivalent fixpoint theory that leads to a naive evaluation procedure.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> S. Abiteboul and S. Grumbach. </author> <title> A rule-based language with functions and sets. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 16(1) </volume> <pages> 1-30, </pages> <month> March </month> <year> 1991. </year>
Reference-contexts: Rule Satisfaction. Let cl be a rule A B 1 ; : : : ; B n == C, and I an interpretation. I satisfies cl, denoted I j= cl iff for each valuation -, if 8B i ; i 2 <ref> [1; : : : ; n] </ref>; -(B i ) 2 I, and -(C) is satisfiable, then -(A) 2 I. Model of a Program. An interpretation I is a model of a program P denoted I j= P , iff 8cl 2 P; I j= cl. <p> It should be noticed that even simple programs may have no model, as it is the case in other languages that allow some kind of monovaluation (e.g., Datalog with single-valued data functions [2], COL <ref> [1] </ref>). Example 11. The following program defines two different cell contents for the same cell reference and thus it has no model: a (b,c):e . The same kind of inconsistency can also arise from the use of constraints. Example 12.
Reference: 2. <author> S. Abiteboul and R. Hull. </author> <title> Data functions, datalog and negation. </title> <booktitle> In Proceedings of the ACM SIGMOD International Conference on Management of Data, </booktitle> <pages> pages 143-153, </pages> <address> Chicago, Illinois, USA, June 1988. </address> <publisher> ACM press. </publisher>
Reference-contexts: This difficulty has been overcome by combining techniques stemming from previous works done in the area of databases and logic programming: Intregation of constraint solving and logic as in CLP [9] and as in Datalog with constraints [10,12]. Semantics of "monovaluation" as in Datalog with single-valued data func tions <ref> [2] </ref>. - Higher-order syntax as in Hilog [5] allowing schema browsing as in F-logic [11]. The main contribution of this paper is twofold. Firstly, we define a model-theoretic declarative semantics, that allows a high level specification of tabular data manipulations. <p> An interpretation is a consistent set of ground atoms. This consistency criterion is drawn from the semantics of Datalog with single-valued data functions <ref> [2] </ref>. Valuation. <p> It should be noticed that even simple programs may have no model, as it is the case in other languages that allow some kind of monovaluation (e.g., Datalog with single-valued data functions <ref> [2] </ref>, COL [1]). Example 11. The following program defines two different cell contents for the same cell reference and thus it has no model: a (b,c):e . The same kind of inconsistency can also arise from the use of constraints. Example 12.
Reference: 3. <author> S. Abiteboul, R. Hull, and V. Vianu. </author> <title> Foundations of databases. </title> <publisher> Addison-Wesley, </publisher> <year> 1995. </year>
Reference-contexts: Program. A program is a finite set of range restricted rules. 3.2 Semantics In this section, we give a declarative model-theoretic semantics and an equivalent fixpoint-based operational semantics. This presentation is inspired by the presentation of Datalog made in <ref> [3] </ref>. Model-Theoretic Semantics. We note ref (A) the reference part of an atom A. Consistency and Interpretation.
Reference: 4. <author> R. Agrawal, A. Gupta, and S. Sarawagi. </author> <title> Modeling multidimensional databases. </title> <type> Research report, </type> <institution> IBM Almaden research center, </institution> <address> 650 Harry road, San Jose, CA 95120, </address> <year> 1996. </year>
Reference-contexts: Because of the growing interest in tabular models (e.g., OLAP [6]) the corresponding theoretical basis are currently investigated. Gyssens et al. [8] proposed a model of tabular database and an algebra for querying and restructuring it. Agrawal et al. <ref> [4] </ref> defined an algebra for providing On Line Analytical Processing capabilities on top of relational database systems.
Reference: 5. <author> W. Chen, M. Kifer, and D.S. Warren. HiLog: </author> <title> a foundation for higher-order logic programming. </title> <journal> Journal of Logic Programming, </journal> <volume> 15(3) </volume> <pages> 187-230, </pages> <month> February </month> <year> 1993. </year>
Reference-contexts: Semantics of "monovaluation" as in Datalog with single-valued data func tions [2]. - Higher-order syntax as in Hilog <ref> [5] </ref> allowing schema browsing as in F-logic [11]. The main contribution of this paper is twofold. Firstly, we define a model-theoretic declarative semantics, that allows a high level specification of tabular data manipulations. <p> More students ?- school (N,markmath)=X, school (N,group):gr2. and gives the following answer: ff N=mike, X=14 g; f N=alan, X=15 gg It should be noted that a higher-order syntax stemming from Hilog <ref> [5] </ref>, allows variables to range over atomic names used in column, row and table names. This provides for some kind of schema browsing abilities in the spirit of F-logic [11]. Selection criterion over a concrete domain can be expressed in a constraint language. Example 6.
Reference: 6. <author> E. F. Codd, S. B. Codd, and C. T. Salley. </author> <title> Providing olap (on-line analytical processing) to user-analysts: An IT mandate. </title> <address> White paper - URL:http://www.arborsoft.com/papers/coddTOC.html, </address> <year> 1993. </year>
Reference-contexts: This language provides a declarative way to specify tabular data manipulations. Its operational semantics can serve as a basis for the reuse of evaluation techniques proposed for deductive and constraint databases. Because of the growing interest in tabular models (e.g., OLAP <ref> [6] </ref>) the corresponding theoretical basis are currently investigated. Gyssens et al. [8] proposed a model of tabular database and an algebra for querying and restructuring it. Agrawal et al. [4] defined an algebra for providing On Line Analytical Processing capabilities on top of relational database systems.
Reference: 7. <author> R. Finkelstein. </author> <title> Understanding the need for on-line analytical servers. </title> <address> White paper - URL:http://www.arborsoft.com/papers/finkTOC.html, </address> <year> 1995. </year>
Reference: 8. <author> M. Gyssens, L. V. S. Lakshmanan, and I. N. Subramanian. </author> <title> Tables as a paradigm for querying and restructuring. </title> <booktitle> In Proceedings of the Fifteenth ACM Symposium on Principles of Database Systems, </booktitle> <address> Montreal, PQ, Canada, June 1996. </address> <publisher> ACM press. </publisher>
Reference-contexts: Its operational semantics can serve as a basis for the reuse of evaluation techniques proposed for deductive and constraint databases. Because of the growing interest in tabular models (e.g., OLAP [6]) the corresponding theoretical basis are currently investigated. Gyssens et al. <ref> [8] </ref> proposed a model of tabular database and an algebra for querying and restructuring it. Agrawal et al. [4] defined an algebra for providing On Line Analytical Processing capabilities on top of relational database systems.
Reference: 9. <author> J. Jaffar and J.-L. Lassez. </author> <title> Constraint logic programming. </title> <booktitle> In Proceedings of the Fourteenth ACM Symposium on Principles of Programming Languages, </booktitle> <pages> pages 111-119, </pages> <address> Munich, Germany, </address> <month> January </month> <year> 1987. </year>
Reference-contexts: Schema browsing (i.e., table, row and column names used as data). This difficulty has been overcome by combining techniques stemming from previous works done in the area of databases and logic programming: Intregation of constraint solving and logic as in CLP <ref> [9] </ref> and as in Datalog with constraints [10,12]. Semantics of "monovaluation" as in Datalog with single-valued data func tions [2]. - Higher-order syntax as in Hilog [5] allowing schema browsing as in F-logic [11]. The main contribution of this paper is twofold.
Reference: 10. <author> P. C. Kanellakis, G. M. Kuper, and P. Z. Revesz. </author> <title> Constraint query langages. </title> <booktitle> In Proceedings of the Ninth ACM Symposium on Principles of Database Systems, </booktitle> <pages> pages 299-313, </pages> <address> Nashville, Tennessee, USA, April 1990. </address> <publisher> ACM press. </publisher>
Reference: 11. <author> M. Kifer, G. Lausen, and J. Wu. </author> <title> Logical foundations of object-oriented and frame-based languages. </title> <journal> Journal of the ACM, </journal> <volume> 42(4) </volume> <pages> 741-843, </pages> <month> July </month> <year> 1995. </year>
Reference-contexts: Semantics of "monovaluation" as in Datalog with single-valued data func tions [2]. - Higher-order syntax as in Hilog [5] allowing schema browsing as in F-logic <ref> [11] </ref>. The main contribution of this paper is twofold. Firstly, we define a model-theoretic declarative semantics, that allows a high level specification of tabular data manipulations. Secondly, we give a formal operational semantics that is a basis for the reuse of evaluation methods developed for deductive databases and constraint databases. <p> Example 3. Ground atoms: school (kate,markmath)=15 school (kate, favoriteSubject):math It should be noted that tables, rows and columns are "reified": they belong to the same domain as cell contents. This technique stems from class reification done in F-logic <ref> [11] </ref>. It provides symmetric treatment to cell references and cell contents. The only restriction is that concrete values can not be used to form cell references. Tables. <p> This provides for some kind of schema browsing abilities in the spirit of F-logic <ref> [11] </ref>. Selection criterion over a concrete domain can be expressed in a constraint language. Example 6.
Reference: 12. <author> P. Z. Revesz. </author> <title> A closed form for datalog queries with integer order. </title> <editor> In S. Abiteboul and P. C. Kanellakis, editors, </editor> <booktitle> Proceedings of the Third International Conference on Database Theory, volume 470 of Lecture Notes in Computer Science, </booktitle> <pages> pages 187-201, </pages> <address> Paris, France, </address> <month> December </month> <year> 1990. </year> <note> Springer-Verlag. </note>
References-found: 12

