URL: http://www.cs.utexas.edu/users/vsam/replication.ps
Refering-URL: http://www.cs.utexas.edu/users/vsam/
Root-URL: 
Email: vsam@cs.utexas.edu  miranker@cs.utexas.edu  
Title: A Lower Bound Theorem for Indexing Schemes and its Application to Multidimensional Range Queries  
Author: Vasilis Samoladas Daniel P. Miranker 
Address: Austin  Austin  
Affiliation: The University of Texas at  The University of Texas at  
Abstract: Indexing schemes were proposed by Hellerstein, Koutsoupias and Papadimitriou [7] to model data indexing on external memory. Using indexing schemes, the complexity of indexing is quantified by two parameters: storage redundancy and access overhead. There is a tradeoff between these two parameters, in the sense that for some problems it is not possible for both of these to be low. In this paper we derive a lower-bounds theorem for arbitrary indexing schemes. We apply our theorem to the particular problem of d-dimensional range queries. We first resolve the open problem of [7] for a tight lower bound for 2-dimensional range queries and extend our lower bound to d-dimensional range queries. We then show, how, the construction in our lower-bounds proof may be exploited to derive indexing schemes for d-dimensional range queries, whose asymptotic complexity matches our lower bounds. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> L. Arge and J. S. Vitter. </author> <title> Optimal dynamic interval management in external memory. </title> <booktitle> In FOCS '96; 37th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 560-569. </pages> <publisher> IEEE, </publisher> <month> October </month> <year> 1996. </year>
Reference-contexts: In subsequent publications, [14, 13, 16, 17] there are presented asymptotically efficient dynamic algorithms for 2-sided, 3-sided and interval management queries. An optimal solution for the interval management problem has recently been found <ref> [1] </ref>. We also mention the work of [12], who use cost metrics similar to ours, to characterize the locality in external graph searching.
Reference: [2] <author> Don Batory and Jeff Thomas. P2: </author> <title> A lightweight DBMS generator. </title> <type> Technical Report TR-95-26, </type> <institution> University of Texas at Austin, Department of Computer Sciences, </institution> <month> June </month> <year> 1995. </year>
Reference-contexts: In related work, at least one effort is underway to gener fl This research is partially funded by DARPA, contract number: F30602-96-2-0226 and the Applied Research Laboratories, University of Texas, Internal Research and Development Program. ate such a system from formal specifications <ref> [2] </ref>. This effort, though it started in the database domain, has focused on main-memory data structures and admits, relative to databases, simple cost models. The database problem is more challenging, because it involves a tradeoff between two antagonistic aspects; storage redundancy, and access overhead.
Reference: [3] <author> Don S. Batory, J. R. Barnett, J. F. Garza, K. P. Smith, K. Tsukuda, B. C. Twochell, and T. E. Wise. </author> <title> Genesis: A reconfigurable database management system. </title> <type> Technical Report CS-TR-86-07, </type> <institution> University of Texas, Austin, </institution> <month> March 1, </month> <year> 1986. </year>
Reference-contexts: Thus, there is a renewed need to develop a deeper understanding of data structures and algorithms to speed operations on external memory. Database extensibility necessarily includes extensible development of index mechanisms. Engineering approaches comprising parameterized components and/or libraries of composable components are demonstrating successes <ref> [8, 3] </ref>. In related work, at least one effort is underway to gener fl This research is partially funded by DARPA, contract number: F30602-96-2-0226 and the Applied Research Laboratories, University of Texas, Internal Research and Development Program. ate such a system from formal specifications [2].
Reference: [4] <author> K. J. Falconer. </author> <title> Fractal geometry : mathematical foun dations and applications. </title> <publisher> Wiley, </publisher> <year> 1990. </year>
Reference-contexts: Agreeing on a definition of fractal dimension is crucial. In many occasions, implicit use of different definitions resulted in contradictory results and caused much confusion <ref> [4] </ref>. The definition used in the experiments of Faloutsos and Kamel is the box-counting fractal dimension, a standard approach for characterizing real, finite data sets. Although reasonable in an experimental setting, since it is easy to compute, it is probably not suitable for theoretical arguments.
Reference: [5] <author> C. Faloutsos and I. Kamel. </author> <title> Beyond uniformity and in dependence: Analysis of R- trees using the concept of fractal dimension. </title> <booktitle> In 13th Symposium | 1994 May: Minneapolis; MN, PROCEEDINGS OF THE ACM SIGACT SIGMOD SIGART SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS 1994, </booktitle> <pages> pages 4-13, </pages> <year> 1994. </year>
Reference-contexts: An optimal solution for the interval management problem has recently been found [1]. We also mention the work of [12], who use cost metrics similar to ours, to characterize the locality in external graph searching. Finally, we should mention the recent results of Faloutsos and Kamel <ref> [5] </ref>, on characterizing the performance of multidimensional range queries on R-trees, using the fractal dimension of real-world datasets. <p> It may be possible to refine the definition of flakes, and devise a combination procedure for (the refined) flakes. This approach may lead to results (and algorithms) on the performance of generalized hierarchical structures. 7.3 Uniformity and Independence In a pioneering article, Faloutsos and Kamel <ref> [5] </ref> demonstrated experimentally that the performance of existing indexing structures (R-trees) for multidimensional queries can be accurately predicted from the fractal dimension of the indexed dataset. Their results strongly suggest the existence of a theoretical average-case result, with the fractal dimension replacing the embedding dimension in the costs.
Reference: [6] <author> Volker Gaede and Oliver Guenther. </author> <title> Multidimensional access methods. </title> <type> Technical Report TR-96-043, </type> <institution> International Computer Science Institute, Berkeley, </institution> <address> CA, </address> <month> Octo-ber </month> <year> 1996. </year>
Reference-contexts: In both categories, most of the proposed algorithms are based on heuristics, and have relatively bad worst-case asymptotic performance. See <ref> [6] </ref> for an overview. This situation has been changing in the past few years, mostly due to the work of Kanellakis, and that of Vitter, and their collaborators.
Reference: [7] <author> J.M. Hellerstein, E. Koutsoupias, and C.H. Papadim itriou. </author> <title> On the analysis of indexing schemes. </title> <booktitle> In Proceedings of the Sixteenth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems (PODS), </booktitle> <year> 1997. </year>
Reference-contexts: The database problem is more challenging, because it involves a tradeoff between two antagonistic aspects; storage redundancy, and access overhead. In this paper, we adopt the model of indexing schemes, proposed in <ref> [7] </ref>. Indexing schemes are not data structures, as they do not model the problem of searching for the data. They only model the (spatial) locality issues that arise. <p> Finally, we discuss some open issues, and relate our results to recent developments in the area of indexing. 2 Related Work Our work continues on the work of Hellerstein, Koutsou-pias and Papadimitriou, presented in <ref> [7] </ref>. That work was in turn motivated by the work of Hellerstein, Naughton and Pfeffer on the Generalized Search Tree [8] (also known as GiST). GiST is an extensible indexing structure, organized as a balanced search tree. <p> The first problem-independent insight on external data structures was offered in <ref> [7] </ref>. Continuing on this work, Koutsoupias and Taylor [10] investigate the indexa-bility of 2-dimensional data sets, and derive asymptotically tight indexing schemes for these sets. In particular, they identify the Fibonacci workload as a worst-case workload for 2-dimensional indexing. The research into external data structures has largely been experimental. <p> experimental evidence, in contrast to our theoretical approach, but we feel that there is a strong correlation between their empirical observations and our theoretical models, and we will discuss this issue further in this paper. 3 Definitions and Notation We now define indexing schemes, departing slightly from the notation of <ref> [7] </ref>, and present some additional notation of our own. 3.1 Indexing Schemes Definition 3.1 A workload W is a tuple W = (I; Q), where I is a non-empty finite set, and Q is a set of subsets of I. <p> Also, we typically use U to represent sets of blocks. 3.2 Performance measures We now define the two performance measures that we use, departing slightly from the notation of <ref> [7] </ref>. <p> Also, for r = 1 it is easy to devise a problem where A = B, which is maximum (e.g. Q = B ). We will not comment further on the proposed framework, since it is thoroughly discussed in <ref> [7] </ref>. 4 The Redundancy Theorem We now turn our attention to an analysis of the above model, that will lead us to the Redundancy Theorem. We first state and prove a set-theoretic result that is of central importance to our work. <p> If fi &lt; a 2 2a , the number of subsets k is at most ff=fi. Proof: See <ref> [7] </ref> for a proof. 2 We are now ready to state and prove our main theorem. <p> From the theorem, r 2" n 2 " 2 1 n 2 (1 + log c B) = 2" 2" = 2" log (2" 2 A 2 ) and thus we have the ( log B log A ) result conjectured by <ref> [7] </ref>. 5.2 d-dimensional queries We can generalize the above technique to d-dimensional queries.
Reference: [8] <author> J.M. Hellerstein, J.E. Naughton, and A. Pfeffer. </author> <title> Gener alized search trees for database systems. </title> <booktitle> In Proceedings of the 21st VLDB Conference, </booktitle> <year> 1995. </year>
Reference-contexts: Thus, there is a renewed need to develop a deeper understanding of data structures and algorithms to speed operations on external memory. Database extensibility necessarily includes extensible development of index mechanisms. Engineering approaches comprising parameterized components and/or libraries of composable components are demonstrating successes <ref> [8, 3] </ref>. In related work, at least one effort is underway to gener fl This research is partially funded by DARPA, contract number: F30602-96-2-0226 and the Applied Research Laboratories, University of Texas, Internal Research and Development Program. ate such a system from formal specifications [2]. <p> That work was in turn motivated by the work of Hellerstein, Naughton and Pfeffer on the Generalized Search Tree <ref> [8] </ref> (also known as GiST). GiST is an extensible indexing structure, organized as a balanced search tree.
Reference: [9] <author> P. C. Kanellakis, S. Ramaswamy, D. Vengroff, E., and J. S. Vitter. </author> <title> Indexing for data models with constraints and classes. </title> <booktitle> In Proceedings of the Twelfth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems: </booktitle> <month> May 25-28, </month> <year> 1993, </year> <title> Washington, </title> <journal> DC, </journal> <volume> volume 12, </volume> <pages> pages 233-243, </pages> <year> 1993. </year>
Reference-contexts: See [6] for an overview. This situation has been changing in the past few years, mostly due to the work of Kanellakis, and that of Vitter, and their collaborators. We attribute the renewed interest in the fundamental results of <ref> [9] </ref>, where it was shown that indexing in new database paradigms, such as constraint databases, and databases with class hierarchies, can be reduced to special cases of multidimensional range searching.
Reference: [10] <author> E. Koutsoupias and David S. Taylor. </author> <title> Tight bounds for 2-dimensional indexing schemes. </title> <booktitle> In Proceedings of Symposium on Principles of Database Systems (PODS), </booktitle> <year> 1998. </year>
Reference-contexts: The first problem-independent insight on external data structures was offered in [7]. Continuing on this work, Koutsoupias and Taylor <ref> [10] </ref> investigate the indexa-bility of 2-dimensional data sets, and derive asymptotically tight indexing schemes for these sets. In particular, they identify the Fibonacci workload as a worst-case workload for 2-dimensional indexing. The research into external data structures has largely been experimental. <p> Although stronger than that of theorem 7.1, even this is not tight. Elsewhere in these proceedings, Koutsoupias and Taylor <ref> [10] </ref> show that logarithmic redundancy r = (log N ) is needed, if the access overhead is to be A &lt; B. Also, slightly higher redundancy r = 4 log (N=B) is sufficient for A 4, for any 2-dimensional workload. Thus, the trade-off for 2-dimensional workloads exhibits threshold behaviour. <p> Our Redundancy Theorem may be applicable to this problem, deriving interesting refinements to these complexities. The second open problem is that of extending these results to higher dimensions. In <ref> [10] </ref> it is conjectured that redundancy r = fi (log d1 N ) is required for d-dimensional workloads. <p> A natural question is to examine whether there exists in fact a stronger, worst-case result of a similar nature. This approach will further allow us to model multidimensional queries better that R d n or the fibonacci workload does, ameliorating the negative consequences of the results of <ref> [10] </ref>. On this subject, the authors of [10] state that a theoretical approach along these lines is not likely to succeed, and that in fact there is no relation between the fractal dimension of a point set and its indexability. Based on their own results, they show that: 1. <p> This approach will further allow us to model multidimensional queries better that R d n or the fibonacci workload does, ameliorating the negative consequences of the results of <ref> [10] </ref>. On this subject, the authors of [10] state that a theoretical approach along these lines is not likely to succeed, and that in fact there is no relation between the fractal dimension of a point set and its indexability. Based on their own results, they show that: 1. <p> Topological transformations that do not change the fractal dimension of a set, such as rotation, change the indexing properties of the set quite dramatically. Although their arguments are irrefutable, we do not share the conclusions of <ref> [10] </ref> that fractal dimension and indexabil-ity are unrelated. The arguments of [10] are based in two implicit assumptions, an assumption on the definition and use of fractal dimension, and an assumption on the definition of "indexability". Agreeing on a definition of fractal dimension is crucial. <p> Topological transformations that do not change the fractal dimension of a set, such as rotation, change the indexing properties of the set quite dramatically. Although their arguments are irrefutable, we do not share the conclusions of <ref> [10] </ref> that fractal dimension and indexabil-ity are unrelated. The arguments of [10] are based in two implicit assumptions, an assumption on the definition and use of fractal dimension, and an assumption on the definition of "indexability". Agreeing on a definition of fractal dimension is crucial. <p> Then, evaluate these conditions experimentally, for real datasets. We conjecture that such conditions, if found, will be applicable to the majority of real datasets. Our second point has to do with the definition of "in-dexability". The results in <ref> [10] </ref> suggest that the tradeoff between redundancy and overhead changes dramatically when a 2-dimensional data set is rotated. However, access overhead is a worst-case cost metric. <p> Also, A is less biased than A in favor of small queries, in the sense that A is basically determined by queries of size close to the block size B, at least for multidimensional workloads. In conclusion, we believe that the arguments in <ref> [10] </ref>, although thought-provoking, do not support such a general claim, that the fractal dimension is unrelated to indexing. In fact, we conjecture that under appropriate assumptions and definitions, the fractal dimension can indeed determine indexing properties of datasets.
Reference: [11] <author> Th. Lengauer. </author> <title> VLSI theory. </title> <booktitle> In Handbook of Theoreti cal Computer Science, </booktitle> <editor> Ed. Jan van Leeuwen, </editor> <booktitle> (Volume A: Algorithms and Complexity), </booktitle> <volume> volume 1. </volume> <publisher> Elsevier and MIT Press, </publisher> <year> 1990. </year>
Reference-contexts: Our main theorem, the Redundancy Theorem, provides lower bounds for the storage redundancy r , given a desired access overhead A and the block size B, for any indexing problem. Our approach is combinatorial in nature. The results are reminiscent of the AT 2 -complexity results in VLSI theory <ref> [11] </ref>. The main argument in AT 2 -complexity, consists of two parts: a geometric separation theorem, and a concept of communication complexity, or "information content" of a digital circuit, modeled as a boolean function.
Reference: [12] <author> M. H. Nodine, M. T. Goodrich, and J. S. Vitter. </author> <title> Block ing for external graph searching. </title> <booktitle> In Proceedings of the Twelfth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems: </booktitle> <address> May 25-28, 1993, Washington, DC, </address> <pages> pages 222-232, </pages> <year> 1993. </year>
Reference-contexts: In subsequent publications, [14, 13, 16, 17] there are presented asymptotically efficient dynamic algorithms for 2-sided, 3-sided and interval management queries. An optimal solution for the interval management problem has recently been found [1]. We also mention the work of <ref> [12] </ref>, who use cost metrics similar to ours, to characterize the locality in external graph searching. Finally, we should mention the recent results of Faloutsos and Kamel [5], on characterizing the performance of multidimensional range queries on R-trees, using the fractal dimension of real-world datasets. <p> In fact, we conjecture that under appropriate assumptions and definitions, the fractal dimension can indeed determine indexing properties of datasets. This approach can be generalized, by undertaking a study of topological properties of workloads that determine their indexability. The results of <ref> [12] </ref>, which employ cost metrics similar to ours, are based on such topological properties for undirected graphs, and provide a good starting point for such an endeavor. 8 Conclusions We have presented an analytical tool for indexing schemes, in the form of a lower-bound theorem for arbitrary indexing workloads, and we
Reference: [13] <author> S. Ramaswamy and P. C. Kanellakis. </author> <title> OODB indexing by class-division. </title> <booktitle> SIGMOD Record (ACM Special Interest Group on Management of Data), </booktitle> <volume> 24(2) </volume> <pages> 139-150, </pages> <month> June </month> <year> 1995. </year>
Reference-contexts: We attribute the renewed interest in the fundamental results of [9], where it was shown that indexing in new database paradigms, such as constraint databases, and databases with class hierarchies, can be reduced to special cases of multidimensional range searching. In subsequent publications, <ref> [14, 13, 16, 17] </ref> there are presented asymptotically efficient dynamic algorithms for 2-sided, 3-sided and interval management queries. An optimal solution for the interval management problem has recently been found [1].
Reference: [14] <author> S. Ramaswamy and S. Subramanian. </author> <title> Path caching: A technique for optimal external searching. </title> <booktitle> In 13th Symposium| 1994 May: Minneapolis; MN, volume 13 of PROCEEDINGS OF THE ACM SIGACT SIG-MOD SIGART SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS 1994, </booktitle> <pages> pages 25-35, </pages> <year> 1994. </year>
Reference-contexts: We attribute the renewed interest in the fundamental results of [9], where it was shown that indexing in new database paradigms, such as constraint databases, and databases with class hierarchies, can be reduced to special cases of multidimensional range searching. In subsequent publications, <ref> [14, 13, 16, 17] </ref> there are presented asymptotically efficient dynamic algorithms for 2-sided, 3-sided and interval management queries. An optimal solution for the interval management problem has recently been found [1].
Reference: [15] <author> S. Sarawagi and M. Stonebraker. </author> <title> Efficient organiza tion of large multidimensional arrays. </title> <booktitle> In Proceedings of the 10th International Conference on Data Engineering, </booktitle> <pages> pages 328-336, </pages> <month> February </month> <year> 1994. </year>
Reference-contexts: Apart from the general problem of multidimensional range queries, our results on R d n are applicable in two other areas of recent interest: Multidimensional OLAP (MOLAP) [19] and external multidimensional arrays <ref> [15] </ref>. In MOLAP, the challenge is to materialize a datacube to disk, so that range queries can be answered efficiently. Usually, the datacube undergoes some compression, to improve space utilization. <p> These types of data structures are strongly relevant to indexing schemes, because they do not have a search component. Especially for arrays, workload R d n is a relatively accurate model for a d-dimensional (dense) array. It is not accidental that the ideas in <ref> [15] </ref> are similar to ours, and their experimental results are consistent with our theoretical predictions. 7.2 Locality versus Search It has been said earlier that indexing schemes do not model the search problem of data indexing, but only the locality aspects that arise. However, the two issues are not unrelated.
Reference: [16] <author> Sairam Subramanian and Sridhar Ramaswamy. </author> <title> The P-range tree: A new data structure for range searching in secondary memory. </title> <booktitle> In Proceedings of the 6th Annual Symposium on Discrete Algorithms, </booktitle> <pages> pages 378-387, </pages> <month> January </month> <year> 1995. </year>
Reference-contexts: We attribute the renewed interest in the fundamental results of [9], where it was shown that indexing in new database paradigms, such as constraint databases, and databases with class hierarchies, can be reduced to special cases of multidimensional range searching. In subsequent publications, <ref> [14, 13, 16, 17] </ref> there are presented asymptotically efficient dynamic algorithms for 2-sided, 3-sided and interval management queries. An optimal solution for the interval management problem has recently been found [1]. <p> We believe this is the first lower bound on storage redundancy, for d &gt; 2. However, this lower bound is probably very weak. For d = 2, there is a lower bound by Subramanian and Ramaswamy <ref> [16] </ref>, of B log log B N , for query I/O cost bounded by O B N + B . Although stronger than that of theorem 7.1, even this is not tight.
Reference: [17] <author> Darren Erick Vengroff and Jeffrey Scott Vitter. </author> <title> Efficient 3-D range searching in external memory. </title> <booktitle> In Proceedings of the Twenty-Eighth Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 192-201, </pages> <month> 22-24 May </month> <year> 1996. </year>
Reference-contexts: We attribute the renewed interest in the fundamental results of [9], where it was shown that indexing in new database paradigms, such as constraint databases, and databases with class hierarchies, can be reduced to special cases of multidimensional range searching. In subsequent publications, <ref> [14, 13, 16, 17] </ref> there are presented asymptotically efficient dynamic algorithms for 2-sided, 3-sided and interval management queries. An optimal solution for the interval management problem has recently been found [1].
Reference: [18] <author> M. Yannakakis. </author> <title> Perspectives on database theory. </title> <booktitle> In FOCS: IEEE Symposium on Foundations of Computer Science (FOCS), </booktitle> <year> 1995. </year>
Reference-contexts: We selectively mention geographical information systems, abstract data types and object data models, constraint databases, temporal databases, and on-line analytical processing. In these new contexts, the typical indexing methods of relational databases, B-trees and hashing, are generally considered inadequate <ref> [18] </ref>. Thus, there is a renewed need to develop a deeper understanding of data structures and algorithms to speed operations on external memory. Database extensibility necessarily includes extensible development of index mechanisms. Engineering approaches comprising parameterized components and/or libraries of composable components are demonstrating successes [8, 3].
Reference: [19] <author> Y. Zhao, P.M. Deshpande, and J.F. Naughton. </author> <title> An array-based algorithm for simultaneous multidimensional aggregates. </title> <booktitle> In Proc. of the 1997 ACM SIGMOD Conf. on Management of Data, </booktitle> <pages> pages 159-170, </pages> <month> May </month> <year> 1997. </year>
Reference-contexts: In [10] it is conjectured that redundancy r = fi (log d1 N ) is required for d-dimensional workloads. Apart from the general problem of multidimensional range queries, our results on R d n are applicable in two other areas of recent interest: Multidimensional OLAP (MOLAP) <ref> [19] </ref> and external multidimensional arrays [15]. In MOLAP, the challenge is to materialize a datacube to disk, so that range queries can be answered efficiently. Usually, the datacube undergoes some compression, to improve space utilization.
References-found: 19

