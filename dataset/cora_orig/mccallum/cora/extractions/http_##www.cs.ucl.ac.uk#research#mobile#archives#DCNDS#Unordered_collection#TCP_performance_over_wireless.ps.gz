URL: http://www.cs.ucl.ac.uk/research/mobile/archives/DCNDS/Unordered_collection/TCP_performance_over_wireless.ps.gz
Refering-URL: http://www.cs.ucl.ac.uk/research/mobile/archives/DCNDS/Unordered_collection/
Root-URL: http://www.cs.ucl.ac.uk
Email: -hari,padmanab,ss,randy-@cs.berkeley.edu  
Title: A Comparison of Mechanisms for Improving TCP Performance over Wireless Links  
Author: Hari Balakrishnan, Venkata N. Padmanabhan, Srinivasan Seshan and Randy H. Katz 
Address: Berkeley  
Affiliation: Computer Science Division, University of California at  
Abstract: Reliable transport protocols such as TCP are tuned to perform well in traditional networks where packet losses occur mostly because of congestion. However, networks with wireless and other lossy links also suffer from significant non-congestion-related losses due to reasons such as bit errors and handoffs. TCP responds to all losses by invoking congestion control and avoidance algorithms, resulting in degraded end-to-end performance in wireless and lossy systems. In this paper, we compare several schemes designed to improve the performance of TCP in such networks. These schemes are classified into three broad categories: end-to-end protocols, where the sender is aware of the wireless link; link-layer protocols, that provide local reliability; and split-connection protocols, that break the end-to-end connection into two parts at the base station. We present the results of several experiments performed in both LAN and WAN environments, using throughput and goodput as the metrics for comparison. Our results show that a reliable link-layer protocol with some knowledge of TCP provides very good performance. Furthermore, it is possible to achieve good performance without splitting the end-to-end connection at the base station. We also demonstrate that selective acknowledgments and explicit loss notifications result in significant performance improvements. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E. Ayanoglu, S. Paul, T. F. LaPorta, K. K. Sabnani, and R. D. Gitlin. AIRMAIL: </author> <title> A Link-Layer Protocol for Wireless Networks. ACM Wireless Networks, </title> <address> 1:4760, </address> <month> February </month> <year> 1995. </year>
Reference-contexts: As a result, most of the losses seen by the TCP sender are caused by congestion. Examples of this approach include wireless links with reliable link layer protocols such as AIRMAIL <ref> [1] </ref>, split connection approaches such as Indirect-TCP [2], and TCP-a ware link-layer schemes such as the snoop protocol [3]. The second class of techniques attempts to make the sender aware of the existence of wireless hops and realize that some pack et losses are not due to congestion. <p> While the TDMA protocol guarantees reliable, in-order deli very of link-layer frames, the CDMA protocol only mak es a limited attempt and leaves it to the (reliable) transport layer to recover from errors in the w orst case. The AIRMAIL protocol <ref> [1] </ref> employs a combination of FEC and ARQ techniques for loss recovery. The main advantage of employing a link-layer protocol for loss recovery is that it fits naturally into the layered structure of network protocols.
Reference: [2] <author> A. Bakre and B. R. Badrinath. I-TCP: </author> <title> Indirect TCP for Mobile Hosts. </title> <booktitle> In Proc. 15th International Conf. on Distributed Computing Systems (ICDCS), </booktitle> <month> May </month> <year> 1995. </year>
Reference-contexts: TCP performance in such networks suffers from significant throughput degradation and very high interactive delays [5]. Recently, several schemes have been proposed to the alleviate the effects of non-congestion-related losses on TCP performance over networks that have wireless or similar high-loss links <ref> [2, 3, 21] </ref>. These schemes choose from a variety of mechanisms, such as local retransmissions, split-TCP connections, and forward error correction, to improve end-to-end throughput. However, it is unclear to what e xtent each of the mechanisms contributes to the improvement in performance. <p> As a result, most of the losses seen by the TCP sender are caused by congestion. Examples of this approach include wireless links with reliable link layer protocols such as AIRMAIL [1], split connection approaches such as Indirect-TCP <ref> [2] </ref>, and TCP-a ware link-layer schemes such as the snoop protocol [3]. The second class of techniques attempts to make the sender aware of the existence of wireless hops and realize that some pack et losses are not due to congestion. <p> The main concern about link-layer protocols is the possibility of adverse effect on certain transport-layer protocols such as TCP. We investigate this in detail in our experiments. Indirect-TCP (I-TCP) protocol <ref> [2] </ref>: This was one of the early protocols to use the split-connection approach.
Reference: [3] <author> H. Balakrishnan, S. Seshan, and R.H. Katz. </author> <title> Improving Reliable Transport and Handoff Performance in Cellular Wireless Networks. </title> <journal> ACM Wireless Networks, </journal> <volume> 1(4), </volume> <month> December </month> <year> 1995. </year>
Reference-contexts: TCP performance in such networks suffers from significant throughput degradation and very high interactive delays [5]. Recently, several schemes have been proposed to the alleviate the effects of non-congestion-related losses on TCP performance over networks that have wireless or similar high-loss links <ref> [2, 3, 21] </ref>. These schemes choose from a variety of mechanisms, such as local retransmissions, split-TCP connections, and forward error correction, to improve end-to-end throughput. However, it is unclear to what e xtent each of the mechanisms contributes to the improvement in performance. <p> As a result, most of the losses seen by the TCP sender are caused by congestion. Examples of this approach include wireless links with reliable link layer protocols such as AIRMAIL [1], split connection approaches such as Indirect-TCP [2], and TCP-a ware link-layer schemes such as the snoop protocol <ref> [3] </ref>. The second class of techniques attempts to make the sender aware of the existence of wireless hops and realize that some pack et losses are not due to congestion. <p> As a result, some proposals to improve TCP performance use mechanisms based on the knowledge of TCP messaging to shield the TCP sender more ef fectively and avoid competing and redundant retransmissions <ref> [3] </ref>. In this paper, we evaluate the performance of several end-to-end, split-connection and link-layer protocols using end-to-end throughput and goodput as performance metrics, in both LAN and WAN configurations. In particular, we seek to answer the following specific questions: 1. <p> Also, since this protocol maintains a signif icant amount of state at the base station per TCP connection, handoff procedures tend to be complicated and slow. The Snoop Protocol <ref> [3] </ref>: The snoop protocol introduces a module, called the snoop agent, at the base station. The agent monitors every packet that passes through the TCP connection in both directions and maintains a cache of TCP segments sent across the link that have not yet been acknowledged by the receiver.
Reference: [4] <author> R. Caceres and L. Iftode. </author> <title> Improving the Performance of Reliable Transport Protocols in Mobile Computing Environments. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 13(5), </volume> <month> June </month> <year> 1995. </year>
Reference: [5] <author> A. DeSimone, M. C. Chuah, and O. C. Yue. </author> <title> Throughput Performance of Transport-Layer Protocols over Wireless LANs. </title> <booktitle> In Proc. Globecom 93, </booktitle> <month> December </month> <year> 1993. </year>
Reference-contexts: Communication over wireless links is often characterized by sporadic high biterror rates, and intermittent connectivity due to handoffs. TCP performance in such networks suffers from significant throughput degradation and very high interactive delays <ref> [5] </ref>. Recently, several schemes have been proposed to the alleviate the effects of non-congestion-related losses on TCP performance over networks that have wireless or similar high-loss links [2, 3, 21]. <p> Since the end-to-end TCP connection passes through the lossy link, the TCP sender may not be fully shielded from wireless losses. This can happen either because of timer interactions between the two layers <ref> [5] </ref>, or more lik ely because of TCPs duplicate acknowledgments causing sender fast retransmissions even for segments that are locally retransmitted. <p> This could adversely impact TCP performance for tw o reasons: (i) competing retransmissions caused by an incompatible setting of timers at the two layers, and (ii) the effect of the link layer protocol on the TCP f ast retransmission mechanism. In <ref> [5] </ref>, the effects of the first situation are simulated and analyzed for a TCP-like transport protocol (that closely tracks the round-trip time to set its retransmission timeout) and a reliable link layer protocol.
Reference: [6] <author> K. Fall and S. Floyd. </author> <title> Comparisons of Tahoe, Reno, and Sack TCP. </title> <address> ftp://ftp.ee.lbl.gov/papers/ sacks.ps.Z, </address> <month> December </month> <year> 1995. </year>
Reference-contexts: Selective Acknowledgments: Since standard TCP uses a cumulative acknowledgment scheme, it often does not provide the sender with sufficient information to recover quickly from multiple pack et losses within a single transmission window. Several studies <ref> [e.g., 6] </ref> ha ve shown that TCP enhanced with selecti ve acknowledgments performs better than standard TCP in such situations. SACKs were added as an option to TCP by RFC 1072 [9]. <p> This method enables the connection to make progress at the rate of one se gment per round trip time, rather than stall until a coarse timeout <ref> [6, 7] </ref>.
Reference: [7] <author> J. C. Hoe. </author> <title> Start-up Dynamics of TCPs Congestion Control and Avoidance Schemes. </title> <type> Masters thesis, </type> <institution> Massachusetts Institute of Technology, </institution> <year> 1995. </year>
Reference-contexts: This method enables the connection to make progress at the rate of one se gment per round trip time, rather than stall until a coarse timeout <ref> [6, 7] </ref>.
Reference: [8] <author> V. Jacobson. </author> <title> Congestion Avoidance and Control. </title> <booktitle> In Proc. ACM SIGCOMM 88, </booktitle> <month> August </month> <year> 1988. </year>
Reference-contexts: TCP reacts to an y packet losses by dropping its transmission (congestion) windo w size before retransmitting packets, initiating congestion control or avoidance mechanisms (e.g., slow start <ref> [8] </ref>) and backing off its retransmission timer (Karns Algorithm [11]). These measures result in a reduction in the load on the intermediate links, thereby controlling the congestion in the network.
Reference: [9] <author> V. Jacobson and R. T. Braden. </author> <title> TCP Extensions for Long Delay Paths. RFC, </title> <month> Oct </month> <year> 1988. </year> <note> RFC 1072. </note>
Reference-contexts: Several studies [e.g., 6] ha ve shown that TCP enhanced with selecti ve acknowledgments performs better than standard TCP in such situations. SACKs were added as an option to TCP by RFC 1072 <ref> [9] </ref>. However, disagreements over the use of SACKs prevented the specification from being adopted, and the SACK option w as removed from later TCP RFCs. Recently, there has been renewed interest in adding SACKs to TCP.
Reference: [10] <author> P. Karn. </author> <title> The Qualcomm CDMA Digital Cellular System. </title> <booktitle> In Proc. 1993 USENIX Symp. on Mobile and Location-Independent Computing, </booktitle> <pages> pages 35 40, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: The link-layer protocols for the digital cellular systems in the U.S. both CDMA <ref> [10] </ref> and TDMA [17] primarily use ARQ techniques. While the TDMA protocol guarantees reliable, in-order deli very of link-layer frames, the CDMA protocol only mak es a limited attempt and leaves it to the (reliable) transport layer to recover from errors in the w orst case. <p> This still allows the LL scheme to retransmit packets several times before a TCP-Reno transmitter w ould time out. LL is equivalent to the snoop agent that does not suppress any duplicate acknowledgments, so it does not attempt in-order delivery of packets across the link (unlike protocols proposed in <ref> [10] </ref>, [17]). We also investigate a more sophisticated link-layer protocol (LL-SACK) that uses selective retransmission to improve performance. The LL-SACK protocol (Figure 6) performs this by applying a SMART-based acknowledgment scheme to the link layer.
Reference: [11] <author> P. Karn and C. Partridge. </author> <title> Improving Round-Trip Time Estimates in Reliable Transport Protocols. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 9(4):364373, </volume> <month> November </month> <year> 1991. </year>
Reference-contexts: TCP reacts to an y packet losses by dropping its transmission (congestion) windo w size before retransmitting packets, initiating congestion control or avoidance mechanisms (e.g., slow start [8]) and backing off its retransmission timer (Karns Algorithm <ref> [11] </ref>). These measures result in a reduction in the load on the intermediate links, thereby controlling the congestion in the network. Unfortunately, when packets are lost in netw orks for reasons other than congestion, these measures result in an unnecessary reduction in end-to-end throughput and suboptimal performance.
Reference: [12] <author> S. Keshav and S. Morgan. Smart retransmission: </author> <title> Performance with Overload and Random Losses. </title> <note> http://www.cs.att.com/netlib/att/cs/home/keshav/ papers/ smart.ps.Z, 1996. Preprint. </note>
Reference-contexts: Recently, there has been renewed interest in adding SACKs to TCP. Two of the more interesting proposals are the TCP SA CKs Internet Draft [14] and the SMART scheme <ref> [12] </ref>. The Internet Draft proposes that each ackno wledgment contain information about up to three noncontiguous blocks of data that have been received successfully. Each block of data is described by its starting and ending sequence number. <p> This allows us to identify what percentage of the end-to-end performance de gradation is associated with standard TCPs handling of error detection and retransmission. We base our selective acknowledgment scheme on the SMART approach <ref> [12] </ref>. This scheme is well-suited to situations where there is little reordering of packets, which is true for one-hop wireless systems such as ours. Unlike the scheme proposed in [12], we do not use any special techniques to detect the loss of a retransmission. <p> We base our selective acknowledgment scheme on the SMART approach <ref> [12] </ref>. This scheme is well-suited to situations where there is little reordering of packets, which is true for one-hop wireless systems such as ours. Unlike the scheme proposed in [12], we do not use any special techniques to detect the loss of a retransmission. The sender retransmits a pack et when it recei ves a SMART acknowledgment only if the same pack et was not retrans-mitted within the last round-trip time.
Reference: [13] <author> S. Lin and D. J. Costello. </author> <title> Error Control Coding: Fundamentals and Applications. </title> <publisher> Prentice-Hall, Inc., </publisher> <year> 1983. </year>
Reference-contexts: The third class of protocols, link-layer solutions, lie between the other two classes. These protocols attempt to hide link-related losses from the TCP sender by using local retransmissions and perhaps forward error correction <ref> [e.g., 13] </ref> o ver the wireless link. The local retransmissions use techniques that are tuned to the characteristics of the wireless link to provide a significant increase in performance. Since the end-to-end TCP connection passes through the lossy link, the TCP sender may not be fully shielded from wireless losses.
Reference: [14] <author> M. Mathis, J. Mahdavi, S. Floyd, and A. Romanow. </author> <title> TCP Selective Acknowledgments Options. Internet draft, </title> <address> Draft-ietf-tcplw-sack-00.txt, </address> <month> January </month> <year> 1996. </year> <month> Expires July </month> <year> 1996. </year>
Reference-contexts: However, disagreements over the use of SACKs prevented the specification from being adopted, and the SACK option w as removed from later TCP RFCs. Recently, there has been renewed interest in adding SACKs to TCP. Two of the more interesting proposals are the TCP SA CKs Internet Draft <ref> [14] </ref> and the SMART scheme [12]. The Internet Draft proposes that each ackno wledgment contain information about up to three noncontiguous blocks of data that have been received successfully. Each block of data is described by its starting and ending sequence number.
Reference: [15] <author> S. McCanne and V. Jacobson. </author> <title> The BSD Packet Filter: A New Architecture for User-Level Packet Capture. </title> <booktitle> In Proc. Winter 93 USENIX Conference, </booktitle> <address> San Diego, CA, </address> <month> January </month> <year> 1993. </year>
Reference-contexts: During each run (repeated multiple times for consistency), we measure the throughput at the recei ver in Mbps, and the wired and wireless goodputs as percentages. In addition, all pack et transmissions on the Ethernet and WaveLan are recorded for analysis using tcpdump <ref> [15] </ref>, and the senders TCP code instrumented to record e vents such as coarse timeouts, retransmission times, duplicate acknowledgment arrivals, congestion window size changes, etc.
Reference: [16] <author> Metricom, Inc. </author> <note> http://www.metricom.com, 1996. </note>
Reference-contexts: We are in the process of evaluating the protocol in the presence of congestion as well as wireless losses. We are investigating the impact of lar ge variations in connection round-trip times on performance. Such v ariation is common in networks like the Metricom Ricochet wireless network <ref> [16] </ref>, especially in the presence of bidirectional traffic. We are also investigating the performance of more sophisticated link-layer protocols that attempt in-order delivery of packets to a limited extent. Burst Length LL-TCP-AWARE (Mbps) LL-OPT (Mbps) 2 1.25 1.28 6 0.84 1.10 Table 2.
Reference: [17] <author> S. Nanda, R. Ejzak, and B. T. Doshi. </author> <title> A Retransmission Scheme for Circuit-Mode Data on Wireless Links. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 12(8), </volume> <month> October </month> <year> 1994. </year>
Reference-contexts: The link-layer protocols for the digital cellular systems in the U.S. both CDMA [10] and TDMA <ref> [17] </ref> primarily use ARQ techniques. While the TDMA protocol guarantees reliable, in-order deli very of link-layer frames, the CDMA protocol only mak es a limited attempt and leaves it to the (reliable) transport layer to recover from errors in the w orst case. <p> LL is equivalent to the snoop agent that does not suppress any duplicate acknowledgments, so it does not attempt in-order delivery of packets across the link (unlike protocols proposed in [10], <ref> [17] </ref>). We also investigate a more sophisticated link-layer protocol (LL-SACK) that uses selective retransmission to improve performance. The LL-SACK protocol (Figure 6) performs this by applying a SMART-based acknowledgment scheme to the link layer.
Reference: [18] <author> J. B. Postel. </author> <title> Transmission Control Protocol. </title> <type> RFC, </type> <institution> Information Sciences Institute, Marina del Rey, </institution> <address> CA, </address> <month> September </month> <year> 1981. </year> <note> RFC 793. </note>
Reference-contexts: 1. Introduction The increasing popularity of wireless netw orks indicates that wireless links will play an important role in future inter-networks. Reliable transport protocols such as TCP <ref> [18, 19] </ref> have been tuned for traditional netw orks comprising wired 1. Web page URL http://daedalus.cs.berkeley.edu. Srinivasan Seshan is now at IBM T.J. Watson Research Center, Hawthorne, NY (srini@watson.ibm.com). This work was supported by DARPA Contract DAAB07-C-D154. links and stationary hosts.
Reference: [19] <author> W. R. Stevens. </author> <title> TCP/IP Illustrated, </title> <booktitle> Volume 1. </booktitle> <address> Add-ison-Wesley, Reading, MA, </address> <month> Nov </month> <year> 1994. </year>
Reference-contexts: 1. Introduction The increasing popularity of wireless netw orks indicates that wireless links will play an important role in future inter-networks. Reliable transport protocols such as TCP <ref> [18, 19] </ref> have been tuned for traditional netw orks comprising wired 1. Web page URL http://daedalus.cs.berkeley.edu. Srinivasan Seshan is now at IBM T.J. Watson Research Center, Hawthorne, NY (srini@watson.ibm.com). This work was supported by DARPA Contract DAAB07-C-D154. links and stationary hosts. <p> we sho w the messages generated by the receiver and the response from the base station and source nodes in Figures 2 through 9. 3.1 End-To-End Schemes Although a wide variety of TCP versions are used on the Internet, the current de f acto standard for TCP implementations is TCP-Reno <ref> [19] </ref>. We call this the E2E protocol, and use it as the standard basis for performance comparison (Figure 2).
Reference: [20] <author> WaveLAN: PC/AT Card Installation and Operation, </author> <year> 1994. </year>
Reference-contexts: Our experimental testbed consists of IBM ThinkPad laptops and Pentium-based personal computers running BSD/OS 2.0 from BSDI. The machines are interconnected using a 10 Mbps Ethernet and 915 MHz AT&T WaveLANs <ref> [20] </ref>, a shared-medium wireless LAN with a ra w signalling bandwidth of 2 Mbps. The network topology for our experiments is shown in Figure 10.
Reference: [21] <author> R. Yavatkar and N. Bhagwat. </author> <title> Improving End-to-End Performance of TCP over Mobile Internet-works. </title> <booktitle> In Mobile 94 Workshop on Mobile Computing Systems and Applications, </booktitle> <month> December </month> <year> 1994. </year>
Reference-contexts: TCP performance in such networks suffers from significant throughput degradation and very high interactive delays [5]. Recently, several schemes have been proposed to the alleviate the effects of non-congestion-related losses on TCP performance over networks that have wireless or similar high-loss links <ref> [2, 3, 21] </ref>. These schemes choose from a variety of mechanisms, such as local retransmissions, split-TCP connections, and forward error correction, to improve end-to-end throughput. However, it is unclear to what e xtent each of the mechanisms contributes to the improvement in performance.
References-found: 21

