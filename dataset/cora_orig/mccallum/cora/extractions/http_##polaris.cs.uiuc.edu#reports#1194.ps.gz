URL: http://polaris.cs.uiuc.edu/reports/1194.ps.gz
Refering-URL: http://polaris.cs.uiuc.edu/tech_reports.html
Root-URL: http://www.cs.uiuc.edu
Title: Run-Time Dependence Testing by Integer Sequence Analysis  
Author: Jay Hoeflinger 
Keyword: parallelizing compilers, data dependence, integer sequences, linearization.  
Date: January, 1992  
Address: Urbana, Illinois 61801  
Affiliation: Center for Supercomputing Research Development University of Illinois at Urbana-Champaign  
Abstract: A simple run-time data dependence test is presented which is based on a new formulation of the dependence problem. This test makes it possible to discern independence in the case of a potential self-output dependence in a loop (a case where the GCD test is useless) and in certain potential anti- and flow-dependences. The test handles subscript expression forms which arise in linearized arrays, making it possible to handle coupled subscripts with ease and do dependence testing on multiple dimensions at once. The test is useful for arbitrarily deep loop nests, and even allows the testing of a group of dependences in one step. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Fran Allen, Michael Burke, Philippe Charles, Ron Cytron, and Jeanne Ferrante. </author> <title> An Overview of the PTRAN Analysis System for Multiprocessing. </title> <booktitle> In International Conference on Supercomputing, </booktitle> <pages> pages 194-211, </pages> <year> 1987. </year>
Reference-contexts: Some people advocate the linearization of all arrays by the compiler to improve dependence testing accuracy. This allows dependence testing in all dimensions simultaneously. <ref> [1] </ref> gives three reasons why this type of dependence testing is desirable: * Dependence analysis is possible between aliased ar rays * Dependences due to out-of-bound referencing on some dimension may be found * Coupled subscripts are tested simultaneously A compiler can also use the linearized form of multi-dimensioned arrays for
Reference: [2] <author> Utpal Banerjee. </author> <title> Dependence analysis for supercom-puting. </title> <year> 1988. </year>
Reference-contexts: The GCD test and Banerjee's test <ref> [2, 14] </ref> are the traditional approximate methods by which compilers have tested dependences. It has even been shown (in [7]) that Banerjee's test is exact in the case where all loop index coefficients are +1 or -1. <p> For multi-dimensional array references, the GCD test may be applied to each dimension separately, implicitly assuming that a program does not index out of bounds on any dimension. Banerjee offers a multi-dimensional GCD test in <ref> [2] </ref> for determining the existence of unconstrained integer solutions for multi-dimensional array references by considering a system of Diophantine equations, one per dimension. <p> The loop index of a normalized loop always starts at zero and proceeds through consecutive positive integers with a stride of one. There is a straightforward normalization process which may be applied to any loop at compile time without 2 changing any of its important characteristics. See <ref> [2] </ref>.
Reference: [3] <author> M. Berry, D. Chen, P. Koss, D. Kuck, L. Pointer, S. Lo, Y. Pang, R. Roloff, A. Sameh, E. Clementi, S. Chin, D. Schneider, G. Fox, P. Messina, D. Walker, C. Hsiung, J. Schwarzmeier, K. Lue, S. Orszag, F. Seidl, O. Johnson, G. Swanson, R. Goodrum, and J. Martin. </author> <title> The perfect club benchmarks: Effective performance evalution of supercomputers. </title> <booktitle> Int'l. Jour. of Supercomputing Applications, </booktitle> <year> 1989. </year>
Reference-contexts: In this case, the test might be reduced to simply the IF statement for the Linearization Test. 8 Results from the OCEAN Program The Linearization Test was found to be applicable to the most important loop in the Perfect Club <ref> [3] </ref> program OCEAN.
Reference: [4] <author> G. Dantzig and B. C. Eaves. </author> <title> Fourier-motzkin elimination and its dual. </title> <journal> Journal of Combinatorial Theory, </journal> <volume> A(14):288-297, </volume> <year> 1973. </year>
Reference-contexts: In this case, they are ref-ered to as coupled subscripts. The Lambda Test [9] was devised to consider the dimensions simultaneously in this situation. Others resort to integer programming techniques, such as Fourier-Motzkin <ref> [4] </ref>, Constraint-Matrix [13] and the Power Test [15]. These techniques are useful, but expensive, Triolet finding that Fourier-Motzkin takes 22 - 28 times longer than conventional tests [12]. Still others have proposed the use of a hierarchy of tests, notably [10] which starts with Banerjee's multidimensional GCD test.
Reference: [5] <author> R. Eigenmann, J. Hoeflinger, G. Jaxon, Zhiyuan Li, and D. Padua. </author> <title> Restructuring Fortran Programs for Cedar. </title> <booktitle> In International Conference on Parallel Processing, pages I-57-66. </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1991. </year>
Reference-contexts: This is apparently not because of any lack of parallelism within the programs themselves. Our own experience with hand-parallelizing the Perfect Club codes <ref> [5] </ref> has shown that these programs are extremely parallelizable, yet our parallelizing compiler was able to achieve only a fraction of the speedup possible on them.
Reference: [6] <author> Rudolf Eigenmann and William Blume. </author> <title> An effectiveness study of parallelizing compiler techniques. </title> <booktitle> In International Conference on Parallel Processing, </booktitle> <year> 1991. </year>
Reference-contexts: One of the important reasons for the compiler's lack of success was that in several cases, either loop nests were too complex for its dependence analysis mechanism, or the information needed was not available at compile time <ref> [6] </ref>. Clearly, we need better ways of recognizing parallelism. Just as clear, however, is the fact that because of the heavy parameterization of real programs, the information needed to find parallelism is often not available at compile time.
Reference: [7] <author> David Klappholz, Kleanthis Psarris, and Xiangyun Kong. </author> <title> On the perfect accuracy of an approximate subscript analysis test. </title> <type> Technical Report 9003, </type> <institution> Stevens Institute of Technology, </institution> <month> January </month> <year> 1990. </year>
Reference-contexts: The GCD test and Banerjee's test [2, 14] are the traditional approximate methods by which compilers have tested dependences. It has even been shown (in <ref> [7] </ref>) that Banerjee's test is exact in the case where all loop index coefficients are +1 or -1. For multi-dimensional array references, the GCD test may be applied to each dimension separately, implicitly assuming that a program does not index out of bounds on any dimension.
Reference: [8] <author> Zhiyuan Li and Pen Chung Yew. </author> <title> Some results on exact data dependence analysis. </title> <booktitle> In Languages and Compilers for Parallel Computing, </booktitle> <pages> pages 374-401. </pages> <publisher> The MIT Press, </publisher> <year> 1990. </year>
Reference-contexts: Li and Yew present a method (in <ref> [8] </ref>) even more efficient than Banerjee's for this problem when the coefficients are "small". When a single loop index is used in more than one dimension of the array reference, the dimensions can no longer be considered separately. In this case, they are ref-ered to as coupled subscripts.
Reference: [9] <author> Zhiyuan Li, Pen-Chung Yew, and Chuan-Qi Zhu. </author> <title> Data Dependence Analysis on Multi-Dimensional Array References. </title> <booktitle> Proceedings of 1989 Int'l. Conference on Supercomputing, </booktitle> <pages> pages 215-224, </pages> <month> June </month> <year> 1989. </year>
Reference-contexts: When a single loop index is used in more than one dimension of the array reference, the dimensions can no longer be considered separately. In this case, they are ref-ered to as coupled subscripts. The Lambda Test <ref> [9] </ref> was devised to consider the dimensions simultaneously in this situation. Others resort to integer programming techniques, such as Fourier-Motzkin [4], Constraint-Matrix [13] and the Power Test [15]. These techniques are useful, but expensive, Triolet finding that Fourier-Motzkin takes 22 - 28 times longer than conventional tests [12].
Reference: [10] <author> D. Maydan, J. Hennessy, and M. Lam. </author> <title> Efficient and exact data dependence analysis. </title> <booktitle> In SIGPLAN NOTICES: Proceedings of the ACM SIGPLAN 91 Con-feren ce on Programming Language Design and Implementation, </booktitle> <address> Toronto, Ontario, Canada, </address> <month> June 26-28, </month> <pages> pages 1-14. </pages> <publisher> ACM Press, </publisher> <year> 1991. </year>
Reference-contexts: An exact solution to these equations is very difficult to determine in the general case. It has been shown (for instance in <ref> [10] </ref>) that solving the Diophantine equations representing data dependence is equivalent to solving integer programming problems, which are NP-complete in the general case. For this reason, people have devised approximate tests which are much easier to compute. <p> Others resort to integer programming techniques, such as Fourier-Motzkin [4], Constraint-Matrix [13] and the Power Test [15]. These techniques are useful, but expensive, Triolet finding that Fourier-Motzkin takes 22 - 28 times longer than conventional tests [12]. Still others have proposed the use of a hierarchy of tests, notably <ref> [10] </ref> which starts with Banerjee's multidimensional GCD test. If one test fails, then the next test is tried, making use of information gained from the previous test. Polychronopoulos proposed a general run-time technique to determine and synchronize data dependence, called RDC (run-time dependence checking) [11].
Reference: [11] <author> Constantine Polychronopoulos. </author> <title> Advanced loop optimizations for parallel computers. In C.D. Poly-chronopoulos E.N. </title> <editor> Houstis, T.S. Papatheodorou, editor, </editor> <booktitle> Lecture Notes in Computer Science No. 297: Proc. of First Int'l. Conf. on Supercomputing, </booktitle> <address> Athens, Greece, </address> <pages> pages 255-277, </pages> <address> New York, NY, June 1987. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: If one test fails, then the next test is tried, making use of information gained from the previous test. Polychronopoulos proposed a general run-time technique to determine and synchronize data dependence, called RDC (run-time dependence checking) <ref> [11] </ref>.
Reference: [12] <author> Remi Triolet. </author> <title> Interprocedural analysis for program restructuring with parafrase. </title> <type> Technical report, </type> <institution> Univ. of Illinois at Urbana-Champaign, Center for Supercomputing Res. & Dev., </institution> <month> Aug., </month> <year> 1986. </year> <journal> CSRD Rpt. </journal> <volume> No. </volume> <pages> 538. </pages>
Reference-contexts: Others resort to integer programming techniques, such as Fourier-Motzkin [4], Constraint-Matrix [13] and the Power Test [15]. These techniques are useful, but expensive, Triolet finding that Fourier-Motzkin takes 22 - 28 times longer than conventional tests <ref> [12] </ref>. Still others have proposed the use of a hierarchy of tests, notably [10] which starts with Banerjee's multidimensional GCD test. If one test fails, then the next test is tried, making use of information gained from the previous test.
Reference: [13] <author> D. Wallace. </author> <title> Dependence of multi-dimensional array references. </title> <booktitle> In Proceedings of the Second International Conference on Supercomputing, </booktitle> <address> Saint Malo, France, </address> <year> 1988. </year>
Reference-contexts: In this case, they are ref-ered to as coupled subscripts. The Lambda Test [9] was devised to consider the dimensions simultaneously in this situation. Others resort to integer programming techniques, such as Fourier-Motzkin [4], Constraint-Matrix <ref> [13] </ref> and the Power Test [15]. These techniques are useful, but expensive, Triolet finding that Fourier-Motzkin takes 22 - 28 times longer than conventional tests [12]. Still others have proposed the use of a hierarchy of tests, notably [10] which starts with Banerjee's multidimensional GCD test.
Reference: [14] <author> Michael J. Wolfe. </author> <title> Optimizing Supercompilers for Supercomputers. </title> <publisher> The MIT Press, </publisher> <year> 1989. </year>
Reference-contexts: The GCD test and Banerjee's test <ref> [2, 14] </ref> are the traditional approximate methods by which compilers have tested dependences. It has even been shown (in [7]) that Banerjee's test is exact in the case where all loop index coefficients are +1 or -1.

References-found: 14

