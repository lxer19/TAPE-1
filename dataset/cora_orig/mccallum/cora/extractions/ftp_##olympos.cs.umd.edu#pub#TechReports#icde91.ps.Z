URL: ftp://olympos.cs.umd.edu/pub/TechReports/icde91.ps.Z
Refering-URL: http://www.cs.umd.edu/~christos/cpub.html
Root-URL: 
Title: DOT: A Spatial Access Method Using Fractals  
Author: Christos Faloutsos Yi Rong 
Address: College Park  
Affiliation: Department of Computer Science University of Maryland at  
Abstract: Existing Database Management Systems (DBMSs) do not handle efficiently multi-dimensional data such as boxes, polygons, or even points in a multi-dimensional space. We examine access methods for these data with two design goals in mind: (a) efficiency in terms of search speed and space overhead and (b) ability to be integrated in a DBMS easily. We propose a method to map multidimensional objects into points in a 1-dimensional space; thus, traditional primary-key access methods can be applied, with very few extensions on the part of the DBMS. We propose such mappings based on fractals; we implemented the whole method on top of a B + -tree, along with several mappings. Simulation experiments on several distributions of the input data show that a modified Hilbert curve gives the best results, even when compared to R-trees [7]. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Ballard, D. and C. Brown, </author> <title> Computer Vision, </title> <publisher> Pren-tice Hall, </publisher> <year> 1982. </year>
Reference-contexts: 1. Introduction. Existing Database Management Systems (DBMSs) handle efficiently numbers and character strings, but not multi-dimensional data such as boxes, polygons, or even points in a multi-dimensional space. Multi-dimensional data arise in many applications, including: Cartography [21], Computer-Aided Design (CAD) and VLSI design systems [14], [8], computer vision and robotics <ref> [1] </ref>, traditional databases (a record with k attributes corresponds to a point in a k -d space), rule indexing in expert database systems [20], etc.. Our goal here is to design a method with the following two characteristics: hhhhhhhhhhhhhhhhhh Also with University of Maryland Institute for Advanced Computer Studies (UMIACS).
Reference: 2. <author> Bially, T., </author> <title> ``Space-Filling Curves: Their Generation and Their Application to Bandwidth Reduction,'' </title> <journal> IEEE Trans. on Information Theory, </journal> <volume> vol. IT-15, no. 6, </volume> <pages> pp. 658-664, </pages> <month> Nov. </month> <year> 1969. </year>
Reference-contexts: Peano and tri-Peano ordering for a 44 grid. Hilbert and tri-Hilbert ordering for a 44 grid. has to be accounted for. The algorithm is discussed by Bially <ref> [2] </ref>, where he uses a finite state automaton approach. In a technical report [5] we describe the algorithms that transform a pair of (x ,y ) coordinates to the corresponding tri-Peano and tri-Hilbert value, as well as the inverse, for the 2-dimensional space.
Reference: 3. <author> Faloutsos, C., T. Sellis, and N. Roussopoulos, </author> <title> ``Analysis of Object Oriented Spatial Access Methods,'' </title> <booktitle> Proc. ACM SIGMOD , pp. </booktitle> <pages> 426-439, </pages> <address> San Francisco, CA, </address> <month> May 27-29, </month> <year> 1987. </year> <note> also available as SRC-TR-87-30, UMIACS-TR-86-27, CS-TR-1781. </note>
Reference-contexts: Future work includes: 1) Comparison of the DOT method with other spatial access methods. such as the R + -trees <ref> [3] </ref>, [19], the z -ordering method [12] e.t.c. 2) Analytical study of the space filling curves to find the one with the best clustering properties (or to prove that the Hilbert curve is the best).
Reference: 4. <author> Faloutsos, C. and S. Roseman, </author> <title> ``Fractals for Secondary Key Retrieval,'' </title> <booktitle> Eighth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems (PODS), </booktitle> <pages> pp. 247-252, </pages> <address> Philadel--phia, PA, March 29-31, </address> <year> 1989. </year> <note> also available as UMIACS-TR-89-47 and CS-TR-2242 </note>
Reference-contexts: The second transformation must preserve the distance as much as possible. We suggest mappings based on the Hilbert curve, which outperformed its competitors in our experiments on 2-, 3- and 4- dimensional grids <ref> [4] </ref>. Traditional distance preserving mappings apply to square grids; in DOT, the second mapping has to operate on a triangular grid (see middle drawing of Figure 3.1).
Reference: 5. <author> Faloutsos, C. and Y. Rong, </author> <title> ``Spatial Access Methods Using Fractals: Algorithms and Performance Evaluation.,'' </title> <institution> UMIACS-TR-89-31, CS-TR-2214, Univ. of Maryland, Dept. of Computer Science, College Park, </institution> <month> Feb. </month> <year> 1989. </year>
Reference-contexts: Peano and tri-Peano ordering for a 44 grid. Hilbert and tri-Hilbert ordering for a 44 grid. has to be accounted for. The algorithm is discussed by Bially [2], where he uses a finite state automaton approach. In a technical report <ref> [5] </ref> we describe the algorithms that transform a pair of (x ,y ) coordinates to the corresponding tri-Peano and tri-Hilbert value, as well as the inverse, for the 2-dimensional space. The algorithm that find the transformation of a query in the final space deserves some discussion. <p> The resulting set of range queries in the final space can be easily answered by the underlying primary key access method. The idea of the second step is that the intermediate space is recursively divided and each of the pieces is checked against the query region <ref> [ 5] </ref> Each recursive call returns a set of ranges of the final space; the union of these sets (after collapsing consecutive ranges to one) is the result. All the examples we have presented are for 2-dimensional (intermediate) spaces.
Reference: 6. <author> Gunther, O., </author> <title> ``The Cell Tree: An Index for Geometric Data,'' </title> <note> Memorandum No. </note> <institution> UCB/ERL M86/89, Univ. of California, Berkeley, </institution> <month> Dec. </month> <year> 1986. </year>
Reference-contexts: The sub-regions may be over lapping, such as in R-trees [7] [16] or they may be dis joint, such as in the "cell"-trees <ref> [6] </ref> or in the R + -trees [19]. 3. Proposed approach The proposed method suggests pipelining the transformations of Class 1 and Class 2 of the survey sec tion.
Reference: 7. <author> Guttman, A., ``R-Trees: </author> <title> A Dynamic Index Structure for Spatial Searching,'' </title> <booktitle> Proc. ACM SIGMOD, </booktitle> <pages> pp. 47-57, </pages> <address> Boston, Mass, </address> <month> June </month> <year> 1984. </year>
Reference-contexts: Section 3 describes the proposed approach and alternative distance preserving mappings. Section 4 compares the alternatives using analysis, exhaustive enumeration, as well as simulation with a B + -tree as the underlying primary-key file structure. It also compares the alternative designs of DOT to R-trees <ref> [7] </ref>, which is one of the main spatial access methods. Section 5 presents the conclusions and future research directions. 2. Survey The problem is to store and retrieve spatial objects on secondary store (disk). As mentioned before, a general object is represented by its minimum enclosing rectangle. <p> Shuffling function: the point (x 1 x 2 , y 1 y 2 ) gives (x 1 y 1 x 2 y 2 ) Class 3: Methods that divide the original space into appropriate sub-regions. The sub-regions may be over lapping, such as in R-trees <ref> [7] </ref> [16] or they may be dis joint, such as in the "cell"-trees [6] or in the R + -trees [19]. 3. Proposed approach The proposed method suggests pipelining the transformations of Class 1 and Class 2 of the survey sec tion. <p> We chose a R - tree that uses linear split algorithm with nodes at least half full, because the search performance of a R -tree is not very sensitive to the choice of the split algorithm <ref> [7] </ref>. For the experiment, the root of the B + tree and the R -tree were assumed to be permanently stored in main memory.
Reference: 8. <author> Guttman, A., </author> <title> ``New Features for Relational Database Systems to Support CAD Applications,'' </title> <type> PhD Thesis, </type> <institution> University of California, Berkeley, </institution> <month> June </month> <year> 1984. </year>
Reference-contexts: 1. Introduction. Existing Database Management Systems (DBMSs) handle efficiently numbers and character strings, but not multi-dimensional data such as boxes, polygons, or even points in a multi-dimensional space. Multi-dimensional data arise in many applications, including: Cartography [21], Computer-Aided Design (CAD) and VLSI design systems [14], <ref> [8] </ref>, computer vision and robotics [1], traditional databases (a record with k attributes corresponds to a point in a k -d space), rule indexing in expert database systems [20], etc..
Reference: 9. <author> Hinrichs, K. and J. Nievergelt, </author> <title> ``The Grid File: A Data Structure to Support Proximity Queries on Spatial Objects,'' </title> <booktitle> Proc. of the WG'83 (Intern. Workshop on Graph Theoretic Concepts in Computer Science), </booktitle> <pages> pp. 100-113, </pages> <publisher> Trauner Verlag, </publisher> <address> Linz, Austria, </address> <year> 1983. </year>
Reference-contexts: Access methods for such rectangles form three classes [18], [19]. We examine the first two in more detail, because they are necessary to describe the proposed DOT method. Class 1: Methods that transform the rectangles into points in a space of higher dimensionality <ref> [9] </ref>. For example, a 2-d rectangle with sides parallel to the axes is characterized by four coordinates, and thus it can be considered as a point in a 4-d space. Therefore, secondary key access methods can be used. <p> The method works as follows (see Figure 3.1): Step 0. A spatial object from a k -d space is represented by its minimum enclosing rectan gle. Step 1. The rectangle is transformed into a point in a 2k -d space <ref> [9] </ref>. This transformation is called first transformation. Step 2. A distance preserving mapping [11] is used to map this point to a point in an 1-dimensional space. This transformation is called second transformation.
Reference: 10. <author> Mandelbrot, B., </author> <title> Fractal Geometry of Nature, W.H. </title> <publisher> Freeman, </publisher> <address> New York, </address> <year> 1977. </year>
Reference-contexts: Thus, we can use ANY primary key access method (e.g. B-tree). For the rest of this work, the method will be called DOT (for DOuble Transformation). Good distance-preserving mappings are essential for the performance of the method. We examine space-filling curves, also known as "fractals" <ref> [10] </ref>. These curves, such as the Peano curve and the Hilbert curve, define a path that traverses the points in a N N square grid. These curves can be generalized for higher dimensionality spaces.
Reference: 11. <author> Orenstein, J., </author> <title> ``Spatial Query Processing in an Object-Oriented Database System,'' </title> <booktitle> Proc. ACM SIGMOD, </booktitle> <pages> pp. 326-336, </pages> <address> Washington D.C., </address> <month> May </month> <year> 1986. </year>
Reference-contexts: Class 2: Methods that use space filling curves to map a k -d space onto a 1-d space. Such methods have been suggested, among others, by Orenstein <ref> [11] </ref>, [12]. The idea is to transform each k -dimensional object to a set of line segments, using Peano's space filling curve [15]. The Peano curve induces an ordering of the k -d points, giving a unique value (z value) to each grid point (pixel). <p> In Figure 2.2, rectangle "C" has to be split; the corresponding z values of the pieces are 0010 and 1000 respectively. Overlapping objects can be detected using the so-called "spatial join" <ref> [11] </ref> which is a simple extension of the natural join. This way minimal changes are required in database systems to support spatial opera tions. The only problem with this approach is the proliferation of records to store, because each rectangle is divided into many pieces. <p> A spatial object from a k -d space is represented by its minimum enclosing rectan gle. Step 1. The rectangle is transformed into a point in a 2k -d space [9]. This transformation is called first transformation. Step 2. A distance preserving mapping <ref> [11] </ref> is used to map this point to a point in an 1-dimensional space. This transformation is called second transformation.
Reference: 12. <author> Orenstein, J.A. and F.A. Manola, </author> <title> ``PROBE Spatial Data Modeling and Query Processing in an Image Database Application,'' </title> <journal> IEEE Trans. on Software Engineering, </journal> <volume> vol. 14, no. 5, </volume> <pages> pp. 611-629, </pages> <month> May </month> <year> 1988. </year>
Reference-contexts: Class 2: Methods that use space filling curves to map a k -d space onto a 1-d space. Such methods have been suggested, among others, by Orenstein [11], <ref> [12] </ref>. The idea is to transform each k -dimensional object to a set of line segments, using Peano's space filling curve [15]. The Peano curve induces an ordering of the k -d points, giving a unique value (z value) to each grid point (pixel). <p> The proposed DOT method avoids this problem, as we shall see later. C A C B 00 01 10 11 x 12840 z-axis B 16 Illustration of the z ordering method <ref> [12] </ref>. Shuffling function: the point (x 1 x 2 , y 1 y 2 ) gives (x 1 y 1 x 2 y 2 ) Class 3: Methods that divide the original space into appropriate sub-regions. <p> Future work includes: 1) Comparison of the DOT method with other spatial access methods. such as the R + -trees [3], [19], the z -ordering method <ref> [12] </ref> e.t.c. 2) Analytical study of the space filling curves to find the one with the best clustering properties (or to prove that the Hilbert curve is the best).
Reference: 13. <author> Orenstein, J.A., </author> <title> ``A Comparison of Spatial Query Processing Techniques for Native and Parameter Spaces,'' </title> <booktitle> Proc. of ACM SIGMOD conf., </booktitle> <pages> pp. 343-352, </pages> <address> Atlantic City, New Jersey, </address> <year> 1990. </year>
Reference-contexts: With minor changes in the upcoming algorithms, the object can be divided into a few pieces, either manually or automatically. Each of the pieces can be represented by its minimum enclosing rectangle, thus reducing the dead space at the expense of replicating information <ref> [13] </ref>) Notice that this part is completely optional in the proposed method, as opposed to the Class 2 methods, where the partitioning of each object is mandatory. The second transformation must preserve the distance as much as possible.
Reference: 14. <author> Ousterhout, J. K., G. T. Hamachi, R. N. Mayo, W. S. Scott, and G. S. Taylor, </author> <title> ``Magic: A VLSI Layout System,'' </title> <booktitle> 21st Design Automation Conference, </booktitle> <pages> pp. 152 - 159, </pages> <address> Alburquerque, NM, </address> <month> June </month> <year> 1984. </year>
Reference-contexts: 1. Introduction. Existing Database Management Systems (DBMSs) handle efficiently numbers and character strings, but not multi-dimensional data such as boxes, polygons, or even points in a multi-dimensional space. Multi-dimensional data arise in many applications, including: Cartography [21], Computer-Aided Design (CAD) and VLSI design systems <ref> [14] </ref>, [8], computer vision and robotics [1], traditional databases (a record with k attributes corresponds to a point in a k -d space), rule indexing in expert database systems [20], etc..
Reference: 15. <author> Peano, G., </author> <title> ``Sur une courbe qui remplit toute une aire plaine,'' </title> <journal> Mathematische Annalen, </journal> <volume> vol. 36, </volume> <pages> pp. 157-160, 1890. </pages>
Reference-contexts: Class 2: Methods that use space filling curves to map a k -d space onto a 1-d space. Such methods have been suggested, among others, by Orenstein [11], [12]. The idea is to transform each k -dimensional object to a set of line segments, using Peano's space filling curve <ref> [15] </ref>. The Peano curve induces an ordering of the k -d points, giving a unique value (z value) to each grid point (pixel). The term z ordering denotes the way that rectangles are mapped to a set of line segments on the Peano curve.
Reference: 16. <author> Roussopoulos, N. and D. Leifker, </author> <title> ``Direct Spatial Search on Pictorial Databases Using Packed R-Trees,'' </title> <booktitle> Proc. ACM SIGMOD, </booktitle> <address> Austin, Texas, </address> <month> May </month> <year> 1985. </year>
Reference-contexts: Shuffling function: the point (x 1 x 2 , y 1 y 2 ) gives (x 1 y 1 x 2 y 2 ) Class 3: Methods that divide the original space into appropriate sub-regions. The sub-regions may be over lapping, such as in R-trees [7] <ref> [16] </ref> or they may be dis joint, such as in the "cell"-trees [6] or in the R + -trees [19]. 3. Proposed approach The proposed method suggests pipelining the transformations of Class 1 and Class 2 of the survey sec tion.
Reference: 17. <author> Samet, H., </author> <title> ``The Quadtree and Related Hierarchical Data Structures,'' </title> <journal> ACM Computer Surveys, </journal> <volume> vol. 16, no. 2, </volume> <pages> pp. 187-260, </pages> <month> June </month> <year> 1984. </year>
Reference-contexts: It corresponds to the case where there are many, small rectangles; then, the transformed points in the intermediate space are located in a narrow strip above the diag onal. It seems that this distribution appears often in practical applications <ref> [17] </ref>. 2. The second distribution is called "double strip"(abbreviation D.S.); this is the case where there are many small rectangles with a few large rectangles within certain sizes (see Figure 4.1 (b)).
Reference: 18. <author> Samet, H., </author> <title> ``Hierarchical Representations of Collections of Small Rectangles,'' </title> <journal> ACM Computing Surveys, </journal> <volume> vol. 20, no. 4, </volume> <pages> pp. 271-309, </pages> <month> Dec. </month> <year> 1988. </year>
Reference-contexts: Section 5 presents the conclusions and future research directions. 2. Survey The problem is to store and retrieve spatial objects on secondary store (disk). As mentioned before, a general object is represented by its minimum enclosing rectangle. Access methods for such rectangles form three classes <ref> [18] </ref>, [19]. We examine the first two in more detail, because they are necessary to describe the proposed DOT method. Class 1: Methods that transform the rectangles into points in a space of higher dimensionality [9].
Reference: 19. <author> Sellis, T., N. Roussopoulos, and C. Faloutsos, </author> <title> ``The R+ Tree: A Dynamic Index for MultiDimensional Objects,'' </title> <booktitle> Proc. 13th International Conference on VLDB, </booktitle> <pages> pp. 507-518, </pages> <address> England,, </address> <month> Sept. </month> <year> 1987. </year> <note> also available as SRC-TR-87-32, UMIACS-TR-87-3, CS-TR-1795 </note>
Reference-contexts: Section 5 presents the conclusions and future research directions. 2. Survey The problem is to store and retrieve spatial objects on secondary store (disk). As mentioned before, a general object is represented by its minimum enclosing rectangle. Access methods for such rectangles form three classes [18], <ref> [19] </ref>. We examine the first two in more detail, because they are necessary to describe the proposed DOT method. Class 1: Methods that transform the rectangles into points in a space of higher dimensionality [9]. <p> The sub-regions may be over lapping, such as in R-trees [7] [16] or they may be dis joint, such as in the "cell"-trees [6] or in the R + -trees <ref> [19] </ref>. 3. Proposed approach The proposed method suggests pipelining the transformations of Class 1 and Class 2 of the survey sec tion. <p> Future work includes: 1) Comparison of the DOT method with other spatial access methods. such as the R + -trees [3], <ref> [19] </ref>, the z -ordering method [12] e.t.c. 2) Analytical study of the space filling curves to find the one with the best clustering properties (or to prove that the Hilbert curve is the best).
Reference: 20. <author> Stonebraker, M., T. Sellis, and E. Hanson, </author> <title> ``Rule Indexing Implementations in Database Systems,'' </title> <booktitle> Proceedings of the First International Conference on Expert Database Systems, </booktitle> <address> Charleston, SC, </address> <month> April </month> <year> 1986. </year>
Reference-contexts: Multi-dimensional data arise in many applications, including: Cartography [21], Computer-Aided Design (CAD) and VLSI design systems [14], [8], computer vision and robotics [1], traditional databases (a record with k attributes corresponds to a point in a k -d space), rule indexing in expert database systems <ref> [20] </ref>, etc.. Our goal here is to design a method with the following two characteristics: hhhhhhhhhhhhhhhhhh Also with University of Maryland Institute for Advanced Computer Studies (UMIACS).
Reference: 21. <author> White, M., N-trees: </author> <title> Large ordered Indexes for Multi-dimensional Space, Application Mathematics Research Staff, Statistical Research Division, </title> <type> U.S. </type> <institution> Bureau of the Census, </institution> <month> Dec. </month> <year> 1981. </year>
Reference-contexts: 1. Introduction. Existing Database Management Systems (DBMSs) handle efficiently numbers and character strings, but not multi-dimensional data such as boxes, polygons, or even points in a multi-dimensional space. Multi-dimensional data arise in many applications, including: Cartography <ref> [21] </ref>, Computer-Aided Design (CAD) and VLSI design systems [14], [8], computer vision and robotics [1], traditional databases (a record with k attributes corresponds to a point in a k -d space), rule indexing in expert database systems [20], etc..
References-found: 21

