URL: http://ballade.cs.ucla.edu:8080/~kohck/papers/sbws/sbws.ps.Z
Refering-URL: http://ballade.cs.ucla.edu:8080/~kohck/papers/abstract.html
Root-URL: http://www.cs.ucla.edu
Email: fcong, kohckg@cs.ucla.edu ksleung@ichips.intel.com  
Title: Simultaneous Buffer and Wire Sizing for Performance and Power Optimization  
Author: Jason Cong, Cheng-Kok Koh Kwok-Shing Leung 
Affiliation: Computer Science Dept., UCLA Intel Corporation  
Abstract: In this paper, we study the simultaneous buffer and wire sizing (SBWS) problem for delay and power dissipation minimization. We prove the BS/WS relation for optimal SBWS solutions. This relation leads to a polynomial time algorithm for computing the lower and upper bounds of the optimal SBWS solutions, which enables an efficient optimal algorithm for computing optimal SBWS solutions. We have applied the SBWS algorithms to the clock nets in a spread spectrum IF transceiver chip and HSPICE simulations show that our algorithms can reduce skew and power by a factor of 3:5X and 1:6X, respectively, when compared to the manual layout of the clock nets in the original chip. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> K. D. Boese, A. B. Kahng, and G. Robins, </author> <title> High-Performance Routing Trees With Identified Critical Sinks, </title> <booktitle> Proc. ACM/IEEE Design Automation Conf., </booktitle> <year> 1993, </year> <pages> pp. 182-187. </pages>
Reference-contexts: Recent studies show that interconnect delay can be reduced by interconnect topology optimization. For example, interconnect topologies such as maximum performance trees [4], A-trees [8], and low-delay trees <ref> [1] </ref> have been proposed to minimize interconnect delay. Interconnect delay can be further reduced by sizing device and wire. The wiresizing algorithms in [8, 9, 5, 13, 11] can minimize interconnect delay by optimally assigning different wire width to each wire segment in the interconnect design. <p> The performance measure t T (D; W ) evaluates the signal delay of the net from the source to one or several critical sinks, and it is expressed as a linear combination of the signal delays from the source to all sinks <ref> [9, 6, 1] </ref>: t T (D; W ) = l N i t T (D; W ) (1) where l N i measures the criticality of sink N i and t N i T (D; W ) is the signal delay from the source driver D 1 to sink N i
Reference: [2] <author> C.-P. Chen, Y.-W. Chang and D. F. Wong, </author> <title> Fast Performance-Driven Optimization for Buffered Clock Trees Based on Lagrangian Relaxation, </title> <booktitle> Proc. ACM/IEEE Design Automation Conf., </booktitle> <year> 1996, </year> <pages> pp. 405-408. </pages>
Reference-contexts: Although there is a polynomial time algorithm for minimizing maximum delay [11], the actual run-time is long and the memory requirement is prohibitively large (see experimental results in Section 5). <ref> [2] </ref> shows that by assigning appropriate weight of each sink based on Lagrangian relaxation, the weighted-sum formulation can be used iteratively to minimize maximum delay. Therefore, coupled with Lagrangian relaxation, the SBWS algorithms give an efficient algorithm to minimize maximum delay. <p> 4.4856 132.7 4.3088 4.0841 224.7 DCLK Power Dissipation (mW) Original Power: 25:9 Optimized Power: 15:5 Table 2: Comparison of skews and power dissipation of the manually layout DCLK net with the optimized DCLK net quality of the wiresizing solutions obtained by assigning appropriate weights to sinks by iterative Lagrangian relaxation <ref> [2] </ref> to minimize maximum delay, as compared to the solutions obtained by [11].
Reference: [3] <author> C. Chien, P. Yang, E. Cohen, R. Jain, and H. Samueli, </author> <title> A 12.7Mchip/s All-Digital BPSK Direct Sequence Spread-Spectrum IF Transceiver in 1.2mm CMOS, </title> <booktitle> Proc. IEEE Int'l Solid-State Circuits Conf., </booktitle> <year> 1994, </year> <pages> pp. 30-31. </pages>
Reference-contexts: We have applied the SBWS algorithms to the clock nets in a spread spectrum IF transceiver chip designed at UCLA for wireless multimedia information systems <ref> [3] </ref>. HSPICE simulations show that our algorithms can reduce power by a factor of 1:6X when compared to the manual layout of the clock nets in the original chip. <p> time of O (n (m n W R D R ) 2 log (m n W R D R )). 5 Experimental Results We apply the SBWS algorithms to the clock nets in a spread spectrum IF transceiver chip developed for wireless adaptive mobile information system (WAMIS) project at UCLA <ref> [3] </ref>. The integrated single-chip transceiver chip has a die size of 7:9 fi 10:0mm 2 , is designed under 1:2mm 2-level metal SCMOS technology, and has a total power dissipation of 1:1W . The chip is shown in Figure 4.
Reference: [4] <author> J. P. Cohoon and L. J. Randall, </author> <title> Critical Net Routing, </title> <booktitle> Proc. IEEE Int'l. Conf. on Computer Design, </booktitle> <year> 1991, </year> <pages> pp. 174-177. </pages>
Reference-contexts: Recent studies show that interconnect delay can be reduced by interconnect topology optimization. For example, interconnect topologies such as maximum performance trees <ref> [4] </ref>, A-trees [8], and low-delay trees [1] have been proposed to minimize interconnect delay. Interconnect delay can be further reduced by sizing device and wire.
Reference: [5] <author> J. Cong and L. </author> <title> He, Optimal Wiresizing for Interconnects with Multiple Sources, </title> <booktitle> Int'l Conf. on Computer-Aided Design, </booktitle> <month> Nov. </month> <year> 1995, </year> <pages> pp. 568-574. </pages>
Reference-contexts: For example, interconnect topologies such as maximum performance trees [4], A-trees [8], and low-delay trees [1] have been proposed to minimize interconnect delay. Interconnect delay can be further reduced by sizing device and wire. The wiresizing algorithms in <ref> [8, 9, 5, 13, 11] </ref> can minimize interconnect delay by optimally assigning different wire width to each wire segment in the interconnect design. Recently, [6, 12] explore the possibility of simultaneous driver/gate and wire sizing for performance and power optimization. <p> As in the many works on wiresizing <ref> [9, 6, 5] </ref>, we use the distributed Elmore delay model [10] for interconnect delay measure. The performance measure t T (D; W ) of a unbuffered routing tree T can be found in [6]. Let T now be the buffered routing tree for net N . <p> The most computationally expensive operation in the algorithm is the wiresizing operations which has the worst case complexity of O (n 3 r) [9]. However, with the use of bundled refinement operation <ref> [5] </ref>, the wiresizing algorithm runs much faster than O (n 3 r). Experimental results show that the algorithm terminates after three or four iterations in most cases. <p> Table 3 reports the run-time and the maximum delay by HSPICE simulations of six routed nets in an Intel microprocessor design <ref> [5] </ref>. 3 The experimental results show that comparable maximum delay is achieved by our method with significantly shorter run-time. Note that the wires in the six nets are divided into 100mm segments before we apply the two algorithms.
Reference: [6] <author> J. Cong and C.-K. Koh, </author> <title> Simultaneous Driver and Wire Sizing for Performance and Power Optimization, </title> <journal> IEEE Trans. on VLSI Systems, </journal> <month> Dec. </month> <year> 1994, </year> <pages> pp. 408-425. </pages>
Reference-contexts: Interconnect delay can be further reduced by sizing device and wire. The wiresizing algorithms in [8, 9, 5, 13, 11] can minimize interconnect delay by optimally assigning different wire width to each wire segment in the interconnect design. Recently, <ref> [6, 12] </ref> explore the possibility of simultaneous driver/gate and wire sizing for performance and power optimization. The works by [14, 11] consider buffer insertion for either performance optimization or power minimization. In this paper, we study the problem of simultaneous buffer and wire sizing (SBWS) for performance and power optimization. <p> In the SBWS problem, we assume that the buffer locations are given and the variables are the buffer sizes and the wire widths. The major contribution of this paper is that we extend the results on simultaneous driver and wire sizing in <ref> [6] </ref> where no buffer is considered. Analogous to the DS/WS relation in [6], we prove the BS/WS relation between buffer sizing and optimal wire sizing. <p> The major contribution of this paper is that we extend the results on simultaneous driver and wire sizing in <ref> [6] </ref> where no buffer is considered. Analogous to the DS/WS relation in [6], we prove the BS/WS relation between buffer sizing and optimal wire sizing. The relation leads to a polynomial time algorithm for computing the lower and upper bounds of the optimal SBWS solutions, which enables an efficient optimal algorithm for computing optimal SBWS solutions. <p> The performance measure t T (D; W ) evaluates the signal delay of the net from the source to one or several critical sinks, and it is expressed as a linear combination of the signal delays from the source to all sinks <ref> [9, 6, 1] </ref>: t T (D; W ) = l N i t T (D; W ) (1) where l N i measures the criticality of sink N i and t N i T (D; W ) is the signal delay from the source driver D 1 to sink N i <p> We measure the performance and power dissipation as follows. Note that the formulations and notation used in this paper follow <ref> [6] </ref> closely. 2.1 Performance Measure for Buffered Tree For simplicity, we model a buffer as a switch-level RC device, with C d , C g and R min being the diffusion capacitance, gate capacitanceand resistance of the smallest device, respectively, as in [6]. <p> formulations and notation used in this paper follow <ref> [6] </ref> closely. 2.1 Performance Measure for Buffered Tree For simplicity, we model a buffer as a switch-level RC device, with C d , C g and R min being the diffusion capacitance, gate capacitanceand resistance of the smallest device, respectively, as in [6]. Note however that our results are not restricted to this simple model only. <p> As in the many works on wiresizing <ref> [9, 6, 5] </ref>, we use the distributed Elmore delay model [10] for interconnect delay measure. The performance measure t T (D; W ) of a unbuffered routing tree T can be found in [6]. Let T now be the buffered routing tree for net N . <p> As in the many works on wiresizing [9, 6, 5], we use the distributed Elmore delay model [10] for interconnect delay measure. The performance measure t T (D; W ) of a unbuffered routing tree T can be found in <ref> [6] </ref>. Let T now be the buffered routing tree for net N . A buffer in T decomposes the net into two subnets. In general, b 1 buffers in T decompose the net into a hierarchy of b subnets. <p> Note that CL has three components: the diffusion capacitance of the driver, C d d, the wire capacitance of the routing tree and the total capacitance of the sinks in the tree. Consider an un buffered tree T driven by driver D with size d. From <ref> [6] </ref>, the trade-off between performance and power in Eqn. (2) can be written as follows: ob j T (D; W ) = a L C d d + t T (D; W ) (4) where t T (D; W ) is an expression similar to t T (D; W ) except <p> The key to solving the SDWS problem is the DS/WS relation between a driver sizing solution and a wiresizing solution <ref> [6] </ref>. 3.1 DS/WS Relation of Optimal SDWS Solutions Given a routing tree T with one or more critical sinks. Let R d be the resistance of the driver driving the routing tree and W fl be the corresponding optimal wire width assignment. <p> Consider another driver such that R 0 d (&gt; R d ) is the resistance of the driver and W 0 fl is the corresponding optimal wire width assignment. (DS/WS Relation): <ref> [6] </ref> For any tree T with one or more critical sinks, R d &lt; R 0 d implies W fl dominates W 0 fl . 2 A wire width assignment W dominates another assignment W 0 if for any segment E, the width assignment of E in W is greater than <p> This is a generalization of the results for driver sizing of a chain of cascaded drivers in Theorem 1 in <ref> [6] </ref>. The constant stage ratio in Theorem 1 of [6] can be derived from the above equality since in the case of SDWS, l D i = l D j , and r 0 E2P (D j ;D i ) n u2sink (E) l u o w E 0 due to <p> This is a generalization of the results for driver sizing of a chain of cascaded drivers in Theorem 1 in <ref> [6] </ref>. The constant stage ratio in Theorem 1 of [6] can be derived from the above equality since in the case of SDWS, l D i = l D j , and r 0 E2P (D j ;D i ) n u2sink (E) l u o w E 0 due to negligible wire resistance between cascaded drivers. <p> E is a wire segment in the routing tree and we use e to denote both a wire segment in the routing tree and the RC-segment representing driver or buffer; see the discussion on the edge N 0 -N + in Section 2 of <ref> [6] </ref>. (c;t)-Pair-Computation Let e 0 be any child edge of e S 1 set of (c;t) pairs of e for each remaining child edge e 0 of e S 2 set of (c; t) pairs of e 0 ; S / 0; for i 1 to jS 1 j and j
Reference: [7] <author> J. Cong, C.-K. Koh and K.-S. Leung, </author> <title> Simultaneous Buffer and Wire Sizing for Performance and Power Optimization, </title> <institution> UCLA Computer Science Department Technical Report 960017, </institution> <month> Jun. </month> <year> 1996, </year> <note> available at http://ballade.cs.ucla.edu/ ~kohck/papers/sbws/sbwstr.ps.Z. </note>
Reference-contexts: The details of the derivation are given in <ref> [7] </ref>. We can conclude from the above equation that if we are given the buffer sizes, we can obtain an optimal wiresizing solution by applying the technique in [9]. 2.2 Trade-Off Between Performance and Power For simplicity, we consider only capacitive power dissipation in our formulation. <p> Similarly, a change in the wiresizing solution has both upstream and downstream effect on the buffer and wire sizing solution. To use a similar approach to solve the SBWS problem, we present the BS/WS relation between buffer and wire sizing solutions in the following. The proofs are given in <ref> [7] </ref>. 3.2 Properties of Optimal Buffer Sizing Solutions Consider a buffer D i with a parent buffer D j . Assume that we have a wiresizing solution W and we know the size of D j and the loading capacitance of the sinks that D i is driving.
Reference: [8] <author> J. Cong, K.-S. Leung, and D. Zhou, </author> <title> Performance-Driven Interconnect Design Based on Distributed RC Delay Model, </title> <booktitle> Proc. ACM/IEEE Design Automation Conf., </booktitle> <year> 1993, </year> <pages> pp. 606-611. </pages>
Reference-contexts: Recent studies show that interconnect delay can be reduced by interconnect topology optimization. For example, interconnect topologies such as maximum performance trees [4], A-trees <ref> [8] </ref>, and low-delay trees [1] have been proposed to minimize interconnect delay. Interconnect delay can be further reduced by sizing device and wire. The wiresizing algorithms in [8, 9, 5, 13, 11] can minimize interconnect delay by optimally assigning different wire width to each wire segment in the interconnect design. <p> For example, interconnect topologies such as maximum performance trees [4], A-trees [8], and low-delay trees [1] have been proposed to minimize interconnect delay. Interconnect delay can be further reduced by sizing device and wire. The wiresizing algorithms in <ref> [8, 9, 5, 13, 11] </ref> can minimize interconnect delay by optimally assigning different wire width to each wire segment in the interconnect design. Recently, [6, 12] explore the possibility of simultaneous driver/gate and wire sizing for performance and power optimization.
Reference: [9] <author> J. Cong and K.-S. Leung, </author> <title> Optimal Wiresizing Under Elmore Delay Model, </title> <journal> IEEE Trans. on Computer-Aided Design, </journal> <month> Mar. </month> <year> 1995, </year> <pages> pp. 321-336. </pages>
Reference-contexts: For example, interconnect topologies such as maximum performance trees [4], A-trees [8], and low-delay trees [1] have been proposed to minimize interconnect delay. Interconnect delay can be further reduced by sizing device and wire. The wiresizing algorithms in <ref> [8, 9, 5, 13, 11] </ref> can minimize interconnect delay by optimally assigning different wire width to each wire segment in the interconnect design. Recently, [6, 12] explore the possibility of simultaneous driver/gate and wire sizing for performance and power optimization. <p> The performance measure t T (D; W ) evaluates the signal delay of the net from the source to one or several critical sinks, and it is expressed as a linear combination of the signal delays from the source to all sinks <ref> [9, 6, 1] </ref>: t T (D; W ) = l N i t T (D; W ) (1) where l N i measures the criticality of sink N i and t N i T (D; W ) is the signal delay from the source driver D 1 to sink N i <p> In both cases, we normalize l N i 's such that i=1::n l N i = 1. The weighted-sum formulation leads to efficient optimal wiresizing algorithm due to the separability, the monotone property, and most importantly, the dominance property <ref> [9] </ref>. However, the separability property does not hold for min-imizing maximum delay [13] and it is not clear if the dominance property still holds for maximum delay minimization. <p> As in the many works on wiresizing <ref> [9, 6, 5] </ref>, we use the distributed Elmore delay model [10] for interconnect delay measure. The performance measure t T (D; W ) of a unbuffered routing tree T can be found in [6]. Let T now be the buffered routing tree for net N . <p> The details of the derivation are given in [7]. We can conclude from the above equation that if we are given the buffer sizes, we can obtain an optimal wiresizing solution by applying the technique in <ref> [9] </ref>. 2.2 Trade-Off Between Performance and Power For simplicity, we consider only capacitive power dissipation in our formulation. However, the results still hold when short-circuit power dissipation is also considered. <p> Now, we perform a delay optimal wiresizing algorithm <ref> [9] </ref> on the routing tree of each sub-net based on the resistance of the driver of the subnet and the sink capacitances of downstream buffers or loading pins. A new iteration of local refinement operations for buffers are carried out to yield a new buffer sizing solutions. <p> SBWS LU-Bound Algorithm W l Min Wire Width; D l Min Bu f f er Size; while true Compute new buffer size by Theorem 1: D l iterations of bu f f er local re f inement (D l ; W l ); Compute new wire size by <ref> [9] </ref>: W Optimal Wiresizing (D l ; W l ); if W &gt; W l then W l W else break; end while Output (D l ; W l ) as the lower bound of the optimal SBWS solution; Upper bound D u and W u can be computed in a <p> Similarly, we can start with a maximum wire width assignment and maximum driver size assignment and compute the upper bound of the optimal SBWS solution. The most computationally expensive operation in the algorithm is the wiresizing operations which has the worst case complexity of O (n 3 r) <ref> [9] </ref>. However, with the use of bundled refinement operation [5], the wiresizing algorithm runs much faster than O (n 3 r). Experimental results show that the algorithm terminates after three or four iterations in most cases.
Reference: [10] <author> W. C. </author> <title> Elmore, The Transient Response of Damped Linear Network with Particular Regard to Wideband Amplifier, </title> <journal> J. Applied Physics, </journal> <volume> 19(1948), </volume> <pages> pp. 55-63. </pages>
Reference-contexts: Note that we use t T without superscript to denote the weighted sum of delay and t N i T with superscript N i to denote the Elmore delay <ref> [10] </ref> from source driver to sink N i . The weighted-sum formulation can be used in two scenarios. For performance optimization, large l's are used for timing critical sinks. For clock skew minimization, clock pins with longer (shorter) delay should be assigned with higher (lower) criticality. <p> As in the many works on wiresizing [9, 6, 5], we use the distributed Elmore delay model <ref> [10] </ref> for interconnect delay measure. The performance measure t T (D; W ) of a unbuffered routing tree T can be found in [6]. Let T now be the buffered routing tree for net N . A buffer in T decomposes the net into two subnets.
Reference: [11] <author> J. Lillis, C.-K. Cheng, and T.-T. Y. Lin, </author> <title> Optimal Wire Sizing and Buffer Insertion for Low Power and a Generalized Delay Model, </title> <booktitle> Proc. Int'l Conf. on Computer-Aided Design, </booktitle> <month> Nov. </month> <year> 1995, </year> <pages> pp. 138-143. </pages>
Reference-contexts: For example, interconnect topologies such as maximum performance trees [4], A-trees [8], and low-delay trees [1] have been proposed to minimize interconnect delay. Interconnect delay can be further reduced by sizing device and wire. The wiresizing algorithms in <ref> [8, 9, 5, 13, 11] </ref> can minimize interconnect delay by optimally assigning different wire width to each wire segment in the interconnect design. Recently, [6, 12] explore the possibility of simultaneous driver/gate and wire sizing for performance and power optimization. <p> The wiresizing algorithms in [8, 9, 5, 13, 11] can minimize interconnect delay by optimally assigning different wire width to each wire segment in the interconnect design. Recently, [6, 12] explore the possibility of simultaneous driver/gate and wire sizing for performance and power optimization. The works by <ref> [14, 11] </ref> consider buffer insertion for either performance optimization or power minimization. In this paper, we study the problem of simultaneous buffer and wire sizing (SBWS) for performance and power optimization. <p> However, the separability property does not hold for min-imizing maximum delay [13] and it is not clear if the dominance property still holds for maximum delay minimization. Although there is a polynomial time algorithm for minimizing maximum delay <ref> [11] </ref>, the actual run-time is long and the memory requirement is prohibitively large (see experimental results in Section 5). [2] shows that by assigning appropriate weight of each sink based on Lagrangian relaxation, the weighted-sum formulation can be used iteratively to minimize maximum delay. <p> This speeds up the Optimal SBWS Algorithms tremendously. In fact, the bounds computed by the SBWS-LU-Bound Algorithm are very tight and they meet in most of the cases. We use a technique similar to that in <ref> [14, 11] </ref> to find the optimal SBWS solution. Note that the objective in [14, 11] is to minimize the maximum Elmore delay. Our objective in this paper is to minimize the weighted delay. <p> This speeds up the Optimal SBWS Algorithms tremendously. In fact, the bounds computed by the SBWS-LU-Bound Algorithm are very tight and they meet in most of the cases. We use a technique similar to that in <ref> [14, 11] </ref> to find the optimal SBWS solution. Note that the objective in [14, 11] is to minimize the maximum Elmore delay. Our objective in this paper is to minimize the weighted delay. <p> Optimized Power: 15:5 Table 2: Comparison of skews and power dissipation of the manually layout DCLK net with the optimized DCLK net quality of the wiresizing solutions obtained by assigning appropriate weights to sinks by iterative Lagrangian relaxation [2] to minimize maximum delay, as compared to the solutions obtained by <ref> [11] </ref>. Table 3 reports the run-time and the maximum delay by HSPICE simulations of six routed nets in an Intel microprocessor design [5]. 3 The experimental results show that comparable maximum delay is achieved by our method with significantly shorter run-time. <p> Note that the wires in the six nets are divided into 100mm segments before we apply the two algorithms. Finer division of wires leads to prohibitively large memory requirement for the algorithm in <ref> [11] </ref>. The SBWS algorithm with iterative Lagrangian relaxation does not have such problem. Net Optimal Algorithm in [11] SBWS with Lagrange-Multiplier Delay (ns) Run-Time (s) Delay (ns) Run-Time (s) net1 0.17145 3.729 0.17145 0.114 net3 0.35121 207.194 0.35121 3.924 net5 0.42730 253.091 0.45300 0.172 Table 3: Comparison between wiresizing solutions obtained <p> Finer division of wires leads to prohibitively large memory requirement for the algorithm in <ref> [11] </ref>. The SBWS algorithm with iterative Lagrangian relaxation does not have such problem. Net Optimal Algorithm in [11] SBWS with Lagrange-Multiplier Delay (ns) Run-Time (s) Delay (ns) Run-Time (s) net1 0.17145 3.729 0.17145 0.114 net3 0.35121 207.194 0.35121 3.924 net5 0.42730 253.091 0.45300 0.172 Table 3: Comparison between wiresizing solutions obtained by [11] and the Lagrangian-Based approach for minimizing maximum delay. <p> Net Optimal Algorithm in <ref> [11] </ref> SBWS with Lagrange-Multiplier Delay (ns) Run-Time (s) Delay (ns) Run-Time (s) net1 0.17145 3.729 0.17145 0.114 net3 0.35121 207.194 0.35121 3.924 net5 0.42730 253.091 0.45300 0.172 Table 3: Comparison between wiresizing solutions obtained by [11] and the Lagrangian-Based approach for minimizing maximum delay.
Reference: [12] <author> N. Menezes, S. Pullela, and L. T. Pillage, </author> <title> Simultaneous Gate and InterconnectSiz-ing for Circuit-Level Delay Optimization, </title> <booktitle> in Proc. ACM/IEEE Design Automation Conf., </booktitle> <month> Jun. </month> <year> 1995, </year> <pages> pp. 690-695. </pages>
Reference-contexts: Interconnect delay can be further reduced by sizing device and wire. The wiresizing algorithms in [8, 9, 5, 13, 11] can minimize interconnect delay by optimally assigning different wire width to each wire segment in the interconnect design. Recently, <ref> [6, 12] </ref> explore the possibility of simultaneous driver/gate and wire sizing for performance and power optimization. The works by [14, 11] consider buffer insertion for either performance optimization or power minimization. In this paper, we study the problem of simultaneous buffer and wire sizing (SBWS) for performance and power optimization.
Reference: [13] <author> S. S. Sapatnekar, </author> <title> RC Interconnect Optimization under the Elmore Delay Model, </title> <booktitle> in Proc. ACM/IEEE Design Automation Conf., </booktitle> <year> 1994, </year> <pages> pp. 387-391. </pages>
Reference-contexts: For example, interconnect topologies such as maximum performance trees [4], A-trees [8], and low-delay trees [1] have been proposed to minimize interconnect delay. Interconnect delay can be further reduced by sizing device and wire. The wiresizing algorithms in <ref> [8, 9, 5, 13, 11] </ref> can minimize interconnect delay by optimally assigning different wire width to each wire segment in the interconnect design. Recently, [6, 12] explore the possibility of simultaneous driver/gate and wire sizing for performance and power optimization. <p> The weighted-sum formulation leads to efficient optimal wiresizing algorithm due to the separability, the monotone property, and most importantly, the dominance property [9]. However, the separability property does not hold for min-imizing maximum delay <ref> [13] </ref> and it is not clear if the dominance property still holds for maximum delay minimization.
Reference: [14] <author> L. P. P. P. van Ginneken, </author> <title> Buffer Placement in Distributed RC-tree Networks for Minimal Elmore Delay, </title> <booktitle> in Proc. Int'l Symp. on Circuits and Systems, </booktitle> <year> 1990, </year> <pages> pp. 865-868. </pages>
Reference-contexts: The wiresizing algorithms in [8, 9, 5, 13, 11] can minimize interconnect delay by optimally assigning different wire width to each wire segment in the interconnect design. Recently, [6, 12] explore the possibility of simultaneous driver/gate and wire sizing for performance and power optimization. The works by <ref> [14, 11] </ref> consider buffer insertion for either performance optimization or power minimization. In this paper, we study the problem of simultaneous buffer and wire sizing (SBWS) for performance and power optimization. <p> This speeds up the Optimal SBWS Algorithms tremendously. In fact, the bounds computed by the SBWS-LU-Bound Algorithm are very tight and they meet in most of the cases. We use a technique similar to that in <ref> [14, 11] </ref> to find the optimal SBWS solution. Note that the objective in [14, 11] is to minimize the maximum Elmore delay. Our objective in this paper is to minimize the weighted delay. <p> This speeds up the Optimal SBWS Algorithms tremendously. In fact, the bounds computed by the SBWS-LU-Bound Algorithm are very tight and they meet in most of the cases. We use a technique similar to that in <ref> [14, 11] </ref> to find the optimal SBWS solution. Note that the objective in [14, 11] is to minimize the maximum Elmore delay. Our objective in this paper is to minimize the weighted delay.
Reference: [15] <author> N. H. E. Weste and K. Eshraghian, </author> <title> Principles of CMOS VLSI Design: a Systems Perspective 2nd ed, </title> <publisher> Addison-Wesley, </publisher> <year> 1993. </year>
Reference-contexts: Given a total capacitance CL driven by the driver, the capacitive dissipation of the single driver of size d is Power cap = f CL V 2 dd , where f is the switching frequency of the input signal <ref> [15] </ref>. To simplify the expression, we let L = f V 2 dd and write Power cap = L CL.
References-found: 15

