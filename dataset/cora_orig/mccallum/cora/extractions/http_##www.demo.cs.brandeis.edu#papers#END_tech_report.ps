URL: http://www.demo.cs.brandeis.edu/papers/END_tech_report.ps
Refering-URL: http://www.demo.cs.brandeis.edu/papers/long.html
Root-URL: http://www.cs.brandeis.edu
Title: Evolving Non-Determinism: An Inventive and Efficient Tool for Optimization and Discovery of Strategies  
Author: Hugues Juille 
Keyword: evolutionary strategies, sorting networks, optimization techniques.  
Address: Waltham, Massachusetts  
Affiliation: Computer Science Department Volen Center for Complex Systems Brandeis University  
Pubnum: Technical Report  
Email: &lt;hugues@cs.brandeis.edu&gt;  
Date: 23 Nov 1994  
Abstract: In the field of optimization and machine learning techniques, some very efficient and promising tools like Genetic Algorithms (GAs) and Hill-Climbing have been designed. In this same field, the Evolving Non-Determinism (END) model proposes an inventive way to explore the space of states that, combined with the use of simulated co-evolution, remedies some drawbacks of these previous techniques and even allow this model to outperform them on some difficult problems. This new model has been applied to the sorting network problem, a reference problem that challenged many computer scientists, and an original one-player game named Solitaire. For the first problem, the END model has been able to build from scratch some sorting networks as good as the best known for the 16-input problem. It even improved by one comparator a 25 years old result for the 13-input problem! For the Solitaire game, END evolved a strategy comparable to a human designed strategy. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Richard Belew and Thomas Kammeyer, </author> <title> "Evolving Aesthetic Sorting Networks using Developmental Grammars". </title> <booktitle> In Proceedings of the Fifth International Conference of Genetic Algorithms. </booktitle>
Reference: [2] <author> Roberto Bisiani, </author> <title> "Beam Search". </title> <booktitle> In Encyclopedia of Artificial Intelligence, </booktitle> <volume> Vol. 2, </volume> <booktitle> Second Edition, </booktitle> <publisher> John Wiley & Sons, </publisher> <year> 1992. </year>
Reference-contexts: Finally, an analogy may also be done between the END model and a classical Artificial Intelligence heuristic search technique: Beam Search <ref> [2] </ref>. In this technique, a number of nearly optimal alternatives (the beam) are examined in parallel and some heuristic rules are used to focus only on promising alternatives, therefore keeping the size of the beam as small as possible.
Reference: [3] <author> Ronald L. Graham, Donald E. Knuth and Oren Patashnik, </author> <title> Concrete Mathematics, a Foundation for Computer Science. Second edition, </title> <address> Addisson-Wesley, </address> <year> 1989. </year>
Reference-contexts: These numbers are called Eulerian numbers <ref> [3] </ref> and are noted t m . n represents the number of permutations of S n that have m ascents.
Reference: [4] <author> Milton W. Green, </author> <title> "Some Improvements in Nonadaptive Sorting Algorithms". </title> <institution> Stanford Research Institute. Menlo Park, California. </institution>
Reference: [5] <author> W. Daniel Hillis, </author> <title> "Co-Evolving Parasites Improve Simulated Evolution as an Optimization Procedure". </title> <booktitle> In Artificial Life II, </booktitle> <editor> Langton, et al, Eds. </editor> <publisher> Addison Wesley, </publisher> <year> 1992, </year> <pages> pp. 313-324. </pages>
Reference-contexts: The first person who used optimization technics to design sorting networks is W. Daniel Hillis. In <ref> [5] </ref>, he used GAs and then co-evolution to find a 61-comparator, only one more sorting exchange than the construction of Green. 18 However, Hillis considerably reduced the size of the search space since he initial-ized genes with the first 32 comparators of Green's network.
Reference: [6] <author> Kim Kinnear, </author> <title> "Generality and Difficulty in GP: Evolving a Sort". </title> <booktitle> In Proceedings of the Fifth International Conference on Genetic Algorithms, </booktitle> <editor> S. Forrest, </editor> <publisher> Morgan Kaufmann Publishers, </publisher> <year> 1993. </year>
Reference-contexts: Ryan [10] applied a Genetic Programming approach to the problem of 9-input sorting networks. Kim Kinnear also used GP, but in the area of adaptive sorting algorithms, to find an algorithm to sort n elements in O (n 2 ) time <ref> [6] </ref>. Ian Parberry ([9]) worked on the optimal depth problem and found out optimal values for 9 and 10-input sorting networks using an efficient exhaustive search. 4.1.3 Non-Deterministic Sorting Network Algorithm The aim of this non-deterministic algorithm is to generate incrementally and randomly some valid sorting networks.
Reference: [7] <author> Donald E. Knuth, </author> <title> The Art of Computer Programming: Volume 3 Sorting and Searching. </title> <publisher> Addison Wesley, </publisher> <year> 1973. </year>
Reference-contexts: In this paper, the END model is applied on two difficult "real-life" problems. The first one is the follow-up of an established problem since several approaches ([1, 5, 9]) have been used to try to improve some 25 years old results concerning sorting networks <ref> [7] </ref>. Actually, this problem was also at the origin of an early paper [11] in which GAs were used to try to replicate Hillis's experiment for the 16 input problem and in which some ideas of the END model were presented. <p> This kind of algorithm received much attention since they allow an implementation as circuits: comparison-swap can be hard-wired. Such an oblivious comparison-based algorithm for sorting n values is called an n-input sorting network (a survey of sorting networks research is in <ref> [7] </ref>). There is a convenient graphical representation of sorting networks as the one in figure 7 which is a 10-input sorting network. <p> Table 1 presents these current bounds on depth for sorting networks for n 16. 2. Its length, that is the number of comparison-swap used. Optimal sorting networks for n 8 are known exactly and are presented in <ref> [7] </ref> along with the most efficient sorting networks to date for 9 n 16. Table 2 presents 17 s s s s s s s s s s s s s s s s s s s s s s s s s s s s s [7]. inputs 1 2 <p> are presented in <ref> [7] </ref> along with the most efficient sorting networks to date for 9 n 16. Table 2 presents 17 s s s s s s s s s s s s s s s s s s s s s s s s s s s s s [7]. inputs 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Upper 0 1 3 3 5 5 6 6 7 7 8 8 9 9 9 9 Lower 0 1 3 3 5 5 6 6 7 7 7 7 7 7 7 <p> The 16-input sorting network has been the most challenging one. Knuth <ref> [7] </ref> recounts its history as follows. First, in 1962, Bose and Nelson discovered a method for constructing sorting networks that used 65 comparisons and conjectured that it was best possible. Two years later, R. W. Floyd and D. E. Knuth, and independently K. E.
Reference: [8] <author> Steven Levy, </author> <title> Artificial Life: the Quest for a New Creation.Pantheon Books, </title> <year> 1992. </year>
Reference-contexts: Hillis first addressed this sorting problem, evolving some organisms he called "Ramps" <ref> [8] </ref> and he discovered how difficult it can be because of the topology of the space of states. However, the study of this problem allowed him to study with success some inventive features to evolve his population of organisms.
Reference: [9] <author> Ian Parberry, </author> <title> "A Computer-Assisted Optimal Depth Lower Bound for Nine-Input Sorting Networks". </title> <journal> In Mathematical Systems Theory, </journal> <volume> No 24, </volume> <year> 1991, </year> <pages> pp. 101-116. </pages>
Reference-contexts: Its depth which is defined as the number of parallel steps that it takes to sort any input, given that in one step disjoint comparison-swap operations can take place simultaneously. Current upper and lower bounds are provided in <ref> [9] </ref>, in which the depth for 9- and 10-input sorting networks is proved to be optimal using an algorithm executed on a supercomputer. Table 1 presents these current bounds on depth for sorting networks for n 16. 2. Its length, that is the number of comparison-swap used.
Reference: [10] <author> Conor Ryan, </author> <booktitle> "Pygmies and Civil Servants". In Advances in Genetic Programming, </booktitle> <editor> Kim Kinnear, Ed. </editor> <publisher> MIT Press, </publisher> <year> 1994. </year>
Reference-contexts: Two attempts were also done on the 15-input problem and the model was able to find two 56 comparators sorting networks, again as good as the best known, with no initial conditions. Ryan <ref> [10] </ref> applied a Genetic Programming approach to the problem of 9-input sorting networks. Kim Kinnear also used GP, but in the area of adaptive sorting algorithms, to find an algorithm to sort n elements in O (n 2 ) time [6].
Reference: [11] <author> Patrick Tufts and Hugues Juille, </author> <title> "Evolving Non-Deterministic Algorithms for Efficient Sorting Networks". </title> <journal> Unpublished. </journal> <volume> 27 </volume>
Reference-contexts: The first one is the follow-up of an established problem since several approaches ([1, 5, 9]) have been used to try to improve some 25 years old results concerning sorting networks [7]. Actually, this problem was also at the origin of an early paper <ref> [11] </ref> in which GAs were used to try to replicate Hillis's experiment for the 16 input problem and in which some ideas of the END model were presented. <p> Indeed, since the pattern of the last 28 comparators of Green's construction is not very intuitive, one can think that a better solution exists with the same initial 32 comparators. In a previous paper, overviewing the END model <ref> [11] </ref>, a 60 comparator sorting network was found out with the same initial conditions as Hillis, that is as good as the best known.
References-found: 11

