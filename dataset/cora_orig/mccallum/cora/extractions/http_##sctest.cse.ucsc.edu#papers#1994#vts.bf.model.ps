URL: http://sctest.cse.ucsc.edu/papers/1994/vts.bf.model.ps
Refering-URL: http://www.cse.ucsc.edu/~larrabee/publications.html
Root-URL: http://www.cse.ucsc.edu
Title: On Evaluating Competing Bridge Fault Models for CMOS ICs  
Author: Brian Chess Carl Roth Tracy Larrabee 
Address: Santa Cruz 95064  
Affiliation: Computer Engineering, University of California,  
Abstract: We compare the accuracy, speed and applicability to test generation of existing bridge fault modeling solutions. We identify some previously undiscussed anomalous circuit behaviors, and describe the extent to which they affect bridge fault simulation and testing. Finally, we present a system for evaluating bridge fault models in a test generation environment, and we present an experiment that provides an assessment of how defect coverage can be affected by a generating and checking model. 
Abstract-found: 1
Intro-found: 1
Reference: [Ack88] <author> J. M. Acken. </author> <title> Deriving Accurate Fault Models. </title> <type> PhD thesis, </type> <institution> Stanford Univer 8 sity, Department of Electrical Engi--neering, </institution> <month> September </month> <year> 1988. </year>
Reference-contexts: This two component model can be derived in a number of ways|two notable methods are analog simulation [FL91, RP93] and the voting model <ref> [Ack88, AM91] </ref>. Two component simulation works well at modeling the upstream components from the fault site, but fails to take into account the possible sensitive behavior of downstream components. This oversight can be dealt with in two ways.
Reference: [AM85] <author> M. Abramovici and P. R. Menon. </author> <title> A practical approach to fault simulation and test generation for bridging faults. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-34:658-663, </volume> <year> 1985. </year>
Reference-contexts: The wired-logic model (wired-AND or wired-OR) is the easiest model to implement for simulation and test pattern generation. It has the benefit of speed; the wired-logic model closely resembles the single-stuck-at fault model with a few additional constraints <ref> [AM85] </ref>. The wired-logic model assumes that one of either the nmos or pmos networks will always determine the circuit's result. It is relatively easy to present examples in real circuits where this is not the case [FL91, GP92]. <p> For wired logic, the issue of a bridge fault creating feedback is easy to deal with. When we consider the wired-AND model, if the fault appears on the back wire, and it sensitizes the front wire, the circuit may oscillate <ref> [AM85] </ref>. All we need to do is disallow tests in which the front wire is sensitized to the back wire. Similar arguments can be made for wired-OR tests invalidated by sequential behavior. More general arguments can be made for any possible Boolean bridge function [CL93]. <p> This improvement requires a much smaller programming effort than that required to generate tests with the two-component model because wired-AND test generation is very similar to stuck-at test generation <ref> [AM85] </ref>.
Reference: [AM91] <author> J. M. Acken and S. D. Millman. </author> <title> Accurate modeling and simulation of bridging faults. </title> <booktitle> In Proceedings of the Custom Integrated Circuits Conference, </booktitle> <pages> pages 17.4.1-17.4.4, </pages> <year> 1991. </year>
Reference-contexts: In the dominant technologies of the time (such as TTL), bridges did create wired logic. However, wired logic does not accurately reflect the behavior of CMOS circuits <ref> [AM91, FL91, MG91] </ref>. <p> This two component model can be derived in a number of ways|two notable methods are analog simulation [FL91, RP93] and the voting model <ref> [Ack88, AM91] </ref>. Two component simulation works well at modeling the upstream components from the fault site, but fails to take into account the possible sensitive behavior of downstream components. This oversight can be dealt with in two ways.
Reference: [AM92] <author> J. M. Acken and S. D. Millman. </author> <title> Fault model evolution for diagnosis: Accuracy vs precision. </title> <booktitle> In Proceedings of the Custom Integrated Circuits Conference, </booktitle> <year> 1992. </year>
Reference-contexts: fact, the actual CMOS behavior is far enough from wired-logic, that we must deal with voltages all the way from power to ground|including voltages that may be interpreted by some gate inputs as a logic 0 and some as a logic 1; this is known as the Byzantine Generals problem <ref> [AM92] </ref>. The wired-logic model (wired-AND or wired-OR) is the easiest model to implement for simulation and test pattern generation. It has the benefit of speed; the wired-logic model closely resembles the single-stuck-at fault model with a few additional constraints [AM85]. <p> Depending on the input thresholds of the downstream components, a voltage in the gray region may be interpreted as different logic values: this is known as the Byzantine Generals problem <ref> [AM92] </ref>. We can address the Byzantine Generals problem by characterizing cell inputs and assigning analog input threshold values, which can then be compared to the analog bridge value to determine the behavior of the downstream gates. <p> An additional complication is introduced by the Byzantine Generals problem in the presence of feedback. It is well known that a feedback bridge fault can turn a formerly combinational circuit into a sequential circuit <ref> [AM92] </ref>. If the bridge can be accurately modeled in the purely digital domain, the sequential behavior can be modeled as a latch at the fault site. If the Byzantine Generals problem is considered, it is possible for the fault to hold a non-digital state, as Figure 7 demonstrates.
Reference: [BF85] <author> F. Brglez and H. Fujiwara. </author> <title> A neutral netlist of 10 combinatorial benchmark circuits and a target translator in fortran. </title> <booktitle> In International Symposium on Circuits and Systems. IEEE, </booktitle> <month> June </month> <year> 1985. </year>
Reference-contexts: Gate 1st Input 2nd Input 3rd Input NOT 2.36 - NAND 2.02 2.21 - NOR 2.58 2.81 - OR 2.16 2.37 - AOI21 2.29 2.47 1.96 Table 1: Logic 0 input thresholds for sample gates random patterns against commercial layouts of the ISCAS-85 benchmark circuits <ref> [BF85] </ref>. These simulations show that indeterminate voltages are not uncommon in the presence of a bridge fault in these circuits. When the two wires involved in a realistic bridge fault were forced to different values, a SPICE simulation of the two components driving the bridge was initiated.
Reference: [CL93] <author> B. Chess and T. Larrabee. </author> <title> Bridge fault simulation strategies for CMOS integrated circuits. </title> <booktitle> In Proceedings of Design Automation Conference, </booktitle> <pages> pages 458-462, </pages> <year> 1993. </year>
Reference-contexts: Feedback bridge faults comprise between 10 and 60% of the total realistic bridge faults for our commercial layouts of the ISCAS-85 benchmark circuits fault <ref> [CL93] </ref>. For wired logic, the issue of a bridge fault creating feedback is easy to deal with. When we consider the wired-AND model, if the fault appears on the back wire, and it sensitizes the front wire, the circuit may oscillate [AM85]. <p> All we need to do is disallow tests in which the front wire is sensitized to the back wire. Similar arguments can be made for wired-OR tests invalidated by sequential behavior. More general arguments can be made for any possible Boolean bridge function <ref> [CL93] </ref>. These methods of dealing with feedback share a common characteristic: each of them analyzes the potential feedback path, and if it is sensitized, they reject the test. <p> is far below that required to create an equally sophisticated test generator 7 Circuit % defects % defects verified checked improve C432 92.27 95.76 3.49 C880 96.14 97.42 1.28 C1908 95.32 97.03 1.71 C3540 97.13 97.84 0.71 C6288 94.56 95.37 0.81 Table 2: Wired-AND verified & checked with two-component simulation <ref> [CL93] </ref>. The time spent in generating the tests for the generating-checking pair is more than that spent to generate tests for wired-AND, by factor of two to four, and it takes about half of the time that it takes to generate tests using the two-component model.
Reference: [CL94] <author> B. Chess and T. Larrabee. </author> <title> Generating test patterns for bridge faults in CMOS ICs. </title> <booktitle> In Proceedings of Euro-pean Test Conference, </booktitle> <year> 1994. </year>
Reference-contexts: With coverage improvements ranging from 0.04 to 3.49 percent, the additional coverage obtained by the use of the generating-checking pair affords us coverage superior to that obtained by using wired-AND alone (although still inferior to that of tests generated using the two-component model <ref> [CL94] </ref>). This improvement requires a much smaller programming effort than that required to generate tests with the two-component model because wired-AND test generation is very similar to stuck-at test generation [AM85].
Reference: [FL91] <author> F. J. Ferguson and T. Larrabee. </author> <title> Test pattern generation for realistic bridge faults in CMOS ICs. </title> <booktitle> In Proceedings of International Test Conference, </booktitle> <pages> pages 492-499. </pages> <publisher> IEEE, </publisher> <year> 1991. </year>
Reference-contexts: The majority of spot defects in current MOS technologies cause changes in the circuit description that result in shorts [FM91]. Tests that cover 100% of the testable single stuck-at faults may not adequately cover shorts <ref> [MG91, FL91] </ref>. Until recently, people had to guess at the wire pairs for which to generate tests because the total number of pairs is prohibitively large, and methods had not yet been developed to determine which of the possible shorts were important. <p> In the dominant technologies of the time (such as TTL), bridges did create wired logic. However, wired logic does not accurately reflect the behavior of CMOS circuits <ref> [AM91, FL91, MG91] </ref>. <p> The wired-logic model assumes that one of either the nmos or pmos networks will always determine the circuit's result. It is relatively easy to present examples in real circuits where this is not the case <ref> [FL91, GP92] </ref>. A better model would assume that the circuit value at the fault site is described in general by a Boolean function of the inputs to the gates driving the bridged wires. <p> A better model would assume that the circuit value at the fault site is described in general by a Boolean function of the inputs to the gates driving the bridged wires. This two component model can be derived in a number of ways|two notable methods are analog simulation <ref> [FL91, RP93] </ref> and the voting model [Ack88, AM91]. Two component simulation works well at modeling the upstream components from the fault site, but fails to take into account the possible sensitive behavior of downstream components. This oversight can be dealt with in two ways. <p> A pessimistic model describes the fault behavior with an incomplete Boolean function, where some of the bridge's behavior falls within a gray region within which the model fails to give an answer. Both of these approaches have been implemented in bridge fault simulators and test pattern generators <ref> [MG91, FL91] </ref>. In order to correctly resolve the gray region left by the pessimistic model, it is necessary to take additional circuit information into account.
Reference: [FM91] <author> D. Feltham and W. Maly. </author> <title> Physically realistic fault models for analog CMOS neural networks. </title> <journal> IEEE Journal of Solid-State Circuits, </journal> <volume> 26(9) </volume> <pages> 1223-1229, </pages> <month> September </month> <year> 1991. </year>
Reference-contexts: The majority of spot defects in current MOS technologies cause changes in the circuit description that result in shorts <ref> [FM91] </ref>. Tests that cover 100% of the testable single stuck-at faults may not adequately cover shorts [MG91, FL91].
Reference: [GP92] <author> G. Greenstein and J. Patel. EPROOFS: </author> <title> a CMOS bridging fault simulator. </title> <booktitle> In Proceedings of International Conference on Computer-Aided Design, </booktitle> <pages> pages 268-271. </pages> <publisher> IEEE, </publisher> <year> 1992. </year>
Reference-contexts: The wired-logic model assumes that one of either the nmos or pmos networks will always determine the circuit's result. It is relatively easy to present examples in real circuits where this is not the case <ref> [FL91, GP92] </ref>. A better model would assume that the circuit value at the fault site is described in general by a Boolean function of the inputs to the gates driving the bridged wires. <p> The EPROOFS simulator <ref> [GP92] </ref> implements this within a mixed-mode simulator, where a SPICE-like analog simulation of the region around the fault site is incorporated into a digital simulation of the rest of the circuit.
Reference: [Jee91] <author> A. Jee. Carafe: </author> <title> An inductive fault analysis tool for CMOS VLSI circuits. </title> <type> Technical Report UCSC-CRL-91-24, </type> <institution> University of California at Santa Cruz, Computer Engineering Department, </institution> <month> February </month> <year> 1991. </year>
Reference-contexts: Until recently, people had to guess at the wire pairs for which to generate tests because the total number of pairs is prohibitively large, and methods had not yet been developed to determine which of the possible shorts were important. Carafe, an inductive fault analysis tool <ref> [Jee91, JF93] </ref>, extracts the relative probabilities of extra-conductor defects and missing conductor defects. Circuit faults extracted by Carafe that result in a short are referred to here as realistic bridge faults. For the purposes of this paper we consider only shorts involving gate inputs and outputs.
Reference: [JF93] <author> A. Jee and F. J. Ferguson. Carafe: </author> <title> An inductive fault analysis tool for CMOS vlsi circuits. In Proceedings of the IEEE VLSI Test Symposium, </title> <note> page to appear, </note> <year> 1993. </year>
Reference-contexts: Until recently, people had to guess at the wire pairs for which to generate tests because the total number of pairs is prohibitively large, and methods had not yet been developed to determine which of the possible shorts were important. Carafe, an inductive fault analysis tool <ref> [Jee91, JF93] </ref>, extracts the relative probabilities of extra-conductor defects and missing conductor defects. Circuit faults extracted by Carafe that result in a short are referred to here as realistic bridge faults. For the purposes of this paper we consider only shorts involving gate inputs and outputs.
Reference: [Lar92] <author> T. Larrabee. </author> <title> Test pattern generation using boolean satisfiability. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <pages> pages 6-22, </pages> <month> January </month> <year> 1992. </year>
Reference-contexts: We used the Nemesis ATPG system <ref> [Lar92] </ref> on the ISCAS-85 benchmarks. For the generating model, we use the simplest bridge fault model available: wired-AND. For the checking model, we use two-component simulation. We discussed the strengths and and weaknesses of these models in Section 2. Both models reject tests that could be invalidated because of feedback.
Reference: [MA93] <author> P. </author> <title> Maxwell and R.C. Aitken. Biased voting: a method for simulating CMOS bridging faults in the presence of variable gate logic thresholds. </title> <booktitle> In Proceedings of International Test Conference, </booktitle> <pages> pages 63-72. </pages> <publisher> IEEE, </publisher> <year> 1993. </year>
Reference-contexts: This technique for simple threshold determination has been implemented in bridge fault simulators using extensions of the voting model and using analog simulation <ref> [MA93, RP93] </ref>. The simple threshold characterization model assumes that the analog effect of the bridge fault only propagates one level downstream from the fault site.
Reference: [MB88] <author> E.J. McCluskey and F. Buelow. </author> <title> IC quality and test transparancy. </title> <booktitle> In Proceedings of International Test Conference, </booktitle> <pages> pages 295-301. </pages> <publisher> IEEE, </publisher> <year> 1988. </year>
Reference-contexts: 1 Introduction In the search for IC quality, realistic defect testing is becoming increasingly important. In order to obtain the relatively modest quality level of 200 defective parts per million (DPM) in a circuit with a 90% yield requires that the test set detect 99.8% of the manufacturing defects <ref> [WB81, MB88] </ref>. The majority of spot defects in current MOS technologies cause changes in the circuit description that result in shorts [FM91]. Tests that cover 100% of the testable single stuck-at faults may not adequately cover shorts [MG91, FL91]. <p> The defect coverage should be much more indicative than the fault coverage when it comes to relating test quality to defects per million parts shipped (DPM) <ref> [MB88] </ref>. In the rest of this paper we will discuss various bridge fault models, how accurately they predict faulted circuit behavior, and how the choice of a bridge fault model affects ATPG effectiveness.
Reference: [MG91] <author> S.D. Millman and J.P. Garvey. </author> <title> An accurate bridging fault test pattern 9 generator. </title> <booktitle> In Proceedings of Inter--national Test Conference, </booktitle> <pages> pages 411-418. </pages> <publisher> IEEE, </publisher> <year> 1991. </year>
Reference-contexts: The majority of spot defects in current MOS technologies cause changes in the circuit description that result in shorts [FM91]. Tests that cover 100% of the testable single stuck-at faults may not adequately cover shorts <ref> [MG91, FL91] </ref>. Until recently, people had to guess at the wire pairs for which to generate tests because the total number of pairs is prohibitively large, and methods had not yet been developed to determine which of the possible shorts were important. <p> In the dominant technologies of the time (such as TTL), bridges did create wired logic. However, wired logic does not accurately reflect the behavior of CMOS circuits <ref> [AM91, FL91, MG91] </ref>. <p> A pessimistic model describes the fault behavior with an incomplete Boolean function, where some of the bridge's behavior falls within a gray region within which the model fails to give an answer. Both of these approaches have been implemented in bridge fault simulators and test pattern generators <ref> [MG91, FL91] </ref>. In order to correctly resolve the gray region left by the pessimistic model, it is necessary to take additional circuit information into account.
Reference: [RP93] <author> J. Rearick and J. Patel. </author> <title> Fast and accurate CMOS bridging fault simulation. </title> <booktitle> In Proceedings of International Test Conference, </booktitle> <pages> pages 54-62. </pages> <publisher> IEEE, </publisher> <year> 1993. </year>
Reference-contexts: A better model would assume that the circuit value at the fault site is described in general by a Boolean function of the inputs to the gates driving the bridged wires. This two component model can be derived in a number of ways|two notable methods are analog simulation <ref> [FL91, RP93] </ref> and the voting model [Ack88, AM91]. Two component simulation works well at modeling the upstream components from the fault site, but fails to take into account the possible sensitive behavior of downstream components. This oversight can be dealt with in two ways. <p> This technique for simple threshold determination has been implemented in bridge fault simulators using extensions of the voting model and using analog simulation <ref> [MA93, RP93] </ref>. The simple threshold characterization model assumes that the analog effect of the bridge fault only propagates one level downstream from the fault site.
Reference: [WB81] <author> T.W. Williams and N.C. Brown. </author> <title> Defect level as a function of fault coverage. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-30(12):987-988, </volume> <month> December </month> <year> 1981. </year>
Reference-contexts: 1 Introduction In the search for IC quality, realistic defect testing is becoming increasingly important. In order to obtain the relatively modest quality level of 200 defective parts per million (DPM) in a circuit with a 90% yield requires that the test set detect 99.8% of the manufacturing defects <ref> [WB81, MB88] </ref>. The majority of spot defects in current MOS technologies cause changes in the circuit description that result in shorts [FM91]. Tests that cover 100% of the testable single stuck-at faults may not adequately cover shorts [MG91, FL91].
References-found: 18

