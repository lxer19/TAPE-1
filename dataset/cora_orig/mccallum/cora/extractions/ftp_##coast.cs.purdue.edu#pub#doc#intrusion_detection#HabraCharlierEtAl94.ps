URL: ftp://coast.cs.purdue.edu/pub/doc/intrusion_detection/HabraCharlierEtAl94.ps
Refering-URL: http://www.cs.purdue.edu/coast/archive/data/categ24.html
Root-URL: http://www.cs.purdue.edu
Email: E-mail: fnha, ble, amog@info.fundp.ac.be  E-mail: isa@swn.sni.be  
Title: Security Audit Trail Analysis on uniX (ASAX also called SAT-X)  
Author: Naji Habra Baudouin Le Charlier Abdelaziz Mounji, Isabelle Mathieu, 
Date: September 26, 1994  
Address: rue Grangagnage 21, 5000 Namur  5080 Rhisnes  
Affiliation: Institut D'Informatique, FUNDP,  Siemens-Nixdorf Software S.A., rue de Neverlee 11,  
Note: Advanced  
Abstract: Preliminary report on 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> I. </author> <title> Mathieu. </title> <booktitle> Advanced Security Audit Analyser on Unix 13.09.91. </booktitle> <pages> 40 pages </pages>
Reference-contexts: rule (l-occ par, limit-par, user-id-par, terminal-par) fi In order to receive the message M1 each time a user fails to log three consecutive times from the same terminal within ten minutes, the auditor will activate the rule alarm failed login with 3 and 10 as values for the parameters (see <ref> [1] </ref> for more details). 4.3 Example 2: Detection of computer generated passwords The purpose of this example is to detect two or more login attempts by the same user in such a short period of time that it is doubtful that they could have been generated by a human at a <p> Special attention will be devoted to the design of condition internal code because the rule evaluator will spend most of its time evaluating conditions. We will reuse the representation chosen for the SATUT evaluator which is likely to be optimal (see <ref> [1] </ref>.) 5.2 The rule evaluator The implemented rule evaluator will use the following objects: * an audit file currently analyzed in NADF format; * an internal representation of the current record, designed to allow a fast access to all its fields as many times as needed; * the internal code of
Reference: [2] <author> F. Libion. </author> <title> Towards "intelligent" Security Audit Trail Analysis Tools.. </title> <type> MS Thesis. FUNDP Namur 1990-91. </type> <pages> 130 pages. </pages>
Reference-contexts: This rule is designed to detect the type of attack in which a penetrator uses a computer to repeatedly generate passwords / userid pairs. See <ref> [2] </ref>. Two rules are used to implement this alarm function: fast login and timer The second rule is activated by the first one whenever a login attempt is encountered. The userid, terminal name and time stamp corresponding to this event are the arguments of the rule timer.
Reference: [3] <author> A. Baur, W. Weib. </author> <title> Analysis of protocole data using AI techniques. </title> <note> ZFE IS SOF 4. 07.11.89. </note>
Reference-contexts: This function is useful to prevent users from monopolyz-ing too much system resources. See <ref> [3] </ref>. It is implemented by two simple rules: first terminal and second terminal Every time the first terminal rule detects a login event, it triggers off the second terminal rule that looks for another login event related to the same user but from a different terminal.
Reference: [4] <author> SAT team. </author> <title> Security Audit Trail step1. </title> <journal> 104.52.7 REV7. </journal> <volume> 22.11.91. </volume> <pages> 213 pages. 34 </pages>
References-found: 4

