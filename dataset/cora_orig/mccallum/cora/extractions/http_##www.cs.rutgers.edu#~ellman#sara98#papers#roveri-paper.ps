URL: http://www.cs.rutgers.edu/~ellman/sara98/papers/roveri-paper.ps
Refering-URL: http://www.cs.rutgers.edu/~ellman/sara98/papers/
Root-URL: http://www.cs.rutgers.edu
Email: cimatti@irst.itc.it  fausto@irst.itc.it  roveri@irst.itc.it  
Title: Abstraction in Planning via Model Checking  
Author: A. Cimatti F. Giunchiglia M. Roveri 
Address: Povo, 38100 Trento, Italy  Povo, 38100 Trento, Italy  Via Inama 5, 38100 Trento, Italy  Povo, 38100 Trento, Italy  Via Comelico 39, 20135 Milano, Italy  
Affiliation: IRST,  Mechanized Reasoning Group  IRST,  Mechanized Reasoning Group DISA, University of Trento  IRST,  Mechanized Reasoning Group DSI, University of Milano  
Abstract: Planning via Model Checking is a novel approach to planning. It is based on the reformulation of a planning problem to the exploration of a finite state automaton. Automata exploration can be efficiently performed with Model Checking, a formal verification technique widely applied in design of industrial systems. For very large domains, however, a state explosion can arise. Abstractions can be used to tackle the problem. In this paper we show how Abstraction techniques developed in classical planning can be lifted to the Planning via Model Checking paradigm. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Bacchus, F., and Yang, Q. </author> <year> 1994. </year> <title> Downward refinement and the efficiency of hierarchical problem solving. </title> <booktitle> Artificial Intelligence 71 </booktitle> <pages> 43-100. </pages>
Reference: <author> Backstrom, C., and Jonsson, P. </author> <year> 1995. </year> <title> Planning with Abstraction Hierarchies can be Exponentially Less Efficient. </title> <booktitle> In Proc. of the 14th International Joint Conference on Artificial Intelligence, </booktitle> <pages> 1599-1604. </pages>
Reference: <author> Bryant, R. E. </author> <year> 1992. </year> <title> Symbolic Boolean manipolation with ordered binary-decision diagrams. </title> <journal> ACM Computing Surveys 24(3) </journal> <pages> 293-318. </pages>
Reference-contexts: Planning via Model Checking The Planning via Model Checking approach (Cimatti et al. 1997) is based on the reformulation of the planning problem to the exploration of a finite state automaton. 4 We use obdds (Ordered Binary Decision Diagrams) <ref> (Bryant 1992) </ref> and symbolic model checking techniques (Burch et al. 1992; Clarke, Grumberg, & Long 1994) to compactly encode the automaton and perform the exploration. <p> performed by planner does not keep track of the actions which have been executed. mbp (Model Based Planner) (Cimatti et al. 1997) is a planner implemented on the model checker NuSMV (Cimatti et al. 1998). mbp codifies the automaton using a symbolical representation based on Ordered Binary Decision Diagrams (obdds) <ref> (Bryant 1992) </ref>. mbp implements (variations of) the above algorithm and a procedure for temporal projection. Furthermore, mbp has been extended with the ability to generate and execute complex plans containing the usual programming logic constructs, including conditionals, iterations and non-deterministic choice (Cimatti, Roveri, & Traverso 1998).
Reference: <author> Bundy, A.; Giunchiglia, F.; Sebastiani, R.; and Walsh, T. </author> <year> 1996. </year> <title> Calculating Criticalities. </title> <journal> Artificial Intelligence 88(1-2). </journal>
Reference: <author> Burch, J. R.; Clarke, E. M.; McMillan, K. L.; Dill, D. L.; and Hwang, L. J. </author> <year> 1992. </year> <title> Symbolic Model Checking: 10 20 States and Beyond. </title> <booktitle> Information and Computation 98(2) </booktitle> <pages> 142-170. </pages>
Reference: <author> Cimatti, A.; Giunchiglia, E.; Giunchiglia, F.; and Traverso, P. </author> <year> 1997. </year> <title> Planning via Model Checking: </title>
Reference-contexts: Introduction Planning via Model Checking is a novel approach to planning <ref> (Cimatti et al. 1997) </ref>. It is based on the reformulation of a planning problem to the exploration of a finite state automaton. The advantages of this approach are many-fold. First, the domain can be described with an expressive language, allowing for the expression of ramifications, constraints and nondeterministic actions. <p> of this document is to describe how abstraction techniques devised in classical planning (see, e.g., (Sacerdoti 1974; Knoblock 1994; Bacchus & Yang 1994; Yang, Tenen-berg, & Woods 1996; Bundy et al. 1996)) can be combined with the Planning via Model Checking approach. fl Parts of this paper are quoted from <ref> (Cimatti et al. 1997) </ref> and (Giunchiglia 1996) Our main goal is to scale up to very large problems, where computation space turns out to be the problem, rather than trying to gain efficiency and thus reducing time. This paper is structured as follows. Section overviews Planning. <p> Planning via Model Checking The Planning via Model Checking approach <ref> (Cimatti et al. 1997) </ref> is based on the reformulation of the planning problem to the exploration of a finite state automaton. 4 We use obdds (Ordered Binary Decision Diagrams) (Bryant 1992) and symbolic model checking techniques (Burch et al. 1992; Clarke, Grumberg, & Long 1994) to compactly encode the automaton and <p> The planning procedure is reported in Figure 1. We use standard set operators (e.g. ; n). A [1,...,N] is an array of actions (i.e. operators). At each step of case can be found in <ref> (Cimatti et al. 1997) </ref>. the loop, the set of states accessible after up to i op-erator applications is generated and stored in Acc [i]. This is done by starting from previously unexplored (i.e. new) states generated at previous step, contained in New [i-1]. Notice that all possible operators are considered. <p> One pair is arbitrarily chosen, and the action is stored in A [j+1]. The action reconstruction is necessary as the "forward" analysis performed by planner does not keep track of the actions which have been executed. mbp (Model Based Planner) <ref> (Cimatti et al. 1997) </ref> is a planner implemented on the model checker NuSMV (Cimatti et al. 1998). mbp codifies the automaton using a symbolical representation based on Ordered Binary Decision Diagrams (obdds) (Bryant 1992). mbp implements (variations of) the above algorithm and a procedure for temporal projection.
References-found: 6

