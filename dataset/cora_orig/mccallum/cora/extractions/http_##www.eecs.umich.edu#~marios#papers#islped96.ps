URL: http://www.eecs.umich.edu/~marios/papers/islped96.ps
Refering-URL: http://www.eecs.umich.edu/~marios/pubs.html
Root-URL: http://www.cs.umich.edu
Title: Fixed-Phase Retiming for Low Power Design  
Author: Kumar N. Lalgudi and Marios C. Papaefthymiou 
Address: New Haven, CT 06520  
Affiliation: Department of Electrical Engineering Yale University  
Abstract: In this paper we describe fixed-phase retiming, a new optimization technique for the design of low power digital circuits. In fixed-phase retiming, we first transform any given edge-triggered circuit into a two-phase level-clocked circuit by replacing each flip-flop by two level-sensitive latches. Subsequently, while keeping the latches clocked on one of the phases fixed, we attempt to reduce power dissipation by relocating the remaining latches on interconnections with high glitching activity and capacitive load. Since in standard cell design the capacitance of a latch is typically smaller than the input capacitance of a combinational gate, this transformation reduces power dissipation during the opaque phase of the latch. We give a boolean quadratic programming formulation of fixed-phase retiming and describe an O(V 4 log V )-time algorithm for computing a fixed-phase retiming that minimizes power dissipation, where V is the number of combinational blocks in the circuit.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. V. Heinbuch. </author> <title> CMOS3 Cell Library. </title> <publisher> Addison Wesley, </publisher> <year> 1988. </year>
Reference-contexts: Specifically, the term (C (i) C L ) r (u) r (v) in Equation (10) can only take positive values with this assumption. We performed a comprehensive comparison of the input capacitances of the cells in the CMOS3 Cell Library <ref> [1] </ref> to check whether this was indeed a reasonable assumption to make. With the exception of a high impedance inverter whose input capacitance was comparable, all other combinational blocks had higher input capacitances than a level-clocked latch.
Reference: [2] <author> D. S. Hochbaum and J. Naor. </author> <title> Simple and fast algorithms for linear and integer programs with two variables per inequality. </title> <journal> SIAM J. Computing, </journal> <volume> 23(6):1179 - 1192, </volume> <month> December </month> <year> 1994. </year>
Reference-contexts: We make two important observations. First, we notice that all constraints in Definition 2 are monotone inequalities (inequalities of the form ax i bx j c where a; b 0 are termed monotone <ref> [2] </ref>) with at most two variables per inequality. Second, if we assume that the latch capacitance is smaller than the capacitance of combinational blocks, that is, C L C (i) forall i 2 E, then all quadratic terms in the objective PR have positive coefficients. <p> Based on the results of Hammer et. al. in [4], we reduce it to a boolean linear program. We then show how to solve the boolean linear program efficiently based on the results of Hochbaum and Naor in <ref> [2] </ref>. Specifically, we show that any boolean quadratic program with m constraints and n variables, whose constraints are monotone linear inequalities and whose objective consists of quadratic terms with only positive coefficients can be solved in O (mn 2 log n)-time. <p> Lemma 7 (Theorem 3.7, <ref> [2] </ref>) The integer optimal solution of a monotone system of inequalities with respect to an arbitrary linear objective can be computed in pseudo-polynomial time, in O (m ( P n P n i=1 jV i j)) where m is the number of inequalities, n is the number of variables, and V <p> Consequently, the running time for Problem BMQP follows immediately from Lemma 7. 11 We now present an efficient algorithm for solving Problem PO which is based on the results of Hochbaum and Naor in <ref> [2] </ref>. The algorithm, given in Figure 5, first computes the objective and the set of constraints to obtain a boolean quadratic program. This boolean quadratic program is then linearized to obtain an instance of LBMQP which is then solved using the algorithm due to Hochbaum-Naor [2]. <p> of Hochbaum and Naor in <ref> [2] </ref>. The algorithm, given in Figure 5, first computes the objective and the set of constraints to obtain a boolean quadratic program. This boolean quadratic program is then linearized to obtain an instance of LBMQP which is then solved using the algorithm due to Hochbaum-Naor [2]. We conclude this section with the following theorem. Theorem 9 Algorithm POfpr solves Problem PO in O (V 4 log V ) steps. Proof. We have O (V 2 ) constraints for the fixed-phase retiming problem and O (V ) variables.
Reference: [3] <author> J. Monteiro, S. Devadas, and A. Ghosh. </author> <title> Retiming sequential circuits for low power. </title> <booktitle> In Digest of Technical Papers of the 1993 IEEE International Conference on CAD, </booktitle> <pages> pages 398-402, </pages> <month> November </month> <year> 1993. </year>
Reference-contexts: Negative values of power reduction indicate an increase in power dissipation when a flip-flop is placed on an interconnection. This reduction in power dissipation can come about if the edge has a high glitching-capacitance product <ref> [3] </ref>. Each edge-triggered flip-flop is then replaced by two back-to-back level-clocked latches and the resulting circuit is fixed-phase retimed to result in the circuit in Figure 2 (b). <p> Assuming that the rest of the network remains unchanged, the 3 reduction in power dissipation is given by <ref> [3] </ref> p ET fanout i X u !v Equation (1) consists of three terms. The first term E g (i) fi C (i) denotes the reduction in power dissipation at the input of v due to the masking effect. <p> The probability that a transition on edge i propagates to edge j is denoted by s j;i and is given by <ref> [3] </ref> s j;i = P rob (j l ji l) ; (2) where P rob (i l ji l) denotes the probability of a transition at edge j given that there is a transition at edge i. <p> This does not mean, however, that fixed-phase retiming is less effective, since it can always be applied to further optimize edge-triggered circuits that have already been optimized using edge-triggered retiming sa described in <ref> [3] </ref>. Our analysis of fixed-phase retiming relies on certain simplifying assumptions. In level-clocked circuits, signals that flow through a latch during its transparent phase can initiate computations in the next combinational stage, a phenomenon termed as cycle stealing.
Reference: [4] <author> P. Hansen P. L. Hammer and B. Simeone. </author> <title> Roof duality, complementation and persis-tancy in quadratic 0-1 optimization. </title> <journal> Mathematical Programming, </journal> <volume> 28 </volume> <pages> 121-155, </pages> <year> 1984. </year>
Reference-contexts: From a general boolean quadratic program we derive a boolean quadratic program 9 with the special structure that all constraints are monotone linear inequalities and the ob-jective consists of quadratic terms with only positive coefficients. Based on the results of Hammer et. al. in <ref> [4] </ref>, we reduce it to a boolean linear program. We then show how to solve the boolean linear program efficiently based on the results of Hochbaum and Naor in [2]. <p> It was shown in Theorem 1.7 in <ref> [4] </ref> that unconstrained boolean quadratic expressions of the form of Expression (22) and their linearized forms of the form of Expression (24) have the same optimum value. We state a corollary of that result for boolean monotonic quadratic programs in the following lemma.
Reference: [5] <author> M. C. Papaefthymiou. </author> <title> A Timing Analysis and Optimization System for Level-Clocked Circuitry. </title> <type> PhD thesis, </type> <institution> Massachusetts Institute of Technology, </institution> <month> September </month> <year> 1993. </year> <note> Available as MIT/LCS/TR-605. 12 </note>
Reference-contexts: As a result, we need to impose timing constraints during the optimization process. The following lemma gives the necessary and sufficient conditions for a retiming such that a retimed circuit G r is properly timed by a given clocking scheme . Lemma 1 (Lemma 35, <ref> [5] </ref>) Let G = hV; E; d; w; i be a two-phase, level-clocked circuit, let = h 0 ; fl 0 ; 1 ; fl 1 i be a clocking scheme, and let r : V ! Z be a retiming function. <p> The constraints in Definition 2 are required to maintain the performance of the circuit. These are derived from Lemma 35 in <ref> [5] </ref> which gives the necessary and sufficient conditions for a retiming r, so that the retimed level-clocked circuit is properly timed by a general two-phase clocking scheme .
References-found: 5

