URL: http://www.cs.colorado.edu/~sanctuary/Papers/ngits.ps
Refering-URL: http://www.cs.colorado.edu/~sanctuary/
Root-URL: http://www.cs.colorado.edu
Email: roger@cs.colorado.edu, novak@cs.colorado.edu, och@cs.colorado.edu  small fernando@unidata.com  
Title: Sybil: Supporting Heterogeneous Database Interoperability with Lightweight Alliances  
Author: Roger King, Michael Novak, Christian Och Fernando Velez 
Note: DRAFT: NOT FOR DISTRIBUTION!!! This research was funded under DARPA order B126 (Rome AF contract F30602-94-C-0253) and under DARPA/NASA contract NAG2-862.  
Address: Campus Box 430 Boulder, CO 80309-0430  Denver, CO  
Affiliation: Department of Computer Science University of Colorado  Unidata Inc.  
Abstract-found: 0
Intro-found: 0
Reference: [AHe95] <author> Y. Arens, R. Hull, and R. King (editors). </author> <title> Reference Architecture for the Intelligent Integration of Information, </title> <note> Version 2.0, draft, 1995. Available by anonymous ftp at ftp://isse.gmu.edu//pub/incoming/Gunning/I3 Ref Arch 2.0 draft.ps.Z. </note>
Reference-contexts: The wrapping/mediation layer has two main tasks: wrapping programs and information systems with standardized language and communication interfaces, and generating mediators [Wie92] that provide intelligent support for maintaining the various relationships between the databases in an alliance (e.g., views, constraints, update propagations). Although, in general, wrappers <ref> [AHe95] </ref> are thought of as being dumb, while mediators are considered smart, the distinction between a wrapper and a mediator is not always so clear. In Sybil, we assume, however, that wrappers do not substantially manipulate the semantics of information or programs.
Reference: [BLN86] <author> C. Batini, M. Lenzerini, and S.B. Navathe. </author> <title> A comparative analysis of methodologies for database schema integration. </title> <journal> ACM Computing Surveys, </journal> <volume> 18(4) </volume> <pages> 323-364, </pages> <month> December </month> <year> 1986. </year>
Reference-contexts: For example, there has been much work done involving the addition of rules 5 to database systems [CW92, S + 95, SJGP90, HKBBS92, HW92], particularly in support of constraints [CW93, GJ91] and views [DH84, BLT86, GMS93, LMSS95, Mot87]. Similarly, schema integration <ref> [BLN86, SM89] </ref> has been studied extensively.
Reference: [BLT86] <author> J.A. Blakeley, P.-A. Larson, and F.W. Tompa. </author> <title> Efficiently updating materialized views. </title> <booktitle> In Proc. ACM SIGMOD Symp. on the Management of Data, </booktitle> <pages> pages 61-71, </pages> <year> 1986. </year>
Reference-contexts: For example, there has been much work done involving the addition of rules 5 to database systems [CW92, S + 95, SJGP90, HKBBS92, HW92], particularly in support of constraints [CW93, GJ91] and views <ref> [DH84, BLT86, GMS93, LMSS95, Mot87] </ref>. Similarly, schema integration [BLN86, SM89] has been studied extensively.
Reference: [Cat93] <author> R.G.G. Cattell. </author> <title> The Object Database Standard: ODMG-93. </title> <publisher> Morgan Kaufmann Publishers, </publisher> <address> San Mateo, California, </address> <year> 1993. </year>
Reference-contexts: type of database system to an alliance, much of the conversion that needs to be done (e.g., schema translation, query translation, etc.) is not as huge a task as it may have seemed (this will hopefully also be aided by the standards emerging for relational SQL [Mel93] and object SQL <ref> [Cat93] </ref>). And, we are also not attempting any global integration, but rather, only integrating pieces of databases that are somehow related via application semantics. Next, we discussion the bridging constructs used to build and maintain the inter-database relationships that define an alliance.
Reference: [CW92] <author> S. Ceri and J. Widom. </author> <title> Production rules in parallel and distributed database environments. </title> <booktitle> In Proc. of Intl. Conf. on Very Large Data Bases, </booktitle> <pages> pages 339-351, </pages> <year> 1992. </year>
Reference-contexts: For example, there has been much work done involving the addition of rules 5 to database systems <ref> [CW92, S + 95, SJGP90, HKBBS92, HW92] </ref>, particularly in support of constraints [CW93, GJ91] and views [DH84, BLT86, GMS93, LMSS95, Mot87]. Similarly, schema integration [BLN86, SM89] has been studied extensively.
Reference: [CW93] <author> S. Ceri and J. Widom. </author> <title> Managing semantic heterogeneity with production rules and persistent queues. </title> <booktitle> In Proc. of Intl. Conf. on Very Large Data Bases, </booktitle> <year> 1993. </year>
Reference-contexts: For example, there has been much work done involving the addition of rules 5 to database systems [CW92, S + 95, SJGP90, HKBBS92, HW92], particularly in support of constraints <ref> [CW93, GJ91] </ref> and views [DH84, BLT86, GMS93, LMSS95, Mot87]. Similarly, schema integration [BLN86, SM89] has been studied extensively.
Reference: [DH84] <author> U. Dayal and H.Y. Hwang. </author> <title> View definition and generalization for database integration in a multidatabase system. </title> <journal> IEEE Trans. on Software Engineering, </journal> <volume> SE-10(6):628-644, </volume> <year> 1984. </year>
Reference-contexts: For example, there has been much work done involving the addition of rules 5 to database systems [CW92, S + 95, SJGP90, HKBBS92, HW92], particularly in support of constraints [CW93, GJ91] and views <ref> [DH84, BLT86, GMS93, LMSS95, Mot87] </ref>. Similarly, schema integration [BLN86, SM89] has been studied extensively.
Reference: [GJ91] <author> N. H. Gehani and H. V. Jagadish. </author> <title> ODE as an active database: Constraints and triggers. </title> <booktitle> In Proc. of Intl. Conf. on Very Large Data Bases, </booktitle> <pages> pages 327-336, </pages> <year> 1991. </year>
Reference-contexts: For example, there has been much work done involving the addition of rules 5 to database systems [CW92, S + 95, SJGP90, HKBBS92, HW92], particularly in support of constraints <ref> [CW93, GJ91] </ref> and views [DH84, BLT86, GMS93, LMSS95, Mot87]. Similarly, schema integration [BLN86, SM89] has been studied extensively.
Reference: [GMS93] <author> A. Gupta, </author> <title> I.S. Mumick, and V.S. Subrahmanian. Maintaining views incrementally. </title> <booktitle> In Proc. ACM SIGMOD Symp. on the Management of Data, </booktitle> <pages> pages 157-166, </pages> <year> 1993. </year>
Reference-contexts: For example, there has been much work done involving the addition of rules 5 to database systems [CW92, S + 95, SJGP90, HKBBS92, HW92], particularly in support of constraints [CW93, GJ91] and views <ref> [DH84, BLT86, GMS93, LMSS95, Mot87] </ref>. Similarly, schema integration [BLN86, SM89] has been studied extensively.
Reference: [HKBBS92] <author> G. T. Heineman, G. E. Kaiser, N. S. Barghouti, and I. Z. Ben-Shaul. </author> <title> Rule chaining in marvel: Dynamic binding of parameters. </title> <journal> IEEE Expert, </journal> <volume> 7(6) </volume> <pages> 26-32, </pages> <month> December </month> <year> 1992. </year>
Reference-contexts: For example, there has been much work done involving the addition of rules 5 to database systems <ref> [CW92, S + 95, SJGP90, HKBBS92, HW92] </ref>, particularly in support of constraints [CW93, GJ91] and views [DH84, BLT86, GMS93, LMSS95, Mot87]. Similarly, schema integration [BLN86, SM89] has been studied extensively.
Reference: [HM85] <author> D. Heimbigner and D. McLeod. </author> <title> A federated architecture for information management. </title> <journal> ACM Trans. on Office Information Systems, </journal> <volume> 3(3) </volume> <pages> 253-278, </pages> <month> July </month> <year> 1985. </year>
Reference-contexts: A change in one application program must often be duplicated in several other application programs. The second choice falls into several categories, heterogeneous database systems (e.g., Pegasus [SAD + 95] or UniSQL [KGK + 95]), multidatabase systems (e.g., InterBase [MBE96]), and Federated databases <ref> [HM85] </ref>. Although these approaches have some differences (mostly in terms of how tightly they integrate the component databases), they have some common problems. <p> Then the developer tailors the chosen relationship to fit the given application. The obvious consequence is that our prototype system will have substantive functional limitations. However, many applications only need very simple inter-database relationships. And, traditional approaches such as Federated databases <ref> [HM85] </ref>, Pegasus [SAD + 95], and UniSQL [KGK + 95] are high in development time and enforcement costs, and result in substantive restrictions in local database autonomy. We feel that the Sybil approach is the right compromise.
Reference: [HW92] <author> E. Hanson and J. Widom. </author> <title> An overview of production rules in database systems. </title> <type> Technical Report RJ 9023 (80483), </type> <institution> IBM Almaden Research Center, </institution> <month> October 12, </month> <year> 1992. </year>
Reference-contexts: For example, there has been much work done involving the addition of rules 5 to database systems <ref> [CW92, S + 95, SJGP90, HKBBS92, HW92] </ref>, particularly in support of constraints [CW93, GJ91] and views [DH84, BLT86, GMS93, LMSS95, Mot87]. Similarly, schema integration [BLN86, SM89] has been studied extensively.
Reference: [KGK + 95] <author> W. Kelley, S. Gala, W. Kim, T. Reyes, and B.Graham. </author> <title> Schema architecture of the UniSQL/M multidatabase system. </title> <editor> In W. Kim, editor, </editor> <booktitle> Modern Database Systems, </booktitle> <pages> pages 621-648. </pages> <publisher> Addison-Wesley, </publisher> <year> 1995. </year> <month> 18 </month>
Reference-contexts: Second, update propagation must be done manually for each database. A change in one application program must often be duplicated in several other application programs. The second choice falls into several categories, heterogeneous database systems (e.g., Pegasus [SAD + 95] or UniSQL <ref> [KGK + 95] </ref>), multidatabase systems (e.g., InterBase [MBE96]), and Federated databases [HM85]. Although these approaches have some differences (mostly in terms of how tightly they integrate the component databases), they have some common problems. <p> Then the developer tailors the chosen relationship to fit the given application. The obvious consequence is that our prototype system will have substantive functional limitations. However, many applications only need very simple inter-database relationships. And, traditional approaches such as Federated databases [HM85], Pegasus [SAD + 95], and UniSQL <ref> [KGK + 95] </ref> are high in development time and enforcement costs, and result in substantive restrictions in local database autonomy. We feel that the Sybil approach is the right compromise.
Reference: [LMSS95] <author> J.J. Lu, G. Moerkotte, J. Schue, </author> <title> and V.S. Subrahmanian. Efficient maintenance of materialized mediated views. </title> <booktitle> In Proc. ACM SIGMOD Symp. on the Management of Data, </booktitle> <pages> pages 340-351, </pages> <year> 1995. </year>
Reference-contexts: For example, there has been much work done involving the addition of rules 5 to database systems [CW92, S + 95, SJGP90, HKBBS92, HW92], particularly in support of constraints [CW93, GJ91] and views <ref> [DH84, BLT86, GMS93, LMSS95, Mot87] </ref>. Similarly, schema integration [BLN86, SM89] has been studied extensively.
Reference: [MBE96] <author> J. Mullen, O. Bukhres, and A. Elmagarmid. </author> <title> Interbase: A multidatabase system. </title> <editor> In O. Bukhres and A. Elmagarmid, editors, </editor> <booktitle> Object-Oriented Multidatabase Systems, </booktitle> <pages> pages 652-683. </pages> <publisher> Prentice-Hall, </publisher> <year> 1996. </year>
Reference-contexts: Second, update propagation must be done manually for each database. A change in one application program must often be duplicated in several other application programs. The second choice falls into several categories, heterogeneous database systems (e.g., Pegasus [SAD + 95] or UniSQL [KGK + 95]), multidatabase systems (e.g., InterBase <ref> [MBE96] </ref>), and Federated databases [HM85]. Although these approaches have some differences (mostly in terms of how tightly they integrate the component databases), they have some common problems.
Reference: [Mel93] <author> J. Melton. </author> <title> In ISO/ANSI Working Draft Database SQL (SQL3). </title> <year> 1993. </year>
Reference-contexts: to add a new type of database system to an alliance, much of the conversion that needs to be done (e.g., schema translation, query translation, etc.) is not as huge a task as it may have seemed (this will hopefully also be aided by the standards emerging for relational SQL <ref> [Mel93] </ref> and object SQL [Cat93]). And, we are also not attempting any global integration, but rather, only integrating pieces of databases that are somehow related via application semantics. Next, we discussion the bridging constructs used to build and maintain the inter-database relationships that define an alliance.
Reference: [Mot87] <author> A. Motro. Superviews: </author> <title> Virtual integration of multiple databases. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> SE-13(7), </volume> <month> July </month> <year> 1987. </year>
Reference-contexts: For example, there has been much work done involving the addition of rules 5 to database systems [CW92, S + 95, SJGP90, HKBBS92, HW92], particularly in support of constraints [CW93, GJ91] and views <ref> [DH84, BLT86, GMS93, LMSS95, Mot87] </ref>. Similarly, schema integration [BLN86, SM89] has been studied extensively.
Reference: [S + 95] <editor> V.S. Subrahmanian et al. </editor> <title> HERMES: A heterogenous reasoning and mediator system. </title> <type> Technical report, </type> <institution> Computer Science Department, University of Maryland, </institution> <year> 1995. </year>
Reference-contexts: For example, there has been much work done involving the addition of rules 5 to database systems <ref> [CW92, S + 95, SJGP90, HKBBS92, HW92] </ref>, particularly in support of constraints [CW93, GJ91] and views [DH84, BLT86, GMS93, LMSS95, Mot87]. Similarly, schema integration [BLN86, SM89] has been studied extensively.
Reference: [SAD + 95] <author> M. Shan, R. Ahmed, J. Davis, W. Du, and W. Kent. </author> <title> Pegasus: A heterogeneous information management system. </title> <editor> In W. Kim, editor, </editor> <title> Modern Database Systems. </title> <publisher> Addison-Wesley, </publisher> <year> 1995. </year>
Reference-contexts: Second, update propagation must be done manually for each database. A change in one application program must often be duplicated in several other application programs. The second choice falls into several categories, heterogeneous database systems (e.g., Pegasus <ref> [SAD + 95] </ref> or UniSQL [KGK + 95]), multidatabase systems (e.g., InterBase [MBE96]), and Federated databases [HM85]. Although these approaches have some differences (mostly in terms of how tightly they integrate the component databases), they have some common problems. <p> Then the developer tailors the chosen relationship to fit the given application. The obvious consequence is that our prototype system will have substantive functional limitations. However, many applications only need very simple inter-database relationships. And, traditional approaches such as Federated databases [HM85], Pegasus <ref> [SAD + 95] </ref>, and UniSQL [KGK + 95] are high in development time and enforcement costs, and result in substantive restrictions in local database autonomy. We feel that the Sybil approach is the right compromise.
Reference: [SJGP90] <author> M. Stonebraker, A. Jhingran, J. Goh, and S. Potamianos. </author> <title> On rules, procedures, caching and views in data base systems. </title> <booktitle> In Proc. ACM SIGMOD Symp. on the Management of Data, </booktitle> <pages> pages 281-290, </pages> <year> 1990. </year>
Reference-contexts: For example, there has been much work done involving the addition of rules 5 to database systems <ref> [CW92, S + 95, SJGP90, HKBBS92, HW92] </ref>, particularly in support of constraints [CW93, GJ91] and views [DH84, BLT86, GMS93, LMSS95, Mot87]. Similarly, schema integration [BLN86, SM89] has been studied extensively.
Reference: [SM89] <author> M. Siegel and S. E. Madnick. </author> <title> Schema integration using metadata. </title> <booktitle> In Workshop on Heterogeneous Databases, </booktitle> <month> December </month> <year> 1989. </year>
Reference-contexts: For example, there has been much work done involving the addition of rules 5 to database systems [CW92, S + 95, SJGP90, HKBBS92, HW92], particularly in support of constraints [CW93, GJ91] and views [DH84, BLT86, GMS93, LMSS95, Mot87]. Similarly, schema integration <ref> [BLN86, SM89] </ref> has been studied extensively.
Reference: [Wie92] <author> G. Wiederhold. </author> <booktitle> Mediators in the architecture of future information systems. IEEE Computer, </booktitle> <pages> pages 38-49, </pages> <month> March </month> <year> 1992. </year> <month> 19 </month>
Reference-contexts: For example, common view mappings such as "flattening objects into relations" will be specified via such templates. The wrapping/mediation layer has two main tasks: wrapping programs and information systems with standardized language and communication interfaces, and generating mediators <ref> [Wie92] </ref> that provide intelligent support for maintaining the various relationships between the databases in an alliance (e.g., views, constraints, update propagations). Although, in general, wrappers [AHe95] are thought of as being dumb, while mediators are considered smart, the distinction between a wrapper and a mediator is not always so clear.
References-found: 22

