URL: http://dna.stanford.edu/~cnevill/publications/DCC96.ps.gz
Refering-URL: http://dna.stanford.edu/~cnevill/resume.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: email -cgn, ihw-@waikato.ac.nz  email olsen@cs.byu.edu  
Title: Compressing semi-structured text using hierarchical phrase identification  
Author: Craig G. Nevill-Manning, Ian H. Witten Dan R. Olsen Jr. 
Address: Hamilton, New Zealand  Provo, Utah, USA  
Affiliation: Computer Science, University of Waikato,  Computer Science, Brigham Young University,  
Abstract-found: 0
Intro-found: 1
Reference: <author> Bell, T.C., Cleary, J.G. and Witten, I.H. </author> <title> (1990) Text Compression. </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, NJ. </address>
Reference-contexts: Unix compress illustrates what is obtainable using a robust implementation of Ziv and Lempels LZ78 technique (Ziv and Lempel, 1978). The gzip utility is an exemplary implementation of the earlier LZ77 method (Ziv and Lempel, 1977), and achieves substantially better compression. P PMC <ref> (Bell et al. , 1990) </ref>, a statistical data scheme dictionary code indexes word indexes total size (Mbyte) compression original no compression 9.18 100.0% byte-oriented COMPRESS 2.55 27.8% GZIP 1.77 19.3% PPM 1.42 15.5% word-oriented WORD-0 3.20 34.8% WORD-1 2.21 24.1% MG 0.14 2.87 3.01 32.8% SEQUITUR 0.11 1.07 1.18 12.9% SEQUITUR <p> For all these schemes, compression rates are about twice as great as they are on book1 from the Calgary corpus <ref> (Bell et al., 1990) </ref>, which indicates the high regularity of this database relative to normal English text. The next block of Table 1 summarizes the performance of some word-oriented compression schemes. These schemes split the input into an alternating sequence of words and nonwordsthe latter comprising white space and punctuation.
Reference: <author> Nevill-Manning, C., Witten, I.H. and Maulsby, D. </author> <title> (1994) Compression by induction of hierarchical grammars. </title> <booktitle> Proc Data Compression Conference, </booktitle> <editor> edited by J.A Storer and M. Cohn. </editor> <publisher> IEEE Press, </publisher> <pages> pp. 244253. </pages>
Reference: <author> Witten, I.H., Moffat, A., and Bell, </author> <title> T.C. (1994) Managing Gigabytes: Compressing and indexing documents and images, </title> <publisher> Van Nostrand Reinhold, </publisher> <address> New York. </address> <note> GEDCOM Standard: Draft release 5.4, </note> <institution> Family History Department, The Church of Jesus Christ of Latter-day Saints, </institution> <address> Salt Lake City, Utah. </address>
Reference-contexts: We used both a zero-order context (WORD -0) and a first-order one ( WORD-1). MG is a designed for full-text retrieval and uses a semi-static zero-order word-based model, along with a separate dictionary <ref> (Witten et al., 1994) </ref>. In this scheme, as in WORD-0, the code for a word is determined solely by its frequency, not on any preceding words. This proves rather ineffectual on the genealogical database, indicating the importance of inter-word relationships.
Reference: <author> Ziv, J. and Lempel, A. </author> <title> (1977) A universal algorithm for sequential data compression, </title> <journal> IEEE Trans. Information Theory, </journal> <volume> IT-23 (3), </volume> <pages> 337-343, </pages> <month> May. </month>
Reference-contexts: The first block of Table 1 summarizes the performance of some popular byte-oriented schemes. Unix compress illustrates what is obtainable using a robust implementation of Ziv and Lempels LZ78 technique (Ziv and Lempel, 1978). The gzip utility is an exemplary implementation of the earlier LZ77 method <ref> (Ziv and Lempel, 1977) </ref>, and achieves substantially better compression.
Reference: <author> Ziv, J. and Lempel, A. </author> <title> (1978) Compression of individual sequences via variable-rate coding, </title> <journal> IEEE Trans. Information Theory, </journal> <volume> IT-234(5), </volume> <pages> 530-536, </pages> <month> September. </month>
Reference-contexts: SEQUITURs grammar not only provides an efficient in-memory record of the sequence, but it also enables fixed-time lookup for matching phrases. Second, because of the way in which Ziv-Lempel schemes add phrases to the dictionary, many phrases become redundant. In LZ78 <ref> (Ziv and Lempel, 1978) </ref>, new phrases are produced from older ones by adding a single symbol. This means that phrases are generated on the way to a long repeated phrase, and are not used again. <p> The first block of Table 1 summarizes the performance of some popular byte-oriented schemes. Unix compress illustrates what is obtainable using a robust implementation of Ziv and Lempels LZ78 technique <ref> (Ziv and Lempel, 1978) </ref>. The gzip utility is an exemplary implementation of the earlier LZ77 method (Ziv and Lempel, 1977), and achieves substantially better compression.
References-found: 5

