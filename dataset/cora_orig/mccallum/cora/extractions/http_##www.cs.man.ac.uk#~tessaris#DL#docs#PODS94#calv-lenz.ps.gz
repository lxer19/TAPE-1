URL: http://www.cs.man.ac.uk/~tessaris/DL/docs/PODS94/calv-lenz.ps.gz
Refering-URL: http://www.cs.man.ac.uk/~tessaris/DL/papers.html
Root-URL: http://www.cs.man.ac.uk
Email: calvanese@assi.dis.uniroma1.it  lenzerini@assi.dis.uniroma1.it  
Title: Making Object-Oriented Schemas More Expressive  
Author: Maurizio Lenzerini 
Address: Via Salaria 113, 00198 Roma, Italy  Via Salaria 113, 00198 Roma, Italy  
Affiliation: Diego Calvanese Dipartimento di Informatica e Sistemistica Universita di Roma "La Sapienza"  Dipartimento di Informatica e Sistemistica Universita di Roma "La Sapienza"  
Note: Appeared in Proc. of PODS'94  
Abstract: Current object-oriented data models lack several important features that would allow one to express relevant knowledge about the classes of a schema. In particular, there is no data model supporting simultaneously the inverse of the functions represented by attributes, the union, the intersection and the complement of classes, the possibility of using nonbinary relations, and the possibility of expressing cardinality constraints on attributes and relations. In this paper we define a new data model, called CAR, which extends the basic core of current object-oriented data models with all the above mentioned features. A technique is then presented both for checking the consistency of class definitions, and for computing the logical consequences of the knowledge represented in the schema. Finally, the inherent complexity of reasoning in CAR is investigated, and the complexity of our inferencing technique is studied, depending on various assumptions on the schema. 
Abstract-found: 1
Intro-found: 1
Reference: [AGO91] <author> A. Albano, G. Ghelli, and R. Orsini. </author> <title> A relationship mechanism for strongly typed Object-Oriented database programming languages. </title> <booktitle> In Proc. of VLDB-91, </booktitle> <pages> pages 565-575, </pages> <address> Barcelona, </address> <year> 1991. </year>
Reference-contexts: Then, we introduce both the inverse of an attribute, which is rarely considered in the object-oriented framework, and the notion of n-ary relations, similarly to <ref> [AK89, AGO91] </ref>. Finally, we make available the use of cardinality constraints, which impose restrictions on the number of links of a certain type (attribute or relation) involving every instance of a given class.
Reference: [AK89] <author> S. Abiteboul and P. Kanellakis. </author> <title> Object identity as a query language primitive. </title> <booktitle> In Proc. of ACM SIGMOD, </booktitle> <pages> pages 159-173, </pages> <year> 1989. </year>
Reference-contexts: First of all, we add to the basic core the possibility of referring to the complement of a class, in the spirit of [AP86, DL93], and the possibility of denoting the union and the intersection of classes (see <ref> [LR89, AK89] </ref>). Then, we introduce both the inverse of an attribute, which is rarely considered in the object-oriented framework, and the notion of n-ary relations, similarly to [AK89, AGO91]. <p> Then, we introduce both the inverse of an attribute, which is rarely considered in the object-oriented framework, and the notion of n-ary relations, similarly to <ref> [AK89, AGO91] </ref>. Finally, we make available the use of cardinality constraints, which impose restrictions on the number of links of a certain type (attribute or relation) involving every instance of a given class. <p> In particular, it is possible to show that the data schemas expressed in object-oriented models encompassing the notion of type (e.g. record and set, as in <ref> [AK89] </ref>) can be reformulated in terms of the CAR data model. It is worth noting that IRIS [LV87] is one example of data model that is more powerful than CAR in the specification of cardinality constraints. <p> It follows that our method, when applied to schemas of this type, works in polynomial time. This is particularly important, if one considers that most object-oriented data models assume, either implicitly or explicitly, an organization of classes based on generalization hierarchies (see for example how isa-relationships are treated in <ref> [AK89] </ref>). 5 Conclusions We have presented the object-oriented data model CAR, supporting several modeling constructs that enhance the expressive power of the structural component of the model but are usually missing in current data models.
Reference: [AP86] <author> P. Atzeni and D. S. Parker Jr. </author> <title> Formal properties of net-based knowledge representation schemes. </title> <booktitle> In Proc. of ICDE-86, </booktitle> <pages> pages 700-706, </pages> <address> Los Ange-les, </address> <year> 1986. </year>
Reference-contexts: First of all, we add to the basic core the possibility of referring to the complement of a class, in the spirit of <ref> [AP86, DL93] </ref>, and the possibility of denoting the union and the intersection of classes (see [LR89, AK89]). Then, we introduce both the inverse of an attribute, which is rarely considered in the object-oriented framework, and the notion of n-ary relations, similarly to [AK89, AGO91].
Reference: [BCN92] <author> C. Batini, S. Ceri, and S. B. Navathe. </author> <title> Conceptual Database Design, an Entity-Relationship Approach. </title> <publisher> Benjamin and Cummings Publ. Co., </publisher> <address> Menlo Park, California, </address> <year> 1992. </year>
Reference-contexts: Generalization hierarchies are treelike structures representing inclusion, where it is assumed that classes in different groups are pairwise disjoint, and within one group the same holds for all classes at the same depth in the tree <ref> [BCN92] </ref>. In this case, each group corresponds to one cluster, and for each cluster the number of compound classes equals the number of classes, since it corresponds to the number of paths from the root of the tree to a class.
Reference: [BDS93] <author> Martin Buchheit, Francesco M. Donini, and An-drea Schaerf. </author> <title> Decidable reasoning in terminological knowledge representation systems. </title> <booktitle> In Proc. of IJCAI-93, </booktitle> <pages> pages 704-709, </pages> <address> Chambery, France, 1993. </address> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos. </address>
Reference-contexts: The interaction between car-dinality constraints and the other modeling constructs of our model makes the nature of the problem different with respect to the context of relational theory (see [CK86, GM84]), conceptual and semantic data models [LS83, Tha92, LN90, CL94], or knowledge representation languages <ref> [DLNN91, BDS93, Neb88] </ref>. Indeed, the work on relational databases rarely considered cardinal-ity constraints of the form allowed in CAR, whereas the work on conceptual and semantic data modeling usually does not take into account complex class expressions (e.g. union and complement of classes).
Reference: [CK86] <author> S. S. Cosmadakis and P. C. Kanellakis. </author> <title> Functional and inclusion dependencies A graph theoretical approach. </title> <editor> In P. C. Kanellakis and F. P. Preparata, editors, </editor> <booktitle> Advances in Computing Research, </booktitle> <volume> Vol. 3, </volume> <pages> pages 163-184. </pages> <publisher> JAI Press, </publisher> <year> 1986. </year>
Reference-contexts: The interaction between car-dinality constraints and the other modeling constructs of our model makes the nature of the problem different with respect to the context of relational theory (see <ref> [CK86, GM84] </ref>), conceptual and semantic data models [LS83, Tha92, LN90, CL94], or knowledge representation languages [DLNN91, BDS93, Neb88].
Reference: [CL94] <author> Diego Calvanese and Maurizio Lenzerini. </author> <title> On the interaction between ISA and cardinality constraints. </title> <booktitle> In Proc. of ICDE-94, </booktitle> <pages> pages 204-213, </pages> <address> Houston, 1994. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: The interaction between car-dinality constraints and the other modeling constructs of our model makes the nature of the problem different with respect to the context of relational theory (see [CK86, GM84]), conceptual and semantic data models <ref> [LS83, Tha92, LN90, CL94] </ref>, or knowledge representation languages [DLNN91, BDS93, Neb88]. <p> Finally, the knowledge representation community does not restrict the reasoning process to finite structures, as done in databases in general, and in CAR in particular. For this reason, we extend and improve the technique proposed in <ref> [CL94] </ref> in order to deal with the constructs of the CAR data model. <p> This method can also be extended to solve the logical implication problem in the CAR model, but, due to space limitations, we do not deal with this aspect in the present paper. The method for class satisfiability extends the technique proposed in <ref> [CL94] </ref> in order to cope with the higher expressivity of the CAR data model. Moreover, the class satisfiability algorithm is divided into two separate phases: In the first one we neglect all cardinality constraints and take only into account the knowledge that derives from the other aspects of the schema. <p> The way in which we perform this second phase represents an improvement over the algorithm proposed in <ref> [CL94] </ref>, and works in worst case deterministic exponential time (compared to the double exponential time algorithm suggested in [CL94]). <p> The way in which we perform this second phase represents an improvement over the algorithm proposed in <ref> [CL94] </ref>, and works in worst case deterministic exponential time (compared to the double exponential time algorithm suggested in [CL94]).
Reference: [Dal92] <author> Mukesh Dalal. </author> <title> Tractable instances of some hard deduction problems. </title> <booktitle> In Proc. of ECAI-92, </booktitle> <pages> pages 354-363, </pages> <address> Vienna, 1992. </address> <publisher> John Wiley & Sons. </publisher>
Reference-contexts: Nevertheless, since 252 we are performing a preselection, it may be sufficient to use an efficient and sound procedure that does not guarantee completeness <ref> [Dal92] </ref>. With respect to criterion (b), we propose a simple syntactic method that can be applied in order to introduce disjointness between classes without influencing satisfiability of classes in the schema.
Reference: [DL93] <author> Giuseppe Di Battista and Maurizio Lenzerini. </author> <title> Deductive entity-relationship modeling. </title> <journal> IEEE Trans. on Knowledge and Data Engineering, </journal> <volume> 5(3) </volume> <pages> 439-450, </pages> <year> 1993. </year>
Reference-contexts: First of all, we add to the basic core the possibility of referring to the complement of a class, in the spirit of <ref> [AP86, DL93] </ref>, and the possibility of denoting the union and the intersection of classes (see [LR89, AK89]). Then, we introduce both the inverse of an attribute, which is rarely considered in the object-oriented framework, and the notion of n-ary relations, similarly to [AK89, AGO91].
Reference: [DLNN91] <author> Francesco M. Donini, Maurizio Lenzerini, Daniele Nardi, and Werner Nutt. </author> <title> The complexity of concept languages. </title> <editor> In James Allen, Richard Fikes, and Erik Sandewall, editors, </editor> <booktitle> Proc. of KR-91, </booktitle> <pages> pages 151-162. </pages> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos, </address> <year> 1991. </year>
Reference-contexts: The interaction between car-dinality constraints and the other modeling constructs of our model makes the nature of the problem different with respect to the context of relational theory (see [CK86, GM84]), conceptual and semantic data models [LS83, Tha92, LN90, CL94], or knowledge representation languages <ref> [DLNN91, BDS93, Neb88] </ref>. Indeed, the work on relational databases rarely considered cardinal-ity constraints of the form allowed in CAR, whereas the work on conceptual and semantic data modeling usually does not take into account complex class expressions (e.g. union and complement of classes).
Reference: [FK85] <author> Richard Fikes and Tom Kehler. </author> <title> The role of frame-based representation in reasoning. </title> <journal> Communications of the ACM, </journal> <volume> 28(9) </volume> <pages> 904-920, </pages> <year> 1985. </year>
Reference-contexts: It is worth noting that the use of cardinality constraints allows us to represent 243 several forms of existence and functional dependencies, and is very common in structured knowledge representation languages (semantic networks and frame-based languages), as pointed out, for example, in <ref> [FK85] </ref>. With regard to the second aspect, reasoning about a schema comprising all types of constructs mentioned above appears to be significantly harder than reasoning about the various constructs separately.
Reference: [GJ79] <author> M. R. Garey and D. S. Johnson. </author> <title> Computers and Intractability|A guide to NP-completeness. W.H. </title> <publisher> Freeman and Company, </publisher> <address> San Francisco, </address> <year> 1979. </year>
Reference-contexts: Proof (sketch). The proof is based on the reduction of Intersection Pattern (see <ref> [GJ79] </ref>, problem SP9). It exploits the fact that disjointness between classes can be expressed introducing suitable cardinality constraints. 4.2 Upper bounds The method proposed in the previous section splits the process of checking the satisfiability of a class in a CAR schema in two phases.
Reference: [GM84] <author> J. Grant and J. Minker. </author> <title> Numerical dependencies. </title> <editor> In H. Gallaire, J. Minker, and J.-M. Nicolas, editors, </editor> <booktitle> Advances in Database Theory II. </booktitle> <publisher> Plenum Publ. Co., </publisher> <address> New York, </address> <year> 1984. </year>
Reference-contexts: The interaction between car-dinality constraints and the other modeling constructs of our model makes the nature of the problem different with respect to the context of relational theory (see <ref> [CK86, GM84] </ref>), conceptual and semantic data models [LS83, Tha92, LN90, CL94], or knowledge representation languages [DLNN91, BDS93, Neb88]. <p> It is worth noticing that one of the reasons of the high complexity of the inference problem is the possibility of refining cardinality constraints for subclasses. Despite the high worst-case complexity, the presence of such constraints does not make the problem undecidable. By exploiting results such as those in <ref> [GM84, LV87] </ref>, one can show that no sound and complete inference methods exist, for a data model obtained by extending CAR with cardinality constraints imposed on projections of relations.
Reference: [Kim90] <author> Won Kim. </author> <title> Introduction to Object-Oriented Databases. </title> <publisher> The MIT Press, </publisher> <year> 1990. </year>
Reference-contexts: Such core usually includes classes, isa-relationships between classes as the basis for representing inheritance, and attributes as a means to establish the properties of classes (see <ref> [Kim90] </ref>). First of all, we add to the basic core the possibility of referring to the complement of a class, in the spirit of [AP86, DL93], and the possibility of denoting the union and the intersection of classes (see [LR89, AK89]).
Reference: [LN90] <author> Maurizio Lenzerini and Paolo Nobili. </author> <title> On the satisfiability of dependency constraints in entity-relationship schemata. </title> <journal> Information Systems, </journal> <volume> 15(4) </volume> <pages> 453-461, </pages> <year> 1990. </year>
Reference-contexts: The interaction between car-dinality constraints and the other modeling constructs of our model makes the nature of the problem different with respect to the context of relational theory (see [CK86, GM84]), conceptual and semantic data models <ref> [LS83, Tha92, LN90, CL94] </ref>, or knowledge representation languages [DLNN91, BDS93, Neb88]. <p> Unfortunately, because of classes that may have common instances, it is not possible to adopt the most natural approach, which would be to use one unknown for each class, attribute and relation, as done in <ref> [LN90] </ref> for a simple data model that assumes that all classes are pairwise disjoint. We will overcome this problem by introducing the notion of expansion of a CAR schema. <p> Proof (sketch). The form of S guarantees that if it admits a positive solution, then it also admits an integer solution (see <ref> [LN90] </ref>).
Reference: [LR89] <author> C. Lecluse and P. Richard. </author> <title> Modeling complex structures in objects-oriented databases. </title> <booktitle> In Proc. of PODS-89, </booktitle> <pages> pages 362-369, </pages> <year> 1989. </year>
Reference-contexts: First of all, we add to the basic core the possibility of referring to the complement of a class, in the spirit of [AP86, DL93], and the possibility of denoting the union and the intersection of classes (see <ref> [LR89, AK89] </ref>). Then, we introduce both the inverse of an attribute, which is rarely considered in the object-oriented framework, and the notion of n-ary relations, similarly to [AK89, AGO91].
Reference: [LS83] <author> Maurizio Lenzerini and Gaetano Santucci. </author> <title> Car-dinality constraints in the entity-relationship model. </title> <editor> In C. G. Davis and others, editors, </editor> <booktitle> Proc. of ER-83, </booktitle> <pages> pages 529-549. </pages> <publisher> North-Holland Publ. Co., </publisher> <address> Amsterdam, </address> <year> 1983. </year>
Reference-contexts: The interaction between car-dinality constraints and the other modeling constructs of our model makes the nature of the problem different with respect to the context of relational theory (see [CK86, GM84]), conceptual and semantic data models <ref> [LS83, Tha92, LN90, CL94] </ref>, or knowledge representation languages [DLNN91, BDS93, Neb88].
Reference: [LV87] <author> Peter Lyngbaek and Victor Vianu. </author> <title> Mapping a semantic database model to the relational model. </title> <booktitle> In Proc. of ACM SIGMOD, </booktitle> <pages> pages 132-142, </pages> <year> 1987. </year>
Reference-contexts: In particular, it is possible to show that the data schemas expressed in object-oriented models encompassing the notion of type (e.g. record and set, as in [AK89]) can be reformulated in terms of the CAR data model. It is worth noting that IRIS <ref> [LV87] </ref> is one example of data model that is more powerful than CAR in the specification of cardinality constraints. Indeed, IRIS allows one to impose cardinality constraints holding between a class and a projection of a relation, while CAR does not provide any means for referring to projections of relations. <p> It is worth noticing that one of the reasons of the high complexity of the inference problem is the possibility of refining cardinality constraints for subclasses. Despite the high worst-case complexity, the presence of such constraints does not make the problem undecidable. By exploiting results such as those in <ref> [GM84, LV87] </ref>, one can show that no sound and complete inference methods exist, for a data model obtained by extending CAR with cardinality constraints imposed on projections of relations.
Reference: [Neb88] <author> Bernhard Nebel. </author> <title> Computational complexity of terminological reasoning in BACK. </title> <journal> AIJ, </journal> <volume> 34(3) </volume> <pages> 371-383, </pages> <year> 1988. </year>
Reference-contexts: The interaction between car-dinality constraints and the other modeling constructs of our model makes the nature of the problem different with respect to the context of relational theory (see [CK86, GM84]), conceptual and semantic data models [LS83, Tha92, LN90, CL94], or knowledge representation languages <ref> [DLNN91, BDS93, Neb88] </ref>. Indeed, the work on relational databases rarely considered cardinal-ity constraints of the form allowed in CAR, whereas the work on conceptual and semantic data modeling usually does not take into account complex class expressions (e.g. union and complement of classes).
Reference: [Pap81] <author> Christos H. Papadimitriou. </author> <title> On the complexity of integer programming. </title> <journal> J. of the ACM, </journal> <volume> 28(4) </volume> <pages> 765-768, </pages> <year> 1981. </year>
Reference-contexts: Proof (sketch). The form of S guarantees that if it admits a positive solution, then it also admits an integer solution (see [LN90]). Moreover, it has been shown (see for example <ref> [Pap81] </ref>) that for a system of linear disequations, the existence of an integer solution implies the existence of a solution in which all values assigned to the unknowns of the system are bounded by a number whose binary representation is polynomial in the size of the system.
Reference: [Tha92] <author> Bernhard Thalheim. </author> <title> Fundamentals of cardinality constraints. </title> <editor> In G. Pernoul and A. M. Tjoa, editors, </editor> <booktitle> Proc. of ER-92, </booktitle> <pages> pages 7-23. </pages> <publisher> Springer-Verlag, </publisher> <year> 1992. </year> <month> 254 </month>
Reference-contexts: The interaction between car-dinality constraints and the other modeling constructs of our model makes the nature of the problem different with respect to the context of relational theory (see [CK86, GM84]), conceptual and semantic data models <ref> [LS83, Tha92, LN90, CL94] </ref>, or knowledge representation languages [DLNN91, BDS93, Neb88].
References-found: 21

