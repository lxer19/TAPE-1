URL: ftp://gaia.cs.umass.edu/pub/Yate94:Per-session.ps.Z
Refering-URL: http://www-net.cs.umass.edu/papers/papers.html
Root-URL: 
Title: On per-session end-to-end delay and the call admission problem for real-time applications with QOS requirements  
Author: David Yates James Kurose and Don Towsley Michael G. Hluchyj 
Keyword: Packet-switched networks, real-time communication, quality of service, performance guarantees, end-to-end delay, cross traffic.  
Note: The work of this author was supported by a Motorola Codex University Partnership in Research Grant. The work of this author was supported in part by the National Science Foundation under grant NCR-911618, and the Advanced Research Projects Agency under contract NAG2-578.  
Address: 25 Sundial Avenue Amherst, MA 01003, USA Manchester, NH 03103, USA  
Affiliation: Department of Computer Science Summa Four, Inc. University of Massachusetts  
Pubnum: CMPSCI Technical Report 93-20  
Email: fyates,kurose,towsleyg@cs.umass.edu hluchyj@summa4.mv.com  
Date: Revised May 31, 1994  
Abstract: A crucial problem facing the designers and deployers of future high-speed networks is providing applications with quality of service (QOS) guarantees. For soft real-time applications, which are delay sensitive but loss tolerant, delay distribution is an important QOS measure of interest. In this paper we study (through simulation) the end-to-end delay distribution seen by individual sessions under simple first-come first-served (FCFS) multiplexing in a network model with two significant features: (1) all traffic is connection-oriented, (2) cross traffic along routes is representative of that seen by calls in a moderately sized wide area network (i.e., less than 100 switches). We compare these delay distributions with the worst case analytic delay bounds predicted by three different techniques for providing such bounds (two of which require a more sophisticated link-level scheduling policy). We also consider the per-hop delay distributions seen as a session progresses "deeper" into the network and determine the sensitivity of these delay distributions to the manner in which the interfering traffic is modeled. Finally, we use our delay distribution results to examine the tradeoff between the QOS requested by a call, the manner in which the QOS guarantee is provided, and the number of calls that are admitted at the requested QOS. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. L. Cruz, </author> <title> "A calculus for network delay, part I: Network elements in isolation," </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> vol. 37, </volume> <pages> pp. 114-131, </pages> <month> Jan. </month> <year> 1991. </year>
Reference-contexts: Such bounds may potentially be useful in providing a delay-based QOS guarantee to a session having real-time constraints. Techniques have been proposed both for providing a deterministic upper bound on delay <ref> [1, 2, 3, 4, 5] </ref> as well as a stochastic bound on the delay distribution [6, 7, 8, 9]. In the former case, a specific link scheduling discipline is sometimes needed. <p> In this paper we compare our delay distributions obtained via simulation with the worst case bound on the delay distribution predicted by three methods: (i) Cruz's method <ref> [1, 2] </ref> for computing delay bounds under FCFS multiplexing, (ii) Golestani's delay bounds using stop-and-go queueing [10, 11] and (iii) Parekh and Gallager's method [3, 4, 5] for computing delay bounds under weighted fair queueing (WFQ) [12, 13]. <p> Each session source can be represented as a linear bounded arrival process (LBAP). A source is a LBAP with parameters and if the number of bits that arrive within a time interval of length t is bounded by + t <ref> [1] </ref>. Given the source characterization in figure 5, = L = 512 bits; and = L=T = 32 bits=ms: Observe that this corresponds to the output of a leaky bucket controlled source with a token generation rate of 1=T , a token buffer size of one, and no packet buffer. <p> 10 Upper bound on Queueing discipline queueing delay (ms) Weighted Fair Queueing (WFQ) [3, 4, 5, 12, 13] 81.3 Earliest Due Date (EDD) [24] a 81.3 Hierarchical Round Robin (HRR) [25] b 161.3 Jitter Earliest Due Date (J-EDD) [26, 27] c 161.3 Stop-and-go queueing [10, 11] 177.3 First-come first-served (FCFS) <ref> [1, 2] </ref> 622.5 a For EDD, we specify a delay bound of T ms for all sessions at each switch. b For HRR, we assume a frame size of T ms. c For J-EDD, the delay and jitter bounds are 2T ms for all sessions at each switch. <p> Given this condition, it was possible to analytically compute deterministic delay bounds using the methods of <ref> [1, 2, 3, 4, 5, 10, 11] </ref>. In this section, we vary the link utilization by increasing the number of active sources.
Reference: [2] <author> R. L. Cruz, </author> <title> "A calculus for network delay, part II: Network analysis," </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> vol. 37, </volume> <pages> pp. 132-141, </pages> <month> Jan. </month> <year> 1991. </year>
Reference-contexts: Such bounds may potentially be useful in providing a delay-based QOS guarantee to a session having real-time constraints. Techniques have been proposed both for providing a deterministic upper bound on delay <ref> [1, 2, 3, 4, 5] </ref> as well as a stochastic bound on the delay distribution [6, 7, 8, 9]. In the former case, a specific link scheduling discipline is sometimes needed. <p> In this paper we compare our delay distributions obtained via simulation with the worst case bound on the delay distribution predicted by three methods: (i) Cruz's method <ref> [1, 2] </ref> for computing delay bounds under FCFS multiplexing, (ii) Golestani's delay bounds using stop-and-go queueing [10, 11] and (iii) Parekh and Gallager's method [3, 4, 5] for computing delay bounds under weighted fair queueing (WFQ) [12, 13]. <p> 10 Upper bound on Queueing discipline queueing delay (ms) Weighted Fair Queueing (WFQ) [3, 4, 5, 12, 13] 81.3 Earliest Due Date (EDD) [24] a 81.3 Hierarchical Round Robin (HRR) [25] b 161.3 Jitter Earliest Due Date (J-EDD) [26, 27] c 161.3 Stop-and-go queueing [10, 11] 177.3 First-come first-served (FCFS) <ref> [1, 2] </ref> 622.5 a For EDD, we specify a delay bound of T ms for all sessions at each switch. b For HRR, we assume a frame size of T ms. c For J-EDD, the delay and jitter bounds are 2T ms for all sessions at each switch. <p> Given this condition, it was possible to analytically compute deterministic delay bounds using the methods of <ref> [1, 2, 3, 4, 5, 10, 11] </ref>. In this section, we vary the link utilization by increasing the number of active sources.
Reference: [3] <author> A. K. Parekh and R. G. Gallager, </author> <title> "A generalized processor sharing approach to flow control in integrated services networks: the single-node case," </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> vol. 1, </volume> <pages> pp. 344-357, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: Such bounds may potentially be useful in providing a delay-based QOS guarantee to a session having real-time constraints. Techniques have been proposed both for providing a deterministic upper bound on delay <ref> [1, 2, 3, 4, 5] </ref> as well as a stochastic bound on the delay distribution [6, 7, 8, 9]. In the former case, a specific link scheduling discipline is sometimes needed. <p> this paper we compare our delay distributions obtained via simulation with the worst case bound on the delay distribution predicted by three methods: (i) Cruz's method [1, 2] for computing delay bounds under FCFS multiplexing, (ii) Golestani's delay bounds using stop-and-go queueing [10, 11] and (iii) Parekh and Gallager's method <ref> [3, 4, 5] </ref> for computing delay bounds under weighted fair queueing (WFQ) [12, 13]. <p> Note also that stop-and-go and WFQ represent the extremes in terms of delay bounds, within this class of queueing disciplines. Comparisons of some of these queueing disciplines can be found in [22, 23]. 10 Upper bound on Queueing discipline queueing delay (ms) Weighted Fair Queueing (WFQ) <ref> [3, 4, 5, 12, 13] </ref> 81.3 Earliest Due Date (EDD) [24] a 81.3 Hierarchical Round Robin (HRR) [25] b 161.3 Jitter Earliest Due Date (J-EDD) [26, 27] c 161.3 Stop-and-go queueing [10, 11] 177.3 First-come first-served (FCFS) [1, 2] 622.5 a For EDD, we specify a delay bound of T ms <p> Given this condition, it was possible to analytically compute deterministic delay bounds using the methods of <ref> [1, 2, 3, 4, 5, 10, 11] </ref>. In this section, we vary the link utilization by increasing the number of active sources.
Reference: [4] <author> A. K. J. Parekh, </author> <title> A generalized processor sharing approach to flow control in integrated services networks. </title> <type> PhD thesis, </type> <institution> Massachusetts Institute of Technology, </institution> <address> Cam-bridge, MA, </address> <month> Feb. </month> <year> 1992. </year>
Reference-contexts: Such bounds may potentially be useful in providing a delay-based QOS guarantee to a session having real-time constraints. Techniques have been proposed both for providing a deterministic upper bound on delay <ref> [1, 2, 3, 4, 5] </ref> as well as a stochastic bound on the delay distribution [6, 7, 8, 9]. In the former case, a specific link scheduling discipline is sometimes needed. <p> this paper we compare our delay distributions obtained via simulation with the worst case bound on the delay distribution predicted by three methods: (i) Cruz's method [1, 2] for computing delay bounds under FCFS multiplexing, (ii) Golestani's delay bounds using stop-and-go queueing [10, 11] and (iii) Parekh and Gallager's method <ref> [3, 4, 5] </ref> for computing delay bounds under weighted fair queueing (WFQ) [12, 13]. <p> Note also that stop-and-go and WFQ represent the extremes in terms of delay bounds, within this class of queueing disciplines. Comparisons of some of these queueing disciplines can be found in [22, 23]. 10 Upper bound on Queueing discipline queueing delay (ms) Weighted Fair Queueing (WFQ) <ref> [3, 4, 5, 12, 13] </ref> 81.3 Earliest Due Date (EDD) [24] a 81.3 Hierarchical Round Robin (HRR) [25] b 161.3 Jitter Earliest Due Date (J-EDD) [26, 27] c 161.3 Stop-and-go queueing [10, 11] 177.3 First-come first-served (FCFS) [1, 2] 622.5 a For EDD, we specify a delay bound of T ms <p> Given this condition, it was possible to analytically compute deterministic delay bounds using the methods of <ref> [1, 2, 3, 4, 5, 10, 11] </ref>. In this section, we vary the link utilization by increasing the number of active sources.
Reference: [5] <author> A. K. Parekh and R. G. Gallager, </author> <title> "A generalized processor sharing approach to flow control in integrated services networks | the multiple node case," </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), </booktitle> <volume> vol. </volume> <pages> 2, </pages> <address> (San Francisco, CA), </address> <pages> pp. </pages> <address> 521-530 (5A.1), </address> <publisher> IEEE, </publisher> <month> Mar. </month> <year> 1993. </year>
Reference-contexts: Such bounds may potentially be useful in providing a delay-based QOS guarantee to a session having real-time constraints. Techniques have been proposed both for providing a deterministic upper bound on delay <ref> [1, 2, 3, 4, 5] </ref> as well as a stochastic bound on the delay distribution [6, 7, 8, 9]. In the former case, a specific link scheduling discipline is sometimes needed. <p> this paper we compare our delay distributions obtained via simulation with the worst case bound on the delay distribution predicted by three methods: (i) Cruz's method [1, 2] for computing delay bounds under FCFS multiplexing, (ii) Golestani's delay bounds using stop-and-go queueing [10, 11] and (iii) Parekh and Gallager's method <ref> [3, 4, 5] </ref> for computing delay bounds under weighted fair queueing (WFQ) [12, 13]. <p> In the following, we will consider WFQ, where weights are assigned to sessions in proportion to their rate. The upper bound on queueing delay for a session that traverses route R in network M H is denoted by Q M H . From equation (23) in <ref> [5] </ref>, + (H 1)L + (H 1) C l In M 5 , Q M H = 81:3 ms. Because of the mechanism used by stop-and-go queueing to support an upper bound on delay, a lower bound is also imposed on the delay. <p> Note also that stop-and-go and WFQ represent the extremes in terms of delay bounds, within this class of queueing disciplines. Comparisons of some of these queueing disciplines can be found in [22, 23]. 10 Upper bound on Queueing discipline queueing delay (ms) Weighted Fair Queueing (WFQ) <ref> [3, 4, 5, 12, 13] </ref> 81.3 Earliest Due Date (EDD) [24] a 81.3 Hierarchical Round Robin (HRR) [25] b 161.3 Jitter Earliest Due Date (J-EDD) [26, 27] c 161.3 Stop-and-go queueing [10, 11] 177.3 First-come first-served (FCFS) [1, 2] 622.5 a For EDD, we specify a delay bound of T ms <p> Given this condition, it was possible to analytically compute deterministic delay bounds using the methods of <ref> [1, 2, 3, 4, 5, 10, 11] </ref>. In this section, we vary the link utilization by increasing the number of active sources. <p> For our network model, we conjecture that the FCFS worst case bound is not achievable. However the bounds for stop-and-go and WFQ are provably achievable to within an arbitrarily small tolerance <ref> [5, 11] </ref>. When using our reduced OFF period source, at high link utilizations the delay distributions for FCFS fall substantially below all bounds on delay. Thus, the delay distribution observed under FCFS is better than the delay guaranteed by stop-and-go and WFQ, and the best possible delay under stop-and-go.
Reference: [6] <author> J. Kurose, </author> <title> "On computing per-session performance bounds in high-speed multi-hop computer networks," </title> <booktitle> in Sigmetrics 1992, </booktitle> <address> (New Port, Rhode Island), </address> <pages> pp. 128-139, </pages> <publisher> ACM, </publisher> <month> June </month> <year> 1992. </year>
Reference-contexts: Such bounds may potentially be useful in providing a delay-based QOS guarantee to a session having real-time constraints. Techniques have been proposed both for providing a deterministic upper bound on delay [1, 2, 3, 4, 5] as well as a stochastic bound on the delay distribution <ref> [6, 7, 8, 9] </ref>. In the former case, a specific link scheduling discipline is sometimes needed. However, the deterministic delay bounds are readily computable and insure that all packets will experience a delay below this bound.
Reference: [7] <author> C.-S. Chang, </author> <title> "Stability, queue length, and delay, part I: Deterministic queueing networks," </title> <type> Research Report RC 17708, </type> <institution> IBM T. J. Watson Research Center, </institution> <address> Yorktown Heights, NY, </address> <month> Feb. </month> <year> 1992. </year>
Reference-contexts: Such bounds may potentially be useful in providing a delay-based QOS guarantee to a session having real-time constraints. Techniques have been proposed both for providing a deterministic upper bound on delay [1, 2, 3, 4, 5] as well as a stochastic bound on the delay distribution <ref> [6, 7, 8, 9] </ref>. In the former case, a specific link scheduling discipline is sometimes needed. However, the deterministic delay bounds are readily computable and insure that all packets will experience a delay below this bound.
Reference: [8] <author> C.-S. Chang, </author> <title> "Stability, queue length, and delay, part II: Stochastic queueing networks," </title> <type> Research Report RC 17709, </type> <institution> IBM T. J. Watson Research Center, </institution> <address> Yorktown Heights, NY, </address> <month> Feb. </month> <year> 1992. </year>
Reference-contexts: Such bounds may potentially be useful in providing a delay-based QOS guarantee to a session having real-time constraints. Techniques have been proposed both for providing a deterministic upper bound on delay [1, 2, 3, 4, 5] as well as a stochastic bound on the delay distribution <ref> [6, 7, 8, 9] </ref>. In the former case, a specific link scheduling discipline is sometimes needed. However, the deterministic delay bounds are readily computable and insure that all packets will experience a delay below this bound. <p> We also compare FCFS delay distributions obtained by simulation with approximate stochastic bounds computed using the techniques in [14] and <ref> [8] </ref>. Again, our results indicate that these "bounds" are quite loose. <p> Even though deterministic bounds are not computable for the delay distributions in figure 9, it is possible to approximate stochastic bounds for these distributions using techniques presented in [14] and <ref> [8] </ref>. Figure 10 compares an approximate bound on the end-to-end "virtual delay" tail distribution with the delay distribution obtained by simulation, at three different link utilizations. <p> Note that at high utilization (fl = 85:6%) the approximate bound is more than four orders of magnitude above the simulated distribution for a given value of end-to-end delay. Furthermore, this gap widens at lower utilizations. We use the term virtual delay (as in <ref> [8, 9] </ref>), to mean the delay seen by a "virtual" packet arriving at a switch at time t. Thus, the virtual delay at a switch is not necessarily the same as the delay seen by packets from a given session routed through the switch.
Reference: [9] <author> O. Yaron and M. Sidi, </author> <title> "Performance and stability of communication networks via robust exponential bounds," </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> vol. 1, </volume> <pages> pp. 372-385, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: Such bounds may potentially be useful in providing a delay-based QOS guarantee to a session having real-time constraints. Techniques have been proposed both for providing a deterministic upper bound on delay [1, 2, 3, 4, 5] as well as a stochastic bound on the delay distribution <ref> [6, 7, 8, 9] </ref>. In the former case, a specific link scheduling discipline is sometimes needed. However, the deterministic delay bounds are readily computable and insure that all packets will experience a delay below this bound. <p> Note that at high utilization (fl = 85:6%) the approximate bound is more than four orders of magnitude above the simulated distribution for a given value of end-to-end delay. Furthermore, this gap widens at lower utilizations. We use the term virtual delay (as in <ref> [8, 9] </ref>), to mean the delay seen by a "virtual" packet arriving at a switch at time t. Thus, the virtual delay at a switch is not necessarily the same as the delay seen by packets from a given session routed through the switch.
Reference: [10] <author> S. J. Golestani, </author> <title> "A framing strategy for congestion management," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 9, </volume> <pages> pp. 1064-1077, </pages> <month> Sept. </month> <year> 1991. </year> <month> 30 </month>
Reference-contexts: In this paper we compare our delay distributions obtained via simulation with the worst case bound on the delay distribution predicted by three methods: (i) Cruz's method [1, 2] for computing delay bounds under FCFS multiplexing, (ii) Golestani's delay bounds using stop-and-go queueing <ref> [10, 11] </ref> and (iii) Parekh and Gallager's method [3, 4, 5] for computing delay bounds under weighted fair queueing (WFQ) [12, 13]. <p> For stop-and-go queueing, the delay along route R for any packet in an M H network, which we denote Q M H , satisfies 2HT + (H 1) C l L + T; (3) where 2HT is the maximum route-dependent queueing delay <ref> [10, 11] </ref> along R. <p> can be found in [22, 23]. 10 Upper bound on Queueing discipline queueing delay (ms) Weighted Fair Queueing (WFQ) [3, 4, 5, 12, 13] 81.3 Earliest Due Date (EDD) [24] a 81.3 Hierarchical Round Robin (HRR) [25] b 161.3 Jitter Earliest Due Date (J-EDD) [26, 27] c 161.3 Stop-and-go queueing <ref> [10, 11] </ref> 177.3 First-come first-served (FCFS) [1, 2] 622.5 a For EDD, we specify a delay bound of T ms for all sessions at each switch. b For HRR, we assume a frame size of T ms. c For J-EDD, the delay and jitter bounds are 2T ms for all sessions <p> Given this condition, it was possible to analytically compute deterministic delay bounds using the methods of <ref> [1, 2, 3, 4, 5, 10, 11] </ref>. In this section, we vary the link utilization by increasing the number of active sources.
Reference: [11] <author> S. J. Golestani, </author> <title> "Congestion-free communication in high-speed packet networks," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. 39, </volume> <pages> pp. 1802-1812, </pages> <month> Dec. </month> <year> 1991. </year>
Reference-contexts: In this paper we compare our delay distributions obtained via simulation with the worst case bound on the delay distribution predicted by three methods: (i) Cruz's method [1, 2] for computing delay bounds under FCFS multiplexing, (ii) Golestani's delay bounds using stop-and-go queueing <ref> [10, 11] </ref> and (iii) Parekh and Gallager's method [3, 4, 5] for computing delay bounds under weighted fair queueing (WFQ) [12, 13]. <p> For stop-and-go queueing, the delay along route R for any packet in an M H network, which we denote Q M H , satisfies 2HT + (H 1) C l L + T; (3) where 2HT is the maximum route-dependent queueing delay <ref> [10, 11] </ref> along R. <p> can be found in [22, 23]. 10 Upper bound on Queueing discipline queueing delay (ms) Weighted Fair Queueing (WFQ) [3, 4, 5, 12, 13] 81.3 Earliest Due Date (EDD) [24] a 81.3 Hierarchical Round Robin (HRR) [25] b 161.3 Jitter Earliest Due Date (J-EDD) [26, 27] c 161.3 Stop-and-go queueing <ref> [10, 11] </ref> 177.3 First-come first-served (FCFS) [1, 2] 622.5 a For EDD, we specify a delay bound of T ms for all sessions at each switch. b For HRR, we assume a frame size of T ms. c For J-EDD, the delay and jitter bounds are 2T ms for all sessions <p> Given this condition, it was possible to analytically compute deterministic delay bounds using the methods of <ref> [1, 2, 3, 4, 5, 10, 11] </ref>. In this section, we vary the link utilization by increasing the number of active sources. <p> For our network model, we conjecture that the FCFS worst case bound is not achievable. However the bounds for stop-and-go and WFQ are provably achievable to within an arbitrarily small tolerance <ref> [5, 11] </ref>. When using our reduced OFF period source, at high link utilizations the delay distributions for FCFS fall substantially below all bounds on delay. Thus, the delay distribution observed under FCFS is better than the delay guaranteed by stop-and-go and WFQ, and the best possible delay under stop-and-go. <p> Other researchers have examined loss as a performance metric [14, 33, 34, 35, 36]. Users may also find it useful to adjust other QOS parameters such as throughput [37] and delay jitter <ref> [11, 26] </ref>.
Reference: [12] <author> A. G. Greenberg and N. </author> <title> Madras, "Comparison of a fair queueing discipline to processor sharing," </title> <booktitle> in Performance '90: 14th International Symposium on Computer Performance Modelling, Measurement and Evaluation (P. </booktitle> <editor> J. B. King, I. Mitrani, and R. J. Pooley, eds.), </editor> <publisher> (Edinburgh, Scotland), </publisher> <pages> pp. 193-207, </pages> <publisher> IFIP WG7.3, North-Holland, Amsterdam, Holland, </publisher> <month> Sept. </month> <year> 1990. </year>
Reference-contexts: worst case bound on the delay distribution predicted by three methods: (i) Cruz's method [1, 2] for computing delay bounds under FCFS multiplexing, (ii) Golestani's delay bounds using stop-and-go queueing [10, 11] and (iii) Parekh and Gallager's method [3, 4, 5] for computing delay bounds under weighted fair queueing (WFQ) <ref> [12, 13] </ref>. Our results show that the point at which the tail of delay distributions becomes very small (i.e., on the order of 10 5 ) is often quite far from the worst case delay either guaranteed (under FCFS or WFQ) or enforced/created (under stop-and-go queueing). <p> Note also that stop-and-go and WFQ represent the extremes in terms of delay bounds, within this class of queueing disciplines. Comparisons of some of these queueing disciplines can be found in [22, 23]. 10 Upper bound on Queueing discipline queueing delay (ms) Weighted Fair Queueing (WFQ) <ref> [3, 4, 5, 12, 13] </ref> 81.3 Earliest Due Date (EDD) [24] a 81.3 Hierarchical Round Robin (HRR) [25] b 161.3 Jitter Earliest Due Date (J-EDD) [26, 27] c 161.3 Stop-and-go queueing [10, 11] 177.3 First-come first-served (FCFS) [1, 2] 622.5 a For EDD, we specify a delay bound of T ms
Reference: [13] <author> A. Demers, S. Keshav, and S. Shenker, </author> <title> "Analysis and simulation of a fair queueing algorithm," Internetworking: </title> <journal> Research and Experience, </journal> <volume> vol. 1, </volume> <pages> pp. 3-26, </pages> <month> Jan. </month> <year> 1990. </year>
Reference-contexts: worst case bound on the delay distribution predicted by three methods: (i) Cruz's method [1, 2] for computing delay bounds under FCFS multiplexing, (ii) Golestani's delay bounds using stop-and-go queueing [10, 11] and (iii) Parekh and Gallager's method [3, 4, 5] for computing delay bounds under weighted fair queueing (WFQ) <ref> [12, 13] </ref>. Our results show that the point at which the tail of delay distributions becomes very small (i.e., on the order of 10 5 ) is often quite far from the worst case delay either guaranteed (under FCFS or WFQ) or enforced/created (under stop-and-go queueing). <p> Note also that stop-and-go and WFQ represent the extremes in terms of delay bounds, within this class of queueing disciplines. Comparisons of some of these queueing disciplines can be found in [22, 23]. 10 Upper bound on Queueing discipline queueing delay (ms) Weighted Fair Queueing (WFQ) <ref> [3, 4, 5, 12, 13] </ref> 81.3 Earliest Due Date (EDD) [24] a 81.3 Hierarchical Round Robin (HRR) [25] b 161.3 Jitter Earliest Due Date (J-EDD) [26, 27] c 161.3 Stop-and-go queueing [10, 11] 177.3 First-come first-served (FCFS) [1, 2] 622.5 a For EDD, we specify a delay bound of T ms
Reference: [14] <author> R. Guerin, H. Ahmadi, and M. Naghshineh, </author> <title> "Equivalent capacity and its application to bandwidth allocation in high-speed networks," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 9, </volume> <pages> pp. 968-981, </pages> <month> Sept. </month> <year> 1991. </year>
Reference-contexts: We also compare FCFS delay distributions obtained by simulation with approximate stochastic bounds computed using the techniques in <ref> [14] </ref> and [8]. Again, our results indicate that these "bounds" are quite loose. <p> Rather than clip our data, we felt it more important to show the magnitude of low probability delays in this figure. Even though deterministic bounds are not computable for the delay distributions in figure 9, it is possible to approximate stochastic bounds for these distributions using techniques presented in <ref> [14] </ref> and [8]. Figure 10 compares an approximate bound on the end-to-end "virtual delay" tail distribution with the delay distribution obtained by simulation, at three different link utilizations. <p> Using these results, if an incoming call requires that 99.9% of packets have a delay less than 200 ms, the call can be accepted if the links along R are carrying 100 calls or less. procedure based on the equivalent capacity formulation of <ref> [14, 18] </ref>. In this approach, the traffic characteristics of a source are assumed to remain unchanged as it passes through the network. <p> We have focused on statistical and deterministic QOS in terms of delay in this paper, as has work presented in [24, 32]. Other researchers have examined loss as a performance metric <ref> [14, 33, 34, 35, 36] </ref>. Users may also find it useful to adjust other QOS parameters such as throughput [37] and delay jitter [11, 26].
Reference: [15] <author> J. Kurose, </author> <title> "Open issues and challenges in providing quality of service guarantees in high-speed networks," </title> <journal> ACM Computer Communication Review, </journal> <volume> vol. 23, </volume> <pages> pp. 6-15, </pages> <month> Jan. </month> <year> 1993. </year>
Reference-contexts: An alternate call admission procedure might be to monitor and measure the delays experienced and make call acceptance decisions based on the observed delays. Such an approach, termed an "observation-based" approach towards call admission <ref> [15] </ref>, was recently proposed in [16, 17]. Another call admission procedure might provide statistical QOS guarantees by approximating the aggregate bit rate of sessions, using their so-called "equivalent capacity"[14, 18].
Reference: [16] <author> S. Jamin, S. Shenker, L. Zhang, and D. D. Clark, </author> <title> "An admission control algorithm for predictive real-time service (extended abstract)," </title> <booktitle> in Proceedings of the Third International Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <address> (San Diego, CA), </address> <pages> pp. 308-314, </pages> <publisher> IEEE, </publisher> <month> Nov. </month> <year> 1992. </year>
Reference-contexts: An alternate call admission procedure might be to monitor and measure the delays experienced and make call acceptance decisions based on the observed delays. Such an approach, termed an "observation-based" approach towards call admission [15], was recently proposed in <ref> [16, 17] </ref>. Another call admission procedure might provide statistical QOS guarantees by approximating the aggregate bit rate of sessions, using their so-called "equivalent capacity"[14, 18]. <p> The differences are only up to a factor of six for a given value of end-to-end delay at low and moderate link utilizations. From a practical standpoint, this suggests that a call admission procedure which admits calls based on observed delays (e.g., <ref> [16, 17] </ref>) need only monitor the individual single-hop (local) delays in order to estimate the end-to-end delay distribution. 3.2 Delay Distributions for Standard Voice Source Recall that in the previous subsection, traffic intensity (equivalently, link utilization) was varied by decreasing the expected length of the sources' silence period. <p> This difference suggests that a so-called observation-based approach to providing QOS guarantees might be effectively used to provide QOS guarantees for soft real-time traffic. In <ref> [16, 31] </ref> the aut 28 hors describe measuring maximum delays over fixed intervals in time, and filtering these measurements using an exponential average.
Reference: [17] <author> T. E. Tedijanto and L. Gun, </author> <title> "Effectiveness of dynamic bandwidth management mechanisms in ATM networks," </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), </booktitle> <address> (San Francisco, CA), </address> <pages> pp. </pages> <address> 358-367 (3d.2), </address> <publisher> IEEE, </publisher> <month> Mar. </month> <year> 1993. </year>
Reference-contexts: An alternate call admission procedure might be to monitor and measure the delays experienced and make call acceptance decisions based on the observed delays. Such an approach, termed an "observation-based" approach towards call admission [15], was recently proposed in <ref> [16, 17] </ref>. Another call admission procedure might provide statistical QOS guarantees by approximating the aggregate bit rate of sessions, using their so-called "equivalent capacity"[14, 18]. <p> The differences are only up to a factor of six for a given value of end-to-end delay at low and moderate link utilizations. From a practical standpoint, this suggests that a call admission procedure which admits calls based on observed delays (e.g., <ref> [16, 17] </ref>) need only monitor the individual single-hop (local) delays in order to estimate the end-to-end delay distribution. 3.2 Delay Distributions for Standard Voice Source Recall that in the previous subsection, traffic intensity (equivalently, link utilization) was varied by decreasing the expected length of the sources' silence period.
Reference: [18] <author> R. Guerin and L. Gun, </author> <title> "A unified approach to bandwidth allocation and access control in fast packet-switched networks," </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), </booktitle> <volume> vol. </volume> <pages> 1, </pages> <address> (Florence, Italy), </address> <pages> pp. </pages> <address> 1-12 (1A.1), </address> <publisher> IEEE, </publisher> <month> May </month> <year> 1992. </year>
Reference-contexts: Using these results, if an incoming call requires that 99.9% of packets have a delay less than 200 ms, the call can be accepted if the links along R are carrying 100 calls or less. procedure based on the equivalent capacity formulation of <ref> [14, 18] </ref>. In this approach, the traffic characteristics of a source are assumed to remain unchanged as it passes through the network.
Reference: [19] <author> P. T. Brady, </author> <title> "A statistical analysis of on-off patterns in 16 conversations," </title> <journal> Bell System Technical Journal, </journal> <volume> vol. 47, </volume> <pages> pp. 73-91, </pages> <month> Jan. </month> <year> 1968. </year>
Reference-contexts: Note that choosing ff 1 = 352 ms and fi 1 = 650 ms gives a model used by other researchers for packetized voice encoded using ADPCM at 32 Kbps <ref> [19, 20, 21] </ref>. Hence, we refer to this model as the standard voice source model. The second way we vary link utilization is to fix ff 1 at 352 ms, and adjust the value of fi 1 .
Reference: [20] <author> K. Sriram and W. Whitt, </author> <title> "Characterizing superposition arrival processes in packet multiplexers for voice and data," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. SAC-4, </volume> <pages> pp. 833-846, </pages> <month> Sept. </month> <year> 1986. </year>
Reference-contexts: Note that choosing ff 1 = 352 ms and fi 1 = 650 ms gives a model used by other researchers for packetized voice encoded using ADPCM at 32 Kbps <ref> [19, 20, 21] </ref>. Hence, we refer to this model as the standard voice source model. The second way we vary link utilization is to fix ff 1 at 352 ms, and adjust the value of fi 1 . <p> Others have modeled cross traffic by a Poisson process [28], an MMPP [21], a Bernoulli process with batch arrivals [29], and the superposition of several interrupted Poisson processes [30]. As pointed out in <ref> [20] </ref> and [30], using a Poisson process to model cross traffic is inappropriate for future integrated services networks. This is because the traffic exhibits long term correlation, especially at high loads.
Reference: [21] <author> H. Heffes and D. M. Lucantoni, </author> <title> "A Markov modulated characterization of packetized voice and data traffic and related statistical multiplexer performance," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. SAC-4, </volume> <pages> pp. 856-868, </pages> <month> Sept. </month> <year> 1986. </year>
Reference-contexts: Note that choosing ff 1 = 352 ms and fi 1 = 650 ms gives a model used by other researchers for packetized voice encoded using ADPCM at 32 Kbps <ref> [19, 20, 21] </ref>. Hence, we refer to this model as the standard voice source model. The second way we vary link utilization is to fix ff 1 at 352 ms, and adjust the value of fi 1 . <p> Others have modeled cross traffic by a Poisson process [28], an MMPP <ref> [21] </ref>, a Bernoulli process with batch arrivals [29], and the superposition of several interrupted Poisson processes [30]. As pointed out in [20] and [30], using a Poisson process to model cross traffic is inappropriate for future integrated services networks.
Reference: [22] <author> H. Zhang and S. Keshav, </author> <title> "Comparison of rate-based service disciplines," </title> <booktitle> in Sigcomm '91 Symposium Communications Architectures and Protocols, </booktitle> <address> (Zurich, </address> <publisher> Switzer-land), </publisher> <pages> pp. 113-121, </pages> <publisher> ACM, </publisher> <month> Sept. </month> <year> 1991. </year> <month> 31 </month>
Reference-contexts: Note also that stop-and-go and WFQ represent the extremes in terms of delay bounds, within this class of queueing disciplines. Comparisons of some of these queueing disciplines can be found in <ref> [22, 23] </ref>. 10 Upper bound on Queueing discipline queueing delay (ms) Weighted Fair Queueing (WFQ) [3, 4, 5, 12, 13] 81.3 Earliest Due Date (EDD) [24] a 81.3 Hierarchical Round Robin (HRR) [25] b 161.3 Jitter Earliest Due Date (J-EDD) [26, 27] c 161.3 Stop-and-go queueing [10, 11] 177.3 First-come first-served
Reference: [23] <author> C. M. Aras, J. F. Kurose, D. S. Reeves, and H. Schulzrinne, </author> <title> "Real-time communi-cation in packet-switched networks," </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> vol. 82, </volume> <pages> pp. 122-139, </pages> <month> Jan. </month> <year> 1994. </year>
Reference-contexts: Note also that stop-and-go and WFQ represent the extremes in terms of delay bounds, within this class of queueing disciplines. Comparisons of some of these queueing disciplines can be found in <ref> [22, 23] </ref>. 10 Upper bound on Queueing discipline queueing delay (ms) Weighted Fair Queueing (WFQ) [3, 4, 5, 12, 13] 81.3 Earliest Due Date (EDD) [24] a 81.3 Hierarchical Round Robin (HRR) [25] b 161.3 Jitter Earliest Due Date (J-EDD) [26, 27] c 161.3 Stop-and-go queueing [10, 11] 177.3 First-come first-served
Reference: [24] <author> D. Ferrari and D. C. Verma, </author> <title> "A scheme for real-time channel establishment in wide-area networks," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 8, </volume> <pages> pp. 368-379, </pages> <month> Apr. </month> <year> 1990. </year>
Reference-contexts: Comparisons of some of these queueing disciplines can be found in [22, 23]. 10 Upper bound on Queueing discipline queueing delay (ms) Weighted Fair Queueing (WFQ) [3, 4, 5, 12, 13] 81.3 Earliest Due Date (EDD) <ref> [24] </ref> a 81.3 Hierarchical Round Robin (HRR) [25] b 161.3 Jitter Earliest Due Date (J-EDD) [26, 27] c 161.3 Stop-and-go queueing [10, 11] 177.3 First-come first-served (FCFS) [1, 2] 622.5 a For EDD, we specify a delay bound of T ms for all sessions at each switch. b For HRR, we <p> Statistical QOS guarantees allow a user to select between several grades of QOS, each with an associated probability that the QOS will be met during the call. We have focused on statistical and deterministic QOS in terms of delay in this paper, as has work presented in <ref> [24, 32] </ref>. Other researchers have examined loss as a performance metric [14, 33, 34, 35, 36]. Users may also find it useful to adjust other QOS parameters such as throughput [37] and delay jitter [11, 26].
Reference: [25] <author> C. R. Kalmanek, H. Kanakia, and S. Keshav, </author> <title> "Rate controlled servers for very high-speed networks," </title> <booktitle> in Proceedings of the Conference on Global Communications (GLOBECOM), </booktitle> <address> (San Diego, CA), </address> <pages> pp. </pages> <address> 12-20 (300.3), </address> <publisher> IEEE, </publisher> <month> Dec. </month> <year> 1990. </year>
Reference-contexts: Comparisons of some of these queueing disciplines can be found in [22, 23]. 10 Upper bound on Queueing discipline queueing delay (ms) Weighted Fair Queueing (WFQ) [3, 4, 5, 12, 13] 81.3 Earliest Due Date (EDD) [24] a 81.3 Hierarchical Round Robin (HRR) <ref> [25] </ref> b 161.3 Jitter Earliest Due Date (J-EDD) [26, 27] c 161.3 Stop-and-go queueing [10, 11] 177.3 First-come first-served (FCFS) [1, 2] 622.5 a For EDD, we specify a delay bound of T ms for all sessions at each switch. b For HRR, we assume a frame size of T ms.
Reference: [26] <author> D. C. Verma, H. Zhang, and D. Ferrari, </author> <title> "Delay jitter control for real-time communication in a packet switching network," </title> <booktitle> in Proceedings of Tricomm '91, </booktitle> <address> (Chapel Hill, NC), </address> <pages> pp. 35-43, </pages> <publisher> IEEE, </publisher> <month> Apr. </month> <year> 1991. </year>
Reference-contexts: of some of these queueing disciplines can be found in [22, 23]. 10 Upper bound on Queueing discipline queueing delay (ms) Weighted Fair Queueing (WFQ) [3, 4, 5, 12, 13] 81.3 Earliest Due Date (EDD) [24] a 81.3 Hierarchical Round Robin (HRR) [25] b 161.3 Jitter Earliest Due Date (J-EDD) <ref> [26, 27] </ref> c 161.3 Stop-and-go queueing [10, 11] 177.3 First-come first-served (FCFS) [1, 2] 622.5 a For EDD, we specify a delay bound of T ms for all sessions at each switch. b For HRR, we assume a frame size of T ms. c For J-EDD, the delay and jitter bounds <p> Other researchers have examined loss as a performance metric [14, 33, 34, 35, 36]. Users may also find it useful to adjust other QOS parameters such as throughput [37] and delay jitter <ref> [11, 26] </ref>.
Reference: [27] <author> D. Ferrari, </author> <title> "Distributed delay jitter control in packet-switching internetworks," </title> <journal> In-ternetworking: Research and Experience, </journal> <volume> vol. 4, </volume> <pages> pp. 1-20, </pages> <month> Jan. </month> <year> 1993. </year>
Reference-contexts: of some of these queueing disciplines can be found in [22, 23]. 10 Upper bound on Queueing discipline queueing delay (ms) Weighted Fair Queueing (WFQ) [3, 4, 5, 12, 13] 81.3 Earliest Due Date (EDD) [24] a 81.3 Hierarchical Round Robin (HRR) [25] b 161.3 Jitter Earliest Due Date (J-EDD) <ref> [26, 27] </ref> c 161.3 Stop-and-go queueing [10, 11] 177.3 First-come first-served (FCFS) [1, 2] 622.5 a For EDD, we specify a delay bound of T ms for all sessions at each switch. b For HRR, we assume a frame size of T ms. c For J-EDD, the delay and jitter bounds
Reference: [28] <author> D. Mitra, </author> <title> "Optimal design of windows for high speed data networks," </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), </booktitle> <address> (San Francisco, CA), </address> <pages> pp. 1156-1163, </pages> <publisher> IEEE, </publisher> <month> June </month> <year> 1990. </year>
Reference-contexts: Others have modeled cross traffic by a Poisson process <ref> [28] </ref>, an MMPP [21], a Bernoulli process with batch arrivals [29], and the superposition of several interrupted Poisson processes [30]. As pointed out in [20] and [30], using a Poisson process to model cross traffic is inappropriate for future integrated services networks.
Reference: [29] <author> M. Murata, Y. Oie, T. Suda, and H. Miyahara, </author> <title> "Analysis of a discrete-time single-server queue with bursty inputs for traffic control in ATM networks," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 8, </volume> <pages> pp. 447-458, </pages> <month> Apr. </month> <year> 1990. </year>
Reference-contexts: Others have modeled cross traffic by a Poisson process [28], an MMPP [21], a Bernoulli process with batch arrivals <ref> [29] </ref>, and the superposition of several interrupted Poisson processes [30]. As pointed out in [20] and [30], using a Poisson process to model cross traffic is inappropriate for future integrated services networks. This is because the traffic exhibits long term correlation, especially at high loads.
Reference: [30] <author> Y. Ohba, M. Murata, and H. Miyahara, </author> <title> "Analysis of interdeparture processes for bursty traffic in ATM networks," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 9, </volume> <pages> pp. 468-476, </pages> <month> Apr. </month> <year> 1991. </year>
Reference-contexts: Others have modeled cross traffic by a Poisson process [28], an MMPP [21], a Bernoulli process with batch arrivals [29], and the superposition of several interrupted Poisson processes <ref> [30] </ref>. As pointed out in [20] and [30], using a Poisson process to model cross traffic is inappropriate for future integrated services networks. This is because the traffic exhibits long term correlation, especially at high loads. <p> Others have modeled cross traffic by a Poisson process [28], an MMPP [21], a Bernoulli process with batch arrivals [29], and the superposition of several interrupted Poisson processes <ref> [30] </ref>. As pointed out in [20] and [30], using a Poisson process to model cross traffic is inappropriate for future integrated services networks. This is because the traffic exhibits long term correlation, especially at high loads.
Reference: [31] <author> D. D. Clark, S. Shenker, and L. Zhang, </author> <title> "Supporting real-time applications in an integrated services packet network: architecture and mechanism," </title> <booktitle> in SIGCOMM Symposium on Communications Architectures and Protocols, </booktitle> <address> (Baltimore, MD), </address> <pages> pp. 14-26, </pages> <publisher> ACM, </publisher> <month> Aug. </month> <year> 1992. </year>
Reference-contexts: This difference suggests that a so-called observation-based approach to providing QOS guarantees might be effectively used to provide QOS guarantees for soft real-time traffic. In <ref> [16, 31] </ref> the aut 28 hors describe measuring maximum delays over fixed intervals in time, and filtering these measurements using an exponential average.
Reference: [32] <author> G. M. Woodruff and R. Kositpaiboon, </author> <title> "Multimedia traffic management principles for guaranteed ATM network performance," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 8, </volume> <pages> pp. 437-446, </pages> <month> Apr. </month> <year> 1990. </year>
Reference-contexts: Statistical QOS guarantees allow a user to select between several grades of QOS, each with an associated probability that the QOS will be met during the call. We have focused on statistical and deterministic QOS in terms of delay in this paper, as has work presented in <ref> [24, 32] </ref>. Other researchers have examined loss as a performance metric [14, 33, 34, 35, 36]. Users may also find it useful to adjust other QOS parameters such as throughput [37] and delay jitter [11, 26].
Reference: [33] <author> T. Kamitake and T. Suda, </author> <title> "Evaluation of an admission control scheme for an ATM network considering fluctuations in cell loss rate," </title> <booktitle> in Proceedings of the Conference on Global Communications (GLOBECOM), </booktitle> <address> (Dallas, Texas), </address> <pages> pp. 1774-1780, </pages> <publisher> IEEE, </publisher> <month> Nov. </month> <year> 1989. </year>
Reference-contexts: We have focused on statistical and deterministic QOS in terms of delay in this paper, as has work presented in [24, 32]. Other researchers have examined loss as a performance metric <ref> [14, 33, 34, 35, 36] </ref>. Users may also find it useful to adjust other QOS parameters such as throughput [37] and delay jitter [11, 26].
Reference: [34] <author> C. Rasmussen and J. Sorensen, </author> <title> "A simple call acceptance procedure in an ATM network," </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> vol. 20, </volume> <pages> pp. 197-202, </pages> <month> Dec. </month> <year> 1990. </year> <booktitle> ITC Specialist Seminar, </booktitle> <month> 25-29 September </month> <year> 1989, </year> <institution> Adelaide, Australia. </institution> <month> 32 </month>
Reference-contexts: We have focused on statistical and deterministic QOS in terms of delay in this paper, as has work presented in [24, 32]. Other researchers have examined loss as a performance metric <ref> [14, 33, 34, 35, 36] </ref>. Users may also find it useful to adjust other QOS parameters such as throughput [37] and delay jitter [11, 26].
Reference: [35] <author> H. Saito and K. Shiomoto, </author> <title> "Dynamic call admission control in ATM networks," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 9, </volume> <pages> pp. 982-989, </pages> <month> Sept. </month> <year> 1991. </year>
Reference-contexts: We have focused on statistical and deterministic QOS in terms of delay in this paper, as has work presented in [24, 32]. Other researchers have examined loss as a performance metric <ref> [14, 33, 34, 35, 36] </ref>. Users may also find it useful to adjust other QOS parameters such as throughput [37] and delay jitter [11, 26].
Reference: [36] <author> A. I. Elwalid and D. Mitra, </author> <title> "Effective bandwidth of general markovian traffic sources and admission control of high-speed networks," </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> vol. 1, </volume> <pages> pp. 329-343, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: We have focused on statistical and deterministic QOS in terms of delay in this paper, as has work presented in [24, 32]. Other researchers have examined loss as a performance metric <ref> [14, 33, 34, 35, 36] </ref>. Users may also find it useful to adjust other QOS parameters such as throughput [37] and delay jitter [11, 26].
Reference: [37] <author> L. Zhang, "VirtualClock: </author> <title> A new traffic control algorithm for packet-switched networks," </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> vol. 9, </volume> <pages> pp. 101-124, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: Other researchers have examined loss as a performance metric [14, 33, 34, 35, 36]. Users may also find it useful to adjust other QOS parameters such as throughput <ref> [37] </ref> and delay jitter [11, 26].
Reference: [38] <author> D. Anick, D. Mitra, and M. M. Sondhi, </author> <title> "Stochastic theory of a data-handling system with multiple sources," </title> <journal> Bell System Technical Journal, </journal> <volume> vol. 61, </volume> <pages> pp. 1871-1894, </pages> <month> Oct. </month> <year> 1982. </year>
Reference: [39] <author> H. Schulzrinne, J. F. Kurose, and D. Towsley, </author> <title> "Congestion control for real-time traffic in high-speed networks," </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), </booktitle> <address> (San Francisco, CA), </address> <pages> pp. 543-550, </pages> <month> June </month> <year> 1990. </year>
Reference: [40] <author> R. Nagarajan, J. F. Kurose, and D. Towsley, </author> <title> "Allocation of local quality of service constraints to meet end-to-end requirements," </title> <booktitle> IFIP Transactions C-15, Modeling and Performance Evaluation of ATM Technology, </booktitle> <pages> pp. 98-118, </pages> <year> 1993. </year>
References-found: 40

