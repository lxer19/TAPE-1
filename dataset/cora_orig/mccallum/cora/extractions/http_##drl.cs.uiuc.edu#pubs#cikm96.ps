URL: http://drl.cs.uiuc.edu/pubs/cikm96.ps
Refering-URL: http://drl.cs.uiuc.edu/prototyping/
Root-URL: http://www.cs.uiuc.edu
Email: ching@cs.uiuc.edu  hughes@mitre.org  winslett@cs.uiuc.edu  
Title: A Model of Object Database Applications and Its Use in Cost Estimation  
Author: Neil Ching Eric Hughes Marianne Winslett 
Affiliation: Department of Computer Science University of Illinois at Urbana-Champaign  The MITRE Corporation  Department of Computer Science University of Illinois at Urbana-Champaign  
Abstract: This paper presents a new model of object database applications for use in performance modeling. Under our approach, the essential features of the application source code with respect to persistent data access are captured in a high-level graphical form, which is annotated with statistics representative of a typical application execution and with hints about expected patterns of locality in data access. The graph is then traversed while the cache contents at the application client are estimated for each node in the graph, eventually producing an estimate of disk page fetches and network messages for a page-server object database. The novel features of this approach, compared to the usual approach based on object reference traces, are its efficiency in performance modeling due to its compact representation of application execution, the ease with which it can be used to identify bottleneck areas in application code, and the ability to tune the accuracy of the application's representation so that bottleneck areas are modeled more precisely. In addition, our approach allows the software engineer to locate performance problems early in the design of the object database application, and easily estimate the effect of high-level changes in application code. 
Abstract-found: 1
Intro-found: 1
Reference: [BDH92] <author> V. Benzaken, C. Delobel and G. Harrus. </author> <title> Clustering Strategies in O 2 : An Overview. </title> <editor> In F. Bancilhon, C. Delobel and P. Kanel-lakis (eds.), </editor> <title> Building an Object-Oriented Database System: The Story of O 2 , Mor-gan Kaufmann, </title> <year> 1992. </year>
Reference-contexts: ODBMS performance improvement techniques are typically com-putationally space-intensive, as they capture and manipulate a complete trace of the references to persistent data generated by an application execution in order to make a performance estimate <ref> [TN92, BDH92, GK+93] </ref>. If many traces must be analyzed to get a picture of "typical" object behavior, this will further increase the cost of using the models.
Reference: [CDN93] <author> Michael Carey, David DeWitt, and Jeffrey Naughton. </author> <title> The OO7 Benchmark. </title> <booktitle> In Proc. SIGMOD, </booktitle> <pages> pages 12-21, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: A summary and conclusions are presented in Section 5. 2 Application Model As described in the previous section, the application model provides the basis for derivation of performance estimates. To illustrate its features, we use the Wis-consin OO7 benchmark <ref> [CDN93] </ref> as an example. This application is a suite of procedures designed to exercise various aspects of an ODBMS's functionality; we focus on two of them, GenDB and T1. GenDB creates a database resembling the collections of interconnected, highly-structured objects manipulated by ODBMS applications such as CAD or CASE software.
Reference: [Chi96] <author> N. Ching. </author> <title> Clustering in Object Databases Based on Application Behavior. </title> <type> MS Thesis, </type> <institution> University of Illinois at Urbana-Champaign, </institution> <year> 1996. </year>
Reference-contexts: These details can be found in [Hug96], and a formal statement of the semantics of our application model can be found in <ref> [Chi96] </ref>. 4 Experiment In this section, we consider the T1 traversal of OO7 running on a "medium" database, which is approximately 40 MB generated by GenDB.
Reference: [FST88] <author> S. Finkelstein, M. Schkolnick, and P. Tiberio. </author> <title> Physical Database Design for Relational Databases. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 13(1) </volume> <pages> 91-128, </pages> <month> March </month> <year> 1988. </year>
Reference-contexts: also 1 visit a large number of objects in a regular pattern, cost estimation of a query is similar in some ways to that of an iteration, and our approach may be helpful for query cost estimation if the execution plan of a query can be obtained at run time <ref> [FST88] </ref>. In this paper, we consider only explicitly iterative applications. Under our approach, an application program is represented by a collection of directed, connected, rooted multigraphs, or patterns.
Reference: [GK+93] <author> C. Gerlhof, A. Kemper, C. Kilger and G. Moerkotte, </author> <title> Partition-Based Clustering in Object Bases: From Theory to Practice. </title> <editor> In D. Lomet (ed.), </editor> <booktitle> Proceedings of the International Conference on Foundations of Data Organization and Algorithms, Lecture Notes 9 in Computer Science 730, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: ODBMS performance improvement techniques are typically com-putationally space-intensive, as they capture and manipulate a complete trace of the references to persistent data generated by an application execution in order to make a performance estimate <ref> [TN92, BDH92, GK+93] </ref>. If many traces must be analyzed to get a picture of "typical" object behavior, this will further increase the cost of using the models.
Reference: [Hug96] <author> E. Hughes. </author> <title> Performance Evaluation and Improvement of Object Database Applications. </title> <type> PhD Thesis, </type> <institution> University of Illinois at Urbana-Champaign, </institution> <note> in preparation, </note> <year> 1996. </year>
Reference-contexts: These details can be found in <ref> [Hug96] </ref>, and a formal statement of the semantics of our application model can be found in [Chi96]. 4 Experiment In this section, we consider the T1 traversal of OO7 running on a "medium" database, which is approximately 40 MB generated by GenDB.
Reference: [Obj92] <editor> ObjectStore Release 2.0 User Guide. </editor> <title> Object Design, </title> <publisher> Inc., </publisher> <year> 1992. </year>
Reference-contexts: We compare the estimated performance of OO7 to an actual implementation which uses ObjectStore, a page server ODBMS <ref> [Obj92] </ref>, with an 8 MB client page cache and 8 KB pages. Using the techniques described in the previous section, we estimate the number of pages fetched from the server on behalf of an execution of T1 to be 39,500 (three significant digits).
Reference: [SW93] <author> Connie U. Smith and Lloyd G. Williams. </author> <title> Software Performance Engineering: A Case Study Including Performance Comparison with Design Alternatives. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 19(7) </volume> <pages> 720-741, </pages> <month> July </month> <year> 1993. </year>
Reference-contexts: 1 Introduction Recently, software engineering has been expanded to include cost estimation so that performance problems can be corrected at an early stage of application design <ref> [SW93] </ref>.
Reference: [TN92] <author> Manolis M. Tsangaris and Jeffrey F. Naughton. </author> <title> On the Performance of Object Clustering Techniques. </title> <booktitle> In Proc. SIGMOD, </booktitle> <pages> pages 144-153. </pages> <publisher> ACM, </publisher> <year> 1992. </year>
Reference-contexts: ODBMS performance improvement techniques are typically com-putationally space-intensive, as they capture and manipulate a complete trace of the references to persistent data generated by an application execution in order to make a performance estimate <ref> [TN92, BDH92, GK+93] </ref>. If many traces must be analyzed to get a picture of "typical" object behavior, this will further increase the cost of using the models.
Reference: [Yao77] <author> S. Bing Yao. </author> <title> Approximating Block Accesses in Database Organizations. </title> <journal> Commun. ACM, </journal> <volume> 20(4) </volume> <pages> 260-261, </pages> <month> April </month> <year> 1977. </year> <month> 10 </month>
Reference-contexts: 1 Introduction Recently, software engineering has been expanded to include cost estimation so that performance problems can be corrected at an early stage of application design [SW93]. Although there is a long legacy of work in cost estimation for relational DBMSs (RDBMSs) <ref> [Yao77] </ref>, cost estimation of applications which use an object database management system (ODBMS) is limited in part by the lack of efficient and flexible performance models attuned to the navigational-style access and client-server architecture of ODBMSs.
References-found: 10

