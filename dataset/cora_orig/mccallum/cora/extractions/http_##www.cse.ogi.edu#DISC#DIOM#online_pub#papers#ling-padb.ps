URL: http://www.cse.ogi.edu/DISC/DIOM/online_pub/papers/ling-padb.ps
Refering-URL: http://www.cse.ogi.edu/~lingliu/CQ/publication.html
Root-URL: http://www.cse.ogi.edu
Email: email: lingliu@cs.ualberta.ca  email: calton@cse.ogi.edu  
Title: An Adaptive Object-oriented Approach to Integration and Access of Heterogeneous Information Sources  
Author: Ling Liu Calton Pu 
Keyword: Index Terms: Interoperability, Distributed data Management, Object-oriented Data Model, Intelligent Integration of Heterogeneous Information Sources, Query Mediation.  
Address: GSB 615, Edmonton, Alberta T6G 2H1 Canada  P.O.Box 91000 Portland, Oregon 97291-1000 USA  
Affiliation: Department of Computing Science University of Alberta  Dept. of Computer Science and Engineering Oregon Graduate Institute  
Abstract: A large-scale interoperable database system operating in a dynamic environment should provide Uniform access to heterogeneous information sources, Scalability to the growing number of information sources, Evolution and Composability of software and information sources, and Autonomy of participants, both information consumers and information producers. We refer to these set of properties as the USECA properties [30]. To address the research issues presented by such systems in a systematic manner, we introduce the Distributed Interoperable Object Model (DIOM). DIOM promotes an adaptive approach to interoperation via intelligent mediation [46, 47], aimed at enhancing the robustness and scalability of the services provided for integrating and accessing heterogeneous information sources. DIOM's main features include (1) the recursive construction and organization of information access through a network of application-specific mediators, (2) the explicit use of interface composition meta operations (such as specialization, generalization, aggregation, import and hide) to support the incremental design and construction of consumer's domain query model, (3) the deferment of semantic heterogeneity resolution to the query result assembly time instead of before or at the time of query formulation, and (4) the systematic development of the query mediation framework and the procedure of each query processing step from query routing, query decomposition, parallel access planning, query translation to query result assembly. To make DIOM concrete, we outline the DIOM-based information mediation architecture, which includes important auxiliary services such as domain-specific metadata library and catalog functions, object linking databases, and associated query services. Several practical examples and application scenarios illustrate the flavor of DIOM query mediation framework and the usefulness of DIOM in multi-database query processing. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Ahmed, P. Smedt, W. Du, W. Kent, M. Ketabchi, W. Litwin, and A. Raffi. </author> <title> The pegasus heterogeneous multidatabase system. </title> <journal> IEEE Computer Magazine, </journal> <volume> 24(12) </volume> <pages> 19-27, </pages> <month> December </month> <year> 1991. </year>
Reference-contexts: The mapping from each local schema to the global schema is often 32 expressed in a common SQL-like language, such as HOSQL in the Pegasus system <ref> [1] </ref> or SQL/M in the UniSQL/M system [24]. Although the enforcement of a single global schema through data integration yields full transparency for uniform access, component databases have much restricted autonomy, scalability and their evolution becomes difficult.
Reference: [2] <author> Y. Arens and et al. </author> <title> Retrieving and integrating data from multiple information sources. </title> <journal> International Journal of Intelligent and Cooperative Information Systems, </journal> <volume> 2(2) </volume> <pages> 127-158, </pages> <year> 1993. </year>
Reference-contexts: Similarly, the Intelligent Agent Integration at University of Maryland at Baltimore County uses the Knowledge Query and Manipulation Language (KQML) to integrate heterogeneous databases. The SIMS project <ref> [3, 2] </ref> uses the LOOM knowledge representation system as the data model and query language to implement the agent-based integration.
Reference: [3] <author> Y. Arens and C. Knoblock. </author> <title> Planning and reformulating queries for semantically-modeled multidatabase systems. </title> <booktitle> In Proceedings of the first International Conference on Knowledge and Information Management, </booktitle> <year> 1992. </year>
Reference-contexts: Similarly, the Intelligent Agent Integration at University of Maryland at Baltimore County uses the Knowledge Query and Manipulation Language (KQML) to integrate heterogeneous databases. The SIMS project <ref> [3, 2] </ref> uses the LOOM knowledge representation system as the data model and query language to implement the agent-based integration.
Reference: [4] <author> K. Bath. </author> <note> What is Oraperl? http://www.bf.rmit.edu.au/ orafaq/perlish.html#oraperl, </note> <year> 1995. </year>
Reference-contexts: The first demonstration package [27, 26] is implemented as a WWW application. All the components and its interface functions are created using HTML [13] and Perl CGI-scripts [35, 44]. Linking to the underlying data sources and metadata library 31 databases is implemented with Oraperl <ref> [4] </ref>. Components of the prototype system interact via HTTP [16] protocol, a popular protocol that provides good flexibility in types of data to be sent or received (both text and binary).
Reference: [5] <author> E. Bertino, M. Negri, G. Pelagatti, and L. Sbattella. </author> <title> Applications of object-oriented technology to integration of heterogeneous database systems. Distributed and Parallel Databases, </title> <type> 2(4), </type> <year> 1994. </year>
Reference-contexts: Another related field is the application of object-oriented technology to the integration of heterogeneous database systems <ref> [5, 39] </ref>. A survey by Pitoura, Bukhres, and Elmagarmid [39] presents a concrete analysis and categorization of a number of ways that object-oriented technology may influence the design and implementation of multidatabase systems.
Reference: [6] <author> M. Betz. </author> <title> Interoperable objects: laying the foundation for distributed object computing. Dr. Dobb's Journal: Software Tools for Professional Programmer, </title> <month> October </month> <year> 1994. </year>
Reference-contexts: among networks of mediators more easily scalable to the ever growing number of information sources. 3 The Distributed Interoperable Object Model Distributed interoperable objects are objects that support a level of interoperability beyond the traditional object computing boundaries imposed by programming languages, data models, process address space, and network interface <ref> [6] </ref>. The abstractions of distributed interoperable objects are captured in the Distributed Interoperable Object Model (DIOM). Rather than inventing yet another object-oriented model, DIOM extends the ODMG ODL [10] in a significant way using reflection concepts [23, 33].
Reference: [7] <author> C. M. Bowman, P. B. Danzig, D. R. Hardy, U. Manber, M. F. Schwartz, , and D. P. Wessels. Harvest: </author> <title> A scalable, customizable discovery and access system. </title> <type> Technical Report CU-CS-732-94, </type> <institution> Department of Computer Science, University of Colorado, </institution> <month> March </month> <year> 1995. </year> <note> http://newbruno.cs.colorado.edu/harvest/papers.html. </note>
Reference-contexts: Currently we have two instances of such a wrapper: Yahoo [49] wrapper and Harvest <ref> [7] </ref> wrapper. The rest of the components in our demo system, such as the expert query browser, the query trace function, and the query decomposition module, are currently simulated.
Reference: [8] <author> L. Cardelli and P. Wegner. </author> <title> On understanding types, data abstraction, and polymorphism. </title> <journal> ACM Computing Surveys, </journal> <volume> 17(4):471, </volume> <month> December </month> <year> 1985. </year>
Reference-contexts: As a result, the operations defined in the component interfaces can be invoked via the container's interface. The aggregation meta operation is a useful facility for implementing behavioral composition [28] and ad-hoc polymorphism <ref> [8] </ref> based on coercion of operations. Recall the Claim Folder example given in Section 3.1.
Reference: [9] <author> M. Carey, L. Haas, and P. S. et al. </author> <title> Towards heterogeneous multimedia information systems: the garlic approach. </title> <type> In Technical Report, </type> <institution> IBM Almaden Research Center, </institution> <year> 1994. </year>
Reference-contexts: Another approach, called the intelligent information integration (I 3 ) mediation [45, 48] can be seen as a generic system architecture for information integration. Several projects are currently undergoing to adapt and extend this architecture with different emphases. Examples include the Garlic project at IBM Almaden Research Center <ref> [9] </ref>, which targets at developing a system and tools for the management of large quantities of heterogeneous multimedia information, the TSIMMIS [18] at Stanford, which implements the mediators-based information integration architecture through a simple object exchange model. Another example is the Context Exchange project at MIT [19, 43].
Reference: [10] <author> R. Cattell and et al. </author> <title> The Object Database Standard: ODMG-93 (Release 1.1). </title> <publisher> Morgan Kaufmann, </publisher> <year> 1994. </year>
Reference-contexts: Our main contribution in this paper is the development of a Distributed Interoperable Objects Model (DIOM) to promote the USECA properties in large-scale interoperable database systems. The DIOM proposal presents an extension to the ODMG-93 object model <ref> [10] </ref>. The main idea is to incorporate system-wide scalability and evolution support as well as component composability into an intelligent interoperation framework. To deal with both the heterogeneity issues and the exponential growth of the available information, scalability and extensibility become very critical. <p> The abstractions of distributed interoperable objects are captured in the Distributed Interoperable Object Model (DIOM). Rather than inventing yet another object-oriented model, DIOM extends the ODMG ODL <ref> [10] </ref> in a significant way using reflection concepts [23, 33]. DIOM introduces base interface and compound interface concepts to separate the interface descriptions for information producers' source models from the interface descriptions for information consumers' domain query models (personal views). <p> In the rest of the paper, we assume that the readers are familiar with the ODMG-93 ODL and OQL standard <ref> [10] </ref>. Thus we only discuss the distinct features of DIOM design and development, which are currently not provided in the ODMG object model according to the ODMG-93 proposal [10]. Consider a medical insurance application. <p> In the rest of the paper, we assume that the readers are familiar with the ODMG-93 ODL and OQL standard <ref> [10] </ref>. Thus we only discuss the distinct features of DIOM design and development, which are currently not provided in the ODMG object model according to the ODMG-93 proposal [10]. Consider a medical insurance application. <p> It requires the definition of a common object model and a common object query language. Recent activities in the OMG [36] and the ODMG standard <ref> [10] </ref>, which extends the OMG object model to the database interoperability, are the important milestones for the distributed object management. Another approach, called the intelligent information integration (I 3 ) mediation [45, 48] can be seen as a generic system architecture for information integration.
Reference: [11] <author> Y. Chang, L. Raschid, and B. Dorr. </author> <title> Transforming queries from a relational schema to an equivalent object schema: a prototype based on f-logic. </title> <booktitle> In Proceedings of the International Symposium on Methodologies in Information Systems (ISMIS), </booktitle> <year> 1994. </year>
Reference-contexts: The SIMS project [3, 2] uses the LOOM knowledge representation system as the data model and query language to implement the agent-based integration. Another example is the information mediation project at University of Maryland <ref> [11, 17] </ref>, which integrates heterogeneous data and knowledge bases using multiple F-logic object schema, via the KIF knowledge interchange logic. Among these projects, very few have addressed all the requirements of the USECA properties in a systematic manner, which is the goal of our approach.
Reference: [12] <author> U. Dayal. </author> <title> Query processing in a multidtatabase system. Query Processing in Database Systems, </title> <year> 1985. </year>
Reference-contexts: As a result, new applications may define their interoperation interfaces by refinement of existing interfaces through interface aggregation, interface generalization, or import and hide meta operations. New information sources can be seamlessly incorporated into the existing consumer's query model. Thanks for the fact that distributed query processing and optimization <ref> [12, 25] </ref>, and extended transaction management [14] have so far been explored quite extensively in the context of classic distributed databases [37], federated databases [15, 42], and distributed object management [34, 38], in this paper we focus only on how the USECA properties should be understood and strengthened in the DIOM
Reference: [13] <author> J. December and M. Ginsburg. </author> <title> HTML & CGI Unleashed. </title> <publisher> Sams.Net Publishing, </publisher> <month> Oct. </month> <year> 1995. </year>
Reference-contexts: The first demonstration package [27, 26] is implemented as a WWW application. All the components and its interface functions are created using HTML <ref> [13] </ref> and Perl CGI-scripts [35, 44]. Linking to the underlying data sources and metadata library 31 databases is implemented with Oraperl [4].
Reference: [14] <author> A. Elmagarmid. </author> <title> Database Transaction Models for Advanced Applications. </title> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, Calif.), </address> <year> 1992. </year>
Reference-contexts: New information sources can be seamlessly incorporated into the existing consumer's query model. Thanks for the fact that distributed query processing and optimization [12, 25], and extended transaction management <ref> [14] </ref> have so far been explored quite extensively in the context of classic distributed databases [37], federated databases [15, 42], and distributed object management [34, 38], in this paper we focus only on how the USECA properties should be understood and strengthened in the DIOM environment and what are the important <p> Comparing with the framework given in [39], the current DIOM development has not yet incorporated the update issues into the architecture. However, we believe that the techniques proposed in multi-level and extended transaction management <ref> [14] </ref> can easily be applied to the DIOM environment. 7 Conclusion We have captured the requirements for integration and access of heterogeneous information sources in large-scale interoperable system as the USECA properties: Uniform access to heterogeneous information sources, Scalability to the growing number of information sources, Evolution and Composability of software
Reference: [15] <author> A. Elmagarmid and C. Pu. </author> <title> Special Issue on Heterogeneous Databases. </title> <journal> ACM Computing Surveys, </journal> <volume> Vol. 22, No. 3, </volume> <month> September </month> <year> 1990. </year>
Reference-contexts: New information sources can be seamlessly incorporated into the existing consumer's query model. Thanks for the fact that distributed query processing and optimization [12, 25], and extended transaction management [14] have so far been explored quite extensively in the context of classic distributed databases [37], federated databases <ref> [15, 42] </ref>, and distributed object management [34, 38], in this paper we focus only on how the USECA properties should be understood and strengthened in the DIOM environment and what are the important adaptive mechanisms in the design and development of the DIOM interface description language (IDL) and interface query language
Reference: [16] <author> R. Fielding and H. Frystyk. </author> <note> Hypertext transfer protocol - HTTP/1.0. http://www.w3.org/pub/WWW/Protocols/HTTP1.0/draft-ietf-http-spec.html, february 1996. </note>
Reference-contexts: All the components and its interface functions are created using HTML [13] and Perl CGI-scripts [35, 44]. Linking to the underlying data sources and metadata library 31 databases is implemented with Oraperl [4]. Components of the prototype system interact via HTTP <ref> [16] </ref> protocol, a popular protocol that provides good flexibility in types of data to be sent or received (both text and binary).
Reference: [17] <author> D. Florescu, L. Raschid, and P. Valduriez. </author> <title> Using heterogeneous equivalences for query rewriting in mul-tidatabase systems. </title> <booktitle> In Proceedings of the International Conference on Cooperative Information Systems (CoopIS), </booktitle> <year> 1995. </year> <month> 36 </month>
Reference-contexts: The SIMS project [3, 2] uses the LOOM knowledge representation system as the data model and query language to implement the agent-based integration. Another example is the information mediation project at University of Maryland <ref> [11, 17] </ref>, which integrates heterogeneous data and knowledge bases using multiple F-logic object schema, via the KIF knowledge interchange logic. Among these projects, very few have addressed all the requirements of the USECA properties in a systematic manner, which is the goal of our approach.
Reference: [18] <author> H. Garcia-Molina and et al. </author> <title> The tsimmis approach to mediation: data models and languages (extended abstract). </title> <type> In Technical Report, </type> <institution> Stanford University, </institution> <year> 1994. </year>
Reference-contexts: Several projects are currently undergoing to adapt and extend this architecture with different emphases. Examples include the Garlic project at IBM Almaden Research Center [9], which targets at developing a system and tools for the management of large quantities of heterogeneous multimedia information, the TSIMMIS <ref> [18] </ref> at Stanford, which implements the mediators-based information integration architecture through a simple object exchange model. Another example is the Context Exchange project at MIT [19, 43].
Reference: [19] <author> C. Goh, S. Madnick, and M. Siegel. </author> <title> Context interchange: overcoming the challenges of large-scale interoper-able database systems in a dynamic environment. </title> <booktitle> In Proceedings of International Conference on Information and Knowledge Management, </booktitle> <pages> pages 337-346, </pages> <year> 1994. </year>
Reference-contexts: Another example is the Context Exchange project at MIT <ref> [19, 43] </ref>. It uses context knowledge in a context mediator to explicitly define the meaning of information provided by a source and that required by a receiver.
Reference: [20] <author> R. Hull and R. King. </author> <title> Reference architecture for the intelligent integration of information (version 1.0.1). </title> <address> http://isse.gmu.edu/I3 Arch/index.html, </address> <month> May </month> <year> 1995. </year>
Reference-contexts: Component information sources may make changes without requiring consent from mediators. However, an information source must notify the DIOM object server any change made to its export schema (e.g., logical structure, naming, and semantic constraints). 5 2.2 The Diorama Implementation Architecture of information reference framework <ref> [20] </ref> using the DIOM approach.
Reference: [21] <author> W. Kent, R. Ahmed, J. Albert, M. Ketabchio, and M. Shan. </author> <title> Object identification in multidatabase systems. </title> <booktitle> In Proc. of IFIP DS-5 Working Conference on Semantics on Interoperable Systems. </booktitle> <publisher> Elsevier, </publisher> <year> 1993. </year>
Reference-contexts: framework that allows new information sources to be seamlessly incorporated into the existing query mediator. 3.3 Object Identification Similar to the object-oriented models, the object identity (OID) in DIOM is a property of an object that provides a means to uniquely denote the object regardless of its state or behavior <ref> [21, 22] </ref>. The object identity has two dimensions which influence the degree of support of identity. The scope dimension refers to the scope within which uniqueness can be guaranteed. The temporal dimension expresses the duration in which the OID of an object remains immutable.
Reference: [22] <author> S. Khoshafian and G. Copeland. </author> <title> Object identity. </title> <booktitle> In Object-Oriented Programming Systems, Languages and Applications Conference, in Special Issue of SIGPLAN Notices, </booktitle> <pages> pages 406-416. </pages> <publisher> ACM, </publisher> <year> 1986. </year>
Reference-contexts: framework that allows new information sources to be seamlessly incorporated into the existing query mediator. 3.3 Object Identification Similar to the object-oriented models, the object identity (OID) in DIOM is a property of an object that provides a means to uniquely denote the object regardless of its state or behavior <ref> [21, 22] </ref>. The object identity has two dimensions which influence the degree of support of identity. The scope dimension refers to the scope within which uniqueness can be guaranteed. The temporal dimension expresses the duration in which the OID of an object remains immutable.
Reference: [23] <author> G. Kiczales. </author> <title> Towards a new model of abstraction in software engineer. </title> <booktitle> In Proceedings of the IMSA'92 workshop on Reflection and Meta-level Architecture, </booktitle> <address> http://www.xerox.com/PARC/spl/eca/oi.html, 1992. </address>
Reference-contexts: The abstractions of distributed interoperable objects are captured in the Distributed Interoperable Object Model (DIOM). Rather than inventing yet another object-oriented model, DIOM extends the ODMG ODL [10] in a significant way using reflection concepts <ref> [23, 33] </ref>. DIOM introduces base interface and compound interface concepts to separate the interface descriptions for information producers' source models from the interface descriptions for information consumers' domain query models (personal views). <p> that can be used to generate wrapper instances for various types of data repositories. 6 Related Work Since there are many research projects working towards effective support for interoperability across software and applications systems, we summarize here the main two distinctive features of DIOM: (1) the adaptation of reflective concept <ref> [23, 33] </ref> to distinguish and support interface composition through meta operations; and (2) the augmentation of existing standards such as CORBA and ODMG93 with new ideas such as separation of base and compound interfaces and interface composition meta operations.
Reference: [24] <author> W. Kim and et al. </author> <title> On resolving semantic heterogeneity in multidatabase systems. Distributed and Parallel Databases, </title> <type> 1(3), </type> <year> 1993. </year>
Reference-contexts: The mapping from each local schema to the global schema is often 32 expressed in a common SQL-like language, such as HOSQL in the Pegasus system [1] or SQL/M in the UniSQL/M system <ref> [24] </ref>. Although the enforcement of a single global schema through data integration yields full transparency for uniform access, component databases have much restricted autonomy, scalability and their evolution becomes difficult.
Reference: [25] <author> W. Kim, D. Reiner, and D. Batory. </author> <title> Query Processing in Database Systems. </title> <publisher> Springer-Verlag, </publisher> <year> 1985. </year>
Reference-contexts: As a result, new applications may define their interoperation interfaces by refinement of existing interfaces through interface aggregation, interface generalization, or import and hide meta operations. New information sources can be seamlessly incorporated into the existing consumer's query model. Thanks for the fact that distributed query processing and optimization <ref> [12, 25] </ref>, and extended transaction management [14] have so far been explored quite extensively in the context of classic distributed databases [37], federated databases [15, 42], and distributed object management [34, 38], in this paper we focus only on how the USECA properties should be understood and strengthened in the DIOM
Reference: [26] <author> Y. Lee. </author> <title> A prototype implementation for the diom interoperable system. </title> <booktitle> In demo at the International Forum on Research and Technology Advances in Digital Libraries (ADL'96), </booktitle> <address> Washington D.C., </address> <month> May 13-15 </month> <year> 1996. </year>
Reference-contexts: Readers may refer to [29] for more detail. 5 Implementation Considerations A prototype of the DIOM information mediation methodology is currently being constructed with the Oracle 7.0 as the back-end service repository support. The first demonstration package <ref> [27, 26] </ref> is implemented as a WWW application. All the components and its interface functions are created using HTML [13] and Perl CGI-scripts [35, 44]. Linking to the underlying data sources and metadata library 31 databases is implemented with Oraperl [4].
Reference: [27] <author> Y. Lee. </author> <title> Rainbow: A prototype of the diom interoperable system. MSc. </title> <type> Thesis, </type> <institution> Department of Computer Science, University of Alberta, </institution> <note> A demo version of the prototype is available at http://ugweb.cs.ualberta.ca/ diom, </note> <month> July, </month> <year> 1996. </year>
Reference-contexts: Readers may refer to [29] for more detail. 5 Implementation Considerations A prototype of the DIOM information mediation methodology is currently being constructed with the Oracle 7.0 as the back-end service repository support. The first demonstration package <ref> [27, 26] </ref> is implemented as a WWW application. All the components and its interface functions are created using HTML [13] and Perl CGI-scripts [35, 44]. Linking to the underlying data sources and metadata library 31 databases is implemented with Oraperl [4].
Reference: [28] <author> L. Liu. </author> <title> A recursive object algebra based on aggregation abstraction for complex objects. </title> <journal> Journal of Data and Knowledge Engineering, </journal> <volume> 11(1) </volume> <pages> 21-60, </pages> <year> 1993. </year>
Reference-contexts: The meta operations aggregation, generalization, and specialization, are derived from abstractions of the same name <ref> [28] </ref> that compose and augment interfaces. The meta operation import/hide is introduced to facilitate the construction of base interfaces. <p> As a result, the operations defined in the component interfaces can be invoked via the container's interface. The aggregation meta operation is a useful facility for implementing behavioral composition <ref> [28] </ref> and ad-hoc polymorphism [8] based on coercion of operations. Recall the Claim Folder example given in Section 3.1. <p> Insur-Agreement I WHERE I-&gt;start-date &gt; 1995; The following compound interface description will be generated as the result type of this query: CREATE INTERFACE QueryResult&lt;Q2&gt; ( extent ResultObjects&lt;Q2&gt; ) - AGGREGATION OF ClaimFolder, Insur-Agreement; ATTRIBUTES String Insur-Agreement-&gt;patient-name, String Insur-Agreement-&gt;insur-no, Date Insur-Agreement-&gt;start-date, Set&lt;Image&gt; ClaimFolder-&gt;X-ray-pictures; - We use the basic techniques described in <ref> [28] </ref> as the formal foundation for automatic generation of a query result type for each DIOM IQL query expression. 4.2 Query Mediation Process: An Overview The main task of a distributed query mediation manager is to coordinate the communication and distribution of the processing of information consumer's query requests among the <p> An aggregation-based join refers to an object join which maintains the nested aggregation structure while traversing through the objects following the aggregation path <ref> [28] </ref>.
Reference: [29] <author> L. Liu and C. Pu. </author> <title> Customizable information gathering across heterogeneous information sources. </title> <type> Technical report, </type> <institution> Department of Computer Science, University of Alberta, </institution> <month> Dec. </month> <year> 1995. </year>
Reference-contexts: Since this paper is targeted at the design of IDL interface composition meta operations and their applications to the access of heterogeneous information sources through DIOM IQL queries. We omit the details on query processing strategies and techniques used for each step <ref> [32, 29] </ref>. <p> These subqueries can be either independent of or dependent upon each other. The procedure of target split consists of the following steps: (a) For each compound interface involved in the query, * if it is defined in terms of aggregation abstraction, then an aggregation-based join <ref> [29] </ref> over the component interfaces is used to replace this compound interface; * if the compound interface is defined in terms of generalization abstraction, then a distributed-union (D-union) [29] over the specialized interfaces is used to replace this compound interface. (b) Move the information sources specified in the target clause downward <p> For each compound interface involved in the query, * if it is defined in terms of aggregation abstraction, then an aggregation-based join <ref> [29] </ref> over the component interfaces is used to replace this compound interface; * if the compound interface is defined in terms of generalization abstraction, then a distributed-union (D-union) [29] over the specialized interfaces is used to replace this compound interface. (b) Move the information sources specified in the target clause downward and closer to the leaves of the query tree. <p> The techniques we have developed include source attachment, scale attachment, alternation attachment, access path attachment, and absent attribute specification. Readers may refer to <ref> [29] </ref> for more detail. 5 Implementation Considerations A prototype of the DIOM information mediation methodology is currently being constructed with the Oracle 7.0 as the back-end service repository support. The first demonstration package [27, 26] is implemented as a WWW application. <p> We have made significant progress towards the second phase of the DIOM prototype, which will focus on three main aspects: (1) the creation of consumer's profile, the metadata catalog management, described in <ref> [29, 31] </ref>, and the producers' profile organization; (2) the realization of the query decomposition algorithm, described in [32] and query assembly operations based on consumer's profile, producers' registration data, and domain-specific ontology or thesaurus; and (3) the algorithms for generating optimized parallel access plans.
Reference: [30] <author> L. Liu and C. Pu. </author> <title> The distributed interoperable object model and its application to large-scale interop-erable database systems. </title> <booktitle> In ACM International Conference on Information and Knowledge Management (CIKM'95), </booktitle> <address> Baltimore, Maryland, USA, </address> <month> November </month> <year> 1995. </year>
Reference-contexts: We have captured the requirements of these systems as the USECA properties <ref> [30] </ref>: Uniform access to heterogeneous information sources, Scalability to the growing number of information sources, Evolution and Composability of software and information sources, and Autonomy of participants, both information consumers and information producers. <p> Mediators in DIOM are application-specific. Each mediator consists of a consumer's domain model and many information producer's source models and are described in terms of the DIOM interface definition language (DIOM IDL) <ref> [30] </ref>. The consumer's domain model specifies the querying interests of the consumer and the preferred query result representation. The producer's source models describe the information sources in terms of DIOM internal object representation generated by the DIOM interface manager.
Reference: [31] <author> L. Liu and C. Pu. </author> <title> Metadata in the interoperation of heterogeneous data sources. </title> <booktitle> In Proceedings of the First IEEE Metadata Conference, </booktitle> <address> NOAA Auditorium, Silver Spring, Maryland, </address> <month> April 16 - 18 </month> <year> 1996. </year>
Reference-contexts: We have made significant progress towards the second phase of the DIOM prototype, which will focus on three main aspects: (1) the creation of consumer's profile, the metadata catalog management, described in <ref> [29, 31] </ref>, and the producers' profile organization; (2) the realization of the query decomposition algorithm, described in [32] and query assembly operations based on consumer's profile, producers' registration data, and domain-specific ontology or thesaurus; and (3) the algorithms for generating optimized parallel access plans.
Reference: [32] <author> L. Liu, C. Pu, and Y. Lee. </author> <title> An adaptive approach to query mediation across heterogeneous databases. </title> <booktitle> In Proceedings of the International Conference on Coopertive Information Systems, </booktitle> <address> Brussels, </address> <month> June 19-21 </month> <year> 1996. </year>
Reference-contexts: Since this paper is targeted at the design of IDL interface composition meta operations and their applications to the access of heterogeneous information sources through DIOM IQL queries. We omit the details on query processing strategies and techniques used for each step <ref> [32, 29] </ref>. <p> We have made significant progress towards the second phase of the DIOM prototype, which will focus on three main aspects: (1) the creation of consumer's profile, the metadata catalog management, described in [29, 31], and the producers' profile organization; (2) the realization of the query decomposition algorithm, described in <ref> [32] </ref> and query assembly operations based on consumer's profile, producers' registration data, and domain-specific ontology or thesaurus; and (3) the algorithms for generating optimized parallel access plans.
Reference: [33] <author> P. Maes. </author> <title> Concepts and experiments in computational reflection. </title> <booktitle> In Object-Oriented Programming Systems, Languages and Applications Conference, in Special Issue of SIGPLAN Notices, </booktitle> <month> Oct. </month> <year> 1987. </year>
Reference-contexts: The abstractions of distributed interoperable objects are captured in the Distributed Interoperable Object Model (DIOM). Rather than inventing yet another object-oriented model, DIOM extends the ODMG ODL [10] in a significant way using reflection concepts <ref> [23, 33] </ref>. DIOM introduces base interface and compound interface concepts to separate the interface descriptions for information producers' source models from the interface descriptions for information consumers' domain query models (personal views). <p> that can be used to generate wrapper instances for various types of data repositories. 6 Related Work Since there are many research projects working towards effective support for interoperability across software and applications systems, we summarize here the main two distinctive features of DIOM: (1) the adaptation of reflective concept <ref> [23, 33] </ref> to distinguish and support interface composition through meta operations; and (2) the augmentation of existing standards such as CORBA and ODMG93 with new ideas such as separation of base and compound interfaces and interface composition meta operations.
Reference: [34] <editor> F. Manola and et al. </editor> <title> Distributed object management. </title> <journal> International Journal of Intelligent and Cooperative Information Systems, </journal> <volume> 1(1), </volume> <month> March </month> <year> 1992. </year>
Reference-contexts: Thanks for the fact that distributed query processing and optimization [12, 25], and extended transaction management [14] have so far been explored quite extensively in the context of classic distributed databases [37], federated databases [15, 42], and distributed object management <ref> [34, 38] </ref>, in this paper we focus only on how the USECA properties should be understood and strengthened in the DIOM environment and what are the important adaptive mechanisms in the design and development of the DIOM interface description language (IDL) and interface query language (IQL), so that a multidatabase system <p> The heterogeneity problems are resolved at the schema integration stage. This approach cannot scale well when new sources need to be added into an existing multidatabase system. Also the component schemas cannot evolve without the consent from the integrated schema. The distributed object management approach <ref> [34, 38] </ref> generalizes the federated approach by modeling heterogeneous databases of different levels of granularity as objects in a distributed object space. It requires the definition of a common object model and a common object query language.
Reference: [35] <author> NCSA HTTPd Development Team. </author> <title> The common gateway interface. </title> <note> http://hoohoo.ncsa.uiuc.edu/cgi/overview.html. 37 </note>
Reference-contexts: The first demonstration package [27, 26] is implemented as a WWW application. All the components and its interface functions are created using HTML [13] and Perl CGI-scripts <ref> [35, 44] </ref>. Linking to the underlying data sources and metadata library 31 databases is implemented with Oraperl [4]. Components of the prototype system interact via HTTP [16] protocol, a popular protocol that provides good flexibility in types of data to be sent or received (both text and binary).
Reference: [36] <author> OMG. </author> <title> The Common Object Request Broker: Architecture and specification. Object Management Group, Object Request Broker Task Force, </title> <year> 1993. </year>
Reference-contexts: The distributed object management approach [34, 38] generalizes the federated approach by modeling heterogeneous databases of different levels of granularity as objects in a distributed object space. It requires the definition of a common object model and a common object query language. Recent activities in the OMG <ref> [36] </ref> and the ODMG standard [10], which extends the OMG object model to the database interoperability, are the important milestones for the distributed object management. Another approach, called the intelligent information integration (I 3 ) mediation [45, 48] can be seen as a generic system architecture for information integration. <p> In addition, a number of proposals have competed as the basic enabling technologies for implementing interoperable objects in distributed and dynamic object computing environments. Examples include Microsoft's Object Linking and Embedding (OLE), IBM's System Object Model (SOM) and its distributed version (DSOM), OMG's Common Object Request Broker Architecture (CORBA) <ref> [36] </ref>, and CI labs OpenDoc. Many of these are available as deployed software packages. The emergence of these technologies also demonstrates that the continued evolution of object-oriented programming and object 33 oriented database management systems are converging into language-independent and distributed object computing.
Reference: [37] <author> M. Ozsu and P. Valduriez. </author> <title> Principles of Distributed Database Systems. </title> <publisher> Prentice-Hall, </publisher> <year> 1991. </year>
Reference-contexts: New information sources can be seamlessly incorporated into the existing consumer's query model. Thanks for the fact that distributed query processing and optimization [12, 25], and extended transaction management [14] have so far been explored quite extensively in the context of classic distributed databases <ref> [37] </ref>, federated databases [15, 42], and distributed object management [34, 38], in this paper we focus only on how the USECA properties should be understood and strengthened in the DIOM environment and what are the important adaptive mechanisms in the design and development of the DIOM interface description language (IDL) and
Reference: [38] <author> T. Ozsu, U. Dayal, and P. Valduriez. </author> <title> Distributed Object Management. </title> <publisher> Morgan Kaufmann, </publisher> <year> 1993. </year>
Reference-contexts: Thanks for the fact that distributed query processing and optimization [12, 25], and extended transaction management [14] have so far been explored quite extensively in the context of classic distributed databases [37], federated databases [15, 42], and distributed object management <ref> [34, 38] </ref>, in this paper we focus only on how the USECA properties should be understood and strengthened in the DIOM environment and what are the important adaptive mechanisms in the design and development of the DIOM interface description language (IDL) and interface query language (IQL), so that a multidatabase system <p> The heterogeneity problems are resolved at the schema integration stage. This approach cannot scale well when new sources need to be added into an existing multidatabase system. Also the component schemas cannot evolve without the consent from the integrated schema. The distributed object management approach <ref> [34, 38] </ref> generalizes the federated approach by modeling heterogeneous databases of different levels of granularity as objects in a distributed object space. It requires the definition of a common object model and a common object query language.
Reference: [39] <author> E. Pitoura, O. Bukhres, and A. Elmagarmid. </author> <title> Object-orientation in multidatabase systems. </title> <journal> ACM Computing Surveys, </journal> <volume> 27(2), </volume> <year> 1995. </year>
Reference-contexts: Another related field is the application of object-oriented technology to the integration of heterogeneous database systems <ref> [5, 39] </ref>. A survey by Pitoura, Bukhres, and Elmagarmid [39] presents a concrete analysis and categorization of a number of ways that object-oriented technology may influence the design and implementation of multidatabase systems. <p> Another related field is the application of object-oriented technology to the integration of heterogeneous database systems [5, 39]. A survey by Pitoura, Bukhres, and Elmagarmid <ref> [39] </ref> presents a concrete analysis and categorization of a number of ways that object-oriented technology may influence the design and implementation of multidatabase systems. Comparing with the framework given in [39], the current DIOM development has not yet incorporated the update issues into the architecture. <p> A survey by Pitoura, Bukhres, and Elmagarmid <ref> [39] </ref> presents a concrete analysis and categorization of a number of ways that object-oriented technology may influence the design and implementation of multidatabase systems. Comparing with the framework given in [39], the current DIOM development has not yet incorporated the update issues into the architecture.
Reference: [40] <author> S. Ram. </author> <title> Special Issue on Heterogeneous Distributed Database Systems. </title> <journal> IEEE Computer Magazine, </journal> <volume> Vol. 24, No. 12, </volume> <month> December </month> <year> 1991. </year>
Reference-contexts: We summarize them in turn. Multidatabase research can be categoried into three approaches. A classic approach <ref> [40, 41] </ref> for multi-database management relies on building a single global schema to encompass the differences among the multiple local database schemas.
Reference: [41] <author> A. Sheth. </author> <title> Special Issue in Multidatabase Systems. </title> <journal> ACM SIGMOD Record, Vol.20, </journal> <volume> No. 4, </volume> <month> December </month> <year> 1991. </year>
Reference-contexts: We summarize them in turn. Multidatabase research can be categoried into three approaches. A classic approach <ref> [40, 41] </ref> for multi-database management relies on building a single global schema to encompass the differences among the multiple local database schemas.
Reference: [42] <author> A. Sheth and J. Larson. </author> <title> Federated database systems for managing distributed, heterogeneous, and autonomous databases. </title> <journal> ACM Computing Surveys, </journal> <volume> Vol. 22, No.3 1990. </volume> <pages> 183-236. </pages>
Reference-contexts: New information sources can be seamlessly incorporated into the existing consumer's query model. Thanks for the fact that distributed query processing and optimization [12, 25], and extended transaction management [14] have so far been explored quite extensively in the context of classic distributed databases [37], federated databases <ref> [15, 42] </ref>, and distributed object management [34, 38], in this paper we focus only on how the USECA properties should be understood and strengthened in the DIOM environment and what are the important adaptive mechanisms in the design and development of the DIOM interface description language (IDL) and interface query language <p> Unlike in the tightly-coupling approach to schema integration <ref> [42] </ref> where equivalent attributes are merged into one attribute, the DIOM mediated attributes are only given in a logical form. That is, a mediated attribute is solely a semantic correspondence to, rather than an absolute integration/generalization of, the equivalent attributes in component information sources. <p> Although the enforcement of a single global schema through data integration yields full transparency for uniform access, component databases have much restricted autonomy, scalability and their evolution becomes difficult. The federated approach <ref> [42] </ref> improves the autonomy and the flexibility (composability) of multidatabase management by relying on multiple import schemas and the customized integration at various multi-database levels. However, the integration of component schemas at each multidatabase level is enforced by the system. The integrated schema is static.
Reference: [43] <author> M. Siegel and S. Madnick. </author> <title> Context interchange: sharing the meaning of data. </title> <booktitle> In ACM SIGMOD RECORD on Management of Data, </booktitle> <pages> pages 77-78, 20, </pages> <month> 4 </month> <year> (1991). </year>
Reference-contexts: Another example is the Context Exchange project at MIT <ref> [19, 43] </ref>. It uses context knowledge in a context mediator to explicitly define the meaning of information provided by a source and that required by a receiver.
Reference: [44] <author> L. Wall and R. L. Schwartz. </author> <title> Programming Perl. </title> <publisher> O'Reilly and Associates, </publisher> <month> Jan. </month> <year> 1991. </year>
Reference-contexts: The first demonstration package [27, 26] is implemented as a WWW application. All the components and its interface functions are created using HTML [13] and Perl CGI-scripts <ref> [35, 44] </ref>. Linking to the underlying data sources and metadata library 31 databases is implemented with Oraperl [4]. Components of the prototype system interact via HTTP [16] protocol, a popular protocol that provides good flexibility in types of data to be sent or received (both text and binary).
Reference: [45] <author> G. Wiederhold. </author> <title> Mediators in the architecture of future information systems. </title> <journal> IEEE Computer Magazine, </journal> <month> March </month> <year> 1992. </year>
Reference-contexts: Several other approaches have been proposed for information gathering from multiple heterogeneous information sources, including multidatabases and federated databases, distributed object management, intelligent integration of information architectures <ref> [45] </ref>, and standard interfaces for software integration and communication such as IBM's DSOM and Microsoft's OLE. We summarize them in turn. Multidatabase research can be categoried into three approaches. <p> Recent activities in the OMG [36] and the ODMG standard [10], which extends the OMG object model to the database interoperability, are the important milestones for the distributed object management. Another approach, called the intelligent information integration (I 3 ) mediation <ref> [45, 48] </ref> can be seen as a generic system architecture for information integration. Several projects are currently undergoing to adapt and extend this architecture with different emphases.
Reference: [46] <author> G. Wiederhold. </author> <title> Intelligent integration of information. </title> <booktitle> In Proceedings of ACM/SIGMOD Annual Conference on Management of Data, </booktitle> <year> 1993. </year>
Reference-contexts: We would like to state that the DIOM approach presented in this paper proposes an adaptive framework, rather than a new data model, for implementing intelligent information mediation <ref> [46, 47] </ref>. This framework is targeted towards large scale interoperable database systems operating in a dynamic and evolving environment, which require transparent, scalable,and customizable access of multiple heterogeneous information sources while maintaining the USECA properties.
Reference: [47] <author> G. Wiederhold. </author> <title> Interoperation, </title> <booktitle> mediation, and ontologies. In Proc. Int. Symp. on Fifth Generation Comp Systems, </booktitle> <pages> pages 33-48, </pages> <publisher> ICOT, </publisher> <address> Tokyo, Japan, </address> <year> 1994. </year>
Reference-contexts: We would like to state that the DIOM approach presented in this paper proposes an adaptive framework, rather than a new data model, for implementing intelligent information mediation <ref> [46, 47] </ref>. This framework is targeted towards large scale interoperable database systems operating in a dynamic and evolving environment, which require transparent, scalable,and customizable access of multiple heterogeneous information sources while maintaining the USECA properties.
Reference: [48] <author> G. Wiederhold. </author> <title> I3 glossary. </title> <type> Draft 7, </type> <month> March 16 </month> <year> 1995. </year>
Reference-contexts: Recent activities in the OMG [36] and the ODMG standard [10], which extends the OMG object model to the database interoperability, are the important milestones for the distributed object management. Another approach, called the intelligent information integration (I 3 ) mediation <ref> [45, 48] </ref> can be seen as a generic system architecture for information integration. Several projects are currently undergoing to adapt and extend this architecture with different emphases.
Reference: [49] <author> Yahoo Inc. </author> <note> Yahoo! homepage. http://www.yahoo.com/. 38 </note>
Reference-contexts: Currently we have two instances of such a wrapper: Yahoo <ref> [49] </ref> wrapper and Harvest [7] wrapper. The rest of the components in our demo system, such as the expert query browser, the query trace function, and the query decomposition module, are currently simulated.
References-found: 49

