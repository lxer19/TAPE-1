URL: http://www.cs.pitt.edu/~pollack/distrib/dipart.ps
Refering-URL: http://www.cs.pitt.edu/~pollack/distrib/guide.html
Root-URL: http://www.cs.pitt.edu
Email: pollack@cs.pitt.edu  
Title: Planning in Dynamic Environments: The DIPART System  
Author: Martha E. Pollack 
Address: Pittsburgh Pittsburgh, PA 15260  
Affiliation: Department of Computer Science and Intelligent Systems Program University of  
Date: 1996  
Note: Appears in A. Tate, ed., Advanced Planning Technology, AAAI Press,  
Abstract: Many current and potential AI applications are intended to operate in dynamic environments, including those with multiple agents. As a result, standard AI plan-generation technology must be augmented with mechanisms for managing changing information, for focusing attention when multiple events occur, and for coordinating with other planning processes. The DI-PART testbed (Distributed, Interactive Planner's Assistant for Real-time Transportation planning) was developed to serve as an experimental platform for analyzing a variety of such mechanisms. In this paper, we present an overview both of the DIPART system and of some of the methods for planning in dynamic environments that we have been investigating using DIPART. Many of these methods derive from theoretical work in real-time AI and in related fields, such as real-time operating systems. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Baker, K. </author> <year> 1974. </year> <title> Introduction to Sequencing and Scheduling. </title> <publisher> N.Y.: John Wiley. </publisher>
Reference-contexts: It is known that, for a schedu-lable set of processes, i.e., one for which there exists an optimal schedule where all deadlines can be met, EDF and LSF produce a schedule that meets all deadlines, and hence performs optimally <ref> (Baker 1974) </ref>. However, the performance of these two algorithms degrades sharply when the system is saturated, i.e., it has to deal with a non-schedulable set of tasks. To schedule saturated job sets effectively, scheduling algorithms must take into account the cost of missing a deadline.
Reference: <author> Boddy, M., and Dean, T. </author> <year> 1989. </year> <title> Solving time-dependent planning problems. </title> <booktitle> In Proceedings of the Eleventh International Joint Conference on Artificial Intelligence, </booktitle> <pages> 979-984. </pages>
Reference: <author> Bratman, M. E.; Israel, D. J.; and Pollack, M. E. </author> <year> 1988. </year> <title> Plans and resource-bounded practical reasoning. </title> <booktitle> Computational Intelligence 4 </booktitle> <pages> 349-355. </pages>
Reference: <author> Bratman, M. E. </author> <year> 1987. </year> <title> Intention, Plans and Practical Reason. </title> <address> Cambridge, MA: </address> <publisher> Harvard University Press. </publisher>
Reference-contexts: We have been investigating a strategy for implicit coordination called multi-agent filtering. It extends a single-agent strategy, filtering, which was developed as a way of controlling reasoning in dynamic environments. The notion of single-agent filtering derives from the work of Bratman <ref> (Bratman 1987) </ref>; it involves an agent committing to the goals it has already adopted, and tending to bypass (or "filter out") new options that would conflict with their successful completion (Bratman, Israel, & Pollack 1988; Pollack 1992; Pollack et al. 1994).
Reference: <author> Cheriton, D. R., and Zwaenpoel, W. </author> <year> 1985. </year> <title> Distributed process groups in the V kernel. </title> <journal> ACM Transactions on Computer Systems 77-107. </journal>
Reference-contexts: We first briefly describe the communication package we have implemented to support communication among DIPART nodes, and then sketch approaches to multi-agent planning that we have been investigating. Software Support for Communication Communication among nodes in DIPART is built on a group management model <ref> (Cheriton & Zwaenpoel 1985) </ref>. Groups of processes (or, in our case, agents) cluster into a single logical entity such that all communications sent by a member of the group are received by all members of the group.
Reference: <author> Ephrati, E., and Rosenschein, J. S. </author> <year> 1994. </year> <title> Divide and conquer in multi-agent systems. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence (AAAI-94). </booktitle>
Reference: <author> Ephrati, E.; Pollack, M. E.; and Milshtein, M. </author> <year> 1996. </year> <note> A cost-directed planner. Submitted for publication. </note>
Reference-contexts: In our work so far, we have assumed that flaw selection is performed randomly, leaving it to future work to explore the question of which flaw selection strategies can best be integrated into our approach. In <ref> (Ephrati, Pollack, & Milshtein 1996) </ref>, we show that the cost-directed planning algorithm not only leads to finding lower-cost plans, but in many circumstances it does this without negatively impacting the efficiency of planning: in fact, it can lead to a significant decrease in total planning time.
Reference: <author> Ephrati, E.; Pollack, M. E.; and Rosenschein, J. S. </author> <year> 1994. </year> <title> Exploitation of decision theory techniques in multi-agent planning. </title> <booktitle> In 1994 AAAI Spring Symposium on Decision Theoretic Planning. </booktitle> <publisher> AAAI Press. </publisher>
Reference: <author> Ephrati, E.; Pollack, M. E.; and Rosenschein, J. S. </author> <year> 1995. </year> <title> A tractable heuristic that maximizes global utility through local plan combination. </title> <booktitle> In Proceedings of the 1st International Conference on Multi-Agent Systems (ICMAS). </booktitle>
Reference-contexts: In no cases do the agents engage in any explicit negotiation. Our experimental results on the efficacy of multi agent filtering are presented in <ref> (Ephrati, Pollack, & Ur 1995) </ref>. The most interesting and surprising result is that, at least for the simple, abstract environments so far studied, multi-agent filtering is a dominant strategy: no matter what proportion of the agents in some environment choose not to filter, those that do filter perform better.
Reference: <author> Ephrati, E.; Pollack, M. E.; and Ur, S. </author> <year> 1995. </year> <title> Deriving multi-agent coordination through filtering strategies. </title> <booktitle> In Proceedings of the 14th Joint International Conference on Artificial Intelligence (IJCAI). </booktitle>
Reference-contexts: In no cases do the agents engage in any explicit negotiation. Our experimental results on the efficacy of multi agent filtering are presented in <ref> (Ephrati, Pollack, & Ur 1995) </ref>. The most interesting and surprising result is that, at least for the simple, abstract environments so far studied, multi-agent filtering is a dominant strategy: no matter what proportion of the agents in some environment choose not to filter, those that do filter perform better.
Reference: <author> Greenwald, L., and Dean, T. </author> <year> 1994. </year> <title> Solving time-critical decision-making problems with predictable computational demands. </title> <booktitle> In Proceedings of the Second International Conference on AI Planning Systems (AIPS), </booktitle> <pages> 25-30. </pages>
Reference: <author> Jensen, E. D.; Locke, C. D.; and Tokuda, H. </author> <year> 1985. </year> <title> A time-driven scheduling model for real-time operating systems. </title> <booktitle> In Proceedings of the IEEE Real-Time Systems Symposium, </booktitle> <pages> 112-122. </pages>
Reference: <author> Joslin, D., and Pollack, M. E. </author> <year> 1994. </year> <title> Least-cost flaw repair: A plan refinement strategy for partial-order planning. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence (AAAI), </booktitle> <pages> 1004-1009. </pages>
Reference-contexts: Unless it is impossible to repair the selected flaw, new nodes representing the possible repairs are added to the search space. In <ref> (Joslin & Pollack 1994) </ref>, we explored a flaw-selection strategy, the Least-Cost Flaw Repair (LCFR) strategy, which can be seen as a generalization of the DUnf strategy that had been proposed by Peot and Smith (1993). <p> Our experiments also showed that extending this to a complete preference for least-cost selection, as in LCFR, reduces search-space size even further. Details of the experiments can be found in <ref> (Joslin & Pollack 1994) </ref>. Here we simply present the results of a key experiment, in which we compared 5 search strategies on 49 test problems from a variety of domains. <p> We therefore developed QLCFR, which reduces this overhead by approximating repair costs, and we demonstrated its effectiveness experimentally. Again, complete details can be found in <ref> (Joslin & Pollack 1994) </ref>; subsequent work that builds on the LCFR approach includes (Srinivasan & Howe 1995; Schubert & Gerevini 1995).
Reference: <author> Joslin, D., and Pollack, M. E. </author> <year> 1995. </year> <title> Active and pas-sive postponement of decisions in plan generation. </title> <booktitle> In Proceedings of the Third European Workshop on Planning. </booktitle>
Reference: <author> Joslin, D., and Pollack, M. E. </author> <year> 1996. </year> <title> When is 'early commitment' in plan generation a good idea? Submitted for publication. </title>
Reference: <author> Joslin, D. </author> <year> 1996. </year> <title> Passive and active decision postponement in plan generation. </title> <type> Ph.D. dissertation, </type> <institution> Intelligent Systems Program, University of Pittsburgh. </institution>
Reference: <author> Kinny, D. N., and Georgeff, M. P. </author> <year> 1991. </year> <title> Commitment and effectiveness of situated agents. </title> <booktitle> In Proceedings of the Twelfth International Joint Conference on Artificial Intelligence, </booktitle> <pages> 82-88. </pages>
Reference: <author> Korf, R. E. </author> <year> 1987. </year> <title> Planning as search: A quantitative approach. </title> <booktitle> Artificial Intelligence 33 </booktitle> <pages> 65-88. </pages>
Reference-contexts: This result is due in part to the fact that generating plans for a set of independent subgoals is exponentially less costly than generating a complete plan taking interactions into account <ref> (Korf 1987) </ref>. At least in the limit, the cost of forming plans for subgoals treated independently does not significantly effect the computational complexity of the complete planning problem. Moreover, while focusing on lower-cost plans, the heuristic function effectively prunes the search space.
Reference: <author> Lauzac, S., and Znati, T. </author> <year> 1995. </year> <title> Comparative evaula-tion of cooperative plan execution strategies in multia-gent environments. </title> <booktitle> In Proceedings of the 28th Annual Simulation Symposium. </booktitle>
Reference: <author> Lauzac, S. </author> <year> 1993. </year> <title> The DIPART communications package. </title> <type> Technical Report 93-24, </type> <institution> University of Pittsburgh, </institution> <address> Pittsburgh, PA. </address>
Reference: <author> Lauzac, S. </author> <year> 1994. </year> <title> Load balancing algorithms for cooperative planning. </title> <type> Technical Report 95-26, </type> <institution> Department of Computer Science, University of Pittsburgh, </institution> <address> Pitts-burgh, PA. </address>
Reference: <author> McAllester, D., and Rosenblitt, D. </author> <year> 1991. </year> <title> Systematic nonlinear planning. </title> <booktitle> In Proceedings of the Ninth National Conference on Artificial Intelligence, </booktitle> <pages> 634-639. </pages>
Reference: <author> Nassehi, M. M., and Tobagi, F. A. </author> <year> 1987. </year> <title> Transmission scheduling policies and their implementation in integrated-services high-speed local area networks. </title> <booktitle> In he Fifth Annual European Fibre Optic Communications and Local Area Networks Exposition, </booktitle> <pages> 185-192. </pages>
Reference-contexts: Heuristic strategies have been proposed as well (Pollack 1992). The deliberation-scheduling problem bears a strong similarity to the problems of process scheduling in real-time operating systems (Tannenbaum 1992), job scheduling in operations research (Pinedo 1995), and transmission scheduling in local area networks <ref> (Nassehi & Tobagi 1987) </ref>. Not all processor job- or transmission-scheduling algorithms are applicable to deliberation scheduling, however.
Reference: <author> Penberthy, J. S., and Weld, D. </author> <year> 1992. </year> <title> UCPOP: A sound, complete, partial order planner for ADL. </title> <booktitle> In Proceedings of the Third International Conference on Knowledge Representation and Reasoning, </booktitle> <pages> 103-114. </pages>
Reference: <author> Peot, M., and Smith, D. E. </author> <year> 1993. </year> <title> Threat-removal strategies for partial-order planning. </title> <booktitle> In Proceedings of the Eleventh National Conference on Artificial Intelligence, </booktitle> <pages> 492-499. </pages>
Reference: <author> Pinedo, M. </author> <year> 1995. </year> <title> Scheduling: Theory, Algorithms, and Systems. </title> <address> Englewood Cliffs, NJ 07632: </address> <publisher> Prentice Hall. </publisher>
Reference-contexts: Heuristic strategies have been proposed as well (Pollack 1992). The deliberation-scheduling problem bears a strong similarity to the problems of process scheduling in real-time operating systems (Tannenbaum 1992), job scheduling in operations research <ref> (Pinedo 1995) </ref>, and transmission scheduling in local area networks (Nassehi & Tobagi 1987). Not all processor job- or transmission-scheduling algorithms are applicable to deliberation scheduling, however.
Reference: <author> Pollack, M. E., and Ringuette, M. </author> <year> 1990. </year> <title> Introducing the Tileworld: Experimentally evaluating agent architectures. </title> <booktitle> In Proceedings of the Eighth National Conference on Artificial Intelligence, </booktitle> <pages> 183-189. </pages>
Reference: <author> Pollack, M. E.; Joslin, D.; Nunes, A.; Ur, S.; and Ephrati, E. </author> <year> 1994. </year> <title> Experimental investigation of an agent-commitment strategy. </title> <type> Technical Report 94-31, </type> <institution> Univ. of Pittsburgh Dept. of Computer Science, </institution> <address> Pitts-burgh, PA. </address>
Reference-contexts: Unless it is impossible to repair the selected flaw, new nodes representing the possible repairs are added to the search space. In <ref> (Joslin & Pollack 1994) </ref>, we explored a flaw-selection strategy, the Least-Cost Flaw Repair (LCFR) strategy, which can be seen as a generalization of the DUnf strategy that had been proposed by Peot and Smith (1993). <p> Our experiments also showed that extending this to a complete preference for least-cost selection, as in LCFR, reduces search-space size even further. Details of the experiments can be found in <ref> (Joslin & Pollack 1994) </ref>. Here we simply present the results of a key experiment, in which we compared 5 search strategies on 49 test problems from a variety of domains. <p> We therefore developed QLCFR, which reduces this overhead by approximating repair costs, and we demonstrated its effectiveness experimentally. Again, complete details can be found in <ref> (Joslin & Pollack 1994) </ref>; subsequent work that builds on the LCFR approach includes (Srinivasan & Howe 1995; Schubert & Gerevini 1995).
Reference: <author> Pollack, M. E. </author> <year> 1992. </year> <title> The uses of plans. </title> <booktitle> Artificial Intelligence 57 </booktitle> <pages> 43-68. </pages>
Reference-contexts: Heuristic strategies have been proposed as well <ref> (Pollack 1992) </ref>. The deliberation-scheduling problem bears a strong similarity to the problems of process scheduling in real-time operating systems (Tannenbaum 1992), job scheduling in operations research (Pinedo 1995), and transmission scheduling in local area networks (Nassehi & Tobagi 1987).
Reference: <author> Reece, G. A.; Tate, A.; Brown, D. I.; and Hoffman, M. </author> <year> 1993. </year> <title> The PRECiS environment. </title> <type> Technical report, </type> <institution> ARPA-RL/CPE. </institution>
Reference-contexts: DIPART is a prototype simulation system that includes a network of agents, each of which assists a human planner, and a simulated dynamic environment, which implements the Pacifica NEO scenario <ref> (Reece et al. 1993) </ref>. In this paper, we present an overview both of the DIPART system and of some of the methods for planning in dynamic environments that we have been investigating using DI-PART. <p> A communication package based on UDP has also been implemented to support inter-node communication. The Pacifica Scenario To ground our research, we employ the Pacifica NEO scenario, developed by Reece and Tate for the RL/ARPA Planning Initiative as part of the PRECiS environment <ref> (Reece et al. 1993) </ref>. This scenario involves the fictional island nation of Pacifica, on which a number of U.S. citizens are located. The island has various natural and man-made features, including cities, an airport, bridges, roads, and a volcano. Because of an expected uprising, the citizens need to be evacuated.
Reference: <author> Ronen, Y.; Mosse, D.; and Pollack, M. E. </author> <year> 1996. </year> <title> Value-density algorithms for the deliberation-scheduling algorithm. </title> <journal> SIGART Bulletin 7(2). </journal>
Reference: <author> Ronen, Y. </author> <year> 1995. </year> <title> Meta-level deliberation as scheduling: The use of operating-systems and operations-research techniques in meta-level control. M.S. </title> <type> Thesis, </type> <institution> Intelligent Systems Program, University of Pittsburgh. </institution>
Reference: <author> Russell, S. J., and Wefald, E. H. </author> <year> 1991. </year> <title> Do the Right Thing. </title> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference-contexts: Previous approaches to deliberation scheduling in AI include the use of off-line allocation of on-line deliberation time for tasks with known computational demands (Greenwald & Dean 1994; Boddy & Dean 1989; Zilberstein & Russell 1996), and the application of decision-theoretic estimations of optimal computational sequences <ref> (Russell & Wefald 1991) </ref>. Heuristic strategies have been proposed as well (Pollack 1992). The deliberation-scheduling problem bears a strong similarity to the problems of process scheduling in real-time operating systems (Tannenbaum 1992), job scheduling in operations research (Pinedo 1995), and transmission scheduling in local area networks (Nassehi & Tobagi 1987).
Reference: <author> Schubert, L., and Gerevini, A. </author> <year> 1995. </year> <title> Accelerating partial order planners by improving plan and goal choices. </title> <booktitle> In Proceedings of the International Conference on Tools with AI (ICTAI '95). </booktitle>
Reference: <author> Srinivasan, R., and Howe, A. E. </author> <year> 1995. </year> <title> Comparison of methods for improving search efficiency in a partial-order planner. </title> <booktitle> In Proceedings of the 14th International Joint Conference on Artificial Intelligence, </booktitle> <pages> 1620-1626. </pages>
Reference: <author> Tannenbaum, A. S. </author> <year> 1992. </year> <title> Modern Operating Systems. </title> <address> Englewood Cliffs: </address> <publisher> Prentice Hall. </publisher>
Reference-contexts: Because each node performs the role of an intelligent assistant, we sometimes refer to the nodes as "agent processes". The internal architecture of each DIPART node is based on a generic model of process scheduling, similar to those found in the literature on operating systems <ref> (Tannenbaum 1992) </ref>. Incoming messages are stored on a Message Queue (MQ), and indicate events that may require attention. Often the value of responding to a particular message is time dependent. <p> Heuristic strategies have been proposed as well (Pollack 1992). The deliberation-scheduling problem bears a strong similarity to the problems of process scheduling in real-time operating systems <ref> (Tannenbaum 1992) </ref>, job scheduling in operations research (Pinedo 1995), and transmission scheduling in local area networks (Nassehi & Tobagi 1987). Not all processor job- or transmission-scheduling algorithms are applicable to deliberation scheduling, however.
Reference: <author> Zilberstein, S., and Russell, S. </author> <year> 1996. </year> <title> Optimal composition of real-time systems. </title> <booktitle> Artificial Intelligence 79(2). </booktitle>
Reference: <author> Znati, T., and Pollack, M. E. </author> <year> 1994. </year> <title> DIPART, an interactive simulation platform for plan development and monitoring in dynamic environments. </title> <booktitle> In Proceedings of the 27th Annual Simulation Society. </booktitle> <publisher> IEEE Computer Society Press. </publisher>
References-found: 38

