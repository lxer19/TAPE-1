URL: http://www.eecs.umich.edu/~qstout/pap/BR90pds.ps.Z
Refering-URL: http://www.eecs.umich.edu/~qstout/papers.html
Root-URL: http://www.eecs.umich.edu
Title: PERFECT DOMINATING SETS  
Author: Marilynn Livingston Quentin F. Stout 
Address: Edwardsville, IL 62026-1653 Ann Arbor, MI 48109-2122  
Affiliation: Department of Computer Science Elec. Eng. and Computer Science Southern Illinois University University of Michigan  
Note: In Congressus Numerantium 79 (1990), pp. 187-203.  
Abstract: A dominating set S of a graph G is perfect if each vertex of G is dominated by exactly one vertex in S. We study the existence and construction of PDSs in families of graphs arising from the interconnection networks of parallel computers. These include trees, dags, series-parallel graphs, meshes, tori, hypercubes, cube-connected cycles, cube-connected paths, and de Bruijn graphs. For trees, dags, and series-parallel graphs we give linear time algorithms that determine if a PDS exists, and generate a PDS when one does. For 2- and 3-dimensional meshes, 2-dimensional tori, hypercubes, and cube-connected paths we completely characterize which graphs have a PDS, and the structure of all PDSs. For higher dimensional meshes and tori, cube-connected cycles, and de Bruijn graphs, we show the existence of a PDS in infinitely many cases, but our characterization is not complete. Our results include distance d-domination for arbitrary d. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Bange, A. Barkauskas, and P. Slater, </author> <title> "Disjoint dominating sets in trees", </title> <institution> Sandia Labs. tech. </institution> <note> report SAND 78-1087J (1987). </note>
Reference-contexts: Using algebraic techniques, Biggs derived an important necessary condition for the existence of a perfect d-code in a distance transitive graph and applied his condition to several distance-transitive graphs including the classical hypercube graph. Later Bange, Barkauskas, and Slater <ref> [1] </ref>, apparently unaware of Bigg's work, defined the class of efficient dominating sets, which is exactly the same as the class of perfect 1-dominating sets.
Reference: [2] <author> D. Bange, A. Barkauskas, and P. Slater, </author> <title> "Efficient dominating sets in graphs", Applications of Discrete Math., </title> <editor> R.D. Ringeisen and F.S. Roberts, eds., </editor> <publisher> SIAM, Philad. </publisher> <pages> (1988) pp. 189-199. </pages>
Reference-contexts: They concentrated on finding perfect dominating sets in trees, showing that there are linear-time algorithms that decide if a tree has a PDS, and if so then produce one <ref> [2] </ref>. Our motivation for studying the notion of perfect domination in graphs arose from our work involving resource allocation and placement in parallel computers [15]. <p> The computation of the labels is outlined in Algorithm 2.1. We thus have shown the following result, which was also proven earlier in <ref> [2] </ref>. Theorem 2.2 Let T be a tree. Algorithm 2.1 determines whether T has a perfect dominating set in time proportional to the number of vertices of T .
Reference: [3] <author> D. Bange, A. Barkauskas, L.H. Host, and P. Slater, </author> <title> "Efficient near-domination of grid graphs", </title> <journal> Congr. Numer. </journal> <note> 58 (1987) pp. 83-92. </note>
Reference-contexts: In <ref> [3] </ref>, Bange et al. noticed a periodic distance 1 PDS for the infinite 2-dimensional mesh and used it to construct dominating sets for 2-dimensional meshes of finite size. The periodic distance 1 PDS observed by Bange et al. is also the PDS constructed in [16] for T 2 (5; 5).
Reference: [4] <author> E.R. Berlekamp, </author> <title> Algebraic Coding Theory, </title> <publisher> Aegean Park Press, </publisher> <address> CA. </address> <note> Revised 1984 edition. </note>
Reference-contexts: Perfect binary single-error-correcting codes of length k exist if and only if k + 1 is a power of 2, and when this is the case, can be constructed directly using algebraic methods such as those described in <ref> [4] </ref> or can be constructed recursively, as shown by Golay [9]. The only perfect, binary, multiple-error-correcting code is the 3-error correcting Golay code of dimension 23. We state these results in terms of distance d PDS in the following.
Reference: [5] <author> N. Biggs, </author> <title> "Perfect codes in graphs", </title> <journal> J. Comb. Theory (B) 15 (1973) pp. </journal> <pages> 289-296. </pages>
Reference-contexts: The concept of a perfect d-dominating set seems to have appeared first in a paper by Biggs <ref> [5] </ref>, who introduced the term perfect d-code to denote what we call a perfect d-dominating set. Biggs [5, 6] was concerned with characterizing all perfect d-error correcting codes, and claimed that the proper setting to study such issues is in the class of distance-transitive graphs. <p> The concept of a perfect d-dominating set seems to have appeared first in a paper by Biggs [5], who introduced the term perfect d-code to denote what we call a perfect d-dominating set. Biggs <ref> [5, 6] </ref> was concerned with characterizing all perfect d-error correcting codes, and claimed that the proper setting to study such issues is in the class of distance-transitive graphs.
Reference: [6] <author> N. Biggs, </author> <title> "Perfect codes and distance transitive graphs", </title> <booktitle> Combinatorics, Proc. Third British Comb. Conf. (1973) London Math. Soc. Lecture Notes 13 (F.P. McDonough and V.C. Mavron, eds.) </booktitle> <pages> pp. 1-8. </pages>
Reference-contexts: The concept of a perfect d-dominating set seems to have appeared first in a paper by Biggs [5], who introduced the term perfect d-code to denote what we call a perfect d-dominating set. Biggs <ref> [5, 6] </ref> was concerned with characterizing all perfect d-error correcting codes, and claimed that the proper setting to study such issues is in the class of distance-transitive graphs.
Reference: [7] <author> E.J. Cockayne, E.O. Hare, S.T. Hedetniemi, </author> <title> and T.V. Wimer, "Bounds for the domination number of grid graphs", </title> <journal> Congr. Numer. </journal> <note> 47 (1985) pp. 217-228. </note>
Reference: [8] <author> M.R. Garey and D.S. Johnson, </author> <title> Computers and intractability: a guide to the theory of N P -completeness (1979) W. </title> <editor> H. </editor> <publisher> Freeman & Co. </publisher> <address> New York. </address>
Reference-contexts: This is particularly true in graphs with quite regular structures, which are the graphs that arise from parallel computers. Determining if an arbitrary graph has a dominating set of a given size is a well-known N P -complete problem <ref> [8, 13] </ref>. Straightforward proofs can be used to show that it is also N P -complete to decide if a graph has a PDS, and the problem remains N P -complete even if the graphs are restricted to 3-regular planar graphs.
Reference: [9] <author> M.J.E. Golay, </author> <title> "Notes on digital coding", </title> <booktitle> Proc. I.R.I. (IEEE) 37 (1949) p. </booktitle> <pages> 657. </pages>
Reference-contexts: As illustrated in the survey article of van Lint [25], these codes have been the object of great interest since their inception by Hamming [10] and Golay <ref> [9] </ref> in the late 1940's. All perfect binary error-correcting codes are known, in fact, all perfect codes over alphabets which are finite fields are known [25]. <p> Perfect binary single-error-correcting codes of length k exist if and only if k + 1 is a power of 2, and when this is the case, can be constructed directly using algebraic methods such as those described in [4] or can be constructed recursively, as shown by Golay <ref> [9] </ref>. The only perfect, binary, multiple-error-correcting code is the 3-error correcting Golay code of dimension 23. We state these results in terms of distance d PDS in the following.
Reference: [10] <author> R.W. </author> <title> Hamming, "Error detecting and error correcting codes", </title> <journal> Bell System Tech. J. </journal> <note> 29 (1950) pp. 147-160. </note>
Reference-contexts: As illustrated in the survey article of van Lint [25], these codes have been the object of great interest since their inception by Hamming <ref> [10] </ref> and Golay [9] in the late 1940's. All perfect binary error-correcting codes are known, in fact, all perfect codes over alphabets which are finite fields are known [25].
Reference: [11] <author> F. Harary, J.P. Hayes, and H. Wu, </author> <title> "A survey of the theory of hypercube graphs", </title> <journal> Comput. Math. </journal> <note> Appl 15 (1988) pp. 277-289. </note>
Reference-contexts: These graphs have a long and rich history <ref> [11] </ref> and have recently become an important architectural model for several commercial parallel computers such as the Intel iPSC and the NCUBE machines. For a hypercube graph of dimension k, a distance d perfect dominating set is precisely a perfect binary d-error-correcting code over an alphabet of 2 k symbols.
Reference: [12] <author> O. Heden, </author> <title> "Perfect codes in antipodal distance transitive graphs", </title> <institution> Math. Institute of Univ. of Stockholm preprint (1974). </institution>
Reference: [13] <author> D.S. Johnson, </author> <title> "The N P -completeness column: an ongoing guide", </title> <editor> J. </editor> <booktitle> Algorithms 6 (1985) pp. </booktitle> <pages> 434-451. </pages>
Reference-contexts: This is particularly true in graphs with quite regular structures, which are the graphs that arise from parallel computers. Determining if an arbitrary graph has a dominating set of a given size is a well-known N P -complete problem <ref> [8, 13] </ref>. Straightforward proofs can be used to show that it is also N P -complete to decide if a graph has a PDS, and the problem remains N P -complete even if the graphs are restricted to 3-regular planar graphs.
Reference: [14] <author> R. Laskar and K. Peters, </author> <title> "Vertex and edge domination parameters in graphs", </title> <journal> Congr. Numer. </journal> <volume> 48 (1985), </volume> <pages> pp. 291-305. 15 </pages>
Reference-contexts: It follows similarly that CCC 3 and CCC 4 have no perfect dominating set of this type. On the other hand, it is easy to show that CCP 3 does have a perfect ee-dominating set. In <ref> [14] </ref>, Laskar and Peters study the domination numbers of arbitrary graphs for ve-, ev-, and ee-domination. 4 Related Questions Throughout the paper we noted several families of graphs for which the characterization of those with perfect d-dominating sets is incomplete.
Reference: [15] <editor> M.L. Livingston and Q.F. Stout, </editor> <title> "Distributing resources in hypercube computers", </title> <booktitle> Proc. 3rd Conf. on Hypercube Concurrent Computers and Appl. (1988) pp. </booktitle> <pages> 222-231. </pages>
Reference-contexts: Our motivation for studying the notion of perfect domination in graphs arose from our work involving resource allocation and placement in parallel computers <ref> [15] </ref>.
Reference: [16] <editor> M.L. Livingston and Q.F. Stout, </editor> <title> "On problems of distributing resources in parallel computers", </title> <note> in preparation. </note>
Reference-contexts: a perfect d-dominating set exists then one can be determined in time proportional to the number of vertices of T . 2 4 The above methods can also be used to give a linear time decision algorithm to determine whether a directed acyclic graph (dag) has a distance d PDS <ref> [16] </ref>. Adapting work on series-parallel graphs [18, 23, 24], these methods extend to yield a PDS decision algorithm for them in time proportional to the size of the graphs [16]. 2.2 Meshes and Tori Let M k (m 1 ; m 2 ; : : :; m k ) denote a <p> used to give a linear time decision algorithm to determine whether a directed acyclic graph (dag) has a distance d PDS <ref> [16] </ref>. Adapting work on series-parallel graphs [18, 23, 24], these methods extend to yield a PDS decision algorithm for them in time proportional to the size of the graphs [16]. 2.2 Meshes and Tori Let M k (m 1 ; m 2 ; : : :; m k ) denote a k-dimensional mesh of size m 1 fi m 2 fi : : : fi m k , where we will assume the labelling is such that m 1 m <p> Our proof of the characterization, which appears in <ref> [16] </ref>, shows also that for each d there is only one distance d PDS, up to isomorphism. <p> Perfect dominating sets for these tori appear in <ref> [16] </ref>. <p> In [3], Bange et al. noticed a periodic distance 1 PDS for the infinite 2-dimensional mesh and used it to construct dominating sets for 2-dimensional meshes of finite size. The periodic distance 1 PDS observed by Bange et al. is also the PDS constructed in <ref> [16] </ref> for T 2 (5; 5). In the following two theorems we characterize all 2- and 3-dimensional meshes of finite size that possess a PDS. <p> We include, below, the 2-dimensional meshes that have a distance d PDS but the complete statements and proofs of these results are given in <ref> [16] </ref>. <p> form hold for k-dimensional meshes, in that M k (m 1 ; : : :; m k1 ; n) has a perfect d-dominating set for infinitely many n whenever d m 1 + + m k1 (k1), and there are straightforward formulas giving such n and the perfect d-dominating sets <ref> [16] </ref>.
Reference: [17] <editor> M.L. Livingston and Q.F. Stout, </editor> <title> "Constructability and perfect dominating sets", </title> <note> in preparation. </note>
Reference-contexts: There are a number of interesting and quite general questions that involve constructing perfect dominating sets for a graph from a given subgraph, or involve determining subgraphs which prevent a graph from possessing a PDS. We mention just two of these here and refer the reader to <ref> [17] </ref> for further discussion of these. Question 1. <p> Proofs of the above observations will appear in <ref> [17] </ref>.
Reference: [18] <author> J. Pfaff, R. Laskar, and S.T. Hedetniemi, </author> <title> "Linear algorithms for independent domination and total domination in series-parallel graphs", </title> <journal> Congr. Numer. </journal> <note> 45 (1984) pp. 71-82. </note>
Reference-contexts: Adapting work on series-parallel graphs <ref> [18, 23, 24] </ref>, these methods extend to yield a PDS decision algorithm for them in time proportional to the size of the graphs [16]. 2.2 Meshes and Tori Let M k (m 1 ; m 2 ; : : :; m k ) denote a k-dimensional mesh of size m 1
Reference: [19] <author> D.K. </author> <title> Pradhan and M.R. Samatham, "The de Bruijn multiprocessor network: a versatile parallel processing and sorting network for VLSI", </title> <journal> IEEE Trans. Computers 38 (1989) pp. </journal> <pages> 567-581. </pages>
Reference-contexts: This graph, known as a (directed) binary de Bruijn graph or shift register graph, is illustrated in Figure 3 for k = 3. Parallel computers based on de Bruijn graphs have recently been suggested as alternatives to hypercubes <ref> [19] </ref>. When it is notationally convenient, we will denote the vertices of B k as 0; 1; : : :2 k 1, using the decimal equivalent of their binary k-tuple.
Reference: [20] <author> F.P. Preparata and J. Vuillemin, </author> <title> "The cube-connected cycles: a versatile network for parallel computation", </title> <journal> Commun. Assoc. Comput. Mach., </journal> <note> 24 (1981) pp. 300-309. </note>
Reference-contexts: 1 is a power of two ( iii) d = 3 and k = 23. 2.3.2 Cube-Connected Cycles The cube-connected cycles network of dimension k, which we denote by CCC k , consists of a k-dimensional hypercube, each of whose 2 k "vertices" consists of a cycle of k nodes <ref> [20] </ref>. For each dimension, every cycle has a node connected to a corresponding node in the neighboring cycle in that dimension.
Reference: [21] <author> A. Reddy, P. Banerjee and S. Abraham, </author> <title> "I/O embeddings in hypercubes", </title> <booktitle> Proc. Int. Conf. on Parallel Processing (1988) pp. </booktitle> <pages> 331-338. </pages>
Reference-contexts: A PDS for CCC 3 is S 3 = f (1; 000); (2; 110); (3; 101); (1; 111); (2; 001); (3; 010)g and is unique up to isomorphism. It was also shown in <ref> [21] </ref> that a perfect dominating set exists for CCC 3 . Now, any perfect dominating set for CCC 4 contains 16 elements, with one element of the PDS in each 4-cycle at the hypercube nodes.
Reference: [22] <author> D.H. Smith and P. Hammond, </author> <title> "Perfect codes in the graphs O k ", J. </title> <journal> Comb. </journal> <note> Theory (1975) </note>
Reference: [23] <author> K. Takamizawa, T. Nishezeki, and N. Sato, </author> <title> "Linear-time computability of combinatorial problems on series-parallel graphs", </title> <journal> Jour. Assoc. Comput. Mach., </journal> <note> 29 (1982) pp. 623-641. </note>
Reference-contexts: Adapting work on series-parallel graphs <ref> [18, 23, 24] </ref>, these methods extend to yield a PDS decision algorithm for them in time proportional to the size of the graphs [16]. 2.2 Meshes and Tori Let M k (m 1 ; m 2 ; : : :; m k ) denote a k-dimensional mesh of size m 1
Reference: [24] <author> J. Valdes, R.E. Tarjan, and E.L. Lawler, </author> <title> "The recognition of series-parallel digraphs", </title> <note> SIAM Jour. Comp. 11 (1982) pp. 298-313. </note>
Reference-contexts: Adapting work on series-parallel graphs <ref> [18, 23, 24] </ref>, these methods extend to yield a PDS decision algorithm for them in time proportional to the size of the graphs [16]. 2.2 Meshes and Tori Let M k (m 1 ; m 2 ; : : :; m k ) denote a k-dimensional mesh of size m 1
Reference: [25] <author> J.H. van Lint, </author> <title> "A survey of perfect codes", </title> <institution> Rocky Mountain Jour. of Math., </institution> <note> 5 (1975) pp. 199-224. </note>
Reference-contexts: For a hypercube graph of dimension k, a distance d perfect dominating set is precisely a perfect binary d-error-correcting code over an alphabet of 2 k symbols. As illustrated in the survey article of van Lint <ref> [25] </ref>, these codes have been the object of great interest since their inception by Hamming [10] and Golay [9] in the late 1940's. All perfect binary error-correcting codes are known, in fact, all perfect codes over alphabets which are finite fields are known [25]. <p> in the survey article of van Lint <ref> [25] </ref>, these codes have been the object of great interest since their inception by Hamming [10] and Golay [9] in the late 1940's. All perfect binary error-correcting codes are known, in fact, all perfect codes over alphabets which are finite fields are known [25]. Perfect binary single-error-correcting codes of length k exist if and only if k + 1 is a power of 2, and when this is the case, can be constructed directly using algebraic methods such as those described in [4] or can be constructed recursively, as shown by Golay [9].
References-found: 25

