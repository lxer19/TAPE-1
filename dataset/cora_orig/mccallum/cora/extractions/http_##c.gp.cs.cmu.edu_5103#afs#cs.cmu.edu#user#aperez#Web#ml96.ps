URL: http://c.gp.cs.cmu.edu:5103/afs/cs.cmu.edu/user/aperez/Web/ml96.ps
Refering-URL: http://c.gp.cs.cmu.edu:5103/afs/cs.cmu.edu/user/aperez/Web/home.html
Root-URL: http://www.cs.cmu.edu
Email: perezab@cs.bc.edu  
Title: Representing and Learning Quality-Improving Search Control Knowledge  
Author: M. Alicia Perez 
Note: In Lorenza Saitta, ed., Machine Learning: Proceedings of the Thirteenth International Conference, Morgan Kaufmann Publishers,  
Address: Boston College Chestnut Hill, MA 02167  San Francisco, CA. 1996.  
Affiliation: Computer Science Department  
Abstract: Generating good, production-quality plans is an essential element in transforming planners from research tools into real-world applications, but one that has been frequently overlooked in research on machine learning for planning. This paper describes quality, an architecture that automatically acquires operational quality-improving control knowledge given a domain theory, a domain-specific metric of plan quality, and problems which provide planning experience. The framework includes two distinct domain-independent learning mechanisms which differ in the language used to represent the learned knowledge, namely control rules and control knowledge trees, and in the kinds of quality metrics for which they are best suited. quality is fully implemented on top of the prodigy4.0 nonlinear planner and its empirical evaluation has shown that the learned knowledge is able to substantially improve plan quality. Although the learning mechanisms have been developed for prodigy4.0, the framework is general and addresses a problem confronted by any planner that treats planning as a constructive decision-making process.
Abstract-found: 1
Intro-found: 1
Reference: <author> Cohen, W. W. </author> <year> (1988). </year> <title> Generalizing number and learning from multiple examples in explanation-based learning. </title> <editor> In Laird, J., editor, </editor> <booktitle> Proceedings of the Fifth International Conference on Machine Learning, </booktitle> <pages> pages 256-269. </pages> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA. </address>
Reference: <author> Etzioni, O. </author> <year> (1990). </year> <title> A Structural Theory of Explanation-Based Learning. </title> <type> PhD thesis, </type> <institution> Carnegie Mellon University, School of Computer Science, Pitts-burgh, PA. </institution> <note> Also appeared as Technical Report CMU-CS-90-185. </note>
Reference: <author> Gil, Y. </author> <year> (1991). </year> <title> A specification of process planning for PRODIGY. </title> <type> Technical Report CMU-CS-91-179, </type> <institution> School of Computer Science, Carnegie Mellon University, </institution> <address> Pittsburgh, PA. </address>
Reference-contexts: This section describes some experiments in a complex process planning domain <ref> (Gil, 1991) </ref> to evaluate the quality gained by using the learned control knowledge and to compare the performance of both representation formalisms.
Reference: <author> Gratch, J., Chien, S., and DeJong, G. </author> <year> (1993). </year> <title> Learning search control knowledge for deep space network scheduling. </title> <booktitle> In Machine Learning. Proceedings of the Tenth International Conference, </booktitle> <pages> pages 135-142, </pages> <address> Amherst, MA. </address> <publisher> Morgan Kaufmann. </publisher>
Reference: <author> Hayes, C. C. </author> <year> (1995). </year> <title> QUEM: A method for measuring the solution quality and experience level of knowledge-based systems. </title> <journal> IEEE Transactions on Data and Knowledge Engineering, forthcoming. </journal>
Reference-contexts: Tool operators 1 1 put-tool-on-milling-machine, ... (4 ops.) Cleaning operators 6 2 clean, remove-burrs Oil operators 3 1 add-soluble-oil, ... (3 ops.) construct efficient plans <ref> (Hayes, 1995) </ref>. quality also allows metrics that depend on operator bindings.
Reference: <author> Iwamoto, M. </author> <year> (1994). </year> <title> A planner with quality goal and its speedup learning for optimization problem. </title> <booktitle> In Proceedings of the Second International Conference on AI Planning Systems, </booktitle> <pages> pages 281-286, </pages> <address> Chicago, IL. </address>
Reference-contexts: Table 4: Robustness of Learned Cktrees to Changes in Quality Metric Problem set (10 problems per set) 1 2 3 4 5 6 Cktrees learned for Q 1 309 451 622 936 929 1431 Cktrees learned for Q 2 310 446 622 945 898 1448 7 RELATED WORK Iwamoto <ref> (Iwamoto, 1994) </ref> has developed an extension to prodigy to solve optimization problems and an EBL method to learn control rules to find near-optimal solutions in LSI design.
Reference: <author> Katukam, S. and Kambhampati, S. </author> <year> (1994). </year> <title> Learning explanation-based search control rules for partial order planning. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence, </booktitle> <pages> pages 582-587, </pages> <address> Seattle, WA. </address> <publisher> AAAI Press/The MIT Press. </publisher>
Reference: <author> Knoblock, C. A. </author> <year> (1994). </year> <title> Automatically generating abstractions for planning. </title> <journal> Artificial Intelligence, </journal> <volume> 68. </volume>
Reference: <author> Minton, S. </author> <year> (1988). </year> <title> Learning Effective Search Control Knowledge: An Explanation-based Approach. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, MA. </address> <note> PhD thesis available as Technical Report CMU-CS-88-133, </note> <institution> School of Computer Science, Carnegie Mellon University, </institution> <address> Pitts-burgh, PA. </address>
Reference: <author> Minton, S., Carbonell, J. G., Knoblock, C. A., Kuokka, D. R., Etzioni, O., and Gil, Y. </author> <year> (1989). </year> <title> Explanation-based learning: A problem-solving perspective. </title> <journal> Artificial Intelligence, </journal> <volume> 40 </volume> <pages> 63-118. </pages>
Reference: <author> Mitchell, T. M., Keller, R., and Kedar-Cabelli, S. </author> <year> (1986). </year> <title> Explanation-based generalization: A unifying view. </title> <journal> Machine Learning, </journal> <volume> 1(1). </volume>
Reference: <author> Perez, M. A. </author> <year> (1995). </year> <title> Learning search control knowledge to improve plan quality. </title> <type> Technical Report CMU-CS-95-175, </type> <institution> School of Computer Science, Carnegie Mel-lon University, Pittsburgh, PA. </institution> <type> PhD thesis. </type>
Reference-contexts: a better plan is found. 3 quality then analyzes the differences between the sequence of decisions that the planner made initially and the ones 1 By search trace we mean the sequence of decisions made during planning. 2 We have developed an interactive plan checker to fa cilitate the interaction <ref> (Perez, 1995) </ref>. 3 Large search spaces in complex domains can make this computationally very expensive. that should have been made to generate the plan of better quality. <p> Details of the learning algorithm can be found in <ref> (Perez, 1995) </ref>. (control-rule pref-drill-with-spot-drill-in-milling-machine30 (if (and (current-goal (has-spot &lt;part&gt; &lt;hole&gt; &lt;side&gt; &lt;loc-x&gt; &lt;loc-y&gt;)) (pending-goal (holding &lt;mach&gt; &lt;holding-dev&gt; &lt;part&gt; &lt;side&gt; &lt;side-pair&gt;)) (type-of-object &lt;mach&gt; milling-machine))) (then prefer operator drill-with-spot-drill-in-milling-machine drill-with-spot-drill)) 5 CONTROL KNOWLEDGE TREES Search control rules apply to individual decision points and make local decisions. <p> In the first episode, the holding subgoal was true in the initial state and needed not to be achieved. In the second episode that was not the case and further work (represented by the subtree below holding) was needed. The cktree learning algorithm is described in detail in <ref> (Perez, 1995) </ref>. The cktrees are used to suggest operators and their in-stantiations for the goals and subgoals that appear in the cktree by estimating the quality of each alternative for the current situation and quality metric. <p> When several alternatives are available, the first one is initially explored and the rest are stored to be explored later. All the alternatives must be explored to find the one with the better quality estimate, but our algorithm includes techniques to limit the effort <ref> (Perez, 1995) </ref>. The basic traversal procedure just described is invoked by the top-level procedure in Figure 6. This procedure is used by the planner when it must choose operator and bindings to achieve a goal G. First the relevant ck-tree is found and its root is instantiated for the goal. <p> The experiments also showed that the learned knowledge does not degrade considerably planning efficiency; in fact it improves it in many cases due to shorter solutions. <ref> (Perez, 1995) </ref> reports detailed results of these experiments. Metric Q 2 of Table 1 requires reasoning about tradeoffs between the cost of setting up the work on different machines and the cost of using those machines to perform the operation. <p> Still small increases in quality in this domain lead to large economical savings, as when a plan will be executed multiple times. Cktrees also achieved significant quality improvements in a small transportation domain <ref> (Perez, 1995) </ref>.
Reference: <author> Perez, M. A. and Etzioni, O. </author> <year> (1992). </year> <title> DYNAMIC: A new role for training problems in EBL. </title> <editor> In Sleeman, D. and Edwards, P., editors, </editor> <booktitle> Machine Learning: Proceedings of the Ninth International Conference, ML92, </booktitle> <pages> pages 367-372. </pages> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA. </address>
Reference: <author> Perlin, M. W. </author> <year> (1988). </year> <title> Transforming programs into networks: Call-Graph Caching, applications, and examples. </title> <type> Technical Report CMU-CS-88-202, </type> <institution> School of Computer Science, Carnegie Mellon University. </institution>
Reference-contexts: In Steps 6-8 the previous and current alternatives are compared to determine which parts of the cktree will not change their estimates therefore allowing the reuse of the cached values. This reuse is similar to the state-saving incremental techniques for minimal recomputation in network programs in <ref> (Perlin, 1988) </ref>. Finally the choice of operator and bindings with the better estimate is returned and planning continues after comitting to that choice.
Reference: <author> Tadepalli, P. </author> <year> (1989). </year> <title> Lazy explanation-based learning: A solution to the intractable theory problem. </title> <booktitle> In Proceedings of the Eleventh International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 694-700, </pages> <address> Detroit, MI. </address>
Reference: <author> Veloso, M., Carbonell, J., Perez, M. A., Borrajo, D., Fink, E., and Blythe, J. </author> <year> (1995). </year> <title> Integrating planning and learning: The PRODIGY architecture. </title> <journal> Journal of Experimental and Theoretical Artificial Intelligence, </journal> <volume> 7(1). </volume>
Reference-contexts: Our method however makes use of the quality evaluation function to build the explanation, and learns in addition bindings and goal preference rules. Iwamoto's method does not allow user guidance as it uses exhaustive search until the quality goal is satisfied to find the best solution. hamlet <ref> (Veloso et al., 1995) </ref> learns control rules that improve both planning efficiency and also the quality (length) of the plans generated, by a combination of bounded explanation and induction.
Reference: <author> Veloso, M. M. </author> <year> (1994). </year> <title> Planning and Learning by Analogical Reasoning. </title> <publisher> Springer Verlag, </publisher> <address> Berlin, Germany. </address> <note> PhD thesis available as technical report CMU-CS-92-174, </note> <institution> School of Computer Science, Carnegie Mellon University, </institution> <address> Pittsburgh, PA. </address>
Reference-contexts: Thus a desirable property of quality-enhancing control knowledge would be its robustness to changes in the quality metric. A way to achieve such robustness is by expressing explicitly and parameterizing the quality metric in the control knowledge. 4 Partial matching and adaptation is a key feature in case-based reasoners <ref> (Veloso, 1994) </ref>. This analysis of the characteristics of the learned control rules lead us to develop control knowledge trees, a new formalism for control knowledge representation.
References-found: 17

