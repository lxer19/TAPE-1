URL: http://www.icsi.berkeley.edu/ftp/global/pub/techreports/1994/tr-94-029.ps.gz
Refering-URL: http://www.icsi.berkeley.edu/ftp/global/pub/techreports/1994/
Root-URL: http://www.icsi.berkeley.edu
Title: Efficient Approximation Algorithms for Sparse Polynomials over Finite Fields  
Author: Marek Karpinski Igor Shparlinski 
Date: August, 1994  
Pubnum: TR-94-029  
Abstract: We obtain new lower bounds on the number of non zeros of sparse polynomials and give a fully polynomial time (*; ffi) approximation algorithm for the number of non-zeros of multivariate sparse polynomials over a finite field of q elements and degree less than q 1. This answers partially to an open problem of D. Grigoriev and M. Karpinski. Also, probabilistic and deterministic algorithms for testing identity to zero of a sparse polynomial given by a "black-box" are given. Finally, we propose an algorithm to estimate the size of the image of a univariate sparse polynomial. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Adleman, L.M., Lenstra, H.W., </author> <title> Finding Irreducible Polynomials over Finite Fields, </title> <booktitle> in Proc. 18 th ACM Symp. on Theory of Comp., </booktitle> <year> 1986, </year> <pages> pp. 350-355. </pages>
Reference-contexts: There are many other fast algorithms as well. Moreover, as in fact everywhere, we need only to have an extension of degree l exceeding some lower bound L 0 (rather than satisfying the following stronger condition l = L 0 ) we can use an algorithm of <ref> [1] </ref> that for any L 0 in polynomial time (L 0 log q) O (1) constructs an extension F q l of degree l with L 0 l cL 0 log q where c &gt; 0 is an effectively computable absolute constant.
Reference: [2] <author> Clausen, M., Dress, A. Grabmeier, J., Karpinski, M., and Singer , M., </author> <title> On Zero-Testing and Interpolation of k-Sparse Multivariate Polynomials over Finite Fields, </title> <journal> in SIAM J. on Comput. </journal> <volume> 19, </volume> <year> 1990, </year> <pages> pp. 1059-1063. </pages>
Reference-contexts: It gives a polynomial time approximation algorithm even in case of growing q (the previous one needs q to be fixed as contains log q in the exponent). Then we consider a related question about the zero-testing of t-sparse multivari-ate polynomials over F q in the black-box model of <ref> [2] </ref>, [5], [16]. For the case on a non-prime field we obtain several improvements of previously known results. It is hoped they can be applied to the more general problem of polynomial interpolation. <p> Note that several deterministic algorithms are known for this problem but for q growing all of them are exponential with respect to q (see <ref> [2] </ref>, [5], [16]). All these algorithms are based on evaluations of the polynomial in several points over some extension F q l computed from a primitive root of this field. So, in order to get an effective algorithm we should find a primitive root firstly. <p> In particular, we show below (see Theorem 5) that in the case when q is a power of a fixed prime number (say q = 2 r ) Theorem 2.3 of <ref> [2] </ref> leads to a polynomial time algorithm and moreover it enables us to improve the results of [5] with respect to the power of q in the estimate of the number of processors (at for non-prime fields). Theorem 6 Let F q be of characteristic p. <p> It follows from Theorem 2.3 of <ref> [2] </ref> that f is identical to zero if and only if f (0; : : : ; 0) = 0 and f ( i ; iq l ) = 0; i = 0; : : : ; t 1. <p> Let us mention that the results above are new even for "large" p (say when q = p 2 ) and give improvements of the corresponding tests from <ref> [2] </ref>, [5], [16]. Also they can be implemented in parallel. It seems that the estimate of [10] leads to the construction of the corresponding set M (containing a primitive root) of size p 1=2 (m log d log q) O (1) in time of the same order.
Reference: [3] <author> Grigoriev, D., Karpinski, M., </author> <title> An Approximation Algorithm for the Number of Zeros of Arbitrary Polynomials over GF (q), </title> <booktitle> in Proc. 32 nd Ann. Symp. on Found. of Comp. Sci., </booktitle> <year> 1991, </year> <pages> pp. 662-669. 9 </pages>
Reference-contexts: Introduction In the recent paper <ref> [3] </ref> (improving and generalizing some previous results of [4], [6], [9]) lower bounds have been obtained for the number of zeros and non-zeros of a t-sparse multivariate polynomial over a finite field F q of q elements. As it was mentioned in [3] there is no real chance to improve essentially <p> Introduction In the recent paper <ref> [3] </ref> (improving and generalizing some previous results of [4], [6], [9]) lower bounds have been obtained for the number of zeros and non-zeros of a t-sparse multivariate polynomial over a finite field F q of q elements. As it was mentioned in [3] there is no real chance to improve essentially the lower bound for the number of zeros (as it would imply a randomized subexponential algorithm for the famous 3-SAT problem) but an analogous question for the number of non zeros was posed as an open problem. <p> Here we show that indeed for a very wide class of polynomials a lower bound of the conjectured in <ref> [3] </ref> type holds. We show that, roughly speaking, the density of non-zeros is at least t 1 rather than t log q as in [3]. <p> Here we show that indeed for a very wide class of polynomials a lower bound of the conjectured in <ref> [3] </ref> type holds. We show that, roughly speaking, the density of non-zeros is at least t 1 rather than t log q as in [3]. Note that for arbitrary polynomials (i.e. when degrees up to q 1 are allowed) the mentioned lower bound t log q cannot be possibly sharpened (see the remark after Theorem 2 of [3]). <p> speaking, the density of non-zeros is at least t 1 rather than t log q as in <ref> [3] </ref>. Note that for arbitrary polynomials (i.e. when degrees up to q 1 are allowed) the mentioned lower bound t log q cannot be possibly sharpened (see the remark after Theorem 2 of [3]). Of course the obtained improvement immediately leads to an improved Monte-Carlo aproximation algorithm for the number of non-zeros of a t-sparse polynomial and to an RNC-algorithm for testing identity to zero of a sparse polynomials given by a "black-box". <p> As in <ref> [3] </ref>, [8], denote by G (f ) the set of of (a 1 ; : : : ; a m ) 2 [F q ] m for which at least one of the monomials containing in the representation of f is not equal to zero. <p> Unfortunately, our restriction on the degree deg f q 2 does not allow us to consider a more interesting and important question about the number of zeros of a polynomial (the standard reduction use an auxiliary polynomial F = f q1 1, see [4], <ref> [3] </ref>, [8]). Moreover, as we have mentioned, it was shown in [3] that without some other restriction on f their estimate cannot be improved. On the other hand we conjecture that in this special case of polynomial of the shape f q1 1 the result of [3] is not sharp. 4 <p> degree deg f q 2 does not allow us to consider a more interesting and important question about the number of zeros of a polynomial (the standard reduction use an auxiliary polynomial F = f q1 1, see [4], <ref> [3] </ref>, [8]). Moreover, as we have mentioned, it was shown in [3] that without some other restriction on f their estimate cannot be improved. On the other hand we conjecture that in this special case of polynomial of the shape f q1 1 the result of [3] is not sharp. 4 2 Zero Testing of Sparse Polynomials A t-sparse polynomial f of <p> q1 1, see [4], <ref> [3] </ref>, [8]). Moreover, as we have mentioned, it was shown in [3] that without some other restriction on f their estimate cannot be improved. On the other hand we conjecture that in this special case of polynomial of the shape f q1 1 the result of [3] is not sharp. 4 2 Zero Testing of Sparse Polynomials A t-sparse polynomial f of degree deg f d in m variables over F q is said to be given by a "black-box" if in any point over any extension F q l ; l = 1; 2; : :
Reference: [4] <author> Grigoriev, D., Karpinski, M., </author> <title> Lower Bounds for the Number of Zeros of Multi--variate Polynomials over GF (q), </title> <institution> Research Report No.8569-CS, Univ. of Bonn, </institution> <year> 1991. </year>
Reference-contexts: Introduction In the recent paper [3] (improving and generalizing some previous results of <ref> [4] </ref>, [6], [9]) lower bounds have been obtained for the number of zeros and non-zeros of a t-sparse multivariate polynomial over a finite field F q of q elements. <p> Unfortunately, our restriction on the degree deg f q 2 does not allow us to consider a more interesting and important question about the number of zeros of a polynomial (the standard reduction use an auxiliary polynomial F = f q1 1, see <ref> [4] </ref>, [3], [8]). Moreover, as we have mentioned, it was shown in [3] that without some other restriction on f their estimate cannot be improved.
Reference: [5] <author> Grigoriev, D., Karpinski, M., and Singer, M., </author> <title> Fast Parallel Algorithm for Sparse Multivariate Polynomials over Finite Fields, </title> <journal> in SIAM J. Comput. </journal> <volume> 19, </volume> <year> 1990, </year> <pages> pp. 1059-1063. </pages>
Reference-contexts: Then we consider a related question about the zero-testing of t-sparse multivari-ate polynomials over F q in the black-box model of [2], <ref> [5] </ref>, [16]. For the case on a non-prime field we obtain several improvements of previously known results. It is hoped they can be applied to the more general problem of polynomial interpolation. <p> Note that several deterministic algorithms are known for this problem but for q growing all of them are exponential with respect to q (see [2], <ref> [5] </ref>, [16]). All these algorithms are based on evaluations of the polynomial in several points over some extension F q l computed from a primitive root of this field. So, in order to get an effective algorithm we should find a primitive root firstly. <p> In particular, we show below (see Theorem 5) that in the case when q is a power of a fixed prime number (say q = 2 r ) Theorem 2.3 of [2] leads to a polynomial time algorithm and moreover it enables us to improve the results of <ref> [5] </ref> with respect to the power of q in the estimate of the number of processors (at for non-prime fields). Theorem 6 Let F q be of characteristic p. <p> Let us mention that the results above are new even for "large" p (say when q = p 2 ) and give improvements of the corresponding tests from [2], <ref> [5] </ref>, [16]. Also they can be implemented in parallel. It seems that the estimate of [10] leads to the construction of the corresponding set M (containing a primitive root) of size p 1=2 (m log d log q) O (1) in time of the same order. <p> In this case we would get an improvement of the zero-identity test of <ref> [5] </ref> with respect to the number of processors beginning from q = p (p 1=2 rather than p). 3 Image-Size of Sparse Polynomials Here we consider the following question. Let f be a t-sparse univariate polynomial over F q and let we are given an integer number I &gt; 0.
Reference: [6] <author> Karp, R., Luby, M., and Madras, N., </author> <title> Monte-Carlo Approximation Algorithms for Enumeration Problems, </title> <editor> in J. </editor> <booktitle> of Algorithms 10, </booktitle> <year> 1989, </year> <pages> pp. 429-448. </pages>
Reference-contexts: Introduction In the recent paper [3] (improving and generalizing some previous results of [4], <ref> [6] </ref>, [9]) lower bounds have been obtained for the number of zeros and non-zeros of a t-sparse multivariate polynomial over a finite field F q of q elements. <p> Using the estimate of Theorem 2, and the efficient construction of the set G (f ) from [8] one gets the pointed out algorithm (see <ref> [6] </ref>). fl Also, as in [8], one can get a parallel version of the last algorithm. <p> Choosing N = b4t log (1=ffi)c + 1 points from [F fl q l ] m at random in parallel and using the estimate of Theorem 1 (as d q l ), one gets the desired algorithm (see <ref> [6] </ref>). fl Taking into account the remarks about constructing finite fields, in particular, the estimate (2), we get the following probabilistic polynomial-time test. <p> The question is: in the second case, can one use a Monte Carlo algorithm to estimate jI (f )j (note that the results of <ref> [6] </ref> cannot be applied directly).
Reference: [7] <author> Karpinski, M., </author> <title> Boolean Circuit Complexity of Algebraic Interpolation Problems, </title> <booktitle> in Lecture Notes in Computer Science 385, </booktitle> <publisher> Spinger-Verlag, </publisher> <year> 1989, </year> <pages> pp. 138-147. </pages>
Reference: [8] <author> Karpinski, M., Lhotzky, B., </author> <title> An (*; ffi)-Approximation Algorithm of the Number of Zeros for a Multilinear Polynomial over GF (q), </title> <type> Preprint TR-91-022, </type> <institution> International Computer Science Institute (ICSI), Berkeley, California. </institution>
Reference-contexts: As in [3], <ref> [8] </ref>, denote by G (f ) the set of of (a 1 ; : : : ; a m ) 2 [F q ] m for which at least one of the monomials containing in the representation of f is not equal to zero. <p> Using the estimate of Theorem 2, and the efficient construction of the set G (f ) from <ref> [8] </ref> one gets the pointed out algorithm (see [6]). fl Also, as in [8], one can get a parallel version of the last algorithm. <p> Using the estimate of Theorem 2, and the efficient construction of the set G (f ) from <ref> [8] </ref> one gets the pointed out algorithm (see [6]). fl Also, as in [8], one can get a parallel version of the last algorithm. <p> Unfortunately, our restriction on the degree deg f q 2 does not allow us to consider a more interesting and important question about the number of zeros of a polynomial (the standard reduction use an auxiliary polynomial F = f q1 1, see [4], [3], <ref> [8] </ref>). Moreover, as we have mentioned, it was shown in [3] that without some other restriction on f their estimate cannot be improved.
Reference: [9] <author> Karpinski, M., Luby, M., </author> <title> Approximating the Number of Zeros for a GF (2) polynomial, </title> <editor> in J. </editor> <booktitle> of Algorithms 14, </booktitle> <year> 1993, </year> <pages> pp. 280-287. </pages>
Reference-contexts: Introduction In the recent paper [3] (improving and generalizing some previous results of [4], [6], <ref> [9] </ref>) lower bounds have been obtained for the number of zeros and non-zeros of a t-sparse multivariate polynomial over a finite field F q of q elements.
Reference: [10] <author> Perelmuter, G.I., Shparlinski, I., </author> <title> On the Distribution of Primitive Roots in Finite Fields, (Russian), </title> <booktitle> in Uspechi Matem. </booktitle> <volume> Nauk 45 (1), </volume> <year> 1990, </year> <pages> pp. 185-186. </pages>
Reference-contexts: Let us mention that the results above are new even for "large" p (say when q = p 2 ) and give improvements of the corresponding tests from [2], [5], [16]. Also they can be implemented in parallel. It seems that the estimate of <ref> [10] </ref> leads to the construction of the corresponding set M (containing a primitive root) of size p 1=2 (m log d log q) O (1) in time of the same order.
Reference: [11] <author> Shoup, V., </author> <title> Fast Construction of Irreducible Polynomials over Finite Fields, </title> <journal> to appear in J. Symb. Comp. </journal> <volume> 3, </volume> <pages> pp. 1-17. </pages>
Reference-contexts: Theorem 4 below we may use the probabilistic algorithm from [12] with expected number of O (l 2 log 2 l log log l + l log q log l log log l) arithmetical operations over F q , as for Theorem 5 we may apply the deterministic algorithm from <ref> [11] </ref> using l 4 p 1=2 (log l log q) O (1) arithmetical operations over F q where p is the characteristic of F q (thus it is a polynomial time algorithm for fields of small characteristic). There are many other fast algorithms as well.
Reference: [12] <author> Shoup, V., </author> <title> New Algorithms for Finding Irreducible Polynomials over Finite Fields, </title> <journal> in Math. Comp. </journal> <volume> 54 (189), </volume> <year> 1990, </year> <pages> pp. 435-447. </pages>
Reference-contexts: Indeed, during recent years a very substantial progress in this area has been achieved (for a survey see Chapter 2 of [14]). Say for the field of Theorem 4 below we may use the probabilistic algorithm from <ref> [12] </ref> with expected number of O (l 2 log 2 l log log l + l log q log l log log l) arithmetical operations over F q , as for Theorem 5 we may apply the deterministic algorithm from [11] using l 4 p 1=2 (log l log q) O <p> Proof. Firstly let us construct the field F q k where k = lm; l = dlog (d + 2)= log qe by using the algorithm of <ref> [12] </ref>, in time O p 1=2 (m log d log q) O (1) (see (1)).
Reference: [13] <author> Shoup, V., </author> <title> Searching for Primitive Roots in Finite Fields, </title> <journal> in Math. Comp. </journal> <volume> 58 (197), </volume> <year> 1992, </year> <pages> pp. 369-380. </pages>
Reference-contexts: Proof. Firstly let us construct the field F q k where k = lm; l = dlog (d + 2)= log qe by using the algorithm of [12], in time O p 1=2 (m log d log q) O (1) (see (1)). Then the algorithms of <ref> [13] </ref> and of [15] (see also Chapter 2 of [14]), in time p (m log d log q) O (1) construct a set M 2 F q k of size jMj = p (m log d log q) O (1) and containing a primitive root of F q k .
Reference: [14] <author> Shparlinski, I., </author> <title> Computational and Algorithmic Problems in Finite Fields, </title> <publisher> Kluwer AP, </publisher> <address> The Netherlands, </address> <year> 1992. </year>
Reference-contexts: Indeed, during recent years a very substantial progress in this area has been achieved (for a survey see Chapter 2 of <ref> [14] </ref>). <p> Then the algorithms of [13] and of [15] (see also Chapter 2 of <ref> [14] </ref>), in time p (m log d log q) O (1) construct a set M 2 F q k of size jMj = p (m log d log q) O (1) and containing a primitive root of F q k .
Reference: [15] <author> Shparlinski, I., </author> <title> On Primitive Elements in Finite Fields and on Elliptic Curves, (Russian), </title> <booktitle> in Matem. </booktitle> <volume> Sbornik 181 (9), </volume> <year> 1990, </year> <pages> p. 1196-1206. </pages>
Reference-contexts: Proof. Firstly let us construct the field F q k where k = lm; l = dlog (d + 2)= log qe by using the algorithm of [12], in time O p 1=2 (m log d log q) O (1) (see (1)). Then the algorithms of [13] and of <ref> [15] </ref> (see also Chapter 2 of [14]), in time p (m log d log q) O (1) construct a set M 2 F q k of size jMj = p (m log d log q) O (1) and containing a primitive root of F q k .
Reference: [16] <author> Werther, K., </author> <title> The Computational Complexity of Interpolationg Sparse Multivari-ate Polynomials over Finite Fields Research Report No.8577-CS, </title> <institution> University of Bonn, </institution> <year> 1992. </year> <month> 10 </month>
Reference-contexts: Then we consider a related question about the zero-testing of t-sparse multivari-ate polynomials over F q in the black-box model of [2], [5], <ref> [16] </ref>. For the case on a non-prime field we obtain several improvements of previously known results. It is hoped they can be applied to the more general problem of polynomial interpolation. <p> Note that several deterministic algorithms are known for this problem but for q growing all of them are exponential with respect to q (see [2], [5], <ref> [16] </ref>). All these algorithms are based on evaluations of the polynomial in several points over some extension F q l computed from a primitive root of this field. So, in order to get an effective algorithm we should find a primitive root firstly. <p> Let us mention that the results above are new even for "large" p (say when q = p 2 ) and give improvements of the corresponding tests from [2], [5], <ref> [16] </ref>. Also they can be implemented in parallel. It seems that the estimate of [10] leads to the construction of the corresponding set M (containing a primitive root) of size p 1=2 (m log d log q) O (1) in time of the same order.
References-found: 16

