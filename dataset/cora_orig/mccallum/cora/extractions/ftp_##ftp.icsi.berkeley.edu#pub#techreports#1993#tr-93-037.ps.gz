URL: ftp://ftp.icsi.berkeley.edu/pub/techreports/1993/tr-93-037.ps.gz
Refering-URL: http://www.icsi.berkeley.edu/techreports/1993.html
Root-URL: http://www.icsi.berkeley.edu
Title: An Algorithm to Learn Read- Once Threshold Formulas, and some Generic Transformations between Learning Models
Author: Nader H. Bshouty Thomas R. Hancock Lisa Hellerstein Marek Karpinski 
Date: July 1993  
Pubnum: TR-93-037  
Abstract: We present a membership query (i.e. black box interpolation) algorithm for exactly identifying the class of read-once formulas over the basis of boolean threshold functions. We also present a catalogue of generic transformations that can be used to convert an algorithm in one learning model into an algo rithm in a different model. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Angluin. </author> <title> Queries and concept learning. </title> <booktitle> In Machine Learning, </booktitle> <volume> 2 </volume> <pages> 319-342, </pages> <year> 1987. </year>
Reference-contexts: This is also shown to hold when equivalence queries are allowed, so MJE (U)!ME (M) also exists. In contrast, we show that the reverse of the MJ!ME transformation does not exist in general. We prove that a class of formulas presented presented by Angluin <ref> [1] </ref> can be learned in polynomial time in the model of membership and equivalence queries but not in the model of membership queries and justifying assignments. <p> equivalence queries, and produces a membership and equivalence algorithm whose running time and number of membership and equivalence queries are each a factor of O (n) greater than for the original (transformed) algorithm. 4.3 ME!MJ does not exist We describe a class of monotone DNF formulas (used originally by Angluin <ref> [1] </ref>) for which there exists a polynomial time membership and equivalence query learning algorithm, but for which no polynomial time membership query and justifying assignment algorithm exists.
Reference: [2] <author> D. Angluin, L. Hellerstein, and M. Karpinski. </author> <title> Learning read-once formulas with queries. </title> <journal> In Journal of the Association for Computing Machinery, </journal> <volume> 40 </volume> <pages> 185-210, </pages> <year> 1993. </year>
Reference-contexts: There are only a few non-trivial boolean concept classes that are known to be learnable in polynomial time with membership queries. One example is the class of (monotone) read-once formulas over the basis (AND, OR) <ref> [2] </ref>. A formula is read-once if no variable appears more than once. The basis of a formula is the set of operators allowed. <p> Such transformations can be regarded as reductions, in that they reduce the problem of designing an algorithm in one learning model into the problem of designing an algorithm in another learning model. Angluin, Hellerstein, and Karpinski <ref> [2] </ref> applied a generic transformation to convert their algorithm for exactly identifying (i.e. interpolating) the class of monotone read-once formulas over (AND,OR) into a polynomial time membership and equivalence query algorithm for the non-monotone case (read-once formulas over (AND,OR,NOT)). (An equivalence query allows the learner to propose a complete hypothesis for <p> In this paper we present a more extensive set of generic transformations. As in the <ref> [2] </ref> transformation, in these transformations we typically assume the technical 2 condition that the classes being learned are projection closed (a class of functions is projection closed if taking any function in the class and "hard-wiring" a subset of input variables to specific values gives a function that is still in <p> The membership and equivalence query research began with the above mentioned algorithm for read-once formulas over the (AND,OR,NOT) basis <ref> [2] </ref> and culminated with a polynomial time algorithm to identify read-once formulas over the more general basis of arbitrary symmetric and constant fan-in gates [5]. <p> However, the algorithm obtained by the transformation is a factor of n less efficient than the one presented in this paper, which is the most efficient known. The first transformation we present, M (M)!MJ (U), is a variation of a simple transformation presented in <ref> [2] </ref>. It converts a membership query algorithm for learning a monotone class into a membership query and justifying assignments algorithm for learning the corresponding unate class. <p> We then present a second transformation, MJ!ME which converts an algorithm for learning a class of formulas in the membership and justifying assignments model, into an algorithm for learning the same class of formulas in the membership and equivalence query model. The main transformation presented in <ref> [2] </ref> is M (M)!ME (U) (Membership query algorithm for monotone class ! Membership and equivalence query algorithm for unate class). By combining the M (M)!MJ (U) transformation with the MJ!ME transformation, we get an M (M)!ME (U) transformation which is slightly different from the one presented in [2]. As in [2], <p> transformation presented in <ref> [2] </ref> is M (M)!ME (U) (Membership query algorithm for monotone class ! Membership and equivalence query algorithm for unate class). By combining the M (M)!MJ (U) transformation with the MJ!ME transformation, we get an M (M)!ME (U) transformation which is slightly different from the one presented in [2]. As in [2], we also show that these transformations can be modified to include equivalence queries in the base and target models of the transformation (i.e. we argue that transformations of the form ME (M)!MJE (U), MJE!ME, and hence ME (M)!ME (U) all exist). <p> <ref> [2] </ref> is M (M)!ME (U) (Membership query algorithm for monotone class ! Membership and equivalence query algorithm for unate class). By combining the M (M)!MJ (U) transformation with the MJ!ME transformation, we get an M (M)!ME (U) transformation which is slightly different from the one presented in [2]. As in [2], we also show that these transformations can be modified to include equivalence queries in the base and target models of the transformation (i.e. we argue that transformations of the form ME (M)!MJE (U), MJE!ME, and hence ME (M)!ME (U) all exist). <p> We conclude with a detailed description of the algorithm and with a theorem stating its correctness and complexity. 7 3.1 Finding Minterms and Maxterms Our algorithm for learning monotone read-once threshold formulas makes repeated use of the standard greedy procedure (see e.g. <ref> [2] </ref>) for finding minterms of a monotone function f defined on V n , using a membership oracle for f . This procedure Findmin takes as input a subset of variables Q V n containing a minterm of f , and outputs a minterm contained in Q. <p> Proof: The class of read-once threshold formulas is the unate extension of the class of monotone read-once threshold formulas. The theorem follows directly from the results of Angluin, Hellerstein and Karpinski <ref> [2] </ref>, who showed that if a class M can be learned in time O (n ff ) with O (n fi ) membership queries, then the corresponding unate class can be learned in time O (n ff+1 ) with O (n fi+1 ) membership queries, and O (n) equivalence queries. fl <p> Therefore, if A X 0 = 1 then the sign of X is negative, and if A X 0 = 0 then the sign of X is positive. To determine the sign of X, it therefore suffices to ask the membership query A X 0 . In <ref> [2] </ref>, a simple transformation is presented. It converts an algorithm for learning a monotone class with membership queries into an algorithm for learning the corresponding unate class with membership queries, given the signs of the variables in the target formula as input. <p> A simple variation, handling equivalence queries, is also described. By combining the procedure described above for finding the signs of the variables, with the simple transformation from <ref> [2] </ref> which takes the signs as input, we get a method for transforming an algorithm that identifies a monotone class using membership (and equivalence) queries, into one that identifies the corresponding unate class using membership (and equivalence) queries and justifying assignments. <p> Call ProjBitFlip (V 0 , P , B, S). Set V 0 , P and S to the values W , P 0 and S 0 returned by ProjBitFlip. Applying techniques from <ref> [2] </ref>, we show that a modified version of ToME works if the input algorithm uses equivalence queries as well as membership queries and justifying assignments.
Reference: [3] <author> Nader H. Bshouty, Sally A. Goldman, Thomas R. Hancock, and Sleiman Matar. </author> <title> Asking questions to minimize errors. </title> <booktitle> In The 1993 Workshop on Computational Learning Theory. </booktitle>
Reference-contexts: We do not know whether these transformations are optimal in the sense that alternate reductions may be discoverable that use fewer queries and less time. Recently an alternate version of the MJ!ME transformation has 25 been developed that uses a factor of log n fewer equivalence queries <ref> [3] </ref>, but that uses more membership queries and running time. Even assuming we have optimal transformations, for the more difficult transformations we do not know whether optimal algorithms in the base model can yield optimal algorithms in the target model.
Reference: [4] <author> Nader H. Bshouty, Thomas R. Hancock, and Lisa Hellerstein. </author> <title> Learning arithmetic read-once formulas. </title> <booktitle> In Proceedings of the 24th Annual ACM Symposium on the Theory of Computing, </booktitle> <year> 1992. </year>
Reference-contexts: We note that for some classes of formulas (including the restricted classes of read-once formulas discussed by Goldman, Kearns, and Schapire [6], and the arithmetic read-once formulas discussed by Bshouty, Hancock, and Hellerstein <ref> [4] </ref>), justifying assignments can be generated with high probability using random membership queries. For such classes, it is trivial to transform a learning algorithm using membership queries and justifying assignments into an algorithm that interpolates (with high probability) using deterministic and random membership queries.
Reference: [5] <author> Nader H. Bshouty, Thomas R. Hancock, and Lisa Hellerstein. </author> <title> Learning boolean read-once formulas with arbitrary symmetric and constant fan-in gates. </title> <booktitle> In The 1992 Workshop on Computational Learning Theory, </booktitle> <year> 1992. </year> <note> To appear in JCSS. </note>
Reference-contexts: The membership and equivalence query research began with the above mentioned algorithm for read-once formulas over the (AND,OR,NOT) basis [2] and culminated with a polynomial time algorithm to identify read-once formulas over the more general basis of arbitrary symmetric and constant fan-in gates <ref> [5] </ref>. Those results rely heavily on algorithms that are initially designed in the membership and justifying assignments model, and then converted to the membership and equivalence query model using a generic transformation (MJ!ME, described below) that is presented in this paper. The algorithm of [5] includes as a subcase a polynomial <p> arbitrary symmetric and constant fan-in gates <ref> [5] </ref>. Those results rely heavily on algorithms that are initially designed in the membership and justifying assignments model, and then converted to the membership and equivalence query model using a generic transformation (MJ!ME, described below) that is presented in this paper. The algorithm of [5] includes as a subcase a polynomial time algorithm using membership and equivalence queries for learning (not necessarily monotone) read-once boolean threshold formulas, that is, read-once formulas over the basis of boolean threshold functions and negations.
Reference: [6] <author> Sally A. Goldman, Michael J. Kearns, and Robert E. Schapire. </author> <title> Exact identification of circuits using fixed points of amplification functions. </title> <booktitle> In Proceedings of the 31st Symposium on Foundations of Computer Science, </booktitle> <year> 1990. </year>
Reference-contexts: We note that for some classes of formulas (including the restricted classes of read-once formulas discussed by Goldman, Kearns, and Schapire <ref> [6] </ref>, and the arithmetic read-once formulas discussed by Bshouty, Hancock, and Hellerstein [4]), justifying assignments can be generated with high probability using random membership queries.
Reference: [7] <author> R. Heiman, I. Newman, A. Wigderson, </author> <title> On Read Once Threshold Formulas and their Randomized Decision Tree Complexity. </title> <booktitle> In IEEE Symp. on Structures in Complexity 1990, </booktitle> <pages> pp. 78-87. 27 </pages>
Reference-contexts: The class of read-once formulas over the basis of boolean threshold and negation was previously studied by Heiman, Newman, and Wigderson <ref> [7] </ref> .
References-found: 7

