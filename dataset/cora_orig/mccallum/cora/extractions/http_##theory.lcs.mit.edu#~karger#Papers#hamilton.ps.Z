URL: http://theory.lcs.mit.edu/~karger/Papers/hamilton.ps.Z
Refering-URL: http://www.ing.unlp.edu.ar/cetad/mos/Hamilton.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: On Approximating the Longest Path in a Graph  
Author: David Karger Rajeev Motwani G.D.S. Ramkumar 
Note: Supported an NSF Graduate Fellowship, NSF Grant CCR-9010517, and grants from Mitsubishi Corpo ration and OTL. Supported by NSF Grant CCR-9010517, Mitsubishi Corporation, and NSF Young Investigator Award CCR-9357849, with matching funds from IBM, Schlumberger Foundation and Shell Foundation.. Supported by a grant from Toshiba Corporation.  
Address: Stanford, CA 94305  
Affiliation: Department of Computer Science Stanford University  
Abstract: We consider the problem of approximating the longest path in undirected graphs. In an attempt to pin down the best achievable performance ratio of an approximation algorithm for this problem, we present both positive and negative results. First, a simple greedy algorithm is shown to find long paths in dense graphs. We then consider the problem of finding paths in graphs which are guaranteed to have extremely long paths. We devise an algorithm which finds paths of a logarithmic length in Hamiltonian graphs. This algorithm works for a much larger class of graphs (weakly Hamiltonian), where the result is the best possible. Since the hard case appears to be that of sparse graphs, we also consider sparse random graphs. Here we show that a relatively long path can be obtained, thereby partially answering an open problem of Broder, Frieze and Shamir. To explain the difficulty of obtaining better approximations, we prove some strong hardness results. We show that, for any * &lt; 1, the problem of finding a path of length nn * in an n-vertex Hamiltonian graph is NP-hard. Then we demonstrate a self-improvability result for the longest path problem in arbitrary graphs, and thereby obtain that no polynomial time algorithm can find a constant factor approximation to the longest path problem unless P = NP. We conjecture that the result can be strengthened to say that for some constant ffi &gt; 0, finding an approximation of ratio n ffi is also NP-hard. As evidence towards this conjecture, we show that if any polynomial time algorithm can approximate the longest path to a ratio of 2 O(log 1* n) , for any * &gt; 0, then NP has a quasi-polynomial deterministic time simulation. The hardness results apply even to the special case where the input consists of bounded degree graphs. Key words. long paths, Hamiltonian paths, approximation algorithms, complexity theory, random graphs. AMS(MOS) subject classifications. 68Q15. 68Q25, 68R10 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Arora, C. Lund, R. Motwani, M. Sudan and M. Szegedy, </author> <title> Proof Verification and Hardness of Approximation Problems, </title> <booktitle> Proc. 33rd Annual IEEE Symp. on Foundations of Computer Science, </booktitle> <year> 1992, </year> <pages> pp. 14-23. </pages>
Reference-contexts: For example, a sequence of results <ref> [13, 8, 2, 1] </ref> established the intractability of approximating the largest clique in a graph, culminating in the result of Arora, Lund, Motwani, Sudan and Szegedy [1] that for some constant ffi &gt; 0, there does not exist any polynomial time algorithm which will approximate the maximum clique within a ratio <p> For example, a sequence of results [13, 8, 2, 1] established the intractability of approximating the largest clique in a graph, culminating in the result of Arora, Lund, Motwani, Sudan and Szegedy <ref> [1] </ref> that for some constant ffi &gt; 0, there does not exist any polynomial time algorithm which will approximate the maximum clique within a ratio of n ffi unless P = NP. Arora et al [1] also established that unless P = NP, there do not exist polynomial time approximation schemes <p> clique in a graph, culminating in the result of Arora, Lund, Motwani, Sudan and Szegedy <ref> [1] </ref> that for some constant ffi &gt; 0, there does not exist any polynomial time algorithm which will approximate the maximum clique within a ratio of n ffi unless P = NP. Arora et al [1] also established that unless P = NP, there do not exist polynomial time approximation schemes (PTAS) for optimization problems which are MAX SNP-hard. <p> This gives the desired PTAS. 2 We now show the non-existence of a PTAS for longest paths. The proof is based on the recent results of Arora et al <ref> [1] </ref>. Theorem 10: There is no PTAS for the longest path problem, unless P = NP. Proof: We first claim that it suffices to demonstrate the hardness result when the longest path problem is restricted to instances containing a Hamiltonian cycle. <p> Thus, the PTAS for the longest path problem can be used to obtain a PTAS for such instances of TSP (1,2). But the results of Arora et al <ref> [1] </ref> show that if any MAX SNP-hard problem has a PTAS, then P = NP. By the reduction of Papadimitriou and Yannakakis, we may conclude that MAX 3SAT has a PTAS, and therefore P = NP. 2 The self-improvability result implies the NP-hardness of constant factor approximations to longest paths.
Reference: [2] <author> S. Arora and S. Safra, </author> <title> Approximating Clique is NP-complete, </title> <booktitle> Proc. 33rd Annual IEEE Symp. on Foundations of Computer Science, </booktitle> <year> 1992, </year> <pages> pp. 2-13. </pages>
Reference-contexts: For example, a sequence of results <ref> [13, 8, 2, 1] </ref> established the intractability of approximating the largest clique in a graph, culminating in the result of Arora, Lund, Motwani, Sudan and Szegedy [1] that for some constant ffi &gt; 0, there does not exist any polynomial time algorithm which will approximate the maximum clique within a ratio
Reference: [3] <author> M. Bellare, </author> <title> Interactive Proofs and Approximation, </title> <type> IBM Research Report RC 17969, </type> <year> 1992. </year>
Reference-contexts: They show that the above conjecture is true for the problem of approximating the longest induced path in an undirected graph. Note that the induced path problem is strictly harder and their hardness result does not carry over to the problem under consideration here. Bellare <ref> [3] </ref> considers a generalization of the longest paths problem called the longest color-respecting path problem.
Reference: [4] <author> A. Blum, </author> <title> Some tools for approximate 3-coloring, </title> <booktitle> Proc. 31st IEEE Symp. on Foundations of Computer Science, </booktitle> <year> 1990, </year> <pages> pp. 554-562. </pages>
Reference-contexts: We provide some approximation algorithms for this problem, but unfortunately the performance ratio of these algorithms is as weak as in the case of the best-known approximation algorithms for clique [7] and chromatic number <ref> [4] </ref>. We conjecture that the situation for longest paths is essentially as bad as for these two problems, i.e. if there exists an approximation algorithm which has a performance ratio of n ffi , for some constant ffi &gt; 0, then P = NP. <p> In the case of cliques and chromatic number, the extreme hardness of the problem led to the study of special inputs where the optimum was guaranteed to take on an extreme value; for example, the approximate coloring of 3-colorable graphs is studied by Blum <ref> [4] </ref>, and the approximation of cliques in graphs containing a linear-sized clique is studied by Boppana and Halldorsson [7]. We therefore formulate the problem of finding long paths in 1 Hamiltonian graphs. <p> This is analogous to the chromatic number problem where significant improvements can be obtained if the input graph is known to be 3-colorable <ref> [4] </ref>. We first consider the "easier" problem and prove that, for any constant * &lt; 1, no polynomial time algorithm can find a path of length n n * in an n-vertex Hamiltonian graph, unless P = NP. Next we demonstrate a self improvability result for approximating longest paths.
Reference: [5] <author> B. Bollobas, </author> <title> Random Graphs. </title> <publisher> Academic Press, </publisher> <year> 1985. </year>
Reference-contexts: For example, the random edges could form a G n;p graph, or a random regular graph <ref> [5] </ref>. For the case of random Hamiltonian graphs with average degree much larger than 3, Broder et al [6] give an algorithm which actually finds the Hamiltonian cycle in polynomial time. However, they leave open the question of what can be done for sparse graphs, e.g. graphs of degree 3.
Reference: [6] <author> A. Broder, A.M. Frieze and E. Shamir, </author> <title> Finding hidden Hamiltonian cycles, </title> <booktitle> Proc. 23rd ACM Symp. on Theory of Computing, </booktitle> <year> 1991, </year> <pages> pp. 182-189. </pages>
Reference-contexts: Surprisingly, this algorithm works in any graph obtained by adding any number of random edges to a Hamiltonian cycle. This result partially answers an open question posed by Broder, Frieze and Shamir <ref> [6] </ref>. They had considered the problem of finding Hamiltonian cycles in graphs obtained by adding a relatively large number of random edges to a Hamiltonian cycle. In Section 4, we provide hardness results for the problem of approximating the longest path. <p> For example, the random edges could form a G n;p graph, or a random regular graph [5]. For the case of random Hamiltonian graphs with average degree much larger than 3, Broder et al <ref> [6] </ref> give an algorithm which actually finds the Hamiltonian cycle in polynomial time. However, they leave open the question of what can be done for sparse graphs, e.g. graphs of degree 3. Theorem 7: Let G be a random 3-regular Hamiltonian graph on n vertices.
Reference: [7] <author> R. B. Boppana and M. M. Halldorsson, </author> <title> Approximating maximum independent sets by excluding subgraphs, </title> <booktitle> Proc. of the 2nd Scandanavian Workshop on Algorithmic Theory, Lecture Notes in Computer Science, </booktitle> <volume> No. 447, </volume> <publisher> Springer-Verlag, </publisher> <year> 1990, </year> <pages> pp. 13-25. </pages>
Reference-contexts: We provide some approximation algorithms for this problem, but unfortunately the performance ratio of these algorithms is as weak as in the case of the best-known approximation algorithms for clique <ref> [7] </ref> and chromatic number [4]. We conjecture that the situation for longest paths is essentially as bad as for these two problems, i.e. if there exists an approximation algorithm which has a performance ratio of n ffi , for some constant ffi &gt; 0, then P = NP. <p> the problem led to the study of special inputs where the optimum was guaranteed to take on an extreme value; for example, the approximate coloring of 3-colorable graphs is studied by Blum [4], and the approximation of cliques in graphs containing a linear-sized clique is studied by Boppana and Halldorsson <ref> [7] </ref>. We therefore formulate the problem of finding long paths in 1 Hamiltonian graphs. It is easy to see that there is no essential difference between the cases where the input graph has Hamiltonian paths or Hamiltonian cycles, and we concentrate on the latter case.
Reference: [8] <author> P. Berman and G. Schnitger, </author> <title> On the Complexity of Approximating the Independent Set Problem, </title> <journal> Information and Computation, </journal> <volume> 96 (1992), </volume> <pages> pp. 77-94. </pages>
Reference-contexts: For example, a sequence of results <ref> [13, 8, 2, 1] </ref> established the intractability of approximating the largest clique in a graph, culminating in the result of Arora, Lund, Motwani, Sudan and Szegedy [1] that for some constant ffi &gt; 0, there does not exist any polynomial time algorithm which will approximate the maximum clique within a ratio <p> However, note that our result even in that case is more general in that it applies to a wider class of graphs, viz. the weakly Hamiltonian graphs. No hardness results for longest paths were known earlier, although a seemingly related problem has been studied by Berman and Schnitger <ref> [8] </ref>. They show that the above conjecture is true for the problem of approximating the longest induced path in an undirected graph. Note that the induced path problem is strictly harder and their hardness result does not carry over to the problem under consideration here.
Reference: [9] <author> V. Chvatal, </author> <title> Tough graphs and Hamiltonian circuits, </title> <journal> Discrete Mathematics, </journal> <volume> 5 (1973), </volume> <pages> pp. 215-228. </pages>
Reference-contexts: Theorem 1: The greedy algorithm finds a path of length (d) in a graph with density d = m=n. We now describe the algorithm for 1-tough graphs. The notion of 1-tough and weakly Hamiltonian graphs was introduced by Chvatal <ref> [9, 10, 11] </ref>. The latter are defined by a necessary condition for Hamiltonicity obtained via an integer linear programming formulation. We omit the formal definition and instead provide three properties of weakly Hamiltonian graphs these are referred to as the "1-2-3" properties.
Reference: [10] <author> V. Chvatal, </author> <title> Edmonds Polytopes and Weakly Hamiltonian Graphs, </title> <journal> Mathematical Programming, </journal> <volume> 5 (1973), </volume> <pages> pp. 29-40. </pages>
Reference-contexts: Theorem 1: The greedy algorithm finds a path of length (d) in a graph with density d = m=n. We now describe the algorithm for 1-tough graphs. The notion of 1-tough and weakly Hamiltonian graphs was introduced by Chvatal <ref> [9, 10, 11] </ref>. The latter are defined by a necessary condition for Hamiltonicity obtained via an integer linear programming formulation. We omit the formal definition and instead provide three properties of weakly Hamiltonian graphs these are referred to as the "1-2-3" properties.
Reference: [11] <author> V. Chvatal, </author> <title> Hamiltonian cycles, In The Traveling Salesman Problem: A Guided Tour of Combinatorial Optimization (ed: </title> <editor> E.L. Lawler et al), </editor> <year> 1985, </year> <pages> pp. 402-430. </pages>
Reference-contexts: Theorem 1: The greedy algorithm finds a path of length (d) in a graph with density d = m=n. We now describe the algorithm for 1-tough graphs. The notion of 1-tough and weakly Hamiltonian graphs was introduced by Chvatal <ref> [9, 10, 11] </ref>. The latter are defined by a necessary condition for Hamiltonicity obtained via an integer linear programming formulation. We omit the formal definition and instead provide three properties of weakly Hamiltonian graphs these are referred to as the "1-2-3" properties.
Reference: [12] <author> R. Fagin, </author> <title> Generalized First-Order Spectra and Polynomial-time Recognizable Sets, In Complexity of Computer Computations (ed: </title> <editor> Richard Karp), </editor> <publisher> AMS, </publisher> <year> 1974. </year>
Reference-contexts: The class SNP is a strict version of NP and was defined by Papadimitriou and Yannakakis [22] based on a syntactic characterization of NP due to Fagin <ref> [12] </ref>. They also provided a notion of approximation-preserving reductions for problems in this class and, under this reduction, identified a large number of approximation problems that are MAX SNP-hard, and are therefore unlikely to have any PTAS.
Reference: [13] <author> U. Feige, S. Goldwasser, L. Lov asz, S. Safra, and M. Szegedy, </author> <title> Approximating clique is almost NP-complete, </title> <booktitle> Proc. 32nd IEEE Symp. on Foundations of Computer Science, </booktitle> <year> 1991, </year> <pages> pp. 2-12. 17 </pages>
Reference-contexts: For example, a sequence of results <ref> [13, 8, 2, 1] </ref> established the intractability of approximating the largest clique in a graph, culminating in the result of Arora, Lund, Motwani, Sudan and Szegedy [1] that for some constant ffi &gt; 0, there does not exist any polynomial time algorithm which will approximate the maximum clique within a ratio
Reference: [14] <author> W. Fernandez de la Vega and G.S. Lueker, </author> <title> Bin Packing can be solved within 1 + * in Linear Time, </title> <journal> Combinatorica, </journal> <volume> 1 (1981), </volume> <pages> pp. 349-355. </pages>
Reference-contexts: 1. Introduction The area of approximation algorithms for NP-hard optimization problems has received a lot of attention over the past two decades [16, 21]. Although some notable positive results have been obtained, such as the fully polynomial approximation scheme for bin packing <ref> [14, 18] </ref>, it has now become apparent that even the approximate solution of a large class of NP-hard optimization problems remains outside the bounds of feasibility.
Reference: [15] <author> M. Furer and B. Raghavachari, </author> <title> Approximating the Minimum Degree Spanning Tree to within One from the Optimal Degree, </title> <booktitle> Proc. 3rd Annual ACM-SIAM Symp. on Discrete Algorithms, </booktitle> <year> 1992, </year> <pages> pp. 317-324. </pages>
Reference-contexts: Our results are an improvement on this since in polynomial time Monien's algorithm can only find paths of length O (log n= log log n). Furer and Raghavachari <ref> [15] </ref> present approximation algorithms for minimum-degree spanning tree which delivered absolute performance guarantees. &gt;From this we can derive a polynomial-time algorithm for finding logarithmic length paths in Hamiltonian graphs, matching our result for that case.
Reference: [16] <author> Michael R. Garey and David S. Johnson, </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness, </title> <editor> W. H. </editor> <publisher> Freeman, </publisher> <year> 1979. </year>
Reference-contexts: 1. Introduction The area of approximation algorithms for NP-hard optimization problems has received a lot of attention over the past two decades <ref> [16, 21] </ref>. Although some notable positive results have been obtained, such as the fully polynomial approximation scheme for bin packing [14, 18], it has now become apparent that even the approximate solution of a large class of NP-hard optimization problems remains outside the bounds of feasibility.
Reference: [17] <author> David S. Johnson, </author> <title> The Tale of the Second Prover, The NP-Completeness Column: An Ongoing Guide. </title> <journal> Journal of Algorithms, </journal> <volume> 13 (1992), </volume> <pages> pp. 502-524. </pages>
Reference: [18] <author> N. Karmakar and R.M. Karp, </author> <title> An Efficient Approximation Scheme For The One-Dimensional Bin Packing Problem, </title> <booktitle> Proc. 23rd IEEE Symp. on Foundations of Computer Science, </booktitle> <year> 1982, </year> <pages> pp. 312-320. </pages>
Reference-contexts: 1. Introduction The area of approximation algorithms for NP-hard optimization problems has received a lot of attention over the past two decades [16, 21]. Although some notable positive results have been obtained, such as the fully polynomial approximation scheme for bin packing <ref> [14, 18] </ref>, it has now become apparent that even the approximate solution of a large class of NP-hard optimization problems remains outside the bounds of feasibility.
Reference: [19] <author> C. Lund and M. Yannakakis, </author> <title> On the Hardness of Approximating Minimization Problems, </title> <journal> Proc. 25th ACM Symp. on Theory of Computing, </journal> <note> 1993 (to appear). </note>
Reference-contexts: These problems include such widely studied problems as MAX 3SAT, vertex cover, metric TSP and Steiner trees. Recently, Lund and Yannakakis <ref> [19] </ref> settled another important open problem by showing that the chromatic number of a graph is as hard to approximate as the clique number. In this context, a major outstanding open problem is that of determining the approximabil-ity of the longest path in an undirected graph.
Reference: [20] <author> B. Monien, </author> <title> How to find long paths efficiently, </title> <journal> Annals of Discrete Mathematics, </journal> <volume> 25 (1984), </volume> <pages> pp. 239-254. </pages>
Reference-contexts: The hardness results apply even to the special case where the input consists of bounded degree graphs. Before describing our results in greater detail we review some related work. Monien <ref> [20] </ref> showed that an O (k! nm) time algorithm finds paths of length k in a Hamiltonian graph with n vertices and m edges. Our results are an improvement on this since in polynomial time Monien's algorithm can only find paths of length O (log n= log log n).
Reference: [21] <author> R. Motwani, </author> <title> Lecture Notes on Approximation Algorithms, </title> <type> Technical Report No. </type> <institution> STAN-CS-92-1435, Department of Computer Science, Stanford University, </institution> <year> 1992. </year>
Reference-contexts: 1. Introduction The area of approximation algorithms for NP-hard optimization problems has received a lot of attention over the past two decades <ref> [16, 21] </ref>. Although some notable positive results have been obtained, such as the fully polynomial approximation scheme for bin packing [14, 18], it has now become apparent that even the approximate solution of a large class of NP-hard optimization problems remains outside the bounds of feasibility.
Reference: [22] <author> C. H. Papadimitriou and M. Yannakakis, </author> <title> Optimization, Approximation, and Complexity Classes, </title> <booktitle> Proc. 20th ACM Symp. on Theory of Computing, </booktitle> <year> 1988, </year> <pages> pp. 229-234. </pages>
Reference-contexts: Arora et al [1] also established that unless P = NP, there do not exist polynomial time approximation schemes (PTAS) for optimization problems which are MAX SNP-hard. The class SNP is a strict version of NP and was defined by Papadimitriou and Yannakakis <ref> [22] </ref> based on a syntactic characterization of NP due to Fagin [12]. They also provided a notion of approximation-preserving reductions for problems in this class and, under this reduction, identified a large number of approximation problems that are MAX SNP-hard, and are therefore unlikely to have any PTAS.
Reference: [23] <author> C. H. Papadimitriou and M. Yannakakis, </author> <title> The traveling salesman problem with distances one and two, </title> <note> Mathematics of Operations Research, to appear. 18 </note>
Reference-contexts: Let us denote by TSP (1,2) the problem of finding an optimal traveling salesman tour in a complete graph where all edge lengths are either 1 or 2. The approximation version of this problem has been shown to be MAX SNP-hard by Papadimitriou and Yannakakis <ref> [23] </ref>. Their reduction is from a version of the MAX 3SAT problem which is also MAX SNP-complete. We claim that the following statement can be obtained as a consequence of their result.
References-found: 23

