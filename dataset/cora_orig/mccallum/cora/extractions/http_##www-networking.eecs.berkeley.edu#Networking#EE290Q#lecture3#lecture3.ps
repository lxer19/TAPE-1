URL: http://www-networking.eecs.berkeley.edu/Networking/EE290Q/lecture3/lecture3.ps
Refering-URL: http://www-networking.eecs.berkeley.edu/Networking/EE290Q/course.html
Root-URL: http://www.cs.berkeley.edu
Title: EE 290Q Topics in Communication Networks Lecture Notes: 3  
Author: Chen-Nee Chuah 
Date: January 23, 1996  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Parekh, Abhay K. and Gallager, Robert G. </author> <year> (1993). </year> <title> A Generalized Processor Sharing Approach to Flow Control in Integrated Services Networks: the Single-Node Case. </title> <journal> IEEE/ACM Transactions on Networking, June 1993, </journal> <volume> Vol. 1, No. 3, </volume> <pages> pp. 344-357. </pages>
Reference-contexts: Consider a particular node m. Suppose we are given that the arrival process conforms to LB traffic descriptor, A m i ( m i ; i ) As shown in <ref> [1] </ref>, the worst case delay and backlog for session i are achieved when all the sessions that flow into node m are simultaneously greedy from time zero (the beginning of a system busy period). <p> Let 4 ^ i = resulting session arrival function at node m for all i = 1; ; N and ^ i = corresponding service function. Recall from <ref> [1] </ref>, as long as Q m i (t) &gt; 0, S i [0; t] is piecewise linear and convex in t. <p> We will exploit the following facts to compute internal burstiness of a network. The ability to bound traffic burstiness prove the stability of CRST. Fact <ref> [1] </ref>: Output burstiness of session i at node m, i is equal to the mazimum backlog of session i at that node, Q mfl i Proof: see Lemma 12 in paper 1.
Reference: [2] <author> Parekh, Abhay K. and Gallager, Robert G. </author> <year> (1994). </year> <title> A Generalized Processor Sharing Approach to Flow Control in Integrated Services Networks: the Multiple Node Case. </title> <journal> IEEE/ACM Transactions on Networking, April 1994, </journal> <volume> Vol. 2, No. 2, </volume> <pages> pp. 137-150. </pages>
Reference-contexts: The following discussion is based on the paper by Parekh and Gallager <ref> [2] </ref>. 1 The Network Model 1.1 Review Single Node Analysis Things we need from the last lecture (see Lecture Notes 2) * Leaky Bucket traffic regulator concept * Generalized Processor Sharing (GPS) service discipline * Burstiness constraints and service curve * Worst case backlogs Q fl i and worst case delay, <p> This can lead to "virtual feedback effect" that drives the system towards instability. However, under the GPS service discipline these virtual feedback effects are completely absent for a locally stable session (see section IV of <ref> [2] </ref>). On the other hand, when all sessions are Leaky Bucket constrained, it is possible to guarantee finite delay even for sessions that are not locally stable. <p> Fact <ref> [2] </ref>: Suppose we number the sessions according o the relative treatment under CRST. i.e. if i &lt; j, then session i is treated better than session j at all the nodes they share. <p> Fact [3]: If session i s better treated than session j under CRST, then ^ m;out i does not depend on m j . The proof for this is given in <ref> [2] </ref> under Lemma 2. A quick intuitive argument is given below: When Q m i (t) builds up, this means session i is experiencing backlog. Since i is greater than j in ordering, j must also experience backlog because session i always get a better treatment.
References-found: 2

