URL: http://www.cs.umbc.edu/kqml/papers/secret.ps
Refering-URL: http://www.cs.umbc.edu/agents/security/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: cthiru@cs.umbc.edu  finin@umbc.edu mayfield@umbc.edu  
Title: Secret Agents A Security Architecture for the KQML Agent Communication Language  
Author: Chelliah Thirunavukkarasu Tim Finin and James Mayfield 
Address: Menlo Park California CA 94025  Baltimore MD 21228 USA  
Affiliation: Enterprise Integration Technologies  Computer Science and Electrical Engineering University of Maryland Baltimore County  
Abstract: KQML is a message protocol and format for software agents to communicate with each other. In this paper we discuss the security features that a KQML user would expect and an architecture to satisfy those expectations. The proposed architecture is based on cryptographic techniques and would allow agents to verify the identity of other agents, detect message integrity violations, protect confidential data, ensure non-repudiation of message origin and take counter measures against cipher attacks. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> Draft specification of the KQML agent communication language, Tim Finin, Jay Weber et al, </institution> <month> Jun 15 </month> <year> 1993, </year> <note> http://www.cs.umbc.edu/kqml/kqmlspec/spec.html </note>
Reference-contexts: 1 Introduction KQML, Knowledge Query and Manipulation Language <ref> [1] </ref> is a communication language and protocol which enables autonomous and asynchronous agents to share their knowledge and or work towards cooperative problem solving. With the popularity of internet and the possibilities offered by the agent technology we can expect an explosion of agents in the internet.
Reference: [2] <editor> Security Mechanisms in High-Level Network Protocols, Victor L.Voydock, Stephen T. </editor> <title> Kent, </title> <journal> ACM Computing Surveys, Vol.15, </journal> <volume> No. 2, </volume> <pages> 135-171, </pages> <month> Jun 83 </month>
Reference-contexts: Interested readers are referred to <ref> [2] </ref>, for a thorough treatment of security threats and mechanisms to counter them. The security capabilities that should be supported include: * Authentication of principals. Agents should be capable of proving their identities to other agents and verifying the identity of other agents. * Preservation of message integrity.
Reference: [3] <author> OSTF RFP3 Submission, </author> <title> Corba Security, OMG Document Number 95-3-3, </title> <month> Mar 8 </month> <year> 1995, </year> <note> http://www.omg.org/docs/95-3-3.ps </note>
Reference-contexts: send to Joe the following KQML message: (tell :sender stock-server :content (PRICE IBM 14) :receiver Joe :in-reply-to ibm-stock :language LPROLOG :ontology NYSE-TICKS) 1.2 Functional Requirements We arrived upon the following requirements for a KQML security model based on the analysis of the security models for Privacy Enhanced Mail [4], CORBA <ref> [3] </ref> and DCE [5]. Interested readers are referred to [2], for a thorough treatment of security threats and mechanisms to counter them. The security capabilities that should be supported include: * Authentication of principals.
Reference: [4] <editor> Privacy Enhancement for Internet Electronic Mail: </editor> <title> Part I: Message Encryption and Authentication Procedures, </title> <editor> J. Linn, </editor> <month> Oct 02 </month> <year> 1993, </year> <note> http://ds.internic.net/rfc/rfc1421.txt </note>
Reference-contexts: stock-server might send to Joe the following KQML message: (tell :sender stock-server :content (PRICE IBM 14) :receiver Joe :in-reply-to ibm-stock :language LPROLOG :ontology NYSE-TICKS) 1.2 Functional Requirements We arrived upon the following requirements for a KQML security model based on the analysis of the security models for Privacy Enhanced Mail <ref> [4] </ref>, CORBA [3] and DCE [5]. Interested readers are referred to [2], for a thorough treatment of security threats and mechanisms to counter them. The security capabilities that should be supported include: * Authentication of principals.
Reference: [5] <institution> Security in a Distributed Computing Environment, OSF-O-WP11-1090-3, </institution> <note> http://www.osf.org/comm/lit/OSF-O-WP11-1090-3.ps </note>
Reference-contexts: the following KQML message: (tell :sender stock-server :content (PRICE IBM 14) :receiver Joe :in-reply-to ibm-stock :language LPROLOG :ontology NYSE-TICKS) 1.2 Functional Requirements We arrived upon the following requirements for a KQML security model based on the analysis of the security models for Privacy Enhanced Mail [4], CORBA [3] and DCE <ref> [5] </ref>. Interested readers are referred to [2], for a thorough treatment of security threats and mechanisms to counter them. The security capabilities that should be supported include: * Authentication of principals.
Reference: [6] <author> Project Athena Technical Plan, </author> <title> Section E.2.1, Kerberos Authentication and Authorization System, </title> <editor> S.P.Miller, B.C.Neuman, J.I.Schiller and J.H.Saltzer, </editor> <month> Oct 27 </month> <year> 1988, </year> <month> ftp://athena-dist.mit.edu/pub/kerberos/doc/techplan.PS </month>
Reference: [7] <institution> Limitations of the Kerberos Authentication System, S.M. </institution> <note> Bellovin, </note> <editor> M. Merritt, </editor> <booktitle> Proceedings of the Winter 1991 Usenix Conference, </booktitle> <month> Jan </month> <year> 1991, </year> <note> ftp://research.att.com/dist/internet security/- kerblimit.usenix.ps </note>
Reference: [8] <author> Security Service API: </author> <title> Cryptographic API Recommendation, NSA Cross Organization, CAPI Team, </title> <month> Jun 12 </month> <year> 1995, </year> <note> http://www.omg.org/docs/95-6-6.ps </note>
Reference-contexts: The architecture does not address traffic analysis by rogue agents. We feel that traffic analysis is best handled at the link/transport layers. * Use of recommended APIs. The model should be enhanced to support the use of the Crypto APIs recommended by NSA (GSS, GCS and Cryptoki) <ref> [8] </ref>, espe cially for the key-type and digest-type values. 7 Implementation We have proposed a security model which has not yet been implemented. We have examined the modifications which would be required to integrate this model into some existing KQML API software. <p> These primitives can be modified to add the authentication information to the outgoing messages or process the authentication information in the incoming messages. The implementations can use one of NSA recommended crypto APIs <ref> [8] </ref> for cryptographic capabilities. These APIs provide support for asymmetric and symmetric key cryptography, message digest, key generation etc.
Reference: [9] <institution> RSA Labs' frequently asked questions (FAQ), </institution> <note> http://www.rsa.com/rsalabs/faq </note>
Reference-contexts: Agents should be able to use different cryptographic algorithms. But for two agents to interact, they should have a common denominator. The security architecture should not depend on any specific cryptographic algorithm. 2 Architecture Overview The proposed security architecture is based on data encryption techniques <ref> [9] </ref>. In tune with the asynchronous nature of KQML, the model expects a secure message to be self authenticating and does not support any challenge/response mechanism to authenticate a message after it has been delivered. The architecture supports two security models, basic and enhanced. <p> Message Digest. Each secure message generated using this architecture has a message digest or signature associated with it. The digest is calculated using a secure hash function like MD2, MD5 or SHS <ref> [9] </ref>. This hash function computes a digital fingerprint of the message (i.e., acts as a "checksum" 1 Public key cryptosystems are a very familiar example of an asymmetric key system. 2 This may not always be possible.
Reference: [10] <institution> Software Design Document for KQML, Revision 3.0, </institution> <month> Mar </month> <year> 1995, </year> <institution> LORAL Corporation, Paoli PA, USA </institution>
Reference-contexts: We have examined the modifications which would be required to integrate this model into some existing KQML API software. We will briefly discuss the approach to implementing this architecture in the KATS KQML API <ref> [10, 17] </ref> software architecture. In this architecture, each agent application has a separate router sub-agent. The routers used by all the agents are identical and handle all KQML messages going to and from the agent.
Reference: [11] <author> Tim Finin, Don McKay, Rich Fritzson, and Robin McEntire. </author> <title> KQML: an information and knowledge exchange protocol. </title> <editor> In Kazuhiro Fuchi and Toshio Yokoi, editors, </editor> <title> Knowledge Building and Knowledge Sharing. </title> <publisher> Ohmsha and IOS Press, </publisher> <year> 1994. </year>
Reference: [12] <author> Tim Finin, Don McKay, Rich Fritzson, and Robin McEntire. </author> <title> The KQML information and knowledge exchange protocol. </title> <booktitle> In Third International Conference on Information and Knowledge Management, </booktitle> <month> November </month> <year> 1994. </year>
Reference: [13] <author> Yannis Labrou and Tim Finin. </author> <title> A semantics approach for KQML a general purpose communication language for software agents. </title> <booktitle> In Third International Conference on Information and Knowledge Management, </booktitle> <month> Novem-ber </month> <year> 1994. </year> <note> Available as http://www.cs.umbc.edu/kqml/- papers/kqml-semantics.ps. </note>
Reference: [14] <author> R. Neches, R. Fikes, T. Finin, T. Gruber, R. Patil, T. Senator, and W. Swartout. </author> <title> Enabling technology for knowledge sharing. </title> <journal> AI Magazine, </journal> <volume> 12(3) </volume> <pages> 36-56, </pages> <month> Fall </month> <year> 1991. </year>
Reference: [15] <author> Ramesh Patil, Richard Fikes, Peter Patel-Schneider, Donald McKay, Tim Finin, Thomas Gruber, and Robert Neches. </author> <title> The DARPA knowledge sharing effort: Progress report. </title> <editor> In B. Nebel, C. Rich, and W. Swartout, editors, </editor> <booktitle> Principles of Knowledge Representation and Reasoning: Proc. of the Third International Conference (KR'92), </booktitle> <address> San Mateo, CA, November 1992. </address> <publisher> Morgan Kaufmann. </publisher>
Reference: [16] <author> Chelliah Thirunavukkarasu. </author> <title> A Security Architecture for KQML. </title> <type> Technical Report MS-EECS-95-nn, </type> <institution> COmputer Science and Electrical Engineering Department, University of Maryland Baltimore County. </institution> <month> August, </month> <year> 1995. </year>
Reference: [17] <institution> KQML Agent Technology Software. </institution> <type> Forthcoming UMBC technical report. </type> <year> 1995. </year> <month> 9 </month>
Reference-contexts: We have examined the modifications which would be required to integrate this model into some existing KQML API software. We will briefly discuss the approach to implementing this architecture in the KATS KQML API <ref> [10, 17] </ref> software architecture. In this architecture, each agent application has a separate router sub-agent. The routers used by all the agents are identical and handle all KQML messages going to and from the agent.
References-found: 17

