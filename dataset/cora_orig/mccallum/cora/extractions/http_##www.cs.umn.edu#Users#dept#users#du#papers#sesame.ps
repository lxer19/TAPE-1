URL: http://www.cs.umn.edu/Users/dept/users/du/papers/sesame.ps
Refering-URL: http://www.cs.umn.edu/Users/dept/users/du/papers/
Root-URL: http://www.cs.umn.edu
Title: SESAME: A Scalable and ExtenSible Architecture for Multimedia Entertainment  
Author: Yen-Jen Lee, David H.C. Du, Wei-hsiu Ma 
Keyword: SESAME, Karaoke-on-Demand, Video-on-Demand, CD-ROM, RAID, ATM, Ethernet, Distance Learning  
Address: Minneapolis, MN 55455  
Affiliation: Distributed Multimedia Research Center Department of Computer Science University of Minnesota  
Abstract: The advances in storage, host I/O, and networks entice a variety of on-demand services. To effectively use these resources, we propose a Scalable and ExtenSible Architecture for Multimedia Entertainment (SESAME) to explore the modularity and scalability of Karaoke-on-Demand (KOD) service. Karaoke popularizes MTV-style entertainment to let viewers sing along. It is shown that hierarchical architecture for KOD scales well and is cost-effective in the network environment where latency is not a major concern. The modularity and scalability are achieved by: 1) distributing Karaoke data at different levels of storage based on popularity to leverage the cost of near-line and on-line storages, and alleviate hot spot access for popular titles, 2) modularizing the server design as well as service hierarchy, and 3) reducing the concurrent accesses to a server by expanding service levels such that an inexpensive computer can be a server. We illustrate live applications in a Karaoke house and in a campus-wide setting. The SESAME approach is being extended to some other areas of interests such as distance learning. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Chung-Bin Fong, Chih C. Wang, and Hsueh-Ming Hang. </author> <title> Karaoke-On-Demand Service & System to DAVIC. Internet FTP site airborne.cnm.bell-atl.com:/davic/call-for-proposals/KODFINAL.RTF, </title> <month> December </month> <year> 1994. </year>
Reference-contexts: One of the proposed on-demand services is Karaoke-on-Demand (KOD). Karaoke is a very popular MTV-style entertainment in Asia and is gaining popularity in the other countries <ref> [1, 2, 3] </ref>. A Karaoke title 1 consists of following medias: video, instrumental music, vocal music, and lyric & tempo. The medias are stored in either tape or video Compact Disk (video CD, fl Authors' e-mail addresses are: fylee, du, wmag@cs.umn.edu.
Reference: [2] <author> Wei-Hsin Tseng and Jau-Hsiung Huang. </author> <title> A High Performance Video Server for Karaoke Systems. </title> <journal> IEEE Transactions on Consumer Electronics, </journal> <volume> 40(3) </volume> <pages> 329-336, </pages> <month> August </month> <year> 1994. </year>
Reference-contexts: One of the proposed on-demand services is Karaoke-on-Demand (KOD). Karaoke is a very popular MTV-style entertainment in Asia and is gaining popularity in the other countries <ref> [1, 2, 3] </ref>. A Karaoke title 1 consists of following medias: video, instrumental music, vocal music, and lyric & tempo. The medias are stored in either tape or video Compact Disk (video CD, fl Authors' e-mail addresses are: fylee, du, wmag@cs.umn.edu. <p> None of these existing systems is designed and suitable for on-demand service. The research and development on KOD over the data network environment is spawned off most recently. Notably in <ref> [2] </ref>, Tseng and Huang proposed a 486-based PC Karaoke server to support up to 30 concurrent accesses. The system consists of a PC server with EISA bus, a SCSI II disk subsystem for caching, and a CD-ROM Jukebox for mass storage. <p> It is likely that subsequent requests from a user may be on different CDs not in the players. The time to exchange CDs, which includes unloading and loading, is in the range of 4 to 18 seconds <ref> [17, 2, 5] </ref>. 13 The access latency is around 400 msec [5]. If a user request has to wait for a CD which is in the middle of playing by a CD player for another user, the elongated waiting time may not be acceptable to both user and system operator.
Reference: [3] <author> Jang Liu, Chwan-Huei Wang, Ming-Yu Tseng, Sun-Lang Hsiao, Wen-Hen Luo, Yung-Mean Tseng, and Feng-Yue Hung. </author> <title> The Construction of a Multimedia Application on Public Network. </title> <booktitle> In SPIE: High-Speed Networking and Multimedia Computing Conference, </booktitle> <pages> pages 67-78, </pages> <month> February </month> <year> 1994. </year>
Reference-contexts: One of the proposed on-demand services is Karaoke-on-Demand (KOD). Karaoke is a very popular MTV-style entertainment in Asia and is gaining popularity in the other countries <ref> [1, 2, 3] </ref>. A Karaoke title 1 consists of following medias: video, instrumental music, vocal music, and lyric & tempo. The medias are stored in either tape or video Compact Disk (video CD, fl Authors' e-mail addresses are: fylee, du, wmag@cs.umn.edu. <p> The system consists of a PC server with EISA bus, a SCSI II disk subsystem for caching, and a CD-ROM Jukebox for mass storage. The server is again a stand-alone system and is limited by the EISA bus throughput. In <ref> [3] </ref>, Liu, et al., developed a Karaoke client-server prototype to test the feasibility of using traditional public switched network to deliver Karaoke audio, but not video.
Reference: [4] <author> Jan Korst and Verus Pronk. </author> <title> Compact Disc Standards: An Introductory Overview. </title> <journal> Multimedia System, </journal> 1994(2) 157-171, 1994. 
Reference-contexts: The usage of title and song is interchangeable in this paper. Title makes more sense because it implies rich media data formats. 1 CD-I, CD-ROM, or perspective DVD) <ref> [4, 5] </ref>. In contrast to the MTV broadcasting, Karaoke makes it possible for user (s) to sing along through microphone (s) by following the lyric and tempo in the TV monitor. <p> The bottleneck for data delivery over a network environment is either in storage I/O or network I/O bandwidth. Characteristics of several storage and network devices in consideration are listed in Table 1 for reference <ref> [4, 5, 17, 19, 20, 21, 22, 23, 24, 25, 26] </ref>. In order to achieve modularity, we propose to use low cost server, which has high performance commodity processor such as Intel Pentium or PowerPC, and 132 MB/sec PCI bus for system interconnection [27, 28]. <p> Consequently, the latency to a magnetic disk subsystem is about 3 order of magnitude less than the loading, unloading and 4 access time for a CD in the CD jukebox. * Bandwidth CD player is a constant linear velocity (CLV) device, which provides constant transfer rate <ref> [4] </ref>. However, the CD player can only read out data for one Karaoke title at a time. In contrast, magnetic disk drive is a constant angular velocity (CAV) device, that the transfer rate varies from inner tracks to outer tracks.
Reference: [5] <author> Chitra Venkatramani and Tzi-cker Chiueh. </author> <title> A Survey of Near-Line Storage Technologies: Devices and Systems. </title> <type> TR 2, </type> <institution> Department of Computer Science, SUNY Stony Brook, Experimental Computer Systems Laboratory, </institution> <month> October </month> <year> 1993. </year> <month> 23 </month>
Reference-contexts: The usage of title and song is interchangeable in this paper. Title makes more sense because it implies rich media data formats. 1 CD-I, CD-ROM, or perspective DVD) <ref> [4, 5] </ref>. In contrast to the MTV broadcasting, Karaoke makes it possible for user (s) to sing along through microphone (s) by following the lyric and tempo in the TV monitor. <p> The bottleneck for data delivery over a network environment is either in storage I/O or network I/O bandwidth. Characteristics of several storage and network devices in consideration are listed in Table 1 for reference <ref> [4, 5, 17, 19, 20, 21, 22, 23, 24, 25, 26] </ref>. In order to achieve modularity, we propose to use low cost server, which has high performance commodity processor such as Intel Pentium or PowerPC, and 132 MB/sec PCI bus for system interconnection [27, 28]. <p> It is likely that subsequent requests from a user may be on different CDs not in the players. The time to exchange CDs, which includes unloading and loading, is in the range of 4 to 18 seconds <ref> [17, 2, 5] </ref>. 13 The access latency is around 400 msec [5]. If a user request has to wait for a CD which is in the middle of playing by a CD player for another user, the elongated waiting time may not be acceptable to both user and system operator. <p> It is likely that subsequent requests from a user may be on different CDs not in the players. The time to exchange CDs, which includes unloading and loading, is in the range of 4 to 18 seconds [17, 2, 5]. 13 The access latency is around 400 msec <ref> [5] </ref>. If a user request has to wait for a CD which is in the middle of playing by a CD player for another user, the elongated waiting time may not be acceptable to both user and system operator.
Reference: [6] <author> W.D. Sincoskie. </author> <title> System Architecture for a Large Scale Video on Demand Service. </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> 22 </volume> <pages> 155-162, </pages> <year> 1991. </year>
Reference-contexts: In [3], Liu, et al., developed a Karaoke client-server prototype to test the feasibility of using traditional public switched network to deliver Karaoke audio, but not video. Apart from the KOD, the area that most related to KOD system design is Video-on-Demand (VOD) service <ref> [6, 7] </ref>, which is aiming at delivering movie or stored TV program. Much research is focusing on: * Data Distribution in a Collaborative Environment Data distribution in hierarchical storage system is regarded as a promising approach for delivering real-time multimedia data [8, 9, 10, 11, 12].
Reference: [7] <author> Daniel Deloddere, Willem Verbiest, and Henri Verhille. </author> <title> Interactive Video On Demand. </title> <journal> IEEE Communications Magazine, </journal> <volume> 32(5) </volume> <pages> 82-88, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: In [3], Liu, et al., developed a Karaoke client-server prototype to test the feasibility of using traditional public switched network to deliver Karaoke audio, but not video. Apart from the KOD, the area that most related to KOD system design is Video-on-Demand (VOD) service <ref> [6, 7] </ref>, which is aiming at delivering movie or stored TV program. Much research is focusing on: * Data Distribution in a Collaborative Environment Data distribution in hierarchical storage system is regarded as a promising approach for delivering real-time multimedia data [8, 9, 10, 11, 12].
Reference: [8] <author> Ram Ramarao and Victor Ramamoorthy. </author> <title> Architectural Design of On-Demand Video Delivery Systems: The Spatio-Temporal Storage Allocation Problem. </title> <booktitle> In IEEE International Conference on Communications (ICC '91), pages 17.6.1-17.6.5, </booktitle> <address> Denver, CO, </address> <year> 1991. </year>
Reference-contexts: Much research is focusing on: * Data Distribution in a Collaborative Environment Data distribution in hierarchical storage system is regarded as a promising approach for delivering real-time multimedia data <ref> [8, 9, 10, 11, 12] </ref>.
Reference: [9] <author> Christos H. Papadimitriou, Srinivas Ramanathan, and P. Venkat Rangan. </author> <title> Information Caching for Delivery of Personalized Video Programs on Home Entertainment Channels. </title> <booktitle> In IEEE International Conference on Multimedia Computing and Systems, </booktitle> <pages> pages 214-223, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: Much research is focusing on: * Data Distribution in a Collaborative Environment Data distribution in hierarchical storage system is regarded as a promising approach for delivering real-time multimedia data <ref> [8, 9, 10, 11, 12] </ref>.
Reference: [10] <author> Yurdaer N. Doganata and Asser N. Tantawi. </author> <title> Making a Cost-Effective Video Server. </title> <booktitle> IEEE Multimedia, </booktitle> <pages> pages 22-30, </pages> <month> Winter </month> <year> 1994. </year>
Reference-contexts: Much research is focusing on: * Data Distribution in a Collaborative Environment Data distribution in hierarchical storage system is regarded as a promising approach for delivering real-time multimedia data <ref> [8, 9, 10, 11, 12] </ref>.
Reference: [11] <author> T.D.C. Little and D. Venkatesh. </author> <title> Popularity-based Assignment of Movies to Storage Devices in a Video-on-Demand System. </title> <journal> Multimedia Systems, </journal> 1995(2) 280-287, 1995. 
Reference-contexts: Much research is focusing on: * Data Distribution in a Collaborative Environment Data distribution in hierarchical storage system is regarded as a promising approach for delivering real-time multimedia data <ref> [8, 9, 10, 11, 12] </ref>. <p> The analysis in <ref> [11] </ref> suggested that more copies of the same movie on a disk does not help the concurrent accesses, and that the probability to satisfy a user's request is maximal when each disk is uniformly accessed. To mitigate hot spot problem and provide VCR-style playout control, a 2-step approach is proposed. <p> The drawbacks of using magnetic disk subsystems as the only mass storage are: 1) it requires more storage capacity for a service module if more titles are available, 2) a large number of requests on a title at close but different time may create a hot spot on disk access <ref> [11, 15] </ref>. 4.1.3 Modularity and Scalability Hierarchy Single level CD-based RAID-based CD Jukeboxes 50 0 RAIDs 0 15 Potential Users (N max A ) 200 1590 Table 3: Comparisons for single-level service using CD jukebox or magnetic disk as mass storage.
Reference: [12] <author> Frank Schaffa and Jean-Paul Nussbaumer. </author> <title> On Bandwidth and Storage Tradeoffs in Multimedia Distribution Networks. </title> <booktitle> In Infocom '95, Vol.3, </booktitle> <pages> pages 1020-1026, </pages> <address> Boston, MA, </address> <month> April </month> <year> 1995. </year>
Reference-contexts: Much research is focusing on: * Data Distribution in a Collaborative Environment Data distribution in hierarchical storage system is regarded as a promising approach for delivering real-time multimedia data <ref> [8, 9, 10, 11, 12] </ref>.
Reference: [13] <author> Asil Dan, Martin Kienzle, and Dinkar Sitaram. </author> <title> Dynamic Segment Replication Policy for Load-Balancing in Video-on-Demand Servers. </title> <type> Rsearch Report RC 19589, </type> <institution> IBM T.J. Watson Research Center, </institution> <address> Yorktown Hights, NY, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: To mitigate hot spot problem and provide VCR-style playout control, a 2-step approach is proposed. First, a movie is chopped into 4 to 8 big segments (coarse grain) and migrated from one autonomous storage system to another according to demand <ref> [13] </ref>.
Reference: [14] <author> Ming-Syan Chen, Dilip D. Kandlur, and Philip S. Yu. </author> <title> Support for Fully Interactive Playout in a Disk-Array-Based Video. </title> <booktitle> In ACM Multimedia 94, </booktitle> <pages> pages 391-398, </pages> <address> San Francisco, CA, </address> <month> October </month> <year> 1994. </year>
Reference-contexts: First, a movie is chopped into 4 to 8 big segments (coarse grain) and migrated from one autonomous storage system to another according to demand [13]. Then, a segment is further divided into groups of frames (fine grain), and placed or stripped across independent magnetic disk subsystems <ref> [14, 15] </ref>. * Buffering in the Server to Avoid Delay Jitter How to cut down the requirement for memory buffer space on server to maximize the concurrent accesses is very important for a cost-effective serivce.
Reference: [15] <author> Milind M. Buddhikot and Guru Parulkar. </author> <title> Distributed Data Layout, Scheduling and Playout Control in a Large Scale Multimedia Storage Server. </title> <type> WUCS 94-33, </type> <institution> Department of Computer Science, Washington University, </institution> <address> St. Louis, MO, </address> <month> January </month> <year> 1995. </year>
Reference-contexts: First, a movie is chopped into 4 to 8 big segments (coarse grain) and migrated from one autonomous storage system to another according to demand [13]. Then, a segment is further divided into groups of frames (fine grain), and placed or stripped across independent magnetic disk subsystems <ref> [14, 15] </ref>. * Buffering in the Server to Avoid Delay Jitter How to cut down the requirement for memory buffer space on server to maximize the concurrent accesses is very important for a cost-effective serivce. <p> The drawbacks of using magnetic disk subsystems as the only mass storage are: 1) it requires more storage capacity for a service module if more titles are available, 2) a large number of requests on a title at close but different time may create a hot spot on disk access <ref> [11, 15] </ref>. 4.1.3 Modularity and Scalability Hierarchy Single level CD-based RAID-based CD Jukeboxes 50 0 RAIDs 0 15 Potential Users (N max A ) 200 1590 Table 3: Comparisons for single-level service using CD jukebox or magnetic disk as mass storage.
Reference: [16] <author> Jonathan C.L. Liu, David H.C. Du, and James A. Schnepf. </author> <title> Supporting Random Access on Real-time Retrieval of Digital Continuous Media. </title> <booktitle> In Infocom '95, Vol.2, </booktitle> <pages> pages 788-795, </pages> <address> Boston, MA, </address> <month> April </month> <year> 1995. </year>
Reference-contexts: The study in <ref> [16] </ref> proposed a fine-grain buffer compensation scheme using main memory in the VOD server to avoid delay jitter for storage and network I/O. KOD service could benefit from some of the aforementioned research on VOD. However, how to modularize-and-scale a VOD system is largely missing.
Reference: [17] <author> Chih-Wen Cheng. </author> <type> Personal Communication. </type> <institution> Industrial Technology Research Institute, Hsinchu, Taiwan, </institution> <month> February </month> <year> 1995. </year>
Reference-contexts: Also, migration strategy for KOD data would be different from VOD's approach. In this paper, we explore SESAME for a scalable cost-effective KOD service architecture which exhibits hierarchical structure, and a novel data distribution strategy based on the empirical access probabilities for KOD titles from ITRI <ref> [17] </ref>. We examine the storage constraints and derive network bandwidth requirements analytically. In particular, our design emphasizes on modularity and scalability issues for the KOD system in a network environment where latency is not a major concern. The system can grow with demand and add new service modules incrementally. <p> The bottleneck for data delivery over a network environment is either in storage I/O or network I/O bandwidth. Characteristics of several storage and network devices in consideration are listed in Table 1 for reference <ref> [4, 5, 17, 19, 20, 21, 22, 23, 24, 25, 26] </ref>. In order to achieve modularity, we propose to use low cost server, which has high performance commodity processor such as Intel Pentium or PowerPC, and 132 MB/sec PCI bus for system interconnection [27, 28]. <p> A video CD has the maximum storage capacity of 650 MB, which can store more than 10 titles. A statistic <ref> [17] </ref> gathered from field visit to a Karaoke house has shown that the number of Karaoke titles from most popular to least popular ones is about 4800. <p> Data Locality. Data locality signifies the importance of balancing the load in the service hierarchy. A highly concentrated data retrieval on a few servers would result in poor performance for the entire system. Figure 3 <ref> [17] </ref> depicts the skewed demand distribution for user requests on Karaoke titles. 7 (a) Access probability distribution (b) Cumulative probability 8 Data Granularity. <p> GHM intends to factor in the group preference into DHM. The models assumes that, the list of titles in a server is not updated frequently due to the aforementioned observations. The numerical results are based on the empirical study for KOD user requests <ref> [17] </ref>. 3.2.1 Distributed Hierarchical Model In view of data locality, we dynamically allocate titles in the service hierarchy based on their popularities. A rule of thumb is that, a service module should use the least amount of storage space to maximize the access probability since the user requests are skewed. <p> It is likely that subsequent requests from a user may be on different CDs not in the players. The time to exchange CDs, which includes unloading and loading, is in the range of 4 to 18 seconds <ref> [17, 2, 5] </ref>. 13 The access latency is around 400 msec [5]. If a user request has to wait for a CD which is in the middle of playing by a CD player for another user, the elongated waiting time may not be acceptable to both user and system operator.
Reference: [18] <author> James Schnepf, Vahid Mashayekhi, John Riedl, and David Du. </author> <title> Closing the Gap in Distance Learning: Computer-Supported, </title> <booktitle> Participative, Media-Rich Education. Education Technology Review, </booktitle> <pages> pages 19-25, </pages> <month> Autumn/Winter </month> <year> 1994. </year>
Reference-contexts: The system can grow with demand and add new service modules incrementally. The approach may be extended to some other areas of interests such as Distance Learning <ref> [18] </ref>, where a flexible presentation or course review requires storing/caching/scheduling of small pieces of hypermedia-based video clips, narratives, graphs, or text files, and desires proper handling for user feedback. In short, our objectives are four-fold: Modularity. Every system component can be snapped in and replaced easily. Scalability. <p> Finally, we discuss the implementation strategy for a KOD system in a Karaoke house as well as in campus-wide setting. Since KOD is dealing with relatively short duration of multimedia object, our approach lays a 22 common ground and can be extended to address similar issues in Distance Learning <ref> [18] </ref>. Our future work will be looking at data migration strategy, dynamic storage allocation, and scheduling policies.
Reference: [19] <author> IBM Corporation. </author> <title> IBM RAIDiant Array Model 110. Document ID: </title> <type> 7135-110. </type> <institution> IBM Corporation, </institution> <month> April </month> <year> 1994. </year>
Reference-contexts: The bottleneck for data delivery over a network environment is either in storage I/O or network I/O bandwidth. Characteristics of several storage and network devices in consideration are listed in Table 1 for reference <ref> [4, 5, 17, 19, 20, 21, 22, 23, 24, 25, 26] </ref>. In order to achieve modularity, we propose to use low cost server, which has high performance commodity processor such as Intel Pentium or PowerPC, and 132 MB/sec PCI bus for system interconnection [27, 28]. <p> The required disk capacity is around 5000 titles fi56:25 MB/title = 281:25 GB. Given a RAID with 20 GB of storage <ref> [19] </ref>, the service module needs to hook up to d 281:25 20 e = 15 RAIDs. Assume each RAID connects to a Fast-Wide SCSI-II channel.
Reference: [20] <author> Ismail Dalgic, William Chien, and Fouad A. Tobagi. </author> <title> Evaluation of 10Base-T and 100Base-T Ethernets Carrying Video, Audio and Data Traffic. </title> <booktitle> In IEEE Infocom '94, Vol.3, </booktitle> <pages> pages 1094-1102, </pages> <address> Toronto, Ontario, Canada, </address> <month> June </month> <year> 1994. </year> <month> 24 </month>
Reference-contexts: The bottleneck for data delivery over a network environment is either in storage I/O or network I/O bandwidth. Characteristics of several storage and network devices in consideration are listed in Table 1 for reference <ref> [4, 5, 17, 19, 20, 21, 22, 23, 24, 25, 26] </ref>. In order to achieve modularity, we propose to use low cost server, which has high performance commodity processor such as Intel Pentium or PowerPC, and 132 MB/sec PCI bus for system interconnection [27, 28]. <p> Our approach provides general guidelines and is based on a relative scale. The assumptions can be easily replaced by real performance metrics for the subsystems in consideration <ref> [29, 26, 20] </ref>. The symbols used throughout this paper and their brief descriptions are listed in Table 2. 3 Hierarchical Service Architecture We first formulate the problem domain for SESAME within the context of KOD, and then show our approaches.
Reference: [21] <author> Greg Watson, Alan Albrecht, Joe Curcio, Daniel Dove, Steven Goody, John Grinham, Michael P. Spratt, and Patricia A. Thaler. </author> <title> The Demand Priority MAC Protocol. </title> <journal> IEEE Network Magazine, </journal> <volume> 9(1) </volume> <pages> 28-34, </pages> <month> January/February </month> <year> 1995. </year>
Reference-contexts: The bottleneck for data delivery over a network environment is either in storage I/O or network I/O bandwidth. Characteristics of several storage and network devices in consideration are listed in Table 1 for reference <ref> [4, 5, 17, 19, 20, 21, 22, 23, 24, 25, 26] </ref>. In order to achieve modularity, we propose to use low cost server, which has high performance commodity processor such as Intel Pentium or PowerPC, and 132 MB/sec PCI bus for system interconnection [27, 28].
Reference: [22] <author> Rober J. Walsh and Cuneyt M. Ozveren. </author> <title> The GIGAswitch Control Processor. </title> <journal> IEEE Network Magazine, </journal> <volume> 9(1) </volume> <pages> 36-43, </pages> <month> January/February </month> <year> 1995. </year>
Reference-contexts: The bottleneck for data delivery over a network environment is either in storage I/O or network I/O bandwidth. Characteristics of several storage and network devices in consideration are listed in Table 1 for reference <ref> [4, 5, 17, 19, 20, 21, 22, 23, 24, 25, 26] </ref>. In order to achieve modularity, we propose to use low cost server, which has high performance commodity processor such as Intel Pentium or PowerPC, and 132 MB/sec PCI bus for system interconnection [27, 28].
Reference: [23] <author> ATM Forum. </author> <title> ATM User-Network Interface Specification Version 3.0. </title> <publisher> Prentice Hall, Inc., </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1993. </year>
Reference-contexts: The bottleneck for data delivery over a network environment is either in storage I/O or network I/O bandwidth. Characteristics of several storage and network devices in consideration are listed in Table 1 for reference <ref> [4, 5, 17, 19, 20, 21, 22, 23, 24, 25, 26] </ref>. In order to achieve modularity, we propose to use low cost server, which has high performance commodity processor such as Intel Pentium or PowerPC, and 132 MB/sec PCI bus for system interconnection [27, 28].
Reference: [24] <author> Broadband Publishing Corporation. </author> <title> The ATM Report. </title> <publisher> Broadband Publishing Corporation, </publisher> <address> Wilmington, DE, </address> <month> February 22 </month> <year> 1995. </year>
Reference-contexts: The bottleneck for data delivery over a network environment is either in storage I/O or network I/O bandwidth. Characteristics of several storage and network devices in consideration are listed in Table 1 for reference <ref> [4, 5, 17, 19, 20, 21, 22, 23, 24, 25, 26] </ref>. In order to achieve modularity, we propose to use low cost server, which has high performance commodity processor such as Intel Pentium or PowerPC, and 132 MB/sec PCI bus for system interconnection [27, 28].
Reference: [25] <author> Anita Karve. </author> <title> A Network's Best Friend. </title> <journal> LAN Magazine, </journal> <pages> pages 83-88, </pages> <month> July </month> <year> 1995. </year>
Reference-contexts: The bottleneck for data delivery over a network environment is either in storage I/O or network I/O bandwidth. Characteristics of several storage and network devices in consideration are listed in Table 1 for reference <ref> [4, 5, 17, 19, 20, 21, 22, 23, 24, 25, 26] </ref>. In order to achieve modularity, we propose to use low cost server, which has high performance commodity processor such as Intel Pentium or PowerPC, and 132 MB/sec PCI bus for system interconnection [27, 28].
Reference: [26] <author> Jenwei Hsieh, Mengjou Lin, David H.C. Du, and Thomas M. Ruwart. </author> <title> Experimental Performance Study of a Mass Storage System for Video on Demand. </title> <booktitle> In Infocom '95, </booktitle> <volume> Vol. 2, </volume> <pages> pages 771-778, </pages> <address> Boston, MA, </address> <month> April </month> <year> 1995. </year>
Reference-contexts: The bottleneck for data delivery over a network environment is either in storage I/O or network I/O bandwidth. Characteristics of several storage and network devices in consideration are listed in Table 1 for reference <ref> [4, 5, 17, 19, 20, 21, 22, 23, 24, 25, 26] </ref>. In order to achieve modularity, we propose to use low cost server, which has high performance commodity processor such as Intel Pentium or PowerPC, and 132 MB/sec PCI bus for system interconnection [27, 28]. <p> The performance study for RAID 3 [29] has shown that a peak rate of 17.8 MB/sec is attainable through a Fast-Wide SCSI II channel, which is about 90% of the maximum channel throughput. <ref> [26] </ref> presents the experimental results for maximum number of concurrent accesses by applying various stripping strategies to RAIDs. * Capacity For a 5-minute title, it takes 56:25 MB for 1.5 Mbps MPEG video and audio. <p> Our approach provides general guidelines and is based on a relative scale. The assumptions can be easily replaced by real performance metrics for the subsystems in consideration <ref> [29, 26, 20] </ref>. The symbols used throughout this paper and their brief descriptions are listed in Table 2. 3 Hierarchical Service Architecture We first formulate the problem domain for SESAME within the context of KOD, and then show our approaches.
Reference: [27] <author> Intel Corporation. </author> <title> PCI System Design Guide. Revision 1.0. Architecture Development Lab, </title> <publisher> Intel Corporation, </publisher> <month> September </month> <year> 1993. </year>
Reference-contexts: In order to achieve modularity, we propose to use low cost server, which has high performance commodity processor such as Intel Pentium or PowerPC, and 132 MB/sec PCI bus for system interconnection <ref> [27, 28] </ref>. A fully configured server, for instance, may have 3 SCSI-II interfaces and 3 ATM interfaces on its 6 PCI slots to maximize its I/O throughput. The fundamental considerations involving chosing storage and network components are described briefly as follows. <p> In the first approach, the I/O subsystem of each machine must support 40 MB/s or 60 MB/s for two or three RAIDs, respectively. Thus, one PCI bus <ref> [27, 28] </ref>, which is running at 132 MB/s peak throughput, can theoretically support the I/O requirement of the storage. Since each machine at the second level may have to sustain 40 MB/s or 60 MB/s aggregate network bandwidth, a stand-alone machine may require 4 or 5 Fast Ethernet interfaces, respectively.
Reference: [28] <author> John Morrissey. </author> <title> Handling Large Still Images Now: PCI Bus Board Impact. </title> <booktitle> Advanced Imaging, </booktitle> <pages> pages 38-42, </pages> <month> February </month> <year> 1995. </year>
Reference-contexts: In order to achieve modularity, we propose to use low cost server, which has high performance commodity processor such as Intel Pentium or PowerPC, and 132 MB/sec PCI bus for system interconnection <ref> [27, 28] </ref>. A fully configured server, for instance, may have 3 SCSI-II interfaces and 3 ATM interfaces on its 6 PCI slots to maximize its I/O throughput. The fundamental considerations involving chosing storage and network components are described briefly as follows. <p> In the first approach, the I/O subsystem of each machine must support 40 MB/s or 60 MB/s for two or three RAIDs, respectively. Thus, one PCI bus <ref> [27, 28] </ref>, which is running at 132 MB/s peak throughput, can theoretically support the I/O requirement of the storage. Since each machine at the second level may have to sustain 40 MB/s or 60 MB/s aggregate network bandwidth, a stand-alone machine may require 4 or 5 Fast Ethernet interfaces, respectively.
Reference: [29] <author> Thomas M. Ruwart and Matthew T. O'keefe. </author> <title> Performance Characteristics of a 100MB/second Disk Array. </title> <type> Technical Report preliminary version, </type> <institution> Army High Performance Computing Research Center, University of Minnesota, Minneapolis, Minnesota, </institution> <month> November </month> <year> 1993. </year>
Reference-contexts: Magnetic disk subsystem can schedule random access to different places of the disks so that more titles can be retrieved at a time. The performance study for RAID 3 <ref> [29] </ref> has shown that a peak rate of 17.8 MB/sec is attainable through a Fast-Wide SCSI II channel, which is about 90% of the maximum channel throughput. [26] presents the experimental results for maximum number of concurrent accesses by applying various stripping strategies to RAIDs. * Capacity For a 5-minute title, <p> Our approach provides general guidelines and is based on a relative scale. The assumptions can be easily replaced by real performance metrics for the subsystems in consideration <ref> [29, 26, 20] </ref>. The symbols used throughout this paper and their brief descriptions are listed in Table 2. 3 Hierarchical Service Architecture We first formulate the problem domain for SESAME within the context of KOD, and then show our approaches.
Reference: [30] <author> Linda Geppert. </author> <title> Solid State. </title> <journal> IEEE Spectrum, </journal> <pages> pages 35-39, </pages> <month> January </month> <year> 1995. </year>
Reference-contexts: The advent of semiconductor has driven down the cost of using solid state memory in the computer system for file caching <ref> [30, 31] </ref>. Typical departmental server nowadays is equipped with hundreds of megabytes of main memory. Special purpose server such as those used for electronic design automation is even pushing the main memory to the gigabyte range.
Reference: [31] <author> Michael D. Dahlin, Randolph Y. Wang, Thomas E. Anderson, and David A. Patterson. </author> <title> Cooperative Caching: Using Remote Client Memory to Improve File System Performance. </title> <booktitle> In First Symposium on Operating Systems Design and Implementation, </booktitle> <pages> pages 267-280, </pages> <address> Monterey, CA, </address> <month> November </month> <year> 1994. </year> <booktitle> USENIX Association and ACM SIGOPS. </booktitle> <pages> 25 </pages>
Reference-contexts: The advent of semiconductor has driven down the cost of using solid state memory in the computer system for file caching <ref> [30, 31] </ref>. Typical departmental server nowadays is equipped with hundreds of megabytes of main memory. Special purpose server such as those used for electronic design automation is even pushing the main memory to the gigabyte range.
References-found: 31

