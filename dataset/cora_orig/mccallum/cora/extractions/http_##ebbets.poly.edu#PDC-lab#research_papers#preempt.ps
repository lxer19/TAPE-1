URL: http://ebbets.poly.edu/PDC-lab/research_papers/preempt.ps
Refering-URL: http://ebbets.poly.edu/PDC-lab/wein.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: A 1.47-approximation algorithm for a preemptive single-machine scheduling problem  
Author: Michel X. Goemans Joel M. Wein David P. Williamson 
Affiliation: U.C.L. M.I.T.  Polytechnic University  IBM Watson  
Abstract: In this note, we give a 1.47-approximation algorithm for the preemptive scheduling of jobs with release dates on a single machine so as to minimize the weighted sum of job completion times; this problem is denoted by 1jr j ; pmtnj P j w j C j in the notation of Lawler et al. [6]. Our result improves on a 2-approximation algorithm due to Hall, Schulz, Shmoys and Wein [4], and also yields an improved bound on the quality of a well-known linear programming relaxation of the problem.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Chakrabarti, C. Phillips, A. S. Schulz, D. Shmoys, C. Stein, and J. Wein. </author> <title> Improved approximation algorithms for minsum criteria. </title> <booktitle> In Automata, Languages, and Programming, number 1099 in Lecture Notes in Computer Science, </booktitle> <pages> pages 646-657, </pages> <address> Berlin, 1996. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Watson Research Center, Room 33-219, P.O. Box 218, Yorktown Heights, NY, 10598. Email: dpw@watson.ibm.com. 1 There has been a good deal of research recently on the design and analysis of approximation algorithms for scheduling problems in which the objective is to minimize the sum of weighted completion times <ref> [7, 4, 1, 9] </ref>. These papers draw on interesting theoretical and experimental work on polyhedral approaches to these problems. As corollaries of the performance guarantees of these approximation algorithms these papers also give bounds on the quality of linear-programming relaxations of the problems that had had no prior worst-case analysis.
Reference: [2] <author> M. X. Goemans. </author> <title> A supermodular relaxation for scheduling with release dates. </title> <editor> In W. H. Cunningham, S. T. McCormick, and M. Queyranne, editors, </editor> <title> Integer Programming and Combinatorial Optimization, </title> <booktitle> number 1084 in Lecture Notes in Computer Science, </booktitle> <pages> pages 288-300, </pages> <address> Berlin, 1996. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Based on this relaxation, they gave a 3-approximation algorithm for the nonpreemptive problem and a 2-approximation algorithm for the preemptive problem. Subsequent to these results, Goemans developed a new combinatorial understanding of this C j -based formulation <ref> [2] </ref> and then, based on it, developed a 2-approximation algorithm for 1jr j j j w j C j [3]. <p> In this note we show that some of the ideas of Goemans <ref> [2, 3] </ref> can be used to give an improved preemptive algorithm as well. Specifically, we give a 1.47-approximation algorithm for 1jr j ; pmtnj P j w j C j . <p> In Section 3 we present our algorithm and its analysis. 2 Some preliminaries The algorithm of Goemans [3] for the non-preemptive problem works as follows. First, the algorithm solves a linear programming relaxation of the scheduling problem. As shown in <ref> [2] </ref> there is an O (n log n) time algorithm to solve the relaxation. The algorithm then uses the structure of an optimal solution to the linear programming relaxation and randomization to create a non-preemptive schedule.
Reference: [3] <author> M. X. Goemans. </author> <title> Improved approximation algorithms for scheduling with release dates. </title> <booktitle> In Proceedings of the 8th Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 591-598, </pages> <year> 1997. </year>
Reference-contexts: Subsequent to these results, Goemans developed a new combinatorial understanding of this C j -based formulation [2] and then, based on it, developed a 2-approximation algorithm for 1jr j j j w j C j <ref> [3] </ref>. <p> In this note we show that some of the ideas of Goemans <ref> [2, 3] </ref> can be used to give an improved preemptive algorithm as well. Specifically, we give a 1.47-approximation algorithm for 1jr j ; pmtnj P j w j C j . <p> In work subsequent to an announcement of our result, Schulz and Skutella [8] gave a 4/3-approximation algorithm for this problem. This note is structured as follows. In Section 2, we review ideas and theorems from Goemans <ref> [3] </ref> that we will need. In Section 3 we present our algorithm and its analysis. 2 Some preliminaries The algorithm of Goemans [3] for the non-preemptive problem works as follows. First, the algorithm solves a linear programming relaxation of the scheduling problem. <p> This note is structured as follows. In Section 2, we review ideas and theorems from Goemans <ref> [3] </ref> that we will need. In Section 3 we present our algorithm and its analysis. 2 Some preliminaries The algorithm of Goemans [3] for the non-preemptive problem works as follows. First, the algorithm solves a linear programming relaxation of the scheduling problem. As shown in [2] there is an O (n log n) time algorithm to solve the relaxation. <p> We will principally need the following result from the analysis in <ref> [3] </ref>. S can be decomposed into sets of jobs S with certain properties. This decomposition is called the canonical decomposition, and sets S in the decomposition canonical sets. <p> This decomposition is called the canonical decomposition, and sets S in the decomposition canonical sets. These sets S have the property that in schedule S, jobs in S are processed continuously between r (S) and r (S) + p (S). Furthermore, the following theorem is proved in <ref> [3] </ref>. Theorem 1 [[3]] Let ^ C j be the completion time of job j in a preemptive schedule constructed by a randomized algorithm. If for all canonical sets S, E 4 j2S 3 then E h P i is no greater than Z fl LP .
Reference: [4] <author> L. A. Hall, A. S. Schulz, D. B. Shmoys, and J. Wein. </author> <title> Scheduling to minimize average completion time: Off-line and on-line approximation algorithms. </title> <journal> Mathematics of Operations Research, </journal> <volume> 22 </volume> <pages> 513-544, </pages> <month> Aug. </month> <year> 1997. </year>
Reference-contexts: Watson Research Center, Room 33-219, P.O. Box 218, Yorktown Heights, NY, 10598. Email: dpw@watson.ibm.com. 1 There has been a good deal of research recently on the design and analysis of approximation algorithms for scheduling problems in which the objective is to minimize the sum of weighted completion times <ref> [7, 4, 1, 9] </ref>. These papers draw on interesting theoretical and experimental work on polyhedral approaches to these problems. As corollaries of the performance guarantees of these approximation algorithms these papers also give bounds on the quality of linear-programming relaxations of the problems that had had no prior worst-case analysis. <p> The first approximation algorithm for 1jr j ; pmtnj P j w j C j was given by Phillips, Stein and Wein [7], who gave an (8 + *)-approximation algorithm based on a certain linear-programming relaxation of the problem. This was improved by Hall, Schulz, Shmoys and Wein <ref> [4] </ref> who made use of a linear-programming relaxation in C j variables that was a valid relaxation of both 1jr j ; pmtnj P the non-preemptive variant 1jr j j P j w j C j . <p> By making the transformation C j = M j + p j =2, one can obtain the equivalent LP formulation in the completion time variables C j used by Hall et al. <ref> [4] </ref>. The variable M j represents the mean busy time of job j. Note that in a non-preemptive schedule, this is simply the "midpoint" of job j, M j = C j p j =2, so that the objective function of (LP ) is the sum of weighted completion times. <p> The linear program (LP ) is a valid relaxation for both non-preemptive and preemptive schedules (previously observed by Hall et al. <ref> [4] </ref> for the C j -based formulation). Goemans proves that an optimal schedule for (LP ) can be constructed by always scheduling the job available with the minimum index. Call this schedule S. Because of release dates, this schedule will sometimes be a preemptive one.
Reference: [5] <author> J. Labetoulle, E. L. Lawler, J. K. Lenstra, and A. H. G. Rinnooy Kan. </author> <title> Preemptive scheduling of uniform machines subject to release dates. </title> <editor> In W. R. Pulleyblank, editor, </editor> <booktitle> Progress in Combinatorial Optimization, </booktitle> <pages> pages 245-261. </pages> <publisher> Academic Press, </publisher> <year> 1984. </year>
Reference-contexts: This scheduling problem is denoted 1jr j ; pmtnj P j w j C j in the notation of Lawler et al. [6]. The problem 1jr j ; pmtnj P j w j C j was shown to be strongly NP-hard by Labetoulle, Lawler, Lenstra, and Rinnooy Kan <ref> [5] </ref>. Thus we will provide an approximation algorithm for the problem.
Reference: [6] <author> E. L. Lawler, J. K. Lenstra, A. H. G. Rinnooy Kan, and D. B. Shmoys. </author> <title> Sequencing and scheduling: Algorithms and complexity. </title> <editor> In S. C. Graves, A. H. G. Rinnooy Kan, and P. H. Zipkin, editors, </editor> <booktitle> Handbooks in Operations Research and Management Science, </booktitle> <volume> Vol. 4, </volume> <booktitle> Logistics of Production and Inventory, </booktitle> <pages> pages 445-522. </pages> <publisher> North-Holland, </publisher> <year> 1993. </year>
Reference-contexts: This scheduling problem is denoted 1jr j ; pmtnj P j w j C j in the notation of Lawler et al. <ref> [6] </ref>. The problem 1jr j ; pmtnj P j w j C j was shown to be strongly NP-hard by Labetoulle, Lawler, Lenstra, and Rinnooy Kan [5]. Thus we will provide an approximation algorithm for the problem.
Reference: [7] <author> C. Phillips, C. Stein, and J. Wein. </author> <title> Scheduling jobs that arrive over time. </title> <editor> In S. G. Akl, editor, </editor> <booktitle> Algorithms and Data Structures, number 955 in Lecture Notes in Computer Science, </booktitle> <pages> pages 86-97, </pages> <address> Berlin, </address> <year> 1995. </year> <note> Springer-Verlag. Journal version to appear in Mathematical Programming B. </note>
Reference-contexts: Watson Research Center, Room 33-219, P.O. Box 218, Yorktown Heights, NY, 10598. Email: dpw@watson.ibm.com. 1 There has been a good deal of research recently on the design and analysis of approximation algorithms for scheduling problems in which the objective is to minimize the sum of weighted completion times <ref> [7, 4, 1, 9] </ref>. These papers draw on interesting theoretical and experimental work on polyhedral approaches to these problems. As corollaries of the performance guarantees of these approximation algorithms these papers also give bounds on the quality of linear-programming relaxations of the problems that had had no prior worst-case analysis. <p> The first approximation algorithm for 1jr j ; pmtnj P j w j C j was given by Phillips, Stein and Wein <ref> [7] </ref>, who gave an (8 + *)-approximation algorithm based on a certain linear-programming relaxation of the problem. <p> This yields a 2-approximation algorithm for both the non-preemptive and the preemptive problems, and a proof that the worst-case ratio is at most two in both cases. We will also be using the idea of an ff-point in a preemptive schedule, first introduced by <ref> [7] </ref>. Given some parameter ff, 0 ff 1; and a preemptive schedule, the ff-point of job j is the time at which ffp j units of job j have been processed. 3 The algorithm and its analysis Our scheduling algorithm is as follows.
Reference: [8] <author> A. S. Schulz and M. Skutella. </author> <title> Scheduling-LPs bear probabilities: Randomized approximations for min-sum criteria. </title> <type> Technical Report 533/1996, </type> <institution> Technische Universitat Berlin, Fachbereich Mathematik, </institution> <year> 1996. </year>
Reference-contexts: Specifically, we give a 1.47-approximation algorithm for 1jr j ; pmtnj P j w j C j . In work subsequent to an announcement of our result, Schulz and Skutella <ref> [8] </ref> gave a 4/3-approximation algorithm for this problem. This note is structured as follows. In Section 2, we review ideas and theorems from Goemans [3] that we will need.
Reference: [9] <author> A. S. Schulz and M. Skutella. </author> <title> Scheduling-LPs bear probabilities: Randomized approximations for min-sum criteria. </title> <editor> In R. Burkard and G. Woeginger, editors, </editor> <booktitle> Algorithms - ESA'97, volume 1284 of LNCS, </booktitle> <pages> pages 416-429. </pages> <publisher> Springer, </publisher> <address> Berlin, </address> <year> 1997. </year> <month> 6 </month>
Reference-contexts: Watson Research Center, Room 33-219, P.O. Box 218, Yorktown Heights, NY, 10598. Email: dpw@watson.ibm.com. 1 There has been a good deal of research recently on the design and analysis of approximation algorithms for scheduling problems in which the objective is to minimize the sum of weighted completion times <ref> [7, 4, 1, 9] </ref>. These papers draw on interesting theoretical and experimental work on polyhedral approaches to these problems. As corollaries of the performance guarantees of these approximation algorithms these papers also give bounds on the quality of linear-programming relaxations of the problems that had had no prior worst-case analysis.
References-found: 9

