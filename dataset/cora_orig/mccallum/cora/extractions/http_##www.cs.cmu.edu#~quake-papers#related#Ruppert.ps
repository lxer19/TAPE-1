URL: http://www.cs.cmu.edu/~quake-papers/related/Ruppert.ps
Refering-URL: http://www.cs.cmu.edu/afs/cs/project/quake/public/www/triangle.research.html
Root-URL: 
Title: A Delaunay Refinement Algorithm for Quality 2-Dimensional Mesh Generation triangles have a bounded aspect ratio.
Author: Jim Ruppert 
Date: February 2, 1994  
Note: Submission to Journal of Algorithms  All  
Affiliation: NASA Ames Research Center  
Abstract: We present a simple new algorithm for triangulating polygons and planar straightline graphs. It provides "shape" and "size" guarantees: Such "quality" triangulations are desirable as meshes for the finite element method, in which the running time generally increases with the number of triangles, and where the convergence and stability may be hurt by very skinny triangles. The technique we use|successive refinement of a Delaunay triangulation|extends a mesh generation technique of Chew by allowing triangles of varying sizes. Compared with previous quadtree-based algorithms for quality mesh generation, the Delaunay refinement approach is much simpler and generally produces meshes with fewer triangles. We also discuss an implementation of the algorithm and evaluate its performance on a variety of inputs. fl NASA Ames Research Center, M/S T045-1, Moffett Field, CA 94035-1000. The author is an employee of the Computer Sciences Corporation. Work funded by NASA contract NAS 2-12961. Much of this work was completed while the author was a student in the Computer Science Division at the University of California at Berkeley, supported by funds from NSF PYI Grant CCR-90-58840. A portion of this work was done while the author was at Hewlett-Packard Laboratories, Palo Alto, CA. E-mail: ruppert@nas.nasa.gov. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> B. Baker, E. Grosse, and C.S. Rafferty. </author> <title> Nonobtuse triangulation of polygons. </title> <journal> Disc. and Comput. Geom., </journal> <volume> 3 </volume> <pages> 147-168, </pages> <year> 1988. </year>
Reference-contexts: The first algorithm to give a shape guarantee was due to Baker, Grosse and Rafferty <ref> [1] </ref>. They gave a technique for producing a non-obtuse triangulation of polygons, in which all angles are at most 90 ffi . <p> They show how to triangulate polygons so that every triangle has aspect ratio at most 5. In addition, their analysis shows that the mesh is size-optimal. One of the key ideas in the algorithm is to replace the uniform grid of <ref> [1] </ref> with a quadtree, which is a recursive subdivision into squares of varying sizes. This yields large triangles in areas of large features. By keeping the quadtree balanced, aspect ratios are bounded in the output. Melissaratos and Souvaine give some extensions to the quadtree algorithm [12].
Reference: [2] <author> M. Bern and D. Eppstein. </author> <title> Mesh generation and optimal triangulation. </title> <editor> In D.Z. Du and F.K. Hwang, editors, </editor> <booktitle> Computing in Euclidean Geometry. World Scientific, </booktitle> <year> 1992. </year>
Reference-contexts: PSLGs include polygons, polygons with holes, and complexes (objects made of multiple polygons); dangling edges and isolated vertices are also allowed, as shown in Theoretically speaking, our algorithm essentially matches the PSLG algorithms of [12] and [3](modified as mentioned in <ref> [2] </ref>), but it is distinguished from them in a number of ways: (1) The Delaunay refinement approach is 4 fundamentally different from the quadtree techniques. (2) It is much simpler.
Reference: [3] <author> M. Bern, D. Eppstein, and J.R. Gilbert. </author> <title> Provably good mesh generation. </title> <booktitle> In Proceedings of the 31st Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 231-241. </pages> <publisher> IEEE, </publisher> <year> 1990. </year> <note> To appear in J. Comp. System Science. </note>
Reference-contexts: Bern, Eppstein and Gilbert gave the first mesh generation algorithm with both shape and size guarantees <ref> [3] </ref>. They show how to triangulate polygons so that every triangle has aspect ratio at most 5. In addition, their analysis shows that the mesh is size-optimal. <p> Below, we will mention the case of smaller input angles. Any input vertex p with a small angle is "shielded" by committing in advance to a specific triangulation around p. Previous approaches surrounded each vertex with a circle <ref> [3] </ref>, or with a cube in 3D [14]. We will sketch how to do this with a circle here. First, for every input vertex p, the local feature size lfs (p) is computed. <p> Next we sketch a more complicated construction that can avoid splitting the smallest input angle at all. As shown in <ref> [3] </ref>, a construction like that in edge is split at most a constant number of times, we can use a constant number of layers to "merge" the triangles together. <p> In Section 2 we also mentioned a situation in which an encroached upon segment need not be split if the encroaching vertex lies on some other input segment. Finally, the user may wish to eliminate large angles, but allow small angles. As discussed in <ref> [3] </ref>, this can generally be done with fewer triangles than in the no-small-angle case. <p> In Figure 17, we see that short segments are not broken up at all, and so there is usually only 1 layer. This contrasts with the algorithm in <ref> [3] </ref>, in which each input vertex must be isolated within a 5-by-5 grid of quadtree squares, yielding at least 2-3 layers of triangles between any two vertices.
Reference: [4] <author> L.P. Chew. </author> <title> Constrained Delaunay triangulation. </title> <journal> Algorithmica, </journal> <volume> 4 </volume> <pages> 97-108, </pages> <year> 1989. </year>
Reference: [5] <author> L.P. Chew. </author> <title> Guaranteed-quality triangular meshes. </title> <type> Technical report, </type> <institution> Cornell University, </institution> <year> 1989. </year> <note> No. TR-89-983. </note>
Reference-contexts: All the above techniques use grids or quadtrees. A quite different technique for quality mesh generation is Delaunay refinement, so-called because a Delaunay triangulation is maintained, and some criterion is used to successively pick new points to add to it. Chew <ref> [5] </ref> presented a Delaunay refinement algorithm that triangulates a given polygon into a mesh in which all angles are between 30 ffi and 120 ffi . The algorithm produces uniform meshes, meaning that all triangles are roughly the same size.
Reference: [6] <author> L.P. Chew. </author> <title> Guaranteed-quality mesh generation for curved surfaces. </title> <booktitle> In Proceedings of the Ninth Annual Symposium on Computational Geometry, </booktitle> <pages> pages 274-280. </pages> <publisher> ACM, </publisher> <year> 1993. </year>
Reference-contexts: We discuss this briefly in Section 5, and Chew discusses its use in a related mesh generation algorithm <ref> [6] </ref>. The remainder of this paper is organized as follows. In the next section we present the algorithm. Then we show that it halts and outputs a valid triangulation satisfying the minimum angle bound. <p> The CDT can be computed with the Riemann sheet technique of Seidel [20]. This corresponds to Mitchell and Vavasis' use of Riemann volumes for octree mesh generation [14]. Chew has recently described a related mesh generation algorithm that uses the CDT <ref> [6] </ref>. Using the CDT, one can develop a modified Delaunay refinement algorithm to produce meshes that are unique (for a given ff) and independent of the orientation of the input.
Reference: [7] <author> T. Dey, C. Bajaj, and K. Sugihara. </author> <title> On good triangulations in three dimensions. </title> <booktitle> In Proceedings of the ACM Symposium on Solid Modeling Foundations and CAD/CAM Applications, </booktitle> <year> 1991. </year>
Reference-contexts: These flat sliver tetrahedra appear quite often in 3D Delaunay triangulations. The difficulties of avoiding them or removing them have been discussed in a number of papers, including [8], [13], <ref> [7] </ref>. 8 Conclusion We have presented a new Delaunay refinement algorithm for bounded aspect ratio triangulation of planar straightline graphs. The algorithm comes with theoretical guarantees on its behavior, yet it is simple enough to be easily implemented, and is likely to find use in practical applications.
Reference: [8] <author> D. </author> <title> Field. Implementing Watson's algorithm in three dimensions. </title> <booktitle> In Proceedings of the Second Annual Symposium on Computational Geometry, </booktitle> <pages> pages 246-259. </pages> <publisher> ACM, </publisher> <year> 1986. </year>
Reference-contexts: These flat sliver tetrahedra appear quite often in 3D Delaunay triangulations. The difficulties of avoiding them or removing them have been discussed in a number of papers, including <ref> [8] </ref>, [13], [7]. 8 Conclusion We have presented a new Delaunay refinement algorithm for bounded aspect ratio triangulation of planar straightline graphs. The algorithm comes with theoretical guarantees on its behavior, yet it is simple enough to be easily implemented, and is likely to find use in practical applications.
Reference: [9] <author> S. Fortune. </author> <title> A sweepline algorithm for Voronoi diagrams. </title> <journal> Algorithmica, </journal> <volume> 2 </volume> <pages> 153-174, </pages> <year> 1987. </year>
Reference-contexts: As described below, we will generally be adding vertices that are circumcenters, though when such locations are unsuitable, we will instead place new vertices on the input segments. The particular triangulation we maintain is a Delaunay triangulation, which has been extensively discussed in the literature (see, e.g., [15] or <ref> [9] </ref>). We recall the definition: given a finite set of points in the plane, three points contribute a triangle to the Delaunay triangulation if the circumcircle through those points contains no other point in its interior. <p> An important choice to be made in any implementation is the Delaunay triangulation algorithm to build upon. There are incremental algorithms where points are added one at a time to a growing triangulation, e.g. [10], and all-at-once algorithms such as the sweepline algorithm of Fortune <ref> [9] </ref>.
Reference: [10] <author> L.J. Guibas and J. Stolfi. </author> <title> Primitives for the manipulation of general sub-divisions and the computation of Voronoi diagrams. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 4 </volume> <pages> 74-123, </pages> <year> 1985. </year>
Reference-contexts: Many of the vertices along the outline were added by the algorithm. An important choice to be made in any implementation is the Delaunay triangulation algorithm to build upon. There are incremental algorithms where points are added one at a time to a growing triangulation, e.g. <ref> [10] </ref>, and all-at-once algorithms such as the sweepline algorithm of Fortune [9]. <p> We have not analyzed the asymptotic running time of the Delaunay refinement algorithm in detail. The worst-case running time for incremental Delaunay triangulation is O (M 2 ), where M is the output size. In practice, such algorithms usually run much faster <ref> [10] </ref>. Much of the time is typically taken up locating the triangle containing the added point.
Reference: [11] <author> D.T. Lee and A. Lin. </author> <title> Generalized Delaunay triangulation for planar graphs. </title> <journal> Discrete Comput. Geom., </journal> <volume> 1 </volume> <pages> 201-217, </pages> <year> 1986. </year>
Reference: [12] <author> E. Melissaratos and D. Souvaine. </author> <title> Coping with inconsistencies: A new approach to produce quality triangulations of polygonal domains with holes. </title> <booktitle> In Proceedings of the Eighth Annual Symposium on Computational Geometry, </booktitle> <pages> pages 202-211. </pages> <publisher> ACM, </publisher> <year> 1992. </year>
Reference-contexts: This yields large triangles in areas of large features. By keeping the quadtree balanced, aspect ratios are bounded in the output. Melissaratos and Souvaine give some extensions to the quadtree algorithm <ref> [12] </ref>. Mitchell and Vavasis show an extension of the quadtree technique to 3D [14]. They give an algorithm that uses octrees to produce size-optimal, bounded aspect ratio triangulations of polyhedra. All the above techniques use grids or quadtrees. <p> PSLGs include polygons, polygons with holes, and complexes (objects made of multiple polygons); dangling edges and isolated vertices are also allowed, as shown in Theoretically speaking, our algorithm essentially matches the PSLG algorithms of <ref> [12] </ref> and [3](modified as mentioned in [2]), but it is distinguished from them in a number of ways: (1) The Delaunay refinement approach is 4 fundamentally different from the quadtree techniques. (2) It is much simpler.
Reference: [13] <author> S. Meshkat, J. Ruppert, and H. Li. </author> <title> Three-dimensional unstructured grid generation based on Delaunay tetrahedrization. </title> <booktitle> In Proceedings of the 3rd International Conference on Numerical Grid Generation, </booktitle> <pages> pages 841-851, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: These flat sliver tetrahedra appear quite often in 3D Delaunay triangulations. The difficulties of avoiding them or removing them have been discussed in a number of papers, including [8], <ref> [13] </ref>, [7]. 8 Conclusion We have presented a new Delaunay refinement algorithm for bounded aspect ratio triangulation of planar straightline graphs. The algorithm comes with theoretical guarantees on its behavior, yet it is simple enough to be easily implemented, and is likely to find use in practical applications.
Reference: [14] <author> S.A. Mitchell and S.A. Vavasis. </author> <title> Quality mesh generation in three dimensions. </title> <booktitle> In Proceedings of the Eighth Annual Symposium on Computational Geometry, </booktitle> <pages> pages 212-221. </pages> <note> ACM, 1992. Full version in Cornell Tech. Report TR 92-1267, </note> <month> Feb. </month> <year> 1992. </year>
Reference-contexts: This yields large triangles in areas of large features. By keeping the quadtree balanced, aspect ratios are bounded in the output. Melissaratos and Souvaine give some extensions to the quadtree algorithm [12]. Mitchell and Vavasis show an extension of the quadtree technique to 3D <ref> [14] </ref>. They give an algorithm that uses octrees to produce size-optimal, bounded aspect ratio triangulations of polyhedra. All the above techniques use grids or quadtrees. <p> The analysis in this section is similar to that given by Mitchell and Vava-sis for their 3D algorithm <ref> [14] </ref>. <p> Below, we will mention the case of smaller input angles. Any input vertex p with a small angle is "shielded" by committing in advance to a specific triangulation around p. Previous approaches surrounded each vertex with a circle [3], or with a cube in 3D <ref> [14] </ref>. We will sketch how to do this with a circle here. First, for every input vertex p, the local feature size lfs (p) is computed. <p> When the algorithm terminates, each shield edge will be split into at most a constant number of pieces, since the local feature size along the edge is proportional to the edge length. We now have two ways of dealing with split shield edges. Following <ref> [14] </ref>, we place edges between the split vertices and p, as shown in Figure 15 (b). (In fact, these will be present as the Delaunay edges.) Since each shield edge is split a constant number of times, the minimum angle in the output mesh 26 will be within a constant factor <p> In particular, the local feature size at p should be r, rather than d, as our definition states. Following <ref> [14] </ref>, we modify the definition to use the geodesic distance to the 2 nearest non-incident portions of the input. The geodesic distance is measured along the shortest path that stays within the region to be triangulated (e.g. the interior of the polygon). <p> The algorithm is modified to use the constrained 28 Delaunay triangulation (CDT) [11],[4]. The CDT can be computed with the Riemann sheet technique of Seidel [20]. This corresponds to Mitchell and Vavasis' use of Riemann volumes for octree mesh generation <ref> [14] </ref>. Chew has recently described a related mesh generation algorithm that uses the CDT [6]. Using the CDT, one can develop a modified Delaunay refinement algorithm to produce meshes that are unique (for a given ff) and independent of the orientation of the input.
Reference: [15] <author> F. P. Preparata and M. I. Shamos. </author> <title> Computational Geometry an Introduction. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1985. </year>
Reference-contexts: As described below, we will generally be adding vertices that are circumcenters, though when such locations are unsuitable, we will instead place new vertices on the input segments. The particular triangulation we maintain is a Delaunay triangulation, which has been extensively discussed in the literature (see, e.g., <ref> [15] </ref> or [9]). We recall the definition: given a finite set of points in the plane, three points contribute a triangle to the Delaunay triangulation if the circumcircle through those points contains no other point in its interior. <p> Proof: Theorem 2 bounds the number of vertices in the Delaunay refinement triangulation T D . In any triangulation, the number of triangles is at most 23 twice the number of vertices (true by Euler's relation, see <ref> [15] </ref>, p. 19). Thus T D has Z 1 dx triangles.
Reference: [16] <author> J. Ruppert. </author> <title> A new and simple algorithm for quality 2-dimensional mesh generation. </title> <type> Technical Report UCB/CSD 92/694, </type> <institution> Computer Science Division, University of California, Berkeley, 570 Evans Hall, U.C. Berkeley, </institution> <address> CA 94720, </address> <month> June </month> <year> 1992. </year>
Reference-contexts: Through a variety of examples, we evaluate its performance in terms of mesh size and shape. Large portions of the work reported here have appeared elsewhere in preliminary form <ref> [16] </ref>, [17], [18]. 5 2 The Delaunay Refinement Algorithm The basic idea of the algorithm is to maintain a triangulation, making local improvements in order to remove the skinny triangles. Each improvement involves adding a new vertex to the triangulation and retriangulating.
Reference: [17] <author> J. Ruppert. </author> <title> Results on Triangulation and High Quality Mesh Generation. </title> <type> PhD thesis, </type> <institution> University of California at Berkeley, </institution> <year> 1992. </year>
Reference-contexts: Through a variety of examples, we evaluate its performance in terms of mesh size and shape. Large portions of the work reported here have appeared elsewhere in preliminary form [16], <ref> [17] </ref>, [18]. 5 2 The Delaunay Refinement Algorithm The basic idea of the algorithm is to maintain a triangulation, making local improvements in order to remove the skinny triangles. Each improvement involves adding a new vertex to the triangulation and retriangulating.
Reference: [18] <author> J. Ruppert. </author> <title> A new and simple algorithm for quality 2-dimensional mesh generation. </title> <booktitle> In Proceedings of the Fourth Annual Symposium on Discrete Algorithms, </booktitle> <pages> pages 83-92. ACM-SIAM, </pages> <month> January </month> <year> 1993. </year>
Reference-contexts: Through a variety of examples, we evaluate its performance in terms of mesh size and shape. Large portions of the work reported here have appeared elsewhere in preliminary form [16], [17], <ref> [18] </ref>. 5 2 The Delaunay Refinement Algorithm The basic idea of the algorithm is to maintain a triangulation, making local improvements in order to remove the skinny triangles. Each improvement involves adding a new vertex to the triangulation and retriangulating.
Reference: [19] <author> A. Saalfield. </author> <title> Delaunay edge refinements. </title> <booktitle> In Third Canadian Conference on Computational Geometry, </booktitle> <pages> pages 33-36, </pages> <address> Vancouver, </address> <year> 1991. </year> <month> 45 </month>
Reference-contexts: However, this does not handle the case of a high-degree vertex, due to the interaction between edges incident to the vertex (this problem was described in a slightly different setting by Saalfield <ref> [19] </ref>). In practice, to handle the high-degree case, and cases with very small 39 input angles, we use a method that attempts to simulate corner-lopping. This is a heuristic that uses "concentric circular shells" around each input vertex.
Reference: [20] <author> R. Seidel. </author> <title> Constrained Delaunay triangulations and Voronoi diagrams with obstacles. </title> <type> Technical Report 260, </type> <institution> Inst. for Information Processing, Graz, Austria, </institution> <year> 1988. </year> <month> 46 </month>
Reference-contexts: The geodesic distance is measured along the shortest path that stays within the region to be triangulated (e.g. the interior of the polygon). The algorithm is modified to use the constrained 28 Delaunay triangulation (CDT) [11],[4]. The CDT can be computed with the Riemann sheet technique of Seidel <ref> [20] </ref>. This corresponds to Mitchell and Vavasis' use of Riemann volumes for octree mesh generation [14]. Chew has recently described a related mesh generation algorithm that uses the CDT [6].
References-found: 20

