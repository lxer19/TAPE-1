URL: http://www.cs.tamu.edu/faculty/vaidya/papers/mobile-computing/98-013.ps.Z
Refering-URL: http://www.cs.tamu.edu/faculty/vaidya/mobile.html
Root-URL: http://www.cs.tamu.edu
Title: Sender-Based Heuristics for Distinguishing Congestion Losses from Wireless Transmission Losses  
Author: Saad Biaz Nitin H. Vaidya 
Keyword: Key Words: TCP Transmission Error Losses Congestion Losses Loss Predictors  
Address: College Station, TX 77843-3112, USA  
Affiliation: Department of Computer Science Texas A&M University  
Pubnum: Technical Report  
Email: E-mail: saadb@cs.tamu.edu  
Phone: Phone (409) 845-5007 Fax (409) 847-8578  
Date: #98-013  
Abstract: TCP is a popular transport protocol used in present-day internet. When packet losses occur, TCP assumes that the packet losses are due to congestion, and responds by reducing its congestion window. When a TCP connection traverses a wireless link, a significant fraction of packet losses may occur due to transmission errors. TCP responds to such losses also by reducing congestion window. This results in unnecessary degradation in TCP performance. We define a class of functions named loss predictors. Loss predictors may be used by a TCP sender to guess whether a particular packet was lost due to congestion or due to wireless transmission errors. Depending on this determination, the TCP sender can take actions appropriate for the actual type of loss. The loss predictors considered in this paper are based on congestion avoidance techniques (CATs) proposed previously. These loss predictors use simple statistics on round-trip times and/or throughput, to determine the cause of a packet loss. An objective of this paper is to investigate the ability of three CAT-based loss predictors to determine the cause of a packet loss. Also, the paper evaluates how these loss predictors react to changes in several network parameters. Simulation Results fl Research reported is supported in part by the Fulbright Program, National Science Foundation grant CDA 9529442, and Texas Advance Technology Program grants 009741-052-C and 010115-248. y Principal contact author 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Bakre and B. Badrinath, "I-TCP: </author> <title> Indirect TCP for mobile hosts," </title> <booktitle> in Proc. 15th International Conf. on Distributed Computing Systems (ICDCS), </booktitle> <month> May </month> <year> 1995. </year>
Reference-contexts: This assumption is not accurate when a TCP connection traverses a wireless link. In this case, a significant fraction of packet losses may be due to transmission errors. Due to increasing acceptance of wireless networking technology, there is considerable interest in using TCP over wireless links <ref> [11, 2, 6, 3, 2, 1, 7] </ref>. Previous work has shown that, unless the TCP protocol is modified, it performs poorly on paths that include a wireless link subject to transmission errors. <p> Taking congestion control actions may be appropriate when a packet loss is due to congestion, however, it can unnecessarily reduce throughput if packet losses happen to be due to wireless transmission errors <ref> [1] </ref>. Past proposals for improving performance of TCP over wireless require some cooperation from an intermediate node on the path from the sender to the receiver [1, 2, 3, 14]. <p> Past proposals for improving performance of TCP over wireless require some cooperation from an intermediate node on the path from the sender to the receiver <ref> [1, 2, 3, 14] </ref>. For several practical reasons [10], our interest is in mechanisms that impose minimal demands (if any) on any host other than the sender or the receiver.
Reference: [2] <author> H. Balakrishnan, V. Padmanabhan, S. Seshan, and R. Katz, </author> <title> "A comparison of mechanisms for improving TCP performance over wireless links," </title> <booktitle> in ACM SIGCOMM, </booktitle> <address> Stanford, CA, </address> <month> Aug. </month> <year> 1996. </year>
Reference-contexts: This assumption is not accurate when a TCP connection traverses a wireless link. In this case, a significant fraction of packet losses may be due to transmission errors. Due to increasing acceptance of wireless networking technology, there is considerable interest in using TCP over wireless links <ref> [11, 2, 6, 3, 2, 1, 7] </ref>. Previous work has shown that, unless the TCP protocol is modified, it performs poorly on paths that include a wireless link subject to transmission errors. <p> Past proposals for improving performance of TCP over wireless require some cooperation from an intermediate node on the path from the sender to the receiver <ref> [1, 2, 3, 14] </ref>. For several practical reasons [10], our interest is in mechanisms that impose minimal demands (if any) on any host other than the sender or the receiver.
Reference: [3] <author> H. Balakrishnan, S. Seshan, and R. Katz, </author> <title> "Improving reliable transport and handoff performance in cellular wireless networks," </title> <journal> ACM Wireless Networks, </journal> <volume> vol. 1, </volume> <month> Dec. </month> <year> 1995. </year>
Reference-contexts: This assumption is not accurate when a TCP connection traverses a wireless link. In this case, a significant fraction of packet losses may be due to transmission errors. Due to increasing acceptance of wireless networking technology, there is considerable interest in using TCP over wireless links <ref> [11, 2, 6, 3, 2, 1, 7] </ref>. Previous work has shown that, unless the TCP protocol is modified, it performs poorly on paths that include a wireless link subject to transmission errors. <p> Past proposals for improving performance of TCP over wireless require some cooperation from an intermediate node on the path from the sender to the receiver <ref> [1, 2, 3, 14] </ref>. For several practical reasons [10], our interest is in mechanisms that impose minimal demands (if any) on any host other than the sender or the receiver.
Reference: [4] <author> J. Bolot, </author> <title> "Characterizing end-to-end packet delay and loss in the internet," </title> <journal> Journal of High-Speed Networks, </journal> <volume> vol. 2, </volume> <pages> pp. 289-298, </pages> <month> Sept. </month> <year> 1993. </year>
Reference-contexts: Therefore, the network response is often independent of one TCP connection's action. This suggests that the three predictors cannot correctly detect queue build-up, and hence cannot diagnose congestion losses accurately. Incidentally, based on a very different type of experiment, Bolot <ref> [4] </ref> has observed that congestion losses appear to be random. We believe that our experiments support Bolot's observation, and provide additional insight into packet losses due to congestion and wireless errors. We must also note that the three congestion avoidance techniques were not designed as "loss predictors".
Reference: [5] <author> L. Brakmo and S. O'Malley, </author> <title> "TCP-vegas : New techniques for congestion detection and avoidance," </title> <booktitle> in ACM SIGCOMM'94, </booktitle> <address> London, U.K, </address> <pages> pp. 24-35, </pages> <month> Oct. </month> <year> 1994. </year>
Reference-contexts: In this paper, we consider three loss predictors derived directly from previously proposed techniques for congestion avoidance. The Congestion Avoidance Techniques (CATs) were proposed to determine when it is appropriate to increase or decrease TCP congestion window <ref> [9, 5, 13] </ref>. In the basic TCP, 2 congestion window is decreased only when TCP sender determines that a packet has been lost. Otherwise, the congestion window gradually increases whenever receipt of new data is acknowledged by the receiver. The congestion avoidance techniques [9, 5, 13] monitor the level of congestion <p> to increase or decrease TCP congestion window <ref> [9, 5, 13] </ref>. In the basic TCP, 2 congestion window is decreased only when TCP sender determines that a packet has been lost. Otherwise, the congestion window gradually increases whenever receipt of new data is acknowledged by the receiver. The congestion avoidance techniques [9, 5, 13] monitor the level of congestion in the network, and recommend when the congestion window should be increased or decreased. <p> The basic philosophy behind the design of these CATs is that, if the congestion level seems high or increasing, then TCP congestion window size should be decreased, and vice versa. The CATs in <ref> [9, 5, 13] </ref> use simple statistics on observed round-trip times (RTT) and/or observed throughput of a TCP connection. An objective of this paper is to investigate the ability of loss predictors, based on these CATs, to determine the cause of a packet loss. <p> The CATs measure this response as a function of round-trip times and/or throughput, and recommend reducing or increasing congestion window based on the observed response. 2.2 Congestion Avoidance Technique 1 TCP-Vegas <ref> [5] </ref> requires a TCP sender to keep track of the BaseRT T , defined as the minimum of all RT T s measured during the TCP connection. <p> Then the difference D is calcu lated as, D = expected throughput actual throughput = W i BaseRT T W i RT T i : Reference <ref> [5] </ref> expresses this difference D in terms of extra packets in the network, by multiplying D by BaseRT T .
Reference: [6] <author> R. Caceres and L. Iftode, </author> <title> "Improving the performance of reliable transport protocols in mobile computing environments," </title> <journal> IEEE journal on selected areas in communications Special issue on Mobile Computing Networks, </journal> <volume> vol. 13, </volume> <month> June </month> <year> 1995. </year>
Reference-contexts: This assumption is not accurate when a TCP connection traverses a wireless link. In this case, a significant fraction of packet losses may be due to transmission errors. Due to increasing acceptance of wireless networking technology, there is considerable interest in using TCP over wireless links <ref> [11, 2, 6, 3, 2, 1, 7] </ref>. Previous work has shown that, unless the TCP protocol is modified, it performs poorly on paths that include a wireless link subject to transmission errors.
Reference: [7] <author> A. DeSimone, M. Chuah, and O. Yue, </author> <title> "Throughput performance of tranport-layer protocols over wireless lans," </title> <booktitle> in Proc. Globecom '93, </booktitle> <month> Dec. </month> <year> 1993. </year>
Reference-contexts: This assumption is not accurate when a TCP connection traverses a wireless link. In this case, a significant fraction of packet losses may be due to transmission errors. Due to increasing acceptance of wireless networking technology, there is considerable interest in using TCP over wireless links <ref> [11, 2, 6, 3, 2, 1, 7] </ref>. Previous work has shown that, unless the TCP protocol is modified, it performs poorly on paths that include a wireless link subject to transmission errors.
Reference: [8] <author> V. Jacobson, </author> <title> "Congestion avoidance and control," </title> <booktitle> in Proceedings of SIGCOMM 88, ACM, </booktitle> <pages> pp. 314-329, </pages> <month> Aug. </month> <year> 1988. </year>
Reference-contexts: 1 Introduction TCP is a popular protocol for reliable data delivery in the internet. TCP is robust in that it can adapt to disparate network conditions <ref> [8] </ref>. TCP uses congestion control mechanisms to recover from congestion that may occur in the network. When a packet loss occurs, TCP sender assumes that congestion has occurred in the network, and drastically reduces its congestion window. <p> Previous work has shown that, unless the TCP protocol is modified, it performs poorly on paths that include a wireless link subject to transmission errors. The reason for this is that a TCP sender activates congestion control mechanisms <ref> [8] </ref> even if a packet loss is due to wireless transmission errors. Taking congestion control actions may be appropriate when a packet loss is due to congestion, however, it can unnecessarily reduce throughput if packet losses happen to be due to wireless transmission errors [1].
Reference: [9] <author> R. Jain, </author> <title> "A delay-based approach for congestion avoidance in interconnected heterogeneous computer networks," </title> <journal> ACM Computer Communications Review, </journal> <volume> vol. 19, </volume> <pages> pp. 56-71, </pages> <year> 1989. </year>
Reference-contexts: In this paper, we consider three loss predictors derived directly from previously proposed techniques for congestion avoidance. The Congestion Avoidance Techniques (CATs) were proposed to determine when it is appropriate to increase or decrease TCP congestion window <ref> [9, 5, 13] </ref>. In the basic TCP, 2 congestion window is decreased only when TCP sender determines that a packet has been lost. Otherwise, the congestion window gradually increases whenever receipt of new data is acknowledged by the receiver. The congestion avoidance techniques [9, 5, 13] monitor the level of congestion <p> to increase or decrease TCP congestion window <ref> [9, 5, 13] </ref>. In the basic TCP, 2 congestion window is decreased only when TCP sender determines that a packet has been lost. Otherwise, the congestion window gradually increases whenever receipt of new data is acknowledged by the receiver. The congestion avoidance techniques [9, 5, 13] monitor the level of congestion in the network, and recommend when the congestion window should be increased or decreased. <p> The basic philosophy behind the design of these CATs is that, if the congestion level seems high or increasing, then TCP congestion window size should be decreased, and vice versa. The CATs in <ref> [9, 5, 13] </ref> use simple statistics on observed round-trip times (RTT) and/or observed throughput of a TCP connection. An objective of this paper is to investigate the ability of loss predictors, based on these CATs, to determine the cause of a packet loss. <p> This ratio represents the throughput observed during the RT T i round-trip interval for the i-th monitored packet. The congestion avoidance techniques considered here are motivated by the following expectation of network behavior <ref> [9] </ref>. As illustrated in Figure 1, when network load is small, increasing the load should result in a comparable increase in network throughput with only a small increase in round-trip times (RTT). <p> i1 W i RT T i1 If f NT G &lt; 1=2, then this congestion avoidance technique suggests that the congestion window size be decreased, else it suggests that the window size be increased. 2.4 Congestion Avoidance Technique 3 Jain proposed a congestion avoidance technique based on Normalized Delay Gradient <ref> [9] </ref>. <p> We must also note that the three congestion avoidance techniques were not designed as "loss predictors". These congestion avoidance techniques were designed to let the sender operate at the knee of the throughput-delay curve <ref> [9] </ref>. While it is not a surprise that these predictors are unable to 19 perfectly diagnose cause of packet losses, it is indeed a surprise that they often behave similar to a random coin tossing predictor.
Reference: [10] <author> M. Mehta, </author> <title> "Improving performance of TCP over wireless networks," </title> <type> Master's thesis, </type> <institution> Texas A&M University, </institution> <month> Aug. </month> <year> 1998. </year>
Reference-contexts: Past proposals for improving performance of TCP over wireless require some cooperation from an intermediate node on the path from the sender to the receiver [1, 2, 3, 14]. For several practical reasons <ref> [10] </ref>, our interest is in mechanisms that impose minimal demands (if any) on any host other than the sender or the receiver. Ideally, it would help if the sender could differentiate between packet losses due to congestion from the packet losses due to wireless transmission errors.
Reference: [11] <author> J. Postel, </author> <title> "Transmission control protocol," </title> <month> Sept. </month> <year> 1988. </year> <note> RFC 793. 20 </note>
Reference-contexts: This assumption is not accurate when a TCP connection traverses a wireless link. In this case, a significant fraction of packet losses may be due to transmission errors. Due to increasing acceptance of wireless networking technology, there is considerable interest in using TCP over wireless links <ref> [11, 2, 6, 3, 2, 1, 7] </ref>. Previous work has shown that, unless the TCP protocol is modified, it performs poorly on paths that include a wireless link subject to transmission errors.
Reference: [12] <author> C. </author> <title> VINT Project, </title> <institution> University of Berkeley/LBNL, "ns : network simulator." </institution> <note> http://www--mash.cs.berkeley.edu/ns/. </note>
Reference-contexts: Choosing high p will result in high A c , but low A w , and vice versa. 5 Simulations 5.1 Simulation Model and Methodology We use the network simulator ns-2 (version 2.1b1) <ref> [12] </ref> from Berkeley. The system model used for simulations is illustrated in Figure 3. This model is simple, yet serves our purpose. We have a TCP connection from a source CS to a sink CK. We use the Reno agent from ns-2 for the TCP connection. <p> We have a TCP connection from a source CS to a sink CK. We use the Reno agent from ns-2 for the TCP connection. This connection shares the link R 1 ! R 2 with a cross traffic issued by a T raf f ic=Expoo <ref> [12] </ref> agent from RS to sink RK. The T raf f ic=Expoo agent from ns-2 [12] is a constant-bit rate (CBR) source 8 with idle time and busy time exponentially distributed with mean 0.1 s. UDP is the transport protocol used for this source. <p> We use the Reno agent from ns-2 for the TCP connection. This connection shares the link R 1 ! R 2 with a cross traffic issued by a T raf f ic=Expoo <ref> [12] </ref> agent from RS to sink RK. The T raf f ic=Expoo agent from ns-2 [12] is a constant-bit rate (CBR) source 8 with idle time and busy time exponentially distributed with mean 0.1 s. UDP is the transport protocol used for this source. All the links in Figure 3 are labeled with a (bandwidth, propagation delay) pair.
Reference: [13] <author> Z. Wang and J. Crowcroft, </author> <title> "A new congestion control scheme : Slow start and search (tri-s)," </title> <journal> ACM Computer Communication Review, </journal> <volume> vol. 21, </volume> <pages> pp. 32-43, </pages> <month> Jan. </month> <year> 1991. </year>
Reference-contexts: In this paper, we consider three loss predictors derived directly from previously proposed techniques for congestion avoidance. The Congestion Avoidance Techniques (CATs) were proposed to determine when it is appropriate to increase or decrease TCP congestion window <ref> [9, 5, 13] </ref>. In the basic TCP, 2 congestion window is decreased only when TCP sender determines that a packet has been lost. Otherwise, the congestion window gradually increases whenever receipt of new data is acknowledged by the receiver. The congestion avoidance techniques [9, 5, 13] monitor the level of congestion <p> to increase or decrease TCP congestion window <ref> [9, 5, 13] </ref>. In the basic TCP, 2 congestion window is decreased only when TCP sender determines that a packet has been lost. Otherwise, the congestion window gradually increases whenever receipt of new data is acknowledged by the receiver. The congestion avoidance techniques [9, 5, 13] monitor the level of congestion in the network, and recommend when the congestion window should be increased or decreased. <p> The basic philosophy behind the design of these CATs is that, if the congestion level seems high or increasing, then TCP congestion window size should be decreased, and vice versa. The CATs in <ref> [9, 5, 13] </ref> use simple statistics on observed round-trip times (RTT) and/or observed throughput of a TCP connection. An objective of this paper is to investigate the ability of loss predictors, based on these CATs, to determine the cause of a packet loss. <p> If f V egas &lt; ff, then this congestion avoidance technique suggests that the window size be increased. If f V egas &gt; fi, it suggests that sender's congestion window size be decreased. 2.3 Congestion Avoidance Technique 2 Wang and Crowcroft <ref> [13] </ref> proposed a congestion avoidance technique based on the Normalized Throughput Gradient (f NT G ).

References-found: 13

