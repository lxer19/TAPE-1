URL: http://www.cs.columbia.edu/~gravano/Papers/1997/dl97.ps
Refering-URL: http://www.cs.columbia.edu/~gravano/publications.html
Root-URL: http://www.cs.columbia.edu
Email: fmichelle,kevin,gravano,paepckeg@db.stanford.edu  
Title: Metadata for Digital Libraries: Architecture and Design Rationale  
Author: Michelle Baldonado Chen-Chuan K. Chang Luis Gravano Andreas Paepcke 
Keyword: Metadata architecture, interoperability, attribute model, attribute model translation, meta-data repository, InfoBus, proxy architecture, heterogeneity, digital libraries, CORBA.  
Address: Stanford, CA 94305-9040, USA  
Affiliation: Computer Science Department Stanford University  
Abstract: In a distributed, heterogeneous, proxy-based digital library, autonomous services and collections are accessed indirectly via proxies. To facilitate metadata compatibility and interoperability in such a digital library, we have designed a metadata architecture that includes four basic component classes: attribute model proxies, attribute model translators, metadata facilities for search proxies, and metadata repositories. Attribute model proxies elevate both attribute sets and the attributes they define to first-class objects. They also allow relationships among attributes to be captured. Attribute model translators map attributes and attribute values from one attribute model to another (where possible). Metadata facilities for search proxies provide structured descriptions both of the collections to which the search proxies provide access and of the search capabilities of the proxies. Finally, metadata repositories accumulate selected metadata from local instances of the other three component classes in order to facilitate global metadata queries and local metadata caching. In this paper, we outline further the roles of these component classes, discuss our design rationale, and analyze related work. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Michelle Baldonado, Chen-Chuan K. Chang, Luis Gravano, and Andreas Paepcke. </author> <title> The Stanford Digital Library metadata architecture. </title> <journal> International Journal of Digital Libraries, </journal> <volume> 1(2), </volume> <month> February </month> <year> 1997. </year>
Reference-contexts: Not surprisingly, users of digital libraries also require information about what networked resources and services to consult, as well as information about how to use them. Generically, we call this information metadata. In an earlier paper <ref> [1] </ref>, we analyzed the needs of our digital library InfoBus architecture [2] in order to determine what types of metadata are important in this environment. Our InfoBus architecture provides the infrastructure for a distributed, heterogeneous, proxy-based digital library. <p> Analyzing these services leads to a list of metadata requirements (see <ref> [1] </ref>). However, addressing these meta-data requirements on a service-by-service basis is problematic. We have a need for metadata compatibility and interoperability among these services. Accordingly, we have chosen to develop a metadata architecture for our digital library that addresses these requirements in a general fashion. <p> A collection is a CORBA object that allows users to store other objects, including documents or, recursively, other collections. Collections support querying through a special protocol that we have defined [8]. In our earlier paper <ref> [1] </ref>, we analyzed our metadata needs and presented our initial metadata architecture for addressing those needs.
Reference: [2] <author> Andreas Paepcke, Steve B. Cousins, Hector Garca-Molina, Scott W. Hassan, Steven K. Ketchpel, Martin Roscheisen, and Terry Winograd. </author> <title> Towards interoperability in digital libraries: Overview and selected highlights of the Stanford Digital Library Project. </title> <journal> IEEE Computer Magazine, </journal> <month> May </month> <year> 1996. </year>
Reference-contexts: Not surprisingly, users of digital libraries also require information about what networked resources and services to consult, as well as information about how to use them. Generically, we call this information metadata. In an earlier paper [1], we analyzed the needs of our digital library InfoBus architecture <ref> [2] </ref> in order to determine what types of metadata are important in this environment. Our InfoBus architecture provides the infrastructure for a distributed, heterogeneous, proxy-based digital library. At its core are proxies|or wrappers|that provide uniform access to existing, autonomous digital library repositories and services.
Reference: [3] <author> Object Management Group. </author> <title> The Common Object Request Broker: Architecture and specification. </title> <institution> Accessible at ftp://omg.org/pub/CORBA, </institution> <month> De-cember </month> <year> 1993. </year>
Reference-contexts: Our InfoBus architecture provides the infrastructure for a distributed, heterogeneous, proxy-based digital library. At its core are proxies|or wrappers|that provide uniform access to existing, autonomous digital library repositories and services. We implement these proxies as CORBA distributed objects <ref> [3] </ref>. These objects can be placed on any machine on the network and can be accessed remotely from anywhere. Clients use remote method calls to access these proxies conveniently. The proxies communicate with the services they represent via the native service access protocols, such as telnet, Z39.50, or HTTP. <p> Our resulting metadata architecture sits on top of our InfoBus. It makes extensive use of its objects and services, especially those that pertain to documents and collections. Documents on the InfoBus are represented as objects. We use the CORBA property service <ref> [3] </ref> to store document attributes. For example, the Title attribute of a document is attached to the document object as a property of name Title. In addition, various methods allow us to extract metadata from document objects, such as a list of all the document's attributes.
Reference: [4] <author> Luis Gravano, Hector Garca-Molina, and Anthony Tomasic. </author> <title> The effectiveness of GlOSS for the text-database discovery problem. </title> <booktitle> In Proceedings of the 1994 ACM SIGMOD Conference, </booktitle> <month> May </month> <year> 1994. </year>
Reference-contexts: Within the InfoBus, we have designed a variety of services, including services for finding resources likely to satisfy a given query <ref> [4] </ref>, for formulating queries that are appropriate for multiple sources [5], for translating queries [6], and for making sense of query results [7]. Analyzing these services leads to a list of metadata requirements (see [1]). However, addressing these meta-data requirements on a service-by-service basis is problematic. <p> Collection metadata includes descriptions of the collection, declarations as to what attribute models are supported, information about the collection's query facilities, and the statistical information necessary for resource discovery services like GlOSS <ref> [4] </ref> to predict the collection's relevance for a particular query. Clients can use the information to determine how best to access the collection maintained by the search service (i.e., what capabilities the search service supports).
Reference: [5] <author> Steve B. Cousins. </author> <title> A task-oriented interface to a digital library. </title> <booktitle> In CHI 96 Conference Companion, </booktitle> <pages> pages 103-104, </pages> <year> 1996. </year>
Reference-contexts: Within the InfoBus, we have designed a variety of services, including services for finding resources likely to satisfy a given query [4], for formulating queries that are appropriate for multiple sources <ref> [5] </ref>, for translating queries [6], and for making sense of query results [7]. Analyzing these services leads to a list of metadata requirements (see [1]). However, addressing these meta-data requirements on a service-by-service basis is problematic. We have a need for metadata compatibility and interoperability among these services.
Reference: [6] <author> Chen-Chuan K. Chang, Hector Garca-Molina, and Andreas Paepcke. </author> <title> Boolean query mapping across heterogeneous information sources. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 8(4) </volume> <pages> 515-521, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: Within the InfoBus, we have designed a variety of services, including services for finding resources likely to satisfy a given query [4], for formulating queries that are appropriate for multiple sources [5], for translating queries <ref> [6] </ref>, and for making sense of query results [7]. Analyzing these services leads to a list of metadata requirements (see [1]). However, addressing these meta-data requirements on a service-by-service basis is problematic. We have a need for metadata compatibility and interoperability among these services.
Reference: [7] <author> Michelle Q Wang Baldonado and Terry Winograd. SenseMaker: </author> <title> An information-exploration interface supporting the contextual evolution of a user's interests. </title> <booktitle> In Proceedings of CHI 97, </booktitle> <year> 1997. </year>
Reference-contexts: Within the InfoBus, we have designed a variety of services, including services for finding resources likely to satisfy a given query [4], for formulating queries that are appropriate for multiple sources [5], for translating queries [6], and for making sense of query results <ref> [7] </ref>. Analyzing these services leads to a list of metadata requirements (see [1]). However, addressing these meta-data requirements on a service-by-service basis is problematic. We have a need for metadata compatibility and interoperability among these services.
Reference: [8] <author> Scott W. Hassan and Andreas Paepcke. </author> <title> Stan-ford digital library interoperability protocol. </title> <type> Technical Report SIDL-WP-1997-0054, </type> <institution> Stanford University, </institution> <year> 1997. </year> <note> Accessible at http://www-diglib.- stanford.edu/cgi-bin/WP/get/- SIDL-WP-1997-0054. </note>
Reference-contexts: The InfoBus collection service allows users to build their own repositories from documents they have created, located, or received. A collection is a CORBA object that allows users to store other objects, including documents or, recursively, other collections. Collections support querying through a special protocol that we have defined <ref> [8] </ref>. In our earlier paper [1], we analyzed our metadata needs and presented our initial metadata architecture for addressing those needs.
Reference: [9] <institution> USMARC format for bibliographic data: Including guidelines for content designation, </institution> <year> 1994. </year>
Reference-contexts: One level of aggregation beyond the individual attribute is the attribute model|a self-contained collection of attributes. Well-known attribute models include the USMARC set of bibliographic attributes (referred to as "fields" in the USMARC community) <ref> [9] </ref>, the Dublin Core set of attributes [10], and so on. In our metadata architecture, we reify both attributes and their encompassing attribute models as first-class objects. Attributes are instances of class Attribute-Item. Attribute model proxies are implemented as In-foBus collections.
Reference: [10] <author> Stuart Weibel, Jean Godby, Eric Miller, and Ron Daniel, Jr. </author> <note> OCLC/NCSA metadata workshop report. Accessible at http://www.oclc.org:5047/- oclc/research/publications/weibel/- metadata/dublin core report.html, </note> <month> March </month> <year> 1995. </year>
Reference-contexts: One level of aggregation beyond the individual attribute is the attribute model|a self-contained collection of attributes. Well-known attribute models include the USMARC set of bibliographic attributes (referred to as "fields" in the USMARC community) [9], the Dublin Core set of attributes <ref> [10] </ref>, and so on. In our metadata architecture, we reify both attributes and their encompassing attribute models as first-class objects. Attributes are instances of class Attribute-Item. Attribute model proxies are implemented as In-foBus collections. <p> Again, for now we opted for simplicity. 4 Related Work Much recent work has focused on the specification of attribute sets intended for the metadata description of information objects. The Bib-1 attribute set [15, 16] registers a large set of bibliographic attributes, while the Dublin Core <ref> [10] </ref> is intended to be a simple yet usable set of attributes. These standard metadata sets are represented as attribute models in our architecture. Our attribute models go beyond these metadata sets because they can optionally include structures and because they are reified as searchable collections.
Reference: [11] <author> Luis Gravano, Chen-Chuan K. Chang, Hector Garca-Molina, and Andreas Paepcke. </author> <title> STARTS: Stanford proposal for Internet meta-searching. </title> <booktitle> In Proceedings of the 1997 ACM SIGMOD Conference, </booktitle> <year> 1997. </year>
Reference-contexts: Alternatively, each proxy may opt to "push" these metadata objects to its clients. The first metadata object (Table 1) contains the general service information, and it is based heavily on the source metadata objects defined by STARTS <ref> [11] </ref>. The general service information includes human-readable information about the collection, as well as information that is used by our query translation facility. Examples for the latter are the type of truncation that is applied to query terms, and the list of stopwords. <p> The value for this attribute is a URL that points to a content summary of the collection. Content summaries are potentially large, hence our decision to make them retrievable using ftp, for example, instead of using our protocol. The content summary follows the STARTS <ref> [11] </ref> content summaries, and consists of the information that a resource-discovery service like GlOSS needs. Content summaries are formatted as Harvest SOIFs [12]. <p> Services such as our query translator also need information about which operations are supported by each service. Naturally, data source content summaries provided by proxies are only as good as the information that can be obtained from the actual sources they represent. The STARTS specifications <ref> [11] </ref> are intended to allow search engine providers and their customers to deliver the content summaries. Carl Lagoze at Cornell University has built a reference implementation of STARTS in Java that provides the STARTS information for free-WAIS services. <p> The University of Michigan Digital Library Conspectus describes the contents and capabilities of the available search services using a special language [19]. The efforts that are probably closest to ours are the Explain facility of Z39.50-1995 [15] and Stanford's STARTS <ref> [11] </ref>, both of which require services to export their "source meta-data." Z39.50 servers present metadata about their services via the Explain facility so that clients can dynamically configure themselves to match individual servers. <p> However, our architecture can benefit from the Explain facility; it should be relatively easy to build proxies to Explain-compliant services that will support our proposed meta-data facility. Another relevant effort on top of which we built our architecture is STARTS <ref> [11] </ref>. STARTS, coordinated by Stanford, is an informal "standards" effort whose main goal is to facilitate the interoperability of search engines for text. STARTS specifies what metadata should be exported by each collection of text documents.
Reference: [12] <author> Darren R. Hardy, Michael F. Schwartz, and Duane Wessels. </author> <note> Harvest user's manual, January 1996. Accessible at http://harvest.transarc.com/afs/- transarc.com/public/trg/Harvest/- user-manual. </note>
Reference-contexts: Content summaries are potentially large, hence our decision to make them retrievable using ftp, for example, instead of using our protocol. The content summary follows the STARTS [11] content summaries, and consists of the information that a resource-discovery service like GlOSS needs. Content summaries are formatted as Harvest SOIFs <ref> [12] </ref>. Example 2.1 Consider the following content summary for a collection: @SContentSummary-Version-10-: STARTS 1.0 Stemming-1-: F StopWords-1-: F CaseSensitive-1-: F Fields-1-: T NumDocs-3-: 892 Field-5-: Title DocFreq-11023-: "algorithm" 53 "analysis" 23 ... Field-6-: Author DocFreq-1211-: "ullman" 11 "knuth" 15 ...
Reference: [13] <author> N. Borenstein and N. Freed. </author> <title> MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for specifying and describing the format of Internet message bodies, </title> <month> September </month> <year> 1993. </year> <title> Internet RFC 1521. </title>
Reference-contexts: In our initial prototype, we are experimenting with specifying attribute value types in the same CORBA interface language we are using to specify the types of parameters passed to methods in our larger distributed object system. We are also considering an adaptation of the MIME standard <ref> [13] </ref> to let us describe complex attribute values, such as values consisting of multiple parts. Neither of these is satisfactory in describing the details of how basic types are used.
Reference: [14] <institution> Z39.50 application profile for the content specification for digital geospatial metadata or GEO, Oc-tober 1995. Accessible at ftp://h2o.usgs.gov/- wais/docs/AppProfile GEO1.2.ps. </institution>
Reference-contexts: The final design decision we discuss in the context of attribute model proxies concerns their relationship to each other. In our initial prototype we decided not to model such relationships at all. For example, the emerging Geo1 attribute set <ref> [14] </ref> is a superset of the GILS attribute set, which in turn subsumes Bib-1. If we allowed attribute model proxies to reference each other, we could model these subsumption relationships. Instead, we construct each attribute model proxy from scratch, replicating all common AttributeItems.
Reference: [15] <author> National Information Standards Organization. </author> <title> Information Retrieval (Z39.50): Application Service Definition and Protocol Specification (ANSI/NISO Z39.50-1995). </title> <publisher> NISO Press, </publisher> <address> Bethesda, MD, </address> <year> 1995. </year> <note> Accessible at http://lcweb.loc.gov/- z3950/agency/. </note>
Reference-contexts: Again, for now we opted for simplicity. 4 Related Work Much recent work has focused on the specification of attribute sets intended for the metadata description of information objects. The Bib-1 attribute set <ref> [15, 16] </ref> registers a large set of bibliographic attributes, while the Dublin Core [10] is intended to be a simple yet usable set of attributes. These standard metadata sets are represented as attribute models in our architecture. <p> The University of Michigan Digital Library Conspectus describes the contents and capabilities of the available search services using a special language [19]. The efforts that are probably closest to ours are the Explain facility of Z39.50-1995 <ref> [15] </ref> and Stanford's STARTS [11], both of which require services to export their "source meta-data." Z39.50 servers present metadata about their services via the Explain facility so that clients can dynamically configure themselves to match individual servers.
Reference: [16] <author> Z39.50 Maintenance Agency. </author> <title> Attribute set Bib-1 (Z39.50-1995): Semantics. </title> <institution> Accessible at ftp://- ftp.loc.gov/pub/z3950/defs/bib1.txt, </institution> <month> Septem-ber </month> <year> 1995. </year>
Reference-contexts: Again, for now we opted for simplicity. 4 Related Work Much recent work has focused on the specification of attribute sets intended for the metadata description of information objects. The Bib-1 attribute set <ref> [15, 16] </ref> registers a large set of bibliographic attributes, while the Dublin Core [10] is intended to be a simple yet usable set of attributes. These standard metadata sets are represented as attribute models in our architecture.
Reference: [17] <author> Terence R. Smith, Steven Geffner, and Jonathan Gottsegen. </author> <title> A general framework for the meta-information and catalogs in digital libraries. </title> <booktitle> In Proceedings of the First IEEE Metadata Conference, </booktitle> <address> Silver Spring, Maryland, </address> <month> April </month> <year> 1996. </year> <note> IEEE. Accessible at http://www.nml.org/resources/misc/- metadata/proceedings/smith/ieee.html. </note>
Reference-contexts: The Warwick Framework, for example, is essentially an encoding scheme to integrate various meta-data packages. Another framework, proposed by the Alexandria Digital Library <ref> [17] </ref>, models document meta-information with attribute-value pairs, in which multiple "languages" can be used. Common to these architectures and ours is the support of multiple metadata sets in modeling documents.
Reference: [18] <author> Eliot Christian. </author> <title> Application profile for the government information locator service (GILS), </title> <type> Version 2, </type> <month> October </month> <year> 1996. </year> <note> Accessible at http://www.usgs.- gov/gils/prof v2.html. </note>
Reference-contexts: In addition to the work on metadata for information objects, there are also proposals that support metadata for search services. For instance, the GILS profile for Z39.50 <ref> [18] </ref>, while including all of the Bib-1 attributes, defines many attributes for describing search services. The University of Michigan Digital Library Conspectus describes the contents and capabilities of the available search services using a special language [19].
Reference: [19] <author> William P. </author> <title> Birmingham. An agent-based architecture for digital libraries. </title> <journal> D-Lib Magazine, </journal> <month> July </month> <year> 1995. </year>
Reference-contexts: For instance, the GILS profile for Z39.50 [18], while including all of the Bib-1 attributes, defines many attributes for describing search services. The University of Michigan Digital Library Conspectus describes the contents and capabilities of the available search services using a special language <ref> [19] </ref>.
Reference: [20] <author> Denis Lynch. </author> <title> Implementing Explain. </title> <institution> Accessible at ftp://ftp.loc.gov/pub/z3950/articles/- denis.ps. </institution>
Reference-contexts: On the other hand, this simplicity may not be an issue for Z39.50 because both their clients and servers will necessarily have most of the required capabilities <ref> [20] </ref>. However, our architecture can benefit from the Explain facility; it should be relatively easy to build proxies to Explain-compliant services that will support our proposed meta-data facility. Another relevant effort on top of which we built our architecture is STARTS [11].
References-found: 20

