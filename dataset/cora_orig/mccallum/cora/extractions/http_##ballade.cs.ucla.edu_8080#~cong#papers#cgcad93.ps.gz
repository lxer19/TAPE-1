URL: http://ballade.cs.ucla.edu:8080/~cong/papers/cgcad93.ps.gz
Refering-URL: http://ballade.cs.ucla.edu/~cong/publications.html
Root-URL: http://www.cs.ucla.edu
Title: AN OPTIMAL PERFORMANCE-DRIVEN TECHNOLOGY MAPPING ALGORITHM FOR LUT-BASED FPGAS UNDER ARBITRARY NET-DELAY MODELS  
Author: Jason Cong and Yuzheng Ding Tong Gao Kuang-Chien Chen 
Address: Los Angeles, CA 90024, U.S.A.  Urbana Champaign, IL 61801, U.S.A.  3055 Orchard Drive, San Jose, CA 95134, U.S.A.  
Affiliation: Department of Computer Science University of California,  Department of Computer Science University of Illinois,  Fujitsu America, Inc.  
Abstract: The field programmable gate-array (FPGA) has become an important technology in VLSI ASIC designs. Most existing performance-driven technology mapping algorithms for Lookup-table (LUT) based FPGA designs are based on unit delay model. In this paper we present an efficient algorithm which finds an optimal technology mapping solution with minimum delay under arbitrary net delay models for LUT-based FPGA designs. The key step of this algorithm is the computation of a minimum height K-feasible cut in a Boolean network with arbitrary net delay, which is carried out through efficient flow computation. The capability of dealing with arbitrary net delay models enables our algorithm to be used not only as a FPGA technology mapper but also as an evaluation tool for delay model studies. We have implemented the algorithm and tested it on a number of MCNC benchmark examples. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Bhat, N. and D. Hill, </author> <title> ``Routable Technology Mapping for FPGAs,'' </title> <booktitle> First Int'l ACM/SIGDA Workshop on Field Programmable Gate Arrays, </booktitle> <pages> pp. 143-148, </pages> <month> Feb. </month> <year> 1992. </year>
Reference-contexts: Several optimization objectives for the technology mapping problem have been proposed, including minimizing the number of K-LUTs in the mapping solution [5, 7, 8, 10, 11, 15], minimizing the delay of the mapping solution [2, 3, 4, 9], and maximizing the routabil-ity of the mapping solution <ref> [1, 13] </ref>. This paper studies the problem of performance-driven technology mapping for LUT-based FPGAs, i.e. the technology mapping with the objective of minimizing the delay. Previous mapping algorithms for delay minimization include MIS-pga-delay [9], Chortle-d [4], DAG-Map [2], and FlowMap [3], etc..
Reference: [2] <author> Chen, K. C., J. Cong, Y. Ding, A. B. Kahng, and P. Trajmar, ``DAG-Map: </author> <title> Graph-based FPGA Technology Mapping for Delay Optimization,'' </title> <booktitle> IEEE Design and Test of Computers, </booktitle> <month> Sep. </month> <year> 1992. </year>
Reference-contexts: Several optimization objectives for the technology mapping problem have been proposed, including minimizing the number of K-LUTs in the mapping solution [5, 7, 8, 10, 11, 15], minimizing the delay of the mapping solution <ref> [2, 3, 4, 9] </ref>, and maximizing the routabil-ity of the mapping solution [1, 13]. This paper studies the problem of performance-driven technology mapping for LUT-based FPGAs, i.e. the technology mapping with the objective of minimizing the delay. <p> This paper studies the problem of performance-driven technology mapping for LUT-based FPGAs, i.e. the technology mapping with the objective of minimizing the delay. Previous mapping algorithms for delay minimization include MIS-pga-delay [9], Chortle-d [4], DAG-Map <ref> [2] </ref>, and FlowMap [3], etc.. MIS-pga-delay combines Boolean synthesis with technology mapping and considers the number of levels of the mapping solution as well as the routing delay in its optimization procedure. Chortle-d uses bin-packing heuristic and several post-processing operations to minimize the number of levels in the mapping solution. <p> DELAY OPTIMAL TECHNOLOGY MAPPING ALGORITHM FOR LUT-BASED FPGAS Our algorithm is applicable to any K-bounded Boolean network. Given a general Boolean network as input, if it is not K-bounded, We first transform it into a 2-input simple gate network using the algorithm discussed in <ref> [2] </ref>. Note that the optimality of our algorithm holds not only for such 2-input simple gate networks, but also for any K-bounded general Boolean network. The mapping algorithm presented in this paper is a generalization of FlowMap [3] which produces optimal mapping solution under unit delay model.
Reference: [3] <author> Cong, J. and Y. Ding, </author> <title> ``An Optimal Technology Mapping Algorithm fo Delay Optimization in Lookup-Table Based FPGA Designs,'' </title> <booktitle> Proc. IEEE Int'l Conf. on Computer-Aided Design, </booktitle> <month> Nov. </month> <year> 1992. </year>
Reference-contexts: Several optimization objectives for the technology mapping problem have been proposed, including minimizing the number of K-LUTs in the mapping solution [5, 7, 8, 10, 11, 15], minimizing the delay of the mapping solution <ref> [2, 3, 4, 9] </ref>, and maximizing the routabil-ity of the mapping solution [1, 13]. This paper studies the problem of performance-driven technology mapping for LUT-based FPGAs, i.e. the technology mapping with the objective of minimizing the delay. <p> This paper studies the problem of performance-driven technology mapping for LUT-based FPGAs, i.e. the technology mapping with the objective of minimizing the delay. Previous mapping algorithms for delay minimization include MIS-pga-delay [9], Chortle-d [4], DAG-Map [2], and FlowMap <ref> [3] </ref>, etc.. MIS-pga-delay combines Boolean synthesis with technology mapping and considers the number of levels of the mapping solution as well as the routing delay in its optimization procedure. Chortle-d uses bin-packing heuristic and several post-processing operations to minimize the number of levels in the mapping solution. <p> Note that the optimality of our algorithm holds not only for such 2-input simple gate networks, but also for any K-bounded general Boolean network. The mapping algorithm presented in this paper is a generalization of FlowMap <ref> [3] </ref> which produces optimal mapping solution under unit delay model. The algorithm has two phases. In the first phase, it computes a label for each node which reflects the delay of the K-LUT implementing that node in an optimal mapping solution. <p> The second phase of our algorithm is to generate the K-LUTs in the optimal mapping solution. Since this phase is the same as that in FlowMap <ref> [3] </ref>, we only give a brief description. We generate K-LUTs only for nodes which have fanouts to POs or other K-LUTs. During the mapping phase, we maintain a list L of nodes which have to be implemented by K-LUTs. <p> Therefore, the mapping solution is optimal. (A formal proof for similar conclusion under unit delay model can be found in <ref> [3] </ref>.) In summary, we have Theorem 2. For any K-bounded Boolean network N, the algorithm produces a K-LUT mapping solution with the minimum delay under arbitrary net delay model in O (Kmnlogn) time, where n and m are the number of nodes and edges in N. ` 4. <p> The initial circuits are 2-input simple gate networks, which are the same as those used in <ref> [3] </ref>. For each of the four circuits, we applied FlowMap and FlowMap-d (under the nominal delay model defined in the preceding paragraph) separately, and then used FlowPack [3] to minimize the area for both solutions. <p> The initial circuits are 2-input simple gate networks, which are the same as those used in <ref> [3] </ref>. For each of the four circuits, we applied FlowMap and FlowMap-d (under the nominal delay model defined in the preceding paragraph) separately, and then used FlowPack [3] to minimize the area for both solutions. For each of the final mapping solutions, we have computed both the estimated delay under the nominal delay model and the real delay obtained through placement and routing using Xilinx XACT design tool.
Reference: [4] <author> Francis, R. J., J. Rose, and Z. Vranesic, </author> <title> ``Technology Mapping for Delay Optimization of Lookup Table-Based FPGAs,'' </title> <booktitle> MCNC Logic Synthesis Workshop, </booktitle> <year> 1991. </year>
Reference-contexts: Several optimization objectives for the technology mapping problem have been proposed, including minimizing the number of K-LUTs in the mapping solution [5, 7, 8, 10, 11, 15], minimizing the delay of the mapping solution <ref> [2, 3, 4, 9] </ref>, and maximizing the routabil-ity of the mapping solution [1, 13]. This paper studies the problem of performance-driven technology mapping for LUT-based FPGAs, i.e. the technology mapping with the objective of minimizing the delay. <p> This paper studies the problem of performance-driven technology mapping for LUT-based FPGAs, i.e. the technology mapping with the objective of minimizing the delay. Previous mapping algorithms for delay minimization include MIS-pga-delay [9], Chortle-d <ref> [4] </ref>, DAG-Map [2], and FlowMap [3], etc.. MIS-pga-delay combines Boolean synthesis with technology mapping and considers the number of levels of the mapping solution as well as the routing delay in its optimization procedure.
Reference: [5] <author> Francis, R. J., J. Rose, and Z. Vranesic, ``Chortle-crf: </author> <title> Fast Technology Mapping for Lookup Table-Based FPGAs,'' </title> <booktitle> Proceedings 28th ACM/IEEE Design Automation Conference, </booktitle> <pages> pp. 613-619, </pages> <year> 1991. </year>
Reference-contexts: The technology mapping problem in LUT-based FPGA designs is to transform a general Boolean network (obtained by technology independent synthesis) into a functionally equivalent network of K-LUTs. Several optimization objectives for the technology mapping problem have been proposed, including minimizing the number of K-LUTs in the mapping solution <ref> [5, 7, 8, 10, 11, 15] </ref>, minimizing the delay of the mapping solution [2, 3, 4, 9], and maximizing the routabil-ity of the mapping solution [1, 13]. This paper studies the problem of performance-driven technology mapping for LUT-based FPGAs, i.e. the technology mapping with the objective of minimizing the delay.
Reference: [6] <author> Hill, D., </author> <title> ``A CAD System for the Design of Field Programmable Gate Arrays,'' </title> <booktitle> Proc. ACM/IEEE Design Automation Conference, </booktitle> <pages> pp. 187-192, </pages> <year> 1991. </year>
Reference-contexts: An FPGA architecture consists of the programmable logic blocks, programmable interconnections, and programmable I/O pads. The LUT-based FPGA is a popular architecture used by several FPGA manufacturers, including Xilinx and AT&T <ref> [6, 16] </ref>. In LUT-based FPGA, the basic programmable logic block is a K-input lookup table (K-LUT) which can implement any Boolean function of up to K variables.
Reference: [7] <author> Karplus, K., ``Xmap: </author> <title> A Technology Mapper for Table-lookup Field-Programmable Gate Arrays,'' </title> <booktitle> Proc. 28th ACM/IEEE Design Automation Conference, </booktitle> <pages> pp. 240-243, </pages> <year> 1991. </year>
Reference-contexts: The technology mapping problem in LUT-based FPGA designs is to transform a general Boolean network (obtained by technology independent synthesis) into a functionally equivalent network of K-LUTs. Several optimization objectives for the technology mapping problem have been proposed, including minimizing the number of K-LUTs in the mapping solution <ref> [5, 7, 8, 10, 11, 15] </ref>, minimizing the delay of the mapping solution [2, 3, 4, 9], and maximizing the routabil-ity of the mapping solution [1, 13]. This paper studies the problem of performance-driven technology mapping for LUT-based FPGAs, i.e. the technology mapping with the objective of minimizing the delay.
Reference: [8] <author> Murgai, R., et al, </author> <title> ``Logic Synthesis Algorithms for Programmable Gate Arrays,'' </title> <booktitle> Proc. 27th ACM/IEEE Design Automation Conf., </booktitle> <pages> pp. 620-625, </pages> <year> 1990. </year>
Reference-contexts: The technology mapping problem in LUT-based FPGA designs is to transform a general Boolean network (obtained by technology independent synthesis) into a functionally equivalent network of K-LUTs. Several optimization objectives for the technology mapping problem have been proposed, including minimizing the number of K-LUTs in the mapping solution <ref> [5, 7, 8, 10, 11, 15] </ref>, minimizing the delay of the mapping solution [2, 3, 4, 9], and maximizing the routabil-ity of the mapping solution [1, 13]. This paper studies the problem of performance-driven technology mapping for LUT-based FPGAs, i.e. the technology mapping with the objective of minimizing the delay.
Reference: [9] <author> Murgai, R., N. Shenoy, R. K. Brayton, and A. Sangiovanni-Vincentelli, </author> <title> ``Performance Directed Synthesis for Table Look Up Programmable Gate Arrays,'' </title> <booktitle> Proc. IEEE Int'l Conf. Computer-Aided Design, </booktitle> <pages> pp. 572-575, </pages> <month> Nov., </month> <year> 1991. </year>
Reference-contexts: Several optimization objectives for the technology mapping problem have been proposed, including minimizing the number of K-LUTs in the mapping solution [5, 7, 8, 10, 11, 15], minimizing the delay of the mapping solution <ref> [2, 3, 4, 9] </ref>, and maximizing the routabil-ity of the mapping solution [1, 13]. This paper studies the problem of performance-driven technology mapping for LUT-based FPGAs, i.e. the technology mapping with the objective of minimizing the delay. <p> This paper studies the problem of performance-driven technology mapping for LUT-based FPGAs, i.e. the technology mapping with the objective of minimizing the delay. Previous mapping algorithms for delay minimization include MIS-pga-delay <ref> [9] </ref>, Chortle-d [4], DAG-Map [2], and FlowMap [3], etc.. MIS-pga-delay combines Boolean synthesis with technology mapping and considers the number of levels of the mapping solution as well as the routing delay in its optimization procedure.
Reference: [10] <author> Murgai, R., N. Shenoy, R. K. Brayton, and A. Sangiovanni-Vincentelli, </author> <title> ``Improved Logic Synthesis Algorithms for Table Look Up Architectures ,'' Proc. </title> <booktitle> IEEE Int'l Conf. Computer-Aided Design, </booktitle> <pages> pp. 564-567, </pages> <month> Nov., </month> <year> 1991. </year>
Reference-contexts: The technology mapping problem in LUT-based FPGA designs is to transform a general Boolean network (obtained by technology independent synthesis) into a functionally equivalent network of K-LUTs. Several optimization objectives for the technology mapping problem have been proposed, including minimizing the number of K-LUTs in the mapping solution <ref> [5, 7, 8, 10, 11, 15] </ref>, minimizing the delay of the mapping solution [2, 3, 4, 9], and maximizing the routabil-ity of the mapping solution [1, 13]. This paper studies the problem of performance-driven technology mapping for LUT-based FPGAs, i.e. the technology mapping with the objective of minimizing the delay.
Reference: [11] <author> Sawkar, P. and D. Thomas, </author> <title> ``Technology Mapping for Table-Look-Up Based Field Programmable Gate Arrays,'' </title> <booktitle> ACM/SIGDA Workshop on Field Programmable Gate Arrays, </booktitle> <pages> pp. 83-88, </pages> <month> Feb. </month> <year> 1992. </year>
Reference-contexts: The technology mapping problem in LUT-based FPGA designs is to transform a general Boolean network (obtained by technology independent synthesis) into a functionally equivalent network of K-LUTs. Several optimization objectives for the technology mapping problem have been proposed, including minimizing the number of K-LUTs in the mapping solution <ref> [5, 7, 8, 10, 11, 15] </ref>, minimizing the delay of the mapping solution [2, 3, 4, 9], and maximizing the routabil-ity of the mapping solution [1, 13]. This paper studies the problem of performance-driven technology mapping for LUT-based FPGAs, i.e. the technology mapping with the objective of minimizing the delay.
Reference: [12] <author> Schlag, M., P. Chan, and J. Kong, </author> <title> ``Empirical Evaluation of Multilevel Logic Minimization Tools for a Field Programmable Gate Array Technology,'' </title> <booktitle> Proc. 1st Int'l Workshop on Field Programmable Logic and Applications, </booktitle> <month> Sept. </month> <year> 1991. </year>
Reference-contexts: Several delay models have been proposed to capture variable net delay, including the nominal delay model hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh 1 The PI and PO nodes are not covered. fi 3-LUT 3-LUT Fig. 1 Mapping a Boolean network to a K-LUT network ( where K=3). <ref> [12] </ref> which assumes the fanout net delay be proportional to the number of fanouts. <p> Such a delay model is called the nominal delay model <ref> [12] </ref>. Moreover, in order to make a fair comparison with FlowMap, we assume that the K-LUT delay is larger than any fanout net delay 4 , so that it is guaranteed that the mapping solution of FlowMap-d also has the minimum number of levels.
Reference: [13] <author> Schlag, M., J. Kong, and P. K. Chan, </author> <title> ``Routability-Driven Technology Mapping for Lookup Table-Based FPGAs,'' </title> <booktitle> Proc. 1992 IEEE International Conference on Computer Design, </booktitle> <month> Oct. </month> <year> 1992. </year>
Reference-contexts: Several optimization objectives for the technology mapping problem have been proposed, including minimizing the number of K-LUTs in the mapping solution [5, 7, 8, 10, 11, 15], minimizing the delay of the mapping solution [2, 3, 4, 9], and maximizing the routabil-ity of the mapping solution <ref> [1, 13] </ref>. This paper studies the problem of performance-driven technology mapping for LUT-based FPGAs, i.e. the technology mapping with the objective of minimizing the delay. Previous mapping algorithms for delay minimization include MIS-pga-delay [9], Chortle-d [4], DAG-Map [2], and FlowMap [3], etc..
Reference: [14] <author> Tarjan, R. E., </author> <title> Data Structures and Network Algorithms, </title> <institution> Society for Industrial and Applied Mathematics, </institution> <address> Philadelphia, Pennsylvania (1983). </address>
Reference-contexts: In Fig. 3 (b), all the edges whose capacities are not specified have infinite capacity. Fig. 3 (c) shows the cut computed from (b), and in (d) it is converted back to a cut in the original network (a). According to the Max-flow Min-cut Theorem <ref> [14] </ref>, N t has a cut whose edge cut-size is no more than K if and only if the maximum flow between s and t in N t has value no more than K. <p> Since we are only interested in testing if the maximum flow is of value K or smaller, we apply the augmenting path algorithm in N t to compute a maximum flow. (For details of the augmenting path algorithm, see <ref> [14] </ref>.) From the construction of N t , it can be seen that each augmenting path in the flow residual graph of N t from s to t increases the flow by either one or infinity.
Reference: [15] <author> Woo, N.-S., </author> <title> ``A Heuristic Method for FPGA Technology Mapping Based on the Edge Visibility,'' </title> <booktitle> Proc. 28th ACM/IEEE Design Automation Conference, </booktitle> <pages> pp. 248-251, </pages> <year> 1991. </year>
Reference-contexts: The technology mapping problem in LUT-based FPGA designs is to transform a general Boolean network (obtained by technology independent synthesis) into a functionally equivalent network of K-LUTs. Several optimization objectives for the technology mapping problem have been proposed, including minimizing the number of K-LUTs in the mapping solution <ref> [5, 7, 8, 10, 11, 15] </ref>, minimizing the delay of the mapping solution [2, 3, 4, 9], and maximizing the routabil-ity of the mapping solution [1, 13]. This paper studies the problem of performance-driven technology mapping for LUT-based FPGAs, i.e. the technology mapping with the objective of minimizing the delay.
Reference: [16] <author> Xilinx, </author> <title> The Programmable Gate Array Data Book, </title> <address> Xilinx, San Jose (1992). </address>
Reference-contexts: An FPGA architecture consists of the programmable logic blocks, programmable interconnections, and programmable I/O pads. The LUT-based FPGA is a popular architecture used by several FPGA manufacturers, including Xilinx and AT&T <ref> [6, 16] </ref>. In LUT-based FPGA, the basic programmable logic block is a K-input lookup table (K-LUT) which can implement any Boolean function of up to K variables. <p> We have tested the algorithm on four mid-size MCNC benchmark circuits such that the mapping solution of each circuit can be implemented by a single FPGA chip of Xilinx 3000 series, which consists of 5-LUTs <ref> [16] </ref>. The initial circuits are 2-input simple gate networks, which are the same as those used in [3].
References-found: 16

