URL: http://www.arch.su.edu.au/~andres/ieee-expert96.ps
Refering-URL: http://www.arch.su.edu.au/~mary/publications.html
Root-URL: 
Email: mary@arch.su.edu.au  
Title: Developing Case-Based Reasoning for Structural Design  
Author: Mary Lou Maher Andres Gomez de Silva Garza 
Address: Sydney  
Affiliation: Key Centre of Design Computing University of  
Abstract: The use of case-based reasoning as a process model of design involves the subtasks of recalling previously known designs from memory and adapting these design cases or subcases to fit the current design context. The development of this process model for a particular design domain proceeds in parallel with the development of a representation for the cases, the case memory organisation, and the design knowledge needed in addition to specific designs. The selection of a particular representational paradigm for these types of information, and the details of its use for a particular problemsolving domain, depend on the intended use of the information to be represented and the project information available, as well as the nature of the domain. In this paper we describe the development and implementation of four case-based design systems: CASECAD, CADSYN, WIN, and DEMEX. Each system is described in terms of the content, organisation, and source of case memory, and the implementation of case recall and case adaptation. A comparison of these systems considers the relative advantages and disadvantages of the implementations. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Corne, D., Smithers, T., and Ross, P. </author> <title> (1993) Solving Design Problems by Computational Exploration. </title>
Reference-contexts: Index Elaboration and Index Revision in DEMEX Many researchers have observed that being able to restructure, reconsider, and reformulate the specifications of a problem is an important aspect of design problem solving (eg., see (Goel and Pirolli 1992), <ref> (Corne, Smithers, and Ross 1993) </ref>, and (Wills and Kolodner 1994)). The DEMEX system makes use of cases and models to guide the user in reformulating the requirements of a structural design problem, by improving his/her understanding of the problem.
Reference: <editor> In Gero, J., and Sudweeks, F. (eds.). </editor> <booktitle> Preprints of the IFIP WG 5.2 Workshop on Formal Design Methods for Computer-Aided Design, </booktitle> <pages> 249-270. </pages> <address> Tallinn, Estonia. </address> <month> June </month> <year> 1993. </year>
Reference: <author> Domeshek, E. A., and Kolodner, J. L. </author> <year> (1992). </year> <title> A case-based design aid for architecture, </title> <editor> in J. S. Gero (Ed.), </editor> <booktitle> Artificial Intelligence in Design 92. </booktitle> <address> Dordrecht: </address> <publisher> Kluwer Academic. 18 Faltings, </publisher> <editor> B., Hua, K., Schmitt, G., and Shih, S. </editor> <booktitle> (1991). Case-based representation of architectural design knowledge. Proceedings of the DARPA Workshop on Case-Based Reasoning. </booktitle> <address> San Mateo, CA: </address> <publisher> Morgan Kaufmann, </publisher> <pages> pp. 307-316. </pages>
Reference-contexts: There are many case-based design systems described in the literature that should also be considered, such as KRITIK (Goel 1989), CADET (Sycara et al 1991), ARCHIE <ref> (Domeshek and Kolodner 1992) </ref>, FABEL (Vob et al 1994), and others; but here we focus on the ones we have developed: CASECAD, CADSYN, WIN, and DEMEX. Each system is described in terms of the content, organisation, and source of case memory, and the implementation of case recall and case adaptation.
Reference: <author> Gero, J.S. </author> <title> (1990) Design Prototypes: A Knowledge Representation Schema for Design. </title> <journal> AI Magazine, </journal> <volume> 11(4), </volume> <pages> 26-36. </pages>
Reference-contexts: The attribute-value data is also helpful to designers, since it summarises important information in discrete packages, and provides an explicit interpretation of the meaning of the graphical representations. CASECADs object-based representation follows the design prototypes framework presented in <ref> (Gero 1990) </ref>, which classifies attributes into three categories: function, behaviour, and structure. An additional category, relation attributes, is added in CASECAD to facilitate the implementation of hierarchies and other relational information. Function attributes are those that represent the intended purpose of the design, for instance support-building-type, grid-geometry, and resist-wind-load.
Reference: <author> Goel, A. </author> <title> (1989) Integration of Case-Based Reasoning and Model-Based Reasoning for Adaptive Design Problem Solving. </title> <type> PhD thesis, </type> <institution> The Ohio State University, Department of Computer and Information Science, Columbus, Ohio. </institution>
Reference-contexts: There are many case-based design systems described in the literature that should also be considered, such as KRITIK <ref> (Goel 1989) </ref>, CADET (Sycara et al 1991), ARCHIE (Domeshek and Kolodner 1992), FABEL (Vob et al 1994), and others; but here we focus on the ones we have developed: CASECAD, CADSYN, WIN, and DEMEX.
Reference: <author> Goel, V. and Pirolli, P. </author> <title> (1992) The Structure of Design Problem Spaces. </title> <booktitle> Cognitive Science 16, </booktitle> <pages> 395-429. </pages>
Reference-contexts: This arises from the fact that real-world design problem solving usually does not begin with a wellspecified problem, and then proceed towards finding a solution, but rather the problem requirements evolve as the designer explores and considers alternative solutions <ref> (Goel and Pirolli 1992) </ref>. A more detailed description of DEMEX can be found in (Gomez de Silva Garza and Maher 1996). Case Memory Representation in DEMEX The design cases and models in CASECADs memory were also used in DEMEX. <p> Index Elaboration and Index Revision in DEMEX Many researchers have observed that being able to restructure, reconsider, and reformulate the specifications of a problem is an important aspect of design problem solving (eg., see <ref> (Goel and Pirolli 1992) </ref>, (Corne, Smithers, and Ross 1993), and (Wills and Kolodner 1994)). The DEMEX system makes use of cases and models to guide the user in reformulating the requirements of a structural design problem, by improving his/her understanding of the problem.
Reference: <author> Gomez de Silva Garza, A. and Maher, </author> <title> M.L. (1996) Design by Interactive Exploration Using Memory-Based Techniques. </title> <journal> Knowledge-Based Systems. </journal> <volume> 9(1). </volume>
Reference-contexts: A more detailed description of DEMEX can be found in <ref> (Gomez de Silva Garza and Maher 1996) </ref>. Case Memory Representation in DEMEX The design cases and models in CASECADs memory were also used in DEMEX. This includes the partitioning of cases and models into subsystems, and the categorisation of attributes into functional, behavioural, and structural (and relational) variables.
Reference: <author> Hinrichs, T.R., and Kolodner, J.L. </author> <year> (1991). </year> <title> The role of adaptation in case-based design, </title> <booktitle> Proceedings of the DARPA Workshop on Case-Based Reasoning. </booktitle> <address> San Mateo, CA: </address> <publisher> Morgan Kaufmann, </publisher> <pages> pp. 121-132. </pages>
Reference-contexts: The complexity of the constraint satisfaction process is necessary to accommodate the adaptation of multiple subcases within a hierarchical representation of the design solution where the constraints represent logical relationships among design variables. This is contrasted with the use of constraints to adapt cases in JULIA <ref> (Hinrichs and Kolodner 1991) </ref>, a case-based reasoner for meal planning where the meal is represented as a whole case, and CADRE (Faltings et al 1991), a case-based reasoner for floor plan design where constraints represent numerical relationships among dimension variables. 2.3 WIN The objective of the WIN project is to develop <p> In these systems, the focus of the reasoner was on memory retrieval. In CADSYN, the reasoning is more oriented towards modelling design synthesis, closer to the design automation end of the spectrum. CADSYN uses a constraint satisfaction approach to adaptation, similar in some ways to JULIA <ref> (Hinrichs and Kolodner 1991) </ref> and CADRE (Faltings et al 1991). This is in direct contrast to the assumption of CASECAD that the user would make the changes to the case, unsupported by the case-based reasoner but provided with an editor and automated case memory indexing for new cases.
Reference: <author> Maher (1987). </author> <title> Engineering Design Synthesis: A Domain Independent Representation, </title> <journal> Artificial Intellgience in Engineering Analysis and Manufacturing, </journal> <volume> 1(3) </volume> <pages> 207-213. </pages>
Reference-contexts: Second, the cases in CADSYN are related to models, but the models are referred to as systems and subsystems. This is due to the association between CADSYN and EDESYN <ref> (Maher 1987) </ref>, a representation of design synthesis knowledge using decomposition hierarchies referred to as systems. Finally, CADSYN augments the knowledge representation of cases and systems with constraints in order to adapt cases using a constraint satisfaction approach.
Reference: <author> Maher, M.L. and Balachandran, B. </author> <title> (1994a) Multimedia Approach to Case-Based Structural Design. </title> <journal> Journal of Computing in Civil Engineering, </journal> <volume> Vol. 8, No. 3, </volume> <month> July </month> <year> 1994, </year> <pages> 359-376. </pages>
Reference-contexts: The following subsections describe the issues involved in building the CASECAD system in more detail. For more comprehensive information on the functioning of the system itself, the reader is referred to <ref> (Maher and Balachandran 1994a) </ref> and (Maher and Balachandran 1994b). Case Representation in CASECAD The design case base in CASECAD was collected over a period of one year, in parallel with the development of the system.
Reference: <author> Maher, M.L. and Balachandran, B. </author> <title> (1994b) Flexible Retrieval Strategies for Case-Based Design. </title> <booktitle> In J.S. </booktitle>
Reference-contexts: The following subsections describe the issues involved in building the CASECAD system in more detail. For more comprehensive information on the functioning of the system itself, the reader is referred to (Maher and Balachandran 1994a) and <ref> (Maher and Balachandran 1994b) </ref>. Case Representation in CASECAD The design case base in CASECAD was collected over a period of one year, in parallel with the development of the system. <p> These two strategies evolved from initial considerations made in the CASECAD project about the need for flexible retrieval of cases from memory (see <ref> (Maher and Balachandran 1994b) </ref>). The first strategy, which makes use of models in memory, has thus been called model-based index elaboration, whereas the second strategy, in which the problem reformulation is based on cases in memory, has been termed case-based index revision.
Reference: <editor> Gero and F. Sudweeks (eds.), </editor> <booktitle> Artificial Intelligence in Design 94, </booktitle> <pages> 163-180. </pages> <publisher> Kluwer Academic Publishers. </publisher>
Reference: <author> Maher, M.L. and Zhang, D.M. </author> <year> (1991) </year> <month> CADSYN: </month> <title> Using Case and Decomposition Knowledge for Design Synthesis. </title> <editor> In J.S. Gero (ed.) </editor> <booktitle> Artificial Intelligence in Design 91, </booktitle> <pages> 137-150. </pages> <publisher> Butterworth-Heinemann. </publisher>
Reference: <author> Maher, M.L. and Zhang, D. M. </author> <year> (1993) </year> <month> CADSYN: </month> <title> A Case-Based Design Process Model. </title> <booktitle> AI EDAM 7(2), </booktitle> <pages> 97-110. </pages>
Reference: <author> Sycara, K., Navinchandra, D., Guttal, R., Koning, J., and Narasimhan, S. </author> <year> (1991) </year> <month> CADET: </month> <title> A Case-Based Synthesis Tool for Engineering Design International Journal of Expert Systems, </title> <booktitle> 4(2) </booktitle> <pages> 157-188. </pages>
Reference-contexts: There are many case-based design systems described in the literature that should also be considered, such as KRITIK (Goel 1989), CADET <ref> (Sycara et al 1991) </ref>, ARCHIE (Domeshek and Kolodner 1992), FABEL (Vob et al 1994), and others; but here we focus on the ones we have developed: CASECAD, CADSYN, WIN, and DEMEX.
Reference: <author> Vob, A., Coulon, C.-H., Grther, W., Linowski, B., Bartsch-Sprl, B., Brner, B., Tammer, E. C., Drschke, H., and Knauff, M. </author> <year> (1994). </year> <title> Retrieval of similar layouts, </title> <editor> in J. S. Gero and F. Sudweeks (Eds.), </editor> <booktitle> Artificial Intelligence in Design'94, </booktitle> <address> Dordrecht: </address> <publisher> Kluwer Academic, </publisher> <pages> pp. 625-640. </pages>
Reference-contexts: There are many case-based design systems described in the literature that should also be considered, such as KRITIK (Goel 1989), CADET (Sycara et al 1991), ARCHIE (Domeshek and Kolodner 1992), FABEL <ref> (Vob et al 1994) </ref>, and others; but here we focus on the ones we have developed: CASECAD, CADSYN, WIN, and DEMEX. Each system is described in terms of the content, organisation, and source of case memory, and the implementation of case recall and case adaptation. <p> One, the graphical representation does not make explicit the function or the behaviour of the design - it addresses what the design looks like. Two, computers do not reason about complex graphical representations easily. There are examples of case-based design systems, such as FABEL <ref> (Vob et al 1994) </ref>, that use graphical representations for the user interface, where the reasoning is based on a conversion of the images to alternative symbolic representations. CASECAD uses a multimedia representation for cases, using an objectoriented representation.
Reference: <author> Wang, S.H. </author> <title> (1995) WIN: A Case-Based Design Approach to the Structural Design of the Wind Systems of Buildings. </title> <type> Masters Thesis, </type> <institution> Department of Architectural and Design Science, University of Sydney, Australia. </institution>
Reference-contexts: As a result of this focus we developed a case memory representation that described cases in a way that was specific to the domain. For more details on the WIN system, the reader is referred to <ref> (Wang 1995) </ref>. Case Representation in WIN In the WIN system Three of the structural design cases in CASECAD are represented in the WIN system, where each case has approximately 4 subcases.
Reference: <author> Wills, L., and Kolodner, J. </author> <title> (1994) Towards More Creative Case-Based Design Systems. </title> <booktitle> Proceedings of the 1994 Annual Conference of the American Association for Artificial Intelligence. </booktitle>
Reference-contexts: Index Elaboration and Index Revision in DEMEX Many researchers have observed that being able to restructure, reconsider, and reformulate the specifications of a problem is an important aspect of design problem solving (eg., see (Goel and Pirolli 1992), (Corne, Smithers, and Ross 1993), and <ref> (Wills and Kolodner 1994) </ref>). The DEMEX system makes use of cases and models to guide the user in reformulating the requirements of a structural design problem, by improving his/her understanding of the problem.
Reference: <author> Zhang, D.M. </author> <year> (1994). </year> <title> A Hybrid Approach to Case-Based Design. </title> <type> PhD Thesis, </type> <institution> Department of Architectural and Design Science, University of Sydney, Australia. </institution>
References-found: 19

