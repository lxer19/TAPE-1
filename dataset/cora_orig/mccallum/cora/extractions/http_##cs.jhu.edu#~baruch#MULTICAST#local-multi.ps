URL: http://cs.jhu.edu/~baruch/MULTICAST/local-multi.ps
Refering-URL: http://cs.jhu.edu/~baruch/MULTICAST/index.htm
Root-URL: http://www.cs.jhu.edu
Email: E-mail: baruch@blaze.cs.jhu.edu.  E-Mail: azar@math.tau.ac.il  E-mail: yair@research.bell-labs.com  
Title: Local Multicast Rate Control with Globally Optimum Throughput  
Author: Baruch Awerbuch Yossi Azar Yair Bartal 
Note: Supported by Air Force Contract TNDGAFOSR-86-0078, ARPA/Army contract DABT63-93-C-0038, ARO contract DAAL03-86-K-0171, NSF contract 9114440-CCR, DARPA contract N00014-J-92-1799, and a special grant from IBM.  Research supported in part by the Israel Science Foundation administered by the Israel Academy of Sciences and by the United states-Israel Binational Science Foundation.  
Address: Baltimore, MD 21218,  Science.  ,Tel-Aviv 69978, Israel.  600 Mountain Avenue, Murray Hill, NJ 07974.  
Affiliation: Johns Hopkins University,  and MIT Lab. for Computer  Department of Computer Science, Tel Aviv University  Bell-Labs, Lucent Technologies,  
Date: November 14, 1997  
Abstract: Multicast communication involves sending same data to multiple destinations (receivers). Different multicast groups may co-exist in the network at the same, competing for the shared pool of network resources. The purpose of rate control is maximizing the overall throughput of multicast connections, namely the total amount traffic delivered to different receivers, subject to the capacity constraints on the network links. In flexible multicast, receivers in different regions of the network may be need to receive data at different rates, due to variations in link capacities and traffic requirements in different areas of the network. This makes rate control for multicast more complex than the similar task for point-to-point (single receiver) case. The latter can be represented by a polynomial size positive linear program, which enables optimum solutions by fast and local rate control algorithms. We show that multicast problem, which is represented by exponential size positive linear program, can still be optimized by fast and local algorithms. Specifically, our algorithms compute a near optimal values of multicast flows in poly-logarithmic number of iterations, in either distributed or parallel computation models. In the distributed model, rate of a connection is established based only on the network contention on the path of the connection, and without coordination with other connections. 
Abstract-found: 1
Intro-found: 1
Reference: [AA94] <author> Baruch Awerbuch and Yossi Azar. </author> <title> Local optimization of global objectives: ,competitive distributed deadlock resolution and resource allocation. </title> <booktitle> In Proc. 35th IEEE Symp. on Found. of Comp. Science, </booktitle> <year> 1994. </year>
Reference-contexts: Our results are 1 * approximations for the problem that take poly-logarithmic number of rounds in the following models: * parallel model of Luby and Nissan [LN93]. * distributed asynchronous model used by Awerbuch & Azar <ref> [AA94] </ref> and Bartal, Byers & Raz [BBR97]). 2 Comparison with existing work The general concept of pursuing distributed algorithms to maximize global objective is known to be provably hard and in some cases impossible [Lin87, PY93]. <p> Yet, some of the most interesting global optimization problems can be very closely approximated based only on local information. Specifically, the model of making local decisions for globally maximizing network throughput has been first introduced by Awerbuch and Azar <ref> [AA94] </ref> and subsequently adopted by Bartal, Byers and Raz [BBR97]. The algorithms of Awerbuch and Azar [AA94] and Bartal, 2 Byers and Raz [BBR97] achieve, respectively, logarithmic and 1 * approximation ratios with poly-logarithmic number of rounds for point-point communication (e.g., multicast with a single receiver). <p> Specifically, the model of making local decisions for globally maximizing network throughput has been first introduced by Awerbuch and Azar <ref> [AA94] </ref> and subsequently adopted by Bartal, Byers and Raz [BBR97]. The algorithms of Awerbuch and Azar [AA94] and Bartal, 2 Byers and Raz [BBR97] achieve, respectively, logarithmic and 1 * approximation ratios with poly-logarithmic number of rounds for point-point communication (e.g., multicast with a single receiver). Our work however extends these results to the domain of multicast, e.g., enables arbitrary number of receivers.
Reference: [AAFL96] <author> Baruch Awerbuch, Yossi Azar, Amos Fiat, and Tom Leighton. </author> <title> Making commitments in the face of uncertainty: How to pick a winner almost every time. </title> <booktitle> In Proceedings of the ACM STOC, </booktitle> <year> 1996. </year>
Reference-contexts: Maximal dense tree is a tree such that any sub-tree added to this tree is not dense. Our algorithm computes a min-max dense tree which is minimal among such trees. Maximal dense trees have been used before in the context of on-line multicast admission control <ref> [AAG94, AAFL96, AS97, GHP98] </ref>. The essence of the algorithm is that the multicast flows are additively increased over all such min-max dense subtrees, thus causing more link contention and forcing existing current min-max dense trees to "stop" being dense. Certain sub-trees of existing trees may still be dense. <p> Under some conditions, parallel version of the single-receiver algorithm in [PST91] will also converge in small umber of iterations. It is also worth mentioning work on global-information online algorithms for multicast such as <ref> [AAG94, AAFL96, AS97, GHP98] </ref>. In these papers logarithmic approximation ratio is achieved by algorithms that have global information but make decisions online. The concept of min-max feasible tree is related to the concept of maximal dense trees used in these papers. 3 Definition of the problem Input.
Reference: [AAG94] <author> Baruch Awerbuch, Yossi Azar, and Rainer Gawlick. </author> <title> Dense trees and competitive selective multicast. </title> <type> unpublished manuscript, </type> <month> December </month> <year> 1994. </year> <month> 10 </month>
Reference-contexts: Maximal dense tree is a tree such that any sub-tree added to this tree is not dense. Our algorithm computes a min-max dense tree which is minimal among such trees. Maximal dense trees have been used before in the context of on-line multicast admission control <ref> [AAG94, AAFL96, AS97, GHP98] </ref>. The essence of the algorithm is that the multicast flows are additively increased over all such min-max dense subtrees, thus causing more link contention and forcing existing current min-max dense trees to "stop" being dense. Certain sub-trees of existing trees may still be dense. <p> Under some conditions, parallel version of the single-receiver algorithm in [PST91] will also converge in small umber of iterations. It is also worth mentioning work on global-information online algorithms for multicast such as <ref> [AAG94, AAFL96, AS97, GHP98] </ref>. In these papers logarithmic approximation ratio is achieved by algorithms that have global information but make decisions online. The concept of min-max feasible tree is related to the concept of maximal dense trees used in these papers. 3 Definition of the problem Input.
Reference: [AAP93] <author> Baruch Awerbuch, Yossi Azar, and Serge Plotkin. </author> <title> Throughput competitive on-line routing. </title> <booktitle> In Proc. 34th IEEE Symp. on Found. of Comp. Science, </booktitle> <pages> pages 32-40. </pages> <publisher> IEEE, </publisher> <month> November </month> <year> 1993. </year>
Reference: [AS97] <author> Baruch Awerbuch and Tripurari Singh. </author> <title> Online algorithms for multicast and maximal dense trees. </title> <booktitle> In Proc. 29th ACM Symp. on Theory of Computing, </booktitle> <month> may </month> <year> 1997. </year>
Reference-contexts: Maximal dense tree is a tree such that any sub-tree added to this tree is not dense. Our algorithm computes a min-max dense tree which is minimal among such trees. Maximal dense trees have been used before in the context of on-line multicast admission control <ref> [AAG94, AAFL96, AS97, GHP98] </ref>. The essence of the algorithm is that the multicast flows are additively increased over all such min-max dense subtrees, thus causing more link contention and forcing existing current min-max dense trees to "stop" being dense. Certain sub-trees of existing trees may still be dense. <p> Under some conditions, parallel version of the single-receiver algorithm in [PST91] will also converge in small umber of iterations. It is also worth mentioning work on global-information online algorithms for multicast such as <ref> [AAG94, AAFL96, AS97, GHP98] </ref>. In these papers logarithmic approximation ratio is achieved by algorithms that have global information but make decisions online. The concept of min-max feasible tree is related to the concept of maximal dense trees used in these papers. 3 Definition of the problem Input.
Reference: [BBR97] <author> Yair Bartal, John Byers, and Danny Raz. </author> <title> Global optimization using local information with applications to flow control. </title> <booktitle> In Proceedings of IEEE FOCS, </booktitle> <year> 1997. </year>
Reference-contexts: The flexibility (i.e. multiple-rate) feature introduces a fair amount of complexity to the problem. Specifically, monotonicity constraint is the only constraint that cannot be captured by the polynomial-size "positive linear programming" framework of Luby & Nissan [LN93] and Bartal, Byers & Raz <ref> [BBR97] </ref> that enables to solve the problem by simple parallel and distributed algorithms. <p> The first step to generalizing the unicast results to the case of multicast is formulating the problem as an exponential size linear programming problem, This formulation enables us to use as a basis the machinery of Bartal, Byers & Raz <ref> [BBR97] </ref>) (which in itself is based 1 on work by Luby & Nissan [LN93]). The next step is to efficiently generate an oracle that would find an unsatisfied constraint out of the exponential number of dual constraint of the linear program. <p> We show that min-max dense trees constructed this way exhibit certain nesting property, namely that subsequent trees are necessarily subsets of previously constructed trees. This enables us to prove that in poly-logarithmic number of iterations, no dense trees are left. Then, as in <ref> [BBR97] </ref>, user benefit is scaled up, which makes certain trees dense again. This process continues for poly-logarithmic number of iterations. This algorithm can executed concurrently and asynchronously by all multicast groups; the interleaved operations do not interfere with logarithmic convergence bound. <p> Our results are 1 * approximations for the problem that take poly-logarithmic number of rounds in the following models: * parallel model of Luby and Nissan [LN93]. * distributed asynchronous model used by Awerbuch & Azar [AA94] and Bartal, Byers & Raz <ref> [BBR97] </ref>). 2 Comparison with existing work The general concept of pursuing distributed algorithms to maximize global objective is known to be provably hard and in some cases impossible [Lin87, PY93]. Yet, some of the most interesting global optimization problems can be very closely approximated based only on local information. <p> Yet, some of the most interesting global optimization problems can be very closely approximated based only on local information. Specifically, the model of making local decisions for globally maximizing network throughput has been first introduced by Awerbuch and Azar [AA94] and subsequently adopted by Bartal, Byers and Raz <ref> [BBR97] </ref>. The algorithms of Awerbuch and Azar [AA94] and Bartal, 2 Byers and Raz [BBR97] achieve, respectively, logarithmic and 1 * approximation ratios with poly-logarithmic number of rounds for point-point communication (e.g., multicast with a single receiver). <p> Specifically, the model of making local decisions for globally maximizing network throughput has been first introduced by Awerbuch and Azar [AA94] and subsequently adopted by Bartal, Byers and Raz <ref> [BBR97] </ref>. The algorithms of Awerbuch and Azar [AA94] and Bartal, 2 Byers and Raz [BBR97] achieve, respectively, logarithmic and 1 * approximation ratios with poly-logarithmic number of rounds for point-point communication (e.g., multicast with a single receiver). Our work however extends these results to the domain of multicast, e.g., enables arbitrary number of receivers. <p> Hence to conform with the LP framework we we update the y variables although this is not needed in the implementation. The algorithm MULTICAST runs in phases. At the end of each phase, the values of the x e are dual feasible variables, as in <ref> [BBR97] </ref>. Throughout the algorithm the value of the x e for some edge e is exponential in the normalized total flow through that edge. In each phase, we begin, as in [BBR97], by scaling down our dual feasible solution from the previous phase and thereby introducing some slack. <p> At the end of each phase, the values of the x e are dual feasible variables, as in <ref> [BBR97] </ref>. Throughout the algorithm the value of the x e for some edge e is exponential in the normalized total flow through that edge. In each phase, we begin, as in [BBR97], by scaling down our dual feasible solution from the previous phase and thereby introducing some slack. At this point the dual variables may no longer be feasible. Then perform iterations in which we slowly "pump" the flow in order to get a solution with more benefit. <p> As in <ref> [BBR97] </ref> the above theorem yields the following tradeoff. between running time and quality of the approximation. Corollary 6.1 For any * 1 there exists a (1 + *) approximation algorithm for positive linear programming that runs in O ln 2 (flm) ln (flmn=*) * 3 rounds.
Reference: [Dee88] <author> Steve Deering. </author> <title> Host extensions for IP multicasting. Network Working Group Request for Comments RFC 1054, </title> <institution> Stanford University, </institution> <month> May </month> <year> 1988. </year>
Reference-contexts: Adjustment of the rate is performed by each connection autonomously and locally, by measuring congestion and loss on the path used by each connection, without knowledge of the rate or congestion value of other paths. Such mechanisms are used in TCP/IP <ref> [Dee88] </ref> and ATM network environments [XVI88]. In case of flexible multicast connections, same data, e.g., traffic for different cable channels, is distributed from a given source to multiple receivers, connected to the source via fixed spanning trees. <p> The disadvantage of the non-flexible multicast is that the multicast rate is determined by the slowest receiver or some bottleneck link, which is unacceptable in many situations. In fact, IP multicast protocols <ref> [Dee88] </ref> use flexible multicast. The flexibility (i.e. multiple-rate) feature introduces a fair amount of complexity to the problem.
Reference: [GHP98] <author> Ashish Goel, Monika Henzinger, and Serge Plotkin. </author> <title> Online throughput-competitive algorithm for multicast routing and admission control. </title> <booktitle> In Proceedings of ACM SODA, </booktitle> <year> 1998. </year> <note> to appear. </note>
Reference-contexts: Maximal dense tree is a tree such that any sub-tree added to this tree is not dense. Our algorithm computes a min-max dense tree which is minimal among such trees. Maximal dense trees have been used before in the context of on-line multicast admission control <ref> [AAG94, AAFL96, AS97, GHP98] </ref>. The essence of the algorithm is that the multicast flows are additively increased over all such min-max dense subtrees, thus causing more link contention and forcing existing current min-max dense trees to "stop" being dense. Certain sub-trees of existing trees may still be dense. <p> Under some conditions, parallel version of the single-receiver algorithm in [PST91] will also converge in small umber of iterations. It is also worth mentioning work on global-information online algorithms for multicast such as <ref> [AAG94, AAFL96, AS97, GHP98] </ref>. In these papers logarithmic approximation ratio is achieved by algorithms that have global information but make decisions online. The concept of min-max feasible tree is related to the concept of maximal dense trees used in these papers. 3 Definition of the problem Input.
Reference: [KR90] <author> R. Karp and V. Ramachandran. </author> <title> A survey of parallel algorithms for shared memory machines. </title> <editor> In J. van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, volume A, </booktitle> <pages> pages 869-941. </pages> <publisher> Elsevier, </publisher> <year> 1990. </year>
Reference-contexts: This is done by using standard techniques (see for example [LN93]) except of finding the max-dense-tree. Finding the max-dense-tree can be done similar to the standard expressions evaluation problem. This can be done in logarithmic time using for example the tree contraction method <ref> [MR85, KR90] </ref>. 6 The analysis In this section, we prove the following main results about our algorithm: Theorem 6.1 For 0 &lt; * 1 and 0 &lt; r ln (flm) the algorithm produces a feasible (r + (1 + *) 2 )-approximation to the flexible multicast problem, and runs in O
Reference: [Lin87] <author> Nathan Linial. </author> <title> Distributive graph algorithms globeal solutions from local data. </title> <booktitle> In 27 th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 331-335. </pages> <publisher> IEEE, </publisher> <month> October </month> <year> 1987. </year>
Reference-contexts: parallel model of Luby and Nissan [LN93]. * distributed asynchronous model used by Awerbuch & Azar [AA94] and Bartal, Byers & Raz [BBR97]). 2 Comparison with existing work The general concept of pursuing distributed algorithms to maximize global objective is known to be provably hard and in some cases impossible <ref> [Lin87, PY93] </ref>. Yet, some of the most interesting global optimization problems can be very closely approximated based only on local information.
Reference: [LN93] <author> Michael Luby and Noam Nissan. </author> <title> A parallel approximation algorithm for positive linear programming. </title> <booktitle> In Proc. 25th ACM Symp. on Theory of Computing, </booktitle> <pages> pages 448-457, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: In fact, IP multicast protocols [Dee88] use flexible multicast. The flexibility (i.e. multiple-rate) feature introduces a fair amount of complexity to the problem. Specifically, monotonicity constraint is the only constraint that cannot be captured by the polynomial-size "positive linear programming" framework of Luby & Nissan <ref> [LN93] </ref> and Bartal, Byers & Raz [BBR97] that enables to solve the problem by simple parallel and distributed algorithms. <p> to generalizing the unicast results to the case of multicast is formulating the problem as an exponential size linear programming problem, This formulation enables us to use as a basis the machinery of Bartal, Byers & Raz [BBR97]) (which in itself is based 1 on work by Luby & Nissan <ref> [LN93] </ref>). The next step is to efficiently generate an oracle that would find an unsatisfied constraint out of the exponential number of dual constraint of the linear program. <p> This algorithm can executed concurrently and asynchronously by all multicast groups; the interleaved operations do not interfere with logarithmic convergence bound. Our results are 1 * approximations for the problem that take poly-logarithmic number of rounds in the following models: * parallel model of Luby and Nissan <ref> [LN93] </ref>. * distributed asynchronous model used by Awerbuch & Azar [AA94] and Bartal, Byers & Raz [BBR97]). 2 Comparison with existing work The general concept of pursuing distributed algorithms to maximize global objective is known to be provably hard and in some cases impossible [Lin87, PY93]. <p> Our work however extends these results to the domain of multicast, e.g., enables arbitrary number of receivers. Similarly, in parallel computing domain, we achieve efficient parallel algorithms in comparison with the existing work in <ref> [LN93] </ref> that only applies to single-receiver case. Under some conditions, parallel version of the single-receiver algorithm in [PST91] will also converge in small umber of iterations. It is also worth mentioning work on global-information online algorithms for multicast such as [AAG94, AAFL96, AS97, GHP98]. <p> O (jEj + j jT j j) processors. This will encounter an with overheard which is only poly-logarithmic with respect to the number of rounds which is later shown to be poly-logarithmic. This is done by using standard techniques (see for example <ref> [LN93] </ref>) except of finding the max-dense-tree. Finding the max-dense-tree can be done similar to the standard expressions evaluation problem.
Reference: [MR85] <author> Gary L. Miller and John H. Reif. </author> <title> Parallel tree contraction and its application. </title> <booktitle> In 26 th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 478-489. </pages> <publisher> IEEE, </publisher> <month> October </month> <year> 1985. </year>
Reference-contexts: This is done by using standard techniques (see for example [LN93]) except of finding the max-dense-tree. Finding the max-dense-tree can be done similar to the standard expressions evaluation problem. This can be done in logarithmic time using for example the tree contraction method <ref> [MR85, KR90] </ref>. 6 The analysis In this section, we prove the following main results about our algorithm: Theorem 6.1 For 0 &lt; * 1 and 0 &lt; r ln (flm) the algorithm produces a feasible (r + (1 + *) 2 )-approximation to the flexible multicast problem, and runs in O
Reference: [PST91] <author> S. Plotkin, D. Shmoys, and E. Tardos. </author> <title> Fast approximation algorithms for fractional packing and covering problems. </title> <booktitle> In Proc. 32nd IEEE Symp. on Found. of Comp. Science, </booktitle> <year> 1991. </year>
Reference-contexts: In the sequential setting such methods are well known and there are several algorithms that given such a oracle which can run in polynomial time compute exact and approximate solutions to the linear program, e.g. the method of Plotkin, Shmoys and Tardos <ref> [PST91] </ref>. We exploit a specific combinatorial structure in the problem to find such an oracle. Specifically we compute a max-dense subtree. <p> Similarly, in parallel computing domain, we achieve efficient parallel algorithms in comparison with the existing work in [LN93] that only applies to single-receiver case. Under some conditions, parallel version of the single-receiver algorithm in <ref> [PST91] </ref> will also converge in small umber of iterations. It is also worth mentioning work on global-information online algorithms for multicast such as [AAG94, AAFL96, AS97, GHP98]. In these papers logarithmic approximation ratio is achieved by algorithms that have global information but make decisions online.
Reference: [PY93] <author> Christos Papadimitriou and Mihalis Yannakakis. </author> <title> Linear programming without the matrix. </title> <booktitle> In Proc. 25th ACM Symp. on Theory of Computing, </booktitle> <month> May </month> <year> 1993. </year>
Reference-contexts: parallel model of Luby and Nissan [LN93]. * distributed asynchronous model used by Awerbuch & Azar [AA94] and Bartal, Byers & Raz [BBR97]). 2 Comparison with existing work The general concept of pursuing distributed algorithms to maximize global objective is known to be provably hard and in some cases impossible <ref> [Lin87, PY93] </ref>. Yet, some of the most interesting global optimization problems can be very closely approximated based only on local information.

References-found: 14

