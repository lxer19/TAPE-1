URL: http://www.scs.leeds.ac.uk/paulf/home/work/research/ants/bostonAug97.ps
Refering-URL: http://iridia.ulb.ac.be/dorigo/ACO/ACO.html
Root-URL: 
Title: Ant System for Bus Driver Scheduling 1  2 Scheduling and Constraint Management Group  
Author: by Paul Forsyth Anthony Wren 
Date: July 1997  July 1997  
Note: An  Transport, Boston,  
Abstract: University of Leeds SCHOOL OF COMPUTER STUDIES RESEARCH REPORT SERIES Report 97.25 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Marco Dorigo, Vittorio Maniezzo, and Alberto Colorni. </author> <title> The ant system: optimisation by a colony of cooperating agents. </title> <booktitle> volume 26, </booktitle> <pages> pages 29-41, </pages> <year> 1996. </year>
Reference-contexts: 1 Introduction In this paper a meta-heuristic known as the Ant System (AS), as created by Marco Dorigo et al <ref> [1] </ref>, is applied to the problem of scheduling drivers of buses. The heuristic captures the natural food foraging behaviour of ants, to implement an algorithm that mimics their actions in order to solve problems. <p> Over time this choice will be more pronounced, hence frame D where the shorter trail is dominant. In the following section we present the basic AS which Dorigo et al <ref> [1] </ref> created in order to model this ant behaviour. 2 The Ant System The AS is a probabilistic system whose solutions are refined into good solutions given time. <p> Stutzle and Hoos [7] placed upper and lower bounds upon the value of t ij (t). Their MIN-MAX ant system worked well upon the TSP, improving upon some of the previous best known solutions to the problems it tackled. Gambardella and Dorigo [8][5] have been developing their original AS <ref> [1] </ref> into a more powerful system. This extends the original system by introducing more equations and refining those remaining.
Reference: [2] <author> M.E. Parker A.S.K. Kwan, R.S.K. Kwan and A.Wren. </author> <title> Producing train driver shifts by computer. </title> <booktitle> In 7th International Conference on Computer-Aided Scheduling of Public Transport, </booktitle> <year> 1997. </year>
Reference-contexts: However, as we shall see it is actually solved as a set-covering problem i.e. a piece of work can be covered more than once. 2 1.2 Existing Work 1.2.1 TRACS II TRACS II <ref> [2] </ref> is a system developed at the University of Leeds that can produce very good solutions to practical problems faced by the bus and rail industries. An important component of this system is called BUILD, which generates a large set of possible shifts for use in following stages.
Reference: [3] <author> Raymond S.K.Kwan Ann S.K.Kwan and Anthony Wren. </author> <title> Driver scheduling using genetic algorithms with embedded combinatorial traits. </title> <booktitle> In 7th International Conference on Computer-Aided Scheduling of Public Transport, </booktitle> <year> 1997. </year>
Reference: [4] <author> B.M. Smith and A.Wren. </author> <title> A bus crew scheduling system using a set covering formulation. </title> <journal> Transportation Research, </journal> <volume> (22A):pp.97-108, </volume> <year> 1988. </year>
Reference-contexts: For small and large problems TRACS II is capable of producing very good quality solutions in a reasonable time. It is a replacement for the earlier IMPACS system <ref> [4] </ref>. In this paper, our system uses the TRACS II BUILD process to generate a large number of potential shifts, which our system then reduces into a good solution.
Reference: [5] <author> Marco Dorigo and Luca Maria Gambardella. Ant-Q: </author> <title> A cooperative learning approach to combinatorial optimization. </title> <type> Technical Report 95-01, </type> <institution> IRIDIA, Universite Libre de Bruxelles, Bruxelles, Belgium, </institution> <year> 1995. </year>
Reference: [6] <author> Marco Dorigo and Luca Maria Gambardella. </author> <title> Ant colonies for the travelling salesman problem. </title> <note> (to appear in BioSystems 1997), </note> <year> 1996. </year>
Reference: [7] <author> Thomas Stutzle and Holger Hoos. </author> <title> Improvements on the ant-system: Introducing the max-min ant system. </title> <note> to appear - ICANNGA 1997, </note> <year> 1997. </year>
Reference-contexts: From this we again see that short tours are favoured. 2.3.2 Other Ant-based algorithms As mentioned at the beginning of this section there are varying configurations of the AS being applied to problems. Stutzle and Hoos <ref> [7] </ref> placed upper and lower bounds upon the value of t ij (t). Their MIN-MAX ant system worked well upon the TSP, improving upon some of the previous best known solutions to the problems it tackled.
Reference: [8] <author> L. M. Gambardella and M. Dorigo. Ant-Q: </author> <title> A reinforcement learning approach to the traveling salesman problem. </title> <booktitle> In Proccedings of ML-95, Twelfth International Conference on Machine Learning, </booktitle> <pages> pages 252-260. </pages> <publisher> Morgan Kaufmann Publishers, Inc., </publisher> <year> 1995. </year>
Reference: [9] <editor> Marco Dorigo. </editor> <title> Behaviour of real ants. </title> <type> Technical Report http://iridia.ulb.ac.be/dorigo/ACO/RealAnts.html, IRIDIA, </type> <institution> Univer-site Libre de Bruxelles, Bruxelles, Belgium, </institution> <year> 1996. </year>
Reference-contexts: If presented with many trails an ant is most likely to choose the trail with the strongest scent. When ants encounter an obstacle <ref> [9] </ref> they are forced to discover a means to avoid it, while continually communicating through their pheromones. We note here that the important element of the trail to an ant is its length.
Reference: [10] <author> Walter Philip Willers. </author> <title> Improved Algorithms For Bus Crew Scheduling. </title> <type> PhD thesis, </type> <institution> University of Leeds, </institution> <month> June </month> <year> 1995. </year> <month> 18 </month>
Reference-contexts: Instead, we adopted TRACS II's method of forming an initial solution first, in order to seed the algorithm with closeness values. 3.3.2 An initial solution for an Ant System TRACS II generates an initial solution by quickly covering all pieces of work using a heuristic. The heuristic, by Willers <ref> [10] </ref>, covers each piece of work by selecting a shift, from the set produced by BUILD (section 1.2.1), to cover the most uncovered pieces of work. The resulting solution means that pieces of work are likely to be overcovered.
References-found: 10

