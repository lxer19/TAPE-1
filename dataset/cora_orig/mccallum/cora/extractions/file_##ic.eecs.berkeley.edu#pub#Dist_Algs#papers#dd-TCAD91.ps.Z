URL: file://ic.eecs.berkeley.edu/pub/Dist_Algs/papers/dd-TCAD91.ps.Z
Refering-URL: http://www-cad.eecs.berkeley.edu/Respep/Research/dist-sim/publications.html
Root-URL: 
Title: A Massively Parallel Algorithm for Three Dimensional Device Simulation  
Author: Donald Webber, Eric Tomacruz, Roberto Guerrieri, Toru Toyabe, Alberto Sangiovanni-Vincentelli 
Abstract: Two dimensional device simulation is well established, but some devices require the use of three dimensional simulation, at a much higher computational cost. This paper explores the issue of whether massively parallel computers are suitable for this problem. A novel algorithm for the solution of large sparse asymmetric linear systems is presented which uses constant CPU time per matrix iteration. Results are demonstrated on a wide variety of devices and mesh sizes. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Selberherr, A. Schutz, H. Potzl, </author> <title> "MINIMOS- A Two-Dimensional MOS Transistor Analyzer", </title> <journal> IEEE Trans. Electron Devices, </journal> <volume> Vol. ED-27, </volume> <pages> pp. 1540-1550, </pages> <year> 1980 </year>
Reference-contexts: 1 Introduction Numerical simulation of semiconductor devices is an important tool for today's device and process designers. In fact, it allows the reduction of the time and cost required to develop new devices replacing expensive experiments with cheaper simulations. State-of-the-art two- dimensional simulators <ref> [1, 2, 3] </ref> are now mature enough to be currently in use in most semiconductor companies. However, recent advances in processing technology are creating the need of including in the simulation physical phenomena which cannot be modeled in a two-dimensional domain.
Reference: [2] <author> M.R. Pinto, C.S. Rafferty, R.W. Dutton, "PISCES-II: </author> <title> Poisson and Continuity Equation Solver", </title> <institution> Stanford Electronics Lab. </institution> <type> Rep., </type> <month> Sept. </month> <year> 1984 </year>
Reference-contexts: 1 Introduction Numerical simulation of semiconductor devices is an important tool for today's device and process designers. In fact, it allows the reduction of the time and cost required to develop new devices replacing expensive experiments with cheaper simulations. State-of-the-art two- dimensional simulators <ref> [1, 2, 3] </ref> are now mature enough to be currently in use in most semiconductor companies. However, recent advances in processing technology are creating the need of including in the simulation physical phenomena which cannot be modeled in a two-dimensional domain.
Reference: [3] <author> G. Baccarani, R. Guerrieri, P. Ciampolini, M. Rudan, "HFIELDS: </author> <title> A Highly Flexible 2D Semiconductor-Device Analysis Program ", Proc. </title> <booktitle> of the NASECODE IV Conference, </booktitle> <address> Dublin: </address> <publisher> Boole Press, </publisher> <pages> pp. 3-12, </pages> <year> 1985 </year>
Reference-contexts: 1 Introduction Numerical simulation of semiconductor devices is an important tool for today's device and process designers. In fact, it allows the reduction of the time and cost required to develop new devices replacing expensive experiments with cheaper simulations. State-of-the-art two- dimensional simulators <ref> [1, 2, 3] </ref> are now mature enough to be currently in use in most semiconductor companies. However, recent advances in processing technology are creating the need of including in the simulation physical phenomena which cannot be modeled in a two-dimensional domain.
Reference: [4] <author> P. Ciampolini, A. Pierantoni, G. Baccarani, </author> <title> "Efficient 3D simulation of complex struc-tures", </title> <booktitle> Proc. NUPAD III, </booktitle> <month> June </month> <year> 1990, </year> <pages> Hawaii </pages>
Reference-contexts: As an example, the availability of submicron technology for MOS devices requires the accurate modeling of narrow channel effects which in turn imply the use of 3-D discretization. Accurate modeling of gate capacitance in EPROM devices has been achieved when the third dimension has been added to the model <ref> [4] </ref>. Finally, parasitic bipolar devices causing the latch-up in CMOS devices can be accurately modeled taking into account the three-dimensional geometry of the layout [5].
Reference: [5] <author> G. Heiser, C. Pommerell, J. Weis, M. Annaratone, W. Fichtner, R. Bank, W.M. Coughran, R. Smith, </author> <title> "A comparison of algorithms for large-scale device simulation", </title> <booktitle> Proc. NUPAD III, </booktitle> <month> June </month> <year> 1990, </year> <pages> Hawaii </pages>
Reference-contexts: Accurate modeling of gate capacitance in EPROM devices has been achieved when the third dimension has been added to the model [4]. Finally, parasitic bipolar devices causing the latch-up in CMOS devices can be accurately modeled taking into account the three-dimensional geometry of the layout <ref> [5] </ref>. However including these new effects yields an enormous increase in CPU time if the present 2-D algorithms are extended to cover the three-dimensional case on a conventional processor. <p> Their advantages include ease of parallel and vector implementations, and the ability to avoid fill-ins [22]. Among these techniques, we have chosen the Conjugate Gradient Squared method (CGS) [23], which is commonly used for device simulation <ref> [5] </ref>. In order to obtain good convergence behavior, the matrix must be preconditioned. Our massively parallel algorithm uses incom <p>- 8 plete LU factorization for preconditioning. <p> We have the actual results for the DEC 5400, but we also estimated the performance of our massively parallel implementation against super computers using the 6,601 mesh points results in <ref> [5] </ref> where the performance of an existing machine in the super computer class was reported to be 50 times faster than machines in the class of the DEC 5400 when solving linear systems with pre-conditioned CGS.
Reference: [6] <author> P. Ciampolini, A. Gnudi, R. Guerrieri, M. Rudan, G. Baccarani, </author> <title> "Three-Dimensional Simulation of a Narrow-Width MOSFET", </title> <booktitle> Proc. of ESSDERC, Bologna, </booktitle> <pages> pp. 413-416, </pages> <year> 1987 </year>
Reference-contexts: For example, the discretization of the domain of a bipolar device may require the solution of one hundred thousand equations or more. Experiments with HFIELDS-3D <ref> [6] </ref> aimed at the 3-D simulation of MOS transistor described with a small grid of 2,565 nodes needed about 1.5 hours on a MicroVax GPX II for each bias point. Vector machines, such as the Cray, are the most used computers for large scale device 2 simulations.
Reference: [7] <author> R.E. Bank, W.M. Coughran, W. Fichtner, E.H. Grosse, D.J. Rose, R.K. Smith, </author> <title> "Transient Simulation of Silicon Devices and Circuits", </title> <journal> IEEE Trans. on Electron Devices, </journal> <volume> Vol. ED-32, </volume> <pages> pp. 1992-2007, </pages> <year> 1985 </year>
Reference-contexts: The parallelism achievable by this architecture, though, is limited by several factors, like, for instance, the I/O bottleneck between CPUs and memory. In <ref> [7] </ref> vector machines were used to speed-up the solution of linear equations for three- dimensional device simulation achieving a factor of four speed-up over the scalar version of the code for problems having about 4,000 unknowns using a Cray-1.
Reference: [8] <author> T. Toyabe, H. Masuda, Y. Aoki, H. Shukuri, T. Hagiwara, </author> <title> "Three-Dimensional De-vice Simulator CADDETH with Highly Convergent Matrix Solution Algorithms", </title> <journal> IEEE Trans. on Electron Devices, </journal> <volume> Vol. ED-32, </volume> <pages> pp. 2038-2044, </pages> <year> 1985 </year>
Reference-contexts: In [7] vector machines were used to speed-up the solution of linear equations for three- dimensional device simulation achieving a factor of four speed-up over the scalar version of the code for problems having about 4,000 unknowns using a Cray-1. In <ref> [8] </ref> a three-dimensional device simulator has been presented based on finite-difference techniques for discretizing the domain and a modification of the conjugate gradient method to solve the nonsymmetric linear system arising from the previous discretization.
Reference: [9] <author> J.H. Chern, J.T. Maeda, L.A. Arledge, P. Yang, "SIERRA: </author> <title> a 3-D Device Simulator for Reliability Modeling", </title> <journal> IEEE Trans. on CAD, </journal> <volume> Vol. 8, pp.516-527, </volume> <year> 1989 </year>
Reference-contexts: The vectorization of the algorithm obtains a speed-up of sixteen for typical problems arising from three-dimensional simulation. In <ref> [9] </ref> a three-dimensional simulator was presented and the algorithms for the solution of the linear system stemming from the Newton iteration were compared on a set of fairly small problems having up to four thousand grid nodes.
Reference: [10] <author> K.C. Wu, R.F. Lucas, Z.Y. Wang, R.W. Dutton, </author> <title> "New Approaches in a 3-D One-Carrier Device Solver", </title> <journal> IEEE Trans. on CAD, </journal> <volume> Vol. 8, pp.528-537, </volume> <year> 1989 </year>
Reference-contexts: In [9] a three-dimensional simulator was presented and the algorithms for the solution of the linear system stemming from the Newton iteration were compared on a set of fairly small problems having up to four thousand grid nodes. In <ref> [10] </ref> algorithms for multiprocessor machines were analyzed and characterized for a 16 processor computer. Improvements in algorithms developed for low parallelism computers are not expected to provide the computation speed needed for an effective design of new structures and processes.
Reference: [11] <author> D. Hillis, </author> <title> The Connection Machine , Cambridge MA: </title> <publisher> MIT Press, </publisher> <year> 1985 </year>
Reference-contexts: However, recent advances in commercially available massively parallel computers may offer a solution to this problem. 3 These computers are characterized by a very large number of simple processing units (64K for commercially available model, the Connection Machine 1 <ref> [11] </ref>). When suitable algorithms are provided, these computers can provide high performance without the need for a sophisticated and expensive hardware technology. <p> To do this, we have implemented them on the Connection Machine. The Connection Machine <ref> [11] </ref> is a massively parallel computer with up to 65536 processors, with a conventional computer as a front end. Each processor has a one bit CPU and 256k bits of local memory. A floating point accelerator is shared by each cluster of 32 processors.
Reference: [12] <author> R. Guerrieri, A. Sangiovanni-Vincentelli, </author> <title> "Three-Dimensional Capacitance Evaluation on a Connection Machine", </title> <journal> IEEE Trans. on CAD, </journal> <volume> Vol. CAD-7, </volume> <pages> pp. 1125-1133, </pages> <year> 1988 </year>
Reference-contexts: When suitable algorithms are provided, these computers can provide high performance without the need for a sophisticated and expensive hardware technology. Massively parallel computers have been used to study complex technology CAD problems <ref> [12, 13, 14] </ref>, but the investigation of algorithms suitable for the solution of device equations has not yet been addressed, even though it plays a key role in this application. <p> This ordering is very efficient for massively parallel computers since it needs constant time per matrix iteration, and is the method of choice for solving Poisson's equation <ref> [12] </ref> where the speed of convergence of the conjugate gradient method is not strongly affected when compared to the natural ordering.
Reference: [13] <author> R. Guerrieri, A. Neureuther, </author> <title> "Simulation of Microcrack Effects in Dissolution of Positive Resists Exposed by X-Ray Lithography", </title> <journal> IEEE Trans. on CAD, </journal> <volume> Vol. CAD-7, </volume> <pages> pp. 755764, </pages> <year> 1988 </year>
Reference-contexts: When suitable algorithms are provided, these computers can provide high performance without the need for a sophisticated and expensive hardware technology. Massively parallel computers have been used to study complex technology CAD problems <ref> [12, 13, 14] </ref>, but the investigation of algorithms suitable for the solution of device equations has not yet been addressed, even though it plays a key role in this application.
Reference: [14] <author> J. Gamelin, R. Guerrieri, A.R. Neureuther, </author> <title> "Exploration of scattering from topography with massively parallel computers", </title> <journal> J. Vac. Sci. Tech. B, </journal> <pages> pp. 1984-1990, </pages> <address> Vol.7, </address> <year> 1989 </year>
Reference-contexts: When suitable algorithms are provided, these computers can provide high performance without the need for a sophisticated and expensive hardware technology. Massively parallel computers have been used to study complex technology CAD problems <ref> [12, 13, 14] </ref>, but the investigation of algorithms suitable for the solution of device equations has not yet been addressed, even though it plays a key role in this application.
Reference: [15] <author> M.J. Flynn, </author> <title> "Very High Speed Computing Systems", </title> <journal> Proc. IEEE, </journal> <volume> Vol. 54, </volume> <pages> pp. 1901-1909, </pages> <year> 1966 </year>
Reference-contexts: Each processor has a one bit CPU and 256k bits of local memory. A floating point accelerator is shared by each cluster of 32 processors. The machine is a Single Instruction Multiple Data (SIMD) <ref> [15] </ref> architecture. Communication between processors is either a regular pattern on a N dimensional grid, or an arbitrary pattern on a hypercube. The Connection Machine has a mechanism for emulating more processors than actually exist in the machine, referred to as virtual processors.
Reference: [16] <author> S. Selberherr, </author> <title> Analysis and simulation of semiconductor devices, </title> <publisher> Wien: Springer-Verlag, </publisher> <year> 1984 </year>
Reference-contexts: For large VP ratios, the slow down becomes very close to a factor of N . 5 3 Device Simulation The steady-state drift-diffusion model of semiconductor devices, based on the Poisson equation and the continuity equations for electrons and holes <ref> [16] </ref>, has been used in this work: r (* ~ r ) = q (p n + N d N a ) (1) r ( p p ~ r + D p ~ rp) = R (3) where n ; p ; D n ; D p are respectively the mobilities
Reference: [17] <author> D.L. Scharfetter, H.K. Gummel, </author> <title> "Large-signal analysis of a silicon read diode oscillator", </title> <journal> IEEE Trans. Electron Devices, </journal> <volume> Vol. ED-16, </volume> <pages> pp. </pages> <month> 64-77, </month> <title> 1969 [18] "Introduction to data-level parallelism", </title> <institution> Thinking Machines Corp., Cambridge, Mass., </institution> <type> Tech. Rep. </type> <institution> 86.14, </institution> <month> Apr. </month> <year> 1986 </year>
Reference-contexts: The recombination rate R includes the Auger and Shockley-Read-Hall terms. In the dielectric material, only equation (1) applies with a suitable definition of the charge trapped in the insulator. Equations (1-3) have been discretized on a three-dimensional finite-difference grid and the well-known Scharfetter - Gummel method <ref> [17] </ref> has been applied to equations (2-3), obtaining a large set of algebraic equations. These nonlinear equations have been iteratively solved using the Newton method, which requires the solution of a large, asymmetric linear system at each iteration.
Reference: [19] <author> A. George, </author> <title> "Numerical experiments using dissection methods to solve n by n grid prob-lems", </title> <journal> SIAM J. Numerical Anal., </journal> <volume> Vol. 14, </volume> <pages> pp. 161-179, </pages> <year> 1977 </year>
Reference-contexts: A straight-forward implementation of a direct solution method on a massively parallel computer would require O (N 2 ) time where N is the number of grid nodes. A clever ordering scheme such as nested dissection <ref> [19] </ref> can be used to reduce this time for sparse positive definite matrices. However, fill-ins greatly increase the difficulty of solving the matrix both in terms of the memory used per processor, in the number of processors required, and in the communication patterns between processors.
Reference: [20] <author> R.S. Varga, </author> <title> Matrix Iterative Analysis, </title> <address> Englewood Cliffs, New Jersey: </address> <publisher> Prentice-Hall Inc., </publisher> <year> 1962 </year>
Reference-contexts: However, fill-ins greatly increase the difficulty of solving the matrix both in terms of the memory used per processor, in the number of processors required, and in the communication patterns between processors. For this reason, iterative methods <ref> [20, 21] </ref> are preferred for solving large sparse linear problems. Their advantages include ease of parallel and vector implementations, and the ability to avoid fill-ins [22]. Among these techniques, we have chosen the Conjugate Gradient Squared method (CGS) [23], which is commonly used for device simulation [5].
Reference: [21] <author> D. Young, </author> <title> Iterative solution of large linear systems, </title> <address> New York: </address> <publisher> Academic Press, </publisher> <year> 1971 </year>
Reference-contexts: However, fill-ins greatly increase the difficulty of solving the matrix both in terms of the memory used per processor, in the number of processors required, and in the communication patterns between processors. For this reason, iterative methods <ref> [20, 21] </ref> are preferred for solving large sparse linear problems. Their advantages include ease of parallel and vector implementations, and the ability to avoid fill-ins [22]. Among these techniques, we have chosen the Conjugate Gradient Squared method (CGS) [23], which is commonly used for device simulation [5].
Reference: [22] <author> J. Ortega, R. Voigt, </author> <title> "Solution of partial differential equations on vector and parallel computers", </title> <journal> SIAM Rev., </journal> <volume> vol. 27, </volume> <pages> pp. 149-240, </pages> <year> 1985 </year>
Reference-contexts: For this reason, iterative methods [20, 21] are preferred for solving large sparse linear problems. Their advantages include ease of parallel and vector implementations, and the ability to avoid fill-ins <ref> [22] </ref>. Among these techniques, we have chosen the Conjugate Gradient Squared method (CGS) [23], which is commonly used for device simulation [5]. In order to obtain good convergence behavior, the matrix must be preconditioned. Our massively parallel algorithm uses incom <p>- 8 plete LU factorization for preconditioning. <p> A preconditioner using the natural ordering has good convergence behavior, but it does not exploit well the architecture of a massively parallel processor. In fact, the time per iteration, O (N 1=3 ), grows fast with the number of grid points. 4.2 Red-Black Ordering A Red-Black ordering <ref> [22] </ref> provides for a much more efficient parallel implementation of the matrix operations, but as we shall see later, the convergence of the CGS method is significantly slower.

References-found: 21

