URL: http://vlsicad.cs.ucla.edu/papers/journal/j20.ps
Refering-URL: http://vlsicad.cs.ucla.edu/pubs.html
Root-URL: http://www.cs.ucla.edu
Title: Recent Directions in Netlist Partitioning: A Survey  
Author: Charles J. Alpert and Andrew B. Kahng 
Address: Los Angeles, CA 90024-1596  
Affiliation: UCLA Computer Science Department,  
Abstract: This survey describes research directions in netlist partitioning during the past two decades, in terms of both problem formulations and solution approaches. We discuss the traditional min-cut and ratio cut bipartitioning formulations along with multi-way extensions and newer problem formulations, e.g., constraint-driven partitioning (for FPGAs) and partitioning with module replication. Our discussion of solution approaches is divided into four major categories: move-based approaches, geometric representations, combinatorial formulations, and clustering approaches. Move-based algorithms iteratively explore the space of feasible solutions according to a neighborhood operator; such methods include greed, iterative exchange, simulated annealing, and evolutionary algorithms. Algorithms based on geometric representations embed the circuit netlist in some type of "geometry", e.g, a 1-dimensional linear ordering or a multi-dimensional vector space; the embeddings are commonly constructed using spectral methods. Combinatorial methods transform the partitioning problem into another type of optimization, e.g., based on network flows or mathematical programming. Finally, clustering algorithms merge the netlist modules into many small clusters; we discuss methods which combine clustering with existing algorithms (e.g., two-phase partitioning). The paper concludes with a discussion of benchmarking in the VLSI CAD partitioning literature and some perspectives on more promising directions for future work. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. H. Ackley. </author> <title> A Connectionist Machine for Genetic Hillclimbing. </title> <publisher> Kluwer, </publisher> <year> 1987. </year>
Reference-contexts: The selection scheme is linear-rank based: solutions are ranked by their cost, and the probability of a solution being chosen for a mutation or crossover operation is linearly decreasing in its rank. Ackley <ref> [1] </ref> proposed a GA for Min-Cut Bisection that combines crossover and mutation into a single operation. <p> This GA may create unbalanced solutions that are not legal bisections, and therefore also incorporates a penalty term equal to 2 5 (jj~xjj 2 n 2 ) 2 in the cost function. The structure of the cost function reflects the preference of <ref> [1] </ref> for a continuous cost function over the solution space. Bui and Moon have utilized GAs for graph bisection [32] and for ratio cut bipartitioning of hyper-graphs [31]. <p> See also such works as <ref> [1] </ref>. Other, more complex random constructions have also been proposed, e.g., [124] [161].
Reference: [2] <author> R. K. Ahuja, T. L. Magnanti, and J. B. Orlin. </author> <title> Network Flows: Theory, Algorithms, and Applications. </title> <publisher> Prentice Hall, </publisher> <year> 1993. </year>
Reference-contexts: Min-Cut Bipartitioning can be solved by converting the hypergraph to a flow network, computing a certain set of n 1 flows and applying the max-flow min-cut theorem [66] to obtain a minimum cut. Many algorithms are known which can solve the max-flow problem in polynomial time; see [75] <ref> [2] </ref> for surveys. Note however that finding a minimum cut does not necessarily require a maximum flow; fast techniques to find minimum cuts [92] [114] [141] are noted in Section 5 below.
Reference: [3] <author> C. J. Alpert and A. B. Kahng. </author> <title> Geometric embeddings for faster and better multi-way netlist partitioning. </title> <booktitle> In Proc. ACM/IEEE Design Automation Conf., </booktitle> <pages> pages 743-748, </pages> <year> 1993. </year>
Reference-contexts: However, since a cut net can contribute up to jej 2 (jej1) to the partitioning objective, large nets are less likely to be cut than smaller nets. A weight of 4 jej (jej1) was proposed by D. J.-H. Huang and adopted by <ref> [3] </ref> so that the expected weight of a cut signal net would be one. Hadley et al. [79] propose a weighting scheme that is a function of both jej and k which guarantees that for the cost of splitting e into k clusters will be bounded above by one. <p> He suggested placing the the coordinates of d eigenvectors orthogonally to yield a d-dimensional geometric embedding of the netlist, as in Figure 9. Hall then proposed to "cluster" the embedding, but did not specify a heuristic. Alpert and Kahng <ref> [3] </ref> explored Hall's idea by applying geometric clustering algorithms to these spectral embeddings, using Euclidean distance as the dissimilarity measure between pairs of modules. In [5], they constructed a 1-dimensional ordering over the same d-dimensional embedding using a spacefilling curve heuristic to the traveling salesman problem [20]. <p> The two-phase approach has been applied with many clustering algorithms, e.g., <ref> [3] </ref> [4] [29] [30] [51] [82] [94] [143] [176]; see Section 6.6 for a discussion of methods which integrate clustering into move-based approaches. 6.2 Agglomerative Clustering An agglomerative clustering algorithm begins with the n-way clustering P n = ffv 1 g; fv 2 g; : : : ; fv n gg <p> C. Johnson [111] for weighted complete graphs. The criterion for choosing clusters C h and C l is what distinguishes among agglomerative variants, e.g., [111] merges the two clusters that minimize the diameter of the new cluster C. This minimum-diameter 72 criterion was used for circuit bipartitioning in <ref> [3] </ref>: modules were first mapped to points (i.e., singleton clusters) in multi-dimensional space (see Section 4), the diameter criterion was used to merge clusters, the resulting clustering was used within two-phase FM. For undirected graphs, Karger [114] proposed a heuristic which begins with all vertices as isolated clusters. <p> specific formulations. 82 Objective Papers Ratio Cut (unit area) [187] [80] [188] [48] [51] [156] Ratio Cut (module area) [51] [31] 45/55 Bipartitioning [156] [190] [94] [6] Bisection (unit area) [94] Bisection (module area) [188] [82] [51] [176] [195] FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] <ref> [3] </ref> [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced [11] Min-Delay Clustering [140] [45] [151] [191] Absorption [179] [4] DS [82] [4] Density [101] Replication [122] [104] MCM/Quadrisection [178] [159] [158] Table 1: Various partitioning formulations <p> Cut (unit area) [187] [80] [188] [48] [51] [156] Ratio Cut (module area) [51] [31] 45/55 Bipartitioning [156] [190] [94] [6] Bisection (unit area) [94] Bisection (module area) [188] [82] [51] [176] [195] FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] <ref> [3] </ref> [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced [11] Min-Delay Clustering [140] [45] [151] [191] Absorption [179] [4] DS [82] [4] Density [101] Replication [122] [104] MCM/Quadrisection [178] [159] [158] Table 1: Various partitioning formulations and some works that provide corresponding
Reference: [4] <author> C. J. Alpert and A. B. Kahng. </author> <title> A general framework for vertex orderings, with applications to netlist clustering. </title> <booktitle> In Proc. IEEE Intl. Conf. Computer-Aided Design, </booktitle> <pages> pages 63-67, </pages> <year> 1994. </year>
Reference-contexts: The DP-RP result highlights the problem of finding 1-dimensional netlist representations which will lead to good multi-way partitioning solutions. Alpert and Yao [6] have applied DP-RP to their (MELO) orderings (see also the discussions of <ref> [4] </ref> [100] [101] in Section 6). <p> The two-phase approach has been applied with many clustering algorithms, e.g., [3] <ref> [4] </ref> [29] [30] [51] [82] [94] [143] [176]; see Section 6.6 for a discussion of methods which integrate clustering into move-based approaches. 6.2 Agglomerative Clustering An agglomerative clustering algorithm begins with the n-way clustering P n = ffv 1 g; fv 2 g; : : : ; fv n gg and <p> In [179], the process itself also uses simulated annealing, with neighborhood structure based on moving a single module from one cluster to another. The authors claim that 100n moves are sufficient to optimize Absorption. Ordering Contiguity: Alpert and Kahng <ref> [4] </ref> proposed constructing a linear ordering of the modules, then constructing a clustering by splitting the ordering. The intuition is that if the ordering can appropriately traverse the circuit, then the clustering will be of high quality. <p> Their WINDOW ordering scheme begins with an empty cluster C and iteratively adds the module with highest attraction to the cluster, where the attraction function is defined to reflect a given objective. The authors of <ref> [4] </ref> have given attraction functions for a variety of objectives, including Scaled Cost and Absorption. In addition, they showed how attraction can capture breadth-first and depth-first orderings, along with "max-adjacency" and "min-perimeter" criteria (cf. the Nagamochi and Ibaraki [141] in Section 5.2). <p> Another reason is that while it may be easy to devise clustering heuristics that optimize ratio cut, Absorption, etc., we do not know if these are the appropriate objectives for the specific application. For example, experiments conducted in <ref> [4] </ref> found that WINDOW clusterings could improve such traditional objectives, but led to only average-quality two-phase FM results. Indeed, it seems that almost any clustering heuristic will improve FM performance via the two-phase strategy, 79 but no heuristic particularly distinguishes itself from the pack. <p> 82 Objective Papers Ratio Cut (unit area) [187] [80] [188] [48] [51] [156] Ratio Cut (module area) [51] [31] 45/55 Bipartitioning [156] [190] [94] [6] Bisection (unit area) [94] Bisection (module area) [188] [82] [51] [176] [195] FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] [3] [5] <ref> [4] </ref> [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced [11] Min-Delay Clustering [140] [45] [151] [191] Absorption [179] [4] DS [82] [4] Density [101] Replication [122] [104] MCM/Quadrisection [178] [159] [158] Table 1: Various partitioning formulations and some <p> area) [188] [82] [51] [176] [195] FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] [3] [5] <ref> [4] </ref> [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced [11] Min-Delay Clustering [140] [45] [151] [191] Absorption [179] [4] DS [82] [4] Density [101] Replication [122] [104] MCM/Quadrisection [178] [159] [158] Table 1: Various partitioning formulations and some works that provide corresponding experimental results. <p> [51] [176] [195] FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] [3] [5] <ref> [4] </ref> [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced [11] Min-Delay Clustering [140] [45] [151] [191] Absorption [179] [4] DS [82] [4] Density [101] Replication [122] [104] MCM/Quadrisection [178] [159] [158] Table 1: Various partitioning formulations and some works that provide corresponding experimental results.
Reference: [5] <author> C. J. Alpert and A. B. Kahng. </author> <title> Multi-way partitioning via spacefilling curves and dynamic programming. </title> <booktitle> In Proc. ACM/IEEE Design Automation Conf., </booktitle> <pages> pages 652-657, </pages> <year> 1994. </year>
Reference-contexts: Hall then proposed to "cluster" the embedding, but did not specify a heuristic. Alpert and Kahng [3] explored Hall's idea by applying geometric clustering algorithms to these spectral embeddings, using Euclidean distance as the dissimilarity measure between pairs of modules. In <ref> [5] </ref>, they constructed a 1-dimensional ordering over the same d-dimensional embedding using a spacefilling curve heuristic to the traveling salesman problem [20]. The ordering was then split into a partitioning using dynamic programming (see Section 4.5). <p> The variant approach of [48] also considers each split of the net ordering, and for each completes the module bipartitioning by using a matching-based approach (see Section 5.2). 4.5.2 Dynamic Programming for Restricted Partitioning To split a linear ordering into more than two clusters, Alpert and Kahng <ref> [5] </ref> proposed the DP-RP ("dynamic programming for restricted partitioning") algorithm, which optimally solves the restricted formulation where each cluster of P k must be contiguous in the linear ordering. <p> The PARABOLI scheme of Riess et al. [156] (see Section 4.5) uses the GORDIAN placement in exactly this manner, but no analogous work has used orderings based on SOR or squared coefficients. In addition, none of these orderings have been used with the dynamic programming algorithm of <ref> [5] </ref> to yield multi-way partitionings. <p> formulations. 82 Objective Papers Ratio Cut (unit area) [187] [80] [188] [48] [51] [156] Ratio Cut (module area) [51] [31] 45/55 Bipartitioning [156] [190] [94] [6] Bisection (unit area) [94] Bisection (module area) [188] [82] [51] [176] [195] FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] [3] <ref> [5] </ref> [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced [11] Min-Delay Clustering [140] [45] [151] [191] Absorption [179] [4] DS [82] [4] Density [101] Replication [122] [104] MCM/Quadrisection [178] [159] [158] Table 1: Various partitioning formulations and
Reference: [6] <author> C. J. Alpert and S. Z. Yao. </author> <title> Spectral partitioning: the more eigenvectors, the better. </title> <booktitle> In Proc. ACM/IEEE Design Automation Conf. (to appear), </booktitle> <year> 1995. </year>
Reference-contexts: Using the other approach, the n modules are mapped to n vectors in d-space and the vectors are clustered together to form both a vector partitioning and a module partitioning [12] <ref> [6] </ref> [37]. A major advantage of the vector space approach is that spectral methods can be used to construct a vector space that optimally captures the netlist information vis-a-vis partitioning, i.e., the optimal indicator vector direction or the optimal vector partitioning solution will map to the optimal graph partitioning solution. <p> Note that for d = 2, any probe vector will return the solution obtained by sorting and splitting the entries of ~ 2 . 44 4.4 Vector Partitioning The probe approach can also be viewed another way <ref> [6] </ref>: for each module v i , observe that the d-dimensional vector corresponding to the i th row of V d is actually the indicator vector for the single-module cluster fv i g after projecting onto the subspace spanned by the first d eigenvectors, and scaling the j th coordinate by <p> The min-cut bipartitioning reductions of [68] and [12] can be extended to many multi-way formulations, including minimum Scaled Cost, minimum total net cut, or maximum cluster I/O (jE (C h )j in FPGA partitioning), via a vector partitioning formulation <ref> [6] </ref>. Let S be the set of n vectors 45 f ~y 1 ; ~y 2 ; : : : ; ~y n g which form the n rows of V d . The authors of [6] showed that min-cut k-way par-titioning reduces to the following vector partitioning problem: Find k <p> cluster I/O (jE (C h )j in FPGA partitioning), via a vector partitioning formulation <ref> [6] </ref>. Let S be the set of n vectors 45 f ~y 1 ; ~y 2 ; : : : ; ~y n g which form the n rows of V d . The authors of [6] showed that min-cut k-way par-titioning reduces to the following vector partitioning problem: Find k mutually disjoint subsets of vectors fS 1 ; S 2 ; : : : ; S k g, with S 1 [ S 2 [ : : : [ S k = S, so as to <p> The DP-RP result highlights the problem of finding 1-dimensional netlist representations which will lead to good multi-way partitioning solutions. Alpert and Yao <ref> [6] </ref> have applied DP-RP to their (MELO) orderings (see also the discussions of [4] [100] [101] in Section 6). <p> The objective is of interest since ratio cut solutions tend to be highly unbalanced and hence impractical, yet exact bisections are too restrictive. This work has very quickly become a standard object of comparisons (cf. <ref> [6] </ref> [94] [190]). Many of the formulations listed in the Table are quite similar, e.g., the first five formulations are all bipartitioning variants. While it is unclear which formulation is "correct", all of the associated bipartitioning algorithms are certainly comparable in some sense. <p> area information, which balance constraints apply, etc. are issues that can be addressed by identifying benchmarks (or benchmark variants) that are particularly suited for specific formulations. 82 Objective Papers Ratio Cut (unit area) [187] [80] [188] [48] [51] [156] Ratio Cut (module area) [51] [31] 45/55 Bipartitioning [156] [190] [94] <ref> [6] </ref> Bisection (unit area) [94] Bisection (module area) [188] [82] [51] [176] [195] FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced [11] Min-Delay Clustering <p> Objective Papers Ratio Cut (unit area) [187] [80] [188] [48] [51] [156] Ratio Cut (module area) [51] [31] 45/55 Bipartitioning [156] [190] [94] <ref> [6] </ref> Bisection (unit area) [94] Bisection (module area) [188] [82] [51] [176] [195] FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced [11] Min-Delay Clustering [140] [45] [151] [191] Absorption [179] [4] DS [82] [4] Density [101] Replication [122] [104] MCM/Quadrisection [178] [159] [158] Table 1: Various partitioning formulations and some works <p> Works such as [68] <ref> [6] </ref> achieve solutions by associating a partitioning instance with the vector space comprised by multiple eigenvectors, yet heuristics for this representation are largely undeveloped. In addition, older spectral ideas may be worth revisiting, e.g., Donath and Hoffman [59] suggested varying the degree matrix to obtain better eigenvectors.
Reference: [7] <author> A. A. Andreatta and C. C Ribeiro. </author> <title> A graph partitioning heuristic for the parallel pseudo-exhaustive logical test of vlsi combinational circuits. </title> <journal> Annals of Operations Research, </journal> <volume> 50 </volume> <pages> 1-36, </pages> <year> 1994. </year>
Reference-contexts: Areibi and Vannelli [9] first applied tabu search to hypergraph bipartitioning using the same aspiration function as [134], but with single module moves as the neighborhood operator. Andreatta and Ribeiro <ref> [7] </ref> applied tabu search to a DAG partitioning formulation designed for testing of combinational circuits. Areibi and Vannelli have also applied tabu search as a post-processing mechanism to initial partitioning solutions constructed using an eigenvector [10] and a genetic algorithm [8] [11].
Reference: [8] <author> S. Areibi and A. Vannelli. </author> <title> Advanced search techniques for circuit partitioning. </title> <booktitle> In DIMACS Series in Discrete Mathematics and Theoretical Computer Science, </booktitle> <pages> pages 77-98, </pages> <year> 1993. </year>
Reference-contexts: Andreatta and Ribeiro [7] applied tabu search to a DAG partitioning formulation designed for testing of combinational circuits. Areibi and Vannelli have also applied tabu search as a post-processing mechanism to initial partitioning solutions constructed using an eigenvector [10] and a genetic algorithm <ref> [8] </ref> [11]. In [8], the genetic algorithm is used to generate many good starting solutions, so that the tabu search can in some sense concentrate its efforts on the most promising regions of the solution space. 3.4 Genetic Algorithms Genetic algorithms are motivated by Darwin's theory of natural selection in evolution, <p> Andreatta and Ribeiro [7] applied tabu search to a DAG partitioning formulation designed for testing of combinational circuits. Areibi and Vannelli have also applied tabu search as a post-processing mechanism to initial partitioning solutions constructed using an eigenvector [10] and a genetic algorithm <ref> [8] </ref> [11]. In [8], the genetic algorithm is used to generate many good starting solutions, so that the tabu search can in some sense concentrate its efforts on the most promising regions of the solution space. 3.4 Genetic Algorithms Genetic algorithms are motivated by Darwin's theory of natural selection in evolution, where "superior" members <p> Thus, many researchers have successfully combined GAs with local optimization heuristics to form GA-local search hybrids, or hybrid GAs. For example, [108] applies KL to every member of the population; [31] [32] does the same with FM; and <ref> [8] </ref> do the same with tabu search. Recent works have shed some light on the mechanism by which GAs, and GA hybrids in particular, can find good solutions. <p> 45/55 Bipartitioning [156] [190] [94] [6] Bisection (unit area) [94] Bisection (module area) [188] [82] [51] [176] [195] FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] <ref> [8] </ref> Multi-way balanced [11] Min-Delay Clustering [140] [45] [151] [191] Absorption [179] [4] DS [82] [4] Density [101] Replication [122] [104] MCM/Quadrisection [178] [159] [158] Table 1: Various partitioning formulations and some works that provide corresponding experimental results.
Reference: [9] <author> S. Areibi and A. Vannelli. </author> <title> Circuit partitioning using a tabu search approach. </title> <booktitle> In Proc. IEEE Intl. Symp. Circuits and Systems, </booktitle> <pages> pages 1643-1646, </pages> <year> 1993. </year>
Reference-contexts: Thus, if a move from a solution with cost F results in a solution with cost F 0 , then the aspiration function overrides the tabu list if F F 0 &gt; A (F ). Areibi and Vannelli <ref> [9] </ref> first applied tabu search to hypergraph bipartitioning using the same aspiration function as [134], but with single module moves as the neighborhood operator. Andreatta and Ribeiro [7] applied tabu search to a DAG partitioning formulation designed for testing of combinational circuits.
Reference: [10] <author> S. Areibi and A. Vannelli. </author> <title> A combined eigenvector tabu search approach for circuit partitioning. </title> <booktitle> In Custom Integrated Circuits Conf., </booktitle> <pages> pages 9.7.1-9.7.4, </pages> <year> 1993. </year>
Reference-contexts: Andreatta and Ribeiro [7] applied tabu search to a DAG partitioning formulation designed for testing of combinational circuits. Areibi and Vannelli have also applied tabu search as a post-processing mechanism to initial partitioning solutions constructed using an eigenvector <ref> [10] </ref> and a genetic algorithm [8] [11].
Reference: [11] <author> S. Areibi and A. Vannelli. </author> <title> An efficient solution to circuit partitioning using tabu search and genetic algorithms. </title> <booktitle> In 6th Int Conference of Micro Electronics, </booktitle> <pages> pages 70-74, </pages> <address> Istanbul, </address> <year> 1994. </year>
Reference-contexts: Andreatta and Ribeiro [7] applied tabu search to a DAG partitioning formulation designed for testing of combinational circuits. Areibi and Vannelli have also applied tabu search as a post-processing mechanism to initial partitioning solutions constructed using an eigenvector [10] and a genetic algorithm [8] <ref> [11] </ref>. <p> [190] [94] [6] Bisection (unit area) [94] Bisection (module area) [188] [82] [51] [176] [195] FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced <ref> [11] </ref> Min-Delay Clustering [140] [45] [151] [191] Absorption [179] [4] DS [82] [4] Density [101] Replication [122] [104] MCM/Quadrisection [178] [159] [158] Table 1: Various partitioning formulations and some works that provide corresponding experimental results.
Reference: [12] <author> K. S. Arun and V. B. Rao. </author> <title> Two-way graph partitioning by principal components. </title> <booktitle> In Proc. IEEE Intl. Symp. Circuits and Systems, </booktitle> <pages> pages 2877-2880, </pages> <year> 1990. </year>
Reference-contexts: Using the other approach, the n modules are mapped to n vectors in d-space and the vectors are clustered together to form both a vector partitioning and a module partitioning <ref> [12] </ref> [6] [37]. <p> We therefore seek a subset of vectors ~y i (corresponding to x i = 1) whose sum has the largest possible magnitude. Graph bipartitioning exactly reduces to this vector subset problem for d = n and H = n . Arun and Rao <ref> [12] </ref> also noted this vector partitioning formulation, but called it a "geometric clustering" problem. <p> Viewing the rows of C as points in d-space centered at the origin, the bipartitioning problem reduces to finding a subset of points whose center is furthest from the origin. To find an appropriate matrix C, the authors of <ref> [12] </ref> invoke a theorem from principal components analysis [152], that the best rank-d approximation to A with respect to both the spectral and Frobenius norms is U d d U T d . (Following [12], we use the eigenvectors of A so the columns of U d are ~ 1 ; <p> To find an appropriate matrix C, the authors of <ref> [12] </ref> invoke a theorem from principal components analysis [152], that the best rank-d approximation to A with respect to both the spectral and Frobenius norms is U d d U T d . (Following [12], we use the eigenvectors of A so the columns of U d are ~ 1 ; : : :; ~ d with eigenvalues 1 : : : n .) This result implies that C = U d 1 2 is the closest approximation to A = CC T , and <p> 1 ; : : :; ~ d with eigenvalues 1 : : : n .) This result implies that C = U d 1 2 is the closest approximation to A = CC T , and thus C is "equivalent" to V d , meaning the reductions of [68] and <ref> [12] </ref> are also equivalent. Hence, Arun and Rao choose C = U d 1 2 . <p> Frankle [67] has shown how to exhaustively search a d-dimensional vector space with probes, finding the optimal solution in O (n d1 ) time. The min-cut bipartitioning reductions of [68] and <ref> [12] </ref> can be extended to many multi-way formulations, including minimum Scaled Cost, minimum total net cut, or maximum cluster I/O (jE (C h )j in FPGA partitioning), via a vector partitioning formulation [6].
Reference: [13] <author> K. S. Arun and V. B. Rao. </author> <title> New heuristics and lower bounds for graph partitioning. </title> <booktitle> In Proc. IEEE Intl. Symp. Circuits and Systems, </booktitle> <pages> pages 1172-1175, </pages> <year> 1991. </year>
Reference-contexts: Hence, Arun and Rao choose C = U d 1 2 . Like Barnes [18], they solve the 1-dimensional geometric clustering problem by sorting the entries of ~ 1 , and the 2-dimensional problem by testing all possible hyperplanes which divide the set of points into two clusters. In <ref> [13] </ref>, they extend their 2-dimensional hyperplane algorithm to d dimensions, finding the optimal vector partitioning in O (n d (d+3)=2 ) time. Frankle [67] has shown how to exhaustively search a d-dimensional vector space with probes, finding the optimal solution in O (n d1 ) time.
Reference: [14] <author> B. Awerbuch and T. Leighton. </author> <title> Multicommodity flows: A survey of recent research. </title> <booktitle> In 4th Intl. Symp. Algorithms and Computation, </booktitle> <pages> pages 297-302, </pages> <year> 1993. </year>
Reference-contexts: An approximation algorithm for multi-way partitioning [131] applies Leighton and Rao's algorithm recursively. A review of recent advances in multicommodity flows is given in <ref> [14] </ref>. 5.2.2 The Min-Cut Replication Problem Assume that we are given a directed graph G (V; E) and a k-way partitioning P k = fC 1 ; C 2 ; : : : ; C k g without replication, and let F be the multi-way min-cut objective.
Reference: [15] <author> H. B. Bakoglu. </author> <title> Circuits, Interconnections, and Packaging for VLSI. </title> <publisher> Addison-Wesley Pub. Co., </publisher> <year> 1990. </year>
Reference-contexts: The current emphasis on a quick-turnaround ASIC design cycle reinforces the need for reliable and effective algorithms. Partitioning heuristics also have a greater impact on system performance as designs become interconnect-dominated. In current submicron designs, wire delays tend to dominate gate delays <ref> [15] </ref>; the differences between on-chip and off-chip signal delays and the increasingly pin-limited nature of large chips make it desirable to minimize the number of signals traveling off a given chip. Larger die sizes imply that long on-chip global routes between function blocks will more noticeably affect system performance.
Reference: [16] <author> C. F. Ball, P. V. Kraus, and D. A. Mlynski. </author> <title> Fuzzy partitioning applied to vlsi-floorplanning and placement. </title> <booktitle> In Proc. IEEE Intl. Symp. Circuits and Systems, </booktitle> <pages> pages 177-180, </pages> <year> 1994. </year>
Reference-contexts: Then, rounding to its closest discrete assignment is used to to derive a non-fuzzy partitioning solution. Ball et al. <ref> [16] </ref> have shown how to use FKM in conjunction with GORDIAN to derive 2-dimensional placements, and Razaz [153] earlier did the same by first modifying FKM to handle graph partitioning without specified coordinates.
Reference: [17] <author> S. T. Barnard and H. D. Simon. </author> <title> A fast multilevel implementation of recursive spectral bisection for partitioning unstructured problems. </title> <type> Technical Report RNR-92-033, </type> <institution> NASA Ames, </institution> <month> November </month> <year> 1992. </year>
Reference-contexts: This observation was also made by Hagen et al. [86], who showed that a LIFO FM gain bucked organization encouraged the movement of entire clusters of modules (see Section 3.1.3). Finally, we note an intriguing approach of Barnard and Simon <ref> [17] </ref> that applies clustering to spectral bisection. The second eigenvector of the contracted graph is computed and the eigenvector is interpolated to approximate the eigenvector for the original graph, and finally this vector is refined and split into a bipartitioning.
Reference: [18] <author> E. R. Barnes. </author> <title> An algorithm for partitioning the nodes of a graph. </title> <journal> SIAM Journal of Algebraic and Discrete Methods, </journal> <volume> 3(4) </volume> <pages> 541-550, </pages> <year> 1982. </year> <month> 86 </month>
Reference-contexts: A similar constrained formulation used by, e.g., <ref> [18] </ref> requires that w (C h ) = m h for user-prescribed cluster sizes m 1 m 2 : : : m k . <p> To this end, we discuss as many of the works in this section as possible in terms of Q, even if the original paper used A. For example, the discussion of Barnes's work <ref> [18] </ref> below is given in terms of Q, which allows us to establish the equivalence of lower bounds due to Barnes and to Donath and Hoffman. <p> A linear ordering of modules is obtained by sorting the entries of ~ 2 , and a heuristic bipartitioning can be derived from splitting the ordering. Next, we describe an extension of Hall's multi-way partitioning approach due to Barnes <ref> [18] </ref>, as well as some other extensions (e.g., [79] [37]). These approaches use k eigenvectors to derive a k-way partitioning; Barnes' approach explicitly tries to map each cluster to a single eigenvector. Third, we discuss an alternative approach that uses multiple eigenvectors to generate a bipartitioning. <p> this sorting algorithm as 37 moving the smallest coordinates to C 1 (corresponding to x i = 0) and the largest coordinates to C 1 (corresponding to x i = 1). 9 This approach of finding the partitioning which best approximates the second smallest eigenvector was first used by Barnes <ref> [18] </ref> and is commonly known as spectral bisection (when m 1 = m 2 = n 2 ). <p> Observe that the Donath-Hoffman lower bound also implies that an optimal partitioning solution would be obtained if each ~ R i could be set to ~ i . However, setting R = U k generally does not yield a valid ratioed partition matrix. Barnes <ref> [18] </ref> justifies his approach to finding a valid R that best 10 Combining the two equations yields 2F (P k ) jjQjj 2 k X m 2 k X ( i + m i ) 2 + i=k+1 i = jjQjj 2 + 2 k X i m i + i=1 <p> The theoretical results described in the next two subsections indicate that the "proper" spectral embedding should be scaled by the eigenvalues, and that the module similarity measure should be a "vector sum". 4.3 Probes in Multi-Dimensional Vector Space We have noted that a potential difficulty with the approaches of <ref> [18] </ref> [37], namely, that each cluster is associated with a single eigenvector, but the cluster's indicator vector may be far from its eigenvector. <p> Hence, Arun and Rao choose C = U d 1 2 . Like Barnes <ref> [18] </ref>, they solve the 1-dimensional geometric clustering problem by sorting the entries of ~ 1 , and the 2-dimensional problem by testing all possible hyperplanes which divide the set of points into two clusters. <p> Barnes et al. prove that the each partitioning solution corresponding to X will have cost no higher than the previous one, and that their algorithm will eventually converge. Recall from Section 4.2 that Barnes <ref> [18] </ref> also proposed another transportation problem that approximates the multi-way partitioning objective. <p> Third, spectral approaches that utilize multiple eigenvectors appear promising. Previous spectral 16 Such studies can call into question the conclusions drawn in oft-cited works, in this case those of [123] [164] [189] regarding "lookahead" in iterative improvement strategies. 84 approaches that associate a single eigenvector with a cluster <ref> [18] </ref> or use only one eigenvector [80] may have inherent limitations. Works such as [68] [6] achieve solutions by associating a partitioning instance with the vector space comprised by multiple eigenvectors, yet heuristics for this representation are largely undeveloped.
Reference: [19] <author> E. R. Barnes, A. Vannelli, and J. Q. Walker. </author> <title> A new heuristic for partitioning the nodes of a graph. </title> <journal> SIAM J. Disc. Math., </journal> <volume> 1(3) </volume> <pages> 299-305, </pages> <year> 1988. </year>
Reference-contexts: x i2 x j1 ) H; 8 IO-critical paths p Liu et al. then decompose the problem into primal and dual subproblems; the primal problem is solved using the heuristic of [34], and the dual problem is solved using a subgradient method. 65 5.3.3 A Transportation Problem Barnes et al. <ref> [19] </ref> use the QBP discussed at the beginning of this subsection, except that they maximize the number of uncut edges, rather than equivalently minimizing the number of cut edges. This objective can be expressed using equation (5.2) with B the identity matrix. <p> This process of solving the quadratic program and adjusting the g r e terms is repeated until P e g r e j &lt; *, for some choice of *. Notice the similarity between this approach and that of <ref> [19] </ref> in which the ~r h vectors are adjusted after each iteration until convergence.
Reference: [20] <author> J. J. Bartholdi and L. K. Platzman. </author> <title> Heuristics based on spacefilling curves for combinatorial problems in euclidean space. </title> <journal> Management Sciences, </journal> <volume> 34(3) </volume> <pages> 291-305, </pages> <year> 1988. </year>
Reference-contexts: Alpert and Kahng [3] explored Hall's idea by applying geometric clustering algorithms to these spectral embeddings, using Euclidean distance as the dissimilarity measure between pairs of modules. In [5], they constructed a 1-dimensional ordering over the same d-dimensional embedding using a spacefilling curve heuristic to the traveling salesman problem <ref> [20] </ref>. The ordering was then split into a partitioning using dynamic programming (see Section 4.5).
Reference: [21] <author> E. B. Baum. </author> <title> Iterated descent: A better algorithm for local search in combinatorial optimization problems. </title> <editor> In D. Touretzky, editor, </editor> <booktitle> Proc. Neural Information Processing Systems, </booktitle> <month> November </month> <year> 1988. </year>
Reference-contexts: In [180], a move consists of swapping a pair of modules, and the aspiration function is one less than the cost 7 It is instructive to compare the motivations for tabu search with those of other methods in the optimization literature, e.g., Baum's iterated descent <ref> [21] </ref> or the "iterated Lin-Kernighan" strategy used by Johnson [109] to address the traveling salesman problem.
Reference: [22] <author> M. Beardslee and A. Sangiovanni-Vincentelli. </author> <title> An algorithm for improving partitions of pin-limited multi-chip systems. </title> <booktitle> In Proc. IEEE Intl. Conf. Computer-Aided Design, </booktitle> <pages> pages 378-385, </pages> <year> 1993. </year>
Reference-contexts: Sanchis' algorithm is then applied, with moves restricted so as to not create a cycle in the dependency graph. The approach also uses MFFC clustering (see Section 6), within a two-phase methodology. An interesting approach of <ref> [22] </ref> applies FM and a resynthesis technique of [105] to partitioning Boolean networks with functional information. The signals directed from C i to C j are encoded in C i . <p> At the same time, care must also be taken not to constrain research paths by removing useful information. As examples, (i) logic function information must be retained in order to explore logic-based replication or combined resynthesis and partitioning (cf. <ref> [22] </ref>), and (ii) directional information must be present in inputs to address acyclic, delay-minimization, etc. formulations. By way of facilitating future comparisons, Table 1 lists various partitioning formulations, along with works that have provided experimental results for some of the standard benchmarks.
Reference: [23] <author> C. Berge. </author> <title> Graphs and Hypergraphs. </title> <publisher> American Elsevier, </publisher> <address> New York, </address> <year> 1976. </year>
Reference-contexts: k and as a "clustering" for large k. 5 The most common method for representing the circuit netlist connections is as a hypergraph H (V; E) with E = fe 1 ; e 2 ; : : : ; e m g being the set of signal nets (see, e.g., <ref> [23] </ref> for basic concepts of graphs and hypergraphs). Each net is a subset of V containing the modules that that net connects, and we assume that for each e 2 E, jej 2.
Reference: [24] <author> J. Blanks. </author> <title> Near-optimal placement using a quadratic objective function. </title> <booktitle> In Proc. ACM/IEEE Design Automation Conf., </booktitle> <pages> pages 609-615, </pages> <year> 1985. </year>
Reference-contexts: Blanks <ref> [24] </ref> also shared this intuition and illustrated (for placement, though it also holds for biparti-tioning) that the closest legal solution to the eigenvector solution ~ 2 , i.e., the indicator vector that maximally projects onto ~ 2 , will generally not be optimum. <p> The difficulty lies in the 3 rd through n th -order constraints. Like Blanks <ref> [24] </ref>, Tsay and Kuh observe that the closest legal solution to ~ 2 can be obtained by sorting the entries of ~ 2 , although this solution will generally be suboptimal.
Reference: [25] <author> K. Boese, A. Kahng, and S. Muddu. </author> <title> A new adaptive multi-start technique for combinatorial global optimizations. </title> <journal> Operations Research Letters, </journal> <volume> 16 </volume> <pages> 101-113, </pages> <year> 1994. </year>
Reference-contexts: Furthermore, one may ask whether certain problem classes possess relationships among local minima in the neighborhood structure which make tabu search more effective (e.g., see <ref> [25] </ref>). 26 of the best solution, i.e., a pair swap on the tabu list is accepted if the resulting solution has lower cost than every solution seen so far. <p> Recent works have shed some light on the mechanism by which GAs, and GA hybrids in particular, can find good solutions. Boese et al. <ref> [25] </ref> and Inayoshi and Manderick [108] observe that many of the best local optima are "close" to other local optima according to natural measures of distance in the neighborhood structure. <p> Indeed, GAs in retaining common features of parents and searching only the "regions of disagreement" implicitly assume that global optima will be located near good local minima. Based on the "big valley" (Figure 7), Boese et al. <ref> [25] </ref> suggested the following adaptive multi-start (AMS) approach (originally in the context of the traveling salesman problem). First, AMS generates a set of random starting solutions and runs a greedy iterative algorithm from each solution to find corresponding local minima.
Reference: [26] <author> B. Bollobas. </author> <title> Random Graphs. </title> <publisher> Academic Press, </publisher> <year> 1985. </year>
Reference-contexts: Thus, experiments have been conducted on various classes of random graphs, including: 80 * Uniform: A graph G (n; p) has n vertices, with the edge between each pair of vertices indepen-dently present with probability p. Random graphs (and hypergraphs) have been used by e.g., [110] [187] [164]. See <ref> [26] </ref> for a review of graph-theoretic results established for this model. * Geometric: The graph U (n; d) [110] is generated by picking n random (x; y) coordinate pairs (corresponding to the n vertices) in the unit square, and introducing an edge between two vertices if the Euclidean distance between their
Reference: [27] <author> R. B. Boppana. </author> <title> Eigenvalues and graph bisection: An average-case analysis. </title> <booktitle> In Proc. IEEE Symp. Foundations of Computer Science, </booktitle> <pages> pages 280-285, </pages> <year> 1987. </year>
Reference-contexts: They also permit the diagonal entries of A to be perturbed before computing the eigenvectors, leading to tighter lower bounds than those given by Donath and Hoffman [59]. Further, they extend the average case bisection bound of Boppana <ref> [27] </ref> to k &gt; 2 (see [133] for a more complete discussion of spectrally derived lower bounds).
Reference: [28] <author> R. Brayton, G. Hachtel, C. McMullen, and A. Sangiovanni-Vincentelli. </author> <title> Logic Minimization Algorithms for VLSI Synthesis. </title> <publisher> Kluwer, </publisher> <year> 1985. </year>
Reference-contexts: Although the set covering problem is NP-Complete, the Espresso II tool <ref> [28] </ref> provides a well-developed set-covering heuristic used in minimizing Boolean expressions. Chou et al. adapt the main ideas behind Espresso into their set covering algorithm. <p> Dey et al. construct a clustering by first finding all petals, then merging overlapping petals into corollas, with corollas being maximal with respect to the overlapping property. Each individual corolla may be resynthesized using algebraic/boolean factoring (e.g., Espresso <ref> [28] </ref>) and if the new factorization will likely reduce the layout area, the resynthesized corolla is "glued" 77 back in place of the original one. Works by the same authors show the implications of corolla-based clustering for logic synthesis, delay reduction, testability, etc.
Reference: [29] <author> T. Bui, S. Chaudhuri, T. Leighton, and M. Sipser. </author> <title> Graph bisection algorithms with good average case behavior. </title> <journal> Combinatorica, </journal> <volume> 7(2) </volume> <pages> 171-191, </pages> <year> 1987. </year>
Reference-contexts: While a max-flow computation is guaranteed to return a minimum cut, the resulting cluster sizes may be very unbalanced. Consequently, many works propose contracting large subsets of modules to enforce balance constraints, e.g., Bui et al. <ref> [29] </ref> propose bisecting d-regular graphs by contracting modules in the neighborhoods of s and t before computing an s t cut. <p> The two-phase approach has been applied with many clustering algorithms, e.g., [3] [4] <ref> [29] </ref> [30] [51] [82] [94] [143] [176]; see Section 6.6 for a discussion of methods which integrate clustering into move-based approaches. 6.2 Agglomerative Clustering An agglomerative clustering algorithm begins with the n-way clustering P n = ffv 1 g; fv 2 g; : : : ; fv n gg and iteratively <p> Figure 19 (b) shows a hierarchical algorithm that simultaneously merges as many cluster pairs as possible, yielding a hierarchy with dlog ne levels. In <ref> [29] </ref> [30], Bui et al. propose matching-based compaction as a clustering strategy. A matching in the netlist is a set of disjoint pairs of modules, such that each pair shares a common net. <p> A construction was first given by Bui et al. <ref> [29] </ref>, and a simpler variant construction was given in [83]. * Bisection Specific: A graph in the class of random graphs G 2set (2n; p 1 ; p 2 ; bis) [30] has a given edge internal to n-vertex clusters C 1 and C 2 with probabilities p 1 and p
Reference: [30] <author> T. Bui, C. Heigham, C. Jones, and T. Leighton. </author> <title> Improving the performance of the kernighan-lin and simulated annealing graph bisection algorithms. </title> <booktitle> In Proc. ACM/IEEE Design Automation Conf., </booktitle> <pages> pages 775-778, </pages> <year> 1989. </year>
Reference-contexts: The two-phase approach has been applied with many clustering algorithms, e.g., [3] [4] [29] <ref> [30] </ref> [51] [82] [94] [143] [176]; see Section 6.6 for a discussion of methods which integrate clustering into move-based approaches. 6.2 Agglomerative Clustering An agglomerative clustering algorithm begins with the n-way clustering P n = ffv 1 g; fv 2 g; : : : ; fv n gg and iteratively constructs <p> Figure 19 (b) shows a hierarchical algorithm that simultaneously merges as many cluster pairs as possible, yielding a hierarchy with dlog ne levels. In [29] <ref> [30] </ref>, Bui et al. propose matching-based compaction as a clustering strategy. A matching in the netlist is a set of disjoint pairs of modules, such that each pair shares a common net. <p> integrate a clustering or a series of clusterings into an FM-based algorithm (e.g., given a CPU resource in terms of the number of FM passes made, how should this resource be allocated)? * What cluster size constraints should be imposed? Is it better to have balanced clusters (as advocated by <ref> [30] </ref>), or to have large clusters mixed with small ones (as in edge unclustering)? We believe that once the answers to these questions are understood, the best clustering strategies will become evident. 7 Conclusions The past several years have seen the field of netlist partitioning make numerous advances in terms of <p> A construction was first given by Bui et al. [29], and a simpler variant construction was given in [83]. * Bisection Specific: A graph in the class of random graphs G 2set (2n; p 1 ; p 2 ; bis) <ref> [30] </ref> has a given edge internal to n-vertex clusters C 1 and C 2 with probabilities p 1 and p 2 , respectively.
Reference: [31] <author> T. N. Bui and B. R. Moon. </author> <title> A fast and stable hybrid genetic algorithm for the ratio-cut partitioning problem on hypergraphs. </title> <booktitle> In Proc. ACM/IEEE Design Automation Conf., </booktitle> <pages> pages 664-669, </pages> <year> 1994. </year>
Reference-contexts: The structure of the cost function reflects the preference of [1] for a continuous cost function over the solution space. Bui and Moon have utilized GAs for graph bisection [32] and for ratio cut bipartitioning of hyper-graphs <ref> [31] </ref>. Their linear selection scheme is a function of solution cost instead of rank (specifically, the best solution is four times as likely to be selected as the worst solution, and a solution of intermediate quality will be chosen with probability proportional to its cost difference from the worst solution). <p> Since this crossover operator makes it likelier for v i and v j to be in the same cluster if ji jj is small, ordering the problem encoding to capture the netlist structure can improve performance. The implementation of <ref> [31] </ref> adopts a weighted depth-first ordering; orderings based on the 1-dimensional representations discussed in Section 4 may be promising in this context. Saab and Rao [162] proposed a simulated evolution bisection heuristic which has no crossover operator, but rather a more complex mutation operator. <p> Local Search Hybrids and Multi-Start Because GAs are ill-equipped to search a prescribed region of the solution space for local optima, a given GA may take fairly long to find a good solution, if it finds one at all <ref> [31] </ref>. Thus, many researchers have successfully combined GAs with local optimization heuristics to form GA-local search hybrids, or hybrid GAs. For example, [108] applies KL to every member of the population; [31] [32] does the same with FM; and [8] do the same with tabu search. <p> optima, a given GA may take fairly long to find a good solution, if it finds one at all <ref> [31] </ref>. Thus, many researchers have successfully combined GAs with local optimization heuristics to form GA-local search hybrids, or hybrid GAs. For example, [108] applies KL to every member of the population; [31] [32] does the same with FM; and [8] do the same with tabu search. Recent works have shed some light on the mechanism by which GAs, and GA hybrids in particular, can find good solutions. <p> We believe that whether to use area information, which balance constraints apply, etc. are issues that can be addressed by identifying benchmarks (or benchmark variants) that are particularly suited for specific formulations. 82 Objective Papers Ratio Cut (unit area) [187] [80] [188] [48] [51] [156] Ratio Cut (module area) [51] <ref> [31] </ref> 45/55 Bipartitioning [156] [190] [94] [6] Bisection (unit area) [94] Bisection (module area) [188] [82] [51] [176] [195] FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79]
Reference: [32] <author> T. N. Bui and B. R. Moon. </author> <title> A genetic algorithm for a special class of the quadratic assignment problem. </title> <booktitle> In DIMACS Series in Discrete Mathematics and Theoretical Computer Science, </booktitle> <volume> volume 16, </volume> <pages> pages 99-116, </pages> <year> 1994. </year>
Reference-contexts: The structure of the cost function reflects the preference of [1] for a continuous cost function over the solution space. Bui and Moon have utilized GAs for graph bisection <ref> [32] </ref> and for ratio cut bipartitioning of hyper-graphs [31]. <p> Thus, many researchers have successfully combined GAs with local optimization heuristics to form GA-local search hybrids, or hybrid GAs. For example, [108] applies KL to every member of the population; [31] <ref> [32] </ref> does the same with FM; and [8] do the same with tabu search. Recent works have shed some light on the mechanism by which GAs, and GA hybrids in particular, can find good solutions.
Reference: [33] <author> T. Bultan and C. Aykanat. </author> <title> Circuit partitioning using parallel mean field annealing algorithms. </title> <booktitle> In IEEE Symp. Parallel and Distributed Processing, </booktitle> <pages> pages 534-541, </pages> <year> 1991. </year>
Reference-contexts: Finally, a graph bipartitioning solution is obtained by rounding each x i to its nearest discrete value. Bultan and Aykanat <ref> [33] </ref> have extended this basic approach to multi-way partitioning of hypergraphs.
Reference: [34] <author> R. E. Burkard and T. Bonniger. </author> <title> A heuristic for quadratic boolean programs with applications to quadratic assignment. </title> <journal> European Journal of Operational Research, </journal> <volume> 13 </volume> <pages> 372-386, </pages> <year> 1983. </year>
Reference-contexts: When the entries in B are permitted to take on any values, the formulation in equation (5.2) becomes the quadratic assignment problem (QAP). Shih and Kuh show how to adapt a QAP heuristic due to Burkard and Bonniger <ref> [34] </ref> to their formulation. The same heuristic was also applied by [62] to an opto-electronic formulation with size, connection, power, and interconnect constraints. <p> latency bound H, the QBP adds constraints X ffi (v i ) + (i;j)2p (x i1 x 2j + x i2 x j1 ) H; 8 IO-critical paths p Liu et al. then decompose the problem into primal and dual subproblems; the primal problem is solved using the heuristic of <ref> [34] </ref>, and the dual problem is solved using a subgradient method. 65 5.3.3 A Transportation Problem Barnes et al. [19] use the QBP discussed at the beginning of this subsection, except that they maximize the number of uncut edges, rather than equivalently minimizing the number of cut edges.
Reference: [35] <author> R. L. Cannon, J. V. Dave, and J. C. Bezdek. </author> <title> Efficient implementation of the fuzzy c-means clustering algorithms. </title> <journal> IEEE Trans. Pattern Analysis and Machine Intelligence, </journal> <volume> 8(2), </volume> <month> March </month> <year> 1986. </year>
Reference-contexts: that constructing partitionings from placements derived via mathematical programming is a promising research direction. 5.4 Fuzzy Partitioning The Fuzzy k-Means (FKM) algorithm is a well-known optimization technique for clustering problems that arise in such fields as geological shape analysis, medical diagnosis, image analysis, irrigation design, 68 and automatic target recognition <ref> [35] </ref> [196]. The problem formulation generally involves clustering data points in multi-dimensional space, although the paradigm can be applied more generally. A fuzzy partitioning can partially assign a module to several clusters, e.g., 1 2 to C 1 and 1 and to C 3 .
Reference: [36] <author> R. C. Carden and C.-K. Cheng. </author> <title> A global router using an efficient approximate multicommodity multi-terminal flow algorithm. </title> <booktitle> In Proc. ACM/IEEE Design Automation Conf., </booktitle> <pages> pages 316-321, </pages> <year> 1991. </year>
Reference-contexts: r-predecessors of v j is denoted by p j (r); the total weight of modules in this set is w (p j (r)). 11 A primal-dual approach with column generation has already been used to solve the linear programming relaxation of large integer programs in the context of global routing <ref> [36] </ref>; however, only small integer programs have been essayed in CAD, typically for high-level synthesis (see, e.g., [71]). 49 * For all primary inputs v i (no incoming edges), set (i) = 0. * Find any unlabeled v i , all of whose predecessors are labeled, and let r be the
Reference: [37] <author> P. K. Chan, M. D. F. Schlag, and J. Y. Zien. </author> <title> Spectral k-way ratio-cut partitioning and clustering. </title> <journal> IEEE Trans. Computer-Aided Design, </journal> <volume> 13(8) </volume> <pages> 1088-1096, </pages> <year> 1994. </year>
Reference-contexts: vary from jej 2 w to ( jej 2 ) 2 w depending on the distribution of pins; thus, Frankle and Karp set w = ( 2 jej ) 2 to minimize the worst-case deviation of cost from the square of the span (this model has also been used by <ref> [37] </ref>). <p> However, the clique model can destroy the natural sparsity of the netlist since 2 nonzeros will be inserted in A for every net e. For example, a 1000-pin clock net will induce 499,500 nonzero entries in A. Thus, some existing methods discard large nets to maintain sparsity <ref> [37] </ref> [79]. An undirected graph can also be induced from a netlist by constructing random spanning trees, paths, or cycles over the pins in every signal net. <p> Note that the two objectives are identical for undirected graphs (which have jej = 2 for all e 2 E). As with bipartitioning, it is possible to integrate cutsize and cluster size balance within a single objective. To this end, Chan et al. <ref> [37] </ref> and Yeh et al. [193] respectively proposed the Minimum Scaled Cost and Minimum Cluster Ratio objectives. 11 Minimum Scaled Cost: Minimize F (P k ) = n (k 1) h=1 w (C h ) Minimum Cluster Ratio: Minimize F (P k ) = P k1 P k : Both of <p> Using the other approach, the n modules are mapped to n vectors in d-space and the vectors are clustered together to form both a vector partitioning and a module partitioning [12] [6] <ref> [37] </ref>. A major advantage of the vector space approach is that spectral methods can be used to construct a vector space that optimally captures the netlist information vis-a-vis partitioning, i.e., the optimal indicator vector direction or the optimal vector partitioning solution will map to the optimal graph partitioning solution. <p> A linear ordering of modules is obtained by sorting the entries of ~ 2 , and a heuristic bipartitioning can be derived from splitting the ordering. Next, we describe an extension of Hall's multi-way partitioning approach due to Barnes [18], as well as some other extensions (e.g., [79] <ref> [37] </ref>). These approaches use k eigenvectors to derive a k-way partitioning; Barnes' approach explicitly tries to map each cluster to a single eigenvector. Third, we discuss an alternative approach that uses multiple eigenvectors to generate a bipartitioning. <p> Further, they extend the average case bisection bound of Boppana [27] to k &gt; 2 (see [133] for a more complete discussion of spectrally derived lower bounds). Chan et al. <ref> [37] </ref> extend the Donath and Hoffman bound F (P k ) P k i=1 i m i to Scaled Cost, proving for this objective that F (P k ) P k i=1 i . <p> The KP algorithm of <ref> [37] </ref> finds an orthogonal basis with k "prototype vectors" and constructs k clusters by assigning each module to its closest prototype according to the directional cosines measure. <p> Hall [89] also proposed a method for multi-way partitioning using the same eigenvector embedding as the authors of <ref> [37] </ref>. Since ~ 2 gives the optimal 1-dimensional placement with squared wirelength, Hall reasoned that the other low-cost eigenvector placements could also be utilized. He suggested placing the the coordinates of d eigenvectors orthogonally to yield a d-dimensional geometric embedding of the netlist, as in Figure 9. <p> The theoretical results described in the next two subsections indicate that the "proper" spectral embedding should be scaled by the eigenvalues, and that the module similarity measure should be a "vector sum". 4.3 Probes in Multi-Dimensional Vector Space We have noted that a potential difficulty with the approaches of [18] <ref> [37] </ref>, namely, that each cluster is associated with a single eigenvector, but the cluster's indicator vector may be far from its eigenvector. <p> for specific formulations. 82 Objective Papers Ratio Cut (unit area) [187] [80] [188] [48] [51] [156] Ratio Cut (module area) [51] [31] 45/55 Bipartitioning [156] [190] [94] [6] Bisection (unit area) [94] Bisection (module area) [188] [82] [51] [176] [195] FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost <ref> [37] </ref> [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced [11] Min-Delay Clustering [140] [45] [151] [191] Absorption [179] [4] DS [82] [4] Density [101] Replication [122] [104] MCM/Quadrisection [178] [159] [158] Table 1: Various partitioning
Reference: [38] <author> P. K. Chan, M. D. F. Schlag, and J. Y. Zien. </author> <title> Spectral-based multi-way fpga partitioning. </title> <booktitle> In Proc. ACM/SIGDA International Workshop on Field-Programmable Gate Arrays, </booktitle> <pages> pages 133-139, </pages> <year> 1995. </year>
Reference-contexts: The KP algorithm of [37] finds an orthogonal basis with k "prototype vectors" and constructs k clusters by assigning each module to its closest prototype according to the directional cosines measure. Chan et al. <ref> [38] </ref> have also adapted their KP approach to FPGA partitioning by assigning each module to its closest prototype while observing size and I/O constraints on the clusters (FPGA devices). We believe that the Barnes and KP approaches may have limited performance potential. <p> that are particularly suited for specific formulations. 82 Objective Papers Ratio Cut (unit area) [187] [80] [188] [48] [51] [156] Ratio Cut (module area) [51] [31] 45/55 Bipartitioning [156] [190] [94] [6] Bisection (unit area) [94] Bisection (module area) [188] [82] [51] [176] [195] FPGA Devices [125] [126] [44] [100] <ref> [38] </ref> [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced [11] Min-Delay Clustering [140] [45] [151] [191] Absorption [179] [4] DS [82] [4] Density [101] Replication [122] [104] MCM/Quadrisection [178] [159] [158]
Reference: [39] <author> R. Chandrasekharam, S. Subhramanian, and S. Chaudhury. </author> <title> Genetic algorithm for node partitioning problem and applications in vlsi design. </title> <booktitle> IEE Proceedings E (Computers and Digital Techniques), </booktitle> <volume> 140(5) </volume> <pages> 255-60, </pages> <month> September </month> <year> 1993. </year>
Reference-contexts: The mutation operator essentially swaps large subsets of bad vertices. Finally, GAs for multi-way partitioning have been proposed by Chandrasekharam et al. <ref> [39] </ref> and Hulin [102]. Local Search Hybrids and Multi-Start Because GAs are ill-equipped to search a prescribed region of the solution space for local optima, a given GA may take fairly long to find a good solution, if it finds one at all [31].
Reference: [40] <author> H. R. Charney and D. L. Plato. </author> <title> Efficient partitioning of components. </title> <booktitle> In Proc. Design Automation Workshop, </booktitle> <pages> pages 16-0 - 16-21, </pages> <year> 1968. </year>
Reference-contexts: Many other net models are motivated by 1- and 2-dimensional cell placement. For example, the standard 1 jej1 weight is inspired by linear placement into fixed slots separated by distance one <ref> [40] </ref>: since the minimum wirelength of a jej-pin net must be at least jej 1, the weighting should be inversely proportional to jej 1 so that the objective does not "try too hard" to place the modules into an impossibly small span of slots (also see [81]).
Reference: [41] <author> A. C. Chatterjee and R. </author> <title> Hartley. A new simultaneous circuit partitioning and chip placement approach based on simulated annealing. </title> <booktitle> In Proc. ACM/IEEE Design Automation Conf., </booktitle> <pages> pages 36-39, </pages> <year> 1990. </year>
Reference-contexts: Recently, Roy and Sechen [159] used simulated annealing to implement a timing-driven MCM partitioning algorithm. Their cost function is the sum of the half-perimeters of each net spanning multiple chips on the MCM, plus a timing penalty for critical nets whose wirelength exceeds predefined constraints. Chatterjee and Hartley <ref> [41] </ref> presented an SA-based heuristic which performs partitioning and placement simultaneously.
Reference: [42] <author> Y.-P. Chen, T.-C. Wang, and D. F. Wong. </author> <title> A graph partitioning problem for multiple-chip design. </title> <booktitle> In Proc. IEEE Intl. Symp. Circuits and Systems, </booktitle> <pages> pages 1778-1781, </pages> <year> 1993. </year>
Reference-contexts: Thus, the approach may be viewed as multi-way FM with a more 32 complex gain function and certain moves being forbidden. A related satisficing formulation for MCM partitioning was addressed by Chen et al. <ref> [42] </ref>; their method solves the linear programming relaxation of an integer program, converts to a feasible solution, and then applies a KL-based post-processing step. Kuznar et al. [125] recursively apply FM bipartitioning to address the Multiple Device FPGA problem.
Reference: [43] <author> C. K. Cheng. </author> <title> The optimal partitioning of networks. </title> <journal> Networks, </journal> <volume> 22 </volume> <pages> 297-315, </pages> <year> 1992. </year>
Reference-contexts: We now explore a variety of partitioning formulations, and describe how network flows can be used to solve them (see <ref> [43] </ref> for many other examples). 5.2.1 Preliminaries We first review several concepts from the theory of network flows [66].
Reference: [44] <author> N.-C. Chou, L.-T. Liu, C.-K. Cheng, W.-J. Dai, and R. Lindelof. </author> <title> Circuit partitioning for huge logic emulation systems. </title> <booktitle> In Proc. ACM/IEEE Design Automation Conf., </booktitle> <pages> pages 244-249, </pages> <year> 1994. </year>
Reference-contexts: This formulation has also been studied in, e.g., <ref> [44] </ref> [100]. <p> 2 ~a i i=1 x ih The use of 2 for the exponent in the numerator and 1 for the exponent in the denominator seem to be an arbitrary choice of [153]. 69 5.5 Boolean Set Covering A new approach to multi-way partitioning was recently proposed by Chou et al. <ref> [44] </ref> to address the the Single-Device FPGA Partitioning problem. <p> The density constraint prevents single nets from forming clusters. While the approach is amenable to parallel processing, finding dense cliques by enumeration is computationally expensive. Also, by discarding medium-size and large nets to maintain sparsity, the algorithm may lose important clustering information. Ratio Cut: Chou et al. <ref> [44] </ref> and Wei and Cheng [188] have constructed clusterings based on the ratio cut objective. The algorithm of [44] applies the ratio cut algorithm of [187] to construct a bipartitioning fC 1 ; C 2 g such that C 1 U for some small U , e.g., U = 50. <p> Also, by discarding medium-size and large nets to maintain sparsity, the algorithm may lose important clustering information. Ratio Cut: Chou et al. <ref> [44] </ref> and Wei and Cheng [188] have constructed clusterings based on the ratio cut objective. The algorithm of [44] applies the ratio cut algorithm of [187] to construct a bipartitioning fC 1 ; C 2 g such that C 1 U for some small U , e.g., U = 50. <p> However, we do not seem close to understanding which approaches are better, and why. One reason is that it is generally difficult to compare clustering strategies many works present a single scheme for use in their own specialized heuristic (e.g., FPGA partitioning <ref> [44] </ref>, or TimberWolf placement [179]) without presenting any results for alternative clustering schemes. Another reason is that while it may be easy to devise clustering heuristics that optimize ratio cut, Absorption, etc., we do not know if these are the appropriate objectives for the specific application. <p> benchmark variants) that are particularly suited for specific formulations. 82 Objective Papers Ratio Cut (unit area) [187] [80] [188] [48] [51] [156] Ratio Cut (module area) [51] [31] 45/55 Bipartitioning [156] [190] [94] [6] Bisection (unit area) [94] Bisection (module area) [188] [82] [51] [176] [195] FPGA Devices [125] [126] <ref> [44] </ref> [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced [11] Min-Delay Clustering [140] [45] [151] [191] Absorption [179] [4] DS [82] [4] Density [101] Replication [122] [104] MCM/Quadrisection [178] <p> suite (as opposed to a generator for a class of (random) instances) is limited in size, which can in turn limit the significance of comparisons. * Should industry users of CAD algorithms be more forthcoming with real-world test cases? Note that the literature for, e.g., the Multi-Way FPGA Device formulation <ref> [44] </ref> [100] includes test cases that presently can be obtained only under a signed nondisclosure agreement. 7.2 Perspectives We conclude our work by listing what we consider to be promising directions for future research.
Reference: [45] <author> J. Cong and Y. Ding. </author> <title> An optimal technology mapping algorithm for delay optimization in lookup-table based fpga designs. </title> <booktitle> In Proc. IEEE Intl. Conf. Computer-Aided Design, </booktitle> <pages> pages 48-53, </pages> <year> 1992. </year> <month> 87 </month>
Reference-contexts: Like [130], this construction will also replicate modules. 51 A variant of the min-delay clustering problem was studied by Cong and Ding <ref> [45] </ref> for technology mapping in lookup table-based FPGA designs. <p> The authors of [191] combine the approaches of <ref> [45] </ref> and [151] into a heuristic for min-delay clustering under size and pin constraints w (C h ) U , jE (C h )j K + 1. The algorithm achieves optimal delay under either the pin constraint alone (as does [45]) or the size constraint alone (as does [151]). 5.2 Network <p> The authors of [191] combine the approaches of <ref> [45] </ref> and [151] into a heuristic for min-delay clustering under size and pin constraints w (C h ) U , jE (C h )j K + 1. The algorithm achieves optimal delay under either the pin constraint alone (as does [45]) or the size constraint alone (as does [151]). 5.2 Network Flows New formulations such as replication and the increased usage of a directed netlist representation have recently made flow-based approaches more popular. <p> (unit area) [94] Bisection (module area) [188] [82] [51] [176] [195] FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced [11] Min-Delay Clustering [140] <ref> [45] </ref> [151] [191] Absorption [179] [4] DS [82] [4] Density [101] Replication [122] [104] MCM/Quadrisection [178] [159] [158] Table 1: Various partitioning formulations and some works that provide corresponding experimental results.
Reference: [46] <author> J. Cong and Y. Ding. </author> <title> On area/depth trade-off in lut-based fpga technology mapping. </title> <booktitle> In Proc. ACM/IEEE Design Automation Conf., </booktitle> <pages> pages 213-218, </pages> <year> 1993. </year>
Reference-contexts: Works by the same authors show the implications of corolla-based clustering for logic synthesis, delay reduction, testability, etc. MFFCs: Cong and Ding <ref> [46] </ref> use the standard DAG representation of a combinational network to find clusters for FPGA technology mapping. For every v 2 V , the authors of [46] inductively define a fanout free cone of v, F F C v V , as follows: (i) v 2 F F C v , <p> Works by the same authors show the implications of corolla-based clustering for logic synthesis, delay reduction, testability, etc. MFFCs: Cong and Ding <ref> [46] </ref> use the standard DAG representation of a combinational network to find clusters for FPGA technology mapping. For every v 2 V , the authors of [46] inductively define a fanout free cone of v, F F C v V , as follows: (i) v 2 F F C v , and (ii) if u 2 F F C v , u 6= v, and (u; w) 2 E for some w, then w 2 F F
Reference: [47] <author> J. Cong, L. Hagen, and A. B. Kahng. </author> <title> Random walks for circuit clustering. </title> <booktitle> In Proc. IEEE Intl. ASIC Conf., </booktitle> <pages> pages 14.2.1-14.2.4, </pages> <year> 1991. </year>
Reference-contexts: In other words, every con secutive pair of modules share a common net. Cong et al. <ref> [47] </ref> defined a cycle fw p ; w p+1 ; : : : ; w q g as a 75 contiguous subsequence of the random walk with w p = w q and all w i distinct, i = p; p + 1; : : :; q 1.
Reference: [48] <author> J. Cong, L. Hagen, and A. B. Kahng. </author> <title> Net partitions yield better module partitions. </title> <booktitle> In Proc. ACM/IEEE Design Automation Conf., </booktitle> <pages> pages 47-52, </pages> <year> 1992. </year>
Reference-contexts: Other k-way partitioning objectives have been proposed in the context of circuit clustering, i.e., when k is large with respect to jV j (see Section 6). The DS objective <ref> [48] </ref> is: DS: Maximize F (P k ) = n h=1 degree (C h ) separation (C h ) where degree (C h ) is the average number of nets incident to each module of the cluster that have at least two pins in the cluster, and separation (C h ) <p> This general net-based partitioning approach (i.e., first obtain a net partition, then complete the net partition into a module partition) was established in [83] and extended in, e.g., <ref> [48] </ref> and [49] (see Section 5.2). If the nets are partitioned into two sets N 1 and N 2 , a module bipartitioning P 2 = fC 1 ; C 2 g can be derived by having the nets "vote" to determine each module assignment. <p> This process generates at most n 1 module bipartitionings; the one with smallest ratio cut is chosen. The variant approach of <ref> [48] </ref> also considers each split of the net ordering, and for each completes the module bipartitioning by using a matching-based approach (see Section 5.2). 4.5.2 Dynamic Programming for Restricted Partitioning To split a linear ordering into more than two clusters, Alpert and Kahng [5] proposed the DP-RP ("dynamic programming for restricted <p> Cong et al. <ref> [48] </ref> construct an MIS S using the algorithm of [93] and assign each contested module v to C i if there exists an e 2 S " N (v) 59 with e 2 N i . <p> We believe that whether to use area information, which balance constraints apply, etc. are issues that can be addressed by identifying benchmarks (or benchmark variants) that are particularly suited for specific formulations. 82 Objective Papers Ratio Cut (unit area) [187] [80] [188] <ref> [48] </ref> [51] [156] Ratio Cut (module area) [51] [31] 45/55 Bipartitioning [156] [190] [94] [6] Bisection (unit area) [94] Bisection (module area) [188] [82] [51] [176] [195] FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area)
Reference: [49] <author> J. Cong, W. Labio, and N. Shivakumar. </author> <title> Multi-way vlsi circuit partitioning based on dual net representation. </title> <booktitle> In Proc. IEEE Intl. Conf. Computer-Aided Design, </booktitle> <pages> pages 56-62, </pages> <year> 1994. </year>
Reference-contexts: Observe that the intersection graph can be derived by applying the clique net model to the dual hypergraph. Yeh et al. [194] used this representation for their Primal-Dual FM based algorithm (see Section 3.5), and <ref> [49] </ref> used a combination of the intersection and dual representations. * Directed Graph: Signal flow direction can be directly integrated into a graph representation, e.g., by creating directed edges (S (e); w) for every e 2 E and every w 2 D (e). <p> of signal nets, some modules will belong only to nets on one side of the partition and can be unambiguously assigned to that side, but other modules 46 will be shared by nets on both sides of the partition (cf. terms such as "boundary graph" [112] [83] or "module contention" <ref> [49] </ref>). We must therefore seek a completion of the net partition which assigns each shared module to a single cluster, such that the partition cost is minimized. <p> This general net-based partitioning approach (i.e., first obtain a net partition, then complete the net partition into a module partition) was established in [83] and extended in, e.g., [48] and <ref> [49] </ref> (see Section 5.2). If the nets are partitioned into two sets N 1 and N 2 , a module bipartitioning P 2 = fC 1 ; C 2 g can be derived by having the nets "vote" to determine each module assignment. <p> A module is in contention if it is incident to nets that are not all in the same N i ; uncontested modules with all nets in N i become assigned to C i . Cong et al. <ref> [49] </ref> construct a complete bipartite graph with V 1 being the set of contested modules and V 2 = fN 1 ; N 2 ; : : :; N k g with an edge (v; N i ) from every v 2 V 1 to every cluster of nets. <p> [51] [156] Ratio Cut (module area) [51] [31] 45/55 Bipartitioning [156] [190] [94] [6] Bisection (unit area) [94] Bisection (module area) [188] [82] [51] [176] [195] FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) <ref> [49] </ref> [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced [11] Min-Delay Clustering [140] [45] [151] [191] Absorption [179] [4] DS [82] [4] Density [101] Replication [122] [104] MCM/Quadrisection [178] [159] [158] Table 1: Various partitioning formulations and some works that provide corresponding experimental results.
Reference: [50] <author> J. Cong, Z. Li, and R. Bagrodia. </author> <title> Acyclic multi-way partitioning of boolean networks. </title> <booktitle> In Proc. ACM/IEEE Design Automation Conf., </booktitle> <pages> pages 670-675, </pages> <year> 1994. </year>
Reference-contexts: This specific construction is called the directed tree representation. A directed graph is particularly useful for flow, uni-directional cut, timing, and replication formulations. Sometimes this construction yields a directed acyclic graph (DAG), e.g., for combinational logic networks <ref> [50] </ref> [107]. in such a case, the set of primary inputs is denoted by P I = fv 2 V j 8 e 2 N (v); S (e) = vg and the set of primary outputs is denoted by P O = fv 2 V j 8 e 2 N (v); <p> The directed edge (C i ; C j ) is an edge in the dependency graph if 9u 2 C i ; v 2 C j such that (u; v) 2 E. Cong et al. <ref> [50] </ref> define a partitioning to be acyclic if it induces an acyclic dependency graph (which is desirable for pipelining or parallel circuit simulation applications). Since a random initial solution is not guaranteed to be acyclic, initial solutions are constructed using random topological sorts. <p> The intuition is that MFFCs are naturally suited for technology mapping onto lookup table-based logic blocks which have a single primary output and a fixed number of primary inputs. In <ref> [50] </ref> MFFC clusters are used for acyclic, multi-way partitioning (see Section 3.5); here, the cluster sizes are heuristically thresholded since an MFFC can be quite large.
Reference: [51] <author> J. Cong and M'L. Smith. </author> <title> A parallel bottom-up clustering algorithm with applications to circuit partitioning in vlsi design. </title> <booktitle> In Proc. ACM/IEEE Design Automation Conf., </booktitle> <pages> pages 755-760, </pages> <year> 1993. </year>
Reference-contexts: The two-phase approach has been applied with many clustering algorithms, e.g., [3] [4] [29] [30] <ref> [51] </ref> [82] [94] [143] [176]; see Section 6.6 for a discussion of methods which integrate clustering into move-based approaches. 6.2 Agglomerative Clustering An agglomerative clustering algorithm begins with the n-way clustering P n = ffv 1 g; fv 2 g; : : : ; fv n gg and iteratively constructs P <p> These random-walk approaches have been utilized within two-phase FM bipartitioning. Cliques: A clique is a densest-possible subgraph, hence it forms a very intuitive cluster. Cong and Smith <ref> [51] </ref> propose to find and collapse cliques in the undirected graph constructed from the netlist by applying the clique net model with edge weight 2 jej to all nets with jej 5. <p> Hauck and Borriello [94] discuss two unclustering methods which integrate cluster hierarchy into the application of FM. The iterative unclustering method <ref> [51] </ref> runs FM on the netlist contracted from the top clustering in the hierarchy (with smallest k), then runs FM on the next highest level in the hierarchy, etc. and finishes with a final run on the original flattened netlist. <p> We believe that whether to use area information, which balance constraints apply, etc. are issues that can be addressed by identifying benchmarks (or benchmark variants) that are particularly suited for specific formulations. 82 Objective Papers Ratio Cut (unit area) [187] [80] [188] [48] <ref> [51] </ref> [156] Ratio Cut (module area) [51] [31] 45/55 Bipartitioning [156] [190] [94] [6] Bisection (unit area) [94] Bisection (module area) [188] [82] [51] [176] [195] FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] <p> We believe that whether to use area information, which balance constraints apply, etc. are issues that can be addressed by identifying benchmarks (or benchmark variants) that are particularly suited for specific formulations. 82 Objective Papers Ratio Cut (unit area) [187] [80] [188] [48] <ref> [51] </ref> [156] Ratio Cut (module area) [51] [31] 45/55 Bipartitioning [156] [190] [94] [6] Bisection (unit area) [94] Bisection (module area) [188] [82] [51] [176] [195] FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) <p> can be addressed by identifying benchmarks (or benchmark variants) that are particularly suited for specific formulations. 82 Objective Papers Ratio Cut (unit area) [187] [80] [188] [48] <ref> [51] </ref> [156] Ratio Cut (module area) [51] [31] 45/55 Bipartitioning [156] [190] [94] [6] Bisection (unit area) [94] Bisection (module area) [188] [82] [51] [176] [195] FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced [11] Min-Delay Clustering [140] [45] [151] [191] Absorption [179] [4] DS [82] [4]
Reference: [52] <author> A. Dasdan and C. Aykanat. </author> <title> Improved multiple-way circuit partitioning algorithms. </title> <booktitle> In Proc. ACM/SIGDA International Workshop on Field-Programmable Gate Arrays, </booktitle> <year> 1994. </year>
Reference-contexts: This allows the neighbors of v in C i to also migrate out of C i . The algorithm permits a maximum of ten moves per module per pass. Dasdan and Aykanat 30 <ref> [52] </ref> propose a multi-way FM variant that allows a small constant number (e.g., three or four) module moves per pass. Yeh et al. [194] gave an extension of Sanchis' multi-way partitioning algorithm that alternates "primal" passes of module moves with "dual" passes of net moves.
Reference: [53] <author> H. L. Davidson and E. Kelly, </author> <month> July </month> <year> 1993. </year> <type> Personal communication. </type>
Reference-contexts: Hence, in contrast to previous building-block methodologies which yielded a small number of function blocks that could be optimally hand-partitioned, HDL-based synthesis virtually requires the physical design methodology to shift from working with a small number of building blocks to working with large, flattened design representations <ref> [53] </ref>. Partitioning of flattened inputs is also necessary for such applications as the design of "precursor systems" (i.e., finding the packaging tradeoffs that correspond to optimum cost-performance points at early stages in the product life cycle). * Estimation for design optimization.
Reference: [54] <author> D. E. Van den Bout and T. K. Miller III. </author> <title> Graph partitioning using annealed neural networks. </title> <journal> IEEE Transaction on Neural Networks, </journal> <volume> 1(2) </volume> <pages> 192-203, </pages> <year> 1990. </year>
Reference-contexts: Mean Field Annealing Mean Field Annealing (MFA) is a technique similar to SA which also has a physical analogy to systems of particles in thermal equilibrium. Van den Bout and Miller <ref> [54] </ref> showed how MFA could be applied to graph partitioning. They use an indicator n-vector ~x to denote a bipartitioning solution, where x i = 0 corresponds to membership of v i in C 1 and x i = 1 corresponds to membership of v i in C 2 .
Reference: [55] <author> S. Dey, F. Brglez, and G. Kedem. </author> <title> Corolla based circuit partitioning and resynthesis. </title> <booktitle> In Proc. ACM/IEEE Design Automation Conf., </booktitle> <pages> pages 607-612, </pages> <year> 1990. </year>
Reference-contexts: The ordering is split into a clustering using the DP-RP algorithm discussed in Section 4.5. 6.5 Clustering of Boolean Networks The final three approaches all exploit the directed structure of combination Boolean networks. Corollas: Dey, Brglez and Kedem <ref> [55] </ref> [56] construct a directed "star" representation for a combinational Boolean network by introducing a dummy stem module v (e) for each net e. For every e 2 E, the DAG contains edges (S (e); v (e)) and (v (e); w) for every w 2 D (e).
Reference: [56] <author> S. Dey, F. Brglez, and G. Kedem. </author> <title> Partitioning sequential circuits for logic optimization. </title> <booktitle> In Proc. IEEE Intl. Conf. Computer Design, </booktitle> <pages> pages 70-76, </pages> <year> 1990. </year>
Reference-contexts: The ordering is split into a clustering using the DP-RP algorithm discussed in Section 4.5. 6.5 Clustering of Boolean Networks The final three approaches all exploit the directed structure of combination Boolean networks. Corollas: Dey, Brglez and Kedem [55] <ref> [56] </ref> construct a directed "star" representation for a combinational Boolean network by introducing a dummy stem module v (e) for each net e. For every e 2 E, the DAG contains edges (S (e); v (e)) and (v (e); w) for every w 2 D (e).
Reference: [57] <author> W. E. Donath. </author> <title> Placement and average interconnection lengths of computer logic. </title> <journal> IEEE Trans. Circuits and Systems, </journal> <volume> CAS-26(4):272-277, </volume> <year> 1979. </year>
Reference-contexts: Here, d (C) = 1 jCj v2C deg (v) is the average degree of modules in the cluster. Because the layout has finite size, the power-law relationship eventually breaks down when the number of clusters is small. Feuer [64], Donath <ref> [57] </ref> and others have established that a lower Rent parameter r corresponds to lower total wirelength in the layout. However, the connection between such results for placement (where the netlist is embedding in the plane) and the clustering domain (where the netlist is "free") remains unclear (cf. [85]).
Reference: [58] <author> W. E. Donath. </author> <title> Logic partitioning. </title> <editor> In B. Preas and M. Lorenzetti, editors, </editor> <booktitle> Physical Design Automation of VLSI Systems, </booktitle> <pages> pages 65-86. </pages> <address> Benjamin/Cummings, </address> <year> 1988. </year>
Reference-contexts: For the maximum cost of a net cut in the transformed graph to be one, Donath <ref> [58] </ref> shows that the appropriate edge weighting is 4 jej 2 (jej mod 2) since there are jej 2 (jej mod 2) 4 edges crossing between two clusters when half the modules of e are in each cluster (also see [184]).
Reference: [59] <author> W. E. Donath and A. J. Hoffman. </author> <title> Lower bounds for the partitioning of graphs. </title> <journal> IBM J. Res. Develop., </journal> <volume> 17(5) </volume> <pages> 420-425, </pages> <year> 1973. </year>
Reference-contexts: However, in practice, a diagonal matrix B is often added to A to ensure positive semi-definiteness and the computability of eigenvectors, and also to obtain properties similar to Q (e.g., Donath and Hoffman <ref> [59] </ref> use B = D, thereby obtaining the spectra of -Q). Currently, the relationship between the spectra of A and Q are not well-understood, though we believe that most theoretical results in the spectral literature can be equivalently derived with either Q or A. <p> ; m 2 ; : : : ; m k ; 0; 0; : : :; 0, which yields jjQ (P )jj 2 i=1 n X ( i 0) 2 = i=1 n X 2 Combining equation (4.3) with equation (4.2) yields the equivalent of the famous Donath and Hoffman <ref> [59] </ref> lower bound: F (P k ) P k i=1 i m i . 10 Actually, the lower bound of [59] is stronger, since it holds for not only the eigenvalues of Q, but also the eigenvalues of D A as long as the diagonal matrix D has trace (D) = <p> (P )jj 2 i=1 n X ( i 0) 2 = i=1 n X 2 Combining equation (4.3) with equation (4.2) yields the equivalent of the famous Donath and Hoffman <ref> [59] </ref> lower bound: F (P k ) P k i=1 i m i . 10 Actually, the lower bound of [59] is stronger, since it holds for not only the eigenvalues of Q, but also the eigenvalues of D A as long as the diagonal matrix D has trace (D) = P n i=1 deg (v i ). <p> They also permit the diagonal entries of A to be perturbed before computing the eigenvectors, leading to tighter lower bounds than those given by Donath and Hoffman <ref> [59] </ref>. Further, they extend the average case bisection bound of Boppana [27] to k &gt; 2 (see [133] for a more complete discussion of spectrally derived lower bounds). <p> Works such as [68] [6] achieve solutions by associating a partitioning instance with the vector space comprised by multiple eigenvectors, yet heuristics for this representation are largely undeveloped. In addition, older spectral ideas may be worth revisiting, e.g., Donath and Hoffman <ref> [59] </ref> suggested varying the degree matrix to obtain better eigenvectors. Fourth, finding good 1-dimensional circuit representations, (i.e., linear orderings of the modules) also seems promising. Dynamic programming can optimally split such an ordering into multiple clusters with respect to many standard objectives.
Reference: [60] <author> A. E. Dunlop and B. W. Kernighan. </author> <title> A procedure for layout of standard-cell vlsi circuits. </title> <journal> IEEE Trans. Computer-Aided Design, </journal> <volume> 4(1) </volume> <pages> 92-98, </pages> <year> 1985. </year>
Reference-contexts: The authors of [178] construct a placement by using the terminal propagation technique of <ref> [60] </ref> and recursively quadrisecting the clusters. Shih, Kuh, and Tsay [174] have applied a multi-way KL variant to MCM partitioning with cluster timing, area, thermal and pin constraints, where the objective is to minimize wirelength over the MCM configuration.
Reference: [61] <author> S. Dutt. </author> <title> New faster kernighan-lin-type graph-partitioning algorithms. </title> <booktitle> In Proc. IEEE Intl. Conf. Computer-Aided Design, </booktitle> <pages> pages 370-377, </pages> <year> 1993. </year>
Reference-contexts: The number of passes is clearly bounded by jEj for unweighted graphs (since the cost must improve with each pass); in practice, significantly fewer passes will be needed to reach a local minimum. Recently, Dutt <ref> [61] </ref> presented the Quick Cut algorithm which reduces the complexity of a single KL pass to O (maxfjEj log n; jEj deg max g) where deg max is the maximum module degree.
Reference: [62] <author> J. Fan, B. Catanzaro, C. K. Cheng, and S. H. Lee. </author> <title> Partitioning of opto-electronic multichip modules. </title> <booktitle> In Proc. IEEE Multi-Chip Module Conf., </booktitle> <pages> pages 138-143, </pages> <year> 1994. </year>
Reference-contexts: When the entries in B are permitted to take on any values, the formulation in equation (5.2) becomes the quadratic assignment problem (QAP). Shih and Kuh show how to adapt a QAP heuristic due to Burkard and Bonniger [34] to their formulation. The same heuristic was also applied by <ref> [62] </ref> to an opto-electronic formulation with size, connection, power, and interconnect constraints. Shih, Kuh, and Tsay [175] also applied the formulation of equation (5.3) to am MCM partitioning formulation, setting ff = 1 and fi = 0 to obtain an ILP.
Reference: [63] <author> T. A. Feo and M. Khellaf. </author> <title> A class of bounded approximation algorithms for graph partitioning. </title> <journal> Networks, </journal> <volume> 20 </volume> <pages> 181-195, </pages> <year> 1990. </year>
Reference-contexts: A similar approach was proposed earlier by [76]. With the random matching approach, all clusters will have roughly the same size, although it is not known whether this is preferable, e.g., for two-phase bipartitioning. Feo and Khellaf <ref> [63] </ref> proposed contracting edges according to a maximum-weight matching. Tight performance bounds were shown for this approach on graphs with edge weights that satisfy the triangle 74 inequality, but the matching construction generally requires O (n 3 ) time.
Reference: [64] <author> M. Feuer. </author> <title> Connectivity of random logic. </title> <journal> IEEE Trans. Computers, </journal> <volume> C-31(1):29-33, </volume> <month> January </month> <year> 1982. </year>
Reference-contexts: Here, d (C) = 1 jCj v2C deg (v) is the average degree of modules in the cluster. Because the layout has finite size, the power-law relationship eventually breaks down when the number of clusters is small. Feuer <ref> [64] </ref>, Donath [57] and others have established that a lower Rent parameter r corresponds to lower total wirelength in the layout. However, the connection between such results for placement (where the netlist is embedding in the plane) and the clustering domain (where the netlist is "free") remains unclear (cf. [85]).
Reference: [65] <author> C. M. Fiduccia and R. M. Mattheyses. </author> <title> A linear time heuristic for improving network partitions. </title> <booktitle> In Proc. ACM/IEEE Design Automation Conf., </booktitle> <pages> pages 175-181, </pages> <year> 1982. </year>
Reference-contexts: Tsay and Kuh [183] propose edge weight 2 jej for minimizing squared wirelength and ( 2 jej ) 3 for minimizing Manhattan wirelength. 7 model, e.g., Shih [172] reports that solution quality of Fiduccia-Mattheyses bipartitioning <ref> [65] </ref> can improve when run on the graph representation of the netlist instead of the original hypergraph. However, the clique model can destroy the natural sparsity of the netlist since 2 nonzeros will be inserted in A for every net e. <p> First, they are generally very intuitive the logical way of improving a given solution is to repeatedly make it better via small changes, such as moving individual modules. Second, iterative algorithms are simple to describe and implement; for this reason, the bipartitioning method of Fiduccia-Mattheyses <ref> [65] </ref> and the multi-way partitioning method of Sanchis [164] are standards against which nearly all other heuristics are measured. <p> Although the original KL algorithm and Quick Cut apply only to undirected weighted graphs, Schweikert and Kernighan [169] extended KL to hypergraphs and a similar extension appears possible for Quick Cut. 3.1.2 The Fiduccia-Mattheyses (FM) Algorithm Fiduccia and Mattheyses <ref> [65] </ref> presented a KL-inspired algorithm which reduced the time per pass to linear in the size of the netlist. <p> In this case, the implementation of the gain bucket data structure will determine which module is selected. The original FM algorithm uses a linked list for each bucket; from Figure 6, reproduced from <ref> [65] </ref>, we may infer that modules are removed and inserted at the head of the list, i.e., the bucket organization corresponds to a Last-In-First-Out (LIFO) stack. The authors of [65] do not mention why a LIFO organization was chosen, but one can speculate that it was an "obvious" choice. <p> The original FM algorithm uses a linked list for each bucket; from Figure 6, reproduced from <ref> [65] </ref>, we may infer that modules are removed and inserted at the head of the list, i.e., the bucket organization corresponds to a Last-In-First-Out (LIFO) stack. The authors of [65] do not mention why a LIFO organization was chosen, but one can speculate that it was an "obvious" choice.
Reference: [66] <author> L. R. Ford, Jr. and D. R. Fulkerson. </author> <title> Flows in Networks. </title> <publisher> Princeton University Press, </publisher> <year> 1962. </year>
Reference-contexts: Min-Cut Bipartitioning can be solved by converting the hypergraph to a flow network, computing a certain set of n 1 flows and applying the max-flow min-cut theorem <ref> [66] </ref> to obtain a minimum cut. Many algorithms are known which can solve the max-flow problem in polynomial time; see [75] [2] for surveys. <p> We now explore a variety of partitioning formulations, and describe how network flows can be used to solve them (see [43] for many other examples). 5.2.1 Preliminaries We first review several concepts from the theory of network flows <ref> [66] </ref>. A flow network G = (V; E) is a directed graph in which each edge (v; w) 2 E has a positive capacity c (v; w) &gt; 0; edges that are not present in the network implicitly have capacity zero. <p> A well-known result from linear programming duality is the max-flow min-cut theorem <ref> [66] </ref>: Max-Flow Min-Cut Theorem: Given a flow network G, the value of the maximum s-t flow is equal to minimum cost of any s-t cut.
Reference: [67] <author> J. Frankle. </author> <title> Circuit Placement Methods Using Multiple Eigenvectors and Linear Probe Techniques. </title> <type> PhD thesis, </type> <institution> UC Berkeley, </institution> <year> 1987. </year>
Reference-contexts: Note that all linear combinations of the first d eigenvector solutions lie in the d-dimensional subspace spanned by these eigenvectors. This observation is the genesis behind the probing approach Frankle and Karp [68] <ref> [67] </ref>: they search this entire subspace for a good solution rather than associating a solution with a single eigenvector. Frankle and Karp [68] developed the following probing technique for finding such non-discrete combined solutions in the multi-dimensional eigenspace. <p> In [13], they extend their 2-dimensional hyperplane algorithm to d dimensions, finding the optimal vector partitioning in O (n d (d+3)=2 ) time. Frankle <ref> [67] </ref> has shown how to exhaustively search a d-dimensional vector space with probes, finding the optimal solution in O (n d1 ) time.
Reference: [68] <author> J. Frankle and R. M. Karp. </author> <title> Circuit placement and cost bounds by eigenvector decomposition. </title> <booktitle> In Proc. IEEE Intl. Conf. Computer-Aided Design, </booktitle> <pages> pages 414-417, </pages> <year> 1986. </year>
Reference-contexts: In a 2-dimensional layout, [91] assumes that the net will be a spanning tree with jej 1 edges; hence, if the weight for these edges is evenly distributed among the clique edges, the weight function should be (jej 1)= 2 = 2 jej . Frankle and Karp <ref> [68] </ref> proposed the uniform weight ( 2 jej ) 2 for linear placement with minimum squared wirelength: if the span of a net is normalized to one and edges have weight w, the total edge cost may vary from jej 2 w to ( jej 2 ) 2 w depending on <p> Such a representation is also common 2-dimensional cell placement. * A multi-dimensional vector space representation can arise in two distinct ways. Using one approach, the vector space consists of indicator n-vectors (corresponding to bipartitioning solutions), and the problem becomes one of finding the direction of the best indicator vector <ref> [68] </ref>. Using the other approach, the n modules are mapped to n vectors in d-space and the vectors are clustered together to form both a vector partitioning and a module partitioning [12] [6] [37]. <p> These approaches use k eigenvectors to derive a k-way partitioning; Barnes' approach explicitly tries to map each cluster to a single eigenvector. Third, we discuss an alternative approach that uses multiple eigenvectors to generate a bipartitioning. This linear probe technique <ref> [68] </ref> first constructs a vector space using the eigenvectors as a basis, then generates probes which search the vector space to find good bipartitionings. Fourth, we discuss utilizing this vector space to construct a vector partitioning problem that is equivalent to many multi-way graph partitioning formulations. <p> Note that all linear combinations of the first d eigenvector solutions lie in the d-dimensional subspace spanned by these eigenvectors. This observation is the genesis behind the probing approach Frankle and Karp <ref> [68] </ref> [67]: they search this entire subspace for a good solution rather than associating a solution with a single eigenvector. Frankle and Karp [68] developed the following probing technique for finding such non-discrete combined solutions in the multi-dimensional eigenspace. <p> This observation is the genesis behind the probing approach Frankle and Karp <ref> [68] </ref> [67]: they search this entire subspace for a good solution rather than associating a solution with a single eigenvector. Frankle and Karp [68] developed the following probing technique for finding such non-discrete combined solutions in the multi-dimensional eigenspace. <p> are ~ 1 ; : : :; ~ d with eigenvalues 1 : : : n .) This result implies that C = U d 1 2 is the closest approximation to A = CC T , and thus C is "equivalent" to V d , meaning the reductions of <ref> [68] </ref> and [12] are also equivalent. Hence, Arun and Rao choose C = U d 1 2 . <p> Frankle [67] has shown how to exhaustively search a d-dimensional vector space with probes, finding the optimal solution in O (n d1 ) time. The min-cut bipartitioning reductions of <ref> [68] </ref> and [12] can be extended to many multi-way formulations, including minimum Scaled Cost, minimum total net cut, or maximum cluster I/O (jE (C h )j in FPGA partitioning), via a vector partitioning formulation [6]. <p> The DP-RP result highlights the problem of finding 1-dimensional netlist representations which will lead to good multi-way partitioning solutions. Alpert and Yao [6] have applied DP-RP to their (MELO) orderings (see also the discussions of [4] [100] [101] in Section 6). Note that Frankle and Karp's <ref> [68] </ref> probe technique can be used to yield linear orderings as well, simply by sorting the entries of V d ~y for a given probe direction ~y; we believe that applying DP-RP to these orderings is a promising direction for future research. 47 4.5.3 Placement-Based Approaches Another method which constructs a <p> Works such as <ref> [68] </ref> [6] achieve solutions by associating a partitioning instance with the vector space comprised by multiple eigenvectors, yet heuristics for this representation are largely undeveloped. In addition, older spectral ideas may be worth revisiting, e.g., Donath and Hoffman [59] suggested varying the degree matrix to obtain better eigenvectors.
Reference: [69] <author> J. Garbers, H. J. Promel, and A. Steger. </author> <title> Finding clusters in vlsi circuits. </title> <booktitle> In Proc. IEEE Intl. Conf. Computer-Aided Design, </booktitle> <pages> pages 520-523, </pages> <year> 1990. </year>
Reference-contexts: We identify each approach by its underlying clustering intuition. (K; L)-connectivity: Modules u and v are (K; L) -connected if there exists K edge-disjoint paths of length L between u and v. Garbers et al. <ref> [69] </ref> proposed using the transitive closure of the (K; L)- connectedness relation for clustering into dense subgraphs, (i.e., having large jEj jV j 2 ratio). <p> In addition, determining (K; L)-connectivity is NP-Complete for L 5, with NP-Completeness for L = 4 still an open question. In practice, <ref> [69] </ref> ensures clusters are connected by placing two modules in the same cluster if K edge-disjoint paths between them can be found with at least one path having length one. <p> Exactly bis edges connect C 1 with C 2 , with bis very likely to be the cost of the optimum bisection. * k-Way Specific: The class G Gar (k; n k ; p i ; p e ) <ref> [69] </ref> represents the multi-way extension of the Bisection Specific construction.
Reference: [70] <author> M. Garey and D. S. Johnson. </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness. </title> <publisher> Freeman, </publisher> <year> 1979. </year>
Reference-contexts: If all modules have unit weight, then * = 1. When move-based heuristics are applied, it is usually convenient to allow the cluster weight imbalance * to vary up to the largest module weight (otherwise the number of possible moves may become too limited). Min-Cut Bisection is NP-complete <ref> [70] </ref>, as are all of the other size-constrained formulations that we discuss since they reduce to Min-Cut Bisection. This formulation may be unnecessarily restrictive, and relaxing the size constraints may permit a much better solution while still maintaining relatively balanced clusters.
Reference: [71] <author> C. H. Gebotys and M. I. Elmasry. </author> <title> Optimal VLSI Architectural Synthesis: Area, Performance, and Testability. </title> <publisher> Kluwer, </publisher> <year> 1992. </year>
Reference-contexts: set is w (p j (r)). 11 A primal-dual approach with column generation has already been used to solve the linear programming relaxation of large integer programs in the context of global routing [36]; however, only small integer programs have been essayed in CAD, typically for high-level synthesis (see, e.g., <ref> [71] </ref>). 49 * For all primary inputs v i (no incoming edges), set (i) = 0. * Find any unlabeled v i , all of whose predecessors are labeled, and let r be the largest label of all predecessors of v i .
Reference: [72] <author> S. Geman and D. Geman. </author> <title> Stochastic relaxation, gibbs distributions, and the bayesian restoration of images. </title> <journal> IEEE Trans. Pattern Analysis and Machine Intelligence, </journal> <volume> 6 </volume> <pages> 721-741, </pages> <year> 1984. </year>
Reference-contexts: To control the rate of convergence and the strategy for exploring the solution space, the user typically establishes a temperature schedule by which T varies, e.g., as a function of the number of moves made. The SA algorithm enjoys certain theoretical attractions <ref> [72] </ref> [88] (see also [127]): using Markov chain arguments and properties of Gibbs-Boltzmann statistics, one can show that SA will converge to a globally optimum solution given an infinite number of moves and a temperature schedule that cools to zero sufficiently slowly.
Reference: [73] <author> P. E. Gill, W. Murray, and M. H. Wright. </author> <title> Practical Optimization. </title> <publisher> Academic Press, </publisher> <year> 1981. </year>
Reference-contexts: A quadratic program (QP) is an LP with an objective that is quadratic in the variables, and a quadratic boolean program (QBP) additionally restricts the variables to 0 1 values. Some QP and QBP formulations have polynomial solutions while others are NP-hard (see <ref> [73] </ref>). 5.3.1 Quadratic Formulations The multi-way graph partitioning formulation with objective F (P k ) = P k i=1 jE (C i )j and fixed cluster sizes m 1 m 2 : : : m k (where jC i j = m i ) can be expressed as a QBP.
Reference: [74] <author> F. Glover. </author> <title> Tabu search part i. </title> <journal> ORSA Journal on Computing, </journal> <volume> 1 </volume> <pages> 190-206, </pages> <year> 1989. </year>
Reference-contexts: However, like SA, MFA takes a long time to converge, though parallel implementations may reduce this time. 3.3 Tabu Search Tabu search was proposed by Glover <ref> [74] </ref> as a general combinatorial optimization technique. Tabu search is similar to iterative improvement in that moves are sought which transform the current solution to its best neighboring solution.
Reference: [75] <author> A. V. Goldberg, E. Tardos, and R. E. Tarjan. </author> <title> Network flow algorithms. </title> <type> Technical Report STAN-CS-89-1252, </type> <institution> Stanford University CS Dept., </institution> <year> 1989. </year> <month> 88 </month>
Reference-contexts: Min-Cut Bipartitioning can be solved by converting the hypergraph to a flow network, computing a certain set of n 1 flows and applying the max-flow min-cut theorem [66] to obtain a minimum cut. Many algorithms are known which can solve the max-flow problem in polynomial time; see <ref> [75] </ref> [2] for surveys. Note however that finding a minimum cut does not necessarily require a maximum flow; fast techniques to find minimum cuts [92] [114] [141] are noted in Section 5 below.
Reference: [76] <author> M. K. Goldberg and M. Burstein. </author> <title> Heuristic improvement technique for bisection of vlsi networks. </title> <booktitle> In Proc. IEEE Intl. Conf. Computer Design, </booktitle> <pages> pages 122-125, </pages> <year> 1983. </year>
Reference-contexts: The contraction process will also decrease the sparsity of the netlist, i.e., the average degree deg avg = P e2E jej=jV j will be higher for the contracted hypergraph. Goldberg and Burstein <ref> [76] </ref> claim that deg avg is between 1.8 and 2.5 for real circuits, and that an FM-based algorithm performs "relatively poorly" in this range, but "nearly optimally" when deg avg &gt; 5. <p> All of these works imply that a move-based heuristic should be more effective on a contracted netlist not only because of the smaller solution space, but also because of the increased density. These considerations have motivated the "two-phase" application of move-based algorithms <ref> [76] </ref>: first execute the given algorithm on a contracted netlist, then re-expanded the resulting solution into the starting point of a second algorithm run on the flat (original) netlist. <p> A similar approach was proposed earlier by <ref> [76] </ref>. With the random matching approach, all clusters will have roughly the same size, although it is not known whether this is preferable, e.g., for two-phase bipartitioning. Feo and Khellaf [63] proposed contracting edges according to a maximum-weight matching.
Reference: [77] <author> R. Gomory and T. C. Hu. </author> <title> Multi-terminal network flows. </title> <journal> J. SIAM, </journal> <volume> 9 </volume> <pages> 551-570, </pages> <year> 1961. </year>
Reference-contexts: To find the global min-cut bipartitioning, n 1 max-flow computations suffice via the Gomory-Hu cut tree construction <ref> [77] </ref>. Such a tree is formed by finding an s t cut fC 1 ; C 2 g, and constructing 54 the edge (C 1 ; C 2 ) between vertices C 1 and C 2 in the cut tree, with cost jE (C 1 )j.
Reference: [78] <author> J. W. Greene and K. J. Supowit. </author> <title> Simulated annealing without rejected moves. </title> <booktitle> In Proc. IEEE Intl. Conf. Computer Design, </booktitle> <pages> pages 658-663, </pages> <year> 1984. </year>
Reference-contexts: Quite possibly, such enhancements will make SA more viable for partitioning applications in the future. One reason for long SA runtimes is that at low temperatures, many candidate moves (i.e., neighbors of the current solution) might be generated and rejected before one is finally accepted. Greene and Supowit <ref> [78] </ref> proposed a "rejectionless" variant of SA in which no moves are rejected, since candidate moves are generated with probability proportional to their likelihood of being generated and accepted given the current solution.
Reference: [79] <author> S. W. Hadley, B. L. Mark, and A. Vannelli. </author> <title> An efficient eigenvector approach for finding netlist partitions. </title> <journal> IEEE Trans. Computer-Aided Design, </journal> <volume> 11(7) </volume> <pages> 885-892, </pages> <year> 1992. </year>
Reference-contexts: A weight of 4 jej (jej1) was proposed by D. J.-H. Huang and adopted by [3] so that the expected weight of a cut signal net would be one. Hadley et al. <ref> [79] </ref> propose a weighting scheme that is a function of both jej and k which guarantees that for the cost of splitting e into k clusters will be bounded above by one. <p> However, the clique model can destroy the natural sparsity of the netlist since 2 nonzeros will be inserted in A for every net e. For example, a 1000-pin clock net will induce 499,500 nonzero entries in A. Thus, some existing methods discard large nets to maintain sparsity [37] <ref> [79] </ref>. An undirected graph can also be induced from a netlist by constructing random spanning trees, paths, or cycles over the pins in every signal net. <p> A linear ordering of modules is obtained by sorting the entries of ~ 2 , and a heuristic bipartitioning can be derived from splitting the ordering. Next, we describe an extension of Hall's multi-way partitioning approach due to Barnes [18], as well as some other extensions (e.g., <ref> [79] </ref> [37]). These approaches use k eigenvectors to derive a k-way partitioning; Barnes' approach explicitly tries to map each cluster to a single eigenvector. Third, we discuss an alternative approach that uses multiple eigenvectors to generate a bipartitioning. <p> Notice that for k = 2, this formulation reduces to minimizing jjU 2 Rjj 2 and the optimal solution is derived by sorting the coordinates of ~ 2 as discussed above. Barnes' algorithm was applied to VLSI circuits by Hadley et al. <ref> [79] </ref>, who also incorporated a new clique net model to obtain a graph representation and FM post-processing. <p> [31] 45/55 Bipartitioning [156] [190] [94] [6] Bisection (unit area) [94] Bisection (module area) [188] [82] [51] [176] [195] FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) <ref> [79] </ref> [8] Multi-way balanced [11] Min-Delay Clustering [140] [45] [151] [191] Absorption [179] [4] DS [82] [4] Density [101] Replication [122] [104] MCM/Quadrisection [178] [159] [158] Table 1: Various partitioning formulations and some works that provide corresponding experimental results.
Reference: [80] <author> L. Hagen and A. B. Kahng. </author> <title> Fast spectral methods for ratio cut partitioning and clustering. </title> <booktitle> In Proc. IEEE Intl. Conf. Computer-Aided Design, </booktitle> <pages> pages 10-13, </pages> <year> 1991. </year>
Reference-contexts: Early uses of this representation were in both partitioning [112] and placement [146]. Note that the intersection graph is typically quite sparse due to module fanout limits <ref> [80] </ref>. * Dual Hypergraph: A slightly different net-oriented representation is the dual hypergraph H (V 0 ; E 0 ), which has the same vertex set V 0 fe 1 ; e 2 ; : : : ; e m g as the intersection graph. <p> This algorithm has also been widely used by the sparse matrix computation community; Pothen et al. [148] have used it as the basis of a vertex separator algorithm and Hendrickson and Leland [96] have extended it to partitioning onto hypercube or mesh architectures. Also, Hagen and Kahng <ref> [80] </ref> extended spectral bisection to ratio cut bipartitioning by choosing the best ratio cut that results from each possible split of the sorted coordinates of ~ 2 . We observe that spectral bisection may perform arbitrarily worse than optimal, as illustrated by the following example. <p> We believe that whether to use area information, which balance constraints apply, etc. are issues that can be addressed by identifying benchmarks (or benchmark variants) that are particularly suited for specific formulations. 82 Objective Papers Ratio Cut (unit area) [187] <ref> [80] </ref> [188] [48] [51] [156] Ratio Cut (module area) [51] [31] 45/55 Bipartitioning [156] [190] [94] [6] Bisection (unit area) [94] Bisection (module area) [188] [82] [51] [176] [195] FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack <p> Previous spectral 16 Such studies can call into question the conclusions drawn in oft-cited works, in this case those of [123] [164] [189] regarding "lookahead" in iterative improvement strategies. 84 approaches that associate a single eigenvector with a cluster [18] or use only one eigenvector <ref> [80] </ref> may have inherent limitations. Works such as [68] [6] achieve solutions by associating a partitioning instance with the vector space comprised by multiple eigenvectors, yet heuristics for this representation are largely undeveloped.
Reference: [81] <author> L. Hagen and A. B. Kahng. </author> <title> Improving the quadratic objective function in module placement. </title> <booktitle> In Proc. IEEE Intl. ASIC Conf., </booktitle> <pages> pages 42-45, </pages> <year> 1992. </year>
Reference-contexts: separated by distance one [40]: since the minimum wirelength of a jej-pin net must be at least jej 1, the weighting should be inversely proportional to jej 1 so that the objective does not "try too hard" to place the modules into an impossibly small span of slots (also see <ref> [81] </ref>). If the span of a net is exactly jej 1, then D. J.-H. Huang showed that a weighting function of 6 jej (jej+1) gives the total wirelength jej 1 for the clique representation. <p> Notice the similarity between this approach and that of [19] in which the ~r h vectors are adjusted after each iteration until convergence. Hagen and Kahng <ref> [81] </ref> approximated the linear objective function by squaring it and ignoring the numerous mixed terms, yielding P ij (x i x j ) 2 , i.e., the traditional quadratic placement objective with squared coefficients. <p> The more general question of finding a value c such that a c ij (x i x j ) 2 best approximates linear wirelength was also raised. All of these placement techniques ([183] [177] <ref> [81] </ref>) can be used to iteratively generate a bipartitioning by solving the formulation, peeling off and fixing the extreme coordinates, and integrating these fixed coordinates into the next iteration.
Reference: [82] <author> L. Hagen and A. B. Kahng. </author> <title> A new approach to effective circuit clustering. </title> <booktitle> In Proc. IEEE Intl. Conf. Computer-Aided Design, </booktitle> <pages> pages 422-427, </pages> <year> 1992. </year>
Reference-contexts: The basic principles behind this approach were adopted by Hauck and Borriello [95] for FPGA partitioning onto an underlying topology (cf. the discussion of layout-driven formulations in Section 2.4). 61 An alternative taxonomy might classify the SPC approach along with the random-walk clustering algorithm of Hagen and Kahng <ref> [82] </ref> and the compaction algorithm of Karger [114]. All of these approaches rely on randomization to uncover the circuit structure. <p> The two-phase approach has been applied with many clustering algorithms, e.g., [3] [4] [29] [30] [51] <ref> [82] </ref> [94] [143] [176]; see Section 6.6 for a discussion of methods which integrate clustering into move-based approaches. 6.2 Agglomerative Clustering An agglomerative clustering algorithm begins with the n-way clustering P n = ffv 1 g; fv 2 g; : : : ; fv n gg and iteratively constructs P k <p> all maximal cycles are found in O (N ) time and then used to identify clusters. (Intuitively, a maximal cycle should identify a good cluster: if it contained any natural subcluster, a module in this subcluster would have likely appeared more than once within the maximal cycle.) Hagen and Kahng <ref> [82] </ref> assign v i and v j to the same cluster if their sameness is larger than zero, where sameness is computed as follows. Let CC (i; j) be the number of times that v j occurs in a cycle beginning at v i . <p> The differences in interpretations of the benchmarks can lead to discrepancies in the resulting inputs, and researchers may end up comparing the cuts of graphs and hypergraphs that are not the same. For example, the number of modules reported for the Test02-06 benchmarks is higher in [195] than in <ref> [82] </ref>, which is likely due to the interpretation of I/O pads. In other cases, problems may arise from netlist connectivity. <p> that can be addressed by identifying benchmarks (or benchmark variants) that are particularly suited for specific formulations. 82 Objective Papers Ratio Cut (unit area) [187] [80] [188] [48] [51] [156] Ratio Cut (module area) [51] [31] 45/55 Bipartitioning [156] [190] [94] [6] Bisection (unit area) [94] Bisection (module area) [188] <ref> [82] </ref> [51] [176] [195] FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced [11] Min-Delay Clustering [140] [45] [151] [191] Absorption [179] [4] DS [82] <p> <ref> [82] </ref> [51] [176] [195] FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced [11] Min-Delay Clustering [140] [45] [151] [191] Absorption [179] [4] DS [82] [4] Density [101] Replication [122] [104] MCM/Quadrisection [178] [159] [158] Table 1: Various partitioning formulations and some works that provide corresponding experimental results.
Reference: [83] <author> L. Hagen and A. B. Kahng. </author> <title> New spectral methods for ratio cut partitioning and clustering. </title> <journal> IEEE Trans. Computer-Aided Design, </journal> <volume> 11(9) </volume> <pages> 1074-1085, </pages> <year> 1992. </year>
Reference-contexts: given, say, a bipartition of signal nets, some modules will belong only to nets on one side of the partition and can be unambiguously assigned to that side, but other modules 46 will be shared by nets on both sides of the partition (cf. terms such as "boundary graph" [112] <ref> [83] </ref> or "module contention" [49]). We must therefore seek a completion of the net partition which assigns each shared module to a single cluster, such that the partition cost is minimized. <p> We must therefore seek a completion of the net partition which assigns each shared module to a single cluster, such that the partition cost is minimized. This general net-based partitioning approach (i.e., first obtain a net partition, then complete the net partition into a module partition) was established in <ref> [83] </ref> and extended in, e.g., [48] and [49] (see Section 5.2). If the nets are partitioned into two sets N 1 and N 2 , a module bipartitioning P 2 = fC 1 ; C 2 g can be derived by having the nets "vote" to determine each module assignment. <p> If the nets are partitioned into two sets N 1 and N 2 , a module bipartitioning P 2 = fC 1 ; C 2 g can be derived by having the nets "vote" to determine each module assignment. The IG-Vote algorithm of Hagen and Kahng <ref> [83] </ref> begins with all nets in N 1 and all modules in C 1 . Iteratively, a net is moved from N 1 to N 2 according to the net ordering. <p> A construction was first given by Bui et al. [29], and a simpler variant construction was given in <ref> [83] </ref>. * Bisection Specific: A graph in the class of random graphs G 2set (2n; p 1 ; p 2 ; bis) [30] has a given edge internal to n-vertex clusters C 1 and C 2 with probabilities p 1 and p 2 , respectively.
Reference: [84] <author> L. Hagen and A. B. Kahng. </author> <title> Combining problem reduction and adaptive multi-start: A new technique for superior iterative partitioning. </title> <journal> IEEE Trans. </journal> <note> Computer-Aided Design (to appear), </note> <year> 1993. </year>
Reference-contexts: This formulation has become popular in the recent literature, both for its greater practical relevance and as an added basis for algorithm comparisons, e.g., [156] [190] present results using unit module areas and L = 9n 20 , and [188] <ref> [84] </ref> present results using actual module areas and L = 1 4 i w (v i ), 4 i w (v i ) (see Section 7). Rather than minimizing cutsize subject to cluster size constraints, the cutsize and balance criteria can be smoothly intergrated into the partitioning objective.
Reference: [85] <author> L. Hagen, A. B. Kahng, F. J. Kurdahi, and C. Ramachandran. </author> <title> On the intrinsic rent parameter and spectra-based partitioning methodologies. </title> <journal> IEEE Trans. Computer-Aided Design, </journal> <volume> 13(1) </volume> <pages> 27-37, </pages> <year> 1994. </year>
Reference-contexts: propose an agglomerative algorithm based on Rent's rule; Rent's rule describes an average-case phenomenon in "good" circuit placements, i.e., that there is a power-law relationship jE (C)j = d (C) jCj r between the number of edges incident to a cluster and the size of the cluster (see [128] and <ref> [85] </ref> for reviews). Here, d (C) = 1 jCj v2C deg (v) is the average degree of modules in the cluster. Because the layout has finite size, the power-law relationship eventually breaks down when the number of clusters is small. <p> However, the connection between such results for placement (where the netlist is embedding in the plane) and the clustering domain (where the netlist is "free") remains unclear (cf. <ref> [85] </ref>).
Reference: [86] <author> L. W. Hagen, D. J.-H. Huang, and A. B. Kahng. </author> <title> On implementation choices for iterative improvement partitioning algorithms. </title> <journal> IEEE Trans. Computer-Aided Design (submitted), </journal> <year> 1995. </year>
Reference-contexts: He suggested that the lack of an "intelligent" tie-breaking mechanism from among the many possible modules in the highest-gain bucket could cause FM to make "bad" choices. Hagen et al. <ref> [86] </ref> observe that 15 to 30 modules will typically share the highest-gain value at any time during an FM pass on the Primary1 MCNC benchmark (833 modules). <p> Alternatively, a random organization could be implemented, though the time complexity would increase slightly since bucket selection could not be accomplished in constant time. Recently, the authors of <ref> [86] </ref> observed that Sanchis [164], and most likely Krishnamurthy [123] also, used random selection from gain buckets in their implementations. Furthermore, [86] observed that a LIFO gain bucket organization yields considerably superior solutions than either the FIFO or random bucket organization, for both the FM and Krishnamurthy algorithms. (This result seems <p> Alternatively, a random organization could be implemented, though the time complexity would increase slightly since bucket selection could not be accomplished in constant time. Recently, the authors of <ref> [86] </ref> observed that Sanchis [164], and most likely Krishnamurthy [123] also, used random selection from gain buckets in their implementations. Furthermore, [86] observed that a LIFO gain bucket organization yields considerably superior solutions than either the FIFO or random bucket organization, for both the FM and Krishnamurthy algorithms. (This result seems quite surprising: if anything, "folklore" would have it that introducing randomness can improve solution quality by increasing the range of the <p> Hagen et al. <ref> [86] </ref> use this idea of locality to propose an alternative formula for higher-level gains which also improves performance. <p> Hence, a sequence of consecutive moves from C 1 to C 2 may determine a natural cluster. This observation was also made by Hagen et al. <ref> [86] </ref>, who showed that a LIFO FM gain bucked organization encouraged the movement of entire clusters of modules (see Section 3.1.3). Finally, we note an intriguing approach of Barnard and Simon [17] that applies clustering to spectral bisection.
Reference: [87] <author> L. W. Hagen, D. J.-H. Huang, and A. B. Kahng. </author> <title> Quantified suboptimality of vlsi layout heuristics. </title> <journal> IEEE Trans. </journal> <note> Computer-Aided Design (to appear), </note> <year> 1995. </year>
Reference-contexts: to focus, as it has in recent years, on results for "real-world", as opposed to "artificial", instances? Note that (i) the provenance and functionality of benchmarks are often "sanitized" away so that it is unclear whether the benchmarks are representative; (ii) optimal solutions are never known for real-world instances (see <ref> [87] </ref> for a partial workaround); and (iii) any benchmark suite (as opposed to a generator for a class of (random) instances) is limited in size, which can in turn limit the significance of comparisons. * Should industry users of CAD algorithms be more forthcoming with real-world test cases? Note that the <p> (iii) public availability of partitioning codes, test instances, and actual partitioning solutions used in reported results, (iv) elimination of biases against nascent "future algorithm technologies" which may not yet be competitive in terms of both solution quality and efficiency, (v) more creative criteria for algorithms (cf. the "self-scaling" concept in <ref> [87] </ref>), and (vi) more complete descriptions of experimental protocols, along with more statistically meaningful data.
Reference: [88] <author> B. Hajek. </author> <title> Cooling schedules for optimal annealing. </title> <journal> Mathematics of Operations Research, </journal> <volume> 13(2) </volume> <pages> 311-329, </pages> <year> 1988. </year>
Reference-contexts: To control the rate of convergence and the strategy for exploring the solution space, the user typically establishes a temperature schedule by which T varies, e.g., as a function of the number of moves made. The SA algorithm enjoys certain theoretical attractions [72] <ref> [88] </ref> (see also [127]): using Markov chain arguments and properties of Gibbs-Boltzmann statistics, one can show that SA will converge to a globally optimum solution given an infinite number of moves and a temperature schedule that cools to zero sufficiently slowly.
Reference: [89] <author> K. M. Hall. </author> <title> An r-dimensional quadratic placement algorithm. </title> <journal> Management Science, </journal> <volume> 17 </volume> <pages> 219-229, </pages> <year> 1970. </year>
Reference-contexts: By "equivalence", we mean that following the theorem derivation of each work using the spectra of Q leads to the identical result. 36 The remainder of this section is organized as follows. First, we discuss the one-dimensional place-ment algorithm of Hall <ref> [89] </ref>, and see how the second eigenvector ~ 2 gives the optimal solution for minimum-squared wirelength placement. A linear ordering of modules is obtained by sorting the entries of ~ 2 , and a heuristic bipartitioning can be derived from splitting the ordering. <p> Also observe that equation (4.1) gives the squared wirelength of the 1-dimensional placement given by ~x, even when the coordinates are allowed to be non-discrete, i.e., the x i 's are not restricted to integer values. Under the constraint jjxjj 2 = ~x T ~x = 1, Hall <ref> [89] </ref> showed that ~x = ~ 2 gives the optimal nontrivial 1-dimensional placement, with squared wirelength equal to 2 (note that ~ 1 gives the trivial zero-wirelength solution with all modules placed at coordinate 1 p n ). <p> Hall <ref> [89] </ref> also proposed a method for multi-way partitioning using the same eigenvector embedding as the authors of [37]. Since ~ 2 gives the optimal 1-dimensional placement with squared wirelength, Hall reasoned that the other low-cost eigenvector placements could also be utilized.
Reference: [90] <author> T. Hamada, C.-K. Cheng, and P. M. Chau. </author> <title> A wire length estimation technique utilizing neighborhood density equations. </title> <booktitle> In Proc. ACM/IEEE Design Automation Conf., </booktitle> <pages> pages 57-61, </pages> <year> 1992. </year>
Reference-contexts: This method seems to be the only "top-down clustering" approach in the literature. The clustering solutions were originally integrated within two-phase FM, and later used in a simulated-annealing based placement algorithm <ref> [90] </ref>. 76 Absorption: Sun and Sechen [179] believe that clusterings that maximize the Absorption objective are best suited for use in the TimberWolf simulated annealing-based placement program.
Reference: [91] <author> M. Hanan, P. K. Wolff, and B. J. Agule. </author> <title> A study of placement techniques. </title> <journal> J. Design Automation and Fault-Tolerant Computing, </journal> <volume> 2 </volume> <pages> 28-61, </pages> <year> 1978. </year>
Reference-contexts: If the span of a net is exactly jej 1, then D. J.-H. Huang showed that a weighting function of 6 jej (jej+1) gives the total wirelength jej 1 for the clique representation. In a 2-dimensional layout, <ref> [91] </ref> assumes that the net will be a spanning tree with jej 1 edges; hence, if the weight for these edges is evenly distributed among the clique edges, the weight function should be (jej 1)= 2 = 2 jej .
Reference: [92] <author> J. Hao and J. B. Orlin. </author> <title> A faster algorithm for finding the minimum cut in a graph. </title> <booktitle> In Proc. ACM/SIAM Symp. Discrete Algorithms, </booktitle> <pages> pages 165-174, </pages> <address> Orlando, </address> <month> January </month> <year> 1992. </year>
Reference-contexts: Many algorithms are known which can solve the max-flow problem in polynomial time; see [75] [2] for surveys. Note however that finding a minimum cut does not necessarily require a maximum flow; fast techniques to find minimum cuts <ref> [92] </ref> [114] [141] are noted in Section 5 below. Optimal solutions to Min-Cut Bipartitioning will often be quite unbalanced and are thus not useful within a hierarchical design methodology; however, these solutions may form the basis of a useful heuristic [190] [191]. <p> This process continues until every node in the tree corresponds to a singleton cluster, and the global min-cut is determined by the edge in the tree with lowest cost. Hao and Orlin <ref> [92] </ref> also showed how to find a min-cut bipartitioning using O (n) flow computations, with total time equivalent to to that of just one flow computation. They compute a sequence of S t 0 cuts where S is a set condensed into a single node and S = fsg initially.
Reference: [93] <author> N. Hasan and C. L. Liu. </author> <title> Minimum fault coverage in reconfigurable arrays. </title> <booktitle> In IEEE Intl. Symp. on Fault-Tolerant Computing Systems, </booktitle> <pages> pages 248-353, </pages> <year> 1988. </year>
Reference-contexts: Cong et al. [48] construct an MIS S using the algorithm of <ref> [93] </ref> and assign each contested module v to C i if there exists an e 2 S " N (v) 59 with e 2 N i .
Reference: [94] <author> S. Hauck and G. Borriello. </author> <title> An evaluation of bipartitioning techniques. </title> <booktitle> In Proc. </booktitle> <address> Chapel Hill Conf. </address> <note> on Adv. Research in VLSI (to appear), </note> <year> 1995. </year>
Reference-contexts: Hence, the r th -level gain counts the additional number of nets that may possibly become uncut following r moves. Note that the 1 st -level gain is identical to the gain in the FM algorithm. Although the benefit of higher-level gains is well-documented (e.g., <ref> [94] </ref>), small modifications might improve performance. For example, instead of combining the positive and negative gains into a single term, once could store both terms separately to afford a two-tiered r th -level comparison. <p> More importantly, it can be unclear which of these modifications really improves the algorithm and which are "simply different". (For example, the partitioning study <ref> [94] </ref> concludes that dual passes are not worth the extra runtime.) As we have previously discussed, small changes in implementation can greatly affect performance, so further study of modifications to iterative methods 34 is likely to be worthwhile; on the other hand, very detailed and systematic investigations are required if meaningful <p> The two-phase approach has been applied with many clustering algorithms, e.g., [3] [4] [29] [30] [51] [82] <ref> [94] </ref> [143] [176]; see Section 6.6 for a discussion of methods which integrate clustering into move-based approaches. 6.2 Agglomerative Clustering An agglomerative clustering algorithm begins with the n-way clustering P n = ffv 1 g; fv 2 g; : : : ; fv n gg and iteratively constructs P k from <p> In other words, this approach greedily selects a maximal subset of mutually disjoint nets, then contracts all the nets in this subset. This procedure is iteratively repeated on the contracted netlist until certain "fractal" criteria are met. Another scheme, proposed by Hauck and Borriello <ref> [94] </ref>, uses randomness and the merging criterion of [168]. <p> It is difficult to evaluate whether this method is the most effective use of FM passes: certainly, since FM passes come "cheaply" (in linear time), they can be integrated within a clustering scheme in many creative ways. Hauck and Borriello <ref> [94] </ref> discuss two unclustering methods which integrate cluster hierarchy into the application of FM. <p> The edge unclustering method only unclusters the modules incident to cut edges, allowing fine-grained optimization of these modules and coarse-grained optimization of the other modules to occur simultaneously. However, in practice, <ref> [94] </ref> prefer the iterative unclustering method. Saab [160] draws an analogy with simulated annealing that clustering (and unclustering) should not proceed too quickly since it might freeze the optimization process in a suboptimal solution. <p> The objective is of interest since ratio cut solutions tend to be highly unbalanced and hence impractical, yet exact bisections are too restrictive. This work has very quickly become a standard object of comparisons (cf. [6] <ref> [94] </ref> [190]). Many of the formulations listed in the Table are quite similar, e.g., the first five formulations are all bipartitioning variants. While it is unclear which formulation is "correct", all of the associated bipartitioning algorithms are certainly comparable in some sense. <p> While it is unclear which formulation is "correct", all of the associated bipartitioning algorithms are certainly comparable in some sense. It remains for the field to establish a reasoned basis by which heuristic variants, and associated experimental results, can be evaluated. For instance, Hauck and Borriello <ref> [94] </ref> recently completed an excellent study of FM-based bipartitioning algorithms, yet their results do not use unit area (rather, they set w (v) = deg (v) 2 for each v 2 V ). <p> use area information, which balance constraints apply, etc. are issues that can be addressed by identifying benchmarks (or benchmark variants) that are particularly suited for specific formulations. 82 Objective Papers Ratio Cut (unit area) [187] [80] [188] [48] [51] [156] Ratio Cut (module area) [51] [31] 45/55 Bipartitioning [156] [190] <ref> [94] </ref> [6] Bisection (unit area) [94] Bisection (module area) [188] [82] [51] [176] [195] FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced [11] Min-Delay <p> constraints apply, etc. are issues that can be addressed by identifying benchmarks (or benchmark variants) that are particularly suited for specific formulations. 82 Objective Papers Ratio Cut (unit area) [187] [80] [188] [48] [51] [156] Ratio Cut (module area) [51] [31] 45/55 Bipartitioning [156] [190] <ref> [94] </ref> [6] Bisection (unit area) [94] Bisection (module area) [188] [82] [51] [176] [195] FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced [11] Min-Delay Clustering [140] [45] [151] [191] <p> New criteria for clustering, as well as definitive studies correlating performance of the two-phase FM mechanism and the underlying clustering strategy, are still needed. Alternatives to the two-phase methodology are also well worth exploring. Works such as <ref> [94] </ref> provide important first steps in this direction. Finally, we have noted that the recent literature contains many heuristic forays and new problem variations, which is not unexpected when many new works are essentially evaluated by the numbers they achieve for a limited suite of (outdated) test cases.
Reference: [95] <author> S. Hauck and G. Borriello. </author> <title> Logic partition orderings for multi-fpga systems. </title> <booktitle> In Proc. ACM/SIGDA International Workshop on Field-Programmable Gate Arrays, </booktitle> <pages> pages 32-38, </pages> <year> 1995. </year>
Reference-contexts: However, SPC may tend to construct poorly balanced solutions since the clusters in the sorted list might all be very small. The basic principles behind this approach were adopted by Hauck and Borriello <ref> [95] </ref> for FPGA partitioning onto an underlying topology (cf. the discussion of layout-driven formulations in Section 2.4). 61 An alternative taxonomy might classify the SPC approach along with the random-walk clustering algorithm of Hagen and Kahng [82] and the compaction algorithm of Karger [114].
Reference: [96] <author> B. Hendrickson and R. Leland. </author> <title> An improved spectral graph partitioning algorithm for mapping parallel computations. </title> <type> Technical report, </type> <institution> Sandia National Laboratories, </institution> <month> September </month> <year> 1992. </year>
Reference-contexts: This algorithm has also been widely used by the sparse matrix computation community; Pothen et al. [148] have used it as the basis of a vertex separator algorithm and Hendrickson and Leland <ref> [96] </ref> have extended it to partitioning onto hypercube or mesh architectures. Also, Hagen and Kahng [80] extended spectral bisection to ratio cut bipartitioning by choosing the best ratio cut that results from each possible split of the sorted coordinates of ~ 2 .
Reference: [97] <author> A. G. Hoffman. </author> <title> The dynamic locking heuristic anew graph partitioning algorithm. </title> <booktitle> In Proc. IEEE Intl. Symp. Circuits and Systems, </booktitle> <pages> pages 173-176, </pages> <year> 1994. </year>
Reference-contexts: To rectify this behavior, Hoffman <ref> [97] </ref> proposed a dynamic locking mechanism which behaves like FM, except that when v is moved out of C i , every module in M (v) " C i becomes unlocked. This allows the neighbors of v in C i to also migrate out of C i .
Reference: [98] <author> J. Holland. </author> <title> Adaptation in Natural and Artificial Systems. </title> <publisher> University of Michigan Press, </publisher> <year> 1975. </year>
Reference-contexts: that the tabu search can in some sense concentrate its efforts on the most promising regions of the solution space. 3.4 Genetic Algorithms Genetic algorithms are motivated by Darwin's theory of natural selection in evolution, where "superior" members of a species produce more offspring in succeeding generations than "inferior" members <ref> [98] </ref>. A genetic algorithm (GA) starts with an initial population of solutions. This population evolves over generations, with the solutions in the current generation being replaced with a set of offspring solutions in the next generation. <p> The mutation operator enables small random perturbations to a given single solution. There exists some heuristic justification (cf. the "schema theorem" of <ref> [98] </ref>) for why such operators enable "good" solution characteristics to become more prevalent (and "bad" characteristics less prevalent) in the population with succeeding generations. The replacement scheme is the final component of a GA; it determines which offspring will replace which members of the current population.
Reference: [99] <author> T. C. Hu and K. Moerder. </author> <title> Multiterminal flows in a hypergraph. </title> <editor> In T. C. Hu and E. Kuh, editors, </editor> <title> VLSI Circuit Layout: </title> <booktitle> Theory and Design, </booktitle> <pages> pages 87-93. </pages> <publisher> IEEE Press, </publisher> <year> 1985. </year>
Reference-contexts: Alternatively, dummy modules may be inserted [106], e.g., the "star" model adds a dummy node for each net and connects every pin of the net to this dummy node (cf. the discussion of <ref> [99] </ref> in Section 5.2). * Intersection Graph: One can view the netlist partitioning problem in terms of partitioning nets instead of modules. <p> After an S t 0 cut is computed, t 0 is added to S, a new t 0 is chosen and the process repeated until S = V . The lowest-cost cut observed in this sequence gives the optimal min-cut bipartitioning. Hu and Moerder <ref> [99] </ref> showed how the Max-Flow Min-Cut duality can also be used to find a Min-Cut Bipartitioning in a hypergraph. <p> Kamidoi et al. [113] earlier proposed a similar technique for hypergraph bisection. They first transform the netlist into a graph G (V; E) using the star net model of <ref> [99] </ref>. They then divide the nodes of this graph into module nodes V M and net nodes V N . Breadth-first search is used to find an articulation set (i.e., a vertex separator) S V M that separates V into two clusters C 1 and C 2 .
Reference: [100] <author> D. J.-H. Huang and A. B. Kahng. </author> <title> Multi-way system partitioning into single or multiple type fpgas. </title> <booktitle> In Proc. ACM/SIGDA International Workshop on Field-Programmable Gate Arrays, </booktitle> <pages> pages 140-145, </pages> <year> 1995. </year>
Reference-contexts: This formulation has also been studied in, e.g., [44] <ref> [100] </ref>. <p> The DP-RP result highlights the problem of finding 1-dimensional netlist representations which will lead to good multi-way partitioning solutions. Alpert and Yao [6] have applied DP-RP to their (MELO) orderings (see also the discussions of [4] <ref> [100] </ref> [101] in Section 6). <p> (1) ; C (2) nC (1) ; C (3) n (C (1) [ C (2) ); : : : ; C (k) n (C (1) [ C (2) [ : : : [ C (k1) ) are mutually disjoint, feasible clusters. (This result was extended to Multiple-Device FPGA Partitioning in <ref> [100] </ref>.) Thus, one may find a minimum set covering of the modules, i.e., a minimum set of feasible clusters that covers (contains) all the modules, and this partitioning can always be transformed into a non-overlapping partitioning with the same number of clusters. <p> variants) that are particularly suited for specific formulations. 82 Objective Papers Ratio Cut (unit area) [187] [80] [188] [48] [51] [156] Ratio Cut (module area) [51] [31] 45/55 Bipartitioning [156] [190] [94] [6] Bisection (unit area) [94] Bisection (module area) [188] [82] [51] [176] [195] FPGA Devices [125] [126] [44] <ref> [100] </ref> [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced [11] Min-Delay Clustering [140] [45] [151] [191] Absorption [179] [4] DS [82] [4] Density [101] Replication [122] [104] MCM/Quadrisection [178] [159] <p> (as opposed to a generator for a class of (random) instances) is limited in size, which can in turn limit the significance of comparisons. * Should industry users of CAD algorithms be more forthcoming with real-world test cases? Note that the literature for, e.g., the Multi-Way FPGA Device formulation [44] <ref> [100] </ref> includes test cases that presently can be obtained only under a signed nondisclosure agreement. 7.2 Perspectives We conclude our work by listing what we consider to be promising directions for future research.
Reference: [101] <author> D. J.-H. Huang and A. B. Kahng. </author> <title> When clusters meet partitions: New density-based methods for circuit decomposition. </title> <booktitle> In Proc. European Design and Test Conf. (to appear), </booktitle> <month> March </month> <year> 1995. </year>
Reference-contexts: The Density objective <ref> [101] </ref> maximizes the sum of cluster densities, where the density of a cluster C is the number of hyperedges completely contained in C, divided by the the weight of C: Density: Maximize F (P k ) = h=1 w (C h ) Density differs from Absorption in that only nets completely <p> The DP-RP result highlights the problem of finding 1-dimensional netlist representations which will lead to good multi-way partitioning solutions. Alpert and Yao [6] have applied DP-RP to their (MELO) orderings (see also the discussions of [4] [100] <ref> [101] </ref> in Section 6). <p> In addition, directed edges (s; v) 8v 2 V 1 and (w; t) 8w 2 V 2 are added to the flow network. We now discuss various partitioning formulations that can be solved with bipartite graphs and/or flow networks. Huang and Kahng <ref> [101] </ref> use bipartite flow (specifically, the "provisioning" formulation from Lawler [129]) to find the maximum-density cluster (i.e., subhypergraph) C of a hypergraph H (V; E), where den (C) = w (C) (see Section 2.4). <p> Cluster C 1 is then removed from the circuit and the algorithm is repeated until the circuit has less than U modules. The strategy of finding a good cluster and "peeling" it from the circuit has used in <ref> [101] </ref> for the Density objective (see Section 5.2). Chou et al. apply their clusterings to the FPGA Set Covering formulation discussed in Section 5.5. <p> [195] FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced [11] Min-Delay Clustering [140] [45] [151] [191] Absorption [179] [4] DS [82] [4] Density <ref> [101] </ref> Replication [122] [104] MCM/Quadrisection [178] [159] [158] Table 1: Various partitioning formulations and some works that provide corresponding experimental results.
Reference: [102] <author> M. Hulin. </author> <title> Circuit partitioning with genetic algorithms using a coding scheme to preserve the structure of the circuit. </title> <booktitle> In Parallel Problem Solving from Nature, </booktitle> <pages> pages 75-79. </pages> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: The mutation operator essentially swaps large subsets of bad vertices. Finally, GAs for multi-way partitioning have been proposed by Chandrasekharam et al. [39] and Hulin <ref> [102] </ref>. Local Search Hybrids and Multi-Start Because GAs are ill-equipped to search a prescribed region of the solution space for local optima, a given GA may take fairly long to find a good solution, if it finds one at all [31].
Reference: [103] <author> J. Hwang and A. El Gamal. </author> <title> Optimal replication for min-cut partitioning. </title> <booktitle> In ICCAD, </booktitle> <pages> pages 432-435, </pages> <year> 1992. </year>
Reference-contexts: Replication can also reduce the number of interchip wires along a given path, increasing system performance. There are three forms of replication in the literature, respectively involving directed graphs <ref> [103] </ref>, hypergraphs with source and destination information [122], and functional information [126] (i.e., the actual logic functions must be known in addition to the circuit topology). Consider the directed graph shown in Figure 3 (a), in which module v represents an N -input decoder circuit. <p> The following rules are used to modify the edge set E when v 2 C h is replicated into v 0 2 C l . Directed Graph Replication Rules: <ref> [103] </ref> * For each (v; w) with w 2 C l , replace (v; w) with (v 0 ; w). * For each (w; v) 2 E, add (w; v 0 ) to E. <p> Thus, e 1 is still cut only once, but if a directed tree representation and the directed graph rules were applied (as in <ref> [103] </ref>), both the edges (S (e 1 ); v 0 ) and (S (e 1 ); w) would cross the cut. The third replication formulation is due to Kuznar et al. [126] and assumes functional knowledge of the circuit. <p> The Min-Cut Replication Problem of Hwang and El Gamal <ref> [103] </ref> seeks a collection of subsets of modules fC fl ij j C fl that minimizes F (P kfl ), where P kfl is the partitioning that results when each subset C fl ij is replicated from C i to C j . (Hwang and El Gamal implicitly assume each C <p> results when each subset C fl ij is replicated from C i to C j . (Hwang and El Gamal implicitly assume each C i contains a subset I i of primary inputs that cannot be replicated.) We now show how to solve this formulation optimally for k = 2 <ref> [103] </ref>; the problem can be solved optimally for k &gt; 2 by solving k independent 2-way replication instances [104]. 53 Given a bipartitioning P 2 = fC 1 ; C 2 g, we seek a subset C fl = C fl 12 C 1 I 1 such that the number of
Reference: [104] <author> J. Hwang and A. El Gamal. </author> <title> Optimal replication for min-cut partitioning. </title> <journal> IEEE Trans. Computer-Aided Design, </journal> <volume> 14(1) </volume> <pages> 96-106, </pages> <year> 1995. </year> <month> 89 </month>
Reference-contexts: El Gamal implicitly assume each C i contains a subset I i of primary inputs that cannot be replicated.) We now show how to solve this formulation optimally for k = 2 [103]; the problem can be solved optimally for k &gt; 2 by solving k independent 2-way replication instances <ref> [104] </ref>. 53 Given a bipartitioning P 2 = fC 1 ; C 2 g, we seek a subset C fl = C fl 12 C 1 I 1 such that the number of edges from modules in C 1 I 1 C fl to modules in C fl [ C 2 <p> Since no edges in E 0 t 2 , and C fl = C 0 2 C 2 is the optimum set of modules to replicate from C 1 . Optimality follows directly from the Max-Flow Min-Cut Theorem. In <ref> [104] </ref>, Hwang and El Gamal showed how to modify their flow network to solve min-cut replication for hypergraphs with signal information. While their formulation requires an input partitioning solution, it could be applied during the construction of a multi-way partitioning, and seems useful for pin-constrained (FPGA) formulations. <p> For example, one might apply the algorithm to the bipartition-ing fV C; Cg when a cluster C is close to satisfying the pin constraint jE (C)j IO. As a heuristic, <ref> [104] </ref> integrated their min-cut replication solution with a modified form of FM. Yang and Wong [192] slightly enhanced Hwang and El Gamal's approach to solve the min-cut replication problem while min imizing jC fl j as a secondary objective, breaking ties so that a min-cut with "minimum size" is found. <p> [125] [126] [44] [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced [11] Min-Delay Clustering [140] [45] [151] [191] Absorption [179] [4] DS [82] [4] Density [101] Replication [122] <ref> [104] </ref> MCM/Quadrisection [178] [159] [158] Table 1: Various partitioning formulations and some works that provide corresponding experimental results. Another weakness in the present "comparison-based literature" stems from having non-standard implementations of traditional algorithms, e.g., many researchers (including ourselves) have imple mented their own FM-based 2-way or multi-way partitioners.
Reference: [105] <author> T.-T. Hwang, R. M. Owens, and M. J. Irwin. </author> <title> Exploiting communication complexity for multilevel logic synthesis. </title> <journal> IEEE Trans. Computer-Aided Design, </journal> <volume> 9(10) </volume> <pages> 1017-1027, </pages> <month> October </month> <year> 1990. </year>
Reference-contexts: Sanchis' algorithm is then applied, with moves restricted so as to not create a cycle in the dependency graph. The approach also uses MFFC clustering (see Section 6), within a two-phase methodology. An interesting approach of [22] applies FM and a resynthesis technique of <ref> [105] </ref> to partitioning Boolean networks with functional information. The signals directed from C i to C j are encoded in C i . Since some of the signals might carry redundant information, this can reduce the number of signals from C i to C j .
Reference: [106] <author> E. Ihler, D. Wagner, and F. Wagner. </author> <title> Modeling hypergraphs by graphs with the same mincut properties. </title> <journal> Information Processing Letters, </journal> <volume> 45(4) </volume> <pages> 171-175, </pages> <month> March </month> <year> 1993. </year>
Reference-contexts: Ihler et al. <ref> [106] </ref> prove that such a "perfect" clique net model is impossible to achieve. In addition, Lengauer [133] shows that no matter what weighting function is used, there exists a bipartitioning with deviation ( p jej) from the desired cost of cutting a single net. <p> Thus, some existing methods discard large nets to maintain sparsity [37] [79]. An undirected graph can also be induced from a netlist by constructing random spanning trees, paths, or cycles over the pins in every signal net. Alternatively, dummy modules may be inserted <ref> [106] </ref>, e.g., the "star" model adds a dummy node for each net and connects every pin of the net to this dummy node (cf. the discussion of [99] in Section 5.2). * Intersection Graph: One can view the netlist partitioning problem in terms of partitioning nets instead of modules.
Reference: [107] <author> S. Iman, M. Pedram, C. Fabian, and J. Cong. </author> <title> Finding uni-directional cuts based on physical partitioning and logic restructuring. </title> <booktitle> In Proc. ACM/SIGDA Physical Design Workshop, </booktitle> <pages> pages 187-198, </pages> <address> Los Angeles, </address> <year> 1993. </year>
Reference-contexts: This specific construction is called the directed tree representation. A directed graph is particularly useful for flow, uni-directional cut, timing, and replication formulations. Sometimes this construction yields a directed acyclic graph (DAG), e.g., for combinational logic networks [50] <ref> [107] </ref>. in such a case, the set of primary inputs is denoted by P I = fv 2 V j 8 e 2 N (v); S (e) = vg and the set of primary outputs is denoted by P O = fv 2 V j 8 e 2 N (v); S <p> Bui et al. compute a minimum s t cut in the contracted graph for every possible choice of s and t, then combine the cuts to form a bisection. In bipartitioning a DAG subject to cluster size constraints, Iman et al. <ref> [107] </ref> similarly use flow computations to find a minimum s t cut and then, if size constraints are violated, contract the smaller cluster C into a single module with weight w (C).
Reference: [108] <author> H. Inayoshi and B. Manderick. </author> <title> The weighted graph bi-partitioning problem: A look at ga performance. </title> <booktitle> In Parallel Problem Solving from Nature, </booktitle> <pages> pages 617-625. </pages> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference-contexts: Designing each of these elements (crossover and mutation operators, selection scheme and replacement scheme) seems to be critical to the success of a genetic approach. Inayoshi and Manderick <ref> [108] </ref> studied weighted graph bisection, representing solutions as indicator vectors having equal numbers of 0's and 1's. The Hamming distance between two solutions ~x and ~y is given by d H (~x; ~y) = jj~x~yjj 2 , i.e., the number of entries in which ~x and ~y differ. <p> Thus, many researchers have successfully combined GAs with local optimization heuristics to form GA-local search hybrids, or hybrid GAs. For example, <ref> [108] </ref> applies KL to every member of the population; [31] [32] does the same with FM; and [8] do the same with tabu search. Recent works have shed some light on the mechanism by which GAs, and GA hybrids in particular, can find good solutions. <p> Recent works have shed some light on the mechanism by which GAs, and GA hybrids in particular, can find good solutions. Boese et al. [25] and Inayoshi and Manderick <ref> [108] </ref> observe that many of the best local optima are "close" to other local optima according to natural measures of distance in the neighborhood structure. Figure 7 depicts 2500 runs of a greedy pair-swapping heuristic on a random graph in the class G Bui (100; 4; 10) (see Section 7.1).
Reference: [109] <author> D. S. Johnson. </author> <title> Local optimization and the traveling salesman problem. </title> <booktitle> In Proc. of the 17th Intl. Colloquium on Automata, Languages and Programming, </booktitle> <pages> pages 446-460, </pages> <month> July </month> <year> 1990. </year>
Reference-contexts: consists of swapping a pair of modules, and the aspiration function is one less than the cost 7 It is instructive to compare the motivations for tabu search with those of other methods in the optimization literature, e.g., Baum's iterated descent [21] or the "iterated Lin-Kernighan" strategy used by Johnson <ref> [109] </ref> to address the traveling salesman problem.
Reference: [110] <author> D. S. Johnson, C. R. Aragon, L. A. McGeoch, and C. Schevon. </author> <title> Optimization by simulated annealing: An experimental evaluation part i, graph partitioning. </title> <journal> Operations Research, </journal> <volume> 37 </volume> <pages> 865-892, </pages> <year> 1989. </year>
Reference-contexts: The use of terms such as "cooling" and "temperature schedule" 23 are due to SA's analogy to physical annealing of a material into a ground-state energy configuration. For the Min-Cut Bisection problem, Johnson et al. <ref> [110] </ref> conducted an extensive empirical study of simulated annealing versus iterative improvement approaches, using various random graphs as a testbed (see Section 7.1). The authors of [110] conclude that SA is a competitive approach, outperforming KL for uniform and geometric random graphs. <p> For the Min-Cut Bisection problem, Johnson et al. <ref> [110] </ref> conducted an extensive empirical study of simulated annealing versus iterative improvement approaches, using various random graphs as a testbed (see Section 7.1). The authors of [110] conclude that SA is a competitive approach, outperforming KL for uniform and geometric random graphs. However, they suggest that multiple runs of KL with random starting solutions may be preferable to SA for sparse graphs that have local structure (a description that applies to circuit netlists). <p> Thus, experiments have been conducted on various classes of random graphs, including: 80 * Uniform: A graph G (n; p) has n vertices, with the edge between each pair of vertices indepen-dently present with probability p. Random graphs (and hypergraphs) have been used by e.g., <ref> [110] </ref> [187] [164]. See [26] for a review of graph-theoretic results established for this model. * Geometric: The graph U (n; d) [110] is generated by picking n random (x; y) coordinate pairs (corresponding to the n vertices) in the unit square, and introducing an edge between two vertices if the <p> Random graphs (and hypergraphs) have been used by e.g., <ref> [110] </ref> [187] [164]. See [26] for a review of graph-theoretic results established for this model. * Geometric: The graph U (n; d) [110] is generated by picking n random (x; y) coordinate pairs (corresponding to the n vertices) in the unit square, and introducing an edge between two vertices if the Euclidean distance between their corresponding (x; y) locations is no greater than d. * "Difficult" d-Regular: A graph is in the class
Reference: [111] <author> S. C. Johnson. </author> <title> Hierarchical clustering schemes. </title> <journal> Psychometrika, </journal> <volume> 32(3) </volume> <pages> 241-254, </pages> <year> 1967. </year>
Reference-contexts: Agglomerative clustering was first proposed by S. C. Johnson <ref> [111] </ref> for weighted complete graphs. The criterion for choosing clusters C h and C l is what distinguishes among agglomerative variants, e.g., [111] merges the two clusters that minimize the diameter of the new cluster C. <p> Agglomerative clustering was first proposed by S. C. Johnson <ref> [111] </ref> for weighted complete graphs. The criterion for choosing clusters C h and C l is what distinguishes among agglomerative variants, e.g., [111] merges the two clusters that minimize the diameter of the new cluster C.
Reference: [112] <author> A. B. Kahng. </author> <title> Fast hypergraph partition. </title> <booktitle> In Proc. ACM/IEEE Design Automation Conf., </booktitle> <pages> pages 762-766, </pages> <year> 1989. </year>
Reference-contexts: Two vertices e i ; e j 2 V 0 are adjacent if and only if e i " e j 6= ;, i.e., the nets share a module. Early uses of this representation were in both partitioning <ref> [112] </ref> and placement [146]. <p> are given, say, a bipartition of signal nets, some modules will belong only to nets on one side of the partition and can be unambiguously assigned to that side, but other modules 46 will be shared by nets on both sides of the partition (cf. terms such as "boundary graph" <ref> [112] </ref> [83] or "module contention" [49]). We must therefore seek a completion of the net partition which assigns each shared module to a single cluster, such that the partition cost is minimized.
Reference: [113] <author> Y. Kamidoi, S. Wakabayashi, J. Miyao, and N. Yoshida. </author> <title> A fast heuristic for hypergraph bisection. </title> <booktitle> In Proc. IEEE Intl. Symp. Circuits and Systems, </booktitle> <volume> volume 2, </volume> <pages> pages 1160-1163, </pages> <year> 1991. </year>
Reference-contexts: Kamidoi et al. <ref> [113] </ref> earlier proposed a similar technique for hypergraph bisection. They first transform the netlist into a graph G (V; E) using the star net model of [99]. They then divide the nodes of this graph into module nodes V M and net nodes V N .
Reference: [114] <author> D. Karger. </author> <title> Global min-cuts in rnc, and other ramifications of a simple min-cut algorithm. </title> <booktitle> In Proc. ACM/SIAM Symp. Discrete Algorithms, </booktitle> <pages> pages 21-30, </pages> <year> 1993. </year>
Reference-contexts: Many algorithms are known which can solve the max-flow problem in polynomial time; see [75] [2] for surveys. Note however that finding a minimum cut does not necessarily require a maximum flow; fast techniques to find minimum cuts [92] <ref> [114] </ref> [141] are noted in Section 5 below. Optimal solutions to Min-Cut Bipartitioning will often be quite unbalanced and are thus not useful within a hierarchical design methodology; however, these solutions may form the basis of a useful heuristic [190] [191]. <p> A randomized min-cut approach was proposed by Karger <ref> [114] </ref>: iteratively contract a random pair of incident modules into a cluster until only two clusters remain. <p> approach were adopted by Hauck and Borriello [95] for FPGA partitioning onto an underlying topology (cf. the discussion of layout-driven formulations in Section 2.4). 61 An alternative taxonomy might classify the SPC approach along with the random-walk clustering algorithm of Hagen and Kahng [82] and the compaction algorithm of Karger <ref> [114] </ref>. All of these approaches rely on randomization to uncover the circuit structure. For example, the nets between dense clusters are likely to be in many shortest paths, hence with high probability these nets will become saturated during the execution of the SPC algorithm. <p> This minimum-diameter 72 criterion was used for circuit bipartitioning in [3]: modules were first mapped to points (i.e., singleton clusters) in multi-dimensional space (see Section 4), the diameter criterion was used to merge clusters, the resulting clustering was used within two-phase FM. For undirected graphs, Karger <ref> [114] </ref> proposed a heuristic which begins with all vertices as isolated clusters. Iteratively, a random edge is chosen and its incident clusters are contracted into a single cluster (see Section 5.2).
Reference: [115] <author> H. Karloff. </author> <title> Linear programming. </title> <publisher> Birkhauser, </publisher> <year> 1991. </year>
Reference-contexts: A linear program (LP) requires every equation to be linear in terms of each variable. An LP can be solved in average-case polynomial time using the simplex method; interior methods such as that of Karmarkar have polynomial worst-case complexity; see e.g., <ref> [115] </ref> for a review. An integer linear program (ILP) is an LP with the additional constraint that the variables must take on integer values; solving general ILP instances is NP-Hard.
Reference: [116] <author> S. Kauffman and S. Levin. </author> <title> Toward a general theory of adaptive walks on rugged landscapes. </title> <journal> J. Theoretical Biology, </journal> <volume> 128 </volume> <pages> 11-45, </pages> <year> 1987. </year>
Reference-contexts: Figure 18 shows the FM solution cost distribution for the Primary2 benchmark; we see that the distribution is roughly normal and that the average FM solution is significantly worse than the best FM solution. This result reflects the "central limit catastrophe" <ref> [116] </ref> of move-based methods, i.e., that most local optima tend to be of only average quality.
Reference: [117] <author> B. W. Kernighan and S. Lin. </author> <title> An efficient heuristic procedure for partitioning graphs. </title> <journal> Bell Syst. Tech. J., </journal> <volume> 49(2) </volume> <pages> 291-307, </pages> <year> 1970. </year>
Reference-contexts: Sections 3 through 6 survey four major categories of partitioning approaches: * Section 3 discusses move-based approaches: we classify an algorithm in this category if it explores the solution space by moving from one solution to another. Greedy and iterative exchange <ref> [117] </ref> approaches are most common these always try to make the best move, but can easily can trapped in local minima. To avoid this behavior, many other strategies have been proposed including stochastic hill-climbing (simulated annealing), evolutionary algorithms, and the multi-start strategy. <p> Due to these methods, iterative improvement remains a viable strategy, particularly when clustering techniques are integrated (see Section 6). 3.1.1 The Kernighan-Lin (KL) Algorithm In 1970, Kernighan and Lin <ref> [117] </ref> introduced what is often described as the first "good" graph bisection heuristic. Their algorithm uses a pair-swap neighborhood structure and proceeds in a series of passes.
Reference: [118] <author> S. Khan and V. Madisetti. </author> <title> Yield-based system partitioning strategies for mcm and sem design. </title> <booktitle> In Proc. IEEE Intl. Symp. Circuits and Systems, </booktitle> <pages> pages 144-149, </pages> <year> 1994. </year>
Reference-contexts: The algorithm iteratively solves the two problems separately and uses the two solutions to reformulate for the next iteration, until the solutions converge. We note one final quadratic (boolean) formulation due to Khan and Madisetti <ref> [118] </ref> which integrates area, pin, and yield constraints for MCM partitioning. They apply a linearization technique which 63 approximates the QBP by an ILP, adding a new constraint for each variable in the objective.
Reference: [119] <author> S. Kirkpatrick, C. D. Gelatt, Jr., and M. P. Vecchi. </author> <title> Optimization by simulated annealing. </title> <journal> Science, </journal> <volume> 220 </volume> <pages> 671-680, </pages> <year> 1983. </year>
Reference-contexts: For this objective, the r th -level gain is fl r (v) = j fe 2 E (fvg) s:t: fi C i (e) = r; fi C j (e) &gt; 0g j 3.2 Simulated Annealing Simulated Annealing (SA) was popularized by Kirkpatrick et al. <ref> [119] </ref> as an alternative to greedy approaches, which are quickly trapped in local minima since they can only make downhill moves. Given a neighborhood structure and a current solution, SA picks a random neighbor of the current solution and moves to this new solution if it represents a downhill move.
Reference: [120] <author> J. M. Kleinhans, G. Sigl, F. M. Johannes, and K. J. Antreich. GORDIAN: </author> <title> VLSI placement by quadratic programming and slicing optimization. </title> <journal> IEEE Trans. Computer-Aided Design, </journal> <volume> 10(3) </volume> <pages> 356-365, </pages> <year> 1991. </year>
Reference-contexts: The premise of their PARABOLI approach is that the squared wirelength objective is not as useful as a linear wirelength objective for 1-dimensional placement; this insight derives from experiments with the GORDIAN placement package <ref> [120] </ref>. The authors of [156] begin with the 1-dimensional placement induced by ~ 2 ; the ten modules with largest coordinates are fixed at location 1.0, and the ten modules with smallest coordinates are fixed at location 0.0. <p> For example, spectral computations proposed in 48 the early 1970's have become viable for netlist partitioning, and the quadratic programming iteration behind GORDIAN-type cell placement programs <ref> [120] </ref> now drives many of the latest industry placement packages. Many of these "rediscovered" combinatorial optimizations are well-studied and have either polynomial-time optimal solutions (e.g., network flow) or highly-developed heuristic tools (e.g., Espresso II for set covering). <p> Since Q fifi is real, symmetric, positive definite and diagonally dominant, convergence is guaranteed; in practice, SOR converges in time nearly linear in the number of modules. Kleinhans et al. <ref> [120] </ref> applied quadratic programming to a hypergraph representation in their GORDIAN cell placement program. Each net e has an associated location x e = 1 jej v i 2e x i which is the "center of gravity" of all of its pins.
Reference: [121] <author> K. Kozminski. </author> <title> Benchmarks of layout synthesis evolution and current status. </title> <booktitle> In Proc. ACM/IEEE Design Automation Conf., </booktitle> <pages> pages 265-270, </pages> <year> 1991. </year>
Reference-contexts: The benchmarks that most commonly appear in experiments in the literature belong to the LayoutSynthesis90 and 92, ISCAS85 and 89 <ref> [121] </ref>, and PDWorkshop93 suites; for FPGA partitioning, the Partitioning93 suite is typically used. All of these benchmarks were originally designed for either placement or synthesis, hence each experimenter must translate the benchmark to some usable partitioning format.
Reference: [122] <author> C. Kring and A. R. </author> <title> Newton. A cell-replicating approach to mincut-based circuit partitioning. </title> <booktitle> In Proc. IEEE Intl. Conf. Computer-Aided Design, </booktitle> <pages> pages 2-5, </pages> <year> 1991. </year>
Reference-contexts: constraint: each module has an associated "cell type" and each FPGA device can only contain a fixed number of modules of each cell type. 2.6 Replication Formulations The final class of formulations that we preview removes the assumption that clusters are disjoint, i.e., a module can belong to multiple clusters <ref> [122] </ref>. Replicating modules can reduce the cutsize, and is particularly useful for FPGA partitioning since many device architectures seem more I/O-limited or interconnect-limited than logic-limited. Replication can also reduce the number of interchip wires along a given path, increasing system performance. <p> Replication can also reduce the number of interchip wires along a given path, increasing system performance. There are three forms of replication in the literature, respectively involving directed graphs [103], hypergraphs with source and destination information <ref> [122] </ref>, and functional information [126] (i.e., the actual logic functions must be known in addition to the circuit topology). Consider the directed graph shown in Figure 3 (a), in which module v represents an N -input decoder circuit. <p> Notice that the 2 N edges were removed in Figure 3 (b) according to the first rule, and the addition of N edges followed from the second rule. These rules can be extended to hypergraphs, where source and destination information are known <ref> [122] </ref>. The following rules are used to modify the edge set E when v 2 C h is replicated into v 0 2 C l . <p> The gain is the decrease in cost of the partitioning solution resulting from the move. Due to the complexity of the gain computation, a dual pass typically requires around 9-10 times the CPU of a primal pass. Kring and Newton <ref> [122] </ref> extended FM to include module replication moves. The gain for replicating a module v is the change in cutsize resulting from applying the replication rules in Section 2.6. <p> For hypergraphs with signal information, the gain is the number of cut nets for which v is a source, minus the number of uncut nets for which v is a destination. The authors of <ref> [122] </ref> observe that once a module v is replicated, v tends to remain replicated, so that modules in M (v) tend to remain in their clusters. <p> Separate structures permit the unreplication of a module if its unreplication gain is higher than a prescribed threshold, even if better moves are available. <ref> [122] </ref> also prescribes a minimum replication gain threshold below which a module replication is prohibited, even if it is the best move available. <p> Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced [11] Min-Delay Clustering [140] [45] [151] [191] Absorption [179] [4] DS [82] [4] Density [101] Replication <ref> [122] </ref> [104] MCM/Quadrisection [178] [159] [158] Table 1: Various partitioning formulations and some works that provide corresponding experimental results. Another weakness in the present "comparison-based literature" stems from having non-standard implementations of traditional algorithms, e.g., many researchers (including ourselves) have imple mented their own FM-based 2-way or multi-way partitioners.
Reference: [123] <author> B. Krishnamurthy. </author> <title> An improved min-cut algorithm for partitioning VLSI networks. </title> <journal> IEEE Trans. Computers, </journal> <volume> 33(5) </volume> <pages> 438-446, </pages> <year> 1984. </year>
Reference-contexts: If the bucket indexed by M AXGAIN becomes empty, then M AXGAIN is decreased until it indexes a non-empty bucket. 3.1.3 Tie-Breaking Strategies A frequently cited enhancement to FM is that of Krishnamurthy <ref> [123] </ref>. He suggested that the lack of an "intelligent" tie-breaking mechanism from among the many possible modules in the highest-gain bucket could cause FM to make "bad" choices. <p> Alternatively, a random organization could be implemented, though the time complexity would increase slightly since bucket selection could not be accomplished in constant time. Recently, the authors of [86] observed that Sanchis [164], and most likely Krishnamurthy <ref> [123] </ref> also, used random selection from gain buckets in their implementations. <p> Third, spectral approaches that utilize multiple eigenvectors appear promising. Previous spectral 16 Such studies can call into question the conclusions drawn in oft-cited works, in this case those of <ref> [123] </ref> [164] [189] regarding "lookahead" in iterative improvement strategies. 84 approaches that associate a single eigenvector with a cluster [18] or use only one eigenvector [80] may have inherent limitations.
Reference: [124] <author> B. Krishnamurthy. </author> <title> Constructing test cases for partitioning heuristics. </title> <journal> IEEE Trans. Computers, </journal> <volume> C-36(9):1112-1114, </volume> <month> September </month> <year> 1987. </year>
Reference-contexts: See also such works as [1]. Other, more complex random constructions have also been proposed, e.g., <ref> [124] </ref> [161].
Reference: [125] <author> R. Kuznar, F. Brglez, and K. Kozminski. </author> <title> Cost minimization of partitions into multiple devices. </title> <booktitle> In Proc. ACM/IEEE Design Automation Conf., </booktitle> <pages> pages 315-320, </pages> <year> 1993. </year>
Reference-contexts: In FPGA partitioning, a cluster corresponds to an FPGA device (i.e., a chip), so that the circuitry of the modules and the connections in the cluster must be mappable onto the chip. If all the devices are of the same type, Kuznar et al. <ref> [125] </ref> proposes finding a feasible solution that minimizes the number of devices. <p> Let = fD 1 ; D 2 ; : : : ; D r g denote a library of devices and let dev : 2 V ! be a partial mapping of possible clusters to the lowest-cost device types for which they are feasible. The multiple-device FPGA partitioning problem <ref> [125] </ref> is: Multiple-Device FPGA Partitioning: Given a library of devices , find P k = fC 1 ; C 2 ; : : :C k g and a partial mapping dev such that every C h 2 P k is feasible with respect to dev (C h ) and F (P <p> A related satisficing formulation for MCM partitioning was addressed by Chen et al. [42]; their method solves the linear programming relaxation of an integer program, converts to a feasible solution, and then applies a KL-based post-processing step. Kuznar et al. <ref> [125] </ref> recursively apply FM bipartitioning to address the Multiple Device FPGA problem. For a given library of devices and number of modules in the circuit, an integer linear program (ILP) can be solved to find a set of devices that yields a lower bound on cost. <p> benchmarks (or benchmark variants) that are particularly suited for specific formulations. 82 Objective Papers Ratio Cut (unit area) [187] [80] [188] [48] [51] [156] Ratio Cut (module area) [51] [31] 45/55 Bipartitioning [156] [190] [94] [6] Bisection (unit area) [94] Bisection (module area) [188] [82] [51] [176] [195] FPGA Devices <ref> [125] </ref> [126] [44] [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced [11] Min-Delay Clustering [140] [45] [151] [191] Absorption [179] [4] DS [82] [4] Density [101] Replication [122] [104]
Reference: [126] <author> R. Kuznar, F. Brglez, and B. Zajc. </author> <title> Multi-way netlist partitioning into heterogeneous fpgas and minimization of total device cost and interconnect. </title> <booktitle> In Proc. ACM/IEEE Design Automation Conf., </booktitle> <pages> pages 238-243, </pages> <year> 1994. </year>
Reference-contexts: Replication can also reduce the number of interchip wires along a given path, increasing system performance. There are three forms of replication in the literature, respectively involving directed graphs [103], hypergraphs with source and destination information [122], and functional information <ref> [126] </ref> (i.e., the actual logic functions must be known in addition to the circuit topology). Consider the directed graph shown in Figure 3 (a), in which module v represents an N -input decoder circuit. <p> The third replication formulation is due to Kuznar et al. <ref> [126] </ref> and assumes functional knowledge of the circuit. The key idea is that if one knows the actual function of a module, then not all of the incoming signals may be required by both copies of the replicated module. <p> When a pass starting from the best solution does not yield any improvement, a second pass starting from the second-best solution is performed. Only if this pass also fails to yield improvement does the algorithm terminate. In <ref> [126] </ref>, Kuznar et al. extend this algorithm to include functional replication (see Section 2.6). 3.5.4 Layout-Driven Formulations To map modules onto an underlying tree structure, Vijayan [186] applies a variant of Sanchis' algorithm but with no lookahead gains. <p> (or benchmark variants) that are particularly suited for specific formulations. 82 Objective Papers Ratio Cut (unit area) [187] [80] [188] [48] [51] [156] Ratio Cut (module area) [51] [31] 45/55 Bipartitioning [156] [190] [94] [6] Bisection (unit area) [94] Bisection (module area) [188] [82] [51] [176] [195] FPGA Devices [125] <ref> [126] </ref> [44] [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced [11] Min-Delay Clustering [140] [45] [151] [191] Absorption [179] [4] DS [82] [4] Density [101] Replication [122] [104] MCM/Quadrisection
Reference: [127] <author> P. J. M. Laarhoven and E. H. L. Aarts. </author> <title> Simulated Annealing: Theory and Applications. </title> <address> D.Reidel, Boston, </address> <year> 1987. </year>
Reference-contexts: To control the rate of convergence and the strategy for exploring the solution space, the user typically establishes a temperature schedule by which T varies, e.g., as a function of the number of moves made. The SA algorithm enjoys certain theoretical attractions [72] [88] (see also <ref> [127] </ref>): using Markov chain arguments and properties of Gibbs-Boltzmann statistics, one can show that SA will converge to a globally optimum solution given an infinite number of moves and a temperature schedule that cools to zero sufficiently slowly.
Reference: [128] <author> B. Landman and R. Russo. </author> <title> On a pin versus block relationship for partition of logic graphs. </title> <journal> IEEE Trans. Computers, </journal> <volume> C-20:1469, </volume> <year> 1971. </year>
Reference-contexts: al. [143] propose an agglomerative algorithm based on Rent's rule; Rent's rule describes an average-case phenomenon in "good" circuit placements, i.e., that there is a power-law relationship jE (C)j = d (C) jCj r between the number of edges incident to a cluster and the size of the cluster (see <ref> [128] </ref> and [85] for reviews). Here, d (C) = 1 jCj v2C deg (v) is the average degree of modules in the cluster. Because the layout has finite size, the power-law relationship eventually breaks down when the number of clusters is small.
Reference: [129] <author> E. L. Lawler. </author> <title> Combinatorial Optimization: Networks and Matroids. </title> <publisher> Holt, Rinehart, and Winston, </publisher> <year> 1976. </year>
Reference-contexts: The minimum vertex separator can be found by maximum-flow after transforming this node-capacitated flow network into an edge-capacitated network G 0 (V 0 ; E 0 ) using a technique due to Lawler <ref> [129] </ref>: * For every v 2 V , add v 1 and v 2 to V 0 and add (v 1 ; v 2 ) to E 0 . <p> We now discuss various partitioning formulations that can be solved with bipartite graphs and/or flow networks. Huang and Kahng [101] use bipartite flow (specifically, the "provisioning" formulation from Lawler <ref> [129] </ref>) to find the maximum-density cluster (i.e., subhypergraph) C of a hypergraph H (V; E), where den (C) = w (C) (see Section 2.4).
Reference: [130] <author> E. L. Lawler, K. N. Levitt, and J. Turner. </author> <title> Module clustering to minimize delay in digital networks. </title> <journal> IEEE Trans. Computers, </journal> <volume> 18 </volume> <pages> 47-57, </pages> <year> 1969. </year>
Reference-contexts: These approaches have also been applied to one-dimensional placement; we discuss such works along with their potential applications to partitioning. Finally, we review fuzzy partitioning techniques and a set-covering approach to FPGA partitioning. 5.1 Min-Delay Clustering by Graph Labeling Lawler et al. <ref> [130] </ref> first considered the Min-Delay Clustering problem (see Section 2.4) for combinational Boolean networks (DAGs) with no module delay, i.e., ffi (v i ) = 0 8 v i 2 V . We call this the unit-delay clustering problem. <p> This solution may assign some modules to more than one cluster, i.e., replicating these modules. In Figure 12, we reproduce (a) an example from <ref> [130] </ref>, and (b) their min-delay clustering solution (with replication) assuming unit module weights and U = 5. <p> Each v i 2 P I is initially assigned the label (i) = ffi (i), each v i =2 P I will have a label no greater than the maximum delay of any path from a primary input to v i . As in <ref> [130] </ref>, any module whose predecessors are all labeled may be labeled next. When labeling v i , a set cluster (i) N (i) is constructed which essentially consists of the predecessors of v i that have the highest "label plus delay factor" values. <p> Like <ref> [130] </ref>, this construction will also replicate modules. 51 A variant of the min-delay clustering problem was studied by Cong and Ding [45] for technology mapping in lookup table-based FPGA designs.
Reference: [131] <author> T. Leighton, F. Makedon, and S. Tragoudas. </author> <title> Approximation algorithms for VLSI partition problems. </title> <booktitle> In Proc. IEEE Intl. Symp. Circuits and Systems, </booktitle> <pages> pages 2865-2868, </pages> <year> 1990. </year>
Reference-contexts: Leighton and Rao [132] showed this bound is relatively tight by constructing a bipartitioning with ratio cut cost of O (z log n), where z is the optimal flow for this UMCF formulation. An approximation algorithm for multi-way partitioning <ref> [131] </ref> applies Leighton and Rao's algorithm recursively.
Reference: [132] <author> T. Leighton and S. Rao. </author> <title> An approximate max-flow min-cut theorem for uniform multicommodity flow problems with applications to approximation algorithms. </title> <booktitle> In Proc. IEEE Symp. Foundations of Computer Science, </booktitle> <pages> pages 422-431, </pages> <year> 1988. </year> <month> 90 </month>
Reference-contexts: Rather than minimizing cutsize subject to cluster size constraints, the cutsize and balance criteria can be smoothly intergrated into the partitioning objective. The concept of ratio cut partitioning was introduced in <ref> [132] </ref> and first applied to circuit partitioning by Wei and Cheng [187]. Minimum Ratio Cut Bipartitioning: Minimize F (P 2 ) = jE (C 1 )j The numerator favors a low cutsize while the denominator favors more balanced cluster sizes. <p> Using the fact that the free capacity is nonnegative, Matula and Shahrokhi [138] establish the lower bound z min F (fC 1 ; C 2 g) i.e., the the minimum ratio cut of G is an upper bound for z. Leighton and Rao <ref> [132] </ref> showed this bound is relatively tight by constructing a bipartitioning with ratio cut cost of O (z log n), where z is the optimal flow for this UMCF formulation. An approximation algorithm for multi-way partitioning [131] applies Leighton and Rao's algorithm recursively.
Reference: [133] <author> T. Lengauer. </author> <title> Combinatorial Algorithms for Integrated Circuit Layout. </title> <address> Wiley-Teubner, </address> <year> 1990. </year>
Reference-contexts: Spectral methods are commonly used to construct geometric representations, due to their ability to capture global netlist information. 3 Limited surveys are given in the textbooks [149] and [171]; the former contains a more personal perspective on early works, by W. Donath. The book by Lengauer <ref> [133] </ref> is noteworthy, especially for its complete development of combinatorial algorithms (network flow, multicommodity flow, etc.). 4 * Section 5 discusses combinatorial approaches; we loosely classify an approach under this cate-gory if the partitioning problem can be transformed into some other "classic" type of optimization, e.g., maximum flow, mathematical programming, graph <p> The "standard" clique net model <ref> [133] </ref> assigns uniform weight 1 jej1 to each clique edge, although many other weighting functions have been proposed. 6 It has been noted that the clique net model may enable a "finer-grain optimization" than the hypergraph 6 Ideally, no matter how modules of the clique are partitioned, the cost should be <p> Ihler et al. [106] prove that such a "perfect" clique net model is impossible to achieve. In addition, Lengauer <ref> [133] </ref> shows that no matter what weighting function is used, there exists a bipartitioning with deviation ( p jej) from the desired cost of cutting a single net. <p> Without this denominator, the objective is equivalent to minimizing the total number of cut nets (cf. the "Clustering" problem in <ref> [133] </ref>), since it can be rewritten as E E (P k ). 12 A very important clustering-related formulation captures the problem of timing-driven k-way parti-tioning (see Section 5.1 below). <p> They also permit the diagonal entries of A to be perturbed before computing the eigenvectors, leading to tighter lower bounds than those given by Donath and Hoffman [59]. Further, they extend the average case bisection bound of Boppana [27] to k &gt; 2 (see <ref> [133] </ref> for a more complete discussion of spectrally derived lower bounds). Chan et al. [37] extend the Donath and Hoffman bound F (P k ) P k i=1 i m i to Scaled Cost, proving for this objective that F (P k ) P k i=1 i . <p> Another formulation is the uniform multicommodity flow (UMCF) problem, which has been used to bipartition undirected edge-weighted graphs [138] <ref> [133] </ref>. For every v; w 2 V , a special commodity f v;w is assigned, and we require exactly z units of this commodity to flow from v to w. The objective is to find a feasible flow with maximum z (s and t are unspecified). <p> Goldberg and Burstein [76] claim that deg avg is between 1.8 and 2.5 for real circuits, and that an FM-based algorithm performs "relatively poorly" in this range, but "nearly optimally" when deg avg &gt; 5. Lengauer <ref> [133] </ref> also conjectures that for graphs with high density and large minimum degree, there will be few local optima that are not global optima. Finally, the analysis of Saab and Rao [163] also suggests that KL performance improves with increasing graph density.
Reference: [134] <author> A. Lim and Y.-M. Chee. </author> <title> Graph partitioning using tabu search. </title> <booktitle> In Proc. IEEE Intl. Symp. Circuits and Systems, </booktitle> <pages> pages 1164-7, </pages> <year> 1991. </year>
Reference-contexts: In this sense, tabu search might explore the solution space more efficiently than SA. 7 Tabu search has been applied to graph bisection by Tao et al. [180] and Lim and Chee <ref> [134] </ref>. <p> The authors of <ref> [134] </ref> also adopt a pair-swapping neighborhood structure, though the aspiration function depends on the cost of the current solution. <p> Areibi and Vannelli [9] first applied tabu search to hypergraph bipartitioning using the same aspiration function as <ref> [134] </ref>, but with single module moves as the neighborhood operator. Andreatta and Ribeiro [7] applied tabu search to a DAG partitioning formulation designed for testing of combinational circuits.
Reference: [135] <author> L. T. Liu, M. T. Kuo, C. K. Cheng, and T. C. Hu. </author> <title> A replication cut for two-way partitioning. </title> <journal> IEEE Trans. </journal> <note> Computer-Aided Design (to appear), </note> <year> 1995. </year>
Reference-contexts: Yang and Wong [192] slightly enhanced Hwang and El Gamal's approach to solve the min-cut replication problem while min imizing jC fl j as a secondary objective, breaking ties so that a min-cut with "minimum size" is found. Recently, Liu et al. <ref> [135] </ref> appear to have eliminated the need for a pre-existing bipartitioning by solving the general replication problem: find clusters C 1 ; C 2 , and C fl C 1 such that P 2 = fC 1 C fl ; C 2 [ C fl g minimizes the number of cuts
Reference: [136] <author> L. T. Liu, M. Shih, and C.-K. Cheng. </author> <title> Data flow partitioning for clock period and latency minimization. </title> <booktitle> In Proc. ACM/IEEE Design Automation Conf., </booktitle> <pages> pages 658-663, </pages> <year> 1994. </year>
Reference-contexts: The latency after retiming is 18 since there are 9 registers on the longest path from I to O; however, in (b) a different cut plus retiming allows the removal of register P , reducing the latency to 16 units. Liu et al. <ref> [136] </ref> add clock and latency constraints into the above QBP formulation. They only consider bipartitioning; thus, the objective in equation (5.2) reduces to n X a ij (x i1 x j2 + x i2 x j1 ) since b ij = 0 if i = j.
Reference: [137] <author> L. T. Liu, M. Shih, N.-C. Chou, C.-K. Cheng, and W. Ku. </author> <title> Performance driven partitioning using retiming and replication. </title> <booktitle> In Proc. IEEE Intl. Conf. Computer-Aided Design, </booktitle> <pages> pages 296-299, </pages> <year> 1993. </year>
Reference-contexts: They apply a linearization technique which 63 approximates the QBP by an ILP, adding a new constraint for each variable in the objective. This ILP is heuristically solved using branch and bound and linear programming relaxation. 5.3.2 Retiming Liu et al. <ref> [137] </ref> propose a timing formulation similar to the Min-Delay Clustering problem of Section 2.4, except that the cost of a path p is extended to loops in the circuit. <p> As an example, consider the circuit in Figure 17 (a) in which registers are represented by rectangles and combinational blocks by circles. Assume the intercluster delay is 2 instead of 1 (following <ref> [137] </ref>) and that ffi (v) = 1; 8 v 2 C (V ). The shortest loop in the circuit that crosses the cut contains 9 combinational blocks and crosses the cut twice for a delay of 13 units.
Reference: [138] <author> D. W. Matula and F. Shahrokhi. </author> <title> The maximum concurrent flow problem and sparsest cuts. </title> <type> Technical report, </type> <institution> Southern Methodist Univ., </institution> <month> March </month> <year> 1986. </year>
Reference-contexts: Another formulation is the uniform multicommodity flow (UMCF) problem, which has been used to bipartition undirected edge-weighted graphs <ref> [138] </ref> [133]. For every v; w 2 V , a special commodity f v;w is assigned, and we require exactly z units of this commodity to flow from v to w. The objective is to find a feasible flow with maximum z (s and t are unspecified). <p> The free capacity of fC 1 ; C 2 g (i.e., the total unused capacities on edges from C 1 to C 2 ) is the cutsize minus the flow from C 1 to C 2 . Using the fact that the free capacity is nonnegative, Matula and Shahrokhi <ref> [138] </ref> establish the lower bound z min F (fC 1 ; C 2 g) i.e., the the minimum ratio cut of G is an upper bound for z.
Reference: [139] <author> B. Mohar. </author> <title> The laplacian spectrum of graphs. </title> <editor> In Y. Alavi and et al., editors, </editor> <booktitle> Graph Theory, Combinatorics, and Applications, </booktitle> <pages> pages 871-898. </pages> <publisher> Wiley, </publisher> <year> 1991. </year>
Reference-contexts: Notice that Q = U n n U T n . Some works use the eigenvectors of A instead of Q; however, the Laplacian has becoming more popular because it has the following following desirable properties (the first two due to Q being positive semi-definite) <ref> [139] </ref>: * The eigenvectors are mutually orthogonal, and hence form a basis in n-dimensional space. * Each eigenvalue j of Q is real. * The smallest eigenvalue 1 = 0 and has a corresponding eigenvector ~ 1 = [ 1 p n ; 1 p n ] T . 8 *
Reference: [140] <author> R. Murgai, R. K. Brayton, and A. Sangiovanni-Vincentelli. </author> <title> On clustering for minimum delay/area. </title> <booktitle> In Proc. IEEE Intl. Conf. Computer-Aided Design, </booktitle> <pages> pages 6-9, </pages> <year> 1991. </year>
Reference-contexts: As an example of replication, note that the labeling scheme assigns module 8 to two clusters, since it is a 1-predecessor of modules 14 and 24; hence, the edges from 5 to 8 and from 6 to 8 are also replicated. Murgai et al. <ref> [140] </ref> were the first to address the variable-delay clustering problem (with module delays ffi (v i ) 6= 0). Their generalization of the above labeling scheme retained optimality only under certain conditions. Rajaraman and Wong [151] later solved this problem optimally using a different labeling scheme. <p> Bisection (unit area) [94] Bisection (module area) [188] [82] [51] [176] [195] FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced [11] Min-Delay Clustering <ref> [140] </ref> [45] [151] [191] Absorption [179] [4] DS [82] [4] Density [101] Replication [122] [104] MCM/Quadrisection [178] [159] [158] Table 1: Various partitioning formulations and some works that provide corresponding experimental results.
Reference: [141] <author> H. Nagamochi and T. Ibaraki. </author> <title> Computing edge-connectivity in multigraphs and capacitated graphs. </title> <journal> Siam Journal of Discrete Mathematics, </journal> <volume> 5(1) </volume> <pages> 54-66, </pages> <year> 1992. </year>
Reference-contexts: Many algorithms are known which can solve the max-flow problem in polynomial time; see [75] [2] for surveys. Note however that finding a minimum cut does not necessarily require a maximum flow; fast techniques to find minimum cuts [92] [114] <ref> [141] </ref> are noted in Section 5 below. Optimal solutions to Min-Cut Bipartitioning will often be quite unbalanced and are thus not useful within a hierarchical design methodology; however, these solutions may form the basis of a useful heuristic [190] [191]. <p> Furthermore, the approach takes only O (nm) time, i.e., the time of a single max-flow computation since the max-flow can be computed in the new contracted network using the residue network (the network of remaining flow capacities) from the previous flow computation. 56 Alternative Optimal Min-Cut Methods Nagamochi and Ibaraki <ref> [141] </ref> recently gave a very efficient algorithm which finds the optimal min-cut bipartitioning without using any flow computation. They assume an undirected, unweighted graph G (V; E) as input, although multiple edges may exist between modules. <p> The resulting graph with self-loops removed is G r+1 , and the edges incident to v in G r form the cutset. The smallest cutset observed during the contractions from G 0 down to G n1 is a global min-cut for G. The authors of <ref> [141] </ref> also extended this approach to graphs with real-valued edge weights. As an example, consider the multi-graph in Figure 14 (a). <p> The authors of [4] have given attraction functions for a variety of objectives, including Scaled Cost and Absorption. In addition, they showed how attraction can capture breadth-first and depth-first orderings, along with "max-adjacency" and "min-perimeter" criteria (cf. the Nagamochi and Ibaraki <ref> [141] </ref> in Section 5.2). Since C eventually becomes much larger than is desired for any single cluster, only a window of the most recently ordered modules are used to compute the attraction; the size of the window reflects cluster size constraints.
Reference: [142] <author> A. R. Newton, </author> <month> April </month> <year> 1991. </year> <type> Personal communication. </type>
Reference-contexts: All of these considerations motivate the development of netlist partitioning tools that identify interconnection and communication structure in a given system design. Indeed, one of the five-year predictions issued by participants at the 1991 CANDE workshop <ref> [142] </ref> was that stand-alone partitioning for every phase of system synthesis would comprise the next major class of CAD tools to emerge in the marketplace.
Reference: [143] <author> T.-K. Ng, J. Oldfield, and V. Pitchumani. </author> <title> Improvements of a mincut partition algorithm. </title> <booktitle> In Proc. IEEE Intl. Conf. Computer-Aided Design, </booktitle> <pages> pages 479-473, </pages> <year> 1987. </year>
Reference-contexts: The two-phase approach has been applied with many clustering algorithms, e.g., [3] [4] [29] [30] [51] [82] [94] <ref> [143] </ref> [176]; see Section 6.6 for a discussion of methods which integrate clustering into move-based approaches. 6.2 Agglomerative Clustering An agglomerative clustering algorithm begins with the n-way clustering P n = ffv 1 g; fv 2 g; : : : ; fv n gg and iteratively constructs P k from P <p> The authors of [176] proposed this clustering approach for use with two-phase FM; their particular scheme makes many runs on the contracted netlist before the netlist is flattened for the second FM phase. Ng et al. <ref> [143] </ref> propose an agglomerative algorithm based on Rent's rule; Rent's rule describes an average-case phenomenon in "good" circuit placements, i.e., that there is a power-law relationship jE (C)j = d (C) jCj r between the number of edges incident to a cluster and the size of the cluster (see [128] and
Reference: [144] <author> C.-I. Park and Y.-B. Park. </author> <title> An efficient algorithm for vlsi network partitioning problem using a cost function with balancing factor. </title> <journal> IEEE Trans. Computer-Aided Design, </journal> <volume> 12(11) </volume> <pages> 1686-1694, </pages> <year> 1993. </year>
Reference-contexts: In [188], the same authors have also applied a hierarchical version of their algorithm to obtain clusterings for use within two-phase FM (see Section 6). Park and Park <ref> [144] </ref> modify Sanchis' algorithm to handle relaxed balance constraints, using the cost function: jE (P k )j + R C Bal (P k ) where C Bal (P k ) = 1i&lt;jk and R is a user-defined parameter. <p> The "litany of variants" also reveals that applying an FM-based algorithm to yet another problem formulation can require varying degrees of innovation. For example, the balance term in the cost function of <ref> [144] </ref> is obvious: increase the penalty proportionally to the deviation from bisection. On the other hand, certain changes in formulation may appear simple (e.g., partitioning onto an underlying tree structure, by Vijayan [186]), but issues such as efficient gain updating can make the implementation differences non-trivial.
Reference: [145] <author> C. Peterson and J. R. Anderson. </author> <title> Neural networks and np-complete optimization problems; a performance study on the graph bisection problem. </title> <journal> Complex Systems, </journal> <volume> 2(1) </volume> <pages> 59-89, </pages> <month> February </month> <year> 1988. </year>
Reference-contexts: Finally, a graph bipartitioning solution is obtained by rounding each x i to its nearest discrete value. Bultan and Aykanat [33] have extended this basic approach to multi-way partitioning of hypergraphs. An earlier work of Peterson and Anderson <ref> [145] </ref> studied the performance 25 of MFA for graph bisection; their formulation used ~x with x i = 1 if v i 2 C 1 and x i = 1 if v i 2 C 2 , with maximization objective F (~x) = 2 i=1 j=1 ff ( i=1 where ff
Reference: [146] <author> L. T. Pillage and R. A. Rohrer. </author> <title> A quadratic metric with a simple solution scheme for initial placement. </title> <booktitle> In Proc. ACM/IEEE Design Automation Conf., </booktitle> <pages> pages 324-329, </pages> <year> 1988. </year>
Reference-contexts: Two vertices e i ; e j 2 V 0 are adjacent if and only if e i " e j 6= ;, i.e., the nets share a module. Early uses of this representation were in both partitioning [112] and placement <ref> [146] </ref>.
Reference: [147] <author> S. Pissanetsky. </author> <title> Sparse Matrix Technology. </title> <publisher> Academic Press, </publisher> <year> 1984. </year>
Reference-contexts: Indeed, problems in the sparse matrix computation literature such as finding minimum bandwidth, minimum profile, and minimum fill-in orderings exactly correspond to this type of ordering problem <ref> [147] </ref>.
Reference: [148] <author> A. Pothen, H. D. Simon, and K. P. Liou. </author> <title> Partitioning sparse matrices with eigenvectors of graphs. </title> <journal> SIAM J. Matrix Analysis and its Applications, </journal> <volume> 11 </volume> <pages> 430-452, </pages> <year> 1990. </year>
Reference-contexts: This algorithm has also been widely used by the sparse matrix computation community; Pothen et al. <ref> [148] </ref> have used it as the basis of a vertex separator algorithm and Hendrickson and Leland [96] have extended it to partitioning onto hypercube or mesh architectures.
Reference: [149] <editor> B. T. Preas and M. J. Lorenzetti, editors. </editor> <booktitle> Physical Design Automation of VLSI Systems. </booktitle> <address> Ben-jamin/Cummings, </address> <year> 1988. </year>
Reference-contexts: Such a representation offers possibilities for geometric approaches to solve problems that are intractable for general graphs. Spectral methods are commonly used to construct geometric representations, due to their ability to capture global netlist information. 3 Limited surveys are given in the textbooks <ref> [149] </ref> and [171]; the former contains a more personal perspective on early works, by W. Donath.
Reference: [150] <author> F. P. Preparata and M. I. Shamos. </author> <title> Computational Geometry: An Introduction. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1985. </year>
Reference-contexts: For example, computing a minimum spanning tree of a weighted undirected graph requires O (n 2 ) time, in general, but only O (n log n) time for points in 2-dimensional geometric space <ref> [150] </ref>. Single-source shortest path, all-pairs shortest paths, and matching are other examples of problems that can be solved more efficiently for geometric instances. This section discusses partitioning approaches based on finding a geometric representation of a graph or hypergraph and applying "geometric" algorithms to find a partitioning solution.
Reference: [151] <author> R. Rajaraman and D. F. Wong. </author> <title> Optimal clustering for delay minimization. </title> <booktitle> In Proc. ACM/IEEE Design Automation Conf., </booktitle> <pages> pages 309-314, </pages> <year> 1993. </year>
Reference-contexts: As noted in <ref> [151] </ref>, this formulation can capture delay between adjacent modules v i and v j by inserting a dummy module v m on edge (v i ; v j ) with w (v m ) = 0 and edge delay ffi (v m ); such a transformation only increases the size of <p> Murgai et al. [140] were the first to address the variable-delay clustering problem (with module delays ffi (v i ) 6= 0). Their generalization of the above labeling scheme retained optimality only under certain conditions. Rajaraman and Wong <ref> [151] </ref> later solved this problem optimally using a different labeling scheme. Consider, for a given v i , the subgraph N (i) induced by v i and all of its predecessors. <p> The delay from any v j 2 P I to v i in a given clustering solution is at least the delay from v j to v i in the optimal clustering of N (i). This observation allows <ref> [151] </ref> to iteratively build optimal clusterings over N (i) for each v i 2 V . <p> The authors of [191] combine the approaches of [45] and <ref> [151] </ref> into a heuristic for min-delay clustering under size and pin constraints w (C h ) U , jE (C h )j K + 1. The algorithm achieves optimal delay under either the pin constraint alone (as does [45]) or the size constraint alone (as does [151]). 5.2 Network Flows New <p> approaches of [45] and <ref> [151] </ref> into a heuristic for min-delay clustering under size and pin constraints w (C h ) U , jE (C h )j K + 1. The algorithm achieves optimal delay under either the pin constraint alone (as does [45]) or the size constraint alone (as does [151]). 5.2 Network Flows New formulations such as replication and the increased usage of a directed netlist representation have recently made flow-based approaches more popular. <p> area) [94] Bisection (module area) [188] [82] [51] [176] [195] FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced [11] Min-Delay Clustering [140] [45] <ref> [151] </ref> [191] Absorption [179] [4] DS [82] [4] Density [101] Replication [122] [104] MCM/Quadrisection [178] [159] [158] Table 1: Various partitioning formulations and some works that provide corresponding experimental results.
Reference: [152] <author> C. R. Rao. </author> <title> The use and interpretation of principal component analysis in applied research. </title> <journal> Sankhya Series A, </journal> <volume> 26 </volume> <pages> 329-358, </pages> <year> 1964. </year>
Reference-contexts: Viewing the rows of C as points in d-space centered at the origin, the bipartitioning problem reduces to finding a subset of points whose center is furthest from the origin. To find an appropriate matrix C, the authors of [12] invoke a theorem from principal components analysis <ref> [152] </ref>, that the best rank-d approximation to A with respect to both the spectral and Frobenius norms is U d d U T d . (Following [12], we use the eigenvectors of A so the columns of U d are ~ 1 ; : : :; ~ d with eigenvalues 1
Reference: [153] <author> M. Razaz. </author> <title> A fuzzy c-means clustering placement algorithm. </title> <booktitle> In Proc. IEEE Intl. Symp. Circuits and Systems, </booktitle> <pages> pages 2051-2054, </pages> <year> 1993. </year>
Reference-contexts: Then, rounding to its closest discrete assignment is used to to derive a non-fuzzy partitioning solution. Ball et al. [16] have shown how to use FKM in conjunction with GORDIAN to derive 2-dimensional placements, and Razaz <ref> [153] </ref> earlier did the same by first modifying FKM to handle graph partitioning without specified coordinates. <p> Given a fuzzy partitioning X, the new cluster centers are given by ~w h = i=1 (x ih ) 2 ~a i i=1 x ih The use of 2 for the exponent in the numerator and 1 for the exponent in the denominator seem to be an arbitrary choice of <ref> [153] </ref>. 69 5.5 Boolean Set Covering A new approach to multi-way partitioning was recently proposed by Chou et al. [44] to address the the Single-Device FPGA Partitioning problem.
Reference: [154] <author> F. Rendl and H. Wolkowicz. </author> <title> A projection technique for partitioning the nodes of a graph. </title> <type> Technical report, </type> <institution> University of Waterloo, </institution> <month> May </month> <year> 1994. </year>
Reference-contexts: Rendl and Wolkow-icz <ref> [154] </ref> observe that Barnes' approach "only makes sense" if U k is very close to an optimal solution. Consequently, [154] first relaxes the integer constraints of the assignment matrix X to find an X close to U k , then uses the transportation formulation to find the closest legal solution to <p> Rendl and Wolkow-icz <ref> [154] </ref> observe that Barnes' approach "only makes sense" if U k is very close to an optimal solution. Consequently, [154] first relaxes the integer constraints of the assignment matrix X to find an X close to U k , then uses the transportation formulation to find the closest legal solution to X.
Reference: [155] <author> B. M. Riess, </author> <month> February </month> <year> 1995. </year> <type> Personal communication. </type>
Reference-contexts: in the literature (e.g, [160]) and provide an excellent set of test cases for graph partitioning algorithms. 81 that the netlist was disconnected, and the smaller 27-module component was discarded since it had no external connections and since GORDIAN requires connections to I/O pads in order to place the circuit <ref> [155] </ref>. Other authors might not remove this smaller component, leading to different bisection and ratio cut results for the same algorithm and the "same" test case. We believe that the VLSI partitioning field would greatly benefit from a standard set of benchmarks exclusively designed for partitioning.
Reference: [156] <author> B. M. Riess, K. Doll, and F. M. Johannes. </author> <title> Partitioning very large circuits using analytical placement techniques. </title> <booktitle> In Proc. ACM/IEEE Design Automation Conf., </booktitle> <pages> pages 646-651, </pages> <year> 1994. </year>
Reference-contexts: This formulation has become popular in the recent literature, both for its greater practical relevance and as an added basis for algorithm comparisons, e.g., <ref> [156] </ref> [190] present results using unit module areas and L = 9n 20 , and [188] [84] present results using actual module areas and L = 1 4 i w (v i ), 4 i w (v i ) (see Section 7). <p> simply by sorting the entries of V d ~y for a given probe direction ~y; we believe that applying DP-RP to these orderings is a promising direction for future research. 47 4.5.3 Placement-Based Approaches Another method which constructs a bipartition from a linear ordering is due to Riess et al. <ref> [156] </ref>. The premise of their PARABOLI approach is that the squared wirelength objective is not as useful as a linear wirelength objective for 1-dimensional placement; this insight derives from experiments with the GORDIAN placement package [120]. The authors of [156] begin with the 1-dimensional placement induced by ~ 2 ; the <p> bipartition from a linear ordering is due to Riess et al. <ref> [156] </ref>. The premise of their PARABOLI approach is that the squared wirelength objective is not as useful as a linear wirelength objective for 1-dimensional placement; this insight derives from experiments with the GORDIAN placement package [120]. The authors of [156] begin with the 1-dimensional placement induced by ~ 2 ; the ten modules with largest coordinates are fixed at location 1.0, and the ten modules with smallest coordinates are fixed at location 0.0. <p> All of these placement techniques ([183] [177] [81]) can be used to iteratively generate a bipartitioning by solving the formulation, peeling off and fixing the extreme coordinates, and integrating these fixed coordinates into the next iteration. The PARABOLI scheme of Riess et al. <ref> [156] </ref> (see Section 4.5) uses the GORDIAN placement in exactly this manner, but no analogous work has used orderings based on SOR or squared coefficients. In addition, none of these orderings have been used with the dynamic programming algorithm of [5] to yield multi-way partitionings. <p> By way of facilitating future comparisons, Table 1 lists various partitioning formulations, along with works that have provided experimental results for some of the standard benchmarks. These are of historical note, since formulations can become popular simply because of the existence of comparison data. For example, Riess et al. <ref> [156] </ref> were the first to present 19 benchmark results for the 45/55-constrained bipartitioning objective (i.e., L = 0:45n and U = 0:55n). The objective is of interest since ratio cut solutions tend to be highly unbalanced and hence impractical, yet exact bisections are too restrictive. <p> We believe that whether to use area information, which balance constraints apply, etc. are issues that can be addressed by identifying benchmarks (or benchmark variants) that are particularly suited for specific formulations. 82 Objective Papers Ratio Cut (unit area) [187] [80] [188] [48] [51] <ref> [156] </ref> Ratio Cut (module area) [51] [31] 45/55 Bipartitioning [156] [190] [94] [6] Bisection (unit area) [94] Bisection (module area) [188] [82] [51] [176] [195] FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] <p> whether to use area information, which balance constraints apply, etc. are issues that can be addressed by identifying benchmarks (or benchmark variants) that are particularly suited for specific formulations. 82 Objective Papers Ratio Cut (unit area) [187] [80] [188] [48] [51] <ref> [156] </ref> Ratio Cut (module area) [51] [31] 45/55 Bipartitioning [156] [190] [94] [6] Bisection (unit area) [94] Bisection (module area) [188] [82] [51] [176] [195] FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced
Reference: [157] <author> B. M. Riess, H. A. Giselbrecht, and B. Wurth. </author> <title> A new k-way partitioning approach for multiple types of fpgas. </title> <type> Technical Report TUM-LRE-95-2, </type> <institution> Technical University of Munich, </institution> <year> 1995. </year>
Reference-contexts: This approach has led to both MCM [158] and FPGA <ref> [157] </ref> partitioning methods. The quadratic programming formulation can be efficiently solved using a conjugate gradient method when each g e is constant. Let g r e denote the value for g e during the r th iteration of the solution. <p> are particularly suited for specific formulations. 82 Objective Papers Ratio Cut (unit area) [187] [80] [188] [48] [51] [156] Ratio Cut (module area) [51] [31] 45/55 Bipartitioning [156] [190] [94] [6] Bisection (unit area) [94] Bisection (module area) [188] [82] [51] [176] [195] FPGA Devices [125] [126] [44] [100] [38] <ref> [157] </ref> Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced [11] Min-Delay Clustering [140] [45] [151] [191] Absorption [179] [4] DS [82] [4] Density [101] Replication [122] [104] MCM/Quadrisection [178] [159] [158] Table
Reference: [158] <author> B. M. Riess and A. A. Schoene. </author> <title> Architecture driven k-way partitioning for multichip modules. </title> <booktitle> In Proc. European Design and Test Conf. (to appear), </booktitle> <year> 1995. </year>
Reference-contexts: Roy and Sechen [159] have integrated both the perimeter of a net's bounding box and penalties for wirelength of critical-paths into an objective function for MCM 13 partitioning. Similar formulations are given in <ref> [158] </ref> [171]. <p> Iteratively constraining only small fractions of the modules to the extremes of the linear ordering makes placement of the inner modules easier, while retaining flexibility. Riess and Schoene <ref> [158] </ref> have extended this approach to a layout-driven formulation in MCM partitioning, optimizing a given multi-chip layout alternately in vertical and horizontal directions. We believe the success of the PARABOLI approach may have just as much to do with its module assignment technique as its linear wirelength objective. <p> This approach has led to both MCM <ref> [158] </ref> and FPGA [157] partitioning methods. The quadratic programming formulation can be efficiently solved using a conjugate gradient method when each g e is constant. Let g r e denote the value for g e during the r th iteration of the solution. <p> [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced [11] Min-Delay Clustering [140] [45] [151] [191] Absorption [179] [4] DS [82] [4] Density [101] Replication [122] [104] MCM/Quadrisection [178] [159] <ref> [158] </ref> Table 1: Various partitioning formulations and some works that provide corresponding experimental results. Another weakness in the present "comparison-based literature" stems from having non-standard implementations of traditional algorithms, e.g., many researchers (including ourselves) have imple mented their own FM-based 2-way or multi-way partitioners.
Reference: [159] <author> K. Roy and C. Sechen. A timing-driven n-way chip and multi-chip partitioner. </author> <booktitle> In Proc. IEEE Intl. Conf. Computer-Aided Design, </booktitle> <pages> pages 240-247, </pages> <year> 1993. </year>
Reference-contexts: Notice that the Min-Cut k-Way Partitioning objective sums the nets cut by each cluster: a net that is cut by h clusters is counted h times in the sum. As noted by <ref> [159] </ref> [179], this objective is preferable to simply counting the number of nets cut (i.e., F (P k ) = jE (P k )j) since signal nets that span more clusters can consume more I/O and timing resources. <p> This formulation applies to partitioning for multiple-FPGA systems, MCM designs, and general floorplanning. As with Vijayan's formulation, edge-weighting of the underlying topology can be used to model distance, signal delay, routing con gestion or other layout parameters. Roy and Sechen <ref> [159] </ref> have integrated both the perimeter of a net's bounding box and penalties for wirelength of critical-paths into an objective function for MCM 13 partitioning. Similar formulations are given in [158] [171]. <p> The Boltzmann acceptance rule maps the gain of v to a weight w (v), and the probability that v is generated (and moved to) is w (v)= u2V w (u). Recently, Roy and Sechen <ref> [159] </ref> used simulated annealing to implement a timing-driven MCM partitioning algorithm. Their cost function is the sum of the half-perimeters of each net spanning multiple chips on the MCM, plus a timing penalty for critical nets whose wirelength exceeds predefined constraints. <p> Feo and Khellaf [63] proposed contracting edges according to a maximum-weight matching. Tight performance bounds were shown for this approach on graphs with edge weights that satisfy the triangle 74 inequality, but the matching construction generally requires O (n 3 ) time. Roy and Sechen <ref> [159] </ref> also proposed a deterministic contraction approach; they first construct a weighted undirected graph using the standard clique model, then contract all edges with weight higher than a given threshold. This approach differs from the matching-based approaches in module pairs are contracted more selectively. <p> [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced [11] Min-Delay Clustering [140] [45] [151] [191] Absorption [179] [4] DS [82] [4] Density [101] Replication [122] [104] MCM/Quadrisection [178] <ref> [159] </ref> [158] Table 1: Various partitioning formulations and some works that provide corresponding experimental results. Another weakness in the present "comparison-based literature" stems from having non-standard implementations of traditional algorithms, e.g., many researchers (including ourselves) have imple mented their own FM-based 2-way or multi-way partitioners.
Reference: [160] <author> Y. Saab. </author> <title> A fast and robust network bisection algorithm. </title> <journal> IEEE Trans. </journal> <note> Computers (to appear), </note> <year> 1995. </year>
Reference-contexts: The edge unclustering method only unclusters the modules incident to cut edges, allowing fine-grained optimization of these modules and coarse-grained optimization of the other modules to occur simultaneously. However, in practice, [94] prefer the iterative unclustering method. Saab <ref> [160] </ref> draws an analogy with simulated annealing that clustering (and unclustering) should not proceed too quickly since it might freeze the optimization process in a suboptimal solution. <p> In other cases, problems may arise from netlist connectivity. For example, when converting the industry3.vpnr benchmark into PROUD format, the authors of GORDIAN observed 14 Graphs from the Harwell-Boeing sparse matrix collection (anonymous ftp to orion.cerfacs.fr) have also appeared occasionally in the literature (e.g, <ref> [160] </ref>) and provide an excellent set of test cases for graph partitioning algorithms. 81 that the netlist was disconnected, and the smaller 27-module component was discarded since it had no external connections and since GORDIAN requires connections to I/O pads in order to place the circuit [155].
Reference: [161] <author> Y. Saab. </author> <title> New methods for construction of test cases for partitioning heuristics. </title> <booktitle> Progress in VLSI Design (to appear), </booktitle> <year> 1996. </year> <month> 91 </month>
Reference-contexts: See also such works as [1]. Other, more complex random constructions have also been proposed, e.g., [124] <ref> [161] </ref>.
Reference: [162] <author> Y. Saab and V. Rao. </author> <title> Fast effective heuristics for the graph bisectioning problem. </title> <journal> IEEE Trans. Computer--Aided Design, </journal> <volume> 9(1) </volume> <pages> 91-98, </pages> <month> January </month> <year> 1990. </year>
Reference-contexts: The implementation of [31] adopts a weighted depth-first ordering; orderings based on the 1-dimensional representations discussed in Section 4 may be promising in this context. Saab and Rao <ref> [162] </ref> proposed a simulated evolution bisection heuristic which has no crossover operator, but rather a more complex mutation operator. The authors of [162] define the "goodness" of a module v i (e.g., in C 1 ) as E i I i , where E i = P v j 2C 2 <p> Saab and Rao <ref> [162] </ref> proposed a simulated evolution bisection heuristic which has no crossover operator, but rather a more complex mutation operator. The authors of [162] define the "goodness" of a module v i (e.g., in C 1 ) as E i I i , where E i = P v j 2C 2 a ij is the cost of the external edges incident to v i and I i = v j 2C 1 a
Reference: [163] <author> Y. Saab and V. Rao. </author> <title> On the graph bisection problem. </title> <journal> IEEE Trans. Circuits and Systems, </journal> <volume> 39(9) </volume> <pages> 760-762, </pages> <month> September </month> <year> 1992. </year>
Reference-contexts: Lengauer [133] also conjectures that for graphs with high density and large minimum degree, there will be few local optima that are not global optima. Finally, the analysis of Saab and Rao <ref> [163] </ref> also suggests that KL performance improves with increasing graph density. A bipartitioning is said to be m-optimal if swapping any m modules from C 1 with m modules from C 2 cannot decrease the cost, e.g., KL is a 1-optimal algorithm.
Reference: [164] <author> L. A. Sanchis. </author> <title> Multiple-way network partitioning. </title> <journal> IEEE Trans. Computers, </journal> <volume> 38(1) </volume> <pages> 62-81, </pages> <month> January </month> <year> 1989. </year>
Reference-contexts: Second, iterative algorithms are simple to describe and implement; for this reason, the bipartitioning method of Fiduccia-Mattheyses [65] and the multi-way partitioning method of Sanchis <ref> [164] </ref> are standards against which nearly all other heuristics are measured. Third, the move-based approach encompasses more sophisticated strategies for exploring the solution space - e.g., simulated annealing, tabu search, and genetic algorithms - which yield performance improvements over greedy iterative methods while retaining the intuitiveness associated with local search. <p> Alternatively, a random organization could be implemented, though the time complexity would increase slightly since bucket selection could not be accomplished in constant time. Recently, the authors of [86] observed that Sanchis <ref> [164] </ref>, and most likely Krishnamurthy [123] also, used random selection from gain buckets in their implementations. <p> The importance of such research is heightened by the present widespread use of the FM and Krishnamurthy algorithms. 22 3.1.4 Sanchis' Multi-Way Partitioning Algorithm Sanchis <ref> [164] </ref> extended the FM algorithm, together with Krishnamurthy's lookahead scheme, to multi-way partitioning. The algorithm is generally straightforward, although there are several knotty implementation issues. <p> Thus, experiments have been conducted on various classes of random graphs, including: 80 * Uniform: A graph G (n; p) has n vertices, with the edge between each pair of vertices indepen-dently present with probability p. Random graphs (and hypergraphs) have been used by e.g., [110] [187] <ref> [164] </ref>. <p> Third, spectral approaches that utilize multiple eigenvectors appear promising. Previous spectral 16 Such studies can call into question the conclusions drawn in oft-cited works, in this case those of [123] <ref> [164] </ref> [189] regarding "lookahead" in iterative improvement strategies. 84 approaches that associate a single eigenvector with a cluster [18] or use only one eigenvector [80] may have inherent limitations.
Reference: [165] <author> L. A. Sanchis. </author> <title> Multiple-way network partitioning with different cost functions. </title> <journal> IEEE Trans. Computers, </journal> <volume> 42(22) </volume> <pages> 1500-1504, </pages> <year> 1993. </year>
Reference-contexts: In <ref> [165] </ref>, Sanchis shows how to modify this formula to handle the objective function which assigns cost j 1 to a net that spans j clusters (this is very similar to F (P k ) = P k h=1 jE (C h )j).
Reference: [166] <author> H. Saran and V. V. Vazirani. </author> <title> Finding k-cuts within twice the optimal. </title> <booktitle> In Proc. IEEE Symp. Foundations of Computer Science, </booktitle> <pages> pages 743-751, </pages> <year> 1991. </year>
Reference-contexts: Hu and Moerder also show how to construct a modified Gomory-Hu cut tree to solve min-cut hypergraph bipartitioning with n 1 flow computations. Vannelli and Hadley [184] also discuss hypergraph bipartitioning based on Gomory-Hu cut trees. Saran and Vazarani <ref> [166] </ref> use Gomory-Hu cut trees as the basis for a k-way partitioning heuristic for weighted undirected graphs with no cluster size constraints. <p> This solution is guaranteed to yield a cutset within a factor of 2 2 k of optimal and uses n 1 flow computations. The authors of <ref> [166] </ref> also proposed an alternative which hierarchically splits the cluster which has the smallest min-cut; hence, a Gomory-Hu cut must be computed for each cluster. This approach also achieves a performance ratio of 2 2 k but requires O (kn) flow computations.
Reference: [167] <author> G. Saucier, D. Brasen, and J. P. Hiol. </author> <title> Partitioning with cone structures. </title> <booktitle> In Proc. IEEE Intl. Conf. Computer-Aided Design, </booktitle> <pages> pages 236-239, </pages> <year> 1993. </year>
Reference-contexts: In [50] MFFC clusters are used for acyclic, multi-way partitioning (see Section 3.5); here, the cluster sizes are heuristically thresholded since an MFFC can be quite large. Cones: Given v 2 P O for a given DAG, Saucier, Brasen and Hiol <ref> [167] </ref> define the cone of v to be the set of all w 2 V such that there is a path from w to v. The authors of [167] use cones as a building block for a multi-way FPGA partitioning algorithm. <p> Cones: Given v 2 P O for a given DAG, Saucier, Brasen and Hiol <ref> [167] </ref> define the cone of v to be the set of all w 2 V such that there is a path from w to v. The authors of [167] use cones as a building block for a multi-way FPGA partitioning algorithm.
Reference: [168] <author> D. M. Schuler and E. G. Ulrich. </author> <title> Clustering and linear placement. </title> <booktitle> In Proc. ACM/IEEE Design Automation Conf., </booktitle> <pages> pages 50-56, </pages> <year> 1972. </year>
Reference-contexts: An alternative greedy approach would be to simply merge the two clusters with highest connectivity, i.e., choose C h and C l such that N hl = jE (C h ) " E (C l )j is maximum. Schuler and Ulrich <ref> [168] </ref> observe that such a criterion ignores the number of nets cut resulting from the merged cluster. Such a criterion will generally also fail to construct balanced clusterings. Thus, the authors of [168] maximize a merging objective of form: f (w (C h )) jE (C h )j N hl N <p> Schuler and Ulrich <ref> [168] </ref> observe that such a criterion ignores the number of nets cut resulting from the merged cluster. Such a criterion will generally also fail to construct balanced clusterings. Thus, the authors of [168] maximize a merging objective of form: f (w (C h )) jE (C h )j N hl N hl (6:1) where f is a function of the cluster weights. The resulting cluster hierarchy is used to form a 1-dimensional placement. <p> This procedure is iteratively repeated on the contracted netlist until certain "fractal" criteria are met. Another scheme, proposed by Hauck and Borriello [94], uses randomness and the merging criterion of <ref> [168] </ref>.
Reference: [169] <author> D. G. Schweikert and B. W. Kernighan. </author> <title> A proper model for the partitioning of electrical circuits. </title> <booktitle> In Proc. ACM/IEEE Design Automation Conf., </booktitle> <pages> pages 57-62, </pages> <year> 1972. </year>
Reference-contexts: Although the original KL algorithm and Quick Cut apply only to undirected weighted graphs, Schweikert and Kernighan <ref> [169] </ref> extended KL to hypergraphs and a similar extension appears possible for Quick Cut. 3.1.2 The Fiduccia-Mattheyses (FM) Algorithm Fiduccia and Mattheyses [65] presented a KL-inspired algorithm which reduced the time per pass to linear in the size of the netlist.
Reference: [170] <author> C. Sechen and D. Chen. </author> <title> An improved objective function for mincut circuit partitioning. </title> <booktitle> In Proc. IEEE Intl. Conf. Computer-Aided Design, </booktitle> <pages> pages 502-505, </pages> <year> 1988. </year>
Reference-contexts: Sechen and Chen <ref> [170] </ref> propose another modification of the original KL and FM descriptions, that the Min-Cut Bisection objective (and the associated gain computation) are not ideal when the partitioning solution is to be used as the basis of hierarchical placement. <p> If module v i 2 e is placed in row i, then if e is routed to minimize vertical wirelength, e will cross the cut six times. Thus, for each net e, the authors of <ref> [170] </ref> consider every possible assignment of modules in e to rows 1; 2; : : :; jej, compute the number of times e will cross the cut in routing size for each configuration, then average the results to derive an expected cutsize for e.
Reference: [171] <author> N. A. Sherwani. </author> <title> Algorithms for VLSI Physical Design Automation. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, </address> <year> 1993. </year>
Reference-contexts: Such a representation offers possibilities for geometric approaches to solve problems that are intractable for general graphs. Spectral methods are commonly used to construct geometric representations, due to their ability to capture global netlist information. 3 Limited surveys are given in the textbooks [149] and <ref> [171] </ref>; the former contains a more personal perspective on early works, by W. Donath. <p> Roy and Sechen [159] have integrated both the perimeter of a net's bounding box and penalties for wirelength of critical-paths into an objective function for MCM 13 partitioning. Similar formulations are given in [158] <ref> [171] </ref>.
Reference: [172] <author> M. Shih, </author> <year> 1993. </year> <type> Personal communication. </type>
Reference-contexts: Tsay and Kuh [183] propose edge weight 2 jej for minimizing squared wirelength and ( 2 jej ) 3 for minimizing Manhattan wirelength. 7 model, e.g., Shih <ref> [172] </ref> reports that solution quality of Fiduccia-Mattheyses bipartitioning [65] can improve when run on the graph representation of the netlist instead of the original hypergraph. However, the clique model can destroy the natural sparsity of the netlist since 2 nonzeros will be inserted in A for every net e.
Reference: [173] <author> M. Shih and E. Kuh. </author> <title> Quadratic boolean programming for performance-driven system partitioning. </title> <booktitle> In Proc. ACM/IEEE Design Automation Conf., </booktitle> <pages> pages 761-765, </pages> <year> 1993. </year>
Reference-contexts: ; v j ) is not cut, then v i and v j are in the same cluster, so h = l and when both x ih = 1 and x jl = 1, we have b hl = 0 which implies that a ij P k Shih and Kuh <ref> [173] </ref> extended this formulation to handle timing and area constraints. In this case, the matrix B captures the cost of wiring between clusters; previously we had assumed that this cost is uniformly one, but it may be generalized (e.g., for MCM partitioning). <p> The area constraints w (C h ) U h ; 1 h k can be incorporated by replacing the constraints P n P n m h . To capture timing constraints, the authors of <ref> [173] </ref> use the n fi n matrix D C = (D C ij ) to store the maximum allowable signal routing delay between every pair of modules, and the k fi k matrix D = (D ij ) to store the cost of routing between every pair of clusters.
Reference: [174] <author> M. Shih, E. Kuh, and R.-S. Tsay. </author> <title> Performance-driven system partitioning on multi-chip modules. </title> <booktitle> In Proc. ACM/IEEE Design Automation Conf., </booktitle> <pages> pages 53-56, </pages> <year> 1992. </year>
Reference-contexts: The authors of [178] construct a placement by using the terminal propagation technique of [60] and recursively quadrisecting the clusters. Shih, Kuh, and Tsay <ref> [174] </ref> have applied a multi-way KL variant to MCM partitioning with cluster timing, area, thermal and pin constraints, where the objective is to minimize wirelength over the MCM configuration. An initial solution that satisfies timing constraints is constructed by merging modules with timing dependencies into "super-nodes". <p> In addition, combinatorial approaches can capture complex formulations that incorporate timing constraints, preassignment of modules to clusters, or multiple cost functions (e.g., the authors of <ref> [174] </ref> force all paths to satisfy delay constraints within a quadratic boolean program).
Reference: [175] <author> M. Shih, E. Kuh, and R.-S. Tsay. </author> <title> Timing-driven system partitioning by constraints decoupling method. </title> <booktitle> In Proc. IEEE Multi-Chip Module Conf., </booktitle> <pages> pages 164-169, </pages> <year> 1993. </year>
Reference-contexts: Shih and Kuh show how to adapt a QAP heuristic due to Burkard and Bonniger [34] to their formulation. The same heuristic was also applied by [62] to an opto-electronic formulation with size, connection, power, and interconnect constraints. Shih, Kuh, and Tsay <ref> [175] </ref> also applied the formulation of equation (5.3) to am MCM partitioning formulation, setting ff = 1 and fi = 0 to obtain an ILP. The method assumes a good initial partitioning, although timing and area constraints may be violated.
Reference: [176] <author> H. Shin and C. Kim. </author> <title> A simple yet effective technique for partitioning. </title> <journal> IEEE Trans. VLSI Systems, </journal> <volume> 1(3), </volume> <month> September </month> <year> 1993. </year>
Reference-contexts: The two-phase approach has been applied with many clustering algorithms, e.g., [3] [4] [29] [30] [51] [82] [94] [143] <ref> [176] </ref>; see Section 6.6 for a discussion of methods which integrate clustering into move-based approaches. 6.2 Agglomerative Clustering An agglomerative clustering algorithm begins with the n-way clustering P n = ffv 1 g; fv 2 g; : : : ; fv n gg and iteratively constructs P k from P k+1 <p> The resulting cluster hierarchy is used to form a 1-dimensional placement. More recently, Shin and Kim <ref> [176] </ref> proposed a slightly different approach: given P k+1 , they merge C h and C l which maximizes N hl minfE (C h ); E (C l )g ff w (V ) The first term captures the connectivity between clusters, with the denominator favoring the selection of "outlier" clusters (e.g., <p> The second term implies a penalty for making a cluster too large; if the merged cluster has average weight in the resulting P k , the term reduces to ff. The authors of <ref> [176] </ref> proposed this clustering approach for use with two-phase FM; their particular scheme makes many runs on the contracted netlist before the netlist is flattened for the second FM phase. <p> The simplest way to incorporate a clustering solution is via the two-phase approach, i.e., run FM on the contracted netlist, and use the result as the starting solution of a second run on the flattened netlist. However, more sophisticated techniques may be preferable. For example, Shin and Kim <ref> [176] </ref> run a variant of FM on the clustered netlist ten times on each of five different clustering solutions (with k = n 12 ; n 10 ; n 8 ). <p> The FM variant is then run only once on the flattened netlist, using the best of the 50 clustered bipartitionings as a starting solution. Note that the FM variant actually consists of multiple passes where the cluster size constraints become tighter within each pass; <ref> [176] </ref> states that this procedure allows closely coupled cells to settle first, with freer cells moving closer to an optimum bipartitioning in later passes. Hence, this scheme makes hundreds 78 of FM passes on clustered netlists before making a single pass on a flattened netlist. <p> be addressed by identifying benchmarks (or benchmark variants) that are particularly suited for specific formulations. 82 Objective Papers Ratio Cut (unit area) [187] [80] [188] [48] [51] [156] Ratio Cut (module area) [51] [31] 45/55 Bipartitioning [156] [190] [94] [6] Bisection (unit area) [94] Bisection (module area) [188] [82] [51] <ref> [176] </ref> [195] FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced [11] Min-Delay Clustering [140] [45] [151] [191] Absorption [179] [4] DS [82] [4] Density
Reference: [177] <author> G. Sigl, K. Doll, and F. M. Johannes. </author> <title> Analytical placement: A linear or a quadratic objective function? In Proc. </title> <booktitle> ACM/IEEE Design Automation Conf., </booktitle> <pages> pages 427-432, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: Assuming a star topology, the squared wirelength objective becomes q (~x) = P P v i 2e (x i x e ) 2 , and setting x e to be the center of gravity is optimum for this 67 objective. Sigl et al. <ref> [177] </ref> improved GORDIAN by incorporating a linear wirelength objective, which can be written as l (~x) = e2E v i 2e X X (x i x e ) 2 = e2E v i 2e g ie where g ie = jx i x e j This objective can be approximated by <p> The more general question of finding a value c such that a c ij (x i x j ) 2 best approximates linear wirelength was also raised. All of these placement techniques ([183] <ref> [177] </ref> [81]) can be used to iteratively generate a bipartitioning by solving the formulation, peeling off and fixing the extreme coordinates, and integrating these fixed coordinates into the next iteration.
Reference: [178] <author> P. R. Suaris and G. Kedem. </author> <title> An algorithm for quadrisection and its application to standard cell placement. </title> <journal> IEEE Trans. Circuits and Systems, </journal> <volume> 35(3) </volume> <pages> 294-303, </pages> <year> 1988. </year>
Reference-contexts: Roy and Sechen [159] have integrated both the perimeter of a net's bounding box and penalties for wirelength of critical-paths into an objective function for MCM 13 partitioning. Similar formulations are given in [158] [171]. The quadrisection problem <ref> [178] </ref> is a clas-sic special case of the same formulation for standard-cell placement: the underlying graph is a 2 fi 2 grid, and the objective is to minimize the number of nets crossing the horizontal and vertical middle gridlines. 2.5 Constraint-Driven (Satisficing) Formulations With the increasing complexity of system design, CAD <p> The motivation is that applying alternating horizontal and vertical cuts in hierarchical min-cut placement fewer cuts in the first direction chosen. The quadrisection formulation can trade off between vertical and horizontal routing resources according to a user-specified parameter. Suaris and Kedem <ref> [178] </ref> adapted FM to this problem: there are 12 possible ways to move modules from cluster C i (four choices) to C j (three 33 choices), so 12 different gain bucket structures are used to store the move types. The authors of [178] construct a placement by using the terminal propagation <p> Suaris and Kedem <ref> [178] </ref> adapted FM to this problem: there are 12 possible ways to move modules from cluster C i (four choices) to C j (three 33 choices), so 12 different gain bucket structures are used to store the move types. The authors of [178] construct a placement by using the terminal propagation technique of [60] and recursively quadrisecting the clusters. Shih, Kuh, and Tsay [174] have applied a multi-way KL variant to MCM partitioning with cluster timing, area, thermal and pin constraints, where the objective is to minimize wirelength over the MCM configuration. <p> [44] [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced [11] Min-Delay Clustering [140] [45] [151] [191] Absorption [179] [4] DS [82] [4] Density [101] Replication [122] [104] MCM/Quadrisection <ref> [178] </ref> [159] [158] Table 1: Various partitioning formulations and some works that provide corresponding experimental results. Another weakness in the present "comparison-based literature" stems from having non-standard implementations of traditional algorithms, e.g., many researchers (including ourselves) have imple mented their own FM-based 2-way or multi-way partitioners.
Reference: [179] <author> W. Sun and C. Sechen. </author> <title> Efficient and effective placements for very large circuits. </title> <booktitle> In Proc. IEEE Intl. Conf. Computer-Aided Design, </booktitle> <pages> pages 170-177, </pages> <year> 1993. </year>
Reference-contexts: Notice that the Min-Cut k-Way Partitioning objective sums the nets cut by each cluster: a net that is cut by h clusters is counted h times in the sum. As noted by [159] <ref> [179] </ref>, this objective is preferable to simply counting the number of nets cut (i.e., F (P k ) = jE (P k )j) since signal nets that span more clusters can consume more I/O and timing resources. <p> Since DS requires O (n 3 ) time to evaluate, it is more useful for comparison rather than optimization of clustering solutions. The Absorption objective <ref> [179] </ref> measures the sum of the fractions of nets "absorbed" by the clusters: Absorption: Maximize F (P k ) = h=1 e2Eje"C h 6=; jej 1 e.g., net e incident to cluster C h adds absorption zero if e has only one pin in C h , and adds absorption one <p> These works illustrate the ease with which SA can address relatively arbitrary objective functions (of course, simple objective functions are preferred since evaluation of solution cost dominates the runtime). Sun and Sechen <ref> [179] </ref> have also used SA to optimize Absorption in a clustering preprocessor within the TimberWolf placement tool. Mean Field Annealing Mean Field Annealing (MFA) is a technique similar to SA which also has a physical analogy to systems of particles in thermal equilibrium. <p> This method seems to be the only "top-down clustering" approach in the literature. The clustering solutions were originally integrated within two-phase FM, and later used in a simulated-annealing based placement algorithm [90]. 76 Absorption: Sun and Sechen <ref> [179] </ref> believe that clusterings that maximize the Absorption objective are best suited for use in the TimberWolf simulated annealing-based placement program. <p> TimberWolf's neighborhood structure is based on swapping clusters, hence the need for size constraints: too much variance in cluster sizes may make the placement solution infeasible. In <ref> [179] </ref>, the process itself also uses simulated annealing, with neighborhood structure based on moving a single module from one cluster to another. The authors claim that 100n moves are sufficient to optimize Absorption. <p> However, we do not seem close to understanding which approaches are better, and why. One reason is that it is generally difficult to compare clustering strategies many works present a single scheme for use in their own specialized heuristic (e.g., FPGA partitioning [44], or TimberWolf placement <ref> [179] </ref>) without presenting any results for alternative clustering schemes. Another reason is that while it may be easy to devise clustering heuristics that optimize ratio cut, Absorption, etc., we do not know if these are the appropriate objectives for the specific application. <p> (module area) [188] [82] [51] [176] [195] FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced [11] Min-Delay Clustering [140] [45] [151] [191] Absorption <ref> [179] </ref> [4] DS [82] [4] Density [101] Replication [122] [104] MCM/Quadrisection [178] [159] [158] Table 1: Various partitioning formulations and some works that provide corresponding experimental results.
Reference: [180] <author> L. Tao, Y. C. Zhao, K. Thulasiraman, and M. N. S. Swamy. </author> <title> An efficient tabu search algorithm for graph bisectioning. </title> <booktitle> In Proc. Great Lakes Symp. VLSI, </booktitle> <pages> pages 92-95, </pages> <year> 1991. </year>
Reference-contexts: In this sense, tabu search might explore the solution space more efficiently than SA. 7 Tabu search has been applied to graph bisection by Tao et al. <ref> [180] </ref> and Lim and Chee [134]. In [180], a move consists of swapping a pair of modules, and the aspiration function is one less than the cost 7 It is instructive to compare the motivations for tabu search with those of other methods in the optimization literature, e.g., Baum's iterated descent <p> In this sense, tabu search might explore the solution space more efficiently than SA. 7 Tabu search has been applied to graph bisection by Tao et al. <ref> [180] </ref> and Lim and Chee [134]. In [180], a move consists of swapping a pair of modules, and the aspiration function is one less than the cost 7 It is instructive to compare the motivations for tabu search with those of other methods in the optimization literature, e.g., Baum's iterated descent [21] or the "iterated Lin-Kernighan" strategy used
Reference: [181] <author> M. Toyonaga, S.-T. Yang, T. Akino, and I. Shirakawa. </author> <title> A new approach of fractal-dimension based module clustering for vlsi layout. </title> <booktitle> In Proc. IEEE Intl. Symp. Circuits and Systems, </booktitle> <pages> pages 185-188, </pages> <year> 1994. </year>
Reference-contexts: This approach differs from the matching-based approaches in module pairs are contracted more selectively. Instead of merging pairs of modules, entire nets may be contracted. In the placement heuristic of <ref> [181] </ref>, nets are first sorted in nondecreasing order by size, and a net is picked from the list and contracted into a cluster as long as none of its modules belong to a contracted cluster.
Reference: [182] <author> S. Tragoudas. </author> <title> An improved algorithm for the generalized min-cut partitioning problem. </title> <booktitle> In Proc. Great Lakes Symp. VLSI, </booktitle> <pages> pages 242-247, </pages> <year> 1994. </year>
Reference-contexts: Vijayan notes many applications of his formulation, including seeding of functional blocks, partitioning within nonrectangular regions, and residual logic partitioning. For layout-driven applications, a general graph topology rather than a tree structure can better incorporate information about the layout geometry <ref> [182] </ref>. For example, if modules are assigned to 12 identical devices that are arranged in a 3 fi 4 grid, the cost of a cut net might correspond to the routing tree cost over the devices that contain pins of the net. <p> The overall procedure is the same, but the gain computation and update are complicated since the objective is the cost of routing nets on the tree structure. A speedup of Vijayan's heuristic was given in <ref> [182] </ref>. If the underlying structure is a 2 fi 2 grid, a quadrisection formulation results. The motivation is that applying alternating horizontal and vertical cuts in hierarchical min-cut placement fewer cuts in the first direction chosen.
Reference: [183] <author> R.-S. Tsay and E. S. Kuh. </author> <title> A unified approach to partitioning and placement. </title> <journal> IEEE Trans. Circuits and Systems, </journal> <volume> 38(5) </volume> <pages> 521-533, </pages> <year> 1991. </year>
Reference-contexts: Tsay and Kuh <ref> [183] </ref> propose edge weight 2 jej for minimizing squared wirelength and ( 2 jej ) 3 for minimizing Manhattan wirelength. 7 model, e.g., Shih [172] reports that solution quality of Fiduccia-Mattheyses bipartitioning [65] can improve when run on the graph representation of the netlist instead of the original hypergraph. <p> Thus, an interesting experiment would evaluate the quality of linear orderings derived using the same methodology, but with a quadratic objective. The successive over-relaxation placement approach of Tsay and Kuh <ref> [183] </ref> can also be used for this type of quadratic optimization with fixed module locations (however, centers of gravity cannot be used); see Section 5.3.4. 5 Combinatorial Formulations The engineering workstations in a typical modern design environment have processing capabilities exceeding those of mainframes from only a few years ago, thereby <p> A linear placement also induces a linear ordering, and as seen in Section 4.5, linear orderings and placements can serve as the basis for a partitioning algorithm. 66 The placement formulation of Tsay and Kuh <ref> [183] </ref> assumes that the coordinates of n legal slots s 1 s 2 : : : s n are given, and a solution consists of an assignment of module locations fx i g to slots fs j g. <p> In their implementation, subsequent solutions are functions of ~ 2 ; ~ 3 and ~ 4 , but in general, the higher-order constraints cannot be directly mapped to an eigenvector-based solution. Another formulation of Tsay and Kuh <ref> [183] </ref> ignores slot constraints and assumes that ff modules have already been assigned to fixed locations, while the other fi = n ff modules are free to move. <p> We believe that the VLSI partitioning field would greatly benefit from a standard set of benchmarks exclusively designed for partitioning. As a first step, TU Munich has made many benchmarks available in PROUD format <ref> [183] </ref> (WWW: http://www.regent.e-technik.tu-muenchen.de/) and we are currently making benchmarks available in a standard hypergraph format (WWW: http://ballade.cs.ucla.edu:8080/). Our group is currently working with TU Munich to ensure consistency between our formats, making either format suitable for comparisons.
Reference: [184] <author> A. Vannelli and S. W. Hadley. </author> <title> A gomory-hu cut tree representation of a netlist partitioning problem. </title> <journal> IEEE Trans. Circuits and Systems, </journal> <volume> 37(9) </volume> <pages> 1133-1139, </pages> <year> 1990. </year>
Reference-contexts: net cut in the transformed graph to be one, Donath [58] shows that the appropriate edge weighting is 4 jej 2 (jej mod 2) since there are jej 2 (jej mod 2) 4 edges crossing between two clusters when half the modules of e are in each cluster (also see <ref> [184] </ref>). Donath further shows that when there are more than two clusters, 4 jej 2 (jej mod 2) remains the correct uniform weighting to achieve this upper bound. Many other net models are motivated by 1- and 2-dimensional cell placement. <p> Hu and Moerder also show how to construct a modified Gomory-Hu cut tree to solve min-cut hypergraph bipartitioning with n 1 flow computations. Vannelli and Hadley <ref> [184] </ref> also discuss hypergraph bipartitioning based on Gomory-Hu cut trees. Saran and Vazarani [166] use Gomory-Hu cut trees as the basis for a k-way partitioning heuristic for weighted undirected graphs with no cluster size constraints.
Reference: [185] <author> A. Vannelli and G. S. Rowan. </author> <title> A constrained clustering approach for partitioning netlists. </title> <booktitle> In Proc. 28th Midwest Symposium on Circuits and Systems, </booktitle> <pages> pages 211-215, </pages> <year> 1985. </year>
Reference-contexts: Barnes' algorithm was applied to VLSI circuits by Hadley et al. [79], who also incorporated a new clique net model to obtain a graph representation and FM post-processing. Vannelli and Rowan <ref> [185] </ref> also applied the algorithm to two variant constructions of the adjacency matrix, which respectively use a ij = jN (v i )nN (v j )j + jN (v i )nN (v j )j and a ij = (jN (v i )nN (v j )j + jN (v i )nN (v
Reference: [186] <author> G. Vijayan. </author> <title> Generalization of min-cut partitioning to tree structures and its applications. </title> <journal> IEEE Trans. Computers, </journal> <volume> 40(3) </volume> <pages> 307-314, </pages> <year> 1991. </year>
Reference-contexts: Finally, there is the class of layout-driven multi-way partitioning formulations, which are generally motivated by the link between partitioning and placement in typical physical design methodologies. Vijayan <ref> [186] </ref> proposed an abstract formulation that requires the netlist modules to be mapped onto an underlying k-node tree structure. <p> Only if this pass also fails to yield improvement does the algorithm terminate. In [126], Kuznar et al. extend this algorithm to include functional replication (see Section 2.6). 3.5.4 Layout-Driven Formulations To map modules onto an underlying tree structure, Vijayan <ref> [186] </ref> applies a variant of Sanchis' algorithm but with no lookahead gains. The overall procedure is the same, but the gain computation and update are complicated since the objective is the cost of routing nets on the tree structure. A speedup of Vijayan's heuristic was given in [182]. <p> For example, the balance term in the cost function of [144] is obvious: increase the penalty proportionally to the deviation from bisection. On the other hand, certain changes in formulation may appear simple (e.g., partitioning onto an underlying tree structure, by Vijayan <ref> [186] </ref>), but issues such as efficient gain updating can make the implementation differences non-trivial.
Reference: [187] <author> Y.-C. Wei and C.-K. Cheng. </author> <title> Towards efficient hierarchical designs by ratio cut partitioning. </title> <booktitle> In Proc. IEEE Intl. Conf. Computer-Aided Design, </booktitle> <pages> pages 298-301, </pages> <year> 1989. </year>
Reference-contexts: Rather than minimizing cutsize subject to cluster size constraints, the cutsize and balance criteria can be smoothly intergrated into the partitioning objective. The concept of ratio cut partitioning was introduced in [132] and first applied to circuit partitioning by Wei and Cheng <ref> [187] </ref>. Minimum Ratio Cut Bipartitioning: Minimize F (P 2 ) = jE (C 1 )j The numerator favors a low cutsize while the denominator favors more balanced cluster sizes. <p> This expected cutsize is used to compute module gains. 31 3.5.2 Relaxed Size Constraints In practice, an exact bisection is not required, yet if cluster size constraints are removed, an unbalanced bipartitioning will result. This has motivated several alternative strategies. Wei and Cheng <ref> [187] </ref> proposed the following iterative approach to optimize the ratio cut objective. <p> Also, by discarding medium-size and large nets to maintain sparsity, the algorithm may lose important clustering information. Ratio Cut: Chou et al. [44] and Wei and Cheng [188] have constructed clusterings based on the ratio cut objective. The algorithm of [44] applies the ratio cut algorithm of <ref> [187] </ref> to construct a bipartitioning fC 1 ; C 2 g such that C 1 U for some small U , e.g., U = 50. Cluster C 1 is then removed from the circuit and the algorithm is repeated until the circuit has less than U modules. <p> Chou et al. apply their clusterings to the FPGA Set Covering formulation discussed in Section 5.5. The ratio cut clustering approach of Wei and Cheng [188] iteratively applies the bipartitioning algorithm of <ref> [187] </ref> to the largest remaining cluster; the top-down divisive process ends when the largest cluster contains less than 2% of the modules. This method seems to be the only "top-down clustering" approach in the literature. <p> Thus, experiments have been conducted on various classes of random graphs, including: 80 * Uniform: A graph G (n; p) has n vertices, with the edge between each pair of vertices indepen-dently present with probability p. Random graphs (and hypergraphs) have been used by e.g., [110] <ref> [187] </ref> [164]. <p> We believe that whether to use area information, which balance constraints apply, etc. are issues that can be addressed by identifying benchmarks (or benchmark variants) that are particularly suited for specific formulations. 82 Objective Papers Ratio Cut (unit area) <ref> [187] </ref> [80] [188] [48] [51] [156] Ratio Cut (module area) [51] [31] 45/55 Bipartitioning [156] [190] [94] [6] Bisection (unit area) [94] Bisection (module area) [188] [82] [51] [176] [195] FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way +
Reference: [188] <author> Y.-C. A. Wei and C.-K. Cheng. </author> <title> An improved two-way partitioning algorithm with stable performance. </title> <journal> IEEE Trans. Computer-Aided Design, </journal> <volume> 10(12) </volume> <pages> 1502-1511, </pages> <year> 1991. </year>
Reference-contexts: This formulation has become popular in the recent literature, both for its greater practical relevance and as an added basis for algorithm comparisons, e.g., [156] [190] present results using unit module areas and L = 9n 20 , and <ref> [188] </ref> [84] present results using actual module areas and L = 1 4 i w (v i ), 4 i w (v i ) (see Section 7). Rather than minimizing cutsize subject to cluster size constraints, the cutsize and balance criteria can be smoothly intergrated into the partitioning objective. <p> Finally, Wei and Cheng apply an FM variant in which (i) there are no size constraints, and (ii) if two modules have the same gain in terms of net cut, then the module which causes the larger reduction in ratio cut is selected to be moved. In <ref> [188] </ref>, the same authors have also applied a hierarchical version of their algorithm to obtain clusterings for use within two-phase FM (see Section 6). <p> While the approach is amenable to parallel processing, finding dense cliques by enumeration is computationally expensive. Also, by discarding medium-size and large nets to maintain sparsity, the algorithm may lose important clustering information. Ratio Cut: Chou et al. [44] and Wei and Cheng <ref> [188] </ref> have constructed clusterings based on the ratio cut objective. The algorithm of [44] applies the ratio cut algorithm of [187] to construct a bipartitioning fC 1 ; C 2 g such that C 1 U for some small U , e.g., U = 50. <p> The strategy of finding a good cluster and "peeling" it from the circuit has used in [101] for the Density objective (see Section 5.2). Chou et al. apply their clusterings to the FPGA Set Covering formulation discussed in Section 5.5. The ratio cut clustering approach of Wei and Cheng <ref> [188] </ref> iteratively applies the bipartitioning algorithm of [187] to the largest remaining cluster; the top-down divisive process ends when the largest cluster contains less than 2% of the modules. This method seems to be the only "top-down clustering" approach in the literature. <p> We believe that whether to use area information, which balance constraints apply, etc. are issues that can be addressed by identifying benchmarks (or benchmark variants) that are particularly suited for specific formulations. 82 Objective Papers Ratio Cut (unit area) [187] [80] <ref> [188] </ref> [48] [51] [156] Ratio Cut (module area) [51] [31] 45/55 Bipartitioning [156] [190] [94] [6] Bisection (unit area) [94] Bisection (module area) [188] [82] [51] [176] [195] FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module <p> issues that can be addressed by identifying benchmarks (or benchmark variants) that are particularly suited for specific formulations. 82 Objective Papers Ratio Cut (unit area) [187] [80] <ref> [188] </ref> [48] [51] [156] Ratio Cut (module area) [51] [31] 45/55 Bipartitioning [156] [190] [94] [6] Bisection (unit area) [94] Bisection (module area) [188] [82] [51] [176] [195] FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced [11] Min-Delay Clustering [140] [45] [151] [191] Absorption [179] [4] DS
Reference: [189] <author> N.-S. Woo and J. Kim. </author> <title> An efficient method of partitioning circuits for multiple-fpga implementation. </title> <booktitle> In Proc. ACM/IEEE Design Automation Conf., </booktitle> <pages> pages 202-207, </pages> <year> 1993. </year> <month> 92 </month>
Reference-contexts: As another example, it might be desirable to minimize the number of pins used, P k i=1 jE (C i )j, since this quantity represents total interconnect between FPGAs. This pin-minimization objective was proposed by Woo and Kim <ref> [189] </ref>, who also studied a more rigid capacity constraint: each module has an associated "cell type" and each FPGA device can only contain a fixed number of modules of each cell type. 2.6 Replication Formulations The final class of formulations that we preview removes the assumption that clusters are disjoint, i.e., <p> Woo and Kim <ref> [189] </ref> consider additional "cell-type" constraints for the devices: each FPGA device has an upper bound (capacity) on the number of modules of a given cell-type that can be assigned to the device. <p> Third, spectral approaches that utilize multiple eigenvectors appear promising. Previous spectral 16 Such studies can call into question the conclusions drawn in oft-cited works, in this case those of [123] [164] <ref> [189] </ref> regarding "lookahead" in iterative improvement strategies. 84 approaches that associate a single eigenvector with a cluster [18] or use only one eigenvector [80] may have inherent limitations.
Reference: [190] <author> H. Yang and D. F. Wong. </author> <title> Efficient network flow based min-cut balanced partitioning. </title> <booktitle> In Proc. IEEE Intl. Conf. Computer-Aided Design, </booktitle> <pages> pages 50-55, </pages> <year> 1994. </year>
Reference-contexts: Optimal solutions to Min-Cut Bipartitioning will often be quite unbalanced and are thus not useful within a hierarchical design methodology; however, these solutions may form the basis of a useful heuristic <ref> [190] </ref> [191]. A more practical formulation seeks minimum-cut bipartitionings with bounds on module cardinality or total module area within each cluster. <p> This formulation has become popular in the recent literature, both for its greater practical relevance and as an added basis for algorithm comparisons, e.g., [156] <ref> [190] </ref> present results using unit module areas and L = 9n 20 , and [188] [84] present results using actual module areas and L = 1 4 i w (v i ), 4 i w (v i ) (see Section 7). <p> To force a different min-cut in the next iteration, the capacity of each edge in the min-cut is increased by a factor of 1 + * in the flow network. Yang and Wong <ref> [190] </ref> apply a similar scheme, along with the flow construction in Figure 13 (c), for hypergraph bipartitioning with size constraints. However, instead of increasing capacities of edges in the cut, they pick an additional module v from the larger cluster and contract it with the smaller cluster C. <p> The objective is of interest since ratio cut solutions tend to be highly unbalanced and hence impractical, yet exact bisections are too restrictive. This work has very quickly become a standard object of comparisons (cf. [6] [94] <ref> [190] </ref>). Many of the formulations listed in the Table are quite similar, e.g., the first five formulations are all bipartitioning variants. While it is unclear which formulation is "correct", all of the associated bipartitioning algorithms are certainly comparable in some sense. <p> to use area information, which balance constraints apply, etc. are issues that can be addressed by identifying benchmarks (or benchmark variants) that are particularly suited for specific formulations. 82 Objective Papers Ratio Cut (unit area) [187] [80] [188] [48] [51] [156] Ratio Cut (module area) [51] [31] 45/55 Bipartitioning [156] <ref> [190] </ref> [94] [6] Bisection (unit area) [94] Bisection (module area) [188] [82] [51] [176] [195] FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced [11]
Reference: [191] <author> H. Yang and D. F. Wong. </author> <title> Circuit clustering for delay minimization under area and pin constraints. </title> <booktitle> In Proc. European Design and Test Conf. (to appear), </booktitle> <year> 1995. </year>
Reference-contexts: Optimal solutions to Min-Cut Bipartitioning will often be quite unbalanced and are thus not useful within a hierarchical design methodology; however, these solutions may form the basis of a useful heuristic [190] <ref> [191] </ref>. A more practical formulation seeks minimum-cut bipartitionings with bounds on module cardinality or total module area within each cluster. <p> These constraints allow each cluster to be mapped to a configurable logic block, i.e., a K-input lookup table that can implement any Boolean function of K variables. To address this formulation, Cong and Ding proposed a labeling and flow-based heuristic. Subsequently, Yang and Wong <ref> [191] </ref> proved that the same approach is not only optimal for these pin constraints, but also optimal for the more general pin constraints jIn (C h ) [ Out (C h )j K + 1 under the unit-delay model. The authors of [191] combine the approaches of [45] and [151] into <p> Subsequently, Yang and Wong <ref> [191] </ref> proved that the same approach is not only optimal for these pin constraints, but also optimal for the more general pin constraints jIn (C h ) [ Out (C h )j K + 1 under the unit-delay model. The authors of [191] combine the approaches of [45] and [151] into a heuristic for min-delay clustering under size and pin constraints w (C h ) U , jE (C h )j K + 1. <p> [94] Bisection (module area) [188] [82] [51] [176] [195] FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced [11] Min-Delay Clustering [140] [45] [151] <ref> [191] </ref> Absorption [179] [4] DS [82] [4] Density [101] Replication [122] [104] MCM/Quadrisection [178] [159] [158] Table 1: Various partitioning formulations and some works that provide corresponding experimental results.
Reference: [192] <author> H. Yang and D. F. Wong. </author> <title> Optimal wiring minimization for partitioned circuits with least replication. </title> <type> Manuscript, </type> <year> 1995. </year>
Reference-contexts: For example, one might apply the algorithm to the bipartition-ing fV C; Cg when a cluster C is close to satisfying the pin constraint jE (C)j IO. As a heuristic, [104] integrated their min-cut replication solution with a modified form of FM. Yang and Wong <ref> [192] </ref> slightly enhanced Hwang and El Gamal's approach to solve the min-cut replication problem while min imizing jC fl j as a secondary objective, breaking ties so that a min-cut with "minimum size" is found.
Reference: [193] <author> C.-W. Yeh, C.-K. Cheng, and T.-T. Y. Lin. </author> <title> A probabilistic multi-commodity flow solution to circuit clustering problems. </title> <booktitle> In Proc. IEEE Intl. Conf. Computer-Aided Design, </booktitle> <pages> pages 428-431, </pages> <year> 1992. </year> <note> Also see IEEE Trans. on CAD, </note> <month> 14:(2), </month> <pages> pp. 154-162, </pages> <year> 1995, </year> <note> for extended version. </note>
Reference-contexts: Note that the two objectives are identical for undirected graphs (which have jej = 2 for all e 2 E). As with bipartitioning, it is possible to integrate cutsize and cluster size balance within a single objective. To this end, Chan et al. [37] and Yeh et al. <ref> [193] </ref> respectively proposed the Minimum Scaled Cost and Minimum Cluster Ratio objectives. 11 Minimum Scaled Cost: Minimize F (P k ) = n (k 1) h=1 w (C h ) Minimum Cluster Ratio: Minimize F (P k ) = P k1 P k : Both of these objectives are k-way generalizations <p> For each such edge, v is assigned to cluster C i . This algorithm guarantees the optimal module assignment in terms of maximum sum of preferences. 5.2.5 Shortest Path Clustering and Probabilistic Methods Yeh et al. <ref> [193] </ref> proposed an algorithm based on the relationship between uniform multi-commodity flow and min-cut partitioning. Yeh et al. construct a "flow network" by assigning c (e) = cost (e) = 1 and f (e) = 0 for every net e. <p> (unit area) [187] [80] [188] [48] [51] [156] Ratio Cut (module area) [51] [31] 45/55 Bipartitioning [156] [190] [94] [6] Bisection (unit area) [94] Bisection (module area) [188] [82] [51] [176] [195] FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] <ref> [193] </ref> Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced [11] Min-Delay Clustering [140] [45] [151] [191] Absorption [179] [4] DS [82] [4] Density [101] Replication [122] [104] MCM/Quadrisection [178] [159] [158] Table 1: Various partitioning formulations and some works that provide corresponding experimental
Reference: [194] <author> C.-W. Yeh, C.-K. Cheng, and T.-T. Y. Lin. </author> <title> A general purpose, multiple-way partitioning algorithm. </title> <journal> IEEE Trans. Computer-Aided Design, </journal> <volume> 13(12) </volume> <pages> 1480-1487, </pages> <year> 1994. </year>
Reference-contexts: Observe that the intersection graph can be derived by applying the clique net model to the dual hypergraph. Yeh et al. <ref> [194] </ref> used this representation for their Primal-Dual FM based algorithm (see Section 3.5), and [49] used a combination of the intersection and dual representations. * Directed Graph: Signal flow direction can be directly integrated into a graph representation, e.g., by creating directed edges (S (e); w) for every e 2 E <p> The algorithm permits a maximum of ten moves per module per pass. Dasdan and Aykanat 30 [52] propose a multi-way FM variant that allows a small constant number (e.g., three or four) module moves per pass. Yeh et al. <ref> [194] </ref> gave an extension of Sanchis' multi-way partitioning algorithm that alternates "primal" passes of module moves with "dual" passes of net moves. A dual pass allows more than one module to be moved simultaneously, thereby expanding the neighborhood structure. <p> [156] Ratio Cut (module area) [51] [31] 45/55 Bipartitioning [156] [190] [94] [6] Bisection (unit area) [94] Bisection (module area) [188] [82] [51] [176] [195] FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] <ref> [194] </ref> Multi-way + slack (unit area) [79] [8] Multi-way balanced [11] Min-Delay Clustering [140] [45] [151] [191] Absorption [179] [4] DS [82] [4] Density [101] Replication [122] [104] MCM/Quadrisection [178] [159] [158] Table 1: Various partitioning formulations and some works that provide corresponding experimental results.
Reference: [195] <author> C.-W. Yeh, C.-K. Cheng, and T.-T. Y. Lin. </author> <title> Optimization by iterative improvement: An experimental evaluation on two-way partitioning. </title> <journal> IEEE Trans. Computer-Aided Design, </journal> <volume> 14(2) </volume> <pages> 145-153, </pages> <month> February </month> <year> 1995. </year>
Reference-contexts: The differences in interpretations of the benchmarks can lead to discrepancies in the resulting inputs, and researchers may end up comparing the cuts of graphs and hypergraphs that are not the same. For example, the number of modules reported for the Test02-06 benchmarks is higher in <ref> [195] </ref> than in [82], which is likely due to the interpretation of I/O pads. In other cases, problems may arise from netlist connectivity. <p> addressed by identifying benchmarks (or benchmark variants) that are particularly suited for specific formulations. 82 Objective Papers Ratio Cut (unit area) [187] [80] [188] [48] [51] [156] Ratio Cut (module area) [51] [31] 45/55 Bipartitioning [156] [190] [94] [6] Bisection (unit area) [94] Bisection (module area) [188] [82] [51] [176] <ref> [195] </ref> FPGA Devices [125] [126] [44] [100] [38] [157] Scaled Cost [37] [3] [5] [4] [6] Cluster Ratio [3] [193] Multi-Way + slack (module area) [49] [194] Multi-way + slack (unit area) [79] [8] Multi-way balanced [11] Min-Delay Clustering [140] [45] [151] [191] Absorption [179] [4] DS [82] [4] Density [101]
Reference: [196] <author> H. J. Zimmerman. </author> <title> Fuzzy Set Theory and its Applications. </title> <publisher> Kluwer Nlijhoff, </publisher> <address> 2nd edition, </address> <year> 1991. </year> <month> 93 </month>
Reference-contexts: constructing partitionings from placements derived via mathematical programming is a promising research direction. 5.4 Fuzzy Partitioning The Fuzzy k-Means (FKM) algorithm is a well-known optimization technique for clustering problems that arise in such fields as geological shape analysis, medical diagnosis, image analysis, irrigation design, 68 and automatic target recognition [35] <ref> [196] </ref>. The problem formulation generally involves clustering data points in multi-dimensional space, although the paradigm can be applied more generally. A fuzzy partitioning can partially assign a module to several clusters, e.g., 1 2 to C 1 and 1 and to C 3 .
References-found: 196

