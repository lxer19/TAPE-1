URL: http://www.cs.brandeis.edu/~mairson/Papers/statman.ps.gz
Refering-URL: http://www.cs.brandeis.edu/~mairson/
Root-URL: http://www.cs.brandeis.edu
Title: A simple proof of a theorem of Statman  
Author: Harry G. Mairson 
Address: Cambridge, Massachusetts 02139  
Affiliation: Cambridge Research Laboratory Digital Equipment Corporation  
Abstract: In this note, we reprove a theorem of Statman that deciding the fi-equality of two first-order typable -terms is not elementary recursive [Sta79]. The basic idea of our proof, like that of Statman's, is the Henkin quantifier elimination procedure [Hen63]. However, our coding is much simpler, and easy to understand.
Abstract-found: 1
Intro-found: 1
Reference: [Coo71] <author> S. A. Cook. </author> <title> The complexity of theorem-proving procedures. </title> <booktitle> 3rd Annual ACM Symposium on the Theory of Computing, </booktitle> <pages> pp. 151-158. </pages>
Reference-contexts: The logical specification of ~ ffi is straightforward, more or less on the level of the detailed coding in Cook's Theorem <ref> [Coo71, GJ79] </ref>.
Reference: [GJ79] <author> M. R. Garey and D. S. Johnson. </author> <title> Computers and Intractibility: A Guide to the Theory of NP-Completeness. </title> <editor> W. H. </editor> <publisher> Freeman, </publisher> <year> 1979. </year>
Reference-contexts: The logical specification of ~ ffi is straightforward, more or less on the level of the detailed coding in Cook's Theorem <ref> [Coo71, GJ79] </ref>.
Reference: [HM91] <author> F. Henglein and H. G. Mairson. </author> <title> The complexity of type inference for higher-order typed lambda calculi. </title> <booktitle> 18th ACM Symposium on the Principles of Programming Languages, </booktitle> <month> January </month> <year> 1991, </year> <pages> pp. 119-130. </pages>
Reference-contexts: The recent results on complexity of type inference for higher-order typed lambda calculi <ref> [KMM91, HM91] </ref> follow a similar development, except that logical characterizations of computation are replaced by characterizations based on first-order unification.
Reference: [Hen63] <author> L. </author> <title> Henkin. A theory of propositional types. </title> <journal> Fundamenta Mathematicae 52, </journal> <year> 1963, </year> <pages> pp. 323-344. </pages>
Reference-contexts: By successively increasing the range of quantification to sets of Booleans, sets of sets of Booleans, etc., it was possible to quantify over Boolean functionals, capturing more and more powerful complexity classes. 6 Statman's Theorem just uses the typed -calculus to realize the quantifier elimination pro-cedure of Henkin <ref> [Hen63] </ref> on these succinct formulas. The recent results on complexity of type inference for higher-order typed lambda calculi [KMM91, HM91] follow a similar development, except that logical characterizations of computation are replaced by characterizations based on first-order unification.
Reference: [HS86] <author> J. R. Hindley and J. P. Seldin. </author> <title> Introduction to Combinators and -Calculus. </title> <publisher> Cambridge University Press, </publisher> <year> 1986. </year>
Reference-contexts: Scott's undecidability theorem (see, e.g., <ref> [HS86] </ref>) states that no two nonempty, disjoint sets of -terms are recursively separable: given such sets fl and fl of -terms closed under fi-equality, no algorithm can decide, given an arbitrary x chosen from fl [ fl, whether x 2 fl, or x 2 fl.
Reference: [KMM91] <author> P. C. Kanellakis, H. G. Mairson, and J. C. Mitchell. </author> <title> Unification and ML type reconstruction. </title> <booktitle> In Computational Logic: Essays in Honor of Alan Robinson, </booktitle> <editor> ed. J.-L. Lassez and G. Plotkin, </editor> <publisher> MIT Press, </publisher> <year> 1991, </year> <pages> pp. 444-478. </pages>
Reference-contexts: The recent results on complexity of type inference for higher-order typed lambda calculi <ref> [KMM91, HM91] </ref> follow a similar development, except that logical characterizations of computation are replaced by characterizations based on first-order unification.
Reference: [Mey74] <author> A. R. Meyer. </author> <title> The inherent computational complexity of theories of ordered sets. </title> <booktitle> Proceedings of the International Congress of Mathematicians, </booktitle> <year> 1974. </year>
Reference-contexts: Supported in part by NSF Grant CCR-9017125, and grants from Texas Instruments and from the Tyson Foundation. This paper appeared in Theoretical Computer Science 103 (1992), pp. 387-394. 1 As shown by Meyer, this decision problem requires nonelementary time <ref> [Mey74] </ref>. Statman's theorem is a reduction to this problem: it shows how to use typed lambda calculus to simulate the logical connectives as well as a quantifier elimination procedure to reduce , in the logical and -calculus sense, to either true or false.
Reference: [Sta79] <author> R. Statman. </author> <title> The typed -calculus is not elementary recursive. </title> <booktitle> Theoretical Computer Science 9, </booktitle> <year> 1979, </year> <pages> pp. 73-81. </pages>
Reference: [Sta82] <author> R. Statman. </author> <title> Completeness, invariance, and -definability. </title> <journal> Journal of Symbolic Logic 47:1, </journal> <year> 1982, </year> <pages> pp. 17-26. 7 </pages>
Reference-contexts: to true x : :y : :x : Bool. 3.4 Remarks on separation theorems in -calculus It is instructive to realize how the notion of nonrecursive in the context of untyped -calculus functions precisely in the same manner as the notion of non Kalmar-elementary functions in the first-order typed -calculus <ref> [Sta82] </ref>. <p> Hence deciding membership of E a b in fl or fl is as hard as deciding the truth of E, which cannot be computed in elementary time. Statman gives as well another corollary <ref> [Sta82] </ref>. Let fl be a set of -terms of fixed type t , closed under fi-equality, where membership in fl is decidable in elementary time. Then fl contains all or none of the terms of type t .
References-found: 9

