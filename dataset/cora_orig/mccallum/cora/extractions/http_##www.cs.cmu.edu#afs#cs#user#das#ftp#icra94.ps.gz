URL: http://www.cs.cmu.edu/afs/cs/user/das/ftp/icra94.ps.gz
Refering-URL: http://www.cs.cmu.edu/afs/cs/user/das/www/
Root-URL: 
Abstract: This paper describes a system which can perform full 3-D pose estimation of a single arbitrarily shaped, rigid object at rates up to 10Hz. A triangular mesh model of the object to be tracked is generated ofine using conventional range sensors. Real-time range data of the object is sensed by the CMU high speed VLSI range sensor. Pose estimation is performed by registering the real-time range data to the triangular mesh model using an enhanced implementation of the Iterative Closest Point (ICP) Algorithm introduced by Besl and McKay. The method does not require explicit feature extraction or specification of correspondence. Pose estimation accuracies on the order of 1% of the object size in translation, and 1 degree in rotation have been measured. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Bentley, J.L. </author> <title> Multidimensional binary search trees used for associative searching. </title> <journal> Communications of the ACM. </journal> <volume> 18(9) </volume> <pages> 509-517, </pages> <month> September, </month> <year> 1975. </year>
Reference-contexts: However, as suggested in [2] and demonstrated in [14], this complexity can be reduced to by the use of a k-dimensional binary tree, or simply kd-tree <ref> [1] </ref>. The use of kd-trees for closest point computation allows us at each node of a binary tree to decide which side of a hyperplane the closest point will lie on. Thus, large regions of the search space can be pruned at each level in the search.
Reference: [2] <author> Besl, P.J. and McKay, </author> <title> N.D. A method for registration of 3-D shapes. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence. </journal> <volume> 14(2) </volume> <pages> 239-256, </pages> <month> February, </month> <year> 1992. </year>
Reference-contexts: Section 4 describes the experimental setup used to demonstrate the approach. Section 5 contains experimental results, and Section 6 contains the conclusion. 2 Registration The registration algorithm used in this system is strongly motivated by the work of Besl and McKay <ref> [2] </ref>. Their paper describes a general purpose method for the registration of rigid 3-D shapes which they refer to as the Iterative Closest Point algorithm. Zhang [14] has independently developed a similar algorithm which is better at handling outliers and occlusions in the data. <p> First, the point correspondence which was assumed to be known in the above problem is unknown in the general case. Second, general 3-D shapes to be registered are not necessarily represented as point sets <ref> [2] </ref>. Suppose that we are again given two sets M and D corresponding to a single shape, where D is a set of 3-D points and M is a triangular faceted surface. Assume that the correspondence between points in the two sets is initially unknown. <p> In general, if there are points in the data set and geometric entities (i.e.: points, lines, triangles) in the model set, then the complexity of the closest point computation is . However, as suggested in <ref> [2] </ref> and demonstrated in [14], this complexity can be reduced to by the use of a k-dimensional binary tree, or simply kd-tree [1]. <p> Thus, during initialization each triangle must be saved in both its 2D and 3-D representations. 2.2.4 Acceleration A final speed improvement was realized using a modified version of the accelerated ICP algorithm described in <ref> [2] </ref>. The accelerated ICP algorithm adds the following step to the basic algorithm (after step 2): 2b. If the incremental transformations (R, T) at times k-1, k-2, and k-3 are well aligned, extrapolate the current incremental transformation. <p> This transformation, , can be found in several seconds using the ICP algorithm with a starting transformation provided by the user. (A fully automated initialization would be possible using one of the techniques for global pose estimation discussed in <ref> [2] </ref>). In practice, we have found that initial pose errors as large as 15 degrees of rotation about each axis, and 50% of the object size in any translation will typically converge to the global minimum.
Reference: [3] <author> Delingette, H., Hebert, M. and Ikeuchi, K. </author> <title> Shape representation and image segmentation using deformable surfaces. </title> <journal> Image and Vision Computing. </journal> <volume> 10(3) </volume> <pages> 132-144, </pages> <month> April, </month> <year> 1992. </year>
Reference-contexts: For our experiments, M is constructed ofine using a technique based on deformable surfaces <ref> [3] </ref>. This technique can fuse range data collected from multiple views into a single triangular mesh surface model. The range data used to create M is provided by several commercially available light-stripe range finders [11].
Reference: [4] <author> Faugeras, O.D. and Hebert, M. </author> <title> The representation, recognition, and locating of 3-D objects. </title> <journal> The International Journal of Robotics Research. </journal> <volume> 5(3) </volume> <pages> 27-52, </pages> <month> Fall, </month> <year> 1986. </year>
Reference-contexts: Simon, Martial Hebert and Takeo Kanade The Robotics Institute Carnegie Mellon University Pittsburgh, PA 15213-3891 2 nions, were presented in two papers, one by Faugeras and Hebert <ref> [4] </ref> and the other by Horn [7]. The general 3-D shape registration problem that we address here, however, differs from the corresponding point set registration problem in two important regards. First, the point correspondence which was assumed to be known in the above problem is unknown in the general case.
Reference: [5] <author> Friedman, J.H., Bentley, J.L. and Finkel, R.A. </author> <title> An algorithm for finding best matches in logarithmic expected time. </title> <journal> ACM Transactions on Mathematical Software. </journal> <volume> 3(3) </volume> <pages> 209-226, </pages> <year> 1977. </year>
Reference-contexts: Thus, large regions of the search space can be pruned at each level in the search. We have implemented a closest point algorithm based on the kd-tree <ref> [5] </ref>. The resulting performance improvement is significant as will be shown below in Table 1. 2.2.2 Closest point caching A second small speed improvement was realized by caching closest points.
Reference: [6] <author> Gruss, A., Tada, S. and Kanade, T. </author> <title> A VLSI smart sensor for fast range imaging. </title> <booktitle> International Conference on Intelligent Robots and Systems (IROS '92), </booktitle> <pages> pages 349-58. </pages> <publisher> IEEE, </publisher> <address> Raleigh, NC, </address> <month> July, </month> <year> 1992. </year>
Reference-contexts: Since the extrapolated pose is often closer to the true pose than , the time required to compute the pose is reduced. 4 Experimental setup The experimental setup is shown in Figure 5. The CMU high speed VLSI range sensor developed by Gruss, Tada and Kanade <ref> [6] </ref> consists of two primary components: the sensor head and the light stripe generator. The tracked object, in this case a small bust of the Greek goddess Venus, is mounted on the end effector of a Microbot robot.
Reference: [7] <author> Horn, B.K.P. </author> <title> Closed-form solution of absolute orientation using unit quaternions. </title> <journal> Journal of the Optical Society of America A. </journal> <volume> 4(4) </volume> <pages> 629-642, </pages> <month> April, </month> <year> 1987. </year>
Reference-contexts: Simon, Martial Hebert and Takeo Kanade The Robotics Institute Carnegie Mellon University Pittsburgh, PA 15213-3891 2 nions, were presented in two papers, one by Faugeras and Hebert [4] and the other by Horn <ref> [7] </ref>. The general 3-D shape registration problem that we address here, however, differs from the corresponding point set registration problem in two important regards. First, the point correspondence which was assumed to be known in the above problem is unknown in the general case.
Reference: [8] <author> Kehtarnavaz, N. and Mohan, S. </author> <title> A framework for estimation of motion parameters from range images. Computer Vision, </title> <journal> Graphics, and Image Processing. </journal> <volume> 45(1) </volume> <pages> 88-105, </pages> <month> January, </month> <year> 1989. </year>
Reference: [9] <author> Marcus, H. and Bourell, D. </author> <title> Solid free form fabrication. </title> <booktitle> Advanced Materials and Processes. </booktitle> <volume> 144(3) </volume> <pages> 28-35, </pages> <month> September, </month> <year> 1993. </year>
Reference-contexts: Thus, the sensor resolution at this distance is about 2.8 range measurements per cm in each direction. All of the results presented below were collected using the face object shown in Figure 6. This object was manufactured directly from a triangular mesh CAD model using a stereolithographic process <ref> [9] </ref>. The advantage of this approach is that the physical object is very accurately represented by the corresponding CAD model. Thus, for purposes of characterizing system accuracy, errors caused by differences between the physical object and the CAD model are minimized.
Reference: [10] <author> Papanikolopoulos, N.P., Nelson, B and Khosla, P.K. </author> <title> Full 3-D tracking using the controlled active vision paradigm. </title> <booktitle> Proceedings of the International Symposium on Intelligent Control. IEEE, </booktitle> <address> Glasgow, Scotland, U.K., </address> <month> August, </month> <year> 1992. </year>
Reference: [11] <author> Sato, K. and Inokuchi, S. </author> <title> Range-imaging system utilizing nematic liquid crystal mask. </title> <booktitle> Proc. ICCV, </booktitle> <pages> pages 657-661. </pages> <address> London, UK, </address> <year> 1987. </year>
Reference-contexts: For our experiments, M is constructed ofine using a technique based on deformable surfaces [3]. This technique can fuse range data collected from multiple views into a single triangular mesh surface model. The range data used to create M is provided by several commercially available light-stripe range finders <ref> [11] </ref>. These sensors have been calibrated so that all data points are expressed in a single, world-centered coordinate frame. To initialize the tracking algorithm, the transformation between the model, M, and the initial object pose D [0], must be calculated.
Reference: [12] <author> Wang, J. and Wilson, W.J. </author> <title> 3D relative position and orientation estimation using Kalman filter for robot control. </title> <booktitle> Proceedings of IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 2638-2645. </pages> <publisher> IEEE, </publisher> <address> Nice, France, </address> <month> May, </month> <year> 1992. </year>
Reference-contexts: Third, in order to perform 3-D pose estimation in real-time, each step in the underlying algorithm must be computationally efficient. Direct use of 3-D data simplifies the pose estimation problem by providing shape structure which would otherwise need to be inferred from 2-D data. As noted in <ref> [12] </ref>, while 2-D data is useful for estimating object motion in planes normal to a cameras optical axis, it is less sensitive to motions which deviate from these planes. Direct use of 3-D data should provide more precise object pose estimates, especially for general 3-D motions.
Reference: [13] <author> Yamamoto, M. </author> <title> Direct estimation of range ow on deformable shape from a video rate range camera. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence. </journal> <volume> 15(1) </volume> <pages> 82-89, </pages> <month> January, </month> <year> 1993. </year>
Reference-contexts: To our knowledge, no previous approaches have succeeded in combining both high speed acquisition of 3-D data with high speed 3-D pose computation. Several researchers have utilized range data in the 3-D pose estimation problem [8]<ref> [13] </ref>. Yamamoto [13] discusses a system for estimating the shape and pose of deformable objects using a video rate range camera, but the required computations are not performed at high speed. The remainder of this paper is organized as follows.

References-found: 13

