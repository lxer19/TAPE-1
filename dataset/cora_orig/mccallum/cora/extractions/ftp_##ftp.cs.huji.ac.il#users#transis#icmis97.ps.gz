URL: ftp://ftp.cs.huji.ac.il/users/transis/icmis97.ps.gz
Refering-URL: http://www.cs.huji.ac.il/~grishac/grishac.html
Root-URL: http://www.cs.huji.ac.il
Email: fanker,grishac,idish,micr,wexlerg@cs.huji.ac.il  
Title: Exploiting Group Communication for Highly Available Video-On-Demand Services (Extended Abstract) service exploits the Transis group
Author: Tal Anker Gregory V. Chockler Idit Keidar Michael Rozman Jonathan Wexler 
Note: The VoD  
Address: Jerusalem, Israel  
Affiliation: Institute of Computer Science The Hebrew University of Jerusalem  
Web: http://www.cs.huji.ac.il/f~anker,~grishac,~idish,~wexlerg  
Abstract: Video on Demand services are popular today in hotels and luxury cruise boats. Increasing improvement in communication technology, will invite widespread utilization of VoD services in private homes, provided by telecommunication companies and via the Internet. In such an environment, scalability and fault tolerance will be key issues. In this paper we describe a highly available distributed Video on Demand (VoD) service, which is inherently scalable and fault tolerant. The VoD service is provided by multiple servers, that may reside in different sites. When a server crashes (or disconnects from its clients), it is replaced by another server in a transparent way; the clients are unaware of the change in the service provider. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <editor> ACM. </editor> <booktitle> Communications of the ACM 39(4), special issue on Group Communications Systems, </booktitle> <month> April </month> <year> 1996. </year>
Reference-contexts: Furthermore, the servers and clients need to exchange messages for connection establishment, flow control and negotiation and re-negotiation of Quality of Service (QoS) [16]. These tasks may greatly benefit from the group communication paradigm [9], described below. Group communication systems <ref> [1] </ref> provide reliable communication services within dynamically changing groups, as well as membership services, which inform the members when other members crash or join the group. These properties make group communication systems an attractive building block for a reliable VoD service.
Reference: [2] <author> T. Anker, D. Breitgand, D. Dolev, and Z. Levy. </author> <title> Congress: CONnection-oriented Group-address RESolution Service. </title> <type> Tech. Report CS96-23, </type> <institution> Institute of Computer Science, The Hebrew University of Jerusalem, Jerusalem, Israel, </institution> <month> December </month> <year> 1996. </year> <note> Available from: http://www.cs.huji.ac.il/labs/transis/. </note>
Reference-contexts: The MMTS will open native ATM UNI 3.1 [3] or UNI 4.0 [5] connections for QoS, and will run the Transis system over classical UDP/IP with LAN emulation over ATM (LANE) [4]. We also intend to exploit the congress group resolution service <ref> [2] </ref>, as a basis for membership and failure detection in the MMTS. 4 Service Design: Exploiting Group Communication The VoD service exploits the Transis [10] group communication system for fault tolerance, load balancing, connection establishment, negotiation of Quality of Service (QoS), and video control.
Reference: [3] <author> ATM Forum. </author> <title> ATM User Network Interface (UNI) Specification Version 3.1. </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <month> June </month> <year> 1995. </year> <note> ISBN 0-13-393828-X. </note>
Reference-contexts: The membership reports are delivered within the flow of regular messages. 3.2 Exploiting ATM Networks We intend to use our Multimedia Multicast Transport Service [9], that incorporates multiple quality of service (QoS) options into the group communication framework. The MMTS will open native ATM UNI 3.1 <ref> [3] </ref> or UNI 4.0 [5] connections for QoS, and will run the Transis system over classical UDP/IP with LAN emulation over ATM (LANE) [4].
Reference: [4] <author> The ATM Forum. </author> <title> LAN Emulation Over ATM Specification Version 1.0, </title> <month> February </month> <year> 1995. </year>
Reference-contexts: The MMTS will open native ATM UNI 3.1 [3] or UNI 4.0 [5] connections for QoS, and will run the Transis system over classical UDP/IP with LAN emulation over ATM (LANE) <ref> [4] </ref>.
Reference: [5] <author> The ATM Forum Technical Committee. </author> <title> ATM User-Network Interface (UNI) Signalling Specification Version 4.0, </title> <address> af-sig-0061.000, </address> <month> July </month> <year> 1996. </year>
Reference-contexts: The MMTS will open native ATM UNI 3.1 [3] or UNI 4.0 <ref> [5] </ref> connections for QoS, and will run the Transis system over classical UDP/IP with LAN emulation over ATM (LANE) [4].
Reference: [6] <author> The ATM Forum Technical Committee. </author> <title> Audiovisual Multimedia Services: Video on Demand Specification 1.0, </title> <address> af-saa-0049.000, </address> <month> January </month> <year> 1996. </year>
Reference-contexts: The service supports the ATM Forum VoD specs <ref> [6] </ref>: it allows the client to have full VCR like control over the transmitted material, e.g., pause, restart, and arbitrary advance and rewind. The client's user interface is shown in Figure 1.
Reference: [7] <author> S. Berson, L. Golubchik, and R. R. Muntz. </author> <title> Fault Tolerant Design of Multimedia Servers. </title> <booktitle> In Proceedings of the ACM SIGMOD International Conference on Management of Data, </booktitle> <pages> pages 364-375, </pages> <month> May </month> <year> 1995. </year>
Reference-contexts: Existing video on demand systems today [18, 19, 16, 24] are usually neither scalable nor tolerant to server faults, and are therefore inappropriate for multi-user failure-prone networks such as neighborhood servers or the Internet. Current research in the area of VoD often focuses on recovery from disk failures <ref> [11, 7] </ref>, but rarely addresses the question of smooth provision of service in the presence of server and communication failures. Researchers and industries building multi-media applications use ad-hoc solutions, that do not correctly deal with the subtleties of concurrency in distributed computing.
Reference: [8] <author> K. Birman, R. Friedman, and M. Hayden. </author> <title> The Maestro Group Manager: A Structuring Tool For Applications With Multiple Quality of Service Requirements. </title> <type> Technical report, </type> <institution> Dept. of Computer Science, Cornell University, </institution> <address> Ithaca, NY 14850, USA, </address> <month> February </month> <year> 1997. </year>
Reference-contexts: These properties are crucial for the performance of the video application. Recently, several emerging projects addressed the challenge of incorporate QoS communication into the framework of group communication. For example, [9] introduces a Multimedia Multicast Transport Service (MMTS), that incorporates multiple QoS options into the group communication framework. Maestro <ref> [8] </ref> extends the Ensemble [12] group communication system by coordinating several protocol stacks with different QoS guarantees. The Collaborative Computing Transport Layer (CCTL) [17] implements similar concepts, geared towards distributed collaborative multimedia applications.
Reference: [9] <author> G. Chockler, N. Huleihel, I. Keidar, and D. Dolev. </author> <title> Multimedia Multicast Transport Service for Group-ware. </title> <booktitle> In TINA Conference on the Convergence of Telecommunications and Distributed Computing Tech--nologies, </booktitle> <month> September </month> <year> 1996. </year> <note> Full version available as Technical Report CS96-3, </note> <institution> The Hebrew University, Jerusalem, Israel. </institution>
Reference-contexts: Furthermore, the servers and clients need to exchange messages for connection establishment, flow control and negotiation and re-negotiation of Quality of Service (QoS) [16]. These tasks may greatly benefit from the group communication paradigm <ref> [9] </ref>, described below. Group communication systems [1] provide reliable communication services within dynamically changing groups, as well as membership services, which inform the members when other members crash or join the group. These properties make group communication systems an attractive building block for a reliable VoD service. <p> These properties are crucial for the performance of the video application. Recently, several emerging projects addressed the challenge of incorporate QoS communication into the framework of group communication. For example, <ref> [9] </ref> introduces a Multimedia Multicast Transport Service (MMTS), that incorporates multiple QoS options into the group communication framework. Maestro [8] extends the Ensemble [12] group communication system by coordinating several protocol stacks with different QoS guarantees. <p> Transis provides the group members with indication of the current membership: the group of currently connected processes. The membership reports are delivered within the flow of regular messages. 3.2 Exploiting ATM Networks We intend to use our Multimedia Multicast Transport Service <ref> [9] </ref>, that incorporates multiple quality of service (QoS) options into the group communication framework. The MMTS will open native ATM UNI 3.1 [3] or UNI 4.0 [5] connections for QoS, and will run the Transis system over classical UDP/IP with LAN emulation over ATM (LANE) [4]. <p> Existing Video on Demand systems rarely address the issues of server failures and scalability, which are key issues in multi-user failure-prone networks such as neighborhood servers or the Internet. Our service exploits the concept of MMTS <ref> [9] </ref> which incorporates QoS communication within the frame work of group communication. The group communi cation system provides the following advantages: 1. The group abstraction simplifies connection establishment and allows for a transparent migration of clients, while maintaining simple client design.
Reference: [10] <author> D. Dolev and D. Malki. </author> <title> The Transis Approach to High Availability Cluster Communication. </title> <journal> Communications of the ACM, </journal> <volume> 39(4), </volume> <month> April </month> <year> 1996. </year>
Reference-contexts: The conference bus may be coupled with a coordination tool. The MMTS can be viewed as integrating both the conference bus and the coordination tool. The VoD service presented in this paper was implemented using the MMTS concept: it exploits the Tran-sis <ref> [10] </ref> group communication system, enhanced with QoS communication. The video stream is multicast using QoS communication, and Transis is used for consistent information sharing, connection establishment, and flow control. These tasks take up about one thousandth of the total communication bandwidth used by the VoD service. <p> We implemented a prototype of the VoD service to demonstrate feasibility of our concepts. The prototype was implemented using UDP/IP over 10 Mbit/s Ethernet for video transmission, and the Transis <ref> [10] </ref> group communication system. The prototype runs on SUN Sparc machines, running SunOS 4.1 UNIX. The video is stored and transmitted in MPEG [13] format, and is decoded using software. We are currently in the process of replacing the software video decoders by hardware decoders on PCs running Windows 3.11/95/NT. <p> Later, we intend to exploit native ATM for the QoS communication. In Section 3.1 we describe the services of Transis. In Section 3.2 we describe how we plan to run the VoD service over an ATM network. 3.1 Transis Services Transis <ref> [10] </ref> is a group communication system that supports efficient and reliable multicast and membership services. The Transis multicast services offer various types of message ordering. For example, the Causal multicast service guarantees that the reply to a message is never delivered before the message itself at any target. <p> We also intend to exploit the congress group resolution service [2], as a basis for membership and failure detection in the MMTS. 4 Service Design: Exploiting Group Communication The VoD service exploits the Transis <ref> [10] </ref> group communication system for fault tolerance, load balancing, connection establishment, negotiation of Quality of Service (QoS), and video control. It exploits QoS communication for video transmission. In this section we describe the service design. The full details of the VoD implementation may be found in [20].
Reference: [11] <author> R. Haskin and F. Schmuck. </author> <title> The Tiger Shark File System. </title> <booktitle> In Proceedings of IEEE Spring COMPCON, </booktitle> <month> Feb. </month> <year> 1996. </year>
Reference-contexts: Existing video on demand systems today [18, 19, 16, 24] are usually neither scalable nor tolerant to server faults, and are therefore inappropriate for multi-user failure-prone networks such as neighborhood servers or the Internet. Current research in the area of VoD often focuses on recovery from disk failures <ref> [11, 7] </ref>, but rarely addresses the question of smooth provision of service in the presence of server and communication failures. Researchers and industries building multi-media applications use ad-hoc solutions, that do not correctly deal with the subtleties of concurrency in distributed computing.
Reference: [12] <author> M. Hayden and R. van Renesse. </author> <title> Optimizing Layered Communication Protocols. </title> <type> Technical Report TR96-1613, </type> <institution> Dept. of Computer Science, Cornell University, </institution> <address> Ithaca, NY 14850, USA, </address> <month> November </month> <year> 1996. </year>
Reference-contexts: Recently, several emerging projects addressed the challenge of incorporate QoS communication into the framework of group communication. For example, [9] introduces a Multimedia Multicast Transport Service (MMTS), that incorporates multiple QoS options into the group communication framework. Maestro [8] extends the Ensemble <ref> [12] </ref> group communication system by coordinating several protocol stacks with different QoS guarantees. The Collaborative Computing Transport Layer (CCTL) [17] implements similar concepts, geared towards distributed collaborative multimedia applications.
Reference: [13] <author> ISO/IEC 13818 and ISO/IEC 11172. </author> <title> The MPEG Specification. </title> <address> http://www.mpeg2.de/. </address>
Reference-contexts: The prototype was implemented using UDP/IP over 10 Mbit/s Ethernet for video transmission, and the Transis [10] group communication system. The prototype runs on SUN Sparc machines, running SunOS 4.1 UNIX. The video is stored and transmitted in MPEG <ref> [13] </ref> format, and is decoded using software. We are currently in the process of replacing the software video decoders by hardware decoders on PCs running Windows 3.11/95/NT. Later, we intend to exploit native ATM for the QoS communication. In Section 3.1 we describe the services of Transis.
Reference: [14] <author> S. McCanne and V. Jacobson. </author> <title> Vic: A Flexible Framework for Packet Video. </title> <booktitle> In Proceedings of ACM Multimedia, </booktitle> <pages> pages 511-522, </pages> <month> November </month> <year> 1995. </year>
Reference-contexts: Furthermore, these systems can exploit various underlying communication proto cols and technologies, e.g., RSVP [25], ST-II [22] and ATM QoS. The vic <ref> [14] </ref> video conferencing tool over the MBone 1 is a flexible framework for packet video. This approach uses a conference bus for broadcasting the various media in a conference session (e.g., whiteboard media, audio, and video). The conference bus may be coupled with a coordination tool.
Reference: [15] <author> L. E. Moser, Y. Amir, P. M. Melliar-Smith, and D. A. Agarwal. </author> <title> Extended Virtual Synchrony. </title> <booktitle> In International Conference on Distributed Computing Systems, number 14th, </booktitle> <month> June </month> <year> 1994. </year>
Reference-contexts: The flow control mechanism attempts to keep enough frames in the buffer to account for jitter periods. The client program consists of three threads. One 2 The acceptable quality for video playback encoded using MPEG-1 requires at least 1.5Mbit/s. 3 This is guaranteed by the virtual synchrony <ref> [15] </ref> property provided by Transis. 4 The jitter period depends on the level of synchrony among the servers. thread handles the graphical user interface (GUI), and is implemented using TCL/TK. Another thread implements a communication module, which receives frames from the VoD server and stores them in a shared buffer.
Reference: [16] <author> M. Rautenberg and H. Rzehak. </author> <title> A Control System for an Interactive Video on Demand Server Handling Variable Data Rates. </title> <booktitle> In Interactive Distributed Multimedia Systems and Services (IDMS), </booktitle> <pages> pages 265-276, </pages> <month> March </month> <year> 1996. </year> <note> LNCS 1045. </note>
Reference-contexts: Furthermore, the servers and clients need to exchange messages for connection establishment, flow control and negotiation and re-negotiation of Quality of Service (QoS) <ref> [16] </ref>. These tasks may greatly benefit from the group communication paradigm [9], described below. Group communication systems [1] provide reliable communication services within dynamically changing groups, as well as membership services, which inform the members when other members crash or join the group. <p> This increasing improvement in communication technology, will invite widespread utilization of VoD services in private homes, provided by telecommunication companies and via the Internet. In such an environment, scalability and fault tolerance will be key issues. Existing video on demand systems today <ref> [18, 19, 16, 24] </ref> are usually neither scalable nor tolerant to server faults, and are therefore inappropriate for multi-user failure-prone networks such as neighborhood servers or the Internet. <p> Negotiation and re-negotiation of Quality of Service (QoS) allows the client and server to agree on certain QoS parameters, adjusted to actual capabilities of the client. Our video service uses feedback-based flow control for QoS re-negotiation <ref> [16] </ref>, dynamically adjusting the transmission rate according to network and client capabilities. 3 The Environment The VoD service exploits a group communication system enhanced with QoS communication. We implemented a prototype of the VoD service to demonstrate feasibility of our concepts.
Reference: [17] <author> I. Rhee, S. Cheung, P. Hutto, and V. Sunderam. </author> <title> Group Communication Support for Distributed Multimedia and CSCW Systems. </title> <type> Technical report, </type> <institution> Dept. of Mathematics Computer Science, Emory University, </institution> <address> Atlanta, GA 30322, </address> <month> October </month> <year> 1996. </year> <note> To appear in ICDCS'97. </note>
Reference-contexts: For example, [9] introduces a Multimedia Multicast Transport Service (MMTS), that incorporates multiple QoS options into the group communication framework. Maestro [8] extends the Ensemble [12] group communication system by coordinating several protocol stacks with different QoS guarantees. The Collaborative Computing Transport Layer (CCTL) <ref> [17] </ref> implements similar concepts, geared towards distributed collaborative multimedia applications. Such systems are flexible, and modularly support integration of new QoS options, e.g., the cyclic udp QoS [21] that was implemented as a protocol layer in the Horus system [23].
Reference: [18] <author> L. A. Rowe, K. D. Patel, B. C. Smith, and K. Liu. </author> <title> MPEG Video in Software: Representation, Transmission, and Playback. In High Speed Networking and Multimedia Computing, </title> <booktitle> IS&T/SPIE Symp. </booktitle> <institution> on Elec. Imaging Sci. & Tech., </institution> <month> February </month> <year> 1994. </year>
Reference-contexts: This increasing improvement in communication technology, will invite widespread utilization of VoD services in private homes, provided by telecommunication companies and via the Internet. In such an environment, scalability and fault tolerance will be key issues. Existing video on demand systems today <ref> [18, 19, 16, 24] </ref> are usually neither scalable nor tolerant to server faults, and are therefore inappropriate for multi-user failure-prone networks such as neighborhood servers or the Internet.
Reference: [19] <author> L. A. Rowe and B. C. Smith. </author> <title> A Continous Media Player. In Int. Workshop on Network and OS Support for Digital Audio and Video, </title> <booktitle> number 3, </booktitle> <pages> pages 334-344, </pages> <month> November </month> <year> 1992. </year>
Reference-contexts: This increasing improvement in communication technology, will invite widespread utilization of VoD services in private homes, provided by telecommunication companies and via the Internet. In such an environment, scalability and fault tolerance will be key issues. Existing video on demand systems today <ref> [18, 19, 16, 24] </ref> are usually neither scalable nor tolerant to server faults, and are therefore inappropriate for multi-user failure-prone networks such as neighborhood servers or the Internet.
Reference: [20] <author> M. Rozman and J. </author> <title> Wexler. A Distributed Fault-Tolerant Video-On-Demand Service. </title> <institution> Lab project, High Availability lab, The Hebrew University of Jerusalem, Jerusalem, Israel, </institution> <month> December </month> <year> 1996. </year> <note> Available from: http://www.cs.huji.ac.il/labs/transis/. </note>
Reference-contexts: It exploits QoS communication for video transmission. In this section we describe the service design. The full details of the VoD implementation may be found in <ref> [20] </ref>. When a client wants to connect to the service, it sends a message to an abstract service group. The servers respond by sending a list of available films. The client sends the name of the selected film to the service group.
Reference: [21] <author> B. C. Smith. </author> <title> Implementation Techniques for Conti-nous Media Systems and Applications. </title> <type> PhD thesis, </type> <institution> University of California at Berkeley, </institution> <year> 1994. </year>
Reference-contexts: The Collaborative Computing Transport Layer (CCTL) [17] implements similar concepts, geared towards distributed collaborative multimedia applications. Such systems are flexible, and modularly support integration of new QoS options, e.g., the cyclic udp QoS <ref> [21] </ref> that was implemented as a protocol layer in the Horus system [23]. Furthermore, these systems can exploit various underlying communication proto cols and technologies, e.g., RSVP [25], ST-II [22] and ATM QoS. The vic [14] video conferencing tool over the MBone 1 is a flexible framework for packet video.
Reference: [22] <author> C. Topolcic. </author> <title> Experimental Internet Stream Protocol: </title> <note> Version 2 (ST-II), </note> <month> October </month> <year> 1990. </year> <title> Internet RFC 1190. </title>
Reference-contexts: Such systems are flexible, and modularly support integration of new QoS options, e.g., the cyclic udp QoS [21] that was implemented as a protocol layer in the Horus system [23]. Furthermore, these systems can exploit various underlying communication proto cols and technologies, e.g., RSVP [25], ST-II <ref> [22] </ref> and ATM QoS. The vic [14] video conferencing tool over the MBone 1 is a flexible framework for packet video. This approach uses a conference bus for broadcasting the various media in a conference session (e.g., whiteboard media, audio, and video).
Reference: [23] <author> W. Vogels and R. van Renesse. </author> <title> Support for Complex Multi-Media Applications using the Horus system. </title> <address> Ithaca, NY 14850, USA, </address> <month> December </month> <year> 1994. </year> <note> On-line html document: http://www.cs.cornell.edu/ Info/People/rvr/papers/rt/novsdav.html. </note>
Reference-contexts: The Collaborative Computing Transport Layer (CCTL) [17] implements similar concepts, geared towards distributed collaborative multimedia applications. Such systems are flexible, and modularly support integration of new QoS options, e.g., the cyclic udp QoS [21] that was implemented as a protocol layer in the Horus system <ref> [23] </ref>. Furthermore, these systems can exploit various underlying communication proto cols and technologies, e.g., RSVP [25], ST-II [22] and ATM QoS. The vic [14] video conferencing tool over the MBone 1 is a flexible framework for packet video.
Reference: [24] <author> K. H. Wolf and M. W. K. Froitzheim. </author> <title> Interactive Video and Remote Control via the World Wide Web. </title> <booktitle> In Interactive Distributed Multimedia Systems and Services (IDMS), </booktitle> <pages> pages 91-104, </pages> <month> March </month> <year> 1996. </year> <note> LNCS 1045. </note>
Reference-contexts: This increasing improvement in communication technology, will invite widespread utilization of VoD services in private homes, provided by telecommunication companies and via the Internet. In such an environment, scalability and fault tolerance will be key issues. Existing video on demand systems today <ref> [18, 19, 16, 24] </ref> are usually neither scalable nor tolerant to server faults, and are therefore inappropriate for multi-user failure-prone networks such as neighborhood servers or the Internet.
Reference: [25] <author> L. Zhang, S. Deering, D. Estrin, S. Shenker, and D. Zappala. RSVP: </author> <title> A New Resource ReSerVation Protocol. </title> <booktitle> In IEEE Network, Septem-ber 1993. </booktitle> <institution> The RSVP Project home page: </institution> <note> http://www.isi.edu/div7/rsvp/rsvp.html. </note>
Reference-contexts: Such systems are flexible, and modularly support integration of new QoS options, e.g., the cyclic udp QoS [21] that was implemented as a protocol layer in the Horus system [23]. Furthermore, these systems can exploit various underlying communication proto cols and technologies, e.g., RSVP <ref> [25] </ref>, ST-II [22] and ATM QoS. The vic [14] video conferencing tool over the MBone 1 is a flexible framework for packet video. This approach uses a conference bus for broadcasting the various media in a conference session (e.g., whiteboard media, audio, and video).
References-found: 25

