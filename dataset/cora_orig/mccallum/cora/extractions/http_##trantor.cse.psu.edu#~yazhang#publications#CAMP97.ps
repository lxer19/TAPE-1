URL: http://trantor.cse.psu.edu/~yazhang/publications/CAMP97.ps
Refering-URL: http://www.cse.psu.edu/~yazhang/
Root-URL: http://www.cse.psu.edu
Title: Three Dimensional Graphics Algorithms on the Micro-Grain Array Processor-II The increasing demand for three dimensional
Author: Benjamin Bishop Yan Zhang Kevin Acken Mary Jane Irwin Robert M. Owens 
Note: 1: Introduction  
Address: Park, PA 16802  
Affiliation: Department of Computer Science and Engineering The Pennsylvania State University University  
Abstract: Three-dimensional graphics processors play a central role in many modern computer systems due to the large demand for entertainment, visualization tools, architectural CAD tools, and physical modeling. But high performance graphics subsystems are just beginning to reach the commercial workstation and personal computer markets. They also remain high priced and often lacking the performance needed for graphics-intensive applications. The root of the problem lies in the complex graphics algorithms that require large amounts of object data to be manipulated with high throughput, such as what is required for ray tracing. This has resulted in complex, real-time 3D graphics to be limited to high-end systems. In this paper, we present a library of 3D graphics algorithms that have been mapped to the Micro-Grain Array Processor (MGAP), an inexpensive and versatile SIMD processing board capable of fitting in a typical workstation. Our results show that the MGAP can produce comparable data throughput as more costly graphics subsystems, while maintaining the flexibility of being a general purpose parallel machine. 
Abstract-found: 1
Intro-found: 0
Reference: [1] <author> R.S. Bajwa and R.M. Owens, </author> <title> "Image Processing with the MGAP:A Cost-Effective Solution," </title> <booktitle> Proc. of IPPS, </booktitle> <month> April </month> <year> 1993. </year>
Reference-contexts: This connection autonomy allows PEs to be grouped into larger, "virtual" processors called word processors, which allows for arbitrary precision 2 arithmetic and data flow on the array. The MGAP architecture has be shown to be highly effective at performing signal and image processing applications <ref> [1, 6] </ref>. Table 1 outlines the generations of the MGAP family. Table 1: Comparison of the MGAP Family of Array Processors Date Tech.
Reference: [2] <author> J. Clark, </author> <title> "The Geometry Engine: A VLSI Geometry System for Graphics", </title> <booktitle> Proc. </booktitle> <volume> SIG-GRAPH 82, </volume> <year> 1982, </year> <pages> pp. 127-133. </pages>
Reference-contexts: The MGAP also has the advantage of being able to be dynamically reconfigured, allowing the same array to operate at different stages of the graphics pipeline. Clark <ref> [2] </ref> showed the advantages of using one architecture for multiple stages of a graphics pipeline with the Geometry Engine processor. In section 2, the architecture and history of the MGAP will be described.
Reference: [3] <author> Foley, van Dam, Feiner, and Hughes, </author> <title> Computer Graphics Principles and Practice, </title> <publisher> Addison-Wesley, </publisher> <year> 1990. </year>
Reference-contexts: For each ray, the algorithm looks for the closest face in which the intersection is some maximum distance from the center of the face. When this is determined, the intensity for a given ray can be determined using an approximation of the diffused light model <ref> [3] </ref>. This model assumes that incoming light is reflected evenly at all angles, which gives the appearance of a rough surface. This intensity information can then be used to update the viewing area on the host machine.
Reference: [4] <author> H. Fuchs, J. Poulton, A. Paeth, and A. Bell, </author> <title> "Developing Pixel-Planes, A Smart memory-Based Raster Graphics System", </title> <booktitle> Proc. 1982 Conference on Advanced Research in VLSI, </booktitle> <publisher> MIT, </publisher> <pages> pp. 137-146. </pages>
Reference-contexts: SIMD architectures have lower processor utilization, but can contain many more processors due to simplier interconnect and control. In addition, SIMD architectures generally take up less area, making them well suited for workstation environments, and are less expensive than MIMD machines. Pixel-Planes <ref> [4] </ref> and PixelFlow, designed at the University of North Carolina Chapel Hill, demonstrated the effectiveness of using an SIMD architecture for graphics rendering. In this paper, we present the mapping of transformation and rasterization algorithms to the Micro-Grain Array Processor (MGAP).
Reference: [5] <author> F.S. Hill, </author> <title> Computer Graphics, </title> <publisher> Macmillan Publishing Company, </publisher> <year> 1990. </year>
Reference: [6] <author> H.N. Kim, M.J. Irwin, and R.M. Owens, </author> <booktitle> "MGAP Applications in Machine Perception", Proceedings of Computer Architectures and Machine Perception, </booktitle> <month> Sept. </month> <year> 1995. </year>
Reference-contexts: This connection autonomy allows PEs to be grouped into larger, "virtual" processors called word processors, which allows for arbitrary precision 2 arithmetic and data flow on the array. The MGAP architecture has be shown to be highly effective at performing signal and image processing applications <ref> [1, 6] </ref>. Table 1 outlines the generations of the MGAP family. Table 1: Comparison of the MGAP Family of Array Processors Date Tech.
Reference: [7] <author> M.J. Irwin, R.M. Owens, </author> <title> "A Micro-Grained VLSI Signal Processor", </title> <booktitle> Proceedings of ICASSP, </booktitle> <month> Mar. </month> <year> 1992, </year> <pages> pp. 641-644. </pages>
Reference-contexts: the transformation, rasterization, and ray tracing algorithms respectively, and section 4 will summarize the results and conclude the paper. 2: The Micro-Grain Array Processor The Micro-Grain Array Processor (MGAP) family of array processors is a SIMD array of fine-grain processors developed by the Microsystems Design Lab at Penn State University <ref> [7] </ref>. The MGAP-II is a workstation coprocessor board holding a 32 custom designed chip array containing a total of 49,152 processing elements (PEs), along with data staging memory and control logic for the array.
Reference: [8] <author> M. Kilgard, </author> <title> "Hardware for Accelerating OpenGL", The X Journal, </title> <booktitle> Sept-Oct 1995, </booktitle> <pages> pp. 52-69. </pages>
Reference-contexts: In order to support real-time 3D graphics, the subsystem will need to implement the transformation and rasterizations stages of the graphics pipeline <ref> [8] </ref> in hardware. In the transformation stage, the vertices defining the objects to be displayed are transformed to screen pixel coordinates, typically using a matrix stack of affine transformations within a homogeneous space.
References-found: 8

