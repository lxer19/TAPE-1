URL: ftp://ftp.cs.umd.edu/pub/papers/papers/3723/3723.ps.Z
Refering-URL: http://www.cs.umd.edu/TRs/TR.html
Root-URL: 
Email: fhwang; prabha; vsg@cs.umd.edu  
Title: Presentation Planning for Distributed Video Systems  
Author: Eenjun Hwang, B. Prabhakaran and V.S. Subrahmanian 
Address: College Park, MD 20770  
Affiliation: Computer Science Department Institute for Advanced Computer Studies University of Maryland  
Abstract: A distributed video-on-demand system is one where a collection of video data is located at dispersed sites across a computer network. In a single-site environment, a local video server retrieves video data from its local storage device (or devices). However, in the setting of a distributed VoD system, when a customer requests a movie from his/her local server, the server may need to interact with other servers located across the network. In this paper, we present three types of presentation plans, that a local server must construct in order to satisfy the customer's request. Informally speaking, a presentation plan is a detailed (temporally synchronized) sequence of steps that the host server must perform at given points in time. This involves obtaining committments from other video servers, obtaining committments from the network service provider, as well as making committments of local resources, within the limitations of available bandwidth, available buffer, and customer/client data consumption rates. The three types of plans described in this paper all work at different "levels of abstraction" in this planning process. Furthermore, we introduce two measures of how good a plan is: minimizing wait time for the customer, and minimizing a quantity called access bandwidth (which informally speaking, specifies how much network/disk bandwidth is used). We develop algorithms to compute optimal (w.r.t. the above measures) plans for all three types, and show experimentally that in all three cases, one of the three types of plans (called a hybrid presentation plan) systematically outperforms the other two. In addition to these new concepts, our framework has the advantage that many results that had previously been verified experimentally in the literature can now be conclusively proved mathematically. fl This work was supported by the Army Research Office under Grant Nr. DAAH-04-95-10174, by the Air Force Office of Scientific Research under Grant Nr. F49620-93-1-0065, by ARPA/Rome Labs contract F30602-93-C-0241 (ARPA Order Nr. A716), by Army Research Laboratory under Cooperative Agreement DAAL01-96-2-0002 Federated Laboratory ATIRP Consortium and by an NSF Young Investigator award IRI-93-57756. Proof of all theorem are in Appendix II. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Dan and D. Sitaram, </author> <title> "A Generalized Interval Caching Policy for Mixed Interactive and Long Video Workloads", </title> <booktitle> Multimedia Computing and Networking, </booktitle> <address> San Jose, </address> <month> January </month> <year> 1996. </year>
Reference-contexts: The customer wait associated with a hybrid presentation time table r 1 ; : : : ; r k is defined to be the value of the field r 1 :CustConsStart <ref> [1] </ref>. <p> ; r k for delivering movie m to customer C via originating server v is said to be Wait Optimal iff for all other hybrid presentation time tables P P T 0 = r 0 m for delivering movie m to customer C via originating server v, r 1 :CustConsStart <ref> [1] </ref> r 0 1 :CustConsStart [1]: In other words, P P T is optimal iff there is no other hybrid presentation time table with a "smaller" customer wait. <p> movie m to customer C via originating server v is said to be Wait Optimal iff for all other hybrid presentation time tables P P T 0 = r 0 m for delivering movie m to customer C via originating server v, r 1 :CustConsStart <ref> [1] </ref> r 0 1 :CustConsStart [1]: In other words, P P T is optimal iff there is no other hybrid presentation time table with a "smaller" customer wait. <p> Table 6 summarizes the parameters used for simulation. The access patterns of the movie follow a Zipf distribution and use raw data obtained from a video rental store [25], and that has previously been used by several other authors <ref> [1, 3] </ref>. (It is worth noting that it does not necessarily follow that requests to a VoD system will exhibit the same access patterns as rentals from a video store of the sort currently found in shopping malls. <p> ( avg 25 ) 3 Size of Segment 10-30 blocks ( avg 20 ) 4 Size of Block 6 seconds' compressed video data 5 Number of Requests 600 6 Req Arrival Time 5-25 sec ( avg 12 ) (for overall system) 7 Request Pattern Based on actual data referenced in <ref> [1] </ref> (it's almost matched with Zipf distribution) 8 Number of Servers 5 9 Disk Buffer size 30 MB 10 Disk Bandwidth Avg. 1.9 MB Table 6: Parameters Used For Simulation Replicationf actor = P server s numblocks (s) P movie m numblocks (m) where numblocks (s) denotes the total number of <p> In our work, we deal with creating presentation plans for distributed video data. We assume the network to provide guaranteed throughput for VoD presentation. 22 Caching of movie blocks has been described in <ref> [1] </ref>. They also provide valuable user access patterns of movies derived from a real-life video rental store data.
Reference: [2] <author> A. Dan, M. Kienzle, and D. Sitaram, </author> <title> "A Dynamic Policy of Segment Replication for Load-balancing in Video-On-Demand Servers", </title> <booktitle> ACM/Springer-Verlag Multimedia Systems, </booktitle> <year> 1995. </year>
Reference: [3] <author> A. Drapeau, D. Patterson, R. Katz, </author> <title> "Toward Workload Characterization of Video Server and Digital Library Applications", </title> <booktitle> ACM Sigmetrics Conference on Measurement and Modeling of Computer Systems, </booktitle> <address> Nashville, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: Table 6 summarizes the parameters used for simulation. The access patterns of the movie follow a Zipf distribution and use raw data obtained from a video rental store [25], and that has previously been used by several other authors <ref> [1, 3] </ref>. (It is worth noting that it does not necessarily follow that requests to a VoD system will exhibit the same access patterns as rentals from a video store of the sort currently found in shopping malls.
Reference: [4] <author> A.N. Mourad, </author> <title> "Issues in the Design of a Storage Server For Video-on-Demand", </title> <journal> ACM/Springer-Verlag Multimedia Systems, </journal> <volume> (4), </volume> <year> 1996, </year> <pages> pp. 70-86. </pages>
Reference-contexts: Then: WAIT B;2 WAIT B;1 ; WAIT S;2 WAIT S;1 ; WAIT H;2 WAIT H;1 : 8 Related Work Issues in the design of a video on-demand server have been dealt with in <ref> [4] </ref>. The emphasis has been on scheduling mechanisms for disk accesses that significantly lower the buffer-size requirements in the case of disk arrays. Issues in the design of multi-user HDTV storage server have been discussed in [11].
Reference: [5] <author> C.H. Papadimitriou, S. Ramanathan, and P. Venkat Rangan, </author> <title> "Information Caching for Delivery of Personalized Video Programs on Home Entertainment Channels", </title> <booktitle> Proceedings of IEEE Multimedia, </booktitle> <year> 1995. </year>
Reference: [6] <author> D. Ferrari, A. Gupta, G. Ventre, </author> <title> "Distributed advance reservation of real-time connection", </title> <booktitle> Fifth International Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <address> Durham, NH, </address> <month> April, </month> <year> 1995. </year>
Reference: [7] <author> D. Jaday, C. Srinilta, A. Choudhary, P.B. Berra, </author> <title> "Design and Evaluation of Data Access Strategies in a High Performance Multimedia-on-Demand Server", </title> <booktitle> Proceedings of IEEE Multimedia, </booktitle> <year> 1995. </year>
Reference-contexts: Then: WAIT B;2 WAIT B;1 ; WAIT S;2 WAIT S;1 ; WAIT H;2 WAIT H;1 : 21 The above theorem shows that if we "increase" the placement function, then we are guarantee-ing the customer a smaller wait time. The paper <ref> [7] </ref> provides an experimental claim that caching initial segments of movies at servers leads to improved performance as compared to not doing so. Theorem 7.3 is a significant improvement on that result for the following reasons: 1. First, our result is a theorem rather than an experimental observation. 2. <p> The example shown in Figure 5 described how this may happen. 3. Third, our result applies to all three notions of plans, not just the one studied in <ref> [7] </ref>. Suppose N L = (V; E; bw 1 ; MOVIE; -) is a logical network layout. We say that buf 1 buf 2 iff for all v 2 V , buf 1 (v) buf 2 (v). <p> Our framework may, for instance, use characteristics of the HDTV storage servers of [11] in creating distributed presentation plans. We do not restrict ourselves to the type of movies stored (HDTV or normal). Data access strategies in a high performance Multimedia-on-Demand server have been discussed in <ref> [10, 24, 18, 7] </ref>. Here, algorithms for a multimedia server operation for retrieval of remote media objects are presented. The algorithms also exploit knowledge of data access patterns to improve system throughput. Experimental results have been provided to establish the performance of the algorithms. <p> In addition to our experimental results, we have also proved mathematically, a number of results that had only had experimental validation previously <ref> [7] </ref>. [12, 13, 23] discuss the network requirements for multimedia-on demand. [17] presents resource reservation schemes for guaranteeing network throughput. [14] describes how retrieval schedules can be determined by a client based on flexible temporal specifications of multimedia document presentation.
Reference: [8] <author> D. Rotem and J.L. Zhao, </author> <title> "Buffer Management for Video Database Systems", </title> <booktitle> Proceedings of IEEE Intl. Conference on Data Engineering, </booktitle> <year> 1995, </year> <month> pps 439-448. </month>
Reference-contexts: Furthermore, in the rapidly emerging area of multimedia databases [22] and video databases <ref> [20, 9, 19, 21, 8] </ref>, users may query a large distributed multimedia archive and retrieve the desired videos (in part, or in whole) across the network.
Reference: [9] <author> E. Oomoto and K. Tanaka, "OVID: </author> <title> Design and Implementation of a Video-Object Database System", </title> <journal> IEEE Transactions on Knowledge and Data Engineering, Aug. 1993, </journal> <volume> 5, 4, </volume> <pages> pps 629-643. </pages>
Reference-contexts: Furthermore, in the rapidly emerging area of multimedia databases [22] and video databases <ref> [20, 9, 19, 21, 8] </ref>, users may query a large distributed multimedia archive and retrieve the desired videos (in part, or in whole) across the network.
Reference: [10] <author> G. Miller, G. Baber, and M. Gilliland, </author> <title> "News On-Demand Multimedia Networks", </title> <booktitle> Proceedings of ACM Multimedia, </booktitle> <address> Anaheim, CAA, </address> <month> August </month> <year> 1993, </year> <pages> pp. 383-392. </pages>
Reference-contexts: Our framework may, for instance, use characteristics of the HDTV storage servers of [11] in creating distributed presentation plans. We do not restrict ourselves to the type of movies stored (HDTV or normal). Data access strategies in a high performance Multimedia-on-Demand server have been discussed in <ref> [10, 24, 18, 7] </ref>. Here, algorithms for a multimedia server operation for retrieval of remote media objects are presented. The algorithms also exploit knowledge of data access patterns to improve system throughput. Experimental results have been provided to establish the performance of the algorithms.
Reference: [11] <author> H.M. Vin and P.V. Rangan, </author> <title> "Design of a Multi-user HDTV Storage Server", </title> <journal> IEEE Journal on Selected Areas in Communication, Special Issue on High Definition Television and Digital Video Communication, </journal> <volume> Vol. 11, No. 1, </volume> <month> January </month> <year> 1993. </year>
Reference-contexts: The emphasis has been on scheduling mechanisms for disk accesses that significantly lower the buffer-size requirements in the case of disk arrays. Issues in the design of multi-user HDTV storage server have been discussed in <ref> [11] </ref>. In contrast, we deal with the construction of presentation plans to deliver videos across distributed networked sites. Our framework may, for instance, use characteristics of the HDTV storage servers of [11] in creating distributed presentation plans. <p> Issues in the design of multi-user HDTV storage server have been discussed in <ref> [11] </ref>. In contrast, we deal with the construction of presentation plans to deliver videos across distributed networked sites. Our framework may, for instance, use characteristics of the HDTV storage servers of [11] in creating distributed presentation plans. We do not restrict ourselves to the type of movies stored (HDTV or normal). Data access strategies in a high performance Multimedia-on-Demand server have been discussed in [10, 24, 18, 7].
Reference: [12] <author> J. Nussbaumer, B. Patel, F. Schaffa, and J.P.G. Sterbenz, </author> <title> "Networking Requirements for Interactive Video on Demand", </title> <journal> IEEE Journal on Selected Areas in Communication, </journal> <month> January </month> <year> 1995. </year>
Reference-contexts: In addition to our experimental results, we have also proved mathematically, a number of results that had only had experimental validation previously [7]. <ref> [12, 13, 23] </ref> discuss the network requirements for multimedia-on demand. [17] presents resource reservation schemes for guaranteeing network throughput. [14] describes how retrieval schedules can be determined by a client based on flexible temporal specifications of multimedia document presentation.
Reference: [13] <author> K. Nahrstedt and Ralf Steinmetz, </author> <title> "Resource Management in Networked Multimedia Systems", </title> <journal> IEEE Computer, </journal> <volume> Vol. 28, No. 4, </volume> <month> April </month> <year> 1995. </year>
Reference-contexts: In addition to our experimental results, we have also proved mathematically, a number of results that had only had experimental validation previously [7]. <ref> [12, 13, 23] </ref> discuss the network requirements for multimedia-on demand. [17] presents resource reservation schemes for guaranteeing network throughput. [14] describes how retrieval schedules can be determined by a client based on flexible temporal specifications of multimedia document presentation.
Reference: [14] <author> K. S. Candan, B. Prabhakaran, and V. S. Subrahmanian, </author> <title> "CHIMP : A Framework for Supporting Multimedia Document Authoring and Presentation", </title> <booktitle> to appear in Proceedings of ACM Multimedia, </booktitle> <address> Boston, </address> <month> November </month> <year> 1996. </year> <month> 24 </month>
Reference-contexts: In addition to our experimental results, we have also proved mathematically, a number of results that had only had experimental validation previously [7]. [12, 13, 23] discuss the network requirements for multimedia-on demand. [17] presents resource reservation schemes for guaranteeing network throughput. <ref> [14] </ref> describes how retrieval schedules can be determined by a client based on flexible temporal specifications of multimedia document presentation. In our work, we deal with creating presentation plans for distributed video data.
Reference: [15] <author> K.S. Candan, E. Hwang and V.S. Subrahmanian, </author> <title> "An Event-Based Model for Continuous Media Data on Heterogeneous Disk Servers", </title> <journal> ACM Multimedia Systems Journal, </journal> <note> accepted, to appear. </note>
Reference-contexts: However, in the absence of other data, the assumption that the requests follow a Zipf distribution is reasonable). Furthermore, the access patterns were derived from actual data obtained from a video rental store For the movie placement mapping, we use the concept of replication factor defined originally in <ref> [15] </ref>.
Reference: [16] <author> L.C. Wolf, L. Delgossi, R. Steinmetz, S. Schaller, H. Wittig, </author> <title> "Issues of Reserving Resources in Advance", </title> <booktitle> Fifth International Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <address> Durham, NH, </address> <month> April, </month> <year> 1995. </year>
Reference: [17] <author> L. Zhang, S. Deering, D. Estrin, S. Shenker, D. Zappala, "RSVP: </author> <title> A New Resource ReSerVation Protocol", </title> <journal> IEEE Network, </journal> <month> September </month> <year> 1993, </year> <month> pp.8-18. </month>
Reference-contexts: In addition to our experimental results, we have also proved mathematically, a number of results that had only had experimental validation previously [7]. [12, 13, 23] discuss the network requirements for multimedia-on demand. <ref> [17] </ref> presents resource reservation schemes for guaranteeing network throughput. [14] describes how retrieval schedules can be determined by a client based on flexible temporal specifications of multimedia document presentation. In our work, we deal with creating presentation plans for distributed video data.
Reference: [18] <author> M. Budhikot, G. Parulkar, and J.R. Cox Jr, </author> <title> "Design of a Large Scale Video Server", </title> <journal> Journal of Computer Networks and ISDN Systems, </journal> <month> December </month> <year> 1994, </year> <pages> pp. 504-517. </pages>
Reference-contexts: Our framework may, for instance, use characteristics of the HDTV storage servers of [11] in creating distributed presentation plans. We do not restrict ourselves to the type of movies stored (HDTV or normal). Data access strategies in a high performance Multimedia-on-Demand server have been discussed in <ref> [10, 24, 18, 7] </ref>. Here, algorithms for a multimedia server operation for retrieval of remote media objects are presented. The algorithms also exploit knowledge of data access patterns to improve system throughput. Experimental results have been provided to establish the performance of the algorithms.
Reference: [19] <author> R. Hjelsvold and R. Midtstraum. </author> <title> "Modeling and Querying Video Data", </title> <booktitle> Proceedings Intl. Conference on Very Large Databases, </booktitle> <address> Santigo, Chile, </address> <month> Sep. </month> <year> 1994, </year> <month> pps 686-694. </month>
Reference-contexts: Furthermore, in the rapidly emerging area of multimedia databases [22] and video databases <ref> [20, 9, 19, 21, 8] </ref>, users may query a large distributed multimedia archive and retrieve the desired videos (in part, or in whole) across the network.
Reference: [20] <author> S. Adali, K.S. Candan, S.-S. Chen, K. Erol, and V.S.Subrahmanian, </author> <title> "Advanced Video Information Systems", </title> <journal> ACM Multimedia Systems Journal, </journal> <volume> 4, </volume> <pages> pps 172-186, </pages> <year> 1996. </year>
Reference-contexts: Furthermore, in the rapidly emerging area of multimedia databases [22] and video databases <ref> [20, 9, 19, 21, 8] </ref>, users may query a large distributed multimedia archive and retrieve the desired videos (in part, or in whole) across the network.
Reference: [21] <author> S. Gibbs, C. Breiteneder and D. Tsichritzis, </author> <title> "Data Modeling of Time-Based Media", </title> <booktitle> Proceedings of ACM SIGMOD Conference on Management of Data, </booktitle> <address> Minneapolis, Minnesota, </address> <month> June </month> <year> 1994, </year> <month> pps 91-102. </month>
Reference-contexts: Furthermore, in the rapidly emerging area of multimedia databases [22] and video databases <ref> [20, 9, 19, 21, 8] </ref>, users may query a large distributed multimedia archive and retrieve the desired videos (in part, or in whole) across the network.
Reference: [22] <author> S. Marcus and V.S. Subrahmanian, </author> <title> "Foundations of Multimedia Database Systems", </title> <journal> Journal of the ACM, </journal> <volume> Vol. 43, 3, </volume> <pages> pps 474-523, </pages> <year> 1996. </year>
Reference-contexts: Furthermore, in the rapidly emerging area of multimedia databases <ref> [22] </ref> and video databases [20, 9, 19, 21, 8], users may query a large distributed multimedia archive and retrieve the desired videos (in part, or in whole) across the network.
Reference: [23] <author> S.V. Raghavan, B. Prabhakaran and Satish K. </author> <title> Tripathi "Synchronization Representation and Traffic Source Modeling in Orchestrated Presentation", </title> <journal> IEEE Journal on Selected Areas in Communication, Special issue on Multimedia Synchronization, </journal> <volume> Vol. 14, No. 1, </volume> <month> January </month> <year> 1996. </year>
Reference-contexts: In addition to our experimental results, we have also proved mathematically, a number of results that had only had experimental validation previously [7]. <ref> [12, 13, 23] </ref> discuss the network requirements for multimedia-on demand. [17] presents resource reservation schemes for guaranteeing network throughput. [14] describes how retrieval schedules can be determined by a client based on flexible temporal specifications of multimedia document presentation.
Reference: [24] <author> T.D.C. Little, et al, </author> <title> "A Digital On-demand Video Service Supporting Content-based Queries", </title> <booktitle> Proceedings of ACM Multimedia, </booktitle> <address> Anaheim, CA, </address> <month> August </month> <year> 1993, </year> <pages> pp. 427-436. </pages>
Reference-contexts: Our framework may, for instance, use characteristics of the HDTV storage servers of [11] in creating distributed presentation plans. We do not restrict ourselves to the type of movies stored (HDTV or normal). Data access strategies in a high performance Multimedia-on-Demand server have been discussed in <ref> [10, 24, 18, 7] </ref>. Here, algorithms for a multimedia server operation for retrieval of remote media objects are presented. The algorithms also exploit knowledge of data access patterns to improve system throughput. Experimental results have been provided to establish the performance of the algorithms.

References-found: 24

