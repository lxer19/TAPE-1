URL: http://www.cs.bu.edu/~best/res/papers/infocom97.ps
Refering-URL: http://cs-www.bu.edu/faculty/best/res/Home.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: best@cs.bu.edu  kgtjan@cs.bu.edu  
Title: TCP BOSTON A Fragmentation-tolerant TCP Protocol for ATM Networks  
Author: Azer Bestavros Gitae Kim 
Address: Boston, MA 02215  
Affiliation: Computer Science Department Boston University  
Note: Proceedings of Infocom'97: The IEEEConference on Computer Communications, April 1997, Japan.  
Abstract: We propose a new transport protocol, TCP Boston, that turns ATM's 53-byte cell-oriented switching architecture into an advantage for TCP/IP. At the core of TCP Boston is the Adaptive Information Dispersal Algorithm (AIDA), an efficient encoding technique that allows for dynamic redundancy control. AIDA makes TCP/IP's performance less sensitive to cell losses, thus ensuring a graceful degradation of TCP/IP's performance when faced with congested resources. In this paper, we introduce AIDA and overview the main features of TCP Boston. We present detailed simulation results that show the superiority of our protocol when compared to other adaptations of TCP/IP over ATMs. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> ANSI. </author> <title> AAL5 A New High Speed Data Transfer AAL. </title> <note> In ANSI T1S1.5 91-449. </note> <month> November </month> <year> 1991. </year>
Reference-contexts: The output buffer is managed using FIFO scheduling, and cells in input ports are served in a round-robin fashion to ensure fairness. In our simulator, the ATM Adaptation Layer (AAL) implements the basic functions found in AAL5, namely fragmentation and reconstruction of IP packets <ref> [1, 13] </ref>. AAL divides IP packets into 48-byte units for transmission as ATM cells, and appends 0 to 47 bytes of padding to the end of data. A special flag in the cell header is used to mark the last cell in a packet. <p> Since ns is originally designed to support packet-switched network environments, major modifications were necessary to allow it to support ATM-like network environments. In particular, the essential functions of AAL5 were added to simulate the handling of IP packets (i.e., fragmentation and reassembly of IP packets) <ref> [1, 13] </ref>. Also, the link layer of ns has been modified to include basic functions of ATM switches and virtual circuit management.
Reference: [2] <author> G. Armitage and K. Adams. </author> <title> Packet Reassembly During Cell Loss. </title> <journal> IEEE Network Mag., </journal> <volume> 7(5):2634, </volume> <month> September </month> <year> 1993. </year>
Reference-contexts: There have been a number of attempts to remedy this problem by introducing additional switch-level functionalities to preserve throughput when TCP/IP is employed over ATM. Examples include the Selective Cell Discard (SCD) 1 <ref> [2] </ref> and the Early Packet Discard (EPD) [22]. In SCD, once a cell c is dropped at a switch, all subsequent cells from the packet to which c belongs are dropped by the switch.
Reference: [3] <author> R. Atkinson. </author> <title> Default IP MTU for use over ATM AAL5. </title> <booktitle> In RFC 1626. </booktitle> <month> May </month> <year> 1994. </year>
Reference-contexts: Three different packet sizes were selected to reflect maximum transfer unit (MTU) of popular standards: 576 bytes for IP packets, 1,500 bytes for Ethernet, 4,470 bytes for FDDI link standards [17], and 9,180 bytes which is the recommended packet size for IP over ATM <ref> [3] </ref>. The values for the maximum TCP window size are 8, 16, 32, and 64 kB. Buffer sizes used for the ATM switch are 64, 256, 512, 1,000, 2,000, and 4,000 cells. The LBNL Network Simulator (ns) [12] was used for both packet-switched and ATM network simulations.
Reference: [4] <author> A. Bestavros. SETH: </author> <title> A VLSI chip for the real-time informa tion dispersal and retrieval for security and fault-tolerance. </title> <booktitle> In Proceedings of ICPP'90, The 1990 International Confer ence on Parallel Processing, </booktitle> <address> Chicago, Illinois, </address> <month> August </month> <year> 1990. </year>
Reference-contexts: This guarantees that reconstructing the original file from any m of its dispersed cells is feasible. Indeed, upon receiving any r m of the dispersed cells, it is possible to reconstruct 3 For more details, we refer the reader to <ref> [21, 4] </ref>. the original segment through another matrix multiplication. The transformation matrix [y ij ] mfim is the inverse of a matrix [x 0 ij ] mfim , which is obtained by removing N m rows from [x ij ] Nfim .
Reference: [5] <author> A. Bestavros. </author> <title> An adaptive information dispersal algorithm for time-critical reliable communication. </title> <editor> In Frisch, Malek, and Panwar, editors, </editor> <title> Network Management and Control, Volume II. </title> <publisher> Plenum Publishing Co., </publisher> <address> NY, NY, </address> <year> 1994. </year>
Reference-contexts: The IDA approach is radically different in that redundancy is added uniformly; there is no distinction between data and parity. It is this feature that makes it possible to scale the amount of redundancy used in IDA. Indeed, this is the basis for Adaptive IDA (AIDA) <ref> [5] </ref>. Using AIDA, a bandwidth allocation operation is inserted after the dispersal operation but prior to transmission as shown in figure 1. This bandwidth allocation step allows the system to scale the amount of redundancy used in the transmission. <p> This integration of redundancy control and flow control in a reliable transport protocol 4 could be quite valuable for real-time communication as reported in <ref> [5] </ref>. The second solution above suggests the use of temporal redundancy to recover from erasures. Two possibilities existeach representing an extreme in terms of the functionality required at the sender and receiver ends.
Reference: [6] <author> A. Bestavros and G. Kim. </author> <title> TCP Boston: A Fragmentation tolerant TCP Protocol for ATM Networks. </title> <type> Technical Re port BUCS-TR-96-014, </type> <institution> Boston University, Computer Sci ence Department, </institution> <month> July </month> <year> 1996. </year>
Reference-contexts: important to realize that while dropping cells belonging to a packet at a congested switch preserves the bandwidth of that switch, it does not preserve the ABR/UBR bandwidth at all the switches preced 1 Also called Partial Packet Discard (PPD) in [22]. 2 Analytical comparisons for multi-hop networks appear in <ref> [6] </ref>. ing that (congested) switch along the virtual circuit for the TCP connection. Moreover, any cells belonging to a corrupted packet which would have made it out of the congested switch will continue to waste the bandwidth at all the switches following that (congested) switch. <p> TCP Boston: Performance Evaluation In this section we present the results of our experimental evaluation of TCP Boston. For a more detailed treatment, we refer the reader to <ref> [6] </ref>. 4.1. Simulation Environment As shown in Figure 4, the simulated network consists of 16 source nodes and 1 sink node, where all the nodes are connected to a single switch node. The link bandwidth is set to 1.5 Mbps with propagation delay of 10 msec.
Reference: [7] <author> A. Bianco. </author> <title> Performance of the TCP Protocol over ATM Net works. </title> <booktitle> In Proceedingds of the 3rd International Conference on Computer Communications and Networks, </booktitle> <pages> pages 170 177, </pages> <address> San Francisco, CA, </address> <month> September </month> <year> 1994. </year>
Reference-contexts: However, recent studies <ref> [7, 15, 22] </ref> have shown that TCP/IP, when implemented over ATM networks, is susceptible to serious performance limitations. The poor performance of TCP over ATMs is mainly due to packet fragmentation, which occurs when an IP packet flows into an ATM virtual circuit through the AAL5 (ATM Adaptation Layer 5).
Reference: [8] <author> E. Biersack. </author> <title> Performance Evaluation of Forward Error Cor rection in ATM Networks. </title> <journal> CACM, </journal> <pages> pages 248257, </pages> <month> Aug </month> <year> 1992. </year>
Reference-contexts: An example of the use of this approach is the study in <ref> [8] </ref>, which suggests the use of Forward Error Correction (FEC) for real-time, unreliable video communication over ATM. In that study, FEC was shown to allow the trading of bandwidth for timeliness.
Reference: [9] <author> L. Brakmo, S. O'Maley, and L. Peterson. </author> <title> TCP Vegas: New Techniques for Congestion Detection and Avoidance. </title> <type> Tech nical Report TR 94 04, </type> <institution> The University of Arizona Computer Science Department, </institution> <address> Tucson, AZ 85721, </address> <month> Febrary </month> <year> 1994. </year>
Reference-contexts: An example of such an algorithm is the one used in TCP Vegas, which provides better congestion forecast by detecting the incipient stages of congestion before losses start to accrue (rather than using the loss of segments as a signal of congestion) <ref> [9] </ref>.
Reference: [10] <author> T. Chen and S. Liu. </author> <title> ATM Switching System. </title> <publisher> Artech House, Inc., </publisher> <address> 685 Canton St., Norwood, MA 02062, </address> <year> 1995. </year>
Reference-contexts: It was chosen to simulate a relatively low bandwidth-delay product network. This configuration simulates a WAN environment with a radius of 3,000 km and a bottleneck link bandwidth of 1.5 Mbps. The ATM switch is a simple, 16-port output-buffered single-stage switch <ref> [10] </ref>. The output buffer is managed using FIFO scheduling, and cells in input ports are served in a round-robin fashion to ensure fairness. In our simulator, the ATM Adaptation Layer (AAL) implements the basic functions found in AAL5, namely fragmentation and reconstruction of IP packets [1, 13].
Reference: [11] <author> D. E. Comer. </author> <title> Internetworking with TCP/IP, volume 1. </title> <publisher> Pren tice Hall Inc., </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1995. </year>
Reference-contexts: high speed communication using emerging ATM technology have prompted the network research community to propose and implement a number of techniques that adapt TCP/IP to ATM network environments, thus allowing these environments to smoothly integrate (and make use of) currently available TCP-based applications and services without much (if any) modifications <ref> [11] </ref>. However, recent studies [7, 15, 22] have shown that TCP/IP, when implemented over ATM networks, is susceptible to serious performance limitations.
Reference: [12] <author> S. Floyd. </author> <title> Simulator Tests. </title> <note> Available from ftp://ftp. ee.lbl.gov/papers/simtests.ps.Z. ns(v1.0b4) is available at http://www-nrg.ee.lbl.gov/ nrg., </note> <month> July </month> <year> 1995. </year>
Reference-contexts: The values for the maximum TCP window size are 8, 16, 32, and 64 kB. Buffer sizes used for the ATM switch are 64, 256, 512, 1,000, 2,000, and 4,000 cells. The LBNL Network Simulator (ns) <ref> [12] </ref> was used for both packet-switched and ATM network simulations. To simulate TCP Boston, we modified ns extensively to implement the three main modules described in the previous section.
Reference: [13] <author> A. Forum. </author> <title> ATM User-Network Interface Specification. </title> <publisher> Pret ice Hall, Inc, </publisher> <address> Englewood Cliffs, New Jersey 07632, </address> <year> 1993. </year>
Reference-contexts: The output buffer is managed using FIFO scheduling, and cells in input ports are served in a round-robin fashion to ensure fairness. In our simulator, the ATM Adaptation Layer (AAL) implements the basic functions found in AAL5, namely fragmentation and reconstruction of IP packets <ref> [1, 13] </ref>. AAL divides IP packets into 48-byte units for transmission as ATM cells, and appends 0 to 47 bytes of padding to the end of data. A special flag in the cell header is used to mark the last cell in a packet. <p> Since ns is originally designed to support packet-switched network environments, major modifications were necessary to allow it to support ATM-like network environments. In particular, the essential functions of AAL5 were added to simulate the handling of IP packets (i.e., fragmentation and reassembly of IP packets) <ref> [1, 13] </ref>. Also, the link layer of ns has been modified to include basic functions of ATM switches and virtual circuit management.
Reference: [14] <author> G. A. Gibson and D. A. Patterson. </author> <title> Designing disk arrays for high data reliability. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 17(1-2):427, </volume> <month> January/February </month> <year> 1992. </year>
Reference-contexts: Several redundancy-injecting protocols have been suggested in the literature, whereby redundancy is injected in the form of parity, which is only used for error detection and/or correction purposes <ref> [14] </ref>. The IDA approach is radically different in that redundancy is added uniformly; there is no distinction between data and parity. It is this feature that makes it possible to scale the amount of redundancy used in IDA. Indeed, this is the basis for Adaptive IDA (AIDA) [5].
Reference: [15] <author> M. Hassan. </author> <title> Impact of Cell Loss on the Efficiency of TCP/IP over ATM. </title> <booktitle> In Proceedings of the 3rd International Con ference on Computer Communications and Networks, </booktitle> <pages> pages 165169, </pages> <address> San Francisco, CA, </address> <month> September </month> <year> 1994. </year>
Reference-contexts: However, recent studies <ref> [7, 15, 22] </ref> have shown that TCP/IP, when implemented over ATM networks, is susceptible to serious performance limitations. The poor performance of TCP over ATMs is mainly due to packet fragmentation, which occurs when an IP packet flows into an ATM virtual circuit through the AAL5 (ATM Adaptation Layer 5).
Reference: [16] <author> V. Jacobson. </author> <title> Berkeley TCP Evolution from 4.3-Tahoe to 4.3-Reno. </title> <booktitle> In Proceedings of the British Columbia Internet Engineering Task Force, </booktitle> <month> July </month> <year> 1990. </year>
Reference-contexts: This required that our measurements be unaffected by the forward error correction capability provided by AIDA, which is enabled through spatial redundancy. (2) We wanted to compare the performance of TCP Boston with that of other TCP implementations (e.g., TCP Reno <ref> [16] </ref>) with and without switch-level enhancements (e.g., EPD [22]).
Reference: [17] <author> S. Mirchandani and R. Khanna, </author> <title> editors. FDDI Technology and Applications. </title> <publisher> John Wiley & Sons, Inc., </publisher> <year> 1993. </year>
Reference-contexts: Three different packet sizes were selected to reflect maximum transfer unit (MTU) of popular standards: 576 bytes for IP packets, 1,500 bytes for Ethernet, 4,470 bytes for FDDI link standards <ref> [17] </ref>, and 9,180 bytes which is the recommended packet size for IP over ATM [3]. The values for the maximum TCP window size are 8, 16, 32, and 64 kB. Buffer sizes used for the ATM switch are 64, 256, 512, 1,000, 2,000, and 4,000 cells.
Reference: [18] <author> K. Park, G. Kim, and M. E. Crovella. </author> <title> The Effects of Traf fic Self-Similarity on TCP Performance. </title> <type> Technical report, </type> <institution> Boston University Computer Science Department, </institution> <year> 1996. </year>
Reference-contexts: Recent studies on network traffic have shown that TCP can augment traffic self-similarity, which causes performance degradation especially when the buffer space is limited <ref> [18] </ref>. In Reno's case, the extremely low goodput at small buffer sizes turned out to be the result of the wasted bandwidth due to cells that pass through the bottleneck switch but get discarded at AAL5, as well as the link idle time that affects Boston.
Reference: [19] <author> J. Postel. </author> <title> Internet Protocol. </title> <booktitle> In RFC 791. </booktitle> <month> September </month> <year> 1981. </year>
Reference-contexts: 1. Introduction The flexibility and popularity of TCP/IP <ref> [20, 19] </ref> coupled with the premise of high speed communication using emerging ATM technology have prompted the network research community to propose and implement a number of techniques that adapt TCP/IP to ATM network environments, thus allowing these environments to smoothly integrate (and make use of) currently available TCP-based applications and
Reference: [20] <author> J. Postel. </author> <title> TCP. </title> <booktitle> In RFC 793. </booktitle> <month> September </month> <year> 1981. </year>
Reference-contexts: 1. Introduction The flexibility and popularity of TCP/IP <ref> [20, 19] </ref> coupled with the premise of high speed communication using emerging ATM technology have prompted the network research community to propose and implement a number of techniques that adapt TCP/IP to ATM network environments, thus allowing these environments to smoothly integrate (and make use of) currently available TCP-based applications and
Reference: [21] <author> M. O. Rabin. </author> <title> Efficient dispersal of information for security, load balancing and fault tolerance. </title> <journal> Journal of the Associa tion for Computing Machinery, </journal> <volume> 36(2):335348, </volume> <month> April </month> <year> 1989. </year>
Reference-contexts: AIDA: An Introduction AIDA is a novel technique for dynamic bandwidth allocation, which makes use of minimal, controlled redundancy to guarantee timeliness and fault-tolerance up to any degree of confidence. AIDA is an elaboration on the Information Dispersal Algorithm of Michael O. Rabin <ref> [21] </ref>. To understand how IDA works, consider a segment S of a data object to be transmitted. Let S consist of m fragments (hereinafter called cells). <p> This guarantees that reconstructing the original file from any m of its dispersed cells is feasible. Indeed, upon receiving any r m of the dispersed cells, it is possible to reconstruct 3 For more details, we refer the reader to <ref> [21, 4] </ref>. the original segment through another matrix multiplication. The transformation matrix [y ij ] mfim is the inverse of a matrix [x 0 ij ] mfim , which is obtained by removing N m rows from [x ij ] Nfim . <p> Summary In this paper we presented TCP Boston, a novel, fragmentation-tolerant TCP protocol, especially suited for ATM network environments. TCP Boston integrates a standard TCP/IP protocol (such as Reno or Vegas) with a powerful encoding mechanism based on AIDA (an adaptive version of Rabin's IDA dispersal and reconstruction algorithms <ref> [21] </ref>).
Reference: [22] <author> A. Romanow and S. Floyd. </author> <title> Dynamics of TCP Traffic over ATM Networks. </title> <journal> IEEE Journal on Selected Areas in Com munication, </journal> <volume> 13(4):633641, </volume> <month> May </month> <year> 1995. </year>
Reference-contexts: However, recent studies <ref> [7, 15, 22] </ref> have shown that TCP/IP, when implemented over ATM networks, is susceptible to serious performance limitations. The poor performance of TCP over ATMs is mainly due to packet fragmentation, which occurs when an IP packet flows into an ATM virtual circuit through the AAL5 (ATM Adaptation Layer 5). <p> There have been a number of attempts to remedy this problem by introducing additional switch-level functionalities to preserve throughput when TCP/IP is employed over ATM. Examples include the Selective Cell Discard (SCD) 1 [2] and the Early Packet Discard (EPD) <ref> [22] </ref>. In SCD, once a cell c is dropped at a switch, all subsequent cells from the packet to which c belongs are dropped by the switch. <p> Notice that both SCD and EPD require modifications to switch-level software to be aware of IP packet boundariesa violation of the layering principle that was deemed unavoidable for performance purposes in <ref> [22] </ref>. The simulation results described in [22] show that both SCD and EPD improve the effective throughput of TCP/IP over a single ATM switch. <p> Notice that both SCD and EPD require modifications to switch-level software to be aware of IP packet boundariesa violation of the layering principle that was deemed unavoidable for performance purposes in <ref> [22] </ref>. The simulation results described in [22] show that both SCD and EPD improve the effective throughput of TCP/IP over a single ATM switch. <p> be severe. 2 To understand these limitations, it is important to realize that while dropping cells belonging to a packet at a congested switch preserves the bandwidth of that switch, it does not preserve the ABR/UBR bandwidth at all the switches preced 1 Also called Partial Packet Discard (PPD) in <ref> [22] </ref>. 2 Analytical comparisons for multi-hop networks appear in [6]. ing that (congested) switch along the virtual circuit for the TCP connection. <p> This required that our measurements be unaffected by the forward error correction capability provided by AIDA, which is enabled through spatial redundancy. (2) We wanted to compare the performance of TCP Boston with that of other TCP implementations (e.g., TCP Reno [16]) with and without switch-level enhancements (e.g., EPD <ref> [22] </ref>). Since these other protocols do not support forward error correction, this feature of TCP Boston had to be turned off. (3) To work properly, the dynamic redundancy control mechanism of TCP Boston requires a congestion avoidance algorithm that provides accurate forecasting of network congestion.
References-found: 22

