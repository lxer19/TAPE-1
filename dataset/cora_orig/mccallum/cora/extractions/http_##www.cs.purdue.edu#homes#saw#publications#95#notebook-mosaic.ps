URL: http://www.cs.purdue.edu/homes/saw/publications/95/notebook-mosaic.ps
Refering-URL: http://www.cs.purdue.edu/homes/saw/publications/
Root-URL: http://www.cs.purdue.edu
Email: -saw, joshi,enh,acc-@cs.purdue.edu  
Title: Using NCSA Mosaic for Building Notebook Interfaces for CS&E Applications  
Author: Sanjiva Weerawarana, Anupam Joshi, Elias N. Houstis and Ann C. Catlin 
Address: West Lafayette, IN 47907-1398  
Affiliation: Department of Computer Sciences Purdue University  
Abstract-found: 0
Intro-found: 1
Reference: 1. <author> J.K. Lin, </author> <title> MediaMosaic- A Multimedia Editing Environment, </title> <booktitle> Proc. UIST 92, </booktitle> <pages> pp. 135-141. </pages>
Reference-contexts: Apart from such theoretical work, there have also been some implemented systems that provide in part functionality similar to what we need. We briey introduce some of these next. 7 In <ref> [1] </ref>, Lin presents a simple multimedia editor. He uses the notion of embedded virtual screens, providing one for each medium, and combining them in a pseudo root window. Actually, each different medium is being displayed by a separate client. Clearly, this approach is cumbersome.
Reference: 2. <author> P.R. Cohen, </author> <title> The Role of Natural Language in a Multimodal Interface, </title> <booktitle> Proc. UIST 92, </booktitle> <pages> pp. 143-149. </pages>
Reference-contexts: While innovative, this idea is not appropriate for user interaction with complex systems. In fact, it was specifically designed for form based data entry purposes. Cohen <ref> [2] </ref> presents a system which integrates natural language understanding capabilities into a direct manipulation system. It seeks to combine the modes of natural language and direct manipulation into a sequential, synergetic, multimodal interface.
Reference: 3. <author> W. Johnson, H. Jellinek, L. Klotz, R. Rao and S. Card, </author> <title> Bridging the Paper and Electronic Worlds: The Paper User Interface, </title> <booktitle> Proc. </booktitle> <volume> INTERCHI 93, </volume> <pages> pp. 507-512. </pages>
Reference-contexts: While interesting from the point of view of the use of such interfaces, their work is confined to text documents alone, and is primarily an editor. It can neither provide information browsing capabilities, nor computation facilities. In an interesting work, Johnson et. al. <ref> [3] </ref> present the idea of integrating paper into the input loop for computers. For form based applications, users are asked to use paper to input the data. The paper has special machine readable marks.
Reference: 4. <author> R. Rao, S. Card, H. Jellinek, J. Mackinlay and G. Robertson, </author> <title> The Information Grid: A Framework for Information Retrieval and Retrieval-Centered Applications, </title> <booktitle> Proc. UIST 92, </booktitle> <pages> pp. 23-32. </pages>
Reference-contexts: The argument Cohen makes is that these two modes have complementary strengths, and their combination can overcome weaknesses that either in isolation has. The paper makes a strong case for some form of (restricted) natural language component to an interactive system. 8 The information grid <ref> [4] </ref> is a framework for building information access applications. It views the information retrieval task as consisting of actions by the user, the dialogue machine, the data store and the task machine. In effect, it separates user tasks into an information access stage and a processing stage.
Reference: 5. <author> D. Goldberg and A. Goodisman, </author> <title> Stylus User Interfaces for Manipulating Text, </title> <booktitle> Proc. UIST 91, </booktitle> <pages> pp. 127-135. </pages>
Reference-contexts: Also, the user has to directly manipulate the views on screen and place them onto the location where they are to be embedded. This tool is simply an editor, and can neither access information nor be used as a place to launch computations. Goldberg and Goodisman <ref> [5] </ref> describe prototypes that explore some issues related to pen based interfaces for text manipulation. They deal with the issue of designing an interface around handwriting recognition software that makes errors, and exploiting the finer control provided by a stylus (compared to a mouse) to do gesture based editing.
Reference: 6. <author> L.Bass, G. Cockton, C.Unger, </author> <title> IFIP WG 2.7 User Interface Engineering: A Reference Model for Inter active System Construction, </title> <booktitle> Proc. </booktitle> <address> EHCI 92. </address>
Reference-contexts: In [7], Abowd, Coutaz and Nigay describe a structured classification of the properties that should guide the design of interactive systems. Similar issues, arising from a users view of an interactive system, are presented in IFIP WG 2.7 report edited by Bass, Cockton and Unger <ref> [6] </ref>. Apart from such theoretical work, there have also been some implemented systems that provide in part functionality similar to what we need. We briey introduce some of these next. 7 In [1], Lin presents a simple multimedia editor.
Reference: 7. <author> G. Abowd, J. Coutaz, L. Nigay, </author> <title> Structuring the Space of Interactive System Properties, </title> <booktitle> Proc. </booktitle> <address> EHCI 92. </address>
Reference-contexts: Multimodality differs from multimedia in as much as it is concerned with the meaning of the information owing through different communication channels, while multimedia is concerned merely with the form <ref> [7] </ref>. Incorporating true multimodality in the system requires advances in related areas such as natural language processing and speech processing. So as a weaker constraint, we would like the system to have multimedia capabilities at the minimum. 3. <p> Most interfaces are designed around one or the other application. However, work has been done in dealing with the various theoretical issues regarding the development of Interactive Systems. In <ref> [7] </ref>, Abowd, Coutaz and Nigay describe a structured classification of the properties that should guide the design of interactive systems. Similar issues, arising from a users view of an interactive system, are presented in IFIP WG 2.7 report edited by Bass, Cockton and Unger [6].
Reference: 8. <author> M. Andreessen and E. Bina, </author> <title> NCSA Mosaic, A Global Hypermedia System, </title> <journal> Internet Research, </journal> <volume> 4(1), </volume> <month> Spring </month> <year> 1994, </year> <pages> pp. 7-17. 24 </pages>
Reference: 9. <author> T.Berners-Lee, R. Cailliau, J-F. Groff and B. Pollermann, </author> <title> World Wide Web: </title> <journal> The Information Uni verse, Electronic Networking: Research, Applications, and Policy, </journal> <volume> 2(1), </volume> <month> Spring </month> <year> 1992, </year> <pages> pp. 52-58. </pages>
Reference-contexts: We will conclude by discussing this implementation, and the work we are currently doing to further improve it. 1.1 The World Wide Web Before we go further, however, a brief word on the WWW <ref> [9] </ref> and Mosaic may be in order here for the uninitiated. The Web is officially described as a Wide-area hypermedia information retrieval initiative 3 aiming to give universal access to a large universe of documents. It provides users with consistent means to access variety of media in simplified fashion.
Reference: 10. <author> CERN, </author> <title> How to put your data on the web, </title> <address> http://info.cern.ch/hypertext/WWW/Provider/Over view.html. </address>
Reference-contexts: Besides being concentrated in traditional repositories such as libraries, such information is also increasingly distributed, residing in workstations and computers belonging to individual researchers or research groups, and linked together to form a docuverse <ref> [10] </ref>. The World Wide Web (WWW, Web) is an example of such a scenario. The fact that some of the citations that you will see in this paper are to web documents is eloquent testimony to the fact.
Reference: 11. <author> NCSA, </author> <title> The Common Gateway Interface, </title> <address> http://hoohoo.ncsa.uiuc.edu/cgi/index.html. </address>
Reference-contexts: These URLs are of the following form: http://hostname:port/pdebus/clientname/message/argcnt/arg1len/arg1/... where hostname and port identify the specific HTTP daemon. This special server is configured to translate URLs of the form pdebus/* to a script that is invoked via the common gateway interface (CGI) <ref> [11] </ref>. By parsing the extra arguments, the PDEBus gateway script determines the client to be contacted as well as the message (including arguments) to be delivered. Finally, it connects with the software bus and delivers the message, thereby effecting the action that the user initiated.
Reference: 12. <author> NCSA, </author> <title> NCSA httpd Overview, </title> <address> http://hoohoo.ncsa.uiuc.edu/docs/Overview.html. </address>
Reference-contexts: A URL refers not only to documents, but can also refer to nearly any service on the Internet. Each networked site supporting the Web runs a server which can understand HyperText Transmission Protocol (HTTP). This server is called an HTTP Daemon <ref> [12] </ref>. It responds to requests from clients and supplies to them HTML files in its system. Browsers are clients that are used to access the information in the web.
Reference: 13. <institution> NCSA, NCSA Mosaic Home Page, </institution> <note> http://www.ncsa.uiuc.edu:80/SDG/Software/Mosaic. </note>
Reference: 14. <author> NCSA, </author> <title> NCSA Mosaic Common Client Interface (CCI 1.0), </title> <address> http://www.ncsa.uiuc.edu/SDG/Soft ware/Mosaic/CCI/cci-spec.html. </address>
Reference-contexts: Furthermore, as discussed in the section below, even the NCSA Mosaic Software Bus Notebook Driver Object Manager Tool FIGURE 4. Architecture of the notebook system based on modified NCSA Mosaic. Session file 20 modifications we made to NCSA Mosaic may be unnecessary once the common client interface <ref> [14] </ref> is implemented by various browsers. FIGURE 5. Notebook at start-up. FIGURE 6. Accessing the domain tool from the notebook. 21 5.3 NCSA Mosaic and the Common Client Interface (CCI) The Common Client Interface (CCI) allows external applications to communicate with running sessions of NCSA Mosaic via TCP/IP.
Reference: 15. <author> Sun Microsystems Inc., </author> <title> Network Programming: External Data Representation Standard, </title> <year> 1990. </year>
Reference-contexts: Second, PDEBus allows clients to register their own convertors to /from the data structure and some transport representation. Using this latter mechanism, one can transmit and receive data in the eXternal Data Representation (XDR <ref> [15] </ref>), for example. A set of utility functions for supporting XDR data communication is included in the current implementation of PDEBus. The software architecture of PDEBus is a layered architecture with the lowest level providing a packet-- based messaging system implemented over a reliable byte--stream protocol such as TCP/IP.
Reference: 16. <author> T. Berners-Lee, </author> <title> Uniform Resource Locators: A unifying syntax for the expression of names and addresses of objects on the network, </title> <address> http://info.cern.ch/hypertext/WWW/Addressing/URL/Over view.html. </address>
Reference-contexts: The services provided by PDEBus to clients can be categorized into three groups: location services, process management services and messaging services. For client and object location purposes, a global naming scheme based on uniform resource locators (URLs) <ref> [16] </ref> is used. The software bus provides various directory services with URLs being the naming standard. The process management facilities provided by PDEBus include facilities to invoke and control both local and remote processes and facilities to set up pre--wired configurations of clients and facilities.
Reference: 17. <author> C.S. Ang, </author> <title> D.C. Martine, M.D. Doyle, Integrated control of distributed volume visualization through the World-Wide-Web, </title> <booktitle> Proc. Visualization 94, </booktitle> <year> 1994, </year> <pages> pp. 13-20. </pages>
Reference-contexts: It does not support the notion of computation independent of operations on information. A system which augments the web browser capabilities and allows it to display 3D volume data sets is presented by Ang et. al. <ref> [17] </ref>.
Reference: 18. <author> S. Weerawarana, E.N. Houstis, J.R. Rice, A.C. Catlin, C.L. Crabill, C.C. Chui and S. Markus, PDELab: </author> <title> An Object--Oriented Framework for Building Problem Solving Environments for PDE Based Applications, </title> <booktitle> Proc. Second Annual Object-Oriented Numerics Conference, Rogue-Wave Software, </booktitle> <year> 1994, </year> <pages> pp. 79-92. </pages>
Reference-contexts: We will then detail the architecture of our notebook and describe the specifics of implementing it along with the supporting system software that we developed. For the purposes of demonstration, we have chosen to integrate some tools developed by other members of our group <ref> [18] </ref> for the solution of Partial Differential Equations (PDEs).
Reference: 19. <author> N. Borenstein, N. Freed, </author> <title> MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies, Internet RFC 1521. </title>
Reference-contexts: Each object that is represented in the notebook is typed. At start-up, the notebook is configured with the set of types of objects, the possible display representations of each of these types as well as the list of valid type-specific actions. The display representations are named using MIME <ref> [19] </ref> syntax. Using this model a session of the notebook interface contains in addition to arbitrary text and images, a collection of references to objects maintained in the object manager.
References-found: 19

