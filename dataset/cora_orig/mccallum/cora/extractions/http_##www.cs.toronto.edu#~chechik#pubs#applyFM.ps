URL: http://www.cs.toronto.edu/~chechik/pubs/applyFM.ps
Refering-URL: http://www.cs.toronto.edu/~chechik/publications.html
Root-URL: http://www.cs.toronto.edu
Email: Email: fandre,chechikg@cs.toronto.edu  
Title: Formal Modeling in a Commercial Setting: A Case Study  
Author: Andre Wong and Marsha Chechik 
Address: Toronto, ON M5S 3G4, Canada.  
Affiliation: Department of Computer Science, University of Toronto,  
Abstract: This paper describes a case study conducted in collaboration with Nortel to demonstrate the feasibility of applying formal modeling techniques to telecommunication systems. A formal description language, SDL, was chosen by our qualitative CASE tool evaluation to model a multimedia-messaging system described by an 80-page natural language specification. Our model was used to identify errors in the software requirements document and to derive test suites, shadowing the existing development process and keeping track of a variety of productivity data. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <editor> ANSI/IEEE. </editor> <booktitle> "IEEE 830: IEEE Recommended Practice for Software Requirements Specifications ". IEEE, </booktitle> <year> 1993. </year>
Reference-contexts: Validator/Req generates test cases for data-flow testing from the model automatically and produces documents that conform with the IEEE standard for software requirements specifications <ref> [1] </ref>. * Teradyne TestMaster (TM) [28]|a test generation tool that automatically generates test cases for both control-flow and limited data-flow testing from models based on EFSMs. The number of test cases can be flexibly tuned to suit different testing needs.
Reference: 2. <institution> Aonix. "Aonix Home Page". </institution> <note> http://www.aonix.com, September 1998. </note>
Reference: 3. <author> F. Belina, D. Hogrefe, and A. Sarma. </author> <title> SDL with Applications from Protocol Specification. </title> <publisher> Prentice Hall, </publisher> <year> 1991. </year>
Reference-contexts: Developers should also benefit from the more complete specifications during the design and the implementation phases. This is an area where SDL can potentially significantly improve the development process. In fact, SDL has been successfully applied in the telecommunications field: from the traditional use of protocol specifications <ref> [3, 26, 8] </ref> to high level specification [22], prototyping [29], design [24], code generation [10], and testing [11] of telecommunications applications.
Reference: 4. <editor> UML Partners Consortium. </editor> <title> "UML Proposal Document Set". OMG documents ad/97-08-f02,03,04,05,06,07,08,09g, </title> <month> September </month> <year> 1997. </year>
Reference-contexts: Alternatively, SDT can verify the cor rectness of the model with respect to independently created MSCs. * Aonix Validator/Req (V/Q) [2]|a test generation tool that allows black-box requirements of a system to be specified in the form of parameterized UML <ref> [4] </ref> use cases.
Reference: 5. <author> J. Crow and B.L. Di Vito. </author> <title> "Formalizing Space Shuttle Software Requirements". </title> <booktitle> In Workshop on Formal Methods in Software Practice, </booktitle> <address> San Diego, California, </address> <month> January </month> <year> 1996. </year>
Reference-contexts: If high quality specifications are crucial to the success of system developments, it seems logical to apply rigorous specification techniques to the requirements for ensuring their completeness and consistency. The majority of successful applications of formal modeling have been confined to safety-critical projects <ref> [5, 13, 19] </ref> where software correctness is the pivotal goal. In contrast, the commercial software industry seeks practical techniques that can be seamlessly integrated into the existing development processes and improve productivity; absolute quality is often a desirable but not crucial objective.
Reference: 6. <author> R.E. Davis and R.L. Danielson. </author> <title> "Practically Formal Methods". </title> <booktitle> In Proceedings of International Conference on Software Engineering: Education and Practices, </booktitle> <pages> pages 168-175. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> January </month> <year> 1996. </year>
Reference-contexts: It is also essential to achieve immediate results by using the approach incrementally, that is, being able to stop at any time and get partial benefits from partial modeling. A light-weight approach to formalization has been advocated by many researchers <ref> [6, 18, 20] </ref> and applied successfully in several projects, e.g. [7, 9]. What about verification? We feel that in the current commercial environment the majority of systems do not require any verification.
Reference: 7. <author> Steve Easterbrook, Robyn Lutz, Richard Covington, John Kelly, Yoko Ampo, and David Hamilton. </author> <title> "Experience Using Lightweight Formal Methods for Requirements Modeling". </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 24(1) </volume> <pages> 4-14, </pages> <month> January </month> <year> 1998. </year>
Reference-contexts: A light-weight approach to formalization has been advocated by many researchers [6, 18, 20] and applied successfully in several projects, e.g. <ref> [7, 9] </ref>. What about verification? We feel that in the current commercial environment the majority of systems do not require any verification. There is typically a lesser need for absolute assurance, but a greater need for rapid development of reasonably correct systems.
Reference: 8. <author> Christian Facchi, Markus Haubner, and Ursula Hinkel. </author> <title> The SDL Specification of the Sliding Window Protocol Revisited. </title> <type> Technical Report TUM-I9614, </type> <institution> Technische Univeritat Munchen, </institution> <year> 1996. </year>
Reference-contexts: Developers should also benefit from the more complete specifications during the design and the implementation phases. This is an area where SDL can potentially significantly improve the development process. In fact, SDL has been successfully applied in the telecommunications field: from the traditional use of protocol specifications <ref> [3, 26, 8] </ref> to high level specification [22], prototyping [29], design [24], code generation [10], and testing [11] of telecommunications applications.
Reference: 9. <author> M.S. Feather. </author> <title> "Rapid Application of Lightweight Formal Methods for Consistency Analysis". </title> <journal> IEEE Transactions on Software Engineering, </journal> <month> November </month> <year> 1998. </year>
Reference-contexts: A light-weight approach to formalization has been advocated by many researchers [6, 18, 20] and applied successfully in several projects, e.g. <ref> [7, 9] </ref>. What about verification? We feel that in the current commercial environment the majority of systems do not require any verification. There is typically a lesser need for absolute assurance, but a greater need for rapid development of reasonably correct systems.
Reference: 10. <author> M.W. Froberg. </author> <title> "Automatic Code Generation from SDL to a Declarative Programming Language". </title> <booktitle> In Proceedings of the Sixth SDL Forum, </booktitle> <address> Darmstadt, Germany, </address> <month> October </month> <year> 1993. </year>
Reference-contexts: This is an area where SDL can potentially significantly improve the development process. In fact, SDL has been successfully applied in the telecommunications field: from the traditional use of protocol specifications [3, 26, 8] to high level specification [22], prototyping [29], design [24], code generation <ref> [10] </ref>, and testing [11] of telecommunications applications.
Reference: 11. <author> M. Grasmanis and I. Medvedis. </author> <title> "Approach to Behaviour Specification and Automated Test Generation for Telephone Exchange Systems". </title> <booktitle> In Proceedings of the Fifth SDL Forum, </booktitle> <address> Glasgow, Scotland, </address> <month> September </month> <year> 1991. </year>
Reference-contexts: This is an area where SDL can potentially significantly improve the development process. In fact, SDL has been successfully applied in the telecommunications field: from the traditional use of protocol specifications [3, 26, 8] to high level specification [22], prototyping [29], design [24], code generation [10], and testing <ref> [11] </ref> of telecommunications applications.
Reference: 12. <author> Anthony Hall. </author> <title> "Using Formal Methods to Develop an ATC Information System". </title> <journal> IEEE Software, </journal> <volume> 13(2), </volume> <month> March </month> <year> 1996. </year>
Reference-contexts: In contrast, the commercial software industry seeks practical techniques that can be seamlessly integrated into the existing development processes and improve productivity; absolute quality is often a desirable but not crucial objective. Although the feasibility of formal specifications has been demonstrated in commercial settings <ref> [12, 15, 23] </ref>, the overall adoption of the idea has been slow. Most companies, such as the Canadian-based telecommunications company Nor-tel 1 , opt to rely on manual inspections of natural-language specifications as the only technique to detect errors in them, even though the results have been suboptimal.
Reference: 13. <author> Mats P.E. Heimdahl. </author> <title> "Lessons from the Analysis of TCAS II". </title> <booktitle> In Proceedings of the International Symposium on Software Testing and Analysis (ISSTA'96), </booktitle> <address> San Diego, CA, </address> <month> January </month> <year> 1996. </year>
Reference-contexts: If high quality specifications are crucial to the success of system developments, it seems logical to apply rigorous specification techniques to the requirements for ensuring their completeness and consistency. The majority of successful applications of formal modeling have been confined to safety-critical projects <ref> [5, 13, 19] </ref> where software correctness is the pivotal goal. In contrast, the commercial software industry seeks practical techniques that can be seamlessly integrated into the existing development processes and improve productivity; absolute quality is often a desirable but not crucial objective.
Reference: 14. <author> Constance Heitmeyer. </author> <title> "One the Need for Practical Formal Methods". </title> <booktitle> In Proceedings of 5th Int. Symp. on Real-time and Real-time Fault Tolerant Systems (FTRTFT'98), </booktitle> <pages> pages 18-26, </pages> <year> 1998. </year> <note> LICS 1486. </note>
Reference-contexts: that, if verification is not involved, it is not essential to use a modeling language with a fully-defined formal semantics to achieve immediate and measurable benefits. 7 Measuring Usability of SDL There is no doubt that usability of formal modeling techniques plays an important role in their acceptance in industry <ref> [14] </ref>. An easy-to-use technique encourages experimentation and reduces the cost of integration. More importantly, the reality is that practitioners do not try to adapt to an inconvenient technique| they simply abandon it [30]. Thus, it is essential that SDL is perceived to be usable by Nortel engineers.
Reference: 15. <author> Jonathan P. Hoare. </author> <title> "Application of the B-Method to CICS". </title> <editor> In M. G. Hinchey and J. P. Bowen, editors, </editor> <booktitle> Applications of Formal Methods, </booktitle> <pages> pages 97-124. </pages> <publisher> Prentice Hall International Series in Computer Science, </publisher> <year> 1995. </year>
Reference-contexts: In contrast, the commercial software industry seeks practical techniques that can be seamlessly integrated into the existing development processes and improve productivity; absolute quality is often a desirable but not crucial objective. Although the feasibility of formal specifications has been demonstrated in commercial settings <ref> [12, 15, 23] </ref>, the overall adoption of the idea has been slow. Most companies, such as the Canadian-based telecommunications company Nor-tel 1 , opt to rely on manual inspections of natural-language specifications as the only technique to detect errors in them, even though the results have been suboptimal.
Reference: 16. <author> ITU-T. </author> <title> "ITU-T Recommendation Z.100: Specification and Description Language (SDL)". ITU-T, </title> <booktitle> 1993. XV </booktitle>
Reference-contexts: Some were simply too difficult to be used in industry. We eventually narrowed down our search to the following candidates: * Telelogic SDT [27]|an integrated software modeling and testing tool suite that utilizes Specification and Description Language (SDL) <ref> [16] </ref>, which is based on extended finite state machines (EFSMs), for behavioral modeling and Message Sequence Charts (MSCs) [17] for component-interaction specification. MSCs, which can be used as test cases, can be derived semiautomatically from an SDL model.
Reference: 17. <author> ITU-T. </author> <title> "ITU-T Recommendation Z.120: Message Sequence Chart (MSC)". </title> <type> ITU-T, </type> <year> 1993. </year>
Reference-contexts: We eventually narrowed down our search to the following candidates: * Telelogic SDT [27]|an integrated software modeling and testing tool suite that utilizes Specification and Description Language (SDL) [16], which is based on extended finite state machines (EFSMs), for behavioral modeling and Message Sequence Charts (MSCs) <ref> [17] </ref> for component-interaction specification. MSCs, which can be used as test cases, can be derived semiautomatically from an SDL model.
Reference: 18. <author> Daniel Jackson and Jeannette Wing. </author> <title> "Lighweight Formal Methods". </title> <booktitle> IEEE Computer, </booktitle> <month> April </month> <year> 1996. </year>
Reference-contexts: It is also essential to achieve immediate results by using the approach incrementally, that is, being able to stop at any time and get partial benefits from partial modeling. A light-weight approach to formalization has been advocated by many researchers <ref> [6, 18, 20] </ref> and applied successfully in several projects, e.g. [7, 9]. What about verification? We feel that in the current commercial environment the majority of systems do not require any verification.
Reference: 19. <author> Paul K. Joannou. </author> <title> "Experiences from Application of Digital Systems in Nuclear Power Plants". </title> <booktitle> In Proceedings of the Digital Systems Reliability and Nuclear Safety Workshop, </booktitle> <address> Rockville, Maryland, </address> <year> 1993. </year>
Reference-contexts: If high quality specifications are crucial to the success of system developments, it seems logical to apply rigorous specification techniques to the requirements for ensuring their completeness and consistency. The majority of successful applications of formal modeling have been confined to safety-critical projects <ref> [5, 13, 19] </ref> where software correctness is the pivotal goal. In contrast, the commercial software industry seeks practical techniques that can be seamlessly integrated into the existing development processes and improve productivity; absolute quality is often a desirable but not crucial objective.
Reference: 20. <author> Cliff B. Jones. </author> <title> "An Invitation to Formal Methods: A Rigorous Approach to Formal Methods". </title> <journal> IEEE Computer, </journal> <volume> 20(4):19, </volume> <month> April </month> <year> 1996. </year>
Reference-contexts: It is also essential to achieve immediate results by using the approach incrementally, that is, being able to stop at any time and get partial benefits from partial modeling. A light-weight approach to formalization has been advocated by many researchers <ref> [6, 18, 20] </ref> and applied successfully in several projects, e.g. [7, 9]. What about verification? We feel that in the current commercial environment the majority of systems do not require any verification.
Reference: 21. <author> Barbara Ann Kitchenham. </author> <title> "Evaluating Software Engineering Methods and Tools. </title> <booktitle> Part 1". ACM SIGSOFT Software Engineering Notes, </booktitle> <volume> 21(1) </volume> <pages> 11-15, </pages> <month> January </month> <year> 1996. </year>
Reference-contexts: Specifically, the emphasis is placed on deriving test cases from the formal model as the Nortel engineers have expressed concerns about the feasibility of code generation for their proprietary platform. Our exploratory project was organized as a hybrid quantitative and qualitative case study <ref> [21] </ref>. As it was extremely important to choose the right system/language combination for the formalization process, we began the study by selecting a typical system to specify and conducting a qualitative evaluation of formal modeling languages. <p> The number of test cases can be flexibly tuned to suit different testing needs. To perform a detailed assessment, we structured our evaluation as a feature analysis exercise <ref> [21] </ref> and refined our focus to choosing among the remaining methods using additional evaluation criteria gathered from the Nortel engineers. V These criteria comprised of factors, such as usability and smooth integration, that were crucial to the use of formal modeling in their environment.
Reference: 22. <author> L. Mansson. </author> <title> "High Level Specification of a Telecom Application with SDL'92". </title> <booktitle> In Proceedings of the Sixth SDL Forum, </booktitle> <address> Darmstadt, Germany, </address> <month> October </month> <year> 1993. </year>
Reference-contexts: This is an area where SDL can potentially significantly improve the development process. In fact, SDL has been successfully applied in the telecommunications field: from the traditional use of protocol specifications [3, 26, 8] to high level specification <ref> [22] </ref>, prototyping [29], design [24], code generation [10], and testing [11] of telecommunications applications.
Reference: 23. <author> Peter Mataga and Pamela Zave. </author> <title> "Multiparadigm Specification of an AT&T Switching System". </title> <editor> In M. G. Hinchey and J. P. Bowen, editors, </editor> <booktitle> Applications of Formal Methods, </booktitle> <pages> pages 375-398. </pages> <publisher> Prentice Hall International Series in Computer Science, </publisher> <year> 1995. </year>
Reference-contexts: In contrast, the commercial software industry seeks practical techniques that can be seamlessly integrated into the existing development processes and improve productivity; absolute quality is often a desirable but not crucial objective. Although the feasibility of formal specifications has been demonstrated in commercial settings <ref> [12, 15, 23] </ref>, the overall adoption of the idea has been slow. Most companies, such as the Canadian-based telecommunications company Nor-tel 1 , opt to rely on manual inspections of natural-language specifications as the only technique to detect errors in them, even though the results have been suboptimal.
Reference: 24. <author> M.Kooij and L. Provoost. </author> <title> "Industrial Report on the Use of Abstraction in SDL/MSC". </title> <booktitle> In First Workshop of the SDL Forum Society on SDL and MSC, </booktitle> <address> Berlin, Germany, </address> <month> June </month> <year> 1998. </year> <month> alcatel. </month>
Reference-contexts: This is an area where SDL can potentially significantly improve the development process. In fact, SDL has been successfully applied in the telecommunications field: from the traditional use of protocol specifications [3, 26, 8] to high level specification [22], prototyping [29], design <ref> [24] </ref>, code generation [10], and testing [11] of telecommunications applications.
Reference: 25. <author> D.L. Parnas. </author> <title> "Some Theorems We Should Prove". </title> <booktitle> In Proceedings of 1993 International Conference on HOL Theorem Proving and Its Applications, </booktitle> <address> Vancouver, BC, </address> <month> August </month> <year> 1993. </year>
Reference-contexts: 1 Introduction For a long time, researchers and practitioners have been seeking ways to improve productivity in the software development process. Precise documentation of software specifications has been advocated as one of the viable approaches <ref> [25] </ref>. If high quality specifications are crucial to the success of system developments, it seems logical to apply rigorous specification techniques to the requirements for ensuring their completeness and consistency.
Reference: 26. <author> A. Sarma. </author> <title> "Modelling Broadband ISDN Protocols with SDL". </title> <booktitle> In Proceedings of the Fifth SDL Forum, </booktitle> <address> Glasgow, Scotland, </address> <month> September </month> <year> 1989. </year>
Reference-contexts: Developers should also benefit from the more complete specifications during the design and the implementation phases. This is an area where SDL can potentially significantly improve the development process. In fact, SDL has been successfully applied in the telecommunications field: from the traditional use of protocol specifications <ref> [3, 26, 8] </ref> to high level specification [22], prototyping [29], design [24], code generation [10], and testing [11] of telecommunications applications.
Reference: 27. <institution> Telelogic. "Telelogic SDT Home Page". </institution> <address> http://www.telelogic.com/solution/ tools/sdt.asp, </address> <month> September </month> <year> 1998. </year>
Reference: 28. <institution> Teradyne. "TestMaster Home Page". </institution> <address> http://www.teradyne.com/prods/sst/ ssthome.html, </address> <month> September </month> <year> 1998. </year>
Reference: 29. <author> H.J. Vgel, W. Kellerer, S. Karg, M. Kober, A. Beckert, and G. Einfalt. </author> <title> "SDL based prototyping of ISDN-DECT-PBX switching software". </title> <booktitle> In First Workshop of the SDL Forum Society on SDL and MSC, </booktitle> <address> Berlin, Germany, </address> <month> June </month> <year> 1998. </year>
Reference-contexts: This is an area where SDL can potentially significantly improve the development process. In fact, SDL has been successfully applied in the telecommunications field: from the traditional use of protocol specifications [3, 26, 8] to high level specification [22], prototyping <ref> [29] </ref>, design [24], code generation [10], and testing [11] of telecommunications applications.
Reference: 30. <author> Debora Weber-Wulff. </author> <title> "Selling Formal Methods to Industry". </title> <editor> In J.C.P. Woodcock and P.G. Larsen, editors, </editor> <booktitle> Proceedings of FME'93: Industrial Benefit of Formal Methods, First International Symposium of Formal Methods Europe, </booktitle> <pages> pages 671-678, </pages> <address> Odense, Denmark, April 1993. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: An easy-to-use technique encourages experimentation and reduces the cost of integration. More importantly, the reality is that practitioners do not try to adapt to an inconvenient technique| they simply abandon it <ref> [30] </ref>. Thus, it is essential that SDL is perceived to be usable by Nortel engineers. Only then will they be willing to apply it to their projects. To collect some information about the usability of SDL, we conducted a one-day workshop in which six Nortel engineers participated.
Reference: 31. <author> Andre Wong. </author> <title> "The Diary of the Formal-Method Survey". </title> <address> http://www.cs. toronto.edu/~andre/progress.html, </address> <month> September </month> <year> 1998. </year>
Reference-contexts: Moreover, since one of the overall objectives was to amortize the cost of creating a formal specification, we began the evaluation by conducting a broad survey <ref> [31] </ref> of available tools that provided support for both modeling and testing. These constraints turned out to be extremely limiting as most of the surveyed methods either had just the modeling or just the testing support, or did not have a formal notation.
Reference: 32. <author> Andre Wong. </author> <title> "Formalizing Requirements in a Commercial Setting: A Case Study". M.Sc. </title> <type> thesis, </type> <institution> University of Toronto, Department of Computer Science, Toronto, ON, Canada, </institution> <year> 1999. </year> <note> (In preparation). </note>
Reference-contexts: To collect some information about the usability of SDL, we conducted a one-day workshop in which six Nortel engineers participated. In the first part of the workshop we provided the participants with natural language descriptions of two small software systems <ref> [32] </ref>. After inspecting the descriptions manually and noting problems in them, the participants were asked to model the described systems in SDL. <p> The goal of the questionnaire was to obtain opinions about the usability of SDL and its perceived role in the development environment. Some of the results are summarized in Table 3, and the rest are available in <ref> [32] </ref>. The column on the right contains an average score on the scale from 1 (strongly disagree) to 5 (strongly agree).
Reference: 33. <author> Marvin V. Zelkowitz and Dolores R. Wallace. </author> <title> "Experimental Models for Validating Technology". </title> <journal> IEEE Computer, </journal> <volume> 31(5), </volume> <month> May </month> <year> 1998. </year> <pages> XVI </pages>
Reference-contexts: We were also fortunate to find a method which is well suited for modeling telecommunication systems. However, it would be difficult <ref> [33] </ref> to generalize our findings outside the Nortel domain, since they would depend on the current development methodology, types of applications and the choice of a modeling language/tool. Other limitations came from the fact that we had prior experience with SDL and were not constrained by development pressures.
References-found: 33

