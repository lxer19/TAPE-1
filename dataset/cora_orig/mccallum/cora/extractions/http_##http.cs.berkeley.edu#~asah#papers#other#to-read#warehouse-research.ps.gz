URL: http://http.cs.berkeley.edu/~asah/papers/other/to-read/warehouse-research.ps.gz
Refering-URL: http://http.cs.berkeley.edu/~asah/papers/other/to-read/
Root-URL: http://www.cs.berkeley.edu
Email: widom@db.stanford.edu  
Title: Research Problems in Data Warehousing  
Author: Jennifer Widom 
Address: Stanford, CA 94305-2140  
Affiliation: Department of Computer Science Stanford University  
Date: Nov. 1995  
Note: Proc. of 4th Int'l Conference on Inform ation and Knowledge Management (CIKM  
Abstract: The topic of data warehousing encompasses architectures, algorithm s, and tools for bringing together selected data from multiple databases or other information sources into a single repository, called a data warehouse, suitable for direct querying or analysis. In recent years data warehousing has becom e a prominent buzzword in the database industry, but attention from the database research community has been limited. In this pap er we motivate the concept of a data warehouse, we outline a general data warehousing architecture, and we prop ose a numb er of technical issues arising from the architecture that we believe are suitable topics for exploratory research. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J.A. Blakeley, N. Coburn, and P.-A. Larson. </author> <title> Updating derived relations: Detecting irrelevant and autonom ously computable up dates. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 14(3) </volume> <pages> 369-400, </pages> <note> Septem - ber 1989. </note>
Reference-contexts: In view maintenance, when additional queries over base data are never required to maintain a given view, then the view is said to be self-maintainable <ref> [1, 8] </ref>. Most views are not fully self-m aintainable. However, self-maintainability can be ensured by storing additional data at the warehouse.
Reference: [2] <author> S. Ceri and J. </author> <title> Widom . Deriving pro duction rules for incremental view maintenance. </title> <booktitle> In Proceedings of the Seventeenth International Conference on Very Large Data Bases, </booktitle> <pages> pages 577-589, </pages> <address> Barcelona, Spain, Septemb er 1991. </address>
Reference-contexts: For conventional view maintenance, algorithms have been develop ed to autom atically generate active database rules for maintaining SQL-defined views <ref> [2] </ref>. Each rule is "triggered" by the notification of an up date that may affect the view, and the rule modifies the view appropriately. A sim ilar approach may be applied to data warehousing if a ruledriven integrator is used.
Reference: [3] <author> S. Chawathe, H. Garcia-M olina, J. Ham mer, K. Ireland, Y. Papakonstantinou, J. Ullman, and J. Widom. </author> <title> The Tsimm is pro ject: Integration of heterogeneous information sources. </title> <booktitle> In Proceedings of 100th Anniversary Meeting of the Information Processing Society of Japan, </booktitle> <pages> pages 7-18, </pages> <address> Tokyo, Japan, Octob er 1994. </address>
Reference-contexts: The translation problem is inherent in alm ost all approaches to data integration| b oth lazy and eager| and is not specific to data warehousing. Typically, a com p onent that translates an inform ation source into a com mon integrating mo del is called a translator or wrapper <ref> [3, 20] </ref>. 3 2. Change detection: Monitoring the inform ation source for changes to the data that are relevant to the warehouse and propagating those changes to the integrator.
Reference: [4] <author> S. Chawathe, A. Ra jaram an, H. Garcia-M olina, and J. Widom. </author> <title> Change detection in hierarchically structured inform ation. </title> <type> Technical rep ort, </type> <institution> Dept. of Com puter Science, Stanford University, </institution> <year> 1995. </year> <note> Available by anonymous ftp to db.stanford.edu in file pub/chawathe/1995/tdiff2-0.ps. </note>
Reference-contexts: An imp ortant related problem in all of these scenarios is to develop appropriate representations for the changes to the data, esp ecially if a non-relational model is used <ref> [4] </ref>.
Reference: [5] <author> J. Chom icki. </author> <title> History-less checking of dynamic integrity constraints. </title> <booktitle> In Proceedings of the Eighth International Conference on Data Engineering, </booktitle> <pages> pages 557-564, </pages> <address> Phoenix, Arizona, </address> <month> February </month> <year> 1992. </year>
Reference-contexts: Hence, warehouse views may not be functions of the underlying base data as traditional views are, but rather functions of the history of the underlying data. Relevant areas of research here certainly include tem poral databases [18 ], as well as work on efficient monitoring of historical inform ation <ref> [5] </ref>. * Data warehouses also tend to contain highly aggregated and summ arized information [7].
Reference: [6] <institution> IEEE Computer. </institution> <note> Special Issue on Heterogeneous Distributed Database Systems, 24(12), </note> <month> December </month> <year> 1991. </year>
Reference-contexts: 1 Introduction Providing integrated access to multiple, distributed, heterogeneous databases and other information sources has becom e one of the leading issues in database research and industry <ref> [6] </ref>. In the research community, most approaches to the data integration problem are based on the following very general twostep pro cess: 1.
Reference: [7] <author> J. Gray, A. Bosworth, A. Laym an, and H. Pirahesh. </author> <title> Data Cub e: A relational op erator generalizing group-by, </title> <journal> cross-tabs and subtotals. IEEE Transactions on Knowledge and Data Engineering, </journal> <note> 1995. To app ear. </note>
Reference-contexts: Relevant areas of research here certainly include tem poral databases [18 ], as well as work on efficient monitoring of historical inform ation [5]. * Data warehouses also tend to contain highly aggregated and summ arized information <ref> [7] </ref>. Although in som e cases aggregations may be describable in a conventional view definition language, the expressiveness of aggregates and sum m ary op erators in such languages are lim ited, so more expressive view definition languages may be needed. <p> Furtherm ore, efficient view maintenance in the presence of aggregation and sum mary inform ation app ears to be an open problem <ref> [7, 17] </ref>. * The inform ation sources up dating the base data generally op erate indep endently from the warehouse where the view is stored, and the base data may com e from legacy systems that are unable or unwilling to participate in view maintenance.
Reference: [8] <author> A. Gupta, H.V. Jagadish, </author> <title> and I.S. Mum ick. Data integration using self-m aintainable views. </title> <type> Technical memorandum, </type> <institution> AT&T Bell Lab oratories, Novemb er 1994. </institution>
Reference-contexts: In view maintenance, when additional queries over base data are never required to maintain a given view, then the view is said to be self-maintainable <ref> [1, 8] </ref>. Most views are not fully self-m aintainable. However, self-maintainability can be ensured by storing additional data at the warehouse.
Reference: [9] <author> A. Gupta and I.S. Mum ick. </author> <title> Maintenance of materialized views: Problem s, techniques, </title> <journal> and applications. IEEE Data Engineering Bulletin, Special Issue on Materialized Views and Data Warehousing, </journal> <volume> 18(2) </volume> <pages> 3-18, </pages> <month> June </month> <year> 1995. </year>
Reference-contexts: At a sufficiently abstract level, the data in the warehouse can be seen as a materialized view (or set of views), where the base data resides at the inform ation sources. Viewing the problem in this way, the job of the integrator is essentially to perform materialized view maintenance <ref> [9] </ref>. Indeed, there is a close connection between the view maintenance problem and data warehousing [15 ].
Reference: [10] <author> A. Gupta and J. Widom. </author> <title> Local verification of global integrity constraints in distributed databases. </title> <booktitle> In Proceedings of the ACM SIGMOD International Conference on Management of Data, </booktitle> <pages> pages 49-58, </pages> <address> Washington, D.C., </address> <month> May </month> <year> 1993. </year>
Reference-contexts: A numb er of papers have been devoted to the topic of determ ining when certain modifications are guaranteed to leave a view unchanged, e.g., [14 ]. Related techniques allow distributed integrity constraints to be checked at a single site when certain typ es of mo difications occur <ref> [10 ] </ref>.
Reference: [11] <author> J. Ham mer, H. Garcia-M olina, J. Widom , W. Labio, and Y. Zhuge. </author> <title> The Stanford Data Warehousing Pro ject. </title> <journal> IEEE Data Engineering Bulletin, Special Issue on Materialized Views and Data Warehousing, </journal> <volume> 18(2) </volume> <pages> 41-48, </pages> <month> June </month> <year> 1995. </year>
Reference-contexts: We self-servingly note that this approach is being pursued by the WHIPS data warehousing pro ject at Stanford <ref> [11 ] </ref>. 4.4 Optimizations In this section we outline three optimizations that can improve the perform ance of the architecture describ ed Section 3: filtering irrelevant modifications at the sources, storing additional data at the warehouse for "self maintainability," and efficiently managing multiple ma-terialized views. 4.4.1 Update Filtering We have said
Reference: [12] <author> W.H. Inm on and C. Kelley. Rdb/VMS: </author> <title> Developing the Data Warehouse. </title> <publisher> QED Publishing Group, </publisher> <address> Boston, Massachussetts, </address> <year> 1993. </year>
Reference-contexts: In this pap er we consider research problem s asso ciated with the warehousing approach. 2 Industrial Perspective Before considering the research problem s associated with data warehousing, we note that there has been great interest in the topic within the database industry over the last several years <ref> [12 ] </ref>. Most leading vendors claim to provide at least some "data warehousing tools," while several small com panies are devoted exclusively to data warehousing products.
Reference: [13] <author> W. Labio and H. Garcia-M olina. </author> <title> Efficient snapshot differential algorithms in data warehousing. </title> <type> Technical rep ort, </type> <institution> Dept. of Com puter Science, Stanford University, </institution> <year> 1995. </year> <note> Available by anonym ous ftp to db.stanford.edu in file pub/labio/1995/window.ps. </note>
Reference-contexts: In snapshot sources, the challenge is to compare very large database dumps, detecting the changes of interest in an efficient and scalable way <ref> [13 ] </ref>. An imp ortant related problem in all of these scenarios is to develop appropriate representations for the changes to the data, esp ecially if a non-relational model is used [4].
Reference: [14] <author> A. Levy and Y. Sagiv. </author> <title> Queries indep endent of updates. </title> <booktitle> In Proceedings of the Ninetenth International Conference on Very Large Data Bases, </booktitle> <pages> pages 171-181, </pages> <address> Dublin, Ireland, </address> <month> August </month> <year> 1993. </year>
Reference-contexts: A numb er of papers have been devoted to the topic of determ ining when certain modifications are guaranteed to leave a view unchanged, e.g., <ref> [14 ] </ref>. Related techniques allow distributed integrity constraints to be checked at a single site when certain typ es of mo difications occur [10 ].
Reference: [15] <editor> D. Lom et and J. Widom , editors. </editor> <title> Special Issue on Materialized Views and Data Warehousing, </title> <journal> IEEE Data Engineering Bulletin 18(2), </journal> <month> June </month> <year> 1995. </year>
Reference-contexts: Viewing the problem in this way, the job of the integrator is essentially to perform materialized view maintenance [9]. Indeed, there is a close connection between the view maintenance problem and data warehousing <ref> [15 ] </ref>.
Reference: [16] <author> Y. Papakonstantinou, A. Gupta, H. Garcia-M olina, and J. Ullman. </author> <title> A query translation schem e for rapid implementation of wrapp ers. </title> <booktitle> In Proceedings of the Fourth International Conference on Deductive and Object-Oriented Databases, Singap ore, </booktitle> <month> December </month> <year> 1995. </year>
Reference-contexts: Hence, a significant research issue is to develop techniques and tools that automate or semi-autom ate the process of implem enting wrapp er/monitors, through a toolkit or specification-based approach <ref> [16 ] </ref>. 4.2 Integrator Assum e that the warehouse has been loaded with its initial set of data obtained from the inform ation sources. (The task of setting up and loading the data warehouse is discussed in Section 4.5 below.) The ongoing job of the integrator is to receive change notifications
Reference: [17] <author> R. Ram akrishnan, K.A. Ross, D. Srivastava, and S. Sudarshan. </author> <title> Effi cient increm ental evaluation of queries with aggregation. </title> <booktitle> In Proceedings of the International Logic Programming Symposium, </booktitle> <pages> pages 204-218, </pages> <year> 1994. </year>
Reference-contexts: Furtherm ore, efficient view maintenance in the presence of aggregation and sum mary inform ation app ears to be an open problem <ref> [7, 17] </ref>. * The inform ation sources up dating the base data generally op erate indep endently from the warehouse where the view is stored, and the base data may com e from legacy systems that are unable or unwilling to participate in view maintenance.
Reference: [18] <author> M.D . Soo. </author> <title> Bibliography on tem p oral databases. </title> <booktitle> SIGMOD Record, </booktitle> <volume> 20(1) </volume> <pages> 14-24, </pages> <month> March </month> <year> 1991. </year>
Reference-contexts: Hence, warehouse views may not be functions of the underlying base data as traditional views are, but rather functions of the history of the underlying data. Relevant areas of research here certainly include tem poral databases <ref> [18 ] </ref>, as well as work on efficient monitoring of historical inform ation [5]. * Data warehouses also tend to contain highly aggregated and summ arized information [7].
Reference: [19] <author> J. Widom and S. Ceri. </author> <title> Active Database Systems: Triggers and Rules for Advanced Database Processing. </title> <publisher> Morgan Kaufmann, </publisher> <address> San Francisco, California, </address> <year> 1995. </year>
Reference-contexts: In considering the change detection problem , we have identified several relevant typ es of information sources: * Cooperative sources: Sources that provide triggers or other active database capabilities <ref> [19 ] </ref>, so that notifications of changes of interest can be pro gramm ed to occur automatically. * Logged sources: Sources maintaining a log that can be queried or insp ected, so changes of interest can be extracted from the log. 3 Most commercial data warehousing systems assume that both the
Reference: [20] <author> G. Wiederhold. </author> <title> Mediators in the architecture of future inform ation systems. </title> <journal> IEEE Computer, </journal> <volume> 25(3) </volume> <pages> 38-49, </pages> <month> March </month> <year> 1992. </year>
Reference-contexts: process as a lazy or on-demand approach to data integration, since information is extracted from the sources only when queries are posed. (This process also may be referred to as a mediated approach, since the module that decomp oses queries and combines results often is referred to as a mediator <ref> [20 ] </ref>.) The natural alternative to a lazy approach is an eager or in-advance approach to data integration. In an eager approach: 1. <p> The translation problem is inherent in alm ost all approaches to data integration| b oth lazy and eager| and is not specific to data warehousing. Typically, a com p onent that translates an inform ation source into a com mon integrating mo del is called a translator or wrapper <ref> [3, 20] </ref>. 3 2. Change detection: Monitoring the inform ation source for changes to the data that are relevant to the warehouse and propagating those changes to the integrator.
Reference: [21] <author> G. Zhou, R. Hull, R. King, and J.-C. Franchitti. </author> <title> Data integration and warehousing using H20. </title> <journal> IEEE Data Engineering Bulletin, Special Issue on Materialized Views and Data Warehousing, </journal> <volume> 18(2) </volume> <pages> 29-40, </pages> <month> June </month> <year> 1995. </year>
Reference-contexts: broad area, so we focus this paper specifically on research issues associated with the warehousing approach to integration. 1 Another promising and relatively unexplored approach to information integration is a hybrid approach, in which some information is stored in a centralized repository while other information is fetched on demand, e.g., <ref> [21] </ref>. 2 Other relevant terms include data mining, on-line analytical processing (OLAP), and multidimensional analysis, which we view as refinements or subclasses of decision support. 3 Architecture of a Data Warehousing System the information sources.
Reference: [22] <author> Y. Zhuge, H. Garcia-M olina, J. Ham mer, and J. </author> <title> Widom . View maintenance in a warehousing en-vironm ent. </title> <booktitle> In Proceedings of the ACM SIGMOD International Conference on Management of Data, </booktitle> <pages> pages 316-327, </pages> <address> San Jose, California, </address> <month> May </month> <year> 1995. </year>
Reference-contexts: The underlying information sources do not participate in view maintenance but simply rep ort changes. Some sources may not provide locking capabilities, and there are alm ost certainly no global transac tions. In this scenario, certain "anom alies" arise when attempting to keep views consistent with base data (see <ref> [22 ] </ref>), and algorithm s must be used that are considerably more com plicated than conventional view maintenance algorithm s. * In a data warehouse, the views may not need to be refreshed after every mo dification or set of modifications to the base data. <p> Similar to the view maintenance rules, integrator rules must up date the warehouse to reflect the base data up dates. However, in the warehousing scenario, rules may need to perform more complicated functions, such as fetching additional data from sources using rem ote queries <ref> [22 ] </ref> and "scrubbing" the data (as describ ed in Section 4.2). Despite the additional com plexity of rules in the warehousing environm ent, it still should be possible to au-tom atically or semiautomatically generate appropriate rules from the warehouse (view) specification. <p> an insert to relation R, then the inserted tuple must be joined with the contents of relation S.) Issuing queries to sources can incur a processing delay, the queries may be exp ensive, and such queries are the basis of the warehouse maintenance "anom alies" alluded to in Section 4.2 <ref> [22 ] </ref>. Even worse, when inform ation sources are highly secure or when they are legacy system s, ad-hoc queries may not be permitted at all.
References-found: 22

