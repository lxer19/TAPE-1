URL: ftp://ftp.cs.kun.nl/pub/SoftwEng.InfSyst/articles/PsmIr.ps.Z
Refering-URL: http://www.sci.kun.nl/afdis/publist.html
Root-URL: 
Email: fcoenb,erikp,tvdwg@cs.kun.nl  
Title: An Information System organized as Stratified Hypermedia  
Author: C.A.J. Burgers, H.A. Proper and Th.P. van der Weide 
Address: Toernooiveld, NL-6525 ED Nijmegen, The Netherlands  
Affiliation: Department of Information Systems, University of Nijmegen  
Note: Version of July 5, 1993 at 15:48  
Abstract: Published as: C.A.J. Burgers, H.A. Proper, and Th.P. van der Weide. An Information System organized as Stratified Hypermedia. Technical Report, In Preparation, Department of Information Systems, University of Nijmegen, The Nether Abstract In this paper we investigate a relation between modern hypertext approaches and conventional data mod-elling techniques, such as PSM. This relation provides us with the mechanism of query by navigation, in order to facilitate the query formulation problem. lands, 1993.
Abstract-found: 1
Intro-found: 1
Reference: [BHW91] <author> P. van Bommel, A.H.M. ter Hofstede, and Th.P. van der Weide. </author> <title> Semantics and Verification of Object-Role Models. </title> <journal> Information Systems, </journal> <volume> 16(5) </volume> <pages> 471-495, </pages> <month> Oc-tober </month> <year> 1991. </year>
Reference-contexts: Before representing PSM as a stratified hyperme-dia system, we will briefly introduce both PSM and stratified hypermedia architecture. 1.1 Introduction to PSM The Predicator Set Modelling technique (PSM) [HW93] is a formal model for describing complex data structures. PSM is an extension of the Predicator Model as presented in <ref> [BHW91] </ref>. One of the key concepts in data modelling is the concept of relation type or fact type. In figure 3 the graphical representation of a binairy relation R between object types X 1 and X 2 in the NIAM style is shown. <p> I x ~ I y ` x ~ y The function u : O ! O, u is called the pater fa-milias <ref> [BHW91] </ref>. This function is similar to the top operation from lattice theory. <p> Nodes are used as units of presentation. Using b , each molecule is mapped to a unique node. According to the Conformity Rule <ref> [BHW91] </ref>, an instance of a fact type is a mapping from its predicators into values of the appropriate types. Let r : 1026; s : 10000 be an instance of fact type Budgets = , in figure 12.
Reference: [Bru93] <author> P.D. Bruza. </author> <title> Stratified Information Disclosure: A Synthesis between Information Retrieval and Hypermedia. </title> <type> PhD thesis, </type> <institution> University of Nijmegen, </institution> <year> 1993. </year>
Reference: [BW92a] <author> P. van Bommel and Th.P. van der Weide. </author> <title> Reducing the Search Space Page 19 for Conceptual Schema Transforma--tion. </title> <journal> Data & Knowledge Engineering, </journal> <volume> 4(8) </volume> <pages> 269-292, </pages> <year> 1992. </year>
Reference-contexts: The concrete level consists of all concrete object types, i.e. label types. The non concrete object types (the defoliated information structure, see <ref> [BW92a] </ref>) form the abstract level.
Reference: [BW92b] <author> P.D. Bruza and Th.P. van der Weide. </author> <title> Stratified Hypermedia Structures for Information Disclosure. </title> <journal> The Computer Journal, </journal> <volume> 35(3) </volume> <pages> 208-220, </pages> <year> 1992. </year>
Reference-contexts: I is called the information structure [HW93], I = hP; O; F; G; S; C; Gen; Spec; Base; Elti. 1.2 Introduction to a stratified hyper media architecture Stratified hypermedia architecture in its simplest form is a two level hypermedia architecture, as introduced in <ref> [BW92b] </ref>. This architecture features a descriptive level (hyperindex) of indexing information which indexes the lower level, the hyperbase. The hyperbase contains the actual information. <p> The actual structure ! i then are the linear path expressions that are possible in the actual information structure. Next the associative links (L i ) of the hyperindex layer are introduced. Traversing an associative link results in a change of context <ref> [BW92b] </ref>. The links from L i are used to handle specialisation and gen-eralisation as they occur in the actual information structure. <p> This function maps information objects (fragments, nodes, molecules) from the hyperbase onto the fragments of the hyperindex <ref> [BW92b] </ref>. The characterization function will be defined bot tom up, starting with the fragments of the F b .
Reference: [Che76] <author> P.P. Chen. </author> <title> The Entity-Relationship Model: Toward a Unified View of Data. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 1(1) </volume> <pages> 9-36, </pages> <month> March </month> <year> 1976. </year>
Reference: [FS76] <author> J.P. Fry and E.H. Sibley. </author> <title> Evolution of Data-Base Management Systems. </title> <journal> Computing Surveys, </journal> <volume> 8(1) </volume> <pages> 7-42, </pages> <year> 1976. </year>
Reference-contexts: For a description of this latter use, see [HPW92a] and [HPW92b]. The examples in this section are based on the so-called presidential database, which served as a unified example in a special issue of Computing Surveys <ref> [FS76] </ref>. The example was first enuntiated in [WBGW73]. An excerpt of the presidential database is shown in figure 7. The examples show how the system supports the formulation of queries. The process of query formulation corresponds to a search through the information system in order to fulfil some information need.
Reference: [Hof93] <author> A.H.M. ter Hofstede. </author> <title> Information Modelling in Data Intensive Domains. </title> <type> PhD thesis, </type> <institution> University of Nijmegen, </institution> <address> Ni-jmegen, The Netherlands, </address> <year> 1993. </year> <note> (To appear). </note>
Reference-contexts: Street is identified using S-name and Community. Community is identified by C-name. For more details about standard names, see [HPW92b] and <ref> [Hof93] </ref>. The presentation of power types and sequence types can be done according to mathematical conven tions. <p> According to [HW93] and <ref> [Hof93] </ref>, schema types can be defined Page 12 ' $ Commu nity ? ? ' $ (C-name) - & % Street ? ' $ (S-name) - & % House ? ' $ (H-nr) s s s s s u u f 2 f 4 p 1 p 3 p 4 p
Reference: [HPW92a] <author> A.H.M. ter Hofstede, H.A. Proper, and Th.P. van der Weide. </author> <title> Data Mod-elling in Complex Application Domains. </title> <editor> In P. Loucopoulos, editor, </editor> <booktitle> Proceedings of the Fourth International Conference CAiSE'92 on Advanced Information Systems Engineering, volume 593 of Lecture Notes in Computer Science, </booktitle> <pages> pages 364-377, </pages> <address> Manchester, United Kingdom, May 1992. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: In this paper, we concentrate on query by navigation, and therefore omit how this architecture can be helpful during the construction process of information systems. For a description of this latter use, see <ref> [HPW92a] </ref> and [HPW92b]. The examples in this section are based on the so-called presidential database, which served as a unified example in a special issue of Computing Surveys [FS76]. The example was first enuntiated in [WBGW73]. An excerpt of the presidential database is shown in figure 7.
Reference: [HPW92b] <author> A.H.M. ter Hofstede, H.A. Proper, and Th.P. van der Weide. </author> <title> Formal Definition of a Conceptual Language for the Description and Manipulation of Information Models. </title> <type> Technical Report 92/10, </type> <institution> SERC, Software Engineering Research Centre, </institution> <address> Utrecht, The Netherlands, </address> <month> July </month> <year> 1992. </year>
Reference-contexts: Formally, type relatedness is captured by a binary relation ~ on O. Two objects are type related if and only if this can be proven from the following derivation rules <ref> [HPW92b] </ref>: 1. ` x ~ x 3. u (x) = u (y) ^ y ~ z ` x ~ z 5. (fx; yg 2 G ^ Elt (x) ~ Elt (y)) ` x ~ y 7. <p> In this paper, we concentrate on query by navigation, and therefore omit how this architecture can be helpful during the construction process of information systems. For a description of this latter use, see [HPW92a] and <ref> [HPW92b] </ref>. The examples in this section are based on the so-called presidential database, which served as a unified example in a special issue of Computing Surveys [FS76]. The example was first enuntiated in [WBGW73]. An excerpt of the presidential database is shown in figure 7. <p> For example, role name being manager of corresponds to the representation of fact type Manager by deep structure sentences [NH89] of the form: hPersoni being manager of hProjecti A role name also corresponds to a connector <ref> [HPW92b] </ref> through fact type Manager. In non-binary fact types, however, connectors can not be uniquely derived from a unique predicator, as predicators in this case does not have a unique co-role. For this reason predicator names are used to uniquely identify paths. <p> In the remainder of this section , we will describe this in more detail. 3.1 Constructing the hyperindex In <ref> [HPW92b] </ref> the concept of path expression is introduced. A path expression corresponds to a path through the information structure, via predicators, beginning and ending in some object type. In this paper, we will restrict ourselves to linear paths. <p> Street is identified using S-name and Community. Community is identified by C-name. For more details about standard names, see <ref> [HPW92b] </ref> and [Hof93]. The presentation of power types and sequence types can be done according to mathematical conven tions. <p> Keywords serve as a naming mechanism for handling implicit object types and predicators. In figures 20, 21, 22, and 23 the keywords are summarised. For each keyword an arrow denotes the path associated with that key word. (For more information about keywords see <ref> [HPW92b] </ref>.) & % ' $ B & % INVOLVED IN These keywords also can be used when no predicator names are defined.
Reference: [HW93] <author> A.H.M. ter Hofstede and Th.P. van der Weide. </author> <title> Expressiveness in conceptual data modelling. </title> <journal> Data & Knowledge Engineering, </journal> <volume> 10(1) </volume> <pages> 65-100, </pages> <month> February </month> <year> 1993. </year>
Reference-contexts: Before representing PSM as a stratified hyperme-dia system, we will briefly introduce both PSM and stratified hypermedia architecture. 1.1 Introduction to PSM The Predicator Set Modelling technique (PSM) <ref> [HW93] </ref> is a formal model for describing complex data structures. PSM is an extension of the Predicator Model as presented in [BHW91]. One of the key concepts in data modelling is the concept of relation type or fact type. <p> In PSM a fact type is considered to be a set of pred icators. A relation type is therefore considered as an association between predicators rather than between object types. Fact types can also be considered as entity types, this is called objectification. <ref> [HW93] </ref> defines an information structure over a so-called label type set L as a structure consisting of the following basic components: 1. A finite set P of predicators 2. A set O of object types, L O 3. A partition F of the set P. <p> I x ~ I y ` x ~ y The function u : O ! O, u is called the pater fa-milias [BHW91]. This function is similar to the top operation from lattice theory. I is called the information structure <ref> [HW93] </ref>, I = hP; O; F; G; S; C; Gen; Spec; Base; Elti. 1.2 Introduction to a stratified hyper media architecture Stratified hypermedia architecture in its simplest form is a two level hypermedia architecture, as introduced in [BW92b]. <p> in the presentation node. * if A Gen B and the header contains B as last oc-curence, then a special entry is included where B is replaced by A The difference in assignment of the associative links (figure 17) origines from the difference in identification of specialised and generalised objects <ref> [HW93] </ref>. Sample sessions in the hyperindex At this point the basic concepts of the hyperindex layer are defined. In the remainder of this subsection some examples are given, demonstrating the mechanism of query by navigation. <p> This substitution denotes that instances of A, playing g, are actually instances of B. This substitution origines from the fact that generalised objects inherits all of their properties of its specifiers <ref> [HW93] </ref>. In specialisation, subtypes inherit their properties from its associated supertype (s) [HW93]. <p> This substitution denotes that instances of A, playing g, are actually instances of B. This substitution origines from the fact that generalised objects inherits all of their properties of its specifiers <ref> [HW93] </ref>. In specialisation, subtypes inherit their properties from its associated supertype (s) [HW93]. A path expression however is represented by the most spe-cialised name, so in the representation (B ffi p ffi f ), B is not substituted by A. 3.2 Constructing the hyperbase The translation of an instantiation of a PSM information structure into a hyperbase will be done bottom-up. <p> According to <ref> [HW93] </ref> and [Hof93], schema types can be defined Page 12 ' $ Commu nity ? ? ' $ (C-name) - & % Street ? ' $ (S-name) - & % House ? ' $ (H-nr) s s s s s u u f 2 f 4 p 1 p 3 p
Reference: [NH89] <author> G.M. Nijssen and T.A. Halpin. </author> <title> Conceptual Schema and Relational Database Design: a fact oriented approach. </title> <publisher> Prentice-Hall, </publisher> <address> Sydney, Australia, </address> <year> 1989. </year>
Reference-contexts: Rather than role names, we will use predicator names. A role name can be seen as a representation mechanism for (binary) fact types. For example, role name being manager of corresponds to the representation of fact type Manager by deep structure sentences <ref> [NH89] </ref> of the form: hPersoni being manager of hProjecti A role name also corresponds to a connector [HPW92b] through fact type Manager. In non-binary fact types, however, connectors can not be uniquely derived from a unique predicator, as predicators in this case does not have a unique co-role. <p> These grammar rules denote the structure of the fact type sentences, the so called sentence type <ref> [NH89] </ref>. For example, fact type Budgets in figure 12 has associated the following rule: hBudgetsi ! project hri has a budget of hsi dollars Note that ! 0 = `project', ! 1 = `has a budget of', while ! 2 = `dollars'.
Reference: [Sal83] <author> G. Salton. </author> <title> Introduction to Modern Information Retrieval. </title> <publisher> McGraw-Hill Book Company, </publisher> <year> 1983. </year>
Reference: [WBGW73] <author> S.E. Willner, A.E. Bandurski, W.C. Gorhan, and M.A. Wallace. </author> <title> COMRADE data management system. </title> <booktitle> In Proceedings of the AFIPS National Computer Conference, </booktitle> <pages> pages 339-345, </pages> <address> Montvale, N.J., 1973. </address> <publisher> AFIPS Press. </publisher> <pages> Page 20 </pages>
Reference-contexts: For a description of this latter use, see [HPW92a] and [HPW92b]. The examples in this section are based on the so-called presidential database, which served as a unified example in a special issue of Computing Surveys [FS76]. The example was first enuntiated in <ref> [WBGW73] </ref>. An excerpt of the presidential database is shown in figure 7. The examples show how the system supports the formulation of queries. The process of query formulation corresponds to a search through the information system in order to fulfil some information need.
References-found: 13

