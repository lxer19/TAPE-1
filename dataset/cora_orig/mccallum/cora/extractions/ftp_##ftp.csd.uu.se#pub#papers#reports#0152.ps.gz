URL: ftp://ftp.csd.uu.se/pub/papers/reports/0152.ps.gz
Refering-URL: http://www.csd.uu.se/papers/reports.html
Root-URL: 
Email: email: voronkov@csd.uu.se  
Title: Simultaneous rigid E-unification and other decision problems related to the Herbrand theorem  
Author: Andrei Voronkov 
Note: Supported by a TFR grant.  
Address: Box 311, S-751 05 Uppsala Sweden  
Affiliation: Computing Science Department Uppsala University  
Abstract: UPMAIL Technical Report No. 152 February 16, 1998 ISSN 1100-0686 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> P.B. Andrews. </author> <title> Refutations by matings. </title> <journal> IEEE Trans. Comput., </journal> <volume> 25 </volume> <pages> 801-807, </pages> <year> 1976. </year>
Reference-contexts: Some other formulations of Herbrand Skeleton, where instead of n we consider a function depending on n and ', are discussed in [40, 42]. We do not discuss the complexity of Herbrand Skeleton, again for a discussion see [42]. 3.3 Matrix Instantiation In the method of matings <ref> [1] </ref> or the connection method [4] provability of formulas is defined in terms of matrices. We call these methods matrix-based methods. A matrix is defined by induction as follows. 1. Any literal is a matrix; 6 3.3 Matrix Instantiation 2.
Reference: [2] <author> M. Baaz. </author> <title> Note on the existence of most general semi-unifiers. In Arithmetic, Proof Theory and Computation Complexity, </title> <booktitle> volume 23 of Oxford Logic Guides, </booktitle> <pages> pages 20-29. </pages> <publisher> Oxford University Press, </publisher> <year> 1993. </year>
Reference-contexts: Signatures with unary function symbols are considered in Section 5. 4.1 Undecidability Simultaneous Rigid E-unification witnessed several faulty proofs of the decidability in 1988-1994, until it was proved undecidable in [10] by reduction of so-called monadic semi-unification <ref> [2] </ref>. The technique used in the proof is, in fact, an encoding of Second-Order Unification [18].
Reference: [3] <author> A.P. Beltyukov. </author> <title> Decidability of the universal theory of natural numbers with addition and divisibility (in Russian). </title> <journal> Zapiski Nauchnyh Seminarov LOMI, </journal> <volume> 60 </volume> <pages> 15-28, </pages> <year> 1976. </year> <title> English translation in: </title> <journal> Journal of Soviet Mathematics. </journal>
Reference-contexts: In [9] a reduction of SREU ( ; 1; 0) to the Diophantine problem for addition and divisibility is given. The latter problem is known to be decidable <ref> [3, 26, 24] </ref>.
Reference: [4] <author> W. Bibel. </author> <title> On matrices with connections. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 28(4) </volume> <pages> 633-645, </pages> <year> 1981. </year>
Reference-contexts: We do not discuss the complexity of Herbrand Skeleton, again for a discussion see [42]. 3.3 Matrix Instantiation In the method of matings [1] or the connection method <ref> [4] </ref> provability of formulas is defined in terms of matrices. We call these methods matrix-based methods. A matrix is defined by induction as follows. 1. Any literal is a matrix; 6 3.3 Matrix Instantiation 2.
Reference: [5] <author> E. Borger, E. Gradel, and Y. Gurevich. </author> <title> The Classical Decision Problem. </title> <publisher> Springer Verlag, </publisher> <year> 1997. </year>
Reference-contexts: For this reason, the decision problem for prenex formulas of classical logic has been intensively studied and the complete classification of prenex fragments in terms of the signature, quantifier prefix and the presence of equality is known <ref> [5] </ref>. In intuitionistic logic it is not the case, so the value of prenex formulas is not evident. Formally, we study the following problem.

Reference: [7] <author> A. Degtyarev, Yu. Gurevich, P. Narendran, M. Veanes, and A. Voronkov. </author> <title> The decidability of simultaneous rigid E-unification with one variable. In Rewriting Techniques and Applications, </title> <booktitle> RTA'98, </booktitle> <pages> page 15, </pages> <year> 1998. </year>
Reference-contexts: For the one-variable case, the following result is known <ref> [6, 7] </ref>: Theorem 6.1 SREU ( ; ; 1) with one variable is DEXPTIME-complete. 2 30 7 Conclusion The proof of [6] is based on polynomial-time reductions between Simultaneous Rigid E-unification and the intersection nonemptiness problem for bottom-up tree automata [33].
Reference: [8] <author> A. Degtyarev, Yu. Matiyasevich, and A. Voronkov. </author> <title> Simultaneous rigid E-unification is not so simple. </title> <type> UPMAIL Technical Report 104, </type> <institution> Uppsala University, Computing Science Department, </institution> <month> April </month> <year> 1995. </year>
Reference-contexts: This section discusses results on Monadic SREU. Proofs of results about monadic SREU use the technique of finite automata and word equations. The connection between Monadic SREU and word equations was noted already in <ref> [8] </ref>. The results explained in this section have been published in [9, 20, 21]. Terms as words. We consider signatures F [ C where F is finite set of unary function symbols and C is a finite set of constants.
Reference: [9] <author> A. Degtyarev, Yu. Matiyasevich, and A. Voronkov. </author> <title> Simultaneous rigid E-unification and related algorithmic problems. </title> <booktitle> In Eleventh Annual IEEE Symposium on Logic in Computer Science (LICS'96), </booktitle> <pages> pages 494-502, </pages> <address> New Brunswick, NJ, July 1996. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: For ( ; 2; 0) use the unary encoding and the technique of the proof of Theorem 3.18. For ( 2; 0; 0), the problem is PSPACE-complete. The sketch of the proof is given in <ref> [9] </ref>, and is based in "guessing" the values of all variables among a finite number of constants. 2 4 Undecidability results Summarizing the results of Section 3, we obtain the following. Theorem 4.1 Let be a signature ( ; ; 1). The following conditions are equivalent. 1. <p> This section discusses results on Monadic SREU. Proofs of results about monadic SREU use the technique of finite automata and word equations. The connection between Monadic SREU and word equations was noted already in [8]. The results explained in this section have been published in <ref> [9, 20, 21] </ref>. Terms as words. We consider signatures F [ C where F is finite set of unary function symbols and C is a finite set of constants. <p> is a power of another word V : Lemma 5.3 a aV ` a aU holds if and only if U = V n for some natural number n. 2 Lemmas 5.1, 5.2 and 5.3 are important tools for studying monadic SREU. 5.2 Results Here we cite main results of <ref> [9, 20, 21] </ref>. Some of these results have nontrivial proofs, so we describe only the main ideas of the proofs. By Lemma 5.1, we can describe any regular set as a set of solutions to a rigid equation with a ground left-hand side and one variable. <p> It is easy to see that SREU ( 2; 0; 0) is NP-complete. What happens in the case of signatures ( ; 1; 0), i.e., signatures with one unary function symbol? This question is investigated in <ref> [9] </ref>. Assume that s is the only function symbol of such a signature. Then a word s n represents the natural number n. <p> It follows from Lemmas 5.2 and 5.3 that Monadic SREU with one unary symbol can represent the so-called Diophantine problem for addition and divisibility, i.e., the problem of solvability of expressions using 0; 1; + and j over natural numbers. In <ref> [9] </ref> a reduction of SREU ( ; 1; 0) to the Diophantine problem for addition and divisibility is given. The latter problem is known to be decidable [3, 26, 24].
Reference: [10] <author> A. Degtyarev and A. Voronkov. </author> <title> Simultaneous rigid E-unification is undecidable. </title> <type> UPMAIL Technical Report 105, </type> <institution> Uppsala University, Computing Science Department, </institution> <month> May </month> <year> 1995. </year>
Reference-contexts: Signatures with unary function symbols are considered in Section 5. 4.1 Undecidability Simultaneous Rigid E-unification witnessed several faulty proofs of the decidability in 1988-1994, until it was proved undecidable in <ref> [10] </ref> by reduction of so-called monadic semi-unification [2]. The technique used in the proof is, in fact, an encoding of Second-Order Unification [18].
Reference: [11] <author> A. Degtyarev and A. Voronkov. </author> <title> Decidability problems for the prenex fragment of intuitionistic logic. </title> <booktitle> In Eleventh Annual IEEE Symposium on Logic in Computer Science (LICS'96), </booktitle> <pages> pages 503-512, </pages> <address> New Brunswick, NJ, July 1996. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: Theorem 3.19 PI () and EI () are PSPACE-complete for every signature . 2 Since intuitionistic propositional logic is already PSPACE-complete, this results also holds for subsets of PI () characterized by a restricted quantifier prefix. For intuitionistic logic with equality, some results were sketched in <ref> [11] </ref>, but without complete proofs. Here we give proofs of these results. Our first aim is to introduce a cut-free sequent calculus LJ 2 for intuitionistic logic in which all propositional derivations have a finite (and polynomial-size) depth. <p> Proof. Since EI () is a special case of PI () , it is enough to only show a reduction of PI () to EI () . The proof is based on a "skolemization" property of intuitionistic logic with equality <ref> [11] </ref>. Let ' be a prenex sentence Q 1 x 1 : : : Q n x n in the signature . Let be the signature of ' and c 1 ; c 2 ; : : : ; c n be constants of not occurring in .
Reference: [12] <author> A. Degtyarev and A. Voronkov. </author> <title> The undecidability of simultaneous rigid E-unification. </title> <booktitle> Theoretical Computer Science, </booktitle> <address> 166(1-2):291-300, </address> <year> 1996. </year>
Reference-contexts: The technique used in the proof is, in fact, an encoding of Second-Order Unification [18]. Other undecidability proofs have been published as follows: * using reduction of second-order unification <ref> [12] </ref>; * using reduction of Hilbert's Tenth problem [37, 36]; * using reduction of the Post Correspondence Problem [31]; * using an encoding of Turing machines [34]. The undecidability results can be formulated as follows. Theorem 4.2 SREU ( ; ; 1) is undecidable. <p> Theorem 4.2 SREU ( ; ; 1) is undecidable. Hence, problems 1-7 for signatures ( ; ; 1) are undecidable. 2 Second-order unification Since the proofs are published elsewhere, we do not reproduce them here. We shall only demonstrate ideas of the simplest proof <ref> [12] </ref> since this proof shows close connections between Simultaneous Rigid E-unification and Second-Order Unification 4 , the latter proved undecidable in [18]. We illustrate the reduction of [12] by an example. <p> We shall only demonstrate ideas of the simplest proof <ref> [12] </ref> since this proof shows close connections between Simultaneous Rigid E-unification and Second-Order Unification 4 , the latter proved undecidable in [18]. We illustrate the reduction of [12] by an example.
Reference: [13] <author> C. Dwork, P.C. Kanellakis, and J.C. Mitchell. </author> <title> On the sequential nature of unification. </title> <journal> Journal of Logic Programming, </journal> <volume> 1 </volume> <pages> 35-50, </pages> <year> 1984. </year>
Reference-contexts: observations: 1. all splits can be found by a nondeterministic polynomial-time algorithm; 2. the problem of checking, given a split S, whether ' S is a tautology, is co-NP-complete; 3. the problem of finding the appropriate substitution is polynomial-time (it is the so-called simultaneous unification problem known to be P-complete <ref> [13, 44, 14] </ref>). It remains to prove that Formula Instantiation is p 2 -hard. We prove this for the signature with two constants 0; 1. We use reduction of the QBF 2 problem known to be p 2 -complete, see e.g. [30]. This problem can be formulated as follows.
Reference: [14] <author> C. Dwork, P.C. Kanellakis, and L.J. Stockmeyer. </author> <title> Parallel algorithms for term matching. </title> <journal> SIAM Journal of Computing, </journal> <volume> 17(4) </volume> <pages> 711-731, </pages> <year> 1988. </year>
Reference-contexts: observations: 1. all splits can be found by a nondeterministic polynomial-time algorithm; 2. the problem of checking, given a split S, whether ' S is a tautology, is co-NP-complete; 3. the problem of finding the appropriate substitution is polynomial-time (it is the so-called simultaneous unification problem known to be P-complete <ref> [13, 44, 14] </ref>). It remains to prove that Formula Instantiation is p 2 -hard. We prove this for the signature with two constants 0; 1. We use reduction of the QBF 2 problem known to be p 2 -complete, see e.g. [30]. This problem can be formulated as follows.
Reference: [15] <author> R. Dyckhoff. </author> <title> Contraction-free sequent calculi for intuitionistic logic. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 57 </volume> <pages> 795-807, </pages> <year> 1992. </year>
Reference-contexts: Evidently, 0 is regular. Conversely, suppose S has a regular proof in LJ 1 . By Lemma 3.23, S is provable in LJ . 2 The calculus LJ 2 is given in Figure 5. Similar calculi are studied in <ref> [15, 23] </ref>.
Reference: [16] <author> C.F. Fermuller and A. Leitsch. </author> <title> Decision procedures and model building in equational clause logic. </title> <journal> Logic Journal of the IGPL, </journal> <note> 1998. To appear. </note>
Reference-contexts: The restriction on left-hand sides to be ground corresponds to the so-called ground-negative formulas, introduced in <ref> [16] </ref> and independently in [41]. A formula ' is called ground-negative if all negative occurrences of atomic subformulas in ' are ground. Article [41] proves that the class of ground-negative formulas is decidable and p 2 -complete (with or without equality, and even in the signature with two constants).
Reference: [17] <author> J.H. Gallier, S. Raatz, and W. Snyder. </author> <title> Theorem proving using rigid E-unification: Equational matings. </title> <booktitle> In Proc. IEEE Conference on Logic in Computer Science (LICS), </booktitle> <pages> pages 338-346. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1987. </year>
Reference-contexts: This decision problem was introduced in <ref> [17] </ref> as simultaneous rigid E-unification, or SREU for short.
Reference: [18] <author> W.D. Goldfarb. </author> <title> The undecidability of the second-order unification problem. </title> <journal> Theoretical Computer Science, </journal> <volume> 13 </volume> <pages> 225-230, </pages> <year> 1981. </year>
Reference-contexts: The technique used in the proof is, in fact, an encoding of Second-Order Unification <ref> [18] </ref>. Other undecidability proofs have been published as follows: * using reduction of second-order unification [12]; * using reduction of Hilbert's Tenth problem [37, 36]; * using reduction of the Post Correspondence Problem [31]; * using an encoding of Turing machines [34]. The undecidability results can be formulated as follows. <p> We shall only demonstrate ideas of the simplest proof [12] since this proof shows close connections between Simultaneous Rigid E-unification and Second-Order Unification 4 , the latter proved undecidable in <ref> [18] </ref>. We illustrate the reduction of [12] by an example.
Reference: [19] <author> Yu. Gurevich and M. Veanes. </author> <title> Some undecidable problems related to the Herbrand theorem. </title> <type> UPMAIL Technical Report 138, </type> <institution> Uppsala University, Computing Science Department, </institution> <month> March </month> <year> 1997. </year>
Reference-contexts: The Herbrand Skeleton problem has been defined in [36] as a series of problems: for any fixed n we have the Herbrand Skeleton (n) problem whose instances are (n; '). [36] prove that for all n the problem Herbrand Skeleton (n) is undecidable for logic with equality. <ref> [19] </ref> show that there is a general method of reducing the Herbrand Skeleton (n) problems to simultaneous rigid E-unification, and prove stronger undecidability results. Some other formulations of Herbrand Skeleton, where instead of n we consider a function depending on n and ', are discussed in [40, 42].
Reference: [20] <author> Yu. Gurevich and A. Voronkov. </author> <title> Monadic simultaneous rigid E-unification and related problems. </title> <type> UPMAIL Technical Report 137, </type> <institution> Uppsala University, Computing Science Department, </institution> <month> February </month> <year> 1997. </year> <note> Revised June 20, 1997. To appear in Theoretical Computer Science. REFERENCES 33 </note>
Reference-contexts: This section discusses results on Monadic SREU. Proofs of results about monadic SREU use the technique of finite automata and word equations. The connection between Monadic SREU and word equations was noted already in [8]. The results explained in this section have been published in <ref> [9, 20, 21] </ref>. Terms as words. We consider signatures F [ C where F is finite set of unary function symbols and C is a finite set of constants. <p> is a power of another word V : Lemma 5.3 a aV ` a aU holds if and only if U = V n for some natural number n. 2 Lemmas 5.1, 5.2 and 5.3 are important tools for studying monadic SREU. 5.2 Results Here we cite main results of <ref> [9, 20, 21] </ref>. Some of these results have nontrivial proofs, so we describe only the main ideas of the proofs. By Lemma 5.1, we can describe any regular set as a set of solutions to a rigid equation with a ground left-hand side and one variable. <p> It is also not hard to represent solutions to such equations as regular sets. This implies that monadic SREU with ground left-hand sides and one variable is polynomial-time equivalent to the intersection nonemptiness problem for DFA. This proves the following <ref> [20] </ref>: Theorem 5.4 Monadic SREU with one variable and ground left sides is PSPACE-complete. 2 By more complex arguments, [20] also proves the following. <p> This implies that monadic SREU with ground left-hand sides and one variable is polynomial-time equivalent to the intersection nonemptiness problem for DFA. This proves the following <ref> [20] </ref>: Theorem 5.4 Monadic SREU with one variable and ground left sides is PSPACE-complete. 2 By more complex arguments, [20] also proves the following. <p> Then one can use Theorem 5.4. As we have mentioned, [31] proves the undecidability of SREU with ground left sides. The corresponding monadic case is shown to be decidable <ref> [20] </ref>: Theorem 5.6 Monadic SREU with ground left sides is decidable. 2 Andrei Voronkov. SREU and other decision problems : : : 29 The idea of the proof is the following. <p> Then the result of [32] on the decidability of word equations with regular constraints is used. As for the general case, the decidability remains an open problem. <ref> [20] </ref> proves polynomial-time equivalence of monadic SREU to a word problem described below. Denote by W a set of pairs of words on F . <p> The ideal membership problem is the problem of solvability of ideal membership questions. <ref> [20] </ref> proves Theorem 5.7 Monadic SREU id decidable if and only if so is the ideal membership problem. 2 5.3 One unary function symbol By Theorem 3.18, monadic SREU is polynomial-time equivalent to SREU (1; 2; 0). It is easy to see that SREU ( 2; 0; 0) is NP-complete.
Reference: [21] <author> Yu. Gurevich and A. Voronkov. </author> <title> Monadic simultaneous rigid E-unification and related problems. </title> <editor> In P. Degano, R. Corrieri, and A. Marchetti-Spaccamella, editors, </editor> <booktitle> Automata, Languages and Programming. 24th International Colloquium, ICALP'97, volume 1256 of Lecture Notes in Computer Science, </booktitle> <pages> pages 154-165, </pages> <address> Bologna, Italy, </address> <month> July </month> <year> 1997. </year>
Reference-contexts: This section discusses results on Monadic SREU. Proofs of results about monadic SREU use the technique of finite automata and word equations. The connection between Monadic SREU and word equations was noted already in [8]. The results explained in this section have been published in <ref> [9, 20, 21] </ref>. Terms as words. We consider signatures F [ C where F is finite set of unary function symbols and C is a finite set of constants. <p> is a power of another word V : Lemma 5.3 a aV ` a aU holds if and only if U = V n for some natural number n. 2 Lemmas 5.1, 5.2 and 5.3 are important tools for studying monadic SREU. 5.2 Results Here we cite main results of <ref> [9, 20, 21] </ref>. Some of these results have nontrivial proofs, so we describe only the main ideas of the proofs. By Lemma 5.1, we can describe any regular set as a set of solutions to a rigid equation with a ground left-hand side and one variable.
Reference: [22] <author> J. </author> <title> Herbrand. Logical Writings. </title> <publisher> Harvard University Press, </publisher> <year> 1972. </year>
Reference-contexts: For such formulas, provability is characterized by Herbrand's theorem. Theorem 3.1 (Herbrand <ref> [22] </ref>) A sentence 9x'(x), where '(x) is quantifier-free, is provable if and only if so is a particular disjunction '(t 1 ) _ : : : _ '(t n ).
Reference: [23] <author> J. Hudelmaier. </author> <title> An O(n log n)-space decision procedure for intuitionistic propositional logic. </title> <journal> Journal of Logic and Computation, </journal> <volume> 3(1) </volume> <pages> 63-75, </pages> <year> 1993. </year>
Reference-contexts: Evidently, 0 is regular. Conversely, suppose S has a regular proof in LJ 1 . By Lemma 3.23, S is provable in LJ . 2 The calculus LJ 2 is given in Figure 5. Similar calculi are studied in <ref> [15, 23] </ref>.
Reference: [24] <author> L. Lipshitz. </author> <title> The Diophantine problem for addition and divisibility. </title> <journal> Transactions of the American Mathematical Society, </journal> <volume> 235 </volume> <pages> 271-283, </pages> <month> January </month> <year> 1978. </year>
Reference-contexts: In [9] a reduction of SREU ( ; 1; 0) to the Diophantine problem for addition and divisibility is given. The latter problem is known to be decidable <ref> [3, 26, 24] </ref>.
Reference: [25] <author> L. Lipshitz. </author> <title> Some remarks on the Diophantine problem for addition and divisibility. </title> <journal> Bull. Soc. Math. Belg. Ser. B, </journal> <volume> 33(1) </volume> <pages> 41-52, </pages> <year> 1981. </year>
Reference-contexts: The latter problem is known to be decidable [3, 26, 24]. This implies Theorem 5.8 SREU ( ; 1; 0) is decidable. 2 The precise complexity of SREU ( ; 1; 0) is not known, as well as the precise complexity of the Diophantine problem for addition and divisibility <ref> [25] </ref>. 6 Another decidable fragment Simultaneous Rigid E-unification with two variables is undecidable.
Reference: [26] <author> V.I. Mart'janov. </author> <title> Universal extended theories of integers. </title> <journal> Algebra i Logika, </journal> <volume> 16(5) </volume> <pages> 588-602, </pages> <year> 1977. </year>
Reference-contexts: In [9] a reduction of SREU ( ; 1; 0) to the Diophantine problem for addition and divisibility is given. The latter problem is known to be decidable <ref> [3, 26, 24] </ref>.
Reference: [27] <author> G.E. Mints. </author> <title> Herbrand theorem (in Russian). In A.V. </title> <editor> Idelson and G.E. Mints, editors, </editor> <booktitle> Mathematical Theory of Logical Inference, </booktitle> <pages> pages 273-275. </pages> <publisher> Nauka, </publisher> <address> Moscow, </address> <year> 1967. </year>
Reference-contexts: The latter calculus (at least without equality rules) is a standard multi-succedent version of intuitionistic sequent calculus. Though LJ is introduced as a calculus without cut rules, admissibility of cut can be proved by standard syntactic proofs of cut-eliminations, for example as in <ref> [28, 27] </ref>. We call inessential the rules ( l ), ( r ), (), (Ax) and (?), and essential all other rules. We call an equality derivation any derivation consisting of only applications of inessential rules and an essential derivation any derivation consisting of only applications of essential rules.
Reference: [28] <author> G.E. Mints. </author> <title> The Herbrand theorem for the predicate calculus with equality and function symbols. </title> <journal> Soviet Mathematical Doklady, </journal> (2):273-275, 1969. 
Reference-contexts: The latter calculus (at least without equality rules) is a standard multi-succedent version of intuitionistic sequent calculus. Though LJ is introduced as a calculus without cut rules, admissibility of cut can be proved by standard syntactic proofs of cut-eliminations, for example as in <ref> [28, 27] </ref>. We call inessential the rules ( l ), ( r ), (), (Ax) and (?), and essential all other rules. We call an equality derivation any derivation consisting of only applications of inessential rules and an essential derivation any derivation consisting of only applications of essential rules.
Reference: [29] <author> V.P. Orevkov. </author> <title> A specialized form of derivation in Gentzen calculi and its applications (in Russian). </title> <journal> Zapiski Nauchnyh Seminarov LOMI, </journal> <volume> 32 </volume> <pages> 110-118, </pages> <year> 1974. </year>
Reference-contexts: Figure 4: Calculus LJ Andrei Voronkov. SREU and other decision problems : : : 17 The proof is based on "down-permutability" of any inference with inferences by ( l ) and ( r ) and may be found in <ref> [29] </ref> or [43]. For finite multisets ; 0 we write _ 0 to denote that 0 can be obtained from by adding zero or more elements. Let S 1 = 1 ! 1 and S 2 = 2 ! 2 be sequents.
Reference: [30] <author> C.H. Papadimitriou. </author> <title> Computational Complexity. </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: It remains to prove that Formula Instantiation is p 2 -hard. We prove this for the signature with two constants 0; 1. We use reduction of the QBF 2 problem known to be p 2 -complete, see e.g. <ref> [30] </ref>. This problem can be formulated as follows. Consider the algebra 2 with two elements 0; 1 in the signature with two constants 0; 1 representing these elements.
Reference: [31] <author> D.A. Plaisted. </author> <title> Special cases and substitutes for rigid E-unification. </title> <type> Technical Report MPI-I-95-2-010, </type> <institution> Max-Planck-Institut fur Informatik, </institution> <month> November </month> <year> 1995. </year>
Reference-contexts: The technique used in the proof is, in fact, an encoding of Second-Order Unification [18]. Other undecidability proofs have been published as follows: * using reduction of second-order unification [12]; * using reduction of Hilbert's Tenth problem [37, 36]; * using reduction of the Post Correspondence Problem <ref> [31] </ref>; * using an encoding of Turing machines [34]. The undecidability results can be formulated as follows. Theorem 4.2 SREU ( ; ; 1) is undecidable. <p> z a; Compare the following two solutions of this system with (10): [x 7! f (c 2 ; a; c 1 ); y 7! b; z 7! b]; This technique can be generalized to encode arbitrary instances of Second-Order Unification. 4.2 Undecidable fragment A stronger undecidability results is proved in <ref> [31] </ref>: Theorem 4.4 Simultaneous rigid E-unification with ground left sides is undecidable. 2 The technique of [31] had later been simplified and used in [34, 35] to prove an even stronger result: Andrei Voronkov. <p> 2 ; a; c 1 ); y 7! b; z 7! b]; This technique can be generalized to encode arbitrary instances of Second-Order Unification. 4.2 Undecidable fragment A stronger undecidability results is proved in <ref> [31] </ref>: Theorem 4.4 Simultaneous rigid E-unification with ground left sides is undecidable. 2 The technique of [31] had later been simplified and used in [34, 35] to prove an even stronger result: Andrei Voronkov. <p> A formula ' is called ground-negative if all negative occurrences of atomic subformulas in ' are ground. Article [41] proves that the class of ground-negative formulas is decidable and p 2 -complete (with or without equality, and even in the signature with two constants). Surprisingly, the results of <ref> [31, 34] </ref> imply the following. <p> Then one can use Theorem 5.4. As we have mentioned, <ref> [31] </ref> proves the undecidability of SREU with ground left sides. The corresponding monadic case is shown to be decidable [20]: Theorem 5.6 Monadic SREU with ground left sides is decidable. 2 Andrei Voronkov. SREU and other decision problems : : : 29 The idea of the proof is the following.
Reference: [32] <author> K.U. Schulz. </author> <title> Makanin's algorithm: Two improvements and a generalization. </title> <editor> In K.U. Schulz, editor, </editor> <booktitle> Proceedings of the First International Workshop on Word Equations and Related Topics, Tubingen, number 572 in Lecture Notes in Computer Science, </booktitle> <year> 1990. </year>
Reference-contexts: SREU and other decision problems : : : 29 The idea of the proof is the following. It is shown that solutions to rigid equations with ground left-hand sides can be described by word equations plus restrictions that word variables belong to regular sets. Then the result of <ref> [32] </ref> on the decidability of word equations with regular constraints is used. As for the general case, the decidability remains an open problem. [20] proves polynomial-time equivalence of monadic SREU to a word problem described below. Denote by W a set of pairs of words on F .
Reference: [33] <author> M. Veanes. </author> <title> On computational complexity of basic decision problems of finite tree automata. </title> <type> UPMAIL Technical Report 126, </type> <institution> Uppsala University, Computing Science Department, </institution> <month> January </month> <year> 1996. </year>
Reference-contexts: For the one-variable case, the following result is known [6, 7]: Theorem 6.1 SREU ( ; ; 1) with one variable is DEXPTIME-complete. 2 30 7 Conclusion The proof of [6] is based on polynomial-time reductions between Simultaneous Rigid E-unification and the intersection nonemptiness problem for bottom-up tree automata <ref> [33] </ref>. This theorem implies the following consequences for other decision problems discussed in our article. Theorem 6.2 Formula Instantiation and Matrix Instantiation with one variable are decidable.
Reference: [34] <author> M. Veanes. </author> <title> On Simultaneous Rigid E-Unification. </title> <type> PhD thesis, </type> <institution> Uppsala University, </institution> <year> 1997. </year>
Reference-contexts: Other undecidability proofs have been published as follows: * using reduction of second-order unification [12]; * using reduction of Hilbert's Tenth problem [37, 36]; * using reduction of the Post Correspondence Problem [31]; * using an encoding of Turing machines <ref> [34] </ref>. The undecidability results can be formulated as follows. Theorem 4.2 SREU ( ; ; 1) is undecidable. Hence, problems 1-7 for signatures ( ; ; 1) are undecidable. 2 Second-order unification Since the proofs are published elsewhere, we do not reproduce them here. <p> b; z 7! b]; This technique can be generalized to encode arbitrary instances of Second-Order Unification. 4.2 Undecidable fragment A stronger undecidability results is proved in [31]: Theorem 4.4 Simultaneous rigid E-unification with ground left sides is undecidable. 2 The technique of [31] had later been simplified and used in <ref> [34, 35] </ref> to prove an even stronger result: Andrei Voronkov. <p> A formula ' is called ground-negative if all negative occurrences of atomic subformulas in ' are ground. Article [41] proves that the class of ground-negative formulas is decidable and p 2 -complete (with or without equality, and even in the signature with two constants). Surprisingly, the results of <ref> [31, 34] </ref> imply the following.
Reference: [35] <author> M. Veanes. </author> <title> The undecidability of simultaneous rigid E-unification with two variables. </title> <editor> In G. Gottlob, A. Leitsch, and D. Mundici, editors, </editor> <booktitle> Computational Logic and Proof Theory. 5th Kurt Godel Colloquium, KGC'97, volume 1289 of Lecture Notes in Computer Science, </booktitle> <pages> pages 305-318, </pages> <address> Vienna, Austria, </address> <year> 1997. </year>
Reference-contexts: b; z 7! b]; This technique can be generalized to encode arbitrary instances of Second-Order Unification. 4.2 Undecidable fragment A stronger undecidability results is proved in [31]: Theorem 4.4 Simultaneous rigid E-unification with ground left sides is undecidable. 2 The technique of [31] had later been simplified and used in <ref> [34, 35] </ref> to prove an even stronger result: Andrei Voronkov.
Reference: [36] <author> P.J. Voda and J. Komara. </author> <title> On Herbrand skeletons. </title> <type> Technical report, </type> <institution> Institute of Informatics, Comenius University Bratislava, </institution> <month> July </month> <year> 1995. </year>
Reference-contexts: In the sequel we shall refer to methods using this loop as tableau-like methods. Step 2 of this procedure gives rise to several decision problems. 3.2 Formula Instantiation The first relevant problem is the following. Decision problem 1 (Herbrand Skeleton <ref> [36] </ref>) Given a quantifier-free formula '(x) and a positive natural number n, do there exist term sequences t 1 ; : : : ; t n such that the formula '(t 1 ) _ : : : _ '(t n ) is provable? We denote the Herbrand Skeleton problem for a <p> The discussion of Herbrand Skeleton and Formula Instantiation for logic with equality is postponed until section 4. The Herbrand Skeleton problem has been defined in <ref> [36] </ref> as a series of problems: for any fixed n we have the Herbrand Skeleton (n) problem whose instances are (n; '). [36] prove that for all n the problem Herbrand Skeleton (n) is undecidable for logic with equality. [19] show that there is a general method of reducing the Herbrand <p> The discussion of Herbrand Skeleton and Formula Instantiation for logic with equality is postponed until section 4. The Herbrand Skeleton problem has been defined in <ref> [36] </ref> as a series of problems: for any fixed n we have the Herbrand Skeleton (n) problem whose instances are (n; '). [36] prove that for all n the problem Herbrand Skeleton (n) is undecidable for logic with equality. [19] show that there is a general method of reducing the Herbrand Skeleton (n) problems to simultaneous rigid E-unification, and prove stronger undecidability results. <p> The technique used in the proof is, in fact, an encoding of Second-Order Unification [18]. Other undecidability proofs have been published as follows: * using reduction of second-order unification [12]; * using reduction of Hilbert's Tenth problem <ref> [37, 36] </ref>; * using reduction of the Post Correspondence Problem [31]; * using an encoding of Turing machines [34]. The undecidability results can be formulated as follows. Theorem 4.2 SREU ( ; ; 1) is undecidable.
Reference: [37] <author> A. Voronkov. </author> <title> Proof search in intuitionistic logic based on constraint satisfaction. </title> <editor> In P. Miglioli, U. Moscato, D. Mundici, and M. Ornaghi, editors, </editor> <title> Theorem Proving with Analytic Tableaux and Related Methods. </title> <booktitle> 5th International Workshop, TABLEAUX '96, volume 1071 of Lecture Notes in Artificial Intelligence, </booktitle> <pages> pages 312-329, </pages> <address> Terrasini, Palermo Italy, </address> <month> May </month> <year> 1996. </year> <note> 34 REFERENCES </note>
Reference-contexts: One can define different notions of a derivation skeleton. In our case derivation skeletons are obtained from sequent-style derivations by removing all sequents (so that only names of inference rules remain), and omitting all applications of equality rules. Such skeletons and related decision problems are discussed in <ref> [38, 37] </ref> for logic without equality and in [39, 43] for intuitionistic logic with equality. We refer the reader to one of the above mentioned papers for thorough discussion and the precise definition of skeletons. Here we shall only give examples illustrating the notion of a skeleton. <p> In classical logic, the prenex fragment (i.e. the set of all provable prenex formulas) is undecidable. For intuitionistic logic without equality we have the following result proved in <ref> [38, 37] </ref>. Theorem 3.19 PI () and EI () are PSPACE-complete for every signature . 2 Since intuitionistic propositional logic is already PSPACE-complete, this results also holds for subsets of PI () characterized by a restricted quantifier prefix. <p> The technique used in the proof is, in fact, an encoding of Second-Order Unification [18]. Other undecidability proofs have been published as follows: * using reduction of second-order unification [12]; * using reduction of Hilbert's Tenth problem <ref> [37, 36] </ref>; * using reduction of the Post Correspondence Problem [31]; * using an encoding of Turing machines [34]. The undecidability results can be formulated as follows. Theorem 4.2 SREU ( ; ; 1) is undecidable.
Reference: [38] <author> A. Voronkov. </author> <title> Proof-search in intuitionistic logic based on the constraint satisfaction. </title> <type> UPMAIL Technical Report 120, </type> <institution> Uppsala University, Computing Science Department, </institution> <month> January </month> <year> 1996. </year> <month> Updated March 11, </month> <year> 1996. </year>
Reference-contexts: One can define different notions of a derivation skeleton. In our case derivation skeletons are obtained from sequent-style derivations by removing all sequents (so that only names of inference rules remain), and omitting all applications of equality rules. Such skeletons and related decision problems are discussed in <ref> [38, 37] </ref> for logic without equality and in [39, 43] for intuitionistic logic with equality. We refer the reader to one of the above mentioned papers for thorough discussion and the precise definition of skeletons. Here we shall only give examples illustrating the notion of a skeleton. <p> For logic without equality, <ref> [38] </ref> proves that Skeleton Instantiation is NP-complete. However, the proof of NP-hardness in [38] essentially uses the presence of a binary symbol in the signature. We give a new proof here, which is valid for any signature. Theorem 3.7 SI ( ; ; ) is NP-complete. Proof. <p> For logic without equality, <ref> [38] </ref> proves that Skeleton Instantiation is NP-complete. However, the proof of NP-hardness in [38] essentially uses the presence of a binary symbol in the signature. We give a new proof here, which is valid for any signature. Theorem 3.7 SI ( ; ; ) is NP-complete. Proof. For a proof of containment in NP see [38]. <p> However, the proof of NP-hardness in <ref> [38] </ref> essentially uses the presence of a binary symbol in the signature. We give a new proof here, which is valid for any signature. Theorem 3.7 SI ( ; ; ) is NP-complete. Proof. For a proof of containment in NP see [38]. The proof is not very complex, but requires the consideration of many small details. The main idea is that, given a skeleton, we can nondeter-ministically guess the principal formulas of inferences, and then to find a substitution making this skeleton a valid derivation. <p> In classical logic, the prenex fragment (i.e. the set of all provable prenex formulas) is undecidable. For intuitionistic logic without equality we have the following result proved in <ref> [38, 37] </ref>. Theorem 3.19 PI () and EI () are PSPACE-complete for every signature . 2 Since intuitionistic propositional logic is already PSPACE-complete, this results also holds for subsets of PI () characterized by a restricted quantifier prefix.
Reference: [39] <author> A. Voronkov. </author> <title> Proof search in intuitionistic logic with equality, or back to simultaneous rigid E-unification. In M.A. </title> <editor> McRobbie and J.K. Slaney, editors, </editor> <booktitle> Automated Deduction | CADE-13, volume 1104 of Lecture Notes in Computer Science, </booktitle> <pages> pages 32-46, </pages> <address> New Brunswick, NJ, USA, </address> <year> 1996. </year>
Reference-contexts: In our case derivation skeletons are obtained from sequent-style derivations by removing all sequents (so that only names of inference rules remain), and omitting all applications of equality rules. Such skeletons and related decision problems are discussed in [38, 37] for logic without equality and in <ref> [39, 43] </ref> for intuitionistic logic with equality. We refer the reader to one of the above mentioned papers for thorough discussion and the precise definition of skeletons. Here we shall only give examples illustrating the notion of a skeleton.
Reference: [40] <author> A. Voronkov. </author> <title> Strategies in rigid-variable methods. In M.E. </title> <editor> Pollack, editor, </editor> <booktitle> Proc. of the Fifteenth International Joint Conference on Artificial Intelligence (IJCAI-97), </booktitle> <volume> volume 1, </volume> <pages> pages 114-119, </pages> <address> Nagoya, Japan, </address> <month> August 23-29 </month> <year> 1997. </year>
Reference-contexts: Some other formulations of Herbrand Skeleton, where instead of n we consider a function depending on n and ', are discussed in <ref> [40, 42] </ref>. We do not discuss the complexity of Herbrand Skeleton, again for a discussion see [42]. 3.3 Matrix Instantiation In the method of matings [1] or the connection method [4] provability of formulas is defined in terms of matrices. We call these methods matrix-based methods. <p> (i) Formula Instantiation and Matrix Instantiation are undecidable for ground-negative formulas with two variables. (ii) The 99-fragment of intuitionistic logic with equality is undecidable for ground-negative formulas. (iii) Herbrand Skeleton is undecidable for ground-negative formulas. 2 The significance of these results for automated reasoning with tableau-like methods are discussed in <ref> [40, 42] </ref>. 5 The monadic case We call Monadic SREU Simultaneous Rigid E-unification in any signature ( ; 1; 0). This section discusses results on Monadic SREU. Proofs of results about monadic SREU use the technique of finite automata and word equations.
Reference: [41] <author> A. Voronkov. </author> <title> The ground-negative fragment of first-order logic is p 2 -complete. </title> <journal> Journal of Symbolic Logic, </journal> <note> 1998. To appear. </note>
Reference-contexts: The restriction on left-hand sides to be ground corresponds to the so-called ground-negative formulas, introduced in [16] and independently in <ref> [41] </ref>. A formula ' is called ground-negative if all negative occurrences of atomic subformulas in ' are ground. Article [41] proves that the class of ground-negative formulas is decidable and p 2 -complete (with or without equality, and even in the signature with two constants). <p> The restriction on left-hand sides to be ground corresponds to the so-called ground-negative formulas, introduced in [16] and independently in <ref> [41] </ref>. A formula ' is called ground-negative if all negative occurrences of atomic subformulas in ' are ground. Article [41] proves that the class of ground-negative formulas is decidable and p 2 -complete (with or without equality, and even in the signature with two constants). Surprisingly, the results of [31, 34] imply the following.
Reference: [42] <author> A. Voronkov. </author> <title> Herbrand's theorem, automated reasoning and semantic tableaux. </title> <type> UPMAIL Technical Report 151, </type> <institution> Uppsala University, Computing Science Department, </institution> <month> February </month> <year> 1998. </year>
Reference-contexts: Some other formulations of Herbrand Skeleton, where instead of n we consider a function depending on n and ', are discussed in <ref> [40, 42] </ref>. We do not discuss the complexity of Herbrand Skeleton, again for a discussion see [42]. 3.3 Matrix Instantiation In the method of matings [1] or the connection method [4] provability of formulas is defined in terms of matrices. We call these methods matrix-based methods. <p> Some other formulations of Herbrand Skeleton, where instead of n we consider a function depending on n and ', are discussed in [40, 42]. We do not discuss the complexity of Herbrand Skeleton, again for a discussion see <ref> [42] </ref>. 3.3 Matrix Instantiation In the method of matings [1] or the connection method [4] provability of formulas is defined in terms of matrices. We call these methods matrix-based methods. A matrix is defined by induction as follows. 1. Any literal is a matrix; 6 3.3 Matrix Instantiation 2. <p> (i) Formula Instantiation and Matrix Instantiation are undecidable for ground-negative formulas with two variables. (ii) The 99-fragment of intuitionistic logic with equality is undecidable for ground-negative formulas. (iii) Herbrand Skeleton is undecidable for ground-negative formulas. 2 The significance of these results for automated reasoning with tableau-like methods are discussed in <ref> [40, 42] </ref>. 5 The monadic case We call Monadic SREU Simultaneous Rigid E-unification in any signature ( ; 1; 0). This section discusses results on Monadic SREU. Proofs of results about monadic SREU use the technique of finite automata and word equations. <p> As is follows from the table, the precise complexity of some problems is also unknown. Other open problems related to the Herbrand theorem and its use in automated reasoning are discussed in <ref> [42] </ref>. Acknowledgments I thank all people who took part in the development of results explained in this paper: Anatoli Degtyarev, Yuri Gurevich, Yuri Matiyasevich, Paliath Narendran and Margus Veanes. I am also grateful to the editor of this volume Sergei Adian for his patience.
Reference: [43] <author> A. Voronkov. </author> <title> Proof-search in intuitionistic logic with equality, or back to simultaneous rigid E-unification. </title> <journal> Journal of Automated Reasoning, </journal> <note> 1998. To appear. </note>
Reference-contexts: In our case derivation skeletons are obtained from sequent-style derivations by removing all sequents (so that only names of inference rules remain), and omitting all applications of equality rules. Such skeletons and related decision problems are discussed in [38, 37] for logic without equality and in <ref> [39, 43] </ref> for intuitionistic logic with equality. We refer the reader to one of the above mentioned papers for thorough discussion and the precise definition of skeletons. Here we shall only give examples illustrating the notion of a skeleton. <p> We leave it to the reader to check that the derivation of Figure 2 is a valid proof if and only if t satisfies each clause C i . 2 As for logic with equality, the following result is proved in <ref> [43] </ref>. Theorem 3.8 SI ( ; y; z) is decidable if and only if so is FI (!; y; z) . 2 In fact, this theorem is stated in [43] for skeletons of intuitionistic derivations, but the proof works literally for classical derivations as well. 3.5 Simultaneous rigid E-unification In this <p> only if t satisfies each clause C i . 2 As for logic with equality, the following result is proved in <ref> [43] </ref>. Theorem 3.8 SI ( ; y; z) is decidable if and only if so is FI (!; y; z) . 2 In fact, this theorem is stated in [43] for skeletons of intuitionistic derivations, but the proof works literally for classical derivations as well. 3.5 Simultaneous rigid E-unification In this section we introduce a decision problem that can be considered as a combinatorial analogue of the problems we have discussed. <p> Figure 4: Calculus LJ Andrei Voronkov. SREU and other decision problems : : : 17 The proof is based on "down-permutability" of any inference with inferences by ( l ) and ( r ) and may be found in [29] or <ref> [43] </ref>. For finite multisets ; 0 we write _ 0 to denote that 0 can be obtained from by adding zero or more elements. Let S 1 = 1 ! 1 and S 2 = 2 ! 2 be sequents.
Reference: [44] <author> H. Yasuura. </author> <title> On parallel computational complexity of unification. </title> <booktitle> In Proc. of the Conference on Fifth Generation Computer Systems, </booktitle> <pages> pages 235-243. </pages> <publisher> ICOT, </publisher> <year> 1984. </year>
Reference-contexts: observations: 1. all splits can be found by a nondeterministic polynomial-time algorithm; 2. the problem of checking, given a split S, whether ' S is a tautology, is co-NP-complete; 3. the problem of finding the appropriate substitution is polynomial-time (it is the so-called simultaneous unification problem known to be P-complete <ref> [13, 44, 14] </ref>). It remains to prove that Formula Instantiation is p 2 -hard. We prove this for the signature with two constants 0; 1. We use reduction of the QBF 2 problem known to be p 2 -complete, see e.g. [30]. This problem can be formulated as follows.
References-found: 43

