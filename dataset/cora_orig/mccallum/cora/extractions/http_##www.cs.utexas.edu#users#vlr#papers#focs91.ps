URL: http://www.cs.utexas.edu/users/vlr/papers/focs91.ps
Refering-URL: http://www.cs.utexas.edu/users/vlr/pub.html
Root-URL: 
Title: A Linear Time Algorithm for Triconnectivity Augmentation (Extended Abstract)  
Author: Tsan-sheng Hsu Vijaya Ramachandran 
Address: Austin, Austin, TX 78712  
Affiliation: Department of Computer Sciences, University of Texas at  
Note: In IEEE Symp. on Foundations of Comp. Sci. (FOCS'91). Copyright IEEE  
Abstract: We consider the problem of finding a smallest set of edges whose addition triconnects an undirected graph. This is a fundamental graph-theoretic problem that has applications in designing reliable networks and fault-tolerant computing. We present a linear time sequential algorithm for the problem. This is a substantial improvement over the best previous algorithm for this problem, which runs in O(n(n + m) 2 ) time on a graph with n vertices and m edges. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Guo-Ray Cai & Yu-Geng Sun, </author> " <title> The minimum augmentation of any graph to a k-edge-connected graph," </title> <journal> Networks, </journal> <volume> Vol. 19, </volume> <year> 1989, </year> <pages> pp. 151-172. </pages>
Reference: [2] <author> Kapali P. Eswaran & R. Endre Tarjan, </author> <title> "Augmentation problems," </title> <journal> SIAM J. Comput. </journal> <volume> Vol 5, </volume> <month> December </month> <year> 1976, </year> <pages> pp. 653-665. </pages>
Reference-contexts: We refer to this problem as the smallest augmentation problem. The following results are known for solving the smallest augmentation problem on an undirected graph to satisfy a vertex connectivity requirement. Eswaran & Tarjan <ref> [2] </ref> gave a lower bound on the smallest number of edges for biconnectivity augmentation and proved that the lower bound can be achieved. Rosenthal & Goldner [16] developed a linear time sequential algorithm for finding a smallest augmentation to biconnect a graph; however, the algorithm in [16] contains an error. <p> Owing to space limitation, many proofs are omitted in this abstract. They can be found in the full paper [11]. 2 Definitions 2-block <ref> [2, 3, 16] </ref> Given an undirected graph G with a set of vertices V , let V = fV i j1 i kg be a set of subsets of V such that [ k i=1 V i = V and two vertices u and w are in the same subset if
Reference: [3] <author> S. </author> <title> Even, Graph Algorithms, </title> <publisher> Computer Science Press, </publisher> <address> Rockville, MD, </address> <year> 1979. </year>
Reference-contexts: Owing to space limitation, many proofs are omitted in this abstract. They can be found in the full paper [11]. 2 Definitions 2-block <ref> [2, 3, 16] </ref> Given an undirected graph G with a set of vertices V , let V = fV i j1 i kg be a set of subsets of V such that [ k i=1 V i = V and two vertices u and w are in the same subset if
Reference: [4] <author> Andras Frank, </author> <title> "Augmenting graphs to meet edge-connectivity requirements," </title> <booktitle> Proc. 31th Annual IEEE Symp. on Foundations of Comp. Sci., </booktitle> <year> 1990, </year> <pages> pp. 708-718. </pages>
Reference: [5] <author> H. Frank & W. Chou, </author> <title> "Connectivity considerations in the design of survivable networks," </title> <journal> IEEE Trans. on Circuit Theory, </journal> <volume> Vol. CT-17, </volume> <month> November </month> <year> 1970, </year> <pages> pp. 486-490. </pages>
Reference-contexts: 1 Introduction The problem of augmenting a graph to reach a certain connectivity requirement by adding edges has important applications in network reliability <ref> [5, 18] </ref> and fault-tolerant computing. One version of the augmentation problem is to augment the input graph to reach a given connectivity requirement by adding a smallest set of edges. We refer to this problem as the smallest augmentation problem.
Reference: [6] <author> Greg N. Frederickson & Joseph Ja'Ja', </author> <title> "Approximation algorithms for several graph augmentation problems," </title> <journal> SIAM J. Comput., </journal> <volume> Vol. 10, </volume> <month> May </month> <year> 1981, </year> <pages> pp. 270-283. </pages>
Reference: [7] <author> D. Gusfield, </author> <title> "Optimal mixed graph augmentation," </title> <journal> SIAM J. Comput., </journal> <volume> Vol. 16, </volume> <month> August </month> <year> 1987, </year> <pages> pp. 599-612. </pages>
Reference: [8] <author> D. Harel & R. E. Tarjan, </author> <title> "Fast algorithms for finding nearest common ancestors," </title> <journal> SIAM J. Comput., </journal> <volume> Vol. 13, </volume> <year> 1984, </year> <pages> pp. 338-355. </pages>
Reference: [9] <author> J. E. Hopcroft & R. E. Tarjan, </author> <title> "Dividing a graph into triconnected components," </title> <journal> SIAM J. Comput., </journal> <volume> Vol. 2, </volume> <month> September </month> <year> 1973, </year> <month> pp.135-158. </month>
Reference-contexts: We call the pairs of vertices that correspond to -vertices Tutte pairs. It is known that the number of Tutte pairs in an n-node biconnected graph is O (n) [13, 15]. &gt;From <ref> [9, 15, 20] </ref>, we know that 3-blk (H) is a tree if H is a 2-block. We call this tree a 3-block tree. We call the set of trees corresponding to 2-blocks in G the 3-block graph of G or 3-blk (G). <p> Each Tutte component that corresponds to a fi-vertex in the 3-block graph is a 3-block of G. Given a graph G with n vertices and m edges, 2-blk (G) and 3-blk (G) can be computed in O (n + m) time using procedures in <ref> [9, 15] </ref>. Examples of 3-block graphs are shown in Figures ?? & ??. The implied path in the 2-block graph Let G be an undirected graph and let u and v be two distinct vertices in G.
Reference: [10] <author> Tsan-sheng Hsu & Vijaya Ramachandran, </author> <title> "On finding a smallest augmentation to biconnect a graph," </title> <type> Tech. Rep. </type> <address> TR-91-12, U.T. Austin, </address> <year> 1991. </year>
Reference-contexts: Rosenthal & Goldner [16] developed a linear time sequential algorithm for finding a smallest augmentation to biconnect a graph; however, the algorithm in [16] contains an error. Hsu & Ramachandran <ref> [10] </ref> gave an corrected linear time sequential algorithm. An O (log 2 n) time parallel algorithm on an EREW PRAM using a linear number of processors for finding a smallest augmentation to biconnect an undi-rected graph was also given in Hsu & Ramachan-dran [10], where n is the number of vertices <p> Hsu & Ramachandran <ref> [10] </ref> gave an corrected linear time sequential algorithm. An O (log 2 n) time parallel algorithm on an EREW PRAM using a linear number of processors for finding a smallest augmentation to biconnect an undi-rected graph was also given in Hsu & Ramachan-dran [10], where n is the number of vertices in the input graph. Watanabe & Nakamura [24, 26] gave an 1 This work was supported in part by NSF Grant CCR-89-10707. <p> Then in the second stage, we triconnect the resulting biconnected graph using the smallest number of edges. We have to make sure that the total number of edges added in these two stages is minimum. It turns out that we cannot use the algorithm in Hsu & Ramachandran <ref> [10] </ref> to implement stage 1, since there exists a graph G such that any smallest augmentation for biconnecting G does not lead to a smallest augmentation for triconnecting G. An example is shown in Figure ??. <p> For a vertex v in G, let d 2 (v) be the degree of its corresponding c-vertex in 2-blk (G) if v is a cutpoint. If v is not a cutpoint, let d 2 (v) = 1. For more on properties of 2-blk (G), see <ref> [10] </ref>. An example of a graph and its 2-blk (G) is shown in Figure ??. Tutte component The Tutte components of a biconnected graph are the triconnected components defined in Tutte [20] (see also Ramachandran [15]). <p> First we give bounds on the number of massive and critical -vertices in 3-blk (G). They are similar to the bounds on the number of massive and critical c-vertices in 2-blk (G) given in <ref> [10] </ref>. Proofs in [10] can be easily modified to prove the following claim. <p> First we give bounds on the number of massive and critical -vertices in 3-blk (G). They are similar to the bounds on the number of massive and critical c-vertices in 2-blk (G) given in <ref> [10] </ref>. Proofs in [10] can be easily modified to prove the following claim. <p> The proof of this claim is similar to a proof in <ref> [10, 16] </ref>. Claim 5 Let G be an unbalanced biconnected graph with at least 4 vertices. Let s be the massive -vertex in 3-blk (G) and let ffi = d 3 (s) 1 d 2 e. There are 2ffi + 2 s-chains in 3-blk (G). <p> By using techniques similar to those described in <ref> [10] </ref> and the proof of Claim 7, algorithm aug3 can be implemented to run in O (n+m+s G ) time.
Reference: [11] <author> Tsan-sheng Hsu & Vijaya Ramachandran, </author> <title> "A linear time algorithm for triconnectivity augmentation," </title> <type> Manuscript, </type> <address> U.T. Austin, </address> <year> 1991. </year>
Reference-contexts: Owing to space limitation, many proofs are omitted in this abstract. They can be found in the full paper <ref> [11] </ref>. 2 Definitions 2-block [2, 3, 16] Given an undirected graph G with a set of vertices V , let V = fV i j1 i kg be a set of subsets of V such that [ k i=1 V i = V and two vertices u and w are in <p> Let = 2 = fs j s 2 S and 6 9c2 = 1 such that the Tutte pair represented by s contains cg. Then j= 1 j + j= 2 j 2. Proof: The proof uses 3 propositions and is given in <ref> [11] </ref>.
Reference: [12] <author> Yoji Kajitani & Shuichi Ueno, </author> <title> "The minimum augmentation of a directed tree to a k-edge-connected directed graph," </title> <journal> Networks, </journal> <volume> Vol. 16, </volume> <year> 1986, </year> <pages> pp. 181-197. </pages>
Reference: [13] <author> Arkady Kanevsky, </author> <title> "Vertex connectivity of graphs: algorithms and bounds," </title> <type> Tech. Rep. ACT-97 (Ph.D. thesis), </type> <institution> Coordinated Science lab., Univ. of Illinois, Ur-bana, </institution> <year> 1988. </year>
Reference-contexts: We call the pairs of vertices that correspond to -vertices Tutte pairs. It is known that the number of Tutte pairs in an n-node biconnected graph is O (n) <ref> [13, 15] </ref>. &gt;From [9, 15, 20], we know that 3-blk (H) is a tree if H is a 2-block. We call this tree a 3-block tree. We call the set of trees corresponding to 2-blocks in G the 3-block graph of G or 3-blk (G).
Reference: [14] <author> D. Naor, D. Gusfield & C. Martel, </author> <title> "A fast algorithm for optimally increasing the edge-connectivity," </title> <booktitle> Proc. 31th Annual IEEE Symp. on Foundations of Comp. Sci., </booktitle> <year> 1990, </year> <pages> pp. 698-707. </pages>
Reference-contexts: An example is shown in Figure ??. Note that for edge-connectivity, it is shown in <ref> [14, 22] </ref> that there exists a smallest augmentation to k-edge-connect a graph G such that it is included in a smallest augmentation to (k + 1)-edge-connect G, for an arbitrary k. Owing to space limitation, many proofs are omitted in this abstract.
Reference: [15] <author> Vijaya Ramachandran, </author> <title> "Parallel open ear decomposition with applications to graph biconnectivity and tri-connectivity," invited chapter for Synthesis of Parallel Algorithms, </title> <editor> J. H. Reif, editor, </editor> <publisher> Morgan-Kaufmann. </publisher>
Reference-contexts: For more on properties of 2-blk (G), see [10]. An example of a graph and its 2-blk (G) is shown in Figure ??. Tutte component The Tutte components of a biconnected graph are the triconnected components defined in Tutte [20] (see also Ramachandran <ref> [15] </ref>). Each Tutte component can be a single vertex, a triconnected component, a simple cycle (a polygon) or a pair of vertices with at least three edges between them (a bond). 3-block graph Given a 2-block H of G, we define the 3-block graph, 3-blk (H), as follows. <p> We call the pairs of vertices that correspond to -vertices Tutte pairs. It is known that the number of Tutte pairs in an n-node biconnected graph is O (n) <ref> [13, 15] </ref>. &gt;From [9, 15, 20], we know that 3-blk (H) is a tree if H is a 2-block. We call this tree a 3-block tree. We call the set of trees corresponding to 2-blocks in G the 3-block graph of G or 3-blk (G). <p> We call the pairs of vertices that correspond to -vertices Tutte pairs. It is known that the number of Tutte pairs in an n-node biconnected graph is O (n) [13, 15]. &gt;From <ref> [9, 15, 20] </ref>, we know that 3-blk (H) is a tree if H is a 2-block. We call this tree a 3-block tree. We call the set of trees corresponding to 2-blocks in G the 3-block graph of G or 3-blk (G). <p> Each Tutte component that corresponds to a fi-vertex in the 3-block graph is a 3-block of G. Given a graph G with n vertices and m edges, 2-blk (G) and 3-blk (G) can be computed in O (n + m) time using procedures in <ref> [9, 15] </ref>. Examples of 3-block graphs are shown in Figures ?? & ??. The implied path in the 2-block graph Let G be an undirected graph and let u and v be two distinct vertices in G.
Reference: [16] <author> Arnie Rosenthal & Anita Goldner, </author> <title> "Smallest augmentations to biconnect a graph," </title> <journal> SIAM J. Comput., </journal> <volume> Vol. 6, </volume> <month> March </month> <year> 1977, </year> <pages> pp. 55-66. </pages>
Reference-contexts: Eswaran & Tarjan [2] gave a lower bound on the smallest number of edges for biconnectivity augmentation and proved that the lower bound can be achieved. Rosenthal & Goldner <ref> [16] </ref> developed a linear time sequential algorithm for finding a smallest augmentation to biconnect a graph; however, the algorithm in [16] contains an error. Hsu & Ramachandran [10] gave an corrected linear time sequential algorithm. <p> Eswaran & Tarjan [2] gave a lower bound on the smallest number of edges for biconnectivity augmentation and proved that the lower bound can be achieved. Rosenthal & Goldner <ref> [16] </ref> developed a linear time sequential algorithm for finding a smallest augmentation to biconnect a graph; however, the algorithm in [16] contains an error. Hsu & Ramachandran [10] gave an corrected linear time sequential algorithm. <p> Owing to space limitation, many proofs are omitted in this abstract. They can be found in the full paper [11]. 2 Definitions 2-block <ref> [2, 3, 16] </ref> Given an undirected graph G with a set of vertices V , let V = fV i j1 i kg be a set of subsets of V such that [ k i=1 V i = V and two vertices u and w are in the same subset if <p> The proof of this claim is similar to a proof in <ref> [10, 16] </ref>. Claim 5 Let G be an unbalanced biconnected graph with at least 4 vertices. Let s be the massive -vertex in 3-blk (G) and let ffi = d 3 (s) 1 d 2 e. There are 2ffi + 2 s-chains in 3-blk (G). <p> Let n be the number of vertices and m be the number of edges in the input graph. Using Lemma 6 and the sorted table data structure given in <ref> [16] </ref>, we can implement algorithm aug3 in O (n + m) time. Given a set of p nodes V with a key in each node whose value is O (p), the sorted table is an array L of O (p) entries.
Reference: [17] <author> Danny Soroker, </author> <title> "Fast parallel strong orientation of mixed graphs and related augmentation problems," </title> <journal> Journal of Algorithms, </journal> <volume> 9, </volume> <year> 1988, </year> <pages> pp. 205-223. </pages>
Reference: [18] <author> Kenneth Steiglitz, Peter Weiner & D. J. Kleitman, </author> <title> "The design of minimum-cost survivable networks," </title> <journal> IEEE Trans. on Circuit Theory, </journal> <volume> Vol. CT-16, </volume> <month> Novem-ber </month> <year> 1969, </year> <pages> pp. 455-460. </pages>
Reference-contexts: 1 Introduction The problem of augmenting a graph to reach a certain connectivity requirement by adding edges has important applications in network reliability <ref> [5, 18] </ref> and fault-tolerant computing. One version of the augmentation problem is to augment the input graph to reach a given connectivity requirement by adding a smallest set of edges. We refer to this problem as the smallest augmentation problem.
Reference: [19] <author> R. E. Tarjan, </author> <title> Data Structures and Network Algorithms, </title> <publisher> SIAM Press, </publisher> <address> Philadelphia, PA, </address> <year> 1983. </year>
Reference-contexts: We now describe the algorithm. ffl The algorithm finds a smallest augmentation to tricon--nect G, where G is biconnected with 4 vertices. flg graph function aug2to3 (graph G); ffl The algorithmic notation used here is from Tarjan <ref> [19] </ref>. flg T := 3-blk (G); let l 3 (G) be the number of degree-1 vertices in T ; do l 3 (G) 2 ! let s 1 be a -vertex with the largest degree in T ; 1. if s 1 is massive ! v := s 1 ; w
Reference: [20] <author> W. T. Tutte, </author> <title> Connectivity in Graphs, </title> <institution> University of Toronto Press, </institution> <year> 1966. </year>
Reference-contexts: For more on properties of 2-blk (G), see [10]. An example of a graph and its 2-blk (G) is shown in Figure ??. Tutte component The Tutte components of a biconnected graph are the triconnected components defined in Tutte <ref> [20] </ref> (see also Ramachandran [15]). <p> We call the pairs of vertices that correspond to -vertices Tutte pairs. It is known that the number of Tutte pairs in an n-node biconnected graph is O (n) [13, 15]. &gt;From <ref> [9, 15, 20] </ref>, we know that 3-blk (H) is a tree if H is a 2-block. We call this tree a 3-block tree. We call the set of trees corresponding to 2-blocks in G the 3-block graph of G or 3-blk (G).
Reference: [21] <author> Shuichi Ueno, Yoji Kajitani & Hajime Wada, </author> <title> "Minimum augmentation of a tree to a k-edge-connected graph," </title> <journal> Networks, </journal> <volume> Vol. 18, </volume> <year> 1988, </year> <pages> pp 19-25. </pages>
Reference: [22] <author> T. Watanabe, </author> <title> "An efficient way for edge-connectivity augmentation," </title> <type> Tech. Rep. </type> <institution> ACT-76, Coordinated Science lab., Univ. of Illinois, Urbana, </institution> <year> 1987. </year>
Reference-contexts: An example is shown in Figure ??. Note that for edge-connectivity, it is shown in <ref> [14, 22] </ref> that there exists a smallest augmentation to k-edge-connect a graph G such that it is included in a smallest augmentation to (k + 1)-edge-connect G, for an arbitrary k. Owing to space limitation, many proofs are omitted in this abstract.
Reference: [23] <author> T. Watanabe, Y. Higashi & A. Nakamura, </author> <title> "Graph augmentation problems for a specified set of vertices," </title> <booktitle> Proc. first Ann. Intl. Sym. on Algorithms, </booktitle> <year> 1990, </year> <pages> pp. 378-387. </pages>
Reference: [24] <author> T. Watanabe & A. Nakamura, </author> <title> "On a smallest augmentation to triconnect a graph," </title> <type> Tech. Rep. </type> <institution> C-18, Department of Applied Mathematics, Hiroshima University, </institution> <note> Japan (1983, revised 1987). </note>
Reference-contexts: Watanabe & Nakamura <ref> [24, 26] </ref> gave an 1 This work was supported in part by NSF Grant CCR-89-10707. O (n (n + m) 2 ) time sequential algorithm for finding a smallest augmentation to triconnect a graph with n vertices and m edges.
Reference: [25] <author> T. Watanabe & A. Nakamura, </author> <title> "Edge-connectivity augmentation problems," </title> <journal> J. Comput. System Sci., </journal> <volume> 35(1987), </volume> <pages> pp. 96-144. </pages>
Reference: [26] <author> T. Watanabe & A. Nakamura, </author> <title> "3-Connectivity augmentation problems," </title> <booktitle> Proc. 1988 IEEE Intl. Sym. on Circuits and Systems, </booktitle> <year> 1988, </year> <pages> pp. 1847-1850. </pages>
Reference-contexts: Watanabe & Nakamura <ref> [24, 26] </ref> gave an 1 This work was supported in part by NSF Grant CCR-89-10707. O (n (n + m) 2 ) time sequential algorithm for finding a smallest augmentation to triconnect a graph with n vertices and m edges. <p> But this is not true for G is not biconnected (a similar claim is also given in <ref> [26] </ref>). We now state a claim about the set of all critical -vertices in 3-blk (G) for a general graph G.
Reference: [27] <author> T. Watanabe, T. Narita & A. Nakamura, </author> <title> "3-Edge-Connectivity augmentation problems," </title> <booktitle> Proc. 1989 IEEE Intl. Sym. on Circuits and Systems, </booktitle> <year> 1989, </year> <month> pp.335-338. </month>
References-found: 27

