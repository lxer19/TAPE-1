URL: http://www.cse.ogi.edu/~walpole/papers/scp.ps
Refering-URL: http://www.cse.ogi.edu/~walpole/publications.html
Root-URL: http://www.cse.ogi.edu
Email: scen@cse.ogi.edu calton@cse.ogi.edu walpole@cse.ogi.edu  
Title: Flow and Congestion Control for Internet Media Streaming Applications  
Author: Shanwei Cen Calton Pu Jonathan Walpole 
Affiliation: Department of Computer Science and Engineering Oregon Graduate Institute of Science and Technology  
Abstract: This paper proposes a new flow and congestion control scheme, SCP (Streaming Control Protocol), for real-time streaming of continuous multimedia data across the Internet. The design of SCP arose from our long-time experience in building and using an adaptive real-time streaming video player. SCP addresses two issues associated with real-time streaming. First, it uses a congestion control policy that allows it to fairly share network bandwidth with both TCP and other SCP streams. Second, it improves smoothness in streaming and ensures low, predictable latency. This distinguishes it from TCP's jittery steady-state congestion avoidance policy that is based on linear growth and one-half rate reduction. In this paper, we present a description and analysis of SCP, and an evaluation using actual Internet-based experiments. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Berners-Lee, T., Fielding, R., and Nielsen, H. </author> <title> Hypertext transfer protocol - HTTP/1.0. Internet RFC 1945, </title> <month> May </month> <year> 1996. </year>
Reference-contexts: Consequently, such mecha 1 nisms must operate in harmony with TCP [9], which is the base protocol for the currently dominant HTTP <ref> [1] </ref> and FTP [13] traffic. They must ensure that multiple streaming sessions fairly share the network between themselves and with other non-streaming traffic. Finally, they should attempt to minimize latency and maximize the smoothness of the streaming data.
Reference: [2] <author> Busse, I., Deffner, B., and Schulzrinne, H. </author> <title> Dynamic QoS control of multimedia applications based on RTP. </title> <booktitle> Computer Communications 19 (Jan-uary 1996), </booktitle> <pages> 49-58. </pages>
Reference-contexts: The goal is to maintain the stream quality metrics such as packet loss ratio at a controlled level. Rate-based feedback can be found in the Berkeley MPEG player [15] and the Vosaic player [5]. Rate-based flow control based on RTP [16] as proposed by Busse and Schulzrinne <ref> [2] </ref> works with multicast as well as unicast streaming applications. While rate-based feedback works well most of the time, it has the inherent danger of overflowing the network buffers, since the metric being directly controlled is the data rate instead of the amount of buffering inside the network. <p> We have observed virtually no packet loss for connections between the Ore-gon Graduate Institute (OGI) and the Georgia Institute of Technology during quiet evenings and weekends, but more than 10% during rush hours. For example, Busse and Schulzrinne proposed fixed packet drop rate thresholds <ref> [2] </ref>, such as 2% for data rate increase, and 4% for decrease. These thresholds would make a streaming session more aggressive than TCP during quiet hours, and prevent the streaming sessions from sending any data during rush hours.
Reference: [3] <author> Cen, S. </author> <title> A Software Feedback Toolkit and Its Applications in Adaptive Multimedia Systems. </title> <type> PhD thesis, </type> <institution> Oregon Graduate Institute of Science and Technology, </institution> <month> July </month> <year> 1997. </year> <title> Internal Document, </title> <institution> Department of 13 Computer Science and Technology, Oregon Graduate Institute of Science and Technology. </institution>
Reference-contexts: 1 = E 2 , we have ^r 1 = ^r 2 = ^r l 2 , indicating that the two sessions split the network bandwidth evenly. 5 Implementation of SCP SCP has been implemented as a layer on top of UDP, based on a toolkit for developing adaptive systems <ref> [3] </ref>. This SCP implementation has also been incorporated into the OGI adaptive streaming video player [4, 3]. In this section, we briefly discuss the parameter estimators and various implementation issues. More details may be found in [3]. 5.1 Estimation of the Parameters Base RTT ^ T brtt , average RTT ^ <p> This SCP implementation has also been incorporated into the OGI adaptive streaming video player <ref> [4, 3] </ref>. In this section, we briefly discuss the parameter estimators and various implementation issues. <p> a layer on top of UDP, based on a toolkit for developing adaptive systems <ref> [3] </ref>. This SCP implementation has also been incorporated into the OGI adaptive streaming video player [4, 3]. In this section, we briefly discuss the parameter estimators and various implementation issues. More details may be found in [3]. 5.1 Estimation of the Parameters Base RTT ^ T brtt , average RTT ^ T rtt , RTT standard deviation ^ D rtt , and timer duration ^ rto are estimated based on the history of the raw RTT measurements of the current session. ^ T brtt is estimated as <p> SCP streams are also able to share the network bandwidth with TCP streams across the same network links. These properties of SCP makes it a promising protocol for use with best-effort, high-quality, real-time multimedia streaming across the Internet. SCP has been incorporated into the OGI adaptive streaming video player <ref> [3] </ref>. Based on the available network bandwidth discovered by SCP, the player adapts the video presentation quality in multiple dimensions, in cluding spatial resolution, frame rate, end-end latency, etc. The experimental results in [4] show the robustness and adaptability of the streaming player.
Reference: [4] <author> Cen, S., Pu, C., Staehli, R., Cowan, C., and Walpole, J. </author> <title> A distributed real-time MPEG video audio player. </title> <booktitle> NOSSDAV'95, Lecture Notes in Computer Science 1018 (1995), </booktitle> <pages> 151-162. </pages>
Reference-contexts: 1 Introduction The real-time distribution of continuous audio and video data via streaming multimedia applications accounts for a significant, and expanding, portion of the Internet traffic. Many research prototype media players have been produced, including U.C. Berkeley's MPEG player [15], OGI's distributed video player <ref> [4] </ref>, the Vosaic player [5], and LBL's vic [11]. Over the past year, many commercial streaming media players have also been released, such as Netscape streaming video plug-ins [12], RealAudio [14], and Vxtreme [17]. <p> This SCP implementation has also been incorporated into the OGI adaptive streaming video player <ref> [4, 3] </ref>. In this section, we briefly discuss the parameter estimators and various implementation issues. <p> SCP has been incorporated into the OGI adaptive streaming video player [3]. Based on the available network bandwidth discovered by SCP, the player adapts the video presentation quality in multiple dimensions, in cluding spatial resolution, frame rate, end-end latency, etc. The experimental results in <ref> [4] </ref> show the robustness and adaptability of the streaming player.
Reference: [5] <author> Chen, Z., Tan, S.-M., Campbell, R. H., and Li, Y. </author> <title> Real time video and audio in the World Wide Web. </title> <booktitle> In Fourth International World Wide Web Conference (Boston, </booktitle> <address> Massachusetts, </address> <month> December </month> <year> 1995). </year>
Reference-contexts: 1 Introduction The real-time distribution of continuous audio and video data via streaming multimedia applications accounts for a significant, and expanding, portion of the Internet traffic. Many research prototype media players have been produced, including U.C. Berkeley's MPEG player [15], OGI's distributed video player [4], the Vosaic player <ref> [5] </ref>, and LBL's vic [11]. Over the past year, many commercial streaming media players have also been released, such as Netscape streaming video plug-ins [12], RealAudio [14], and Vxtreme [17]. <p> The goal is to maintain the stream quality metrics such as packet loss ratio at a controlled level. Rate-based feedback can be found in the Berkeley MPEG player [15] and the Vosaic player <ref> [5] </ref>. Rate-based flow control based on RTP [16] as proposed by Busse and Schulzrinne [2] works with multicast as well as unicast streaming applications.
Reference: [6] <author> Floyd, S., and Fall, K. </author> <title> Router mechanisms to support end-to-end congestion control. </title> <type> Tech. Rep. 97, </type> <institution> Network Research Group, Lawrence Berkeley National Laboratory, </institution> <month> February </month> <year> 1997. </year> <month> ftp://ftp.ee.lbl.gov/papers/collapse.ps. </month>
Reference-contexts: Similarly, they should be sensitive to increases in network congestion, and should respond to them by backing-off. Without this behavior, their potential to generate very high data rates could cause serious congestion in the Internet, and perhaps lead to another Internet congestion collapse <ref> [9, 6] </ref>. Consequently, such mecha 1 nisms must operate in harmony with TCP [9], which is the base protocol for the currently dominant HTTP [1] and FTP [13] traffic. They must ensure that multiple streaming sessions fairly share the network between themselves and with other non-streaming traffic.
Reference: [7] <author> Inouye, J., Cen, S., Pu, C., and Walpole, J. </author> <title> System support for mobile multimedia applications. </title> <booktitle> In NOSSDAV'97 (May 19-21 1997), </booktitle> <pages> pp. 143-154. </pages>
Reference-contexts: SCP is designed to handle these issues properly. SCP also has an interface to support drastic bandwidth fluctuations made possible by mobile computing <ref> [7] </ref>. Through this interface, its internal states and parameter estimations can be reset upon receiving a `mobility' notification. For example, when migrating a stream from a low bandwidth wireless interface to a high bandwidth wired interface, SCP can be reset to discard the parameters associated with the low bandwidth interface.
Reference: [8] <author> Jacobs, S., and Eleftheriadis, A. </author> <title> Real-time dynamic rate shaping and control for Internet video application. </title> <booktitle> In Workshop on Multimedia Signal Processing (Princeton, </booktitle> <address> New Jersey, </address> <month> June </month> <year> 1997). </year>
Reference-contexts: It wastes network bandwidth by retransmitting late data. TCP is also inherently bursty even in steady-state, due to its repeated process of increasing its congestion window size until packets are lost, then backing off exponentially. As discussed by Jacobs <ref> [8] </ref>, it is also possible to use TCP without retransmission for streaming application. Removing reliability from TCP eliminates the resultant problems of unpredictability latency and wasted network bandwidth.
Reference: [9] <author> Jacobson, V. </author> <title> Congestion avoidance and control. </title> <booktitle> In SIGCOMM'88 (August 1988), </booktitle> <pages> pp. 79-88. </pages>
Reference-contexts: Similarly, they should be sensitive to increases in network congestion, and should respond to them by backing-off. Without this behavior, their potential to generate very high data rates could cause serious congestion in the Internet, and perhaps lead to another Internet congestion collapse <ref> [9, 6] </ref>. Consequently, such mecha 1 nisms must operate in harmony with TCP [9], which is the base protocol for the currently dominant HTTP [1] and FTP [13] traffic. They must ensure that multiple streaming sessions fairly share the network between themselves and with other non-streaming traffic. <p> Without this behavior, their potential to generate very high data rates could cause serious congestion in the Internet, and perhaps lead to another Internet congestion collapse [9, 6]. Consequently, such mecha 1 nisms must operate in harmony with TCP <ref> [9] </ref>, which is the base protocol for the currently dominant HTTP [1] and FTP [13] traffic. They must ensure that multiple streaming sessions fairly share the network between themselves and with other non-streaming traffic. Finally, they should attempt to minimize latency and maximize the smoothness of the streaming data. <p> The ^ T rtt and ^ D rtt estimations are done in a way similar to that in TCP <ref> [9] </ref>. <p> T rtt is the result of applying a lowpass filter 5 to the sequence of raw RTT measurements. ^ D rtt is a lowpass filtering of the difference between ^ T rtt and the raw RTT measurements. ^ rto is also estimated in a way similar to that in TCP <ref> [9] </ref>, which proposed ^ rto = ^ T rtt + 4 ^ D rtt . Unfortunately, in our implementation with 10ms clock resolution, the above ^ rto estimator results in timers being too sensitive to jitter in RTT.
Reference: [10] <author> Mahdavi, J., and Floyd, S. </author> <title> TCP-friendly uni-cast rate-based flow control. end2end mailing list, </title> <address> ftp://ftp.isi.edu/end2end, </address> <month> January </month> <year> 1997. </year>
Reference-contexts: If two sessions competing the same set of bottleneck links, it is likely that one session would come up with higher thresholds than the other, and eventually force the latter to bail out completely. 2 Mahdavi and Floyd proposed a TCP-friendly unicast rate-based flow control scheme <ref> [10] </ref>. By having the sender (instead of the receiver) monitor the overall packet loss ratio based on the acknowledgements from the receiver, this scheme solves the problem of feedback messages not getting through in time in the traditional rate-based feedback approach.
Reference: [11] <author> McCanne, S., and Jacobson, V. </author> <title> vic: A Flexible Framework for Packet Video. </title> <booktitle> In Proceedings of the Third ACM Conference and Exhibition (Multimedia '95) (San Francisco, </booktitle> <address> California, </address> <month> November </month> <year> 1995), </year> <pages> pp. 511-522. </pages>
Reference-contexts: Many research prototype media players have been produced, including U.C. Berkeley's MPEG player [15], OGI's distributed video player [4], the Vosaic player [5], and LBL's vic <ref> [11] </ref>. Over the past year, many commercial streaming media players have also been released, such as Netscape streaming video plug-ins [12], RealAudio [14], and Vxtreme [17].
Reference: [12] <author> Netscape Communications Corporation. </author> <title> Netscape plug-ins: Audio/video. http:// home. netscape. com /comprod /products /navigator /version 2.0 /plugins /audio-video.html, </title> <year> 1997. </year>
Reference-contexts: Many research prototype media players have been produced, including U.C. Berkeley's MPEG player [15], OGI's distributed video player [4], the Vosaic player [5], and LBL's vic [11]. Over the past year, many commercial streaming media players have also been released, such as Netscape streaming video plug-ins <ref> [12] </ref>, RealAudio [14], and Vxtreme [17]. <p> Another choice for streaming flow and congestion control is HTTP. The Internet has proved its robustness, and its ability to share bandwidth between multiple sessions. TCP is used by many media streaming players 2 , including RealAudio [14], Vxtreme [17], and several Netscape plug-ins <ref> [12] </ref>. However, TCP is designed for reliable distribution of non-real-time data. When used for media streaming, it has the drawbacks of unpredictable latency, wasted network bandwidth, and bursty data flow. TCP implements reliability through infinite retransmission, causing unpredictable and unbounded latency, especially in congested networks.
Reference: [13] <author> Postel, J., and Reynolds, J. </author> <title> File transfer protocol. Internet RFC 0959, </title> <month> October </month> <year> 1985. </year>
Reference-contexts: Consequently, such mecha 1 nisms must operate in harmony with TCP [9], which is the base protocol for the currently dominant HTTP [1] and FTP <ref> [13] </ref> traffic. They must ensure that multiple streaming sessions fairly share the network between themselves and with other non-streaming traffic. Finally, they should attempt to minimize latency and maximize the smoothness of the streaming data.
Reference: [14] <institution> Progressive Networks. </institution> <note> HTTP versus RealAudio client-server streaming. http:// www. realaudio. com /help /content /http vs ra.html, </note> <year> 1996. </year>
Reference-contexts: Many research prototype media players have been produced, including U.C. Berkeley's MPEG player [15], OGI's distributed video player [4], the Vosaic player [5], and LBL's vic [11]. Over the past year, many commercial streaming media players have also been released, such as Netscape streaming video plug-ins [12], RealAudio <ref> [14] </ref>, and Vxtreme [17]. <p> Another choice for streaming flow and congestion control is HTTP. The Internet has proved its robustness, and its ability to share bandwidth between multiple sessions. TCP is used by many media streaming players 2 , including RealAudio <ref> [14] </ref>, Vxtreme [17], and several Netscape plug-ins [12]. However, TCP is designed for reliable distribution of non-real-time data. When used for media streaming, it has the drawbacks of unpredictable latency, wasted network bandwidth, and bursty data flow.
Reference: [15] <author> Rowe, L. A., et al. </author> <title> MPEG video in software: Representation, transmission and playback. </title> <booktitle> In Symposium on Elec. </booktitle> <institution> Imaging Sci. and Tech. </institution> <address> (San Jose, California, USA, </address> <month> February </month> <year> 1994). </year>
Reference-contexts: 1 Introduction The real-time distribution of continuous audio and video data via streaming multimedia applications accounts for a significant, and expanding, portion of the Internet traffic. Many research prototype media players have been produced, including U.C. Berkeley's MPEG player <ref> [15] </ref>, OGI's distributed video player [4], the Vosaic player [5], and LBL's vic [11]. Over the past year, many commercial streaming media players have also been released, such as Netscape streaming video plug-ins [12], RealAudio [14], and Vxtreme [17]. <p> The goal is to maintain the stream quality metrics such as packet loss ratio at a controlled level. Rate-based feedback can be found in the Berkeley MPEG player <ref> [15] </ref> and the Vosaic player [5]. Rate-based flow control based on RTP [16] as proposed by Busse and Schulzrinne [2] works with multicast as well as unicast streaming applications.
Reference: [16] <author> Schulzrinne, H., Casner, S., Frederick, R., and Jacobson, V. RTP: </author> <title> A transport protocol for real-time applications. Internet RFC 1889, </title> <month> January </month> <year> 1996. </year>
Reference-contexts: The goal is to maintain the stream quality metrics such as packet loss ratio at a controlled level. Rate-based feedback can be found in the Berkeley MPEG player [15] and the Vosaic player [5]. Rate-based flow control based on RTP <ref> [16] </ref> as proposed by Busse and Schulzrinne [2] works with multicast as well as unicast streaming applications.
Reference: [17] <author> Vxtreme, Inc. </author> <title> Vxtreme streaming video player. </title> <address> http:// www. vxtreme. com, </address> <year> 1997. </year> <month> 14 </month>
Reference-contexts: Berkeley's MPEG player [15], OGI's distributed video player [4], the Vosaic player [5], and LBL's vic [11]. Over the past year, many commercial streaming media players have also been released, such as Netscape streaming video plug-ins [12], RealAudio [14], and Vxtreme <ref> [17] </ref>. It is expected that real-time media-streaming traffic will increase rapidly, and will soon make up a significant portion of the total Internet bandwidth. fl This project is supported in part by grants from DARPA under grant N00014-94-1-0845 and contract MDA904-95-C-5547, and by Tektronix, Inc. and Intel Corporation. <p> Another choice for streaming flow and congestion control is HTTP. The Internet has proved its robustness, and its ability to share bandwidth between multiple sessions. TCP is used by many media streaming players 2 , including RealAudio [14], Vxtreme <ref> [17] </ref>, and several Netscape plug-ins [12]. However, TCP is designed for reliable distribution of non-real-time data. When used for media streaming, it has the drawbacks of unpredictable latency, wasted network bandwidth, and bursty data flow. TCP implements reliability through infinite retransmission, causing unpredictable and unbounded latency, especially in congested networks.
References-found: 17

