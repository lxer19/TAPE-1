URL: ftp://ftp.cs.umd.edu/pub/papers/papers/3592/3592.ps.Z
Refering-URL: http://www.cs.umd.edu/TRs/TR.html
Root-URL: 
Email: -@cs.umd.edu and lbriand@crim.ca  
Title: Qualitative Analysis for Maintenance Process Assessment  
Author: Lionel Briand Yong-Mi Kim Walclio Melo Carolyn Seaman Victor Basili 
Note: This work was supported by NASA grant NSG-5123, NSF grant 01-5-24845, and by NSERC, Canada. E-mails: -basili kimy melo cseaman  
Address: Montral, Qubec, Canada  College Park, MD, USA  
Affiliation: CRIM  Institute for Advanced Computer Studies University of Maryland  
Abstract: In order to improve software maintenance processes, we first need to be able to characterize and assess them. These tasks must be performed in depth and with objectivity since the problems are complex. One approach is to set up a measurement-based software process improvement program specifically aimed at maintenance. However, establishing a measurement program requires that one understands the problems to be addressed by the measurement program and is able to characterize the maintenance environment and processes in order to collect suitable and cost-effective data. Also, enacting such a program and getting usable data sets takes time. A short term substitute is therefore needed. We propose in this paper a characterization process aimed specifically at maintenance and based on a general qualitative analysis methodology. This process is rigorously defined in order to be repeatable and usable by people who are not acquainted with such analysis procedures. A basic feature of our approach is that actual implemented software changes are analyzed in order to understand the flaws in the maintenance process. Guidelines are provided and a case study is shown that demonstrates the usefulness of the approach. 
Abstract-found: 1
Intro-found: 1
Reference: [B+95] <author> L. Briand, W. L. Melo, C. Seaman, V. Basili. </author> <title> "Characterizing and Assessing a Large-Scale Software Maintenance Organization". </title> <address> ICSE95, Seattle, WA, </address> <year> 1995. </year>
Reference-contexts: Like the above approaches, AD models were not designed originally to facilitate quantitative data collection and analysis. However, in practice, 8 we observed that the AD model was easily modified for this purpose. In Section 5, we describe some of these modifications and in <ref> [B+95] </ref> we provided a more detailed list of enhancements we proposed to the AD model. Because of the richness of its underlying paradigm, this modeling approach has been chosen as the representation for our organization model. AD models are described in more detail in the sections below. <p> These categories did not always adequately describe the dependencies that arose in our model. In addition, although the notions of enforcement, assurance and insurance helped to satisfy requirement Req5, they are difficult to represent explicitly in the AD model representation. For more details on that subject, see <ref> [B+95] </ref>. 3.1.4. Value of the organizational model Modeling the organizational context of the maintenance process was a very important step in the maintenance analysis process . A model of the organization was necessary for communication with maintenance process participants.
Reference: [B+96] <author> V. Basili, L. Briand, S. Condon, W. L. Melo, C. Seaman, J. Valett. </author> <title> "Understanding and Predicting the Process of Software Maintenance Releases". </title> <address> ICSE96, Berlin, Germany, </address> <year> 1996. </year>
Reference-contexts: In addition, we need to model more rigorously the maintenance organization and processes so that precise evaluation criteria can be defined [SB94]. Preliminary results from the current maintenance measurement program can be found in <ref> [B+96] </ref>. 35 This approach is being used to analyze several other maintenance projects in the NASA-SEL in order to better understand project similarities and differences in this environment. Thus, we will be able to build better models of the various classes of maintenance projects.
Reference: [BC91] <author> K. Bennett, B. Cornelius, M. Munro, D. Robson, </author> <title> "Software Maintenance", Software Engineering Reference Book, Chapter 20, </title> <publisher> Butterworth-Heinemann Ltd, </publisher> <year> 1991 </year>
Reference: [BK94] <author> I.Z. Ben-Shaul and G. Kaiser, </author> <title> "A paradigm for decentralized process modeling and its realization in the OZ environment", </title> <address> ICSE 16, May 1994, Sorrento, Italy. </address>
Reference-contexts: Thus, we were faced with the crucial task of finding an appropriate organizational modeling approach. We first looked in the process literature for such a technology. Representation of organizational structure in most process work is limited to the representation of roles <ref> [BK94, LR93] </ref>, with a few notable exceptions. One is the approach presented in [K91], which uses Statemate. Statemate models include three perspectives, one of which is the organizational perspective, which identifies the people who participate in the process and the information channels between them.
Reference: [BR88] <author> V. Basili and H. Rombach,"The TAME Project: </author> <title> Towards Improvement-Oriented Software Environments", </title> <journal> IEEE Trans. Software Eng., </journal> <volume> 14 (6), </volume> <month> June, </month> <year> 1988. </year>
Reference-contexts: Furthermore, defining efficient and useful measurement procedures first requires a characterization of the maintenance environment in which measurement takes place, such as organization structures, processes, issues, and risks <ref> [BR88] </ref>. Part of this characterization is the identification and assessment of issues that must be addressed in order to improve the quality and productivity of maintenance projects. Because of the complexity of the phenomena studied, this is a difficult task for the maintenance organization. <p> Conclusion Characterizing and understanding software maintenance processes and organizations are necessary, if effective management decisions are to be made and if adequate resource allocation is to be provided. Also, in order to plan and efficiently organize a measurement programa necessary step towards process improvement <ref> [BR88] </ref>, we need to better characterize the maintenance environment and its specific problems.
Reference: [C88] <author> N. Chapin, </author> " <title> The Software Maintenance Life-Cycle", </title> <address> CSM'88, Phoenix, Arizona, </address> <year> 1988. </year>
Reference: [CC93] <author> B.G. Cain and J.O. Coplien, </author> <title> "A Role-Based Empirical Process Modeling Environment", </title> <address> ICSP 2, Berlin, Germany, </address> <month> February </month> <year> 1993. </year>
Reference-contexts: Role Interaction Networks (RINs) [R92] (implemented in the modeling tool Deva [MCC92]) also describe process participants and the information that passes between them. The use of CRC cards in the Pasteur tool <ref> [CC93] </ref> completely describes a process in terms of the process participants and their work dependencies. None of these approaches, however, provides the ability to represent the richness of types of persons, groups, relationships, and structures that we require, e.g., conflicting objectives, synergy between objectives, risk management mechanisms.
Reference: [HV92] <author> M. Hariza, J.F. Voidrot, E. Minor, L. Pofelski, and S. Blazy, </author> <title> "Software Maintenance: An analysis of Industrial Needs and Constraints", </title> <address> CSM'92, Orlando, Florida. </address>
Reference: [K91] <author> M.I. Kellner, </author> <title> "Software Process Modeling Support for Management Planning and Control", </title> <address> ICSP 1, Redondo Beach, CA, </address> <month> October </month> <year> 1991. </year>
Reference-contexts: We first looked in the process literature for such a technology. Representation of organizational structure in most process work is limited to the representation of roles [BK94, LR93], with a few notable exceptions. One is the approach presented in <ref> [K91] </ref>, which uses Statemate. Statemate models include three perspectives, one of which is the organizational perspective, which identifies the people who participate in the process and the information channels between them.
Reference: [LR93] <author> C.M. Lott and H.D. Rombach, </author> <title> "Measurement-based guidance of software projects using explicit project plans", </title> <journal> Information and Software Technology, </journal> <volume> 35:6/7, </volume> <month> June, </month> <year> 1993, </year> <pages> pp. </pages> <month> 407 - 419. </month> <title> [MCC92] "Deva, A Process Modeling Tool", </title> <type> MCC Technical Report, </type> <month> June </month> <year> 1992. </year> <month> 36 </month>
Reference-contexts: Thus, we were faced with the crucial task of finding an appropriate organizational modeling approach. We first looked in the process literature for such a technology. Representation of organizational structure in most process work is limited to the representation of roles <ref> [BK94, LR93] </ref>, with a few notable exceptions. One is the approach presented in [K91], which uses Statemate. Statemate models include three perspectives, one of which is the organizational perspective, which identifies the people who participate in the process and the information channels between them.
Reference: [R92] <author> G.L. Rein, </author> <title> "Organization Design Viewed as a Group Process Using Coordination Technology", </title> <type> MCC Technical Report CT-039-92, </type> <month> February </month> <year> 1992. </year>
Reference-contexts: One is the approach presented in [K91], which uses Statemate. Statemate models include three perspectives, one of which is the organizational perspective, which identifies the people who participate in the process and the information channels between them. Role Interaction Networks (RINs) <ref> [R92] </ref> (implemented in the modeling tool Deva [MCC92]) also describe process participants and the information that passes between them. The use of CRC cards in the Pasteur tool [CC93] completely describes a process in terms of the process participants and their work dependencies.
Reference: [RUV92] <author> D. Rombach, B. Ulery and J. Valett, </author> <title> "Toward Full Cycle Control: Adding Maintenance Measurement to the SEL", </title> <journal> Journal of systems and software, </journal> <month> May </month> <year> 1992. </year>
Reference-contexts: Establishing a measurement program integrated into the maintenance process is likely to help any organization achieve an in-depth understanding of its specific maintenance issues and thereby lay a solid foundation for maintenance process improvement <ref> [RUV92] </ref>. However, defining and enacting a measurement program takes time. A short term, quickly operational substitute is needed in order to obtain a first quick insight, at low cost, into the issues to be addressed.
Reference: [S94] <author> C.B. Seaman, </author> <title> "Using the OPT improvement approach in the SQL/DS development environment", </title> <institution> in Proceedings of CASCON '94 , IBM Canada Ltd. Laboratory Centre for Advanced Studies and National Research Council of Canada, Toronto, Canada, </institution> <month> October </month> <year> 1994. </year>
Reference-contexts: Without quantitative analysis, these decisions are subject to guesswork, trial and error, and the personal expertise of the manager. For more on metrics for organizational information flow, see <ref> [S94] </ref>. There are several possible applications of quantitative analysis in relation to the actor/position/role decomposition. For example, during the course of our study, we noticed that many differences between projects were reflected in variations in the breakdown of positions into roles.
Reference: [SB94] <author> C. Seaman and V. Basili, </author> <title> "OPT: An Approach to Organizational and Process Improvement", </title> <booktitle> AAAI 1994 Spring Symposium Series, </booktitle> <institution> Stanford University, </institution> <month> March </month> <year> 1994. </year>
Reference-contexts: In order to reach such an objective, we have to base the design of such a measurement program on the results provided by this study. In addition, we need to model more rigorously the maintenance organization and processes so that precise evaluation criteria can be defined <ref> [SB94] </ref>. Preliminary results from the current maintenance measurement program can be found in [B+96]. 35 This approach is being used to analyze several other maintenance projects in the NASA-SEL in order to better understand project similarities and differences in this environment.
Reference: [SS92] <author> A. Shelly and E. Sibert, </author> <title> "Qualitative Analysis: A Cyclical Process Assisted by Computer", </title> <booktitle> Qualitative Analysis, </booktitle> <pages> pp 71-114, </pages> <publisher> Oldenbourg Verlag, </publisher> <address> Munich, Vienna, </address> <year> 1992 </year>
Reference-contexts: ve Knowledge Bas e (IKB) - Definitio ns (e.g., activities ) - Taxonom ies (e.g., tools) - Working hypothes es (e.g., error m echanism s, proces s flaws) Inductive Infe rence Deduc tive Inf erence 5 This process is essentially an instantiation of the generic qualitative analysis process defined in <ref> [SS92] </ref>. Figure 1 illustrates at a high level our maintenancespecific qualitative analysis process. It is a combination of both inductive and deductive inferences.
Reference: [YM93] <author> E. Yu and J. Mylopoulos, </author> <title> "An Actor Dependency Model of Organizational Work - with Application to Business Process Reengineering". </title> <booktitle> In Proc. Conference on Organizational Computing Systems (COOCS 93), Milpitas, </booktitle> <address> CA, </address> <month> November </month> <year> 1993. </year>
Reference-contexts: The enhancement which we have used, called the Agent-Role-Position (ARP) model, provides a useful decomposition of the actors themselves. These two representations are described briefly in the following sections. For a more detailed description, see <ref> [YM93] </ref>. 3.1.1. The basic Actor-Dependency (AD) model In this model, an organization is described as a network of interdependencies among active organizational entities, i.e., actors. A node in such a network represents an organizational actor, and a link indicates a dependency between two actors.
Reference: [YM94] <author> E. Yu and J. Mylopoulos, </author> <title> "Understanding 'why' in software process modeling, analysis, and design", </title> <address> ICSE 16, Sorrento, Italy, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: Furthermore, these approaches do not provide straightforward links between quantitative data and organizational models. This issue is important, as we shall see in Section 5, because the organizational model will be an important tool in the eventual quantitative analysis of the maintenance process. Yu's Actor-Dependency (A-D) model <ref> [YM94] </ref> is another modeling notation that shares some of the characteristics of the three described above. In particular, AD models are based on process participants and the relationships between them, including information flow relationships. These relationships are not limited, however, to information flows.
References-found: 17

