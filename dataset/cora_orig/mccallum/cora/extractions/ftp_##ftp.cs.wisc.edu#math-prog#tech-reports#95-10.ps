URL: ftp://ftp.cs.wisc.edu/math-prog/tech-reports/95-10.ps
Refering-URL: http://www.cs.wisc.edu/math-prog/tech-reports/
Root-URL: 
Title: ACCESSING REALISTIC MIXED COMPLEMENTARITY PROBLEMS WITHIN MATLAB  
Author: Michael C. Ferris and Thomas F. Rutherford 
Keyword: Key words: Mixed complementarity problems, algorithms, modeling.  
Note: The work of this author was based on research supported by the Department of Energy grant DE-FG03-94ER61915, the Air Force Office of Scientific Research grant F49620-94-1-0036 and the National Science Foundation grant  The work of this author was based on research supported by the Department of Energy grant DE-FG03-94ER61915.  
Address: Madison, Wisconsin 53706  Boulder, Colorado 80309  
Affiliation: 1 Computer Sciences Department University of Wisconsin  Department of Economics The University of Colorado  
Phone: 2  
Web: CCR-9157632.  
Abstract: This paper describes a suite of programs that allow realistic complementarity problems to be accessed from within the MATLAB programming environment. The suite of programs uses data generated from the GAMS/MCP library and makes function and Jacobian evaluations available directly to the MATLAB user. All the required data is stored in a binary encoding of the problems, completely independent of GAMS. Use of the programs is described here, along with a list of all the problems that are currently available in binary form. Details on how the binary files are generated from GAMS are also given. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. C. Billups, S. P. Dirkse, and M. C. Ferris. </author> <title> A comparison of algorithms for large scale mixed complementarity problems. </title> <type> Mathematical Programming Technical Report 95-16, </type> <institution> Computer Sciences Department, University of Wisconsin, Madison, Wisconsin, </institution> <year> 1995. </year> <note> Available from ftp://ftp.cs.wisc.edu/math-prog/tech-reports/. </note>
Reference-contexts: A detailed comparison of the above codes has been given in <ref> [1] </ref>. Discerning how to use the interface in the best manner possible remains the topic of further research. 3 PROBLEM CHARACTERISTICS The current set of problems arise from two sources, the library of GAMS test problems and MCPLIB. The following two tables correspond to these two sources.
Reference: [2] <author> S. C. Billups and M. C. Ferris. QPCOMP: </author> <title> A quadratic program based solver for mixed complementarity problems. </title> <type> Mathematical Programming Technical Report 95-09, </type> <institution> Computer Sciences Department, University of Wisconsin, Madison, Wisconsin, </institution> <year> 1995. </year> <note> Available from ftp://ftp.cs.wisc.edu/math-prog/tech-reports/. </note>
Reference-contexts: While it is easy to prototype algorithms on many problems using the MATLAB interface, it is important to realize that practical codes for complementarity problems, such as PATH [8], MILES [14], SMOOTH [4], NE/SQP [13], SEMISMOOTH [5] and QPCOMP <ref> [2] </ref> have many features added that make them much more effective than a simple MATLAB encoding would demonstrate. A detailed comparison of the above codes has been given in [1].
Reference: [3] <author> A. Brooke, D. Kendrick, and A. Meeraus. </author> <title> GAMS: A User's Guide. </title> <publisher> The Scientific Press, </publisher> <address> South San Francisco, CA, </address> <year> 1988. </year>
Reference-contexts: A suite of problems that arise from realistic applications, with reasonable size and real data, is already available within the GAMS/MCP setting as described in <ref> [3] </ref> and [7]. Other problems [11] are currently under development within this setting. This has led to broad testing of some of algorithms via the GAMS/MCP interface described in [10]. However, most of the algorithms remain largely untested in this computational setting.
Reference: [4] <author> C. Chen and O. L. Mangasarian. </author> <title> A class of smoothing functions for nonlinear and mixed complementarity problems. </title> <journal> Computational Optimization and Applications, </journal> <volume> forthcoming, </volume> <year> 1995. </year> <month> 12 </month>
Reference-contexts: While it is easy to prototype algorithms on many problems using the MATLAB interface, it is important to realize that practical codes for complementarity problems, such as PATH [8], MILES [14], SMOOTH <ref> [4] </ref>, NE/SQP [13], SEMISMOOTH [5] and QPCOMP [2] have many features added that make them much more effective than a simple MATLAB encoding would demonstrate. A detailed comparison of the above codes has been given in [1].
Reference: [5] <author> T. De Luca, F. Facchinei, and C. Kanzow. </author> <title> A semismooth equation approach to the solution of nonlinear complementarity problems. </title> <note> Submitted to Mathematical Programming, </note> <year> 1995. </year>
Reference-contexts: While it is easy to prototype algorithms on many problems using the MATLAB interface, it is important to realize that practical codes for complementarity problems, such as PATH [8], MILES [14], SMOOTH [4], NE/SQP [13], SEMISMOOTH <ref> [5] </ref> and QPCOMP [2] have many features added that make them much more effective than a simple MATLAB encoding would demonstrate. A detailed comparison of the above codes has been given in [1].
Reference: [6] <author> S. P. Dirkse. </author> <title> Robust Solution of Mixed Complementarity Problems. </title> <type> PhD thesis, </type> <institution> Computer Sciences Department, University of Wisconsin, Madison, Wisconsin, </institution> <year> 1994. </year> <note> Available from ftp://ftp.cs.wisc.edu/math-prog/tech-reports/. </note>
Reference-contexts: A full description is given in <ref> [6] </ref>, but the file in Figure 6, "pnewt.m" contains all of the main points. This algorithm can be invoked in the same manner as the pgrad algorithm, except that pgrad is replaced by pnewt.
Reference: [7] <author> S. P. Dirkse and M. C. Ferris. MCPLIB: </author> <title> A collection of nonlinear mixed complementarity problems. </title> <journal> Optimization Methods and Software, </journal> <volume> 5 </volume> <pages> 319-345, </pages> <year> 1995. </year>
Reference-contexts: A suite of problems that arise from realistic applications, with reasonable size and real data, is already available within the GAMS/MCP setting as described in [3] and <ref> [7] </ref>. Other problems [11] are currently under development within this setting. This has led to broad testing of some of algorithms via the GAMS/MCP interface described in [10]. However, most of the algorithms remain largely untested in this computational setting. <p> The following two tables correspond to these two sources. Further documentation on the problems can be found in [15] and <ref> [7] </ref> respectively.
Reference: [8] <author> S. P. Dirkse and M. C. Ferris. </author> <title> The PATH solver: A non-monotone stabilization scheme for mixed complementarity problems. </title> <journal> Optimization Methods and Software, </journal> <volume> 5 </volume> <pages> 123-156, </pages> <year> 1995. </year>
Reference-contexts: &lt;= step_tol) disp ('linesearch failure'); return; end z = znew; f = fnew; residual = resnew, if (residual &lt; 1e-6) return; end end; 6 matlab&gt; [z,l,u] = cpsetup ('gemmge'); matlab&gt; znew = pgrad (z,l,u); A more sophisticated code is based on the projected Newton preprocessor implemented as part of PATH <ref> [8, 9] </ref>. A full description is given in [6], but the file in Figure 6, "pnewt.m" contains all of the main points. This algorithm can be invoked in the same manner as the pgrad algorithm, except that pgrad is replaced by pnewt. <p> While it is easy to prototype algorithms on many problems using the MATLAB interface, it is important to realize that practical codes for complementarity problems, such as PATH <ref> [8] </ref>, MILES [14], SMOOTH [4], NE/SQP [13], SEMISMOOTH [5] and QPCOMP [2] have many features added that make them much more effective than a simple MATLAB encoding would demonstrate. A detailed comparison of the above codes has been given in [1].
Reference: [9] <author> S. P. Dirkse and M. C. Ferris. </author> <title> A pathsearch damped Newton method for computing general equilibria. </title> <journal> Annals of Operations Research, </journal> <volume> forthcoming, </volume> <year> 1995. </year>
Reference-contexts: &lt;= step_tol) disp ('linesearch failure'); return; end z = znew; f = fnew; residual = resnew, if (residual &lt; 1e-6) return; end end; 6 matlab&gt; [z,l,u] = cpsetup ('gemmge'); matlab&gt; znew = pgrad (z,l,u); A more sophisticated code is based on the projected Newton preprocessor implemented as part of PATH <ref> [8, 9] </ref>. A full description is given in [6], but the file in Figure 6, "pnewt.m" contains all of the main points. This algorithm can be invoked in the same manner as the pgrad algorithm, except that pgrad is replaced by pnewt.
Reference: [10] <author> S. P. Dirkse, M. C. Ferris, P. V. Preckel, and T. Rutherford. </author> <title> The GAMS callable program library for variational and complementarity solvers. </title> <type> Mathematical Programming Technical Report 94-07, </type> <institution> Computer Sciences Department, University of Wisconsin, Madison, Wisconsin, </institution> <year> 1994. </year> <note> Available from ftp://ftp.cs.wisc.edu/math-prog/tech-reports/. </note>
Reference-contexts: Other problems [11] are currently under development within this setting. This has led to broad testing of some of algorithms via the GAMS/MCP interface described in <ref> [10] </ref>. However, most of the algorithms remain largely untested in this computational setting. <p> MCP General mixed complementarity problem MPSGE General economic equilibrium from MPSGE LCP Linear complementarity problem NCP Nonlinear complementarity problem LMCP Linear mixed complementarity problem NE Nonlinear equations NLP Optimality conditions of a nonlinear program 4 FILE GENERATION & ADVANCED OPTIONS The interface between GAMS/MCP and MATLAB is created using CPLIB <ref> [10] </ref> and a single binary file. The binary file is machine specific, being written using the I/O library facilities of GAMS. Many platforms are supported by this library. <p> Many platforms are supported by this library. If the user has access to GAMS/MCP, it is possible to generate new binary files incorporating any GAMS/MCP model using the following procedure. To generate a binary file, a GAMS/MCP model is created as described in <ref> [10] </ref>.
Reference: [11] <author> M. C. Ferris and J. S. Pang. </author> <title> Engineering and economic applications of complementarity problems. Discussion Papers in Economics 95-4, </title> <institution> Department of Economics, University of Colorado, Boulder, Colorado, </institution> <year> 1995. </year> <note> Available from ftp://ftp.cs.wisc.edu/math-prog/tech-reports/. </note>
Reference-contexts: A suite of problems that arise from realistic applications, with reasonable size and real data, is already available within the GAMS/MCP setting as described in [3] and [7]. Other problems <ref> [11] </ref> are currently under development within this setting. This has led to broad testing of some of algorithms via the GAMS/MCP interface described in [10]. However, most of the algorithms remain largely untested in this computational setting.
Reference: [12] <author> MATLAB. </author> <title> User's Guide. The MathWorks, </title> <publisher> Inc., </publisher> <year> 1992. </year>
Reference-contexts: However, most of the algorithms remain largely untested in this computational setting. This paper describes a suite of programs that are designed to make the GAMS/MCP complementarity problems readily accessible within the MATLAB <ref> [12] </ref> programming environment, without the overhead of trying to write specialized code to evaluate the underlying nonlinear functions. All of the programs are publicly available and can be obtained by anonymous ftp from ftp.cs.wisc.edu:math-prog/matlab/ or from the authors.
Reference: [13] <author> J. S. Pang and S. A. Gabriel. NE/SQP: </author> <title> A robust algorithm for the nonlinear complementarity problem. </title> <journal> Mathematical Programming, </journal> <volume> 60 </volume> <pages> 295-338, </pages> <year> 1993. </year>
Reference-contexts: While it is easy to prototype algorithms on many problems using the MATLAB interface, it is important to realize that practical codes for complementarity problems, such as PATH [8], MILES [14], SMOOTH [4], NE/SQP <ref> [13] </ref>, SEMISMOOTH [5] and QPCOMP [2] have many features added that make them much more effective than a simple MATLAB encoding would demonstrate. A detailed comparison of the above codes has been given in [1].
Reference: [14] <author> T. F. Rutherford. MILES: </author> <title> A mixed inequality and nonlinear equation solver. </title> <type> Working Paper, </type> <institution> Department of Economics, University of Colorado, Boulder, </institution> <year> 1993. </year>
Reference-contexts: While it is easy to prototype algorithms on many problems using the MATLAB interface, it is important to realize that practical codes for complementarity problems, such as PATH [8], MILES <ref> [14] </ref>, SMOOTH [4], NE/SQP [13], SEMISMOOTH [5] and QPCOMP [2] have many features added that make them much more effective than a simple MATLAB encoding would demonstrate. A detailed comparison of the above codes has been given in [1].
Reference: [15] <author> T. F. Rutherford. </author> <title> Extensions of GAMS for complementarity problems arising in applied economic analysis. </title> <journal> Journal of Economic Dynamics and Control, </journal> <volume> forthcoming, </volume> <year> 1995. </year>
Reference-contexts: The following two tables correspond to these two sources. Further documentation on the problems can be found in <ref> [15] </ref> and [7] respectively. <p> The following function gives limited access to these names. Furthermore, for models that were originally generated as an MPSGE model <ref> [15] </ref>, the output vector t holds variable type indicators, with the following meanings: t (i) = 1 production sector 2 commodity price 3 consumer income 0 auxiliary variable (no structural information) The input vector v is a mask indicating what names are required (v (i)=0 if that name is to be
Reference: [16] <author> P. Tseng. </author> <title> Matlab implementations of complementarity codes. </title> <type> Private Communication, </type> <year> 1995. </year> <month> 13 </month>
Reference-contexts: These examples demonstrate the ease with which algorithms can be prototyped and tested using the MATLAB interface. Indeed, Tseng <ref> [16] </ref> has generated a suite of algorithms for complementarity problems which were easily modified to use this interface. However, the results using these codes are perhaps not illuminating, since all of these codes fail on a large subset of the models.
References-found: 16

