URL: http://www.bell-labs.com/~yash/tr95-11.ps.Z
Refering-URL: http://www.bell-labs.com/~yash/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Evaluating Quorum Systems over the Internet  
Author: Yair Amir Avishai Wool 
Keyword: Quorum systems, network partitions, Internet, performance, replication.  
Note: and the NASA Center of Excellence in Space Data and Information Sciences.  
Address: Baltimore MD 21218,  Rehovot 76100, Israel.  
Affiliation: Department of Computer Science, The Johns Hopkins University.  Department of Computer Science, The Johns Hopkins University,  Department of Applied Mathematics and Computer Science, The Weizmann Institute,  
Pubnum: TR-1995-11  
Email: E-mail: yairamir@cs.jhu.edu  E-mail: yash@wisdom.weizmann.ac.il.  
Date: December 2, 1995  
Abstract: Quorum systems serve as a basic tool providing a uniform and reliable way to achieve coordination in a distributed system. They are useful for distributed and replicated databases, name servers, mutual exclusion, and distributed access control and signatures. Traditionally, two basic methods have been used to evaluate quorum systems: the analytical approach, and simulation. This paper proposes a third, empirical approach. We collected 6 months' worth of connectivity and operability data of a system consisting of 14 real computers using a wide area group communication protocol. The system spanned two geographic sites and three different Internet segments. We developed a mechanism that merges the local views into a unified history of the events that took place, ordered according to an imaginary global clock. We then developed a tool called the Generic Quorum-system Evaluator (GQE), which evaluates the behavior of any given quorum system over the unified, real-life history. We compared fourteen dynamic and static quorum systems. We discovered that as predicted, dynamic quorum systems behave better than static systems. However we found that many assumptions taken by the traditional approaches are unjustified: crashes are strongly correlated, network partitions do occur, even within a single Internet segment, and we even detected a brief simultaneous crash of all the participating computers. 
Abstract-found: 1
Intro-found: 1
Reference: [ADKM92a] <author> Y. Amir, D. Dolev, S. Kramer, and D. Malki. </author> <title> Membership algorithms for multicast communication groups. </title> <booktitle> In Proc. 6th Inter. Workshop on Dist. Algorithms, </booktitle> <volume> LNCS 647, </volume> <pages> pages 292-312. </pages> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference-contexts: This leader time serves as a membership change identifier that is agreed upon by all the members in the connected component. The algorithm used by Spread to determine the membership is a version of the Transis membership algorithm <ref> [ADKM92a] </ref>, modified to cope with the wide-area structure of a network which connects several local area broadcast domains.
Reference: [ADKM92b] <author> Y. Amir, D. Dolev, S. Kramer, and D. Malki. Transis: </author> <title> A communication subsystem for high availability. </title> <booktitle> In Proc. 22nd Inter. Symp. Fault-Tolerant Comp. Sys., </booktitle> <pages> pages 76-84, </pages> <year> 1992. </year>
Reference-contexts: The Spread daemons are used to keep track of the membership lists of the dynamically changing connected network components. Spread complies with the extended virtual synchrony model [MAMA94], developed in the Totem [AMMS + 95] and Transis <ref> [ADKM92b] </ref> projects. This model defines consistent semantics for services across all the daemons in a system that is prone to network partitions and processor crashes. Each Spread daemon logs three kinds of records to a local file: "B" (boot), "A" (active), and "M" (membership change).
Reference: [AE91] <author> D. Agrawal and A. El-Abbadi. </author> <title> An efficient and fault-tolerant solution for distributed mutual exclusion. </title> <journal> ACM Trans. Comp. Sys., </journal> <volume> 9(1) </volume> <pages> 1-20, </pages> <year> 1991. </year>
Reference-contexts: A Quorum System is a set system S that has the Intersection property: S " R 6= ? for all S; R 2 S. The sets of the system are called quorums. Many quorum systems which are based on combinatorial constructions appear in the literature, such as <ref> [Mae85, GB85, AE91, CAA90, PW95] </ref>. However all the systems with optimal availability turn out to be defined by voting. Definition 2.2 Let v i be an integer vote assigned to processor i, and let V = P i v i .
Reference: [Ami95a] <author> Y. Amir, </author> <year> 1995. </year> <type> Personal communication. </type>
Reference-contexts: The WI segment is even more complex, connecting two Ethernet segments over an FDDI backbone. Our records show many intra-segments partitions which occurred according to this physical structure. 3.2 The Protocol As a wide area group communication mechanism, we used the Spread <ref> [Ami95a] </ref> reliable multi-cast tool. Spread is run as a daemon on each of the machines participating in the experiment, and is automatically activated when the machine boots. The Spread daemons are used to keep track of the membership lists of the dynamically changing connected network components.
Reference: [Ami95b] <author> Y. Amir. </author> <title> Replication Using Group Communication Over a Dynamic Network. </title> <type> PhD thesis, </type> <institution> Institute of Computer Science, The Hebrew University of Jerusalem, Israel. </institution> <note> Also available at http://www.cs.jhu.edu/yairamir, 1995. </note>
Reference-contexts: Set systems with the intersection property are known as quorum systems, and the sets in such a system are called quorums. Quorum systems have been used in the study of distributed control and management problems such as data replication protocols (cf. <ref> [DGS85, Her84, Ami95b, Kei94] </ref>), name servers (cf. [MV88]), mutual exclusion (cf. [Ray86]), selective dissemination of information (cf. [YG94]), and distributed access control and signatures (cf. [NW96]). A protocol template based on quorum systems works as follows.
Reference: [AMMS + 95] <author> Y. Amir, L. E. Moser, P. M. Melliar-Smith, D. A. Agarwal, and P. Ciarfella. </author> <title> The totem single-ring ordering and membership protocol. </title> <journal> ACM Trans. Comp. Sys., </journal> <volume> 13(4), </volume> <year> 1995. </year>
Reference-contexts: The Spread daemons are used to keep track of the membership lists of the dynamically changing connected network components. Spread complies with the extended virtual synchrony model [MAMA94], developed in the Totem <ref> [AMMS + 95] </ref> and Transis [ADKM92b] projects. This model defines consistent semantics for services across all the daemons in a system that is prone to network partitions and processor crashes. Each Spread daemon logs three kinds of records to a local file: "B" (boot), "A" (active), and "M" (membership change).
Reference: [AW95] <author> Y. Amir and A. Wool. </author> <title> Optimal availability quorum systems: Theory and practice, 1995. </title> <type> Manuscript. </type>
Reference-contexts: Usually, assumptions such as independent failures and perfect communication are made to render the problem tractable. The results of this approach are rigorous and definitive. Analyses of the availability (probability that a live quorum exists in the system), assuming a complete and fault free network, can be found in <ref> [BG87, PW93, DKK + 94, SB94, AW95] </ref>. Analyses of the expected size of a connected component containing a quorum, and the availability on ring networks are [PS91, INK95]. An analysis of the load can be found in [NW94, HMP95]. <p> If p &gt; 1=2 then [PW93, DKK + 94] show that a monarchy (primary site) system is optimal. Non-Uniform: The processors have different failure probabilities p i . Then <ref> [SB94, AW95] </ref> show that the optimal availability quorum system is a voting system in which the votes depend on the failure probabilities p i as follows. If p i 1=2 for all i then a monarchy with the least fail-prone processor acting as king is optimal. <p> These are possible candidates to be optimal assuming that the network may partition along the segment borders. Finally, we calculated the aposteriori weights, based on the observed failure probabilities of Table 1, according to formula (1) and scaled up <ref> [AW95] </ref>.
Reference: [BG84] <author> P. A. Bernstein and N. Goodman. </author> <title> An algorithm for concurrency control and recovery for replicated databases. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 9(4), </volume> <month> December </month> <year> 1984. </year>
Reference-contexts: Looking more closely at the network structure (see Figure 1), we can see that "physical" segments are in fact implemented using several lower level physical devices, allowing for more intricate failure patterns. Protocols such as the Available Copy protocol <ref> [BG84, GSC + 83] </ref> rely on never incurring a partition, either for correctness or efficiency. In [PL90] it is argued that total failures or network partitions do not occur in practice, so the Available Copy protocol is a viable option.
Reference: [BG87] <author> D. Barbara and H. Garcia-Molina. </author> <title> The reliability of vote mechanisms. </title> <journal> IEEE Trans. Comput., </journal> <volume> C-36:1197-1208, </volume> <month> October </month> <year> 1987. </year>
Reference-contexts: Usually, assumptions such as independent failures and perfect communication are made to render the problem tractable. The results of this approach are rigorous and definitive. Analyses of the availability (probability that a live quorum exists in the system), assuming a complete and fault free network, can be found in <ref> [BG87, PW93, DKK + 94, SB94, AW95] </ref>. Analyses of the expected size of a connected component containing a quorum, and the availability on ring networks are [PS91, INK95]. An analysis of the load can be found in [NW94, HMP95]. <p> A basic notion in these measures is that of a live quorum: a quorum is called alive when all its processors are alive. The measures we consider are: UnAvail: This is the un-availability of the system <ref> [BG87] </ref>, the probability of the event that no live quorum exists in the system. When such an event occurs the service is completely halted. The un-availability is widely accepted as the measure by which quorum systems are evaluated. <p> Therefore in such a model the network is never partitioned into disconnected components. Within this model there are two sub-models: Uniform: The processors fail with the same, fixed probability p. If p &lt; 1=2 then <ref> [BG87] </ref> shows that the the majority system (i.e., a voting system with v i = 1 for all processors) has optimal availability. If p &gt; 1=2 then [PW93, DKK + 94] show that a monarchy (primary site) system is optimal. Non-Uniform: The processors have different failure probabilities p i . <p> Therefore in such a model the network can partition into several disconnected components. In this model <ref> [BG87] </ref> show that the optimal availability quorum system is always contained within a single bi-connected component of the network, for any topology. For a ring topology [PS91, INK95] give explicit optimal solutions. 4 2.3.3 Dynamic Quorums All the above mentioned optimal quorum systems are static. <p> This can be seen from the fact that quorum systems which are confined to one Internet segment have higher availability than those using all the machines (compare the UnAvail columns of Maj All and Maj WI in Figure 4). This behavior fits the predictions of <ref> [BG87] </ref> assuming that each segment is a fully connected sub-net and single links connect the segments (or at least the two geographic sites). * When the quorum system is confined to a single segment, then using majority on that segment improves the availability.
Reference: [CAA90] <author> S. Y. Cheung, M. H. Ammar, and M. Ahamad. </author> <title> The grid protocol: A high performance scheme for maintaining replicated data. </title> <booktitle> In Proc. 6th IEEE Int. Conf. Data Engineering, </booktitle> <pages> pages 438-445, </pages> <year> 1990. </year>
Reference-contexts: A Quorum System is a set system S that has the Intersection property: S " R 6= ? for all S; R 2 S. The sets of the system are called quorums. Many quorum systems which are based on combinatorial constructions appear in the literature, such as <ref> [Mae85, GB85, AE91, CAA90, PW95] </ref>. However all the systems with optimal availability turn out to be defined by voting. Definition 2.2 Let v i be an integer vote assigned to processor i, and let V = P i v i .
Reference: [DGS85] <author> S. B. Davidson, H. Garcia-Molina, and D. Skeen. </author> <title> Consistency in partitioned networks. </title> <journal> ACM Computing Surveys, </journal> <volume> 17(3) </volume> <pages> 341-370, </pages> <year> 1985. </year>
Reference-contexts: Set systems with the intersection property are known as quorum systems, and the sets in such a system are called quorums. Quorum systems have been used in the study of distributed control and management problems such as data replication protocols (cf. <ref> [DGS85, Her84, Ami95b, Kei94] </ref>), name servers (cf. [MV88]), mutual exclusion (cf. [Ray86]), selective dissemination of information (cf. [YG94]), and distributed access control and signatures (cf. [NW96]). A protocol template based on quorum systems works as follows.
Reference: [DKK + 94] <author> K. Diks, E. Kranakis, D. Krizanc, B. Mans, and A. Pelc. </author> <title> Optimal coteries and voting schemes. </title> <journal> Inf. Proc. Letters, </journal> <volume> 51 </volume> <pages> 1-6, </pages> <year> 1994. </year>
Reference-contexts: Usually, assumptions such as independent failures and perfect communication are made to render the problem tractable. The results of this approach are rigorous and definitive. Analyses of the availability (probability that a live quorum exists in the system), assuming a complete and fault free network, can be found in <ref> [BG87, PW93, DKK + 94, SB94, AW95] </ref>. Analyses of the expected size of a connected component containing a quorum, and the availability on ring networks are [PS91, INK95]. An analysis of the load can be found in [NW94, HMP95]. <p> Within this model there are two sub-models: Uniform: The processors fail with the same, fixed probability p. If p &lt; 1=2 then [BG87] shows that the the majority system (i.e., a voting system with v i = 1 for all processors) has optimal availability. If p &gt; 1=2 then <ref> [PW93, DKK + 94] </ref> show that a monarchy (primary site) system is optimal. Non-Uniform: The processors have different failure probabilities p i . Then [SB94, AW95] show that the optimal availability quorum system is a voting system in which the votes depend on the failure probabilities p i as follows.
Reference: [GB85] <author> H. Garcia-Molina and D. Barbara. </author> <title> How to assign votes in a distributed system. </title> <journal> J. ACM, </journal> <volume> 32(4) </volume> <pages> 841-860, </pages> <year> 1985. </year>
Reference-contexts: A Quorum System is a set system S that has the Intersection property: S " R 6= ? for all S; R 2 S. The sets of the system are called quorums. Many quorum systems which are based on combinatorial constructions appear in the literature, such as <ref> [Mae85, GB85, AE91, CAA90, PW95] </ref>. However all the systems with optimal availability turn out to be defined by voting. Definition 2.2 Let v i be an integer vote assigned to processor i, and let V = P i v i .
Reference: [GL91] <author> R. Golding and D. D. E. </author> <title> Long. Accessing replicated data in a large scale distributed system. </title> <journal> Int. J. Comp. Simulation, </journal> <volume> 1(4) </volume> <pages> 347-372, </pages> <year> 1991. </year>
Reference-contexts: Analyses of the expected size of a connected component containing a quorum, and the availability on ring networks are [PS91, INK95]. An analysis of the load can be found in [NW94, HMP95]. A queuing system analysis is [MYK94]. * Simulation: In this approach (cf. <ref> [JR91, GL91, LAE95] </ref>) a simulation model is constructed, and a simulation is run. This approach allows more complex models, which can not be analyzed completely. Usually, much stronger assumptions are made, such as 1 failure distribution, mean-time to repair, etc.
Reference: [GSC + 83] <author> N. Goodman, D. Skeen, A. Chan, U. Dayal, S. Fox, and D. Ries. </author> <title> A recovery algorithm for a distributed database system. </title> <booktitle> In Proc. 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems, </booktitle> <address> Atlanta, </address> <year> 1983. </year> <month> 18 </month>
Reference-contexts: Looking more closely at the network structure (see Figure 1), we can see that "physical" segments are in fact implemented using several lower level physical devices, allowing for more intricate failure patterns. Protocols such as the Available Copy protocol <ref> [BG84, GSC + 83] </ref> rely on never incurring a partition, either for correctness or efficiency. In [PL90] it is argued that total failures or network partitions do not occur in practice, so the Available Copy protocol is a viable option.
Reference: [Her84] <author> M. P. Herlihy. </author> <title> Replication Methods for Abstract Data Types. </title> <type> PhD thesis, </type> <institution> Massachusetts Institute of Technology, MIT/LCS/TR-319, </institution> <year> 1984. </year>
Reference-contexts: Set systems with the intersection property are known as quorum systems, and the sets in such a system are called quorums. Quorum systems have been used in the study of distributed control and management problems such as data replication protocols (cf. <ref> [DGS85, Her84, Ami95b, Kei94] </ref>), name servers (cf. [MV88]), mutual exclusion (cf. [Ray86]), selective dissemination of information (cf. [YG94]), and distributed access control and signatures (cf. [NW96]). A protocol template based on quorum systems works as follows.
Reference: [Her87] <author> M. Herlihy. </author> <title> Dynamic quorum adjustment for partitioned data. </title> <journal> ACM Trans. Database Sys., </journal> <volume> 12(2) </volume> <pages> 170-194, </pages> <year> 1987. </year>
Reference-contexts: For a ring topology [PS91, INK95] give explicit optimal solutions. 4 2.3.3 Dynamic Quorums All the above mentioned optimal quorum systems are static. A more general type of system <ref> [Her87] </ref> is a dynamic one in which the quorums are defined adaptively over time (e.g., the vote of each processor may change).
Reference: [HMP95] <author> R. Holzman, Y. Marcus, and D. Peleg. </author> <title> Load balancing in quorum systems. </title> <booktitle> In Proc. 4th Workshop on Algorithms and Data Structures, </booktitle> <address> Kingston, Ont., Canada, </address> <year> 1995. </year>
Reference-contexts: Analyses of the expected size of a connected component containing a quorum, and the availability on ring networks are [PS91, INK95]. An analysis of the load can be found in <ref> [NW94, HMP95] </ref>. A queuing system analysis is [MYK94]. * Simulation: In this approach (cf. [JR91, GL91, LAE95]) a simulation model is constructed, and a simulation is run. This approach allows more complex models, which can not be analyzed completely.
Reference: [INK95] <author> T. Ibaraki, H. Nagamochi, and T. Kameda. </author> <title> Optimal coteries for rings and related networks. Distrib. </title> <journal> Comput., </journal> <volume> 8 </volume> <pages> 191-201, </pages> <year> 1995. </year>
Reference-contexts: Analyses of the expected size of a connected component containing a quorum, and the availability on ring networks are <ref> [PS91, INK95] </ref>. An analysis of the load can be found in [NW94, HMP95]. A queuing system analysis is [MYK94]. * Simulation: In this approach (cf. [JR91, GL91, LAE95]) a simulation model is constructed, and a simulation is run. This approach allows more complex models, which can not be analyzed completely. <p> Therefore in such a model the network can partition into several disconnected components. In this model [BG87] show that the optimal availability quorum system is always contained within a single bi-connected component of the network, for any topology. For a ring topology <ref> [PS91, INK95] </ref> give explicit optimal solutions. 4 2.3.3 Dynamic Quorums All the above mentioned optimal quorum systems are static. A more general type of system [Her87] is a dynamic one in which the quorums are defined adaptively over time (e.g., the vote of each processor may change).
Reference: [JM90] <author> S. Jajodia and D. Mutchler. </author> <title> Dynamic voting algorithms for maintaining the consistency of a replicated database. </title> <journal> ACM Trans. Database Sys., </journal> <volume> 15(2) </volume> <pages> 230-280, </pages> <year> 1990. </year>
Reference-contexts: A more general type of system [Her87] is a dynamic one in which the quorums are defined adaptively over time (e.g., the vote of each processor may change). In <ref> [JM90] </ref> it is shown that dynamic voting has better availability than any static system, when the processors' time-to-failure and the time-to-repair have an exponential distribution (in addition to the independence assumptions) for fully connected networks. 3 Methods 3.1 The Network Our experimental system spans two geographical sites in Israel. <p> where the king resides has good accessibility (and hence good availability and average accessibility) but partitions degrade the accessibility from other segments (and hence the WorstUnAcc value is high). 5.2 Dynamic Systems We have evaluated five dynamic quorum systems, all of which are variants of the Dynamic Linear Voting (DLV) <ref> [JM90] </ref>. According to this protocol, when the network configuration changes, e.g., due to a processor failure, a processor recovery, a network partition or a network re-merge, the (single, if any) network component which contains a quorum now defines the entire universe, until the next configuration change.
Reference: [JR91] <author> D. B. Johnson and L. Raab. </author> <title> Effects of replication on data availability. </title> <journal> Int. J. Comp. Simulation, </journal> <volume> 1(4) </volume> <pages> 373-392, </pages> <year> 1991. </year>
Reference-contexts: Analyses of the expected size of a connected component containing a quorum, and the availability on ring networks are [PS91, INK95]. An analysis of the load can be found in [NW94, HMP95]. A queuing system analysis is [MYK94]. * Simulation: In this approach (cf. <ref> [JR91, GL91, LAE95] </ref>) a simulation model is constructed, and a simulation is run. This approach allows more complex models, which can not be analyzed completely. Usually, much stronger assumptions are made, such as 1 failure distribution, mean-time to repair, etc.
Reference: [JR95] <author> D. B. Johnson and L. Raab. </author> <title> A tight upper bound on the benefits of replica control protocols. </title> <journal> J. Computer System Sci., </journal> <volume> 51 </volume> <pages> 168-176, </pages> <year> 1995. </year>
Reference-contexts: When such an event occurs the service is completely halted. The un-availability is widely accepted as the measure by which quorum systems are evaluated. AvgUnAcc: Another appropriate measure <ref> [JR95] </ref> is the un-accessibility UA i of a processor i, i.e., the probability that the network component in which i resides does not contain a live quorum, given that i is alive.
Reference: [Kei94] <author> I. Keidar. </author> <title> A highly available paradigm for consistent object replication. </title> <type> Master's thesis, </type> <institution> Institute of Computer Science, The Hebrew University of Jerusalem, Israel, </institution> <year> 1994. </year>
Reference-contexts: Set systems with the intersection property are known as quorum systems, and the sets in such a system are called quorums. Quorum systems have been used in the study of distributed control and management problems such as data replication protocols (cf. <ref> [DGS85, Her84, Ami95b, Kei94] </ref>), name servers (cf. [MV88]), mutual exclusion (cf. [Ray86]), selective dissemination of information (cf. [YG94]), and distributed access control and signatures (cf. [NW96]). A protocol template based on quorum systems works as follows.
Reference: [LAE95] <author> M. L. Liu, D. Agrawal, and A. El Abbadi. </author> <title> On the implementation of the quorum concensus protocol. </title> <booktitle> In Proc. Parallel and Distributed Computing Systems., </booktitle> <address> Orlando, </address> <year> 1995. </year>
Reference-contexts: Analyses of the expected size of a connected component containing a quorum, and the availability on ring networks are [PS91, INK95]. An analysis of the load can be found in [NW94, HMP95]. A queuing system analysis is [MYK94]. * Simulation: In this approach (cf. <ref> [JR91, GL91, LAE95] </ref>) a simulation model is constructed, and a simulation is run. This approach allows more complex models, which can not be analyzed completely. Usually, much stronger assumptions are made, such as 1 failure distribution, mean-time to repair, etc.
Reference: [Mae85] <author> M. Maekawa. </author> <title> A p n algorithm for mutual exclusion in decentralized systems. </title> <journal> ACM Trans. Comp. Sys., </journal> <volume> 3(2) </volume> <pages> 145-159, </pages> <year> 1985. </year>
Reference-contexts: A Quorum System is a set system S that has the Intersection property: S " R 6= ? for all S; R 2 S. The sets of the system are called quorums. Many quorum systems which are based on combinatorial constructions appear in the literature, such as <ref> [Mae85, GB85, AE91, CAA90, PW95] </ref>. However all the systems with optimal availability turn out to be defined by voting. Definition 2.2 Let v i be an integer vote assigned to processor i, and let V = P i v i .
Reference: [MAMA94] <author> L. E. Moser, Y. Amir, P. M. Melliar-Smith, and D. A. Agarwal. </author> <title> Extended virtual synchrony. </title> <booktitle> In Proc. 14th Inter. Conf. Dist. Comp. Sys., </booktitle> <pages> pages 56-65, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: The Spread daemons are used to keep track of the membership lists of the dynamically changing connected network components. Spread complies with the extended virtual synchrony model <ref> [MAMA94] </ref>, developed in the Totem [AMMS + 95] and Transis [ADKM92b] projects. This model defines consistent semantics for services across all the daemons in a system that is prone to network partitions and processor crashes. <p> to Dyn WI). * Using the optimal weights had a minor effect in dynamic quorum systems, as was the case for static systems. 6 Clock Drifts As part of the wide area group communication protocol, each membership change that was observed by the member machines received an agreed identifier (see <ref> [MAMA94] </ref> for details regarding the group communication specifications). This identifier was then written to the local log file of each member machine, along with the local time at the writing machine and the list of current members in the component.
Reference: [MV88] <author> S. J. Mullender and P. M. B. Vitanyi. </author> <title> Distributed match-making. </title> <journal> Algorithmica, </journal> <volume> 3 </volume> <pages> 367-391, </pages> <year> 1988. </year>
Reference-contexts: Set systems with the intersection property are known as quorum systems, and the sets in such a system are called quorums. Quorum systems have been used in the study of distributed control and management problems such as data replication protocols (cf. [DGS85, Her84, Ami95b, Kei94]), name servers (cf. <ref> [MV88] </ref>), mutual exclusion (cf. [Ray86]), selective dissemination of information (cf. [YG94]), and distributed access control and signatures (cf. [NW96]). A protocol template based on quorum systems works as follows. In order to perform some action (update the database, say), the user selects a quorum and accesses all its elements.
Reference: [MYK94] <author> D. A. Menasce, Y. Yesha, and K. Kalpakis. </author> <title> On a unified framework for the evaluation of distributed quorum attainment protocols. </title> <journal> IEEE Trans. Software Eng., </journal> 20(11) 868-884, 1994. 
Reference-contexts: Analyses of the expected size of a connected component containing a quorum, and the availability on ring networks are [PS91, INK95]. An analysis of the load can be found in [NW94, HMP95]. A queuing system analysis is <ref> [MYK94] </ref>. * Simulation: In this approach (cf. [JR91, GL91, LAE95]) a simulation model is constructed, and a simulation is run. This approach allows more complex models, which can not be analyzed completely. Usually, much stronger assumptions are made, such as 1 failure distribution, mean-time to repair, etc.
Reference: [NW94] <author> M. Naor and A. Wool. </author> <title> The load, capacity and availability of quorum systems. </title> <booktitle> In Proc. 35th IEEE Symp. Found. of Comp. Science, </booktitle> <pages> pages 214-225, </pages> <year> 1994. </year>
Reference-contexts: Analyses of the expected size of a connected component containing a quorum, and the availability on ring networks are [PS91, INK95]. An analysis of the load can be found in <ref> [NW94, HMP95] </ref>. A queuing system analysis is [MYK94]. * Simulation: In this approach (cf. [JR91, GL91, LAE95]) a simulation model is constructed, and a simulation is run. This approach allows more complex models, which can not be analyzed completely.
Reference: [NW96] <author> M. Naor and A. Wool. </author> <title> Access control and signatures via quorum secret sharing. </title> <booktitle> In Proc. 3rd ACM Conf. Comp. and Comm. Security, </booktitle> <address> New Delhi, India, </address> <year> 1996. </year> <note> To appear, see also Technical Report CS95-19, </note> <institution> The Weizmann Institute of Science. </institution>
Reference-contexts: Quorum systems have been used in the study of distributed control and management problems such as data replication protocols (cf. [DGS85, Her84, Ami95b, Kei94]), name servers (cf. [MV88]), mutual exclusion (cf. [Ray86]), selective dissemination of information (cf. [YG94]), and distributed access control and signatures (cf. <ref> [NW96] </ref>). A protocol template based on quorum systems works as follows. In order to perform some action (update the database, say), the user selects a quorum and accesses all its elements.
Reference: [Ogg95] <author> M. Ogg, </author> <year> 1995. </year> <type> Personal communication. 19 </type>
Reference-contexts: The crash distribution is presented in Table 1. The average fraction of "down-time" over all of the machines is 6.08%. The average after discarding the four extreme values (the two highest and the two lowest) is 3.86%. This is consistent with the measurements reported by <ref> [Ogg95] </ref> (although the latter were performed using the simple "ping" utility which does not distinguish between real crashes and network partitions). The data clearly shows that relatively high failure probabilities are common. Three out of the fourteen machines incurred more than 6% down-time, and one even reached 36%.
Reference: [PL90] <author> J.-F. P^aris and D. D. E. </author> <title> Long. The performance of available copy protocols for the management of replicated data. Performance Evaluation, </title> <booktitle> 11 </booktitle> <pages> 9-30, </pages> <year> 1990. </year>
Reference-contexts: Protocols such as the Available Copy protocol [BG84, GSC + 83] rely on never incurring a partition, either for correctness or efficiency. In <ref> [PL90] </ref> it is argued that total failures or network partitions do not occur in practice, so the Available Copy protocol is a viable option. Our findings indicate that such protocols may experience partitions even on a single-segment modern network.
Reference: [PS91] <author> C. H. Papadimitriou and M. Sideri. </author> <title> Optimal coteries. </title> <booktitle> In Proc. 10th ACM Symp. Princip. of Dist. Comp., </booktitle> <pages> pages 75-80, </pages> <year> 1991. </year>
Reference-contexts: Analyses of the expected size of a connected component containing a quorum, and the availability on ring networks are <ref> [PS91, INK95] </ref>. An analysis of the load can be found in [NW94, HMP95]. A queuing system analysis is [MYK94]. * Simulation: In this approach (cf. [JR91, GL91, LAE95]) a simulation model is constructed, and a simulation is run. This approach allows more complex models, which can not be analyzed completely. <p> Therefore in such a model the network can partition into several disconnected components. In this model [BG87] show that the optimal availability quorum system is always contained within a single bi-connected component of the network, for any topology. For a ring topology <ref> [PS91, INK95] </ref> give explicit optimal solutions. 4 2.3.3 Dynamic Quorums All the above mentioned optimal quorum systems are static. A more general type of system [Her87] is a dynamic one in which the quorums are defined adaptively over time (e.g., the vote of each processor may change).
Reference: [PW93] <author> D. Peleg and A. Wool. </author> <title> The availability of quorum systems. </title> <type> Technical Report CS93-17, </type> <institution> The Weizmann Institute of Science, Rehovot, Israel, </institution> <year> 1993. </year> <note> To appear in Information and Computation, </note> <year> 1996. </year>
Reference-contexts: Usually, assumptions such as independent failures and perfect communication are made to render the problem tractable. The results of this approach are rigorous and definitive. Analyses of the availability (probability that a live quorum exists in the system), assuming a complete and fault free network, can be found in <ref> [BG87, PW93, DKK + 94, SB94, AW95] </ref>. Analyses of the expected size of a connected component containing a quorum, and the availability on ring networks are [PS91, INK95]. An analysis of the load can be found in [NW94, HMP95]. <p> Within this model there are two sub-models: Uniform: The processors fail with the same, fixed probability p. If p &lt; 1=2 then [BG87] shows that the the majority system (i.e., a voting system with v i = 1 for all processors) has optimal availability. If p &gt; 1=2 then <ref> [PW93, DKK + 94] </ref> show that a monarchy (primary site) system is optimal. Non-Uniform: The processors have different failure probabilities p i . Then [SB94, AW95] show that the optimal availability quorum system is a voting system in which the votes depend on the failure probabilities p i as follows.
Reference: [PW95] <author> D. Peleg and A. Wool. Crumbling walls: </author> <title> A class of practical and efficient quorum systems. </title> <booktitle> In Proc. 14th ACM Symp. Princip. of Dist. Comp., </booktitle> <pages> pages 120-129, </pages> <address> Ottawa, Canada, </address> <year> 1995. </year>
Reference-contexts: A Quorum System is a set system S that has the Intersection property: S " R 6= ? for all S; R 2 S. The sets of the system are called quorums. Many quorum systems which are based on combinatorial constructions appear in the literature, such as <ref> [Mae85, GB85, AE91, CAA90, PW95] </ref>. However all the systems with optimal availability turn out to be defined by voting. Definition 2.2 Let v i be an integer vote assigned to processor i, and let V = P i v i .
Reference: [Ray86] <author> M. Raynal. </author> <title> Algorithms for Mutual Exclusion. </title> <publisher> MIT press, </publisher> <year> 1986. </year>
Reference-contexts: Quorum systems have been used in the study of distributed control and management problems such as data replication protocols (cf. [DGS85, Her84, Ami95b, Kei94]), name servers (cf. [MV88]), mutual exclusion (cf. <ref> [Ray86] </ref>), selective dissemination of information (cf. [YG94]), and distributed access control and signatures (cf. [NW96]). A protocol template based on quorum systems works as follows. In order to perform some action (update the database, say), the user selects a quorum and accesses all its elements.
Reference: [SB94] <author> M. Spasojevic and P. Berman. </author> <title> Voting as the optimal static pessimistic scheme for managing replicated data. </title> <journal> IEEE Trans. Par. Dist. Sys., </journal> <volume> 5(1) </volume> <pages> 64-73, </pages> <year> 1994. </year>
Reference-contexts: Usually, assumptions such as independent failures and perfect communication are made to render the problem tractable. The results of this approach are rigorous and definitive. Analyses of the availability (probability that a live quorum exists in the system), assuming a complete and fault free network, can be found in <ref> [BG87, PW93, DKK + 94, SB94, AW95] </ref>. Analyses of the expected size of a connected component containing a quorum, and the availability on ring networks are [PS91, INK95]. An analysis of the load can be found in [NW94, HMP95]. <p> If p &gt; 1=2 then [PW93, DKK + 94] show that a monarchy (primary site) system is optimal. Non-Uniform: The processors have different failure probabilities p i . Then <ref> [SB94, AW95] </ref> show that the optimal availability quorum system is a voting system in which the votes depend on the failure probabilities p i as follows. If p i 1=2 for all i then a monarchy with the least fail-prone processor acting as king is optimal. <p> for King HU to the Maj HU, Maj HU-Pub and Maj HU-Lab systems in Table 4. * Using the aposteriori weights computed from the observed failure probabilities improved the availability (compare the Maj All to Weight All data and the Maj WI to the Weight WI data), as predicted by <ref> [SB94] </ref>. However the improvement is small (less than 0.2%). This can be explained by the fact the computed weights are rather close in value.
Reference: [YG94] <author> T. W. Yan and H. Garcia-Molina. </author> <title> Distributed selective dissemination of information. </title> <booktitle> In Proc. 3rd Inter. Conf. Par. Dist. Info. Sys., </booktitle> <pages> pages 89-98, </pages> <year> 1994. </year> <month> 20 </month>
Reference-contexts: Quorum systems have been used in the study of distributed control and management problems such as data replication protocols (cf. [DGS85, Her84, Ami95b, Kei94]), name servers (cf. [MV88]), mutual exclusion (cf. [Ray86]), selective dissemination of information (cf. <ref> [YG94] </ref>), and distributed access control and signatures (cf. [NW96]). A protocol template based on quorum systems works as follows. In order to perform some action (update the database, say), the user selects a quorum and accesses all its elements.
References-found: 38

