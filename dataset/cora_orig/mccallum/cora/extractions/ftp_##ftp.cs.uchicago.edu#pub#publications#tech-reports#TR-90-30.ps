URL: ftp://ftp.cs.uchicago.edu/pub/publications/tech-reports/TR-90-30.ps
Refering-URL: http://cs-www.uchicago.edu/publications/tech-reports/
Root-URL: 
Title: PP is Closed Under Truth-Table Reductions  
Author: Lance Fortnow Nick Reingold 
Affiliation: University of Chicago Yale University  
Abstract: Beigel, Reingold and Spielman [BRS] showed that PP is closed under intersection and a variety of special cases of truth-table closure. We extend the techniques in [BRS] to show PP is closed under general polynomial-time truth-table reductions. 
Abstract-found: 1
Intro-found: 1
Reference: [BRS] <author> Beigel, R., N. Reingold and D. Spielman, </author> <title> "PP is Closed Under Intersection", </title> <booktitle> Proc. 23rd STOC, </booktitle> <year> 1991. </year>
Reference-contexts: Gill left open the question as to whether PP is closed under intersection. Recently Beigel, Reingold and Spielman <ref> [BRS] </ref> showed that in fact PP is closed under intersection. They also showed PP is closed under a variety of other reductions including polynomial-time conjunctive and disjunctive reductions, bounded-depth Boolean formula reductions, O (log n) Turing reductions, threshold reductions, symmetric reductions, and multilinear reductions. <p> However they left open the question as to whether PP is closed under general truth-table reductions. In this note, we extend the techniques of <ref> [BRS] </ref> to show that PP is closed under general polynomial-time truth-table reductions. This implies PP is closed under all the reductions listed above. 2 Definitions Let M be a nondeterministic polynomial-time Turing machine. <p> Idea of Proof: We create a rational function that captures the multilinear extension of the truth-table function f over GAPs of machines. Using techniques drawn from <ref> [BRS] </ref> we create a new nondeterministic machine whose GAP has the same sign as this rational function. We start the full proof with the following polynomials and rational functions similar to those defined in [BRS]: P m (z) = (z 1) i=1 T (k) (P m (z)) 2dlog ke+1 (P m <p> Using techniques drawn from <ref> [BRS] </ref> we create a new nondeterministic machine whose GAP has the same sign as this rational function. We start the full proof with the following polynomials and rational functions similar to those defined in [BRS]: P m (z) = (z 1) i=1 T (k) (P m (z)) 2dlog ke+1 (P m (z)) 2dlog ke+1 + (P m (z)) 2dlog ke+1 As in Lemmas 8 and 10 of [BRS], we can easily prove the following: Lemma 1 The function T (k) m (z) is a rational <p> We start the full proof with the following polynomials and rational functions similar to those defined in <ref> [BRS] </ref>: P m (z) = (z 1) i=1 T (k) (P m (z)) 2dlog ke+1 (P m (z)) 2dlog ke+1 + (P m (z)) 2dlog ke+1 As in Lemmas 8 and 10 of [BRS], we can easily prove the following: Lemma 1 The function T (k) m (z) is a rational function of order O (m + log k) such that if z is an integer and 1. 1 z 2 m then 1 T (k) k . 2. 2 m z 1 then <p> A constructive proof can be found in <ref> [BRS] </ref> and [FFK].
Reference: [FFK] <author> Fenner, S., L. Fortnow and S. Kurtz, </author> <title> "Gap Definable Counting Classes", </title> <booktitle> these proceedings. </booktitle>
Reference-contexts: The GAP functions are studied in depth in <ref> [FFK] </ref>. A language L is in PP if there exists a nondeterministic polynomial-time Turing machine M such that x 2 L when GAP (M; x) &gt; 0 and x 62 L when GAP (M; x) &lt; 0. PP was first defined independently by Gill [G] and Si-mon [S]. <p> A constructive proof can be found in [BRS] and <ref> [FFK] </ref>.
Reference: [G] <author> Gill, J., </author> <title> "Computation Complexity of Probabilistic Turing Machines", </title> <journal> SIAM J. Comp. </journal> <volume> 6 4, </volume> <year> 1977, </year> <pages> pp. 675-695. </pages>
Reference-contexts: 1 Introduction In the seminal paper on probabilistic computation, Gill <ref> [G] </ref> defined the class PP, the class of problems decidable by a probabilistic polynomial-time Turing machine that need only accept a string with probability at least one-half. Gill left open the question as to whether PP is closed under intersection. <p> A language L is in PP if there exists a nondeterministic polynomial-time Turing machine M such that x 2 L when GAP (M; x) &gt; 0 and x 62 L when GAP (M; x) &lt; 0. PP was first defined independently by Gill <ref> [G] </ref> and Si-mon [S]. Let L (x) be the characteristic function for the language L.
Reference: [MP] <author> Minsky, M., S. </author> <title> Papert, </title> <publisher> Perceptrons MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1988. </year> <note> Expanded Edition. </note>
Reference-contexts: constant k, answering a question of Toda (private communication). 4 Further Research Ideally, we would like to know whether PP is closed under Turing reductions, i.e. is P PP =PP? We will probably need new techniques to solve this question because there exist oracles that make this statement false (see <ref> [MP] </ref>, for example) and all the proofs in this note relativize.
Reference: [S] <author> Simon, J. </author> <title> "On Some Central Problems in Computational Complexity," </title> <type> Ph.D. Thesis, </type> <institution> Cornell University, Computer Science, </institution> <type> Tech Report TR 75-224, </type> <year> 1975. </year>
Reference-contexts: A language L is in PP if there exists a nondeterministic polynomial-time Turing machine M such that x 2 L when GAP (M; x) &gt; 0 and x 62 L when GAP (M; x) &lt; 0. PP was first defined independently by Gill [G] and Si-mon <ref> [S] </ref>. Let L (x) be the characteristic function for the language L.
References-found: 5

