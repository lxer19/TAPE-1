URL: http://www.cs.cornell.edu/home/skeshav/tenet/Keshav91a.ps
Refering-URL: http://www.cs.cornell.edu/skeshav/real/changes.html
Root-URL: http://www.cs.brown.edu/
Email: keshav@tenet.Berkeley.EDU  
Title: A Control-Theoretic Approach to Flow Control  
Author: Srinivasan Keshav 
Address: Berkeley, CA 94720, USA.  
Affiliation: Computer Science Division, Department of EECS, University of California, Berkeley, and International Computer Science Institute  
Abstract: This paper presents a control-theoretic approach to reactive flow control in networks that do not reserve bandwidth. We assume a round-robin-like queue service discipline in the output queues of the network's switches, and propose deterministic and stochastic models for a single conversation in a network of such switches. These models motivate the Packet-Pair rate probing technique, and a provably stable rate-based flow control scheme. A Kalman state estimator is derived from discrete-time state space analysis, but there are difficulties in using the estimator in practice. These difficulties are overcome by a novel estimation scheme based on fuzzy logic. We then present a technique to extract and use additional information from the system to develop a continuous-time system model. This is used to design a variant of the control law that is also provably stable, and, in addition, takes control action as rapidly as possible. Finally, practical issues such as correcting parameter drift and coordination with window flow control are described. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> D. Ferrari, </author> <title> Client Requirements for Real-Time Communications Services, </title> <journal> IEEE Communications Magazine 28, </journal> <month> 11 (November </month> <year> 1990). </year>
Reference-contexts: 1. Introduction As networks move towards integrated service, there is a need for network control mechanisms that can provide users with different qualities of service in terms of throughput, delay and delay jitter <ref> [1] </ref>.
Reference: 2. <author> C. R. Kalmanek, H. Kanakia and S. Keshav, </author> <title> Rate Controlled Servers for Very High Speed Networks, </title> <booktitle> Proc. Globecom 1990, </booktitle> <month> December </month> <year> 1990, </year> <month> 300.3.1-300.3.9. </month>
Reference-contexts: This approach can be used to control both transport connections in reservationless networks, and so-called `best-effort' connections in reservation-oriented networks <ref> [2] </ref>. A control theoretic approach to flow control requires that changes in the network state be observable.
Reference: 3. <author> D. Ferrari and D. Verma, </author> <title> A Scheme for Real-Time Channel Establishment in Wide-Area Networks, </title> <journal> IEEE J. on Selected Areas in Communications, </journal> <month> April </month> <year> 1990. </year>
Reference: 4. <author> S. J. Golestani, </author> <title> A Stop-and-Go Queueing Framework for Congestion Management, </title> <booktitle> Proc. ACM SigComm 1990, </booktitle> <month> September </month> <year> 1990, </year> <pages> 8-18. </pages>
Reference: 5. <author> L. Zhang, </author> <title> A New Architecture for Packet Switching Network Protocols, </title> <type> PhD thesis, </type> <institution> Massachusetts Institute of Technology, </institution> <month> July </month> <year> 1989. </year>
Reference-contexts: This idea lies behind the Fair Queueing service discipline [10]. In recent work it has been shown that Fair Queueing is quite similar to the Virtual Clock <ref> [5] </ref> discipline [11]. Thus, we will refer to both as Rate Allocating Servers (RASs); the reason for this name will shortly become clear. While the Virtual Clock scheduling discipline was originally presented in the context of a reservation-oriented network layer, we study its behavior in reservationless networks.
Reference: 6. <author> S. Keshav, A. K. Agrawala and S. Singh, </author> <title> Design and Analysis of a Flow Control Algorithm for a Network of Rate Allocating Servers, in Protocols for High Speed Networks II, </title> <publisher> Elsevier Science Publishers/North-Holland, </publisher> <month> April </month> <year> 1991. </year>
Reference: 7. <author> S. Singh, A. K. Agrawala and S. Keshav, </author> <title> Deterministic Analysis of Flow and Congestion Control Policies in Virtual Circuits, </title> <type> Tech. </type> <institution> Rpt.-2490, University of Maryland, </institution> <month> June </month> <year> 1990. </year>
Reference-contexts: Thus, we would like to use an approach that models network transients explicitly. We choose to model a network of RASs deterministically since it has been shown that a deterministic modeling of a RAS network allows network transients to be calculated exactly <ref> [7] </ref>. Waclawsky and Agrawala have developed and analyzed a similar deterministic model for studying the effect of window flow control protocols on virtual circuit dynamics [13, 14]. However, this approach can be too simplistic, since it ignores the variations in the allocated service rate discussed in 2. <p> However, this approach can be too simplistic, since it ignores the variations in the allocated service rate discussed in 2. So, we first summarize a deterministic model similar to the one presented in <ref> [7] </ref>, and then present a stochastic extension. 3.1. Deterministic Model We model a conversation in a FQ network as a regular flow of packets from a source to a destination (sink) over a series of servers (routers or switches) connected by links. <p> This simplification allows us to ignore start-up transients in our analysis. The start-up costs can, in fact, be significant, and these are analyzed in <ref> [7] </ref>. The time taken to get service at each server is finite and deterministic. If the ith server is idle when a packet arrives, the time taken for service is s i , and the (instantaneous) service rate is defined to be r i = 1/ s i .
Reference: 8. <author> S. Keshav, </author> <title> The Packet Pair Flow Control Protocol, </title> <type> Tech. </type> <institution> Rpt. 91-028, International Comp. Sci. Institute , Berkeley, </institution> <address> CA 94704, </address> <month> May </month> <year> 1991. </year>
Reference: 9. <author> A. Greenberg and N. </author> <title> Madras, How Fair is Fair Queueing?, </title> <booktitle> Proc. Performance 90, </booktitle> <year> 1990. </year>
Reference-contexts: Suppose packets are stamped with a priority index that corresponds to the time of service of the packet were the server actually to do TDM. It can be shown that service in order of increasing priority index has the effect of approximately emulating TDM without its attendant inefficiencies <ref> [9] </ref>. This idea lies behind the Fair Queueing service discipline [10]. In recent work it has been shown that Fair Queueing is quite similar to the Virtual Clock [5] discipline [11].
Reference: 10. <author> A. Demers, S. Keshav and S. Shenker, </author> <title> Analysis and Simulation of a Fair Queueing Algorithm, </title> <journal> Journal of Internetworking Research and Experience, </journal> <month> September </month> <year> 1990, </year> <pages> 3-26;. </pages> <note> also Proc. ACM SigComm, Sept. 1989, pp 1 12.. </note>
Reference-contexts: It can be shown that service in order of increasing priority index has the effect of approximately emulating TDM without its attendant inefficiencies [9]. This idea lies behind the Fair Queueing service discipline <ref> [10] </ref>. In recent work it has been shown that Fair Queueing is quite similar to the Virtual Clock [5] discipline [11]. Thus, we will refer to both as Rate Allocating Servers (RASs); the reason for this name will shortly become clear. <p> While considerations of space do not allow us to present detailed results in this paper, they can be summarized as The performance of the flow control with Fair Queueing servers in the benchmark suite described in reference <ref> [10] </ref> is comparable to that of the DECbit scheme [47], but with out any need for switches to set bits. The flow control algorithm responds quickly and cleanly to changes in network state.
Reference: 11. <author> H. Zhang and S. Keshav, </author> <title> Comparison of Rate-Based Service Disciplines, </title> <booktitle> Proc. ACM SigComm 1991, </booktitle> <month> September </month> <year> 1991. </year> <note> also International Comp. </note> <institution> Sci. Institute Tech. Rpt. 91-024, Berkeley, CA.. </institution>
Reference-contexts: This idea lies behind the Fair Queueing service discipline [10]. In recent work it has been shown that Fair Queueing is quite similar to the Virtual Clock [5] discipline <ref> [11] </ref>. Thus, we will refer to both as Rate Allocating Servers (RASs); the reason for this name will shortly become clear. While the Virtual Clock scheduling discipline was originally presented in the context of a reservation-oriented network layer, we study its behavior in reservationless networks. This raises an important point.
Reference: 12. <author> S. Tripathi and A. Duda, </author> <title> Time-dependent Analysis of Queueing Systems, </title> <booktitle> INFOR 24, 3 (1978), </booktitle> <pages> 334-346. </pages>
Reference-contexts: Though the Chapman-Kolmogorov differential equations do give the exact dynamics of a M/M/1 queue, the solution of these equations is equivalent to evaluating an infinite sum of Bessel functions <ref> [12] </ref>. This problem is made more complicated if the network is non-Jacksonian (as in our case). Thus, we feel that by using a queueing network model, transient analysis becomes cumbersome and sometimes impossible. However, flow control depends precisely on such transients.
Reference: 13. <author> J. G. Waclawsky, </author> <title> Window Dynamics, </title> <type> PhD Thesis, </type> <institution> Univer sity of Maryland, College Park, </institution> <month> May </month> <year> 1990. </year>
Reference-contexts: Waclawsky and Agrawala have developed and analyzed a similar deterministic model for studying the effect of window flow control protocols on virtual circuit dynamics <ref> [13, 14] </ref>. However, this approach can be too simplistic, since it ignores the variations in the allocated service rate discussed in 2. So, we first summarize a deterministic model similar to the one presented in [7], and then present a stochastic extension. 3.1.
Reference: 14. <author> J. G. Waclawsky and A. K. Agrawala, </author> <title> Dynamic Behavior of Data Flow within Virtual Circuits, </title> <journal> Comp. </journal> <note> Sci.-Tech. Rpt.-2250, University of Maryland , May 1989. </note>
Reference-contexts: Waclawsky and Agrawala have developed and analyzed a similar deterministic model for studying the effect of window flow control protocols on virtual circuit dynamics <ref> [13, 14] </ref>. However, this approach can be too simplistic, since it ignores the variations in the allocated service rate discussed in 2. So, we first summarize a deterministic model similar to the one presented in [7], and then present a stochastic extension. 3.1.
Reference: 15. <author> B. D. O. Anderson and J. B. Moore, </author> <title> Optimal Filtering, </title> <publisher> Prentice Hall, </publisher> <year> 1979. </year>
Reference-contexts: Since the changes in the service rate are due to the effect of uncorrelated input traffic, we think that this is valid. However, the gaussian assumption is harder to justify. As mentioned in <ref> [15] </ref>, many noise sources in nature are gaussian. Second, a good rule of thumb is that the gaussian assumption will reflect at least the first order dynamics of any noise distribution. Finally, for any reasonably simple control theoretic formulation (using Kalman estimation) the gaussian white noise assumption is unavoidable.
Reference: 16. <author> K. K. Sabnani and A. N. Netravali, </author> <title> A High Speed Transport Protocol for Datagram/Virtual Circuit Networks, </title> <booktitle> Proc. ACM SigComm 1989, </booktitle> <month> September </month> <year> 1989, </year> <pages> 146-157. </pages>
Reference-contexts: This has the effect of increasing the estimate of m. Note that this source of error will persist even if the inter-ack spacing is noted at the sink and sent to the source using a state exchange scheme <ref> [16] </ref>. Measuring m at the sink will reduce the effect of noise, but cannot eliminate it, since any server that is after the bottleneck could also cause a noise in the measurement. We model this error in measurement as an observation noise.
Reference: 17. <author> B. D. O. Anderson and J. B. Moore, </author> <title> Linear Quadratic Methods, </title> <publisher> Prentice Hall, </publisher> <year> 1990. </year>
Reference-contexts: Design Strategy This section describes the strategy used to design the flow-control mechanism, some preliminary considerations, and the detailed design. The design strategy for the flow control mechanism is based upon the Separation Theorem <ref> [17] </ref>. Informally, the theorem states that for a linear stochastic system where an observer is used to estimate the system state, the eigenvalues of the state estimator and the controller are separate.
Reference: 18. <author> D. Mitra and J. B. Seery, </author> <title> Dynamic Adaptive Windows for High Speed Data Networks: </title> <booktitle> Theory and Simulations , Proc. ACM SigComm 1990, </booktitle> <month> September </month> <year> 1990, </year> <pages> 30-40. </pages>
Reference-contexts: Of course, any other setpoint can be chosen with no loss of generality. Recent work by Mitra et al has shown that asymptotic analysis of product form queueing networks can be used to derive an optimal value of the setpoint <ref> [18, 19] </ref>. The application of their ideas to this problem is explored in reference [20]. 5.2. Frequency of Control We initially restrict control actions to only once per round trip time (RTT) (this restriction is removed in section 9).
Reference: 19. <author> D. Mitra, </author> <title> Asymptotically Optimal Design of Congestion Control for High Speed Data Networks, </title> <note> To Appear in IEEE Trans. on Communications, </note> <year> 1991. </year>
Reference-contexts: Of course, any other setpoint can be chosen with no loss of generality. Recent work by Mitra et al has shown that asymptotic analysis of product form queueing networks can be used to derive an optimal value of the setpoint <ref> [18, 19] </ref>. The application of their ideas to this problem is explored in reference [20]. 5.2. Frequency of Control We initially restrict control actions to only once per round trip time (RTT) (this restriction is removed in section 9). <p> We also make the fluid approximation [29], so packet boundaries are ignored, and the data flow is like that of a fluid in a hydraulic system. This approximation is commonly used [30, 31], and both analysis <ref> [19] </ref> and our simulations show that the approximation is a close one, particularly when the bandwidth-delay product is large [20]. Let us assume that l is held fixed for some duration J.
Reference: 20. <author> S. Keshav, </author> <title> Congestion Control in Computer Networks, </title> <institution> PhD thesis , University of California, Berkeley , August 1991. </institution>
Reference-contexts: Recent work by Mitra et al has shown that asymptotic analysis of product form queueing networks can be used to derive an optimal value of the setpoint [18, 19]. The application of their ideas to this problem is explored in reference <ref> [20] </ref>. 5.2. Frequency of Control We initially restrict control actions to only once per round trip time (RTT) (this restriction is removed in section 9). For the purpose of exposition, divide time into epochs of length RTT (= R + queueing delays) (Figure 2). <p> The exact value chosen for a controls the rise time of the system, and for adequate responsiveness, it should not be too small. Our simulations indi cate that a value of 0.9 is a good compromise between responsive ness and instability <ref> [20] </ref>. Similar studies are mentioned in [21]. 6. System non-linearity This section discusses a non-linearity in the system, and how it can be accounted for in the analysis. Note that the state equation (9) is correct when n b (k + 1 ) lies in the range 0 to B. <p> This approximation is commonly used [30, 31], and both analysis [19] and our simulations show that the approximation is a close one, particularly when the bandwidth-delay product is large <ref> [20] </ref>. Let us assume that l is held fixed for some duration J. <p> We have described two provably stable rate-based flow control schemes as well as a novel estimation scheme using fuzzy logic. Some practical concerns in implementing the scheme have also been addressed. The control law presented in 9.1 has been extensively simulated in a number of scenarios <ref> [20] </ref>.
Reference: 21. <author> A. E. Ekberg, D. T. Luan and D. M. Lucantoni, </author> <title> Bandwidth Management: A Congestion Control Strategy for Broadband Packet Networks: Characterizing the Throughput-Burstiness Filter, </title> <booktitle> Proc. ITC Specialist Seminar, </booktitle> <address> Adelaide, </address> <year> 1989, </year> <note> paper no. 4.4. </note>
Reference-contexts: The exact value chosen for a controls the rise time of the system, and for adequate responsiveness, it should not be too small. Our simulations indi cate that a value of 0.9 is a good compromise between responsive ness and instability [20]. Similar studies are mentioned in <ref> [21] </ref>. 6. System non-linearity This section discusses a non-linearity in the system, and how it can be accounted for in the analysis. Note that the state equation (9) is correct when n b (k + 1 ) lies in the range 0 to B.
Reference: 22. <author> K. Ogata, </author> <title> Discrete Time Control Systems, </title> <publisher> Prentice Hall, </publisher> <year> 1987. </year>
Reference-contexts: Hence, for small deviations from the set-point, the earlier stability proof, which assumes linearity, is suffi cient. For large deviations, stability must be proved by other methods, such as the second method of Liapunov <ref> [22] </ref> page 558. However, this is only as an academic exercise. In practice, the instability of the system means that n b can move arbitrarily away from the setpoint. In section 10.2, we show how window-based flow control can be used in conjunction with a rate-based approach.
Reference: 23. <author> G. C. Goodwin and K. S. </author> <title> Sin, Adaptive Filtering Prediction and Control, </title> <publisher> Prentice Hall, </publisher> <year> 1984. </year>
Reference-contexts: A practical scheme is presented in 8. Having derived the control law, and proved its stability, we now need to determine stable estimators for the system state. We choose to use Kalman estimation, since it is a well known and robust technique <ref> [23] </ref>. Before the technique is applied, a state space description of the system is necessary. 7.1. <p> Moreover, a Kalman filter can be manipulated to yield many other types of filters <ref> [23] </ref>. Thus, it is desirable to construct a Kal-man filter for x. <p> Hence, we will assume that the value of noise variances are supplied by the system administrator, and so matrices Q, R and S are known. It is now straightforward to apply Kalman filtering to the resultant system. We follow the derivation in <ref> [23] </ref> (pg 249).
Reference: 24. <author> H. J. Zimmerman, </author> <title> in Fuzzy Set Theory and its Applications, </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1985. </year>
Reference: 25. <author> L. A. Zadeh, </author> <title> Outline of a New Approach to the Analysis of Complex Systems and Decision Processes, </title> <journal> IEEE Trans. on Systems, Man and Cybernetics, </journal> <year> 1973, </year> <pages> 28-44. </pages>
Reference: 26. <author> G. Langari, </author> <title> Analysis and Design of Fuzzy Control Systems, </title> <type> PhD thesis (in preparation), </type> <institution> University of California, Berkeley, </institution> <year> 1991. </year>
Reference: 27. <author> L. A. Zadeh, </author> <title> Fuzzy Sets, </title> <journal> Journal of Information and Con trol 8 (1965), </journal> <pages> 338-353. </pages>
Reference-contexts: To summarize, the observation is that if the predictor error is large, then a should be small, and vice versa. Treating `small' and `large' as fuzzy linguistic variables <ref> [27] </ref>, this is the basis for a fuzzy controller for the estimation of a. 8.5.
Reference: 28. <author> P. S. Khedkar and S. Keshav, </author> <title> Fuzzy Prediction of Time-series, </title> <booktitle> Proc. IEEE Conference on Fuzzy Systems-92, </booktitle> <month> March </month> <year> 1992. </year>
Reference-contexts: The resulting system is shown in Figure 4. Exponential Averager Exponential Averager Fuzzy System Fuzzy System b z - 1 a Observation Proportional error Smoothed proportional error Esti mate q Details of the prediction system and a performance analysis can be found in reference <ref> [28] </ref>. 9. Using additional information This section describes how the frequency of control can be increased by using information about the propagation delay. Note that n b (k + 1 ), the estimate for the number of packets in the bottleneck queue, plays a critical role in the control system.
Reference: 29. <author> C. Agnew, </author> <title> Dynamic Modeling and Control of Congestion-prone Systems, </title> <journal> Operations Research 24, </journal> <volume> 3 (1976), 400 419. </volume>
Reference-contexts: This is demonstrated below. If control is done once every probe, then it is easier to work in continuous time. We also make the fluid approximation <ref> [29] </ref>, so packet boundaries are ignored, and the data flow is like that of a fluid in a hydraulic system. This approximation is commonly used [30, 31], and both analysis [19] and our simulations show that the approximation is a close one, particularly when the bandwidth-delay product is large [20]. <p> Further, we believe that our fuzzy scheme is a better way to predict service rate than their straightforward moving-average approach. A control theoretic approach to individual optimal flow control was described originally by Agnew <ref> [29] </ref> and since extended by Filipiak [42] and Tipper et al [30]. In their approach, a conversation is modeled by a first order differential equation, using the fluid approximation.
Reference: 30. <author> D. Tipper and M. K. Sundareshan, </author> <title> Numerical Methods for Modeling Computer Networks under Nonstationary Condi tions, </title> <address> JSAC 8, </address> <month> 9 (December </month> <year> 1990). </year>
Reference-contexts: If control is done once every probe, then it is easier to work in continuous time. We also make the fluid approximation [29], so packet boundaries are ignored, and the data flow is like that of a fluid in a hydraulic system. This approximation is commonly used <ref> [30, 31] </ref>, and both analysis [19] and our simulations show that the approximation is a close one, particularly when the bandwidth-delay product is large [20]. Let us assume that l is held fixed for some duration J. <p> Further, we believe that our fuzzy scheme is a better way to predict service rate than their straightforward moving-average approach. A control theoretic approach to individual optimal flow control was described originally by Agnew [29] and since extended by Filipiak [42] and Tipper et al <ref> [30] </ref>. In their approach, a conversation is modeled by a first order differential equation, using the fluid approximation. The modeling parameters are tuned so that, in the steady state, the solution of the differential equation and the solution of a corresponding queueing model agree.
Reference: 31. <author> J. Bolot, </author> <title> Dynamical Behavior of Rate-Based Flow Control Mechanisms, </title> <institution> Comp. Sci.-Tech. Rpt. 2279.1, University of Maryland, </institution> <month> October </month> <year> 1989. </year>
Reference-contexts: If control is done once every probe, then it is easier to work in continuous time. We also make the fluid approximation [29], so packet boundaries are ignored, and the data flow is like that of a fluid in a hydraulic system. This approximation is commonly used <ref> [30, 31] </ref>, and both analysis [19] and our simulations show that the approximation is a close one, particularly when the bandwidth-delay product is large [20]. Let us assume that l is held fixed for some duration J.
Reference: 32. <author> R. Jain, </author> <title> Myths About Congestion Management in High-Speed Networks, </title> <type> Technical Report-726, </type> <institution> Digital Equipment Corporation, </institution> <month> October </month> <year> 1990. </year>
Reference-contexts: To repeat, we use rate-based flow control to select an operating point, and window-based flow control as a conservative cut-off point. In this respect, we agree with Jain that the two forms of flow control are not diametrically opposed, but in fact can work together <ref> [32] </ref>. The choice of window size is critical. Using fixed sized windows is usually not possible in high speed networks, where the bandwidth-delay product, and hence the required window can be large (of the order of hundreds of kilobytes per conversation).
Reference: 33. <author> E. L. Hahne, C. R. Kalmanek and S. P. Morgan, </author> <title> Fairness and Congestion Control on a Large ATM Data Network with Dynamically Adjustable Windows, </title> <booktitle> 13th International Teletraffic Congress, </booktitle> <address> Copenhagen , June 1991. </address>
Reference-contexts: Using fixed sized windows is usually not possible in high speed networks, where the bandwidth-delay product, and hence the required window can be large (of the order of hundreds of kilobytes per conversation). In view of this, the adaptive window allocation scheme proposed by Hahne et al <ref> [33] </ref> is attractive. In their scheme, a conversation is allocated a flow control window that is always larger than the product of the allocated bandwidth at the bottleneck, and the round trip propagation delay. So, a conversation is never constrained by the size of the flow control window.
Reference: 34. <author> K. Bharath-Kumar and J. M. Jaffe, </author> <title> A New Approach to Performance-Oriented Flow Control, </title> <journal> IEEE Trans. on Com munication COM-29, </journal> <month> 4 (April </month> <year> 1981), </year> <pages> 427-435. </pages>
Reference: 35. <author> S. Shenker, </author> <title> A Theoretical Analysis of Feedback Flow Control, </title> <booktitle> Proc. ACM SigComm 1990, </booktitle> <month> September </month> <year> 1990, </year> <pages> 156-165. </pages>
Reference: 36. <author> C. Douligeris and R. Majumdar, </author> <title> User Optimal Flow Control in an Integrated Environment, </title> <booktitle> Proc. of the Indo-US Workshop on Systems and Signals, </booktitle> <month> January </month> <year> 1988. </year> <title> Banga lore, </title> <address> India. </address>
Reference: 37. <author> A. D. Bovopoulos and A. A. Lazar, </author> <title> Asynchronous Algorithms for Optimal Flow Control of BCMP Networks, </title> <type> Tech. </type> <institution> Rpt. WUCS-89-10, Washington University, </institution> <address> St. Louis, MO, </address> <month> February </month> <year> 1989. </year>
Reference: 38. <author> A. D. Bovopoulos and A. A. Lazar, </author> <title> Decentralized Algorithms for Optimal Flow Control, </title> <booktitle> Proc. 25th Allerton Conference on Communications Control and Computing, Octo ber 1987. </booktitle> <institution> University of Illinois, Urbana-Champaign. </institution>
Reference: 39. <author> K. K. Ramakrishnan and R. Jain, </author> <title> Congestion avoidance in Computer Networks with a Connectionless Network Layer - Part II - An Explicit Binary Feedback Scheme, </title> <type> Technical Report-508, </type> <institution> Digital Equipment Corporation, </institution> <month> April </month> <year> 1987. </year>
Reference-contexts: Also, in our approach, each user uses a rather complex flow update rule, based in part on fuzzy prediction, and so the analysis is not amenable to the simplistic approach of these authors. Some control principles have been appealed to in work by Jain <ref> [39] </ref> and Jacobson [40], but the approaches of these authors is quite informal. Further, their control systems take multiple round trip times to react to a change in the system state. In contrast, the system in 9.1 can take control action multiple times per RTT.
Reference: 40. <author> V. Jacobson, </author> <title> Congestion Avoidance and Control, </title> <booktitle> Proc. ACM SigComm 1988, </booktitle> <month> August </month> <year> 1988, </year> <pages> 314-329. </pages>
Reference-contexts: Also, in our approach, each user uses a rather complex flow update rule, based in part on fuzzy prediction, and so the analysis is not amenable to the simplistic approach of these authors. Some control principles have been appealed to in work by Jain [39] and Jacobson <ref> [40] </ref>, but the approaches of these authors is quite informal. Further, their control systems take multiple round trip times to react to a change in the system state. In contrast, the system in 9.1 can take control action multiple times per RTT. <p> The flow control algorithm responds quickly and cleanly to changes in network state. Unlike some current flow control algorithms (DECbit and Jacobson's modifications to 4.3 BSD <ref> [40, 47] </ref>), the system behaves extraordinarily well in situations where the bandwidth-delay product is large, even if the cross traffic is misbehaved or bursty. Implementation and tuning of the algorithm is straightforward, unlike the complex and ad-hoc controls in current flow control algorithms.
Reference: 41. <author> K. Ko, P. P. Mishra and S. K. Tripathi, </author> <title> Predictive Congestion Control in High-Speed Wide-Area Networks, in Protocols for High Speed Networks II, </title> <publisher> Elsevier Science Publishers/North-Holland, </publisher> <month> April </month> <year> 1991. </year>
Reference-contexts: Further, their control systems take multiple round trip times to react to a change in the system state. In contrast, the system in 9.1 can take control action multiple times per RTT. In a high bandwidth-delay product network, this is a significant advantage. In recent work, Ko et al <ref> [41] </ref> have studied an almost identical problem, and have applied principles of predictive control to hop-by-hop flow control. However, they appeal primarily to intuitive heuristics, and do not use a formal control-theoretic model, and hence are not able to prove stability of their system.
Reference: 42. <author> J. Filipiak, </author> <title> Modelling and Control of Dynamic Flows in Communication Networks, </title> <publisher> Springer-Verlag, </publisher> <year> 1988. </year>
Reference-contexts: Further, we believe that our fuzzy scheme is a better way to predict service rate than their straightforward moving-average approach. A control theoretic approach to individual optimal flow control was described originally by Agnew [29] and since extended by Filipiak <ref> [42] </ref> and Tipper et al [30]. In their approach, a conversation is modeled by a first order differential equation, using the fluid approximation. The modeling parameters are tuned so that, in the steady state, the solution of the differential equation and the solution of a corresponding queueing model agree.
Reference: 43. <author> F. Vakil, M. Hsiao and A. A. Lazar, </author> <title> Flow Control in Inte grated Local Area Networks, </title> <journal> Vol. </journal> <volume> 7, </volume> <year> 1987. </year>
Reference-contexts: This is not true for a RAS, where the service rate is independent of the queue length. Hence, we cannot apply their techniques to our problem. Vakil, Hsiao and Lazar <ref> [43] </ref> have used a control-theoretic approach to optimal flow control in double-bus TDMA local-area integrated voice/data networks. However, they assume exponential FCFS servers, and, since the network is not geographically dispersed, propagation delays are ignored.
Reference: 44. <author> F. Vakil and A. A. Lazar, </author> <title> Flow Control Protocols for Integrated Networks with Partially Observed Traffic, </title> <journal> IEEE Transactions on Automatic Control 32, </journal> <volume> 1 (1987), </volume> <pages> 2-14. </pages>
Reference-contexts: Vakil and Lazar <ref> [44] </ref> have considered the the design of optimal traffic filters when the state is not fully observable, but the filters are specialized for voice traffic.
Reference: 45. <author> T. G. Robertazzi and A. A. Lazar, </author> <title> On the Modeling and Optimal Flow Control of the Jacksonian Network, </title> <booktitle> Perfor mance Evaluation 5 (1985), </booktitle> <pages> 29-43. </pages>
Reference-contexts: Vakil and Lazar [44] have considered the the design of optimal traffic filters when the state is not fully observable, but the filters are specialized for voice traffic. Robertazzi and Lazar <ref> [45] </ref> and Hsiao and Lazar [46] have shown that under a variety of conditions, the optimal flow control for a Jacksonian network with Poisson traffic is bang-bang (approximated by a window scheme). It is not clear that this result holds when their strong assumptions are removed.
Reference: 46. <author> M. Hsiao and A. A. Lazar, </author> <title> Optimal Flow Control of Multi-Class Queueing Networks with Partial Information, </title> <journal> IEEE Transactions on Automatic Control 35, </journal> <month> 7 (July </month> <year> 1990), </year> <pages> 855 860. </pages>
Reference-contexts: Vakil and Lazar [44] have considered the the design of optimal traffic filters when the state is not fully observable, but the filters are specialized for voice traffic. Robertazzi and Lazar [45] and Hsiao and Lazar <ref> [46] </ref> have shown that under a variety of conditions, the optimal flow control for a Jacksonian network with Poisson traffic is bang-bang (approximated by a window scheme). It is not clear that this result holds when their strong assumptions are removed.
Reference: 47. <author> K. K. Ramakrishnan and R. Jain, </author> <title> A Binary Feedback Scheme for Congestion Avoidance in Computer Networks, </title> <journal> ACM ACM Trans. on Comp. Sys. </journal> <volume> 8, </volume> <month> 2 (May </month> <year> 1990), </year> <pages> 158 181. </pages>
Reference-contexts: While considerations of space do not allow us to present detailed results in this paper, they can be summarized as The performance of the flow control with Fair Queueing servers in the benchmark suite described in reference [10] is comparable to that of the DECbit scheme <ref> [47] </ref>, but with out any need for switches to set bits. The flow control algorithm responds quickly and cleanly to changes in network state. <p> The flow control algorithm responds quickly and cleanly to changes in network state. Unlike some current flow control algorithms (DECbit and Jacobson's modifications to 4.3 BSD <ref> [40, 47] </ref>), the system behaves extraordinarily well in situations where the bandwidth-delay product is large, even if the cross traffic is misbehaved or bursty. Implementation and tuning of the algorithm is straightforward, unlike the complex and ad-hoc controls in current flow control algorithms.
Reference: 48. <author> L. Zhang, S. Shenker and D. D. Clark, </author> <title> Observations on the Dynamics of a Congestion Control Algorithm: The Effects of Two-Way Traffic, </title> <booktitle> Proc. ACM SigComm 1991, Septem ber 1991. </booktitle>
Reference-contexts: Implementation and tuning of the algorithm is straightforward, unlike the complex and ad-hoc controls in current flow control algorithms. Even in complicated scenarios, the dynamics are simple to understand and manage: in contrast the dynamics of Jacobson's algorithm are messy and only partially under- stood <ref> [48] </ref>. In conclusion, we believe that our decision to use a formal control-theoretic approach in the design of a flow control algorithm has been a success. Our algorithm behaves well even under great stress, and, more importantly, it is simple to implement and tune.
Reference: 49. <author> C. R. Kalmanek, </author> <title> Xunet 2: A Nationwide Testbed in High-Speed Networking, </title> <institution> Comp. Sci. Tech. Rpt., </institution> <month> March </month> <year> 1991, </year> <institution> AT&T Bell Labs, </institution> <address> 600 Mountain Ave. Murray Hill, NJ 07974. </address>
Reference-contexts: Future Work This paper makes several simplifications and assumptions. It would be useful to measure real networks to see how far theory and practice agree. We plan to make such measurements in the XUNET II experimental high speed network testbed <ref> [49] </ref>. Other possible extensions are to design a minimum variance controller and a non-linear controller. 14. Acknowledgements The use of a noise variable to model the bottleneck service rate was suggested by G. Srinivasan.
References-found: 49

