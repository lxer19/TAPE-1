URL: http://www.cs.gatech.edu/people/home/gruia/ipco98a.ps.gz
Refering-URL: http://www.cs.gatech.edu/people/home/gruia/
Root-URL: 
Title: A New Approximation Algorithm for Finding Heavy Planar Subgraphs  
Author: Gruia Calinescu Cristina G. Fernandes Howard Karloff Alexander Zelikovsky 
Keyword: SUBGRAPH problem.  
Abstract: We provide the first algorithm with a nontrivial approximation ratio for MAXIMUM WEIGHT PLANAR SUBGRAPH, the NP-Hard problem of finding a heaviest planar subgraph in an edge-weighted graph G. This problem has applications in circuit layout, facility layout, and graph drawing. No previous algorithm for MAXIMUM WEIGHT PLANAR SUBGRAPH had performance ratio exceeding 1=3, which is obtained by any algorithm that produces a maximum weight spanning tree in G. Based on the Berman-Ramaiyer Steiner tree algorithm, the new algorithm has performance ratio at least 1=3 + 1=72. We also show that if G is complete and its edge weights satisfy the triangle inequality, then the performance ratio is at least 3=8. Furthermore, we derive the first nontrivial performance ratio (7=12 instead of 1=2) for the NP-Hard MAXIMUM WEIGHT OUTERPLANAR 
Abstract-found: 1
Intro-found: 1
Reference: [AMO93] <author> R. K. Ahuja, T. L. Magnanti and J. B. Orlin, </author> <title> Network Flows, </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1993. </year>
Reference: [B79] <author> B. Bollobas, </author> <title> Graph Theory An Introductory Course, </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1979. </year>
Reference: [BFP95] <author> R. P. G. Barlow, G. N. Fisher and S. N. Papantonopoulos, </author> <title> "The Application of a Knowledge-Based Engineering System to the Planning of Airport Facilities|a Case Study," </title> <booktitle> IEE Colloquium on Knowledge-Based Approaches to Automation in Construction, </booktitle> <year> 1995, </year> <pages> 1-4. </pages>
Reference-contexts: Architectural floor planning|graph-theoretic and not|has traditionally been used in the design of industrial plants [DFF85, Fo92, FR78, Mu94], but also in the design of airports <ref> [BFP95] </ref>, hospitals [E77], universities [DH72], and libraries [FT86]. Often m ij is the number of people expected to travel from facility i to facility j. Another important application of MAXIMUM WEIGHT PLANAR SUBGRAPH is circuit layout. [Ma78, Mu94].
Reference: [BNTT84] <author> C. Batini, E. Nardelli, M. Talamo and R. Tamassia, </author> <title> "A Graph-Theoretic Approach to Aesthetic Layout of Information Systems Diagrams," </title> <booktitle> Proc. 10th International Workshop on Graph-Theoretic Concepts in Computer Science, </booktitle> <year> 1984, </year> <pages> 9-18. </pages>
Reference-contexts: For a nonplanar graph G, one can start by drawing a planar subgraph of G, using some preferred method for drawing planar graphs <ref> [TDB88, BNTT84] </ref>, and then drawing the remaining edges. Planarization is the process of obtaining a planar graph from a nonplanar one [CNS79, OT81, JTS86].
Reference: [BM76] <author> J. A. Bondy and U. S. R. Murty, </author> <title> Graph Theory with Applications, </title> <publisher> MacMillan Press, </publisher> <year> 1976. </year>
Reference: [BR94] <author> P. Berman and V. Ramaiyer, </author> <title> "Improved Approximations for the Steiner Tree Problem," </title> <booktitle> Journal of Algorithms 17 (1994), </booktitle> <pages> 381-408. </pages>
Reference-contexts: Modeled on the two-phase Berman-Ramaiyer Steiner tree algorithm <ref> [BR94] </ref>, the algorithm is clearly polynomial-time. However, its analysis is difficult. A "road map" guiding the reader through the analysis appears in Section 3.1. 2 The Algorithm Let G = (V; E) be a connected graph with a nonnegative weight function w on the edges. <p> Corollary 2 S 0 is a connected triangular structure in G. 3.3 A Lower Bound on the Weight of S 0 We need the following lemma and its corollary, analogues of Steiner tree Lemmas 3.5 and 3.7 in <ref> [BR94] </ref>. Lemma 3 For i = 1; : : : ; f , w (S i1 ) w (S i ) g i1 ( i ). Proof. The proof follows the three cases from each iteration of the construction phase. <p> The following lemma is an analogue of Lemma 3.10 of <ref> [BR94] </ref>. Lemma 12 No triangle of the original graph G has positive gain with respect to T f . Proof. The previous two lemmas prove that for all , g f () 0. Let P = (V; E P ) be a any planar subgraph of G = (V; E).
Reference: [CFFK96a] <author> G. Calinescu, C. G. Fernandes, U. Finkler and H. Karloff, </author> <title> "A Better Approximation Algorithm for Finding Planar Subgraphs," </title> <booktitle> Proc. 7th Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <year> 1996, </year> <pages> 16-25. </pages>
Reference-contexts: In fact, MAXIMUM WEIGHT PLANAR SUBGRAPH is known to be Max SNP-Hard even when all the edge weights are one <ref> [CFFK96a] </ref>. This means there is an * &gt; 0 such that no approximation algorithm achieves a ratio of 1 * for the problem, unless P=NP. This *, however, is tiny, making 1 * very far from the best previously known performance ratio for MAXIMUM WEIGHT PLANAR SUBGRAPH, which was 1=3. <p> Besides, any algorithm that produces a maximum weight spanning tree (see Section 3.4) achieves the 1/3 ratio. See [DFF85] for three algorithms for the weighted case and <ref> [CFFK96a] </ref> for a list of three others for the unweighted case, all having performance ratio at most 1/3. In this paper, we present the first algorithm for MAXIMUM WEIGHT PLANAR SUBGRAPH to cross the 1/3 threshold: its performance ratio is at least 1=3 + 1=72. <p> In the unweighted case, any algorithm producing a spanning tree of G has performance ratio 1=3 (a spanning tree has n 1 edges and a planar subgraph has at most 3n 3), and a recent paper exhibited a polynomial-time algorithm with a performance ratio of 4=9 ([CFFK96b]; see also <ref> [CFFK96a] </ref>). However, the weighted case seems much more difficult. The key idea in the algorithms of [CFFK96a, CFFK96b] is to produce a graph all of whose cycles are triangles (a triangular structure, which is necessarily planar), having many triangles. <p> However, the weighted case seems much more difficult. The key idea in the algorithms of <ref> [CFFK96a, CFFK96b] </ref> is to produce a graph all of whose cycles are triangles (a triangular structure, which is necessarily planar), having many triangles. Each triangle gives one more edge than a spanning tree would have|the more triangles, the better. <p> Each triangle gives one more edge than a spanning tree would have|the more triangles, the better. A simple algorithm greedily choosing triangles and then connecting them achieves 1=3 + * for a fixed positive * <ref> [CFFK96a] </ref>. To get 4=9, one finds a largest triangular structure in the input graph, which, surprisingly, can be done in polynomial time. Unfortunately, the algorithms for the unweighted case do not work in the weighted case. First, one clearly cannot take arbitrary triangles, regardless of their weight. <p> Second, it is not known whether a heaviest triangular structure in G can be found in polynomial time. Graphical matroid parity is used to find a largest triangular structure in an unweighted graph <ref> [CFFK96a] </ref>, graphical matroid parity being solvable in polynomial time [GS85]; weighted graphical matroid parity is known neither to be NP-Hard nor in P. <p> We can prove a performance ratio of at least 7=12, whereas producing a spanning tree gives a performance ratio of 1=2. (The best ratio known in the unweighted case is 2=3 <ref> [CFFK96a, CFFK96b] </ref>.) Our algorithm exploits an analogy between Steiner trees and triangular structures. Modeled on the two-phase Berman-Ramaiyer Steiner tree algorithm [BR94], the algorithm is clearly polynomial-time. However, its analysis is difficult.
Reference: [CFFK96b] <author> G. Calinescu, C. G. Fernandes, U. Finkler and H. Karloff, </author> <title> "A Better Approximation Algorithm for Finding Planar Subgraphs," </title> <note> submitted for publication. (Improvement of [CFFK96a].) </note>
Reference-contexts: However, the weighted case seems much more difficult. The key idea in the algorithms of <ref> [CFFK96a, CFFK96b] </ref> is to produce a graph all of whose cycles are triangles (a triangular structure, which is necessarily planar), having many triangles. Each triangle gives one more edge than a spanning tree would have|the more triangles, the better. <p> We can prove a performance ratio of at least 7=12, whereas producing a spanning tree gives a performance ratio of 1=2. (The best ratio known in the unweighted case is 2=3 <ref> [CFFK96a, CFFK96b] </ref>.) Our algorithm exploits an analogy between Steiner trees and triangular structures. Modeled on the two-phase Berman-Ramaiyer Steiner tree algorithm [BR94], the algorithm is clearly polynomial-time. However, its analysis is difficult.
Reference: [CMWZZ94] <author> B. Chen, M. Matsumoto, J. Wang, Z. Zhang and J. Zhang, </author> <title> "A Short Proof of Nash-Williams' Theorem for the Arboricity of a Graph," </title> <booktitle> Graphs and Combinatorics 10 (1994), </booktitle> <pages> 27-28. </pages>
Reference-contexts: Theorem 5 (Nash-Williams; see <ref> [Na64, CMWZZ94] </ref>) The arboricity of a graph G is the maximum, over all subgraphs H of G with at least two vertices, of l jV (H)j1 .
Reference: [CN85] <author> N. Chiba and T. Nishizeki, </author> <title> "Arboricity and Subgraph Listing Algorithms," </title> <journal> SIAM Journal on Computing 14 (1985), </journal> <pages> 210-223. </pages>
Reference: [CNS79] <author> N. Chiba, T. Nishizeki and I. Shirakawa, </author> <title> "An Algorithm of Maximal Planarization of Graphs," </title> <booktitle> Proc. IEEE International Symposium on Circuits and Systems (1979), </booktitle> <pages> 649-652. 10 </pages>
Reference-contexts: For a nonplanar graph G, one can start by drawing a planar subgraph of G, using some preferred method for drawing planar graphs [TDB88, BNTT84], and then drawing the remaining edges. Planarization is the process of obtaining a planar graph from a nonplanar one <ref> [CNS79, OT81, JTS86] </ref>. If different edges are not equally important, each edge might come with a weight reflecting the importance of drawing that edge; the edges in a maximum weight planar subgraph would be drawn first.
Reference: [CON85] <author> N. Chiba, K. Onogushi and T. Nishizeki, </author> <title> "Drawing Planar Graphs Nicely," </title> <journal> Acta Informatica 22 (1985), </journal> <pages> 187-201. </pages>
Reference-contexts: A plane embedding of a planar graph G could naturally be viewed as "nice." Graph-drawing experts have studied many different ways of drawing planar graphs in the plane, so as to maximize some optimization criterion <ref> [CON85, CYN85, LNS85, Tu63] </ref>. For a nonplanar graph G, one can start by drawing a planar subgraph of G, using some preferred method for drawing planar graphs [TDB88, BNTT84], and then drawing the remaining edges.
Reference: [CST95] <author> P. Crescenzi, R. Silvestri and L. Trevisan, </author> <title> "To Weight or Not to Weight: Where is the Question?", </title> <booktitle> Proc. 4th Israel Symposium on Theory of Computing and Systems, </booktitle> <year> 1996, </year> <pages> 68-77. </pages>
Reference-contexts: For most approximation algorithms proposed recently, the performance ratios for the weighted cases are the same 2 as those for the unweighted cases <ref> [CST95, Sh95, GW95, FG95, Ho82, Ho97] </ref>. We, however, can prove only that the performance ratio for MAXIMUM WEIGHT PLANAR SUBGRAPH is at least 1=3 + 1=72, whereas the performance ratio for MAXIMUM PLANAR SUBGRAPH (the unweighted version) is at least 4=9. Of course, these are only the best bounds known.
Reference: [CYN85] <author> N. Chiba, T. Yamanouchi and T. Nishizeki, </author> <title> "Linear Algorithms for Convex Drawings of Planar Graphs," Progress in Graph Theory, </title> <editor> J. A. Bondy and U. S. R. Murty (eds.), </editor> <publisher> Academic Press, </publisher> <year> 1984, </year> <pages> 153-173. </pages>
Reference-contexts: A plane embedding of a planar graph G could naturally be viewed as "nice." Graph-drawing experts have studied many different ways of drawing planar graphs in the plane, so as to maximize some optimization criterion <ref> [CON85, CYN85, LNS85, Tu63] </ref>. For a nonplanar graph G, one can start by drawing a planar subgraph of G, using some preferred method for drawing planar graphs [TDB88, BNTT84], and then drawing the remaining edges.
Reference: [DETT94] <author> G. Di Battista, P. Eades, R. Tamassia and I. G. Tollis, </author> <title> "Algorithms for Drawing Graphs: an Annotated Bibliography," Computational Geometry: </title> <journal> Theory and Applications, </journal> <volume> 4 (5), </volume> <year> 1994, </year> <pages> 235-282. </pages>
Reference-contexts: Graph drawing is the process of drawing a graph, usually on a two-dimensional medium, as "nicely" as possible, where "nice" is defined by the application. A long annotated bibliography on the large class of graph-drawing algorithms is found in <ref> [DETT94] </ref>. A plane embedding of a planar graph G could naturally be viewed as "nice." Graph-drawing experts have studied many different ways of drawing planar graphs in the plane, so as to maximize some optimization criterion [CON85, CYN85, LNS85, Tu63].
Reference: [DFF85] <author> M. E. Dyer, L. R. Foulds and A. M. Frieze, </author> <title> "Analysis of Heuristics for Finding a Maximum Weight Planar Subgraph," </title> <journal> European Journal of Operations Research 20 (1985), </journal> <pages> 102-114. </pages>
Reference-contexts: Algorithms designed specifically for this weighted planar subgraph problem have been studied by Eades, Foulds and Griffin [EFG82], Junger and Mutzel [JM93], Dyer, Foulds and Frieze <ref> [DFF85] </ref>, and Foulds and Robinson [FR78]. Another application of MAXIMUM WEIGHT PLANAR SUBGRAPH is architectural floor planning: the laying out, in some optimal or near-optimal way, of a set of facilities [DFF85, Fo92, FR78, Mu94]. <p> Another application of MAXIMUM WEIGHT PLANAR SUBGRAPH is architectural floor planning: the laying out, in some optimal or near-optimal way, of a set of facilities <ref> [DFF85, Fo92, FR78, Mu94] </ref>. Krejcirik [Kr69] presented the first graph-theoretic approach to architectural floor planning, which sometimes yielded improved solutions [HW85]. For each pair of facilities (i; j), m ij denotes the desirability of placing i adjacent to j. <p> This problem can be modeled as an instance of MAXIMUM WEIGHT PLANAR SUBGRAPH: the vertices are the facilities and the weight of the edge between facilities i and j is m ij . Architectural floor planning|graph-theoretic and not|has traditionally been used in the design of industrial plants <ref> [DFF85, Fo92, FR78, Mu94] </ref>, but also in the design of airports [BFP95], hospitals [E77], universities [DH72], and libraries [FT86]. Often m ij is the number of people expected to travel from facility i to facility j. Another important application of MAXIMUM WEIGHT PLANAR SUBGRAPH is circuit layout. [Ma78, Mu94]. <p> This *, however, is tiny, making 1 * very far from the best previously known performance ratio for MAXIMUM WEIGHT PLANAR SUBGRAPH, which was 1=3. Besides, any algorithm that produces a maximum weight spanning tree (see Section 3.4) achieves the 1/3 ratio. See <ref> [DFF85] </ref> for three algorithms for the weighted case and [CFFK96a] for a list of three others for the unweighted case, all having performance ratio at most 1/3.
Reference: [DH72] <author> J. W. Dickey and J. Hopkins, </author> <title> "Campus Building Arrangements using TOPAZ," </title> <booktitle> Transportation Research 6 (1972), </booktitle> <pages> 59-68. </pages>
Reference-contexts: Architectural floor planning|graph-theoretic and not|has traditionally been used in the design of industrial plants [DFF85, Fo92, FR78, Mu94], but also in the design of airports [BFP95], hospitals [E77], universities <ref> [DH72] </ref>, and libraries [FT86]. Often m ij is the number of people expected to travel from facility i to facility j. Another important application of MAXIMUM WEIGHT PLANAR SUBGRAPH is circuit layout. [Ma78, Mu94].
Reference: [E77] <author> A. N. Elshafei, </author> <title> "Hospital Layout as a Quadratic Assignment Problem," </title> <journal> Operational Research Quarterly 28 (1977), </journal> <pages> 167-179. </pages>
Reference-contexts: Architectural floor planning|graph-theoretic and not|has traditionally been used in the design of industrial plants [DFF85, Fo92, FR78, Mu94], but also in the design of airports [BFP95], hospitals <ref> [E77] </ref>, universities [DH72], and libraries [FT86]. Often m ij is the number of people expected to travel from facility i to facility j. Another important application of MAXIMUM WEIGHT PLANAR SUBGRAPH is circuit layout. [Ma78, Mu94].
Reference: [EFG82] <author> P. Eades, L. Foulds and J. Giffin, </author> <title> "An Efficient Heuristic for Identifying a Maximal Weight Planar Subgraph," </title> <booktitle> Combinatorial Mathematics IX, Lectures Notes in Mathematics, </booktitle> <volume> vol. 952, </volume> <year> 1982, </year> <pages> 239-251. </pages>
Reference-contexts: Algorithms designed specifically for this weighted planar subgraph problem have been studied by Eades, Foulds and Griffin <ref> [EFG82] </ref>, Junger and Mutzel [JM93], Dyer, Foulds and Frieze [DFF85], and Foulds and Robinson [FR78]. Another application of MAXIMUM WEIGHT PLANAR SUBGRAPH is architectural floor planning: the laying out, in some optimal or near-optimal way, of a set of facilities [DFF85, Fo92, FR78, Mu94].
Reference: [FG95] <author> U. Feige and M. X. Goemans, </author> <title> "Approximating the Value of Two-Power Proof Systems, With Applications to MAX 2SAT and MAX DICUT," </title> <booktitle> Proc. 3rd Israel Symposium on the Theory of Computing and Systems, </booktitle> <year> 1995, </year> <pages> 182-189. </pages>
Reference-contexts: For most approximation algorithms proposed recently, the performance ratios for the weighted cases are the same 2 as those for the unweighted cases <ref> [CST95, Sh95, GW95, FG95, Ho82, Ho97] </ref>. We, however, can prove only that the performance ratio for MAXIMUM WEIGHT PLANAR SUBGRAPH is at least 1=3 + 1=72, whereas the performance ratio for MAXIMUM PLANAR SUBGRAPH (the unweighted version) is at least 4=9. Of course, these are only the best bounds known.
Reference: [FGG85] <author> L. R. Foulds, P. B. Gibbons and W. J. Giffin, </author> <title> "Graph-Theoretic Heuristics for the Facilities Layout Problem: an Experimental Comparison," </title> <booktitle> Operations Research 33 (1985), </booktitle> <pages> 1091-1106. </pages>
Reference: [Fo92] <author> L. R. Foulds, </author> <title> Graph Theory Applications, </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1992. </year>
Reference-contexts: Another application of MAXIMUM WEIGHT PLANAR SUBGRAPH is architectural floor planning: the laying out, in some optimal or near-optimal way, of a set of facilities <ref> [DFF85, Fo92, FR78, Mu94] </ref>. Krejcirik [Kr69] presented the first graph-theoretic approach to architectural floor planning, which sometimes yielded improved solutions [HW85]. For each pair of facilities (i; j), m ij denotes the desirability of placing i adjacent to j. <p> This problem can be modeled as an instance of MAXIMUM WEIGHT PLANAR SUBGRAPH: the vertices are the facilities and the weight of the edge between facilities i and j is m ij . Architectural floor planning|graph-theoretic and not|has traditionally been used in the design of industrial plants <ref> [DFF85, Fo92, FR78, Mu94] </ref>, but also in the design of airports [BFP95], hospitals [E77], universities [DH72], and libraries [FT86]. Often m ij is the number of people expected to travel from facility i to facility j. Another important application of MAXIMUM WEIGHT PLANAR SUBGRAPH is circuit layout. [Ma78, Mu94].
Reference: [FR78] <author> L. R. Foulds and D. F. Robinson, </author> <title> "Graph-Theoretic Heuristics for the Plant Layout Problem," </title> <booktitle> International Journal of Production Research 12 (1978), </booktitle> <pages> 27-37. </pages>
Reference-contexts: Algorithms designed specifically for this weighted planar subgraph problem have been studied by Eades, Foulds and Griffin [EFG82], Junger and Mutzel [JM93], Dyer, Foulds and Frieze [DFF85], and Foulds and Robinson <ref> [FR78] </ref>. Another application of MAXIMUM WEIGHT PLANAR SUBGRAPH is architectural floor planning: the laying out, in some optimal or near-optimal way, of a set of facilities [DFF85, Fo92, FR78, Mu94]. Krejcirik [Kr69] presented the first graph-theoretic approach to architectural floor planning, which sometimes yielded improved solutions [HW85]. <p> Another application of MAXIMUM WEIGHT PLANAR SUBGRAPH is architectural floor planning: the laying out, in some optimal or near-optimal way, of a set of facilities <ref> [DFF85, Fo92, FR78, Mu94] </ref>. Krejcirik [Kr69] presented the first graph-theoretic approach to architectural floor planning, which sometimes yielded improved solutions [HW85]. For each pair of facilities (i; j), m ij denotes the desirability of placing i adjacent to j. <p> This problem can be modeled as an instance of MAXIMUM WEIGHT PLANAR SUBGRAPH: the vertices are the facilities and the weight of the edge between facilities i and j is m ij . Architectural floor planning|graph-theoretic and not|has traditionally been used in the design of industrial plants <ref> [DFF85, Fo92, FR78, Mu94] </ref>, but also in the design of airports [BFP95], hospitals [E77], universities [DH72], and libraries [FT86]. Often m ij is the number of people expected to travel from facility i to facility j. Another important application of MAXIMUM WEIGHT PLANAR SUBGRAPH is circuit layout. [Ma78, Mu94].
Reference: [Fr85] <author> G. N. Frederickson, </author> <title> "Data Structures for On-Line Updating of Minimum Spanning Trees, with Applications," </title> <journal> SIAM Journal of Computing 14 (1985), </journal> <pages> 781-798. </pages>
Reference: [FT86] <author> L. R. Foulds and H. V. Tran, </author> <title> "Library Layout via Graph Theory," </title> <journal> Computers and Industrial Engineering, </journal> <volume> 10 (3), </volume> <year> 1986, </year> <pages> 245-252. </pages>
Reference-contexts: Architectural floor planning|graph-theoretic and not|has traditionally been used in the design of industrial plants [DFF85, Fo92, FR78, Mu94], but also in the design of airports [BFP95], hospitals [E77], universities [DH72], and libraries <ref> [FT86] </ref>. Often m ij is the number of people expected to travel from facility i to facility j. Another important application of MAXIMUM WEIGHT PLANAR SUBGRAPH is circuit layout. [Ma78, Mu94].
Reference: [GJ79] <author> M. R. Garey and D. S. Johnson, </author> <title> Computers and Intractability, </title> <editor> W. H. </editor> <publisher> Freeman and Co., </publisher> <address> New York, </address> <year> 1979. </year>
Reference-contexts: This problem is known to be NP-hard <ref> [GJ79, p. 197] </ref>. We know of no published research on the problem. The naive approximation ratio is 1=2, which is obtained by any algorithm that produces a maximum spanning tree T 0 of G (assuming G is connected).
Reference: [GS85] <author> H. N. Gabow and M. Stallmann, </author> <title> "Efficient Algorithms for Graphic Matroid Intersection and Parity," Automata, </title> <booktitle> Language and Programming: 12 th Colloquium, Lecture Notes in Computer Science 194 (1985), </booktitle> <pages> 210-220. </pages>
Reference-contexts: Second, it is not known whether a heaviest triangular structure in G can be found in polynomial time. Graphical matroid parity is used to find a largest triangular structure in an unweighted graph [CFFK96a], graphical matroid parity being solvable in polynomial time <ref> [GS85] </ref>; weighted graphical matroid parity is known neither to be NP-Hard nor in P.
Reference: [GW95] <author> M. X. Goemans and D. P. Williamson, </author> <title> "Improved Approximation Algorithms for Maximum Cut and Satisfiability Problems Using Semidefinite Programming," </title> <journal> Journal of the Association for Computing Machinery 42:6 (1995), </journal> <pages> 1115-1145. 11 </pages>
Reference-contexts: For most approximation algorithms proposed recently, the performance ratios for the weighted cases are the same 2 as those for the unweighted cases <ref> [CST95, Sh95, GW95, FG95, Ho82, Ho97] </ref>. We, however, can prove only that the performance ratio for MAXIMUM WEIGHT PLANAR SUBGRAPH is at least 1=3 + 1=72, whereas the performance ratio for MAXIMUM PLANAR SUBGRAPH (the unweighted version) is at least 4=9. Of course, these are only the best bounds known.
Reference: [Ha72] <author> F. Harary, </author> <title> Graph Theory, </title> <publisher> Addison-Wesley Publishing Company, </publisher> <year> 1972. </year>
Reference: [Ho82] <author> D. Hochbaum, </author> <title> "Approximation Algorithms for the Set Covering and Vertex Covering Problems," </title> <journal> SIAM Journal of Computing 11 (1982), </journal> <pages> 555-556. </pages>
Reference-contexts: For most approximation algorithms proposed recently, the performance ratios for the weighted cases are the same 2 as those for the unweighted cases <ref> [CST95, Sh95, GW95, FG95, Ho82, Ho97] </ref>. We, however, can prove only that the performance ratio for MAXIMUM WEIGHT PLANAR SUBGRAPH is at least 1=3 + 1=72, whereas the performance ratio for MAXIMUM PLANAR SUBGRAPH (the unweighted version) is at least 4=9. Of course, these are only the best bounds known.
Reference: [Ho97] <author> D. Hochbaum, </author> <title> Approximation Algorithms for NP-Hard Problems, </title> <publisher> PWS Publications, </publisher> <year> 1997. </year>
Reference-contexts: For most approximation algorithms proposed recently, the performance ratios for the weighted cases are the same 2 as those for the unweighted cases <ref> [CST95, Sh95, GW95, FG95, Ho82, Ho97] </ref>. We, however, can prove only that the performance ratio for MAXIMUM WEIGHT PLANAR SUBGRAPH is at least 1=3 + 1=72, whereas the performance ratio for MAXIMUM PLANAR SUBGRAPH (the unweighted version) is at least 4=9. Of course, these are only the best bounds known.
Reference: [HW85] <author> A. Hammouche and D. B. Webster, </author> <title> "Evaluation of an Application of Graph Theory to the Layout Problem," </title> <journal> International Journal of Production Research 23 (5), </journal> <year> 1985, </year> <pages> 987-1000. </pages>
Reference-contexts: Another application of MAXIMUM WEIGHT PLANAR SUBGRAPH is architectural floor planning: the laying out, in some optimal or near-optimal way, of a set of facilities [DFF85, Fo92, FR78, Mu94]. Krejcirik [Kr69] presented the first graph-theoretic approach to architectural floor planning, which sometimes yielded improved solutions <ref> [HW85] </ref>. For each pair of facilities (i; j), m ij denotes the desirability of placing i adjacent to j. The "desirability" of the layout is defined to be the sum of the m ij 's of adjacent facilities i; j.
Reference: [JM93] <author> M. Junger and P. Mutzel, </author> <title> "Solving the Maximum Weight Planar Subgraph Problem," </title> <booktitle> Proc. 3rd Integer Programming and Combinatorial Optimization Conf., </booktitle> <year> 1993, </year> <pages> 479-492. </pages>
Reference-contexts: Algorithms designed specifically for this weighted planar subgraph problem have been studied by Eades, Foulds and Griffin [EFG82], Junger and Mutzel <ref> [JM93] </ref>, Dyer, Foulds and Frieze [DFF85], and Foulds and Robinson [FR78]. Another application of MAXIMUM WEIGHT PLANAR SUBGRAPH is architectural floor planning: the laying out, in some optimal or near-optimal way, of a set of facilities [DFF85, Fo92, FR78, Mu94].
Reference: [JTS86] <author> R. Jayakumar, K. Thulasiraman and M. N. S. Swamy, </author> <title> "On Maximal Planarization of Nonplanar Graphs," </title> <journal> IEEE Trans. Circuits and Systems, </journal> <volume> vol. CAS-33 (8), </volume> <year> 1986, </year> <pages> 843-854. </pages>
Reference-contexts: For a nonplanar graph G, one can start by drawing a planar subgraph of G, using some preferred method for drawing planar graphs [TDB88, BNTT84], and then drawing the remaining edges. Planarization is the process of obtaining a planar graph from a nonplanar one <ref> [CNS79, OT81, JTS86] </ref>. If different edges are not equally important, each edge might come with a weight reflecting the importance of drawing that edge; the edges in a maximum weight planar subgraph would be drawn first.
Reference: [KH78] <author> B. Korte and D. Hausmann, </author> <title> "An Analysis of the Greedy Heuristic for Independence Systems," </title> <booktitle> Annals of Discrete Mathematics 2 (1978), </booktitle> <pages> 65-74. </pages>
Reference-contexts: Greedily scan the edges in the given order, taking an edge if and only if it does not create any cycles and it does not create a path connecting any two of x, y and z. To finish the proof, use the technique of <ref> [KH78] </ref>. We continue with a straight-line plane subgraph P of a weighted graph G. We say a triangle xyz is inside a triangle xyw (or xyw contains xyz) if z is embedded in the bounded plane face defined by xyw.
Reference: [Kr69] <author> K. Krejcirik, </author> <title> "Computer Aided Plant Layout," </title> <booktitle> Computer Aided Design 2, </booktitle> <year> 1969, </year> <pages> 7-17. </pages>
Reference-contexts: Another application of MAXIMUM WEIGHT PLANAR SUBGRAPH is architectural floor planning: the laying out, in some optimal or near-optimal way, of a set of facilities [DFF85, Fo92, FR78, Mu94]. Krejcirik <ref> [Kr69] </ref> presented the first graph-theoretic approach to architectural floor planning, which sometimes yielded improved solutions [HW85]. For each pair of facilities (i; j), m ij denotes the desirability of placing i adjacent to j.
Reference: [LG77] <author> P. C. Liu and R. C. Geldmacher, </author> <title> "On the Deletion of Nonplanar Edges of a Graph," </title> <booktitle> Proc. 10th Southeastern Conference on Combinatorics, Graph Theory, and Computing, </booktitle> <year> 1977, </year> <pages> 727-738. </pages>
Reference-contexts: The maximum weight planar subgraph gives a largest subset of connections that can be laid out on a board. These important applications justify the interest in solving the MAXIMUM WEIGHT PLANAR SUBGRAPH. Unfortunately, because MAXIMUM WEIGHT PLANAR SUBGRAPH is NP-Hard <ref> [LG77] </ref>, a polynomial-time exact algorithm is unlikely to exist. For this reason, w study approximation algorithms for MAXIMUM WEIGHT PLANAR SUBGRAPH.
Reference: [LNS85] <author> R. Lipton, S. North and J. Sandberg, </author> <title> "A Method for Drawing Graphs," </title> <booktitle> Proc. ACM Symposium on Computational Geometry, </booktitle> <pages> 153-160, </pages> <year> 1985. </year>
Reference-contexts: A plane embedding of a planar graph G could naturally be viewed as "nice." Graph-drawing experts have studied many different ways of drawing planar graphs in the plane, so as to maximize some optimization criterion <ref> [CON85, CYN85, LNS85, Tu63] </ref>. For a nonplanar graph G, one can start by drawing a planar subgraph of G, using some preferred method for drawing planar graphs [TDB88, BNTT84], and then drawing the remaining edges.
Reference: [LP86] <author> L. Lovasz and M. D. Plummer, </author> <title> Matching Theory, </title> <publisher> Elsevier Science, </publisher> <address> Amsterdam, </address> <year> 1986. </year>
Reference: [Ma78] <author> M. Marek-Sadowska, </author> <title> "Planarization Algorithms for Integrated Circuits Engineering," </title> <booktitle> Proc. IEEE International Symposium on Circuits and Systems, </booktitle> <year> 1978, </year> <pages> 919-923. </pages>
Reference-contexts: Often m ij is the number of people expected to travel from facility i to facility j. Another important application of MAXIMUM WEIGHT PLANAR SUBGRAPH is circuit layout. <ref> [Ma78, Mu94] </ref>. The goal is to lay out a circuit on a one-layer board to maximize the number of connections between components. Now m ij represents the number of desired connections between component i and component j.
Reference: [Mu94] <author> P. Mutzel, </author> <title> "The Maximum Planar Subgraph Problem," </title> <type> PhD Thesis - Universitat zu Koln, </type> <year> 1994. </year>
Reference-contexts: Another application of MAXIMUM WEIGHT PLANAR SUBGRAPH is architectural floor planning: the laying out, in some optimal or near-optimal way, of a set of facilities <ref> [DFF85, Fo92, FR78, Mu94] </ref>. Krejcirik [Kr69] presented the first graph-theoretic approach to architectural floor planning, which sometimes yielded improved solutions [HW85]. For each pair of facilities (i; j), m ij denotes the desirability of placing i adjacent to j. <p> This problem can be modeled as an instance of MAXIMUM WEIGHT PLANAR SUBGRAPH: the vertices are the facilities and the weight of the edge between facilities i and j is m ij . Architectural floor planning|graph-theoretic and not|has traditionally been used in the design of industrial plants <ref> [DFF85, Fo92, FR78, Mu94] </ref>, but also in the design of airports [BFP95], hospitals [E77], universities [DH72], and libraries [FT86]. Often m ij is the number of people expected to travel from facility i to facility j. Another important application of MAXIMUM WEIGHT PLANAR SUBGRAPH is circuit layout. [Ma78, Mu94]. <p> Often m ij is the number of people expected to travel from facility i to facility j. Another important application of MAXIMUM WEIGHT PLANAR SUBGRAPH is circuit layout. <ref> [Ma78, Mu94] </ref>. The goal is to lay out a circuit on a one-layer board to maximize the number of connections between components. Now m ij represents the number of desired connections between component i and component j.
Reference: [Na64] <author> C. St. J. A. Nash-Williams, </author> <title> "Decomposition of Finite Graphs into Forests," </title> <journal> Journal of London Mathematical Society 39 (1964), </journal> <volume> 12. </volume>
Reference-contexts: Theorem 5 (Nash-Williams; see <ref> [Na64, CMWZZ94] </ref>) The arboricity of a graph G is the maximum, over all subgraphs H of G with at least two vertices, of l jV (H)j1 .
Reference: [OT81] <author> T. Ozawa and H. Takahashi, </author> <title> "A Graph-Planarization Algorithm and its Applications to Random Graphs," Graph Theory and Algorithms, </title> <booktitle> Lectures Notes in Computer Science, </booktitle> <volume> vol. 108, </volume> <year> 1981, </year> <pages> 95-107. </pages>
Reference-contexts: For a nonplanar graph G, one can start by drawing a planar subgraph of G, using some preferred method for drawing planar graphs [TDB88, BNTT84], and then drawing the remaining edges. Planarization is the process of obtaining a planar graph from a nonplanar one <ref> [CNS79, OT81, JTS86] </ref>. If different edges are not equally important, each edge might come with a weight reflecting the importance of drawing that edge; the edges in a maximum weight planar subgraph would be drawn first.
Reference: [PS97] <author> H. J. Promel and A. Steger, </author> <title> "RNC-Approximation Algorithms for the Steiner Problem," </title> <type> manuscript. </type>
Reference-contexts: Theorem 23 The performance ratio of the algorithm above for MAXIMUM WEIGHT OUTERPLANAR SUBGRAPH is at least 7/12. It appears that the techniques of Promel and Steger <ref> [PS97] </ref> do not easily apply.
Reference: [Sh95] <author> D. B. Shmoys, </author> <title> "Computing Near-Optimal Solutions to Combinatorial Optimization Problems," in Combinatorial Optimization, </title> <booktitle> DIMACS Series in Discrete Mathematics and Theoretical Computer Science (20), </booktitle> <editor> W. Cook and L. Lovasz (eds.), </editor> <publisher> AMS Publications, </publisher> <year> 1995, </year> <pages> 355-397. </pages>
Reference-contexts: For most approximation algorithms proposed recently, the performance ratios for the weighted cases are the same 2 as those for the unweighted cases <ref> [CST95, Sh95, GW95, FG95, Ho82, Ho97] </ref>. We, however, can prove only that the performance ratio for MAXIMUM WEIGHT PLANAR SUBGRAPH is at least 1=3 + 1=72, whereas the performance ratio for MAXIMUM PLANAR SUBGRAPH (the unweighted version) is at least 4=9. Of course, these are only the best bounds known.
Reference: [ST83] <author> D. D. Sleator and R. E. Tarjan, </author> <title> "A Data Structure for Dynamic Trees," </title> <journal> J. Comput. System Sci. </journal> <volume> 26 (1983), </volume> <pages> 362-391. </pages>
Reference: [TDB88] <author> R. Tamassia, G. Di Battista and C. Batini, </author> <title> "Automatic Graph Drawing and Readability of Diagrams," </title> <journal> IEEE Transactions on Systems, Man and Cybernetics 18 (1988), </journal> <pages> 61-79. </pages>
Reference-contexts: For a nonplanar graph G, one can start by drawing a planar subgraph of G, using some preferred method for drawing planar graphs <ref> [TDB88, BNTT84] </ref>, and then drawing the remaining edges. Planarization is the process of obtaining a planar graph from a nonplanar one [CNS79, OT81, JTS86].
Reference: [Tu63] <author> W. T. Tutte, </author> <title> "How to Draw a Graph," </title> <journal> Proc. London Math. Society, </journal> <volume> 13 (3), </volume> <year> 1963, </year> <pages> 743-768. 12 </pages>
Reference-contexts: A plane embedding of a planar graph G could naturally be viewed as "nice." Graph-drawing experts have studied many different ways of drawing planar graphs in the plane, so as to maximize some optimization criterion <ref> [CON85, CYN85, LNS85, Tu63] </ref>. For a nonplanar graph G, one can start by drawing a planar subgraph of G, using some preferred method for drawing planar graphs [TDB88, BNTT84], and then drawing the remaining edges.
References-found: 48

