URL: http://www.cs.utexas.edu/users/vl/mypapers/c.ps
Refering-URL: http://www.cs.utexas.edu/users/vl/papers.html
Root-URL: 
Title: An Action Language Based on Causal Explanation: Preliminary Report  
Author: Enrico Giunchiglia Vladimir Lifschitz 
Address: Viale Causa 13 16145 Genova, Italy  Austin, TX 78712, USA  
Affiliation: DIST Universita di Genova  Department of Computer Sciences University of Texas at Austin  
Abstract: Action languages serve for describing changes that are caused by performing actions. We define a new action language C, based on the theory of causal explanation proposed recently by McCain and Turner, and illustrate its expressive power by applying it to a number of examples. The mathematical results presented in the paper relate C to the Baral|Gelfond theory of concurrent actions. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Baker, A. </author> <year> 1991. </year> <title> Nonmonotonic reasoning in the framework of situation calculus. </title> <booktitle> Artificial Intelligence 49 </booktitle> <pages> 5-23. </pages>
Reference-contexts: to the conjunction of the formulas Loaded i+1 Load i _ (Loaded i ^ :Shoot i ); Alive i+1 Alive i ^ :(Loaded i ^ Shoot i ); :(Load i ^ Shoot i ) (18) Temporal Reasoning The "Yale Shooting Problem" (Hanks & McDermott 1987) and the "Stanford Murder Mystery" <ref> (Baker 1991) </ref> correspond to propositional reasoning problems involving formulas (18).
Reference: <author> Baral, C., and Gelfond, M. </author> <year> 1997. </year> <title> Reasoning about effects of concurrent actions. </title> <journal> Journal of Logic Programming 31. </journal>
Reference-contexts: 1 Raise1 0 ; Up2 1 Raise2 0 ; OnTable 1 OnTable 0 ^ (Raise1 0 Raise2 0 ); OnTable 0 (Up1 0 Up2 0 ): Embedding A C into C In this section we analyze the relationship between the treatment of concurrency in two action languages| A C from <ref> (Baral & Gelfond 1997) </ref> and the new language C|by embedding the former into the latter. The Language A C The main idea of A C is that the effects of a set of elementary actions are "inherited" from its subsets, and that this inheritance is defeasible. <p> If a includes both A 1 and A 2 , and s satisfies F 1 , then s 0 satisfies L or L depending on whether or not s satisfies F 2 . The characterization of A C above differs from <ref> (Baral & Gelfond 1997) </ref> in a number of details. Baral and Gel-fond require that F in (22) be a conjunction of literals, and write if instead of after. Their language includes "v-propositions" that we do not discuss here; our version is the "action description component" (Lifschitz 1997b) of theirs.
Reference: <author> Clark, K. </author> <year> 1978. </year> <title> Negation as failure. </title> <editor> In Gallaire, H., and Minker, J., eds., </editor> <booktitle> Logic and Data Bases. </booktitle> <address> New York: </address> <publisher> Plenum Press. </publisher> <pages> 293-322. </pages>
Reference-contexts: In case of a propositional causal theory, these variables are propositional and can be always eliminated, although the formula can become much longer in the process. There is a special case, however|the case of "definite" theories|when a modification of the process of completion familiar from logic programming <ref> (Clark 1978) </ref> allows us to construct a short formula that is equivalent to the given causal theory and has no new higher-order variables. <p> Literal completion differs from Clark's completion in that the "completed definition" of any explainable symbol P consists of two equivalences, one "positive" and one "negative." The positive completion formula is obtained from the rules whose head is P in exactly the same way as in <ref> (Clark 1978) </ref>. The negative completion formula is generated in a similar way from the rules whose head is :P . In addition, for every rule F G whose head F does not contain explainable symbols, there is a corresponding completion formula, which is simply the material implication G F .
Reference: <author> Geffner, H. </author> <year> 1990. </year> <title> Causal theories for nonmonotonic reasoning. </title> <booktitle> In Proc. AAAI-90, </booktitle> <pages> 524-530. </pages>
Reference-contexts: The main idea of this theory <ref> (Geffner 1990) </ref> is to distinguish between the claim that a formula is true and the stronger claim that there is a cause for it to be true.
Reference: <author> Gelfond, M., and Lifschitz, V. </author> <year> 1993. </year> <title> Representing action and change by logic programs. </title> <journal> Journal of Logic Programming 17 </journal> <pages> 301-322. </pages>
Reference-contexts: Introduction Representing properties of actions has been the subject of many papers and two recent books (Sandewall 1995), (Shanahan 1997). One direction of work makes use of "action languages," such as A <ref> (Gelfond & Lifschitz 1993) </ref> and its dialects. An action language serves for describing the effects of actions on fluents. <p> It is satisfied by more than one interpretation. The mathematical theory presented in the next section makes it easier to compute the causally explained transitions in examples like this. Relation to A "Effect propositions" of the language A from <ref> (Gelfond & Lifschitz 1993) </ref> are essentially part of the new language C. They correspond to dynamic laws of the form caused L after F ^ A (6) where L is a literal, F a formula that does not contain action symbols, and A an action symbol.
Reference: <author> Gelfond, M.; Lifschitz, V.; and Rabinov, A. </author> <year> 1991. </year> <title> What are the limitations of the situation calculus? In Boyer, </title> <editor> R., ed., </editor> <booktitle> Automated Reasoning: Essays in Honor of Woody Bledsoe. </booktitle> <publisher> Kluwer. </publisher> <pages> 167-179. </pages>
Reference: <author> Hanks, S., and McDermott, D. </author> <year> 1987. </year> <title> Nonmonotonic logic and temporal projection. </title> <booktitle> Artificial Intelligence 33(3) </booktitle> <pages> 379-412. </pages>
Reference-contexts: The models of this set of formulas represent paths of length n in the graph shown in Figure 1. Example: Loading and Shooting The Shooting Domain The shooting scenario from <ref> (Hanks & McDermott 1987) </ref> involves three actions: Load , Wait and Shoot . In C, there is no need to introduce Wait as an elementary action, because it can be identified with the empty set of elementary actions. <p> generally, the ct n translation of (15) is equivalent to the conjunction of the formulas Loaded i+1 Load i _ (Loaded i ^ :Shoot i ); Alive i+1 Alive i ^ :(Loaded i ^ Shoot i ); :(Load i ^ Shoot i ) (18) Temporal Reasoning The "Yale Shooting Problem" <ref> (Hanks & McDermott 1987) </ref> and the "Stanford Murder Mystery" (Baker 1991) correspond to propositional reasoning problems involving formulas (18).
Reference: <author> Lifschitz, V. </author> <year> 1997a. </year> <title> On the logic of causal explanation. </title> <booktitle> Artificial Intelligence 96 </booktitle> <pages> 451-465. </pages>
Reference-contexts: The meaning of a set of propositions in an action language can be represented by a "transition diagram." In this paper we define a new action language C, based on the theory of causal explanation proposed in (McCain & Turner 1997) and extended in <ref> (Lifschitz 1997a) </ref>. The main idea of this theory (Geffner 1990) is to distinguish between the claim that a formula is true and the stronger claim that there is a cause for it to be true. <p> Note that this characterization is applicable to a transition hs; a; s 0 i even when a is not elementary, although such transitions are not covered by the semantics of A. Computing Causally Explained Transitions According to <ref> (Lifschitz 1997a) </ref>, a causal theory is a finite set of rules (1), with some of the nonlogical constants of the underlying language designated as explainable. In this paper we only need the special case when the language is propositional. The semantics of causal theories is defined in (Lifschitz 1997a) by a <p> Transitions According to <ref> (Lifschitz 1997a) </ref>, a causal theory is a finite set of rules (1), with some of the nonlogical constants of the underlying language designated as explainable. In this paper we only need the special case when the language is propositional. The semantics of causal theories is defined in (Lifschitz 1997a) by a translation that turns these theories into formulas of classical logic. A model of a causal theory T is an interpretation that satisfies the translation of T . A theorem of T is a formula that is entailed by the translation of T . <p> Details can be found in <ref> (Lifschitz 1997a) </ref>; it is not necessary to know them to understand the computational procedure described below. In the first of the next two subsections we define, for any positive integer n, a translation ct n that turns any finite action description D into a causal theory. <p> In particular, the models of ct 1 (D) correspond to the transitions causally explained according to D. The second subsection describes the process of literal completion, proposed in (McCain & Turner 1997) and generalized in <ref> (Lifschitz 1997a) </ref>, which can be used to find the models of such theories. Representing Histories in Causal Logic The translation ct n (D) of an action description D is defined as follows.
Reference: <author> Lifschitz, V. </author> <year> 1997b. </year> <title> Two components of an action language. </title> <journal> Annals of Mathematics and Artificial Intelligence 21 </journal> <pages> 305-320. </pages>
Reference-contexts: Baral and Gel-fond require that F in (22) be a conjunction of literals, and write if instead of after. Their language includes "v-propositions" that we do not discuss here; our version is the "action description component" <ref> (Lifschitz 1997b) </ref> of theirs. First Translation from A C into C Consider a finite action description D in the language A C . We will define the corresponding action description c 1 (D) in C.
Reference: <author> Lin, F. </author> <year> 1995. </year> <title> Embracing causality in specifying the indirect effects of actions. </title> <booktitle> In Proc. IJCAI-95, </booktitle> <pages> 1985-1991. </pages>
Reference-contexts: As observed in <ref> (Lin 1995) </ref> and (McCain & Turner 1995), a static law can play two roles in reasoning about action.
Reference: <author> McCain, N., and Turner, H. </author> <year> 1995. </year> <title> A causal theory of ramifications and qualifications. </title> <booktitle> In Proc. IJCAI-95, </booktitle> <pages> 1978-1984. </pages>
Reference-contexts: As observed in (Lin 1995) and <ref> (McCain & Turner 1995) </ref>, a static law can play two roles in reasoning about action. First, postulating caused F if G may allow us to conclude that an action has an indirect effect: any action that causes G to become true will also indirectly cause F to become true.
Reference: <author> McCain, N., and Turner, H. </author> <year> 1997. </year> <title> Causal theories of action and change. </title> <booktitle> In Proc. AAAI-97, </booktitle> <pages> 460-465. </pages>
Reference-contexts: An action language serves for describing the effects of actions on fluents. The meaning of a set of propositions in an action language can be represented by a "transition diagram." In this paper we define a new action language C, based on the theory of causal explanation proposed in <ref> (McCain & Turner 1997) </ref> and extended in (Lifschitz 1997a). The main idea of this theory (Geffner 1990) is to distinguish between the claim that a formula is true and the stronger claim that there is a cause for it to be true. <p> Second, a dynamic law of the form caused F if F after F will be written as inertial F: Such propositions can be used to express the common-sense law of inertia understood as in <ref> (McCain & Turner 1997) </ref>: if F has remained true then there is a cause for this. <p> In particular, the models of ct 1 (D) correspond to the transitions causally explained according to D. The second subsection describes the process of literal completion, proposed in <ref> (McCain & Turner 1997) </ref> and generalized in (Lifschitz 1997a), which can be used to find the models of such theories. Representing Histories in Causal Logic The translation ct n (D) of an action description D is defined as follows.
Reference: <author> Pednault, E. </author> <year> 1987. </year> <title> Formulating multi-agent, dynamic world problems in the classical planning framework. </title> <editor> In Georgeff, M., and Lansky, A., eds., </editor> <booktitle> Reasoning about Actions and Plans. </booktitle> <address> San Mateo, CA: </address> <publisher> Morgan Kaufmann. </publisher> <pages> 47-82. </pages>
Reference: <author> Sandewall, E. </author> <year> 1995. </year> <title> Features and Fluents, volume 1. </title> <publisher> Oxford University Press. </publisher>
Reference-contexts: Introduction Representing properties of actions has been the subject of many papers and two recent books <ref> (Sandewall 1995) </ref>, (Shanahan 1997). One direction of work makes use of "action languages," such as A (Gelfond & Lifschitz 1993) and its dialects. An action language serves for describing the effects of actions on fluents.
Reference: <author> Shanahan, M. </author> <year> 1997. </year> <title> Solving the Frame Problem: </title>
Reference-contexts: Introduction Representing properties of actions has been the subject of many papers and two recent books (Sandewall 1995), <ref> (Shanahan 1997) </ref>. One direction of work makes use of "action languages," such as A (Gelfond & Lifschitz 1993) and its dialects. An action language serves for describing the effects of actions on fluents.
References-found: 15

