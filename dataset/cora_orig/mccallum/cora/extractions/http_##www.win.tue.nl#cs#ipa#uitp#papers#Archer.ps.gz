URL: http://www.win.tue.nl/cs/ipa/uitp/papers/Archer.ps.gz
Refering-URL: http://www.win.tue.nl/cs/ipa/uitp/proceedings.html
Root-URL: http://www.win.tue.nl
Email: farcher, heitmeyer, simsg@itd.nrl.navy.mil  
Title: TAME: A PVS Interface to Simplify Proofs for Automata Models  
Author: Myla Archer, Constance Heitmeyer, and Steve Sims 
Address: DC 20375  
Affiliation: Code 5546, Naval Research Laboratory, Washington,  
Abstract: Although a number of mechanical provers have been introduced and applied widely by academic researchers, these provers are rarely used in the practical development of software. For mechanical provers to be used more widely in practice, two major barriers must be overcome. First, the languages provided by the mechanical provers for expressing the required system behavior must be more natural for software developers. Second, the reasoning steps supported by mechanical provers are usually at too low and detailed a level and therefore discourage use of the prover. To help remove these barriers, we are developing a system called TAME, a high-level user interface to PVS for specifying and proving properties of automata models. TAME provides both a standard specification format for automata models and numerous high-level proof steps appropriate for reasoning about automata models. In previous work, we have shown how TAME can be useful in proving properties about systems described as Lynch-Vaandrager Timed Automata models. TAME has the potential to be used as a PVS interface for other specification methods that are specialized to define automata models. This paper first describes recent improvements to TAME, and then presents our initial results in using TAME to provide theorem proving support for the SCR (Software Cost Reduction) requirements method, a method with a wide range of other mechanized support. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Archer and C. Heitmeyer. </author> <title> Mechanical verification of timed automata: A case study. </title> <booktitle> In Proc. 1996 IEEE Real-Time Technology and Applications Symp. </booktitle> <address> (RTAS'96). </address> <publisher> IEEE Computer Society Press, </publisher> <year> 1996. </year>
Reference: [2] <author> M. Archer and C. Heitmeyer. </author> <title> Human-style theorem proving using PVS. </title> <editor> In E. L. Gunter and A. Felty, editors, </editor> <title> Theorem Proving in Higher Order Logics (TPHOLs'97), </title> <booktitle> volume 1275 of Lect. Notes in Comp. Sci., </booktitle> <pages> pages 33-48. </pages> <publisher> Springer-Verlag, </publisher> <year> 1997. </year>
Reference-contexts: To do so, we will need some additional capabilities along these lines. With the capabilities we now have, we expect to improve our PVS interface further by providing strategies for PVS steps that we noted in <ref> [2] </ref> as potentially useful, e.g., in avoiding unnecessary case splitting. Examples are strategies for the skolemization and instantiation of embedded quantified formulae.
Reference: [3] <author> M. Archer and C. Heitmeyer. </author> <title> Verifying hybrid systems modeled as timed automata: A case study. In Hybrid and Real-Time Systems (HART'97), </title> <booktitle> volume 1201 of Lect. Notes in Comp. Sci., </booktitle> <pages> pages 171-185. </pages> <publisher> Springer-Verlag, </publisher> <year> 1997. </year>
Reference: [4] <author> S. J. Garland, N. A. Lynch, and M. Vaziri. IOA: </author> <title> A Language for Specifying, Programming, and Validating Distributed Systems. </title> <type> Draft. </type> <institution> MIT Laboratory for Computer Science, </institution> <month> December, </month> <year> 1997. </year>
Reference: [5] <author> J. Harrison. </author> <title> A Mizar mode for HOL. </title> <booktitle> In Proc. 9th Intl. Conf. on Theorem Proving in Higher Order Logics (TPHOLs'96), volume 1125 of Lect. Notes in Comp. Sci., </booktitle> <pages> pages 203-220. </pages> <publisher> Springer-Verlag, </publisher> <year> 1996. </year>
Reference: [6] <author> C. Heitmeyer, A. Bull, C. Gasarch, and B. Labaw. SCR*: </author> <title> A toolset for specifying and analyzing requirements. </title> <booktitle> In Proc. 10th Annual Conf. on Computer Assurance (COMPASS '95), </booktitle> <pages> pages 109-122, </pages> <address> Gaithersburg, MD, </address> <month> June </month> <year> 1995. </year>
Reference: [7] <author> C. Heitmeyer, J. Kirby, and B. Labaw. </author> <title> Tools for formal specification, verification, and validation of requirements. </title> <booktitle> In Proc. 12th Annual Conf. on Computer Assurance (COMPASS '97), </booktitle> <address> Gaithersburg, MD, </address> <month> June </month> <year> 1997. </year>
Reference: [8] <author> C. Heitmeyer and N. Lynch. </author> <title> The Generalized Railroad Crossing: A case study in formal verification of real-time systems. </title> <booktitle> In Proc., Real-Time Systems Symp., </booktitle> <address> San Juan, Puerto Rico, </address> <month> Dec. </month> <year> 1994. </year>
Reference: [9] <author> C. L. Heitmeyer, R. D. Jeffords, and B. G. Labaw. </author> <title> Automated consistency checking of requirements specifications. </title> <journal> ACM Transactions on Software Engineering and Methodology, </journal> <volume> 5(3) </volume> <pages> 231-261, </pages> <month> April-June </month> <year> 1996. </year>
Reference: [10] <author> K. L. Heninger. </author> <title> Specifying software requirements for complex systems: New techniques and their application. </title> <journal> IEEE Trans. Softw. Eng., </journal> <volume> SE-6(1):2-13, </volume> <month> Jan. </month> <year> 1980. </year>
Reference: [11] <author> G. J. Holzmann. </author> <title> Design and Validation of Computer Protocols. </title> <publisher> Prentice-Hall, </publisher> <year> 1991. </year>
Reference: [12] <author> G. J. Holzmann. </author> <title> The model checker SPIN. </title> <journal> IEEE Trans. on Softw. Eng., </journal> <volume> 23(5) </volume> <pages> 279-295, </pages> <month> May </month> <year> 1997. </year>
Reference: [13] <author> S. Kalvala. </author> <title> Annotations in formal specifications and proofs. Formal Methods in System Design, </title> <type> 5(1/2), </type> <year> 1994. </year>
Reference: [14] <author> S. Kalvala. </author> <title> A formulation of TLA in Isabelle. In Higher Order Logic Theorem Proving and Its Applications (HOL'95), </title> <booktitle> volume 971 of Lect. Notes in Comp. Sci., </booktitle> <pages> pages 46-57. </pages> <publisher> Springer-Verlag, </publisher> <year> 1995. </year>
Reference: [15] <author> L. C. Paulson. </author> <title> Isabelle: A Generic Theorem Prover, </title> <booktitle> volume 828 of Lect. Notes in Comp. </booktitle> <publisher> Sci. Springer-Verlag, </publisher> <year> 1994. </year>
Reference: [16] <author> J. Rushby. </author> <title> Private communication. </title> <address> NRL, </address> <month> Jan. </month> <year> 1997. </year>
Reference: [17] <author> N. Shankar, S. Owre, and J. Rushby. </author> <title> The PVS proof checker: A reference manual. </title> <type> Technical report, </type> <institution> Computer Science Lab., SRI Intl., </institution> <address> Menlo Park, CA, </address> <year> 1993. </year>
Reference: [18] <author> J. Skakkebaek and N. Shankar. </author> <title> Towards a duration calculus proof assistant in PVS. </title> <booktitle> In Third Intern. School and Symp. on Formal Techniques in Real Time and Fault Tolerant Systems, Lect. Notes in Comp. Sci. </booktitle> <volume> 863. </volume> <publisher> Springer-Verlag, </publisher> <year> 1994. </year>
Reference: [19] <author> D. Syme. </author> <title> A new interface for HOL ideas, issues, and implementation. In Higher Order Logic Theorem Proving and Its Applications (HOL'95), </title> <booktitle> volume 971 of Lect. Notes in Comp. Sci., </booktitle> <pages> pages 324-339. </pages> <publisher> Springer-Verlag, </publisher> <year> 1995. </year>
Reference: [20] <author> L. Thery. </author> <title> A proof development system for the HOL theorem prover. In Higher Order Logic Theorem Proving and Its Applications (HUG'93), </title> <booktitle> volume 780 of Lect. Notes in Comp. Sci., </booktitle> <pages> pages 115-128. </pages> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference: [21] <author> L. Thery, Y. Bertot, and G. Kahn. </author> <title> Real theorem provers deserve real user-interfaces. </title> <booktitle> Proc. Fifth ACM SIGSOFT Symp. on Software Development Environments, Software Engineering Notes, </booktitle> <volume> 17(5), </volume> <year> 1992. </year> <month> 8 </month>
References-found: 21

