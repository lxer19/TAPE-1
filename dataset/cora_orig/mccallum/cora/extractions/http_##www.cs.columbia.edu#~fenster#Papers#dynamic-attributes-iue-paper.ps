URL: http://www.cs.columbia.edu/~fenster/Papers/dynamic-attributes-iue-paper.ps
Refering-URL: http://www.cs.columbia.edu/~fenster/Papers/
Root-URL: http://www.cs.columbia.edu
Title: Dynamic Attributes, Code Generation and the IUE generator supports the dynamic attributes mechanism, provides the
Author: Terrance E. Boult, Samuel D. Fenster and Jason W. Kim and 
Note: A T E X-based code generator is then described. This  
Address: 19 Memorial Drive West, Lehigh University, Bethlehem, PA 18015.  New York, N.Y. 10027  
Affiliation: Electrical Engineering and Computer Science Department, Packard Laboratory,  Center for Research in Intelligent Systems, Department of Computer Science, Columbia University,  
Abstract: This papers reviews two software aspects of the IUE project: dynamic attributes and code-generation. Dynamic attributes separates inheritance of object state from inheritance of storage and provide more flexible object derivations. The primary motivation for dynamic attributes difficulties with using in existing C++ for what the IUE specification committee considered a natural design. After presenting basic background and motivation, the paper overviews the dynamic attributes mechanisms and the current C ++ proto-type. It discusses how dynamic attributes provide more flexible access, cleaner class structure, and greatly reduced storage constraints, while still maintaining time efficient data access. It also discusses other benefits of the dynamic attributes mechanism including derivations with subtyping, run-time attributes and properly scoped polymorphic variables. This is followed by a summary of an initial performance study of the second proto-type which is now incorporated into the IUE development process. fl This work supported in part by ARPA contract DACA-76-92-C-007 and by NSF PYI award #IRI-90-57951. The work reported herein was performed at Columbia Univ. T. Boult and J.W. Kim are full time at Lehigh. S. Fenster is at Columbia. The views presented herein are those of the the authors and may not reflect those of the IUE design committee, AAI, ARPA or the government. 1 Introduction and Background 
Abstract-found: 1
Intro-found: 1
Reference: [ Booch, 1991 ] <author> G. Booch. </author> <title> Object Oriented Design with applications. </title> <address> Bengamin/Cummings, Redwood City CA, </address> <year> 1991. </year>
Reference: [ Coplien, 1992 ] <author> J.O. Coplien. </author> <title> Advanced C++ Programming Styles and Idioms. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1992. </year>
Reference: [ Dijkstra, 1976 ] <author> E.W. Dijkstra. </author> <title> A discipline of programming. </title> <publisher> Prentice-Hall, </publisher> <address> Engelwook Cliffs, NJ, </address> <year> 1976. </year>
Reference: [ Ingalls, 1978 ] <author> D. Ingalls. </author> <title> The smalltalk-76 programming system design and implementation. </title> <booktitle> In Proc. of the Fifth ACM Symposium on Principals of Programming Languages, </booktitle> <pages> pages 9-18, </pages> <year> 1978. </year>
Reference: [ Knuth, 1992 ] <author> D.E. Knuth. </author> <title> Literate Programming. Center for the Study of Language and Information, </title> <publisher> Stanford, </publisher> <address> CA, </address> <year> 1992. </year>
Reference: [ Parnas and Clemens, 1986 ] <author> D. Parnas and P. Clemens. </author> <title> A rational design process: how and why to fake it. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 12 </volume> <pages> 251-257, </pages> <year> 1986. </year>
Reference: [ Pokorny, 1994 ] <author> Cornel Pokorny. </author> <title> Computer Graphics: an object-oriented approach to the art and science. Franklin, Beedle & Associated, </title> <address> OR, </address> <year> 1994. </year>
Reference: [ Tan, 1994 ] <author> Y.M. Tan. </author> <title> Formal Specification Techniques for Promoting Software Modularity, Enhancing Documentation, and Testing Specifications. </title> <type> PhD thesis, </type> <institution> MIT, EECS, </institution> <month> Jun. </month> <year> 1994. </year> <type> C.S. Tech. Report # 619. </type>
Reference: [ Welsh and Han, 1993 ] <author> J. Welsh and J. Han. </author> <title> Software documents: Concepts and tools! Technical report, </title> <institution> Software Verification Research Centre, Univ. of Queensland, Queensland 4072, Austrialia, </institution> <month> November </month> <year> 1993. </year> <pages> #93-23. </pages>
Reference: [ Welsh, 1994 ] <author> J. Welsh. </author> <title> Software is hsitory! In A Classical Mind- Essays in Honour of C.A.R. Hoare. </title> <publisher> Prentice-Hall, </publisher> <address> NJ, </address> <year> 1994. </year>
Reference: [ Wirth, 1971 ] <author> N. Wirth. </author> <title> Program development by stepwise refinement. </title> <journal> Communications of the ACM, </journal> <volume> 14 </volume> <pages> 221-227, </pages> <year> 1971. </year>
References-found: 11

