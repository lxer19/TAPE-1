URL: http://wwwis.win.tue.nl/~wsinwa/pn97final.ps
Refering-URL: http://wwwis.win.tue.nl/~wsinwa/publications.html
Root-URL: http://www.win.tue.nl
Email: wsinwa@win.tue.nl  
Title: Verification of Workflow Nets  
Author: W.M.P. van der Aalst 
Address: P.O. Box 513, NL-5600 MB, Eindhoven, The Netherlands.  
Affiliation: Eindhoven University of Technology,  
Abstract: Workflow management systems will change the architecture of future information systems dramatically. The explicit representation of business procedures is one of the main issues when introducing a workflow management system. In this paper we focus on a class of Petri nets suitable for the representation, validation and verification of these procedures. We will show that the correctness of a procedure represented by such a Petri net can be verified by using standard Petri-net-based techniques. Based on this result we provide a comprehensive set of transformation rules which can be used to construct and modify correct procedures. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> W.M.P. van der Aalst. </author> <title> Putting Petri nets to work in industry. </title> <booktitle> Computers in Industry, </booktitle> <volume> 25(1) </volume> <pages> 45-54, </pages> <year> 1994. </year>
Reference: 2. <author> W.M.P. van der Aalst. </author> <title> A class of Petri net for modeling and analyzing business processes. </title> <institution> Computing Science Reports 95/26, Eindhoven University of Technology, Eindhoven, </institution> <year> 1995. </year>
Reference-contexts: A WF-net P N is sound if and only if .P N ; i / is live and bounded. Proof. It follows directly from Lemma 8, 9 and 10. ut Theorem 11 is an extension of the results presented in [2,24]. In <ref> [2] </ref> we restrict ourselves to free-choice WF-nets.
Reference: 3. <author> W.M.P. van der Aalst. </author> <title> Petri-net-based Workflow Management Software. </title> <editor> In A. Sheth, editor, </editor> <booktitle> Proceedings of the NFS Workshop on Workflow and Process Automation in Information Systems, </booktitle> <pages> pages 114-118, </pages> <address> Athens, Georgia, </address> <month> May </month> <year> 1996. </year>
Reference: 4. <author> W.M.P. van der Aalst. </author> <title> Three Good reasons for Using a Petri-net-based Workflow Management System. </title> <editor> In S. Navathe and T. Wakayama, editors, </editor> <booktitle> Proceedings of the International Working Conference on Information and Process Integration in Enterprises (IPIC'96), </booktitle> <pages> pages 179-201, </pages> <address> Camebridge, Massachusetts, </address> <month> Nov </month> <year> 1996. </year>
Reference: 5. <author> W.M.P. van der Aalst and K.M. van Hee. </author> <title> Business Process Redesign: A Petri-net-based approach. Computers in Industry, </title> <address> 29(1-2):15-26, </address> <year> 1996. </year>
Reference-contexts: Van der Aalst and Van Hee <ref> [5] </ref>). A direction for further research is to incorporate this dimension. We hope to find a necessary and sufficient condition for soundness given a WF-net extended with some mechanism to allocate resources to tasks.
Reference: 6. <author> W.M.P. van der Aalst and K.M. van Hee. </author> <title> Workflow Management: Modellen, Methoden en Systemen (in Dutch). </title> <publisher> Academic Service, </publisher> <address> Schoonhoven, </address> <year> 1997. </year>
Reference: 7. <author> G. Berthelot. </author> <title> Transformations and decompositions of nets. </title> <editor> In W. Brauer, W. Reisig, and G. Rozenberg, editors, </editor> <title> Advances in Petri Nets 1986 Part I: Petri Nets, central models and their properties, </title> <booktitle> volume 254 of Lecture Notes in Computer Science, </booktitle> <pages> pages 360-376. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1987. </year>
Reference-contexts: These transformation rules are shown in Figures 7, 8, 9 and 10 and elucidated in the sequel. The transformation rules correspond to the basic routing constructs identified by the Work-flow Management Coalition ([26]). These rules should not be confused with the reduction rules presented in Petri-net literature (cf. Berthelot <ref> [7] </ref>, Desel [10], Desel and Es-parza [12] and Kovalyov [19]). The transformation rules presented in this section are not used for analysis purposes; they are used for the modification of WF-nets. T1a Task t1 is replaced by two consecutive tasks t2 and t3.
Reference: 8. <author> E. </author> <title> Best. Structure theory of Petri nets: the free choice hiatus. </title> <editor> In W. Brauer, W. Reisig, and G. Rozenberg, editors, </editor> <title> Advances in Petri Nets 1986 Part I: Petri Nets, central models and their properties, </title> <booktitle> volume 254 of Lecture Notes in Computer Science, </booktitle> <pages> pages 168-206. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1987. </year>
Reference-contexts: This property is called the soundness property. In this paper we present a technique to verify this property using standard Petri-net tools. If we restrict ourselves to free-choice Petri nets (cf. Best <ref> [8] </ref>, Desel and Esparza [12]), this property can be verified in polynomial time. WF-nets have some interesting properties. <p> Definition 5 (Free-choice). A Petri net is a free-choice Petri net iff, for every two places p 1 and p 2 either . p 1 * " p 2 */ D ; or p 1 * D p 2 *. Free-choice Petri nets have been studied extensively (cf. Best <ref> [8] </ref>, Desel and Esparza [12,11,14], Hack [17]) because they seem to be a good compromise between expressive power and analyzability. <p> In our opinion parallelism itself should be separated from the choice between a parallel and a non-parallel execution of tasks. Free-choice Petri nets have been studied extensively and are marked by strong theoretical results and efficient analysis techniques (cf. Best <ref> [8] </ref>, Desel and Esparza [12,11,14], Hack [17]). As a result soundness can be determined in polynomial time for free-choice WF-nets. Theorem 12. For a free-choice WF-net it is possible to decide soundness in polynomial time. Proof.
Reference: 9. <author> A. Cheng, J. Esparza, and J. Palsberg. </author> <title> Complexity results for 1-safe nets. </title> <editor> In R.K. Shyama-sundar, editor, </editor> <booktitle> Foundations of software technology and theoretical computer science, volume 761 of Lecture Notes in Computer Science, </booktitle> <pages> pages 326-337. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1993. </year>
Reference-contexts: The complexity of the algorithm to construct the coverability graph can be worse than primitive recursive space. Even for free-choice Petri nets the reachability problem is known to be EXPSPACE-hard (cf. Cheng, Esparza and Palsberg <ref> [9] </ref>). Therefore, any `brute-force approach' to check soundness is bound to be intractable. Fortunately, the problem of deciding whether a given WF-net is sound corresponds to standard Petri-net properties. In the remainder of this section, we present a technique to decide soundness.
Reference: 10. <author> J. Desel. </author> <title> Reduction and design of well-behaved concurrent systems. </title> <editor> In J.C.M. Baeten and J.W. Klop, editors, </editor> <booktitle> Proceedings of CONCUR 1990, volume 458 of Lecture Notes in Computer Science, </booktitle> <pages> pages 166-181. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1990. </year>
Reference-contexts: The transformation rules correspond to the basic routing constructs identified by the Work-flow Management Coalition ([26]). These rules should not be confused with the reduction rules presented in Petri-net literature (cf. Berthelot [7], Desel <ref> [10] </ref>, Desel and Es-parza [12] and Kovalyov [19]). The transformation rules presented in this section are not used for analysis purposes; they are used for the modification of WF-nets. T1a Task t1 is replaced by two consecutive tasks t2 and t3.
Reference: 11. <author> J. Desel. </author> <title> A proof of the Rank theorem for extended free-choice nets. </title> <editor> In K. Jensen, editor, </editor> <booktitle> Application and Theory of Petri Nets 1992, volume 616 of Lecture Notes in Computer Science, </booktitle> <pages> pages 134-153. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1992. </year>
Reference: 12. <author> J. Desel and J. Esparza. </author> <title> Free choice Petri nets, </title> <booktitle> volume 40 of Cambridge tracts in theoretical computer science. </booktitle> <publisher> Cambridge University Press, </publisher> <address> Cambridge, </address> <year> 1995. </year>
Reference-contexts: This property is called the soundness property. In this paper we present a technique to verify this property using standard Petri-net tools. If we restrict ourselves to free-choice Petri nets (cf. Best [8], Desel and Esparza <ref> [12] </ref>), this property can be verified in polynomial time. WF-nets have some interesting properties. <p> Therefore .P N ; i / is deadlock-free. Since .P N ; i / is a deadlock-free, bounded, strongly connected, free-choice Petri net, we deduce that .P N ; i / is live (see Theorem 4.31 in Desel and Esparza <ref> [12] </ref>). Since .P N ; i / is live and bounded, P N is sound (Theorem 11) and the third requirement (iii) holds. ut Most of the workflow procedures we have seen in practice obey the free-choice property. <p> A cluster is a minimal set C of nodes satisfying the following conditions. If the set contains a place s, then s* C. If the set contains a place t, then *t C. For more information on these advanced topics, we refer to <ref> [12] </ref> and [20]. Theorem 14. A WF-net P N is sound if the rank of P N is equal to the number of clusters minus 1 and every proper siphon contains at least one token. Proof. P N is strongly connected. Therefore we can apply Theorem 10.17 in [12]. <p> refer to <ref> [12] </ref> and [20]. Theorem 14. A WF-net P N is sound if the rank of P N is equal to the number of clusters minus 1 and every proper siphon contains at least one token. Proof. P N is strongly connected. Therefore we can apply Theorem 10.17 in [12]. This theorem states that a weakly connected Petri net with at least one place and one transition, a rank equal to the number of clusters minus 1 (i.e. Rank.P N / D jC N j 1) and a token in every proper siphon, is live and bounded. <p> The transformation rules correspond to the basic routing constructs identified by the Work-flow Management Coalition ([26]). These rules should not be confused with the reduction rules presented in Petri-net literature (cf. Berthelot [7], Desel [10], Desel and Es-parza <ref> [12] </ref> and Kovalyov [19]). The transformation rules presented in this section are not used for analysis purposes; they are used for the modification of WF-nets. T1a Task t1 is replaced by two consecutive tasks t2 and t3.
Reference: 13. <author> C.A. Ellis and G.J. Nutt. </author> <title> Modelling and Enactment of Workflow Systems. </title> <editor> In M. Ajmone Marsan, editor, </editor> <booktitle> Application and Theory of Petri Nets 1993, volume 691 of Lecture Notes in Computer Science, </booktitle> <pages> pages 1-16. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1993. </year>
Reference: 14. <author> J. Esparza. </author> <title> Synthesis rules for Petri nets, and how they can lead to new results. </title> <editor> In J.C.M. Baeten and J.W. Klop, editors, </editor> <booktitle> Proceedings of CONCUR 1990, volume 458 of Lecture Notes in Computer Science, </booktitle> <pages> pages 182-198. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1990. </year>
Reference: 15. <author> K. Gostellow, V. Cerf, G. Estrin, and S. Volansky. </author> <title> Proper Termination of Flow-of-control in Programs Involving Concurrent Processes. </title> <journal> ACM Sigplan, </journal> <volume> 7(11) </volume> <pages> 15-27, </pages> <year> 1972. </year>
Reference-contexts: Clearly, they should not introduce an infinite loop. The second requirement states that the moment a token is put in place o, all the other places should be empty. Sometimes the term proper termination is used to describe the first two requirements <ref> [15] </ref>. The last requirement states that there are no dead transitions (tasks) in the initial state i. For the WF-net shown in Figure 3 it is easy to see that it is sound. <p> Straub and Hurtado [24] have analyzed a similar property for COPA nets. The soundness property is also closely related to Valette's concept of a well-formed block [25] and Gostel-low's concept of proper termination <ref> [15] </ref>. There is also a relation between reversibility (the possibility to return to the initial state, i.e., the initial state is a home-marking) and soundness. The results presented in this paper are marked by the fact that they are valid for any WF-net.
Reference: 16. <author> V. Gruhn. </author> <title> Validation and Verification of Software Process Models. </title> <editor> In A. Endres and H. Weber, editors, </editor> <booktitle> Software Development Environments and CASE Technology, volume 509 of Lecture Notes in Computer Science, </booktitle> <pages> pages 271-286. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1991. </year>
Reference: 17. <author> M.H.T. Hack. </author> <title> Analysis production schemata by Petri nets. </title> <type> Master's thesis, </type> <institution> Massachusetts Institute of Technology, </institution> <address> Cambridge, Mass., </address> <year> 1972. </year>
Reference-contexts: Free-choice Petri nets have been studied extensively (cf. Best [8], Desel and Esparza [12,11,14], Hack <ref> [17] </ref>) because they seem to be a good compromise between expressive power and analyzability. <p> In our opinion parallelism itself should be separated from the choice between a parallel and a non-parallel execution of tasks. Free-choice Petri nets have been studied extensively and are marked by strong theoretical results and efficient analysis techniques (cf. Best [8], Desel and Esparza [12,11,14], Hack <ref> [17] </ref>). As a result soundness can be determined in polynomial time for free-choice WF-nets. Theorem 12. For a free-choice WF-net it is possible to decide soundness in polynomial time. Proof. As a direct result of the Rank theorem ([12]), it is possible to decide liveness and boundedness in polynomial time.
Reference: 18. <author> T.M. Koulopoulos. </author> <title> The Workflow Imperative. </title> <publisher> Van Nostrand Reinhold, </publisher> <address> New York, </address> <year> 1995. </year>
Reference: 19. <author> A.V. Kovalyov. </author> <title> On complete reducability of some classes of Petri nets. </title> <booktitle> In Proceedings of the 11th International Conference on Applications and Theory of Petri Nets, </booktitle> <pages> pages 352-366, </pages> <address> Paris, </address> <month> June </month> <year> 1990. </year>
Reference-contexts: The transformation rules correspond to the basic routing constructs identified by the Work-flow Management Coalition ([26]). These rules should not be confused with the reduction rules presented in Petri-net literature (cf. Berthelot [7], Desel [10], Desel and Es-parza [12] and Kovalyov <ref> [19] </ref>). The transformation rules presented in this section are not used for analysis purposes; they are used for the modification of WF-nets. T1a Task t1 is replaced by two consecutive tasks t2 and t3.
Reference: 20. <author> T. Murata. </author> <title> Petri Nets: Properties, Analysis and Applications. </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> 77(4) </volume> <pages> 541-580, </pages> <month> April </month> <year> 1989. </year>
Reference-contexts: Since then the use and study of Petri nets has increased considerably. For a review of the history of Petri nets and an extensive bibliography the reader is referred to Murata <ref> [20] </ref>. The classical Petri net is a directed bipartite graph with two node types called places and transitions. The nodes are connected via directed arcs. Connections between two nodes of the same type are not allowed. Places are represented by circles and transitions by rectangles. Definition 1 (Petri net). <p> The soundness property is a property which relates to the dynamics of a WF-net. Therefore, the coverability graph (Peterson [21], Murata <ref> [20] </ref>) seems to be an obvious technique to check whether the WF-net is sound. Figure 4 shows the coverability graph which corresponds to the Petri net shown in Figure 3 (the initial state is i). <p> A cluster is a minimal set C of nodes satisfying the following conditions. If the set contains a place s, then s* C. If the set contains a place t, then *t C. For more information on these advanced topics, we refer to [12] and <ref> [20] </ref>. Theorem 14. A WF-net P N is sound if the rank of P N is equal to the number of clusters minus 1 and every proper siphon contains at least one token. Proof. P N is strongly connected. Therefore we can apply Theorem 10.17 in [12]. <p> Because it is obvious that the rules preserve liveness and boundedness, we do not give a detailed proof. It is for example possible to prove this by using the 6 liveness and boundedness preserv-ing operations described in Murata <ref> [20] </ref>. ut The eight transformation rules shown in figures 7, 8, 9 and 10 preserve soundness. We can use these basic transformation rules to construct more complex transformation rules. T5a Two consecutive tasks are replaced by two parallel tasks. T5b Two parallel tasks are replaced by two consecutive tasks.
Reference: 21. <author> J.L. Peterson. </author> <title> Petri net theory and the modeling of systems. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, </address> <year> 1981. </year>
Reference-contexts: The soundness property is a property which relates to the dynamics of a WF-net. Therefore, the coverability graph (Peterson <ref> [21] </ref>, Murata [20]) seems to be an obvious technique to check whether the WF-net is sound. Figure 4 shows the coverability graph which corresponds to the Petri net shown in Figure 3 (the initial state is i). <p> Proof. Assume that P N is sound and .P N ; i / not bounded. Since P N is not bounded there are two states M i and M j such that i fl fl for example the proof that the coverability tree is finite in Peterson <ref> [21] </ref> (Theorem 4.1).) However, since P N is sound we know that there is a firing sequence oe such that M i oe Therefore, there is a state M such that M j oe ! M and M &gt; o.
Reference: 22. <institution> C.A. Petri. Kommunikation mit Automaten. </institution> <type> PhD thesis, </type> <institution> Institut fur instrumentelle Mathe-matik, Bonn, </institution> <year> 1962. </year>
Reference: 23. <author> T. Schal. </author> <title> Workflow Management for Process Organisations, </title> <booktitle> volume 1096 of Lecture Notes in Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1996. </year>
Reference: 24. <author> P.A. Straub and C. Hurtado. </author> <title> The Simple Control Property of Business Process Models. </title> <booktitle> In XV International Conference of the Chilean Computer Science Society, </booktitle> <year> 1995. </year>
Reference-contexts: Proof. It follows directly from Lemma 8, 9 and 10. ut Theorem 11 is an extension of the results presented in [2,24]. In [2] we restrict ourselves to free-choice WF-nets. Independently, Straub and Hurtado <ref> [24] </ref> found necessary and sufficient conditions for soundness of COPA nets. (COPA nets correspond to a subclass of free-choice Petri nets.) Perhaps surprisingly, the verification of the soundness property boils down to checking whether the extended Petri net is live and bounded! This means that we can use standard Petri-net-based analysis <p> Nevertheless, the rules correspond to the basic routing primitives present in most WFMSs. Fig. 12. Construction of the WF-net shown in Figure 3. 6 Related work Many researchers have inversigated properties similar to the soundness property. Straub and Hurtado <ref> [24] </ref> have analyzed a similar property for COPA nets. The soundness property is also closely related to Valette's concept of a well-formed block [25] and Gostel-low's concept of proper termination [15].
Reference: 25. <author> R. Valette. </author> <title> Analysis of Petri Nets by Stepwise Refinements. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 18 </volume> <pages> 35-46, </pages> <year> 1979. </year>
Reference-contexts: Fig. 12. Construction of the WF-net shown in Figure 3. 6 Related work Many researchers have inversigated properties similar to the soundness property. Straub and Hurtado [24] have analyzed a similar property for COPA nets. The soundness property is also closely related to Valette's concept of a well-formed block <ref> [25] </ref> and Gostel-low's concept of proper termination [15]. There is also a relation between reversibility (the possibility to return to the initial state, i.e., the initial state is a home-marking) and soundness. The results presented in this paper are marked by the fact that they are valid for any WF-net.
Reference: 26. <author> WFMC. </author> <title> Workflow Management Coalition Terminology and Glossary (WFMC-TC-1011). </title> <type> Technical report, </type> <institution> Workflow Management Coalition, </institution> <address> Brussels, </address> <year> 1996. </year>
Reference-contexts: Unfortunately, today's WFMSs suffer from a number of serious drawbacks. A theoretical basis for workflow management tools is missing. As a result there are, even at a conceptual level, important differences between the tools. Despite the efforts of the Workflow Management Coalition <ref> [26] </ref> there are no real standards. Moreover, the absence of tools to support the analysis of workflows is a serious drawback for the success of today's WFMSs. In this paper we present a Petri-net-based approach to overcome some of these problems. <p> A WFMS is a system that defines, creates and manages the execution of workflows through the use of software, running on one or more workflow engines, which is able to interpret the process definition, interact with workflow participants and, where required, invoke the use of IT tools and applications (WFMC <ref> [26] </ref>). A WFMS can be seen as the operating system of administrative organisations. The WFMS takes care of the `office logistics'. At the moment more than 250 WFMSs are available.
References-found: 26

