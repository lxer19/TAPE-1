URL: ftp://ftp.cs.brown.edu/pub/techreports/94/cs94-38.ps.Z
Refering-URL: http://www.cs.brown.edu/publications/techreports/reports/CS-94-38.html
Root-URL: http://www.cs.brown.edu/
Abstract-found: 0
Intro-found: 1
Reference: [ Alterman, 1986 ] <author> Alterman, Richard 1986. </author> <title> An adaptive planner. </title> <booktitle> In Proceedings of the Fifth National Conference on Artificial Intelligence, </booktitle> <address> Philadelphia, Pennsylvania. </address> <note> (reprinted in Proceedings of a Workshop on Case-Based Reasoning, 1988, and Readings in Planning, </note> <editor> edited by James Allan, James Hendler, and Austin Tate, </editor> <publisher> Morgan Kaufman, </publisher> <year> 1990). </year>
Reference: [ Ashley and Rissland, 1987 ] <author> Ashley, Kevin D. and Rissland, Edwina L. </author> <year> 1987. </year> <title> Compare and contrast, a test of expertise. </title> <booktitle> In Proceedings of the Sixth National Conference on Artificial Intelligence, </booktitle> <address> Seattle, Washington. </address> <pages> 273-278. </pages>
Reference-contexts: This is one of the key legal skills, particularly in the Anglo-American legal system <ref> [ Ashley and Rissland, 1987, Levi, 1949, Llewellyn, 1930 ] </ref> . Anglo-American law "requires the presentation of competing examples." [ Levi, 1949, p. 5 ] . Although one result may be more likely than another, it is generally possible to make these arguments in both directions.
Reference: [ Ashley and Rissland, 1988 ] <author> Ashley, Kevin D. and Rissland, Edwina L. </author> <year> 1988. </year> <title> Waiting on weighting: a symbolic least commitment approach. </title> <booktitle> In Proceedings of the Seventh National Conference on Artificial Intelligence, </booktitle> <address> Minneapolis, </address> <publisher> Minnesota. </publisher> <pages> 239-244. </pages>
Reference-contexts: As the case base grows, the cost of comparisons may present a problem; if so, we will explore the possibility of assigning weights to facts. CHIRON follows HYPO in delaying as far as possible an assignment of weights <ref> [ Ashley and Rissland, 1988 ] </ref> . GREBE makes a similar decision [ Branting, 1990a, page 41 ] .
Reference: [ Ashley, 1991 ] <author> Ashley, Kevin D. </author> <year> 1991. </year> <title> Modelling legal argument: reasoning with cases and hypothet-icals. MIT Press. </title> <type> (Revised version of PhD thesis, </type> <institution> originally University of Massachusetts at Amherst Department of Computer and Information Science Technical Report 88-01.). </institution>
Reference-contexts: HYPO illustrates a use of cases that is different from Gardner's <ref> [ Ashley, 1991 ] </ref> . Like TAXMAN and Gardner's program, HYPO takes a sequence of facts as input. As in the earlier systems, the problem is to determine whether the facts satisfy certain legal requirements (in this case, whether they constitute a trade secrets violation). <p> In law, it seems clear that you want to include both surface features and abstractions. This corresponds to the difference between indexing under the actual words of the court's opinion, as the current computer databases do, and under abstractions, as HYPO does <ref> [ Ashley, 1991 ] </ref> . Ideally, a system would use both. A more difficult problem, not addressed in CHEF, is how to choose the abstractions. Note that the broccoli and tofu recipe is indexed under stir-fry with tofu and vegetable, not stir-fry with tofu and something green. <p> These projects suggest various approaches, including using prototypes [ Bareiss, 1988, McCarty, 1980, McCarty, 1989a ] ; a set of simplified case patterns [ Gardner, 1987 ] ; a set of cases with concrete facts, related by dimensions <ref> [ Ashley, 1991 ] </ref> ; and the single best match from a set of cases with a rich, detailed semantic-net representation [ Branting, 1990a ] . In planning, the two lines of work that are most closely related to CHIRON are hierarchical, nonlinear planning and case-based planning. <p> Here, again, CHIRON uses a group of cases. Like Gardner's program, HYPO, and CABARET, it places the current situation within the context of a group of previous cases <ref> [ Gardner, 1987, Ashley, 1991, Rissland and Skalak, 1991 ] </ref> . One of CHIRON's contributions is incorporating this technique in a problem-solving system. Most case-based reasoning systems have based their output plans, diagnoses, explanations, or whatever on a single best case.
Reference: [ Bareiss, 1988 ] <author> Bareiss, </author> <title> Ray 1988. Protos: a unified approach to concept representation, classification, and learning. </title> <type> Technical Report AI88-83, </type> <institution> University of Texas at Austin. </institution> <type> (PhD Thesis). </type>
Reference-contexts: problem is simpler than full subgraph isomorphism (which is NP-complete [ Garey and Johnson, 1979 ] ), but still more complex than simple vector comparisons. 18 2.1.7 Projects outside of artificial intelligence and law Protos, a medical diagnosis system, also addressed the problem of classifying new instances of underdefined concepts <ref> [ Bareiss, 1988 ] </ref> . Influenced by the psychological literature on category formation, Protos represented concepts extensionally using a set of cases. Protos's representation is similar to the one suggested by McCarty for legal concepts. <p> The problem of reasoning about open-textured concepts has been addressed by previous systems in the context of analysis, categorization, and design. These projects suggest various approaches, including using prototypes <ref> [ Bareiss, 1988, McCarty, 1980, McCarty, 1989a ] </ref> ; a set of simplified case patterns [ Gardner, 1987 ] ; a set of cases with concrete facts, related by dimensions [ Ashley, 1991 ] ; and the single best match from a set of cases with a rich, detailed semantic-net representation <p> There is currently one prototype per strategy. CHIRON's prototypes are not real cases. In Protos, actual previous cases are used as prototypes <ref> [ Bareiss, 1988 ] </ref> . Both approaches are influenced by work in psychology suggesting that concepts are best represented by a set of more or less typical cases, interrelated by family 51 resemblances [ Rosch and Mervis, 1975 ] .
Reference: [ Bench-Capon and Sergot, 1988 ] <author> Bench-Capon, Trevor and Sergot, Marek J. </author> <year> 1988. </year> <title> Towards a rule-based representation of open texture in law. In Computer power and legal language. Quorum Books, </title> <address> New York. </address> <pages> 39-60. </pages>
Reference-contexts: issue of whether Chapter 13 personal bankruptcy plans are proposed in good faith [ Rissland et al., 1994 ] . 2.1.4 Bench-Capon and Sergot Bench-Capon and Sergot encountered the problem of representing and reasoning about open-textured predicates in a series of projects on the representation of legislation as logic programs <ref> [ Bench-Capon and Sergot, 1988, Sergot et al., 1986 ] </ref> . They suggest that a legal reasoning system should handle open-textured concepts by giving the user arguments for and against the application of the concept in borderline cases. This is similar to the approach taken by HYPO and CABARET.
Reference: [ Berman and Hafner, 1991 ] <author> Berman, Donald H. and Hafner, Carole D. </author> <year> 1991. </year> <title> Incorporating procedural context into a model of case-based legal reasoning. </title> <booktitle> In Proceedings of the Third International Conference on Artificial Intelligence and Law, </booktitle> <publisher> Oxford. </publisher> <pages> 12-20. </pages>
Reference-contexts: In future work, CHIRON's arguments could be refined by making use of this information, and to support more subtle arguments based on the identity of the court, it would also be useful to include the procedural context of each decision, as suggested in <ref> [ Berman and Hafner, 1991 ] </ref> . The facts of the case are represented as a list of propositions.
Reference: [ Branting, 1988 ] <author> Branting, L. </author> <title> Karl 1988. The role of explanations in reasoning from legal precedents. </title> <booktitle> In Proceedings of a Workshop on Case-Based Reasoning. </booktitle> <pages> 94-103. </pages>
Reference: [ Branting, 1989a ] <author> Branting, L. </author> <title> Karl 1989a. Integrating generalizations with exemplar-based reasoning. </title> <booktitle> In Proceedings of a Workshop on Case-Based Reasoning. </booktitle> <pages> 224-229. 164 </pages>
Reference: [ Branting, 1989b ] <author> Branting, L. </author> <title> Karl 1989b. Integrating generalizations with exemplar-based reasoning. </title> <booktitle> In Proceedings of the Eleventh Annual Conference of the Cognitive Science Society, </booktitle> <address> Ann Arbor, </address> <publisher> Michigan. </publisher> <pages> 139-146. </pages>
Reference: [ Branting, 1989c ] <author> Branting, L. </author> <title> Karl 1989c. Representing and reusing explanations of legal precedents. </title> <booktitle> In Proceedings of the Second International Conference on Artificial Intelligence and Law, </booktitle> <address> Vancouver, British Columbia. </address> <pages> 103-110. </pages>
Reference: [ Branting, 1990a ] <author> Branting, L. </author> <title> Karl 1990a. Integrating rules and precedents for classification and explanation: automating legal analysis. </title> <type> Technical Report AI90-146, </type> <institution> Artificial Intelligence Laboratory, Department of Computer Sciences, University of Texas at Austin. </institution> <type> (PhD Thesis). </type>
Reference-contexts: Bareiss, 1988, McCarty, 1980, McCarty, 1989a ] ; a set of simplified case patterns [ Gardner, 1987 ] ; a set of cases with concrete facts, related by dimensions [ Ashley, 1991 ] ; and the single best match from a set of cases with a rich, detailed semantic-net representation <ref> [ Branting, 1990a ] </ref> . In planning, the two lines of work that are most closely related to CHIRON are hierarchical, nonlinear planning and case-based planning. <p> At a minimum, the precision required by a formal theory helps to enforce careful and consistent use of the symbols representing domain concepts. The more expressive the representation language, the greater the danger of representing equivalent facts differently (as noted also in <ref> [ Branting, 1990a, page 113 ] </ref> ). A formal analysis can help to prevent (or reveal) inconsistencies of this kind. <p> None of the previous systems combined all of these features, and as a result, although all of them supported some of these tasks, none of them could support all. 2 For a simple algorithm for translating from a logical representation into GREBE's semantic nets, see <ref> [ Branting, 1990a, page 30 ] </ref> . 55 Chapter 4 Open-textured planning 4.1 Introduction CHIRON is designed to be a lawyer's assistant. The hypothetical user of the system, a lawyer, begins by entering information about a taxpayer's goals and tax situation. <p> Each edge corresponds to a predicate and its endpoints correspond to parameters. Two edges match only if their labels are equal. This fact makes the problem substantially easier (c.f. discussion in <ref> [ Branting, 1990a, page 42 ] </ref> ). How much easier, depends on whether the labels are distinct. In practice, CHIRON's problem is closer to the unique-label problem than to full subgraph isomorphism. Most of its labels are distinct, but a few are duplicates. <p> CHIRON follows HYPO in delaying as far as possible an assignment of weights [ Ashley and Rissland, 1988 ] . GREBE makes a similar decision <ref> [ Branting, 1990a, page 41 ] </ref> . <p> In general, assigning weights is a difficult problem in 1 We select the mapping that causes the greatest number of facts in the current situation to be matched, while GREBE looks for the mapping that leaves the fewest facts in the precedent case unmatched. <ref> [ Branting, 1990a ] </ref> These criteria reflect a difference in emphasis, but are computationally the same. 142 this domain.
Reference: [ Branting, 1990b ] <author> Branting, L. </author> <title> Karl 1990b. </title> <type> (personal communication). </type>
Reference-contexts: GREBE (below) always tries both case-based and rule-based reasoning, generates all the solutions it can find, and uses heuristics afterwards to choose among them <ref> [ Branting, 1990b ] </ref> . CABARET was the first to examine a more complex form of control. In connection with this project, Rissland and Skalak also defined an expanded model of argument.
Reference: [ Branting, 1994 ] <author> Branting, L. </author> <title> Karl 1994. </title> <type> (personal communication). </type>
Reference-contexts: All criterial facts are treated equally; they are not weighted according to their importance <ref> [ Branting, 1994 ] </ref> . If both positive and negative cases exceed a certain (arbitrary) threshold, GREBE constructs arguments in both directions. <p> Although noncriterial facts could be represented, in fact, GREBE only includes facts that are used by the court to explain its result with respect to some predicate <ref> [ Branting, 1994 ] </ref> . Finally, like Gardner's program, GREBE has no way of sorting previous cases temporally, so there is no way of determining trends. In addition, using a richer knowledge representation has disadvantages as well as advantages: first, representing cases is time-consuming and difficult.
Reference: [ Chirelstein, 1988 ] <author> Chirelstein, Marvin A. </author> <year> 1988. </year> <title> Federal Income Taxation: a law student's guide to the leading cases and concepts. </title> <publisher> Foundation Press, Westbury, </publisher> <address> NY. </address>
Reference-contexts: The United States' income tax is transfer-based; that is, tax is triggered by the transfer of money or property from one legal entity (individual, corporation, trust, etc.) to another <ref> [ Chirelstein, 1988 ] </ref> . Concepts of property, property rights, and property transfers are central to this domain. Some of these concepts we had already formalized [ Sanders, 1989a, Sanders, 1989b ] ; others, we added as necessary. Part of CHIRON's property-type hierarchy is given in Figure 3.4.
Reference: [ Cohen and Howe, 1988 ] <author> Cohen, Paul R. and Howe, Adele E. </author> <year> 1988. </year> <title> How evaluation guides AI research. </title> <journal> Artificial Intelligence Magazine 9 </journal> <pages> 35-43. </pages>
Reference-contexts: But capturing this dynamic relationship between changing statutes and cases is a difficult (and unsolved) problem. 135 Chapter 7 Evaluating CHIRON 7.1 Introduction Throughout artificial intelligence, more attention is being given to validation and evaluation of programs <ref> [ Cohen and Howe, 1988 ] </ref> . If we are to make progress, we must ask what our goals are and whether they have been achieved; and if we want others to use our systems, we must persuade them that the output of those systems will be useful and reliable.
Reference: [ Cohen, 1987 ] <author> Cohen, </author> <title> Robin 1987. Interpreting clues in conjunction with processing restrictions in arguments and discourse. </title> <booktitle> In Proceedings of the Sixth National Conference on Artificial Intelligence, </booktitle> <address> Seattle, Washington. </address> <pages> 528-533. </pages>
Reference-contexts: For interesting work in this area, see <ref> [ Cohen, 1987 ] </ref> . 30 3.2 Statutory rules One of the key problems in legal reasoning, as discussed in Chapter 1, is the need to represent and reason with open-textured rules. In particular, since CHIRON is a tax planner, we need to represent part of the tax law.
Reference: [ Cuthill and McCartney, 1990 ] <author> Cuthill, Barbara and McCartney, Robert 1990. </author> <title> Issue spotting in legal cases. </title> <booktitle> In Proceedings of the Fourth International Conference on Artificial Intelligence and Law, Amsterdam. </booktitle> <pages> 245-253. </pages>
Reference: [ Cuthill, 1992 ] <author> Cuthill, </author> <title> Barbara 1992. Situation analysis, precedent retrieval, and cross-context reminding in case-based reasoning. </title> <type> Technical Report CSE-TR-92-3, </type> <institution> University of Connecticut Department of Computer Science and Engineering. </institution> <type> (PhD Thesis). </type>
Reference-contexts: We chose, therefore, to see how far the system could go using only cases from the current context. For interesting work on cross-context remindings in the domain of tort law, see <ref> [ Cuthill, 1992 ] </ref> . Finally, CHIRON uses a static set of indices. Static indexing is easier to implement, and as a result, has been used in most CBR systems. Dynamic indexing gives the system the flexibility to solve problems involving a demand for information that is not originally accessible. <p> Taking into account the temporal dimension of the casebase is rare in CBR systems. Cuthill also uses timestamps: her system, CHASER, includes a preference for more recent cases in its retrieval algorithm <ref> [ Cuthill, 1992 ] </ref> . Reasoning about the time of cases seems intuitive in legal reasoning systems; it could be useful for any system in a domain that changes over time. CHIRON also uses its claim lattices as a basis for arguments for and against the success of its plans.
Reference: [ Davis, 1990 ] <author> Davis, </author> <title> Ernest 1990. Representations of commonsense knowledge. </title> <publisher> Morgan Kaufman, </publisher> <address> San Mateo, California. </address>
Reference-contexts: Formal domain theories can help in implementing AI programs, even where the facts and axioms of the theory are not used as input to a theorem prover (c.f. discussion in <ref> [ Davis, 1990, pages 12-14 ] </ref> ). At a minimum, the precision required by a formal theory helps to enforce careful and consistent use of the symbols representing domain concepts.
Reference: [ Fikes and Nilsson, 1971 ] <author> Fikes, Richard and Nilsson, Nils J. </author> <year> 1971. </year> <title> STRIPS: a new approach to the application of theorem proving to problem solving. </title> <booktitle> Artificial Intelligence 2 </booktitle> <pages> 189-208. </pages>
Reference-contexts: I focus on these in the remainder of this section. 2.2.1 Hierarchical and nonlinear planning In linear planning, an intermediate plan consists of a sequence of primitive actions, and plans are constructed by adding steps to this prefix <ref> [ Fikes and Nilsson, 1971 ] </ref> . Thus, for example, suppose you normally have a cup of coffee for breakfast.
Reference: [ Gardner, 1987 ] <author> Gardner, Anne v.d.L. </author> <year> 1987. </year> <title> An artificial intelligence approach to legal reasoning. </title> <publisher> MIT Press, </publisher> <address> Cambridge, Massachusetts. </address>
Reference-contexts: In this section, I focus on recent work and work that is closely related to this thesis; for more details on earlier work, see the thorough and readable survey in <ref> [ Gardner, 1987 ] </ref> . 2.1.1 TAXMAN and EPS TAXMAN was one of the earliest AI and law projects, a program that analyzed cases in the domain of corporate tax law [ McCarty, 1977 ] . <p> However, as with TAXMAN II, algorithmic issues such as how the prototypes are chosen, indexing, and search are ignored. And again, there is no explicit facility for representing or reasoning with legal cases. 9 2.1.2 Gardner Gardner has also addressed the open-textured statutory predicate problem. Her (unnamed) system <ref> [ Gardner, 1987 ] </ref> , like TAXMAN, takes a sequence of events as input and determines whether that sequence satisfies certain legal requirements. Gardner's domain is contract law, but the problem is essentially the same. Gardner's solution is quite different from McCarty's, however. <p> In effect, each open-textured predicate corresponds to a set of cases. The case representations are simple patterns to be matched in the facts of the current situation; Gardner leaves for future work the problem of developing and using detailed case representations that would correspond closely to court decisions <ref> [ Gardner, 1987, page 155 ] </ref> . The relationships between the cases are not spelled out. There are no levels of abstractions between the facts and the statutory predicates. Moreover, Gardner's program has no information about case transformations, such as those suggested by McCarty. <p> The problem of reasoning about open-textured concepts has been addressed by previous systems in the context of analysis, categorization, and design. These projects suggest various approaches, including using prototypes [ Bareiss, 1988, McCarty, 1980, McCarty, 1989a ] ; a set of simplified case patterns <ref> [ Gardner, 1987 ] </ref> ; a set of cases with concrete facts, related by dimensions [ Ashley, 1991 ] ; and the single best match from a set of cases with a rich, detailed semantic-net representation [ Branting, 1990a ] . <p> The loss of reasoning power seems outweighed by the gain in efficiency, however. Practically speaking, you only want to look at cases interpreting different plans if you cannot find a closer match. Legal provisions are context-dependent; their meaning cannot be assumed to be the same wherever they appear <ref> [ Gardner, 1987, page 53 ] </ref> . In a well-drafted statute such as the Internal Revenue Code, language is generally used in a consistent way, and cases interpreting one section are persuasive in arguing about another, but still, the results are not necessarily the same. <p> Here, again, CHIRON uses a group of cases. Like Gardner's program, HYPO, and CABARET, it places the current situation within the context of a group of previous cases <ref> [ Gardner, 1987, Ashley, 1991, Rissland and Skalak, 1991 ] </ref> . One of CHIRON's contributions is incorporating this technique in a problem-solving system. Most case-based reasoning systems have based their output plans, diagnoses, explanations, or whatever on a single best case. <p> Suppose we had chosen a purely rule-dominant design. Then the system would refine the plan as far as possible using rules, and invoke the case-based planner only when the rules run out. This is comparable to the algorithm used by Gardner's legal analysis system <ref> [ Gardner, 1987 ] </ref> . As the rule base grows larger and larger, however, search control controlling the 70 choice of plan decompositions becomes an important issue. The case-based reasoner could suggest search paths for the hierarchical planner, if it were invoked earlier. Suppose we had chosen a case-dominant design.
Reference: [ Garey and Johnson, 1979 ] <author> Garey, Michael R. and Johnson, David S. </author> <year> 1979. </year> <title> Computers and intractability. </title> <editor> W. H. </editor> <publisher> Freeman and Company, </publisher> <address> New York. </address> <month> 165 </month>
Reference-contexts: Perhaps most critically, the process of matching cases becomes equivalent to graph isomorphism. Since the edges of GREBE's graphs are labeled, the problem is simpler than full subgraph isomorphism (which is NP-complete <ref> [ Garey and Johnson, 1979 ] </ref> ), but still more complex than simple vector comparisons. 18 2.1.7 Projects outside of artificial intelligence and law Protos, a medical diagnosis system, also addressed the problem of classifying new instances of underdefined concepts [ Bareiss, 1988 ] . <p> Since our representation can easily be translated into GREBE's semantic nets, the problem for CHIRON, as for GREBE, is essentially one of finding isomorphic subgraphs. 1 If our graphs were unlabelled, the problem would be NP-complete. <ref> [ Garey and Johnson, 1979 ] </ref> But the edges are labelled. Each edge corresponds to a predicate and its endpoints correspond to parameters. Two edges match only if their labels are equal. This fact makes the problem substantially easier (c.f. discussion in [ Branting, 1990a, page 42 ] ).
Reference: [ Ghosh et al., 1991 ] <author> Ghosh, Subrata; Hendler, James; Kambhampati, Subbarao; and Kettler, </author> <title> Brian 1991. Common Lisp Implementation of NONLIN USER MANUAL. </title> <institution> Computer Science Department, University of Maryland, College Park, Maryland 20742. </institution>
Reference-contexts: decision whether to risk executing the plan is left to the user. 77 The hierarchical and case-based planners are discussed in more detail in the next two sections. 5.4 Hierarchical planner CHIRON's hierarchical planner is adapted from a version of Nonlin implemented in Common Lisp at the University of Maryland <ref> [ Ghosh et al., 1991 ] </ref> . CHIRON retains the basic flow of control and architecture of the Maryland Nonlin, but stores most of its data, including the tasknet, in DUCK, a deductive retriever written at Yale [ McDermott, 1985 ] .
Reference: [ Golding and Rosenbloom, 1991 ] <author> Golding, Andrew R. and Rosenbloom, Paul S. </author> <year> 1991. </year> <title> Improving rule-based systems through case-based reasoning. </title> <booktitle> In Proceedings of the Ninth National Conference on Artificial Intelligence, </booktitle> <address> Anaheim, California. </address> <pages> 22-27. </pages>
Reference-contexts: Anapron is a recent project that addresses the problem of rules with exceptions in the domain of name pronunciation <ref> [ Golding and Rosenbloom, 1991 ] </ref> . It applies rules to find a pronunciation for a given name and uses that pronunciation, unless the current case is judged to be compellingly similar to a previous exceptional case.
Reference: [ Gordon, 1993 ] <author> Gordon, Thomas F. </author> <year> 1993. </year> <title> The pleadings game: an artificial intelligence model of procedural justice. </title> <type> Technical report, </type> <institution> Fachbereich Informatik der Technischen Hochschule Darmstadt. </institution> <type> (PhD Thesis). </type>
Reference-contexts: This is a brief attempt to formalize the model of legal argument used by CHIRON, which is similar to HYPO's. For further attempts to formalize legal argument generally, see [ Loui et al., 1993 ] and <ref> [ Gordon, 1993 ] </ref> . 3.5 Prototypes In addition to representations of actual legal cases, the case base includes prototype cases. Prototypes are represented using the same structure as cases, but indexed separately in *prototype-index*.
Reference: [ Hafner, 1978 ] <author> Hafner, Carole D. </author> <year> 1978. </year> <title> An information retrieval system based on a computer model of legal knowledge. </title> <type> Ph.D. Dissertation, </type> <institution> University of Michigan. </institution>
Reference: [ Hammond, 1986 ] <author> Hammond, Kristian J. </author> <year> 1986. </year> <title> Case-based planning: an integrated theory of planning, learning, and memory. </title> <type> Technical Report YALEU/CSD/RR 488, </type> <institution> Yale University Department of Computer Science. </institution> <type> (PhD Thesis). </type>
Reference-contexts: How can you make it useful? How are cases adapted and repaired for use in the current situation? 4. How can you evaluate the output of the system? For example, consider the case-based planner CHEF, which constructs plans, or recipes, in the cooking domain <ref> [ Hammond, 1986 ] </ref> . It takes as input the user's goals, that is, the desired tastes, textures, and types of dishes, and uses its case base of previous cooking experiences to construct a recipe that satisfies those goals.
Reference: [ Hammond, 1989 ] <author> Hammond, Kristian J. </author> <year> 1989. </year> <title> On functionally motivated vocabularies: an apologia. </title> <booktitle> In Proceedings of a Workshop on Case-based Reasoning. </booktitle> <pages> 52-56. </pages>
Reference-contexts: The same tradeoff must be faced by the designer of a legal reasoning system. The question of whether or not to include abstractions has caused a certain amount of controversy in CBR <ref> [ Hammond, 1989, Waltz, 1989 ] </ref> . CHEF indexes plans under both the ingredients included and abstractions of those ingredients, in order to allow partial matches.
Reference: [ Hanks and Weld, 1992 ] <author> Hanks, Steven and Weld, Daniel S. </author> <year> 1992. </year> <title> Systematic adaptation for case-based planning. </title> <booktitle> In Proceedings of the First International Conference on Artificial Intelligence Planning Systems. </booktitle> <pages> 96-105. </pages>
Reference-contexts: Hanks and Weld describe a formal adaptation algorithm, implemented in their system SPA. Their algorithm is sound, complete, and systematic: its plans are guaranteed to work, it always finds a plan if there is one, and it never tries the same adaptation twice <ref> [ Hanks and Weld, 1992 ] </ref> . In both PRIAR and SPA, cases provide an increase in efficiency, but not in reasoning power. <p> In other words, it's possible either to build a plan from scratch or to start with an old plan and modify it; the only reason for choosing the latter is that it may be more efficient <ref> [ Hanks and Weld, 1992, page 97 ] </ref> .
Reference: [ Hart, 1961 ] <author> Hart, H. L. A. </author> <year> 1961. </year> <title> The concept of law. </title> <publisher> Clarendon Press, Oxford. </publisher>
Reference-contexts: This issue arises throughout legal reasoning, not just in tax. Indeed, it is part of a general natural language problem. Many ordinary categories, such as tiger or cup, are surprisingly difficult to define. This indeterminacy has been studied in linguistics and philosophy, where it is labeled open texture <ref> [ Waismann, 1965, Hart, 1961, Lakoff, 1987 ] </ref> . Any planning rule expressed in natural language, such as be careful, never get involved in a land war in Asia, or buy low, sell high, suffers from the same problem. In any domain, open-textured rules can be partially defined by examples. <p> This issue arises throughout legal reasoning, not just in tax. Indeed, it is part of a general natural language problem. Many ordinary categories, such as tiger or cup, are surprisingly difficult to define. This indeterminacy has been studied in linguistics and philosophy, where it is labeled open texture <ref> [ Waismann, 1965, Hart, 1961, Lakoff, 1987 ] </ref> . Any planning rule expressed in natural language, such as be careful, never get involved in a land war in Asia, or buy low, sell high, suffers from the same problem. The cases only partially define the rules.
Reference: [ Hinrichs and Kolodner, 1991 ] <author> Hinrichs, Thomas and Kolodner, </author> <title> Janet 1991. The roles of adaptation in case-based design. </title> <booktitle> In Proceedings of the Ninth National Conference on Artificial Intelligence, </booktitle> <address> Anaheim, California. </address>
Reference-contexts: In JULIA, cases are used as starting points for solving design problems in an open world <ref> [ Hinrichs and Kolodner, 1991, Hinrichs, 1991 ] </ref> . JULIA is an interactive system; the system and the user cooperate to generate menus, given constraints such as the facts that one of the guests is a vegetarian and another will only eat meat and potatoes.
Reference: [ Hinrichs, 1991 ] <author> Hinrichs, Thomas Ryland 1991. </author> <title> Problem solving in open worlds: a case study in design. </title> <type> Technical Report GIT-CC-91/36, </type> <institution> Georgia Institute of Technology. </institution> <type> (PhD Thesis). </type>
Reference-contexts: In JULIA, cases are used as starting points for solving design problems in an open world <ref> [ Hinrichs and Kolodner, 1991, Hinrichs, 1991 ] </ref> . JULIA is an interactive system; the system and the user cooperate to generate menus, given constraints such as the facts that one of the guests is a vegetarian and another will only eat meat and potatoes.
Reference: [ Hughes and Cresswell, 1968 ] <author> Hughes, G.E. and Cresswell, M.J. </author> <year> 1968. </year> <title> An Introduction to Modal Logic. </title> <publisher> Methuen, London. </publisher>
Reference-contexts: A complete list of CHIRON's vocabulary is given in Appendix D. 3.4.4 Axioms We use an S5 axiom set for know, weak S5 for believe, T without veridicality for want and obligated, and the inference rules modus ponens and universal instantiation (cf. <ref> [ Hughes and Cresswell, 1968 ] </ref> ). In addition, we use an Axiom of Noncontradiction for want, believe, and obligated: (O x t 1 t 2 ) ! :(O : x t 1 t 2 ) (where O is either believe, want, or obligated.).
Reference: [ Kambhampati and Hendler, 1989 ] <author> Kambhampati, Subbarao and Hendler, James A. </author> <year> 1989. </year> <title> Control of refitting during plan reuse. </title> <booktitle> In Proceedings of the Eleventh International Joint Conference on Artificial Intelligence, </booktitle> <address> Detroit, </address> <publisher> Michigan. </publisher> <pages> 943-948. </pages>
Reference-contexts: (add object (result act3) to (result act4)) act6 (stir-fry object (result act5) time (2))) (style style-stir-fry)) Two recent planners have added case-based reasoning to nonlinear planners and taken the reasoning process by which the plan was generated (i.e., the final successful search path through the plan space) as their cases <ref> [ Veloso, 1992, Kambhampati and Hendler, 1989 ] </ref> . When solving a new problem, they adapt the method used to solve a previous problem, rather than the previous problem's solution. <p> In general, they suggest that efficient adaptation strategies (which they call refitting) should be conservative: they should change the old plan only as much as necessary to fit it to the new situation <ref> [ Kambhampati and Hendler, 1989 ] </ref> . Hanks and Weld describe a formal adaptation algorithm, implemented in their system SPA. <p> plans were as correct as the plans that would have been generated by the nonlinear planner alone (i.e., that any errors in a plan are due to the inadequacy of the system's domain theory and would have occurred regardless of the method by which the plan was generated) [page 948] <ref> [ Kambhampati and Hendler, 1989 ] </ref> . In domains with a weak causal theory, cases provide an increase in reasoning power, as well as efficiency.
Reference: [ Klein and Calderwood, 1988 ] <author> Klein, Gary R. and Calderwood, </author> <month> Roberta </month> <year> 1988. </year> <title> How do people use analogues to make decisions? In Proceedings of a Workshop on Case-based Reasoning. </title> <type> 209-223. </type>
Reference-contexts: There is evidence that people use cases in this way. For example, one study collected protocols of decisionmaking in four domains: design engineering, firefighting (urban and woodland), and tank platoons <ref> [ Klein and Calderwood, 1988 ] </ref> . One of the ways these decision-makers used cases was to reassure themselves that their current plan would succeed. Similarly, in the legal domain, no memorandum or brief would be convincing unless it included citations to statutory and case law.
Reference: [ Lakatos, 1976 ] <author> Lakatos, </author> <title> Imre 1976. Proofs and refutations: the logic of mathematical discovery. </title> <publisher> Cambridge University Press, </publisher> <address> Cambridge, England. </address> <month> 166 </month>
Reference-contexts: In fact, experts in medicine, engineering, and even mathematics disagree, and find it useful to be able to argue for and against particular conclusions (see, e.g., <ref> [ Lakatos, 1976 ] </ref> ). The ability to argue for and against a particular conclusion is useful in many domains. For lawyers it is central; and as a result, the process is particularly well-illustrated in law. Tax planning is no exception. Here, the adversaries are the taxpayers and the government.
Reference: [ Lakoff, 1987 ] <author> Lakoff, George 1987. Women, </author> <title> fire, and dangerous things: what categories reveal about the mind. </title> <publisher> University of Chicago Press, Chicago, Illinois. </publisher>
Reference-contexts: This issue arises throughout legal reasoning, not just in tax. Indeed, it is part of a general natural language problem. Many ordinary categories, such as tiger or cup, are surprisingly difficult to define. This indeterminacy has been studied in linguistics and philosophy, where it is labeled open texture <ref> [ Waismann, 1965, Hart, 1961, Lakoff, 1987 ] </ref> . Any planning rule expressed in natural language, such as be careful, never get involved in a land war in Asia, or buy low, sell high, suffers from the same problem. In any domain, open-textured rules can be partially defined by examples. <p> This issue arises throughout legal reasoning, not just in tax. Indeed, it is part of a general natural language problem. Many ordinary categories, such as tiger or cup, are surprisingly difficult to define. This indeterminacy has been studied in linguistics and philosophy, where it is labeled open texture <ref> [ Waismann, 1965, Hart, 1961, Lakoff, 1987 ] </ref> . Any planning rule expressed in natural language, such as be careful, never get involved in a land war in Asia, or buy low, sell high, suffers from the same problem. The cases only partially define the rules.
Reference: [ Levi, 1949 ] <author> Levi, Edward H. </author> <year> 1949. </year> <title> An introduction to legal reasoning. </title> <publisher> University of Chicago Press, </publisher> <address> Chicago, IL. </address>
Reference-contexts: This is one of the key legal skills, particularly in the Anglo-American legal system <ref> [ Ashley and Rissland, 1987, Levi, 1949, Llewellyn, 1930 ] </ref> . Anglo-American law "requires the presentation of competing examples." [ Levi, 1949, p. 5 ] . Although one result may be more likely than another, it is generally possible to make these arguments in both directions. <p> This is one of the key legal skills, particularly in the Anglo-American legal system [ Ashley and Rissland, 1987, Levi, 1949, Llewellyn, 1930 ] . Anglo-American law "requires the presentation of competing examples." <ref> [ Levi, 1949, p. 5 ] </ref> . Although one result may be more likely than another, it is generally possible to make these arguments in both directions.
Reference: [ Lifschitz, 1987 ] <author> Lifschitz, </author> <title> Vladimir 1987. Formal theories of action. </title> <booktitle> In Proceedings of the 1987 Workshop on the Frame Problem in Artificial Intelligence. </booktitle>
Reference-contexts: This approach is receptive to formal treatment <ref> [ Lifschitz, 1987 ] </ref> . However, it fails to take advantage of the structure that can be provided by abstractions. In hierarchical planning, by contrast, intermediate plans are complete but abstract.
Reference: [ Llewellyn, 1930 ] <author> Llewellyn, Karl N. </author> <year> 1930. </year> <title> The Bramble Bush: our law and its study. </title> <publisher> Oceana Publications, </publisher> <address> Dobbs Ferry, New York. </address>
Reference-contexts: This is one of the key legal skills, particularly in the Anglo-American legal system <ref> [ Ashley and Rissland, 1987, Levi, 1949, Llewellyn, 1930 ] </ref> . Anglo-American law "requires the presentation of competing examples." [ Levi, 1949, p. 5 ] . Although one result may be more likely than another, it is generally possible to make these arguments in both directions.
Reference: [ Loui et al., 1993 ] <author> Loui, Ronald P.; Norman, Jeff; Olson, Jon; and Merrill, </author> <title> Andrew 1993. A design for reasoning with policies, precedents, </title> <booktitle> and rationales. In Proceedings of the Fourth International Conference on Artificial Intelligence and Law, Amsterdam. </booktitle> <pages> 202-211. </pages>
Reference-contexts: This is a brief attempt to formalize the model of legal argument used by CHIRON, which is similar to HYPO's. For further attempts to formalize legal argument generally, see <ref> [ Loui et al., 1993 ] </ref> and [ Gordon, 1993 ] . 3.5 Prototypes In addition to representations of actual legal cases, the case base includes prototype cases. Prototypes are represented using the same structure as cases, but indexed separately in *prototype-index*.
Reference: [ McCartney and Sanders, 1990 ] <author> McCartney, Robert and Sanders, Kathryn E. </author> <year> 1990. </year> <title> The case for cases: a call for purity in case-based reasoning. </title> <booktitle> In Proceedings of the AAAI Symposium on Case-based Reasoning. </booktitle> <pages> 12-16. </pages>
Reference: [ McCartney and Wurst, 1991 ] <author> McCartney, Robert and Wurst, Karl R. </author> <year> 1991. </year> <title> DEFARGE: a real-time execution monitor for a case-based planner. </title> <booktitle> In Proceedings of the Workshop on Case-Based Reasoning. </booktitle> <pages> 233-244. </pages>
Reference: [ McCartney, 1993 ] <author> McCartney, Robert 1993. </author> <title> Planning from partial and multiple episodes in a case-based planner. </title> <booktitle> In Proceedings of the 1993 AAAI Workshop on Case-Based Reasoning, </booktitle> <address> Washington, D.C. </address> <pages> 94-100. </pages>
Reference: [ McCarty and Sridharan, 1982 ] <author> McCarty, L. Thorne and Sridharan, N.S. </author> <year> 1982. </year> <title> A computational theory of legal argument. </title> <type> Technical Report LRP-TR-13, </type> <institution> Laboratory for Computer Science Research, Rutgers University. </institution>
Reference-contexts: McCarty concluded that TAXMAN's rules were insufficient for representing these concepts. Standard rule-based expert systems would have the same problem in this domain. In his next project, TAXMAN II, McCarty began investigating ways of modifying TAXMAN to handle open-textured concepts <ref> [ McCarty, 1980, McCarty and Sridharan, 1982 ] </ref> . One approach might have been to add cases to the knowledge base. Examples of business purpose and step transaction are given in various cases (see, e.g., Gregory v. Helvering, 293 U.S. 465 (1935), and Helvering v. <p> In the course of this project, McCarty developed a deontic logic for representing the concepts of permissions and obligations that occur in the legal domain <ref> [ McCarty and Sridharan, 1982, McCarty, 1986, McCarty, 1983 ] </ref> . More recently, he has elaborated a knowledge representation language with a formal intuitionistic semantics that incorporates time, events, and actions, as well as permissions and obligations [ McCarty, 1989b, McCarty, 1989a ] .
Reference: [ McCarty, 1977 ] <author> McCarty, L. </author> <title> Thorne 1977. Reflections on TAXMAN: an experiment in artificial intelligence and legal reasoning. </title> <publisher> Harvard Law Review 90 </publisher> <pages> 837-893. </pages>
Reference-contexts: is closely related to this thesis; for more details on earlier work, see the thorough and readable survey in [ Gardner, 1987 ] . 2.1.1 TAXMAN and EPS TAXMAN was one of the earliest AI and law projects, a program that analyzed cases in the domain of corporate tax law <ref> [ McCarty, 1977 ] </ref> . For this project, McCarty designed a representation language using an economical set of statutory predicates that was sufficiently expressive to state the facts of an input case in this domain in detail. <p> This language is influenced by McDermott's temporal logic and also by the work of McCarty in representing legal concepts, especially <ref> [ McCarty, 1989b, McCarty, 1977 ] </ref> . The syntax of our language is similar to Shoham's [ Shoham, 1988, pages 43-44 ] .
Reference: [ McCarty, 1980 ] <author> McCarty, L. </author> <title> Thorne 1980. The TAXMAN project: towards a cognitive theory of legal argument. In Niblett, Bryan, editor 1980, Computer Science and Law. </title> <publisher> Cambridge University Press, </publisher> <address> Cambridge, England. </address> <pages> 23-43. </pages>
Reference-contexts: McCarty concluded that TAXMAN's rules were insufficient for representing these concepts. Standard rule-based expert systems would have the same problem in this domain. In his next project, TAXMAN II, McCarty began investigating ways of modifying TAXMAN to handle open-textured concepts <ref> [ McCarty, 1980, McCarty and Sridharan, 1982 ] </ref> . One approach might have been to add cases to the knowledge base. Examples of business purpose and step transaction are given in various cases (see, e.g., Gregory v. Helvering, 293 U.S. 465 (1935), and Helvering v. <p> McCarty's contributions are first, the idea that a set of related cases could be used to represent an open-textured concept; and second, the suggestion that the set of possible transformations of a case could be limited to those which preserve conceptual coherence in the corresponding concept <ref> [ McCarty, 1980, McCarty, 1989a ] </ref> . This term is not defined precisely, but it suggests an interesting direction for future work. Unfortunately, TAXMAN II has not been fully implemented. <p> The problem of reasoning about open-textured concepts has been addressed by previous systems in the context of analysis, categorization, and design. These projects suggest various approaches, including using prototypes <ref> [ Bareiss, 1988, McCarty, 1980, McCarty, 1989a ] </ref> ; a set of simplified case patterns [ Gardner, 1987 ] ; a set of cases with concrete facts, related by dimensions [ Ashley, 1991 ] ; and the single best match from a set of cases with a rich, detailed semantic-net representation
Reference: [ McCarty, 1983 ] <author> McCarty, L. </author> <title> Thorne 1983. Permissions and obligations. </title> <booktitle> In Proceedings of the Eighth International Joint Conference on Artificial Intelligence, </booktitle> <address> Karlsruhe, West Germany. </address> <pages> 287-294. </pages>
Reference-contexts: In the course of this project, McCarty developed a deontic logic for representing the concepts of permissions and obligations that occur in the legal domain <ref> [ McCarty and Sridharan, 1982, McCarty, 1986, McCarty, 1983 ] </ref> . More recently, he has elaborated a knowledge representation language with a formal intuitionistic semantics that incorporates time, events, and actions, as well as permissions and obligations [ McCarty, 1989b, McCarty, 1989a ] .
Reference: [ McCarty, 1986 ] <author> McCarty, L. </author> <title> Thorne 1986. Permissions and obligations: an informal introduction. </title> <type> Technical Report LRP-TR-19, </type> <institution> Laboratory for Computer Science Research, Rutgers University. </institution>
Reference-contexts: In the course of this project, McCarty developed a deontic logic for representing the concepts of permissions and obligations that occur in the legal domain <ref> [ McCarty and Sridharan, 1982, McCarty, 1986, McCarty, 1983 ] </ref> . More recently, he has elaborated a knowledge representation language with a formal intuitionistic semantics that incorporates time, events, and actions, as well as permissions and obligations [ McCarty, 1989b, McCarty, 1989a ] .
Reference: [ McCarty, 1989a ] <author> McCarty, L. </author> <title> Thorne 1989a. Computing with prototypes (preliminary report). </title> <booktitle> In Proceedings of the Bar-Ilan Symposium on the Foundations of Artificial Intelligence. </booktitle> <pages> 167 </pages>
Reference-contexts: McCarty's contributions are first, the idea that a set of related cases could be used to represent an open-textured concept; and second, the suggestion that the set of possible transformations of a case could be limited to those which preserve conceptual coherence in the corresponding concept <ref> [ McCarty, 1980, McCarty, 1989a ] </ref> . This term is not defined precisely, but it suggests an interesting direction for future work. Unfortunately, TAXMAN II has not been fully implemented. <p> More recently, he has elaborated a knowledge representation language with a formal intuitionistic semantics that incorporates time, events, and actions, as well as permissions and obligations <ref> [ McCarty, 1989b, McCarty, 1989a ] </ref> . In joint work with Dean Schlobohm, an estate planning attorney, McCarty has sketched out a design for a legal planning system [ Schlobohm and McCarty, 1989 ] . <p> The problem of reasoning about open-textured concepts has been addressed by previous systems in the context of analysis, categorization, and design. These projects suggest various approaches, including using prototypes <ref> [ Bareiss, 1988, McCarty, 1980, McCarty, 1989a ] </ref> ; a set of simplified case patterns [ Gardner, 1987 ] ; a set of cases with concrete facts, related by dimensions [ Ashley, 1991 ] ; and the single best match from a set of cases with a rich, detailed semantic-net representation
Reference: [ McCarty, 1989b ] <author> McCarty, L. </author> <title> Thorne 1989b. A language for legal discourse: I. basic features. </title> <booktitle> In Proceedings of the Second International Conference on Artificial Intelligence and Law, </booktitle> <address> Vancouver, British Columbia. </address> <pages> 180-189. </pages>
Reference-contexts: More recently, he has elaborated a knowledge representation language with a formal intuitionistic semantics that incorporates time, events, and actions, as well as permissions and obligations <ref> [ McCarty, 1989b, McCarty, 1989a ] </ref> . In joint work with Dean Schlobohm, an estate planning attorney, McCarty has sketched out a design for a legal planning system [ Schlobohm and McCarty, 1989 ] . <p> a formalization can help the designer to write and debug a system, and help both the designer and others to analyze, evaluate, and extend it. 3.4.1 Syntax Features such as space, time, action, permission, obligation, knowledge, belief, and intention are necessary in the legal domain, as other researchers have noted <ref> [ McCarty, 1989b ] </ref> . In addition, unpredictable idiosyncratic details occur in each new case, such as the fact that the kitchen in a house has a tile floor, or the taxpayer is a war veteran, or the taxpayer has two children, one of whom is ten years old. <p> This language is influenced by McDermott's temporal logic and also by the work of McCarty in representing legal concepts, especially <ref> [ McCarty, 1989b, McCarty, 1977 ] </ref> . The syntax of our language is similar to Shoham's [ Shoham, 1988, pages 43-44 ] .
Reference: [ McDermott, 1985 ] <author> McDermott, </author> <title> Drew 1985. The DUCK manual. </title> <type> Technical Report YALEU/CSD/RR 399, </type> <institution> Yale University Department of Computer Science. </institution>
Reference-contexts: CHIRON retains the basic flow of control and architecture of the Maryland Nonlin, but stores most of its data, including the tasknet, in DUCK, a deductive retriever written at Yale <ref> [ McDermott, 1985 ] </ref> . DUCK allows the user to store (or premiss) and retrieve facts and supports forward and backward-chaining. Using DUCK also provides us with a clean backtracking mechanism. DUCK allows the user to create independent but related local databases, known as datapools.
Reference: [ Merryman, 1969 ] <author> Merryman, John Henry 1969. </author> <title> The civil law tradition. </title> <publisher> Stanford University Press, </publisher> <address> Palo Alto, CA. </address>
Reference-contexts: Nevertheless, the attempt failed. It is still necessary for civil law courts to interpret statutes, to fill in gaps and change the meaning of the text in response to changing conditions <ref> [ Merryman, 1969 ] </ref> . Because there is uncertainty, there is room for argument. Lawyers are trained to find support for different conclusions in a given set of cases.
Reference: [ Oskamp et al., 1989 ] <author> Oskamp, A.; Walker, R.F.; Schrickx, J.A.; and Berg, </author> <title> P.H.van den 1989. Prolexs, divide and rule: a legal application. </title> <booktitle> In Proceedings of the Second International Conference on Artificial Intelligence and Law, </booktitle> <address> Vancouver, British Columbia. </address> <pages> 54-62. </pages>
Reference-contexts: approach does not involve any use of prototypes, at least not explicitly, and does not seem to capture the idea of one case being stronger or weaker than another that is expressed by HYPO's dimensions. 2.1.5 PROLEXS PROLEXS is a legal expert system in the domain of Dutch landlord-tenant law <ref> [ Oskamp et al., 1989 ] </ref> . Like CABARET, PROLEXS combines various types of legal knowledge in a blackboard architecture. As in CABARET, there are distinct reasoners for different types of legal knowledge, with control knowledge isolated in a separate module.
Reference: [ Redmond, 1990 ] <author> Redmond, </author> <title> Michael 1990. Distributed cases for case-based reasoning; facilitating use of multiple cases. </title> <booktitle> In Proceedings of the Eighth National Conference on Artificial Intelligence, </booktitle> <address> Boston, Massachusetts. </address> <pages> 304-309. </pages>
Reference: [ Riesbeck and Schank, 1989 ] <author> Riesbeck, Christopher K. and Schank, Roger C. </author> <year> 1989. </year> <title> Inside Case-based Reasoning. </title> <publisher> Lawrence Erlbaum Associates, </publisher> <address> Hillsdale, NJ. </address>
Reference-contexts: At the other extreme, it has been suggested that in some domains unlimited adaptation might be allowed <ref> [ Riesbeck and Schank, 1989, page 42 ] </ref> . In other words, the system could generate a solution from any given case for any problem.
Reference: [ Rissland and Skalak, 1989a ] <author> Rissland, Edwina L. and Skalak, David B. </author> <year> 1989a. </year> <title> Case-based reasoning in a rule-governed domain. </title> <booktitle> In Proceedings of the Fifth IEEE Conference on Artificial Intelligence Applications, </booktitle> <address> Miami, Florida. </address> <pages> 45-53. </pages>
Reference-contexts: TAX-HYPO takes as input a fact situation expressed in legal case-frames and applies a HYPO-style dimensional analysis repeatedly to determine whether the situation satisfies each of the statutory requirements for a home office deduction under x280A of the Internal Revenue Code <ref> [ Rissland and Skalak, 1989a ] </ref> . TAX-HYPO demonstrated that HYPO's techniques could be used to compare and contrast cases and generate arguments with respect to individual statutory predicates in a legal domain other than trade secrets law.
Reference: [ Rissland and Skalak, 1989b ] <author> Rissland, Edwina L. and Skalak, David B. </author> <year> 1989b. </year> <title> Combining case-based and rule-based reasoning: a heuristic approach. </title> <booktitle> In Proceedings of the Eleventh International Joint Conference on Artificial Intelligence, </booktitle> <address> Detroit, </address> <publisher> Michigan. </publisher> <pages> 524-530. </pages>
Reference: [ Rissland and Skalak, 1989c ] <author> Rissland, Edwina L. and Skalak, David B. </author> <year> 1989c. </year> <title> Interpreting statutory predicates. </title> <booktitle> In Proceedings of the Second International Conference on Artificial Intelligence and Law, </booktitle> <address> Vancouver, British Columbia. </address> <pages> 46-53. </pages>
Reference: [ Rissland and Skalak, 1991 ] <author> Rissland, Edwina L. and Skalak, David B. </author> <year> 1991. </year> <title> CABARET: rule interpretation in a hybrid architecture. </title> <journal> International Journal of Man-Machine Studies 839-887. </journal>
Reference-contexts: Here, again, CHIRON uses a group of cases. Like Gardner's program, HYPO, and CABARET, it places the current situation within the context of a group of previous cases <ref> [ Gardner, 1987, Ashley, 1991, Rissland and Skalak, 1991 ] </ref> . One of CHIRON's contributions is incorporating this technique in a problem-solving system. Most case-based reasoning systems have based their output plans, diagnoses, explanations, or whatever on a single best case.
Reference: [ Rissland and Soloway, 1980 ] <author> Rissland, Edwina L. and Soloway, Elliot M. </author> <year> 1980. </year> <title> Overview of an example generation system. </title> <booktitle> In Proceedings of the First NationalConference on Artificial Intelligence. </booktitle> <pages> 256-258. </pages>
Reference-contexts: The control module uses heuristics to add, delete, or order tasks on a common agenda. 1 Rissland's earliest work [ Rissland (Michener), 1978 ] also described a structured space of examples (of concepts and results) in the domain of mathematics. Later work on Constrained Example Generation <ref> [ Rissland and Soloway, 1980, Rissland, 1982 ] </ref> explored the use of retrieval-plus-modification to generate new examples and counter-examples.
Reference: [ Rissland et al., 1993a ] <author> Rissland, Edwina L.; Daniels, Jody J.; Rubinstein, Zachary B.; and Skalak, David B. </author> <year> 1993a. </year> <title> Case-based diagnostic analysis in a blackboard architecture. </title> <booktitle> In Proceedings of the Eleventh National Conference on Artificial Intelligence, </booktitle> <address> Washington, D.C. </address>
Reference: [ Rissland et al., 1993b ] <author> Rissland, Edwina L.; Daniels, Jody J.; Rubinstein, Zachary B.; and Skalak, David B. </author> <year> 1993b. </year> <title> Diagnostic case retrieval guided by evaluation and feedback. </title> <booktitle> In Proceedings of the AAAI Workshop on Case-Based Reasoning, </booktitle> <address> Washington, D.C. </address> <month> 168 </month>
Reference: [ Rissland et al., 1994 ] <author> Rissland, Edwina L.; Skalak, David B.; and Friedman, M. </author> <month> Timur </month> <year> 1994. </year> <title> Heuristic harvesting of information for case-based argument. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence, </booktitle> <address> Seattle, Washington. </address> <pages> 36-43. </pages>
Reference-contexts: The BANKXX system uses heuristics and best-first search (in addition to HYPO-style case-based techniques) to gather cases, legal theories, stereotypical legal stories, etc. on the issue of whether Chapter 13 personal bankruptcy plans are proposed in good faith <ref> [ Rissland et al., 1994 ] </ref> . 2.1.4 Bench-Capon and Sergot Bench-Capon and Sergot encountered the problem of representing and reasoning about open-textured predicates in a series of projects on the representation of legislation as logic programs [ Bench-Capon and Sergot, 1988, Sergot et al., 1986 ] .
Reference: [ Rissland (Michener), 1978 ] <author> Rissland (Michener), </author> <title> Edwina 1978. Epistemology, representation, understanding and interactive exploration of mathematical theories. </title> <type> Technical report, </type> <institution> Department of Mathematics, Massachusetts Institute of Technology. </institution> <type> (PhD Thesis). </type>
Reference-contexts: The case-based reasoner is modelled on HYPO. The co-reasoner is currently a simple rule-based module including both forward and backward chaining. The control module uses heuristics to add, delete, or order tasks on a common agenda. 1 Rissland's earliest work <ref> [ Rissland (Michener), 1978 ] </ref> also described a structured space of examples (of concepts and results) in the domain of mathematics. Later work on Constrained Example Generation [ Rissland and Soloway, 1980, Rissland, 1982 ] explored the use of retrieval-plus-modification to generate new examples and counter-examples.
Reference: [ Rissland, 1982 ] <author> Rissland, Edwina L. </author> <year> 1982. </year> <title> Examples in the legal domain: </title> <booktitle> hypotheticals in contract law. In Proceedings of the Fourth Annual Conference on Cognitive Science, </booktitle> <address> Ann Arbor, Michigan. </address>
Reference-contexts: The control module uses heuristics to add, delete, or order tasks on a common agenda. 1 Rissland's earliest work [ Rissland (Michener), 1978 ] also described a structured space of examples (of concepts and results) in the domain of mathematics. Later work on Constrained Example Generation <ref> [ Rissland and Soloway, 1980, Rissland, 1982 ] </ref> explored the use of retrieval-plus-modification to generate new examples and counter-examples.
Reference: [ Rosch and Mervis, 1975 ] <author> Rosch, Eleanor and Mervis, C.B. </author> <year> 1975. </year> <title> Family resemblance: studies in the internal structure of categories. </title> <booktitle> Cognitive Psychology 7 </booktitle> <pages> 573-605. </pages>
Reference-contexts: CHIRON's prototypes are not real cases. In Protos, actual previous cases are used as prototypes [ Bareiss, 1988 ] . Both approaches are influenced by work in psychology suggesting that concepts are best represented by a set of more or less typical cases, interrelated by family 51 resemblances <ref> [ Rosch and Mervis, 1975 ] </ref> . In law, the reported cases are not typical, almost by definition: the standard, typical cases do not go to court. None of the court cases in CHIRON's case base is suitable for use as a prototype.
Reference: [ Sacerdoti, 1974 ] <author> Sacerdoti, </author> <title> Earl 1974. Planning in a hierarchy of abstraction spaces. </title> <booktitle> Artificial Intelligence 7 </booktitle> <pages> 231-272. </pages>
Reference-contexts: In hierarchical planning, by contrast, intermediate plans are complete but abstract. Instead of simply adding primitive actions to an intermediate plan, the planner repeatedly refines the plan, gradually substituting more and more specific plans until it has a sequence of primitive actions. (See, e.g., <ref> [ Sacerdoti, 1974 ] </ref> ). Working on the above example, a hierarchical planner might start with the plan, Make breakfast, then substitute Make coffee, then Get filter, put filter in basket, get coffee, put coffee in filter, ... and so forth.
Reference: [ Sanders, 1989a ] <author> Sanders, Kathryn E. </author> <year> 1989a. </year> <title> A logic for emotions: a basis for reasoning about commonsense psychological knowledge. </title> <booktitle> In Proceedings of the Eleventh Annual Conference of the Cognitive Science Society, </booktitle> <address> Ann Arbor, Michigan. </address>
Reference-contexts: Concepts of property, property rights, and property transfers are central to this domain. Some of these concepts we had already formalized <ref> [ Sanders, 1989a, Sanders, 1989b ] </ref> ; others, we added as necessary. Part of CHIRON's property-type hierarchy is given in Figure 3.4. We divide property into categories which are often treated differently by the tax system: real property, tangible personal property, and intangible personal property.
Reference: [ Sanders, 1989b ] <author> Sanders, Kathryn E. </author> <year> 1989b. </year> <title> A logic for emotions: a basis for reasoning about commonsense psychological knowledge. </title> <type> Technical Report 89-23, </type> <institution> Brown University Computer Science Department. </institution>
Reference-contexts: Concepts of property, property rights, and property transfers are central to this domain. Some of these concepts we had already formalized <ref> [ Sanders, 1989a, Sanders, 1989b ] </ref> ; others, we added as necessary. Part of CHIRON's property-type hierarchy is given in Figure 3.4. We divide property into categories which are often treated differently by the tax system: real property, tangible personal property, and intangible personal property.
Reference: [ Sanders, 1990 ] <author> Sanders, Kathryn E. </author> <year> 1990. </year> <title> The truth, the whole truth, and nothing but the truth: case representations for legal reasoning systems. </title> <booktitle> In Proceedings of the AAAI Workshop on Legal Reasoning, </booktitle> <address> Boston, Massachusetts. </address>
Reference: [ Sanders, 1991a ] <author> Sanders, Kathryn E. </author> <year> 1991a. </year> <title> Representing and reasoning about open-textured predicates. </title> <booktitle> In Proceedings of the Third International Conference on Artificial Intelligence and Law, </booktitle> <address> Oxford, England. </address> <pages> 137-144. </pages>
Reference: [ Sanders, 1991b ] <author> Sanders, Kathryn E. </author> <year> 1991b. </year> <title> Within the letter of the law: planning among multiple cases. </title> <booktitle> In Proceedings of the DARPA Workshop on Case-Based Reasoning, </booktitle> <address> Washington, D.C. </address>
Reference: [ Sanders, 1993 ] <author> Sanders, Kathryn E. </author> <year> 1993. </year> <title> If it worked last time, it should work again: justifying and validating case-based plans. </title> <booktitle> In Proceedings of the AAAI Workshop on Case-Based Reasoning. </booktitle>
Reference: [ Schlobohm and McCarty, 1989 ] <author> Schlobohm, Dean and McCarty, L. </author> <title> Thorne 1989. EPS II: Estate planning with prototypes. </title> <booktitle> In Proceedings of the Second International Conference on Artificial Intelligence and Law, </booktitle> <address> Vancouver, British Columbia. </address> <pages> 1-10. </pages>
Reference-contexts: In joint work with Dean Schlobohm, an estate planning attorney, McCarty has sketched out a design for a legal planning system <ref> [ Schlobohm and McCarty, 1989 ] </ref> . They argue that lawyers construct plans by retrieving prototype plans and transforming them to meet the clients' goals. They discuss how trusts and the Internal Revenue Code can be represented using McCarty's representation language. <p> In CHIRON, therefore, we have not included that kind of experiential knowledge, or war stories. For two very different projects using that kind of knowledge, see <ref> [ Slator and Riesbeck, 1992, Schlobohm and McCarty, 1989 ] </ref> . <p> None of the court cases in CHIRON's case base is suitable for use as a prototype. An interesting alternative would be to base prototypes on lawyers' experiences of more typical cases, as suggested in <ref> [ Schlobohm and McCarty, 1989 ] </ref> . As discussed in Section 3.1, however, we have chosen not to include this type of knowledge in CHIRON. Instead, CHIRON's prototypes are based on general domain knowledge. This knowledge includes the commonsense meaning of statutory phrases.
Reference: [ Sergot et al., 1986 ] <author> Sergot, M. J.; Sadri, F.; Kowalski, R. A.; Kriwaczek, F.; Hammond, P.; and Cory, H. T. </author> <year> 1986. </year> <title> The british nationality act as a logic program. </title> <journal> Communications of the Association for Computing Machinery 29(5) </journal> <pages> 370-386. 169 </pages>
Reference-contexts: issue of whether Chapter 13 personal bankruptcy plans are proposed in good faith [ Rissland et al., 1994 ] . 2.1.4 Bench-Capon and Sergot Bench-Capon and Sergot encountered the problem of representing and reasoning about open-textured predicates in a series of projects on the representation of legislation as logic programs <ref> [ Bench-Capon and Sergot, 1988, Sergot et al., 1986 ] </ref> . They suggest that a legal reasoning system should handle open-textured concepts by giving the user arguments for and against the application of the concept in borderline cases. This is similar to the approach taken by HYPO and CABARET.
Reference: [ Shoham, 1988 ] <author> Shoham, </author> <title> Yoav 1988. Reasoning about change: time and causation from the standpoint of artificial intelligence. </title> <publisher> MIT Press, </publisher> <address> Cambridge, Massachusetts. </address>
Reference-contexts: In order to represent the basic features of the domain, such as time, action, permission, obligation, knowledge, belief, and intention, we use an extension of the temporal logic developed by Shoham in <ref> [ Shoham, 1988 ] </ref> , modified to incorporate the modal operators know, believe, want (or goal), and obligated. This language is influenced by McDermott's temporal logic and also by the work of McCarty in representing legal concepts, especially [ McCarty, 1989b, McCarty, 1977 ] . <p> This language is influenced by McDermott's temporal logic and also by the work of McCarty in representing legal concepts, especially [ McCarty, 1989b, McCarty, 1977 ] . The syntax of our language is similar to Shoham's <ref> [ Shoham, 1988, pages 43-44 ] </ref> . <p> We make no distinction between states and actions; both are represented as sets of intervals. For convenience, we will refer to both as propositions. (Cf. <ref> [ Shoham, 1988 ] </ref> .) Thus, the proposition (physically-occupy Jones house17) is the set of intervals during which Jones occupies house17, in all possible worlds; and the formula (occurs (physically-occupy Jones house17) t i t j ) holds in a given world if the interval (t i ; t j )
Reference: [ Skalak and Rissland, 1992 ] <author> Skalak, David B. and Rissland, Edwina L. </author> <year> 1992. </year> <title> Arguments and cases: an inevitable intertwining. </title> <journal> Artificial Intelligence and Law: an international journal 1(1) </journal> <pages> 3-44. </pages>
Reference-contexts: Constrained Example Generation was an early precursor to what is now known as adaptive case-based reasoning. 13 The main contributions of this project are in the area of controlling mixed case-based and rule-based systems and developing a theory of statutory argument <ref> [ Skalak and Rissland, 1992 ] </ref> . <p> Besides the straightforward argument used in HYPO, based on comparing and contrasting the current situation with previous cases, they suggest a variety of other types such as make-weight, straw man, and slippery slope arguments. Only the straightforward argument has been implemented in CABARET, however <ref> [ Skalak and Rissland, 1992 ] </ref> . 14 CABARET is designed to be module-independent, so the control heuristics are generalized. They do not attempt to take advantage of the specific features of particular types of modules. In addition, the system is limited, like HYPO, by its simplified case representation.
Reference: [ Skalak, 1989a ] <author> Skalak, David B. </author> <year> 1989a. </year> <title> Options for controlling mixed paradigm systems. </title> <booktitle> In Proceedings of a Workshop on Case-Based Reasoning. </booktitle> <pages> 318-323. </pages>
Reference-contexts: They adopted the last of these, which allows them to simulate each of the other three and in addition, facilitates experimentation with a variety of control heuristics <ref> [ Skalak, 1989a ] </ref> . Heuristics are production rules that add, delete, or order tasks on the system agenda. The tasks on the agenda are calls to a procedure exported by one of the other modules, such as backchain on subgoal foo.
Reference: [ Skalak, 1989b ] <author> Skalak, David B. </author> <year> 1989b. </year> <title> Taking advantage of models for legal classification. </title> <booktitle> In Proceedings of the Second International Conference on Artificial Intelligence and Law, </booktitle> <address> Vancouver, British Columbia. </address> <pages> 234-241. </pages>
Reference: [ Slator and Riesbeck, 1992 ] <author> Slator, Brian M. and Riesbeck, Christopher K. </author> <year> 1992. </year> <title> Taxops: a case-based advisor. </title> <journal> International Journal of Expert Systems 4(2) </journal> <pages> 117-140. </pages>
Reference-contexts: In CHIRON, therefore, we have not included that kind of experiential knowledge, or war stories. For two very different projects using that kind of knowledge, see <ref> [ Slator and Riesbeck, 1992, Schlobohm and McCarty, 1989 ] </ref> .
Reference: [ Statsky and Wernet, Jr., 1989 ] <author> Statsky, William P. and Wernet, Jr., R. </author> <title> John 1989. Case analysis and fundamentals of legal writing. </title> <publisher> West Publishing Company, </publisher> <address> St. Paul, Minnesota. </address>
Reference: [ Tate, 1976 ] <author> Tate, </author> <title> Austin 1976. Project planning using a hierarchic non-linear planner. </title> <type> Technical Report 245, </type> <institution> Department of Artificial Intelligence, University of Edinburgh. </institution>
Reference-contexts: The planner can delay adding details until sufficient information is available. In nonlinear planning, the planner delays ordering the tasks, as well as making them more specific <ref> [ Tate, 1977, Tate, 1976 ] </ref> .
Reference: [ Tate, 1977 ] <author> Tate, </author> <title> Austin 1977. Generating project networks. </title> <booktitle> In Proceedings of the Fifth International Joint Conference on Artificial Intelligence. </booktitle> <pages> 888-893. </pages>
Reference-contexts: The planner can delay adding details until sufficient information is available. In nonlinear planning, the planner delays ordering the tasks, as well as making them more specific <ref> [ Tate, 1977, Tate, 1976 ] </ref> .
Reference: [ Veloso, 1992 ] <author> Veloso, Manuela M. </author> <year> 1992. </year> <title> Learning by analogical reasoning in general problem solving. </title> <type> Technical Report CMU-CS-92-174, </type> <institution> School of Computer Science, Carnegie Mellon University. </institution> <type> (PhD Thesis). </type>
Reference-contexts: (add object (result act3) to (result act4)) act6 (stir-fry object (result act5) time (2))) (style style-stir-fry)) Two recent planners have added case-based reasoning to nonlinear planners and taken the reasoning process by which the plan was generated (i.e., the final successful search path through the plan space) as their cases <ref> [ Veloso, 1992, Kambhampati and Hendler, 1989 ] </ref> . When solving a new problem, they adapt the method used to solve a previous problem, rather than the previous problem's solution.
Reference: [ Waismann, 1965 ] <author> Waismann, </author> <title> Friedrich 1965. Verifiability. </title> <booktitle> In Flew, Antony, editor 1965, Logic and language: first and second series. </booktitle> <publisher> Anchor Books, </publisher> <address> Garden City, New Jersey. 122-151. </address> <booktitle> (first published in Proceedings of the Aristotelian Society, </booktitle> <address> 119-150 (1945).). </address>
Reference-contexts: This issue arises throughout legal reasoning, not just in tax. Indeed, it is part of a general natural language problem. Many ordinary categories, such as tiger or cup, are surprisingly difficult to define. This indeterminacy has been studied in linguistics and philosophy, where it is labeled open texture <ref> [ Waismann, 1965, Hart, 1961, Lakoff, 1987 ] </ref> . Any planning rule expressed in natural language, such as be careful, never get involved in a land war in Asia, or buy low, sell high, suffers from the same problem. In any domain, open-textured rules can be partially defined by examples. <p> This issue arises throughout legal reasoning, not just in tax. Indeed, it is part of a general natural language problem. Many ordinary categories, such as tiger or cup, are surprisingly difficult to define. This indeterminacy has been studied in linguistics and philosophy, where it is labeled open texture <ref> [ Waismann, 1965, Hart, 1961, Lakoff, 1987 ] </ref> . Any planning rule expressed in natural language, such as be careful, never get involved in a land war in Asia, or buy low, sell high, suffers from the same problem. The cases only partially define the rules.
Reference: [ Waltz, 1989 ] <author> Waltz, David L. </author> <year> 1989. </year> <title> Is indexing used for retrieval? In Proceedings of a Workshop on Case-based Reasoning. </title> <type> 41-44. </type>
Reference-contexts: The same tradeoff must be faced by the designer of a legal reasoning system. The question of whether or not to include abstractions has caused a certain amount of controversy in CBR <ref> [ Hammond, 1989, Waltz, 1989 ] </ref> . CHEF indexes plans under both the ingredients included and abstractions of those ingredients, in order to allow partial matches.
Reference: [ Waterman, 1986 ] <author> Waterman, Donald A. </author> <year> 1986. </year> <title> A guide to expert systems. </title> <publisher> Addison-Wesley Publishing Company. </publisher>
Reference-contexts: It is desirable for any system to be able to explain its operation. In rule-based expert systems, this is called an explanation facility. Typically, it involves displaying the rules applied in arriving at a conclusion <ref> [ Waterman, 1986 ] </ref> . Such an explanation, although it increases the users' confidence in the system, can be opaque and difficult to follow.
Reference: [ Wright, 1951 ] <author> Wright, G. H. </author> <title> von 1951. An Essay in Modal Logic. </title> <publisher> North-Holland. </publisher>
Reference-contexts: 1 ), and 1 is false. 7. has the form 8z 1 , and is true under all variable assignments VA 0 that agree with VA everywhere except possibly on z. 3.4.3 Basic concepts As stated above, we use some key concepts from deontic logic: obligated, permitted, and prohibited. (Cf. <ref> [ Wright, 1951 ] </ref> ).
Reference: [ Zito-Wolf and Alterman, 1992 ] <author> Zito-Wolf, Roland and Alterman, Richard 1992. Multicases: </author> <title> a case-based representation for procedural knowledge. </title> <booktitle> In Proceedings of the Fourteenth Annual Conference of the Cognitive Science Society. </booktitle> <pages> 170 </pages>
References-found: 91

