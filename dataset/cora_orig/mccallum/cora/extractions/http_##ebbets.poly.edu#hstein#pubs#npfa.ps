URL: http://ebbets.poly.edu/hstein/pubs/npfa.ps
Refering-URL: http://ebbets.poly.edu/hstein/journal.html
Root-URL: 
Email: condon@cs.wisc.edu  hstein@eecs.nwu.edu  pottle@cs.wisc.edu  avi@cs.huji.ac.il  
Title: On the Power of Finite Automata with both Nondeterministic and Probabilistic States  
Author: Anne Condon Lisa Hellerstein Samuel Pottle Avi Wigderson 
Note: To appear in SIAM J. on Computing. Preliminary version appeared in Proceedings of STOC '94, Condon's research supported by NSF grant CCR-9257241 and by a matching grant from AT&T Bell Labs. Hellerstein's research supported in part by NSF grant CCR-9210957. Pottle's research supported by NSF grant CCR-9257241. Wigderson's research supported in part by BSF grant 92-00106/1 and a grant from the Wolfson Research Awards.  
Address: 1210 West Dayton St. Madison, WI 53706  2145 Sheridan Rd. Evanston, IL 60208-3118  1210 West Dayton St. Madison, WI 53706  Jerusalem 91904, Israel  
Affiliation: Department of Computer Sciences University of Wisconsin  Department of E.E.C.S. Northwestern University  Department of Computer Sciences University of Wisconsin  Computer Science Department Hebrew University  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> A. V. Aho, J. D. Ullman and M. Yannakakis. </author> <title> On notions of information transfer in VLSI circuits, </title> <booktitle> Proc. of the Fifteenth Annual ACM Symposium on Theory of Computing, </booktitle> <year> 1983, </year> <pages> 133-139. </pages>
Reference-contexts: If the protocol is deterministic, then the worst case number of bits that need to be exchanged (that is, the deterministic communication complexity) is bounded below by log ~ T f [29]. If the protocol is non-deterministic, then the lower bound is log T f <ref> [1] </ref>. <p> the 1-tiling complexity may be significantly larger than the 1-fooling set complexity; in fact, for a random n fi n binary matrix, the expected size of the largest 1-fooling set is O (log n) whereas the expected number of tiles needed to tile the 1-entries is (n= log n) 7 <ref> [1] </ref>. 3 NPFA's and Tiling Three results are presented in this section. For each of the classes 1NPFA, 2NPFA and 2NPFA-polytime, we describe upper bounds on the tiling complexity of the languages in these classes. <p> Then the probability of accepting the string xy is the inner product p xy r xy . Let = (1=2 *)=c. Partition the space <ref> [0; 1] </ref> c into cells of size fi fi fi (the final entry in the cross product should actually be less than if 1 is not a multiple of ). <p> If [x; y] is a 1-entry such that jxj n and jyj n, then for any nonzero p of P xy (or r of R xy ), p 2 <ref> [2 cn1 ; 1] </ref>, so log 2 p 2 [cn 1; 0] (and similarly log 2 r 2 [cn 1; 0]). <p> Say that a probability p is small if p &lt; t (n) 2 ; otherwise, p is large. Note that if p is a large transition probability, then p 2 <ref> [t (n) 2 ; 1] </ref>, so log 2 p 2 [2 log 2 t (n); 0]. <p> Their result holds for A over any field. Halstenberg and Reischuk, refining a proof of Aho et. al., showed that dlog ~ T (A)e dlog T 1 (A)e (dlog (T 0 (A) + 1)e + 2) + 1 <ref> [1, 13] </ref>. Let T fl (A) = max (T 1 (A); T 0 (A)). Then dlog rank (A)e (dlog (T fl (A) + 1)e + 1) 2 . By Theorem 4.4, if L is nonregular, then the rank of M (n) is at least n + 1 infinitely often. <p> For each 1-entry [x; y] of M L , fix an existential strategy E xy , that causes xy to be accepted with probability at least 1 *, for all universal strategies. Partition the space <ref> [0; 1] </ref> c into cells of size fi fi : : : fi , as before. Let C be a nonempty subset of the cells.
Reference: [2] <author> S. Arora, C. Lund, R. Motwani, M. Sudan, and M. Szegedy. </author> <title> Proof verification and hardness of approximation problems, </title> <booktitle> Proc. of the 33rd IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1992, </year> <pages> 14-23. </pages>
Reference-contexts: Their work on polynomial time bounded Arthur-Merlin games laid the framework for the remarkable progress on interactive proof systems and their applications (see for example <ref> [2] </ref> and the references therein). Space bounded Arthur-Merlin games were first considered by Condon and Ladner [6]. Condon [4] showed that AM (log-space), that is, the class of languages accepted by Arthur-Merlin games with logarithmic space, is equal to the class P.
Reference: [3] <author> L. Babai and S. Moran. </author> <title> Arthur-Merlin games: A randomized proof system and a hierarchy of complexity classes, </title> <journal> J. Comput. System Sci., </journal> <volume> 36 (1988), </volume> <pages> 254-276. </pages>
Reference-contexts: However, there has been little previous work on finite state automata which have both probabilistic and nondeterministic states. Such automata are equivalent to the Arthur-Merlin games of Babai and Moran <ref> [3] </ref>, restricted to constant space, with an unbounded number of rounds of communication between Arthur and Merlin. In this paper, we refer to them as npfa's. <p> This, combined with the result of Kaneps and Freivalds, implies that 2PFA-polytime = Regular. Models of computation with both nondeterministic and probabilistic states have been studied intensively since the work of Papadimitriou [23] on games against nature. Babai and Moran <ref> [3] </ref> defined Arthur-Merlin games to be Turing machines with both nondeterministic and probabilistic states, which accept their languages with bounded error probability.
Reference: [4] <author> A. Condon. </author> <title> Computational Models of Games, </title> <publisher> MIT Press, </publisher> <year> 1989. </year>
Reference-contexts: Language acceptance could be defined with respect to a more general type of strategy, in which the nondeterministic choice made from the same configuration at different times may be different. It is known (see <ref> [4, Theorem 2.6] </ref>) that if L is accepted by an npfa with respect to this more general definition, then it is also accepted with respect to the definition above. Hence, our results also hold for such generalized strategies. <p> Their work on polynomial time bounded Arthur-Merlin games laid the framework for the remarkable progress on interactive proof systems and their applications (see for example [2] and the references therein). Space bounded Arthur-Merlin games were first considered by Condon and Ladner [6]. Condon <ref> [4] </ref> showed that AM (log-space), that is, the class of languages accepted by Arthur-Merlin games with logarithmic space, is equal to the class P.
Reference: [5] <editor> On the Power of finite automata with both nondeterministic and probabilistic states, </editor> <booktitle> Proc. of the Twenty Sixth Annual ACM Symposium on Theory of Computing, </booktitle> <year> 1994, </year> <note> to appear. 28 </note>
Reference: [6] <author> A. Condon and R. Ladner. </author> <title> Probabilistic game automata, </title> <journal> J. Comput. Sys. Sci., </journal> <volume> 36(3) (1988), </volume> <pages> 452-489. </pages>
Reference-contexts: Their work on polynomial time bounded Arthur-Merlin games laid the framework for the remarkable progress on interactive proof systems and their applications (see for example [2] and the references therein). Space bounded Arthur-Merlin games were first considered by Condon and Ladner <ref> [6] </ref>. Condon [4] showed that AM (log-space), that is, the class of languages accepted by Arthur-Merlin games with logarithmic space, is equal to the class P.
Reference: [7] <author> C. Dwork and L. Stockmeyer. </author> <title> A time-complexity gap for two-way probabilistic finite state automata, </title> <journal> SIAM J. Comput., </journal> <volume> 19 (1990), </volume> <pages> 1011-1023. </pages>
Reference-contexts: 1 Introduction The classical subset construction of Rabin and Scott [25] shows that finite state automata with just nondeterministic states (nfa's) accept exactly the regular languages. Results of Rabin [24], Dwork and Stockmeyer <ref> [7] </ref> and Kaneps and Freivalds [17] show that the same is true of probabilistic finite state automata which run in polynomial expected time. Here and throughout the paper, we restrict attention to automata which accept languages with error probability which is some constant * less than 1=2. <p> This was shown by Freivalds [10], who constructed a 2pfa for the language f0 n 1 n j n 0g. Greenberg and Weiss [12] showed that exponential expected time is required by any 2pfa accepting this language. Dwork and Stockmeyer <ref> [7] </ref> and independently Kaneps and Freivalds [17] showed that in fact any 2pfa which recognizes a nonregular language must run in exponential expected time. It follows that 2PFA-polytime = Regular. Roughly, Rabin's proof shows that any language L accepted by a 1pfa has only finitely many equivalence classes. <p> This is stronger (by 1) for even n than Kaneps and Freivalds' lower bound. We also note that Dwork and Stockmeyer <ref> [7] </ref> obtained a weaker bound on N L (n) without using L (n).) Using tools from Markov chain theory, Dwork and Stockmeyer [7] and Kaneps and Freivalds [17] showed that if a language is accepted by a 2pfa in polynomial expected time, then the language has "low" nonregularity. <p> This is stronger (by 1) for even n than Kaneps and Freivalds' lower bound. We also note that Dwork and Stockmeyer <ref> [7] </ref> obtained a weaker bound on N L (n) without using L (n).) Using tools from Markov chain theory, Dwork and Stockmeyer [7] and Kaneps and Freivalds [17] showed that if a language is accepted by a 2pfa in polynomial expected time, then the language has "low" nonregularity. In fact, N L (n) is bounded by some polynomial in log n. <p> In fact, the number of distinct rows of M L (n), for a language L, is closely related to a measure that has been previously studied by many researchers. Dwork and Stockmeyer called this measure non-regularity, and denoted the non-regularity of L by N L (n) <ref> [7] </ref>. N L (n) is the maximum size of a set of n-dissimilar strings of L. <p> We next extend Theorem 1.2 to automata with o (log log n) space. We refer to these as Arthur-Merlin games, since this is the usual notation for such automata which are not restricted to a finite number of states <ref> [7] </ref>. The definition of an Arthur-Merlin game is similar to that of an npfa, except that the machine has a fixed number of read/write worktapes. <p> Then, L 0 is accepted by a 2pfa with bounded error probability in polynomial time. Thus, L 0 is regular <ref> [7] </ref>.
Reference: [8] <author> C. Dwork and L. Stockmeyer. </author> <title> Finite state verifiers I: the power of interaction, </title> <journal> J. ACM, </journal> <volume> 39(4) (1992), </volume> <pages> 800-828. </pages>
Reference-contexts: We let 1NPFA and 2NPFA-polytime denote the classes of languages accepted by npfa's which have a 1-way or a 2-way input head, respectively, and which run in polynomial expected time. Dwork and Stockmeyer <ref> [8] </ref> asked whether 2NPFA-polytime is exactly the set of regular languages, which we denote by Regular. In this paper, we prove the following two results on npfa's. Theorem 1.1 1NPFA = Regular. Theorem 1.2 If L is nonregular, then either L or L is not in 2NPFA-polytime. <p> In Section 3, we prove the following theorems relating language acceptance of npfa's to tiling 2 complexity. The proofs of these theorems build on previous work of Dwork and Stockmeyer <ref> [8] </ref> and Rabin [24]. Theorem [3.1] A language L is in 1NPFA only if the 1-tiling complexity of L is O (1). Theorem [3.3] A language L is in 2NPFA-polytime only if the 1-tiling complexity of L is bounded by a polynomial in log n. <p> Finally, Regular denotes the class of regular languages. Our model of the 2npfa is equivalent to an Arthur-Merlin game in which Arthur is a 2pfa, and our classes 2NPFA and 2NPFA-polytime are identical to the classes AM (2pfa) and AM (ptime-2pfa), respectively, of Dwork and Stockmeyer <ref> [8] </ref>. 2.2 The Tiling Complexity of a Language We adapt the notion of the tiling complexity of a function, used in communication complexity theory, to obtain a new measure of the complexity of a language. <p> Fortnow and Lund [9] showed that NC is contained in AM (log-space,poly-time). Dwork and Stockmeyer <ref> [8] </ref> were the first to consider npfa's, which are Arthur-Merlin games restricted to constant space. They described conditions under which a language is not in the classes 2NPFA or 2NPFA-polytime. <p> The proof for 1NPFA's is a natural generalization of Rabin's proof that 1PFA = Regular [24]. The other two proofs build on previous results of Dwork and Stockmeyer <ref> [8] </ref> on 2npfa's. 3.1 1NPFA and Tiling Theorem 3.1 A language L is in 1NPFA only if the 1-tiling complexity of L is O (1). Proof: Suppose L is accepted by some 1npfa M with error probability * &lt; 1=2. <p> This lemma is a slight restatement of a lemma of Greenberg and Weiss [12]. This version is due to Dwork and Stockmeyer <ref> [8] </ref>. If k is a sink state of a Markov chain R, let a (k; R) denote the probability that R is (eventually) trapped in state k when started in state 1. Let fi 1. <p> Then a (k; R) and a (k; R 0 ) are fi 2s -close. The proof of this lemma is based on the Markov chain tree theorem of Leighton and Rivest [20], and can be found in <ref> [8] </ref>. <p> A formal justification of this argument can be found in Dwork and Stockmeyer <ref> [8] </ref>. After these changes, we can argue that a xy (1 *)2 2d and choose so that a xy 1=2, as before.
Reference: [9] <author> L. Fortnow and C. Lund. </author> <title> Interactive proof systems and alternating time-space complexity, </title> <booktitle> Proc. of the 8th Annual Symposium on Theoretical Aspects of Computer Science, </booktitle> <year> 1991, </year> <pages> 263-274. </pages>
Reference-contexts: However, it is not known whether the class AM (log-space, polytime) | the subclass of AM (log-space) where the verifier is also restricted to run in polynomial time | is equal to P, or whether it is closed under complement. Fortnow and Lund <ref> [9] </ref> showed that NC is contained in AM (log-space,poly-time). Dwork and Stockmeyer [8] were the first to consider npfa's, which are Arthur-Merlin games restricted to constant space. They described conditions under which a language is not in the classes 2NPFA or 2NPFA-polytime.
Reference: [10] <author> R. Freivalds. </author> <title> Probabilistic two-way machines, </title> <booktitle> Proc. of the International Symposium on Mathematical Foundations of Computer Science Springer-Verlag Lecture Notes in Computer Science, 188 (1981), </booktitle> <pages> 33-45. </pages>
Reference-contexts: Rabin [24] was the first to consider probabilistic automata with bounded error probability. He showed that 1PFA = Regular. However, with a 2-way input head, pfa's can recognize nonregular languages. This was shown by Freivalds <ref> [10] </ref>, who constructed a 2pfa for the language f0 n 1 n j n 0g. Greenberg and Weiss [12] showed that exponential expected time is required by any 2pfa accepting this language. <p> An intriguing question left open by this work is whether the class 2NPFA-polytime is closed under complement. If it is, we can conclude that 2NPFA-polytime = Regular. Recall that the class 2NPFA does contain nonregular languages, since it contains the class 2PFA, and Freivalds <ref> [10] </ref> showed that f0 n 1 n j n 0g is in this class. However, Kaneps [18] showed that the class 2PFA does not contain any nonregular unary language. Another open question is whether the class 2NPFA contains any nonregular unary language.
Reference: [11] <author> G. Frobenius. Uber das Tragheitsgesetz der quadratischen Formen, Sitzungsber. der Konigl. </author> <title> Preuss. </title> <journal> Akad. der Wiss. </journal> <volume> (1894), </volume> <pages> 407-431. </pages>
Reference-contexts: In fact, a direct application of known results on the rank of Hankel matrices shows that if L is nonregular, then rank (M L (n)) n + 1 infinitely often. This was first proved by Iohvidov (see [15, Theorem 11.3]), based on previous work of Frobenius <ref> [11] </ref>. 16 * a 1 a 2 a 3 a 4 a 5 a 6 a 1 0 0 1 0 0 1 0 a 3 1 0 0 1 0 0 1 a 5 0 1 0 0 1 0 0 If L is a non-unary language, then M L
Reference: [12] <author> A. G. Greenberg and A. Weiss. </author> <title> A lower bound for probabilistic algorithms for finite state machines, </title> <institution> J. Comput. Syst. Sci., </institution> <month> 33 </month> <year> (1986), </year> <pages> 88-105. </pages>
Reference-contexts: He showed that 1PFA = Regular. However, with a 2-way input head, pfa's can recognize nonregular languages. This was shown by Freivalds [10], who constructed a 2pfa for the language f0 n 1 n j n 0g. Greenberg and Weiss <ref> [12] </ref> showed that exponential expected time is required by any 2pfa accepting this language. Dwork and Stockmeyer [7] and independently Kaneps and Freivalds [17] showed that in fact any 2pfa which recognizes a nonregular language must run in exponential expected time. It follows that 2PFA-polytime = Regular. <p> This lemma is a slight restatement of a lemma of Greenberg and Weiss <ref> [12] </ref>. This version is due to Dwork and Stockmeyer [8]. If k is a sink state of a Markov chain R, let a (k; R) denote the probability that R is (eventually) trapped in state k when started in state 1. Let fi 1.
Reference: [13] <author> B. Halstenberg and R. Reischuk. </author> <title> On different modes of communication, </title> <booktitle> Proc. of the Twentieth Annual ACM Symposium on the Theory of Computing, </booktitle> <year> 1988, </year> <pages> 162-172. </pages>
Reference-contexts: Suppose that two cooperating parties, P 1 and P 2 , get inputs x 2 X and y 2 Y respectively, and want to compute f (x; y). They can do so by exchanging information according to some protocol (precise definitions of legal protocols can be found in <ref> [13] </ref>). If the protocol is deterministic, then the worst case number of bits that need to be exchanged (that is, the deterministic communication complexity) is bounded below by log ~ T f [29]. If the protocol is non-deterministic, then the lower bound is log T f [1]. <p> Their result holds for A over any field. Halstenberg and Reischuk, refining a proof of Aho et. al., showed that dlog ~ T (A)e dlog T 1 (A)e (dlog (T 0 (A) + 1)e + 2) + 1 <ref> [1, 13] </ref>. Let T fl (A) = max (T 1 (A); T 0 (A)). Then dlog rank (A)e (dlog (T fl (A) + 1)e + 1) 2 . By Theorem 4.4, if L is nonregular, then the rank of M (n) is at least n + 1 infinitely often.
Reference: [14] <author> J. E. Hopcroft and J. D. Ullman. </author> <title> Introduction to Automata Theory, Languages, and Computation, </title> <publisher> Addison Wesley, </publisher> <year> 1979. </year>
Reference-contexts: Roughly, Rabin's proof shows that any language L accepted by a 1pfa has only finitely many equivalence classes. Here, two strings x; x 0 are equivalent if and only if for all y, xy 2 L , x 0 y 2 L. The Myhill-Nerode theorem <ref> [14] </ref> states that a language has a finite number of equivalence classes if and only if it is regular. This, combined with Rabin's result, implies that 1PFA = Regular. Two decades later, this idea was extended to 2pfa's. <p> Since there are only 2 m possible values for I (r), A can have at most 2 m distinct rows. 2 Theorem 4.1 The 1-tiling complexity of L is O (1) if and only if L is regular. Proof: By the Myhill-Nerode theorem <ref> [14, Theorem 3.6] </ref>, L is regular if and only if M L has a finite number of distinct rows. Suppose L is regular. Then by the above fact there exists a constant k such that M L has at most k distinct rows.
Reference: [15] <author> I. S. Iohvidov. </author> <title> Hankel and Toeplitz Matrices and Forms: Algebraic Theory, Edited by I. Gohberg, </title> <editor> Translated by G. Philip and A. Thijsse, </editor> <publisher> Birkhauser, </publisher> <address> Boston, </address> <year> 1982. </year>
Reference-contexts: Such a matrix is known as a Hankel matrix. An elegant theory on properties of such Hankel matrices has been developed <ref> [15] </ref>, from which we obtain strong bounds on the rank of M L (n) if L is unary. <p> An example is shown in Figure 1. Such matrices are classically known as Hankel matrices, and have been extensively studied <ref> [15] </ref>. In fact, a direct application of known results on the rank of Hankel matrices shows that if L is nonregular, then rank (M L (n)) n + 1 infinitely often. <p> In fact, a direct application of known results on the rank of Hankel matrices shows that if L is nonregular, then rank (M L (n)) n + 1 infinitely often. This was first proved by Iohvidov (see <ref> [15, Theorem 11.3] </ref>), based on previous work of Frobenius [11]. 16 * a 1 a 2 a 3 a 4 a 5 a 6 a 1 0 0 1 0 0 1 0 a 3 1 0 0 1 0 0 1 a 5 0 1 0 0 1 0 0
Reference: [16] <author> J. Ka~neps and R. Freivalds. </author> <title> Minimal nontrivial space complexity of probabilistic one-way Turing machines, </title> <booktitle> Proc. of the Conference on Mathematical Foundations of Computer Science, Springer Verlag Lecture Notes in Computer Science, 452 (1990), </booktitle> <pages> 355-361. </pages>
Reference-contexts: Let N L (n) (the nonregularity of L) be size of the largest set of pairwise n-inequivalent strings. Kaneps and Freivalds <ref> [16] </ref> showed that N L (n) b (n + 3)=2c for infinitely many n. (It is interesting to note that to prove their bound, Kaneps and Freivalds first showed that N L (n) equals the number of states of the minimal deterministic 1-way finite automaton that accepts all words of length <p> It is easy to show that the number of distinct rows of M L (n) is between N L (n) and N L (2n). Previously, Kaneps and Freivalds <ref> [16] </ref> showed that N L (n) is equal to the number of states of the minimal 1-way deterministic finite state automaton which accepts a language L 0 for which L 0 n = L n , where L n is the set of strings of L of length n. 14 Shallit <p> We now use a known lower bound on the nonregularity of nonregular languages to prove a lower bound for T 1 Theorem 4.2 If L is not regular, then T 1 L (n) log 2 n 1 for infinitely many n. Proof: Kaneps and Freivalds <ref> [16] </ref> proved that if L is not regular, then N L (n) b (n + 3)=2c for infinitely many n. By the definition of N L (n), the matrix M L (n) must have at least N L (n) distinct rows.
Reference: [17] <author> J. Ka~neps and R. Freivalds. </author> <title> Running Time to Recognize Nonregular Languages by 2-Way Probabilistic Automata, </title> <booktitle> Proc. of the 18th International Colloquium on Automata, Languages, and Programming, </booktitle> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1991, </year> <pages> 174-185. </pages>
Reference-contexts: 1 Introduction The classical subset construction of Rabin and Scott [25] shows that finite state automata with just nondeterministic states (nfa's) accept exactly the regular languages. Results of Rabin [24], Dwork and Stockmeyer [7] and Kaneps and Freivalds <ref> [17] </ref> show that the same is true of probabilistic finite state automata which run in polynomial expected time. Here and throughout the paper, we restrict attention to automata which accept languages with error probability which is some constant * less than 1=2. <p> This was shown by Freivalds [10], who constructed a 2pfa for the language f0 n 1 n j n 0g. Greenberg and Weiss [12] showed that exponential expected time is required by any 2pfa accepting this language. Dwork and Stockmeyer [7] and independently Kaneps and Freivalds <ref> [17] </ref> showed that in fact any 2pfa which recognizes a nonregular language must run in exponential expected time. It follows that 2PFA-polytime = Regular. Roughly, Rabin's proof shows that any language L accepted by a 1pfa has only finitely many equivalence classes. <p> This is stronger (by 1) for even n than Kaneps and Freivalds' lower bound. We also note that Dwork and Stockmeyer [7] obtained a weaker bound on N L (n) without using L (n).) Using tools from Markov chain theory, Dwork and Stockmeyer [7] and Kaneps and Freivalds <ref> [17] </ref> showed that if a language is accepted by a 2pfa in polynomial expected time, then the language has "low" nonregularity. In fact, N L (n) is bounded by some polynomial in log n. This, combined with the result of Kaneps and Freivalds, implies that 2PFA-polytime = Regular.
Reference: [18] <author> J. Ka~neps. </author> <title> Regularity of one-letter languages acceptable by 2-way finite probabilistic automata, </title> <booktitle> Proc. of Fundamentals of Computation Theory, Springer Verlag Lecture Notes in Computer Science, 529 (1991), </booktitle> <pages> 287-296. </pages>
Reference-contexts: If it is, we can conclude that 2NPFA-polytime = Regular. Recall that the class 2NPFA does contain nonregular languages, since it contains the class 2PFA, and Freivalds [10] showed that f0 n 1 n j n 0g is in this class. However, Kaneps <ref> [18] </ref> showed that the class 2PFA does not contain any nonregular unary language. Another open question is whether the class 2NPFA contains any nonregular unary language. It is also open whether there is a nonregular language in 2APFA-polytime. There are several other interesting open problems.
Reference: [19] <author> R. M. Karp. </author> <title> Some bounds on the storage requirements of sequential machines and Turing machines, </title> <journal> J. ACM, </journal> <volume> 14(3) (1967), </volume> <pages> 478-489. 29 </pages>
Reference-contexts: Following Karp <ref> [19] </ref>, we denote the latter measure by L (n). Karp [19] previously proved that L (n) &gt; n=2 + 1 for infinitely many n. <p> Following Karp <ref> [19] </ref>, we denote the latter measure by L (n). Karp [19] previously proved that L (n) &gt; n=2 + 1 for infinitely many n. Combining this with the fact that N L (n) and L (n) are equal, it follows immediately that N L (n) &gt; n=2 + 1 for infinitely many n.
Reference: [20] <author> F. T. Leighton and R. L. Rivest. </author> <title> The Markov chain tree theorem, </title> <type> Rep. </type> <institution> MIT/LCS/TM-249, Laboratory for Computer Science, MIT, </institution> <address> Cambridge, Mass., </address> <year> 1983. </year> <note> Also in IEEE Transactions on Information Theory, IT-37(6), </note> <year> (1986) </year> <month> 733-742. </month>
Reference-contexts: Then a (k; R) and a (k; R 0 ) are fi 2s -close. The proof of this lemma is based on the Markov chain tree theorem of Leighton and Rivest <ref> [20] </ref>, and can be found in [8].
Reference: [21] <author> K. Melhorn and E. M. Schmidt. </author> <title> Las Vegas is better than determinism in VLSI and distributed computing, </title> <booktitle> Proc. of the Fourteenth Annual ACM Symposium on Theory of Computing, </booktitle> <year> 1982, </year> <pages> 330-337. </pages>
Reference-contexts: Its proof is implicit in work of Melhorn and Schmidt <ref> [21] </ref>; we include it for completeness. Lemma 4.1 Any binary matrix A that can be 1-tiled with m tiles has at most 2 m distinct rows. <p> Proof: Melhorn and Schmidt, and independently Orlin, showed that for any binary matrix A, rank (A) ~ T (A) <ref> [21, 22] </ref>. Their result holds for A over any field. Halstenberg and Reischuk, refining a proof of Aho et. al., showed that dlog ~ T (A)e dlog T 1 (A)e (dlog (T 0 (A) + 1)e + 2) + 1 [1, 13].
Reference: [22] <author> J. Orlin. </author> <title> Contentment in Graph Theory: Covering Graphs with Cliques. </title> <booktitle> Proc. </booktitle> <publisher> Koniklijke Nederlandse Akademie van Wetenschappen Amsterdam Series A, </publisher> <month> 80(5) </month> <year> (1977), </year> <pages> 406-424. </pages>
Reference-contexts: Proof: Melhorn and Schmidt, and independently Orlin, showed that for any binary matrix A, rank (A) ~ T (A) <ref> [21, 22] </ref>. Their result holds for A over any field. Halstenberg and Reischuk, refining a proof of Aho et. al., showed that dlog ~ T (A)e dlog T 1 (A)e (dlog (T 0 (A) + 1)e + 2) + 1 [1, 13].
Reference: [23] <author> C. Papadimitriou. </author> <title> Games against nature, </title> <journal> J. Comput. System Sci., </journal> <volume> 31 (1985), </volume> <pages> 288-301. </pages>
Reference-contexts: In fact, N L (n) is bounded by some polynomial in log n. This, combined with the result of Kaneps and Freivalds, implies that 2PFA-polytime = Regular. Models of computation with both nondeterministic and probabilistic states have been studied intensively since the work of Papadimitriou <ref> [23] </ref> on games against nature. Babai and Moran [3] defined Arthur-Merlin games to be Turing machines with both nondeterministic and probabilistic states, which accept their languages with bounded error probability.
Reference: [24] <author> M. O. Rabin. </author> <title> Probabilistic automata, </title> <journal> Inf. Contr. </journal> <volume> 6 (1963), </volume> <pages> 230-245. </pages>
Reference-contexts: 1 Introduction The classical subset construction of Rabin and Scott [25] shows that finite state automata with just nondeterministic states (nfa's) accept exactly the regular languages. Results of Rabin <ref> [24] </ref>, Dwork and Stockmeyer [7] and Kaneps and Freivalds [17] show that the same is true of probabilistic finite state automata which run in polynomial expected time. <p> In Section 3, we prove the following theorems relating language acceptance of npfa's to tiling 2 complexity. The proofs of these theorems build on previous work of Dwork and Stockmeyer [8] and Rabin <ref> [24] </ref>. Theorem [3.1] A language L is in 1NPFA only if the 1-tiling complexity of L is O (1). Theorem [3.3] A language L is in 2NPFA-polytime only if the 1-tiling complexity of L is bounded by a polynomial in log n. <p> Rabin <ref> [24] </ref> was the first to consider probabilistic automata with bounded error probability. He showed that 1PFA = Regular. However, with a 2-way input head, pfa's can recognize nonregular languages. This was shown by Freivalds [10], who constructed a 2pfa for the language f0 n 1 n j n 0g. <p> For each of the classes 1NPFA, 2NPFA and 2NPFA-polytime, we describe upper bounds on the tiling complexity of the languages in these classes. The proof for 1NPFA's is a natural generalization of Rabin's proof that 1PFA = Regular <ref> [24] </ref>. The other two proofs build on previous results of Dwork and Stockmeyer [8] on 2npfa's. 3.1 1NPFA and Tiling Theorem 3.1 A language L is in 1NPFA only if the 1-tiling complexity of L is O (1).
Reference: [25] <author> M. O. Rabin and D. Scott. </author> <title> Finite automata and their decision problems, </title> <journal> IBM J. Research, </journal> <volume> 3(2) (1959), </volume> <pages> 115-125. </pages>
Reference-contexts: 1 Introduction The classical subset construction of Rabin and Scott <ref> [25] </ref> shows that finite state automata with just nondeterministic states (nfa's) accept exactly the regular languages. Results of Rabin [24], Dwork and Stockmeyer [7] and Kaneps and Freivalds [17] show that the same is true of probabilistic finite state automata which run in polynomial expected time.
Reference: [26] <author> A. Salomaa and M. Soittola. </author> <title> Automata-theoretic aspects of formal power series, Texts and Monographs in Computer Science, </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1978. </year>
Reference-contexts: Nevertheless, M L still has structural properties that we are able to exploit. In fact, the term Hankel matrix has been extended from its classical meaning to refer to matrices M L of non-unary languages (see <ref> [26] </ref>). <p> It follows that L is nonregular if and only if the rank of M (n) is unbounded. This conclusion has already been noted (see Sections II.3 and II.5 of the book by Salomaa and Soittola <ref> [26] </ref>, which describes results from the literature on rational power series and regular languages). The above lower bound is very weak. In what follows, we significantly improve it by using the special structure of M (n).
Reference: [27] <author> E. M. Schmidt. </author> <title> Succinctness of description of context free, regular and unambiguous languages, </title> <type> Ph.D. thesis, </type> <institution> Cornell University, </institution> <year> 1978. </year>
Reference-contexts: It is straightforward to verify the set of tiles defined in this way is indeed a valid 1-tiling of M L (n). A similar argument was used by Schmidt <ref> [27] </ref> to prove lower bounds on the number of states in an unambiguous nfa. We next turn to simple lower bounds on the 1-tiling complexity of nonregular languages. From Theorem 4.1, it is clear that if L is nonregular, then T 1 L (n) is unbounded.
Reference: [28] <author> J. Shallit. Automaticity: </author> <title> properties of a measure of descriptional complexity, </title> <booktitle> Proc. of the 11th Annual Symposium on Theoretical Aspects of Computer Science, </booktitle> <month> February </month> <year> 1994. </year>
Reference-contexts: showed that N L (n) is equal to the number of states of the minimal 1-way deterministic finite state automaton which accepts a language L 0 for which L 0 n = L n , where L n is the set of strings of L of length n. 14 Shallit <ref> [28] </ref> introduced a similar measure: the nondeterministic nonregularity of L, denoted by N N L (n), is the minimal number of states of a 1-way nondeterministic finite automaton which accepts a language L 0 for which L 0 n = L n .
Reference: [29] <author> A. C. Yao. </author> <title> Some complexity questions related to distributed computing, </title> <booktitle> Proc. of the Eleventh Annual ACM Symposium on Theory of Computing, </booktitle> <year> 1979, </year> <pages> 209-213. </pages>
Reference-contexts: In proving the two results, we introduce a new measure of the complexity of a language L called its 1-tiling complexity. Tiling complexity arguments have been used previously to prove lower bounds for communication complexity (see e.g. Yao <ref> [29] </ref>). With each language L fl , we associate an infinite binary matrix M L , whose rows and columns are labeled by the strings of fl . Entry M L [x; y] is 1 if the string xy 2 L and is 0 otherwise. <p> If the protocol is deterministic, then the worst case number of bits that need to be exchanged (that is, the deterministic communication complexity) is bounded below by log ~ T f <ref> [29] </ref>. If the protocol is non-deterministic, then the lower bound is log T f [1].
Reference: [30] <author> A. C. Yao. </author> <title> Lower bounds by probabilistic arguments, </title> <booktitle> Proc. of the 24th IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1983, </year> <pages> 420-428. 30 </pages>
References-found: 30

