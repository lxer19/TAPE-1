URL: ftp://ftp.cs.washington.edu/pub/ai/cgp-aaai98.ps
Refering-URL: http://www.cs.washington.edu/homes/weld/pubs.html
Root-URL: 
Title: contingency planning  
Keyword: conformant planning  
Note: Planning under uncertainty is a difficult task. If sensory information is available, it is possible to do  
Abstract: that is, develop plans where certain branches are executed conditionally, based on the outcome of sensory actions. However, even without sensory information, it is often possible to develop useful plans that succeed no matter which of the allowed states the world is actually in. We refer to this type of planning as Few conformant planners have been built, partly because conformant planning requires the ability to reason about disjunction. In this paper we describe Conformant Graphplan (CGP), a Graphplan-based planner that develops sound (non-contingent) plans when faced with uncertainty in the initial conditions and in the outcome of actions. The basic idea is to develop separate plan graphs for each possible world. This requires some subtle changes to both the graph expansion and solution extraction phases of Graphplan. In particular, the solution extraction phase must consider the unexpected side effects of actions in other possible worlds, and must confront any undesirable effects. We show that CGP performs significantly better than two previous (probabilistic) conformant planners. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Anderson, C., Smith, D. and Weld, D. </author> <year> 1998. </year> <title> Conditional effects in Graphplan. </title> <booktitle> In Proc. 4th Int. Conf. AI Planning Systems Blum, </booktitle> <editor> A., and Furst, M. </editor> <year> 1995. </year> <title> Fast planning through planning graph analysis. </title> <booktitle> In Proc. Int. Joint Conf. AI Blum, </booktitle> <editor> A., and Furst, M. </editor> <year> 1997. </year> <title> Fast planning through planning graph analysis. </title> <booktitle> Artificial Intelligence 300. </booktitle>
Reference-contexts: Finally, the possible worlds approach taken here can also be used to do sensory and contingent planning. We have done this, and the technique and results are described in <ref> (Weld, Anderson and Smith, 1998) </ref>. Acknowledgments Thanks to Mark Peot for providing an initial Lisp implementation of Graphplan, and for providing and assisting with UDTPOP. Thanks to Keith Golden, Mark Friedman, Pandu Nayak, and anonymous reviewers for comments on earlier versions of this paper.

Reference: <author> Golden, K., Etzioni, O., and Weld, D. </author> <year> 1994. </year> <title> Omnipotence without omniscience: efficient sensor management for planning. </title> <booktitle> In Proc. 12th National Conf. on AI. </booktitle>
Reference-contexts: There are a number of planning systems that do contingency planning, including: Warplan-C (Warren 1976), CNLP (Peot and Smith 1992), SENSP (Etzioni, et al. 1992), Plinth (Goldman and Boddy 1994), XII <ref> (Golden, Etzioni and Weld 1994) </ref>, Cassandra (Pryor and Collins 1996), C-Buridan (Draper, Hanks and Weld 1994), and DTPOP (Peot 1998). However, only Buridan (Kushmerick, Hanks and Weld 1995), C-Buridan and UDTPOP (Peot 1998) do con-formant planning. All three of these systems are probabilistic planners and are limited to propositional actions.
Reference: <author> Goldman, R. and Boddy, M. </author> <year> 1994. </year> <title> Conditional linear planning. </title> <booktitle> In Proc. 2nd Int. Conf. AI Planning Systems Goldman, </booktitle> <editor> R. and Boddy, M. </editor> <year> 1996. </year> <title> Expressive planning and explicit knowledge, </title> <booktitle> In Proc. 3rd Int. Conf. AI Planning Sys tems Koehler, </booktitle> <editor> J., Nebel, B., Hoffmann, J. and Dimopoulos, Y. </editor> <year> 1997. </year> <title> Extending planning graphs to an ADL subset. </title> <booktitle> In Proc. 4th European Conf. on Planning Kushmerick, </booktitle> <editor> N., Hanks, S., and Weld, D. </editor> <year> 1995. </year> <title> An algo rithm for probabilistic planning. </title> <journal> Artificial Intelligence 2):239286. </journal>
Reference-contexts: Finding a drug therapy plan that covers all the cases (without bad drug interactions) is a con-formant planning problem. There are a number of planning systems that do contingency planning, including: Warplan-C (Warren 1976), CNLP (Peot and Smith 1992), SENSP (Etzioni, et al. 1992), Plinth <ref> (Goldman and Boddy 1994) </ref>, XII (Golden, Etzioni and Weld 1994), Cassandra (Pryor and Collins 1996), C-Buridan (Draper, Hanks and Weld 1994), and DTPOP (Peot 1998). However, only Buridan (Kushmerick, Hanks and Weld 1995), C-Buridan and UDTPOP (Peot 1998) do con-formant planning.
Reference: <author> McDermott, D. </author> <year> 1987. </year> <title> A critique of pure reason. </title> <journal> Computa tional Intelligence Penberthy, </journal> <note> J. </note> <author> and Weld, D. </author> <year> 1992. </year> <title> UCPOP: A sound, com plete, partial order planner for ADL. </title> <booktitle> In Proc. 3rd Int. Conf. Principles of Knowledge Representation and Reasoning 103114. </booktitle>
Reference-contexts: The expansion phase of Graphplan is then the same as for a normal plan graph; we just have to do it for each of the possible worlds. To illustrate, consider the simple bomb in the toilet problem from <ref> (Mcdermott 1987) </ref>. There are two packages, one of which contains a bomb. Dunking the package with the bomb in it renders the bomb disarmed. We formalize the initial conditions as (and armed (xor In (P1) In (P2))).
Reference: <author> Peot, M. </author> <year> 1998. </year> <title> Decision-Theoretic Planning. </title> <type> Ph.D. Dissertation, </type> <institution> Dept. of Engineering-Economic Systems, Stanford University. </institution>
Reference-contexts: There are a number of planning systems that do contingency planning, including: Warplan-C (Warren 1976), CNLP (Peot and Smith 1992), SENSP (Etzioni, et al. 1992), Plinth (Goldman and Boddy 1994), XII (Golden, Etzioni and Weld 1994), Cassandra (Pryor and Collins 1996), C-Buridan (Draper, Hanks and Weld 1994), and DTPOP <ref> (Peot 1998) </ref>. However, only Buridan (Kushmerick, Hanks and Weld 1995), C-Buridan and UDTPOP (Peot 1998) do con-formant planning. All three of these systems are probabilistic planners and are limited to propositional actions. <p> Warplan-C (Warren 1976), CNLP (Peot and Smith 1992), SENSP (Etzioni, et al. 1992), Plinth (Goldman and Boddy 1994), XII (Golden, Etzioni and Weld 1994), Cassandra (Pryor and Collins 1996), C-Buridan (Draper, Hanks and Weld 1994), and DTPOP <ref> (Peot 1998) </ref>. However, only Buridan (Kushmerick, Hanks and Weld 1995), C-Buridan and UDTPOP (Peot 1998) do con-formant planning. All three of these systems are probabilistic planners and are limited to propositional actions. Furthermore, these planners are incredibly slow so slow that they make planners like UCPOP (Penberthy and Weld 1992) and Prodigy (Veloso et al. 1995) look positively zippy. <p> The implementation generates a single plan graph in which each proposition at each level is labelled with the possible world that it is in. Table 1 shows the performance of Buridan (Kushmerick, Hanks and Weld 1995), UDTPOP <ref> (Peot 1998) </ref>, CGP, and CGPx (CGP without induced mutex relationships) on a se ries of increasingly complicated bomb in the toilet problems. The domain contains two operator schemas, Dunk Flush Dunk clogs the toilet unconditionally and disarms the bomb if it is present in the dunked package.
Reference: <author> Peot, M., and Smith, D. </author> <year> 1992. </year> <title> Conditional Nonlinear Plan ning, </title> <booktitle> In Proc. 1st Int. Conf. AI Planning Systems Pryor, </booktitle> <editor> L. and Collins, G. </editor> <year> 1996. </year> <title> Planning for contingencies: a decision-based approach. </title>
Reference-contexts: Finding a drug therapy plan that covers all the cases (without bad drug interactions) is a con-formant planning problem. There are a number of planning systems that do contingency planning, including: Warplan-C (Warren 1976), CNLP <ref> (Peot and Smith 1992) </ref>, SENSP (Etzioni, et al. 1992), Plinth (Goldman and Boddy 1994), XII (Golden, Etzioni and Weld 1994), Cassandra (Pryor and Collins 1996), C-Buridan (Draper, Hanks and Weld 1994), and DTPOP (Peot 1998).
Reference: <author> J. </author> <title> Artificial Intelligence Re search Veloso, </title> <editor> M., Carbonell, J., Perez, A., Borrajo, D., Fink, E. and Blythe, J. </editor> <year> 1995. </year> <title> Integrating planning and learning: the prodigy architecture. </title>
Reference: <author> J. </author> <title> Experimental and Theoretical AI Warren, </title> <address> D. </address> <year> 1976. </year> <title> Generating Conditional Plans and Pro grams. </title> <booktitle> In Proc. Summer Conf. on AI and Simulation of Be havior Weld, </booktitle> <editor> D., Anderson, C. and Smith, D. </editor> <year> 1998. </year> <title> Extending Graphplan to handle uncertainty & sensing actions. </title> <booktitle> In Proc. 15th National Conf. on AI. </booktitle>
References-found: 8

