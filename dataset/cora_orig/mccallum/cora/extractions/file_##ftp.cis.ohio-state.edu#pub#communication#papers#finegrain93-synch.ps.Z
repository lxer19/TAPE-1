URL: file://ftp.cis.ohio-state.edu/pub/communication/papers/finegrain93-synch.ps.Z
Refering-URL: http://www.cis.ohio-state.edu/~panda/wormhole_pub.html
Root-URL: 
Email: E-mail: panda@cis.ohio-state.edu,  
Phone: Tel: (614)-292-5199  
Title: In Proceedings of Workshop on Fine-Grain Massively Parallel Coordination, International Sym- Optimal Phase Barrier Synchronization
Author: Dhabaleswar K. Panda 
Address: Columbus, OH-43210-1277  
Affiliation: Dept. of Computer and Information Science The Ohio-State University,  
Note: posium on Computer Architecture, San Diego, May 1993, pp. 24-26.  
Abstract: We propose a new multiphase barrier synchronization algorithm for k-ary n-cube networks using our earlier developed multirendezvous synchronization primitives [4]. The algorithm incurs minimal cost with optimal number of communication phases. The optimality is guided by system configuration parameters (k; n) and technological parameters t s (communication start-up cost) and t p (link-propagation cost). It is shown that with moderately large n and small (t s =t p ), it is possible to implement fast barrier synchronization for large number of processors with an overhead of n(t s + (k 1)t p ). For example, with n = 6, k = 16, t p = 1, and t s = 4, it is possible to barrier synchronize 2 24 processors in 114 time units. The analysis provides a framework to determine cost-effectiveness of implementing computations of different granularities on present and future wormhole-routed systems with varying system and technological parameters. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. A. Chien and J. H. Kim. </author> <title> Planar-Adaptive Routing: Low-Cost Adaptive Networks for Multiprocessors. </title> <booktitle> In Proceedings of the International Symposium on Computer Architecture, </booktitle> <pages> pages 268-277, </pages> <year> 1992. </year>
Reference-contexts: 1. Introduction Multicomputer networks are gaining popularity to build scalable distributed-memory systems (In-tel Paragon), cluster-connected shared memory systems (Stanford DASH), and virtual-shared memory systems (Munin). Wormhole-routing communication techniques [2] and adaptive routing schemes <ref> [1] </ref> are becoming the trend to build powerful multicomputer networks. However, high communication and synchronization overheads, associated with the current-generation multicomputers, allow these systems to support only coarse-grain computations. Implementing medium- and fine-grain computations on such systems demand fast communication and synchronization with minimal overhead.
Reference: [2] <author> W. J. Dally, A. Chien, and Others. </author> <title> The J-Machine: A Fine-Grain Concurrent Computer. </title> <booktitle> Information Processing, </booktitle> <pages> pages 1147-1153, </pages> <year> 1989. </year>
Reference-contexts: 1. Introduction Multicomputer networks are gaining popularity to build scalable distributed-memory systems (In-tel Paragon), cluster-connected shared memory systems (Stanford DASH), and virtual-shared memory systems (Munin). Wormhole-routing communication techniques <ref> [2] </ref> and adaptive routing schemes [1] are becoming the trend to build powerful multicomputer networks. However, high communication and synchronization overheads, associated with the current-generation multicomputers, allow these systems to support only coarse-grain computations. Implementing medium- and fine-grain computations on such systems demand fast communication and synchronization with minimal overhead.
Reference: [3] <author> R. Gupta. </author> <title> The Fuzzy Barrier: A Mechanism for the High Speed Synchronization of Processors. </title> <booktitle> In Proceedings of the International Conference on Architectural Support for Programming Languages and Operating Systems, </booktitle> <pages> pages 54-63, </pages> <year> 1989. </year>
Reference-contexts: This demands development of new synchronization algorithms with fewer phases for various k-ary n-cube system configurations with different t s and t p parameters. Small synchronization overhead demonstrates potential to overlap computation with synchronization by using schemes like integrated network barriers [7] and split-phase (fuzzy) barriers <ref> [3] </ref>. In this paper, we propose a new barrier synchronization algorithm using special multirendezvous and rendezvous synchronization primitives [4]. These primitives have potential to combine both the reporting and wakeup steps to a single step.
Reference: [4] <author> S. K. S. Gupta and D. K. Panda. </author> <title> Barrier Synchronization in Distributed-Memory Multiprocessors using Rendezvous Primitives. </title> <booktitle> In Proceedings of the International Parallel Processing Symposium, </booktitle> <month> April </month> <year> 1993. </year> <note> (accepted to appear). </note>
Reference-contexts: Small synchronization overhead demonstrates potential to overlap computation with synchronization by using schemes like integrated network barriers [7] and split-phase (fuzzy) barriers [3]. In this paper, we propose a new barrier synchronization algorithm using special multirendezvous and rendezvous synchronization primitives <ref> [4] </ref>. These primitives have potential to combine both the reporting and wakeup steps to a single step. The multirendezvous primitive, using path-based routing [5], has tremendous potential to barrier synchronize all processors in a system using only one message, making it quite attractive for systems with high t s . <p> Hence we propose a multiphase approach to synchronize processors in subsets with smaller path lengths in each phase. Using a phase decision tree approach, we determine optimal number of phases and the associated synchronization overhead. 2. Barrier Synchronization with Multirendezvous Primitives Operational principles of three different multirendezvous primitives <ref> [4] </ref> are shown in Fig. 1. These primitives use path-based routing [5] where a single message (worm) carries multiple destinations as its header and passes by the processors. Consider the single-path-based scheme as shown in Fig. 1 (a). <p> In this scheme, two worms are initiated by two leaders. The worm from a direction is forwarded only if its processor has reached the barrier point. The processor is waken-up only when both worms cross through the router. Detailed implementation of these three primitives are given in <ref> [4] </ref>. These primitives are powerful to barrier synchronize all processors in a single phase. However, for large N, the link-propagation component (N 1)t p may be substantially larger than t s . Under such circumstances, the processors can be divided into different subsets (with smaller paths).
Reference: [5] <author> X. Lin, P. K. McKinley, and L. M. Ni. </author> <title> Performance Evaluation of Multicast Wormhole Routing in 2D-Mesh Multicomputers. </title> <booktitle> In Proceedings of the International Conference on Parallel Processing, </booktitle> <pages> pages I:435-442, </pages> <year> 1991. </year>
Reference-contexts: In this paper, we propose a new barrier synchronization algorithm using special multirendezvous and rendezvous synchronization primitives [4]. These primitives have potential to combine both the reporting and wakeup steps to a single step. The multirendezvous primitive, using path-based routing <ref> [5] </ref>, has tremendous potential to barrier synchronize all processors in a system using only one message, making it quite attractive for systems with high t s . <p> Using a phase decision tree approach, we determine optimal number of phases and the associated synchronization overhead. 2. Barrier Synchronization with Multirendezvous Primitives Operational principles of three different multirendezvous primitives [4] are shown in Fig. 1. These primitives use path-based routing <ref> [5] </ref> where a single message (worm) carries multiple destinations as its header and passes by the processors. Consider the single-path-based scheme as shown in Fig. 1 (a).
Reference: [6] <author> M. T. O'Keefe and H. G. Dietz. </author> <title> Hardware Barrier Synchronization: Static Barrier MIMD (SBM). </title> <booktitle> In Proceedings of the International Conference on Parallel Processing, </booktitle> <pages> pages I: 35-42, </pages> <month> Aug </month> <year> 1990. </year>
Reference-contexts: Implementing medium- and fine-grain computations on such systems demand fast communication and synchronization with minimal overhead. In a distributed-memory multiprocessors, the on-going principle has been to use naive send and recv communication primitives to achieve barrier synchronization <ref> [6] </ref> in two steps: a reporting step followed by a wakeup step. This approach takes 2log 2 (N ) communication phases, with an overhead of (t s + t p ) per phase, to synchronize all N processors in a system.
Reference: [7] <author> J. A. Solworth and J. Stamatopoulos. </author> <title> Integrated Network Barriers for D-dimensional Meshes. In Proceedings of the Working Conference on Architectures and Compilation Techniques for Fine and Medium Grain Parallelism, </title> <booktitle> 1992. </booktitle> <pages> 3 </pages>
Reference-contexts: This demands development of new synchronization algorithms with fewer phases for various k-ary n-cube system configurations with different t s and t p parameters. Small synchronization overhead demonstrates potential to overlap computation with synchronization by using schemes like integrated network barriers <ref> [7] </ref> and split-phase (fuzzy) barriers [3]. In this paper, we propose a new barrier synchronization algorithm using special multirendezvous and rendezvous synchronization primitives [4]. These primitives have potential to combine both the reporting and wakeup steps to a single step.
References-found: 7

