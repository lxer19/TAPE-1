URL: http://www.cs.ucl.ac.uk/staff/a.hunter/para.ps
Refering-URL: http://www.cs.ucl.ac.uk/staff/A.Hunter/papers.html
Root-URL: http://www.cs.ucl.ac.uk
Author: ANTHONY HUNTER 
Note: PARACONSISTENT LOGICS  
Abstract-found: 0
Intro-found: 1
Reference: [ Anderson and Belnap, 1975 ] <author> A. Anderson and N. Belnap. </author> <title> Entailment: The Logic of Relevance and Necessity. </title> <publisher> Princeton University Press, </publisher> <year> 1975. </year>
Reference: [ Arruda, 1977 ] <author> A. Arruda. </author> <title> On the imaginary logic of NA Vasilev. In A Arruda, N Da Costa, </title> <editor> and R Chuaqui, editors, </editor> <title> Non-classical logics, model theory and computability. </title> <publisher> North Holland, </publisher> <year> 1977. </year>
Reference: [ Balzer, 1991 ] <author> R. Balzer. </author> <title> Tolerating inconsistency. </title> <booktitle> In proceedings of the 13th International Conference on Software Engineering, </booktitle> <pages> pages 158-165. </pages> <publisher> IEEE Press, </publisher> <year> 1991. </year>
Reference-contexts: There are a number of attempts to accommodate inconsistent data in a database by labelling. We can view ideas of truth maintenance in this way [ Fehrer, 1993 ] . Also, Balzer <ref> [ Balzer, 1991 ] </ref> suggests guards on inconsistent data to minimize the negative ramifications, and then to warn the user of the inconsistency, and in Naqvi and Rossi [ 1990 ] inconsistent data is allowed to enter the database, but the time that the data is entered is recorded, and newer
Reference: [ Batens, 1980 ] <author> D. Batens. </author> <title> Paraconsistent extensional propositional logics. </title> <institution> Logique et Analyse, 90-91:195-234, </institution> <year> 1980. </year>
Reference: [ Benferhat et al., 1993 ] <author> S. Benferhat, C. Cayrol, D. Dubois, J. Lang and H. Prade. </author> <title> Inconsistency management and prioritized syntax-based entailment. </title> <booktitle> In Proceedings of the Thirteenth International Joint Conference on Artificial Intelligence. </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1993. </year>
Reference-contexts: This includes the use of specificity [ Poole, 1985 ] , ordered theory presentations [ Ryan, 1992 ] , and prioritized syntax-based entailment <ref> [ Benferhat et al., 1993 ] </ref> . Acknowledgements This work has been partly supported by the ESPRIT BRA DRUMS2 project and by the EPSRC VOILA project. Thanks are due to Salem Benferhat and Torsten Schaub for reading an earlier draft of this chapter. University College, London.
Reference: [ Besnard et al., 1995 ] <author> Ph. Besnard, L. Farinas del Cerro, D. Gabbay and A. Hunter. </author> <title> Logical handling of default and inconsistent information. </title> <editor> In Ph Smets and A Motro, editors, </editor> <booktitle> Uncertainty management in information systems. </booktitle> <publisher> Kluwer, </publisher> <year> 1995. </year> <note> 42 ANTHONY HUNTER </note>
Reference-contexts: 1 INTRODUCTION In practical reasoning, it is common to have too much information about some situation. In other words, it is common for there to be classically inconsistent information in a practical reasoning database <ref> [ Besnard et al., 1995 ] </ref> . The diversity of logics proposed for aspects of practical reasoning indicates the complexity of this form of reasoning.
Reference: [ Benferhat, Dubois and Prade, 1993 ] <author> S. Benferhat, D. Dubois and H. Prade. </author> <title> Argumentative inference in uncertain and inconsistent knowledge bases. </title> <booktitle> In Proceedings of Uncertainty in Artificial Intelligence, </booktitle> <pages> pages 1449-1445. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1993. </year>
Reference-contexts: QC logic is much better behaved in this respect, as illustrated by the the fact that more non-trivial classical conclusions are captured by QC-logic. QC logic is also more appropriate than various approaches to reasoning from consistent subsets of inconsistent sets of formulae (for a review, see <ref> [ Benferhat, Dubois and Prade, 1993 ] </ref> ). In particular, QC logic does not suffer from the limitation due to spliting sets of formulae into compatible subsets: QC logic can make use of the contents of the formulas without being constrained by a consistency check.
Reference: [ Benferhat, Dubois and Prade, 1995 ] <author> S. Benferhat, D. Dubois and H. Prade. </author> <title> A logical approach to reasoning under inconsistency in stratified knowledge bases. In Symbolic and Quantitative Approaches to Reasoning and Uncertainty, </title> <booktitle> volume 956 of Lecture Notes in Computer Science, </booktitle> <pages> pages 36-43. </pages> <publisher> Springer, </publisher> <year> 1995. </year>
Reference-contexts: Finally, priorities have been used in a number of ways in the management of inconsistency (for example see <ref> [ Benferhat, Dubois and Prade, 1995 ] </ref> ), and in the closely related problem of non-monotonic reasoning. This includes the use of specificity [ Poole, 1985 ] , ordered theory presentations [ Ryan, 1992 ] , and prioritized syntax-based entailment [ Benferhat et al., 1993 ] .
Reference: [ Belnap, 1977 ] <author> N. Belnap. </author> <title> A useful four-valued logic. </title> <editor> In G. Epstein, editor, </editor> <booktitle> Modern Uses of Multiple-valued Logic, </booktitle> <pages> pages 8-37. </pages> <publisher> Reidel, </publisher> <year> 1977. </year>
Reference-contexts: The following properties succeed for the FV consequence relation: Reflexivity, Consistency Preservation, Mono-tonicity, and Cut. PROPOSITION 36 ( [ Hunter, 1996b ] ). The following properties fail for the FV consequence relation: And, Supraclassicality, Or, Left Logical Equivalence, Deduction, Conditionalization, and Right Weakening. 28 ANTHONY HUNTER PROPOSITION 37 ( <ref> [ Belnap, 1977; Hunter, 1996b ] </ref> ). The FV consequence relation is not pure and not trivializable. PROPOSITION 38 ( [ Hunter, 1996b ] ).
Reference: [ Besnard, 1991 ] <author> Ph. Besnard. </author> <title> Paraconsistent logic approach to knowledge representation. </title> <editor> In M. de Glas and D. Gabbay, editors, </editor> <booktitle> Proceedings of the First World Conference on Fundamentals of Artificial Intelligence. </booktitle> <publisher> Angkor, </publisher> <year> 1991. </year>
Reference: [ Besnard and Hunter, 1995 ] <author> Ph. Besnard and A. Hunter. </author> <title> Quasi-classical logic: Non-trivializable classical reasoning from inconsistent information. </title> <editor> In C. Froidevaux and J. Kohlas, editors, </editor> <title> Symbolic and Quantitative Approaches to Uncertainty, </title> <booktitle> Lecture Notes in Computer Science. </booktitle> <publisher> Springer, </publisher> <year> 1995. </year>
Reference-contexts: To address this, an alternative called quasi-classical logic has been proposed by Besnard and Hunter <ref> [ Besnard and Hunter, 1995 ] </ref> . <p> For = fff _ (fi ^ fl); :fig, consequences of include ff _ fi, ff _ fl, ff, and :fi. PROPOSITION 44 ( <ref> [ Besnard and Hunter, 1995; Hunter, 1996a ] </ref> ). The following properties succeed for the QC consequence relation: Reflexivity, Consistency preservation, and Monotonicity. PROPOSITION 45 ( [ Besnard and Hunter, 1995; Hunter, 1996a ] ). <p> For = fff _ (fi ^ fl); :fig, consequences of include ff _ fi, ff _ fl, ff, and :fi. PROPOSITION 44 ( <ref> [ Besnard and Hunter, 1995; Hunter, 1996a ] </ref> ). The following properties succeed for the QC consequence relation: Reflexivity, Consistency preservation, and Monotonicity. PROPOSITION 45 ( [ Besnard and Hunter, 1995; Hunter, 1996a ] ). The following properties fail for the QC consequence relation: Cut, Right weakening, Left logical equivalence, and Supraclassicality. PROPOSITION 46 ( [ Besnard and Hunter, 1995; Hunter, 1996a ] ). The QC consequence relation is pure, and hence not trivializable. <p> The following properties succeed for the QC consequence relation: Reflexivity, Consistency preservation, and Monotonicity. PROPOSITION 45 ( <ref> [ Besnard and Hunter, 1995; Hunter, 1996a ] </ref> ). The following properties fail for the QC consequence relation: Cut, Right weakening, Left logical equivalence, and Supraclassicality. PROPOSITION 46 ( [ Besnard and Hunter, 1995; Hunter, 1996a ] ). The QC consequence relation is pure, and hence not trivializable. PROPOSITION 47 ( [ Besnard and Hunter, 1995; Hunter, 1996a ] ). For = ;, there are no ff 2 L such that ` Q ff. <p> The following properties fail for the QC consequence relation: Cut, Right weakening, Left logical equivalence, and Supraclassicality. PROPOSITION 46 ( <ref> [ Besnard and Hunter, 1995; Hunter, 1996a ] </ref> ). The QC consequence relation is pure, and hence not trivializable. PROPOSITION 47 ( [ Besnard and Hunter, 1995; Hunter, 1996a ] ). For = ;, there are no ff 2 L such that ` Q ff. The QC consequence relation offers many more non-tautological inferences from data than either the weakly-negative or four-valued logics.
Reference: [ Carnielli et al., 1991 ] <author> W. Carnielli, L. Farinas del Cerro and M. Lima-Marques. </author> <title> Contextual negation and reasoning with contradiction. </title> <booktitle> In Proceedings of the Eleventh International Conference on Artificial Intelligence. </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1991. </year>
Reference: [ Carnielli and Lima-Marques, 1992 ] <author> W. Carnielli and M. Lima-Marques. </author> <title> Reasoning under inconsistent knowledge. </title> <journal> Journal of Applied Non-Classical Logics, </journal> <volume> 2 </volume> <pages> 49-79, </pages> <year> 1992. </year>
Reference: [ da Costa, 1974 ] <author> N. C. da Costa. </author> <title> On the theory of inconsistent formal systems. </title> <journal> Notre Dame Journal of Formal Logic, </journal> <volume> 15 </volume> <pages> 497-510, </pages> <year> 1974. </year>
Reference-contexts: There are a number of ways in which this can be achieved. One way is to weaken classical logic so that ex falso quodlibet and reductio ad absurdum do not hold. This gives a paraconsistent logic called C ! logic proposed by da Costa <ref> [ da Costa, 1974 ] </ref> . 3.1 Proof theory for C ! Below we give a presentation of C ! . All the schema in the logic C ! are schema in classical logic. <p> The following properties succeed for the C ! consequence relation: Reflexivity, And, Monotonicity, Cut, Deduction, Conditionalization, Consistency preservation, and Or. PROPOSITION 22 ( [ Hunter, 1996b ] ). The following properties fail for the C ! consequence relation: Supraclassicality,Left logical equivalence, and Right weakening. PROPOSITION 23 ( <ref> [ da Costa, 1974; Hunter, 1996b ] </ref> ). The C ! consequence relation is not pure and not trivializable. An alternative presentation of C ! is given by a weaker-than-classical set of classical deduction proof rules [ Raggio, 1978 ] .
Reference: [ Doyle, 1979 ] <author> J. Doyle. </author> <title> A truth maintenance system. </title> <journal> Artificial Intelligence, </journal> <volume> 12 </volume> <pages> 231-272, </pages> <year> 1979. </year>
Reference: [ Dung, 1993 ] <author> P. Dung. </author> <title> The acceptability of arguments and its fundamental role in non-monotonic reasoning and logic programming. </title> <booktitle> In Proceedings of the Thirteenth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 852-857, </pages> <year> 1993. </year>
Reference: [ Elvang-Goransson and Hunter, 1995 ] <author> M. Elvang-Goransson and A. Hunter. </author> <title> Argumentative logics: Reasoning from classically inconsistent information. </title> <journal> Data and Knowledge Engineering, </journal> <volume> 16, </volume> <year> 1995. </year>
Reference-contexts: PROPOSITION 12 ( <ref> [ Elvang-Goransson and Hunter, 1995 ] </ref> ) Let be a database. " [ We can consider a maximally consistent subset of a database as capturing a plausible or coherent view on the database. <p> This gives two maximally consistent subsets, 1 = fff; ff ! fi; :ff ! fi; flg, and 2 = f:ff; ff ! fi; :ff ! fi; flg. From this T MC ()=fff ! fi; :ff ! fi; flg, and a minimally inconsistent subset = fff; :ffg. PROPOSITION 14 ( <ref> [ Elvang-Goransson and Hunter, 1995 ] </ref> ). Let be a database and ff 2 L, and let max be an operator picking -maximal elements from a set of sets. <p> Then MC () = ffff; fl ^ (ff _ :fi)g; fff; :fl ^ (:ff ^ :fi)gg. And MC ( [ ffig) = ffff; fl ^ (ff _ :fi); fig; fff; :fl ^ (:ff _ :fi)g; f:fl ^ (:ff _ :fi); figg. 18 ANTHONY HUNTER PROPOSITION 16 ( <ref> [ Elvang-Goransson and Hunter, 1995 ] </ref> ). Let be a database and ff 2 L. <p> such that (; fi) 2 AU (), (; fi) 2 ARU (), (; fi) 2 AB (), or (; fi) 2 AF (). 36 ANTHONY HUNTER AT () AF () = AB () = ARU () = AU () A8 () AR () A9 () An () PROPOSITION 63 ( <ref> [ Elvang-Goransson and Hunter, 1995 ] </ref> ). AT () AF () = AB () = ARU () = We summarize this result by the diagram in Figure 3. <p> PARACONSISTENT LOGICS 37 PROPOSITION 65 ( <ref> [ Elvang-Goransson and Hunter, 1995 ] </ref> ). CT () CF () = CB () = CRU () = In Figure 4, we summarize properties of the argumentative consequence relations [ Elvang-Goransson and Hunter, 1995 ] . <p> PARACONSISTENT LOGICS 37 PROPOSITION 65 ( <ref> [ Elvang-Goransson and Hunter, 1995 ] </ref> ). CT () CF () = CB () = CRU () = In Figure 4, we summarize properties of the argumentative consequence relations [ Elvang-Goransson and Hunter, 1995 ] . The weaker conditions on C9 and CR allow some of the classical axioms on the consequence relations to hold such as left logical equivalence and right weakening, but that others such as cut, the and property, and the or property fail.
Reference: [ Fehrer, 1993 ] <author> D. Fehrer. </author> <title> A unifying framework for reason maintenance. </title> <editor> In M. Clarke, R. Kruse, and S. Moral, editors, </editor> <title> Symbolic and Qualitative Approaches to Reasoning and Uncertainty (ECSQARU`93), </title> <booktitle> volume 747 of Lecture Notes in Computer Science, </booktitle> <pages> pages 113-120. </pages> <publisher> Springer, </publisher> <year> 1993. </year>
Reference-contexts: We can identify likely sources of the problem, and use this to suggest appropriate actions [ Hunter and Nuseibeh, 1995 ] . There are a number of attempts to accommodate inconsistent data in a database by labelling. We can view ideas of truth maintenance in this way <ref> [ Fehrer, 1993 ] </ref> .
Reference: [ Finkelstein et al., 1994 ] <author> A. Finkelstein, D. Gabbay, A. Hunter, J. Kramer and B. Nuseibeh. </author> <title> Inconsistency handling in multi-perspective specifications. </title> <journal> Transactions on Software Engineering, </journal> <volume> 20(8) </volume> <pages> 569-578, </pages> <year> 1994. </year>
Reference-contexts: The diversity of logics proposed for aspects of practical reasoning indicates the complexity of this form of reasoning. However, central to practical reasoning seems to be the need to reason with inconsistent information without the logic being trivialized <ref> [ Gabbay and Hunter, 1991; Finkelstein et al., 1994 ] </ref> .
Reference: [ Fagin, Ullman and Vardi, 1983 ] <author> R. Fagin, J. Ullman and M. Vardi. </author> <title> On the semantics of updates in databases. </title> <booktitle> In Proceedings of the Second Annual Association of Computing Machinery Symposium on Principles of Database Systems. </booktitle> <publisher> ACM Press, </publisher> <year> 1983. </year>
Reference: [ Gabbay, 1985 ] <editor> D. Gabbay. </editor> <booktitle> Theoretical foundations of non-monotonic reasoning in expert systems. </booktitle> <editor> In K. Apt, editor, </editor> <title> Logics and Models of Concurrent Systems. </title> <publisher> Springer, </publisher> <year> 1985. </year>
Reference-contexts: DEFINITION 4 The relation ` is classical consequence, defined in the standard way over L. For a database , Cn () is the set fOEj ` OEg. 2.2 Properties of consequence relations The following standard properties of consequence relations have been adapted from those given by Gabbay <ref> [ Gabbay, 1985 ] </ref> and Gardenfors and Makinson [ Gardenfors and Makinson, 1993 ] . PARACONSISTENT LOGICS 15 DEFINITION 5 Let ` x be some consequence relation, where ` x -(L) fi L.
Reference: [ Gabbay, 1993 ] <author> D. Gabbay. </author> <title> Labelled deductive systems: A position paper. </title> <editor> In J. Oikkonnen and J. Vaananen, editors, </editor> <booktitle> Proceedings of the Logic Colloquium`90, volume 2 of Lecture Notes on Logic. </booktitle> <publisher> Springer, </publisher> <year> 1993. </year>
Reference-contexts: In practical reasoning, object-level formulae can represent many kinds of useful information. However, it is possible to augment the syntactic information by semantic or meta-level information as proposed by Gabbay in Labelled Deductive Systems <ref> [ Gabbay, 1993 ] </ref> .
Reference: [ Gardenfors, 1988 ] <author> P. Gardenfors. </author> <title> Knowledge in Flux. </title> <publisher> MIT Press, </publisher> <year> 1988. </year>
Reference-contexts: If fl 2 fi and ` OE $ :fl, then (; OE) is an undercutting defeater of (fi; ). Rebutting defeat, as defined here, is a symmetrical relation. One way of changing this is by use of priorities, such as in epistemic entrenchment <ref> [ Gardenfors, 1988 ] </ref> or as in specificity [ Poole, 1985 ] . For a database , an argumentative structure is any set of subsets of An (). The intention behind the definition for an argumentative structure is that different subsets of An () have different degrees of acceptability.
Reference: [ Gabbay and Hunter, 1991 ] <author> D. Gabbay and A. Hunter. </author> <title> Making inconsistency respectable 1: A position paper. </title> <editor> In Ph. Jorrand and J. Keleman, editors, </editor> <booktitle> Fundamentals of Artificial Intelligence Research, volume 535 of Lecture Notes in Artificial Intelligence. </booktitle> <publisher> Springer, </publisher> <year> 1991. </year> <note> PARACONSISTENT LOGICS 43 </note>
Reference-contexts: The diversity of logics proposed for aspects of practical reasoning indicates the complexity of this form of reasoning. However, central to practical reasoning seems to be the need to reason with inconsistent information without the logic being trivialized <ref> [ Gabbay and Hunter, 1991; Finkelstein et al., 1994 ] </ref> .
Reference: [ Gabbay and Hunter, 1993a ] <author> D. Gabbay and A. Hunter. </author> <title> Making inconsistency respectable 2: Meta-level handling of inconsistent data. </title> <editor> In M. Clarke, R. Kruse and S. Moral, editors, </editor> <title> Symbolic and Qualitative Approaches to Reasoning and Uncertainty (ECSQARU`93), </title> <booktitle> volume 747 of Lecture Notes in Computer Science, </booktitle> <pages> pages 129-136. </pages> <publisher> Springer, </publisher> <year> 1993. </year>
Reference: [ Gabbay and Hunter, 1993b ] <author> D. Gabbay and A. Hunter. </author> <title> Restricted access logics for inconsistent information. </title> <editor> In M. Clarke, R. Kruse and S. Moral, editors, </editor> <title> Symbolic and Qualitative Approaches to Reasoning and Uncertainty (ECSQARU`93), </title> <booktitle> volume 747 of Lecture Notes in Computer Science, </booktitle> <pages> pages 137-144. </pages> <publisher> Springer, </publisher> <year> 1993. </year>
Reference: [ Gardenfors and Makinson, 1993 ] <author> P. Gardenfors and D. Makinson. </author> <title> Non-monotonic inference based on expectations. </title> <journal> Artificial Intelligence, </journal> <volume> 65 </volume> <pages> 197-246, </pages> <year> 1993. </year>
Reference-contexts: For a database , Cn () is the set fOEj ` OEg. 2.2 Properties of consequence relations The following standard properties of consequence relations have been adapted from those given by Gabbay [ Gabbay, 1985 ] and Gardenfors and Makinson <ref> [ Gardenfors and Makinson, 1993 ] </ref> . PARACONSISTENT LOGICS 15 DEFINITION 5 Let ` x be some consequence relation, where ` x -(L) fi L.
Reference: [ Hunter and Nuseibeh, 1995 ] <author> A. Hunter and B. Nuseibeh. </author> <title> Managing inconsistent specifications: Reasoning, analysis, and action. </title> <type> Technical report, </type> <institution> Department of Computing, Imperial College, </institution> <address> London, </address> <year> 1995. </year>
Reference-contexts: This means we can track PARACONSISTENT LOGICS 41 information used in reasoning and hence analyse inconsistencies as they arise. We can identify likely sources of the problem, and use this to suggest appropriate actions <ref> [ Hunter and Nuseibeh, 1995 ] </ref> . There are a number of attempts to accommodate inconsistent data in a database by labelling. We can view ideas of truth maintenance in this way [ Fehrer, 1993 ] .
Reference: [ Hunter, 1996a ] <author> A. Hunter. </author> <title> Reasoning with inconsistent information using quasi-classical logic. </title> <type> Technical report, </type> <institution> Department of Computing, Imperial College, </institution> <address> London, </address> <year> 1996. </year>
Reference-contexts: For = fff _ (fi ^ fl); :fig, consequences of include ff _ fi, ff _ fl, ff, and :fi. PROPOSITION 44 ( <ref> [ Besnard and Hunter, 1995; Hunter, 1996a ] </ref> ). The following properties succeed for the QC consequence relation: Reflexivity, Consistency preservation, and Monotonicity. PROPOSITION 45 ( [ Besnard and Hunter, 1995; Hunter, 1996a ] ). <p> For = fff _ (fi ^ fl); :fig, consequences of include ff _ fi, ff _ fl, ff, and :fi. PROPOSITION 44 ( <ref> [ Besnard and Hunter, 1995; Hunter, 1996a ] </ref> ). The following properties succeed for the QC consequence relation: Reflexivity, Consistency preservation, and Monotonicity. PROPOSITION 45 ( [ Besnard and Hunter, 1995; Hunter, 1996a ] ). The following properties fail for the QC consequence relation: Cut, Right weakening, Left logical equivalence, and Supraclassicality. PROPOSITION 46 ( [ Besnard and Hunter, 1995; Hunter, 1996a ] ). The QC consequence relation is pure, and hence not trivializable. <p> The following properties succeed for the QC consequence relation: Reflexivity, Consistency preservation, and Monotonicity. PROPOSITION 45 ( <ref> [ Besnard and Hunter, 1995; Hunter, 1996a ] </ref> ). The following properties fail for the QC consequence relation: Cut, Right weakening, Left logical equivalence, and Supraclassicality. PROPOSITION 46 ( [ Besnard and Hunter, 1995; Hunter, 1996a ] ). The QC consequence relation is pure, and hence not trivializable. PROPOSITION 47 ( [ Besnard and Hunter, 1995; Hunter, 1996a ] ). For = ;, there are no ff 2 L such that ` Q ff. <p> The following properties fail for the QC consequence relation: Cut, Right weakening, Left logical equivalence, and Supraclassicality. PROPOSITION 46 ( <ref> [ Besnard and Hunter, 1995; Hunter, 1996a ] </ref> ). The QC consequence relation is pure, and hence not trivializable. PROPOSITION 47 ( [ Besnard and Hunter, 1995; Hunter, 1996a ] ). For = ;, there are no ff 2 L such that ` Q ff. The QC consequence relation offers many more non-tautological inferences from data than either the weakly-negative or four-valued logics. <p> For this CQ () 6 CFV () and CFV () 6 CQ () hold. 5.2 Semantics for QC logic There is a semantic counterpart to the QC proof theory <ref> [ Hunter, 1996a ] </ref> . To simplify the discussion for this chapter, we restrict the coverage to just clauses i.e. disjunctions ff 1 _ :: _ ff n , where fff 1 ; ::; ff n g is a set of literals. DEFINITION 50 Let S be some set. <p> PROPOSITION 57 For a language restricted to clauses, the ` Q relation is sound and complete with respect to the j= Q relation. The semantics and correctness result for the full QC language is in <ref> [ Hunter, 1996a ] </ref> . 5.3 Applicability of quasi-classical logic Developing a non-trivializable, or paraconsistent logic, necessitates some compromise, or weakening, of classical logic. The compromises imposed to give QC logic seem to be more appropriate than other paraconsistent logics for applications in computing.
Reference: [ Hunter, 1996b ] <author> A. Hunter. </author> <title> Some results on paraconsistent logics. </title> <type> Technical report, </type> <institution> Department of Computing, Imperial College, </institution> <address> London, </address> <year> 1996. </year>
Reference-contexts: So, for example, ff does not follow from the database: f (ff _ fi); :fig, whereas ff does follow from the database: f (:fi ! ff); :fig. There are many similar examples that could be considered confusing and counter-intuitive from a practical reasoning perspective. PROPOSITION 21 ( <ref> [ Hunter, 1996b ] </ref> ). The following properties succeed for the C ! consequence relation: Reflexivity, And, Monotonicity, Cut, Deduction, Conditionalization, Consistency preservation, and Or. PROPOSITION 22 ( [ Hunter, 1996b ] ). The following properties fail for the C ! consequence relation: Supraclassicality,Left logical equivalence, and Right weakening. <p> There are many similar examples that could be considered confusing and counter-intuitive from a practical reasoning perspective. PROPOSITION 21 ( <ref> [ Hunter, 1996b ] </ref> ). The following properties succeed for the C ! consequence relation: Reflexivity, And, Monotonicity, Cut, Deduction, Conditionalization, Consistency preservation, and Or. PROPOSITION 22 ( [ Hunter, 1996b ] ). The following properties fail for the C ! consequence relation: Supraclassicality,Left logical equivalence, and Right weakening. PROPOSITION 23 ( [ da Costa, 1974; Hunter, 1996b ] ). The C ! consequence relation is not pure and not trivializable. <p> The following properties succeed for the C ! consequence relation: Reflexivity, And, Monotonicity, Cut, Deduction, Conditionalization, Consistency preservation, and Or. PROPOSITION 22 ( [ Hunter, 1996b ] ). The following properties fail for the C ! consequence relation: Supraclassicality,Left logical equivalence, and Right weakening. PROPOSITION 23 ( <ref> [ da Costa, 1974; Hunter, 1996b ] </ref> ). The C ! consequence relation is not pure and not trivializable. An alternative presentation of C ! is given by a weaker-than-classical set of classical deduction proof rules [ Raggio, 1978 ] . <p> However, the FV consequence relation deviates from the C ! consequence relation in that we cannot detach ffi from ff nor :ffi from ff. This is in part due to FV incorporating neither modus ponens nor and elimination. PROPOSITION 35 ( <ref> [ Hunter, 1996b ] </ref> ). The following properties succeed for the FV consequence relation: Reflexivity, Consistency Preservation, Mono-tonicity, and Cut. PROPOSITION 36 ( [ Hunter, 1996b ] ). <p> This is in part due to FV incorporating neither modus ponens nor and elimination. PROPOSITION 35 ( <ref> [ Hunter, 1996b ] </ref> ). The following properties succeed for the FV consequence relation: Reflexivity, Consistency Preservation, Mono-tonicity, and Cut. PROPOSITION 36 ( [ Hunter, 1996b ] ). The following properties fail for the FV consequence relation: And, Supraclassicality, Or, Left Logical Equivalence, Deduction, Conditionalization, and Right Weakening. 28 ANTHONY HUNTER PROPOSITION 37 ( [ Belnap, 1977; Hunter, 1996b ] ). The FV consequence relation is not pure and not trivializable. <p> The following properties succeed for the FV consequence relation: Reflexivity, Consistency Preservation, Mono-tonicity, and Cut. PROPOSITION 36 ( [ Hunter, 1996b ] ). The following properties fail for the FV consequence relation: And, Supraclassicality, Or, Left Logical Equivalence, Deduction, Conditionalization, and Right Weakening. 28 ANTHONY HUNTER PROPOSITION 37 ( <ref> [ Belnap, 1977; Hunter, 1996b ] </ref> ). The FV consequence relation is not pure and not trivializable. PROPOSITION 38 ( [ Hunter, 1996b ] ). <p> The following properties fail for the FV consequence relation: And, Supraclassicality, Or, Left Logical Equivalence, Deduction, Conditionalization, and Right Weakening. 28 ANTHONY HUNTER PROPOSITION 37 ( [ Belnap, 1977; Hunter, 1996b ] ). The FV consequence relation is not pure and not trivializable. PROPOSITION 38 ( <ref> [ Hunter, 1996b ] </ref> ). For 2 -(Q), let C!() denote the set of consequences from by the C ! consequence relation, and let CFV () denote the set of consequences from by the FV consequence relation. <p> For example, via disjunctive syllogism, QC logic gives fi from f:ff; ff _ fig, whereas neither the weakly-negative logic C ! nor the four-valued logic gives fi. PARACONSISTENT LOGICS 31 PROPOSITION 48 ( <ref> [ Hunter, 1996b ] </ref> ). For 2 -(L), let C!() denote the set of C ! consequences from , and let CQ () denote the set of QC consequences from . For this CQ () 6 C!() and C!() 6 CQ () hold. <p> This proposition follows from the classical tautologies from the empty set not being derivable in QC logic. However, if we exclude consideration of these tautologies, then we see that QC logic is stronger than C ! . PROPOSITION 49 ( <ref> [ Hunter, 1996b ] </ref> ). For 2 -(Q), let CFV () denote the set of FV consequences from , and let CQ () denote the set of QC consequences from . <p> This is not the case with any of the weakly-negative, four-valued or quasi-classical logics. However, the following results show that argumentative logics offer useful alternatives to the other paraconsistent logics that we have considered. PROPOSITION 66 ( <ref> [ Hunter, 1996b ] </ref> ). For all x 2 T, F, B, RU, U, 8, R, 9, the consequence relation ` x is not pure and not trivializable. PROPOSITION 67 ( [ Hunter, 1996b ] ). <p> PROPOSITION 66 ( <ref> [ Hunter, 1996b ] </ref> ). For all x 2 T, F, B, RU, U, 8, R, 9, the consequence relation ` x is not pure and not trivializable. PROPOSITION 67 ( [ Hunter, 1996b ] ). For 2 -(L), let C!() denote the set of C ! consequences from , and let Cx () denote the set of consequences from by a ` x consequence relation. For this Cx () 6 C!() and C!() 6 Cx () hold. <p> <ref> [ Hunter, 1996b ] </ref> ). For 2 -(L), let C!() denote the set of C ! consequences from , and let Cx () denote the set of consequences from by a ` x consequence relation. For this Cx () 6 C!() and C!() 6 Cx () hold. PROPOSITION 68 ( [ Hunter, 1996b ] ). For 2 -(Q), let CFV () denote the set of FV consequences from , and let Cx () denote the set of consequences from by a x consequence relation. <p> ffi * * * Monotonicity * * ffi ffi ffi * Cut * ffi ffi * * * Consistency preservation * * * * * * Conditionalization * * * * * * Deduction * ffi ffi ffi ffi ffi Or * ffi ffi * ffi * PROPOSITION 69 ( <ref> [ Hunter, 1996b ] </ref> ). For 2 -(L), let CQ () denote the set of QC consequences from , and let Cx () denote the set of consequences from by a x consequence relation. For this Cx () 6 CQ () and CQ () 6 Cx () hold.
Reference: [ De Kleer, 1986 ] <author> J. De Kleer. </author> <title> An assumption-based TMS. </title> <journal> Artificial Intelligence, </journal> <volume> 28 </volume> <pages> 127-162, </pages> <year> 1986. </year>
Reference: [ Manor and Rescher, 1970 ] <author> R. Manor and N. Rescher. </author> <title> On inferences from inconsistent information. </title> <journal> Theory and Decision, </journal> <volume> 1 </volume> <pages> 179-219, </pages> <year> 1970. </year>
Reference: [ Martins and Shapiro, 1988 ] <author> J. Martins and S. Shapiro. </author> <title> A model of belief revision. </title> <journal> Artificial Intelligence, </journal> <volume> 35 </volume> <pages> 25-79, </pages> <year> 1988. </year>
Reference-contexts: They can be used to give guidance on the inconsistency and facilitate actions that should be taken on the database. Furthermore, they can be used without recourse to consistency checks. Finally, paraconsistent logics can be used as a formal basis for truth maintenance <ref> [ Martins and Shapiro, 1988 ] </ref> . 4 FOUR-VALUED LOGIC The four-valued logic of Belnap [ 1977 ] provides an interesting alternative to the weakly-negative logics in that it has an illuminating and intuitive semantic characterization to complement its proof theory.
Reference: [ Naqvi and Rossi, 1990 ] <author> S. Naqvi and F. Rossi. </author> <title> Reasoning in inconsistent databases. </title> <booktitle> In Logic Programming: Proceedings of the North American Conference. </booktitle> <publisher> MIT Press, </publisher> <year> 1990. </year>
Reference: [ Pinkas and Loui, 1992 ] <author> G. Pinkas and R. Loui. </author> <title> Reasoning from inconsistency: A taxonomy of principles for resolving conflict. </title> <booktitle> In Principles of Knowledge Representation and Reasoning: Proceedings of the Third International Conference. </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1992. </year>
Reference: [ Poole, 1985 ] <author> D. Poole. </author> <title> A logical framework for default reasoning. </title> <journal> Artificial Intelligence, </journal> <volume> 36 </volume> <pages> 27-47, </pages> <year> 1985. </year>
Reference-contexts: Rebutting defeat, as defined here, is a symmetrical relation. One way of changing this is by use of priorities, such as in epistemic entrenchment [ Gardenfors, 1988 ] or as in specificity <ref> [ Poole, 1985 ] </ref> . For a database , an argumentative structure is any set of subsets of An (). The intention behind the definition for an argumentative structure is that different subsets of An () have different degrees of acceptability. <p> Finally, priorities have been used in a number of ways in the management of inconsistency (for example see [ Benferhat, Dubois and Prade, 1995 ] ), and in the closely related problem of non-monotonic reasoning. This includes the use of specificity <ref> [ Poole, 1985 ] </ref> , ordered theory presentations [ Ryan, 1992 ] , and prioritized syntax-based entailment [ Benferhat et al., 1993 ] . Acknowledgements This work has been partly supported by the ESPRIT BRA DRUMS2 project and by the EPSRC VOILA project.
Reference: [ Prakken, 1993 ] <author> H. Prakken. </author> <title> An argumentation framework in default logic. </title> <journal> Annals of Mathematics and Artificial Intelligence, </journal> <volume> 9, </volume> <year> 1993. </year>
Reference: [ Raggio, 1978 ] <author> A. Raggio. </author> <title> A proof-theoretic analysis of da Costa`s C ! . In A. </title> <editor> Arrunda, N. C. da Costa and R. Chuaqui, editors, </editor> <booktitle> Mathematical Logic: Proceedings of the First Brazilian Conference. </booktitle> <publisher> Marcel Defalnes, </publisher> <year> 1978. </year>
Reference-contexts: PROPOSITION 23 ( [ da Costa, 1974; Hunter, 1996b ] ). The C ! consequence relation is not pure and not trivializable. An alternative presentation of C ! is given by a weaker-than-classical set of classical deduction proof rules <ref> [ Raggio, 1978 ] </ref> . PARACONSISTENT LOGICS 21 3.2 A semantic tableau proceedure for C ! We now consider a proof proceedure for C ! by Carnielli et al. [ 1991; 1992 ] . The method is derived from the semantic tableau proof procedure for classical logic.
Reference: [ Ryan, 1992 ] <author> M. Ryan. </author> <title> Representing defaults as sentences with reduced priority. </title> <booktitle> In Principles of Knowledge Representation and Reasoning: Proceedings of the Third International Conference. </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1992. </year>
Reference-contexts: Finally, priorities have been used in a number of ways in the management of inconsistency (for example see [ Benferhat, Dubois and Prade, 1995 ] ), and in the closely related problem of non-monotonic reasoning. This includes the use of specificity [ Poole, 1985 ] , ordered theory presentations <ref> [ Ryan, 1992 ] </ref> , and prioritized syntax-based entailment [ Benferhat et al., 1993 ] . Acknowledgements This work has been partly supported by the ESPRIT BRA DRUMS2 project and by the EPSRC VOILA project.
Reference: [ Simari and Loui, 1992 ] <author> G. Simari and R. Loui. </author> <title> A mathematical treatment of defeasible reasoning and its implementation. </title> <journal> Artificial Intelligence, </journal> <volume> 53 </volume> <pages> 125-157, </pages> <year> 1992. </year>
Reference: [ Vreeswijk, 1991 ] <author> G. Vreeswijk. </author> <title> Abstract argumentation systems. </title> <editor> In M. de Glas and D. Gabbay, editors, </editor> <booktitle> Proceedings of the First World Conference on Fundamentals of Artificial Intelligence. </booktitle> <publisher> Angkor, </publisher> <year> 1991. </year>
References-found: 41

