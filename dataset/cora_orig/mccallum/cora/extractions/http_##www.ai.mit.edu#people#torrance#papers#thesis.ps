URL: http://www.ai.mit.edu/people/torrance/papers/thesis.ps
Refering-URL: http://www.ai.mit.edu/people/torrance/papers/papers.html
Root-URL: 
Title: Natural Communication with Robots  
Author: by Mark C. Torrance Lynn Andrea Stein 
Degree: (1991) Submitted to the Department of Electrical Engineering and Computer Science in partial fulfillment of the requirements for the degree of Master of Science at the  Signature of Author Department of Electrical Engineering and Computer Science  Certified by  Class of 1957 Assistant Professor of Computer Science Thesis Supervisor Accepted by Frederic R. Morgenthaler Chairman, Departmental Committee on Graduate Students  
Note: c Massachusetts Institute of Technology  
Date: February 1994  1994  January 28, 1994  
Affiliation: B.S., Symbolic Systems Stanford University  MASSACHUSETTS INSTITUTE OF TECHNOLOGY  
Abstract-found: 0
Intro-found: 0
Reference: [ Agre and Chapman, 1987 ] <author> P. Agre and D. Chapman. Pengi: </author> <title> An implementation of a theory of activity. </title> <booktitle> In Proceedings of the Sixth National Conference on Artificial Intelligence, </booktitle> <pages> pages 268-272, </pages> <address> Seattle, Washington, July 1987. </address> <publisher> Morgan Kaufmann Publishers, Inc. </publisher>
Reference-contexts: Mark Drummond and Martha Pollack have a simulator called Tileworld which, though different in some details, shares the dynamic and unpredictable characteristics of Sutton's simulator. The video game domains Pengo and Amazon used by Phil Agre and David 109 Chapman in their work on Pengi <ref> [ Agre and Chapman, 1987 ] </ref> and Sonja [ Agre, 1988 ] are another example of a less than realistic simulator. Agre argues that the domain shares many of the problems of situated action found in the physical world, while finessing certain hard problems such as vision.
Reference: [ Agre, 1988 ] <author> Philip E. Agre. </author> <title> The dynamic structure of everyday life. </title> <type> Technical Report 1085, </type> <institution> Massachusetts Institute of Technology Artificial Intelligence Laboratory, </institution> <month> October </month> <year> 1988. </year>
Reference-contexts: The video game domains Pengo and Amazon used by Phil Agre and David 109 Chapman in their work on Pengi [ Agre and Chapman, 1987 ] and Sonja <ref> [ Agre, 1988 ] </ref> are another example of a less than realistic simulator. Agre argues that the domain shares many of the problems of situated action found in the physical world, while finessing certain hard problems such as vision.
Reference: [ Arkin, 1989 ] <author> Ronald C. Arkin. </author> <title> Motor schema-based mobile robot navigation. </title> <journal> The International Journal of Robotics Research, </journal> <volume> 8(4):92 - 112, </volume> <month> August </month> <year> 1989. </year>
Reference-contexts: These include potential field methods, geometric path planning, and point-to-point navigation on a graph with edges defined by reactive procedures and nodes representing landmarks. Potential field methods were first introduced to the robotics community by 89 [ Khatib, 1986 ] , and have been explored further by <ref> [ Arkin, 1989, Koditschek, 1987, Latombe, 1990 ] </ref> . These methods work by representing space as a vector field, where the vector at each point describes which way the robot should go.
Reference: [ Basye, 1992a ] <author> Kenneth Basye. </author> <title> An automata-based approach to robotic map learning. </title> <editor> In Gat et al. </editor> [ <year> 1992 </year> <month> ] , pages 1-4. </month>
Reference-contexts: Localization is a mobile robot task in which the robot must determine its location after being turned on at an unknown position within a known environment. Some authors <ref> [ Basye, 1992a, Brown et al., 1992 ] </ref> solve this localization problem by exploring the environment after seeing the perceptually ambiguous place until the actual place can be discriminated. <p> Kenneth Basye introduces an automata-based approach to map learning that provides a robot with the capability to infer the structure of the part of the world it can explore <ref> [ Basye, 1992a, Basye, 1992b ] </ref> . It does this by treating the world/robot pair as a finite automaton, using reactive strategies to robustly traverse links in the world.
Reference: [ Basye, 1992b ] <author> Kenneth J. Basye. </author> <title> A Framework for Map Construction. </title> <type> PhD thesis, </type> <institution> Brown University Department of Computer Science, </institution> <address> Providence, Rhode Island, </address> <year> 1992. </year>
Reference-contexts: Kenneth Basye introduces an automata-based approach to map learning that provides a robot with the capability to infer the structure of the part of the world it can explore <ref> [ Basye, 1992a, Basye, 1992b ] </ref> . It does this by treating the world/robot pair as a finite automaton, using reactive strategies to robustly traverse links in the world.
Reference: [ Brooks, 1986 ] <author> Rodney A. Brooks. </author> <title> A robust layered control system for a mobile robot. </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> RA-2(1), </volume> <month> March </month> <year> 1986. </year>
Reference-contexts: These processors provide pass-through commands to each of the processors in the style of remote procedure calls, and the 52 Bridge Processor itself implements subsumption architecture <ref> [ Brooks, 1986 ] </ref> by providing for command inhibition. The robot has a set of virtual effector resources that can be turned on or off by the Bridge Processor. These include fast and slow versions of turn left, turn right, translate forward, and translate backward. <p> They begin to explore the effects of position uncertainty in this environment; Latombe explores uncertainty in this problem in more detail [ Latombe et al., 1991 ] . 90 Recently, very successful robot systems have been built which use combina-tions of simple behaviors to achieve robust navigation performance <ref> [ Brooks, 1986, Brooks, 1987, Mataric, 1992 ] </ref> . Further research has explored the use of these systems as the basic level in multilevel control architectures, with other kinds of control at the top.
Reference: [ Brooks, 1987 ] <author> Rodney A. Brooks. </author> <title> Planning is just a way of avoiding figuring out what to do next. </title> <institution> MIT AI Lab Working Paper, </institution> <month> September </month> <year> 1987. </year>
Reference-contexts: They begin to explore the effects of position uncertainty in this environment; Latombe explores uncertainty in this problem in more detail [ Latombe et al., 1991 ] . 90 Recently, very successful robot systems have been built which use combina-tions of simple behaviors to achieve robust navigation performance <ref> [ Brooks, 1986, Brooks, 1987, Mataric, 1992 ] </ref> . Further research has explored the use of these systems as the basic level in multilevel control architectures, with other kinds of control at the top. <p> In some cases simulators are motivated strongly by the physical characteristics of a particular robot and environment. More often, simulators idealize and abstract certain parts of the problem. The use of simulators as a substitute for experiments with physical robots has been roundly criticized <ref> [ Brooks, 1987, Brooks, 1991b ] </ref> . In this chapter, we consider 103 these criticisms, as well as positive reasons for using simulators. We go on to discuss some existing simulators and the ways in which they have been used. <p> Despite their advantages simulators have been criticized for making it easy to solve some difficult problems, making it difficult to solve other easy problems, and for creating false decompositions of robot control problems. We shall consider these criticisms in turn. In <ref> [ Brooks, 1987 ] </ref> , Brooks argues that simulation requires a constant feedback from real experiments to ensure that it is not being abused.
Reference: [ Brooks, 1991a ] <author> Rodney A. Brooks. </author> <title> Artificial life and real robots. </title> <booktitle> In Proceedings of European Conference on Artificial Life, </booktitle> <month> December </month> <year> 1991. </year> <month> 122 </month>
Reference-contexts: He goes on to say that simulators create a temptation to simulate the perceptual system, creating false decompositions which lead researchers to work on problems they claim will be integratable into a general framework. In <ref> [ Brooks, 1991a ] </ref> , Brooks adds that cellular representations of space are problematic in simulations of physical robots. We agree that real robots and environments must be used during the design of simulators which attempt to model them. <p> The user should be able to control the granularity of the simulation in both space and time. Continuous motion simulation should be used wherever possible, as unintended 111 effects from discrete simulation have been documented <ref> [ Brooks, 1991a ] </ref> . Pseudorandom sequences used to generate data for simulated sensors should be repeatable exactly.
Reference: [ Brooks, 1991b ] <author> Rodney A. Brooks. </author> <title> Intelligence without reason. </title> <institution> MIT AI Lab Memo 1293, Massachusetts Institute of Technology Artificial Intelligence Laboratory, Cambridge, Massachusetts, </institution> <month> April </month> <year> 1991. </year>
Reference-contexts: In some cases simulators are motivated strongly by the physical characteristics of a particular robot and environment. More often, simulators idealize and abstract certain parts of the problem. The use of simulators as a substitute for experiments with physical robots has been roundly criticized <ref> [ Brooks, 1987, Brooks, 1991b ] </ref> . In this chapter, we consider 103 these criticisms, as well as positive reasons for using simulators. We go on to discuss some existing simulators and the ways in which they have been used.
Reference: [ Brown et al., 1992 ] <author> Russel G. Brown, L. Paul Chew, and Bruce R. Donald. </author> <title> Map-making and localization for mobile robots using shape metrics. </title> <editor> In Gat et al. </editor> [ <year> 1992 </year> <month> ] , pages 10-17. </month>
Reference-contexts: Localization is a mobile robot task in which the robot must determine its location after being turned on at an unknown position within a known environment. Some authors <ref> [ Basye, 1992a, Brown et al., 1992 ] </ref> solve this localization problem by exploring the environment after seeing the perceptually ambiguous place until the actual place can be discriminated.
Reference: [ Chrisman, 1992 ] <author> Lonnie Chrisman. </author> <title> Reinforcement learning with perceptual aliasing: The perceptual distinctions approach. </title> <booktitle> In Proceedings of the Tenth National Conference on Artificial Intelligence, </booktitle> <pages> pages 183-188, </pages> <address> San Jose, California, July 1992. </address> <publisher> MIT Press. </publisher>
Reference-contexts: While we do not address the localization problem directly, we believe that information provided in natural language by a tutor can in some cases obviate the need to explore for localization. The perceptual aliasing problem occurs when the immediate local perceptual image of two different places appears the same <ref> [ Chrisman, 1992, Whitehead and Ballard, 1991 ] </ref> . One of the things that makes the communicating mobile robot task hard is that there may be perceptual aliasing between places that the tutor wants the robot to discriminate.
Reference: [ Coles, 1969 ] <author> L. Stephen Coles. </author> <title> Talking with a robot in english. </title> <editor> In Donald E. Walker and Lewis M. Norton, editors, </editor> <booktitle> Proceedings of the International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 587-596, </pages> <address> Washington, D.C., </address> <year> 1969. </year>
Reference-contexts: Statements entered in English, such as Use box 2 to block door DPDPCLK from room RCLK, were converted by the language system ENGROB <ref> [ Coles, 1969 ] </ref> to a goal expressed as a first order predicate calculus formula: Blocked (DPDPCLK,RCLK,BOX2). The planner STRIPS was then called to compute a sequence of operators that would achieve the goal.
Reference: [ Connell, 1992a ] <author> Jonathan H. Connell. </author> <title> Extending the navigation metaphor to other domains. </title> <editor> In Gat et al. </editor> [ <year> 1992 </year> <month> ] , pages 29-35. </month>
Reference: [ Connell, 1992b ] <author> Jonathan H. Connell. </author> <title> SSS: A hybrid architecture applied to robot navigation. </title> <booktitle> In Proceedings of the 1992 IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 2719-2724, </pages> <address> Nice, France, </address> <month> May </month> <year> 1992. </year>
Reference-contexts: This thesis presents results obtained with our implementation of this architecture on a physical mobile robot system designed by <ref> [ Connell, 1992b ] </ref> and in simulation. These results reflect experiments performed by the author and by other users. <p> Our system is composed of three main components: natural language I/O, a memory and planning system, and a reactive robot capable of simple corridor following and obstacle avoidance. Our natural language system uses very simple techniques and the reactive robot system was designed and implemented by <ref> [ Connell, 1992b ] </ref> . The main contribution of this 20 flow within the system we describe. 21 work lies in the design of the plan learning and execution system which mediates between these other components. Figure 1-1 shows the general structure of this system. <p> Alternatively, users could just click on the map directly to indicate goals to the robot. Several researchers describe systems that learn maps and draw them in human-recognizable form. Notably, <ref> [ Connell, 1992b ] </ref> demonstrated such a system using the same physical mobile robot and low-level reactive control system that we used in this research. This choice has several advantages. <p> It also describes the robot TJ to the extent needed to understand how it accomplishes obstacle avoidance and corridor following. 4.1 Physical Architecture The mobile robot TJ, illustrated in Figure 4-1, was designed and built by Jonathan Connell at IBM T.J. Watson Research Center <ref> [ Connell, 1992b ] </ref> . The robot is constructed on a Real World Interfaces (RWI) B-12 base, a 12 inch diameter commercial product used frequently in research on mobile robots. The remainder of TJ's hardware sits in separable sections of the same diameter above the base. <p> In this research, we began with a reactive system that was known to be capable of basic obstacle avoidance and corridor following <ref> [ Connell, 1992b ] </ref> . We believe the most important aspect of the system's performance we can report is the juxtaposition of its navigation performance with its communication behavior. <p> His system emphasized procedures that rely very little on odometry, since the odometry on the robot he used was poor. In our research, our success relies a great deal on the good odometry provided by Connell's robot TJ that we used. Jonathan Connell <ref> [ Connell, 1992b ] </ref> developed the SSS architecture and used it to control the robot TJ, the same robot we used in this research. His architecture consists of three layers; servo, subsumption, and symbolic, which work in concert 91 to control the robot.
Reference: [ Dean and Wellman, 1991 ] <author> T. Dean and M. P. Wellman. </author> <title> Planning and Control. </title> <publisher> Mor-gan Kauffman, </publisher> <year> 1991. </year>
Reference-contexts: In these solutions, however, the problem of overcoming local minima becomes more pronounced. [ Koditschek, 1987 ] solves these problems by computing navigation functions, which have a single global minimum, so that he can employ simple gradient descent. However, as noted by <ref> [ Dean and Wellman, 1991 ] </ref> , the cost of generating navigation functions can be high in complex environments. Geometric path planning has been explored extensively for its value as a mathematical problem. Path planning in complicated configuration spaces is now well understood.
Reference: [ Durfee and Montgomery, 1989 ] <author> Edmund H. Durfee and Thomas A. Montgomery. </author> <title> Using MICE to study intelligent dynamic coordination. </title> <booktitle> In Proceedings of the 1989 Distributed AI Workshop, </booktitle> <month> September </month> <year> 1989. </year>
Reference-contexts: The use of these representations in such domains is fine, but some have tried to extend the use of cellular spaces to robot control problems, particularly in the field of Distributed AI (see, for example <ref> [ Durfee and Montgomery, 1989 ] </ref> ). We agree with Brooks that such simulations are unlikely to model physical robots well enough to be useful research tools, and we recommend continuous space simulation. We feel that it is important to credit scientists with the responsibility to use their tools wisely. <p> The perception this research assumes is not as farfetched as a magic recognition box, but it is well beyond the capabilities of current artificial vision systems. MICE is an experimental testbed offered by Durfee and Montgomery for distributed artificial intelligence research <ref> [ Durfee and Montgomery, 1989 ] </ref> . It contains many features which make it attractive for experiments with multiple communicating robots with heterogenous skills. It uses multiple asynchronous processes to simulate each robot, so the simulation of multiple robots may potentially start many processes.
Reference: [ Firby, 1989 ] <author> R. James Firby. </author> <title> Adaptive execution in complex dynamic worlds. </title> <type> Technical Report YALEU/CSD/RR-672, </type> <institution> Yale University, </institution> <year> 1989. </year> <month> 123 </month>
Reference-contexts: Further research has explored the use of these systems as the basic level in multilevel control architectures, with other kinds of control at the top. Jim Firby introduced Reactive Action Packages, or RAPs, as a way to provide conditional sequence control above primitive reactive behaviors <ref> [ Firby, 1989 ] </ref> . RAP execution mediates between a planner which generates RAPs and the reactive behavior capabilities of the controlled system. An important emphasis of this architecture is error detection and recovery.
Reference: [ Gat et al., 1992 ] <author> Erann Gat, Marc Slack, Steve Chien, and Avi Kak, </author> <title> editors. </title> <booktitle> Work--ing Notes: AAAI Fall Symposium Series: Applications of Artificial Intelligence to Real-World Autonomous Mobile Robots, </booktitle> <address> Cambridge, Massachusetts, </address> <month> October </month> <year> 1992. </year> <journal> American Association for Artificial Intelligence. </journal>
Reference-contexts: While there is still valuable work to be done in this area, the consensus of the community is that the problem of point-to-point indoor office navigation is to a great extent solved <ref> [ Gat et al., 1992 ] </ref> . A wide variety of methods have been employed in addressing this problem. These include potential field methods, geometric path planning, and point-to-point navigation on a graph with edges defined by reactive procedures and nodes representing landmarks.
Reference: [ Gat, 1991 ] <author> Erann Gat. </author> <title> Reliable Goal-Directed Reactive Control of Autonomous Mobile Robots. </title> <type> PhD thesis, </type> <institution> Virginia Polytechnic Institute and State University, </institution> <year> 1991. </year>
Reference-contexts: Our work on ROPs, which also represent sequences of action, may be seen as a restriction of RAPs to the office-and-corridor navigation domain. Erann Gat developed the ATLANTIS architecture and used it to control a variety of physical and simulated robots performing navigation tasks <ref> [ Gat, 1991 ] </ref> . This architecture, like ours, implements planning at its highest level and uses a reactive system to control the robot during execution of the plans. <p> Rather, it suggests the character of some of what has been done with simulators in mobile robot research. A.4.1 Realistic Simulators The simulators described below have in common the goal of realistic simulation of particular physical mobile robots and their environment. Erann Gat <ref> [ Gat, 1991 ] </ref> implemented and used a simulator for some experiments 107 as part of his Ph.D. thesis on his ATLANTIS architecture. In this case, the simulator modelled an existing physical robot. <p> The powerful simulator we call for here has its origins in the discussion of better simulators as a future direction Erann Gat's dissertation <ref> [ Gat, 1991 ] </ref> .
Reference: [ Georgeff, 1987 ] <author> Michael P. Georgeff. </author> <title> Planning. </title> <editor> In J.F. Traub, editor, </editor> <booktitle> Annual Review of Computer Science, </booktitle> <volume> Volume 2. </volume> <publisher> Annual Review Inc, </publisher> <year> 1987. </year>
Reference: [ Hendler et al., 1990 ] <author> James Hendler, Austin Tate, and Mark Drummond. </author> <title> AI planning: Systems and techniques. </title> <journal> AI Magazine, </journal> <volume> 11(2) </volume> <pages> 61-77, </pages> <year> 1990. </year>
Reference: [ Horswill, 1993a ] <author> Ian Horswill. Polly: </author> <title> A vision-based artificial agent. </title> <booktitle> In Proceedings of the Eleventh National Conference on Artificial Intelligence, </booktitle> <pages> pages 824-829, </pages> <address> Washington, D.C., July 1993. </address> <publisher> MIT Press. </publisher>
Reference-contexts: As you can see from these examples, gestures are more appropriate for some types of communication than for others. <ref> [ Horswill, 1993a, Horswill, 1993b ] </ref> constructed a tour-giving robot in our lab that uses vision for navigation and gesture recognition. His robot Polly speaks with a voice synthesizer, and invites people to wave your foot around if you would like a tour.
Reference: [ Horswill, 1993b ] <author> Ian Horswill. </author> <title> Specialization of Perceptual Processes. </title> <type> PhD thesis, </type> <institution> Massachusetts Institute of Technology, Cambridge, Massachusetts, </institution> <month> May </month> <year> 1993. </year>
Reference-contexts: As you can see from these examples, gestures are more appropriate for some types of communication than for others. <ref> [ Horswill, 1993a, Horswill, 1993b ] </ref> constructed a tour-giving robot in our lab that uses vision for navigation and gesture recognition. His robot Polly speaks with a voice synthesizer, and invites people to wave your foot around if you would like a tour. <p> The kinds of gesture recognition that would be most useful and effective for communication are those that already have a meaning to people, such as pointing, standing at a place, and holding a hand still to mean stop. These particular gestures may be hard to recognize computationally. <ref> [ Horswill, 1993b ] </ref> also developed a cheap nod detector that could be used on a robot with a camera pointed up. In any case, there are communicative aspects of this problem that do not lend themselves naturally to gestures. <p> intended that our ROPs would be used only for local navigation with a recognized landmark as a starting point, and that distant places would be acquired by first planning globally in the space of recognized landmarks and then using ROPs to go the final distance to the odometrically recognized place. <ref> [ Horswill, 1993b ] </ref> has presented a vision-based system which has this performance, increasing our confidence that this is reasonable to expect. In performing this research, however, we determined that TJ does not have the appropriate sensors for landmark recognition except in the context of good odometric information. <p> Horswill describes a place recognition algorithm that combines vision and odometry <ref> [ Horswill, 1993b ] </ref> . The algorithm matches its current low-resolution image against stored images of all the landmarks the system knows about to find the best match. If its quality is high enough, the module declares it has recognized a landmark.
Reference: [ Huffman and Laird, 1993 ] <author> Scott B. Huffman and John E. Laird. </author> <title> Learning procedures from interactive natural language instructions. </title> <booktitle> In Proceedings of the Tenth International Workshop on Machine Learning, </booktitle> <pages> pages 143-150, </pages> <address> Los Altos, CA, 1993. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Huffman and Laird present Instructo-Soar, a system which learns new procedures from sequences of instruction and also learns how to extend its knowledge of previously known procedures to new situations <ref> [ Huffman et al., 1993, Huffman and Laird, 1993 ] </ref> . Like our system, Instructo-Soar is capable of learning new procedures to accomplish a task, and then to use those procedures in a compound way under the control of a planner.
Reference: [ Huffman et al., 1993 ] <author> Scott B. Huffman, Craig S. Miller, and John E. Laird. </author> <title> Learning from instruction: A knowledge-level capability within a unified theory of cognition. </title> <booktitle> In Proceedings of the Fifteenth Annual Conference of the Cognitive Science Society, </booktitle> <pages> pages 114-119. </pages> <publisher> Lawrence Erlbaum Associates, </publisher> <year> 1993. </year>
Reference-contexts: Huffman and Laird present Instructo-Soar, a system which learns new procedures from sequences of instruction and also learns how to extend its knowledge of previously known procedures to new situations <ref> [ Huffman et al., 1993, Huffman and Laird, 1993 ] </ref> . Like our system, Instructo-Soar is capable of learning new procedures to accomplish a task, and then to use those procedures in a compound way under the control of a planner.
Reference: [ Khatib, 1986 ] <author> Oussama Khatib. </author> <title> Real-time obstacle avoidance for manipulators and mobile robots. </title> <journal> The International Journal of Robotics Research, </journal> <volume> 5 </volume> <pages> 90-99, </pages> <year> 1986. </year> <month> 124 </month>
Reference-contexts: A wide variety of methods have been employed in addressing this problem. These include potential field methods, geometric path planning, and point-to-point navigation on a graph with edges defined by reactive procedures and nodes representing landmarks. Potential field methods were first introduced to the robotics community by 89 <ref> [ Khatib, 1986 ] </ref> , and have been explored further by [ Arkin, 1989, Koditschek, 1987, Latombe, 1990 ] . These methods work by representing space as a vector field, where the vector at each point describes which way the robot should go.
Reference: [ Koditschek, 1987 ] <author> D. Koditschek. </author> <title> Exact robot navigation by means of potential functions: Some topological considerations. </title> <booktitle> In Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 1-6, </pages> <year> 1987. </year>
Reference-contexts: These include potential field methods, geometric path planning, and point-to-point navigation on a graph with edges defined by reactive procedures and nodes representing landmarks. Potential field methods were first introduced to the robotics community by 89 [ Khatib, 1986 ] , and have been explored further by <ref> [ Arkin, 1989, Koditschek, 1987, Latombe, 1990 ] </ref> . These methods work by representing space as a vector field, where the vector at each point describes which way the robot should go. <p> Potential field methods are sensitive to the accurate measurement of the location of the robot and the obstacles around it. More recent methods based on realistic sensors recompute the fields as the robot runs. In these solutions, however, the problem of overcoming local minima becomes more pronounced. <ref> [ Koditschek, 1987 ] </ref> solves these problems by computing navigation functions, which have a single global minimum, so that he can employ simple gradient descent. However, as noted by [ Dean and Wellman, 1991 ] , the cost of generating navigation functions can be high in complex environments.
Reference: [ Kuipers and Byun, 1991 ] <author> Benjamin Kuipers and Yung-Tai Byun. </author> <title> A robot exploration and mapping strategy based on a semantic hierarchy of spatial representations. </title> <booktitle> Robotics and Autonomous Systems, </booktitle> <volume> 8 </volume> <pages> 47-63, </pages> <year> 1991. </year>
Reference-contexts: A variety of approaches have been tried, from recording the path the robot took in detail by hand and on videotape [ Mataric, 1992 ] to relying primarily on simulation <ref> [ Kuipers and Byun, 1991 ] </ref> . In this research, we began with a reactive system that was known to be capable of basic obstacle avoidance and corridor following [ Connell, 1992b ] . <p> Another problem can come if the robot is not always at the same lateral position when it passes through the given landmark. Kuipers and Byun present a strategy that uses hill climbing in perceptual space to define perceptually salient landmarks <ref> [ Kuipers and Byun, 1991 ] </ref> . Thus, a robot might navigate to a place it believes is close to its landmark, and then perform hill climbing to, for example, equalize as much as possible the values of all its distance sensors.
Reference: [ Latombe et al., 1991 ] <author> Jean-Claude Latombe, Anthony Lazanas, and Shashank Shekhar. </author> <title> Robot motion planning with uncertainty in control and sensing. </title> <journal> Artificial Intelligence, </journal> <volume> 52(1) </volume> <pages> 1-47, </pages> <year> 1991. </year>
Reference-contexts: They begin to explore the effects of position uncertainty in this environment; Latombe explores uncertainty in this problem in more detail <ref> [ Latombe et al., 1991 ] </ref> . 90 Recently, very successful robot systems have been built which use combina-tions of simple behaviors to achieve robust navigation performance [ Brooks, 1986, Brooks, 1987, Mataric, 1992 ] .
Reference: [ Latombe, 1990 ] <author> Jean-Claude Latombe. </author> <title> Robot Motion Planning. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, MA, </address> <year> 1990. </year>
Reference-contexts: These include potential field methods, geometric path planning, and point-to-point navigation on a graph with edges defined by reactive procedures and nodes representing landmarks. Potential field methods were first introduced to the robotics community by 89 [ Khatib, 1986 ] , and have been explored further by <ref> [ Arkin, 1989, Koditschek, 1987, Latombe, 1990 ] </ref> . These methods work by representing space as a vector field, where the vector at each point describes which way the robot should go.
Reference: [ Lozano-Perez et al., 1984 ] <author> Tomas Lozano-Perez, Matthew T. Mason, and R. H. Tay-lor. </author> <title> Automatic synthesis of fine-motion strategies for robots. </title> <journal> The International Journal of Robotics Research, </journal> <volume> 3(1) </volume> <pages> 3-24, </pages> <year> 1984. </year>
Reference-contexts: Lozano-Perez, Mason and Taylor introduce the preimage process by which goals are back-chained to find source positions from which the robot can move to them; they apply this process to the problem of peg insertion <ref> [ Lozano-Perez et al., 1984 ] </ref> .
Reference: [ Martin, 1993 ] <author> Charles Martin. </author> <title> The situated language project. </title> <institution> Presented at the Massachusetts Institute of Technology Artificial Intelligence Laboratory Revolving Seminar, </institution> <month> December </month> <year> 1993. </year>
Reference-contexts: Knowledge about the environmental, mental, and discourse context for the utterance is crucial to proper interpretation. New approaches offer hope for a way to break the grip of this traditional architecture. Charles Martin has done work on a natural language system that connects language understanding intimately to action <ref> [ Martin, 1993 ] </ref> . 3.2 Restricted Natural Language This section describes ways in which constraints from the task we have chosen impact the design of the natural language system. The communicating mobile robot task involves a particular kind of natural language problem.
Reference: [ Mataric, 1990 ] <editor> Maja J. Mataric. </editor> <title> A distributed model for mobile robot environment-learning and navigation. </title> <type> Master's thesis, </type> <institution> Massachusetts Institute of Technology Artificial Intelligence Laboratory, </institution> <month> May </month> <year> 1990. </year>
Reference-contexts: Early in the development of this Master's research, we planned to extend the work of Maja Mataric <ref> [ Mataric, 1992, Mataric, 1990 ] </ref> on Toto to handle higher-level linguistically described cognitive features.
Reference: [ Mataric, 1992 ] <editor> Maja J. Mataric. </editor> <title> Integration of representation into goal-driven behavior-based robots. </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> 8(3) </volume> <pages> 304-312, </pages> <month> June </month> <year> 1992. </year> <note> Journal article on Toto. </note>
Reference-contexts: A user presses Learn and then names a place with Important place n. Then later the 32 user presses Go-to and selects a place-button. In fact, <ref> [ Mataric, 1992 ] </ref> presents a mobile robot with just such an interface. This does describe one aspect of the natural language interface we currently have implemented on our robot, with one important exception. Our system allows its users to use terms they think of for these places. <p> It provides data to support the conclusions we draw in Chapter 11. 8.1 Experimental Methodology It is challenging to report the results of mobile robot research. A variety of approaches have been tried, from recording the path the robot took in detail by hand and on videotape <ref> [ Mataric, 1992 ] </ref> to relying primarily on simulation [ Kuipers and Byun, 1991 ] . In this research, we began with a reactive system that was known to be capable of basic obstacle avoidance and corridor following [ Connell, 1992b ] . <p> They begin to explore the effects of position uncertainty in this environment; Latombe explores uncertainty in this problem in more detail [ Latombe et al., 1991 ] . 90 Recently, very successful robot systems have been built which use combina-tions of simple behaviors to achieve robust navigation performance <ref> [ Brooks, 1986, Brooks, 1987, Mataric, 1992 ] </ref> . Further research has explored the use of these systems as the basic level in multilevel control architectures, with other kinds of control at the top. <p> This work was also performed on a simulated robot; work using this strategy on a physical robot has not yet been published. 92 Mataric describes work in which landmarks are recognized by a high level process that observes the behavior of the robot <ref> [ Mataric, 1992 ] </ref> . Certain behavior modules in her robot, Toto, are activated at the onset of corridor recognition and at other repeatable times. These onsets, as marked by the activation of the corresponding behavior modules, serve as landmarks. <p> Lynn Stein has done some work on a program, MetaToto [ Stein, 1991 ] , which models to a very rough approximation the environment of the robot Toto built by Maja Mataric <ref> [ Mataric, 1992 ] </ref> . In her paper, Stein maintains that when coupled with a working robot system, rough simulation can help MetaToto to build an approximate landmark map which can be useful while the robot learns about a new physical topology. <p> Early in the development of this Master's research, we planned to extend the work of Maja Mataric <ref> [ Mataric, 1992, Mataric, 1990 ] </ref> on Toto to handle higher-level linguistically described cognitive features.
Reference: [ Myers and Konolige, 1992a ] <author> Karen L. Myers and Kurt Konolige. </author> <title> Reasoning with analogical representations. </title> <editor> In Bernhard Nebel, Charles Rich, and William Swartout, editors, </editor> <booktitle> Proceedings of the Third International Conference on Principles 125 of Knowledge Representation and Reasoning, </booktitle> <pages> pages 189-200, </pages> <address> Cambridge, Mas--sachusetts, October 1992. </address> <publisher> Morgan Kaufmann Publishers, Inc. </publisher>
Reference-contexts: Myers and Konolige describe a reasoning system that uses a combination of analogical representations and logical formalism <ref> [ Myers and Konolige, 1992a, Myers and Konolige, 1992b ] </ref> . The analogical representation is an annotated map of a robot's environment, which contains implicit in its structure many frame facts about the world that would be expensive to represent in logic.
Reference: [ Myers and Konolige, 1992b ] <editor> Karen L. Myers and Kurt Konolige. Semi-autonomous map-making and navigation. In Gat et al. </editor> [ <year> 1992 </year> <month> ] , pages 129-133. </month>
Reference-contexts: Con-nell has developed an ingenious wall following strategy based on three carefully distance-tuned IR sensors that works very well. The opening discrimination routine works well, again for static obstacles. It does not discriminate closed doors from walls, a performance requirement of some systems <ref> [ Myers and Konolige, 1992b ] </ref> . <p> Myers and Konolige describe a reasoning system that uses a combination of analogical representations and logical formalism <ref> [ Myers and Konolige, 1992a, Myers and Konolige, 1992b ] </ref> . The analogical representation is an annotated map of a robot's environment, which contains implicit in its structure many frame facts about the world that would be expensive to represent in logic.
Reference: [ Nilsson, 1984 ] <author> Nils J. Nilsson. </author> <title> Shakey the robot. </title> <type> Technical Note 323, </type> <institution> SRI International, </institution> <address> Menlo Park, CA, </address> <month> April </month> <year> 1984. </year>
Reference-contexts: A few researchers have developed robot systems that learn in response to interactive natural language instructions; these are also described here. 94 SHAKEY the robot <ref> [ Nilsson, 1984 ] </ref> was perhaps the paradigmatic system to con-nect natural language instruction to action in a mobile robot.
Reference: [ Nilsson, 1991 ] <author> Nils J. Nilsson. Botworld. </author> <type> Personal Communication, </type> <year> 1991. </year>
Reference-contexts: Gat provides a good discussion of the appropriate use of simulators, and follows his own advice and our recommendations in the clarity and quality of his reports on experiments performed with the simulator. Jonas Karlsson and Patrick Teo have implemented a simulator called Botworld <ref> [ Nilsson, 1991 ] </ref> for Nils Nilsson at Stanford University to demonstrate his work on Action Networks and Teleo-Reactive Sequences. This program uses a client-server model, allowing robot control programs to be written in other languages and run on different machines.
Reference: [ Stein, 1991 ] <author> Lynn Andrea Stein. </author> <title> Imagination and situated cognition. </title> <institution> AI Lab Memo 1277, Massachusetts Institute of Technology Artificial Intelligence Laboratory, </institution> <month> February </month> <year> 1991. </year>
Reference-contexts: This approach involves a potentially greater recognition and understanding problem than even linguistic approaches, but there is a promising new idea which may ease this burden. 29 Lynn Stein, in <ref> [ Stein, 1991 ] </ref> , proposes an imagination system in which people inform a robot about its environment in advance by drawing a map for it. <p> This may teach us something about what is needed for a simulator to be truly reusable and general. Lynn Stein has done some work on a program, MetaToto <ref> [ Stein, 1991 ] </ref> , which models to a very rough approximation the environment of the robot Toto built by Maja Mataric [ Mataric, 1992 ] .
Reference: [ Sutton, 1991a ] <author> Richard S. Sutton. Dyna, </author> <title> an integrated architecture for learning, planning, and reacting. </title> <booktitle> In Working Notes of the AAAI Spring Symposium on Integrated Intelligent Architectures, </booktitle> <month> March </month> <year> 1991. </year>
Reference-contexts: In some cases, these simulators abstract parts of the navigation problem by assuming a cellular space. Rich Sutton's work on the DYNA learning architecture <ref> [ Sutton, 1991a, Sutton, 1991b ] </ref> uses a simulation which models some aspects of a dynamically changing environment with spatial locality.
Reference: [ Sutton, 1991b ] <author> Richard S. Sutton. </author> <title> Reinforcement learning architectures for ani-mats. </title> <booktitle> In Proceedings of the International Workshop on the Simulation of Adaptive Behavior: From Animals to Animats, </booktitle> <pages> pages 288-296. </pages> <institution> GTE Laboratories, Incorporated, </institution> <address> Waltham, MA 02254, </address> <publisher> MIT Press, </publisher> <year> 1991. </year>
Reference-contexts: In some cases, these simulators abstract parts of the navigation problem by assuming a cellular space. Rich Sutton's work on the DYNA learning architecture <ref> [ Sutton, 1991a, Sutton, 1991b ] </ref> uses a simulation which models some aspects of a dynamically changing environment with spatial locality.
Reference: [ Terveen, 1993 ] <author> Loren Terveen. </author> <title> Human-computer collaboration: Reconciling theory, synthesizing practice, </title> <booktitle> papers from the 1993 fall symposium series. Technical Report FS-93-05, AAAI, </booktitle> <year> 1993. </year>
Reference-contexts: Natural language systems also offer opportunities to apply discourse theory that has been developed for natural language communication but less so for other modalities <ref> [ Terveen, 1993 ] </ref> . The disadvantages of typed language interaction with the robot stem from the need for a keyboard, which would tend to preclude a free and open interchange while the robot is navigating through the environment.
Reference: [ Torrance, 1992 ] <author> Mark C. Torrance. </author> <title> The case for a realistic mobile robot simulator. </title> <editor> In Gat et al. </editor> [ <year> 1992 </year> <month> ] , pages 181-184. </month>
Reference-contexts: This approach is only effective to the extent that the simulator models the world well enough for the robot to construct the same spatial representation when operating in the simulator as it does in the environment. As we have argued in <ref> [ Torrance, 1992 ] </ref> and in Appendix A, the simulator does not need to model every aspect of the world; just those that are relevant to the distinctions the robot is making. <p> Another user has worked with the system for more than an hour. His experiences are described in Section 8.3. 102 Appendix A Simulation This chapter describes the use of simulators in research on mobile robots. It draws from material previously published in <ref> [ Torrance, 1992 ] </ref> . Simulators used in research on autonomous mobile robots have been criticized for their tendency to change the nature of the problems the robot control architecture has to solve.
Reference: [ Torrance, 1994 ] <author> Mark C. Torrance. </author> <title> Two case studies in active language use. </title> <editor> In Charles Martin, editor, </editor> <booktitle> Working Notes: AAAI Spring Symposium Series: Active NLP: Natural Language Understanding in Integrated Systems, </booktitle> <address> Stanford, California, </address> <month> March </month> <year> 1994. </year> <journal> American Association for Artificial Intelligence. </journal> <volume> Forthcoming. </volume> <pages> 126 </pages>
Reference-contexts: This capability is an important precursor to a robot system that would be able to understand and store full plans without simultaneously executing them. The author has worked on another system that can perform this task with a simulated robot and a natural language interface, described in <ref> [ Torrance, 1994 ] </ref> . 48 Chapter 4 The Reactive Layer This chapter describes the reactive layer of our architecture, the basic navigation strategy of the robot TJ as implemented by Jonathan Connell.
Reference: [ Whitehead and Ballard, 1991 ] <author> Steven D. Whitehead and Dana H. Ballard. </author> <title> Learn--ing to perceive and act by trial and error. </title> <booktitle> In Machine Learning 7, </booktitle> <pages> pages 45-83, </pages> <year> 1991. </year>
Reference-contexts: While we do not address the localization problem directly, we believe that information provided in natural language by a tutor can in some cases obviate the need to explore for localization. The perceptual aliasing problem occurs when the immediate local perceptual image of two different places appears the same <ref> [ Chrisman, 1992, Whitehead and Ballard, 1991 ] </ref> . One of the things that makes the communicating mobile robot task hard is that there may be perceptual aliasing between places that the tutor wants the robot to discriminate.
References-found: 45

