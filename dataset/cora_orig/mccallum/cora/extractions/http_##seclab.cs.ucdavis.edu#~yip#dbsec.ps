URL: http://seclab.cs.ucdavis.edu/~yip/dbsec.ps
Refering-URL: http://seclab.cs.ucdavis.edu/papers.html
Root-URL: http://www.cs.ucdavis.edu
Title: THE DESIGN AND IMPLEMENTATION OF A DATA LEVEL DATABASE INFERENCE DETECTION SYSTEM  
Author: Raymond W. Yip and Karl N. Levitt 
Abstract: Inference is a way to subvert access control mechanisms of database systems. Most existing work on inference detection relies on analyzing functional dependencies in the database schema. This paper is an extension to our earlier effort in developing a data level inference detection system [Yip and Levitt, 1998]. In this paper, we introduce the split query inference rule, make an extension to the overlapping inference rule, and provide an in depth discussion on the applications of the inference rules on union queries. Data level inference detection is inevitably expensive. We have developed a prototype of the inference detection system to evaluate its performance. The result shows that the system performs better with larger number of attributes and records in the database, and smaller number of projected attributes and return tuples of the queries. Therefore, the inference detection system could be practical when users retrieve a small amount of data compare to the size of the database.
Abstract-found: 1
Intro-found: 1
Reference: [Binns, 1992] <author> Binns, L. J. </author> <year> (1992). </year> <title> Inference through secondary path analysis. </title> <booktitle> In Proc. 6th IFIP WG11.3 Workshop on Database Security, </booktitle> <pages> pages 195-209. </pages>
Reference-contexts: In multilevel secure database systems, early work on inference detection employs a graph to represent the functional dependencies among attributes in the database schema. An inference occurs if there exists two paths between two attributes (or composite attributes), and the two paths are labeled at different classification levels <ref> [Hinke, 1988, Binns, 1992, Qian et al., 1993] </ref>. The detected inference channel is eliminated by redesigning the database schema [Lunt, 1989] or upgrading the paths that lead to the inference [Stickel, 1994].
Reference: [Chang and Moskowitz, 1998] <author> Chang, L. and Moskowitz, I. S. </author> <year> (1998). </year> <title> Bayesian methods applied to the database inference problem. </title> <booktitle> In Proc. 12th IFIP WG11.3 Workshop on Database Security. </booktitle>
Reference-contexts: Chang et al. use Bayesian estimation and network techniques to estimate missing data in the database <ref> [Chang and Moskowitz, 1998] </ref>. In this paper, we describe our effort in developing a data level inference detection system. We have identified six inference rules that users can use to infer data: split query, subsume, unique characteristic, overlapping, complementary, and functional dependence inference rules.
Reference: [Delugach and Hinke, 1996] <author> Delugach, H. S. and Hinke, T. H. </author> <year> (1996). </year> <title> Wizard: A database inference analysis and detection system. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 8(1) </volume> <pages> 56-66. </pages>
Reference-contexts: The detected inference channel is eliminated by redesigning the database schema [Lunt, 1989] or upgrading the paths that lead to the inference [Stickel, 1994]. There is also work on incorporating external knowledge in detecting inference <ref> [Thuraisingham, 1991, Hinke et al., 1993, Delugach and Hinke, 1996] </ref>. Detecting inference at the schema level is efficient as the detection is performed at the database design time. However, it has two drawbacks. First, the database schema does not capture all dependencies that occur in an instance of the database.
Reference: [Hale and Shenoi, 1997] <author> Hale, J. and Shenoi, S. </author> <year> (1997). </year> <title> Catalytic inference analysis: Detection inference threats due to knowledge discovery. </title> <booktitle> In Proceedings of the 1997 IEEE Symposium on Research in Security and Privacy, </booktitle> <pages> pages 188-199. </pages>
Reference-contexts: Hinke et al. use cardinality associations to discover potential inference channels [Hinke et al., 1996]. Hale et al. incorporate imprecise and fuzzy database relations into their inference channel detection system <ref> [Hale and Shenoi, 1997] </ref>. Marks develops an inference detection system that prevents all possible inference by monitoring user queries with select clauses of the form "A i = a i ", where a i is a constant [Marks, 1996].
Reference: [Hinke, 1988] <author> Hinke, T. H. </author> <year> (1988). </year> <title> Inference aggregation detection in database management systems. </title> <booktitle> In Proceedings of the 1988 IEEE Symposium on Security and Privacy, </booktitle> <pages> pages 96-106. </pages>
Reference-contexts: In multilevel secure database systems, early work on inference detection employs a graph to represent the functional dependencies among attributes in the database schema. An inference occurs if there exists two paths between two attributes (or composite attributes), and the two paths are labeled at different classification levels <ref> [Hinke, 1988, Binns, 1992, Qian et al., 1993] </ref>. The detected inference channel is eliminated by redesigning the database schema [Lunt, 1989] or upgrading the paths that lead to the inference [Stickel, 1994].
Reference: [Hinke et al., 1993] <author> Hinke, T. H., Delugach, H. S., and Chandrasekhar, A. </author> <year> (1993). </year> <title> Layered knowledge chunks for database inference. </title> <booktitle> In Proc. 7th IFIP WG11.3 Workshop on Database Security, </booktitle> <pages> pages 275-295. </pages>
Reference-contexts: The detected inference channel is eliminated by redesigning the database schema [Lunt, 1989] or upgrading the paths that lead to the inference [Stickel, 1994]. There is also work on incorporating external knowledge in detecting inference <ref> [Thuraisingham, 1991, Hinke et al., 1993, Delugach and Hinke, 1996] </ref>. Detecting inference at the schema level is efficient as the detection is performed at the database design time. However, it has two drawbacks. First, the database schema does not capture all dependencies that occur in an instance of the database.
Reference: [Hinke et al., 1996] <author> Hinke, T. H., Delugach, H. S., and Wolf, R. </author> <year> (1996). </year> <title> A framework for inference-directed data mining. </title> <booktitle> In Proc. 10th IFIP WG11.3 Workshop on Database Security, </booktitle> <pages> pages 229-239. </pages>
Reference-contexts: More recently, researchers look at the instance of the database to generate a richer set of functional dependencies for detecting inference. Hinke et al. use cardinality associations to discover potential inference channels <ref> [Hinke et al., 1996] </ref>. Hale et al. incorporate imprecise and fuzzy database relations into their inference channel detection system [Hale and Shenoi, 1997].
Reference: [Lunt, 1989] <author> Lunt, T. F. </author> <year> (1989). </year> <title> Aggregation and inference: Facts and fallacies. </title> <booktitle> In Proceedings of the 1989 IEEE Symposium on Security and Privacy, </booktitle> <pages> pages 102-109. </pages>
Reference-contexts: An inference occurs if there exists two paths between two attributes (or composite attributes), and the two paths are labeled at different classification levels [Hinke, 1988, Binns, 1992, Qian et al., 1993]. The detected inference channel is eliminated by redesigning the database schema <ref> [Lunt, 1989] </ref> or upgrading the paths that lead to the inference [Stickel, 1994]. There is also work on incorporating external knowledge in detecting inference [Thuraisingham, 1991, Hinke et al., 1993, Delugach and Hinke, 1996].
Reference: [Marks, 1996] <author> Marks, D. G. </author> <year> (1996). </year> <title> Inference in mls database systems. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 8(1) </volume> <pages> 46-55. </pages>
Reference-contexts: Marks develops an inference detection system that prevents all possible inference by monitoring user queries with select clauses of the form "A i = a i ", where a i is a constant <ref> [Marks, 1996] </ref>. Chang et al. use Bayesian estimation and network techniques to estimate missing data in the database [Chang and Moskowitz, 1998]. In this paper, we describe our effort in developing a data level inference detection system. <p> In Section 6, we present our experimental results. In Section 7, we give a summary of the paper. 2 NOTATIONS We consider a relational database that contains a single table. Multiple tables can be modeled as a universal relation as discussed in <ref> [Marks, 1996] </ref>. t [A i ] denotes the attribute value of the tuple t over the attribute A i .
Reference: [Qian et al., 1993] <author> Qian, X., Stickel, M. E., Karp, P. D., Lunt, T. F., and Gar-vey, T. D. </author> <year> (1993). </year> <title> Detection and elimination of inference channels in multilevel relational database systems. </title> <booktitle> In Proceedings of the 1993 IEEE Symposium on Research in Security and Privacy, </booktitle> <pages> pages 196-205. </pages>
Reference-contexts: In multilevel secure database systems, early work on inference detection employs a graph to represent the functional dependencies among attributes in the database schema. An inference occurs if there exists two paths between two attributes (or composite attributes), and the two paths are labeled at different classification levels <ref> [Hinke, 1988, Binns, 1992, Qian et al., 1993] </ref>. The detected inference channel is eliminated by redesigning the database schema [Lunt, 1989] or upgrading the paths that lead to the inference [Stickel, 1994].
Reference: [Stickel, 1994] <author> Stickel, M. E. </author> <year> (1994). </year> <title> Elimination of inference channels by optimal upgrading. </title> <booktitle> In Proceedings of the 1994 IEEE Symposium on Research in Security and Privacy, </booktitle> <pages> pages 168-174. </pages>
Reference-contexts: The detected inference channel is eliminated by redesigning the database schema [Lunt, 1989] or upgrading the paths that lead to the inference <ref> [Stickel, 1994] </ref>. There is also work on incorporating external knowledge in detecting inference [Thuraisingham, 1991, Hinke et al., 1993, Delugach and Hinke, 1996]. Detecting inference at the schema level is efficient as the detection is performed at the database design time. However, it has two drawbacks.
Reference: [Thuraisingham, 1991] <author> Thuraisingham, B. </author> <year> (1991). </year> <title> The use of conceptual structures for handling the inference problem. </title> <booktitle> In Proc. 5th IFIP WG11.3 Workshop on Database Security, </booktitle> <pages> pages 333-362. </pages>
Reference-contexts: The detected inference channel is eliminated by redesigning the database schema [Lunt, 1989] or upgrading the paths that lead to the inference [Stickel, 1994]. There is also work on incorporating external knowledge in detecting inference <ref> [Thuraisingham, 1991, Hinke et al., 1993, Delugach and Hinke, 1996] </ref>. Detecting inference at the schema level is efficient as the detection is performed at the database design time. However, it has two drawbacks. First, the database schema does not capture all dependencies that occur in an instance of the database.
Reference: [Yip and Levitt, 1998] <author> Yip, R. and Levitt, K. </author> <year> (1998). </year> <title> Data level inference detection in database systems. </title> <booktitle> In Proc. 11th IEEE Computer Security Foundations Workshop, </booktitle> <month> pages 179-189. </month> <title> Tuples of Queries. Criteria of Queries. in the Database. </title> <type> Issued. </type>
Reference-contexts: However, data level inference detection is inevitably expensive, as it needs to keep track of all user queries and their return tuples. We have developed a prototype of the data level inference detection system to evaluate its performance. An earlier version of this paper is reported in <ref> [Yip and Levitt, 1998] </ref>. In this paper, we introduce the split query inference rule, make an extension to the overlapping inference rule, provide a detail description on the applications of the inference rules on union queries, and present a more complete experimental results. <p> Because of lack of space, we omit the description of the unique characteristic and functional dependency inference rules. We also omit the use of examples to illustrate the inference rules. Interested readers can find them in <ref> [Yip and Levitt, 1998] </ref>. This paper is organized as follows. In Section 2, we introduce the notations used in this paper. In Section 3, we present the inference rules. In Section 4, we discuss the applications of the inference rules on union queries.
References-found: 13

