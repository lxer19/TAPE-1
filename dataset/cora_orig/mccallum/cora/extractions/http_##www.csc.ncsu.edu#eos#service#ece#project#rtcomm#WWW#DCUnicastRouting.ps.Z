URL: http://www.csc.ncsu.edu/eos/service/ece/project/rtcomm/WWW/DCUnicastRouting.ps.Z
Refering-URL: http://www.csc.ncsu.edu/eos/service/ece/project/rtcomm/WWW/routing.html
Root-URL: http://www.csc.ncsu.edu
Email: hfsalama@eos.ncsu.edu  reeves@eos.ncsu.edu  candice@eos.ncsu.edu  
Phone: Phone: (919) 515-5348 Fax: (919) 515-2285  Phone: (919) 515-2044 Fax: (919) 515-7896  Phone: (919) 515-5148 Fax: (919) 515-2285  
Title: A Distributed Algorithm for Delay-Constrained Unicast Routing  
Author: H.F. Salama D.S. Reeves Y. Viniotis 
Keyword: Routing, Delay Constraints, Quality of Service, Distributed Algorithms  
Note: This work was supported in part by the Center for Advanced Computing and Communication at North Carolina State University, and by AFOSR grants F49620-92-J-0441DEF and F49620-96-1-0061. This author is responsible for all correspondence.  
Address: Box 7911, Raleigh, NC 27695  Box 8206, Raleigh, NC 27695  Box 7911, Raleigh, NC 27695  
Affiliation: ECE Department North Carolina State University  CSC ECE Departments North Carolina State University  ECE Department North Carolina State University  
Abstract: We define the problem of unicast routing subject to delay constraints in point-to-point connection-oriented networks as a delay-constrained least-cost path problem. This problem is NP-complete, and therefore we propose a simple, efficient, distributed heuristic solution: the delay-constrained unicast routing (DCUR) algorithm. DCUR requires limited information about the network state to be kept at each node. This information is stored in a cost vector and a delay vector which resemble the distance vectors of some existing routing protocols. We prove the correctness of DCUR by showing that it is always capable of constructing a loop-free delay-constrained path within finite time, if such a path exists. The number of computations DCUR performs at each node participating in the path construction process is fixed, irrespective of the size of the network. The message complexity of DCUR is O(jV j 3 ) messages in the worst case, where jV j is the number of nodes in the network. However, simulation results show that, on the average, much fewer messages are required. Therefore, DCUR scales well to large networks. We also use simulation to compare DCUR to the optimal delay-constrained least-cost path algorithm, and to the least-delay path algorithm. Our results show that DCUR yields satisfactory performance with respect to both path cost and path delay. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. Hedrick, </author> <title> Routing Information Protocol. Internet RFC 1058, </title> <month> June </month> <year> 1988. </year>
Reference-contexts: Routing problems can be divided into unicast (point-to-point) problems and multicast (point-to-multipoint or multipoint-to-multipoint) problems. In this paper, we only consider the unicast routing problem. Unicast routing protocols can be classified into two categories: distance-vector protocols, e.g., the routing information protocol (RIP) <ref> [1, 2] </ref>, and link-state protocols, e.g., the open shortest path first protocol (OSPF) [3]. Distance-vector routing protocols are based on a distributed version of Bellman-Ford shortest path (SP) algorithm [4]. <p> DCUR requires only a limited amount of information at each node. This information is stored in a delay vector and a cost vector that are similar to the distance vectors of some existing routing protocols <ref> [1] </ref>. The basic idea of DCUR is that when a node receives a request to construct a delay-constrained path to a given destination, that node is given the choice between two alternatives only. <p> The cost vectors and delay vectors are similar to the distance vectors of some existing routing protocols <ref> [1] </ref>. Distance-vector based protocols discuss in detail how to update the distance vectors in response to topology changes, and how 1 In [11] the same problem is called the shortest constrained-weight path problem. 4 to prevent instability.
Reference: [2] <author> G. Malkin, </author> <note> RIP Version 2, Carrying Additional Information. Internet RFC 1723, </note> <month> November </month> <year> 1994. </year>
Reference-contexts: Routing problems can be divided into unicast (point-to-point) problems and multicast (point-to-multipoint or multipoint-to-multipoint) problems. In this paper, we only consider the unicast routing problem. Unicast routing protocols can be classified into two categories: distance-vector protocols, e.g., the routing information protocol (RIP) <ref> [1, 2] </ref>, and link-state protocols, e.g., the open shortest path first protocol (OSPF) [3]. Distance-vector routing protocols are based on a distributed version of Bellman-Ford shortest path (SP) algorithm [4].
Reference: [3] <author> J. Moy, </author> <note> OSPF Version 2. Internet RFC 1583, </note> <month> March </month> <year> 1994. </year>
Reference-contexts: In this paper, we only consider the unicast routing problem. Unicast routing protocols can be classified into two categories: distance-vector protocols, e.g., the routing information protocol (RIP) [1, 2], and link-state protocols, e.g., the open shortest path first protocol (OSPF) <ref> [3] </ref>. Distance-vector routing protocols are based on a distributed version of Bellman-Ford shortest path (SP) algorithm [4]. Considering the message complexity, distance-vector routing protocols scale well to large network sizes, because each node (router) sends periodical topology update messages only to its direct neighbors.
Reference: [4] <author> D. Bertsekas and R. Gallager, </author> <title> Data Networks. </title> <booktitle> Prentice-Hall, second ed., </booktitle> <year> 1992. </year>
Reference-contexts: Unicast routing protocols can be classified into two categories: distance-vector protocols, e.g., the routing information protocol (RIP) [1, 2], and link-state protocols, e.g., the open shortest path first protocol (OSPF) [3]. Distance-vector routing protocols are based on a distributed version of Bellman-Ford shortest path (SP) algorithm <ref> [4] </ref>. Considering the message complexity, distance-vector routing protocols scale well to large network sizes, because each node (router) sends periodical topology update messages only to its direct neighbors. No flooding or broadcasting operations are involved. <p> In link-state routing protocols, on the other hand, each node maintains complete information about the network topology, and uses this information to compute the shortest path to a given destination centrally using Dijkstra's algorithm <ref> [4] </ref>. Link-state protocols have limited scalability, because flooding is used to update the nodes' topology information. They do not suffer from looping problems, however, because of their centralized nature.
Reference: [5] <author> J. Garcia-Luna-Aceves and J. Behrens, </author> <title> Distributed, Scalable Routing Based on Vectors of Link States, </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 13, </volume> <pages> pp. 1383-1395, </pages> <month> October </month> <year> 1995. </year>
Reference-contexts: Link-state protocols have limited scalability, because flooding is used to update the nodes' topology information. They do not suffer from looping problems, however, because of their centralized nature. Recently, Garcia-Luna-Aceves and Behrens <ref> [5] </ref> proposed a distributed protocol, based on link vectors, that avoids looping problems and scales well to large networks. Both Bellman-Ford and Dijkstra SP algorithms are exact and run in polynomial time.
Reference: [6] <author> R. Simha and B. Narahari, </author> <title> Single Path Routing with Delay Considerations, </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> vol. 24, </volume> <pages> pp. 405-419, </pages> <year> 1992. </year>
Reference-contexts: Many variations of the SP problem have been studied over the years. For example, Simha and Narahari <ref> [6] </ref> studied the case where queueing delay is the dominant component of a link's delay, and Aida et. al [7] proposed an optimal SP algorithm that takes into account both the mean and the variance of the link delays.
Reference: [7] <author> M. Aida, I. Nakamura, and T. Kubo, </author> <title> Optimal Routing in Communication Networks with Delay Variations, </title> <booktitle> in Proceedings of IEEE INFOCOM '92, </booktitle> <pages> pp. 153-159, </pages> <year> 1992. </year>
Reference-contexts: Many variations of the SP problem have been studied over the years. For example, Simha and Narahari [6] studied the case where queueing delay is the dominant component of a link's delay, and Aida et. al <ref> [7] </ref> proposed an optimal SP algorithm that takes into account both the mean and the variance of the link delays. Rampal and Reeves [8] 1 investigated the interaction between routing and call admission control for multimedia traffic. Plotkin [9] proposed a strategy that unifies the routing and call admission decisions.
Reference: [8] <author> S. Rampal and D. Reeves, </author> <title> An Evaluation of Routing and Admission Control Algorithms for Multimedia Traffic, </title> <journal> Computer Communications, </journal> <volume> vol. 18, </volume> <pages> pp. 755-768, </pages> <month> October </month> <year> 1995. </year>
Reference-contexts: For example, Simha and Narahari [6] studied the case where queueing delay is the dominant component of a link's delay, and Aida et. al [7] proposed an optimal SP algorithm that takes into account both the mean and the variance of the link delays. Rampal and Reeves <ref> [8] </ref> 1 investigated the interaction between routing and call admission control for multimedia traffic. Plotkin [9] proposed a strategy that unifies the routing and call admission decisions.
Reference: [9] <author> S. Plotkin, </author> <title> Competitive Routing of Virtual Circuits in ATM Networks, </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 13, </volume> <pages> pp. 1128-1136, </pages> <month> August </month> <year> 1995. </year>
Reference-contexts: Rampal and Reeves [8] 1 investigated the interaction between routing and call admission control for multimedia traffic. Plotkin <ref> [9] </ref> proposed a strategy that unifies the routing and call admission decisions. Chen and Liu [10] showed that the problem of routing a multimedia connection subject to a cell loss constraint is NP-complete and proposed heuristic solutions for that problem.
Reference: [10] <author> W.-T. Chen and U.-J. Liu, </author> <title> Routing Problem with Performance Requirement Translation for Multimedia Communications in an ATM Wide-Area Network, </title> <booktitle> in Proceedings of IEEE ICC '94, </booktitle> <pages> pp. 1490-1494, </pages> <year> 1994. </year>
Reference-contexts: Rampal and Reeves [8] 1 investigated the interaction between routing and call admission control for multimedia traffic. Plotkin [9] proposed a strategy that unifies the routing and call admission decisions. Chen and Liu <ref> [10] </ref> showed that the problem of routing a multimedia connection subject to a cell loss constraint is NP-complete and proposed heuristic solutions for that problem. We study the problem of unicast routing of real-time traffic with end-to-end delay requirements (delay constraints) in connection-oriented networks.
Reference: [11] <author> M. Garey and D. Johnson, </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness. </title> <address> New York: </address> <publisher> W.H. Freeman and Co., </publisher> <year> 1979. </year>
Reference-contexts: We study the problem of unicast routing of real-time traffic with end-to-end delay requirements (delay constraints) in connection-oriented networks. We formulate the problem as a delay-constrained LC (DCLC) path problem. This problem has been shown to be NP-complete <ref> [11] </ref>. The only prior work on this problem was reported by Widyono [12]. He proposed an optimal centralized delay-constrained algorithm to solve the DCLC problem. His algorithm, called the constrained Bellman-Ford (CBF) algorithm, performs a breadth-first search to find the DCLC path. <p> Therefore P 0 (s; d) P (s; d). If P i 2 P (s; d) then P i 2 P 0 (s; d) if and only if Delay (P i ) D: (4) The DCLC problem is NP-complete <ref> [11] </ref> 1 . It is also NP-complete in the case of undirected networks. <p> The cost vectors and delay vectors are similar to the distance vectors of some existing routing protocols [1]. Distance-vector based protocols discuss in detail how to update the distance vectors in response to topology changes, and how 1 In <ref> [11] </ref> the same problem is called the shortest constrained-weight path problem. 4 to prevent instability. These procedures are simple and require the contents of the distance vector at each node to be periodically transmitted to direct neighbors of that node only. They do not involve any flooding or broadcasting operations.
Reference: [12] <author> R. Widyono, </author> <title> The Design and Evaluation of Routing Algorithms for Real-Time Channels, </title> <type> Tech. Rep. </type> <institution> ICSI TR-94-024, University of California at Berkeley, International Computer Science Institute, </institution> <month> June </month> <year> 1994. </year>
Reference-contexts: We formulate the problem as a delay-constrained LC (DCLC) path problem. This problem has been shown to be NP-complete [11]. The only prior work on this problem was reported by Widyono <ref> [12] </ref>. He proposed an optimal centralized delay-constrained algorithm to solve the DCLC problem. His algorithm, called the constrained Bellman-Ford (CBF) algorithm, performs a breadth-first search to find the DCLC path. Unfortunately, due to its optimality, CBF's worst case running times grow exponentially with the size of the network.
Reference: [13] <author> H. Salama, D. Reeves, Y. Viniotis, and T.-L. Sheu, </author> <title> Evaluation of Multicast Routing Algorithms for Real-Time Communication on High-Speed Networks, </title> <booktitle> in Proceedings of the Sixth IFIP Conference on High Performance Networking (HPN '95), </booktitle> <pages> pp. 27-42, </pages> <publisher> Chapman and Hall, </publisher> <month> September </month> <year> 1995. </year>
Reference-contexts: Unfortunately, due to its optimality, CBF's worst case running times grow exponentially with the size of the network. Delay-constrained unicast routing is a special case of the delay-constrained multicast routing problem which has received a lot of attention in recent years <ref> [13] </ref>. Thus, delay-constrained multicast routing heuristics can be used to solve the DCLC problem. However, these delay-constrained multicast heuristics require complete information about the network topology to be available at every node, and their running times grow at fast rates with the network size [13]. <p> lot of attention in recent years <ref> [13] </ref>. Thus, delay-constrained multicast routing heuristics can be used to solve the DCLC problem. However, these delay-constrained multicast heuristics require complete information about the network topology to be available at every node, and their running times grow at fast rates with the network size [13]. Therefore, neither CBF nor the delay-constrained multicast routing heuristics can be applied to large networks. We propose a distributed heuristic to solve the DCLC problem: the delay-constrained unicast routing (DCUR) algorithm.
Reference: [14] <author> S. Baase, </author> <title> Computer Algorithms, Introduction to Design and Analysis. </title> <publisher> Addison-Wesley Publishing Company, </publisher> <editor> 2nd ed., </editor> <year> 1988. </year>
Reference-contexts: A loop results each time e is added. The back link e is reachable via (Y + Z) alternate paths in the worst case. This happens when the (Y + Z) descendent links and cross links are upstream (closer to 5 See, for example <ref> [14] </ref>, for definitions of the terms: back link, descendent link, and cross link. 14 the source node) from the back link e.
Reference: [15] <author> B. Waxman, </author> <title> Routing of Multipoint Connections, </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 6, </volume> <pages> pp. 1617-1622, </pages> <month> December </month> <year> 1988. </year>
Reference-contexts: The positions of the nodes were fixed in a rectangle of size 3000 fl 2400 Km 2 , roughly the area of the USA. A random generator (based on Waxman's generator <ref> [15] </ref> with some modifications) was used to create links interconnecting the 15 nodes. The output of this random generator is always a connected network in which each node's degree is at least 2.
References-found: 15

