URL: http://www.cs.umn.edu/Users/dept/users/du/papers/flips.ps
Refering-URL: http://www.cs.umn.edu/Users/dept/users/du/papers/
Root-URL: http://www.cs.umn.edu
Title: Doing FLIPS: FLexible Interactive Presentation Synchronization  
Author: James Schnepf, Joseph A. Konstan, David Du 
Note: Submitted to Journal of Selected Areas of Communications  
Address: Minneapolis, MN  
Affiliation: Distributed Multimedia Center Department of Computer Science University of Minnesota  
Abstract: Multimedia presentation technology has enormous potential for a myriad of applications including academic classrooms, industrial training, and business presentations. As presentation technology advances, it is possible to incorporate a wider range of media including variable duration media such as simulations and animations. At the same time, users are able to take more control over presentations by controlling the rate and selection of media being played. To make full use of these advances, multimedia systems must support flexible presentations that incorporate many variations in the way they are played. This paper identifies three requirements for flexible presentations and derives four requirements for synchronization of flexible presentations. The paper presents FLexible Interactive Presentation Synchronization (FLIPS), a model for specifying coarse synchronization for flexible presentations. FLIPS supports a wide range of temporal synchronization specifications. It also provides algorithms for attaining a consistent and coherent presentation state in response to user interaction (e.g., skipping to a different slide or selection) and other state-changing events. Applications of the FLIPS model are discussed. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> James Schnepf, Vahid Mashayekhi, John Riedl, and David Du. </author> <title> Closing the gap in distance learning: Computer-supported, </title> <journal> participative, media-rich education. ED-TECH Review, </journal> <note> 1994. to appear. </note>
Reference-contexts: The use of such presentations in an academic environment is particularly promising as instructors take advantage of the technology to involve their students in interactive learning off campus as well as on. Distance learning brings the university to students who cannot attend a traditional campus <ref> [1] </ref>. "Anywhere, anytime education" requires course presentations that are captured and stored to allow students access to the university according to their own schedules. As important, it allows students control over the presentations. In particular, they should be able to pause and skip forward or backwards.
Reference: [2] <author> L.A. Rowe and B.C. Smith. </author> <title> A continuous media player. </title> <booktitle> In Proceedings Third International Workshop on Network and Operating Systems Support for Digital Audio and Video, </booktitle> <pages> pages 237-249, </pages> <month> November </month> <year> 1992. </year>
Reference-contexts: For fine-grain synchronization, tight time tolerances, exact mapping of media, and constant enforcement is required. One popular solution for fine-grain synchronization is to tie media streams to a timeline and allow them to synchronize to each other by connecting to a common clock <ref> [2] </ref>. For coarse-grain synchronization, time tolerances are not as critical and the mappings only occur at selected points. 2 The three characteristics of a flexible presentation require particular synchronization support. <p> The specification, modeling and enforcement of temporal synchronization has been the subject of much research. Much of this research has addressed static presentations with fixed objects of known duration <ref> [3, 4, 2, 5, 6, 7] </ref>. In many schemes, if two sets of objects are specified to be displayed in parallel, their durations not only must be known, but must be exactly equal [8, 3, 4, 7]. <p> It may be difficult or impossible to accurately schedule such media objects in advance. Blakowski [10] classifies synchronization models into 3 principal approaches: Hierarchical [8, 7, 3, 4, 5, 6], timeline based <ref> [11, 2, 12] </ref> and reference points [10, 13, 14, 15, 16, 17]. Blakowski states that hierarchical structures do not support adequate abstraction and cannot represent all synchronization conditions. Timelines do not support objects without a 3 deterministic time of presentation.
Reference: [3] <author> T.D.C. Little and A. Ghafoor. </author> <title> Spatial-temporal composition of distributed multimedia objects for value-added networks. </title> <booktitle> IEEE Computer, </booktitle> <month> Oct </month> <year> 1991. </year>
Reference-contexts: The specification, modeling and enforcement of temporal synchronization has been the subject of much research. Much of this research has addressed static presentations with fixed objects of known duration <ref> [3, 4, 2, 5, 6, 7] </ref>. In many schemes, if two sets of objects are specified to be displayed in parallel, their durations not only must be known, but must be exactly equal [8, 3, 4, 7]. <p> Much of this research has addressed static presentations with fixed objects of known duration [3, 4, 2, 5, 6, 7]. In many schemes, if two sets of objects are specified to be displayed in parallel, their durations not only must be known, but must be exactly equal <ref> [8, 3, 4, 7] </ref>. Li, et al. [9] suggest that this expectation is unreasonable since the duration information may not be known at the time of specification. <p> Including computer-generated media such as visualizations and simulations forces us to consider media that may have unknown or even variable duration. It may be difficult or impossible to accurately schedule such media objects in advance. Blakowski [10] classifies synchronization models into 3 principal approaches: Hierarchical <ref> [8, 7, 3, 4, 5, 6] </ref>, timeline based [11, 2, 12] and reference points [10, 13, 14, 15, 16, 17]. Blakowski states that hierarchical structures do not support adequate abstraction and cannot represent all synchronization conditions. Timelines do not support objects without a 3 deterministic time of presentation.
Reference: [4] <author> T.D.C. Little and A. Ghafoor. </author> <title> Synchronization and storage models for multimedia objects. </title> <journal> IEEE Journal on Selected Areas of Communications, </journal> <month> April </month> <year> 1990. </year>
Reference-contexts: The specification, modeling and enforcement of temporal synchronization has been the subject of much research. Much of this research has addressed static presentations with fixed objects of known duration <ref> [3, 4, 2, 5, 6, 7] </ref>. In many schemes, if two sets of objects are specified to be displayed in parallel, their durations not only must be known, but must be exactly equal [8, 3, 4, 7]. <p> Much of this research has addressed static presentations with fixed objects of known duration [3, 4, 2, 5, 6, 7]. In many schemes, if two sets of objects are specified to be displayed in parallel, their durations not only must be known, but must be exactly equal <ref> [8, 3, 4, 7] </ref>. Li, et al. [9] suggest that this expectation is unreasonable since the duration information may not be known at the time of specification. <p> Including computer-generated media such as visualizations and simulations forces us to consider media that may have unknown or even variable duration. It may be difficult or impossible to accurately schedule such media objects in advance. Blakowski [10] classifies synchronization models into 3 principal approaches: Hierarchical <ref> [8, 7, 3, 4, 5, 6] </ref>, timeline based [11, 2, 12] and reference points [10, 13, 14, 15, 16, 17]. Blakowski states that hierarchical structures do not support adequate abstraction and cannot represent all synchronization conditions. Timelines do not support objects without a 3 deterministic time of presentation.
Reference: [5] <author> B. Prabhakaran and S.V. Raghavan. </author> <title> Synchronization models for presentation with user participation. </title> <booktitle> In Proceedings of ACM Multimedia 93, </booktitle> <pages> pages 157-165. </pages> <publisher> ACM, </publisher> <year> 1993. </year>
Reference-contexts: The specification, modeling and enforcement of temporal synchronization has been the subject of much research. Much of this research has addressed static presentations with fixed objects of known duration <ref> [3, 4, 2, 5, 6, 7] </ref>. In many schemes, if two sets of objects are specified to be displayed in parallel, their durations not only must be known, but must be exactly equal [8, 3, 4, 7]. <p> Including computer-generated media such as visualizations and simulations forces us to consider media that may have unknown or even variable duration. It may be difficult or impossible to accurately schedule such media objects in advance. Blakowski [10] classifies synchronization models into 3 principal approaches: Hierarchical <ref> [8, 7, 3, 4, 5, 6] </ref>, timeline based [11, 2, 12] and reference points [10, 13, 14, 15, 16, 17]. Blakowski states that hierarchical structures do not support adequate abstraction and cannot represent all synchronization conditions. Timelines do not support objects without a 3 deterministic time of presentation. <p> There has been some work on supporting user interactions in multimedia presentations. Most models assume that any user interaction affects all datastreams. In the CMIF environment [18, 6], interaction is restricted to path selection and hypermedia links. Prabhakaran and Raghavan <ref> [5] </ref> consider skipping, reverse presentation, pausing, and scaling the speed of a presentation. The authors presume a change in one stream should affect all parallel streams, a model different than our coarse-grain synchronization.
Reference: [6] <author> L. Hardman, G. vanRossum, and D. Bulterman. </author> <title> Structured multimedia authoring. </title> <booktitle> In Proceedings of ACM Multimedia 93, </booktitle> <pages> pages 283-289. </pages> <publisher> ACM, </publisher> <year> 1993. </year>
Reference-contexts: The specification, modeling and enforcement of temporal synchronization has been the subject of much research. Much of this research has addressed static presentations with fixed objects of known duration <ref> [3, 4, 2, 5, 6, 7] </ref>. In many schemes, if two sets of objects are specified to be displayed in parallel, their durations not only must be known, but must be exactly equal [8, 3, 4, 7]. <p> Including computer-generated media such as visualizations and simulations forces us to consider media that may have unknown or even variable duration. It may be difficult or impossible to accurately schedule such media objects in advance. Blakowski [10] classifies synchronization models into 3 principal approaches: Hierarchical <ref> [8, 7, 3, 4, 5, 6] </ref>, timeline based [11, 2, 12] and reference points [10, 13, 14, 15, 16, 17]. Blakowski states that hierarchical structures do not support adequate abstraction and cannot represent all synchronization conditions. Timelines do not support objects without a 3 deterministic time of presentation. <p> There has been some work on supporting user interactions in multimedia presentations. Most models assume that any user interaction affects all datastreams. In the CMIF environment <ref> [18, 6] </ref>, interaction is restricted to path selection and hypermedia links. Prabhakaran and Raghavan [5] consider skipping, reverse presentation, pausing, and scaling the speed of a presentation. The authors presume a change in one stream should affect all parallel streams, a model different than our coarse-grain synchronization.
Reference: [7] <author> D. Wijesekera, D. Kenchamanna-Hosekote, and J. Srivastava. </author> <title> Specification, verification, and translation of multimedia compositions. </title> <type> Technical report, </type> <institution> University of Minnesota, </institution> <year> 1994. </year>
Reference-contexts: The specification, modeling and enforcement of temporal synchronization has been the subject of much research. Much of this research has addressed static presentations with fixed objects of known duration <ref> [3, 4, 2, 5, 6, 7] </ref>. In many schemes, if two sets of objects are specified to be displayed in parallel, their durations not only must be known, but must be exactly equal [8, 3, 4, 7]. <p> Much of this research has addressed static presentations with fixed objects of known duration [3, 4, 2, 5, 6, 7]. In many schemes, if two sets of objects are specified to be displayed in parallel, their durations not only must be known, but must be exactly equal <ref> [8, 3, 4, 7] </ref>. Li, et al. [9] suggest that this expectation is unreasonable since the duration information may not be known at the time of specification. <p> Including computer-generated media such as visualizations and simulations forces us to consider media that may have unknown or even variable duration. It may be difficult or impossible to accurately schedule such media objects in advance. Blakowski [10] classifies synchronization models into 3 principal approaches: Hierarchical <ref> [8, 7, 3, 4, 5, 6] </ref>, timeline based [11, 2, 12] and reference points [10, 13, 14, 15, 16, 17]. Blakowski states that hierarchical structures do not support adequate abstraction and cannot represent all synchronization conditions. Timelines do not support objects without a 3 deterministic time of presentation.
Reference: [8] <author> A. Poggio. CCWS: </author> <title> A computer-based multimedia information system. </title> <booktitle> IEEE Computer, </booktitle> <month> Oct </month> <year> 1985. </year>
Reference-contexts: Much of this research has addressed static presentations with fixed objects of known duration [3, 4, 2, 5, 6, 7]. In many schemes, if two sets of objects are specified to be displayed in parallel, their durations not only must be known, but must be exactly equal <ref> [8, 3, 4, 7] </ref>. Li, et al. [9] suggest that this expectation is unreasonable since the duration information may not be known at the time of specification. <p> Including computer-generated media such as visualizations and simulations forces us to consider media that may have unknown or even variable duration. It may be difficult or impossible to accurately schedule such media objects in advance. Blakowski [10] classifies synchronization models into 3 principal approaches: Hierarchical <ref> [8, 7, 3, 4, 5, 6] </ref>, timeline based [11, 2, 12] and reference points [10, 13, 14, 15, 16, 17]. Blakowski states that hierarchical structures do not support adequate abstraction and cannot represent all synchronization conditions. Timelines do not support objects without a 3 deterministic time of presentation.
Reference: [9] <author> L. Li, A. Karmouch, </author> <title> and N.D. Georganas. Multimedia teleorchestra with independent sources: Part 1 temporal modeling of collaborative multimedia scenarios. </title> <booktitle> Multimedia Systems, </booktitle> <year> 1994. </year>
Reference-contexts: In many schemes, if two sets of objects are specified to be displayed in parallel, their durations not only must be known, but must be exactly equal [8, 3, 4, 7]. Li, et al. <ref> [9] </ref> suggest that this expectation is unreasonable since the duration information may not be known at the time of specification. However, they generally assume that durations are defined and available after specification time but before presentation time (i.e., when running their scheduling algorithm prior to presentation). <p> Vazirgiannis and Mourlas [17] include user interaction through buttons, but the effect of jumping to other points in the presentation are not described and it is not clear if the model described can maintain a globally consistent state when such jumps occur. Li <ref> [9, 19] </ref> suggests that schedules can be recomputed after each user interaction affects the scheduled playout resulting in all related media streams being modified after each user interaction. In this paper we introduce an event-based model, FLexible Interactive Presentation Synchronization (FLIPS), that can handle the synchronization of variable duration objects.
Reference: [10] <author> G. Blakowski et al. </author> <title> Tool support for the synchronization and presentation of distributed multimedia. </title> <journal> Computer Communications, </journal> <volume> 15(10) </volume> <pages> 611-618, </pages> <month> December </month> <year> 1992. </year>
Reference-contexts: Educational multimedia applications benefit from including media beyond audio, video, image, and text. Including computer-generated media such as visualizations and simulations forces us to consider media that may have unknown or even variable duration. It may be difficult or impossible to accurately schedule such media objects in advance. Blakowski <ref> [10] </ref> classifies synchronization models into 3 principal approaches: Hierarchical [8, 7, 3, 4, 5, 6], timeline based [11, 2, 12] and reference points [10, 13, 14, 15, 16, 17]. Blakowski states that hierarchical structures do not support adequate abstraction and cannot represent all synchronization conditions. <p> It may be difficult or impossible to accurately schedule such media objects in advance. Blakowski [10] classifies synchronization models into 3 principal approaches: Hierarchical [8, 7, 3, 4, 5, 6], timeline based [11, 2, 12] and reference points <ref> [10, 13, 14, 15, 16, 17] </ref>. Blakowski states that hierarchical structures do not support adequate abstraction and cannot represent all synchronization conditions. Timelines do not support objects without a 3 deterministic time of presentation. Because of these limitations our model is based on the reference point approach.
Reference: [11] <author> G. Drapeau. </author> <title> Synchronization in the maestro multimedia authoring environment. </title> <booktitle> In Proceedings of ACM Multimedia 93, </booktitle> <pages> pages 331-339. </pages> <publisher> ACM, </publisher> <year> 1993. </year>
Reference-contexts: It may be difficult or impossible to accurately schedule such media objects in advance. Blakowski [10] classifies synchronization models into 3 principal approaches: Hierarchical [8, 7, 3, 4, 5, 6], timeline based <ref> [11, 2, 12] </ref> and reference points [10, 13, 14, 15, 16, 17]. Blakowski states that hierarchical structures do not support adequate abstraction and cannot represent all synchronization conditions. Timelines do not support objects without a 3 deterministic time of presentation.
Reference: [12] <author> S. Gibbs. </author> <title> Application construction and component design in an object-oriented multimedia framework. </title> <booktitle> In Proceedings Third International Workshop on Network and Operating Systems Support for Digital Audio and Video, </booktitle> <month> November </month> <year> 1992. </year>
Reference-contexts: It may be difficult or impossible to accurately schedule such media objects in advance. Blakowski [10] classifies synchronization models into 3 principal approaches: Hierarchical [8, 7, 3, 4, 5, 6], timeline based <ref> [11, 2, 12] </ref> and reference points [10, 13, 14, 15, 16, 17]. Blakowski states that hierarchical structures do not support adequate abstraction and cannot represent all synchronization conditions. Timelines do not support objects without a 3 deterministic time of presentation.
Reference: [13] <author> R. Steinmetz. </author> <title> Synchronization properties in multimedia systems. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 8(3), </volume> <month> April </month> <year> 1990. </year>
Reference-contexts: It may be difficult or impossible to accurately schedule such media objects in advance. Blakowski [10] classifies synchronization models into 3 principal approaches: Hierarchical [8, 7, 3, 4, 5, 6], timeline based [11, 2, 12] and reference points <ref> [10, 13, 14, 15, 16, 17] </ref>. Blakowski states that hierarchical structures do not support adequate abstraction and cannot represent all synchronization conditions. Timelines do not support objects without a 3 deterministic time of presentation. Because of these limitations our model is based on the reference point approach. <p> Timelines do not support objects without a 3 deterministic time of presentation. Because of these limitations our model is based on the reference point approach. Several reference point models expand relationships between objects beyond that of simultaneous occurrence. Steinmetz <ref> [13] </ref> introduces the concept of restricted blocking to handle the situation where two data streams do not reach their synchronizing event at the same point in time. We adopt this concept in our media object model. In other works, causal relationships have been incorporated. <p> Thoughout this paper, we will use the term condition to refer to the source event of a relation. Steinmetz <ref> [13] </ref> introduced the concept of restricted blocking where a multimedia object performs an alternative activity while waiting for a synchronizing event [13]. <p> Thoughout this paper, we will use the term condition to refer to the source event of a relation. Steinmetz <ref> [13] </ref> introduced the concept of restricted blocking where a multimedia object performs an alternative activity while waiting for a synchronizing event [13]. In a flexible presentation that has coarse-grained synchronization and variable playout durations of objects, it is much more likely that one activity will complete prior to another as a result of viewer interaction.
Reference: [14] <author> P. Hoepner. </author> <title> Synchronizing the presentation of multimedia objects. </title> <journal> Computer Communications, </journal> <volume> 15(9), </volume> <month> Nov </month> <year> 1992. </year> <month> 25 </month>
Reference-contexts: It may be difficult or impossible to accurately schedule such media objects in advance. Blakowski [10] classifies synchronization models into 3 principal approaches: Hierarchical [8, 7, 3, 4, 5, 6], timeline based [11, 2, 12] and reference points <ref> [10, 13, 14, 15, 16, 17] </ref>. Blakowski states that hierarchical structures do not support adequate abstraction and cannot represent all synchronization conditions. Timelines do not support objects without a 3 deterministic time of presentation. Because of these limitations our model is based on the reference point approach. <p> A title slide can be forced to end when the presentation begins by establishing an enabler from the Begin of 2 If a finer grain of synchronization is desired, large objects can be broken into smaller sub-objects similar to the concept of actions proposed by Hoepner <ref> [14] </ref>. 3 It may also be the case that the End of the music has control over the slide. We consider two-way relationships below. 8 begin the presentation to the End of the slide. <p> Alternatively, it may be desirable to pause the narrative if all of the slides have not yet been displayed; both streams should complete their display prior to continuing. This relation, similar to the parallel-last of Hoepner <ref> [14] </ref>, can be specified by mutual barriers, the End of the slide is a barrier to the End of the corresponding narrative, and the End of the narrative is a barrier to the End of the slide. This is shown in Figure 9. <p> This is shown in Figure 9. In future references to the architectural presentation, we will assume the master-slave specification, but either specification could be acceptable. A third method of synchronizing the Ends of two objects corresponds to the parallel-first of Hoepner <ref> [14] </ref>, where whichever object reaches the synchronization point first, causes the other to jump to that point. This is shown in Figure 10.
Reference: [15] <author> M. C. Buchanan and P. T. Zellweger. </author> <title> Scheduling multimedia documents using temporal constraints. </title> <booktitle> In Proceedings Third International Workshop on Network and Operating Systems Support for Digital Audio and Video, </booktitle> <pages> pages 237-249, </pages> <month> November </month> <year> 1992. </year>
Reference-contexts: It may be difficult or impossible to accurately schedule such media objects in advance. Blakowski [10] classifies synchronization models into 3 principal approaches: Hierarchical [8, 7, 3, 4, 5, 6], timeline based [11, 2, 12] and reference points <ref> [10, 13, 14, 15, 16, 17] </ref>. Blakowski states that hierarchical structures do not support adequate abstraction and cannot represent all synchronization conditions. Timelines do not support objects without a 3 deterministic time of presentation. Because of these limitations our model is based on the reference point approach. <p> Steinmetz [13] introduces the concept of restricted blocking to handle the situation where two data streams do not reach their synchronizing event at the same point in time. We adopt this concept in our media object model. In other works, causal relationships have been incorporated. Buchanan <ref> [15] </ref> identifies constraints that allow one event to cause another with a possible specifiable time lag. The ESTEREL language [16] supports the use of input and output signals for synchronization. Vazirgiannis and Mourlas [17] use an event tree to specify the cause of events.
Reference: [16] <author> F. Horn and J.B. Stefani. </author> <title> On programming and supporting multimedia object synchronization. </title> <journal> The Computer Journal, </journal> <volume> 36(1) </volume> <pages> 4-18, </pages> <year> 1993. </year>
Reference-contexts: It may be difficult or impossible to accurately schedule such media objects in advance. Blakowski [10] classifies synchronization models into 3 principal approaches: Hierarchical [8, 7, 3, 4, 5, 6], timeline based [11, 2, 12] and reference points <ref> [10, 13, 14, 15, 16, 17] </ref>. Blakowski states that hierarchical structures do not support adequate abstraction and cannot represent all synchronization conditions. Timelines do not support objects without a 3 deterministic time of presentation. Because of these limitations our model is based on the reference point approach. <p> We adopt this concept in our media object model. In other works, causal relationships have been incorporated. Buchanan [15] identifies constraints that allow one event to cause another with a possible specifiable time lag. The ESTEREL language <ref> [16] </ref> supports the use of input and output signals for synchronization. Vazirgiannis and Mourlas [17] use an event tree to specify the cause of events.
Reference: [17] <author> M Vazirgiannis and C. Mourlas. </author> <title> An object-oriented model for interactive multimedia presentations. </title> <journal> The Computer Journal, </journal> <volume> 36(1) </volume> <pages> 78-86, </pages> <year> 1993. </year>
Reference-contexts: It may be difficult or impossible to accurately schedule such media objects in advance. Blakowski [10] classifies synchronization models into 3 principal approaches: Hierarchical [8, 7, 3, 4, 5, 6], timeline based [11, 2, 12] and reference points <ref> [10, 13, 14, 15, 16, 17] </ref>. Blakowski states that hierarchical structures do not support adequate abstraction and cannot represent all synchronization conditions. Timelines do not support objects without a 3 deterministic time of presentation. Because of these limitations our model is based on the reference point approach. <p> In other works, causal relationships have been incorporated. Buchanan [15] identifies constraints that allow one event to cause another with a possible specifiable time lag. The ESTEREL language [16] supports the use of input and output signals for synchronization. Vazirgiannis and Mourlas <ref> [17] </ref> use an event tree to specify the cause of events. Our model is similar in defining enabling events that may generate other events to occur, but we extend this to also include barriers that prevent events from occurring until the barrier is satisfied. <p> Prabhakaran and Raghavan [5] consider skipping, reverse presentation, pausing, and scaling the speed of a presentation. The authors presume a change in one stream should affect all parallel streams, a model different than our coarse-grain synchronization. Vazirgiannis and Mourlas <ref> [17] </ref> include user interaction through buttons, but the effect of jumping to other points in the presentation are not described and it is not clear if the model described can maintain a globally consistent state when such jumps occur.
Reference: [18] <author> G. van Rossum, J. Jansen, K. Mullender, and D. Bulterman. CMIFed: </author> <title> A presentation system for portable hypermedia documents. </title> <booktitle> In Proceedings of ACM Multimedia 93, </booktitle> <pages> pages 183-188. </pages> <publisher> ACM, </publisher> <year> 1993. </year>
Reference-contexts: There has been some work on supporting user interactions in multimedia presentations. Most models assume that any user interaction affects all datastreams. In the CMIF environment <ref> [18, 6] </ref>, interaction is restricted to path selection and hypermedia links. Prabhakaran and Raghavan [5] consider skipping, reverse presentation, pausing, and scaling the speed of a presentation. The authors presume a change in one stream should affect all parallel streams, a model different than our coarse-grain synchronization.
Reference: [19] <author> L. Li, A. Karmouch, </author> <title> and N.D. Georganas. Multimedia teleorchestra with independent sources: </title> <booktitle> Part 2 -synchronization algorithms. Multimedia Systems, </booktitle> <year> 1994. </year> <month> 26 </month>
Reference-contexts: Vazirgiannis and Mourlas [17] include user interaction through buttons, but the effect of jumping to other points in the presentation are not described and it is not clear if the model described can maintain a globally consistent state when such jumps occur. Li <ref> [9, 19] </ref> suggests that schedules can be recomputed after each user interaction affects the scheduled playout resulting in all related media streams being modified after each user interaction. In this paper we introduce an event-based model, FLexible Interactive Presentation Synchronization (FLIPS), that can handle the synchronization of variable duration objects.
References-found: 19

