URL: http://www.cs.dartmouth.edu/~cliff/papers/UnsplittableIPCO.ps.Z
Refering-URL: http://www.cs.dartmouth.edu/~cliff/papers/
Root-URL: http://www.cs.dartmouth.edu
Title: Approximating Disjoint-Path Problems Using Greedy Algorithms and Packing Integer Programs (Extended Abstract)  
Author: Stavros G. Kolliopoulos and Clifford Stein 
Address: Hanover, NH 03755-3510  
Affiliation: Dartmouth College, Department of Computer Science,  
Abstract: The edge and vertex-disjoint path problems together with their unsplittable flow generalization are NP-hard problems with a multitude of applications in areas such as routing, scheduling and bin packing. Given the hardness of the problems, we study polynomial-time approximation algorithms with bounded performance guarantees. We introduce techniques which yield new algorithms for a wide range of disjoint-path problems. We use two basic techniques. First, we propose simple greedy algorithms for edge- and vertex-disjoint paths and second, we propose the use of a framework based on packing integer programs for more general problems such as unsplittable flow. As part of our tools we develop improved approximation algorithms for a class of packing integer programs, a result that we believe is of independent interest. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> R. Aharoni, P. Erdos, and N. Linial. </author> <title> Optima of dual integer linear programs. </title> <journal> Comb., </journal> <volume> 8 </volume> <pages> 13-20, </pages> <year> 1988. </year>
Reference-contexts: We now elaborate on our results under the rounding approach, providing further background as necessary. 1.1 Packing Integer Programs Packing integer programs are a well-studied class of integer programs that can model several NP-complete problems, including independent set, hypergraph k-matching <ref> [19, 1] </ref>, job-shop scheduling [23, 28, 33, 20] and many flow and path related problems. Many of these problems seem to be difficult to approximate, and not much is known about their worst-case approximation ratios. Following [30] a packing integer program (PIP) is defined as follows. Definition 1. <p> Many of these problems seem to be difficult to approximate, and not much is known about their worst-case approximation ratios. Following [30] a packing integer program (PIP) is defined as follows. Definition 1. Given A 2 <ref> [0; 1] </ref> mfin ; b 2 [1; 1) m and c 2 [0; 1] n with max j c j = 1; a PIP P = (A; b; c) seeks to maximize c T x subject to x 2 Z n + and Ax b: Constraints of the form 0 x <p> Many of these problems seem to be difficult to approximate, and not much is known about their worst-case approximation ratios. Following [30] a packing integer program (PIP) is defined as follows. Definition 1. Given A 2 [0; 1] mfin ; b 2 <ref> [1; 1) m and c 2 [0; 1] </ref> n with max j c j = 1; a PIP P = (A; b; c) seeks to maximize c T x subject to x 2 Z n + and Ax b: Constraints of the form 0 x j d j are also allowed. <p> Many of these problems seem to be difficult to approximate, and not much is known about their worst-case approximation ratios. Following [30] a packing integer program (PIP) is defined as follows. Definition 1. Given A 2 <ref> [0; 1] </ref> mfin ; b 2 [1; 1) m and c 2 [0; 1] n with max j c j = 1; a PIP P = (A; b; c) seeks to maximize c T x subject to x 2 Z n + and Ax b: Constraints of the form 0 x j d j are also allowed. <p> Given a graph G = (V; E) and c 2 <ref> [0; 1] </ref> jV j a weight vector on the vertices, there exists a polynomial-time algorithm that outputs an independent set in the square G 2 = (V; E 2 ) of G of weight (maxfy fl = p Here y fl denotes the optimum of a fractional relaxation and is the
Reference: 2. <author> Y. Aumann and Y. Rabani. </author> <title> Improved bounds for all-optical routing. </title> <booktitle> In Proc. 6th ACM-SIAM Symp. on Discrete Algorithms, </booktitle> <pages> 567-576, </pages> <year> 1995. </year>
Reference-contexts: Notice that for the edge-disjoint path problem this is a natural assumption since at most jEj connection requests can be feasibly routed. We also note that a -approximation for y fl entails an O ( log jEj) approximation for the problem of routing in rounds <ref> [2, 10] </ref>. We do not pursue any further the latter problem in this extended abstract. Application 2: weighted vertex-disjoint paths.
Reference: 3. <author> A. Z. Broder, A. M. Frieze, and E. Upfal. </author> <title> Static and dynamic path selection on expander graphs: a random walk approach. </title> <booktitle> In Proc. 29th Ann. ACM Symp. on Theory of Computing, </booktitle> <pages> 531-539, </pages> <year> 1997. </year>
Reference-contexts: In this paper we will state explicitly when we deal with the weighted version of a problem. Both the edge- and vertex-disjoint path problems are fundamental, extensively studied (see e.g. <ref> [26, 6, 27, 21, 10, 13, 3] </ref>), NP-hard problems [9], with a multitude of applications in areas such as telecommunications, VLSI and scheduling.
Reference: 4. <author> C. Cooper. </author> <title> The thresold of hamilton cycles in the square of a random graph. Random Structures and Algorithms, </title> <booktitle> 5 </booktitle> <pages> 25-31, </pages> <year> 1994. </year>
Reference-contexts: approximation ratio cannot be polynomially improved in the sense that no (n=4) 1=2" approximation, for any fixed " &gt; 0; can be obtained in polynomial time unless N P = ZP P: Studying NP-hard problems in powers of graphs is a topic that has received some attention in the literature <ref> [5, 34, 18, 4] </ref>. Independently of our work, Baveja and Srinivasan (personal communication) have obtained results similar to ours for approximating vertex-disjoint paths under the rounding approach, unsplittable flow and column-restricted packing integer programs.
Reference: 5. <author> H. Fleischner. </author> <title> The square of every two-connected graph is hamiltonian. </title> <journal> J. of Combinatorial Theory B, </journal> <volume> 16 </volume> <pages> 29-34, </pages> <year> 1974. </year>
Reference-contexts: approximation ratio cannot be polynomially improved in the sense that no (n=4) 1=2" approximation, for any fixed " &gt; 0; can be obtained in polynomial time unless N P = ZP P: Studying NP-hard problems in powers of graphs is a topic that has received some attention in the literature <ref> [5, 34, 18, 4] </ref>. Independently of our work, Baveja and Srinivasan (personal communication) have obtained results similar to ours for approximating vertex-disjoint paths under the rounding approach, unsplittable flow and column-restricted packing integer programs.
Reference: 6. <author> A. Frank. </author> <title> Packing paths, cuts and circuits a survey. </title> <editor> In B. Korte, L. Lovasz, H. J. Promel, and A. Schrijver, eds., </editor> <booktitle> Paths, Flows and VLSI-Layout, </booktitle> <pages> 49-100. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1990. </year>
Reference-contexts: In this paper we will state explicitly when we deal with the weighted version of a problem. Both the edge- and vertex-disjoint path problems are fundamental, extensively studied (see e.g. <ref> [26, 6, 27, 21, 10, 13, 3] </ref>), NP-hard problems [9], with a multitude of applications in areas such as telecommunications, VLSI and scheduling.
Reference: 7. <author> N. Garg, V. Vazirani, and M. Yannakakis. </author> <title> Primal-dual approximation algorithms for integral flow and multicut in trees. </title> <journal> Algorithmica, </journal> <volume> 18 </volume> <pages> 3-20, </pages> <year> 1997. </year>
Reference-contexts: This approach is known to have limitations, e.g. it is known that a gap of ( p jV j) exists between the fractional and integral optima for both the edge- and vertex-disjoint path problems on a graph with jEj = fi (jV j) <ref> [7] </ref>. (ii) Under the second approach, which we call the routing approach, a commodity is never split, i.e. routed fractionally along more than one path during the course of the algorithm. <p> The algorithm is surprisingly simple but the performance guarantee matches the integrality gap known for the problem <ref> [7] </ref>. Application 3: routing with low congestion.
Reference: 8. <author> R. M. Karp, F. T. Leighton, R. L. Rivest, C. D. Thompson, U. V. Vazirani, and V. V. Vazirani. </author> <title> Global wire routing in two-dimensional arrays. </title> <journal> Algorithmica, </journal> <volume> 2 </volume> <pages> 113-129, </pages> <year> 1987. </year>
Reference-contexts: Typically this is a multicommodity flow problem. We then explicitly use the solution x to guide the formation of a column-restricted or (0; 1) PIP. A related usage of a solution to the linear relaxation of integer programs in a different context can be found in <ref> [8, 32] </ref>. An integral approximate solution to the created PIP will be an approximate solution to the original disjoint path problem (with possibly some small degradation in the approximation factor). This integral solution can be found using existing algorithms for approximating PIP's as a black box.
Reference: 9. <author> R.M. Karp. </author> <title> On the computational complexity of combinatorial problems. </title> <journal> Networks, </journal> <volume> 5 </volume> <pages> 45-68, </pages> <year> 1975. </year>
Reference-contexts: In this paper we will state explicitly when we deal with the weighted version of a problem. Both the edge- and vertex-disjoint path problems are fundamental, extensively studied (see e.g. [26, 6, 27, 21, 10, 13, 3]), NP-hard problems <ref> [9] </ref>, with a multitude of applications in areas such as telecommunications, VLSI and scheduling.
Reference: 10. <author> J. M. Kleinberg. </author> <title> Approximation algorithms for disjoint paths problems. </title> <type> PhD thesis, </type> <institution> MIT, </institution> <address> Cambridge, MA, </address> <month> May </month> <year> 1996. </year>
Reference-contexts: Wlog, we assume that max k k = 1, and following the standard definition of the problem in the literature, u e 1; 8e 2 E: When all demands and capacities are 1 in the multiple-source unsplittable flow problem we obtain the edge-disjoint path problem. (See <ref> [10, 14] </ref> for further applications and motivation for unsplittable flow.) In all the above problems 1 E-mail: fstavros, cliffg@cs.dartmouth.edu. <p> In this paper we will state explicitly when we deal with the weighted version of a problem. Both the edge- and vertex-disjoint path problems are fundamental, extensively studied (see e.g. <ref> [26, 6, 27, 21, 10, 13, 3] </ref>), NP-hard problems [9], with a multitude of applications in areas such as telecommunications, VLSI and scheduling. <p> The only example of this method we are aware of is the on-line Bounded Greedy Algorithm in <ref> [10] </ref> whose approximation guarantee depends also on the diameter of the graph. The algorithm can be easily modified into an off-line procedure that outputs realizable sets of size (OP T = p p jV j)) for edge ( vertex)-disjoint paths. <p> Notice that for the edge-disjoint path problem this is a natural assumption since at most jEj connection requests can be feasibly routed. We also note that a -approximation for y fl entails an O ( log jEj) approximation for the problem of routing in rounds <ref> [2, 10] </ref>. We do not pursue any further the latter problem in this extended abstract. Application 2: weighted vertex-disjoint paths. <p> The algorithm is surprisingly simple but the performance guarantee matches the integrality gap known for the problem [7]. Application 3: routing with low congestion. A problem that has received a lot of attention in the literature on routing problems (e.g. <ref> [25, 17, 23, 22, 10, 14] </ref>) is that of minimizing congestion, i.e. the factor by which one is allowed to scale up capacities in order to achieve an optimal (or near-optimal) realizable set.
Reference: 11. <author> J. M. Kleinberg. </author> <title> Single-source unsplittable flow. </title> <booktitle> In Proc. 37th Ann. Symp. on Foundations of Computer Science, </booktitle> <pages> 68-77, </pages> <month> October </month> <year> 1996. </year>
Reference-contexts: We have assumed that there is an approximation algorithm for P 0 returning a solution with objective value (m; k; ff; y fl ): Invoking this algorithm completes the proof. ut The proof of the following lemma generalizes that of Lemma 4.1 in <ref> [11] </ref>. Lemma 1.
Reference: 12. <author> J. M. Kleinberg and R. Rubinfeld. </author> <title> Short paths in expander graphs. </title> <booktitle> In Proc. 37th Ann. Symp. on Foundations of Computer Science, </booktitle> <pages> 86-95, </pages> <year> 1996. </year>
Reference-contexts: Let d denote the dilation of the fractional solution, i.e. the maximum length of a flow path in the fractional relaxation. Bounds that rely on the dilation are particularly appealing for expander graphs where it is known that d = O (polylog (n)) <ref> [16, 12] </ref>.
Reference: 13. <author> J. M. Kleinberg and E. Tardos. </author> <title> Disjoint paths in densely-embedded graphs. </title> <booktitle> In Proc. 36th Ann. Symp. on Foundations of Computer Science, </booktitle> <pages> 52-61, </pages> <year> 1995. </year>
Reference-contexts: In this paper we will state explicitly when we deal with the weighted version of a problem. Both the edge- and vertex-disjoint path problems are fundamental, extensively studied (see e.g. <ref> [26, 6, 27, 21, 10, 13, 3] </ref>), NP-hard problems [9], with a multitude of applications in areas such as telecommunications, VLSI and scheduling.
Reference: 14. <author> S. G. Kolliopoulos and C. Stein. </author> <title> Improved approximation algorithms for unsplit-table flow problems. </title> <booktitle> In Proc. 38th Ann. Symp. on Foundations of Computer Science, </booktitle> <pages> 426-435, </pages> <year> 1997. </year>
Reference-contexts: Wlog, we assume that max k k = 1, and following the standard definition of the problem in the literature, u e 1; 8e 2 E: When all demands and capacities are 1 in the multiple-source unsplittable flow problem we obtain the edge-disjoint path problem. (See <ref> [10, 14] </ref> for further applications and motivation for unsplittable flow.) In all the above problems 1 E-mail: fstavros, cliffg@cs.dartmouth.edu. <p> Perhaps the key idea is in using the solution x fl to define the capacity allocation to the b L -vector for subproblem P L : This generalizes previous work of the authors <ref> [14] </ref> on single-source unsplittable flow. The other key idea is that each subproblem can be approximated almost as well as a (0; 1)-PIP. 1.2 Applications of packing to approximation We introduce a new framework for applying packing techniques to disjoint-path problems. <p> The algorithm is surprisingly simple but the performance guarantee matches the integrality gap known for the problem [7]. Application 3: routing with low congestion. A problem that has received a lot of attention in the literature on routing problems (e.g. <ref> [25, 17, 23, 22, 10, 14] </ref>) is that of minimizing congestion, i.e. the factor by which one is allowed to scale up capacities in order to achieve an optimal (or near-optimal) realizable set. <p> Since all b i 's are already multiples of a 2 ; we don't pay the 1=2 factor for the initial rounding. ut We now give the idea behind the full algorithm. The technique generalizes earlier work of the authors on single-source unsplittable flow <ref> [14] </ref>.
Reference: 15. <author> S. G. Kolliopoulos and C. Stein. </author> <title> Approximating disjoint-path problems using greedy algorithms and packing integer programs. </title> <type> Technical Report PCS TR97-325, </type> <institution> Department of Computer Science, Dartmouth College, </institution> <year> 1997. </year>
Reference-contexts: Finally we show how to improve upon the stated approximations when max j j is bounded away from 1: We develop the latter two results in a more complete version of this paper <ref> [15] </ref>. We now give an overview of our technique. <p> In fact we can give a better F 1 -type bound for small enough y fl ; whose analytical form is complicated. See <ref> [15] </ref> for further details. In the case where the number of commodities K = O (jEj) we show how to obtain also an (maxfF 1 = log jEj; F 3 g) bound.
Reference: 16. <author> F. T. Leighton and S. B. Rao. </author> <title> Circuit switching: a multi-commodity flow approach. </title> <booktitle> In Workshop on Randomized Parallel Computing, </booktitle> <year> 1996. </year>
Reference-contexts: Let d denote the dilation of the fractional solution, i.e. the maximum length of a flow path in the fractional relaxation. Bounds that rely on the dilation are particularly appealing for expander graphs where it is known that d = O (polylog (n)) <ref> [16, 12] </ref>.
Reference: 17. <author> T. Leighton and S. Rao. </author> <title> An approximate max-flow min-cut theorem for uniform multicommodity flow problems with applications to approximation algorithms. </title> <booktitle> In Proc. 29th Ann. Symp. on Foundations of Computer Science, </booktitle> <pages> 422-431, </pages> <year> 1988. </year>
Reference-contexts: The algorithm is surprisingly simple but the performance guarantee matches the integrality gap known for the problem [7]. Application 3: routing with low congestion. A problem that has received a lot of attention in the literature on routing problems (e.g. <ref> [25, 17, 23, 22, 10, 14] </ref>) is that of minimizing congestion, i.e. the factor by which one is allowed to scale up capacities in order to achieve an optimal (or near-optimal) realizable set.
Reference: 18. <author> Y.-L. Lin and S. E. Skiena. </author> <title> Algorithms for square roots of graphs. </title> <journal> SIAM J. on Discrete Mathematics, </journal> <volume> 8(1) </volume> <pages> 99-118, </pages> <month> February </month> <year> 1995. </year>
Reference-contexts: approximation ratio cannot be polynomially improved in the sense that no (n=4) 1=2" approximation, for any fixed " &gt; 0; can be obtained in polynomial time unless N P = ZP P: Studying NP-hard problems in powers of graphs is a topic that has received some attention in the literature <ref> [5, 34, 18, 4] </ref>. Independently of our work, Baveja and Srinivasan (personal communication) have obtained results similar to ours for approximating vertex-disjoint paths under the rounding approach, unsplittable flow and column-restricted packing integer programs.
Reference: 19. <author> L. Lovasz. </author> <title> On the ratio of optimal and fractional covers. </title> <journal> Discrete Mathematics, </journal> <volume> 13 </volume> <pages> 383-390, </pages> <year> 1975. </year>
Reference-contexts: We now elaborate on our results under the rounding approach, providing further background as necessary. 1.1 Packing Integer Programs Packing integer programs are a well-studied class of integer programs that can model several NP-complete problems, including independent set, hypergraph k-matching <ref> [19, 1] </ref>, job-shop scheduling [23, 28, 33, 20] and many flow and path related problems. Many of these problems seem to be difficult to approximate, and not much is known about their worst-case approximation ratios. Following [30] a packing integer program (PIP) is defined as follows. Definition 1.
Reference: 20. <author> P. Martin and D. B. Shmoys. </author> <title> A new approach to computing optimal schedules for the job-shop scheduling problem. </title> <booktitle> In Proc. 5th Conference on Integer Programming and Combinatorial Optimization, </booktitle> <pages> 389-403, </pages> <year> 1996. </year>
Reference-contexts: We now elaborate on our results under the rounding approach, providing further background as necessary. 1.1 Packing Integer Programs Packing integer programs are a well-studied class of integer programs that can model several NP-complete problems, including independent set, hypergraph k-matching [19, 1], job-shop scheduling <ref> [23, 28, 33, 20] </ref> and many flow and path related problems. Many of these problems seem to be difficult to approximate, and not much is known about their worst-case approximation ratios. Following [30] a packing integer program (PIP) is defined as follows. Definition 1.
Reference: 21. <author> D. Peleg and E. Upfal. </author> <title> Disjoint paths on expander graphs. </title> <journal> Comb., </journal> <volume> 9 </volume> <pages> 289-313, </pages> <year> 1989. </year>
Reference-contexts: In this paper we will state explicitly when we deal with the weighted version of a problem. Both the edge- and vertex-disjoint path problems are fundamental, extensively studied (see e.g. <ref> [26, 6, 27, 21, 10, 13, 3] </ref>), NP-hard problems [9], with a multitude of applications in areas such as telecommunications, VLSI and scheduling.
Reference: 22. <author> S. Plotkin. </author> <title> Competitive routing of virtual circuits in ATM networks. </title> <journal> IEEE J. Selected Areas in Comm., </journal> <pages> 1128-1136, </pages> <year> 1995. </year> <booktitle> Special issue on Advances in the Fundamentals of Networking. </booktitle>
Reference-contexts: The algorithm is surprisingly simple but the performance guarantee matches the integrality gap known for the problem [7]. Application 3: routing with low congestion. A problem that has received a lot of attention in the literature on routing problems (e.g. <ref> [25, 17, 23, 22, 10, 14] </ref>) is that of minimizing congestion, i.e. the factor by which one is allowed to scale up capacities in order to achieve an optimal (or near-optimal) realizable set.
Reference: 23. <author> S. Plotkin, D. B. Shmoys, and E. Tardos. </author> <title> Fast approximation algorithms for fractional packing and covering problems. </title> <journal> Math. of Oper. Res., </journal> <volume> 20 </volume> <pages> 257-301, </pages> <year> 1995. </year>
Reference-contexts: We now elaborate on our results under the rounding approach, providing further background as necessary. 1.1 Packing Integer Programs Packing integer programs are a well-studied class of integer programs that can model several NP-complete problems, including independent set, hypergraph k-matching [19, 1], job-shop scheduling <ref> [23, 28, 33, 20] </ref> and many flow and path related problems. Many of these problems seem to be difficult to approximate, and not much is known about their worst-case approximation ratios. Following [30] a packing integer program (PIP) is defined as follows. Definition 1. <p> When A 2 f0; 1g mfin ; we say that we have a (0; 1)-PIP. Previous Work on Packing Programs. The basic techniques for approximating packing integer programs have been the randomized rounding technique of Raghavan and Thompson [24, 25] and the work of Plotkin, Shmoys and Tar-dos <ref> [23] </ref>. Let y fl denote the optimum value of the linear relaxation. <p> The algorithm is surprisingly simple but the performance guarantee matches the integrality gap known for the problem [7]. Application 3: routing with low congestion. A problem that has received a lot of attention in the literature on routing problems (e.g. <ref> [25, 17, 23, 22, 10, 14] </ref>) is that of minimizing congestion, i.e. the factor by which one is allowed to scale up capacities in order to achieve an optimal (or near-optimal) realizable set.
Reference: 24. <author> P. Raghavan. </author> <title> Probabilistic construction of deterministic algorithms: approximating packing integer programs. </title> <journal> J. of Computer and System Sciences, </journal> <volume> 37 </volume> <pages> 130-143, </pages> <year> 1988. </year>
Reference-contexts: When A 2 f0; 1g mfin ; we say that we have a (0; 1)-PIP. Previous Work on Packing Programs. The basic techniques for approximating packing integer programs have been the randomized rounding technique of Raghavan and Thompson <ref> [24, 25] </ref> and the work of Plotkin, Shmoys and Tar-dos [23]. Let y fl denote the optimum value of the linear relaxation. <p> Denote by ff f (T ) the value of f: Step 2. Scale up all capacities by a factor of fi (log jEj) to obtain network G 0 with capacity function u 0 : Invoke Raghavan's algorithm <ref> [24] </ref> on G 0 to round f to a routing g 0 : Step 3. Scale down the flow on every path of g 0 by a factor of at most fi (log jEj) to obtain a fractional single-path routing g that is feasible for G: Step 4. <p> For the value, we can easily extend the analysis of Raghavan's algorithm to show that even with weights, it routes in G 0 a constant fraction of ff f (T ) <ref> [24] </ref>.
Reference: 25. <author> P. Raghavan and C. D. Thompson. </author> <title> Randomized rounding: a technique for provably good algorithms and algorithmic proofs. </title> <journal> Comb., </journal> <volume> 7 </volume> <pages> 365-374, </pages> <year> 1987. </year>
Reference-contexts: When A 2 f0; 1g mfin ; we say that we have a (0; 1)-PIP. Previous Work on Packing Programs. The basic techniques for approximating packing integer programs have been the randomized rounding technique of Raghavan and Thompson <ref> [24, 25] </ref> and the work of Plotkin, Shmoys and Tar-dos [23]. Let y fl denote the optimum value of the linear relaxation. <p> Let y fl denote the optimum value of the linear relaxation. Standard randomized rounding yields integral solutions of value (y fl =m 1=B ) for general PIP's and (y fl =m 1=(B+1) ) for (0; 1)-PIP's <ref> [25] </ref> (see also [29].) Srinivasan [29, 30] improved on the standard randomized rounding bounds and obtained bounds of (y fl (y fl =m) 1=(B1) ) and (y fl =ff 1=(B1) ) for general PIP's and (y fl (y fl =m) 1=B ) and (y fl =ff 1=B ) for (0; 1)-PIP's. <p> The algorithm is surprisingly simple but the performance guarantee matches the integrality gap known for the problem [7]. Application 3: routing with low congestion. A problem that has received a lot of attention in the literature on routing problems (e.g. <ref> [25, 17, 23, 22, 10, 14] </ref>) is that of minimizing congestion, i.e. the factor by which one is allowed to scale up capacities in order to achieve an optimal (or near-optimal) realizable set. <p> t k )-path is present in P (g) for some k: The optimal value of the linear relaxation of P is at least y fl since setting x j equal to z j ; 1 j ; yields a feasible fractional solution to P: By applying either standard randomized rounding <ref> [25] </ref> or Srinivasan's algorithms [29, 30] at Step 3, we obtain the claimed bounds on the objective value c T g: ut 3.3 An Application to Independent Set In this section we show how a packing formulation leads to an O ( p jV j) approximation for the following problem: find
Reference: 26. <author> N. Robertson and P. D. Seymour. </author> <title> Outline of a disjoint paths algorithm. </title> <editor> In B. Ko-rte, L. Lovasz, H. J. Promel, and A. Schrijver, eds., </editor> <title> Paths, Flows and VLSI-Layout. </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1990. </year>
Reference-contexts: In this paper we will state explicitly when we deal with the weighted version of a problem. Both the edge- and vertex-disjoint path problems are fundamental, extensively studied (see e.g. <ref> [26, 6, 27, 21, 10, 13, 3] </ref>), NP-hard problems [9], with a multitude of applications in areas such as telecommunications, VLSI and scheduling.
Reference: 27. <author> A. Schrijver. </author> <title> Homotopic routing methods. </title> <editor> In B. Korte, L. Lovasz, H. J. Promel, and A. Schrijver, eds., </editor> <title> Paths, Flows and VLSI-Layout. </title> <publisher> Springer, </publisher> <address> Berlin, </address> <year> 1990. </year>
Reference-contexts: In this paper we will state explicitly when we deal with the weighted version of a problem. Both the edge- and vertex-disjoint path problems are fundamental, extensively studied (see e.g. <ref> [26, 6, 27, 21, 10, 13, 3] </ref>), NP-hard problems [9], with a multitude of applications in areas such as telecommunications, VLSI and scheduling.
Reference: 28. <author> D. B. Shmoys, C. Stein, and J. Wein. </author> <title> Improved approximation algorithms for shop scheduling problems. </title> <journal> SIAM J. on Computing, </journal> <volume> 23(3) </volume> <pages> 617-632, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: We now elaborate on our results under the rounding approach, providing further background as necessary. 1.1 Packing Integer Programs Packing integer programs are a well-studied class of integer programs that can model several NP-complete problems, including independent set, hypergraph k-matching [19, 1], job-shop scheduling <ref> [23, 28, 33, 20] </ref> and many flow and path related problems. Many of these problems seem to be difficult to approximate, and not much is known about their worst-case approximation ratios. Following [30] a packing integer program (PIP) is defined as follows. Definition 1.
Reference: 29. <author> A. Srinivasan. </author> <title> Improved approximations of packing and covering problems. </title> <booktitle> In Proc. 27th Ann. ACM Symp. on Theory of Computing, </booktitle> <pages> 268-276, </pages> <year> 1995. </year>
Reference-contexts: For convenience we call b i the capacity of row i: The restrictions on the values of the entries of A; b; c are wlog; the values in an arbitrary packing program can be scaled to satisfy the above requirements <ref> [29] </ref>. We will state explicitly when some packing program in this paper deviates from these requirements. When A 2 f0; 1g mfin ; we say that we have a (0; 1)-PIP. Previous Work on Packing Programs. <p> Let y fl denote the optimum value of the linear relaxation. Standard randomized rounding yields integral solutions of value (y fl =m 1=B ) for general PIP's and (y fl =m 1=(B+1) ) for (0; 1)-PIP's [25] (see also <ref> [29] </ref>.) Srinivasan [29, 30] improved on the standard randomized rounding bounds and obtained bounds of (y fl (y fl =m) 1=(B1) ) and (y fl =ff 1=(B1) ) for general PIP's and (y fl (y fl =m) 1=B ) and (y fl =ff 1=B ) for (0; 1)-PIP's. <p> Let y fl denote the optimum value of the linear relaxation. Standard randomized rounding yields integral solutions of value (y fl =m 1=B ) for general PIP's and (y fl =m 1=(B+1) ) for (0; 1)-PIP's [25] (see also [29].) Srinivasan <ref> [29, 30] </ref> improved on the standard randomized rounding bounds and obtained bounds of (y fl (y fl =m) 1=(B1) ) and (y fl =ff 1=(B1) ) for general PIP's and (y fl (y fl =m) 1=B ) and (y fl =ff 1=B ) for (0; 1)-PIP's. <p> present in P (g) for some k: The optimal value of the linear relaxation of P is at least y fl since setting x j equal to z j ; 1 j ; yields a feasible fractional solution to P: By applying either standard randomized rounding [25] or Srinivasan's algorithms <ref> [29, 30] </ref> at Step 3, we obtain the claimed bounds on the objective value c T g: ut 3.3 An Application to Independent Set In this section we show how a packing formulation leads to an O ( p jV j) approximation for the following problem: find a maximum weight independent
Reference: 30. <author> A. Srinivasan. </author> <title> An extension of the Lovasz Local Lemma and its applications to integer programming. </title> <booktitle> In Proc. 7th ACM-SIAM Symp. on Discrete Algorithms, </booktitle> <pages> 6-15, </pages> <year> 1996. </year>
Reference-contexts: Many of these problems seem to be difficult to approximate, and not much is known about their worst-case approximation ratios. Following <ref> [30] </ref> a packing integer program (PIP) is defined as follows. Definition 1. <p> Let y fl denote the optimum value of the linear relaxation. Standard randomized rounding yields integral solutions of value (y fl =m 1=B ) for general PIP's and (y fl =m 1=(B+1) ) for (0; 1)-PIP's [25] (see also [29].) Srinivasan <ref> [29, 30] </ref> improved on the standard randomized rounding bounds and obtained bounds of (y fl (y fl =m) 1=(B1) ) and (y fl =ff 1=(B1) ) for general PIP's and (y fl (y fl =m) 1=B ) and (y fl =ff 1=B ) for (0; 1)-PIP's. <p> present in P (g) for some k: The optimal value of the linear relaxation of P is at least y fl since setting x j equal to z j ; 1 j ; yields a feasible fractional solution to P: By applying either standard randomized rounding [25] or Srinivasan's algorithms <ref> [29, 30] </ref> at Step 3, we obtain the claimed bounds on the objective value c T g: ut 3.3 An Application to Independent Set In this section we show how a packing formulation leads to an O ( p jV j) approximation for the following problem: find a maximum weight independent
Reference: 31. <author> A. Srinivasan. </author> <title> Improved approximations for edge-disjoint paths, unsplittable flow and related routing problems. </title> <booktitle> In Proc. 38th Ann. Symp. on Foundations of Computer Science, </booktitle> <pages> 416-425, </pages> <year> 1997. </year>
Reference-contexts: The fractional relaxation is typically multicommodity flow and the rounding techniques used to date involved sophisticated and non-standard use of randomized rounding <ref> [31] </ref>. The objective value of the resulting solution is compared to the fractional optimum y fl , which is an upper bound on the integral optimum, OPT. This approach has been the more successful one and recently yielded the first approximation algorithm for uniform unsplittable flow [31] which is the special <p> use of randomized rounding <ref> [31] </ref>. The objective value of the resulting solution is compared to the fractional optimum y fl , which is an upper bound on the integral optimum, OPT. This approach has been the more successful one and recently yielded the first approximation algorithm for uniform unsplittable flow [31] which is the special case of unsplittable flow where all the capacities have the same value. Let d denote the dilation of the fractional solution, i.e. the maximum length of a flow path in the fractional relaxation. <p> approach yields, for unweighted uniform unsplittable flow (and thus for unweighted edge-disjoint paths as well) a realizable set of size (maxf (y fl ) 2 =jEj; y fl = p jEj; y fl =dg) and an (maxf (y fl ) 2 =jEj; y fl =dg) bound for the weighted version <ref> [31] </ref> . <p> The (OP T = p jV j) bound is the best known bound to date for vertex disjoint paths. routing approach rounding approach unweighted EDP OPT p jEj jE o j jE o j ; OPT y fl jEj jEj <ref> [31] </ref>, y fl weighted EDP | y fl p ; (y fl ) 2 d [31] weighted UCUFP | (y fl ) 2 jEj [31], y fl weighted UFP | y fl log jEj jEj jEj log 3 jEj , y fl Table 1. <p> jV j) bound is the best known bound to date for vertex disjoint paths. routing approach rounding approach unweighted EDP OPT p jEj jE o j jE o j ; OPT y fl jEj jEj <ref> [31] </ref>, y fl weighted EDP | y fl p ; (y fl ) 2 d [31] weighted UCUFP | (y fl ) 2 jEj [31], y fl weighted UFP | y fl log jEj jEj jEj log 3 jEj , y fl Table 1. Known approximation bounds for edge-disjoint paths (EDP), uniform capacity unsplittable flow (UCUFP), and general unsplittable flow (UFP), -notation omitted. <p> date for vertex disjoint paths. routing approach rounding approach unweighted EDP OPT p jEj jE o j jE o j ; OPT y fl jEj jEj <ref> [31] </ref>, y fl weighted EDP | y fl p ; (y fl ) 2 d [31] weighted UCUFP | (y fl ) 2 jEj [31], y fl weighted UFP | y fl log jEj jEj jEj log 3 jEj , y fl Table 1. Known approximation bounds for edge-disjoint paths (EDP), uniform capacity unsplittable flow (UCUFP), and general unsplittable flow (UFP), -notation omitted. <p> Armed with both this new algorithm and existing algorithms for general packing integer programs, we show how packing formulations both provide a unified and simplified derivation of many results from <ref> [31] </ref> and lead to new ones. In particular, we obtain the first approximation algorithm for weighted multiple-source unsplittable flow on networks with arbitrary demands and capacities and the first approximation algorithm for weighted vertex-disjoint paths. <p> For example the approximation for edge-disjoint paths becomes (maxfy fl (y fl =jEj log jEj) 1=B ; y fl =jEj 1=(B+1) ; y fl =d 1=B g); when the num-ber of connection requests is O (jEj): Our congestion tradeoffs generalize previous work by Srinivasan <ref> [31] </ref> who showed the (y fl =d 1=B ) tradeoff for uniform capacity unsplittable flow. We do not state the tradeoffs explicitly for the various problems since they can be obtained easily by simple modifications to the given algorithms. Application 4: Independent Set in the square of a graph. <p> Independently of our work, Baveja and Srinivasan (personal communication) have obtained results similar to ours for approximating vertex-disjoint paths under the rounding approach, unsplittable flow and column-restricted packing integer programs. Their work builds on the methods in <ref> [31] </ref>. 2 Approximating a column-restricted PIP In this section we present the approximation algorithm for column-restricted PIP's. Let P = (A; b; c) be a column-restricted PIP.
Reference: 32. <author> A. Srinivasan and C.-P. Teo. </author> <title> A constant-factor approximation algorithm for packet routing and balancing local vs. global criteria. </title> <booktitle> In Proc. 29th Ann. ACM Symp. on Theory of Computing, </booktitle> <pages> 636-643, </pages> <year> 1997. </year>
Reference-contexts: Typically this is a multicommodity flow problem. We then explicitly use the solution x to guide the formation of a column-restricted or (0; 1) PIP. A related usage of a solution to the linear relaxation of integer programs in a different context can be found in <ref> [8, 32] </ref>. An integral approximate solution to the created PIP will be an approximate solution to the original disjoint path problem (with possibly some small degradation in the approximation factor). This integral solution can be found using existing algorithms for approximating PIP's as a black box.
Reference: 33. <author> C. Stein. </author> <title> Approximation algorithms for multicommodity flow and shop scheduling problems. </title> <type> PhD thesis, </type> <institution> MIT, </institution> <address> Cambridge, MA, </address> <month> August </month> <year> 1992. </year>
Reference-contexts: We now elaborate on our results under the rounding approach, providing further background as necessary. 1.1 Packing Integer Programs Packing integer programs are a well-studied class of integer programs that can model several NP-complete problems, including independent set, hypergraph k-matching [19, 1], job-shop scheduling <ref> [23, 28, 33, 20] </ref> and many flow and path related problems. Many of these problems seem to be difficult to approximate, and not much is known about their worst-case approximation ratios. Following [30] a packing integer program (PIP) is defined as follows. Definition 1.
Reference: 34. <author> P. </author> <title> Underground. On graphs with hamiltonian squares. </title> <journal> Disc. Math., </journal> <volume> 21:323, </volume> <year> 1978. </year>
Reference-contexts: approximation ratio cannot be polynomially improved in the sense that no (n=4) 1=2" approximation, for any fixed " &gt; 0; can be obtained in polynomial time unless N P = ZP P: Studying NP-hard problems in powers of graphs is a topic that has received some attention in the literature <ref> [5, 34, 18, 4] </ref>. Independently of our work, Baveja and Srinivasan (personal communication) have obtained results similar to ours for approximating vertex-disjoint paths under the rounding approach, unsplittable flow and column-restricted packing integer programs.
References-found: 34

