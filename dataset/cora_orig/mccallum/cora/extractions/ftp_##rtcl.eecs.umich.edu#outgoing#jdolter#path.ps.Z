URL: ftp://rtcl.eecs.umich.edu/outgoing/jdolter/path.ps.Z
Refering-URL: http://www.eecs.umich.edu/RTCL/harts/
Root-URL: http://www.cs.umich.edu
Title: Performance Analysis of Virtual Cut-through Switching in HARTS: A Hexagonal Mesh Multicomputer  
Author: James W. Dolter, P. Ramanathan, and Kang G. Shin 
Keyword: Index Terms: Distributed real-time systems, wrapped hexagonal mesh, virtual cut through, message buffering and delivery, queueing models.  
Address: Ann Arbor, Michigan 48109-2122  
Affiliation: Real-Time Computing Laboratory Department of Electrical Engineering and Computer Science The University of Michigan  
Note: Appeared in IEEE Transactions on Computers  
Email: E-Mail Address: kgshin@alps.eecs.umich.edu  
Phone: (313) 763-0391;  
Date: (June 91)  
Abstract: This paper presents a formal analysis of virtual cut-through in a C-wrapped hexagonal mesh multicomputer, called the HARTS (Hexagonal Architecture for Real-Time Systems), which is currently being built at the Real-Time Computing Laboratory, The University of Michigan. In virtual cut-through, packets arriving at an intermediate node are forwarded to the next node in the route without buffering if a circuit can be established to the next node. The hexagonal mesh is first characterized using a combinatorial analysis to determine the probability that a packet will establish a cut-through at an intermediate node. Given this parameter the probability distribution function for packet delivery times in HARTS is derived. The delivery times obtained from the analytic model are then compared against results collected from a simulator of the routing hardware designed for use in HARTS. The results from both the analytic model and the simulator further reinforce the choice of the virtual cut-through routing scheme for use in HARTS. fl The work reported here is supported in part by the Office of Naval Research under Contracts N00014-85-K-0122 and N00014-85-K-0531. Any opinions, findings and conclusions or recommendations expressed in this paper are those of the authors and do not necessarily reflect the view of the ONR. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M.-S. Chen, K. G. Shin, and D. D. Kandlur, </author> <title> "Addressing, routing and broadcasting in hexagonal mesh multiprocessors," </title> <journal> IEEE Trans. Computers, </journal> <volume> vol. 39, no. 1, </volume> <pages> pp. 10-18, </pages> <month> January </month> <year> 1990. </year>
Reference-contexts: 1 Introduction This paper derives an analytical model to evaluate the message passing scheme in a distributed computing system based on a hexagonal mesh architecture <ref> [1, 5, 6] </ref>. This effort is part of a larger research project to design and implement an experimental distributed real-time system, called the HARTS (Hexagonal Architecture for Real-Time Systems), at the Real-Time Computing Laboratory (RTCL), The University of Michigan. <p> A set of application processors along with a network processor form a node of HARTS. These nodes are interconnected in a C-wrapped 1 hexagonal mesh topology <ref> [1] </ref>. The application processors execute real-time tasks and the network processor handles all the intra- and inter- node communications. Since real-time applications normally require short response times, simple store-and-forward message passing schemes are not suitable for HARTS. <p> For example, in Figure 1 (b), the last processor in R 2 along the horizontal direction, namely node 2, is wrapped to the first processor in R 4 , node 3. A C-type wrapping has several nice properties as reported in <ref> [1] </ref>. First, this wrapping results in a homogeneous network. Consequently, any node can view itself as the center (labeled as node 0) of the mesh. Second, the diameter of a H-mesh of dimension e is e 1. <p> A shape is a route that a packet can traverse. The above definition of a shape is motivated by the fact that all minimal routes between any pair of nodes are formed by links along one or two directions only <ref> [1] </ref>.
Reference: [2] <author> J. W. Dolter, P. Ramanathan, and K. G. Shin, </author> <title> "A microprogrammable VLSI routing controller for HARTS," </title> <booktitle> in International Conference on Computer Design: VLSI in Computers, </booktitle> <pages> pp. 160-163, </pages> <month> October </month> <year> 1989. </year> <note> 21 Appeared in IEEE Transactions on Computers (June 91) 22 Appeared in IEEE Transactions on Computers (June 91) 23 Appeared in IEEE Transactions on Computers (June 91) 24 Appeared in IEEE Transactions on Computers (June 91) 25 Appeared in IEEE Transactions on Computers (June 91) </note>
Reference-contexts: At each node on a shortest path there are at most two different neighbors of the node to which the shortest path runs. Fourth, based on this addressing scheme it is possible to devise a simple routing and broadcast algorithms that can be efficiently implemented in hardware <ref> [2] </ref>. <p> In contrast to the analytical model, the simulator makes very few simplifying assumptions in modeling the behavior of virtual cut-through in HARTS. The simulator accurately models the delivery of each message by emulating the timing of the routing hardware <ref> [2] </ref> along the route of a packet at the microcode level. Also captured are the internal bus access overheads that the packets experience if they are unable to cut-through an intermediate node.
Reference: [3] <author> P. Kermani and L. Kleinrock, </author> <title> "Virtual cut-through: A new computer communication switching technique," </title> <journal> Computer Networks, </journal> <volume> vol. 3, no. 4, </volume> <pages> pp. 267-286, </pages> <month> September </month> <year> 1979. </year>
Reference-contexts: Since real-time applications normally require short response times, simple store-and-forward message passing schemes are not suitable for HARTS. Consequently, HARTS uses a message passing scheme commonly referred to as the virtual cut-through <ref> [3] </ref>. In virtual cut-through, packets arriving at an intermediate node are forwarded to the next node in the route without buffering if a circuit can be established to the next node. <p> However, the actual improvement it offers over a packet-switching scheme for packet deliveries has not yet been clearly evaluated. Kermani and Kleinrock carried out a mean value analysis of the performance of virtual cut-through for a general interconnection network <ref> [3] </ref>. However, a mean value analysis is not adequate for real-time applications because worst-case communication delays often play an important role in the design of real-time systems. <p> The authors of <ref> [3] </ref> wanted to avoid any dependence on the interconnection topology in their analysis. As a result, they assumed that the probability of a packet getting buffered at an intermediate node is a given parameter. <p> As a result, they assumed that the probability of a packet getting buffered at an intermediate node is a given parameter. Since one cannot get a reasonable estimate of the performance of virtual cut-through without an accurate estimate of the probability of buffering, the approach in <ref> [3] </ref> becomes useful only if we can accurately determine the probability of buffering for a given interconnection topology. However, determining the probability of buffering at an intermediate node for a given topology is not simple. <p> Consequently, to evaluate the probability of buffering, we have to account for the fraction of packets generated at other nodes that pass through each given node. In contrast to <ref> [3] </ref>, in this paper, we first derive the probability that a packet is destined for a particular node by characterizing the hexagonal mesh topology. This probability of branching is then used as a parameter in a queueing network to determine the throughput rates at each node in the mesh. <p> A3: The length of a packet is regenerated at each intermediate node of its route indepen dently of its length at other intermediate nodes. A4: Nodes have no preferential direction for communication. Assumptions A1-A3 are consistent with Kermani and Kleinrock's assumptions in <ref> [3] </ref>. Although not completely accurate, it has been shown through empirical studies that these assumptions lead to a fairly accurate characterization of message arrivals. Assumption A4 implies that all minimal length paths between a source and destination are equally used.
Reference: [4] <author> L. Kleinrock, </author> <title> Queueing systems, volume I: Theory, </title> <publisher> John Wiley & Sons, </publisher> <year> 1975. </year>
Reference-contexts: It should be noted that p b only depends on q k and the topology. Lemma 5 The throughput at each service center is 6 G P e1 Proof : Jackson theorem <ref> [4] </ref> states that the total throughput T i at service center i is given by the solution to the set of traffic flow equations T i = G + k=0 By assumption A4 and the homogeneous nature of the C-wrapped H-mesh all T i are equal.
Reference: [5] <author> A. J. Martin, </author> <title> "The torus: An exercise in constructing a processing surface," </title> <booktitle> in Proc. Caltech Conf. on VLSI, </booktitle> <pages> pp. 527-537, </pages> <year> 1981. </year>
Reference-contexts: 1 Introduction This paper derives an analytical model to evaluate the message passing scheme in a distributed computing system based on a hexagonal mesh architecture <ref> [1, 5, 6] </ref>. This effort is part of a larger research project to design and implement an experimental distributed real-time system, called the HARTS (Hexagonal Architecture for Real-Time Systems), at the Real-Time Computing Laboratory (RTCL), The University of Michigan.

References-found: 5

