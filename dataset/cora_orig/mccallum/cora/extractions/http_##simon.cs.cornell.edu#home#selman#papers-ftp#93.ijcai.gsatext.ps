URL: http://simon.cs.cornell.edu/home/selman/papers-ftp/93.ijcai.gsatext.ps
Refering-URL: http://simon.cs.cornell.edu/home/selman/papers-ftp/papers.html
Root-URL: 
Email: fselman, kautzg@research.att.com  
Title: Domain-Independent Extensions to GSAT: Solving Large Structured Satisfiability Problems  
Author: Bart Selman and Henry Kautz 
Address: Murray Hill, NJ 07974  
Affiliation: AT&T Bell Laboratories  
Abstract: GSAT is a randomized local search procedure for solving propositional satisfiability problems (Selman et al. 1992). GSAT can solve hard, randomly generated problems that are an order of magnitude larger than those that can be handled by more traditional approaches such as the Davis-Putnam procedure. GSAT also efficiently solves encodings of graph coloring problems, N-queens, and Boolean induction. However, GSAT does not perform as well on handcrafted encodings of blocks-world planning problems and formulas with a high degree of asymmetry. We present three strategies that dramatically improve GSAT's performance on such formulas. These strategies, in effect, manage to uncover hidden structure in the formula under considerations, thereby significantly extending the applicability of the GSAT algorithm.
Abstract-found: 1
Intro-found: 1
Reference: <author> Bertsimas, D. and Tsitsiklis, J. </author> <year> (1992). </year> <title> Simulated Annealing, in Probability and Algorithms, </title> <publisher> National Academy Press, </publisher> <address> Washington, D.C., </address> <pages> 17-29. </pages>
Reference: <author> Buro, M. and Kleine Buning, H. </author> <year> (1992). </year> <title> Report on a SAT competition. </title> <type> Technical Report #. 110, </type> <institution> Dept. of Mathematics and Informatics, University of Paderborn, Germany, </institution> <note> November 1992 Cheeseman, </note> <author> P. and Kanefsky, B. and Taylor, W.M. </author> <year> (1991). </year> <title> Where the Really Hard Problems Are. </title> <booktitle> Proceedings IJCAI-91, </booktitle> <year> 1991, </year> <pages> 163-169. </pages>
Reference: <author> Crawford, J.M. and Auton, L.D. </author> <title> (1993) Experimental Results on the Cross-Over Point in Satisfiability Problems. </title> <note> Proceedings AAAI-93, to appear. </note>
Reference: <author> Davis, E. </author> <title> (1987) Genetic Algorithms and Simulated Annealing. </title> <booktitle> Pitman Series of Research Notes in Artificial Intelligence, </booktitle> <address> London: </address> <publisher> Pitman; Los Altos, </publisher> <address> CA: </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Given the success of these strategies and the fact that they are not very specific to the GSAT algorithm, it appears that they also hold promise for improving other methods for solving hard combinatorial search problems, such as, simulated annealing and genetic algorithms <ref> (Davis 1987) </ref>. In our future research we hope to develop a precise formal understanding of the benefits and applicability of each technique.
Reference: <author> Feynman, R.P., Leighton, R.B., and Sand, M. </author> <year> (1989). </year> <title> The Feynman Lectures on Physics. Vol. I, Addison-Wesley Co, Reading, MA. 11 A similar situation exists with regard to the huge body of research on simulated annealing. To this day there is no convincing theoretical explanation as to why simulated annealing is as effective as it is in practice, and not just in the asymptotic limit (Bertsimas and Tsitsiklis 1992). 12 Experimental data and code is available via ftp. For requests, contact the first author at selman@research.att.com. </title> <note> Related papers are available via anonymous ftp to research.att.com in dist/ai. </note>
Reference-contexts: Papadimitriou (1991) shows that such a surprisingly simple randomized strategy finds assignments of 2CNF formulas (satisfiable ones, of course), in O (n 2 ) steps with probability approaching one, where n is the number of propositional letters. His proof exploits properties of random walks <ref> (Feynman et al. 1989) </ref>. Note the difference with GSAT: simply flipping the assignment of any variable in some unsatisfied clause may actually increase the total number of unsatisfied clauses.
Reference: <author> Davis, M. and Putnam, H. </author> <year> (1960). </year> <title> A computing procedure for quantification theory. </title> <journal> J. Assoc. Comput. Mach., </journal> <volume> 7, </volume> <year> 1960, </year> <pages> 201-215. </pages>
Reference: <author> Ginsberg, M. and Jonsson, A. </author> <year> (1992). </year> <type> Personal communication, </type> <month> April </month> <year> 1992. </year>
Reference-contexts: In exploring this issue, we found that GSAT indeed has problems on certain classes of highly structured formulas. Examples are propositional encodings of blocks-world planning problems (Kautz and Selman 1992), and graph coloring problems with a high-degree of asymmetry <ref> (Ginsberg and Jonsson 1992) </ref>. 1 1 We thank Matt Ginsberg and Ari Jonsson for bringing After studying GSAT's difficulty on such problem instances, we discovered general, domain-independent extensions that dramatically improve GSAT's performance. In effect, these extensions manage to uncover the underlying structure in the formulas. <p> (Morris 1993). # unsat clauses # of times reached at end of try basic weights 0 0 80 2 0 0 4 0 0 6 0 2 8 0 2 10-19 0 181 Table 2: Unsatisfied clause distribution for GSAT with and without weights on an asymmetrical graph coloring problem <ref> (Ginsberg and Jonsson 1992) </ref>. It is a 50 node graph with a 4 coloring. The encoding has 200 variables and 2262 clauses. cal coloring problems in 1.3 seconds (after only 11 tries with 1000 flips per try). This is comparable with the time used by efficient backtrack style procedures.
Reference: <author> Gu, J. </author> <year> (1992). </year> <title> Efficient local search for very large-scale satisfiability problems. </title> <journal> Sigart Bulletin, </journal> <volume> vol. 3, no. 1, </volume> <year> 1992, </year> <pages> 8-12. </pages>
Reference: <author> Johnson, D.S., Aragon, C.R., McGeoch, L.A., and Schevon, C. </author> <title> (1991) Optimization by simulated annealing: an experimental evaluation; part ii, graph coloring and number partioning. </title> <journal> Operations Research, </journal> <volume> 39(3) </volume> <pages> 378-406, </pages> <year> 1991. </year>
Reference-contexts: A common criticism is that GSAT might not do as well on problems with a much more intricate underlying structure. Similar criticism has been raised against other randomized local search type procedures, such as simulated annealing <ref> (Johnson et al. 1991) </ref>. In exploring this issue, we found that GSAT indeed has problems on certain classes of highly structured formulas. <p> Using special heuristics, the most efficient ones can handle up to around 350 variable formulas Selman et al. also showed that GSAT performs well on propositional encodings of the N-queens problem, hard instances of graph coloring problems <ref> (Johnson et al. 1991) </ref>, and Boolean induction problems (Kamath et al. 1992). Results on encodings of blocks-world planning problems were not as good though (Kautz and Selman 1992), especially compared with DP's performance. The problem with the blocks-world planning formulas appears to be their highly structured character. <p> The problems considered are propositional encodings of graph coloring problems <ref> (Johnson et al. 1991) </ref>. The "best methods" times are for the best and the second best specialized graph coloring algorithm as reported by Johnson et al.
Reference: <author> Jonsson, A.K., and Ginsberg, </author> <title> M.L. </title> <booktitle> (1993) Experimenting with New Systematic and Nonsystematic Search Techniques Proceedings of the AAAI Spring Symposia, </booktitle> <year> 1993. </year>
Reference-contexts: results 3.1 Adding Weights Ginsberg and Jonsson (1992) supplied us with some instances of graph coloring where GSAT did not manage to find a solution, even after a large number of tries each with many flips. 5 Their dependency-directed backtracking method could find solutions to these problems with little effort <ref> (Jonsson and Ginsberg 1993) </ref>. In running GSAT on these problems, we discovered that at the end of almost every try the same set of clauses remained unsatisfied. As it turns out, the problems contain strong asymmetries. The effect of asymmetry is best illustrated with the graph shown in Figure 2.
Reference: <author> Kamath, A.P., Karmarkar, N.K., Ramakrishnan, K.G., and Resende, M.G.C. </author> <year> (1991). </year> <title> A continuous approach to inductive inference. </title> <journal> Mathematical Programming, </journal> <volume> 57, </volume> <year> 1992, </year> <pages> 215-238. </pages>
Reference: <author> Kautz, H.A. and Selman, B. </author> <year> (1992). </year> <title> Planning as satis-fiability. </title> <booktitle> Proceedings ECAI92, </booktitle> <address> Vienna, Austria. </address>
Reference-contexts: Similar criticism has been raised against other randomized local search type procedures, such as simulated annealing (Johnson et al. 1991). In exploring this issue, we found that GSAT indeed has problems on certain classes of highly structured formulas. Examples are propositional encodings of blocks-world planning problems <ref> (Kautz and Selman 1992) </ref>, and graph coloring problems with a high-degree of asymmetry (Ginsberg and Jonsson 1992). 1 1 We thank Matt Ginsberg and Ari Jonsson for bringing After studying GSAT's difficulty on such problem instances, we discovered general, domain-independent extensions that dramatically improve GSAT's performance. <p> Results on encodings of blocks-world planning problems were not as good though <ref> (Kautz and Selman 1992) </ref>, especially compared with DP's performance. The problem with the blocks-world planning formulas appears to be their highly structured character. <p> However, using our walk strategy, we can still substantially improve GSAT's performance on these formulas, as is shown in Table 4. As a second example of the effectiveness of the walk strategy, we consider encodings of various blocks-world planning problems <ref> (Kautz and Selman 1992) </ref>. As we discussed above, such formulas are very challenging for basic GSAT. Examination of the best assignments found when GSAT fails to find a satisfying assignment indicates that difficulties arise from extremely deep local minima.
Reference: <author> McCarthy, J. and Hayes, P.J. </author> <title> (1969) Some Philosophical Problems From the Standpoint of Artificial Intelligence, </title> <booktitle> in Machine Intelligence 4 , Chichester, </booktitle> <address> England: </address> <publisher> Ellis Horwood, 463ff. </publisher>
Reference: <author> Larrabee, T. and Tsuji, Y. </author> <title> (1993) Evidence for a Satis-fiability Threshold for Random 3CNF Formulas. </title> <booktitle> Proceedings AAAI Spring Symposia, </booktitle> <year> 1993. </year>
Reference: <author> Minton, S., Johnston, M.D., Philips, A.B., and Laird, P. </author> <title> (1990) Solving large-scale constraint satisfaction an scheduling problems using a heuristic repair method. </title> <booktitle> Proceedings AAAI-90, </booktitle> <year> 1990, </year> <pages> 17-24. </pages> <note> Extended version appeared in Artificial Intelligence, </note> <year> 1992. </year>
Reference: <author> Mitchell, D., Selman, B., and Levesque, H.J. </author> <year> (1992). </year> <title> Hard and easy distributions of SAT problems. </title> <booktitle> Proceedings AAAI92, </booktitle> <address> San Jose, CA, </address> <pages> 459-465. </pages>
Reference: <author> Morris, P. </author> <year> (1993). </year> <title> Breakout Method for Escaping from Local Minima. </title> <type> AAAI-93, </type> <note> to appear. </note>
Reference-contexts: We usually set K equal to 1. This strategy automatically "discovers" hidden asymmetries of the formula under consideration. Using the weights, GSAT solves a typical instance of Ginsberg and Jonsson's asymmetri 6 Paul Morris has independently proposed a similar approach <ref> (Morris 1993) </ref>. # unsat clauses # of times reached at end of try basic weights 0 0 80 2 0 0 4 0 0 6 0 2 8 0 2 10-19 0 181 Table 2: Unsatisfied clause distribution for GSAT with and without weights on an asymmetrical graph coloring problem (Ginsberg
Reference: <author> Papadimitriou, C.H. </author> <year> (1991). </year> <title> On Selecting a Satisfying Truth Assignment. </title> <booktitle> Proc. of the Conference on the Foundations of Computer Science, </booktitle> <year> 1991, </year> <pages> 163-169. </pages>
Reference: <author> Papadimitriou, C.H., Steiglitz, K. </author> <year> (1982). </year> <title> Combinatorial optimization. </title> <address> Englewood Cliffs, NJ: </address> <publisher> Prentice-Hall, Inc., </publisher> <year> 1982. </year>
Reference-contexts: See Figure 1. (For a related approach, see Gu (1992). Also, see Minton et al. (1990) for a very successful application of local search to scheduling problems.) GSAT mimics the standard local search procedures used for finding approximate solutions to optimization problems <ref> (Papadimitriou and Steiglitz 1982) </ref> in that it only explores potential solutions that are "close" to the one currently being considered. Specifically, we explore the set of assignments that differ from the current one on only one variable.
Reference: <author> Selman, B. and Kautz, H.A. </author> <year> (1993). </year> <title> An Empirical Study of Greedy Local Search for Satisfiability Testing. </title> <journal> Proceedings AAAI93, </journal> <note> to appear. </note>
Reference: <author> Selman, B. and Levesque, H.J., and Mitchell, D.G. </author> <year> (1992). </year> <title> A New Method for Solving Hard Satisfi-ability Problems. </title> <booktitle> Proceedings AAAI92, </booktitle> <address> San Jose, CA, </address> <pages> 440-446. </pages>
Reference-contexts: Similar criticism has been raised against other randomized local search type procedures, such as simulated annealing (Johnson et al. 1991). In exploring this issue, we found that GSAT indeed has problems on certain classes of highly structured formulas. Examples are propositional encodings of blocks-world planning problems <ref> (Kautz and Selman 1992) </ref>, and graph coloring problems with a high-degree of asymmetry (Ginsberg and Jonsson 1992). 1 1 We thank Matt Ginsberg and Ari Jonsson for bringing After studying GSAT's difficulty on such problem instances, we discovered general, domain-independent extensions that dramatically improve GSAT's performance. <p> Results on encodings of blocks-world planning problems were not as good though <ref> (Kautz and Selman 1992) </ref>, especially compared with DP's performance. The problem with the blocks-world planning formulas appears to be their highly structured character. <p> However, using our walk strategy, we can still substantially improve GSAT's performance on these formulas, as is shown in Table 4. As a second example of the effectiveness of the walk strategy, we consider encodings of various blocks-world planning problems <ref> (Kautz and Selman 1992) </ref>. As we discussed above, such formulas are very challenging for basic GSAT. Examination of the best assignments found when GSAT fails to find a satisfying assignment indicates that difficulties arise from extremely deep local minima.
References-found: 21

