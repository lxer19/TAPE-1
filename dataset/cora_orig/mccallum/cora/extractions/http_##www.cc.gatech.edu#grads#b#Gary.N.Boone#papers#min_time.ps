URL: http://www.cc.gatech.edu/grads/b/Gary.N.Boone/papers/min_time.ps
Refering-URL: http://www.cs.gatech.edu/grads/b/Gary.N.Boone/professional.html
Root-URL: 
Email: gboone@cc.gatech.edu  
Title: Minimum-Time Control of the Acrobot  
Author: Gary Boone 
Address: Atlanta, GA 30332-0280  
Affiliation: College of Computing, Georgia Institute of Technology,  
Abstract: The Acrobot, a two-link arm that is unac-tuated at the first joint, is challenging to control because it is an underactuated, nonlinear, continuous system. We describe a direct search algorithm for finding swingup trajectories for the Acrobot. The algorithm uses a lookahead search that maximizes the Acrobot's total energy in an N-step window. Because the controls are extremal and the number of switches in the window limited, the algorithm is fast. Nevertheless, the resulting trajectories are near optimal. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Richard M. Murray and John Hauser, </author> <title> "A case study in approximate linearization: The acrobot example", </title> <type> Technical Report UCB/ERL/M91/46, </type> <institution> University of California, Berkeley, Electronics Research Laboratory, College of Engineering, </institution> <year> 1991. </year>
Reference: [2] <author> Mark W. Spong, </author> <title> "The swing up control problem for the acrobot", </title> <journal> IEEE Control Systems Magazine, </journal> <volume> vol. 15, </volume> <pages> pp. 49-55, </pages> <month> feb </month> <year> 1995. </year>
Reference-contexts: Feedback linearization can require unbounded control [16]. The previous Acrobot controllers based on feedback linearization have required unbounded controls. Typically, the trajectory is generated by a heuristic that pumps energy into the system by swinging the lower link in phase with the upper link [5], <ref> [2] </ref>, [10], [11]. This heuristic will cause the acrobot to swing higher with each swing. However, pumping is not the right activity when the system is near the goal.
Reference: [3] <author> Richard S. Sutton, </author> <title> "Generalization in reinforcement learning: Successful examples using sparse coarse coding", </title> <booktitle> in Neural Information Processing Systems 8, </booktitle> <address> Cambridge, MA, </address> <year> 1996. </year> <note> MIT Press, To appear. </note>
Reference-contexts: Thus, minimum time Acrobot controllers are bang-bang, provided that the optimal trajectories have no singular arcs. We assume they do not, based on our observation that the best solutions were almost always bang-bang, even when a third, null action control was allowed as defined in <ref> [3] </ref>. The greatest limitation of direct searches is their computational cost. However, because the Acrobot has only one control, and because we assume it is bang-bang for minimum-time problems, searching is practical for the Acrobot swingup problem.
Reference: [4] <author> Richard S. Sutton, </author> <title> "Learning to predict by the methods of temporal differences", </title> <journal> Machine Learning, </journal> <volume> vol. 3, </volume> <pages> pp. 9-44, </pages> <year> 1988. </year>
Reference: [5] <author> Gerald DeJong and Mark W. Spong, </author> <title> "Swinging up the acrobot: An example of intelligent control", </title> <booktitle> in Proceedings of the American Control Conference, </booktitle> <pages> pp. 2158-2162, </pages> <address> Baltimore, MD, </address> <month> June </month> <year> 1994. </year>
Reference-contexts: Feedback linearization can require unbounded control [16]. The previous Acrobot controllers based on feedback linearization have required unbounded controls. Typically, the trajectory is generated by a heuristic that pumps energy into the system by swinging the lower link in phase with the upper link <ref> [5] </ref>, [2], [10], [11]. This heuristic will cause the acrobot to swing higher with each swing. However, pumping is not the right activity when the system is near the goal.
Reference: [6] <author> John Hauser and Richard M. Murray, </author> <title> "Nonlinear controllers for non-integrable systems: The acrobot example", </title> <booktitle> in Proceedings of the 1990 American Control Conference, </booktitle> <volume> vol. 1, </volume> <pages> pp. 669-671, </pages> <address> San Diego, CA, </address> <year> 1990. </year>
Reference: [7] <author> Daniel E. Davison and Scott A. Bortoff, </author> <title> "Regulation of the acrobot", </title> <booktitle> in Proceedings of the 1995 IFAC Symposium on Nonlinear Control Systems Design, </booktitle> <pages> pp. 390-395, </pages> <address> Tahoe City, CA, </address> <month> June </month> <year> 1995. </year>
Reference-contexts: A more serious problem is that the pumping heuristic may not bring the Acrobot into the capture region of the controller. For some previous approaches, the extent of the capture region of the balancing controller must be known to decide when to switch to the balancing controller <ref> [7] </ref>. Further, it is possible for the combined system to be unstable [8]. The algorithm described here finds a single optimal trajectory that reaches the goal without switching to a balancing controller near the goal. To remain upright, a balancing controller is required.
Reference: [8] <author> Daniel E. Davison and Scott A. Bortoff, </author> <title> "Stabilization using pseudolinearization and high-gain feedback", </title> <journal> Auto-matica, </journal> <volume> vol. 33, </volume> <pages> pp. </pages> <note> (to appear), </note> <month> Feb </month> <year> 1997. </year>
Reference-contexts: For some previous approaches, the extent of the capture region of the balancing controller must be known to decide when to switch to the balancing controller [7]. Further, it is possible for the combined system to be unstable <ref> [8] </ref>. The algorithm described here finds a single optimal trajectory that reaches the goal without switching to a balancing controller near the goal. To remain upright, a balancing controller is required.
Reference: [9] <author> N. Sadegh and B. Driessen, </author> <title> "Minimum time trajectory learning", </title> <booktitle> in Proceedings of the American Control Conference, </booktitle> <address> Seattle, WA, </address> <month> June </month> <year> 1995. </year>
Reference: [10] <author> Mark W. Spong and Laurent Praly, </author> <title> "Control of underactu-ated mechanical systems using switching and saturation", in Proceedings of the Block Island Workshop on Control Using Logic Based Switching. </title> <publisher> Springer-Verlag, </publisher> <year> 1996. </year>
Reference-contexts: The gradient descent technique requires an initial trajectory and produces a locally optimized result. The N-step lookahead search avoids the need for an initial trajectory by using the energy heuristic. Controllers based on linearization are often only locally stable and can be difficult to tune <ref> [10] </ref>. Feedback linearization can require unbounded control [16]. The previous Acrobot controllers based on feedback linearization have required unbounded controls. Typically, the trajectory is generated by a heuristic that pumps energy into the system by swinging the lower link in phase with the upper link [5], [2], [10], [11]. <p> difficult to tune <ref> [10] </ref>. Feedback linearization can require unbounded control [16]. The previous Acrobot controllers based on feedback linearization have required unbounded controls. Typically, the trajectory is generated by a heuristic that pumps energy into the system by swinging the lower link in phase with the upper link [5], [2], [10], [11]. This heuristic will cause the acrobot to swing higher with each swing. However, pumping is not the right activity when the system is near the goal. For the handstand tasks, the planner must find a path that brings the Acrobot to a stop in the inverted, vertical position.
Reference: [11] <author> Mark W. Spong, </author> <title> "Energy based control of a class of under-actuated mechanical systems", </title> <booktitle> in IFAC World Congress, </booktitle> <address> San Francisco, CA, </address> <month> July </month> <year> 1996. </year>
Reference-contexts: Feedback linearization can require unbounded control [16]. The previous Acrobot controllers based on feedback linearization have required unbounded controls. Typically, the trajectory is generated by a heuristic that pumps energy into the system by swinging the lower link in phase with the upper link [5], [2], [10], <ref> [11] </ref>. This heuristic will cause the acrobot to swing higher with each swing. However, pumping is not the right activity when the system is near the goal. For the handstand tasks, the planner must find a path that brings the Acrobot to a stop in the inverted, vertical position.
Reference: [12] <author> Mathew D. Berkemeier and Ronald S. Fearing, </author> <title> "Control of a two-link robot to achieve sliding and hopping gaits", </title> <booktitle> in IEEE International Conference on Robotics and Automation, </booktitle> <address> Nice, France, </address> <year> 1992. </year>
Reference: [13] <author> Mathew D. Berkemeier and Ronald S. Fearing, </author> <title> "Control experiments on an underactuated robot with application to legged locomotion", </title> <booktitle> in IEEE International Conference on Robotics and Automation, </booktitle> <address> San Diego, CA, </address> <year> 1994. </year>
Reference: [14] <author> Eugene I. Rivin, </author> <title> Mechanical Design of Robots, </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1988. </year>
Reference: [15] <author> Arthur E. Bryson and Yu-Chi Ho, </author> <title> Applied Optimal Control, </title> <publisher> Hemisphere Publishing, </publisher> <address> New York, </address> <year> 1975. </year>
Reference-contexts: Direct search is practical for finding Acrobot trajectories because there are only two possible actions at each time step. Although the Acrobot may be defined with continuous actions, the optimizing controls will drive the actuators to their extremes. This is shown by the application of Pontryagin's Minimum Principle <ref> [15] </ref>, which states that optimal trajectories mini 5 Acrobot Window Window Traj. Total Total Task Algorithm Size Switches Steps Evals. Time (s) Height Direct Search 10 2 61 54,332 11.7 Sarsa/CMAC - 82 22,767 2066.8 Handstand Direct Search 15 2 82 269,889 73.6 Sarsa/CMAC - TABLE II. Fast Swingups.
Reference: [16] <author> Cumhur Yal~cin Kaya, </author> <title> Control in the Plane and Time-Optimal Bang-Bang Control, </title> <type> PhD thesis, </type> <institution> University of Western Australia, </institution> <year> 1995. </year>
Reference-contexts: The N-step lookahead search avoids the need for an initial trajectory by using the energy heuristic. Controllers based on linearization are often only locally stable and can be difficult to tune [10]. Feedback linearization can require unbounded control <ref> [16] </ref>. The previous Acrobot controllers based on feedback linearization have required unbounded controls. Typically, the trajectory is generated by a heuristic that pumps energy into the system by swinging the lower link in phase with the upper link [5], [2], [10], [11].
Reference: [17] <author> Hans P. Geering, Lino Guzzella, Stephan A. R. Hepner, and Christopher H. Onder, </author> <title> "Time-optimal motions of robots in assembly tasks", </title> <journal> IEEE Transactions on Automatic Control, </journal> <volume> vol. AC-31, </volume> <pages> pp. 512-518, </pages> <month> June </month> <year> 1986. </year>
Reference-contexts: If it remains zero on any arc, the Hamiltonian no longer defines the optimal control in terms of the state and costate variables. Such arcs are called singular arcs. Whether robot arms with multiple degrees of freedom, such as the Acrobot, have singular arcs remains an open question <ref> [17] </ref>. The Acrobot, whose forward dynamics are given in Equation 1, is linear with respect to the control input, T. For minimum-time problems, the one-step performance index is 1 because the cost is the count of steps taken.
Reference: [18] <author> Gary N. Boone, </author> <title> "Efficient reinforcement learning: Model-based acrobot control", </title> <booktitle> in IEEE International Conference on Robotics and Automation, </booktitle> <address> Albuquerque, NM, </address> <year> 1997, </year> <note> submitted. 7 </note>
Reference-contexts: In conjunction with learning, searching can be used to replan optimal trajectories as the model is updated by actual experience. An example of A fl search applied to model learning for the Acrobot is described in a companion article <ref> [18] </ref>. VII. Conclusion The N-step, k-switch lookahead search works well for the Acrobot because of its single actuator and because a useful heuristic is available. The energy function provides a rough gradient toward the goal that can be exploited with a lookahead search.
References-found: 18

