URL: http://www.cs.toronto.edu/~csc2532h/robotprog.ps.Z
Refering-URL: http://www.cs.toronto.edu/~csc2532h/
Root-URL: http://www.cs.toronto.edu
Email: flesperan,hector,,marcu,reiter,scherlg@ai.toronto.edu  
Title: A Logical Approach to High-Level Robot Programming A Progress Report  
Author: B. Kuipers, ed., Yves Lesperance, Hector J. Levesque, Fangzhen Lin, Daniel Marcu, Raymond Reiter, and Richard B. Scherl 
Date: November, 1994.  
Address: Orleans, LA,  Toronto, ON, M5S 1A4 Canada  
Affiliation: New  Department of Computer Science University of Toronto  
Note: From Control of the Physical World by Intelligent Systems, Papers from the 1994 AAAI Fall Symposium,  
Abstract: This paper describes a novel approach to high-level robot programming based on a highly developed logical theory of action. The user provides a specification of the robot's basic actions (their preconditions and effects on the environment) as well as of relevant aspects of the environment, in an extended version of the situation calculus. He can then specify robot behaviors in terms of these actions in a programming language that allows references to world conditions (e.g. if 9c(Pop can(c) ^ On table(c)) then pick up(c)). The programs can be executed to drive the robot. The interpreter automatically maintains the world model required to execute programs based on the specification. The theoretical framework includes a solution to the frame problem and is very general | it handles dynamic and incompletely known worlds, as well as perception actions. Given this kind of domain specification, it is also possible to support more sophisticated reasoning, such as task planning at run-time. The specification can also be used to prove the robot control programs correct. A simple mail delivery application is used to present the approach. Ongoing work on implementing the approach and handling outstanding problems, such as modeling noisy sensors, is also described. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Bacchus, F.; Grove, A. J.; Halpern, J. Y.; and Koller, D. </author> <year> 1993. </year> <title> Statistical foundations for default reasoning. </title> <booktitle> In Proceedings of the Thirteenth International Joint Conference on Artificial Intelligence, </booktitle> <pages> 563-563. </pages> <address> Chambery, France: </address> <publisher> Morgan Kaufmann Publishing. </publisher>
Reference-contexts: To model this, we need to extend the model of knowledge to incorporate (subjective) probabilities. It does appear, however, that the sort of techniques considered in <ref> (Bacchus et al. 1993) </ref> are readily applicable. The same applies to effector inaccuracy. multiple agents, concurrency, and exogenous actions: Our logical framework was first developed for single agent domains. We still need to devise a true account of exogenous actions performed by others.
Reference: <author> Etzioni, O. </author> <year> 1993. </year> <title> Intelligence without robots: A reply to Brooks. </title> <journal> AI Magazine 14(4) </journal> <pages> 7-13. </pages>
Reference-contexts: In addition to these robotics applications, we are also investigating the use of GOLOG to program software agents. These are autonomous entities that operate in large software environments such as computer networks and operating systems and assist the user by performing various tasks <ref> (Etzioni 1993) </ref>. Sample tasks include monitoring bulletin boards for interesting information and compressing files that have not been accessed for some time. Conclusion If one looks at the history of computer programming, it is quite clear that early forms of programming were based directly on features of the underlying hardware.
Reference: <author> Gelfond, M.; Lifschitz, V.; and Rabinov, A. </author> <year> 1991. </year> <title> What are the limitations of the situation calculus? In Working Notes, </title> <booktitle> AAAI Spring Symposium on Logical Formalization of Commonsense Reasoning, </booktitle> <pages> 59-69. </pages>
Reference: <author> Haas, A. R. </author> <year> 1987. </year> <title> The case for domain-specific frame axioms. </title> <editor> In Brown, F., ed., </editor> <booktitle> The Frame Problem in Artificial Intelligence: Proceedings of the 1987 Workshop, </booktitle> <pages> 343-348. </pages> <publisher> Lawrence, KA: Morgan Kaufmann Publishing. </publisher>
Reference: <author> Jenkin, M.; Milios, E.; Jasiobedzki, P.; Bains, N.; and Tran, K. </author> <year> 1993. </year> <title> Global navigation for ARK. </title> <booktitle> In Proceedings of the 1993 IEEE/RSJ International Conference on Intelligent Robots and Systems, </booktitle> <pages> 2165-2171. </pages>
Reference: <author> Kaelbling, L. P., and Rosenschein, S. J. </author> <year> 1990. </year> <title> Action and planning in embedded agents. </title> <booktitle> Robotics and Autonomous Systems 6 </booktitle> <pages> 35-48. </pages>
Reference: <author> Lesperance, Y., and Levesque, H. J. </author> <year> 1994. </year> <title> Indexical knowledge and robot action | a logical account. </title> <note> To appear in Artificial Intelligence. </note>
Reference-contexts: are typically robot-centered: more like "advance n centimeters" than "go to absolute location l," or like "grasp the object ahead" rather than "pick up object x." While both sorts of actions are representable in the situation calculus, the details of the relations between them need to be worked out (see <ref> (Lesperance & Levesque 1994) </ref>). ability: Once we consider complex actions which include non-determinism and conditions whose truth values need to be determined perceptually, we also need to be concerned with whether the agent will have enough knowledge to execute the program, whether he will be able to make whatever choices are
Reference: <author> Lesperance, Y. </author> <year> 1994. </year> <title> An approach to the synthesis of plans with perception acts and conditionals. </title>
Reference-contexts: are typically robot-centered: more like "advance n centimeters" than "go to absolute location l," or like "grasp the object ahead" rather than "pick up object x." While both sorts of actions are representable in the situation calculus, the details of the relations between them need to be worked out (see <ref> (Lesperance & Levesque 1994) </ref>). ability: Once we consider complex actions which include non-determinism and conditions whose truth values need to be determined perceptually, we also need to be concerned with whether the agent will have enough knowledge to execute the program, whether he will be able to make whatever choices are
Reference: <editor> In Gagne, D., ed., </editor> <booktitle> Working Notes of the Canadian Workshop on Distributed Artificial Intelligence. </booktitle>
Reference: <author> Levesque, H. J.; Lesperance, Y.; Lin, F.; and Scherl, R. B. </author> <year> 1994. </year> <title> Knowledge, action, and ability in the situation calculus. </title> <note> In preparation. </note>
Reference-contexts: are typically robot-centered: more like "advance n centimeters" than "go to absolute location l," or like "grasp the object ahead" rather than "pick up object x." While both sorts of actions are representable in the situation calculus, the details of the relations between them need to be worked out (see <ref> (Lesperance & Levesque 1994) </ref>). ability: Once we consider complex actions which include non-determinism and conditions whose truth values need to be determined perceptually, we also need to be concerned with whether the agent will have enough knowledge to execute the program, whether he will be able to make whatever choices are <p> Levesque 1994)). ability: Once we consider complex actions which include non-determinism and conditions whose truth values need to be determined perceptually, we also need to be concerned with whether the agent will have enough knowledge to execute the program, whether he will be able to make whatever choices are necessary <ref> (Levesque et al. 1994) </ref>. The topic of having the robot perform some run-time planning was also mentioned in the section on architectural issues. As far as we can tell, none of these pose insurmountable problems, and all of them admit to incremental solutions.
Reference: <author> Lifschitz, V. </author> <year> 1987. </year> <title> On the semantics of strips. </title> <editor> In Georgeff, M. P., and Lansky, A. L., eds., </editor> <booktitle> Reasoning about Actions and Plans, </booktitle> <pages> 1-9. </pages> <address> Los Altos, CA: </address> <publisher> Morgan Kaufmann Publishing. </publisher>
Reference-contexts: The situation calculus is enjoying a new respectability these days, partly because its expressiveness is much richer than had been commonly believed (Gelfond, Lif-schitz, & Rabinov 1991; Pinto 1994), partly because it has been found very useful for precisely characterizing the strengths and limitations of various general theories of actions <ref> (Lifschitz 1987) </ref>. For both these reasons, we have grounded all our theorizing about cognitive robotics within the situation calculus. As we shall show in the remainder of this paper, this formalism admits very natural extensions to accommodate knowledge and perception, descriptions of complex behaviors, procedural control, etc.
Reference: <author> Lin, F., and Reiter, R. </author> <year> 1994a. </year> <title> How to progress a database (and why) I. logical foundations. </title> <editor> In Doyle, J.; Sandewall, E.; and Torasso, P., eds., </editor> <booktitle> Principles of Knowledge Representation and Reasoning: Proceedings of the Fourth International Conference, </booktitle> <pages> 425-436. </pages> <address> Bonn, Germany: </address> <publisher> Morgan Kaufmann Publishing. </publisher>
Reference: <author> Lin, F., and Reiter, R. </author> <year> 1994b. </year> <title> How to progress a database II: The STRIPS connection. </title> <type> Technical report, </type> <institution> Department of Computer Science, University of Toronto. </institution> <note> To appear. </note>
Reference: <author> Lin, F., and Reiter, R. </author> <year> 1994c. </year> <title> State constraints revisited. </title> <note> To appear in the Journal of Logic and Computation, Special Issue on Action and Processes. </note>
Reference-contexts: An example of such a sentence is 8s (On (x; y; s) ! :On (y; x; s)). The assumption that there are no state constraints in the axiomatization of the domain will be made throughout this paper. In <ref> (Lin & Reiter 1994c) </ref>, the approach discussed in this section is extended to work with state constraints by compiling the effects of the state constraints into the successor state axioms.
Reference: <author> Lin, F. </author> <year> 1994. </year> <title> On goal ordering in planning: Formalizing control information in the situation calculus. </title> <note> In preparation. </note>
Reference-contexts: We are working on planning methods that are appropriate for agents operating with incomplete knowledge. Lesperance (1994) generalizes regression planning techniques to synthesize plans that include sensing acts and conditionals. Work is also under way to extend classical planners, both linear and nonlinear, to include control information <ref> (Lin 1994) </ref>. Our experience has been that the flexibility of the situation calculus is very useful for doing this. Task planning could be triggered by an explicit call in the user's program to plan to achieve a goal.
Reference: <author> Moore, R. C. </author> <year> 1980. </year> <title> Reasoning about knowledge and action. </title> <type> Technical Report 191, </type> <institution> AI Center, SRI International, </institution> <address> Menlo Park, CA. </address>
Reference: <author> Moore, R. C. </author> <year> 1985. </year> <title> A formal theory of knowledge and action. </title> <editor> In Hobbs, J. R., and Moore, R. C., eds., </editor> <title> Formal Theories of the Common Sense World. </title> <address> Norwood, NJ: </address> <publisher> Ablex Publishing. </publisher> <pages> 319-358. </pages>
Reference: <author> Nguyen, D.; Hanks, S.; and Thomas, C. </author> <year> 1994. </year> <title> The Truckworld manual. </title> <type> Technical report, </type> <institution> Department of Computer Science and Engineering, University of Washington. Forthcoming. </institution>
Reference-contexts: The first involved a simple controller for an elevator. Various treatments of sensing were investigated. Our other experiments have involved a mail delivery application along the lines of the example presented. In one case, we interfaced the GOLOG system with the Truckworld simulator <ref> (Nguyen, Hanks, & Thomas 1994) </ref>. A Truckworld domain model and GOLOG domain axiomatization were developed, and various GOLOG control programs for the robot were written. More recently, we have been working on a more realistic version of the same application.
Reference: <author> Pednault, E. P. D. </author> <year> 1989. </year> <title> ADL: Exploring the middle ground between strips and the situation calculus. </title>
Reference: <editor> In Brachman, R.; Levesque, H.; and Reiter, R., eds., </editor> <booktitle> Proceedings of the First International Conference on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> 324-332. </pages> <address> Toronto, ON: </address> <publisher> Morgan Kaufmann Publishing. </publisher>
Reference: <author> Pinto, J. A. </author> <year> 1994. </year> <title> Temporal Reasoning in the Situation Calculus. </title> <type> Ph.D. Dissertation, </type> <institution> Department of 10 Computer Science, University of Toronto, Toronto, </institution> <note> ON. Available as technical report KRR-TR-94-1. </note>
Reference-contexts: This requires allowing for situations that are more like time intervals than time points, and for actions that start and end the interval <ref> (Pinto 1994) </ref>. exception handling: The form of programming we have been considering so far is most naturally viewed as directed towards some goal or goals. But during program execution, various exceptional situations might arise which also require handling.
Reference: <author> Reiter, R. </author> <year> 1991. </year> <title> The frame problem in the situation calculus: A simple solution (sometimes) and a completeness result for goal regression. </title> <editor> In Lifschitz, V., ed., </editor> <booktitle> Artificial Intelligence and Mathematical Theory of Computation: Papers in Honor of John McCarthy. </booktitle> <address> San Diego, CA: </address> <publisher> Academic Press. </publisher> <pages> 359-380. </pages>
Reference-contexts: Then, we discuss issues of robot architecture and describe our experience so far in implementing and experimenting with GOLOG. We conclude by discussing topics for future research. Logical Foundations The Situation Calculus and the Frame Problem The situation calculus (following the presentation in <ref> (Reiter 1991) </ref>) is a first-order language for representing dynamically changing worlds in which all of the changes are the result of named actions performed by some agent. Terms are used to represent states of the world-i.e. situations.
Reference: <author> Robinson, M., and Jenkin, M. </author> <year> 1994. </year> <title> Reactive low level control of the ARK. </title> <booktitle> In Proceedings, Vision Interface '94, </booktitle> <pages> 41-47. </pages>
Reference: <author> Scherl, R. B., and Levesque, H. J. </author> <year> 1993. </year> <title> The frame problem and knowledge-producing actions. </title> <booktitle> In Proceedings of the Eleventh National Conference on Artificial Intelligence, </booktitle> <pages> 689-695. </pages> <address> Washington, DC: </address> <publisher> AAAI Press/The MIT Press. </publisher>
Reference: <author> Schubert, L. </author> <year> 1990. </year> <title> Monotonic solution to the frame problem in the situation calculus: An efficient method for worlds with fully specified actions. </title> <editor> In Kyberg, H.; Loui, R.; and Carlson, G., eds., </editor> <title> Knowledge Representation and Defeasible Reasoning. </title> <address> Boston, MA: </address> <publisher> Kluwer Academic Press. </publisher> <pages> 23-67. 11 </pages>
References-found: 25

