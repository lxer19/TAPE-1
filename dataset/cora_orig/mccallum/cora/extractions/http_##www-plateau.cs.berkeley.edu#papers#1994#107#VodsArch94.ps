URL: http://www-plateau.cs.berkeley.edu/papers/1994/107/VodsArch94.ps
Refering-URL: http://www-plateau.cs.berkeley.edu/papers/1994/107/107.html
Root-URL: 
Email: (craigf@cs.berkeley.edu rowe@cs.berkeley.edu)  
Title: A Distributed Hierarchical Storage Manager for a Video-on-Demand System 1) Provide on-line access to a
Author: Craig Federighi and Lawrence A. Rowe 
Date: February 1994.  
Note: 1.0 Introduction  Symp. on  
Address: Berkeley, CA 94720  San Jose, CA,  
Affiliation: Computer Science Division EECS University of California  Elec. Imaging Sci. Tech.,  
Abstract: The design of a distributed video-on-demand system that is suitable for large video libraries is described. The system is designed to store 1000s of hours of video material on tertiary storage devices. A video that a user wants to view is loaded onto a video file server close to the users desktop from where it can be played. The system manages the distributed cache of videos on the file servers and schedules load requests to the tertiary storage devices. The system also includes a metadata database, described in a companion paper, that the user can query to locate video material of interest. This paper describes the software architecture, storage organization, application protocols for locating and loading videos, and distributed cache management algorithm used by the system. The high speed of the newest generation of workstation and network technology makes possible the integration of high-quality full-motion video as a standard data type in many user environments. One application of this new technology will allow networked users to view video material on their workstation screens on-demand. Video-on-demand (VOD) applications will initially be divided into two major categories: video rental and video library. Video rental applications will offer users very simple interfaces to select from a small number of currently popular movies and television programming. Time Warner and Silicon Graphics, for instance, will be testing a system in Orlando Florida that provides cable TV viewers with on-demand access to 250 popular titles [19]. Video library applications, on the other hand, will support sophisticated queries against a large database of video material. A video library might include course lectures and seminars, corporate training material, product and project demonstrations, video material for hypermedia courseware, documentaries and programs broadcast on public and private TV channels, and feature films. We also expect this system will store personal material such as video email and personal notes. Network users are already accustomed to being able to search large document databases and retrieve text for viewing on their workstation screens [2]. The goal of the Berkeley Distributed VOD System described in this paper is to provide a similar service for continuous media data. By continuous media we mean data types with dynamically changing real-time presentations such as audio, video, and animation. Our system has five central goals Providing networked access to a large video library presents several challenges. First, the size of digitized video and the high bandwidth requirements of video playback require both the capacity of tertiary storage (e.g., tape jukeboxes) and the speed of secondary storage (e.g., magnetic disks). Second, while the economies of scale in massive storage devices motivate the use large central repositories, limited internetwork bandwidth and the desire for low latency access suggest the use of distributed stores. Storage and Retrieval for Image and Video Databases II, IS&T/SPIE 
Abstract-found: 1
Intro-found: 0
Reference: [1] <author> D.P. Anderson, G. Homsy, </author> <title> A Continuous Media I/O Server and Its Synchronization Mechanisms, </title> <journal> Computer, </journal> <volume> Vol. 24, No. 10, </volume> <month> October </month> <year> 1991, </year> <pages> pp. 51-57. </pages>
Reference-contexts: Unlike conventional computer applications, continuous media playback requires that data be delivered at a steady rate without significant variations <ref> [1] </ref>. High-quality, full-motion video, for instance, requires that data be delivered at approximately 2 Mb/sec. If data is not delivered on time then audio output may be disrupted or video frames may be dropped, resulting in an unpleasant jerkiness in the presentation.
Reference: [2] <author> T.J. Berners-Lee, R. Cailliau and J.F.Groff, </author> <title> The World-Wide Web, Computer Networks and ISDN Systems, Nov. </title> <booktitle> 1992, vol.25, (no.4-5), </booktitle> <pages> pp. 454-9. </pages>
Reference-contexts: We also expect this system will store personal material such as video email and personal notes. Network users are already accustomed to being able to search large document databases and retrieve text for viewing on their workstation screens <ref> [2] </ref>. The goal of the Berkeley Distributed VOD System described in this paper is to provide a similar service for continuous media data. By continuous media we mean data types with dynamically changing real-time presentations such as audio, video, and animation.
Reference: [3] <author> D. Ferrari and D. C. Verma, </author> <title> A Scheme for Real-Time Channel Establishment in Wide-Area Network, </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> Vol. 8, No. 3, </volume> <month> April </month> <year> 1990, </year> <pages> pp. 368-379. </pages>
Reference-contexts: In a wide-area network, packets of data sent by a real-time file server to remote clients must cross through network bridges, routers, and hubs, any of which could drop or delay packets, resulting in poor playback quality. Although work has been done on protocols for real-time delivery over WANs <ref> [3, 18] </ref>, these protocols require that all networks along the path run special networking software. Many years are likely to pass before all nodes in the Internet are updated to run such software.
Reference: [4] <author> J. Harris and I. Ruben, </author> <title> Bento Specification, </title> <institution> Apple Computer, Cupertino CA, </institution> <year> 1992. </year>
Reference: [5] <author> R. L. Haskin, </author> <title> The Shark Continuous-Media File Server, </title> <booktitle> Proc IEEE COMPCON 93, </booktitle> <address> San Francisco CA, </address> <month> February </month> <year> 1993. </year>
Reference-contexts: Consequently, they may fail to deliver data on time, which will result in unacceptable playback quality. Real-time file servers, on the other hand, address the problem of real-time delivery over local area networks by carefully scheduling I/O operations to meet the consumption constraints of their clients <ref> [14, 25, 22, 5, 24, 10] </ref>. Unfortunately, real-time delivery over wide-area networks presents a new set of problems. <p> Rather than defining ridged object semantics, the CMO provides a generic container facility upon which clients can define their own document structures and semantics. In this regard, the CMO abstraction resembles the Unix file system or the Bento file format <ref> [5] </ref>. The key difference is that the CMO exports a list of external object references to the storage manager, thereby allowing the construction of compound objects. The ability to construct compound objects allows a movie to be composed of many subobjects, which may in turn be shared with other movies.
Reference: [6] <author> J.H. Howard, et. al., </author> <title> Scale and Performance in a Distributed File System, </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> Vol. 6, No. 1, </volume> <month> February </month> <year> 1988, </year> <pages> pp. 51-81. </pages>
Reference-contexts: If data is not delivered on time then audio output may be disrupted or video frames may be dropped, resulting in an unpleasant jerkiness in the presentation. Conventional network file systems, such as NFS [16] and AFS <ref> [6] </ref>, are not designed to accommodate real-time file service. Consequently, they may fail to deliver data on time, which will result in unacceptable playback quality.
Reference: [7] <author> V. Jacobson, </author> <type> Personal communication, </type> <year> 1993. </year>
Reference-contexts: Many years are likely to pass before all nodes in the Internet are updated to run such software. Some observers predict that there will be a large number of notes that are public and that will implement first-come, first-serve protocols for a long time <ref> [7] </ref>. Thus, systems developed to deliver video-on-demand to widely distributed clients cannot expect real-time guarantees from the network. 2.2 High Bandwidth Requirements Another problem in delivering video-on-demand is the high bandwidth required when several videos are played simultaneously.
Reference: [8] <author> R. Katz, </author> <title> High Performance Network and Channel-Based Storage, </title> <institution> Computer Science Division Report No. UCB/CSD 91/650, U.C. Berkeley, </institution> <year> 1991. </year>
Reference-contexts: The solution is to design a distributed hierarchical storage management system. A hierarchical storage manager applies the concept of caching to tertiary storage, using fast magnetic disks to cache frequently accessed data from large tertiary storage devices <ref> [8, 9] </ref>. Distributed hierarchical storage management extends this idea by allowing multiple caches to be distributed across a network. If a high percentage of client accesses are to data stored in a local cache, the perceived performance is very high and WAN traffic is limited.
Reference: [9] <author> R. Katz, et.al., </author> <title> Robo-line Storage: Low Latency, High Capacity Storage Systems Over Geographically Distributed Networks, </title> <institution> Computer Science Division Report No. UCB/CSD 91/651, U.C. Berkeley, </institution> <year> 1991. </year>
Reference-contexts: The solution is to design a distributed hierarchical storage management system. A hierarchical storage manager applies the concept of caching to tertiary storage, using fast magnetic disks to cache frequently accessed data from large tertiary storage devices <ref> [8, 9] </ref>. Distributed hierarchical storage management extends this idea by allowing multiple caches to be distributed across a network. If a high percentage of client accesses are to data stored in a local cache, the perceived performance is very high and WAN traffic is limited.
Reference: [10] <author> K. Keeton and R. Katz. </author> <title> The Evaluation of Video Layout Strategies on a High-Bandwidth File Server, </title> <booktitle> Proc. 4th Intl Wkshp on Operating Systems and Network Support for Digital Audio and Video, </booktitle> <address> Lancaster, UK, </address> <month> November </month> <year> 1993. </year>
Reference-contexts: Consequently, they may fail to deliver data on time, which will result in unacceptable playback quality. Real-time file servers, on the other hand, address the problem of real-time delivery over local area networks by carefully scheduling I/O operations to meet the consumption constraints of their clients <ref> [14, 25, 22, 5, 24, 10] </ref>. Unfortunately, real-time delivery over wide-area networks presents a new set of problems.
Reference: [11] <author> M. Mitzenmacher, </author> <title> UC Berkeley, </title> <type> personal communication, </type> <month> November, </month> <year> 1993. </year>
Reference-contexts: Recent measurements of TCP bandwidth on the Internet between hosts in Berkeley and machines separated by between one and fifteen routers indicate an available bandwidth of only 10-100KB/sec <ref> [11] </ref>. However, performance is highly variable because we have played video stored at UCSD on clients at Berkeley using the Internet, and we have observed up to 2Mb/sec bandwidth. Even with fast networks, playback can bottleneck on the I/O system of the file server.
Reference: [12] <author> J. Ousterhout, </author> <title> Tcl: an embedded command language, </title> <booktitle> Proc. 1990 Winder USENIX Conference, </booktitle> <year> 1990. </year>
Reference-contexts: The system provides video-on-demand service to networks of Unix clients running the X window system. 4.1 Distributed Programming Infrastructure Most components are written in Tcl, an embedded scripting language <ref> [12] </ref>, that supports rapid prototyping and testing and offers seamless access to tools in the Unix environment. The Tk windowing toolkit [13] supports the development of Tcl applications with Motif-style user interfaces and served as the basis for our graphical movie browser.
Reference: [13] <author> J. Ousterhout, </author> <title> An X11 toolkit based on the tcl language, </title> <booktitle> Proc. 1991 Winder USENIX Conference,1991. </booktitle>
Reference-contexts: The Tk windowing toolkit <ref> [13] </ref> supports the development of Tcl applications with Motif-style user interfaces and served as the basis for our graphical movie browser. Tcl-DP is a distributed programming library that is used for all interprocess communication. Tcl-DP supports blocking and non-blocking RPC between processes as well as TCP and UDP communication [20].
Reference: [14] <author> P.V. Rangan, H.M. Vin, and S. Ramanathan, </author> <title> Designing an On-Demand Multimedia Service, </title> <journal> IEEE Communications Magazine, </journal> <volume> Vol 30, No. 7, </volume> <month> July </month> <year> 1992, </year> <pages> pp. 56-64. </pages>
Reference-contexts: Consequently, they may fail to deliver data on time, which will result in unacceptable playback quality. Real-time file servers, on the other hand, address the problem of real-time delivery over local area networks by carefully scheduling I/O operations to meet the consumption constraints of their clients <ref> [14, 25, 22, 5, 24, 10] </ref>. Unfortunately, real-time delivery over wide-area networks presents a new set of problems.
Reference: [15] <author> L.A. Rowe and B.C. Smith, </author> <title> A Continuous Media Player, </title> <booktitle> Proc. 3rd Intl. Wkshp on Operating Systems Support for Digital Audio and Video, </booktitle> <address> La Jolla, CA, </address> <month> November </month> <year> 1992. </year>
Reference-contexts: The proliferation of multimedia formats and video compression standards means that the VOD system must allow users to publish movies in multiple formats (e.g., QuickTime, AVI, OMF, or our own CM Script <ref> [15] </ref>), in a variety of encodings (e.g., MPEG, DVI, Motion JPEG, etc.), and in a wide range of fidelities (i.e. various image sizes, frame rates, color depths, and sound resolutions). <p> The POSTGRES post-relational database management system is used to store the metadata database and control access to tertiary storage [21]. Lastly, the CMPlayer is used for video playback <ref> [15] </ref>. The CMPlayer uses a network video source (CMSource) to send video, in the form of UDP packets, over a local area network to the CMX process running on the client workstation, which synchronizes the playing of audio and video packets.
Reference: [16] <author> R. Sandburg, et.al., </author> <title> Design and Implementation of the Sun Network Filesystem, </title> <booktitle> Proc. 1985 Summer USENIX Conference, </booktitle> <address> Portland, OR, </address> <month> June </month> <year> 1985, </year> <pages> pp. 119-130. </pages>
Reference-contexts: High-quality, full-motion video, for instance, requires that data be delivered at approximately 2 Mb/sec. If data is not delivered on time then audio output may be disrupted or video frames may be dropped, resulting in an unpleasant jerkiness in the presentation. Conventional network file systems, such as NFS <ref> [16] </ref> and AFS [6], are not designed to accommodate real-time file service. Consequently, they may fail to deliver data on time, which will result in unacceptable playback quality.
Reference: [17] <author> M.D. Schroeder, A. D. Birrel, </author> <title> R.M. Needham A caching file system for a programmers workstation, </title> <booktitle> Proc. 10th Symp. on Operating Systems Principals, </booktitle> <address> Orcas Island, WA, </address> <month> December </month> <year> 1988, </year> <pages> pp. 25-32. </pages>
Reference-contexts: Thus, given an OID, the system can always locate the corresponding object by contacting its home archive and following any forward references. The use of immutable objects is natural for video-on-demand applications since movie data is seldom modified, and immutability greatly simplifies distributed cache coherency <ref> [17] </ref>. In addition, the use of a hierarchical naming scheme provides for decentralized naming while guaranteeing global uniqueness for identifiers. Of course, users of the VOD system do not want to deal with OIDs to play movies. Instead, users find objects by querying the metadata database associated with the archive.
Reference: [18] <author> H. Schulzrinne and S. Casner, RTP: </author> <title> A Real-Time Transport Protocol, </title> <type> IETF Draft, </type> <note> available by FTP from gaia.cs.umass.edu: ~ftp/pub/rtp, </note> <month> July </month> <year> 1993. </year>
Reference-contexts: In a wide-area network, packets of data sent by a real-time file server to remote clients must cross through network bridges, routers, and hubs, any of which could drop or delay packets, resulting in poor playback quality. Although work has been done on protocols for real-time delivery over WANs <ref> [3, 18] </ref>, these protocols require that all networks along the path run special networking software. Many years are likely to pass before all nodes in the Internet are updated to run such software.
Reference: [19] <author> Ed Sesek, </author> <title> Silicon Graphics Incorporated, </title> <type> personal communication, </type> <month> August </month> <year> 1993. </year>
Reference-contexts: Video rental applications will offer users very simple interfaces to select from a small number of currently popular movies and television programming. Time Warner and Silicon Graphics, for instance, will be testing a system in Orlando Florida that provides cable TV viewers with on-demand access to 250 popular titles <ref> [19] </ref>. Video library applications, on the other hand, will support sophisticated queries against a large database of video material.
Reference: [20] <author> B.C. Smith, L.A. Rowe, and S. Yen, </author> <title> Tcl Distributed Programming, </title> <booktitle> Proc. 1993 Tcl/Tk Workshop, </booktitle> <address> Berkeley, CA, </address> <month> June </month> <year> 1993. </year>
Reference-contexts: Tcl-DP is a distributed programming library that is used for all interprocess communication. Tcl-DP supports blocking and non-blocking RPC between processes as well as TCP and UDP communication <ref> [20] </ref>. Using Tcl-DP, we built a simple name server that provides a local registry for services running on the network. The name server can spawn remote servers on-demand, and it provides automatic failure recovery in the event of a server crash or a stale network connection.
Reference: [21] <author> M. Stonebraker and G. Kemnitz, </author> <title> The POSTGRES Next-Generation Database Management System, </title> <journal> Comm. of the ACM, </journal> <volume> Vol. 34, No. 10, </volume> <month> October, </month> <year> 1991, </year> <pages> pp. 78-92. </pages>
Reference-contexts: The name server can spawn remote servers on-demand, and it provides automatic failure recovery in the event of a server crash or a stale network connection. The POSTGRES post-relational database management system is used to store the metadata database and control access to tertiary storage <ref> [21] </ref>. Lastly, the CMPlayer is used for video playback [15]. The CMPlayer uses a network video source (CMSource) to send video, in the form of UDP packets, over a local area network to the CMX process running on the client workstation, which synchronizes the playing of audio and video packets.
Reference: [22] <author> F.A. Tobagi and J. Pang, </author> <title> StarWorks *TM -- A Video Applications Server, </title> <booktitle> Proc. IEEE COMPCON 93, </booktitle> <address> San Francisco, CA, </address> <month> Feb </month> <year> 1993. </year>
Reference-contexts: Consequently, they may fail to deliver data on time, which will result in unacceptable playback quality. Real-time file servers, on the other hand, address the problem of real-time delivery over local area networks by carefully scheduling I/O operations to meet the consumption constraints of their clients <ref> [14, 25, 22, 5, 24, 10] </ref>. Unfortunately, real-time delivery over wide-area networks presents a new set of problems.
Reference: [23] <author> F.A. Tobagi, et. al, </author> <title> Streaming RAID - A Disk Array Management System for Video Files, </title> <booktitle> Proc. 1st ACM Intl Conf. on Multimedia, </booktitle> <address> Anaheim, </address> <month> August </month> <year> 1993, </year> <pages> pp. 393-400. </pages>
Reference-contexts: Stripping data across a disk array can vastly improve the transfer rate but output is ultimately limited by the bandwidth of the file server backplane. For example, one commercial VFS with a disk array with four disks achieves a peak bandwidth of 25Mbs <ref> [23] </ref>. 2.3 Video Databases Probably the greatest challenge in supporting on-line access to video libraries results from the size of the objects themselves. A single hour of compressed VHS quality video consumes 1 gigabyte of storage, and real-world video libraries will require many hours of video.
Reference: [24] <author> P. Tzelnic, </author> <title> Calaveras Continuous Media Server, </title> <type> personal communication, </type> <month> August </month> <year> 1993. </year>
Reference-contexts: Consequently, they may fail to deliver data on time, which will result in unacceptable playback quality. Real-time file servers, on the other hand, address the problem of real-time delivery over local area networks by carefully scheduling I/O operations to meet the consumption constraints of their clients <ref> [14, 25, 22, 5, 24, 10] </ref>. Unfortunately, real-time delivery over wide-area networks presents a new set of problems.
Reference: [25] <author> H.M. Vin and P.V. Rangan, </author> <title> Designing a Multi-User HDTV Storage Server, </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> Vol. 11, No. 1, </volume> <month> January </month> <year> 1993, </year> <pages> Pages 153-164. </pages>
Reference-contexts: Consequently, they may fail to deliver data on time, which will result in unacceptable playback quality. Real-time file servers, on the other hand, address the problem of real-time delivery over local area networks by carefully scheduling I/O operations to meet the consumption constraints of their clients <ref> [14, 25, 22, 5, 24, 10] </ref>. Unfortunately, real-time delivery over wide-area networks presents a new set of problems.
References-found: 25

