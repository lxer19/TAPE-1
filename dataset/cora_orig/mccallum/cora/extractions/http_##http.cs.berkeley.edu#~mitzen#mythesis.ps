URL: http://http.cs.berkeley.edu/~mitzen/mythesis.ps
Refering-URL: http://http.cs.berkeley.edu/~mitzen/
Root-URL: http://www.cs.berkeley.edu
Title: The Power of Two Choices in Randomized Load Balancing  
Author: by Michael David Mitzenmacher 
Degree: 1991 A dissertation submitted in partial satisfaction of the requirements for the degree of Doctor of Philosophy in Computer Science in the GRADUATE DIVISION of the UNIVERSITY of CALIFORNIA at BERKELEY Committee in charge: Professor Alistair Sinclair, Chair Professor Christos Papadimitriou Professor David Aldous  
Date: 1996  
Affiliation: B.A. (Harvard University)  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> R. Abraham, J. Marsden, and T. Raitu. </author> <title> Manifolds, Tensor Analysis, and Applications. </title> <publisher> Addison-Wesley, </publisher> <year> 1983. </year>
Reference-contexts: That this infinite set of differential equations has a unique solution given appropriate initial conditions is not immediately obvious; however, it follows from standard results in analysis (see <ref> [1, p. 188, Theorem 4.1.5] </ref>, or [26, Theorem 3.2]). It should be intuitively clear that as n ! 1 the behavior of the supermarket system approaches that of this deterministic system. A formal justification of this relationship will be given in Section 3.4. <p> Recall that T 1 () = 1 1 from standard queueing theory. Analysis of the summation in Corollary 3.8 reveals the following. Theorem 3.9 For 2 <ref> [0; 1] </ref>, T d () c d (log T 1 ()) for some constant c d dependent only on d. <p> that the differential equation be Lipschitz; that is, for some constant M , jF (x) F (y)j M jx yj: That this is a sufficient condition for uniqueness in the finite-dimensional case is standard; for the countably infinite dimensional case, a bit more work is required ([26, Theorem 3.2] or <ref> [1, p. 188, Theorem 4.1.5] </ref>). We now present Kurtz's theorem. We note that the proof is essentially exactly the same as that given in [52, Chapter 8] or [32, Chapter 11], generalized to the case of countably infinite dimensions. <p> We shall drop the explicit dependence on t when the meaning is clear. For convenience, we shall consider only systems where s i (t) 2 <ref> [0; 1] </ref> for all t, and hence * i (t) 2 [ i ; 1 i ] for all t. This restriction simplifies the statements of our theorems and can easily be removed; however, all the systems described in this chapter meet this condition.
Reference: [2] <author> I. J. B. F. Adan. </author> <title> A compensation approach for queueing problems. </title> <publisher> CWI (Centrum voor Wiskunde en Informatica), </publisher> <year> 1994. </year>
Reference-contexts: For more than two queues, Adan, van Houtum, and van der Wal derive upper and lower bounds based on comparisons with related systems [3]. The above articles, and the book by Adan discussing the compensation approach <ref> [2] </ref>, provide a history of the shortest queue problem and some of its variants. Distributed load balancing strategies based on information about only a limited number of other processors have been studied by Eager et al. [29, 30, 31] and Zhou [77].
Reference: [3] <author> I. J. B. F. Adan, G. van Houtum, and J. van der Wal. </author> <title> Upper and lower bounds for the waiting time in the symmetric shortest queue system. </title> <journal> Annals of Operations Research, </journal> <volume> 48 </volume> <pages> 197-217, </pages> <year> 1994. </year>
Reference-contexts: For the two queue case, Adan et al. also settle the asymmetric case [5]. For more than two queues, Adan, van Houtum, and van der Wal derive upper and lower bounds based on comparisons with related systems <ref> [3] </ref>. The above articles, and the book by Adan discussing the compensation approach [2], provide a history of the shortest queue problem and some of its variants. <p> As mentioned in Chapter 1, a great deal of work has been done to study the model where incoming customers join the shortest queue, the most recent of which is due to Adan and others <ref> [3, 4, 5] </ref>. The limited coordination enforced by our model corresponds nicely to models of distributed systems, as distinguished from centralized systems, where the shortest queue model appears more applicable.
Reference: [4] <author> I. J. B. F. Adan, J. Wessels, and W. H. M. Zijm. </author> <title> Analysis of the symmetric shortest queue problem. Stochastic Models, </title> <booktitle> 6 </booktitle> <pages> 691-713, </pages> <year> 1990. </year>
Reference-contexts: Even the case where the system has just two queues is difficult; however, the problem of determining the limiting equilibrium distribution seems to have been settled for all practical purposes by Adan et al. using what they call the "compensation approach" <ref> [4] </ref>. For the two queue case, Adan et al. also settle the asymmetric case [5]. For more than two queues, Adan, van Houtum, and van der Wal derive upper and lower bounds based on comparisons with related systems [3]. <p> As mentioned in Chapter 1, a great deal of work has been done to study the model where incoming customers join the shortest queue, the most recent of which is due to Adan and others <ref> [3, 4, 5] </ref>. The limited coordination enforced by our model corresponds nicely to models of distributed systems, as distinguished from centralized systems, where the shortest queue model appears more applicable.
Reference: [5] <author> I. J. B. F. Adan, J. Wessels, and W. H. M. Zijm. </author> <title> Analysis of the asymmetric shortest queue problem. </title> <journal> Queueing Systems, </journal> <volume> 8 </volume> <pages> 1-58, </pages> <year> 1991. </year>
Reference-contexts: For the two queue case, Adan et al. also settle the asymmetric case <ref> [5] </ref>. For more than two queues, Adan, van Houtum, and van der Wal derive upper and lower bounds based on comparisons with related systems [3]. <p> As mentioned in Chapter 1, a great deal of work has been done to study the model where incoming customers join the shortest queue, the most recent of which is due to Adan and others <ref> [3, 4, 5] </ref>. The limited coordination enforced by our model corresponds nicely to models of distributed systems, as distinguished from centralized systems, where the shortest queue model appears more applicable.
Reference: [6] <author> M. Adler, S. Chakrabarti, M. Mitzenmacher, and L. Rasmussen. </author> <title> Parallel randomized load balancing. </title> <booktitle> In Proceedings of the 27th ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 238-247, </pages> <year> 1995. </year>
Reference-contexts: We provide both lower bounds for this model and practical algorithms that achieve these bounds, up to a constant factor. The work described in 7 this chapter was done in conjunction with Micah Adler, Soumen Chakrabarti, and Lars Rasmussen and appeared in <ref> [6] </ref> in preliminary form. In Chapter 3 we introduce a dynamic variant of the load balancing problem analogous to similar models from queueing theory. We then analyze this dynamic variant, using a new technique based on comparison with infinite systems, or systems that are arbitrarily large.
Reference: [7] <author> N. Alon, J. Spencer, and Paul Erdos. </author> <title> The Probabilistic Method. </title> <publisher> John Wiley and Sons, </publisher> <year> 1992. </year>
Reference-contexts: This latter quantity is more easily bounded by applying Chernoff-type bounds to the Poisson distribution that are similar to those in Lemma 1.3. Lemma 3.17 <ref> [7, Theorem A.15] </ref> Let P have a Poisson distribution with mean . For * &gt; 0, Pr (P (1 + *)) e * (1 + *) (1+*) : (3.20) Using these ideas, we can bound * n (t) for the supermarket model; we omit the technical proof. <p> One can also show that Y cn is close to its mean with high probability using martingale arguments and the method of bounded differences. In the following application of this alternative technique, we assume familiarity with basic martingale theory; see, for example, <ref> [7, Chapter 7] </ref> for more information.
Reference: [8] <author> M. Atjai, J. Aspnes, M. Naor, Y. Rabani, L. Schulman, and O. Waarts. </author> <title> Fairness in scheduling. </title> <booktitle> In Proceedings of the Sixth Annual ACM/SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 477-485, </pages> <year> 1995. </year>
Reference-contexts: Azar et al. [11] do consider a dynamic variant of the problem, but it appears much less realistic than the natural queueing model we propose. A different dynamic load balancing problem, where tasks remain permanently, was considered by Atjai et al. in <ref> [8] </ref>. In the queueing theory literature, Schwartz [69] and Green [36] have examined parallel systems where tasks have a type that determines which servers can used, with limited success in special cases. Researchers have placed more emphasis on the model where incoming customers choose the shortest queue. <p> For our bounds, we will rephrase the balls and bins problem in terms of a random graph orientation problem. The relationship between balls and bins problems and random graphs has been noted previously <ref> [8, 42, 55] </ref>; we thank Claire Kenyon and Orli Waarts for suggesting this model and several helpful related ideas. Here, we show that proving a lower bound for the balls and bins problem is equivalent to showing that, with sufficiently high probability, a specific subgraph appears in a random graph. <p> The goal is to minimize the weight discrepancy, that is, to minimize the function max v jw (v)j. The algorithm we consider orients each arriving edge towards the vertex of smaller weight (with ties broken arbitrarily). This model is called the edge orientation problem in <ref> [8] </ref>, where it was shown that the maximum weight discrepancy is O (log log n) in equilibrium with high probability. This problem arises in the analysis of the carpool problem, in which people attempt to determine a fair protocol for dividing the task of driving over several days.
Reference: [9] <author> Y. Azar, A. Broder, and A. Karlin. </author> <title> Online load balancing. </title> <booktitle> In Proceedings of the 33rd IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 218-225, </pages> <year> 1992. </year> <month> 111 </month>
Reference-contexts: On-line static load balancing against a worst-case adversary has been the subject of a great deal of work <ref> [9, 12, 13] </ref>; however, in the worst case competitive ratios are extremely high, suggesting that a probabilistic analysis may lead to more insight.
Reference: [10] <author> Y. Azar, A. Broder, A. Karlin, and E. Upfal. </author> <note> Balanced allocations. Journal version, preprint. </note>
Reference-contexts: We refer to this general method as the iterated tail bounds approach, since the main idea is to bound the successive tails fi k inductively. For future reference, we summarize some of the other problems analyzed in [11] and <ref> [10] </ref>. A variation on the proof above suffices to handle general (m; n; d)-problems. <p> The comparison argument is entirely similar to those in [74] and [75], which show that choosing the shortest queue is optimal subject to certain assumptions on the service process; alternatively, an argument based on majorization is given in <ref> [10] </ref>. We also remark that a similar argument shows that the size of the longest queue in a supermarket system is stochastically dominated by the size of the longest queue in a set of n independent M/M/1 servers. <p> Similarly, choosing d = 3 one expects a maximum load of three until billions of balls have been thrown. These results match those we have presented earlier in Table 2.1, as well as simulation results presented in <ref> [10] </ref>. We also present the averages from one hundred simulations of one million balls for d = 2 and d = 3, which further demonstrate the accuracy of the technique in predicting the behavior of the system.
Reference: [11] <author> Y. Azar, A. Broder, A. Karlin, and E. Upfal. </author> <title> Balanced allocations. </title> <booktitle> In Proceedings of the 26th ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 593-602, </pages> <year> 1994. </year>
Reference-contexts: introduction, we briefly present a proof of the result of Azar et al. using the original proof in <ref> [11] </ref> as our guide. This result has been the primary inspiration for this thesis, and its proof will be necessary as a point of comparison for both the results and the techniques we present here. <p> The more detailed analysis of the greedy strategy presented by Azar et al. <ref> [11] </ref> extended this work in several directions. A later paper by Broder et al. considers a related problem, where edges of a tree arrive randomly and must orient themselves towards a vertex [22]. <p> Most of these utilize collision-based protocols: if too many balls land in a bin, all of them must be rethrown. Dynamic variations of the problem have been much less well understood. Azar et al. <ref> [11] </ref> do consider a dynamic variant of the problem, but it appears much less realistic than the natural queueing model we propose. A different dynamic load balancing problem, where tasks remain permanently, was considered by Atjai et al. in [8]. <p> has been applied to matching problems on random graphs [38, 43, 44] as well as to some queueing models [70]; here, we apply it for the first time to load balancing problems. 1.2 The GREEDY algorithm We begin by presenting the main result and proof of Azar et al. from <ref> [11] </ref>. As previously mentioned, this result has been the primary inspiration for our work, and we shall refer back to the proof at several points. The proof and notation we present here is extremely close to the original; we have made some minor changes in the interest of clarity. <p> We refer to this general method as the iterated tail bounds approach, since the main idea is to bound the successive tails fi k inductively. For future reference, we summarize some of the other problems analyzed in <ref> [11] </ref> and [10]. A variation on the proof above suffices to handle general (m; n; d)-problems. <p> Our results show that thresholding strategies can achieve a useful tradeoff between communication cost and the maximum load achieved. We conclude by presenting simulation results verifying our theoretical work. Besides the connections to the work of Karp, Luby, and Meyer auf der Heide [42] and of Azar et al. <ref> [11] </ref>, our work is related to other work in the area of contention resolution. <p> We will examine a class of simple strategies that include many of the standard algorithms presented in the literature <ref> [11, 42, 55, 72, 73] </ref>. The strategies we restrict our attention to are non-adaptive, in that the possible destinations are chosen before any communication takes place. <p> then transfer the result to the exact case, greatly simplifying the analysis. 2.4 Parallel GREEDY The lower bounds in Section 2.2 show that if the number of communication rounds and possible destinations for a ball are fixed, the log log n log d + O (1) maximum load bound of <ref> [11] </ref> no longer applies. We therefore seek ways to parallelize the greedy strategy, with the aim of matching the lower bounds. We first deal with the case of two rounds in Section 2.4.1, and then consider multiple rounds in Section 2.4.2. <p> For example, it is not clear from the results we have described that greedy performs better than straightforward random selection unless n is exceedingly large! (In 44 fact, for all values of n, the expected maximum load of greedy is less than that of simple random selection; see <ref> [11] </ref> for more details.) Even if one can guarantee better performance, however, a system designer interested in using a load balancing scheme must balance the tradeoff between the maximum load and the complexity of the underlying algorithm. Asymptotic notation proves less helpful than specific numbers in understanding this tradeoff. <p> These results are remarkably similar to those for the static case studied in <ref> [11] </ref> and described in Section 1.2. Proof: We prove only the limiting statement as ! 1 ; the other statement is proved similarly. <p> We begin by applying the infinite system approach to the greedy strategy studied by Azar, Broder, Karlin, and Upfal in the static case <ref> [11] </ref>. We shall derive an alternative proof of the log log n= log d+O (1) upper bound on the maximum load in the static case, and also demonstrate that the infinite system approach provides accurate predictions of actual performance in this case. <p> Recall the scenario of the greedy strategy of <ref> [11] </ref> that we presented in Section 1.2: in the case where m = n, we begin with n balls and n bins. <p> The differential equations provide the insight that the s k decrease quadratically at each level, and hence overall the s k are doubly exponentially decreasing. Theorem 4.5 [Azar et al. <ref> [11] </ref>] Suppose that n balls are thrown into n buckets by the greedy process. Then the final load is log log n= log d + O (1) with high probability. Proof: We wish to know the values of s i (1) in the finite system. <p> The above proof essentially mimics that of Theorem 1.1, with the inductive use of Chernoff bounds replaced by an invocation of Kurtz's more general theorem. One can adapt the lower bound proof in <ref> [11] </ref> in a similar fashion. Note, however, that the proof cannot be extended for the general case of m balls and n bins, unless m = cn for some constant c. <p> is exactly like the supermarket model, except that its state space is truncated to states where there are ffn customers. (For further reference, see the State Truncation Property described in [62].) 92 A slightly different closed model was successfully analyzed (in a completely different manner) by Azar et al. in <ref> [11] </ref>. Their model describes the following scenario: suppose that each server represents a hash bucket, rather than a queue of customers, and at each step a random item is deleted from the hash table and a new item is inserted. We call this the hashing closed model.
Reference: [12] <author> Y. Azar, B. Kalyanasundaram, S. Plotkin, K. Pruhs, and O. Waarts. </author> <title> Online load balancing of temporary tasks. </title> <booktitle> In WADS 1993, Lecture Notes in Computer Science 709, </booktitle> <pages> pages 119-130, </pages> <year> 1993. </year>
Reference-contexts: On-line static load balancing against a worst-case adversary has been the subject of a great deal of work <ref> [9, 12, 13] </ref>; however, in the worst case competitive ratios are extremely high, suggesting that a probabilistic analysis may lead to more insight.
Reference: [13] <author> Y. Azar, J. Naor, and R. </author> <title> Rom. The competitiveness of online assignment. </title> <booktitle> In Proceedings of the 3rd ACM/SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 203-210, </pages> <year> 1992. </year>
Reference-contexts: On-line static load balancing against a worst-case adversary has been the subject of a great deal of work <ref> [9, 12, 13] </ref>; however, in the worst case competitive ratios are extremely high, suggesting that a probabilistic analysis may lead to more insight.
Reference: [14] <author> K. Azuma. </author> <title> Weighted sums of certain dependent random variables. </title> <journal> Tohoku Mathematical Journal, </journal> <volume> 19 </volume> <pages> 357-367, </pages> <year> 1967. </year>
Reference-contexts: In the following application of this alternative technique, we assume familiarity with basic martingale theory; see, for example, [7, Chapter 7] for more information. We use the following form of the martingale tail inequality due to Azuma <ref> [14] </ref>: Lemma 4.3 [Azuma] Let X 0 ; X 1 ; : : : X m be a martingale sequence such that for each k, jX k X k1 j 1: Then for any ff &gt; 0, Pr (jX m X 0 j &gt; ff m) &lt; 2e ff 2 =2
Reference: [15] <author> A. D. Barbour. </author> <title> Networks of queues and the method of stages. </title> <booktitle> Advances in Applied Probability, </booktitle> <volume> 8 </volume> <pages> 584-591, </pages> <year> 1976. </year>
Reference-contexts: First, even in a finite system, it is not clear that the limiting distribution as r ! 1 converges to the same distribution as when service times are constant. Indeed, even this step is non-trivial, although a similar proof for networks of quasi-reversible queues by Barbour appears to apply <ref> [15] </ref>. (See also [45, p.77-78] for more background for this problem.) Now, let D r;n be the distribution when there are n queues and service times have a gamma distribution of r stages.
Reference: [16] <author> A. D. Barbour, L. Holst, and S. Janson. </author> <title> Poisson Approximation. </title> <publisher> Oxford University Press, </publisher> <year> 1992. </year>
Reference-contexts: We note that the close relationship between these two models has been observed and made use of previously, for example in [23], and tighter bounds on specific problems can often be obtained with more detailed analyses, as can be seen, for example, in <ref> [16, Chapter 6] </ref> or [41]. An advantage of the approach we present is that it is quite general and easy to apply. Theorem 2.11 Let f (x 1 ; : : :; x n ) be a non-negative function.
Reference: [17] <institution> The Berkeley NOW Project. The Berkeley NOW Project: Project overview. </institution> <note> Located at http://now.cs.berkeley.edu/index.html. </note>
Reference-contexts: Distributed systems, especially networks of workstations, appear to be growing larger and more common <ref> [17] </ref>, suggesting that the applicability of the simple randomized load balancing schemes we have studied will grow in the future. We hope that, by providing a strong theoretical basis for the power of two choices, we can increase the impact of this idea on the development of real systems. 110
Reference: [18] <author> A. Bestavros. </author> <title> Load profiling in distributed real-time systems. </title> <type> Preprint. </type>
Reference-contexts: Already some practitioners have noted the relevance of our ideas to their work. Bestavros suggests that the paradigm of the power of two choices holds for his "load profiling" algorithms for distributed real-time systems <ref> [18] </ref>; Dahlin notes the relationship between our results and his studies for load balancing in caches in networks of workstations [25].
Reference: [19] <author> W. H. Beyer, </author> <title> editor. </title> <booktitle> CRC Handbook of Mathematical Sciences: 6th Edition. </booktitle> <publisher> CRC Press, </publisher> <year> 1987. </year>
Reference-contexts: In the limiting case, this distinction disappears. 2 One could also attempt to directly find an equation for y in terms of d and c. Standard integral tables give such equations when d = 2; 3 and 4, for example <ref> [19] </ref>. 78 and the process terminates. Plugging t 0 = c into equation (4.2) yields the theorem, with y c = y (c). We may actually use the proof of Theorem 3.13 to obtain a concentration result.
Reference: [20] <author> R. D. Blumofe and C. E. Leiserson. </author> <title> Scheduling multithreaded computations by work stealing. </title> <booktitle> In Proceedings of the 35th Annual IEEE Conference on Foundations of Computer Science, </booktitle> <pages> pages 356-368, </pages> <year> 1994. </year>
Reference-contexts: Often this approach is more communication-efficient than standard load balancing strategies, since if all processors are busy, they do not need to communicate with each other in an attempt to distribute the load. A basic load stealing scheme, which has been shown to perform well in static problems <ref> [20] </ref>, is to have a processor that has completed all its tasks choose another processor at random and steal a job from that processor if possible. If no job is found, the processor attempts to steal again from another random processor, and so on until a job is found.
Reference: [21] <author> B. Bollobas. </author> <title> Random Graphs. </title> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1985. </year>
Reference-contexts: We show that X &gt; 0 with at least constant probability by determining the expectation and variance of X and applying the simple bound (from <ref> [21] </ref>, equation (3) of I.1): E [X ] 2 : The multinomial coefficient n , where the sum of the lower terms 1 + T + (T 1) + : : : + (T 1) is T 2 + 1, gives the number of possible choices for ~v; we must first
Reference: [22] <author> A. Broder, A. Frieze, C. Lund, S. Phillips, and N. Reingold. </author> <title> Balanced allocations for tree-like inputs. </title> <journal> Information Processing Letters, </journal> <volume> 55(6) </volume> <pages> 329-332, </pages> <year> 1995. </year> <month> 112 </month>
Reference-contexts: The more detailed analysis of the greedy strategy presented by Azar et al. [11] extended this work in several directions. A later paper by Broder et al. considers a related problem, where edges of a tree arrive randomly and must orient themselves towards a vertex <ref> [22] </ref>. Dietzfelbinger and Meyer auf der Heide [28], Goldberg et al. [34], MacKenzie et al. [55], and Stemann [72] have all developed further PRAM simulation algorithms using similar ideas. Most of these utilize collision-based protocols: if too many balls land in a bin, all of them must be rethrown.
Reference: [23] <author> A. Broder, A. Frieze, and E. Upfal. </author> <title> On the satisfiability and maximum satisfiability of random 3-CNF formulas. </title> <booktitle> In Proceedings of the 4th ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 322-330, </pages> <year> 1993. </year>
Reference-contexts: We note that the close relationship between these two models has been observed and made use of previously, for example in <ref> [23] </ref>, and tighter bounds on specific problems can often be obtained with more detailed analyses, as can be seen, for example, in [16, Chapter 6] or [41]. An advantage of the approach we present is that it is quite general and easy to apply.
Reference: [24] <author> A. Broder and A. Karlin. </author> <title> Multi-level adaptive hashing. </title> <booktitle> In Proceedings of the 1st ACM/SIAM Symposium on Discrete Algorithms, </booktitle> <year> 1990. </year>
Reference-contexts: Stemann, using a different algorithm, also achieves a maximum load as good as the mpgreedy algorithm [73]. This algorithm is also not completely asynchronous, although it seems to require weaker synchrony than mpgreedy. 2.5 The threshold strategy We now examine another strategy, previously exploited in <ref> [24] </ref> and [42] in similar contexts, to achieve good load balancing. Given a threshold T , we imagine throwing the balls over r rounds. If more than T balls enter a bin during a round, the excess balls are rethrown in the next round.
Reference: [25] <author> M. Dahlin. </author> <title> Serverless Network File Systems. </title> <type> PhD thesis, </type> <institution> University of California, Berkeley, </institution> <year> 1995. </year>
Reference-contexts: Bestavros suggests that the paradigm of the power of two choices holds for his "load profiling" algorithms for distributed real-time systems [18]; Dahlin notes the relationship between our results and his studies for load balancing in caches in networks of workstations <ref> [25] </ref>. Distributed systems, especially networks of workstations, appear to be growing larger and more common [17], suggesting that the applicability of the simple randomized load balancing schemes we have studied will grow in the future.
Reference: [26] <author> K. Deimling. </author> <title> Ordinary Differential Equations in Banach Spaces. </title> <publisher> Springer-Verlag, </publisher> <year> 1977. </year> <booktitle> Lecture Notes in Mathematics. </booktitle> <volume> Vol. </volume> <pages> 96. </pages>
Reference-contexts: That this infinite set of differential equations has a unique solution given appropriate initial conditions is not immediately obvious; however, it follows from standard results in analysis (see [1, p. 188, Theorem 4.1.5], or <ref> [26, Theorem 3.2] </ref>). It should be intuitively clear that as n ! 1 the behavior of the supermarket system approaches that of this deterministic system. A formal justification of this relationship will be given in Section 3.4. <p> A more formal proof that increasing s i (0) only increases all s j (t) relies on the fact that the ds i =dt are quasimonotone: that is, ds i =dt is non-decreasing in s j for j 6= i. The result then follows from <ref> [26, pp. 70-74] </ref>. We now show that the s i decrease doubly exponentially (in the infinite model). Let j be the smallest value such that s j (0) = 0, which exists by the hypothesis of the theorem. Then M (0) [1= j1 ] 1=d j1 &lt; 1= 1=(d1) .
Reference: [27] <author> A. Dembo and O. Zeitouni. </author> <title> Large Deviations Techniques and Applications. </title> <publisher> Jones and Bartlett Publishers, </publisher> <year> 1993. </year>
Reference-contexts: Our treatment of density dependent jump Markov processes is based on the work of Kurtz [32, 49, 50, 51, 52]; more modern treatments of the underlying theory are given by Dembo and Zeitouni <ref> [27] </ref> and Shwartz and Weiss [70]. <p> Note that, under the conditions of Theorem 3.4, the system state is always a sequence (s i ) 1 i=0 with the limit of the s i being 0, and hence the system lies in this space. See, for example, <ref> [27] </ref> for this more general treatment. 65 F (x) = l2L and by setting X n = n 1 ^ X n to be the appropriate scaled process, we have from the above: X n (t) = X n (0) + l2L Z t fi l (X n (u))du + 0
Reference: [28] <editor> M. Dietzfelbinger and F. Meyer auf der Heide. </editor> <title> Simple, efficient shared memory simulations. </title> <booktitle> In Proceedings of the Fifth Annual ACM Symposium on Parallel Algorithms and Architectures, </booktitle> <pages> pages 110-119, </pages> <year> 1993. </year>
Reference-contexts: A later paper by Broder et al. considers a related problem, where edges of a tree arrive randomly and must orient themselves towards a vertex [22]. Dietzfelbinger and Meyer auf der Heide <ref> [28] </ref>, Goldberg et al. [34], MacKenzie et al. [55], and Stemann [72] have all developed further PRAM simulation algorithms using similar ideas. Most of these utilize collision-based protocols: if too many balls land in a bin, all of them must be rethrown. <p> For example, MacKenzie, Plaxton, and Rajaraman [55], extending previous work by Dietzfelbinger and Meyer auf der Heide <ref> [28] </ref>, examine contention resolution models based on the c-collision crossbar: if more than c items attempt to access a resource, none get through. Following our original work in this area, Volker Stemann [73] has developed collision-based protocols that match our lower bound over the entire range of r.
Reference: [29] <author> D. L. Eager, E. D. Lazokwska, and J. Zahorjan. </author> <title> Adaptive load sharing in homogeneous distributed systems. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 12 </volume> <pages> 662-675, </pages> <year> 1986. </year>
Reference-contexts: The above articles, and the book by Adan discussing the compensation approach [2], provide a history of the shortest queue problem and some of its variants. Distributed load balancing strategies based on information about only a limited number of other processors have been studied by Eager et al. <ref> [29, 30, 31] </ref> and Zhou [77]. In fact, the work of Eager et al. examines load balancing strategies similar to many of those we examine, and they also use an approach based on Markov chains for their analysis [29, 30, 31]. <p> limited number of other processors have been studied by Eager et al. <ref> [29, 30, 31] </ref> and Zhou [77]. In fact, the work of Eager et al. examines load balancing strategies similar to many of those we examine, and they also use an approach based on Markov chains for their analysis [29, 30, 31]. However, in order to perform their analysis, the authors assume that the state of each queue is stochastically independent of the state of any other queue (for example, see [29, p. 665]). <p> However, in order to perform their analysis, the authors assume that the state of each queue is stochastically independent of the state of any other queue (for example, see <ref> [29, p. 665] </ref>). The authors also claim, without justification, that this approach is exact in the asymptotic limit as the number of queues grows to infinity. <p> The limited coordination enforced by our model corresponds nicely to models of distributed systems, as distinguished from centralized systems, where the shortest queue model appears more applicable. The supermarket model has been studied both analytically and with simulations by Eager et al. <ref> [29] </ref> and through trace-driven simulations by Zhou [77]. Both works demonstrate the effectiveness of each customer having a small number of choices. <p> Both works demonstrate the effectiveness of each customer having a small number of choices. The analytic results of Eager et al., however, are derived using the assumption that the state of each queue in the supermarket model in stochastically independent of the state of any other queue <ref> [29, p. 665] </ref>. The authors assert (without justification) that this approach is exact in the asymptotic limit as the number of queues grows to infinity. <p> Threshold systems have been shown to perform well both in theoretical models and in practice <ref> [29, 48, 77] </ref>, although our results (such as the connection to density dependent Markov chains) appear to be new. We first consider the weak threshold model. The rate at which a queue changes size is clearly dependent on whether a queue has more or less than T customers. <p> (s i1 s i )(1 + s T +1 ) (s i s i+1 ) ; i T + 1 ; (4.11) dt i1 s 2 For small thresholds, the behavior of this system is very similar to that of the supermarket system, as has been noted empirically previously in <ref> [29] </ref> and [77]. In fact, we next show that the strong threshold model is double exponentially decreasing, as one would expect from the differential equations (4.12). Lemma 4.8 The fixed point for the strong threshold model decreases doubly exponentially.
Reference: [30] <author> D. L. Eager, E. D. Lazokwska, and J. Zahorjan. </author> <title> A comparison of receiver-initiated and sender-initiated adaptive load sharing. </title> <journal> Performance Evaluation Review, </journal> <volume> 16 </volume> <pages> 53-68, </pages> <month> March </month> <year> 1986. </year>
Reference-contexts: The above articles, and the book by Adan discussing the compensation approach [2], provide a history of the shortest queue problem and some of its variants. Distributed load balancing strategies based on information about only a limited number of other processors have been studied by Eager et al. <ref> [29, 30, 31] </ref> and Zhou [77]. In fact, the work of Eager et al. examines load balancing strategies similar to many of those we examine, and they also use an approach based on Markov chains for their analysis [29, 30, 31]. <p> limited number of other processors have been studied by Eager et al. <ref> [29, 30, 31] </ref> and Zhou [77]. In fact, the work of Eager et al. examines load balancing strategies similar to many of those we examine, and they also use an approach based on Markov chains for their analysis [29, 30, 31]. However, in order to perform their analysis, the authors assume that the state of each queue is stochastically independent of the state of any other queue (for example, see [29, p. 665]). <p> This approach can be generalized in several directions, including varying the time to transfer a task and the load at which processors seek to steal tasks; the work of Eager et al. examines some of these possibilities <ref> [30] </ref>. It may also be used to model other work stealing strategies, such as that proposed by Rudolph, Slivkin-Allalouf, and Upfal in [68]. 4.4.6 The edge orientation problem We now examine a rather different type of load balancing problem. Consider the complete graph on n vertices.
Reference: [31] <author> D. L. Eager, E. D. Lazokwska, and J. Zahorjan. </author> <title> The limited performance benefits of migrating active processes for load sharing. </title> <journal> Performance Evaluation Review, </journal> <volume> 16 </volume> <pages> 63-72, </pages> <month> May </month> <year> 1988. </year> <note> Special Issue on the 1988 SIGMETRICS Conference. </note>
Reference-contexts: The above articles, and the book by Adan discussing the compensation approach [2], provide a history of the shortest queue problem and some of its variants. Distributed load balancing strategies based on information about only a limited number of other processors have been studied by Eager et al. <ref> [29, 30, 31] </ref> and Zhou [77]. In fact, the work of Eager et al. examines load balancing strategies similar to many of those we examine, and they also use an approach based on Markov chains for their analysis [29, 30, 31]. <p> limited number of other processors have been studied by Eager et al. <ref> [29, 30, 31] </ref> and Zhou [77]. In fact, the work of Eager et al. examines load balancing strategies similar to many of those we examine, and they also use an approach based on Markov chains for their analysis [29, 30, 31]. However, in order to perform their analysis, the authors assume that the state of each queue is stochastically independent of the state of any other queue (for example, see [29, p. 665]).
Reference: [32] <author> S. N. Ethier and T. G. Kurtz. </author> <title> Markov Processes: Characterization and Convergence. </title> <publisher> John Wiley and Sons, </publisher> <year> 1986. </year>
Reference-contexts: These processes have an interesting behavior: as the size of the system (measured by the number of queues) grows to infinity, the limiting behavior can be described by a deterministic process. Our treatment of density dependent jump Markov processes is based on the work of Kurtz <ref> [32, 49, 50, 51, 52] </ref>; more modern treatments of the underlying theory are given by Dembo and Zeitouni [27] and Shwartz and Weiss [70]. <p> Further, the method provides a means of finding accurate numerical estimates of performance. In Section 3.6 we present simulation results to demonstrate the accuracy of our approach. To bound the error between the finite and infinite systems we will use Kurtz's work on density dependent jump Markov processes <ref> [32, 49, 50, 51, 52] </ref>, with some extensions specific to our problems. Kurtz's work has previously been applied to matching problems on random graphs [38, 43, 44] as well as some queueing models [70]; here, we apply it for the first time to load balancing problems. <p> We now present Kurtz's theorem. We note that the proof is essentially exactly the same as that given in [52, Chapter 8] or <ref> [32, Chapter 11] </ref>, generalized to the case of countably infinite dimensions. Theorem 3.13 [Kurtz] Suppose we have a density dependent family (of possibly countably infinite dimension) satisfying the Lipschitz condition jF (x) F (y)j M jx yj 66 for some constant M . <p> We can derive from the above that for all u t, jX n (u) X (u)j jX n (0) x 0 j + * n (u) + 0 We now apply Gronwall's inequality (see <ref> [32, p. 498] </ref> or [70, p. 78]): 67 Lemma 3.14 [Gronwall's inequality] Let f (t) be a bounded function on [0; T ] satisfying f (t) * + ffi 0 for 0 t T , where ffi and * are positive constants. <p> The probability of this event is p 2 n ). In the limiting case the O ( 1 n ) term goes to 0 and so we shall drop it 3 ; a more formal justification can be found in <ref> [32] </ref> or [53].
Reference: [33] <author> M. R. Garey and D. S. Johnson. </author> <title> Computers and Intractability : A Guide to the Theory of NP-Completeness. W.H. </title> <publisher> Freeman and Company, </publisher> <year> 1979. </year> <month> 113 </month>
Reference: [34] <author> L. A. Goldberg, Y. Matais, and S. Rao. </author> <title> An optical simulation of shared memory. </title> <booktitle> In Proceedings of the Sixth Annual ACM Symposium on Parallel Algorithms and Architectures, </booktitle> <pages> pages 257-267, </pages> <year> 1994. </year>
Reference-contexts: A later paper by Broder et al. considers a related problem, where edges of a tree arrive randomly and must orient themselves towards a vertex [22]. Dietzfelbinger and Meyer auf der Heide [28], Goldberg et al. <ref> [34] </ref>, MacKenzie et al. [55], and Stemann [72] have all developed further PRAM simulation algorithms using similar ideas. Most of these utilize collision-based protocols: if too many balls land in a bin, all of them must be rethrown. Dynamic variations of the problem have been much less well understood.
Reference: [35] <author> G. Gonnet. </author> <title> Expected length of the longest probe sequence in hash code searching. </title> <journal> Journal of the ACM, </journal> <volume> 28(2) </volume> <pages> 289-304, </pages> <month> April </month> <year> 1981. </year>
Reference-contexts: Let Y (m) (m) be independent Poisson random variables with mean m n . We will omit the superscript when it is clear from the context. In this section we will derive some relations between these two sets of random variables, adapting an argument used by Gonnet <ref> [35] </ref> to determine the expected maximum number of balls in a bin.
Reference: [36] <author> L. Green. </author> <title> A queueing system with general-use and limited-use servers. </title> <journal> Operations Research, </journal> <volume> 33 </volume> <pages> 168-182, </pages> <year> 1985. </year>
Reference-contexts: A different dynamic load balancing problem, where tasks remain permanently, was considered by Atjai et al. in [8]. In the queueing theory literature, Schwartz [69] and Green <ref> [36] </ref> have examined parallel systems where tasks have a type that determines which servers can used, with limited success in special cases. Researchers have placed more emphasis on the model where incoming customers choose the shortest queue.
Reference: [37] <author> T. Hagerup and C. Rub. </author> <title> A guided tour of Chernoff bounds. </title> <journal> Information Processing Letters, </journal> <volume> 33 </volume> <pages> 305-308, </pages> <month> February </month> <year> 1990. </year>
Reference-contexts: p; then Pr ( i=1 and similarly, if Pr (Y i = 1 j X 1 ; : : : ; X i1 ) p; then Pr ( i=1 The second lemma presents some useful Chernoff-type bounds that will be used frequently throughout the thesis; proofs may be found in <ref> [37] </ref>.
Reference: [38] <author> B. Hajek. </author> <title> Asymptotic analysis of an assignment problem arising in a distributed communications protocol. </title> <booktitle> In Proceedings of the 27th Conference on Decision and Control, </booktitle> <pages> pages 1455-1459, </pages> <year> 1988. </year>
Reference-contexts: Kurtz's work has been applied to matching problems on random graphs <ref> [38, 43, 44] </ref> as well as to some queueing models [70]; here, we apply it for the first time to load balancing problems. 1.2 The GREEDY algorithm We begin by presenting the main result and proof of Azar et al. from [11]. <p> To bound the error between the finite and infinite systems we will use Kurtz's work on density dependent jump Markov processes [32, 49, 50, 51, 52], with some extensions specific to our problems. Kurtz's work has previously been applied to matching problems on random graphs <ref> [38, 43, 44] </ref> as well as some queueing models [70]; here, we apply it for the first time to load balancing problems. Given the increasing use of Markov chains in the analysis of algorithms, we believe that this technique may be more widely applicable than previously expected. <p> This question has been previously solved in the limiting case as n ! 1 by Hajek using similar techniques <ref> [38] </ref>. We shall begin by briefly repeating his argument with some additional insights.
Reference: [39] <author> M. Harchol-Balter and D. Wolfe. </author> <title> Bounding delays in packet-routing networks. </title> <booktitle> In Proceedings of the Twenty-Seventh Annual ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 248-257, </pages> <year> 1995. </year>
Reference-contexts: expected delay in comparison to exponential service times in a network, and the more general question of whether variance in service times necessarily increases the expected delay of a network, often arises when one tries to use standard queueing theory results to find performance bounds on networks. (See, for example, <ref> [39, 59, 60, 64, 71] </ref>.) Generally, results comparing 85 the two types of systems are achieved using stochastic comparison techniques. Here, we instead compare the fixed points of the corresponding infinite systems.
Reference: [40] <author> N. Johnson and S. Kotz. </author> <title> Urn Models and Their Application. </title> <publisher> John Wiley and Sons, </publisher> <year> 1977. </year>
Reference: [41] <author> A. Kamath, R. Motwani, K. Palem, and P. Spirakis. </author> <title> Tail bounds for occupancy and the satisfiability threshold conjecture. </title> <booktitle> In Proceedings of the 35th IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1994. </year>
Reference-contexts: We note that the close relationship between these two models has been observed and made use of previously, for example in [23], and tighter bounds on specific problems can often be obtained with more detailed analyses, as can be seen, for example, in [16, Chapter 6] or <ref> [41] </ref>. An advantage of the approach we present is that it is quite general and easy to apply. Theorem 2.11 Let f (x 1 ; : : :; x n ) be a non-negative function. <p> Proof: The argument we present is based on a similar argument presented in <ref> [41, Theorem 2] </ref>. For 0 j cn, let F j be the -field of events corresponding to the possible states after j balls have been placed, and Z j = E [Y cn jF j ] be the associated conditional expectation of Y cn .
Reference: [42] <author> R. M. Karp, M. Luby, and F. Meyer auf der Heide. </author> <title> Efficient PRAM simulation on a distributed memory machine. </title> <booktitle> In Proceedings of the 24th ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 318-326, </pages> <year> 1992. </year>
Reference-contexts: The idea of using two (or more) hash functions to achieve better load balancing was introduced by Karp, Luby, and Meyer auf der Heide in a paper on PRAM simulation <ref> [42] </ref>. They demonstrate O (log log n) bounds by using a universal class of hash functions, showing not only that two hash functions provide an exponential improvement over a single hash function, but also that complete independence is 8 unnecessary. <p> We also examine an alternative strategy used in <ref> [42] </ref> (and often used in practice) based on setting a threshold at each bin: balls that attempt to enter a bin that has already accepted a number of balls equal to its threshold in that round must be rethrown. <p> Our results show that thresholding strategies can achieve a useful tradeoff between communication cost and the maximum load achieved. We conclude by presenting simulation results verifying our theoretical work. Besides the connections to the work of Karp, Luby, and Meyer auf der Heide <ref> [42] </ref> and of Azar et al. [11], our work is related to other work in the area of contention resolution. <p> We will examine a class of simple strategies that include many of the standard algorithms presented in the literature <ref> [11, 42, 55, 72, 73] </ref>. The strategies we restrict our attention to are non-adaptive, in that the possible destinations are chosen before any communication takes place. <p> For our bounds, we will rephrase the balls and bins problem in terms of a random graph orientation problem. The relationship between balls and bins problems and random graphs has been noted previously <ref> [8, 42, 55] </ref>; we thank Claire Kenyon and Orli Waarts for suggesting this model and several helpful related ideas. Here, we show that proving a lower bound for the balls and bins problem is equivalent to showing that, with sufficiently high probability, a specific subgraph appears in a random graph. <p> Stemann, using a different algorithm, also achieves a maximum load as good as the mpgreedy algorithm [73]. This algorithm is also not completely asynchronous, although it seems to require weaker synchrony than mpgreedy. 2.5 The threshold strategy We now examine another strategy, previously exploited in [24] and <ref> [42] </ref> in similar contexts, to achieve good load balancing. Given a threshold T , we imagine throwing the balls over r rounds. If more than T balls enter a bin during a round, the excess balls are rethrown in the next round. <p> As an illustrative example, we consider the case where T = 1. We note that similar more powerful results are given in <ref> [42] </ref> and [55], but the simple proofs below are appealing. Theorem 2.21 threshold (1) terminates after at most log log n + O (1) stages with high probability. Proof: As in the proof of Theorem 2.20, let k i be the number of balls to be thrown after round i.
Reference: [43] <author> R. M. Karp and M. Sipser. </author> <title> Maximum matchings in sparse random graphs. </title> <booktitle> In Proceedings of the 22nd IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 364-375, </pages> <year> 1981. </year>
Reference-contexts: Kurtz's work has been applied to matching problems on random graphs <ref> [38, 43, 44] </ref> as well as to some queueing models [70]; here, we apply it for the first time to load balancing problems. 1.2 The GREEDY algorithm We begin by presenting the main result and proof of Azar et al. from [11]. <p> To bound the error between the finite and infinite systems we will use Kurtz's work on density dependent jump Markov processes [32, 49, 50, 51, 52], with some extensions specific to our problems. Kurtz's work has previously been applied to matching problems on random graphs <ref> [38, 43, 44] </ref> as well as some queueing models [70]; here, we apply it for the first time to load balancing problems. Given the increasing use of Markov chains in the analysis of algorithms, we believe that this technique may be more widely applicable than previously expected.
Reference: [44] <author> R. M. Karp, U. V. Vazirani, and V. V. Vazirani. </author> <title> An optimal algorithm for on-line bipartite matching. </title> <booktitle> In Proceedings of the 27th Conference on Decision and Control, </booktitle> <pages> pages 352-358, </pages> <year> 1990. </year> <month> 114 </month>
Reference-contexts: Kurtz's work has been applied to matching problems on random graphs <ref> [38, 43, 44] </ref> as well as to some queueing models [70]; here, we apply it for the first time to load balancing problems. 1.2 The GREEDY algorithm We begin by presenting the main result and proof of Azar et al. from [11]. <p> To bound the error between the finite and infinite systems we will use Kurtz's work on density dependent jump Markov processes [32, 49, 50, 51, 52], with some extensions specific to our problems. Kurtz's work has previously been applied to matching problems on random graphs <ref> [38, 43, 44] </ref> as well as some queueing models [70]; here, we apply it for the first time to load balancing problems. Given the increasing use of Markov chains in the analysis of algorithms, we believe that this technique may be more widely applicable than previously expected.
Reference: [45] <author> F. P. Kelly. </author> <title> Reversibility and Stochastic Networks. </title> <publisher> John Wiley and Sons, </publisher> <year> 1979. </year>
Reference-contexts: The approach we use is based on Erlang's method of stages, which we shall describe briefly here. Kleinrock's excellent text provides a more detailed explanation [46, Sections 4.2 and 4.3], and Kelly uses this approach in a similar fashion <ref> [45, Section 3.3] </ref>. We approximate the constant service time with a gamma distribution: a single service will consists of r stages of service, where each stage is exponentially distributed with mean 1=r. <p> Indeed, even this step is non-trivial, although a similar proof for networks of quasi-reversible queues by Barbour appears to apply [15]. (See also <ref> [45, p.77-78] </ref> for more background for this problem.) Now, let D r;n be the distribution when there are n queues and service times have a gamma distribution of r stages. <p> This follows from the fact that the distribution function of any positive random variable can be approximated arbitrarily closely by a mixture of countably many gamma distributions <ref> [45, Lemma 3.9 and Exercise 3.3.3] </ref>. (An interesting discussion of this fact is given in [45, Section 3.3], where Erlang's method is used in a manner similar to that here.) In fact, the service time for each customer can be taken to be distributed as a gamma distribution described above with <p> This follows from the fact that the distribution function of any positive random variable can be approximated arbitrarily closely by a mixture of countably many gamma distributions [45, Lemma 3.9 and Exercise 3.3.3]. (An interesting discussion of this fact is given in <ref> [45, Section 3.3] </ref>, where Erlang's method is used in a manner similar to that here.) In fact, the service time for each customer can be taken to be distributed as a gamma distribution described above with some number of stages r, each with the same mean 1=m, where the value of
Reference: [46] <author> L. Kleinrock. </author> <title> Queueing Systems, Volume I: Theory. </title> <publisher> John Wiley and Sons, </publisher> <year> 1976. </year>
Reference-contexts: (that is, where d = 1); in this system, 1 We note that our results also hold with minor variations if the d queues are chosen without replacement. 52 each server acts like an M/M/1 server with Poisson arrival rate , which is known to be stable (see, for example, <ref> [46] </ref>). The comparison argument is entirely similar to those in [74] and [75], which show that choosing the shortest queue is optimal subject to certain assumptions on the service process; alternatively, an argument based on majorization is given in [10]. <p> To use the infinite system technique, we approximate this non-Markovian system by a Markovian one. The approach we use is based on Erlang's method of stages, which we shall describe briefly here. Kleinrock's excellent text provides a more detailed explanation <ref> [46, Sections 4.2 and 4.3] </ref>, and Kelly uses this approach in a similar fashion [45, Section 3.3]. We approximate the constant service time with a gamma distribution: a single service will consists of r stages of service, where each stage is exponentially distributed with mean 1=r.
Reference: [47] <author> V. F. Kolchin, B. A. Sevsat'yanov, and V. P. Chistyakov. </author> <title> Random Allocations. </title> <editor> V. H. </editor> <publisher> Winston & Sons, </publisher> <year> 1978. </year>
Reference: [48] <author> T. Kunz. </author> <title> The influence of different workload descriptions on a heuristic load balancing scheme. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 17 </volume> <pages> 725-730, </pages> <year> 1991. </year>
Reference-contexts: Threshold systems have been shown to perform well both in theoretical models and in practice <ref> [29, 48, 77] </ref>, although our results (such as the connection to density dependent Markov chains) appear to be new. We first consider the weak threshold model. The rate at which a queue changes size is clearly dependent on whether a queue has more or less than T customers.
Reference: [49] <author> T. G. Kurtz. </author> <title> Solutions of ordinary differential equations as limits of pure jump Markov processes. </title> <journal> Journal of Applied Probability, </journal> <volume> 7 </volume> <pages> 49-58, </pages> <year> 1970. </year>
Reference-contexts: These processes have an interesting behavior: as the size of the system (measured by the number of queues) grows to infinity, the limiting behavior can be described by a deterministic process. Our treatment of density dependent jump Markov processes is based on the work of Kurtz <ref> [32, 49, 50, 51, 52] </ref>; more modern treatments of the underlying theory are given by Dembo and Zeitouni [27] and Shwartz and Weiss [70]. <p> Further, the method provides a means of finding accurate numerical estimates of performance. In Section 3.6 we present simulation results to demonstrate the accuracy of our approach. To bound the error between the finite and infinite systems we will use Kurtz's work on density dependent jump Markov processes <ref> [32, 49, 50, 51, 52] </ref>, with some extensions specific to our problems. Kurtz's work has previously been applied to matching problems on random graphs [38, 43, 44] as well as some queueing models [70]; here, we apply it for the first time to load balancing problems.
Reference: [50] <author> T. G. Kurtz. </author> <title> Limit theorems for sequences of jump Markov processes approximating ordinary differential processes. </title> <journal> Journal of Applied Probability, </journal> <volume> 8 </volume> <pages> 344-356, </pages> <year> 1971. </year>
Reference-contexts: These processes have an interesting behavior: as the size of the system (measured by the number of queues) grows to infinity, the limiting behavior can be described by a deterministic process. Our treatment of density dependent jump Markov processes is based on the work of Kurtz <ref> [32, 49, 50, 51, 52] </ref>; more modern treatments of the underlying theory are given by Dembo and Zeitouni [27] and Shwartz and Weiss [70]. <p> Further, the method provides a means of finding accurate numerical estimates of performance. In Section 3.6 we present simulation results to demonstrate the accuracy of our approach. To bound the error between the finite and infinite systems we will use Kurtz's work on density dependent jump Markov processes <ref> [32, 49, 50, 51, 52] </ref>, with some extensions specific to our problems. Kurtz's work has previously been applied to matching problems on random graphs [38, 43, 44] as well as some queueing models [70]; here, we apply it for the first time to load balancing problems.
Reference: [51] <author> T. G. Kurtz. </author> <title> Strong approximation theorems for density dependent Markov chains. </title> <booktitle> Stochastic Processes and Applications, </booktitle> <volume> 6 </volume> <pages> 223-240, </pages> <year> 1978. </year>
Reference-contexts: These processes have an interesting behavior: as the size of the system (measured by the number of queues) grows to infinity, the limiting behavior can be described by a deterministic process. Our treatment of density dependent jump Markov processes is based on the work of Kurtz <ref> [32, 49, 50, 51, 52] </ref>; more modern treatments of the underlying theory are given by Dembo and Zeitouni [27] and Shwartz and Weiss [70]. <p> Further, the method provides a means of finding accurate numerical estimates of performance. In Section 3.6 we present simulation results to demonstrate the accuracy of our approach. To bound the error between the finite and infinite systems we will use Kurtz's work on density dependent jump Markov processes <ref> [32, 49, 50, 51, 52] </ref>, with some extensions specific to our problems. Kurtz's work has previously been applied to matching problems on random graphs [38, 43, 44] as well as some queueing models [70]; here, we apply it for the first time to load balancing problems.
Reference: [52] <author> T. G. Kurtz. </author> <title> Approximation of Population Processes. </title> <booktitle> CBMS-NSF Regional Conf. Series in Applied Math. </booktitle> <publisher> SIAM, </publisher> <year> 1981. </year>
Reference-contexts: These processes have an interesting behavior: as the size of the system (measured by the number of queues) grows to infinity, the limiting behavior can be described by a deterministic process. Our treatment of density dependent jump Markov processes is based on the work of Kurtz <ref> [32, 49, 50, 51, 52] </ref>; more modern treatments of the underlying theory are given by Dembo and Zeitouni [27] and Shwartz and Weiss [70]. <p> Further, the method provides a means of finding accurate numerical estimates of performance. In Section 3.6 we present simulation results to demonstrate the accuracy of our approach. To bound the error between the finite and infinite systems we will use Kurtz's work on density dependent jump Markov processes <ref> [32, 49, 50, 51, 52] </ref>, with some extensions specific to our problems. Kurtz's work has previously been applied to matching problems on random graphs [38, 43, 44] as well as some queueing models [70]; here, we apply it for the first time to load balancing problems. <p> Finally, in Section 3.6, we provide simulation results demonstrating the effectiveness of the infinite system approach. 3.2 Infinite systems: the epidemic example To explain the infinite system approach, we begin with a simple example due to Kurtz <ref> [52] </ref> using a model of the behavior of epidemics familiar to students of second year calculus. <p> We will discuss this point further in Section 3.5. 3.4.1 Kurtz's theorem We now give a more technical presentation of Kurtz's theorem. The presentation is based on <ref> [52] </ref>, although we have extended it to include certain infinite dimensional systems. 4 We begin with the definition of a density dependent family of Markov chains, as 4 Recall that the system is infinite dimensional because s i represents the fraction of servers with load at least i, and the state <p> An infinite system is one where the size of the system, in terms of the number of servers n, goes to infinity. As the epidemic model of Section 3.2 shows, an infinite system need not be infinite dimensional. 64 in <ref> [52, Chapter 8] </ref>, although we extend the definition to countably many dimensions. 5 For convenience we drop the vector notation where it can be understood by context. Let Z fl be either Z d for some dimension d, or Z N , as appropriate. <p> The transition rates are given by q (n) k;k+l = nfi l (k=n) = nfi l (~s), where fi e i (~s) = (s 2 i ), and fi e i (~s) = s i s i+1 . These rates determined our infinite system (3.5). It follows from <ref> [52, Chapter 7] </ref>, that a Markov process ^ X n , with intensities q (n) nfi l (k=n) satisfies ^ X n (t) = ^ X n (0) + l2L Z t fi l ^ X n (u) ! ! where the Y l (x) are independent standard Poisson processes. <p> We now present Kurtz's theorem. We note that the proof is essentially exactly the same as that given in <ref> [52, Chapter 8] </ref> or [32, Chapter 11], generalized to the case of countably infinite dimensions. Theorem 3.13 [Kurtz] Suppose we have a density dependent family (of possibly countably infinite dimension) satisfying the Lipschitz condition jF (x) F (y)j M jx yj 66 for some constant M . <p> Proof: We follow <ref> [52, Chapter 8] </ref>. Let sup x2K fi l (x) = fi l .
Reference: [53] <author> H. J. Kushner. </author> <title> Approximation and Weak Convergence Methods for Random Processes, with Applications to Stochastic Systems Theory. </title> <publisher> MIT Press, </publisher> <year> 1984. </year>
Reference-contexts: The probability of this event is p 2 n ). In the limiting case the O ( 1 n ) term goes to 0 and so we shall drop it 3 ; a more formal justification can be found in [32] or <ref> [53] </ref>.
Reference: [54] <author> M. Luby and A. Wigderson. </author> <title> Pairwise independence and derandomization. </title> <type> Technical Report TR-95-35, </type> <institution> International Computer Science Institute, </institution> <year> 1995. </year>
Reference: [55] <author> P. D. MacKenzie, C. G. Plaxton, and R. Rajaraman. </author> <title> On contention resolution protocols and associated probabilistic phenomena. </title> <institution> Department of Computer Science TR-94-06, University of Texas at Austin, </institution> <month> April </month> <year> 1994. </year> <note> An extended abstract appears in STOC 1994. </note>
Reference-contexts: A later paper by Broder et al. considers a related problem, where edges of a tree arrive randomly and must orient themselves towards a vertex [22]. Dietzfelbinger and Meyer auf der Heide [28], Goldberg et al. [34], MacKenzie et al. <ref> [55] </ref>, and Stemann [72] have all developed further PRAM simulation algorithms using similar ideas. Most of these utilize collision-based protocols: if too many balls land in a bin, all of them must be rethrown. Dynamic variations of the problem have been much less well understood. <p> Besides the connections to the work of Karp, Luby, and Meyer auf der Heide [42] and of Azar et al. [11], our work is related to other work in the area of contention resolution. For example, MacKenzie, Plaxton, and Rajaraman <ref> [55] </ref>, extending previous work by Dietzfelbinger and Meyer auf der Heide [28], examine contention resolution models based on the c-collision crossbar: if more than c items attempt to access a resource, none get through. <p> We will examine a class of simple strategies that include many of the standard algorithms presented in the literature <ref> [11, 42, 55, 72, 73] </ref>. The strategies we restrict our attention to are non-adaptive, in that the possible destinations are chosen before any communication takes place. <p> For our bounds, we will rephrase the balls and bins problem in terms of a random graph orientation problem. The relationship between balls and bins problems and random graphs has been noted previously <ref> [8, 42, 55] </ref>; we thank Claire Kenyon and Orli Waarts for suggesting this model and several helpful related ideas. Here, we show that proving a lower bound for the balls and bins problem is equivalent to showing that, with sufficiently high probability, a specific subgraph appears in a random graph. <p> As an illustrative example, we consider the case where T = 1. We note that similar more powerful results are given in [42] and <ref> [55] </ref>, but the simple proofs below are appealing. Theorem 2.21 threshold (1) terminates after at most log log n + O (1) stages with high probability. Proof: As in the proof of Theorem 2.20, let k i be the number of balls to be thrown after round i.
Reference: [56] <author> A. N. Michel and R. K. Miller. </author> <title> Qualitative Analysis of Large Scale Dynamical Systems. </title> <publisher> Academic Press, Inc., </publisher> <year> 1977. </year>
Reference-contexts: We now consider the technical problem of defining d=dt when * i (t) = 0 for some i. Since we are interested in the forward progress of the system, it is sufficient to consider the upper right-hand derivatives of * i . (See, for instance, <ref> [56, p. 16] </ref>.) That is, we may 59 define dj* i j fi fi t=t 0 t!t + j* i (t)j ; and similarly for d=dt. <p> We note here that there are other notions of convergence besides exponential convergence (Definition 3.5) and stability, but we will not require them here. A good introduction to dynamical systems in this context is the book by Miller and Michel [58]. We also suggest other works by these authors <ref> [56, 57] </ref>, which provide a deeper treatment of the subject.
Reference: [57] <author> A. N. Michel and R. K. Miller. </author> <title> Stability theory for countably infinite systems of differential equations. </title> <journal> Tohoku Mathematical Journal, </journal> <pages> pages 155-168, </pages> <year> 1980. </year> <month> 115 </month>
Reference-contexts: L 1 -distance differ by at most a constant factor, so a suitable T 1 can be found.) A proof for the infinite dimensional case may therefore be possible using a limiting argument based on a sequence of finite dimensional systems. (See, for example, the work of Miller and Michel <ref> [57] </ref>.) For the supermarket model, each system in this sequence would have a bound on the maximum queue size, and we would examine the limit as the maximum allowed queue length increases to infinity. <p> We note here that there are other notions of convergence besides exponential convergence (Definition 3.5) and stability, but we will not require them here. A good introduction to dynamical systems in this context is the book by Miller and Michel [58]. We also suggest other works by these authors <ref> [56, 57] </ref>, which provide a deeper treatment of the subject.
Reference: [58] <author> R. K. Miller and A. N. Michel. </author> <title> Ordinary Differential Equations. </title> <publisher> Academic Press, Inc., </publisher> <year> 1982. </year>
Reference-contexts: We note here that there are other notions of convergence besides exponential convergence (Definition 3.5) and stability, but we will not require them here. A good introduction to dynamical systems in this context is the book by Miller and Michel <ref> [58] </ref>. We also suggest other works by these authors [56, 57], which provide a deeper treatment of the subject.
Reference: [59] <author> M. Mitzenmacher. </author> <title> Bounds on the greedy routing algorithm for array networks. </title> <booktitle> In Proceedings of the Sixth Annual ACM Symposium on Parallel Algorithms and Architectures, </booktitle> <pages> pages 248-259, </pages> <year> 1994. </year> <note> To appear in the Journal of Computer Systems and Science. </note>
Reference-contexts: expected delay in comparison to exponential service times in a network, and the more general question of whether variance in service times necessarily increases the expected delay of a network, often arises when one tries to use standard queueing theory results to find performance bounds on networks. (See, for example, <ref> [39, 59, 60, 64, 71] </ref>.) Generally, results comparing 85 the two types of systems are achieved using stochastic comparison techniques. Here, we instead compare the fixed points of the corresponding infinite systems.
Reference: [60] <author> M. Mitzenmacher. </author> <title> Constant time per edge is optimal on rooted tree networks. </title> <booktitle> In Proceedings of the Eighth Annual ACM Symposium on Parallel Algorithms and Architectures, </booktitle> <pages> pages 162-169, </pages> <year> 1996. </year>
Reference-contexts: expected delay in comparison to exponential service times in a network, and the more general question of whether variance in service times necessarily increases the expected delay of a network, often arises when one tries to use standard queueing theory results to find performance bounds on networks. (See, for example, <ref> [39, 59, 60, 64, 71] </ref>.) Generally, results comparing 85 the two types of systems are achieved using stochastic comparison techniques. Here, we instead compare the fixed points of the corresponding infinite systems.
Reference: [61] <author> M. Mitzenmacher. </author> <title> Density dependent jump Markov processes and applications to load balancing. </title> <booktitle> In Proceedings of the 37th IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1996. </year>
Reference-contexts: We show that this dynamic model exhibits many of the same properties as the static model; in particular, both the maximum load and the expected time improve exponentially when incoming customers have two choices for their destination. A preliminary version of this work has appeared in <ref> [61] </ref>. In Chapter 4 we use the tools from Chapter 3 to study a host of other load balancing models, both static and dynamic. The purpose of this section is to demonstrate that our methodology has several features that give it an advantage over previous techniques: generality, accuracy, and simplicity.
Reference: [62] <author> R. D. Nelson. </author> <title> The mathematics of product form queuing networks. </title> <journal> ACM Computing Surveys, </journal> <volume> 25(3) </volume> <pages> 339-369, </pages> <month> September </month> <year> 1992. </year>
Reference-contexts: fixed point for the closed model looks similar to the fixed point for the supermarket model, as the closed model is exactly like the supermarket model, except that its state space is truncated to states where there are ffn customers. (For further reference, see the State Truncation Property described in <ref> [62] </ref>.) 92 A slightly different closed model was successfully analyzed (in a completely different manner) by Azar et al. in [11].
Reference: [63] <author> Y. Rabani, Y. Rabinovich, and A. Sinclair. </author> <title> A computational view of population genetics. </title> <booktitle> In Proceedings of the 27th ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 83-92, </pages> <year> 1995. </year>
Reference-contexts: The idea of using infinite systems has also been applied to recent work in genetic algorithms, such as the work on quadratic dynamical systems by Rabani, Rabinovich, and Sinclair <ref> [63] </ref>. We hope that the work of this thesis will encourage this type of analysis in other areas. We also believe that it is important to apply the ideas in this thesis, especially the idea of the power of two choices, to actual systems.
Reference: [64] <author> R. Righter. and J. Shanthikumar. </author> <title> Extremal properties of the FIFO discipline in queueing networks. </title> <journal> Journal of Applied Probability, </journal> <volume> 29 </volume> <pages> 967-978, </pages> <month> November </month> <year> 1992. </year>
Reference-contexts: expected delay in comparison to exponential service times in a network, and the more general question of whether variance in service times necessarily increases the expected delay of a network, often arises when one tries to use standard queueing theory results to find performance bounds on networks. (See, for example, <ref> [39, 59, 60, 64, 71] </ref>.) Generally, results comparing 85 the two types of systems are achieved using stochastic comparison techniques. Here, we instead compare the fixed points of the corresponding infinite systems.
Reference: [65] <author> S. M. Ross. </author> <title> Average delay in queues with non-stationary Poisson arrivals. </title> <journal> Journal of Applied Probability, </journal> <volume> 15 </volume> <pages> 602-609, </pages> <year> 1978. </year>
Reference-contexts: Although this may not appear surprising, it is far from trivial: a simple variation of a counterexample given by Ross <ref> [65] </ref> shows that for certain arrival processes, the expected time in systems where customers choose the shortest queue can increase when one changes service times from exponential to constant.
Reference: [66] <author> S. M. Ross. </author> <title> Introduction to Probability Models. </title> <publisher> Academic Press, Inc., </publisher> <year> 1989. </year>
Reference-contexts: We will assume that the reader has some familiarity with the basic terminology and results from queueing theory, which can be found in most standard introductory texts on stochastic processes (e.g. <ref> [66, 67, 76] </ref>). In particular, we expect a basic understanding of the M/M/1 queue. We first develop the appropriate techniques by focusing on the following natural dynamic model: customers arrive as a Poisson stream of rate n, where &lt; 1, at a collection of n servers.
Reference: [67] <author> S.M. Ross. </author> <title> Stochastic Models. </title> <publisher> John Wiley and Sons, </publisher> <year> 1983. </year>
Reference-contexts: We will assume that the reader has some familiarity with the basic terminology and results from queueing theory, which can be found in most standard introductory texts on stochastic processes (e.g. <ref> [66, 67, 76] </ref>). In particular, we expect a basic understanding of the M/M/1 queue. We first develop the appropriate techniques by focusing on the following natural dynamic model: customers arrive as a Poisson stream of rate n, where &lt; 1, at a collection of n servers.
Reference: [68] <author> L. Rudolph, M. Slivkin-Allalouf, and E. Upfal. </author> <title> A simple load balancing scheme for task allocation in parallel machines. </title> <booktitle> In Proceedings of the Second Annual ACM Symposium on Parallel Algorithms and Architectures, </booktitle> <pages> pages 237-245, </pages> <year> 1991. </year>
Reference-contexts: It may also be used to model other work stealing strategies, such as that proposed by Rudolph, Slivkin-Allalouf, and Upfal in <ref> [68] </ref>. 4.4.6 The edge orientation problem We now examine a rather different type of load balancing problem. Consider the complete graph on n vertices.
Reference: [69] <author> B. L. Schwartz. </author> <title> Queueing models with lane selection: A new class of problems. </title> <journal> Operations Research, </journal> <volume> 22 </volume> <pages> 331-339, </pages> <year> 1974. </year> <month> 116 </month>
Reference-contexts: Azar et al. [11] do consider a dynamic variant of the problem, but it appears much less realistic than the natural queueing model we propose. A different dynamic load balancing problem, where tasks remain permanently, was considered by Atjai et al. in [8]. In the queueing theory literature, Schwartz <ref> [69] </ref> and Green [36] have examined parallel systems where tasks have a type that determines which servers can used, with limited success in special cases. Researchers have placed more emphasis on the model where incoming customers choose the shortest queue.
Reference: [70] <author> A. Shwartz and A. Weiss. </author> <title> Large Deviations for Performance Analysis. </title> <publisher> Chapman & Hall, </publisher> <year> 1995. </year>
Reference-contexts: Our treatment of density dependent jump Markov processes is based on the work of Kurtz [32, 49, 50, 51, 52]; more modern treatments of the underlying theory are given by Dembo and Zeitouni [27] and Shwartz and Weiss <ref> [70] </ref>. Kurtz's work has been applied to matching problems on random graphs [38, 43, 44] as well as to some queueing models [70]; here, we apply it for the first time to load balancing problems. 1.2 The GREEDY algorithm We begin by presenting the main result and proof of Azar et <p> on the work of Kurtz [32, 49, 50, 51, 52]; more modern treatments of the underlying theory are given by Dembo and Zeitouni [27] and Shwartz and Weiss <ref> [70] </ref>. Kurtz's work has been applied to matching problems on random graphs [38, 43, 44] as well as to some queueing models [70]; here, we apply it for the first time to load balancing problems. 1.2 The GREEDY algorithm We begin by presenting the main result and proof of Azar et al. from [11]. <p> Kurtz's work has previously been applied to matching problems on random graphs [38, 43, 44] as well as some queueing models <ref> [70] </ref>; here, we apply it for the first time to load balancing problems. Given the increasing use of Markov chains in the analysis of algorithms, we believe that this technique may be more widely applicable than previously expected. <p> We can derive from the above that for all u t, jX n (u) X (u)j jX n (0) x 0 j + * n (u) + 0 We now apply Gronwall's inequality (see [32, p. 498] or <ref> [70, p. 78] </ref>): 67 Lemma 3.14 [Gronwall's inequality] Let f (t) be a bounded function on [0; T ] satisfying f (t) * + ffi 0 for 0 t T , where ffi and * are positive constants. <p> Furthermore, since the infinite system converges exponentially, even if the finite system does deviate from the fixed point over some interval of time, it is likely to move back towards the fixed point almost immediately. This argument is the basis for the Freidlen-Wentzell theory, presented for example in <ref> [70, Chapter 6] </ref>. Unfortunately, we have not been able to formalize this argument for the infinite dimensional supermarket model, because of some technical problems related to working in infinite dimensions. <p> Showing that this interchange of limits is justified can be extremely difficult; for example, see Chapter 14 of the book by Shwartz and Weiss <ref> [70, pp. 400-405] </ref> for a partial justification of such an interchange in a model related to the Aloha protocol.
Reference: [71] <author> G. D. Stamoulis and J. N. Tsitsiklis. </author> <title> The efficiency of greedy routing in hypercubes and butterflies. </title> <journal> IEEE Transactions on Communications, </journal> <volume> 42(11) </volume> <pages> 3051-3061, </pages> <note> Novem-ber 1994. An early version appeared in the Proceedings of the Second Annual ACM Symposium on Parallel Algorithms and Architectures, </note> <author> p. </author> <month> 248-259, </month> <year> 1991. </year>
Reference-contexts: expected delay in comparison to exponential service times in a network, and the more general question of whether variance in service times necessarily increases the expected delay of a network, often arises when one tries to use standard queueing theory results to find performance bounds on networks. (See, for example, <ref> [39, 59, 60, 64, 71] </ref>.) Generally, results comparing 85 the two types of systems are achieved using stochastic comparison techniques. Here, we instead compare the fixed points of the corresponding infinite systems.
Reference: [72] <author> V. Stemann. </author> <title> Contention Resolution Protocols in Hashing Based Shared Memory Simulations. </title> <type> PhD thesis, </type> <institution> University of Paderborn, </institution> <year> 1995. </year>
Reference-contexts: A later paper by Broder et al. considers a related problem, where edges of a tree arrive randomly and must orient themselves towards a vertex [22]. Dietzfelbinger and Meyer auf der Heide [28], Goldberg et al. [34], MacKenzie et al. [55], and Stemann <ref> [72] </ref> have all developed further PRAM simulation algorithms using similar ideas. Most of these utilize collision-based protocols: if too many balls land in a bin, all of them must be rethrown. Dynamic variations of the problem have been much less well understood. <p> We will examine a class of simple strategies that include many of the standard algorithms presented in the literature <ref> [11, 42, 55, 72, 73] </ref>. The strategies we restrict our attention to are non-adaptive, in that the possible destinations are chosen before any communication takes place.
Reference: [73] <author> V. Stemann. </author> <title> Parallel balanced allocations. </title> <booktitle> In Proceedings of the Eighth Annual ACM Symposium on Parallel Algorithms and Architectures, </booktitle> <year> 1996. </year>
Reference-contexts: For example, MacKenzie, Plaxton, and Rajaraman [55], extending previous work by Dietzfelbinger and Meyer auf der Heide [28], examine contention resolution models based on the c-collision crossbar: if more than c items attempt to access a resource, none get through. Following our original work in this area, Volker Stemann <ref> [73] </ref> has developed collision-based protocols that match our lower bound over the entire range of r. <p> We will examine a class of simple strategies that include many of the standard algorithms presented in the literature <ref> [11, 42, 55, 72, 73] </ref>. The strategies we restrict our attention to are non-adaptive, in that the possible destinations are chosen before any communication takes place. <p> It is an open question whether one can extend mpgreedy to avoid the need for the partial order on the balls or the synchronous rounds while achieving a similar maximum load. Stemann, using a different algorithm, also achieves a maximum load as good as the mpgreedy algorithm <ref> [73] </ref>. This algorithm is also not completely asynchronous, although it seems to require weaker synchrony than mpgreedy. 2.5 The threshold strategy We now examine another strategy, previously exploited in [24] and [42] in similar contexts, to achieve good load balancing.
Reference: [74] <author> R. R. Weber. </author> <title> On the optimal assignment of customers to parallel servers. </title> <journal> Journal of Applied Probability, </journal> <volume> 15 </volume> <pages> 406-413, </pages> <year> 1978. </year>
Reference-contexts: The comparison argument is entirely similar to those in <ref> [74] </ref> and [75], which show that choosing the shortest queue is optimal subject to certain assumptions on the service process; alternatively, an argument based on majorization is given in [10].
Reference: [75] <author> W. Winston. </author> <title> Optimality of the shortest line discipline. </title> <journal> Journal of Applied Probability, </journal> <volume> 14 </volume> <pages> 181-189, </pages> <year> 1977. </year>
Reference-contexts: The comparison argument is entirely similar to those in [74] and <ref> [75] </ref>, which show that choosing the shortest queue is optimal subject to certain assumptions on the service process; alternatively, an argument based on majorization is given in [10].
Reference: [76] <author> R. Wolff. </author> <title> Stochastic Modeling and the Theory of Queues. </title> <publisher> Prentice-Hall, Inc., </publisher> <year> 1989. </year>
Reference-contexts: We will assume that the reader has some familiarity with the basic terminology and results from queueing theory, which can be found in most standard introductory texts on stochastic processes (e.g. <ref> [66, 67, 76] </ref>). In particular, we expect a basic understanding of the M/M/1 queue. We first develop the appropriate techniques by focusing on the following natural dynamic model: customers arrive as a Poisson stream of rate n, where &lt; 1, at a collection of n servers.
Reference: [77] <author> S. Zhou. </author> <title> A trace-driven simulation study of dynamic load balancing. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 14 </volume> <pages> 1327-1341, </pages> <year> 1988. </year>
Reference-contexts: Distributed load balancing strategies based on information about only a limited number of other processors have been studied by Eager et al. [29, 30, 31] and Zhou <ref> [77] </ref>. In fact, the work of Eager et al. examines load balancing strategies similar to many of those we examine, and they also use an approach based on Markov chains for their analysis [29, 30, 31]. <p> The limited coordination enforced by our model corresponds nicely to models of distributed systems, as distinguished from centralized systems, where the shortest queue model appears more applicable. The supermarket model has been studied both analytically and with simulations by Eager et al. [29] and through trace-driven simulations by Zhou <ref> [77] </ref>. Both works demonstrate the effectiveness of each customer having a small number of choices. <p> Threshold systems have been shown to perform well both in theoretical models and in practice <ref> [29, 48, 77] </ref>, although our results (such as the connection to density dependent Markov chains) appear to be new. We first consider the weak threshold model. The rate at which a queue changes size is clearly dependent on whether a queue has more or less than T customers. <p> s i )(1 + s T +1 ) (s i s i+1 ) ; i T + 1 ; (4.11) dt i1 s 2 For small thresholds, the behavior of this system is very similar to that of the supermarket system, as has been noted empirically previously in [29] and <ref> [77] </ref>. In fact, we next show that the strong threshold model is double exponentially decreasing, as one would expect from the differential equations (4.12). Lemma 4.8 The fixed point for the strong threshold model decreases doubly exponentially.
References-found: 77

