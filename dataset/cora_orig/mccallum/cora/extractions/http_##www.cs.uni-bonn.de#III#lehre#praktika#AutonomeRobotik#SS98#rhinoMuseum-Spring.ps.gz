URL: http://www.cs.uni-bonn.de/III/lehre/praktika/AutonomeRobotik/SS98/rhinoMuseum-Spring.ps.gz
Refering-URL: http://www.cs.uni-bonn.de/III/lehre/praktika/AutonomeRobotik/SS98/
Root-URL: http://cs.uni-bonn.de
Title: Real Robots for the Real World The RHINO Museum Tour-guide Project  
Author: Wolfram Burgard, Armin B. Cremers, Dieter Fox, Dirk Hahnel, Gerhard Lakemeyer Dirk Schulz, Walter Steiner, Sebastian Thrun 
Note: in Proc.of the AAAI 1998 Spring Symposium on Integrating Robotics Research: Taking the Next Leap  
Address: Bonn, Germany Aachen, Germany Pittsburgh, PA  
Affiliation: Computer Science Department III Computer Science Department School of Computer Science University of Bonn Technical University of Aachen Carnegie Mellon University  
Abstract: In late 1993 the RHINO project on mobile indoor robotics was initiated. While early work in this project focused primarily on isolated issues such as navigation, it soon became clear that truly useful robots need to integrate many different aspects such as user interaction, task planning, navigation etc. In this paper we describe our experience at exercising such integration in the context of the robot RHINO acting as a tour-guide in a real museum. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Beetz, M.; Burgard, W.; Fox, D.; and Cremers, A. </author> <title> Integrating active localization into high-level robot control systems. </title> <note> Submitted to Journal of Robotics and Autonomous Systems. </note>
Reference: <author> Borenstein, J., and Koren, Y. </author> <year> 1991. </year> <title> The vector field histogram fast obstacle avoidance for mobile robots. </title> <journal> IEEE Transactions on Robotics and Automation 7(3). </journal>
Reference: <author> Buhmann, J.; Burgard, W.; Cremers, A.; Fox, D.; Hofmann, T.; Schneider, F.; Strikos, J.; and Thrun, S. </author> <year> 1995. </year> <title> The mobile robot Rhino. </title> <journal> AI Magazine 16(2). </journal>
Reference: <author> Burgard, W.; Fox, D.; Hennig, D.; and Schmidt, T. </author> <year> 1996. </year> <title> Estimating the absolute position of a mobile robot using position probability grids. </title> <booktitle> In Proc. of the 14th National Conference on Artificial Intelligence. </booktitle>
Reference-contexts: The collision avoidance treats this input as if it were given by the robot's sensors. * Hybrid architecture. Instead of relying on a fixed technique, each modules is realized using the most appropriate paradigm. For example, whereas the localization system <ref> (Burgard et al. 1996) </ref> uses a probabilistic state estimation technique, we apply a sym bolic language to specify the task controller. * Any-time algorithms. Whenever possible, modules are designed to have any-time characteristics.
Reference: <author> Burgard, W.; Fox, D.; Hahnel, D.; Lakemeyer, G.; Schulz, D.; Steiner, W.; Thrun, S.; and Cremers, A. </author> <year> 1997. </year> <note> The RHINO museum tour-guide project. http://www.cs.uni-bonn.de/~rhino/tourguide. </note>
Reference-contexts: The task to be performed by a navigation system is to avoid collisions with visitors and exhibits while navigating at walking speed. To deal with such situations, we extended our collision avoidance system <ref> (Fox, Burgard, & Thrun 1997) </ref> so that it exploits an existing map of the environment. <p> It is not restricted to pre-defined features generally used in other approaches such as openings, doorways or junction types which are not present in the museum environment. Using a selective update rule and fast precompiled tables of necessary densities <ref> (Burgard, Fox, & Hennig 1997) </ref> our system is able to update the state space in less than .1 seconds, which allows (1) to efficiently localize the robot and keep track of the robot's position and (2) to measure the certainty in the position estimation (Beetz et al. ). <p> To ease this interaction RHINO always displays the function of each button on an LCD-display to the left of the buttons (see Figure 8). Additionally, RHINO can be tele-operated over the Internet <ref> (Burgard et al. 1997) </ref>. Virtual visitors are able to select the exhibits they want to get information about (text and live-images). Additionally, internet visitors can specify from which direction they want to see the exhibits. RHINO directly schedules requests collecting similar requests for different users. <p> RHINO directly schedules requests collecting similar requests for different users. By using Java-applets, Web users get smooth animations of the robot's movements in the museum and frequent updates of the cur Fig. 8: RHINO's user interface Fig. 9: On-line images page of the Web-interface rent task RHINO is executing <ref> (Burgard, Cremers, & Schulz 1997) </ref>. RHINO played back pre-recorded texts and sounds to "communicate" with visitors. <p> Tab. 1: Some key figures from the museum tour-guide project. During a total of 47 hours within six days of operation, the overall RHINO system proved to be highly reliable (see Table 1). More than 2,000 real visitors and over 600 "virtual" Web-based visitors <ref> (Burgard et al. 1997) </ref> were guided by RHINO, some of whom followed the robot for more than an hour. RHINO fulfilled 2,400 tour requests by real and virtual visitors of the museum.
Reference: <author> Burgard, W.; Cremers, A.; and Schulz, D. </author> <year> 1997. </year> <title> Architecture of the "`Robotic Tele Lab"'. </title> <booktitle> In Proc. of the 1997 Annual Conference on Advances in Multimedia and Simulation. to appear. </booktitle>
Reference-contexts: The task to be performed by a navigation system is to avoid collisions with visitors and exhibits while navigating at walking speed. To deal with such situations, we extended our collision avoidance system <ref> (Fox, Burgard, & Thrun 1997) </ref> so that it exploits an existing map of the environment. <p> It is not restricted to pre-defined features generally used in other approaches such as openings, doorways or junction types which are not present in the museum environment. Using a selective update rule and fast precompiled tables of necessary densities <ref> (Burgard, Fox, & Hennig 1997) </ref> our system is able to update the state space in less than .1 seconds, which allows (1) to efficiently localize the robot and keep track of the robot's position and (2) to measure the certainty in the position estimation (Beetz et al. ). <p> To ease this interaction RHINO always displays the function of each button on an LCD-display to the left of the buttons (see Figure 8). Additionally, RHINO can be tele-operated over the Internet <ref> (Burgard et al. 1997) </ref>. Virtual visitors are able to select the exhibits they want to get information about (text and live-images). Additionally, internet visitors can specify from which direction they want to see the exhibits. RHINO directly schedules requests collecting similar requests for different users. <p> RHINO directly schedules requests collecting similar requests for different users. By using Java-applets, Web users get smooth animations of the robot's movements in the museum and frequent updates of the cur Fig. 8: RHINO's user interface Fig. 9: On-line images page of the Web-interface rent task RHINO is executing <ref> (Burgard, Cremers, & Schulz 1997) </ref>. RHINO played back pre-recorded texts and sounds to "communicate" with visitors. <p> Tab. 1: Some key figures from the museum tour-guide project. During a total of 47 hours within six days of operation, the overall RHINO system proved to be highly reliable (see Table 1). More than 2,000 real visitors and over 600 "virtual" Web-based visitors <ref> (Burgard et al. 1997) </ref> were guided by RHINO, some of whom followed the robot for more than an hour. RHINO fulfilled 2,400 tour requests by real and virtual visitors of the museum.
Reference: <author> Burgard, W.; Fox, D.; and Hennig, D. </author> <year> 1997. </year> <title> Fast grid-based position tracking for mobile robots. </title> <booktitle> In Proc. of the 21th German Conference on Artificial Intelligence (KI 97), </booktitle> <address> Germany. </address> <publisher> Springer Verlag. </publisher>
Reference-contexts: The task to be performed by a navigation system is to avoid collisions with visitors and exhibits while navigating at walking speed. To deal with such situations, we extended our collision avoidance system <ref> (Fox, Burgard, & Thrun 1997) </ref> so that it exploits an existing map of the environment. <p> It is not restricted to pre-defined features generally used in other approaches such as openings, doorways or junction types which are not present in the museum environment. Using a selective update rule and fast precompiled tables of necessary densities <ref> (Burgard, Fox, & Hennig 1997) </ref> our system is able to update the state space in less than .1 seconds, which allows (1) to efficiently localize the robot and keep track of the robot's position and (2) to measure the certainty in the position estimation (Beetz et al. ). <p> To ease this interaction RHINO always displays the function of each button on an LCD-display to the left of the buttons (see Figure 8). Additionally, RHINO can be tele-operated over the Internet <ref> (Burgard et al. 1997) </ref>. Virtual visitors are able to select the exhibits they want to get information about (text and live-images). Additionally, internet visitors can specify from which direction they want to see the exhibits. RHINO directly schedules requests collecting similar requests for different users. <p> RHINO directly schedules requests collecting similar requests for different users. By using Java-applets, Web users get smooth animations of the robot's movements in the museum and frequent updates of the cur Fig. 8: RHINO's user interface Fig. 9: On-line images page of the Web-interface rent task RHINO is executing <ref> (Burgard, Cremers, & Schulz 1997) </ref>. RHINO played back pre-recorded texts and sounds to "communicate" with visitors. <p> Tab. 1: Some key figures from the museum tour-guide project. During a total of 47 hours within six days of operation, the overall RHINO system proved to be highly reliable (see Table 1). More than 2,000 real visitors and over 600 "virtual" Web-based visitors <ref> (Burgard et al. 1997) </ref> were guided by RHINO, some of whom followed the robot for more than an hour. RHINO fulfilled 2,400 tour requests by real and virtual visitors of the museum.
Reference: <author> Burgard, W.; Fox, D.; and Thrun, S. </author> <year> 1997. </year> <title> Active mobile robot localization. </title> <booktitle> In Proc. of the Fifteenth International Joint Conference on Artificial Intelligence. </booktitle>
Reference-contexts: The task to be performed by a navigation system is to avoid collisions with visitors and exhibits while navigating at walking speed. To deal with such situations, we extended our collision avoidance system <ref> (Fox, Burgard, & Thrun 1997) </ref> so that it exploits an existing map of the environment. <p> It is not restricted to pre-defined features generally used in other approaches such as openings, doorways or junction types which are not present in the museum environment. Using a selective update rule and fast precompiled tables of necessary densities <ref> (Burgard, Fox, & Hennig 1997) </ref> our system is able to update the state space in less than .1 seconds, which allows (1) to efficiently localize the robot and keep track of the robot's position and (2) to measure the certainty in the position estimation (Beetz et al. ). <p> To ease this interaction RHINO always displays the function of each button on an LCD-display to the left of the buttons (see Figure 8). Additionally, RHINO can be tele-operated over the Internet <ref> (Burgard et al. 1997) </ref>. Virtual visitors are able to select the exhibits they want to get information about (text and live-images). Additionally, internet visitors can specify from which direction they want to see the exhibits. RHINO directly schedules requests collecting similar requests for different users. <p> RHINO directly schedules requests collecting similar requests for different users. By using Java-applets, Web users get smooth animations of the robot's movements in the museum and frequent updates of the cur Fig. 8: RHINO's user interface Fig. 9: On-line images page of the Web-interface rent task RHINO is executing <ref> (Burgard, Cremers, & Schulz 1997) </ref>. RHINO played back pre-recorded texts and sounds to "communicate" with visitors. <p> Tab. 1: Some key figures from the museum tour-guide project. During a total of 47 hours within six days of operation, the overall RHINO system proved to be highly reliable (see Table 1). More than 2,000 real visitors and over 600 "virtual" Web-based visitors <ref> (Burgard et al. 1997) </ref> were guided by RHINO, some of whom followed the robot for more than an hour. RHINO fulfilled 2,400 tour requests by real and virtual visitors of the museum.
Reference: <author> Fedor, C. </author> <year> 1993. </year> <title> TCX. An interprocess communi-cation system for building robotic architectures. Programmer's guide to version 10.xx. </title> <institution> Carnegie Mellon University, </institution> <address> Pittsurgh, PA 15213. </address>
Reference-contexts: Furthermore, such approaches can easily be combined with learning techniques, which allows the system to adapt to changing situations. * Distributed and decentralized processing. In the RHINO system different modules can be run on different machines. They communicate over the internet using the communication server TCX <ref> (Fedor 1993) </ref>. * Modularity. Whenever possible, new functionality is added by developing an appropriate module. In the RHINO system modules interact with other modules via message passing.
Reference: <author> Fox, D.; Burgard, W.; and Thrun, S. </author> <title> A hybrid collision avoidance method for mobile robots. </title> <booktitle> Submitted to Int. Conf. on Robotics and Automation (ICRA-98). </booktitle>
Reference: <author> Fox, D.; Burgard, W.; and Thrun, S. </author> <year> 1997. </year> <title> The dynamic window approach to collision avoidance. </title> <journal> IEEE Robotics & Automation Magazine 4(1). </journal>
Reference-contexts: The task to be performed by a navigation system is to avoid collisions with visitors and exhibits while navigating at walking speed. To deal with such situations, we extended our collision avoidance system <ref> (Fox, Burgard, & Thrun 1997) </ref> so that it exploits an existing map of the environment. <p> It is not restricted to pre-defined features generally used in other approaches such as openings, doorways or junction types which are not present in the museum environment. Using a selective update rule and fast precompiled tables of necessary densities <ref> (Burgard, Fox, & Hennig 1997) </ref> our system is able to update the state space in less than .1 seconds, which allows (1) to efficiently localize the robot and keep track of the robot's position and (2) to measure the certainty in the position estimation (Beetz et al. ).
Reference: <author> Hu, H., and Brady, M. </author> <year> 1994. </year> <title> A bayesian approach to real-time obstacle avoidance for a mobile robot. </title> <booktitle> In Autonomous Robots, </booktitle> <volume> volume 1. </volume> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston. </address>
Reference: <author> Kaelbling, L.; Cassandra, A.; and Kurien, J. </author> <year> 1996. </year> <title> Acting under uncertainty: Discrete bayesian models for mobile-robot navigation. </title> <booktitle> In Proc. of the IEEE/RSJ International Conference on Intelligent Robots and Systems. </booktitle>
Reference: <author> Khatib, M., and Chatila, R. </author> <year> 1995. </year> <title> An extended potential field approach for mobile robot sensor-based motions. </title> <booktitle> In Proc. International Conference on Intelligent Autonomous Systems (IAS'4). </booktitle>
Reference: <author> Khatib, O. </author> <year> 1986. </year> <title> Real-time obstacle avoidance for robot manipulator and mobile robots. </title> <journal> The International Journal of Robotics Research 5(1). </journal>
Reference: <author> Levesque, H.; Reiter, R.; Lesprance, Y.; and Scherl, R. </author> <year> 1997. </year> <title> GOLOG: A logic programming language for dynamic domains. </title> <journal> Journal of Logic Programming. </journal>
Reference-contexts: Further modules such as the novelty detection system and the obstacle server, which have been implemented especially for the tour-guide application, are described in the section concerning the user interface and the navigation system, respectively. Task Planning and Execution At the most abstract level, we are using GOLOG <ref> (Levesque et al. 1997) </ref> to provide RHINO with a description of the task it should perform. GOLOG is an extension of the situation calculus (McCarthy 1968) and allows the specification of complex actions using control structures like if-then-else or recursive procedures familiar from ordinary programming languages.
Reference: <author> McCarthy, J. </author> <year> 1968. </year> <title> Situations, actions and causal laws. </title> <booktitle> In Semantic Information Processing. </booktitle> <publisher> MIT Press. </publisher> <pages> 410-417. </pages>
Reference-contexts: Task Planning and Execution At the most abstract level, we are using GOLOG (Levesque et al. 1997) to provide RHINO with a description of the task it should perform. GOLOG is an extension of the situation calculus <ref> (McCarthy 1968) </ref> and allows the specification of complex actions using control structures like if-then-else or recursive procedures familiar from ordinary programming languages. If a complex action P like giving a specific tour through the museum is executable, GOLOG returns a linear sequence of primitive actions which provably achieves P .
Reference: <author> Simmons, R., and Koenig, S. </author> <year> 1995. </year> <title> Probabilistic robot navigation in partially observable environments. </title> <booktitle> In Proc. of the International Joint Conference on Artificial Intelligence. </booktitle>
Reference: <author> Simmons, R. </author> <year> 1996. </year> <title> The curvature-velocity method for local obstacle avoidance. </title> <booktitle> In Proc. of the IEEE International Conference on Robotics and Automation. </booktitle>
Reference: <author> Thrun, S.; Bucken, A.; Burgard, W.; Fox, D.; Frohlinghaus, T.; Hennig, D.; Hofmann, T.; Krell, M.; and Schimdt, T. </author> <year> 1998. </year> <title> Map learning and high-speed navigation in RHINO. </title> <editor> In Kortenkamp, D.; Bonasso, R.; and Murphy, R., eds., </editor> <title> AI-based Mobile Robots: Case studies of successful robot systems. </title> <address> Cambridge, MA: </address> <note> MIT/AAAI Press. to appear. </note>
Reference-contexts: Figure 7 shows an example of a map that also illustrates the need for learning in environments as crowded as the museum. RHINO's motion planner is an anytime planner based on dynamic programming (see also <ref> (Thrun et al. 1998) </ref>). This motion planner is a purely kinematic, incremental planner that computes shortest distance between arbitrary points, often in less than 1 second.
Reference: <author> Thrun, S. </author> <title> to appear. Learning maps for indoor mobile robot navigation. </title> <journal> Journal of Artificial Intelligence. </journal>
References-found: 21

