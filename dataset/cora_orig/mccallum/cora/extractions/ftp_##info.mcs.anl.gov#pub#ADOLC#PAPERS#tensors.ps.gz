URL: ftp://info.mcs.anl.gov/pub/ADOLC/PAPERS/tensors.ps.gz
Refering-URL: http://www.mcs.anl.gov/Projects/autodiff/AD_Tools/adolc.anl/adolc.html
Root-URL: http://www.mcs.anl.gov
Title: Evaluating higher derivative tensors by forward propagation of univariate Taylor series  
Author: Andreas Griewank Jean Utke Andrea Walther 
Keyword: Higher Order Derivatives, Computational Differentiation  
Web: 65D05, 65Y20, 68Q40  
Note: 1991 Mathematics Subject Classification: Primary  
Date: 23rd June 1998  
Abstract: This article considers the problem of evaluating all pure and mixed partial derivatives of some vector function defined by an evaluation procedure. The natural approach to evaluate derivative tensors might appear to be their recursive calculation in the usual forward mode of Computational Differentiation. However, with the approach presented in this article, much simpler data access patterns and similar or lower computational counts can be achieved through propagating a family of univariate Taylor series of a suitable degree. It is applicable for arbitrary orders of derivatives. Also it is possible to calculate derivatives only in some directions instead of the full derivative tensor. Explicit formulas for all tensor entries as well as estimates for the corresponding computational complexities are given. 
Abstract-found: 1
Intro-found: 1
Reference: [BCG93] <author> C. H. Bischof, G. F. Corliss, and A. Griewank. </author> <title> Structured second- and higher-order derivatives through univariate Taylor series. </title> <journal> Optimization Methods and Software, </journal> <volume> 2 </volume> <pages> 211-232, </pages> <year> 1993. </year>
Reference-contexts: This technique has been implemented by Berz [Ber91], Neidinger [Nei92], and others. The only complication here is the need to utilize the symmetry in the higher derivative tensors, which leads to fairly complex addressing schemes. As has been mentioned in [Gri91] and <ref> [BCG93] </ref>, much simpler data access patterns and similar or lower computational counts can be achieved through propagating a family of univariate Taylor series of an arbitrary degree. At the end, their values are interpolated to yield the tensor coefficients. The paper is organized as follows.
Reference: [Ber89] <author> M. Berz. </author> <title> Differential algebraic description of beam dynamics to very high orders. </title> <journal> Particle Accelerators, </journal> <volume> 12 </volume> <pages> 109-124, </pages> <year> 1989. </year>
Reference-contexts: CD also yields second derivatives that are needed in optimization [Gri94] and even higher derivatives that are called for in numerical bifurcation, beam dynamics <ref> [Ber89] </ref> and other nonlinear calculations. fl Institute of Scientific Computing, Technical University Dresden, D-01062 Dresden, Germany x Mathematics and Computer Science Devision, Argonne National Laboratory, Argonne, IL 60439, USA 1 2 Andreas Griewank, Jean Utke, and Andrea Walther Even though the reverse mode of CD may be more efficient when the
Reference: [Ber91] <author> M. Berz. </author> <title> Algorithms for higher derivatives in many variables with applications to bear physics. </title> <editor> In G. F. Corliss and A. Griewank, editors, </editor> <title> Automatic Differentiation of Algorithms Theory, </title> <booktitle> Implementation, and Applications, </booktitle> <pages> pages 147-156. </pages> <publisher> SIAM, </publisher> <address> Philadelphia, Penn., </address> <year> 1991. </year>
Reference-contexts: This greatly simplifies the notation, and the full tensors can then easily be obtained by an outer loop over the component index. The natural approach to evaluate derivative tensors seems to be their recursive calculation using the usual forward mode of CD. This technique has been implemented by Berz <ref> [Ber91] </ref>, Neidinger [Nei92], and others. The only complication here is the need to utilize the symmetry in the higher derivative tensors, which leads to fairly complex addressing schemes. <p> Since higher order tensors have very many entries, one has to utilize symmetric storage modes. The draw-back of symmetric storage modes is that the access of individual elements is somewhat complicated, requiring for example three integer operations for address computations in the implementation of Berz <ref> [Ber91] </ref>. Moreover, the resulting memory locations may be far apart with irregular spacing so that significant paging overhead may be incurred. None of these difficulties arises when n = 1.
Reference: [GJU96] <author> A. Griewank, D. Juedes, and J. Utke. ADOL-C, </author> <title> A package for the automatic differentiation of algorithms written in C/C++. </title> <journal> ACM Trans. Math. Software, </journal> <volume> 22 </volume> <pages> 131-167, </pages> <year> 1996. </year>
Reference-contexts: To that end one needs to compute the higher derivative tensors of a vector function f : R 3 ! R 3 describing a family of surfaces. A corresponding evaluation code consisting of approximately 160 C statements was differentiated using ADOL-C <ref> [GJU96] </ref> and a special driver for the calculation of higher derivative tensors by forward propagation of univariate Taylor series.
Reference: [GR89] <author> A. Griewank and G. W. Reddien. </author> <title> Computation of cusp singularities for operator equations and their discretizations. </title> <journal> J. Comput. Appl. Math., </journal> <pages> pages 133-153, </pages> <year> 1989. </year>
Reference-contexts: To optimize bevel gears exact knowledge of the geometric properties of bevel gear tooth flanks is necessary (see e.g. [Hut96]). Arbitrary points on a given grid on the tooth flank can be calculated with machine accuracy by an analytical characterization <ref> [GR89] </ref> and computational differentiation. To that end one needs to compute the higher derivative tensors of a vector function f : R 3 ! R 3 describing a family of surfaces.
Reference: [Gri89] <author> A. Griewank. </author> <title> On automatic differentiation. </title> <booktitle> In Mathematical Programming: Recent Developments and Applications, </booktitle> <pages> pages 83-108, </pages> <address> Amsterdam, 1989. </address> <publisher> Kluwer Academic Publishers. </publisher>
Reference-contexts: Assume that f is given by an evaluation procedure in C or some other programming language. Then f can be differentiated automatically <ref> [Gri89] </ref>. The Jacobian matrix of first partial derivatives can be computed by the forward or reverse mode of the chain-rule based technique known commonly as Computational Differentiation (CD). <p> D-01062 Dresden, Germany x Mathematics and Computer Science Devision, Argonne National Laboratory, Argonne, IL 60439, USA 1 2 Andreas Griewank, Jean Utke, and Andrea Walther Even though the reverse mode of CD may be more efficient when the number of dependent variables is small compared to the number of independents <ref> [Gri89] </ref>, only the forward mode will be considered here.
Reference: [Gri91] <author> A. Griewank. </author> <title> Automatic evaluation of first- and higher-derivative vectors. </title> <editor> In R. Seydel, F. W. Schneider, T. Kupper, and H. Troger, editors, </editor> <booktitle> Proceedings of the Conference "Bifurcation and Chaos: Analysis, Algorithms, Applications at Wurzburg, </booktitle> <pages> pages 124-137, </pages> <address> Basel, 1991. </address> <publisher> Birkhauser. </publisher>
Reference-contexts: This technique has been implemented by Berz [Ber91], Neidinger [Nei92], and others. The only complication here is the need to utilize the symmetry in the higher derivative tensors, which leads to fairly complex addressing schemes. As has been mentioned in <ref> [Gri91] </ref> and [BCG93], much simpler data access patterns and similar or lower computational counts can be achieved through propagating a family of univariate Taylor series of an arbitrary degree. At the end, their values are interpolated to yield the tensor coefficients. The paper is organized as follows.
Reference: [Gri94] <author> A. Griewank. </author> <title> Computational differentiation and optimization. </title> <editor> In J. R. Birge and K. G. Murty, editors, </editor> <booktitle> Mathematical Programming: State of the Art 1994, </booktitle> <pages> pages 102-131. </pages> <institution> The University of Michigan, Michigan, USA, </institution> <year> 1994. </year>
Reference-contexts: Then f can be differentiated automatically [Gri89]. The Jacobian matrix of first partial derivatives can be computed by the forward or reverse mode of the chain-rule based technique known commonly as Computational Differentiation (CD). CD also yields second derivatives that are needed in optimization <ref> [Gri94] </ref> and even higher derivatives that are called for in numerical bifurcation, beam dynamics [Ber89] and other nonlinear calculations. fl Institute of Scientific Computing, Technical University Dresden, D-01062 Dresden, Germany x Mathematics and Computer Science Devision, Argonne National Laboratory, Argonne, IL 60439, USA 1 2 Andreas Griewank, Jean Utke, and Andrea
Reference: [Hut96] <author> U. Hutschenreiter. </author> <title> A new method for bevel gear tooth flank computation. </title> <editor> In M. Berz, Chr. Bischof, G. Corliss, and A. Griewank, editors, </editor> <title> Computational Differentiation Techniques, </title> <booktitle> Applications, and Tools, </booktitle> <pages> pages 161-172. </pages> <publisher> SIAM, </publisher> <address> Philadelphia, Penn., </address> <year> 1996. </year>
Reference-contexts: To optimize bevel gears exact knowledge of the geometric properties of bevel gear tooth flanks is necessary (see e.g. <ref> [Hut96] </ref>). Arbitrary points on a given grid on the tooth flank can be calculated with machine accuracy by an analytical characterization [GR89] and computational differentiation.
Reference: [Nei92] <author> R. D. Neidinger. </author> <title> An efficient method for the numerical evaluation of partial derivatives of arbitrary order. </title> <journal> ACM Trans. Math. Software, </journal> <volume> 18 </volume> <pages> 159-173, </pages> <year> 1992. </year>
Reference-contexts: The natural approach to evaluate derivative tensors seems to be their recursive calculation using the usual forward mode of CD. This technique has been implemented by Berz [Ber91], Neidinger <ref> [Nei92] </ref>, and others. The only complication here is the need to utilize the symmetry in the higher derivative tensors, which leads to fairly complex addressing schemes.
References-found: 10

