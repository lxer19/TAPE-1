URL: http://www.cs.sunysb.edu/~qin/papers/tvcg96.ps.gz
Refering-URL: http://www.cs.sunysb.edu/~qin/courses/seminar/modeling.html
Root-URL: http://www.cs.sunysb.edu
Title: D-NURBS: A Physics-Based Framework for Geometric Design  
Author: Hong Qin and Demetri Terzopoulos 
Keyword: NURBS, Geometric Modeling, Physics-Based Models, Finite Elements, Dynamics.  
Address: Toronto Toronto, Ontario, Canada, M5S 1A4  
Affiliation: Department of Computer Science, University of  
Abstract: This paper presents dynamic NURBS, or D-NURBS, a physics-based generalization of Non-Uniform Rational B-Splines. NURBS have become a de facto standard in commercial modeling systems because of their power to represent both free-form shapes and common analytic shapes. Traditionally, however, NURBS have been viewed as purely geometric primitives, which require the designer to interactively adjust many degrees of freedom (DOFs)|control points and associated weights|to achieve desired shapes. The conventional shape modification process can often be clumsy and laborious. D-NURBS are physics-based models that incorporate mass distributions, internal deformation energies, forces, and other physical quantities into the NURBS geometric substrate. Their dynamic behavior, resulting from the numerical integration of a set of nonlinear differential equations, produces physically meaningful, hence intuitive shape variation. Consequently, a modeler can interactively sculpt complex shapes to required specifications not only in the traditional indirect fashion, by adjusting control points and setting weights, but also through direct physical manipulation, by applying simulated forces and local and global shape constraints. We use Lagrangian mechanics to formulate the equations of motion for D-NURBS curves, tensor-product D-NURBS surfaces, swung D-NURBS surfaces, and triangular D-NURBS surfaces. We apply finite element analysis to reduce these equations to efficient numerical algorithms computable at interactive rates on common graphics workstations. We implement a prototype modeling environment based on D-NURBS, and demonstrate that D-NURBS can be effective tools in a wide range of CAGD applications such as shape blending, scattered data fitting, and interactive sculpting. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Baumgarte. </author> <title> Stabilization of constraints and integrals of motion in dynamical systems. </title> <journal> Comp. Meth. in Appl. Mech. and Eng., </journal> <volume> 1 </volume> <pages> 1-16, </pages> <year> 1972. </year>
Reference-contexts: This approach increases the number of degrees of freedom, hence the computational cost, by adding unknowns i , known as Lagrange multipliers, which determine the magnitudes of the constraint forces. The augmented Lagrangian method [20] combines the Lagrange multipliers with the simpler penalty method [26]. The Baumgarte stabilization method <ref> [1] </ref> solves constrained equations of motion through linear feedback control [18], [35]. These techniques are appropriate for D-NURBS with nonlinear constraints.
Reference: [2] <author> M.I.G. Bloor and M.J. Wilson. </author> <title> Representing PDE surfaces in terms of B-splines. </title> <booktitle> Computer-Aided Design, </booktitle> <volume> 22(6) </volume> <pages> 324-331, </pages> <year> 1990. </year>
Reference-contexts: The system combines geometric constraints with sculpting operations based on forces and loads to yield fair shapes. However, this approach does not provide interactive mechanisms in dealing with forces and loads. Bloor and Wilson developed related models using similar energies and numerical optimization [3], and in <ref> [2] </ref> they proposed the use of B-splines for this purpose. Subsequently, Celniker and Welch investigated deformable B-splines with linear constraints [6]. Welch and Witkin extended the approach to trimmed hierarchical B-splines (see also [13]) for interactive modeling of free-form surface with constrained variational optimization [38]. In prior work [2], [6], [38], <p> and in <ref> [2] </ref> they proposed the use of B-splines for this purpose. Subsequently, Celniker and Welch investigated deformable B-splines with linear constraints [6]. Welch and Witkin extended the approach to trimmed hierarchical B-splines (see also [13]) for interactive modeling of free-form surface with constrained variational optimization [38]. In prior work [2], [6], [38], deformable B-spline curves and surfaces are designed by imposing shape criteria via the minimization of energy functionals subject to hard or soft geometric constraints. These constraints are imposed through Lagrange multipliers or penalty methods, respectively. The same techniques are applicable to D-NURBS [35].
Reference: [3] <author> M.I.G. Bloor and M.J. Wilson. </author> <title> Using partial differential equations to generate free-form surfaces. </title> <booktitle> Computer-Aided Design, </booktitle> <volume> 22(4) </volume> <pages> 202-212, </pages> <year> 1990. </year>
Reference-contexts: The system combines geometric constraints with sculpting operations based on forces and loads to yield fair shapes. However, this approach does not provide interactive mechanisms in dealing with forces and loads. Bloor and Wilson developed related models using similar energies and numerical optimization <ref> [3] </ref>, and in [2] they proposed the use of B-splines for this purpose. Subsequently, Celniker and Welch investigated deformable B-splines with linear constraints [6]. Welch and Witkin extended the approach to trimmed hierarchical B-splines (see also [13]) for interactive modeling of free-form surface with constrained variational optimization [38].
Reference: [4] <author> B. Brunnett, H. Hagen, and P. Santarelli. </author> <title> Variational design of curves and surfaces. </title> <journal> Surveys on Mathematics for Industry, </journal> <volume> 3 </volume> <pages> 1-27, </pages> <year> 1993. </year> <month> 18 </month>
Reference-contexts: Moreover, geometric design, especially conceptual design, is a time-varying process because designers are often interested in not only the final static equilibrium shape but the intermediate shape variation as well. In contrast to recent variational design approaches <ref> [4] </ref>, [15], time is fundamental to physics-based design. Additional advantages accrue through the use of real-time dynamics: * An "instantaneous" optimizer (if such a thing existed) can produce some kinematic deformation if it were applied at every interaction step to satisfy constraints. <p> In this case, D-NURBS can yield "optimal" solutions by minimizing the thin-plate under tension deformation energy [32]. The surfaces are optimal in the sense that they provide the smoothest curve or surface (as measured by the deformation energy) that interpolates or approximates the data <ref> [4] </ref>, [22]. The data point interpolation problem amounts to a linear constraint problem when the weights are fixed, and it is amenable to the constraint techniques presented in Section VI-B.
Reference: [5] <author> G. Celniker and D. Gossard. </author> <title> Deformable curve and surface finite elements for free-form shape design. </title> <journal> Computer Graphics, </journal> <volume> 25(4) </volume> <pages> 257-266, </pages> <year> 1991. </year> <note> (Proc. ACM Siggraph'91). </note>
Reference-contexts: Background D-NURBS are motivated by prior research aimed at applying the deformable modeling approach to shape design. Terzopoulos and Fleischer demonstrated simple interactive sculpting using viscoelastic and plastic models [33]. Celniker and Gossard developed an interesting prototype system <ref> [5] </ref> for interactive free-form design based on the finite-element optimization of energy functionals proposed in [33]. The system combines geometric constraints with sculpting operations based on forces and loads to yield fair shapes. However, this approach does not provide interactive mechanisms in dealing with forces and loads. <p> To define an elastic potential energy for the surface, we adopt the thin-plate under tension energy model [32], <ref> [5] </ref>, [38], [16], [35]. This yields the N fi N stiffness matrix K (p) = ff 1;1 J &gt; v J v + fi 1;1 J &gt; uv J uv + fi 2;2 J &gt; where the subscripts on J denote parametric partial derivatives.
Reference: [6] <author> G. Celniker and W. Welch. </author> <title> Linear constraints for deformable B-spline surfaces. </title> <booktitle> In Proceedings, Symposium on Interactive 3D Graphics, </booktitle> <pages> pages 165-170, </pages> <year> 1992. </year>
Reference-contexts: However, this approach does not provide interactive mechanisms in dealing with forces and loads. Bloor and Wilson developed related models using similar energies and numerical optimization [3], and in [2] they proposed the use of B-splines for this purpose. Subsequently, Celniker and Welch investigated deformable B-splines with linear constraints <ref> [6] </ref>. Welch and Witkin extended the approach to trimmed hierarchical B-splines (see also [13]) for interactive modeling of free-form surface with constrained variational optimization [38]. In prior work [2], [6], [38], deformable B-spline curves and surfaces are designed by imposing shape criteria via the minimization of energy functionals subject to hard <p> Subsequently, Celniker and Welch investigated deformable B-splines with linear constraints <ref> [6] </ref>. Welch and Witkin extended the approach to trimmed hierarchical B-splines (see also [13]) for interactive modeling of free-form surface with constrained variational optimization [38]. In prior work [2], [6], [38], deformable B-spline curves and surfaces are designed by imposing shape criteria via the minimization of energy functionals subject to hard or soft geometric constraints. These constraints are imposed through Lagrange multipliers or penalty methods, respectively. The same techniques are applicable to D-NURBS [35]. <p> The same techniques are applicable to D-NURBS [35]. Compared to deformable B-splines, however, D-NURBS are capable of representing a wider variety of free-form shapes, as well as standard analytic shapes. Previous models solve static equilibrium problems, or involve simple linear dynamics with diagonal (arbitrarily lumped) mass and damping matrices <ref> [6] </ref>. D-NURBS are a more sophisticated dynamic model derived through the systematic use of Lagrangian mechanics and finite element analysis without resorting to any of the ad hoc assumptions of prior schemes [35]. D-NURBS control points and associated weights are generalized coordinates in the Lagrangian equations of motion.
Reference: [7] <author> W. Dahmen, C. Micchelli, and H.-P. Seidel. </author> <title> Blossoming begets B-spline bases built better by B-patches. </title> <journal> Mathematics of Computation, </journal> <volume> 59(199) </volume> <pages> 97-115, </pages> <year> 1992. </year>
Reference-contexts: Consequently, the designer is forced to model multisided irregular shapes using degenerate patches with deteriorated inter-patch continuity. Thus, the associated smoothness constraints increase the complexity of the design task in general. In contrast, triangular B-splines <ref> [7] </ref> and NURBS can represent complex non-rectangular shapes over arbitrary triangulated domains with low degree piecewise polynomials that nonetheless maintain relatively high-order continuity. They can express smooth non-rectangular shapes without degeneracy. They can also model discontinuities by varying the knot distribution. <p> The bivariate simplex spline M (ujV i;fi ) with degree n over V i;fi can be defined recursively (the details are found elsewhere <ref> [7] </ref>), where u = (u; v) defines the triangulated parametric domain of the surface.
Reference: [8] <author> C. de Boor. </author> <title> On calculating with B-Splines. </title> <journal> Journal of Approximation Theory, </journal> <volume> 6(1) </volume> <pages> 50-62, </pages> <year> 1972. </year>
Reference-contexts: Given integers N g , we can find Gauss weights a g , and abscissas u g , v g in the two parametric directions of such that m ij can be approximated by [27] m ij g=1 We apply the de Boor algorithm <ref> [8] </ref> or the recursive algorithm of multivariate simplex B-splines [19] to evaluate f ij (u g ; v g ). 5 In general, Gaussian quadrature evaluates the integral exactly with N weights and abscissas for polynomials of degree 2N 1 or less.
Reference: [9] <author> G. Farin. </author> <title> Trends in curve and surface design. </title> <booktitle> Computer-Aided Design, </booktitle> <volume> 21(5) </volume> <pages> 293-296, </pages> <year> 1989. </year>
Reference: [10] <author> G. Farin. </author> <title> Curves and Surfaces for Computer aided Geometric Design: A Practical Guide. </title> <publisher> Academic Press, </publisher> <address> second edition, </address> <year> 1990. </year>
Reference-contexts: It can be defined as a function of both the parametric variable u and time t: c (u; t) = i=0 p i (t)w i (t)B i;k (u) i=0 w i (t)B i;k (u) where the B i;k (u) are the usual recursively defined piecewise basis functions <ref> [10] </ref>, p i (t) are the n + 1 control points, and w i (t) are associated non-negative weights. Assuming basis functions of degree k 1, the curve has n + k + 1 knots t i in non-decreasing sequence: t 0 t 1 . . . t n+k .
Reference: [11] <author> I.D. Faux and M.J. Pratt. </author> <title> Computational Geometry for Design and Manufacture. </title> <publisher> Ellis Horwood, </publisher> <address> Chichester,UK, </address> <year> 1979. </year>
Reference-contexts: C. Swung D-NURBS Surfaces Many objects of interest, especially manufactured objects, exhibit symmetries. Often it is convenient to model symmetric objects through cross-sectional design by specifying profile curves <ref> [11] </ref>. Woodward [39] introduced the swinging operator by extending the spherical cross-product with a scaling factor, and applied it to generate surfaces with B-spline profile curves. Piegl [25] carried the swinging idea over to NURBS curves.
Reference: [12] <author> P. Fong and H.-P. Seidel. </author> <title> An implementation of triangular B-spline surfaces over arbitrary triangulations. </title> <booktitle> Computer Aided Geometric Design, </booktitle> <address> 3-4(10):267-275, </address> <year> 1993. </year>
Reference-contexts: We have adopted the data structure, file, and rendering formats of existing geometric triangular B-spline software <ref> [12] </ref>. To implement the Lagrangian dynamics model on top of this software, we have had to implement a new algorithm for simultaneously evaluating non-zero basis functions and their derivatives up to second order at arbitrary domain points for finite element assembly and dynamic simulation.
Reference: [13] <author> D.R. Forsey and R.H. Bartels. </author> <title> Hierarchical B-spline refinement. </title> <journal> Computer Graphics, </journal> <volume> 22(4) </volume> <pages> 205-212, </pages> <year> 1988. </year>
Reference-contexts: Bloor and Wilson developed related models using similar energies and numerical optimization [3], and in [2] they proposed the use of B-splines for this purpose. Subsequently, Celniker and Welch investigated deformable B-splines with linear constraints [6]. Welch and Witkin extended the approach to trimmed hierarchical B-splines (see also <ref> [13] </ref>) for interactive modeling of free-form surface with constrained variational optimization [38]. In prior work [2], [6], [38], deformable B-spline curves and surfaces are designed by imposing shape criteria via the minimization of energy functionals subject to hard or soft geometric constraints.
Reference: [14] <author> B.R. Gossick. </author> <title> Hamilton's Principle and Physical Systems. </title> <publisher> Academic Press, </publisher> <address> New York and London, </address> <year> 1967. </year>
Reference-contexts: D-NURBS Equations of Motion The equations of motion of our dynamic NURBS model are derived from the work-energy version of La-grangian dynamics <ref> [14] </ref>. <p> The generalized force f p (p) = RR J &gt; f (u; v; t) du dv is obtained through the principle of virtual work <ref> [14] </ref> done by the applied force distribution f (u; v; t). Because of the geometric nonlinearity, generalized inertial forces g p (p) are also associated with the models (see [35], [28]). V.
Reference: [15] <author> G. Greiner. </author> <title> Variational design and fairing of spline surfaces. </title> <booktitle> In Proceedings of EUROGRAPHICS'94, </booktitle> <pages> pages 143-154, </pages> <publisher> Blackwell, </publisher> <address> 1994. </address> <publisher> Eurographics Association. </publisher>
Reference-contexts: Moreover, geometric design, especially conceptual design, is a time-varying process because designers are often interested in not only the final static equilibrium shape but the intermediate shape variation as well. In contrast to recent variational design approaches [4], <ref> [15] </ref>, time is fundamental to physics-based design. Additional advantages accrue through the use of real-time dynamics: * An "instantaneous" optimizer (if such a thing existed) can produce some kinematic deformation if it were applied at every interaction step to satisfy constraints.
Reference: [16] <author> M. Halstead, M. Kass, and T. DeRose. </author> <title> Efficient, fair interpolation using Catmull-Clark surfaces. </title> <booktitle> In Computer Graphics Proceedings, Annual Conference Series, Proc. ACM Siggraph'93 (Anaheim, </booktitle> <address> CA, </address> <month> Aug., </month> <year> 1993), </year> <pages> pages 35-44, </pages> <year> 1993. </year>
Reference-contexts: To define an elastic potential energy for the surface, we adopt the thin-plate under tension energy model [32], [5], [38], <ref> [16] </ref>, [35]. This yields the N fi N stiffness matrix K (p) = ff 1;1 J &gt; v J v + fi 1;1 J &gt; uv J uv + fi 2;2 J &gt; where the subscripts on J denote parametric partial derivatives.
Reference: [17] <author> H. Kardestuncer. </author> <title> Finite Element Handbook. </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1987. </year>
Reference-contexts: V. Implementation of D-NURBS Finite Element The equations of motion (15) that determine the evolution of p cannot be solved analytically in general. Instead, we pursue an efficient numerical implementation using finite-element techniques <ref> [17] </ref>. Standard finite element codes explicitly assemble the global matrices that appear in the discrete equations of motion [17]. We use an iterative matrix solver to avoid the cost of assembling the global M, D, and K. <p> Instead, we pursue an efficient numerical implementation using finite-element techniques <ref> [17] </ref>. Standard finite element codes explicitly assemble the global matrices that appear in the discrete equations of motion [17]. We use an iterative matrix solver to avoid the cost of assembling the global M, D, and K. In this way, we work with the individual element matrices and construct finite element data structures that permit the parallel computation of element matrices. A.
Reference: [18] <author> D. Metaxas and D. Terzopoulos. </author> <title> Dynamic deformation of solid primitives with constraints. </title> <journal> Computer Graphics, </journal> <volume> 26(2) </volume> <pages> 309-312, </pages> <year> 1992. </year> <note> (Proc. ACM Siggraph'92). </note>
Reference-contexts: The augmented Lagrangian method [20] combines the Lagrange multipliers with the simpler penalty method [26]. The Baumgarte stabilization method [1] solves constrained equations of motion through linear feedback control <ref> [18] </ref>, [35]. These techniques are appropriate for D-NURBS with nonlinear constraints. Linear geometric constraints such as point, curve, and surface normal constraints can be easily incorporated into dynamic swung surface by reducing the matrices and vectors in (15) to a minimal unconstrained set of generalized coordinates.
Reference: [19] <author> C.A. Micchelli. </author> <title> On a numerically efficient method for computing with multivariate B-splines. </title> <editor> In W. Schempp and K. Zeller, editors, </editor> <booktitle> Multivariate Approximation Theory, </booktitle> <pages> pages 211-248. </pages> <publisher> Birkhauser, </publisher> <address> Basel, </address> <year> 1979. </year>
Reference-contexts: g , we can find Gauss weights a g , and abscissas u g , v g in the two parametric directions of such that m ij can be approximated by [27] m ij g=1 We apply the de Boor algorithm [8] or the recursive algorithm of multivariate simplex B-splines <ref> [19] </ref> to evaluate f ij (u g ; v g ). 5 In general, Gaussian quadrature evaluates the integral exactly with N weights and abscissas for polynomials of degree 2N 1 or less. In our system we choose N g to be integers between 4 and 7.
Reference: [20] <author> M. Minoux. </author> <title> Mathematical Programming. </title> <publisher> Wiley, </publisher> <address> New York, </address> <year> 1986. </year>
Reference-contexts: B. Constraints In practical applications, design requirements may be posed as a set of physical parameters or as geometric constraints. Nonlinear constraints can be enforced through Lagrange multiplier techniques <ref> [20] </ref>. This approach increases the number of degrees of freedom, hence the computational cost, by adding unknowns i , known as Lagrange multipliers, which determine the magnitudes of the constraint forces. The augmented Lagrangian method [20] combines the Lagrange multipliers with the simpler penalty method [26]. <p> Nonlinear constraints can be enforced through Lagrange multiplier techniques <ref> [20] </ref>. This approach increases the number of degrees of freedom, hence the computational cost, by adding unknowns i , known as Lagrange multipliers, which determine the magnitudes of the constraint forces. The augmented Lagrangian method [20] combines the Lagrange multipliers with the simpler penalty method [26]. The Baumgarte stabilization method [1] solves constrained equations of motion through linear feedback control [18], [35]. These techniques are appropriate for D-NURBS with nonlinear constraints.
Reference: [21] <author> H.P. Moreton and C.H. Sequin. </author> <title> Functional optimization for fair surface design. </title> <journal> Computer Graphics, </journal> <volume> 26(2) </volume> <pages> 167-176, </pages> <year> 1992. </year> <note> (Proc. ACM Siggraph'92). </note>
Reference-contexts: The ff i;j (u; v) and fi i;j (u; v) are elasticity functions that control tension and rigidity, respectively, in the two parametric coordinate directions. 3 Other energies are applicable, including the nonquadratic, curvature-based energies [34], <ref> [21] </ref>. The generalized force f p (p) = RR J &gt; f (u; v; t) du dv is obtained through the principle of virtual work [14] done by the applied force distribution f (u; v; t).
Reference: [22] <author> R. Pfeifle and H.-P. Seidel. </author> <title> Fitting triangular B-Splines to functional scattered data. </title> <booktitle> In Proceedings of Graphics Interface'95, </booktitle> <pages> pages 26-33, </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1995. </year> <journal> Canadian Human-Computer Communications Society. </journal>
Reference-contexts: In this case, D-NURBS can yield "optimal" solutions by minimizing the thin-plate under tension deformation energy [32]. The surfaces are optimal in the sense that they provide the smoothest curve or surface (as measured by the deformation energy) that interpolates or approximates the data [4], <ref> [22] </ref>. The data point interpolation problem amounts to a linear constraint problem when the weights are fixed, and it is amenable to the constraint techniques presented in Section VI-B.
Reference: [23] <author> L. Piegl. </author> <title> Modifying the shape of rational B-splines. </title> <booktitle> part 1:curves. Computer-Aided Design, </booktitle> <volume> 21(8) </volume> <pages> 509-518, </pages> <year> 1989. </year>
Reference: [24] <author> L. Piegl. </author> <title> Modifying the shape of rational B-splines. </title> <booktitle> part 2:surfaces. Computer-Aided Design, </booktitle> <volume> 21(9) </volume> <pages> 538-546, </pages> <year> 1989. </year>
Reference: [25] <author> L. Piegl. </author> <title> On NURBS: A survey. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 11(1) </volume> <pages> 55-71, </pages> <month> Jan. </month> <year> 1991. </year>
Reference-contexts: It is especially severe for triangular NURBS due to the irregularity of control points and knot vectors. For symmetric surfaces or solids, the labor may be lessened to some degree through the judicious application of cross-sectional design using NURBS swinging operations <ref> [25] </ref>. * Shape design to required specifications by manual adjustment of available geometric degrees of freedom is often elusive, because relevant design tolerances are typically shape-oriented and not control point/weight oriented. Moreover, a particular shape can often be represented non-uniquely, with different values of knots, control points, and weights. <p> Often it is convenient to model symmetric objects through cross-sectional design by specifying profile curves [11]. Woodward [39] introduced the swinging operator by extending the spherical cross-product with a scaling factor, and applied it to generate surfaces with B-spline profile curves. Piegl <ref> [25] </ref> carried the swinging idea over to NURBS curves. He proposed NURBS swung surfaces, a special type of NURBS surfaces formed by swinging one planar NURBS profile curve along a second NURBS trajectory curve. <p> Several geometric shape design systems include some form of swinging (or sweeping) among their repertoire of techniques [31]. Geometrically, a swung D-NURBS surface is generated from two planar D-NURBS profile curves through the swinging operation <ref> [25] </ref> (Fig. 2). Let the two generator curves c 1 (u; a) and c 2 (v; b) be of the form (1).
Reference: [26] <author> J. Platt. </author> <title> A generalization of dynamic constraints. CVGIP: Graphical Models and Image Processing, </title> <booktitle> 54(6) </booktitle> <pages> 516-525, </pages> <year> 1992. </year>
Reference-contexts: This approach increases the number of degrees of freedom, hence the computational cost, by adding unknowns i , known as Lagrange multipliers, which determine the magnitudes of the constraint forces. The augmented Lagrangian method [20] combines the Lagrange multipliers with the simpler penalty method <ref> [26] </ref>. The Baumgarte stabilization method [1] solves constrained equations of motion through linear feedback control [18], [35]. These techniques are appropriate for D-NURBS with nonlinear constraints.
Reference: [27] <author> W. Press, B. Flanney, S. Teukolsky, and W. Verttering. </author> <title> Numerical Recipes: </title> <booktitle> The Art of Scientific Computing. </booktitle> <publisher> Cambridge University Press, </publisher> <address> Cambridge, </address> <year> 1986. </year>
Reference-contexts: One finite element and its degrees of freedom of a triangular B-Spline surface. Fig. 5. Element data structure of D-NURBS. 11 B. Calculation of Element Matrices The integral expressions for the mass, damping, and stiffness matrices associated with each element are evaluated numerically using Gaussian quadrature <ref> [27] </ref>. We shall explain the computation of the element mass matrix; the computation of the damping and stiffness matrices follow suit. <p> Given integers N g , we can find Gauss weights a g , and abscissas u g , v g in the two parametric directions of such that m ij can be approximated by <ref> [27] </ref> m ij g=1 We apply the de Boor algorithm [8] or the recursive algorithm of multivariate simplex B-splines [19] to evaluate f ij (u g ; v g ). 5 In general, Gaussian quadrature evaluates the integral exactly with N weights and abscissas for polynomials of degree 2N 1 or <p> The matrices and forces are evaluated at time t. We employ the conjugate gradient method to obtain an iterative solution <ref> [27] </ref>. To achieve interactive simulation rates, we limit the number of conjugate gradient iterations per time step to 10. We have observed that 2 iterations typically suffice to converge to a residual of less than 10 3 .
Reference: [28] <author> H. Qin and D. Terzopoulos. </author> <title> Dynamic NURBS swung surfaces for physics-based shape design. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 27(2) </volume> <pages> 111-127, </pages> <year> 1995. </year>
Reference-contexts: Hence, L comprises the vectors @s=@ff, @s=@a, and @s=@b. The expression of the 3 fi M matrix L can be explicitly formulated <ref> [28] </ref>. Unlike J in (4), L cannot serve as the basis function matrix of the swung surface because of the fact s (u; v; p) 6= Lp [28]. <p> Hence, L comprises the vectors @s=@ff, @s=@a, and @s=@b. The expression of the 3 fi M matrix L can be explicitly formulated <ref> [28] </ref>. Unlike J in (4), L cannot serve as the basis function matrix of the swung surface because of the fact s (u; v; p) 6= Lp [28]. Instead, we have s (u; v; p) = Hp; (9) where H is the 3 fi M basis function matrix whose explicit expression can also be found in [28]. D. Triangular D-NURBS Surfaces The main drawback of tensor-product NURBS is that the surface patches are rectangular. <p> cannot serve as the basis function matrix of the swung surface because of the fact s (u; v; p) 6= Lp <ref> [28] </ref>. Instead, we have s (u; v; p) = Hp; (9) where H is the 3 fi M basis function matrix whose explicit expression can also be found in [28]. D. Triangular D-NURBS Surfaces The main drawback of tensor-product NURBS is that the surface patches are rectangular. Consequently, the designer is forced to model multisided irregular shapes using degenerate patches with deteriorated inter-patch continuity. Thus, the associated smoothness constraints increase the complexity of the design task in general. <p> surfaces, we obtain the second-order nonlinear equations of motion M p + D _ p + Kp = f p + g p ; (15) where the mass matrix M (p), the damping matrix D (p), and the stiffness matrix K (p) can all be formulated explicitly (refer to [35], <ref> [28] </ref>, [29] for the details). <p> Because of the geometric nonlinearity, generalized inertial forces g p (p) are also associated with the models (see [35], <ref> [28] </ref>). V. Implementation of D-NURBS Finite Element The equations of motion (15) that determine the evolution of p cannot be solved analytically in general. Instead, we pursue an efficient numerical implementation using finite-element techniques [17]. <p> By building D-NURBS upon the standard NURBS geometry, we allow the modeler to continue to use the whole spectrum of advanced geometric design tools that have become prevalent, among them, the imposition of geometric constraints that the final shape must satisfy. Our physics-based shape design approach [35], <ref> [28] </ref>, [29] which utilizes energies, forces, and constraints has proven to be simpler and more intuitive than conventional geometric design methods (e.g., the manipulation and adjustment of control points and weights).
Reference: [29] <author> H. Qin and D. Terzopoulos. </author> <title> Triangular NURBS and their dynamic generalizations. </title> <booktitle> Computer Aided Geometric Design, </booktitle> <year> 1996. </year> <note> in press. </note>
Reference-contexts: we obtain the second-order nonlinear equations of motion M p + D _ p + Kp = f p + g p ; (15) where the mass matrix M (p), the damping matrix D (p), and the stiffness matrix K (p) can all be formulated explicitly (refer to [35], [28], <ref> [29] </ref> for the details). <p> Note that because of the irregular knot distribution for the case of triangular D-NURBS, many f ij 's are zero over the triangular subdomains of . We can further subdivide the subdomains in order to decrease the numerical quadrature error <ref> [29] </ref>. C. Discrete Dynamics Equations To integrate (15) in an interactive modeling environment, it is important to provide the modeler with visual feedback about the evolving state of the dynamic model. <p> By building D-NURBS upon the standard NURBS geometry, we allow the modeler to continue to use the whole spectrum of advanced geometric design tools that have become prevalent, among them, the imposition of geometric constraints that the final shape must satisfy. Our physics-based shape design approach [35], [28], <ref> [29] </ref> which utilizes energies, forces, and constraints has proven to be simpler and more intuitive than conventional geometric design methods (e.g., the manipulation and adjustment of control points and weights).
Reference: [30] <author> L.L. Schumaker. </author> <title> Fitting surfaces to scattered data. </title> <editor> In G.G. Lorentz, C.K. Chui, and L.L. Schumaker, editors, </editor> <booktitle> Approximation Theory II, </booktitle> <pages> pages 203-267. </pages> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1976. </year>
Reference-contexts: In the following sections we demonstrate applications of D-NURBS to interactive sculpting, solid rounding, and scattered data fitting. Table I specifies the physical parameters used in the subsequent experiments. B. Optimal Fitting D-NURBS are applicable to the optimal fitting of regular or scattered data <ref> [30] </ref>. The most general and often most useful case occurs with scattered data, when there are fewer or more data points than unknowns| i.e., when the solution is underdetermined or overdetermined by the data.
Reference: [31] <author> J. Snyder and J. Kajiya. </author> <title> Generative modeling: A symbolic system for geometric modeling. </title> <journal> Computer Graphics, </journal> <volume> 26(2) </volume> <pages> 369-378, </pages> <year> 1992. </year>
Reference-contexts: Several geometric shape design systems include some form of swinging (or sweeping) among their repertoire of techniques <ref> [31] </ref>. Geometrically, a swung D-NURBS surface is generated from two planar D-NURBS profile curves through the swinging operation [25] (Fig. 2). Let the two generator curves c 1 (u; a) and c 2 (v; b) be of the form (1).
Reference: [32] <author> D. Terzopoulos. </author> <title> Regularization of inverse visual problems involving discontinuities. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 8(4) </volume> <pages> 413-424, </pages> <year> 1986. </year>
Reference-contexts: To define an elastic potential energy for the surface, we adopt the thin-plate under tension energy model <ref> [32] </ref>, [5], [38], [16], [35]. This yields the N fi N stiffness matrix K (p) = ff 1;1 J &gt; v J v + fi 1;1 J &gt; uv J uv + fi 2;2 J &gt; where the subscripts on J denote parametric partial derivatives. <p> The most general and often most useful case occurs with scattered data, when there are fewer or more data points than unknowns| i.e., when the solution is underdetermined or overdetermined by the data. In this case, D-NURBS can yield "optimal" solutions by minimizing the thin-plate under tension deformation energy <ref> [32] </ref>. The surfaces are optimal in the sense that they provide the smoothest curve or surface (as measured by the deformation energy) that interpolates or approximates the data [4], [22].
Reference: [33] <author> D. Terzopoulos and K. Fleischer. </author> <title> Deformable models. </title> <journal> The Visual Computer, </journal> <volume> 4(6) </volume> <pages> 306-331, </pages> <year> 1988. </year>
Reference-contexts: The unified formulation is potentially relevant throughout the entire design and manufacturing process. 4 III. Background D-NURBS are motivated by prior research aimed at applying the deformable modeling approach to shape design. Terzopoulos and Fleischer demonstrated simple interactive sculpting using viscoelastic and plastic models <ref> [33] </ref>. Celniker and Gossard developed an interesting prototype system [5] for interactive free-form design based on the finite-element optimization of energy functionals proposed in [33]. The system combines geometric constraints with sculpting operations based on forces and loads to yield fair shapes. <p> Terzopoulos and Fleischer demonstrated simple interactive sculpting using viscoelastic and plastic models <ref> [33] </ref>. Celniker and Gossard developed an interesting prototype system [5] for interactive free-form design based on the finite-element optimization of energy functionals proposed in [33]. The system combines geometric constraints with sculpting operations based on forces and loads to yield fair shapes. However, this approach does not provide interactive mechanisms in dealing with forces and loads.
Reference: [34] <author> D. Terzopoulos, J. Platt, A. Barr, and K. Fleischer. </author> <title> Elastically deformable models. </title> <journal> Computer Graphics, </journal> <volume> 21(4) </volume> <pages> 205-214, </pages> <year> 1987. </year>
Reference-contexts: The ff i;j (u; v) and fi i;j (u; v) are elasticity functions that control tension and rigidity, respectively, in the two parametric coordinate directions. 3 Other energies are applicable, including the nonquadratic, curvature-based energies <ref> [34] </ref>, [21]. The generalized force f p (p) = RR J &gt; f (u; v; t) du dv is obtained through the principle of virtual work [14] done by the applied force distribution f (u; v; t). <p> A. Applied Forces In the D-NURBS design scenario, sculpting tools may be implemented as applied forces. The force f (u; v; t) represents the net effect of all applied forces. Typical force functions are spring forces, repulsion forces, gravitational forces, inflation forces, etc. <ref> [34] </ref>. For example, consider connecting a material point (u 0 ; v 0 ) of a D-NURBS surface to a point d 0 in space with an ideal Hookean spring of stiffness k.
Reference: [35] <author> D. Terzopoulos and H. Qin. </author> <title> Dynamic NURBS with geometric constraints for interactive sculpting. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 13(2) </volume> <pages> 103-136, </pages> <year> 1994. </year>
Reference-contexts: II. The Physics-Based Approach Although NURBS have offered designers extraordinary flexibility, traditional design methodology does not exploit the full potential of the underlying geometric formulation. Conventional geometric design with NURBS models can be problematic for the following reasons <ref> [35] </ref>: * In traditional free-form geometric design, the user is often faced with the tedium of indirect shape manipulation through a bewildering variety of geometric parameters; i.e., by repositioning control points, adjusting weights, and modifying knot vectors. <p> Our D-NURBS model unifies the elegant geometric features of NURBS with the many demonstrated conveniences of interaction within a physical dynamics framework. The following are major advantages of physics-based shape design <ref> [35] </ref>: * The behavior of D-NURBS is governed by physical laws. Through a computational physics simulation, the model responds dynamically to applied simulated forces in a natural and predictable way. <p> In prior work [2], [6], [38], deformable B-spline curves and surfaces are designed by imposing shape criteria via the minimization of energy functionals subject to hard or soft geometric constraints. These constraints are imposed through Lagrange multipliers or penalty methods, respectively. The same techniques are applicable to D-NURBS <ref> [35] </ref>. Compared to deformable B-splines, however, D-NURBS are capable of representing a wider variety of free-form shapes, as well as standard analytic shapes. Previous models solve static equilibrium problems, or involve simple linear dynamics with diagonal (arbitrarily lumped) mass and damping matrices [6]. <p> D-NURBS are a more sophisticated dynamic model derived through the systematic use of Lagrangian mechanics and finite element analysis without resorting to any of the ad hoc assumptions of prior schemes <ref> [35] </ref>. D-NURBS control points and associated weights are generalized coordinates in the Lagrangian equations of motion. From a physics-based modeling point of view, the existence of weights makes the NURBS geometry substantially more challenging than B-spline geometry. <p> Furthermore, we can express the curve as the product of the Jacobian matrix and the generalized coordinate vector: c (u; p) = Jp: (4) The proof of (4) can be found elsewhere <ref> [35] </ref>. B. Tensor-Product D-NURBS Surfaces In analogy to the D-NURBS curve of (1), a tensor-product D-NURBS surface s (u; v; t) = i=0 j=0 p i;j (t)w i;j (t)B i;k (u)B j;l (v) i=0 j=0 w i;j (t)B i;k (u)B j;l (v) generalizes the geometric NURBS surface. <p> Moreover, we can express the surface as the product of the Jacobian matrix and the generalized coordinate vector: s (u; p) = Jp: (14) The proof of (14) is the same as that for the tensor-product D-NURBS <ref> [35] </ref>. 9 E. D-NURBS Equations of Motion The equations of motion of our dynamic NURBS model are derived from the work-energy version of La-grangian dynamics [14]. <p> triangulated surfaces, we obtain the second-order nonlinear equations of motion M p + D _ p + Kp = f p + g p ; (15) where the mass matrix M (p), the damping matrix D (p), and the stiffness matrix K (p) can all be formulated explicitly (refer to <ref> [35] </ref>, [28], [29] for the details). <p> To define an elastic potential energy for the surface, we adopt the thin-plate under tension energy model [32], [5], [38], [16], <ref> [35] </ref>. This yields the N fi N stiffness matrix K (p) = ff 1;1 J &gt; v J v + fi 1;1 J &gt; uv J uv + fi 2;2 J &gt; where the subscripts on J denote parametric partial derivatives. <p> Because of the geometric nonlinearity, generalized inertial forces g p (p) are also associated with the models (see <ref> [35] </ref>, [28]). V. Implementation of D-NURBS Finite Element The equations of motion (15) that determine the evolution of p cannot be solved analytically in general. Instead, we pursue an efficient numerical implementation using finite-element techniques [17]. <p> By building D-NURBS upon the standard NURBS geometry, we allow the modeler to continue to use the whole spectrum of advanced geometric design tools that have become prevalent, among them, the imposition of geometric constraints that the final shape must satisfy. Our physics-based shape design approach <ref> [35] </ref>, [28], [29] which utilizes energies, forces, and constraints has proven to be simpler and more intuitive than conventional geometric design methods (e.g., the manipulation and adjustment of control points and weights). <p> The augmented Lagrangian method [20] combines the Lagrange multipliers with the simpler penalty method [26]. The Baumgarte stabilization method [1] solves constrained equations of motion through linear feedback control [18], <ref> [35] </ref>. These techniques are appropriate for D-NURBS with nonlinear constraints. Linear geometric constraints such as point, curve, and surface normal constraints can be easily incorporated into dynamic swung surface by reducing the matrices and vectors in (15) to a minimal unconstrained set of generalized coordinates. <p> They can then be implemented by applying the same numerical solver on an unconstrained subset of p <ref> [35] </ref>. D-NURBS have an interesting idiosyncrasy due to the weights. While the control point components of p may take arbitrary finite values in &lt;, negative weights may cause the denominator to vanish at some evaluation points, causing the matrices to diverge. Although not forbidden, negative weights are not useful. <p> One intermediate view of the fitting process and the final fitted curve are displayed in Fig. 6 (b) and Fig. 6 (c), respectively. Next, we present three examples of surface fitting using tensor-product D-NURBS <ref> [35] </ref>. Fig. 7 (a) shows 19 data points sampled from a hemisphere and their interpolation with a quadratic D-NURBS surface with 49 control points. Fig. 7 (b) shows 19 data points and the reconstruction of the implied convex/concave surface by a quadratic D-NURBS with 49 control points.
Reference: [36] <author> W. Tiller. </author> <title> Rational B-splines for curve and surface representation. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 3(6) </volume> <pages> 61-69, </pages> <month> Sept. </month> <year> 1983. </year>
Reference: [37] <author> K.J. Versprille. </author> <title> Computer-Aided Design Applications of the Rational B-Spline Approximation form. </title> <type> PhD thesis, </type> <institution> Syracuse University, </institution> <year> 1975. </year>
Reference: [38] <author> W. Welch and A. Witkin. </author> <title> Variational surface modeling. </title> <journal> Computer Graphics, </journal> <volume> 26(2) </volume> <pages> 157-166, </pages> <year> 1992. </year> <note> (Proc. ACM Siggraph'92). </note>
Reference-contexts: Subsequently, Celniker and Welch investigated deformable B-splines with linear constraints [6]. Welch and Witkin extended the approach to trimmed hierarchical B-splines (see also [13]) for interactive modeling of free-form surface with constrained variational optimization <ref> [38] </ref>. In prior work [2], [6], [38], deformable B-spline curves and surfaces are designed by imposing shape criteria via the minimization of energy functionals subject to hard or soft geometric constraints. These constraints are imposed through Lagrange multipliers or penalty methods, respectively. The same techniques are applicable to D-NURBS [35]. <p> Subsequently, Celniker and Welch investigated deformable B-splines with linear constraints [6]. Welch and Witkin extended the approach to trimmed hierarchical B-splines (see also [13]) for interactive modeling of free-form surface with constrained variational optimization <ref> [38] </ref>. In prior work [2], [6], [38], deformable B-spline curves and surfaces are designed by imposing shape criteria via the minimization of energy functionals subject to hard or soft geometric constraints. These constraints are imposed through Lagrange multipliers or penalty methods, respectively. The same techniques are applicable to D-NURBS [35]. <p> To define an elastic potential energy for the surface, we adopt the thin-plate under tension energy model [32], [5], <ref> [38] </ref>, [16], [35]. This yields the N fi N stiffness matrix K (p) = ff 1;1 J &gt; v J v + fi 1;1 J &gt; uv J uv + fi 2;2 J &gt; where the subscripts on J denote parametric partial derivatives.
Reference: [39] <author> C. Woodward. </author> <title> Cross-sectional design of B-spline surfaces. </title> <journal> Computers and Graphics, </journal> <volume> 11(2) </volume> <pages> 193-201, </pages> <year> 1987. </year>
Reference-contexts: C. Swung D-NURBS Surfaces Many objects of interest, especially manufactured objects, exhibit symmetries. Often it is convenient to model symmetric objects through cross-sectional design by specifying profile curves [11]. Woodward <ref> [39] </ref> introduced the swinging operator by extending the spherical cross-product with a scaling factor, and applied it to generate surfaces with B-spline profile curves. Piegl [25] carried the swinging idea over to NURBS curves.
References-found: 39

