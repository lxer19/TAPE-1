URL: http://www.isi.edu/~marcu/papers/aaai-96-rst.ps
Refering-URL: http://www.isi.edu/~marcu/papers.html
Root-URL: http://www.isi.edu
Email: marcu@cs.toronto.edu  
Title: Building Up Rhetorical Structure Trees  
Author: Daniel Marcu 
Date: 1  
Address: Toronto, Ontario Canada M5S 3G4  
Affiliation: Department of Computer Science University of Toronto  
Note: Copyright c 1996 American Association for Artificial Intelligence. All rights reserved.  labeled for reference): never do. d  c 1 as something compatible with the situation presented in  
Abstract: I use the distinction between the nuclei and the satellites that pertain to discourse relations to introduce a com-positionality criterion for discourse trees. I provide a first-order formalization of rhetorical structure trees and, on its basis, I derive an algorithm that constructs all the valid rhetorical trees that can be associated with Motivation Driven mostly by research in natural language generation, rhetorical structure theory (RST) (Mann & Thompson 1988) has become one of the most widely applied discourse theories. Despite its popularity, RST still lacks both a formal specification that would allow one to distinguish between well- and ill-formed rhetorical structure trees (RS-trees) and algorithms that would enable one to determine all the possible rhetorical analyses of a given discourse. For example, consider the following text (in which each textual unit 1 is (1) [No matter how much one wants to stay a nonsmoker, a 1 ] [the truth is that the pressure to smoke in junior high is greater than it will be any other time of one's life. b 1 ] [We know that 3,000 teens start smoking each day, c 1 ] [although it is a fact that 90% of them once thought that smoking was something that they'd According to Mann and Thompson's definitions (1988), the rhetorical relations given in (2) below hold between the individual text units, 2 because the understanding of both a 1 and d 1 will increase the reader's readiness to accept the writer's right to present b 1 ; the understanding of c 1 will increase the reader's belief of b 1 ; the recognition of 1 Throughout this paper, I use interchangeably the terms textual a given discourse.
Abstract-found: 1
Intro-found: 1
Reference: <author> Mann, W., and Thompson, S. </author> <year> 1988. </year> <title> Rhetorical structure theory: Toward a functional theory of text organization. </title> <booktitle> Text 8 </booktitle> (3):243-281. 
Reference-contexts: The formalization presented here distinguishes between correct and incorrect RS-trees only with respect to the original theory <ref> (Mann & Thompson 1988) </ref>. Theme, focus, intention, or other pragmatic factors could rule out some of the trees that are produced by the algorithm; but a discussion of these issues is beyond the scope of this paper. <p> Conclusion In this paper I provided a mathematical formulation of rhetorical structure trees that is based on the original Rhetorical Structure Theory <ref> (Mann & Thompson 1988) </ref> and the nuclearity features that pertain to natural language texts.
Reference: <author> Matthiessen, C., and Thompson, S. </author> <year> 1988. </year> <title> The structure of discourse and `subordination'. </title> <editor> In Haiman, J., and Thompson, S., eds., </editor> <title> Clause combining in grammar and discourse, </title> <booktitle> volume 18 of Typological Studies in Language. </booktitle> <publisher> John Benjamins Publishing Company. </publisher> <pages> 275-329. </pages>
Reference: <author> Siskind, J., and McAllester, D. </author> <year> 1993. </year> <title> Nondeterministic Lisp as a substrate for Constraint Logic Programming. </title> <booktitle> In Proceedings of the Eleventh National Conference on Artificial Intelligence, AAAI-93, Seattle, </booktitle> <pages> 133-138. </pages>
Reference-contexts: The constraints associated with these variables are a one-to-one mapping of formulas (11) to (14). Finding the set of RS-trees that are associated with a given discourse reduces then to finding all the solutions for this constraint-satisfaction problem. I have used Lisp and Screamer <ref> (Siskind & McAllester 1993) </ref>, a macro package that provides constraint-satisfaction facilities, to fully implement a system that builds RS-trees.
References-found: 3

