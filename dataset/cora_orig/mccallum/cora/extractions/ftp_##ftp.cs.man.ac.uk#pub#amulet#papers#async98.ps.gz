URL: ftp://ftp.cs.man.ac.uk/pub/amulet/papers/async98.ps.gz
Refering-URL: http://www.cs.man.ac.uk/amulet/publications/papers/async98.html
Root-URL: http://www.cs.man.ac.uk
Email: fbainbriw,sfurberg@cs.man.ac.uk  
Title: Asynchronous Macrocell Interconnect Using MARBLE connect the CPU core and DMA controller to RAM, ROM
Author: W.J.Bainbridge and S.B.Furber 
Note: MARBLE is used in the AMULET3i microprocessor to  
Address: Oxford Road, Manchester, M13 9PL, UK  
Affiliation: Department of Computer Science The University of Manchester  
Abstract: This paper introduces MARBLE, the Manchester AsynchRonous Bus for Low Energy, a two channel mi-cropipeline bus with centralized arbitration and address decoding which provides for the interconnection of asynchronous VLSI macrocells. In addition to basic bus functionality, MARBLE supports bus-bridging and test access, demonstrating that all the functions of a high speed macro-cell bus can be implemented efficiently in a fully asynchronous design style. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> I.E. Sutherland. </author> <title> Micropipelines. </title> <journal> Communications of the ACM, </journal> <volume> 32(6):720738, </volume> <month> June </month> <year> 1989. </year>
Reference-contexts: This paper discusses a system bus design based on the micropipeline design style <ref> [1] </ref> that is suitable for implementation in CMOS. <p> This means that these targets can all share one input into the data-channel arbitration through a micropipeline call element <ref> [1] </ref>. Thus the additional hardware overhead for adding simple reduced targets such as control registers is very low. 7 MARBLE Interface Design A set of generic MARBLE interfaces has been created to provide for the connection of devices using 4 phase broad protocol micropipeline interfaces.
Reference: [2] <author> J.L. Hennessy and D.A. Patterson. </author> <title> Computer Architecture, A Quantitative Approach. ISBN 1-55860-188-0. </title> <publisher> Morgan Kaufmann Publishers Inc., </publisher> <year> 1990. </year>
Reference-contexts: chip, and sections 8 and 9 introduce extensions to the MARBLE specification which are currently under consideration, and a review of the design tools used in the specification and implementation of the interfaces used in AMULET3i. 2 The MARBLE Architecture The benefits of pipelining in microprocessor design are well known <ref> [2] </ref>, and similar benefits have been ob served in asynchronous processors [3] and synchronous buses [4, 5]. Asynchronous buses present the same opportunity to pipeline the arbitration, address and data cycles of consecutive transfers.
Reference: [3] <author> J.V. Woods, P. Day, S.B. Furber, J.D. Garside, N.C. Paver, and S. Temple. AMULET1: </author> <title> An Asynchronous ARM Microprocessor. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 46(4):385398, </volume> <month> April </month> <year> 1997. </year>
Reference-contexts: specification which are currently under consideration, and a review of the design tools used in the specification and implementation of the interfaces used in AMULET3i. 2 The MARBLE Architecture The benefits of pipelining in microprocessor design are well known [2], and similar benefits have been ob served in asynchronous processors <ref> [3] </ref> and synchronous buses [4, 5]. Asynchronous buses present the same opportunity to pipeline the arbitration, address and data cycles of consecutive transfers. However, the lack of synchronization between these cycles introduces problems into the control of bus handover between initiators. <p> C Initiator B D Initiator Initiator A Initiator GrantRequest Request Grant Request GrantRequest Grant Request Grant Arbitrated Call Arbitrated Call Arbitrated Call 4 Signalling and Data-Validity Although dual rail encoding provides fully delay insensitive operation it is considered too expensive for cost-sensitive applications, hence macrocells such as AMULET1 <ref> [3, 10] </ref> and AMULET2e [11, 12] use single rail signalling. The same approach to data communication can also be used for buses, although careful attention and simulation are required to ensure that bundling constraints are met.
Reference: [4] <institution> Advanced RISC Machines Ltd (ARM), UK. AMBA, Advanced Microcontroller Bus Architecture Specification, </institution> <month> April </month> <year> 1997. </year>
Reference-contexts: under consideration, and a review of the design tools used in the specification and implementation of the interfaces used in AMULET3i. 2 The MARBLE Architecture The benefits of pipelining in microprocessor design are well known [2], and similar benefits have been ob served in asynchronous processors [3] and synchronous buses <ref> [4, 5] </ref>. Asynchronous buses present the same opportunity to pipeline the arbitration, address and data cycles of consecutive transfers. However, the lack of synchronization between these cycles introduces problems into the control of bus handover between initiators. <p> Those in-order buses that allow these split-transfers can usually only do so by adding an extension to the underlying bus and passing other signals around the side of the bus, as opposed to having inherent support. Such a technique can be used to implement split transfers on AMBA <ref> [4] </ref> by using the retract command. The Split Transfer Asynchronous Macro-cell INterconnection Architecture (STAMINA) [6] takes an alternative approach, using a split-transfer as its only primitive transfer mode. <p> The device requests the bus, and the arbiter grants the bus to only one device at a time. This requires dedicated request and grant wires between each device and the arbiter. Synchronous bus arbiters, as used in AMBA <ref> [4] </ref> and PI-Bus [5], sample the request lines on a clock edge and then apply a (prioritised) decision algorithm to determine which device is granted the bus. This approach cannot be used in an asynchronous VLSI bus since there is no clock, and it is prone to metastability. <p> There is thus a need to interconnect synchronous and asynchronous subsystems on the same chip. A bridge capable of interfacing MARBLE to synchronous macro-cell buses like AMBA <ref> [4] </ref>, and to older/slower legacy peripherals that use address-strobe type communication will be constructed as part of the MARBLE macrocell library.
Reference: [5] <institution> Siemens AG, Germany. Open Microprocessor Initiative (OMI) PI-BUS, </institution> <year> 1994. </year>
Reference-contexts: under consideration, and a review of the design tools used in the specification and implementation of the interfaces used in AMULET3i. 2 The MARBLE Architecture The benefits of pipelining in microprocessor design are well known [2], and similar benefits have been ob served in asynchronous processors [3] and synchronous buses <ref> [4, 5] </ref>. Asynchronous buses present the same opportunity to pipeline the arbitration, address and data cycles of consecutive transfers. However, the lack of synchronization between these cycles introduces problems into the control of bus handover between initiators. <p> The device requests the bus, and the arbiter grants the bus to only one device at a time. This requires dedicated request and grant wires between each device and the arbiter. Synchronous bus arbiters, as used in AMBA [4] and PI-Bus <ref> [5] </ref>, sample the request lines on a clock edge and then apply a (prioritised) decision algorithm to determine which device is granted the bus. This approach cannot be used in an asynchronous VLSI bus since there is no clock, and it is prone to metastability.
Reference: [6] <author> W.J. Bainbridge. </author> <title> The Split Transfer Asynchronous Macrocell INterconnnection Architecture, </title> <journal> STAMINA. </journal> <note> Available from http://www.cs.man.ac.uk/- amulet/projects/STAMINA/index.html. </note>
Reference-contexts: Such a technique can be used to implement split transfers on AMBA [4] by using the retract command. The Split Transfer Asynchronous Macro-cell INterconnection Architecture (STAMINA) <ref> [6] </ref> takes an alternative approach, using a split-transfer as its only primitive transfer mode. <p> This information is required by the target periph eral and the control modules in the data interfaces at both the initiator and the target. MARBLE implements a subset of the STAMINA <ref> [6] </ref> with only one colour (hence no signals are necessary to convey the colour), with the consequence that after an initiator has performed an address cycle it cannot start the next address cycle until a data cycle has been started to that same initiator, i.e. the initiator is never allowed to
Reference: [7] <institution> American National Standards Institution. Small Computer System Interface (SCSI), </institution> <year> 1986. </year>
Reference-contexts: In MARBLE two separate arbiters are required, one for the address channel and one for the data channel. 3.1 Distributed Arbitration Distributed arbitration involves all contending initiators agreeing upon which one has been granted the bus. The SCSI bus standard <ref> [7] </ref> uses a distributed arbitration scheme where each device has a unique identifier. When a device requires bus access it must wait for an arbitration cycle and then assert its ID onto a set of signal lines.
Reference: [8] <institution> IEEE Computer Society Press. FUTUREBUS : Specifications for Advanced Microcomputer Backplane Buses, </institution> <month> November </month> <year> 1983. </year>
Reference-contexts: If the device's ID is present then it has won the arbitration, otherwise it has failed and should retry later. Futurebus <ref> [8] </ref> also uses a similar type of arbitration. An alternative form of distributed arbitration is that used in a token-passing network. Here a token is passed around all devices that may require access to the bus. <p> When using a 4-phase signalling protocol this is not necessary since every transfer always returns the bus signalling lines to the same idle state and hence all devices enter every transfer in the same state. * Wired-OR signalling as used in backplane buses <ref> [8] </ref> and early NMOS VLSI buses [14] cannot be used in CMOS technology when zero idle power is a design objective. * Gated signalling using a wide OR gate to combine the individual requests from each interface to give the bus request line, and likewise for the acknowledge is possible when
Reference: [9] <author> D.J. Kinniment, A.V. Yakovlev, and B. Gaio. </author> <title> Metastable behaviour and system performance. </title> <booktitle> In Proceedings of the Second UK Asynchronous Forum, </booktitle> <month> June </month> <year> 1997. </year>
Reference-contexts: However, the tree in Figure 5 is more general and allows the root node request/grant pair to be connected to the bus controller or test unit allowing bus access to be regulated or single-stepped. Different tree structures, composed of two-way or three-way <ref> [9] </ref> arbiters, allow the bus-bandwidth to be apportioned as required.
Reference: [10] <author> N.C. Paver. </author> <title> The Design and Implementation of an Asynchronous Microprocessor. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, University of Manch-ester, U.K., </institution> <year> 1994. </year> <note> http://www.cs.man.ac.uk/amulet/- publications/thesis/paver94 phd.html. </note>
Reference-contexts: C Initiator B D Initiator Initiator A Initiator GrantRequest Request Grant Request GrantRequest Grant Request Grant Arbitrated Call Arbitrated Call Arbitrated Call 4 Signalling and Data-Validity Although dual rail encoding provides fully delay insensitive operation it is considered too expensive for cost-sensitive applications, hence macrocells such as AMULET1 <ref> [3, 10] </ref> and AMULET2e [11, 12] use single rail signalling. The same approach to data communication can also be used for buses, although careful attention and simulation are required to ensure that bundling constraints are met.
Reference: [11] <author> S.B. Furber, J.D. Garside, S. Temple, and J. Lui. Amulet2e: </author> <title> An asynchronous embedded controller. </title> <booktitle> In Proceedings of the 3rd International Symposium on Advanced Research in Asynchronous Circuits and Systems, </booktitle> <address> ASYNC97, Eindhoven, Netherlands, </address> <pages> pages 290299, </pages> <year> 1997. </year> <note> http://www.cs.man.ac.uk/amulet/- publications/papers/async97 A2e.html. </note>
Reference-contexts: B D Initiator Initiator A Initiator GrantRequest Request Grant Request GrantRequest Grant Request Grant Arbitrated Call Arbitrated Call Arbitrated Call 4 Signalling and Data-Validity Although dual rail encoding provides fully delay insensitive operation it is considered too expensive for cost-sensitive applications, hence macrocells such as AMULET1 [3, 10] and AMULET2e <ref> [11, 12] </ref> use single rail signalling. The same approach to data communication can also be used for buses, although careful attention and simulation are required to ensure that bundling constraints are met.
Reference: [12] <institution> AMULET2e Data Sheet. </institution> <address> http://www.cs.man.ac.uk/- amulet/AMULET2e uP.html. </address>
Reference-contexts: B D Initiator Initiator A Initiator GrantRequest Request Grant Request GrantRequest Grant Request Grant Arbitrated Call Arbitrated Call Arbitrated Call 4 Signalling and Data-Validity Although dual rail encoding provides fully delay insensitive operation it is considered too expensive for cost-sensitive applications, hence macrocells such as AMULET1 [3, 10] and AMULET2e <ref> [11, 12] </ref> use single rail signalling. The same approach to data communication can also be used for buses, although careful attention and simulation are required to ensure that bundling constraints are met. <p> The EMB will be similar in nature to that used in AMULET2e <ref> [12] </ref>, supporting direct connection to SRAM or DRAM and byte-packing to allow word fetches from byte-wide memory to allow bootstrapping from a single ROM (although this may also be achieved by using on-chip ROM).
Reference: [13] <author> A.M.G. Peeters. </author> <title> Single-Rail Handshake Circuits. </title> <type> PhD thesis, </type> <institution> Eindhoven University of Technology, Netherlands, </institution> <year> 1996. </year>
Reference-contexts: Asynchronous systems must incorporate this handover into the signalling protocol which is easier to achieve using 4-phase signalling due to the additional edges which can be used (in conjunction with early data validity protocols <ref> [13] </ref>) to provide idle periods either side of the data valid re gion, thus avoiding drive clashes on the data lines. * Tristate signalling drive handover is difficult when using 2-phase signalling since the new participant (s) in the transfer must be able to assume the current state of the bus
Reference: [14] <author> I.E. Sutherland, C.E. Molnar, </author> <title> R.F. </title> <editor> Sproull, and J.C. Mudge. The trimosbus. In Charles L. Seitz, editor, </editor> <booktitle> Proceedings of the First Caltech Conference on Very Large Scale Integration, </booktitle> <pages> pages 395427, </pages> <year> 1979. </year>
Reference-contexts: When using a 4-phase signalling protocol this is not necessary since every transfer always returns the bus signalling lines to the same idle state and hence all devices enter every transfer in the same state. * Wired-OR signalling as used in backplane buses [8] and early NMOS VLSI buses <ref> [14] </ref> cannot be used in CMOS technology when zero idle power is a design objective. * Gated signalling using a wide OR gate to combine the individual requests from each interface to give the bus request line, and likewise for the acknowledge is possible when using 4-phase signalling, but the 2-phase
Reference: [15] <author> J. Cortadella, M. Kishinevsky, A. Kondratyev, L. Lavagno, and A. Yakovlev. PETRIFY: </author> <title> A tool for manipulating concurrent specifications and sythesis of asynchronous controllers. </title> <journal> In IEICE Transactions on Informations and Systems, </journal> <pages> pages 315325, </pages> <year> 1997. </year>
Reference-contexts: The design of the MARBLE interfaces was partitioned into the functional modules shown in Figures 7 and 8. Each module was designed using Petri-nets to specify the behaviour, and then where possible these were synthesized using Petrify <ref> [15] </ref> to produce speed independent circuits. <p> However, current synthesis tools are very slow with large Petri nets (due to state explosion) and lack hierarchy support, hence the design was manually broken into smaller modules as illustrated in Figures 8 and 7. Some of these blocks were hand-crafted, but many were then synthesized using Petrify <ref> [15] </ref>. However, synthesis tools automatically insert new signals to solve for a complete state coding (CSC).
Reference: [16] <author> P.B. Endecott. </author> <title> Language For Asynchronous Research and Development, </title> <type> LARD. </type> <note> Available from http://- www.cs.man.ac.uk/amulet/projects/amulet/lard/. </note>
Reference-contexts: LARD <ref> [16] </ref> was used in the early stages for behavioural simulation, and to investigate the trade-offs between different protocols and modularisations. Then, having settled on a behavioural specification, the interfaces were specified using Petri nets.
Reference: [17] <author> J. Liu. </author> <title> Arithmetic and Control Components for an Asynchronous System. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, University of Manchester, U.K., </institution> <year> 1997. </year> <note> Submitted for examination. </note>
Reference-contexts: This change then requires changes to the interface latch controllers since they must now perform the conversion from the early to the broad data validity scheme. Suitable long-hold latch controllers are documented elsewhere <ref> [17] </ref>. 10 Conclusions MARBLE, a macrocell bus for use in asynchronous embedded systems, has been presented. MARBLE is based on a split-transfer architecture allowing transfers between different initiators and targets to be interleaved without the need for retries, thus giving low energy operation and low latency.
References-found: 17

