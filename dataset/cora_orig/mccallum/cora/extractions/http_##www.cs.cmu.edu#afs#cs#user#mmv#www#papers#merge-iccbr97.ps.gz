URL: http://www.cs.cmu.edu/afs/cs/user/mmv/www/papers/merge-iccbr97.ps.gz
Refering-URL: http://www.cs.cmu.edu/~mmv/produce-bib.html
Root-URL: 
Email: mmv@cs.cmu.edu,  
Title: Merge Strategies for Multiple Case Plan Replay  
Author: Manuela M. Veloso 
Web: http://www.cs.cmu.edu/mmv  
Address: Pittsburgh, PA 15213-3891, U.S.A.  
Affiliation: Computer Science Department, Carnegie Mellon University  
Abstract: Planning by analogical reasoning is a learning method that consists of the storage, retrieval, and replay of planning episodes. Planning performance improves with the accumulation and reuse of a library of planning cases. Retrieval is driven by domain-dependent similarity metrics based on planning goals and scenarios. In complex situations with multiple goals, retrieval may find multiple past planning cases that are jointly similar to the new planning situation. This paper presents the issues and implications involved in the replay of multiple planning cases, as opposed to a single one. Multiple case plan replay involves the adaptation and merging of the annotated derivations of the planning cases. Several merge strategies for replay are introduced that can process with various forms of eagerness the differences between the past and new situations and the annotated justifications at the planning cases. In particular, we introduce an effective merging strategy that considers plan step choices especially appropriate for the interleaving of planning and plan execution. We illustrate and discuss the effectiveness of the merging strategies in specific domains.
Abstract-found: 1
Intro-found: 1
Reference: [ Alexander and Tsatsoulis, 1991 ] <author> Perry Alexander and Costas Tsatsoulis. </author> <title> Using sub-cases for skeletal planning and partial case reuse. </title> <journal> International Journal of Expert Systems Research and Applications, </journal> <volume> 4-2:221247, </volume> <year> 1991. </year>
Reference-contexts: This paper reports on our work in Prodigy/Analogy investigating and developing different plan merging strategies for analogical replay. A few other systems, such as [ Redmond, 1990 ] , and ASP-II <ref> [ Alexander and Tsatsoulis, 1991 ] </ref> have addressed the use of multiple plans, although not necessarily in the replay or adaptation phase.
Reference: [ Barrett and Weld, 1994 ] <author> Anthony Barrett and Daniel S. Weld. </author> <title> Partial-order planning: Evaluating possible efficiency gains. </title> <journal> Artificial Intelligence, </journal> <volume> 67:71112, </volume> <year> 1994. </year>
Reference-contexts: Analogical replay involves validating and replaying the retrieved case [ Veloso, 1994 ] . In this section, we illustrate through a simple example the reduction in search effort that can be provided by analogical reasoning. Consider the planning domain introduced by <ref> [ Barrett and Weld, 1994 ] </ref> and shown in Figure 2 (a). We show a sample illustrative planning problem in this domain and the corresponding solution in Figure 2 (b). <p> Illustrative example: (a) Domain consists of N operators, each of the form A i shown, i = 1; : : : ; N <ref> [ Barrett and Weld, 1994 ] </ref> ; (b) Sample problem and solution. <p> Illustrative example: (a) Domain consists of 2N operators, N of the form A 1 i and N of the form A 2 i shown, i = 1; : : : ; N <ref> [ Barrett and Weld, 1994 ] </ref> ; (b) Sample problem and solution.
Reference: [ Carbonell, 1986 ] <author> Jaime G. Carbonell. </author> <title> Derivational analogy: A theory of reconstructive problem solving and expertise acquisition. </title> <editor> In R. S. Michalski, J. G. Carbonell, and T. M. Mitchell, editors, </editor> <booktitle> Machine Learning, An Artificial Intelligence Approach, </booktitle> <volume> Volume II, </volume> <pages> pages 371392. </pages> <publisher> Morgan Kaufman, </publisher> <year> 1986. </year>
Reference-contexts: Many advances have been made in this context, building upon the pioneering CHEF [ Hammond, 1986 ] and derivational analogy <ref> [ Carbonell, 1986 ] </ref> work. CHEF showed how to explain plan failure and reason about failure for case indexing and retrieval. Derivational analogy introduced and showed the need to be reminded of the solution derivation rather than only of the final solution.
Reference: [ Fikes and Nilsson, 1971 ] <author> Richard E. Fikes and Nils J. Nilsson. </author> <title> Strips: A new approach to the application of theorem proving to problem solving. </title> <journal> Artificial Intelligence, </journal> <volume> 2:189208, </volume> <year> 1971. </year>
Reference-contexts: A formal description of Prodigy4.0 can be found in [ Veloso et al., 1995 ] . As opposed to the early state-space planners, such as Strips <ref> [ Fikes and Nilsson, 1971 ] </ref> and Prodigy2.0 [ Minton et al., 1989 ] , Prodigy4.0 performs a nonlinear state-space search by allowing the interleaving of subplans for different goals.
Reference: [ Haigh and Veloso, 1995 ] <author> Karen Zita Haigh and Manuela M. Veloso. </author> <title> Route planning by analogy. </title> <booktitle> In Case-Based Reasoning Research and Development, Proceedings of ICCBR-95, </booktitle> <pages> pages 169180. </pages> <publisher> Springer-Verlag, </publisher> <month> October </month> <year> 1995. </year>
Reference-contexts: Sequential replay is a technique that we developed to account for the situation where retrieval can provide information about the order in which multiple cases should be replayed. We developed this merge technique for the application of analogical replay to route planning <ref> [ Haigh and Veloso, 1995, Haigh et al., 1997 ] </ref> . The geometric characteristics of the map used by the retrieval procedure allow for the specification of an ordering between multiple planning cases.
Reference: [ Haigh et al., 1997 ] <author> Karen Z. Haigh, Jonathan Shewchuk, and Manuela M. Veloso. </author> <title> Exploring geometry in analogical route planning. </title> <note> To appear in Journal of Experimental and Theoretical Artificial Intelligence, </note> <year> 1997. </year>
Reference-contexts: Sequential replay is a technique that we developed to account for the situation where retrieval can provide information about the order in which multiple cases should be replayed. We developed this merge technique for the application of analogical replay to route planning <ref> [ Haigh and Veloso, 1995, Haigh et al., 1997 ] </ref> . The geometric characteristics of the map used by the retrieval procedure allow for the specification of an ordering between multiple planning cases. <p> Empirical results using a real map of the city of Pittsburgh <ref> [ Haigh et al., 1997 ] </ref> showed that the sequential replay is effective due to its three main features: its combination of retrieval of ordered situational-dependent similar past routing cases; its revalidation of the availability of the case segments used; and its ability to do extra planning when needed. 5 Ordering-Based
Reference: [ Hammond, 1986 ] <author> Kristian J. Hammond. </author> <title> Case-based Planning: An Integrated Theory of Plan--ning, Learning and Memory. </title> <type> PhD thesis, </type> <institution> Yale University, </institution> <year> 1986. </year>
Reference-contexts: 1 Introduction, Related Work, and Motivation Case-based planning and derivational analogy have been of interest to several researchers, who continue to investigate the singularities of using case-based reasoning in a planning framework. Many advances have been made in this context, building upon the pioneering CHEF <ref> [ Hammond, 1986 ] </ref> and derivational analogy [ Carbonell, 1986 ] work. CHEF showed how to explain plan failure and reason about failure for case indexing and retrieval. Derivational analogy introduced and showed the need to be reminded of the solution derivation rather than only of the final solution.
Reference: [ Hanks and Weld, 1995 ] <author> Steve Hanks and Dan S. Weld. </author> <title> A domain-independent algorithm for plan adaptation. </title> <journal> Journal of Artificial Intelligence Research, </journal> <volume> 2:319360, </volume> <year> 1995. </year>
Reference-contexts: Prodigy/Analogy [ Veloso, 1994 ] develops the full derivational analogy approach and contributes an extensive analysis of the impact on planning efficiency of using the combination of case-based and state-space nonlinear planning. SPA <ref> [ Hanks and Weld, 1995 ] </ref> is a simple and elegant interpretation of case-based plan adaptation, using SNLP as a plan-space planning approach.
Reference: [ Ihrig and Kambhampati, 1994 ] <author> Laurie Ihrig and Subbarao Kambhampati. </author> <title> Derivational replay for partial-order planning. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence, </booktitle> <pages> pages 992997, </pages> <year> 1994. </year>
Reference-contexts: It represents a high degree of eagerness in terms of fully using the past case before considering the new situation. This technique has been implemented in a partial-order planner, DerSNLP <ref> [ Ihrig and Kambhampati, 1994 ] </ref> , as its replay strategy, where it showed to be appropriate. Serial replay is potentially useful if the new goals correspond to minor changes to the retrieved case which can easily be performed at the end of the planning episode. <p> We applied serial replay in this domain following the same experimental setup reported in <ref> [ Ihrig and Kambhampati, 1994 ] </ref> , namely, for each N -goal problem: (i) Solve and store an N -goal problem; (ii) Replay an N -goal case to solve a N + 1-goal problem using serial replay.
Reference: [ Kambhampati and Hendler, 1992 ] <author> Subbarao Kambhampati and James A. Hendler. </author> <title> A validation based theory of plan modification and reuse. </title> <journal> Artificial Intelligence, </journal> <volume> 55(2-3):193258, </volume> <year> 1992. </year>
Reference-contexts: Several efforts have been following this line of research. Naming a few systems that address core planning problems helps to motivate this work and the interest in the area. PRIAR <ref> [ Kambhampati and Hendler, 1992 ] </ref> notably formalizes and demonstrates the use of dependency links for plan reuse in hierarchical planning.
Reference: [ Kettler et al., 1994 ] <author> B. P. Kettler, J. A. Hendler, A. W. Andersen, and M. P. Evett. </author> <title> Massively parallel support for case-based planning. </title> <journal> IEEE Expert, </journal> <volume> 2:814, </volume> <year> 1994. </year>
Reference-contexts: Several other systems, provide specific strong approaches to aspects of the case-based planning paradigm. For example, Deja-vu [ Smyth and Keane, 1995 ] shows how retrieval can use a prediction of the adaptation cost, PARKA <ref> [ Kettler et al., 1994 ] </ref> demonstrates massively parallel effective invocations to case memory during planning, and [ Lopez and Plaza, 1993 ] views medical diagnosis as a reactive planning task.
Reference: [ Lopez and Plaza, 1993 ] <author> B. Lopez and E. </author> <title> Plaza. Case-based planning for medical diagnosis. </title> <editor> In J. Romorowski and Z. W. Ras, editors, </editor> <booktitle> Methodologies for Intelligent Systems (Proceedings of ISMIS'93). </booktitle> <publisher> Springer Verlag, </publisher> <year> 1993. </year>
Reference-contexts: For example, Deja-vu [ Smyth and Keane, 1995 ] shows how retrieval can use a prediction of the adaptation cost, PARKA [ Kettler et al., 1994 ] demonstrates massively parallel effective invocations to case memory during planning, and <ref> [ Lopez and Plaza, 1993 ] </ref> views medical diagnosis as a reactive planning task. One of the interesting and less explored (or explained) aspects of the case-based planning paradigm is the use of multiple plans during the adaptation phase.
Reference: [ Minton et al., 1989 ] <author> Steven Minton, Craig A. Knoblock, Dan R. Kuokka, Yolanda Gil, Robert L. Joseph, and Jaime G. Carbonell. </author> <title> PRODIGY 2.0: The manual and tutorial. </title> <type> Technical Report CMU-CS-89-146, </type> <institution> School of Computer Science, Carnegie Mellon University, </institution> <year> 1989. </year>
Reference-contexts: A formal description of Prodigy4.0 can be found in [ Veloso et al., 1995 ] . As opposed to the early state-space planners, such as Strips [ Fikes and Nilsson, 1971 ] and Prodigy2.0 <ref> [ Minton et al., 1989 ] </ref> , Prodigy4.0 performs a nonlinear state-space search by allowing the interleaving of subplans for different goals.
Reference: [ Munoz-Avila et al., 1994 ] <author> Hector Munoz-Avila, Juergen Paulokat, and Stefan Wess. </author> <title> Controlling a nonlinear hierarchical planner using case-based reasoning. </title> <booktitle> In Proceedings of the 1994 European Workshop on Case-Based Reasoning, </booktitle> <month> November </month> <year> 1994. </year>
Reference-contexts: Using this same base-level planning approach and also building upon the ? This research is sponsored as part of the DARPA/RL Knowledge Based Planning and Scheduling Initiative under grant number F30602-95-1-0018. Thanks to Michael Cox and the anonymous reviewers for their comments on this paper. Prodigy/Analogy approach, CAPLAN <ref> [ Munoz-Avila et al., 1994 ] </ref> has been signifi-cantly extending the indexing and retrieval techniques and applying the paradigm to realistic domains, such as manufacturing. Similarly, DerSNLP [ Ihrig and Kambham-pati, 1994 ] is another successful implementation of derivational replay in SNLP.
Reference: [ Pryor and Collins, 1992 ] <author> Louise Pryor and Gregg Collins. Cassandra: </author> <title> Planning for contingencies. </title> <type> Technical report, </type> <institution> The Institute for the Learning Sciences, Northwestern University, </institution> <year> 1992. </year>
Reference-contexts: This choice-and-ordering-based merge strategy is particularly appropriate for environments where planning and execution are interleaved and specifically in multi-agent environments where multiple plans need to be coordinated. Execution can act as a source of information for the planner <ref> [ Pryor and Collins, 1992, Stone and Veloso, 1996 ] </ref> .
Reference: [ Ram and Francis, 1996 ] <author> Ashwin Ram and Anthony G. Francis. </author> <title> Multi-plan retrieval and adaptation in an experience-based agent. </title> <editor> In David B. Leake, editor, </editor> <title> Case-Based Reasoning: experiences, lessons, </title> <booktitle> and future directions, </booktitle> <pages> pages 167184. </pages> <publisher> AAAI Press/The MIT Press, </publisher> <year> 1996. </year>
Reference-contexts: A few other systems, such as [ Redmond, 1990 ] , and ASP-II [ Alexander and Tsatsoulis, 1991 ] have addressed the use of multiple plans, although not necessarily in the replay or adaptation phase. An interesting recent effort in the Nicole system <ref> [ Ram and Francis, 1996 ] </ref> explores the use of multiple alternative planning cases during reuse, as opposed to multiple complementary plans as carried out in Prodigy/Analogy. This paper introduces several strategies to merge multiple planning cases during the adaptation phase (i.e., the replay phase in Prodigy/Analogy).
Reference: [ Redmond, 1990 ] <author> Michael Redmond. </author> <title> Distributed cases for case-based reasoning; Facilitating the use of multiple cases. </title> <booktitle> In Proceedings of the Eighth National Conference on Artificial Intelligence, </booktitle> <pages> pages 304309, </pages> <address> Cambridge, MA, 1990. </address> <publisher> AAAI Press/The MIT Press. </publisher>
Reference-contexts: The effective use of multiple cases in planning is a challenging issue and is the focus of this work. This paper reports on our work in Prodigy/Analogy investigating and developing different plan merging strategies for analogical replay. A few other systems, such as <ref> [ Redmond, 1990 ] </ref> , and ASP-II [ Alexander and Tsatsoulis, 1991 ] have addressed the use of multiple plans, although not necessarily in the replay or adaptation phase.
Reference: [ Smyth and Keane, 1995 ] <author> Barry Smyth and MArk T. Keane. </author> <title> Experiments on adaptation-guided retrieval in case-based design. </title> <editor> In M. Veloso and Agnar Aamodt, editors, </editor> <booktitle> Case-Based Reasoning Research and Development, </booktitle> <pages> pages 313324. </pages> <publisher> Springer Verlag, </publisher> <month> October </month> <year> 1995. </year>
Reference-contexts: Similarly, DerSNLP [ Ihrig and Kambham-pati, 1994 ] is another successful implementation of derivational replay in SNLP. Several other systems, provide specific strong approaches to aspects of the case-based planning paradigm. For example, Deja-vu <ref> [ Smyth and Keane, 1995 ] </ref> shows how retrieval can use a prediction of the adaptation cost, PARKA [ Kettler et al., 1994 ] demonstrates massively parallel effective invocations to case memory during planning, and [ Lopez and Plaza, 1993 ] views medical diagnosis as a reactive planning task.
Reference: [ Stone and Veloso, 1996 ] <author> Peter Stone and Manuela M. Veloso. </author> <title> User-guided interleaving of planning and execution. </title> <booktitle> In New Directions in AI Planning, </booktitle> <pages> pages 103112. </pages> <publisher> IOS Press, </publisher> <year> 1996. </year>
Reference-contexts: This choice-and-ordering-based merge strategy is particularly appropriate for environments where planning and execution are interleaved and specifically in multi-agent environments where multiple plans need to be coordinated. Execution can act as a source of information for the planner <ref> [ Pryor and Collins, 1992, Stone and Veloso, 1996 ] </ref> .
Reference: [ Veloso and Blythe, 1994 ] <author> Manuela M. Veloso and Jim Blythe. Linkability: </author> <title> Examining causal link commitments in partial-order planning. </title> <booktitle> In Proceedings of the Second International Conference on AI Planning Systems, </booktitle> <pages> pages 170175, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: Prodigy/Analogy is a case-based learning algorithm specifically designed to improve planning effi ciency. Therefore, it is important to understand what are the potential sources of planning inefficiency. Planning performance is dependent on the underlying planning algorithm and can vary with a great number of factors <ref> [ Veloso and Blythe, 1994, Veloso and Stone, 1995 ] </ref> . Hence identifying universal causes of inefficiency for all domains and planning algorithms is not possible. <p> Fig. 7. State Information Guides Operator Choices The choice of a plan step has been overlooked as a source of planning efficiency, but several concrete examples of its relevancy are introduced in <ref> [ Veloso and Blythe, 1994 ] </ref> . Choice-and-ordering-based interleaved replay aims at using derivational analogy to provide guidance for this difficult planning decision. We introduce a new dependency link to be annotated in a planning case: the information-dependent step choice link.
Reference: [ Veloso and Stone, 1995 ] <author> Manuela M. Veloso and Peter Stone. FLECS: </author> <title> Planning with a flexible commitment strategy. </title> <journal> Journal of Artificial Intelligence Research, </journal> <volume> 3:2552, </volume> <year> 1995. </year>
Reference-contexts: Prodigy/Analogy is a case-based learning algorithm specifically designed to improve planning effi ciency. Therefore, it is important to understand what are the potential sources of planning inefficiency. Planning performance is dependent on the underlying planning algorithm and can vary with a great number of factors <ref> [ Veloso and Blythe, 1994, Veloso and Stone, 1995 ] </ref> . Hence identifying universal causes of inefficiency for all domains and planning algorithms is not possible.
Reference: [ Veloso et al., 1995 ] <author> Manuela M. Veloso, Jaime Carbonell, M. Alicia Perez, Daniel Borrajo, Eugene Fink, and Jim Blythe. </author> <title> Integrating planning and learning: The PRODIGY architecture. </title> <journal> Journal of Experimental and Theoretical Artificial Intelligence, </journal> <volume> 7(1):81120, </volume> <year> 1995. </year>
Reference-contexts: This paper introduces several strategies to merge multiple planning cases during the adaptation phase (i.e., the replay phase in Prodigy/Analogy). These strategies are a refinement of the ones briefly discussed in [ Veloso, 1994 ] within a re-implementation of Prodigy/Analogy integrated with the new Prodigy4.0 planner <ref> [ Veloso et al., 1995 ] </ref> . In analogical derivational replay, the merge algorithms are dependent on the underlying generative planning algorithm. In Section 2, we briefly introduce the Prodigy4.0 generative planner as the substrate planner of Prodigy/Analogy. <p> concludes the paper with a summary of the contributions of the paper. 2 Improving Planning Efficiency: Replay of Planning Decisions Planning is a complex task for which learning from past experience can improve planning performance along the three following dimensions: planning efficiency, task action model, and quality of plans generated <ref> [ Veloso et al., 1995 ] </ref> . Prodigy/Analogy is a case-based learning algorithm specifically designed to improve planning effi ciency. Therefore, it is important to understand what are the potential sources of planning inefficiency. <p> A formal description of Prodigy4.0 can be found in <ref> [ Veloso et al., 1995 ] </ref> . As opposed to the early state-space planners, such as Strips [ Fikes and Nilsson, 1971 ] and Prodigy2.0 [ Minton et al., 1989 ] , Prodigy4.0 performs a nonlinear state-space search by allowing the interleaving of subplans for different goals.
Reference: [ Veloso, 1994 ] <author> Manuela M. Veloso. </author> <title> Planning and Learning by Analogical Reasoning. </title> <publisher> Springer Verlag, </publisher> <month> December </month> <year> 1994. </year>
Reference-contexts: Naming a few systems that address core planning problems helps to motivate this work and the interest in the area. PRIAR [ Kambhampati and Hendler, 1992 ] notably formalizes and demonstrates the use of dependency links for plan reuse in hierarchical planning. Prodigy/Analogy <ref> [ Veloso, 1994 ] </ref> develops the full derivational analogy approach and contributes an extensive analysis of the impact on planning efficiency of using the combination of case-based and state-space nonlinear planning. <p> This paper introduces several strategies to merge multiple planning cases during the adaptation phase (i.e., the replay phase in Prodigy/Analogy). These strategies are a refinement of the ones briefly discussed in <ref> [ Veloso, 1994 ] </ref> within a re-implementation of Prodigy/Analogy integrated with the new Prodigy4.0 planner [ Veloso et al., 1995 ] . In analogical derivational replay, the merge algorithms are dependent on the underlying generative planning algorithm. <p> Case indexing includes the goal and the solution-relevant initial state (footprint). Retrieval compares new and past goals and problem states and returns a set of planning cases to cover the new planning situation. Analogical replay involves validating and replaying the retrieved case <ref> [ Veloso, 1994 ] </ref> . In this section, we illustrate through a simple example the reduction in search effort that can be provided by analogical reasoning. Consider the planning domain introduced by [ Barrett and Weld, 1994 ] and shown in Figure 2 (a). <p> the steps introduced for these goals; the annotated justifications at the case decisions provide the necessary linking information for this adaptation. * And the more interesting situation in which merging multiple plans may identify repetition of steps in the different cases; analogical replay skips the repetition. the one-way rocket domain <ref> [ Veloso, 1994 ] </ref> . 2 n2 (done) 4 n4 &lt;*finish*&gt; 5 n5 (at obj1 locb) "case1" 5 -- goal (AT OBJ1 LOCB) 7 n7 &lt;unload-rocket obj1 locb r1&gt; "case1" 6 -- operator UNLOAD-ROCKET "case1" 7 -- bindings OBJ1,LOCB,R1 8 n8 (inside obj1 r1) case "case1" 8 -- goal (INSIDE OBJ1
Reference: [ Wang and Veloso, 1994 ] <author> Xuemei Wang and Manuela M. Veloso. </author> <title> Learning planning knowledge by observation and practice. </title> <booktitle> In Proceedings of the ARPA Planning Workshop, </booktitle> <pages> pages 285294, </pages> <address> Tucson, AZ, </address> <month> February </month> <year> 1994. </year> <title> This article was processed using the L A T E X macro package with LLNCS style </title>
Reference-contexts: There are three kinds of possible differences between the new and the old situation, namely role (object), initial state, and goal differences. 2 Clearly, the most 2 In <ref> [ Wang and Veloso, 1994 ] </ref> , we further consider situations in which the underlying available actions could be different between the past and the new situation.
References-found: 24

