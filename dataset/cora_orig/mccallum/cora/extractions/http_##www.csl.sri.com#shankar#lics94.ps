URL: http://www.csl.sri.com/shankar/lics94.ps
Refering-URL: http://www.csl.sri.com/shankar/
Root-URL: 
Email: lincoln@csl.sri.com shankar@csl.sri.com  
Title: Proof Search in First-order Linear Logic and Other Cut-free Sequent Calculi  
Author: P. D. Lincoln N. Shankar 
Address: 333 Ravenswood Ave Menlo Park CA 94025 USA  
Affiliation: SRI International Computer Science Laboratory  
Abstract: Reprint from: Ninth Annual IEEE Symposium on Logic in Computer Science (LICS'94) to be held in Paris, France, July 4-8 1994. Also appears in SRI Technical Report CSL-93-11. Abstract We present a general framework for proof search in first-order cut-free sequent calculi and apply it to the specific case of linear logic. In this framework, Her-brand functions are used to encode universal quantification, and unification is used to instantiate existential quantifiers so that the eigenvariable conditions are respected. We present an optimization of this procedure that exploits the permutabilities of the subject logic. We prove the soundness and completeness of several related proof search procedures. This proof search framework is used to show that provability for first-order MALL is in nexptime, and first-order MLL is in np. Performance comparisons based on Prolog implementations of the procedures are also given. The optimization of the quantifier steps in proof search can be combined effectively with a number of other optimizations that are also based on permutability. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J.-M. Andreoli. </author> <title> Logic programming with focusing proofs in linear logic. </title> <journal> Journal of Logic and Computation, </journal> <note> 1992. To appear. </note>
Reference-contexts: Otherwise, R1 is said to be permutable below R2, or equivalently, R2 is permutable above R1. One way to exploit the permutabil-ities is to restrict the backtracking in proof search to those rules that might not permute below others <ref> [1] </ref>. As we have already seen, the permutabilities can also be used to reduce the dependencies between Herbrand variables and Herbrand functions. <p> These optimizations are similar to those proposed by An-dreoli <ref> [1] </ref>, Galmiche and Perrier [4], Hodas and Miller [7], and Tammet [16]. The combination of LLO with optimizations based on propositional permutabil-ities is a delicate matter.
Reference: [2] <author> S. Cerrito. </author> <title> Herbrand methods in linear logic. </title> <year> 1992. </year>
Reference-contexts: We also observe that first-order MLL is np-complete and hence of the same complexity as its propositional counterpart. The naive form of dynamic Skolemization has been studied by a number of authors. Cerrito <ref> [2] </ref> presents a related system for linear logic. Shankar [15] presents an optimized form of dynamic Skolemization for the intuitionistic sequent calculus LJ . In this paper, we generalize this technique to arbitrary cut-free sequent calculi with the subformula property and conventional quantifier rules. <p> Acknowledgments. We thank Sam Owre, Dale Miller, Andre Scedrov, Gopalan Nadathur, and James Harland for their help and guidance, and Serenella Cerrito for sharing an early draft of her paper <ref> [2] </ref> with us.
Reference: [3] <author> C.-L. Chang and R.C-T. Lee. </author> <title> Symbolic Logic and Mechanical Theorem Proving. </title> <publisher> Academic Press, </publisher> <year> 1973. </year>
Reference-contexts: We also obtain complexity results for some first-order fragments of linear logic. 3 Linear Logic We will be assuming the basic terminology of sequent calculus, linear logic, and unification theory <ref> [3, 5] </ref>. We will only be dealing with idempotent substitutions U so that U (U (t)) = U (t), for any t. The composition of substitutions will be such that (U ffi V )(t) = U (V (t)), for any t.
Reference: [4] <author> D. Galmiche and G. Perrier. </author> <title> Foundations of proof search strategies design in linear logic. </title> <booktitle> In Symposium on Logical Foundations of Computer Science, </booktitle> <address> St. Petersburg, </address> <year> 1994. </year> <note> To appear. </note>
Reference-contexts: These optimizations are similar to those proposed by An-dreoli [1], Galmiche and Perrier <ref> [4] </ref>, Hodas and Miller [7], and Tammet [16]. The combination of LLO with optimizations based on propositional permutabil-ities is a delicate matter.
Reference: [5] <author> J.-Y. Girard. </author> <title> Linear logic. </title> <journal> Theoretical Computer Science, </journal> <volume> 50 </volume> <pages> 1-102, </pages> <year> 1987. </year>
Reference-contexts: The point of these optimizations is to reduce the amount of backtracking in proof search. The general ideas are illustrated with the spe-cific case of linear logic because, as is well known, it is possible to embed many logics into linear logic while preserving the structure of proofs <ref> [5, 12] </ref>. We present a series of proof search procedures for linear logic culminating in one where the permutability properties of linear logic are exploited to introduce an optimized form of dynamic Skolemization 1 that significantly reduces the amount of nondeterminism in the proof search. <p> We also obtain complexity results for some first-order fragments of linear logic. 3 Linear Logic We will be assuming the basic terminology of sequent calculus, linear logic, and unification theory <ref> [3, 5] </ref>. We will only be dealing with idempotent substitutions U so that U (U (t)) = U (t), for any t. The composition of substitutions will be such that (U ffi V )(t) = U (V (t)), for any t.
Reference: [6] <author> J. </author> <title> Herbrand. Investigations in proof theory. </title> <editor> In J. van Heijenoort, editor, </editor> <title> From Frege to Godel: </title> <booktitle> A Sourcebook of Mathematical Logic, </booktitle> <pages> 1879-1931, pages 525-581. </pages> <publisher> Harvard University Press, </publisher> <address> Cambridge, MA, </address> <year> 1967. </year> <note> First published 1930. </note>
Reference-contexts: The latter disadvantage is outweighed by the ease with which cut-free sequent calculi can be mechanized. The next level of nondeterminism is in the guessing of the term instantiating an existential quantifier. By employing Herbrand functions and unification, this guesswork can be eliminated. The Herbrand theorem <ref> [6] </ref> states that a formula A of first-order logic can be transformed into a quantifier-free formula A H such that A is provable if and only if some finite disjunction of instances of A H can be proved in classical propositional logic.
Reference: [7] <author> J.S. Hodas and D. Miller. </author> <title> Logic programming in a fragment of intuitionistic linear logic. </title> <booktitle> In Proc. 6-th Annual IEEE Symposium on Logic in Computer Science, Amsterdam, </booktitle> <pages> pages 32-42. </pages> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <address> California, </address> <month> July </month> <year> 1991. </year> <note> Full paper to appear in Information and Computation. </note>
Reference-contexts: These optimizations are similar to those proposed by An-dreoli [1], Galmiche and Perrier [4], Hodas and Miller <ref> [7] </ref>, and Tammet [16]. The combination of LLO with optimizations based on propositional permutabil-ities is a delicate matter. The usual optimization is that if we have a rule R2 that is always permutable below any other rule, then it is safe to apply this rule immediately in the proof search.
Reference: [8] <author> M. Kanovich. </author> <title> Horn programming in linear logic is NP-complete. </title> <booktitle> In Proc. 7-th Annual IEEE Symposium on Logic in Computer Science, </booktitle> <address> Santa Cruz, California, </address> <pages> pages 200-210. </pages> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <address> Califor-nia, </address> <month> June </month> <year> 1992. </year>
Reference-contexts: Using similar techniques, Kanovich showed that multiplicative linear logic is np-complete <ref> [8] </ref>. Lincoln and Winkler demonstrated np-completeness of MLL using only the constants [13]. Lincoln and Scedrov had previously shown this fragment of linear logic to be nexptime-hard [11]. By extending this proof search paradigm, we are able to show here that the first-order version of MALL is decidable in nexptime. <p> The number of axiom nodes in a MLL1 proof is linear in the size of the conclusion, and each axiom node in the search has size at most quadratic in the size of the conclusion. This results in a tight bound since the propositional fragment MLL is np-complete <ref> [8] </ref>. Theorem 3.5 MLL1 is np-complete. 4 An Optimization We now present an optimization of LLV called LLO that exploits the permutabilities of linear logic. As is clear from the table in Appendix A, there are only a few pairs of impermutable rules in LL.
Reference: [9] <author> S.C. Kleene. </author> <title> Permutability of inferences in Gentzen's calculi LK and LJ. </title> <journal> Memoirs of the AMS, </journal> <year> 1952. </year>
Reference-contexts: In many sequent calculi, the relative order of the structural and propositional rules is also crucial to the success of an attempted proof search. The permutability theorems <ref> [9] </ref> of a sequent calculus indicate when the relative order of two inference rules can be permuted without invalidating a proof. These permutabilities can be exploited to reduce the nondeterminism in the ordering of proof rules.
Reference: [10] <author> P. Lincoln, J. Mitchell, A. Scedrov, and N. Shankar. </author> <title> Decision problems for propositional linear logic. </title> <journal> Annals Pure Appl. Logic, </journal> <volume> 56 </volume> <pages> 239-311, </pages> <year> 1992. </year> <title> Special Volume dedicated to the memory of John Myhill. </title>
Reference-contexts: The sequent proof search paradigm was previously used to analyze various fragments of propositional linear logic to show the undecidability of propositional linear logic, the pspace-completeness of multiplicative-additive linear logic (MALL), and the np-completeness of multiplicative linear logic (MLL) with unrestricted weakening <ref> [10] </ref>. Using similar techniques, Kanovich showed that multiplicative linear logic is np-complete [8]. Lincoln and Winkler demonstrated np-completeness of MLL using only the constants [13]. Lincoln and Scedrov had previously shown this fragment of linear logic to be nexptime-hard [11].
Reference: [11] <author> P. Lincoln and A. Scedrov. </author> <title> First order linear logic without modalities is NEXPTIME-hard. </title> <note> To Appear in TCS, 1993. Available using anonymous ftp from host ftp.cis.upenn.edu and the file pub/papers/scedrov/mall1.dvi. </note>
Reference-contexts: Using similar techniques, Kanovich showed that multiplicative linear logic is np-complete [8]. Lincoln and Winkler demonstrated np-completeness of MLL using only the constants [13]. Lincoln and Scedrov had previously shown this fragment of linear logic to be nexptime-hard <ref> [11] </ref>. By extending this proof search paradigm, we are able to show here that the first-order version of MALL is decidable in nexptime. We also observe that first-order MLL is np-complete and hence of the same complexity as its propositional counterpart. <p> Since unification is linear [14], one can build a non deterministic procedure to guess and check a proof in time that is exponential in the size of the conclusion. Lincoln and Scedrov <ref> [11] </ref> have shown that the decid-ability of MALL1 is nexptime-hard so we now have a tight bound on the complexity. Theorem 3.4 MALL1 is nexptime-complete. The multiplicative fragment of first-order linear logic (MLL1) can be shown to be decidable in np by the same method.
Reference: [12] <author> P. Lincoln, A. Scedrov, and N. Shankar. </author> <title> Linearizing in-tuitionistic implication. </title> <booktitle> In Proc. 6-th Annual IEEE Symposium on Logic in Computer Science, Amsterdam, </booktitle> <pages> pages 51-62. </pages> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <address> Cali-fornia, </address> <month> July </month> <year> 1991. </year> <note> Full paper to appear in Annals of Pure and Applied Logic. </note>
Reference-contexts: The point of these optimizations is to reduce the amount of backtracking in proof search. The general ideas are illustrated with the spe-cific case of linear logic because, as is well known, it is possible to embed many logics into linear logic while preserving the structure of proofs <ref> [5, 12] </ref>. We present a series of proof search procedures for linear logic culminating in one where the permutability properties of linear logic are exploited to introduce an optimized form of dynamic Skolemization 1 that significantly reduces the amount of nondeterminism in the proof search.
Reference: [13] <author> P. Lincoln and T. Winkler. </author> <title> Constant-Only Multiplicative Linear Logic is NP-Complete. </title> <note> To Appear in TCS, </note> <year> 1993. </year>
Reference-contexts: Using similar techniques, Kanovich showed that multiplicative linear logic is np-complete [8]. Lincoln and Winkler demonstrated np-completeness of MLL using only the constants <ref> [13] </ref>. Lincoln and Scedrov had previously shown this fragment of linear logic to be nexptime-hard [11]. By extending this proof search paradigm, we are able to show here that the first-order version of MALL is decidable in nexptime.
Reference: [14] <author> A. Martelli and U. Montanari. </author> <title> An efficient unification algorithm. </title> <journal> ACM Trans. on Prog. Lang. and Systems, </journal> <volume> 4(2), </volume> <month> Feb. </month> <year> 1982. </year>
Reference-contexts: Since LLV introduces a Herbrand term of the form h (T ) for each universal quantifier in the conclusion, where T is itself bounded by the number of existential quantifiers in the conclusion, each axiom sequent is at most quadratic in the size of conclusion. Since unification is linear <ref> [14] </ref>, one can build a non deterministic procedure to guess and check a proof in time that is exponential in the size of the conclusion. Lincoln and Scedrov [11] have shown that the decid-ability of MALL1 is nexptime-hard so we now have a tight bound on the complexity.
Reference: [15] <author> N. Shankar. </author> <title> Proof search in the intuitionistic sequent calculus. </title> <editor> In D. Kapur, editor, </editor> <booktitle> Automated Deduction: CADE-11, volume 607 of lncs, </booktitle> <pages> pages 522-536, </pages> <address> Berlin, 1992. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: We also observe that first-order MLL is np-complete and hence of the same complexity as its propositional counterpart. The naive form of dynamic Skolemization has been studied by a number of authors. Cerrito [2] presents a related system for linear logic. Shankar <ref> [15] </ref> presents an optimized form of dynamic Skolemization for the intuitionistic sequent calculus LJ . In this paper, we generalize this technique to arbitrary cut-free sequent calculi with the subformula property and conventional quantifier rules.
Reference: [16] <author> T. Tammet. </author> <title> Proof search strategies in linear logic. Programming Methodology Group Report 70, </title> <institution> Chalmers University, </institution> <year> 1993. </year>
Reference-contexts: These optimizations are similar to those proposed by An-dreoli [1], Galmiche and Perrier [4], Hodas and Miller [7], and Tammet <ref> [16] </ref>. The combination of LLO with optimizations based on propositional permutabil-ities is a delicate matter. The usual optimization is that if we have a rule R2 that is always permutable below any other rule, then it is safe to apply this rule immediately in the proof search.
References-found: 16

