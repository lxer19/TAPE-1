URL: http://www.cs.utah.edu/~jlorenz/htreason.ps
Refering-URL: http://www.cs.utah.edu/~jlorenz/
Root-URL: 
Title: AUTOMATIC HYPERTEXT LINK CREATION FOR LEGAL DOCUMENTS  
Author: by Jeffrey Alan Lorenzen Lee A. Hollaar Thomas C. Henderson Craig K. Rushforth Richard J. Cummings 
Degree: A Senior Honors Project submitted to the faculty of the University of Utah in partial fulfillment of the requirements for the Honors Degree of Bachelor of Science in Computer Science APPROVED:  Supervisor Chairperson, Computer Science  Departmental Honors Advisor Director, Honors Program  
Date: June 1994  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Bernstein, M. </author> <title> An Apprentice That Discovers Hypertext Links. In Hypertext: </title> <booktitle> Concepts, Systems, and Applications. Proceedings of the First European Conference on Hypertext, </booktitle> <editor> N. Streitz, Ed., </editor> <publisher> Cambridge University Press, </publisher> <address> Cambridge, England, </address> <year> 1990, </year> <pages> pp. 212-223. </pages>
Reference-contexts: This is the easiest way to look for links and will be the basis for my system. A number of the articles reported that some degree of user interaction was generally required to create links [2, 4, 5]. A system by 9 Bernstein <ref> [1] </ref> went even further. The focus of his system was to propose links that might be useful. The system derived these links from a basic syntactic analysis of the document. The user was left to choose which links to traverse. <p> The system could propose what it thinks are references and the appropriate translation and the user could approve, disapprove, or modify the information. The idea comes from the "link apprentice" system by Bernstein <ref> [1] </ref> mentioned in Chapter 3. It would require some user effort but would not be nearly as difficult as locating and converting all links by hand. The job of the parser is to take information from the detection phase 19 and turn it into a standard form.
Reference: [2] <author> Hamfelt, A., and Barklund, J. </author> <title> An Intelligent Interface to Legal Data Bases Combining Logic Programming and Hypertext. </title> <booktitle> In Proceedings of Database and Expert Systems Applications, </booktitle> <editor> K. Wagner, Ed., </editor> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1990, </year> <pages> pp. 56-61. </pages>
Reference-contexts: Very little consideration was given to the meaning of the words. This is the easiest way to look for links and will be the basis for my system. A number of the articles reported that some degree of user interaction was generally required to create links <ref> [2, 4, 5] </ref>. A system by 9 Bernstein [1] went even further. The focus of his system was to propose links that might be useful. The system derived these links from a basic syntactic analysis of the document. The user was left to choose which links to traverse.
Reference: [3] <author> Nielsen, J. </author> <title> Usability Considerations in Introducing Hypertext. In Hypermedia/Hypertext and Object-oriented Databases, </title> <editor> H. Brown, Ed., </editor> <publisher> Chapman & Hall, </publisher> <address> London, England, </address> <year> 1991, </year> <pages> pp. 3-13. </pages>
Reference-contexts: Other articles focussed on the rationale for using hypertext systems. Some advantages of hypertext include that clips of animation and graphic images can be included and multiple copies of the same text do not have to be stored <ref> [3] </ref>. Disadvantages include that hypertext is slower to read [3] and is not portable because no accepted standards exist. Some articles mentioned issues that must be considered when implementing a hypertext system. A major problem with hypertext is that the user can easily get lost in the sea of information [3]. <p> Other articles focussed on the rationale for using hypertext systems. Some advantages of hypertext include that clips of animation and graphic images can be included and multiple copies of the same text do not have to be stored <ref> [3] </ref>. Disadvantages include that hypertext is slower to read [3] and is not portable because no accepted standards exist. Some articles mentioned issues that must be considered when implementing a hypertext system. A major problem with hypertext is that the user can easily get lost in the sea of information [3]. <p> <ref> [3] </ref>. Disadvantages include that hypertext is slower to read [3] and is not portable because no accepted standards exist. Some articles mentioned issues that must be considered when implementing a hypertext system. A major problem with hypertext is that the user can easily get lost in the sea of information [3]. Another consideration must be the various ways that users will use the system. In my system, I need to be sure to provide useful links as opposed to many frivolous ones.
Reference: [4] <author> Rada, R., and Diaper, D. </author> <title> Converting Text to Hypertext and Vice Versa. In Hypermedia/Hypertext and Object-oriented Databases, </title> <editor> H. Brown, Ed., </editor> <publisher> Chapman & Hall, </publisher> <address> London, England, </address> <year> 1991, </year> <pages> pp. 167-200. </pages>
Reference-contexts: Very little consideration was given to the meaning of the words. This is the easiest way to look for links and will be the basis for my system. A number of the articles reported that some degree of user interaction was generally required to create links <ref> [2, 4, 5] </ref>. A system by 9 Bernstein [1] went even further. The focus of his system was to propose links that might be useful. The system derived these links from a basic syntactic analysis of the document. The user was left to choose which links to traverse.
Reference: [5] <author> Rada, R. </author> <title> Converting a Textbook to Hypertext. </title> <journal> ACM Transactions on Information Systems 10, </journal> <month> 3 (July </month> <year> 1992), </year> <pages> 294-315. </pages>
Reference-contexts: I also wanted to gather ideas for work that had not been tried. Several systems have been constructed to automatically create "structural" links. These link from an automatically generated table of contents to titles, chapters, and sections of a document <ref> [5, 8] </ref>. While this is useful, it has been done and is not very interesting. It may be incorporated into my utility if time permits but will be a low priority item. Very few systems have been constructed to automatically create "content" links. <p> Very little consideration was given to the meaning of the words. This is the easiest way to look for links and will be the basis for my system. A number of the articles reported that some degree of user interaction was generally required to create links <ref> [2, 4, 5] </ref>. A system by 9 Bernstein [1] went even further. The focus of his system was to propose links that might be useful. The system derived these links from a basic syntactic analysis of the document. The user was left to choose which links to traverse.
Reference: [6] <author> Riloff, E. </author> <title> Automatically Constructing a Dictionary for Information Extraction Tasks. </title> <booktitle> In Proceedings of the Eleventh National Conference on Artificial Intelligence (AAAI-93), </booktitle> <pages> pp. 811-816. </pages>
Reference-contexts: She and Wendy Lehnert have used a system called CIRCUS to analyze sentence structure. By using a 24 combination of syntax and semantic meaning, information can be extracted more accurately from documents. <ref> [6, 7] </ref> By applying the work of Riloff and Lehnert, the simple syntactic analysis used in my project could be extended to also use semantic information. This would greatly improve the number of correct references detected and would reduce the user input that will likely be required.
Reference: [7] <author> Riloff, E., and Lehnert, W. </author> <title> Information Extraction as a Basis for High-Precision Text Classification. </title> <journal> ACM Transactions on Information Systems, </journal> <note> 1994. (to be published) </note>
Reference-contexts: She and Wendy Lehnert have used a system called CIRCUS to analyze sentence structure. By using a 24 combination of syntax and semantic meaning, information can be extracted more accurately from documents. <ref> [6, 7] </ref> By applying the work of Riloff and Lehnert, the simple syntactic analysis used in my project could be extended to also use semantic information. This would greatly improve the number of correct references detected and would reduce the user input that will likely be required.
Reference: [8] <author> Sarre, F., Seidt, M., and Guntzer, U. </author> <title> HyperTeX -- A System for the Automatic Generation of Hypertext Textbooks from Linear Texts. </title> <booktitle> In Proceedings of Database and Expert Systems Applications, </booktitle> <editor> K. Wagner, Ed., </editor> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1990, </year> <pages> pp. 62-68. </pages>
Reference-contexts: I also wanted to gather ideas for work that had not been tried. Several systems have been constructed to automatically create "structural" links. These link from an automatically generated table of contents to titles, chapters, and sections of a document <ref> [5, 8] </ref>. While this is useful, it has been done and is not very interesting. It may be incorporated into my utility if time permits but will be a low priority item. Very few systems have been constructed to automatically create "content" links.
Reference: [9] <author> Wilson, E. </author> <title> Guiding Lawyers: Mapping Law into Hypertext. </title> <booktitle> Artificial Intelligence Review 6 (1992), </booktitle> <pages> 161-189. </pages> <note> 26 Name of Candidate: </note> <author> Jeffrey Alan Lorenzen Birth Date: </author> <month> August 5, </month> <title> 1971 Birth Place: </title> <address> Raleigh, </address> <publisher> North Carolina Address: </publisher> <address> 52 Spruce Valley Road Stone Ridge, NY 12484 </address>
Reference-contexts: It may be incorporated into my utility if time permits but will be a low priority item. Very few systems have been constructed to automatically create "content" links. This type of link points from something of interest to its source. Of the systems that did this <ref> [9] </ref>, most were based on syntactic analysis of the document. Very little consideration was given to the meaning of the words. This is the easiest way to look for links and will be the basis for my system.
References-found: 9

