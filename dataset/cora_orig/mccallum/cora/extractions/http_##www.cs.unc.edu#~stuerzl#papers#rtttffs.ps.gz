URL: http://www.cs.unc.edu/~stuerzl/papers/rtttffs.ps.gz
Refering-URL: http://www.cs.unc.edu/~stuerzl/publications.html
Root-URL: http://www.cs.unc.edu
Email: stuerzl@cs.unc.edu  
Title: creating new collective works for resale or redistribution to servers or lists, or to reuse
Author: Wolfgang Strzlinger 
Address: Chapel Hill  
Affiliation: Dept. of Computer Science, University of North Carolina at  
Note: Personal use of this material is permitted. However, permission to reprint/republish this material for advertising or promotional purposes or for  this work in other works must be obtained from the IEEE. 1  be hit by  
Abstract: This paper presents a new approach to rendering triangular algebraic free form surfaces. A hierarchical subdivision of the surface with associated tight bounding volumes provides for quick identification of the surface regions likely to
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. H. Ballard, </author> <title> Strip Trees: A Hierarchical Representation for Curves, </title> <journal> Communications of the ACM 24(5), </journal> <pages> pp. 310-321, </pages> <year> 1981. </year> <title> Personal use of this material is permitted. However, permission to reprint/republish this material for advertising or promotional purposes or for creating new collective works for resale or redistribution to servers or lists, or to reuse an copyrighted component of this work in other works must be obtained from the IEEE. </title> - <type> 12 </type> - 
Reference-contexts: If the number is odd the point is considered inside [9]. For free form curves edge segments the ray-curve intersection test is performed by the two-dimensional equivalent of the free form surface ray casting procedure described by [2]. In two dimensions the method is very similar to strip trees <ref> [1] </ref>. If the number of edges, straight or curved, in a contour polygon is higher than an implementation dependent number, e.g. 8, another tree of parallelograms is built for the set of the edges.
Reference: [2] <author> W. Barth, W. Strzlinger, </author> <title> Efficient Ray tracing for Bzier and B-Spline Surfaces, </title> <booktitle> Computers & Graphics 17(4), </booktitle> <pages> pp. 423-430, </pages> <month> July </month> <year> 1993. </year>
Reference-contexts: Additionally bounding volumes are tighter. This improves the efficiency during the search for potentially intersecting surface regions as large parts of the tree can be pruned quickly. Examples for previously used bounding volumes include axes-parallel bounding boxes [20], Chebyshev boxing [10], oriented slabs [22], and parallelepipeds <ref> [2] </ref>. The last method also employs an approximation to each surface part to obtain an accurate starting point for the Newton iteration, thereby ensuring rapid convergence with relatively small tree depths. Campagna [4] experimented also with combinations of enclosing volumes to optimize the performance. <p> If the number is odd the point is considered inside [9]. For free form curves edge segments the ray-curve intersection test is performed by the two-dimensional equivalent of the free form surface ray casting procedure described by <ref> [2] </ref>. In two dimensions the method is very similar to strip trees [1]. If the number of edges, straight or curved, in a contour polygon is higher than an implementation dependent number, e.g. 8, another tree of parallelograms is built for the set of the edges. <p> For the leaves crossed by the trimming curve an inside test is performed to determine if the intersection point is valid. 3.1. Construction of the Bounding Volume Tree In earlier works parallelepipeds were used to construct tight bounding volumes for quadrilateral free form surfaces <ref> [2] </ref>. Kajiya [13] used triangular prisms to optimize the ray tracing of fractals. Additionally recent work for collision detection shows that orientable solids result in more efficient bounding volume hierarchies compared to axis-aligned solids [12]. Personal use of this material is permitted. <p> RaySurface Intersection The intersection of a ray with the free form surface is performed with an adapted version of the iteration procedure presented by Barth and Strzlinger <ref> [2] </ref>. This method is summarized in the following paragraphs and a few relevant details are discussed. Each ray is intersected with the root tripiped of the bounding volume tree. If there is an intersection the successors of the node are examined recursively. <p> And as every point of the surface is enclosed by at least one tripiped no intersections will be missed. Previous experience with quadrilateral free form surfaces showed that a maximum of three iteration steps suffices for most rectangular surfaces <ref> [2] </ref>. The current approximation to the intersection point in the above iteration procedure may lie outside the parameter domain of a surface part associated with a leaf node. <p> All timings shown are in seconds for 512 by 512 images on a 250Mhz R4400 SGI-Onyx. One ray was shot through the midpoint of each pixel. The grazing angle criterion from section 3.3 was set to 78.5 degrees as in <ref> [2] </ref>. 4.1. Triangular Free Form Surfaces In Fig. 15 (a) a cubic Bzier surface and in Fig. 15 (b) the tripipeds corresponding to 2 recursive subdivisions are shown to illustrate the tight fit of the bounding volumes.
Reference: [3] <author> J. Bramsteidl, </author> <title> Ray tracing von Getrimmten Freiformflchen, </title> <type> Master thesis, </type> <institution> Univ. of Linz, Austria, </institution> <month> March </month> <year> 1996. </year>
Reference: [4] <author> S. Campagna, </author> <title> Vergleich und Erweiterung von Verfahren fr die Schnittpunktberechnung von Strahlen mit Polynomflchen, </title> <type> Master thesis, </type> <institution> Univ. of Erlangen, Germany, </institution> <month> August </month> <year> 1995. </year>
Reference-contexts: The last method also employs an approximation to each surface part to obtain an accurate starting point for the Newton iteration, thereby ensuring rapid convergence with relatively small tree depths. Campagna <ref> [4] </ref> experimented also with combinations of enclosing volumes to optimize the performance. The simplest approach for trimmed surfaces is to compute the intersection point first and then to test if the point is inside or outside the trimming curve.
Reference: [5] <author> W. Dahmen, C. A. Micchelli, H. -P. Seidel, </author> <title> Blossoming begets B-Splines built better by B-Patches, </title> <journal> Math. Comp., </journal> <volume> vol. 59, </volume> <pages> pp. 97-115, </pages> <year> 1992. </year>
Reference-contexts: Then the following two properties hold: The surface lies completely inside the convex hull of its control points and the surface can be repeatedly subdivided into subsurfaces of the same type. Triangular surfaces based on B-Splines have been presented recently <ref> [5] </ref>. See Fig. 1 for an example of a simple quadratic Bzier surface and its control points. (a) (b) v P 1,0 P 1,2 Fig. 1: (a) Bzier surface and (b) its control point mesh. For subdivision of two-dimensional Bzier curves the de Casteljau algorithm is used.
Reference: [6] <author> G. Farin, </author> <title> Triangular Bernstein-Bzier patches, </title> <booktitle> Computer Aided Geometric Design 3(2), </booktitle> <pages> pp. 83-128, </pages> <year> 1986. </year>
Reference-contexts: Relevant to this work are free form surfaces based on a triangular parameter domain. One powerful variant of triangular free form surfaces is the rational triangular Bzier surface. Rational surfaces allow the exact modeling of quadratic surfaces, which are common in mechanical design. See <ref> [6] </ref> for a survey.
Reference: [7] <author> G. E. Farin, </author> <title> Curves and Surfaces for Computer Aided Geometric Design, 4th edition, </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1997. </year>
Reference-contexts: The accurate visualization of free form surfaces helps significantly in the design process and reduces the need to build physical models. This work focuses on algebraic free form surfaces. For an introduction see e.g. <ref> [7] </ref>. Algebraic free form surfaces are rational polynomial surfaces in two parameters. Two types of free form surfaces exist: rectangular or tensor product surfaces and triangular surfaces. The definition of rectangular surfaces is conceptually more simple and they are used in many applications. <p> Trimmed Free Form Surfaces Free form surfaces are used to model curved objects such as automobiles that cannot be modeled precisely with conventional primitive objects such as polygons, polyhedra and spheres. This work focuses on the most common type, algebraic free form surfaces. For an introduction see e.g. <ref> [7] </ref>. Trimming curves limit the surface to parts of its parameter domain which is used e.g. to introduce holes. 2.1. <p> The algorithm works by recursively applying linear interpolation with a fixed ratio to the control polygon. The final results are the control polygons for the two sub-curves and a point on the curve. For a more detailed description of the de Casteljau algorithm see e.g. <ref> [7] </ref>. Triangular free form surfaces can be subdivided with an extended form of the de Casteljau algorithm. The triangular control point mesh is recursively subdivided with tri-linear interpolation for a given pair of parameter values. <p> Evaluating all possible permutations of this step sequence constructs all control points of the triangular subsurface, see Fig. 3 (b) and (c). This technique is now also known as the blossoming principle (see also <ref> [7] </ref> section 18.3). (a) (c)(b) (u 1 ,v 1 ) P 0 (u 0 ,v 0 ) P 1 (u 1 ,v 1 ) Fig. 3: (a) long thin triangles from repeated recursive subdivision with the de Casteljau algorithm, (b) arbitrary parameter domain sub triangle and (c) corresponding subsurface and its
Reference: [8] <author> D. J. Filip, R. N. Goldman, </author> <title> Conversion from Bzier-rectangles to Bzier-triangles, </title> <booktitle> Computer Aided Design, </booktitle> <volume> vol. 19, </volume> <pages> pp. 25-27, </pages> <year> 1987. </year>
Reference-contexts: Only triangular surfaces and the associated subdivision schemes support this. Therefore, this work concentrates on the ray tracing of triangular free form surfaces exclusively. This is a general solution, since all rectangular free form surfaces can be converted to two triangular free form surfaces <ref> [8] </ref>. In section 2 the definition of triangular free form surfaces and their most important properties are reviewed. A new and compact description of arbitrarily complex trimming curves is presented as well.
Reference: [9] <author> J. D. Foley, A. van Dam, S. K. Feiner, J. F. Hughes, </author> <title> Computer Graphics: Principles and Practice, second edition, </title> <publisher> Addison-Wesley, </publisher> <year> 1990. </year>
Reference-contexts: For polygons a ray is traced from the query point in direction of the positive x-axis to infinity and the number of intersections with the polygon edges are counted. If the number is odd the point is considered inside <ref> [9] </ref>. For free form curves edge segments the ray-curve intersection test is performed by the two-dimensional equivalent of the free form surface ray casting procedure described by [2]. In two dimensions the method is very similar to strip trees [1].
Reference: [10] <author> A. Fournier, J. Buchanan. </author> <title> Chebyshev Polynomials for Boxing and Intersections of Parametric Curves and Surfaces, </title> <booktitle> Computer Graphics Forum 13(3) (Proceedings EUROGRAPHICS 94), </booktitle> <pages> pp. 127-142, </pages> <month> September </month> <year> 1994. </year>
Reference-contexts: Additionally bounding volumes are tighter. This improves the efficiency during the search for potentially intersecting surface regions as large parts of the tree can be pruned quickly. Examples for previously used bounding volumes include axes-parallel bounding boxes [20], Chebyshev boxing <ref> [10] </ref>, oriented slabs [22], and parallelepipeds [2]. The last method also employs an approximation to each surface part to obtain an accurate starting point for the Newton iteration, thereby ensuring rapid convergence with relatively small tree depths. Campagna [4] experimented also with combinations of enclosing volumes to optimize the performance.
Reference: [11] <author> R. N. Goldman, </author> <title> Subdivision Algorithms for Bzier Triangles, </title> <booktitle> Computer Aided Design, </booktitle> <volume> vol. 15, </volume> <pages> pp. 159-166, </pages> <year> 1983. </year>
Reference-contexts: Applying the de Casteljau algorithm recursively to the resulting subsurfaces leads to long thin triangles, see Fig. 3 (a). Such triangles often cause numerical problems, which makes this subdivision algorithm impractical in this context. A more general subdivision algorithm was presented by Goldman <ref> [11] </ref>. It is based on the following idea.
Reference: [12] <author> S. Gottschalk, M. C. Lin, D. Manocha, OBBTree: </author> <title> A Hierarchical Structure for Rapid Interference Detection, </title> <booktitle> Computer Graphics (Proceedings SIGGRAPH 96), </booktitle> <pages> pp. 171-180, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: Kajiya [13] used triangular prisms to optimize the ray tracing of fractals. Additionally recent work for collision detection shows that orientable solids result in more efficient bounding volume hierarchies compared to axis-aligned solids <ref> [12] </ref>. Personal use of this material is permitted.
Reference: [13] <author> B. Hamann, P. -Y. Tsai, </author> <title> A Tessellation Algorithm for the Representation of Trimmed NURBS Surfaces with Arbitrary Trimming Curves, </title> <booktitle> Computer-Aided Design, </booktitle> <volume> vol. 28, </volume> <pages> pp. 461-472, </pages> <year> 1996. </year>
Reference-contexts: If the point is outside of the trimming curve no hit is reported and the time spent computing the intersection has been wasted. A different approach is to split all trimmed surfaces into multiple non-trimmed subsurfaces <ref> [13] </ref>. But for complex trimming curves the method may create very many subsurfaces. Part of the research was done at GUP, Johannes Kepler Universitt Linz/Austria. Personal use of this material is permitted. <p> For the leaves crossed by the trimming curve an inside test is performed to determine if the intersection point is valid. 3.1. Construction of the Bounding Volume Tree In earlier works parallelepipeds were used to construct tight bounding volumes for quadrilateral free form surfaces [2]. Kajiya <ref> [13] </ref> used triangular prisms to optimize the ray tracing of fractals. Additionally recent work for collision detection shows that orientable solids result in more efficient bounding volume hierarchies compared to axis-aligned solids [12]. Personal use of this material is permitted.
Reference: [14] <author> J. T. Kajiya, </author> <title> New Techniques for Ray Tracing Procedurally Defined Objects, </title> <booktitle> Computer Graphics 17(3) (Proceedings SIGGRAPH 83), </booktitle> <pages> pp. 91-102, </pages> <month> July </month> <year> 1983. </year>
Reference: [15] <author> S. Krishnan, D. Manocha, </author> <title> An Efficient Surface Intersection Algorithm based on Lower Dimensional Formulation, </title> <journal> ACM Trans. On Computer Graphics, </journal> <volume> 16(1), </volume> <pages> pp. 74-106, </pages> <year> 1997. </year>
Reference-contexts: The resulting three-dimensional intersection curve is of high degree in general. One alternative to find the two-dimensional trimming curves in the parameter domains of the two surfaces is a technique called inversion. A better possibility is to compute the two-dimensional trimming curves directly <ref> [15] </ref>. Implementations of both approaches represent the resulting trimming curve as a piecewise linear or cubic curve. Furthermore, most solid modeling systems allow the combination of objects with CSG operators. A CSG combination of multiple objects necessitates a corresponding combination of trimmed regions on the surfaces.
Reference: [16] <author> T. Nishita, T. W. Sederberg, M. Kakimoto, </author> <title> Ray Tracing Trimmed Rational Surface Patches, </title> <booktitle> Computer Graphics (Proceedings SIGGRAPH 90), </booktitle> <volume> vol. 24, </volume> <pages> pp. 337-345, </pages> <month> August </month> <year> 1990. </year>
Reference-contexts: To obtain the intersection point two main strategies have been proposed: interval methods and hierarchical bounding structures followed by Newton iteration. The first class progressively narrows the parameter interval of the intersection point and includes algorithms based on interval arithmetic [21] and more recently Bzier clipping <ref> [16] </ref>. The advantage of Bzier clipping is its guaranteed convergence. The algorithm can take trimming curves into account as well. A major disadvantage is the cost of the clipping operation, which grows with the cube of the degree of the surface.
Reference: [17] <author> K. Qin, M. Gong, Y. Guan, W. Wang, </author> <title> A New Method for Speeding Up Ray Tracing NURBS Surfaces, </title> <journal> Computers & Graphics 21(5) pp. </journal> <pages> 577-586, </pages> <year> 1997. </year>
Reference-contexts: This will reduce the memory usage even further and is needed for models with a large number of free form surfaces. Also the extension of the presented techniques to quadrilateral free form surfaces is considered. Evaluation of a new iteration technique <ref> [17] </ref> is also planned. Acknowledgements Thanks to J. Bramsteidl for implementing parts of the software and to W. Barth, J. Volkert, D. Manocha, T. Whitted, T. Hudson, and G. Meenakshi for helpful comments on previous versions of this manuscript. Many thanks to the anonymous reviewers for their constructive suggestions.
Reference: [18] <author> S. M. Rubin, T. Whitted, </author> <title> A 3-Dimensional Representation for Fast Rendering of Complex Scenes, </title> <booktitle> Computer Graphics 14(3) (Proceedings SIGGRAPH 80), </booktitle> <pages> pp. 110-116, </pages> <month> July </month> <year> 1980. </year>
Reference-contexts: Note that in this case no inside test can be performed at runtime, therefore a finer subdivision will be necessary in general. Future work includes methods to compute the subdivision of the surface on demand, e.g. as in <ref> [18] </ref>. This will reduce the memory usage even further and is needed for models with a large number of free form surfaces. Also the extension of the presented techniques to quadrilateral free form surfaces is considered. Evaluation of a new iteration technique [17] is also planned. Acknowledgements Thanks to J.
Reference: [19] <author> W. Strzlinger, R. F. Tobler, M. Schindler, </author> <title> FLIRT - Faster than Light Ray Tracer, </title> <type> Technical Report, </type> <institution> Institut fr Computergraphik, Technical University of Vienna, </institution> <month> Aug. </month> <year> 1993. </year>
Reference-contexts: Therefore the inside test is performed only for leaves whose parameter region is near a trimming curve. 4. Implementation and Results The new rendering method for trimmed triangular free form surfaces has been implemented in the framework of the FLIRT ray tracer <ref> [19] </ref> in ANSI-C. All timings shown are in seconds for 512 by 512 images on a 250Mhz R4400 SGI-Onyx. One ray was shot through the midpoint of each pixel. The grazing angle criterion from section 3.3 was set to 78.5 degrees as in [2]. 4.1.
Reference: [20] <author> M. Sweeney, R. Bartels, </author> <title> Ray Tracing FreeForm B-Spline Surfaces, </title> <journal> IEEE Computer Graphics & Applications 6(2), </journal> <pages> pp. 41-49, </pages> <year> 1986. </year>
Reference-contexts: Additionally bounding volumes are tighter. This improves the efficiency during the search for potentially intersecting surface regions as large parts of the tree can be pruned quickly. Examples for previously used bounding volumes include axes-parallel bounding boxes <ref> [20] </ref>, Chebyshev boxing [10], oriented slabs [22], and parallelepipeds [2]. The last method also employs an approximation to each surface part to obtain an accurate starting point for the Newton iteration, thereby ensuring rapid convergence with relatively small tree depths.
Reference: [21] <author> D. Toth, </author> <title> On Ray Tracing Parametric Surfaces, </title> <booktitle> Computer Graphics (Proceedings SIGGRAPH 85), </booktitle> <volume> vol. 19, </volume> <pages> pp. 171-179, </pages> <month> July </month> <year> 1985. </year>
Reference-contexts: Therefore an iterative approach is used. To obtain the intersection point two main strategies have been proposed: interval methods and hierarchical bounding structures followed by Newton iteration. The first class progressively narrows the parameter interval of the intersection point and includes algorithms based on interval arithmetic <ref> [21] </ref> and more recently Bzier clipping [16]. The advantage of Bzier clipping is its guaranteed convergence. The algorithm can take trimming curves into account as well. A major disadvantage is the cost of the clipping operation, which grows with the cube of the degree of the surface.
Reference: [22] <author> J. Yen, S. Spach, M. Smith, R. Pulleyblank, </author> <title> Parallel Boxing in B-Spline Intersection, </title> <journal> IEEE Computer Graphics & Applications 11(1), </journal> <pages> pp. 72-79, </pages> <month> Jan. </month> <year> 1991. </year>
Reference-contexts: Additionally bounding volumes are tighter. This improves the efficiency during the search for potentially intersecting surface regions as large parts of the tree can be pruned quickly. Examples for previously used bounding volumes include axes-parallel bounding boxes [20], Chebyshev boxing [10], oriented slabs <ref> [22] </ref>, and parallelepipeds [2]. The last method also employs an approximation to each surface part to obtain an accurate starting point for the Newton iteration, thereby ensuring rapid convergence with relatively small tree depths. Campagna [4] experimented also with combinations of enclosing volumes to optimize the performance.
References-found: 22

