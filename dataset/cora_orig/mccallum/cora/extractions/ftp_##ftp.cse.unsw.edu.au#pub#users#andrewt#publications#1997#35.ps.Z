URL: ftp://ftp.cse.unsw.edu.au/pub/users/andrewt/publications/1997/35.ps.Z
Refering-URL: http://www.cse.unsw.edu.au/school/publications/1997/SCSE_publications.html
Root-URL: 
Title: Action Localness, Genericity and Invariants in STRIPS  
Author: Norman Y. Foo and Abhaya Nayak and Maurice Pagnucco Pavlos Peppas Yan Zhang 
Address: NSW 2052 Australia  NSW 2109, Australia  Sydney, Nepean Kingswood, NSW 2747, Australia  
Affiliation: Knowledge Systems Group Department of Artificial Intelligence School of Computer Science and Engineering The University of New South Wales  Knowledge Systems Group School of MPCE Macquarie University  Knowledge Systems Group Department of Computing University of Western  
Abstract: The STRIPS specification for actions, despite criticisms of its shortcomings, remains popular in implementations because of its simplicity and intuitive appeal. Lifschitz showed in his logical account of STRIPS that states can safely be represented as sets of ground atom, and this is our starting point. Our aim is to provide logical foundations for design heuristics and procedural implementations of STRIPS. In particular, we formalize the notions of `localness' in pre- and post-conditions of actions. This justifies and explicates the intuitions that underlie the diagrammatic reasoning typically used to design such conditions. A formal account is also given for `generic' actions that have parameters. We conclude with a method for extracting candidate action invariants that distinguishes between two kinds of inertia implied by the action specifica tions.
Abstract-found: 1
Intro-found: 1
Reference: [ Barwise 95 ] <author> Barwise, J. and Etchemendy, J., </author> <title> Heterogeneous logic, in Diagrammatic Reasoning: Cognitive and Computational Perspective, </title> <editor> eds. J. I. Glasgow, et al. </editor> <publisher> MIT Press, </publisher> <year> 1995, </year> <pages> 209-232. </pages>
Reference-contexts: Rather, we wish to examine a well-known system that has wide practical acceptance to see if its design heuristics, particularly those with a diagrammatic flavor such as ex-posited by Barwise <ref> [ Barwise 95 ] </ref> , can be given formal justifications. 2.1 Basic Definitions and Constructions Since ground atoms are the basis of state descriptions, in order to evaluate formulas with respect to states we need to know when an atom does not hold. <p> The first two formalizations have potential uses in diagrammatic reasoning, while the third suggests opportunities for identifying the psychology of action specifications with appropriate model classes for which inductive proofs of candidate invariants can be avoided. There is an increasing interest in diagrammatic reasoning <ref> [ Barwise 95 ] </ref> in AI and we shall be extending the window semantics in this direction. We are currently pursuing the identification of dynamic system classes in the spirit of Sandewall [ Sandewall 94 ] to see how invariants can be extracted completely from specifications without induction.
Reference: [ Chang and Keisler 73 ] <author> Chang, C.C., and Keisler, H.J., </author> <title> Model Theory, </title> <publisher> North Holland, </publisher> <year> 1973. </year>
Reference-contexts: Formally, complete states are structures in model theory and logic, so we shall use the terms state and structure interchangeably. The next three definitions are paraphrased from <ref> [ Enderton 72; Chang and Keisler 73 ] </ref> . (As it gets tedious to make distinctions between predicate (constant) symbols and the relations (domain elements) they denote, we will not observe these distinctions later.) Definition 2 Suppose L is a first-order language with equality. <p> The dashed part of figure 1 shows a substructure of T 2 with the theory T 1 axiomatizable by fon (a; b), on (b; table), on (e; table)g. Already, if one accepts that the dashed part is a sub-structure of the entire structure, from well-known preservation theorems <ref> [ Chang and Keisler 73 ] </ref> we can conclude the following: the universal sentence 8x:on (x; a) holds in T 2 , so by the fact above, it also holds in T 1 ; the (trivially) existential sentence on (a; b) holds in T 1 , so it also holds in <p> 6j= ff iff (by the inductive hypothesis) window ([a 1 ; : : : ; a n ]; U ) 6j= ff iff window ([a 1 ; : : : ; a n ]; U ) j= :ff. 2 In other words, the theory of U is a conservative extension <ref> [ Chang and Keisler 73; Enderton 72 ] </ref> of that of window ([a 1 ; : : : ; a n ]; U ) for fa 1 ; : : : ; a n g-formulas. <p> Assertion (i) is trivial. Assertion (ii) follows from the Inertia Assumption and reasoning similar to the Pre-condition Conservative Extension theorem. Together, the two theorems confirm that the window construction captures the intuitive notion of `localness'. The `genericity' of actions is captured by the following observation (see <ref> [ Enderton 72; Chang and Keisler 73 ] </ref> for the definition of isomorphism between structures) and the fact that isomorphic structures are elementarily equivalent (see definition 4).
Reference: [ Enderton 72 ] <author> Enderton, H., </author> <title> A Mathematical Introduction to Logic, </title> <publisher> Academic Press, </publisher> <year> 1972. </year>
Reference-contexts: Formally, complete states are structures in model theory and logic, so we shall use the terms state and structure interchangeably. The next three definitions are paraphrased from <ref> [ Enderton 72; Chang and Keisler 73 ] </ref> . (As it gets tedious to make distinctions between predicate (constant) symbols and the relations (domain elements) they denote, we will not observe these distinctions later.) Definition 2 Suppose L is a first-order language with equality. <p> 6j= ff iff (by the inductive hypothesis) window ([a 1 ; : : : ; a n ]; U ) 6j= ff iff window ([a 1 ; : : : ; a n ]; U ) j= :ff. 2 In other words, the theory of U is a conservative extension <ref> [ Chang and Keisler 73; Enderton 72 ] </ref> of that of window ([a 1 ; : : : ; a n ]; U ) for fa 1 ; : : : ; a n g-formulas. <p> Assertion (i) is trivial. Assertion (ii) follows from the Inertia Assumption and reasoning similar to the Pre-condition Conservative Extension theorem. Together, the two theorems confirm that the window construction captures the intuitive notion of `localness'. The `genericity' of actions is captured by the following observation (see <ref> [ Enderton 72; Chang and Keisler 73 ] </ref> for the definition of isomorphism between structures) and the fact that isomorphic structures are elementarily equivalent (see definition 4).
Reference: [ Fikes and Nilsson 71 ] <author> Fikes, R.E. and Nilsson, N.J., </author> <title> STRIPS: A New Approach to the Application of Theorem Proving to Problem Solving, </title> <journal> Artificial Intelligence, </journal> <volume> 2, </volume> <year> 1971, </year> <pages> 189-208. </pages>
Reference-contexts: 1 Introduction Among the earliest proposals for specifying actions is STRIPS, due to Fikes and Nilsson <ref> [ Fikes and Nilsson 71 ] </ref> . STRIPS has the great merit of simplicity and ease of implementation.
Reference: [ Lin 95 ] <author> Lin, F., </author> <title> Embracing Causality in Specifying the Indirect Effects of Actions, </title> <booktitle> Proceedings of the 14th International Joint Conference in Artificial Intelligence, IJCAI-95, </booktitle> <year> 1995. </year>
Reference-contexts: If states are theories, then actions so modelled are theory change operators. Such operators have been studied extensively in the logics of action from many perspectives (an example is <ref> [ Lin 95 ] </ref> ), but it is not the purpose of this paper to introduce yet another.
Reference: [ Lifschitz 86 ] <author> Lifschitz, V., </author> <title> On the Semantics of STRIPS, in Reasoning about Actions and Plans, </title> <editor> ed. M. Georgeff and A. Lansky, </editor> <publisher> Morgan Kaufmann, </publisher> <year> 1986, </year> <pages> 1-9. </pages>
Reference-contexts: Genericity is the notion that each window to which an action can apply looks like any other similar window except for a change in parameters. Another characteristic, noted by Lifschitz <ref> [ Lifschitz 86 ] </ref> is that the constraints like the impossible rule above are often maintained implicitly by clever design of the add- and delete lists. In this paper we address these and related characteristics to provide a formal explication for why they work. <p> Lifs-chitz <ref> [ Lifschitz 86 ] </ref> proposes the very reasonable one that, for atomic add and delete lists, amounts to the: Assumption 3 (Inertia Assumption) Let action instance A transform state (structure) U to state (structure) U 1 . <p> If the Inertia Assumption is understood to dominate pre-conditions to the extent that no atom that persists can be in the add-list (this is not required by the semantics of Lifschitz <ref> [ Lifschitz 86 ] </ref> ), and no atom that does not hold in U and U 1 is in the delete-list, then we have: Assumption 4 (Strong Inertia Assumption) This is as in the Inertia Assumption, except that in (i) we add the qualifier, and only for atoms P not in
Reference: [ Reiter 78 ] <author> Reiter, R., </author> <title> On Closed World Data Bases, in Logic and Database, </title> <editor> ed., Gallaire, H. and Minker, J., </editor> <publisher> Plenum Press, </publisher> <year> 1978, </year> <pages> 55-76. </pages>
Reference-contexts: The simplest assumption to achieve this is to use the version of the closed world assumption <ref> [ Reiter 78 ] </ref> in the absence of constraints. Definition 1 If is a set of ground atoms of L, then the closed world assumption applied to is CWA () = [ f:LjL 62 and L is a ground atomg.
Reference: [ Reiter 91 ] <author> Reiter, R., </author> <title> The Frame Problem in the Situation Calculus: A Simple Solution (Sometimes)and a Completeness Result for Goal Regression, </title> <booktitle> in Artificial Intelligence and Mathematical Theory of Computation, </booktitle> <editor> ed. V. Lifschitz, </editor> <publisher> Academic Press, </publisher> <year> 1991, </year> <pages> 359-379. </pages>
Reference-contexts: For strong inertia then, nothing is in the add- or delete-list unless it has changed signs in the course of the action. Strong inertia was implicitly used by Reiter in <ref> [ Reiter 91 ] </ref> in his formulas fl + P which combined explanation closure (due to Schubert) and result closure (due to Pednault) in his solution to the frame problem. It is tempting to think that this should be the natural default for designers of specifications. <p> This means that V W candidate invariant for the action A if its constants are generalized. This generalization is possible because of observation 1 on isomorphisms of windows. Our proposal is in the spirit of Explanation Closure attributed to Schubert <ref> [ Reiter 91 ] </ref> . Indeed the assertion C [ j= : fl has the structure of an abduction of the negative literals in terms of the positive ones with respect to C. 4.2 Generating Candidate Invariants Let us now apply the above proposal to a few examples.
Reference: [ Sandewall 94 ] <author> Sandewall, E., </author> <title> Features and Fluents; the Representation of Knowledge about Dynamical Systems, Vol. I, </title> <publisher> Oxford University Press, </publisher> <year> 1994. </year>
Reference-contexts: There is an increasing interest in diagrammatic reasoning [ Barwise 95 ] in AI and we shall be extending the window semantics in this direction. We are currently pursuing the identification of dynamic system classes in the spirit of Sandewall <ref> [ Sandewall 94 ] </ref> to see how invariants can be extracted completely from specifications without induction. There appear to be at least three notions of completeness for invariants that can be formalised.
Reference: [ Zhang and Foo 96 ] <author> Zhang, Y. and Foo, N., </author> <title> Deriving Invariants and Constraints from Action Theories, </title> <journal> Fun-damenta Informaticae, </journal> <volume> 30 </volume> <pages> 23-41, </pages> <year> 1996. </year>
Reference-contexts: This is actually a simplification of the original definition which involves state constraints, but here none are assumed to be (explicitly) available. A potential problem with this assumption is inconsistency when the description is indefinite <ref> [ Zhang and Foo 96 ] </ref> , e.g. there is a constraint of the form p _ q where p and q are atoms, and neither of them appear in the state description. <p> indefinite <ref> [ Zhang and Foo 96 ] </ref> , e.g. there is a constraint of the form p _ q where p and q are atoms, and neither of them appear in the state description. The indefiniteness of actions in terms of their pre- or post-conditions is known to be problematic [ Zhang and Foo 96 ] . For pre-conditions it is possible to avoid it by refining the action ontology to split the indefinite action into definite ones, but for post-conditions no such easy way is known. <p> Observation 1 (Isomorphism of Windows ) Any two instances of an applicable action has isomorphic pre-condition, and correspondingly isomorphic post-condition, windows. 4 Action Invariants Zhang and Foo <ref> [ Zhang and Foo 96 ] </ref> have used persistence to derive action invariants from definite pre- and post-conditions. Since the Inertia Assumption is accepted in our formalization, one should expect that a similar derivation is possible here. <p> To confirm that this is actually an invariant in our formalization an induction is necessary, but in <ref> [ Zhang and Foo 96 ] </ref> a persistence logic has been used to verify it. One final remark: the clear predicate used in some imple mentations has not been used in the blocks-world example here as it is eliminable.
References-found: 10

