URL: http://www.cs.berkeley.edu/~kubitron/compread/embra96.ps
Refering-URL: http://www.cs.berkeley.edu/~kubitron/compread/index.html
Root-URL: http://www.cs.berkeley.edu
Title: [Bedicheck90] Robert Bedichek. Some Efficient Architecture Simulation Techniques, Winter Fast and Accurate Multicomputer Simulation, Hive:
Author: Robert C. Bedicheck. Talisman: John Chapin, Mendel Rosenblum, Scott Devine, Tirthankar Lahiri, Dan Teodosiu, and Anoop Gupta. [Cmelik] Robert F. Cmelik and David Keppel. Shade: Dawson R. Engler, M. Frans Kaashoek, and James OToole Jr., Exokernel: . [Engler] Dawson R. Engler, Wilson C. Hsieh, and M. Frans Kaahsoek. [Hastings] R. Hastings, B. Joyce. D. Lenoski, J. Laudon, K. Gharachorloo, W. Weber, A. Gupta, J. Hennessy, M. Horowitz, and M. Lam. Peter Magnusson and Bengt Werner. John Ousterhout. Alvin R. Lebeck, David A Wood. [Reinhardt] Steven K. Reinhardt, Mark D. Hill, James R. LarPrototypingus, Alvin R. Lebeck, James C. Lewis, and David A. Wood. [Rosenbluma] Mendel Rosenblum, Edouard Bugnion, Stephen A. Herrod, Emmett Witchel, and Anoop Gupta. [Rosenblumb] Mendel Rosenblum, Steven A. Herrod, Emmett Witchel, and Anoop Gupta. [Srivastava] Amitabh Srivastava and Alan Eustace. Richard Uhlig, David Nagle, Trevor Mudge and Stuart Sechrest. San Jose, . [Wahbe] R. Wahbe, S. Lucco, T. Anderson, and S. Graham. . [Woo] Steven Cameron Woo, Moriyoshi Ohara, Evan Torrie, Jaswinder Pal Singh, and Anoop Gupta. 
Affiliation: Simulation of Computer and Telecommunication Systems, La  Santa  Santa  
Address: Ottawa, Ontario, Canada,  Jolla, California,  Ottawa, Ontario, Canada, 1995.  Clara, CA, 1993.  Margherita Ligure, Italy,  
Date: Jan, 1990.  May, 1995.  March 1992.  January 1993.  April 1995.  June 1995.  
Note: 8 Conclusion 9 Acknowledgments Funding for this research was provided by NSF grant CCR-9257104-03 and by ARPA grant DABT63-94-C-0054. 10 References  1990 Usenix Technical Conference,  [Bedicheck95]  In SIGMETRICS,  [Chapin95]  SIGMETRICS, Nashville, TN, 1994. [Dixit92] Kaivalya M. Dixit. New CPU Benchmark Suites from SPEC, 37th Annual IEEE International Computer Conference COMPCON Spring 92, San Francisco, CA, Feb. 1992. [Engler95]  1992 USENIX Conference, Berkeley, CA, 1991, pages 125-36. [Lenoski92]  The Stanford DASH Multiprocessor. IEEE Computer 25(3):63-79,  [Magnusson95]  Symposium, Phoenix,  Ph.D. Thesis, Columbia University 1992. [Ousterhout90]  Summer 1990 USENIX Conference, pp. 247-256, June 1990. [Lebeck95]  SIGMETRICS,  SIGMETRICS,  SIGPLAN Notices June 1994, vol.29, no.6, pages 196-205. [Uhlig94]  Proceedings of the 22nd ISCA,  
Abstract: Page 12 back when it is needed. Additionally, dynamic production of these code translations are essential to an OS simulation environment where new code can be generated by compilers, or read in from disk or from the network. Static instrumentation becomes burdensome when studying the behavior of large, complex systems. We currently boot our simulation system from a replica of the distribution disk of a system containing many hundreds of megabytes of binaries. Finally, static instrumentation schemes have trouble with events that are common in full system workloads, such as dynamically-linked libraries and self-modifying or self-generated code (like Embra itself). We have presented the design and measured the performance and accuracy of Embra, a uniprocessor and cache-coherent multiprocessor machine simulator. From our experience with building, performance tuning, and using Embra over the last year, we have concluded the following: A high speed machine simulator, such as Embra, is an invaluable tool for developing and studying complex systems, such as general-purpose machines and modern operating systems. It has enabled us to perform studies on these systems that we would not have attempted without Embras speed. Dynamic binary translation is a useful technique for building a machine simulator that is both fast and accurate. Embra can run arbitrary workloads (including large, complex systems such as a commercial relational database system running on Unix) faster than any reported machine simulator. Embras uniprocessor cache simulation statistics match a more traditionally implemented reference simulator to within 1%. Many statistics for the more complicated case of multiprocessors also match within about 1%. Dynamic binary translation allows Embra to give the user control over the speed versus modeling-detail trade-offa trade-off traditionally built into the simulator. Rather than having only one speed and a fixed level of simulation detail, Embra provides the exibility, through customized translations, to change this trade-off even in the middle of a simulation run. Sparse data structures can be used in dynamically generated code to implement fast simulation of MMU and cache checks. This trade-off between the code size and virtual address space size is a performance win for current machines but it does put pressure on the memory system and the TLB. The larger caches of future machines appear to help the memory system signifi-gantly. The TLB may continue to be a problem. Embra started as a project to explore the use of dynamic binary translation for fast machine simulation. We found it to be well suited for this task. We believe that dynamic code generation has a bright future in high performance computing. Primary kudos to Edouard Bugnion whose keen eye for data and general volubility proved instrumental to this papers creation. Greg Ganger, John Chapin, Matt Frank, and Peter Magnusson all made detailed and interesting comments on various drafts. Thanks to big Ben Verghese in the network department, Steve Herrod, for his Las Vegas legacy, Dan Teodosiu, Scott Devine, Roy Goldman, Robert Bosch, Debby Wallach, Eddie Kohler, Helga Beck, and Dan Yaverbaum. Special thanks to Frans Kaashoek and the MIT Lab for Computer Science for supporting Emmett while he finished this work. 
Abstract-found: 1
Intro-found: 1
Reference: [Bedicheck90] <author> Robert Bedichek. </author> <title> Some Efficient Architecture Simulation Techniques, </title> <booktitle> Winter 1990 Usenix Technical Conference, </booktitle> <month> Jan, </month> <year> 1990. </year>
Reference: [Bedicheck95] <author> Robert C. Bedicheck. Talisman: </author> <title> Fast and Accurate Multicomputer Simulation, </title> <booktitle> In SIGMETRICS, </booktitle> <address> Ottawa, Ontario, Canada, </address> <month> May, </month> <year> 1995. </year>
Reference: [Chapin95] <author> John Chapin, Mendel Rosenblum, Scott Devine, Tirthankar Lahiri, Dan Teodosiu, and Anoop Gupta. Hive: </author> <title> Fault Containment for Shared-Memory Multiprocessors. </title> <type> SOSP, </type> <institution> Colorado, </institution> <year> 1995. </year>
Reference: [Cmelik94] <author> Robert F. Cmelik and David Keppel. Shade: </author> <title> A Fast Instruction Set Simulator for Execution Profiling, </title> <booktitle> SIGMETRICS, </booktitle> <address> Nashville, TN, </address> <year> 1994. </year>
Reference: [Dixit92] <author> Kaivalya M. Dixit. </author> <title> New CPU Benchmark Suites from SPEC, </title> <booktitle> 37th Annual IEEE International Computer Conference COMPCON Spring 92, </booktitle> <address> San Francisco, CA, </address> <month> Feb. </month> <year> 1992. </year>
Reference: [Engler95] <author> Dawson R. Engler, M. Frans Kaashoek, and James OToole Jr., Exokernel: </author> <title> An Operating System Architecture for Application-Level Resource Management, </title> <type> SOSP, </type> <institution> Colorado, </institution> <year> 1995. </year>
Reference: [Engler96] <author> Dawson R. Engler, Wilson C. Hsieh, and M. Frans Kaahsoek. </author> <title> `C: A Language for High-Level, Efficient, and Machine-independent Dynamic Code Generation. </title> <booktitle> POPL, </booktitle> <address> St. Petersburg, FL, </address> <year> 1996. </year>
Reference: [Hastings91] <author> R. Hastings, B. Joyce. Purify: </author> <title> fast detection of memory leaks and access errors, </title> <booktitle> Proceedings of the Winter 1992 USENIX Conference, </booktitle> <address> Berkeley, CA, </address> <year> 1991, </year> <pages> pages 125-36. </pages>
Reference: [Lenoski92] <author> D. Lenoski, J. Laudon, K. Gharachorloo, W. Weber, A. Gupta, J. Hennessy, M. Horowitz, and M. Lam. </author> <title> The Stanford DASH Multiprocessor. </title> <booktitle> IEEE Computer 25(3) </booktitle> <pages> 63-79, </pages> <month> March </month> <year> 1992. </year>
Reference: [Magnusson93] <author> Peter Magnusson. </author> <title> A Design For Efficient Simulation of a Multiprocessor, </title> <booktitle> MASCOTS `93 -Proceedings of the 1993 Western Simulation Multiconference on International Workshop on Modeling, Analysis, </booktitle> <institution> and Simulation of Computer and Telecommunication Systems, La Jolla, California, </institution> <month> January </month> <year> 1993. </year>
Reference: [Magnusson95] <author> Peter Magnusson and Bengt Werner. </author> <title> Efficient Memory Simulation in SimICS, </title> <booktitle> 28th Annual Simulation Symposium, Phoenix, </booktitle> <month> April </month> <year> 1995. </year>
Reference: [Massalin92] <author> Henry Massalin. </author> <title> Synthesis: An Efficeint Implementation of Fundamental Operating System Services, </title> <type> Ph.D. Thesis, </type> <institution> Columbia University 1992. </institution>
Reference: [Ousterhout90] <author> John Ousterhout. </author> <title> Why Arent Operating Systems Getting Faster as Fast as Hardware?, </title> <booktitle> In Proceedings of the Summer 1990 USENIX Conference, </booktitle> <pages> pp. 247-256, </pages> <month> June </month> <year> 1990. </year>
Reference: [Lebeck95] <author> Alvin R. Lebeck, David A Wood. </author> <title> Active Memory: A New Abstraction for Memory-System Simulation, </title> <booktitle> SIGMETRICS, </booktitle> <address> Ottawa, Ontario, Canada, </address> <year> 1995. </year>
Reference: [Reinhardt93] <author> Steven K. Reinhardt, Mark D. Hill, James R. LarPrototypingus, Alvin R. Lebeck, James C. Lewis, and David A. Wood. </author> <title> The Wisconsin Wind Tunnel: Virtual Prototyping of Parallel Computers, </title> <booktitle> SIGMETRICS, </booktitle> <address> Santa Clara, CA, </address> <year> 1993. </year>
Reference: [Rosenblum95a] <author> Mendel Rosenblum, Edouard Bugnion, Stephen A. Herrod, Emmett Witchel, and Anoop Gupta. </author> <title> The Impact of Architectural Trends on Operating System Performance. </title> <type> SOSP, </type> <institution> Colorado, </institution> <year> 1995. </year>
Reference: [Rosenblum95b] <author> Mendel Rosenblum, Steven A. Herrod, Emmett Witchel, and Anoop Gupta. </author> <title> Complete Computer System Simulation: The SimOS Approach. </title> <booktitle> IEEE Parallel and Distributed Technology, </booktitle> <month> Fall </month> <year> 1995. </year>
Reference: [Srivastava94] <author> Amitabh Srivastava and Alan Eustace. </author> <title> ATOM: a system for building customized program analysis tools, </title> <journal> SIGPLAN Notices , June 1994, vol.29, </journal> <volume> no.6, </volume> <pages> pages 196-205. </pages>
Reference: [Uhlig94] <author> Richard Uhlig, David Nagle, Trevor Mudge and Stuart Sechrest. </author> <title> Trap-driven Simulation with Tapeworm II, </title> <booktitle> ASPLOS, </booktitle> <address> San Jose, </address> <year> 1994. </year>
Reference: [Wahbe93] <author> R. Wahbe, S. Lucco, T. Anderson, and S. Graham. </author> <title> Efficient Software-Based Fault Isolation. </title> <booktitle> SOSP, </booktitle> <month> December </month> <year> 1993. </year>

References-found: 20

