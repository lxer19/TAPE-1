URL: ftp://ftp.icsi.berkeley.edu/pub/techreports/1998/tr-98-022.ps.gz
Refering-URL: http://www.icsi.berkeley.edu/techreports/1998.html
Root-URL: http://www.icsi.berkeley.edu
Title: Optimal Dynamic Embeddings of Complete Binary Trees into Hypercubes  
Phone: (510) 643-9153 FAX (510) 643-7684  
Author: Volker Heun Ernst W. Mayr 
Date: August 1998  
Address: I 1947 Center St. Suite 600 Berkeley, California 94704-1198  D-80290 Munchen, Germany  
Affiliation: INTERNATIONAL COMPUTER SCIENCE INSTITUTE  Institut fur Informatik der TU Munchen,  
Pubnum: TR-98-022  
Abstract: The double-rooted complete binary tree is a complete binary tree where the root is replaced by an edge. It is folklore that the double-rooted complete binary tree is a spanning tree of the hypercube of the same size. Unfortunately, the usual construction of an embedding of a double-rooted complete binary tree into the hypercube does not provide any hint how this embedding can be extended if each leaf spawns two new leaves. In this paper, we present simple dynamic embeddings of double-rooted complete binary trees into hypercubes which do not suffer from this disadvantage. We also present edge-disjoint embeddings of large binary trees with optimal load and unit dilation. Furthermore, all these embeddings can be efficiently implemented on the hypercube itself such that the embedding of each new level of leaves can be computed in constant time. Since complete binary trees are similar to double-rooted complete binary trees, our results can be immediately transfered to complete binary trees. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Bhatt, I. Ipsen: </author> <title> How to Embed Tress in Hypercubes, </title> <type> Technical Report DCS/RR-443, </type> <institution> Dept. of Computer Science, Yale University, </institution> <year> 1985. </year>
Reference-contexts: Often complete binary trees represent the communication structure of parallel algorithms, e.g., divide-and-conquer or branch-and-bound algorithms. Embeddings of complete binary trees have been investigated by numerous researchers. Unfortunately, the complete binary tree is not a subgraph of the hypercube of nearly the same size <ref> [1, 10] </ref>. But using the fact that the double-rooted complete binary tree is a spanning tree of the hypercube of the same size, optimal embeddings of complete binary trees into hypercubes have been discovered [1, 2, 3, 5, 8, 9, 11, 12, 13]. <p> But using the fact that the double-rooted complete binary tree is a spanning tree of the hypercube of the same size, optimal embeddings of complete binary trees into hypercubes have been discovered <ref> [1, 2, 3, 5, 8, 9, 11, 12, 13] </ref>. The major drawback of these algorithms is that they are constructed as static embeddings and that they do not provide any hints how these embeddings can be extended if the tree grows by a complete level. <p> In the following, we will call this path the root path. Clearly, a double-rooted complete binary tree of height h has exactly 2 h vertices. 3 3 Previous Work Unfortunately, the complete binary tree is not a subgraph of its optimal hypercube <ref> [1, 10] </ref>. We recall that both the complete binary tree and the hypercube are bipartite graphs. Given a bipartite graph G=(A; B; E) of size n, we call G balanced if jAj; jBj2 dlog (n)e1 . <p> Theorem 2 ([5, 1, 10]) A complete binary tree cannot be embedded into its optimal hypercube with unit dilation and unit load. An optimal embedding of complete binary trees into their optimal hypercubes was first discovered by Havel and Liebl [5] and was also exhibited by Bhatt and Ipsen <ref> [1] </ref> as well as by Saad and Schultz [10]. We will give here a short proof of this well known fact using the double-rooted complete binary tree. In what follows, we will show that the double-rooted complete binary tree is a subgraph of its optimal hypercube.
Reference: [2] <author> Th. Bier, K.F. Loe: </author> <title> Embedding of Binary Trees into Hypercubes, J Parallel Distrib. </title> <institution> Comput. </institution> <month> 6 </month> <year> (1989) </year> <month> 679-691. </month>
Reference-contexts: But using the fact that the double-rooted complete binary tree is a spanning tree of the hypercube of the same size, optimal embeddings of complete binary trees into hypercubes have been discovered <ref> [1, 2, 3, 5, 8, 9, 11, 12, 13] </ref>. The major drawback of these algorithms is that they are constructed as static embeddings and that they do not provide any hints how these embeddings can be extended if the tree grows by a complete level.
Reference: [3] <author> K. Efe: </author> <title> Embedding Large Complete Binary Trees in Hypercubes with Load Balancing, </title> <journal> J. Parallel Distrib. Comput., </journal> <month> 35 </month> <year> (1996) </year> <month> 104-109. </month>
Reference-contexts: But using the fact that the double-rooted complete binary tree is a spanning tree of the hypercube of the same size, optimal embeddings of complete binary trees into hypercubes have been discovered <ref> [1, 2, 3, 5, 8, 9, 11, 12, 13] </ref>. The major drawback of these algorithms is that they are constructed as static embeddings and that they do not provide any hints how these embeddings can be extended if the tree grows by a complete level. <p> We also consider embeddings of large binary trees. Here, it is important to obtain 1 embeddings with small congestion, since occasionally it is necessary to pass messages along all tree edges. A first suboptimal approach is given in <ref> [3] </ref>, where embeddings with optimal load but non-optimal congestion has been constructed. The first optimal embedding is given in [9] with respect to load, dilation, and congestion. Nevertheless, both algorithms suffer from their static design.
Reference: [4] <author> T. Feder, </author> <title> E.W. Mayr: An Efficient Algorithm for Embedding Complete Binary Trees in the Hypercube, </title> <type> Manuscript, </type> <institution> Dept. of Computer Science, Stanford University, </institution> <year> 1987. </year>
Reference-contexts: Only in an unpublished paper, dynamic embeddings of complete binary trees into hypercubes have been investigated in <ref> [4] </ref>. In this paper, we focus on dynamic embeddings of double-rooted complete binary trees into hypercubes implying dynamic embeddings of complete binary trees into hypercubes. Our construction improves and simplifies the results in [4]. <p> Only in an unpublished paper, dynamic embeddings of complete binary trees into hypercubes have been investigated in <ref> [4] </ref>. In this paper, we focus on dynamic embeddings of double-rooted complete binary trees into hypercubes implying dynamic embeddings of complete binary trees into hypercubes. Our construction improves and simplifies the results in [4]. We assume that at each step the double-rooted complete binary tree can grow or shrink by a complete level of its leaves. Therefore, the size of the double-rooted complete binary tree will be doubled or halved.
Reference: [5] <author> I. Havel, P. Liebl: </author> <title> Embedding the Polytomic Tree into the n-Cube, </title> <journal> Casopis. Pest. Mat. </journal> <month> 98 </month> <year> (1973) </year> <month> 307-314. </month>
Reference-contexts: But using the fact that the double-rooted complete binary tree is a spanning tree of the hypercube of the same size, optimal embeddings of complete binary trees into hypercubes have been discovered <ref> [1, 2, 3, 5, 8, 9, 11, 12, 13] </ref>. The major drawback of these algorithms is that they are constructed as static embeddings and that they do not provide any hints how these embeddings can be extended if the tree grows by a complete level. <p> Theorem 2 ([5, 1, 10]) A complete binary tree cannot be embedded into its optimal hypercube with unit dilation and unit load. An optimal embedding of complete binary trees into their optimal hypercubes was first discovered by Havel and Liebl <ref> [5] </ref> and was also exhibited by Bhatt and Ipsen [1] as well as by Saad and Schultz [10]. We will give here a short proof of this well known fact using the double-rooted complete binary tree.
Reference: [6] <author> V. Heun, </author> <title> E.W. Mayr: Efficient Dynamic Embeddings of Arbitrary Binary Trees into Hypercubes, </title> <booktitle> in Proc. 3rd Int. Workshop on Parallel Algorithms for Irregularly Structured Problems, </booktitle> <editor> eds. A. Ferreira et al. </editor> <publisher> (LNCS 1117, Springer, </publisher> <year> 1996), </year> <pages> 287-298. </pages>
Reference-contexts: On the other hand, we have found a dynamic embedding of arbitrary binary trees into optimal hypercubes with unit load, constant dilation and constant congestion if migration of vertices is allowed <ref> [6] </ref>. 15
Reference: [7] <author> T. Leighton, M. Newman, A. Ranade, W. Schwabe: </author> <title> Dynamic Tree Embeddings in Butterflies and Hypercubes, </title> <journal> SIAM J. Comput. </journal> <month> 21 </month> <year> (1992) </year> <month> 639-654. </month>
Reference-contexts: Moreover, it might be impossible to construct dynamic embeddings deterministically with high quality. For arbitrary binary trees, it has been proven that dynamic embed-dings cannot be constructed with high quality if neither randomization nor migration, i.e., remapping of tree vertices, is allowed <ref> [7] </ref>. Often complete binary trees represent the communication structure of parallel algorithms, e.g., divide-and-conquer or branch-and-bound algorithms. Embeddings of complete binary trees have been investigated by numerous researchers. Unfortunately, the complete binary tree is not a subgraph of the hypercube of nearly the same size [1, 10]. <p> Our embeddings improve the known embeddings of complete binary trees into hypercubes. It remains to be investigated whether arbitrary binary trees can be embedded dynamically into hypercubes. As mentioned earlier, we can expect dynamic embeddings with high quality only if we allow randomization or migration <ref> [7] </ref>. Allowing randomization, a dynamic embedding of arbitrary binary trees into their optimal hypercubes with dilation 8, and with high probability constant load and constant congestion are constructed [7]. <p> As mentioned earlier, we can expect dynamic embeddings with high quality only if we allow randomization or migration <ref> [7] </ref>. Allowing randomization, a dynamic embedding of arbitrary binary trees into their optimal hypercubes with dilation 8, and with high probability constant load and constant congestion are constructed [7]. On the other hand, we have found a dynamic embedding of arbitrary binary trees into optimal hypercubes with unit load, constant dilation and constant congestion if migration of vertices is allowed [6]. 15
Reference: [8] <author> E. Leiss, H. Reddy: </author> <title> Embedding Complete Binary Trees into Hypercubes, </title> <journal> Inf. Process. Lett. </journal> <month> 38 </month> <year> (1991) </year> <month> 197-199. </month>
Reference-contexts: But using the fact that the double-rooted complete binary tree is a spanning tree of the hypercube of the same size, optimal embeddings of complete binary trees into hypercubes have been discovered <ref> [1, 2, 3, 5, 8, 9, 11, 12, 13] </ref>. The major drawback of these algorithms is that they are constructed as static embeddings and that they do not provide any hints how these embeddings can be extended if the tree grows by a complete level.
Reference: [9] <author> S. Ravindran, A. Gibbons: </author> <title> Dense Edge-Disjoint Embedding of Complete Binary Trees in the Hypercube, </title> <journal> Inf. Process. Lett. </journal> <month> 45 </month> <year> (1993) </year> <month> 321-325. </month>
Reference-contexts: But using the fact that the double-rooted complete binary tree is a spanning tree of the hypercube of the same size, optimal embeddings of complete binary trees into hypercubes have been discovered <ref> [1, 2, 3, 5, 8, 9, 11, 12, 13] </ref>. The major drawback of these algorithms is that they are constructed as static embeddings and that they do not provide any hints how these embeddings can be extended if the tree grows by a complete level. <p> Here, it is important to obtain 1 embeddings with small congestion, since occasionally it is necessary to pass messages along all tree edges. A first suboptimal approach is given in [3], where embeddings with optimal load but non-optimal congestion has been constructed. The first optimal embedding is given in <ref> [9] </ref> with respect to load, dilation, and congestion. Nevertheless, both algorithms suffer from their static design. We present a dynamic edge-disjoint embedding such that the vertices of the same level are distributed evenly among the hypercube vertices and the load is optimal. <p> The computation time for each new level is constant. With respect to the congestion, we can do even better. An embedding of a double-rooted complete binary tree of height 6 into a 5-dimensional hypercube with unit dilation, unit congestion, and load 2 was discovered by Ravindran and Gibbons <ref> [9] </ref>, which is illustrated in Figure 6. Actually, Figure 6 shows two different but quite similar embeddings, where the second one will be needed later. The root path is indicated by black nodes while the parents of the leaves are drawn white. <p> Vertices of the same level are mapped to different hypercube vertices. The computation time for each new level is constant. Clearly, this theorem is optimal. As mentioned in the paper of Ravindran and Gibbons <ref> [9] </ref>, the last theorem do not hold for trees of height less than 6. The theorem above can be easily extended to embeddings with higher load as follows.
Reference: [10] <author> Y. Saad, M. Schultz: </author> <title> Topological Properties of the Hypercube, </title> <institution> Research Report RR-389, Dept. of Computer Science, Yale University, </institution> <year> 1985. </year>
Reference-contexts: Often complete binary trees represent the communication structure of parallel algorithms, e.g., divide-and-conquer or branch-and-bound algorithms. Embeddings of complete binary trees have been investigated by numerous researchers. Unfortunately, the complete binary tree is not a subgraph of the hypercube of nearly the same size <ref> [1, 10] </ref>. But using the fact that the double-rooted complete binary tree is a spanning tree of the hypercube of the same size, optimal embeddings of complete binary trees into hypercubes have been discovered [1, 2, 3, 5, 8, 9, 11, 12, 13]. <p> In the following, we will call this path the root path. Clearly, a double-rooted complete binary tree of height h has exactly 2 h vertices. 3 3 Previous Work Unfortunately, the complete binary tree is not a subgraph of its optimal hypercube <ref> [1, 10] </ref>. We recall that both the complete binary tree and the hypercube are bipartite graphs. Given a bipartite graph G=(A; B; E) of size n, we call G balanced if jAj; jBj2 dlog (n)e1 . <p> An optimal embedding of complete binary trees into their optimal hypercubes was first discovered by Havel and Liebl [5] and was also exhibited by Bhatt and Ipsen [1] as well as by Saad and Schultz <ref> [10] </ref>. We will give here a short proof of this well known fact using the double-rooted complete binary tree. In what follows, we will show that the double-rooted complete binary tree is a subgraph of its optimal hypercube.
Reference: [11] <author> W.-K. Chen, M. Stallmann: </author> <title> On Embedding Binary Trees into Hypercubes, </title> <journal> J. Parallel Distrib. Comput. </journal> <month> 24 </month> <year> (1995) </year> <month> 132-138. </month>
Reference-contexts: But using the fact that the double-rooted complete binary tree is a spanning tree of the hypercube of the same size, optimal embeddings of complete binary trees into hypercubes have been discovered <ref> [1, 2, 3, 5, 8, 9, 11, 12, 13] </ref>. The major drawback of these algorithms is that they are constructed as static embeddings and that they do not provide any hints how these embeddings can be extended if the tree grows by a complete level.
Reference: [12] <author> A. Wagner: </author> <title> Embedding the Complete Tree in the Hypercube, </title> <journal> J. Parallel Distrib. Comput. </journal> <month> 20 </month> <year> (1994) </year> <month> 241-247. </month>
Reference-contexts: But using the fact that the double-rooted complete binary tree is a spanning tree of the hypercube of the same size, optimal embeddings of complete binary trees into hypercubes have been discovered <ref> [1, 2, 3, 5, 8, 9, 11, 12, 13] </ref>. The major drawback of these algorithms is that they are constructed as static embeddings and that they do not provide any hints how these embeddings can be extended if the tree grows by a complete level.
Reference: [13] <author> A. Wu: </author> <title> Embedding of Tree Networks into Hypercubes, </title> <journal> J. </journal> <note> Parallel Distrib. Com-put. 2 (1985) 238-249. 16 </note>
Reference-contexts: But using the fact that the double-rooted complete binary tree is a spanning tree of the hypercube of the same size, optimal embeddings of complete binary trees into hypercubes have been discovered <ref> [1, 2, 3, 5, 8, 9, 11, 12, 13] </ref>. The major drawback of these algorithms is that they are constructed as static embeddings and that they do not provide any hints how these embeddings can be extended if the tree grows by a complete level.
References-found: 13

