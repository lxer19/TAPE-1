URL: ftp://ftp.icsi.berkeley.edu/pub/techreports/1993/tr-93-008.ps.gz
Refering-URL: http://www.icsi.berkeley.edu/techreports/1993.html
Root-URL: http://www.icsi.berkeley.edu
Email: E-mail: fknightly,ventreg@icsi.berkeley.edu  
Title: Galileo: a Tool for Simulation and Analysis of Real-Time Networks  
Author: Edward W. Knightly and Giorgio Ventre 
Note: On leave from  
Address: Berkeley.  Italy.  
Affiliation: The Tenet Group, Computer Science Division, Department of EECS, University of California, Berkeley and International Computer Science Institute,  Dipartimento di Informatica e Sistemistica, Universita degli Studi di Napoli "Federico II", Napoli,  
Date: March 1993  
Pubnum: TR-93-008  
Abstract: Galileo is a flexible tool for simulation of heterogeneous real-time communication networks and for development and verification of network protocols. Galileo provides several unique features that make it particularly suitable for the simulation and analysis of networks that provide quality-of-service guarantees. First, its object-oriented programming environment provides the means for a modular, hierarchical, heterogeneous description of networks. Second, its multimedia device interface provides the tools for a qualitative analysis of network protocols. Finally, Galileo's network interface provides interaction with actual networks to access real data and simulate realistic multimedia scenarios. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Banerjea and B. Mah. </author> <title> The real-time channel administration protocol. </title> <booktitle> In Proceedings of the Second International Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <pages> pages 160-170, </pages> <address> Heidelberg, Germany, </address> <month> November </month> <year> 1991. </year> <note> Springer-Verlag. </note>
Reference-contexts: That is, the protocols need an algorithm to allocate the network's bandwidth and buffer space to its clients according to their corresponding quality-of-service (QoS) requirements (as well as some pricing scheme). In the Tenet resource management protocol, RCAP (Real-time Channel Administration Protocol) <ref> [1] </ref>, admission control is performed by a series of tests to check if sufficient resources are available to meet the client's QoS requirements.
Reference: [2] <author> D. Ferrari. </author> <title> Real-time communication in an internetwork. </title> <journal> Journal of High Speed Networks, </journal> <volume> 1(1) </volume> <pages> 79-103, </pages> <year> 1992. </year>
Reference-contexts: The parameters of this subnetwork galaxy will then reflect the effect of the entire subnetwork on a traversing packet. This hierarchical view of the network is the approach taken in <ref> [2] </ref>, where the highest level of an internetwork consists of gateways that interconnect networks, and "logical links" that represent networks between the gateways. This view of the network is called a level-1 network.
Reference: [3] <author> D. Ferrari and D. Verma. </author> <title> A scheme for real-time channel establishment in wide-area networks. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 8(3) </volume> <pages> 368-379, </pages> <month> April </month> <year> 1990. </year>
Reference-contexts: The Tenet network layer protocol is RTIP (Real-Time Internet Protocol) [7]. RTIP currently uses a deadline-based scheduling algorithm called multiclass EDD (Earliest Due Date) <ref> [3] </ref>, where an incoming real-time packet is queued according to its local node deadline as calculated by RCAP. <p> If accepted, on the reverse part of the trip each node's resources are relaxed to the minimum level so that the local performance bounds may be guaranteed. The details of the admission control algorithms are found in <ref> [3] </ref>. The unique requirements of simulating real-time networks are apparent. The simulator must provide quality-of-service validation in addition to performing admission control calculations. For real-time applications, this QoS validation must be qualitative as well as quantitative. Furthermore, the need for an object-oriented programming environment is also evident.
Reference: [4] <author> E. Lee and D. Messerschmitt. </author> <title> The Almagest: Manual for Ptolemy. </title> <editor> U. </editor> <address> C. </address> <institution> Berkeley Deptartment of EECS, </institution> <year> 1992. </year>
Reference-contexts: 1 Introduction In this paper we present Galileo, a tool designed and implemented to address several problems unique to the simulation and analysis of real-time communication networks. The tool is based on Ptolemy <ref> [4] </ref>, an object-oriented software environment that serves as a foundation for simulation of heterogeneous, hierarchical systems. Galileo has several unique features that distinguish it from the vast number of existing network simulators such as Netsim, REAL, and NEST. First, Galileo is object-oriented.
Reference: [5] <author> J. Ramaekers and G. Ventre. </author> <title> Quality-of-service negotiation in a real-time communication network. </title> <type> Technical Report TR-92-023, </type> <institution> International Computer Science Institute, Berkeley, Califor-nia, </institution> <month> April </month> <year> 1992. </year>
Reference-contexts: This demonstrates that scheduler saturation has occured and only increasing D will increase the number of channels accepted. Such information is 12 valuable in a flexible client interface to RCAP as in <ref> [5] </ref>. If the network denies a client's request, the client may make an intelligent modification of its QoS parameters so that the second request will be accepted.
Reference: [6] <author> H. Zhang and D. Ferrari. </author> <title> Rate-controlled static priority queueing. </title> <booktitle> In Proceedings of INFO-COM'93, </booktitle> <address> San Francisco, California, </address> <month> March </month> <year> 1992. </year>
Reference-contexts: The effects of real-time traffic traversing non-real-time nodes may then be studied. 6 Galileo's modularity also extends to the programming environment. For example, the default scheduling algorithm in RTIP is EDD. A second algorithm, Rate-Controlled Static-Priority Queueing <ref> [6] </ref>, will also be used in the future. In Galileo's object-oriented programming environment, changing the scheduling algorithm only requires changing the scheduling object. This setup allows the possibility of choosing the scheduler at run-time by utilizing Ptolemy's highly parameterized block-diagram representation.
Reference: [7] <author> H. Zhang, D. Verma, and D. Ferrari. </author> <title> Design and implementation of the real-time internet protocol. </title> <booktitle> In Proceedings of the IEEE Workshop on the Architecture and Implementation of High Performance Communication Subsystems, </booktitle> <address> Tucson, Arizona, </address> <month> February </month> <year> 1992. </year> <month> 16 </month>
Reference-contexts: The Tenet network layer protocol is RTIP (Real-Time Internet Protocol) <ref> [7] </ref>. RTIP currently uses a deadline-based scheduling algorithm called multiclass EDD (Earliest Due Date) [3], where an incoming real-time packet is queued according to its local node deadline as calculated by RCAP.
References-found: 7

