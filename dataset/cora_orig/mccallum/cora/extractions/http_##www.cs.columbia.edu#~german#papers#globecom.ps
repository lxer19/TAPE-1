URL: http://www.cs.columbia.edu/~german/papers/globecom.ps
Refering-URL: http://www.cs.columbia.edu/~german/papers.html
Root-URL: http://www.cs.columbia.edu
Title: ShockAbsorber: A TCP Connection Router (Extended Abstract)  
Author: German Goldszmidt and Guerney Hunt 
Affiliation: IBM T. J. Watson Research Center  
Abstract: ShockAbsorber is a software router of TCP connections that supports load sharing across multiple TCP servers that share a set of virtual IP addresses. It consists of the Executor, a O/S kernel extension that supports fast IP packet forwarding, and a user level Manager process that controls it. The Manager implements a novel dynamic load-sharing algorithm for allocation of TCP connections among servers according to their real-time load and responsiveness. This algorithm produces weights that are used by the Executor to quickly select a server for each new connection request. The Executor forwards client TCP packets to the servers without performing any TCP/IP header translations. Outgoing server-to-client packets are not handled by ShockAbsorber and can follow a separate network route to the clients. Depending on the workload traffic, the performance benefit of this half-connection method can be significant. Prototypes of ShockAbsorber were used to scale up several large and high-load Internet sites serving millions of TCP connections per hour. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. Attanasio and S. Smith. </author> <title> A Virtual Multiprocessor Implemented by an Encapsulated Cluster of Loosely Coupled Computers. </title> <type> Technical report, </type> <institution> IBM Research, </institution> <year> 1992. </year> <month> RC18442. </month>
Reference-contexts: In independent evaluation [16], our prototype was shown to outperform these tools. Encapsulated Cluster Project. An early version of the IP packet forwarding technology in ShockAb-sorber was developed as part of the Encapsulated Cluster (EC) project <ref> [1] </ref>. In the EC, incoming IP packets were forwarded to the cluster servers by rewriting the packet headers. The corresponding outgoing packets had their headers rewritten so they will appear to come from a single IP address. They also suggested and partially prototyped a version that supported half-connection traffic.
Reference: [2] <author> T. Brisco. </author> <title> DNS Support for Load Balancing. </title> <type> RFC 1794, </type> <month> April </month> <year> 1995. </year>
Reference: [3] <author> CISCO. LocalDirector. </author> <note> http://www.cisco.com/, October 1996. </note>
Reference-contexts: Packet Forwarding Tools. These tools are often implemented as specialized hardware devices, e.g., Cis-co's LocalDirector <ref> [3] </ref> and HydraWeb [8]. These devices translate (rewrite) the TCP/IP headers and recompute the checksums of all packets flowing between clients and servers in both directions. This is similar to Network Address Translation (NAT) [6], adding the choice of the selected server.
Reference: [4] <author> Daniel Dias, William Kish, Rajat Mukherjee, and Renu Tewari. </author> <title> A Scalable and Highly Available Web Server. </title> <booktitle> In Proceedings of COMPCON, </booktitle> <month> March </month> <year> 1996. </year>
Reference-contexts: The corresponding outgoing packets had their headers rewritten so they will appear to come from a single IP address. They also suggested and partially prototyped a version that supported half-connection traffic. A simulation analysis of expected performance in the context of a scalable Web server is given in <ref> [4] </ref>. ShockAbsorber contains a modified version of the above packet forwarding kernel extensions prototype. ShockAbsorber added significant functionality in this kernel extension, a new control interface, dynamic real-time load management, and extensive dynamic configuration support.
Reference: [5] <author> D. L. Eager, E.D. Lazowska, and J. Zahorjan. </author> <title> Adaptive Load Sharing in Homogeneous Distributed Systems. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 12(5) </volume> <pages> 662-675, </pages> <month> May </month> <year> 1986. </year>
Reference-contexts: Some form of dynamic feedback is therefore necessary to enable appropriate reaction by ShockAbsorber to actual traffic patterns and the state of the servers. There are two main strategies for improving performance using load distribution among several servers: load-balancing and load-sharing <ref> [5] </ref>. Load-balancing strives to equalize the servers workload, while load sharing attempts to smooth out transient peak overload periods on some nodes [10]. Load-balancing strategies typically consume many more resources than load-sharing, and the cost of these resources often outweigh their potential benefits [11].
Reference: [6] <author> K. Egevang and P. Francis. </author> <title> The IP Network Address Translator (NAT). </title> <address> RFC1631, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: Packet Forwarding Tools. These tools are often implemented as specialized hardware devices, e.g., Cis-co's LocalDirector [3] and HydraWeb [8]. These devices translate (rewrite) the TCP/IP headers and recompute the checksums of all packets flowing between clients and servers in both directions. This is similar to Network Address Translation (NAT) <ref> [6] </ref>, adding the choice of the selected server. The main performance disadvantages of this approach are the overhead latency involved in rewriting headers in both directions, and the bandwidth constraints of the translator which becomes a main traffic bottleneck.
Reference: [7] <author> German Goldszmidt and Andy Stanford Clark. </author> <title> Load Distribution for Scalable Web Servers: Summer Olympics 1996 A Case Study. </title> <booktitle> In Proceedings of the 8th IFIP/IEEE International Workshop on Distributed Systems: Operations & Management, </booktitle> <address> Sydney, Australia, </address> <month> October 21-23 </month> <year> 1997. </year>
Reference-contexts: In the official Atlanta 1996 Summer Olympic Web site, one ShockAbsorber host supported 5 VECs on 50 host servers. During the games <ref> [7] </ref>, this prototype handled over 190 million TCP connections (HTTP hits). At the main site, we observed actual rates of over 500 HTTP TCP connections per second, with low CPU utilization (under 5%) on an RS6000 model 39H (67Mhz POWER2 processor).
Reference: [8] <author> HydraWEB. </author> <title> HTTP Load Manager. </title> <note> http://www.hydraWEB.com/, 1996. </note>
Reference-contexts: Packet Forwarding Tools. These tools are often implemented as specialized hardware devices, e.g., Cis-co's LocalDirector [3] and HydraWeb <ref> [8] </ref>. These devices translate (rewrite) the TCP/IP headers and recompute the checksums of all packets flowing between clients and servers in both directions. This is similar to Network Address Translation (NAT) [6], adding the choice of the selected server.
Reference: [9] <author> Eric Dean Katz, Michelle Butler, and Robert Mc-Grath. </author> <title> A Scalable HTTP Server: The NCSA Prototype. </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> 27 </volume> <pages> 155-163, </pages> <year> 1994. </year>
Reference-contexts: The garbage collector thread is activated in the background by the TCP slow timer. 4 Related Work DNS extensions. Many Internet sites rely on DNS [12] based techniques to share load across several servers, e.g., NCSA <ref> [9] </ref> These techniques include DNS modifications like Beecher's Shu*e Addresses, Rose's Round-Robin code (RR-DNS), and Schemers' LB-named [15]. There are several drawbacks to all DNS-based solutions. Mogul, observing a high-traffic 3 server Web site, suggested that "DNS-based technique cannot provide linear scaling for server performance at peak request rates" [13].
Reference: [10] <author> O. Kremien and J. Kramer. </author> <title> Methodical Analysis of Adaptive Load Sharing Algorithms. </title> <journal> IEEE Transactions on Parallel and Distributed Processing, </journal> <volume> 3(6), </volume> <month> November </month> <year> 1992. </year>
Reference-contexts: There are two main strategies for improving performance using load distribution among several servers: load-balancing and load-sharing [5]. Load-balancing strives to equalize the servers workload, while load sharing attempts to smooth out transient peak overload periods on some nodes <ref> [10] </ref>. Load-balancing strategies typically consume many more resources than load-sharing, and the cost of these resources often outweigh their potential benefits [11]. ShockAbsorber implements a load-sharing allocation policy for allocating new TCP connections which is driven by a dynamic feedback control loop with the VEC servers.
Reference: [11] <author> P. Krueger and M. Livny. </author> <title> The Diverse Objectives of Distributed Scheduling Policies. </title> <booktitle> In Proceedings of the 7th IEEE International Conference on Distributed Computing Systems, </booktitle> <pages> pages 242-249, </pages> <year> 1987. </year>
Reference-contexts: Load-balancing strives to equalize the servers workload, while load sharing attempts to smooth out transient peak overload periods on some nodes [10]. Load-balancing strategies typically consume many more resources than load-sharing, and the cost of these resources often outweigh their potential benefits <ref> [11] </ref>. ShockAbsorber implements a load-sharing allocation policy for allocating new TCP connections which is driven by a dynamic feedback control loop with the VEC servers. The Manager monitors and evaluates the current load on each server using combinations of load metrics, as described below.
Reference: [12] <author> P. Mockapetris. </author> <title> Domain Names Concepts and Facilities. </title> <type> RFC 1034, </type> <month> November </month> <year> 1987. </year>
Reference-contexts: The garbage collector thread is activated in the background by the TCP slow timer. 4 Related Work DNS extensions. Many Internet sites rely on DNS <ref> [12] </ref> based techniques to share load across several servers, e.g., NCSA [9] These techniques include DNS modifications like Beecher's Shu*e Addresses, Rose's Round-Robin code (RR-DNS), and Schemers' LB-named [15]. There are several drawbacks to all DNS-based solutions.
Reference: [13] <author> Jeffrey C. Mogul. </author> <title> Network Behavior of a Busy Web Server and its Clients. </title> <type> Technical report, </type> <institution> Digital Western Research Lab, </institution> <month> October </month> <year> 1995. </year> <note> WRL Research Report 95/5. </note>
Reference-contexts: There are several drawbacks to all DNS-based solutions. Mogul, observing a high-traffic 3 server Web site, suggested that "DNS-based technique cannot provide linear scaling for server performance at peak request rates" <ref> [13] </ref>. Furthermore, DNS may only disclose up to 32 IP addresses for each name, due to UDP packet size constraints.
Reference: [14] <author> Resonate. </author> <title> A Case for Intelligent Distributed Server Management. </title> <note> Available from http://www.resonateinc.com, December 1996. </note>
Reference-contexts: LocalDirector does not require any changes of the servers, but HydraWeb requires installing software agents at each server to analyze their load. Resonate Dispatch <ref> [14] </ref> is a software tool that supports content-based allocation of HTTP requests. TCP connections are accepted at the "Sched-uler" host which examines the URL and then transfers the TCP connection to a host based on administrative rules.
Reference: [15] <author> Roland J. Schemers. lbnamed: </author> <title> A Load Balancing Name Server in Perl. </title> <booktitle> In Proceedings of LISA IX, </booktitle> <address> Monterey, CA, </address> <month> September </month> <year> 1995. </year>
Reference-contexts: Many Internet sites rely on DNS [12] based techniques to share load across several servers, e.g., NCSA [9] These techniques include DNS modifications like Beecher's Shu*e Addresses, Rose's Round-Robin code (RR-DNS), and Schemers' LB-named <ref> [15] </ref>. There are several drawbacks to all DNS-based solutions. Mogul, observing a high-traffic 3 server Web site, suggested that "DNS-based technique cannot provide linear scaling for server performance at peak request rates" [13].
Reference: [16] <author> J. William Semich. </author> <title> New Web Clustering Systems to Improve Server Response. Web Week, </title> <type> 3(2), </type> <month> Jan-uary 20 </month> <year> 1997. </year>
Reference-contexts: TCP connections are accepted at the "Sched-uler" host which examines the URL and then transfers the TCP connection to a host based on administrative rules. This method, however, requires modifying the IP stack of all the (SPARC/Solaris) servers to support the TCP connection "hop". In independent evaluation <ref> [16] </ref>, our prototype was shown to outperform these tools. Encapsulated Cluster Project. An early version of the IP packet forwarding technology in ShockAb-sorber was developed as part of the Encapsulated Cluster (EC) project [1].
Reference: [17] <author> William Stallings. </author> <title> Viewpoint: Self-similarity upsets data traffic assumptions. </title> <journal> IEEE Spectrum, </journal> <month> Jan-uary </month> <year> 1997. </year>
Reference-contexts: Such an allocation policy can cause a severe underutilization of the cluster resources, and longer observed delays for the remote clients. Surges in IP traffic tend to occur in waves, with long periods with little traffic followed by intervals of heavy usage in which traffic peaks tend to cluster <ref> [17] </ref>. Some form of dynamic feedback is therefore necessary to enable appropriate reaction by ShockAbsorber to actual traffic patterns and the state of the servers. There are two main strategies for improving performance using load distribution among several servers: load-balancing and load-sharing [5].
References-found: 17

