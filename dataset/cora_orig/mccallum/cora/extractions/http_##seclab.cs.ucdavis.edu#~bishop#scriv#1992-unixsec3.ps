URL: http://seclab.cs.ucdavis.edu/~bishop/scriv/1992-unixsec3.ps
Refering-URL: http://seclab.cs.ucdavis.edu/~bishop/scriv/index.html
Root-URL: http://www.cs.ucdavis.edu
Title: Anatomy of a Proactive Password Changer  
Author: Matt Bishop 
Address: 6188 Bradley Hall Hanover, NH 03755  
Affiliation: Department of Mathematics and Computer Science Dartmouth College  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Matt Bishop, </author> <title> A Proactive Password Checker, in Information Security, </title> <editor> David T. Lindsay and Wyn L. Price (eds.), </editor> <publisher> North-Holland, </publisher> <address> New York, NY pp. </address> <month> 169-180 </month> <year> (1991) </year>
Reference-contexts: Password Checking The heart of the password validation scheme is the program to verify that the password is in fact difficult to guess. The principles behind this program, which is invoked by passwd+, have been described elsewhere <ref> [1] </ref>. This section discusses pwcheck, the password checking program which is intended to be the password analysis component used by passwd+. Like passwd+, it uses its own configuration file. 3.1.
Reference: [2] <author> M. Gasser, </author> <title> A Random Word Generator for Pronounceable Passwords, </title> <type> Technical Report ESD-TR-75-97, </type> <institution> The MITRE Corporation, Bedford, </institution> <address> MA (Nov. </address> <year> 1975) </year>
Reference: [3] <author> L. Grant, </author> <title> DES Key Crunching for Safer Cipher Keys, </title> <journal> SIG Security Audit and Control Review 5(3) pp. </journal> <month> 9-16 (Summer </month> <year> 1987). </year>
Reference-contexts: 1. Introduction The issue of poor user selection of passwords has been discussed in many papers [6][7] and need not be repeated here. Among the techniques used to overcome these problems are random generation of passwords <ref> [3] </ref>, challenge-response techniques [5], key crunching [4], and the examination of user-selected passwords either by cracking them or by analyzing them before allowing the password to be changed. In this paper we look at a program specifically designed to do the latter.
Reference: [4] <author> J. Haskett, Pass-Algorithms: </author> <title> A User Validation Scheme Based on Knowledge of Secret Algorithms, </title> <journal> Communications of the ACM 27(8) pp. </journal> <month> 777-784 (Aug. </month> <year> 1984). </year>
Reference-contexts: 1. Introduction The issue of poor user selection of passwords has been discussed in many papers [6][7] and need not be repeated here. Among the techniques used to overcome these problems are random generation of passwords [3], challenge-response techniques [5], key crunching <ref> [4] </ref>, and the examination of user-selected passwords either by cracking them or by analyzing them before allowing the password to be changed. In this paper we look at a program specifically designed to do the latter.
Reference: [5] <author> Daniel V. Klein, </author> <title> Foiling the Cracker: A Survey of, and Improvements to, Password Security, </title> <booktitle> Proceedings of the UNIX Security Workshop II pp. </booktitle> <month> 5-14 (Aug. </month> <year> 1990) </year>
Reference-contexts: 1. Introduction The issue of poor user selection of passwords has been discussed in many papers [6][7] and need not be repeated here. Among the techniques used to overcome these problems are random generation of passwords [3], challenge-response techniques <ref> [5] </ref>, key crunching [4], and the examination of user-selected passwords either by cracking them or by analyzing them before allowing the password to be changed. In this paper we look at a program specifically designed to do the latter.
Reference: [6] <author> Robert Morris and Ken Thompson, </author> <title> Password Security: A Case History, </title> <journal> Communications of the ACM 22(11) pp. </journal> <month> 594-597 (Nov. </month> <year> 1979) </year>
Reference: [7] <author> UNIX Users Reference Manual, </author> <title> 4.3 Berkeley Software Distribution Virtual VAX-11 Version, </title> <institution> Computer Systems Research Group, Computer Science Division, Department of Electrical Engineering and Computer Science, University of California, Berkeley CA (Apr. </institution> <note> 1986); reprinted by the USENIX Association (June 1987). </note>
References-found: 7

