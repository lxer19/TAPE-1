URL: http://www.cs.umn.edu/Research/shashi-group/paper_ps/cacm.ps
Refering-URL: http://www.cs.umn.edu/Research/shashi-group/abstract/cacm.abs.html
Root-URL: http://www.cs.umn.edu
Note: Contents  
Abstract-found: 0
Intro-found: 1
Reference: [1] <editor> Symposium on large spatial databases (ssd). </editor> <booktitle> Biennial Conference since 1989. </booktitle>
Reference-contexts: Early systems were designed and implemented in an evolutionary, application-oriented approach [23], which resulted in systems which were inflexible to new applications. Recently, there has been a great deal of interest in the development of geographic databases, as is evident from conferences <ref> [1, 4, 2] </ref> and special issues of journals [3].
Reference: [2] <institution> Symposium on spatial data handling (ssh). </institution> <note> Annual since 1980. </note>
Reference-contexts: Early systems were designed and implemented in an evolutionary, application-oriented approach [23], which resulted in systems which were inflexible to new applications. Recently, there has been a great deal of interest in the development of geographic databases, as is evident from conferences <ref> [1, 4, 2] </ref> and special issues of journals [3].
Reference: [3] <institution> Vldb journal special issue on spatial database systems. </institution> <note> Special Issue on Spatial Database Systems, Vol. 3, No. 4, </note> <year> 1994. </year>
Reference-contexts: Recently, there has been a great deal of interest in the development of geographic databases, as is evident from conferences [1, 4, 2] and special issues of journals <ref> [3] </ref>.
Reference: [4] <institution> Workshop on geographic information systems. </institution> <note> Annual Conference since 1993. </note>
Reference-contexts: Early systems were designed and implemented in an evolutionary, application-oriented approach [23], which resulted in systems which were inflexible to new applications. Recently, there has been a great deal of interest in the development of geographic databases, as is evident from conferences <ref> [1, 4, 2] </ref> and special issues of journals [3].
Reference: [5] <author> A. G. Cohn and N. M. Gotts. </author> <title> Spatial Regions with Undetermined Boundaries. </title> <booktitle> In Proceedings of the ACM GIS Workshop, </booktitle> <year> 1994. </year>
Reference-contexts: The geometric extent of oceans is dynamic and differs a great deal between low-tide and high-tide, and due to waves and weather systems. One way to model the geometric extent in a dynamic environment is to use fuzzy-sets such as egg-yolk model <ref> [5] </ref>, with two boundaries B I (O) and B O (O) for each object O. Points inside B I are members of O with degree 1. Points outside B O (O) are not members of O and B I (O) B O (O).
Reference: [6] <author> S. Abiteboul, R. Hull, and V. Vianu. </author> <title> Complex Values and Object Databases, chapter 20. </title> <publisher> Addison Wesley, </publisher> <year> 1995. </year>
Reference-contexts: 1 Introduction Object Oriented (OO) databases and object data models <ref> [6, 9, 12, 16, 33, 35] </ref> were advanced in the last decade to address the "impedance-mismatch" between the relational model [15] and nonstandard applications such as geographic information systems, CAD/CAM, software engineering, etc. Several object-oriented databases have been developed since then. <p> This paper discusses the experiences of using OO data models in GIS in order to assess their strengths and weaknesses. We first describe the basic concepts of the OO data model and the domain of GIS. 1.1 Object Oriented Data Model Object oriented databases (OODBs) <ref> [6, 9, 12, 16, 33, 35] </ref> have evolved in parallel with object oriented analysis and design techniques [21, 31] in software engineering. OODBs have focused mostly on data modeling and has many unique concepts. In this subsection, we summarize the basic concepts of OODBs in an informal manner. <p> In this subsection, we summarize the basic concepts of OODBs in an informal manner. However, complete or formal coverage of the emerging area of object-oriented database models is outside the scope of this paper, and we refer interested readers to <ref> [6, 9, 12, 16, 33, 35] </ref> for further details. Basic Model The basic data modeling concepts supported by most OODBs are described below: Objects and object identifiers : Each real-world entity is represented by an object with a state and a behavior. <p> The existence of the sub-object can be specified to be dependent-on or independent-of an aggregate complex object. In addition, constructors for aggregation of complex values along with their multi-sorted algebra have been developed <ref> [6] </ref>. Associations : An association is a link between entities in an application. Associations are similar to the notion of relationships in an ER-model [14], and are characterized by degree and by cardinality constraints. Most OODBs do not explicitly represent associations.
Reference: [7] <author> Hassan Ait-Kaci. </author> <title> A lattice Theoretic Approach to Computation Based on a Calculus of Partially Ordered Type Structures. </title> <type> PhD thesis, </type> <institution> University of Pennsylvania, </institution> <year> 1984. </year>
Reference-contexts: The ability to construct new types is crucial in a general GIS, since it is not known what future data types will be needed. A type hierarchy can be achieved by using a formalism such as a type hierarchy or lattice structure <ref> [22, 7, 46] </ref>.
Reference: [8] <author> J.T Anderson and M. Stonebraker. </author> <title> "Sequoia 2000 Metadata Schema for Satellite Images". </title> <booktitle> Sigmod Record, </booktitle> <volume> 23(4), </volume> <year> 1994. </year>
Reference-contexts: GIS measurements are taken by devices such as cameras or satellites. In order to associate a given point in the measured data with the physical world, the correspondence problem <ref> [8] </ref> must be solved. Each point in the measured image must correspond to a single point in the physical world. At best, we can approximate the correspondence, thus introducing an additional source of error. Data Modeling Many GIS are organized as a collection of themes. <p> Typical applications for raster data include earth-science applications such as the EOSDIS project, natural resource applications (vegetation, snow cover, etc.), and transportation applications (images of roads used to validate or update maps). A raster image must store meta-data (data about data) along with a basic description of the object <ref> [8] </ref>. For example, since an image is a two-dimensional photograph of a three dimensional surface, the image coordinates must be associated with their real-world coordinates. Figure 5 shows an Aerial image of Minneapolis roadways used for an IVHS application. <p> POSTGRES is being used for the management of large amounts of geographical and environment data in Sequoia 2000 [45]. Postgres has been extended in the commercial version Illustra <ref> [8] </ref> to include support for a very rich data set, including two and three-dimensional vector data, images, video, and text. The data model used for several research projects, such as Sequoia 2000, is based on the OGIS data model.
Reference: [9] <editor> F. Bancilhon and P. ed. Buneman. </editor> <booktitle> "Advances in Database Programming Languages". </booktitle> <publisher> Addison-Wesley, </publisher> <year> 1990. </year>
Reference-contexts: 1 Introduction Object Oriented (OO) databases and object data models <ref> [6, 9, 12, 16, 33, 35] </ref> were advanced in the last decade to address the "impedance-mismatch" between the relational model [15] and nonstandard applications such as geographic information systems, CAD/CAM, software engineering, etc. Several object-oriented databases have been developed since then. <p> This paper discusses the experiences of using OO data models in GIS in order to assess their strengths and weaknesses. We first describe the basic concepts of the OO data model and the domain of GIS. 1.1 Object Oriented Data Model Object oriented databases (OODBs) <ref> [6, 9, 12, 16, 33, 35] </ref> have evolved in parallel with object oriented analysis and design techniques [21, 31] in software engineering. OODBs have focused mostly on data modeling and has many unique concepts. In this subsection, we summarize the basic concepts of OODBs in an informal manner. <p> In this subsection, we summarize the basic concepts of OODBs in an informal manner. However, complete or formal coverage of the emerging area of object-oriented database models is outside the scope of this paper, and we refer interested readers to <ref> [6, 9, 12, 16, 33, 35] </ref> for further details. Basic Model The basic data modeling concepts supported by most OODBs are described below: Objects and object identifiers : Each real-world entity is represented by an object with a state and a behavior.
Reference: [10] <author> Peter Baumann. </author> <title> Management of multidimensional discrete data. </title> <journal> VLDB Journal, </journal> <volume> 3(4) </volume> <pages> 401-444, </pages> <month> October </month> <year> 1994. </year>
Reference-contexts: Baumann 8 <ref> [10] </ref> gives a more thorough description of various raster image types. Informally, a raster image is a d-dimensional array where each entry represents a basic unit of the image. <p> In an aerial image of a city, a user may want to identify all of the roads so as to compare them with roads stored in a vector format. A thorough discussion of raster image processing can be found in <ref> [10] </ref>. * Surface Modeling: TIN, DEM, or other sources of data can be used to construct 2 1/2 or 3-D surface-image models. <p> The OO model is probably powerful enough to model raster images and temporal data, as is evidenced by the GeoSAL and OGIS models. However, both the OGIS and GeoSal models provide only rudimentary support for raster images. Baumann <ref> [10] </ref> provides an algebraic framework for raster image processing. The type of formalism provided in that work should be incorporated into a GIS OO model.
Reference: [11] <author> D. Benoit, R. Laurent, and S. Guylaine. </author> <title> "GeO 2 : Why Objects in a Geographical DBMS?". </title> <editor> In D. Abel and B. C. Ooi (Eds.), </editor> <booktitle> Advances in Spatial Databases 3rd Symposium, </booktitle> <address> SSD'93, Berlin, 1993. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: After we describe several representative research efforts aimed at modeling GIS using Object-Oriented techniques, we evaluate them based upon the criteria laid out in section 2. The methods we have chosen are representative, although not exhaustive. 3.1 GEO2 Benoit et al. <ref> [11] </ref> describe a geographical data model and its implementation using the object-oriented aspect of the O 2 DBMS [12]. Their system, GeO 2 , provides independence between the conceptual data model and the internal OO data structures.
Reference: [12] <author> E. Bertino and L. Martino. </author> <title> "Object-Oriented Database Systems". </title> <publisher> Addison-Wesley, </publisher> <year> 1993. </year>
Reference-contexts: 1 Introduction Object Oriented (OO) databases and object data models <ref> [6, 9, 12, 16, 33, 35] </ref> were advanced in the last decade to address the "impedance-mismatch" between the relational model [15] and nonstandard applications such as geographic information systems, CAD/CAM, software engineering, etc. Several object-oriented databases have been developed since then. <p> This paper discusses the experiences of using OO data models in GIS in order to assess their strengths and weaknesses. We first describe the basic concepts of the OO data model and the domain of GIS. 1.1 Object Oriented Data Model Object oriented databases (OODBs) <ref> [6, 9, 12, 16, 33, 35] </ref> have evolved in parallel with object oriented analysis and design techniques [21, 31] in software engineering. OODBs have focused mostly on data modeling and has many unique concepts. In this subsection, we summarize the basic concepts of OODBs in an informal manner. <p> In this subsection, we summarize the basic concepts of OODBs in an informal manner. However, complete or formal coverage of the emerging area of object-oriented database models is outside the scope of this paper, and we refer interested readers to <ref> [6, 9, 12, 16, 33, 35] </ref> for further details. Basic Model The basic data modeling concepts supported by most OODBs are described below: Objects and object identifiers : Each real-world entity is represented by an object with a state and a behavior. <p> Query languages allow predicates on the value of attributes, and most OODBs allow direct access to attributes to avoid, among other things, implementation of many methods for simply reading and writing attributes. It is not considered a disadvantage to know the attributes and references inside an object <ref> [12] </ref>. Classes : A class is a set of objects which have the identical internal structure, i.e. the same attributes and the same methods. A class is used as a basis for instantiation. Classes may be 1 A few exceptions exist. <p> The methods we have chosen are representative, although not exhaustive. 3.1 GEO2 Benoit et al. [11] describe a geographical data model and its implementation using the object-oriented aspect of the O 2 DBMS <ref> [12] </ref>. Their system, GeO 2 , provides independence between the conceptual data model and the internal OO data structures. The conceptual data model includes the semantic geographic data model and the localization data model.
Reference: [13] <author> C. R. Elshchlager and M. F. Goodchild. </author> <title> Dealing with Uncertainty in Categorical Coverage Maps. </title> <booktitle> In Proceedings of the ACM GIS Workshop, </booktitle> <year> 1994. </year>
Reference-contexts: The discretization process is prone to errors and inaccuracies. If this data is used in an analysis, the results of the analysis would need to be interpreted within the error tolerance of the data. Thus representation of data accuracy is critical for using GIS data properly for decision making <ref> [13] </ref>. 2.7 Query Capability In section 1 we outlined several types of operations that GIS users require. As extensive as this list is, new applications will require new methods and data types.
Reference: [14] <author> P. Chen. </author> <title> "The Entity Relationship Mode-Toward a Unified View of Data". </title> <journal> Transactions on Database Systems, </journal> <volume> 1(1), </volume> <year> 1976. </year>
Reference-contexts: In addition, constructors for aggregation of complex values along with their multi-sorted algebra have been developed [6]. Associations : An association is a link between entities in an application. Associations are similar to the notion of relationships in an ER-model <ref> [14] </ref>, and are characterized by degree and by cardinality constraints. Most OODBs do not explicitly represent associations. Integrity Constraints : Integrity constraints are assertions to be satisfied by objects in a database. To ensure correctness and consistency of data, OODBs provide mechanisms for defining, managing and controlling integrity constraints. <p> In relational theory, this is accomplished by normalizing <ref> [14] </ref> the data to eliminate the risk of insertion, update, and deletion anomalies. Consider the road-network represented as an edge-list table with the following edge attributes : &lt; edge-id, s-node-id, e-node-id, s-node-restrictions, e-node-restriction &gt;. The s-node-restriction can take the values of &lt; stop-sign, signal, yield-sign, none, : : : &gt;. <p> The s-node-restriction can take the values of &lt; stop-sign, signal, yield-sign, none, : : : &gt;. If the restriction on a node is changed due to traffic-related decisions, each instance of an edge containing the node-id would need to be updated to avoid inconsistency in data. A normalized form <ref> [14] </ref> will decompose the edge table into two tables with the following attributes : &lt; edge-id, s-node-id, e-node-id &gt; and &lt; node-id, restriction &gt;. Changing restrictions for a node would update only one tuple in &lt; node-id, restriction &gt; without danger of inconsistent updates. <p> The conceptual data model includes the semantic geographic data model and the localization data model. The semantic data model 15 provides data encapsulation, while the localization data model allows the localization of entities. The semantic geographical data model is an extension of the Entity-Relationship (ER) model <ref> [14] </ref>, which includes inheritance and propagation. The Abstract Data Type is used to define the localization data model. Three different topological levels, namely Spaghetti, Network and Map, are defined in GeO 2 to provide different users' needs and functionalities.
Reference: [15] <author> E. Codd. </author> <title> A relational model for large shared data banks. </title> <journal> CACM, </journal> <volume> 13(6), </volume> <month> June </month> <year> 1970. </year>
Reference-contexts: 1 Introduction Object Oriented (OO) databases and object data models [6, 9, 12, 16, 33, 35] were advanced in the last decade to address the "impedance-mismatch" between the relational model <ref> [15] </ref> and nonstandard applications such as geographic information systems, CAD/CAM, software engineering, etc. Several object-oriented databases have been developed since then. With the availability of commercial OO databases, application areas such as GIS are moving their data to object-oriented database management systems (OODBMS). <p> Methods 4.1 Strengths of OO for GIS Object-Oriented data models have been promoted in GIS to overcome the limitations of relational data models <ref> [15] </ref>. Many GIS and related systems used the relational data model and its extensions in the last decade. A detailed survey and analysis of geometric modeling and its extensions in relational data models can be found in [34].
Reference: [16] <author> Accredited Standards Committee. </author> <note> X3/SPARC/DBSSG/OODBTG Final Report. Final report, </note> <institution> ANSI Committee, </institution> <year> 1993. </year>
Reference-contexts: 1 Introduction Object Oriented (OO) databases and object data models <ref> [6, 9, 12, 16, 33, 35] </ref> were advanced in the last decade to address the "impedance-mismatch" between the relational model [15] and nonstandard applications such as geographic information systems, CAD/CAM, software engineering, etc. Several object-oriented databases have been developed since then. <p> This paper discusses the experiences of using OO data models in GIS in order to assess their strengths and weaknesses. We first describe the basic concepts of the OO data model and the domain of GIS. 1.1 Object Oriented Data Model Object oriented databases (OODBs) <ref> [6, 9, 12, 16, 33, 35] </ref> have evolved in parallel with object oriented analysis and design techniques [21, 31] in software engineering. OODBs have focused mostly on data modeling and has many unique concepts. In this subsection, we summarize the basic concepts of OODBs in an informal manner. <p> In this subsection, we summarize the basic concepts of OODBs in an informal manner. However, complete or formal coverage of the emerging area of object-oriented database models is outside the scope of this paper, and we refer interested readers to <ref> [6, 9, 12, 16, 33, 35] </ref> for further details. Basic Model The basic data modeling concepts supported by most OODBs are described below: Objects and object identifiers : Each real-world entity is represented by an object with a state and a behavior.
Reference: [17] <institution> Draft Base Document-OGIS Project Document 94-025R1. The Open Geodata Interoperability Specification, </institution> <month> October </month> <year> 1994. </year>
Reference-contexts: This data model should be kept separate from the internal data model, as migration from one operating system to another should not affect the internal structure, even though the method of output might change significantly. 3.3 OGIS The Open Geodata Interoperability Specification (OGIS) <ref> [17] </ref> represents an on-going standardization effort in GIS. The goal of OGIS is to provide a set of well-known types and common aggregates as basic building blocks. OGIS is being designed using programming-language independent object-oriented data models.
Reference: [18] <author> R. Elmasari and S.B. Navathe. </author> <title> Fundamentals of Database Systems. </title> <publisher> The Benjamin/Cummings Publishing Company,, </publisher> <year> 1989. </year>
Reference-contexts: A category relationship allows a user to model situations in which an object could be one of several types, as in the example shown in 14. This category relationship has been modeled in conceptual modeling 14 tools such as EER diagrams <ref> [18] </ref>, but there does not exist an adequate logical model within the OO framework. In addition, non-functional specifications must be modeled and queried. These specifications can come in the form of integrity constraints, rules, and triggers. <p> The addition of a sequence constructor would force an additional subtree almost identical to the first two classes, forming a large exponential growth in the class hierarchy and making it difficult for users to understand and manipulate the available data. class hierarchy. * Categorization <ref> [18] </ref> : The inability of OO models to handle categorization is well known. Categorization results when it is necessary to model a single superclass/subclass relationship 24 with more than one superclass. For example, consider the modeling of a river.
Reference: [19] <author> M. Erwig. </author> <title> Specifying type systems with multi-level sorted algebra. </title> <booktitle> In 3rd Int. Conf. on Algebraic Methodology and Software Technology, </booktitle> <year> 1993. </year>
Reference: [20] <author> M. Erwig and R. H. Guiting. </author> <title> "Explicit Graphs in a Functional Model for Spatial Databases". </title> <journal> IEEE Trans. on Knowledge and Data Engineering, </journal> <volume> 6(5), </volume> <month> October </month> <year> 1994. </year>
Reference-contexts: With the relational model, there is no simple way to model a path structure, as is found in networks. Current research is focused on the explicit representation of graphs as first class objects, resulting in a more natural representation and query facility <ref> [25, 20] </ref>. Partitions also need to be modeled and queried in a GIS. Partitions are related to networks in that they associate regions with other regions by relationships such as next, adjacent, etc. <p> Networks and partitions can be decomposed into points, lines and regions for modeling, however that complicates behavioral modeling (e.g. operation such as shortest path computation) and manipulation. It is more natural to use direct constructors <ref> [20] </ref> for sequence, graph, partition, etc. In many cases it is necessary to allow sharing of objects within complex objects. This can occur when different logical entities are treated as separate objects, as may be the case in areas such as transportation. <p> Since the efforts we have described represent the initial uses of OO techniques, it is likely that the lack of support for networks, partitions, etc., is due to the lack of appropriate constructors for sequences, graphs <ref> [20] </ref> etc., in most OO databases. * Extensible Type System: Object Data Models provide extensible type systems that allow different applications (e.g. <p> Partitions occur in public boundaries and related applications. The modeling and analysis of networks and partitions needs further attention possibly via incorporation of new constructors <ref> [20] </ref> for sequences, networks, etc. * Dynamic Extents : Modeling of dynamic extents is not supported directly within OO data models. Type constructors for dynamic objects such as lake boundaries need attention. * Continuous Space and Extrapolation : OO data models do not support continuous phenomenon adequately.
Reference: [21] <author> R. G. Fichman and C. F. Kemerer. </author> <title> Object-oriented and conventional analysis and design methodologies. </title> <booktitle> IEEE Computer, </booktitle> <year> 1992. </year> <month> 27 </month>
Reference-contexts: We first describe the basic concepts of the OO data model and the domain of GIS. 1.1 Object Oriented Data Model Object oriented databases (OODBs) [6, 9, 12, 16, 33, 35] have evolved in parallel with object oriented analysis and design techniques <ref> [21, 31] </ref> in software engineering. OODBs have focused mostly on data modeling and has many unique concepts. In this subsection, we summarize the basic concepts of OODBs in an informal manner.
Reference: [22] <author> G. Gierz, K.H Hofmann, K. Keimel, J.D. Lawson, M. Mislove, and D.S. Scott. </author> <title> A Compendium of Continuous Lattices. </title> <publisher> Springer-Verlag, </publisher> <year> 1980. </year>
Reference-contexts: The ability to construct new types is crucial in a general GIS, since it is not known what future data types will be needed. A type hierarchy can be achieved by using a formalism such as a type hierarchy or lattice structure <ref> [22, 7, 46] </ref>.
Reference: [23] <author> O. Gunther and J. Lamberts. </author> <title> "Object-oriented Techniques for the Management of Geographic and Environmental Data". </title> <journal> The Computer Journal, </journal> <volume> 37(1), </volume> <year> 1994. </year>
Reference-contexts: Computer science interest in GIS has been slow in developing, in part due to the inadequacy of data models to support the rich geographic and spatial data. Early systems were designed and implemented in an evolutionary, application-oriented approach <ref> [23] </ref>, which resulted in systems which were inflexible to new applications. Recently, there has been a great deal of interest in the development of geographic databases, as is evident from conferences [1, 4, 2] and special issues of journals [3].
Reference: [24] <author> O. Gunther and W.F. Riekert. </author> <title> "The Design of GODOT: An Object-Oriented Geographic Information System". </title> <journal> IEEE Data Engineering Bulletin, </journal> <volume> 16(3), </volume> <year> 1993. </year>
Reference-contexts: The map-data model is used to model geographic regions, and is based on the structure of combinatorial maps. 3.2 GODOT The GODOT system <ref> [24] </ref> incorporates a four-layer system architecture, including a commercial object-oriented database system, an extensible kernel, and a collection of base components and user interface modules.
Reference: [25] <author> R. Guting. </author> <title> An introduction to spatial database systems. </title> <journal> VLDB Journal, </journal> <volume> 3(4), </volume> <year> 1994. </year>
Reference-contexts: Following <ref> [25] </ref>, the underlying space can be modeled by either a combinatorial topology approach or by a realm-based approach. Both methods are on a discrete geometric basis in order to avoid problems related to correctness, accuracy, and performance. <p> A simplical complex is defined as a finite set of simplices such that the intersection of any two simplices in the set is a face. Alternatively, several researchers have represented the underlying space as realms. A realm is formally defined <ref> [25] </ref> as a set of points and line segments over a discrete grid with four properties: 1) Each point or end point of a line segment is a grid point. 2) Each end point of a line segment is also a point of the realm. 3)No realm point lies within a <p> With the relational model, there is no simple way to model a path structure, as is found in networks. Current research is focused on the explicit representation of graphs as first class objects, resulting in a more natural representation and query facility <ref> [25, 20] </ref>. Partitions also need to be modeled and queried in a GIS. Partitions are related to networks in that they associate regions with other regions by relationships such as next, adjacent, etc. <p> Extensibility will be needed to define new types as specializations of existing types as well as to compose existing types. Associated with extensibility are several additional requirements specified by Guting <ref> [25] </ref>. Extensibility poses difficulties when trying to establish the formal properties of the types in a database. It is useful to know whether the types and operations on the types are complete. Furthermore, extensibility requires that additional methods be defined for new types.
Reference: [26] <author> R. H. Guting. </author> <title> "Gral: An Extensible Relational Database System for Geometric Applications". </title> <booktitle> In Proc. of Intl Conference on Very Large Data Bases, </booktitle> <year> 1989. </year>
Reference-contexts: Guting represents the underlying space as a realm, and introduces an algebra to formalize the notions of class hierarchy and relationships. 3.5 Worboy's Model Worboy [48, 48, 49] presents an overview of object-modeling in GIS as well as an extension of the data model developed by Guting <ref> [26] </ref>. Worboy's model is pictured in figure 11. The top of the hierarchy is named the Spatial class, and is the root of all vector objects with a spatial extent. The Point class and the Ext are direct subclasses of the Spatial class.
Reference: [27] <author> R. H. Guting. "GraphDB: </author> <title> Modeling and Querying Graphs in Databases". </title> <booktitle> In Proc. of Intl Conference on Very Large Data Bases, </booktitle> <year> 1994. </year>
Reference-contexts: A type hierarchy can be achieved by using a formalism such as a type hierarchy or lattice structure [22, 7, 46]. Let (D; ) represent a finite set whose elements are called data types <ref> [27] </ref>, where the notion of a subtype (or partial-order) organizes the data types D into a tree structure, meaning that 8a; b 2 D : a b V W 2.6 Data Consistency and Quality As in relational database theory, GIS require that every transaction leave the database in a consistent state. <p> While on the surface this appears to be simple, a deeper look at GIS requirements shows us that this is not the case. Several researchers have attempted to formally model GIS requirements by the use of mathematical techniques such as nested-algebra <ref> [27] </ref> or by logic [39]. While formal modeling is important and useful, GIS must be implemented with tools available in the commercial world and must provide flexibility AND performance. Early attempts at GIS modeling focused on the relational model. <p> A relation can then be defined as a set of tuples with additional assertions. The challenge to the object-oriented community is to incorporate assertions such as those specified in OGIS into a practical object oriented language/database. 3.4 GraphDB GraphDB <ref> [27] </ref> supports the explicit modeling and querying of graphs, in particular of spatially embedded networks, which are an important part of geographic information. Examples of spatial networks are highways, rivers, public transportation systems, power and phone lines, etc.
Reference: [28] <author> P. Haggett and R. J. Chorley. </author> <title> "Network Analysis in Geography". </title> <address> St. </address> <publisher> Martin's Press, </publisher> <address> New York, </address> <year> 1969. </year>
Reference-contexts: For example, a network representing highway locations can be joined with a point database of accident locations to yield a profile of high accident roadways. Topological operators include routing operations such as shortest-path analysis, as well as operations such as the location-allocation problem <ref> [47, 37, 28] </ref>. 2.8 Other A GIS must allow a user to express and query objects for category membership. A category relationship allows a user to model situations in which an object could be one of several types, as in the example shown in 14.
Reference: [29] <author> P.A. Hancock, S. Shekhar, J.K. Caird, and M. Coyle. </author> <title> Human factors safety issues in ivhs. </title> <booktitle> Human Factors Journal, </booktitle> <year> 1991. </year>
Reference-contexts: The example is taken from a GIS transportation application, the design of a database for Intelligent Vehicle Highway Systems (IVHS). IVHS are being developed to improve the safety and efficiency of highway travel <ref> [29] </ref>. In Figure 3, three sources of data are pictured. First, sensors on highways produce measurements of traffic flow at regular intervals of thirty seconds. These sensors are located on most highways at regular intervals. <p> The TMC may need information from the highway sensors and drivers in order to effectively manage traffic controlling instruments such as ramp meters and stoplights. Also, researchers will often use the data from an IVHS for visualization and research on traffic management and human safety issues <ref> [29] </ref>. For example, human factors researchers will use data about the road network to construct graphic representations of the roads. The graphic representations will be combined with traffic flow information obtained from sensors to allow researchers to model and predict the causes of severe highway accidents. <p> The graphic representations will be combined with traffic flow information obtained from sensors to allow researchers to model and predict the causes of severe highway accidents. The Human Factors Lab at the University of Minnesota, for instance, has used this data to research the causes of left-turn accidents <ref> [29] </ref>. We now summarize the data types involved in a typical IVHS GIS system. Table 1 lists the data types we have discussed. We have classified the data into the data types we will discuss more fully in subsequent sections.
Reference: [30] <author> Z. Huang and P. Svensson. </author> <title> "Neighborhood Query and Analysis with GeoSAL, a Spatial Database Language". </title> <editor> In D. Abel and B. C. Ooi (Eds.), </editor> <booktitle> Advances in Spatial Databases 3rd Symposium, SSD'93, </booktitle> <pages> pages 413-436, </pages> <address> Berlin, 1993. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: The data model used for several research projects, such as Sequoia 2000, is based on the OGIS data model. An example GIS application being implemented by Sequoia 2000 is a Spatial Database for Satellite Imagery. 3.7 GeoSAL GeoSAL <ref> [30] </ref> provides system-predefined non-spatial types and spatial types with type inheritance, and also allows the user to define new types and type inheritance. Figure 12 shows the GeoSAL type hierarchy.
Reference: [31] <author> A. T. F. Hutt. </author> <title> Object Analysis and Design: Description of Methods, OMG. </title> <publisher> John Wiley and Sons, </publisher> <year> 1994. </year>
Reference-contexts: We first describe the basic concepts of the OO data model and the domain of GIS. 1.1 Object Oriented Data Model Object oriented databases (OODBs) [6, 9, 12, 16, 33, 35] have evolved in parallel with object oriented analysis and design techniques <ref> [21, 31] </ref> in software engineering. OODBs have focused mostly on data modeling and has many unique concepts. In this subsection, we summarize the basic concepts of OODBs in an informal manner.
Reference: [32] <editor> R. Jain. </editor> <booktitle> Nsf workshop on visual information management systems. SIGMOD Record, </booktitle> <volume> 22(3), </volume> <month> September </month> <year> 1993. </year>
Reference-contexts: Regions represent abstractions of entities which have a two or three-dimensional extent and can be represented by three or more lines. GIS must incorporate both raster and vector models in order to provide the level of functionality required by end users <ref> [32] </ref>. Since raster images can usually be associated with a geographic domain (i.e. a satellite represents a view of the earth's surface), there will be a spatial extent associated with it that is different from its image coordinates.
Reference: [33] <author> A. Kemper and G. Moerkotte. </author> <title> Chapter 5, Object-Oriented Data Management. </title> <publisher> Prentice-Hall, </publisher> <year> 1994. </year>
Reference-contexts: 1 Introduction Object Oriented (OO) databases and object data models <ref> [6, 9, 12, 16, 33, 35] </ref> were advanced in the last decade to address the "impedance-mismatch" between the relational model [15] and nonstandard applications such as geographic information systems, CAD/CAM, software engineering, etc. Several object-oriented databases have been developed since then. <p> This paper discusses the experiences of using OO data models in GIS in order to assess their strengths and weaknesses. We first describe the basic concepts of the OO data model and the domain of GIS. 1.1 Object Oriented Data Model Object oriented databases (OODBs) <ref> [6, 9, 12, 16, 33, 35] </ref> have evolved in parallel with object oriented analysis and design techniques [21, 31] in software engineering. OODBs have focused mostly on data modeling and has many unique concepts. In this subsection, we summarize the basic concepts of OODBs in an informal manner. <p> In this subsection, we summarize the basic concepts of OODBs in an informal manner. However, complete or formal coverage of the emerging area of object-oriented database models is outside the scope of this paper, and we refer interested readers to <ref> [6, 9, 12, 16, 33, 35] </ref> for further details. Basic Model The basic data modeling concepts supported by most OODBs are described below: Objects and object identifiers : Each real-world entity is represented by an object with a state and a behavior. <p> It is a consensus that the relational data model, while 21 effective in modeling simple record-oriented logical entities such as employees and departments, is not suited for modeling complex physical entities <ref> [33] </ref>. Some of the advantages of using an object-oriented data model over the relational model in GIS-like applications are composite attributes, extensibility, data abstraction, and behavioral modeling. <p> The line-segment and point table are constructed similarly. In order to fit with the relational mode,l the individual polygons must be split up into smaller, atomic pieces. In order to collect all of the points of the polygon, expensive joins will be computed <ref> [33] </ref>. This expensive processing would be unnecessary had the entire structure of the object been clustered in one location. The modeling of complex objects such as points, lines and polygons seems trivial with the object data models we have looked at.
Reference: [34] <author> A. Kemper and M. Walruth. </author> <title> An analysis of gemetric modeling in database systems. </title> <journal> ACM Computing Surveys, </journal> <volume> 19(1), </volume> <year> 1987. </year>
Reference-contexts: Many GIS and related systems used the relational data model and its extensions in the last decade. A detailed survey and analysis of geometric modeling and its extensions in relational data models can be found in <ref> [34] </ref>. It is a consensus that the relational data model, while 21 effective in modeling simple record-oriented logical entities such as employees and departments, is not suited for modeling complex physical entities [33].
Reference: [35] <author> W. Kim and et. al. </author> <title> "Object-Oriented Concepts, Databases, and Applications". </title> <publisher> Addison-Wesley, </publisher> <year> 1989. </year>
Reference-contexts: 1 Introduction Object Oriented (OO) databases and object data models <ref> [6, 9, 12, 16, 33, 35] </ref> were advanced in the last decade to address the "impedance-mismatch" between the relational model [15] and nonstandard applications such as geographic information systems, CAD/CAM, software engineering, etc. Several object-oriented databases have been developed since then. <p> This paper discusses the experiences of using OO data models in GIS in order to assess their strengths and weaknesses. We first describe the basic concepts of the OO data model and the domain of GIS. 1.1 Object Oriented Data Model Object oriented databases (OODBs) <ref> [6, 9, 12, 16, 33, 35] </ref> have evolved in parallel with object oriented analysis and design techniques [21, 31] in software engineering. OODBs have focused mostly on data modeling and has many unique concepts. In this subsection, we summarize the basic concepts of OODBs in an informal manner. <p> In this subsection, we summarize the basic concepts of OODBs in an informal manner. However, complete or formal coverage of the emerging area of object-oriented database models is outside the scope of this paper, and we refer interested readers to <ref> [6, 9, 12, 16, 33, 35] </ref> for further details. Basic Model The basic data modeling concepts supported by most OODBs are described below: Objects and object identifiers : Each real-world entity is represented by an object with a state and a behavior. <p> Semantic Extensions The basic object-oriented data model has been extended in current research. Some of the key extensions are described here, even though few OODBs support these concepts. Composite Objects : Additional semantics can be specified for the relationship between the objects related by an aggregation relationship <ref> [35] </ref>. A reference to another object may be classified as exclusive or shared. The relationship can also be classified as weak or composite, to differentiate between normal reference and part-of relationship. The existence of the sub-object can be specified to be dependent-on or independent-of an aggregate complex object.
Reference: [36] <author> K.J. Dueker and D. Kjerne. </author> <title> Multipurpose Cadastre: Terms and Definitions. </title> <booktitle> In Proceedings of the Annual Convention of ACSM-ASPRS, </booktitle> <volume> volume 5, </volume> <year> 1989. </year>
Reference-contexts: A GIS, therefore, is "a system of hardware, software, data, people, organizations, and institutional arrangements for collecting, storing, analyzing, and disseminating information about areas of the earth" <ref> [36] </ref>. An important function of GIS is processing geographic information, which includes geometric features such as polygons and regions, etc., as shown in figure 1 and figure 2. 2 GIS appeared in the early 1970's, and were originally designed and used by areas such as forestry and environmental studies.
Reference: [37] <author> R. Laurini and D. Thompson. </author> <title> "Fundamentals of Spatial Information Systems", </title> <booktitle> chapter 5 and 2.5.4. Number 37 in The A.P.I.C. Series. </booktitle> <publisher> Academic Press, </publisher> <year> 1992. </year>
Reference-contexts: For example, a network representing highway locations can be joined with a point database of accident locations to yield a profile of high accident roadways. Topological operators include routing operations such as shortest-path analysis, as well as operations such as the location-allocation problem <ref> [47, 37, 28] </ref>. 2.8 Other A GIS must allow a user to express and query objects for category membership. A category relationship allows a user to model situations in which an object could be one of several types, as in the example shown in 14.
Reference: [38] <institution> US Department of Commerce. TIGER/Line TM Files. Bureau of the Census, </institution> <address> Washington, D.C., </address> <year> 1993. </year>
Reference-contexts: Applications may utilize both raster and image data in which the raster and vector images correspond to the same real-world objects. An example application may use new raster images representing aerial views of a city region to update existing vector data representing road segments (e.g. TIGER <ref> [38] </ref> files). The inclusion of both data types in a single application poses interesting requirements when modeling the space.
Reference: [39] <author> G.C. Roman. </author> <title> "Formal Specification of Geographic Data Processing Requirements". </title> <journal> IEEE Trans. on Knowledge and Data Engineering, </journal> <volume> 2(4), </volume> <month> December </month> <year> 1990. </year>
Reference-contexts: In this section we outline the data modeling, query, and data integrity requirements of GIS in an informal manner. Readers are referred to <ref> [39] </ref> for a more formal discussion. We concentrate on requirements related to the manipulations and modeling of the spatially and temporally referenced data. <p> While on the surface this appears to be simple, a deeper look at GIS requirements shows us that this is not the case. Several researchers have attempted to formally model GIS requirements by the use of mathematical techniques such as nested-algebra [27] or by logic <ref> [39] </ref>. While formal modeling is important and useful, GIS must be implemented with tools available in the commercial world and must provide flexibility AND performance. Early attempts at GIS modeling focused on the relational model.
Reference: [40] <author> L. A. Rowe and M. R. Stonebraker. </author> <title> "The POSTGRES Data Model". </title> <booktitle> In Proc. of Intl Conference on Very Large Data Bases, </booktitle> <year> 1989. </year>
Reference-contexts: Heterogeneous collections would have to be modeled by the user as a separate class, with attributes that include collections of each type of primitive object. Worboy also does not include raster objects or the temporal dimension. 3.6 Sequoia 2000 The POSTGRES system <ref> [40] </ref> is a generic, extensible, relational database, formed with object-oriented data modeling constructs, including structured attribute types, inheritance and support for shared sub-objects, etc. POSTGRES is being used for the management of large amounts of geographical and environment data in Sequoia 2000 [45].
Reference: [41] <author> S. Shekhar, A. Kohli and M. Coyle. </author> <title> Path Computation Algorithms for Advanced Traveller Information S ystem. </title> <booktitle> In Proc. of the Ninth Intl. Conf. on Data Engineering, </booktitle> <pages> pages 31-39. </pages> <publisher> IEEE, </publisher> <month> April </month> <year> 1993. </year>
Reference-contexts: In the Twin Cities metropolitan area, there are about 5000 sensors on the highway network, with many more being planned. Most of this data is used as it arrives, although the historical data is used for model predictions, testing, and other analyses. In ATIS applications <ref> [41, 43, 44] </ref>, the computation of routes over highways is viewed as a dynamic problem, with new information regarding road blockages, congestion, etc. arriving continuously. <p> Furthermore, data accuracy and quality are not addressed in most models. * Networks and Partitions : Networks are an important application area for GIS. Network models can be used for processes such as the modeling of traffic on roadways <ref> [41] </ref> and for the networks of public utilities such as telephones. Partitions occur in public boundaries and related applications.
Reference: [42] <author> S. Shekhar and D.R. Liu and M. Coyle. </author> <title> An Evaluation of Access Methods for Spatial Networks. </title> <booktitle> In Proceedings of the ACM GIS Workshop, </booktitle> <year> 1994. </year>
Reference-contexts: These models are used for applications such as contour-generation, feature-extraction, etc. * Network Analysis: Networks are a crucial area of application for GIS <ref> [42] </ref>, and they include operations such as dynamic segmentation and network overlay. Dynamic segmentation refers to the computation of coordinates from linear references "on the fly". For example, census data on home addresses is typically stored as the house address at the street corners.
Reference: [43] <author> S. Shekhar and D. R. Liu. </author> <title> "CCAM : A Connectivity-Clustered Access Method for Aggregate Queries on Transportation Networks". </title> <booktitle> In Proc. of the Eleventh Intl Conference on Data Engineering. </booktitle> <institution> IEEE, </institution> <note> to appear in March 1995. </note>
Reference-contexts: In the Twin Cities metropolitan area, there are about 5000 sensors on the highway network, with many more being planned. Most of this data is used as it arrives, although the historical data is used for model predictions, testing, and other analyses. In ATIS applications <ref> [41, 43, 44] </ref>, the computation of routes over highways is viewed as a dynamic problem, with new information regarding road blockages, congestion, etc. arriving continuously.
Reference: [44] <author> S. Shekhar, T. A. Yang, and P. A. Hancock. </author> <title> "An Intelligent Vehicle Highway Information Management System". </title> <booktitle> Microcomputers in Civil Engineering, </booktitle> <pages> pages 175-198, </pages> <year> 1993. </year>
Reference-contexts: In the Twin Cities metropolitan area, there are about 5000 sensors on the highway network, with many more being planned. Most of this data is used as it arrives, although the historical data is used for model predictions, testing, and other analyses. In ATIS applications <ref> [41, 43, 44] </ref>, the computation of routes over highways is viewed as a dynamic problem, with new information regarding road blockages, congestion, etc. arriving continuously. <p> In ATIS applications [41, 43, 44], the computation of routes over highways is viewed as a dynamic problem, with new information regarding road blockages, congestion, etc. arriving continuously. Since the computations require time to be included as an attribute, geometric objects such as "congestion" <ref> [44] </ref> must have a temporal basis as well as a spatial basis. Since many of the transportation problems are interactive decision-support systems, they must use the temporal nature of the data in order to obtain a correct or optimal solution.
Reference: [45] <author> M. Stonebraker. </author> <title> "The Sequoia 2000 Project". </title> <editor> In D. Abel and B. C. Ooi (Eds.), </editor> <booktitle> Advances in Spatial Databases 3rd Symposium, </booktitle> <address> SSD'93, Berlin, 1993. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: POSTGRES is being used for the management of large amounts of geographical and environment data in Sequoia 2000 <ref> [45] </ref>. Postgres has been extended in the commercial version Illustra [8] to include support for a very rich data set, including two and three-dimensional vector data, images, video, and text. The data model used for several research projects, such as Sequoia 2000, is based on the OGIS data model.
Reference: [46] <author> J.E. Stoy. </author> <title> The Scott-Strachey Approach to Programming Language Theory. </title> <publisher> MIT Press, </publisher> <year> 1977. </year>
Reference-contexts: The ability to construct new types is crucial in a general GIS, since it is not known what future data types will be needed. A type hierarchy can be achieved by using a formalism such as a type hierarchy or lattice structure <ref> [22, 7, 46] </ref>.
Reference: [47] <author> A.P. Vonderohe, L. Travis, R.L. Smith, and V. Tsai. </author> <title> "Report 359: Adaptation of Geographic Information System for Transportation". </title> <publisher> National Academy Press, </publisher> <address> Washington, D.C., </address> <year> 1993. </year> <month> 28 </month>
Reference-contexts: The DEM format is a raster-based model, in which the values in the raster represent elevation data. The TIN format is a topological vector-based approach, in which the three-dimensional data is partitioned into a continuous network of non-overlapping triangular facets from a set of randomly spaced points <ref> [47] </ref>. GIS Data also includes a temporal structure in addition to a spatial structure. Sensors in the IVHS database record traffic density every thirty seconds. This results in temporal data which end-users will want to query. <p> Thus, it is important to distinguish the operators from their data types in order to achieve the highest performance. * Proximity Analysis: <ref> [47] </ref> outlines several classes of proximity analysis. Included are operations to compute "zones of interest" around certain objects. <p> For example, a network representing highway locations can be joined with a point database of accident locations to yield a profile of high accident roadways. Topological operators include routing operations such as shortest-path analysis, as well as operations such as the location-allocation problem <ref> [47, 37, 28] </ref>. 2.8 Other A GIS must allow a user to express and query objects for category membership. A category relationship allows a user to model situations in which an object could be one of several types, as in the example shown in 14.
Reference: [48] <author> M.F. Worboy, K.T. Mason, and B.R.P Dawson. </author> <title> The Object-Based Paradigm for a Gegraphic Database System: </title> <booktitle> Modeling, Design, and Implementation Issues, chapter 10, </booktitle> <pages> pages 91-102. </pages> <publisher> John Wiley & Sons, </publisher> <year> 1993. </year>
Reference-contexts: Guting represents the underlying space as a realm, and introduces an algebra to formalize the notions of class hierarchy and relationships. 3.5 Worboy's Model Worboy <ref> [48, 48, 49] </ref> presents an overview of object-modeling in GIS as well as an extension of the data model developed by Guting [26]. Worboy's model is pictured in figure 11.
Reference: [49] <author> M. F. Worboys, H. M. Hearnshaw, and D. J. Maguire. </author> <title> "Object-oriented Data Modeling for Spatial Databases". </title> <journal> Intl Journal of Geographical Information Systems, </journal> <volume> 4(4), </volume> <year> 1990. </year> <month> 29 </month>
Reference-contexts: Until recently, the temporal aspect of GIS data has not been addressed adequately <ref> [49] </ref>. For example, road sensors on the highway measure the traffic flow approximately once every thirty seconds. In the Twin Cities metropolitan area, there are about 5000 sensors on the highway network, with many more being planned. <p> Guting represents the underlying space as a realm, and introduces an algebra to formalize the notions of class hierarchy and relationships. 3.5 Worboy's Model Worboy <ref> [48, 48, 49] </ref> presents an overview of object-modeling in GIS as well as an extension of the data model developed by Guting [26]. Worboy's model is pictured in figure 11.
References-found: 49

