URL: http://www.cs.vt.edu/~chitra/docs/javamatic/96tr/96tr.ps.gz
Refering-URL: http://www.cs.vt.edu/~chitra/javamatic.html
Root-URL: http://www.cs.vt.edu
Email: -phanouri, abrams-@cs.vt.edu  
Phone: +1 540 231 6931  
Title: Transforming Command-Line Driven Systems to Web Applications  
Author: Constantinos Phanouriou and Marc Abrams 
Keyword: Web applications, Java programming, legacy code  
Address: VA 24061-0106, USA  
Affiliation: Department of Computer Science Virginia Tech Blacksburg,  
Abstract: A method to add a Web-based interface to a command-line driven system is presented. Without programming, Javamatic can generate a graphical user interface, then invokes commands in the legacy system transparently to the user. The user interface (UI) is automatically generated as a Java applet or stand-alone interface from a high-level description of the application, which is UI independent, using a set of UI mapping rules. The application is wrapped with an interface server; thus multiple clients can use the legacy application through the Web. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> M. Abrams, A. Batongbacal, R. Ribler, D. Vazirani, Chitra94: </author> <title> A Tool to Dynamically Characterize Ensembles of Traces for Input Data Modeling and Output Analysis, </title> <institution> Dept. of Computer Science, Virginia Tech. </institution>
Reference-contexts: In fact, a variety of interface styles can be created. Fig. 6 shows two different examples of using Javamatic (links to these are also contained in [2]). Figure 6a shows a menu-based interface to Chitra <ref> [1] </ref>, a system to visualize, statistically analyze, and model what is known in different fields as trace files, log data, or time series data.
Reference: 2. <author> D. Geary and A. McClellan, </author> <title> Graphic Java: Mastering the AWT, 1997, </title> <publisher> SunSoft Press. </publisher>
Reference-contexts: specify the mapping from of those features to GUI components (dialog boxes, buttons, etc.) This is done by specifying UI mapping rules, which are the dotted lines from the Javamatic classes to classes in a graphical toolkit, such as the Abstract Windowing Toolkit (AWT) or the Graphical Java Toolkit (GJT) <ref> [2] </ref>. For IDrag, everything that is a category (e.g., nodes IDrag and Panel in the left of Fig. 5) is each mapped to a separate Frame in the AWT (producing the two windows in Fig. 1a and 1b). <p> In fact, a variety of interface styles can be created. Fig. 6 shows two different examples of using Javamatic (links to these are also contained in <ref> [2] </ref>). Figure 6a shows a menu-based interface to Chitra [1], a system to visualize, statistically analyze, and model what is known in different fields as trace files, log data, or time series data.
Reference: 3. <author> Java, Sun Microsystems, </author> <note> http://www.javasoft.com/. </note>
Reference-contexts: The application can be written in any programming language (compiled or interpreted) as long as the needed functionality is accessible from the command-line. Javamatic is a tool [4] that uses this method to create UIs in Java <ref> [3] </ref>. Web applications are applications designed to allow any authorized user with a WWW browser and an Internet connection to interact with them. Javamatic can transform legacy command-line driven applications to Web applications. The legacy code sits on a remote machine and is wrapped with a Javamatic interface server.
Reference: 4. <author> Javamatic Web Page, </author> <note> http://www.cs.vt.edu/javamatic/ (20 February, </note> <year> 1997). </year>
Reference-contexts: It does not require any changes to the application code, nor does it require application recompilation with special toolkits. The application can be written in any programming language (compiled or interpreted) as long as the needed functionality is accessible from the command-line. Javamatic is a tool <ref> [4] </ref> that uses this method to create UIs in Java [3]. Web applications are applications designed to allow any authorized user with a WWW browser and an Internet connection to interact with them. Javamatic can transform legacy command-line driven applications to Web applications. <p> During program execution the user could not interact with the program. A user could only change input parameters by editing the input file and re-executing the program. Javamatic changed all this. Today, anyone worldwide can visit a Web page (linked from <ref> [4] </ref>), click on a link to start the Javamatic interface to IDrag, and see a modern graphical UI (GUI) to the program (Fig. 1). The program is now accessible from non-UNIX computers, even though IDrag itself was never ported to non-UNIX computers.
References-found: 4

