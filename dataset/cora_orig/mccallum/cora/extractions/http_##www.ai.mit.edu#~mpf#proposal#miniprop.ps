URL: http://www.ai.mit.edu/~mpf/proposal/miniprop.ps
Refering-URL: 
Root-URL: 
Title: Programming Reversible Computers  $Revision: 2.8  
Author: Michael P. Frank 
Degree: Ph.D. Thesis Proposal  
Date: Started August 27, 1996.  December 5, 1996.  December 20, 1996.  
Web: http://www.ai.mit.edu/~mpf  http://www.ai.mit.edu/~mpf/proposal/proposal.html  
Address: Rm. 747 545 Technology Sq. Cambridge, MA 02139  
Affiliation: MIT AI Lab,  
Note: (Concise Version for Submission)  Concise version started  Formatted on  Revision checkpoint on $Date: 1996/12/20 17:37:03 A current version and the earlier, more verbose version are available online at  
Abstract-found: 0
Intro-found: 0
Reference: [1] <author> C. H. Bennett. </author> <title> Logical reversibility of computation. </title> <journal> IBM Journal of Research and Development, </journal> <volume> 6 </volume> <pages> 525-532, </pages> <year> 1973. </year>
Reference: [2] <author> C. H. Bennett. </author> <title> Time/space trade-offs for reversible computation. </title> <journal> Society for Industrial and Applied Mathematics Journal on Computing, </journal> <volume> 18(4) </volume> <pages> 766-776, </pages> <year> 1989. </year>
Reference-contexts: Therefore, we would prefer to compute in a way that produces less of this "garbage data" in the first place. Bennett <ref> [2] </ref> has shown that any algorithm can be transformed into a form that produces garbage data at a rate that decreases steadily as the algorithm runs, so that the total accumulation of garbage data is only a logarithmic function of run time, and is thus reasonable to store.
Reference: [3] <author> Thomas H. Cormen, Charles E. Leiserson, and Ronald R. Rivest. </author> <title> Introduction to Algorithms. </title> <publisher> MIT Press/McGraw-Hill, </publisher> <year> 1990. </year>
Reference-contexts: The zero-cost reversible primitives, together with the erase instruction, constitute a sufficient language for describing arbitrary algorithms and analyzing their thermodynamic complexity. My plan for my study of thermodynamic complexity is as follows: 1. For a number of practical and interesting algorithms from traditional computer science (e.g., from <ref> [3] </ref>), such as algorithms for sorting, searching, and optimization problems, I will determine the algorithms' thermodynamic complexity when they are translated to the form of reversible primitives plus erase in the most straightforward way.
Reference: [4] <author> Robert Y. Levine and Alan T. Sherman. </author> <title> A note on Bennett's time-space tradeoff for reversible computation. </title> <journal> Society for Industrial and Applied Mathematics Journal on Computing, </journal> <volume> 19(4) </volume> <pages> 673-677, </pages> <year> 1990. </year>
Reference-contexts: However, Bennett's technique suffers from the drawback that the run time t of the algorithm is multiplied by a polynomial factor of O (t * ); * can be made arbitrarily small, but only at the cost of exponentially increasing space <ref> [4] </ref>. 2.1 Important Open Questions Other techniques besides the above are known for transforming arbitrary irreversible algorithms into reversible ones, but all known techniques involve prohibitive asymptotic increases in either time complexity, space complexity, or both. However, no one has proven that such inefficiencies are actually required to compute reversibly.
Reference: [5] <author> Tommaso Toffoli. </author> <title> Computation and construction universality of reversible cellular automata. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 15 </volume> <pages> 213-231, </pages> <year> 1977. </year>
Reference-contexts: in the thesis, but not in this short proposal. 2 The Efficiency of Reversible Computing Theorists have shown that reversible computers can do anything that normal computers can do, via the simple expedient of saving all the information (such as intermediate results) that a normal computer would throw away ([1], <ref> [5] </ref>). Unfortunately, this approach simply transforms the problem of how to get rid 3 of unwanted heat into the problem of how to get rid of unwanted information.
Reference: [6] <author> Carlin J. Vieri. Pendulum: </author> <title> A reversible computer architecture. </title> <type> Master's thesis, </type> <institution> MIT Artificial Intelligence Laboratory, </institution> <year> 1995. </year>
Reference-contexts: However, we will assume that the architecture provides a universal set of reversible computational primitives which all incur a thermodynamic cost of zero, that is, they are implemented in a way that does not erase any bits internally. The Pendulum architecture designed by Carlin Vieri <ref> [6] </ref> is an example of such an architecture. In fact, Pendulum does not provide any irreversible primitives, and is not meant to be used to program partially-reversible algorithms.
Reference: [7] <author> S. G. Younis. </author> <title> Asymptotically Zero Energy Computing Using Split-Level Charge Recovery Logic. </title> <type> PhD thesis, </type> <institution> MIT Artificial Intelligence Laboratory, </institution> <year> 1994. </year>
Reference-contexts: But even this much larger energy dissipation can be avoided if the computation is done reversibly, using adiabatic circuit techniques such as SCRL <ref> [7] </ref>. The energy dissipated when bits are erased becomes a serious problem as we extrapolate current trends in computer technology to ever-higher component densities and speeds.
References-found: 7

