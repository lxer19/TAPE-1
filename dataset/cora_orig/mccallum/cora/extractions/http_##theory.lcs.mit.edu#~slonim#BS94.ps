URL: http://theory.lcs.mit.edu/~slonim/BS94.ps
Refering-URL: http://theory.lcs.mit.edu/~slonim/team.html
Root-URL: 
Title: The Power of Team Exploration: Two Robots Can Learn Unlabeled Directed Graphs  
Author: Michael A. Bender Donna K. Slonim 
Address: 545 Technology Square Cambridge, MA 02138 Cambridge, MA 02139  
Affiliation: Aiken Computation Laboratory MIT Laboratory for Computer Science Harvard University  
Abstract: We show that two cooperating robots can learn exactly any strongly-connected directed graph with n indistinguishable nodes in expected time polynomial in n. We introduce a new type of homing sequence for two robots which helps the robots recognize certain previously-seen nodes. We then present an algorithm in which the robots learn the graph and the homing sequence simultaneously by wandering actively through the graph. Unlike most previous learning results using homing sequences, our algorithm does not require a teacher to provide counterexamples. Furthermore, the algorithm can use efficiently any additional information available that distinguishes nodes. We also present an algorithm in which the robots learn by taking random walks. The rate at which a random walk converges to the stationary distribution is characterized by the conductance of the graph. Our random-walk algorithm learns in expected time polynomial in n and in the inverse of the conductance and is more efficient than the homing-sequence algorithm for high-conductance graphs. 
Abstract-found: 1
Intro-found: 1
Reference: [Ang81] <author> Dana Angluin. </author> <title> A note on the number of queries needed to identify regular languages. </title> <journal> Information and Control, </journal> <volume> 51 </volume> <pages> 76-87, </pages> <year> 1981. </year>
Reference-contexts: It then runs several copies of Angluin's algorithm [Ang87] for learning DFAs given a reset. Angluin has shown that any algorithm for learning DFAs by exploration requires an equivalence oracle <ref> [Ang81] </ref>. We introduce a new type of homing sequence for two robots. Because of the strength of the homing sequence, our algorithm does not require an equivalence oracle. For any graph, the expected running time of our algorithm is O (d 2 n 5 ). <p> In fact, two robots on a graph define a DFA whose states are pairs of nodes in G and whose edges correspond to pairs of actions. Since the automata defined in this way form a restricted class of DFAs, our results are compatible with Angluin's work <ref> [Ang81] </ref> showing that a teacher is necessary for learning general DFAs. Given a strongly-connected graph G and a node a in G, a pair of robots can verify whether they are together at a node equivalent to a on some graph isomorphic to G.
Reference: [Ang87] <author> Dana Angluin. </author> <title> Learning regular sets from queries and counterexamples. </title> <journal> Information and Computation, </journal> <volume> 75 </volume> <pages> 87-106, </pages> <month> Novem-ber </month> <year> 1987. </year>
Reference-contexts: Rivest and Schapire [RS93] present an algorithm for a single robot to learn minimal deterministic finite automata. With the help of an equivalence oracle, their algorithm learns a homing sequence which it uses in place of a reset function. It then runs several copies of Angluin's algorithm <ref> [Ang87] </ref> for learning DFAs given a reset. Angluin has shown that any algorithm for learning DFAs by exploration requires an equivalence oracle [Ang81]. We introduce a new type of homing sequence for two robots. Because of the strength of the homing sequence, our algorithm does not require an equivalence oracle.
Reference: [BK78] <author> Manuel Blum and Dexter Kozen. </author> <title> On the power of the compass (or, why mazes are easier to search than graphs). </title> <booktitle> In 19th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 132-142. </pages> <publisher> IEEE, </publisher> <year> 1978. </year>
Reference-contexts: There are also many results on learning unknown graphs under various conditions (e.g., [BRS93], [DP90], [RS87], [RS93]). Ra-bin proposed the idea of dropping pebbles to mark nodes [Rab67]. This suggestion led to work exploring the searching capabilities of a finite automaton supplied with pebbles (e.g., [BS77], <ref> [BK78] </ref>, [Sav72]). Cook and Rackoff generalized the idea of pebbles to jumping automata [CR80]. However, most previous work has concentrated on learning undirected graphs or graphs with distinguishable nodes. The power behind the two-robot model lies in the robots' abilities to recognize each other and to move independently.
Reference: [BRS93] <author> Margrit Betke, Ronald Rivest, and Mona Singh. </author> <title> Piecemeal learning of an unknown environment. </title> <booktitle> In Proceedings of the 1993 Conference on Computational Learning Theory, </booktitle> <pages> pages 277-286, </pages> <address> Santa Cruz, CA, </address> <month> July </month> <year> 1993. </year> <note> (Published as MIT AI-Memo 1474, CBCL-Memo 93; to be published in Machine Learning). </note>
Reference-contexts: Previous results showing the power of team learning are plentiful (e.g., [CBF + 93], [KS93], [DP + 91]), particularly in the field of inductive inference (see Smith [Smi94] for an excellent survey). There are also many results on learning unknown graphs under various conditions (e.g., <ref> [BRS93] </ref>, [DP90], [RS87], [RS93]). Ra-bin proposed the idea of dropping pebbles to mark nodes [Rab67]. This suggestion led to work exploring the searching capabilities of a finite automaton supplied with pebbles (e.g., [BS77], [BK78], [Sav72]). Cook and Rackoff generalized the idea of pebbles to jumping automata [CR80].
Reference: [BS77] <author> M. Blum and W. J. Sakoda. </author> <title> On the capability of finite automata in 2 and 3 dimensional space. </title> <booktitle> In 18th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 147-161. </pages> <publisher> IEEE, </publisher> <year> 1977. </year>
Reference-contexts: There are also many results on learning unknown graphs under various conditions (e.g., [BRS93], [DP90], [RS87], [RS93]). Ra-bin proposed the idea of dropping pebbles to mark nodes [Rab67]. This suggestion led to work exploring the searching capabilities of a finite automaton supplied with pebbles (e.g., <ref> [BS77] </ref>, [BK78], [Sav72]). Cook and Rackoff generalized the idea of pebbles to jumping automata [CR80]. However, most previous work has concentrated on learning undirected graphs or graphs with distinguishable nodes. The power behind the two-robot model lies in the robots' abilities to recognize each other and to move independently.
Reference: [CBF + 93] <author> N. Cesa-Bianchi, Y. Freund, D. Helmbold, D. Haussler, R. Schapire, and M. War-muth. </author> <title> How to use expert advice. </title> <booktitle> In Proceedings of the Eighteenth Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 382-391, </pages> <address> San Diego, CA, </address> <month> May </month> <year> 1993. </year>
Reference-contexts: If we assume that the two robots move synchronously and share a polynomial-length random string, then no communication is necessary. Thus with only minor modifications, our algorithms may be used in a distributed setting. Previous results showing the power of team learning are plentiful (e.g., <ref> [CBF + 93] </ref>, [KS93], [DP + 91]), particularly in the field of inductive inference (see Smith [Smi94] for an excellent survey). There are also many results on learning unknown graphs under various conditions (e.g., [BRS93], [DP90], [RS87], [RS93]). Ra-bin proposed the idea of dropping pebbles to mark nodes [Rab67].
Reference: [CR80] <author> Stephen A. Cook and Charles W. Rackoff. </author> <title> Space lower bounds for maze threadability on restricted machines. </title> <journal> SIAM Journal on Computing, </journal> <volume> 9 </volume> <pages> 636-652, </pages> <year> 1980. </year>
Reference-contexts: Ra-bin proposed the idea of dropping pebbles to mark nodes [Rab67]. This suggestion led to work exploring the searching capabilities of a finite automaton supplied with pebbles (e.g., [BS77], [BK78], [Sav72]). Cook and Rackoff generalized the idea of pebbles to jumping automata <ref> [CR80] </ref>. However, most previous work has concentrated on learning undirected graphs or graphs with distinguishable nodes. The power behind the two-robot model lies in the robots' abilities to recognize each other and to move independently. Nonetheless, it is not obvious how to harness this power.
Reference: [DP90] <author> Xiaotie Deng and Christos H. Papadim-itriou. </author> <title> Exploring an unknown graph. </title> <booktitle> In Proceedings of the 31st Symposium on Foundations of Computer Science, </booktitle> <volume> volume I, </volume> <pages> pages 355-361, </pages> <year> 1990. </year>
Reference-contexts: Previous results showing the power of team learning are plentiful (e.g., [CBF + 93], [KS93], [DP + 91]), particularly in the field of inductive inference (see Smith [Smi94] for an excellent survey). There are also many results on learning unknown graphs under various conditions (e.g., [BRS93], <ref> [DP90] </ref>, [RS87], [RS93]). Ra-bin proposed the idea of dropping pebbles to mark nodes [Rab67]. This suggestion led to work exploring the searching capabilities of a finite automaton supplied with pebbles (e.g., [BS77], [BK78], [Sav72]). Cook and Rackoff generalized the idea of pebbles to jumping automata [CR80].
Reference: [DP + 91] <author> Robert Daley, Leonard Pitt, Mahendran Velauthapillai, and Todd Will. </author> <title> Relations between probabilistic and team one-shot learners. </title> <booktitle> In Proceedings of COLT '91, </booktitle> <pages> pages 228-239. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1991. </year>
Reference-contexts: If we assume that the two robots move synchronously and share a polynomial-length random string, then no communication is necessary. Thus with only minor modifications, our algorithms may be used in a distributed setting. Previous results showing the power of team learning are plentiful (e.g., [CBF + 93], [KS93], <ref> [DP + 91] </ref>), particularly in the field of inductive inference (see Smith [Smi94] for an excellent survey). There are also many results on learning unknown graphs under various conditions (e.g., [BRS93], [DP90], [RS87], [RS93]). Ra-bin proposed the idea of dropping pebbles to mark nodes [Rab67].
Reference: [Koh78] <author> Zvi Kohavi. </author> <title> Switching and Finite Automata Theory. </title> <publisher> McGraw-Hill, </publisher> <address> second edition, </address> <year> 1978. </year>
Reference-contexts: We describe a verification algorithm Verify (a, G) in Section 5. Theorem 3 Every strongly-connected directed graph has a two-robot homing sequence. Proof: The following algorithm (based on that of Kohavi <ref> [Koh78, RS93] </ref>) constructs a homing sequence: Initially, let h be empty. As long as there are two nodes u and v in G such that output (h,u) = output (h,v) but final (h,u) 6 final (h,v), let x be a lead-lag sequence whose output distinguishes final (h,u) from final (h,v).
Reference: [KS93] <author> Michael J. Kearns and H. Sebastian Seung. </author> <title> Learning from a population of hypotheses. </title> <booktitle> In Proceedings of COLT '93, </booktitle> <pages> pages 101-110, </pages> <year> 1993. </year>
Reference-contexts: If we assume that the two robots move synchronously and share a polynomial-length random string, then no communication is necessary. Thus with only minor modifications, our algorithms may be used in a distributed setting. Previous results showing the power of team learning are plentiful (e.g., [CBF + 93], <ref> [KS93] </ref>, [DP + 91]), particularly in the field of inductive inference (see Smith [Smi94] for an excellent survey). There are also many results on learning unknown graphs under various conditions (e.g., [BRS93], [DP90], [RS87], [RS93]). Ra-bin proposed the idea of dropping pebbles to mark nodes [Rab67].
Reference: [Mih89] <author> Milena Mihail. </author> <title> Conductance and convergence of Markov chains a combinatorial treatment of expanders. </title> <booktitle> In Proceedings of the 34th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 526-531, </pages> <year> 1989. </year>
Reference-contexts: Then the conductance of S is defined as S = W S;S = P The conductance of a graph is the least conduc tance over all cuts whose total weight is at most W V 2 : : The conductance of a directed graph can be exponentially small. Mihail <ref> [Mih89] </ref> shows that after a walk of length 2 log 2n * 2 , the L 1 norm of the distance between the current distribution P and the stationary distribution is at most * (i.e. P i jP i i j *).
Reference: [Moo56] <author> Edward F. Moore. </author> <booktitle> Gedanken-Experiments on Sequential Machines, </booktitle> <pages> pages 129-153. </pages> <publisher> Princeton University Press, </publisher> <year> 1956. </year> <title> Edited by C. </title> <editor> E. Shannon and J. </editor> <publisher> McCarthy. </publisher>
Reference-contexts: We argue here that a single robot with a constant number of pebbles cannot efficiently learn strongly-connected directed graphs without prior knowledge of n. As a tool we introduce a family C = [ n C n of graphs called combination locks <ref> [Moo56] </ref>.
Reference: [Rab67] <author> Michael O. Rabin. </author> <title> Maze threading automata. </title> <month> October </month> <year> 1967. </year> <institution> Seminar talk presented at the University of California at Berkeley. </institution>
Reference-contexts: There are also many results on learning unknown graphs under various conditions (e.g., [BRS93], [DP90], [RS87], [RS93]). Ra-bin proposed the idea of dropping pebbles to mark nodes <ref> [Rab67] </ref>. This suggestion led to work exploring the searching capabilities of a finite automaton supplied with pebbles (e.g., [BS77], [BK78], [Sav72]). Cook and Rackoff generalized the idea of pebbles to jumping automata [CR80]. However, most previous work has concentrated on learning undirected graphs or graphs with distinguishable nodes.
Reference: [RS87] <author> Ronald L. Rivest and Robert E. Schapire. </author> <title> Diversity-based inference of finite automata. </title> <booktitle> In Proceedings of the Twenty-Eighth Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 78-87, </pages> <address> Los An-geles, California, </address> <month> October </month> <year> 1987. </year>
Reference-contexts: Previous results showing the power of team learning are plentiful (e.g., [CBF + 93], [KS93], [DP + 91]), particularly in the field of inductive inference (see Smith [Smi94] for an excellent survey). There are also many results on learning unknown graphs under various conditions (e.g., [BRS93], [DP90], <ref> [RS87] </ref>, [RS93]). Ra-bin proposed the idea of dropping pebbles to mark nodes [Rab67]. This suggestion led to work exploring the searching capabilities of a finite automaton supplied with pebbles (e.g., [BS77], [BK78], [Sav72]). Cook and Rackoff generalized the idea of pebbles to jumping automata [CR80].
Reference: [RS93] <author> Ronald L. Rivest and Robert E. Schapire. </author> <title> Inference of finite automata using homing sequences. </title> <journal> Information and Computation, </journal> <volume> 103(2) </volume> <pages> 299-347, </pages> <month> April </month> <year> 1993. </year>
Reference-contexts: Previous results showing the power of team learning are plentiful (e.g., [CBF + 93], [KS93], [DP + 91]), particularly in the field of inductive inference (see Smith [Smi94] for an excellent survey). There are also many results on learning unknown graphs under various conditions (e.g., [BRS93], [DP90], [RS87], <ref> [RS93] </ref>). Ra-bin proposed the idea of dropping pebbles to mark nodes [Rab67]. This suggestion led to work exploring the searching capabilities of a finite automaton supplied with pebbles (e.g., [BS77], [BK78], [Sav72]). Cook and Rackoff generalized the idea of pebbles to jumping automata [CR80]. <p> We show that no probabilistic polynomial-time algorithm for a single robot with a constant number of pebbles can learn all unlabeled directed graphs when n is unknown. Thus, our algorithms demonstrate that two robots are strictly more powerful than one. Rivest and Schapire <ref> [RS93] </ref> present an algorithm for a single robot to learn minimal deterministic finite automata. With the help of an equivalence oracle, their algorithm learns a homing sequence which it uses in place of a reset function. <p> In this section we suggest an alternative technique: we introduce a new type of homing sequence for two robots. Intuitively, a homing sequence is a sequence of actions whose observed output uniquely determines the final node reached in G. Rivest and Schapire <ref> [RS93] </ref> show how a single robot with a teacher can use homing sequences to learn strongly-connected minimal DFAs. The output at each node indicates whether that node is an accepting or rejecting state of the automaton. <p> We describe a verification algorithm Verify (a, G) in Section 5. Theorem 3 Every strongly-connected directed graph has a two-robot homing sequence. Proof: The following algorithm (based on that of Kohavi <ref> [Koh78, RS93] </ref>) constructs a homing sequence: Initially, let h be empty. As long as there are two nodes u and v in G such that output (h,u) = output (h,v) but final (h,u) 6 final (h,v), let x be a lead-lag sequence whose output distinguishes final (h,u) from final (h,v). <p> The proof of Theorem 8, which will appear in the full paper, relies on the preceding lemmas and Theorem 4. 5.1 Improvements to the Algorithm The running time for Learn-Graph can be diminished significantly. For example, we can use two-robot adaptive homing sequences. As in Rivest and Schapire <ref> [RS93] </ref>, an adaptive homing sequence is a decision tree, so the actions in later steps of the sequence depend on the output of earlier steps. With an adaptive homing sequence, only one map c needs to be discarded each time the homing sequence is improved.
Reference: [Sav72] <author> Walter J. Savitch. </author> <title> Maze recognizing automata and nondeterministic tape complexity. </title> <journal> JCSS, </journal> <volume> 7 </volume> <pages> 389-403, </pages> <year> 1972. </year>
Reference-contexts: There are also many results on learning unknown graphs under various conditions (e.g., [BRS93], [DP90], [RS87], [RS93]). Ra-bin proposed the idea of dropping pebbles to mark nodes [Rab67]. This suggestion led to work exploring the searching capabilities of a finite automaton supplied with pebbles (e.g., [BS77], [BK78], <ref> [Sav72] </ref>). Cook and Rackoff generalized the idea of pebbles to jumping automata [CR80]. However, most previous work has concentrated on learning undirected graphs or graphs with distinguishable nodes. The power behind the two-robot model lies in the robots' abilities to recognize each other and to move independently.
Reference: [SJ89] <author> Alistair Sinclair and Mark Jerrum. </author> <title> Approximate counting, uniform generation and rapidly mixing markov chains. </title> <journal> Information and Computation, </journal> <volume> 82(1) </volume> <pages> 93-133, </pages> <month> July </month> <year> 1989. </year>
Reference-contexts: Two robots can learn specific classes of directed graphs more quickly, such as the class of graphs with high conductance. Conductance, a measure of the expansion properties of a graph, was introduced by Sinclair and Jerrum <ref> [SJ89] </ref>. The class of directed graphs with high conductance includes graphs with exponentially-large cover time. <p> In this section we define conductance and present an algorithm which runs more quickly than Learn-Graph for graphs with conductance greater than 1 n . 6.1 Conductance The conductance <ref> [SJ89] </ref> of an ergodic random walk on a graph characterizes the rate at which the walk converges to the stationary distribution .
Reference: [Smi94] <author> Carl H. Smith. </author> <title> Three decades of team learning. </title> <booktitle> To appear in Proceedings of the Fourth International Workshop on on Algorithmic Learning Theory. </booktitle> <publisher> Springer Ver-lag, </publisher> <year> 1994. </year>
Reference-contexts: Thus with only minor modifications, our algorithms may be used in a distributed setting. Previous results showing the power of team learning are plentiful (e.g., [CBF + 93], [KS93], [DP + 91]), particularly in the field of inductive inference (see Smith <ref> [Smi94] </ref> for an excellent survey). There are also many results on learning unknown graphs under various conditions (e.g., [BRS93], [DP90], [RS87], [RS93]). Ra-bin proposed the idea of dropping pebbles to mark nodes [Rab67].
References-found: 19

