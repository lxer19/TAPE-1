URL: ftp://coast.cs.purdue.edu/pub/doc/genetic_algorithms/apps/Graph-Partitioning-GA.ps.Z
Refering-URL: http://www.cs.purdue.edu/coast/archive/data/categ20.html
Root-URL: http://www.cs.purdue.edu
Title: Abstract A PARALLEL GENETIC ALGORITHM FOR THE GRAPH PARTITIONING PROBLEM 1 parallel algorithm shows a
Author: E-G. Talbi P. Bessire 
Keyword: Key Words Distributed memory parallel architectures, Genetic algorithms, Graph partitioning, Hill-climbing, Mapping problem, Simulated annealing, Superlinear speedup.  
Note: The  
Address: Grenoble  
Affiliation: Laboratoire de Gnie Informatique Institut IMAG University of  
Abstract: Genetic algorithms are stochastic search and optimization techniques which can be used for a wide range of applications. This paper addresses the application of genetic algorithms to the graph partitioning problem. Standard genetic algorithms with large populations suffer from lack of efficiency (quite high execution time). A massively parallel genetic algorithm is proposed, an implementation on a SuperNode of Transputers and results of various benchmarks are given. A comparative analysis of our approach with hill-climbing algorithms and simulated annealing is also presented. The experimental measures show that our algorithm gives better results concerning both the quality of the solution and the time needed to reach it. 
Abstract-found: 1
Intro-found: 1
Reference: [Ackley87] <author> D.H.Ackley, </author> <title> "A connectionist machine for genetic hillclimbing", </title> <publisher> Kluwer Academic Pub., </publisher> <address> Boston, </address> <year> 1987. </year>
Reference-contexts: More distributed optimization techniques may also be considered. Some of them are closely related to neural networks algorithms (see <ref> [Ackley87] </ref> & [Peretto90]). Others, namely, genetic algorithms (GAs) are considered in this paper. They are stochastic search techniques, introduced by Holland twenty years ago [Holland75], inspired by biological evolution of species. Development of massively parallel architectures made them very popular in the very last years.
Reference: [Anderson90] <author> E.J.Anderson, M.C.Ferris, </author> <title> "A genetic algorithm for the assembly line balancing problem", </title> <type> Tech. Rep. </type> <institution> No.926, Univ. of Wisconsin-Madison, </institution> <month> Mar </month> <year> 1990. </year>
Reference-contexts: Replacement Do in parallel a selection of best local offsprings. It is important to notice that these modifications of the standard model do not cause a degradation in the search efficiency of the standard genetic algorithm as shown in <ref> [Anderson90] </ref> and [Mhlenbein88]. IV. SUPERNODE IMPLEMENTATION AND BENCHMARKING IV.1. Supernode Implementation The Supernode is a loosely coupled, highly parallel machine based on transputers (fig.2). One of its most important characteristics is its ability to dynamically reconfigure the network topology by using a programmable VLSI switch device.
Reference: [Baiardi89] <author> F.Baiardi, S.Orlando, </author> <title> "Strategies for a massively parallel implementation of simulated annealing", </title> <publisher> PARLE'89, LNCS, </publisher> <address> Vol.366, Eindhoven, Netherlands, pp.273-287, </address> <month> June </month> <year> 1989. </year>
Reference: [Berman87] <author> F.Berman, L.Synder, </author> <title> "On mapping parallel algorithms into parallel architectures", </title> <editor> J. </editor> <booktitle> of Parallel and Distributed Computing 4, </booktitle> <address> pp.439-458, </address> <year> 1987. </year>
Reference-contexts: When the number of processes exceeds the number of available processing elements, as it is usually the case in massively parallel programming, the mapping problem includes the contraction problem <ref> [Berman87] </ref> which is equivalent to the graph partitioning problem treated in this paper. The graph partitioning problem is NP-complete. Consequently, heuristic methods should be used to deal with it.
Reference: [Bessire90] <author> P. Bessire, </author> <title> "Toward a synthetic cognitive paradigm: probabilistic inference", </title> <booktitle> Proc. of COGNITIVA90, </booktitle> <address> Madrid, Spain, </address> <year> 1990 </year>
Reference-contexts: An important caracteristic of genetic algorithms is that they may be used to solve a great variety of combinatorial optimization problems. We are using them to solve such optimization problems in the field of robot control and neural networks <ref> [Bessire90] </ref>. We are also studying an important improvement of the algorithm, namely, the dynamic variation of its parameters and particularly mutation probability. The crossover operator becomes less effective over time as the strings in the population become more similar.
Reference: [Bouloutas89] <author> A.Bouloutas, P.M.Gopal, </author> <title> "Some graph partitioning problems and algorithms related to routing in large computer networks", </title> <booktitle> 9th Int. Conf. on Distributed Computing Systems, </booktitle> <address> pp.362-370, </address> <year> 1989. </year>
Reference-contexts: components in order to minimize the number of connections between modules, yet preserving some balance concerning the number of components on each module [Lawler69][Russo71]; routing in distributed systems, where the considered problem is to subdivide the computer network into smaller clusters so that the control overhead for routing is minimized <ref> [Bouloutas89] </ref>; image segmentation in the field of computer vision, where segmented images are represented as graphs in which each vertex represents a segment and each weighted edge between two vertices represents a topological relationship between two segments of the image [Hrault89]; virtual memory paging systems, where one wants to distribute the
Reference: [Cohoon87] <author> J.P.Cohoon, S.U.Hedge, W.N.Martin, D.Richards, </author> <title> "Punctuated Equilibra: A parallel genetic algorithm", </title> <booktitle> Proc. of the Second Int. Conf. on Genetic Algorithms, </booktitle> <publisher> MIT, </publisher> <address> Cambridge, pp.148-154, </address> <month> Jul </month> <year> 1987. </year>
Reference-contexts: Mutation is simply flitting a bit (fig.1b). Two parameters need to be defined: Pc and Pm. They represent respectively the probability of application of the crossover and mutations operators. Other genetic operators may be find in the literature, for instance, the inversion operator <ref> [Cohoon87] </ref> and many variants of the crossover operator designed for specific problem domains [Shahookar90].
Reference: [Feo90] <author> T.A.Feo, M.Khellaf, </author> <title> "A class of bounded approximation algorithms for graph partitioning", Networks, </title> <journal> Vol.20, No.2, </journal> <volume> pp.181-195, </volume> <month> Mar </month> <year> 1990. </year>
Reference-contexts: Most applications correspond to the following set F2 of constraints where the weights of all nodes are set to 1 (see [Kernighan70] & <ref> [Feo90] </ref>): for each subset p i of V belonging to the partition P, the number of nodes in p i is equal to a given value B i " p i P, W 1 (v) = B i with " vV, W 1 (v)=1 the total cost of the edges going
Reference: [Garey79] <author> M.R.Garey, D.S.Johnson, </author> <title> "Computers and intractability: A guide to the theory of NP_completeness", </title> <publisher> Freeman, </publisher> <address> San Francisco, </address> <year> 1979. </year>
Reference-contexts: p i to one node of some other p j must be inferior to some given value C W 2 (e) C with e = - (x,y) / (x,y)E & xp i & yp j & ij - The graph partitioning problem under constraints F1 has been proved NP-complete (see <ref> [Garey79] </ref>).
Reference: [Grefenstette87] <author> J.J.Grefenstette, </author> <title> "Incorporating problem specific knowledge into genetic algorithms", in Genetic algorithms and Simulated annealing, </title> <editor> L.Davis ed., </editor> <publisher> Morgan Kaufmann Publishers, </publisher> <address> pp.42-60, </address> <year> 1987. </year>
Reference-contexts: Development of massively parallel architectures made them very popular in the very last years. They have recently been applied to combinatorial optimization problems in various fields, such as, for instance, the traveling salesman problem <ref> [Grefenstette87] </ref>, the optimization of connections and connectivity of neural networks [Whitley90], and classifier systems [Robertson87]. The purpose of this paper is to prove that the graph partitioning problem may be solved quite efficiently by a parallel genetic algorithm.
Reference: [Haden88] <author> P.Haden, F.Berman, </author> <title> "A comparative study on mapping algorithms for an automated parallel programming environment", </title> <type> Tech. Rep., </type> <institution> CS-088, Univ. of California, </institution> <address> San Diego, </address> <year> 1988. </year>
Reference-contexts: As we want to avoid the intrinsic disadvantage of the algorithms of this second class (their limited applicability due to the problem dependance) our concern in this paper, is only the first class of algorithms. Two widely used optimization techniques are the hill-climbing algorithm <ref> [Haden88] </ref> and simulated annealing [Sheild87]. Hill-climbing is sure to find the global minimum only in convex spaces. Otherwise, most often it is a local rather than a global minimum which is found.
Reference: [Hrault89] <author> L.Hrault, J-J.Niez, </author> <title> "How neural networks can solve hard graph problems: A performance study on the graph K-partitioning", </title> <booktitle> NeuroNimes'89 Int. Workshop on Neural Networks & their applications, </booktitle> <address> Nimes, France, pp.237-255, </address> <month> Nov </month> <year> 1989. </year>
Reference-contexts: clusters so that the control overhead for routing is minimized [Bouloutas89]; image segmentation in the field of computer vision, where segmented images are represented as graphs in which each vertex represents a segment and each weighted edge between two vertices represents a topological relationship between two segments of the image <ref> [Hrault89] </ref>; virtual memory paging systems, where one wants to distribute the different objects on memory pages in order to minimize the number of references between objects stored on different pages [MacGregor78]; mapping parallel programs on parallel architectures.
Reference: [Holland75] <editor> J.H.Holland, </editor> <booktitle> "Adaptation in natural and artificial systems", </booktitle> <address> Ann Arbor: </address> <publisher> Univ. of Michigan Press, </publisher> <year> 1975. </year>
Reference-contexts: More distributed optimization techniques may also be considered. Some of them are closely related to neural networks algorithms (see [Ackley87] & [Peretto90]). Others, namely, genetic algorithms (GAs) are considered in this paper. They are stochastic search techniques, introduced by Holland twenty years ago <ref> [Holland75] </ref>, inspired by biological evolution of species. Development of massively parallel architectures made them very popular in the very last years.
Reference: [Hyafil73] <author> L.Hyafil, R.L.Rivest, </author> <title> "Graph partitioning and constructing optimal decision trees are polynomial complete problems", RR No.33, </title> <booktitle> IRIA Laboria, </booktitle> <address> Rocquencourt, France, </address> <month> Oct </month> <year> 1973. </year>
Reference-contexts: P, W 1 (v) = B i with " vV, W 1 (v)=1 the total cost of the edges going from one p i to another p j should be minimum MIN ( W 2 (e) ) The graph partitioning problem under constraints F2 has also been proved NP-complete (see <ref> [Hyafil73] </ref>).
Reference: [Jesshope86] <author> C.R.Jesshope, T.Muntean, C.Whitby-strevens, J.G.Harp, </author> <title> "Supernode Project P1085: Development and application of a low cost high performance multiprocessor machine", </title> <address> ESPRIT'86, Brussels, </address> <year> 1986. </year>
Reference-contexts: One of its most important characteristics is its ability to dynamically reconfigure the network topology by using a programmable VLSI switch device. This architecture offers a range of 16 to 1024 processors, delivering from 24 to 1500 Mflops performance. To achieve these performance, a hierarchical structure has been adopted <ref> [Jesshope86] </ref>. The basic component is a T800 transputer. It is a 32-bit microprocessor, with on-chip memory and F.P.U. (Floating Point Unit), delivering 10Mips and 1.5Mflops peak performance. Communication between transputers is supported by 4 bidirectional, serial, asynchronous, point-to-point connection links.
Reference: [ Jo h ns on 8 5] <author> D .S .Jo h ns o n, </author> <title> C.H .P ap a di m it r io u , M.Yannakakis, "How easy is local search ?", Proc. </title> <booktitle> Annual Symp. of Foundation of Computer Science, </booktitle> <address> pp.39-42, </address> <year> 1985. </year>
Reference: [Kernighan70] <author> B.W.Kernighan, S.Lin, </author> <title> "An efficient heuristic procedure for partitioning graphs", The Bell System Tech. </title> <type> Jou., </type> <institution> Vol.49, pp.291-307, </institution> <month> Feb </month> <year> 1970. </year>
Reference-contexts: Most applications correspond to the following set F2 of constraints where the weights of all nodes are set to 1 (see <ref> [Kernighan70] </ref> & [Feo90]): for each subset p i of V belonging to the partition P, the number of nodes in p i is equal to a given value B i " p i P, W 1 (v) = B i with " vV, W 1 (v)=1 the total cost of the
Reference: [Kirkpatrick83] <author> S.Kirkpatrick, C.D.Gelatt, M.P.Vecchi, </author> <title> "Optimization by simulated annealing", </title> <booktitle> Science, </booktitle> <address> Vol.220, No.4598, pp.671-680, </address> <month> May </month> <year> 1983. </year>
Reference-contexts: Generate a random initial state S0 (S:=S0). Repeat compute at random a neighboring state S'. if cost (S') &lt; cost (S) then S:=S' Until there is no better neighbor. b/ Simulated annealing algorithm The principle of the simulated annealing algorithm is the following <ref> [Kirkpatrick83] </ref> (fig.8): the system is put in a high temperature environment. At this temperature is applied a sufficiently long sequence of random elementary transformations (markov chain) to reach the equilibrium at this temperature. Then, the temperature is slightly decreased and a new sequence of random move is applied.
Reference: [Laarhoven87] <author> P.J.M.Laarhoven, E.H.L.Aarts, </author> <title> "Simulated annealing: Theory and applications", </title> <address> D. </address> <publisher> Reidel Pub. </publisher> <address> Comp., </address> <year> 1987. </year>
Reference-contexts: At each temperature the permitted energy states are governed by the metropolis criterion, which allows the configuration to accept a state with a probability P (DE,T). The search terminates when the system stabilizes. There is a large amount of literature on this topic <ref> [Laarhoven87] </ref>, and the basic algorithm allows for considerable variation and tuning of parameters. The version we considered is a straightforward version, which can probably be greatly improved.
Reference: [Lawler69] <author> E.L.Lawler, K.N.Levitt, J.Turner, </author> <title> "Module clustering to minimize delay in digital networks", </title> <journal> IEEE Trans. on Comp., Vol.C-18, No.1, </journal> <volume> pp.47-57, </volume> <month> Jan </month> <year> 1969. </year>
Reference: [Macfarlane90] <author> D.Macfarlane, I.East, </author> <title> "An investigation of several parallel genetic algorithms", </title> <booktitle> Proc. of the 12th Occam User Group, </booktitle> <address> Exeter, UK, pp.60-67, </address> <month> Apr </month> <year> 1990. </year>
Reference-contexts: However, the selection is still done sequentially, because parallel selection would require a fully connected graph of individuals as any two individuals in the population may be mated <ref> [Macfarlane90] </ref>. decomposition approach: This approach consists in dividing the population into equal size sub-populations.
Reference: [MacGregor78] <author> R.M.MacGregor, </author> <title> "On partitioning a graph: A heuristical and empirical study", M e m o r a n d u m No.UCB/ERL M78/14, </title> <institution> Electronics Research Laboratory, Univ. of California, Berkeley, </institution> <year> 1978. </year>
Reference-contexts: represents a segment and each weighted edge between two vertices represents a topological relationship between two segments of the image [Hrault89]; virtual memory paging systems, where one wants to distribute the different objects on memory pages in order to minimize the number of references between objects stored on different pages <ref> [MacGregor78] </ref>; mapping parallel programs on parallel architectures. In our laboratory, we are especially interested in this last application, namely, the placement of communicating processes on processors of a distributed memory parallel machine.
Reference: [ M hlenbein88] <author> H.M hlenbein, M.Gorges-schleuter, O.Kramer, </author> <title> "Evolution algorithms in combinatorial optimization", Parallel Computing, </title> <journal> Vol.7, No.2, </journal> <volume> pp.65-85, </volume> <month> Apr </month> <year> 1988. </year>
Reference: [ M hlenbein89] <author> H.M hlenbein, J.Kindermann, </author> <title> "The dynamics of evolution and learning: Towards genetic neural networks", Connectionism in Perspective, </title> <editor> R.Pfeifer et al. eds., </editor> <publisher> North-Holland, </publisher> <address> pp.173-197, </address> <year> 1989. </year>
Reference: [Pettey87] <author> C.B.Pettey, M.R.Leuze, J.J.Grefenstette, </author> <title> "A parallel genetic algorithm", </title> <booktitle> Proc. of the Second Int. Conf. on Genetic Algorithms, </booktitle> <publisher> MIT, </publisher> <address> Cambridge, pp.155-161, </address> <month> Jul </month> <year> 1987. </year>
Reference: [Peretto90] <author> P. Peretto, </author> <title> "Neural networks and combinatorial optimization", </title> <booktitle> Proc. of the international conference on Neural Networks, </booktitle> <institution> E.N.S. of Lyon, Lyon, FRANCE, </institution> <year> 1990. </year>
Reference-contexts: More distributed optimization techniques may also be considered. Some of them are closely related to neural networks algorithms (see [Ackley87] & <ref> [Peretto90] </ref>). Others, namely, genetic algorithms (GAs) are considered in this paper. They are stochastic search techniques, introduced by Holland twenty years ago [Holland75], inspired by biological evolution of species. Development of massively parallel architectures made them very popular in the very last years.
Reference: [Robertson87] <author> G.Robertson, </author> <title> "Parallel implementation of genetic algorithms in a classifier system", in Genetic algorithms and Simulated annealing, </title> <editor> L.Davis ed., </editor> <publisher> Morgan Kaufmann Publishers, </publisher> <address> pp.129-140, </address> <year> 1987. </year>
Reference-contexts: Development of massively parallel architectures made them very popular in the very last years. They have recently been applied to combinatorial optimization problems in various fields, such as, for instance, the traveling salesman problem [Grefenstette87], the optimization of connections and connectivity of neural networks [Whitley90], and classifier systems <ref> [Robertson87] </ref>. The purpose of this paper is to prove that the graph partitioning problem may be solved quite efficiently by a parallel genetic algorithm.
Reference: [Russo71] <author> R.L.Russo, P.H.Oden, P.K.Wolff, </author> <title> "A heuristic procedure for the partitioning and mapping of computer logic graphs", </title> <journal> IEEE Trans. on Comp., Vol.C-20, No.12, </journal> <volume> pp.1455-1462, </volume> <month> Dec </month> <year> 1971. </year>
Reference: [Savage90] <author> J.E.Savage, M.G.Wloka, </author> <title> "On parallelizing graph-partitioning heuristics", Automata, Languages and Programming, </title> <institution> Warwick Univ., UK, LNCS No.443, pp.476-489, </institution> <month> Jul </month> <year> 1990. </year>
Reference: [Shahookar90] <author> K.Shahookar, P.Mazumder, </author> <title> "A genetic approach to standard cell placement using meta-genetic parameter optimization", </title> <journal> IEEE Trans. on Computer-Aided Design, Vol.9, No.5, </journal> <volume> pp.500-511, </volume> <month> May </month> <year> 1990. </year>
Reference-contexts: Two parameters need to be defined: Pc and Pm. They represent respectively the probability of application of the crossover and mutations operators. Other genetic operators may be find in the literature, for instance, the inversion operator [Cohoon87] and many variants of the crossover operator designed for specific problem domains <ref> [Shahookar90] </ref>. Parents Offspring Random crossover point (a) Crossover Individual Random mutation of bits (b) Mutation To use genetic algorithm for the graph partitioning problem, the following formalism is used: Let us suppose that we have a graph of N nodes to divide into M subsets.
Reference: [Sheild87] <author> J.Sheild, </author> <title> "Partitioning concurrent VLSI simulation programs onto a multiprocessor by simulated annealing", </title> <booktitle> IEE Proceedings, </booktitle> <address> Vol.134, Pt.E, No.1, pp.24-30, </address> <month> Jan </month> <year> 1987. </year>
Reference-contexts: As we want to avoid the intrinsic disadvantage of the algorithms of this second class (their limited applicability due to the problem dependance) our concern in this paper, is only the first class of algorithms. Two widely used optimization techniques are the hill-climbing algorithm [Haden88] and simulated annealing <ref> [Sheild87] </ref>. Hill-climbing is sure to find the global minimum only in convex spaces. Otherwise, most often it is a local rather than a global minimum which is found.
Reference: [Talbi90] <author> E-G.Talbi, T.Muntean, </author> <title> "Static allocation of communicating processes on a parallel architecture", </title> <type> Research Rep. </type> <institution> RR-833-I-, LGI/IMAG, INPG, </institution> <month> Nov </month> <year> 1990. </year>
Reference-contexts: In our laboratory, we are especially interested in this last application, namely, the placement of communicating processes on processors of a distributed memory parallel machine. A survey of the different methods proposed in the literature to deal with this problem may be found in <ref> [Talbi90] </ref>. The parallel program is modeled as a graph where the vertices represent the processes, the vertices' weights represent known or estimated computation costs of these processes, the edges represent communication links required between them and the edges' weights estimate the relative amount of communication necessary along those links.
Reference: [Tanese87] <author> R.Tanese, </author> <title> "Parallel genetic algorithms for a hypercube", </title> <booktitle> Proc. of the Second Int. Conf. on Genetic Algorithms, </booktitle> <publisher> MIT, </publisher> <address> Cambridge, pp.177-183, </address> <month> Jul </month> <year> 1987. </year>
Reference: [Whitley90] <author> D.Whitley, T.Starkweather, C.Bogart, </author> <title> "Genetic algorithms and neural networks: optimizing connections and connectivity", </title> <booktitle> Parallel Computing, </booktitle> <address> Vol.14, No.3, pp.347-361, </address> <month> Aug </month> <year> 1990. </year>
Reference-contexts: Development of massively parallel architectures made them very popular in the very last years. They have recently been applied to combinatorial optimization problems in various fields, such as, for instance, the traveling salesman problem [Grefenstette87], the optimization of connections and connectivity of neural networks <ref> [Whitley90] </ref>, and classifier systems [Robertson87]. The purpose of this paper is to prove that the graph partitioning problem may be solved quite efficiently by a parallel genetic algorithm.
References-found: 34

