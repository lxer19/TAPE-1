URL: ftp://ftp.cs.kun.nl/pub/SoftwEng.InfSyst/articles/CompLang.ps.Z
Refering-URL: http://www.sci.kun.nl/afdis/publist.html
Root-URL: 
Email: e-mail: halpin@cs.uq.oz.au  e-mail: hanoei@cs.kun.nl  
Title: A Framework for Comparing Conceptual Modelling Languages  
Author: T.A. Halpin J.L.H. Oei 
Address: Australia 4072  The Netherlands  
Affiliation: Dept. of Computer Science University of Queensland  Dept. of Information Systems University of Nijmegen  
Abstract: In practice various methods are used for the conceptual modelling phase of information systems design. For a given application, a single method or even a mix of method components may be more appropriate. To judiciously select methods it is necesary to have some appreciation of their strengths and weaknesses. In some cases (e.g. re-engineering, or large-scale schema integration) it may be necessary to translate between different modelling approaches. This paper discusses a framework for comparing conceptual modelling methods, from the viewpoints of expressive power and practicality (with respect to convenience, efficiency and learnability). The general ideas are illustrated by comparing two popular methods (entity-relationship modelling and object-role modelling), with the formal comparison being presented at the meta-level. Finally, some extensions are suggested to widen the scope of the framework. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Batini, C., Ceri, S. & Navathe, S.B. </author> <year> 1992, </year> <title> Conceptual Database Design: an entity-relationship approach, </title> <address> Benjamin/Cummings, Redwood City CA. </address> <note> van Bommel, </note> <author> P., ter Hofstede, A.H.M. & van der Weide, Th.P. </author> <year> 1991, </year> <title> `Semantics and Verification of Object-Role Models', </title> <journal> Information Systems, </journal> <volume> vol. 16, no. 5, </volume> <publisher> Pergamon Press. </publisher>
Reference-contexts: For example, suppose the entity type City is specified to have the attributes Elevation and Population, where these attributes are drawn from the domain Integer <ref> (Batini et al. 1992, p. 32) </ref>. This is unfortunate, since in reality elevation and population are exclusive concepts which cannot be meaningfully compared. To avoid this conflation of distinct semantic domains to a single syntactic domain, one should model population and elevation as distinct entity types, as in ORM.
Reference: <author> Chang, C.C. & Keisler, H.J. </author> <year> 1977, </year> <title> Model Theory, 2nd edn, </title> <publisher> North-Holland, Amsterdam. </publisher>
Reference: <author> Chen, </author> <note> P.P. </note> <year> 1976, </year> <title> `The Entity-Relationship model Towards a unified view of data', </title> <journal> ACM Transactions on Database Systems, </journal> <volume> vol. 1, no. 1, </volume> <pages> pp. 9-36. </pages>
Reference-contexts: For instance, the ISAC method uses A-graphs for describing activities, I-graphs for describing precedence relations between information sets, and C-graphs for describing the contents and structure of information sets (Lundeberg et al. 1980). The Information Engineering method (Martin 1988) uses Entity-Relationship Diagrams <ref> (Chen 1976) </ref> for data modelling, Data Flow Diagrams (Gane & Sarson 1979) for process modelling, and Structure Charts (Yourdon & Constantine 1979) for the structure of programs. This paper focusses on modelling languages rather than their accompanying procedures.
Reference: <author> Falkenberg, E.D., Oei, J.L.H. & Proper, H.A. </author> <year> 1991, </year> <title> `A Conceptual Framework for Evolving Information Systems', </title> <booktitle> Proc. Second International Working Conference on Dynamic Modelling of Information Systems, </booktitle> <address> Washington D.C., </address> <month> July </month> <year> 1991. </year>
Reference: <author> Falkenberg, E.D., Oei, J.L.H. & Proper, H.A. </author> <year> 1992, </year> <title> `Evolving Information Systems: beyond Temporal Information Systems', </title> <booktitle> Proc. of the Database and Expert System Applications Conference (DEXA'92), Valencia, Spain, </booktitle> <pages> pp. 282-287. </pages>
Reference: <author> Gane, C. & Sarson T. </author> <year> 1979, </year> <title> Structured Systems Analysis: Tools and Techniques, </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs NJ. </address>
Reference-contexts: The Information Engineering method (Martin 1988) uses Entity-Relationship Diagrams (Chen 1976) for data modelling, Data Flow Diagrams <ref> (Gane & Sarson 1979) </ref> for process modelling, and Structure Charts (Yourdon & Constantine 1979) for the structure of programs. This paper focusses on modelling languages rather than their accompanying procedures.
Reference: <author> Halpin, T.A. </author> <year> 1989a, </year> <title> `A Logical Analysis of Information Systems: static aspects of the data- oriented perspective', </title> <type> PhD thesis, </type> <institution> University of Queensland. </institution>
Reference-contexts: This has the same expressive power as a version which differs only in allowing n-nary relationships, since unaries (n = 1) may be reformulated as simple binaries, and predicates of higher arity (n 3) may be recast as nested binaries <ref> (see Halpin 1989a for formal proofs) </ref>. Different modelling languages are often compared informally by trying to intuitively see whether some construct found only in one can be rephrased in terms of constructs of the other. Typically this kind of comparison is made with reference to a particular application. <p> When the metamodels of SEARL and SORL are fully mapped to KL, each is found to possess a meta-constraint which is not formally derivable in the other. Counterexamples to such formulae may be generated by standard methods such as semantic tableaux <ref> (e.g. see Halpin 1989a) </ref>. 7 Cardinality constraints in SEARL apply only to single attributes or single roles. This restriction prevents the expression of disjunctive mandatory roles. For example, each IdScheme must either use an attribute or involve a role, but this meta-rule cannot be expressed on the SEARL diagram.
Reference: <author> Halpin, T.A. </author> <year> 1989b, </year> <title> `Contextual Equivalence of Conceptual Schemas', </title> <booktitle> Proc. Advanced Database Systems Symposium, Info. Processing Soc. of Japan, Kyoto, </booktitle> <pages> pp. 47-54. </pages>
Reference: <author> Halpin, T.A. </author> <year> 1991, </year> <title> `A fact-oriented approach to schema transformation', </title> <booktitle> Proc. MFDBS-91, Springer Verlag Lec. Notes in Computer Science, </booktitle> <volume> no. 495, </volume> <pages> Rostock. </pages>
Reference: <author> Halpin, T.A., Harding, J. & Oh, C-H. </author> <year> 1992, </year> <title> `Automated support for Subtyping', </title> <booktitle> Proc. 3rd Workshop: Next Generation CASE Tools, </booktitle> <editor> eds B. Theodoulidis & A. Sutcliffe, UMIST, </editor> <address> UK. </address>
Reference-contexts: Convenience of modelling languages may also depend partly on the modeller's personal preferences. ORM proponents feel that criteria such as the following give it an advantage over EAR: closer ties to natural language; simplicity; role notation facilitates constraint expression; semantic domains (of attributes) are revealed; more flexible subtyping <ref> (Halpin et al. 1992) </ref>; sounder treatment of reference and schema transformations (Halpin 1992). However, EAR proponents argue that their method is superior because its diagrams are often more compact. Certainly, sometimes one does not want to see all the detail provided by a complete ORM diagram. <p> ORM proponents feel that criteria such as the following give it an advantage over EAR: closer ties to natural language; simplicity; role notation facilitates constraint expression; semantic domains (of attributes) are revealed; more flexible subtyping (Halpin et al. 1992); sounder treatment of reference and schema transformations <ref> (Halpin 1992) </ref>. However, EAR proponents argue that their method is superior because its diagrams are often more compact. Certainly, sometimes one does not want to see all the detail provided by a complete ORM diagram.
Reference: <author> Halpin, T.A. & McCormack, J. </author> <year> 1992, </year> <title> `Automated Validation of Conceptual Schema Constraints', Advanced Inf. </title> <booktitle> Systems Engineering: Proc. </booktitle> <editor> CAiSE'92, ed. P. Loucopoulos, Springer Verlag Lec. </editor> <booktitle> Notes in Computer Science, </booktitle> <volume> no. 593, </volume> <pages> pp. 445-62. </pages>
Reference-contexts: Convenience of modelling languages may also depend partly on the modeller's personal preferences. ORM proponents feel that criteria such as the following give it an advantage over EAR: closer ties to natural language; simplicity; role notation facilitates constraint expression; semantic domains (of attributes) are revealed; more flexible subtyping <ref> (Halpin et al. 1992) </ref>; sounder treatment of reference and schema transformations (Halpin 1992). However, EAR proponents argue that their method is superior because its diagrams are often more compact. Certainly, sometimes one does not want to see all the detail provided by a complete ORM diagram. <p> ORM proponents feel that criteria such as the following give it an advantage over EAR: closer ties to natural language; simplicity; role notation facilitates constraint expression; semantic domains (of attributes) are revealed; more flexible subtyping (Halpin et al. 1992); sounder treatment of reference and schema transformations <ref> (Halpin 1992) </ref>. However, EAR proponents argue that their method is superior because its diagrams are often more compact. Certainly, sometimes one does not want to see all the detail provided by a complete ORM diagram.
Reference: <author> Halpin, T.A. & Orlowska, M.E. </author> <year> 1992, </year> <title> `Fact-Oriented Modelling for Data Analysis', </title> <journal> Journal of Information Systems, Blackwell, </journal> <volume> vol. 2, no. </volume> <pages> 2. </pages>
Reference-contexts: Convenience of modelling languages may also depend partly on the modeller's personal preferences. ORM proponents feel that criteria such as the following give it an advantage over EAR: closer ties to natural language; simplicity; role notation facilitates constraint expression; semantic domains (of attributes) are revealed; more flexible subtyping <ref> (Halpin et al. 1992) </ref>; sounder treatment of reference and schema transformations (Halpin 1992). However, EAR proponents argue that their method is superior because its diagrams are often more compact. Certainly, sometimes one does not want to see all the detail provided by a complete ORM diagram. <p> ORM proponents feel that criteria such as the following give it an advantage over EAR: closer ties to natural language; simplicity; role notation facilitates constraint expression; semantic domains (of attributes) are revealed; more flexible subtyping (Halpin et al. 1992); sounder treatment of reference and schema transformations <ref> (Halpin 1992) </ref>. However, EAR proponents argue that their method is superior because its diagrams are often more compact. Certainly, sometimes one does not want to see all the detail provided by a complete ORM diagram.
Reference: <author> Halpin, T.A. & Ritson, P.R. </author> <year> 1992, </year> <title> `Fact-Oriented Modelling and Null Values', </title> <booktitle> Databases in the 1990s:3 - Proc. 3rd Australian Database Conf., </booktitle> <editor> eds. B. Srinivasan & J. Zeleznikov, </editor> <publisher> World Scientific, Singapore. </publisher>
Reference-contexts: Convenience of modelling languages may also depend partly on the modeller's personal preferences. ORM proponents feel that criteria such as the following give it an advantage over EAR: closer ties to natural language; simplicity; role notation facilitates constraint expression; semantic domains (of attributes) are revealed; more flexible subtyping <ref> (Halpin et al. 1992) </ref>; sounder treatment of reference and schema transformations (Halpin 1992). However, EAR proponents argue that their method is superior because its diagrams are often more compact. Certainly, sometimes one does not want to see all the detail provided by a complete ORM diagram. <p> ORM proponents feel that criteria such as the following give it an advantage over EAR: closer ties to natural language; simplicity; role notation facilitates constraint expression; semantic domains (of attributes) are revealed; more flexible subtyping (Halpin et al. 1992); sounder treatment of reference and schema transformations <ref> (Halpin 1992) </ref>. However, EAR proponents argue that their method is superior because its diagrams are often more compact. Certainly, sometimes one does not want to see all the detail provided by a complete ORM diagram.
Reference: <author> Halpin, T.A. </author> <year> 1992, </year> <title> `Fact-oriented schema optimization', </title> <booktitle> Proc. </booktitle> <address> CISMOD-92, Bangalore, </address> <note> India. </note> <author> ter Hofstede, A.H.M. & van der Weide, Th.P. </author> <year> 1991, </year> <title> `Expressiveness in Data Modelling', </title> <type> SERC Report 91/07, </type> <institution> SERC, </institution> <note> Utrecht. </note> <author> ter Hofstede, A.H.M., Proper, H.A. & van der Weide, Th.P. </author> <year> 1992, </year> <title> `Data Modelling in Complex Application Domains', Advanced Inf. </title> <booktitle> Systems Engineering: Proc. </booktitle> <editor> CAiSE'92, ed. P. Loucopoulos, Springer Verlag Lec. </editor> <booktitle> Notes in Computer Science, </booktitle> <volume> no. 593, </volume> <pages> pp. </pages> <month> 364-77. </month> <title> 11 ISO 1982, Concepts and Terminology for the Conceptual Schema and the Information Base, </title> <publisher> ed. </publisher>
Reference-contexts: Convenience of modelling languages may also depend partly on the modeller's personal preferences. ORM proponents feel that criteria such as the following give it an advantage over EAR: closer ties to natural language; simplicity; role notation facilitates constraint expression; semantic domains (of attributes) are revealed; more flexible subtyping <ref> (Halpin et al. 1992) </ref>; sounder treatment of reference and schema transformations (Halpin 1992). However, EAR proponents argue that their method is superior because its diagrams are often more compact. Certainly, sometimes one does not want to see all the detail provided by a complete ORM diagram. <p> ORM proponents feel that criteria such as the following give it an advantage over EAR: closer ties to natural language; simplicity; role notation facilitates constraint expression; semantic domains (of attributes) are revealed; more flexible subtyping (Halpin et al. 1992); sounder treatment of reference and schema transformations <ref> (Halpin 1992) </ref>. However, EAR proponents argue that their method is superior because its diagrams are often more compact. Certainly, sometimes one does not want to see all the detail provided by a complete ORM diagram.
Reference: <author> J.J. van Griethuysen, ISO TC97/SC5/WG3, </author> <note> Eindhoven. </note>
Reference: <author> Lundeberg, M., Goldkuhl, G. & Nilsson, A. </author> <year> 1980, </year> <title> Information Systems Development A Systematic Approach, </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs NJ. </address>
Reference-contexts: Procedures specify steps, algorithms, or heuristic guidelines for the modelling process itself. One method may include more than one language. For instance, the ISAC method uses A-graphs for describing activities, I-graphs for describing precedence relations between information sets, and C-graphs for describing the contents and structure of information sets <ref> (Lundeberg et al. 1980) </ref>. The Information Engineering method (Martin 1988) uses Entity-Relationship Diagrams (Chen 1976) for data modelling, Data Flow Diagrams (Gane & Sarson 1979) for process modelling, and Structure Charts (Yourdon & Constantine 1979) for the structure of programs.
Reference: <author> Martin, J. </author> <year> 1988, </year> <title> Information Engineering, </title> <type> vols 1-3, </type> <institution> Savant Research studies, Lancashire. </institution>
Reference-contexts: One method may include more than one language. For instance, the ISAC method uses A-graphs for describing activities, I-graphs for describing precedence relations between information sets, and C-graphs for describing the contents and structure of information sets (Lundeberg et al. 1980). The Information Engineering method <ref> (Martin 1988) </ref> uses Entity-Relationship Diagrams (Chen 1976) for data modelling, Data Flow Diagrams (Gane & Sarson 1979) for process modelling, and Structure Charts (Yourdon & Constantine 1979) for the structure of programs. This paper focusses on modelling languages rather than their accompanying procedures.
Reference: <author> Nijssen, G.M. & Halpin, T.A. </author> <year> 1989, </year> <title> Conceptual Schema and Relational Database Design, </title> <publisher> Prentice Hall, </publisher> <address> Sydney. </address>
Reference-contexts: ETname is assigned some character string domain). Object-Role Modelling (ORM) views the world as objects playing roles. Objects may be of various types (e.g. entity types and value types). The most well known version of ORM is NIAM <ref> (e.g. see Nijssen & Halpin 1989) </ref>. Various other versions exist (e.g. BRM, FORM, MOON, NORM, PSM). We base the language SORL (Simple Object Role Language) on a fragment of the FORM (Fact-based ORM) language discussed in Halpin & Orlowska (1992), ignoring subtyping and several constraint kinds.
Reference: <author> Oei, J.L.H., van Hemmen, L.J.G.T., Falkenberg, E.D. & Brinkkemper, S. </author> <year> 1992a, </year> <title> `The Meta Model Hierarchy: a Framework for Information System Concepts and Techniques', </title> <type> Tech. Report 92-17, </type> <institution> Dept. of Information Systems, University of Nijmegen. </institution>
Reference-contexts: For the same application, if more relevant features are built-in to the metamodel the modeller has less work to do to complete the specification in the application model. This is the basic idea behind the Principle of Conservation of Information <ref> (Oei et al. 1992a) </ref>, illustrated in Figure 4.
Reference: <author> Oei, J.L.H., Proper H.A., Falkenberg, E.D. </author> <year> 1992b, </year> <title> `Evolving Information Systems: Meeting the ever-changing environment', </title> <type> Tech. Report 92-24, </type> <institution> Dept. of Information Systems, University of Nijmegen. </institution>
Reference: <editor> Olle T.W., Sol, H.G. & Verrijn-Stuart, A.A. (eds) 1982, </editor> <booktitle> Information Systems Design Methodologies: </booktitle>
Reference-contexts: For this reason, the need emerges for a framework which can be the basis for understanding, and comparing these modelling languages. To date, comparative reviews of information modelling methods have tended to focus on checklists of global characteristics <ref> (e.g. Olle et al. 1982, Olle et al. 1988) </ref>. Our approach is more fundamental, and includes a formal analysis. Section 2 of this paper examines two main criteria for comparing modelling languages: expressive power; and practicality.
References-found: 21

