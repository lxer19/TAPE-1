URL: http://www.win.tue.nl/cs/fm/Herman.Geuvers/CSL96.somodels.ps.gz
Refering-URL: http://www.win.tue.nl/cs/fm/Herman.Geuvers/
Root-URL: http://www.win.tue.nl
Title: Extending models of second order predicate logic to models of second order dependent type theory  
Author: Herman Geuvers 
Address: Eindhoven, The Netherlands  
Affiliation: Faculty of Mathematics and Informatics Technological University of  
Abstract: We describe a method for constructing a model of second order dependent type theory out of a model of classical second order predicate logic. Apart from the construction being of interest by itself, this also suggests a way of proving the completeness of the formulas-as-types embedding from second order predicate logic to second order dependent type theory. Under this embedding, formulas are interpreted as types, and derivability (of a formaula) in the logic should correspond to inhabitation (i.e. the associated type being nonempty) in the type system. This correspondence works in one way (called soundness): if a formula is derivable, then the associated type is inhabited (there is a term of that type). It's an open problem whether the correspondence works in the other direction (called completeness): if the type associated with formula ' is inhabited, then ' is derivable. The completeness is proved if any model M of second order logic can faithfully be extended to a model S(M) of second order dependent type theory. That is, for all formulas ', M j= ' if and only if ' is inhabited in S(M). In this paper we show that such a faithfull extension is possible if M is a full model of classical second order predicate logic. This implies that a second order formula that is derivable in classical P 2 is true in all full models (but it may not be derivable in classical second order logic, due to the existence of non-full models of classical second order logic). We give one small application of the method to an axiomatization of finite structures. 
Abstract-found: 1
Intro-found: 1
Reference: [Barendregt 1984] <author> H.P. Barendregt, </author> <title> The lambda calculus: its syntax and semantics, revised edition. </title> <booktitle> Studies in Logic and the Foundations of Mathematics, </booktitle> <publisher> North Holland. </publisher>
Reference-contexts: Then the R is essential for making sure that if C is a subset of both X and Y , then C ae X!Y . Lemma 15. A (M) as defined above is a combinatory algebra. Proof. By a standard result from Mitschke (see <ref> [Barendregt 1984] </ref>, p. 401) it follows that fijR-reduction is Church-Rosser. Hence K 6= S.
Reference: [Barendregt 1992] <author> H.P. Barendregt, </author> <title> Typed lambda calculi. </title> <booktitle> In Handbook of Logic in Computer Science, </booktitle> <editor> eds. Abramski et al., </editor> <publisher> Oxford Univ. Press. </publisher>
Reference-contexts: For an extensive discussion on these systems and their relations, we refer to <ref> [Barendregt 1992] </ref> or [Geuvers 1993]. Here we just define the system P 2 and give some initial motivation for it. Definition 1. The type system P 2 is defined as follows.
Reference: [Berardi 1990] <author> S. Berardi, </author> <title> Type dependence and constructive mathematics, </title> <type> Ph.D. Thesis, </type> <institution> Universita di Torino, Italy. </institution>
Reference-contexts: For the Calculus of Constructions, that `corresponds to' constructive higher order order predicate logic (in the same way that P 2 corresponds to PRED2), it is known that the formulas-as-types embedding is not conservative. (See e.g. <ref> [Berardi 1990] </ref> or [Geuvers 1995].) However, for P , that `corresponds to' constructive minimal first order order predicate logic, the formulas-as-types embedding is conservative. (See e.g. [Geuvers 1993].) That (2) above does not prove completeness is due to the fact that CPRED2 (in general) also has non-full models.
Reference: [Berardi 1993] <author> S. Berardi, </author> <title> Encoding of data types in Pure Construction Calculus: a semantic justification, in Logical Environments, </title> <editor> eds. G. Huet and G. Plotkin, </editor> <publisher> Cambridge University Press, </publisher> <pages> pp 30-60. </pages>
Reference: [Coquand 1990] <author> Th. Coquand, </author> <title> Metamathematical investigations of a calculus of constructions. </title> <booktitle> In Logic and Computer Science, </booktitle> <editor> ed. P.G. Odifreddi, </editor> <booktitle> APIC series, </booktitle> <volume> vol. 31, </volume> <publisher> Academic Press, </publisher> <pages> pp 91-122. </pages>
Reference-contexts: It can be seen as a subsystem of the Calculus of Constructions ([Coquand and Huet 1988], <ref> [Coquand 1990] </ref>), where the operations of forming type constructors are restricted to second order ones. (So, one can quantify over type constructors of kind oe!?, but one can not form type constructors of kind (oe!?)!?.) It can also be seen as an extension of the first order system P , where
Reference: [Coquand and Huet 1988] <author> Th. Coquand and G. Huet, </author> <title> The calculus of constructions, </title> <journal> Information and Computation, </journal> <volume> 76, </volume> <pages> pp 95-120. </pages>
Reference: [van Dalen 1994] <author> D. van Dalen, </author> <title> Logic and Structure, third edition. </title> <publisher> Springer Verlag. </publisher>
Reference-contexts: There are two ways to proceed, both can be found in the literature (see e.g. <ref> [van Dalen 1994] </ref>). One way is to restrict to so called full structures. Definition 3. A structure M is full if D n = -(D n ) for each n. A model hM; Ii is called full if the structure M is full. <p> There is a soundness result, saying ` ' ) j= f ': The reverse implication (completeness) does not hold (see e.g. <ref> [van Dalen 1994] </ref>): j= f ' 6) ` ': Because of the incompleteness of the class of full models, a second approach is usually taken, which is to restrict the class of second order structures to those in which the comprehension schema is valid. Definition 4. <p> The completeness can be proved by faithfully translating second order predicate logic into first order predicate logic and using completeness for the first order predicate logic. (For details see again <ref> [van Dalen 1994] </ref>.) 4 Model construction for P 2 To be able to extend a second order model to a model of P 2, we first discuss a model notion for P 2. This notion is not a general (categorical) one, but a description of a class of models.
Reference: [Geuvers 1993] <author> J.H. </author> <title> Geuvers, Logics and Type systems, </title> <type> Ph.D. Thesis, </type> <institution> University of Nijmegen, Netherlands. </institution>
Reference-contexts: predicate logic (in the same way that P 2 corresponds to PRED2), it is known that the formulas-as-types embedding is not conservative. (See e.g. [Berardi 1990] or [Geuvers 1995].) However, for P , that `corresponds to' constructive minimal first order order predicate logic, the formulas-as-types embedding is conservative. (See e.g. <ref> [Geuvers 1993] </ref>.) That (2) above does not prove completeness is due to the fact that CPRED2 (in general) also has non-full models. So, it occurs for specific ' that 6` CPRED2 ', but M j= ' for all full models. <p> For an extensive discussion on these systems and their relations, we refer to [Barendregt 1992] or <ref> [Geuvers 1993] </ref>. Here we just define the system P 2 and give some initial motivation for it. Definition 1. The type system P 2 is defined as follows.
Reference: [Geuvers 1995] <author> J.H. </author> <title> Geuvers, The Calculus of Constructions and Higher Order Logic, in The Curry-Howard isomorphism, ed. </title> <type> Ph. de Groote, </type> <institution> Volume 8 of the "Cahiers du Centre de logique" (Universite catholique de Louvain), Academia, </institution> <address> Louvain-la-Neuve (Belgium), </address> <pages> pp. 139-191. </pages>
Reference-contexts: For the Calculus of Constructions, that `corresponds to' constructive higher order order predicate logic (in the same way that P 2 corresponds to PRED2), it is known that the formulas-as-types embedding is not conservative. (See e.g. [Berardi 1990] or <ref> [Geuvers 1995] </ref>.) However, for P , that `corresponds to' constructive minimal first order order predicate logic, the formulas-as-types embedding is conservative. (See e.g. [Geuvers 1993].) That (2) above does not prove completeness is due to the fact that CPRED2 (in general) also has non-full models.
Reference: [Stefanova and Geuvers 1996] <author> M. Stefanova and J.H. </author> <title> Geuvers, A simple semantics for the Calculus of Constructions, </title> <booktitle> to appear in the Proceedings of the ESPRIT-BRA `Types' meeting, </booktitle> <address> Turin, Italy, </address> <year> 1995. </year>
Reference-contexts: This notion is not a general (categorical) one, but a description of a class of models. It is an adaptation of models for the Calculus of Constructions as described in <ref> [Stefanova and Geuvers 1996] </ref>. As a matter of fact, we simplify the construction in [Stefanova and Geuvers 1996] quite a bit, because the `countermodels' that we are interested in are of a relatively simple kind. To extend second order models to P 2-models, there are two basic problems. <p> This notion is not a general (categorical) one, but a description of a class of models. It is an adaptation of models for the Calculus of Constructions as described in <ref> [Stefanova and Geuvers 1996] </ref>. As a matter of fact, we simplify the construction in [Stefanova and Geuvers 1996] quite a bit, because the `countermodels' that we are interested in are of a relatively simple kind. To extend second order models to P 2-models, there are two basic problems.
Reference: [Girard et al. 1989] <author> J.-Y. Girard, Y. Lafont and P. Taylor, </author> <title> Proofs and types, Camb. </title> <booktitle> Tracts in Theoretical Computer Science 7, </booktitle> <publisher> Cambridge University Press. </publisher>
Reference: [Harper et al. 1987] <author> R. Harper, F. Honsell and G. Plotkin, </author> <title> A framework for defining logics. </title> <booktitle> Proceedings Second Symposium on Logic in Computer Science, </booktitle> <address> (Ithaca, N.Y.), </address> <publisher> IEEE, </publisher> <address> Washington DC, </address> <pages> pp 194-204. </pages>
Reference: [Howard 1980] <author> W.A. Howard, </author> <title> The formulas-as-types notion of construction. In To H.B. Curry: Essays on Combinatory Logic, Lambda Calculus and Formalism, </title> <editor> eds. J.P. Seldin, J.R. Hindley, AcademicPress, </editor> <address> New York, </address> <pages> pp 479-490. </pages>
Reference: [Longo and Moggi 1988] <author> G. Longo and E. Moggi, </author> <title> Constructive Natural Deduction and its "Modest" Interpretation. </title> <type> Report CMU-CS-88-131. </type>
Reference-contexts: in this paper only states, that if CL ` P 2 M : ', then ' is true in all full models, which does not imply that ` CPRED2 '. 2 Second order dependent type theory The system of second order dependent type theory, P 2, was first introduced in <ref> [Longo and Moggi 1988] </ref>.
Reference: [Nederpelt et al. 1994] <editor> R.P. Nederpelt, J.H. Geuvers and R.C. de Vrijer (editors), </editor> <booktitle> Selected Papers on Automath, Volume 133 in Studies in Logic and the Foundations of Mathematics, </booktitle> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1994, </year> <pages> pp 1024. </pages>
Reference: [Streicher 1991] <author> T. Streicher, </author> <title> Independence of the induction principle and the axiom of choice in the pure calculus of constructions, TCS 103(2), pp 395 - 409. This article was processed using the L A T E X macro package with LLNCS style </title>
References-found: 16

