URL: http://www.cs.umn.edu/Users/dept/users/cg/Unrelated/DFQL.ps.Z
Refering-URL: http://www.cs.umn.edu/Users/dept/users/cg/Unrelated/
Root-URL: http://www.cs.umn.edu
Title: A Graphical Data Flow Language for Retrieval, Analysis, and Visualization of a Scientific Database  
Author: Sait Dogru, Vijay Rajan, Keith Rieck, James R. Slagle, Bosco S. Tjan, and Yuewei Wang 
Address: Minneapolis, MN 55455  
Affiliation: Computer Science Department University of Minnesota  
Abstract: We describe the design, functionality, and implementation of a data flow query language (DFQL), that visually represents a query as a directed acyclic data flow graph. The language is well suited for application domains such as scientific databases, where data analysis and visualization need to be tightly coupled with data retrieval, and the relationships between the entities are ill-defined. Being a functional language, unlike most visual query languages that are declarative, DFQL provides the ability to combine data retrieval, analysis, and visualization, intuitively in a single query. We have implemented this language in a system being used in a long term data-intensive pavement research project. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> Interactive Data Language, </institution> <note> Version 2.2. </note> <institution> Research Systems, Inc., Boulder CO, </institution> <year> 1991. </year>
Reference-contexts: It was therefore important to integrate a visualization package within the framework of DFQL. Interactive Data Language (IDL) by the Research Systems, Inc. (RSI) was chosen as the underlying platform on which to support and provide the above-mentioned utilities to the end users <ref> [1] </ref>. IDL is a complete package for the interactive analysis and visualization of scientific and engineering data. IDL is a powerful array-oriented text-based programming language with numerous mathematical functions built in. It supports an OpenLook or Motif widget interface to the X-Window system through a few useful widget classes.
Reference: [2] <author> R. Ahmed, P.D. Smedt, W. Du, W. Kent, M. Ketabchi, W.A. Litwin, A. Rafii, and MC. Shan. </author> <title> The pegasus heterogeneous multidatabase system. </title> <booktitle> IEEE Computer, </booktitle> <month> Dec </month> <year> 1991. </year>
Reference-contexts: Such databases may be of incompatible data models (e.g. some relational, some non- relational), using different retrival languages or contains conflicting information. Researches in federated databases have begun to show ways to overcome these difficulties <ref> [2, ?, ?, ?, ?] </ref>. Joining force with Srivastava et al. [15, ?], we shall study the ways 25 of using DFQL in accessing federated databases. It is conceivable to use DFQL for accessing traditional schema-intensive databases common for commercial applications.
Reference: [3] <author> M. Angelaccio, T. Catarci, and G. Santucci. QBD*: </author> <title> a fully visual system for E-R oriented databases. </title> <booktitle> In 1989 IEEE Workshop on Visual Languages, </booktitle> <pages> pages 56-61, </pages> <month> Oct </month> <year> 1989. </year>
Reference: [4] <author> J. Barber. </author> <title> LabVIEW: an implementation of data flow programming in a graphical language. </title> <booktitle> In Proceedings of the ISA/89 International Conference and Exhibit, vol.3, </booktitle> <pages> pages 1259-66, </pages> <address> Philadelphia, PA, USA, </address> <month> Oct </month> <year> 1989. </year> <institution> ISA; Research Triangle Park, NC, USA. </institution> <month> 26 </month>
Reference-contexts: The right half of the dialog shows the columns that have been selected by the user to be in the output table. 7 Query Examples The viability of using data flow languages for extra-relational data transformation and visualization has been demonstrated elsewhere in the literature <ref> [4, ?, ?, ?, ?, ?, ?, ?] </ref>. In this section we demonstrate the expressiveness of DFQL for relational operations, by formulating complex relational queries in DFQL.
Reference: [5] <author> D.D. Chamberlin and R. F. Boyce. </author> <title> Sequel: A structured English query language. </title> <booktitle> In Proc. ACM SIGDIFET Workshop, </booktitle> <year> 1974. </year>
Reference: [6] <author> S.K. Chang. </author> <title> A visual language compiler for information retrieval by visual reasoning. </title> <journal> IEEE Transactions on Software Engineering, vol.16, </journal> <volume> no.10, </volume> <pages> pages 1136-1149, </pages> <month> Oct </month> <year> 1990. </year>
Reference: [7] <author> P. P. Chen. </author> <title> The Entity-Relationship model: toward a unified view of data. </title> <journal> ACM Trans. Database Systems, vol.1, </journal> <volume> no.1, </volume> <pages> pages 166-192, </pages> <year> 1976. </year>
Reference: [8] <author> B. Czejdo, M. Rusinkiewicz, D. Embley, and V. Reddy. </author> <title> A visual query language for an ER data model. </title> <booktitle> In 1989 IEEE Workshop on Visual Languages, </booktitle> <pages> pages 165-170, </pages> <month> Oct </month> <year> 1989. </year>
Reference: [9] <author> M.B. Gokhale. </author> <title> Programming in a very high level data flow language. </title> <booktitle> ICS 88. 3rd International Conference on Supercomputing, </booktitle> <volume> vol. 3, </volume> <pages> pages 366-71, </pages> <year> 1988. </year>
Reference: [10] <author> P. Le Guernic, A. Benveniste, P. Bournai, and T. Gautier. </author> <title> SIGNAL: a data flow oriented language for real time signal processing. </title> <booktitle> Computational and Combinatorial Methods in Systems Theory, </booktitle> <pages> pages 419-33, </pages> <year> 1986. </year>
Reference: [11] <author> N. Hunt. IDF: </author> <title> A graphical data flow programming language for image processing and computer vision. </title> <booktitle> In Proceedings of 1990 IEEE International Conference on Systems, Man and Cybernetics, </booktitle> <pages> pages 351-60, </pages> <address> Los Angeles, CA, USA, </address> <month> Nov </month> <year> 1990. </year>
Reference: [12] <author> M. Junet. </author> <title> Design and implementation of an Extended Entity-Relationship database management system. </title> <booktitle> In Proc. 5th International Conference on Entity-Relationship Approach, </booktitle> <pages> pages 199-216, </pages> <year> 1986. </year>
Reference: [13] <author> H.J. Kim, H.F. Korth, and A. Silberschatz. PICASSO: </author> <title> a graphical query language. </title> <journal> Software Practice and Experience, vol.18, </journal> <volume> no.3, </volume> <pages> pages 169-203, </pages> <month> Mar </month> <year> 1988. </year> <month> 27 </month>
Reference: [14] <author> A. Knoll, A. Schweikard, and M. Freericks. </author> <title> Data-flow oriented functional programming lan-guage for real-time data processing. </title> <editor> In G. Hommel, editor, </editor> <booktitle> Prozessrechensysteme '91. (Process Computer Systems '91), </booktitle> <pages> pages 226-35, </pages> <address> Berlin, Germany, Feb 1991. </address> <publisher> Springer-Verlag and Berlin, </publisher> <address> Germany. </address>
Reference: [15] <author> E.-P. Lim and J. Srivastava. </author> <title> Oery optimization/processing in federated database systems. </title> <year> 1993. </year>
Reference-contexts: Such databases may be of incompatible data models (e.g. some relational, some non- relational), using different retrival languages or contains conflicting information. Researches in federated databases have begun to show ways to overcome these difficulties [2, ?, ?, ?, ?]. Joining force with Srivastava et al. <ref> [15, ?] </ref>, we shall study the ways 25 of using DFQL in accessing federated databases. It is conceivable to use DFQL for accessing traditional schema-intensive databases common for commercial applications.
Reference: [16] <author> P. Kreps M. Stonebraker, E. Wong and G. </author> <title> Held. The design and implementation of INGRES. </title> <journal> ACM TODS, vol.1, </journal> <volume> no.3, </volume> <pages> pages 189-222, </pages> <year> 1976. </year>
Reference: [17] <author> D. Maier and J. D. Ullman. </author> <title> Maximal objects and the semantics of universal relational databases. </title> <journal> ACM TODS, vol.8, </journal> <volume> no.1, </volume> <pages> pages 1-14, </pages> <year> 1983. </year>
Reference: [18] <author> L. Mohan and R. L. Kashyap. </author> <title> A framework for building knowledge-intensive data models. </title> <booktitle> In Proc. 2nd Int. Conf. Software Engineering and Knowledge Engineering, </booktitle> <pages> pages 33-38, </pages> <month> Jun </month> <year> 1990. </year>
Reference: [19] <author> L. Mohan and R.L. Kashyap. </author> <title> A visual query language for graphical interaction with schema-intensive databases. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, vol.5, </journal> <volume> no.5, </volume> <pages> pages 843-858, </pages> <month> Oct </month> <year> 1993. </year>
Reference: [20] <author> J.R. Rasure and C.S. Williams. </author> <title> An integrated data flow visual language and software development environment. </title> <journal> Journal of Visual Language and Computing, </journal> <volume> vol 2, issue 3,, </volume> <month> Sep </month> <year> 1991. </year>
Reference: [21] <author> J. Sachs. </author> <note> SQL*Plus User's Guide, Version 2.0. </note> <institution> Oracle Corporation, </institution> <address> Belmont, CA, </address> <year> 1987. </year> <month> 28 </month>
Reference-contexts: To avoid the complication of introducing our specific domain (i.e., Mn/ROAD pavement research project) and to provide a common ground for comparing the relational aspect of DFQL with other visual query languages, we shall formulate our examples using queries and sample database tables given in the SQL*Plus User's Guide <ref> [21] </ref> from Oracle Corp. We shall give both the SQL and DFQL formulations of the query.
Reference: [22] <author> T. Shimada, S. Sekiguchi, and K. Hiraki. </author> <title> Data flow language DFC: design and implementation. </title> <journal> Transactions of the Institute of Electronics, Information and Communication Engineers D, vol.J71D, </journal> <volume> no.3, </volume> <pages> pages 501-8, </pages> <month> Mar </month> <year> 1988. </year>
Reference: [23] <author> K.L. Siau, H.C. Chan, and K.P. Tan. </author> <title> Visual knowledge query language. </title> <journal> IEICE Transactions on Information and Systems, vol.E75-D, </journal> <volume> no.5, </volume> <pages> pages 697-703, </pages> <month> Sep </month> <year> 1992. </year>
Reference: [24] <author> B.S. Tjan, L. Breslow, S. Dogru, V. Rajan, K. Rieck, J.R. Slagle, and M.O. Poliac. </author> <title> A data-flow graphical user interface for querying a scientific database. </title> <booktitle> In 1993 IEEE Symposium on Visual Languages, </booktitle> <pages> pages 49-54. </pages> <publisher> IEEE Computer Society, </publisher> <month> Aug </month> <year> 1993. </year>
Reference: [25] <author> C. Upson, Jr. T.A. Faulhaber, D. Kamins, D. Laidlaw, D. Schlegel, J. Vroom, R. Gurwitz, and A. van Dam. </author> <title> The Application Visualization System: A computational environment of scientific visualization. </title> <journal> IEEE Computer Graphics and Applications, vol.9, </journal> <volume> no.4, </volume> <month> Jul </month> <year> 1989. </year>
Reference: [26] <author> M. Zloof. </author> <title> Query by Example. </title> <booktitle> In Proc. National Computer Conf., </booktitle> <pages> pages 431-438, </pages> <month> May </month> <year> 1975. </year> <month> 29 </month>
References-found: 26

