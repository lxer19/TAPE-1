URL: ftp://dollar.biz.uiowa.edu/pub/segre/amass.ps
Refering-URL: http://www.biz.uiowa.edu/mansci/faculty/asegre.html
Root-URL: 
Email: sunkim@uiuc.edu  segre@cs.uiowa.edu  
Title: AMASS: A Structured Pattern Matching Approach to Shotgun Sequence Assembly  
Author: Sun Kim Alberto Maria Segre 
Address: Iowa  
Affiliation: Bioinformatics, Biotechnology Center The University of Illinois at Urbana-Champaign  Department of Management Sciences The University of  
Abstract: In this paper, we propose an efficient, reliable shotgun sequence assembly algorithm based on a fingerprinting scheme that is robust to both noise and repetitive sequences in the data. Our algorithm uses exact matches of short patterns randomly selected from fragment data to identify fragment overlaps, construct an overlap map, and finally deliver a consensus sequence. We show how statistical clues made explicit in our approach can easily be exploited to correctly assemble results even in the presence of extensive repetitive sequences. Our approach is exceptionally fast in practice: e.g., we have successfully assembled a whole Mycoplasma genitalium genome (approximately 580 kbps) in roughly 8 minutes of 64MB 200MHz Pentium Pro CPU time from real shotgun data, where most existing algorithms can be expected to run for several hours to a day on the same data. Moreover, experiments with shotgun data synthetically prepared from real DNA sequences from a wide range of organisms (including human DNA) and containing extensive repeating regions demonstrate our algorithm's robustness to noise and the presence of repetitive sequences. For example, we have correctly assembled a 238kbp Human DNA sequence in less than 3 minutes of 64MB 200MHz Pentium Pro CPU time. fl Support for this research was provided in part by the Office of Naval Research through grant N0014-94-1-1178.
Abstract-found: 1
Intro-found: 1
Reference: [Agarwal94] <author> P. Agarwal and D. J. States, </author> <year> 1994, </year> <title> "The Repeat Pattern Toolkit (RPT): Analyzing the Structure and Evolution of the C. elegans Genome, </title> <booktitle> Proceedings of the 2nd International Conference on Intelligent Systems for Molecular Biology (ISMB94). </booktitle>
Reference-contexts: section, we examine in closer detail our approach to handling both short and long repetitive sequences, respectively. 3.1 Handling Short Repetitive Sequences Short repeats may occur frequently within a relatively short section of DNA; for example, short repeats of 85bps occur 22 times in a particular section of C. elegans <ref> [Agarwal94] </ref>. To avoid being misled by such short repeats, we would like to use only probes from nonrepeating regions of the original sequence during the assembly process. The question, then, is how to identify probes as coming (with high probability) from short repeating regions.
Reference: [Bonfield95] <author> J. K. Bonfield, K. Smith and R. Staden, </author> <year> 1995, </year> <title> "A new DNA sequence assembly program.", </title> <journal> Nucleic Acids Research 23 </journal>
Reference-contexts: The shotgun sequence assembly problem is to reconstruct a long DNA segment from short fragment data by identifying overlaps between fragments. Much existing research on this problem can be found in the literature <ref> [Bonfield95, Foulser90, Gingeras79, Kececioglu95, Parsons95, Peltola84, Idury95, Huang96, Huang92, Staden80, Green] </ref>. Most traditional approaches are based on finding pairwise alignments between fragments, and have demonstrated only limited success when assembling long sequences. <p> Most traditional approaches are based on finding pairwise alignments between fragments, and have demonstrated only limited success when assembling long sequences. Consequently, newer approaches not solely based on simple pairwise alignments have also been recently developed <ref> [Bonfield95, Idury95, Huang96, Sutton95, Parsons95, Green] </ref>. In this paper, we propose our own shotgun sequence assembly algorithm based on finding exact matches of short patterns, or probes, extracted from the input fragment data.
Reference: [Engle93] <author> M. L. Engle and C. Burks, </author> <year> 1993, </year> <title> "Artificially Generated Data Sets for Testing DNA Fragment Assembly Algorithms", </title> <journal> Genomics, </journal> <volume> 16. </volume>
Reference-contexts: The purpose of this demonstration, then, is to see how the two metrics change as the probe length and the error rate are varied. We proceed as follows. First, given a randomly-generated 100kbp DNA sequence, we prepare a artificial set of shotgun sequencing data using GenFrag <ref> [Engle93, Engle94] </ref>. Next, 10 fixed-length probes are randomly selected from each fragment and matched against the input fragment data in a single pass using an efficient multipattern search algorithm. <p> Our implementation of the sequence assembly algorithm is written in C and consists of roughly 14,000 lines of code. All results reported here are collected using a 64MB 200MHz Pentium machine running Linux. Synthetic shotgun data is prepared using GenFrag <ref> [Engle93, Engle94] </ref>. Throughout this chapter, all parameter and threshold values are fixed unless explicitly stated. Otherwise, GenFrag parameters are fixed to coverage of 8, average fragment size of 500bps, and average error rate of 2%.
Reference: [Engle94] <author> M. L. Engle and C. Burks, </author> <year> 1994, </year> <title> "GenFrag 2.1: New Features for More Robust Fragment Assembly Benchmarks", </title> <journal> Genomics, </journal> <volume> 10. </volume>
Reference-contexts: The purpose of this demonstration, then, is to see how the two metrics change as the probe length and the error rate are varied. We proceed as follows. First, given a randomly-generated 100kbp DNA sequence, we prepare a artificial set of shotgun sequencing data using GenFrag <ref> [Engle93, Engle94] </ref>. Next, 10 fixed-length probes are randomly selected from each fragment and matched against the input fragment data in a single pass using an efficient multipattern search algorithm. <p> Our implementation of the sequence assembly algorithm is written in C and consists of roughly 14,000 lines of code. All results reported here are collected using a 64MB 200MHz Pentium machine running Linux. Synthetic shotgun data is prepared using GenFrag <ref> [Engle93, Engle94] </ref>. Throughout this chapter, all parameter and threshold values are fixed unless explicitly stated. Otherwise, GenFrag parameters are fixed to coverage of 8, average fragment size of 500bps, and average error rate of 2%.
Reference: [Foulser90] <author> D. Foulser, </author> <year> 1990, </year> <title> "A Linear Time Algorithm for DNA Sequencing", </title> <type> Technical Report 812, </type> <institution> Department of Computer Science, Yale University. </institution>
Reference-contexts: The shotgun sequence assembly problem is to reconstruct a long DNA segment from short fragment data by identifying overlaps between fragments. Much existing research on this problem can be found in the literature <ref> [Bonfield95, Foulser90, Gingeras79, Kececioglu95, Parsons95, Peltola84, Idury95, Huang96, Huang92, Staden80, Green] </ref>. Most traditional approaches are based on finding pairwise alignments between fragments, and have demonstrated only limited success when assembling long sequences.
Reference: [Gingeras79] <author> T. Gingeras, J. Milazzo, D. Sciaky, and R. Roberts, </author> <year> 1979, </year> <title> "Computer Program for the Assembly of DNA Sequences", </title> <journal> Nucleic Acids Research, </journal> <volume> 7. </volume>
Reference-contexts: The shotgun sequence assembly problem is to reconstruct a long DNA segment from short fragment data by identifying overlaps between fragments. Much existing research on this problem can be found in the literature <ref> [Bonfield95, Foulser90, Gingeras79, Kececioglu95, Parsons95, Peltola84, Idury95, Huang96, Huang92, Staden80, Green] </ref>. Most traditional approaches are based on finding pairwise alignments between fragments, and have demonstrated only limited success when assembling long sequences.
Reference: [Huang92] <author> X. Huang, </author> <year> 1992, </year> <title> "A Contig Assembly Program Based on Sensitive Detection of Fragment Overlaps", </title> <journal> Genomics, </journal> <volume> 14. </volume>
Reference-contexts: The shotgun sequence assembly problem is to reconstruct a long DNA segment from short fragment data by identifying overlaps between fragments. Much existing research on this problem can be found in the literature <ref> [Bonfield95, Foulser90, Gingeras79, Kececioglu95, Parsons95, Peltola84, Idury95, Huang96, Huang92, Staden80, Green] </ref>. Most traditional approaches are based on finding pairwise alignments between fragments, and have demonstrated only limited success when assembling long sequences. <p> Thus to determine the consensus sequence for the contig, we must reconcile all the individual fragment sequences. One view of this problem, which is consistent with most previous work in the area, is to see it as an instance of multiple sequence alignment problem <ref> [Kececioglu95, Sutton95, Huang92, Huang96] </ref>. In contrast, our view of this problem is as a natural extension of the overlap map generation idea, using exact matches of additional probes selected at random from gaps between existing probes in an iterative fashion.
Reference: [Huang96] <author> X. Huang, </author> <year> 1996, </year> <title> "An Improved Sequence Assembly Program ", Genomics, </title> <type> 33. </type>
Reference-contexts: The shotgun sequence assembly problem is to reconstruct a long DNA segment from short fragment data by identifying overlaps between fragments. Much existing research on this problem can be found in the literature <ref> [Bonfield95, Foulser90, Gingeras79, Kececioglu95, Parsons95, Peltola84, Idury95, Huang96, Huang92, Staden80, Green] </ref>. Most traditional approaches are based on finding pairwise alignments between fragments, and have demonstrated only limited success when assembling long sequences. <p> Most traditional approaches are based on finding pairwise alignments between fragments, and have demonstrated only limited success when assembling long sequences. Consequently, newer approaches not solely based on simple pairwise alignments have also been recently developed <ref> [Bonfield95, Idury95, Huang96, Sutton95, Parsons95, Green] </ref>. In this paper, we propose our own shotgun sequence assembly algorithm based on finding exact matches of short patterns, or probes, extracted from the input fragment data. <p> Thus to determine the consensus sequence for the contig, we must reconcile all the individual fragment sequences. One view of this problem, which is consistent with most previous work in the area, is to see it as an instance of multiple sequence alignment problem <ref> [Kececioglu95, Sutton95, Huang92, Huang96] </ref>. In contrast, our view of this problem is as a natural extension of the overlap map generation idea, using exact matches of additional probes selected at random from gaps between existing probes in an iterative fashion. <p> For this reason, correctly assembling sequences containing repeats is a very complex task. Yet although proper handling of repeats is of prime importance when assembling real sequences, the problem has been ignored in many sequencing systems. Only recently have three sequence assembly algorithms, CAP2 <ref> [Huang96] </ref>, TIGR Auto Assembler [Sutton95], and Phrap [Green], proposed ways to handle repeats. Unfortunately, the techniques proposed in these algorithms are either limited to small copy numbers [Huang96] or require additional information [Sutton95, Green]. <p> Only recently have three sequence assembly algorithms, CAP2 <ref> [Huang96] </ref>, TIGR Auto Assembler [Sutton95], and Phrap [Green], proposed ways to handle repeats. Unfortunately, the techniques proposed in these algorithms are either limited to small copy numbers [Huang96] or require additional information [Sutton95, Green]. Here, we propose a systematic way to handle a complex mixtures of short and long repeats without the use of additional information. The underlying intuition comes from an observation that probes with high occurrence counts are with high probability from repeating regions. <p> The given target sequence is known to have long repeats of 1,550bp (almost 7 times longer than the average fragment size) <ref> [Huang96] </ref>. We assembled all 1,504 input fragments into 4 contigs and 1 repeat cluster in 73.10 seconds of 64 MB 200MHz Pentium CPU time. 9 By merging contigs with more than 50 base pairs of overlap, we reduce four contigs into two (see Table 4). <p> The given target sequence is known to have long "reverse" repeats of about 640 base pairs <ref> [Huang96] </ref>. We assembled 1,711 of the 1,719 input fragments into 11 contigs and one repeat cluster in 63.73 seconds of 64 MB 200MHz Pentium CPU time. 10 By merging contigs with more than 50 base pairs of overlap, we produce one repeat cluster and four contigs (see Table 5). <p> The given target sequence is known to have long repeats of about 1387 base pairs (almost 7 times longer than average fragment size) <ref> [Huang96] </ref>.
Reference: [Idury95] <author> R. M. Idury and M. S. Waterman, </author> <year> 1995, </year> <title> "A New Algorithm for DNA Sequence Assembly", </title> <journal> Journal of Computational Biology, </journal> <volume> 2 </volume>
Reference-contexts: The shotgun sequence assembly problem is to reconstruct a long DNA segment from short fragment data by identifying overlaps between fragments. Much existing research on this problem can be found in the literature <ref> [Bonfield95, Foulser90, Gingeras79, Kececioglu95, Parsons95, Peltola84, Idury95, Huang96, Huang92, Staden80, Green] </ref>. Most traditional approaches are based on finding pairwise alignments between fragments, and have demonstrated only limited success when assembling long sequences. <p> Most traditional approaches are based on finding pairwise alignments between fragments, and have demonstrated only limited success when assembling long sequences. Consequently, newer approaches not solely based on simple pairwise alignments have also been recently developed <ref> [Bonfield95, Idury95, Huang96, Sutton95, Parsons95, Green] </ref>. In this paper, we propose our own shotgun sequence assembly algorithm based on finding exact matches of short patterns, or probes, extracted from the input fragment data.
Reference: [Kececioglu95] <author> J. D. Kececioglu and E. W. Myers, </author> <year> 1995, </year> <title> "Combinatorial Algorithms for DNA Sequence Assembly", </title> <journal> Algorithmica, </journal> <volume> 13 </volume>
Reference-contexts: The shotgun sequence assembly problem is to reconstruct a long DNA segment from short fragment data by identifying overlaps between fragments. Much existing research on this problem can be found in the literature <ref> [Bonfield95, Foulser90, Gingeras79, Kececioglu95, Parsons95, Peltola84, Idury95, Huang96, Huang92, Staden80, Green] </ref>. Most traditional approaches are based on finding pairwise alignments between fragments, and have demonstrated only limited success when assembling long sequences. <p> Thus to determine the consensus sequence for the contig, we must reconcile all the individual fragment sequences. One view of this problem, which is consistent with most previous work in the area, is to see it as an instance of multiple sequence alignment problem <ref> [Kececioglu95, Sutton95, Huang92, Huang96] </ref>. In contrast, our view of this problem is as a natural extension of the overlap map generation idea, using exact matches of additional probes selected at random from gaps between existing probes in an iterative fashion.
Reference: [Kim97] <author> S. Kim, </author> <year> 1997, </year> <title> A Structured Pattern Matching Approach to Shotgun Sequence Assembly, </title> <type> Ph.D Dissertation, </type> <institution> Computer Science Department, The University of Iowa, Iowa City. </institution>
Reference-contexts: 10 0.627 0.999 14.86 14 0.998 0.998 13.13 8 10 0.683 0.999 14.47 14 0.999 0.998 12.48 10 10 0.716 0.998 13.57 14 0.999 0.997 12.31 Table 1: For the sample 100kbp target sequence, 12bp or longer probes effectively identify true overlaps and reject false overlaps, regardless of error rate. <ref> [Kim97] </ref> we show how structured matching is both more sensitive and more specific than the simple single-probe technique demonstrated here, even for real DNA sequences with significant repeating regions. <p> Our multipattern exact string match algorithm (see <ref> [Kim97] </ref> for details) exploits a compact 2-bit encoding of nucleotides as well as the short, fixed length, nature of probes and is one key aspect of our system's efficiency. <p> Of course, by removing highly divergent probes, we may lose some probes that actually come from true overlapping regions. While this is true, our assembly procedure exploiting multiple coverage by repeatedly computing overlap scores against the current contigs does not in practice miss many true overlaps; <ref> [Kim97] </ref> presents some guidelines for setting the divergence threshold value. 3.2 Handling Long Repetitive Sequences Next we focus on handling long repeating regions using only probes which have survived the tests for short repeating regions outlined in the previous section. <p> This leaves open the question of how to pick an appropriate fragment distribution threshold value. The current system uses a threshold value corresponding to the third quartile of the symmetric fragment distribution; <ref> [Kim97] </ref> provides more guidelines for fragment distribution threshold settings. <p> Thus we need a way to check whether a repeat cluster does indeed contain long repeats. This check can be performed efficiently using the pairwise pattern alignment algorithm proposed in <ref> [Kim97] </ref>. <p> Guideline for setting the threshold value can be found in <ref> [Kim97] </ref>. 5 The following example should help make this clear. Example 3.3 Consider the repeat cluster shown in Figure 11. We first sort all fragments according to their left end positions. <p> This can be achieved by comparing the regions on either side of the repeats, since we expect these to differ. A more detailed description of how repeat segments are teased out from a repeat cluster can be found in <ref> [Kim97] </ref>. 3.3 A Modified Sequence Assembly Algorithm Now we describe a modified sequence assembly algorithm, including repeat handling features. 1. Select probes and search for probes in fragment data. 2. Collect statistics before fragment assembly. (see Section 3.1 and Section 3.2.1) 3. <p> Construct repeat clusters and determine whether they are real repeats or not. (see Section 3.2.3) 5. Disable all fragments in repeat clusters. 6. Grow contigs from the remaining set of fragments. (see Section 2.2.2) 7. Tease out contigs from repeat clusters. (see <ref> [Kim97] </ref>) 8. Merge contigs from Step 6 with contigs from Step 7. 9. Generate consensus sequence from each contig. (see Section 2.2.3) The last remaining issue is how to merge contigs. <p> Of course, we must consider also reverse complements of the first and the last fragment, since the direction of overlapping contigs may be reversed. The overlap score between a pair of fragments is computed using a pairwise pattern alignment algorithm (see <ref> [Kim97] </ref> for details). <p> built later and can fully exploit multiple coverage. 27 * Empirically, the algorithm is highly reliable and accurate, and demonstrates approximately linear execution time in the length of the target sequence. * The algorithm is robust to relatively high error rates (typically higher than those that occur in practice; see <ref> [Kim97] </ref> for experiments with shotgun data sets with higher error rates). In addition, execution time decreases with lower error rates, as lower error rates exhibit longer regions of exact matches. In summary, our primary contribution is to achieve very fast sequence assembly while providing an intuitive, robust repeat handling procedure.
Reference: [Lander88] <author> E. S. Lander and M. S. Waterman, </author> <year> 1988, </year> <title> "Genomic Mapping by Fingerprinting Random Clones: A Mathematical Analysis", </title> <journal> Genomics, </journal> <volume> 2. </volume> <pages> 28 </pages>
Reference: [Parsons95] <author> R. J. Parsons, S. Forrest, and C. Burks, </author> <year> 1995, </year> <title> "Genetic Algorithms, Operators, and DNA Fragment Assembly", </title> <journal> Machine Learning, </journal> <volume> 21. </volume>
Reference-contexts: The shotgun sequence assembly problem is to reconstruct a long DNA segment from short fragment data by identifying overlaps between fragments. Much existing research on this problem can be found in the literature <ref> [Bonfield95, Foulser90, Gingeras79, Kececioglu95, Parsons95, Peltola84, Idury95, Huang96, Huang92, Staden80, Green] </ref>. Most traditional approaches are based on finding pairwise alignments between fragments, and have demonstrated only limited success when assembling long sequences. <p> Most traditional approaches are based on finding pairwise alignments between fragments, and have demonstrated only limited success when assembling long sequences. Consequently, newer approaches not solely based on simple pairwise alignments have also been recently developed <ref> [Bonfield95, Idury95, Huang96, Sutton95, Parsons95, Green] </ref>. In this paper, we propose our own shotgun sequence assembly algorithm based on finding exact matches of short patterns, or probes, extracted from the input fragment data.
Reference: [Peltola84] <author> H. Peltola, H. Soderlund, and E. Ukonnen, </author> <year> 1984, </year> <title> "A DNA Sequence Assembly Program Based on Mathematical Model", </title> <journal> Nucleic Acids Research, </journal> <volume> 12. </volume>
Reference-contexts: The shotgun sequence assembly problem is to reconstruct a long DNA segment from short fragment data by identifying overlaps between fragments. Much existing research on this problem can be found in the literature <ref> [Bonfield95, Foulser90, Gingeras79, Kececioglu95, Parsons95, Peltola84, Idury95, Huang96, Huang92, Staden80, Green] </ref>. Most traditional approaches are based on finding pairwise alignments between fragments, and have demonstrated only limited success when assembling long sequences.
Reference: [Green] <author> Phrap, </author> <note> http://www.mbt.washington.edu/phrap documentation.html </note>
Reference-contexts: The shotgun sequence assembly problem is to reconstruct a long DNA segment from short fragment data by identifying overlaps between fragments. Much existing research on this problem can be found in the literature <ref> [Bonfield95, Foulser90, Gingeras79, Kececioglu95, Parsons95, Peltola84, Idury95, Huang96, Huang92, Staden80, Green] </ref>. Most traditional approaches are based on finding pairwise alignments between fragments, and have demonstrated only limited success when assembling long sequences. <p> Most traditional approaches are based on finding pairwise alignments between fragments, and have demonstrated only limited success when assembling long sequences. Consequently, newer approaches not solely based on simple pairwise alignments have also been recently developed <ref> [Bonfield95, Idury95, Huang96, Sutton95, Parsons95, Green] </ref>. In this paper, we propose our own shotgun sequence assembly algorithm based on finding exact matches of short patterns, or probes, extracted from the input fragment data. <p> Yet although proper handling of repeats is of prime importance when assembling real sequences, the problem has been ignored in many sequencing systems. Only recently have three sequence assembly algorithms, CAP2 [Huang96], TIGR Auto Assembler [Sutton95], and Phrap <ref> [Green] </ref>, proposed ways to handle repeats. Unfortunately, the techniques proposed in these algorithms are either limited to small copy numbers [Huang96] or require additional information [Sutton95, Green]. Here, we propose a systematic way to handle a complex mixtures of short and long repeats without the use of additional information. <p> Only recently have three sequence assembly algorithms, CAP2 [Huang96], TIGR Auto Assembler [Sutton95], and Phrap [Green], proposed ways to handle repeats. Unfortunately, the techniques proposed in these algorithms are either limited to small copy numbers [Huang96] or require additional information <ref> [Sutton95, Green] </ref>. Here, we propose a systematic way to handle a complex mixtures of short and long repeats without the use of additional information. The underlying intuition comes from an observation that probes with high occurrence counts are with high probability from repeating regions. <p> Much more remains to be done as we further refine AMASS. Specifically, we wish to assimilate additional features of other state-of-the-art assembly algorithms such as the use of clone length constraints [Sutton95], or incorporate the use of base calling quality information <ref> [Green] </ref>.
Reference: [Smith81] <author> T. F. Smith and M. S. Waterman, </author> <year> 1981, </year> <title> "Identification of Common Molecular Sequences", </title> <journal> Journal of Molecular Biology, </journal> <volume> 147 </volume>
Reference: [Staden80] <author> R. Staden, </author> <year> 1980, </year> <title> "A new computer method for the storage and manipulation of DNA gel reading data", </title> <journal> Nucleic Acids Research, </journal> <volume> 8 </volume>
Reference-contexts: The shotgun sequence assembly problem is to reconstruct a long DNA segment from short fragment data by identifying overlaps between fragments. Much existing research on this problem can be found in the literature <ref> [Bonfield95, Foulser90, Gingeras79, Kececioglu95, Parsons95, Peltola84, Idury95, Huang96, Huang92, Staden80, Green] </ref>. Most traditional approaches are based on finding pairwise alignments between fragments, and have demonstrated only limited success when assembling long sequences.
Reference: [Sutton95] <author> G. G. Sutton, et. al., </author> <year> 1995, </year> <title> "TIGR Assembler: A New Tool for Assembling Large Shotgun Sequencing Projects", </title> <booktitle> Genome Science & Technology, </booktitle> <pages> 1 </pages>
Reference-contexts: Most traditional approaches are based on finding pairwise alignments between fragments, and have demonstrated only limited success when assembling long sequences. Consequently, newer approaches not solely based on simple pairwise alignments have also been recently developed <ref> [Bonfield95, Idury95, Huang96, Sutton95, Parsons95, Green] </ref>. In this paper, we propose our own shotgun sequence assembly algorithm based on finding exact matches of short patterns, or probes, extracted from the input fragment data. <p> Thus to determine the consensus sequence for the contig, we must reconcile all the individual fragment sequences. One view of this problem, which is consistent with most previous work in the area, is to see it as an instance of multiple sequence alignment problem <ref> [Kececioglu95, Sutton95, Huang92, Huang96] </ref>. In contrast, our view of this problem is as a natural extension of the overlap map generation idea, using exact matches of additional probes selected at random from gaps between existing probes in an iterative fashion. <p> For this reason, correctly assembling sequences containing repeats is a very complex task. Yet although proper handling of repeats is of prime importance when assembling real sequences, the problem has been ignored in many sequencing systems. Only recently have three sequence assembly algorithms, CAP2 [Huang96], TIGR Auto Assembler <ref> [Sutton95] </ref>, and Phrap [Green], proposed ways to handle repeats. Unfortunately, the techniques proposed in these algorithms are either limited to small copy numbers [Huang96] or require additional information [Sutton95, Green]. <p> Only recently have three sequence assembly algorithms, CAP2 [Huang96], TIGR Auto Assembler [Sutton95], and Phrap [Green], proposed ways to handle repeats. Unfortunately, the techniques proposed in these algorithms are either limited to small copy numbers [Huang96] or require additional information <ref> [Sutton95, Green] </ref>. Here, we propose a systematic way to handle a complex mixtures of short and long repeats without the use of additional information. The underlying intuition comes from an observation that probes with high occurrence counts are with high probability from repeating regions. <p> Louis) Genome Sequencing Center. We prepare shotgun data from each genome with 500bp average fragment length, 2% error rate, and coverage of 8. These parameters are selected so as to be close to those for real shotgun data originally used to obtain this data <ref> [Sutton95] </ref> (see summary in Table 2). <p> Much more remains to be done as we further refine AMASS. Specifically, we wish to assimilate additional features of other state-of-the-art assembly algorithms such as the use of clone length constraints <ref> [Sutton95] </ref>, or incorporate the use of base calling quality information [Green].
Reference: [Waterman95] <author> M. Waterman, </author> <year> 1995, </year> <title> An Introduction to Computational Biology, </title> <publisher> Chapman & Hall. </publisher> <pages> 29 </pages>
Reference-contexts: 1 Introduction The primary goal of the Human Genome Project is to the determine the nucleotide sequence (and thus the information content) of human DNA. However, due to biological limitations, scientists can read DNA fragments of at most on the order of 1000 nucleotides (i.e., 1kbps) at a time <ref> [Waterman95] </ref>. The shotgun sequence assembly problem is to reconstruct a long DNA segment from short fragment data by identifying overlaps between fragments. Much existing research on this problem can be found in the literature [Bonfield95, Foulser90, Gingeras79, Kececioglu95, Parsons95, Peltola84, Idury95, Huang96, Huang92, Staden80, Green].
References-found: 19

