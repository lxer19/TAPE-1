URL: ftp://ftp.cs.washington.edu/tr/1996/09/UW-CSE-96-09-03.PS.Z
Refering-URL: http://www.cs.washington.edu/research/tr/tr-by-title.html
Root-URL: 
Title: On the Limitations of Ordered Representations of Functions  
Author: Jayram S. Thathachar 
Address: Seattle, WA 98195  
Affiliation: Department of Computer Science and Engineering, FR-35 University of Washington  
Abstract: Technical Report UW-CSE-96-09-03 September, 1996 
Abstract-found: 1
Intro-found: 1
Reference: [BC95] <author> R.E. Bryant and Y.-A. Chen. </author> <title> Verification or Arithmetic Circuits with Binary Moment Diagrams. </title> <booktitle> In 32nd ACM/IEEE Design Automation Conference, </booktitle> <address> Pitts-burgh, </address> <month> June </month> <year> 1995. </year> <institution> Carnegie Mellon University. </institution>
Reference-contexts: Progress in the direction of concisely representing the multiplication function was made by Bryant and Chen <ref> [BC95] </ref> who proposed the BMD and the *-BMD representations and showed how multiplication and other arithmetic functions can be represented efficiently at the word level. An immediate and important question that arose was whether *-BMDs are more powerful than MTBDDs or EVBDDs or, at the least, OBDDs. <p> Bryant [Bry91] showed that even computing a single bit can be hard by exhibiting fooling sets of exponential size for the middle-bit version. In contrast, Bryant and Chen <ref> [BC95] </ref> showed that the word-level definition of multiplication has linear-sized *-BMDs. For the following three problems, the input undirected graph is represented by 2 bits.
Reference: [BCL + 94] <author> J.R. Burch, E.M. Clarke, D.E. Long, K.L. MacMillan, and D.L. Dill. </author> <title> Symbolic model checking for sequential circuit verification. </title> <journal> IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems, </journal> <volume> 13(4) </volume> <pages> 401-424, </pages> <month> April </month> <year> 1994. </year>
Reference-contexts: Subsequently, it was shown that OBDDs can also be used to handle the state explosion problem in symbolic model checking (see, for example, [BCM + 90], <ref> [BCL + 94] </ref> and [McM93]). Despite its success, OBDDs have proved to be unsatisfactory for representing some important functions. Thus ordered representations like MTBDDs due to Clarke et al. [CMZ + 93] and EVBDDs due to Lai and Sastry [LS92] were defined.
Reference: [BCM + 90] <author> J.R. Burch, E.M. Clarke, K.L. McMillan, D.L. Dill, and L.J. Hwang. </author> <title> Symbolic Model Checking: 10 20 States and Beyond. </title> <booktitle> In Proceedings of the Fifth Annual IEEE Symposium on Logic in Computer Science, </booktitle> <pages> pages 1-33, </pages> <address> Washington, D.C., June 1990. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: Subsequently, it was shown that OBDDs can also be used to handle the state explosion problem in symbolic model checking (see, for example, <ref> [BCM + 90] </ref>, [BCL + 94] and [McM93]). Despite its success, OBDDs have proved to be unsatisfactory for representing some important functions. Thus ordered representations like MTBDDs due to Clarke et al. [CMZ + 93] and EVBDDs due to Lai and Sastry [LS92] were defined.
Reference: [Bry86] <author> R. E. Bryant. </author> <title> Graph-Based Algorithms for Boolean Function Manipulation. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-35(8):677-691, </volume> <month> August </month> <year> 1986. </year>
Reference-contexts: 1. Introduction In recent years, symbolic model checking has become one of the most important techniques for formal verification of hardware systems. Bryant <ref> [Bry86] </ref> introduced the OBDD representation for functions and showed that OBDDs can represent a rich class of functions succinctly and allow various operations to be performed efficiently.
Reference: [Bry91] <author> R. E. Bryant. </author> <title> On the Complexity of VLSI Implemetations and Graph Representations of Boolean Functions with Application to Integer Multiplication. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 40(2) </volume> <pages> 205-213, </pages> <month> February </month> <year> 1991. </year> <title> On the Limitations of Ordered Representations of Functions 17 </title>
Reference-contexts: Examples of boolean functions that have exponentially large fooling sets can be found in Lipton and Sedgewick [LS81], Papadimitriou and Sipser [PS84] and Bryant <ref> [Bry91] </ref>. Directly computing the rank is a more difficult problem and hence has been used less often to prove AT 2 bounds. Hajnal et al. [HMT88] have shown that many graph-theoretic predicates have associated matrices with exponentially high rank. <p> In the second version, the function computes the middle-bit of the product of two n-bit numbers. Comment: For the verifier version, Lipton and Sedgewick [LS81] showed that this function has fooling sets of exponential size under all partitions of equal size. Bryant <ref> [Bry91] </ref> showed that even computing a single bit can be hard by exhibiting fooling sets of exponential size for the middle-bit version. In contrast, Bryant and Chen [BC95] showed that the word-level definition of multiplication has linear-sized *-BMDs. <p> This variant is similar in spirit to the one used by Enders [End95] and Bryant <ref> [Bry91] </ref>.
Reference: [CFZ95] <author> E. Clarke, M. Fujita, and X. Zhao. </author> <title> Overcoming the limitations of MTBDDs and BMDs. </title> <type> Technical Report CMU-CS-95-159, </type> <institution> School of Computer Science, Carnegie Mellon University, </institution> <address> Pittsburgh, PA 15213, </address> <month> April </month> <year> 1995. </year>
Reference-contexts: This question was answered in the negative by Enders [End95], who exhibited functions with exponential complexity in the *-BMD representation but need only polynomial size OBDDs. Recently, Clarke et al.(see <ref> [CFZ95] </ref> and [CZ95]) defined generalizations of MTBDDs and BMDs, called hybrid decision diagrams (HDDs), that combine the advantages of both the representations. <p> We answer this in the negative, by exhibiting a simple regular language requiring exponential size in the *-BMD representation. This provides a partial justification for Clarke et al.'s (see <ref> [CFZ95] </ref> and [CZ95]) approach for HDDs where they use OBDDs to represent control-logic based functions and BMDs for arithmetic functions. The report is organized as follows. In the next section, we define the BLD representation and illustrate how it generalizes all the ordered representations.
Reference: [CMZ + 93] <author> E. Clarke, K.L. McMillian, X. Zhao, M. Fujita, and J.C.-Y. Yang. </author> <title> Spectral Transforms for large Boolean Functions with Application to Technologie Mapping. </title> <booktitle> In 30th ACM/IEEE Design Automation Conference, </booktitle> <pages> pages 54-60, </pages> <address> Dallas, TX, </address> <month> June </month> <year> 1993. </year>
Reference-contexts: Despite its success, OBDDs have proved to be unsatisfactory for representing some important functions. Thus ordered representations like MTBDDs due to Clarke et al. <ref> [CMZ + 93] </ref> and EVBDDs due to Lai and Sastry [LS92] were defined.
Reference: [CZ95] <author> E. Clarke and X. Zhao. </author> <title> A new approach for verifying arithmetic circuits. </title> <type> Technical Report CMU-CS-95-161, </type> <institution> School of Computer Science, Carnegie Mellon University, </institution> <address> Pittsburgh, PA 15213, </address> <month> May </month> <year> 1995. </year>
Reference-contexts: This question was answered in the negative by Enders [End95], who exhibited functions with exponential complexity in the *-BMD representation but need only polynomial size OBDDs. Recently, Clarke et al.(see [CFZ95] and <ref> [CZ95] </ref>) defined generalizations of MTBDDs and BMDs, called hybrid decision diagrams (HDDs), that combine the advantages of both the representations. However, we are still far from understanding the true power and limitations of these representations and an important question is characterizing the complexity of various important functions in these representations. <p> We answer this in the negative, by exhibiting a simple regular language requiring exponential size in the *-BMD representation. This provides a partial justification for Clarke et al.'s (see [CFZ95] and <ref> [CZ95] </ref>) approach for HDDs where they use OBDDs to represent control-logic based functions and BMDs for arithmetic functions. The report is organized as follows. In the next section, we define the BLD representation and illustrate how it generalizes all the ordered representations.
Reference: [DHS94] <author> Dietzfelbinger, Hromkovic, and Schnitger. </author> <title> A Comparison of Two Lower Bound Methods for Communication Complexity. </title> <booktitle> In Symposium on Mathematical Foundations of Computer Science, </booktitle> <pages> pages 326-335, </pages> <year> 1994. </year>
Reference-contexts: One of the successful methods for proving AT 2 lower bounds is to construct large "fooling sets". Dietzfelbinger et al. <ref> [DHS94] </ref> showed that the rank is at least the square-root of the size of any fooling set; applying this, we can recast all the fooling set based AT 2 bounds for boolean functions as size bounds in the BLD representation. <p> For our application, we are interested in knowing how the fooling set size relates to the rank. The following proposition due to Dietzfelbingeret al. <ref> [DHS94] </ref> shows that if the fooling set size is exponential, then so is the rank. Although they considered equipartitions, the same proof extends to unequal-sized partitions as well, which we give below for the sake of completeness. Proposition 4 (Dietzfelbinger et al. [DHS94]): For a boolean function f , an order <p> The following proposition due to Dietzfelbingeret al. <ref> [DHS94] </ref> shows that if the fooling set size is exponential, then so is the rank. Although they considered equipartitions, the same proof extends to unequal-sized partitions as well, which we give below for the sake of completeness. Proposition 4 (Dietzfelbinger et al. [DHS94]): For a boolean function f , an order on its variable set x p 1 ; x p 2 ; : : : ; x p n and an integer k, 0 k n, let M = M p 1 ;p 2 ;:::;p n matrix as defined in Theorem 2. <p> In general, constructing fooling sets is easier than computing the rank directly. However, there are functions for which the rank is exponentially larger than the size of any fooling set. In fact, Dietzfelbinger et al. <ref> [DHS94] </ref>, in the same paper referred to above, showed that almost all boolean functions satisfy the property that the rank is exponential but no fooling set is larger than linear in size. Therefore, for some functions we have to resort to computing the rank directly.
Reference: [End95] <author> R. Enders. </author> <title> Note on the Complexity of Binary Moment Diagram Representations. </title> <type> Manuscript, </type> <year> 1995. </year>
Reference-contexts: An immediate and important question that arose was whether *-BMDs are more powerful than MTBDDs or EVBDDs or, at the least, OBDDs. This question was answered in the negative by Enders <ref> [End95] </ref>, who exhibited functions with exponential complexity in the *-BMD representation but need only polynomial size OBDDs. Recently, Clarke et al.(see [CFZ95] and [CZ95]) defined generalizations of MTBDDs and BMDs, called hybrid decision diagrams (HDDs), that combine the advantages of both the representations. <p> We show that a variety of functions from arithmetic, sorting, string matching, formal languages, and graph theory have exponential complexity in every one of these representations. Our bounds also apply to other ordered representations like FDDs [KSR92] and *-BDDs <ref> [End95] </ref>. <p> For dealing with the complexity of functions in specific representations, Enders <ref> [End95] </ref>, On the Limitations of Ordered Representations of Functions 3 in order to derive the result referred to above, introduced a general technique that can be adapted to each individual representation. <p> For example, MTBDDs and EVBDDs need exponential size to represent multiplication and exponentiation but *-BMDs can represent these and many other word-level arithmetic functions concisely. However, we already know by the result due to Enders <ref> [End95] </ref>, referred to earlier, that *-BMDs are not more powerful than OBDDs. An interesting question is to contrast these representations for natural classes of languages. <p> In this section, we demonstrate that *-BMDs fail to represent all the languages in this class efficiently. We exhibit a simple regular language that any *-BMD representing it requires exponential size. In order to prove this, we use Enders' <ref> [End95] </ref> approach in bounding the number of distinct path functions. <p> As before, partition X into L and R, where L = fx p 1 ; x p 1 ; : : : ; x p k g. For any input : L ! f0; 1g, we have the following equations: Proposition 6 (Enders <ref> [End95] </ref>): f = t h () = t (1) jjjtj f t (2) To bound the number of nodes in any particular level, we define a variant of the fooling set that we used earlier. This variant is similar in spirit to the one used by Enders [End95] and Bryant [Bry91]. <p> Proposition 6 (Enders <ref> [End95] </ref>): f = t h () = t (1) jjjtj f t (2) To bound the number of nodes in any particular level, we define a variant of the fooling set that we used earlier. This variant is similar in spirit to the one used by Enders [End95] and Bryant [Bry91].
Reference: [HMT88] <author> Andras Hajnal, Wolfgang Maass, and Gyorgy Turan. </author> <title> On the communication complexity of graph properties. </title> <booktitle> In Proceedings of the Twentieth Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 186-191, </pages> <address> Chicago, Illinois, </address> <month> 2-4 May </month> <year> 1988. </year>
Reference-contexts: Examples of boolean functions that have exponentially large fooling sets can be found in Lipton and Sedgewick [LS81], Papadimitriou and Sipser [PS84] and Bryant [Bry91]. Directly computing the rank is a more difficult problem and hence has been used less often to prove AT 2 bounds. Hajnal et al. <ref> [HMT88] </ref> have shown that many graph-theoretic predicates have associated matrices with exponentially high rank. The rank bound also holds for functions that are defined on a word level. <p> Comment: For each of the three functions above, Hajnal et al. <ref> [HMT88] </ref> bounded the rank directly and showed that it is exponential. On the Limitations of Ordered Representations of Functions 12 4. *-BMDs and Regular Languages In the earlier sections, we saw that the rank method is a useful tool for proving bounds that hold uniformly in all the ordered representations.
Reference: [KSR92] <author> U. Kebschull, E. Schubert, and W. Rosenstiel. </author> <title> Multilevel Logic Synthesis Based on Functional Decision Diagrams. </title> <booktitle> In 29th ACM/IEEE Design Automation Conference, </booktitle> <pages> pages 43-47, </pages> <year> 1992. </year>
Reference-contexts: We show that a variety of functions from arithmetic, sorting, string matching, formal languages, and graph theory have exponential complexity in every one of these representations. Our bounds also apply to other ordered representations like FDDs <ref> [KSR92] </ref> and *-BDDs [End95].
Reference: [Len90] <author> Lengauer. </author> <title> VLSI theory. </title> <booktitle> In Handbook of Theoretical Computer Science, </booktitle> <editor> Ed. Jan van Leeuwen, </editor> <title> Elsevier and MIT Press (Volume A (= "1"): </title> <booktitle> Algorithms and Complexity), </booktitle> <volume> volume 1. </volume> <year> 1990. </year>
Reference-contexts: This matrix has previously been looked at by researchers studying VLSI and computational complexity in order to prove area-time-squared (AT 2 ) bounds for boolean functions (See <ref> [Len90] </ref> for references and a survey of this area). One of the successful methods for proving AT 2 lower bounds is to construct large "fooling sets". <p> This measure has been heavily used to give AT 2 bounds in VLSI (see Lengauer <ref> [Len90] </ref> for references). 2 We use this notation instead of the plain M f to show the dependence explicitly. On the Limitations of Ordered Representations of Functions 9 One technique for getting lower bounds on the best-partition communication complexity is to construct large boolean fooling sets, one for each partition.
Reference: [LR92] <author> Lam and Ruzzo. </author> <title> Results on communication complexity classes. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 44, </volume> <year> 1992. </year>
Reference-contexts: Comment: The proof that this function has fooling sets of exponential size under all partitions illustrates a general technique by Lam and Ruzzo <ref> [LR92] </ref> who gave a transformation from the fixed-partition to the best-partition model.
Reference: [LS81] <author> Richard J. Lipton and Robert Sedgewick. </author> <title> Lower bounds for VLSI. </title> <booktitle> In Conference Proceedings of the Thirteenth Annual ACM Symposium on Theory of Computation, </booktitle> <pages> pages 300-307, </pages> <address> Milwaukee, Wisconsin, </address> <month> 11-13 May </month> <year> 1981. </year>
Reference-contexts: Examples of boolean functions that have exponentially large fooling sets can be found in Lipton and Sedgewick <ref> [LS81] </ref>, Papadimitriou and Sipser [PS84] and Bryant [Bry91]. Directly computing the rank is a more difficult problem and hence has been used less often to prove AT 2 bounds. Hajnal et al. [HMT88] have shown that many graph-theoretic predicates have associated matrices with exponentially high rank. <p> Pattern Matching Here, the function is defined to be one if and only if the binary pattern string of ffn bits occurs in the binary text string of (1 ff)n bits, where 0 &lt; ff &lt; 1. Comment: Lipton and Sedgewick <ref> [LS81] </ref> exhibit fooling sets of exponential size for each of the three functions above. <p> In the second version, the function computes the middle-bit of the product of two n-bit numbers. Comment: For the verifier version, Lipton and Sedgewick <ref> [LS81] </ref> showed that this function has fooling sets of exponential size under all partitions of equal size. Bryant [Bry91] showed that even computing a single bit can be hard by exhibiting fooling sets of exponential size for the middle-bit version.
Reference: [LS92] <author> Y.-T. Lai and S. Sastry. </author> <title> Edge-valued binary decision diagrams for multi-level hierarchical verification. </title> <booktitle> In 29th ACM/IEEE Design Automation Conference, </booktitle> <pages> pages 608-613, </pages> <year> 1992. </year>
Reference-contexts: Despite its success, OBDDs have proved to be unsatisfactory for representing some important functions. Thus ordered representations like MTBDDs due to Clarke et al. [CMZ + 93] and EVBDDs due to Lai and Sastry <ref> [LS92] </ref> were defined. These have been effective for some additional functions but still have exponential size complexity for other functions like fl This work was supported by the National Science Foundation under Grant CCR-9303017. 1 On the Limitations of Ordered Representations of Functions 2 multiplication and exponentiation.
Reference: [McM93] <author> K.L. McMillan. </author> <title> Symbolic Model Checking. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Norwell Massachusetts, </address> <year> 1993. </year> <title> On the Limitations of Ordered Representations of Functions 18 </title>
Reference-contexts: Subsequently, it was shown that OBDDs can also be used to handle the state explosion problem in symbolic model checking (see, for example, [BCM + 90], [BCL + 94] and <ref> [McM93] </ref>). Despite its success, OBDDs have proved to be unsatisfactory for representing some important functions. Thus ordered representations like MTBDDs due to Clarke et al. [CMZ + 93] and EVBDDs due to Lai and Sastry [LS92] were defined.
Reference: [MS82] <author> Kurt Mehlhorn and Erik M. Schmidt. </author> <title> Las Vegas is better than determinism in VLSI and distributed computing (extended abstract). </title> <booktitle> In Proceedings of the Fourteenth Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 330-337, </pages> <address> San Francisco, California, </address> <month> 5-7 May </month> <year> 1982. </year>
Reference-contexts: Therefore, for some functions we have to resort to computing the rank directly. This again is a classic problem that has been extensively studied in communication complexity. As shown by Mehlhorn and Schmidt <ref> [MS82] </ref>, the fixed-partition communication complexity of any function is bounded below by the logarithm of the rank of the associated matrix.
Reference: [PS84] <author> Papadimitriou and Sipser. </author> <title> Communication complexity. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 28, </volume> <year> 1984. </year>
Reference-contexts: Examples of boolean functions that have exponentially large fooling sets can be found in Lipton and Sedgewick [LS81], Papadimitriou and Sipser <ref> [PS84] </ref> and Bryant [Bry91]. Directly computing the rank is a more difficult problem and hence has been used less often to prove AT 2 bounds. Hajnal et al. [HMT88] have shown that many graph-theoretic predicates have associated matrices with exponentially high rank.
Reference: [Yao79] <author> Andrew Chi-Chih Yao. </author> <title> Some complexity questions related to distributive computing (preliminary report). </title> <booktitle> In Conference Record of the Eleventh Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 209-213, </pages> <address> Atlanta, Georgia, </address> <month> 30 April-2 May </month> <year> 1979. </year>
References-found: 20

