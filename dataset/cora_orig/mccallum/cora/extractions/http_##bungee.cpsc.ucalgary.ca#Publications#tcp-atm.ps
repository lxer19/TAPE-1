URL: http://bungee.cpsc.ucalgary.ca/Publications/tcp-atm.ps
Refering-URL: http://bungee.cpsc.ucalgary.ca/Publications/telesim.html
Root-URL: 
Title: TCP over ATM:  
Affiliation: Department of Computer Science University of Saskatchewan  
Abstract: Simulation Model and Performance Results Abstract While the Transmission Control Protocol (TCP) generally provides robust performance across many network environments, several researchers have recently identified the poor end-to-end performance achieved by TCP on Asynchronous Transfer Mode (ATM) networks. The performance problems arise for several reasons: (1) a size mismatch between TCP segments and ATM cells; (2) the simple protocols used for segmentation and reassembly in ATM, and for retransmission in TCP; (3) specific "optimizations" in TCP, made primarily for low-bandwidth Internet environments, which do not work well in high speed ATM networks; (4) features (or misfeatures) in most TCP protocol implementations; and (5) subtle interactions between all of these factors. This paper describes a simulation model that we have constructed to study TCP performance on ATM networks, as well as a set of simulation experiments conducted using the model. The TCP model is detailed enough to recreate many of the performance problems identified by other researchers, as well as to evaluate potential solutions to the performance problems. The TCP model adds to the traffic modeling toolkit available in our existing ATM network simulator, and enables the further study of performance issues in TCP over ATM. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> ANSI, </author> <title> "AAL5 ANew High Speed Data Transfer AAL", </title> <address> ANSI T1S1.5 91-449, </address> <month> November </month> <year> 1991. </year>
Reference-contexts: There are several different AAL types available to support the wide range of traffic carried over ATM. The most commonly used AAL for TCP data is AAL5 <ref> [1] </ref>. The AAL5 protocol breaks large data units (e.g., TCP segments) into as many cells as necessary, adds 0 to 47 bytes of padding to the end of the data, and then inserts an 8 byte trailer in the last cell.
Reference: [2] <author> M. Arlitt, Y. Chen, R. Gurski and C. Williamson, </author> <title> "Traffic Modeling in the ATM-TN Telesim Project: Design, Implementation, and Performance Evaluation", </title> <booktitle> Proceedings of the 1995 Summer Computer Simulation Conference, </booktitle> <address> Ottawa, Ontario, </address> <pages> pp. 847-851, </pages> <month> July </month> <year> 1995. </year>
Reference-contexts: Thus, the TCP model provides a valuable tool for network planners, complementing the existing set of traffic models in ATM-TN <ref> [2] </ref>. The remainder of this paper describes the design and implementation of the TCP model, as well as a set of preliminary simulation experiments that have been conducted with the model.
Reference: [3] <author> R. Atkinson, </author> <title> "Default IP MTU for use over ATM AAL5", </title> <type> RFC 1626, </type> <pages> 5 pages, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: A network interface usually has a maximum length of data that it can carry as a single unit, called the Maximum Transmission Unit (MTU). The recommended MTU for AAL5 is 9180 bytes <ref> [3] </ref>; IP fragments any segments longer than this into several datagrams. Since this fragmentation process incurs significant processing overhead, TCP attempts to keep all segment lengths smaller than the MTU. 2.5 TCP TCP is a transport-layer protocol designed to provide reliable, error-free transmission of data between two hosts [17]. <p> The first value (512 bytes) is typical for TCP connections over wide area networks, such as the Internet. The second value (9140 bytes) comes from the recommended 9180 maximum transmission unit (MTU) for IP over ATM <ref> [3] </ref>. This MTU size leaves room for a TCP segment size of 9140 bytes after the 40 byte TCP/IP header. A commonly used measure of end-to-end protocol performance is effective throughput, or goodput.
Reference: [4] <author> A. Bianco, </author> <title> "Performance of the TCP Protocol over ATM Networks", </title> <booktitle> Proceedings of the 3rd International Conference on Computer Communications and Networks, </booktitle> <address> San Francisco, CA, </address> <pages> pp. 170-177, </pages> <month> September </month> <year> 1994. </year>
Reference-contexts: There is one network environment, however, where TCP does not "go" as smoothly: high speed ATM (Asynchronous Transfer Mode) networks [14]. ATM is a connection-oriented low-layer network technology that relies on fast packet-switching of small fixed-size cells. Several recent studies <ref> [4, 10, 15, 18, 21] </ref> have identified the failings of TCP in ATM network environments.
Reference: [5] <author> D. Comer, </author> <title> Internetworking with TCP/IP, Volume 1: Principles, Protocols, and Architecture, Second Edition, </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1991. </year>
Reference-contexts: In Figure 1, the lowest layers, Asynchronous Transfer Mode (ATM) and ATM Adaptation Layer (AAL), are used together to prepare data for transmission over an ATM network. The Transmission Control Protocol (TCP) and the Internet Protocol (IP) comprise the popular TCP/IP protocol suite <ref> [5, 19, 23] </ref>. TCP/IP provides reliable transmission and addressing for many applications including World Wide Web, telnet, and ftp. These applications interface with TCP, which transfers data to IP, which in turn uses the underlying network driver (such as AAL/ATM) to transmit and receive data.
Reference: [6] <author> D. Comer and J. Lin, </author> <title> "TCP Buffering and Performance over an ATM Network", </title> <type> Technical Report CSD-TR 94-026, </type> <institution> Purdue University, West Lafayette, </institution> <address> Indiana, </address> <pages> 15 pages, </pages> <month> March </month> <year> 1994. </year>
Reference-contexts: The socket model includes facilities for simulating the kernel mbuf data structure [13]. Socket copy rules and mbufs have been shown to cause low throughput in TCP over ATM in some situations <ref> [6, 7, 15] </ref>. The model includes parameters for specifying the send and receive buffer sizes and other socket options. 3.4 TCP/IP Layer TCP is modeled in great detail.
Reference: [7] <author> J. Crowcroft, I. Wakeman, Z. Wang, and D. Sirovica, </author> <title> "Is Layering Harmful?", </title> <journal> IEEE Network, </journal> <volume> Vol. 6, No. 1, </volume> <pages> pp. 20-24, </pages> <month> January </month> <year> 1992. </year>
Reference-contexts: The socket model includes facilities for simulating the kernel mbuf data structure [13]. Socket copy rules and mbufs have been shown to cause low throughput in TCP over ATM in some situations <ref> [6, 7, 15] </ref>. The model includes parameters for specifying the send and receive buffer sizes and other socket options. 3.4 TCP/IP Layer TCP is modeled in great detail.
Reference: [8] <author> S. Floyd and V. Jacobson, </author> <title> "On Traffic Phase Effects in Packet-Switched Gateways", </title> <journal> Internet-working: Research and Experience, </journal> <volume> Vol. 3, No. 3, </volume> <pages> pp. 115-156, </pages> <month> September </month> <year> 1992. </year>
Reference-contexts: When round trip times, packet loss and retransmission, or slow-start change the bias, the other source may dominate. This phenomenon is similar to the "traffic phase effects" described in <ref> [8] </ref>, except at the cell level instead of the packet level. Normally, this phasing effect can lead to large differences in the share of bandwidth each source receives [8]. <p> This phenomenon is similar to the "traffic phase effects" described in <ref> [8] </ref>, except at the cell level instead of the packet level. Normally, this phasing effect can lead to large differences in the share of bandwidth each source receives [8]. However, in our experiments the bias alternated between sources throughout the simulation duration and each received roughly the same share of bandwidth, since TCP timeouts and round trip times sufficiently "randomized" packet transmission times.
Reference: [9] <author> F. Gomes, S. Franks, B. Unger, Z. Xiao, J. Cleary, and A. Covington, "SimKit: </author> <title> A High Performance Logical Process Simulation Class Library in C ++ ", Proceedings of the 1995 Winter Simulation Conference, </title> <address> Arlington, VA, </address> <month> December </month> <year> 1995. </year>
Reference-contexts: This implementation is essentially the popular 4.3BSD Reno release with support for high-bandwidth, long-delay paths [12]. The networking implementation in 4.4BSD-Lite has also been called Net/3 [23]. The simulation model of TCP/ATM is written in SimKit <ref> [9] </ref>, a C ++ based framework with support for sequential and parallel simulation. A full protocol stack is modeled, from the application level down to the ATM level (see Figure 1).
Reference: [10] <author> M. Hassan, </author> <title> "Impact of Cell Loss on the Efficiency of TCP/IP over ATM", </title> <booktitle> Proceedings of the 3rd International Conference on Computer Communications and Networks, </booktitle> <address> San Francisco, CA, </address> <pages> pp. 165-169, </pages> <month> September </month> <year> 1994. </year>
Reference-contexts: There is one network environment, however, where TCP does not "go" as smoothly: high speed ATM (Asynchronous Transfer Mode) networks [14]. ATM is a connection-oriented low-layer network technology that relies on fast packet-switching of small fixed-size cells. Several recent studies <ref> [4, 10, 15, 18, 21] </ref> have identified the failings of TCP in ATM network environments.
Reference: [11] <author> V. Jacobson, </author> <title> "Congestion Avoidance and Control", </title> <booktitle> Proceedings of the 1988 ACM SIGCOMM Conference, </booktitle> <address> Stanford, CA, </address> <pages> pp. 314-329, </pages> <month> August </month> <year> 1988. </year>
Reference-contexts: The maximum number of bytes that a sender can have outstanding is the lesser of the send window and the congestion window. A standard algorithm that makes use of the congestion window is called slow-start <ref> [11] </ref>. When a segment is lost, the send window is set to one segment and increased by one segment as each successfully delivered segment is acknowledged.
Reference: [12] <author> V. Jacobson, R. Braden, and D. </author> <title> Borman, "TCP Extensions for High Performance", </title> <type> RFC 1323, </type> <pages> 37 pages, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: The fast recovery algorithm avoids performing slow-start after a fast retransmit. Numerous enhancements have also been made to TCP for high speed, long distance networks (e.g., timestamps, larger send windows <ref> [12] </ref>). 2.6 Application/Socket Interface In 4.2BSD and later versions, applications communicate with the TCP protocol through network sockets. The socket interface includes facilities for making network connections, buffering data, and writing and receiving data streams. <p> The model is closely based on the TCP/IP networking code from the 4.4BSD-Lite release, developed by the University of California, Berkeley and its contributors (April 1994). This implementation is essentially the popular 4.3BSD Reno release with support for high-bandwidth, long-delay paths <ref> [12] </ref>. The networking implementation in 4.4BSD-Lite has also been called Net/3 [23]. The simulation model of TCP/ATM is written in SimKit [9], a C ++ based framework with support for sequential and parallel simulation. <p> The model implementation of TCP is virtually identical to Net/3 and includes the same features such as slow-start, fast retransmit, fast recovery, and high performance extensions <ref> [12] </ref>. It also supports full-duplex data communication to investigate the effects of piggybacked acknowledgements [24]. <p> These include timer granularity, maximum segment size (MSS), maximum transmission unit (MTU), and transmission start time. Features can also be disabled, such as the TCP high performance extensions <ref> [12] </ref> and Nagle's algorithm [16]. A detailed report for each source/sink is generated after each simulation, including bytes sent and received, retransmitted segments, duplicate segments, and dropped cells. <p> All links have a bandwidth of 1 Mbps and a propagation delay of 3.7 s per km, resulting in a round trip time of approximately 30 ms for each source. The simulated network does not qualify as a high-bandwidth, long-delay link <ref> [12] </ref>, so the TCP high performance extensions were disabled for all experiments. The traffic sources use 64 kilobyte send windows (i.e., send and receive socket buffers) in all experiments. The switch is a simple single-stage output-buffered model.
Reference: [13] <author> S. Le*er, M. McKusick, M. Karels, and J. Quarterman, </author> <title> The Design and Implementation of the 4.3BSD UNIX Operating System, </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Massachusetts, </address> <year> 1989. </year>
Reference-contexts: The socket model includes facilities for simulating the kernel mbuf data structure <ref> [13] </ref>. Socket copy rules and mbufs have been shown to cause low throughput in TCP over ATM in some situations [6, 7, 15]. The model includes parameters for specifying the send and receive buffer sizes and other socket options. 3.4 TCP/IP Layer TCP is modeled in great detail.
Reference: [14] <author> S. Minzer, </author> <title> "Broadband ISDN and Asynchronous Transfer Mode (ATM)", </title> <journal> IEEE Communications, </journal> <volume> Vol. 27, No. 9, </volume> <pages> pp. 17-24, </pages> <month> September </month> <year> 1989. </year>
Reference-contexts: There is one network environment, however, where TCP does not "go" as smoothly: high speed ATM (Asynchronous Transfer Mode) networks <ref> [14] </ref>. ATM is a connection-oriented low-layer network technology that relies on fast packet-switching of small fixed-size cells. Several recent studies [4, 10, 15, 18, 21] have identified the failings of TCP in ATM network environments. <p> The following subsections provide more detail on the TCP/ATM protocol stack depicted in Figure 1. The discussion begins with the lowest layer (ATM), and proceeds upward through the protocol stack to the application layer. 2.2 ATM Asynchronous Transfer Mode (ATM) <ref> [14] </ref> is a method by which fixed-length units called cells are individually relayed to a destination. Each ATM cell is 53 bytes in length, which includes a 5 byte header. The header includes two addressing fields: a Virtual Path Identifier (VPI) and a Virtual Channel Identifier (VCI).
Reference: [15] <author> K. Moldeklev and P. Gunningberg, </author> <title> "How a Large ATM MTU Causes Deadlocks in TCP Data Transfers", </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> Vol. 3, No. 4, </volume> <pages> pp. 409-422, </pages> <month> August </month> <year> 1995. </year>
Reference-contexts: There is one network environment, however, where TCP does not "go" as smoothly: high speed ATM (Asynchronous Transfer Mode) networks [14]. ATM is a connection-oriented low-layer network technology that relies on fast packet-switching of small fixed-size cells. Several recent studies <ref> [4, 10, 15, 18, 21] </ref> have identified the failings of TCP in ATM network environments. <p> ATM is a connection-oriented low-layer network technology that relies on fast packet-switching of small fixed-size cells. Several recent studies [4, 10, 15, 18, 21] have identified the failings of TCP in ATM network environments. In fact, the study reported in <ref> [15] </ref> shows that the effective throughput achieved by TCP over a 140 Mbps ATM link can approach zero (0.16 Mbps, to be exact) under certain conditions in the configuration and operation of TCP. These performance problems are largely due to the segmentation and reassembly process required for ATM networks. <p> For example, the delayed acknowledgement strategy 1 and Nagle's algorithm [16] both interact in subtle ways with the socket buffer copy rules in most TCP implementations to produce very low TCP throughput <ref> [15] </ref>. The end result is quite ironic: the TCP protocol provides its worst end-to-end performance precisely on the high speed ATM networks that are now being deployed. <p> The end result is quite ironic: the TCP protocol provides its worst end-to-end performance precisely on the high speed ATM networks that are now being deployed. While solutions for many of the performance problems are suggested in the literature <ref> [15, 18] </ref>, the "TCP over ATM" anomaly remains as a curious and interesting phenomenon to study. The purpose of this paper is to describe a simulation model that we have constructed to study the performance achieved by TCP on ATM networks. <p> This idle time results in low throughput for all sources. Other problems with TCP over ATM are a result of the particular implementation. In 4.3BSD, for example, the socket buffer copy rules and delayed ac-knowledgements can cause very low throughput over ATM networks <ref> [15] </ref>. The coarse granularity of round trip and retransmission timers can also decrease performance, particularly in high speed networks. 3 TCP/ATM Simulation Model 3.1 Overview The TCP model is designed to simulate bulk data transfer between two hosts over an ATM network, similar to the FTP protocol. <p> The socket model includes facilities for simulating the kernel mbuf data structure [13]. Socket copy rules and mbufs have been shown to cause low throughput in TCP over ATM in some situations <ref> [6, 7, 15] </ref>. The model includes parameters for specifying the send and receive buffer sizes and other socket options. 3.4 TCP/IP Layer TCP is modeled in great detail.
Reference: [16] <author> J. Nagle, </author> <title> "Congestion Control in IP/TCP Inter-networks", </title> <journal> ACM Computer Communication Review, </journal> <volume> Vol. 14, No. 4, </volume> <pages> pp. 11-17, </pages> <month> October </month> <year> 1984. </year> <note> (Nagle's algorithm is also described in RFC 896, </note> <month> January </month> <year> 1984). </year>
Reference-contexts: There are several other "optimizations" that have been made to TCP, primarily for the Internet environment, which serve to further degrade the performance of TCP on ATM networks. For example, the delayed acknowledgement strategy 1 and Nagle's algorithm <ref> [16] </ref> both interact in subtle ways with the socket buffer copy rules in most TCP implementations to produce very low TCP throughput [15]. The end result is quite ironic: the TCP protocol provides its worst end-to-end performance precisely on the high speed ATM networks that are now being deployed. <p> These include timer granularity, maximum segment size (MSS), maximum transmission unit (MTU), and transmission start time. Features can also be disabled, such as the TCP high performance extensions [12] and Nagle's algorithm <ref> [16] </ref>. A detailed report for each source/sink is generated after each simulation, including bytes sent and received, retransmitted segments, duplicate segments, and dropped cells.
Reference: [17] <author> J. Postel, </author> <title> editor, "Transmission Control Protocol", </title> <type> RFC 793, </type> <pages> 85 pages, </pages> <month> September </month> <year> 1981. </year>
Reference-contexts: 1 Introduction The Transmission Control Protocol (TCP) <ref> [17] </ref> is often described as the "4-wheel drive" of transport-layer protocols, because of its ability to "go anywhere that you need to go". <p> Since this fragmentation process incurs significant processing overhead, TCP attempts to keep all segment lengths smaller than the MTU. 2.5 TCP TCP is a transport-layer protocol designed to provide reliable, error-free transmission of data between two hosts <ref> [17] </ref>. TCP uses IP as a means of transporting an application's data across a potentially unreliable network, and adds facilities to ensure that all transmitted data arrives error-free at the receiving host and is reassembled in order.
Reference: [18] <author> A. Romanow and S. Floyd, </author> <title> "Dynamics of TCP Traffic over ATM Networks", </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> Vol. 13, No. 4, </volume> <pages> pp. 633-641, </pages> <month> May </month> <year> 1995. </year>
Reference-contexts: There is one network environment, however, where TCP does not "go" as smoothly: high speed ATM (Asynchronous Transfer Mode) networks [14]. ATM is a connection-oriented low-layer network technology that relies on fast packet-switching of small fixed-size cells. Several recent studies <ref> [4, 10, 15, 18, 21] </ref> have identified the failings of TCP in ATM network environments. <p> The end result is quite ironic: the TCP protocol provides its worst end-to-end performance precisely on the high speed ATM networks that are now being deployed. While solutions for many of the performance problems are suggested in the literature <ref> [15, 18] </ref>, the "TCP over ATM" anomaly remains as a curious and interesting phenomenon to study. The purpose of this paper is to describe a simulation model that we have constructed to study the performance achieved by TCP on ATM networks. <p> Transmitting "dead" cells only wastes bandwidth on the already congested network. When the TCP source retransmits the lost segment, even more bandwidth is wasted. The end result is low throughput for TCP over ATM. Some strategies for dealing with "dead" cells include Partial Packet Discard <ref> [18] </ref>, where all remaining cells in a segment are dropped following a lost cell, and Early Packet Discard [18], where switches drop all cells from a segment when experiencing congestion. These result in much improved performance, compared to TCP over plain ATM [18]. <p> The end result is low throughput for TCP over ATM. Some strategies for dealing with "dead" cells include Partial Packet Discard <ref> [18] </ref>, where all remaining cells in a segment are dropped following a lost cell, and Early Packet Discard [18], where switches drop all cells from a segment when experiencing congestion. These result in much improved performance, compared to TCP over plain ATM [18]. Another problem is a result of the TCP slow-start algorithm. <p> dealing with "dead" cells include Partial Packet Discard <ref> [18] </ref>, where all remaining cells in a segment are dropped following a lost cell, and Early Packet Discard [18], where switches drop all cells from a segment when experiencing congestion. These result in much improved performance, compared to TCP over plain ATM [18]. Another problem is a result of the TCP slow-start algorithm. When several sources share a common link and experience congestion, cells from all sources may be dropped [24]. <p> In addition, the result of dropping all cells from the same source functions as a primitive type of Partial Packet Discard <ref> [18] </ref> which actually improves the performance of TCP over ATM. 4.4 Experiment 3: Switch Buffer Size A final experiment was conducted to measure the effect of switch buffer size on the aggregate throughput of the network. <p> Ten sources were connected to the switch and the switch buffer size was varied from 100 to 15000 cells. Simulations were performed for MSS sizes of 512 bytes and 9140 bytes. A similar experiment appears in Romanow & Floyd <ref> [18] </ref>, though their network is a much faster local area network, while ours is a slower, longer wide area network. Our network was chosen in order to avoid modifying the granularity of the TCP timers, as required in their experiment. Our results are shown in Figure 6. <p> Large segments with lost cells result in wasted bandwidth as the remainder of the segment is transmitted over the congested link. Qualitatively, our results are similar to those in Romanow & Floyd <ref> [18] </ref>. Our effective throughput is higher for all switch buffer sizes. <p> Second, TCP/ATM traffic is subject to traffic phasing effects, both at the segment level and the cell level. Third, a deterministic cell drop strategy at the switches was found to improve throughput over a random cell drop method <ref> [18] </ref>. Finally, there is a tradeoff between increased throughput and the possibility of some sources receiving the majority of the available bandwidth while others receive very little. While this segregation effect is undesirable, the aggregate throughput remains higher than with the random cell drop strategy.
Reference: [19] <author> W. </author> <title> Stevens, </title> <journal> TCP/IP Illustrated, </journal> <volume> Volume 1, </volume> <publisher> Addison-Wesley, </publisher> <address> Reading, Massachusetts, </address> <year> 1993. </year>
Reference-contexts: In Figure 1, the lowest layers, Asynchronous Transfer Mode (ATM) and ATM Adaptation Layer (AAL), are used together to prepare data for transmission over an ATM network. The Transmission Control Protocol (TCP) and the Internet Protocol (IP) comprise the popular TCP/IP protocol suite <ref> [5, 19, 23] </ref>. TCP/IP provides reliable transmission and addressing for many applications including World Wide Web, telnet, and ftp. These applications interface with TCP, which transfers data to IP, which in turn uses the underlying network driver (such as AAL/ATM) to transmit and receive data.
Reference: [20] <author> A. Tanenbaum, </author> <title> Computer Networks, Second Edition, </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1988. </year>
Reference-contexts: Finally, Section 5 concludes the paper. 2 Background: TCP and ATM This section provides some background on the protocols and issues involved in transmitting TCP over ATM networks. 2.1 TCP/ATM Protocol Stack An example of a TCP/ATM protocol stack <ref> [20] </ref> is shown in Figure 1. This protocol stack shows the application interfacing to TCP, which is the end-to-end protocol. After processing by several other levels, data is eventually transmitted over an ATM network. This process is referred to as TCP over ATM, or TCP/ATM. <p> If the data is intact, it is passed to the next higher protocol layer (in this case, IP). 2.4 IP The Internet Protocol (IP) is a connectionless network layer protocol <ref> [20] </ref>. The IP layer is responsible for routing individual datagram packets to their destinations on a "best-effort" basis. End-to-end error control is left to a higher layer, such as TCP.
Reference: [21] <author> C. Tipper and J. Daigle, </author> <title> "ATM Cell Delay and Loss for Best-Effort TCP in the Presence of Isochronous Traffic", </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> Vol. 13, No. 8, </volume> <pages> pp. 1457-1464, </pages> <month> October </month> <year> 1995. </year>
Reference-contexts: There is one network environment, however, where TCP does not "go" as smoothly: high speed ATM (Asynchronous Transfer Mode) networks [14]. ATM is a connection-oriented low-layer network technology that relies on fast packet-switching of small fixed-size cells. Several recent studies <ref> [4, 10, 15, 18, 21] </ref> have identified the failings of TCP in ATM network environments.
Reference: [22] <author> B. Unger, F. Gomes, Z. Xiao, P. Gburzynski, T. Ono-Tesfaye, S. Ramaswamy, C. Williamson, and A. Covington, </author> <title> "A High Fidelity ATM Traffic and Network Simulator", </title> <booktitle> Proceedings of the 1995 Winter Simulation Conference, </booktitle> <address> Arlington, VA, </address> <month> December </month> <year> 1995. </year>
Reference-contexts: The TCP model has been designed and implemented as part of the ATM-TN (Asynchronous Transfer Mode Traffic and Network) network simulator developed by the TeleSim project <ref> [22] </ref>. Our TCP model, which has been validated against results reported in the literature and with measurements from the Wnet experimental ATM network in western Canada, allows an ATM-TN simulation user to faithfully model the behaviour of TCP on ATM networks.
Reference: [23] <author> G. Wright and W. Stevens, </author> <title> TCP/IP Illustrated, </title> <booktitle> Volume 2: The Implementation. </booktitle> <publisher> Addison-Wesley, </publisher> <address> Reading, Massachusetts, </address> <year> 1995. </year>
Reference-contexts: In Figure 1, the lowest layers, Asynchronous Transfer Mode (ATM) and ATM Adaptation Layer (AAL), are used together to prepare data for transmission over an ATM network. The Transmission Control Protocol (TCP) and the Internet Protocol (IP) comprise the popular TCP/IP protocol suite <ref> [5, 19, 23] </ref>. TCP/IP provides reliable transmission and addressing for many applications including World Wide Web, telnet, and ftp. These applications interface with TCP, which transfers data to IP, which in turn uses the underlying network driver (such as AAL/ATM) to transmit and receive data. <p> This implementation is essentially the popular 4.3BSD Reno release with support for high-bandwidth, long-delay paths [12]. The networking implementation in 4.4BSD-Lite has also been called Net/3 <ref> [23] </ref>. The simulation model of TCP/ATM is written in SimKit [9], a C ++ based framework with support for sequential and parallel simulation. A full protocol stack is modeled, from the application level down to the ATM level (see Figure 1).
Reference: [24] <author> L. Zhang, S. Shenker, and D. Clark, </author> <title> "Observations on the Dynamics of a Congestion Control Algorithm: The Effects of Two-Way Traffic", </title> <booktitle> Proceedings of the 1991 ACM SIGCOMM Conference, </booktitle> <address> Zurich, Switzerland, </address> <pages> pp. 133-147, </pages> <month> September </month> <year> 1991. </year>
Reference-contexts: These result in much improved performance, compared to TCP over plain ATM [18]. Another problem is a result of the TCP slow-start algorithm. When several sources share a common link and experience congestion, cells from all sources may be dropped <ref> [24] </ref>. All sources shrink their congestion windows to one segment (the default), and the link can be mostly idle while all sources are in the slow-start phase of the slow-start algorithm. This idle time results in low throughput for all sources. <p> The model implementation of TCP is virtually identical to Net/3 and includes the same features such as slow-start, fast retransmit, fast recovery, and high performance extensions [12]. It also supports full-duplex data communication to investigate the effects of piggybacked acknowledgements <ref> [24] </ref>. The IP layer is not explicitly modeled; instead, all routing takes place at the ATM level, and the TCP model adjusts segment sizes to account for IP headers and fragmentation. 3.5 AAL/ATM Layer The AAL and ATM layers are combined.
References-found: 24

