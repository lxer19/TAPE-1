URL: ftp://ftp.cs.dartmouth.edu/TR/TR98-329.ps.Z
Refering-URL: http://www.cs.dartmouth.edu/reports/abstracts/TR98-329/
Root-URL: http://www.cs.dartmouth.edu
Title: An Implementation of the Vesta Parallel File System API on the Galley Parallel File System  
Author: Matthew P. Carter David Kotz 
Date: 23, 1998  
Web: URL ftp://ftp.cs.dartmouth.edu/TR/TR98-329.ps.Z  
Note: Available at  April  
Abstract: Technical Report PCS-TR98-329 Department of Computer Science Dartmouth College Hanover, NH 03755 matt.carter.98@alum.dartmouth.org, dfk@cs.dartmouth.edu Abstract To demonstrate the flexibility of the Galley parallel file system and to analyze the efficiency and flexibility of the Vesta parallel file system interface, we implemented Vesta's application-programming interface on top of Galley. We implemented the Vesta interface using Galley's file-access methods, whose design arose from extensive testing and characterization of the I/O requirements of scientific applications for high-performance multiprocessors. We used a parallel CPU, parallel I/O, out-of-core matrix-multiplication application to test the Vesta interface in both its ability to specify data access patterns and in its run-time efficiency. In spite of its powerful ability to specify the distribution of regular, non-overlapping data access patterns across disks, we found that the Vesta interface has some significant limitations. We discuss these limitations in detail in the paper, along with the performance results. 
Abstract-found: 1
Intro-found: 1
Reference: [CBF93] <author> Peter F. Corbett, Sandra Johnson Baylor, and Dror G. Feitelson. </author> <title> Overview of the Vesta parallel file system. </title> <booktitle> In Proceedings of the IPPS '93 Workshop on Input/Output in Parallel Computer Systems, </booktitle> <pages> pages 1-16, </pages> <address> Newport Beach, CA, </address> <year> 1993. </year> <note> Also published in Computer Architecture News 21(5), </note> <month> December </month> <year> 1993, </year> <pages> pages 7-14. </pages>
Reference-contexts: 1 Introduction Many parallel file systems have been developed in recent years. There is as yet no agreement about the application programmer's interface (API). One intriguing interface is that of the Vesta parallel file system <ref> [CBF93, CF94, CFP + 95, CF96] </ref>, which seems to support regular, non-overlapping matrix distributions well.
Reference: [CF94] <author> Peter F. Corbett and Dror G. Feitelson. </author> <title> Vesta file system programmer's reference. </title> <type> Technical Report Research Report RC 19898 (88058), </type> <institution> IBM T.J. Watson Research Center, </institution> <address> Yorktown Heights, NY 10598, </address> <month> October </month> <year> 1994. </year> <note> Version 1.01. </note>
Reference-contexts: 1 Introduction Many parallel file systems have been developed in recent years. There is as yet no agreement about the application programmer's interface (API). One intriguing interface is that of the Vesta parallel file system <ref> [CBF93, CF94, CFP + 95, CF96] </ref>, which seems to support regular, non-overlapping matrix distributions well.
Reference: [CF96] <author> Peter F. Corbett and Dror G. Feitelson. </author> <title> The Vesta parallel file system. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 14(3) </volume> <pages> 225-264, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: 1 Introduction Many parallel file systems have been developed in recent years. There is as yet no agreement about the application programmer's interface (API). One intriguing interface is that of the Vesta parallel file system <ref> [CBF93, CF94, CFP + 95, CF96] </ref>, which seems to support regular, non-overlapping matrix distributions well.
Reference: [CFP + 95] <author> Peter F. Corbett, Dror G. Feitelson, Jean-Pierre Prost, George S. Almasi, Sandra John-son Baylor, Anthony S. Bolmarcich, Yarsun Hsu, Julian Satran, Marc Snir, Robert Colao, Brian Herr, Joseph Kavaky, Thomas R. Morgan, and Anthony Zlotek. </author> <title> Parallel file systems for the IBM SP computers. </title> <journal> IBM Systems Journal, </journal> <volume> 34(2) </volume> <pages> 222-248, </pages> <month> January </month> <year> 1995. </year>
Reference-contexts: 1 Introduction Many parallel file systems have been developed in recent years. There is as yet no agreement about the application programmer's interface (API). One intriguing interface is that of the Vesta parallel file system <ref> [CBF93, CF94, CFP + 95, CF96] </ref>, which seems to support regular, non-overlapping matrix distributions well.
Reference: [KN96] <author> David Kotz and Nils Nieuwejaar. </author> <title> Flexibility and performance of parallel file systems. </title> <booktitle> In Proceedings of the Third International Conference of the Austrian Center for Parallel 12 Computation (ACPC), volume 1127 of Lecture Notes in Computer Science, </booktitle> <pages> pages 1-11. </pages> <publisher> Springer-Verlag, </publisher> <month> September </month> <year> 1996. </year>
Reference-contexts: There is as yet no agreement about the application programmer's interface (API). One intriguing interface is that of the Vesta parallel file system [CBF93, CF94, CFP + 95, CF96], which seems to support regular, non-overlapping matrix distributions well. The interface for the Galley parallel file system <ref> [NK96a, NK96b, KN96, NK97] </ref> attempts to be a low-level interface that can be a base for other APIs, so it was natural to consider implementing Vesta's API on Galley. (We have also implemented the Panda API [Tho96] and a linear-file model similar to many older parallel file systems [Nie96].) We implemented
Reference: [Nie96] <author> Nils A. Nieuwejaar. </author> <title> Galley: A New Parallel File System for Parallel Applications. </title> <type> PhD thesis, </type> <institution> Dept. of Computer Science, Dartmouth College, </institution> <month> November </month> <year> 1996. </year> <note> Available as Dartmouth Technical Report PCS-TR96-300. </note>
Reference-contexts: file system [NK96a, NK96b, KN96, NK97] attempts to be a low-level interface that can be a base for other APIs, so it was natural to consider implementing Vesta's API on Galley. (We have also implemented the Panda API [Tho96] and a linear-file model similar to many older parallel file systems <ref> [Nie96] </ref>.) We implemented the Vesta file system API on top of the Galley file system running on a cluster of Unix workstations. Our implementation of the Vesta interface was straightforward and efficient, because of Galley's flexible design.
Reference: [NK96a] <author> Nils Nieuwejaar and David Kotz. </author> <title> The Galley parallel file system. </title> <booktitle> In Proceedings of the 10th ACM International Conference on Supercomputing, </booktitle> <pages> pages 374-381, </pages> <address> Philadelphia, PA, May 1996. </address> <publisher> ACM Press. </publisher>
Reference-contexts: There is as yet no agreement about the application programmer's interface (API). One intriguing interface is that of the Vesta parallel file system [CBF93, CF94, CFP + 95, CF96], which seems to support regular, non-overlapping matrix distributions well. The interface for the Galley parallel file system <ref> [NK96a, NK96b, KN96, NK97] </ref> attempts to be a low-level interface that can be a base for other APIs, so it was natural to consider implementing Vesta's API on Galley. (We have also implemented the Panda API [Tho96] and a linear-file model similar to many older parallel file systems [Nie96].) We implemented
Reference: [NK96b] <author> Nils Nieuwejaar and David Kotz. </author> <title> Performance of the Galley parallel file system. </title> <booktitle> In Proceedings of the Fourth Workshop on Input/Output in Parallel and Distributed Systems, </booktitle> <pages> pages 83-94, </pages> <address> Philadelphia, May 1996. </address> <publisher> ACM Press. </publisher>
Reference-contexts: There is as yet no agreement about the application programmer's interface (API). One intriguing interface is that of the Vesta parallel file system [CBF93, CF94, CFP + 95, CF96], which seems to support regular, non-overlapping matrix distributions well. The interface for the Galley parallel file system <ref> [NK96a, NK96b, KN96, NK97] </ref> attempts to be a low-level interface that can be a base for other APIs, so it was natural to consider implementing Vesta's API on Galley. (We have also implemented the Panda API [Tho96] and a linear-file model similar to many older parallel file systems [Nie96].) We implemented
Reference: [NK97] <author> Nils Nieuwejaar and David Kotz. </author> <title> The Galley parallel file system. </title> <journal> Parallel Computing, </journal> <volume> 23(4) </volume> <pages> 447-476, </pages> <month> June </month> <year> 1997. </year>
Reference-contexts: There is as yet no agreement about the application programmer's interface (API). One intriguing interface is that of the Vesta parallel file system [CBF93, CF94, CFP + 95, CF96], which seems to support regular, non-overlapping matrix distributions well. The interface for the Galley parallel file system <ref> [NK96a, NK96b, KN96, NK97] </ref> attempts to be a low-level interface that can be a base for other APIs, so it was natural to consider implementing Vesta's API on Galley. (We have also implemented the Panda API [Tho96] and a linear-file model similar to many older parallel file systems [Nie96].) We implemented
Reference: [Tho96] <author> Joel T. Thomas. </author> <title> The Panda array I/O library on the Galley parallel file system. </title> <type> Technical Report PCS-TR96-288, </type> <institution> Dept. of Computer Science, Dartmouth College, </institution> <month> June </month> <year> 1996. </year> <type> Senior Honors Thesis. 13 </type>
Reference-contexts: The interface for the Galley parallel file system [NK96a, NK96b, KN96, NK97] attempts to be a low-level interface that can be a base for other APIs, so it was natural to consider implementing Vesta's API on Galley. (We have also implemented the Panda API <ref> [Tho96] </ref> and a linear-file model similar to many older parallel file systems [Nie96].) We implemented the Vesta file system API on top of the Galley file system running on a cluster of Unix workstations. Our implementation of the Vesta interface was straightforward and efficient, because of Galley's flexible design.
References-found: 10

