URL: http://vlsicad.cs.ucla.edu/~abk/papers/conference/c81.ps
Refering-URL: http://vlsicad.cs.ucla.edu/~abk/publications.html
Root-URL: http://www.cs.ucla.edu
Email: fcaldwell,abk,imarkovg@cs.ucla.edu  
Title: Relaxed Partitioning Balance Constraints in Top-Down Placement  
Author: Andrew E. Caldwell, Andrew B. Kahng and Igor L. Markov 
Address: Los Angeles, CA 90095-1596 USA  
Affiliation: UCLA Computer Science Department,  
Abstract: Recent work of Simon and Teng [17] observes that the recursive bisection (i.e., bipartitioning with equal partition target areas, and minimum possible allowed deviation from targets) heuristic for k-way minimum-cut graph partitioning can have unbounded error, but that relaxing the balance constraints in each call to the biparti-tioning engine can result in k-way net cuts within a small (O(log k)) factor of optimal. Motivated by this result, we experimentally determine whether relaxing the traditional exact bisection constraint in a top-down partitioning-based placement tool can improve the resulting cutsizes, and hence total wirelength, of the placement solution. We find that this simple change reduces total wirelength by up to several percent, with no change in placement uniformity and under 10% runtime penalty. Finally, we observe that the stability (predictability) of the placement process appears unimpaired by this modification: both wirelength stability, and stability of Rent parameter based wirelength and wireability estimates, appear to be preserved. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. J. Alpert, T. F. Chan, J.-H. Huang, I. L. Markov and K. </author> <title> Yan Quadratic Placement Revisited, </title> <booktitle> Proc. ACM/IEEE Design Automation Conference, </booktitle> <year> 1997, </year> <pages> pp. 752-757. </pages>
Reference-contexts: Partitioning solution quality appears to be a major determinant of final placement quality <ref> [1] </ref> This is reasonable, given the similarity between the minimum net cut partitioning ob jective and the minimum wirelength placement objective. 2 3. For both flexibility and solution quality, the state-of-the-art partitioning engine appears to be the multilevel implementa tion of the Fiduccia-Mattheyses heuristic [8] [3] [14]. 4.
Reference: [2] <author> C. J. Alpert and A. B. Kahng, </author> <title> Recent Directions in Netlist Partitioning: A Survey, </title> <booktitle> Integration 19 (1995), </booktitle> <pages> pp. 1-81. </pages>
Reference-contexts: The top-down partitioning continues until each region of the placement contains five or fewer cells. 2.2 Industry Interface Our placement system reads industry designs in Cadence LEF/DEF format. Three standard-cell test cases in this format, provided by 4 Following the standard convention in the netlist partitioning literature <ref> [2] </ref>, we say that bisection with, e.g., 10% tolerance permits partition areas ranging from 45% to 55% of the total cell area.
Reference: [3] <author> C. J. Alpert, J.-H. Huang and A. B. Kahng, </author> <title> Multilevel Circuit Partitioning, </title> <booktitle> Proc. ACM/IEEE Design Automation Conference, </booktitle> <year> 1997, </year> <pages> pp. 530-533. </pages>
Reference-contexts: For both flexibility and solution quality, the state-of-the-art partitioning engine appears to be the multilevel implementa tion of the Fiduccia-Mattheyses heuristic [8] <ref> [3] </ref> [14]. 4. As noted in [13], the top-down placement down to a given level (say, 6 levels of bisection = 64 regions) can be viewed as a multi-way partitioning. 3 5. <p> A bipartitioning instance with vertical cutline has exactly equal partition target areas, but we vary the balance tol erance 4 from the minimum possible (i.e., the size of the largest cell in the instance) to 40%. Within the placer, our multilevel-FM (MLFM) bipartitioning engine uses a multilevel implementation <ref> [3] </ref> of the Clip-FM bipar-titioning algorithm [7]. We use linear-time heavy-edge matching (HEM) clustering [14] with matching ratio of 1=6 in the coarsening and uncoarsening phases of the multilevel partitioner. We stop coarsening when the instance size is 100 clusters or smaller.
Reference: [4] <author> M. A. Breuer, </author> <title> Min-Cut Placement, </title> <editor> J. </editor> <booktitle> Design Automation and Fault-Tolerant Computing 1(4) (1977), </booktitle> <pages> pp. 343-362. </pages>
Reference-contexts: For placement runtimes to scale well with netlist size, a top-down partitioning-based (i.e., divide-and-conquer) approach is typically used. A top-down partitioning-based placer maintains a list of rectangular regions, and lists of cells assigned to each region. Exact bisection <ref> [4] </ref> or quadrisection [18] is applied recursively to partition a given region and its cells until each region contains exactly one cell. Terminal propagation [6] [18] or more location-sensitive wiring estimators [11] are used to maintain correlation between the minimum-cut partitioning objective and the minimum-wirelength placement objective.
Reference: [5] <author> W. E. Donath, </author> <title> Logic Partitioning, </title> <editor> in B. Preas and M. Loren-zetti, eds., </editor> <booktitle> Physical Design Automation in VLSI Systems, </booktitle> <address> Ben-jamin/Cummings, </address> <year> 1988. </year>
Reference-contexts: In particular, given two partitioning trees for the same design, the one with lower Rent parameter will lead to less wirelength and consequently a denser final layout <ref> [5] </ref> [16].
Reference: [6] <author> A. E. Dunlop and B. W. Kernighan, </author> <title> A Procedure for Placement of Standard Cell VLSI Circuits, </title> <booktitle> IEEE Transactions on Computer-Aided Design 4(1) (1985), </booktitle> <pages> pp. 92-98. </pages>
Reference-contexts: A top-down partitioning-based placer maintains a list of rectangular regions, and lists of cells assigned to each region. Exact bisection [4] or quadrisection [18] is applied recursively to partition a given region and its cells until each region contains exactly one cell. Terminal propagation <ref> [6] </ref> [18] or more location-sensitive wiring estimators [11] are used to maintain correlation between the minimum-cut partitioning objective and the minimum-wirelength placement objective. The overall approach scales well, and can address variant objective functions as well as various placement constraints, depending on the flexibility of the partitioning engine.

Reference: [8] <author> C. M. Fiduccia and R. M. Mattheyses, </author> <title> A Linear Time Heuristic for Improving Network Partitions, </title> <booktitle> Proc. ACM/IEEE Design Automation Conference, </booktitle> <year> 1982, </year> <pages> pp. 175-181. </pages>
Reference-contexts: For both flexibility and solution quality, the state-of-the-art partitioning engine appears to be the multilevel implementa tion of the Fiduccia-Mattheyses heuristic <ref> [8] </ref> [3] [14]. 4. As noted in [13], the top-down placement down to a given level (say, 6 levels of bisection = 64 regions) can be viewed as a multi-way partitioning. 3 5.
Reference: [9] <author> L. Hagen, A. B. Kahng, F. J. Kurdahi and C. Ramachandran, </author> <title> On the Intrinsic Rent Parameter and Spectra-Based Partitioning Methodologies, </title> <booktitle> IEEE Transactions on Computer-Aided Design 13(1) (1994), </booktitle> <pages> pp. 27-37. </pages> <note> [10] http://www-users.cs.umn.edu/~karypis/metis/ </note>
Reference-contexts: in Section 4 with other interpretations of experimental data and directions for future work. 2 Experimental Testbed Our experimental testbed consists of a top-down partitioning-based placer for standard-cell designs, an interface to industry test cases, and code to compute the Rent exponent of a partitioning hierarchy following the method of <ref> [9] </ref>. 2.1 Partitioning-Based Placer Our placer is based on top-down bipartitioning. Each bipartition-ing instance (i.e., placement region with more than a few cells) containing more than one row is partitioned along its longer side. <p> After appropriate bucketing and averaging, we estimate k and p by applying linear regression to a log-log plot of region size versus number of external nets. For this, we use the Rent parameter computation described in <ref> [9] </ref>. 5 An example Rent parameter fit is shown in Figure 1. Hagen et al. [9] note that the Rent parameter p characterizes the partitioning algorithm itself (in their work, recursive spectral ratio-cut partitioning was shown to lead to lower Rent parameter values than recursive min-cut Fiduccia-Mattheyses bisection). <p> For this, we use the Rent parameter computation described in <ref> [9] </ref>. 5 An example Rent parameter fit is shown in Figure 1. Hagen et al. [9] note that the Rent parameter p characterizes the partitioning algorithm itself (in their work, recursive spectral ratio-cut partitioning was shown to lead to lower Rent parameter values than recursive min-cut Fiduccia-Mattheyses bisection). However, no demonstration of reduced wirelength in top-down placement is attempted in [9]. <p> Hagen et al. <ref> [9] </ref> note that the Rent parameter p characterizes the partitioning algorithm itself (in their work, recursive spectral ratio-cut partitioning was shown to lead to lower Rent parameter values than recursive min-cut Fiduccia-Mattheyses bisection). However, no demonstration of reduced wirelength in top-down placement is attempted in [9]. The Rent parameter has also been extensively studied in the field of wiring estimation, where it affords accurate predictions of the wiring requirements for a given partitioning hierarchy.
Reference: [11] <author> D. J. Huang and A. B. Kahng, </author> <title> Partitioning-Based Standard-Cell Global Placement with an Exact Objective, </title> <booktitle> Proc. ACM/IEEE Intl. Symp. on Physical Design, </booktitle> <year> 1997, </year> <pages> pp. 18-25. </pages>
Reference-contexts: Exact bisection [4] or quadrisection [18] is applied recursively to partition a given region and its cells until each region contains exactly one cell. Terminal propagation [6] [18] or more location-sensitive wiring estimators <ref> [11] </ref> are used to maintain correlation between the minimum-cut partitioning objective and the minimum-wirelength placement objective. The overall approach scales well, and can address variant objective functions as well as various placement constraints, depending on the flexibility of the partitioning engine.
Reference: [12] <author> F. R. Johannes, </author> <title> Tutorial: Partitioning of VLSI Circuits and Systems, </title> <booktitle> Proc. ACM/IEEE Design Automation Conference, </booktitle> <year> 1996, </year> <pages> pp. 83-87. </pages>
Reference: [13] <author> A. B. Kahng, </author> <title> Futures for Partitioning in Physical Design, </title> <booktitle> Proc. ACM/IEEE Intl. Symp. on Physical Design, </booktitle> <month> April </month> <year> 1998, </year> <pages> pp. 190-193. </pages>
Reference-contexts: For both flexibility and solution quality, the state-of-the-art partitioning engine appears to be the multilevel implementa tion of the Fiduccia-Mattheyses heuristic [8] [3] [14]. 4. As noted in <ref> [13] </ref>, the top-down placement down to a given level (say, 6 levels of bisection = 64 regions) can be viewed as a multi-way partitioning. 3 5. The best known approach to multi-way partitioning, embodied in the public-domain hMetis package [14], performs k-way balanced hypergraph partitioning by recursive balanced 2-way partitioning. <p> Furthermore, various accounts (e.g., [16] observe that the minimum cut and minimum crossing-count objectives are equivalent to minimum wirelength in the limit of closely spaced cutlines. 3 <ref> [13] </ref> also notes other aspects of how placers and partitioners co-evolved.
Reference: [14] <author> G. Karypis, R. Aggarwal, V. Kumar and S. Shekhar, </author> <title> Multilevel Hypergraph Partitioning: Applications in VLSI Domain, </title> <booktitle> Proc. ACM/IEEE Design Automation Conference, </booktitle> <year> 1997, </year> <pages> pp. 526-529. </pages>
Reference-contexts: For both flexibility and solution quality, the state-of-the-art partitioning engine appears to be the multilevel implementa tion of the Fiduccia-Mattheyses heuristic [8] [3] <ref> [14] </ref>. 4. As noted in [13], the top-down placement down to a given level (say, 6 levels of bisection = 64 regions) can be viewed as a multi-way partitioning. 3 5. The best known approach to multi-way partitioning, embodied in the public-domain hMetis package [14], performs k-way balanced hypergraph partitioning by <p> of the Fiduccia-Mattheyses heuristic [8] [3] <ref> [14] </ref>. 4. As noted in [13], the top-down placement down to a given level (say, 6 levels of bisection = 64 regions) can be viewed as a multi-way partitioning. 3 5. The best known approach to multi-way partitioning, embodied in the public-domain hMetis package [14], performs k-way balanced hypergraph partitioning by recursive balanced 2-way partitioning. Contributions of This Work In this work, we seek improvements to the traditional recursive bisection approach to top-down placement. We do not seek a new multi-way placement-specific partitioner, but rather a simple, transparent variation of current practice. <p> Within the placer, our multilevel-FM (MLFM) bipartitioning engine uses a multilevel implementation [3] of the Clip-FM bipar-titioning algorithm [7]. We use linear-time heavy-edge matching (HEM) clustering <ref> [14] </ref> with matching ratio of 1=6 in the coarsening and uncoarsening phases of the multilevel partitioner. We stop coarsening when the instance size is 100 clusters or smaller.
Reference: [15] <author> B. Landman and R. Russo, </author> <title> On a Pin Versus Block Relationship for Partitioning of Logic Graphs, </title> <journal> IEEE Transactions on Computers C-20(12) (1971), </journal> <pages> pp. 1469-1479. </pages>
Reference-contexts: Finally, we ask whether our variation affects the predictability of the top-down placer. We assess the stability of both the total wirelength results and the Rent parameter <ref> [15] </ref> of the associated partitioning hierarchies (the latter determines a number of routability and wire-length estimators in the literature). In the following, Section 2 describes the algorithms and measures (e.g., computation of the Rent parameter of a partitioning hierarchy) that comprise our experimental testbed.
Reference: [16] <author> T. Lengauer, </author> <title> Combinatorial Algorithms for Integrated Circuit Layout, </title> <address> Wiley-Teubner, </address> <year> 1990. </year>
Reference-contexts: It is also natural to ask whether the result corresponds to improved total wirelength, and how the resulting 2 The two objectives are clearly equivalent for placement of a netlist onto two points. Furthermore, various accounts (e.g., <ref> [16] </ref> observe that the minimum cut and minimum crossing-count objectives are equivalent to minimum wirelength in the limit of closely spaced cutlines. 3 [13] also notes other aspects of how placers and partitioners co-evolved. <p> In particular, given two partitioning trees for the same design, the one with lower Rent parameter will lead to less wirelength and consequently a denser final layout [5] <ref> [16] </ref>.
Reference: [17] <author> H. D. Simon and S.-H. Teng, </author> <title> How Good is Recursive Bisection?, </title> <journal> SIAM J. Scientific Computing 18(5) (1997), </journal> <pages> pp. 1436-1445. </pages>
Reference-contexts: Contributions of This Work In this work, we seek improvements to the traditional recursive bisection approach to top-down placement. We do not seek a new multi-way placement-specific partitioner, but rather a simple, transparent variation of current practice. There are two motivating observations. First, Simon and Teng <ref> [17] </ref> have recently analyzed the recursive bisection approach to multi-way graph partitioning. <p> Given these and the previous observations, it is natural to ask whether relaxing the traditional exact bisection constraint in a top-down placer can yield better net cuts and, per the result of <ref> [17] </ref>, better multi-way cuts. It is also natural to ask whether the result corresponds to improved total wirelength, and how the resulting 2 The two objectives are clearly equivalent for placement of a netlist onto two points. <p> The implementation cost and the runtime overhead of this change are both negligible. Our ongoing research addresses three main questions. First, we ask whether larger improvements in wirelength can be obtained using relaxed balance constraints. VLSI netlists are likely well-behaved, and do not resemble the pathological constructions of <ref> [17] </ref>. Nevertheless, large balance tolerances do allow substantial cutsize reductions. 7 We seek a better understanding of why large 7 Table 1 shows the monotone reduction in cutsize for the top-level bipartition as cutsize reductions end up producing only small wirelength reduc-tions.
Reference: [18] <author> P. R. Suaris and G. Kedem, Quadrisection: </author> <title> A New Approach to Standard Cell Layout, </title> <booktitle> Proc. IEEE/ACM International Conference on Computer-Aided Design, </booktitle> <year> 1987, </year> <pages> pp. 474-477. </pages>
Reference-contexts: For placement runtimes to scale well with netlist size, a top-down partitioning-based (i.e., divide-and-conquer) approach is typically used. A top-down partitioning-based placer maintains a list of rectangular regions, and lists of cells assigned to each region. Exact bisection [4] or quadrisection <ref> [18] </ref> is applied recursively to partition a given region and its cells until each region contains exactly one cell. Terminal propagation [6] [18] or more location-sensitive wiring estimators [11] are used to maintain correlation between the minimum-cut partitioning objective and the minimum-wirelength placement objective. <p> A top-down partitioning-based placer maintains a list of rectangular regions, and lists of cells assigned to each region. Exact bisection [4] or quadrisection <ref> [18] </ref> is applied recursively to partition a given region and its cells until each region contains exactly one cell. Terminal propagation [6] [18] or more location-sensitive wiring estimators [11] are used to maintain correlation between the minimum-cut partitioning objective and the minimum-wirelength placement objective. The overall approach scales well, and can address variant objective functions as well as various placement constraints, depending on the flexibility of the partitioning engine.
Reference: [19] <author> W. Swartz and C. Sechen. </author> <title> Timing Driven Placement for Large Standard Cell Circuits, </title> <booktitle> Proc. ACM/IEEE Design Automation Conference, </booktitle> <year> 1995, </year> <pages> pp. 211-215. </pages>
Reference-contexts: 1 Introduction Global placement of standard-cell VLSI designs seeks nonoverlapping placements of cells in cell rows, such that wirelength is minimized while constraints (routability, timing, pre-specified cell locations, cell groupings, etc.) are satisfied. Typically, the wirelength objective is approximated by the sum of net bounding box half-perimeters <ref> [19] </ref>. For placement runtimes to scale well with netlist size, a top-down partitioning-based (i.e., divide-and-conquer) approach is typically used. A top-down partitioning-based placer maintains a list of rectangular regions, and lists of cells assigned to each region.
References-found: 17

