URL: http://www.cs.yale.edu/HTML/YALE/CS/HyPlans/douglas-craig/Preprints/pub27.ps.gz
Refering-URL: http://www.cs.yale.edu/HTML/YALE/CS/HyPlans/douglas-craig/ccd-preprints.html
Root-URL: http://www.cs.yale.edu
Title: A TUPLEWARE APPROACH TO DOMAIN DECOMPOSITION METHODS highly portable implementation using the Linda system for
Author: CRAIG C. DOUGLAS 
Keyword: Key words. domain decomposition, multigrid, projection method, iterative methods, direct methods, Linda system  
Note: A  software.  AMS(MOS) subject classifications. 65F50, 65F05, 65F10, 65W05  
Abstract: Domain decompositionmethods are highly parallel methods for solving elliptic partial differential equations. In many domain decomposition variants, the domain is partitioned into a number of (possibly overlapping) subdomains before computation begins. In contrast, the domain reduction method folds the domain into a number of smaller domains covering only a small portion of the entire domain. The solution over the entire domain is recovered by unfolding the solutions on the subdomains and summing them. The cost of the folding and unfolding is negligible. Results are derived measuring how much time and space can be reduced in the problem discretization phase by using these methods. Storage can be reduced by a substantial factor (a factor of eight is constructed for an example in this paper), and discretization time can be reduced by a constant factor or more, depending on the time complexity formula for a given problem. The amount of storage required is substantially less than for traditional domain decomposition implementations, or ones based on standard iterative methods or multigrid (standard or nontelescoping). 1. Introduction. In this paper, the solution to an elliptic boundary value 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E. L. Allgower, K. B ohmer, and M. Zhen, </author> <title> A generalized equilbranching lemma with applications in D 4 fi Z 2 symmetric elliptic problems: part 1, </title> <type> Tech. Rep. 9, </type> <address> Philipps-Universitat Marburg, Marburg, Germany, </address> <year> 1990. </year>
Reference-contexts: That (1.1) is well posed and will be discretized by a finite element, volume, or difference scheme is assumed throughout this paper. Typically, L is a general, variable coefficient second or fourth order elliptic problem. Similar theory for nonlinear problems can be found in <ref> [1] </ref>. The domain reduction method uses properties of a partial differential equation to split the problem into several subproblems. The subdomains are constructed by folding the domain in particular ways, some of which are described in xx3-4. <p> In either case, the matrix A is block tridiagonal [29]. A = [ I; T; I ] 2 IR NfiN ; N = M 2 ; where I is an M fi M identity matrix and T is an M fi M tridiagonal matrix. T = <ref> [ 1; s; 1 ] </ref>; s = 4 + Sh 2 ; where h is the mesh spacing. As an extreme, A can be stored on a single processor as follows.
Reference: [2] <author> R. E. Bank and C. C. Douglas, </author> <title> Sharp estimates for multigrid rates of convergence with general smoothing and acceleration, </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 22 (1985), </volume> <pages> pp. 617-633. </pages>
Reference-contexts: 1. Introduction. In this paper, the solution to an elliptic boundary value problem is approximated using a combination of domain decomposition, multigrid, and projection method techniques (see <ref> [2] </ref>, [4], [9], [12], [18], [19], [22], and [23]). Consider problems of the following form. 8 : d u = 0 on @: More complicated boundary conditions are discussed in [5], [13], and x4.
Reference: [3] <author> R. Bjornson, N. Carriero, and D. Gelernter, </author> <title> The implementation and performance of hypercube Linda, </title> <type> Tech. Rep. 690, </type> <institution> Department of Computer Science, Yale University, </institution> <address> New Haven, </address> <year> 1989. </year>
Reference-contexts: Linda Approach to Computation. A number of semi-portable parallel programming environments now exist. Some of these systems mimic communication libraries supplied by some hardware manufacturer, others are complete languages. The Linda system is one of the few which is language independent in concept (see <ref> [3] </ref>, [6], [8], [7], and [21]). For each Linda implementation, there is a preprocessor and a communication library. The preprocessor adds a new data type (a tuple) and six operators which manipulate tuples or processes.
Reference: [4] <author> A. Brandt, </author> <title> Multi-level adaptive solution to boundary-value problems, </title> <journal> Math. Comp., </journal> <volume> 31 (1977), </volume> <pages> pp. 333-390. </pages>
Reference-contexts: 1. Introduction. In this paper, the solution to an elliptic boundary value problem is approximated using a combination of domain decomposition, multigrid, and projection method techniques (see [2], <ref> [4] </ref>, [9], [12], [18], [19], [22], and [23]). Consider problems of the following form. 8 : d u = 0 on @: More complicated boundary conditions are discussed in [5], [13], and x4.
Reference: [5] <author> F. Brezzi, C. C. Douglas, and L. D. Marini, </author> <title> A parallel domain reduction method, Numer. Meth. for PDE, </title> <booktitle> 5 (1989), </booktitle> <pages> pp. 195-202. </pages>
Reference-contexts: Consider problems of the following form. 8 : d u = 0 on @: More complicated boundary conditions are discussed in <ref> [5] </ref>, [13], and x4. That (1.1) is well posed and will be discretized by a finite element, volume, or difference scheme is assumed throughout this paper. Typically, L is a general, variable coefficient second or fourth order elliptic problem. Similar theory for nonlinear problems can be found in [1]. <p> O. Box 2158 Yale Station, New Haven, CT 06520. E-mail: bells@watson.ibm.com 1 informally in [15]. The elliptic partial differential equation case (with an emphasis on one and two dimensions) was analyzed in [16], and a technique for doubling the basic parallelism was introduced in <ref> [5] </ref>. This was extended to three dimensional problems in [13]. In the general case, or when the subproblems are solved only approximately, the method becomes an iterative method or can be used as a preconditioner. Bounds on the resulting convergence factors and condition numbers are given in [13]. <p> For example, D N (0,0) D D (0,0) Finally, the subdomain which is isomorphic to the original domain can be reduced onto two triangles, two rectangles, or recursively onto an eight way set of subproblems. More details are contained in <ref> [5] </ref>. 4.2. Cube Domain. The three dimensional cube offers a real challenge.
Reference: [6] <author> N. Carriero, </author> <title> Implementation of tuple space machines, </title> <type> PhD thesis, </type> <institution> Yale University, </institution> <month> December </month> <year> 1987. </year> <note> Also, </note> <institution> Computer Science Department, Yale University, </institution> <type> Technical Report 567. </type>
Reference-contexts: Linda Approach to Computation. A number of semi-portable parallel programming environments now exist. Some of these systems mimic communication libraries supplied by some hardware manufacturer, others are complete languages. The Linda system is one of the few which is language independent in concept (see [3], <ref> [6] </ref>, [8], [7], and [21]). For each Linda implementation, there is a preprocessor and a communication library. The preprocessor adds a new data type (a tuple) and six operators which manipulate tuples or processes.
Reference: [7] <author> N. Carriero and D. Gelernter, </author> <title> How to write parallel programs: a guide to the perplexed, </title> <type> Tech. Rep. 628, </type> <institution> Department of Computer Science, Yale University, </institution> <address> New Haven, </address> <year> 1989. </year> <note> To appear in ACM Comp. Surveys. [8] , Linda in context, Comm. ACM, </note> <month> 32 </month> <year> (1989), </year> <pages> pp. 444-458. </pages>
Reference-contexts: Linda Approach to Computation. A number of semi-portable parallel programming environments now exist. Some of these systems mimic communication libraries supplied by some hardware manufacturer, others are complete languages. The Linda system is one of the few which is language independent in concept (see [3], [6], [8], <ref> [7] </ref>, and [21]). For each Linda implementation, there is a preprocessor and a communication library. The preprocessor adds a new data type (a tuple) and six operators which manipulate tuples or processes. As a result, Linda can be interpreted as a global database system, rather than as a language.
Reference: [9] <author> T. Chan, R. Glowinski, G. A. Meurant, J. P eriaux, and O. Widlund, eds., </author> <title> Domain Decomposition Methods for Partial Differential Equations II, </title> <address> Philadelphia, </address> <year> 1989, </year> <institution> Society for Industrial and Applied Mathematics. </institution>
Reference-contexts: 1. Introduction. In this paper, the solution to an elliptic boundary value problem is approximated using a combination of domain decomposition, multigrid, and projection method techniques (see [2], [4], <ref> [9] </ref>, [12], [18], [19], [22], and [23]). Consider problems of the following form. 8 : d u = 0 on @: More complicated boundary conditions are discussed in [5], [13], and x4.
Reference: [10] <author> H. C. Chen, </author> <title> The SAS domain decomposition method for structural analysis, </title> <type> PhD thesis, </type> <institution> University of Illinois at Urbana-Champaign, Urbana, Illinois, </institution> <year> 1988. </year>
Reference-contexts: More typically, it is a direct solver (cf., Algorithm 1) or an iterative solver (cf., Algorithm 2). Algorithm 3 is related to algorithms analyzed in <ref> [10] </ref>, [11], [17], [20], and [24]-[26]. The convergence of Algorithms 1 and 3 is guaranteed by the following theorem. Theorem 1.
Reference: [11] <author> H. C. Chen and A. H. Sameh, </author> <title> A matrix decomposition method for orthotropic elasticity problems, </title> <journal> SIAM J. Matrix Anal. Appl., </journal> <volume> 10 (1989), </volume> <pages> pp. 39-64. </pages>
Reference-contexts: More typically, it is a direct solver (cf., Algorithm 1) or an iterative solver (cf., Algorithm 2). Algorithm 3 is related to algorithms analyzed in [10], <ref> [11] </ref>, [17], [20], and [24]-[26]. The convergence of Algorithms 1 and 3 is guaranteed by the following theorem. Theorem 1.
Reference: [12] <author> C. C. Douglas, </author> <title> Multi-grid algorithms with applications to elliptic boundary-value problems, </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 21 (1984), </volume> <pages> pp. 236-254. </pages>
Reference-contexts: 1. Introduction. In this paper, the solution to an elliptic boundary value problem is approximated using a combination of domain decomposition, multigrid, and projection method techniques (see [2], [4], [9], <ref> [12] </ref>, [18], [19], [22], and [23]). Consider problems of the following form. 8 : d u = 0 on @: More complicated boundary conditions are discussed in [5], [13], and x4.
Reference: [13] <author> C. C. Douglas and J. Mandel, </author> <title> The domain reduction method: high way reduction in three dimensions and convergence with inexact solvers, </title> <booktitle> in Fourth Copper Mountain Conference on Multigrid Methods, </booktitle> <editor> J. Mandel, S. F. McCormick, J. E. Dendy, C. Farhat, G. Lonsdale, S. V. Parter, J. W. Ruge, and K. Stuben, eds., </editor> <booktitle> Society for Industrial and Applied Mathematics, </booktitle> <address> Philadelphia, </address> <year> 1989, </year> <pages> pp. 149-160. </pages>
Reference-contexts: Consider problems of the following form. 8 : d u = 0 on @: More complicated boundary conditions are discussed in [5], <ref> [13] </ref>, and x4. That (1.1) is well posed and will be discretized by a finite element, volume, or difference scheme is assumed throughout this paper. Typically, L is a general, variable coefficient second or fourth order elliptic problem. Similar theory for nonlinear problems can be found in [1]. <p> E-mail: bells@watson.ibm.com 1 informally in [15]. The elliptic partial differential equation case (with an emphasis on one and two dimensions) was analyzed in [16], and a technique for doubling the basic parallelism was introduced in [5]. This was extended to three dimensional problems in <ref> [13] </ref>. In the general case, or when the subproblems are solved only approximately, the method becomes an iterative method or can be used as a preconditioner. Bounds on the resulting convergence factors and condition numbers are given in [13]. <p> This was extended to three dimensional problems in <ref> [13] </ref>. In the general case, or when the subproblems are solved only approximately, the method becomes an iterative method or can be used as a preconditioner. Bounds on the resulting convergence factors and condition numbers are given in [13]. In x2, the method is defined as it pertains to this paper in a very abstract manner. In x3, a simple example is worked out when = (1; 1) d . <p> Using the same assumptions as in Theorem 3, if, in addition, V i ? V j , for all i; j, then max = min = 1 and (2.8) reduces to ku m+1 uk "ku m uk: The proofs to Theorem 3 and Corollary 2 can be found in <ref> [13] </ref>. 3. An Example. In this section, a simple example is described where the domain reduction method uses symmetries in (1.1) to split the problem into several subproblems. <p> Running times on both shared and distributed memory parallel computers (Encore and Intel) are contained in <ref> [13] </ref>. 4. Concrete Formulation. In this section, a more subtle approach to domain reduction is described.
Reference: [14] <author> C. C. Douglas and W. L. Miranker, </author> <title> Constructive interference in parallel algorithms, </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 25 (1988), </volume> <pages> pp. </pages> <month> 376-398. </month> <title> [15] , Some nontelescoping parallel algorithms based on serial multigrid/aggregation/dis-aggregation techniques, in Multigrid Methods: Theory, Applications, and Supercomputing, </title> <editor> S. F. McCormick, ed., </editor> <publisher> Marcel Dekker, </publisher> <address> New York, </address> <year> 1988, </year> <pages> pp. 167-176. </pages>
Reference-contexts: The subdomains are constructed by folding the domain in particular ways, some of which are described in xx3-4. Each subproblem should be solved in parallel using the fastest known appropriate solution method. The basic method was first derived in <ref> [14] </ref> as a parallel multilevel method for linear systems of equations where smoothing was unnecessary. The applicability to shared or distributed memory, coarse or fine grained parallel computers was discussed fl Based on IBM Research Report RC 15360, Yorktown Heights, NY, 1990. <p> An immediate corollary is the following. Corollary 1. Theorem 1 remains true for Algorithm 1 if the commutativity condition is replaced by i A ( i I) = 0 for all i, 1 i n. The proofs to Theorem 1 and Corollary 1 can be found in <ref> [14] </ref>.
Reference: [16] <author> C. C. Douglas and B. F. Smith, </author> <title> Using symmetries and antisymmetries to analyze a parallel multigrid algorithm, </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 26 (1989), </volume> <pages> pp. 1439-1461. </pages>
Reference-contexts: O. Box 218, Yorktown Heights, NY 10598 and Department of Computer Science, Yale University, P. O. Box 2158 Yale Station, New Haven, CT 06520. E-mail: bells@watson.ibm.com 1 informally in [15]. The elliptic partial differential equation case (with an emphasis on one and two dimensions) was analyzed in <ref> [16] </ref>, and a technique for doubling the basic parallelism was introduced in [5]. This was extended to three dimensional problems in [13]. In the general case, or when the subproblems are solved only approximately, the method becomes an iterative method or can be used as a preconditioner. <p> The subproblems, A i , are defined in the Galerkin sense, as well. Examples of several choices of restriction and prolongation operators, and the resulting L i and A i , are given in <ref> [16] </ref>. The complete discrete domain reduction method is defined in a two level (multigrid-like) formulation. Algorithm 3. <p> Then Algorithm 3 converges to the exact solution in one iteration without smoothing if the subspace problems are solved exactly. The proof to Theorem 2 can be found in <ref> [16] </ref>. The convergence of Algorithm 2 is guaranteed by the following theorem. Theorem 3. Let P V i be the orthogonal projection onto V i , and max and min be the maximal and the minimal eigenvalues, respectively, of P n i=1 P V i .
Reference: [17] <author> P. Frederickson and O. McBryan, </author> <title> Parallel superconvergent multigrid, in Multigrid Methods: Theory, Applications, and Supercomputing, </title> <editor> S. F. McCormick, ed., </editor> <publisher> Marcel Dekker, </publisher> <address> New York, </address> <year> 1988, </year> <pages> pp. 195-210. 19 </pages>
Reference-contexts: More typically, it is a direct solver (cf., Algorithm 1) or an iterative solver (cf., Algorithm 2). Algorithm 3 is related to algorithms analyzed in [10], [11], <ref> [17] </ref>, [20], and [24]-[26]. The convergence of Algorithms 1 and 3 is guaranteed by the following theorem. Theorem 1. <p> The amount of storage required by a standard multigrid is ((n + 1)=n)CN and for one of the nontelescoping multigrid methods (see <ref> [17] </ref> and [20]) is CN log n N . n N C Multigrid Nontelescoping multigrids 4 126 2 3 63; 504 638; 644 4 126 2 9 190; 512 1; 915; 934 8 62 3 7 1; 906; 624 4; 809; 227 17 The large difference in memory requirements can determine
Reference: [18] <author> R. Glowinski, G. H. Golub, G. A. Meurant, and J. P eriaux, eds., </author> <title> On the Schwarz alternating method I, </title> <address> Philadelphia, </address> <year> 1988, </year> <institution> Society for Industrial and Applied Mathematics. </institution>
Reference-contexts: 1. Introduction. In this paper, the solution to an elliptic boundary value problem is approximated using a combination of domain decomposition, multigrid, and projection method techniques (see [2], [4], [9], [12], <ref> [18] </ref>, [19], [22], and [23]). Consider problems of the following form. 8 : d u = 0 on @: More complicated boundary conditions are discussed in [5], [13], and x4.
Reference: [19] <author> W. Hackbusch, </author> <title> Multigrid Methods and Applications, </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1985. </year> <title> [20] , A new approach to robust multi-grid solvers, </title> <booktitle> in ICIAM'87: Proceedings of the First International Conference on Industrial and Applied Mathematics, Society for Industrial and Applied Mathematics, </booktitle> <address> Philadelphia, </address> <year> 1988, </year> <pages> pp. 114-126. </pages>
Reference-contexts: 1. Introduction. In this paper, the solution to an elliptic boundary value problem is approximated using a combination of domain decomposition, multigrid, and projection method techniques (see [2], [4], [9], [12], [18], <ref> [19] </ref>, [22], and [23]). Consider problems of the following form. 8 : d u = 0 on @: More complicated boundary conditions are discussed in [5], [13], and x4.
Reference: [21] <author> J. S. Leichter, </author> <title> Shared tuple memories, shared memories, buses, and LAN's - Linda implementations across the spectrum of connectivity, </title> <type> PhD thesis, </type> <institution> Yale University, </institution> <address> New Haven, CT, </address> <year> 1989. </year> <note> Computer Science Department Technical Report 714. </note>
Reference-contexts: Linda Approach to Computation. A number of semi-portable parallel programming environments now exist. Some of these systems mimic communication libraries supplied by some hardware manufacturer, others are complete languages. The Linda system is one of the few which is language independent in concept (see [3], [6], [8], [7], and <ref> [21] </ref>). For each Linda implementation, there is a preprocessor and a communication library. The preprocessor adds a new data type (a tuple) and six operators which manipulate tuples or processes. As a result, Linda can be interpreted as a global database system, rather than as a language.
Reference: [22] <author> P. L. Lions, </author> <title> On the Schwarz alternating method I, in Domain Decomposition Methods for Partial Differential Equations, </title> <editor> R. Glowinski, G. H. Golub, G. A. Meurant, and J. Periaux, eds., </editor> <booktitle> Society for Industrial and Applied Mathematics, </booktitle> <address> Philadelphia, </address> <year> 1988, </year> <pages> pp. </pages> <month> 1-42. </month> <title> [23] , On the Schwarz alternating method II, in Domain Decomposition Methods for Partial Differential Equations II, </title> <editor> T. Chan, R. Glowinski, G. A. Meurant, J. Periaux, and O. Widlund, eds., </editor> <booktitle> Society for Industrial and Applied Mathematics, </booktitle> <address> Philadelphia, </address> <year> 1989, </year> <pages> pp. 47-70. </pages>
Reference-contexts: 1. Introduction. In this paper, the solution to an elliptic boundary value problem is approximated using a combination of domain decomposition, multigrid, and projection method techniques (see [2], [4], [9], [12], [18], [19], <ref> [22] </ref>, and [23]). Consider problems of the following form. 8 : d u = 0 on @: More complicated boundary conditions are discussed in [5], [13], and x4. That (1.1) is well posed and will be discretized by a finite element, volume, or difference scheme is assumed throughout this paper.
Reference: [24] <author> J. Mandel and S. F. McCormick, </author> <title> Iterative solution of elliptic equations with refinement: the model multi-level case, in Domain Decomposition Methods for Partial Differential Equations II, </title> <editor> T. Chan, R. Glowinski, G. A. Meurant, J. Periaux, and O. Widlund, eds., </editor> <booktitle> Society for Industrial and Applied Mathematics, </booktitle> <address> Philadelphia, </address> <year> 1989, </year> <pages> pp. 93-102. </pages>
Reference: [25] <author> S. F. McCormick, </author> <title> Fast adaptive composite grid (FAC) methods, in Defect Correction Methods, </title> <editor> K. Bohmer and H. J. Stetter, eds., </editor> <publisher> Springer-Verlag, </publisher> <address> Vienna, </address> <year> 1984, </year> <pages> pp. 115-121. </pages>
Reference: [26] <author> S. F. McCormick and J. Thomas, </author> <title> The fast adaptive composite grid (FAC) method for elliptic equations, </title> <journal> Math. Comp., </journal> <volume> 46 (1986), </volume> <pages> pp. 439-456. </pages>
Reference: [27] <author> H. A. Schwarz, </author> <title> Uber einige Abbildungsaufgaben, </title> <journal> Ges. Math. Abh., </journal> <volume> 11 (1869), </volume> <pages> pp. 65-83. </pages>
Reference-contexts: If more than one iterative method is used, then " is the maximum of the convergence factors. If the subproblems are solved exactly, the method is related to the well-known Schwarz alternating method <ref> [27] </ref>. In implementation, full-rank restriction and prolongation operators are used to transfer information between the subspaces and V : R i : V ! V i and P i : V i ! V: Frequently, each prolongation operator is the adjoint of one of the restriction operators.
Reference: [28] <author> P. Sonneveld, </author> <title> CGS, a fast Lanczos-type solver for nonsymmetric linear systems, </title> <journal> SIAM J. Sci. Stat. Comp., </journal> <volume> 10 (1989), </volume> <pages> pp. 36-52. </pages>
Reference-contexts: Routines also exist to analyze a matrix, build diag (A), redistribute a vector across processors, and print distributed objects. These routines are used to implement conjugate gradients, conjugate gradients squared (see <ref> [28] </ref>), multigrid, and some simple domain reduction methods. 6.2. Memory Usage. The naive approach to storing a matrix in a distributed manner is to divide it into a collection of blocks. This is also done here, but the blocks are allowed to be subdivided into overlapping subblocks.
Reference: [29] <author> G. Strang and G. J. Fix, </author> <title> An Analysis of the Finite Element Method, </title> <publisher> Prentice-Hall, </publisher> <address> New York, </address> <year> 1973. </year> <month> 20 </month>
Reference-contexts: Assume these problems are discretized by either central finite differences on a uniform mesh or by finite elements on a uniform triangulation using C 0 piecewise linear polynomials and the usual nodal basis functions. In either case, the matrix A is block tridiagonal <ref> [29] </ref>. A = [ I; T; I ] 2 IR NfiN ; N = M 2 ; where I is an M fi M identity matrix and T is an M fi M tridiagonal matrix.
References-found: 25

