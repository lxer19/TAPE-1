URL: http://www.cs.man.ac.uk/~murrayn/kaleidoquery.ps.gz
Refering-URL: http://www.cs.man.ac.uk/~murrayn/index.html
Root-URL: http://www.cs.man.ac.uk
Email: E-mail:hmurrayn, norm, carolei@cs.man.ac.uk  
Title: Kaleidoquery: A Visual Query Language for Object Databases  
Author: Norman Murray, Norman Paton and Carole Goble 
Keyword: Visual query language, OQL, object databases, three-dimensional interface.  
Address: Oxford Road, Manchester, M13 9PL, UK  
Affiliation: Department of Computer Science University of Manchester  
Abstract: In this paper we describe Kaleidoquery, a visual query language for object databases with the same expressive power as OQL. We will describe the design philosophy behind the filter flow nature of Kaleidoquery and present each of the language's constructs, giving examples and relating them to OQL. The Kaleidoquery language is described independent of any implementation details, but a brief description of a 3D interface currently under construction for Kaleidoquery is presented. The queries in this implementation of the language are translated into OQL and then passed to the object database O 2 for evaluation. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Christopher Ahlberg. Spotfire: </author> <title> An Information Exploration Environment. </title> <booktitle> SIGMOD Record, </booktitle> <address> 24(4):2529, </address> <month> December </month> <year> 1996. </year>
Reference-contexts: AMAZE [4]) but with AMAZE constraints are still specified via a forms interface. In addition AMAZE is much less powerful than Kaleidoscape lacking such features as aggregation. Many advances are being made in the area of dynamic query visu-alisation (e.g. Spotfire <ref> [1] </ref>) though these tend to be limited in the expressive power of their queries and the range and type of information they can query. Current graphical query languages to ODMG compliant object databases are limited to Quiver [8] and GOQL [14].
Reference: 2. <author> W. L. Bewley, T. L. Roberts, D. Schroit, and W. L. Ver-plank. </author> <title> Human Factors Testing in the Design of Xe-rox's 8010 'Star' Office Workstation. </title> <booktitle> In Proceedings ACM CHI'83 Conference, </booktitle> <pages> pages 7277, </pages> <address> Boston, MA, </address> <month> December </month> <year> 1983. </year>
Reference-contexts: designing the language the premise that has been adopted is that the textual equivalent of the language is to be retained, but with this an iconic or abstract representation may be attached, as studies have shown that icons with a textual description give better comprehension than textual or pictorial icons <ref> [2, 10, 13] </ref>. As the participants become familiar with the interface they will associate the icon/abstract representation with the text and in this way will not have to read the full text to comprehend the query.
Reference: 3. <author> Christine L. Borgman. </author> <title> The User's Mental Model of an Information Retrieval System; An Experiment on a Prototype Online Catalog. </title> <journal> International Journal of Man-Machine Studies, </journal> <volume> 24:4764, </volume> <year> 1986. </year>
Reference-contexts: Errors range from improper use of and and or between the English and the boolean logic interpretations of their operation, to the difficulties of using parenthesis to express the rules of precedence on the boolean operators, especially when building complex queries, <ref> [3, 11, 15] </ref>. Preliminary results have shown that the filter flow representation has proven to be more favourable than a text only SQL interface [22]. We shall now examine how and and or can be specified in a query. Figure 4 shows four different query visualisations.
Reference: 4. <author> J. Boyle, S. Leishman, and P. M. D. Gray. </author> <title> From WIMP to 3D: the development of AMAZE. </title> <journal> Journal of Visual Languages and Computing, </journal> <volume> 7:291319, </volume> <year> 1996. </year>
Reference-contexts: Multi paradigm query interfaces also exist to allow the user to pick and choose or alternate between interface styles, [9, 5]. Visual query languages are now also incorporating three dimensional aspects into the query language (e.g. AMAZE <ref> [4] </ref>) but with AMAZE constraints are still specified via a forms interface. In addition AMAZE is much less powerful than Kaleidoscape lacking such features as aggregation. Many advances are being made in the area of dynamic query visu-alisation (e.g.
Reference: 5. <author> T. Catarci, S. K Chang, and G. Santucci. </author> <title> Query Representation and Management in a Multiparadigmatic Visual Query Environment. </title> <journal> Journal of Intelligent Information Systems, </journal> <volume> 3(3):299330, </volume> <year> 1994. </year>
Reference-contexts: Icon based languages (e.g. Iconic Browser [20]) represent database concepts pictorially and can allow for the direct manipulation of icons to represent queries. Multi paradigm query interfaces also exist to allow the user to pick and choose or alternate between interface styles, <ref> [9, 5] </ref>. Visual query languages are now also incorporating three dimensional aspects into the query language (e.g. AMAZE [4]) but with AMAZE constraints are still specified via a forms interface. In addition AMAZE is much less powerful than Kaleidoscape lacking such features as aggregation.
Reference: 6. <author> Tiziana Catarci, Maria F. Costabile, Stefano Levialdi, and Carlo Batini. </author> <title> Visual Query Systems for Databases: </title>
Reference-contexts: RELATED WORK Visual query languages have attempted to bridge the gap of usability for users (for a survey see <ref> [6] </ref>). Forms based query languages such as QBE [23], present the database structure as tables or forms into which queries can be placed. Graph based query languages (e.g.
References-found: 6

