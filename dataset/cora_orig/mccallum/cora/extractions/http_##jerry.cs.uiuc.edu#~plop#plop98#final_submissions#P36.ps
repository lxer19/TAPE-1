URL: http://jerry.cs.uiuc.edu/~plop/plop98/final_submissions/P36.ps
Refering-URL: http://jerry.cs.uiuc.edu/~plop/plop98/final_submissions/
Root-URL: http://www.cs.uiuc.edu
Title: A Componentware Development Methodology based on Process Patterns  
Author: Klaus Bergner, Andreas Rausch Marc Sihling, Alexander Vilbig 
Date: 29th July 1998  
Web: http://www4.informatik.tu-muenchen.de  
Address: D-80290 Munchen  
Affiliation: Institut fur Informatik Technische Universitat Munchen  
Abstract: We present a new approach to a componentware development methodology based on a system of process patterns. We argue that organizing the development process by means of a pattern system results in higher flexibility compared to traditional ways of defining development processes. This is especially important in the context of componentware. Finally, we propose a pattern catalog with a selection of suitable process patterns. 
Abstract-found: 1
Intro-found: 1
Reference: [AG83] <author> Albrecht and Gaffney. </author> <title> Software function, source lines of code, and development effort prediction: a software science validation. </title> <journal> IEEE Transactions SE, </journal> <volume> 9(6), </volume> <year> 1983. </year>
Reference: [BBHP95] <author> Wolfgang Bartsch, Klaus Bergner, Rudolf Hettler, and Barbara Paech. Studenten Entwickeln Universelles Hochschulinformationssystem: </author> <title> Erfahrungen aus einem Softwaretechnik-Praktikum. </title> <booktitle> In Proceedings of SEUH. German Chapter of the ACM, </booktitle> <address> Teubner-Verlag, </address> <year> 1995. </year>
Reference-contexts: The current patterns try to capture the project management techniques applied during numerous practical project courses that have been conducted over the last five years <ref> [Tec94, Tec95, BBHP95, Ber96, Tec96, Tec97, BH97, Tec98b, Tec98a] </ref>. 3 Roles Componentware introduces a number of new roles for developers and project managers. Particularly noticeable are the separation of Component Developer from Component Assembler, and the introduction of a dedicated System Architect and a Project Coordinator.
Reference: [Bee98] <author> Michael Beedle. </author> <title> BPRPatternLanguage home page, </title> <address> http://www.bell-labs.com/cgi-user/Org Patterns/OrgPatterns?BPRPatternLanguage, </address> <year> 1998. </year>
Reference-contexts: Other patterns, like Code Ownership, Patron, or Organization Follows Location, are orthogonal to our approach and may therefore be combined with the patterns proposed in this paper. Similar considerations apply to the approaches of Beedle <ref> [Bee98] </ref> and Cockburn [Coc97]. A closely related approach to a flexible software development process suited to componentware has very recently been proposed in the scope of the Catalysis methodology [DW98].
Reference: [Ber96] <author> Klaus Bergner. </author> <title> Under pressure recommendations for managing a practical course in software engineering. </title> <booktitle> In Proceedings of Software Engineering: Education and Practice '96. </booktitle> <publisher> IEEE Press, </publisher> <year> 1996. </year>
Reference-contexts: The current patterns try to capture the project management techniques applied during numerous practical project courses that have been conducted over the last five years <ref> [Tec94, Tec95, BBHP95, Ber96, Tec96, Tec97, BH97, Tec98b, Tec98a] </ref>. 3 Roles Componentware introduces a number of new roles for developers and project managers. Particularly noticeable are the separation of Component Developer from Component Assembler, and the introduction of a dedicated System Architect and a Project Coordinator.
Reference: [BH97] <author> Klaus Bergner and Franz Huber. </author> <title> Systems development with Java: Experiences from a practical project course in software engineering. </title> <booktitle> In Proceedings of the Eighth International Workshop on Software Technology and Engineering Practice '97. </booktitle> <publisher> IEEE Press, </publisher> <year> 1997. </year>
Reference-contexts: The current patterns try to capture the project management techniques applied during numerous practical project courses that have been conducted over the last five years <ref> [Tec94, Tec95, BBHP95, Ber96, Tec96, Tec97, BH97, Tec98b, Tec98a] </ref>. 3 Roles Componentware introduces a number of new roles for developers and project managers. Particularly noticeable are the separation of Component Developer from Component Assembler, and the introduction of a dedicated System Architect and a Project Coordinator.
Reference: [BMR + 96] <author> F. Buschmann, R. Meunier, H. Rohnert, P. Sommerlad, and M. Stal. </author> <title> Pattern-Oriented Software Architecture </title>
Reference-contexts: Process Patterns: According to most authors, patterns consist of three main parts: The context is an overall situation giving rise to a certain recurring problem that may be solved by a general and proven solution <ref> [BMR + 96] </ref>. Within our approach, these parts may be described as follows: * The context is defined by the current internal state of the development project and its external state with respect to the customers, the competitors, and the market situation.
References-found: 6

