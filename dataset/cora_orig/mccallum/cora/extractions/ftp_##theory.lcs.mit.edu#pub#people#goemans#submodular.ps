URL: ftp://theory.lcs.mit.edu/pub/people/goemans/submodular.ps
Refering-URL: http://theory.lcs.mit.edu/~goemans/
Root-URL: 
Title: Minimizing Submodular Functions over Families of Sets  
Author: M.X. Goemans V.S. Ramakrishnan 
Date: December 1993 Revised: July 1995  
Note: To appear in Combinatorica.  
Abstract: We consider the problem of characterizing the minimum of a submodular function when the minimization is restricted to a family of subsets. We show that, for many interesting cases, there exist two elements a and b of the groundset such that the problem is equivalent to the problem of minimizing the submodular function over the sets containing a but not b. This leads to a polynomial-time algorithm for minimizing a submodular function over these families of sets. Our results apply, for example, to the families of odd cardinality subsets or even cardinality subsets separating two given vertices, or to the complement of a lattice family of subsets. We also derive that the second smallest value of a submodular function over a lattice family can be computed in polynomial-time. These results generalize and unify several known results. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> F. Barahona and M. Conforti, </author> <title> "A construction for binary matroids", </title> <journal> Discrete Mathematics, </journal> <volume> 66, </volume> <pages> 213-218, </pages> <year> 1987. </year>
Reference-contexts: Several restricted minimum cut problems have been shown to be polynomially solvable: the odd-cut or T -odd cut problem by Pad-berg and Rao [12], the even-cut or T -even cut problem by Barahona and Conforti <ref> [1] </ref> and any "proper" cut problem by Gabow, Goemans and Williamson [3]. Examples of families of proper cuts are the T -odd cuts and the generalized Steiner cuts. <p> This also follows from Corollary 3. In a similar vein, finding a minimum s-t T -even cut can be formulated and solved the same way. 3.1.2 T -even cuts A polynomial time algorithm to solve the minimum T -even cut problem was devised by Barahona and Conforti <ref> [1] </ref>. They reduce the problem to a sequence of O (jV j 5 ) minimum s-t cut problems. Using an argument similar to (1), one can decrease the number of minimum s-t cut problems to O (jV j 4 ).
Reference: [2] <author> S. Fujishige, </author> <title> "Submodular functions and optimization", </title> <booktitle> Annals of Discrete Mathematics 47, </booktitle> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1991. </year>
Reference-contexts: For a survey of submodular functions and their properties, the reader is referred to Lovasz [9] and Fujishige <ref> [2] </ref>. Many problems in combinatorial optimization can be formulated as the problem of minimizing a submodular function. Illustrations include the minimum cut or s-t cut proBlem in an undirected or directed graph, or the problem of finding the largest independent set common to two matroids.
Reference: [3] <author> H.N. Gabow, M.X. Goemans and D.P. Williamson, </author> <title> "An efficient approximation algorithm for the survivable network design problem", </title> <booktitle> Proc. of the Third MPS Integer Programming and Combinatorial Optimization Conference, Erice, Italy, </booktitle> <pages> 57-74, </pages> <year> 1993. </year>
Reference-contexts: Several restricted minimum cut problems have been shown to be polynomially solvable: the odd-cut or T -odd cut problem by Pad-berg and Rao [12], the even-cut or T -even cut problem by Barahona and Conforti [1] and any "proper" cut problem by Gabow, Goemans and Williamson <ref> [3] </ref>. Examples of families of proper cuts are the T -odd cuts and the generalized Steiner cuts. Grotschel, Lovasz and Schrijver [6] (see also [7, 8]) have generalized Padberg and Rao's result to any submodular function and to more general families of subsets. <p> Given sets T 1 ; : : : ; T k V of terminals, a generalized Steiner cutset is induced by a set S such that S " T i 6= ; and T i n S 6= ; for some S. Gabow et al. <ref> [3, Section 5.1] </ref> have shown that any minimum proper cut problem can be solved by first constructing a cut equivalent tree. The result is described in the following theorem. It also applies to general symmetric submodular functions. <p> Gabow et al. [3, Section 5.1] have shown that any minimum proper cut problem can be solved by first constructing a cut equivalent tree. The result is described in the following theorem. It also applies to general symmetric submodular functions. Theorem 10 (Gabow et al. <ref> [3] </ref>) Let f be the cut function of a weighted undirected graph G = (V; E) and let G be any proper family of cuts. <p> Nevertheless, Theorem 10 can be indirectly derived from Theorem 1, as demonstrated below. We should however point out that the proof in <ref> [3] </ref> is simpler and more direct. Proof: Consider a cut equivalent tree H = (V; T ) corresponding to the weighted graph G = (V; E).
Reference: [4] <author> M.X. Goemans and D.P. Williamson, </author> <title> "A general approximation technique for constrained forest problems", </title> <journal> SIAM Journal on Computing, </journal> <note> to appear. A preliminary version has appeared in the Proc. of the Third Annual ACM-SIAM Symposium on Discrete Algorithms, Orlando, </note> <institution> Florida, </institution> <month> 307-316, </month> <year> 1992. </year>
Reference-contexts: This is a contradiction. fl In the case of the cut function, families satisfying condition (ii) of Lemma 9 were defined as proper families by Goemans and Williamson <ref> [4] </ref>. Examples of proper families or proper cuts include: * T -odd cuts. Given an even set T of vertices, a T -odd cut is a set S V such that jS "T j is odd.
Reference: [5] <author> R.E. Gomory and T.C. </author> <title> Hu (1961), "Multi-terminal network flows", </title> <journal> Journal of the Society for Industrial and Applied Mathematics, </journal> <volume> 9, </volume> <pages> 551-570, </pages> <year> 1961. </year>
Reference-contexts: By using the decomposition (1) or (2), one can in fact decrease the number of submodular function minimizations to O (jV j 2 ). Their approach is in the spirit of Gomory and Hu's algorithm <ref> [5] </ref> to find a compact representation of minimum cuts between all pairs of vertices of a weighted undirected graph and the procedure of Padberg and Rao [12] to find a minimum-weight T -odd cut. <p> Most properties of the cut function also apply to any symmetric submodular function f . In particular, any symmetric submodular function admits a so-called cut-equivalent tree as was shown by Gomory and Hu <ref> [5] </ref> for the cut function. <p> A cut equivalent tree can be obtained by solving jV j 1 submodular function minimizations over 2 V st <ref> [5] </ref>. Since f is symmetric, we can also restrict our attention to symmetric families of sets, i.e. families C such that S 2 C iff V n S 2 C.
Reference: [6] <author> M. Grotschel, L. Lovasz and A. Schrijver, </author> <title> "The ellipsoid method and its consequences in combinatorial optimization", </title> <journal> Combinatorica, </journal> <volume> 1, </volume> <pages> 169-197, </pages> <year> 1981. </year>
Reference-contexts: Examples of families of proper cuts are the T -odd cuts and the generalized Steiner cuts. Grotschel, Lovasz and Schrijver <ref> [6] </ref> (see also [7, 8]) have generalized Padberg and Rao's result to any submodular function and to more general families of subsets. Their algorithm can be used to solve the minimum s-t T -odd cut or s-t T -even cut in polynomial time. <p> Throughout, we assume that the submodular function f is given by an oracle returning f (S) for each query S V . Minimizing a submodular function over a lattice family can be done in oracle-polynomial time 3 via the ellipsoid algorithm, as was shown by Grotschel, Lovasz and Schrijver <ref> [6] </ref>. This also trivially implies that one can minimize a submodular function over the union of a polynomial number of lattice families in oracle-polynomial time. <p> Let fi be an upper bound on the size of f (S) for any set S. As mentioned previously, the minimization of a submodular function f over a lattice family C 2 V can be done in oracle-polynomial time <ref> [6] </ref>. We claim further that the algorithm can be used to find a minimal set minimizing f over the lattice family. <p> Observe that the size of g (S) is O (fi + log jV j), implying that the algorithm of 13 Grotschel et al. <ref> [6] </ref> as applied to g will find a minimal set minimizing f in oracle-polynomial time. Corollary 3 follows easily from Theorem 2. The algorithm proceeds as follows.
Reference: [7] <author> M. Grotschel, L. Lovasz and A. Schrijver, </author> <title> "Corrigendum to our paper "The ellipsoid method and its consequences in combinatorial optimization"", </title> <journal> Combinatorica, </journal> <volume> 4, </volume> <pages> 291-295, </pages> <year> 1984. </year>
Reference-contexts: Examples of families of proper cuts are the T -odd cuts and the generalized Steiner cuts. Grotschel, Lovasz and Schrijver [6] (see also <ref> [7, 8] </ref>) have generalized Padberg and Rao's result to any submodular function and to more general families of subsets. Their algorithm can be used to solve the minimum s-t T -odd cut or s-t T -even cut in polynomial time. <p> B 2 C n G ) (A " B 2 G iff A [ B 2 G) : 1 Often, to emphasize the dependence on C, we shall refer to G as a parity subfamily of C. 2 A related family of subsets was introduced by Grotschel, Lovasz and Schrijver <ref> [7] </ref> to provide a general setting for the minimization of a submodular function over odd-cardinality or even-cardinality members of a lattice family. <p> Then a set attaining the second smallest value of f over C can be obtained in oracle-polynomial time by solving O (jV j 2 ) submodular function minimizations over lattice families. Grotschel, Lovasz and Schrijver <ref> [7] </ref> reduce the problem of minimizing a submodular function over a triple family to a sequence of O (jV j 3 ) submodular function minimizations over lattice families. <p> It is easy to see that G is a parity subfamily of 2 V st , and even a triple family. The algorithm of Grotschel et al. <ref> [7, 8] </ref> thus solves the s-t T -odd cut problem as a sequence of O (jV j 2 ) minimum s-t cut problems. This also follows from Corollary 3.
Reference: [8] <author> M. Grotschel, L. Lovasz and A. Schrijver, </author> <title> Geometric Algorithms and Combinatorial Optimization, </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1988. </year>
Reference-contexts: Examples of families of proper cuts are the T -odd cuts and the generalized Steiner cuts. Grotschel, Lovasz and Schrijver [6] (see also <ref> [7, 8] </ref>) have generalized Padberg and Rao's result to any submodular function and to more general families of subsets. Their algorithm can be used to solve the minimum s-t T -odd cut or s-t T -even cut in polynomial time. <p> Their algorithm can be used to solve the minimum s-t T -odd cut or s-t T -even cut in polynomial time. In this paper, we consider what we call parity families, which are even more general families of subsets than the ones considered in Grotschel et al. <ref> [8] </ref>. We show that the minimization of a submodular function over a parity family can be done in polynomial time. Our algorithm and the corresponding characterization differs significantly from the approach used in Grotschel et al. [8]. <p> even more general families of subsets than the ones considered in Grotschel et al. <ref> [8] </ref>. We show that the minimization of a submodular function over a parity family can be done in polynomial time. Our algorithm and the corresponding characterization differs significantly from the approach used in Grotschel et al. [8]. Their algorithm as well as the original algorithm of Padberg and Rao and the algorithm of Barahona and Conforti exploit certain uncrossing properties of minimum sets or minimum cuts. We show that, in general, this property does not hold for parity families, rendering the approach infeasible. <p> In the next section, we elaborate on applications and special cases of our main result and its algorithmic implication. 3 Previous Work and Applications We begin by reviewing some examples of triple families. Lemma 4 (Grotschel et al. <ref> [8] </ref>) Let C 2 V be any lattice family and T be a non-empty subset of V . Then, for any p; q 2 Z, the family G := fS 2 C : jS " T j 6 q (mod p)g is a triple family. <p> jS " T 2 j (mod p)g corresponds to the case a i = 1 for i 2 T 1 n T 2 , a i = 1 for i 2 T 2 n T 1 , a i = 0 otherwise, and q = 0. 4 Grotschel et al. <ref> [8] </ref> also show that C n A is a triple family where C is a lattice family and A is an antichain. A family A is called an antichain if, for distinct S 1 ; S 2 2 A, S 1 6 S 2 . <p> In particular, f (;) = f (V ) = 0. The cut function f is symmetric and is submodular on any lattice family C 2 V . Using the compact representation of a lattice family in terms of a digraph <ref> [8, 6 Section 10.3] </ref>, the minimum of the cut function f over any lattice family can be obtained by solving a single minimum s-t cut problem in a related digraph. Most properties of the cut function also apply to any symmetric submodular function f . <p> It is easy to see that G is a parity subfamily of 2 V st , and even a triple family. The algorithm of Grotschel et al. <ref> [7, 8] </ref> thus solves the s-t T -odd cut problem as a sequence of O (jV j 2 ) minimum s-t cut problems. This also follows from Corollary 3. <p> In what follows, we assume that the lattice family C is compactly encoded by a digraph as described in <ref> [8, Section 10.3] </ref>, that the parity family is given by a membership oracle and that the submodular function is given by an oracle returning f (S) for each query S V . Let fi be an upper bound on the size of f (S) for any set S.
Reference: [9] <author> L. Lovasz, </author> <title> "Submodular functions and convexity", </title> <editor> in: A. Bachem, M. Grotschel and B. Korte (eds.), </editor> <booktitle> Mathematical Programming: The State of the Art, </booktitle> <address> Bonn, 1982, </address> <publisher> Springer, Berlin, </publisher> <pages> 235-257, </pages> <year> 1983. </year> <month> 15 </month>
Reference-contexts: For a survey of submodular functions and their properties, the reader is referred to Lovasz <ref> [9] </ref> and Fujishige [2]. Many problems in combinatorial optimization can be formulated as the problem of minimizing a submodular function. Illustrations include the minimum cut or s-t cut proBlem in an undirected or directed graph, or the problem of finding the largest independent set common to two matroids.
Reference: [10] <author> L. Lovasz, </author> <title> "Combinatorial problems and exercises", </title> <publisher> Akademiai Kiado, </publisher> <year> 1993. </year>
Reference-contexts: However, the triple sbmodular inequality <ref> [10, Ex. 6.48] </ref> then implies that 4 min f (T ) f (Y " Z n X) + f (Z " X n Y ) + f (X " Y n Z) + f (V n (X [ Y [ Z)) &lt; 4 min f (T ); which is a contradiction.
Reference: [11] <author> H. Nagamochi, K. Nishimura and T. Ibaraki, </author> <title> "Computing all small cuts in undirected networks", </title> <booktitle> Proceedings of the 5th ISAAC, Beijing, P.R. China, 1994, Lecture Notes in Computer Science, </booktitle> <volume> 834, </volume> <editor> D.-Z. Du and X.-S. Zhang, eds., </editor> <publisher> Springer-Verlag, </publisher> <month> 190-198 </month> <year> (1994). </year>
Reference-contexts: The proof of our main result is given in Section 4 and the derivation of the algorithmic consequences is discussed in Section 5. In the last section, we use the techniques developed in this paper to give a simple proof of a recent result of Nagamochi et al. <ref> [11] </ref> on the maximum number of approximately minimum cuts in an undirected graph. 2 Definitions, Preliminaries and Results Let V be a finite set. <p> This implies that we can find a minimal set minimizing f over any parity subfamily of C easily, once this collection is constructed. 6 Approximately Minimum Cuts The techniques developed in this paper can also be used in other settings. Consider the recent result of Nagamochi, Nishimura and Ibaraki <ref> [11] </ref> which says that there are at most n cuts in an undirected graph whose value is less than 4=3 times the minimum cut value. This result follows from the following characterization of such cuts.
Reference: [12] <author> M.W. Padberg and M.R. Rao, </author> <title> "Odd minimum cut-sets and b-matchings", </title> <journal> Mathematics of Operations Research, </journal> <volume> 7, </volume> <pages> 67-80, </pages> <year> 1982. </year>
Reference-contexts: Several restricted minimum cut problems have been shown to be polynomially solvable: the odd-cut or T -odd cut problem by Pad-berg and Rao <ref> [12] </ref>, the even-cut or T -even cut problem by Barahona and Conforti [1] and any "proper" cut problem by Gabow, Goemans and Williamson [3]. Examples of families of proper cuts are the T -odd cuts and the generalized Steiner cuts. <p> Their approach is in the spirit of Gomory and Hu's algorithm [5] to find a compact representation of minimum cuts between all pairs of vertices of a weighted undirected graph and the procedure of Padberg and Rao <ref> [12] </ref> to find a minimum-weight T -odd cut. At the heart of these methods is the following lemma which is a generalization of the notion of uncrossing introduced by Gomory and Hu. <p> Given an even set T of vertices, a T -odd cut is a set S V such that jS "T j is odd. The minimum T -odd cut problem arises as the separation problem over the matching or T -join polytopes. Padberg and Rao <ref> [12] </ref> have shown that minimum T -odd cuts can be obtained through a sequence of O (jV j) minimum s-t cut problems. More precisely, they have shown that a minimum T -odd cut is induced by one of the edges of the Gomory-Hu cut tree.
Reference: [13] <author> D. Williamson, M.X. Goemans, M. Mihail and V. Vazirani, </author> <title> "A Primal-Dual Approximation Algorithm for Generalized Steiner Network Problems", </title> <booktitle> Proc. of the 25th ACM Symposium on the Theory of Computing, </booktitle> <address> San Diego, CA, 708-717, </address> <year> 1993. </year> <month> 16 </month>
Reference-contexts: We first establish a key lemma from which our main result will follow easily. The proof technique we use was inspired by a result of Williamson et al. <ref> [13] </ref>. In what follows, we assume that C 2 V is a lattice family, that G C is a parity family, that f is a submodular function on C and that S fl minimizes f over G. We further assume that S fl =2 f;; V g.
References-found: 13

