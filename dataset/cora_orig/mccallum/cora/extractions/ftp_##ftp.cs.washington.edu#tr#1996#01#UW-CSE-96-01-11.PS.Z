URL: ftp://ftp.cs.washington.edu/tr/1996/01/UW-CSE-96-01-11.PS.Z
Refering-URL: http://www.cs.washington.edu/research/tr/tr-by-title.html
Root-URL: 
Address: Box 352350  Seattle, WA 98195-2350 USA  
Affiliation: Department of Computer Science and Engineering,  University of Washington,  
Abstract: Triplex Router: A Versatile Torus Routing Algorithm Melanie L. Fulgham Lawrence Snyder Technical Report UW-CSE-96-01-11 Department of Computer Science and Engineering University of Washington 
Abstract-found: 1
Intro-found: 1
Reference: [BLA + 94] <author> M.A. Blumrich, K. Li, R. Alpert, C. Dubnicki, </author> <title> and E.W. Felten. Virtual memory mapped network interface for the SHRIMP multicomputer. </title> <booktitle> In Proc. of the Intl. Sym. on Computer Arch., </booktitle> <pages> pages 142-153, </pages> <year> 1994. </year>
Reference-contexts: Until recently, the large software overhead required to send a message through the network has overshadowed the need for low latency routing algorithms, the rules which specify a message path. As communication overhead declines <ref> [vEDCGS92, Dal90, BLA + 94, MBES94] </ref>, however, the routing algorithm becomes more important to communication performance. Research in reducing communication overhead has resulted in prototype communication systems with network time accounting for over 50% of the typical communication time, even when no contention occurs [CKP + 93].
Reference: [Bol93a] <author> K. Bolding. </author> <title> Multicomputer interconnection network channel design. </title> <type> Technical Report UW-CSE-93-12-03, </type> <institution> University of Washington, </institution> <address> Seattle, </address> <year> 1993. </year>
Reference-contexts: With virtual cut-through routing, a buffer may contain parts of two distinct messages, one that is being received and one that is being transmitted to another buffer. For wormhole routing, unidirectional (simplex) channels are employed. For packet routing bidirectional (half-duplex) channels shared between the two directions are used. See <ref> [Bol93a] </ref> for a discussion of the tradeoffs. To maintain a constant channel width between packet and wormhole networks, the unidirectional channels simulated are half as wide as the bidirectional channels, though in the future it may be practical to use each channel in both directions simultaneously [DLD93].
Reference: [Bol93b] <author> Kevin Bolding. </author> <title> Chaotic Routing: Design and Implementation of an Adaptive Multicomputer Network Router. </title> <type> PhD thesis, </type> <institution> University of Washington, </institution> <address> Seattle, </address> <month> July </month> <year> 1993. </year>
Reference-contexts: The node latencies are three cycles for the oblivious and four cycles for the adaptive algorithms <ref> [Bol93b] </ref>. Although the adaptive algorithms appear quite complex to describe, the additional calculations required beyond that of the oblivious router are actually easy to compute. For example, the Triplex computation determines, in parallel, the dimension and direction of all of the minimal routes, the lowest dimension minimal route.
Reference: [CK92] <author> A.A. Chien and J.H. Kim. </author> <title> Planar-adaptive routing: Low-cost adaptive networks for multiprocessors. </title> <booktitle> In Proc. of the Intl. Sym. on Computer Arch., </booktitle> <pages> pages 268-277, </pages> <year> 1992. </year>
Reference-contexts: The former uses an exponential number of virtual channels per channel, while the latter uses three but requires buffer status from neighboring nodes. Glass and Ni eliminate the use of virtual channels by restricting turns in the network, resulting in a non-minimal partially adaptive algorithm [GN94]. Planar adaptive <ref> [CK92] </ref> and hierarchical adaptive routing [LC94] are partially adaptive algorithms that sacrifice adaptivity to reduce the crossbar complexity required of fully adaptive algorithms. There are several other algorithms that have been presented, but they do not easily generalize to the torus topology [DA93, DDH + 94].
Reference: [CKP + 93] <author> D. Culler, R. Karp, D. Patterson, A. Sahay, K.E. Schauser, E. Santos, R. Sub-ramonian, and T. vonEicken. </author> <title> LogP: Towards a realistic model of parallel computation. </title> <booktitle> In Proc. of Sym. on Prin. and Prac. of Par. Prog., </booktitle> <month> May </month> <year> 1993. </year>
Reference-contexts: As communication overhead declines [vEDCGS92, Dal90, BLA + 94, MBES94], however, the routing algorithm becomes more important to communication performance. Research in reducing communication overhead has resulted in prototype communication systems with network time accounting for over 50% of the typical communication time, even when no contention occurs <ref> [CKP + 93] </ref>. In the future, routing latency may even dominate communication costs. In this paper, we consider low latency routing algorithms for arbitrary torus networks. The torus is the topology for the Cray T3D and the underlying structure of the Tera parallel computer.
Reference: [DA93] <author> William J. Dally and Hiromichi Aoki. </author> <title> Deadlock-free adaptive routing in mul-ticomputer networks using virtual channels. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 4(4) </volume> <pages> 466-75, </pages> <year> 1993. </year>
Reference-contexts: The second method allows each message a maximum number of deroutes after which the algorithm reverts to oblivious or some special type of routing, like an Euler path. Counting schemes are used by both <ref> [DA93] </ref> and [Smi81]. The former counts deroutes as dimension reversals, while the latter accumulates battle scars. Both of these algorithms require a message to carry and update additional routing information in its header, namely the number of misroutes performed. <p> Planar adaptive [CK92] and hierarchical adaptive routing [LC94] are partially adaptive algorithms that sacrifice adaptivity to reduce the crossbar complexity required of fully adaptive algorithms. There are several other algorithms that have been presented, but they do not easily generalize to the torus topology <ref> [DA93, DDH + 94] </ref>. Unlike the previously mentioned approaches, the framework of Schwiebert and Jayasimha [SJ96] does not require a connected network with static acyclic channel dependencies. This results in algorithms with fewer routing restrictions. The Triplex algorithm presented uses this approach. 6.
Reference: [Dal90] <author> W.J. Dally. </author> <title> The J-Machine system. </title> <editor> In P.Winston and S. Shellard, editors, </editor> <booktitle> Artificial Intelligence at MIT: Expanding Frontiers. </booktitle> <publisher> MIT Press, </publisher> <year> 1990. </year>
Reference-contexts: Until recently, the large software overhead required to send a message through the network has overshadowed the need for low latency routing algorithms, the rules which specify a message path. As communication overhead declines <ref> [vEDCGS92, Dal90, BLA + 94, MBES94] </ref>, however, the routing algorithm becomes more important to communication performance. Research in reducing communication overhead has resulted in prototype communication systems with network time accounting for over 50% of the typical communication time, even when no contention occurs [CKP + 93].
Reference: [Dal92] <author> W. Dally. </author> <title> Virtual-channel flow control. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 3(2) </volume> <pages> 194-205, </pages> <month> March </month> <year> 1992. </year>
Reference-contexts: The oblivious, Duato, and Triplex algorithms have 2, 3, and 3 virtual channels per channel, respectively yielding a total of 18, 26, and 26 buffers per node for each router, respectively. The oblivious router could be given an extra set of virtual lanes <ref> [Dal92] </ref>, but then it would not support in-order delivery as desired. The Chaos router does not use virtual channels. Instead it uses 10 buffers, in addition to a central queue with 5 buffers, for a total of 15 buffers per node.
Reference: [DDH + 94] <author> W.J. Dally, L.R. Dennison, D. Harris, K. Kan, and T. Xanthopoulos. </author> <title> The reliable router: A reliable and highh-performance communications substrate for parallel computers. </title> <booktitle> In Lecture Notes in Computer Science, </booktitle> <volume> volume 853, </volume> <pages> pages 241-55, </pages> <year> 1994. </year>
Reference-contexts: Planar adaptive [CK92] and hierarchical adaptive routing [LC94] are partially adaptive algorithms that sacrifice adaptivity to reduce the crossbar complexity required of fully adaptive algorithms. There are several other algorithms that have been presented, but they do not easily generalize to the torus topology <ref> [DA93, DDH + 94] </ref>. Unlike the previously mentioned approaches, the framework of Schwiebert and Jayasimha [SJ96] does not require a connected network with static acyclic channel dependencies. This results in algorithms with fewer routing restrictions. The Triplex algorithm presented uses this approach. 6.
Reference: [DLD93] <author> L.R. Dennison, W.S. Lee, and W.J. Dally. </author> <title> High performacne bidirectional signalling in VLSI systems. </title> <booktitle> In Research on Integrated Systems: Proc. of the 1993 Sym., </booktitle> <year> 1993. </year>
Reference-contexts: See [Bol93a] for a discussion of the tradeoffs. To maintain a constant channel width between packet and wormhole networks, the unidirectional channels simulated are half as wide as the bidirectional channels, though in the future it may be practical to use each channel in both directions simultaneously <ref> [DLD93] </ref>. The buffers are one flit long for wormhole routing, while for packet routing, buffers are 20 flits long and buffers can hold an entire message. This is a minimal amount of buffering and greatly increases the throughput achieved by the network.
Reference: [DS87] <author> W. Dally and C. Seitz. </author> <title> Deadlock-free message routing in multiprocessor interconnection networks. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-36(5):547-553, </volume> <month> May </month> <year> 1987. </year>
Reference-contexts: The mesh algorithm uses two virtual channels per channel, while the torus algorithm uses three virtual channels per channel. Let DO be the dimension order Dally-Seitz oblivious, deadlock-free wormhole routing algorithm <ref> [DS87] </ref>. The DO algorithm routes a message from the lowest dimension to the highest dimension, where the direction in each dimension is chosen to make the message route minimal. This algorithm is wait-connected and deadlock-free. <p> Comparisons Performance of the Triplex algorithm is explored by simulation. The algorithm is compared to three other routers: the Dally-Seitz oblivious router <ref> [DS87] </ref>, Duato [GPBS94, Dua93], and the Chaos [KS94] router using a flit-level simulator of a 256-node two dimensional torus network. Each of the three routers represents one of the routing classes offered by the Triplex router. The first algorithm provides no adaptivity. <p> Deadlocks have traditionally been avoided in wormhole routed networks by insuring that the network has a set of connected channels with static acyclic 15 channel dependencies. Informally, a dependency between two channels occurs when a mes-sage can use the one channel followed by the other channel. Dally and Seitz <ref> [DS87] </ref> presented this idea for deterministic algorithms and Duato [Dua93, Dua95] generalized this idea to adaptive and fault tolerant algorithms. Though most of the deadlock avoidance algorithms share this same underlying principle, they have different resource requirements and varying amounts of adaptivity. <p> Though most of the deadlock avoidance algorithms share this same underlying principle, they have different resource requirements and varying amounts of adaptivity. The simplest deadlock-free wormhole algorithm for the torus is the Dally-Seitz oblivious dimension order algorithm <ref> [DS87] </ref>. This algorithm requires two virtual channels per channel for the torus and restricts a message to correcting the dimensions from lowest to highest.
Reference: [Dua93] <author> J. Duato. </author> <title> A new theory of deadlock-free adaptive routing in wormhole networks. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 4(4) </volume> <pages> 466-475, </pages> <month> April </month> <year> 1993. </year>
Reference-contexts: Comparisons Performance of the Triplex algorithm is explored by simulation. The algorithm is compared to three other routers: the Dally-Seitz oblivious router [DS87], Duato <ref> [GPBS94, Dua93] </ref>, and the Chaos [KS94] router using a flit-level simulator of a 256-node two dimensional torus network. Each of the three routers represents one of the routing classes offered by the Triplex router. The first algorithm provides no adaptivity. <p> Informally, a dependency between two channels occurs when a mes-sage can use the one channel followed by the other channel. Dally and Seitz [DS87] presented this idea for deterministic algorithms and Duato <ref> [Dua93, Dua95] </ref> generalized this idea to adaptive and fault tolerant algorithms. Though most of the deadlock avoidance algorithms share this same underlying principle, they have different resource requirements and varying amounts of adaptivity. The simplest deadlock-free wormhole algorithm for the torus is the Dally-Seitz oblivious dimension order algorithm [DS87]. <p> The simplest deadlock-free wormhole algorithm for the torus is the Dally-Seitz oblivious dimension order algorithm [DS87]. This algorithm requires two virtual channels per channel for the torus and restricts a message to correcting the dimensions from lowest to highest. The torus algorithms of Linder and Harden [LH91] and Duato <ref> [GPBS94, Dua93] </ref> are minimal 11 fully adaptive algorithms, allowing all shortest paths between a message source and destination. The former uses an exponential number of virtual channels per channel, while the latter uses three but requires buffer status from neighboring nodes.
Reference: [Dua95] <author> J. Duato. </author> <title> A necessary and sufficient condition for deadlock-free adaptive routing in wormhole networks. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 6(10), </volume> <month> October </month> <year> 1995. </year> <month> 17 </month>
Reference-contexts: Informally, a dependency between two channels occurs when a mes-sage can use the one channel followed by the other channel. Dally and Seitz [DS87] presented this idea for deterministic algorithms and Duato <ref> [Dua93, Dua95] </ref> generalized this idea to adaptive and fault tolerant algorithms. Though most of the deadlock avoidance algorithms share this same underlying principle, they have different resource requirements and varying amounts of adaptivity. The simplest deadlock-free wormhole algorithm for the torus is the Dally-Seitz oblivious dimension order algorithm [DS87].
Reference: [Fel93] <author> E.W. Felten. </author> <title> Protocol Compilation: High-Performance Communication for Parallel Programs. </title> <type> PhD thesis, </type> <institution> University of Washington, </institution> <address> Seattle, WA, </address> <year> 1993. </year>
Reference-contexts: The choice of class may be specified at system boot-up, dynamically, or individually by message. Dynamic class selection may be useful when compile time information is available <ref> [Fel93] </ref>, enabling the system to select the best class for the expected traffic. Individual selection is useful, for example, when some messages require in-order delivery, while other messages prefer the increased flexibility of adaptive routing. <p> The cost may be reasonable, since routing possibilities can be computed before the selection bits arrive. Individual mode selection might be useful when in-order delivery is required for certain messages and others prefer the flexibility of adaptive routing, or when compile time information is available <ref> [Fel93] </ref> and a particular type of routing is preferred for the expected traffic. 7 4. Comparisons Performance of the Triplex algorithm is explored by simulation.
Reference: [FS96] <author> M.L. Fulgham and L. Snyder. </author> <title> A comparison of input and output driven routers. </title> <booktitle> In Lecture Notes in Computer Science, Proc. of Euro-Par '96, </booktitle> <volume> volume 1123, </volume> <pages> pages 195-204, </pages> <year> 1996. </year>
Reference-contexts: To keep complexity manageable, the router connects at most a single message from an input buffer to an output buffer per cycle. Since all the algorithms are implemented as output-driven routers <ref> [FS96] </ref>, the router computes in parallel the routes needed by each ready message at the head of an input buffer. Then, it selects (at random) one of these messages to move to the empty output buffer being considered.
Reference: [GN94] <author> Christopher J. Glass and Lionel M. Ni. </author> <title> The turn model for adaptive routing. </title> <journal> JACM, </journal> <volume> 41(5) </volume> <pages> 874-902, </pages> <year> 1994. </year>
Reference-contexts: The former uses an exponential number of virtual channels per channel, while the latter uses three but requires buffer status from neighboring nodes. Glass and Ni eliminate the use of virtual channels by restricting turns in the network, resulting in a non-minimal partially adaptive algorithm <ref> [GN94] </ref>. Planar adaptive [CK92] and hierarchical adaptive routing [LC94] are partially adaptive algorithms that sacrifice adaptivity to reduce the crossbar complexity required of fully adaptive algorithms. There are several other algorithms that have been presented, but they do not easily generalize to the torus topology [DA93, DDH + 94].
Reference: [GPBS94] <author> L. Gravano, G. Pifarre, P.E. Berman, and J.L.C. Sanz. </author> <title> Adaptive deadlock-and livelock-free routing with all minimal paths in torus networks. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 5(12) </volume> <pages> 1233-1251, </pages> <year> 1994. </year>
Reference-contexts: Comparisons Performance of the Triplex algorithm is explored by simulation. The algorithm is compared to three other routers: the Dally-Seitz oblivious router [DS87], Duato <ref> [GPBS94, Dua93] </ref>, and the Chaos [KS94] router using a flit-level simulator of a 256-node two dimensional torus network. Each of the three routers represents one of the routing classes offered by the Triplex router. The first algorithm provides no adaptivity. <p> The simplest deadlock-free wormhole algorithm for the torus is the Dally-Seitz oblivious dimension order algorithm [DS87]. This algorithm requires two virtual channels per channel for the torus and restricts a message to correcting the dimensions from lowest to highest. The torus algorithms of Linder and Harden [LH91] and Duato <ref> [GPBS94, Dua93] </ref> are minimal 11 fully adaptive algorithms, allowing all shortest paths between a message source and destination. The former uses an exponential number of virtual channels per channel, while the latter uses three but requires buffer status from neighboring nodes.
Reference: [Gun81] <author> K.D. Gunther. </author> <title> Prevention of deadlocks in packet-switched data transport systems. </title> <journal> IEEE Trans. on Communication, </journal> <volume> COM-29:512-524, </volume> <month> April </month> <year> 1981. </year>
Reference-contexts: This creates cycles in the buffer dependencies. Thus, there is no acyclic ordering of the restricted buffers as in dimension order routing or Duato. Deadlock is avoided by providing an escape route <ref> [Gun81] </ref> for every message. 5 The idea of the deadlock-freedom proof follows. Details can be found in the Appendix. A message always maintains a deadlock-free path in its lowest dimension that needs correcting.
Reference: [KK79] <author> P. Kermani and L. Kleinrock. </author> <title> Virtual cut-through: A new computer communication switching technique. </title> <journal> Computer Networks, </journal> <volume> 3 </volume> <pages> 267-286, </pages> <year> 1979. </year>
Reference-contexts: In this paper we present the Triplex router, a versatile, multi-class router for torus networks. The router provides oblivious, minimal fully adaptive, and non-minimal fully adaptive routing classes for both wormhole or packet-switched flow control, including virtual cut-through <ref> [KK79] </ref> and store-and-forward techniques. The choice of class may be specified at system boot-up, dynamically, or individually by message. Dynamic class selection may be useful when compile time information is available [Fel93], enabling the system to select the best class for the expected traffic.
Reference: [KLC94] <author> J.H. Kim, Z. Liu, and A.A. Chien. </author> <title> Compressionless routing: a framework for adaptive and fault-tolerant routing. </title> <booktitle> In Proc. of the Intl. Sym. on Computer Arch., </booktitle> <pages> pages 289-300, </pages> <year> 1994. </year>
Reference-contexts: Much of this complexity results from resolving the problem of deadlocks in the network. Routing algorithms can be made deadlock-free in one of two ways. The first is by allowing deadlocks to occur and then to recover. Recovery schemes are used in both the compressionless router <ref> [KLC94] </ref> which uses an abort and retry technique similar to double-buffering [W + 88], and in the Disha router [KP95] which has a special set of buffers which a deadlocked message may access exclusively to reach its destination.
Reference: [Kon92] <author> S. Konstantinidou. </author> <title> Priorities in nonminimal, adaptive routing. </title> <booktitle> In Intl. Conf. on Par. Processing, </booktitle> <volume> volume I, </volume> <pages> pages 67-71, </pages> <year> 1992. </year>
Reference-contexts: This includes both the underlying oblivious network and the restricted nature of the non-minimal routes. Some messages are not allowed to deroute, while others are but eventually lose this ability. This loss may be beneficial when the message is a hop or two away from its destination <ref> [Kon92] </ref>, but not if it is far from its destination. The Chaos router has none of these non-uniformities, since it relies on the packet-exchange protocol for deadlock prevention [NS89].
Reference: [KP95] <author> Anjan K.V. </author> <title> and T.M. Pinkston. An efficient, fully adaptive deadlock recovery scheme: </title> <booktitle> DISHA. In Proc of the Intl. Sym. on Comp. Arch., </booktitle> <pages> pages 201-210, </pages> <year> 1995. </year>
Reference-contexts: The first is by allowing deadlocks to occur and then to recover. Recovery schemes are used in both the compressionless router [KLC94] which uses an abort and retry technique similar to double-buffering [W + 88], and in the Disha router <ref> [KP95] </ref> which has a special set of buffers which a deadlocked message may access exclusively to reach its destination. The alternative is deadlock avoidance, which is a more commonly used technique to achieve deadlock-freedom.
Reference: [KS94] <author> S. Konstantinidou and L. Snyder. </author> <title> The chaos router. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 43(12) </volume> <pages> 1386-97, </pages> <month> December </month> <year> 1994. </year>
Reference-contexts: This also requires a message to carry additional routing information in the header. Furthermore time-stamp fields are expensive to compare, since they must be large enough to prevent re-use problems. The fourth alternative is to use a prob abilistic scheme like the Chaos router <ref> [KS94] </ref>. This is simple to implement but results in an algorithm which is probabilistically livelock-free. Nevertheless, this is sufficient in practice. Unlike the Chaos router, the Triplex algorithm is never forced to deroute. <p> Comparisons Performance of the Triplex algorithm is explored by simulation. The algorithm is compared to three other routers: the Dally-Seitz oblivious router [DS87], Duato [GPBS94, Dua93], and the Chaos <ref> [KS94] </ref> router using a flit-level simulator of a 256-node two dimensional torus network. Each of the three routers represents one of the routing classes offered by the Triplex router. The first algorithm provides no adaptivity. The second is a minimal fully adaptive algorithm which allows any shortest path.
Reference: [LC94] <author> Z. Liu and A.A. Chien. </author> <title> Hierarchical adaptive routing: A framework for fully adaptive and deadlock-free wormhole routing. </title> <booktitle> In Sym. on Par. and Distr. Processing, </booktitle> <pages> pages 688-695, </pages> <year> 1994. </year>
Reference-contexts: Glass and Ni eliminate the use of virtual channels by restricting turns in the network, resulting in a non-minimal partially adaptive algorithm [GN94]. Planar adaptive [CK92] and hierarchical adaptive routing <ref> [LC94] </ref> are partially adaptive algorithms that sacrifice adaptivity to reduce the crossbar complexity required of fully adaptive algorithms. There are several other algorithms that have been presented, but they do not easily generalize to the torus topology [DA93, DDH + 94].
Reference: [LH91] <author> D. H. Linder and J. C. Harden. </author> <title> An adaptive and fault tolerant wormhole routing strategy for k-ary n-cubes. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-40(1):2-12, </volume> <month> January </month> <year> 1991. </year>
Reference-contexts: The simplest deadlock-free wormhole algorithm for the torus is the Dally-Seitz oblivious dimension order algorithm [DS87]. This algorithm requires two virtual channels per channel for the torus and restricts a message to correcting the dimensions from lowest to highest. The torus algorithms of Linder and Harden <ref> [LH91] </ref> and Duato [GPBS94, Dua93] are minimal 11 fully adaptive algorithms, allowing all shortest paths between a message source and destination. The former uses an exponential number of virtual channels per channel, while the latter uses three but requires buffer status from neighboring nodes.
Reference: [LL74] <author> G.P. Learmonth and P.A.W. Lewis. </author> <title> Statistical tests of some widely used and recently proposed uniform ran dom number generators. </title> <booktitle> In Proc. of the 7th Conf. on Comp. Sci, and Stats. Interface, </booktitle> <year> 1974. </year>
Reference-contexts: The sources of randomness are provided by a prime-modulus, multiplicative congruential generator <ref> [LL74] </ref> which is considered highly reliable for simulation studies [LO89]. 4.3. Results Simulations were run to examine the performance of Triplex and packet Triplex in each of its modes: oblivious, minimal fully adaptive, and non-minimal fully adaptive.
Reference: [LO89] <author> P.A.W. Lewis and E.J. Orav. </author> <title> Simulation Methodology for Statisticians, Operations Analysts, and Engineers, chapter Uniform Pseudo-Random Variable Generation, </title> <address> pages 65-99. </address> <publisher> Wadsworth Brooks/Cole, </publisher> <year> 1989. </year> <month> 18 </month>
Reference-contexts: The sources of randomness are provided by a prime-modulus, multiplicative congruential generator [LL74] which is considered highly reliable for simulation studies <ref> [LO89] </ref>. 4.3. Results Simulations were run to examine the performance of Triplex and packet Triplex in each of its modes: oblivious, minimal fully adaptive, and non-minimal fully adaptive. Comparisons were made between Triplex and a single class router using the same class or mode as Triplex.
Reference: [MBES94] <author> N. McKenzie, K. Bolding, C. Ebeling, and L. Snyder. CRANIUM: </author> <title> An interface for message passing on adaptive packet routing networks. </title> <booktitle> In Lecture Notes in Computer Science, </booktitle> <volume> volume 853, </volume> <pages> pages 266-80, </pages> <year> 1994. </year>
Reference-contexts: Until recently, the large software overhead required to send a message through the network has overshadowed the need for low latency routing algorithms, the rules which specify a message path. As communication overhead declines <ref> [vEDCGS92, Dal90, BLA + 94, MBES94] </ref>, however, the routing algorithm becomes more important to communication performance. Research in reducing communication overhead has resulted in prototype communication systems with network time accounting for over 50% of the typical communication time, even when no contention occurs [CKP + 93].
Reference: [Mu~n91] <author> David Mu~noz. </author> <title> Multivariate standardized time series in the analysis of simulation out put. </title> <type> Technical Report TR-68, </type> <institution> Operations Research, Stanford University, </institution> <address> Palo Alto, CA, </address> <month> April </month> <year> 1991. </year>
Reference-contexts: shu*e communication occurs in ascend/descend algorithms [PV81] while the transpose and bit reversal are important because they occur in practical computations. 10 The network bisection is the minimum number of channels cut to divide the network in half. 10 The simulator is written in C and uses a batch means <ref> [Mu~n91] </ref> method for computing 95% confidence intervals for the expected values of network throughput and latency. The sources of randomness are provided by a prime-modulus, multiplicative congruential generator [LL74] which is considered highly reliable for simulation studies [LO89]. 4.3.
Reference: [Nga89] <author> J. Y. Ngai. </author> <title> A Framework for Adaptive Routing in Multicomputer Networks. </title> <type> PhD thesis, </type> <institution> California Institute of Technology, Pasadena, </institution> <address> CA, </address> <month> May </month> <year> 1989. </year>
Reference-contexts: Both of these algorithms require a message to carry and update additional routing information in its header, namely the number of misroutes performed. Another related scheme is to assign a time-stamp or fixed priority to each message based on its age <ref> [Nga89] </ref>. This also requires a message to carry additional routing information in the header. Furthermore time-stamp fields are expensive to compare, since they must be large enough to prevent re-use problems. The fourth alternative is to use a prob abilistic scheme like the Chaos router [KS94].
Reference: [NS89] <author> J. Y. Ngai and C. L. Seitz. </author> <title> A framework for adaptive routing in multicomputer networks. </title> <booktitle> In Proc. of the Sym. of Parallel Alg. and Arch., </booktitle> <pages> pages 1-9, </pages> <year> 1989. </year>
Reference-contexts: This loss may be beneficial when the message is a hop or two away from its destination [Kon92], but not if it is far from its destination. The Chaos router has none of these non-uniformities, since it relies on the packet-exchange protocol for deadlock prevention <ref> [NS89] </ref>. The protocol has a simple requirement: if node a sends a message to node b, node a must also accept a message from node b. Next, packet Triplex was tested with Rule 5t completely omitted. Deroutes were still allowed by Rule 4.
Reference: [PV81] <author> F. Preparata and J. Vuillemin. </author> <title> The cube-connected cycles: a versatile network for parallel computation. </title> <journal> Communications of the ACM, </journal> <volume> 24(5) </volume> <pages> 300-309, </pages> <year> 1981. </year>
Reference-contexts: The complement is a particularly difficult permutation. Given an imaginary x and y axis though the center of a mesh or torus network, the complement destination is the composition of the x and y axis reflection of the source. Perfect shu*e communication occurs in ascend/descend algorithms <ref> [PV81] </ref> while the transpose and bit reversal are important because they occur in practical computations. 10 The network bisection is the minimum number of channels cut to divide the network in half. 10 The simulator is written in C and uses a batch means [Mu~n91] method for computing 95% confidence intervals
Reference: [SJ96] <author> L. Schwiebert and D.N. Jayasimha. </author> <title> A universal proof technique for deadlock-free routing in interconnection networks. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 32(1) </volume> <pages> 103-17, </pages> <year> 1996. </year>
Reference-contexts: A waiting buffer is a buffer a message can wait to acquire when all other buffers specified by the routing function cannot be selected. A routing algorithm is wait-connected if a message always has at least one waiting buffer <ref> [SJ96] </ref>. 3. The Triplex Algorithm Triplex is a non-minimal fully-adaptive deadlock-free packet-switched or wormhole routing algorithm for n-dimensional torus networks. Our algorithm is the first non-minimal fully adaptive, deadlock-free wormhole routing algorithm for n-dimensional tori using deadlock avoidance 5 . <p> There are several other algorithms that have been presented, but they do not easily generalize to the torus topology [DA93, DDH + 94]. Unlike the previously mentioned approaches, the framework of Schwiebert and Jayasimha <ref> [SJ96] </ref> does not require a connected network with static acyclic channel dependencies. This results in algorithms with fewer routing restrictions. The Triplex algorithm presented uses this approach. 6. Conclusions We have presented Triplex, a deadlock-free, non-minimal fully adaptive wormhole routing algorithm for tori.
Reference: [Smi81] <author> B.J. Smith. </author> <title> Architecture and applications of the HEP multiprocessor computer sytem. </title> <booktitle> In Proc. of SPIE, </booktitle> <pages> pages 241-248, </pages> <year> 1981. </year>
Reference-contexts: The second method allows each message a maximum number of deroutes after which the algorithm reverts to oblivious or some special type of routing, like an Euler path. Counting schemes are used by both [DA93] and <ref> [Smi81] </ref>. The former counts deroutes as dimension reversals, while the latter accumulates battle scars. Both of these algorithms require a message to carry and update additional routing information in its header, namely the number of misroutes performed.
Reference: [vEDCGS92] <author> T. von Eicken D.E. Culler, S.C. Goldstein, and K.E. Schauser. </author> <title> Active messages: a mechanism for integrated communication and computation. </title> <booktitle> In Proc. of the Intl. Sym. on Computer Arch., </booktitle> <pages> pages 256-266, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: Until recently, the large software overhead required to send a message through the network has overshadowed the need for low latency routing algorithms, the rules which specify a message path. As communication overhead declines <ref> [vEDCGS92, Dal90, BLA + 94, MBES94] </ref>, however, the routing algorithm becomes more important to communication performance. Research in reducing communication overhead has resulted in prototype communication systems with network time accounting for over 50% of the typical communication time, even when no contention occurs [CKP + 93].

References-found: 35

