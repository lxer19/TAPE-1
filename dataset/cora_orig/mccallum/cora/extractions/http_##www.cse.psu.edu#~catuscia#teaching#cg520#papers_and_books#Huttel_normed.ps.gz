URL: http://www.cse.psu.edu/~catuscia/teaching/cg520/papers_and_books/Huttel_normed.ps.gz
Refering-URL: http://www.cse.psu.edu/~catuscia/teaching/cg520/98Fall/assignments/Projects.html
Root-URL: http://www.cse.psu.edu
Email: hans@iesd.auc.dk  cps@dcs.ed.ac.uk  
Phone: 9220  
Title: Actions Speak Louder than Words: Proving Bisimilarity for Context-Free Processes  
Author: Hans Huttel Colin Stirling James Clerk Maxwell Building 
Date: June 1993  
Address: Fredrik Bajersvej 7E  DENMARK  Edinburgh EH9 3JZ SCOTLAND  
Affiliation: Department of Mathematics and Computer Science Aalborg University Centre  Aalborg O  Laboratory for Foundations of Computer Science  University of Edinburgh  
Abstract: Baeten, Bergstra, and Klop (and later Caucal) have proved the remarkable result that bisimulation equivalence is decidable for irredundant context-free grammars. In this paper we provide a much simpler and much more direct proof of this result using a tableau decision method involving goal-directed rules. The decision procedure also provides the essential part of the bisimulation relation between two processes which underlies their equivalence. We also show how to obtain a sound and complete sequent-based equational theory for such processes from the tableau system and how one can extract what Caucal calls a fundamental relation from a suc cessful tableau. fl An earlier, shorter version of this paper appeared at the 6th Annual Symposium on Logic in Computer Science (LICS 91), Amsterdam 1991. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J.C.M. Baeten, J.A. Bergstra, and J.W. Klop. </author> <title> Decidability of bisimulation equivalence for processes generating context-free languages. </title> <booktitle> In LNCS 259, </booktitle> <pages> pages 93-114. </pages> <publisher> Springer-Verlag, </publisher> <year> 1987. </year>
Reference-contexts: ` T n we have Xff ! R fl Y fi where R = R n . 6 Conclusions and perspectives In this paper we have given an alternative and much simpler proof of the de-cidability of bisimulation equivalence for normed BPA processes, first proved by Baeten, Bergstra and Klop <ref> [1, 2] </ref> and later by Caucal [6, 7]. Our decidability proof uses a tableau system closely related to the branching algorithms employed in the study of equivalence problems in language theory [22, 13].
Reference: [2] <author> J.C.M. Baeten, J.A. Bergstra, and J.W. Klop. </author> <title> Decidability of bisimula-tion equivalence for processes generating context-free languages. </title> <type> Technical 25 Report CS-R8632, </type> <institution> CWI, </institution> <month> September </month> <year> 1987. </year>
Reference-contexts: ` T n we have Xff ! R fl Y fi where R = R n . 6 Conclusions and perspectives In this paper we have given an alternative and much simpler proof of the de-cidability of bisimulation equivalence for normed BPA processes, first proved by Baeten, Bergstra and Klop <ref> [1, 2] </ref> and later by Caucal [6, 7]. Our decidability proof uses a tableau system closely related to the branching algorithms employed in the study of equivalence problems in language theory [22, 13].
Reference: [3] <author> J.A. Bergstra and J.W. Klop. </author> <title> Process algebra for synchronous communication. </title> <journal> Information and Control, </journal> <volume> 60 </volume> <pages> 109-137, </pages> <year> 1984. </year>
Reference: [4] <author> J.A. Bergstra and J.W. Klop. </author> <title> Process theory based on bisimulation semantics. </title> <editor> In J.W. de Bakker, W.P de Roever, and G. Rozenberg, editors, </editor> <volume> LNCS 354, </volume> <pages> pages 50-122. </pages> <publisher> Springer-Verlag, </publisher> <year> 1988. </year>
Reference-contexts: However, even when a slight extensions of BPP is considered, namely that of restriction, bisimilarity also becomes undecidable [9]. An interesting question is what happens if instead BPP and BPA are combined. The resulting calculus is similar to the PA calculus considered in e.g. <ref> [4] </ref>. In Section 2.3 we noted the correspondence between BPA and context-free grammars. There is a well-known and fundamental correspondence between context-free grammars and pushdown automata as regards language definability but this breaks down when one considers the transition graphs under the notion of bisimulation equivalence.
Reference: [5] <author> J. Bradfield and C. Stirling. </author> <title> Verifying temporal properties of processes. </title> <booktitle> In LNCS 458, </booktitle> <pages> pages 115-125. </pages> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference: [6] <author> D. </author> <month> Caucal. </month> <institution> Graphes canoniques de graphes algebriques. Rapport de Recherche 872, INRIA, </institution> <month> Juillet </month> <year> 1988. </year>
Reference-contexts: ! R fl Y fi where R = R n . 6 Conclusions and perspectives In this paper we have given an alternative and much simpler proof of the de-cidability of bisimulation equivalence for normed BPA processes, first proved by Baeten, Bergstra and Klop [1, 2] and later by Caucal <ref> [6, 7] </ref>. Our decidability proof uses a tableau system closely related to the branching algorithms employed in the study of equivalence problems in language theory [22, 13]. <p> If a successful tableau for an equation ff = fi exists, the tableau provides us with a finite witness for a bisimulation containing (ff; fi), a self-bisimulation in the sense of <ref> [6, 7] </ref>. The tableau method allows us to extract a sound and complete sequent-based equational theory for bisimilarity over normed BPA processes in 3-GNF.
Reference: [7] <author> D. </author> <title> Caucal. </title> <journal> Graphes canoniques de graphes algebriques. Informatique theorique et Applications (RAIRO), </journal> <volume> 24(4) </volume> <pages> 339-352, </pages> <year> 1990. </year>
Reference-contexts: Since Basic T (Xff = Y fi) = ;, the result follows. 2 5 Extracting fundamental relations In Section 3 we have seen that the tableau system presented generates a self-bisimulation in case of successful termination. In this section we show another relationship with the work of Caucal <ref> [7] </ref> in that we give an auxiliary tableau system for extracting a fundamental relation R from a successful tableau for Xff = Y fi with the property that Xff ! R Definition 14 [7] A relation R V ar + fi V ar + is called fundamental iff 1. <p> In this section we show another relationship with the work of Caucal <ref> [7] </ref> in that we give an auxiliary tableau system for extracting a fundamental relation R from a successful tableau for Xff = Y fi with the property that Xff ! R Definition 14 [7] A relation R V ar + fi V ar + is called fundamental iff 1. Dom (R) V ar , Im (R) (V ar n Dom (R)) 2. <p> ! R fl Y fi where R = R n . 6 Conclusions and perspectives In this paper we have given an alternative and much simpler proof of the de-cidability of bisimulation equivalence for normed BPA processes, first proved by Baeten, Bergstra and Klop [1, 2] and later by Caucal <ref> [6, 7] </ref>. Our decidability proof uses a tableau system closely related to the branching algorithms employed in the study of equivalence problems in language theory [22, 13]. <p> If a successful tableau for an equation ff = fi exists, the tableau provides us with a finite witness for a bisimulation containing (ff; fi), a self-bisimulation in the sense of <ref> [6, 7] </ref>. The tableau method allows us to extract a sound and complete sequent-based equational theory for bisimilarity over normed BPA processes in 3-GNF. <p> The tableau method allows us to extract a sound and complete sequent-based equational theory for bisimilarity over normed BPA processes in 3-GNF. Finally, we have shown how to extract a fundamental relation R (as in the work of <ref> [7] </ref>) from a successful tableau for ff = fi such that ff ! R The present paper only considers the normed case. Does the tableau method extend to the full BPA calculus? In [12], it is shown that bisimulation equivalence is indeed decidable for all of BPA.
Reference: [8] <author> D. Caucal and R. Monfort. </author> <title> On the transition graphs of automata and grammars. </title> <type> Technical report, </type> <institution> IRISA, </institution> <year> 1990. </year>
Reference-contexts: In Section 2.3 we noted the correspondence between BPA and context-free grammars. There is a well-known and fundamental correspondence between context-free grammars and pushdown automata as regards language definability but this breaks down when one considers the transition graphs under the notion of bisimulation equivalence. In <ref> [8] </ref>, Caucal and Monfort show that pushdown automata are more expressive than BPA in the sense that there exist pushdown automata whose transition graphs are not bisimilar to any BPA transition graph.
Reference: [9] <author> S. Christensen. </author> <title> Decidability and Decomposition in Process Algebras. </title> <type> PhD thesis, </type> <institution> University of Edinburgh, </institution> <year> 1993. </year>
Reference-contexts: Recent results indicate [17] that all other known equivalences are undecidable for BPP; bisimulation equivalence seems to have a very special status as far as decidability is concerned. However, even when a slight extensions of BPP is considered, namely that of restriction, bisimilarity also becomes undecidable <ref> [9] </ref>. An interesting question is what happens if instead BPP and BPA are combined. The resulting calculus is similar to the PA calculus considered in e.g. [4]. In Section 2.3 we noted the correspondence between BPA and context-free grammars.
Reference: [10] <author> S. Christensen, Y. Hirshfeld, and F. Moller. </author> <title> Bisimulation is decidable for all basic parallel processes. </title> <booktitle> In Proceedings of CONCUR `93. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: It would be interesting to see whether going to the full BPA will lead to any modifications of the complexity bound. Recently, attention has been focused on the process calculus BPP where a non-communicating parallel (full merge) operator takes the place of sequencing. Christensen, Hirshfeld and Moller have proved <ref> [11, 10] </ref> that bisimulation equivalence by using a tableau technique similar to the one in this paper. Again, a by-product of the decision procedure is a sound and complete sequent-style equational theory for bisimilarity.
Reference: [11] <author> S. Christensen, Y. Hirshfeld, and F. Moller. </author> <title> Decomposability, decidability and axiomatisability for bisimulation equivalence on basic parallel processes. </title> <booktitle> In Proceedings of LICS `93. </booktitle> <publisher> IEEE, Computer Society Press, </publisher> <month> June </month> <year> 1993. </year>
Reference-contexts: It would be interesting to see whether going to the full BPA will lead to any modifications of the complexity bound. Recently, attention has been focused on the process calculus BPP where a non-communicating parallel (full merge) operator takes the place of sequencing. Christensen, Hirshfeld and Moller have proved <ref> [11, 10] </ref> that bisimulation equivalence by using a tableau technique similar to the one in this paper. Again, a by-product of the decision procedure is a sound and complete sequent-style equational theory for bisimilarity.
Reference: [12] <author> S. Christensen, H. Huttel, and C. Stirling. </author> <title> Bisimulation equivalence is decidable for all context-free processes. </title> <editor> In W.R. Cleaveland, editor, </editor> <booktitle> Proceedings of CONCUR `92, </booktitle> <volume> LNCS 630, </volume> <pages> pages 138-147. </pages> <publisher> Springer-Verlag, </publisher> <month> August </month> <year> 1992. </year>
Reference-contexts: Finally, we have shown how to extract a fundamental relation R (as in the work of [7]) from a successful tableau for ff = fi such that ff ! R The present paper only considers the normed case. Does the tableau method extend to the full BPA calculus? In <ref> [12] </ref>, it is shown that bisimulation equivalence is indeed decidable for all of BPA.
Reference: [13] <author> B. Courcelle. </author> <title> An axiomatic approach to the Korenjak-Hopcroft algorithms. </title> <journal> Mathematical Systems Theory, </journal> <volume> 16 </volume> <pages> 191-231, </pages> <year> 1983. </year>
Reference-contexts: Our decidability proof uses a tableau system closely related to the branching algorithms employed in the study of equivalence problems in language theory <ref> [22, 13] </ref>. If a successful tableau for an equation ff = fi exists, the tableau provides us with a finite witness for a bisimulation containing (ff; fi), a self-bisimulation in the sense of [6, 7].
Reference: [14] <author> J.F. Groote. </author> <title> A short proof of the decidability of bisimulationf or normed bpa-processes. </title> <type> Technical report, </type> <institution> CWI, </institution> <year> 1991. </year>
Reference: [15] <author> J.F. Groote and Huttel. </author> <title> Undecidable equivalences for basic process algebra. </title> <type> Technical Report ECS-LFCS-91-169, </type> <institution> Department of Computer Science, University of Edinburgh, </institution> <month> August </month> <year> 1991. </year>
Reference: [16] <author> J.F. Groote and H. Huttel. </author> <title> Undecidable equivalences for basic process algebra. </title> <journal> Information and Computation, </journal> <note> 1993. to appear. 26 </note>
Reference-contexts: Weak versions of behavioural equivalences arise when unobservable actions are considered. As the strong behavioural equivalences are special cases of their weak counterparts, it is clear by the results of <ref> [16] </ref> that all weak equivalences other than bisimilarity are undecidable for normed BPA with unobservable actions. There exist a number of weak versions of bisimilarity.
Reference: [17] <author> Y. Hirshfeld. </author> <title> Finitely generated processes, petri nets and the equivalence problem. Unpublished note, </title> <month> May </month> <year> 1993. </year>
Reference-contexts: Christensen, Hirshfeld and Moller have proved [11, 10] that bisimulation equivalence by using a tableau technique similar to the one in this paper. Again, a by-product of the decision procedure is a sound and complete sequent-style equational theory for bisimilarity. Recent results indicate <ref> [17] </ref> that all other known equivalences are undecidable for BPP; bisimulation equivalence seems to have a very special status as far as decidability is concerned. However, even when a slight extensions of BPP is considered, namely that of restriction, bisimilarity also becomes undecidable [9].
Reference: [18] <author> J. Hopcroft and J.D. Ullman. </author> <title> Introduction to Automata Theory, Languages, and Computation. </title> <publisher> Addison-Wesley, </publisher> <year> 1979. </year>
Reference: [19] <author> H. Huttel. </author> <title> Silence is golden: Branching bisimilarity is decidable for context-free processes. </title> <booktitle> In Proceedings of CAV91. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1991. </year> <note> To appear. The full version is available as Report ECS-LFCS-91-173, </note> <institution> Department of Computer Science, University of Edinburgh. </institution>
Reference-contexts: As the strong behavioural equivalences are special cases of their weak counterparts, it is clear by the results of [16] that all weak equivalences other than bisimilarity are undecidable for normed BPA with unobservable actions. There exist a number of weak versions of bisimilarity. In <ref> [19] </ref> it was shown by means of a tableau decision procedure that van Glabbeek's branching bisimulation equivalence [27] is decidable for normed BPA processes that cannot terminate silently.
Reference: [20] <author> Dung T. Huynh and Lu Tian. </author> <title> On deciding readiness and failure equivalences for processes. </title> <type> Technical Report UTDCS-31-90, </type> <institution> University of Texas at Dallas, </institution> <month> September </month> <year> 1990. </year>
Reference: [21] <author> Dung T. Huynh and Lu Tian. </author> <title> Deciding bisimilarity of normed context-free processes is in oe p 2 . Technical Report UTDCS-1-92, </title> <institution> University of Texas at Dallas, </institution> <month> January </month> <year> 1992. </year> <note> To appear in Theoretical Computer Science. </note>
Reference-contexts: The method does not yield an equational theory, nor does it give us any clues as to the complexity of the bisimulation problem. A complexity analysis in given in <ref> [21] </ref> by Huynh and Tian who show that the complexity of the bisimilarity problem for normed BPA is in p 2 in the polynomial 24 time hierarchy. It would be interesting to see whether going to the full BPA will lead to any modifications of the complexity bound.
Reference: [22] <author> A.J. Korenjak and J.E. Hopcroft. </author> <title> Simple deterministic languages. </title> <booktitle> In Proceedings of Seventh Annual IEEE Symposium on Switching and Automata Theory, </booktitle> <pages> pages 36-46, </pages> <year> 1966. </year>
Reference-contexts: Our decidability proof uses a tableau system closely related to the branching algorithms employed in the study of equivalence problems in language theory <ref> [22, 13] </ref>. If a successful tableau for an equation ff = fi exists, the tableau provides us with a finite witness for a bisimulation containing (ff; fi), a self-bisimulation in the sense of [6, 7].
Reference: [23] <author> R. Milner. </author> <title> A complete inference system for a class of regular behaviours. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 28 </volume> <pages> 439-466, </pages> <year> 1984. </year>
Reference: [24] <author> R. Milner. </author> <title> Communication and Concurrency. </title> <booktitle> Prentice-Hall International, </booktitle> <year> 1989. </year>
Reference-contexts: family of binary relations f n g ! n=0 over P r inductively as follows. * p 0 q for all p; q 2 P r, if p ! p 0 then 9q 0 with q a if q ! q 0 then 9p 0 with p a Theorem 4 <ref> [24] </ref> For any image-finite transition graph we have = n=0 15 Equivalence R1 ` E = E ` E = F R3 ` E = G Congruence R4 ` E 1 + E 2 = F 1 + F 2 ` E 1 = F 1 ` E 2 = F
Reference: [25] <author> D.M.R. Park. </author> <title> Concurrency and automata on infinite sequences. </title> <editor> In P. Deussen, editor, </editor> <booktitle> Proceedings of 5th GI Conference LNCS 104, </booktitle> <pages> pages 167-183. </pages> <publisher> Springer-Verlag, </publisher> <year> 1981. </year>
Reference: [26] <author> C. Stirling and D. Walker. </author> <title> Local model checking in the modal mu-calculus. </title> <booktitle> In LNCS 351, </booktitle> <pages> pages 369-383. </pages> <publisher> Springer-Verlag, </publisher> <year> 1989. </year>

References-found: 26

