URL: ftp://ftp.cs.washington.edu/tr/1994/05/UW-CSE-94-05-07.PS.Z
Refering-URL: http://www.cs.washington.edu/research/tr/tr-by-title.html
Root-URL: 
Email: pinch@cs.washington.edu  
Title: A Self-Accelerating Packet Service Discipline for Low-Delay Service to Bursty Flows  
Author: Ricardo Pincheira 
Note: 31  
Date: 94-05-07  January 1994  
Address: Seattle, WA 98195  
Affiliation: Department of Computer Science, FR-35 University of Washington  
Pubnum: Technical Report  
Abstract: In this paper, we consider the transmission of compressed video over networks. We dev elop a packet service discipline called Axel that provides very low service delays to bursty ows while providing guaranteed throughput to all ows in the system. In contrast to existing policies capable of providing bandwidth guarantees, Axel can provide low delay service to bursty ows without the need for resource over-reservation. We study the behavior of Axel through analysis and simulation, and conclude that Axel meets its stated goals. The policy is targeted at a network environment composed of a mixture of bursty, delay sensitive traffic and smoother, delay insensitive traffic. We expect such an environment to arise from a mixture of interactive, compressed video streams (eg., tele-conferencing) and non-interactive compressed video streams (eg., video-on-demand). 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> David P. Anderson, Shin-Yuan Tzou, Robert Wahbe, Ramesh Govindan, and Martin Andrews, </author> <title> Support for Continuous Media in the DASH System, </title> <booktitle> Proceedings 10th International Conference on Distributed Computing Systems, </booktitle> <pages> pp. 54-61, </pages> <address> Paris, France (May 28 - June 1 1990). </address>
Reference-contexts: The first class arises from teleconferencing or other simultaneous tele-interactions. In an interactive conference, for example, maximum tolerable end-to-end delays are measured in the 100-200 millisecond range, and one can easily envision future methods of tele-interaction, such as distributed music rehearsal <ref> [1] </ref>, in which end-to-end delay requirements are even more stringent. The second class arises from services such as video-on-demand. An end-to-end delay of several seconds is acceptable when watching a previously-recorded video clip or in a live but noninteractive application.
Reference: 2. <author> David D. Clark, Scott Shenker, and Lixia Zhang, </author> <title> Supporting Real-Time Applications in an Integrated Services Packet Network: Architecture and Mechanism, </title> <journal> Proceedings ACM SIGCOMM'92 in ACM Computer Communications Review, </journal> <volume> 22, 4, </volume> <pages> pp. </pages> <month> 14-26 (October </month> <year> 1992). </year>
Reference-contexts: It services packets according to a discipline that models the behavior of bursts. <ref> [2] </ref> discusses the relative merits of enforcing total isolation between ows vs. allowing statistical sharing when trying to provide bursty ows with low delay jitter (variability). <p> Pulse also differs from Virtual Clock in that the vclock is not resynchronized with RealTime if it lags behind. That is, unlike Virtual Clock, the Pulse timestamping rule does not include the step vclock = max (vclock, RealTime). 2.3.3. Fifo+ Fifo+ <ref> [2] </ref> is a modification of ordinary Fifo. Fifo can be implemented as a timestamp-based service discipline by using a packet's actual arrival time at the server as its timestamp.
Reference: 3. <author> Rene L. Cruz, </author> <title> A Calculus for Network Delay Part I: Network Elements in Isolation, </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> 37, 1, </volume> <pages> pp. </pages> <month> 114-131 (January </month> <year> 1991). </year> <month> 31 January </month> <year> 1994 </year> <month> -19- </month>
Reference: 4. <author> Alan Demers, Srinivasan Keshav, and Scott Shenker, </author> <title> Analysis and Simulation of a Fair Queueing Algorithm, </title> <booktitle> Proceedings ACM SIGCOMM '89, </booktitle> <pages> pp. </pages> <month> 1-12 (September </month> <year> 1989). </year>
Reference: 5. <author> D. Ferrari, </author> <title> Client Requirements for Real-Time Communication Services, </title> <journal> IEEE Communications Magazine, </journal> <volume> 28, 11, </volume> <pages> pp. </pages> <month> 65-72 (November </month> <year> 1990). </year>
Reference-contexts: An important prerequisite for continuous media ows is guaranteed bandwidth; in 30 frames-per-second video, for example, a new frame must be available for consumption at the receiver every 33 milliseconds (see also <ref> [5 ] </ref> ). Several service disciplines able to provide guaranteed bandwidth have been proposed in recent years [14,10,4,13]. Unfortunately, these policies are able to guarantee bandwidth by decoupling, to a large extent, the service that they giv e to a ow from the ow's arrival behavior.
Reference: 6. <author> Srinivasan Keshav, </author> <title> Congestion Control in Computer Networks, </title> <type> Technical Report No. </type> <institution> UCB/CSD 91/649, Computer Science Division, University of California, Berkeley, CA (1991). </institution> <type> PhD Thesis </type> .. 
Reference-contexts: On the other hand, the most significant source of complexity in timestamp-based policies appears to be the need for some sort of priority queue. In this sense, Axel falls in roughly the same complexity class as Virtual Clock, which appears to be a practical packet service discipline <ref> [6] </ref>. 6. Conclusions This paper has presented the Axel packet service policy, which is targeted at environments composed of two classes of ows: very bursty, delay intolerant ows, and very smooth, delay-tolerant ows.
Reference: 7. <author> Will E. Leland, Murad S. Taqqu, Walter Willinger, and Daniel V. Wilson, </author> <title> On the Self-Similar Nature of Ethernet Traffic, </title> <journal> Proceedings SIGCOMM'93 in ACM Computer Communication Review, </journal> <volume> 23, 4, </volume> <pages> pp. </pages> <month> 183-193 (October </month> <year> 1993). </year>
Reference-contexts: Following an active period, the source remained quiescent for an exponentially-distributed time interval before becoming active again. Though the limitations of Poisson and Poisson-related packet sources for driving network simula tions, and particularly for modeling cross traffic, are well-known <ref> [7] </ref> , we believe our results are valid, in that they highlight the significant performance differences between Axel and other policies. We simulated two principal cases: a large-W case, in which the advertised W i 's of the ows were quite large, and a small-W case.
Reference: 8. <author> Amarnath Mukherjee, Lawrence H. Landweber, and Theordore Faber, </author> <title> Dynamic Time Windows and Generalized Virtual Clock: Combined Closed-Loop/Open-Loop Congestion Control, </title> <booktitle> Proceedings IEEE Infocom, </booktitle> <pages> pp. 0322-0332, </pages> <address> Florence, Italy (1992). </address>
Reference-contexts: We also require that self-accelerating policies provide bandwidth guarantees to all ows in the system and prevent any one ow from arbitrarily increasing its rate of service. The idea of increasing a ow's rate of service so as to clear a burst of data more quickly is not new. <ref> [8] </ref> (reviewed in section 2.3.2) describes a policy called Pulse that tries to alleviate congestion quickly. <p> The input burstiness of the ow at a particular server k is W i k , while its output burstiness is W i Tw o of the policies we will discuss here, Virtual Clock (section 2.3.1 [14] ) and Pulse (section 2.3.2 <ref> [8] </ref> ), use a parameter AI i instead of W i to describe the burstiness of a ow. <p> Whenever a bursty ow generates a burst, its vclock advances rapidly and the ow loses priority to smoother ows. For this reason, Virtual Clock does not work well in an environment composed of delay-intolerant, bursty A ows and delay-tolerant, smooth D ows. 2.3.2. Pulse The Pulse policy <ref> [8] </ref> aims to minimize congestion by attempting to clear bursts quickly. Pulse gener alizes Virtual Clock by using two values for the timestamp increment, vtick i large 1/r i and vtick small 1/r i The vclock is incremented using vtick i small until a certain number of bits are received.
Reference: 9. <author> Pramod Pancha and Magda El Zarki, </author> <title> A look at the MPEG video coding standard for variable bit rate video transmission, </title> <booktitle> Proceedings IEEE Infocom, </booktitle> <pages> pp. 0085-0094, </pages> <address> Florence, Italy (1992). </address>
Reference-contexts: Due to the interaction of delay requirements with variable bit-rate (VBR) compression, the burstiness characteristics for these two classes of ows also differs. It is well known that applying variable bit-rate (VBR) compression to video yields a very bursty stream of data (eg, <ref> [9] </ref> ). Though a bursty ow can be smoothed before it enters the network, smoothing results in additional delay. These delays are not significant for ows with loose end-to-end delay requirements.
Reference: 10. <author> A. Parekh, </author> <title> A Generalized Processor Sharing Approach to Flow Control in Integrated Systems Services Networks, </title> <type> Technical Report LIDS-TR-2089, </type> <institution> Laboratory for Information and Decision Systems, Massachusetts Institute of Technology (1992). </institution> <type> PhD Thesis. </type>
Reference-contexts: A packet that has received higher than average delay in traversing upstream servers receives a smaller timestamp than it would under Fifo, while one that has received lower than average delay is assigned a larger timestamp. 2 As <ref> [10] </ref> points out, however, Virtual Clock is vulnerable to a punishment phenomenom and does not guarantee each packet of ow i a service rate r i . <p> D i b will be positive, and the vtick will be reduced, speeding up its rate of service. 3 The fact that the timestamp of the bit being served can surge ahead of RealTime is precisely why Virtual Clock is vulnerable to the punishment phenomenon mentioned earlier. See <ref> [10] </ref>. 4 This rule will be modified slightly below. 31 January 1994 -8- No ow can increase its rate of service arbitrarily. Once a ow's backlog reaches W i , its timestamp increment reverts to that of the baseline vtick, or 1 .
Reference: 11. <author> Jonathan S. Turner, </author> <title> New Directions in Communications (or Which Way to the Information Age), </title> <journal> IEEE Communications Magazine, </journal> <volume> 24, 10, </volume> <pages> pp. </pages> <month> 8-15 (Oct </month> <year> 1986). </year>
Reference-contexts: Then W i bounds ow i's queue length at the ideal server. A ow with an average rate r i can be forced to abide to a given (W i i i ) parameterization with a leaky-bucket filter <ref> [11] </ref>. Because of the dual interpretation for W i , we will sometimes call W i the maximum workahead of the ow (when viewed from the standpoint of data generation) or the the maximum backlog of the ow (when viewed from the standpoint of an ideal server).
Reference: 12. <author> D. Verma, H. Zhang, and D. Ferrari, </author> <title> Guaranteeing Delay Jitter Bounds in Packet Switching Networks, </title> <booktitle> Proceedings IEEE TriComm, </booktitle> <address> Chapel Hill, NC (April 1991). </address>
Reference-contexts: It seems worthwhile to consider using additional information. One approach that we are currently investigating is to use information about a packet's actual measured service delays, in the style of Fifo+ or Jitter-EDD <ref> [12] </ref>. In accelerating a packet, Axel uses the value of D b . This is the expected smoothing factor at a particular server. One could also use information about the 31 January 1994 -18- actual smoothing that has occurred in upstream nodes.
Reference: 13. <author> Hui Zhang and Srinivasan Keshav, </author> <title> Comparison of Rate-Based Service Disciplines, </title> <booktitle> Proceedings SIGCOMM'91, </booktitle> <pages> pp. 113-121. </pages>
Reference: 14. <author> Lixia Zhang, VirtualClock: </author> <title> A New Traffic Control Algorithm for Packet-Switched Networks, </title> <journal> ACM Tr ansactions on Computer Systems, </journal> <volume> 9, 2, </volume> <pages> pp. </pages> <month> 101-124 (May </month> <year> 1991). </year> <month> 31 January </month> <year> 1994 </year>
Reference-contexts: W i is then W i 0 . The input burstiness of the ow at a particular server k is W i k , while its output burstiness is W i Tw o of the policies we will discuss here, Virtual Clock (section 2.3.1 <ref> [14] </ref> ) and Pulse (section 2.3.2 [8] ), use a parameter AI i instead of W i to describe the burstiness of a ow. <p> Related Work 2.3.1. Virtual Clock The Axel packet service policy dev eloped in section 3 uses many of the ideas of Virtual Clock <ref> [14] </ref>. Virtual Clock belongs to the class of timestamp-based service disciplines. These operate by assigning a timestamp to the packets of each ow traversing the server and servicing the packets in timestamp order. <p> These operate by assigning a timestamp to the packets of each ow traversing the server and servicing the packets in timestamp order. In Virtual Clock, the timestamp for ow i is generated using the following rule. vclock i (called auxVC i in <ref> [14] </ref> ) is a state variable that tracks the evolution of the timestamp; vtick i is a constant set to 1/r i the tick size at which vclock i ticks; and RealTime stands for wall-clock time at the packet server.
References-found: 14

