URL: http://www.cs.wustl.edu/cs/techreports/1997/wucs-97-22.ps.Z
Refering-URL: http://www.cs.wustl.edu/cs/cs/publications.html
Root-URL: 
Title: An Algorithm for Message Delivery in a Micromobility Environment  
Author: Amy L. Murphy Gruia-Catalin Roman George Varghese 
Date: 28 April 1997  
Address: IN ST LOUIS  Saint Louis, MO 63130-4899 One Brookings Drive Campus Box 1045  
Affiliation: WASHINGTON UNIVERSITY  Washington School of Engineering Applied Science  Washington University Department of Computer Science  
Pubnum: WUCS-97-22  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> A. Acharya and B. R. Badrinath, </author> <title> Delivering Multicast Messages in Networks with Mobile Hosts, </title> <booktitle> 13th International Conference on Distributed Computing Systems, </booktitle> <address> New York, </address> <pages> pp. </pages> , <year> 1993. </year>
Reference-contexts: This approach works for macromobility, however our focus is micromobility. Work by Acharya and Badrinath <ref> [1] </ref> describes an algorithm for reliable multicast which takes a centralized control approach, keeps messages alive at all mobile support centers until termination, and requires the sender to know all the recipients of the multicast. <p> Multicast: As stated previously, another concern in the mobility community is multicast. While Mobile IP addresses the issues of macromobility, and some work has been done on reliable multicast for micromobility <ref> [1] </ref>, our algorithm easily extends to perform multicast to all mobile units in the system during the execution of the snapshot. Without changing the snapshot algorithm, it can be shown that delivery of a message is attempted to all mobile units in the system before the algorithm terminates.
Reference: [2] <author> B. R. Badrinath, A. Acharya, and T. Imielinski, </author> <title> Structuring Distributed Algorithms for Mobile Hosts, </title> <booktitle> Proceedings of the 14th Intl. Conf. on Distributed Computing Systems, Poznan, Poland, </booktitle> <pages> pp. 21-8, </pages> <year> 1994. </year>
Reference-contexts: Involvement level of MSCs: In every snapshot, every MSC must be involved to guarantee delivery and termination. In a paper on running distributed computations in a mobile setting <ref> [2] </ref>, the authors warn against required involvement of all mobile nodes in a computation, especially due to the voluntary disconnection often associated with mobile computing. Such disconnection is often done to conserve power, or in some cases, to allow disconnected operation.
Reference: [3] <author> K. M. Chandy and L. Lamport, </author> <title> Distributed Snapshots: Determining Global States of Distributed Systems, </title> <journal> ACM Transactions on Computing Systems, </journal> <volume> vol. 3, no. 1, </volume> <pages> pp. 63-75, </pages> <year> 1985. </year>
Reference-contexts: Our solution is based on the classical notion of a snapshot from distributed computing, in particular, our algorithm is based on the original Chandy-Lamport snapshot algorithm <ref> [3] </ref>. Before moving on to our solution to message delivery, we must digress into some of the details of the general snapshot algorithm. A snapshot algorithm is typically executed over a graph consisting of processors and communication channels connecting these processors.
Reference: [4] <author> K. M. Chandy and J. Misra, </author> <title> Parallel Program Design: A Foundation. </title> <publisher> Addison-Wesley, </publisher> <year> 1988. </year>
Reference-contexts: In this manner, as the local snapshots complete, the message copies are removed from the MSCs, meeting the requirement that no copies remain in the system. We capture the essence of our solution in the form of a UNITY program shown in Figure 2. UNITY <ref> [4] </ref> provides a state transition model for concurrent programming in which progress and safety properties can be cleanly defined and proven from the program text. We utilize the UNITY proof logic in the next section where we formally verify the correctness of the algorithm.
Reference: [5] <author> S. E. Deering and D. R. Cheriton, </author> <title> Multicast Routing in Datagram Internetworks and Extended LANs, </title> <journal> ACM Trans. on Computer Systems, </journal> <volume> vol. 8, no. 2, </volume> <pages> pp. 85-110, </pages> <year> 1990. </year> <month> 13 </month>
Reference-contexts: Although this description is concise, the importance of it should not be lost in its simplicity. Our modified snapshot algorithm has worst-case overhead of one message per link in each direction to multicast. By contrast, the algorithm used in IP DVMRP <ref> [5] </ref> effectively computes a tree. Its overhead is the number of links in the tree plus the number of links that have endnodes that participate in this multicast. 6.
Reference: [6] <author> D. B. Johnson and D. A. Maltz, </author> <title> Truly seamless wireless and mobile host networking. Protocols for adaptive wireless and mobile networking, </title> <journal> IEEE Personal Communications, </journal> <volume> vol. 3, no. 1, </volume> <pages> pp. 34-42, </pages> <year> 1996. </year>
Reference-contexts: The first mechanism has been suggested for ad hoc mobility <ref> [6] </ref> where there is no infrastructure to route packets along. This approach takes advantage of the natural broadcasting nature of mobile communication such as radio to execute a broadcasting protocol to any neighboring mobile units within range.
Reference: [7] <author> J. J. Kistler and M. Satyanarayanan, </author> <title> Disconnected Operation in the Coda File System, </title> <journal> ACM Trans. Computer Systems, </journal> <volume> vol. 10, no. 1, </volume> <pages> pp. 3-25, </pages> <year> 1992. </year>
Reference-contexts: Otherwise, the telephone conversation will be lost. Both disconnected operation and connected operation are goals for systems with mobile components. In disconnected operation <ref> [7] </ref>, rules must be devised for handling disconnection, allowing changes while disconnected, and reintegration of changes upon reattachment. For connected operation [12], [8], [9], there must be a mechanism to get messages to the mobile components while they are connected.
Reference: [8] <author> P. Krishna, M. Chatterjee, N. H. Vaidya, and D. K. Pradhan, </author> <title> A cluster-based approach for routing in ad hoc networks, </title> <booktitle> USENIX Symposium on Mobile and Location-Independent Computing, </booktitle> <pages> pp. 136-146, </pages> <year> 1995. </year>
Reference-contexts: Otherwise, the telephone conversation will be lost. Both disconnected operation and connected operation are goals for systems with mobile components. In disconnected operation [7], rules must be devised for handling disconnection, allowing changes while disconnected, and reintegration of changes upon reattachment. For connected operation [12], <ref> [8] </ref>, [9], there must be a mechanism to get messages to the mobile components while they are connected. There are two main approaches to solving this problem: tracking and search.
Reference: [9] <author> S. Kryukova, B. Massingill, and B. Sanders, </author> <title> Specification and Proof of an Algorithm for Location Management for Mobile Communication Devices, </title> <booktitle> International Workshop on Formal Methods for Parallel Programming: Theory and Applications, Geneva, </booktitle> <pages> pp. </pages> , <year> 1997. </year>
Reference-contexts: Otherwise, the telephone conversation will be lost. Both disconnected operation and connected operation are goals for systems with mobile components. In disconnected operation [7], rules must be devised for handling disconnection, allowing changes while disconnected, and reintegration of changes upon reattachment. For connected operation [12], [8], <ref> [9] </ref>, there must be a mechanism to get messages to the mobile components while they are connected. There are two main approaches to solving this problem: tracking and search. In tracking, the location of the mobile unit is known at all times, and therefore a route to the unit exists.
Reference: [10] <author> J. Moy, </author> <note> OSPF Version 2, </note> <institution> Internet Engineering Task Force, </institution> <note> Internet draft March 1994 1994. </note>
Reference-contexts: The probability of error on such links may be small but packets are indeed dropped. A possible solution is to add acks for multicast messages as is done, for example, in the intelligent flooding algorithm used in Links State Routing in OSI [13] and OSPF <ref> [10] </ref>. Another solution is to only provide best-effort service. Since lost messages can lead to deadlock we need to delete messages after a timeout even if it is still expected along a channel. Involvement level of MSCs: In every snapshot, every MSC must be involved to guarantee delivery and termination.
Reference: [11] <author> A. Myles and D. Skellern, </author> <title> Comparing Four IP Based Mobile Host Protocols, </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> vol. 26, no. </volume> , <pages> pp. 349-355, </pages> <year> 1993. </year>
Reference-contexts: Mobile IP is well accepted among the proponents of the Internet partially due to its incremental deployment, other approaches propose changing the routers to adapt to the movement of the mobile units and effectively intercept packets en route to the home agent and direct them toward the mobile unit itself <ref> [11] </ref>. Because these approaches involve fundamental changes to the routers, this is more popular as a solution within corporations developing the technology. 1 The work of the first two authors is supported in part by the National Science Foundation under Grant No. CCR-9217751.
Reference: [12] <author> C. Perkins, </author> <title> IP Mobility Support, IETF Network Working Group, </title> <type> Technical Report RFC 2002, </type> <month> October </month> <year> 1996. </year>
Reference-contexts: Otherwise, the telephone conversation will be lost. Both disconnected operation and connected operation are goals for systems with mobile components. In disconnected operation [7], rules must be devised for handling disconnection, allowing changes while disconnected, and reintegration of changes upon reattachment. For connected operation <ref> [12] </ref>, [8], [9], there must be a mechanism to get messages to the mobile components while they are connected. There are two main approaches to solving this problem: tracking and search.
Reference: [13] <author> H. Zimmerman, </author> <title> OSI Reference Model - The ISO Model of Architecture for Open Systems Interconnection, </title> <journal> IEEE Transactions on Communication, </journal> <volume> vol. 28, no. </volume> , <pages> pp. 425-432, </pages> <year> 1980. </year>
Reference-contexts: The probability of error on such links may be small but packets are indeed dropped. A possible solution is to add acks for multicast messages as is done, for example, in the intelligent flooding algorithm used in Links State Routing in OSI <ref> [13] </ref> and OSPF [10]. Another solution is to only provide best-effort service. Since lost messages can lead to deadlock we need to delete messages after a timeout even if it is still expected along a channel.
References-found: 13

