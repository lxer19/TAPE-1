URL: http://www.eecs.umich.edu/~wallace/academic/spheres_atma.ps.gz
Refering-URL: http://www.eecs.umich.edu/~wallace/academic/
Root-URL: http://www.cs.umich.edu
Email: fwallace,soparkarg@eecs.umich.edu  
Title: Spheres of Control: An Approach to Advanced Recovery  
Author: C. Wallace N. Soparkar 
Address: Ann Arbor, MI 48109-2122 USA  
Affiliation: Electrical Engineering Computer Science The University of Michigan  
Abstract: Recovery from failures and erroneous executions is a crucial but complicated issue for concurrently accessed data systems. Increasingly sophisticated techniques are being developed to improve performance and functionality of recovery protocols. To better understand and analyze recovery schemes, we reexamine the concept of spheres of control [Dav78], using it as a unifying framework for specifying diverse recovery models simply and precisely. We constrain sphere-of-control formulations appropriately to capture transaction-oriented recovery in both centralized and distributed environments and with different types of schedules, as well as semantics-based recovery and compensation. In addition, we discuss how the operational semantics methodology of evolving algebras [Gur95] can model spheres of control formally and refine them to lower levels of abstraction.
Abstract-found: 1
Intro-found: 1
Reference: [AAA + 96] <author> G. Alonso, D. Agrawal, A. El Abbadi, M. Kamath, R. Gunthor, and C. Mohan. </author> <title> Advanced transaction models in workflow contexts. </title> <booktitle> In Proceedings of the Twelfth International Conference on Data Engineering, </booktitle> <month> February </month> <year> 1996. </year>
Reference-contexts: Evolving algebras have been used extensively in specifying distributed systems, and the spheres of control model seems readily extendable to cover distributed recovery. In addition, the expressive power of spheres of control seems well suited for complex approaches to data management such as workflow <ref> [GHS95, AAA + 96] </ref>. We believe that the spheres of control approach, specified formally using evolving algebras, has the following advantages. It is procedural in nature; the actions taken by the system are described explicitly.
Reference: [AKA + 94] <author> G. Alonso, M. Kamath, D. Agrawal, A. El Abbadi, R. Gunthor, and C. Mohan. </author> <title> Failure handling in large scale workflow management systems. </title> <type> Technical report, </type> <institution> IBM Research Division, </institution> <year> 1994. </year>
Reference: [Bjo73] <author> Lawrence Bjork. </author> <title> Recovery scenario for a DB/DC system. </title> <booktitle> In Proceedings of ACM 1973, </booktitle> <pages> pages 142-146, </pages> <year> 1973. </year>
Reference: [Chr91] <author> P.K. Chrysanthis. </author> <title> ACTA: A Framework for Modeling and Reasoning about Extended Transactions. </title> <type> PhD thesis, </type> <institution> University of Massachusetts, Amherst, </institution> <year> 1991. </year> <month> 15 </month>
Reference: [Dav73] <author> Charles Davies. </author> <title> Recovery semantics for a DB/DC system. </title> <booktitle> In Proceedings of ACM 1973, </booktitle> <pages> pages 136-141, </pages> <year> 1973. </year>
Reference: [Dav78] <author> Charles Davies. </author> <title> Data processing spheres of control. </title> <journal> IBM Systems Journal, </journal> <volume> 17(2) </volume> <pages> 179-198, </pages> <year> 1978. </year>
Reference: [Elm92] <author> Ahmed K. Elmagarmid. </author> <title> Database Transaction Models for Advanced Applications. </title> <publisher> Morgan Kauf-mann, </publisher> <year> 1992. </year>
Reference: [GHS95] <author> D. Georgakopoulos, M. Hornick, and A. Sheth. </author> <title> An overview of workflow management: From process modeling to workflow automation infrastructure. </title> <booktitle> Distributed and Parallel Databases, </booktitle> <volume> 3 </volume> <pages> 119-153, </pages> <year> 1995. </year>
Reference-contexts: Evolving algebras have been used extensively in specifying distributed systems, and the spheres of control model seems readily extendable to cover distributed recovery. In addition, the expressive power of spheres of control seems well suited for complex approaches to data management such as workflow <ref> [GHS95, AAA + 96] </ref>. We believe that the spheres of control approach, specified formally using evolving algebras, has the following advantages. It is procedural in nature; the actions taken by the system are described explicitly.
Reference: [Gra81] <author> J. Gray. </author> <title> The transaction concept: Virtues and limitations. </title> <booktitle> In Proceedings of the 7th International Conference on Very Large Data Bases, </booktitle> <pages> pages 144-154, </pages> <month> September </month> <year> 1981. </year>
Reference: [Gur93] <author> Yuri Gurevich. </author> <title> Evolving algebras: An attempt to discover semantics. </title> <editor> In G. Rozenberg and A. Salom-a, editors, </editor> <booktitle> Current Trends in Theoretical Computer Science, </booktitle> <pages> pages 266-292. </pages> <publisher> World Scientific, </publisher> <year> 1993. </year>
Reference-contexts: There is a strong case for evolving algebras as a tool for specification, verification and development in the area of database recovery. Evolving algebras can be used to model an algorithm at any level of abstraction; e.g., see <ref> [Gur93] </ref>. An algorithm can be specified at a high level, without concern for the implementation-specific details. These details may be added to the specification as desired through refinements of the evolving algebra.
Reference: [Gur95] <author> Yuri Gurevich. </author> <title> Evolving algebras 1993: Lipari guide. </title> <editor> In Egon Borger, editor, </editor> <booktitle> Specification and Validation Methods, </booktitle> <pages> pages 9-36. </pages> <publisher> Oxford University Press, </publisher> <year> 1995. </year>
Reference-contexts: Section 4.3 specifies the strict flat transaction approach of Section 3.1.1, and Section 4.4 specifies the recoverable flat transaction approach of Section 3.2. 4.1 Evolving algebras This section describes the evolving algebra concepts we use in this paper; see <ref> [Gur95] </ref> for a more complete presentation of evolving algebras. A sequential eva (hereafter, eva) models a system in which an agent (in our case, the recovery manager) changes the current state in discrete steps.
Reference: [MHL + 92] <author> C. Mohan, D. Haderle, B. Lindsay, H. Pirahesh, and P. Schwarz. </author> <title> ARIES: A transaction recovery method supporting fine-granularity locking and partial rollbacks using write-ahead logging. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 17(1) </volume> <pages> 94-162, </pages> <year> 1992. </year>
Reference: [Mos85] <author> J. Eliot Moss. </author> <title> Nested Transactions: An Approach to Reliable Distributed Computing. </title> <publisher> MIT Press, </publisher> <year> 1985. </year>
Reference-contexts: Since transaction 2 has updated y, it is enclosed in both W x and W y spheres. In (3), the agt-sphere of transaction 3 has been removed, but since the transaction aborted, its updates are not released to the system. 3.1.2 Nested transaction systems In the nested transaction model <ref> [Mos85] </ref>, transactions may contain sub-transactions. Each sub-transaction has a unique parent transaction and may commit or abort without forcing its parent to do so. When a sub-transaction commits, it releases its updates only to its parent transaction, not to the entire system.
Reference: [WGS95] <author> Charles Wallace, Yuri Gurevich, and Nandit Soparkar. </author> <title> Formalizing recovery in transaction-oriented database systems. </title> <booktitle> In Proceedings of the Seventh International Conference on Management of Data, </booktitle> <pages> pages 166-185, </pages> <year> 1995. </year> <month> 16 </month>
Reference-contexts: The mapping is such that the correctness properties, once proven for the high-level model, imply the correctness of the lower-level implementation. For instance, we have provided an evolving algebra specification for the simple undo/redo algorithms for transaction recovery in <ref> [WGS95] </ref>. We intend to refine our basic spheres of control models for recovery, as presented in this paper, to this lower-level implementation detail. The flexibility of both spheres of control and evolving algebras make this a promising approach for more complex recovery problems.
References-found: 14

