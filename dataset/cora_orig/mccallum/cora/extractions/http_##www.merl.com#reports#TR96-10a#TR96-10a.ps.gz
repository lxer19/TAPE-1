URL: http://www.merl.com/reports/TR96-10a/TR96-10a.ps.gz
Refering-URL: http://www.merl.com/reports/TR96-10a/index.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: email: mizunuma,takegaki@con.sdl.melco.co.jp  email: shen@merl.com  
Title: Middleware for Distributed Industrial Real-Time Systems on ATM Networks  
Author: Ichiro Mizunuma Chia Shen and Morikazu Takegaki 
Address: 8-1-1, Tsukaguchi-honmachi, Amagasaki, Hyogo, 661, Japan.  201 Broadway, Cambridge, Massachusetts 02139 USA  
Affiliation: Industrial Electronics and Systems Lab., Mitsubishi Electric Corp.  A Mitsubishi Electric Reseach Lab.  
Abstract: In this paper we address the problem of middleware design for constructing ATM LAN based distributed industrial plant monitoring and control systems. In particular, we present a real-time client-server programming model based on a uniform ATM network. This model is being realized in our mid-dleware called MidART. The middleware provides a set of industrial application specific but network transparent programming abstractions and application programming interface (API) that support individual application QoS requirements. In order to achieve on-demand transmission of plant data, we have developed a concept called selective real-time channels to be supported by MidART. We present the design and protocols of selective real-time channels and describe how QoS requirements of applications are guaranteed. 
Abstract-found: 1
Intro-found: 1
Reference: [ATM Forum TM 4.0] <author> ATM Forum Technical Committee. </author> <title> Traffic Management Specification 4.0 April 1996. </title>
Reference: [ATM UNI 3.1] <institution> ATM Forum Technical Committee. </institution> <note> ATM User-Network Interface (UNI) Specificcation Version 3.1 Sept. </note> <year> 1994. </year>
Reference: [Ferrari 90] <author> D. Ferrari and D. Verma. </author> <title> A Scheme for Real-Time Channel Establishment in Wide-Area Networks. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 8(3) </volume> <pages> 368-379, </pages> <month> April </month> <year> 1990. </year>
Reference-contexts: Traffic that needs deterministic guarantee and traffic that can tolerate larger transmission delay variation can potentially co-exist in the same network. For distributed real-time applications, we can readily utilize the concept of real-time channels <ref> [Ferrari 90] </ref>. * The configuration of the system can be easily modified by adding or removing subsystems on a plug-and-play basis, since we can employ stan dard platforms now. * With a uniform network technology for the entire system, we have eliminated bottlenecks such as gateways which pose performance and reliability <p> Most of these work are based on the cencept of real-time channels <ref> [Ferrari 90] </ref> and derive delay bounds given packet scheduling algorithms and traffic source specifications.
Reference: [FORE 95] <author> FORE Systems, Inc. </author> <title> F oreRunner T M ASX-200BX ATM Switch User's Manual, </title> <address> MANU0026 Rev. D. </address> <month> Septem-ber </month> <year> 1995. </year>
Reference-contexts: MidART prototype is being built on an ATM LAN based platform. The prototype system set up includes an ASX200BX ATM switch from FORE Systems, Inc. <ref> [FORE 95] </ref>, and a number of HP 734rt computers with the HP-RT real-time operating system connected to the ATM switch using ATM adaptors from Interphase Inc 2 . <p> Signalling and CAC algorithms of current commercial ATM products mainly support point-to-point or point-to-multipoint connections, not multipoint-to-point connections which are needed for selective real-time channels. For data transmissions in selective real-time channels, we use PVC connections and FORE ASX-200 BX's functions of bandwidth and buffer over-booking for VBRs <ref> [FORE 95] </ref>. This means that current selective real-time channels are able to be established only statically, not dynamically. We show how to realize selective real-time channels with PVC and BX's overbooking.
Reference: [Guha 95] <author> A. Guha, A. Pavan, J. Liu, A. Rastogi, and T. Steeves. </author> <title> Supporting Real-Time and Multimedia Applications on the Mercuri ATM Testbed. </title> <journal> The IEEE Journal on Selected Areas in Communications, Vol.13, </journal> <volume> No.4, </volume> <pages> pp. 749-763, </pages> <year> 1995. </year>
Reference-contexts: The Mercuri ATM testbed <ref> [Guha 95] </ref> [Pavan 95] is a process monitoring system with first generation standard ATM platforms. Although Mercuri also provides a client-server model to applications, the objective of the Mercuri testbed differs from ours in that their focus is mostly to experiment with multimedia data (video and audio) on ATM networks.
Reference: [Jeffay 95] <author> K. Jeffay and D. Bennett. </author> <title> A Rate-Based Execution Abstraction for Multimedia Computing. </title> <booktitle> The Fifth International Workshop on Network and Operating System Support for Digital Audio and Video. </booktitle> <pages> pp 67-78. </pages> <month> April </month> <year> 1995. </year>
Reference-contexts: In addition, their approach needs special hardware for communication interface (STRAM communication boards) rather than using standard platforms. Task scheduling and QoS management in middle-ware or operating systems for multimedia end systems have been the focus of numerous research efforts recently [Mercer 94], [Nishio 94], [Kawachiya 95], <ref> [Jeffay 95] </ref>. Although most of them are not dealing with industrial plant control systems with deterministic guarantee requirements, we can still find similarities in our respective projects. <p> The approaches we are taking for our host system admission control in LAC and the application to operating system QoS mapping supported in RT-ATM are similar to the reservation concept in [Mercer 94] and <ref> [Jeffay 95] </ref>. One difference lies in that we use commercially available real-time operating systems (i.e., HP-RT or LynxOS) which are monolithic, rather than micro-kernel based technology. A middleware for continuous media applications is presented in [Nishio 94] and [Kawachiya 95].
Reference: [Kandlur 94] <author> D. D. Kandlur, K. G. Shin, and D. Ferrari. </author> <title> Real-time Communication in Multihop Networks. </title> <journal> IEEE Transactions on parallel and distributed systems, </journal> <volume> Vol. 5, No. 10, </volume> <pages> pp. 1044-1056, </pages> <month> Oct. </month> <year> 1994. </year>
Reference-contexts: There have been a lot of studies lately on real-time communication with end-to-end (network interface-to--network interface) QoS guarantees in a packet switching network or an ATM network <ref> [Kandlur 94] </ref>, [Raha 96], [Zheng 94a], [Zheng 94b] and [Mizunuma 95]. Most of these work are based on the cencept of real-time channels [Ferrari 90] and derive delay bounds given packet scheduling algorithms and traffic source specifications.
Reference: [Kawachiya 95] <author> K. Kawachiya, M. Ogata, N. Nishio, and H. Tokuda. </author> <title> Evaluation of QOS-Control Servers on Real-Time Mach. </title> <booktitle> The Fifth International Workshop on Network and Operating System Support for Digital Audio and Video. </booktitle> <pages> pp 123-126. </pages> <month> April </month> <year> 1995. </year>
Reference-contexts: In addition, their approach needs special hardware for communication interface (STRAM communication boards) rather than using standard platforms. Task scheduling and QoS management in middle-ware or operating systems for multimedia end systems have been the focus of numerous research efforts recently [Mercer 94], [Nishio 94], <ref> [Kawachiya 95] </ref>, [Jeffay 95]. Although most of them are not dealing with industrial plant control systems with deterministic guarantee requirements, we can still find similarities in our respective projects. <p> One difference lies in that we use commercially available real-time operating systems (i.e., HP-RT or LynxOS) which are monolithic, rather than micro-kernel based technology. A middleware for continuous media applications is presented in [Nishio 94] and <ref> [Kawachiya 95] </ref>. A conductor/performer architecture is used to guarantee QoS of continuous media and to provide dynamic QoS control. The middleware is a set of system servers on the RT-Mach micro kernel.
Reference: [Lehoczky 89] <author> J. P. Lehoczky, L. Sha, and Y. Ding. </author> <title> The Rate Monotonic Scheduling Algorithm: Exact Characterization and Average Case Behavior. </title> <booktitle> IEEE RTSS '89, </booktitle> <pages> pp. 166-171, </pages> <month> December </month> <year> 1989. </year>
Reference-contexts: We can estimate the maximum values of all the delays as follows. D write and D read are waiting times for resources such as CPUs and semaphores. Their maximum values are calculated using rate monotonic algorithm (RMA) [Liu 73] <ref> [Lehoczky 89] </ref> with its extensions for resource contention [Rajkumar 91] by LACs in the hosts. C write , C os send , and C read are estimated as linear functions of the data size S.
Reference: [Liu 73] <author> C. L. Liu and J. W. Layland. </author> <title> Scheduling Algorithm For Multiprogramming in a Hard-Real-Time Environment. </title> <journal> JACM, </journal> <volume> Vol. 20, No. 1, </volume> <pages> pp. 46-61, </pages> <month> January </month> <year> 1973. </year>
Reference-contexts: We can estimate the maximum values of all the delays as follows. D write and D read are waiting times for resources such as CPUs and semaphores. Their maximum values are calculated using rate monotonic algorithm (RMA) <ref> [Liu 73] </ref> [Lehoczky 89] with its extensions for resource contention [Rajkumar 91] by LACs in the hosts. C write , C os send , and C read are estimated as linear functions of the data size S.
Reference: [Meinert 95] <author> G. Meinert. </author> <title> Openness for Automation Networks. </title> <booktitle> InTech, </booktitle> <pages> pp 29-32. </pages> <month> Oct. </month> <year> 1995. </year>
Reference-contexts: Consequently, these current distributed plant control systems are inflexi ble, expensive, difficult to modify and not scalable. control system, similar to those systems from Mit-subishi Electric Corp. and those discussed in <ref> [Meinert 95] </ref>. The network architecture contains two layers, a control layer and an information layer. The network bus in the control layer is compliant with FDDI connecting together proprietary subsystems such as programmable logic controllers (PLCs), and operator stations (OPSes).
Reference: [Mercer 94] <author> G. Mercer, S. Savage and H. Tokuda. </author> <title> Processor Capacity Reserves: Operating System Support for Multimedia Applications. </title> <booktitle> IEEE International Conference on Multimedia Computing and Systems. </booktitle> <pages> pp 90-99. </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: In addition, their approach needs special hardware for communication interface (STRAM communication boards) rather than using standard platforms. Task scheduling and QoS management in middle-ware or operating systems for multimedia end systems have been the focus of numerous research efforts recently <ref> [Mercer 94] </ref>, [Nishio 94], [Kawachiya 95], [Jeffay 95]. Although most of them are not dealing with industrial plant control systems with deterministic guarantee requirements, we can still find similarities in our respective projects. <p> The approaches we are taking for our host system admission control in LAC and the application to operating system QoS mapping supported in RT-ATM are similar to the reservation concept in <ref> [Mercer 94] </ref> and [Jeffay 95]. One difference lies in that we use commercially available real-time operating systems (i.e., HP-RT or LynxOS) which are monolithic, rather than micro-kernel based technology. A middleware for continuous media applications is presented in [Nishio 94] and [Kawachiya 95].
Reference: [Mizunuma 95] <author> I. Mizunuma, S. Horiike, and M. Takegaki. </author> <title> Real-Time Communication in Plant Monitoring / Controlling Systems with ATM Networks. </title> <booktitle> RTCSA'95, </booktitle> <pages> pp. 243-250, </pages> <month> Oct. </month> <year> 1995. </year>
Reference-contexts: of servers, but bandwidth assigned for control messages is very narrow and we believe that we have no problem with at most one hundred servers in an actual application. tion (C; T; D) onto VBR parameters with calculating D network by the method proposed in [Zheng 94a] or that in <ref> [Mizunuma 95] </ref>, for example. 6 Related Work There have been a couple of research efforts in experimenting with introducing early ATM network systems into industrial systems. The Mercuri ATM testbed [Guha 95] [Pavan 95] is a process monitoring system with first generation standard ATM platforms. <p> There have been a lot of studies lately on real-time communication with end-to-end (network interface-to--network interface) QoS guarantees in a packet switching network or an ATM network [Kandlur 94], [Raha 96], [Zheng 94a], [Zheng 94b] and <ref> [Mizunuma 95] </ref>. Most of these work are based on the cencept of real-time channels [Ferrari 90] and derive delay bounds given packet scheduling algorithms and traffic source specifications.
Reference: [Nishio 94] <author> N. Nishio and H. Tokuda. Conductor-Performer: </author> <title> A Middle Ware Architecture for Continuous Media Applications. </title> <booktitle> 1st International Workshop on Real-Time Computing Systems and Applications, </booktitle> <address> pp.122-131, </address> <year> 1994. </year>
Reference-contexts: In addition, their approach needs special hardware for communication interface (STRAM communication boards) rather than using standard platforms. Task scheduling and QoS management in middle-ware or operating systems for multimedia end systems have been the focus of numerous research efforts recently [Mercer 94], <ref> [Nishio 94] </ref>, [Kawachiya 95], [Jeffay 95]. Although most of them are not dealing with industrial plant control systems with deterministic guarantee requirements, we can still find similarities in our respective projects. <p> One difference lies in that we use commercially available real-time operating systems (i.e., HP-RT or LynxOS) which are monolithic, rather than micro-kernel based technology. A middleware for continuous media applications is presented in <ref> [Nishio 94] </ref> and [Kawachiya 95]. A conductor/performer architecture is used to guarantee QoS of continuous media and to provide dynamic QoS control. The middleware is a set of system servers on the RT-Mach micro kernel.
Reference: [Pavan 95] <author> A. Pavan, J. Liu, A. Guha, J. Pugaczewski, and M. Midani. </author> <title> Experimental Evaluation of Real-Time Support on the Mercuri Wide Area ATM Testbed. </title> <booktitle> LCN '95, </booktitle> <pages> pp. 82-91, </pages> <year> 1995. </year>
Reference-contexts: The Mercuri ATM testbed [Guha 95] <ref> [Pavan 95] </ref> is a process monitoring system with first generation standard ATM platforms. Although Mercuri also provides a client-server model to applications, the objective of the Mercuri testbed differs from ours in that their focus is mostly to experiment with multimedia data (video and audio) on ATM networks.
Reference: [Pokam 95] <author> M. R. Pokam, J. Guillaud, and G. Michel. </author> <title> ATM Networks Allow Multimedia in Process Control Systems. </title> <booktitle> IEEE ICCCN '95, </booktitle> <pages> pp. 324-331, </pages> <year> 1995. </year>
Reference-contexts: Thus message throughput and round trip delay, as well as video frame jitter are their main concerns for performance measurements, rather than application-to-application deterministic QoS guarantee. On the other hand, we are focusing on providing programming models and mechanisms for QoS specification and guarantee. <ref> [Pokam 95] </ref> also proposed using ATM networks to incorporate multimedia in process control systems. Their system, however, is not scalable due to their ring topology. In addition, their approach needs special hardware for communication interface (STRAM communication boards) rather than using standard platforms.
Reference: [Raha 96] <author> A. Raha, S. Kamat, and W. Zhao. </author> <title> Admission Control for Hard Real-Time Connections in ATM LANs . IEEE INFOCOM '96, </title> <month> March </month> <year> 1996. </year>
Reference-contexts: There have been a lot of studies lately on real-time communication with end-to-end (network interface-to--network interface) QoS guarantees in a packet switching network or an ATM network [Kandlur 94], <ref> [Raha 96] </ref>, [Zheng 94a], [Zheng 94b] and [Mizunuma 95]. Most of these work are based on the cencept of real-time channels [Ferrari 90] and derive delay bounds given packet scheduling algorithms and traffic source specifications.
Reference: [Rajkumar 91] <author> R. </author> <title> Rajkumar Synchronization in Real-Time Systems: A Priority Inheritance Approach. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> 101 Philip Drive, Assinippi Park, Nor-well, Massachusetts 02061 USA. </address> <year> 1991. </year>
Reference-contexts: We can estimate the maximum values of all the delays as follows. D write and D read are waiting times for resources such as CPUs and semaphores. Their maximum values are calculated using rate monotonic algorithm (RMA) [Liu 73] [Lehoczky 89] with its extensions for resource contention <ref> [Rajkumar 91] </ref> by LACs in the hosts. C write , C os send , and C read are estimated as linear functions of the data size S. C mid send , C mid recv , T trans , T recv , and D os recv are constant.
Reference: [Shen 96] <author> C. Shen. </author> <title> On ATM Support for Distributed Real-Time Applications. </title> <booktitle> IEEE RTAS '96, </booktitle> <pages> pp. 70-78, </pages> <month> June </month> <year> 1996. </year>
Reference-contexts: MidART includes three components, a RT-API, a RT-ATM, and a LAC. RT-ATM contains a set of QoS mapping schemes and protocols, and is responsible for translating application's QoS parameters into ATM service traffic descriptors and QoS parameters, multiplexing application traffic and establishing ATM virtual connections. <ref> [Shen 96] </ref> gives examples of how this translation and multiplexing can be accomplished. RT-API provides a set of programming abstractions and API as library routines to support application development. It also contains application task management facilities specific to industrial plant control application domain.
Reference: [Zheng 94a] <author> Q. Zheng, K. Shin, and C. Shen. </author> <title> Real-Time Communication in ATM Networks. </title> <booktitle> LCN '94, </booktitle> <pages> pp. 156-164, </pages> <month> Oct. </month> <year> 1994. </year>
Reference-contexts: lacks scalability in the number of servers, but bandwidth assigned for control messages is very narrow and we believe that we have no problem with at most one hundred servers in an actual application. tion (C; T; D) onto VBR parameters with calculating D network by the method proposed in <ref> [Zheng 94a] </ref> or that in [Mizunuma 95], for example. 6 Related Work There have been a couple of research efforts in experimenting with introducing early ATM network systems into industrial systems. The Mercuri ATM testbed [Guha 95] [Pavan 95] is a process monitoring system with first generation standard ATM platforms. <p> There have been a lot of studies lately on real-time communication with end-to-end (network interface-to--network interface) QoS guarantees in a packet switching network or an ATM network [Kandlur 94], [Raha 96], <ref> [Zheng 94a] </ref>, [Zheng 94b] and [Mizunuma 95]. Most of these work are based on the cencept of real-time channels [Ferrari 90] and derive delay bounds given packet scheduling algorithms and traffic source specifications.
Reference: [Zheng 94b] <author> Q. Zheng and K. Shin. </author> <title> On the Ability of Establis-ing Real-Time Channels in Point-to-point Packet-switched Networks. </title> <journal> IEEE Transactions of Communication, </journal> <volume> Vol. 42, No. 4, </volume> <pages> pp. 1095-1105, </pages> <year> 1994. </year>
Reference-contexts: There have been a lot of studies lately on real-time communication with end-to-end (network interface-to--network interface) QoS guarantees in a packet switching network or an ATM network [Kandlur 94], [Raha 96], [Zheng 94a], <ref> [Zheng 94b] </ref> and [Mizunuma 95]. Most of these work are based on the cencept of real-time channels [Ferrari 90] and derive delay bounds given packet scheduling algorithms and traffic source specifications.
References-found: 21

