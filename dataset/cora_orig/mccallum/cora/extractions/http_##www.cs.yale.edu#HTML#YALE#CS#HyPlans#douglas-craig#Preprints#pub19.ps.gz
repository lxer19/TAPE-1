URL: http://www.cs.yale.edu/HTML/YALE/CS/HyPlans/douglas-craig/Preprints/pub19.ps.gz
Refering-URL: http://www.cs.yale.edu/HTML/YALE/CS/HyPlans/douglas-craig/ccd-preprints.html
Root-URL: http://www.cs.yale.edu
Title: A VARIATION OF THE SCHWARZ ALTERNATING METHOD: THE DOMAIN REDUCTION METHOD  
Author: CRAIG C. DOUGLAS 
Abstract: Domain decomposition methods are highly parallel methods for solving elliptic partial differential equations. In many domain decomposition variants, the domain is partitioned into a number of (possibly overlapping) subdomains before computation begins. In contrast, the domain reduction method folds the domain into a number of smaller domains covering only a small portion of the entire domain. The solution over the entire domain is recovered by unfolding the solutions on the subdomains and summing them. The cost of the folding and unfolding is negligible. All steps of the algorithm are embarrassingly parallel. 1. Introduction. In this paper, the solution to an elliptic boundary value 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. E. Bank and C. C. Douglas, </author> <title> Sharp estimates for multigrid rates of convergence with general smoothing and acceleration, </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 22 (1985), </volume> <pages> pp. 617-633. </pages>
Reference-contexts: 1. Introduction. In this paper, the solution to an elliptic boundary value problem is approximated using a combination of domain decomposition, multigrid, and projection method techniques (see <ref> [1] </ref>, [2], [4], [7], [13], [14], [16], and [17]). Consider problems of the following form. 8 &gt; : u = 0 on @: More complicated boundary conditions are discussed in [3] and [8].
Reference: [2] <author> A. Brandt, </author> <title> Multi-level adaptive solution to boundary-value problems, </title> <journal> Math. Comp., </journal> <volume> 31 (1977), </volume> <pages> pp. 333-390. </pages>
Reference-contexts: 1. Introduction. In this paper, the solution to an elliptic boundary value problem is approximated using a combination of domain decomposition, multigrid, and projection method techniques (see [1], <ref> [2] </ref>, [4], [7], [13], [14], [16], and [17]). Consider problems of the following form. 8 &gt; : u = 0 on @: More complicated boundary conditions are discussed in [3] and [8].
Reference: [3] <author> F. Brezzi, C. C. Douglas, and L. D. Marini, </author> <title> A parallel domain reduction method, Numer. Meth. for PDE, </title> <booktitle> 5 (1989), </booktitle> <pages> pp. 195-202. </pages>
Reference-contexts: Consider problems of the following form. 8 &gt; : u = 0 on @: More complicated boundary conditions are discussed in <ref> [3] </ref> and [8]. That (1.1) is well posed and will be discretized by a finite element, volume, or difference scheme is assumed throughout this paper. <p> The applicability to shared or distributed memory, coarse or fine grained parallel computers was discussed informally in [10]. The elliptic partial differential equation case (with an emphasis on one and two dimensions) was analyzed in [11], and a technique for doubling the basic parallelism was introduced in <ref> [3] </ref>. This was extended to three dimensional problems in [8]. In the general case, or when the subproblems are solved only approximately, the method becomes an iterative method or can be used as a preconditioner. Bounds on the resulting convergence factors and condition numbers are given in [8]. <p> For example, D N (0,0) D D (0,0) Finally, the subdomain which is isomorphic to the original domain can be reduced onto two triangles, two rectangles, or recursively onto an eight way set of subproblems. More details are contained in <ref> [3] </ref>. The three dimensional cube offers a real challenge.
Reference: [4] <author> T. Chan, R. Glowinski, G. A. Meurant, J. P eriaux, and O. Widlund, eds., </author> <title> Domain Decomposition Methods for Partial Differential Equations II, </title> <address> Philadelphia, </address> <year> 1989, </year> <institution> Society for Industrial and Applied Mathematics. </institution>
Reference-contexts: 1. Introduction. In this paper, the solution to an elliptic boundary value problem is approximated using a combination of domain decomposition, multigrid, and projection method techniques (see [1], [2], <ref> [4] </ref>, [7], [13], [14], [16], and [17]). Consider problems of the following form. 8 &gt; : u = 0 on @: More complicated boundary conditions are discussed in [3] and [8].
Reference: [5] <author> H. C. Chen, </author> <title> The SAS domain decomposition method for structural analysis, </title> <type> PhD thesis, </type> <institution> University of Illinois at Urbana-Champaign, Urbana, Illinois, </institution> <year> 1988. </year>
Reference-contexts: More typically, it is a direct solver (cf., 193 Algorithm 1) or an iterative solver (cf., Algorithm 2). Algorithm 3 is related to algorithms analyzed in <ref> [5] </ref>, [6], [12], [15], [18], [19], and [20]. The convergence of Algorithms 1 and 3 is guaranteed by the following theorem. Theorem 1.
Reference: [6] <author> H. C. Chen and A. H. Sameh, </author> <title> A matrix decomposition method for orthotropic elasticity problems, </title> <journal> SIAM J. Matrix Anal. Appl., </journal> <volume> 10 (1989), </volume> <pages> pp. 39-64. </pages>
Reference-contexts: More typically, it is a direct solver (cf., 193 Algorithm 1) or an iterative solver (cf., Algorithm 2). Algorithm 3 is related to algorithms analyzed in [5], <ref> [6] </ref>, [12], [15], [18], [19], and [20]. The convergence of Algorithms 1 and 3 is guaranteed by the following theorem. Theorem 1.
Reference: [7] <author> C. C. Douglas, </author> <title> Multi-grid algorithms with applications to elliptic boundary-value problems, </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 21 (1984), </volume> <pages> pp. 236-254. </pages>
Reference-contexts: 1. Introduction. In this paper, the solution to an elliptic boundary value problem is approximated using a combination of domain decomposition, multigrid, and projection method techniques (see [1], [2], [4], <ref> [7] </ref>, [13], [14], [16], and [17]). Consider problems of the following form. 8 &gt; : u = 0 on @: More complicated boundary conditions are discussed in [3] and [8].
Reference: [8] <author> C. C. Douglas and J. Mandel, </author> <title> The domain reduction method: high way reduction in three dimensions and convergence with inexact solvers, </title> <booktitle> in Fourth Copper Mountain Conference on Multigrid Methods, </booktitle> <editor> J. Mandel, S. F. McCormick, J. E. Dendy, C. Farhat, G. Lonsdale, S. V. Parter, J. W. Ruge, and K. Stuben, eds., </editor> <booktitle> Society for Industrial and Applied Mathematics, </booktitle> <address> Philadelphia, </address> <year> 1989, </year> <pages> pp. 149-160. </pages>
Reference-contexts: Consider problems of the following form. 8 &gt; : u = 0 on @: More complicated boundary conditions are discussed in [3] and <ref> [8] </ref>. That (1.1) is well posed and will be discretized by a finite element, volume, or difference scheme is assumed throughout this paper. <p> The elliptic partial differential equation case (with an emphasis on one and two dimensions) was analyzed in [11], and a technique for doubling the basic parallelism was introduced in [3]. This was extended to three dimensional problems in <ref> [8] </ref>. In the general case, or when the subproblems are solved only approximately, the method becomes an iterative method or can be used as a preconditioner. Bounds on the resulting convergence factors and condition numbers are given in [8]. <p> This was extended to three dimensional problems in <ref> [8] </ref>. In the general case, or when the subproblems are solved only approximately, the method becomes an iterative method or can be used as a preconditioner. Bounds on the resulting convergence factors and condition numbers are given in [8]. In x2, the method is defined as it pertains to this paper in a very abstract manner. In x3, a simple 2 d way domain reduction is defined when = (1; 1) d . In x4, more complicated domain reductions are defined. <p> Using the same assumptions as in Theorem 3, if, in addition, V i ? V j , for all i; j, then max = min = 1 and (2.7) reduces to ku m+1 uk "ku m uk: The proofs to Theorem 3 and Corollary 2 can be found in <ref> [8] </ref>. 3. An Example. In this section, a simple example is described where the domain reduction method uses symmetries in (1.1) to split the problem into several subproblems. <p> Running times on both shared and distributed memory parallel computers (Encore and Intel) are contained in <ref> [8] </ref>. 4. Many Way Reduction. In this section, a more subtle approach to domain reduction is described.
Reference: [9] <author> C. C. Douglas and W. L. Miranker, </author> <title> Constructive interference in parallel algorithms, </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 25 (1988), </volume> <pages> pp. </pages> <month> 376-398. </month> <title> [10] , Some nontelescoping parallel algorithms based on serial multigrid/aggregation/disaggre-gation techniques, in Multigrid Methods: Theory, Applications, and Supercomputing, </title> <editor> S. F. McCormick, ed., </editor> <publisher> Marcel Dekker, </publisher> <address> New York, </address> <year> 1988, </year> <pages> pp. 167-176. </pages>
Reference-contexts: Each subproblem should be solved in parallel using the fastest known solution method appropriate. fl Mathematical Sciences Department, IBM Research Division, Thomas J. Watson Research Center, P. O. Box 218, Yorktown Heights, NY 10598. 191 The basic method was first derived in <ref> [9] </ref> as a parallel multilevel method for linear systems of equations where smoothing was unnecessary. The applicability to shared or distributed memory, coarse or fine grained parallel computers was discussed informally in [10]. <p> Corollary 1. Theorem 1 remains true for Algorithm 1 if the condition [ i ; A] = 0 is replaced by i A ( i I) = 0 for all i, 1 i n. The proofs to Theorem 1 and Corollary 1 can be found in <ref> [9] </ref>.
Reference: [11] <author> C. C. Douglas and B. F. Smith, </author> <title> Using symmetries and antisymmetries to analyze a parallel multigrid algorithm, </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 26 (1989), </volume> <pages> pp. 1439-1461. </pages>
Reference-contexts: The applicability to shared or distributed memory, coarse or fine grained parallel computers was discussed informally in [10]. The elliptic partial differential equation case (with an emphasis on one and two dimensions) was analyzed in <ref> [11] </ref>, and a technique for doubling the basic parallelism was introduced in [3]. This was extended to three dimensional problems in [8]. In the general case, or when the subproblems are solved only approximately, the method becomes an iterative method or can be used as a preconditioner. <p> The subproblems, A i , are defined in the Galerkin sense, as well. Examples of several choices of restriction and prolongation operators, and the resulting L i and A i , are given in <ref> [11] </ref>. The complete discrete algorithm is defined in a two level (multigrid-like) formulation. Algorithm 3. <p> Suppose the n restriction and prolongation operators are defined as in (2.5) and (2.6) with d X R fl satisfied. Then Algorithm PMG converges to the exact solution in one iteration without smoothing if the subspace problems are solved exactly. The proof to Theorem 2 can be found in <ref> [11] </ref>. The convergence of Algorithm 2 is guaranteed by the following theorem. Theorem 3.
Reference: [12] <author> P. Frederickson and O. McBryan, </author> <title> Parallel superconvergent multigrid, in Multigrid Methods: Theory, Applications, and Supercomputing, </title> <editor> S. F. McCormick, ed., </editor> <publisher> Marcel Dekker, </publisher> <address> New York, </address> <year> 1988, </year> <pages> pp. 195-210. </pages>
Reference-contexts: More typically, it is a direct solver (cf., 193 Algorithm 1) or an iterative solver (cf., Algorithm 2). Algorithm 3 is related to algorithms analyzed in [5], [6], <ref> [12] </ref>, [15], [18], [19], and [20]. The convergence of Algorithms 1 and 3 is guaranteed by the following theorem. Theorem 1.
Reference: [13] <author> R. Glowinski, G. H. Golub, G. A. Meurant, and J. P eriaux, eds., </author> <title> On the Schwarz alternating method I, </title> <address> Philadelphia, </address> <year> 1988, </year> <institution> Society for Industrial and Applied Mathematics. </institution>
Reference-contexts: 1. Introduction. In this paper, the solution to an elliptic boundary value problem is approximated using a combination of domain decomposition, multigrid, and projection method techniques (see [1], [2], [4], [7], <ref> [13] </ref>, [14], [16], and [17]). Consider problems of the following form. 8 &gt; : u = 0 on @: More complicated boundary conditions are discussed in [3] and [8].
Reference: [14] <author> W. Hackbusch, </author> <title> Multigrid Methods and Applications, </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1985. </year> <title> [15] , A new approach to robust multi-grid solvers, </title> <booktitle> in ICIAM'87: Proceedings of the First International Conference on Industrial and Applied Mathematics, Society for Industrial and Applied Mathematics, </booktitle> <address> Philadelphia, </address> <year> 1988, </year> <pages> pp. 114-126. 200 </pages>
Reference-contexts: 1. Introduction. In this paper, the solution to an elliptic boundary value problem is approximated using a combination of domain decomposition, multigrid, and projection method techniques (see [1], [2], [4], [7], [13], <ref> [14] </ref>, [16], and [17]). Consider problems of the following form. 8 &gt; : u = 0 on @: More complicated boundary conditions are discussed in [3] and [8]. That (1.1) is well posed and will be discretized by a finite element, volume, or difference scheme is assumed throughout this paper.
Reference: [16] <author> P. L. Lions, </author> <title> On the Schwarz alternating method I, in Domain Decomposition Methods for Partial Differential Equations, </title> <editor> R. Glowinski, G. H. Golub, G. A. Meurant, and J. Periaux, eds., </editor> <booktitle> Society for Industrial and Applied Mathematics, </booktitle> <address> Philadelphia, </address> <year> 1988, </year> <pages> pp. </pages> <month> 1-42. </month> <title> [17] , On the Schwarz alternating method II, in Domain Decomposition Methods for Partial Differential Equations II, </title> <editor> T. Chan, R. Glowinski, G. A. Meurant, J. Periaux, and O. Widlund, eds., </editor> <booktitle> Society for Industrial and Applied Mathematics, </booktitle> <address> Philadelphia, </address> <year> 1989, </year> <pages> pp. 47-70. </pages>
Reference-contexts: 1. Introduction. In this paper, the solution to an elliptic boundary value problem is approximated using a combination of domain decomposition, multigrid, and projection method techniques (see [1], [2], [4], [7], [13], [14], <ref> [16] </ref>, and [17]). Consider problems of the following form. 8 &gt; : u = 0 on @: More complicated boundary conditions are discussed in [3] and [8]. That (1.1) is well posed and will be discretized by a finite element, volume, or difference scheme is assumed throughout this paper.
Reference: [18] <author> J. Mandel and S. F. McCormick, </author> <title> Iterative solution of elliptic equations with refinement: the model multi-level case, in Domain Decomposition Methods for Partial Differential Equations II, </title> <editor> T. Chan, R. Glowinski, G. A. Meurant, J. Periaux, and O. Widlund, eds., </editor> <booktitle> Society for Industrial and Applied Mathematics, </booktitle> <address> Philadelphia, </address> <year> 1989, </year> <pages> pp. 93-102. </pages>
Reference-contexts: More typically, it is a direct solver (cf., 193 Algorithm 1) or an iterative solver (cf., Algorithm 2). Algorithm 3 is related to algorithms analyzed in [5], [6], [12], [15], <ref> [18] </ref>, [19], and [20]. The convergence of Algorithms 1 and 3 is guaranteed by the following theorem. Theorem 1.
Reference: [19] <author> S. F. McCormick, </author> <title> Fast adaptive composite grid (FAC) methods, in Defect Correction Methods, </title> <editor> K. Bohmer and H. J. Stetter, eds., </editor> <publisher> Springer-Verlag, </publisher> <address> Vienna, </address> <year> 1984, </year> <pages> pp. 115-121. </pages>
Reference-contexts: More typically, it is a direct solver (cf., 193 Algorithm 1) or an iterative solver (cf., Algorithm 2). Algorithm 3 is related to algorithms analyzed in [5], [6], [12], [15], [18], <ref> [19] </ref>, and [20]. The convergence of Algorithms 1 and 3 is guaranteed by the following theorem. Theorem 1.
Reference: [20] <author> S. F. McCormick and J. Thomas, </author> <title> The fast adaptive composite grid (FAC) method for elliptic equations, </title> <journal> Math. Comp., </journal> <volume> 46 (1986), </volume> <pages> pp. 439-456. </pages>
Reference-contexts: More typically, it is a direct solver (cf., 193 Algorithm 1) or an iterative solver (cf., Algorithm 2). Algorithm 3 is related to algorithms analyzed in [5], [6], [12], [15], [18], [19], and <ref> [20] </ref>. The convergence of Algorithms 1 and 3 is guaranteed by the following theorem. Theorem 1.
Reference: [21] <author> H. A. Schwarz, </author> <title> Uber einige Abbildungsaufgaben, </title> <journal> Ges. Math. Abh., </journal> <volume> 11 (1869), </volume> <pages> pp. 65-83. 201 </pages>
Reference-contexts: If more than one iterative method is used, then " is the maximum of the convergence factors. If the subproblems are solved exactly, the method is related to the well-known Schwarz alternating method <ref> [21] </ref>. In implementation, full-rank restriction and prolongation operators are used to transfer information between the subspaces and V : R i : V ! V i and P i : V i ! V: Frequently, each prolongation operator is the adjoint of one of the restriction operators.
References-found: 18

