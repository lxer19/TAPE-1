URL: http://www.cis.udel.edu/~decker/courses/889b/weld_aips96.ps
Refering-URL: http://www.cis.udel.edu/~decker/courses/889b.html
Root-URL: http://www.cis.udel.edu
Email: weld@cs.washington.edu  
Title: Planning-Based Control of Software Agents  
Author: Daniel S. Weld 
Address: Box 352350 Seattle, WA 98195-2350  
Affiliation: Department of Computer Science Engineering University of Washington  
Abstract-found: 0
Intro-found: 1
Reference: <editor> Allen, J.; Hendler, J.; and Tate, A., eds. </editor> <booktitle> 1990. Readings in Planning. </booktitle> <address> San Mateo, CA: </address> <publisher> Morgan Kaufmann. </publisher>
Reference: <author> Ambros-Ingerson, J., and Steel, S. </author> <year> 1988. </year> <title> Integrating planning, execution, and monitoring. </title> <booktitle> In Proc. 7th Nat. Conf. on A.I., </booktitle> <pages> 735-740. </pages>
Reference: <author> Barrett, A., and Weld, D. </author> <year> 1994a. </year> <title> Partial order planning: Evaluating possible efficiency gains. </title> <booktitle> Artificial Intelligence 67(1) </booktitle> <pages> 71-112. </pages>
Reference-contexts: Black boxes surround planners that are used to control software agents. Much of our planning research (figure 1) has been devoted to efficiency. The tocl and topi planners helped show the potential power of the partial order plan representation <ref> (Barrett & Weld 1994a) </ref>. spa introduced a new approach to case-based planning (Hanks & Weld 1995).
Reference: <author> Barrett, A., and Weld, D. </author> <year> 1994b. </year> <note> Task-decomposition via plan parsing. In Proc. 12th Nat. Conf. on A.I. Available via FTP from pub/ai/ at ftp.cs.washington.edu. </note>
Reference-contexts: The fabian planner extends the least-commitment approach to the choice of which action is used to support a subgoal (Fried-man & Weld 1996). ucparse and ucreduce illustrate two alternative approaches for exploiting hierarchical task network information in the planning process <ref> (Barrett & Weld 1994b) </ref>.
Reference: <author> Currie, K., and Tate, A. </author> <year> 1991. </year> <title> O-plan: the open planning architecture. </title> <booktitle> Artificial Intelligence 52(1) </booktitle> <pages> 49-86. </pages>
Reference: <author> Dent, L.; Boticario, J.; McDermott, J.; Mitchell, T.; and Zabowski, D. </author> <year> 1992. </year> <title> A personal learning apprentice. </title> <booktitle> In Proc. 10th Nat. Conf. on A.I., </booktitle> <pages> 96-103. </pages>
Reference: <author> Doorenbos, B.; Etzioni, O.; and Weld, D. </author> <year> 1996. </year> <title> A scalable comparison-shopping agent for the worldwide web. </title> <type> Technical Report 96-01-03, </type> <institution> University of Washington, Department of Computer Science and Engineering. </institution> <note> Available via FTP from pub/ai/ at ftp.cs.washington.edu. </note>
Reference-contexts: Motivated by the task popularized by BargainFinder (Krul-wich 1995), the shopbot comparison shopping agent <ref> (Doorenbos, Etzioni, & Weld 1996) </ref> used ila-style learning technology to autonomously develop models of electronic vendors. We also explored with the idea of procedural control of subgoaling behavior (in contrast with the soar-like metalevel declarative representation in Rodney.
Reference: <author> Draper, D.; Hanks, S.; and Weld, D. </author> <year> 1994. </year> <title> Probabilistic planning with information gathering and contingent execution. </title> <booktitle> In Proc. 2nd Intl. Conf. on A.I. Planning Systems. </booktitle>
Reference-contexts: The Buridan planner adopted a probabilistic model of the world in which actions could have uncertain effects (Kushmerick, Hanks, & Weld 1995); C-Buridan <ref> (Draper, Hanks, & Weld 1994) </ref> extends this model with sensing actions and and approach to contingent action execution which builds on the approach of cnlp (Peot & Smith 1992). A central problem in planner-based control of software agents is incomplete information (Olawsky & Gini 1990; Krebsbach, Olawsky, & Gini 1992).
Reference: <author> Etzioni, O., and Weld, D. </author> <year> 1994. </year> <title> A softbot-based interface to the internet. </title> <journal> CACM 37(7) </journal> <pages> 72-76. </pages> <note> See http://www.cs.washington.edu/research/softbots. </note>
Reference-contexts: Given the metaphor of "Internet as an information super-highway," a softbot becomes the competent chauffeur who knows every road and quietly performs routine errands. If it is to embody the ideal cyber-chauffeur, a softbot must satisfy several interrelated criteria <ref> (Etzioni & Weld 1994) </ref>: * Integrated: Users dislike being forced to remember the details of particular databases or the wide and growing variety of Internet services and utilities in order to use them effectively. Instead, the softbot should provide an integrated interface to all such services. * Goal oriented. <p> Several of our projects used ucpop as a base plan ner with which to explore action languages of even greater expressiveness. Safety and tidiness constraints were discussed in <ref> (Weld & Etzioni 1994) </ref>. <p> The Internet softbot, Rodney <ref> (Etzioni & Weld 1994) </ref>, is controlled by xii as explained in the next section. <p> The model manager is a specialized database that stores everything that Rodney has observed about the world. The most novel aspect of the model manager is its capacity for local closed-world reasoning <ref> (Etzioni, Golden, & Weld 1994) </ref>. Closed-world reasoning | the ability to draw conclusions based on the assumption that one knows about the existence of all relevant objects | is essential for goal-directed behavior (Ginsberg 1987). <p> Algorithms from constraint satisfaction and operations research should be integrated with modern planning representations (Penberthy & Weld 1994; Joslin & Pollack 1995; Kautz & Sleman 1996). New approaches for reasoning about incomplete information and sensing actions should be developed; local closed world reasoning algorithms <ref> (Etzioni, Golden, & Weld 1994) </ref> should be extended to handle worlds where exogenous change is common. Probabilistic approaches must be investigated to a greater extent. Tractable applications of decision theory have great promise for evaluating the value of information and determining the best information sources to query.
Reference: <author> Etzioni, O.; Hanks, S.; Weld, D.; Draper, D.; Lesh, N.; and Williamson, M. </author> <year> 1992. </year> <title> An Approach to Planning with Incomplete Information. </title> <booktitle> In Proc. 3rd Int. Conf. on Principles of Knowledge Representation and Reasoning. </booktitle> <address> San Francisco, CA: </address> <note> Morgan Kaufmann. Available via FTP from pub/ai/ at ftp.cs.washington.edu. </note>
Reference-contexts: The 1 Because of its portability and simplicity, ucpop has been adopted by almost 100 sites worldwide. For information on acquiring the Common Lisp source code, see http://www.cs.washington.edu/research/projects/ai/ www/ucpop.html uwl representation <ref> (Etzioni et al. 1992) </ref> provides a simple method for encoding sensing actions and information gathering goals (also known as knowledge preconditions (Moore 1985; Morgenstern 1987)).
Reference: <author> Etzioni, O.; Golden, K.; and Weld, D. </author> <year> 1994. </year> <title> Tractable closed-world reasoning with updates. </title> <booktitle> In Proc. 4th Int. Conf. on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> 178-189. </pages> <address> San Francisco, CA: </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Given the metaphor of "Internet as an information super-highway," a softbot becomes the competent chauffeur who knows every road and quietly performs routine errands. If it is to embody the ideal cyber-chauffeur, a softbot must satisfy several interrelated criteria <ref> (Etzioni & Weld 1994) </ref>: * Integrated: Users dislike being forced to remember the details of particular databases or the wide and growing variety of Internet services and utilities in order to use them effectively. Instead, the softbot should provide an integrated interface to all such services. * Goal oriented. <p> Several of our projects used ucpop as a base plan ner with which to explore action languages of even greater expressiveness. Safety and tidiness constraints were discussed in <ref> (Weld & Etzioni 1994) </ref>. <p> The Internet softbot, Rodney <ref> (Etzioni & Weld 1994) </ref>, is controlled by xii as explained in the next section. <p> The model manager is a specialized database that stores everything that Rodney has observed about the world. The most novel aspect of the model manager is its capacity for local closed-world reasoning <ref> (Etzioni, Golden, & Weld 1994) </ref>. Closed-world reasoning | the ability to draw conclusions based on the assumption that one knows about the existence of all relevant objects | is essential for goal-directed behavior (Ginsberg 1987). <p> Algorithms from constraint satisfaction and operations research should be integrated with modern planning representations (Penberthy & Weld 1994; Joslin & Pollack 1995; Kautz & Sleman 1996). New approaches for reasoning about incomplete information and sensing actions should be developed; local closed world reasoning algorithms <ref> (Etzioni, Golden, & Weld 1994) </ref> should be extended to handle worlds where exogenous change is common. Probabilistic approaches must be investigated to a greater extent. Tractable applications of decision theory have great promise for evaluating the value of information and determining the best information sources to query.
Reference: <author> Etzioni, O. </author> <year> 1993a. </year> <title> Intelligence without robots (a reply to brooks). </title> <journal> AI Magazine 14(4). </journal> <note> Available via anonymous FTP from pub/etzioni/softbots/ at cs.washington.edu. </note>
Reference-contexts: I focus on University of Washington projects, because I am most familiar with this body of work and because the Washington softbots have emphasized planning-based control. Motivation Softbots (software robots) are like physical robots in several respects <ref> (Etzioni 1993a) </ref>. Both have effectors, but instead of motor-driven wheels and grippers, soft-bots affect the world with commands such as ftp, telnet, and mail. Instead of sensors like sonar, soft-bots perception is based on Internet facilities such as gopher and netfind.
Reference: <author> Etzioni, O. </author> <year> 1993b. </year> <title> Acquiring search-control knowledge via static analysis. </title> <booktitle> Artificial Intelligence 62(2) </booktitle> <pages> 255-302. </pages>
Reference: <author> Etzioni, O. </author> <year> 1993c. </year> <title> A structural theory of explanation-based learning. </title> <booktitle> Artificial Intelligence 60(1) </booktitle> <pages> 93-140. </pages>
Reference: <author> Firby, R. J. </author> <year> 1987. </year> <title> An investigation into reactive planning in complex domains. </title> <booktitle> In Proc. 6th Nat. Conf. on A.I., </booktitle> <pages> 202-206. </pages>
Reference-contexts: We also explored with the idea of procedural control of subgoaling behavior (in contrast with the soar-like metalevel declarative representation in Rodney. The resulting system, which we called Simon (Kwok et al. 1995), resembled raps <ref> (Firby 1987) </ref>. Although Simon was somewhat faster and a bit more predictable than Rodney, it was just as hard (if not harder) to knowledge engineer. Encoding strategies for handling universally quantified goals was particularly time-consuming in our raps framework.
Reference: <author> Friedman, M., and Weld, D. </author> <year> 1996. </year> <title> Least-commitment action selection. </title> <booktitle> In Proc. 3rd Intl. Conf. on A.I. Planning Systems. </booktitle>
Reference: <editor> Ginsberg, M., ed. </editor> <booktitle> 1987. Readings in Nonmonotonic Reasoning. </booktitle> <address> San Mateo, CA: </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: The most novel aspect of the model manager is its capacity for local closed-world reasoning (Etzioni, Golden, & Weld 1994). Closed-world reasoning | the ability to draw conclusions based on the assumption that one knows about the existence of all relevant objects | is essential for goal-directed behavior <ref> (Ginsberg 1987) </ref>. For example, when directed to find the cheapest direct flight, travel agents assume that after accessing their collection of databases they have information about every relevant flight. Underlying the model manager is the insight that closed-world reasoning is both essential and dangerous.
Reference: <author> Golden, K.; Etzioni, O.; and Weld, D. </author> <year> 1994. </year> <title> Omnipotence without omniscience: Sensor management in planning. </title> <booktitle> In Proc. 12th Nat. Conf. on A.I., </booktitle> <pages> 1048-1054. </pages> <address> Menlo Park, CA: </address> <publisher> AAAI Press. </publisher>
Reference-contexts: The model manager is a specialized database that stores everything that Rodney has observed about the world. The most novel aspect of the model manager is its capacity for local closed-world reasoning <ref> (Etzioni, Golden, & Weld 1994) </ref>. Closed-world reasoning | the ability to draw conclusions based on the assumption that one knows about the existence of all relevant objects | is essential for goal-directed behavior (Ginsberg 1987). <p> Algorithms from constraint satisfaction and operations research should be integrated with modern planning representations (Penberthy & Weld 1994; Joslin & Pollack 1995; Kautz & Sleman 1996). New approaches for reasoning about incomplete information and sensing actions should be developed; local closed world reasoning algorithms <ref> (Etzioni, Golden, & Weld 1994) </ref> should be extended to handle worlds where exogenous change is common. Probabilistic approaches must be investigated to a greater extent. Tractable applications of decision theory have great promise for evaluating the value of information and determining the best information sources to query.
Reference: <author> Golden, K.; Etzioni, O.; and Weld, D. </author> <year> 1996. </year> <title> Planning with execution and incomplete information. </title> <type> Technical Report 96-01-09, </type> <institution> University of Washington, Department of Computer Science and Engineering. </institution> <note> Available via FTP from pub/ai/ at ftp.cs.washington.edu. </note>
Reference: <author> Haddawy, P., and Hanks, S. </author> <year> 1992. </year> <title> Representations for Decision-Theoretic Planning: Utility Functions for Dealine Goals. </title> <booktitle> In Proc. 3rd Int. Conf. on Principles of Knowledge Representation and Reasoning. </booktitle>
Reference-contexts: Pyrrhus (Williamson & Hanks 1994; 1996) also handles deadline goals, but uses decision theoretic techniques to balance the cost of a plan against the degree of goal satisfaction <ref> (Haddawy & Hanks 1992) </ref>.
Reference: <author> Hanks, S., and Weld, D. S. </author> <year> 1995. </year> <title> A domain-independent algorithm for plan adaptation. </title> <journal> Journal of Artificial Intelligence Research 319-360. </journal> <note> Available via FTP from pub/ai/ at ftp.cs.washington.edu. </note>
Reference-contexts: Much of our planning research (figure 1) has been devoted to efficiency. The tocl and topi planners helped show the potential power of the partial order plan representation (Barrett & Weld 1994a). spa introduced a new approach to case-based planning <ref> (Hanks & Weld 1995) </ref>. The fabian planner extends the least-commitment approach to the choice of which action is used to support a subgoal (Fried-man & Weld 1996). ucparse and ucreduce illustrate two alternative approaches for exploiting hierarchical task network information in the planning process (Barrett & Weld 1994b). <p> Pyrrhus (Williamson & Hanks 1994; 1996) also handles deadline goals, but uses decision theoretic techniques to balance the cost of a plan against the degree of goal satisfaction (Haddawy & Hanks 1992). The Buridan planner adopted a probabilistic model of the world in which actions could have uncertain effects <ref> (Kushmerick, Hanks, & Weld 1995) </ref>; C-Buridan (Draper, Hanks, & Weld 1994) extends this model with sensing actions and and approach to contingent action execution which builds on the approach of cnlp (Peot & Smith 1992).
Reference: <author> Ihrig, L., and Kambhampati, R. </author> <year> 1994. </year> <title> Derivation replay for partial-order planning. </title> <booktitle> In Proc. 12th Nat. Conf. on A.I. </booktitle>
Reference: <author> Jaffar, J.; Michaylov, S.; Stuckey, P.; and Yap, R. </author> <year> 1992. </year> <title> The CLP(R) Language and System. </title> <journal> ACM Transactions on Programming Languages and Systems 14(3) </journal> <pages> 339-395. </pages>
Reference: <author> Joslin, D., and Pollack, M. </author> <year> 1994. </year> <title> Least-cost flaw repair: A plan refinement strategy for partial-order planning. </title> <booktitle> In Proc. 12th Nat. Conf. on A.I. </booktitle>
Reference: <author> Joslin, D., and Pollack, M. </author> <year> 1995. </year> <title> Passive and active decision postponement in plan generation. </title> <booktitle> In Proc. 2nd European Planning Workshop. </booktitle>
Reference: <author> Kambhampati, S., and Chen, J. </author> <year> 1993. </year> <title> Relative utility of EBG based plan reuse in partial ordering vs. total ordering planning. </title> <booktitle> In Proc. 11th Nat. Conf. on A.I. </booktitle>
Reference: <author> Kambhampati, S.; Knoblock, C.; and Yang, Q. </author> <year> 1995. </year> <title> Planning as refinement search: A unified framework for evaluating design tradeoffs in partial order planning. </title> <booktitle> Artificial Intelligence 76 </booktitle> <pages> 167-238. </pages>
Reference: <author> Karloff, H. </author> <year> 1991. </year> <title> Linear Programming. </title> <address> Boston: </address> <publisher> Birkhauser. </publisher>
Reference-contexts: Several of our projects used ucpop as a base plan ner with which to explore action languages of even greater expressiveness. Safety and tidiness constraints were discussed in (Weld & Etzioni 1994). The zeno planner uses principles from logic programming (Jaf-far et al. 1992) and operations research <ref> (Karloff 1991) </ref> to handle simultaneous actions involving continuous change and occurring over extended time intervals. zeno supports metric constraints, exogenous events, domain axioms, and deadline goals with a sound and complete algorithm (Penberthy & Weld 1994; Pen-berthy 1993).
Reference: <author> Kautz, H., and Sleman, B. </author> <year> 1996. </year> <title> Pushing the envelope: Planning, propositional logic, and stochastic search. </title> <type> Personal Communication. </type>
Reference: <author> Kautz, H.; Selman, B.; Coen, M.; Ketchpel, S.; and Ramming, C. </author> <year> 1994. </year> <title> An experiment in the design of software agents. </title> <booktitle> In Proc. 12th Nat. Conf. on A.I. </booktitle>
Reference: <editor> Knoblock, C., and Levy, A., eds. </editor> <booktitle> 1995. Working Notes of the AAAI Spring Symposium on Information Gathering from Heterogeneous, Distributed Environments. </booktitle> <institution> Stanford University: </institution> <note> AAAI Press. To order a copy, contact sss@aaai.org. </note>
Reference-contexts: Encoding strategies for handling universally quantified goals was particularly time-consuming in our raps framework. Meanwhile, at ISI, the sims project (Knoblock, Arens, & Hsu 1994) had developed a database-integration softbot that used planning-based control similar to that pioneered by xii. Like xii the sims planner (called sage <ref> (Knoblock 1995) </ref>) was based on ucpop, but sage allows parallel execution which xii lacks. And at AT&T, researchers were developing the information manifold (Levy, Srivastava, & Kirk 1995) which used an elegant and compact representation of information sources, stemming from database theory.
Reference: <author> Knoblock, C.; Arens, Y.; and Hsu, C.-N. </author> <year> 1994. </year> <title> Cooperating agents for information retrieval. </title> <booktitle> In Proceedings of the Second International Conference on Cooperative Information Systems. </booktitle>
Reference-contexts: Although Simon was somewhat faster and a bit more predictable than Rodney, it was just as hard (if not harder) to knowledge engineer. Encoding strategies for handling universally quantified goals was particularly time-consuming in our raps framework. Meanwhile, at ISI, the sims project <ref> (Knoblock, Arens, & Hsu 1994) </ref> had developed a database-integration softbot that used planning-based control similar to that pioneered by xii. Like xii the sims planner (called sage (Knoblock 1995)) was based on ucpop, but sage allows parallel execution which xii lacks.
Reference: <author> Knoblock, C. </author> <year> 1990. </year> <title> Learning abstraction hierarchies for problem solving. </title> <booktitle> In Proc. 8th Nat. Conf. on A.I., </booktitle> <pages> 923-928. </pages>
Reference: <author> Knoblock, C. A. </author> <year> 1995. </year> <title> Planning, executing, </title> <booktitle> sensing, and replanning for information gathering. In Proc. 15th Int. Joint Conf. on A.I. </booktitle>
Reference-contexts: Encoding strategies for handling universally quantified goals was particularly time-consuming in our raps framework. Meanwhile, at ISI, the sims project (Knoblock, Arens, & Hsu 1994) had developed a database-integration softbot that used planning-based control similar to that pioneered by xii. Like xii the sims planner (called sage <ref> (Knoblock 1995) </ref>) was based on ucpop, but sage allows parallel execution which xii lacks. And at AT&T, researchers were developing the information manifold (Levy, Srivastava, & Kirk 1995) which used an elegant and compact representation of information sources, stemming from database theory.
Reference: <author> Krebsbach, K.; Olawsky, D.; and Gini, M. </author> <year> 1992. </year> <title> An empirical study of sensing and defaulting in planning. </title> <booktitle> In Proc. 1st Intl. Conf. on A.I. Planning Systems, </booktitle> <pages> 136-144. </pages>
Reference: <author> Krulwich, B. </author> <year> 1995. </year> <title> Bargain finder agent prototype. </title> <type> Technical report, </type> <institution> Anderson Consulting. </institution> <note> http://bf.cstar.ac.com/bf/. </note>
Reference: <author> Kushmerick, N.; Hanks, S.; and Weld, D. </author> <year> 1995. </year> <title> An Algorithm for Probabilistic Planning. </title> <booktitle> Artificial Intelligence 76 </booktitle> <pages> 239-286. </pages>
Reference-contexts: Pyrrhus (Williamson & Hanks 1994; 1996) also handles deadline goals, but uses decision theoretic techniques to balance the cost of a plan against the degree of goal satisfaction (Haddawy & Hanks 1992). The Buridan planner adopted a probabilistic model of the world in which actions could have uncertain effects <ref> (Kushmerick, Hanks, & Weld 1995) </ref>; C-Buridan (Draper, Hanks, & Weld 1994) extends this model with sensing actions and and approach to contingent action execution which builds on the approach of cnlp (Peot & Smith 1992).
Reference: <author> Kwok, C., and Weld, D. </author> <year> 1996. </year> <title> Planning to gather information. </title> <type> Technical Report 96-01-04, </type> <institution> University of Washington, Department of Computer Science and Engineering. </institution> <note> Available via FTP from pub/ai/ at ftp.cs.washington.edu. </note>
Reference-contexts: The Internet softbot, Rodney (Etzioni & Weld 1994), is controlled by xii as explained in the next section. Our most recent planner is called Occam <ref> (Kwok & Weld 1996) </ref>; it builds upon the systems described above and borrows ideas from database theory (Ull-man 1988; 1989; Rajaraman, Sagiv, & Ullman 1995; Levy, Srivastava, & Kirk 1995). Rodney Simon Info Manifold MetaCrawler BargainFinder ShopBot Occam ILA SIMS Ahoy comprehensive listing of software agent projects). <p> On the other hand, since reduced expressiveness often translates into tractability, we have borrowed some of these ideas in the design of our Occam softbot. The Occam planner is fully implemented <ref> (Kwok & Weld 1996) </ref>, and work proceeds on the execution system which uses the decision theoretic techniques developed in Pyrrhus (Williamson & Hanks 1994) to gather information in the most effective manner.
Reference: <author> Kwok, C.; Goan, T.; Etzioni, O.; and Weld, D. </author> <year> 1995. </year>
Reference-contexts: We also explored with the idea of procedural control of subgoaling behavior (in contrast with the soar-like metalevel declarative representation in Rodney. The resulting system, which we called Simon <ref> (Kwok et al. 1995) </ref>, resembled raps (Firby 1987). Although Simon was somewhat faster and a bit more predictable than Rodney, it was just as hard (if not harder) to knowledge engineer. Encoding strategies for handling universally quantified goals was particularly time-consuming in our raps framework.
Reference: <author> Simon user guide. </author> <type> Technical report, </type> <institution> University of Washington. </institution> <address> http://www.cs.washington.edu/homes/ctkwok/ simon-manual.html. </address>
Reference: <author> Laird, J.; Newell, A.; and Rosenbloom, P. </author> <year> 1987. </year> <title> SOAR: An architecture for general intelligence. </title> <booktitle> Artificial Intelligence 33(1). </booktitle>
Reference-contexts: The ucpop planner (Penberthy & Weld 1992; Weld 1994) accepts a large subset of the adl action description language (Pednault 1989). ucpop accepts universally quantified goals with nested quantifiers, conjunction, disjunction, and negation; action effects may be universally quantified and conditional. 1 From soar <ref> (Laird, Newell, & Rosenbloom 1987) </ref> via prodigy (Minton et al. 1989) we borrowed the idea of a metalevel control language for specifying search heuristics. Several of our projects used ucpop as a base plan ner with which to explore action languages of even greater expressiveness.
Reference: <author> Levy, A. Y.; Srivastava, D.; and Kirk, T. </author> <year> 1995. </year> <title> Data model and query evaluation in global information systems. </title> <journal> Journal of Intelligent Information Systems, </journal> <note> Special Issue on Networked Information Discovery and Retrieval 5 (2). </note>
Reference-contexts: Like xii the sims planner (called sage (Knoblock 1995)) was based on ucpop, but sage allows parallel execution which xii lacks. And at AT&T, researchers were developing the information manifold <ref> (Levy, Srivastava, & Kirk 1995) </ref> which used an elegant and compact representation of information sources, stemming from database theory. In many respects this representation is less expressive than the extended uwl language used by Rodney and Simon; for example, it can not represent causal effects or world-state preconditions.
Reference: <author> Maes, P., and Kozierok, R. </author> <year> 1993. </year> <title> Learning interface agents. </title> <booktitle> In Proceedings of AAAI-93. </booktitle>
Reference: <author> Maes, P. </author> <year> 1994. </year> <title> Agents that reduce work and information overload. </title> <journal> Comm. of the ACM 37(7) </journal> <pages> 31-40, 146. </pages>
Reference: <author> McAllester, D., and Rosenblitt, D. </author> <year> 1991. </year> <title> Systematic nonlinear planning. </title> <booktitle> In Proc. 9th Nat. Conf. on A.I., </booktitle> <pages> 634-639. </pages>
Reference: <author> Minton, S.; Carbonell, J. G.; Knoblock, C. A.; Kuokka, D. R.; Etzioni, O.; and Gil, Y. </author> <year> 1989. </year> <title> Explanation-based learning: A problem-solving perspective. </title> <booktitle> Artificial Intelligence 40 </booktitle> <pages> 63-118. </pages> <note> Available as technical report CMU-CS-89-103. </note>
Reference-contexts: ucpop planner (Penberthy & Weld 1992; Weld 1994) accepts a large subset of the adl action description language (Pednault 1989). ucpop accepts universally quantified goals with nested quantifiers, conjunction, disjunction, and negation; action effects may be universally quantified and conditional. 1 From soar (Laird, Newell, & Rosenbloom 1987) via prodigy <ref> (Minton et al. 1989) </ref> we borrowed the idea of a metalevel control language for specifying search heuristics. Several of our projects used ucpop as a base plan ner with which to explore action languages of even greater expressiveness. Safety and tidiness constraints were discussed in (Weld & Etzioni 1994).
Reference: <author> Minton, S. </author> <year> 1990. </year> <title> Quantitative results concerning the utility of explanation-based learning. </title> <journal> Artificial Intelligence 42(2-3). </journal>
Reference: <author> Moore, R. </author> <year> 1985. </year> <title> A Formal Theory of Knowledge and Action. </title> <editor> In Hobbs, J., and Moore, R., eds., </editor> <title> Formal Theories of the Commonsense World. </title> <address> Norwood, NJ: </address> <publisher> Ablex. </publisher>
Reference: <author> Morgenstern, L. </author> <year> 1987. </year> <title> Knowledge preconditions for actions and plans. </title> <booktitle> In Proceedings of IJCAI-87, </booktitle> <pages> 867-874. </pages>
Reference: <author> Olawsky, D., and Gini, M. </author> <year> 1990. </year> <title> Deferred planning and sensor use. In Proceedings, DARPA Workshop on Innovative Approaches to Planning, Scheduling, and Control. </title> <publisher> Morgan Kaufmann. </publisher>
Reference: <author> Pednault, E. </author> <year> 1989. </year> <title> ADL: Exploring the middle ground between STRIPS and the situation calculus. </title> <booktitle> In Proc. 1st Int. Conf. on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> 324-332. </pages>
Reference-contexts: The challenge of developing efficient planning algorithms capable of handling expressive lan guages has driven much of our planning research (figure 1). The ucpop planner (Penberthy & Weld 1992; Weld 1994) accepts a large subset of the adl action description language <ref> (Pednault 1989) </ref>. ucpop accepts universally quantified goals with nested quantifiers, conjunction, disjunction, and negation; action effects may be universally quantified and conditional. 1 From soar (Laird, Newell, & Rosenbloom 1987) via prodigy (Minton et al. 1989) we borrowed the idea of a metalevel control language for specifying search heuristics.
Reference: <author> Penberthy, J., and Weld, D. </author> <year> 1992. </year> <title> UCPOP: A sound, complete, partial order planner for ADL. </title> <booktitle> In Proc. 3rd Int. Conf. on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> 103-114. </pages> <note> Available via FTP from pub/ai/ at ftp.cs.washington.edu. </note>
Reference: <author> Penberthy, J., and Weld, D. </author> <year> 1994. </year> <title> Temporal planning with continuous change. </title> <booktitle> In Proc. 12th Nat. Conf. on A.I. </booktitle>
Reference: <author> Penberthy, J. </author> <year> 1993. </year> <title> Planning with Continuous Change. </title> <type> Ph.D. Dissertation, </type> <institution> University of Washing-ton. </institution> <note> Available as UW CSE Tech Report 93-12-01. </note>
Reference: <author> Peot, M., and Smith, D. </author> <year> 1992. </year> <title> Conditional Nonlinear Planning. </title> <booktitle> In Proc. 1st Intl. Conf. on A.I. Planning Systems, </booktitle> <pages> 189-197. </pages>
Reference-contexts: The Buridan planner adopted a probabilistic model of the world in which actions could have uncertain effects (Kushmerick, Hanks, & Weld 1995); C-Buridan (Draper, Hanks, & Weld 1994) extends this model with sensing actions and and approach to contingent action execution which builds on the approach of cnlp <ref> (Peot & Smith 1992) </ref>. A central problem in planner-based control of software agents is incomplete information (Olawsky & Gini 1990; Krebsbach, Olawsky, & Gini 1992). After all, no softbot could be familiar with the contents of all bulletin boards, FTP sites, and web pages.
Reference: <author> Peot, M., and Smith, D. </author> <year> 1993. </year> <title> Threat-removal strategies for partial-order planning. </title> <booktitle> In Proc. 11th Nat. Conf. on A.I., </booktitle> <pages> 492-499. </pages>
Reference: <author> Perkowitz, M., and Etzioni, O. </author> <year> 1995. </year> <title> Category translation: Learning to understand information on the internet. </title> <booktitle> In Proc. 15th Int. Joint Conf. on A.I. </booktitle>
Reference-contexts: Other projects pursued the dream of creating general-purpose softbots. Since one problem with Rodney was the time-consuming process of hand coding resource models, the ila learning sys tem <ref> (Perkowitz & Etzioni 1995) </ref> addressed the task of automatically learning these models by computer-directed interaction with Internet sites. Motivated by the task popularized by BargainFinder (Krul-wich 1995), the shopbot comparison shopping agent (Doorenbos, Etzioni, & Weld 1996) used ila-style learning technology to autonomously develop models of electronic vendors.
Reference: <author> Rajaraman, A.; Sagiv, Y.; and Ullman, J. </author> <year> 1995. </year> <title> Answering queries using templates with binding patterns. </title> <booktitle> In Principles of Database Systems. </booktitle>
Reference: <author> Schubert, L., and Gerevini, A. </author> <year> 1995. </year> <title> Accelerating partial order planners by improving plan and goal choices. </title> <booktitle> In Proceedings of the 7th IEEE Int. Conference on Tools with Artificial Intelligence. </booktitle>
Reference: <author> Selberg, E., and Etzioni, O. </author> <year> 1995. </year> <title> Multi-Service Search and Comparison Using the MetaCrawler. </title> <booktitle> In Proc. 4th World Wide Web Conf., </booktitle> <pages> 195-208. </pages> <note> See http://www.cs.washington.edu/research/ metacrawler. </note>
Reference-contexts: In any case, we wanted to do even better. Research led us in several directions. One tack eschewed general purpose, planner-based control as being too difficult; the resulting MetaCrawler <ref> (Selberg & Etzioni 1995) </ref> is a special purpose softbot optimized to deal with multiple search engines in parallel. Arguably, it is a huge success, handling 40,000 hits a day; but is it AI? Perhaps the MetaCrawler is best thought of as enabling technology for subsequent AI research.
Reference: <author> Shakes, J.; Langheinrich, M.; and Etzioni, O. </author> <year> 1996. </year> <title> Ahoy: The home page finder. </title> <type> Technical report, </type> <institution> University of Washington. </institution> <note> See http://www.cs.washington.edu/research/ahoy. </note>
Reference-contexts: Arguably, it is a huge success, handling 40,000 hits a day; but is it AI? Perhaps the MetaCrawler is best thought of as enabling technology for subsequent AI research. For example, the ahoy homepage finder <ref> (Shakes, Langheinrich, & Etzioni 1996) </ref> uses a heuristic evaluation function to filter MetaCrawler output for URLs likely to rep resent the type of page sought by the user.
Reference: <author> Smith, D., and Peot, M. </author> <year> 1993. </year> <title> Postponing threats in partial-order planning. </title> <booktitle> In Proc. 11th Nat. Conf. on A.I., </booktitle> <pages> 500-506. </pages>
Reference: <author> Smith, D., and Peot, M. </author> <year> 1996. </year> <title> Suspending recurison in causal link planning. </title> <booktitle> In Proc. 3rd Intl. Conf. on A.I. Planning Systems. </booktitle>
Reference: <author> Stefik, M. </author> <year> 1981a. </year> <title> Planning and meta-planning (MOL-GEN: </title> <booktitle> Part 2). Artificial Intelligence 14(2) </booktitle> <pages> 141-169. </pages>
Reference: <author> Stefik, M. </author> <year> 1981b. </year> <title> Planning with constraints (MOL-GEN: </title> <booktitle> Part 1). Artificial Intelligence 14(2) </booktitle> <pages> 111-139. </pages>
Reference: <author> Tate, A. </author> <year> 1977. </year> <title> Generating project networks. </title> <booktitle> In Proc. 5th Int. Joint Conf. on A.I., </booktitle> <pages> 888-893. </pages>
Reference: <author> Ullman, J. </author> <year> 1988. </year> <title> Database and knowledge-base systems. In Database and knowledge-base systems, volume 1. </title> <publisher> Computer Science Press. </publisher>
Reference: <author> Ullman, J. </author> <year> 1989. </year> <title> Database and knowledge-base systems. In Database and knowledge-base systems, volume 2. </title> <publisher> Computer Science Press. </publisher>
Reference: <author> Veloso, M. </author> <year> 1994. </year> <title> Flexible strategy learning: Analogical replay of problem solving episodes. </title> <booktitle> In Proc. 12th Nat. Conf. on A.I., </booktitle> <pages> 595-600. </pages>
Reference: <author> Weld, D., and Etzioni, O. </author> <year> 1994. </year> <title> The first law of robotics (a call to arms). </title> <booktitle> In Proc. 12th Nat. Conf. </booktitle> <institution> on A.I. </institution> <note> Available via FTP from pub/ai/ at ftp.cs.washington.edu. </note>
Reference-contexts: Given the metaphor of "Internet as an information super-highway," a softbot becomes the competent chauffeur who knows every road and quietly performs routine errands. If it is to embody the ideal cyber-chauffeur, a softbot must satisfy several interrelated criteria <ref> (Etzioni & Weld 1994) </ref>: * Integrated: Users dislike being forced to remember the details of particular databases or the wide and growing variety of Internet services and utilities in order to use them effectively. Instead, the softbot should provide an integrated interface to all such services. * Goal oriented. <p> Several of our projects used ucpop as a base plan ner with which to explore action languages of even greater expressiveness. Safety and tidiness constraints were discussed in <ref> (Weld & Etzioni 1994) </ref>. <p> The Buridan planner adopted a probabilistic model of the world in which actions could have uncertain effects (Kushmerick, Hanks, & Weld 1995); C-Buridan <ref> (Draper, Hanks, & Weld 1994) </ref> extends this model with sensing actions and and approach to contingent action execution which builds on the approach of cnlp (Peot & Smith 1992). A central problem in planner-based control of software agents is incomplete information (Olawsky & Gini 1990; Krebsbach, Olawsky, & Gini 1992). <p> The Internet softbot, Rodney <ref> (Etzioni & Weld 1994) </ref>, is controlled by xii as explained in the next section. <p> The model manager is a specialized database that stores everything that Rodney has observed about the world. The most novel aspect of the model manager is its capacity for local closed-world reasoning <ref> (Etzioni, Golden, & Weld 1994) </ref>. Closed-world reasoning | the ability to draw conclusions based on the assumption that one knows about the existence of all relevant objects | is essential for goal-directed behavior (Ginsberg 1987). <p> Algorithms from constraint satisfaction and operations research should be integrated with modern planning representations (Penberthy & Weld 1994; Joslin & Pollack 1995; Kautz & Sleman 1996). New approaches for reasoning about incomplete information and sensing actions should be developed; local closed world reasoning algorithms <ref> (Etzioni, Golden, & Weld 1994) </ref> should be extended to handle worlds where exogenous change is common. Probabilistic approaches must be investigated to a greater extent. Tractable applications of decision theory have great promise for evaluating the value of information and determining the best information sources to query.
Reference: <author> Weld, D. </author> <year> 1994. </year> <title> An introduction to least-commitment planning. </title> <journal> AI Magazine 27-61. </journal> <note> Available via FTP from pub/ai/ at ftp.cs.washington.edu. </note>
Reference-contexts: Given the metaphor of "Internet as an information super-highway," a softbot becomes the competent chauffeur who knows every road and quietly performs routine errands. If it is to embody the ideal cyber-chauffeur, a softbot must satisfy several interrelated criteria <ref> (Etzioni & Weld 1994) </ref>: * Integrated: Users dislike being forced to remember the details of particular databases or the wide and growing variety of Internet services and utilities in order to use them effectively. Instead, the softbot should provide an integrated interface to all such services. * Goal oriented. <p> Several of our projects used ucpop as a base plan ner with which to explore action languages of even greater expressiveness. Safety and tidiness constraints were discussed in <ref> (Weld & Etzioni 1994) </ref>. <p> The Buridan planner adopted a probabilistic model of the world in which actions could have uncertain effects (Kushmerick, Hanks, & Weld 1995); C-Buridan <ref> (Draper, Hanks, & Weld 1994) </ref> extends this model with sensing actions and and approach to contingent action execution which builds on the approach of cnlp (Peot & Smith 1992). A central problem in planner-based control of software agents is incomplete information (Olawsky & Gini 1990; Krebsbach, Olawsky, & Gini 1992). <p> The Internet softbot, Rodney <ref> (Etzioni & Weld 1994) </ref>, is controlled by xii as explained in the next section. <p> The model manager is a specialized database that stores everything that Rodney has observed about the world. The most novel aspect of the model manager is its capacity for local closed-world reasoning <ref> (Etzioni, Golden, & Weld 1994) </ref>. Closed-world reasoning | the ability to draw conclusions based on the assumption that one knows about the existence of all relevant objects | is essential for goal-directed behavior (Ginsberg 1987). <p> Algorithms from constraint satisfaction and operations research should be integrated with modern planning representations (Penberthy & Weld 1994; Joslin & Pollack 1995; Kautz & Sleman 1996). New approaches for reasoning about incomplete information and sensing actions should be developed; local closed world reasoning algorithms <ref> (Etzioni, Golden, & Weld 1994) </ref> should be extended to handle worlds where exogenous change is common. Probabilistic approaches must be investigated to a greater extent. Tractable applications of decision theory have great promise for evaluating the value of information and determining the best information sources to query.
Reference: <author> Wilkins, D. </author> <year> 1988a. </year> <title> Causal reasoning in planning. </title> <booktitle> Computational Intelligence 4(4) </booktitle> <pages> 373-380. </pages>
Reference: <author> Wilkins, D. E. </author> <year> 1988b. </year> <title> Practical Planning. </title> <address> San Mateo, CA: </address> <publisher> Morgan Kaufmann. </publisher>
Reference: <author> Wilkins, D. </author> <year> 1990. </year> <title> Can AI planners solve practical problems? Computational Intelligence 6(4) </title> <type> 232-246. </type>
Reference: <author> Williamson, M., and Hanks, S. </author> <year> 1994. </year> <title> Optimal planning with a goal-directed utility model. </title> <booktitle> In Proc. 2nd Intl. Conf. on A.I. Planning Systems. </booktitle>
Reference-contexts: The Occam planner is fully implemented (Kwok & Weld 1996), and work proceeds on the execution system which uses the decision theoretic techniques developed in Pyrrhus <ref> (Williamson & Hanks 1994) </ref> to gather information in the most effective manner. The Future As the Internet environment grows ever more complex, users will demand increasingly flexible agents to assist them. While special purpose agents will always have a role, the future belongs to softbots with general-purposed deliberative control.
Reference: <author> Williamson, M., and Hanks, S. </author> <year> 1996. </year> <title> Flaw selection strategies for value-directed planning. </title> <booktitle> In Proc. 3rd Intl. Conf. on A.I. Planning Systems. </booktitle>
References-found: 76

