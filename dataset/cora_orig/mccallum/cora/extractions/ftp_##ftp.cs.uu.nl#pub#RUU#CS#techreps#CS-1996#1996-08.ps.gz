URL: ftp://ftp.cs.uu.nl/pub/RUU/CS/techreps/CS-1996/1996-08.ps.gz
Refering-URL: http://www.cs.ruu.nl/docs/research/publication/TechList1.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: e-mail petr@cs.ruu.nl, sepanta@laas.fr  
Title: Multi-Level Path Planning for Nonholonomic Robots using Semi-Holonomic Subsystems  
Author: Sepanta Sekhavat Petr Svestka J.-P. Laumond Mark H. Overmars 
Address: Netherlands  
Affiliation: (1) LAAS/CNRS, Toulouse, France and (2) Department of Computer Science, Utrecht University, the  
Abstract: We present a new and complete multi-level approach for solving path planning problems for nonholonomic robots. At the first level a path is found that disrespects (some of) the nonholonomic constraints. At each next level a new path is generated, by transformation of the path generated at the previous level. The transformation is such that more nonholonomic constraints are respected than at the previous level. At the final level all nonholonomic constraints are respected. We present two techniques for these transformations. The first, which we call the Pick and Link technique, repeatedly picks pieces from the given path, and tries to replace these by more feasible ones. The second technique restricts the free configuration space to a "tube" around the given path, and a roadmap, capturing the free space connectivity within this tube, is constructed by the Probabilistic Path Planner. From this roadmap we retrieve a new, more feasible, path. In the intermediate levels we plan paths for what we refer to as semi-holonomic subsystems. Such a system is obtained by taking the real (physical) system, and removing some of its nonholonomic constraints. In this paper, we apply the scheme to car-like robots pulling trailers, that is, tractor-trailer robots. In this case, the real system is the tractor-trailer robot, and the ignored constraints in the semi-holonomic subsystems are the kinematic ones on the trailers. These are the constraints of rolling without slipping, on the trailers wheels. Experimental results are given that illustrate the time-efficiency of the resulting planner. In particular, we show that using the multi-level scheme leads to significantly better performance (in computation time and path shape) than direct transformations to feasible paths.
Abstract-found: 1
Intro-found: 1
Reference: [BL93] <author> J. Barraquand and J.-C. Latombe. </author> <title> Nonholonomic multibody mobile robots: Controllability and motion planning in the presence of obstacles. </title> <journal> Algorithmica, </journal> <volume> 10 </volume> <pages> 121-155, </pages> <year> 1993. </year>
Reference-contexts: For a given system, the first question we have to answer is : can a robot reach a given goal, while avoiding collisions with the obstacles of its environment? This is the decision problem. For locally controllable systems <ref> [BL93] </ref>, the existence of a feasible path between two configurations in the interior of the free configuration space CS free is equivalent to the existence of any path between them in the interior of CS free . <p> The multi-level algorithm proposed in this paper can in fact been seen as a generalisation of this two level scheme. Barraquand and Latombe <ref> [BL93] </ref> propose a heuristic brute-force approach to motion planning for tractor-trailer robots. It consists of heuristically building and searching a graph whose nodes are small axis-parallel cells in configuration space. <p> represented by n + 1 equations of type (0 i n) : E i : F i (c; _c) = 0 These can be transformed to a non-integrable system of equations of the form : _c = G (c; u) where u is a control vector of dimension 2 (see <ref> [BL93] </ref>). For such a system we can define n + 1 fictive systems : S 0 ; : : : ; S n . S i is defined as the system respecting the nonholonomic constraints represented by the equations E 0 to E i .
Reference: [BLC93] <author> A. Bellache, J.P. Laumond, and M. Chyba. </author> <booktitle> In Proc. 32nd IEEE Conf. on Decision and Control, </booktitle> <month> December </month> <year> 1993. </year>
Reference-contexts: So far there exists no general algorithm for planning the motions of any nonholonomic system, that guarantees to reach a given goal. The only existing results deal with approximation methods (i.e., methods that guarantee to reach a neighbourhood of the goal, e.g., <ref> [LS90, BLC93] </ref>) and exact methods for special classes of nonholonomic systems (e.g.,[LS90, MS90, RFLM93]); fortunately, these special classes contain several real robot models.
Reference: [Fer] <author> P. Ferbach. </author> <type> Technical report, </type> <institution> Electricite de France. SDM Dept., Chatou, France. </institution>
Reference-contexts: Hence the planner is inexact. Nevertheless, in many cases the method produces nice paths (with minimum number of reversals) for car-like robots and tractors pulling one trailer. For systems of higher dimension however it becomes too time consuming. Ferbach <ref> [Fer] </ref> builds on this method in his progressive constraints algorithm in order to solve the problem in higher dimensions. First a geometric path is computed. Then the nonholonomic constraints are introduced progressively in an iterative algorithm.
Reference: [FGL93] <author> C. Fernandes, L. Gurvits, and Z.X. Li. </author> <title> Optimal nonholonomic motion planning for a falling cat. </title> <editor> In Z. Li and J.F. Canny, editors, </editor> <title> Nonholonomic Motion Planning, </title> <address> Boston, USA, 1993. </address> <publisher> Kluwer Academic Publishers. </publisher>
Reference-contexts: The planner introduced in [LJTM94] replaces the collision-free geometric path by a sequence of Reeds and Shepp paths. This complete and fast planner was extended to the case of Hilare with one and two trailers, using near optimal paths numerically computed <ref> [LSV94, FGL93] </ref> (so far the exact optimal paths for tractor-trailer system in absence of obstacle are unknown). The resulting planners are however neither complete nor time-efficient. The same scheme was used for systems that can be put into the chained form.
Reference: [Gie93] <author> G.-J. Giezeman. </author> <title> PlaGeo|A Library for Planar Geometry. </title> <institution> Dept. Comput. Sci., Utrecht Univ., </institution> <address> Utrecht, the Netherlands, </address> <month> August </month> <year> 1993. </year>
Reference: [K SLO95] <author> L. Kavraki, P. Svestka, J.-C. Latombe, and M. Overmars. </author> <title> Probabilistic roadmaps for path planning in high dimensional configuration spaces. </title> <note> To appear in IEEE Trans. </note> <institution> Robot. Autom., </institution> <year> 1995. </year>
Reference: [Lau93] <author> J.-P. Laumond. </author> <title> Singularities and topological aspects in nonholonomic motion planning. </title> <editor> In Zexiang Li and J.F. Canny, editors, </editor> <booktitle> Nonholonomic Motion Planning, </booktitle> <pages> pages 149-199. </pages> <publisher> Kluwer Academic Publishers, </publisher> <year> 1993. </year>
Reference: [LJTM94] <author> Jean-Paul Laumond, Paul E. Jacobs, Michel Tax, and Richard M. Murray. </author> <title> A motion planner for nonholonomic mobile robots. </title> <journal> IEEE Trans. Robot. Autom., </journal> <volume> 10(5), </volume> <month> October </month> <year> 1994. </year>
Reference-contexts: robots (<ref> [LJTM94] </ref>), using Reeds and Shepp works on optimal control to approximate the geometric path. In [RS91] Reeds and Shepp presented a finite family of paths composed by of line segments and circle arcs containing a length-optimal path linking any two configurations (in absence of obstacles). The planner introduced in [LJTM94] replaces the collision-free geometric path by a sequence of Reeds and Shepp paths.
Reference: [LS90] <author> G. Lafferriere and H. J. Sussmann. </author> <title> Motion planning for controllable systems without drift: A preliminary report. </title> <type> Technical Report SYSCON-90-04, </type> <institution> Rutgers Center for Systems and Control, </institution> <year> 1990. </year>
Reference-contexts: So far there exists no general algorithm for planning the motions of any nonholonomic system, that guarantees to reach a given goal. The only existing results deal with approximation methods (i.e., methods that guarantee to reach a neighbourhood of the goal, e.g., <ref> [LS90, BLC93] </ref>) and exact methods for special classes of nonholonomic systems (e.g.,[LS90, MS90, RFLM93]); fortunately, these special classes contain several real robot models.
Reference: [LSV94] <author> J.P. Laumond, S. Sekhavat, and M. Vaisset. </author> <title> Collision-free motion planning for a nonholonomic mobile robot with trailers. </title> <booktitle> In 4th IFAC Symp. on Robot Control, </booktitle> <pages> pages 171-177, </pages> <address> Capri, Italy, </address> <month> September </month> <year> 1994. </year> <month> 25 </month>
Reference-contexts: The planner introduced in [LJTM94] replaces the collision-free geometric path by a sequence of Reeds and Shepp paths. This complete and fast planner was extended to the case of Hilare with one and two trailers, using near optimal paths numerically computed <ref> [LSV94, FGL93] </ref> (so far the exact optimal paths for tractor-trailer system in absence of obstacle are unknown). The resulting planners are however neither complete nor time-efficient. The same scheme was used for systems that can be put into the chained form.
Reference: [Luz94] <author> D. Luzeaux. </author> <title> Parking maneuvers and trajectory tracking. </title> <booktitle> In Proc. Int. Workshop on Advanced Motion Control, </booktitle> <address> Berkeley, CA, USA, </address> <year> 1994. </year>
Reference-contexts: Besides, there is no discretization of the space and the elementary paths are exact (not computed by numerical integration). Apart from the above general nonholonomic motion planners, some specific planners have been developed for special cases. Dealing with tractor-trailer problem for example, we can cite <ref> [Luz94] </ref> in which a rule-based incremental control was applied to the special problem of parallel parking. Another example is [SSB94] in which the goal is reached approximately (there is no control on the final position of trailers).
Reference: [MS90] <author> R. Murray and S. Sastry. </author> <title> Steering nonholonomic systems using sinusoids. </title> <booktitle> In Proc. IEEE Conf. on Decision and Control, </booktitle> <pages> pages 2097-2101, </pages> <year> 1990. </year>
Reference: [RFLM93] <author> P. Rouchon, M. Fliess, J. Levine, and P. Martin. </author> <title> Flatness and motion planning. </title> <booktitle> In Proc. European Control Conference, </booktitle> <pages> pages 1518-1522, </pages> <year> 1993. </year>
Reference: [RS91] <author> J.A. Reeds and R.A. Shepp. </author> <title> Optimal paths for a car that goes both forward and backward. </title> <journal> Pacific Journal of Mathematics, </journal> <volume> 145(2) </volume> <pages> 367-393, </pages> <year> 1991. </year>
Reference-contexts: Another approach was developed in LAAS for car-like robots ([LJTM94]), using Reeds and Shepp works on optimal control to approximate the geometric path. In <ref> [RS91] </ref> Reeds and Shepp presented a finite family of paths composed by of line segments and circle arcs containing a length-optimal path linking any two configurations (in absence of obstacles). The planner introduced in [LJTM94] replaces the collision-free geometric path by a sequence of Reeds and Shepp paths.
Reference: [SL91] <author> H.J. Sussmann and W. Liu. </author> <title> Limits of highly oscillatory controls and the approximation of general paths by admissible trajectories. </title> <type> Technical Report SYSCON-91-02, </type> <institution> Rutgers Center for Systems and Control, </institution> <month> February </month> <year> 1991. </year>
Reference-contexts: Such a combination is possible through subtle topological arguments ([Lau93]). Treating the holonomic constraints separately from the nonholonomic ones is nowadays almost a "classical" approach. It has resulted in planners for various nonholonomic robots ([LJTM94], [S SLO95], <ref> [SL91] </ref>). The idea is that the problem is solved in two separate steps. In the first, a collision-free path is computed without taking into account the nonholonomic constraints. Subsequently, in the second step, this geometric path is transformed into one that respects the non-holonomic constraints. <p> Then they use the obtained path to build a feasible and collision-free one. So in the first phase the decision problem is solved, and only in the second phase the nonholonomic constraints are taken into account. 2 The first general result was presented by Sussmann and Liu <ref> [SL91] </ref>, who proposed an algo-rithm constructing a sequence of feasible paths that uniformly converges to any given path. This guarantees that one can choose a feasible path arbitrarily close to a given collision-free path. The method uses high frequency sinusoidal inputs.
Reference: [SL96] <author> S. Sekhavat and J.P. Laumond. </author> <title> Topological property of trajectories computed from sinusoidal inputs for nonholonomic chained form systems. </title> <booktitle> In Proc. IEEE Internat. Conf. on Robotics and Automation, </booktitle> <month> April </month> <year> 1996. </year>
Reference-contexts: The same scheme was used for systems that can be put into the chained form. For these systems, Tilbury et al. [TMS93] proposed different controls to steer the system from one configuration to another, in absence of obstacles. Sekhavat and Laumond prove in <ref> [SL96] </ref> that the sinusoidal inputs proposed by Tilbury et al. can be used in a complete algorithm transforming any collision-free path to a collision-free and feasible one. <p> Thanks to the topological property of the local planner, when the final configuration tends to the initial one, the length of the local path linking them tends to zero. This guarantees the convergence of the algorithm. For a serious demonstration see <ref> [SL96] </ref>. Strong points of this technique are its completeness and relative time-efficiency in cluttered regions of CS. The paths produced are however often very long and "ugly", and therefore require significant smoothing (See also Section 6.4). <p> The completeness of both the PL algorithm as PPP using ` is guaranteed. For proofs we refer to, respectively, <ref> [SL96] </ref> and [ SO95]. 6 Application to tractors with trailers In this section we describe how the multi-level planning scheme can be applied to robots consisting of a car-like tractor, towing a number of trailers.
Reference: [ SO95] <author> P. Svestka and M. Overmars. </author> <title> Motion planning for car-like robots using a probabilistic learning approach. </title> <note> To appear in Intern. Journal of Rob. Research, </note> <year> 1995. </year>
Reference-contexts: The completeness of both the PL algorithm as PPP using ` is guaranteed. For proofs we refer to, respectively, [SL96] and <ref> [ SO95] </ref>. 6 Application to tractors with trailers In this section we describe how the multi-level planning scheme can be applied to robots consisting of a car-like tractor, towing a number of trailers. <p> This local planner is quite a cheap local planner, in the sense that construction and collision checking of the local paths can be done very efficiently. Furthermore, it guarantees probabilistic completeness of PPP (See also <ref> [ SO95] </ref>). 6.2.2 Sinusoidal planner for tractor-trailers Briefly, the principle of the sinusoidal local planner is to transform the state coordinates into the chained form and to apply sinusoidal inputs to the transformed system.
Reference: [Sor93] <author> O.J. Sordalen. </author> <title> Conversion of a car with n trailers into a chained form. </title> <journal> In Proc. IEEE Journal of Robotics and Automation, </journal> <pages> pages 1382-13874, </pages> <year> 1993. </year>
Reference-contexts: For the classical system of tractor with n trailers, a general method of transformation into chained form is given by Sordalen <ref> [Sor93] </ref>. 11 For chained form systems, there exists several types of control that bring them from one point to another : piecewise constant inputs, polynomial inputs or sinusoidal inputs [TMS93]. We need one of the corresponding local planners that respects the topological property.
Reference: [SSB94] <author> A. Sahai, M. Secor, and L. Bushnell. </author> <title> An obstacle avoidance algorithm for a car pulling many trailers with kingpin hitching. </title> <type> Technical Report UCB/ERL M94/10, </type> <institution> University of California, Berkeley, </institution> <address> CA, USA, </address> <month> March </month> <year> 1994. </year>
Reference-contexts: Apart from the above general nonholonomic motion planners, some specific planners have been developed for special cases. Dealing with tractor-trailer problem for example, we can cite [Luz94] in which a rule-based incremental control was applied to the special problem of parallel parking. Another example is <ref> [SSB94] </ref> in which the goal is reached approximately (there is no control on the final position of trailers). This work concerns only cases in which a path without reversals between the extremal configurations exists. <p> At first glance, the method shows some similarities with the first planning step of our multi-level planner for tractor-trailer robots, as presented in this paper. However, conceptually there are again fundamental differences. In <ref> [SSB94] </ref>, the planning is done only for the front car, and the trailers are ignored. The trailers just follow the car with feasible motions, induced by their nonholonomic constraints.
Reference: [S SLO95] <author> S. Sekhavat, P. Svestka, J.P. Laumond, and M. H. Overmars. </author> <title> Probabilistic path planning for tractor-trailer robots. </title> <type> Technical Report 96007, </type> <institution> LAAS-CNRS, Toulouse, France, </institution> <year> 1995. </year>
Reference-contexts: Such a combination is possible through subtle topological arguments ([Lau93]). Treating the holonomic constraints separately from the nonholonomic ones is nowadays almost a "classical" approach. It has resulted in planners for various nonholonomic robots ([LJTM94], <ref> [S SLO95] </ref>, [SL91]). The idea is that the problem is solved in two separate steps. In the first, a collision-free path is computed without taking into account the nonholonomic constraints. Subsequently, in the second step, this geometric path is transformed into one that respects the non-holonomic constraints. <p> Local planners for tractor-trailer robots however tend to be much more time-consuming, which makes direct use of PPP less attractive. In [ SV95] a local planner is presented and integrated into PPP, that uses exact closed form solutions for the kinematic parameters of a tractor-trailer robot. In <ref> [S SLO95] </ref> the local planner using sinusoidal inputs for chained form systems is used. For practical use, both local planners appear to be too expensive for capturing the connectivity of CS free . For this reason, in [S SLO95] a two-level scheme is proposed, where at the first level the portion <p> In <ref> [S SLO95] </ref> the local planner using sinusoidal inputs for chained form systems is used. For practical use, both local planners appear to be too expensive for capturing the connectivity of CS free . For this reason, in [S SLO95] a two-level scheme is proposed, where at the first level the portion of CS free is reduced to a neighbourhood of a geometric path, and at the second level a (real) solution is searched for within this neighbourhood.
Reference: [ SV95] <author> P. Svestka and J. Vleugels. </author> <title> Exact motion planning for tractor-trailer robots. </title> <booktitle> In Proc. IEEE Internat. Conf. on Robotics and Automation, </booktitle> <pages> pages 2445-2450, </pages> <address> Nagoya, Japan, </address> <year> 1995. </year>
Reference-contexts: Local planners for tractor-trailer robots however tend to be much more time-consuming, which makes direct use of PPP less attractive. In <ref> [ SV95] </ref> a local planner is presented and integrated into PPP, that uses exact closed form solutions for the kinematic parameters of a tractor-trailer robot. In [S SLO95] the local planner using sinusoidal inputs for chained form systems is used.
Reference: [TLM + 92] <author> D. Tilbury, J.-P. Laumond, R. Murray, S. Sastry, and G. Walsh. </author> <title> Steering car-like systems with trailers using sinusoids. </title> <booktitle> In Proc. 1992 IEEE Int. Conf. Robotics and Automation, </booktitle> <pages> pages 1993-1998, </pages> <address> Nice, France, </address> <month> May </month> <year> 1992. </year>
Reference-contexts: This guarantees that one can choose a feasible path arbitrarily close to a given collision-free path. The method uses high frequency sinusoidal inputs. Though this approach is general, it is quite hard to implement in practice. In <ref> [TLM + 92] </ref>, Tilbury et al exploit this idea for a mobile robot with two trailers. Experimental results however show that the approach cannot be applied in practice, mainly because the convergence is very slow.
Reference: [TMS93] <author> D. Tilbury, R. Murray, and S. Sastry. </author> <title> Trajectory generation for the n-trailer problem using goursat normal form. </title> <type> Technical Report UCB/ERL M93/12, </type> <institution> Univ. California, Berkeley, </institution> <address> CA, USA, </address> <month> February </month> <year> 1993. </year> <month> 26 </month>
Reference-contexts: The resulting planners are however neither complete nor time-efficient. The same scheme was used for systems that can be put into the chained form. For these systems, Tilbury et al. <ref> [TMS93] </ref> proposed different controls to steer the system from one configuration to another, in absence of obstacles. Sekhavat and Laumond prove in [SL96] that the sinusoidal inputs proposed by Tilbury et al. can be used in a complete algorithm transforming any collision-free path to a collision-free and feasible one. <p> For the classical system of tractor with n trailers, a general method of transformation into chained form is given by Sordalen [Sor93]. 11 For chained form systems, there exists several types of control that bring them from one point to another : piecewise constant inputs, polynomial inputs or sinusoidal inputs <ref> [TMS93] </ref>. We need one of the corresponding local planners that respects the topological property.
References-found: 23

