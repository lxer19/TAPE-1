URL: http://www.cs.colorado.edu/~grunwald/LowPowerWorkshop/FinalPapers/PS/furber-man.ps
Refering-URL: http://www.cs.colorado.edu/~grunwald/LowPowerWorkshop/agenda.html
Root-URL: http://www.cs.colorado.edu
Title: PowerSaving Features in AMULET2e  
Author: S.B. Furber, J.D. Garside and S. Temple. 
Address: Oxford Road, Manchester M13 9PL, UK.  
Affiliation: Department of Computer Science, The University of Manchester,  
Abstract: AMULET2e is a self-timed embedded system controller which is software compatible with the ARM6 microprocessor. Its design incorporates a number of power-saving features which can be disabled under software control, thereby allowing direct measurement of their efficacy. In this paper we review three of these features: two exploit the high frequency of sequential memory accesses to bypass unnecessary circuit functions in the main cache and the branch target cache; the third exploits the ability of clockless circuits to become completely inert when idle. These features are described and measurements on their effectiveness are presented. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Furber, </author> <title> S.B., ARM System Architecture , Addison Wesley Longman, </title> <note> 1996. ISBN 0-201-40352-8. </note>
Reference-contexts: The AMULET microprocessors, developed at the University of Manchester, are self-timed implementations of the ARM architecture <ref> [1] </ref>. They were designed to demonstrate the feasibility and desirability of self-timed design.
Reference: [2] <author> Garside, J.D., Temple, S. and Mehra, R., </author> <title> The AMULET2e Cache System, </title> <booktitle> Proc. Async'96 , Aizu-Wakamatsu, </booktitle> <pages> 208-217. </pages>
Reference-contexts: delay to ensure that timing requirements are met, with different memory regions being configurable to different bus widths and access timings (all expressed in terms of the reference delay). 3 Memory subsystem The memory system comprises 4 Kbytes of RAM which can be memory mapped or used as a cache <ref> [2] </ref>. It is a composition of four identical 1Kbyte blocks, each having an associated 64-entry tag CAM. The CAM and RAM stages are pipelined so that up to two memory accesses may be in progress in the cache at any one time.
Reference: [3] <author> Mehra, R. and Garside, J.D., </author> <title> A Cache Line Fill Circuit for a Micropipelined Asynchronous Micro processor, </title> <journal> TCCA Newsletter , IEEE Computer Society, </journal> <month> October </month> <year> 1995. </year>
Reference-contexts: The cache is 64-way associative with four 32-bit words per line. It is write-through (for simplicity) and does not allocate on a write miss. Line fetch is performed with the addressed-word first and is non-blocking, allowing hit-under-miss, the line fetch being a separate, asynchronous task <ref> [3] </ref>. 3.1 Cache power-efficiency The organisation of the cache, based upon a highly associative cache with a segmented CAM tag store, follows the practice of many of the clocked ARM CPUs and is justified from a power-efficiency perspective as follows: the high associativity minimises misses, thereby minimising the high energy cost
Reference: [4] <author> Morris, D. and Ibbett, R.N., </author> <title> The MU5 Computer System , Macmillan, </title> <address> New York, </address> <year> 1979. </year> <note> Feature Dhrystone 2.1 Sort MIPS MIPS/W MIPS MIPS/W BTC on +5% +0% +22% +15% BTC powersave +5% +3% +25% +22% CAM bypass +6% +15% +5% +14% All on +11% +18% +32% +35% Table 1: Experimental results Idle condition Idd (mA) Halt disabled 50 Halt enabled; centisecond timer interrupts 1 Halt enabled; interrupts disabled 0.001 Table 2: AMULET2e core idle currents </note>
Reference-contexts: For simplicity, in AMULET2 the BTC always predicts a known branch as taken; despite this it more than halves the number of erroneously prefetched instructions in typical code Interestingly, this unit is similar to the jump trace buffer used on the MU5 mainframe computer <ref> [4] </ref> developed at the University of Manchester between 1969 and 1974; this too was an asynchronous machine. 4.1 BTC power-efficiency In many embedded controller applications the processing power needs only to be adequate, whereas the electrical power consumption must be minimal.
References-found: 4

