URL: http://www.loria.fr/tex/divers/dvi_etc96_June22.ps.gz
Refering-URL: http://www.loria.fr/tex/divers.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: lcs@topo.matups.fr  
Title: DVI-based Electronic Publication developments will play a major role: notably universal availability of CM and
Author: Laurent Siebenmann 
Keyword: Adobe Acrobat's portable document format "pdf".  
Note: Several other  electronic publication in the mathematical sciences. This prospective "dvi etc" posting format will be briefly measured against other formats such as  E-print: June 1996 [Master posting: ftp://matups.math.u-psud.fr/pub/TeX+/e-PubTools.dir/dvi etc.dvi:  
Address: F-91405, Orsay, France  
Affiliation: Mateematiques, B^aatiment 425, Universitee de Paris-Sud,  
Abstract: The first is a set of small auxiliary `atomic' fonts to complement Knuth's (atomic!) Computer Modern CM fonts so as to serve all European languages with a Latin (non-Cyrillic) alphabet. Here is a (last?) opportunity to make Knuth's original CM fonts part of an efficient and durable international system. Only in the English speaking world, would these fonts serve directly during T E X typesetting; beyond it, typesetting would use virtual fonts with composite accented characters based on these atomic fonts, which in turn would undoubtedly be extracted from the rather comprehensive EC font system; then a utility such as Peter Breitenlohner's "dvicopy" would convert the resulting "dvi" files to the more portable form using only the atomic fonts. The strong points of this scheme are unrivaled efficiency, and compatibility with the core of T E X users who have no reason to abandon Knuth's CM fonts. The second proposal is the notion of a `multi-standard' graphics object for inclusion in a T E X document. This notion was initially designed to solve the old problem of providing portable previewing of "eps" (EPS = Encapsulated PostScript) graphics. But it promises much wider compatibility: a single "dvi"- based posting should be able to serve all the multifarious graphics formats, and all the abilities and debilities of T E X viewers and printers in all computer environments. At least one programmer of a "dvi" viewer has been developing very much the sort of mechanism I recommend, namely Hippocrates Sendoukas in his viewer "DVIWin" for PCs. The near coincidence of our independently thought-out ideas is a good omen suggesting that in the present instance there may be essentially one way to skin the cat neatly. The third proposal can be viewed either as a very general approach to implementing any standard for special commands or, alternatively, as a way to achieve "dvi" portability without such a standard. On each of the major platforms, one creates a freely available utility program converting a (candidate) standard for special's to the native format of any selected T E X implementation on that platform. The onus of implementation of a standard can thereby be entirely shifted from the implementors of T E X screen and printer drivers to the publishers of "dvi"-based postings. A low profile utility project will be discussed in some detail. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> Electronic Math Journal List, </institution> <note> archive at http://math.albany.edu:8800/hm/emj/; wais index at http : // nyjm . albany .edu : 8000/ SF/ emjsearch.html; this list was organized by Mark Steinberger and the author. </note>
Reference: [2] <institution> Math font discussion list, </institution> <note> math-font-discuss@ cogs.sussex.ac.uk; see its archives on ftp cogs. sussex.ac.uk; this list was organized by Alan Jeffrey, alanje@cogs.susx.ac.uk). </note>
Reference-contexts: The window of opportunity for acting on the proposal above is opening up with the approaching completion by Joorg Knappen of the EC fonts. The main discussion of this proposal took place on the Math Fonts list <ref> [2] </ref> from March through May 1994; hopefully its archive will remain available.
Reference: [3] <author> D. Knuth, </author> <title> "T E X the program", </title> <publisher> Addison Wes-ley, </publisher> <year> 1986. </year>
Reference-contexts: On the other hand, this "dvi" format, which was designed by Donald Knuth's collaborator David Fuchs, has one signal advantage. It is by far the simplest format for the representation of T E X output; indeed it is presented in <ref> [3] </ref> along with helpful commentary in less than 10 pages. Alternative formats like "ps", and "pdf" are easily ten times as complex. Therefore "dvi" is comparatively easy to interpret and transform.
Reference: [4] <author> Joorg Knappen, </author> <title> "Release 1.2 of the dc-fonts: Improvements of the European letters and first release of the text companion symbols", </title> <month> TUGboat 16(4) (December, </month> <year> 1995), </year> <pages> pp. 381-387. </pages>
Reference-contexts: Even the basic EC font encoding (the Cork norm) with numerous accented letters is not sufficient for the Latvians, Welsh and others. There are quite simply more than 256 characters in all. 3 Laurent Siebenmann The auxiliary text font series "tc" of the EC collection <ref> [4] </ref> will probably have to be combined with virtual fonts to bring them under the common EC roof. This will tend to render non-portable the "dvi" files involving such languages. <p> it is in practice possible to insert an arbitrarily long segment of material into a "dvi" file without influencing its behavior under any known driver. (He proposed this device to include "pk" fonts in the "dvi" file.) More precisely, in the terminal segment: post hpostamblei hfont definitionsi post post q <ref> [4] </ref> 2 223's [4], one is free to insert extra stuff before the four byte pointer q [4] to the file offset of post. Thus, all the special and graphics material necessary for an article called (say) "brouwer" can alternatively be located in a single file "brouwer.dvi etc". <p> practice possible to insert an arbitrarily long segment of material into a "dvi" file without influencing its behavior under any known driver. (He proposed this device to include "pk" fonts in the "dvi" file.) More precisely, in the terminal segment: post hpostamblei hfont definitionsi post post q <ref> [4] </ref> 2 223's [4], one is free to insert extra stuff before the four byte pointer q [4] to the file offset of post. Thus, all the special and graphics material necessary for an article called (say) "brouwer" can alternatively be located in a single file "brouwer.dvi etc". <p> without influencing its behavior under any known driver. (He proposed this device to include "pk" fonts in the "dvi" file.) More precisely, in the terminal segment: post hpostamblei hfont definitionsi post post q <ref> [4] </ref> 2 223's [4], one is free to insert extra stuff before the four byte pointer q [4] to the file offset of post. Thus, all the special and graphics material necessary for an article called (say) "brouwer" can alternatively be located in a single file "brouwer.dvi etc".
Reference: [5] <author> Tomas G. Rokicki, </author> <title> "A proposed standard for specials", </title> <month> TUGboat 16(4) (December, </month> <year> 1995), </year> <pages> pp. 395-401. </pages> <note> (Compare earlier proposals by Don Hosek (1987), and Nelson Beebe (1990) archived on CTAN in dviware/driv-standard/papers/.) </note>
Reference-contexts: Here is a quick rundown on the difficulties which it faces and which are addressed by my three proposals. The printability of "eps" graphics inclusions seems to depend on future implementation of a proposed standard for `special' syntax recently published by T. Rokicki <ref> [5] </ref>. The browsability of "eps" graphics is a largely unsolved problem except for the lucky few who have a "dvi-to-ps" converter and an exceptionally good "ps" viewer. <p> Encapsulated PostScript graphics) are concerned, a specific proposal for standard special syntax has recently been put forward by Tomas Rokicki <ref> [5] </ref>. Unfortunately T E X screen viewers are, more often then not, unable to directly view "eps" graphics. <p> Hippocrates Sendoukas was perhaps the first to envisage this possibility; see the documentation of his DVIWin [6]. Fortunately, the sort of special syntax proposed by Rokicki in <ref> [5] </ref> seems adequate for the functionality we want. <p> The viewing is then of optimal quality at all scales; this includes the labels if they are based on hinted outline fonts. A high degree of portability will be assured. Since there is, at long last <ref> [5] </ref>, a technical working group devoted to special standards, let us wish them the intelligence, openness, stamina and goodwill necessary to deliver a powerful standard. The long term health of Knuth's "dvi" format requires such a standard. <p> I would say that he recommends a driver execute only specials it understands; and that, for those specials it does not understand, the driver should do exactly nothing, gracefully. Clearly many programmers have a different interpretation and espouse a less tolerant policy; and unfortunately, <ref> [5] </ref> does not clarify this issue. Thus my introductory challenge is: Find a way to let existing HyperT E X specials circulate in "dvi" files without wreaking havoc where HyperT E X is not supported. There is a practical response. <p> That is not good enough "dvi" format to hold its own as a publication format. But the proposed standard <ref> [5] </ref> and the three proposals of this article are aimed at extending this portability to cover essentially all scientific publication in electronic form. * print quality: "dvi" and "pdf" offer optimal quality.
Reference: [6] <author> Hippocrates Sendoukas, DVIWin, </author> <title> a DVI viewer and printer driver for MSWindows exploiting PK fonts, </title> <journal> on the CTAN archive, </journal> <note> in dvi-ware/dviwin/. </note>
Reference-contexts: This solution seems worth implementing since it would solve an urgent problem. The basic functionality, i.e. use of a parallel "tif" file to give a viewer image corresponding to an "eps" file is already present in the two MS Windows viewers "DVIWin" <ref> [6] </ref> and "DVIWindo" [9]. They are by Hippocrates Sendoukas and Y&Y Inc. respectively. <p> Hippocrates Sendoukas was perhaps the first to envisage this possibility; see the documentation of his DVIWin <ref> [6] </ref>. Fortunately, the sort of special syntax proposed by Rokicki in [5] seems adequate for the functionality we want.
Reference: [7] <author> L. Siebenmann, </author> <title> "Occam's Razor and Macro Management", (Proceedings, EuroT E X 1995, Papendaal, Netherlands); included in electronic form in the distribution of Oc-cam, </title> <note> see CTAN archive macros/generic/ and ftp://matups.math.u-psud.fr/pub/TeX/. </note>
Reference-contexts: The "tex" format (in L A T E X dialect) is currently the most popular on the pioneering preprint server ftp://xxx.lanl.gov that was initiated by Paul Ginsparg. My article <ref> [7] </ref> can be interpreted as an attempt to make Plain T E X as efficient and as archival a markup system as L A T E X but by a radically new approach: macro compilation.
Reference: [8] <author> G. Tobin, </author> <title> DVL a DVI Text Language, 1995, a portable package found on CTAN in dvi-ware/dtl. </title>
Reference-contexts: There is a related development that should be mentioned here since it inspired the proposal for assisted DVI portability. Geoffrey Tobin has defined a new ascii version "dvl" of "dvi" format along with converters in both directions <ref> [8] </ref>). As it stands, To-bin's system allows electronic publishers to adjust or update special syntax using a programmable editor. On the other hand, any autonomous and fully automatic utility for users would probably better operate directly on the binary "dvi" files.
Reference: [9] <author> Y&Y Inc., DVIWindo, </author> <title> a DVI viewer and printer driver for MSWindows exploiting Adobe Type 1 fonts; commercial distribution: </title> <note> see http://www.YandY.com. 10 E-print: </note> <month> June </month> <year> 1996 </year>
Reference-contexts: This solution seems worth implementing since it would solve an urgent problem. The basic functionality, i.e. use of a parallel "tif" file to give a viewer image corresponding to an "eps" file is already present in the two MS Windows viewers "DVIWin" [6] and "DVIWindo" <ref> [9] </ref>. They are by Hippocrates Sendoukas and Y&Y Inc. respectively.
References-found: 9

