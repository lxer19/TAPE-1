URL: ftp://ftp.cis.ufl.edu/cis/tech-reports/tr95/tr95-004.ps
Refering-URL: http://www.cis.ufl.edu/tech-reports/tech-reports/tr95-abstracts.html
Root-URL: http://www.cis.ufl.edu
Title: Users' Guide for the Unsymmetric-pattern MultiFrontal Package (UMFPACK) Version 1.1  
Author: Timothy A. Davis T. Davis 
Address: FL, 32611 USA  
Affiliation: Gainesville,  
Note: c fl1995  
Date: January 1995  
Abstract: Technical Report TR-95-004 Computer and Information Sciences Department University of Florida 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> F. L. Alvarado. </author> <title> Manipulation and visualization of sparse matrices. </title> <journal> ORSA J. on Computing, </journal> <volume> 2 </volume> <pages> 186-207, </pages> <year> 1990. </year>
Reference-contexts: factorize a matrix, solve, re-factorize, and solve ddemo5.f compute b, then use LU factors to solve Ax = b for x ddemo6.f portable random number generator ddemo7.f read or generate a sparse matrix ddemo8.f generate a band matrix, with a dense band ddemo9.f read a matrix in the SMMS format <ref> [1] </ref> ddemoa.f read a matrix in the Harwell/Boeing format [7, 8] ddemob.f create random duplicate entries in A (to test duplicate removal) SDEMO, single precision demo program (11 files): same set of file names as DDEMO, except with s prefix instead of d DEMO, simple double-precision demo program (1 file): demo.f <p> C UMFPACK demo program: C C Factor and solve a 5-by-5 system, using default parameters: C [ 2 3 0 0 0 ] [ 8 ] <ref> [ 1 ] </ref> C [ 0 -1 -3 2 0 ] x = [ -3 ].
Reference: [2] <author> P. Amestoy, T. A. Davis, and I. S. Duff. </author> <title> An approximate minimum degree ordering algorithm. </title> <type> Technical Report TR-94-039, </type> <institution> CIS Dept., Univ. </institution> <note> of Florida (anonymous ftp to ftp.cis.ufl.edu:cis/tech-reports/tr94/tr94-039.ps.Z), Gainesville, FL (submitted to the SIAM Journal on Matrix Analysis and Applications), </note> <year> 1994. </year>
Reference-contexts: NSRCH The UM FAC subroutine does not maintain the true degree of each row and column of the matrix being factorized (the degree is simply the number of entries in the row or column). Instead, it keeps track of an upper bound that are easier to compute (see <ref> [4, 2] </ref> for details). NSRCH is the number of columns of lowest upper bound degree to examine during pivot search. The NSRCH argument performs a similar function as the NSRCH argument in MA28, except that setting NSRCH to N is not efficient in UM FAC.
Reference: [3] <author> P. Amestoy and I. S. Duff. </author> <title> Vectorization of a multiprocessor multifrontal code. </title> <journal> Int. J. Supercomputer Appl., </journal> <volume> 3(3) </volume> <pages> 41-59, </pages> <year> 1989. </year>
Reference-contexts: UMFPACK is based on the unsymmetric-pattern multifrontal method [4]. The method relies on dense matrix kernels [5] to factorize frontal matrices, which are dense submatrices of the sparse matrix being factorized. In contrast to the classical multifrontal method <ref> [3, 10] </ref>, frontal matrices are rectangular instead of square, and the assembly tree is replaced with a directed acyclic graph. As in the classical multifrontal method, advantage is taken of repetitive structure in the matrix by amalgamating nodes in the directed acyclic graph, giving it high performance on parallel-vector supercomputers. <p> C UMFPACK demo program: C C Factor and solve a 5-by-5 system, using default parameters: C [ 2 3 0 0 0 ] [ 8 ] [ 1 ] C [ 0 -1 -3 2 0 ] x = [ -3 ]. Solution is x = <ref> [ 3 ] </ref> C [ 0 0 1 0 0 ] [ 3 ] [ 4 ] C Solve A^Tx=b, with solution: C x = [ 1.8158 1.4561 1.5000 -24.8509 10.2632 ]^T C using the factors of A. <p> Solution is x = <ref> [ 3 ] </ref> C [ 0 0 1 0 0 ] [ 3 ] [ 4 ] C Solve A^Tx=b, with solution: C x = [ 1.8158 1.4561 1.5000 -24.8509 10.2632 ]^T C using the factors of A.
Reference: [4] <author> T. A. Davis and I. S. Duff. </author> <title> An unsymmetric-pattern multifrontal method for sparse LU factorization. </title> <type> Technical Report TR-94-038, </type> <institution> CIS Dept., Univ. </institution> <note> of Florida (anonymous ftp to ftp.cis.ufl.edu:cis/tech-reports/tr94/tr94-038.ps.Z), Gainesville, FL (submitted to the SIAM Journal on Matrix Analysis and Applications, revised), </note> <year> 1994. </year>
Reference-contexts: It uses LU factorization, and performs pivoting for numerical purposes and to maintain sparsity. UMFPACK is based on the unsymmetric-pattern multifrontal method <ref> [4] </ref>. The method relies on dense matrix kernels [5] to factorize frontal matrices, which are dense submatrices of the sparse matrix being factorized. In contrast to the classical multifrontal method [3, 10], frontal matrices are rectangular instead of square, and the assembly tree is replaced with a directed acyclic graph. <p> NSRCH The UM FAC subroutine does not maintain the true degree of each row and column of the matrix being factorized (the degree is simply the number of entries in the row or column). Instead, it keeps track of an upper bound that are easier to compute (see <ref> [4, 2] </ref> for details). NSRCH is the number of columns of lowest upper bound degree to examine during pivot search. The NSRCH argument performs a similar function as the NSRCH argument in MA28, except that setting NSRCH to N is not efficient in UM FAC. <p> The Level-3 GEMM subroutine is used to update the contribution blocks, regardless of the value of NB. See <ref> [4] </ref> for details. The best value of NB depends on the computer being used. Range: 1 to N, typical range: 16 to 64, typical value: 16 (on a Cray YMP, for example). EXTRA How much extra space to allocate for additional elbow-room in the element lists. <p> EXTRA How much extra space to allocate for additional elbow-room in the element lists. A element list is a list of the frontal matrices that affect a single row or column. The element lists grow and shrink during factorization (see <ref> [4] </ref> for details). Up to EXTRA2N memory in IMEM is used, although this upper bound is rarely reached in practice. A value of zero will not be very efficient. <p> Solution is x = [ 3 ] C [ 0 0 1 0 0 ] [ 3 ] <ref> [ 4 ] </ref> C Solve A^Tx=b, with solution: C x = [ 1.8158 1.4561 1.5000 -24.8509 10.2632 ]^T C using the factors of A.
Reference: [5] <author> J. J. Dongarra, J. Du Croz, S. Hammarling, and I. S. Duff. </author> <title> A set of level-3 basic linear algebra subprograms. </title> <journal> ACM Trans. Math. Softw., </journal> <volume> 16(1) </volume> <pages> 1-17, </pages> <year> 1990. </year>
Reference-contexts: It uses LU factorization, and performs pivoting for numerical purposes and to maintain sparsity. UMFPACK is based on the unsymmetric-pattern multifrontal method [4]. The method relies on dense matrix kernels <ref> [5] </ref> to factorize frontal matrices, which are dense submatrices of the sparse matrix being factorized. In contrast to the classical multifrontal method [3, 10], frontal matrices are rectangular instead of square, and the assembly tree is replaced with a directed acyclic graph.
Reference: [6] <author> I. S. Duff, A. M. Erisman, and J. K. Reid, </author> <title> Direct Methods for Sparse Matrices, </title> <publisher> London: Oxford Univ. Press, </publisher> <year> 1986. </year>
Reference: [7] <author> I. S. Duff, R. G. Grimes, and J. G. Lewis. </author> <title> Sparse matrix test problems. </title> <journal> ACM Trans. Math. Softw., </journal> <volume> 15 </volume> <pages> 1-14, </pages> <year> 1989. </year>
Reference-contexts: Also included in the distribution are six input files for the test programs, for which the UMFPACK Copyright does not apply. Two of the files are sparse matrices from the Harwell/Boeing Sparse Matrix Collection (Release 1) <ref> [7, 8] </ref>. They are included by permission. 24 The standard distribution consists of a total of 99 files, described in Table 3. User-callable subroutines are shown in a box . <p> b, then use LU factors to solve Ax = b for x ddemo6.f portable random number generator ddemo7.f read or generate a sparse matrix ddemo8.f generate a band matrix, with a dense band ddemo9.f read a matrix in the SMMS format [1] ddemoa.f read a matrix in the Harwell/Boeing format <ref> [7, 8] </ref> ddemob.f create random duplicate entries in A (to test duplicate removal) SDEMO, single precision demo program (11 files): same set of file names as DDEMO, except with s prefix instead of d DEMO, simple double-precision demo program (1 file): demo.f factorize and solve a 5-by-5 matrix (see Section 5) <p> files): same set of file names as DDEMO, except with s prefix instead of d DEMO, simple double-precision demo program (1 file): demo.f factorize and solve a 5-by-5 matrix (see Section 5) Input data for DDEMO and SDEMO (6 files): in input file ibm32 32-by-32 matrix from then Harwell/Boeing collection <ref> [7, 8] </ref> will199 199-by-199 matrix from then Harwell/Boeing collection ten singular 10-by-10 matrix in triplet form four 4-by-4 matrix in triplet form five symmetric 5-by-5 matrix in triplet form Documentation and installation files (4 files) notice copyright notice manual.tex this manual in LaTeX form manual.ps this manual in PostScript form makefile <p> Doing so will improve the performance of future versions of this software for your application. Of particular interest are large unsymmetric sparse matrices (say, 5000-by-5000 or larger) with unsymmetric nonzero pattern. The current release of the Harwell/Boeing Sparse Matrix Collection is weak in this area <ref> [7, 8] </ref>. 9 Acknowledgments This project is in collaboration with Iain Duff (Rutherford Appleton Laboratory, England, and CERFACS, Toulouse, France). Portions of this work were supported by a post-doctoral grant from CERFACS, September 1989 to December 1990.
Reference: [8] <author> I. S. Duff, R. G. Grimes, and J. G. Lewis. </author> <title> Users' guide for the Harwell-Boeing sparse matrix collection (release 1). </title> <type> Technical Report RAL-92-086, </type> <institution> Rutherford Appleton Laboratory, </institution> <address> Didcot, Oxon, England, </address> <month> Dec. </month> <year> 1992. </year> <month> 33 </month>
Reference-contexts: Also included in the distribution are six input files for the test programs, for which the UMFPACK Copyright does not apply. Two of the files are sparse matrices from the Harwell/Boeing Sparse Matrix Collection (Release 1) <ref> [7, 8] </ref>. They are included by permission. 24 The standard distribution consists of a total of 99 files, described in Table 3. User-callable subroutines are shown in a box . <p> b, then use LU factors to solve Ax = b for x ddemo6.f portable random number generator ddemo7.f read or generate a sparse matrix ddemo8.f generate a band matrix, with a dense band ddemo9.f read a matrix in the SMMS format [1] ddemoa.f read a matrix in the Harwell/Boeing format <ref> [7, 8] </ref> ddemob.f create random duplicate entries in A (to test duplicate removal) SDEMO, single precision demo program (11 files): same set of file names as DDEMO, except with s prefix instead of d DEMO, simple double-precision demo program (1 file): demo.f factorize and solve a 5-by-5 matrix (see Section 5) <p> files): same set of file names as DDEMO, except with s prefix instead of d DEMO, simple double-precision demo program (1 file): demo.f factorize and solve a 5-by-5 matrix (see Section 5) Input data for DDEMO and SDEMO (6 files): in input file ibm32 32-by-32 matrix from then Harwell/Boeing collection <ref> [7, 8] </ref> will199 199-by-199 matrix from then Harwell/Boeing collection ten singular 10-by-10 matrix in triplet form four 4-by-4 matrix in triplet form five symmetric 5-by-5 matrix in triplet form Documentation and installation files (4 files) notice copyright notice manual.tex this manual in LaTeX form manual.ps this manual in PostScript form makefile <p> C UMFPACK demo program: C C Factor and solve a 5-by-5 system, using default parameters: C [ 2 3 0 0 0 ] <ref> [ 8 ] </ref> [ 1 ] C [ 0 -1 -3 2 0 ] x = [ -3 ]. <p> Doing so will improve the performance of future versions of this software for your application. Of particular interest are large unsymmetric sparse matrices (say, 5000-by-5000 or larger) with unsymmetric nonzero pattern. The current release of the Harwell/Boeing Sparse Matrix Collection is weak in this area <ref> [7, 8] </ref>. 9 Acknowledgments This project is in collaboration with Iain Duff (Rutherford Appleton Laboratory, England, and CERFACS, Toulouse, France). Portions of this work were supported by a post-doctoral grant from CERFACS, September 1989 to December 1990.
Reference: [9] <author> I. S. Duff and J. K. Reid. </author> <title> Some design features of a sparse matrix code. </title> <journal> ACM Trans. Math. Softw., </journal> <volume> 5(1) </volume> <pages> 18-35, </pages> <year> 1979. </year>
Reference-contexts: It is reserved for possible future releases. 6 3.1 UM FAC The UM FAC subroutine computes an LU factorization of a general unsymmetric sparse matrix A. The matrix can be optionally pre-ordered into a block-upper-triangular form, using two Harwell MA28 subroutines <ref> [9] </ref>. Pivoting within each diagonal block is performed during factorization to maintain sparsity and numerical stability.
Reference: [10] <author> I. S. Duff and J. K. Reid. </author> <title> The multifrontal solution of unsymmetric sets of linear equations. </title> <journal> SIAM J. Sci. Statist. Comput., </journal> <volume> 5(3) </volume> <pages> 633-641, </pages> <year> 1984. </year> <month> 34 </month>
Reference-contexts: UMFPACK is based on the unsymmetric-pattern multifrontal method [4]. The method relies on dense matrix kernels [5] to factorize frontal matrices, which are dense submatrices of the sparse matrix being factorized. In contrast to the classical multifrontal method <ref> [3, 10] </ref>, frontal matrices are rectangular instead of square, and the assembly tree is replaced with a directed acyclic graph. As in the classical multifrontal method, advantage is taken of repetitive structure in the matrix by amalgamating nodes in the directed acyclic graph, giving it high performance on parallel-vector supercomputers.
References-found: 10

