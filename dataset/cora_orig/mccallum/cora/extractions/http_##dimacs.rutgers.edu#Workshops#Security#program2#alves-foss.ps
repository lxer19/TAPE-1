URL: http://dimacs.rutgers.edu/Workshops/Security/program2/alves-foss.ps
Refering-URL: http://dimacs.rutgers.edu/Workshops/Security/program2/program.html
Root-URL: http://www.cs.rutgers.edu
Email: fjimaf,tsouleg@cs.uidaho.edu  
Title: A Weakest Precondition Calculus for Analysis of Cryptographic Protocols  
Author: J. Alves-Foss and T. Soule 
Affiliation: Laboratory for Applied Logic Department of Computer Science University of Idaho  
Abstract: This paper present a new approach for the use of belief logics in the analysis of cryptographic protocols. This new approach is based on the concept of the weakest precondition calculus. It generates the necessary preconditions of a protocol, based on the protocol operations and desired goals. In addition, the approach we use overcomes some conceptual problems of belief logic analysis by forcing explicit denotation of internal protocol participant operation. Complete analysis rules and methods are presented, along with exemplary applications. The paper concludes with a discussion of the use of this approach for protocol derivation.
Abstract-found: 1
Intro-found: 1
Reference: [AF97] <author> J. </author> <title> Alves-Foss. The use of belief logics in the presence of causal consistency attacks. </title> <booktitle> In Proc. National Information Systems Security Conference, </booktitle> <month> Oct. </month> <year> 1997. </year>
Reference-contexts: A recent paper, by one of the authors of this paper, demonstrates that the published failures of belief logic analysis has been due to the improper use of the logics and not due to limitations of the logics <ref> [AF97] </ref>. This fact is also discussed in [SvO96]. In [AF97], we suggest a more formalized approach to cryptographic protocol analysis using BAN-style logics. This approach reduces the likelihood of improper use of the logic. <p> A recent paper, by one of the authors of this paper, demonstrates that the published failures of belief logic analysis has been due to the improper use of the logics and not due to limitations of the logics <ref> [AF97] </ref>. This fact is also discussed in [SvO96]. In [AF97], we suggest a more formalized approach to cryptographic protocol analysis using BAN-style logics. This approach reduces the likelihood of improper use of the logic. This paper extends our other work by developing a weakest-precondition (wp) calculus for belief logic analysis of cryptographic protocols. <p> The standard approach to validation assumes that all messages have already been received. It is possible to utilize the premises and messages received to derive incorrect or faulty beliefs. This is due to the fact that message receipt is not ordered <ref> [Sne91, AF97] </ref>. Our approach insists that message reception be treated in order. * Idealization/Comprehension Premises. In any protocol, there are certain assumptions that the recipients make with respect to message meaning. <p> These can be expressed in idealized versions of the message protocols, or in premises; but they must be expressed for the analysis to complete. If these premises or idealizations are incorrect, the analysis will fail. In <ref> [AF97] </ref> we provide a set of guidelines for the development of these idealizations; which are used in the analysis in this paper. 2 * Verification. It is often the case that the beliefs and comprehended messages of both par-ticipants are analyzed concurrently 1 . <p> We leave this wp in place however, since there may be analysis methods that require that a participant be aware of messages previously sent by itself (see <ref> [AF97] </ref>). In Table 3 we present the wps for message receipt. The conditions in this case are rather straight forward. Upon receipt of a message X, B will have received it and seen it. B will also have received and seen all components of the message. <p> We strongly believe that such a post condition is important, and that specific ordering between protocol steps should be maintained. This is discussed further in <ref> [AF97] </ref>. Table 14: Proof of A's postconditions for NS protocol.
Reference: [BAN89] <author> M. Burrows, M. Abadi, and R. Needham. </author> <title> A logic of authentication. </title> <type> Technical Report 39, </type> <institution> DEC Systems Research Center, </institution> <address> Palo Alto, CA, </address> <month> February </month> <year> 1989. </year>
Reference-contexts: 1 Introduction The use of formal methods to analyze the correctness of cryptographic protocols became prevalent with the development of the BAN logic in 1989 <ref> [BAN89] </ref>. In this style of analysis a set of participant's final beliefs is generated from a set of initial assumptions and the protocol messages. If these beliefs satisfy the goal of the protocol, then the protocol is validated. <p> how to use the wp-calculus and demonstrate its use on exemplary protocols. 2 Analysis of Authentication Protocols When using belief logics for protocol validation, the typical approach has been to establish a set of premises or preconditions; generate beliefs by using the steps of the protocol and the belief logic <ref> [BAN89, GNY90, SvO94, SvO96] </ref>. Although the exact format of the protocol and the rules of the logic may differ, the approach is basically the same. In Syverson and van Oorschot's most recent paper [SvO96] they present a set of common premises and postconditions that can be used in protocol analysis.
Reference: [DvOW92] <author> W. Diffie, P. van Oorschot, and M. Wiener. </author> <title> Authentication and authenticated key exchanges. </title> <journal> Design Codes and Cryptograhpy, </journal> <volume> 2 </volume> <pages> 107-125, </pages> <year> 1992. </year>
Reference-contexts: This includes the use of private, public, and shared keys. The wps were tested on several existing protocols. A discussion of the proof for the station-to-station protocol <ref> [DvOW92] </ref> and the Needham-Schroeder key distribution protocol [NS78] are included in Section 4 of this document. Section 3 presents the weakest precondition rules. <p> would not give Z any information about A, B, or N ab (Z sees N ab would not become true), but still seems a bit odd. 4 Proofs of Exemplary Protocols 4.1 Station-to-Station Protocol This section presents the proofs of the first half of the station to station (STS) protocol <ref> [DvOW92] </ref>. It shows that A creates a fresh, good key (K) for use with B. The second half, showing the same 9 for B would be quite similar. The interesting thing about this protocol is that A produces key (K) twice.
Reference: [GNY90] <author> L. Gong, R. Needham, and R. Yahalom. </author> <title> Reasoning about belief in cryptographic protocols. </title> <booktitle> In Proc. IEEE Symposium on Research in Security and Privacy, </booktitle> <pages> pages 234-248, </pages> <year> 1990. </year>
Reference-contexts: Since the publication of the BAN logic, several papers have reported problems in its use for analysis of cryptographic protocols, including [Mea96, Sne91, Syv93]. These reports reveal limitations of the logic or misunderstanding and misuse of the logic. Descendents of the BAN logic such as GNY <ref> [GNY90] </ref> and SvO [SvO94], called BAN-style logics, overcome several of these limitations. <p> how to use the wp-calculus and demonstrate its use on exemplary protocols. 2 Analysis of Authentication Protocols When using belief logics for protocol validation, the typical approach has been to establish a set of premises or preconditions; generate beliefs by using the steps of the protocol and the belief logic <ref> [BAN89, GNY90, SvO94, SvO96] </ref>. Although the exact format of the protocol and the rules of the logic may differ, the approach is basically the same. In Syverson and van Oorschot's most recent paper [SvO96] they present a set of common premises and postconditions that can be used in protocol analysis.
Reference: [Mea96] <author> C Meadows. </author> <title> Analyzing the Needham-Schroeder public key protocol: A comparison of two approaches. </title> <booktitle> In Proc. ESORICS 96. </booktitle> <publisher> Springer Verlag, </publisher> <year> 1996. </year>
Reference-contexts: If these beliefs satisfy the goal of the protocol, then the protocol is validated. Since the publication of the BAN logic, several papers have reported problems in its use for analysis of cryptographic protocols, including <ref> [Mea96, Sne91, Syv93] </ref>. These reports reveal limitations of the logic or misunderstanding and misuse of the logic. Descendents of the BAN logic such as GNY [GNY90] and SvO [SvO94], called BAN-style logics, overcome several of these limitations.
Reference: [NS78] <author> R.M. Needham and M.D. Schroder. </author> <title> Using encryption for authentication in large networks of computers. </title> <journal> Communications of the ACM, </journal> <volume> 21(12) </volume> <pages> 993-999, </pages> <year> 1978. </year>
Reference-contexts: This includes the use of private, public, and shared keys. The wps were tested on several existing protocols. A discussion of the proof for the station-to-station protocol [DvOW92] and the Needham-Schroeder key distribution protocol <ref> [NS78] </ref> are included in Section 4 of this document. Section 3 presents the weakest precondition rules. They are divided into four subsections, one for the general operations, one for proofs and beliefs, one for decryption using the various key types, and one for construction shared secrets.
Reference: [Sne91] <author> E. Snekkenes. </author> <title> Exploring the BAN approach to protocol analysis. </title> <booktitle> In Proc. IEEE Symposium on Research in Security and Privacy, </booktitle> <pages> pages 171-181, </pages> <year> 1991. </year>
Reference-contexts: If these beliefs satisfy the goal of the protocol, then the protocol is validated. Since the publication of the BAN logic, several papers have reported problems in its use for analysis of cryptographic protocols, including <ref> [Mea96, Sne91, Syv93] </ref>. These reports reveal limitations of the logic or misunderstanding and misuse of the logic. Descendents of the BAN logic such as GNY [GNY90] and SvO [SvO94], called BAN-style logics, overcome several of these limitations. <p> The standard approach to validation assumes that all messages have already been received. It is possible to utilize the premises and messages received to derive incorrect or faulty beliefs. This is due to the fact that message receipt is not ordered <ref> [Sne91, AF97] </ref>. Our approach insists that message reception be treated in order. * Idealization/Comprehension Premises. In any protocol, there are certain assumptions that the recipients make with respect to message meaning.
Reference: [SvO94] <author> P. Syverson and P. van Oorschot. </author> <title> On unifying some cryptographic protocol logics. </title> <booktitle> In Proc. IEEE Symposium on Research in Security and Privacy, </booktitle> <pages> pages 14-28, </pages> <year> 1994. </year>
Reference-contexts: Since the publication of the BAN logic, several papers have reported problems in its use for analysis of cryptographic protocols, including [Mea96, Sne91, Syv93]. These reports reveal limitations of the logic or misunderstanding and misuse of the logic. Descendents of the BAN logic such as GNY [GNY90] and SvO <ref> [SvO94] </ref>, called BAN-style logics, overcome several of these limitations. A recent paper, by one of the authors of this paper, demonstrates that the published failures of belief logic analysis has been due to the improper use of the logics and not due to limitations of the logics [AF97]. <p> This approach reduces the likelihood of improper use of the logic. This paper extends our other work by developing a weakest-precondition (wp) calculus for belief logic analysis of cryptographic protocols. This calculus, based on the SvO logic <ref> [SvO94] </ref>, provides a fl This project was sponsored in part by the National Security Agency under Grant Number MDA904-96-1-0108. The United States Government is authorized to reproduce and distribute reprints notwithstanding any copyright notation hereon. methodical approach to the specification and analysis of cryptographic protocols. <p> how to use the wp-calculus and demonstrate its use on exemplary protocols. 2 Analysis of Authentication Protocols When using belief logics for protocol validation, the typical approach has been to establish a set of premises or preconditions; generate beliefs by using the steps of the protocol and the belief logic <ref> [BAN89, GNY90, SvO94, SvO96] </ref>. Although the exact format of the protocol and the rules of the logic may differ, the approach is basically the same. In Syverson and van Oorschot's most recent paper [SvO96] they present a set of common premises and postconditions that can be used in protocol analysis. <p> The choices regarding what the postconditions of an operation should be and what preconditions are necessary for those postconditions were primarily determined by the SvO logic <ref> [SvO94, SvO96] </ref>. The operations currently supported are: sending and receiving messages, applying functions, creating keys from public agreement keys, decrypting messages, construction of shared secrets, and proving statements. This includes the use of private, public, and shared keys. The wps were tested on several existing protocols. <p> The wps for each operation are presented in tables of three columns: the postcondition, the weakest precondition necessary for the postcondition, and the reasoning. Axiom numbers refer to SvO axioms in <ref> [SvO94] </ref>. The wps depend in part upon which postconditions are desired. Some postconditions are true, regardless of the preconditions, as long as the operation is performed. For example, the operation "B receives X" makes the postconditions "B receives X" and "B sees X" automatically true. <p> A special example of function application is the creation of a key, as depicted in Table 5. The creation of public agreement keys requires special axioms (see <ref> [SvO94, SvO96] </ref>), and thus is treated separately here. Table 5: Weakest preconditions for creating a key from public-agreement keys.
Reference: [SvO96] <author> P. Syverson and P. van Oorschot. </author> <title> A unified cryptographic protocol logic. </title> <type> Unpublished manuscript, </type> <month> Dec. </month> <year> 1996. </year>
Reference-contexts: A recent paper, by one of the authors of this paper, demonstrates that the published failures of belief logic analysis has been due to the improper use of the logics and not due to limitations of the logics [AF97]. This fact is also discussed in <ref> [SvO96] </ref>. In [AF97], we suggest a more formalized approach to cryptographic protocol analysis using BAN-style logics. This approach reduces the likelihood of improper use of the logic. This paper extends our other work by developing a weakest-precondition (wp) calculus for belief logic analysis of cryptographic protocols. <p> how to use the wp-calculus and demonstrate its use on exemplary protocols. 2 Analysis of Authentication Protocols When using belief logics for protocol validation, the typical approach has been to establish a set of premises or preconditions; generate beliefs by using the steps of the protocol and the belief logic <ref> [BAN89, GNY90, SvO94, SvO96] </ref>. Although the exact format of the protocol and the rules of the logic may differ, the approach is basically the same. In Syverson and van Oorschot's most recent paper [SvO96] they present a set of common premises and postconditions that can be used in protocol analysis. <p> Although the exact format of the protocol and the rules of the logic may differ, the approach is basically the same. In Syverson and van Oorschot's most recent paper <ref> [SvO96] </ref> they present a set of common premises and postconditions that can be used in protocol analysis. <p> The ultimate goal of protocol verification is to guarantee that following completion of the protocol, certain beliefs hold. The common protocol goals of <ref> [SvO96] </ref> are a good starting point for generation of these goals. These goals should be consistent with the protocol designer's intentions. * Protocol Denotation. Most verification methods utilize the standard notation for protocol denotation. This involves the sequential list of all protocol messages and direction sent. <p> The choices regarding what the postconditions of an operation should be and what preconditions are necessary for those postconditions were primarily determined by the SvO logic <ref> [SvO94, SvO96] </ref>. The operations currently supported are: sending and receiving messages, applying functions, creating keys from public agreement keys, decrypting messages, construction of shared secrets, and proving statements. This includes the use of private, public, and shared keys. The wps were tested on several existing protocols. <p> Section 4 presents analysis of the two exemplary protocols. Section 5 discusses a few issues regarding the use of the wps. 1 In <ref> [SvO96] </ref>, Syverson and van Oorschot determine final beliefs for each participant independently, but combine the premises for the participants. 3 3 Weakest Preconditions This section describes the wps for each of the authentication operations. <p> Note that necessitation may only be used in conjunction with theorems and not derivations <ref> [SvO96] </ref>. 3.1 General Operations This section provides the wps for the five general operations of an authentication protocol: * S; T fCompositiong * ! B : X fB receives Xg * A !: X fA sends Xg * A : F (X; Y ) : fA applies function F to X <p> It is also worth noting that if we limit the evaluation of the protocol to only what can be inferred directly by the recipient (as discussed by Syverson and van Oorschot in <ref> [Syv96, SvO96] </ref>), we never need worry about messages sent by another participant. We leave this wp in place however, since there may be analysis methods that require that a participant be aware of messages previously sent by itself (see [AF97]). In Table 3 we present the wps for message receipt. <p> The conditions in this case are rather straight forward. Upon receipt of a message X, B will have received it and seen it. B will also have received and seen all components of the message. If we follow the message comprehension method of Syverson and van Oorschot <ref> [SvO96] </ref>, B receives and sees the uncomprehended messages fl i . Additional preconditions must be put in place to specify what B comprehends; work on this is left for a future paper. The message will be considered fresh if there is a component of X that is fresh. <p> A special example of function application is the creation of a key, as depicted in Table 5. The creation of public agreement keys requires special axioms (see <ref> [SvO94, SvO96] </ref>), and thus is treated separately here. Table 5: Weakest preconditions for creating a key from public-agreement keys. <p> We understand that this is not a complete set, but is sufficient to demonstrate our technique. A full set of post conditions would consist of G1-5 as defined in <ref> [SvO96] </ref>. * A believes (A K ! B) Discharged in step 9 * A sees [R b , R a ] Discharged in step 7 The generated premises, from A's point of view are: * A sees x,R a ,K t ,PK (B,K b ) * Also A believes it sees
Reference: [Syv93] <author> P. Syverson. </author> <title> Adding time to a logic of authentication. </title> <booktitle> In Proc. First ACM Conference on Computer and Communications Security, </booktitle> <pages> pages 97-101. </pages> <publisher> ACM Press, </publisher> <year> 1993. </year>
Reference-contexts: If these beliefs satisfy the goal of the protocol, then the protocol is validated. Since the publication of the BAN logic, several papers have reported problems in its use for analysis of cryptographic protocols, including <ref> [Mea96, Sne91, Syv93] </ref>. These reports reveal limitations of the logic or misunderstanding and misuse of the logic. Descendents of the BAN logic such as GNY [GNY90] and SvO [SvO94], called BAN-style logics, overcome several of these limitations.
Reference: [Syv96] <author> P. Syverson. </author> <title> A new look at an old protocol. </title> <journal> Operating Systems Review, </journal> <volume> 30(3) </volume> <pages> 1-4, </pages> <month> July </month> <year> 1996. </year>
Reference-contexts: It is also worth noting that if we limit the evaluation of the protocol to only what can be inferred directly by the recipient (as discussed by Syverson and van Oorschot in <ref> [Syv96, SvO96] </ref>), we never need worry about messages sent by another participant. We leave this wp in place however, since there may be analysis methods that require that a participant be aware of messages previously sent by itself (see [AF97]). In Table 3 we present the wps for message receipt. <p> Again the two solutions are a premise saying "A believes (S says K ab S says fresh (K ab )" or an idealization. For both of these problems Syverson and van Oorschot <ref> [Syv96] </ref> use the premise approach, we have opted for protocol idealization.
References-found: 11

