URL: http://www.cs.utexas.edu/users/ccp/dac962.ps.gz
Refering-URL: http://www.cs.utexas.edu/users/ccp/
Root-URL: 
Title: Fast Performance-Driven Optimization for Buffered Clock Trees Based on Lagrangian Relaxation  
Author: Chung-Ping Chen, Yao-Wen Chang, and D. F. Wong 
Address: Austin, Texas 78712  
Affiliation: Department of Computer Sciences, University of Texas,  
Abstract: Delay, power, skew, area, and sensitivity are the most important concerns in current clock-tree design. We present in this paper an algorithm for simultaneously optimizing the above objectives by sizing wires and buffers in clock trees. Our algorithm, based on Lagrangian relaxation method, can optimally minimize delay, power, and area simultaneously with very low skew and sensitivity. With linear storage overall and linear runtime per iteration, our algorithm is extremely economical, fast, and accurate; for example, our algorithm can solve a 6201-wire-segment clock-tree problem using about 1-minute runtime and 1.3-MB memory and still achieve pico-second precision on an IBM RS/6000 workstation. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Leon S. Lasdon, </author> <title> Optimization Theory for Large Systems, </title> <publisher> Macmil-lan Publishing Co., INC. </publisher> <year> 1970. </year> <title> bound), and clock skew during execution on r1. </title>
Reference-contexts: There fore, it is desirable to develop an efficient algorithm for solving this problem. Our approach for solving M is based on Lagrangian relax ation <ref> [1, 9] </ref>. We relax the delay constraints into the objective function by introducing Lagrange multipliers i 's, 1 i s, one for each delay constraint D i (x) D max . <p> It is well known that L () is a lower bound of the optimal objective value of M <ref> [1, 9] </ref>. On the other hand, any feasible solution of M is an upper bound of the optimal objective value. Hence, we can use these two bounds to evaluate the quality of a current solution and to determine the termination criteria.
Reference: [2] <author> H. Bakoglu, </author> <title> Circuits, Interconnections, and Packaging for VLSI, </title> <publisher> Addison-Wesley Pub. Company Inc., </publisher> <year> 1990. </year>
Reference-contexts: 1 Introduction Delay, skew, power, area, and skew sensitivity are the most important concerns in current clock-tree design. With the increasing complexity of synchronous ASICs, clock skew and clock-signal delay have become important factors in determining circuit performance <ref> [2, 4, 10, 17] </ref>. Wire width process variations during fabrication can significantly impact the delay and skew; thus it is important to consider the sensitivity of a design to inter-chip process variations [13].
Reference: [3] <author> Chung-Ping Chen, D. F. Wong. </author> <title> "A fast algorithm for optimal wire-sizing under Elmore delay model" Proc IEEE ISCAS, </title> <year> 1996. </year>
Reference-contexts: As reported in [7], power dissipation of a clock tree play a key role in overall chip's power dissipation. Therefore, it is desirable to simultaneously consider delay, skew, power, area, and sensitivity in clock-tree design. Algorithms for routing-tree optimization have been proposed in much of the literature recently <ref> [3, 4, 5, 12, 13, 15, 17] </ref>. The works in [3, 5, 12, 15] are designed for general routing tree, hence they cannot handle clock tree issues such as skew and sensitivity. <p> Therefore, it is desirable to simultaneously consider delay, skew, power, area, and sensitivity in clock-tree design. Algorithms for routing-tree optimization have been proposed in much of the literature recently [3, 4, 5, 12, 13, 15, 17]. The works in <ref> [3, 5, 12, 15] </ref> are designed for general routing tree, hence they cannot handle clock tree issues such as skew and sensitivity. Although [4, 13, 14, 17] consider sensitivity, skew, and/or delay, most of these algorithms only size wires and do not minimize power and area.
Reference: [4] <author> J. Chung and C.-K. Cheng, </author> <title> "Skew sensitivity minimization of buffered clock tree," </title> <booktitle> Proc. ICCAD, </booktitle> <pages> pp. 280-283, </pages> <year> 1994. </year>
Reference-contexts: 1 Introduction Delay, skew, power, area, and skew sensitivity are the most important concerns in current clock-tree design. With the increasing complexity of synchronous ASICs, clock skew and clock-signal delay have become important factors in determining circuit performance <ref> [2, 4, 10, 17] </ref>. Wire width process variations during fabrication can significantly impact the delay and skew; thus it is important to consider the sensitivity of a design to inter-chip process variations [13]. <p> As reported in [7], power dissipation of a clock tree play a key role in overall chip's power dissipation. Therefore, it is desirable to simultaneously consider delay, skew, power, area, and sensitivity in clock-tree design. Algorithms for routing-tree optimization have been proposed in much of the literature recently <ref> [3, 4, 5, 12, 13, 15, 17] </ref>. The works in [3, 5, 12, 15] are designed for general routing tree, hence they cannot handle clock tree issues such as skew and sensitivity. <p> Algorithms for routing-tree optimization have been proposed in much of the literature recently [3, 4, 5, 12, 13, 15, 17]. The works in [3, 5, 12, 15] are designed for general routing tree, hence they cannot handle clock tree issues such as skew and sensitivity. Although <ref> [4, 13, 14, 17] </ref> consider sensitivity, skew, and/or delay, most of these algorithms only size wires and do not minimize power and area. Moreover, existing algorithms suffer long runtime and large storage requirements. For example, [13, 17] convert the skew minimization problem into the least-squares minimization problem. <p> Given wire width w, the skew sensitivity, , is defined as the maximum difference between skews under varying values of w due to process variations <ref> [4] </ref>. The goal of sensitivity minimization is to find an optimal w such that is minimized. This paper addresses the clock-tree wire- and buffer-sizing problem, targeting multiple objectives such as delay, skew, power, area, and sensitivity.
Reference: [5] <author> J. Cong and K.-S. Leung, </author> <title> "Optimal wiresizing under elmore delay model," </title> <journal> IEEE TCAD 14(3), </journal> <pages> pp. 321-336, </pages> <year> 1995. </year>
Reference-contexts: As reported in [7], power dissipation of a clock tree play a key role in overall chip's power dissipation. Therefore, it is desirable to simultaneously consider delay, skew, power, area, and sensitivity in clock-tree design. Algorithms for routing-tree optimization have been proposed in much of the literature recently <ref> [3, 4, 5, 12, 13, 15, 17] </ref>. The works in [3, 5, 12, 15] are designed for general routing tree, hence they cannot handle clock tree issues such as skew and sensitivity. <p> Therefore, it is desirable to simultaneously consider delay, skew, power, area, and sensitivity in clock-tree design. Algorithms for routing-tree optimization have been proposed in much of the literature recently [3, 4, 5, 12, 13, 15, 17]. The works in <ref> [3, 5, 12, 15] </ref> are designed for general routing tree, hence they cannot handle clock tree issues such as skew and sensitivity. Although [4, 13, 14, 17] consider sensitivity, skew, and/or delay, most of these algorithms only size wires and do not minimize power and area. <p> Given a distributed RC routing tree T , its signal delay at sink N i is computed by D i = P c j P In practical CMOS applications, capacitive dissipation (due to charging and discharging of load capacitances) usually dominates the other types of power dissipation <ref> [5] </ref>. Hence, we consider only the capacitive dissipation in this paper. Given a clock tree, its power dissipation P can be approximated by P f C tot V 2 dd , where f is the clock frequency and C tot is the total capacitance of the tree.
Reference: [6] <author> R. J. Duffin, E. L. Peterson, and C. Zener, </author> <title> Geometric Programming|Theory and Application, </title> <publisher> John Wiley & Sons, Inc, </publisher> <year> 1967. </year>
Reference-contexts: upper bound constraints by D max , x i , and U i , respectively, we can rewrite these constraints as D i (x) x i 1, and x i Hence M becomes a geometric programming problem which can be reduced to a convex programming problem by an exponential transformation <ref> [6] </ref>. However, since general geometric programming solvers usually involve gradient matrices inversions, their storage and runtime requirements are at least quadratic and cubic in the problem size, respectively. There fore, it is desirable to develop an efficient algorithm for solving this problem.
Reference: [7] <author> D. Dobberpuhl and R. Witek, </author> <title> "A 200MHz 64B dual-issue CMOS microprocessor," </title> <booktitle> Proc. IEEE ISSCC, </booktitle> <pages> pp. 106-107, </pages> <year> 1992. </year>
Reference-contexts: Wire width process variations during fabrication can significantly impact the delay and skew; thus it is important to consider the sensitivity of a design to inter-chip process variations [13]. As reported in <ref> [7] </ref>, power dissipation of a clock tree play a key role in overall chip's power dissipation. Therefore, it is desirable to simultaneously consider delay, skew, power, area, and sensitivity in clock-tree design.
Reference: [8] <author> W. C. </author> <title> Elmore, "The transient response of damped linear networks with particular regard to wide band amplifiers," </title> <journal> J. Applied Physics, </journal> <volume> 19(1), </volume> <year> 1948. </year>
Reference-contexts: We use the switch-resistor model to compute buffer delays (see Figure 2 (b)) and apply the Elmore delay model <ref> [8] </ref> to approximate signal delays in a subtree.
Reference: [9] <author> M. L. Fisher, </author> <title> "An applications oriented guide to Lagrangian relaxation," Interfaces, </title> <booktitle> 15:2, </booktitle> <pages> pp. 10-21, </pages> <month> March-April </month> <year> 1985. </year>
Reference-contexts: There fore, it is desirable to develop an efficient algorithm for solving this problem. Our approach for solving M is based on Lagrangian relax ation <ref> [1, 9] </ref>. We relax the delay constraints into the objective function by introducing Lagrange multipliers i 's, 1 i s, one for each delay constraint D i (x) D max . <p> It is well known that L () is a lower bound of the optimal objective value of M <ref> [1, 9] </ref>. On the other hand, any feasible solution of M is an upper bound of the optimal objective value. Hence, we can use these two bounds to evaluate the quality of a current solution and to determine the termination criteria.
Reference: [10] <author> M. A. B. Jackson, et al., </author> <title> "Clock routing for high performance ICs," </title> <booktitle> Proc. DAC, </booktitle> <pages> pp. 573-579, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: 1 Introduction Delay, skew, power, area, and skew sensitivity are the most important concerns in current clock-tree design. With the increasing complexity of synchronous ASICs, clock skew and clock-signal delay have become important factors in determining circuit performance <ref> [2, 4, 10, 17] </ref>. Wire width process variations during fabrication can significantly impact the delay and skew; thus it is important to consider the sensitivity of a design to inter-chip process variations [13].
Reference: [11] <author> D. G. Luenberger, </author> <title> Linear and Nonlinear Programming, </title> <publisher> Addison-Wesley Pub. Company Inc., </publisher> <year> 1984. </year>
Reference-contexts: On the other hand, any feasible solution of M is an upper bound of the optimal objective value. Hence, we can use these two bounds to evaluate the quality of a current solution and to determine the termination criteria. By the Kuhn-Tucker theory <ref> [11] </ref> and the fact that M is equivalent to a convex programming problem, we have the following theorem.
Reference: [12] <author> N. Menezes, R. Baldick, and L. T. Pillage, </author> <title> "A sequential quadratic programming approach to concurrent gate and wire-sizing," </title> <booktitle> Proc. </booktitle> <address> ICCAD, </address> <year> 1995. </year>
Reference-contexts: As reported in [7], power dissipation of a clock tree play a key role in overall chip's power dissipation. Therefore, it is desirable to simultaneously consider delay, skew, power, area, and sensitivity in clock-tree design. Algorithms for routing-tree optimization have been proposed in much of the literature recently <ref> [3, 4, 5, 12, 13, 15, 17] </ref>. The works in [3, 5, 12, 15] are designed for general routing tree, hence they cannot handle clock tree issues such as skew and sensitivity. <p> Therefore, it is desirable to simultaneously consider delay, skew, power, area, and sensitivity in clock-tree design. Algorithms for routing-tree optimization have been proposed in much of the literature recently [3, 4, 5, 12, 13, 15, 17]. The works in <ref> [3, 5, 12, 15] </ref> are designed for general routing tree, hence they cannot handle clock tree issues such as skew and sensitivity. Although [4, 13, 14, 17] consider sensitivity, skew, and/or delay, most of these algorithms only size wires and do not minimize power and area.
Reference: [13] <author> N. Menezes, S. Pullela, F. Dartu, and L. T. Pillage, </author> <title> "RC interconnect syntheses|a moment fitting approach," </title> <booktitle> Proc. </booktitle> <address> ICCAD, </address> <month> Nov. </month> <year> 1994. </year>
Reference-contexts: Wire width process variations during fabrication can significantly impact the delay and skew; thus it is important to consider the sensitivity of a design to inter-chip process variations <ref> [13] </ref>. As reported in [7], power dissipation of a clock tree play a key role in overall chip's power dissipation. Therefore, it is desirable to simultaneously consider delay, skew, power, area, and sensitivity in clock-tree design. <p> As reported in [7], power dissipation of a clock tree play a key role in overall chip's power dissipation. Therefore, it is desirable to simultaneously consider delay, skew, power, area, and sensitivity in clock-tree design. Algorithms for routing-tree optimization have been proposed in much of the literature recently <ref> [3, 4, 5, 12, 13, 15, 17] </ref>. The works in [3, 5, 12, 15] are designed for general routing tree, hence they cannot handle clock tree issues such as skew and sensitivity. <p> Algorithms for routing-tree optimization have been proposed in much of the literature recently [3, 4, 5, 12, 13, 15, 17]. The works in [3, 5, 12, 15] are designed for general routing tree, hence they cannot handle clock tree issues such as skew and sensitivity. Although <ref> [4, 13, 14, 17] </ref> consider sensitivity, skew, and/or delay, most of these algorithms only size wires and do not minimize power and area. Moreover, existing algorithms suffer long runtime and large storage requirements. For example, [13, 17] convert the skew minimization problem into the least-squares minimization problem. <p> Although [4, 13, 14, 17] consider sensitivity, skew, and/or delay, most of these algorithms only size wires and do not minimize power and area. Moreover, existing algorithms suffer long runtime and large storage requirements. For example, <ref> [13, 17] </ref> convert the skew minimization problem into the least-squares minimization problem. However, due to the storage and inversion of large gradient matrices, their respective runtimes per iteration and storage requirements are about cubic and quadratic in the problem size.
Reference: [14] <author> S. Pullela, N. Menezes, and L. T. Pillage, </author> <title> "Reliable non-zero skew clock trees using wire width optimization," </title> <booktitle> Proc. 30th ACM/IEEE Design Automation Conference, </booktitle> <pages> pp. 165-170, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: Algorithms for routing-tree optimization have been proposed in much of the literature recently [3, 4, 5, 12, 13, 15, 17]. The works in [3, 5, 12, 15] are designed for general routing tree, hence they cannot handle clock tree issues such as skew and sensitivity. Although <ref> [4, 13, 14, 17] </ref> consider sensitivity, skew, and/or delay, most of these algorithms only size wires and do not minimize power and area. Moreover, existing algorithms suffer long runtime and large storage requirements. For example, [13, 17] convert the skew minimization problem into the least-squares minimization problem.
Reference: [15] <author> S. S. Sapatnekar, </author> <title> "RC interconnect optimization under the Elmore delay model," </title> <booktitle> Proc. ICCAD, </booktitle> <pages> pp. 387-391, </pages> <year> 1994. </year>
Reference-contexts: As reported in [7], power dissipation of a clock tree play a key role in overall chip's power dissipation. Therefore, it is desirable to simultaneously consider delay, skew, power, area, and sensitivity in clock-tree design. Algorithms for routing-tree optimization have been proposed in much of the literature recently <ref> [3, 4, 5, 12, 13, 15, 17] </ref>. The works in [3, 5, 12, 15] are designed for general routing tree, hence they cannot handle clock tree issues such as skew and sensitivity. <p> Therefore, it is desirable to simultaneously consider delay, skew, power, area, and sensitivity in clock-tree design. Algorithms for routing-tree optimization have been proposed in much of the literature recently [3, 4, 5, 12, 13, 15, 17]. The works in <ref> [3, 5, 12, 15] </ref> are designed for general routing tree, hence they cannot handle clock tree issues such as skew and sensitivity. Although [4, 13, 14, 17] consider sensitivity, skew, and/or delay, most of these algorithms only size wires and do not minimize power and area.
Reference: [16] <author> R.-S. Tasy, </author> <title> "Exact zero skew," </title> <journal> IEEE TCAD, </journal> <year> 1993. </year>
Reference-contexts: 0.572 590 154 36 427 20.58 0.68 3039 17.25 388 0.6 r5 6201 15.864 2.312 686 974 102 955 63.51 2.06 3085 67.04 1300 2.3 Table 1: Experimental results in delay, skew, and sensitivity. 5 Experimental Results We implemented our algorithm and tested on the five circuits r1-r5 used in <ref> [16] </ref> on an IBM RS/6000 workstation. The per micron resistance and capacitance used are 3m and 0:02f F , respectively. The lower and upper bounds for wire widths are 1m and 10m, respectively.
Reference: [17] <author> Q. Zhu, W. W.-M. Dai, and J. G. </author> <title> Xi, "Optimal sizing of high-speed clock networks based on distributed RC and lossy transmission line models," </title> <booktitle> Proc. ICCAD, </booktitle> <pages> pp. 628-633, </pages> <year> 1993. </year>
Reference-contexts: 1 Introduction Delay, skew, power, area, and skew sensitivity are the most important concerns in current clock-tree design. With the increasing complexity of synchronous ASICs, clock skew and clock-signal delay have become important factors in determining circuit performance <ref> [2, 4, 10, 17] </ref>. Wire width process variations during fabrication can significantly impact the delay and skew; thus it is important to consider the sensitivity of a design to inter-chip process variations [13]. <p> As reported in [7], power dissipation of a clock tree play a key role in overall chip's power dissipation. Therefore, it is desirable to simultaneously consider delay, skew, power, area, and sensitivity in clock-tree design. Algorithms for routing-tree optimization have been proposed in much of the literature recently <ref> [3, 4, 5, 12, 13, 15, 17] </ref>. The works in [3, 5, 12, 15] are designed for general routing tree, hence they cannot handle clock tree issues such as skew and sensitivity. <p> Algorithms for routing-tree optimization have been proposed in much of the literature recently [3, 4, 5, 12, 13, 15, 17]. The works in [3, 5, 12, 15] are designed for general routing tree, hence they cannot handle clock tree issues such as skew and sensitivity. Although <ref> [4, 13, 14, 17] </ref> consider sensitivity, skew, and/or delay, most of these algorithms only size wires and do not minimize power and area. Moreover, existing algorithms suffer long runtime and large storage requirements. For example, [13, 17] convert the skew minimization problem into the least-squares minimization problem. <p> Although [4, 13, 14, 17] consider sensitivity, skew, and/or delay, most of these algorithms only size wires and do not minimize power and area. Moreover, existing algorithms suffer long runtime and large storage requirements. For example, <ref> [13, 17] </ref> convert the skew minimization problem into the least-squares minimization problem. However, due to the storage and inversion of large gradient matrices, their respective runtimes per iteration and storage requirements are about cubic and quadratic in the problem size.
References-found: 17

