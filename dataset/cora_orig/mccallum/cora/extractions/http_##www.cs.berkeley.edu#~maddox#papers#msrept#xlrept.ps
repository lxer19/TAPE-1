URL: http://www.cs.berkeley.edu/~maddox/papers/msrept/xlrept.ps
Refering-URL: http://http.cs.berkeley.edu/~maddox/papers/msrept/abstract.html
Root-URL: http://www.cs.berkeley.edu
Title: Semantically-Sensitive Macroprocessing  
Author: William Maddox 
Note: Sponsored by the Defense Advanced Research Projects Agency (DoD), monitored by Space and Naval Warfare Systems Command under Contract N00039-88-C-0292, and by IBM under IBM Research Contract No. 564516. William Maddox was supported in part by an AT&T Foundation Graduate Scholarship.  
Date: December 15, 1989  
Abstract: Report No. UCB/CSD 89/545 Computer Science Division (EECS) University of California Berkeley, California 94720 Abstract Conventional procedure and type definition mechanisms are not sufficiently powerful to express many programming abstractions that can be captured by syntactic transformations. Unfortunately, conventional macroprocessing is oblivious to the semantics of the base language, resulting in scoping anomalies, poor handling of static semantic errors, and an inability to perform transformations dependent on semantic attributes of the manipulated program. We introduce a new mechanism, semantic macros, which permit such transformations a significant level of access to the static semantic properties of the program fragments they manipulate. In this way, new static semantic processing, including compilation of embedded languages with a rich static semantics of their own, can be incorporated into user-defined language extensions. A proof-of-concept language, XL, is described which embodies this mechanism. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <editor> A new phylum is added to the keyword table of the object namespace. </editor> <title> Subsequent commands may add new syntactic forms to this namespace belonging to the new phylum or containing instances of it as constituents. If a phylum of the same name has previously been defined in the same namespace, the old definition is shadowed, and new references to the phylum name refer to the new definition. Syntax declarations processed when the previous definition was in effect retain their meanings. </title> <type> 7 </type>

References-found: 1

