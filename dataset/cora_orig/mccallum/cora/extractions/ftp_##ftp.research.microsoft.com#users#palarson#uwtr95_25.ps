URL: ftp://ftp.research.microsoft.com/users/palarson/uwtr95_25.ps
Refering-URL: http://www.research.microsoft.com/~palarson/publications.htm
Root-URL: http://www.research.microsoft.com
Title: CS-95-25 Text Relational Database Management Systems: Overview and Proposed SQL Extensions  
Author: G. E. Blake, M. P. Consens, I. J. Davis, P. Kilpelainen E. Kuikka, P. A. Larson, T. Snider, and F. W. Tompa 
Note: Also available via anonymous ftp from site cs-archive.uwaterloo.ca, directory cs-archive/CS-95-25, file CS-95-25.ps.Z; and via the World Wide Web from page http://bluebox.uwaterloo.ca/OED/trdbms.html. Supercedes earlier version published in Proceedings of the ADB'94 Conference.  
Date: June 1995  
Address: Waterloo, Ontario, Canada N2L 3G1  
Affiliation: UW Centre for the New OED and Text Research, Department of Computer Science, University of Waterloo,  
Abstract: Combined text and relational database support is increasingly recognized as an emerging need of industry, spanning applications requiring text fields as parts of their data (e.g., for customer support) to those augmenting primary text resources by conventional relational data (e.g., for publication control). In this paper, we propose extensions to SQL2 that provide flexible and efficient access to structured text described by SGML or other encodings. We also propose an architecture to support a text/relational database management system as a federated database environment, where component databases are accessed via "agents": SQL agents that translate standard or extended SQL2 queries into vendor-specific dialects, and text agents that process text sub-queries on full-text search engines. 
Abstract-found: 1
Intro-found: 1
Reference: [SGM92] <author> P. Angerstein, </author> <title> Texcel "SGML Sample Queries", </title> <type> unpublished, </type> <month> 28 October </month> <year> 1992. </year>
Reference-contexts: SELECT mark_subtexts (article,'&lt;summary&gt;..&lt;%&gt;#..&lt;%&gt;') FROM Encyclopedia 18 Mark all elements whose parent has an attribute named status with value "Obs." SELECT mark_subtexts (article,'&lt;%&gt;[^:status.=Obs".,^&lt;%&gt;#]') FROM Encyclopedia Additional examples showing how the proposed DML might address Paula Angerstein's SGML challenge queries <ref> [SGM92] </ref> are provided in the Appendix. 6 Conclusions and Further Work We have developed a single model within which both text and relational data can be described so that users can access and manipulate all their data meaningfully.
Reference: [ATA91] <author> ATA 89-9C SFQL Committee, </author> <title> "Advanced Retrieval Standard |SFQL: Structured Full-text Query Language," ATA specification 100, </title> <note> Rev 30, Version 2.2, </note> <institution> Prerelease C, Air Transport Association, </institution> <note> ATA 89-9C.SFQL V2.2/PR-C (October 1991) 84 pp. </note>
Reference-contexts: The Air Transport Association has proposed the Structured Full-text Query Language (SFQL) as an extension to SQL incorporating SGML-based formatted text types <ref> [ATA91] </ref>. More recently, Oracle Corporation's SQL*TextRetrieval Version 2 provides a text retrieval product, supported by inverted indexing and a thesaurus capability, to be used in conjunction with the Oracle DBMS [Ora92]. Similarly, IDI's BASISplus supports structured full-text retrieval in conjunction with relational database functionality [Sey92]. <p> Previous authors have proposed extensions to traditional SQL operators to include operations on unstructured TEXT fields, encoded as character strings. In particular concatenation, string functions, and pattern matching predicates such as LIKE and CONTAINS have been supported <ref> [ATA91, Ora92, Sac92] </ref>. We include traditional SQL operators with these extensions in our design. In this section we further extend SQL2 by describing operators on the two new data types, TEXT and GRAMMAR, and propose new SQL functions that allow these data types to be manipulated.
Reference: [Bil92] <author> A. Biliris, </author> <title> "The Performance of Three Database Storage Structures for Managing Large Objects," </title> <booktitle> Proc. Sigmod 92, ACM, Sigmod Record, </booktitle> <volume> Vol. 21, No. </volume> <month> 2 (June </month> <year> 1992) </year> <month> 276-285. </month>
Reference-contexts: Alternatively, text storage has been provided by conventional systems, where long data fields are used for binary large objects or "blobs" <ref> [Bil92] </ref>, but operators to support text manipulation have not usually been provided and these systems do not support SGML-like structured text.
Reference: [Chr94] <author> V. Christophides, S. Abiteboul, S. Cluet, and M. Scholl, </author> <title> "From Structured Documents to Novel Query Facilities," </title> <booktitle> Proc. Sigmod 94, ACM, Sigmod Record, </booktitle> <volume> Vol. 23, No. </volume> <month> 2 (June </month> <year> 1994) </year> <month> 313-324. </month>
Reference-contexts: Similarly there is a recent proposal to extend an object-oriented SQL dialect to support SGML documents <ref> [Chr94] </ref>. In both of the above approaches, the relational model has been extended to encompass structured data of arbitrary type, and subsequently structured text has been supported as a special case.
Reference: [Ful94] <editor> Fulcrum SearchServer Version 2.0 Introduction to SearchServer, </editor> <month> June 30, </month> <year> 1994. </year>
Reference-contexts: We have begun to implement and test the architecture and language, supporting data stored partially in an Oracle relational database, partially under the control of a DB2/6000 relational database, partially under the control of the PAT text engine [OTC95], and partially under the control of Fulcrum's Search Server text engine <ref> [Ful94] </ref>. We expect to test all three text interfaces (SGML, regions, and flat-text), and expect that our experience will be transferrable to other engines with various capabilities.
Reference: [Gol90] <author> C. F. Goldfarb. </author> <title> The SGML Handbook. </title> <publisher> Oxford University Press, Oxford, </publisher> <year> 1990. </year>
Reference-contexts: We start with the requirement that the application program interface must be an extension of both SQL2, the industry standard for relational data [ISO90, ISO92], and SGML, the industry standard for structured text <ref> [Gol90, ISO86] </ref>. The T/RDBMS can be built as a federated database system with the actual data stored and managed by standard (relational and text) data management systems, which serve as component database systems for a hybrid query processor (Figure 1).
Reference: [Gon87] <author> G. H. Gonnet and F. W. Tompa, </author> <title> "Mind Your Grammar: a New Approach to Modelling Text," Very Large Data Bases (VLDB), </title> <note> Vol. 13 (September 1987) pp. 339-346. </note>
Reference-contexts: Several approaches to text management have been proposed. Customized document storage management systems, including text-specific access languages, have been implemented on top of commercial relational database systems (see, for example, [Wei85, Mar91]) or as stand-alone systems (see, for example, <ref> [Gon87, Mac92] </ref>); these systems are incapable of simultaneously supporting conventional data.
Reference: [ISO86] <author> International Organization for Standardization, </author> <title> International Standard 8879: Information Processing | Text and Office Systems | Standard Generalized Markup Language (SGML), </title> <booktitle> first edition | 1986-10-15(Ref. </booktitle> <volume> No. ISO 8879-1986(E)), </volume> <pages> 155 pp. </pages>
Reference-contexts: We start with the requirement that the application program interface must be an extension of both SQL2, the industry standard for relational data [ISO90, ISO92], and SGML, the industry standard for structured text <ref> [Gol90, ISO86] </ref>. The T/RDBMS can be built as a federated database system with the actual data stored and managed by standard (relational and text) data management systems, which serve as component database systems for a hybrid query processor (Figure 1).
Reference: [ISO90] <institution> International Organization for Standardization, </institution> <note> "Information technology Database Language SQL 2 Draft Report", ISO Committee ISO/IEC JTC 1/SC 21, </note> <year> 1990. </year>
Reference-contexts: We start with the requirement that the application program interface must be an extension of both SQL2, the industry standard for relational data <ref> [ISO90, ISO92] </ref>, and SGML, the industry standard for structured text [Gol90, ISO86]. The T/RDBMS can be built as a federated database system with the actual data stored and managed by standard (relational and text) data management systems, which serve as component database systems for a hybrid query processor (Figure 1).
Reference: [ISO92] <author> International Standard, </author> <title> "Information technology Database Languages - SQL, ISO Committee ISO/IEC 9075, </title> <year> 1992. </year>
Reference-contexts: We start with the requirement that the application program interface must be an extension of both SQL2, the industry standard for relational data <ref> [ISO90, ISO92] </ref>, and SGML, the industry standard for structured text [Gol90, ISO86]. The T/RDBMS can be built as a federated database system with the actual data stored and managed by standard (relational and text) data management systems, which serve as component database systems for a hybrid query processor (Figure 1).
Reference: [ISO94] <author> International Organization for Standardization, </author> <title> ISO/IEC JTC1/SC21 Information Retrieval, Transfer and Management for OSI WG3 Database: ISO/IEC SC21/WG3 N1679 SQL/MM SOU-004 ISO Working Draft SQL Multimedia and Application Packages (SQL/MM) Part 2: </title> <type> Full-Text, </type> <month> March </month> <year> 1994. </year> <month> 20 </month>
Reference-contexts: The SQL Multimedia and Application Packages (SQL/MM) project has a particular interest in defining abstract data types which would provide support for Full-Text within SQL3 <ref> [ISO94] </ref>.
Reference: [Mar91] <author> C. C. Marshall, F. G. Halasz, R. A. Rogers, and W. C. Janssen Jr., "Aquanet: </author> <title> a Hy--pertext Tool to Hold Your Knowledge in Place," </title> <booktitle> Proc. 3rd ACM Conf. on Hypertext: Hypertext 91, </booktitle> <address> San Antonio (Dec. </address> <year> 1991) </year> <month> 261-275. </month>
Reference-contexts: Several approaches to text management have been proposed. Customized document storage management systems, including text-specific access languages, have been implemented on top of commercial relational database systems (see, for example, <ref> [Wei85, Mar91] </ref>) or as stand-alone systems (see, for example, [Gon87, Mac92]); these systems are incapable of simultaneously supporting conventional data.
Reference: [Mac92] <author> I.A. Macleod, </author> <title> Data Modelling Requirements for Document in INFORMATION SYSTEMS CONCEPTS: Improving the Understanding, </title> <booktitle> North-Holland, also the Proceedings of the IFIP TC8/WG8.1 Conference, </booktitle> <address> pp.259-272, Alexandria, </address> <year> 1992. </year>
Reference-contexts: Several approaches to text management have been proposed. Customized document storage management systems, including text-specific access languages, have been implemented on top of commercial relational database systems (see, for example, [Wei85, Mar91]) or as stand-alone systems (see, for example, <ref> [Gon87, Mac92] </ref>); these systems are incapable of simultaneously supporting conventional data.
Reference: [Mic92] <author> Microsoft Corporation, </author> <title> Microsoft ODBC Application Programmer's Guide, </title> <publisher> Microsoft Corporation, </publisher> <year> 1992. </year>
Reference-contexts: The call-level interface between applications and the hybrid query processor, and between the integration engine and the underlying agents will be based on Microsoft's Open Database Connectivity (ODBC) specification <ref> [Mic92] </ref>. Several approaches to text management have been proposed.
Reference: [Ora92] <author> Oracle Corporation, </author> <type> SQL*TextRetrieval Version 2 Technical Overview, </type> <institution> Oracle Corporation, </institution> <year> 1992. </year> <title> 45 pp. Multimedia and Application Packages (SQL/MM) Part 2: </title> <type> Full-Text, </type> <month> March </month> <year> 1994 </year>
Reference-contexts: More recently, Oracle Corporation's SQL*TextRetrieval Version 2 provides a text retrieval product, supported by inverted indexing and a thesaurus capability, to be used in conjunction with the Oracle DBMS <ref> [Ora92] </ref>. Similarly, IDI's BASISplus supports structured full-text retrieval in conjunction with relational database functionality [Sey92]. Although each system provides a mechanism to assemble larger text units from the constituents, this is not provided within SQL. Thus, for example, such larger units cannot be presented as fields within an SQL view. <p> Previous authors have proposed extensions to traditional SQL operators to include operations on unstructured TEXT fields, encoded as character strings. In particular concatenation, string functions, and pattern matching predicates such as LIKE and CONTAINS have been supported <ref> [ATA91, Ora92, Sac92] </ref>. We include traditional SQL operators with these extensions in our design. In this section we further extend SQL2 by describing operators on the two new data types, TEXT and GRAMMAR, and propose new SQL functions that allow these data types to be manipulated.
Reference: [OTC95] <author> Open Text Corporation, </author> <title> "Pat Reference Manual", Open Text 5 System Integration Guide and Database Administration Guide, Release 5.0, </title> <year> 1995. </year>
Reference-contexts: We have begun to implement and test the architecture and language, supporting data stored partially in an Oracle relational database, partially under the control of a DB2/6000 relational database, partially under the control of the PAT text engine <ref> [OTC95] </ref>, and partially under the control of Fulcrum's Search Server text engine [Ful94]. We expect to test all three text interfaces (SGML, regions, and flat-text), and expect that our experience will be transferrable to other engines with various capabilities.
Reference: [Sac92] <author> R. Sacks-Davis, A. Kent, K. Ramamohanarao, J. Thom, , and J. Zobel, </author> <title> "Atlas: a nested relational database system for text applications", </title> <type> Technical Report CITRI/TR-92-52, </type> <institution> Collaborative Information Technology Research, </institution> <address> Victoria, Australia, </address> <month> July </month> <year> 1992. </year>
Reference-contexts: In order to maintain structured text in a single relational field, researchers at Australia's Collaborative Information Technology Research Institute have designed and implemented a nested relational database system (Atlas) and an extended SQL language to provide text support <ref> [Sac92] </ref>. Similarly there is a recent proposal to extend an object-oriented SQL dialect to support SGML documents [Chr94]. In both of the above approaches, the relational model has been extended to encompass structured data of arbitrary type, and subsequently structured text has been supported as a special case. <p> Previous authors have proposed extensions to traditional SQL operators to include operations on unstructured TEXT fields, encoded as character strings. In particular concatenation, string functions, and pattern matching predicates such as LIKE and CONTAINS have been supported <ref> [ATA91, Ora92, Sac92] </ref>. We include traditional SQL operators with these extensions in our design. In this section we further extend SQL2 by describing operators on the two new data types, TEXT and GRAMMAR, and propose new SQL functions that allow these data types to be manipulated.
Reference: [Sey92] <author> Seybold Publications, </author> <title> "IDI Pursues Document Management," </title> <journal> Report on Publishing Systems, </journal> <volume> Vol. 21, No. 16, </volume> <month> May </month> <year> 1992. </year>
Reference-contexts: More recently, Oracle Corporation's SQL*TextRetrieval Version 2 provides a text retrieval product, supported by inverted indexing and a thesaurus capability, to be used in conjunction with the Oracle DBMS [Ora92]. Similarly, IDI's BASISplus supports structured full-text retrieval in conjunction with relational database functionality <ref> [Sey92] </ref>. Although each system provides a mechanism to assemble larger text units from the constituents, this is not provided within SQL. Thus, for example, such larger units cannot be presented as fields within an SQL view.

References-found: 18

