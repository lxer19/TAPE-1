URL: http://compgeom.cs.uiuc.edu/~jeffe/pubs/linsat.ps.gz
Refering-URL: http://compgeom.cs.uiuc.edu/~jeffe/pubs/linsat.html
Root-URL: http://www.cs.uiuc.edu
Email: email: jeffe@cs.duke.edu.  
Title: Lower Bounds for Linear Satisfiability Problems  
Author: Jeff Erickson 
Date: June 29, 1995  May 8, 1997  
Note: Submitted to the Chicago Journal of Computer Science  Revised and resubmitted  The author is currently affiliated with the  
Address: Berkeley, CA 94720  Box 90129, Durham, NC, 27708-0128,  
Affiliation: Computer Science Division University of California  Center for Geometric Computing, Computer Science Department, Duke University,  
Abstract: We prove an (n dr=2e ) lower bound for the following problem: For some fixed linear equation in r variables, given n real numbers, do any r of them satisfy the equation? Our lower bound holds in a restricted linear decision tree model, in which each decision is based on the sign of an arbitrary linear combination of r or fewer inputs. In this model, our lower bound is as large as possible. Previously, this lower bound was known only for a few special cases and only in more specialized models of computation. Our lower bound follows from an adversary argument. We show that for any algorithm, there is a input that contains (n dr=2e ) "critical" r-tuples, which have the following important property. None of the critical tuples satisfies the equation; however, if the algorithm does not directly test each critical tuple, then the adversary can modify the input, in a way that is undetectable to the algorithm, so that some untested tuple does satisfy the equation. A key step in the proof is the introduction of formal infinitesimals into the adversary input. A theorem of Tarski implies that if we can construct a single input containing infinitesimals that is hard for every algorithm, then for every fl Portions of this research were done at the NSF Regional Geometry Institute at Smith College, Northampton, MA, July 1993, with the support of NSF grant DMS-9013220. This research was also partially supported by NSF grant CCR-9058440. An extended abstract of this paper appears in Proc. 6th Ann. ACM-SIAM Symp. Discrete Algorithms, pages 388-395, 1995. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E. M. Arkin, Y.-J. Chiang, M. Held, J. S. B. Mitchell, V. Sacristan, S. S. Skeina, and T.-C. Yang. </author> <title> On minimum-area hulls. </title> <booktitle> In Proc. 4th Ann. European Symp. Algorithms, volume 1136 of Lecture Notes in Computer Science, </booktitle> <pages> pages 334-348, </pages> <year> 1996. </year>
Reference-contexts: Further examples are described in <ref> [1, 9, 6, 28] </ref>. In a similar vein, Hernandez Barrera [25] describes several problems which can be quickly reduced to the linear satisfiability problem for = t 1 +t 2 t 3 t 4 . <p> are bounded by M n n n=2 (n + 1), where M is the absolute value of the largest coefficient of any query polynomial. (To ensure that the cell containing the adversary input is bounded, we observe that the adversary inputs we construct lie in the interior of the hypercube <ref> [1; 1] </ref> n and assume without loss of generality that every algorithm uses the 2n query polynomials t i 1.) In the case where the polynomial and every query polynomial is homogeneous, all the query hyperplanes pass through the origin.
Reference: [2] <author> M. Ben-Or. </author> <title> Lower bounds for algebraic computation trees. </title> <booktitle> In Proc. 15th Ann. ACM Symp. Theory of Computing, </booktitle> <pages> pages 80-86, </pages> <year> 1983. </year>
Reference-contexts: Dobkin and Lipton's techniques were generalized to higher-degree algebraic decision trees by Steele and Yao [31] and to algebraic computation trees by Ben-Or <ref> [2] </ref>, and the (n log n) lower bound holds in these models as well. Several more advanced techniques have been developed for proving lower bounds in these models [3, 21, 22, 34, 35], but none of them improve the (n log n) lower bound.
Reference: [3] <author> A. Bjorner, L. Lovasz, and A. C. C. Yao. </author> <title> Linear decision trees: Volume estimates and topological bounds. </title> <booktitle> In Proc. 24th Ann. ACM Symp. Theory of Computing, </booktitle> <pages> pages 170-177, </pages> <year> 1992. </year>
Reference-contexts: Several more advanced techniques have been developed for proving lower bounds in these models <ref> [3, 21, 22, 34, 35] </ref>, but none of them improve the (n log n) lower bound.
Reference: [4] <author> S. Bloch, J. Buss, and J. Goldsmith. </author> <title> How hard are n 2 -hard problems? SIGACT News, </title> <booktitle> 25 </booktitle> <pages> 83-85, </pages> <year> 1994. </year>
Reference-contexts: Examples include computing the Minkowski sum of two polygons, sorting the vertices of a line arrangement, and determining whether one polygon can be translated to fit inside another. 1 Some earlier papers use the more suggestive but potentially misleading term "n 2 - hard"; see <ref> [4] </ref>. 2 Higher-dimensional versions of several of these problems can be reduced to linear satisfiability problem with more variables.
Reference: [5] <author> J. Bochnak, M. Coste, and M.-F. Roy. Geometrie algebraique reelle, </author> <title> volume 12 of Ergebnisse der Mathematik und ihrer Grenzgebiete (3). </title> <publisher> Springer-Verlag, </publisher> <year> 1987. </year>
Reference-contexts: A real closed field is an ordered field, no proper algebraic extension of which is also an ordered field. The real closure f K of an ordered field K is the smallest real closed field that contains it. We refer the interested reader to <ref> [5, 24] </ref> for further details and more formal definitions, and to [7, 8] for previous algorithmic applications of real closed fields. A formula in the first-order theory of the reals, or more simply, a first-order formula, is a quantified boolean combination of polynomial equations and inequalities. <p> Obviously, this only makes sense if K contains the coefficients of the formula; every ordered field we consider is an extension field of the reals. The following principle was originally proven by Tarski [33], in a slightly different form. See <ref> [5] </ref> for a proof of this version. The Transfer Principle Let f K and be a real closed extension field of IR. An elementary formula holds in f K if and only if it holds in IR.
Reference: [6] <author> P. Bose, M. van Kreveld, and G. Toussaint. </author> <title> Filling polyhedral molds. </title> <booktitle> In Proc. 3rd Workshop Algorithms Data Struct., volume 709 of Lecture Notes in Computer Science, </booktitle> <pages> pages 210-221. </pages> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: Further examples are described in <ref> [1, 9, 6, 28] </ref>. In a similar vein, Hernandez Barrera [25] describes several problems which can be quickly reduced to the linear satisfiability problem for = t 1 +t 2 t 3 t 4 .
Reference: [7] <author> J. Canny. </author> <title> Some algebraic and geometric computations in PSPACE. </title> <booktitle> In Proc. 20th Ann. ACM Symp. Theory of Computing, </booktitle> <pages> pages 460-467, </pages> <year> 1988. </year>
Reference-contexts: Infinitesimals have been used extensively in geometric perturbation techniques [14, 15, 36], in algo 3 rithms dealing with real semi-algebraic sets <ref> [7, 8] </ref>, and in other lower bound arguments [21, 23]. Second, we allow our adversary inputs to be degenerate. That is, both the original adversary input and the modified input contain r-tuples in the zero-set of . <p> The real closure f K of an ordered field K is the smallest real closed field that contains it. We refer the interested reader to [5, 24] for further details and more formal definitions, and to <ref> [7, 8] </ref> for previous algorithmic applications of real closed fields. A formula in the first-order theory of the reals, or more simply, a first-order formula, is a quantified boolean combination of polynomial equations and inequalities.
Reference: [8] <author> J. Canny. </author> <title> Computing roadmaps of semi-algebraic sets. </title> <booktitle> In Proc. 9th Ann. Symp. Algebraic Algorithms and Error Correcting Codes, </booktitle> <pages> pages 94-107, </pages> <year> 1991. </year>
Reference-contexts: Infinitesimals have been used extensively in geometric perturbation techniques [14, 15, 36], in algo 3 rithms dealing with real semi-algebraic sets <ref> [7, 8] </ref>, and in other lower bound arguments [21, 23]. Second, we allow our adversary inputs to be degenerate. That is, both the original adversary input and the modified input contain r-tuples in the zero-set of . <p> The real closure f K of an ordered field K is the smallest real closed field that contains it. We refer the interested reader to [5, 24] for further details and more formal definitions, and to <ref> [7, 8] </ref> for previous algorithmic applications of real closed fields. A formula in the first-order theory of the reals, or more simply, a first-order formula, is a quantified boolean combination of polynomial equations and inequalities.
Reference: [9] <author> M. de Berg, M. de Groot, and M. Overmars. </author> <title> Perfect binary space partitions. </title> <booktitle> In Proc. 5th Canad. Conf. Comput. Geom., </booktitle> <pages> pages 109-114, </pages> <year> 1993. </year>
Reference-contexts: Further examples are described in <ref> [1, 9, 6, 28] </ref>. In a similar vein, Hernandez Barrera [25] describes several problems which can be quickly reduced to the linear satisfiability problem for = t 1 +t 2 t 3 t 4 .
Reference: [10] <author> M. Dietzfelbinger. </author> <title> Lower bounds for sorting of sums. </title> <journal> Theoret. Comput. Sci., </journal> <volume> 66 </volume> <pages> 137-155, </pages> <year> 1989. </year>
Reference-contexts: First, we allow our adversary inputs to contain formal infinitesimals, instead of just real numbers. Tarski's Transfer Principle implies that if there is a hard input with infinitesimals, then for any algorithm, there is a corresponding real-valued input that is hard for that algorithm. Previously, Dietzfelbinger and Maass <ref> [11, 10] </ref> used a similar technique to prove lower bounds, using "inaccessible" numbers, or numbers having "different orders of magnitude"; an early version of this technique was also used by Fredman [19]. <p> Fredman's result was generalized by Dietzfelbinger <ref> [10] </ref>, who derived an (n r=2 ) lower bound on the depth of any comparison tree that determines, given a set of n reals, whether any two disjoint subsets of size r=2 have the same sum. <p> In other words, the only way for an r-linear decision tree to distinguish between X and ^ X is to perform a direct query on the critical tuple. Critical tuples play the same role in our adversary argument as Dietzfelbinger's "fooling pairs" <ref> [10] </ref> and Erickson and Seidel's "collapsible simplices" [17, 16]. To prove our lower bound, it would suffice to prove the existence of a nondegenerate input X with several critical tuples. <p> + (j p 2 ) 2 ")=a 2 ; ^x 3j = (b=3 2 jffi 1 + (j p 3 ) 2 ")=a 3 : Before continuing the proof, let us attempt to provide some intuition about our construction; the same intuition can be applied to Dietzfelbinger's construction as well <ref> [10] </ref>. To keep things simple, consider the case where a i = 1 for all i and b = 0. We can write any linear expression P r where ff i 2 IR, as a real linear combination of the infinitesimals i ; ffi k ; ". <p> With a little more care, we can show that the real inputs are derived by replacing the infinitesimals by sufficiently small and sufficiently well-separated real values. Thus, our infinitesimals play exactly the same role as the "inaccessibles" used by Dietzfelbinger and Maass <ref> [11, 10] </ref>, but we avoid having to derive explicit values based on the coefficients of the query polynomials. 3.3 Removing Degeneracies One final problem remains. <p> This compares favorably with Dietzfelbinger's adversary construction for sorting sums of (r=2)-tuples using direct queries, which can be realized using integers between 1 and n n <ref> [10] </ref>. In fact, our construction improves Dietzfelbinger's bound by roughly a factor of n n=21 , since in the cases he considers, we have M = 1. 4 Matching Upper Bounds In this section, we show that our lower bound is as large as possible.
Reference: [11] <author> M. Dietzfelbinger and W. Maass. </author> <title> Lower bound arguments with "inaccessible" numbers. </title> <journal> J. Comput. Syst. Sci., </journal> <volume> 36 </volume> <pages> 313-335, </pages> <year> 1988. </year>
Reference-contexts: First, we allow our adversary inputs to contain formal infinitesimals, instead of just real numbers. Tarski's Transfer Principle implies that if there is a hard input with infinitesimals, then for any algorithm, there is a corresponding real-valued input that is hard for that algorithm. Previously, Dietzfelbinger and Maass <ref> [11, 10] </ref> used a similar technique to prove lower bounds, using "inaccessible" numbers, or numbers having "different orders of magnitude"; an early version of this technique was also used by Fredman [19]. <p> tree of depth O (n 4 log n) that solves the n-dimensional knapsack problem | Given a set of n real numbers, does any subset sum to 1? His nonuniform algorithm can be adapted to solve any of the linear satisfiability problems we consider, in the same amount of time <ref> [11] </ref>. Thus, there is no hope of proving lower bounds bigger than (n 4 log n) for any linear satisfiability problem in the full linear decision tree model. <p> With a little more care, we can show that the real inputs are derived by replacing the infinitesimals by sufficiently small and sufficiently well-separated real values. Thus, our infinitesimals play exactly the same role as the "inaccessibles" used by Dietzfelbinger and Maass <ref> [11, 10] </ref>, but we avoid having to derive explicit values based on the coefficients of the query polynomials. 3.3 Removing Degeneracies One final problem remains.
Reference: [12] <author> D. P. Dobkin and R. J. Lipton. </author> <title> On the complexity of computations under varying sets of primitives. </title> <journal> J. Comput. Syst. Sci., </journal> <volume> 18 </volume> <pages> 86-91, </pages> <year> 1979. </year>
Reference-contexts: input can always be perturbed slightly, resulting in a new nondegenerate adversary input with just as many critical tuples as the original. 1.1 Previous Results For any constant r 2, an (n log n) lower bound for any r-variable linear satisfiability problem follows from the techniques of Dobkin and Lipton <ref> [12] </ref> in the (unrestricted) linear decision tree model. Dobkin and Lipton observe that the set of inputs that follow a fixed computational path through a linear decision tree is connected.
Reference: [13] <author> H. Edelsbrunner. </author> <title> Algorithms in Combinatorial Geometry. </title> <publisher> Springer-Verlag, </publisher> <year> 1987. </year>
Reference-contexts: The dimension of a cell is the dimension of the smallest affine subspace that contains it. For example, the n-dimensional cells are the connected components of IR n n S N i=1 h i . An arrangement of N hyperplanes in IR n has O (N n ) cells <ref> [13] </ref>. The closure of every cell in a hyperplane arrangement is a (convex) polyhedron. More generally, a polyhedron is the intersection of finite number of hyperplanes and closed halfspaces. A bounded polyhedron is called a polytope. <p> Each ridge is contained in exactly two facets. For example, a (three-dimensional) cube has six facets, 12 ridges, and a total of 26 faces. We refer the reader to Edelsbrunner's monograph <ref> [13] </ref> for further details on hyperplane arrangements, and to Ziegler's lecture notes [37] for a thorough introduction to the theory of convex polytopes and polyhedra. 2.2 r-Linear Decision Trees We now formally define our model of computation. <p> There is a one-to-one correspondence between the n-dimensional cells in the resulting hyperplane arrangement and the possible orderings of Y [ Z. Since an arrangement of N hyperplanes in IR n has at most P n N = O (N n ) cells of dimension n <ref> [13] </ref>, there are at most O (n rn ) possible orderings.
Reference: [14] <author> H. Edelsbrunner and E. P. Mucke. </author> <title> Simulation of simplicity: a technique to cope with degenerate cases in geometric algorithms. </title> <journal> ACM Trans. Graph., </journal> <volume> 9 </volume> <pages> 66-104, </pages> <year> 1990. </year>
Reference-contexts: Unlike their technique, using infinitesimals makes it possible, and indeed sufficient, to derive a single adversary input for any problem, rather than explicitly constructing a different input for every algorithm. Infinitesimals have been used extensively in geometric perturbation techniques <ref> [14, 15, 36] </ref>, in algo 3 rithms dealing with real semi-algebraic sets [7, 8], and in other lower bound arguments [21, 23]. Second, we allow our adversary inputs to be degenerate. That is, both the original adversary input and the modified input contain r-tuples in the zero-set of .
Reference: [15] <author> I. Emiris and J. Canny. </author> <title> A general approach to removing degeneracies. </title> <booktitle> In Proc. 32nd Ann. IEEE Symp. Foundations of Computer Science, </booktitle> <pages> pages 405-413, </pages> <year> 1991. </year>
Reference-contexts: Unlike their technique, using infinitesimals makes it possible, and indeed sufficient, to derive a single adversary input for any problem, rather than explicitly constructing a different input for every algorithm. Infinitesimals have been used extensively in geometric perturbation techniques <ref> [14, 15, 36] </ref>, in algo 3 rithms dealing with real semi-algebraic sets [7, 8], and in other lower bound arguments [21, 23]. Second, we allow our adversary inputs to be degenerate. That is, both the original adversary input and the modified input contain r-tuples in the zero-set of .
Reference: [16] <author> J. Erickson. </author> <title> New lower bounds for convex hull problems in odd dimensions. </title> <booktitle> In Proc. 12th Ann. ACM Symp. Comput. Geom., </booktitle> <pages> pages 1-9, </pages> <year> 1996. </year>
Reference-contexts: For example, deciding if a set of points in IR d contains d + 1 points on a common hyperplane is at least as hard as the linear satisfiability problem for = t 1 + t 2 + + t d <ref> [16] </ref>. In this paper, we prove lower bounds on the complexity of linear sat-isfiability problems. <p> Our lower bound generalizes Dietzfelbinger's lower bound to arbitrary r-linear decision trees. More recent techniques of Erickson and Seidel [17] (but see also [18]) and Erickson <ref> [16] </ref> can be used to prove lower bounds for certain linear satisfia-bility problems, in a model of computation that allows only direct queries. However, there are still several such problems for which these techniques appear to be inadequate. <p> In other words, the only way for an r-linear decision tree to distinguish between X and ^ X is to perform a direct query on the critical tuple. Critical tuples play the same role in our adversary argument as Dietzfelbinger's "fooling pairs" [10] and Erickson and Seidel's "collapsible simplices" <ref> [17, 16] </ref>. To prove our lower bound, it would suffice to prove the existence of a nondegenerate input X with several critical tuples.
Reference: [17] <author> J. Erickson and R. Seidel. </author> <title> Better lower bounds on detecting affine and spherical degeneracies. </title> <journal> Discrete Comput. Geom., </journal> <volume> 13 </volume> <pages> 41-57, </pages> <year> 1995. </year>
Reference-contexts: Our lower bound generalizes Dietzfelbinger's lower bound to arbitrary r-linear decision trees. More recent techniques of Erickson and Seidel <ref> [17] </ref> (but see also [18]) and Erickson [16] can be used to prove lower bounds for certain linear satisfia-bility problems, in a model of computation that allows only direct queries. However, there are still several such problems for which these techniques appear to be inadequate. <p> In other words, the only way for an r-linear decision tree to distinguish between X and ^ X is to perform a direct query on the critical tuple. Critical tuples play the same role in our adversary argument as Dietzfelbinger's "fooling pairs" [10] and Erickson and Seidel's "collapsible simplices" <ref> [17, 16] </ref>. To prove our lower bound, it would suffice to prove the existence of a nondegenerate input X with several critical tuples. <p> Unfortunately, a lower bound even in the 4-linear decision tree model seems to be completely out of reach at present. Ultimately, we would like to prove a lower bound larger than (n log n) for any non-NP-hard polynomial satisfiability problem, in some general 4 Erickson and Seidel <ref> [17] </ref> and an earlier version of this paper both claim a generalization of our perturbation technique to restricted classes of algebraic decision trees, but the proofs are incorrect [18]. 22 model of computation such as linear decision trees, algebraic decision trees, or even algebraic computation trees.
Reference: [18] <author> J. Erickson and R. Seidel. </author> <title> Erratum to: Better lower bounds on detecting affine and spherical degeneracies. </title> <journal> Discrete Comput. Geom., </journal> <note> to appear. http://www.cs.duke.edu/ ~ jeffe/pubs/oops.html. </note>
Reference-contexts: Our lower bound generalizes Dietzfelbinger's lower bound to arbitrary r-linear decision trees. More recent techniques of Erickson and Seidel [17] (but see also <ref> [18] </ref>) and Erickson [16] can be used to prove lower bounds for certain linear satisfia-bility problems, in a model of computation that allows only direct queries. However, there are still several such problems for which these techniques appear to be inadequate. <p> prove a lower bound larger than (n log n) for any non-NP-hard polynomial satisfiability problem, in some general 4 Erickson and Seidel [17] and an earlier version of this paper both claim a generalization of our perturbation technique to restricted classes of algebraic decision trees, but the proofs are incorrect <ref> [18] </ref>. 22 model of computation such as linear decision trees, algebraic decision trees, or even algebraic computation trees. Linear satisfiability problems, in particular 3sum, seem to be good candidates for study. <p> Linear satisfiability problems, in particular 3sum, seem to be good candidates for study. Acknowledgments I am deeply indebted to the anonymous referees, whose thorough reading of the article led to many significant improvements in its presentation, including the elimination of one major bug <ref> [18] </ref>. I also thank Raimund Seidel for several helpful discussions.
Reference: [19] <author> M. L. Fredman. </author> <title> How good is the information theory bound in sorting? Theoret. </title> <journal> Comput. Sci., </journal> <volume> 1 </volume> <pages> 355-361, </pages> <year> 1976. </year>
Reference-contexts: This matches the best known upper bounds when r is odd, and is within a logarithmic factor when r is even. We also show, using results of Fredman <ref> [19] </ref>, that our lower bounds are as large as possible in the model we consider. We prove our lower bounds using an adversary argument. <p> Previously, Dietzfelbinger and Maass [11, 10] used a similar technique to prove lower bounds, using "inaccessible" numbers, or numbers having "different orders of magnitude"; an early version of this technique was also used by Fredman <ref> [19] </ref>. Unlike their technique, using infinitesimals makes it possible, and indeed sufficient, to derive a single adversary input for any problem, rather than explicitly constructing a different input for every algorithm. <p> Several more advanced techniques have been developed for proving lower bounds in these models [3, 21, 22, 34, 35], but none of them improve the (n log n) lower bound. Fredman <ref> [19] </ref> proved an (n 2 ) lower bound on the number of simple comparisons required, given two sets X and Y , to sort the elements of the multiset X + Y = fx + y j x 2 X; y 2 Y g, or to decide whether it contains any <p> Our (n dr=2e ) lower bound matches these upper bounds when r is odd, but is a logarithmic factor away when r is even and greater than 2. We use the following result of Fredman <ref> [19] </ref> to show that our lower bounds cannot be improved even in this case. Lemma 7 (Fredman [19]) Let be a subset of the n! orderings of f1; 2; : : : ; ng for some fixed n. <p> We use the following result of Fredman <ref> [19] </ref> to show that our lower bounds cannot be improved even in this case. Lemma 7 (Fredman [19]) Let be a subset of the n! orderings of f1; 2; : : : ; ng for some fixed n. There exists a comparison tree of depth at most log 2 (jj) + 2n that sorts any sequence of n numbers with order type in . <p> Closing the logarithmic gap between these upper and lower bounds, even for the special case of sorting X + Y considered by Fredman <ref> [19] </ref>, is a long-standing and apparently very difficult open problem. The closest result is a simple divide-and-conquer algorithm of Steiger and Streinu [32] that sorts X + Y in O (n 2 log n) time using only O (n 2 ) comparisons; see also [27, 26]. <p> Second, we argue that this single adversary input can be degenerate; although degenerate inputs cannot be used directly in our adversary argument, simple properties of hyperplane arrangements and convex polytopes imply the existence of appropriate nondegenerate inputs. The matching nonuniform upper bounds follow from results of Fredman <ref> [19] </ref>. An obvious open problem is to improve our lower bounds to stronger models of computation. In principle, our techniques can be used to prove lower bounds in the unrestricted linear decision tree model; of course, the bottleneck is the actual adversary construction.
Reference: [20] <author> A. Gajentaan and M. Overmars. </author> <title> On a class of O(n 2 ) problems in computational geometry. </title> <journal> Comput. Geom. Theory Appl., </journal> <volume> 5 </volume> <pages> 165-185, </pages> <year> 1995. </year> <title> Published previously as: n 2 -hard Problems in Computational Geometry, </title> <type> Report RUU-CS-93-15, </type> <institution> Dept. Comput. Sci., Utrecht Univ., </institution> <address> Utrecht, Netherlands, </address> <month> Apr. </month> <year> 1993. </year> <month> 24 </month>
Reference-contexts: The simplest example of a linear satisfiability problem is the well-known element uniqueness problem, which asks whether any two elements of a given multiset are equal; in this case, we have = t 1 t 2 . Gajentaan and Overmars <ref> [20] </ref> describe a large class of "3sum-hard" geometric problems 1 , each of which can be reduced, in sub-quadratic time, to deciding if a set of numbers has three elements whose sum is zero ( = t 1 + t 2 + t 3 ). <p> three sets A; B; C, each containing n integers between 0 and m, we can determine whether there are elements a 2 A; b 2 B; c 2 C such that a + b = c, in time O (n + m log m). (Note that this problem is 3sum-hard <ref> [20] </ref>!) Seidel's algorithm transforms the sets A; B; C into bit vectors, computes the integer vector representing the multiset A + B using a fast Fourier transform, and compares it to the bit vector of C.
Reference: [21] <author> D. Grigoriev, M. Karpinksi, F. Meyer auf der Heide, and R. Smolensky. </author> <title> A lower bound for randomized algebraic decision trees. </title> <booktitle> In Proc. 28th Ann. ACM Symp. Theory of Computing, </booktitle> <pages> pages 612-619, </pages> <year> 1996. </year>
Reference-contexts: Infinitesimals have been used extensively in geometric perturbation techniques [14, 15, 36], in algo 3 rithms dealing with real semi-algebraic sets [7, 8], and in other lower bound arguments <ref> [21, 23] </ref>. Second, we allow our adversary inputs to be degenerate. That is, both the original adversary input and the modified input contain r-tuples in the zero-set of . <p> Several more advanced techniques have been developed for proving lower bounds in these models <ref> [3, 21, 22, 34, 35] </ref>, but none of them improve the (n log n) lower bound.
Reference: [22] <author> D. Grigoriev, M. Karpinski, and N. Vorobjov. </author> <title> Improved lower bound on testing membership to a polyhedron by algebraic decision trees. </title> <booktitle> In Proc. 36th Ann. IEEE Symp. Foundations of Computer Science, </booktitle> <pages> pages 258-265, </pages> <year> 1995. </year>
Reference-contexts: Several more advanced techniques have been developed for proving lower bounds in these models <ref> [3, 21, 22, 34, 35] </ref>, but none of them improve the (n log n) lower bound.
Reference: [23] <author> D. Grigoriev and N. Vorobjov. </author> <title> Complexity lower bounds for computation trees with elementary transcendental function gates. </title> <journal> Theoret. Comput. Sci., </journal> <volume> 157 </volume> <pages> 185-214, </pages> <year> 1996. </year>
Reference-contexts: Infinitesimals have been used extensively in geometric perturbation techniques [14, 15, 36], in algo 3 rithms dealing with real semi-algebraic sets [7, 8], and in other lower bound arguments <ref> [21, 23] </ref>. Second, we allow our adversary inputs to be degenerate. That is, both the original adversary input and the modified input contain r-tuples in the zero-set of .
Reference: [24] <author> J. Heintz, T. Recio, and M.-F. Roy. </author> <title> Algorithms in real algebraic geometry and applications to computational geometry. In Discrete and Computational Geometry: </title> <booktitle> Papers from the DIMACS Special Year, volume 6 of DIMACS Series in Discrete Mathematics and Theoretical Computer Science, </booktitle> <pages> pages 137-163. </pages> <publisher> Amer. Math. Soc., </publisher> <address> Providence, RI, </address> <year> 1991. </year>
Reference-contexts: A real closed field is an ordered field, no proper algebraic extension of which is also an ordered field. The real closure f K of an ordered field K is the smallest real closed field that contains it. We refer the interested reader to <ref> [5, 24] </ref> for further details and more formal definitions, and to [7, 8] for previous algorithmic applications of real closed fields. A formula in the first-order theory of the reals, or more simply, a first-order formula, is a quantified boolean combination of polynomial equations and inequalities.
Reference: [25] <author> A. Hernandez Barrera. </author> <title> Finding an o(n 2 log n) algorithm is sometimes hard. </title> <booktitle> In Proc. 8th Canad. Conf. Comput. Geom., </booktitle> <pages> pages 289-294. </pages> <publisher> Car-leton University Press, </publisher> <address> Ottawa, Canada, </address> <year> 1996. </year>
Reference-contexts: Further examples are described in [1, 9, 6, 28]. In a similar vein, Hernandez Barrera <ref> [25] </ref> describes several problems which can be quickly reduced to the linear satisfiability problem for = t 1 +t 2 t 3 t 4 .
Reference: [26] <author> J. Kahn and J. H. Kim. </author> <title> Entropy and sorting. </title> <journal> J. Comput. System Sci., </journal> <volume> 51 </volume> <pages> 390-399, </pages> <year> 1995. </year>
Reference-contexts: The closest result is a simple divide-and-conquer algorithm of Steiger and Streinu [32] that sorts X + Y in O (n 2 log n) time using only O (n 2 ) comparisons; see also <ref> [27, 26] </ref>. Their algorithm can be adapted to solve any r-variable linear satisfiability problem, for any even r &gt; 2, in O (n r=2 log n) time, using only O (n r=2 ) r-linear queries.
Reference: [27] <author> J.-L. Lambert. </author> <title> Sorting the sums x i + y i in O(n 2 ) comparisons. </title> <journal> Theoret. Comput. Sci., </journal> <volume> 103 </volume> <pages> 137-141, </pages> <year> 1992. </year>
Reference-contexts: The closest result is a simple divide-and-conquer algorithm of Steiger and Streinu [32] that sorts X + Y in O (n 2 log n) time using only O (n 2 ) comparisons; see also <ref> [27, 26] </ref>. Their algorithm can be adapted to solve any r-variable linear satisfiability problem, for any even r &gt; 2, in O (n r=2 log n) time, using only O (n r=2 ) r-linear queries.
Reference: [28] <author> J. Matousek. </author> <title> On geometric optimization with few violated constraints. </title> <journal> Discrete Comput. Geom., </journal> <volume> 14 </volume> <pages> 365-384, </pages> <year> 1995. </year>
Reference-contexts: Further examples are described in <ref> [1, 9, 6, 28] </ref>. In a similar vein, Hernandez Barrera [25] describes several problems which can be quickly reduced to the linear satisfiability problem for = t 1 +t 2 t 3 t 4 .
Reference: [29] <editor> F. Meyer auf der Heide. </editor> <title> A polynomial time linear search algorithm for the n-dimensional knapsack problem. </title> <journal> J. ACM, </journal> <volume> 31 </volume> <pages> 668-676, </pages> <year> 1984. </year>
Reference-contexts: However, there are still several such problems for which these techniques appear to be inadequate. Our lower bounds should be compared with the following result of Meyer auf der Heide <ref> [29] </ref>. <p> When we reach a leaf, we return its label as the output of the algorithm. This definition is essentially the same as that given by Steele and Yao [31]; linear decision trees are also equivalent to the "linear search algorithms" investigated by Meyer auf der Heide <ref> [29] </ref>. An r-linear decision tree is a linear decision tree, each of whose query polynomials has at most r linear terms (and possibly a constant term). Linear decision trees have a natural geometric interpretation. Each query polynomial induces a hyperplane in the space IR n of possible inputs. <p> In practice, however, all these coefficients are likely to be integers, or at least rationals. In this case, we can use the following result of Meyer auf der Heide <ref> [29] </ref> to bound the number of bits required by our adversary construction. Lemma 6 (Meyer auf der Heide) Let H be a set of hyperplanes in IR n , each of which has integer coefficients between M and M .
Reference: [30] <author> R. Seidel. </author> <type> Personal communication, </type> <year> 1997. </year>
Reference-contexts: We reiterate that our lower bounds apply only to linear decision trees where the number of terms in any query is bounded by a constant. Seidel <ref> [30] </ref> has recently shown that, given three sets A; B; C, each containing n integers between 0 and m, we can determine whether there are elements a 2 A; b 2 B; c 2 C such that a + b = c, in time O (n + m log m). (Note
Reference: [31] <author> J. M. Steele and A. C. Yao. </author> <title> Lower bounds for algebraic decision trees. </title> <journal> J. Algorithms, </journal> <volume> 3 </volume> <pages> 1-8, </pages> <year> 1982. </year>
Reference-contexts: Since the set of nondegenerate inputs has n (n) connected components, even when r = 2, any linear decision tree must have n (n) leaves, and therefore must have depth (n log n). Dobkin and Lipton's techniques were generalized to higher-degree algebraic decision trees by Steele and Yao <ref> [31] </ref> and to algebraic computation trees by Ben-Or [2], and the (n log n) lower bound holds in these models as well. <p> When we reach a leaf, we return its label as the output of the algorithm. This definition is essentially the same as that given by Steele and Yao <ref> [31] </ref>; linear decision trees are also equivalent to the "linear search algorithms" investigated by Meyer auf der Heide [29]. An r-linear decision tree is a linear decision tree, each of whose query polynomials has at most r linear terms (and possibly a constant term).
Reference: [32] <author> W. Steiger and I. Streinu. </author> <title> A pseudo-algorithmic separation of lines from pseudo-lines. </title> <journal> Inform. Process. Lett., </journal> <volume> 53 </volume> <pages> 295-299, </pages> <year> 1995. </year> <month> 25 </month>
Reference-contexts: Closing the logarithmic gap between these upper and lower bounds, even for the special case of sorting X + Y considered by Fredman [19], is a long-standing and apparently very difficult open problem. The closest result is a simple divide-and-conquer algorithm of Steiger and Streinu <ref> [32] </ref> that sorts X + Y in O (n 2 log n) time using only O (n 2 ) comparisons; see also [27, 26].
Reference: [33] <author> A. Tarski. </author> <title> A Decision Method for Elementary Algebra and Geometry. </title> <note> Prepared for publication by J. </note> <editor> C. C. McKinsey. </editor> <publisher> University of California Press, </publisher> <year> 1951. </year>
Reference-contexts: Obviously, this only makes sense if K contains the coefficients of the formula; every ordered field we consider is an extension field of the reals. The following principle was originally proven by Tarski <ref> [33] </ref>, in a slightly different form. See [5] for a proof of this version. The Transfer Principle Let f K and be a real closed extension field of IR. An elementary formula holds in f K if and only if it holds in IR.
Reference: [34] <author> A. C.-C. Yao. </author> <title> Algebraic decision trees and Euler characteristics. </title> <booktitle> In Proc. 33rd Ann. IEEE Symp. Foundations of Computer Science, </booktitle> <pages> pages 268-277, </pages> <year> 1992. </year>
Reference-contexts: Several more advanced techniques have been developed for proving lower bounds in these models <ref> [3, 21, 22, 34, 35] </ref>, but none of them improve the (n log n) lower bound.
Reference: [35] <author> A. C.-C. Yao. </author> <title> Decision tree complexity and Betti numbers. </title> <booktitle> In Proc. 26th Ann. ACM Symp. Theory of Computing, </booktitle> <pages> pages 615-624, </pages> <year> 1994. </year>
Reference-contexts: Several more advanced techniques have been developed for proving lower bounds in these models <ref> [3, 21, 22, 34, 35] </ref>, but none of them improve the (n log n) lower bound.
Reference: [36] <author> C. K. Yap. </author> <title> A geometric consistency theorem for a symbolic perturbation scheme. </title> <journal> J. Comput. Syst. Sci., </journal> <volume> 40 </volume> <pages> 2-18, </pages> <year> 1990. </year>
Reference-contexts: Unlike their technique, using infinitesimals makes it possible, and indeed sufficient, to derive a single adversary input for any problem, rather than explicitly constructing a different input for every algorithm. Infinitesimals have been used extensively in geometric perturbation techniques <ref> [14, 15, 36] </ref>, in algo 3 rithms dealing with real semi-algebraic sets [7, 8], and in other lower bound arguments [21, 23]. Second, we allow our adversary inputs to be degenerate. That is, both the original adversary input and the modified input contain r-tuples in the zero-set of .
Reference: [37] <author> G. M. Ziegler. </author> <title> Lectures on Polytopes, volume 152 of Graduate Texts in Mathematics. </title> <publisher> Springer-Verlag, </publisher> <year> 1994. </year> <month> 26 </month>
Reference-contexts: Each ridge is contained in exactly two facets. For example, a (three-dimensional) cube has six facets, 12 ridges, and a total of 26 faces. We refer the reader to Edelsbrunner's monograph [13] for further details on hyperplane arrangements, and to Ziegler's lecture notes <ref> [37] </ref> for a thorough introduction to the theory of convex polytopes and polyhedra. 2.2 r-Linear Decision Trees We now formally define our model of computation. <p> Since ^ F is a ridge of C, it must be contained in exactly two facets of C. One of these facets is F ; call the other one ^ C. Any hyperplane that contains two facets of a polyhedron contains the entire polyhedron <ref> [37] </ref>. Thus, any hyperplane that contains ^ C but not C also contains ^ F ^ C but not F .
References-found: 37

