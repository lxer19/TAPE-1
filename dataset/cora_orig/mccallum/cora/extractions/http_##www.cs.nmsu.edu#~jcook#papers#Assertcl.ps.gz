URL: http://www.cs.nmsu.edu/~jcook/papers/Assertcl.ps.gz
Refering-URL: http://www.cs.nmsu.edu/~jcook/papers/
Root-URL: http://www.cs.nmsu.edu
Email: jcook@cs.nmsu.edu  
Title: Assertions for the Tcl Language  
Author: Jonathan E. Cook 
Web: http://www.cs.nmsu.edu/jcook  
Address: Las Cruces, NM 88003  
Affiliation: Department of Computer Science New Mexico State University  
Abstract: Assertions, even as simple as the C assert macro, offer important self-checking properties to programs, and improve the robustness of software when they are used. This paper describes AsserTcl, an assertion package for the Tcl programming language. Our assertions take the form of commands in the program text, and cover point assertions about the computation state, assertions about procedure input values and the return value, and assertions about the values that variables may take on over their whole lifetime. In addition, universal and existential quantifiers are provided for both lists and arrays, not only for individual elements, but for sequences of elements as well. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Auguston, S. Banerjee, M. Mamnani, G. Nabi, J. Re-infelds, U. Sarkans, and I. Strnad. </author> <title> A Debugger and Assertion Checker for the Awk Programming Language. </title> <booktitle> In Proc. International Conference on Software Engineering: Education and Practice, </booktitle> <address> Dunedin, New Zealand, </address> <year> 1996. </year>
Reference-contexts: Most programming languages are not designed to include assertions, with the notable exception being Eif-fel [3], but efforts have produced annotation languages for Ada [2], C [5], Awk <ref> [1] </ref>, and others. This paper describes assertions for the Tcl programming language [4]. Tcl is a popular, interpreted, "scripting" language. It is now being used to build large (tens and hundreds of KLOCs) systems, many of which are being used in the commercial sector.
Reference: [2] <author> David Luckham. </author> <title> Programming with Specifications: An introduction to Anna, a language for specifying Ada programs. Texts and Monographs in Computer Science. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1990. </year>
Reference-contexts: 1 Introduction Assertions|declarative annotations to a program that describe some property about the program and its state|are useful tools in producing robust software. Most programming languages are not designed to include assertions, with the notable exception being Eif-fel [3], but efforts have produced annotation languages for Ada <ref> [2] </ref>, C [5], Awk [1], and others. This paper describes assertions for the Tcl programming language [4]. Tcl is a popular, interpreted, "scripting" language. It is now being used to build large (tens and hundreds of KLOCs) systems, many of which are being used in the commercial sector. <p> Tcl is an evolving language, and the next version will have namespaces, which will be akin to packages or modules. Earlier work on Ada packages <ref> [2] </ref> and Eiffel objects [3] have shown that modules present interesting issues in developing effective assertions for them. In addition, object oriented extensions to Tcl exist, and these can provide a platform for exploring issues about assertions for classes and objects.
Reference: [3] <author> Bertrand Meyer. </author> <title> Object-Oriented Software Construction. </title> <publisher> Prentice Hall, </publisher> <address> New York, </address> <year> 1988. </year>
Reference-contexts: 1 Introduction Assertions|declarative annotations to a program that describe some property about the program and its state|are useful tools in producing robust software. Most programming languages are not designed to include assertions, with the notable exception being Eif-fel <ref> [3] </ref>, but efforts have produced annotation languages for Ada [2], C [5], Awk [1], and others. This paper describes assertions for the Tcl programming language [4]. Tcl is a popular, interpreted, "scripting" language. <p> Tcl is an evolving language, and the next version will have namespaces, which will be akin to packages or modules. Earlier work on Ada packages [2] and Eiffel objects <ref> [3] </ref> have shown that modules present interesting issues in developing effective assertions for them. In addition, object oriented extensions to Tcl exist, and these can provide a platform for exploring issues about assertions for classes and objects.
Reference: [4] <author> John K. Ousterhout. </author> <title> Tcl and the Tk Toolkit. Professional Computing Series. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1994. </year>
Reference-contexts: Most programming languages are not designed to include assertions, with the notable exception being Eif-fel [3], but efforts have produced annotation languages for Ada [2], C [5], Awk [1], and others. This paper describes assertions for the Tcl programming language <ref> [4] </ref>. Tcl is a popular, interpreted, "scripting" language. It is now being used to build large (tens and hundreds of KLOCs) systems, many of which are being used in the commercial sector. Unfortunately, few tools exist that help one build robust Tcl applications. This is where assertions fit in. <p> The error command can also be used to return from a procedure, but since this method is not interceptable (due to the above-mentioned limitations on the return command), we make no effort to catch this command. In <ref> [4] </ref>, it is recommended that error not be used except for true errors, in any case. 6 Examples This section presents a few simple examples to give a flavor for what assertions in Tcl look like and can do.
Reference: [5] <author> David S. Rosenblum. </author> <title> A Practical Approach to Programming with Assertions. </title> <journal> IEEE Transactions on Software Engineering, </journal> <year> 1995. </year>
Reference-contexts: 1 Introduction Assertions|declarative annotations to a program that describe some property about the program and its state|are useful tools in producing robust software. Most programming languages are not designed to include assertions, with the notable exception being Eif-fel [3], but efforts have produced annotation languages for Ada [2], C <ref> [5] </ref>, Awk [1], and others. This paper describes assertions for the Tcl programming language [4]. Tcl is a popular, interpreted, "scripting" language. It is now being used to build large (tens and hundreds of KLOCs) systems, many of which are being used in the commercial sector.
References-found: 5

