URL: http://www.cs.washington.edu/homes/xqin/jpdc.ps
Refering-URL: http://www.cs.washington.edu/homes/xqin/
Root-URL: 
Title: MIN-Graph: A Tool for Monitoring and Visualizing MIN-based Multiprocessor Performance  
Author: Xiaodong Zhang Naga S. Nalluri Xiaohan Qin 
Note: This work has been supported in part by the National Science Foundation under research grants CCR-9008991, CCR-9102854, and instrumentation grant DUE-9250265, and the U.S. Air Force under Agreement FD-204092-64157. Part of the experiments were conducted on the GP1000 at BBN Advanced Computer Inc., and on the BBN TC2000  
Address: San Antonio, Texas 78249  Dallas, Texas 75261-9616  Seattle, Washington 98195  
Affiliation: Division of Computer Science University of Texas at San Antonio  American Airlines Decision Technologies  Department of Computer Science and Engineering University of Washington  at Lawrence Livermore National Laboratory.  
Abstract: A Multistage Interconnection Network (MIN) makes it possible to build large-scale shared-memory multiprocessor systems. To provide insight into dynamic system performance, we have developed an integrated data collection, analysis, and data visualization environment for a MIN-based multiprocessor system, called MIN-Graph. MIN-Graph is a graphical instrumentation monitor to aid users in investigating performance problems and in determining an effective way of exploiting the high performance capabilities of interconnection network multiprocessor systems. Our monitor measures, analyzes, evaluates and displays the events, performance and overhead of interprocessor communication, process scheduling, remote-memory access, network contention and others on a MIN-based multiprocessor. The graphical monitor is X-window based and implemented on the BBN GP1000 and the BBN TC2000. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Anderson, T. E. </author> <title> The performance of spin-lock alternatives for shared-memory multiproces sors. </title> <journal> IEEE Transactions on Parallel and Distributed Systems. </journal> <volume> 1, </volume> <month> 1 (Jan. </month> <year> 1990), </year> <pages> 6-16. </pages>
Reference-contexts: In order to reduce contention in the network and the memory module holding the lock, it would be more efficient that each processor busy-waits only on a locally-accessible variable for the lock. Several queueing spinning algorithms have been proposed <ref> [1, 14, 21] </ref>. Various spin-lock algorithms for spin-locks have been implemented on the GP1000 and the TC2000 for performance evaluation [19]. These algorithms were monitored by the MIN-Graph. Here, we present some of the representative performance results.
Reference: 2. <institution> BBN Advanced Computer Inc. Butterfly GP1000 Switch Tutorial. </institution> <year> (1989). </year>
Reference: 3. <institution> BBN Advanced Computer Inc. Inside the GP1000. </institution> <year> (1989). </year>
Reference: 4. <institution> BBN Advanced Computer Inc. Uniform System Approach. </institution> <year> (1989). </year>
Reference: 5. <institution> BBN Advanced Computer Inc. Inside the TC2000. </institution> <year> (1989). </year>
Reference-contexts: The time ratio between a local access and a remote access with no other processors active on the GP1000 is up to 1:15 depending on the types of the access [6, 20]. 2.3 The BBN TC2000 The BBN TC2000 <ref> [5] </ref> is the latest and the most powerful member of the BBN family, which supports up to 512 Motorola 88100 processor nodes. The butterfly switch composed of 8 fi 8 switches is used for the network.
Reference: 6. <author> Bodin, F., et al. </author> <title> Performance evaluation and prediction for parallel algorithms on the BBN GP1000. </title> <booktitle> Proceeding of 1990 International Conference on Supercomputing, </booktitle> <publisher> ACM Press, </publisher> <year> 1990, </year> <pages> 401-413. </pages>
Reference-contexts: The time ratio between a local access and a remote access with no other processors active on the GP1000 is up to 1:15 depending on the types of the access <ref> [6, 20] </ref>. 2.3 The BBN TC2000 The BBN TC2000 [5] is the latest and the most powerful member of the BBN family, which supports up to 512 Motorola 88100 processor nodes. The butterfly switch composed of 8 fi 8 switches is used for the network.
Reference: 7. <author> Dongarra, J. J., et al. </author> <title> A tool to aid in the design, implementation, and understanding of matrix algorithms for parallel processors. </title> <journal> J. Parallel Distrib. Comput. </journal> <volume> 9, </volume> <month> 3 (June </month> <year> 1990), </year> <pages> 185-202. </pages>
Reference-contexts: In addition, an interleaved shared-memory scheme is supported as an option in order to reduce memory contention in computing. 3 3 Why the MIN-Graph is unique for a MIN-based architecture A number of parallel monitoring tools have been developed in a past few years. SHMAP <ref> [7] </ref>, developed at the University of Tennessee to aid in the design, implementation and understanding matrix algorithms for parallel processing, is an example of a software monitor. SHMAP uses software to simulate hierarchical memory organization and different cache replacement policies.
Reference: 8. <author> Dennis, J. E., Jr., Mart inez, J. M. and Zhang, X. </author> <title> Parallel block triangular decompositions for solving large sparse nonlinear systems of equations. </title> <booktitle> Proceedings of the 5th SIAM Conference on Parallel Processing for Scientific Computing, </booktitle> <publisher> SIAM Press, </publisher> <year> 1992, </year> <pages> pp. 168-173. </pages>
Reference-contexts: A triangular decomposition approach is to transform a sparse nonlinear system of equations into a block triangular structure so that the computations can be decomposed for parallel processing. Dennis, Mart inez and Zhang <ref> [8, 9] </ref> develop several efficient parallel methods for solving a sparse nonlinear system of equations. We monitored one of the methods which was implemented on the GP1000. This method is a variation of the Gauss-Seidel-Newton method.
Reference: 9. <author> Dennis, J. E., Jr., Mart inez, J. M., and Zhang, X. </author> <title> Triangular decomposition methods for solving reducible nonlinear systems of equations. </title> <note> SIAM J. Optimization, to appear. 15 </note>
Reference-contexts: A triangular decomposition approach is to transform a sparse nonlinear system of equations into a block triangular structure so that the computations can be decomposed for parallel processing. Dennis, Mart inez and Zhang <ref> [8, 9] </ref> develop several efficient parallel methods for solving a sparse nonlinear system of equations. We monitored one of the methods which was implemented on the GP1000. This method is a variation of the Gauss-Seidel-Newton method.
Reference: 10. <author> Geist G. A., et al. PICL, </author> <title> a portable instrumented communication library, C reference manual. </title> <type> Technical Report, </type> <institution> ORNL/TM-11130, Oak Ridge National Laboratory, </institution> <year> 1990. </year>
Reference-contexts: The hardware-assisted monitoring system is built up to circumvent the high overhead of software tracing and lack of a global clock with high resolution. PICL, a Portable Instrumented Communication Library developed at the Oak Ridge National Laboratory <ref> [10] </ref> is a software monitor mainly monitoring message-passing events. Since both the Hyperview and the PICL were originally built for hypercube architecture, which solely supports a message passing paradigm, the events of interest mainly focus on communications among processor nodes.
Reference: 11. <author> Karlin, S., Morris, M., Ghandour, G., Leung, M, </author> <title> Efficient algorithms for molecular sequence analysis, </title> <booktitle> Proceedings of National Academy of Science, </booktitle> <volume> 85, </volume> <year> 1988, </year> <pages> 841-845. </pages>
Reference-contexts: In molecular sequence analysis, the problem of classifying nucleotide patterns and relationships between multiple sequences are of fundamental importance. Karlin et al. <ref> [11] </ref> described a "linked-list" algorithm to search for statistically significant long matching segments among multiple sequences. The idea of this algorithm has been refined, implemented, and applied to a data set of 386 DNA sequences from 12 the intestinal bacteria Escherichia coli genome totaling over 1.43 million nucleotides [12].
Reference: 12. <author> Leung, M., Blaisdell, B., Burge, C., and Karlin, S. </author> <title> An efficient algorithms for identifying matches with errors in multiple long molecular sequences. </title> <journal> Journal of Molecular Biology, </journal> <volume> Vol. 221, </volume> <year> 1991, </year> <pages> 1367-1378. </pages>
Reference-contexts: The idea of this algorithm has been refined, implemented, and applied to a data set of 386 DNA sequences from 12 the intestinal bacteria Escherichia coli genome totaling over 1.43 million nucleotides <ref> [12] </ref>. This algorithm has been extended in two ways: to search for inverted complementary matches in DNA sequences, and to assemble significant core matches into alignment groups. Multiple sequences are concatenated into a single composite sequence, converting the problem of matching to the search for repeats in a single sequence.
Reference: 13. <author> Malony, A. D. and Reed, D. A. </author> <title> Visualizing parallel computer system performance. Instru mentation for Future Parallel Computing Systems, edited by M. </title> <editor> Simmons, R. Koskela and I. Bucher, </editor> <publisher> ACM Press, </publisher> <year> 1990, </year> <pages> 59-90. </pages>
Reference-contexts: Initially, the M31 instrumentation system was to provide a completely non-invasive and passive hardware event collector. However a number of problems such as additional complexity and very expensive cost made the purely passive monitor unwieldy for software performance analysis. Malony and Reed <ref> [13] </ref>, using the Intel iPSC/2 as a target distributed-memory architecture, have developed a hybrid performance instrumentation tool integrating data collection, analysis, and visualization in one box, called Hyperview.
Reference: 14. <author> Mellor-Crummey, J. M. and Scott, M. L. </author> <title> Algorithms for scalable synchronization on shared memory multiprocessors. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 9, 1, </volume> <year> 1991, </year> <pages> 21-65. </pages>
Reference-contexts: In order to reduce contention in the network and the memory module holding the lock, it would be more efficient that each processor busy-waits only on a locally-accessible variable for the lock. Several queueing spinning algorithms have been proposed <ref> [1, 14, 21] </ref>. Various spin-lock algorithms for spin-locks have been implemented on the GP1000 and the TC2000 for performance evaluation [19]. These algorithms were monitored by the MIN-Graph. Here, we present some of the representative performance results.
Reference: 15. <author> Ortega, J. M. and Rheinboldt, W. C. </author> <title> Iterative Solution of Nonlinear Equations in Several Variables. </title> <publisher> Academic Press, </publisher> <year> 1970. </year>
Reference-contexts: We monitored one of the methods which was implemented on the GP1000. This method is a variation of the Gauss-Seidel-Newton method. It evaluates the diagonal blocks concurrently instead of successively as the one in the classical Gauss-Seidel-Newton method <ref> [15] </ref>, The number of variables of the problem we solved on the BBN GP1000 is 1,400. The problem is decomposed into 14 blocks, each of which has 100 variables. Each of the nonlinear sub-systems can be evaluated and factored independently. We solved the problem by using the parallel Gauss-Seidel-Newton method.
Reference: 16. <author> Qin, X. </author> <title> Modeling, Monitoring and Visualizing Parallel Performance on a MIN-based Mul tiprocessor. </title> <institution> M.S. Thesis of Computer Science, University of Texas at San Antonio, </institution> <month> Dec. </month> <year> 1991. </year>
Reference-contexts: To keep the program logic unchanged after tracing code has been inserted, we use the concept of the comma expression in C language. For detailed information about the preprocessor implementation, the interested reader may refer to <ref> [16] </ref>. If we only want to trace events generated by system calls, a lexical analyzer would be enough. Every system call can be handled as a "token" plus some mechanisms to recognize its parameters.
Reference: 17. <author> Reilly, M. H. </author> <title> A Performance Monitor for Parallel Programs, </title> <publisher> Academic Press, </publisher> <year> 1990. </year>
Reference-contexts: However, SHMAP does not directly monitor parallel programs on a shared-memory machine but uses simulations on a sequential machine. On the other hand, Reilly <ref> [17] </ref> develops a hardware monitor for the multiprocessor VAX system M31 designed and built by DEC Advanced VAX System Group. The M31 was designed to allow experimentation in the area of parallel program development and system design.
Reference: 18. <author> Srinivasan, P. </author> <title> Computational Algorithms for Multiple Molecular Sequence Analysis, </title> <institution> M.S. The sis of Computer Science, University of Texas at San Antonio, </institution> <month> December, </month> <year> 1991. </year>
Reference-contexts: Fourth, maximally extended matches which meet the prescribed printing criteria will be produced in the output file. This algorithm has been implemented by Srinivasan <ref> [18] </ref> on the BBN TC2000. The three phases of the matching algorithm | constructing the pointer array, finding the core blocks and extending core blocks with errors have been developed in parallel forms.
Reference: 19. <author> Zhang, X. and He, K., </author> <title> Evaluating synchronization effects to scientific computations on large scale shared-memory multiprocessors. </title> <booktitle> Proceedings of the Sixth SIAM Conference on Parallel Processing for Scientific Computing, </booktitle> <publisher> SIAM, </publisher> <address> Philadelphia, </address> <year> 1993. </year>
Reference-contexts: Several queueing spinning algorithms have been proposed [1, 14, 21]. Various spin-lock algorithms for spin-locks have been implemented on the GP1000 and the TC2000 for performance evaluation <ref> [19] </ref>. These algorithms were monitored by the MIN-Graph. Here, we present some of the representative performance results. The basic operations for all the algorithms are that each processor requests lock acquisitions 10 times in a loop. The critical sections for all the experiments were set to 0.
Reference: 20. <author> X. Zhang and X. Qin, </author> <title> "Performance prediction and evaluation for a NUMA Multiprocessor", </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 17, 10, </volume> <year> 1991, </year> <pages> 1059-1068. </pages>
Reference-contexts: The time ratio between a local access and a remote access with no other processors active on the GP1000 is up to 1:15 depending on the types of the access <ref> [6, 20] </ref>. 2.3 The BBN TC2000 The BBN TC2000 [5] is the latest and the most powerful member of the BBN family, which supports up to 512 Motorola 88100 processor nodes. The butterfly switch composed of 8 fi 8 switches is used for the network.
Reference: 21. <author> Zhang, X. and Wu, W. </author> <title> On measuring and evaluating synchronization and virtual memory performance of a MIN-based multiprocessor. </title> <booktitle> Proceedings of the 25th Hawaii International Conference of Systems Sciences, </booktitle> <volume> Vol. 1, </volume> <publisher> IEEE Computer Society Press, </publisher> <year> 1992, </year> <pages> 218-224. 16 </pages>
Reference-contexts: In order to reduce contention in the network and the memory module holding the lock, it would be more efficient that each processor busy-waits only on a locally-accessible variable for the lock. Several queueing spinning algorithms have been proposed <ref> [1, 14, 21] </ref>. Various spin-lock algorithms for spin-locks have been implemented on the GP1000 and the TC2000 for performance evaluation [19]. These algorithms were monitored by the MIN-Graph. Here, we present some of the representative performance results.
References-found: 21

