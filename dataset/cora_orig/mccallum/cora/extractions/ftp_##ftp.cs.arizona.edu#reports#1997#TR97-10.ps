URL: ftp://ftp.cs.arizona.edu/reports/1997/TR97-10.ps
Refering-URL: http://www.cs.arizona.edu/research/reports.html
Root-URL: http://www.cs.arizona.edu
Title: Supporting Configurable Real-Time Communication Services  
Author: Xiaonan Han Matti A. Hiltunen Richard D. Schlichting 
Note: TR 97-10  
Abstract-found: 0
Intro-found: 1
Reference: [AS95] <author> F. Adelstein and M. Singhal. </author> <title> Real-time causal message ordering in multimedia systems. </title> <booktitle> In Proceedings of the 15th International Conference on Distributed Computing Systems, </booktitle> <pages> pages 36-43, </pages> <month> May </month> <year> 1995. </year>
Reference-contexts: Note also that these definitions are orthogonal to latency and reliability. This means, for example, that the only guarantee for FIFO channels with P D &lt; 1:0 is that any messages delivered are in order, i.e., there may be gaps in the message delivery sequence <ref> [AS95] </ref>. The set of properties that can be provided by a channel is intricately related to its shape. For example, with a UDPP channel, the only ordering guarantee that can be defined is FIFO, while total order can only be defined for multi-target channels. <p> Any one of three ordering micro-protocols can also be configured into the composite protocol to enforce FIFO, causal, or total ordering, respectively. The ordering micro-protocols are designed so that a message will be delivered out of order if waiting any longer would result in missing the delivery deadline <ref> [AS95] </ref>. This forced unordered delivery is implemented as an event handler, so the service can easily be configured without this behavior if ordering is more important than the delivery deadline for a particular channel. A number of different events are used in our composite protocol.
Reference: [ASJS96] <author> T. Abdelzaher, A. Shaikh, F. Jahanian, and K. Shin. RTCAST: </author> <title> Lightweight multicast for real-time process groups. </title> <booktitle> In Proceedings of the IEEE Real-Time Technology and Applications Symposium, </booktitle> <pages> pages 250-259, </pages> <month> Jun </month> <year> 1996. </year>
Reference-contexts: For example, safety critical systems usually require hard guarantees on system response time to avoid catastrophe, while multimedia applications behave optimally with at least soft guarantees. Numerous different types of real-time services and systems have been developed <ref> [ASJS96, BFM + 96, KDK + 89, KG94, Pow91, TNR90] </ref>. However, most such systems are targeted for specific applications, which makes them rigid and unable to accommodate the different requirements of a variety of application types. <p> While suitable for their target application areas, the lack of support for configurability and customization in such systems typically limits their applicability to new areas. Two exceptions are <ref> [ASJS96] </ref> and [TMR96], which have adopted principles from the x-kernel to add coarse-grain modularity and a limited degree of configurability to certain real-time communication services. Real-time channel abstractions similar to the one described in section 3 have been developed elsewhere as well. <p> The latest Tenet suite also provides multicast channels and resource sharing between related channels. An atomic real-time multicast protocol ensuring total ordering of messages is introduced in <ref> [ASJS96] </ref>. This protocol uses a logical token ring, and integrates multicast and membership services, but without explicitly introducing a real-time channel abstraction. 5 Conclusions This paper addresses the problem of providing customized real-time communication services for different types of applications.
Reference: [BFM + 96] <author> A. Banerjea, D. Ferrari, B. Mah, M. Moran, D. Verma, and H. Zhang. </author> <title> The Tenet real-time protocol suite: Design, implementation, and experiences. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 4(1), </volume> <month> Feb </month> <year> 1996. </year>
Reference-contexts: For example, safety critical systems usually require hard guarantees on system response time to avoid catastrophe, while multimedia applications behave optimally with at least soft guarantees. Numerous different types of real-time services and systems have been developed <ref> [ASJS96, BFM + 96, KDK + 89, KG94, Pow91, TNR90] </ref>. However, most such systems are targeted for specific applications, which makes them rigid and unable to accommodate the different requirements of a variety of application types. <p> Similarly, Tenet provides real-time channels over heterogeneous inter-networks, as well as a real-time network layer protocol RTIP and two real-time transport layer protocols RMTP and CMTP <ref> [BFM + 96] </ref>. The latest Tenet suite also provides multicast channels and resource sharing between related channels. An atomic real-time multicast protocol ensuring total ordering of messages is introduced in [ASJS96].
Reference: [Bha96] <author> N. T. Bhatti. </author> <title> A System for Constructing Configurable High-Level Protocols. </title> <type> PhD thesis, </type> <institution> Dept of Computer Science, University of Arizona, </institution> <address> Tucson, AZ, </address> <month> Nov </month> <year> 1996. </year>
Reference-contexts: If this is not the case, the above calculationand potentially system executionis non-terminating. 2.4 Discussion As noted in the introduction, the event-driven model presented above is based on an earlier version for constructing distributed services without real-time constraints <ref> [Bha96, HS93, Hil96] </ref>. The current version extends and refines the original model to accommodate the additional requirements that arise in real-time distributed systems. <p> For example, in the original model handlers are executed logically in parallel with no relative priority ordering between them, which can lead to undesirable behavior 6 such as unnecessary message retransmission <ref> [Bha96] </ref>. Furthermore, the logically concurrent model of handler execution has been modified to the atomic sequential execution model that requires less synchronization.
Reference: [BMK88] <author> D. Boggs, J. Mogul, and C. Kent. </author> <title> Measured capacity of an Ethernet: Myths and reality. </title> <booktitle> In Proceedings of SIGCOMM '88 Symposium on Communications Architectures and Protocols, </booktitle> <pages> pages 222-234, </pages> <month> Aug </month> <year> 1988. </year>
Reference-contexts: In this paper, we only address the allocation of memory and network bandwidth to different channels and the scheduling of CPU time. We do not consider network scheduling, but assume that by keeping the network load under control through network allocation, the Ethernet network will behave predictably <ref> [BMK88] </ref>. In particular, we assume that we know, for a given probability level P n , the maximum network transmission time T n such that the probability of a message reaching its destination in less than or equal to T n is P n .
Reference: [BS95] <author> N. T. Bhatti and R. D. Schlichting. </author> <title> A system for constructing configurable high-level protocols. </title> <booktitle> In Proceedings of SIGCOMM '95, </booktitle> <pages> pages 138-150, </pages> <address> Cambridge, MA, </address> <month> Aug </month> <year> 1995. </year>
Reference-contexts: An implementation of the model is currently underway using the OSF/RI MK 7.2 real-time operating system [Rey95] on a cluster of Pentium PCs. An earlier version of the system has been used to develop highly-configurable versions of communication services without real-time constraints, including group RPC <ref> [HS95, BS95] </ref>, membership [HS97], and atomic multicast [GBB + 95]. The rest of the paper is organized as follows. Section 2 describes our model for configurable real-time services and outlines an implementation of the model designed for OSF/RI MK 7.2 and the x-kernel [HP91].
Reference: [BSS91] <author> K. Birman, A. Schiper, and P. Stephenson. </author> <title> Lightweight causal and atomic group multi-cast. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 9(3) </volume> <pages> 272-314, </pages> <month> Aug </month> <year> 1991. </year>
Reference-contexts: deadline or not, reliabilityi.e., whether each message sent on a channel reaches its destination (s), and ordering properties between messages. 7 Other properties not considered here include bounded jitter, atomicity, stability [PBS89], security, and properties related to changes in the set of processes using the channel, such as virtual synchrony <ref> [BSS91] </ref> and safety [MMSA + 96]. In addition to the above, real-time services often have a specification defining the importance of the service meeting its constraints, usually specified using the phrases hard real-time or soft real-time.
Reference: [Cru91] <author> R. Cruz. </author> <title> A calculus for network delay, part I: Network elements in isolation. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> 37(1) </volume> <pages> 114-131, </pages> <month> Jan </month> <year> 1991. </year>
Reference-contexts: With this model, the size of the traffic backlog at a server never exceeds given that the server works at rate <ref> [Cru91] </ref>. The server in our case is a channel composite protocol, is the message rate R (messages/second), and is the burst size B (number of messages). Thus, the message traffic constraint is A fl (t) = B + R t. <p> For example, if A fl s (t) = B + R t at the sending site and the maximum network delay is T n , then A fl r (t) = B 0 + R t at the receiving site, where B 0 = B + T n R <ref> [Cru91] </ref>. Similarly, retransmissions increase both the message rate and the burst size.
Reference: [GBB + 95] <author> D. O. Guedes, D. E. Bakken, N. T. Bhatti, M. A. Hiltunen, and R. D. Schlichting. </author> <title> A customized communication subsystem for FT-Linda. </title> <booktitle> In Proceedings of the 13th Brazilian Symposium on Computer Networks, </booktitle> <pages> pages 319-338, </pages> <month> May </month> <year> 1995. </year>
Reference-contexts: An earlier version of the system has been used to develop highly-configurable versions of communication services without real-time constraints, including group RPC [HS95, BS95], membership [HS97], and atomic multicast <ref> [GBB + 95] </ref>. The rest of the paper is organized as follows. Section 2 describes our model for configurable real-time services and outlines an implementation of the model designed for OSF/RI MK 7.2 and the x-kernel [HP91].
Reference: [Her94] <author> A. Herbert. </author> <title> An ANSA overview. </title> <journal> IEEE Network, </journal> <volume> 8(1), </volume> <month> Jan </month> <year> 1994. </year> <month> 15 </month>
Reference-contexts: This emphasis on integrating attributes and on providing a high degree of flexibility distinguishes the approach from other real-time and configurable systems that support a degree of customization <ref> [Her94, RBM96, SBS93, SVK93, TMR96] </ref>. Our approach is based on implementing different semantic properties and property variants of a service as separate fine-grain modules called micro-protocols that interact using an event-based interaction model. <p> In this case, d r should be larger than r r . 4 Related Work A number of systems support configurability and customization of communication services in distributed systems, including Adaptive [SBS93], ANSA <ref> [Her94] </ref>, Horus [RBM96], and the x-kernel [HP91]. However, only Adaptive and the configurable control system in [SVK93] address issues related to real time. Adaptive introduces an approach to building protocols that employs a collection of reusable `building-block' protocol mechanisms that can be composed automatically based on functional specifications.
Reference: [Hil96] <author> M. A. Hiltunen. </author> <title> Configurable Distributed Fault-Tolerant Services. </title> <type> PhD thesis, </type> <institution> Dept of Computer Science, University of Arizona, </institution> <address> Tucson, AZ, </address> <month> Jul </month> <year> 1996. </year>
Reference-contexts: However, the approach is independent of the x-kernel and can be implemented using any number of suitable substrates. For example, a prototype of the previous non-real-time version has been done using C++ on the Solaris OS <ref> [Hil96] </ref>. 2.1 Event-Driven Model Our approach is based on implementing different semantic properties and functional components of a real-time service as separate modules that interact using an event-driven execution model. <p> If this is not the case, the above calculationand potentially system executionis non-terminating. 2.4 Discussion As noted in the introduction, the event-driven model presented above is based on an earlier version for constructing distributed services without real-time constraints <ref> [Bha96, HS93, Hil96] </ref>. The current version extends and refines the original model to accommodate the additional requirements that arise in real-time distributed systems.
Reference: [HP91] <author> N. Hutchinson and L. Peterson. </author> <title> The x-kernel: An architecture for implementing network protocols. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 17(1) </volume> <pages> 64-76, </pages> <month> Jan </month> <year> 1991. </year>
Reference-contexts: The rest of the paper is organized as follows. Section 2 describes our model for configurable real-time services and outlines an implementation of the model designed for OSF/RI MK 7.2 and the x-kernel <ref> [HP91] </ref>. We also outline the composite protocol runtime system, and explain how the execution time of a collection of micro-protocols can be estimated. In section 3, the model is used to construct a configurable communication channel abstraction supporting customization of real-time, reliability, and ordering properties. <p> In this case, d r should be larger than r r . 4 Related Work A number of systems support configurability and customization of communication services in distributed systems, including Adaptive [SBS93], ANSA [Her94], Horus [RBM96], and the x-kernel <ref> [HP91] </ref>. However, only Adaptive and the configurable control system in [SVK93] address issues related to real time. Adaptive introduces an approach to building protocols that employs a collection of reusable `building-block' protocol mechanisms that can be composed automatically based on functional specifications.
Reference: [HS93] <author> M. A. Hiltunen and R. D. Schlichting. </author> <title> An approach to constructing modular fault-tolerant protocols. </title> <booktitle> In Proceedings of the 12th Symposium on Reliable Distributed Systems, </booktitle> <pages> pages 105-114, </pages> <address> Princeton, NJ, </address> <month> Oct </month> <year> 1993. </year>
Reference-contexts: If this is not the case, the above calculationand potentially system executionis non-terminating. 2.4 Discussion As noted in the introduction, the event-driven model presented above is based on an earlier version for constructing distributed services without real-time constraints <ref> [Bha96, HS93, Hil96] </ref>. The current version extends and refines the original model to accommodate the additional requirements that arise in real-time distributed systems.
Reference: [HS95] <author> M. A. Hiltunen and R. D. Schlichting. </author> <title> Constructing a configurable group RPC service. </title> <booktitle> In Proceedings of the 15th International Conference on Distributed Computing Systems, </booktitle> <pages> pages 288-295, </pages> <address> Vancouver, BC, Canada, </address> <month> May </month> <year> 1995. </year>
Reference-contexts: An implementation of the model is currently underway using the OSF/RI MK 7.2 real-time operating system [Rey95] on a cluster of Pentium PCs. An earlier version of the system has been used to develop highly-configurable versions of communication services without real-time constraints, including group RPC <ref> [HS95, BS95] </ref>, membership [HS97], and atomic multicast [GBB + 95]. The rest of the paper is organized as follows. Section 2 describes our model for configurable real-time services and outlines an implementation of the model designed for OSF/RI MK 7.2 and the x-kernel [HP91].
Reference: [HS97] <author> M. A. Hiltunen and R. D. Schlichting. </author> <title> A configurable membership service. </title> <journal> IEEE Transactions on Computers, </journal> <note> 1997. to appear. </note>
Reference-contexts: An implementation of the model is currently underway using the OSF/RI MK 7.2 real-time operating system [Rey95] on a cluster of Pentium PCs. An earlier version of the system has been used to develop highly-configurable versions of communication services without real-time constraints, including group RPC [HS95, BS95], membership <ref> [HS97] </ref>, and atomic multicast [GBB + 95]. The rest of the paper is organized as follows. Section 2 describes our model for configurable real-time services and outlines an implementation of the model designed for OSF/RI MK 7.2 and the x-kernel [HP91].
Reference: [KDK + 89] <author> H. Kopetz, A. Damm, C. Koza, M. Mulazzani, W. Schwabl, C. Senft, and R. Zainlinger. </author> <title> Distributed fault-tolerant real-time systems: The Mars approach. </title> <booktitle> IEEE Micro, </booktitle> <pages> pages 25-40, </pages> <month> Feb </month> <year> 1989. </year>
Reference-contexts: For example, safety critical systems usually require hard guarantees on system response time to avoid catastrophe, while multimedia applications behave optimally with at least soft guarantees. Numerous different types of real-time services and systems have been developed <ref> [ASJS96, BFM + 96, KDK + 89, KG94, Pow91, TNR90] </ref>. However, most such systems are targeted for specific applications, which makes them rigid and unable to accommodate the different requirements of a variety of application types. <p> As such, it would be difficult to use this model to construct the same type of configurable services. A large number of real-time systems have been designed and implemented, including Chimera [SVK93], Delta-4 [PSB + 88, Pow91], HARTS [KS91], Mars <ref> [KDK + 89] </ref>, MK [Rey95, TMR96], RT-Mach [TNR90], and TTP [KG94]. While suitable for their target application areas, the lack of support for configurability and customization in such systems typically limits their applicability to new areas.
Reference: [KG94] <author> H. Kopetz and G. Grunsteidl. </author> <title> TTP A protocol for fault-tolerant real-time systems. </title> <journal> Computer, </journal> <volume> 27(1) </volume> <pages> 14-23, </pages> <month> Jan </month> <year> 1994. </year>
Reference-contexts: For example, safety critical systems usually require hard guarantees on system response time to avoid catastrophe, while multimedia applications behave optimally with at least soft guarantees. Numerous different types of real-time services and systems have been developed <ref> [ASJS96, BFM + 96, KDK + 89, KG94, Pow91, TNR90] </ref>. However, most such systems are targeted for specific applications, which makes them rigid and unable to accommodate the different requirements of a variety of application types. <p> A large number of real-time systems have been designed and implemented, including Chimera [SVK93], Delta-4 [PSB + 88, Pow91], HARTS [KS91], Mars [KDK + 89], MK [Rey95, TMR96], RT-Mach [TNR90], and TTP <ref> [KG94] </ref>. While suitable for their target application areas, the lack of support for configurability and customization in such systems typically limits their applicability to new areas.
Reference: [KS91] <author> D. Kandlur and K. Shin. </author> <title> Design of a communication subsystem for HARTS. </title> <type> Technical Report CSE-TR-109-91, </type> <institution> University of Michigan, </institution> <month> Oct </month> <year> 1991. </year>
Reference-contexts: As such, it would be difficult to use this model to construct the same type of configurable services. A large number of real-time systems have been designed and implemented, including Chimera [SVK93], Delta-4 [PSB + 88, Pow91], HARTS <ref> [KS91] </ref>, Mars [KDK + 89], MK [Rey95, TMR96], RT-Mach [TNR90], and TTP [KG94]. While suitable for their target application areas, the lack of support for configurability and customization in such systems typically limits their applicability to new areas. <p> Real-time channel abstractions similar to the one described in section 3 have been developed elsewhere as well. In some cases,these channels address real-time communication at the network level; for example, a type of real-time channel that is established across multiple point-to-point network links is introduced in <ref> [KS91, KSF94] </ref>. Similarly, Tenet provides real-time channels over heterogeneous inter-networks, as well as a real-time network layer protocol RTIP and two real-time transport layer protocols RMTP and CMTP [BFM + 96]. The latest Tenet suite also provides multicast channels and resource sharing between related channels.
Reference: [KSF94] <author> D. Kandlur, K. Shin, and D. Ferrari. </author> <title> Real-time communication in multi-hop networks. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <pages> pages 1044-1056, </pages> <month> Oct </month> <year> 1994. </year>
Reference-contexts: Note that this formula applies only to paths with only one traffic model for arriving messages; the formula becomes more complex when a path has more than one traffic model. This formula is used in conjunction with the D order procedure <ref> [KSF94] </ref> to determine a priority for the new path that is allocated as a result of the channel creation request. In essence, this step calculates the highest possible priority for the path that still allows all deadlines to be met. <p> Real-time channel abstractions similar to the one described in section 3 have been developed elsewhere as well. In some cases,these channels address real-time communication at the network level; for example, a type of real-time channel that is established across multiple point-to-point network links is introduced in <ref> [KS91, KSF94] </ref>. Similarly, Tenet provides real-time channels over heterogeneous inter-networks, as well as a real-time network layer protocol RTIP and two real-time transport layer protocols RMTP and CMTP [BFM + 96]. The latest Tenet suite also provides multicast channels and resource sharing between related channels.
Reference: [LWF94] <author> J. Liebeherr, D. Wrege, and D. Ferrari. </author> <title> Exact admission control for networks with bounded delay services. </title> <type> Technical Report TR-94-033, </type> <institution> International Computer Science Institue, University of California at Berkeley, Berkeley, </institution> <address> CA, </address> <month> Aug </month> <year> 1994. </year>
Reference-contexts: If not, the channel creation request is denied. The worst case response times r s and r r are calculated using the algorithm described in <ref> [LWF94] </ref>. First, the existing paths on a site are sorted based on their priority, where path P i has the i th highest priority.
Reference: [MG95] <author> V. Murty and V. Garg. </author> <title> An algorithm for guaranteeing synchronous ordering of messages. </title> <booktitle> In Proceedings of the 2nd International Symposium on Autonomous Decentralized Systems, </booktitle> <pages> pages 208-214, </pages> <address> Phoenix, AZ, </address> <month> Apr </month> <year> 1995. </year>
Reference-contexts: Finally, in a totally ordered channel, all sites receiving any two messages m i and m j deliver them to the application in the same order. Numerous other ordering properties could also be defined, including timestamp-based temporal order [Ver94], semantic order [MPS89], and synchronous order <ref> [MG95] </ref>. Note also that these definitions are orthogonal to latency and reliability. This means, for example, that the only guarantee for FIFO channels with P D &lt; 1:0 is that any messages delivered are in order, i.e., there may be gaps in the message delivery sequence [AS95].
Reference: [MHCN96] <author> A. Mauthe, D. Hutchison, G. Coulson, and S. Namuye. </author> <title> Multimedia group communications: towards new services. </title> <journal> Distributed Systems Engineering, </journal> <volume> 3(3) </volume> <pages> 197-210, </pages> <month> Sep </month> <year> 1996. </year>
Reference-contexts: For example, multimedia applications can often tolerate the loss of a few packets or missed deadlines, so P D and P R can be relatively lowon the order of 0.9 to 0.99 for audio and a minimum of 0.999 for video <ref> [MHCN96] </ref>. On the other hand, distributed financial systems such as automatic teller machines would likely require a value of P R very close to 1.0, but could tolerate a somewhat smaller value of P D .
Reference: [MMM96] <author> C. Martel, W. Moh, and T.-S. Moh. </author> <title> Dynamic prioritized conflict resolution on multiple access broadcast networks. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 45(9) </volume> <pages> 1074-1079, </pages> <month> Sep </month> <year> 1996. </year>
Reference-contexts: For simplicity, we only consider schedulability tests for CPU time; approaches to network scheduling can be found elsewhere, such as <ref> [MMM96] </ref>. For each message, the application specifies a deadline d.
Reference: [MMSA + 96] <author> L. Moser, P. Melliar-Smith, D. Agarwal, R. Budhia, and C. Lingley-Papadopoulos. Totem: </author> <title> A fault-tolerant multicast group communication system. </title> <journal> Communications of the ACM, </journal> <volume> 39(4) </volume> <pages> 54-63, </pages> <month> Apr </month> <year> 1996. </year> <month> 16 </month>
Reference-contexts: reliabilityi.e., whether each message sent on a channel reaches its destination (s), and ordering properties between messages. 7 Other properties not considered here include bounded jitter, atomicity, stability [PBS89], security, and properties related to changes in the set of processes using the channel, such as virtual synchrony [BSS91] and safety <ref> [MMSA + 96] </ref>. In addition to the above, real-time services often have a specification defining the importance of the service meeting its constraints, usually specified using the phrases hard real-time or soft real-time. We define a similar property for channels quantitatively using two probabilities, P D and P R .
Reference: [MPS89] <author> S. Mishra, L. Peterson, and R. D. Schlichting. </author> <title> Implementing replicated objects using Psync. </title> <booktitle> In Proceedings of the 8th Symposium on Reliable Distributed Systems, </booktitle> <pages> pages 42-52, </pages> <address> Seattle, Washington, </address> <month> Oct </month> <year> 1989. </year>
Reference-contexts: Finally, in a totally ordered channel, all sites receiving any two messages m i and m j deliver them to the application in the same order. Numerous other ordering properties could also be defined, including timestamp-based temporal order [Ver94], semantic order <ref> [MPS89] </ref>, and synchronous order [MG95]. Note also that these definitions are orthogonal to latency and reliability.
Reference: [PBS89] <author> L. Peterson, N. Buchholz, and R. D. Schlichting. </author> <title> Preserving and using context information in interprocess communication. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 7(3) </volume> <pages> 217-246, </pages> <month> Aug </month> <year> 1989. </year>
Reference-contexts: In particular, we consider latencyi.e., the maximum delivery delay, which affects whether a transmitted message meets a specified deadline or not, reliabilityi.e., whether each message sent on a channel reaches its destination (s), and ordering properties between messages. 7 Other properties not considered here include bounded jitter, atomicity, stability <ref> [PBS89] </ref>, security, and properties related to changes in the set of processes using the channel, such as virtual synchrony [BSS91] and safety [MMSA + 96].
Reference: [Pow91] <editor> D. Powell, editor. Delta-4: </editor> <title> A Generic Architecture for Dependable Computing. </title> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference-contexts: For example, safety critical systems usually require hard guarantees on system response time to avoid catastrophe, while multimedia applications behave optimally with at least soft guarantees. Numerous different types of real-time services and systems have been developed <ref> [ASJS96, BFM + 96, KDK + 89, KG94, Pow91, TNR90] </ref>. However, most such systems are targeted for specific applications, which makes them rigid and unable to accommodate the different requirements of a variety of application types. <p> As such, it would be difficult to use this model to construct the same type of configurable services. A large number of real-time systems have been designed and implemented, including Chimera [SVK93], Delta-4 <ref> [PSB + 88, Pow91] </ref>, HARTS [KS91], Mars [KDK + 89], MK [Rey95, TMR96], RT-Mach [TNR90], and TTP [KG94]. While suitable for their target application areas, the lack of support for configurability and customization in such systems typically limits their applicability to new areas.
Reference: [PSB + 88] <author> D. Powell, D. Seaton, G. Bonn, P. Verissimo, and F. Waeselynk. </author> <title> The Delta-4 approach to dependability in open distributed computing systems. </title> <booktitle> In Proceedings of the Eighteenth Symposium on Fault-Tolerant Computing, </booktitle> <address> Tokyo, </address> <month> Jun </month> <year> 1988. </year>
Reference-contexts: As such, it would be difficult to use this model to construct the same type of configurable services. A large number of real-time systems have been designed and implemented, including Chimera [SVK93], Delta-4 <ref> [PSB + 88, Pow91] </ref>, HARTS [KS91], Mars [KDK + 89], MK [Rey95, TMR96], RT-Mach [TNR90], and TTP [KG94]. While suitable for their target application areas, the lack of support for configurability and customization in such systems typically limits their applicability to new areas.
Reference: [RBM96] <author> R. van Renesse, K. Birman, and S Maffeis. Horus, </author> <title> a flexible group communication system. </title> <journal> Communications of the ACM, </journal> <volume> 39(4) </volume> <pages> 76-83, </pages> <month> Apr </month> <year> 1996. </year>
Reference-contexts: This emphasis on integrating attributes and on providing a high degree of flexibility distinguishes the approach from other real-time and configurable systems that support a degree of customization <ref> [Her94, RBM96, SBS93, SVK93, TMR96] </ref>. Our approach is based on implementing different semantic properties and property variants of a service as separate fine-grain modules called micro-protocols that interact using an event-based interaction model. <p> In this case, d r should be larger than r r . 4 Related Work A number of systems support configurability and customization of communication services in distributed systems, including Adaptive [SBS93], ANSA [Her94], Horus <ref> [RBM96] </ref>, and the x-kernel [HP91]. However, only Adaptive and the configurable control system in [SVK93] address issues related to real time. Adaptive introduces an approach to building protocols that employs a collection of reusable `building-block' protocol mechanisms that can be composed automatically based on functional specifications.
Reference: [Rey95] <author> F. Reynolds. </author> <title> The OSF real-time micro-kernel. </title> <type> Technical report, </type> <institution> OSF Research Institute, </institution> <year> 1995. </year>
Reference-contexts: An implementation of the model is currently underway using the OSF/RI MK 7.2 real-time operating system <ref> [Rey95] </ref> on a cluster of Pentium PCs. An earlier version of the system has been used to develop highly-configurable versions of communication services without real-time constraints, including group RPC [HS95, BS95], membership [HS97], and atomic multicast [GBB + 95]. The rest of the paper is organized as follows. <p> As such, it would be difficult to use this model to construct the same type of configurable services. A large number of real-time systems have been designed and implemented, including Chimera [SVK93], Delta-4 [PSB + 88, Pow91], HARTS [KS91], Mars [KDK + 89], MK <ref> [Rey95, TMR96] </ref>, RT-Mach [TNR90], and TTP [KG94]. While suitable for their target application areas, the lack of support for configurability and customization in such systems typically limits their applicability to new areas.
Reference: [SBS93] <author> D. Schmidt, D. Box, and T. Suda. </author> <title> ADAPTIVE: A dynamically assembled protocol transformation, integration, and evaluation environment. </title> <journal> Concurrency: Practice and Experience, </journal> <volume> 5(4) </volume> <pages> 269-286, </pages> <month> Jun </month> <year> 1993. </year>
Reference-contexts: This emphasis on integrating attributes and on providing a high degree of flexibility distinguishes the approach from other real-time and configurable systems that support a degree of customization <ref> [Her94, RBM96, SBS93, SVK93, TMR96] </ref>. Our approach is based on implementing different semantic properties and property variants of a service as separate fine-grain modules called micro-protocols that interact using an event-based interaction model. <p> In this case, d r should be larger than r r . 4 Related Work A number of systems support configurability and customization of communication services in distributed systems, including Adaptive <ref> [SBS93] </ref>, ANSA [Her94], Horus [RBM96], and the x-kernel [HP91]. However, only Adaptive and the configurable control system in [SVK93] address issues related to real time. Adaptive introduces an approach to building protocols that employs a collection of reusable `building-block' protocol mechanisms that can be composed automatically based on functional specifications.
Reference: [SVK93] <author> D. Stewart, R. Volpe, and P. Khosla. </author> <title> Design of dynamically reconfigurable real-time software using port-based objects. </title> <type> Technical Report CMU-RI-TR-93-11, </type> <institution> Carnegie Mellon University, </institution> <month> July </month> <year> 1993. </year>
Reference-contexts: This emphasis on integrating attributes and on providing a high degree of flexibility distinguishes the approach from other real-time and configurable systems that support a degree of customization <ref> [Her94, RBM96, SBS93, SVK93, TMR96] </ref>. Our approach is based on implementing different semantic properties and property variants of a service as separate fine-grain modules called micro-protocols that interact using an event-based interaction model. <p> In this case, d r should be larger than r r . 4 Related Work A number of systems support configurability and customization of communication services in distributed systems, including Adaptive [SBS93], ANSA [Her94], Horus [RBM96], and the x-kernel [HP91]. However, only Adaptive and the configurable control system in <ref> [SVK93] </ref> address issues related to real time. Adaptive introduces an approach to building protocols that employs a collection of reusable `building-block' protocol mechanisms that can be composed automatically based on functional specifications. The objects are tightly coupled in the sense that interactions between objects are fixed a priori. <p> Furthermore, although Adaptive targets multimedia applications, its runtime system appears to be designed simply to maximize performance rather than ensuring deadlines as with most real-time systems. A reconfigurable real-time software system is introduced in <ref> [SVK93] </ref>. The target application domain is sensor-based control systems, rather than real-time communication as is the case here. The port-based object model is suitable for combining existing software components, but lacks the degree of flexibility and fine-grain control found in our approach. <p> As such, it would be difficult to use this model to construct the same type of configurable services. A large number of real-time systems have been designed and implemented, including Chimera <ref> [SVK93] </ref>, Delta-4 [PSB + 88, Pow91], HARTS [KS91], Mars [KDK + 89], MK [Rey95, TMR96], RT-Mach [TNR90], and TTP [KG94]. While suitable for their target application areas, the lack of support for configurability and customization in such systems typically limits their applicability to new areas.
Reference: [TMIM89] <author> H. Tokuda, C. Mercer, Y. Ishikawa, and T. Marchok. </author> <title> Priority inversions in real-time communication. </title> <booktitle> In Proceedings of the 10th IEEE Real-Time Systems Symposium, </booktitle> <pages> pages 348-359, </pages> <month> Dec </month> <year> 1989. </year>
Reference-contexts: Second, scheduling can be done at the handler level and each handler executes to completion before rescheduling. As a result, scheduling is simplified and long priority inversions <ref> [TMIM89] </ref> are avoided.
Reference: [TMR96] <author> F. Travostino, E. Menze, and F. Reynolds. </author> <title> Paths: Programming with system resources in support of real-time distributed applications. </title> <booktitle> In Proceedings of the IEEE Workshop on Object-Oriented Real-Time Dependable Systems, </booktitle> <month> Feb </month> <year> 1996. </year>
Reference-contexts: This emphasis on integrating attributes and on providing a high degree of flexibility distinguishes the approach from other real-time and configurable systems that support a degree of customization <ref> [Her94, RBM96, SBS93, SVK93, TMR96] </ref>. Our approach is based on implementing different semantic properties and property variants of a service as separate fine-grain modules called micro-protocols that interact using an event-based interaction model. <p> handlers minimizes the need for synchronization between handlers, and thus, reduces the well-known problems of synchronization, such as priority inversion. 2.2 Implementing the Model Our prototype implementation of the real-time event-driven model is designed for the OSF/RI MK 7.2 operating system, which includes real-time support and the CORDS communication subsystem <ref> [TMR96] </ref>. CORDS is essentially identical to the x-kernel, but with an additional path abstraction to support reservation of resources such as buffers and threads. We utilize paths and thread priorities provided by the system to give services and tasks with tighter deadlines higher priorities. <p> As such, it would be difficult to use this model to construct the same type of configurable services. A large number of real-time systems have been designed and implemented, including Chimera [SVK93], Delta-4 [PSB + 88, Pow91], HARTS [KS91], Mars [KDK + 89], MK <ref> [Rey95, TMR96] </ref>, RT-Mach [TNR90], and TTP [KG94]. While suitable for their target application areas, the lack of support for configurability and customization in such systems typically limits their applicability to new areas. <p> While suitable for their target application areas, the lack of support for configurability and customization in such systems typically limits their applicability to new areas. Two exceptions are [ASJS96] and <ref> [TMR96] </ref>, which have adopted principles from the x-kernel to add coarse-grain modularity and a limited degree of configurability to certain real-time communication services. Real-time channel abstractions similar to the one described in section 3 have been developed elsewhere as well.
Reference: [TNR90] <author> H. Tokuda, T. Nakajima, and P. Rao. </author> <title> Real-time Mach: Toward a predictable real-time system. </title> <booktitle> In Proceedings of USENIX Mach Workshop, </booktitle> <pages> pages 73-82, </pages> <month> Oct </month> <year> 1990. </year>
Reference-contexts: For example, safety critical systems usually require hard guarantees on system response time to avoid catastrophe, while multimedia applications behave optimally with at least soft guarantees. Numerous different types of real-time services and systems have been developed <ref> [ASJS96, BFM + 96, KDK + 89, KG94, Pow91, TNR90] </ref>. However, most such systems are targeted for specific applications, which makes them rigid and unable to accommodate the different requirements of a variety of application types. <p> As such, it would be difficult to use this model to construct the same type of configurable services. A large number of real-time systems have been designed and implemented, including Chimera [SVK93], Delta-4 [PSB + 88, Pow91], HARTS [KS91], Mars [KDK + 89], MK [Rey95, TMR96], RT-Mach <ref> [TNR90] </ref>, and TTP [KG94]. While suitable for their target application areas, the lack of support for configurability and customization in such systems typically limits their applicability to new areas.
Reference: [Ver94] <author> P. Verissimo. </author> <title> Ordering and timeliness requirements of dependable real-time programs. </title> <booktitle> In Real-Time Systems, </booktitle> <pages> pages 105-128. </pages> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, </address> <year> 1994. </year>
Reference-contexts: Finally, in a totally ordered channel, all sites receiving any two messages m i and m j deliver them to the application in the same order. Numerous other ordering properties could also be defined, including timestamp-based temporal order <ref> [Ver94] </ref>, semantic order [MPS89], and synchronous order [MG95]. Note also that these definitions are orthogonal to latency and reliability.
Reference: [WKZL96] <author> D. Wrege, E. Knightly, H. Zhang, and J. Liebeherr. </author> <title> Deterministic delay bounds for VBR video in packet-switching networks: Fundamental limits and practical tradeoffs. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <pages> pages 352-362, </pages> <month> Jun </month> <year> 1996. </year> <month> 17 </month>
Reference-contexts: Then, the traffic constraints of this channel can be given by a function A fl , such that A [t; t + t] A fl (t). The basis for our traffic model is the (; ) model from <ref> [WKZL96] </ref>, where is the burstiness factor, is the average traffic rate, and A fl (t) = + t. With this model, the size of the traffic backlog at a server never exceeds given that the server works at rate [Cru91].
References-found: 37

