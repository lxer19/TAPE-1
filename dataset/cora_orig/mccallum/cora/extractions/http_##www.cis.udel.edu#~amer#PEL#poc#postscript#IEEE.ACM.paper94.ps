URL: http://www.cis.udel.edu/~amer/PEL/poc/postscript/IEEE.ACM.paper94.ps
Refering-URL: http://www.cis.udel.edu/~amer/PEL/poc/
Root-URL: http://www.cis.udel.edu
Title: Partial Order Transport Service for Multimedia and Other Applications  
Author: Paul D. Amer Christophe Chassot Thomas J. Connolly Michel Diaz Phillip Conrad 
Address: 7, Avenue du Colonel Roche  19716 USA 31077 Toulouse France  
Affiliation: Computer and Info Science Dept LAAS du CNRS University of Delaware  Newark, DE  
Abstract: Motivated by multimedia and perhaps other applications, this paper investigates a Partial Order Connection (POC) service/protocol. Unlike classic transport services that deliver objects either in the exact order transmitted or according to no particular order, POC provides a partial order service; that is, a service that requires some, but not all objects to be received in the order transmitted. Two versions of POC are proposed: reliable, which requires that all transmitted objects are eventually delivered, and unreliable, which permits the service to lose a subset of the objects. In the unreliable version, objects are more finely categorized into one of three reliability classes depending on their temporal value. Two metrics based on e i (P ), the number of linear extensions of partial order P in the presence of i lost objects, are proposed as complexity measures of different combinations of partial order and reliability. Formulae for calculating e i (P ) are derived when P is series-parallel. A formal specification of a POC protocol, written in Estelle, is presented and discussed. This specification was designed and validated using formal description tools and will provide a basis for future implementations.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> P.D. Amer, C. Chassot, T. Connolly, and M. Diaz. </author> <title> Partial order transport service for multimedia applications: Reliable service. </title> <booktitle> In Proc 2nd High Performance Dist'd Computing Conf (HPDC), </booktitle> <pages> 272-280, </pages> <address> Spokane, Wash, </address> <month> Jul </month> <year> 1993. </year> <month> 18 </month>
Reference-contexts: The number of linear extensions of P , denoted e (P ), is thought as the best single number which measures the complexity of P [28]. Clearly for N objects, e (complete order) = 1, e (no order) = N ! It is argued in <ref> [1] </ref> that e (P ) appropriately quantifies a desired partial order transport service in communication networks. Intuitively this metric correlates to the work a protocol would have to perform to provide a particular partial order service. <p> Neither of these forms, however, model multimedia applications. If the partial orders under consideration are series-parallel [28], calculation of e (P ) is possible <ref> [1] </ref>. While not all applications calling for a partial order service need a series-parallel one, such a composition is reasonable for many applications, particularly multimedia applications. <p> Any partial order can be represented in N (N 1)=2 bits as an upper N by N triangular matrix where N is the number of objects in the partial order <ref> [1] </ref>. If the partial order is series-parallel, it can be represented as the intersection of two total orders [29]. By assuming one total order to be 1; 2; : : :; N , a series-parallel partial order can be encoded in N log N bits.
Reference: [2] <author> P.D. Amer, C. Chassot, T. Connolly, and M. Diaz. </author> <title> Partial order transport service for multimedia applications: Unreliable channels. </title> <booktitle> In Proc 3rd International Networking Conf (INET), </booktitle> <address> BFA 1-10, San Francisco, </address> <month> Aug </month> <year> 1993. </year>
Reference-contexts: Compositions 3 of i are expressions of i as a sum of positive integers with regard to order [6] 4 . For instance, there are 8 compositions of the integer 4: (1+1+1+1); (2+1+1); (1+2+1); (1+1+2); (2+2); (3+1); (1+3) and (4). Reference <ref> [2] </ref> presents a general formula of e i (X ) based on the partitions of i; this formula is simplified here by considering compositions. The overall number of terms in the formula increases, but each one is simpler to represent. Thus by using compositions, the general formula is more readable.
Reference: [3] <author> D. Anderson and G. Homsy. </author> <title> A continuous media I/O server and its synchronization mechanism. </title> <journal> IEEE Computer, </journal> <volume> 24(10), </volume> <pages> 51-57, </pages> <month> Oct </month> <year> 1991. </year>
Reference-contexts: It is assumed that synchronization concerns in presenting the objects after delivery is a service provided on top of the proposed partial order service. Temporal ordering for synchronized playback is considered, for example, in <ref> [3, 16] </ref>. 3 Example 2: Consider an application that must do a screen refresh on a workstation screen/display containing multiple windows.
Reference: [4] <author> M. Ahuja. </author> <title> FLUSH primitives for asynchronous dist'd systems. </title> <journal> Info Processing Letters, </journal> <volume> 34(1), </volume> <pages> 5-12, </pages> <month> Feb </month> <year> 1990. </year>
Reference-contexts: For example, Ahuja shows that some conclusions derived on the design of distributed algorithms need not have required FIFO ordering as a base assumption <ref> [4] </ref>. Ahuja, however, assumes a sending process dynamically builds 1 An unreliable service (e.g., the postal system) does not necessarily lose objects, simply it may do so without failing to provide its advertised quality of service. 7 the partial order and that no objects are ever lost [13, 26].
Reference: [5] <author> P. D. Amer and D. H. </author> <title> New. Protocol visualization in Estelle. </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> 25(7), </volume> <pages> 741-760, </pages> <month> Feb </month> <year> 1993. </year>
Reference-contexts: The specification has been designed and validated using several formal description tools: Pet-Dingo, a portable Estelle translator and distributed generator for simulations [27]; and GROPE, a simulation system that provides graphical animation to visualize an Estelle specification <ref> [5] </ref>. Since it makes no practical sense to put a POC on top of a service that is already fully ordered and fully reliable, Protocol POC assumes that the underlying network service is unreliable. It will lose and duplicate objects, and sometimes deliver them out of the order transmitted.
Reference: [6] <author> G. Andrew. </author> <title> The Theory of Partitions. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass., </address> <year> 1976. </year>
Reference-contexts: Compositions 3 of i are expressions of i as a sum of positive integers with regard to order <ref> [6] </ref> 4 . For instance, there are 8 compositions of the integer 4: (1+1+1+1); (2+1+1); (1+2+1); (1+1+2); (2+2); (3+1); (1+3) and (4). Reference [2] presents a general formula of e i (X ) based on the partitions of i; this formula is simplified here by considering compositions.
Reference: [7] <author> M.D. Atkinson. </author> <title> The complexity of orders. </title> <booktitle> [25], </booktitle> <pages> 195-230. </pages>
Reference-contexts: There is an O (N 5 ) algorithm, where N is the number of objects, for computing e (P ) for partial orders that form a tree when all edges are considered undirected <ref> [7] </ref>. Similarly, there is an O (N 8 ) algorithm for computing e (P ) for any graph (and therefore for any partial order) where if the directions of the edges of P are not considered, any resulting cycles are edge disjoint [12].
Reference: [8] <author> S. Budkowski and P. </author> <title> Dembinski. An intro to Estelle: A specification language for distributed systems. </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> 14(1), </volume> <pages> 3-23, </pages> <year> 1987. </year>
Reference-contexts: It is specified in the language Estelle (see Appendix A), an ISO International Standard Formal Description Technique for specifying communication services/protocols and, more generally, distributed systems <ref> [8, 17] </ref>. The specification has been designed and validated using several formal description tools: Pet-Dingo, a portable Estelle translator and distributed generator for simulations [27]; and GROPE, a simulation system that provides graphical animation to visualize an Estelle specification [5].
Reference: [9] <author> G. Brightwell and P. Winkler. </author> <title> Counting linear extensions is #P-complete. </title> <booktitle> In Proc 23rd ACM Symp on the Theory of Computing, </booktitle> <pages> 175-181, </pages> <year> 1991. </year>
Reference-contexts: Unfortunately there is currently no known formula for calculating e (P ) for an arbitrary partial order. Recently it has been shown that the problem of computing e (P ) is #P - complete 2 <ref> [9] </ref>. There is an O (N 5 ) algorithm, where N is the number of objects, for computing e (P ) for partial orders that form a tree when all edges are considered undirected [7].
Reference: [10] <author> T. Connolly, P.D. Amer, and P. Conrad. </author> <title> An extension to TCP: Partial order service. </title> <note> RFC (submitted for publication). </note>
Reference-contexts: The authors currently are simulating Protocol POC using OPNET, a networking simulation system, and implementing a partial order version of TCP based on a submitted RFC <ref> [10] </ref>. The simulation and empirical studies will evaluate more precisely the expected delay/memory/bandwidth performance improvements compared with an ordered service for various combinations of: (1) different partial orders and loss tolerances, (2) different distributions of disorder and loss supplied by the underlying service, and (3) different sender-receiver window sizes.
Reference: [11] <author> P. Conrad, P.D. Amer, and T. Connolly. </author> <title> Improving performance in transport layer communications protocols by using partial orders and partial reliability. </title> <note> (submitted for publication). </note>
Reference-contexts: From a computational point of view, computing e i for a partial order composed of multiple smaller partial orders is simplified by composing them two at a time and repeatedly using the formulae (1) and (2). The computational complexity of computing e i is discussed further in <ref> [11] </ref>. 3.3 Comparing Partial Order Services Using arbitrary precision arithmetic routines, programs were developed to compute e i values for an arbitrary series-parallel partial order. Table 1 indicates e i values for 0 i &lt; N for the Anatomy and Physiology Instructor example in Figure 2.
Reference: [12] <author> H.W. Chang. </author> <title> Linear extensions of partially ordered sets. </title> <type> Tech Report MS Thesis, </type> <institution> Carleton Univ, </institution> <year> 1986. </year>
Reference-contexts: Similarly, there is an O (N 8 ) algorithm for computing e (P ) for any graph (and therefore for any partial order) where if the directions of the edges of P are not considered, any resulting cycles are edge disjoint <ref> [12] </ref>. Neither of these forms, however, model multimedia applications. If the partial orders under consideration are series-parallel [28], calculation of e (P ) is possible [1].
Reference: [13] <author> T. Camp, P. Kearns, and M. Ahuja. </author> <title> Proof rules for FLUSH channels. </title> <journal> IEEE Trans on Software Engineering, </journal> <volume> SE-19(14), </volume> <pages> 366-378, </pages> <month> Apr </month> <year> 1993. </year>
Reference-contexts: Ahuja, however, assumes a sending process dynamically builds 1 An unreliable service (e.g., the postal system) does not necessarily lose objects, simply it may do so without failing to provide its advertised quality of service. 7 the partial order and that no objects are ever lost <ref> [13, 26] </ref>. Our work assumes a predetermined partial order negotiated between the sender and receiver and U-PO service allows objects to be lost. Also, Ahuja's four data types do not permit all possible partial orders of objects as does Protocol POC.
Reference: [14] <author> M. Diaz and P. </author> <title> Senac. Time stream petri nets: a model for multimedia streams synchronization. </title> <booktitle> In Proc of Multimedia Modeling '93, </booktitle> <pages> 257-274, </pages> <address> Singapore, </address> <month> Nov </month> <year> 1993. </year>
Reference-contexts: Once the temporal value of these objects has expired, it is better to presume them lost than to delay further the delivery pipeline of information. One possibility for deciding when an object's usefulness has expired is to require each object to contain information defining its precise temporal value <ref> [14] </ref>. An example of a BART-L object would be a movie subtitle which normally is displayed during a twenty second film sequence. If not delivered sometime during the first ten seconds, the subtitle loses its value and can be presumed lost.
Reference: [15] <author> A.C. Guyton. </author> <title> Textbook of Medical Physiology. </title> <publisher> Saunders, </publisher> <address> Philidelphia, PA, </address> <year> 1981. </year>
Reference-contexts: In one particular presentation, the user learns of the human heart by combining an animated image and sound track of a heart pumping in one window while simultaneously providing general textual information (e.g., average heart rate) in another window (see Figure 1 taken from <ref> [15] </ref>.) 1 and 2 of the heart are fixed images that change with time to provide a gradual rotation or slow-motion animation. These images are represented by objects 1-12 displayed in a sequence of six pairs.
Reference: [16] <author> S.L. Hardt-Kornacki and L.A. Ness. </author> <title> Optimization model for the delivery of interactive multimedia documents. </title> <booktitle> In Proc Globecom 91, </booktitle> <pages> 669-673, </pages> <address> Phoenix, Ariz, </address> <month> Dec </month> <year> 1991. </year>
Reference-contexts: It is assumed that synchronization concerns in presenting the objects after delivery is a service provided on top of the proposed partial order service. Temporal ordering for synchronized playback is considered, for example, in <ref> [3, 16] </ref>. 3 Example 2: Consider an application that must do a screen refresh on a workstation screen/display containing multiple windows.
Reference: [17] <author> Information Processing Systems Open System Interconnection. </author> <title> ISO International Standard 9074: Estelle A Formal Description Technique Based on an Extended State Transition Model. </title>
Reference-contexts: It is specified in the language Estelle (see Appendix A), an ISO International Standard Formal Description Technique for specifying communication services/protocols and, more generally, distributed systems <ref> [8, 17] </ref>. The specification has been designed and validated using several formal description tools: Pet-Dingo, a portable Estelle translator and distributed generator for simulations [27]; and GROPE, a simulation system that provides graphical animation to visualize an Estelle specification [5].
Reference: [18] <author> D. Knuth. </author> <booktitle> The Art of Computer Programming Vol 1: Fundamental Algorithms, 2nd ed. </booktitle> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass., </address> <year> 1973. </year>
Reference-contexts: That is, is the arriving order a member of L (P )? If not, arriving objects must be buffered to guarantee the particular partial order in agreement at the time. Enumerating L (P ) is equivalent to finding all possible topological sortings for a given partial order <ref> [18] </ref>. Fortunately in practice, a destination need not enumerate L (P ) to decide if an arriving object can be delivered. The destination merely needs to see if the arriving object satisfies the defined partial order.
Reference: [19] <author> L. Lamport. </author> <title> Time, clocks and the ordering of events in a dist'd system. </title> <journal> CACM, </journal> <volume> 21(7), </volume> <pages> 558-565, </pages> <month> Jul </month> <year> 1978. </year>
Reference-contexts: Example 2 described earlier while U-PO service is appropriate for general multimedia applications such as the television news broadcast for the hearing impaired in Example 3. 2.2 Related Work Other authors have considered theoretical consequences of channel ordering, or lack thereof, in the context of designing and verifying distributed algorithms <ref> [19, 23] </ref>. For example, Ahuja shows that some conclusions derived on the design of distributed algorithms need not have required FIFO ordering as a base assumption [4].
Reference: [20] <author> B. Lampson, N. Lynch, and J. Sogaard-Andersen. </author> <title> Correctness of at-most-once message delivery protocols. </title> <editor> In R. Tenney, P. Amer, and U. Uyar, eds, </editor> <title> Formal Description Techniques, VI. </title> <publisher> North Holland, </publisher> <address> Amsterdam, </address> <note> 1994 (in press). </note>
Reference-contexts: Since there are varying degrees of unreliability, this service is represented by a set of points in Figure 7. An unreliable-ordered service is applicable to packet-voice or teleconferencing applications. If duplicates are not permitted, this represents what some, but not all authors call "at-most-once" delivery service <ref> [20] </ref>. Finally unreliable-unordered service allows objects to be lost and delivered in any order. This is the kind of service used for normal email (without acknowledgment receipts) and electronic announcements or junk email.
Reference: [21] <author> T. Little and A. Ghafoor. </author> <title> Network considerations for dist'd multimedia object composition and communication. </title> <journal> IEEE Network Magazine, </journal> <pages> 32-49, </pages> <month> Nov </month> <year> 1990. </year>
Reference-contexts: For instance, the partial orders in all of Section 2's examples are series-parallel. (Similarly, the Object Composition Petri-nets proposed by Little and Ghafoor as a basis for modeling the synchronization and ordering of multimedia entities often are series-parallel <ref> [21, 22] </ref>.) Using ";" and "k" as notation for series and parallel composition, respectively, the Anatomy and Physiology Instructor multimedia presentation of the human heart (Figure 2) can be defined as: ((1 k 2); (3 k 4); (5 k 6); (7 k 8); (9 k 10); (11 k 12)) k (13;
Reference: [22] <author> T. Little and A. Ghafoor. </author> <title> Synchronization and storage models for multimedia objects. </title> <journal> IEEE J on Selected Areas in Comm, </journal> <volume> 8(3), </volume> <pages> 413-427, </pages> <month> Apr </month> <year> 1990. </year>
Reference-contexts: We now present four illustrating examples. Example 1: Consider an Anatomy and Physiology Instructor system described as "a simple multimedia application example based on the hypermedia paradigm and temporal relation specification" <ref> [22] </ref>. Here a workstation displays multiple windows of video, audio, text, image, and animated image according to well defined synchronization and ordering requirements. <p> For instance, the partial orders in all of Section 2's examples are series-parallel. (Similarly, the Object Composition Petri-nets proposed by Little and Ghafoor as a basis for modeling the synchronization and ordering of multimedia entities often are series-parallel <ref> [21, 22] </ref>.) Using ";" and "k" as notation for series and parallel composition, respectively, the Anatomy and Physiology Instructor multimedia presentation of the human heart (Figure 2) can be defined as: ((1 k 2); (3 k 4); (5 k 6); (7 k 8); (9 k 10); (11 k 12)) k (13;
Reference: [23] <author> G. Neiger and S. Toueg. </author> <title> Substituting for real time and common knowledge in asynchronous dist'd systems. </title> <booktitle> In Proc 4th Symp on Principles of Dist'd Computing, </booktitle> <pages> 281-293, </pages> <year> 1987. </year>
Reference-contexts: Example 2 described earlier while U-PO service is appropriate for general multimedia applications such as the television news broadcast for the hearing impaired in Example 3. 2.2 Related Work Other authors have considered theoretical consequences of channel ordering, or lack thereof, in the context of designing and verifying distributed algorithms <ref> [19, 23] </ref>. For example, Ahuja shows that some conclusions derived on the design of distributed algorithms need not have required FIFO ordering as a base assumption [4].
Reference: [24] <author> L. Peterson, N. Buchholz, and R. Schlighting. </author> <title> Preserving and using context information in interprocess communication. </title> <journal> ACM Trans on Computer Systems, </journal> <volume> 7(3), </volume> <pages> 217-246, </pages> <month> Aug </month> <year> 1989. </year> <month> 19 </month>
Reference-contexts: Our work assumes a predetermined partial order negotiated between the sender and receiver and U-PO service allows objects to be lost. Also, Ahuja's four data types do not permit all possible partial orders of objects as does Protocol POC. Reference <ref> [24] </ref> defines a partial order on the messages communicated by a set of distributed processes and implements a protocol Psync that encodes the partial ordering within each message.
Reference: [25] <author> I. </author> <title> Rival. NATO Advanced Study Inst on Algorithms and Order. </title> <publisher> Klumer Acadamic Publishers, </publisher> <year> 1989. </year>
Reference: [26] <author> K. Shafer and M. Ahuja. </author> <title> Process channel(agent) process model of asynchronous dist'd communication. </title> <booktitle> In Proc ICDCS 12, </booktitle> <pages> 4-11, </pages> <address> Yokohama, Japan, </address> <month> Jun </month> <year> 1992. </year>
Reference-contexts: Ahuja, however, assumes a sending process dynamically builds 1 An unreliable service (e.g., the postal system) does not necessarily lose objects, simply it may do so without failing to provide its advertised quality of service. 7 the partial order and that no objects are ever lost <ref> [13, 26] </ref>. Our work assumes a predetermined partial order negotiated between the sender and receiver and U-PO service allows objects to be lost. Also, Ahuja's four data types do not permit all possible partial orders of objects as does Protocol POC.
Reference: [27] <author> R. Sijelmassi and B. Strausser. </author> <title> The PET and DINGO tools for deriving dist'd implementations from Estelle. </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> 25(7), </volume> <pages> 841-852, </pages> <month> Feb </month> <year> 1993. </year>
Reference-contexts: The specification has been designed and validated using several formal description tools: Pet-Dingo, a portable Estelle translator and distributed generator for simulations <ref> [27] </ref>; and GROPE, a simulation system that provides graphical animation to visualize an Estelle specification [5]. Since it makes no practical sense to put a POC on top of a service that is already fully ordered and fully reliable, Protocol POC assumes that the underlying network service is unreliable.
Reference: [28] <author> R. Stanley. </author> <title> Enumerative Combinatorics: Volume 1. Wadsworth + Brooks/Cole Advanced Books & Software, </title> <address> Monterey, CA, </address> <year> 1986. </year>
Reference-contexts: Each linear extension in the set L (P ) is essentially one of the orderings of the objects that is permitted at the destination. The number of linear extensions of P , denoted e (P ), is thought as the best single number which measures the complexity of P <ref> [28] </ref>. Clearly for N objects, e (complete order) = 1, e (no order) = N ! It is argued in [1] that e (P ) appropriately quantifies a desired partial order transport service in communication networks. <p> Neither of these forms, however, model multimedia applications. If the partial orders under consideration are series-parallel <ref> [28] </ref>, calculation of e (P ) is possible [1]. While not all applications calling for a partial order service need a series-parallel one, such a composition is reasonable for many applications, particularly multimedia applications. <p> respectively, the Anatomy and Physiology Instructor multimedia presentation of the human heart (Figure 2) can be defined as: ((1 k 2); (3 k 4); (5 k 6); (7 k 8); (9 k 10); (11 k 12)) k (13; (14 k 15)) k 16 k 17 k 18 k 19 From <ref> [28, Example 3.5.4] </ref>, the following formulae for series-parallel compositions are known.
Reference: [29] <author> J. Valdes, R. Tarjan, and E. Lawler. </author> <title> The recognition of series parallel digraphs. </title> <journal> SIAM J. Computing, </journal> <volume> 11(2), </volume> <pages> 298-313, </pages> <year> 1982. </year>
Reference-contexts: Any partial order can be represented in N (N 1)=2 bits as an upper N by N triangular matrix where N is the number of objects in the partial order [1]. If the partial order is series-parallel, it can be represented as the intersection of two total orders <ref> [29] </ref>. By assuming one total order to be 1; 2; : : :; N , a series-parallel partial order can be encoded in N log N bits.
References-found: 29

