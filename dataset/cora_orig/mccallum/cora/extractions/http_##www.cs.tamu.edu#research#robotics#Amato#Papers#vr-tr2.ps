URL: http://www.cs.tamu.edu/research/robotics/Amato/Papers/vr-tr2.ps
Refering-URL: http://www.cs.tamu.edu/faculty/amato/dsmft/publications.html
Root-URL: http://www.cs.tamu.edu
Email: amato@cs.tamu.edu burchanb@cs.tamu.edu kimk@cs.tamu.edu  wooks@cs.tamu.edu gsong@cs.tamu.edu  
Title: Providing Haptic 'Hints' to Automatic Motion Planners  
Author: Nancy M. Amato O. Burchan Bayazit Kyunghwan Kim Wookho Son Guang Song 
Date: November 24, 1998 (Revised February 8, 1999)  
Affiliation: Department of Computer Science Texas A&M University  
Pubnum: Technical Report 98-026  
Abstract: In this paper, we investigate various paradigms for enabling a human operator and an automatic motion planner to cooperatively solve a motion planning query. Our work is motivated by our experience that automatic motion planners sometimes fail due to the difficulty of discovering `critical' configurations of the robot that are often naturally apparent to a human observer. In particular, we study how haptic and visual interfaces can be used to enable a user and an automatic motion planner to cooperatively solve a motion planning query. While much progress has been made in the areas of automatic motion planning and haptic interfaces, little attention has been directed towards combining the two. Our goal is to develop cooperation paradigms that are natural for the human operator and beneficial to the automatic planner. Some of the issued addressed in our study include determining `natural' ways for the user to understand the progress made by the motion planner (e.g., visualization techniques) and developing techniques by which the automatic planner can utilize (easily generated) user-input. In this paper, we propose several possible approaches to these problems, compare them according to ease of use and effectiveness for solving motion planning queries, and provide recommendations for further development. fl This research supported in part by NSF CAREER Award CCR-9624315 (with REU Supplement), NSF Grants IIS-9619850 (with REU Supplement), EIA-9805823, and EIA-9810937, and by the Texas Higher Education Coordinating Board under grant ARP-036327-017. Bayazit is supported in part by the Turkish Ministry of Education. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. M. Ahuactzin and K. Gupta. </author> <title> A motion planning based approach for inverse kinematics of redundant robots: The kinematic roadmap. </title> <booktitle> In Proc. IEEE Int. Conf. Robot. Autom. (ICRA), </booktitle> <pages> pages 36093614, </pages> <year> 1997. </year>
Reference-contexts: key technical challenges involved in providing realistic feedback to the user in a timely fashion. 2.1 Probabilistic Roadmap Methods The automatic planning method used in our system is the obstacle-based probabilistic roadmap method (OBPRM) [3], which is a representative of the class of planners known as probabilistic roadmap methods (PRMs) <ref> [1, 3, 7, 9, 10, 14, 15, 16, 20, 21] </ref>. Briefly, PRMs, use randomization (usually during preprocessing) to construct a graph in C-space (a roadmap [17]). Roadmap nodes correspond to collision-free configurations of the robot.
Reference: [2] <author> N. M. Amato, O. B. Bayazit, L. K. Dale, C. V. Jones, and D. Vallejo. </author> <title> Choosing good distance metrics and local planners for probabilistic roadmap methods. </title> <booktitle> In Proc. IEEE Int. Conf. Robot. Autom. (ICRA), </booktitle> <pages> pages 630637, </pages> <year> 1998. </year>
Reference-contexts: In contrast, such critical configurations are sometimes naturally apparent to a human observer (see, e.g., <ref> [2] </ref>).
Reference: [3] <author> N. M. Amato, O. B. Bayazit, L. K. Dale, C. V. Jones, and D. Vallejo. OBPRM: </author> <title> An obstacle-based PRM for 3D workspaces. </title> <booktitle> In Proc. Int. Workshop on Algorithmic Foundations of Robotics (WAFR), </booktitle> <pages> pages 155168, </pages> <year> 1998. </year>
Reference-contexts: Nevertheless, it is sufficiently complex that we encounter many of the key technical challenges involved in providing realistic feedback to the user in a timely fashion. 2.1 Probabilistic Roadmap Methods The automatic planning method used in our system is the obstacle-based probabilistic roadmap method (OBPRM) <ref> [3] </ref>, which is a representative of the class of planners known as probabilistic roadmap methods (PRMs) [1, 3, 7, 9, 10, 14, 15, 16, 20, 21]. Briefly, PRMs, use randomization (usually during preprocessing) to construct a graph in C-space (a roadmap [17]). <p> key technical challenges involved in providing realistic feedback to the user in a timely fashion. 2.1 Probabilistic Roadmap Methods The automatic planning method used in our system is the obstacle-based probabilistic roadmap method (OBPRM) [3], which is a representative of the class of planners known as probabilistic roadmap methods (PRMs) <ref> [1, 3, 7, 9, 10, 14, 15, 16, 20, 21] </ref>. Briefly, PRMs, use randomization (usually during preprocessing) to construct a graph in C-space (a roadmap [17]). Roadmap nodes correspond to collision-free configurations of the robot. <p> One approach might be to use the colliding 4 configurations as milestones in the dilated freespace as in [9] or as seed nodes in OBPRM <ref> [3] </ref> (which attempts to `push' them to freespace). In this section, we describe more specialized methods for transforming colliding path segments to the free space.
Reference: [4] <author> J. Barraquand and J.-C. Latombe. </author> <title> Robot motion planning: A distributed representation approach. </title> <institution> Int. J. Robot. Res., 10(6):628649, </institution> <year> 1991. </year>
Reference-contexts: Indeed, there is strong evidence that any complete planner (one that is guaranteed to find a solution or determine that none exists) requires time exponential in the number of degrees of freedom (dof) of the robot [22]. Recently, some promising randomized methods have been proposed (see, e.g., <ref> [4, 16] </ref>). Nonetheless, despite the great amount of effort spent on motion planning [17], there exist many important applications that have resisted automatic solution. We believe that some such problems might be solved by using user-input to help guide automatic motion planning algorithms.
Reference: [5] <author> N. Delson and H. West. </author> <title> Robot programming by human demonstration. </title> <booktitle> In Proc. IEEE Int. Conf. Intel. Rob. Syst. (IROS), </booktitle> <pages> pages 12481255, </pages> <year> 1994. </year>
Reference-contexts: While haptic devices have been used in some limited 2 situations to generate robot trajectories (see, e.g., <ref> [5, 6, 8, 12, 13, 19, 24, 25] </ref>), we believe they have great po-tential for use in truly cooperative systems involving human operators and more general automatic planners.
Reference: [6] <author> G. Z. Grudic and P. D. Lawrence. </author> <title> Human-to-robot skill transfer using the spore approximation. </title> <booktitle> In Proc. IEEE Int. Conf. Robot. Autom. (ICRA), </booktitle> <pages> pages 29622967, </pages> <year> 1996. </year>
Reference-contexts: While haptic devices have been used in some limited 2 situations to generate robot trajectories (see, e.g., <ref> [5, 6, 8, 12, 13, 19, 24, 25] </ref>), we believe they have great po-tential for use in truly cooperative systems involving human operators and more general automatic planners.
Reference: [7] <author> T. Horsch, F. Schwarz, and H. Tolle. </author> <title> Motion planning for many degrees of freedom random reflections at c-space obstacles. </title> <booktitle> In Proc. IEEE Int. Conf. Robot. Autom. (ICRA), </booktitle> <pages> pages 33183323, </pages> <year> 1994. </year>
Reference-contexts: key technical challenges involved in providing realistic feedback to the user in a timely fashion. 2.1 Probabilistic Roadmap Methods The automatic planning method used in our system is the obstacle-based probabilistic roadmap method (OBPRM) [3], which is a representative of the class of planners known as probabilistic roadmap methods (PRMs) <ref> [1, 3, 7, 9, 10, 14, 15, 16, 20, 21] </ref>. Briefly, PRMs, use randomization (usually during preprocessing) to construct a graph in C-space (a roadmap [17]). Roadmap nodes correspond to collision-free configurations of the robot.
Reference: [8] <author> G. E. Hovland and et al. </author> <title> Skill acquisition from human demonstration using a hidden markov model. </title> <booktitle> In Proc. IEEE Int. Conf. Robot. Autom. (ICRA), </booktitle> <pages> pages 27062711, </pages> <year> 1996. </year>
Reference-contexts: While haptic devices have been used in some limited 2 situations to generate robot trajectories (see, e.g., <ref> [5, 6, 8, 12, 13, 19, 24, 25] </ref>), we believe they have great po-tential for use in truly cooperative systems involving human operators and more general automatic planners.
Reference: [9] <author> D. Hsu, L. Kavraki, J-C. Latombe, R. Motwani, and S. Sorkin. </author> <title> On finding narrow passages with probabilistic roadmap planners. </title> <booktitle> In Proc. Int. Workshop on Algorithmic Foundations of Robotics (WAFR), </booktitle> <year> 1998. </year>
Reference-contexts: key technical challenges involved in providing realistic feedback to the user in a timely fashion. 2.1 Probabilistic Roadmap Methods The automatic planning method used in our system is the obstacle-based probabilistic roadmap method (OBPRM) [3], which is a representative of the class of planners known as probabilistic roadmap methods (PRMs) <ref> [1, 3, 7, 9, 10, 14, 15, 16, 20, 21] </ref>. Briefly, PRMs, use randomization (usually during preprocessing) to construct a graph in C-space (a roadmap [17]). Roadmap nodes correspond to collision-free configurations of the robot. <p> In either case, the configurations generated can be free (i.e., collision-free configurations of the robot), or approximate (some penetration is allowed, which can be viewed as `dilating' the robot's free space <ref> [9] </ref>). Note that not necessarily all valid paths in a dilated free space can be transformed into valid paths in the original free space (since passages in the dilated space might not exist at all in the original space). <p> However, if an approximate path was collected, then the planner can incorporate only the free portions of this path and must try to `push' the colliding portions to the free space. One approach might be to use the colliding 4 configurations as milestones in the dilated freespace as in <ref> [9] </ref> or as seed nodes in OBPRM [3] (which attempts to `push' them to freespace). In this section, we describe more specialized methods for transforming colliding path segments to the free space.
Reference: [10] <author> D. Hsu, J-C. Latombe, and R. Motwani. </author> <title> Path planning in expansive configuration spaces. </title> <booktitle> In Proc. IEEE Int. Conf. Robot. Autom. (ICRA), </booktitle> <pages> pages 27192726, </pages> <year> 1997. </year> <month> 10 </month>
Reference-contexts: key technical challenges involved in providing realistic feedback to the user in a timely fashion. 2.1 Probabilistic Roadmap Methods The automatic planning method used in our system is the obstacle-based probabilistic roadmap method (OBPRM) [3], which is a representative of the class of planners known as probabilistic roadmap methods (PRMs) <ref> [1, 3, 7, 9, 10, 14, 15, 16, 20, 21] </ref>. Briefly, PRMs, use randomization (usually during preprocessing) to construct a graph in C-space (a roadmap [17]). Roadmap nodes correspond to collision-free configurations of the robot.
Reference: [11] <author> Y. K. Hwang and N. Ahuja. </author> <title> Gross motion planning a survey. </title> <journal> ACM Computing Surveys, </journal> <volume> 24(3):219291, </volume> <year> 1992. </year>
Reference-contexts: 1 Introduction Motion planning arises in many application domains such as robotics, virtual reality systems, and computer-aided design. Algorithms for performing fully automatic motion planning would be highly desirable for many of these applications, and as such, have been the object of much research <ref> [11, 17] </ref>. Despite the large effort that has been spent on this problem, efficient fully automatic solutions are known only for very limited scenarios.
Reference: [12] <author> M. Kaiser and R. Dillmann. </author> <title> Building elementary robot skills from human demonstration. </title> <booktitle> In Proc. IEEE Int. Conf. Robot. Autom. (ICRA), </booktitle> <pages> pages 27002705, </pages> <year> 1996. </year>
Reference-contexts: While haptic devices have been used in some limited 2 situations to generate robot trajectories (see, e.g., <ref> [5, 6, 8, 12, 13, 19, 24, 25] </ref>), we believe they have great po-tential for use in truly cooperative systems involving human operators and more general automatic planners.
Reference: [13] <author> S. B. Kang and K. </author> <title> Ikeuchi. Determination of motion breakpoints in a task sequence from human hand motion. </title> <booktitle> In Proc. IEEE Int. Conf. Robot. Autom. (ICRA), </booktitle> <pages> pages 551556, </pages> <year> 1994. </year>
Reference-contexts: While haptic devices have been used in some limited 2 situations to generate robot trajectories (see, e.g., <ref> [5, 6, 8, 12, 13, 19, 24, 25] </ref>), we believe they have great po-tential for use in truly cooperative systems involving human operators and more general automatic planners.
Reference: [14] <author> L. Kavraki. </author> <title> Random Networks in Configuration Space for Fast Path Planning. </title> <type> PhD thesis, </type> <institution> Stanford Univ, Computer Science Dept., </institution> <year> 1995. </year>
Reference-contexts: key technical challenges involved in providing realistic feedback to the user in a timely fashion. 2.1 Probabilistic Roadmap Methods The automatic planning method used in our system is the obstacle-based probabilistic roadmap method (OBPRM) [3], which is a representative of the class of planners known as probabilistic roadmap methods (PRMs) <ref> [1, 3, 7, 9, 10, 14, 15, 16, 20, 21] </ref>. Briefly, PRMs, use randomization (usually during preprocessing) to construct a graph in C-space (a roadmap [17]). Roadmap nodes correspond to collision-free configurations of the robot.
Reference: [15] <author> L. Kavraki and J. C. Latombe. </author> <title> Randomized preprocessing of configuration space for fast path planning. </title> <booktitle> In Proc. IEEE Int. Conf. Robot. Autom. (ICRA), </booktitle> <pages> pages 21382145, </pages> <year> 1994. </year>
Reference-contexts: key technical challenges involved in providing realistic feedback to the user in a timely fashion. 2.1 Probabilistic Roadmap Methods The automatic planning method used in our system is the obstacle-based probabilistic roadmap method (OBPRM) [3], which is a representative of the class of planners known as probabilistic roadmap methods (PRMs) <ref> [1, 3, 7, 9, 10, 14, 15, 16, 20, 21] </ref>. Briefly, PRMs, use randomization (usually during preprocessing) to construct a graph in C-space (a roadmap [17]). Roadmap nodes correspond to collision-free configurations of the robot.
Reference: [16] <author> L. Kavraki, P. Svestka, J. C. Latombe, and M. Overmars. </author> <title> Probabilistic roadmaps for path planning in high-dimensional configuration spaces. </title> <journal> IEEE Trans. Robot. Automat., </journal> <volume> 12(4):566580, </volume> <month> August </month> <year> 1996. </year>
Reference-contexts: Indeed, there is strong evidence that any complete planner (one that is guaranteed to find a solution or determine that none exists) requires time exponential in the number of degrees of freedom (dof) of the robot [22]. Recently, some promising randomized methods have been proposed (see, e.g., <ref> [4, 16] </ref>). Nonetheless, despite the great amount of effort spent on motion planning [17], there exist many important applications that have resisted automatic solution. We believe that some such problems might be solved by using user-input to help guide automatic motion planning algorithms. <p> key technical challenges involved in providing realistic feedback to the user in a timely fashion. 2.1 Probabilistic Roadmap Methods The automatic planning method used in our system is the obstacle-based probabilistic roadmap method (OBPRM) [3], which is a representative of the class of planners known as probabilistic roadmap methods (PRMs) <ref> [1, 3, 7, 9, 10, 14, 15, 16, 20, 21] </ref>. Briefly, PRMs, use randomization (usually during preprocessing) to construct a graph in C-space (a roadmap [17]). Roadmap nodes correspond to collision-free configurations of the robot.
Reference: [17] <author> J. C. Latombe. </author> <title> Robot Motion Planning. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, MA, </address> <year> 1991. </year>
Reference-contexts: 1 Introduction Motion planning arises in many application domains such as robotics, virtual reality systems, and computer-aided design. Algorithms for performing fully automatic motion planning would be highly desirable for many of these applications, and as such, have been the object of much research <ref> [11, 17] </ref>. Despite the large effort that has been spent on this problem, efficient fully automatic solutions are known only for very limited scenarios. <p> Recently, some promising randomized methods have been proposed (see, e.g., [4, 16]). Nonetheless, despite the great amount of effort spent on motion planning <ref> [17] </ref>, there exist many important applications that have resisted automatic solution. We believe that some such problems might be solved by using user-input to help guide automatic motion planning algorithms. <p> Briefly, PRMs, use randomization (usually during preprocessing) to construct a graph in C-space (a roadmap <ref> [17] </ref>). Roadmap nodes correspond to collision-free configurations of the robot. Two nodes are connected by an edge if a path between the two corresponding configurations can be found by a local planning method.
Reference: [18] <author> T. H. Massie and J. K. Salisbury. </author> <title> The PHANToM haptic interface: A device for probing virtual objects. </title> <booktitle> In Int. Mechanical Engineering Exposition and Congress, </booktitle> <pages> DSC 55-1, pages 295302, </pages> <address> Chicago, </address> <year> 1994. </year> <editor> C. J. Radcliffe, ed., </editor> <publisher> ASME. </publisher>
Reference-contexts: utilize the user-generated input? In this paper, we propose several possible approaches to the above questions, compare them according to ease of use and effectiveness for solving motion planning queries, and provide recommendations for further development. 2 Our Prototype VE System Our prototype system consisted of a PHANToM haptic device <ref> [18] </ref> and an SGI O2 graphics workstation. The PHANToM [18] cannot exert moments since although the finger tip has 6 dof, it has only 3 dof for exerting forces. A bilateral connection exists between the PHANToM and the SGI O2 (the graphics display). <p> several possible approaches to the above questions, compare them according to ease of use and effectiveness for solving motion planning queries, and provide recommendations for further development. 2 Our Prototype VE System Our prototype system consisted of a PHANToM haptic device <ref> [18] </ref> and an SGI O2 graphics workstation. The PHANToM [18] cannot exert moments since although the finger tip has 6 dof, it has only 3 dof for exerting forces. A bilateral connection exists between the PHANToM and the SGI O2 (the graphics display).
Reference: [19] <author> B. J. McCarragher. </author> <title> Force sensing from human demonstration using a hybrid dynamical model and qualitative reasoning. </title> <booktitle> In Proc. IEEE Int. Conf. Robot. Autom. (ICRA), </booktitle> <pages> pages 557563, </pages> <year> 1994. </year>
Reference-contexts: While haptic devices have been used in some limited 2 situations to generate robot trajectories (see, e.g., <ref> [5, 6, 8, 12, 13, 19, 24, 25] </ref>), we believe they have great po-tential for use in truly cooperative systems involving human operators and more general automatic planners.
Reference: [20] <author> M. Overmars. </author> <title> A random approach to path planning. </title> <type> Technical Report RUU-CS-92-32, </type> <institution> Computer Science, Utrecht University, </institution> <address> The Netherlands, </address> <year> 1992. </year>
Reference-contexts: key technical challenges involved in providing realistic feedback to the user in a timely fashion. 2.1 Probabilistic Roadmap Methods The automatic planning method used in our system is the obstacle-based probabilistic roadmap method (OBPRM) [3], which is a representative of the class of planners known as probabilistic roadmap methods (PRMs) <ref> [1, 3, 7, 9, 10, 14, 15, 16, 20, 21] </ref>. Briefly, PRMs, use randomization (usually during preprocessing) to construct a graph in C-space (a roadmap [17]). Roadmap nodes correspond to collision-free configurations of the robot.
Reference: [21] <author> M. Overmars and P. Svestka. </author> <title> A probabilistic learning approach to motion planning. </title> <booktitle> In Proc. Workshop on Algorithmic Foundations of Robotics, pages 1937, </booktitle> <year> 1994. </year>
Reference-contexts: key technical challenges involved in providing realistic feedback to the user in a timely fashion. 2.1 Probabilistic Roadmap Methods The automatic planning method used in our system is the obstacle-based probabilistic roadmap method (OBPRM) [3], which is a representative of the class of planners known as probabilistic roadmap methods (PRMs) <ref> [1, 3, 7, 9, 10, 14, 15, 16, 20, 21] </ref>. Briefly, PRMs, use randomization (usually during preprocessing) to construct a graph in C-space (a roadmap [17]). Roadmap nodes correspond to collision-free configurations of the robot.
Reference: [22] <author> J. Reif. </author> <title> Complexity of the piano mover's problem and generalizations. </title> <booktitle> In Proc. IEEE Symp. Foundations of Computer Science (FOCS), </booktitle> <pages> pages 421427, </pages> <year> 1979. </year>
Reference-contexts: Indeed, there is strong evidence that any complete planner (one that is guaranteed to find a solution or determine that none exists) requires time exponential in the number of degrees of freedom (dof) of the robot <ref> [22] </ref>. Recently, some promising randomized methods have been proposed (see, e.g., [4, 16]). Nonetheless, despite the great amount of effort spent on motion planning [17], there exist many important applications that have resisted automatic solution.
Reference: [23] <author> Sensable Technologies, Inc. </author> <title> GHOST Software Developer's Toolkit Programmer's Guide Version 1.21. </title>
Reference-contexts: The graphics keep track of the position updates of the PHANToM finger tip (gimbal), and the PHANToM generates force-feedback using the collision/penetration information from the graphics display. Our haptic-interaction applications were developed using the C++ General Haptic Open Software Toolkit (GHOST SDK) <ref> [23] </ref>. The operator can use the PHANToM to manipulate a single rigid object in the virtual scene. Two modes of maneuvering were available.
Reference: [24] <author> S. K. Tso and K. P. Liu. </author> <title> Automatic generation of robot program codes from perception of human demonstration. </title> <booktitle> In Proc. IEEE Int. Conf. Intel. Rob. Syst. (IROS), </booktitle> <pages> pages 2328, </pages> <year> 1995. </year>
Reference-contexts: While haptic devices have been used in some limited 2 situations to generate robot trajectories (see, e.g., <ref> [5, 6, 8, 12, 13, 19, 24, 25] </ref>), we believe they have great po-tential for use in truly cooperative systems involving human operators and more general automatic planners.
Reference: [25] <author> C. P. Tung and A. C. Kak. </author> <title> Automatic learning of assembly tasks using a dataglove system. </title> <booktitle> In Proc. IEEE Int. Conf. Intel. Rob. Syst. (IROS), </booktitle> <pages> pages 18, </pages> <year> 1995. </year> <title> 11 (a) Accumulated collisions. (b) Clearance. (c) Contact force. time versus (a) total collisions, (b) robot's clearance (distance from nearest obstacle), and (c) contact force acting on the robot. (a) Accumulated collisions. (b) Clearance. (c) Contact force. time versus (a) total collisions, (b) robot's clearance (distance from nearest obstacle), and (c) contact force acting on the robot. </title> <type> 12 </type>
Reference-contexts: While haptic devices have been used in some limited 2 situations to generate robot trajectories (see, e.g., <ref> [5, 6, 8, 12, 13, 19, 24, 25] </ref>), we believe they have great po-tential for use in truly cooperative systems involving human operators and more general automatic planners.
References-found: 25

