URL: ftp://ftp.cs.wpi.edu/pub/techreports/98-7.ps.gz
Refering-URL: http://cs.wpi.edu/Resources/techreports/index.html
Root-URL: 
Title: SEE: A Spatial Exploration Environment Based on a Direct-Manipulation Paradigm  
Author: by Sudhir Kaushik Elke Rundensteiner 
Date: May 1998  
Pubnum: WPI-CS-TR-98-7  
Abstract: Computer Science Technical Report Series WORCESTER POLYTECHNIC INSTITUTE Computer Science Department 100 Institute Road, Worcester, Massachusetts 01609-2280 
Abstract-found: 1
Intro-found: 1
Reference: [ACSW96] <author> A. Aiken, J. Chen, M. Stonebraker, and A. Woodruff. Tioga-2: </author> <title> A direct manipulation database visualization environment. </title> <journal> IEEE Int. Conf. on Data Eng., </journal> <pages> pages 208-217, </pages> <year> 1996. </year>
Reference-contexts: On the other hand, this direct manipulation environment allows users to explore the database even without knowing what exactly they are looking for. Tioga-2 <ref> [ACSW96] </ref>, Spotfire [Ahl96], VisDB [KK94] are also other examples of such visual exploration systems. These systems employ dynamic queries and interactive information visualization techniques for information retrieval. These systems however do not deal with special-purpose data types such as spatial and temporal data. <p> Visual query environments based on the VIS paradigms [Shn92] feature a dynamic querying mechanism and a graphical display of results are typically restricted to simple numeric domains <ref> [ACSW96] </ref> [DKR97]. <p> Tioga-2 <ref> [ACSW96] </ref>, Spotfire [Ahl96], VisDB [KK94], DEVise [RLea97], Visage [DKR97], XMDV [War94] are all examples of visual exploration systems. These systems employ dynamic queries and interactive information visualization techniques for information retrieval. These systems however do not deal with special purpose data types such as spatial and temporal data.
Reference: [Ahl96] <author> C. Ahlberg. Spotfire: </author> <title> An information exploration environment. </title> <booktitle> Proceedings of SIGMOD, </booktitle> <volume> 25 </volume> <pages> 25-29, </pages> <year> 1996. </year>
Reference-contexts: On the other hand, this direct manipulation environment allows users to explore the database even without knowing what exactly they are looking for. Tioga-2 [ACSW96], Spotfire <ref> [Ahl96] </ref>, VisDB [KK94] are also other examples of such visual exploration systems. These systems employ dynamic queries and interactive information visualization techniques for information retrieval. These systems however do not deal with special-purpose data types such as spatial and temporal data. <p> Tioga-2 [ACSW96], Spotfire <ref> [Ahl96] </ref>, VisDB [KK94], DEVise [RLea97], Visage [DKR97], XMDV [War94] are all examples of visual exploration systems. These systems employ dynamic queries and interactive information visualization techniques for information retrieval. These systems however do not deal with special purpose data types such as spatial and temporal data.
Reference: [AS94] <author> C. Ahlberg and B. Shneiderman. </author> <title> Visual information seeking: Tight coupling of dynamic query filters with starfield displays. </title> <booktitle> CHI'94, </booktitle> <pages> pages 313-317, </pages> <month> Apr </month> <year> 1994. </year>
Reference-contexts: 1 Introduction 1.1 Background The exploration of large information spaces remains a challenging task especially with the growth of the World Wide Web and other such huge repositories of information <ref> [AS94] </ref>. Visual Information Seeking (VIS) addresses this problem by recognizing the enormous capacity of human visual information processing [AS94]. By presenting information visually and allowing dynamic user interaction through direct manipulation paradigms, it is possible to traverse larger information spaces in a shorter time [Shn92]. <p> 1 Introduction 1.1 Background The exploration of large information spaces remains a challenging task especially with the growth of the World Wide Web and other such huge repositories of information <ref> [AS94] </ref>. Visual Information Seeking (VIS) addresses this problem by recognizing the enormous capacity of human visual information processing [AS94]. By presenting information visually and allowing dynamic user interaction through direct manipulation paradigms, it is possible to traverse larger information spaces in a shorter time [Shn92]. <p> Overall MMVIS Project The overall goal of our research project is apply the concept of visual information seeking to systems with special-purpose data types such as spatial and temporal data, as to the best of our knowledge VIS has up to now only been applied to simple numeric data types <ref> [AS94] </ref>. Previous work in our research group focussed on designing a direct manipulation environment for one-dimensional temporal data, called MMVIS 1 (Multimedia Visual Information Seeking System) [HR97] [HR96]. MMVIS allowed a user to visually specify temporal queries over video data, giving an instantaneous visualization of the results of the query.
Reference: [BE96] <author> H. Bruns and M. Egenhofer. </author> <title> Similarity of spatial scenes. </title> <booktitle> International Symposium on Spatial Data Handling, </booktitle> <pages> pages 31-42, </pages> <month> Aug </month> <year> 1996. </year>
Reference-contexts: In order to use S-sliders to exploit the spatial continuity inherent in spatial data, we have developed a neighborhood model [Her94] <ref> [BE96] </ref> explained in [KR97] that incorporates both direction and topology and thereby defines neighbors between relative spatial positions.
Reference: [BS77] <author> R. Berman and M. Stonebraker. Geo-Quel, </author> <title> a system for the manipulation and display of geometric data. </title> <journal> ACM Computer Graphics, </journal> <volume> 11(2) </volume> <pages> 186-191, </pages> <year> 1977. </year>
Reference-contexts: The disadvantage of these SQL type languages is that users often think of spatial relationships in terms of images depicting the actual spatial positions, and the SQL type languages require the translation of this into a non-spatial language. GEO-QUEL <ref> [BS77] </ref>, Query by Pictorial Example [CF80] and Pictorial SQL [ea88] are examples of query languages where an image depicting the relationship is drawn as a query to the system. Cigales [WCL + 94] 4 and Spatial Query by Sketch [Ege] are examples of visual spatial query languages.
Reference: [Bun91] <author> M.S. Bundock. SQL-SX: </author> <title> Spatially extended SQL becoming a reality. </title> <address> EGIS, </address> <month> Apr </month> <year> 1991. </year>
Reference-contexts: We plan to make it available as a freeware shortly. Lastly, we also present an informal evaluation of the system with respect to its ease of query specification and querying power in comparison to standard text-based approaches such as SQL-3 <ref> [Bun91] </ref>. 1.4 Contributions In summary, the main contributions of this work are: * An integrated VIS framework for spatial data analysis incorporating both direction and topology queries into one uniform exploration environment, * A visual query interface for two-dimensional spatial data over this integration of direction and topology (SVIQUEL) expanding VIS <p> This is discussed in further detail in [Kau98]. 6 Evaluation of SVIQUEL We evaluate the expressive power of SVIQUEL to specify relative spatial position queries and also compare it to standard text-based query languages, in particular, the spatial operators of SQL-3 <ref> [Bun91] </ref>. 6.1 Queries Expressed by SVIQUEL Unlike SQL, we did not strive to have a complete language, but the primary goal was to have a direct-manipulation spatial exploration environment capable of specifying relative position spatial queries. <p> The same query when specified in SQL3 <ref> [Bun91] </ref> is shown below: SELECT HOUSES.NAME, LAKES.NAME FROM HOUSES, LAKES WHERE DISJOINT FROM (HOUSES.BOUNDARY,LAKES.BOUNDARY) AND NORTH OF (HOUSES.BOUNDARY,LAKES.BOUNDARY) OR (NORTH OF (HOUSES.BOUNDARY,LAKES.BOUNDARY) AND EAST OF (HOUSES.BOUNDARY,LAKES.BOUNDARY)). * Case 2: The second class of queries involves configurations having the same directional relationship between B and A but different topological relationships, where the
Reference: [CF80] <author> N. S. Chang and K. S. Fu. </author> <title> Query by pictorial example. </title> <journal> IEEE Trans. on Software Engg, </journal> <volume> 6(6) </volume> <pages> 519-524, </pages> <month> Nov </month> <year> 1980. </year>
Reference-contexts: The disadvantage of these SQL type languages is that users often think of spatial relationships in terms of images depicting the actual spatial positions, and the SQL type languages require the translation of this into a non-spatial language. GEO-QUEL [BS77], Query by Pictorial Example <ref> [CF80] </ref> and Pictorial SQL [ea88] are examples of query languages where an image depicting the relationship is drawn as a query to the system. Cigales [WCL + 94] 4 and Spatial Query by Sketch [Ege] are examples of visual spatial query languages.
Reference: [CW96] <author> E. P. Chan and J. T. Wong. </author> <title> Querying and visualization of geometric data. </title> <booktitle> Proc. of ACM GIS Workshop, </booktitle> <pages> pages 129-138, </pages> <month> Nov </month> <year> 1996. </year>
Reference-contexts: These systems employ dynamic queries and interactive information visualization techniques for information retrieval. These systems however do not deal with special purpose data types such as spatial and temporal data. Most existing spatial query languages are textual (SQL-based), requiring users to refer to geometric data using textual queries [Ege94] <ref> [CW96] </ref>. The Oracle8 Spatial Cartridge [Ora], SpatialWare [Map] and Spatial SQL [Ege94] use a text-based query language for spatial data.
Reference: [DKR97] <author> M. Derthick, J. Kolojejchick, and S.F. Roth. </author> <title> An interactive visualization environment for data exploration. </title> <booktitle> Proceedings of Knowledge Discovery in Databases, </booktitle> <pages> pages 2-9, </pages> <month> Aug </month> <year> 1997. </year>
Reference-contexts: Visual query environments based on the VIS paradigms [Shn92] feature a dynamic querying mechanism and a graphical display of results are typically restricted to simple numeric domains [ACSW96] <ref> [DKR97] </ref>. <p> Tioga-2 [ACSW96], Spotfire [Ahl96], VisDB [KK94], DEVise [RLea97], Visage <ref> [DKR97] </ref>, XMDV [War94] are all examples of visual exploration systems. These systems employ dynamic queries and interactive information visualization techniques for information retrieval. These systems however do not deal with special purpose data types such as spatial and temporal data.
Reference: [ea88] <editor> N.Roussopoulos et all. </editor> <title> An efficient pictorial database system for PSQL. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 14 </volume> <pages> 639-651, </pages> <month> May </month> <year> 1988. </year>
Reference-contexts: The disadvantage of these SQL type languages is that users often think of spatial relationships in terms of images depicting the actual spatial positions, and the SQL type languages require the translation of this into a non-spatial language. GEO-QUEL [BS77], Query by Pictorial Example [CF80] and Pictorial SQL <ref> [ea88] </ref> are examples of query languages where an image depicting the relationship is drawn as a query to the system. Cigales [WCL + 94] 4 and Spatial Query by Sketch [Ege] are examples of visual spatial query languages.
Reference: [EF95] <author> M. Egenhofer and R. Franzosa. </author> <title> On the equivalence of topological relations. </title> <journal> International Journal of Geographic Information Systems, </journal> <volume> 9 </volume> <pages> 133-152, </pages> <year> 1995. </year> <month> 23 </month>
Reference-contexts: size from the list as shown in Figure 3. in Subset A in Subset B Palette 3.3 Semantics of Relative Spatial Queries in SEE Given two spatial objects A and B, our SVIQUEL interface distinguishes between eight possible primitive topological relationships (disjoint, meet, overlap, covers, coveredBy, contains, inside and equal) <ref> [EF95] </ref> [EM95] and eight possible directional relationships (north, south, east, west, north east, north west, south east and south west) between the two objects [JTS96] [TP95] and two special relationships of same-longitude and same-latitude.
Reference: [Ege] <author> M. Egenhofer. </author> <title> Spatial query by sketch. </title> <institution> Ongoing project at the University of Maine, </institution> <address> "http://www.ncgia.maine.edu/ abl/SQBS/sqbswel.htm". </address>
Reference-contexts: GEO-QUEL [BS77], Query by Pictorial Example [CF80] and Pictorial SQL [ea88] are examples of query languages where an image depicting the relationship is drawn as a query to the system. Cigales [WCL + 94] 4 and Spatial Query by Sketch <ref> [Ege] </ref> are examples of visual spatial query languages. Based on the Query by Example paradigm, they ask the user to specify the query with an actual drawing.
Reference: [Ege94] <author> M. Egenhofer. </author> <title> Spatial SQL: A query and presentation language. </title> <journal> IEEE Trans. on Knowledge and Data Eng., </journal> <volume> 6 </volume> <pages> 86-95, </pages> <month> Feb </month> <year> 1994. </year>
Reference-contexts: These systems employ dynamic queries and interactive information visualization techniques for information retrieval. These systems however do not deal with special purpose data types such as spatial and temporal data. Most existing spatial query languages are textual (SQL-based), requiring users to refer to geometric data using textual queries <ref> [Ege94] </ref> [CW96]. The Oracle8 Spatial Cartridge [Ora], SpatialWare [Map] and Spatial SQL [Ege94] use a text-based query language for spatial data. <p> These systems however do not deal with special purpose data types such as spatial and temporal data. Most existing spatial query languages are textual (SQL-based), requiring users to refer to geometric data using textual queries <ref> [Ege94] </ref> [CW96]. The Oracle8 Spatial Cartridge [Ora], SpatialWare [Map] and Spatial SQL [Ege94] use a text-based query language for spatial data. The disadvantage of these SQL type languages is that users often think of spatial relationships in terms of images depicting the actual spatial positions, and the SQL type languages require the translation of this into a non-spatial language. <p> While on the one hand SVIQUEL provides features not supported by textual languages, e.g., Spatial SQL by Egenhofer <ref> [Ege94] </ref>, on the other hand, it has more limitations than such a general textual language in terms of its expressive power.
Reference: [EM95] <author> M. Egenhofer and D. Mark. </author> <title> Modeling conceptual neighborhoods of topological line region relations. </title> <journal> International Journal of Geographic Information Systems, </journal> <volume> 9 </volume> <pages> 555-565, </pages> <year> 1995. </year>
Reference-contexts: from the list as shown in Figure 3. in Subset A in Subset B Palette 3.3 Semantics of Relative Spatial Queries in SEE Given two spatial objects A and B, our SVIQUEL interface distinguishes between eight possible primitive topological relationships (disjoint, meet, overlap, covers, coveredBy, contains, inside and equal) [EF95] <ref> [EM95] </ref> and eight possible directional relationships (north, south, east, west, north east, north west, south east and south west) between the two objects [JTS96] [TP95] and two special relationships of same-longitude and same-latitude.
Reference: [ESR] <institution> ESRI ("http://www.esri.com"). ArcView. </institution>
Reference-contexts: In this section, we present the spatial visualization of the results, referred to as SVIZ, which satisfies the above criteria defined for a dynamic query system. Most of the existing GIS and spatial database systems, such as MapInfo [Map] and ArcView <ref> [ESR] </ref>, use a map-like visualization for the underlying spatial data. Such a display of results that distributes spatial relations over the 2D space could be extremely densely populated.
Reference: [Her94] <author> D. Hernandez. </author> <title> Qualitative representation of spatial knowledge. </title> <booktitle> In Lecture Notes in Artificial Intelligence, </booktitle> <volume> volume 804. </volume> <publisher> Springer Verlag, </publisher> <month> Feb </month> <year> 1994. </year>
Reference-contexts: In order to use S-sliders to exploit the spatial continuity inherent in spatial data, we have developed a neighborhood model <ref> [Her94] </ref> [BE96] explained in [KR97] that incorporates both direction and topology and thereby defines neighbors between relative spatial positions. <p> The reason we have 45 spatial primitives (SPRIMs) and not 64 is that for certain topologies like inside, contains or equals having a directional component is not meaningful <ref> [Her94] </ref>. The SPRIMs as given in Figure 4 can be depicted in terms of the differences between the left and right ends in the X dimension and the top and bottom ends in the Y dimension of the two objects A and B.
Reference: [HR95] <author> S. Hibino and E. A. Rundensteiner. </author> <title> A visual query language for identifying temporal trends in video data. </title> <booktitle> In International Workshop on Multimedia Database Management Systems. </booktitle> <publisher> IEEE Computer Press, </publisher> <year> 1995. </year>
Reference-contexts: However in cases, where the number of spatial object types is large, our solution may have to be extended to select descriptive objects to display or build a hierarchy of objects for grouping and examining them at different levels of abstraction <ref> [HR95] </ref> [HR96]. 4.3 Visualization of the Selected Object Subsets The subset selection highlighters are designed to support users in comparing summaries of occurences of the underlying spatial objects within the context of the main SEE window. <p> The objects that belong to subset A and subset B are represented by cyan circles and yellow squares, respectively. 5 Implementation of the SEE System 5.1 System Design system <ref> [HR95] </ref> [HR96], a VIS system for video data.
Reference: [HR96] <author> S. Hibino and E.A. Rundensteiner. MMVIS: </author> <title> Design and implementation of a multimedia VIS environment. </title> <booktitle> ACM Multimedia, </booktitle> <pages> pages 75-86, </pages> <year> 1996. </year>
Reference-contexts: Previous work in our research group focussed on designing a direct manipulation environment for one-dimensional temporal data, called MMVIS 1 (Multimedia Visual Information Seeking System) [HR97] <ref> [HR96] </ref>. MMVIS allowed a user to visually specify temporal queries over video data, giving an instantaneous visualization of the results of the query. In this paper, we extend this concept to the two-dimensional domain of spatial data. <p> The query filters (S-sliders) of SVIQUEL, based on the dynamic query filters used in TVQL <ref> [HR96] </ref>, are tailored for spatial analysis allowing users to pose spatial queries as well as to browse the data in a spatially continuous manner. <p> This is tightly coupled to both the bar and map visualizations which get updated and represent the results of the current query. The entire system is implemented using JDK1.1.4 [Kau98] as an extension of the MMVIS system <ref> [HR96] </ref>. The main packages used are java.awt, java.lang, java.io and java.util. There are 22 classes in all and about 9000 lines of code. This system has been implemented as an applet and can be run using any Java-enabled browser. We plan to make it available as a freeware shortly. <p> Borrowing this idea of qualitative query disambiguation of MMVIS <ref> [HR96] </ref>, we now propose to add an Active Picture for Querying (APIQ) as part of the SVIQUEL palette to give visual qualitative representations of 10 the query to the user. APIQ is designed as a visual aid for confirming the specified query to the users in a visually intuitive manner. <p> However in cases, where the number of spatial object types is large, our solution may have to be extended to select descriptive objects to display or build a hierarchy of objects for grouping and examining them at different levels of abstraction [HR95] <ref> [HR96] </ref>. 4.3 Visualization of the Selected Object Subsets The subset selection highlighters are designed to support users in comparing summaries of occurences of the underlying spatial objects within the context of the main SEE window. This is accomplished by having overlays to visually indicate the subsets that are being selected/de-selected. <p> The objects that belong to subset A and subset B are represented by cyan circles and yellow squares, respectively. 5 Implementation of the SEE System 5.1 System Design system [HR95] <ref> [HR96] </ref>, a VIS system for video data.
Reference: [HR97] <author> S. Hibino and E. A. Rundensteiner. </author> <title> User study evaluation of direct-manipulation temporal interfaces. </title> <booktitle> ACM Multimedia, </booktitle> <pages> pages 99-109, </pages> <month> Nov </month> <year> 1997. </year>
Reference-contexts: Previous work in our research group focussed on designing a direct manipulation environment for one-dimensional temporal data, called MMVIS 1 (Multimedia Visual Information Seeking System) <ref> [HR97] </ref> [HR96]. MMVIS allowed a user to visually specify temporal queries over video data, giving an instantaneous visualization of the results of the query. In this paper, we extend this concept to the two-dimensional domain of spatial data. <p> This is accomplished by using annotations to abstract spatio-temporal information from the original media and then analyzing the annotation collection. Formal user interface studies of MMVIS showed that users could more accurately specify and more quickly adjust queries using TVQL than using a forms-based approach <ref> [HR97] </ref> [HR98a], indicating the promise of our overall approach. <p> specify the same set of queries. 3.5 APIQ: An Active Picture for Querying 3.5.1 Qualitative Query Representation using APIQ Formal user studies of temporal queries in MMVIS have shown that a graphical depiction of a slider-based query for query disambiguation results in better performance and easier comprehension for the users <ref> [HR97] </ref>. Borrowing this idea of qualitative query disambiguation of MMVIS [HR96], we now propose to add an Active Picture for Querying (APIQ) as part of the SVIQUEL palette to give visual qualitative representations of 10 the query to the user. <p> The actual conditions that must hold true for each primitive to be displayed is discussed in further detail in [Kau98]. Based on previous user studies <ref> [HR97] </ref>, we anticipate that this should increase the speed and the certainty with which the users modify and construct complex queries. Another advantage of APIQ is that it increases the utility of the SVIQUEL interface for spatial browsing of the data with no particular query in mind.
Reference: [HR98a] <author> S. Hibino and E. A. Rundensteiner. </author> <title> Comparing MMVIS to a timeline for temporal trend analysis of video data. Advanced Visual Interfaces, </title> <month> May </month> <year> 1998. </year>
Reference-contexts: This is accomplished by using annotations to abstract spatio-temporal information from the original media and then analyzing the annotation collection. Formal user interface studies of MMVIS showed that users could more accurately specify and more quickly adjust queries using TVQL than using a forms-based approach [HR97] <ref> [HR98a] </ref>, indicating the promise of our overall approach.
Reference: [HR98b] <author> S. Hibino and E. A. Rundensteiner. </author> <title> Processing incremental multidim. range queries in a direct manipulation paradigms. </title> <journal> IEEE Int. Conf. on Data Eng., </journal> <pages> pages 458-465, </pages> <month> Feb </month> <year> 1998. </year>
Reference-contexts: In a real estate application, as we shall consider in the rest of the paper, we also visualize the non-spatial attributes of a house such as the cost and size to indicate the values that it could take on. We also discuss the k-Bucket index structure <ref> [HR98b] </ref> that we use to process the multi-dimensional range queries of SVIQUEL. This index structure allows for incremental processing of queries for every user query viz every S-slider movement and every APIQ manipulation. <p> is adjusted, rather than waiting until all valid ranges have been set, * an item in the data set is in the solution set iff each value of each attribute of the data item is in the selected range of the corresponding DQ filter We use the k-Bucket index structure <ref> [HR98b] </ref> to process these multidimensional range queries of SVIQUEL. This indes structure is ideally suited to the incremental processing of our SVIQUEL queries.
Reference: [JTS96] <author> Z. John, M. Tamer, and D. Szarfon. </author> <title> Spatial reasoning rules in multimedia management systems. </title> <type> Multimedia Technical Report TR96-05, </type> <institution> Department of Computer Science, University of Alberta, </institution> <month> Mar </month> <year> 1996. </year>
Reference-contexts: Given two spatial objects A and B, our SVIQUEL interface distinguishes between eight possible primitive topological relationships (disjoint, meet, overlap, covers, coveredBy, contains, inside and equal) [EF95] [EM95] and eight possible directional relationships (north, south, east, west, north east, north west, south east and south west) between the two objects <ref> [JTS96] </ref> [TP95] and two special relationships of same-longitude and same-latitude. Since it is possible for two regions to have both kinds of relationships, each combination of a topology and a direction forms a primitive spatial relation (SPRIM) in our spatial model.
Reference: [Kau98] <author> S. Kaushik. </author> <title> Direct manipulation spatial exploration using SVIQUEL. </title> <type> Master's thesis, </type> <institution> Worcester Polytechnic Institute, </institution> <year> 1998. </year>
Reference-contexts: In other words, for every S-slider or APIQ manipulation, the query results are computed using the previous query results. This is tightly coupled to both the bar and map visualizations which get updated and represent the results of the current query. The entire system is implemented using JDK1.1.4 <ref> [Kau98] </ref> as an extension of the MMVIS system [HR96]. The main packages used are java.awt, java.lang, java.io and java.util. There are 22 classes in all and about 9000 lines of code. This system has been implemented as an applet and can be run using any Java-enabled browser. <p> The actual conditions that must hold true for each primitive to be displayed is discussed in further detail in <ref> [Kau98] </ref>. Based on previous user studies [HR97], we anticipate that this should increase the speed and the certainty with which the users modify and construct complex queries. <p> The tight coupling between the S-sliders and APIQ achieved by our mapping functions between the two gives the new setting of the S-sliders as a result of the direct manipulation of APIQ <ref> [Kau98] </ref>. 4 SVIZ: Spatial Visualization of Results 4.1 Goals of SVIZ When designing a database query system using a data visualization method, it is important to understand the effects a given visualization method has on the user's perception and understanding of the results from different types of queries [Wis94]. <p> This indes structure is ideally suited to the incremental processing of our SVIQUEL queries. This is discussed in further detail in <ref> [Kau98] </ref>. 6 Evaluation of SVIQUEL We evaluate the expressive power of SVIQUEL to specify relative spatial position queries and also compare it to standard text-based query languages, in particular, the spatial operators of SQL-3 [Bun91]. 6.1 Queries Expressed by SVIQUEL Unlike SQL, we did not strive to have a complete language,
Reference: [KK94] <author> D. Kheim and H. Kreigel. VisDB: </author> <title> Database exploration using multidimensional visualization. </title> <journal> Computer Graphics and Applications, </journal> <year> 1994. </year>
Reference-contexts: On the other hand, this direct manipulation environment allows users to explore the database even without knowing what exactly they are looking for. Tioga-2 [ACSW96], Spotfire [Ahl96], VisDB <ref> [KK94] </ref> are also other examples of such visual exploration systems. These systems employ dynamic queries and interactive information visualization techniques for information retrieval. These systems however do not deal with special-purpose data types such as spatial and temporal data. <p> Tioga-2 [ACSW96], Spotfire [Ahl96], VisDB <ref> [KK94] </ref>, DEVise [RLea97], Visage [DKR97], XMDV [War94] are all examples of visual exploration systems. These systems employ dynamic queries and interactive information visualization techniques for information retrieval. These systems however do not deal with special purpose data types such as spatial and temporal data.
Reference: [KR97] <author> S. Kaushik and E. A. Rundensteiner. SVIQUEL: </author> <title> A spatial visual query and exploration language. </title> <type> Technical Report CS-TR-97-10, </type> <institution> Comp. Science Dept, Worcester Polytechnic Institute, </institution> <year> 1997. </year>
Reference-contexts: In order to use S-sliders to exploit the spatial continuity inherent in spatial data, we have developed a neighborhood model [Her94] [BE96] explained in <ref> [KR97] </ref> that incorporates both direction and topology and thereby defines neighbors between relative spatial positions. Our SVIQUEL interface allows the user to specify any simple spatial relationship as well as any legal combination of primitives (a neighborhood query) as part of the spatial query by simple mouse movements. <p> The S-sliders are augmented with an active-picture-for-querying (APIQ) which allows the user to qualitatively specify the relative position spatial query and to give a visual feedback of the quantitative query being specified by the S-sliders. We have devised mappings <ref> [KR97] </ref> between the quantitative S-sliders and qualitative APIQ to maintain consistency and synchronization between the two representations, allowing users to work in either mode and giving them the flexibility to switch to the other mode. <p> In order to prevent the specification of illegal queries, constraints and dependencies are introduced between the sliders so that only legal combinations of values can be specified using our interface <ref> [KR97] </ref>. [KR97] discusses these constraints and dependencies in detail. <p> In order to prevent the specification of illegal queries, constraints and dependencies are introduced between the sliders so that only legal combinations of values can be specified using our interface <ref> [KR97] </ref>. [KR97] discusses these constraints and dependencies in detail. <p> SVIQUEL enables us to specify a combination of neighboring primitives as part of the query, consistent with the concept of neighborhood when both direction and topology are combined as discussed in <ref> [KR97] </ref>. The additional constraints imposed on the query are dealt with in Section 6.1. The top-left and bottom-right portions of Figure 7 shows the setting of the S-sliders for the neighborhood query "Give me all cases where B is disjoint and to the north or north-east of A". <p> The resulting APIQ and S-sliders, consistent with the integrated neighborhood model described in <ref> [KR97] </ref>, are shown in Figure 10.
Reference: [Map] <author> MapInfo Corporation. </author> <note> SpatialWare - http://www.mapinfo.com/spatialware/spatial20.html. 24 </note>
Reference-contexts: The primary consideration for spatial data is that it is characterized by geometry and map display. Previous work that deal with spatial data such as, the Oracle-8 spatial cartridge [Ora] and SpatialWare from Mapinfo <ref> [Map] </ref>, are typically restricted to simple more text-based (SQL) query languages for spatial data. <p> These systems however do not deal with special purpose data types such as spatial and temporal data. Most existing spatial query languages are textual (SQL-based), requiring users to refer to geometric data using textual queries [Ege94] [CW96]. The Oracle8 Spatial Cartridge [Ora], SpatialWare <ref> [Map] </ref> and Spatial SQL [Ege94] use a text-based query language for spatial data. <p> In this section, we present the spatial visualization of the results, referred to as SVIZ, which satisfies the above criteria defined for a dynamic query system. Most of the existing GIS and spatial database systems, such as MapInfo <ref> [Map] </ref> and ArcView [ESR], use a map-like visualization for the underlying spatial data. Such a display of results that distributes spatial relations over the 2D space could be extremely densely populated. <p> We discuss below some of the advantages and disadvantages of SVIQUEL in comparison to text-based spatial languages such as Oracle8 SQL [Ora] and SpatialWare SQL <ref> [Map] </ref>. 6.2.1 Advantages of SVIQUEL We discuss the advantages of these unique SVIQUEL features over any text-based query language below: Direct Manipulation Query Interface. SVIQUEL provides a direct manipulation interface where the user can specify queries via simple mouse manipulations.
Reference: [Ora] <institution> Oracle Corporation ("http://www.oracle.com"). Oracle 8.0. </institution>
Reference-contexts: These systems however do not deal with special-purpose data types such as spatial and temporal data. The primary consideration for spatial data is that it is characterized by geometry and map display. Previous work that deal with spatial data such as, the Oracle-8 spatial cartridge <ref> [Ora] </ref> and SpatialWare from Mapinfo [Map], are typically restricted to simple more text-based (SQL) query languages for spatial data. <p> These systems however do not deal with special purpose data types such as spatial and temporal data. Most existing spatial query languages are textual (SQL-based), requiring users to refer to geometric data using textual queries [Ege94] [CW96]. The Oracle8 Spatial Cartridge <ref> [Ora] </ref>, SpatialWare [Map] and Spatial SQL [Ege94] use a text-based query language for spatial data. <p> We discuss below some of the advantages and disadvantages of SVIQUEL in comparison to text-based spatial languages such as Oracle8 SQL <ref> [Ora] </ref> and SpatialWare SQL [Map]. 6.2.1 Advantages of SVIQUEL We discuss the advantages of these unique SVIQUEL features over any text-based query language below: Direct Manipulation Query Interface. SVIQUEL provides a direct manipulation interface where the user can specify queries via simple mouse manipulations.
Reference: [PTSE95] <author> D. Papadias, Y. Theodoridis, T. Sellis, and M. Egenhofer. </author> <title> Topological relations in the world of minimum bounding rectangles: A study with R-trees. </title> <booktitle> Proceedings of SIGMOD, </booktitle> <volume> 24, </volume> <month> June </month> <year> 1995. </year>
Reference-contexts: Our SVIQUEL interface constrains the placement of one object B called the primary object with respect to the second object A that serves as the reference object <ref> [PTSE95] </ref>. <p> Since it is possible for two regions to have both kinds of relationships, each combination of a topology and a direction forms a primitive spatial relation (SPRIM) in our spatial model. Egenhofer et al <ref> [PTSE95] </ref> extended Allen's 13 relations in 1D space to the 2D domain using the projection on the X and Y axis. In 2D, the number of pairwise disjoint relations is 169. <p> In 2D, the number of pairwise disjoint relations is 169. Of these 169 configurations, 48 of them are of the topology disjoint, 40 of them of the topology meet, and so on <ref> [PTSE95] </ref>. We now propose to incorporate direction along with topology. Given this, it is possible to map each of these 169 con 6 figurations to one or more combinations of direction and topology.
Reference: [RLea97] <author> R. Ramkrishnan, M. Livny, and K. </author> <title> Beyer et all. DEVise: Integrated querying and visual exploration of large datasets. </title> <booktitle> Proceedings of SIGMOD, </booktitle> <pages> pages 517-521, </pages> <month> May </month> <year> 1997. </year>
Reference-contexts: Tioga-2 [ACSW96], Spotfire [Ahl96], VisDB [KK94], DEVise <ref> [RLea97] </ref>, Visage [DKR97], XMDV [War94] are all examples of visual exploration systems. These systems employ dynamic queries and interactive information visualization techniques for information retrieval. These systems however do not deal with special purpose data types such as spatial and temporal data.
Reference: [Shn92] <author> B. Shneiderman. </author> <title> Designing the User Interface: Strategies for Effective Human Computer Interaction : Second Edition. </title> <publisher> Addison Wesley Publ. Co, </publisher> <address> Reading, MA, </address> <year> 1992. </year>
Reference-contexts: Visual Information Seeking (VIS) addresses this problem by recognizing the enormous capacity of human visual information processing [AS94]. By presenting information visually and allowing dynamic user interaction through direct manipulation paradigms, it is possible to traverse larger information spaces in a shorter time <ref> [Shn92] </ref>. The key concepts are to support browsing via direct-manipulation interfaces, visual query composition, graphical display of the results, continuous reformulation of goals and tight coupling to preserve display invariants and support progressive refinement [Shn92]. <p> through direct manipulation paradigms, it is possible to traverse larger information spaces in a shorter time <ref> [Shn92] </ref>. The key concepts are to support browsing via direct-manipulation interfaces, visual query composition, graphical display of the results, continuous reformulation of goals and tight coupling to preserve display invariants and support progressive refinement [Shn92]. <p> Visual query environments based on the VIS paradigms <ref> [Shn92] </ref> feature a dynamic querying mechanism and a graphical display of results are typically restricted to simple numeric domains [ACSW96] [DKR97].
Reference: [TP95] <author> Y. Theodoridis and D. Papadias. </author> <title> Range queries involving spatial relations: A performance analysis. </title> <booktitle> In Proceedings of the 2nd International Conference on Spatial Information Theory, </booktitle> <address> COSIT, Semmering, Austria, 1995. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: two spatial objects A and B, our SVIQUEL interface distinguishes between eight possible primitive topological relationships (disjoint, meet, overlap, covers, coveredBy, contains, inside and equal) [EF95] [EM95] and eight possible directional relationships (north, south, east, west, north east, north west, south east and south west) between the two objects [JTS96] <ref> [TP95] </ref> and two special relationships of same-longitude and same-latitude. Since it is possible for two regions to have both kinds of relationships, each combination of a topology and a direction forms a primitive spatial relation (SPRIM) in our spatial model.
Reference: [War94] <author> M.O. Ward. XmdvTool: </author> <title> Integrating multiple methods for visualizing multivariate data. </title> <booktitle> Proc. of Visualization, </booktitle> <year> 1994. </year>
Reference-contexts: Tioga-2 [ACSW96], Spotfire [Ahl96], VisDB [KK94], DEVise [RLea97], Visage [DKR97], XMDV <ref> [War94] </ref> are all examples of visual exploration systems. These systems employ dynamic queries and interactive information visualization techniques for information retrieval. These systems however do not deal with special purpose data types such as spatial and temporal data.
Reference: [WCL + 94] <author> A. B. Wansek, D. Calcinelli, B. Languou, C. Lecocq, and M. Mainguenaud. CIGALES: </author> <title> A visual query language for GIS: The user interface. </title> <journal> International Journal of Visual Languages and Computing, </journal> <volume> 5 </volume> <pages> 113-132, </pages> <year> 1994. </year>
Reference-contexts: GEO-QUEL [BS77], Query by Pictorial Example [CF80] and Pictorial SQL [ea88] are examples of query languages where an image depicting the relationship is drawn as a query to the system. Cigales <ref> [WCL + 94] </ref> 4 and Spatial Query by Sketch [Ege] are examples of visual spatial query languages. Based on the Query by Example paradigm, they ask the user to specify the query with an actual drawing.
Reference: [Wis94] <author> E. Wistrand. </author> <title> Visualization methods for dynamic queries databases. </title> <type> Master's thesis, </type> <institution> Dept. of Computing Science, Gteborg University and Chalmers University of technology, </institution> <year> 1994. </year>
Reference-contexts: of APIQ [Kau98]. 4 SVIZ: Spatial Visualization of Results 4.1 Goals of SVIZ When designing a database query system using a data visualization method, it is important to understand the effects a given visualization method has on the user's perception and understanding of the results from different types of queries <ref> [Wis94] </ref>. Important design criteria that should be considered [Wis94] include : * Compact data display, * Smooth and fast redrawing, * Easily distinguishable separate data points , * Easily distinguishable marked subsets, and * Subsets connected in the data space also connected in the visualization space. <p> Results 4.1 Goals of SVIZ When designing a database query system using a data visualization method, it is important to understand the effects a given visualization method has on the user's perception and understanding of the results from different types of queries <ref> [Wis94] </ref>. Important design criteria that should be considered [Wis94] include : * Compact data display, * Smooth and fast redrawing, * Easily distinguishable separate data points , * Easily distinguishable marked subsets, and * Subsets connected in the data space also connected in the visualization space.
Reference: [WS92] <author> C. Williamson and B. Shneiderman. </author> <title> The Dynamic HomeFinder: Evaluating dynamic queries in a real-estate information exploration system. </title> <type> Technical Report CS-TR2819, </type> <institution> Dept. of Computer Science,Univ. of Maryland, </institution> <month> Jan </month> <year> 1992. </year> <month> 25 </month>
Reference-contexts: One example of such VIS technology is the Dynamic Homefinder, a Real Estate Information Exploration System <ref> [WS92] </ref>, which allows users to search for a house that meets their criteria by manipulating sliders for different input parameters (such as the number of rooms and price) and to get a visual display of the results in the form of a map showing all the houses that satisfy the query. <p> Visual query environments based on the VIS paradigms [Shn92] feature a dynamic querying mechanism and a graphical display of results are typically restricted to simple numeric domains [ACSW96] [DKR97]. The Dynamic Homefinder, a Real Estate Information Exploration System based on VIS principles <ref> [WS92] </ref>, allows users to search for a house that meets their criteria by manipulating sliders for different simple numeric input parameters (such as number of rooms and price) and to get a visual display of the results.
References-found: 35

