URL: ftp://ftp.cs.columbia.edu/reports/reports-1995/cucs-016-95.ps.gz
Refering-URL: http://www.cs.columbia.edu/~library/1995.html
Root-URL: http://www.cs.columbia.edu
Title: The Complexity of the Poisson Problem for Spaces of Bounded Mixed Derivatives  
Author: Arthur G. Werschulz 
Date: 00, 1996  
Note: Lectures in Applied Mathematics Volume  0:839262(c(d) 2) 5:07911  
Pubnum: Technical Report CUCS-016-95  
Abstract: We are interested in the complexity of the Poisson problem with homogeneous Dirichlet boundary conditions on the d-dimensional unit cube . Error is measured in the energy norm, and only standard information (consisting of function evaluations) is available. In previous work on this problem, the standard assumption has been that the class F of problem elements has been the unit ball of a Sobolev space of fixed smoothness r, in which case the "-complexity is proportional to " d=r . Given this exponential dependence on d, the problem is intractable for such classes F . In this paper, we seek to overcome this intractability by allowing F to be the unit ball of a space -H () of bounded mixed derivatives, with a fixed multi-index with positive entries. We find that the complexity is proportional to c(d)(1=") 1= min [ln(1=")] b , and we give bounds on b = b ;d . Hence, the problem is tractable in 1=", with exponent at most 1= min . The upper bound on the complexity (which is close to the lower bound) is attained by a modified finite element method (MFEM) using discrete blending spline spaces; we obtain an explicit bound (with no hidden constants) on the cost of using this MFEM to compute "-approximations. Finally, we show that for any positive multi-index , the Poisson problem is strongly tractable, and that the MFEM using discrete blended piecewise polynomial splines of degree is a strongly polynomial time algorithm. In particular, for the case = 1, the MFEM using discrete blended piecewise linear splines produces an "-approximation with cost at most 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Baszenski, G. and Delvos, F. J., </author> <title> Remainders for boolean interpolation, Progress in Approximation Theory (P. </title> <editor> Nevai and A. Pinkus, eds.), </editor> <publisher> Academic Press, </publisher> <address> Boston, </address> <year> 1991, </year> <pages> pp. 31-41. </pages> <month> 2. </month> , <title> Multivariate boolean trapezoidal rules, Approximation, Probability, and Related Fields (G. </title> <editor> Anastassiou and S. T. Rachev, eds.), </editor> <publisher> Plenum Press, </publisher> <address> New York, </address> <year> 1994, </year> <pages> pp. 109-117. </pages>
Reference-contexts: The main idea here is to use a discrete blending spline approximation (see <ref> [1] </ref>, [2], [3]). As [5] and [6] point out, this is the same as Smolyak's algorithm (see [7], [8], [9], [10], [12]). For future reference, we recall the approximation properties of one-dimensional polynomial spline spaces. <p> But the nth minimal error for this approximation problem is proportional to (lg n) (k fl 1)( min +fi (n)) n min , where k fl is the number of minimal components in and fi (n) 2 <ref> [0; 1] </ref>. This implies one of two possibilities: either discrete blending spline approximation is not an optimal algorithm (even for the L 2 -approximation problem) or the estimate given in Lemma 3.3 is pessimistic. fl Hence we have found reasonably tight bounds on the nth minimal error.
Reference: 3. <author> Delvos, F. J. and Schempp, W., </author> <title> Boolean Methods in Interpolation and Approximation, </title> <publisher> Pitman, </publisher> <address> Harlow, </address> <year> 1989. </year>
Reference-contexts: This means that we know the problem complexity to within a polylogarithmic factor. We also investigate a modified finite element method (MFEM) using discrete blending spline spaces of degree i in the ith coordinate direction ([1], [2], <ref> [3] </ref>). We determine that this MFEM can compute an "-approximation with cost at most fi 1 (c (d) + 2) fi 2 + fi 3 d 1 min 1 1= min Moreover, we have explicit expressions for the constants fi 1 , fi 2 , and fi 3 . <p> The main idea here is to use a discrete blending spline approximation (see [1], [2], <ref> [3] </ref>). As [5] and [6] point out, this is the same as Smolyak's algorithm (see [7], [8], [9], [10], [12]). For future reference, we recall the approximation properties of one-dimensional polynomial spline spaces.
Reference: 4. <author> Garey, M. R. and Johnson, D. S., </author> <title> Computers and intractability, </title> <publisher> Freeman, </publisher> <address> San Francisco, </address> <year> 1979. </year>
Reference-contexts: Moreover, finite element methods of fixed degree using refined meshes are nearly optimal. (See [14, Chapter 5] for details.) Note that the complexity increases exponentially in d. This is well-known as the hallmark of intractability (see <ref> [4] </ref>). Moreover, this effect can be seen even for the engineering examples with d = 3. To be specific, let us only consider the case of standard information with r = 1. Then the number of information operations required to compute an "-approximation is proportional to " 3 .
Reference: 5. <author> Novak, E., </author> <title> Optimal error bounds for adaptive and nonadaptive numerical methods, in preparation. </title> <type> 20 ARTHUR G. WERSCHULZ </type>
Reference-contexts: The main idea here is to use a discrete blending spline approximation (see [1], [2], [3]). As <ref> [5] </ref> and [6] point out, this is the same as Smolyak's algorithm (see [7], [8], [9], [10], [12]). For future reference, we recall the approximation properties of one-dimensional polynomial spline spaces.
Reference: 6. <author> Novak, E. and Ritter, K., </author> <title> High dimensional integration based on Smolyak's construction applied to the Clenshaw-Curtis rule, </title> <note> in preparation. </note>
Reference-contexts: The main idea here is to use a discrete blending spline approximation (see [1], [2], [3]). As [5] and <ref> [6] </ref> point out, this is the same as Smolyak's algorithm (see [7], [8], [9], [10], [12]). For future reference, we recall the approximation properties of one-dimensional polynomial spline spaces. Choose positive integers m and r; we assume (without essential loss of generality) that 2 r is a multiple of m. <p> POISSON PROBLEM FOR BOUNDED MIXED DERIVATIVES 9 We can find a more explicit representation of this approximation operator by using the ideas found in <ref> [6] </ref> and in [12, Section 3].
Reference: 7. <author> Smolyak, S. A., </author> <title> Quadrature and interpolation formulas for tensor products of certain classes of functions, </title> <journal> Dokl. Akad. Nauk SSSR 4 (1963), </journal> <pages> 240-243. </pages>
Reference-contexts: The main idea here is to use a discrete blending spline approximation (see [1], [2], [3]). As [5] and [6] point out, this is the same as Smolyak's algorithm (see <ref> [7] </ref>, [8], [9], [10], [12]). For future reference, we recall the approximation properties of one-dimensional polynomial spline spaces. Choose positive integers m and r; we assume (without essential loss of generality) that 2 r is a multiple of m.
Reference: 8. <author> Temlyakov, V. N., </author> <title> Approximate recovery of periodic functions of several variables, </title> <journal> Math. USSR Sbornik 56 (1987), </journal> <pages> 249-261. </pages> <month> 9. </month> , <title> Approximation of functions with bounded mixed derivative, </title> <booktitle> Proc. </booktitle> <institution> Steklov Inst. Math. </institution> <month> 178 </month> <year> (1989), </year> <pages> 1-121. </pages> <month> 10. </month> , <title> On a way of obtaining lower estimates for the errors of quadrature formulas, </title> <journal> Math. USSR Sbornik 71 (1990), </journal> <volume> no. 1, </volume> <pages> 247-257. </pages>
Reference-contexts: In other words, we follow the lead of [12] in using spaces of bounded mixed derivatives, such as those studied by Temlyakov (see <ref> [8] </ref>, [9], [10]). Note that much of our previous work on elliptic problems dealt with the case of arbitrary elliptic operators L. Of course, we did this so that the results would apply to as wide a class of elliptic problems as possible. <p> The main idea here is to use a discrete blending spline approximation (see [1], [2], [3]). As [5] and [6] point out, this is the same as Smolyak's algorithm (see [7], <ref> [8] </ref>, [9], [10], [12]). For future reference, we recall the approximation properties of one-dimensional polynomial spline spaces. Choose positive integers m and r; we assume (without essential loss of generality) that 2 r is a multiple of m.
Reference: 11. <author> Traub, J. F., Wasilkowski, G. W., and Wozniakowski, H., </author> <title> Information-Based Complexity, </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1988. </year>
Reference-contexts: solution to u = f in ; Note that we have the representation formula Sf = 2 ff2P d ff 2 d 1 X hf; z ff i L 2 () 1 + + ff 2 z ff : Next, we recall the usual concepts of information-based complexity, see, e.g., <ref> [11] </ref> for a fuller development. <p> Since the solution operator is linear and F is a convex balanced set, there is no loss of generality in doing this; see <ref> [11, Chapter 4.5] </ref> for further discussion. Our model of computation is the standard one given in [11]. The evaluation of f (x) for any x 2 and f 2 F has cost c (d), and the cost of basic combinatory operations is 1. Typically, c (d) 1. <p> Since the solution operator is linear and F is a convex balanced set, there is no loss of generality in doing this; see [11, Chapter 4.5] for further discussion. Our model of computation is the standard one given in <ref> [11] </ref>. The evaluation of f (x) for any x 2 and f 2 F has cost c (d), and the cost of basic combinatory operations is 1. Typically, c (d) 1. In this paper, we consider the worst case setting. <p> Now extend h to the whole region by taking h = 0 outside ffi . Then khk -H () = 1. Choose a nonnegative function g 2 H 1 0 () such that g 1 in ffi . Using <ref> [11, Theorem 5.53] </ref> and (2.1), we find that r (N ) kShk H 1 0 () hh; gi L 2 () kgk H 1 0 () ffi kgk H 1 0 () n min Since N is arbitrary standard information of cardinality n, the result follows im mediately. <p> It is easy to see that for any f 2 F , there exists a unique u q;d 2 S q;d; satisfying (3.2) and that u q;d depends on f only through the information N q;d f; see <ref> [11, p. 161] </ref> for further discussion. Hence we may write u q;d = q;d (N q;d f ); where q;d is the modified finite element method (MFEM) based on S q;d; .
Reference: 12. <author> Wasilkowski, G. W. and Wozniakowski, H., </author> <title> Explicit cost bounds of algorithms for multivariate tensor product problems, </title> <editor> J. </editor> <booktitle> Complexity 11 (1995), </booktitle> <volume> no. 1, </volume> <pages> 1-56. </pages>
Reference-contexts: We allowed F to be a class of analytic functions in [16], where we find that the complexity is proportional to (c (d) + 2)(log 1=") d . (Moreover, finite element methods with fixed mesh using increasing degree of approximation are nearly optimal.) In the terminology of <ref> [12] </ref>, the problem is tractable in 1=", with exponent 0. However, no d-tractability or strong tractability results are known. Unfortunately, the results for piecewise analytic functions are negative, unless we know the locations of the breaks; see [15] for the details. <p> Rather than assume that all Sobolev derivatives of a given order are bounded, we assume that f has a given number i of derivatives in the ith coordinate direction for each i 2 f1; : : :; dg. In other words, we follow the lead of <ref> [12] </ref> in using spaces of bounded mixed derivatives, such as those studied by Temlyakov (see [8], [9], [10]). Note that much of our previous work on elliptic problems dealt with the case of arbitrary elliptic operators L. <p> We now outline the contents of this paper, section by section, describing the main results. In Section 2, we formally describe our problem. As in <ref> [12] </ref>, the class of problem elements is the unit ball in a tensor product -H () = N d Hi (I) of one-dimensional spaces. However, the problem itself is not a tensor product problem, i.e., the solution operator is not a tensor product of one-dimensional operators. <p> The main idea here is to use a discrete blending spline approximation (see [1], [2], [3]). As [5] and [6] point out, this is the same as Smolyak's algorithm (see [7], [8], [9], [10], <ref> [12] </ref>). For future reference, we recall the approximation properties of one-dimensional polynomial spline spaces. Choose positive integers m and r; we assume (without essential loss of generality) that 2 r is a multiple of m. <p> For 2 P d , let i ;r = U i ;r U i ;r1 for 1 i d: S q;d; = jffjq d O i ;ff k : Note that this is is a mild variation of the approximation operator found in <ref> [12] </ref>; the novelty is that we allow different one-dimensional operators in the different coordinate directions, whereas the same operator was used for each direction in [12]. <p> d: S q;d; = jffjq d O i ;ff k : Note that this is is a mild variation of the approximation operator found in <ref> [12] </ref>; the novelty is that we allow different one-dimensional operators in the different coordinate directions, whereas the same operator was used for each direction in [12]. POISSON PROBLEM FOR BOUNDED MIXED DERIVATIVES 9 We can find a more explicit representation of this approximation operator by using the ideas found in [6] and in [12, Section 3]. <p> POISSON PROBLEM FOR BOUNDED MIXED DERIVATIVES 9 We can find a more explicit representation of this approximation operator by using the ideas found in [6] and in <ref> [12, Section 3] </ref>. <p> Note that since f 2 -H () and 2 P d , the Sobolev embedding theorem guarantees that the information N q;d f is well-defined for any f 2 F . Then Lemma 7 of <ref> [12] </ref> states that (3.1) card N q;d = n (q; d) 2 qd+1 d 1 : For f 2 F , we calculate u q;d 2 S q;d; such that (3.2) hru q;d ; rsi L 2 () = hS q;d; f; si L 2 () 8 s 2 S q;d; <p> Finally, we let e q;d = kD fi (id d S q;d )k L ( -H ()!L 2 ()) : We seek bounds on e q;d . As in <ref> [12, p. 13] </ref>, we have S q;d = ff2Q (q1;d1) i=1 U d ;qjffj : Hence if 2 P d+1 , we find that id d+1 S q+1;d+1 = ff2Q (q;d) i=1 (id 1 U d+1;q+1jffj ) + (id d S q;d ) id 1 : POISSON PROBLEM FOR BOUNDED MIXED <p> 1 fi 1 )ff 1 ++(ffi d fi d )ff d +(ffi d+1 fi d+1 )(q+1jffj)] + 1 d+1 fi d+1 Since card Q (q; d) = d ; the previous inequality implies that e q;d C E d d 2 t (q+1) + 1 d+1 fi d+1 As in <ref> [12, Lemma 2] </ref>, we now find that e q;d C H d1 d 1 2 tq ; as required. fl We can now give an error bound for the MFEM based on the space S q;d; of discrete blending splines: Theorem 3.2. <p> The next task is to find an upper bound on the cost of using the MFEM to compute an "-approximation, said upper bound being reasonably close (i.e., to within a polylogarithmic factor of 1=") to the lower bound given in Theorem 3.1. Our approach follows that of <ref> [12, Section 6] </ref>. Theorem 3.4. Let " &gt; 0 and d 2 P be given. 1. Suppose that " (jj+1) d 1 . The error of the zero algorithm zero 0 (which uses the zero information N zero 0) is at most ". <p> Using (3.1), we see that cost ( q;d ; N q;d ) (c (1) + 2)2 q : We now turn to the proof of part 3, following the approach used in the proof of <ref> [12, Theorem 1] </ref>. Let d 2 and " (jj+1) d 1 . Let x = q=(d 1). <p> From the definition of H , we know that C min . Hence we have " ( min d+1) C 1 H d1 2 min s 2 (d 1) see <ref> [12, p. 29] </ref>. <p> 0 (d) C (1 + 1 ) 1= min 0 B ln 1 + ln " 1 C ( min +1)(d1) : Since q;d is a linear algorithm using information N q;d , we immediately get the desired bound on cost ( q;d ; N q;d ). fl As in <ref> [12, p. 32] </ref>, we can simplify the form of the upper bound in (3) of Theo rem 3.4. Theorem 3.5. <p> Strong tractability results In this section, we show that the Poisson problem is strongly tractable when standard information is permissible. We use the notation (and techniques) in <ref> [12] </ref>. Recall the definition of ff 0 (d), ff 1 , and ff 2 in Theorem 3.4. Using the result of Theorem 3.4, we see that it is no loss of generality to restrict our attention to the case of " (jj+1) and d 2. <p> Then e ( q;d ; N q;d ) " comp ("; ) . cost ( q;d ; N q;d ) (c (d) + 2)K " : Proof sketch. We merely follow the steps used in deriving <ref> [12, Theorem 2] </ref> from [12, Theorem 1], except that we start with our own Theorem 3.4. Note that this is possible since our Theorem 3.4 can be rewritten as a special form of [12, Theorem 1]. <p> Then e ( q;d ; N q;d ) " comp ("; ) . cost ( q;d ; N q;d ) (c (d) + 2)K " : Proof sketch. We merely follow the steps used in deriving [12, Theorem 2] from <ref> [12, Theorem 1] </ref>, except that we start with our own Theorem 3.4. Note that this is possible since our Theorem 3.4 can be rewritten as a special form of [12, Theorem 1]. That is, the error formula in (3) of our Theorem 3.4 has the form of [12, Theorem 1], with <p> We merely follow the steps used in deriving [12, Theorem 2] from <ref> [12, Theorem 1] </ref>, except that we start with our own Theorem 3.4. Note that this is possible since our Theorem 3.4 can be rewritten as a special form of [12, Theorem 1]. That is, the error formula in (3) of our Theorem 3.4 has the form of [12, Theorem 1], with appropriate changes in parameter values. fl Hence the algorithm q;d , with q as given, is a strongly polynomial time algorithm, and the strong exponent of the problem is <p> Theorem 2] from <ref> [12, Theorem 1] </ref>, except that we start with our own Theorem 3.4. Note that this is possible since our Theorem 3.4 can be rewritten as a special form of [12, Theorem 1]. That is, the error formula in (3) of our Theorem 3.4 has the form of [12, Theorem 1], with appropriate changes in parameter values. fl Hence the algorithm q;d , with q as given, is a strongly polynomial time algorithm, and the strong exponent of the problem is at most p. Remark: The case = 1 (continued ).
Reference: 13. <author> Werschulz, A. G., </author> <title> What is the complexity of related elliptic, parabolic, and hyperbolic problems?, </title> <journal> Math. Comp. </journal> <volume> 47 (1986), </volume> <pages> 461-472. </pages> <month> 14. </month> , <title> The Computational Complexity of Differential and Integral Equations: An Information-Based Approach, </title> <publisher> Oxford University Press, Oxford, </publisher> <year> 1991. </year> <title> 15. , The complexity of two-point boundary-value problems with piecewise analytic data, </title> <editor> J. </editor> <booktitle> Complexity 10 (1994), </booktitle> <pages> 367-383. </pages> <month> 16. </month> , <title> The complexity of multivariate elliptic problems with analytic data, </title> <editor> J. </editor> <booktitle> Complexity 11 (1995), </booktitle> <pages> 154-173. </pages>
Reference-contexts: The main novelty in these spaces is that they satisfy certain boundary conditions. Our reason for choosing them is that they have a convenient orthonormal basis. (See also <ref> [13] </ref> for another example of using this technique, although in a different situation.) First, we consider the spaces of functions defined over a one-dimensional interval. Let I = (0; 1), and set z j (t) = 2 sin jt for j 2 P. <p> The following standard result may be found in (e.g.) <ref> [13, p. 309] </ref>: Lemma 3.1. Let ` 1 ` 2 , with ` 1 2 f0; 1g.
Reference: 17. <author> Wozniakowski, H., </author> <title> Average case complexity of linear multivariate problems: I. Theory, </title> <editor> J. </editor> <booktitle> Complexity 8 (1992), </booktitle> <pages> 337-372. </pages> <month> 18. </month> , <title> Average case complexity of linear multivariate problems: II. Applications, </title> <editor> J. </editor> <booktitle> Complexity 8 (1992), </booktitle> <pages> 373-392. </pages> <month> 19. </month> , <title> Tractability and strong tractability of linear multivariate problems, </title> <editor> J. </editor> <booktitle> Complexity 10 (1994), </booktitle> <pages> 96-128. </pages> <institution> Department of Computer and Information Sciences, Fordham University, New York, NY 10023 and Department of Computer Science, Columbia University, </institution> <address> New York, NY 10027 E-mail address: agw@cs.columbia.edu </address>
Reference-contexts: There is some discussion of this approach in [14, Chapters 7 and 8]; more recent results may be found in <ref> [17] </ref> and [18]. The only other way we can overcome intractability is to change the class F of problem elements. One idea is to note that the admissible problem elements f are analytic or (even more often) piecewise analytic functions.
References-found: 11

