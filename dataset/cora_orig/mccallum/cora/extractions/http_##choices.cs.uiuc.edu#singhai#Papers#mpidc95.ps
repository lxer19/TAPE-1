URL: http://choices.cs.uiuc.edu/singhai/Papers/mpidc95.ps
Refering-URL: http://choices.cs.uiuc.edu/singhai/Papers/xmpi.html
Root-URL: http://www.cs.uiuc.edu
Email: fsinghai,roy@cs.uiuc.edug  
Title: xMPI An MPI Implementation over -kernel for ATM Networks  
Author: Ashish Singhai and Roy. H. Campbell 
Date: September 3, 1995  
Address: 1304 W. Springfield Avenue Urbana, IL 61801-2491  
Affiliation: Department of Computer Science University of Illinois  
Abstract: High-speed computing experiments using networked multi-computers demonstrate the potential and viability of low-cost alternatives to special purpose parallel computing systems. However, to realize this goal, the application environment must provide support for parallel applications, high-performance computation, low-latency, and high-bandwidth communication. To maximize performance, the software systems must be optimized for parallel applications, exploiting the characteristics of the hardware and network. In this position paper, we describe the design philosophy of xMPI , an implementation of MPI based on the x-kernel that is adapted for ATM networks. X-kernel is an embeddable network subsystem which provides a flexible protocol composition framework[3]. The x-kernel abstractions viz. messages, protocol and session objects, events and the uniform protocol interface allow customization of the operating system services.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Mark B. Abbot and Larry L. Peterson. </author> <title> Increasing network throughput by integrating protocol layers. </title> <journal> IEEE/ACM transactions on networking, </journal> <volume> 1(5) </volume> <pages> 600-610, </pages> <month> Oct </month> <year> 1993. </year>
Reference-contexts: A protocol also resides closer to the operating system and the hardware and benefits from the knowledge available at that level. These implementations can be composed with other protocols and lend themselves to Integrated Layer Processing (ILP <ref> [1] </ref>), a very useful technique for reducing network overheads. Finally, such a framework allows customization of the protocol itself and enables an efficient implementation.
Reference: [2] <author> David D. Clark and David L. Tennenhouse. </author> <title> Architectural considerations for a new generation of protocols. </title> <journal> In Computer Communications Review, </journal> <pages> pages 200-208. </pages> <publisher> ACM SIGCOMM, </publisher> <month> Sep </month> <year> 1990. </year>
Reference-contexts: Messages representation is a tree of pointers to data areas and the methods use minimal copying since data copying has been identified as the largest contributor to the protocol processing overhead <ref> [2] </ref>. A protocol object represents a communication protocol. Its interface has methods for establishing and destroying sessions with other protocols (open and close), demultiplexing messages and performing control operations.
Reference: [3] <author> N. C. Hutchinson and Larry L. Peterson. </author> <title> The x-kernel: An architecture for implementing network protocols. </title> <journal> IEEE transactions on software engineering, </journal> <volume> 17(1) </volume> <pages> 64-76, </pages> <month> Jan </month> <year> 1991. </year>
Reference-contexts: We discuss the implementation of synchronous communication in xMPI in section 4. The following section discusses some issues in implementing MPI in multi-threaded environments. Finally we describe the current status of the project and conclude with a brief discussion and planned future work. 2 Background : x-kernel The X-kernel <ref> [3] </ref> is an embeddable network subsystem developed at the University of Ari-zona. It provides a uniform protocol composition framework. The principal abstractions are protocols, sessions and messages. The x-kernel represents each abstraction as an object with a well-defined interface.
Reference: [4] <author> Nayeem Islam. </author> <title> Customized Message Passing and Scheduling for Parallel and Distributed Applications. </title> <type> PhD thesis, </type> <institution> University of Illinois at Urbana-Champaign, Digital Computer Laboratory, 1304 W. </institution> <address> Springfield Ave, Urbana IL 61801, </address> <year> 1994. </year>
Reference-contexts: To take advantage of this technology and to deliver competitive performance, the software architecture must be carefully designed to exploit: a. the characteristics of the applications b. the characteristics of the hardware platform Achieving these goals requires careful optimizations and customization of operating system services <ref> [4] </ref>. The design of xMPI reflects this focus and incorporates mechanisms that allow it to be optimized for its operating environment.
Reference: [5] <author> V. S. Sunderam, G. A. Geist, J. Dongarra, and R. Mancheck. </author> <title> The PVM computing system: Evolution, experiences and trends. </title> <journal> Parallel Computing, </journal> <volume> 20 </volume> <pages> 531-545, </pages> <year> 1994. </year>
Reference-contexts: MPI also brings together massively parallel machines and networked workstations since the standard has evolved from the message passing systems used in both kinds of environments. For example PVM <ref> [5] </ref>, which has been used extensively in a network multi-computing setting, has contributed heavily to the MPI standard. At the same time, the standard also incorporates experiences from messaging systems used with massively parallel processors, e.g., NX/2, used with massively parallel Intel machines.
Reference: [6] <author> See-Mong Tan and Roy H. Campbell. </author> <title> Signalling with the x-ATM protocol toolkit. </title> <type> unpublished, </type> <month> Nov </month> <year> 1994. </year>
Reference-contexts: Our prototype environment consists of network of SUN Sparc workstations connected by an ATM network and a collection of multi-processor HP workstations connected by FDDI. (The present xMPI implementation runs on the SUN Sparc workstations.) XMPI is intended to be run on ATM networks. It uses the x-ATM toolkit <ref> [6] </ref> which implements a variety of ATM related protocols in the x-kernel framework. ATM networks provide low-latency, high-bandwidth communication and also have support for early de-multiplexing of the streams. While the ATM specification does not guarantee reliable delivery, ATM networks are typically very reliable.
Reference: [7] <author> Louis Turcotte. </author> <title> A survey of software environments for exploiting networked computing resources. </title> <type> Technical report, </type> <institution> Engineering Researc Center for Compuational Fluid Simulations, Mississippi State University, </institution> <month> Jan </month> <year> 1993. </year> <type> Draft Report. </type>
Reference: [8] <author> D. W. Walker. </author> <title> The design of a standard message passing interface for distributed memory concurrent computers. </title> <journal> Parallel Computing, </journal> <volume> 20 </volume> <pages> 657-673, </pages> <year> 1994. </year>
Reference-contexts: Using a collection of powerful workstations networked with a high speed network, it is possible to deliver the computation power of the same order of magnitude as that of a specialized parallel machine at a fraction of the cost [7][9]. MPI <ref> [8] </ref> is intended to be a standard message passing interface for applications that collaborate using message passing. It has a rich set of primitives for different communication mechanisms, collective communication and support operations.
Reference: [9] <institution> Workshop on Heterogeneous Network-based concurrent computing, </institution> <address> Talahasse, FL, </address> <month> Oct </month> <year> 1991. </year>
References-found: 9

