URL: http://www.cs.utexas.edu/users/plaxton/ps/1997/j_algorithms.ps
Refering-URL: http://www.cs.utexas.edu/users/plaxton/html/abc.html
Root-URL: 
Title: Lower Bounds for Shellsort  
Author: C. Greg Plaxton Torsten Suel 
Date: April 20, 1996  
Abstract: We show lower bounds on the worst-case complexity of Shellsort. In particular, we give a fairly simple proof of an (n lg 2 n=(lg lg n) 2 ) lower bound for the size of Shellsort sorting networks, for arbitrary increment sequences. We also show an identical lower bound for the running time of Shellsort algorithms, again for arbitrary increment sequences. Our lower bounds establish an almost tight trade-off between the running time of a Shellsort algorithm and the length of the underlying increment sequence.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Ajtai, J. Komlos, and E. Szemeredi. </author> <title> Sorting in c log n parallel steps. </title> <journal> Combinatorica, </journal> <volume> 3 </volume> <pages> 1-19, </pages> <year> 1983. </year>
Reference-contexts: Thus, his network came very close to the fastest known network at that time, due to Batcher [2], with depth 0:5 lg 2 n. In 1983, Ajtai, Komlos, and Szemeredi <ref> [1] </ref> designed a sorting network of depth O (lg n); however, their construction suffers from an irregular topology and a large constant hidden by the O-notation. This situation has motivated the search for O (lg n)-depth sorting networks with simpler topologies or a smaller multiplicative constant.
Reference: [2] <author> K. E. Batcher. </author> <title> Sorting networks and their applications. </title> <booktitle> In Proceedings of the AFIPS Spring Joint Computer Conference, </booktitle> <volume> vol. 32, </volume> <pages> pages 307-314, </pages> <year> 1968. </year>
Reference-contexts: A Shellsort sorting network of depth 0:6 lg 2 n based on increments of the form 2 i 3 j was given by Pratt [13]. Thus, his network came very close to the fastest known network at that time, due to Batcher <ref> [2] </ref>, with depth 0:5 lg 2 n. In 1983, Ajtai, Komlos, and Szemeredi [1] designed a sorting network of depth O (lg n); however, their construction suffers from an irregular topology and a large constant hidden by the O-notation.
Reference: [3] <author> R. E. Cypher. </author> <title> A lower bound on the size of Shellsort sorting networks. </title> <journal> SIAM Journal on Computing, </journal> <volume> 22 </volume> <pages> 62-71, </pages> <year> 1993. </year>
Reference-contexts: The lower bounds of Pratt and Weiss also apply to network size, but they only hold for very restricted classes of increment sequences. Cypher <ref> [3] </ref> has established an (n lg 2 n= lg lg n) lower bound for the size of Shellsort networks. However, his proof technique only works for monotone increment sequences, that is, sequences that are monotonically increasing. <p> The above result implies that we cannot hope to match the O (lg 2 n)-depth upper bound of Pratt [13] with any increment sequence of fewer than (1*) lg 2 n 16 (lg lg n) 2 increments, thus answering a question left open by Cypher's lower bound <ref> [3] </ref>. It also implies that we cannot achieve polylogarithmic depth with increment sequences of length o (lg 2 n=(lg lg n) 2 ). 5 By extending the argument we will be able to show much stronger lower bounds for shorter increment sequences. <p> Corollary 3.1.1 Any sorting network based on a monotone increment sequence of length m has size n 2 (2+*) p m ; We can now compare our result to the lower bound of (n lg 2 n= lg lg n) for network size given by Cypher <ref> [3] </ref>. The main difference between the two results is that Cypher gets a lower bound that is independent of the length of the increment sequence, while we get a trade-off between network size and increment sequence length. This makes our lower bound much stronger for short increment sequences.
Reference: [4] <author> W. Dobosiewicz. </author> <title> An efficient variation of Bubble Sort. </title> <journal> Information Processing Letters, </journal> <volume> 11 </volume> <pages> 5-6, </pages> <year> 1980. </year>
Reference-contexts: Our lower bound can be further generalized to a fairly large class of "Shellsort-like" algorithms, including the Shaker Sort algorithm of Incerpi and Sedgewick [7, 19] as well as other algorithms proposed by Knuth [8] and Dobosiewicz <ref> [4] </ref>. Poonen [12] has formally defined a class of such algorithms, called Shellsort-type algorithms, and has shown how to extend his lower bound to this class. We will not elaborate further on such possible extensions, and instead refer the reader to the presentation in [12].
Reference: [5] <author> T. N. Hibbard. </author> <title> An empirical study of minimal storage sorting. </title> <journal> Communications of the ACM, </journal> <volume> 6 </volume> <pages> 206-213, </pages> <year> 1963. </year>
Reference-contexts: However, this choice of H leads to a worst case running time of fi (n 2 ) if n is a power of 2. Subsequently, several authors proposed modifications to Shell's original sequence <ref> [9, 5, 8] </ref> in the hope of obtaining a better running time. Papernov and Stasevich [10] showed that the sequence of Hibbard [5], consisting of the increments of the form 2 k 1, achieves a running time of O (n 3=2 ). <p> Subsequently, several authors proposed modifications to Shell's original sequence [9, 5, 8] in the hope of obtaining a better running time. Papernov and Stasevich [10] showed that the sequence of Hibbard <ref> [5] </ref>, consisting of the increments of the form 2 k 1, achieves a running time of O (n 3=2 ). A common feature of all of these sequences is that they are nearly geometric, meaning that they approximate a geometric sequence within an additive constant.
Reference: [6] <author> J. Incerpi and R. Sedgewick. </author> <title> Improved upper bounds on Shellsort. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 31 </volume> <pages> 210-224, </pages> <year> 1985. </year>
Reference-contexts: In practice, the sequence is not popular because it has length fi (lg 2 n); implementations of Shellsort tend to use O (lg n)- length increment sequences because these result in better running times for files of moderate size <ref> [6] </ref>. In addition, there is no hope of getting an O (n lg n)-time algorithm based on a sequence of length !(lg n). Pratt [13] also showed an (n 3=2 ) lower bound for all nearly geometric sequences. <p> However, in 1982, Sedgewick [14] improved this upper bound to O (n 4=3 ), using an approximation of a geometric sequence that is not nearly geometric in the above sense. Subsequently, Incerpi and Sedgewick <ref> [6] </ref> designed a family of O (lg n)-length increment sequences with running times O (n 1+*= lg n ), for all * &gt; 0. Chazelle achieves a similar running time with a class of nonuni form sequences [6]; his construction is based on a generalization of Pratt's sequence. <p> Subsequently, Incerpi and Sedgewick <ref> [6] </ref> designed a family of O (lg n)-length increment sequences with running times O (n 1+*= lg n ), for all * &gt; 0. Chazelle achieves a similar running time with a class of nonuni form sequences [6]; his construction is based on a generalization of Pratt's sequence. The sequences proposed by Incerpi and Sedgewick are all within a constant factor of a geometric sequence, that is, they satisfy h j = fi (ff j ) for some constant ff &gt; 0. <p> Specifically, using a construction described in <ref> [6] </ref>, it is possible to achieve better asymptotic running times by allowing longer increment sequences. Another goal in the study of Shellsort is the construction of sorting networks of small depth and size. <p> We will now compare this lower bound trade-off with the best known upper bound trade-off given by the nonuniform increment sequences of Chazelle (see the non-uniform case of Theorem 3 in <ref> [6] </ref>). 15 Expressing the running time as a function of the increment sequence length m we obtain the following bounds: Lower Bound: T n lg 5 n n (2+*) p m Upper Bound: T mn n 2 p m Note that both the factor 1= lg 5 n in the lower
Reference: [7] <author> J. Incerpi and R. Sedgewick. </author> <title> Practical variations of Shellsort. </title> <journal> Information Processing Letters, </journal> <volume> 26 </volume> <pages> 37-43, </pages> <year> 1987. </year>
Reference-contexts: Our lower bound can be further generalized to a fairly large class of "Shellsort-like" algorithms, including the Shaker Sort algorithm of Incerpi and Sedgewick <ref> [7, 19] </ref> as well as other algorithms proposed by Knuth [8] and Dobosiewicz [4]. Poonen [12] has formally defined a class of such algorithms, called Shellsort-type algorithms, and has shown how to extend his lower bound to this class.
Reference: [8] <author> D. E. Knuth. </author> <booktitle> The Art of Computer Programming, </booktitle> <volume> volume 3. </volume> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1973. </year>
Reference-contexts: However, this choice of H leads to a worst case running time of fi (n 2 ) if n is a power of 2. Subsequently, several authors proposed modifications to Shell's original sequence <ref> [9, 5, 8] </ref> in the hope of obtaining a better running time. Papernov and Stasevich [10] showed that the sequence of Hibbard [5], consisting of the increments of the form 2 k 1, achieves a running time of O (n 3=2 ). <p> Our lower bound can be further generalized to a fairly large class of "Shellsort-like" algorithms, including the Shaker Sort algorithm of Incerpi and Sedgewick [7, 19] as well as other algorithms proposed by Knuth <ref> [8] </ref> and Dobosiewicz [4]. Poonen [12] has formally defined a class of such algorithms, called Shellsort-type algorithms, and has shown how to extend his lower bound to this class. We will not elaborate further on such possible extensions, and instead refer the reader to the presentation in [12]. <p> A result for a particular increment sequence is given by Knuth <ref> [8] </ref>, who determines an average case running time of (n 3=2 ) for Shell's original sequence. Increment sequences of the form (h; 1) and (h; k; 1) were investigated by Knuth [8] and Yao [21], respectively. <p> A result for a particular increment sequence is given by Knuth <ref> [8] </ref>, who determines an average case running time of (n 3=2 ) for Shell's original sequence. Increment sequences of the form (h; 1) and (h; k; 1) were investigated by Knuth [8] and Yao [21], respectively. Weiss [18] conducted an extensive empirical study and conjectured that Shellsort will on average not perform significantly better than in the worst case. Any general upper and lower bound for the average case would certainly be very interesting.
Reference: [9] <author> R. Lazarus and R. Frank. </author> <title> A high-speed sorting procedure. </title> <journal> Communications of the ACM, </journal> <volume> 3 </volume> <pages> 20-22, </pages> <year> 1960. </year>
Reference-contexts: However, this choice of H leads to a worst case running time of fi (n 2 ) if n is a power of 2. Subsequently, several authors proposed modifications to Shell's original sequence <ref> [9, 5, 8] </ref> in the hope of obtaining a better running time. Papernov and Stasevich [10] showed that the sequence of Hibbard [5], consisting of the increments of the form 2 k 1, achieves a running time of O (n 3=2 ).
Reference: [10] <author> A. Papernov and G. Stasevich. </author> <title> A method for information sorting in computer memories. </title> <journal> Problems of Information Transmission, </journal> <volume> 1 </volume> <pages> 63-75, </pages> <year> 1965. </year>
Reference-contexts: However, this choice of H leads to a worst case running time of fi (n 2 ) if n is a power of 2. Subsequently, several authors proposed modifications to Shell's original sequence [9, 5, 8] in the hope of obtaining a better running time. Papernov and Stasevich <ref> [10] </ref> showed that the sequence of Hibbard [5], consisting of the increments of the form 2 k 1, achieves a running time of O (n 3=2 ).
Reference: [11] <author> C. G. Plaxton, B. Poonen, and T. Suel. </author> <title> Improved lower bounds for Shellsort. </title> <booktitle> In Proceedings of the 33rd Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 226-235, </pages> <month> October </month> <year> 1992. </year>
Reference-contexts: Shellsort algorithms based on such increment sequences are called uniform. In a nonuniform Shellsort algorithm, H may depend on the input size n in an arbitrary fashion. fl A preliminary version of these results appears in <ref> [11] </ref>. 1 Department of Computer Science, University of Texas at Austin, Austin, TX 78712. Supported by NSF Research Initiation Award CCR-9111591, and by the Texas Advanced Research Program under Grant No. 91-003658-480. Email: plaxton@cs.utexas.edu. 2 Department of Computer Science, University of Texas at Austin, Austin, TX 78712.
Reference: [12] <author> B. Poonen. </author> <title> The worst case in Shellsort and related algorithms. </title> <journal> Journal of Algorithms, </journal> <volume> 15 </volume> <pages> 101-124, </pages> <year> 1993. </year>
Reference-contexts: Though this captures a very general class of sequences, it does not rule out the possibility of an O (lg n)-depth network based on some nonmonotone sequence. Recently, and independent of this paper, Poonen <ref> [12] </ref> has shown a lower bound of (n lg 2 n=(lg lg n) 2 ) that holds for arbitrary Shellsort algorithms. His lower bound has the form of a trade-off between the running time of a Shellsort algorithm and the length of the underlying increment sequence. <p> Instead, it shows how to "combine" Frobenius patterns to construct permutations with a large number of inversions. This result, together with the idea of dividing an increment sequence into "stages" (also called "intervals" in <ref> [12] </ref>), leads to the strong lower bounds of this paper. Throughout this paper, we will limit our attention to increment sequences of length O (lg 2 n=(lg lg n) 2 ). <p> Our lower bound can be further generalized to a fairly large class of "Shellsort-like" algorithms, including the Shaker Sort algorithm of Incerpi and Sedgewick [7, 19] as well as other algorithms proposed by Knuth [8] and Dobosiewicz [4]. Poonen <ref> [12] </ref> has formally defined a class of such algorithms, called Shellsort-type algorithms, and has shown how to extend his lower bound to this class. We will not elaborate further on such possible extensions, and instead refer the reader to the presentation in [12]. <p> Poonen <ref> [12] </ref> has formally defined a class of such algorithms, called Shellsort-type algorithms, and has shown how to extend his lower bound to this class. We will not elaborate further on such possible extensions, and instead refer the reader to the presentation in [12]. The lower bound of Theorem 4.1 establishes a trade-off between the running time of a Shellsort algorithm and the length of the underlying increment sequence.
Reference: [13] <author> V. R. Pratt. </author> <title> Shellsort and Sorting Networks. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, Stanford University, </institution> <month> December </month> <year> 1971. </year> <note> Also published by Garland, </note> <institution> New York, </institution> <year> 1979. </year>
Reference-contexts: A common feature of all of these sequences is that they are nearly geometric, meaning that they approximate a geometric sequence within an additive constant. An exception is the sequence designed by Pratt <ref> [13] </ref>, which consists of all increments of the form 2 i 3 j . This sequence gives a running time of O (n lg 2 n), which still represents the best asymptotic bound known for any increment sequence. <p> In addition, there is no hope of getting an O (n lg n)-time algorithm based on a sequence of length !(lg n). Pratt <ref> [13] </ref> also showed an (n 3=2 ) lower bound for all nearly geometric sequences. Partly due to this result, it was conjectured for quite a while that fi (n 3=2 ) is the best worst-case running time achievable by increment sequences of length O (lg n). <p> Another goal in the study of Shellsort is the construction of sorting networks of small depth and size. A Shellsort sorting network of depth 0:6 lg 2 n based on increments of the form 2 i 3 j was given by Pratt <ref> [13] </ref>. Thus, his network came very close to the fastest known network at that time, due to Batcher [2], with depth 0:5 lg 2 n. <p> The above result implies that we cannot hope to match the O (lg 2 n)-depth upper bound of Pratt <ref> [13] </ref> with any increment sequence of fewer than (1*) lg 2 n 16 (lg lg n) 2 increments, thus answering a question left open by Cypher's lower bound [3]. <p> We will make use of the following well-known lemma (see, for example, <ref> [13] </ref>) in order to extend this argument to nonmonotonic increment sequences. Lemma 3.9 For any two increments h; h 0 , if we h 0 -sort an h-sorted file, it stays h-sorted. Now suppose we have a nonmonotone increment sequence H. <p> We have chosen to weaken these constants in order to simplify the proof of Lemma 4.1. Comparing the bound of Theorem 4.1 to previous results we note that the lower bounds of Pratt <ref> [13] </ref> and Weiss [17] only hold for increment sequences approximating a geometric sequence, while the lower bound of Theorem 4.1 applies to all increment sequences.
Reference: [14] <author> R. Sedgewick. </author> <title> A new upper bound for Shellsort. </title> <journal> Journal of Algorithms, </journal> <volume> 7 </volume> <pages> 159-173, </pages> <year> 1986. </year>
Reference-contexts: Partly due to this result, it was conjectured for quite a while that fi (n 3=2 ) is the best worst-case running time achievable by increment sequences of length O (lg n). However, in 1982, Sedgewick <ref> [14] </ref> improved this upper bound to O (n 4=3 ), using an approximation of a geometric sequence that is not nearly geometric in the above sense.
Reference: [15] <author> D. L. </author> <title> Shell. A high-speed sorting procedure. </title> <journal> Communications of the ACM, </journal> <volume> 2 </volume> <pages> 30-32, </pages> <year> 1959. </year>
Reference-contexts: 1 Introduction Shellsort is a classical sorting algorithm introduced by Shell in 1959 <ref> [15] </ref>. The algorithm is based on a sequence H = h 0 ; : : : ; h m1 of positive integers called an increment sequence.
Reference: [16] <author> J. S. Vitter and P. Flajolet. </author> <title> Average-case analysis of algorithms and data structures. </title> <editor> In J. van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, Volume A: Algorithms and Complexity, </booktitle> <pages> pages 431-524. </pages> <publisher> Elsevier/MIT Press, </publisher> <year> 1990. </year>
Reference-contexts: This situation has motivated the search for O (lg n)-depth sorting networks with simpler topologies or a smaller multiplicative constant. Shellsort has been considered a potential candidate for such a network <ref> [16] </ref>, due to the rich variety of possible increment sequences and the lack of nontrivial general lower bounds. The lower bounds of Pratt and Weiss also apply to network size, but they only hold for very restricted classes of increment sequences.
Reference: [17] <author> M. A. Weiss. </author> <title> Lower Bounds for Shellsort. </title> <type> PhD thesis, </type> <institution> Princeton University, Department of Computer Science, </institution> <month> June </month> <year> 1987. </year> <month> 17 </month>
Reference-contexts: The sequences proposed by Incerpi and Sedgewick are all within a constant factor of a geometric sequence, that is, they satisfy h j = fi (ff j ) for some constant ff &gt; 0. Weiss <ref> [17, 20] </ref> showed that all sequences of this type take time (n 1+*= p lg n ), but his proof assumed an as yet unproven conjecture on the number of inversions in the Frobenius pattern. <p> We have chosen to weaken these constants in order to simplify the proof of Lemma 4.1. Comparing the bound of Theorem 4.1 to previous results we note that the lower bounds of Pratt [13] and Weiss <ref> [17] </ref> only hold for increment sequences approximating a geometric sequence, while the lower bound of Theorem 4.1 applies to all increment sequences.
Reference: [18] <author> M. A. Weiss. </author> <title> Empirical study of the expected running time of Shellsort. </title> <journal> The Computer Journal, </journal> <volume> 34 </volume> <pages> 88-91, </pages> <year> 1991. </year>
Reference-contexts: A result for a particular increment sequence is given by Knuth [8], who determines an average case running time of (n 3=2 ) for Shell's original sequence. Increment sequences of the form (h; 1) and (h; k; 1) were investigated by Knuth [8] and Yao [21], respectively. Weiss <ref> [18] </ref> conducted an extensive empirical study and conjectured that Shellsort will on average not perform significantly better than in the worst case. Any general upper and lower bound for the average case would certainly be very interesting.
Reference: [19] <author> M. A. Weiss and R. Sedgewick. </author> <title> Bad cases for Shaker-sort. </title> <journal> Information Processing Letters, </journal> <volume> 28 </volume> <pages> 133-136, </pages> <year> 1988. </year>
Reference-contexts: Our lower bound can be further generalized to a fairly large class of "Shellsort-like" algorithms, including the Shaker Sort algorithm of Incerpi and Sedgewick <ref> [7, 19] </ref> as well as other algorithms proposed by Knuth [8] and Dobosiewicz [4]. Poonen [12] has formally defined a class of such algorithms, called Shellsort-type algorithms, and has shown how to extend his lower bound to this class.
Reference: [20] <author> M. A. Weiss and R. Sedgewick. </author> <title> Tight lower bounds for Shellsort. </title> <journal> Journal of Algorithms, </journal> <volume> 11 </volume> <pages> 242-251, </pages> <year> 1990. </year>
Reference-contexts: The sequences proposed by Incerpi and Sedgewick are all within a constant factor of a geometric sequence, that is, they satisfy h j = fi (ff j ) for some constant ff &gt; 0. Weiss <ref> [17, 20] </ref> showed that all sequences of this type take time (n 1+*= p lg n ), but his proof assumed an as yet unproven conjecture on the number of inversions in the Frobenius pattern. <p> The result by Poonen, on the other hand, is of independent interest, since it establishes a variant of the Inversion Conjecture of Weiss <ref> [20] </ref> using a new geometric approach to the Frobenius Problem. The technique used in this paper is not based on a proof of the Inversion Conjecture. Instead, it shows how to "combine" Frobenius patterns to construct permutations with a large number of inversions.
Reference: [21] <author> A. C. C. Yao. </author> <title> An analysis of (h; k; 1)-Shellsort. </title> <journal> Journal of Algorithms, </journal> <volume> 1 </volume> <pages> 14-50, </pages> <year> 1980. </year> <month> 18 </month>
Reference-contexts: A result for a particular increment sequence is given by Knuth [8], who determines an average case running time of (n 3=2 ) for Shell's original sequence. Increment sequences of the form (h; 1) and (h; k; 1) were investigated by Knuth [8] and Yao <ref> [21] </ref>, respectively. Weiss [18] conducted an extensive empirical study and conjectured that Shellsort will on average not perform significantly better than in the worst case. Any general upper and lower bound for the average case would certainly be very interesting.
References-found: 21

