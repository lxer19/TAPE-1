URL: http://www.it.kth.se/docs/Reports/paradis/Tech.ps.Z
Refering-URL: http://www.it.kth.se/docs/Reports/paradis/
Root-URL: http://www.it.kth.se
Email: Email: maria@it.kth.se  
Phone: Phone: +46 8 752 14 96, Fax: +46 8 751 17 93,  
Title: Structural Decomposition a  
Author: Maria Hultstrom 
Address: Electrum 204, S-164 40 Kista, Sweden,  
Affiliation: Department of Teleinformatics, Royal Institute of Technology,  
Abstract: In this report we present an algorithm for the decomposition of a monolithic LOTOS process into two processes, which composed by the parallel operator is observational equivalent to the original one. Repeated application permits the generation of more than two processes. The algorithm is defined on labelled transition systems and, hence, its application to any process algebra with a similar notion of parallel composition is straightforward. The transformation is based on a given partition of the actions into two subsets, corresponding to the action sets of the generated processes. The main interest of the transformation is that the amount of synchronizations between the two generated processes is kept low. The Structural Decomposition has several applications, like the decomposition of functionality, modularization, synthesizing of protocols, decomposition of tests, etc... 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Maria Hultstrom. </author> <title> Structural decomposition. </title> <booktitle> In Proc. IFIP WG 6.2 Symp. on Protocol Specification, Testing, and Verification IX, Vancou-ver, Canada, 1994. IFIP WG 6.1, </booktitle> <publisher> Chapman & Hall. </publisher>
Reference-contexts: Thanks goes to Joachim Parrow for his valuable comments and to Fredrik Orava, who clarified my ideas on the example. I also wish to thank Santiago Pavon and the anonymous referees for their comments and suggestions of improvements on the previous version <ref> [1] </ref>. TRITA-IT R 94:13, ISSN 1103-534 X Maria Hultstrom Structural Decomposition 39 A Finding Interleaved Sub-LTSes Given a labelled transition system, B and a partition of L B in A 1 and A 2 , we want to generate all interleaved sub-LTSes from the initial state s B 0 .
Reference: [2] <author> T. Bolognesi and E. Brinksma. </author> <title> An introduction to the iso specification language LOTOS. </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> 14 </volume> <pages> 25-59, </pages> <year> 1987. </year>
Reference: [3] <author> LotosPhere Project. </author> <title> Correctness preserving transformations. </title> <type> Technical Report Lo/WP1/T1.2/N0020, </type> <institution> ESPRIT Ref:2304, </institution> <month> May </month> <year> 1990. </year>
Reference: [4] <author> S. Pavon, M. Hultstrom, J. Quemada, D. de Frutos, and Y. Ortega. </author> <title> Inverse expansion. </title> <booktitle> In Proc. 4 th International Conference on Formal Description Techniques, </booktitle> <year> 1991. </year>
Reference: [5] <author> S. Pavon, J. Quemada, D. Larrabeiti, and M. Hultstrom. </author> <title> Expansion inversa: Aplicacion inversa del teorema de expansion para descomponer un sistema lotos en subprocesos en paralelo. </title> <booktitle> In III Jornadas de Con-currencia, </booktitle> <year> 1993, </year> <institution> Universidad Politecnica de Valencia, </institution> <year> 1993. </year>
Reference: [6] <author> Santiago Pavon Gomez. Contribucion al Analisis y Transformacion de Especificaciones LOTOS. </author> <type> PhD thesis, </type> <institution> E.T.S.I. Telecomunicacion, Madrid, Spain, </institution> <year> 1990. </year>
Reference: [7] <author> F. Khendek, G. v. Bochmann, and C. Kant. </author> <title> New results on deriving protocol specifications from service specifications. </title> <note> In SIGCOM '89, 1989. Computer Communications Review 19:4. </note>
Reference-contexts: introduction of internal events is defined. * [8] contains algorithms for decomposing a monolithic LOTOS process into two subprocesses. The interaction between the two subprocesses is either synchronous or asynchronous communication. These algorithms maintain the observational equivalence, but synchronizations are intro duced between almost every state. * In <ref> [7, 12] </ref>, an algorithm is presented for obtaining an arbitrary number of protocol entities from a given service specification by introducing synchronization events.
Reference: [8] <author> R. Langerak. </author> <title> Decomposition of functionality: A correctness preserving lotos transformation. </title> <booktitle> In Proc. IFIP WG 6.2 Symp. on Protocol Specification, Testing, and Verification X, </booktitle> <pages> pages 229-242, </pages> <address> Ottawa, Canada, </address> <year> 1990. </year> <booktitle> IFIP WG 6.1, </booktitle> <publisher> North-Holland. </publisher>
Reference-contexts: introduction of internal events is defined. * <ref> [8] </ref> contains algorithms for decomposing a monolithic LOTOS process into two subprocesses. The interaction between the two subprocesses is either synchronous or asynchronous communication. <p> The choice-operator in the service specification is restricted to deal with alternatives between events of the same protocol entity and the potential parallelism is not made explicit. * [9] is an extension of <ref> [8] </ref> where the decomposition of a not expanded , i. e. non-monolithic, LOTOS process is treated. The relation maintained is observation congruence.
Reference: [9] <author> E. Brinksma, R. Langerak, and P. Broekroelofs. </author> <title> Functionality decomposition by compositional correctness preserving transformation. </title> <booktitle> Computer Aided Verification, CAV 93, </booktitle> <address> Crete, Greece, </address> <year> 1993. </year> <title> TRITA-IT R 94:13, ISSN 1103-534 X Maria Hultstrom Structural Decomposition 42 </title>
Reference-contexts: The choice-operator in the service specification is restricted to deal with alternatives between events of the same protocol entity and the potential parallelism is not made explicit. * <ref> [9] </ref> is an extension of [8] where the decomposition of a not expanded , i. e. non-monolithic, LOTOS process is treated. The relation maintained is observation congruence.
Reference: [10] <author> J. Parrow. </author> <title> Submodule construction as equation solving in CCS. </title> <journal> Theoretical Computer Science, </journal> <volume> 68 </volume> <pages> 175-202, </pages> <year> 1989. </year>
Reference-contexts: The idea here is to find one missing submodule specification, which together with the already specified submodules preserve some equivalence relation with the general specification. Some examples of this idea can be found in: TRITA-IT R 94:13, ISSN 1103-534 X Maria Hultstrom Structural Decomposition 38 * In <ref> [10] </ref>, this idea is based on CCS and on a procedure for solving equations of the form: (AjX) n L = B, where X is the unknown. The obtained submodule is a result of automatic transformations and guidance of the user.
Reference: [11] <author> Xinxin Liu. </author> <title> Specification and Decomposition in Concurrency. </title> <type> PhD thesis, </type> <institution> University of Aalborg, Denmark, </institution> <year> 1992. </year>
Reference-contexts: The obtained submodule is a result of automatic transformations and guidance of the user. Observational equivalence is maintained between the given specification and the composition of the submodules. * In <ref> [11] </ref> the solving of equation systems of form: C 1 (X) P 1 ; ; C n (X) P n is treated, where C i is a context, P i is an arbitrary process, is a bisimulation equivalence and X is the unknown process to be found (if possible).
Reference: [12] <author> C. Kant, T. Higashino, and G. v.Bochmann. </author> <title> Deriving protocol specifications from service specifications written in lotos+. </title> <type> Technical Report 805, </type> <institution> Dept. d'informatique et de recherche operationelle, Univ. of Montreal, </institution> <year> 1992. </year>
Reference-contexts: introduction of internal events is defined. * [8] contains algorithms for decomposing a monolithic LOTOS process into two subprocesses. The interaction between the two subprocesses is either synchronous or asynchronous communication. These algorithms maintain the observational equivalence, but synchronizations are intro duced between almost every state. * In <ref> [7, 12] </ref>, an algorithm is presented for obtaining an arbitrary number of protocol entities from a given service specification by introducing synchronization events.
Reference: [13] <author> ISO. </author> <title> LOTOS a Formal Description Technique based on the Temporal Ordering of Observational Behaviour. IS 8807, </title> <address> TC97/SC21, </address> <year> 1988. </year>
Reference: [14] <author> Vissers, Scollo, and van Sinderen. </author> <title> Architecture and specification style in formal descriptions of distributed systems. </title> <booktitle> In IFIP Symp. on prot , 1988. </booktitle>
Reference: [15] <author> R. Milner. </author> <title> Communication and Concurrency. </title> <publisher> Prentice-Hall, </publisher> <year> 1989. </year>
Reference: [16] <author> J.F. Groote and F. Moller. </author> <title> Verification of parallel systems via decomposition, </title> <booktitle> volume 630 of Lecture Notes in Comput. </booktitle> <publisher> Sci. Springer-Verlag, </publisher> <address> CONCUR 92, </address> <year> 1992. </year>
Reference-contexts: The decidability of these equations are studied. Another related issue, the decomposition of a logical specification formula F into sub-formulas F 1 ; ; F n which should express properties of the decom posed processes is also examined. Related work can also be found in <ref> [16] </ref> where decomposition is used as a vehicle for verifying parallel systems. Acknowledgements. I wish to express my gratitude to Juan Quemada who came up with the idea to isolate zones of interleavings and for his encouragement.
Reference: [17] <author> J. Parrow, R. Cleaveland, and B. Steffen. </author> <title> The Concurrency Workbench. </title> <editor> In Clarke, Sifakis, and Pnueli, editors, </editor> <booktitle> Automatic Methods for the Verification of Finite-State Systems, </booktitle> <pages> pages 24-37. </pages> <publisher> Springer Verlag, </publisher> <year> 1989. </year> <note> Lecture Notes in Computer Science 407. </note>
Reference: [18] <author> J. Quemada, S. Pavon, and A. Fernandez. </author> <title> State Exploration by Transformation with LOLA. In Workshop on Automatic Verification Methods for Finite State Systems, </title> <address> Grenoble, </address> <month> June </month> <year> 1989. </year>
References-found: 18

