URL: ftp://rtcl.eecs.umich.edu/outgoing/wuchang/ds.ps.Z
Refering-URL: http://www.eecs.umich.edu/RTCL/routing/
Root-URL: http://www.cs.umich.edu
Title: The Effect of Virtual Channels on the Performance of Wormhole Algorithms in Multicomputer Networks  
Author: Wu-chang Feng Advisor: Kang Shin 
Address: Ann Arbor, MI 48109-2122  
Affiliation: Real-Time Computing Laboratory Department of Electrical Engineering and Computer Science The University of Michigan  
Abstract: The work reported in this paper was supported in part by the National Science Foundation under Grant MIP-9203895. Any opinions, findings, and conclusions or recommendations expressed in this paper are those of the authors and do not necessarily reflect the view of the NSF. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> W. Athas and C. Seitz, </author> <title> "Multicomputers: Message-passing concurrent computers," </title> <booktitle> IEEE Computer, </booktitle> <pages> pp. 9-24, </pages> <month> August </month> <year> 1988. </year>
Reference-contexts: 1 Introduction The performance of message passing in multicomputers depends on the routing and switching schemes employed in their interconnection network <ref> [1] </ref>. First generation multicomputers have typically employed store-and-forward techniques [2] to pass messages from source to destination. Each time a message arrives at a node it is buffered and the host processor executes a routing algorithm to determine the next step of the message.
Reference: [2] <author> A. Tanenbaum, </author> <title> Computer Networks, </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, N.J., </address> <year> 1989. </year>
Reference-contexts: 1 Introduction The performance of message passing in multicomputers depends on the routing and switching schemes employed in their interconnection network [1]. First generation multicomputers have typically employed store-and-forward techniques <ref> [2] </ref> to pass messages from source to destination. Each time a message arrives at a node it is buffered and the host processor executes a routing algorithm to determine the next step of the message.
Reference: [3] <author> W. J. Dally and C. L. Seitz, </author> <title> "The torus routing chip," </title> <journal> Journal of Distributed Computing, </journal> <volume> vol. 1, no. 3, </volume> <pages> pp. 187-196, </pages> <year> 1986. </year>
Reference: [4] <author> S. Konstantinidou and L. Snyder, </author> <title> "Chaos router: Architecture and performance," </title> <booktitle> in Proc. Int'l Symposium on Computer Architecture, </booktitle> <pages> pp. 212-221, </pages> <month> May </month> <year> 1991. </year>
Reference: [5] <author> W. J. Dally et al., </author> <title> "Design and implementation of the message-driven processor," </title> <booktitle> in Proc. Brown/MIT Conference on Advanced Research in VLSI and Parallel Systems, </booktitle> <pages> pp. 5-25, </pages> <year> 1992. </year>
Reference: [6] <author> C. L. Seitz and W. Su, </author> <title> "A family of routing and communication chips based on the Mosaic," </title> <booktitle> in Symp. on Integrated Systems: Proc. of the Washington Conf., </booktitle> <year> 1993. </year>
Reference: [7] <author> X. Zhang, </author> <title> "System effects of interprocessor communication latency in multicomputers," </title> <booktitle> IEEE Micro, </booktitle> <pages> pp. </pages> <address> 12-15,52-55, </address> <month> April </month> <year> 1991. </year>
Reference: [8] <author> W. J. Dally and C. L. Seitz, </author> <title> "Deadlock-free message routing in multiprocessor interconnection networks," </title> <journal> IEEE Trans. Computers, </journal> <volume> vol. C-36, no. 5, </volume> <pages> pp. 547-553, </pages> <month> May </month> <year> 1987. </year>
Reference-contexts: Each study can be classified as it relates to the following list of parameters. Virtual Channels: Because wormhole packets can block in the network and thus occupy switch resources, they are susceptible to deadlocks. Virtual channels were first introduced in <ref> [8] </ref> in order to prevent deadlocks that can occur in wormhole networks. In [9], Dally shows that virtual channels can also be used to increase network throughput and latency by relieving contention. This is because blocked packets can be bypassed by other packets using separate 2 virtual channels. <p> Deadlocks occur when no message can advance towards its destination due to filled queues. Dally <ref> [8] </ref> has proposed a methodology to design static routing algorithms using virtual channels to eliminate the cycles in the dependency graph that cause deadlocks. While this removes the possibility of deadlocks, having a restricted number of paths between two nodes reduces fault tolerance and can lead to a communication bottleneck. <p> All of these experiments were performed on an 8x8 wrapped square mesh (torus). Figure 1 shows an example of a 4x4 torus. To make dimension-ordered routing deadlock-free, at least two virtual channels are provided <ref> [8] </ref>. This partitions the network effectively into a high and a low subnetwork. Additional virtual channels are then mapped evenly across the two subnetworks so that both the high and the low virtual networks have equivalent numbers of virtual channels.
Reference: [9] <author> W. Dally, </author> <title> "Virtual-channel flow control," </title> <journal> IEEE Trans. Parallel and Distributed Systems, </journal> <volume> vol. 3, no. 2, </volume> <pages> pp. 194-205, </pages> <month> March </month> <year> 1992. </year>
Reference-contexts: Virtual Channels: Because wormhole packets can block in the network and thus occupy switch resources, they are susceptible to deadlocks. Virtual channels were first introduced in [8] in order to prevent deadlocks that can occur in wormhole networks. In <ref> [9] </ref>, Dally shows that virtual channels can also be used to increase network throughput and latency by relieving contention. This is because blocked packets can be bypassed by other packets using separate 2 virtual channels. <p> There are many issues involved when studying virtual channels including the number of virtual channels used, how virtual channels are multiplexed on the physical link, and how virtual channels are allocated to the virtual subnetworks within a particular routing algorithm. Dally <ref> [9] </ref> has examined the first two issues with respect to static (dimension-ordered) routing. The third issue is has been relatively unexplored. Routing Algorithms: Routing algorithms determine the path of a packet between two nodes. These algorithms can be minimal, non-minimal, static, partially adaptive or fully adaptive. <p> Bus interconnect. Fair, random arbitration for output channels. Evaluation Metrics: Latency Note that we are specifically interested in how virtual channels, routing algorithms, and traffic patterns affect the performance of networks. Dally <ref> [9] </ref> has looked at similar effects using dimension-ordered routing and uniform traffic. Boppana [10] has compared the performance of various algorithms, but each algorithm is given just enough virtual channels to prevent deadlock. This work attempts to examine, simultaneously, the parameters both papers address individually. <p> One design alternative that can be considered is implementing dimension-ordered routing with extra virtual channels instead of adaptive routing since virtual channels provide substantial performance improvement <ref> [9] </ref> and are relatively inexpensive compared to the logic involved in implementing adaptive routing. In [9], Dally shows the benefits that extra virtual channels provide with the proper flit and packet sequencing. He also shows that these benefits diminish significantly as the number of virtual channels increases. <p> One design alternative that can be considered is implementing dimension-ordered routing with extra virtual channels instead of adaptive routing since virtual channels provide substantial performance improvement <ref> [9] </ref> and are relatively inexpensive compared to the logic involved in implementing adaptive routing. In [9], Dally shows the benefits that extra virtual channels provide with the proper flit and packet sequencing. He also shows that these benefits diminish significantly as the number of virtual channels increases. In his study, Dally uses dimension-ordered routing with uniform traffic patterns to study these effects. <p> From this model, we will be able to evaluate in a single framework, a variety of algorithms, network characteristics, and switch architectures. 14 Appendix A Classification of Related Work Dally <ref> [9] </ref>: Routing Algorithm: Dimension-ordered Virtual Channels: 1,2,4,8,16 Virtual Channel Multiplexing: Random, deadline-based, age-based Virtual Channel Allocation: Not specified Network Size: Wide range Topology: 2-ary n-fly (n=4,6,8,10), 2-ary n-cube (n=4,6,8,10,12,14), and 16-ary 2-cube.
Reference: [10] <author> R. Boppana and S. Chalasani, </author> <title> "A comparison of adaptive wormhole routing algorithms," </title> <booktitle> in Proc. Int'l Symposium on Computer Architecture, </booktitle> <pages> pp. 351-360, </pages> <year> 1993. </year>
Reference-contexts: Finally, fully adaptive algorithms do not restrict the selection of paths between two nodes. Each algorithm has specific properties and requirements which must be considered when comparing them. For example, fully adaptive routing algorithms generally require more virtual channels than partially adaptive ones in order to prevent deadlocks. In <ref> [10] </ref>, several adaptive algorithms are compared, however, in these experiments, each algorithm is given as many virtual channels as it requires for deadlock prevention. This puts partially adaptive schemes at a disadvantage compared to fully adaptive schemes with larger numbers of virtual channels. <p> In places where these issues are addressed, it has been shown that they impact performance considerably. For example, in <ref> [10, 13] </ref>, throttling injection into the network keeps injection traffic from hogging all of the virtual channels and thus has a positive influence on network performance. Evaluation Metrics: Finally, the actual metrics used in the evaluation of the network is important when comparing algorithms. <p> Bus interconnect. Fair, random arbitration for output channels. Evaluation Metrics: Latency Note that we are specifically interested in how virtual channels, routing algorithms, and traffic patterns affect the performance of networks. Dally [9] has looked at similar effects using dimension-ordered routing and uniform traffic. Boppana <ref> [10] </ref> has compared the performance of various algorithms, but each algorithm is given just enough virtual channels to prevent deadlock. This work attempts to examine, simultaneously, the parameters both papers address individually. <p> Evaluation Metrics: Latency, throughput 15 Boppana <ref> [10] </ref>: Routing Algorithm: 1) Dimension-ordered 2) Fully adaptive, minimal path: positive hop, negative-hop, and negative-hop with wild cards 3) Partially adaptive, min imal path: North-last Virtual Channels: Use as many as each routing algorithm requires Virtual Channel Multiplexing: Pre-defined order depending on messages Virtual Channel Allocation: Not applicable (minimum supplied) Network
Reference: [11] <author> J. H. Kim and A. A. Chien, </author> <title> "Evaluation of wormhole routed networks under hybrid traffic loads," </title> <booktitle> in Proc. Hawaii Int'l Conf. on System Sciences, </booktitle> <pages> pp. 276-285, </pages> <month> January </month> <year> 1993. </year>
Reference-contexts: Traffic Patterns: The sensitivity of routing algorithms to traffic patterns, especially nonuniform patterns, has been studied in many of the papers on adaptive routing. Traffic char 3 acteristics such as message length, message interarrival times at the sources, and destination distributions can have significant performance implications. In <ref> [11] </ref>, the first issue is studied. Many of the papers on adaptive routing address the latter two issues in the generation of non-uniform traffic. Traffic patterns generated from real applications would be ideal in any evaluation, but to date, we know of only one study [12] which has examined this. <p> Evaluation Metrics: Latency, throughput Kim <ref> [11] </ref>: Routing Algorithm: Dimension-ordered, planar-adaptive (minimal, partially-adaptive) Virtual Channels: 1 or 2 Virtual Channel Multiplexing: Not specified Virtual Channel Allocation: Not applicable Network Size: 256 nodes Topology: 2 dimensional mesh (square?) Destination Distribution: Uniform Message Generation Distribution: Not specified Message Length: 24 flits, 256-1024 flits (hybrid traffic with 2 message lengths)
Reference: [12] <author> S. Chittor and R. Enbody, </author> <title> "Performance evaluation of mesh-connected wormhole-routed networks for interprocessor communication in multicomputers," </title> <booktitle> in Supercomputing, </booktitle> <pages> pp. 647-656, </pages> <month> November </month> <year> 1990. </year>
Reference-contexts: In [11], the first issue is studied. Many of the papers on adaptive routing address the latter two issues in the generation of non-uniform traffic. Traffic patterns generated from real applications would be ideal in any evaluation, but to date, we know of only one study <ref> [12] </ref> which has examined this. Topology: The behavior of routing algorithms over a wide range of topologies and sizes is an area that has also been understudied. The influence that the connectivity and the size of networks have on traffic characteristics such as contention would be interesting.
Reference: [13] <author> W. Dally and H. Aoki, </author> <title> "Deadlock-free adaptive routing in multicomputer networks using virtual channels," </title> <journal> IEEE Trans. Parallel and Distributed Systems, </journal> <volume> vol. 4, no. 4, </volume> <pages> pp. 466-475, </pages> <month> April </month> <year> 1993. </year>
Reference-contexts: In places where these issues are addressed, it has been shown that they impact performance considerably. For example, in <ref> [10, 13] </ref>, throttling injection into the network keeps injection traffic from hogging all of the virtual channels and thus has a positive influence on network performance. Evaluation Metrics: Finally, the actual metrics used in the evaluation of the network is important when comparing algorithms. <p> Glass and Ni [18] with the turn model and Chien and Kim [19] with planar-adaptivity propose methodologies for designing partially-adaptive deadlock-free algorithms using a limited number of virtual channels. This allows for some adaptivity without the high costs associated with fully-adaptive schemes. Finally, Dally and Aoki <ref> [13] </ref> and Duato [20-22] present several fully adaptive non-minimal algorithms which allow cycles in the channel-dependency graphs, but can still avoid deadlock with a restricted number of virtual channels. While adaptive algorithms provide better performance and added fault tolerance, static algorithms allow for faster, simpler, asynchronous switch designs [13] and do <p> and Aoki <ref> [13] </ref> and Duato [20-22] present several fully adaptive non-minimal algorithms which allow cycles in the channel-dependency graphs, but can still avoid deadlock with a restricted number of virtual channels. While adaptive algorithms provide better performance and added fault tolerance, static algorithms allow for faster, simpler, asynchronous switch designs [13] and do not suffer problems 6 with non-uniformities in resource usage [23]. <p> Destination Distribution: Uniform Message Generation Distribution: Poisson Message Length: 20 flits Switch Architecture: Source queueing modelled, Architecture not specified Evaluation Metrics: Mean latency, latency distribution, throughput Dally <ref> [13] </ref>: Routing Algorithm: Non-minimal static-adaptive and dynamic-adaptive based on dimension reversal numbers, dimension-ordered routing. Selection function based on minimum congestion, maximum flexibility and straight line criteria.
Reference: [14] <author> J. W. Dolter, S. W. Daniel, A. Mehra, J. L. Rexford, W. Feng, and K. G. Shin, "SPIDER: </author> <title> Flexible and efficient communication support for point-to-point distributed systems," </title> <institution> Computer Science and Engineering Technical Report CSE-TR-180-93, University of Michigan, </institution> <month> October </month> <year> 1993. </year>
Reference-contexts: Network Size: 64 Topology: 8-ary 2-cube Destination Distribution: Uniform and non-uniform Message Generation Distribution: Poisson Message Length: 64 flits Switch Architecture: Based on SPIDER <ref> [14, 15] </ref>. Bus interconnect. Fair, random arbitration for output channels. Evaluation Metrics: Latency Note that we are specifically interested in how virtual channels, routing algorithms, and traffic patterns affect the performance of networks. Dally [9] has looked at similar effects using dimension-ordered routing and uniform traffic. <p> For this study, two routing algorithms based on Duato's methodology were written, one of which was used in these simulations. pp-mess-sim currently includes a cycle-level model of SPIDER <ref> [14, 15] </ref>, a communication adapter designed for HARTS [25]. Our simulations use this model as the basis for evaluating these algorithms.
Reference: [15] <author> W. Feng, J. Rexford, A. Mehra, S. Daniel, J. Dolter, and K. Shin, </author> <title> "Architectural support for managing communication in point-to-point distributed systems," </title> <type> Technical Report CSE-TR-197-94, </type> <institution> University of Michigan, </institution> <month> March </month> <year> 1994. </year> <month> 17 </month>
Reference-contexts: Network Size: 64 Topology: 8-ary 2-cube Destination Distribution: Uniform and non-uniform Message Generation Distribution: Poisson Message Length: 64 flits Switch Architecture: Based on SPIDER <ref> [14, 15] </ref>. Bus interconnect. Fair, random arbitration for output channels. Evaluation Metrics: Latency Note that we are specifically interested in how virtual channels, routing algorithms, and traffic patterns affect the performance of networks. Dally [9] has looked at similar effects using dimension-ordered routing and uniform traffic. <p> For this study, two routing algorithms based on Duato's methodology were written, one of which was used in these simulations. pp-mess-sim currently includes a cycle-level model of SPIDER <ref> [14, 15] </ref>, a communication adapter designed for HARTS [25]. Our simulations use this model as the basis for evaluating these algorithms.
Reference: [16] <author> D. Linder and J. Harden, </author> <title> "An adaptive and fault tolerant wormhole routing strategy for k-ary n-cubes," </title> <journal> IEEE Trans. Computers, </journal> <volume> vol. 40, no. 1, </volume> <pages> pp. 2-12, </pages> <month> January </month> <year> 1991. </year>
Reference-contexts: While this removes the possibility of deadlocks, having a restricted number of paths between two nodes reduces fault tolerance and can lead to a communication bottleneck. To alleviate such problems, adaptive routing algorithms for various topologies have been proposed. Linder and Harden <ref> [16] </ref> and Berman et al. [17] have developed fully-adaptive minimal path routing algorithms for k-ary n-cubes using (n + 1)2 n1 and 10 (n-1)+6 virtual channels, respectively. While these schemes provide the desired adaptivity, the cost in virtual channels as n increases can be high.
Reference: [17] <author> P. Berman, L. Gravano, G. Pifarre, and J. Sanz, </author> <title> "Adaptive deadlock- and livelock-free routing with all minimal paths in torus networks," </title> <booktitle> in Symposium on Parallel Algorithms and Architectures, </booktitle> <pages> pp. 3-12, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: While this removes the possibility of deadlocks, having a restricted number of paths between two nodes reduces fault tolerance and can lead to a communication bottleneck. To alleviate such problems, adaptive routing algorithms for various topologies have been proposed. Linder and Harden [16] and Berman et al. <ref> [17] </ref> have developed fully-adaptive minimal path routing algorithms for k-ary n-cubes using (n + 1)2 n1 and 10 (n-1)+6 virtual channels, respectively. While these schemes provide the desired adaptivity, the cost in virtual channels as n increases can be high.
Reference: [18] <author> C. Glass and L. Ni, </author> <title> "The turn model for adaptive routing," </title> <booktitle> in Proc. Int'l Symposium on Computer Architecture, </booktitle> <pages> pp. 278-287, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: While these schemes provide the desired adaptivity, the cost in virtual channels as n increases can be high. Glass and Ni <ref> [18] </ref> with the turn model and Chien and Kim [19] with planar-adaptivity propose methodologies for designing partially-adaptive deadlock-free algorithms using a limited number of virtual channels. This allows for some adaptivity without the high costs associated with fully-adaptive schemes.
Reference: [19] <author> A. A. Chien and J. H. Kim, </author> <title> "Planar-adaptive routing: Low-cost adaptive networks for multiprocessors," </title> <booktitle> in Proc. Int'l Symposium on Computer Architecture, </booktitle> <pages> pp. 268-277, </pages> <address> Aus-tralia, </address> <month> May </month> <year> 1992. </year>
Reference-contexts: While these schemes provide the desired adaptivity, the cost in virtual channels as n increases can be high. Glass and Ni [18] with the turn model and Chien and Kim <ref> [19] </ref> with planar-adaptivity propose methodologies for designing partially-adaptive deadlock-free algorithms using a limited number of virtual channels. This allows for some adaptivity without the high costs associated with fully-adaptive schemes.
Reference: [20] <author> J. Duato, </author> <title> "On the design of deadlock-free adaptive routing algorithms for multicomputers: </title> <booktitle> Design methodologies," Proc. Parallel Architectures and Languages, Europe, </booktitle> <pages> pp. 390-405, </pages> <month> June </month> <year> 1991. </year>
Reference: [21] <author> J. Duato, </author> <title> "Improving the efficiency of virtual channels with time-dependent selection functions," </title> <booktitle> Proc. Parallel Architectures and Languages, Europe, </booktitle> <pages> pp. 635-650, </pages> <year> 1992. </year>
Reference-contexts: Evaluation Metrics: Mean latency, throughput, throughput with faulty channels. Duato <ref> [21] </ref>: Routing Algorithm: Non-minimal fully adaptive algorithm based on Duato's method ology, dimension-ordered Virtual Channels: 1 and 2 Virtual Channel Multiplexing: Time-dependent selection function Virtual Channel Allocation: Not Applicable Network Size: 64, 256, 1024, 4096 Topology: Binary n-cube Destination Distribution: Uniform and exponential Message Generation Distribution: Uniform across two parameters Message
Reference: [22] <author> J. Duato, </author> <title> "A new theory of deadlock-free adaptive routing in wormhole networks," </title> <journal> IEEE Trans. Parallel and Distributed Systems, </journal> <year> 1993. </year>
Reference: [23] <author> K. Bolding, </author> <title> "Non-uniformities introduced by virtual channel deadlock prevention," </title> <type> Technical Report UW-CSE-92-07-07, </type> <institution> University of Washington, </institution> <month> July </month> <year> 1992. </year>
Reference-contexts: While adaptive algorithms provide better performance and added fault tolerance, static algorithms allow for faster, simpler, asynchronous switch designs [13] and do not suffer problems 6 with non-uniformities in resource usage <ref> [23] </ref>. One design alternative that can be considered is implementing dimension-ordered routing with extra virtual channels instead of adaptive routing since virtual channels provide substantial performance improvement [9] and are relatively inexpensive compared to the logic involved in implementing adaptive routing.
Reference: [24] <author> J. Dolter, </author> <title> A Programmable Routing Controller Supporting Multi-mode Routing and Switching in Distributed Real-Time Systems, </title> <type> PhD thesis, </type> <institution> University of Michigan, </institution> <month> Septem-ber </month> <year> 1993. </year>
Reference-contexts: From then on, the packet is routed within this subnetwork using dimension-ordered routing until it reaches its destination. In our experiments, the static subnetwork always contained two virtual channels. Additional virtual channels were then used in the adaptive subnetwork. In order to evaluate these algorithms, pp-mess-sim, a network simulator <ref> [24] </ref>, was used. pp-mess-sim provides a general framework for evaluating multicomputer router architectures. One of the features of pp-mess-sim is the ability to develop routing algorithms independently of 8 the switch architecture model.
Reference: [25] <author> K. G. Shin, </author> <title> "HARTS: A distributed real-time architecture," </title> <journal> IEEE Computer, </journal> <volume> vol. 24, no. 5, </volume> <pages> pp. 25-35, </pages> <month> May </month> <year> 1991. </year> <month> 18 </month>
Reference-contexts: For this study, two routing algorithms based on Duato's methodology were written, one of which was used in these simulations. pp-mess-sim currently includes a cycle-level model of SPIDER [14, 15], a communication adapter designed for HARTS <ref> [25] </ref>. Our simulations use this model as the basis for evaluating these algorithms. Some of the more important aspects of SPIDER include a demand-slotted bus interconnection between input and output channels and a fair arbitration scheme between virtual channels competing for a given physical link.
References-found: 25

