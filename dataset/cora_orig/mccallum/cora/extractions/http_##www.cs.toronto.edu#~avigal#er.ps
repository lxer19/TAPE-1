URL: http://www.cs.toronto.edu/~avigal/er.ps
Refering-URL: http://www.cs.toronto.edu/~avigal/publications.html
Root-URL: http://www.cs.toronto.edu
Email: Email: [avigal, ieretzn]@ie.technion.ac.il  
Title: Handling Change Management using Temporal Active Repositories  
Author: Avigdor Gal and Opher Etzion 
Address: Haifa, Israel, 32000  
Affiliation: Information Systems Engineering Department Faculty of Industrial Engineering and Management Technion Israel Institute of Technology  
Abstract: Business Re-engineering requires frequent changes in the enterprises' information systems, however the current technology of data dictionaries is not effective for the tracing of required changes and their management. In this paper we introduce an architecture of change management using active temporal repositories. Flexible change management allows the support of information about past or future versions of information systems, as well as the capability to retrieve and update temporal information. The implementation of change management in a temporal environment is carried out by the partition of the temporal universe among temporal agents, each of them handles a single version of an application with a required collaboration among them. The change management process, and the inter and intra agent processing are described in this paper. keywords: change management, information agents, cooperative databases, temporal databases, active databases
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> F. Allen, M. Loomis, M. </author> <title> Mannino The integrated Dictionary/Directory System. </title> <journal> ACM Computing Surveys, </journal> <volume> 14(2), </volume> <month> June </month> <year> 1982, </year> <pages> pp 245-286. </pages>
Reference-contexts: Alas, current information technologies, using abstractions such as data dictionaries, form an obstacle to the implementation of re-engineering due to difficulties in tracing the consequences of such changes on the information systems and on the application programs. Data dictionaries <ref> [1] </ref> have been proposed as abstractions of concepts that are vital to model information systems. However, the contribution of data dictionaries to change management has been marginal due to the following three major problems: * Data dictionaries are loosely coupled with the actual applications. <p> However, transactions may generate update operations with temporal validity that exceeds the limits of a single time region. Hence, cooperation among temporal agents is required. For example, a modification of Global-Range for a certain instance is issued in August 1, 1993, for the interval <ref> [June 25 1993, 1] </ref>. This retroactive modification activates (i2), in the old TDG. However, since a Global-Range is enforced only 7 days after the change, the consequences of the activation of (i2) is in the interval [July 2 1993, 1]. <p> This retroactive modification activates (i2), in the old TDG. However, since a Global-Range is enforced only 7 days after the change, the consequences of the activation of (i2) is in the interval <ref> [July 2 1993, 1] </ref>. This time interval belongs to a new temporal agent with a new TDG. Thus, a message regarding this activation should pass between the agents.
Reference: 2. <author> U. Dayal, M. Hsu, R. </author> <title> Ladin ATransactional Model for Long-Running Activities. </title> <booktitle> Proc VLDB 1991, </booktitle> <pages> pp 113-122 </pages>
Reference: 3. <author> S. Chakravarthy S. HiPAC: </author> <title> A research Project in Active, Time-Constrained Database Management, </title> <type> Final Technical Report, </type> <institution> XAIT-89-02, </institution> <month> July </month> <year> 1989. </year>
Reference: 4. <author> O. Etzion, A. Gal, A. </author> <title> Segev Temporal Active Databases, </title> <booktitle> Proceedings of the International Workshop on an Infrastructure for Temporal Database, </booktitle> <month> June </month> <year> 1993. </year>
Reference-contexts: The rest of the paper is organized as follows. Section 2 describes the data model of a temporal active database, based on <ref> [4] </ref>. Section 3 discusses the change management process. Section 4 concludes the paper. 2 The Temporal Active Repository In recent papers ([4], [9]) we investigated the combination of temporal database technology and active database technology as a key combination for supporting complex applications. <p> Repository In recent papers (<ref> [4] </ref>, [9]) we investigated the combination of temporal database technology and active database technology as a key combination for supporting complex applications. We use this combination as an information model for the repository. A full description of the temporal active database model can be found in [4]. Section 2.1 describes the temporal data model, section 2.2 describes the dependency language, section 2.3. describes the temporal dependency graph. 2.1 The Temporal Data Model The temporal database infrastructure [13] advocates a bi-temporal database that contain the two temporal characteristics of each data element. <p> For the change management application we add a third type of time: Decision Time (t d ) The time at which the data-item's value was decided in the database's domain of discourse <ref> [4] </ref>. For example, if a decision about the type of a product price was decided in November 11 1991, and inserted to the database in November 12 1991, t d would be November 11 1991, and t x would be November 12 1991.
Reference: 5. <author> O. </author> <title> Etzion - PARDES-A Data-Driven Oriented Active Database Model, </title> <booktitle> SIGMOD RECORD, 22(1),pp. </booktitle> <pages> 7-14, </pages> <month> Mar </month> <year> 1993. </year>
Reference-contexts: A temporal extension consists of time values of the different time types (t x , t d , t v ). 2.2 The Active Dimension in a Temporal Database For the active dimension we use the invariant language as introduced in the PARDES model <ref> [5] </ref>. An invariant is a declarative definition of a value dependency that should be satisfied for any instance in a defined temporal-element in the database. There are two types of invariants, derivations and constraints. A derivation states the dependency between a derived data-item and other data-items in the database. <p> The change management process creates derived update operations, executes them and evaluates relevant constraints. An update process for a non-temporal active database is presented in the PARDES project framework <ref> [5] </ref>. We extend the PARDES approach to support the following operations: 1. Schema evolution, i.e., the ability to change any component in the informa tion system and trace changes that have been performed over time. 2.
Reference: 6. <author> O. </author> <title> Etzion- Flexible Consistency Modes for Active Database Applications. </title> <journal> Information Systems, </journal> <volume> 18(6), </volume> <year> 1993, </year> <pages> pp 391-404. </pages>
Reference: 7. <author> O. </author> <title> Etzion The reflective Approach for Data-Driven Rules. </title> <journal> International Journal of Intelligent and cooperative Information Systems, </journal> <volume> 2(4), </volume> <pages> pp. 399-424, </pages> <month> Dec </month> <year> 1993. </year>
Reference-contexts: we propose an architecture for a change management based on a combination of several technologies: * The information repository technology which controls the application behavior in a tightly-coupled manner [12]. * The object oriented technology that enables flexible structuring. * The active technology that supports automatic activation of derived changes <ref> [7] </ref>. * The temporal technology which supports several versions of the information repository entities and sustain the modelling of time characteristics for any information about the application [15]. 1.2 A Motivating Example Throughout this paper we use the following example as both a motivating example and a demonstration of the change <p> Invariants Definitions 2.3 The Dependency Graph Data Model The data model is augmented by a dependency graph. As proposed in <ref> [7] </ref>, the nodes of the dependency graph designate the application's elements (data-items, invariants, and events).
Reference: 8. <author> S.K. </author> <title> Gadia The Role of Temporal Elements in Temporal Databases, </title> <journal> Data Engineering Bulletin, </journal> <volume> 7, </volume> <pages> pp. 197-203, </pages> <year> 1988. </year>
Reference: 9. <author> A. Gal, E. Etzion, A. </author> <title> Segev Representation of Highly-Complex Knowledge in a Database, </title> <journal> Journal of Intelligent Information Systems, </journal> <volume> 3(2), </volume> <pages> pp 185-203, </pages> <month> Mar. </month> <year> 1994. </year>
Reference-contexts: The rest of the paper is organized as follows. Section 2 describes the data model of a temporal active database, based on [4]. Section 3 discusses the change management process. Section 4 concludes the paper. 2 The Temporal Active Repository In recent papers ([4], <ref> [9] </ref>) we investigated the combination of temporal database technology and active database technology as a key combination for supporting complex applications. We use this combination as an information model for the repository. A full description of the temporal active database model can be found in [4].
Reference: 10. <author> S. Hudson, R. King - CACTIS: </author> <title> A Database System for Specification Functionally Defined Data, </title> <booktitle> proc. IEEE OOBDS Workshop, </booktitle> <year> 1986. </year>
Reference-contexts: This transitive closure is required to avoid update redundancy <ref> [10] </ref>. If a connector has been marked in this process, a message is passed to the appropriate agent, to expand its subgraph to include the transitive closure of the matching connector as well. Each temporal agent executes independently the atomic operations that were assigned to it.
Reference: 11. <author> S.E. </author> <title> Madnick Integration Technology: The reinvention of the Linkage Between Information Systems and Computer Science. </title> <note> To appear in Decision Support Systems </note>
Reference-contexts: 1 Introduction and Motivation 1.1 Background In today's business environment, re-engineering has become a vital process in many enterprises <ref> [11] </ref>. The process of re-engineering involves changes in the enterprise's structure and processes to meet its evolving goals in a constantly changing environment.
Reference: 12. <author> J. Mylopoulos, E. </author> <title> Yu Aligning Information System Strategy with Business Strategy: A Technical Perspective, A keynote address in the International Workshop on Next Generation Technologies and Systems, </title> <institution> Haifa, Israel, </institution> <month> June </month> <year> 1993. </year>
Reference-contexts: In this paper we propose an architecture for a change management based on a combination of several technologies: * The information repository technology which controls the application behavior in a tightly-coupled manner <ref> [12] </ref>. * The object oriented technology that enables flexible structuring. * The active technology that supports automatic activation of derived changes [7]. * The temporal technology which supports several versions of the information repository entities and sustain the modelling of time characteristics for any information about the application [15]. 1.2 A
Reference: 13. <author> N. Pissinou, </author> <title> et al Towards an Infrastructure for Temporal Databases, </title> <booktitle> Sigmod Record, </booktitle> <volume> 23(1), </volume> <pages> pp 35-51, </pages> <month> Mar </month> <year> 1994. </year>
Reference-contexts: A full description of the temporal active database model can be found in [4]. Section 2.1 describes the temporal data model, section 2.2 describes the dependency language, section 2.3. describes the temporal dependency graph. 2.1 The Temporal Data Model The temporal database infrastructure <ref> [13] </ref> advocates a bi-temporal database that contain the two temporal characteristics of each data element. Transaction Time (t x ) The commit time of the transaction which updated the data-item.
Reference: 14. <author> R. Snodgrass, I. </author> <title> Ahn Temporal Databases, </title> <booktitle> IEEE Computer 19, </booktitle> <pages> pp. 35-42, </pages> <month> Sep </month> <year> 1986. </year>
Reference: 15. <author> A.U. Tansel, Clifford J., Gadia S., Jajodia S., Segev A., Snodgrass R. </author> <title> Temporal Databases, </title> <publisher> The Benjamin/Commings Publishing Company, Inc., </publisher> <address> Redwood City, CA., </address> <year> 1993. </year> <title> This article was processed using the L a T E X macro package with LLNCS style </title>
Reference-contexts: tightly-coupled manner [12]. * The object oriented technology that enables flexible structuring. * The active technology that supports automatic activation of derived changes [7]. * The temporal technology which supports several versions of the information repository entities and sustain the modelling of time characteristics for any information about the application <ref> [15] </ref>. 1.2 A Motivating Example Throughout this paper we use the following example as both a motivating example and a demonstration of the change management architecture capabilities. A distributed information system consists of a global information repository and local information repositories with local agents.
References-found: 15

