URL: http://www.eecs.umich.edu/courses/eecs452/report.ps
Refering-URL: http://www.eecs.umich.edu/courses/eecs452/first_page.html
Root-URL: http://www.cs.umich.edu
Title: DIGITAL SIGNAL PROCESSING DESIGN LABORATORY LABORATORY MANUAL  
Author: Osama S. Haddadin and Emad S. Ebbini 
Affiliation: EECS 452  Department of Electrical Engineering and Computer Science The University of Michigan  
Abstract-found: 0
Intro-found: 1
Reference: [1] <institution> DSP Technology DSPT SigLab User's Guide, </institution> <note> Volume 1 of SigLab Manual, version 1.1, DSP Technology, </note> <year> 1995. </year>
Reference-contexts: System Identification c:nmatlabnsiglabnvid Creates models of dynamic systems. Network Analyzer c:nmatlabnsiglabnvna Measure frequency response of dynamic systems. Oscilloscope c:nmatlabnsiglabnvos Time domain measurements. Spectrum Analyzer c:nmatlabnsiglabnvsa FFT-based spectrum estimation. Swept Sine Analyzer c:nmatlabnsiglabnvss Frequency response using sine excitation. The DSPT SigLab User's Guide <ref> [1] </ref> provides a complete discussion on each of the VIs in Chapters 5 through 10. A brief introduction to the VIs is also given in Chapter 4 [1]. Additional features of the SigLab include the star file conversion for modal analysis, and the virtual transient capture recorder. <p> Spectrum Analyzer c:nmatlabnsiglabnvsa FFT-based spectrum estimation. Swept Sine Analyzer c:nmatlabnsiglabnvss Frequency response using sine excitation. The DSPT SigLab User's Guide <ref> [1] </ref> provides a complete discussion on each of the VIs in Chapters 5 through 10. A brief introduction to the VIs is also given in Chapter 4 [1]. Additional features of the SigLab include the star file conversion for modal analysis, and the virtual transient capture recorder. The MATLAB M-file star.m (stored in the c:nmatlabnsiglabnmod directory) provides SigLab with modal analysis capability by using SMS-STAR, the PC-based modal analysis package from GenRad. <p> The MATLAB M-file star.m (stored in the c:nmatlabnsiglabnmod directory) provides SigLab with modal analysis capability by using SMS-STAR, the PC-based modal analysis package from GenRad. Refer to Chapter 11 of the DSPT SigLab User's Guide <ref> [1] </ref> for a general procedure of the star file conversion for modal analysis. The virtual transient capture recorder, vcap, provides the capability to capture time domain records to memory or disk, and play them back. Refer to Chapter 12 of the DSPT SigLab User's Guide [1] for a basic operation of <p> the DSPT SigLab User's Guide <ref> [1] </ref> for a general procedure of the star file conversion for modal analysis. The virtual transient capture recorder, vcap, provides the capability to capture time domain records to memory or disk, and play them back. Refer to Chapter 12 of the DSPT SigLab User's Guide [1] for a basic operation of the virtual transient capture recorder. You can also run a demonstration program which is installed on work spaces 2, 3, 4, and 6. This program provides an easy way of learning the features of the SigLabs. The demonstartion 40 CHAPTER 4.
Reference: [2] <author> M. </author> <title> El-Sharkawy Signal Processing, Image Processing and Graphics Applications With Mo-torola's DSP96002 Processor, </title> <publisher> Prentice-Hall, Inc. </publisher> <year> 1994. </year>
Reference-contexts: For a complete discussion of the DSP56002, please refer to the DSP56002 Digital Signal Processor User's Manual [5]. 3.3 The DSP96002 DSP The DSP96002 is a 32-bit IEEE floating-point, general purpose digital signal processor <ref> [2] </ref>. The DSP96000ADS Application Development System (ADS) is a hardware and software development tool which uses the DSP96002 processor for helping in the design of real-time digital signal processing applications. In this section, we present a general description of the DSP96002 and some of its features and characteristics.
Reference: [3] <author> E. C. Ifeachor and B. W. Jervis, </author> <title> Digital Signal Processing: A Practical Approach, </title> <publisher> Addison-Wesley, </publisher> <year> 1993. </year>
Reference-contexts: The microprocessors we use belong to either the Texas Instruments TMS320 family or to the Motorola DSP family. These machines are classified as general purpose digital signal processors (DSP), in the sense that they are not algorithm-specific or application-specific digital signal processors <ref> [3] </ref>. Throughout our investigation of the microprocessors and DSP algorithms we make use of available development tools (software and hardware) which aid in debugging the C and assembly language code. <p> Finally, we give concluding remarks in Chapter 6. Chapter 2 Texas Instruments Digital Signal Processors The Texas Instruments TMS320 family is a set of either fixed-point or floating-point general purpose digital signal processors (DSPs) <ref> [3] </ref>. They span five generations, of which the TMS320C1x, the TMS320C2x and the TMS320C5x are fixed-point, while the TMS320C3x and the TMS320C4x are floating-point. Most of our work will be on the fixed point DSPs. In particular, the lab experiments are implemented for the TMS320C25.
Reference: [4] <author> Motorola, </author> <title> DSP56000/DSP56001 Digital Signal Processor User's Manual, </title> <journal> DSP56000UM/AD, Rev. </journal> <volume> 2, </volume> <month> Motorola </month> <year> 1990. </year>
Reference-contexts: Its architecture is dual natured in that there are two independent, expandable data memory spaces, X and Y, two address generation units (AGUs), and a data arithmetic logic unit (ALU) having two accumulators and two shifter/limiter circuits. Refer to the DSP56000/DSP56001 Digital Signal Processor: User's Manual <ref> [4] </ref> for a complete discussion on the architecture, and the instruction set.
Reference: [5] <institution> Motorola DSP56002 Digital Signal Processor User's Manual, DSP56002UM/AD, </institution> <note> Rev. 1, Mo-torola 1993. </note>
Reference-contexts: For a complete discussion of the DSP56002, please refer to the DSP56002 Digital Signal Processor User's Manual <ref> [5] </ref>. 3.3 The DSP96002 DSP The DSP96002 is a 32-bit IEEE floating-point, general purpose digital signal processor [2]. The DSP96000ADS Application Development System (ADS) is a hardware and software development tool which uses the DSP96002 processor for helping in the design of real-time digital signal processing applications.
Reference: [6] <institution> Motorola DSP56002 Digital Signal Processor Application Development System Reference Manual, </institution> <note> Rev. 5.10, Motorola 1994. </note>
Reference-contexts: Refer to the Digital Signal Processor Application Development System Reference Manual for a comprehensive discussion on the ADS and ADS software package <ref> [6] </ref>. The DSP96000 COFF assembler can be invoked by typing asm96000 [-L [&lt;listfile.lst&gt;]] [-B [&lt;objectfile.cln&gt;]] &lt;filename.asm&gt;. This program translates the source file DSP96002 statements, which are part of &lt;filename&gt;, into an object program named &lt;objectfile.cln&gt;. It also creates a listing file, &lt;listfile.lst&gt;.
Reference: [7] <author> Motorola DSP Development Software: </author> <title> Motorola DSP9002 Optimizing C Compiler User's Manual, Motorola 1992. </title>
Reference-contexts: Finally, we need to invoke a COFF to LOD format converter by typing cldlod [&lt;filename.cld&gt; &gt; &lt;lodfile.lod&gt;]. The LOD file format is the format needed by the ADS software. For a complete discussion on these and other tools, refer to the DSP Development Software <ref> [7] </ref>. Other tools, which are used to prepare a LOD file from a C source program, are also available as part of this DSP96002 development software package [7]. 3.4 Conclusion We presented a brief discussion of the Motorola general purpose floating-point and fixed-point digital signal processor. <p> For a complete discussion on these and other tools, refer to the DSP Development Software <ref> [7] </ref>. Other tools, which are used to prepare a LOD file from a C source program, are also available as part of this DSP96002 development software package [7]. 3.4 Conclusion We presented a brief discussion of the Motorola general purpose floating-point and fixed-point digital signal processor. The presentation is, again, an overview of the key features which make such products useful in digital signal processing applications.
Reference: [8] <institution> Tektronix, XYZs of Analog and Digital Oscilloscopes: Basic Concepts, 070-8690-01, Tektronix. </institution>
Reference-contexts: SIGNAL GENERATION AND ANALYSIS 4.1 Tektronix Digital Oscilloscopes In this section, we briefly discuss the main features of the Tektronix digital oscilloscopes, the TDS 310 and the TDS 410. For a discussion on the basic concepts of oscilloscopes, refer to the XYZs of Analog and Digital Oscilloscopes: Basic Concepts <ref> [8] </ref>. The Tektronix TDS 310 two channel oscilloscopes are digital signal processors and are useful tools for displaying and measuring waveforms.
Reference: [9] <author> Tektronix, </author> <title> TDS 310, TDS 320 & TDS 350 Two Channel Oscilloscopes: Instruction Manual, </title> <institution> 070-8568-03, Tektronix. </institution>
Reference-contexts: The Tektronix TDS 310 two channel oscilloscopes are digital signal processors and are useful tools for displaying and measuring waveforms. Refer to the Operation chapter of the TDS 310, TDS 320 & TDS 350 Two Channel Oscilloscopes: Instruction Manual <ref> [9] </ref> for a complete discussion on how to operate the TDS 310 oscilloscope. The TDS 310 oscilloscope has the following features: * Two input channels, each with a record length of 1000 samples and 8-bit vertical resolution.
Reference: [10] <author> Tektronix, TDS 410A, TDS 420A & TDS 460A Digitizing Oscilloscopes: </author> <title> User Manual, </title> <institution> 070-9219-00, Tektronix. </institution>
Reference-contexts: The TDS 410 digitizing oscilloscope is a superb tool for acquiring, displaying, and measuring waveforms. For a comprehensive discussion of the TDS 410 operation and reference, refer to Chapters 2 and 3 of the TDS 410A, TDS 420A & TDS 460A Digitizing Oscilloscopes: User Manual <ref> [10] </ref>. Also the Appendices chapter list options, accessories, and the product specifications.
Reference: [11] <author> Texas Instruments, </author> <title> TMS320 Fixed-Point DSP Assembly Language Tools: User's Guide, </title> <institution> SPRU018C, Texas Instruments, </institution> <year> 1991. </year>
Reference-contexts: The debugger takes an executable version of the assembly language code as input. This is prepared by assembling and linking the assembly language code using the TMS320 Fixed-Point DSP Assembly Language Tools <ref> [11] </ref>. The assembling and linking step is preceded by a compiling step in the case of C-source level language. The assembler translates assembly language source files into machine language object file in common object file format (COFF). Source files can contain instructions, assembler directives, and macro directives. <p> It is helpful to have a basic understanding of COFF for more efficient programming of the TMS320 devices. Chapter 2 of the TMS320 Fixed-Point DSP Assembly Language Tools: User's Guide <ref> [11] </ref> provides a detailed discussion of this object format. A COFF file is created from each assembly language source code by typing, dspa &lt;inputfile&gt; [-options] at the DOS command line. The dspa is the command that invokes the assembler, and &lt;inputfile&gt; is file name of the assembly language source file. <p> If the -l option is used in the command line, the assembler creates a listing file which is also given the input file name with .lst as an extension. Chapters 3 and 4 of the TMS320 Fixed-Point DSP Assembly Language Tools: User's Guide <ref> [11] </ref> provides a more detailed discussion of the assembler, the assembler options, and the assembler directives. <p> Note that the command line can be part of a .mem file (as discussed in Laboratory Experiment 1). In this case, the linker is invoked by typing dsplnk &lt;filename.mem&gt;. Refer to Chapter 8 of the TMS320 Fixed-Point DSP Assembly Language Tools: User's Guide <ref> [11] </ref> for the detailed discussion of the linker, a linker options summary, and other .mem file commands such as the memory directive and sections directive. Table 2.2: A summary of the assembler directives.
Reference: [12] <institution> Texas Instruments, </institution> <note> TMS320C2x User's Guide, </note> <institution> SPRU014C, Texas Instruments, </institution> <year> 1993. </year>
Reference-contexts: Other enhanced features which contribute to the high performance of the TMS320C25 include the instruction set of 133 instructions, eight auxiliary registers, an eight-level hardware stack, 4K words of on-chip program ROM, a bit-reversed indexed addressing mode, and low power dissipation inherent to the CMOS process <ref> [12] </ref>.
Reference: [13] <institution> Texas Instruments, </institution> <note> TMS320C2x C Source Debugger: User's Guide, SPRU070, Texas Instruments, 1991. 53 54 BIBLIOGRAPHY </note>
Reference: [14] <institution> Texas Instruments, </institution> <note> TMS320C5x User's Guide, </note> <institution> SPRU056B, Texas Instruments, </institution> <year> 1993. </year>
Reference: [15] <author> Texas Instruments, </author> <title> TMS320C5x C Source Debugger: User's Guide, </title> <institution> SPRU055B, Texas Instruments, </institution> <year> 1994. </year>
Reference-contexts: The TMS320C50 digital signal processor is available in the lab as part of an evaluation module, the TMS320C50 EVM, and as part of a DSP starter kit, the TMS320C50 DSK. The evaluation module is supplied with its own C Source Debugger <ref> [15] </ref>, which is similar to the C Source Debugger presented, in Section 2.1, as part of the TMS320C25 development tools. The TMS320C50 EVM and the associated software tools are discussed in Subsection 2.2.1. The TMS320C50 DSK comes with its own assembler and debugger which are very simple to use. <p> We are also supplied with an assembler, and a windows-oriented debugger which simplifies code development and debugging capabilities. In this section, we briefly discuss the software tools and then outline the features of the EVM board. The TMS320C5x C Source Debugger <ref> [15] </ref> is a windows-oriented user-interface software package which simplifies developing, testing and debugging TMS320C50 C programs as well as assembly language code. This debugger is very similar to the TMS320C2x C Source Debugger presented in Section 2.1.
Reference: [16] <institution> Texas Instruments, </institution> <note> TMS320C5x DSP Starter Kit: User's Guide, </note> <institution> SPRU101, Texas Instruments, </institution> <year> 1994. </year>
Reference-contexts: The &lt;filename.dsk&gt; may then be loaded using the load menu. For more information on the TMS320C50 DSK assembler, assembler directives, or debugger refer to Chapter 4, Chapter 5, or Chapter 6 of the TMS320C5x DSP Starter Kit: User's Guide <ref> [16] </ref>, respectively. 2.3 The TMS320C30 DSP The TMS320C3x generation of digital signal processors are high-performance CMOS 32-bit floating-point devices in the Texas Instruments TMS320 family of single-chip, general purpose digital signal processors. 20 CHAPTER 2.
Reference: [17] <author> Texas Instruments, </author> <title> TMS320 Floating-Point DSP Assembly Language Tools: User's Guide, </title> <institution> SPRU035A, Texas Instruments, </institution> <year> 1991. </year>
Reference-contexts: Refer to Chapters 4, 5, and 6 of the TMS320 Floating-Point DSP Assembly 2.4. THE TMS320C40 DSP 23 Language Tools: User's Guide for a complete discussion on the assembler directives, the assembly language instructions, and the macro directives, respectively <ref> [17] </ref>. To invoke the assembler, enter asm30 [&lt;inputfile&gt; [&lt;objectfile&gt; [&lt;listingfile&gt;]]] [-options], where &lt;inputfile&gt; names the assembly language source file, &lt;objectfile&gt; names the object file that the assembler creates, &lt;listingfile&gt; names the optional listing file that the assembler can create (when using the -l option).
Reference: [18] <institution> Texas Instruments, </institution> <note> TMS320C4x User's Guide, </note> <institution> SPRU063, Texas Instruments, </institution> <year> 1993. </year>
Reference: [19] <author> Texas Instruments, </author> <title> TMS320C3x C Source Debugger: User's Guide, </title> <institution> SPRU053, Texas Instruments, </institution> <year> 1991. </year>
Reference-contexts: The Evaluation Module The TMS320C30 digital signal processor is available in the lab as part of an evaluation module. The TMS320C30 Evaluation Module (EVM) is a development tool that allow execution and debugging of application programs using the TMS320C30 C Source Debugger <ref> [19] </ref>. When we connect analog input and analog output to the EVM, it becomes a simple signal analysis tool. The EVM also allows for transferring data to and from the host PC through the EVM's 16-bit communications port. <p> TEXAS INSTRUMENTS DIGITAL SIGNAL PROCESSORS * Requires approximately 1 amp of current at 5 volts. interconnects include emulation interface, the host interface, an analog interface, a serial port interface, and memory. The user-interface with the TMS320C30 EVM is provided by the TMS320C30 C Source Debugger <ref> [19] </ref>. This debugger is an advanced programmer's interface that helps in developing, testing, and refining TMS320C3x C programs (compiled with the TMS320C3x optimizing ANSI C compiler) and assembly language programs. One can actually choose to debug programs in C, assembly language, or both. <p> The options parameter supply the debugger with additional information such as identifying the port address, identifying a new initialization file, etc. Please refer to the TMS320C3x C Source Debugger: User's Guide for additional information, and an introductory tutorial <ref> [19] </ref>. Also refer to Chapter 11 of the TMS320C3x C Source Debugger: User's Guide for an alphabetical summary of the debugger commands. An assembly program is first assembled and linked before it may be loaded into the debugger.
Reference: [20] <institution> Texas Instruments, </institution> <note> TMS320C4x User's Guide, </note> <institution> SPRU063, Texas Instruments, </institution> <year> 1993. </year>
Reference-contexts: For further information, refer to the TMS320C4x User's Guide <ref> [20] </ref>.
Reference: [21] <author> Texas Instruments, </author> <title> TMS320C4x C Source Debugger: User's Guide, </title> <institution> SPRU054, Texas Instruments, </institution> <year> 1993. </year>
Reference: [22] <institution> Texas Instruments, TMS320C4x Parallel Processing Development System, SPRU075A, Texas Instruments, </institution> <year> 1993. </year>
Reference-contexts: One can develop, benchmark, and evaluate code (in real-time) in such a development environment, using the power and speed of the TMS320C4x PPDS. Figure 8.6 shows a block diagram of major components of this system. For further information on the PPDS, refer to the TMS320C4x Parallel Processing Development System <ref> [22] </ref>.
References-found: 22

