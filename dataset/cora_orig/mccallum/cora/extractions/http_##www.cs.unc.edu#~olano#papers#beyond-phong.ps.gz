URL: http://www.cs.unc.edu/~olano/papers/beyond-phong.ps.gz
Refering-URL: http://www.cs.unc.edu/~olano/papers/
Root-URL: http://www.cs.unc.edu
Title: Precision Normals (Beyond Phong)  
Author: T. Marc Olano Terry S. Yoo 
Keyword: CR Categories: I.3.7 [Computer Graphics] Color, shading, shadowing, and texture; I.3.5 [Computer Graphics] Computational Geometry and Object Modeling Curve, Surface and Geometric Algorithms; I.3.3 [Computer Graphics] Picture/Image Generation Display algorithms. Additional Keywords and Phrases: differential geometry, parametric surfaces, displacement mapping, bump mapping, linear normal interpolation, Phong lighting model, parametric normal interpolation.  
Address: Chapel Hill, NC 22599-3175, USA  
Affiliation: Department of Computer Science University of North Carolina  
Abstract: Almost all graphics architectures today support Gouraud shading, linear color interpolation between vertices; system designers aim toward a Phong shading model, linear interpolants of surface normals with a lighting model that supports both diffuse and specular components, as a superior means of rendering accurate images. However, the Phong model still retains serious artifacts. In this paper, we point out the shortcomings of linear interpolation of normals, and present a surface interrogation method for parametrically defined surfaces. 
Abstract-found: 1
Intro-found: 1
Reference: [Akeley 92] <author> Akeley, Kurt. </author> <type> Personal communication. </type>
Reference-contexts: While it might not have been practical in 1978, cubic or higher interpolation of normals could easily be achieved in hardware today. Several architectures are already evaluating quadratic or cubic functions for various other purposes <ref> [Fuchs 89, Kirk 91, Akeley 92] </ref>. And for renormalization, HP has a hardware divide for z [Norrod 92] and square roots are similar in complexity to multiplies.
Reference: [Blinn 78] <author> Blinn, </author> <title> James F..Computer Display of Curved Surfaces, </title> <type> PhD Dissertation, </type> <month> December </month> <year> 1978, </year> <institution> University of Utah. </institution>
Reference-contexts: A traditional Phong shading model with linear interpolation of normals is simply not sufficient. What are the alternatives? There is a rich history in accurate rendering of parametric surfaces. Blinn performed much of the initial work <ref> [Blinn 78] </ref>, and laid the foundations for what was to follow as the capabilities of graphics systems grew. <p> Max also used a quadratic function to interpolate depth and texture coordinates [Max 89]. Blinn suggests cubic Hermite interpolation of depth and texture coordinates to match their value and derivatives <ref> [Blinn 78] </ref>. He also suggests the texture coordinates of a spline patch could be used to directly evaluate the normal, though he preferred exact rendering of the surface. Schweitzer and Cobb implemented cubic normal interpolation for scanline rendering limited to bicubic surfaces [Schweitzer 82].
Reference: [Chang 1989] <author> Chang, Sheue-Ling, Shantz, </author> <title> Michael and Robert Rocchetti Rendering Cubic Curves and Surfaces with INterger Adaptive Forward Differencing Computer Graphics, </title> <booktitle> Volume 23, Number 3 (Proceedings SIGGRAPH 1989), </booktitle> <pages> pp. 157-166, </pages> <month> July </month> <year> 1989. </year>
Reference: [Cook 1987] <author> Cook, Robert L., Loren Carpenter, Edwin Catmul, </author> <title> The Reyes Rendering Architecture, </title> <journal> Computer Graphics, </journal> <volume> Volume 21, </volume> <booktitle> Number 4 (Proceedings SIGGRAPH 1987), </booktitle> <pages> pp. 95-102, </pages> <month> July </month> <year> 1987. </year>
Reference: [Farin 90] <author> Farin, Gerald. </author> <title> Curves and Surfaces for Computer Aided Geometric Design. </title> <booktitle> 2nd Edition. </booktitle> <address> San Diego, California: </address> <publisher> Academic Press, </publisher> <year> 1990. </year>
Reference: [Fuchs 89] <author> Fuchs, Henry, et. al. </author> <title> "Pixel-Planes 5: A Heterogeneous Multiprocessor Graphics System Using Processor-Enhanced Memories," </title> <journal> Computer Graphics, </journal> <volume> Volume 23, </volume> <booktitle> Number 3 (Proceedings SIGGRAPH 29). </booktitle> <pages> pp. 79-88, </pages> <month> July </month> <year> 1989 </year>
Reference-contexts: While it might not have been practical in 1978, cubic or higher interpolation of normals could easily be achieved in hardware today. Several architectures are already evaluating quadratic or cubic functions for various other purposes <ref> [Fuchs 89, Kirk 91, Akeley 92] </ref>. And for renormalization, HP has a hardware divide for z [Norrod 92] and square roots are similar in complexity to multiplies.
Reference: [Kajiya 82] <author> Kajiya, </author> <title> James Raytracing Parametric Patches, </title> <journal> Computer Graphics, </journal> <volume> Volume. 16, </volume> <booktitle> Number 3 (Proceedings SIGGRAPH 1982), </booktitle> <pages> pp. 245-254, </pages> <month> July </month> <year> 1982. </year>
Reference-contexts: Shading with linear normal interpolation. Middle: parametric surface normals. Right: True surface rendering. Note the spout "elbow": In the Phong model, specular highlights concentrate at polygon boundaries. techniques that followed, there has been significant interest in the direct evaluation of the parametric forms. Kajiya discusses ray tracing parametric patches <ref> [Kajiya 82] </ref>, solving for exact positions of ray intersection from the parametric description. Shantz and Lien/Chang [Shantz 87][Chang 89] employ adaptive forward differencing to shade bicubic patches. Surfaces are incrementally split into several bicubic curves that leave no pixelsized gaps.
Reference: [Kirk 90] <author> Kirk, David and Douglas Voorhies, </author> <title> "The Rendering Architecture of the DN10000VS," </title> <journal> Computer Graphcis, </journal> <volume> Volume 24, </volume> <booktitle> Number 4 (Proceedings SIGGRAPH 1990), </booktitle> <pages> pp. 299-272, </pages> <month> August </month> <year> 1990 </year>
Reference: [Koenderink 90] <author> Koenderink, Jan J. </author> <title> Solid Shape. </title> <address> Cambridge, Massachusetts: </address> <publisher> the MIT Press, </publisher> <year> 1990. </year>
Reference-contexts: What are the effects of the surface normal on visual appearance? Following computer vision research, we address at this question with differential geometry . Applications of differential geometry to three dimensional curves and surfaces are discussed in Koenderink <ref> [Koenderink 90] </ref>. Much of the surface behavior in which we are interested can be understood by analyzing the principle curvatures (k 1 and k 2 ) at points along the surface.
Reference: [Max 89] <author> Max, Nelson, </author> <title> Smooth Appearance for Polygonal Suraces, The Visual Computer, Volume ?, Number 5, </title> <publisher> Springer-Verlag, </publisher> <pages> pp. 160-173, </pages> <year> 1989. </year>
Reference-contexts: The behavior of geometric properties of surfaces has always been a concern of those interested in the generation of smooth surfaces. Moreton and Sequin [Moreton 1992] discuss the behavior of surface curvature at patch boundaries and describe a system for guaranteeing surface fairness. Nelson Max <ref> [Max 89] </ref> discusses ensuring C 1 smoothness of normals across triangulated surfaces and generates smooth silhouettes and normals. We employ many of these ideas within the context of shading. <p> Nelson Max presented a method using quadratic Bzier triangles to achieve C 1 normal continuity where he divided each triangle into six to provide the additional degrees of freedom. Max also used a quadratic function to interpolate depth and texture coordinates <ref> [Max 89] </ref>. Blinn suggests cubic Hermite interpolation of depth and texture coordinates to match their value and derivatives [Blinn 78]. He also suggests the texture coordinates of a spline patch could be used to directly evaluate the normal, though he preferred exact rendering of the surface. <p> At these locations, three specular points should come together. For the images in this paper, we used the normals of the underlying surface, evaluated from the linearly interpolated texture coordinates across the polygon. For improved images, we should use higher order interpolants for texture coordinates as well <ref> [Max 89] </ref>. Since the true correctness of our normals depends on the correctness of our parametric texture coordinates, we have called this parametric interpolation. A simple example is shown in figure 3. The right most image Olano/Yoo Precision Normals (Beyond Phong) 3 actual geometry of the surface.
Reference: [Moreton 92] <author> Moreton, Henry P. and Carlo H. Sequin, </author> <title> "Functional Optimization for Fair Surface Design" Computer Graphcis, </title> <booktitle> Volume 26, Number 2 (Proceedings SIGGRAPH 1992), </booktitle> <pages> pp. 167 - 176, </pages> <month> July </month> <year> 1992 </year>
Reference: [Norrod 91] <author> Norrod, Forrest. </author> <type> Personal Communication. </type>
Reference: [Shantz 1987] <author> Shantz, Michael and Sheue-Ling Lien., </author> <title> Shading Bicubic Patches, </title> <booktitle> Computer Graphics , Volume 21, Number 4 (Proceedings SIGGRAPH 1987), </booktitle> <pages> pp. 189-196, </pages> <month> July </month> <year> 1987. </year>
Reference: [Schweitzer 82] <author> Schweitzer , Dino and Elizabeth Cobb. </author> <title> Scanline Rendering of Parametric Surfaces, </title> <journal> Computer Graphics, </journal> <volume> Volume. 16, </volume> <booktitle> Number 3 (Proceedings SIGGRAPH 1982), </booktitle> <pages> pp. 265-273, </pages> <month> July </month> <year> 1982. </year>
Reference-contexts: He also suggests the texture coordinates of a spline patch could be used to directly evaluate the normal, though he preferred exact rendering of the surface. Schweitzer and Cobb implemented cubic normal interpolation for scanline rendering limited to bicubic surfaces <ref> [Schweitzer 82] </ref>. While it might not have been practical in 1978, cubic or higher interpolation of normals could easily be achieved in hardware today. Several architectures are already evaluating quadratic or cubic functions for various other purposes [Fuchs 89, Kirk 91, Akeley 92].
Reference: [Upstill 90] <author> Upstill, Steve. </author> <title> The Renderman Companion. </title> <address> Reading, Massachusetts: </address> <publisher> Addison-Wesley Publishing Company, </publisher> <year> 1990. </year>
References-found: 15

