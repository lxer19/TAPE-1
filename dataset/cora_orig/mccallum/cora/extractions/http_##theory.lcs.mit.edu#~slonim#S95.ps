URL: http://theory.lcs.mit.edu/~slonim/S95.ps
Refering-URL: http://theory.lcs.mit.edu/~slonim/protein.html
Root-URL: 
Email: slonim@theory.lcs.mit.edu  
Title: Algorithms for Modeling and Measuring Proteins  
Author: Donna K. Slonim 
Keyword: computational biology, protein modeling, efficient algorithms, protein vol umes, measuring unions of spheres, computational geometry.  
Note: Supported by a grant from the Siemens Corporation.  
Date: June 9, 1995  
Address: 545 Technology Square Cambridge, MA 02139  
Affiliation: MIT Laboratory for Computer Science  
Abstract: In this paper we investigate efficient algorithms for computing the volume and surface area of protein molecules and for graphically displaying the molecules in real time. Protein molecules are modeled by sets of overlapping spheres in R 3 . We summarize and critique three papers in the field, and we add several new contributions of our own. First, we present and discuss a new randomized algorithm for computing volumes of proteins. This algorithm is faster than any previously-known algorithm. We also suggest several extensions to this research, including ideas for detecting errors in the x-ray crystallography data used as input. Finally, we propose applying a recent machine-learning result [BCGS95] to determine the tolerance of errors in the data. 
Abstract-found: 1
Intro-found: 1
Reference: [AGR94] <author> Nancy Amato, Michael Goodrich and Edgar Ramos. </author> <title> Parallel algorithms for higherdimensional convex hulls. </title> <booktitle> In Proceedings of the 35th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 683-693, </pages> <year> 1994. </year>
Reference-contexts: It is once again worth asking whether the algorithms in these papers could be implemented efficiently in parallel. The difficult part is the parallel computation of the power diagram. Using algorithms due to Amato, Goodrich, and Ramos <ref> [AGR94] </ref>, one can construct a power diagram for n 3-dimensional balls in parallel in O (log n) time in the EREW PRAM model.
Reference: [Aur88] <author> F. Aurenhammer. </author> <title> Improved algorithms for discs and balls using power diagrams. </title> <journal> Journal of Algorithms, </journal> <volume> 9 </volume> <pages> 151-161, </pages> <year> 1988. </year> <month> 18 </month>
Reference-contexts: One can certainly test whether the query ball intersects each of the other balls in the molecule in O (n) time. However, with some preprocessing it may be possible to optimize the time for each intersection query. The best bound previously known for intersection queries is due to Aurenhammer <ref> [Aur88] </ref>, who proves that by computing the power diagram of B (using O (n 2 ) time and space for an arbitrary arrangement of balls), the question of whether a given point intersects U (B) can be answered in O (log 2 n) time. <p> The analysis of the implementation in "Measuring Proteins: : : " relies on the statement that "for dense distributions common to proteins," the number of simplices in D is generally O (n). (The worst-case theoretical bound for jDj in R 3 is O (n 2 ) <ref> [Aur88] </ref>. <p> To compute the volume of q b , we divide b " ( T x2X x) into tetrahedrons, each of which is incident to the center of ball b, and into sectors where the surface of b is on the surface of q b . (Aurenhammer <ref> [Aur88] </ref> shows how to do this in R 3 in O (k 2 ) time.) Thus, we can compute the volume of q b by summing the volumes of all such tetrahedrons and adding the volumes of all the sectors.
Reference: [BCGS95] <author> Avrim Blum, Prasad Chalasani, Sally Goldman and Donna Slonim. </author> <title> Learning with unreliable boundary queries. </title> <booktitle> To appear in the Proceedings of the Eighth Annual ACM Conference on Computational Learning Theory, </booktitle> <month> July, </month> <year> 1995. </year>
Reference-contexts: We also suggest several directions for future work, including ways to detect errors in the x-ray crystallography data used as input for these algorithms. Finally, we propose using a new learning model <ref> [BCGS95] </ref> to determine the tolerance of errors in the data and to ensure that the data actually contains the important structural information about the protein. Our paper is organized as follows. <p> An algorithm that flagged cases in which individual atoms violated the pre-determined constraints might detect other types of errors in the data as well. 6 Learning Proteins with Unreliable Boundary Queries A recent paper by Blum, Chalasani, Goldman and Slonim <ref> [BCGS95] </ref> describes a model of learning with a limited type of noise: noise near the boundary of the target concept. Because of the unreliability of x-ray crystallography data, which derives estimates of stationary positions for moving atoms, the unreliable boundary query (UBQ) noise model seems particularly appropriate for representing proteins.
Reference: [BT91] <author> Carl Branden and John Tooze. </author> <title> Introduction to protein structure. </title> <publisher> Garland Publishing, Inc., </publisher> <address> New York, </address> <year> 1991. </year>
Reference: [CEG+90] <author> K. L. Clarkson, H. Edelsbrunner, L. J. Guibas, M. Sharir and E. Welzl. </author> <title> Combinatorial complexity bounds for arrangements of curves and spheres. </title> <journal> Discrete and Computational Geometry, </journal> <volume> 5 </volume> <pages> 99-160, </pages> <year> 1990. </year>
Reference: [Con83] <author> M. L. </author> <title> Connolly. </title> <journal> Solvent-accessible surfaces of proteins and nucleic acids. Science, </journal> <volume> 221 </volume> <pages> 709-713, </pages> <year> 1983. </year>
Reference: [DE92] <author> C. J. A. Delfinado and H. Edelsbrunner. </author> <title> An incremental algorithm for betti numbers of simplicial complexes. </title> <type> Technical Report UIUCDCS-R-93-1787, </type> <institution> Computer Science Department, University of Illinois at Urbana-Champaign, </institution> <year> 1992. </year>
Reference: [DC91] <author> B. R. Donald and D. R. Chang. </author> <title> On the complexity of computing the homology type of a triangulation. </title> <booktitle> In 32nd Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 650-661, </pages> <year> 1991. </year>
Reference-contexts: Donald and Chang <ref> [DC91] </ref> explain that homology groups can be used to determine if two structures are topologically equivalent. This might be useful when designing a new molecule to fulfill the function of a missing or malfunctioning protein.
Reference: [DFK91] <author> M.E. Dyer, A. Frieze, and R. Kannan. </author> <title> A random polynomial time algorithm for approximating the volume of convex bodies. </title> <journal> Journal of the ACM, </journal> <volume> 38 </volume> <pages> 1-17, </pages> <year> 1991. </year>
Reference-contexts: Because of the unreliability of x-ray crystallography data, which derives estimates of stationary positions for moving atoms, the unreliable boundary query (UBQ) noise model seems particularly appropriate for representing proteins. Dyer, Frieze and Kannan <ref> [DFK91] </ref>, in their paper on estimating volumes of convex bodies, suggest using a model in which information about the body is derived using membership queries. A membership query for this problem just asks whether a point in R 3 is contained in U (B) or not.
Reference: [Dug70] <author> James Dugundji. </author> <title> Topology. </title> <publisher> Allyn & Bacon, Inc., </publisher> <address> Boston, </address> <year> 1970. </year>
Reference: [EFFL95] <author> H. Edelsbrunner, M. Facello, P. Fu and J. Liang. </author> <title> Measuring proteins and voids in proteins. </title> <booktitle> In Proceedings of the 28th Annual Hawaii International Conference on System Sciences, </booktitle> <pages> pages 256-264, </pages> <year> 1995. </year>
Reference-contexts: We first summarize and critique three papers in the field: "Spheres, Molecules and Hidden Surface Removal," by Halperin and Overmars [HO94], "The Union of Balls and its Dual Shape," by Edelsbrun- ner [Edl93], and "Measuring Proteins and Voids in Proteins," by Edelsbrunner, Facello, Fu, and Liang <ref> [EFFL95] </ref>. We then present several new contributions of our own. First, we give a randomized linear algorithm that computes volumes and surface areas of proteins. This is the best bound we know of for the problem; our algorithm is faster and simpler than that of Edelsbrunner. <p> and 6 we suggest some ways to use these algorithms to detect and possibly correct errors in the x-ray crystallography data. 3 Measuring Proteins The papers "The Union of Balls and its Dual Shape," by Edelsbrunner [Edl93], and "Measuring Proteins and Voids in Proteins," by Edelsbrunner, Facello, Fu, and Liang <ref> [EFFL95] </ref>, discuss the same algorithms and are therefore treated together.
Reference: [Edl93] <author> H. Edelsbrunner. </author> <title> The union of balls and its dual shape. </title> <booktitle> In Proceedings of the 9th Annual Symposium on Computational Geometry, </booktitle> <pages> pages 218-231, </pages> <year> 1993. </year>
Reference-contexts: We first summarize and critique three papers in the field: "Spheres, Molecules and Hidden Surface Removal," by Halperin and Overmars [HO94], "The Union of Balls and its Dual Shape," by Edelsbrun- ner <ref> [Edl93] </ref>, and "Measuring Proteins and Voids in Proteins," by Edelsbrunner, Facello, Fu, and Liang [EFFL95]. We then present several new contributions of our own. First, we give a randomized linear algorithm that computes volumes and surface areas of proteins. <p> In sections 5.2 and 6 we suggest some ways to use these algorithms to detect and possibly correct errors in the x-ray crystallography data. 3 Measuring Proteins The papers "The Union of Balls and its Dual Shape," by Edelsbrunner <ref> [Edl93] </ref>, and "Measuring Proteins and Voids in Proteins," by Edelsbrunner, Facello, Fu, and Liang [EFFL95], discuss the same algorithms and are therefore treated together. <p> Define the feasible cell of b, F b , as T b 0 2N b H bb 0 . Note that the power cell p b = T p b F b . For our argument we also need the following lemma, which is stated in Edelsbrunner <ref> [Edl93] </ref> without proof. Lemma 1 8b 0 2 B; p b " b 0 p b " b: Proof: If p b " b 0 = ; then the lemma is trivially true. So suppose p b " b 0 is not empty.
Reference: [FV82] <author> James D. Foley and Andries van Dam. </author> <title> Fundamentals of Interactive Computer Graphics. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1982. </year>
Reference: [HO94] <author> Dan Halperin and Mark H. Overmars. </author> <title> Spheres, molecules, and hidden surface re-moval. </title> <booktitle> In Proceedings of the 10th Annual Symposium on Computational Geometry, </booktitle> <pages> pages 113-122, </pages> <year> 1994. </year>
Reference-contexts: 1 Introduction In this paper we investigate efficient algorithms for computing the volume and surface area of protein molecules and for graphically displaying the molecules in real time. We first summarize and critique three papers in the field: "Spheres, Molecules and Hidden Surface Removal," by Halperin and Overmars <ref> [HO94] </ref>, "The Union of Balls and its Dual Shape," by Edelsbrun- ner [Edl93], and "Measuring Proteins and Voids in Proteins," by Edelsbrunner, Facello, Fu, and Liang [EFFL95]. We then present several new contributions of our own. <p> f T j " b2T q b 2 Qg; that is, a simplex is in K if the power cells of its vertices intersect inside the union of balls. 2 Displaying Molecular Surfaces In this section we discuss the paper "Spheres, Molecules and Hidden Surface Removal," by Halperin and Overmars <ref> [HO94] </ref>, which describes algorithms for displaying and manipulating hard-sphere models of proteins on the screen. One application of such algorithms is in drug design, where computer-drawn models are used to design molecules that bind to specific proteins or replace defective ones.
Reference: [Hal95] <author> Dan Halperin. </author> <type> Personal communication. </type>
Reference-contexts: One common error <ref> [Hal95] </ref> occurs when a single atom is described with two slightly different centers, so that 16 there appear to be two different atoms. Certainly, this sort of error might be detected by applying secondary structure information, although it may be difficult to map that information onto the x-ray crystallography data.
Reference: [Kan94] <editor> Markov chains and polynomial time algorithms. </editor> <booktitle> In 35th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 656-671, </pages> <year> 1994. </year>
Reference-contexts: the Dyer, Frieze and Kannan approach to computing volumes as a possible method for improving Edelsbrunner's algorithms but decided that the amount of sampling needed to estimate volumes accurately is inherently superlinear. (The best known bound using these methods is an O (n 5 ) algorithm for general convex bodies <ref> [Kan94] </ref>. While this might be improved for unions of "fat" bodies such as spheres, we believe it unlikely that we can approximate the volume of U (B) in o (n log n) time using this method.) However, this work sets a precedent for a membership-query representation of a molecule.
Reference: [LR71] <author> B. Lee and F. M. Richards. </author> <title> The interpretation of protein structure: Estimation of static accessibility. </title> <journal> Journal of Molecular Biology, </journal> <volume> 55 </volume> <pages> 379-400, </pages> <year> 1971. </year> <month> 19 </month>
Reference: [Lei92] <author> F. Thomson Leighton. </author> <title> Introduction to Parallel Algorithms and Architectures. </title> <publisher> Mor-gan Kaufmann, </publisher> <address> San Mateo, CA, </address> <year> 1992. </year>
Reference-contexts: However, displaying the molecule relies on sorting the balls; the time for sorting in parallel depends on the structure of the parallel network and is in any case no better than O (log n) <ref> [Lei92] </ref>. Thus, even with n processors it is not possible 7 to implement Halperin and Overmars' method to display molecules in constant time. Finally, the algorithms presented in this paper assume that the initial data on the structure of the algorithms, generally derived from x-ray crystallography, is accurate.
Reference: [LN90] <author> Nathan Linial and Noam Nisan. </author> <title> Approximate Inclusion-Exclusion. </title> <booktitle> In Proceedings of the 22nd Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 260-270, </pages> <year> 1990. </year>
Reference-contexts: In general, approximations to the formula consisting of fewer than n terms are inaccurate <ref> [LN90] </ref>. However, Edelsbrunner proves that the volume of U (B) in d dimensions can be computed exactly using an inclusion-exclusion formula where all subsets have size at most d. <p> It may very well have applications to other areas where inclusion-exclusion formulas are used, such as cryptography and approximation algorithms. The result is particularly surprising in light of the hardness bounds for general approximation of such formulas (with fewer than n terms) given by Linial and Nisan <ref> [LN90] </ref>. However, in order for the inclusion-exclusion result to be accessible to the computer science communities that might use it, it needs a more intuitive proof.
Reference: [Mez93] <author> P. G. Mezey. </author> <title> Shape in chemistry: An introduction to molecular shape and topology. </title> <publisher> VCH Publishers, Inc., </publisher> <address> New York, </address> <year> 1993. </year>
Reference-contexts: Representation by fixed balls is thus fairly common, and appears to be accurate to a first approximation <ref> [Mez93, Ric77] </ref>. The main theorem's restrictions that the atoms' radii are bounded in size and that no two nuclei can be too close seem reasonable for the reasons outlined in Section 2.1. However, there might be comparable formalizations of these ideas which are better suited to our purposes.
Reference: [PCG+92] <author> G. Perrot, B. Cheng, K. D. Gibson, J. Vila, A. Palmer, A. Nayeem, B. Maigret and H. A. Scheraga. MSEED: </author> <title> A program for rapid determination of accessible surface areas and their derivatives. </title> <journal> Journal of Computational Chemistry, </journal> <volume> 13 </volume> <pages> 1-11, </pages> <year> 1992. </year>
Reference-contexts: Independently, Varshney and Brooks [VB93] note that each protein atom has only a constant number of neighbors. They use this information to compute the accessible surface of the molecule in linear time, or in O (n=p) time on p parallel processors. Perrot et al. <ref> [PCG+92] </ref> describe an O (nk) algorithm for approximating the surface area, where k is the average number (over the molecule) of neighbors per atom. However, Halperin and Overmars are the first to put all these ideas together and to apply them to real-time computer-aided molecule design.
Reference: [PS85] <author> F. P. Preparata and M. I. Shamos. </author> <title> Computational Geometry | An Introduction. </title> <publisher> Springer Verlag, </publisher> <address> New York, </address> <year> 1985. </year>
Reference-contexts: We now show how to compute the surface area and volume of U (B), given X, by determining the surface area and volume of each q b = F b " b. To compute F b from X, we use the technique of Varshney and Brooks <ref> [VB93, PS85, pp. 316 ff.] </ref>. They compute the dual point for each halfspace in X, take the convex hull of the dual, and then compute the dual of the hull to find the vertices of the convex (but potentially unbounded) polyhedron F b . <p> There will be O (k) such points, so finding their convex hull in R 3 takes O (k log k) time <ref> [PS85] </ref>. There can be only O (k) points on the hull, each corresponding to the intersection of three halfspaces (since the balls are in general position), so computing the duals in both directions takes only O (k) time.
Reference: [Ric77] <author> F. M. Richards. </author> <title> Areas, volumes, packing, and protein structures. </title> <journal> In Ann. Rev. Biophys. Bioeng., </journal> <volume> 6 </volume> <pages> 151-176, </pages> <year> 1977. </year>
Reference-contexts: Determining the surface of the molecule is also essential for displaying the molecule on the screen. The volume of a protein provides information about its packing density and thermodynamic properties. Efforts to compute volumes of proteins based on Voronoi diagrams are at least 20 years old <ref> [Ric77] </ref>. This paper discusses recent improvements to such approaches. Proteins are frequently represented by a hard-sphere model, in which each atom is considered to be a ball in R 3 . <p> Representation by fixed balls is thus fairly common, and appears to be accurate to a first approximation <ref> [Mez93, Ric77] </ref>. The main theorem's restrictions that the atoms' radii are bounded in size and that no two nuclei can be too close seem reasonable for the reasons outlined in Section 2.1. However, there might be comparable formalizations of these ideas which are better suited to our purposes. <p> We address this issue in Section 5.2. Another issue is that the theorem does not account for repulsive forces between atoms or for the fact that atoms in proteins generally have some space between them. Richards <ref> [Ric77] </ref> analyzes the packing of atoms in proteins and concludes that there is little empty space. How- ever, he derives this conclusion by comparing the number of protein atoms with the number of non-overlapping balls that can theoretically be packed in the same space.
Reference: [Sei91] <author> R. Seidel, et al. </author> <title> Class Notes for Computational Geometry, </title> <institution> University of California at Berkeley, </institution> <month> Spring </month> <year> 1991. </year>
Reference: [LTK95] <author> Lisa Tucker-Kellogg. </author> <type> Personal communication. </type>
Reference-contexts: However, it is hard to model the motions of all the individual atoms in a protein molecule, and it is not clear that the added complexity needed to do so is worth the improvement in accuracy <ref> [LTK95] </ref>. Representation by fixed balls is thus fairly common, and appears to be accurate to a first approximation [Mez93, Ric77]. The main theorem's restrictions that the atoms' radii are bounded in size and that no two nuclei can be too close seem reasonable for the reasons outlined in Section 2.1.
Reference: [VB93] <author> A. Varshney and F. P. Brooks, Jr. </author> <title> Fast analytical computation of Richards's smooth molecular surface. </title> <booktitle> In Proc. Visualization, </booktitle> <pages> pages 300-307, </pages> <year> 1993. </year>
Reference-contexts: Some of the ideas behind their main theorem and its applications have appeared elsewhere. Yip and Elber [YE89] present an O (n) algorithm for determining neighboring atoms by dividing the space into cubes. Independently, Varshney and Brooks <ref> [VB93] </ref> note that each protein atom has only a constant number of neighbors. They use this information to compute the accessible surface of the molecule in linear time, or in O (n=p) time on p parallel processors. <p> We now show how to compute the surface area and volume of U (B), given X, by determining the surface area and volume of each q b = F b " b. To compute F b from X, we use the technique of Varshney and Brooks <ref> [VB93, PS85, pp. 316 ff.] </ref>. They compute the dual point for each halfspace in X, take the convex hull of the dual, and then compute the dual of the hull to find the vertices of the convex (but potentially unbounded) polyhedron F b .
Reference: [VWB94] <author> A. Varshney, W. Wright, and F. P. Brooks, Jr. </author> <title> Estimating the number of unit spheres inside a larger sphere. </title> <type> Technical Report TR93-039, </type> <institution> Department of Computer Science, University of North Carolina at Chapel Hill, </institution> <month> May </month> <year> 1994. </year>
Reference-contexts: It might be interesting to obtain similar statistics comparing the number of atoms in a protein with the number of overlapping balls that could fill the same space, subject to the main theorem's constraint on . Varshney, Wright and Brooks <ref> [VWB94] </ref> study the general problem of packing unit spheres inside a larger sphere. They motivate their work by the problem of calculating the number of neighbors of protein atoms under some simplifying assumptions about the atoms' radii and the average bond length.
Reference: [WHR+87] <author> J. Watson, N. Hopinks, J. Roberts, J. Steitz, and A. Weiner. </author> <title> Molecular Biology of the Gene. </title> <address> Benjamin/Cummings, Menlo Park, CA, </address> <year> 1987. </year>
Reference: [YE89] <author> V. Yip and R. Elber. </author> <title> Calculations of a list of neighbors in molecular dynamics simulations. </title> <journal> Journal of Computational Chemistry, </journal> <volume> 10: </volume> <pages> 921-927, </pages> <year> 1989. </year> <month> 20 </month>
Reference-contexts: Some of the ideas behind their main theorem and its applications have appeared elsewhere. Yip and Elber <ref> [YE89] </ref> present an O (n) algorithm for determining neighboring atoms by dividing the space into cubes. Independently, Varshney and Brooks [VB93] note that each protein atom has only a constant number of neighbors.
References-found: 29

