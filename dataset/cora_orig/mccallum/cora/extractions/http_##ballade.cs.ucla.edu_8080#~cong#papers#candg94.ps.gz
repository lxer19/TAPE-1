URL: http://ballade.cs.ucla.edu:8080/~cong/papers/candg94.ps.gz
Refering-URL: http://ballade.cs.ucla.edu/~cong/publications.html
Root-URL: http://www.cs.ucla.edu
Title: LUT-Based FPGA Technology Mapping under Arbitrary Net-Delay Models  
Author: Jason Cong and Yuzheng Ding Tong Gao Kuang-Chien Chen 
Address: Los Angeles, CA 90024, U.S.A.  Urbana Champaign, IL 61801, U.S.A.  3055 Orchard Drive, San Jose, CA 95134, U.S.A.  
Affiliation: Department of Computer Science University of California,  Department of Computer Science University of Illinois,  Fujitsu America, Inc.  
Abstract: The field programmable gate-array (FPGA) has become an important technology in VLSI ASIC designs. Most existing algorithms for performance-driven technology mapping for Lookup-table (LUT) based FPGA designs are based on the unit-delay model. In this paper we study the technology mapping problem under arbitrary net-delay models. We show that if the net delay can be determined or estimated before mapping, the problem can be optimally solved in polynomial time based on efficient network flow computation. We have implemented the algorithm and tested it on a number of MCNC benchmark examples. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Bhat, N. and D. Hill, </author> <title> ``Routable Technology Mapping for FPGAs,'' </title> <booktitle> First Int'l ACM/SIGDA Workshop on Field Programmable Gate Arrays, </booktitle> <pages> pp. 143-148, </pages> <month> Feb. </month> <year> 1992. </year>
Reference-contexts: Technology mapping optimizes the technology dependent objectives, such as minimizing the number of K-LUTs used in the mapping solution (area minimization) [9, 10, 6, 8, 16, 12], minimizing the delay of the mapping solution (delay minimization) [11, 5, 2, 3], or maximizing the routability of the mapping solution <ref> [1, 14] </ref>. This paper studies the problem of performance-driven technology mapping for LUT-based FPGAs, i.e. technology mapping with the objective of delay minimization.
Reference: [2] <author> Chen, K. C., J. Cong, Y. Ding, A. B. Kahng, and P. Trajmar, ``DAG-Map: </author> <title> Graph-based FPGA Technology Mapping for Delay Optimization,'' </title> <booktitle> IEEE Design and Test of Computers, </booktitle> <pages> pp. 7-20, </pages> <month> Sep. </month> <year> 1992. </year>
Reference-contexts: Technology mapping optimizes the technology dependent objectives, such as minimizing the number of K-LUTs used in the mapping solution (area minimization) [9, 10, 6, 8, 16, 12], minimizing the delay of the mapping solution (delay minimization) <ref> [11, 5, 2, 3] </ref>, or maximizing the routability of the mapping solution [1, 14]. This paper studies the problem of performance-driven technology mapping for LUT-based FPGAs, i.e. technology mapping with the objective of delay minimization. <p> Therefore, it is very important to carry out performance optimization at logic level in FPGA designs in order to get satisfactory system speed. Previous mapping algorithms for delay minimization include MIS-pga-delay by Murgai et al. [11], Chortle-d by Francis et al. [5], DAG-Map by Chen et al. <ref> [2] </ref>, and FlowMap by Cong and Ding [3]. MIS-pga-delay combines Boolean synthesis with technology mapping and considers the number of levels of the mapping solution as well as the routing delay in its optimization procedure. <p> Our algorithm is applicable to any K-bounded Boolean network. Given a general Boolean network as input, if it is not K-bounded, we first transform it into a 2-input simple gate network using the DMIG algorithm discussed in <ref> [2] </ref>. Note that the optimality of our algorithm holds not only for such 2-input simple gate networks, but also for any K-bounded general Boolean network. -9- The mapping algorithm presented in this paper is a generalization of the FlowMap algorithm [3] which produces optimal mapping solution under unit-delay model.
Reference: [3] <author> Cong, J. and Y. Ding, </author> <title> ``An Optimal Technology Mapping Algorithm fo Delay Optimization in Lookup-Table Based FPGA Designs,'' </title> <booktitle> Proc. IEEE Int'l Conf. on Computer-Aided Design, </booktitle> <pages> pp. 48-53, </pages> <month> Nov. </month> <year> 1992. </year>
Reference-contexts: Technology mapping optimizes the technology dependent objectives, such as minimizing the number of K-LUTs used in the mapping solution (area minimization) [9, 10, 6, 8, 16, 12], minimizing the delay of the mapping solution (delay minimization) <ref> [11, 5, 2, 3] </ref>, or maximizing the routability of the mapping solution [1, 14]. This paper studies the problem of performance-driven technology mapping for LUT-based FPGAs, i.e. technology mapping with the objective of delay minimization. <p> Previous mapping algorithms for delay minimization include MIS-pga-delay by Murgai et al. [11], Chortle-d by Francis et al. [5], DAG-Map by Chen et al. [2], and FlowMap by Cong and Ding <ref> [3] </ref>. MIS-pga-delay combines Boolean synthesis with technology mapping and considers the number of levels of the mapping solution as well as the routing delay in its optimization procedure. Chortle-d uses bin-packing heuristic and several postprocesssng operations to -5--minimize the number of levels in the mapping solution. <p> Note that the optimality of our algorithm holds not only for such 2-input simple gate networks, but also for any K-bounded general Boolean network. -9- The mapping algorithm presented in this paper is a generalization of the FlowMap algorithm <ref> [3] </ref> which produces optimal mapping solution under unit-delay model. The algorithm has two phases. In the first phase, it computes a label for each node which reflects the delay of the K-LUT implementing that node in an optimal mapping solution. <p> The second phase of our algorithm is to generate the K-LUTs in the optimal mapping solution. Since this phase is the same as that in FlowMap <ref> [3] </ref>, we give only a brief description. <p> Therefore, the mapping solution is optimal. (A formal proof of a similar result under unit-delay model can be found in <ref> [3] </ref>). In summary, we have Theorem 2. For any K-bounded Boolean network N, the algorithm produces a K-LUT mapping solution with the minimum delay under the pre-assigned net delay in O (Kmnlogn) time, where n and m are the number of nodes and edges in N. ` 3.3. <p> We First mapped (for K =5) a set of mid-size MCNC benchmark networks using FlowMap-d. Then, We applied several postprocessing operations on the network to minimize area. The postprocessing operations were predecessor packing and gate decomposition, proposed in <ref> [3] </ref> and used in FlowMap. It has been shown that these operations will not increase the depth of the network. However, this operations may carry out node duplications, hence may increase the delay under the nominal delay model. <p> On the other hand, since the nominal delay predict model is static, the estimate may be inaccurate. On the circuit alu2, FlowMap actually got the best result. Table 2 shows the mapping solutions of the three algorithms after the postprocessing. For FlowMap we used the original postprocessing operations <ref> [3] </ref> which may duplicate nodes, and for FlowMap-d we restricted to the duplication-free version. For FlowMap, in some circuits the delay increased due to node duplication, while for FlowMap-d the delay never increased. However, since the postprocessing procedure for FlowMap is more aggressive, its area reduction is more significant. <p> Consequently, FlowMap-d cannot minimize area during the mapping procedure as effectively as FlowMap does <ref> [3] </ref>. This is a disadvantage of the FlowMap-d algorithm. Finally, for those circuits that can be implemented using a single FPGA chip of XC3000 series, Table 3 shows the actual delays of the mapping solutions in Table 2 after placement and routing.
Reference: [4] <author> Ford, L. R. and D. R. Fulkerson, </author> <title> Flows in Networks, </title> <publisher> Princeton Univ. Press, </publisher> <address> Princeton, N.J. </address> <year> (1962). </year>
Reference-contexts: In Fig. 4 (b), all the edges whose capacities are not specified have infinite capacity. Fig. 4 (c) shows the cut computed from (b), and in (d) it is converted back to a cut in the original network (a). According to the Max-flow Min-cut Theorem <ref> [4] </ref>, N t has a cut whose edge cut-size is no more than K if and only if the maximum flow between s and t in N t has value no more than K.
Reference: [5] <author> Francis, R. J., J. Rose, and Z. Vranesic, </author> <title> ``Technology Mapping for Delay Optimization of Lookup Table-Based FPGAs,'' </title> <booktitle> MCNC Logic Synthesis Workshop, </booktitle> <year> 1991. </year>
Reference-contexts: Technology mapping optimizes the technology dependent objectives, such as minimizing the number of K-LUTs used in the mapping solution (area minimization) [9, 10, 6, 8, 16, 12], minimizing the delay of the mapping solution (delay minimization) <ref> [11, 5, 2, 3] </ref>, or maximizing the routability of the mapping solution [1, 14]. This paper studies the problem of performance-driven technology mapping for LUT-based FPGAs, i.e. technology mapping with the objective of delay minimization. <p> Therefore, it is very important to carry out performance optimization at logic level in FPGA designs in order to get satisfactory system speed. Previous mapping algorithms for delay minimization include MIS-pga-delay by Murgai et al. [11], Chortle-d by Francis et al. <ref> [5] </ref>, DAG-Map by Chen et al. [2], and FlowMap by Cong and Ding [3]. MIS-pga-delay combines Boolean synthesis with technology mapping and considers the number of levels of the mapping solution as well as the routing delay in its optimization procedure.
Reference: [6] <author> Francis, R. J., J. Rose, and Z. Vranesic, ``Chortle-crf: </author> <title> Fast Technology Mapping for Lookup Table-Based FPGAs,'' </title> <booktitle> Proc. 28th ACM/IEEE Design Automation Conference, </booktitle> <pages> pp. 613-619, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: The input Boolean network is usually optimized using technology independent logic synthesis techniques in the first stage of the logic level design. Technology mapping optimizes the technology dependent objectives, such as minimizing the number of K-LUTs used in the mapping solution (area minimization) <ref> [9, 10, 6, 8, 16, 12] </ref>, minimizing the delay of the mapping solution (delay minimization) [11, 5, 2, 3], or maximizing the routability of the mapping solution [1, 14]. This paper studies the problem of performance-driven technology mapping for LUT-based FPGAs, i.e. technology mapping with the objective of delay minimization.
Reference: [7] <author> Hill, D., </author> <title> ``A CAD System for the Design of Field Programmable Gate Arrays,'' </title> <booktitle> Proc. 28th ACM/IEEE Design Automation Conference, </booktitle> <pages> pp. 187-192, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: All these components can be reprogrammed to accommodate the design change. The lookup table (LUT) -based FPGA is a popular architecture used by several major FPGA manufacturers, including Xilinx and AT&T <ref> [17, 7] </ref>. In LUT-based FPGA, the basic programmable logic block contains a K-input lookup table implemented by a 2 K -bit SRAM, which can implement any Boolean function of up to K variables. An example of Xilinx FPGA architecture is illustrated in Fig. 1.
Reference: [8] <author> Karplus, K., ``Xmap: </author> <title> A Technology Mapper for Table-lookup Field-Programmable Gate Arrays,'' </title> <booktitle> Proc. 28th ACM/IEEE Design Automation Conference, </booktitle> <pages> pp. 240-243, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: The input Boolean network is usually optimized using technology independent logic synthesis techniques in the first stage of the logic level design. Technology mapping optimizes the technology dependent objectives, such as minimizing the number of K-LUTs used in the mapping solution (area minimization) <ref> [9, 10, 6, 8, 16, 12] </ref>, minimizing the delay of the mapping solution (delay minimization) [11, 5, 2, 3], or maximizing the routability of the mapping solution [1, 14]. This paper studies the problem of performance-driven technology mapping for LUT-based FPGAs, i.e. technology mapping with the objective of delay minimization.
Reference: [9] <author> Murgai, R., Y. Nishizaki, N. Shenay, R. Brayton, and A. Sangiovanni-Vincentelli, </author> <title> ``Logic Synthesis Algorithms for Programmable Gate Arrays,'' </title> <booktitle> Proc. 27th ACM/IEEE Design Automation Conf., </booktitle> <pages> pp. 620-625, </pages> <year> 1990. </year>
Reference-contexts: The input Boolean network is usually optimized using technology independent logic synthesis techniques in the first stage of the logic level design. Technology mapping optimizes the technology dependent objectives, such as minimizing the number of K-LUTs used in the mapping solution (area minimization) <ref> [9, 10, 6, 8, 16, 12] </ref>, minimizing the delay of the mapping solution (delay minimization) [11, 5, 2, 3], or maximizing the routability of the mapping solution [1, 14]. This paper studies the problem of performance-driven technology mapping for LUT-based FPGAs, i.e. technology mapping with the objective of delay minimization.
Reference: [10] <author> Murgai, R., N. Shenoy, R. K. Brayton, and A. Sangiovanni-Vincentelli, </author> <title> ``Improved Logic Synthesis Algorithms for Table Look Up Architectures ,'' Proc. </title> <booktitle> IEEE Int'l Conf. on Computer-Aided Design, </booktitle> <pages> pp. 564-567, </pages> <month> Nov. </month> <year> 1991. </year>
Reference-contexts: The input Boolean network is usually optimized using technology independent logic synthesis techniques in the first stage of the logic level design. Technology mapping optimizes the technology dependent objectives, such as minimizing the number of K-LUTs used in the mapping solution (area minimization) <ref> [9, 10, 6, 8, 16, 12] </ref>, minimizing the delay of the mapping solution (delay minimization) [11, 5, 2, 3], or maximizing the routability of the mapping solution [1, 14]. This paper studies the problem of performance-driven technology mapping for LUT-based FPGAs, i.e. technology mapping with the objective of delay minimization.
Reference: [11] <author> Murgai, R., N. Shenoy, R. K. Brayton, and A. Sangiovanni-Vincentelli, </author> <title> ``Performance Directed Synthesis for Table Look Up Programmable Gate Arrays,'' </title> <booktitle> Proc. IEEE Int'l Conf. -22- on Computer-Aided Design, </booktitle> <pages> pp. 572-575, </pages> <month> Nov. </month> <year> 1991. </year>
Reference-contexts: Technology mapping optimizes the technology dependent objectives, such as minimizing the number of K-LUTs used in the mapping solution (area minimization) [9, 10, 6, 8, 16, 12], minimizing the delay of the mapping solution (delay minimization) <ref> [11, 5, 2, 3] </ref>, or maximizing the routability of the mapping solution [1, 14]. This paper studies the problem of performance-driven technology mapping for LUT-based FPGAs, i.e. technology mapping with the objective of delay minimization. <p> Therefore, it is very important to carry out performance optimization at logic level in FPGA designs in order to get satisfactory system speed. Previous mapping algorithms for delay minimization include MIS-pga-delay by Murgai et al. <ref> [11] </ref>, Chortle-d by Francis et al. [5], DAG-Map by Chen et al. [2], and FlowMap by Cong and Ding [3]. MIS-pga-delay combines Boolean synthesis with technology mapping and considers the number of levels of the mapping solution as well as the routing delay in its optimization procedure.
Reference: [12] <author> Sawkar, P. and D. Thomas, </author> <title> ``Technology Mapping for Table-Look-Up Based Field Programmable Gate Arrays,'' </title> <booktitle> ACM/SIGDA Workshop on Field Programmable Gate Arrays, </booktitle> <pages> pp. 83-88, </pages> <month> Feb. </month> <year> 1992. </year>
Reference-contexts: The input Boolean network is usually optimized using technology independent logic synthesis techniques in the first stage of the logic level design. Technology mapping optimizes the technology dependent objectives, such as minimizing the number of K-LUTs used in the mapping solution (area minimization) <ref> [9, 10, 6, 8, 16, 12] </ref>, minimizing the delay of the mapping solution (delay minimization) [11, 5, 2, 3], or maximizing the routability of the mapping solution [1, 14]. This paper studies the problem of performance-driven technology mapping for LUT-based FPGAs, i.e. technology mapping with the objective of delay minimization.
Reference: [13] <author> Schlag, M., P. Chan, and J. Kong, </author> <title> ``Empirical Evaluation of Multilevel Logic Minimization Tools for a Field Programmable Gate Array Technology,'' </title> <booktitle> Proc. 1st Int'l Workshop on Field Programmable Logic and Applications, </booktitle> <month> Sept. </month> <year> 1991. </year>
Reference-contexts: Therefore, a net-delay model assumes that signals arrive all load terminals in the same net at the same time. Several net-delay models have been proposed to capture variable net delay, including the nominal delay model <ref> [13] </ref> which assumes that the fanout net delay is proportional to the number of fanouts. <p> Such static net-delay models are usually not accurate, since in reality net delay is often closely related to net size. For example, the nominal -16--delay model <ref> [13] </ref> assumes that net delay is always proportional to the net size. Our algorithm does not produce optimal mapping solutions under dynamic net-delay models such as the nominal delay model. Under dynamic delay models, the dependency of net delay on the net size significantly complicates the mapping problem.
Reference: [14] <author> Schlag, M., J. Kong, and P. K. Chan, </author> <title> ``Routability-Driven Technology Mapping for Lookup Table-Based FPGAs,'' </title> <booktitle> Proc. 1992 IEEE International Conference on Computer Design, </booktitle> <pages> pp. 86-90, </pages> <month> Oct. </month> <year> 1992. </year>
Reference-contexts: Technology mapping optimizes the technology dependent objectives, such as minimizing the number of K-LUTs used in the mapping solution (area minimization) [9, 10, 6, 8, 16, 12], minimizing the delay of the mapping solution (delay minimization) [11, 5, 2, 3], or maximizing the routability of the mapping solution <ref> [1, 14] </ref>. This paper studies the problem of performance-driven technology mapping for LUT-based FPGAs, i.e. technology mapping with the objective of delay minimization.
Reference: [15] <author> Tarjan, R. E., </author> <title> Data Structures and Network Algorithms, </title> <institution> Society for Industrial and Applied Mathematics, </institution> <address> Philadelphia, Pennsylvania (1983). </address>
Reference-contexts: Since we are only interested in testing if the maximum flow is of value K or smaller, we apply the augmenting path algorithm in N t to compute a maximum flow. (For details of the augmenting path algorithm, see <ref> [15] </ref>.) From the construction of N t , it can be seen that each augmenting path in the flow residual graph of N t from s to t increases the flow by either one or infinity.
Reference: [16] <author> Woo, N.-S., </author> <title> ``A Heuristic Method for FPGA Technology Mapping Based on the Edge Visibility,'' </title> <booktitle> Proc. 28th ACM/IEEE Design Automation Conference, </booktitle> <pages> pp. 248-251, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: The input Boolean network is usually optimized using technology independent logic synthesis techniques in the first stage of the logic level design. Technology mapping optimizes the technology dependent objectives, such as minimizing the number of K-LUTs used in the mapping solution (area minimization) <ref> [9, 10, 6, 8, 16, 12] </ref>, minimizing the delay of the mapping solution (delay minimization) [11, 5, 2, 3], or maximizing the routability of the mapping solution [1, 14]. This paper studies the problem of performance-driven technology mapping for LUT-based FPGAs, i.e. technology mapping with the objective of delay minimization.
Reference: [17] <author> Xilinx, </author> <title> The Programmable Gate Array Data Book, </title> <address> Xilinx, San Jose (1992). </address>
Reference-contexts: All these components can be reprogrammed to accommodate the design change. The lookup table (LUT) -based FPGA is a popular architecture used by several major FPGA manufacturers, including Xilinx and AT&T <ref> [17, 7] </ref>. In LUT-based FPGA, the basic programmable logic block contains a K-input lookup table implemented by a 2 K -bit SRAM, which can implement any Boolean function of up to K variables. An example of Xilinx FPGA architecture is illustrated in Fig. 1. <p> This guarantees that the delay of the mapping solution will not increase. Finally, we went through the physical design step, using Xilinx XACT design system to place and route the mapped circuits onto Xilinx XC3000 FPGA chips, whose logic blocks can be viewed as 5-LUTs <ref> [17] </ref>. In order to compare the performance, we also carried out the same experiment procedure using the unit-delay model (i.e. a = b = 0) and the nominal delay model (i.e. b = 0) to assign the net delays for the mapping.
References-found: 17

