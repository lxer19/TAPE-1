URL: ftp://ftp.ens.fr/pub/dmi/users/castagna/covariance.ps
Refering-URL: http://www.progsoc.uts.edu.au/~geldridg/cpp/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Covariance and Contravariance: Conflict without a Cause  
Author: GIUSEPPE CASTAGNA 
Keyword: Categories and Subject Descriptors: D.3.2 [Programming Languages]: Language Classifications|object-oriented languages; F.3.3 [Logics and Meanings of Programs]: Studies of Program Constructs|type structure General Terms: Theory, Languages Additional Key Words and Phrases: Object-oriented languages, type theory  
Affiliation: C.N.R.S.  
Abstract: In type-theoretic research on object-oriented programming, the issue of "covariance versus con-travariance" is a topic of continuing debate. In this short note we argue that covariance and con-travariance appropriately characterize two distinct and independent mechanisms. The so-called contravariance rule correctly captures the subtyping relation (that relation which establishes which sets of functions can replace another given set in every context). A covariant relation, instead, characterizes the specialization of code (i.e., the definition of new code which replaces old definitions in some particular cases). Therefore, covariance and contravariance are not opposing views, but distinct concepts that each have their place in object-oriented systems. Both can (and should) be integrated in a type-safe manner in object-oriented languages. We also show that the independence of the two mechanisms is not characteristic of a particular model but is valid in general, since covariant specialization is present in record-based models, although it is hidden by a deficiency of all existing calculi that realize this model. As an aside, we show that the &-calculus can be taken as the basic calculus for both an overloading-based and a record-based model. Using this approach, one not only obtains a more uniform vision of object-oriented type theories, but in the case of the record-based approach, one also gains multiple dispatching, a feature that existing record-based models do not capture. 
Abstract-found: 1
Intro-found: 1
Reference: <institution> Apple Computer Inc. </institution> <year> 1992. </year> <title> Dylan: An Object-Oriented Dynamic Language. </title> <institution> Eastern Research and Technology, Apple Computer Inc., </institution> <address> Cambridge, Mass. </address>
Reference: <editor> Bancilhon, F., Delobel, C., and Kanellakis, P. (Eds.) </editor> <year> 1992. </year> <title> Implementing an Object-Oriented Database System: </title> <publisher> The Story of O 2 . Morgan Kaufmann, </publisher> <address> San Mateo, Calif. </address>
Reference: <author> Cardelli, L. </author> <year> 1988. </year> <title> A semantics of multiple inheritance. </title> <journal> Inf. Comput. </journal> <volume> 76, </volume> <month> 138-164. </month> <title> A previous version can be found in Semantics of Data Types. </title> <booktitle> Lecture Notes in Computer Science, </booktitle> <volume> vol. 173. </volume> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1984, </year> <pages> pp. 51-67. </pages>
Reference: <author> Cardelli, L. and Mitchell, J. </author> <year> 1991. </year> <title> Operations on records. </title> <journal> Math. Struct. Comput. Sci. </journal> <volume> 1, 1, </volume> <pages> 3-48. </pages>
Reference: <author> Castagna, G. </author> <year> 1995a. </year> <title> A meta-language for typed object-oriented languages. Theor. Comput. Sci. To be published. </title> <booktitle> An extended abstract appears in Proceedings of the 13th Conference on the Foundations of Software Technology and Theoretical Computer Science. Lecture Notes in Computer Science, </booktitle> <volume> vol. 761. </volume> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1993. </year>
Reference: <author> Castagna, G. </author> <year> 1995b. </year> <title> A proposal for making O 2 more type safe. </title> <type> Tech. Rep. </type> <institution> LIENS-95-4, LIENS, Paris, France. </institution> <note> Available by anonymous ftp from ftp.ens.fr in file /pub/dmi/users/castagna/o2.dvi.Z. Covariance and Contravariance 17 Castagna, </note> <author> G. </author> <year> 1994. </year> <title> Overloading, subtyping and late binding: Functional foundation of object-oriented programming. </title> <type> Ph.D. thesis, </type> <institution> Universite Paris 7, Paris, France. </institution> <note> Appeared as LIENS Tech. Rep. </note>
Reference: <author> Castagna, G., Ghelli, G., and Longo, G. </author> <year> 1995. </year> <title> A calculus for overloaded functions with subtyping. </title> <journal> Inf. Comput. </journal> <volume> 117, 1, </volume> <pages> 115-135. </pages> <note> A preliminary version has been presented at the 1992 ACM Conference on LISP and Functional Programming (San Francisco, </note> <month> June). </month>
Reference: <author> DeMichiel, L. and Gabriel, R. </author> <year> 1987. </year> <title> Common lisp object system overview. </title> <booktitle> In Proceeding of ECOOP '87 European Conference on Object-Oriented Programming (Paris, France). Lecture Notes in Computer Science, </booktitle> <volume> vol. 276. </volume> <publisher> Springer-Verlag, Berlin, </publisher> <pages> 151-170. </pages>
Reference: <author> Ghelli, G. </author> <year> 1991. </year> <title> A static type system for message passing. </title> <booktitle> In Proceedings of OOPSLA '91. ACM, </booktitle> <address> New York. </address>
Reference: <author> Goguen, J. and Meseguer, J. </author> <year> 1989. </year> <title> Order-sorted algebra I: Equational deduction for multiple inheritance, overloading, exceptions and partial operations. </title> <type> Tech. Rep. </type> <institution> SRI-CSL-89-10, Computer Science Laboratory, SRI International, Menlo Park, Calif. </institution> <month> July. </month>
Reference: <author> Goldberg, A. and Robson, D. </author> <year> 1983. </year> <title> Smalltalk-80: The Language and Its Implementation. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass. </address>
Reference: <author> Gunter, C.A. and Mitchell, J.C. </author> <year> 1994. </year> <title> Theoretical Aspects of Object-Oriented Programming: Types, Semantics, and Language Design. </title> <publisher> The MIT Press, </publisher> <address> Cambridge, Mass. </address>
Reference: <editor> Jouannaud, J.-P., Kirchner, C., Kirchner, H., and Megrelis, A. </editor> <year> 1992. </year> <title> OBJ: Programming with equalities, subsorts, overloading and parametrization. </title> <journal> J. Logic Program. </journal> <volume> 12, </volume> <pages> 257-279. </pages>
Reference: <author> L ecluse, C., Richard, P., and V elez, F. </author> <year> 1988. </year> <title> O 2 , an object-oriented data model. </title> <booktitle> In Proceedings of the ACM SIGMOD Conference (Chicago, Ill.). ACM, </booktitle> <address> New York. </address>
Reference: <author> Mart -Oliet, N. and Meseguer, J. </author> <year> 1990. </year> <title> Inclusions and subtypes. </title> <type> Tech. Rep. SRI-CSL-90-16, </type> <institution> Computer Science Laboratory, SRI International, Menlo Park, Calif. </institution> <month> Dec. </month>
Reference: <author> Meyer, B. </author> <year> 1991. </year> <title> Eiffel: The Language. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, N.J. </address>
Reference: <author> Pinson, L. and Wiener, R. </author> <year> 1992. </year> <title> Objective-C: Object-Oriented Programming Techniques. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass. </address>
Reference: <author> R emy, D. </author> <year> 1989. </year> <title> Typechecking records and variants in a natural extension of ML. </title> <booktitle> In the 16th Annual ACM Symposium on the Principles of Programming Languages. ACM, </booktitle> <address> New York. </address>
Reference: <author> Schwartzbach, M. </author> <year> 1994. </year> <title> Developments in object-oriented type systems. </title> <note> Tutorial given at POPL'94. Unpublished. </note>
Reference: <author> Stroustrup, B. </author> <year> 1986. </year> <title> The C++ Programming Language. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass. </address>
Reference: <author> Wand, M. </author> <year> 1987. </year> <title> Complete type inference for simple objects. </title> <booktitle> In the 2nd Annual Symposium on Logic in Computer Science. </booktitle> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <address> Calif. </address> <note> Received April 1994; revised January 1995; accepted February 1995 </note>
References-found: 21

