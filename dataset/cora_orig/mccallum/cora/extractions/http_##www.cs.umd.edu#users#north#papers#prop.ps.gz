URL: http://www.cs.umd.edu/users/north/papers/prop.ps.gz
Refering-URL: http://www.cs.umd.edu/users/north/resume.html
Root-URL: 
Email: north@cs.umd.edu  
Title: Generalized, Robust, End-User Programmable, Multiple-Window Coordination  
Author: Chris North 
Date: December 17, 1997  
Note: Proposal Date:  
Web: http://www.cs.umd.edu/users/north/  
Address: College Park, MD 20742 USA  
Affiliation: Department of Computer Science, University of Maryland,  
Abstract: In current windowing environments, individual windows are treated independently, making it difficult for users to coordinate information across multiple windows. While coordinated multi-window strategies are increasingly used in visualization and web user interfaces, designs are inflexible and haphazard. I propose a generalized, end-user programmable, robust, multiple-window coordination capability. Users can interactively link windows for powerful capabilities to integrate, relate, and navigate through information across window borders. This research involves generation of guidelines for robust coordination design, development of specification languages for end-user coordination, resolution of data structures, algorithms, and software architecture issues, and empirical evaluation. 
Abstract-found: 1
Intro-found: 1
Reference: [AS94] <author> Ahlberg, C., Shneiderman, B., </author> <title> Visual Information Seeking: Tight Coupling of Dynamic Query Filters with Starfield Displays, </title> <booktitle> Proc. ACM CHI'94, </booktitle> <pages> pp. 313-317, </pages> <year> (1994). </year>
Reference-contexts: This strategy also employs more advanced forms of selection. Filtering, instead of highlighting selected items, removes unselected items from display (elision). Dynamic Queries <ref> [AS94] </ref> Y Z Diagram 2: Brushing between a pair of plots of a 4-dimensional data-point set. <p> This strategy is especially popular in pane-based systems (SpotFire [AW95], Windows Explorer, Netscape frames, etc.). A variant of this approach shows details of selections in a new popup window instead of a given static window, as in the FilmFinder <ref> [AS94] </ref> (selecting a dot on a scatter plot displays that records fields, including pictures). In the Apple Dylan programming environment [DP95], users can link multiple instances of its code browser to navigate several levels of objectoriented constructs. B.
Reference: [AW95] <author> Ahlberg, C., Wistrand, E., IVEE: </author> <title> An Information Visualization a nd Exploration Environment, </title> <booktitle> Proc. IEEE Information Visualization 95, </booktitle> <pages> pp. 66-73, </pages> <year> (1995). </year>
Reference-contexts: A. Same information collections When users select (highlight, paint, brush) an item (or set of items) in one view, the system immediately highlights the equivalent item (or set), representing the same underlying data elements, in the other views. Many data analysis systems (e.g. Spotfire <ref> [AW95] </ref>, XGobi [BCS96]) use this coordination to visualize high-dimensional data point sets with multiple coordinated 2D scatter plots ([MSB90] credits invention to C. Newton in 1978 [New78]). These systems provide many options for selection method (single, cumulative, box, lasso, etc.) [Wil96] and highlight style (color, size, glyph, etc.). <p> With web site visualization tools, such as the Navigational View Builder [MFH95], users can select any node on a large site to display that web page in a separate browser window. This strategy is especially popular in pane-based systems (SpotFire <ref> [AW95] </ref>, Windows Explorer, Netscape frames, etc.). A variant of this approach shows details of selections in a new popup window instead of a given static window, as in the FilmFinder [AS94] (selecting a dot on a scatter plot displays that records fields, including pictures). <p> Second, the S-S (Selecting items to Selecting items) case has had significant research attention, and is already well understood. Many research projects are working on brushing (matching) techniques (Visage [RLS96], Attribute Explorer [Twe97], XmdvTool [WA95], Xgobi [BCS96], Spotfire <ref> [AW95] </ref>, etc). Continued work at HCIL on Dynamic Queries deals with filtering. To implement generalized multiple window coordination, I face 4 major hurdles: 1. User interface of coordination execution: understanding the design space of coordination types and identifying robust coordination design. 2.
Reference: [AEP96] <author> Antis, J., Eick, S., Pyrce, J., </author> <title> Visualizing the structure of relational databases, </title> <journal> IEEE Software, </journal> <volume> 13(1): </volume> <pages> 72-79, </pages> <month> (January </month> <year> 1996). </year> * 
Reference: [ABB89] <author> Avrahami, G., Brooks, K., Brown, M., </author> <title> A Two-View Approach to Constructing User Interfaces, </title> <journal> Computer Graphics, </journal> <volume> 23(3): </volume> <pages> 137-146, </pages> <month> (July </month> <year> 1989). </year>
Reference-contexts: While I have focused on multiple-window coordinations for visual information seeking tasks, there are other categories such as manipulation and editing tasks (consistency, coordinated layouts e.g. GUI building with simultaneous text language and graphical display <ref> [ABB89] </ref>), dynamic data (automatic triggers, alarms), and collaborative multiuser environments. 11 3. LinkKit In previous work I have constructed several prototypes, called LinkKit, to demonstrate my generalized multiple-window coordination approach as a solution to the shortcomings of the systems in the taxonomy as identified by the goals in chapter 1.
Reference: [AS95] <author> Ayers, E. and Stasko, J., </author> <title> Using graphic history in browsing the World Wide Web, </title> <booktitle> Proc. Fourth International World Wide Web Conference, </booktitle> <year> (1995). </year>
Reference-contexts: With coordination users can undo actions, try alternate paths, repeat sequences of steps, create macros, save and reuse sequences or states, maintain context with the time 10 dimension of user interaction (as overviews provide structural context), etc. Pad++ [BH94] and the Graphical History Browser <ref> [AS95] </ref> both maintain iconic node-link diagrams of visited web pages for a Netscape web browser window. Utting and Yankelovich [UY89] review several such approaches for hypertext navigation.
Reference: [BE96] <author> Ball, T., Eick, S., </author> <title> Software visualization in the large, </title> <journal> IEEE Computer, </journal> <volume> 29(4) </volume> <pages> 33-43, </pages> <month> (April </month> <year> 1996). </year>
Reference-contexts: DEVise [LRB97] users can link the axes of multiple plots for 1 or 2 dimensional synchronized scrolling which can also be controlled by a cursor in another more-encompassing plot. The Information Mural [JS95] and SeeSoft <ref> [BE96] </ref> provide highly reduced images of large documents or software code, using color coding and antialiasing algorithms, as scroll bars or multiple views for hierarchical browsing. <p> Scroll bars, albeit poor overviews of their associated main window, are a simple 1D example. The Information Mural [JS95], SeeSoft <ref> [BE96] </ref>, ValueBars [Chi92], and others [Eic94] provide highly reduced images of large documents or software code, using color Scroll Bar Table of Contents Index List Diagram 3: Examples of several types of hierarchical browsing coordinations. 9 coding and antialiasing algorithms, and a proportional field-of-view instead of the standard thumb control, for
Reference: [BW90] <author> Beard, D., Walker, J., </author> <title> Navigational techniques to improve the display of large two-dimensional spaces, </title> <booktitle> Behaviour & Information Technology , 9(6): </booktitle> <pages> 451-466, </pages> <year> (1990). </year>
Reference-contexts: Research indicates that potential gains from coordination strategies are significant, dramatically improving user performance (browsing software [SSS86], large 2D spaces <ref> [BW90] </ref> [Kap95], hierarchical tables of contents [CWM94], managing windows [KS97]). For example, in the field of information visualization, several different types of multiple window coordinations have been used to create powerful exploratory environments. <p> Capability to build up composite coordinations by chaining many together to create powerful and comprehensive browsing environments (as in Figures 1, 3, and 6). Save and share coordinated window groups for reuse. User performance improvement by reducing information access time, especially in the Hierarchical browsing case (as in [SSS86], <ref> [BW90] </ref>, [CWM94]), and by reducing user actions (housekeeping) required to maintain a synchronized state by hand (as in [KS97]).
Reference: [BH94] <author> Bederson, B., Hollan, J., </author> <title> Pad++: A Zooming Graphical Interface for Exploring Alternate Interface Physics, </title> <booktitle> Proc. ACM UIST 94, </booktitle> <pages> pp. 17-26, </pages> <year> (1994). </year>
Reference-contexts: The cursor link in DEVise [LRB97] links a 2D field-of-view in an overview plot to the panning control of the axes in a detail plot. Similar 2D approaches are used in Pad++ portals <ref> [BH94] </ref> and in [KPS97] for hierarchies laid out on a 2D surface. Plaisant et al. [PCS95] develops a formal notation for specifying this coordination for browsing large images in a 2D continuous space. <p> With coordination users can undo actions, try alternate paths, repeat sequences of steps, create macros, save and reuse sequences or states, maintain context with the time 10 dimension of user interaction (as overviews provide structural context), etc. Pad++ <ref> [BH94] </ref> and the Graphical History Browser [AS95] both maintain iconic node-link diagrams of visited web pages for a Netscape web browser window. Utting and Yankelovich [UY89] review several such approaches for hypertext navigation.
Reference: [Bor86] <author> Borning, A., </author> <title> Constraint-Based Tools for Building User Interfaces, </title> <journal> ACM Transactions on Graphics, </journal> <volume> 5(4), </volume> <pages> pp. 345-374, </pages> <month> (October </month> <year> 1986). </year>
Reference-contexts: Plaisant et al. [PCS95] adapted this notation for examining multi-window 2D image browser interfaces. Similar approaches are used for constraint-based simulation components <ref> [Bor86] </ref> and hypertext navigation [ISB95]. Specifying coordinations can quickly become complicated because there are many variations as is evidenced by the diversity of examples in the taxonomy. This is because window coordination is data (window contents) dependent.
Reference: [Bro91] <author> Brooks, K., </author> <title> Lilac: A Two-View Document Editor, </title> <journal> IEEE Computer, </journal> <volume> 24(6), </volume> <pages> pp. 7-19, </pages> <month> (June </month> <year> 1991). </year>
Reference-contexts: The Navigational View Builder [MFH95] brushes nodes in hierarchical information, linking treemaps (emphasizing numerical and categorical attributes), ConeTrees (emphasizing structure), and outliners (emphasizing node names). With Lilac <ref> [Bro91] </ref>, a two-view document editor, selecting text in the WYSIWYG page view also selects the corresponding text in the source text view, as in the web example (Figure 1). This strategy also employs more advanced forms of selection. Filtering, instead of highlighting selected items, removes unselected items from display (elision).
Reference: [BCS96] <author> Buja, A., Cook, D., Swayne, D., </author> <title> Interactive High-Dimensional Data Visualization, </title> <journal> Journal of Computational and Graphical Statistics, </journal> <volume> 5(1), </volume> <pages> pp. 78-99, </pages> <year> (1996). </year>
Reference-contexts: For example, in the field of information visualization, several different types of multiple window coordinations have been used to create powerful exploratory environments. XGobi <ref> [BCS96] </ref> uses brushing in multiple scatter-plot windows to visualize high-dimensional data points in which painting points in on window simultaneously paints the equivalent points in others. Visage [RLS96] allows users to drag-and-drop and then brush tabular data elements among many types of visualizations, including charts and geographical maps. <p> Some systems allow users to interactively link a set of windows within the system so users can choose which windows participate in specific coordinations. LinkWinds [JBO94] and Dylan [DP95] use a drag-and-drop action from source window to destination window to establish the link. DEVise [LRB97] and XGobi <ref> [BCS96] </ref> use selection from lists. Those that implement multiple coordination options then use a dialog box to choose among the link types. LinkWinds draws lines between linked windows to visualize the links. <p> A. Same information collections When users select (highlight, paint, brush) an item (or set of items) in one view, the system immediately highlights the equivalent item (or set), representing the same underlying data elements, in the other views. Many data analysis systems (e.g. Spotfire [AW95], XGobi <ref> [BCS96] </ref>) use this coordination to visualize high-dimensional data point sets with multiple coordinated 2D scatter plots ([MSB90] credits invention to C. Newton in 1978 [New78]). These systems provide many options for selection method (single, cumulative, box, lasso, etc.) [Wil96] and highlight style (color, size, glyph, etc.). <p> Second, the S-S (Selecting items to Selecting items) case has had significant research attention, and is already well understood. Many research projects are working on brushing (matching) techniques (Visage [RLS96], Attribute Explorer [Twe97], XmdvTool [WA95], Xgobi <ref> [BCS96] </ref>, Spotfire [AW95], etc). Continued work at HCIL on Dynamic Queries deals with filtering. To implement generalized multiple window coordination, I face 4 major hurdles: 1. User interface of coordination execution: understanding the design space of coordination types and identifying robust coordination design. 2.
Reference: [CPF84] <author> Card, S., Pavel, M., Farrell, J., </author> <title> Window-based computer dialogues, </title> <booktitle> Proc. INTERACT '84, </booktitle> <address> London, UK, </address> <pages> pp. 355-359, </pages> <year> (1984). </year>
Reference-contexts: It also reviews examples of each with research systems from the literature as well as commercial systems. I focus on coordinations for visual information seeking tasks and attempt to show application to each of seven basic datatypes (1D, 2D, 3D, Mutli-D, temporal, hierarchic, network) [Shn96]. See [NWS86], [SSS86], <ref> [CPF84] </ref> for taxonomies of general multiple window strategies, and [CR96], [Twe97] for taxonomies of interaction in information visualization. The taxonomy (Diagram 1) organizes coordination strategies into a 2x3 matrix.
Reference: [CSP97] <author> Carlis, J., Safonov, A., Perrin, D., Konstan, J., </author> <title> The Neighborhood Viewer: A Paradigm for Exploring Image Databases, </title> <booktitle> Proc. Companion of ACM CHI97 Conference, </booktitle> <pages> pp. 299-300, </pages> <year> (1997). </year>
Reference-contexts: This coordination is easily extendable to 3D, panning correlated cross-section, CT, and MRI images through the human body (Figure 3 B ,C) (see also <ref> [CSP97] </ref>). Chi et al. [CBR97] offer an interesting approach, arranging small visualizations in a spreadsheet grid and maintaining common viewing parameters within rows and columns of visualizations. 3. <p> browsing 2D and 3D image data, textual documents with visual overviews and tables of contents, and hierarchical relational data. 2D and 3D Image Browser My image-based prototype (Figure 3) has grown out of previous work on image browsing [PCS95] and the Visible Human [NSP96] (which others have since expanded on <ref> [CSP97] </ref>). This prototype gives users the ability to coordinate any number of image browsing windows for very powerful browsing techniques. It provides users with a simple toolbox of 2 types of windows: A traditional-style 2-dimensional-image browser window, with zooming and panning capability for browsing very large images. <p> It cannot be chosen or altered by the user. While this is acceptable for the simple scenarios presented here, it does not generalize to more complex situations with multiple options in which user specification is desired or required. For example, the Neighborhood Viewer <ref> [CSP97] </ref> uses an interesting variation of my coordinated orthogonal 2D views of 3D image data when browsing high resolutions. Instead of moving intersection lines, the views are yoked to show the same neighborhood of the body. When one view pans in any dimension, the other views follow along.
Reference: [CBR97] <author> Chi, E. H., Barry, P., Riedl, J., Konstan, J., </author> <title> A Spreadsheet Approach to Information Visualization, </title> <booktitle> Proc. IEEE Information Visualization 97, </booktitle> <pages> pp. 17-24, </pages> <year> (1997). </year>
Reference-contexts: This coordination is easily extendable to 3D, panning correlated cross-section, CT, and MRI images through the human body (Figure 3 B ,C) (see also [CSP97]). Chi et al. <ref> [CBR97] </ref> offer an interesting approach, arranging small visualizations in a spreadsheet grid and maintaining common viewing parameters within rows and columns of visualizations. 3.
Reference: [Chi92] <author> Chimera, R., </author> <title> Value Bars: An Information Visualization and Navigation Tool for Multi-Attribute Listings, </title> <booktitle> Proc. ACM CHI 92, </booktitle> <pages> pp. 293-294, </pages> <year> (1992). </year>
Reference-contexts: Scroll bars, albeit poor overviews of their associated main window, are a simple 1D example. The Information Mural [JS95], SeeSoft [BE96], ValueBars <ref> [Chi92] </ref>, and others [Eic94] provide highly reduced images of large documents or software code, using color Scroll Bar Table of Contents Index List Diagram 3: Examples of several types of hierarchical browsing coordinations. 9 coding and antialiasing algorithms, and a proportional field-of-view instead of the standard thumb control, for navigating 1D
Reference: [CWM94] <author> Chimera, R., Wolman, K., Mark, S., Shneiderman B., </author> <title> An exploratory evaluation of three interfaces for browsing large hierarchical tables of contents, </title> <journal> ACM Transactions on Information Systems, </journal> <volume> 12(4), </volume> <pages> pp. 383-406, </pages> <month> (Oct. 94). </month>
Reference-contexts: Research indicates that potential gains from coordination strategies are significant, dramatically improving user performance (browsing software [SSS86], large 2D spaces [BW90] [Kap95], hierarchical tables of contents <ref> [CWM94] </ref>, managing windows [KS97]). For example, in the field of information visualization, several different types of multiple window coordinations have been used to create powerful exploratory environments. <p> Save and share coordinated window groups for reuse. User performance improvement by reducing information access time, especially in the Hierarchical browsing case (as in [SSS86], [BW90], <ref> [CWM94] </ref>), and by reducing user actions (housekeeping) required to maintain a synchronized state by hand (as in [KS97]).
Reference: [CR96] <author> Chuah, M., Roth, S., </author> <title> On the Semantics of Interac tive Visualizations, </title> <booktitle> Proc. Information Visualization 96 Conference, IEEE, </booktitle> <pages> pp. 29-36, </pages> <year> (1996). </year>
Reference-contexts: I focus on coordinations for visual information seeking tasks and attempt to show application to each of seven basic datatypes (1D, 2D, 3D, Mutli-D, temporal, hierarchic, network) [Shn96]. See [NWS86], [SSS86], [CPF84] for taxonomies of general multiple window strategies, and <ref> [CR96] </ref>, [Twe97] for taxonomies of interaction in information visualization. The taxonomy (Diagram 1) organizes coordination strategies into a 2x3 matrix.
Reference: [DRK97] <author> Derthick, M., Roth, S., Kolojejchick, J., </author> <title> Coordinating Declarative Queries with a 25 Direct Manipulation Data Exploration Environment, </title> <booktitle> Proc. IEEE Information Visualization 97, </booktitle> <pages> pp. 65-72, </pages> <year> (1997). </year>
Reference-contexts: In extending the Visible Human Explorer [NSP96], users could brush a view of the cross-section image data to view a list of corresponding textual annotations [NK96] in the MeSH (Medical Subject Headings) controlled vocabulary hierarchy (Figure 4). Visage VQE <ref> [DRK97] </ref> has finally brought brushing across multiple relations to the data visualization community. 2. Navigating Views to Views This coordination tightly couples view navigation in one window to simultaneous view navigation in another window.
Reference: [DAP97] <author> Dey, A., Abowd, G., Pinkerton, M., Wood, A., CyberDesk: </author> <title> A Framework for Providing Self-Integrating Ubiquitous Software Services, </title> <booktitle> Proc. ACM UIST 97, </booktitle> <pages> pp. 75-76, </pages> <year> (1997). </year>
Reference-contexts: Similarly, Microsoft Word can look up selected words in a dictionary, thesaurus, or other reference material. More advanced capabilities are needed. For example, with CyberDesk <ref> [DAP97] </ref> selecting a phrase on a web page can automatically initiate a web search, offering a choice of specific resources to search, such as yellow pages, maps, or medical databases.
Reference: [DP95] <author> Dumas, J., Parsons, P., </author> <title> Discovering the Way Programmers Think About New Programming Environments, </title> <journal> Communications of the ACM, </journal> <volume> 38(6), </volume> <pages> pp. 45-56, </pages> <month> (June </month> <year> 1995). </year>
Reference-contexts: Apparently, Mark Ward, the author, was tired of continually moving his data between the different visualizations for different tasks. Some systems allow users to interactively link a set of windows within the system so users can choose which windows participate in specific coordinations. LinkWinds [JBO94] and Dylan <ref> [DP95] </ref> use a drag-and-drop action from source window to destination window to establish the link. DEVise [LRB97] and XGobi [BCS96] use selection from lists. Those that implement multiple coordination options then use a dialog box to choose among the link types. <p> A variant of this approach shows details of selections in a new popup window instead of a given static window, as in the FilmFinder [AS94] (selecting a dot on a scatter plot displays that records fields, including pictures). In the Apple Dylan programming environment <ref> [DP95] </ref>, users can link multiple instances of its code browser to navigate several levels of objectoriented constructs. B. Different information collections In the case of different information collections, directly selecting an item in one context shows additional details or related information from other sources in another window.
Reference: [Eic94] <author> Eick, S., </author> <title> Data Visualization Sliders, </title> <booktitle> Proc. ACM UIST 94, </booktitle> <pages> pp. 119-120, </pages> <year> (1994). </year>
Reference-contexts: Scroll bars, albeit poor overviews of their associated main window, are a simple 1D example. The Information Mural [JS95], SeeSoft [BE96], ValueBars [Chi92], and others <ref> [Eic94] </ref> provide highly reduced images of large documents or software code, using color Scroll Bar Table of Contents Index List Diagram 3: Examples of several types of hierarchical browsing coordinations. 9 coding and antialiasing algorithms, and a proportional field-of-view instead of the standard thumb control, for navigating 1D document windows (similar
Reference: [HM90] <author> Hudson, S., Mohamed, S., </author> <title> Interactive Specification of Flexible User Interface Displays, </title> <journal> ACM Transactions on Information Systems, </journal> <volume> 8(3), </volume> <pages> pp. 269-288, </pages> <month> (July </month> <year> 1990). </year>
Reference-contexts: Goals for the interface are: Supported actions: create, edit, delete, save, and load coordinations. Support each of the coordination types, for each of the basic visual data types. Learnability: single uniform interface to coordination specification (step 4). Hudson and Mohamed <ref> [HM90] </ref> created a notation system for specifying constraints between GUI widgets for automatic layout control.
Reference: [ISB95] <author> Isakowitz, T., Stohr, E., and Balasubramanian, P., RMM: </author> <title> A Methodology for Structured Hypermedia Design, </title> <journal> Communications of the ACM, </journal> <volume> 38(8), </volume> <pages> pp. 34-44, </pages> <month> (August </month> <year> 1995). </year>
Reference-contexts: Plaisant et al. [PCS95] adapted this notation for examining multi-window 2D image browser interfaces. Similar approaches are used for constraint-based simulation components [Bor86] and hypertext navigation <ref> [ISB95] </ref>. Specifying coordinations can quickly become complicated because there are many variations as is evidenced by the diversity of examples in the taxonomy. This is because window coordination is data (window contents) dependent.
Reference: [JBO94] <author> Jacobson, A., Berkin, A., Orton, M., LinkWinds: </author> <title> Interactive Scientific Data Analysis and Visualization, </title> <journal> Communications of the ACM, </journal> <volume> 37(4), </volume> <pages> pp. 43-52, </pages> <month> (April </month> <year> 1994). </year>
Reference-contexts: The Information Mural [JS95] and SeeSoft [BE96] provide highly reduced images of large documents or software code, using color coding and antialiasing algorithms, as scroll bars or multiple views for hierarchical browsing. With the LinkWinds <ref> [JBO94] </ref> system, users can link data control windows to a set of visualization windows for dynamic filtering in scientific visualization. 3 In addition to specialized visualization needs, common tasks in multiple-window environments often practically beg for coordination. <p> Apparently, Mark Ward, the author, was tired of continually moving his data between the different visualizations for different tasks. Some systems allow users to interactively link a set of windows within the system so users can choose which windows participate in specific coordinations. LinkWinds <ref> [JBO94] </ref> and Dylan [DP95] use a drag-and-drop action from source window to destination window to establish the link. DEVise [LRB97] and XGobi [BCS96] use selection from lists. Those that implement multiple coordination options then use a dialog box to choose among the link types. <p> With the LinkWinds system <ref> [JBO94] </ref>, users can link control windows to visualization windows for dynamic filtering of scientific sensor data. The Attribute Explorer [Twe97] uses additive encoding of multiple attribute selections to highlight each item in a different color depending on the number of the selections it satisfies. B.
Reference: [JS95] <author> Jerding, D., Stasko, J., </author> <title> The Information Mural: A Technique for Displaying and Navigating Large Information Spaces, </title> <booktitle> Proc. IEEE Symposium on Information Visualization, </booktitle> <pages> pp. 43-50, </pages> <month> (October </month> <year> 1995). </year>
Reference-contexts: DEVise [LRB97] users can link the axes of multiple plots for 1 or 2 dimensional synchronized scrolling which can also be controlled by a cursor in another more-encompassing plot. The Information Mural <ref> [JS95] </ref> and SeeSoft [BE96] provide highly reduced images of large documents or software code, using color coding and antialiasing algorithms, as scroll bars or multiple views for hierarchical browsing. <p> Scroll bars, albeit poor overviews of their associated main window, are a simple 1D example. The Information Mural <ref> [JS95] </ref>, SeeSoft [BE96], ValueBars [Chi92], and others [Eic94] provide highly reduced images of large documents or software code, using color Scroll Bar Table of Contents Index List Diagram 3: Examples of several types of hierarchical browsing coordinations. 9 coding and antialiasing algorithms, and a proportional field-of-view instead of the standard thumb
Reference: [KS97] <author> Kandogan, E., Shneiderman, B., </author> <title> Elastic Windows: Evaluation of Multi- Window Operations, </title> <booktitle> Proc. ACM CHI97, </booktitle> <pages> pp. 250-257, </pages> <month> (March </month> <year> 1997). </year>
Reference-contexts: Research indicates that potential gains from coordination strategies are significant, dramatically improving user performance (browsing software [SSS86], large 2D spaces [BW90] [Kap95], hierarchical tables of contents [CWM94], managing windows <ref> [KS97] </ref>). For example, in the field of information visualization, several different types of multiple window coordinations have been used to create powerful exploratory environments. <p> Save and share coordinated window groups for reuse. User performance improvement by reducing information access time, especially in the Hierarchical browsing case (as in [SSS86], [BW90], [CWM94]), and by reducing user actions (housekeeping) required to maintain a synchronized state by hand (as in <ref> [KS97] </ref>). For example, with a simple keystroke level analysis, scrolling correlated cross-section and CT scan images with synchronized scrolling coordination between the two views is half the work than without, and is even better during exploratory tasks in which users roam through the space extensively with dragging actions.
Reference: [Kap95] <author> Kaptelinin, V., </author> <title> A Comparison of Four Navigation Techniques in a 2D Browsing Task, </title> <booktitle> Proc. Companion ACM CHI95, </booktitle> <pages> pp. 282-283, </pages> <year> (1995). </year>
Reference-contexts: Research indicates that potential gains from coordination strategies are significant, dramatically improving user performance (browsing software [SSS86], large 2D spaces [BW90] <ref> [Kap95] </ref>, hierarchical tables of contents [CWM94], managing windows [KS97]). For example, in the field of information visualization, several different types of multiple window coordinations have been used to create powerful exploratory environments.
Reference: [Koi86] <author> Koivunen, M., WSE: </author> <title> An Environment for Exploring Window Strategies, </title> <journal> HCI, </journal> <volume> Vol. 2, </volume> <pages> pp. 269-295, </pages> <year> (1986). </year>
Reference-contexts: However, toolkits are still based on the independent-windows paradigm, lacking both the visual elements and the underlying support for tight coupling required for coordination. Programming each coordination is difficult, code intensive, prone to mistakes as previously described, and makes a significant software engineering task <ref> [Koi86] </ref>. The visual elements, such as highlighting techniques, multiple selections, coordination affordances, and link visualizations should become standardized in (and easily invoke-able from) common toolkits.
Reference: [KPS97] <author> Kumar, H., Plaisant, C., Shneiderman, B., </author> <title> Browsing Hierarchical Data with MultiLevel Dynamic Queries and Pruning, </title> <journal> IJHCI, </journal> <volume> vol. 46, </volume> <pages> pp. 103-124, </pages> <year> (1997). </year>
Reference-contexts: The cursor link in DEVise [LRB97] links a 2D field-of-view in an overview plot to the panning control of the axes in a detail plot. Similar 2D approaches are used in Pad++ portals [BH94] and in <ref> [KPS97] </ref> for hierarchies laid out on a 2D surface. Plaisant et al. [PCS95] develops a formal notation for specifying this coordination for browsing large images in a 2D continuous space.
Reference: [LSA95] <author> Leung, Y. K., Spence, R., Apperley, M., </author> <title> Applying Bifocal Displays to Topological Maps, </title> <journal> Intl. Journal of Human-Computer Interaction, </journal> <volume> 7(1): </volume> <pages> 79-98, </pages> <year> (1995). </year>
Reference-contexts: The taxonomy indicates the importance of appropriate highlighting, field of view boxes, two-way feedback, etc. I will continue this refinement in developing metrics for evaluating the design of hierarchical-browsing interfaces and comparing them to other user interface techniques for overview+detail, such as distortion-oriented fisheye displays <ref> [LSA95] </ref>. This work will produce general guidelines for user interface designers to: (a) identify opportunities to utilize coordinations in application designs to improve user performance and productivity, and (b) build them into systems (or rebuild faulty designs) in a robust and consistent fashion. <p> The handful of previous studies have used only trivially small information spaces and poor implementations, giving mixed results (e.g. <ref> [LSA95] </ref>). Many study variations are needed, using large information spaces with zoom factors of 1000:1, quality direct-manipulation implementations, multiple foci, and multiple information types. Similar studies need to be done to compare 3D displays to multiple coordinated 2D views for exploring volumetric information such as the Visible Human. 2.
Reference: [LRB97] <author> Livny, M., Ramakrishnan, R., Beyer, K., Chen, G., Donjerkovic, D., Lawande, S., Myllymaki, J., Wenger, K., </author> <title> DEVise: Integrated Querying and Visual Exploration of Large Datasets, </title> <booktitle> Proc. ACM SIGMOD97, </booktitle> <pages> pp. 301-312, </pages> <year> (1997). </year>
Reference-contexts: Visage [RLS96] allows users to drag-and-drop and then brush tabular data elements among many types of visualizations, including charts and geographical maps. DEVise <ref> [LRB97] </ref> users can link the axes of multiple plots for 1 or 2 dimensional synchronized scrolling which can also be controlled by a cursor in another more-encompassing plot. <p> Some systems allow users to interactively link a set of windows within the system so users can choose which windows participate in specific coordinations. LinkWinds [JBO94] and Dylan [DP95] use a drag-and-drop action from source window to destination window to establish the link. DEVise <ref> [LRB97] </ref> and XGobi [BCS96] use selection from lists. Those that implement multiple coordination options then use a dialog box to choose among the link types. LinkWinds draws lines between linked windows to visualize the links. <p> With Logos Bible Software, users can link sets of windows to simultaneously scroll through several Bible translations, commentaries, and study guides, which all share a common ordered hierarchical structure of book, chapter, and verse. 1 3 5 7 9 11 2 4 6 8 10 8 DEVise <ref> [LRB97] </ref> generalizes the Navigating Views to Views strategy to 2D, allowing users to link the x and y axis between multiple graphs to show the same domains and ranges. <p> The cursor link in DEVise <ref> [LRB97] </ref> links a 2D field-of-view in an overview plot to the panning control of the axes in a detail plot. Similar 2D approaches are used in Pad++ portals [BH94] and in [KPS97] for hierarchies laid out on a 2D surface. <p> Study 2: Learnability of Coordination Specification The second study will evaluate the end-user coordination specification interface. While some systems have been developed which allow users to link windows, little attention has been paid to the design of their user interfaces. For example, DEVise <ref> [LRB97] </ref>, the most advanced of these, allows users to link database windows with several specific coordinations. However, because the designers did not view coordination as a unified approach, the interface is rendered unusable.
Reference: [MS95] <author> Mahajan, R., Shneiderman, B., </author> <title> A Family of User Interface Consistency Checking Tools, </title> <booktitle> Proc. of the Twentieth Annual Software Engineering Workshop, </booktitle> <address> SEL-95-004, </address> <month> (Dec. </month> <year> 1995). </year>
Reference-contexts: As standards for dialog box design, which ensure consistent look and feel in software applications, have substantially improved user performance <ref> [MS95] </ref>, the same is needed for coordinations. 17 2. User Interface of Coordination Specification A user interface is needed to allow users to establish coordinations between windows. The prototypes method of dragging links between windows is a natural direct manipulation method for choosing the windows to participate in a coordination.
Reference: [MSB90] <author> McDonald, J., Stuetzle, W., Buja, A., </author> <title> Painting Multiple Views of Complex Objects, </title> <booktitle> Proc. ECOOP/OOPSLA90, </booktitle> <pages> pp. 245-257, </pages> <year> (1990). </year>
Reference: [MFH95] <author> Mukherjea, S., Foley, J., Hudson, S., </author> <title> Visualizing Complex Hypermedia Networks through Multiple Hierarchical Views, </title> <booktitle> Proc. ACM CHI'95, </booktitle> <pages> pp. 331-337, </pages> <year> (1995). </year>
Reference-contexts: Visage [RLS96] generalizes this coordination, allowing users to drag-and-drop and then brush tabular data elements among many types of visualizations, including charts and geographical maps. The Navigational View Builder <ref> [MFH95] </ref> brushes nodes in hierarchical information, linking treemaps (emphasizing numerical and categorical attributes), ConeTrees (emphasizing structure), and outliners (emphasizing node names). <p> In a real time environment, users can quickly flip through many pages by simply dragging the mouse over a series of items in the overview. With web site visualization tools, such as the Navigational View Builder <ref> [MFH95] </ref>, users can select any node on a large site to display that web page in a separate browser window. This strategy is especially popular in pane-based systems (SpotFire [AW95], Windows Explorer, Netscape frames, etc.).
Reference: [Mye88] <author> Myers, B., </author> <title> Window Interfaces: A Taxonomy of Window Manager User Interfaces, </title> <journal> 26 IEEE Computer Graphics and Applications, </journal> <volume> 8(5): </volume> <pages> 65-84, </pages> <month> (September </month> <year> 1988). </year>
Reference-contexts: Unfortunately, however, these windowing environments treat windows as completely independent entities, and have the effect of isolating the contents of each window on the desktop. There is no representation or interactive mechanism for windows related by task or content <ref> [Mye88] </ref>. Hence, semantic relationships between windows are lost, or at least maintained only in the users mind. This leads to burdensome increased cognitive load and decreased performance as users must manage the relationships by hand or are unable to exploit them at all.
Reference: [New78] <author> Newton, C., </author> <title> Graphics: from alpha to omega in data analysis, Proc. Symposium on Graphical Representation of Multivariate Data, </title> <editor> Wang, editor, </editor> <publisher> Academic Press, </publisher> <month> (Feb </month> <year> 1978). </year>
Reference-contexts: Many data analysis systems (e.g. Spotfire [AW95], XGobi [BCS96]) use this coordination to visualize high-dimensional data point sets with multiple coordinated 2D scatter plots ([MSB90] credits invention to C. Newton in 1978 <ref> [New78] </ref>). These systems provide many options for selection method (single, cumulative, box, lasso, etc.) [Wil96] and highlight style (color, size, glyph, etc.). Visage [RLS96] generalizes this coordination, allowing users to drag-and-drop and then brush tabular data elements among many types of visualizations, including charts and geographical maps.
Reference: [NWS86] <author> Norman, K., Weldon, L., Shneiderman, B., </author> <title> Cognitive layouts of windows and multiple screens for user interfaces, </title> <journal> Intl Journal of Man-Machine Studies, </journal> <volume> 25, </volume> <pages> pp. 229-248, </pages> <month> (August </month> <year> 1986). </year>
Reference-contexts: It also reviews examples of each with research systems from the literature as well as commercial systems. I focus on coordinations for visual information seeking tasks and attempt to show application to each of seven basic datatypes (1D, 2D, 3D, Mutli-D, temporal, hierarchic, network) [Shn96]. See <ref> [NWS86] </ref>, [SSS86], [CPF84] for taxonomies of general multiple window strategies, and [CR96], [Twe97] for taxonomies of interaction in information visualization. The taxonomy (Diagram 1) organizes coordination strategies into a 2x3 matrix.
Reference: [NK96] <author> North, C., and Korn, F., </author> <title> Browsing Anatomical Image Databases: A Case Study of the Visible Human, </title> <booktitle> Conf. Companion and Video Proc. ACM CHI'96 Conference - Human Factors in Computing Systems, </booktitle> <pages> pp. 414-415, </pages> <year> (1996). </year>
Reference-contexts: In extending the Visible Human Explorer [NSP96], users could brush a view of the cross-section image data to view a list of corresponding textual annotations <ref> [NK96] </ref> in the MeSH (Medical Subject Headings) controlled vocabulary hierarchy (Figure 4). Visage VQE [DRK97] has finally brought brushing across multiple relations to the data visualization community. 2. Navigating Views to Views This coordination tightly couples view navigation in one window to simultaneous view navigation in another window.
Reference: [NSP96] <author> North, C., Shneiderman, B., Plaisant, C., </author> <title> User Controlled Overviews of an Image Library: A Case Study of the Visible Human, </title> <booktitle> Proc. ACM Digital Libraries '96 Conference, </booktitle> <pages> pp. 74-82, </pages> <year> (1996). </year>
Reference-contexts: In Microsoft Word, selecting an annotation in the annotations window also highlights its corresponding pointer in the document text window to help users locate it in the text. In extending the Visible Human Explorer <ref> [NSP96] </ref>, users could brush a view of the cross-section image data to view a list of corresponding textual annotations [NK96] in the MeSH (Medical Subject Headings) controlled vocabulary hierarchy (Figure 4). Visage VQE [DRK97] has finally brought brushing across multiple relations to the data visualization community. 2. <p> Plaisant et al. [PCS95] develops a formal notation for specifying this coordination for browsing large images in a 2D continuous space. For a 3D volumetric image space, with the Visible Human Explorer <ref> [NSP96] </ref> users can rapidly navigate each orthogonal 2D cross-section view through the human body by dragging the corresponding cut lines in the other views, and receive continuous feedback of contents (Figure 2). Discrete spaces, such as hierarchical menus, use highlighted selection. <p> This section describes the prototypes for browsing 2D and 3D image data, textual documents with visual overviews and tables of contents, and hierarchical relational data. 2D and 3D Image Browser My image-based prototype (Figure 3) has grown out of previous work on image browsing [PCS95] and the Visible Human <ref> [NSP96] </ref> (which others have since expanded on [CSP97]). This prototype gives users the ability to coordinate any number of image browsing windows for very powerful browsing techniques. <p> Users can also zoom in and out with left and right mouse clicks in the image window. A 3-dimensional image browser window in the style of the Visible Human Explorer <ref> [NSP96] </ref> views.
Reference: [PCH92] <author> Plaisant, C., Carr, D., Hasegawa, H., </author> <title> When an intermediate view matters: a 2D browser experiment, </title> <institution> University of Maryland Computer Science Dept Technical Report #2980, </institution> <month> (October </month> <year> 1992). </year>
Reference-contexts: An important metric is the zoom factor between the overview selection and detail view. Larger zoom factors provide for more information. While zoom factors for distortion techniques are typically limited to 5 or less, coordinated windows can reach zoom factors of 20 <ref> [PCH92] </ref>. Also, several of these coordinations can be chained together using intermediate views [PCS95] to reach zoom factors of 400 and so on (see Figure 6). This coordination can be further segmented by the continuity of the information space.
Reference: [PCS95] <author> Plaisant, C., Carr, D., Shneiderman, B., </author> <title> Image browsers: taxonomy, guidelines, and informal specifications, </title> <journal> IEEE Software, </journal> <volume> 12(2), </volume> <pages> pp. 21-32, </pages> <month> (March </month> <year> 1995). </year>
Reference-contexts: Larger zoom factors provide for more information. While zoom factors for distortion techniques are typically limited to 5 or less, coordinated windows can reach zoom factors of 20 [PCH92]. Also, several of these coordinations can be chained together using intermediate views <ref> [PCS95] </ref> to reach zoom factors of 400 and so on (see Figure 6). This coordination can be further segmented by the continuity of the information space. <p> The cursor link in DEVise [LRB97] links a 2D field-of-view in an overview plot to the panning control of the axes in a detail plot. Similar 2D approaches are used in Pad++ portals [BH94] and in [KPS97] for hierarchies laid out on a 2D surface. Plaisant et al. <ref> [PCS95] </ref> develops a formal notation for specifying this coordination for browsing large images in a 2D continuous space. <p> This section describes the prototypes for browsing 2D and 3D image data, textual documents with visual overviews and tables of contents, and hierarchical relational data. 2D and 3D Image Browser My image-based prototype (Figure 3) has grown out of previous work on image browsing <ref> [PCS95] </ref> and the Visible Human [NSP96] (which others have since expanded on [CSP97]). This prototype gives users the ability to coordinate any number of image browsing windows for very powerful browsing techniques. <p> An arrow from one object to another contains an equation that indicates the dynamic spacing between the displayed objects, and uses a Springs and Struts model for simple proportional layouts (which is now used in the Visix Galaxy development environment). Plaisant et al. <ref> [PCS95] </ref> adapted this notation for examining multi-window 2D image browser interfaces. Similar approaches are used for constraint-based simulation components [Bor86] and hypertext navigation [ISB95]. Specifying coordinations can quickly become complicated because there are many variations as is evidenced by the diversity of examples in the taxonomy.
Reference: [RLS96] <author> Roth, S., Lucas, P., Senn, J., Gomberg, C., Burks, M., Stroffolino, P., Kolojejchick, J., Dunmire, C., Visage: </author> <title> A User Interface Environment for Exploring Information, </title> <booktitle> Proc. Information Visualization, IEEE, </booktitle> <pages> pp. 3-12, </pages> <month> (October </month> <year> 1996). </year>
Reference-contexts: XGobi [BCS96] uses brushing in multiple scatter-plot windows to visualize high-dimensional data points in which painting points in on window simultaneously paints the equivalent points in others. Visage <ref> [RLS96] </ref> allows users to drag-and-drop and then brush tabular data elements among many types of visualizations, including charts and geographical maps. DEVise [LRB97] users can link the axes of multiple plots for 1 or 2 dimensional synchronized scrolling which can also be controlled by a cursor in another more-encompassing plot. <p> Newton in 1978 [New78]). These systems provide many options for selection method (single, cumulative, box, lasso, etc.) [Wil96] and highlight style (color, size, glyph, etc.). Visage <ref> [RLS96] </ref> generalizes this coordination, allowing users to drag-and-drop and then brush tabular data elements among many types of visualizations, including charts and geographical maps. The Navigational View Builder [MFH95] brushes nodes in hierarchical information, linking treemaps (emphasizing numerical and categorical attributes), ConeTrees (emphasizing structure), and outliners (emphasizing node names). <p> Second, the S-S (Selecting items to Selecting items) case has had significant research attention, and is already well understood. Many research projects are working on brushing (matching) techniques (Visage <ref> [RLS96] </ref>, Attribute Explorer [Twe97], XmdvTool [WA95], Xgobi [BCS96], Spotfire [AW95], etc). Continued work at HCIL on Dynamic Queries deals with filtering. To implement generalized multiple window coordination, I face 4 major hurdles: 1.
Reference: [Shn96] <author> Shneiderman, B., </author> <title> The eyes have it: A task by data type taxonomy of information visualizations, </title> <booktitle> Proc. IEEE Visual Languages '96, </booktitle> <address> pp.336-343, </address> <year> (1996). </year>
Reference-contexts: It also reviews examples of each with research systems from the literature as well as commercial systems. I focus on coordinations for visual information seeking tasks and attempt to show application to each of seven basic datatypes (1D, 2D, 3D, Mutli-D, temporal, hierarchic, network) <ref> [Shn96] </ref>. See [NWS86], [SSS86], [CPF84] for taxonomies of general multiple window strategies, and [CR96], [Twe97] for taxonomies of interaction in information visualization. The taxonomy (Diagram 1) organizes coordination strategies into a 2x3 matrix. <p> Standardize coordination via integrating into window managers, modeled after existing cut-and-paste and drag-and drop facilities, with simple window applications hooks, so that users can link any windows developed for that windowing platform. Coordination between homogenous and heterogeneous data types. Shneiderman identifies 7 basic visual information types <ref> [Shn96] </ref> : temporal (timelines), 1D (lists, text), 2D (image, plots), 3D (volume, surface), multi-D (data tables), hierarchy (trees), network (graphs). Robust and consistent look and feel of coordinations across domains (coordination execution level). <p> Capability to save, share, and reuse coordinations (including composite coordinations). 15 Domain The user tasks which this research will support are those of visual information seeking (browsing large information spaces via direct manipulation), which Shneiderman identifies as: overview, zoom, filter, details on demand, relate, extract, history <ref> [Shn96] </ref>. Coordinations involved in other types of tasks, such as editing, are outside the scope of this research. For the information domain, this research will support coordinations between a variety of window types.
Reference: [Shn98] <author> Shneiderman, B., </author> <title> Designing the User Interface: Strategies for Effective Human-Computer Interaction, Third Edition, </title> <publisher> Addison-Wesley, </publisher> <year> (1998). </year>
Reference-contexts: Because of this lack of innovation, advantages of large screens and fast displays are lost or misused, leading to confusion, poor user performance, frustration, and missed opportunities. In designing user interfaces for information exploration, a strategy that has proven increasingly effective is multiple window coordination <ref> [Shn98] </ref>. In this strategy two or more separate windows containing related information are used cooperatively for the accomplishment of a single task. The windows respond in a unified manner to user activity in the task domain. <p> Implementation and specification of a window linking tool, called LinkKit, allowing users to specify coordinations between a set of application windows spanning both text and graphics domains, covering each of 7 basic datatypes (temporal, 1D, 2D, 3D, multi-D, hierarchic, network) <ref> [Shn98] </ref>. Sufficient implementation and specification to guide potential developers of commercial window managers. Benefits The benefits of my coordination approach appear to be significant: Flexibility to create and customize coordinated browsing environment to tasks. Robust and consistent look and feel of coordinations across domains. Maintains semantic consistency among views.
Reference: [SSS86] <author> Shneiderman, B., Shafer, P., Simon, R., Weldon, L., </author> <title> Display strategies for program browsing: concepts and an experiment, </title> <journal> IEEE Software, </journal> <volume> 3(3), </volume> <pages> pp. 7-15, </pages> <month> (March </month> <year> 1986). </year>
Reference-contexts: Research indicates that potential gains from coordination strategies are significant, dramatically improving user performance (browsing software <ref> [SSS86] </ref>, large 2D spaces [BW90] [Kap95], hierarchical tables of contents [CWM94], managing windows [KS97]). For example, in the field of information visualization, several different types of multiple window coordinations have been used to create powerful exploratory environments. <p> It also reviews examples of each with research systems from the literature as well as commercial systems. I focus on coordinations for visual information seeking tasks and attempt to show application to each of seven basic datatypes (1D, 2D, 3D, Mutli-D, temporal, hierarchic, network) [Shn96]. See [NWS86], <ref> [SSS86] </ref>, [CPF84] for taxonomies of general multiple window strategies, and [CR96], [Twe97] for taxonomies of interaction in information visualization. The taxonomy (Diagram 1) organizes coordination strategies into a 2x3 matrix. <p> Capability to build up composite coordinations by chaining many together to create powerful and comprehensive browsing environments (as in Figures 1, 3, and 6). Save and share coordinated window groups for reuse. User performance improvement by reducing information access time, especially in the Hierarchical browsing case (as in <ref> [SSS86] </ref>, [BW90], [CWM94]), and by reducing user actions (housekeeping) required to maintain a synchronized state by hand (as in [KS97]).
Reference: [SMH96] <author> Spring, M., Morse, E., Heo, M., </author> <title> Multilevel Navigation of a Document Space, </title> <booktitle> Proc. Leveraging Cyberspace Conference, </booktitle> <month> (October </month> <year> 1996). </year>
Reference-contexts: Using the document as an index, selecting hypertext links could open the destination pages in a fourth window (e.g. to examine references in a technical paper). In fact, several information visualization research projects focus entirely on integrating sets of existing visualization interfaces via coordination strategies. For example, the CASCADE <ref> [SMH96] </ref> system has 4 levels of coordinated interfaces for navigating and zooming through 4 different levels of scale within a large document space : the Docuverse level (collection of up to 5000 documents), Webview (up to 500 documents), Landmarks (within a single document), and Preview (individual item in a document, such
Reference: [Tuf97] <author> Tufte, E., </author> <title> Visual Explanations, </title> <publisher> Graphics Press, </publisher> <year> (1997). </year>
Reference: [Twe97] <author> Tweedie, L., </author> <title> Characterizing Interactive Externalizations, </title> <booktitle> Proc. ACM CHI 97 Conference, </booktitle> <pages> pp. 375-382, </pages> <year> (1997). </year>
Reference-contexts: I focus on coordinations for visual information seeking tasks and attempt to show application to each of seven basic datatypes (1D, 2D, 3D, Mutli-D, temporal, hierarchic, network) [Shn96]. See [NWS86], [SSS86], [CPF84] for taxonomies of general multiple window strategies, and [CR96], <ref> [Twe97] </ref> for taxonomies of interaction in information visualization. The taxonomy (Diagram 1) organizes coordination strategies into a 2x3 matrix. <p> With the LinkWinds system [JBO94], users can link control windows to visualization windows for dynamic filtering of scientific sensor data. The Attribute Explorer <ref> [Twe97] </ref> uses additive encoding of multiple attribute selections to highlight each item in a different color depending on the number of the selections it satisfies. B. Different information collections Brushing can be generalized to visualize not just equivalencies between same information collections, but also arbitrary relations between different collections. <p> Second, the S-S (Selecting items to Selecting items) case has had significant research attention, and is already well understood. Many research projects are working on brushing (matching) techniques (Visage [RLS96], Attribute Explorer <ref> [Twe97] </ref>, XmdvTool [WA95], Xgobi [BCS96], Spotfire [AW95], etc). Continued work at HCIL on Dynamic Queries deals with filtering. To implement generalized multiple window coordination, I face 4 major hurdles: 1. User interface of coordination execution: understanding the design space of coordination types and identifying robust coordination design. 2.
Reference: [UY89] <author> Utting, K., Yankelovich, N., </author> <title> Context and Orientation in Hypermedia Networks, </title> <journal> ACM Transactions on Information Systems, </journal> <volume> 7(1), </volume> <pages> pp. 58-84, </pages> <month> (January </month> <year> 1989). </year>
Reference-contexts: Pad++ [BH94] and the Graphical History Browser [AS95] both maintain iconic node-link diagrams of visited web pages for a Netscape web browser window. Utting and Yankelovich <ref> [UY89] </ref> review several such approaches for hypertext navigation. They extend their Intermedia system to include a map of destinations that can be reached from the current page as well, hence providing a view of both history and potential future.
Reference: [WA95] <author> Ward, M., Allen, M., </author> <title> High dimensional Brushing for Interactive Exploration of Multivariate Data, </title> <booktitle> Proc. IEEE Visualization 95, </booktitle> <pages> pp. 271-278, </pages> <year> (1995). </year>
Reference-contexts: XmdvTool <ref> [WA95] </ref> tightly integrates several well-known data visualization interfaces via brushing. Apparently, Mark Ward, the author, was tired of continually moving his data between the different visualizations for different tasks. <p> Second, the S-S (Selecting items to Selecting items) case has had significant research attention, and is already well understood. Many research projects are working on brushing (matching) techniques (Visage [RLS96], Attribute Explorer [Twe97], XmdvTool <ref> [WA95] </ref>, Xgobi [BCS96], Spotfire [AW95], etc). Continued work at HCIL on Dynamic Queries deals with filtering. To implement generalized multiple window coordination, I face 4 major hurdles: 1. User interface of coordination execution: understanding the design space of coordination types and identifying robust coordination design. 2.

References-found: 50

