URL: ftp://ftp.cs.purdue.edu/pub/jorg/9294.ps.Z
Refering-URL: http://www.cs.purdue.edu/homes/jorg/jorgs_papers.html
Root-URL: http://www.cs.purdue.edu
Title: Chapter 1 Constructing C 1 surfaces of arbitrary topology using biquadratic and bicubic splines  
Author: Jorg Peters 
Date: 1.1. Introduction  
Abstract: Two approaches to building smooth free-form surfaces, generalized subdivision and the composition of surfaces from patches, are combined to generalize biquadratic tensor-product B-splines surfaces. The result is a low degree polynomial surface representation with control via the input mesh of points. The simplicity of the construction forces the surface to closely follow the design intent expressed by the input data. Cutting corners and edges to smooth a polytope is a geometrically intuitive design paradigm. Algorithmically, it is realized by generalized subdivision. Given an input mesh of points delineating a surface, the algorithms of [4], [6], [14], [8] etc. create at each stage a refined mesh of points by averaging neighboring points of the current mesh. Where the mesh is regular, e.g. where each mesh point is surrounded by exactly four quadrilateral cells, the mesh points can be interpreted as B-spline control points and the refinement of the mesh as the subdivision of the spline. Thus the limit surface has a standard parametrization of low degree. Unfortunately, regular meshes can only model very restricted geometric configurations. Modeling real world objects without singularity and such that the mesh conforms with the features, generally requires an irregular mesh and, for such meshes, generalized subdivision methods do not provide an explicit parametrization of the limit surface. This not only makes it tricky to establish elementary properties like tangent plane continuity of the limit surface (see e.g. [7], [1],[2],[3]), but is also a major obstacle for integrating these techniques with other computer aided design representations. Assembling surfaces from patches is a second design paradigm. A number of surface constructions for irregular meshes have been derived over the last decade [10]. Compared to the standard tensor product B-spline representation, these constructions either sacrifice the low degree of the surfaces (e.g. [20],[12]) or depart from the standard polynomial representation (e.g. [5], [16]). However, 
Abstract-found: 1
Intro-found: 0
Reference: [1] <author> A.A. Ball, D.J.T. Storry, </author> <title> A matrix approach to the analysis of recursively generated B-spline surfaces, </title> <booktitle> Computer Aided Design 18, </booktitle> <volume> No 8, </volume> <pages> (1986) , pp. 437-442. </pages>
Reference-contexts: The scalar ff 2 <ref> [0; 1] </ref> is a shape parameter proportional to the diameter of the tangent plane of first differences (cf. [15, Fig.3]) and therefore similar to the blend ratio of the Doo-Sabin algorithm. Its default setting is ff = 1. <p> Similarly, one can interpolate normals at the vertices. A2a. Conic blends and rational patches. To obtain conic blends and, more generally, rational surfaces, treat the control points as vectors in IR 4 and the fourth coordinate as an additional shape parameter. If P; Q : <ref> [0; 1] </ref> 2 7! IR 3 and p; q : [0; 1] 2 7! IR and P = Q and p = q along a boundary shared by the functions P=p and Q=q, then the continuity conditions (see next page) D 1 ( q P () hold along that boundary if <p> A2a. Conic blends and rational patches. To obtain conic blends and, more generally, rational surfaces, treat the control points as vectors in IR 4 and the fourth coordinate as an additional shape parameter. If P; Q : <ref> [0; 1] </ref> 2 7! IR 3 and p; q : [0; 1] 2 7! IR and P = Q and p = q along a boundary shared by the functions P=p and Q=q, then the continuity conditions (see next page) D 1 ( q P () hold along that boundary if the masks of the algorithm are applied to the coefficients <p> D 1 denotes differentiation in the direction perpendicular to E p and the connecting map ' maps interior points of q to exterior points of p thus avoiding cusps. The components of ' are ' <ref> [1] </ref> and ' [2] Theorem 1.3.3 The surfaces generated by the algorithm are tangent plane continuous. Surfaces generated from input meshes with the same connectivity and the same blend ratio for corresponding cells form a smooth vector space. <p> Choosing the extension across the boundaries of the biquadratic complex to be parametrically C 1 , i.e. i;j to be the identity, leads in general to an inconsistent system of equations for bicubics. In particular, D 1 0 <ref> [1] </ref> i has to be at least quadratic, since D 2 D 1 0 [1] i (0; 0) is zero rather than 2c. This results in n additional constraints but only one of n tangent coefficients and one of n twist coefficients may be chosen freely in addition to S. <p> In particular, D 1 0 <ref> [1] </ref> i has to be at least quadratic, since D 2 D 1 0 [1] i (0; 0) is zero rather than 2c. This results in n additional constraints but only one of n tangent coefficients and one of n twist coefficients may be chosen freely in addition to S.
Reference: [2] <author> A.A. Ball, D.J.T. Storry, </author> <title> Conditions for tangent plane continuity over recursively generated B-spline surfaces, </title> <journal> ACM TOG 7, </journal> <volume> No 2, </volume> <year> (1988), </year> <pages> pp. 83-1002. </pages>
Reference-contexts: D 1 denotes differentiation in the direction perpendicular to E p and the connecting map ' maps interior points of q to exterior points of p thus avoiding cusps. The components of ' are ' [1] and ' <ref> [2] </ref> Theorem 1.3.3 The surfaces generated by the algorithm are tangent plane continuous. Surfaces generated from input meshes with the same connectivity and the same blend ratio for corresponding cells form a smooth vector space. The proof of the first part of the theorem is divided into four lemmas.
Reference: [3] <author> A.A. Ball, D.J.T. Storry, </author> <title> Design of an n-sided surface patch from Hermite boundary data. </title> <booktitle> Computer Aided Geometric Design 6, </booktitle> <year> (1989), </year> <pages> pp. 111-120. </pages>
Reference: [4] <author> E. Catmull, J. Clark, </author> <title> Recursively generated B-spline surfaces on arbitrary topological meshes, </title> <booktitle> Computer Aided Design 10, </booktitle> <volume> No 6, </volume> <year> (1978), </year> <pages> pp. 350-355. </pages>
Reference-contexts: Cutting corners and edges to smooth a polytope is a geometrically intuitive design paradigm. Algorithmically, it is realized by generalized subdivision. Given an input mesh of points delineating a surface, the algorithms of <ref> [4] </ref>, [6], [14], [8] etc. create at each stage a refined mesh of points by averaging neighboring points of the current mesh.
Reference: [5] <author> H. Chiyokura and F. Kimura, </author> <title> Design of Solids with Free-form Surfaces, </title> <journal> Computer Graphics, </journal> <volume> 17, No. 3, </volume> <year> (1983), </year> <pages> pp. 289-298. </pages>
Reference-contexts: A number of surface constructions for irregular meshes have been derived over the last decade [10]. Compared to the standard tensor product B-spline representation, these constructions either sacrifice the low degree of the surfaces (e.g. [20],[12]) or depart from the standard polynomial representation (e.g. <ref> [5] </ref>, [16]).
Reference: [6] <author> D. Doo, </author> <title> A subdivision algorithm for smoothing down irregularly shaped polyhedrons, </title> <booktitle> Proceedings on interactive techniques in computer aided design, </booktitle> <address> Bologna, </address> <year> (1978), </year> <pages> pp. 157-165. </pages>
Reference-contexts: Cutting corners and edges to smooth a polytope is a geometrically intuitive design paradigm. Algorithmically, it is realized by generalized subdivision. Given an input mesh of points delineating a surface, the algorithms of [4], <ref> [6] </ref>, [14], [8] etc. create at each stage a refined mesh of points by averaging neighboring points of the current mesh. <p> Refining the input mesh to separate irregular mesh points by layers ofregular B-spline control points. The refinement gives the object its rough shape and isolates non quadrilateral mesh cells. It consists of two steps of Doo and Sabin's averaging procedure <ref> [6] </ref>. At each step, s new points are created for each s-sided cell. Each new point connects to four new points, two generated at the two adjacent vertices of the same cell and two corresponding to adjacent cells of the same old mesh point cf. Fig. 11.1. <p> If ff f = 1=2 uniformly, the cells of the refined quadrilateral mesh correspond to the same quadratic and can be stored more efficiently <ref> [6, p 163] </ref>.
Reference: [7] <author> D. Doo and M. Sabin, </author> <title> Behaviour of recursive division surfaces near extraordinary points, </title> <booktitle> Computer Aided Design 10, </booktitle> <volume> No 6, </volume> <year> (1978), </year> <pages> pp. 350-355. </pages>
Reference-contexts: This not only makes it tricky to establish elementary properties like tangent plane continuity of the limit surface (see e.g. <ref> [7] </ref>, [1],[2],[3]), but is also a major obstacle for integrating these techniques with other computer aided design representations. Assembling surfaces from patches is a second design paradigm. A number of surface constructions for irregular meshes have been derived over the last decade [10].
Reference: [8] <author> N. Dyn, D. Levin, D. Liu, </author> <title> Interpolatory convexity preserving subdivision schemes for curves and surfaces, </title> <note> preprint 1992. </note>
Reference-contexts: Cutting corners and edges to smooth a polytope is a geometrically intuitive design paradigm. Algorithmically, it is realized by generalized subdivision. Given an input mesh of points delineating a surface, the algorithms of [4], [6], [14], <ref> [8] </ref> etc. create at each stage a refined mesh of points by averaging neighboring points of the current mesh.
Reference: [9] <author> T.N.T. Goodman, </author> <title> Closed surfaces defined from biquadratic splines, </title> <booktitle> Constructive Approximation 7 1991, </booktitle> <pages> 149-160. </pages>
Reference-contexts: Thus the algorithms of <ref> [9] </ref>, [13] and [17] fix the reparametrizations a priori depending only on the number of the patches joining at a mesh point; in order to match geometric data, a large sparse linear system is solved. This makes it tricky to reason about the shape of the resulting surface.
Reference: [10] <author> J.A. Gregory, </author> <title> Smooth parametric surfaces and n-sided patches, Computation SMOOTH BIQUADRATIC-BICUBIC SURFACES 19 of curves and Surfaces, </title> <editor> W. Dahmen, M. Gasca and C.A. Micchelli, eds., </editor> <publisher> Kluwer Academic Publishers, </publisher> <address> Dordrecht, </address> <year> 1990, </year> <pages> pp. 457-498. </pages>
Reference-contexts: Assembling surfaces from patches is a second design paradigm. A number of surface constructions for irregular meshes have been derived over the last decade <ref> [10] </ref>. Compared to the standard tensor product B-spline representation, these constructions either sacrifice the low degree of the surfaces (e.g. [20],[12]) or depart from the standard polynomial representation (e.g. [5], [16]).
Reference: [11] <author> J.A. Gregory, J. Zhou(1990), </author> <title> Filling polygonal holes with bicubic patches, </title> <institution> TR-05-91, Brunel University,Uxbridge, </institution> <address> UB8 3PH, England, </address> <month> March </month> <year> 1991. </year>
Reference-contexts: (4C i + 4C i+1 + C i1 )=9 1 (7C i + C i+1 + C i1 ) + 6 1 2 X (1) j (B j;2 + B j+1;1 ): This solution can also be applied if the surrounding patch complex is bicu-bic resulting in the construction of <ref> [11, Figs 4.1-3] </ref>. Figure 3.1 compares the distribution of the Bernstein-Bezier coefficients 16 FAIR CURVES AND SURFACES ff = 0:5 ff = 0:5 1.4. Examples The following examples illustrate the flexibility of the algorithm with respect to the topological structure and the blend ratio.
Reference: [12] <author> J. M. Hahn, </author> <title> Filling polygonal holes with rectangular patches, Theory and Practice of geometric modeling, </title> <editor> W. Straer and H.-P. Seidel eds., </editor> <publisher> Springer 1989. </publisher>
Reference: [13] <author> K. Hollig, H. Mogerle, G-splines, </author> <booktitle> Computer Aided Geometric Design 7, </booktitle> <year> (1989), </year> <pages> pp. 197-207. </pages>
Reference-contexts: Thus the algorithms of [9], <ref> [13] </ref> and [17] fix the reparametrizations a priori depending only on the number of the patches joining at a mesh point; in order to match geometric data, a large sparse linear system is solved. This makes it tricky to reason about the shape of the resulting surface.
Reference: [14] <author> C. </author> <title> Loop Smooth subdivision surfaces based on triangles, </title> <type> Master's thesis, </type> <institution> (1987), University of Utah. </institution>
Reference-contexts: Cutting corners and edges to smooth a polytope is a geometrically intuitive design paradigm. Algorithmically, it is realized by generalized subdivision. Given an input mesh of points delineating a surface, the algorithms of [4], [6], <ref> [14] </ref>, [8] etc. create at each stage a refined mesh of points by averaging neighboring points of the current mesh.
Reference: [15] <author> C. </author> <title> Loop A G 1 triangular spline surface of arbitrary topology, </title> <type> manuscript, </type> <institution> Dept. of CS and Eng., (1990), University of Washington, </institution> <month> April </month> <year> 1990. </year>
Reference-contexts: The scalar ff 2 [0; 1] is a shape parameter proportional to the diameter of the tangent plane of first differences (cf. <ref> [15, Fig.3] </ref>) and therefore similar to the blend ratio of the Doo-Sabin algorithm. Its default setting is ff = 1. The vector E i := (1 3 2c P 31;i is an average of the interior coefficients of the boundary curve. SMOOTH BIQUADRATIC-BICUBIC SURFACES 7 1.2.1. Extensions of the algorithm.
Reference: [16] <author> C. Loop, T. DeRose, </author> <title> Generalized B-spline surfaces of arbitrary topology, </title> <booktitle> Proceedings of Siggraph '90. </booktitle>
Reference-contexts: A number of surface constructions for irregular meshes have been derived over the last decade [10]. Compared to the standard tensor product B-spline representation, these constructions either sacrifice the low degree of the surfaces (e.g. [20],[12]) or depart from the standard polynomial representation (e.g. [5], <ref> [16] </ref>).
Reference: [17] <author> H. Mogerle, </author> <title> G-splines hoherer Ordnung, </title> <type> thesis, </type> <institution> Math Inst A, University of Stuttgart, Germany, </institution> <year> (1992). </year>
Reference-contexts: Thus the algorithms of [9], [13] and <ref> [17] </ref> fix the reparametrizations a priori depending only on the number of the patches joining at a mesh point; in order to match geometric data, a large sparse linear system is solved. This makes it tricky to reason about the shape of the resulting surface.
Reference: [18] <author> J. Peters, </author> <note> C 1 free-form surface splines SIAM Numer. Anal. x 199x. </note>
Reference-contexts: Since the cubic construction averages the L i and the L i are coplanar, the second claim follows. 14 FAIR CURVES AND SURFACES a (1 t 2 ) and = id. For a similar surface construction, <ref> [18] </ref> establishes that the surface lies in the convex hull of the control mesh. 1.3.4. A remark on parametric C 1 continuity, bicubic patches and triangular mesh cells.
Reference: [19] <author> M. Sabin, </author> <title> Non-rectangular surface patches suitable for inclusion in a B-spline surface, </title> <editor> in P. ten Hagen (ed.), </editor> <booktitle> Proceedings of Eurographics '83, </booktitle> <publisher> North Holland, </publisher> <year> 1983, </year> <pages> pp. 57-69. </pages>
Reference: [20] <author> R.F. Sarraga, </author> <title> G 1 Interpolation of Generally Unrestricted Cubic Bezier curves, </title> <booktitle> Computer Aided Geometric Design 4(1-2), </booktitle> <year> (1987), </year> <pages> pp. </pages> <year> 23-40,1987. </year>
Reference: [21] <author> J.J. van Wijk, </author> <title> Bicubic patches for approximating non-rectangular control-point meshes, </title> <booktitle> Computer Aided Geometric Design 3, </booktitle> <volume> No 1, </volume> <year> (1984), </year> <pages> pp. 1-13. </pages>
Reference-contexts: This makes it tricky to reason about the shape of the resulting surface. The algorithm proposed here reconciles the subdivision paradigm with the parametric approach. It generalizes the standard biquadratic tensor-product spline representation to irregular meshes. In particular, there are no regularity restrictions on the input mesh as in <ref> [21] </ref>. The underlying idea is to use a small number of subdivisions to give the surface its rough shape and separate irregular mesh regions.
References-found: 21

