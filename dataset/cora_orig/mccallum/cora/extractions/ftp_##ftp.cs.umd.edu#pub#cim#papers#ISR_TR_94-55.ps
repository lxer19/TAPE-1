URL: ftp://ftp.cs.umd.edu/pub/cim/papers/ISR_TR_94-55.ps
Refering-URL: http://www.cs.umd.edu/users/regli/
Root-URL: 
Title: Extracting Alternative Machining Features: An Algorithmic Approach  
Author: William C. Regli Satyandra K. Gupta Dana S. Nau William C. Regli 
Note: Corresponding Author:  
Address: College Park, MD 20742  College Park, MD 20742  College Park, MD 20742  College Park, MD 20742  
Affiliation: Department of Computer Science and Institute for Systems Research University of Maryland  Mechanical Engineering Department and Institute for Systems Research University of Maryland  Department of Computer Science, Institute for Advanced Computer Studies and Institute for Systems Research University of Maryland  Department of Computer Science and Institute for Systems Research University of Maryland  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Tien-Chien Chang. </author> <title> Expert Process Planning for Manufacturing. </title> <publisher> Addison-Wesley Publishing Co., </publisher> <year> 1990. </year>
Reference-contexts: They also provide for some form of customizability with use of a feature-definition language to add new features into the system. 2.2 Finding Alternative Feature Interpretations The AMPS process planning system <ref> [1] </ref> uses heuristics for feature refinement to combine a set of features into a more complex feature, or split a feature into two or more features. Karinthi [19] completed the first systematic work on the generation of alternative interpretations of the same object as different collections of volumetric features.
Reference: [2] <author> S. H. Chuang and M. R. Henderson. </author> <title> Three-dimensional shape pattern recognition using vertex classification and the vertex-edge graph. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 22(6) </volume> <pages> 377-387, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: Henderson has also made extensive use of graph-based methodologies: in [10] making use of graph-based algorithms to find protrusion and depression features. In Chuang and Henderson <ref> [2] </ref>, graph-based pattern matching is used to find feature patterns from part geometry and topology. Chuang and Henderson [3] were the first to note the need to explicitly address both computational complexity and decidability when defining the feature recognition problem.
Reference: [3] <author> S. H. Chuang and M. R. Henderson. </author> <title> Compound feature recognition by web grammar parsing. </title> <booktitle> Research in Engineering Design, </booktitle> <volume> 2(3) </volume> <pages> 147-158, </pages> <year> 1991. </year>
Reference-contexts: Henderson has also made extensive use of graph-based methodologies: in [10] making use of graph-based algorithms to find protrusion and depression features. In Chuang and Henderson [2], graph-based pattern matching is used to find feature patterns from part geometry and topology. Chuang and Henderson <ref> [3] </ref> were the first to note the need to explicitly address both computational complexity and decidability when defining the feature recognition problem. Their paper formalized the problem of recognition of features (including compound features) by parsing a graph-based representation of a part using a web grammar.
Reference: [4] <author> J. Corney and D. E. R. Clark. </author> <title> Method for finding holes and pockets that connect multiple faces in 2 1 2 d objects. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 23(10) </volume> <pages> 658-668, </pages> <month> December </month> <year> 1991. </year>
Reference-contexts: In many of these approaches, the graph-based representation schemes have proven difficult to extend to the more complex surfaces and features found in realistic manufacturing problems. Corney and Clark <ref> [4, 5] </ref> have had success extending the capabilities of graph-based algorithms to more general 2 1 2 -dimensional parts. Kyprianou [24] presented the first effort to use a grammatical approach to parse solid models of parts for group coding. <p> Construct the feature instances, as shown in Figures 10 (c) and 11 (c). 4.4 Computational Complexity Some approaches to feature recognition are based on data structures abstracted from a solid model of a part, such as graph-based methods <ref> [7, 18, 4, 5] </ref>. For such approaches, the computational cost can be calculated by counting the basic operations that need to be performed by the procedure. Peters [31] uses a similar approach to compute abstract complexity bounds on instances of the feature recognition problem itself.
Reference: [5] <author> J. Corney and D. E. R. Clark. </author> <title> Face based feature recognition: Generalizing special cases. </title> <journal> International Journal of Computer Integrated Manufacturing, </journal> <volume> 6(1 </volume> & 2):39-50, 1993. 
Reference-contexts: In many of these approaches, the graph-based representation schemes have proven difficult to extend to the more complex surfaces and features found in realistic manufacturing problems. Corney and Clark <ref> [4, 5] </ref> have had success extending the capabilities of graph-based algorithms to more general 2 1 2 -dimensional parts. Kyprianou [24] presented the first effort to use a grammatical approach to parse solid models of parts for group coding. <p> Construct the feature instances, as shown in Figures 10 (c) and 11 (c). 4.4 Computational Complexity Some approaches to feature recognition are based on data structures abstracted from a solid model of a part, such as graph-based methods <ref> [7, 18, 4, 5] </ref>. For such approaches, the computational cost can be calculated by counting the basic operations that need to be performed by the procedure. Peters [31] uses a similar approach to compute abstract complexity bounds on instances of the feature recognition problem itself.
Reference: [6] <author> Diginta Das, Satyandra K. Gupta, and Dana S. Nau. </author> <title> Reducing setup cost by automated generation of redesign suggestions. </title> <editor> In Kosuke Ishii, editor, </editor> <booktitle> ASME Computers in Engineering Conference, </booktitle> <pages> pages 159-170. </pages> <publisher> ASME, </publisher> <month> September </month> <year> 1994. </year>
Reference-contexts: A third module formulates redesign suggestions based on plan information and the set of well 20 behaved features. By making modifications to the operations in the previously generated plans, it creates modified versions of the design that, in addition to satisfying design requirements, have improved manufacturability <ref> [6] </ref>. The new designs are presented to the designer as alternative possibilities to be considered. The following examples illustrate some of the functionality of our approach: Example 1 In the case of the part in Figure 1, the 32 offset, accessible well-behaved features are pictured in Figure 13. Example 2.
Reference: [7] <author> Leila De Floriani. </author> <title> Feature extraction from boundary models of three-dimensional objects. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 11(8), </volume> <month> August </month> <year> 1989. </year>
Reference-contexts: More recently, Gavankar and Henderson [33] adapted neural networks to recognize features from polyhedral objects. Peters [30] describes techniques for training neural networks to recognize feature classes that can be customized by the end user. De Floriani <ref> [7] </ref> employed graph-based algorithms for finding bi-connected and tri-connected components to partition a polyhedral part into several varieties of protrusion and depression features. Joshi's [18] approach used subgraph isomorphism algorithms to match feature patterns to patterns in the topology of polyhedral parts. <p> Construct the feature instances, as shown in Figures 10 (c) and 11 (c). 4.4 Computational Complexity Some approaches to feature recognition are based on data structures abstracted from a solid model of a part, such as graph-based methods <ref> [7, 18, 4, 5] </ref>. For such approaches, the computational cost can be calculated by counting the basic operations that need to be performed by the procedure. Peters [31] uses a similar approach to compute abstract complexity bounds on instances of the feature recognition problem itself.
Reference: [8] <author> Xin Dong. </author> <title> Geometric Feature Extraction for Computer-Aided Process Planning. </title> <type> PhD thesis, </type> <institution> Rensselaer Polytechnic Institute, </institution> <address> Troy, NY, USA, </address> <year> 1988. </year>
Reference-contexts: To address such combinatorial problems, recent work by Gadh and Prinz [9] describes techniques by abstracting an approximation of the geometric and topological information in a solid model and finding features in the approximation. The work of Dong <ref> [8] </ref> included formalization of a feature description language and was the first to employ a frame-based reasoning system to extract machining features for computer-aided process planning. Dong's approach included the ability to construct volumetric features from surface features and perform an analysis of tool accessibility. <p> Dong's approach included the ability to construct volumetric features from surface features and perform an analysis of tool accessibility. The ability to recognize interacting features has been a goal of a number of numerous research efforts, among them <ref> [8, 9, 18] </ref>. The approach of Marefat [27] built on the representation scheme of Joshi [18] and used a combination of expert system and hypothesis testing techniques to extract surface features from polyhedral objects and handle a variety of their geometric interactions.
Reference: [9] <author> R. Gadh and F. B. Prinz. </author> <title> Recognition of geometric forms using the differential depth filter. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 24(11) </volume> <pages> 583-598, </pages> <month> November </month> <year> 1992. </year>
Reference-contexts: Peters [31] analyzes the combinatorial complexity of graph and grammatical approaches to feature recognition and presents heuristics to reduce it. To address such combinatorial problems, recent work by Gadh and Prinz <ref> [9] </ref> describes techniques by abstracting an approximation of the geometric and topological information in a solid model and finding features in the approximation. <p> Dong's approach included the ability to construct volumetric features from surface features and perform an analysis of tool accessibility. The ability to recognize interacting features has been a goal of a number of numerous research efforts, among them <ref> [8, 9, 18] </ref>. The approach of Marefat [27] built on the representation scheme of Joshi [18] and used a combination of expert system and hypothesis testing techniques to extract surface features from polyhedral objects and handle a variety of their geometric interactions.
Reference: [10] <author> P. Gavankar and M. R. Henderson. </author> <title> Graph-based extraction of protrusions and depressions from boundary representations. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 22(7) </volume> <pages> 442-450, </pages> <month> September </month> <year> 1990. </year>
Reference-contexts: The seminal work of Henderson [16] applied rule-based systems on the feature recognition problem and has served as a foundation for more recent AI-based approaches. Henderson has also made extensive use of graph-based methodologies: in <ref> [10] </ref> making use of graph-based algorithms to find protrusion and depression features. In Chuang and Henderson [2], graph-based pattern matching is used to find feature patterns from part geometry and topology.
Reference: [11] <author> S. K. Gupta, D. S. Nau, W. C. Regli, and G. Zhang. </author> <title> A methodology for systematic generation and evaluation of alternative operation plans. </title> <editor> In Jami Shah, Martti Mantyla, and Dana Nau, editors, </editor> <title> Advances in Feature Based Manufacturing. </title> <publisher> Elsevier/North Holland, </publisher> <year> 1993. </year>
Reference-contexts: Such algorithms have been developed in the context of generating and evaluating alternative operation plans <ref> [11, 15, 12] </ref>, but are beyond the scope of feature recognition per se. For the purposes of this paper, we use the following criteria to eliminate obviously inaccessible features.
Reference: [12] <author> Satyandra K. Gupta. </author> <title> Automated Manufacturability Analysis of Machined Parts. </title> <type> PhD thesis, </type> <institution> The University of Maryland, College Park, MD, </institution> <year> 1994. </year>
Reference-contexts: Such algorithms have been developed in the context of generating and evaluating alternative operation plans <ref> [11, 15, 12] </ref>, but are beyond the scope of feature recognition per se. For the purposes of this paper, we use the following criteria to eliminate obviously inaccessible features. <p> The tool can move on or outside these edges during machining. A more detailed presentation of feature offsetting appears in <ref> [35, 12] </ref>. 18 features occuring in feature-based models are denoted within the box. 19 (a): Find edge profile (b): Locate edge profile (c): Build feature instance 5 Implementation and Examples As an instance of this feature recognition methodology, we have built a proof-of-concept implementation in C++ using version 3.0.1 of the
Reference: [13] <author> Satyandra K. Gupta, Thomas R. Kramer, Dana S. Nau, William C. Regli, and Guangming Zhang. </author> <title> Building MRSEV models for CAM applications. </title> <booktitle> Advances in Engineering Software, </booktitle> <year> 1994. </year> <note> To appear. </note>
Reference-contexts: We will be interested in features that correspond to the maximal realistic machinable volume made by a single machining operation in a single machining setup. Such features can be easily truncated to produce the machining volumes used in actual operation plans <ref> [15, 13] </ref>. Let M be a set of features, and f be any feature in M . Then f is M -primary if f satisfies the following properties: * f removes as much stock material as possible without intersecting P . <p> Since each FBM is basically an irredundant set cover of the delta volume produced from the feature alternatives, models can be generated using variations on irredundant-set-covering techniques [34, 29], using pruning heuristics to discard unpromising FBMs. The generation and evaluation of machining alternatives is discussed in greater detail in <ref> [15, 13] </ref>. 7 Discussion and Conclusions In this paper, we have presented an algorithmic approach for recognition of a class of machinable features from solid models. Potential applications for our approach include process planning, NC 23 part programming, fixture design and selection, and manufacturability evaluation.
Reference: [14] <author> Satyandra K. Gupta, William C. Regli, and Dana S. Nau. </author> <title> Manufacturing feature instances: Which ones to recognize? Technical Report CS-TR-3376, </title> <institution> UMIACS-TR-94-127, ISR-TR-94-81, The University of Maryland, College, Park, </institution> <month> November </month> <year> 1994. </year>
Reference-contexts: This is an unrealistic expectation, because for even simple P and S there may be, theoretically speaking, infinitely many possible feature instances, even when restricted to primary features <ref> [14] </ref>.
Reference: [15] <author> S.K. Gupta and D.S. Nau. </author> <title> A systematic approach for analyzing the manufacturability of machined parts. </title> <booktitle> Computer Aided Design, </booktitle> <year> 1994. </year> <note> To appear. </note>
Reference-contexts: We will be interested in features that correspond to the maximal realistic machinable volume made by a single machining operation in a single machining setup. Such features can be easily truncated to produce the machining volumes used in actual operation plans <ref> [15, 13] </ref>. Let M be a set of features, and f be any feature in M . Then f is M -primary if f satisfies the following properties: * f removes as much stock material as possible without intersecting P . <p> Such algorithms have been developed in the context of generating and evaluating alternative operation plans <ref> [11, 15, 12] </ref>, but are beyond the scope of feature recognition per se. For the purposes of this paper, we use the following criteria to eliminate obviously inaccessible features. <p> The second IMACS module uses this set of features to generate and evaluate alternative operation plans for the part by incorporating precedence constraints and information about machining parameters. The cost and time for operation plans satisfying the design requirements are used to estimate a rating of the part's manufacturability <ref> [15] </ref>. A third module formulates redesign suggestions based on plan information and the set of well 20 behaved features. By making modifications to the operations in the previously generated plans, it creates modified versions of the design that, in addition to satisfying design requirements, have improved manufacturability [6]. <p> Since each FBM is basically an irredundant set cover of the delta volume produced from the feature alternatives, models can be generated using variations on irredundant-set-covering techniques [34, 29], using pruning heuristics to discard unpromising FBMs. The generation and evaluation of machining alternatives is discussed in greater detail in <ref> [15, 13] </ref>. 7 Discussion and Conclusions In this paper, we have presented an algorithmic approach for recognition of a class of machinable features from solid models. Potential applications for our approach include process planning, NC 23 part programming, fixture design and selection, and manufacturability evaluation.
Reference: [16] <author> Mark R. Henderson. </author> <title> Extraction of Feature Information from Three-Dimensional CAD Data. </title> <type> PhD thesis, </type> <institution> Purdue University, West Lafayette, IN, USA, </institution> <year> 1984. </year>
Reference-contexts: Extension of this method from polyhedra to the more general surfaces required for realistic parts is currently under investigation. The seminal work of Henderson <ref> [16] </ref> applied rule-based systems on the feature recognition problem and has served as a foundation for more recent AI-based approaches. Henderson has also made extensive use of graph-based methodologies: in [10] making use of graph-based algorithms to find protrusion and depression features.
Reference: [17] <author> Christoph M. Hoffman. </author> <title> Geometric and Solid Modeling: An Introduction. </title> <publisher> Morgan Kaufmann Publishers Incorporated, </publisher> <address> CA, </address> <year> 1989. </year> <month> 25 </month>
Reference-contexts: Machining operations remove material from the initial workpiece in order to create the design attributes of the part (i.e., P S). As illustrated in Figure 1 (d), the total removal volume is referred to as the delta volume (), and it is the regularized difference <ref> [17] </ref> of the initial workpiece and the design: = S fl P . 3.1 Feature Class In a machining operation, a cutting tool is swept along a trajectory, and material is removed by the motion of the tool relative to the current workpiece.
Reference: [18] <author> S. Joshi and T. C. Chang. </author> <title> Graph-based heuristics for recognition of machined features from a 3D solid model. </title> <booktitle> Computer-Aided Design, </booktitle> <volume> 20(2) </volume> <pages> 58-66, </pages> <month> March </month> <year> 1988. </year>
Reference-contexts: Peters [30] describes techniques for training neural networks to recognize feature classes that can be customized by the end user. De Floriani [7] employed graph-based algorithms for finding bi-connected and tri-connected components to partition a polyhedral part into several varieties of protrusion and depression features. Joshi's <ref> [18] </ref> approach used subgraph isomorphism algorithms to match feature patterns to patterns in the topology of polyhedral parts. Sakurai [40] developed a graph-based system capable of handling limited types of user-defined features, providing for a degree of application-specific customizability. <p> Dong's approach included the ability to construct volumetric features from surface features and perform an analysis of tool accessibility. The ability to recognize interacting features has been a goal of a number of numerous research efforts, among them <ref> [8, 9, 18] </ref>. The approach of Marefat [27] built on the representation scheme of Joshi [18] and used a combination of expert system and hypothesis testing techniques to extract surface features from polyhedral objects and handle a variety of their geometric interactions. <p> The ability to recognize interacting features has been a goal of a number of numerous research efforts, among them [8, 9, 18]. The approach of Marefat [27] built on the representation scheme of Joshi <ref> [18] </ref> and used a combination of expert system and hypothesis testing techniques to extract surface features from polyhedral objects and handle a variety of their geometric interactions. <p> Construct the feature instances, as shown in Figures 10 (c) and 11 (c). 4.4 Computational Complexity Some approaches to feature recognition are based on data structures abstracted from a solid model of a part, such as graph-based methods <ref> [7, 18, 4, 5] </ref>. For such approaches, the computational cost can be calculated by counting the basic operations that need to be performed by the procedure. Peters [31] uses a similar approach to compute abstract complexity bounds on instances of the feature recognition problem itself.
Reference: [19] <author> R. Karinthi and D. Nau. </author> <title> An algebraic approach to feature interactions. </title> <journal> IEEE Trans. Pattern Analysis and Machine Intelligence, </journal> <volume> 14(4) </volume> <pages> 469-484, </pages> <month> April </month> <year> 1992. </year>
Reference-contexts: Karinthi <ref> [19] </ref> completed the first systematic work on the generation of alternative interpretations of the same object as different collections of volumetric features. They present an algebra for computing alternate interpretations of parts resulting from algebraic operations on the features. The OOFF system of Vandenbrande [42] produces some alternative feature interpretations. <p> In the existing literature, there have been several efforts at generating the complete class of alternative interpretations for a part. The feature algebra of Karinthi <ref> [19] </ref>, starting from a single initial feature interpretation, exhaustively generates alternative interpretations of the part by manipulating the features with algebraic operators, but does not include a methodology for recognizing the features.
Reference: [20] <author> Y. S. Kim. </author> <title> Recognition of form features using convex decomposition. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 24(9) </volume> <pages> 461-476, </pages> <month> September </month> <year> 1992. </year>
Reference-contexts: The approach had several problems, including the existence of pathological cases in which the procedure would not converge. The non-convergence of Woo's approach has been solved in recent work by Kim <ref> [20, 21, 43] </ref>, whose system produces a decomposition of the convex hull of a part as general form features. Extension of this method from polyhedra to the more general surfaces required for realistic parts is currently under investigation.
Reference: [21] <author> Yong Se Kim and D. J. Wilde. </author> <title> A convergent convex decomposition of polyhedral objects. </title> <journal> Transactions of the ASME, </journal> <volume> 114 </volume> <pages> 468-476, </pages> <month> September </month> <year> 1992. </year>
Reference-contexts: The approach had several problems, including the existence of pathological cases in which the procedure would not converge. The non-convergence of Woo's approach has been solved in recent work by Kim <ref> [20, 21, 43] </ref>, whose system produces a decomposition of the convex hull of a part as general form features. Extension of this method from polyhedra to the more general surfaces required for realistic parts is currently under investigation.
Reference: [22] <author> Thomas R. Kramer. </author> <title> A parser that converts a boundary representation into a features representation. </title> <journal> International Journal of Computer Integrated Manufacturing, </journal> <volume> 2(3) </volume> <pages> 154-163, </pages> <year> 1989. </year>
Reference: [23] <author> Thomas R. Kramer. </author> <title> A library of material removal shape element volumes (MRSEVs). </title> <type> Technical Report NISTIR 4809, </type> <institution> The National Institute of Standards and Technology, Gaithersburg, MD 20899, </institution> <month> March </month> <year> 1992. </year>
Reference-contexts: Applications such as manufacturability analysis and automated redesign require features that correspond directly to manufacturing operations. The class of machinable features we employ are expressible as MRSEVs (a PDES/STEP-based library of machining features) <ref> [23] </ref>. MRSEVs are definable using EXPRESS (the PDES information modeling language) and as PDES form features. <p> We will use the following feature types, which are adapted from Kramer's library of Material Removal Shape Element Volumes (MRSEVs) <ref> [23] </ref>: 2 1. In order to create a drilling feature, we will sweep a drilling tool of radius r for a distance d along the trajectory represented by its orientation vector ~v, ending at a datum point p, as shown in Figure 2. <p> To create a milling feature, we will sweep a milling tool whose orientation vector is ~v, starting at a datum point p, and moving through a swept volume of depth d whose cross-sectional area is bounded by an edge profile <ref> [23] </ref> E = fe 1 ; e 2 ; : : : e n g, as shown in Figure2.
Reference: [24] <author> Lycourgos K. Kyprianou. </author> <title> Shape Classification in Computer Aided Design. </title> <type> PhD thesis, </type> <institution> Christ College, University of Cambridge, </institution> <address> Cambridge, United Kingdom, </address> <year> 1980. </year>
Reference-contexts: In many of these approaches, the graph-based representation schemes have proven difficult to extend to the more complex surfaces and features found in realistic manufacturing problems. Corney and Clark [4, 5] have had success extending the capabilities of graph-based algorithms to more general 2 1 2 -dimensional parts. Kyprianou <ref> [24] </ref> presented the first effort to use a grammatical approach to parse solid models of parts for group coding. Methods based on graph-grammars have been used both to recognize features [32, 38] and to translate between differing feature representations [37].
Reference: [25] <author> Timo Laakko and Martti Mantyla. </author> <title> Feature modelling by incremental feature recognition. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 25(8) </volume> <pages> 479-492, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: One of the fundamental contributions of Vandenbrande's work was a formal method for representing interactions among the features by calculating the "required" and "optional" volumes for each promising feature instance. The recent work Laakko and Mantyla <ref> [25] </ref> couples feature-based design and feature recognition to provide for incremental feature recognition. This type of approach identifies changes in the geometric model as new or modified features while preserving the existing feature information.
Reference: [26] <author> Martti Mantyla. </author> <title> An Introduction to Solid Modeling. </title> <publisher> Computer Science Press, </publisher> <address> College Park, MD, </address> <year> 1988. </year>
Reference-contexts: Waco and Kim [43] have extended convex decomposition techniques to produce alternative decompositions of the removal volume through aggregating and growing form feature primitives. 3 Preliminaries A common class of solids are those described by r-sets with manifold boundaries <ref> [26, 36] </ref>. In the context of this paper, a solid is an r-set whose boundary is a manifold consisting of planar, elliptical, toroidal, conical and spherical surfaces.
Reference: [27] <author> M. Marefat and R. L. Kashyap. </author> <title> Geometric reasoning for recognition of three-dimensional object features. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 12(10) </volume> <pages> 949-965, </pages> <month> October </month> <year> 1990. </year>
Reference-contexts: Dong's approach included the ability to construct volumetric features from surface features and perform an analysis of tool accessibility. The ability to recognize interacting features has been a goal of a number of numerous research efforts, among them [8, 9, 18]. The approach of Marefat <ref> [27] </ref> built on the representation scheme of Joshi [18] and used a combination of expert system and hypothesis testing techniques to extract surface features from polyhedral objects and handle a variety of their geometric interactions. <p> Thus the complexity of Build Well-Behaved Features is between O (n 4 ) and O (n 6 ) or O (n 7 ). 4.5 Alternatives and Completeness It has been pointed out by Marefat <ref> [27, 28] </ref> that existing feature recognition methodologies have had only limited success in identifying and describing alternative feature interpretations. There are a variety of reasons for this shortcoming.
Reference: [28] <author> Michael Marefat and R. L. Kashyap. </author> <title> Automatic construction of process plans from solid model representations. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> 22(5) </volume> <pages> 1097-1115, </pages> <month> September/October </month> <year> 1992. </year>
Reference-contexts: Thus the complexity of Build Well-Behaved Features is between O (n 4 ) and O (n 6 ) or O (n 7 ). 4.5 Alternatives and Completeness It has been pointed out by Marefat <ref> [27, 28] </ref> that existing feature recognition methodologies have had only limited success in identifying and describing alternative feature interpretations. There are a variety of reasons for this shortcoming.
Reference: [29] <author> Yun Peng and James A. Reggia. </author> <title> Diagnostic problem-solving with causal chaining. </title> <journal> International Journal of Intelligent Systems, </journal> <volume> 2 </volume> <pages> 265-302, </pages> <year> 1987. </year>
Reference-contexts: Since each FBM is basically an irredundant set cover of the delta volume produced from the feature alternatives, models can be generated using variations on irredundant-set-covering techniques <ref> [34, 29] </ref>, using pruning heuristics to discard unpromising FBMs. The generation and evaluation of machining alternatives is discussed in greater detail in [15, 13]. 7 Discussion and Conclusions In this paper, we have presented an algorithmic approach for recognition of a class of machinable features from solid models.
Reference: [30] <author> Thomas J. Peters. </author> <title> Encoding mechanical design features for recognition via neural nets. </title> <booktitle> Research in Engineering Design, </booktitle> <volume> 4(2) </volume> <pages> 67-74, </pages> <year> 1992. </year>
Reference-contexts: Their paper formalized the problem of recognition of features (including compound features) by parsing a graph-based representation of a part using a web grammar. More recently, Gavankar and Henderson [33] adapted neural networks to recognize features from polyhedral objects. Peters <ref> [30] </ref> describes techniques for training neural networks to recognize feature classes that can be customized by the end user. De Floriani [7] employed graph-based algorithms for finding bi-connected and tri-connected components to partition a polyhedral part into several varieties of protrusion and depression features.
Reference: [31] <author> Thomas J. Peters. </author> <title> Mechanical design heuristics to reduce the combinatorial complexity for feature recognition. </title> <booktitle> Research In Engineering Design, </booktitle> <volume> 4 </volume> <pages> 195-201, </pages> <year> 1993. </year>
Reference-contexts: Kyprianou [24] presented the first effort to use a grammatical approach to parse solid models of parts for group coding. Methods based on graph-grammars have been used both to recognize features [32, 38] and to translate between differing feature representations [37]. Peters <ref> [31] </ref> analyzes the combinatorial complexity of graph and grammatical approaches to feature recognition and presents heuristics to reduce it. <p> For such approaches, the computational cost can be calculated by counting the basic operations that need to be performed by the procedure. Peters <ref> [31] </ref> uses a similar approach to compute abstract complexity bounds on instances of the feature recognition problem itself. Other approaches to feature recognition, including the one described in this paper, employ extensive queries to the solid modeling system to extract feature instances.
Reference: [32] <author> J. Miguel Pinilla, Susan Finger, and Friedrich B. Prinz. </author> <title> Shape feature description using an augmented topology graph grammar. </title> <booktitle> In Proceedings NSF Engineering Design Research Conference, </booktitle> <pages> pages 285-300. </pages> <institution> National Science Foundation, </institution> <month> June </month> <year> 1989. </year>
Reference-contexts: Kyprianou [24] presented the first effort to use a grammatical approach to parse solid models of parts for group coding. Methods based on graph-grammars have been used both to recognize features <ref> [32, 38] </ref> and to translate between differing feature representations [37]. Peters [31] analyzes the combinatorial complexity of graph and grammatical approaches to feature recognition and presents heuristics to reduce it.
Reference: [33] <author> S. Prabhakar and M. R. Henderson. </author> <title> Automatic form-feature recognition using neural-network-based techniques on boundary representations of solid models. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 24(7) </volume> <pages> 381-393, </pages> <month> July </month> <year> 1992. </year> <month> 26 </month>
Reference-contexts: Their paper formalized the problem of recognition of features (including compound features) by parsing a graph-based representation of a part using a web grammar. More recently, Gavankar and Henderson <ref> [33] </ref> adapted neural networks to recognize features from polyhedral objects. Peters [30] describes techniques for training neural networks to recognize feature classes that can be customized by the end user.
Reference: [34] <author> J. A. Reggia, D. S. Nau, and P. Y. Wang. </author> <title> A formal model of diagnostic inference. II. algorithmic solution and applications. </title> <journal> Information Sciences, </journal> <volume> 37 </volume> <pages> 257-285, </pages> <year> 1985. </year>
Reference-contexts: Since each FBM is basically an irredundant set cover of the delta volume produced from the feature alternatives, models can be generated using variations on irredundant-set-covering techniques <ref> [34, 29] </ref>, using pruning heuristics to discard unpromising FBMs. The generation and evaluation of machining alternatives is discussed in greater detail in [15, 13]. 7 Discussion and Conclusions In this paper, we have presented an algorithmic approach for recognition of a class of machinable features from solid models.
Reference: [35] <author> William C. Regli. </author> <title> Geometric Algorithms for Recognition of Features from Solid Models. </title> <type> PhD thesis, </type> <institution> The University of Maryland, College Park, MD, </institution> <year> 1995. </year> <note> In preparation. </note>
Reference-contexts: It would require mathematically rigorous definitions of features and the feature recognition problem, and a proof that for every instance of the problem, the algorithm halts and returns the correct answer. This is discussed in more detail in <ref> [35] </ref>. 17 4.6 Feature Offsetting Offsetting the edge profile of a potential milling feature involves the following steps: 1. Estimation of an optimal tool size. In a typical milling operation, a larger tool diameter implies a shorter cutting trajectory and less operation cost and time. <p> The tool can move on or outside these edges during machining. A more detailed presentation of feature offsetting appears in <ref> [35, 12] </ref>. 18 features occuring in feature-based models are denoted within the box. 19 (a): Find edge profile (b): Locate edge profile (c): Build feature instance 5 Implementation and Examples As an instance of this feature recognition methodology, we have built a proof-of-concept implementation in C++ using version 3.0.1 of the
Reference: [36] <author> Aristides A. G. Requicha. </author> <title> Representation for rigid solids: Theory, methods, </title> <journal> and systems. Computing Surveys, </journal> <volume> 12(4) </volume> <pages> 437-464, </pages> <month> December </month> <year> 1980. </year>
Reference-contexts: Waco and Kim [43] have extended convex decomposition techniques to produce alternative decompositions of the removal volume through aggregating and growing form feature primitives. 3 Preliminaries A common class of solids are those described by r-sets with manifold boundaries <ref> [26, 36] </ref>. In the context of this paper, a solid is an r-set whose boundary is a manifold consisting of planar, elliptical, toroidal, conical and spherical surfaces.
Reference: [37] <author> David W. Rosen, John R. Dixon, and Susan Finger. </author> <title> Conversions of feature-based representations via graph grammar parsing. </title> <booktitle> In AMSE Design Theory Methodology Conference, </booktitle> <year> 1992. </year>
Reference-contexts: Kyprianou [24] presented the first effort to use a grammatical approach to parse solid models of parts for group coding. Methods based on graph-grammars have been used both to recognize features [32, 38] and to translate between differing feature representations <ref> [37] </ref>. Peters [31] analyzes the combinatorial complexity of graph and grammatical approaches to feature recognition and presents heuristics to reduce it.
Reference: [38] <author> Scott A. Safier and Susan Finger. </author> <title> Parsing features in solid geometric models. </title> <booktitle> In European Conference on Artificial Intelligence, </booktitle> <year> 1990. </year>
Reference-contexts: Kyprianou [24] presented the first effort to use a grammatical approach to parse solid models of parts for group coding. Methods based on graph-grammars have been used both to recognize features <ref> [32, 38] </ref> and to translate between differing feature representations [37]. Peters [31] analyzes the combinatorial complexity of graph and grammatical approaches to feature recognition and presents heuristics to reduce it.
Reference: [39] <author> Hiroshi Sakurai and Chia-Wei Chin. </author> <title> Definition and recognition of volume features for process planning. </title> <editor> In Jami Shah, Martti Mantyla, and Dana Nau, editors, </editor> <booktitle> Advances in Feature Based Manufacturing, chapter 4, </booktitle> <pages> pages 65-80. </pages> <address> Elsevier/North Holland, </address> <year> 1994. </year>
Reference-contexts: The OOFF system of Vandenbrande [42] produces some alternative feature interpretations. However, the generation of alternatives is not well controlled nor is the class of alternatives produced by OOFF specified. In recent work by Sakurai <ref> [39] </ref>, the volume to be machined is decomposed into cells. Exhaustively, each combination of cells is then matched against user-defined feature templates. While the method is capable of generating all alternative feature interpretations composed of the primitive cells, it does so at a large combinatorial cost. <p> The feature algebra of Karinthi [19], starting from a single initial feature interpretation, exhaustively generates alternative interpretations of the part by manipulating the features with algebraic operators, but does not include a methodology for recognizing the features. Sakurai <ref> [39] </ref> presents a system that decomposes the volume to be machined into disjoint cells and then recombines the cells to form compound feature instances. Both of these methods are prone to combinatorial obstacles, are limited to polyhedral models, and address only rudimentary machining features and machining constraints.
Reference: [40] <author> Hiroshi Sakurai and David C. Gossard. </author> <title> Recognizing shape features in solid models. </title> <journal> IEEE Computer Graphics & Applications, </journal> <month> September </month> <year> 1990. </year>
Reference-contexts: De Floriani [7] employed graph-based algorithms for finding bi-connected and tri-connected components to partition a polyhedral part into several varieties of protrusion and depression features. Joshi's [18] approach used subgraph isomorphism algorithms to match feature patterns to patterns in the topology of polyhedral parts. Sakurai <ref> [40] </ref> developed a graph-based system capable of handling limited types of user-defined features, providing for a degree of application-specific customizability. In many of these approaches, the graph-based representation schemes have proven difficult to extend to the more complex surfaces and features found in realistic manufacturing problems.
Reference: [41] <author> Jami Shah, Martti Mantyla, and Dana Nau, </author> <title> editors. Advances in Feature Based Manufacturing. </title> <publisher> Elsevier/North Holland, </publisher> <year> 1994. </year>
Reference-contexts: For a more comprehensive overview of feature-based manufacturing techniques, the reader is referred to <ref> [41] </ref>. 2.1 Feature Recognition In one of the early efforts on feature extraction, Woo [44] proposed a method for finding general depression and protrusion features on a part by decomposing the convex hull of the solid model.
Reference: [42] <author> J. H. Vandenbrande and A. A. G. Requicha. </author> <title> Spatial reasoning for the automatic recognition of machinable features in solid models. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 15(12):1269, </volume> <month> December </month> <year> 1993. </year>
Reference-contexts: The most comprehensive approach to date for recognizing features and handling their interactions has been the OOFF system (Object-Oriented Feature Finder) of Vandenbrande <ref> [42] </ref>. Vanden-brande's work, using a knowledge-based approach like Dong's, provides a framework for recognizing a significant class of realistic machining features of interest for process planning via artificial intelligence techniques in combination with queries to a solid modeler. <p> Karinthi [19] completed the first systematic work on the generation of alternative interpretations of the same object as different collections of volumetric features. They present an algebra for computing alternate interpretations of parts resulting from algebraic operations on the features. The OOFF system of Vandenbrande <ref> [42] </ref> produces some alternative feature interpretations. However, the generation of alternatives is not well controlled nor is the class of alternatives produced by OOFF specified. In recent work by Sakurai [39], the volume to be machined is decomposed into cells.
Reference: [43] <author> Douglas L. Waco and Yong Se Kim. </author> <title> Geometric reasoning for machining features using convex decomposition. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 26(6) </volume> <pages> 477-489, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: The approach had several problems, including the existence of pathological cases in which the procedure would not converge. The non-convergence of Woo's approach has been solved in recent work by Kim <ref> [20, 21, 43] </ref>, whose system produces a decomposition of the convex hull of a part as general form features. Extension of this method from polyhedra to the more general surfaces required for realistic parts is currently under investigation. <p> Exhaustively, each combination of cells is then matched against user-defined feature templates. While the method is capable of generating all alternative feature interpretations composed of the primitive cells, it does so at a large combinatorial cost. Waco and Kim <ref> [43] </ref> have extended convex decomposition techniques to produce alternative decompositions of the removal volume through aggregating and growing form feature primitives. 3 Preliminaries A common class of solids are those described by r-sets with manifold boundaries [26, 36].
Reference: [44] <author> Tony C. Woo. </author> <title> Feature extraction by volume decomposition. </title> <booktitle> In Conference on CAD/CAM Technology in Mechanical Engineering, </booktitle> <pages> pages 76-94, </pages> <month> March </month> <year> 1982. </year> <month> 27 </month>
Reference-contexts: For a more comprehensive overview of feature-based manufacturing techniques, the reader is referred to [41]. 2.1 Feature Recognition In one of the early efforts on feature extraction, Woo <ref> [44] </ref> proposed a method for finding general depression and protrusion features on a part by decomposing the convex hull of the solid model. The approach had several problems, including the existence of pathological cases in which the procedure would not converge.
References-found: 44

