URL: http://www.cs.washington.edu/homes/kepart/papers/bddtcl/bddtcl.ps
Refering-URL: http://www.cs.washington.edu/homes/kepart/
Root-URL: 
Email: kepart@cs.washington.edu  
Phone: +1 206 685 4087  
Title: BDDTCL: An Environment for Visualizing and Manipulating Binary Decision Diagrams  
Author: Kurt E. Partridge 
Keyword: data structure visualization, binary decision diagrams, hardware verification tools  
Address: Seattle, WA 98195 USA  
Affiliation: University of Washington  
Abstract: A Binary Decision Diagram (BDD) is a data structure used in hardware verification to represent boolean expressions. Most BDD implementations provide only textual output and require the user to interact with them using a compiled programming language. BDDTCL provides an interpreted language for manipulating BDDs and a graphical viewer for manipulating and visualizing them. BDDTCL can draw BDDs with over 4,400 nodes; much larger than can be easily drawn by hand. Two users, a hardware design researcher and a student unfamiliar with BDDs, provided feedback about BDDTCL's effectiveness for understanding systems modeled by BDDs. These users also provided feedback for improving BDDTCL. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> R. E. Bryant. </author> <title> Graph based algorithms for boolean function manipulation. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-35(8):677-691, </volume> <month> August </month> <year> 1986. </year>
Reference-contexts: INTRODUCTION A Binary Decision Diagram (BDD) is a directed acyclic graph (DAG) for representing a boolean expression <ref> [1] </ref>. Each node in the graph represents a variable, and has two outgoing arcs: one taken if the variable is true, the other if it is false. The order of the variables on every path through the DAG must be the same.
Reference: 2. <author> George W. Furnas. </author> <title> Generalized fisheye views. </title> <booktitle> In In proceedings of CHI, </booktitle> <year> 1986, </year> <pages> pages 16-23, </pages> <address> New York, 1986. </address> <publisher> ACM. </publisher>
Reference-contexts: FUTURE WORK We plan to continue to improve BDDTCL by getting feedback from additional users, both those already familiar with BDDs and those still learning about them. We would also like to study additional large graph management techniques such as a fisheye view <ref> [2] </ref>.
Reference: 3. <author> Eleftherios Koutsofios and Stephen C. </author> <title> North. Drawing graphs with dot. </title> <address> http://www.research.att.com:80/orgs/ssr/ book/reuse/, </address> <year> 1993. </year>
Reference-contexts: BDDTCL draws BDDs in a graphical format similar to the format used in research papers (see Figure 2). BDDTCL uses bddlib to manage the BDDs and Dot <ref> [3] </ref>, a directed-graph layout program, to compute the geometry. BDDTCL provides several features for visualizing large BDDs. First, BDDTCL supports traditional zooming. Since fonts become hard to read at small magnifications, the name of the node under the mouse pointer is displayed in a separate box.
Reference: 4. <author> David E. </author> <title> Long. bddlib|a binary decision diagram (bdd) package. </title> <address> http://www.cs.cmu.edu/afs/cs/project/modck/ pub/www/bdd.html, </address> <year> 1993. </year>
Reference-contexts: The node profile produces a histogram of the number of nodes at each level. The if-then-else format completely represents the BDD. BDDTCL BDDTCL is a graphical interface for viewing and manipulating BDDs. Existing BDD implementations provide only textual descriptions of a BDD's structure. For example, bd-dlib <ref> [4] </ref>, provides two output formats: the node profile and the if-then-else form (see Figure 1). While the node profile is helpful for displaying a BDD's size and the effectiveness of a variable ordering, it is only an abstract description of the BDD, not the complete structure.
References-found: 4

