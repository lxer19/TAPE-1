URL: http://www.cs.umn.edu/Users/mirrors00/ftp.funet.fi/pub/languages/perl/CPAN/modules/dbperl/refinfo/fips/fipseri.apr94.ps
Refering-URL: http://www.cs.umn.edu/Users/mirrors00/ftp.funet.fi/pub/languages/perl/CPAN/modules/dbperl/refinfo/fips/
Root-URL: http://www.cs.umn.edu
Title: Announcing the Standard for SQL Environments  
Keyword: 2. Category of Standard. Software Standard, Database.  
Date: April 1994)  
Note: FEDERAL INFORMATION PROCESSING STANDARDS PUBLICATION XXX (Draft  
Abstract: Federal Information Processing Standards Publications (FIPS PUBS) are issued by the National Institute of Standards and Technology after approval by the Secretary of Commerce pursuant to Section 111(d) of the Federal Property and Administrative Services Act of 1949 as amended by the Computer Security Act of 1987, Public Law 100-235. 3. Explanation. An SQL environment is an integrated data processing environment in which heterogeneous products, all supporting some aspect of the FIPS SQL standard (FIPS PUB 127), are able to communicate with one another and provide shared access to data and data operations and methods under appropriate security, integrity, and access control mechanisms. Some components in an SQL environment will be full-function SQL implementations that conform to an entire level of FIPS SQL and support all of its required clauses for schema definition, data manipulation, transaction management, integrity constraints, access control, and schema information. Other components in an SQL environment may be specialized data repositories, or graphical user interfaces and report writers, that support selected portions of the SQL standard and thereby provide a degree of integration between themselves and other products in the same SQL environment. This FIPS PUB is the beginning of a continuing effort to define appropriate conformance profiles that can be used by both vendors and users to specify exact requirements for how various products fit into an SQL environment. The emphasis in this first FIPS for SQL Environments is to specify general purpose, SQL external repository interface (SQL/ERI) profiles for non-SQL data repositories. These profiles specify how a subset of the SQL standard can be used to provide limited SQL access to legacy databases, or to support SQL gateways to specialized data managers such as Geographic Information Systems (GIS), full-text document management systems, or object database management systems. All of the profiles specified herein are for server-side products, that is, products that control persistent data and provide an interface for user access to that data. Subsequent versions of this FIPS PUB may specify SQL environment profiles for client-side products, that is, products that access data and then present that data in graphical or report-writer style to an end user, or process the data in some other way on behalf of the end user. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Cannan, S.J. and G.A.M. Otten. </author> <title> SQL The Standard Handbook, </title> <publisher> McGraw-Hill Book Co, </publisher> <address> Berkshire SL6 2QL England, </address> <month> October </month> <year> 1992. </year>
Reference-contexts: Features of the SQL'92 standard are discussed in References <ref> [1] </ref>, [2], and [15]. Proposed features of the next SQL revision, often called SQL3, are discussed in [4] and [5]. SQL is particularly appropriate for the definition and management of data that is structured into repeated occurrences having common data structure definitions.
Reference: 2. <author> Date, C.J. </author> <title> with Hugh Darwen. A Guide to the SQL Standard, </title> <publisher> Addison-Wesley Publishing, </publisher> <address> Reading, MA 01867 USA, </address> <month> October </month> <year> 1992. </year>
Reference-contexts: Features of the SQL'92 standard are discussed in References [1], <ref> [2] </ref>, and [15]. Proposed features of the next SQL revision, often called SQL3, are discussed in [4] and [5]. SQL is particularly appropriate for the definition and management of data that is structured into repeated occurrences having common data structure definitions.
Reference: 3. <author> FIPS SQL, </author> <title> Federal Information Processing Standard for Database Language SQL, 2nd revision, </title> <type> FIPS PUB 127-2, U.S. </type> <institution> Department of Commerce, National Institute of Standards and Technology, </institution> <month> June 2, </month> <year> 1993. </year>
Reference-contexts: Section 7 of this FIPS PUB provides the necessary SQL/ERI Server profiles to get this integration scenario started. 4. SQL/ERI Leveling Rules The SQL'92 standard [8] specifies three levels of conformance for SQL language and SQL implementations: Entry SQL, Intermediate SQL, and Full SQL. In addition, FIPS SQL <ref> [3] </ref> defines a fourth level of conformance, called Transitional SQL, approximately halfway between Entry SQL and Intermediate SQL. FIPS Transitional SQL is intended to provide a common, near-term goal for SQL implementations that already have a number of features beyond Entry SQL. <p> In addition, it is sometimes desirable to identify other features specified in the SQL'92 standard [8] as either offered by a product or required by a specific procurement. Section 14 of FIPS SQL <ref> [3] </ref> identifies 83 features of the SQL'92 standard beyond the Entry SQL requirements. An SQL/ERI Server could identify which features are supported beyond its declared level of service by implementing the SQL_FEATURES table as specified in Section 15 of FIPS SQL. <p> A procurement could also use this list to identify, unambiguously, those SQL features beyond the identified conformance level that are either required or desirable for that procurement. FIPS SQL also identifies default minimum requirements for the precision, size, or number of occurrences of database constructs (see section 16.6 of <ref> [3] </ref>). Unless otherwise specified in a procurement, the Entry Value sizing limits apply to all Entry SQL or Transitional SQL features and the Intermediate Value sizing limits apply to all Intermediate SQL or Full SQL features. <p> Instead, conformance to this binding style requires a subjective evaluation of the results by a human user. For this reason, among others, the FIPS SQL standard <ref> [3] </ref> does not recognize Direct Invocation as the sole conformance alternative of an SQL implementation. Instead, it allows Interactive Direct SQL as a conformance option in addition to a Module or Embedded binding style. <p> SQL'92 features Stored procedures and callable routines (SQL/PSM) SQL multimedia class library (SQL/MM) ADTs and methods Object data management Note: If SQL'92 features is chosen, then the implementation shall support the SQL_FEATURES table as specified in Section 15 of FIPS SQL (see <ref> [3] </ref>); if SQL/PSM is chosen, then the implementation shall support all requirements of the then current SQL/PSM specification (see [11]); if SQL/MM is chosen, then the implementation shall point to the then current SQL/MM specification (see [13]) and explicitly indicate which Parts, and which conformance alternatives within each Part, are supported; <p> It is expected that the level of support specified for SQL schema definition language is "None". Depending upon the various base level attributes specified, this profile may have Information Schema requirements that differ from those specified in SQL'92 [8] or FIPS SQL <ref> [3] </ref>. Schema Definition Rules 1. The SQL/ERI Read-Only Server profile assumes that all schema objects are owned by a user different from the user accessing the repository through this profile, and that appropriate privileges have been granted to all accessing users. <p> Depending upon the various base level attributes specified, this profile may have Information Schema requirements that differ from those specified in SQL'92 [8] or FIPS SQL <ref> [3] </ref>. Schema Definition Rules 1. The SQL/ERI Read-Write Server profile assumes that some schema objects are owned by a user different from the user accessing the repository through this profile, and that appropriate privileges have been granted to all accessing users. <p> The following steps may be helpful: 1. If a full-function, conforming FIPS SQL data manager is not already available, then follow the Special Procurement Considerations given in Section 16 of FIPS PUB 127-2 <ref> [3] </ref> for procurement of an SQL Processor. 2. State the minimum profile of the SQL/ERI Server products that are to be integrated into the SQL Environment by this SQL/ERI Client. Use the profile items identified in Section 7 to determine this minimum profile. 3. <p> Specify which SQL'92 features beyond those required above are to be supported, by choosing "None" or by identifying features by feature number from FIPS PUB 127-2 (see Section 14 of <ref> [3] </ref>). See the discussion of SQL'92 features in Section 5.1. Identify which features are "required" and which are "desirable". Be very careful about requiring individual features (rather than a FIPS specified level of features) as that practice can easily lead to procurement protests.
Reference: 4. <author> Gallagher, Leonard. </author> <title> Object SQL: Language Extensions for Object Data Management, </title> <booktitle> Proceedings of the First International Conference on Information and Knowledge Management (CIKM), </booktitle> <address> Baltimore, MD, </address> <month> 9-12 November </month> <year> 1992, </year> <booktitle> International Society of Mini and Micrcomputers (ISMM), </booktitle> <pages> pages 17-26. </pages>
Reference-contexts: Features of the SQL'92 standard are discussed in References [1], [2], and [15]. Proposed features of the next SQL revision, often called SQL3, are discussed in <ref> [4] </ref> and [5]. SQL is particularly appropriate for the definition and management of data that is structured into repeated occurrences having common data structure definitions.
Reference: 5. <author> Gallagher, Leonard and Joan Sullivan. </author> <title> Database Language SQL: Integrator of CALS Data Repositories, </title> <type> NIST technical report, NISTIR 4902, </type> <month> September </month> <year> 1992. </year>
Reference-contexts: Features of the SQL'92 standard are discussed in References [1], [2], and [15]. Proposed features of the next SQL revision, often called SQL3, are discussed in [4] and <ref> [5] </ref>. SQL is particularly appropriate for the definition and management of data that is structured into repeated occurrences having common data structure definitions.
Reference: 6. <author> IEEE SFQL. </author> <title> IEEE Standards Committee on Optical Disk and Multimedia Platforms (SCODMP), </title> <institution> SFQL Working Group, Institute of Electrical and Electronics Engineers, Inc., </institution> <address> Washington, DC 20036-1903, USA. </address>
Reference: 7. <institution> IETF Netdata. Internet Engineering Task Force (IETF), Network Database Working Group (netdata), ietf-ndb-request@ucdavis.edu, Corporation for National Research Initiatives, </institution> <address> Reston, VA 22091, USA. </address>
Reference-contexts: Application processors will then have protected access to all data using the full power and flexibility of Database Language SQL. Standard communication among cooperating systems is possible at the present time using either OSI protocols [16] or Internet Society protocols <ref> [7] </ref>. Efforts are underway within both of these arenas to provide cross-protocol mappings for interoperability. Application services in both protocol environments provide for association control, file transfer, virtual terminal, and electronic mail. <p> The local site is connected to one or more remote sites via a standard OSI or IETF communications network ([16], <ref> [7] </ref>) that allows "messages" or "calls" to be exchanged among processes. Some messages may be sent directly from the Application Processor to processes or file stores at the remote site, but ideally, some local repository manager makes a connection and sends messages on behalf of the Application Processor.
Reference: 8. <author> ISO/IEC 9075. </author> <title> Database Language SQL, International Standard ISO/IEC 9075:1992, </title> <booktitle> American National Standard X3.135-1992, American National Standards Institute, </booktitle> <address> New York, NY 10036, </address> <month> November </month> <year> 1992. </year>
Reference-contexts: Many vendors have implemented an entire level of the SQL'92 standard <ref> [8] </ref> and offer products that conform to all of its clauses for schema definition, data manipulation, transaction management, integrity constraints, access control, and schema information. <p> Near term RDA follow-on specifications will extend the data types handled to all of those specified in the SQL'92 standard <ref> [8] </ref>, i.e. fixed and variable length character strings, fixed and variable length bit strings, fixed and floating point numerics, dates, times, timestamps, and intervals. <p> Section 7 of this FIPS PUB provides the necessary SQL/ERI Server profiles to get this integration scenario started. 4. SQL/ERI Leveling Rules The SQL'92 standard <ref> [8] </ref> specifies three levels of conformance for SQL language and SQL implementations: Entry SQL, Intermediate SQL, and Full SQL. In addition, FIPS SQL [3] defines a fourth level of conformance, called Transitional SQL, approximately halfway between Entry SQL and Intermediate SQL. <p> Using the style of the SQL standard, the following subsections specify restrictions that apply for Minimal SDL and Minimal DML in addition to any restrictions for Entry SQL. All Clause and Subclause references, and all syntactic terms delimited by angle brackets (i.e. &lt;...&gt;) are from SQL'92 <ref> [8] </ref>. 4.1 Minimal Schema Definition Language 1. A &lt;schema element&gt; contained in a &lt;schema definition&gt; shall be a &lt;table definition&gt; or a &lt;view definition&gt;. 2. A &lt;table element&gt; contained in a &lt;table definition&gt; shall be a &lt;column definition&gt;. 3. <p> In addition, it is sometimes desirable to identify other features specified in the SQL'92 standard <ref> [8] </ref> as either offered by a product or required by a specific procurement. Section 14 of FIPS SQL [3] identifies 83 features of the SQL'92 standard beyond the Entry SQL requirements. <p> As the different OID facilities of the SQL3 specification reach CD and DIS stability, an object-oriented SQL/ERI Server could use them with more confidence to permanently define its objects and their methods. 6. SQL Binding Alternatives The SQL'92 standard <ref> [8] </ref> specifies three different binding styles: Module, Embedded SQL, and Direct Invocation. The RDA'93 standard [9] specifies protocol interfaces for RDA clients and RDA servers. <p> Because many of the alternatives in these profiles identify a proper subset of full-function SQL requirements, conformance to any one of them does not imply conformance to the standard for Database Language SQL <ref> [8] </ref>. These profiles are intended for use by customers and vendors of products that claim only partial support of an SQL language interface to their data repository. <p> Insert, Update, or Delete, specified in Clause 13. It is expected that the level of support specified for SQL schema definition language is "None". Depending upon the various base level attributes specified, this profile may have Information Schema requirements that differ from those specified in SQL'92 <ref> [8] </ref> or FIPS SQL [3]. Schema Definition Rules 1. The SQL/ERI Read-Only Server profile assumes that all schema objects are owned by a user different from the user accessing the repository through this profile, and that appropriate privileges have been granted to all accessing users. <p> Case: a. If the Module, Embedded SQL, or Direct Invocation binding style is specified, then the requirements of the SQL &lt;commit statement&gt; and the SQL &lt;rollback statement&gt; from Clause 14, "Transaction management", of the SQL'92 standard <ref> [8] </ref> apply to this profile. b. If the SQL/CLI binding style is specified, then the requirements of the routines for transaction management (e.g. Transact and Cancel) as specified in the SQL/CLI standard [10] apply to this profile. 22 Draft FIPS PUB XXX c. <p> Depending upon the level of SQL schema definition language support specified, it may or may not require support for SQL schema definition or schema manipulation statements. Depending upon the various base level attributes specified, this profile may have Information Schema requirements that differ from those specified in SQL'92 <ref> [8] </ref> or FIPS SQL [3]. Schema Definition Rules 1. The SQL/ERI Read-Write Server profile assumes that some schema objects are owned by a user different from the user accessing the repository through this profile, and that appropriate privileges have been granted to all accessing users. <p> Case: a. If the Module, Embedded SQL, or Direct Invocation binding style is specified, then the requirements of the SQL &lt;commit statement&gt; and the SQL &lt;rollback statement&gt; from Clause 14, "Transaction management", of the SQL'92 standard <ref> [8] </ref> apply to this profile. b. If the SQL/CLI binding style is specified, then the requirements of the routines for transaction management (e.g. Transact and Cancel) as specified in the SQL/CLI standard [10] apply to this profile. c.
Reference: 9. <author> ISO/IEC 9579. </author> <title> Open Systems Interconnection Remote Database Access (RDA), Part 1: Generic Model and Part 2: SQL Specialization, International Standard ISO/IEC 9579:1993, </title> <institution> American National Standard ANSI/ISO/IEC 9579:1993, American National Standards Institute, </institution> <address> New York, NY 10036, </address> <month> December </month> <year> 1993. </year>
Reference-contexts: A companion standard for Remote Database Access (RDA) <ref> [9] </ref>, completed in 1993, provides the basic services and protocols for SQL interoperability in a distributed, wide area client/server environment. <p> Some messages may be sent directly from the Application Processor to processes or file stores at the remote site, but ideally, some local repository manager makes a connection and sends messages on behalf of the Application Processor. The Generic RDA and RDA/SQL Specialization standards <ref> [9] </ref> specify protocols that allow the RDA Client component of the 5 Draft FIPS PUB XXX local SQL processor to send SQL statements to the RDA Server component of a remote SQL processor, or the SQL/ERI Server component of any Non-SQL processor, and receive data in return. <p> SQL Binding Alternatives The SQL'92 standard [8] specifies three different binding styles: Module, Embedded SQL, and Direct Invocation. The RDA'93 standard <ref> [9] </ref> specifies protocol interfaces for RDA clients and RDA servers. An emerging standard for an SQL call level interface (SQL/CLI) is under a rapid development path in ISO/IEC with Draft International Standard (DIS) status expected sometime during calendar year 1994. <p> An SQL/ERI Server will indicate which of those languages it supports. 6.5 RDA/SQL-Server interface An SQL/ERI Server may provide an RDA/SQL-Server protocol interface according to the protocols defined in the RDA'93 standard <ref> [9] </ref>. The RDA protocols allow communication and interoperability among conforming RDA processors in an OSI communications network. <p> Reference <ref> [9] </ref> describes the services of the RDA standard in terms of an RDA Client, and RDA Server, and an RDA Service as follows: An RDA client is an application-process, within an open system, that requests database services from another application-process called a database server. <p> If an RDA dialogue is terminating when RDA dialogue failure occurs, then it may either be committed or rolled back. The NIST OSE Implementor's Workshop (OIW) has specified implementation agreements for the Basic Application Context of the RDA'93 standard <ref> [9] </ref>, with profiles for: Immediate Execution, Stored Execution, Status, and Cancel. Future work is in progress by the OIW to specify corresponding profiles for the Transaction Processing (TP) Application Context of the RDA'93 standard. <p> Stack OSI -- see [16] for 1992 OIW stable agreements IETF RFC 1006 -- see unpublished NIST RDA TestBed Agreements Proprietary -- give name & version of commercial LAN product 20 Draft FIPS PUB XXX Note: All of the above depend upon the International Standard for Remote Database Access (RDA) <ref> [9] </ref> in their upper layers; however, they may differ in their directory services and in their services for making an association at the application layer and in how that association is propagated through to the transport and physical layers. 10. <p> Transact and Cancel) as specified in the SQL/CLI standard [10] apply to this profile. 22 Draft FIPS PUB XXX c. If the RDA/SQL-Server binding style is specified, then the requirements for transaction management in the RDA Basic Application Context, as specified in the RDA standard <ref> [9] </ref>, with implementor agreements specified in [16], apply to this profile. d. If the RDA option for TP Application Context is specified, then the requirements for the TP Application Context, as specified in the RDA standard [9], with implementor agreements for Distributed Transaction Processing as specified in [16], apply to this <p> transaction management in the RDA Basic Application Context, as specified in the RDA standard <ref> [9] </ref>, with implementor agreements specified in [16], apply to this profile. d. If the RDA option for TP Application Context is specified, then the requirements for the TP Application Context, as specified in the RDA standard [9], with implementor agreements for Distributed Transaction Processing as specified in [16], apply to this profile. Note: The purpose of requiring support for SQL Commit and Rollback in Read-Only profiles is to give the user a standard way to signal to the system that a read-only transaction has completed. <p> Connect, Disconnect) as specified in the SQL/CLI specification [10] apply to this profile. 3. If the RDA/SQL-Server binding style is specified, then the requirements of RDA Dialogue Management and RDA Resource Handling as specified in the RDA standard <ref> [9] </ref>, with implementor agreements specified in [16], apply to this profile. Session Management Rules 1. <p> Transact and Cancel) as specified in the SQL/CLI standard [10] apply to this profile. c. If the RDA/SQL-Server binding style is specified, then the requirements for transaction management in the RDA Basic Application Context, as specified in the RDA specification <ref> [9] </ref>, with implementor agreements specified in [16], apply to this profile. d. If the RDA option for TP Application Context is specified, then the requirements for the TP Application Context, as specified in the RDA standard [9], with implementor agreements for Distributed Transaction Processing as specified in [16], apply to this <p> transaction management in the RDA Basic Application Context, as specified in the RDA specification <ref> [9] </ref>, with implementor agreements specified in [16], apply to this profile. d. If the RDA option for TP Application Context is specified, then the requirements for the TP Application Context, as specified in the RDA standard [9], with implementor agreements for Distributed Transaction Processing as specified in [16], apply to this profile. 2. <p> Connect, Disconnect) as specified in the SQL/CLI specification [10] apply to this profile. 3. If the RDA/SQL-Server binding style is specified, then the requirements of RDA Dialogue Management and RDA Resource Handling as specified in the RDA standard <ref> [9] </ref>, with implementor agreements specified in [16], apply to this profile. Session Management Rules 1.
Reference: 10. <author> ISO/IEC SQL/CLI. </author> <title> (Committee Draft) SQL Call Level Interface (SQL/CLI), </title> <type> ISO/IEC CD 9075-3, </type> <institution> document ISO/IEC JTC1/SC21 N8436, American National Standards Institute, </institution> <month> February </month> <year> 1994. </year>
Reference-contexts: A companion standard for Remote Database Access (RDA) [9], completed in 1993, provides the basic services and protocols for SQL interoperability in a distributed, wide area client/server environment. A companion standard for an SQL Call Level Interface (SQL/CLI) <ref> [10] </ref>, registered as a draft standard in February 1994, provides a language binding appropriate for third-party software developers in a local client/server environment. <p> feature is not really needed if, instead, the SQL/ERI Server supports the NULL alternative in the &lt;cast operand&gt; of the &lt;cast specification&gt;. 6.4 SQL call level interface (SQL/CLI) An SQL/ERI Server may provide an SQL Call Level Interface binding style according to the requirements of the emerging standard for SQL/CLI <ref> [10] </ref>. We expect the SQL/CLI specification to reach a stable state in the ISO/IEC standardization process during calendar year 1994, in time for any future NIST testing of SQL/ERI Server profiles. <p> The calls to the SQL data repository can then be embedded in the object code just like calls to any other system service. The Call Level Interface is an alternative mechanism for executing SQL statements. Reference <ref> [10] </ref> states that the SQL/CLI consists of a number of routines that: -- Allocate and deallocate resources. -- Control connections to SQL-servers. -- Execute SQL statements using mechanisms similar to Dynamic SQL. -- Obtain diagnostic information. -- Control transaction termination. <p> The SQL/CLI specification is intended to support CLI routines embedded into both pointer-based programming languages and non-pointer-based programming languages. In particular, the Syntax Rules of &lt;CLI routine&gt; specified in Subclause 5.2 of <ref> [10] </ref> indiate that CLI routines may be embedded into any one of the following standard programming languages: Ada, C, COBOL, Fortran, MUMPS, Pascal, and PL/I. <p> If the SQL/CLI binding style is specified, then the requirements of the routines for transaction management (e.g. Transact and Cancel) as specified in the SQL/CLI standard <ref> [10] </ref> apply to this profile. 22 Draft FIPS PUB XXX c. If the RDA/SQL-Server binding style is specified, then the requirements for transaction management in the RDA Basic Application Context, as specified in the RDA standard [9], with implementor agreements specified in [16], apply to this profile. d. <p> If the SQL/CLI binding style is specified, then the requirements of the routines for connection management (i.e. Connect, Disconnect) as specified in the SQL/CLI specification <ref> [10] </ref> apply to this profile. 3. If the RDA/SQL-Server binding style is specified, then the requirements of RDA Dialogue Management and RDA Resource Handling as specified in the RDA standard [9], with implementor agreements specified in [16], apply to this profile. Session Management Rules 1. <p> If the SQL/CLI binding style is specified, then the requirements of the routines for transaction management (e.g. Transact and Cancel) as specified in the SQL/CLI standard <ref> [10] </ref> apply to this profile. c. If the RDA/SQL-Server binding style is specified, then the requirements for transaction management in the RDA Basic Application Context, as specified in the RDA specification [9], with implementor agreements specified in [16], apply to this profile. d. <p> If the SQL/CLI binding style is specified, then the requirements of the routines for connection management (i.e. Connect, Disconnect) as specified in the SQL/CLI specification <ref> [10] </ref> apply to this profile. 3. If the RDA/SQL-Server binding style is specified, then the requirements of RDA Dialogue Management and RDA Resource Handling as specified in the RDA standard [9], with implementor agreements specified in [16], apply to this profile. Session Management Rules 1. <p> Failure to choose a binding style means that, by default, the SQL/CLI binding style (see <ref> [10] </ref>) is the only requirement. 8. For each of the Module, Embedded SQL, or SQL/CLI binding styles chosen above, specify the programming language interface that shall be supported, by choosing one or more of the following programming language alternatives: Ada, C, COBOL, Fortran, MUMPS, Pascal, PL/I, or SAMeDL.
Reference: 11. <author> ISO/IEC SQL/PSM. </author> <title> (Committee Draft) SQL Persistent Stored Modules (SQL/PSM), </title> <institution> document ISO/IEC JTC1/SC21 N8438, American National Standards Institute, </institution> <month> March </month> <year> 1994. </year>
Reference-contexts: An extension to SQL for definition and invocation of persistent stored procedures and for SQL flow of control statements, named 1 Draft FIPS PUB XXX Persistent SQL Modules (SQL/PSM) <ref> [11] </ref> and registered as a draft standard in March 1994, permits user definition of procedural program blocks that can then be optimized at multiple SQL servers and invoked as needed, thereby reducing both processing time and communications volume. <p> required features, but in the absence of an explicit declaration, the default minimum limits apply for that procurement. 5.2 Stored procedures and callable routines (SQL/PSM) An emerging new part of the SQL standard for Persistent Stored Modules (SQL/PSM) was registered as an ISO/IEC Committee Draft (CD) in March 1994 (see <ref> [11] </ref>). Although this specification will not reach formal standardization until at least late 1995 or early 1996, it should be sufficiently complete and stable to justify its careful use in procurements before that date. <p> library (SQL/MM) ADTs and methods Object data management Note: If SQL'92 features is chosen, then the implementation shall support the SQL_FEATURES table as specified in Section 15 of FIPS SQL (see [3]); if SQL/PSM is chosen, then the implementation shall support all requirements of the then current SQL/PSM specification (see <ref> [11] </ref>); if SQL/MM is chosen, then the implementation shall point to the then current SQL/MM specification (see [13]) and explicitly indicate which Parts, and which conformance alternatives within each Part, are supported; if ADTs and methods is chosen, then the implementation shall support the appropriate Abstract Data Type clauses in the <p> Failure to specify any additional SQL'92 features to be supported means that none are required. 10. Specify whether or not the SQL/PSM optional extension shall be supported; if SQL/PSM support is required, then the implementation shall support all requirements of the then current SQL/PSM specification (see <ref> [11] </ref>). See Section 5.2 above for a discussion of SQL/PSM. Note that a Read-Only interface need only support the Read-Only aspects of SQL/PSM.
Reference: 12. <author> ISO/IEC SQL3. </author> <title> (ISO-ANSI Working Draft) Database Language SQL (SQL3), </title> <institution> document ISO/IEC JTC1/SC21 N6931, American National Standards Institute, </institution> <month> July </month> <year> 1992. </year> <title> Later versions available from Working Group or Rapporteur Group documents as a six-part document, Part 1: Framework, Part 2: Foundation, Part 3: Call Level Interface, Part 4: Persistent Stored Modules, Part 5: Language Bindings, Part 6: </title> <journal> Encompassing Transactions. </journal> <note> Available using Internet anonymous FTP protocols at node "speckle.ncsl.nist.gov" in directory "isowg3/dbl/BASEdocs". 43 Draft FIPS PUB XXX </note>
Reference-contexts: Later RDA follow-on specifications will provide interchange mechanisms, in terms of ASN.1 elements, for the user defined abstract data types (ADTs) specified in the emerging SQL3 working draft <ref> [12] </ref>. RDA protocols do not by themselves provide interchange mechanisms for other data objects, so interchange standards for images, motion pictures, maps, topologies, or other complex objects will remain critical for transmitting object instances among various sites. SQL and RDA provide the basis for standardized communication. <p> If the ERI Server provides new abstract data types not defined in the SQL standard, then it is also required to provide an SQL ADT interface definition as specified in the emerging SQL3 standard <ref> [12] </ref>. What is needed to make the above scenario feasible is an SQL/ERI Server profile, so that these non-SQL data repositories can provide a simple, external interface, accessible from full-function SQL systems. <p> This new standardization activity, named SQL Multimedia (SQL/MM), will specify packages of SQL abstract data type (ADT) definitions using the facilities for ADT specification and invocation provided in the emerging SQL3 specification <ref> [12] </ref>. SQL/MM intends to standardize class libraries for science and engineering, full-text and document processing, and methods for the management of multimedia objects such as image, sound, animation, music, and video. It will likely provide an SQL language binding for multimedia objects defined by other JTC1 standardization bodies (e.g. <p> For example, see Clauses 4.11, "Abstract data types", 11.47, "&lt;abstract data type definition&gt;", and 11.48, "&lt;abstract data type body&gt;", of the March, 1994, version of <ref> [12] </ref>. If data abstraction is an inherent requirement of an SQL/ERI Server, then it could define its Abstract Data Types and make them available to SQL applications using these definitional mechanisms. <p> For example, see Clauses 4.9 "Object identifier type", 11.48 "&lt;abstract data type body&gt;" WITH OID option, and 6.5 "&lt;attribute reference&gt;", of the March, 1994, version of <ref> [12] </ref>. If object identity is an inherent requirement of an SQL/ERI Server, then it could define its Abstract Data Types with Object Identifiers (OID) and make them available to SQL applications using these definitional mechanisms. <p> to the then current SQL/MM specification (see [13]) and explicitly indicate which Parts, and which conformance alternatives within each Part, are supported; if ADTs and methods is chosen, then the implementation shall support the appropriate Abstract Data Type clauses in the then current SQL3 specification (see Section 5.4 above and <ref> [12] </ref>); if Object data management is chosen, then the implementation shall support the appropriate object management clauses in the then current SQL3 specification (see Section 5.5 above and [12]). 9. <p> then the implementation shall support the appropriate Abstract Data Type clauses in the then current SQL3 specification (see Section 5.4 above and <ref> [12] </ref>); if Object data management is chosen, then the implementation shall support the appropriate object management clauses in the then current SQL3 specification (see Section 5.5 above and [12]). 9. If the RDA/SQL-Server binding style is chosen, then which underlying communications protocols are supported, by choosing one or more of the following. <p> SQL3 features dealing with abstract data types (ADTs), methods, and object data management are to be supported; if any of these SQL3 facilities are to be supported, then point to the appropriate ADT or object management clauses in the then current SQL3 specification (see Sections 5.4 and 5.5 above and <ref> [12] </ref>) and explicitly indicate which features are required. Note that a Read-Only interface need only support the Read-Only aspects of any indicated SQL3 features. To be successful, a Read-Only procurement should include the desired SQL3 features in the SQL schemas produced in item 2 above. <p> Read Sections 16.8, "DBMS procurement", and 16.11, "System integration", in FIPS PUB 127-2 to see if any of the discussions therein apply to this procurement for an SQL/ERI Server. Section 16.8 lists a number of emerging SQL3 features (see <ref> [12] </ref>) that might be listed as "desirable" features in an SQL/ERI Server procurement. Remember that a Read-Only interface need only support the Read-Only aspects of any specified features. 42
Reference: 13. <author> ISO/IEC SQL/MM. </author> <title> SQL Multimedia and Application Packages (SQL/MM), Project description in document ISO/IEC JTC1/SC21 N7179, </title> <institution> American National Standards Institute, </institution> <month> January </month> <year> 1993. </year> <title> Initial draft available as a three-part document, Part 1: Framework and General Purpose Facilities, Part 2: Full-Text, Part 3: Spatial, with additional parts expected for other multimedia areas. </title> <note> Available using Internet anonymous FTP protocols at node "speckle.ncsl.nist.gov" in directory "isowg3/sqlmm/BASEdocs". </note>
Reference-contexts: Each of the other parts will be devoted to a specific SQL application package. Even though this project is just getting started, initial base documents exist for Part 1: Framework and General Purpose Facilities, Part 2: Full Text, and Part 3: Spatial (see <ref> [13] </ref>). As the different components of the SQL/MM specification reach CD and DIS stability, an SQL/ERI Server could claim support for specific features. 5.4 Abstract data types and methods The emerging SQL3 specification contains a number of data abstraction facilities. <p> shall support the SQL_FEATURES table as specified in Section 15 of FIPS SQL (see [3]); if SQL/PSM is chosen, then the implementation shall support all requirements of the then current SQL/PSM specification (see [11]); if SQL/MM is chosen, then the implementation shall point to the then current SQL/MM specification (see <ref> [13] </ref>) and explicitly indicate which Parts, and which conformance alternatives within each Part, are supported; if ADTs and methods is chosen, then the implementation shall support the appropriate Abstract Data Type clauses in the then current SQL3 specification (see Section 5.4 above and [12]); if Object data management is chosen, then <p> Failure to specify a requirement for SQL/PSM means that support for SQL/PSM is not required. 11. Specify which, if any, conformance alternatives from SQL/MM shall be supported; if SQL/MM support is required, then point to the then current SQL/MM specification (see <ref> [13] </ref>) and explicitly indicate which Parts, and which conformance alternatives within each Part, are required. See Section 5.3 above for a discussion of SQL/MM. Note that a Read-Only interface need only support the Read-Only aspects of 41 Draft FIPS PUB XXX SQL/MM.
Reference: 14. <author> ISO/IEC TR 10000-3. </author> <title> Information Technology Framework and Taxonomy of International Standardized Profiles Part 1: General Principles and Framework, Part 2: Principles and Taxonomy for OSI Profiles, Part 3: Principles and Taxonomy for Open System Environment Profiles, </title> <note> Parts 1 & 2 have been published, A First Working Draft of Part3 is available as document ISO/IEC JTC1/SGFS N688rev, </note> <month> 17 March </month> <year> 1993. </year>
Reference-contexts: This specification may also be used as a starting point for defining International Standardized Profiles (ISPs) <ref> [14] </ref> for SQL language access to non-SQL data repositories. 2.
Reference: 15. <author> Melton, Jim and Alan Simon. </author> <title> Understanding the New SQL: A Complete Guide, </title> <publisher> Morgan Kauffman Publishers, </publisher> <address> San Mateo, CA 94403, </address> <month> October </month> <year> 1992. </year>
Reference-contexts: Features of the SQL'92 standard are discussed in References [1], [2], and <ref> [15] </ref>. Proposed features of the next SQL revision, often called SQL3, are discussed in [4] and [5]. SQL is particularly appropriate for the definition and management of data that is structured into repeated occurrences having common data structure definitions.
Reference: 16. <author> NIST OIW. </author> <title> Stable Implementation Agreements for OSI Protocols, Version 6, Edition 1, NIST Open Systems Environment Workshop, document NIST SP 500-206, </title> <month> December </month> <year> 1992. </year>
Reference-contexts: Application processors will then have protected access to all data using the full power and flexibility of Database Language SQL. Standard communication among cooperating systems is possible at the present time using either OSI protocols <ref> [16] </ref> or Internet Society protocols [7]. Efforts are underway within both of these arenas to provide cross-protocol mappings for interoperability. Application services in both protocol environments provide for association control, file transfer, virtual terminal, and electronic mail. <p> If an application program, acting as an RDA client, is able to form an association with an SQL/ERI Server and communicate thereafter using RDA protocols subject to the implementor agreements specified by the Open Systems Environment Implementor's Workshop (e.g. in <ref> [16] </ref>), then the SQL/ERI Server may claim conformance to the RDA/SQL-Server interface style. <p> For the purpose of the SQL/ERI Server profiles specified in this document, support for the RDA/SQL-Server interface requires support as an RDA Server for the Immediate Execution profile of the Basic Application Context as specified in <ref> [16] </ref>, with the ability to respond to SQL statements at the level of support for SQL language claimed by the SQL/ERI Server. The other profiles of the Basic Application Context defined in [16], and the TP Application Context, are optional enhancements to this basic requirement as follows: RDA Stored Execution. <p> support as an RDA Server for the Immediate Execution profile of the Basic Application Context as specified in <ref> [16] </ref>, with the ability to respond to SQL statements at the level of support for SQL language claimed by the SQL/ERI Server. The other profiles of the Basic Application Context defined in [16], and the TP Application Context, are optional enhancements to this basic requirement as follows: RDA Stored Execution. <p> Support for the basic requirements specified above and, in addition, support for the RDA Stored Execution Functional Unit as specified in the RDA'93 standard and with implementor agreements for the Stored Execution profile as specified in <ref> [16] </ref>. 17 Draft FIPS PUB XXX RDA Status. Support for the basic requirements specified above and, in addition, support for the RDA Status Functional Unit as specified in the RDA'93 standard and with implementor agreements for the Status profile as specified in [16]. RDA Cancel. <p> for the Stored Execution profile as specified in <ref> [16] </ref>. 17 Draft FIPS PUB XXX RDA Status. Support for the basic requirements specified above and, in addition, support for the RDA Status Functional Unit as specified in the RDA'93 standard and with implementor agreements for the Status profile as specified in [16]. RDA Cancel. Support for the basic requirements specified above and, in addition, support for the RDA Cancel Functional Unit as specified in the RDA'93 standard and with implementor agreements for the Cancel profile as specified in [16]. RDA TP Application Context. <p> RDA'93 standard and with implementor agreements for the Status profile as specified in <ref> [16] </ref>. RDA Cancel. Support for the basic requirements specified above and, in addition, support for the RDA Cancel Functional Unit as specified in the RDA'93 standard and with implementor agreements for the Cancel profile as specified in [16]. RDA TP Application Context. Support for the basic requirements specified above and, in addition, support for the RDA SQL TP Application Context as specified in the RDA'93 standard, and dependent upon ISO/IEC 10026 (Distributed Transaction Processing), and with implementor agreements for Distributed Transaction Processing as specified in [16]. 7. <p> specified in <ref> [16] </ref>. RDA TP Application Context. Support for the basic requirements specified above and, in addition, support for the RDA SQL TP Application Context as specified in the RDA'93 standard, and dependent upon ISO/IEC 10026 (Distributed Transaction Processing), and with implementor agreements for Distributed Transaction Processing as specified in [16]. 7. <p> If the RDA/SQL-Server binding style is chosen, then which underlying communications protocols are supported, by choosing one or more of the following. Minimal OSI (MOSI) -- see new OIW 1994 agreements Full Stack OSI -- see <ref> [16] </ref> for 1992 OIW stable agreements IETF RFC 1006 -- see unpublished NIST RDA TestBed Agreements Proprietary -- give name & version of commercial LAN product 20 Draft FIPS PUB XXX Note: All of the above depend upon the International Standard for Remote Database Access (RDA) [9] in their upper layers; <p> If the RDA/SQL-Server binding style is specified, then the requirements for transaction management in the RDA Basic Application Context, as specified in the RDA standard [9], with implementor agreements specified in <ref> [16] </ref>, apply to this profile. d. If the RDA option for TP Application Context is specified, then the requirements for the TP Application Context, as specified in the RDA standard [9], with implementor agreements for Distributed Transaction Processing as specified in [16], apply to this profile. <p> the RDA standard [9], with implementor agreements specified in <ref> [16] </ref>, apply to this profile. d. If the RDA option for TP Application Context is specified, then the requirements for the TP Application Context, as specified in the RDA standard [9], with implementor agreements for Distributed Transaction Processing as specified in [16], apply to this profile. Note: The purpose of requiring support for SQL Commit and Rollback in Read-Only profiles is to give the user a standard way to signal to the system that a read-only transaction has completed. <p> Connect, Disconnect) as specified in the SQL/CLI specification [10] apply to this profile. 3. If the RDA/SQL-Server binding style is specified, then the requirements of RDA Dialogue Management and RDA Resource Handling as specified in the RDA standard [9], with implementor agreements specified in <ref> [16] </ref>, apply to this profile. Session Management Rules 1. <p> Transact and Cancel) as specified in the SQL/CLI standard [10] apply to this profile. c. If the RDA/SQL-Server binding style is specified, then the requirements for transaction management in the RDA Basic Application Context, as specified in the RDA specification [9], with implementor agreements specified in <ref> [16] </ref>, apply to this profile. d. If the RDA option for TP Application Context is specified, then the requirements for the TP Application Context, as specified in the RDA standard [9], with implementor agreements for Distributed Transaction Processing as specified in [16], apply to this profile. 2. <p> the RDA specification [9], with implementor agreements specified in <ref> [16] </ref>, apply to this profile. d. If the RDA option for TP Application Context is specified, then the requirements for the TP Application Context, as specified in the RDA standard [9], with implementor agreements for Distributed Transaction Processing as specified in [16], apply to this profile. 2. If the level of SQL transaction management support is Commit-Rollback, then the &lt;set transaction statement&gt; SET TRANSACTION READ WRITE, ISOLATION LEVEL SERIALIZABLE is implicit for every transaction of any SQL-session through this profile. 3. <p> Connect, Disconnect) as specified in the SQL/CLI specification [10] apply to this profile. 3. If the RDA/SQL-Server binding style is specified, then the requirements of RDA Dialogue Management and RDA Resource Handling as specified in the RDA standard [9], with implementor agreements specified in <ref> [16] </ref>, apply to this profile. Session Management Rules 1.
Reference: 17. <author> NIST SQL Test Suite. </author> <title> An automated suite of tests for evaluating conformance to FIPS SQL, </title> <type> Version 4.0, </type> <institution> NIST Computer Systems Laboratory, </institution> <month> July </month> <year> 1993. </year>
Reference: 18. <author> NIST SQL Validation Procedures. </author> <title> Database Language SQL Validation Procedures, </title> <type> unpublished NIST technical report, </type> <institution> NIST Computer Systems Laboratory, </institution> <year> 1993. </year>
Reference: 19. <author> NIST VPL. </author> <title> Validated Products List: Programming Languages, Database Language SQL, Graphics, GOSIP, POSIX, </title> <editor> Security; Judy B. Kailey, Editor, </editor> <volume> NISTIR 5103, issue No. </volume> <pages> 1, </pages> <note> January 1993 (republished quarterly). Available by subscription from the National Technical Information Service (NTIS). </note>
Reference: 20. <author> SQL Errata. </author> <title> Database Language SQL Technical Corrigendum 1, </title> <booktitle> ISO/IEC 9075:1992 TC 1, </booktitle> <institution> document ISO/IEC JTC1/SC21 Nxxxx (post-ballot revision of SC21 N8225), American National Standards Institute, </institution> <month> expected June </month> <year> 1994. </year>
Reference-contexts: A &lt;sort key&gt; in a &lt;declare cursor&gt; shall not be an &lt;unsigned integer&gt;. Note: Leveling Rule 2a of Subclause 13.8, "&lt;insert statement&gt;", is incorrect in that it should also allow a &lt;null specification&gt;. This is corrected in SQL Technical Corrigendum 1 <ref> [20] </ref>. 9 Draft FIPS PUB XXX 5. Optional Extensions An SQL/ERI Server will often support additional data types and SQL language facilities beyond those specified for the given level of service.
Reference: 21. <author> SAMeDL. </author> <title> SQL/Ada Module Description Language, </title> <note> ISO/IEC DIS 12227, Draft International Standard, document ISO/IEC JTC1/SC22 N1385, Spring 1994. </note>
Reference-contexts: Ada COBOL Fortran MUMPS Pascal PL/I SAMeDL Note: The Direct Invocation and RDA/SQL-Server binding styles do not require or provide a programming language interface. The preferred language interfaces for SQL/CLI are C and/or COBOL. SAMeDL is an alternative only for the Module binding style (see <ref> [21] </ref>). 7. Whether or not SQL session management is supported, by specifying exactly one of the following session management alternatives. Session Supported Session Not Supported Note: SQL session management is defined in Clause 16, "Session management", of SQL'92. 8.
Reference: 22. <author> NIST APP. </author> <title> Application Portability Profile (APP) Open System Environment Profile, </title> <note> OSE/1 Version 2.0, NIST Special Publication 500-210, </note> <month> June </month> <year> 1993. </year> <month> 44 </month>
Reference-contexts: Case: a. If the tool interacts directly with a human end user, then state the requirements of the human to computer interface. This interface may depend upon "Human/Computer Interface Services" as discussed in Sections 3.3.2 and 4.8 of the NIST Application Portability Profile (APP) for Open Systems Environments (see <ref> [22] </ref>). b. If the tool provides a services interface to other software tools, then state the calling requirements and data types that must pass across this interface.
References-found: 22

