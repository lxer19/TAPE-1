URL: http://www.cs.wustl.edu/cs/techreports/1998/wucs-98-11.ps.Z
Refering-URL: http://www.cs.wustl.edu/cs/cs/publications.html
Root-URL: 
Title: Fault-Tolerant Mobile IP  
Author: Rajib Ghosh George Varghese wucs-- 
Keyword: Internet Protocol, Mobile IP, Mobility Agents, Mobile Host, Home Agent, Foreign Agent, ARP, Gratuitous ARP, IP Encapsulation Tunneling, ICMP.  
Note: This work was supported by National Science Foundation under grant NCR-9628145 and the ONR Young Inves tigator Award.  
Address: Campus Box 1045  One Brookings Drive St. Louis, MO 63130-4899  
Affiliation: Department of Computer Science  Washington University  
Date: April 29, 1998  
Abstract: We describe mechanisms to enhance the reliability and performance of Mobile IP. In Mobile IP today home agents and foreign agents are single points of failure and potential performance bottlenecks. For example, a home agent crash can can lead to communication failure if the mobile is away from home. In this paper we describe new mechanisms to allow redundant home and foreign agents. Redundant agents can take over from each other in case of failure, and also split load amongst themselves. Our mechanisms are simple, transparent to existing mobile nodes, amd compatible with the existing Mobile IP specification. We have implemented our scheme on top of an existing Mobile IP implementation, and our implementation adds about 700 lines of code. Our paper describes and defends our design choices, the synchronization protocols used, and the implementation of our fault-tolerant protocol. 
Abstract-found: 1
Intro-found: 1
Reference: [BM97] <author> James R. Binkley and John McHugh. </author> <title> Secure Mobile Networking: </title> <booktitle> Sixth Quarterly Report Winter 1997. </booktitle> <institution> Portland State University, </institution> <month> April </month> <year> 1997. </year> <note> Web address http://www.cs.pdx.edu/research/SMN/1q97.ps. </note>
Reference-contexts: After beginning this project, we learned of work being done by the Secure Mobile Networking project at Portland State University. The primary goal of this project has been to integrate security and network layer mobility into real systems. However, their Sixth Quarterly Report <ref> [BM97] </ref> describes some preliminary ideas to handle redundancy of home agents. In HARP, Home Agent Redundancy Protocol [BM97], both the HARP peers maintain routing tunnels to the mobile host and to each other. <p> The primary goal of this project has been to integrate security and network layer mobility into real systems. However, their Sixth Quarterly Report <ref> [BM97] </ref> describes some preliminary ideas to handle redundancy of home agents. In HARP, Home Agent Redundancy Protocol [BM97], both the HARP peers maintain routing tunnels to the mobile host and to each other. The harpies (HARP peers) are usually on different networks, but they present a consistent mobile IP subnet to the world; i.e., they advertise a single subnet to the routing domain. <p> Harpies use "Hello" messages to monitor each other. A harpy forwards MIP registrations to its peer, and upon boot obtains the entire routing table from its statically configured peer. When comparing the work in <ref> [BM97] </ref> to our approach, we find both similarities and differences. Our approach to synchronizing bindings (by having registration messages forwarded to backup home agents, and by obtaining bindings on startup if necessary) is similar to the approach in [BM97]. <p> When comparing the work in <ref> [BM97] </ref> to our approach, we find both similarities and differences. Our approach to synchronizing bindings (by having registration messages forwarded to backup home agents, and by obtaining bindings on startup if necessary) is similar to the approach in [BM97]. While we had invented our approach based on registration forwarding before we saw the work in [BM97], we did decide to use the [BM97] approach of obtaining bindings on startup using TCP. <p> Our approach to synchronizing bindings (by having registration messages forwarded to backup home agents, and by obtaining bindings on startup if necessary) is similar to the approach in <ref> [BM97] </ref>. While we had invented our approach based on registration forwarding before we saw the work in [BM97], we did decide to use the [BM97] approach of obtaining bindings on startup using TCP. However, we note that this is a common approach used in the Internet world for synchronizing state information for protocols such as DNS and BGP. On the other hand, the approach in [BM97] allows the <p> to synchronizing bindings (by having registration messages forwarded to backup home agents, and by obtaining bindings on startup if necessary) is similar to the approach in <ref> [BM97] </ref>. While we had invented our approach based on registration forwarding before we saw the work in [BM97], we did decide to use the [BM97] approach of obtaining bindings on startup using TCP. However, we note that this is a common approach used in the Internet world for synchronizing state information for protocols such as DNS and BGP. On the other hand, the approach in [BM97] allows the home agent peers to be on different <p> work in <ref> [BM97] </ref>, we did decide to use the [BM97] approach of obtaining bindings on startup using TCP. However, we note that this is a common approach used in the Internet world for synchronizing state information for protocols such as DNS and BGP. On the other hand, the approach in [BM97] allows the home agent peers to be on different networks for redundancy. This requires some complexity in terms of a virtual subnetwork that allows the mobile agent to be transparent to the presence of the multiple home agents. <p> We avoid this potential complexity (while losing some of the potential benefits) by only allowing our multiple agents to be on the same network. Secondly, the work in <ref> [BM97] </ref> only allows one backup agent, while our protocol was explicitly designed to allow multiple backup agents (and yet allow a simple implementation in the common case of a single backup agent). Thirdly, the work in [BM97] does not mention the use of load balancing. <p> Secondly, the work in <ref> [BM97] </ref> only allows one backup agent, while our protocol was explicitly designed to allow multiple backup agents (and yet allow a simple implementation in the common case of a single backup agent). Thirdly, the work in [BM97] does not mention the use of load balancing. We also note that the initial report in [BM97] only describes the basic idea in 3 pages. We have found a number of subtle details after actually specifying and implementing the complete protocol. <p> Thirdly, the work in <ref> [BM97] </ref> does not mention the use of load balancing. We also note that the initial report in [BM97] only describes the basic idea in 3 pages. We have found a number of subtle details after actually specifying and implementing the complete protocol. Outline of Paper: This paper describes in detail how our fault tolerant MIP protocol works. <p> The Registration Forward and Acknowledgement messages use UDP (the User Datagram Protocol [Pos80]) just like the normal Registration Request and Reply messages in MIP. Reliable Transfer of Accumulated Bindings using TCP:. When a home agent comes up after crash (Figure 3), we prefer to use an existing transport protocol <ref> [BM97] </ref> to reliably bulk transfer the mobility bindings which have been accumulated by its peer. The use of TCP is advantageous because the amount of data might be huge, and TCP takes care of most reliability problems.
Reference: [CG85] <author> Bill Croft and John Gilmore. </author> <title> BOOTSTRAP PROTOCOL (BOOTP). </title> <type> RFC 951, </type> <month> September </month> <year> 1985. </year>
Reference-contexts: Notice that there is no hidden recursion here because TCP works over fixed IP routing. A popular inter-domain routing protocol, BGP [RL95], uses the same idea of using TCP for reliable exchange of routing information [Rek95]. Alternatively, we can could also use a low level protocol like BootP <ref> [CG85] </ref> to do this transfer. However, adhering to our goal of Simplicity, we decided to use TCP instead.
Reference: [Dee89] <author> S. Deering. </author> <title> Host Extensions for IP Multicasting_ STD 5 RFC 1112, </title> <month> August </month> <year> 1989. </year>
Reference-contexts: First, a mobile can join the multicast group on the foreign network. This option requires that there be a multicast router present on the visited subnet. If the mobile is using its co-located address, it must use this address as the source address of its IGMP <ref> [Dee89] </ref> messages; otherwise, it must use its home address. This method is independent of our FT protocol and requires no additional enhancements to our design. Alternatively, a mobile may join the group via a bi-directional tunnel to its home agent, assuming its home agent is a multicast router.
Reference: [Dee91] <author> S. Deering. </author> <title> ICMP Router Discovery Messages. </title> <type> RFC 1256, </type> <month> September </month> <year> 1991. </year>
Reference-contexts: Mobility agents keep track of mobile hosts and are responsible for routing packets to them. Agents, however, use static IP [Pos81] for routing their packets. Mobile IP is simple in the sense that it uses the existing mechanisms of IP Encapsulation [Sim95, Per96a, Per96c], ICMP messages <ref> [Dee91] </ref> and ARP [Plu82]. Mobile IP uses static IP routing, but leaves the latter completely unaffected. Overview of Mobile IP: In Mobile IP [Per96b], a source S sending a packet to a mobile M sends the packet to a fixed IP address for M . <p> Simplicity and Compatibility: Our protocol adheres to the simple design philosophy of mobile IP. We continue to use existing mechanisms in mobile IP like IP Encapsulation [Sim95, Per96a, Per96c], ICMP <ref> [Dee91] </ref>, and ARP [Plu82]. We use the existing Registration Request and Reply messages to distribute mobility bindings among agent peers. Finally, an agent uses TCP [Ste94, WS94] to obtain its bindings when it comes up after a crash (see Section 2 for details).
Reference: [Dro93] <author> R. Droms. </author> <title> Dynamic Host Configuration Protocol. </title> <type> RFC 1541, </type> <month> October </month> <year> 1993. </year>
Reference-contexts: The care-of address can be either be obtained from agent advertisements (a foreign agent care-of address), or by some other mechanism like DHCP <ref> [Dro93] </ref> (a co-located care-of address). M then registers its new care-of address with its home agent HA through Registration Request and Reply messages, possibly via its foreign agent F A. * Datagrams sent to M are intercepted by HA, encapsulated and tunneled to the mobile's care-of address. <p> In this case, the foreign agent decapsulates the packets and hands them to the mobile. 2 A co-located address is a care-of address acquired by the mobile as a local IP address on the foreign network. It may be obtained temporarily (e.g., through DHCP <ref> [Dro93] </ref>), or it may be a long term address reserved for its use while visiting the foreign network. In such a case, the mobile decapsulates its own packets. Thus, a foreign agent is not essential to the working of the protocol.
Reference: [GDL96] <author> Vipul Gupta, Abhijit Dixit, and Ben Lancki. </author> <title> Linux Mobile-IP Home Page. </title> <institution> SUNY Bing-hampton, </institution> <month> May </month> <year> 1996. </year> <note> Web address http://anchor.cs.binghamton.edu/ mobileip/. </note>
Reference-contexts: The above changes had to be made so that the mobile host does not detect any movement when the agent it is registered with crashes. 15 4. Implementation We obtained an implementation of Mobile IP (ver 0.95) for the Linux operating system from SUNY Binghamton <ref> [GDL96] </ref>, and ported the code to our machines running NetBSD (ver 1.2E). The SUNY implementation is based on draft version 16 of IP Mobility Support. Then we enhanced it with our fault-tolerant mechanisms. We are implementing our protocol described above (Section 2 and 3).
Reference: [Joh91] <author> John Ioannidis and Dan Duchamp and Gerald Q. Maguire Jr. </author> <title> IP-based Protocols for Mobile Networking. </title> <booktitle> In Proceedings of the SIGCOMM '91 conference: Communications Architectures and Protocols, </booktitle> <pages> pages 235-245, </pages> <month> September </month> <year> 1991. </year> <month> 20 </month>
Reference-contexts: Besides the reliability problems we have alluded to, too much load on a single agent could be detrimental to MIP performance. Thus, mobility agents could be possible performance bottlenecks for mobile IP in the near future. Related Work: The MIP literature <ref> [Joh91, TCT92, MS93, PMJ94, Joh94] </ref>, so far, pays very little mention to fault-tolerance. [MS93] compares four IP based Mobile Host Protocols; according to this paper, all existing schemes require mobility agent duplication to handle component loss.
Reference: [Joh94] <author> David B. Johnson. </author> <title> Scalable and Robust Internetwork Routing for Mobile Hosts. </title> <booktitle> In Proceed--ings of the 14th International Conference on Distributed Computing Systems, </booktitle> <pages> pages 2-11, </pages> <month> june </month> <year> 1994. </year>
Reference-contexts: Besides the reliability problems we have alluded to, too much load on a single agent could be detrimental to MIP performance. Thus, mobility agents could be possible performance bottlenecks for mobile IP in the near future. Related Work: The MIP literature <ref> [Joh91, TCT92, MS93, PMJ94, Joh94] </ref>, so far, pays very little mention to fault-tolerance. [MS93] compares four IP based Mobile Host Protocols; according to this paper, all existing schemes require mobility agent duplication to handle component loss.
Reference: [MS93] <author> Andrew Myles and David Skellern. </author> <title> Comparing Four IP Based Mobile Host Protocols. </title> <booktitle> Computer Networks and ISDN Systems, </booktitle> <pages> pages 349-356, </pages> <month> November </month> <year> 1993. </year>
Reference-contexts: Besides the reliability problems we have alluded to, too much load on a single agent could be detrimental to MIP performance. Thus, mobility agents could be possible performance bottlenecks for mobile IP in the near future. Related Work: The MIP literature <ref> [Joh91, TCT92, MS93, PMJ94, Joh94] </ref>, so far, pays very little mention to fault-tolerance. [MS93] compares four IP based Mobile Host Protocols; according to this paper, all existing schemes require mobility agent duplication to handle component loss. <p> Thus, mobility agents could be possible performance bottlenecks for mobile IP in the near future. Related Work: The MIP literature [Joh91, TCT92, MS93, PMJ94, Joh94], so far, pays very little mention to fault-tolerance. <ref> [MS93] </ref> compares four IP based Mobile Host Protocols; according to this paper, all existing schemes require mobility agent duplication to handle component loss. The Virtual Internet Protocol [TCT92] paper does mention handling failures using duplication of the Address Mapping Table (AMT) entries at multiple gateways.
Reference: [Per96a] <author> C. Perkins. </author> <title> IP Encapsulation Within IP. </title> <booktitle> RFC 2003, </booktitle> <month> October </month> <year> 1996. </year>
Reference-contexts: Mobility agents keep track of mobile hosts and are responsible for routing packets to them. Agents, however, use static IP [Pos81] for routing their packets. Mobile IP is simple in the sense that it uses the existing mechanisms of IP Encapsulation <ref> [Sim95, Per96a, Per96c] </ref>, ICMP messages [Dee91] and ARP [Plu82]. Mobile IP uses static IP routing, but leaves the latter completely unaffected. Overview of Mobile IP: In Mobile IP [Per96b], a source S sending a packet to a mobile M sends the packet to a fixed IP address for M . <p> Simplicity and Compatibility: Our protocol adheres to the simple design philosophy of mobile IP. We continue to use existing mechanisms in mobile IP like IP Encapsulation <ref> [Sim95, Per96a, Per96c] </ref>, ICMP [Dee91], and ARP [Plu82]. We use the existing Registration Request and Reply messages to distribute mobility bindings among agent peers. Finally, an agent uses TCP [Ste94, WS94] to obtain its bindings when it comes up after a crash (see Section 2 for details). <p> HA also performs a similar gratuitous ARP for all the mobiles which were registered with P and are away from home. It also creates IP tunnels <ref> [Sim95, Per96a] </ref> to their care-of addresses. HA knows the bindings of mobiles that are away from home by virtue of Registration Forwarding (see Section 3.1.3 later).
Reference: [Per96b] <author> C. Perkins. </author> <title> IP Mobility Support. </title> <booktitle> RFC 2002, </booktitle> <month> October </month> <year> 1996. </year>
Reference-contexts: However, current Internet routing protocols (IP, OSI, etc.) require the network address to change when a host moves to a new location. This is inconvenient for laptops and other mobile stations. The Mobile IP Protocol (MIP) <ref> [Per96b] </ref> handles this problem using Mobility Agents. Mobility agents keep track of mobile hosts and are responsible for routing packets to them. Agents, however, use static IP [Pos81] for routing their packets. <p> Mobile IP is simple in the sense that it uses the existing mechanisms of IP Encapsulation [Sim95, Per96a, Per96c], ICMP messages [Dee91] and ARP [Plu82]. Mobile IP uses static IP routing, but leaves the latter completely unaffected. Overview of Mobile IP: In Mobile IP <ref> [Per96b] </ref>, a source S sending a packet to a mobile M sends the packet to a fixed IP address for M . Because of the way IP routing works, this packet is routed to the "home" subnet on which M resides when it is not mobile. <p> Our FT protocol is completely compliant with the current MIP specifications <ref> [Per96b] </ref>. Section 2.1 describes our design goals in detail. Section 2 discusses our design approach; it describes our goals, how we deal with agent failure and recovery, and how we synchronize bindings between agent peers. Section 3 describes our protocol in detail. <p> Finally, an agent uses TCP [Ste94, WS94] to obtain its bindings when it comes up after a crash (see Section 2 for details). Gratuitous ARP is used by an agent to takeover from its failed peer. Our design is also compliant with the current specifications of mobile IP <ref> [Per96b] </ref>. Efficiency: We tried to keep the extra messages in our protocol to a minimum. Our design does not increase Internet traffic (e.g., it leaves unchanged the registration messages sent between the mobile and its current home agent). Mobility bindings are distributed and obtained locally over the LAN. <p> If mobiles are configured with home agents, we can guarantee static load-splitting by configuring the mobiles with different home agent addresses. If mobiles use dynamic home agent address resolution as described in <ref> [Per96b] </ref>, they can randomly choose one from among the different replies they receive from the multiple home agents. 2.3. Redundant Foreign Agents In mobile IP today, foreign agents are not as critical as home agents. If a mobile uses co-located care-of address, foreign agents are not required at all. <p> Redundant Foreign Agents In mobile IP today, foreign agents are not as critical as home agents. If a mobile uses co-located care-of address, foreign agents are not required at all. If mobiles use foreign agent care-of address, we need redundancy to take care of failures. Current mobile IP specifications <ref> [Per96b] </ref> allow multiple foreign agents on a network. According to RFC 2002, a mobile detects movement when it no longer receives advertisements from the agent it is registered to. In such a case, it solicits services from any other agent possible and attempts to register through it. <p> We believe these disadvantages are minor and are outweighed by the simplicity of the registration forwarding scheme. 3.3. Mobile Host Considerations We have tried to change the protocol at the mobile host as little as possible. The only change we made from RFC 2002 <ref> [Per96b] </ref> concerns how the mobile host does move detection, and determines if it has returned home. As stated earlier (Section 2.2), a mobility agent advertises its peers' addresses if it is substituting for them. However, the first address in an Agent Advertisement message (Figure 8) is the agent's own address. <p> If at least one of them is the address of the agent it is registered with, it decides that it has not moved, and it sends registration requests as usual. If it uses the second approach (described in <ref> [Per96b] </ref>), it should not detect any movement because the network prefix remains the same for both the foreign agents (they are on the same network). A mobile detects it is at home if one of the addresses in the agent advertisements is its home agent address.
Reference: [Per96c] <author> C. Perkins. </author> <title> Minimal Encapsulation with IP. </title> <booktitle> RFC 2004, </booktitle> <month> October </month> <year> 1996. </year>
Reference-contexts: Mobility agents keep track of mobile hosts and are responsible for routing packets to them. Agents, however, use static IP [Pos81] for routing their packets. Mobile IP is simple in the sense that it uses the existing mechanisms of IP Encapsulation <ref> [Sim95, Per96a, Per96c] </ref>, ICMP messages [Dee91] and ARP [Plu82]. Mobile IP uses static IP routing, but leaves the latter completely unaffected. Overview of Mobile IP: In Mobile IP [Per96b], a source S sending a packet to a mobile M sends the packet to a fixed IP address for M . <p> Simplicity and Compatibility: Our protocol adheres to the simple design philosophy of mobile IP. We continue to use existing mechanisms in mobile IP like IP Encapsulation <ref> [Sim95, Per96a, Per96c] </ref>, ICMP [Dee91], and ARP [Plu82]. We use the existing Registration Request and Reply messages to distribute mobility bindings among agent peers. Finally, an agent uses TCP [Ste94, WS94] to obtain its bindings when it comes up after a crash (see Section 2 for details).
Reference: [Plu82] <author> David C. Plummer. </author> <title> An Ethernet Address Resolution Protocol or- Converting Network Protocol Addresses to 48.bit Ethernet Address for Transmission on Ethernet Hardware . STD 37, </title> <type> RFC 826, </type> <month> November </month> <year> 1982. </year>
Reference-contexts: Mobility agents keep track of mobile hosts and are responsible for routing packets to them. Agents, however, use static IP [Pos81] for routing their packets. Mobile IP is simple in the sense that it uses the existing mechanisms of IP Encapsulation [Sim95, Per96a, Per96c], ICMP messages [Dee91] and ARP <ref> [Plu82] </ref>. Mobile IP uses static IP routing, but leaves the latter completely unaffected. Overview of Mobile IP: In Mobile IP [Per96b], a source S sending a packet to a mobile M sends the packet to a fixed IP address for M . <p> Simplicity and Compatibility: Our protocol adheres to the simple design philosophy of mobile IP. We continue to use existing mechanisms in mobile IP like IP Encapsulation [Sim95, Per96a, Per96c], ICMP [Dee91], and ARP <ref> [Plu82] </ref>. We use the existing Registration Request and Reply messages to distribute mobility bindings among agent peers. Finally, an agent uses TCP [Ste94, WS94] to obtain its bindings when it comes up after a crash (see Section 2 for details).
Reference: [PMJ94] <author> Charles Perkins, Andrew Myles, and David B. Johnson. </author> <title> The Internet Mobile Host Protocol. </title> <booktitle> In Proceedings of the 2nd International Conference on Universal Wireless Access, </booktitle> <pages> pages 197-202, </pages> <month> April </month> <year> 1994. </year>
Reference-contexts: Besides the reliability problems we have alluded to, too much load on a single agent could be detrimental to MIP performance. Thus, mobility agents could be possible performance bottlenecks for mobile IP in the near future. Related Work: The MIP literature <ref> [Joh91, TCT92, MS93, PMJ94, Joh94] </ref>, so far, pays very little mention to fault-tolerance. [MS93] compares four IP based Mobile Host Protocols; according to this paper, all existing schemes require mobility agent duplication to handle component loss.
Reference: [Pos80] <author> J. Postel. </author> <title> User Datagram Protocol. </title> <type> STD 6, RFC 768, </type> <month> August </month> <year> 1980. </year>
Reference-contexts: However, we did not implement local recovery in our current implementation. The Registration Forward and Acknowledgement messages use UDP (the User Datagram Protocol <ref> [Pos80] </ref>) just like the normal Registration Request and Reply messages in MIP. Reliable Transfer of Accumulated Bindings using TCP:.
Reference: [Pos81] <author> J. Postel. </author> <title> Internet Protocol. </title> <journal> STD5, </journal> <volume> RFC 791, </volume> <month> September </month> <year> 1981. </year>
Reference-contexts: This is inconvenient for laptops and other mobile stations. The Mobile IP Protocol (MIP) [Per96b] handles this problem using Mobility Agents. Mobility agents keep track of mobile hosts and are responsible for routing packets to them. Agents, however, use static IP <ref> [Pos81] </ref> for routing their packets. Mobile IP is simple in the sense that it uses the existing mechanisms of IP Encapsulation [Sim95, Per96a, Per96c], ICMP messages [Dee91] and ARP [Plu82]. Mobile IP uses static IP routing, but leaves the latter completely unaffected.
Reference: [Rek95] <editor> Yakov Rekhter. Inter-Domain Routing: EGP, BGP, and IDRP. </editor> <booktitle> Routing in Communications Networks by Martha Steenstrup, </booktitle> <pages> pages 99-133, </pages> <address> chapter 4, </address> <publisher> Prentice Hall, </publisher> <year> 1995. </year>
Reference-contexts: Notice that there is no hidden recursion here because TCP works over fixed IP routing. A popular inter-domain routing protocol, BGP [RL95], uses the same idea of using TCP for reliable exchange of routing information <ref> [Rek95] </ref>. Alternatively, we can could also use a low level protocol like BootP [CG85] to do this transfer. However, adhering to our goal of Simplicity, we decided to use TCP instead.
Reference: [Riv92] <author> R. Rivest. </author> <title> The MD5 Message-Digest Algorithm. </title> <type> RFC 1321, </type> <month> April </month> <year> 1992. </year>
Reference-contexts: When a home agent crashed, its peer took over for it. See the screen log in Figure 17. Our implementation requires a configuration file at the home agent listing the mobile hosts allowed and their authentication information. The implementation we obtained uses the MD5 <ref> [Riv92] </ref> authentication scheme; we decided to use the same scheme. For our FT enhancements to the implementation, the configuration files at the peer home agents have to be the same; peers share the same mobile home agent authentication. <p> The peer authentication could follow the mobile - home agent authentication present in Registration Request Forward and Acknowledgement messages (Figure 11 and 12). The Mobility Binding Request and Reply (Figure 9) should also contain the peer authentication. The default authentication method could be the MD5 <ref> [Riv92] </ref> authentication scheme used between the mobile and its home agent.
Reference: [RL95] <author> Y. Rekhter and T. Li. </author> <title> A Border Gateway Protocol 4 (BGP-4). </title> <type> RFC 1771, </type> <month> March </month> <year> 1995. </year>
Reference-contexts: The use of TCP is advantageous because the amount of data might be huge, and TCP takes care of most reliability problems. Notice that there is no hidden recursion here because TCP works over fixed IP routing. A popular inter-domain routing protocol, BGP <ref> [RL95] </ref>, uses the same idea of using TCP for reliable exchange of routing information [Rek95]. Alternatively, we can could also use a low level protocol like BootP [CG85] to do this transfer. However, adhering to our goal of Simplicity, we decided to use TCP instead.
Reference: [Sim95] <author> W. Simpson. </author> <title> IP in IP Tunneling. </title> <type> RFC 1853, </type> <month> October </month> <year> 1995. </year>
Reference-contexts: Mobility agents keep track of mobile hosts and are responsible for routing packets to them. Agents, however, use static IP [Pos81] for routing their packets. Mobile IP is simple in the sense that it uses the existing mechanisms of IP Encapsulation <ref> [Sim95, Per96a, Per96c] </ref>, ICMP messages [Dee91] and ARP [Plu82]. Mobile IP uses static IP routing, but leaves the latter completely unaffected. Overview of Mobile IP: In Mobile IP [Per96b], a source S sending a packet to a mobile M sends the packet to a fixed IP address for M . <p> Simplicity and Compatibility: Our protocol adheres to the simple design philosophy of mobile IP. We continue to use existing mechanisms in mobile IP like IP Encapsulation <ref> [Sim95, Per96a, Per96c] </ref>, ICMP [Dee91], and ARP [Plu82]. We use the existing Registration Request and Reply messages to distribute mobility bindings among agent peers. Finally, an agent uses TCP [Ste94, WS94] to obtain its bindings when it comes up after a crash (see Section 2 for details). <p> HA also performs a similar gratuitous ARP for all the mobiles which were registered with P and are away from home. It also creates IP tunnels <ref> [Sim95, Per96a] </ref> to their care-of addresses. HA knows the bindings of mobiles that are away from home by virtue of Registration Forwarding (see Section 3.1.3 later).
Reference: [Ste94] <author> W. Richard Stevens. </author> <title> TCP/IP Illustrated, Volume 1, The Protocols. </title> <publisher> Addison-Wesley Professional Computing Series, </publisher> <year> 1994. </year>
Reference-contexts: We continue to use existing mechanisms in mobile IP like IP Encapsulation [Sim95, Per96a, Per96c], ICMP [Dee91], and ARP [Plu82]. We use the existing Registration Request and Reply messages to distribute mobility bindings among agent peers. Finally, an agent uses TCP <ref> [Ste94, WS94] </ref> to obtain its bindings when it comes up after a crash (see Section 2 for details). Gratuitous ARP is used by an agent to takeover from its failed peer. Our design is also compliant with the current specifications of mobile IP [Per96b].
Reference: [TCT92] <author> F. Terroka, Kim Claffy, and M. Tokoro. </author> <title> Design, Implementation, and Evaluation of Virtual Internet Protocol. </title> <booktitle> In Proceedings of the 12th International Conference on Distributed Computing Systems, </booktitle> <pages> pages 170-177, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: Besides the reliability problems we have alluded to, too much load on a single agent could be detrimental to MIP performance. Thus, mobility agents could be possible performance bottlenecks for mobile IP in the near future. Related Work: The MIP literature <ref> [Joh91, TCT92, MS93, PMJ94, Joh94] </ref>, so far, pays very little mention to fault-tolerance. [MS93] compares four IP based Mobile Host Protocols; according to this paper, all existing schemes require mobility agent duplication to handle component loss. <p> Related Work: The MIP literature [Joh91, TCT92, MS93, PMJ94, Joh94], so far, pays very little mention to fault-tolerance. [MS93] compares four IP based Mobile Host Protocols; according to this paper, all existing schemes require mobility agent duplication to handle component loss. The Virtual Internet Protocol <ref> [TCT92] </ref> paper does mention handling failures using duplication of the Address Mapping Table (AMT) entries at multiple gateways. However, it still requires duplication of the home gateway; the paper [TCT92] does not describe at all how this duplication can be achieved. <p> The Virtual Internet Protocol <ref> [TCT92] </ref> paper does mention handling failures using duplication of the Address Mapping Table (AMT) entries at multiple gateways. However, it still requires duplication of the home gateway; the paper [TCT92] does not describe at all how this duplication can be achieved. After beginning this project, we learned of work being done by the Secure Mobile Networking project at Portland State University. The primary goal of this project has been to integrate security and network layer mobility into real systems.
Reference: [WS94] <author> Gary R. Wright and W. Richard Stevens. </author> <title> TCP/IP Illustrated, </title> <booktitle> Volume 2, The Implementation. Addison-Wesley Professional Computing Series, </booktitle> <year> 1994. </year> <month> 21 </month>
Reference-contexts: We continue to use existing mechanisms in mobile IP like IP Encapsulation [Sim95, Per96a, Per96c], ICMP [Dee91], and ARP [Plu82]. We use the existing Registration Request and Reply messages to distribute mobility bindings among agent peers. Finally, an agent uses TCP <ref> [Ste94, WS94] </ref> to obtain its bindings when it comes up after a crash (see Section 2 for details). Gratuitous ARP is used by an agent to takeover from its failed peer. Our design is also compliant with the current specifications of mobile IP [Per96b].
References-found: 23

