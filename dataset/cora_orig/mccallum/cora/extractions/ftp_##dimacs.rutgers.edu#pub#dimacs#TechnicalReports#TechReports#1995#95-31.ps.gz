URL: ftp://dimacs.rutgers.edu/pub/dimacs/TechnicalReports/TechReports/1995/95-31.ps.gz
Refering-URL: http://dimacs.rutgers.edu/TechnicalReports/1995.html
Root-URL: http://www.cs.rutgers.edu
Title: Improved construction of negation-limited circuits  
Author: by Robert Beals ; ; 
Note: 3 Research supported by: NSF Mathematical Sciences Posdoctoral Fellowship, Institute for Advanced Study, and the Sloan Foundation DIMACS is a cooperative project of Rutgers University, Princeton University, AT&T Bell Laboratories and Bellcore. DIMACS is an NSF Science and Technology Center, funded under contract STC-91-19999; and also receives support from the New Jersey Commission on Science and Technology.  
Address: Olden Lane Princeton, New Jersey, 08540  
Affiliation: 2 School of Mathematics Institute For Advanced Study  
Abstract: DIMACS Technical Report 95-31 August 1995 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Ajtai, J. Koml os, and E. Szemer edi, </author> <title> An O(n log n) sorting network, </title> <booktitle> in Proceedings of the 15th ACM Symposium on the Theory of Computing, </booktitle> <year> 1983, </year> <pages> pp. 1-9. </pages>
Reference-contexts: Sorting networks play a key role in Fischer's construction (and in all subsequent constructions). Using the sorting network of Ajtai, Komlos, and Szemeredi <ref> [1] </ref> (cf. [9]) in Fischer's construction reduces the size to O (n 2 log n) and the depth to O (log n). <p> For any n-tuple x 1 ; : : : ; x n of inputs from U , the n outputs y 1 ; : : : ; y n of the sorting network are a permutation of the x i and are in decreasing order. Ajtai, Komlos, and Szemeredi <ref> [1] </ref> (cf. [9]) have constructed sorting networks using O (n log n) comparators, organized in O (log n) levels of bn=2c comparators each. Note that if the set U is f0; 1g, then a comparator can be constructed without negations. <p> Proof: We describe the circuit. As in Fischer [7] and Tanaka-Nishino [13], the input variables x 1 ; : : : ; x n are the inputs of a sorting network with ` levels of O (n) gates each. By Ajtai-Komlos-Szemeredi <ref> [1] </ref>, we may assume ` = O (log n). <p> In fact, all known constructions of monotone (k; n)-inverters may be seen as negation-limited inverters with the negation gates replaced by constants. This modification applied to Fischer's circuit for I n (using the AKS sorting network <ref> [1] </ref>) yields Berkowitz's (k; n)-inverter. There is no previously published negation-limited inverter corresponding to Valiant's (k; n)- inverter, so we describe one here. First we give a sketch of Valiant's construction.
Reference: [2] <author> S. B. Akers, Jr., </author> <title> On maximum inversion with minimum inverters, </title> <journal> IEEE Trans. Comput., </journal> <volume> 17 (1968), </volume> <pages> pp. 134-135. </pages>
Reference-contexts: Akers <ref> [2] </ref> gives the first explicit construction of a negation-limited inverter. His circuit uses b (n) negation gates and positive weight threshold gates, and has size O (n) and depth O (log n). For the remainder of this paper, we restrict our attention to circuits of AND, OR, and NEGATION gates.
Reference: [3] <author> N. Alon and R. Boppana, </author> <title> The monotone circuit complexity of boolean functions, </title> <journal> Combinatorica, </journal> <volume> 7 (1987), </volume> <pages> pp. 1-22. </pages>
Reference-contexts: 1 Introduction 1.1 Background The theory of monotone boolean circuit complexity has met with considerable success <ref> [11, 3, 14, 6, 10] </ref>. Good lower bounds for both size and depth of monotone circuits (i.e., circuits without negation gates) computing many explicit functions are now known. However, the theory of general boolean circuits, with negation gates, is much less well understood.
Reference: [4] <author> K. Batcher, </author> <title> Sorting networks and their applications, </title> <booktitle> in AFIPS Spring Joint Computing Conference, </booktitle> <year> 1968, </year> <pages> pp. 307-314. </pages>
Reference-contexts: A merging network takes as inputs two sorted lists u and v, and outputs the list w = merge (u; v) obtained by sorting the concatenated list uv. Batcher <ref> [4] </ref> shows that two m elements lists can be merged by a network of O (m log m) comparators.
Reference: [5] <author> S. J. Berkowitz, </author> <title> On some relationships between monotone and non-monotone circuit complexity, </title> <type> tech. rep., </type> <institution> Computer Science Department, University of Toronto, </institution> <year> 1982. </year>
Reference-contexts: Monotone functions are exactly those computed by monotone circuits. Observe that the (k; n)-inverter is a system of monotone functions. Berkowitz <ref> [5] </ref> shows that the monotone complexity of the (k; n) inverter is polynomial, with a construction of size O (n 2 log n) and depth O (log n). Valiant [15] constructs monotone (k; n)-inverters of size O (n log 2 n) and depth O (log 2 n). <p> As each level of the circuit has linear size, the total number of gates used is O (n log n). The only negation gates used are the b (n) negation gates used by M n , as desired. - 6 - 4 Monotone (k; n)-inverters Berkowitz <ref> [5] </ref> introduces the notion of a slice function. <p> The proof for the case that fewer than k of the x j are one is analogous. Berkowitz <ref> [5] </ref> constructs monotone (k; n)-inverters of size O (n 2 log n) and depth O (log n). Valiant [15] gives monotone circuits of size O (n log 2 n) and depth O (log 2 n) for the (k; n)- inverter (see also Wegener [16, 17]).
Reference: [6] <author> R. B. Boppana and M. Sipser, </author> <title> The complexity of finite functions, </title> <booktitle> in Handbook of Theoretical Computer Science, </booktitle> <volume> Vol. </volume> <editor> A, J. van Leeuwen, ed., </editor> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1990, </year> <pages> pp. 757-804. </pages>
Reference-contexts: 1 Introduction 1.1 Background The theory of monotone boolean circuit complexity has met with considerable success <ref> [11, 3, 14, 6, 10] </ref>. Good lower bounds for both size and depth of monotone circuits (i.e., circuits without negation gates) computing many explicit functions are now known. However, the theory of general boolean circuits, with negation gates, is much less well understood. <p> of size O (n log n) and depth O (log n), and we show that there is a close relationship between C 0 (I k n ) and C b (n) (I n ). (For more background on monotone circuits, we refer to Section 4 of Boppana and Sipser's article <ref> [6] </ref>.) Markov [8] constructs inverters using monotone functions and b (n) negations, but he does not consider the complexity of the monotone functions that he uses. Akers [2] gives the first explicit construction of a negation-limited inverter.
Reference: [7] <author> M. J. Fischer, </author> <title> The complexity of negation-limited networks|a brief survey, </title> <booktitle> in Automata theory and formal languages: 2nd GI conference, vol. 33 of Lecture Notes in Computer Science, </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1975, </year> <pages> pp. 71-82. </pages>
Reference-contexts: Fischer <ref> [7] </ref> shows that restricting the number of negations in a circuit to b (n) entails only a polynomial blowup in circuit size. This is in sharp contrast to the situation for monotone circuits: E. <p> His circuit uses b (n) negation gates and positive weight threshold gates, and has size O (n) and depth O (log n). For the remainder of this paper, we restrict our attention to circuits of AND, OR, and NEGATION gates. Fischer <ref> [7] </ref> gives such a circuit for I n with size O (n 2 log 2 n) and depth O (log 2 n), using only b (n) negation gates. Sorting networks play a key role in Fischer's construction (and in all subsequent constructions). <p> In Section 4 we show the relationship between negation-limited inverters and monotone (k; n)-inverters. Finally, in Section 5 we conclude with a brief discussion of open problems. 2 The Fischer and Tanaka-Nishino constructions We review briefly the circuits of Fischer <ref> [7] </ref> and Tanaka-Nishino [13]. These circuits have several elements in common with each other, and with ours as well. The most important of these is a sorting network. A comparator is a circuit element with two inputs and two outputs. The inputs are taken from some ordered set U . <p> Both Fischer and Tanaka-Nishino first sort the n input bits x 1 ; : : : ; x n . The outputs y 1 ; : : : ; y n of the sorting network are fed into a subcircuit M n (due to Fischer <ref> [7] </ref>) with the following properties: 1. M n has n binary inputs y 1 ; : : : ; y n and n outputs z 1 ; : : : ; z n . 2. <p> We present a new approach to the third phase, which achieves considerable savings in complexity over previous constructions by means of a novel application of the Ajtai-Komlos-Szemeredi result. Before going into the details of the circuit, we describe briefly the intuition. The differences between the three constructions ( <ref> [7, 13] </ref> and ours) seem to stem from how one thinks of the outputs of the M n subcircuit. Of course, in all three constructions, the outputs of M n are computing exactly the same system of n functions. Nevertheless, these outputs are treated completely differently by the three approaches. <p> Of course, in all three constructions, the outputs of M n are computing exactly the same system of n functions. Nevertheless, these outputs are treated completely differently by the three approaches. In Fischer's original negation-limited inverter <ref> [7] </ref>, the inputs and outputs of M n are thought of as the threshold functions (of x 1 ; : : : ; x n ) and their negations, respectively. <p> In fact, I n may be computed by negation-limited circuits of size O (n log n) and depth O (log n). Proof: We describe the circuit. As in Fischer <ref> [7] </ref> and Tanaka-Nishino [13], the input variables x 1 ; : : : ; x n are the inputs of a sorting network with ` levels of O (n) gates each. By Ajtai-Komlos-Szemeredi [1], we may assume ` = O (log n). <p> of Theorem 4.5 is known to hold. 5 Concluding remarks and open problems Current techniques for constructing negation-limited inverters seem to have reached their limit: as long as sorting is used as a preprocessing phase, size at least cn log n (for some constant c) will be required (see Fischer <ref> [7] </ref> for a survey, including monotone lower bounds for several sorting-like problems). From the point of view of obtaining lower bounds, Theorem 4.5 is encouraging. A superlinear lower bound on the size of monotone (k; n)-inverters would immediately give a superlinear lower bound on the size of a negation-limited inverter.
Reference: [8] <author> A. A. </author> <title> Markov, On the inversion complexity of a system of functions, </title> <journal> J. Assoc. Com-put. Mach., </journal> <volume> 5 (1958), </volume> <pages> pp. 331-334. </pages>
Reference-contexts: However, the effect of negation gates on circuit complexity remains to a large extent a mystery. This motivates the study of negation-limited circuit complexity: what is the effect on circuit complexity of restricting the number of negations available? Markov <ref> [8] </ref> gives an explicit formula (see below) for the maximum number b (n) of negation gates required to compute any system of boolean functions of n variables, without regard to circuit complexity. <p> For n &gt; 0 let b (n) denote dlog (n + 1)e, the number of bits in the binary representation of n (all logarithms in this paper are base 2). Markov <ref> [8] </ref> has shown that b (n) negation gates suffice to compute any system f 1 ; : : : ; f m of functions, and that b (n) negation gates are indeed necessary for the inverter. Thus, C k (F ) is always defined for k b (n). <p> O (n log n) and depth O (log n), and we show that there is a close relationship between C 0 (I k n ) and C b (n) (I n ). (For more background on monotone circuits, we refer to Section 4 of Boppana and Sipser's article [6].) Markov <ref> [8] </ref> constructs inverters using monotone functions and b (n) negations, but he does not consider the complexity of the monotone functions that he uses. Akers [2] gives the first explicit construction of a negation-limited inverter.
Reference: [9] <author> N. J. Pippenger, </author> <title> Communication networks, </title> <booktitle> in Handbook of Theoretical Computer Science, </booktitle> <volume> Vol. </volume> <editor> A, J. van Leeuwen, ed., </editor> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1990, </year> <pages> pp. 805-833. </pages>
Reference-contexts: Sorting networks play a key role in Fischer's construction (and in all subsequent constructions). Using the sorting network of Ajtai, Komlos, and Szemeredi [1] (cf. <ref> [9] </ref>) in Fischer's construction reduces the size to O (n 2 log n) and the depth to O (log n). <p> Ajtai, Komlos, and Szemeredi [1] (cf. <ref> [9] </ref>) have constructed sorting networks using O (n log n) comparators, organized in O (log n) levels of bn=2c comparators each. Note that if the set U is f0; 1g, then a comparator can be constructed without negations.
Reference: [10] <author> R. Raz and A. Wigderson, </author> <title> Monotone circuits for matching require linear depth, </title> <journal> J. Assoc. Comput. Mach., </journal> <volume> 39 (1992), </volume> <pages> pp. 736-744. </pages>
Reference-contexts: 1 Introduction 1.1 Background The theory of monotone boolean circuit complexity has met with considerable success <ref> [11, 3, 14, 6, 10] </ref>. Good lower bounds for both size and depth of monotone circuits (i.e., circuits without negation gates) computing many explicit functions are now known. However, the theory of general boolean circuits, with negation gates, is much less well understood. <p> However, the theory of general boolean circuits, with negation gates, is much less well understood. Exponential gaps between monotone and general circuit complexity are known, both for circuit size [14] and circuit depth <ref> [10] </ref>. However, the effect of negation gates on circuit complexity remains to a large extent a mystery.
Reference: [11] <author> A. A. Razborov, </author> <title> Lower bounds on the complexity of some Boolean functions, </title> <journal> Soviet Mathematics Doklady, </journal> <volume> 31 (1985), </volume> <pages> pp. 354-357. </pages>
Reference-contexts: 1 Introduction 1.1 Background The theory of monotone boolean circuit complexity has met with considerable success <ref> [11, 3, 14, 6, 10] </ref>. Good lower bounds for both size and depth of monotone circuits (i.e., circuits without negation gates) computing many explicit functions are now known. However, the theory of general boolean circuits, with negation gates, is much less well understood.

Reference: [13] <author> K. Tanaka and T. Nishino, </author> <title> On the complexity of negation-limited boolean networks, </title> <booktitle> in Proceedings of the 26th ACM Symposium on the Theory of Computing, </booktitle> <year> 1994, </year> <pages> pp. 38-47. </pages>
Reference-contexts: In related work, Santha and Wilson [12] have studied the negation-limited complexity of constant depth circuits, obtaining both upper and lower bounds for the number of negation gates required by circuits of a given depth. Recently, Tanaka and Nishino <ref> [13] </ref> have found an alternative to Fischer's construction; they decrease the size of the circuits at the expense of increasing the depth. We further reduce the size, while simultaneously reducing the depth to that of Fischer. <p> Sorting networks play a key role in Fischer's construction (and in all subsequent constructions). Using the sorting network of Ajtai, Komlos, and Szemeredi [1] (cf. [9]) in Fischer's construction reduces the size to O (n 2 log n) and the depth to O (log n). Recently Tanaka and Nishino <ref> [13] </ref> have investigated the negation-limited complexity of the inverter, giving both an upper bound of O (n log 2 n) and a lower bound of 5n+3 log (n+1)6. <p> In Section 4 we show the relationship between negation-limited inverters and monotone (k; n)-inverters. Finally, in Section 5 we conclude with a brief discussion of open problems. 2 The Fischer and Tanaka-Nishino constructions We review briefly the circuits of Fischer [7] and Tanaka-Nishino <ref> [13] </ref>. These circuits have several elements in common with each other, and with ours as well. The most important of these is a sorting network. A comparator is a circuit element with two inputs and two outputs. The inputs are taken from some ordered set U . <p> We present a new approach to the third phase, which achieves considerable savings in complexity over previous constructions by means of a novel application of the Ajtai-Komlos-Szemeredi result. Before going into the details of the circuit, we describe briefly the intuition. The differences between the three constructions ( <ref> [7, 13] </ref> and ours) seem to stem from how one thinks of the outputs of the M n subcircuit. Of course, in all three constructions, the outputs of M n are computing exactly the same system of n functions. Nevertheless, these outputs are treated completely differently by the three approaches. <p> Fischer uses these bits to select the output of an appropriate subcircuit, according to the number k of ones in the input. There are n + 1 such subcircuits, one for each 0 k n. Tanaka and Nishino <ref> [13] </ref> avoid having to consider (n + 1) different cases in parallel by noticing that the x i , together with the outputs of M n , are a string of 2n bits containing exactly n ones (such a string can be inverted monotonically using Valiant's monotone (n; 2n)-inverter [15]). <p> In fact, I n may be computed by negation-limited circuits of size O (n log n) and depth O (log n). Proof: We describe the circuit. As in Fischer [7] and Tanaka-Nishino <ref> [13] </ref>, the input variables x 1 ; : : : ; x n are the inputs of a sorting network with ` levels of O (n) gates each. By Ajtai-Komlos-Szemeredi [1], we may assume ` = O (log n). <p> One might ask whether it is always possible to obtain a monotone (k; n)- inverter from a negation-limited inverter by replacing the negation gates with constants. We shall see (perhaps surprisingly) that something close to this is true. Before formalizing this, we need the following Lemma of Tanaka-Nishino (cf. <ref> [13, Lemma 4.2] </ref>): Lemma 4.4 (Tanaka-Nishino) Suppose n + 1 is a power of 2, and let f be the function computed by some negation gate of a negation-limited circuit for I n . <p> This is then given as input to the top half. (The circuit constructed in this way is about half the size of that of Tanaka and Nishino <ref> [13] </ref>, since we modify Valiant's (k; n) inverter instead of using Valiant's (n; 2n) inverter.) Therefore Valiant's techniques for constructing monotone (k; n)-inverters can also be used to construct negation-limited inverters.
Reference: [14] <author> E. Tardos, </author> <title> The gap between monotone and non-monotone circuit complexity is exponential, </title> <journal> Combinatorica, </journal> <volume> 8 (1988), </volume> <pages> pp. 141-142. </pages>
Reference-contexts: 1 Introduction 1.1 Background The theory of monotone boolean circuit complexity has met with considerable success <ref> [11, 3, 14, 6, 10] </ref>. Good lower bounds for both size and depth of monotone circuits (i.e., circuits without negation gates) computing many explicit functions are now known. However, the theory of general boolean circuits, with negation gates, is much less well understood. <p> However, the theory of general boolean circuits, with negation gates, is much less well understood. Exponential gaps between monotone and general circuit complexity are known, both for circuit size <ref> [14] </ref> and circuit depth [10]. However, the effect of negation gates on circuit complexity remains to a large extent a mystery. <p> Fischer [7] shows that restricting the number of negations in a circuit to b (n) entails only a polynomial blowup in circuit size. This is in sharp contrast to the situation for monotone circuits: E. Tardos <ref> [14] </ref> has shown that there is an exponential gap between the general complexity and the monotone complexity of some monotone functions.
Reference: [15] <author> L. G. Valiant, </author> <title> Negation is powerless for boolean slice functions, </title> <journal> SIAM J. Comput., </journal> <volume> 15 (1986), </volume> <pages> pp. 531-535. </pages>
Reference-contexts: Observe that the (k; n)-inverter is a system of monotone functions. Berkowitz [5] shows that the monotone complexity of the (k; n) inverter is polynomial, with a construction of size O (n 2 log n) and depth O (log n). Valiant <ref> [15] </ref> constructs monotone (k; n)-inverters of size O (n log 2 n) and depth O (log 2 n). <p> Fischer does this using O (n) sorting networks in parallel, resulting in a circuit of size O (n 2 log n) and depth O (log n) if the Ajtai-Komlos-Szemeredi sorting network is used. Tanaka and Nishino, on the other hand, use the monotone (n; 2n)-inverter of Valiant <ref> [15] </ref> which inverts 2n inputs provided that exactly n of them equal 1 (as is the case with x 1 ; : : : ; x n ; z 1 ; : : : ; z n ). <p> Nishino [13] avoid having to consider (n + 1) different cases in parallel by noticing that the x i , together with the outputs of M n , are a string of 2n bits containing exactly n ones (such a string can be inverted monotonically using Valiant's monotone (n; 2n)-inverter <ref> [15] </ref>). In their construction, the outputs of M n are thought of as balancing the inputs x 1 ; : : : ; x n . We take a different view. We view the outputs of M n as being a permutation of the negations of the x i . <p> The proof for the case that fewer than k of the x j are one is analogous. Berkowitz [5] constructs monotone (k; n)-inverters of size O (n 2 log n) and depth O (log n). Valiant <ref> [15] </ref> gives monotone circuits of size O (n log 2 n) and depth O (log 2 n) for the (k; n)- inverter (see also Wegener [16, 17]).
Reference: [16] <author> I. Wegener, </author> <title> On the complexity of slice functions, </title> <journal> Theoretical Comput. Sci., </journal> <volume> 38 (1985), </volume> <pages> pp. </pages> <month> 55-68. </month> <title> [17] , The complexity of boolean functions, </title> <publisher> John Wiley & Sons and B. G. Teubner, </publisher> <year> 1987. </year>
Reference-contexts: Berkowitz [5] constructs monotone (k; n)-inverters of size O (n 2 log n) and depth O (log n). Valiant [15] gives monotone circuits of size O (n log 2 n) and depth O (log 2 n) for the (k; n)- inverter (see also Wegener <ref> [16, 17] </ref>). Our techniques can be used to improve on Valiant's results by a factor of (log n) in size and depth: Theorem 4.3 The monotone complexity of the (k; n)-inverter is O (n log n).
References-found: 15

