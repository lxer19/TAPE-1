URL: http://www.sun.com/tech/projects/spring/papers/subcontract.ps
Refering-URL: http://www.cs.gatech.edu/computing/classes/cs6420_97_winter/reading.html
Root-URL: 
Title: Subcontract: A exible base for distributed programming  
Author: Graham Hamilton Michael L. Powell James G. Mitchell 
Address: 2550 Garcia Avenue Mountain View, CA 94043  
Affiliation: Sun Microsystems Laboratories, Inc.  
Abstract: A key problem in operating systems is permitting the orderly introduction of new properties and new implementation techniques. We describe a mechanism, subcontract, that within the context of an object-oriented distributed system permits application programmers control over fundamental object mechanisms. This allows programmers to define new object communication mechanisms without modifying the base system. We describe how new subcontracts can be introduced as alternative communication mechanisms in the place of existing subcontracts. W e also briefly describe some of the uses we have made of the subcontract mechanism to support caching, crash recovery, and replication. 
Abstract-found: 1
Intro-found: 1
Reference: [Acetta et al 1986] <author> M. Acceta, R. Baron, W . Bolosky, D. Golub, R. Rashid, A. Tevanian & M. Young. </author> <note> Mach: </note>
Reference-contexts: Objects in Spring client application object client application object server application The Spring kernel provides an objectoriented inter process communication mechanism called doors [Hamilton & Kou-giouris 1993], which are analogous to ports in Mach <ref> [Acetta et al 1986] </ref>, [Draves 1990]. A door is a communication endpoint, to which threads may execute cross address space calls. A domain that creates a door receives a door identifier, which it can pass to other domains, so that they can issue calls to the associated door .
References-found: 1

