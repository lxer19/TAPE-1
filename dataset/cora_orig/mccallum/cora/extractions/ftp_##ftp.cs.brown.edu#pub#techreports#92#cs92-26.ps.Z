URL: ftp://ftp.cs.brown.edu/pub/techreports/92/cs92-26.ps.Z
Refering-URL: http://www.cs.brown.edu/publications/techreports/reports/CS-92-26.html
Root-URL: http://www.cs.brown.edu/
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Berger, Bonnie and Rompel, John, </author> <title> Simulating (log c n)-wise Independence in NC, </title> <booktitle> Proceedings of the Thirtieth Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1989, </year> <pages> 1-7. </pages>
Reference-contexts: The constants s p , t p and R p represent the source node, sink node and requirement, respectively, of package p 2 P . 28 For all p and e, let ^ X p;e 2 <ref> [0; 1] </ref> be a variable describing the fractional flow from package p assigned to edge e (i.e., if package p could be divided into arbitrarily small pieces, the fraction that would be assigned to any given edge in the flow graph). <p> Although the variables in the performance criterion are not independent, their dependency graph has a particular structure that may be exploited. An open question involves how to exploit this structure in the analyses. Promising research along these lines includes the work of Berger and Rompel <ref> [1] </ref> and Spencer [11]. 46 9 Conclusion This paper provides insight into the structure of restricted transportation problems and their solution through approximation algorithms. By exploring the greyhound problem in detail we develop intuition about the difficulties involved in solving problems within the transportation domain.
Reference: [2] <author> Bixby, R., Gregory, J., Lustig, I., Marsten, R., and Shanno, D., </author> <title> Very Large-Scale Linear Programming: A Case Study in Combining Interior Point and Simplex Methods, </title> <type> Technical Report 34-91, </type> <institution> Rutcor Research Report, </institution> <address> New Brunswick, NJ, </address> <month> June </month> <year> 1991. </year>
Reference-contexts: This work introduces the concept of randomized rounding in which high-probability approximations are obtained for integer problems by first solving a relaxed linear program and then using the resulting real-number values to determine integer values for the variables. (See <ref> [2] </ref> for recent results in using linear programming for solving complex transportation problems). 5 Formulating a Multicommodity Flow Problem from an Instance of the Greyhound Problem by Inducing a Flow Graph In [5], Even, Itai and Shamir show that the simple directed two-commodity integral flow problem is NP-complete.
Reference: [3] <author> Cook, S. A., </author> <title> The complexity of theorem-proving procedures, </title> <booktitle> Proceedings of the 3rd Annual ACM Symposium on Theory of Computing, </booktitle> <address> New York, </address> <year> 1971, </year> <pages> 151-158. 47 </pages>
Reference-contexts: QUESTION Is there a satisfying truth assignment for C? 3SAT was shown to be NP-complete by Cook <ref> [3] </ref> as a transformation from Satisfiability. 11 Theorem 1 Greyhound Feasibility is NP-complete. Proof (Sketch): Our proof sketch reduces 3SAT to the greyhound feasibility problem.
Reference: [4] <author> Dean, Thomas and Greenwald, Lloyd, </author> <title> A Formal Description of the Transportation Problem, </title> <type> Technical Report CS-92-14, </type> <institution> Brown University Department of Computer Science, Providence, RI, </institution> <month> March </month> <year> 1992. </year>
Reference-contexts: The first stage of this two stage process can be solved by algorithms such as those designed for the dial-a-ride problem <ref> [4, 10] </ref>. The solution resulting from this first process is comprised of vehicles with fixed schedules and possibly unused capacity. <p> A full presentation of the general transportation problem, including both static and dynamic entities, is given in <ref> [4] </ref>. In this section, we present a specialized version of the static transportation problem abstracted from the more general presentation. The static portion of the transportation problem concerns the spatial layout of locations, capabilities of transportation assets and requirements for shipping packages.
Reference: [5] <author> Even, S., Itai, A., and Shamir, A., </author> <title> On the Complexity of Timetable and Multi-Commodity Flow Problems, </title> <journal> SIAM J. Comput., </journal> <month> 5(4) </month> <year> (1976) </year> <month> 691-703. </month>
Reference-contexts: QUESTION Is there a satisfying truth assignment for C? 3SAT was shown to be NP-complete by Cook [3] as a transformation from Satisfiability. 11 Theorem 1 Greyhound Feasibility is NP-complete. Proof (Sketch): Our proof sketch reduces 3SAT to the greyhound feasibility problem. In <ref> [5] </ref>, Satisfiability is reduced to a restricted version of multicommodity flow by creating a network in which, for each variable, there are two possible paths from source to sink, one corresponding to the positive truth-value for the variable and the other corresponding to its negation. <p> relaxed linear program and then using the resulting real-number values to determine integer values for the variables. (See [2] for recent results in using linear programming for solving complex transportation problems). 5 Formulating a Multicommodity Flow Problem from an Instance of the Greyhound Problem by Inducing a Flow Graph In <ref> [5] </ref>, Even, Itai and Shamir show that the simple directed two-commodity integral flow problem is NP-complete.
Reference: [6] <author> Garey, Michael R. and Johnson, David S., </author> <title> Computers and Intractibility: A Guide to the Theory of NP-Completeness, </title> <editor> (W. H. </editor> <publisher> Freeman and Company, </publisher> <address> New York, </address> <year> 1979). </year>
Reference-contexts: snk p g is the time at which package p is delivered at its sink? It is clear that the NP-completeness of the greyhound feasibility problem implies the NP-completeness of the greyhound optimization problem and the NP-hardness of the general transportation problem. 3SAT is described by the following decision problem <ref> [6] </ref>: INSTANCE Set U of variables, collection C of clauses over U such that each clause c 2 C has jcj = 3. <p> The problem is then to produce m flow functions such that 23 the combined flows do not violate the constraints generalized from the two-commodity case. The integral version is NP-complete <ref> [6] </ref>, although the fractional version of the problem is solvable by linear programming in polynomial time. The multicommodity flow problem has been well-studied and there are several approximation algorithms for its solution. <p> Convert the path-based relaxed solution to an integer solution using randomized rounding. Finally, we discuss the provable feasibility and expected performance guarantees provided by the randomized rounding technique. 6.1 Linear Programming Formulation Phase Although integral multicommodity flow is NP-complete, fractional multicommodity flow is polynomially equivalent to linear programming <ref> [6] </ref>. Linear programming is solvable in polynomial time [7], therefore, fractional multicommodity flow is solvable in polynomial time. The first phase of the randomized rounding procedure is to solve the linear program relaxation of the multicommodity flow version of the greyhound problem.
Reference: [7] <author> Karmarkar, N., </author> <title> A new polynomial-time algorithm for linear programming, </title> <address> Combina-torica, </address> <month> 4 </month> <year> (1984) </year> <month> 373-396. </month>
Reference-contexts: Finally, we discuss the provable feasibility and expected performance guarantees provided by the randomized rounding technique. 6.1 Linear Programming Formulation Phase Although integral multicommodity flow is NP-complete, fractional multicommodity flow is polynomially equivalent to linear programming [6]. Linear programming is solvable in polynomial time <ref> [7] </ref>, therefore, fractional multicommodity flow is solvable in polynomial time. The first phase of the randomized rounding procedure is to solve the linear program relaxation of the multicommodity flow version of the greyhound problem. This solution serves as a basis for subsequent phases.
Reference: [8] <author> Raghavan, Prabhakar, </author> <title> Probabilistic Construction of Deterministic Algprithms: Approximating Packing Integer Programs, </title> <journal> Computer and Systems Sciences, </journal> <month> 37 </month> <year> (1988) </year> <month> 130-143. </month>
Reference-contexts: This result extends to the static transportation problem and the general transportation problem and also provides motivation for exploring approximation algorithms to solve the greyhound problem. The approximation algorithms we consider are variants of the randomized rounding technique of Raghavan and Thompson <ref> [9, 8] </ref>. Since this technique has been applied to multicommodity flow problems, in Section 5 we provide a polynomial re 2 duction from the greyhound problem to the multicommodity flow problem. By doing so we can more easily apply the randomized rounding techniques to the greyhound problem. <p> While the integral multicommodity flow problem is NP-complete, there are existing polynomial approximation algorithms providing provable performance bounds. One such method is the randomized rounding technique of Raghavan and Thompson <ref> [9, 8] </ref>. In this section, we describe the randomized rounding technique and apply it to the greyhound problem. We also discuss the performance guarantees that this method provides. However, this method is not without its limitations. <p> In particular, we relate the value of the integral solution to the optimal fractional solution. In order explore the feasibility of the integral solution (i.e., capacity constraints are not violated), given a feasible fractional solution, we introduce the general analysis technique of Raghavan and Thompson <ref> [9, 8] </ref>. In summary, their technique employs a Chernoff-type bound to bound how far the flow assigned to each edge (load) can exceed the edge capacity, for any edge, in the integral solution. <p> Let X 1 ; X 2 ; . . . ; X r be independent Bernoulli trials with E [X j ] = p j . Look at the random variable = P r Theorem 2 <ref> [8] </ref> Let ffi &gt; 0, and m = E [] = P r j=1 a j p j &gt; 0. <p> The right hand side of Theorem 2 can be a little difficult to deal with. Especially when trying to determine questions such as "how large need ffi be for Pr [ &gt; (1 + ffi)m] to be less than x?" For a desired probability bound, Raghavan <ref> [8] </ref> provides a technique for estimating the deviation ffi to use in Theorem 2. Namely, denote Pr [ &gt; (1 + ffi)m] by B (m; ffi). <p> For the greyhound problem, this is an important limitation. Luckily, Raghavan <ref> [8] </ref> provides a deterministic method for guaranteeing that the integer solution will not exceed the fractional solution by more than the guaranteed bound. 43 This method can be outlined as follows. Let n be the number of edge constraints (edges). <p> In other words, the solutions do not guarantee that no load will exceed the capacity of its edge. Raghavan and Thompson <ref> [8, 9] </ref> provide a solution for this based on scaling. The technique involves finding a scaling factor v 2 (0; 1) such that B (vk; 1v v ) &lt; 1=n, where k is the minimum edge capacity and n is the number of edges.
Reference: [9] <author> Raghavan, Prabhakar and Thompson, Clark, </author> <title> Randomized Rounding: A Technique for Provably Good Algorithms and Algorithmic Proofs, </title> <journal> Combinatorica, </journal> <month> 7(4) </month> <year> (1987) </year> <month> 365-374. </month>
Reference-contexts: This result extends to the static transportation problem and the general transportation problem and also provides motivation for exploring approximation algorithms to solve the greyhound problem. The approximation algorithms we consider are variants of the randomized rounding technique of Raghavan and Thompson <ref> [9, 8] </ref>. Since this technique has been applied to multicommodity flow problems, in Section 5 we provide a polynomial re 2 duction from the greyhound problem to the multicommodity flow problem. By doing so we can more easily apply the randomized rounding techniques to the greyhound problem. <p> The approximation algorithms that we construct are based on randomization techniques for flow and other related problems developed by Raghavan and Thompson <ref> [9] </ref>. <p> While the integral multicommodity flow problem is NP-complete, there are existing polynomial approximation algorithms providing provable performance bounds. One such method is the randomized rounding technique of Raghavan and Thompson <ref> [9, 8] </ref>. In this section, we describe the randomized rounding technique and apply it to the greyhound problem. We also discuss the performance guarantees that this method provides. However, this method is not without its limitations. <p> Given this interpretation, we notice that the path h (l A;12:00 ; l C;12:09 ); (l C;12:09 ; l B;12:18 ); (l B;12:18 ; l B )i carries 0:2 of the package from source to sink. The path-stripping procedure of Raghavan and Thompson <ref> [9] </ref> explicitly constructs this interpretation by assigning a flow value to each possible path (with nonzero flow) of each package in the flow graph. <p> In particular, we relate the value of the integral solution to the optimal fractional solution. In order explore the feasibility of the integral solution (i.e., capacity constraints are not violated), given a feasible fractional solution, we introduce the general analysis technique of Raghavan and Thompson <ref> [9, 8] </ref>. In summary, their technique employs a Chernoff-type bound to bound how far the flow assigned to each edge (load) can exceed the edge capacity, for any edge, in the integral solution. <p> In other words, the solutions do not guarantee that no load will exceed the capacity of its edge. Raghavan and Thompson <ref> [8, 9] </ref> provide a solution for this based on scaling. The technique involves finding a scaling factor v 2 (0; 1) such that B (vk; 1v v ) &lt; 1=n, where k is the minimum edge capacity and n is the number of edges.
Reference: [10] <author> Schank, John, Mattock, Michael, Sumner, Gerald, Greenberg, Irwin, Rothenberg, Jeff, and Stucker, James, </author> <title> A Review of Strategic Mobility Models and Analysis, </title> <type> Technical Report R-3926-JS, </type> <institution> Rand National Defense Research Institute, </institution> <year> 1991. </year>
Reference-contexts: The first stage of this two stage process can be solved by algorithms such as those designed for the dial-a-ride problem <ref> [4, 10] </ref>. The solution resulting from this first process is comprised of vehicles with fixed schedules and possibly unused capacity.
Reference: [11] <author> Spencer, Joel, </author> <title> Ten Lectures on the Probabilistic Method, </title> <publisher> (SIAM, </publisher> <address> Philadelphia, </address> <year> 1987). </year> <month> 48 </month>
Reference-contexts: Although the variables in the performance criterion are not independent, their dependency graph has a particular structure that may be exploited. An open question involves how to exploit this structure in the analyses. Promising research along these lines includes the work of Berger and Rompel [1] and Spencer <ref> [11] </ref>. 46 9 Conclusion This paper provides insight into the structure of restricted transportation problems and their solution through approximation algorithms. By exploring the greyhound problem in detail we develop intuition about the difficulties involved in solving problems within the transportation domain.
References-found: 11

