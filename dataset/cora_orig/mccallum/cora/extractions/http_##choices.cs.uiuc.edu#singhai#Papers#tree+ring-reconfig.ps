URL: http://choices.cs.uiuc.edu/singhai/Papers/tree+ring-reconfig.ps
Refering-URL: http://choices.cs.uiuc.edu/singhai/Papers/t+r.html
Root-URL: http://www.cs.uiuc.edu
Email: (singhai@cs.uiuc.edu)  
Title: Reconfiguration of Trees and Rings in Distributed Systems  
Author: Prof. Prith Banerjee) Ashish Singhai 
Address: Urbana IL 61801  
Affiliation: Dept. of Computer Science University of Illinois at Urbana-Champaign  
Date: Fall 1993:  Dec 13, 1993  
Pubnum: (CS436,  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Y. Afek and E. Gafni. </author> <title> Time and message bounds for election in synchronous and asynchronous complete networks. </title> <journal> SIAM Journal of Computing, </journal> <volume> 20(2) </volume> <pages> 376-394, </pages> <month> Apr </month> <year> 1991. </year>
Reference-contexts: In fact these can be used to find solutions to some of the most fundamental problems in distributed systems. The tree structure can be viewed as a solution to the leader election problem [18] <ref> [1] </ref>, with the root of the tree being considered as the leader. Consensus problem can also be modeled as a leader election problem with each process having the same leader value.
Reference: [2] <author> Mohan Ahuja and Yahui Zhu. </author> <title> A distributed algorithm for minimum weight spanning trees based on echo algorithms. </title> <booktitle> In Proc. 9th International Conf. on Distributed Computing Systems, </booktitle> <pages> pages 2-8, </pages> <month> jun </month> <year> 1989. </year>
Reference-contexts: It has been shown in [21] that the communication complexity of [17] is optimal. In [6] an algorithm with optimal time and communication complexities has been presented, which uses the concepts of Root-Update and Test-Distance to combine trees faster than the previous algorithms. The algorithm by Ahuja et. al. <ref> [2] </ref> is based on echo algorithms, and needs (2m + 2 (n 1) log (n=2)) messages and (2d log n) time in the worst case, where n, m and d are the number of nodes, links and the diameter of the system respectively.
Reference: [3] <author> A. Arora and M. G. Gouda. </author> <title> Distributed reset. </title> <booktitle> In Proc. 10th Conference on Foundations of Software Technology and Theoretical Computer Science (extended abstract), </booktitle> <pages> pages 316-331. </pages> <publisher> Springer-Verlag, </publisher> <year> 1990. </year> <note> LNCS 472. </note>
Reference-contexts: For spanning tree problem, stabilizing algorithms have been proposed in [15] <ref> [3] </ref> [5] [34]. Note that stabilizing solutions guarantee convergence from arbitrary state and exhibit non-masking fault tolerance. The algorithm in [3] assumes that the maximum diameter K of the network is known. It works in O (K + deg:dia) rounds. <p> For spanning tree problem, stabilizing algorithms have been proposed in [15] <ref> [3] </ref> [5] [34]. Note that stabilizing solutions guarantee convergence from arbitrary state and exhibit non-masking fault tolerance. The algorithm in [3] assumes that the maximum diameter K of the network is known. It works in O (K + deg:dia) rounds. For a system consisting of N nodes, as conservative estimate for K is N .
Reference: [4] <author> A. Arora and M. G. Gouda. </author> <title> Closure and convergence: A foundation of fault tolerant computing. </title> <journal> IEEE Trans. on Software Engineering, </journal> <month> 19(11), </month> <year> 1993. </year>
Reference-contexts: For example, a program with atomicity = 1 can access information which is distance 1 away in the network as fast as its local variables. In <ref> [4] </ref> a generalized framework to fault tolerance has been proposed. Normal States of execution of a system are characterized by the set N , which reflects the desired behavior of the system. The set F specifies the set of states reachable in presence of a fault which the system tolerates.
Reference: [5] <author> A. Arora and Ashish Singhai. </author> <title> Optimal, nonmasking fault-tolerant reconfiguration of trees and rings, </title> <month> dec </month> <year> 1993. </year> <note> Submitted to FTCS-94. </note>
Reference-contexts: For spanning tree problem, stabilizing algorithms have been proposed in [15] [3] <ref> [5] </ref> [34]. Note that stabilizing solutions guarantee convergence from arbitrary state and exhibit non-masking fault tolerance. The algorithm in [3] assumes that the maximum diameter K of the network is known. It works in O (K + deg:dia) rounds. <p> In the steady state, node with the largest identifier value is elected as the root of the tree. Recently a new algorithm has been proposed in <ref> [5] </ref> which takes a similar approach but does not assume that the maximum system diameter is known. Hence the running time is O (N ) which is known to be optimal. <p> Unfortunately, this simple scheme results in rings which have worst case dilation and total length O (N ) and O (N 2 ) respectively where N is the system size. 8 length and dilation respectively. It is interesting to consider the lower bounds on ring embeddings. As proved in <ref> [5] </ref> for general graphs with N nodes, minimum possible dilation and total length are 3 and 2 (N 1) respectively. <p> Also note that this algorithm assumes that there is a distinguished node which starts the whole process, hence a leader election phase is implied, which will worsen the time and messages required to compute a ring. In contrast with it, the solution in <ref> [5] </ref> constructs a ring which is optimal in both dilation and total length. The ring construction takes O (1) time if each node knows whether its level in the tree is even or odd. <p> On the other hand there is no result in literature which proves that the complexity of ring construction is O (N ). <ref> [5] </ref> shows that the time taken by ring construction is bounded by time taken by tree construction. If each node is given the knowledge of its level being odd or even in the tree, it can construct the ring in O (1) time in a tree.
Reference: [6] <author> B. Awerbuch. </author> <title> Optimal distributed algorithms for minimum weight spanning tree, counting, leader election and related problems. </title> <booktitle> In Proc. 19th ACM Symposium on Theory of Computing, </booktitle> <pages> pages 230-240, </pages> <month> May. </month> <year> 1987. </year>
Reference-contexts: Since size of a tree could be O (n) and number of levels is bounded by log n, the time complexity is O (n log n). It has been shown in [21] that the communication complexity of [17] is optimal. In <ref> [6] </ref> an algorithm with optimal time and communication complexities has been presented, which uses the concepts of Root-Update and Test-Distance to combine trees faster than the previous algorithms.
Reference: [7] <author> Mee Yee Chan and Shiang-Jen Lee. </author> <title> Distributed fault-tolerant embeddings of rings in hypercubes. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <pages> pages 63-71, </pages> <month> nov </month> <year> 1991. </year>
Reference-contexts: Both the algorithms are tolerant with respect to fail stop failures and are fully distributed in the sense that a message passing implementation would use constant size messages. Chan et. al. <ref> [7] </ref> consider the problem of finding fault tolerant embeddings of rings in hypercubes. Their algorithm uses basis rings built on the principle of binary-reflected gray code embedding sequence.
Reference: [8] <author> Mee Yee Chan and Shiang-Jen Lee. </author> <title> Fault-tolerant embeddings of complete binary trees in hypercubes. </title> <journal> IEEE Trans. on Parallel and Distributed Systems, </journal> <volume> 4(3), </volume> <month> mar </month> <year> 1993. </year> <month> 16 </month>
Reference-contexts: For the case of regular networks, <ref> [8] </ref> presents an algorithm for finding em-beddings of complete binary trees in hypercubes.
Reference: [9] <author> K. M. Chandy and Jaydev Mishra. </author> <title> An example of stepwise refinement of distributed programs: Quiescience detection. </title> <journal> ACM Trans. on Programming Languages and Systems, </journal> <volume> 8(3) </volume> <pages> 326-343, </pages> <month> jul </month> <year> 1986. </year>
Reference-contexts: The ring structure is immensely useful in implementing various protocols such as distributed mutual exclusion [25] [23]. A token is passed along the ring and the current owner of the token is assumed to have the permission to execute the critical section Also, algorithms like distributed termination detection [27] <ref> [9] </ref> and reliable broadcast [11] assume that a logical ring has been imposed on the system. In this paper we examine various dynamic reconfiguration methodologies and strategies in trees and rings. 2 System Model This section briefly describes the system model and notations.
Reference: [10] <author> Ernest J. H. Chang. </author> <title> Echo algorithms: Depth parallel operations on general graphs. </title> <journal> IEEE Trans. on Software Engineering, </journal> <volume> SE-8(4):391-401, </volume> <month> July. </month> <year> 1982. </year>
Reference-contexts: If the constraint of minimum cost is removed, and any spanning tree is acceptable, the optimal complexity reduces to O (m) messages and O (d) time respectively as discussed in <ref> [10] </ref> [13]. The basic idea is of sending a wave from a distinguished node called initiator node, which travels downwards. Each node, upon receiving the wave propagates it to its neighbors. Once all nodes have been visited, the wave is reflected back towards the initiator node.
Reference: [11] <author> Joe-Mei Chang and N. F. Maxemchuck. </author> <title> Reliable broadcast protocols. </title> <journal> ACM Trans. on Computer Systems, </journal> <volume> 2(3), </volume> <month> aug </month> <year> 1984. </year>
Reference-contexts: A token is passed along the ring and the current owner of the token is assumed to have the permission to execute the critical section Also, algorithms like distributed termination detection [27] [9] and reliable broadcast <ref> [11] </ref> assume that a logical ring has been imposed on the system. In this paper we examine various dynamic reconfiguration methodologies and strategies in trees and rings. 2 System Model This section briefly describes the system model and notations.
Reference: [12] <author> I. Arieh Cimet, C. Cheng, and Srikanta P. R. Kumar. </author> <title> On the design of resilient protocols for spanning tree problems. </title> <booktitle> In Proc. 9th International Conf. on Distributed Computing Systems, </booktitle> <pages> pages 516-523, </pages> <month> jun </month> <year> 1989. </year>
Reference-contexts: There exists no (0; dk=2e)-resilient algorithm even if each processor ini tially knows that the network is k-connected. In literature, there are many algorithms which tolerate link failures and reconstruct spanning tree so long as network is connected [29] <ref> [12] </ref>. Cimet et. al. have discussed a generic resilient protocol for spanning tree problem in [12]. Their algorithm can be specialized to give trees with different properties by adjusting the parameters. <p> In literature, there are many algorithms which tolerate link failures and reconstruct spanning tree so long as network is connected [29] <ref> [12] </ref>. Cimet et. al. have discussed a generic resilient protocol for spanning tree problem in [12]. Their algorithm can be specialized to give trees with different properties by adjusting the parameters.
Reference: [13] <author> E. W. Dijkstra and C. S. Scholten. </author> <title> Termination dectection for diffusing computations. </title> <journal> Information Processing Letters, </journal> <volume> 11(1) </volume> <pages> 1-4, </pages> <year> 1980. </year>
Reference-contexts: If the constraint of minimum cost is removed, and any spanning tree is acceptable, the optimal complexity reduces to O (m) messages and O (d) time respectively as discussed in [10] <ref> [13] </ref>. The basic idea is of sending a wave from a distinguished node called initiator node, which travels downwards. Each node, upon receiving the wave propagates it to its neighbors. Once all nodes have been visited, the wave is reflected back towards the initiator node.
Reference: [14] <author> E. W. Dijsktra. </author> <title> Self stabilizing systems in spite of distribued control. </title> <journal> Comm. of the ACM, </journal> <volume> 17(11) </volume> <pages> 643-644, </pages> <month> nov </month> <year> 1974. </year>
Reference-contexts: The set F specifies the set of states reachable in presence of a fault which the system tolerates. In a system which exhibits masking fault tolerance, N = F , so that even in presence of faults system exhibits correct behavior. In stabilizing systems <ref> [14] </ref> N F and F = T rue (T rue is the set of all states) so that system can tolerate any fault.
Reference: [15] <author> S. Dolev, A. Israeli, and S. Moran. </author> <title> Self-stabilization of dynamic systems. </title> <booktitle> In Proc. MCC Workshop onf Self-Stabilizing Systems, </booktitle> <year> 1989. </year> <type> MCC Technical Report Number STP-379-89. </type>
Reference-contexts: For spanning tree problem, stabilizing algorithms have been proposed in <ref> [15] </ref> [3] [5] [34]. Note that stabilizing solutions guarantee convergence from arbitrary state and exhibit non-masking fault tolerance. The algorithm in [3] assumes that the maximum diameter K of the network is known. It works in O (K + deg:dia) rounds. <p> Starting from the fact that the system graph is a forest of trees, the algorithm provides a way of merging them into a single tree. The stabilizing algorithm in <ref> [15] </ref> is similar in approach, but makes a simplifying assumption that at all times there exists a special node which knows that it is the root, and consequently the algorithm does not handle the cases 7 when the root node fails.
Reference: [16] <author> M. J. Fischer, Nancy A. Lynch, and M. Patterson. </author> <title> Impossibility of distributed consensus with one faulty process. </title> <journal> Journal of the ACM, </journal> <volume> 32 </volume> <pages> 374-382, </pages> <year> 1985. </year>
Reference-contexts: Their results are summarized below. Theorem 1 There is no (1; 0)-resilient distributed algorithm to solve the spanning tree problem in a fully asynchronous distributed system. Note that similar result has been discussed in <ref> [16] </ref>. Theorem 2 For spanning tree problem, the following hold: 1. There exists a (0; fl)-resilient algorithm if neighbor's identities or the network size information is available. 5 2. There exists a (0; dk=2e1)-resilient algorithm if each processor initially knows that the network is k-connected. 3.
Reference: [17] <author> R. G. Gallager, P. A. Humblet, and P. M. Spira. </author> <title> A distributed algorithm for minimum weight spanning trees. </title> <journal> ACM Trans. on Programming Languages and Systems, </journal> <volume> 5 </volume> <pages> 66-77, </pages> <month> Jan. </month> <year> 1983. </year>
Reference-contexts: The wave collects and distributes information across the entire system, which is engineered to form a spanning tree. Among the early algorithms for distributed construction of MST, the one by Gallager et. al. <ref> [17] </ref> is the best known. It requires (2m+5n log n) messages and (5n log n) time where n and m are number of nodes and links respectively. The algorithm works by repeatedly finding minimum weight edges between two trees and using them to connect these trees. <p> Since size of a tree could be O (n) and number of levels is bounded by log n, the time complexity is O (n log n). It has been shown in [21] that the communication complexity of <ref> [17] </ref> is optimal. In [6] an algorithm with optimal time and communication complexities has been presented, which uses the concepts of Root-Update and Test-Distance to combine trees faster than the previous algorithms. <p> n, the time complexity is O (d log n) as each wave can take at most d time (d is the diameter of the system.) However, the number of bits in the messages is O (n log n) which is 4 rather large as compared to O (log n) in <ref> [17] </ref>. If the constraint of minimum cost is removed, and any spanning tree is acceptable, the optimal complexity reduces to O (m) messages and O (d) time respectively as discussed in [10] [13].
Reference: [18] <author> H. Garcia-Molina. </author> <title> Elections in a distributed computing system. </title> <journal> IEEE Trans. on Computers, </journal> <volume> C-31(1):48-59, </volume> <month> Jan </month> <year> 1982. </year>
Reference-contexts: In fact these can be used to find solutions to some of the most fundamental problems in distributed systems. The tree structure can be viewed as a solution to the leader election problem <ref> [18] </ref> [1], with the root of the tree being considered as the leader. Consensus problem can also be modeled as a leader election problem with each process having the same leader value.
Reference: [19] <author> V. D. Gligor and S. H. </author> <title> Shattuck. On deadlock detection in distributed systems. </title> <journal> IEEE Trans. on Software Engineering, </journal> <pages> pages 435-440, </pages> <month> sep </month> <year> 1980. </year>
Reference-contexts: Consensus problem can also be modeled as a leader election problem with each process having the same leader value. The tree structure is also useful for distributed checkpointing and recovery, as well as deadlock detection and mutual exclusion [30] <ref> [19] </ref> in which the root collects information from other nodes, processes it and distributes the result. The ring structure is immensely useful in implementing various protocols such as distributed mutual exclusion [25] [23].
Reference: [20] <author> Jean-Michel Helary and M. Raynal. </author> <title> Virtual rings construction in parallel distributed systems. </title> <editor> In M. Cosnard et al., editors, </editor> <booktitle> Parallel Processing, </booktitle> <pages> pages 333-345. </pages> <publisher> Elsevier Science Publishers, </publisher> <year> 1988. </year> <month> 17 </month>
Reference-contexts: Their algorithm forms the ring one node at a time and results in O (N ) time complexity. The solution is not very attractive since it does not tolerate any faults and the requirement of synchronous operation is rather stringent. Another algorithm presented in <ref> [20] </ref> uses the depth first strategy to enumerate nodes in depth first order. While such an approach limits the total length to 2 (N 1), the dilation can be linear in N .
Reference: [21] <author> E. Korach, S. Moran, and S. Zaks. </author> <title> Tight lower and upper bounds for some distributed algorithms for a complete network of processors. </title> <booktitle> In Proc. 3nd ACM Conference on PODC, </booktitle> <pages> pages 199-207, </pages> <address> Vancouver, Canada, </address> <month> Aug. </month> <year> 1984. </year>
Reference-contexts: Since size of a tree could be O (n) and number of levels is bounded by log n, the time complexity is O (n log n). It has been shown in <ref> [21] </ref> that the communication complexity of [17] is optimal. In [6] an algorithm with optimal time and communication complexities has been presented, which uses the concepts of Root-Update and Test-Distance to combine trees faster than the previous algorithms.
Reference: [22] <author> L. Lamport. </author> <booktitle> The implementation of reliable distributed systems. Computer Networks, </booktitle> <volume> 2 </volume> <pages> 95-114, </pages> <year> 1978. </year>
Reference-contexts: Online Approach After each fault occurrence, an online program runs to repair the perturbed structure. Typically it is assumed that faults do not occur while the online program is running. <ref> [22] </ref> Non-masking Approach A non-masking program runs continually in presence of faults to maintain the structure. In contrast with the online 1 approach, no assumptions about the predictability of fault occurrence are made.
Reference: [23] <author> G. Le Lann. </author> <title> Distributed systems: Towards a formal approach. </title> <booktitle> In IFIP Congress, </booktitle> <pages> pages 155-160, </pages> <address> Toronto, Canada, </address> <month> aug </month> <year> 1977. </year>
Reference-contexts: The ring structure is immensely useful in implementing various protocols such as distributed mutual exclusion [25] <ref> [23] </ref>. A token is passed along the ring and the current owner of the token is assumed to have the permission to execute the critical section Also, algorithms like distributed termination detection [27] [9] and reliable broadcast [11] assume that a logical ring has been imposed on the system.
Reference: [24] <author> Chungti Liang and W. T. Tsai. </author> <title> On the reconfigurability of embedded loops on hypercubes and its application. </title> <journal> Information Sciences, </journal> <volume> 66 </volume> <pages> 191-224, </pages> <year> 1992. </year>
Reference-contexts: This implies that f functional processors may have to be excluded from the ring eventually constructed. Same topic has been considered in <ref> [24] </ref>. The authors consider different mapping strategies and evaluate them on the basis of the following parameters: average number of tolerable failures, average number of talk migrations and the utilization rate of nodes. The algorithm uses complex topological properties of the hypercubes and is a difficult reading.
Reference: [25] <author> A. J. Martin. </author> <title> Distributed mutual exclusion on a ring of processes. </title> <booktitle> Science of Computer Programming, </booktitle> <volume> 5 </volume> <pages> 265-276, </pages> <year> 1985. </year>
Reference-contexts: The ring structure is immensely useful in implementing various protocols such as distributed mutual exclusion <ref> [25] </ref> [23]. A token is passed along the ring and the current owner of the token is assumed to have the permission to execute the critical section Also, algorithms like distributed termination detection [27] [9] and reliable broadcast [11] assume that a logical ring has been imposed on the system.
Reference: [26] <author> T. Masuzawa, K. Hagihara, and N. Tokura. </author> <title> Distributed algorithms in faulty networks. </title> <booktitle> In Proc. IEEE Symposium on Circuits and Systems, </booktitle> <pages> pages 555-558, </pages> <month> jun </month> <year> 1988. </year>
Reference-contexts: The system state is the collection of all process states as well as channel states. The state of a process encodes the knowledge the process has about the system. Different algorithms assume different levels of global knowledge. Four different levels characterized in <ref> [26] </ref> are: 2 * neighbor identities * size of the network * edge connectivity of the network * complete topology information In addition, the description uses a concept of atomicity, which characterizes the information any given node can access with negligible delay. <p> Moreover, the overhead of reconfiguring the system from scratch in large systems is substantially high and it is desirable to have fault tolerant algorithms to reduce the downtime. Masuzawa et. al. <ref> [26] </ref> have characterized some impossibility results associated with fault tolerant tree construction in distributed systems.
Reference: [27] <author> Jaydev Mishra. </author> <title> Detecting termination of distributed computations using markers. </title> <booktitle> In Proc. 2nd ACM Conference on PODC, </booktitle> <pages> pages 290-294, </pages> <month> aug </month> <year> 1983. </year>
Reference-contexts: The ring structure is immensely useful in implementing various protocols such as distributed mutual exclusion [25] [23]. A token is passed along the ring and the current owner of the token is assumed to have the permission to execute the critical section Also, algorithms like distributed termination detection <ref> [27] </ref> [9] and reliable broadcast [11] assume that a logical ring has been imposed on the system. In this paper we examine various dynamic reconfiguration methodologies and strategies in trees and rings. 2 System Model This section briefly describes the system model and notations.
Reference: [28] <author> Krishnendu Mukhopadhyaya and Bhabani P. Singha. </author> <title> Hamiltonian graphs with minimum number of edges for fault tolerant topologies. </title> <journal> Information Processing Letters, </journal> <volume> 44 </volume> <pages> 95-99, </pages> <month> nov </month> <year> 1992. </year>
Reference-contexts: The algorithm uses complex topological properties of the hypercubes and is a difficult reading. Finally the authors have applied reconfiguration of loops to the reconfiguration of embedded multidimensional grids on hypercubes. An entirely different approach is taken in <ref> [28] </ref>, which proposes topologies which have a hamiltonian cycle in the graph even in the event of a single node or link failure and proves that these topologies have minimum number of edges for any graphs having this property.
Reference: [29] <author> R. Perlman. </author> <title> An algorithm for distributed computattion of a spanning tree in extended LAN. </title> <booktitle> In Ninth ACM Data Communications Symposium, </booktitle> <volume> volume 20, </volume> <pages> pages 44-52, </pages> <year> 1985. </year>
Reference-contexts: There exists no (0; dk=2e)-resilient algorithm even if each processor ini tially knows that the network is k-connected. In literature, there are many algorithms which tolerate link failures and reconstruct spanning tree so long as network is connected <ref> [29] </ref> [12]. Cimet et. al. have discussed a generic resilient protocol for spanning tree problem in [12]. Their algorithm can be specialized to give trees with different properties by adjusting the parameters.
Reference: [30] <author> K. Raymond. </author> <title> A tree based algorithm for distributed mutual exclusion. </title> <journal> ACM Trans. on Computer Systems, </journal> <volume> 7(1) </volume> <pages> 61-77, </pages> <year> 1989. </year>
Reference-contexts: Consensus problem can also be modeled as a leader election problem with each process having the same leader value. The tree structure is also useful for distributed checkpointing and recovery, as well as deadlock detection and mutual exclusion <ref> [30] </ref> [19] in which the root collects information from other nodes, processes it and distributes the result. The ring structure is immensely useful in implementing various protocols such as distributed mutual exclusion [25] [23].
Reference: [31] <author> P. Rosenstiehl, J. R. Fiksel, and A. Holliger. </author> <title> Intelligent graphs: Networks of finite automata capable of solving greaph problems. </title> <editor> In R. C. Read, editor, </editor> <booktitle> Graph Theory and Computing, </booktitle> <pages> pages 219-265. </pages> <publisher> Academic Press, </publisher> <year> 1972. </year>
Reference-contexts: In this paper, a constructive proof for constructing the embeddings with these bounds is given as well as counterexamples have been presented which illustrate that it is not possible to do any better (figures 1 and 2). One of the early references on this problem is <ref> [31] </ref>. The authors consider a network of finite state automata which operate synchronously to embed a ring of dilation at most 3 in a tree. Their algorithm forms the ring one node at a time and results in O (N ) time complexity.
Reference: [32] <author> R. Schlichting and F. B. Schneider. </author> <title> Fail stop processors: An approach to designing fault tolerant computing systems. </title> <journal> ACM Trans. on Computer Systems, </journal> <pages> pages 222-238, </pages> <month> aug </month> <year> 1982. </year>
Reference-contexts: This property is known as convergence. Any fault tolerant program is thus characterized by its N and F sets. Each program tolerates a particular class of failures. In most cases, only fail stop <ref> [32] </ref> failures are considered. Other classes of failures include byzantine failures, node failures and repairs, link failures and repairs, memory loss, reset, single node failures etc.
Reference: [33] <author> R. E. Tarzan. </author> <title> Sensitivity analysis of minimum spanning trees and shortest path trees. </title> <journal> Information Processing Letters, </journal> <volume> 14(1) </volume> <pages> 30-33, </pages> <month> mar </month> <year> 1982. </year>
Reference-contexts: For example, the replacement value of a link m in replacement set of link l for MST problem gives the increase in the weight of the tree if m is used to replace l. 6 These concepts have been discussed at length in <ref> [33] </ref>. The way protocol handles faults is by replacing a failed tree link with the one with minimum replacement value in its replacement set and updating the affected replacement sets and values. Failure of a non-tree link results in updating of replacement sets in which this link appears.
Reference: [34] <author> G. Varghese. </author> <title> Self-stabilization by Local Checking and Correction. </title> <publisher> Ph. </publisher> <address> D. </address> <institution> dissertation, Massachusetts Institute of Technology, </institution> <year> 1992. </year> <month> 19 </month>
Reference-contexts: For spanning tree problem, stabilizing algorithms have been proposed in [15] [3] [5] <ref> [34] </ref>. Note that stabilizing solutions guarantee convergence from arbitrary state and exhibit non-masking fault tolerance. The algorithm in [3] assumes that the maximum diameter K of the network is known. It works in O (K + deg:dia) rounds.
References-found: 34

