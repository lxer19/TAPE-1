URL: ftp://ftp.cs.monash.edu.au/pub/annn/smc.ps
Refering-URL: http://www.cs.monash.edu.au/~annn/cv/pub.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Dynamic Belief Networks for Discrete Monitoring  
Author: A. E. Nicholson J. M. Brady 
Date: December 20, 1993  
Abstract: We describe the development of a monitoring system which uses sensor observation data about discrete events to construct dynamically a probabilistic model of the world. This model is a Bayesian network incorporating temporal aspects, which we call a Dynamic Belief Network; it is used to reason under uncertainty about both the causes and consequences of the events being monitored. The basic dynamic construction of the network is data-driven. However the model construction process combines sensor data about events with externally provided information about agents' behaviour, and knowledge already contained within the model, to control the size and complexity of the network. This means that both the network structure within a time interval, and the amount of history and detail maintained, can vary over time. We illustrate the system with the example domain of monitoring robot vehicles and people in a restricted dynamic environment using light-beam sensor data. In addition to presenting a generic network structure for monitoring domains, we describe the use of more complex network structures which address two specific monitoring problems, sensor validation and the Data Association Problem.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. M. Agogino, S. Srinivas, and K. M. Scheider, </author> <title> "Multiple sensor expert system for diagnostic reasoning, monitoring and control of mechanical system," </title> <journal> Mechanical Systems and Signal Processing, </journal> <volume> vol. 2, </volume> <pages> pp. 165-185, </pages> <year> 1988. </year>
Reference-contexts: A similar idea has been used in expert system research; in [2] such nodes are called "invalidators", and similar nodes are also used in <ref> [1] </ref>. Of course, this idea is also familiar to the AI community; Winston [39] described the notion of a censor, which acts as an "unless" condition: if a BC-ACT occurs, then BC-OBS will be generated unless the sensor is defective. <p> The DBN monitoring system described in this paper may be described by Kjrulff's formal computational scheme for reducing and expanding dynamic probabilistic networks [23]. Agogino et al. <ref> [1] </ref> use real-time influence diagrams for diagnostic reasoning, monitoring and controlling mechanical systems; the diagrams do not have a temporal dimension, and they are not dynamically constructed.
Reference: [2] <author> L. R. Andersen, J. H. Krebs, and J. D. Andersen, "Steno: </author> <title> an expert system for medical diagnosis," </title> <journal> Journal of Applied Statistics, </journal> <volume> vol. 18, no. 1, </volume> <pages> pp. 139-153, </pages> <year> 1989. </year>
Reference-contexts: In the social sciences and psychology, the term "moderator" is used for an alternative variable that "messes up" or "moderates" the relationship between other variables [40, 37]. A similar idea has been used in expert system research; in <ref> [2] </ref> such nodes are called "invalidators", and similar nodes are also used in [1].
Reference: [3] <author> S. Andreassen, J. Benn, R. Hovorks, K. G. Olesen, and R. E. Carson, </author> <title> "A probabilistic approach to glucose prediction and insulin dose adjustment: Description of metabolic model and pilot evaluation study." </title> <type> Unpublished draft, </type> <year> 1991. </year>
Reference-contexts: More recently, dynamic belief networks (DBNs) (also called temporal probabilistic networks [12, 13], and dynamic causal probabilistic networks [23]) have been of interest as modeling tools for environments that change over time <ref> [23, 10, 14, 3] </ref>. For such applications, the network expands over time, as the state of each domain variable at different times is represented by a series of nodes. <p> Such dynamic applications include Dean et al.'s work on robot navigation, planning and map learning, based on temporal belief networks, [14] and Andreassen et al.'s work on monitoring diabetes over time <ref> [3] </ref>. The DBN monitoring system described in this paper may be described by Kjrulff's formal computational scheme for reducing and expanding dynamic probabilistic networks [23].
Reference: [4] <author> S. Andreassen, M. Woldbye, B. Falck, and S. Andersen, </author> <title> "MUNIN A causal probabilistic network for interpretation of electromyographic findings," </title> <booktitle> in Proceedings of the Tenth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pp. 366-372, </pages> <year> 1987. </year>
Reference-contexts: The network structure within a time slice may change over time in a number of ways. First, the 1 Also called influence diagrams [17, 35], recursive graphical models [38], probabilistic causal network [8] causal probabilistic networks <ref> [4] </ref>, causal networks [24] and independence networks/graphs [27] 2 This follows the general classification of approaches to model building proposed in [36]: query-driven, decision-driven, value-driven and data-driven. time interval which each network slice covers varies.
Reference: [5] <author> K. Bar-Shalom and T. E. Fortmann, </author> <title> Tracking and data association. </title> <booktitle> Mathematics in Science and Engineering Series, </booktitle> <publisher> Academic Press, </publisher> <year> 1988. </year>
Reference-contexts: These sensors perform continuous sampling and notify the system when a discrete event occurs, i.e. when some agent moves across the sensor from one region to another. The conventional quantitative approach to such a tracking problem is to use a controller such as the Kalman Filter <ref> [21, 5] </ref>, which is based on the cycle: predict state, measure (i.e. sense), update state estimate. <p> Quantitative solutions to the DAP include certain techniques for handling observations which do not fall within the validation regions. One method is to discard them as "clutter", which is sometime called a false alarm <ref> [5] </ref>. An alternative is to initiate a new track (and hence filter) for such an observation and discontinue it after a certain time if no further data supports this hypothesis of a new agent. In some quantitative methods, track continuation [5, p. 255] is done to handle missing data. <p> An alternative is to initiate a new track (and hence filter) for such an observation and discontinue it after a certain time if no further data supports this hypothesis of a new agent. In some quantitative methods, track continuation <ref> [5, p. 255] </ref> is done to handle missing data. If the validation region is empty, the track is extrapolated.
Reference: [6] <author> J. Breese, </author> <title> "Construction of belief and decision networks," </title> <journal> Computational Intelligence, </journal> <volume> vol. 8, no. 4, </volume> <pages> pp. 624-647, </pages> <year> 1992. </year>
Reference-contexts: These approaches involved determining the network structure, supplying prior and conditional probabilities, adding or retracting evidence and repeating the inference algorithm for each change in the evidence. The complexity and size of networks for domains such as natural language understanding motivated work on the dynamic construction of belief networks <ref> [6, 7] </ref>. More recently, dynamic belief networks (DBNs) (also called temporal probabilistic networks [12, 13], and dynamic causal probabilistic networks [23]) have been of interest as modeling tools for environments that change over time [23, 10, 14, 3].
Reference: [7] <author> E. Charniak and R. Goldman, </author> <title> "Plan recognition in stories and in life," </title> <booktitle> in Proc. of the Fifth Workshop on Uncertainty in Artificial Intelligence, </booktitle> <pages> pp. 54-60, </pages> <year> 1989. </year>
Reference-contexts: These approaches involved determining the network structure, supplying prior and conditional probabilities, adding or retracting evidence and repeating the inference algorithm for each change in the evidence. The complexity and size of networks for domains such as natural language understanding motivated work on the dynamic construction of belief networks <ref> [6, 7] </ref>. More recently, dynamic belief networks (DBNs) (also called temporal probabilistic networks [12, 13], and dynamic causal probabilistic networks [23]) have been of interest as modeling tools for environments that change over time [23, 10, 14, 3].
Reference: [8] <author> G. Cooper, "NESTOR: </author> <title> A computer based medical diagnostic aid that integrates causal and probabilistic knowledge," </title> <type> Technical Report HHP-84-48, </type> <institution> Medical Computer Science Group, Stanford University, Stanford, California, </institution> <year> 1984. </year>
Reference-contexts: The network structure within a time slice may change over time in a number of ways. First, the 1 Also called influence diagrams [17, 35], recursive graphical models [38], probabilistic causal network <ref> [8] </ref> causal probabilistic networks [4], causal networks [24] and independence networks/graphs [27] 2 This follows the general classification of approaches to model building proposed in [36]: query-driven, decision-driven, value-driven and data-driven. time interval which each network slice covers varies.
Reference: [9] <author> G. Cooper, </author> <title> "The computational complexity of probabilistic inference using bayesian belief networks," </title> <journal> Artificial Intelligence, </journal> <volume> vol. 42, </volume> <pages> pp. 393-405, </pages> <year> 1990. </year>
Reference-contexts: be calculated and used to decompose global conflict into local conflicts; this allows the system to target individual sensors for the additional structures involving the BC-INV node. 6 Aspects of Dynamic Model Construction In general, the complexity of exact inference for multiply-connected networks such as the monitoring DBN is NP-hard <ref> [9] </ref>. Cooper suggests that the complexity problem should be tackled by designing efficient special-case, average-case and approximation algorithms, rather than searching for a general, efficient exact inference algorithm.
Reference: [10] <author> P. Dagum, A. Galper, and E. Horvitz, </author> <title> "Dynamic network models for forecasting," </title> <booktitle> in Proceedings of the 8th Conference on Uncertainty in Artificial Intelligence, </booktitle> <pages> pp. 41-48, </pages> <year> 1992. </year>
Reference-contexts: More recently, dynamic belief networks (DBNs) (also called temporal probabilistic networks [12, 13], and dynamic causal probabilistic networks [23]) have been of interest as modeling tools for environments that change over time <ref> [23, 10, 14, 3] </ref>. For such applications, the network expands over time, as the state of each domain variable at different times is represented by a series of nodes. <p> Dagum et al. <ref> [10] </ref> present a probabilistic forecasting methodology using dynamic network models, using an example model for forecasting U.S. car sales in Japan. In this work the focus is more on the prediction and decision theoretic aspects of the problem.
Reference: [11] <author> P. Dagum and M. Luby, </author> <title> "Approximating probabilistic inference in belief networks is NP-hard," </title> <booktitle> Artificial Intelligence, </booktitle> <pages> pp. 141-153, </pages> <year> 1993. </year>
Reference-contexts: Cooper suggests that the complexity problem should be tackled by designing efficient special-case, average-case and approximation algorithms, rather than searching for a general, efficient exact inference algorithm. Since the approximation task is also NP-hard <ref> [11] </ref>, limiting the size of networks, and hence the search space, is crucial for ensuring computational feasibility. Other researchers who have encountered complexity have described the use of domain specific knowledge and heuristics to reduce the search space.
Reference: [12] <author> T. Dean and K. </author> <title> Kanazawa, "A model for reasoning about persistence and causation," </title> <journal> Computational Intelligence, </journal> <volume> vol. 5, </volume> <pages> pp. 142-150, </pages> <year> 1989. </year>
Reference-contexts: The complexity and size of networks for domains such as natural language understanding motivated work on the dynamic construction of belief networks [6, 7]. More recently, dynamic belief networks (DBNs) (also called temporal probabilistic networks <ref> [12, 13] </ref>, and dynamic causal probabilistic networks [23]) have been of interest as modeling tools for environments that change over time [23, 10, 14, 3]. For such applications, the network expands over time, as the state of each domain variable at different times is represented by a series of nodes.
Reference: [13] <author> T. Dean, K. Kanazawa, and J. Shewchuk, </author> <title> "Prediction, observation, and estimation in planning and control," </title> <booktitle> in Proceedings of the Fifth IEEE International Symposium on Intelligent Control, </booktitle> <pages> pp. 645-650, </pages> <year> 1990. </year>
Reference-contexts: The complexity and size of networks for domains such as natural language understanding motivated work on the dynamic construction of belief networks [6, 7]. More recently, dynamic belief networks (DBNs) (also called temporal probabilistic networks <ref> [12, 13] </ref>, and dynamic causal probabilistic networks [23]) have been of interest as modeling tools for environments that change over time [23, 10, 14, 3]. For such applications, the network expands over time, as the state of each domain variable at different times is represented by a series of nodes.
Reference: [14] <author> T. Dean and M. P. Wellman, </author> <title> Planning and control. </title> <address> San Mateo, Ca.: </address> <publisher> Morgan Kaufman Publishers, </publisher> <year> 1991. </year>
Reference-contexts: More recently, dynamic belief networks (DBNs) (also called temporal probabilistic networks [12, 13], and dynamic causal probabilistic networks [23]) have been of interest as modeling tools for environments that change over time <ref> [23, 10, 14, 3] </ref>. For such applications, the network expands over time, as the state of each domain variable at different times is represented by a series of nodes. <p> However, the system must perform some kind of network pruning since the network cannot continue to grow over time maintaining a complete history forever | some sort of "forgetting" must take place. One standard solution is to maintain a fixed window, pruning one time slice for each added <ref> [14] </ref>. In this paper, we consider how knowledge contained in the network may be used to control the pruning procedure. We describe a generic structure for the basic network dynamically constructed by our monitoring system. <p> Previous general Bayesian network models in the planning domain <ref> [14] </ref> contained only the former. However the observation of event nodes are important in that they provide information about what we are interested in | change in the world. <p> In this section we show that pruning can be implemented by domain independent meta-reasoning, which result in the reproduction of domain specific methods such as those by Dean et al. <ref> [14, pp.330-334] </ref> among others. Pruning Pruning the network consists of any of the following actions: deleting states from a particular node; removing the connection between two nodes; removing a node from the network (i.e. removing all connections to and from a node). <p> Information from the inference based on evidence in parts of the network now deleted can be retained to a certain extent, by methods such as Kjrulff's model reduction [23] and the network reduction described in <ref> [14] </ref>, both based on work by Shachter [32]; loss of information may occur if there were conditional dependencies amongst the successors of deleted nodes. In our domain, often the central interest is the positions of the agents, i.e the POS i (T) nodes would be the designated world nodes. <p> The effect of this exact pruning is to reduce the states of POS i (T+1) to the known previous position or adjacent positions, using the physical constraints represented in the conditional probabilities. Experimental results showing how exact pruning based on initialisation information reduces the join-tree cost <ref> [14] </ref>, a measure of the cost of network inference using the Jensen version of the Lauritzen and Spiegelhalter algorithm, are given in [28]. <p> Such dynamic applications include Dean et al.'s work on robot navigation, planning and map learning, based on temporal belief networks, <ref> [14] </ref> and Andreassen et al.'s work on monitoring diabetes over time [3]. The DBN monitoring system described in this paper may be described by Kjrulff's formal computational scheme for reducing and expanding dynamic probabilistic networks [23].
Reference: [15] <author> H. F. Durrant-Whyte, </author> <title> Integration, Coordination, </title> <booktitle> and Control of Multi-Sensor Robots Systems. </booktitle> <address> Boston, MA.: </address> <publisher> Kluwer Academic Press,, </publisher> <year> 1987. </year>
Reference-contexts: For discrete variables, a Poisson distribution is used instead of a Gaussian. To handle gross errors of the sort that are the focus here, a number of different techniques have been proposed. A threshold called a validation gate may be applied to the Gaussian. Alternatively, robust statistics <ref> [18, 15] </ref> may be used, where, for example, the error is a linear combination of two Gaussians. Finally non-parametric statistics have been developed; but they are more difficult to compute and analyse since they are non-linear.
Reference: [16] <author> R. Fung, </author> <title> Structure Composing for Situation Assessment. </title> <type> PhD thesis, </type> <institution> Engineering Economic Systems, Stan-ford University, </institution> <year> 1988. </year>
Reference-contexts: Agogino et al. [1] use real-time influence diagrams for diagnostic reasoning, monitoring and controlling mechanical systems; the diagrams do not have a temporal dimension, and they are not dynamically constructed. Fung <ref> [16] </ref> extends the work in [26] to include dependent targets within a Bayesian Network framework, focusing on strategic situation assessment; this system is also based on data-driven model construction, although both the details of model construction, and network struc ture differ substantially from that described in this paper.
Reference: [17] <author> R. A. Howard and J. E. Matheson, </author> <title> "Influence diagrams," in The Principles and Applications of Decision Analysis (R. </title> <editor> A. Howard and J. E. Matheson, eds.), </editor> <address> Menlo Park CA 94025: </address> <institution> Strategic Decisions Group, </institution> <year> 1984. </year>
Reference-contexts: The network structure within a time slice may change over time in a number of ways. First, the 1 Also called influence diagrams <ref> [17, 35] </ref>, recursive graphical models [38], probabilistic causal network [8] causal probabilistic networks [4], causal networks [24] and independence networks/graphs [27] 2 This follows the general classification of approaches to model building proposed in [36]: query-driven, decision-driven, value-driven and data-driven. time interval which each network slice covers varies.
Reference: [18] <author> P. Huber, </author> <title> Robust Statistics. </title> <publisher> John Wiley, </publisher> <year> 1981. </year>
Reference-contexts: For discrete variables, a Poisson distribution is used instead of a Gaussian. To handle gross errors of the sort that are the focus here, a number of different techniques have been proposed. A threshold called a validation gate may be applied to the Gaussian. Alternatively, robust statistics <ref> [18, 15] </ref> may be used, where, for example, the error is a linear combination of two Gaussians. Finally non-parametric statistics have been developed; but they are more difficult to compute and analyse since they are non-linear.
Reference: [19] <author> F. V. Jensen, B. Chamberlain, T. Nordahl, and F. Jensen, </author> <title> "Analysis in HUGIN of data conflict," </title> <booktitle> in Uncertainty in Artificial Intelligence 6 (P. </booktitle> <editor> P. Bonissone, M. Henrion, L. M. Kanal, and J. F. Lemmer, </editor> <booktitle> eds.), </booktitle> <pages> pp. 519-528, </pages> <publisher> Elsevier Science Publishers B. V. (North-Holland), </publisher> <year> 1991. </year>
Reference-contexts: This can be done using conflicts in the data, or conflicts between the data and the model, as described by Jensen et al. <ref> [19] </ref>. Often a hierarchical approach can be taken. If the basic DBN (which assume the data is correct) produces a contradiction, the initial modification to the probability distribution for BC-OBS nodes are made. A measure of conflict [19], based on probabilities for specific configurations, can be calculated and used to decompose <p> conflicts between the data and the model, as described by Jensen et al. <ref> [19] </ref>. Often a hierarchical approach can be taken. If the basic DBN (which assume the data is correct) produces a contradiction, the initial modification to the probability distribution for BC-OBS nodes are made. A measure of conflict [19], based on probabilities for specific configurations, can be calculated and used to decompose global conflict into local conflicts; this allows the system to target individual sensors for the additional structures involving the BC-INV node. 6 Aspects of Dynamic Model Construction In general, the complexity of exact inference for multiply-connected networks
Reference: [20] <author> E. S. Jr., </author> <title> A Linear Constraint Satisfaction Approach for Abductive Reasoning. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, Brown University, </institution> <year> 1992. </year>
Reference: [21] <author> R. Kalman and R. Bucy, </author> <title> "New results in linear filtering and prection theory," </title> <journal> Trans. ASME, J. Basic Engineering, </journal> <volume> vol. 88, </volume> <pages> pp. 95-108, </pages> <month> March </month> <year> 1961. </year>
Reference-contexts: These sensors perform continuous sampling and notify the system when a discrete event occurs, i.e. when some agent moves across the sensor from one region to another. The conventional quantitative approach to such a tracking problem is to use a controller such as the Kalman Filter <ref> [21, 5] </ref>, which is based on the cycle: predict state, measure (i.e. sense), update state estimate.
Reference: [22] <author> J. Kirman, "TNT: </author> <title> An environment for developing planners for stochastic domains." </title> <type> Unpublished draft, </type> <year> 1993. </year>
Reference-contexts: TNT, a development environment for building temporal networks for the planning domain <ref> [22] </ref>, may prove useful for developing monitoring applications. However, there are significant differences between the planning and monitoring domains.
Reference: [23] <author> U. Kjrulff, </author> <title> "A computational scheme for reasoning in dynamic probabilistic networks," </title> <booktitle> in Proceedings of the 8th Conference on Uncertainty in Artificial Intelligence, </booktitle> <pages> pp. 121-129, </pages> <year> 1992. </year>
Reference-contexts: The complexity and size of networks for domains such as natural language understanding motivated work on the dynamic construction of belief networks [6, 7]. More recently, dynamic belief networks (DBNs) (also called temporal probabilistic networks [12, 13], and dynamic causal probabilistic networks <ref> [23] </ref>) have been of interest as modeling tools for environments that change over time [23, 10, 14, 3]. For such applications, the network expands over time, as the state of each domain variable at different times is represented by a series of nodes. <p> More recently, dynamic belief networks (DBNs) (also called temporal probabilistic networks [12, 13], and dynamic causal probabilistic networks [23]) have been of interest as modeling tools for environments that change over time <ref> [23, 10, 14, 3] </ref>. For such applications, the network expands over time, as the state of each domain variable at different times is represented by a series of nodes. <p> Information from the inference based on evidence in parts of the network now deleted can be retained to a certain extent, by methods such as Kjrulff's model reduction <ref> [23] </ref> and the network reduction described in [14], both based on work by Shachter [32]; loss of information may occur if there were conditional dependencies amongst the successors of deleted nodes. <p> The DBN monitoring system described in this paper may be described by Kjrulff's formal computational scheme for reducing and expanding dynamic probabilistic networks <ref> [23] </ref>. Agogino et al. [1] use real-time influence diagrams for diagnostic reasoning, monitoring and controlling mechanical systems; the diagrams do not have a temporal dimension, and they are not dynamically constructed.
Reference: [24] <author> S. Lauritzen and D. Spiegelhalter, </author> <title> "Local computations with probabilities on graphical structures and their application to expert systems," </title> <journal> Journal of the Royal Statistical Society, </journal> <volume> vol. 50, no. 2, </volume> <pages> pp. 157-224, </pages> <year> 1988. </year>
Reference-contexts: The network structure within a time slice may change over time in a number of ways. First, the 1 Also called influence diagrams [17, 35], recursive graphical models [38], probabilistic causal network [8] causal probabilistic networks [4], causal networks <ref> [24] </ref> and independence networks/graphs [27] 2 This follows the general classification of approaches to model building proposed in [36]: query-driven, decision-driven, value-driven and data-driven. time interval which each network slice covers varies.
Reference: [25] <author> T. Levitt, J. M. Agosta, and T. Binford, </author> <title> "Model-based influence diagrams for machine vision," </title> <booktitle> in Proc. of the Fifth Workshop on Uncertainty in Artificial Intelligence, </booktitle> <pages> pp. 233-244, </pages> <year> 1989. </year>
Reference-contexts: Dynamic Model Construction Bayesian or Belief networks [29] 1 are graphical probabilistic dependency models which integrate a mechanism for inference under uncertainty with a secure Bayesian foundation, were initially applied to static domains, where the network structure does not change over time <ref> [33, 25] </ref>. These approaches involved determining the network structure, supplying prior and conditional probabilities, adding or retracting evidence and repeating the inference algorithm for each change in the evidence.
Reference: [26] <author> S. Mori, C. Chong, E. Tse, and R. Wishner, </author> <title> "Tracking and classifying multiple targets without a priori identification," </title> <journal> IEEE Trans. Automatic Control, </journal> <volume> vol. 31, no. 5, </volume> <pages> pp. 401-409, </pages> <year> 1986. </year>
Reference-contexts: Agogino et al. [1] use real-time influence diagrams for diagnostic reasoning, monitoring and controlling mechanical systems; the diagrams do not have a temporal dimension, and they are not dynamically constructed. Fung [16] extends the work in <ref> [26] </ref> to include dependent targets within a Bayesian Network framework, focusing on strategic situation assessment; this system is also based on data-driven model construction, although both the details of model construction, and network struc ture differ substantially from that described in this paper.
Reference: [27] <author> R. </author> <title> Neapolitan, Probabilistic Reasoning in Expert Systems. </title> <publisher> Wiley & Sons, Inc., </publisher> <year> 1990. </year>
Reference-contexts: The network structure within a time slice may change over time in a number of ways. First, the 1 Also called influence diagrams [17, 35], recursive graphical models [38], probabilistic causal network [8] causal probabilistic networks [4], causal networks [24] and independence networks/graphs <ref> [27] </ref> 2 This follows the general classification of approaches to model building proposed in [36]: query-driven, decision-driven, value-driven and data-driven. time interval which each network slice covers varies.
Reference: [28] <author> A. E. Nicholson, </author> <title> Monitoring Discrete Environments using Dynamic Belief Networks. </title> <type> PhD thesis, </type> <institution> Dept. of Engineering Sciences, Oxford University, </institution> <year> 1992. </year>
Reference-contexts: However it is possible to structure the network, by introducing an additional intermediate level of node to represent the change in the agent position, (i.e., by introducing independence assumptions), to reduce the size of the joint distributions. Details of this structure are given in <ref> [28] </ref>. The choice of network structure will depend on whether the monitoring system's focus is on the contents of regions or about the position of individual agents; this focus, and hence the choice of network structure, may change over time. <p> It is possible to compare the predicted beliefs with the observation updated beliefs to learn the agent motion models represented by the motion priors and the count functions <ref> [28] </ref>. 5 Sensor Validation In this section we address the problem of sensor validation for the robot monitoring domain. We begin with a review of quantitative approaches. 5.1 Quantitative Methods Quantitative approaches to tracking and sensor validation involve a noise model; random perturbations which usually have only a small effect. <p> The higher level reasoning and additional expansion of the DBN which is required to handle this missing data is given in <ref> [28] </ref>. If the time stamp is incorrect but the temporal order of the observation data nodes added to the network is correct, then wrong time data will only affect the system's temporal reasoning, for example comparing against schedules and predictions. <p> We can increase the BC-INV states to [work, def-ghost, def-dir, def-miss], for ghost data, wrong direction data and missing data respectively. Details of these additional states, as well as results for various combinations of p, d and X may be found in <ref> [28] </ref>. 5.6 Using sensor validation structures The monitoring system must decide during dynamic model construction when to add additional sensor validation structures using an internal knowledge-driven mechanism. <p> Experimental results showing how exact pruning based on initialisation information reduces the join-tree cost [14], a measure of the cost of network inference using the Jensen version of the Lauritzen and Spiegelhalter algorithm, are given in <ref> [28] </ref>. <p> In this case, the driver must recall the original assumption that the speedometer is working and question its validity. In <ref> [28] </ref> we outline a method of making assumptions using thresholds which can be used in conjunction with the pruning mechanism described in the previous section.
Reference: [29] <author> J. Pearl, </author> <title> Probabilistic Reasoning in Intelligent Systems. </title> <address> San Mateo, Ca.: </address> <publisher> Morgan Kaufmann, </publisher> <year> 1988. </year>
Reference-contexts: Continuing the previous example, the system would maintain two alternatives - (1) the agent has turned the corner (2) the sensor data was wrong until subsequent data resolves this currently local ambiguity. Dynamic Model Construction Bayesian or Belief networks <ref> [29] </ref> 1 are graphical probabilistic dependency models which integrate a mechanism for inference under uncertainty with a secure Bayesian foundation, were initially applied to static domains, where the network structure does not change over time [33, 25]. <p> This evidence is propagated through the network affecting the overall joint distribution (as represented by the conditional probabilities). There are a number of exact inference algorithms available for performing belief updating <ref> [29] </ref>; these fall within the general classes of clustering, conditioning, and stochastic simulation. In this paper we are not concerned with the particular algorithm, but will generally refer to the "inference algorithm". Types of Nodes Dynamic belief networks for monitoring or planning applications have the following general characteristics. <p> The initial beliefs (i.e. 8 This model includes observations as specific evidence for a variable, the BC-OBS node. One possible alternative would be to model the uncertainty in the accuracy of the observation by using virtual evidence <ref> [29] </ref>, which is given as a likelihood ratio of the states of the BC-OBS node.
Reference: [30] <author> G. M. Provan, </author> <title> "Tradeoffs in constructing and evaluating temporal influence diagrams," </title> <booktitle> in Proceedings of the 9th Conference on Uncertainty in Artificial Intelligence, </booktitle> <pages> pp. 40-47, </pages> <year> 1993. </year>
Reference-contexts: Dagum et al. [10] present a probabilistic forecasting methodology using dynamic network models, using an example model for forecasting U.S. car sales in Japan. In this work the focus is more on the prediction and decision theoretic aspects of the problem. Provan <ref> [30] </ref> also addresses the tradeoffs between model adequacy and computation feasibility when dynamically constructing Temporal Influence Diagrams, and makes similar suggestions for tailoring the network and limiting how many variables are considered for each time interval.
Reference: [31] <author> B. S. Y. Rao, </author> <title> Data Fusion Methods in Decentralized Sensing Systems. </title> <type> PhD thesis, </type> <institution> Dept. of Engineering Sciences, Oxford University, </institution> <year> 1991. </year>
Reference-contexts: One approach is to apply more sensors and more discriminating sensors (e.g. <ref> [31] </ref>), which certainly provides the monitoring system with more observation data. <p> In conventional tracking systems <ref> [31] </ref>, where each single agent is tracked by a filter, this involves choosing which pieces of data to use to update a filter. In single tracking cases the data is considered to have two possible sources: the agent or "clutter". <p> In (b) the validation regions overlap, so each track is associated with the "best possible" data point. The multiple hypothesis method for this association is optimal but has exponential complexity; a number of sub-optimal methods have been proposed <ref> [31] </ref>. together with observations z taken at that time: (a) unambiguous data association (b) a more difficult DAP. Our DBN does not explicitly store agent information with sensor crossing nodes, so we do not formulate the problem as "which agent generated each sensor crossing?".
Reference: [32] <author> R. Shachter, </author> <title> "Evaluating influence diagrams," </title> <journal> Operations Research, </journal> <volume> vol. 34, </volume> <pages> pp. 871-882, </pages> <year> 1986. </year>
Reference-contexts: Information from the inference based on evidence in parts of the network now deleted can be retained to a certain extent, by methods such as Kjrulff's model reduction [23] and the network reduction described in [14], both based on work by Shachter <ref> [32] </ref>; loss of information may occur if there were conditional dependencies amongst the successors of deleted nodes. In our domain, often the central interest is the positions of the agents, i.e the POS i (T) nodes would be the designated world nodes.
Reference: [33] <author> D. Spiegelhalter, R. Franklin, and K. Bull, </author> <title> "Assessment criticism and improvement of imprecise subject probabilities for a medical expert system," </title> <booktitle> in Proc. of the Fifth Workshop on Uncertainty in Artificial Intelligence, </booktitle> <pages> pp. 335-342, </pages> <year> 1989. </year>
Reference-contexts: Dynamic Model Construction Bayesian or Belief networks [29] 1 are graphical probabilistic dependency models which integrate a mechanism for inference under uncertainty with a secure Bayesian foundation, were initially applied to static domains, where the network structure does not change over time <ref> [33, 25] </ref>. These approaches involved determining the network structure, supplying prior and conditional probabilities, adding or retracting evidence and repeating the inference algorithm for each change in the evidence.
Reference: [34] <author> S. Srinivas and J. Breese, </author> <title> "Ideal: Influence diagram evaluation and analysis in lisp," </title> <type> Tech. Rep. Technical Memorandum No. 23, </type> <institution> Rockwell International Science Center, </institution> <year> 1989. </year>
Reference-contexts: indicate those for which evidence is added | the agent's initial position and two sets of sensor crossing data. 3.5 Results The results for the robot monitoring DBN presented in this paper were generated by a Lisp implementation of the DBN system based on the belief network development environment IDEAL <ref> [34] </ref>, using Kyoto Common Lisp, on a Sparc-2. The inference algorithm used was the Jensen version of the Lauritzen-Spiegelhalter clustering algorithm, currently the fastest exact inference algorithm available. 4 We use the example environment shown in Figure 3 (a).
Reference: [35] <author> J. A. Tatman and R. D. Shachter, </author> <title> "Dynamic programming and influence diagrams," </title> <journal> IEEE Trans. Systems Man and Cybernetics, </journal> <volume> vol. 20, no. 2, </volume> <pages> pp. 365-379, </pages> <year> 1990. </year>
Reference-contexts: The network structure within a time slice may change over time in a number of ways. First, the 1 Also called influence diagrams <ref> [17, 35] </ref>, recursive graphical models [38], probabilistic causal network [8] causal probabilistic networks [4], causal networks [24] and independence networks/graphs [27] 2 This follows the general classification of approaches to model building proposed in [36]: query-driven, decision-driven, value-driven and data-driven. time interval which each network slice covers varies.
Reference: [36] <author> M. P. Wellman, J. S. Breese, and R. P. Goldman, </author> <title> "From knowledge bases to decision models," </title> <journal> The Knowledge Engineering Review, </journal> <volume> vol. 7, no. 1, </volume> <pages> pp. 35-53, </pages> <year> 1992. </year>
Reference-contexts: First, the 1 Also called influence diagrams [17, 35], recursive graphical models [38], probabilistic causal network [8] causal probabilistic networks [4], causal networks [24] and independence networks/graphs [27] 2 This follows the general classification of approaches to model building proposed in <ref> [36] </ref>: query-driven, decision-driven, value-driven and data-driven. time interval which each network slice covers varies. Some of the conditional probability distributions in the new slice being added may be functions of both this time interval and the external world time. <p> When considering control of model construction, a central issue is the size and level of detail of the model to be constructed <ref> [36] </ref>. The model construction algorithm must balance the benefits of a larger model (it may be more detailed and more accurate) with the disadvantages (larger costs of construction and evaluation, the possibility of additional structural and parametric uncertainties).
Reference: [37] <author> N. Wermuth, </author> <title> "Moderating effects in multivariate normal distributions.," </title> <journal> Methodika, </journal> <volume> vol. III, </volume> <pages> pp. 74-93, </pages> <year> 1989. </year>
Reference-contexts: We adapt an idea that has been used in other research areas, that of a moderating or invalidating condition. In the social sciences and psychology, the term "moderator" is used for an alternative variable that "messes up" or "moderates" the relationship between other variables <ref> [40, 37] </ref>. A similar idea has been used in expert system research; in [2] such nodes are called "invalidators", and similar nodes are also used in [1].
Reference: [38] <author> N. Wermuth and S. Lauritzen, </author> <title> "Graphical and recursive models for contingency tables," </title> <journal> Biometrika, </journal> <volume> vol. 70, no. 3, </volume> <pages> pp. 537-552, </pages> <year> 1983. </year>
Reference-contexts: The network structure within a time slice may change over time in a number of ways. First, the 1 Also called influence diagrams [17, 35], recursive graphical models <ref> [38] </ref>, probabilistic causal network [8] causal probabilistic networks [4], causal networks [24] and independence networks/graphs [27] 2 This follows the general classification of approaches to model building proposed in [36]: query-driven, decision-driven, value-driven and data-driven. time interval which each network slice covers varies.
Reference: [39] <author> P. H. Winston, </author> <booktitle> Artificial Intelligence. </booktitle> <address> Mass.: </address> <publisher> Addison-Wesley Publishing Co., </publisher> <year> 1977. </year>
Reference-contexts: A similar idea has been used in expert system research; in [2] such nodes are called "invalidators", and similar nodes are also used in [1]. Of course, this idea is also familiar to the AI community; Winston <ref> [39] </ref> described the notion of a censor, which acts as an "unless" condition: if a BC-ACT occurs, then BC-OBS will be generated unless the sensor is defective. We add a node, BC-INV, the invalidating node, which has two states, [work, def], short for "working" and "defective".
Reference: [40] <author> S. Zedeck, </author> <title> "Problems with the use of moderator variables," </title> <journal> Psychological Bulletin, </journal> <volume> vol. 76, </volume> <pages> pp. 295-310, </pages> <year> 1971. </year>
Reference-contexts: We adapt an idea that has been used in other research areas, that of a moderating or invalidating condition. In the social sciences and psychology, the term "moderator" is used for an alternative variable that "messes up" or "moderates" the relationship between other variables <ref> [40, 37] </ref>. A similar idea has been used in expert system research; in [2] such nodes are called "invalidators", and similar nodes are also used in [1].
References-found: 40

