URL: ftp://ftp.eecs.umich.edu/groups/Ealgebras/grammarEA2.ps
Refering-URL: http://www.eecs.umich.edu/gasm/new1995.html
Root-URL: http://www.cs.umich.edu
Email: djohns@watson.ibm.com lmoss@indiana.edu  
Title: Evolving Algebras and Mathematical Models of Language  
Author: David E. Johnson Lawrence S. Moss 
Address: Yorktown Heights, NY 10598 Bloomington, IN 47401  
Affiliation: Mathematical Sciences Department Mathematics Department Thomas J. Watson Research Center Computer Science Department IBM Research Division Indiana University  
Abstract: We consider the use of evolving algebra methods of specifying grammars for natural languages. We are especially interested in distributed evolving algebras. We provide the motivation for doing this, and we give a reconstruction of some classical grammatical formalisms in directly dynamic terms. Finally, we consider some technical questions arising from the use of direct dynamism in grammatical formalisms.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E. Borger and D. Rosenzweig. </author> <title> A simple mathematical model for full prolog. </title> <type> Tech. Report TR-33/92, </type> <institution> Dipartimento di Informatica, U. Pisa, </institution> <year> 1992. </year>
Reference-contexts: In addition, declarative SFG requires that its structures must be fully justified; the exact definition is complex. As we 18 2 6 6 6 [Cat] S [Head] gave [3] Mary [2] tea 7 7 7 5 Dative ====) 6 6 6 4 <ref> [1] </ref> Joe [Head] gave [3; 2] Mary [2; 8] tea 7 7 7 5 Passive ====) 6 6 6 4 [1; 8] Joe [Head] gave [3; 2; 1] Mary [2; 8] tea 7 7 7 5 Raising & By-Flagging ======) 6 6 6 6 6 6 6 6 6 6 6 <p> As we 18 2 6 6 6 [Cat] S [Head] gave [3] Mary [2] tea 7 7 7 5 Dative ====) 6 6 6 4 [1] Joe [Head] gave [3; 2] Mary [2; 8] tea 7 7 7 5 Passive ====) 6 6 6 4 <ref> [1; 8] </ref> Joe [Head] gave [3; 2; 1] Mary [2; 8] tea 7 7 7 5 Raising & By-Flagging ======) 6 6 6 6 6 6 6 6 6 6 6 [Cat] S [0; 1] i Mary [Head] was [Comp] 2 6 6 6 6 6 6 6 [Cat] VP [Head] <p> As we 18 2 6 6 6 [Cat] S [Head] gave [3] Mary [2] tea 7 7 7 5 Dative ====) 6 6 6 4 [1] Joe [Head] gave [3; 2] Mary [2; 8] tea 7 7 7 5 Passive ====) 6 6 6 4 [1; 8] Joe [Head] gave <ref> [3; 2; 1] </ref> Mary [2; 8] tea 7 7 7 5 Raising & By-Flagging ======) 6 6 6 6 6 6 6 6 6 6 6 [Cat] S [0; 1] i Mary [Head] was [Comp] 2 6 6 6 6 6 6 6 [Cat] VP [Head] given [2; 8] tea [0; <p> gave [3; 2] Mary [2; 8] tea 7 7 7 5 Passive ====) 6 6 6 4 [1; 8] Joe [Head] gave [3; 2; 1] Mary [2; 8] tea 7 7 7 5 Raising & By-Flagging ======) 6 6 6 6 6 6 6 6 6 6 6 [Cat] S <ref> [0; 1] </ref> i Mary [Head] was [Comp] 2 6 6 6 6 6 6 6 [Cat] VP [Head] given [2; 8] tea [0; 8] 6 [Cat] PP [0; M arked] ii Joe 3 5 7 7 7 7 7 7 7 5 7 7 7 7 7 7 7 7 7
Reference: [2] <author> E. Borger and D. Rosenzweig. </author> <title> The WAM definition and compiler correctness. </title> <type> Tech. Report TR-33/92, </type> <institution> Dipartimento di Informatica, U. Pisa, </institution> <year> 1992. </year>
Reference-contexts: In addition, declarative SFG requires that its structures must be fully justified; the exact definition is complex. As we 18 2 6 6 6 [Cat] S [Head] gave [3] Mary <ref> [2] </ref> tea 7 7 7 5 Dative ====) 6 6 6 4 [1] Joe [Head] gave [3; 2] Mary [2; 8] tea 7 7 7 5 Passive ====) 6 6 6 4 [1; 8] Joe [Head] gave [3; 2; 1] Mary [2; 8] tea 7 7 7 5 Raising & By-Flagging <p> In addition, declarative SFG requires that its structures must be fully justified; the exact definition is complex. As we 18 2 6 6 6 [Cat] S [Head] gave [3] Mary [2] tea 7 7 7 5 Dative ====) 6 6 6 4 [1] Joe [Head] gave <ref> [3; 2] </ref> Mary [2; 8] tea 7 7 7 5 Passive ====) 6 6 6 4 [1; 8] Joe [Head] gave [3; 2; 1] Mary [2; 8] tea 7 7 7 5 Raising & By-Flagging ======) 6 6 6 6 6 6 6 6 6 6 6 [Cat] S [0; 1] <p> In addition, declarative SFG requires that its structures must be fully justified; the exact definition is complex. As we 18 2 6 6 6 [Cat] S [Head] gave [3] Mary [2] tea 7 7 7 5 Dative ====) 6 6 6 4 [1] Joe [Head] gave [3; 2] Mary <ref> [2; 8] </ref> tea 7 7 7 5 Passive ====) 6 6 6 4 [1; 8] Joe [Head] gave [3; 2; 1] Mary [2; 8] tea 7 7 7 5 Raising & By-Flagging ======) 6 6 6 6 6 6 6 6 6 6 6 [Cat] S [0; 1] i Mary [Head] <p> As we 18 2 6 6 6 [Cat] S [Head] gave [3] Mary [2] tea 7 7 7 5 Dative ====) 6 6 6 4 [1] Joe [Head] gave [3; 2] Mary [2; 8] tea 7 7 7 5 Passive ====) 6 6 6 4 [1; 8] Joe [Head] gave <ref> [3; 2; 1] </ref> Mary [2; 8] tea 7 7 7 5 Raising & By-Flagging ======) 6 6 6 6 6 6 6 6 6 6 6 [Cat] S [0; 1] i Mary [Head] was [Comp] 2 6 6 6 6 6 6 6 [Cat] VP [Head] given [2; 8] tea [0; <p> 6 6 6 [Cat] S [Head] gave [3] Mary [2] tea 7 7 7 5 Dative ====) 6 6 6 4 [1] Joe [Head] gave [3; 2] Mary <ref> [2; 8] </ref> tea 7 7 7 5 Passive ====) 6 6 6 4 [1; 8] Joe [Head] gave [3; 2; 1] Mary [2; 8] tea 7 7 7 5 Raising & By-Flagging ======) 6 6 6 6 6 6 6 6 6 6 6 [Cat] S [0; 1] i Mary [Head] was [Comp] 2 6 6 6 6 6 6 6 [Cat] VP [Head] given [2; 8] tea [0; 8] 6 [Cat] PP <p> Joe [Head] gave [3; 2; 1] Mary <ref> [2; 8] </ref> tea 7 7 7 5 Raising & By-Flagging ======) 6 6 6 6 6 6 6 6 6 6 6 [Cat] S [0; 1] i Mary [Head] was [Comp] 2 6 6 6 6 6 6 6 [Cat] VP [Head] given [2; 8] tea [0; 8] 6 [Cat] PP [0; M arked] ii Joe 3 5 7 7 7 7 7 7 7 5 7 7 7 7 7 7 7 7 7 7 7 know, a requirement of justification amounts to a requirement that a structure be obtained from a run
Reference: [3] <author> N. Correa. </author> <title> Attribute and unification grammar: A review and analysis of formalisms. </title> <journal> Linguistics and Philosophy, </journal> <volume> 199? </volume>
Reference-contexts: The equals sign here is not an assignment statement but rather is a node-admissibility condition. For more background, cf. Knuth [12] or Correa <ref> [3] </ref>. Now AG's do have an intuitive dynamics in the sense that we think of the attributes as somehow being dynamically determined by the rules. This dynamism is complicated because attributes may be either synthesized or inherited. In general, combining the top-down and bottom-up information is likely to be complicated. <p> This dynamism is complicated because attributes may be either synthesized or inherited. In general, combining the top-down and bottom-up information is likely to be complicated. For this reason, Correa <ref> [3] </ref> holds that "Most practical attribute evaluators are static and may be generated only for certain subclasses of attributed grammar : : :." These subclasses include those in which all the attributes in a derivation may be taken to be synthesized (S-grammars), in which case the dynamism is transparent. <p> In addition, declarative SFG requires that its structures must be fully justified; the exact definition is complex. As we 18 2 6 6 6 [Cat] S [Head] gave <ref> [3] </ref> Mary [2] tea 7 7 7 5 Dative ====) 6 6 6 4 [1] Joe [Head] gave [3; 2] Mary [2; 8] tea 7 7 7 5 Passive ====) 6 6 6 4 [1; 8] Joe [Head] gave [3; 2; 1] Mary [2; 8] tea 7 7 7 5 Raising <p> In addition, declarative SFG requires that its structures must be fully justified; the exact definition is complex. As we 18 2 6 6 6 [Cat] S [Head] gave [3] Mary [2] tea 7 7 7 5 Dative ====) 6 6 6 4 [1] Joe [Head] gave <ref> [3; 2] </ref> Mary [2; 8] tea 7 7 7 5 Passive ====) 6 6 6 4 [1; 8] Joe [Head] gave [3; 2; 1] Mary [2; 8] tea 7 7 7 5 Raising & By-Flagging ======) 6 6 6 6 6 6 6 6 6 6 6 [Cat] S [0; 1] <p> As we 18 2 6 6 6 [Cat] S [Head] gave [3] Mary [2] tea 7 7 7 5 Dative ====) 6 6 6 4 [1] Joe [Head] gave [3; 2] Mary [2; 8] tea 7 7 7 5 Passive ====) 6 6 6 4 [1; 8] Joe [Head] gave <ref> [3; 2; 1] </ref> Mary [2; 8] tea 7 7 7 5 Raising & By-Flagging ======) 6 6 6 6 6 6 6 6 6 6 6 [Cat] S [0; 1] i Mary [Head] was [Comp] 2 6 6 6 6 6 6 6 [Cat] VP [Head] given [2; 8] tea [0;
Reference: [4] <author> P. Glavan and D. Rosenzweig. </author> <title> Communicating evolving algebras. </title> <booktitle> In Proceedings of the Workshop on Computer Science Logic. </booktitle> <publisher> Springer LNCS, to appear. </publisher>
Reference: [5] <author> Y. Gurevich. </author> <title> Evolving algebras: a tutorial introduction. </title> <journal> Bulletin of the European Association for Theoretical Computer Science, </journal> <volume> 43 </volume> <pages> 264-286, </pages> <year> 1991. </year>
Reference: [6] <author> Y. Gurevich and J. Morris. </author> <title> Algebraic operational semantics and Modula-2. </title> <booktitle> In Proceedings of the First Workshop on Computer Science Logic, </booktitle> <pages> pages 81-101. </pages> <publisher> Springer LNCS 329, </publisher> <year> 1987. </year>
Reference: [7] <author> Y. Gurevich and J. Huggins. </author> <title> The semantics of the C programming language. </title> <booktitle> In Pro--ceedings of the Workshop on Computer Science Logic. </booktitle> <publisher> Springer LNCS, to appear. </publisher>
Reference: [8] <author> Y. Gurevich and L.S. Moss. </author> <title> Algebraic operational semantics and Occam. </title> <editor> In E. Borger (et al), editor, </editor> <booktitle> Proceedings of the Third Workshop on Computer Science Logic, </booktitle> <pages> pages 176-196. </pages> <publisher> Springer LNCS 440, </publisher> <year> 1990. </year>
Reference-contexts: This co-evolution of two nodes is something that is straightforward to express in our setting; indeed, it is exactly the analog of communication as it occurs in the formalization of Occam <ref> [8] </ref>. <p> In addition, declarative SFG requires that its structures must be fully justified; the exact definition is complex. As we 18 2 6 6 6 [Cat] S [Head] gave [3] Mary [2] tea 7 7 7 5 Dative ====) 6 6 6 4 [1] Joe [Head] gave [3; 2] Mary <ref> [2; 8] </ref> tea 7 7 7 5 Passive ====) 6 6 6 4 [1; 8] Joe [Head] gave [3; 2; 1] Mary [2; 8] tea 7 7 7 5 Raising & By-Flagging ======) 6 6 6 6 6 6 6 6 6 6 6 [Cat] S [0; 1] i Mary [Head] <p> As we 18 2 6 6 6 [Cat] S [Head] gave [3] Mary [2] tea 7 7 7 5 Dative ====) 6 6 6 4 [1] Joe [Head] gave [3; 2] Mary [2; 8] tea 7 7 7 5 Passive ====) 6 6 6 4 <ref> [1; 8] </ref> Joe [Head] gave [3; 2; 1] Mary [2; 8] tea 7 7 7 5 Raising & By-Flagging ======) 6 6 6 6 6 6 6 6 6 6 6 [Cat] S [0; 1] i Mary [Head] was [Comp] 2 6 6 6 6 6 6 6 [Cat] VP [Head] <p> 6 6 6 [Cat] S [Head] gave [3] Mary [2] tea 7 7 7 5 Dative ====) 6 6 6 4 [1] Joe [Head] gave [3; 2] Mary <ref> [2; 8] </ref> tea 7 7 7 5 Passive ====) 6 6 6 4 [1; 8] Joe [Head] gave [3; 2; 1] Mary [2; 8] tea 7 7 7 5 Raising & By-Flagging ======) 6 6 6 6 6 6 6 6 6 6 6 [Cat] S [0; 1] i Mary [Head] was [Comp] 2 6 6 6 6 6 6 6 [Cat] VP [Head] given [2; 8] tea [0; 8] 6 [Cat] PP <p> Joe [Head] gave [3; 2; 1] Mary <ref> [2; 8] </ref> tea 7 7 7 5 Raising & By-Flagging ======) 6 6 6 6 6 6 6 6 6 6 6 [Cat] S [0; 1] i Mary [Head] was [Comp] 2 6 6 6 6 6 6 6 [Cat] VP [Head] given [2; 8] tea [0; 8] 6 [Cat] PP [0; M arked] ii Joe 3 5 7 7 7 7 7 7 7 5 7 7 7 7 7 7 7 7 7 7 7 know, a requirement of justification amounts to a requirement that a structure be obtained from a run <p> [3; 2; 1] Mary [2; 8] tea 7 7 7 5 Raising & By-Flagging ======) 6 6 6 6 6 6 6 6 6 6 6 [Cat] S [0; 1] i Mary [Head] was [Comp] 2 6 6 6 6 6 6 6 [Cat] VP [Head] given [2; 8] tea <ref> [0; 8] </ref> 6 [Cat] PP [0; M arked] ii Joe 3 5 7 7 7 7 7 7 7 5 7 7 7 7 7 7 7 7 7 7 7 know, a requirement of justification amounts to a requirement that a structure be obtained from a run of some sort <p> The formalization of racing processes (for example, where a process waits for input on two channels and acts according to whichever channel was ready first) in our terms can be found in <ref> [8] </ref>; that paper specifically considers the ALT feature of Occam. We suggest that it would be interesting to design grammatical formalisms which incorporate temporal information, and that the use of evolving algebras might make such grammars easier to propose and study.
Reference: [9] <author> D. E. Johnson, A. Meyers, and L. S. Moss. </author> <title> Parsing with relational grammar. </title> <booktitle> In Proeedings of the 31st Annual Meeting of the Association for Computational Linguistics, to appear. </booktitle>
Reference-contexts: We feel that SFG could be entirely recast dynamically. In fact, something along these lines has already been done in the implementation of SFG <ref> [9] </ref>. We might note that like TAG's, the primary building blocks of SFG are fragments of graphs which are associated with lexical items.
Reference: [10] <author> D. E. Johnson and L. S. Moss. </author> <title> Generalizing feature structures for stratified relational analyses. </title> <booktitle> To appear in the proceedings of the University of Illinois conference on linguistics and computation, </booktitle> <month> June </month> <year> 1991, 1991. </year>
Reference-contexts: In the last position, 0 indicates that the target of the edge does not bear a surface relation to the source. More detailed discussion of these and other rules can be found in <ref> [10] </ref>.) As it stands, SFG is a purely declarative framework. However, it is based on intuitively dynamic notions. The main dynamism in SFG is that the edge sequences are obtained through a kind of updating process.
Reference: [11] <author> D. E. Johnson and L. S. Moss. </author> <title> Some formal properties of stratified feature grammars. </title> <journal> Annals of Mathematics and Artificial Intelligence, </journal> <year> 1993. </year>
Reference: [12] <author> D. Knuth. </author> <title> Semantics of context-free languages. </title> <journal> Mathematical Systems Theory, </journal> <volume> 2, No. 2 </volume> <pages> 127-145, </pages> <year> 1968. </year>
Reference-contexts: The equals sign here is not an assignment statement but rather is a node-admissibility condition. For more background, cf. Knuth <ref> [12] </ref> or Correa [3]. Now AG's do have an intuitive dynamics in the sense that we think of the attributes as somehow being dynamically determined by the rules. This dynamism is complicated because attributes may be either synthesized or inherited. <p> We stress that our EA's are non-deterministic, so the transition rules do not specify an algorithm for evaluating attributes. A complete run of a machine for a given grammar corresponds to a series of attribute definitions which cannot be extended. As Knuth <ref> [12] </ref> remarks, "The process of attribute definition is to be applied throughout the tree until no more attribute values can be defined : : :". Runs which end with output from the root correspond exactly to AG parses.
Reference: [13] <author> W. E. Marsh. </author> <title> Graphs and grammars. </title> <editor> In A. Manaster-Ramer, editor, </editor> <booktitle> Mathematics of Language. </booktitle> <publisher> John Benjamins, </publisher> <year> 1987. </year>
Reference-contexts: There are natural static maps first-child : U fl cat ! U cat and rest : U fl cat ! U fl new data are maps l and r from U cat to U fl cat . 5.6 Grammars Based on Graphs Marsh <ref> [13] </ref> presents three kinds of grammars which use graphs which are not trees. He specifically studies Pereira's extraposition grammars, Peters and Ritchie's phrase-link grammars and his own mother-and-daughter grammars.
Reference: [14] <author> D. Milward. </author> <title> Dynamics, dependency grammar and incremental interpretation. </title> <booktitle> Proceedings of COLING 92, </booktitle> <volume> vol. 4 </volume> <pages> 1095-1099, </pages> <year> 1992. </year>
Reference-contexts: In this way, every string in the language of a given TAG G is the output of at least one run of the evolving algebra M G corresponding to G. 5.5 Dynamic Dependency Grammars Milward <ref> [14] </ref> introduces lexicalized dependency grammars (LDG's) and dynamic dependency grammars (DDG's). The former are a lexicalized version of the much older dependency grammars. As such, the framework follows the now-familiar pattern of a static rendering of more dynamic ideas; these are made explicit in DDG.
Reference: [15] <author> B. Partee, A. ter Meulen, and R. E. Wall. </author> <title> Mathematical Methods In Linguistics. </title> <publisher> Kluwer, </publisher> <address> Dordrecht, </address> <year> 1990. </year>
Reference-contexts: For more background on these formalisms, see,e.g. Partee et al <ref> [15] </ref>. We might mention here that it is possible to characterize the context-sensitive languages in terms of runs of evolving algebras. However, in contrast to the extensions below, the work for CSL's is much more involved. <p> We shall follow the exposition in section 21.3 of Partee et al <ref> [15] </ref>; this follows Weir et al [20] who used a result of Roach [19] to simplify the presentation of head grammars. Accordingly, an HG derivation generates strings of terminals which in general contain a split string marker ".
Reference: [16] <author> F. Pereira. </author> <title> Extraposition grammars. </title> <journal> American Journal of Computational Linguistics, </journal> <volume> vol. 7, no. 4 </volume> <pages> 243-256, </pages> <year> 1981. </year>
Reference: [17] <author> F. Pereira and D. H. D. Warren. </author> <title> Definite clause grammars for language analysis a survey of the formalism and a comparison with augmented transition networks. </title> <journal> Artificial Intellingence, </journal> <volume> vol. 13 </volume> <pages> 231-278, </pages> <year> 1980. </year>
Reference: [18] <author> C. Pollard. </author> <title> Generalized Phrase Structure Grammars, Head Grammars, and Natural Language. </title> <type> PhD thesis, </type> <institution> Stanford University, </institution> <year> 1984. </year>
Reference-contexts: definitions would depend on which characterization of CSL's is used, but we know of no way to do it that does not bring in new modes or universes. 5.1 Head Grammars One simple extension of the EA in the Section 3 is to the head grammars first studied by Pollard <ref> [18] </ref>. We shall follow the exposition in section 21.3 of Partee et al [15]; this follows Weir et al [20] who used a result of Roach [19] to simplify the presentation of head grammars.
Reference: [19] <author> K. Roach. </author> <title> Formal properties of head grammars. </title> <editor> In A. Manaster-Ramer, editor, </editor> <booktitle> Mathematics of Language. </booktitle> <publisher> John Benjamins, </publisher> <year> 1987. </year>
Reference-contexts: We shall follow the exposition in section 21.3 of Partee et al [15]; this follows Weir et al [20] who used a result of Roach <ref> [19] </ref> to simplify the presentation of head grammars. Accordingly, an HG derivation generates strings of terminals which in general contain a split string marker ".
Reference: [20] <author> D. J. Weir, K. Vijay-Shanker, and A. K. Joshi. </author> <title> Combinatory categorial grammars: generative power and relationship to linear context-free rewriting systems. </title> <booktitle> In Proceedings of the 26th Meeting of the Association for Computational Linguistics, </booktitle> <year> 1986. </year> <month> 21 </month>
Reference-contexts: We shall follow the exposition in section 21.3 of Partee et al [15]; this follows Weir et al <ref> [20] </ref> who used a result of Roach [19] to simplify the presentation of head grammars. Accordingly, an HG derivation generates strings of terminals which in general contain a split string marker ".
References-found: 20

