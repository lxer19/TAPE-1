URL: http://www.cs.uni-bonn.de/~schulz/VrVisIecon98.ps
Refering-URL: http://www.cs.uni-bonn.de/~schulz/
Root-URL: http://cs.uni-bonn.de
Title: Virtual Reality Visualization of Distributed Tele-Experiments  
Author: Armin Hopp Dirk Schulz Wolfram Burgard Armin B. Cremers Dieter Fellner 
Note: To appear in Proc. of 1998 IEEE Industrial Electronics Conference  
Address: Bonn, 53117 Bonn, Germany  (IECON98), Aachen Germany  
Affiliation: Department of Computer Science III, University of  
Abstract: The increased costs of laboratory environments such as mobile robots and the specialization of research groups increase the demand for collaboration between different research groups. Although the Internet can be regarded as the most important medium for cooperation over large distances, it does not provide the necessary bandwidth for the transmission of video-streams required for example during a tele-experiment with a mobile robot. In this paper we present a combination of a tele-experimentation environment for autonomous mobile robots (RTL) with a minimal rendering tool-kit for virtual reality (MRT-VR). The RTL-system includes means for bridging transmission gaps by using simulation techniques to predict the robots actions and supports automatic viewpoint selection for virtual cameras in the MRT-VR system. The MRT-VR allows the on-line visualization of experiments in a virtual environment. MRT-VR additionally supports natural navigation of the user through the 3D virtual environment in various aspects. It includes a collision detection to avoid that users get inside of objects such as walls or cupboards and supports climbing of stairs. Additionally users can select different viewpoints or even automatically follow the robot during its operation. Finally it supports the synchronization of the viewpoints for distributed observers. This paper demonstrates, that by combining both techniques an improved visualization quality with respect to the precision of the simulation and the ease of operation of tele-operated systems is obtained. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> B. Brunner, K. Landzettel, B. M. Steinmetz, and G. Hirzinger. </author> <title> Tele-sensor-programming a task-directed programming approach for sensor-based space robots. </title> <booktitle> In Proc. of the Int. Conf. on Advanced Robotics (ICAR), </booktitle> <year> 1995. </year>
Reference-contexts: The RTL-system controls the MRT-VR system by transmitting the current pose of the robot and by automatically selecting viewpoints in the virtual scene. Computer graphics visualizations are widely used in tele-operation interfaces for mobile robots, especially during space missions <ref> [9, 1] </ref>, where the transmission delays are extremely large (up to several minutes) and only a low bandwidth is available. The visualization interfaces used are specialized for the remote control of a robot under these conditions.
Reference: [2] <author> J. Buhmann, W. Burgard, A. B. Cremers, D. Fox, T. Hof-mann, F. Schneider, J. Strikos, and S. Thrun. </author> <title> The mobile robot Rhino. </title> <journal> AI Magazine, </journal> <volume> 16(2):3138, </volume> <month> Summer </month> <year> 1995. </year>
Reference-contexts: Furthermore MRT-VR is enhanced by RTL with a simulation based dead reckoning component enabling it to perform smooth animations of software controlled 3D objects even when large Internet transmission delays occur. RTL has a client-server architecture [3] (see Figure 4) and has been implemented for the robot RHINO <ref> [2] </ref>, an RWI B21 (see Figure 5). The robot control system of RHINO consists of several software modules, each performing a distinct part of the robot control task, like collision avoidance, robot localization, path-planning and task-planning [12].
Reference: [3] <author> A. Cremers, W. Burgard, and D. Schulz. </author> <title> Architecture of the Robotic Tele Lab. </title> <booktitle> In Proc. of the 1997 Annual Conference on Advances in Multimedia and Simulation, </booktitle> <address> Bochum, Ger-many, </address> <year> 1998. </year>
Reference-contexts: Furthermore MRT-VR is enhanced by RTL with a simulation based dead reckoning component enabling it to perform smooth animations of software controlled 3D objects even when large Internet transmission delays occur. RTL has a client-server architecture <ref> [3] </ref> (see Figure 4) and has been implemented for the robot RHINO [2], an RWI B21 (see Figure 5). The robot control system of RHINO consists of several software modules, each performing a distinct part of the robot control task, like collision avoidance, robot localization, path-planning and task-planning [12].
Reference: [4] <author> S. Deering. </author> <title> Host extensions for IP multicasting. In Request for Comments (RFC) 1112, </title> <institution> Internet Engineering Task Force (IETF), </institution> <month> August </month> <year> 1989. </year>
Reference-contexts: The main design goal for the MRT-VR environment is to support distributed education and design. MRT-VR is developed as an extension to the MBone-Tools [10], a widely used framework for video and audio conferencing over the Internet. The MBone-Tools use multicasting <ref> [4] </ref> an extension to the Internet protocol that provides bandwidth efficient group communication. As demonstrated in [11] mul-ticasting is an ideal communication medium for networked virtual environments with a large number of participants. MRT-VR adds extra capabilities for cooperative work over the Internet to this environment.
Reference: [5] <author> S. M. Drucker and D. Zeltzer. CamDroid: </author> <title> A system for implementing intelligent camera control. </title> <booktitle> In Computer Graphics (SIGGRAPH '95 Proceedings), </booktitle> <year> 1996. </year>
Reference-contexts: Automatic camera control in virtual environments gained increasing attention over the last few years in the Computer Graphics and AI communities, mainly with the focus on the intelligent selection of a viewpoint according to heuristic rules taken from cinematography. Drucker and Zeltzer <ref> [5] </ref> introduce a technique to determine optimal camera positions for individual camera shots in virtual environments. Camera positions are subject to constraints which are derived from cinematographic rules. They are determined using constrained optimization techniques. Because of the complexity of this task the camera positions have to be computed off-line.
Reference: [6] <author> C. Fedor. TCX. </author> <title> An interprocess communication system for building robotic architectures. Programmers guide to version 10.xx. </title> <institution> Carnegie Mellon University, </institution> <address> Pittsburgh, PA, </address> <month> De-cember </month> <year> 1993. </year>
Reference-contexts: To suit the needs of the different application and local network environments in which MRT-VR might be used, this stream can be sent over a variety of different data transport protocols. Among them are MBone as the most advanced communication channel for cooperatively working over the Internet, and TCX <ref> [6] </ref> which is a special communication protocol for robot control systems (see Figure 1). All incoming messages are handled by the object-oriented data replication layer of MRT-VR. A dispatcher decodes the messages determining the action to be taken, e. g. insertion, deletion, and modification of an object.
Reference: [7] <author> D. Fellner and O. Jucknath. </author> <title> MRTSpace multiuser environments using VRML. </title> <booktitle> In Proceedings of WebNet96. </booktitle> <editor> H. Maurer (ed.), </editor> <year> 1996. </year>
Reference-contexts: Navigation While navigating through 3D spaces users often loose their orientation <ref> [7] </ref>, either by stepping into an object, e. g. diving into the ground or ending up between two sides of a wall, or by performing navigation actions, that usually are not carried out in the real world, such as viewing the scene upside down.
Reference: [8] <author> L. He, M. F. Cohen, and D. H. Salesin. </author> <title> The virtual cinematographer: A paradigm for automatic real-time camera control and directing. </title> <booktitle> In Computer Graphics (SIGGRAPH '96 Proceedings), </booktitle> <year> 1996. </year>
Reference-contexts: Camera positions are subject to constraints which are derived from cinematographic rules. They are determined using constrained optimization techniques. Because of the complexity of this task the camera positions have to be computed off-line. He et al. <ref> [8] </ref> present a system that automatically switches between camera positions in a virtual environment. A sequence of actions in the environment is partitioned into a sequence of shots where each shot is assigned a camera which might also perform camera movements.
Reference: [9] <author> B. Hine, P. Hontalas, T. Fong, L. Piguet, E. Nygren, and A. Kline. VEVI: </author> <title> A virtual environment teleoperations interface for planetary exploration. </title> <booktitle> In SAE 25th International Conference on Environmental Systems, </booktitle> <month> July </month> <year> 1995. </year>
Reference-contexts: The RTL-system controls the MRT-VR system by transmitting the current pose of the robot and by automatically selecting viewpoints in the virtual scene. Computer graphics visualizations are widely used in tele-operation interfaces for mobile robots, especially during space missions <ref> [9, 1] </ref>, where the transmission delays are extremely large (up to several minutes) and only a low bandwidth is available. The visualization interfaces used are specialized for the remote control of a robot under these conditions.
Reference: [10] <author> M. Macedonia and D. P. Brutzmann. </author> <title> MBone provides Video and Audio across the Internet. </title> <journal> In IEEE Transactions on Computers, </journal> <year> 1994. </year>
Reference-contexts: The different renderers are all based on one object-oriented scene graph. The main design goal for the MRT-VR environment is to support distributed education and design. MRT-VR is developed as an extension to the MBone-Tools <ref> [10] </ref>, a widely used framework for video and audio conferencing over the Internet. The MBone-Tools use multicasting [4] an extension to the Internet protocol that provides bandwidth efficient group communication. As demonstrated in [11] mul-ticasting is an ideal communication medium for networked virtual environments with a large number of participants.
Reference: [11] <author> M. R. Macedonia, D. P. Brutzman, M. J. Zyda, D. R. Pratt, P. T. Barham, J. Falby, and J. Locke. NPSNET: </author> <title> A multiplayer 3D virtual environment over the internet. </title> <booktitle> In Proceedings of the ACM 1995 Symposium on Interactive 3D Graphics, </booktitle> <year> 1995. </year>
Reference-contexts: MRT-VR is developed as an extension to the MBone-Tools [10], a widely used framework for video and audio conferencing over the Internet. The MBone-Tools use multicasting [4] an extension to the Internet protocol that provides bandwidth efficient group communication. As demonstrated in <ref> [11] </ref> mul-ticasting is an ideal communication medium for networked virtual environments with a large number of participants. MRT-VR adds extra capabilities for cooperative work over the Internet to this environment.
Reference: [12] <author> S. Thrun, A. Bucken, W. Burgard, D. Fox, T. Frohlinghaus, D. Hennig, T. Hofmann, M. Krell, and T. Schimdt. </author> <title> Map learning and high-speed navigation in RHINO. </title> <editor> In D. Ko-rtenkamp, R. Bonasso, and R. Murphy, editors, </editor> <title> AI-based Mobile Robots: Case studies of successful robot systems. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1998. </year> <title> robot. Bottom sequence: RTL automatically switches viewpoints according to a selection scheme specified by the user </title>
Reference-contexts: The robot control system of RHINO consists of several software modules, each performing a distinct part of the robot control task, like collision avoidance, robot localization, path-planning and task-planning <ref> [12] </ref>. The RHINO project focuses on the development of a flexible service robot platform which can be used for example as a delivery robot in office environments as well as a mobile information agent.
References-found: 12

