URL: http://ftp.cs.yale.edu/pub/yarvin/quad.ps
Refering-URL: http://ftp.cs.yale.edu/pub/yarvin/
Root-URL: http://www.cs.yale.edu
Title: Approved for public release: distribution  
Keyword: Generalized Gaussian Quadratures and Singular Value Decompositions of Integral Operators  Keywords: Quadratures, Singular Value Decompositions, Chebyshev Systems, Fast Algorithms.  
Note: May 1996 The authors were supported in part by AFOSR under Grant F49620-93-1-0575, in part by ONR under Grants N00014-89-J-1527 and N00014-96-1-0188, and in part by a fellowship from the Fannie and John Hertz Foundation.  is unlimited.  
Abstract: Generalized Gaussian quadratures appear to have been introduced by Markov [11,12] late in the last century, and have been studied in great detail as a part of modern analysis (see [2,8,9]). They have not been widely used as a computational tool, in part due to an absence of effective numerical schemes for their construction. Recently, a numerical scheme was introduced for the design of such quadratures (see [10]); numerical results presented in [10] indicate that such quadratures dramatically reduce the computational cost of the evaluation of integrals under certain conditions. In this paper, we modify the approach of [10], improving the stability of the scheme and extending its range of applicability. The performance of the method is illustrated with several numerical examples. N. Yarvin and V. Rokhlin Research Report YALEU/DCS/RR-1109 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Abramowitz, I. </author> <title> Stegun, Handbook of Mathematical Functions, Applied Mathematics Series, </title> <institution> National Bureau of Standards, </institution> <address> DC, </address> <year> 1964 </year>
Reference-contexts: One scheme for generating such starting points is the continuation method, which is as follows. Suppose that in addition to the function F : R n ! R n whose zero is to be found, another function G : <ref> [0; 1] </ref> fi R n ! R n is available which possesses the following properties: * 1. For any x 2 R n , * 2. The solution of the equation G (0; x) = 0 (17) is known. * 3. For all t 2 [0; 1], the equation G (t; <p> found, another function G : <ref> [0; 1] </ref> fi R n ! R n is available which possesses the following properties: * 1. For any x 2 R n , * 2. The solution of the equation G (0; x) = 0 (17) is known. * 3. For all t 2 [0; 1], the equation G (t; x) = 0 (18) has a unique solution x such that the conditions of Lemma 3.1 are satisfied. * 4. The solution x is a continuous function of t. <p> A variety of Gaussian quadratures were analyzed in the last century, each being defined by a distinct weight function. Of these, the algorithm presented in this paper uses only the Gaussian quadratures for the weight function !(x) = 1 on the region of integration <ref> [1; 1] </ref>. These quadratures are closely associated with the Legendre polynomials; we will refer to their nodes as Legendre nodes. Another numerical tool used in this paper is polynomial interpolation on Legendre nodes. <p> The lemma makes use of the following properties of the Legendre polynomials: first, that the i'th Legendre polynomial P i has degree i; second, that the polynomials P i form an orthonormal system of functions on <ref> [1; 1] </ref>. Lemma 3.2 Suppose that x 1 ; : : : ; x n 2 [1; 1] are the Legendre nodes of order n, and that w 1 ; : : : ; w n 2 R are the associated Gaussian weights. <p> makes use of the following properties of the Legendre polynomials: first, that the i'th Legendre polynomial P i has degree i; second, that the polynomials P i form an orthonormal system of functions on <ref> [1; 1] </ref>. Lemma 3.2 Suppose that x 1 ; : : : ; x n 2 [1; 1] are the Legendre nodes of order n, and that w 1 ; : : : ; w n 2 R are the associated Gaussian weights. Given a sequence f 1 ; : : : ; f n 2 R, let p : [1; 1] ! R be the interpolating <p> : : ; x n 2 <ref> [1; 1] </ref> are the Legendre nodes of order n, and that w 1 ; : : : ; w n 2 R are the associated Gaussian weights. Given a sequence f 1 ; : : : ; f n 2 R, let p : [1; 1] ! R be the interpolating polynomial of degree n 1 such that p (x i ) = f i for all i = 1; : : : ; n, and let c 0 ; : : : ; c n1 be the coefficients of the Legendre series of p; <p> The first 2n of the left singular functions are then used as input to the main algorithm. 5.1 Continuation Scheme The continuation scheme used is as follows. Let the weight functions ! : <ref> [0; 1] </ref> fi [a; b] ! R + be defined by the formula !(ff; x) = ff! 1 (x) + (1 ff) j=1 where ! 1 is the weight function for which a Gaussian quadrature is desired, ffi denotes the Dirac delta function, and the points c j 2 [a; b] <p> With ff = 0, the Gaussian weights and nodes are w j = 1; (61) for j = 1; : : :; n, whatever the functions i are (since !(0; x) = 0, unless x = c j for some j 2 <ref> [1; n] </ref>). * 3. The quadrature weights and nodes depend continuously on ff (by Corollary 4.2). The intermediate problems which the continuation method solves are the Gaussian quadratures relative to the weight functions !(ff; fl). <p> In this case, the corresponding kernel K : [0; 1) fi <ref> [1; 500] </ref> ! R is given by K (x; t) = e xt ; (68) and is extended totally positive; thus its singular functions form an extended Chebyshev system. <p> These quadratures are for the integral Z 1 e xz dx; (69) under the condition that z 2 C is constrained to lie in the region D of the complex plane which consists of the rectangle <ref> [1; 4] </ref> fi [4; 4] with a 1 fi 1 square deleted from each of its two left hand corners, as depicted in Figure 1. <p> The weights and nodes of the quadratures can be found at the URL ftp://ftp.cs.yale.edu/pub/yarvin/pwts4.f. 19 D 3 -4 6.3 Exponentials multiplied by I 0 In this example, quadrature formulae are constructed for integrals of the form Z 1 I 0 (xy)e xt dx; (70) under the condition that t 2 <ref> [1; 500] </ref> and y 2 [0; t 1]; these formulae were designed to be used in a version of the one-dimensional Fast Multipole Method which is used in an algorithm [6] for the fast Hankel transform. <p> 24 29 Error 0.997E-03 0.892E-04 0.900E-07 0.925E-12 0.299E-14 The weights and nodes of the quadratures can be found at the URL ftp://ftp.cs.yale.edu/pub/yarvin/swts500.f. 20 6.4 Exponentials multiplied by J 0 Here, we construct quadratures for the integral Z 1 J 0 (xy)e xt dx; (71) under the conditions that t 2 <ref> [1; 4] </ref> and y 2 [0; 4 p 2], and where J 0 denotes the Bessel function of the first kind of order zero. These quadratures are used in a new version [4] of the three-dimensional Fast Multipole Method. <p> These quadratures are used in a new version [4] of the three-dimensional Fast Multipole Method. J 0 is given by the well-known (see for instance <ref> [1] </ref>) formula J 0 (y) = 0 Substituting (72) into (71) yields the integral Z 1 0 = 0 0 Thus a quadrature accurate for the integral Z 1 cos (xy)e xt dx; (74) under the conditions that t 2 [1; 4] and y 2 [0; 4 p 2], is also <p> J 0 is given by the well-known (see for instance [1]) formula J 0 (y) = 0 Substituting (72) into (71) yields the integral Z 1 0 = 0 0 Thus a quadrature accurate for the integral Z 1 cos (xy)e xt dx; (74) under the conditions that t 2 <ref> [1; 4] </ref> and y 2 [0; 4 p 2], is also accurate for the integral (71) under the same conditions on y and t. <p> Since the function cos (xy)e xt is a harmonic function of y and t, by the maximum modulus principle the maximum error of a quadrature for (74) lies on the boundary ffiD of the rectangular region t 2 <ref> [1; 4] </ref>, y 2 [0; 4 p 2]. Accordingly, the kernel whose singular functions were computed was K (x; z) = cos (xy)e xt , with (t; y) varying over ffiD.
Reference: [2] <author> F. Gantmacher and M. Krein, </author> <title> Oscillation matrices and kernels and small oscillations of mechanical systems, </title> <editor> 2nd ed., Gosudarstv. Izdat. Tehn-Teor. Lit., </editor> <address> Moscow, 1950 (Russian) </address>
Reference-contexts: is broken into several subintervals, and a quadrature and interpolation scheme which preserves inner products is used on each subinterval, then the arrangement as a whole preserves inner products on the original interval. (This follows directly from the definition.) Example 4.3 The combination of the trapezoidal rule on the interval <ref> [0; 2] </ref>, and Fourier interpolation (using the interpolation functions 1; cos x; sin x; cos 2x; sin 2x; : : : ; cos nx; sin nx) pre serves inner products. The algorithm takes as input a function K : [a; b]fi [c; d] ! R.
Reference: [3] <author> Golub, V. H., and Van Loan, C. H., </author> <title> Matrix Computations, </title> <publisher> Johns Hopkins University Press, </publisher> <address> Baltimore, </address> <year> 1983 </year>
Reference-contexts: up to order 2n 1, it integrates p 2 exactly; thus the first equality of (21) holds. 2 3.3 Singular value decomposition The singular value decomposition (SVD) is a ubiquitous tool in numerical analysis, which is given for the case of real matrices by the following lemma (see, for instance, <ref> [3] </ref> for more details).
Reference: [4] <author> L. Greengard, V. Rokhlin, </author> <title> A new version of the Fast Multipole Method for the Laplace Equation in three dimensions, </title> <journal> Acta Numerica, </journal> <year> 1997, </year> <pages> pp. 229-269 </pages>
Reference-contexts: These quadratures are for the integral Z 1 e xz dx; (69) under the condition that z 2 C is constrained to lie in the region D of the complex plane which consists of the rectangle <ref> [1; 4] </ref> fi [4; 4] with a 1 fi 1 square deleted from each of its two left hand corners, as depicted in Figure 1. <p> These quadratures are for the integral Z 1 e xz dx; (69) under the condition that z 2 C is constrained to lie in the region D of the complex plane which consists of the rectangle [1; 4] fi <ref> [4; 4] </ref> with a 1 fi 1 square deleted from each of its two left hand corners, as depicted in Figure 1. <p> 24 29 Error 0.997E-03 0.892E-04 0.900E-07 0.925E-12 0.299E-14 The weights and nodes of the quadratures can be found at the URL ftp://ftp.cs.yale.edu/pub/yarvin/swts500.f. 20 6.4 Exponentials multiplied by J 0 Here, we construct quadratures for the integral Z 1 J 0 (xy)e xt dx; (71) under the conditions that t 2 <ref> [1; 4] </ref> and y 2 [0; 4 p 2], and where J 0 denotes the Bessel function of the first kind of order zero. These quadratures are used in a new version [4] of the three-dimensional Fast Multipole Method. <p> These quadratures are used in a new version <ref> [4] </ref> of the three-dimensional Fast Multipole Method. <p> J 0 is given by the well-known (see for instance [1]) formula J 0 (y) = 0 Substituting (72) into (71) yields the integral Z 1 0 = 0 0 Thus a quadrature accurate for the integral Z 1 cos (xy)e xt dx; (74) under the conditions that t 2 <ref> [1; 4] </ref> and y 2 [0; 4 p 2], is also accurate for the integral (71) under the same conditions on y and t. <p> Since the function cos (xy)e xt is a harmonic function of y and t, by the maximum modulus principle the maximum error of a quadrature for (74) lies on the boundary ffiD of the rectangular region t 2 <ref> [1; 4] </ref>, y 2 [0; 4 p 2]. Accordingly, the kernel whose singular functions were computed was K (x; z) = cos (xy)e xt , with (t; y) varying over ffiD. <p> An obvious application of the algorithm of this paper is for the efficient evaluation of functions represented by their integral transforms (see Sections 6.1, 6.2, 6.3, 6.4 above, as well as [5] and <ref> [4] </ref>). The method of steepest descent in the numerical complex analysis provides a wide field of applications for such algorithms. * 4.
Reference: [5] <author> T. Hrycak, V. Rokhlin, </author> <title> An Improved Fast Multipole Algorithm for Potential Fields, </title> <type> Research Report 1089, </type> <institution> Yale Computer Science Department, </institution> <year> 1995 </year> <month> 22 </month>
Reference-contexts: The diagonal entries s ii of S are called singular values; the columns of the matrix V are called right singular vectors; the columns of the matrix U are called left singular vectors. 3.4 Singular value decomposition of integral operators This section, which follows <ref> [5] </ref>, contains an existence theorem for a factorization of integral operators. <p> following table: N 6 8 14 23 27 Error 0.827E-03 0.726E-04 0.366E-07 0.356E-12 0.323E-14 The weights and nodes of the 27-point quadrature are included as Table 1; the remaining weights and nodes can be found at the URL ftp://ftp.cs.yale.edu/pub/yarvin/wts500.f. 6.2 Complex Exponentials Here, we design quadratures for a new version <ref> [5] </ref> of the two-dimensional Fast Multipole Method. <p> An obvious application of the algorithm of this paper is for the efficient evaluation of functions represented by their integral transforms (see Sections 6.1, 6.2, 6.3, 6.4 above, as well as <ref> [5] </ref> and [4]). The method of steepest descent in the numerical complex analysis provides a wide field of applications for such algorithms. * 4.
Reference: [6] <author> S. Kapur, V. Rokhlin, </author> <title> An Algorithm for the fast Hankel transform, </title> <type> Technical Report 1045, </type> <institution> Yale Computer Science Department, </institution> <year> 1995 </year>
Reference-contexts: constructed for integrals of the form Z 1 I 0 (xy)e xt dx; (70) under the condition that t 2 [1; 500] and y 2 [0; t 1]; these formulae were designed to be used in a version of the one-dimensional Fast Multipole Method which is used in an algorithm <ref> [6] </ref> for the fast Hankel transform. In this case the singular functions produced by the precomputation stage were extremely similar to those for exponentials alone; unlike in the case of complex exponentials, it is possible that they form a Chebyshev system.
Reference: [7] <author> S. Karlin, </author> <title> The Existence of Eigenvalues for Integral Operators, </title> <journal> Trans. Am. Math. Soc. v. </journal> <volume> 113, </volume> <pages> pp. </pages> <month> 1-17 </month> <year> (1964) </year>
Reference-contexts: In other words, if the kernels of two integral operators are extended totally positive, the kernel of the product of the two operators is extended totally positive. The following theorem can be found in <ref> [7, 8] </ref>. Theorem 2.3 Suppose that K : [a; b] fi [a; b] ! R is an extended totally positive kernel.
Reference: [8] <author> S. Karlin, and W. J. Studden, </author> <title> Tchebycheff Systems with Applications In Analysis And Statistics, </title> <publisher> John Wiley (Interscience), </publisher> <address> New York, </address> <year> 1966 </year>
Reference-contexts: 1 Introduction Generalized Gaussian quadratures appear to have been introduced by Markov [11, 12] late in the last century. More recent expositions include those by Krein [9] and Karlin <ref> [8] </ref>. Those expositions contain proofs of the existence of such quadratures for wide classes of functions; however they do not describe a numerical procedure for obtaining the quadrature weights and nodes. Recently, a paper by Ma et al. [10] described a numerical algorithm for obtaining such quadratures. <p> In [10], a version of Newton's method is introduced for the determination of nodes and weights of generalized Gaussian quadratures. The procedure of [10] guarantees the convergence of the Newton algorithm provided it is started sufficiently close to the solution (whose existence is proven in <ref> [11, 9, 8] </ref>), and utilizes a continuation procedure to provide such starting points. The present paper describes a variation of that algorithm, which consists mainly of two major changes. <p> This paper is organized in the following manner. Section 2 summarizes the necessary material from [9] and <ref> [8] </ref>. Section 3 briefly describes certain standard numerical tools used by the algorithm. Section 4 contains various analytical results to be used in the construction of the algorithm. Section 5 describes the algorithm in detail. <p> Examples of Chebyshev and extended Chebyshev systems include the following (additional examples can be found in <ref> [8] </ref>). Example 2.1 The powers 1; x; x 2 ; : : : ; x n form an extended Chebyshev system on the interval (1; 1). <p> The weights and nodes of a Gaussian quadrature will be referred to as Gaussian weights and nodes respectively. The following theorem appears to be due to Markov [11, 12]; proofs of it can also be found in [9] and <ref> [8] </ref> (in a somewhat different form). Theorem 2.1 Suppose that the functions 1 ; : : : ; 2n : [a; b] ! R form a Chebyshev system on [a; b]. <p> Then K will be referred to as extended totally positive if the functions 1 ; : : : ; n form an extended Chebyshev system on [c; d] for all such sequences of x i . 4 Examples of ETP kernels include the following (additional examples can be found in <ref> [8] </ref>). Example 2.4 The function e xt is extended totally positive for x; t 2 [0; 1). Example 2.5 The function e (xt) 2 is extended totally positive for x; t 2 (1; 1). <p> Example 2.5 The function e (xt) 2 is extended totally positive for x; t 2 (1; 1). Example 2.6 The function 1=(x + t) is extended totally positive for x; t 2 (0; 1). A proof of the following lemma can be found in, for example, <ref> [8] </ref>. Lemma 2.2 Suppose that K and L are extended totally positive functions of two variables. Then the function M defined by the formula M (x; t) = c is extended totally positive. <p> In other words, if the kernels of two integral operators are extended totally positive, the kernel of the product of the two operators is extended totally positive. The following theorem can be found in <ref> [7, 8] </ref>. Theorem 2.3 Suppose that K : [a; b] fi [a; b] ! R is an extended totally positive kernel.
Reference: [9] <author> M. G. Krein, </author> <title> The Ideas of P. </title> <editor> L. Chebyshev and A. A. </editor> <title> Markov in the Theory Of Limiting Values Of Integrals, </title> <journal> American Mathematical Society Translations, Ser. </journal> <volume> 2, Vol. 12, </volume> <year> 1959, </year> <pages> pp. 1-122 </pages>
Reference-contexts: 1 Introduction Generalized Gaussian quadratures appear to have been introduced by Markov [11, 12] late in the last century. More recent expositions include those by Krein <ref> [9] </ref> and Karlin [8]. Those expositions contain proofs of the existence of such quadratures for wide classes of functions; however they do not describe a numerical procedure for obtaining the quadrature weights and nodes. Recently, a paper by Ma et al. [10] described a numerical algorithm for obtaining such quadratures. <p> In [10], a version of Newton's method is introduced for the determination of nodes and weights of generalized Gaussian quadratures. The procedure of [10] guarantees the convergence of the Newton algorithm provided it is started sufficiently close to the solution (whose existence is proven in <ref> [11, 9, 8] </ref>), and utilizes a continuation procedure to provide such starting points. The present paper describes a variation of that algorithm, which consists mainly of two major changes. <p> This paper is organized in the following manner. Section 2 summarizes the necessary material from <ref> [9] </ref> and [8]. Section 3 briefly describes certain standard numerical tools used by the algorithm. Section 4 contains various analytical results to be used in the construction of the algorithm. Section 5 describes the algorithm in detail. <p> The weights and nodes of a Gaussian quadrature will be referred to as Gaussian weights and nodes respectively. The following theorem appears to be due to Markov [11, 12]; proofs of it can also be found in <ref> [9] </ref> and [8] (in a somewhat different form). Theorem 2.1 Suppose that the functions 1 ; : : : ; 2n : [a; b] ! R form a Chebyshev system on [a; b].
Reference: [10] <author> J. Ma, V. Rokhlin, and S. Wandzura, </author> <title> Generalized Gaussian Quadratures For Systems of Arbitrary Functions, </title> <journal> SIAM Journal of Numerical Analysis, </journal> <note> June 1996 (to appear) </note>
Reference-contexts: More recent expositions include those by Krein [9] and Karlin [8]. Those expositions contain proofs of the existence of such quadratures for wide classes of functions; however they do not describe a numerical procedure for obtaining the quadrature weights and nodes. Recently, a paper by Ma et al. <ref> [10] </ref> described a numerical algorithm for obtaining such quadratures. In [10], a version of Newton's method is introduced for the determination of nodes and weights of generalized Gaussian quadratures. The procedure of [10] guarantees the convergence of the Newton algorithm provided it is started sufficiently close to the solution (whose existence <p> Those expositions contain proofs of the existence of such quadratures for wide classes of functions; however they do not describe a numerical procedure for obtaining the quadrature weights and nodes. Recently, a paper by Ma et al. <ref> [10] </ref> described a numerical algorithm for obtaining such quadratures. In [10], a version of Newton's method is introduced for the determination of nodes and weights of generalized Gaussian quadratures. The procedure of [10] guarantees the convergence of the Newton algorithm provided it is started sufficiently close to the solution (whose existence is proven in [11, 9, 8]), and utilizes a continuation <p> Recently, a paper by Ma et al. <ref> [10] </ref> described a numerical algorithm for obtaining such quadratures. In [10], a version of Newton's method is introduced for the determination of nodes and weights of generalized Gaussian quadratures. The procedure of [10] guarantees the convergence of the Newton algorithm provided it is started sufficiently close to the solution (whose existence is proven in [11, 9, 8]), and utilizes a continuation procedure to provide such starting points. <p> Since a substantial fraction of the algorithm is changed, this paper is written as a repetition of <ref> [10] </ref>, rather than as a list of changes; however, the portions dealing with quadratures for functions with end-point singularities are omitted. This paper is organized in the following manner. Section 2 summarizes the necessary material from [9] and [8]. <p> Of these, the classical Gaussian quadrature rules consist of n nodes and integrate polynomials of order 2n 1 exactly; these quadratures are used in this paper as a numerical tool (see section 3.2). In <ref> [10] </ref>, the notion of a Gaussian quadrature was generalized as follows: Definition 2.3 A quadrature formula will be referred to as Gaussian with respect to a set of 2n functions 1 ; : : : ; 2n : [a; b] ! R and a weight function ! : [a; b] ! <p> Newton's method is used to solve (33) which defines the Gaussian quadrature. * 2. An adaptive version of the continuation method (Section 3.1.1) is used to provide starting points for Newton's method. The continuation scheme used here is different from that used in <ref> [10] </ref>; the details of the continuation scheme and of the method of adaption are described below. 16 * 3. The algorithm of section 4.3 can be used as an optional preprocessing step, which takes as input a kernel of an integral operator and produces its singular functions. <p> of adaption: in the authors' implementation, the initial value of the step size was chosen to be one, and the step size was doubled after a single successful termination of Newton's method.) 5.1.1 Comparison to old continuation method The continuation method of this paper differs from the continuation method of <ref> [10] </ref> in that a different part of the system of equations is changed as a function of the continuation variable ff. In [10], the thing changed is not the weight function ! but rather the functions 1 ; : : : ; 2n 17 which the quadrature is to integrate properly. <p> was doubled after a single successful termination of Newton's method.) 5.1.1 Comparison to old continuation method The continuation method of this paper differs from the continuation method of <ref> [10] </ref> in that a different part of the system of equations is changed as a function of the continuation variable ff. In [10], the thing changed is not the weight function ! but rather the functions 1 ; : : : ; 2n 17 which the quadrature is to integrate properly.
Reference: [11] <author> A. A. </author> <title> Markov, On the limiting values of integrals in connection with interpolation, </title> <journal> Zap. Imp. Akad. Nauk. Fiz.-Mat. Otd. </journal> <volume> (8) 6 (1898), </volume> <pages> no.5 (Russian) = pp. </pages> <note> 146-230 of [12] </note>
Reference-contexts: 1 Introduction Generalized Gaussian quadratures appear to have been introduced by Markov <ref> [11, 12] </ref> late in the last century. More recent expositions include those by Krein [9] and Karlin [8]. Those expositions contain proofs of the existence of such quadratures for wide classes of functions; however they do not describe a numerical procedure for obtaining the quadrature weights and nodes. <p> In [10], a version of Newton's method is introduced for the determination of nodes and weights of generalized Gaussian quadratures. The procedure of [10] guarantees the convergence of the Newton algorithm provided it is started sufficiently close to the solution (whose existence is proven in <ref> [11, 9, 8] </ref>), and utilizes a continuation procedure to provide such starting points. The present paper describes a variation of that algorithm, which consists mainly of two major changes. <p> The weights and nodes of a Gaussian quadrature will be referred to as Gaussian weights and nodes respectively. The following theorem appears to be due to Markov <ref> [11, 12] </ref>; proofs of it can also be found in [9] and [8] (in a somewhat different form). Theorem 2.1 Suppose that the functions 1 ; : : : ; 2n : [a; b] ! R form a Chebyshev system on [a; b].
Reference: [12] <author> A. A. </author> <title> Markov, Selected papers on continued fractions and the theory of functions deviating least from zero, </title> <booktitle> OGIZ, Moscow-Leningrad, 1948 (Russian) </booktitle>
Reference-contexts: 1 Introduction Generalized Gaussian quadratures appear to have been introduced by Markov <ref> [11, 12] </ref> late in the last century. More recent expositions include those by Krein [9] and Karlin [8]. Those expositions contain proofs of the existence of such quadratures for wide classes of functions; however they do not describe a numerical procedure for obtaining the quadrature weights and nodes. <p> The weights and nodes of a Gaussian quadrature will be referred to as Gaussian weights and nodes respectively. The following theorem appears to be due to Markov <ref> [11, 12] </ref>; proofs of it can also be found in [9] and [8] (in a somewhat different form). Theorem 2.1 Suppose that the functions 1 ; : : : ; 2n : [a; b] ! R form a Chebyshev system on [a; b].
Reference: [13] <author> M. Reed, B. </author> <title> Simon, </title> <journal> Methods of modern mathematical physics, </journal> <volume> Vol. 1, </volume> <publisher> Academic Press, </publisher> <year> 1980 </year>
Reference-contexts: Throughout this section, it will be assumed that all functions are square-integrable; the term "norm" will mean the L 2 norm. The following theorem, which defines the factorization, is proven in a more general form as Theorem VI.17 in <ref> [13] </ref>. Theorem 3.4 Suppose that the function K : [a; b] fi [c; d] ! R is square integrable.
Reference: [14] <author> J. Stoer, R. </author> <title> Bulirsch, Introduction to Numerical Analysis, Second Edition, Springer-Verlag, 1993 23 Table 1: Quadratures for exponentials Quadratures for the integral Z 1 e xt dx; under the condition that 1 t 500. </title> <institution> N Nodes (x i ) Weights (w i ) Error 27 0.5378759010624780E-03 0.1383311204046008E-02 0.323E-14 0.7148658617716300E-02 0.5330932895600203E-02 0.2257800188133212E-01 0.1037458793227033E-01 0.5032042618508775E-01 0.1796868836009351E-01 0.9788439120828463E-01 0.3076860552710760E-01 0.1797695570864978E+00 0.5321827718681367E-01 0.3218961915636380E+00 0.9253048536912244E-01 0.5689615509235298E+00 0.1607156476580828E+00 0.9972472224438443E+00 0.2780925850550500E+00 0.1736698582009859E+01 0.4793398853949993E+00 0.3010034073439038E+01 0.8254021100491956E+00 0.5210381702393131E+01 0.1434174907278760E+01 0.9106577764323245E+01 0.2604342790201154E+01 0.1689348652665484E+02 0.6023086156615004E+01 </institution>
Reference-contexts: A more detailed discussion of these techniques can be found, for example, in <ref> [14] </ref>. <p> Thus the algorithm described in this paper uses an adaptive version of the scheme. 3.2 Gaussian integration and interpolation Classical Gaussian quadrature rules are a well-known numerical tool (see for instance <ref> [14] </ref>); they integrate polynomials of order 2n 1 exactly with respect to some weight function, and consist of n weights and nodes. A variety of Gaussian quadratures were analyzed in the last century, each being defined by a distinct weight function.
References-found: 14

