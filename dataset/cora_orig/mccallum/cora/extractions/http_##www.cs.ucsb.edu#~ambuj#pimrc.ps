URL: http://www.cs.ucsb.edu/~ambuj/pimrc.ps
Refering-URL: http://www.cs.ucsb.edu/~ambuj/pimrc.html
Root-URL: http://www.cs.ucsb.edu
Title: Efficient Distributed Algorithms for Dynamic Channel Assignment  
Author: Manhoi Choy and Ambuj K. Singh flfl 
Address: Santa Barbara  
Affiliation: Department of Computer Science, The Hong Kong University of Science and Technology flfl Department of Computer Science, University of California at  
Abstract: The efficiency of channel assignment in a cellular telephone system is considered using the measures of successful channel assignment ratio as well as response time. Existing paradigms of mutual exclusion and dining philosophers from distributed systems are used to synthesize new algorithms that optimize both measures. The results are verified by extensive simulations. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Andrea Baiocchi, Francesco Delli Priscoli, Francesco Grilli, and Fabrizio Sestini. </author> <title> The geometic dynamic channel allocation as a practical strategy in mobile networks with bursty user mobility. </title> <journal> IEEE Transactions on Vehicular Technology, </journal> <volume> 44(1) </volume> <pages> 14-23, </pages> <year> 1994. </year>
Reference: [2] <author> M. Choy and A. K. Singh. </author> <title> Efficient fault tolerant algorithms for distributed resource allocation. </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 17(4) </volume> <pages> 535-559, </pages> <year> 1995. </year>
Reference-contexts: The dining philosophers problem has been extensively studied in the literature and many efficient algorithms have been proposed for it. Therefore, instead of re-inventing the wheel, we use them to solve the dynamic channel allocation problem. 3 An Efficient Solution for the Din ing Philosophers Problem by us in <ref> [2] </ref>. Each philosopher (modeled as a process) is initially assigned a color in such a way that neighboring philosophers have different colors. Colors are represented by integers here, for ease of presentation. <p> The correctness of the algorithm of Figure 2 is shown formally in <ref> [2] </ref> and is not repeated here. It is also shown that the algorithm has an upper bound on response time that is a quadratic function of the upper bound on communication delay and the upper bound on the eating period. <p> = collect ^ color (i) &lt; color (j))) then send fork to P j else S := S [ fjg fi fi Procedure Release-forks h8j : j 2 S : if at ij then send fork to P j i; S := fg end Release-forks interested readers are referred to <ref> [2] </ref> for detailed proofs. 4 Two-Phase Algorithm In this section, we show how the dynamic channel allocation problem can be solved based on an underlying algorithm for the dining philosophers. Each base station is mapped to a philosopher.
Reference: [3] <author> E. W. Dijkstra. </author> <title> Hierarchical ordering of sequential processes. </title> <journal> Acta Inf., </journal> <volume> 1 </volume> <pages> 115-138, </pages> <year> 1971. </year>
Reference-contexts: In order to minimize response time, we use existing paradigms of mutual exclusion and its generalization to a graph structure, called the dining philosophers <ref> [3] </ref>, from distributed systems. The application of these paradigms is based on the fact that channels are the limited resources and the cells are the contending processes desiring the resources. <p> Finally, a discussion concludes the paper in Section 6. 2 The Dining Philosophers Prob lem The channel allocation problem is closely related to resource allocation problems in the area of distributed operating systems. Resource allocation problems have been studied extensively and are commonly abstracted as the dining philosophers problem <ref> [3, 7] </ref>. In this problem, philosophers reside at nodes of an underlying graph. Two philosophers who contend for a shared resource are connected by an edge; this is denoted by a fork that resides on each edge of the graph.
Reference: [4] <author> S. M. Elnoubi, R. Singh, and S. C. Gupta. </author> <title> A new frequency channel assignment algorithm in high capacity mobile communication systems. </title> <journal> IEEE Transactions on Vehicular Technology, </journal> <volume> 31(3), </volume> <year> 1982. </year>
Reference-contexts: In the hybrid assignment strategy [6], some channels are assigned in a fixed way while the remaining can be borrowed. The optimal ratio of the two allocations depends on the traffic load. Elnoubi et al. <ref> [4] </ref> proposed a variation of the hybrid strategy called borrowing with channel ordering in which all the channels assigned to a cell are ordered. Local requests are satisfied by one end of the ordering while borrowing requests are satisfied by the other end.
Reference: [5] <author> J. S. Engel and M. M. Peritsky. </author> <title> Statistically-optimum dynamic sever assignment in systems with interfering servers. </title> <journal> IEEE Transactions on Vehicular Technology, </journal> <volume> 22(4), </volume> <year> 1973. </year>
Reference-contexts: On such a failure, a cell may simply reject the user's request, or it may attempt to borrow other channels. If a station is still unable to allocate a channel after repeated borrowing attempts, it rejects the request. In the simple borrowing strategy <ref> [5] </ref>, the general rule is to borrow from the "richest" neighboring cell. In the hybrid assignment strategy [6], some channels are assigned in a fixed way while the remaining can be borrowed. The optimal ratio of the two allocations depends on the traffic load.
Reference: [6] <author> T. J. Kahwa and N. D. Georganas. </author> <title> A hybrid channel assignment scheme in large-scale, </title> <journal> cellular-structured mobile communication systems. IEEE Transactions on Communications, </journal> <volume> 26(4), </volume> <year> 1978. </year>
Reference-contexts: If a station is still unable to allocate a channel after repeated borrowing attempts, it rejects the request. In the simple borrowing strategy [5], the general rule is to borrow from the "richest" neighboring cell. In the hybrid assignment strategy <ref> [6] </ref>, some channels are assigned in a fixed way while the remaining can be borrowed. The optimal ratio of the two allocations depends on the traffic load.
Reference: [7] <author> N. Lynch. </author> <title> Fast allocation of nearby resources in a distributed system. </title> <booktitle> In Proceedings of the 12th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 70-81, </pages> <year> 1980. </year>
Reference-contexts: Finally, a discussion concludes the paper in Section 6. 2 The Dining Philosophers Prob lem The channel allocation problem is closely related to resource allocation problems in the area of distributed operating systems. Resource allocation problems have been studied extensively and are commonly abstracted as the dining philosophers problem <ref> [3, 7] </ref>. In this problem, philosophers reside at nodes of an underlying graph. Two philosophers who contend for a shared resource are connected by an edge; this is denoted by a fork that resides on each edge of the graph.
Reference: [8] <author> Ravi Prakash, Niranjan G. Shivaratri, and Mukesh Singhal. </author> <title> Distributed dynamic channel allocation for mobile computing. </title> <booktitle> In Proceedings of the 14th ACM Annual Symposium on Principles of Distributed Computing, </booktitle> <pages> pages 47-56, </pages> <year> 1995. </year>
Reference-contexts: In a distributed implementation, channels may be borrowed either in an optimistic or a pessimistic manner. In optimistic borrowing, the target channel is chosen first, and then a check is made to see if the borrowing leads to any interference <ref> [8] </ref>. This is repeated until a channel is successfully borrowed from all neighbors or until the base station has tried all possible channels. This scheme has two drawbacks under high contention. First, it requires a large number of messages (directly proportional to the number of cycles repeated). <p> The above condition seems to be a reasonable fairness guarantee that one can expect from any channel assignment algorithm. However, this condition is not satisfied by optimistic algorithms, and in particular by the algorithm of Prakash et al. <ref> [8] </ref>, which is a distributed implementation of borrowing with directional channel locking [10]. This can be illustrated by the following scenario. Let there be three cells i, j and k that form a clique, and some other neighbors of k. <p> We compare our algorithm to three others a centralized algorithm in which all allocations are done by a central server, the static assignment algorithm, referred to as the preallocating algorithm in which all channels are preallo-cated uniformly, and an optimistic algorithm from Prakash et al. <ref> [8] </ref>. We chose the centralized algorithm since it defines the performance bound for the non-distributed algorithms. We chose the preallocating algorithm since it has the best response time of two network hops.
Reference: [9] <author> Kwan Lawrence Yeung and Tak-Shing Peter Yum. </author> <title> Compact pattern based dynamic channel assignment for cellular mobile systems. </title> <journal> IEEE Transactions on Vehicular Technology, </journal> <volume> 43(4) </volume> <pages> 892-896, </pages> <year> 1994. </year>
Reference-contexts: Borrowing with directional channel locking [10] is a similar scheme except that the borrowed channel c is available for borrowing (not for use though) in those directions of cell i that do not lead to interference. Yeung and Yum <ref> [9] </ref>, define two kinds of compact chan nel allocation patterns (clockwise and anti-clockwise) and attempt to maintain these patterns under dynamic channel allocations. Simulation studies show it to be better than the channel borrowing with directional channel locking scheme.
Reference: [10] <author> Ming Zhang and Tak-Shing Peter Yum. </author> <title> Comparisons of channel-assignment strategies in cellular mobile telephone systems. </title> <journal> IEEE Transactions on Vehicular Technology, </journal> <volume> 38(4) </volume> <pages> 211-215, </pages> <year> 1989. </year>
Reference-contexts: Local requests are satisfied by one end of the ordering while borrowing requests are satisfied by the other end. Once borrowed by a cell i, a channel c is prohibited from both use and borrowing within the interference distance of cell i. Borrowing with directional channel locking <ref> [10] </ref> is a similar scheme except that the borrowed channel c is available for borrowing (not for use though) in those directions of cell i that do not lead to interference. <p> However, this condition is not satisfied by optimistic algorithms, and in particular by the algorithm of Prakash et al. [8], which is a distributed implementation of borrowing with directional channel locking <ref> [10] </ref>. This can be illustrated by the following scenario. Let there be three cells i, j and k that form a clique, and some other neighbors of k. Suppose that channel c is usable continuously by i from some point on and that channel c is owned by j. <p> We chose the preallocating algorithm since it has the best response time of two network hops. We chose the optimistic algorithm due to Prakash et al. since it is the only other distributed algorithm, and it implements the idea of borrowing with directional channel locking <ref> [10] </ref>, which is known to be an efficient algorithm. Two sets of experiments are performed. The first assumes a uniform request arrival rate over the entire region, i.e. is constant in the entire region. The second assumes that some cells are more heavily loaded while others are lightly loaded.
References-found: 10

