URL: ftp://ftp.cs.unc.edu/pub/users/chungg/EHCI-98.ps.Z
Refering-URL: http://www.cs.unc.edu/~chungg/ehci.html
Root-URL: http://www.cs.unc.edu
Email: -chungg,dewan-@cs.unc.edu  
Title: Generic and Composable Latecomer Accommodation Service for Centralized Shared Systems  
Author: Goopeel Chung Prasun Dewan 
Keyword: multiuser interface, collaboration system, logging, groupware, latecomer, newcomer, window system, genericity, composability  
Address: Chapel Hill, NC 27599-3175  
Affiliation: Department of Computer Science University of North Carolina at Chapel Hill  
Abstract: It is important that a shared application allow a latecomer to join other users who are already working together with the application. We have developed a latecomer accommodation service framework for centralized shared systems (applications and infrastructures). It employs an independent latecomer accommodation server that is dynamically composable with its clients. The server, also called the logger, logs a shared applications user interface (UI) changes in response to calls made by the client, also called the loggable. Later, when the time comes to accommodate a latecomer, the logger replays the logged changes to the loggable, which, in turn, creates the latecomers user interface. To deal with UI protocols at different levels of abstraction, we have defined the API in terms of a generic UI model. This reduces the burden on a loggable from a complete service implementation to a translation between its specific UI protocol and our generic UI model. To reduce the space and time overhead, the logger performs complex log compression. The extent of compression depends on the amount of semantic knowledge that the loggable provides to the logger. In this paper, we motivate, describe and illustrate the approach, and outline how it is implemented. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Abdel-Wahab, H. M. and Feit, M. A., XTV: </author> <title> A Framework for Sharing X Window Clients in Remote Synchronous Collaboration, </title> <booktitle> Proceedings, IEEE Conference on Communications Software: Communications for Distributed Applications & Systems, </booktitle> <address> Chapel Hill, NC, </address> <pages> pp. 159-167, </pages> <month> April </month> <year> 1991. </year>
Reference: <author> Chung, G., Jeffay, K., and Abdel-Wahab, H., </author> <title> Dynamic Participation in Computer-based Conferencing System, </title> <journal> Journal of Computer Communications, </journal> <volume> 17(1): </volume> <pages> 7-16, </pages> <month> January </month> <year> 1994. </year>
Reference-contexts: In general, implementing a latecomer accommodation service is difficult, and hence, should ideally be done by a collaboration infrastructure. This is the approach taken in many systems such as Suite (Dewan, Choudhary, 1992), XTV <ref> (Chung, Jeffay, Abdel-Wahab, 1994) </ref>, a system by (Manohar, Prakash, 1995), and Habanero (NCSA). However, each of these systems provides its own latecomer accommodation service. Thus, there is no code sharing among these systems. Moreover, the latecomer accommodation service is tightly integrated with other aspects of the system. <p> The rest of the paper is organized as follows. We first describe the related work on which our research is based. Next, we describe our approach. Finally, we give conclusions and directions for future work. 2 RELATED WORK Many collaboration systems such as Suite (Dewan, Choudhary, 1992), XTV <ref> (Chung, Jeffay, Abdel-Wahab, 1994) </ref>, GroupKit (Roseman, Greenberg, 1996), a system by (Manohar, Prakash, 1995), and Habanero (NCSA) support latecomer accommodation using different approaches. Suite is a collaboration infrastructure that provides to its application programmers the high-level abstraction of a shared active variable.
Reference: <author> Dewan, P. and Choudhary, R., </author> <title> A high-level flexible framework for implementing multiuser user interfaces, </title> <journal> ACM Transactions on Information Systems 10, </journal> <volume> 4, </volume> <pages> 345-380, </pages> <month> October </month> <year> 1992. </year>
Reference-contexts: In general, implementing a latecomer accommodation service is difficult, and hence, should ideally be done by a collaboration infrastructure. This is the approach taken in many systems such as Suite <ref> (Dewan, Choudhary, 1992) </ref>, XTV (Chung, Jeffay, Abdel-Wahab, 1994), a system by (Manohar, Prakash, 1995), and Habanero (NCSA). However, each of these systems provides its own latecomer accommodation service. Thus, there is no code sharing among these systems. <p> The rest of the paper is organized as follows. We first describe the related work on which our research is based. Next, we describe our approach. Finally, we give conclusions and directions for future work. 2 RELATED WORK Many collaboration systems such as Suite <ref> (Dewan, Choudhary, 1992) </ref>, XTV (Chung, Jeffay, Abdel-Wahab, 1994), GroupKit (Roseman, Greenberg, 1996), a system by (Manohar, Prakash, 1995), and Habanero (NCSA) support latecomer accommodation using different approaches. Suite is a collaboration infrastructure that provides to its application programmers the high-level abstraction of a shared active variable.
Reference: <author> Manohar, N. R. and Prakash, A., </author> <title> The Session Capture and Replay Paradigm for Asynchronous Collaboration, </title> <booktitle> Proceedings of the Fourth European Conference on ComputerSupported Cooperative Work, </booktitle> <address> September 10-14, Stockholm, Sweden, 149-164, </address> <year> 1995. </year> <note> NCSA, Habanero, http://www.ncsa.uiuc.edu/SDG/Software/Habanero/. </note>
Reference-contexts: In general, implementing a latecomer accommodation service is difficult, and hence, should ideally be done by a collaboration infrastructure. This is the approach taken in many systems such as Suite (Dewan, Choudhary, 1992), XTV (Chung, Jeffay, Abdel-Wahab, 1994), a system by <ref> (Manohar, Prakash, 1995) </ref>, and Habanero (NCSA). However, each of these systems provides its own latecomer accommodation service. Thus, there is no code sharing among these systems. Moreover, the latecomer accommodation service is tightly integrated with other aspects of the system. <p> Next, we describe our approach. Finally, we give conclusions and directions for future work. 2 RELATED WORK Many collaboration systems such as Suite (Dewan, Choudhary, 1992), XTV (Chung, Jeffay, Abdel-Wahab, 1994), GroupKit (Roseman, Greenberg, 1996), a system by <ref> (Manohar, Prakash, 1995) </ref>, and Habanero (NCSA) support latecomer accommodation using different approaches. Suite is a collaboration infrastructure that provides to its application programmers the high-level abstraction of a shared active variable. Suite determines how an active variable is displayed based on its type. <p> A replicated system provides good response times to its users, because all of their input is locally processed. However, it must perform an additional step of replicating the shared application component for the latecomer. The replicated approach is taken by many systems such as GroupKit, a system by <ref> (Manohar, Prakash, 1995) </ref>, and Habanero, and we will look at those systems now. GroupKit is a toolkit that lets developers build groupware applications. <p> Therefore, the latecomer accommodation service is flexible in that it can be whatever the application needs. However, it has to be implemented manually by the application programmer. A system by <ref> (Manohar, Prakash, 1995) </ref> allows flexible support for resuming a collaboration session by using a data artifact called a session object. A session object captures a user's interaction with an application, and records window events such as mouse and keyboard actions. <p> from one of these systems must follow all the protocols offered by the system, including those not relevant to latecomer accommodation such as the active variable abstraction of Suite, the low level X protocol of XTV, the groupware programming abstractions of GroupKit, the window events protocol of the system by <ref> (Manohar, Prakash, 1995) </ref>, and the Java applet "habanerization" of Habanero. In the next section, we will describe how these limitations can be overcome for a centralized system.
Reference: <author> Roseman, M. and Greenberg, S., </author> <title> Building Real Time Groupware with GroupKit, A Groupware Toolkit, </title> <journal> ACM Transactions on Computer Human Interaction, </journal> <year> 1996. </year> <title> 7 BIOGRAPHY Goopeel Chung and Prasun Dewan are a Ph.D. student and a faculty member, </title> <institution> respectively, in the Department of Computer Science at the University of North Carolina at Chapel Hill. They share their research interest in collaboration software systems. </institution>
Reference-contexts: We first describe the related work on which our research is based. Next, we describe our approach. Finally, we give conclusions and directions for future work. 2 RELATED WORK Many collaboration systems such as Suite (Dewan, Choudhary, 1992), XTV (Chung, Jeffay, Abdel-Wahab, 1994), GroupKit <ref> (Roseman, Greenberg, 1996) </ref>, a system by (Manohar, Prakash, 1995), and Habanero (NCSA) support latecomer accommodation using different approaches. Suite is a collaboration infrastructure that provides to its application programmers the high-level abstraction of a shared active variable. Suite determines how an active variable is displayed based on its type.
References-found: 5

