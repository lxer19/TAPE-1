URL: http://robotics.eecs.berkeley.edu/~emiris/papers/issac93journal.ps.gz
Refering-URL: http://robotics.eecs.berkeley.edu/~emiris/
Root-URL: http://www.cs.berkeley.edu
Email: emiris@sophia.inria.fr  jfc@cs.Berkeley.edu  
Title: Efficient Incremental Algorithms for  
Date: (Received 27 July 1995)  
Address: B.P. 93, 06902 Sophia-Antipolis, France.  Berkeley CA 94720, USA.  
Affiliation: Projet SAFIR, I.N.R.I.A.,  Computer Science Division, University of California,  
Abstract: the Sparse Resultant and the Mixed Volume We propose a new and efficient algorithm for computing the sparse resultant of a system of n + 1 polynomial equations in n unknowns. This algorithm produces a matrix whose entries are coefficients of the given polynomials and is typically smaller than the matrices obtained by previous approaches. The matrix determinant is a nontrivial multiple of the sparse resultant from which the sparse resultant itself can be recovered. The algorithm is incremental in the sense that successively larger matrices are constructed until one is found with the above properties. For multigraded systems, the new algorithm produces optimal matrices, i.e., expresses the sparse resultant as a single determinant. An implementation of the algorithm is described and experimental results are presented. In addition, we propose an efficient algorithm for computing the mixed volume of n polynomials in n variables. This computation provides an upper bound on the number of common isolated roots. A publicly available implementation of the algorithm is presented and empirical results are reported which suggest that it is the fastest mixed volume code to date. Keywords: Sparse resultant, mixed volume, Newton polytope, asymptotic complexity, experimental re sults. 
Abstract-found: 1
Intro-found: 1
Reference: <author> A.V. Aho, J.E. Hopcroft, and J.D. Ullman. </author> <title> The Design and Analysis of Computer Algorithms. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass., </address> <year> 1974. </year>
Reference-contexts: Asymptotic Complexity The worst-case asymptotic complexity of the Lift-Prune algorithm is analyzed in this section. Motivated by the empirical observation that this bound is overly pessimistic (see experimental results in section 9), we also attempt to model the algorithm's average-case behavior. The computational model used is the real RAM <ref> (Aho, Hopcroft and Ullman, 1974) </ref>, on which two different cost functions are employed. Namely, we consider the worst-case arithmetic (number of instructions) as well as the worst-case bit complexity (number of bit operations) of the algorithm.
Reference: <author> W. Auzinger and H.J. Stetter. </author> <title> An elimination algorithm for the computation of all zeros of a system of multivariate polynomial equations. </title> <booktitle> In Proc. Intern. Conf. on Numerical Math., Intern. Series of Numerical Math., </booktitle> <volume> 86, </volume> <pages> pages 12-30. </pages> <publisher> Birkhauser Verlag, </publisher> <address> Basel, </address> <year> 1988. </year>
Reference-contexts: Resultants essentially eliminate the input variables, so they are also called eliminants. They also serve in solving systems of equations, for instance by reducing root-finding to an eigenproblem <ref> (Auzinger and Stetter, 1988) </ref> or by means of the u-resultant construction of Renegar (1992). This article continues work by Canny and Emiris (1993) for constructing matrix formulae for the sparse resultant.
Reference: <author> D.N. Bernstein. </author> <title> The number of roots of a system of equations. </title> <journal> Funct. Anal. and Appl., </journal> <volume> 9(2) </volume> <pages> 183-185, </pages> <year> 1975. </year>
Reference-contexts: These and other basic properties of the mixed volume are demonstrated in (Grunbaum, 1967, Betke, 1992, Schneider, 1993), whereas a more advanced treatment can be found in (Burago and Zalgaller, 1988). We are now ready to state Bernstein's theorem, the cornerstone of sparse elimination theory. Theorem 3.6. <ref> (Bernstein, 1975) </ref> For polynomials f 1 ; : : : ; f n 2 K [x; x 1 ] with Newton polytopes Q 1 ; : : : ; Q n R n and generic coefficients, the number of common solutions in (C fl ) n , counting multiplicities, equals MV
Reference: <author> U. Betke. </author> <title> Mixed volumes of polytopes. </title> <journal> Arch. der Math., </journal> <volume> 58 </volume> <pages> 388-391, </pages> <year> 1992. </year>
Reference: <author> J. Backelin and R. Froberg. </author> <title> How we proved that there are exactly 924 cyclic 7-roots. </title> <booktitle> In Proc. ACM Intern. Symp. on Symbolic and Algebraic Computation, </booktitle> <pages> pages 103-111, </pages> <address> Bonn, </address> <year> 1991. </year>
Reference-contexts: Bjorck (1990) credits L. Lovasz with settling the case n = 5. The same article states that n = 6 was essentially solved in (Bjorck and Froberg, 1991) except for an error corrected by D. Lazard. The problem for n = 7 was solved in <ref> (Backelin and Froberg, 1991) </ref> with the help of Grobner bases calculations on J. Backelin's program Bergman. For n = 8 there are 1152 isolated roots in addition to the one-dimensional variety (Bjorck and Froberg, 1994).
Reference: <author> G. Bjorck and R. Froberg. </author> <title> A faster way to count the solutions of inhomogeneous systems of algebraic equations, with applications to cyclic n-roots. </title> <journal> J. Symbolic Computation, </journal> <volume> 12 </volume> <pages> 329-336, </pages> <year> 1991. </year>
Reference-contexts: For n = 4 the variety has unit dimension and no isolated roots. Bjorck (1990) credits L. Lovasz with settling the case n = 5. The same article states that n = 6 was essentially solved in <ref> (Bjorck and Froberg, 1991) </ref> except for an error corrected by D. Lazard. The problem for n = 7 was solved in (Backelin and Froberg, 1991) with the help of Grobner bases calculations on J. Backelin's program Bergman.
Reference: <author> G. Bjorck and R. Froberg. </author> <title> Methods to "divide out" certain solutions from systems of algebraic equations, applied to find all cyclic 8-roots. </title> <type> Manuscript, </type> <institution> Dept. of Math., Stockholm University, </institution> <year> 1994. </year>
Reference-contexts: Lazard. The problem for n = 7 was solved in (Backelin and Froberg, 1991) with the help of Grobner bases calculations on J. Backelin's program Bergman. For n = 8 there are 1152 isolated roots in addition to the one-dimensional variety <ref> (Bjorck and Froberg, 1994) </ref>. For n 9 the precise number of isolated roots is unknown and for n = 10 even finiteness is open. Our bound for n = 11 verifies the conjecture by Froberg and Bjorck that the number of roots for prime n is 2n2 .
Reference: <author> C. Bajaj, T. Garrity, and J. Warren. </author> <title> On the applications of multi-equational resultants. </title> <type> Technical Report 826, </type> <institution> Purdue Univ., </institution> <year> 1988. </year>
Reference-contexts: Our motivation stems from the fact that resultant-based methods currently offer the most efficient solution to certain problems in a variety of areas ranging from robotics (Canny, 1988) to modeling <ref> (Bajaj, Garrity and Warren, 1988) </ref>. To illustrate this claim, the remaining of this section discusses some applications. A concrete example from robot kinematics is the inverse kinematics problem for a robot with six rotational joints (6R) and, therefore, six degrees of freedom.
Reference: <author> G. Bjorck. </author> <title> Functions of modulus 1 on z n whose Fourier transforms have constant modulus, and "cyclic n-roots". </title> <editor> In J.S. Byrnes and J.F. Byrnes, editors, </editor> <booktitle> Recent Advances in Fourier Analysis and Its Applications, </booktitle> <pages> pages 131-140. </pages> <publisher> Kluwer Academic, </publisher> <year> 1990. </year> <institution> NATO Adv. Sci. Inst. Ser. </institution> <address> C. </address>
Reference: <author> L.J. Billera and B. Sturmfels. </author> <title> Fiber polytopes. </title> <journal> Annals of Math., </journal> <volume> 135 </volume> <pages> 527-549, </pages> <year> 1992. </year>
Reference-contexts: In the first case, the cell is called mixed and is the Minkowski sum of n edges from distinct Newton polytopes. In the second case it is unmixed. Demonstrations of these facts can be found in <ref> (Billera and Sturmfels, 1992, Sturmfels, 1994) </ref>. The essential property MV (Q 1 ; : : : ; Q n ) = Vol (); over all mixed cells of a mixed subdivision of Q; relies on the multilinearity of the mixed volume from Definition 3.4.
Reference: <author> B. </author> <title> Buchberger. Grobner bases: An algebraic method in ideal theory. In N.K. Bose, editor, </title> <booktitle> Multidimensional System Theory, </booktitle> <pages> pages 184-232. </pages> <publisher> Reidel Publishing Co., </publisher> <year> 1985. </year>
Reference-contexts: There exist other alternatives to elimination and the more particular problem of system solving besides resultants. Grobner bases provide a general tool for studying arbitrary polynomial ideals, eliminating variables as well as finding the common roots of a system <ref> (Buchberger, 1985) </ref>. They constitute a popular and very general approach and several implementations exist. The main limitations of the method are the large coefficient size and the degree of the basis polynomials.
Reference: <author> Y.D. Burago and V.A. Zalgaller. </author> <title> Geometric Inequalities. </title> <journal> Grundlehren der mathematischen Wissenschaften, </journal> <volume> 285. </volume> <publisher> Springer, </publisher> <address> Berlin, </address> <year> 1988. </year>
Reference-contexts: Notice that this definition differs from the classic one (Grunbaum, 1967) by a factor of n!. These and other basic properties of the mixed volume are demonstrated in (Grunbaum, 1967, Betke, 1992, Schneider, 1993), whereas a more advanced treatment can be found in <ref> (Burago and Zalgaller, 1988) </ref>. We are now ready to state Bernstein's theorem, the cornerstone of sparse elimination theory.
Reference: <author> J.F. Canny. </author> <title> The Complexity of Robot Motion Planning. </title> <publisher> M.I.T. Press, </publisher> <address> Cambridge, Mass., </address> <year> 1988. </year>
Reference-contexts: Our motivation stems from the fact that resultant-based methods currently offer the most efficient solution to certain problems in a variety of areas ranging from robotics <ref> (Canny, 1988) </ref> to modeling (Bajaj, Garrity and Warren, 1988). To illustrate this claim, the remaining of this section discusses some applications. A concrete example from robot kinematics is the inverse kinematics problem for a robot with six rotational joints (6R) and, therefore, six degrees of freedom.
Reference: <author> A. </author> <title> Cayley. On the theory of elimination. </title> <journal> Dublin Math. J., II:116-120, </journal> <volume> 1848. </volume>
Reference: <author> J. Canny and I. Emiris. </author> <title> An efficient algorithm for the sparse mixed resultant. </title> <editor> In G. Cohen, T. Mora, and O. Moreno, editors, </editor> <booktitle> Proc. Intern. Symp. Applied Algebra, Algebraic Algor. and Error-Corr. Codes, Lect. Notes in Comp. Science 263, </booktitle> <pages> pages 89-104, </pages> <address> Puerto Rico, 1993. </address> <publisher> Springer Verlag. </publisher>
Reference-contexts: This class of systems includes all systems for which an optimal formula provably exists. For two polynomials the new algorithm returns Sylvester's matrix, whereas for a linear system it yields the coefficient matrix. The original idea behind the present approach first appeared in <ref> (Emiris and Canny, 1993) </ref>. <p> To motivate the present approach, we compare the various resultant algorithms on this example. The matrix constructed by the algorithm of <ref> (Canny and Emiris, 1993) </ref> has size 15, whereas its greedy version (Canny and Pedersen, 1993) and the algorithm in this paper respectively reduce the matrix size to 14 and 12. <p> To motivate the present approach, we compare the various resultant algorithms on this example. The matrix constructed by the algorithm of (Canny and Emiris, 1993) has size 15, whereas its greedy version <ref> (Canny and Pedersen, 1993) </ref> and the algorithm in this paper respectively reduce the matrix size to 14 and 12. The multivariate resultant has total degree 26 and can be obtained as the sparse resultant when the Newton polytopes are the dashed triangles in figure 1. 4. <p> Consider all n-fold partial Minkowski sums Q i = Q Q i = j6=i We shall restrict our choice of B i by requiring that it be a subset of T i ; notice that this is the case in <ref> (Canny and Emiris, 1993) </ref>. One consequence is that the supports of all products g i f i lie within the Minkowski sum Q, therefore supp (g) Q. Given a direction vector v 2 Q n n f0; : : : ; 0g 10 I.Z. Emiris and J.F. <p> Recall that the sparse resultant's total degree is 11 and the classical resultant's degree is 26, whereas the algorithm in <ref> (Canny and Emiris, 1993) </ref> and its greedy variant (Canny and Pedersen, 1993) yield, respectively, a 15 fi 15 and a 14 fi 14 matrix. <p> Recall that the sparse resultant's total degree is 11 and the classical resultant's degree is 26, whereas the algorithm in (Canny and Emiris, 1993) and its greedy variant <ref> (Canny and Pedersen, 1993) </ref> yield, respectively, a 15 fi 15 and a 14 fi 14 matrix. <p> In general D 6= R and there are two alternative ways to proceed in order to obtain the resultant under a specific specialization of the coefficients <ref> (Canny and Emiris, 1993) </ref>. For both methods we fix the cardinality of B 1 to MV 1 so that deg f 1 D = deg f 1 R. This enables us to define R as the GCD of at most n + 1 such minors. <p> For the last three types we used permutation (1; 2; 3), resulting in vectors v = (3; 3; 2; 1), (3; 3; 3; 1) and (3; 3; 3; 1) respectively. It is interesting to compare these resultant matrices to those computed by the greedy algorithm in <ref> (Canny and Pedersen, 1993) </ref>, with sizes shown in column "greedy". There is a randomization step in this algorithm that might lead to matrices of slightly smaller size. Nonetheless, the results from a single run of the greedy algorithm suggest that the present approach yields more economical formulae. <p> All v vectors are random perturbations of vector (1; : : : ; 1), since this works best for small dimensions. We also compare the greedy algorithm of <ref> (Canny and Pedersen, 1993) </ref>, which yields matrices of comparable size. We must note that a thorough study of this family of systems goes beyond the Algorithms for the Sparse Resultant and the Mixed Volume 29 Table 4.
Reference: <author> D. Cox, J. Little, and D. O'Shea. </author> <title> Ideals, Varieties, and Algorithms. Undergraduate Texts in Mathematics. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1992. </year>
Reference: <author> J. Canny and P. Pedersen. </author> <title> An algorithm for the Newton resultant. </title> <type> Technical Report 1394, </type> <institution> Computer Science Dept., Cornell University, </institution> <year> 1993. </year>
Reference-contexts: This class of systems includes all systems for which an optimal formula provably exists. For two polynomials the new algorithm returns Sylvester's matrix, whereas for a linear system it yields the coefficient matrix. The original idea behind the present approach first appeared in <ref> (Emiris and Canny, 1993) </ref>. <p> To motivate the present approach, we compare the various resultant algorithms on this example. The matrix constructed by the algorithm of <ref> (Canny and Emiris, 1993) </ref> has size 15, whereas its greedy version (Canny and Pedersen, 1993) and the algorithm in this paper respectively reduce the matrix size to 14 and 12. <p> To motivate the present approach, we compare the various resultant algorithms on this example. The matrix constructed by the algorithm of (Canny and Emiris, 1993) has size 15, whereas its greedy version <ref> (Canny and Pedersen, 1993) </ref> and the algorithm in this paper respectively reduce the matrix size to 14 and 12. The multivariate resultant has total degree 26 and can be obtained as the sparse resultant when the Newton polytopes are the dashed triangles in figure 1. 4. <p> Consider all n-fold partial Minkowski sums Q i = Q Q i = j6=i We shall restrict our choice of B i by requiring that it be a subset of T i ; notice that this is the case in <ref> (Canny and Emiris, 1993) </ref>. One consequence is that the supports of all products g i f i lie within the Minkowski sum Q, therefore supp (g) Q. Given a direction vector v 2 Q n n f0; : : : ; 0g 10 I.Z. Emiris and J.F. <p> Recall that the sparse resultant's total degree is 11 and the classical resultant's degree is 26, whereas the algorithm in <ref> (Canny and Emiris, 1993) </ref> and its greedy variant (Canny and Pedersen, 1993) yield, respectively, a 15 fi 15 and a 14 fi 14 matrix. <p> Recall that the sparse resultant's total degree is 11 and the classical resultant's degree is 26, whereas the algorithm in (Canny and Emiris, 1993) and its greedy variant <ref> (Canny and Pedersen, 1993) </ref> yield, respectively, a 15 fi 15 and a 14 fi 14 matrix. <p> In general D 6= R and there are two alternative ways to proceed in order to obtain the resultant under a specific specialization of the coefficients <ref> (Canny and Emiris, 1993) </ref>. For both methods we fix the cardinality of B 1 to MV 1 so that deg f 1 D = deg f 1 R. This enables us to define R as the GCD of at most n + 1 such minors. <p> For the last three types we used permutation (1; 2; 3), resulting in vectors v = (3; 3; 2; 1), (3; 3; 3; 1) and (3; 3; 3; 1) respectively. It is interesting to compare these resultant matrices to those computed by the greedy algorithm in <ref> (Canny and Pedersen, 1993) </ref>, with sizes shown in column "greedy". There is a randomization step in this algorithm that might lead to matrices of slightly smaller size. Nonetheless, the results from a single run of the greedy algorithm suggest that the present approach yields more economical formulae. <p> All v vectors are random perturbations of vector (1; : : : ; 1), since this works best for small dimensions. We also compare the greedy algorithm of <ref> (Canny and Pedersen, 1993) </ref>, which yields matrices of comparable size. We must note that a thorough study of this family of systems goes beyond the Algorithms for the Sparse Resultant and the Mixed Volume 29 Table 4.
Reference: <author> J. Canny and J.M. Rojas. </author> <title> An optimal condition for determining the exact number of roots of a polynomial system. </title> <booktitle> In Proc. ACM Intern. Symp. on Symbolic and Algebraic Computation, </booktitle> <pages> pages 96-102, </pages> <address> Bonn, </address> <month> July </month> <year> 1991. </year>
Reference-contexts: This is also called the BKK bound, since it relies heavily on work by Kushnirenko (1975) and has been alternatively proven by Khovanskii (1978) . The above bound is guaranteed to be exact for generic polynomials. Since its statement the conditions for exactness have been significantly weakened <ref> (Canny and Rojas, 1991, Rojas, 1994) </ref>. Bernstein's bound is at most as high as Bezout's bound and usually significantly tighter for systems encountered in engineering applications.
Reference: <author> A.L. Dixon. </author> <title> The eliminant of three quantics in two independent variables. </title> <journal> Proceedings of London Mathematical Society, </journal> <volume> 6 </volume> <pages> 49-69, 209-236, </pages> <year> 1908. </year>
Reference-contexts: Multigraded systems include all systems for which Sylvester-type formulae exist and, in particular, linear systems, systems of two univariate polynomials and bihomogeneous systems of three polynomials whose resultant is, respectively, the coefficient determinant, the Sylvester resultant and the Dixon resultant <ref> (Dixon, 1908) </ref>. For the resultant matrix of a multigraded system, all supports B i are identical, of cardinality equal to the unique n-fold mixed volume. Let B R n be the convex hull of B i .
Reference: <author> I. Emiris and J. Canny. </author> <title> A practical method for the sparse resultant. </title> <booktitle> In Proc. ACM Intern. Symp. on Symbolic and Algebraic Computation, </booktitle> <pages> pages 183-192, </pages> <address> Kiev, </address> <year> 1993. </year>
Reference-contexts: This class of systems includes all systems for which an optimal formula provably exists. For two polynomials the new algorithm returns Sylvester's matrix, whereas for a linear system it yields the coefficient matrix. The original idea behind the present approach first appeared in <ref> (Emiris and Canny, 1993) </ref>. <p> To motivate the present approach, we compare the various resultant algorithms on this example. The matrix constructed by the algorithm of <ref> (Canny and Emiris, 1993) </ref> has size 15, whereas its greedy version (Canny and Pedersen, 1993) and the algorithm in this paper respectively reduce the matrix size to 14 and 12. <p> Consider all n-fold partial Minkowski sums Q i = Q Q i = j6=i We shall restrict our choice of B i by requiring that it be a subset of T i ; notice that this is the case in <ref> (Canny and Emiris, 1993) </ref>. One consequence is that the supports of all products g i f i lie within the Minkowski sum Q, therefore supp (g) Q. Given a direction vector v 2 Q n n f0; : : : ; 0g 10 I.Z. Emiris and J.F. <p> Recall that the sparse resultant's total degree is 11 and the classical resultant's degree is 26, whereas the algorithm in <ref> (Canny and Emiris, 1993) </ref> and its greedy variant (Canny and Pedersen, 1993) yield, respectively, a 15 fi 15 and a 14 fi 14 matrix. <p> Several algorithms exist for the calculation of mixed volumes. One of the first approaches <ref> (Emiris, 1993) </ref> computes the entire mixed subdivision and simultaneously all n-fold mixed volumes required for a system of n + 1 polynomials in n variables, but has to construct explicitly the lower envelope of b Q. <p> In general D 6= R and there are two alternative ways to proceed in order to obtain the resultant under a specific specialization of the coefficients <ref> (Canny and Emiris, 1993) </ref>. For both methods we fix the cardinality of B 1 to MV 1 so that deg f 1 D = deg f 1 R. This enables us to define R as the GCD of at most n + 1 such minors.
Reference: <author> E. Ehrart. </author> <title> Sur un probleme de geometrie diophantienne, i. </title> <journal> polyedres et reseaux. J. Reine Angew. Math., </journal> <volume> 226 </volume> <pages> 1-29, </pages> <year> 1967. </year>
Reference: <author> I. Emiris. </author> <title> An efficient computation of mixed volume. </title> <type> Technical Report 734, </type> <institution> Computer Science Division, U.C. Berkeley, Berkeley, </institution> <address> CA, </address> <year> 1993. </year>
Reference-contexts: This class of systems includes all systems for which an optimal formula provably exists. For two polynomials the new algorithm returns Sylvester's matrix, whereas for a linear system it yields the coefficient matrix. The original idea behind the present approach first appeared in <ref> (Emiris and Canny, 1993) </ref>. <p> To motivate the present approach, we compare the various resultant algorithms on this example. The matrix constructed by the algorithm of <ref> (Canny and Emiris, 1993) </ref> has size 15, whereas its greedy version (Canny and Pedersen, 1993) and the algorithm in this paper respectively reduce the matrix size to 14 and 12. <p> Consider all n-fold partial Minkowski sums Q i = Q Q i = j6=i We shall restrict our choice of B i by requiring that it be a subset of T i ; notice that this is the case in <ref> (Canny and Emiris, 1993) </ref>. One consequence is that the supports of all products g i f i lie within the Minkowski sum Q, therefore supp (g) Q. Given a direction vector v 2 Q n n f0; : : : ; 0g 10 I.Z. Emiris and J.F. <p> Recall that the sparse resultant's total degree is 11 and the classical resultant's degree is 26, whereas the algorithm in <ref> (Canny and Emiris, 1993) </ref> and its greedy variant (Canny and Pedersen, 1993) yield, respectively, a 15 fi 15 and a 14 fi 14 matrix. <p> Several algorithms exist for the calculation of mixed volumes. One of the first approaches <ref> (Emiris, 1993) </ref> computes the entire mixed subdivision and simultaneously all n-fold mixed volumes required for a system of n + 1 polynomials in n variables, but has to construct explicitly the lower envelope of b Q. <p> In general D 6= R and there are two alternative ways to proceed in order to obtain the resultant under a specific specialization of the coefficients <ref> (Canny and Emiris, 1993) </ref>. For both methods we fix the cardinality of B 1 to MV 1 so that deg f 1 D = deg f 1 R. This enables us to define R as the GCD of at most n + 1 such minors.
Reference: <author> I.Z. Emiris. </author> <title> On the complexity of sparse elimination. </title> <type> Technical Report 840, </type> <institution> Computer Science Division, U.C. Berkeley, </institution> <year> 1994. </year> <note> Submitted for publication. </note>
Reference-contexts: We also sketch our publicly available implementation of the mixed volume algorithm and report on experimental results; some of these results first appeared in <ref> (Emiris and Rege, 1994) </ref>. Our motivation stems from the fact that resultant-based methods currently offer the most efficient solution to certain problems in a variety of areas ranging from robotics (Canny, 1988) to modeling (Bajaj, Garrity and Warren, 1988). <p> Canny and Emiris (1993) proposed a general algorithm for computing the sparse resultant of n +1 non-homogeneous polynomials in n variables. The worst-case asymptotic cost of this algorithm, under mild assumptions, is polynomial in the resultant's degree and simply exponential in n <ref> (Emiris, 1994) </ref>. This was the first efficient algorithm for the general case in the sense that the lower bound for 4 I.Z. Emiris and J.F. Canny computing the resultant is polynomial in its degree and exponential in n. <p> An important property of the mixed cells is that, generically, they define a monomial basis of the coordinate ring of the ideal generated by n polynomials in n variables <ref> (Emiris and Rege, 1994) </ref>, and they specify the start system for a sparse homotopy. Several algorithms exist for the calculation of mixed volumes. <p> As already explained, the determinant of the resultant matrix is, in general, a multiple of the resultant. In several applications, including polynomial system solving, an exact matrix formula for the resultant is not required <ref> (Emiris, 1994, 1994b and 1995) </ref>, though efficiency is optimized when the minor D equals the sparse resultant. In general D 6= R and there are two alternative ways to proceed in order to obtain the resultant under a specific specialization of the coefficients (Canny and Emiris, 1993). <p> Asymptotic Complexity Here we analyze the worst-case asymptotic complexity of the algorithm, based on the real RAM model of computation (Aho et.al.). Again, two complexity functions are used, namely the arithmetic and the bit complexity. We make repeated use of the following theorem. Theorem 7.2. <ref> (Emiris, 1994) </ref> Given are convex polytopes Q 1 ; : : : ; Q n 2 R n , all of which have positive volume, and let Q be the polytope of minimum volume, for some 2 f1; : : : ; ng.
Reference: <author> I.Z. Emiris. </author> <title> Sparse Elimination and Applications in Kinematics. </title> <type> PhD thesis, </type> <institution> Computer Science Division, Dept. of Electrical Engineering and Computer Science, University of California, Berkeley, </institution> <month> December </month> <year> 1994. </year>
Reference-contexts: We also sketch our publicly available implementation of the mixed volume algorithm and report on experimental results; some of these results first appeared in <ref> (Emiris and Rege, 1994) </ref>. Our motivation stems from the fact that resultant-based methods currently offer the most efficient solution to certain problems in a variety of areas ranging from robotics (Canny, 1988) to modeling (Bajaj, Garrity and Warren, 1988). <p> Canny and Emiris (1993) proposed a general algorithm for computing the sparse resultant of n +1 non-homogeneous polynomials in n variables. The worst-case asymptotic cost of this algorithm, under mild assumptions, is polynomial in the resultant's degree and simply exponential in n <ref> (Emiris, 1994) </ref>. This was the first efficient algorithm for the general case in the sense that the lower bound for 4 I.Z. Emiris and J.F. Canny computing the resultant is polynomial in its degree and exponential in n. <p> An important property of the mixed cells is that, generically, they define a monomial basis of the coordinate ring of the ideal generated by n polynomials in n variables <ref> (Emiris and Rege, 1994) </ref>, and they specify the start system for a sparse homotopy. Several algorithms exist for the calculation of mixed volumes. <p> As already explained, the determinant of the resultant matrix is, in general, a multiple of the resultant. In several applications, including polynomial system solving, an exact matrix formula for the resultant is not required <ref> (Emiris, 1994, 1994b and 1995) </ref>, though efficiency is optimized when the minor D equals the sparse resultant. In general D 6= R and there are two alternative ways to proceed in order to obtain the resultant under a specific specialization of the coefficients (Canny and Emiris, 1993). <p> Asymptotic Complexity Here we analyze the worst-case asymptotic complexity of the algorithm, based on the real RAM model of computation (Aho et.al.). Again, two complexity functions are used, namely the arithmetic and the bit complexity. We make repeated use of the following theorem. Theorem 7.2. <ref> (Emiris, 1994) </ref> Given are convex polytopes Q 1 ; : : : ; Q n 2 R n , all of which have positive volume, and let Q be the polytope of minimum volume, for some 2 f1; : : : ; ng.
Reference: <author> I.Z. Emiris. </author> <title> A general solver based on sparse resultants. </title> <booktitle> In Proc. PoSSo (Polynomial System Solving) Workshop on Software, </booktitle> <pages> pages 35-54, </pages> <address> Paris, </address> <month> March </month> <year> 1995. </year>
Reference-contexts: We are given the coordinates of 5 points in the environment as seen by the two successive positions of the camera. Using the general polynomial system solver described in <ref> (Emiris, 1995) </ref>, which includes the implementations of this article, this problem was solved to at least 5 accurate digits, which is satisfactory for vision applications. <p> In other words, we consider the polynomials as functions on n 1 variables with coefficients in R [x n ]. Both the resultant and the resultant matrix have entries in R [x n ]. This method to system solving is formalized in <ref> (Emiris, 1995) </ref>. Experimental results are shown in table 4, with running times rounded to the nearest integer, on the Sun Sparc 10/51 of table 1.
Reference: <author> I.Z. Emiris and A. </author> <title> Rege. Monomial bases and polynomial system solving. </title> <booktitle> In Proc. ACM Intern. Symp. on Symbolic and Algebraic Computation, </booktitle> <pages> pages 114-122, </pages> <address> Oxford, </address> <month> July </month> <year> 1994. </year> <title> Algorithms for the Sparse Resultant and the Mixed Volume 31 J.-C. Faugere. State of GB and tutorial. </title> <booktitle> In Proc. PoSSo (Polynomial System Solving) Workshop on Software, </booktitle> <pages> pages 55-71, </pages> <address> Paris, </address> <month> March </month> <year> 1995. </year>
Reference-contexts: We also sketch our publicly available implementation of the mixed volume algorithm and report on experimental results; some of these results first appeared in <ref> (Emiris and Rege, 1994) </ref>. Our motivation stems from the fact that resultant-based methods currently offer the most efficient solution to certain problems in a variety of areas ranging from robotics (Canny, 1988) to modeling (Bajaj, Garrity and Warren, 1988). <p> Canny and Emiris (1993) proposed a general algorithm for computing the sparse resultant of n +1 non-homogeneous polynomials in n variables. The worst-case asymptotic cost of this algorithm, under mild assumptions, is polynomial in the resultant's degree and simply exponential in n <ref> (Emiris, 1994) </ref>. This was the first efficient algorithm for the general case in the sense that the lower bound for 4 I.Z. Emiris and J.F. Canny computing the resultant is polynomial in its degree and exponential in n. <p> An important property of the mixed cells is that, generically, they define a monomial basis of the coordinate ring of the ideal generated by n polynomials in n variables <ref> (Emiris and Rege, 1994) </ref>, and they specify the start system for a sparse homotopy. Several algorithms exist for the calculation of mixed volumes. <p> As already explained, the determinant of the resultant matrix is, in general, a multiple of the resultant. In several applications, including polynomial system solving, an exact matrix formula for the resultant is not required <ref> (Emiris, 1994, 1994b and 1995) </ref>, though efficiency is optimized when the minor D equals the sparse resultant. In general D 6= R and there are two alternative ways to proceed in order to obtain the resultant under a specific specialization of the coefficients (Canny and Emiris, 1993). <p> Asymptotic Complexity Here we analyze the worst-case asymptotic complexity of the algorithm, based on the real RAM model of computation (Aho et.al.). Again, two complexity functions are used, namely the arithmetic and the bit complexity. We make repeated use of the following theorem. Theorem 7.2. <ref> (Emiris, 1994) </ref> Given are convex polytopes Q 1 ; : : : ; Q n 2 R n , all of which have positive volume, and let Q be the polytope of minimum volume, for some 2 f1; : : : ; ng.
Reference: <author> W. Fulton. </author> <title> Introduction to Toric Varieties. </title> <booktitle> Number 131 in Annals of Mathematics. </booktitle> <publisher> Princeton University Press, Princeton, </publisher> <year> 1993. </year>
Reference-contexts: Consider the intersection multiplicity of the hypersurfaces defined by the given polynomials at an isolated common root. Recall that this is a positive integer and is equal to unity exactly when the hypersurfaces meet transversally. Algorithms for the Sparse Resultant and the Mixed Volume 7 Theorem 3.7. <ref> (Fulton, 1993, sect. 5.5) </ref> Given are polynomials f 1 ; : : : ; f n 2 K [x; x 1 ] with Newton polytopes Q 1 ; : : : ; Q n , where K is an arbitrary field and K is its algebraic closure.
Reference: <author> M.R. Garey and D.S. Johnson. </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness. </title> <publisher> Freeman, </publisher> <address> New York, </address> <year> 1979. </year>
Reference-contexts: Under the additional hypotheses, the last factor is dominated and the second claim follows. 2 We put the analysis in the perspective of complexity classes; for definitions see <ref> (Garey and John son, 1979) </ref>. Theorem 6.5. Computing the mixed volume is in #P. Proof.
Reference: <author> I.M. Gelfand, </author> <title> M.M. Kapranov, and A.V. Zelevinsky. Discriminants of polynomials in several variables and triangulations of Newton polytopes. </title> <journal> Leningrad Math. J., </journal> <volume> 2(3) </volume> <pages> 449-505, </pages> <year> 1991. </year> <note> (Translated from Algebra i Analiz 2, </note> <year> 1990, </year> <pages> pp. 1-62). </pages>
Reference-contexts: In all cases, the nonzero entries of the matrices are coefficients of the given polynomials. Various more recent algorithms exist to construct this resultant (Lazard, 1981, Canny, 1988, Renegar, 1992). The sparse resultant was defined following the study of generalized hypergeometric functions and A-discriminants <ref> (Gelfand, Kapranov and Zelevinsky, 1991 and 1994) </ref>. The exact notion of sparseness is formalized and compared to the dense case in the next section.
Reference: <editor> I.M. Gelfand, M.M. Kapranov, and A.V. Zelevinsky. Discriminants and Resultants. </editor> <publisher> Birkhauser, </publisher> <address> Boston, </address> <year> 1994. </year>
Reference: <author> M. Grotschel, L. Lovasz, and A. Schrijver. </author> <title> Geometric Algorithms and Combinatorial Optimization. </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, 2nd edition, </address> <year> 1993. </year>
Reference-contexts: Notice that it is possible to remove the recursion. Linear programming is used to compute mn; mx. For a general introduction on the uses of linear programming in combinatorial geometry the reader may consult <ref> (Grotschel, Lovasz and Schrijver, 1993) </ref>.
Reference: <author> B. Grunbaum. </author> <title> Convex Polytopes. </title> <publisher> Wiley-Interscience, </publisher> <address> New York, </address> <year> 1967. </year>
Reference-contexts: for nonnegative 1 ; : : : ; n 2 R and convex polytopes A 1 ; : : : ; A n , the expression Vol ( 1 A 1 + + n A n ) expands to a homogeneous polynomial in 1 ; : : : ; n <ref> (Grunbaum, 1967, sect. 15.1) </ref>. Definition 3.5. <p> Notice that this definition differs from the classic one <ref> (Grunbaum, 1967) </ref> by a factor of n!. These and other basic properties of the mixed volume are demonstrated in (Grunbaum, 1967, Betke, 1992, Schneider, 1993), whereas a more advanced treatment can be found in (Burago and Zalgaller, 1988). <p> Notice that this definition differs from the classic one (Grunbaum, 1967) by a factor of n!. These and other basic properties of the mixed volume are demonstrated in <ref> (Grunbaum, 1967, Betke, 1992, Schneider, 1993) </ref>, whereas a more advanced treatment can be found in (Burago and Zalgaller, 1988). We are now ready to state Bernstein's theorem, the cornerstone of sparse elimination theory. <p> To estimate the number of facets of b Q k we use the well-known bound on the number of facet of the convex hull of m points in n + 1 dimensions, namely O (m b (n+1)=2c ) <ref> (Grunbaum, 1967) </ref>. By the 20 I.Z. Emiris and J.F. Canny above hypothesis, k = O km b (n+1)=2c This assumption is supported by experimental evidence from the cyclic n-roots problem examined in section 9. Corollary 6.7.
Reference: <author> J.L. Hafner and K.S. McCurley. </author> <title> Asymptotically fast triangularization of matrices over rings. </title> <journal> SIAM J. Computing, </journal> <volume> 20(6) </volume> <pages> 1068-1083, </pages> <year> 1991. </year>
Reference-contexts: Suppose this sublattice has rank n and is thus identified with Z n . In what follows, it is assumed that this has already been done by means of the Smith normal form; for computing this form see <ref> (Hafner and McCurley, 1991) </ref>. Let P (A) K [x; x 1 ], for A 6= ;, be the set of all Laurent polynomials in n variables with nonempty support A Z n . Clearly, f i 2 P (A i ).
Reference: <author> B. Huber and B. Sturmfels. </author> <title> A polyhedral method for solving sparse polynomial systems. </title> <journal> Math. Comp. </journal> <note> To appear. A preliminary version presented at the Workshop on Real Algebraic Geometry, </note> <month> Aug. </month> <year> 1992. </year>
Reference: <author> B. Huber and B. Sturmfels. </author> <title> Bernstein's theorem in affine space. </title> <journal> Discr. </journal> <note> and Computational Geometry, 1995. To appear. </note>
Reference: <author> A. </author> <title> Hurwitz. Uber die Tragheitsformen Eines Algebraischen Moduls. </title> <institution> Annali di Mat., Tomo XX(Ser. III):113-151, </institution> <year> 1913. </year>
Reference: <author> N. Karmarkar. </author> <title> A new polynomial-time algorithm for linear programming. </title> <journal> Combinatorica, </journal> <volume> 4 </volume> <pages> 373-395, </pages> <year> 1984. </year>
Reference-contexts: The number of variables and constraints is V = O (nm) and C = O (n) respectively and the bit size of the coefficients is B = L d . Hence, by bound (6.2) <ref> (Karmarkar, 1984) </ref>, the worst-case bit complexity per linear program is O (n 7:5 m 5:5 L 2 d ). An asymptotic upper bound on the number of linear programming problems is the cardinality of T i . <p> Each linear program has at most V = s variables, C = O (n) constraints and B = L d bits per coefficients, hence the total bit complexity of this step is O fl (n 3 s 6:5 L 2 d ) by bound 6.2; see <ref> (Karmarkar, 1984, Grotschel et.al.) </ref> for details. By the assumption on s this step is dominated by the cost of the Mayan Pyramid algorithm. The total cost of the Mayan Pyramid algorithm is O (e n n 7 m 5:5 L 2 d deg R).
Reference: <author> L. Khachiyan. </author> <title> Complexity of polytope volume computation. In Janos Pach, editor, New Trends in Discrete and Computational Geometry, chapter IV. </title> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: The latter is known to be #P-hard <ref> (Khachiyan, 1993) </ref>, hence computing mixed volumes is also #P-hard. Moreover, it has recently been shown that mixed volume is #P-complete (Pedersen, 1994) by a reduction of computing the permanent.
Reference: <author> A.G. Khovanskii. </author> <title> Newton polyhedra and the genus of complete intersections. </title> <journal> Funktsional'nyi Analiz i Ego Prilozheniya, </journal> <volume> 12(1) </volume> <pages> 51-61, </pages> <address> Jan.-Mar. </address> <year> 1978. </year>
Reference: <editor> A.G. Khovanskii. Fewnomials. </editor> <publisher> AMS Press, </publisher> <address> Providence, Rhode Island, </address> <year> 1991. </year>
Reference: <author> A.G. Kushnirenko. </author> <title> The Newton polyhedron and the number of solutions of a system of k equations in k unknowns. </title> <journal> Uspekhi Mat. Nauk., </journal> <volume> 30 </volume> <pages> 266-267, </pages> <year> 1975. </year>
Reference: <author> Y.N. Lakshman. </author> <title> On the complexity of computing Grobner bases for zero-dimensional polynomial ideals. </title> <type> PhD thesis, </type> <institution> Computer Science Department, Rensselaer Polytechnic Institute, </institution> <address> Troy, New York, </address> <month> December </month> <year> 1990. </year>
Reference-contexts: They constitute a popular and very general approach and several implementations exist. The main limitations of the method are the large coefficient size and the degree of the basis polynomials. For zero-dimensional affine varieties a tight upper bound on the complexity is d O (n) <ref> (Lakshman Y.N., 1990) </ref>, while the bit complexity is d O (n 2 ) where d is an upper bound on the degree of the input polynomials.
Reference: <author> D. Lazard. </author> <title> Resolution des systemes d' Equations algebriques. </title> <journal> Theor. Comp. Science, </journal> <volume> 15 </volume> <pages> 77-110, </pages> <year> 1981. </year>
Reference-contexts: In all cases, the nonzero entries of the matrices are coefficients of the given polynomials. Various more recent algorithms exist to construct this resultant <ref> (Lazard, 1981, Canny, 1988, Renegar, 1992) </ref>. The sparse resultant was defined following the study of generalized hypergeometric functions and A-discriminants (Gelfand, Kapranov and Zelevinsky, 1991 and 1994). The exact notion of sparseness is formalized and compared to the dense case in the next section.
Reference: <author> T.Y. Li and X. Wang. </author> <title> The BKK root count in C N . Manuscript, </title> <year> 1994. </year>
Reference-contexts: By abuse of language we refer to the same function when we speak of the mixed volume of a system of polynomials, the mixed volume of the respective supports or the mixed volume of the respective Newton polytopes. Theorem 3.8. <ref> (Li and Wang, 1994) </ref> For polynomials f 1 ; : : : ; f n 2 C [x; x 1 ] with supports A 1 ; : : : ; A n the number of common isolated zeros in C n , counting multiplicities, is either infinite or bounded by MV <p> The method of Huber and Sturmfels (1992) takes advantage of repeated polytopes, while that of Verschelde and Gatermann (1994) exploits symmetry; a general implementation has been described in <ref> (Verschelde, Verlinden and Cools, 1994) </ref>. These algorithms have the same worst-case asymptotic complexity as our own algorithm defined below. This complexity is analyzed below and turns out to be simply exponential in n.
Reference: <author> F.S. </author> <title> Macaulay. Some formulae in elimination. </title> <journal> Proc. London Math. Soc., </journal> <volume> 1(33) </volume> <pages> 3-27, </pages> <year> 1902. </year>
Reference: <author> D. Manocha and J. Canny. </author> <title> Multipolynomial resultants and linear algebra. </title> <booktitle> In Proc. ACM Intern. Symp. on Symbolic and Algebraic Computation, </booktitle> <pages> pages 96-102, </pages> <year> 1992. </year>
Reference-contexts: A concrete example from robot kinematics is the inverse kinematics problem for a robot with six rotational joints (6R) and, therefore, six degrees of freedom. It is solved using a customized resultant in 11 milliseconds on a 34 MIPS IBM rs/6000 <ref> (Manocha and Canny, 1992) </ref>. This problem consists in finding the angle at every joint in order to attain a given final position, while the link lengths are fixed. Previous homotopy methods had running times unacceptable of real-time industrial manipulators. <p> For a bicubic surface, methods based on custom-made resultants have been shown to run faster by a factor of at least 10 3 compared to Grobner bases and the Ritt-Wu method <ref> (Manocha and Canny, 1992) </ref>. One limitation of the solutions referred to above is the lack of a general method to attack arbitrary algebraic systems.
Reference: <author> D. Manocha and J. Canny. </author> <title> Real time inverse kinematics of general 6R manipulators. </title> <booktitle> In Proc. IEEE Intern. Conf. Robotics and Automation, </booktitle> <pages> pages 383-389, </pages> <address> Nice, </address> <month> May </month> <year> 1992. </year>
Reference-contexts: A concrete example from robot kinematics is the inverse kinematics problem for a robot with six rotational joints (6R) and, therefore, six degrees of freedom. It is solved using a customized resultant in 11 milliseconds on a 34 MIPS IBM rs/6000 <ref> (Manocha and Canny, 1992) </ref>. This problem consists in finding the angle at every joint in order to attain a given final position, while the link lengths are fixed. Previous homotopy methods had running times unacceptable of real-time industrial manipulators. <p> For a bicubic surface, methods based on custom-made resultants have been shown to run faster by a factor of at least 10 3 compared to Grobner bases and the Ritt-Wu method <ref> (Manocha and Canny, 1992) </ref>. One limitation of the solutions referred to above is the lack of a general method to attack arbitrary algebraic systems.
Reference: <author> B. Mishra. </author> <title> Algorithmic Algebra. </title> <publisher> Springer Verlag, </publisher> <address> New York, </address> <year> 1993. </year>
Reference-contexts: Another approach is the Ritt-Wu method, whose complexity has been recently shown to be exponential in the number of variables and polynomial in the polynomial degrees <ref> (Mishra, 1993, ch. 5) </ref>. The principal numerical techniques are continuation methods, which are typically fast but offer little control over the numerical error. Homotopies that follow the optimal number of paths have been proposed for multihomogeneous systems (Morgan, Sommese and Wampler, 1993).
Reference: <author> J.J. Modi. </author> <title> Parallel Algorithms and Matrix Computation. </title> <booktitle> Oxford Applied Mathematics and Computing Science Series. </booktitle> <publisher> Clarendon Press, Oxford, </publisher> <year> 1990. </year>
Reference-contexts: Further parallelization may be achieved by having different "slices" of each Q i assigned to different processors. The most expensive phase is testing whether M has full rank. There exists a rich literature on parallel LU decomposition; see for instance <ref> (Modi, 1990) </ref>. 7.1. Asymptotic Complexity Here we analyze the worst-case asymptotic complexity of the algorithm, based on the real RAM model of computation (Aho et.al.). Again, two complexity functions are used, namely the arithmetic and the bit complexity. We make repeated use of the following theorem.
Reference: <author> A.P. Morgan, A.J. Sommese, and C.W. Wampler. </author> <title> A product-decomposition theorem for bounding Bezout numbers. </title>
Reference: <author> SIAM J. </author> <title> Numerical Analysis. </title> <note> To appear. Manuscript, </note> <year> 1993. </year>
Reference: <author> P. Pedersen. </author> <title> AMS-IMS-SIAM Summer Conference on Continuous Algorithms and Complexity. Mt. </title> <address> Holyoke, Mass., </address> <month> July </month> <year> 1994. </year>
Reference-contexts: The latter is known to be #P-hard (Khachiyan, 1993), hence computing mixed volumes is also #P-hard. Moreover, it has recently been shown that mixed volume is #P-complete <ref> (Pedersen, 1994) </ref> by a reduction of computing the permanent. To model the average-case behavior and account for the effects of pruning we should estimate the number of edge combinations that pass the test at the various stages.
Reference: <author> W.H. Press, B.P. Flannery, S.A. Teukolsky, and W.T. Vetterling. </author> <title> Numerical Recipes in C : the Art of Scientific Computing. </title> <publisher> Cambridge University Press, </publisher> <address> Cambridge, </address> <year> 1988. </year>
Reference-contexts: In implementing the algorithm, we have used an existing implementation of the Simplex algorithm from the Numerical Recipes in C package <ref> (Press, Flannery, Teukolsky and Vetterling, 1988) </ref>. Unfortunately, these sources are not free for distribution, although most sites today have access to them. The ftp site of the Lift-Prune program contains our corrections to the Numerical Recipes in C sources, along with our own code and the executables.
Reference: <author> L. Pottier. </author> <title> Bounds for degree of the n-cyclic system. </title> <type> INRIA Sophia-Antipolis, Manuscript, </type> <year> 1995. </year>
Reference-contexts: Our bound for n = 11 verifies the conjecture by Froberg and Bjorck that the number of roots for prime n is 2n2 . This value was shown to be an upper bound for every n <ref> (Pottier, 1995) </ref>. Our experimental results support the following conjecture. Conjecture 9.1. When the variety of the cyclic n-root system has zero dimension, then the mixed volume gives the exact number of affine solutions.
Reference: <author> P. Pedersen and B. Sturmfels. </author> <title> Product Formulas for Resultants and Chow Forms. </title> <journal> Math. Zeitschrift, </journal> <volume> 214 </volume> <pages> 377-396, </pages> <year> 1993. </year>
Reference-contexts: It is proven in <ref> (Pedersen and Sturmfels, 1993) </ref> that Z is an irreducible algebraic variety of positive codimension. Definition 3.9. The sparse resultant R = R (A 1 ; : : : ; A n+1 ) of system (3.1) is a polynomial in Z [c]. <p> the coefficients of polynomial f i and let MV i = MV (Q 1 ; : : : ; Q i1 ; Q i+1 ; : : : ; Q n+1 ); 8i 2 f1; : : : ; n + 1g: A consequence of Bernstein's theorem is Theorem 3.10. <ref> (Pedersen and Sturmfels, 1993) </ref> The sparse resultant is separately homogeneous in the coefficients c i of each f i and its degree in these coefficients equals the mixed volume of the other n Newton polytopes, i.e., deg f i R = MV i . <p> To motivate the present approach, we compare the various resultant algorithms on this example. The matrix constructed by the algorithm of (Canny and Emiris, 1993) has size 15, whereas its greedy version <ref> (Canny and Pedersen, 1993) </ref> and the algorithm in this paper respectively reduce the matrix size to 14 and 12. The multivariate resultant has total degree 26 and can be obtained as the sparse resultant when the Newton polytopes are the dashed triangles in figure 1. 4. <p> Recall that the sparse resultant's total degree is 11 and the classical resultant's degree is 26, whereas the algorithm in (Canny and Emiris, 1993) and its greedy variant <ref> (Canny and Pedersen, 1993) </ref> yield, respectively, a 15 fi 15 and a 14 fi 14 matrix. <p> For the last three types we used permutation (1; 2; 3), resulting in vectors v = (3; 3; 2; 1), (3; 3; 3; 1) and (3; 3; 3; 1) respectively. It is interesting to compare these resultant matrices to those computed by the greedy algorithm in <ref> (Canny and Pedersen, 1993) </ref>, with sizes shown in column "greedy". There is a randomization step in this algorithm that might lead to matrices of slightly smaller size. Nonetheless, the results from a single run of the greedy algorithm suggest that the present approach yields more economical formulae. <p> All v vectors are random perturbations of vector (1; : : : ; 1), since this works best for small dimensions. We also compare the greedy algorithm of <ref> (Canny and Pedersen, 1993) </ref>, which yields matrices of comparable size. We must note that a thorough study of this family of systems goes beyond the Algorithms for the Sparse Resultant and the Mixed Volume 29 Table 4.
Reference: <author> J. Renegar. </author> <title> On the computational complexity of the first-order theory of the reals, parts I, II, III. </title> <journal> J. Symbolic Computation, </journal> <volume> 13(3) </volume> <pages> 255-352, </pages> <year> 1992. </year>
Reference: <author> J.M. Rojas. </author> <title> A convex geometric approach to counting the roots of a polynomial system. </title> <journal> Theor. Comp. Science, </journal> <volume> 133(1) </volume> <pages> 105-140, </pages> <year> 1994. </year>
Reference: <author> J.T. Schwartz. </author> <title> Fast probabilistic algorithms for verification of polynomial identities. </title> <journal> J. ACM, </journal> <volume> 27(4) </volume> <pages> 701-717, </pages> <year> 1980. </year>
Reference-contexts: Hence, det M 0 is nonzero and has total degree of c. The probability that det M 0 vanishes when all coefficients are specialized is bounded by c=S <ref> (Schwartz, 1980, lem. 1) </ref>. Clearly, this bounds also the probability that M drops rank under the specialization.
Reference: <author> R. Schneider. </author> <title> Convex Bodies: The Brunn-Minkowski Theory. </title> <publisher> Cambridge University Press, </publisher> <address> Cambridge, </address> <year> 1993. </year>
Reference: <author> M. Stillman, M. Stillman, and D. Bayer. </author> <title> Macaulay user manual. </title> <institution> NSF Regional Geometry Institute, Amherst College, </institution> <address> Amherst, Mass., </address> <year> 1992. </year>
Reference-contexts: To solve the system, further computation is necessary to transform the DRL basis to a lexicographic basis. For n = 6 and 7, for the same computation over the integers, GB took 3 seconds and 6 hours, respectively, on a Sun Sparc 10/40. We also used Macaulay <ref> (Stillman, Stillman and Bayer, 1992) </ref> to compute a reverse lexicographic Grobner basis (mod 31991) for n = 6 and 7 on the Sun Sparc 10/51 of table 1. The CPU timings were, respectively, 4 seconds and 18 minutes and 48 seconds.
Reference: <author> B. Sturmfels. </author> <title> Sparse elimination theory. </title> <editor> In D. Eisenbud and L. Robbiano, editors, </editor> <booktitle> Proc. Computat. Algebraic Geom. and Commut. Algebra 1991, </booktitle> <pages> pages 377-396, </pages> <address> Cortona, Italy, 1993. </address> <publisher> Cambridge Univ. Press. </publisher>
Reference: <author> B. Sturmfels. </author> <title> On the Newton polytope of the resultant. </title> <journal> J. of Algebr. Combinatorics, </journal> <volume> 3 </volume> <pages> 207-236, </pages> <year> 1994. </year>
Reference-contexts: To exploit sparseness and achieve the degree bounds of theorem 3.10 we must work on the sublat-tice of Z n generated by the union of all input supports [A i , i.e., on the coarsest common refinement of the sublattices generated by each A i <ref> (Sturmfels, 1994) </ref>. Suppose this sublattice has rank n and is thus identified with Z n . In what follows, it is assumed that this has already been done by means of the Smith normal form; for computing this form see (Hafner and McCurley, 1991). <p> Theorem 8.2. <ref> (Sturmfels and Zelevinsky, 1994) </ref> For a multigraded system there exists a Sylvester-type matrix formula for the sparse resultant for every permutation of the indices f1; : : : ; rg. The matrix is defined by the multiindex (m 1 ; : : : ; m r ) of expression (8.1). <p> follows from the lemma that the first set of supports B i constructed are all identical, since the system is unmixed, and equal to B " Z n , hence they are exactly those required to define a Sylvester-type formula for the resultant by theorem 8.2 and the results of <ref> (Sturmfels and Zelevinsky, 1994) </ref>. Note that the formula obtained corresponds to the permutation used in the definition of m k . 2 We now report on some experiments. Table 1 contains the hardware specifications of the machines employed.
Reference: <author> B. Sturmfels. </author> <title> On the Number of Real Roots of a Sparse Polynomial System, </title> <booktitle> volume 3, </booktitle> <pages> pages 137-143. </pages> <institution> AMS, Fields Inst. Commun., Providence, RI, </institution> <year> 1994. </year> <note> 32 I.Z. </note> <author> Emiris and J.F. Canny J.J. </author> <title> Sylvester. On a theory of syzygetic relations of two rational integral functions, comprising an application to the theory of Sturm's functions, and that of the greatest algebraic common measure. </title> <journal> Philosophical Trans., </journal> <volume> 143 </volume> <pages> 407-548, 1853. </pages>
Reference-contexts: To exploit sparseness and achieve the degree bounds of theorem 3.10 we must work on the sublat-tice of Z n generated by the union of all input supports [A i , i.e., on the coarsest common refinement of the sublattices generated by each A i <ref> (Sturmfels, 1994) </ref>. Suppose this sublattice has rank n and is thus identified with Z n . In what follows, it is assumed that this has already been done by means of the Smith normal form; for computing this form see (Hafner and McCurley, 1991). <p> Theorem 8.2. <ref> (Sturmfels and Zelevinsky, 1994) </ref> For a multigraded system there exists a Sylvester-type matrix formula for the sparse resultant for every permutation of the indices f1; : : : ; rg. The matrix is defined by the multiindex (m 1 ; : : : ; m r ) of expression (8.1). <p> follows from the lemma that the first set of supports B i constructed are all identical, since the system is unmixed, and equal to B " Z n , hence they are exactly those required to define a Sylvester-type formula for the resultant by theorem 8.2 and the results of <ref> (Sturmfels and Zelevinsky, 1994) </ref>. Note that the formula obtained corresponds to the permutation used in the definition of m k . 2 We now report on some experiments. Table 1 contains the hardware specifications of the machines employed.
Reference: <author> B. Sturmfels and A. Zelevinsky. </author> <title> Multigraded resultants of Sylvester type. </title> <journal> J. of Algebra, </journal> <volume> 163(1) </volume> <pages> 115-127, </pages> <year> 1994. </year>
Reference-contexts: To exploit sparseness and achieve the degree bounds of theorem 3.10 we must work on the sublat-tice of Z n generated by the union of all input supports [A i , i.e., on the coarsest common refinement of the sublattices generated by each A i <ref> (Sturmfels, 1994) </ref>. Suppose this sublattice has rank n and is thus identified with Z n . In what follows, it is assumed that this has already been done by means of the Smith normal form; for computing this form see (Hafner and McCurley, 1991). <p> Theorem 8.2. <ref> (Sturmfels and Zelevinsky, 1994) </ref> For a multigraded system there exists a Sylvester-type matrix formula for the sparse resultant for every permutation of the indices f1; : : : ; rg. The matrix is defined by the multiindex (m 1 ; : : : ; m r ) of expression (8.1). <p> follows from the lemma that the first set of supports B i constructed are all identical, since the system is unmixed, and equal to B " Z n , hence they are exactly those required to define a Sylvester-type formula for the resultant by theorem 8.2 and the results of <ref> (Sturmfels and Zelevinsky, 1994) </ref>. Note that the formula obtained corresponds to the permutation used in the definition of m k . 2 We now report on some experiments. Table 1 contains the hardware specifications of the machines employed.
Reference: <author> B.L. van der Waerden. </author> <title> Modern Algebra. </title> <editor> F. </editor> <publisher> Ungar Publishing Co., </publisher> <address> New York, </address> <note> 3rd edition, </note> <year> 1950. </year>
Reference-contexts: Cayley (1848) defined it via a series of n divisions of determinants, Macaulay (1902) as the quotient of a determinant divided by one of its minors, while Hurwitz (1913) expressed it as the Greatest Common Divisor (GCD) of n inertia forms; see also <ref> (van der Waerden, 1950) </ref>. In all cases, the nonzero entries of the matrices are coefficients of the given polynomials. Various more recent algorithms exist to construct this resultant (Lazard, 1981, Canny, 1988, Renegar, 1992).
Reference: <author> J. Verschelde and K. Gatermann. </author> <title> Symmetric Newton polytopes for solving sparse polynomial systems. </title> <journal> Adv. Appl. Math., </journal> <volume> 16(1) </volume> <pages> 95-127, </pages> <year> 1995. </year>
Reference-contexts: Emiris and J.F. Canny Table 3. Lift-Prune algorithm performance for the cyclic n-roots problem; timings are on a DEC Alpha 3300. Timings for GB are on a DEC Alpha 3600 and for the algorithm in <ref> (Verschelde, Gatermann and Cools, 1995) </ref> on a DEC 5240. #isolated mixed Lift-Prune (Verschelde et.al. 1995) DRL by GB n roots volume static #isol. roots time 3 6 6 0s 5 70 70 0s 0s 70 0s 7 924 924 27s 2m 36s = 156s 924 2m 52s = 172s 9 unknown <p> Emiris and J.F. Canny Table 3. Lift-Prune algorithm performance for the cyclic n-roots problem; timings are on a DEC Alpha 3300. Timings for GB are on a DEC Alpha 3600 and for the algorithm in (Verschelde, Gatermann and Cools, 1995) on a DEC 5240. #isolated mixed Lift-Prune <ref> (Verschelde et.al. 1995) </ref> DRL by GB n roots volume static #isol. roots time 3 6 6 0s 5 70 70 0s 0s 70 0s 7 924 924 27s 2m 36s = 156s 924 2m 52s = 172s 9 unknown 11016 40m 59s = 2459s - 10 unknown 35940 4h 50m 14s
Reference: <author> J. Verschelde, K. Gatermann, and R. Cools. </author> <title> Mixed volume computation by dynamic lifting applied to polynomial system solving. </title> <type> Technical Report TW 222, </type> <institution> Katholieke Universiteit Leuven, Dept. of Computer Science, </institution> <year> 1995. </year>
Reference-contexts: Emiris and J.F. Canny Table 3. Lift-Prune algorithm performance for the cyclic n-roots problem; timings are on a DEC Alpha 3300. Timings for GB are on a DEC Alpha 3600 and for the algorithm in <ref> (Verschelde, Gatermann and Cools, 1995) </ref> on a DEC 5240. #isolated mixed Lift-Prune (Verschelde et.al. 1995) DRL by GB n roots volume static #isol. roots time 3 6 6 0s 5 70 70 0s 0s 70 0s 7 924 924 27s 2m 36s = 156s 924 2m 52s = 172s 9 unknown <p> Emiris and J.F. Canny Table 3. Lift-Prune algorithm performance for the cyclic n-roots problem; timings are on a DEC Alpha 3300. Timings for GB are on a DEC Alpha 3600 and for the algorithm in (Verschelde, Gatermann and Cools, 1995) on a DEC 5240. #isolated mixed Lift-Prune <ref> (Verschelde et.al. 1995) </ref> DRL by GB n roots volume static #isol. roots time 3 6 6 0s 5 70 70 0s 0s 70 0s 7 924 924 27s 2m 36s = 156s 924 2m 52s = 172s 9 unknown 11016 40m 59s = 2459s - 10 unknown 35940 4h 50m 14s
Reference: <author> J. Verschelde, P. Verlinden, and R. Cools. </author> <title> Homotopies exploiting Newton polytopes for solving sparse polynomial systems. </title> <journal> SIAM J. Numerical Analysis, </journal> <volume> 31(3) </volume> <pages> 915-930, </pages> <year> 1994. </year>
Reference-contexts: The method of Huber and Sturmfels (1992) takes advantage of repeated polytopes, while that of Verschelde and Gatermann (1994) exploits symmetry; a general implementation has been described in <ref> (Verschelde, Verlinden and Cools, 1994) </ref>. These algorithms have the same worst-case asymptotic complexity as our own algorithm defined below. This complexity is analyzed below and turns out to be simply exponential in n.
Reference: <author> J. Weyman and A. Zelevinsky. </author> <title> Determinantal formulas for multigraded resultants. </title> <journal> J. Algebraic Geom., </journal> <volume> 3(4) </volume> <pages> 569-597, </pages> <year> 1994. </year>
Reference-contexts: Another feature in common with Grobner bases is that our algorithm can treat systems with a number of polynomials larger than the number of variables. The results on multigraded systems have been generalized in <ref> (Weyman and Zelevinsky, 1994) </ref>, though a constructive approach that would exploit this generalization has yet to be found. An important merit of the work on resultants is its practical application in solving algebraic systems in kinematics, vision, modeling as well as game theory and computational economics; see e.g. (Emiris, 1994b).
References-found: 69

