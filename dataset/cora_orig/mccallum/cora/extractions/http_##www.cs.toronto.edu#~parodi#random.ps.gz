URL: http://www.cs.toronto.edu/~parodi/random.ps.gz
Refering-URL: http://www.cs.toronto.edu/~parodi/abstract_rld.html
Root-URL: 
Email: fparodi,randi,ankur,tsotsosg@vis.toronto.edu  
Title: Empirically-derived estimates of the complexity of labelling line drawings of polyhedral scenes  
Author: P. Parodi, R. Lancewicki, A. Vijh, J. K. Tsotsos 
Address: 6 King's College Road, Room 283 Toronto (ON), Canada M5S 3H5  
Affiliation: Department of Computer Science University of Toronto  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> D.A.Huffman. </author> <title> Impossible objects as nonsense sentences. </title> <journal> Machine Intelligence, </journal> <volume> 6 </volume> <pages> 295-323, </pages> <year> 1971. </year>
Reference-contexts: of understanding the three-dimensional structure of an object from a concise two-dimensional description (e.g., a line drawing) of it has intrigued researchers in computer vision and artificial intelligence since the early seventies, when the first attempts to tackle the problem from a computational standpoint were independently put forward by Huffman <ref> [1] </ref> and Clowes [2]. <p> Section 6 discusses the results, the relation to previous works, and the relevance of this work to artificial intelligence and computer vision. 2 The labelling problem The first mathematical results about the interpretation of line drawings date back to the works of Huffman <ref> [1] </ref> and Clowes [2], who independently introduced an important necessary condition (labelability) for the realizability of a line drawing as the 2D projection of a polyhedral scene. Labeling a line drawing means assigning a label to every segment describing the properties of the corresponding 3D edge. <p> A line drawing is said to be labelable iff a label can be assigned to every segment so that every 2 junction is labelled according to this dictionary. for trihedral vertices. Several methods have been proposed in the past for labelling a line drawing. Huffman <ref> [1] </ref> and Clowes [2] proposed a reduction to SAT. Waltz [3] devised a filtering algorithm which reported good average running time (roughly linear in the number of segments). <p> Some of them are still related to the complexity of labelling line drawings, while others are of more general concern. Line drawing analysis: The method can be used to compare different approaches to labelling line drawings, for example reductions to SAT instead of CSP. The original approach in <ref> [1] </ref> was a reduction to SAT. Furthermore, in the past it has been proposed to use vanishing points to guide labelling.
Reference: [2] <author> M.B. Clowes. </author> <title> On seeing things. </title> <journal> Artificial Intelligence, </journal> <volume> 2 </volume> <pages> 79-116, </pages> <year> 1971. </year>
Reference-contexts: three-dimensional structure of an object from a concise two-dimensional description (e.g., a line drawing) of it has intrigued researchers in computer vision and artificial intelligence since the early seventies, when the first attempts to tackle the problem from a computational standpoint were independently put forward by Huffman [1] and Clowes <ref> [2] </ref>. <p> Section 6 discusses the results, the relation to previous works, and the relevance of this work to artificial intelligence and computer vision. 2 The labelling problem The first mathematical results about the interpretation of line drawings date back to the works of Huffman [1] and Clowes <ref> [2] </ref>, who independently introduced an important necessary condition (labelability) for the realizability of a line drawing as the 2D projection of a polyhedral scene. Labeling a line drawing means assigning a label to every segment describing the properties of the corresponding 3D edge. <p> A line drawing is said to be labelable iff a label can be assigned to every segment so that every 2 junction is labelled according to this dictionary. for trihedral vertices. Several methods have been proposed in the past for labelling a line drawing. Huffman [1] and Clowes <ref> [2] </ref> proposed a reduction to SAT. Waltz [3] devised a filtering algorithm which reported good average running time (roughly linear in the number of segments).
Reference: [3] <author> D. Waltz. </author> <title> Understanding line-drawings of scenes with shadows. </title> <editor> In P. H. Winston, editor, </editor> <booktitle> In: The Psychology of Computer Vision, </booktitle> <pages> pages 19-91. </pages> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1975. </year>
Reference-contexts: The work of Huffman and Clowes was extended in several directions <ref> [3, 4, 5, 6] </ref>, but it was not until the work of Sugihara [7, 8, 9] that a necessary and sufficient condition for the realizability of a line drawing was found. <p> Furthermore, heuristics have been presented such as the relaxation procedure devised by Waltz <ref> [3] </ref> which can be used in conjunction with tree-search 1 methods and allegedly provide an efficient way to deal with line drawing labelling. <p> Several methods have been proposed in the past for labelling a line drawing. Huffman [1] and Clowes [2] proposed a reduction to SAT. Waltz <ref> [3] </ref> devised a filtering algorithm which reported good average running time (roughly linear in the number of segments). <p> To work out the actual labelling we use a depth-first backtracking procedure enhanced by a pre-processing relaxation procedure to achieve arc consistency (see for example <ref> [3, 18] </ref>: we have implemented the simple version AC-1 of arc consistency. Observe that all of the existing algorithms have polynomial complexity.) The relaxation procedure aims at achieving local consistency first (by making sure that all adjacent nodes have at least one compatible assignment) before starting with the backtracking procedure. <p> Labeling is performed by standard techniques for solving constraint satisfaction problems. The core of these techniques is a tree search, usually preceded by a relaxation stage during which local consistency is achieved, as in Waltz <ref> [3] </ref>. We will consider two kinds of tree search: `blind' depth-first search with backtracking and a more sophisticated best-first search informed by knowledge on the structure of the problem. <p> This should be compared with the work by Waltz <ref> [3] </ref>, who reported linear-time performances for his labeling strategy, based on a number of examples generated manually. In that case, however, the linear complexity depended on the fact that in his examples relaxation was by itself usually enough to give an almost unique labeling. <p> In that case, however, the linear complexity depended on the fact that in his examples relaxation was by itself usually enough to give an almost unique labeling. This might depend on the fact that the world considered in <ref> [3] </ref> includes shadows and cracks, has a far wider junction dictionary. Therefore the results cannot be immediately compared. In our case, the linear complexity of the median-case does not seem to depend on the relaxation stage, although the performances increase if relaxation is used.
Reference: [4] <author> K. Sugihara. </author> <title> Picture language for skeletal polyhedra. </title> <journal> Computer Graphics and Image Processing, </journal> <volume> 8 </volume> <pages> 382-405, </pages> <year> 1978. </year>
Reference-contexts: The work of Huffman and Clowes was extended in several directions <ref> [3, 4, 5, 6] </ref>, but it was not until the work of Sugihara [7, 8, 9] that a necessary and sufficient condition for the realizability of a line drawing was found.
Reference: [5] <author> T. Kanade. </author> <title> A theory of Origami world. </title> <journal> Artificial Intelligence, </journal> <volume> 13 </volume> <pages> 279-311, </pages> <year> 1980. </year>
Reference-contexts: The work of Huffman and Clowes was extended in several directions <ref> [3, 4, 5, 6] </ref>, but it was not until the work of Sugihara [7, 8, 9] that a necessary and sufficient condition for the realizability of a line drawing was found. <p> The complete dictionary for this world is given in Figure 2 (C), where it can be noticed that there is also a 6-degree junction, that we will call AST (after Kanade <ref> [5] </ref>).
Reference: [6] <author> J. Malik. </author> <title> Interpreting line drawings of curved objects. </title> <journal> International Journal of Computer Vision, </journal> <volume> 1 </volume> <pages> 73-103, </pages> <year> 1987. </year>
Reference-contexts: The work of Huffman and Clowes was extended in several directions <ref> [3, 4, 5, 6] </ref>, but it was not until the work of Sugihara [7, 8, 9] that a necessary and sufficient condition for the realizability of a line drawing was found. <p> Even this approach to labelling, however, is worst-case exponential. The CSP approach is now the standard one used for labelling line drawings. It has been applied to line drawings of polyhedral as well as piecewise smooth curved line objects (see Malik <ref> [6] </ref>). 3 Although this approach is in general worst-case exponential, in several meaningful cases the constraints are of a kind which allows unique propagation rules for the constraints and efficient sequential and parallel algorithms (Kirousis [19]).
Reference: [7] <author> K. Sugihara. </author> <title> Mathematical structures of line drawings of polyhedrons. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 4(5) </volume> <pages> 458-469, </pages> <year> 1982. </year>
Reference-contexts: The work of Huffman and Clowes was extended in several directions [3, 4, 5, 6], but it was not until the work of Sugihara <ref> [7, 8, 9] </ref> that a necessary and sufficient condition for the realizability of a line drawing was found. Sugihara showed that, given a labelled line drawing, the realizability problem could be translated into an instance of Linear Programming. More recently, several efforts have been concentrated on complexity issues. <p> In the second part of the paper, we have devised a method to generate random instances of polyhedral scenes. Our method is inspired by Sugihara's work <ref> [7, 8, 9] </ref>, in which realizability of a line drawing is checked by associating a plane to every polygon of the line drawing and solving a linear system where the equations are the plane equations and the variables are the parameters of the planes.
Reference: [8] <author> K. Sugihara. </author> <title> An algebraic approach to shape-from-image problems. </title> <journal> Artificial Intelligence, </journal> (23):59-95, 1984. 
Reference-contexts: The work of Huffman and Clowes was extended in several directions [3, 4, 5, 6], but it was not until the work of Sugihara <ref> [7, 8, 9] </ref> that a necessary and sufficient condition for the realizability of a line drawing was found. Sugihara showed that, given a labelled line drawing, the realizability problem could be translated into an instance of Linear Programming. More recently, several efforts have been concentrated on complexity issues. <p> In the second part of the paper, we have devised a method to generate random instances of polyhedral scenes. Our method is inspired by Sugihara's work <ref> [7, 8, 9] </ref>, in which realizability of a line drawing is checked by associating a plane to every polygon of the line drawing and solving a linear system where the equations are the plane equations and the variables are the parameters of the planes.
Reference: [9] <author> K. Sugihara. </author> <title> A necessary and sufficient condition for a picture to represent a polyhedral scene. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 6(5) </volume> <pages> 578-586, </pages> <year> 1984. </year>
Reference-contexts: The work of Huffman and Clowes was extended in several directions [3, 4, 5, 6], but it was not until the work of Sugihara <ref> [7, 8, 9] </ref> that a necessary and sufficient condition for the realizability of a line drawing was found. Sugihara showed that, given a labelled line drawing, the realizability problem could be translated into an instance of Linear Programming. More recently, several efforts have been concentrated on complexity issues. <p> In the second part of the paper, we have devised a method to generate random instances of polyhedral scenes. Our method is inspired by Sugihara's work <ref> [7, 8, 9] </ref>, in which realizability of a line drawing is checked by associating a plane to every polygon of the line drawing and solving a linear system where the equations are the plane equations and the variables are the parameters of the planes.
Reference: [10] <author> L.M.Kirousis and C.H.Papadimitriou. </author> <title> The complexity of recognizing polyhedral scenes. </title> <journal> Journal of Computer and System Sciences, </journal> (37):14-38, 1988. 
Reference-contexts: Kirousis & Papadimitriou <ref> [10] </ref>, however, have proved that this is unlikely to be the case, by showing that both the labelling problem and the realizability problem are N P-complete even for the simple case of trihedral, solid scenes. <p> This unexpected result has stimulated much research in order to find special cases for which the labelling problem was polynomially solvable. In the same paper <ref> [10] </ref>, Kirousis & Papadimitriou proved that the labelling problem has polynomial complexity for line drawings of Legoland scenes, i.e., scenes made of objects whose 3D edges can only have one of three possible orthogonal directions. <p> Also notice that there are no 5-degree junctions. 4 Since a line drawing of an extended trihedral scene can now be defined to be labelable iff it is possible to assign a label to every segment so that all junctions are labelled according to Papadimitriou <ref> [10] </ref> also applies to this case: Proposition 1 It is NP-complete to determine whether a line drawing is labelable according to the extended Huffman-Clowes table of Figure 2 (C). Proof. First, notice that the NP-completeness proof in [10] for the basic trihedral world (BTW) still holds if the set of the <p> label to every segment so that all junctions are labelled according to Papadimitriou <ref> [10] </ref> also applies to this case: Proposition 1 It is NP-complete to determine whether a line drawing is labelable according to the extended Huffman-Clowes table of Figure 2 (C). Proof. First, notice that the NP-completeness proof in [10] for the basic trihedral world (BTW) still holds if the set of the possible labellings for a T-junction is extended to include all labellings permitted in the extended trihedral world (ETW). <p> It is a very simple world but it is often powerful enough to capture the main features of simple scenes in a man-made world. Legoland scenes have been widely discussed in the literature <ref> [10, 27, 28] </ref>, because of their simplicity and practical relevance. From the theoretical point of view, they represent one of the few examples for which the labelling problem is polynomial [10]. <p> Legoland scenes have been widely discussed in the literature [10, 27, 28], because of their simplicity and practical relevance. From the theoretical point of view, they represent one of the few examples for which the labelling problem is polynomial <ref> [10] </ref>. To generate a random Legoland scene of size n, we first choose an arbitrary triplet (~n 1 ; ~n 2 ; ~n 3 ) of orthogonal unit vectors. <p> This, too, is probably due to the highly constrained nature of the labelling problem for trihedral scenes. Although it is possible to construct line drawings containing components which are difficult to label (see <ref> [10] </ref>), randomization in the construction of scenes makes these components unlikely to appear. This work substantiates the conjecture in [10] that the complexity of labelling line drawings might be polynomial for typical instances of the problem (the average or median case). 3) Relaxation plays an obvious role in the analysis of <p> Although it is possible to construct line drawings containing components which are difficult to label (see <ref> [10] </ref>), randomization in the construction of scenes makes these components unlikely to appear. This work substantiates the conjecture in [10] that the complexity of labelling line drawings might be polynomial for typical instances of the problem (the average or median case). 3) Relaxation plays an obvious role in the analysis of random graphs carried out in Section 3: graphs which are big enough are almost never labelable, and this can
Reference: [11] <author> P. Parodi and V. Torre. </author> <title> A linear complexity procedure for labeling perspective projections of polyhedra. </title> <booktitle> In Fourth Int. Conf. Comp. Vision, </booktitle> <volume> ICCV '93, </volume> <pages> pages 291-295, </pages> <address> Berlin, </address> <year> 1993. </year> <booktitle> IEEE Comp. </booktitle> <publisher> Soc. Press. </publisher>
Reference: [12] <author> P. Parodi and V. Torre. </author> <title> On the complexity of labeling line drawings of polyhedral scenes. </title> <journal> Artificial Intelligence, </journal> <volume> 70 </volume> <pages> 239-276, </pages> <year> 1994. </year>
Reference-contexts: In the same paper [10], Kirousis & Papadimitriou proved that the labelling problem has polynomial complexity for line drawings of Legoland scenes, i.e., scenes made of objects whose 3D edges can only have one of three possible orthogonal directions. This result was extended in <ref> [12] </ref> to show that once the location of the vanishing points of the line drawing of a trihedral, solid scene is known, the labelling problem becomes solvable in polynomial time.
Reference: [13] <author> P. Parodi. </author> <title> The complexity of understanding of origami scenes. </title> <journal> International Journal of Computer Vision, </journal> <volume> 18(2) </volume> <pages> 139-170, </pages> <year> 1996. </year>
Reference-contexts: These results suggests that the brain may exploit geometrical regularities in order to find a 3D reconstruction of a scene from a line drawing. It was also shown <ref> [13] </ref> that the information on vanishing points is not sufficient to break the NP-completeness of labelling line drawing of Origami scenes, although this information drastically reduces the number of legal labellings associated with a line drawing. <p> Furthermore, in the past it has been proposed to use vanishing points to guide labelling. While in the case of trihedral scenes it can be shown that this leads to a polynomial method, in the case of Origami scenes the labelling problem remains NP-complete, but it has been claimed <ref> [13] </ref> that using vanishing points leads anyway to a big gain in the average-case complexity: this claim could only be proved by designing a variant of the random 40 scenes generator which could generate random instances of Origami scenes.
Reference: [14] <author> B.Selman, D.G.Mitchell, and H.J.Levesque. </author> <title> Generating hard satisfiability problems. </title> <journal> Artificial Intelligence, </journal> <volume> 81(1-2):17-29, </volume> <year> 1996. </year>
Reference-contexts: As it is well known for other problems (such as SAT <ref> [14, 24] </ref> and CSP [39, 15, 16]), hard instances of a problem are often elusive and can only be found with a careful tuning of some characteristic parameters. <p> Every estimate of the average time is therefore necessarily less reliable and that is the reason why researchers usually adopt the median time as a measure of the typical difficulty of the problem (see for example <ref> [14] </ref>).
Reference: [15] <author> C.P.Williams and T.Hogg. </author> <title> Exploiting the deep structure of constraint problems. </title> <journal> Artificial Intelligence, </journal> <volume> 70 </volume> <pages> 73-117, </pages> <year> 1994. </year> <month> 43 </month>
Reference-contexts: As it is well known for other problems (such as SAT [14, 24] and CSP <ref> [39, 15, 16] </ref>), hard instances of a problem are often elusive and can only be found with a careful tuning of some characteristic parameters.
Reference: [16] <author> T.Hogg and C.P.Williams. </author> <title> The hardest constraint problems: a double phase transition. </title> <journal> Artificial Intelligence, </journal> <volume> 69 </volume> <pages> 359-377, </pages> <year> 1994. </year>
Reference-contexts: As it is well known for other problems (such as SAT [14, 24] and CSP <ref> [39, 15, 16] </ref>), hard instances of a problem are often elusive and can only be found with a careful tuning of some characteristic parameters.
Reference: [17] <author> A. K. Mackworth and E. C. Freuder. </author> <title> The complexity of constraint satisfaction revisited. </title> <journal> Artificial Intelligence, </journal> <volume> 59 </volume> <pages> 57-92, </pages> <year> 1993. </year>
Reference-contexts: To label a line drawing, first achieve local consistency and then achieve global consistency by tree searching with depth-first backtracking. The work on line drawings has stimulated the analysis of a more general problem, the Constraint Satisfaction Problem (CSP; see Mackworth & Freuder <ref> [17] </ref> for a retrospective): we have a set of variables X 1 ; . . .
Reference: [18] <author> A. K. Mackworth and E.C.Freuder. </author> <title> The complexity of some polynomial network consistency algorithms for constraint satisfaction problems. </title> <journal> Artificial Intelligence, </journal> <volume> 25 </volume> <pages> 65-74, </pages> <year> 1985. </year>
Reference-contexts: Waltz' procedure can be used to simplify this problem and is called, in this framework, "arc consistency". The reason why the algorithm performed with linear average running time is that the arc consistency algorithm used by Waltz takes indeed linear time in the number of segments (see Mackworth <ref> [18] </ref>), and it is often the case that at the end of the relaxation procedure only a few segments are not already uniquely labelled, at least in the trihedral world with cracks and shadows studied by Waltz. Even this approach to labelling, however, is worst-case exponential. <p> To work out the actual labelling we use a depth-first backtracking procedure enhanced by a pre-processing relaxation procedure to achieve arc consistency (see for example <ref> [3, 18] </ref>: we have implemented the simple version AC-1 of arc consistency. Observe that all of the existing algorithms have polynomial complexity.) The relaxation procedure aims at achieving local consistency first (by making sure that all adjacent nodes have at least one compatible assignment) before starting with the backtracking procedure. <p> We have used a standard backtracking algorithm for CSP, with a relaxation stage as pre-preprocessing which achieves so-called arc consistency (which is of polynomial complexity). Several different algorithms can be used to achieve arc consistency: we have adopted the simple version AC-1 (see for example <ref> [18] </ref> for a description of AC-1 and of more sophisticated local consistency algorithms), which is of complexity O (n 2 ) where n is the number of junctions of the line drawing. This is the standard approach to labelling algorithms, and no substantially better approaches are known. <p> We will consider two kinds of tree search: `blind' depth-first search with backtracking and a more sophisticated best-first search informed by knowledge on the structure of the problem. As for the relaxation stage, we will use the simple algorithm referred to as AC-1 by Mackworth and Freuder in <ref> [18] </ref>: For each pair of adjacent junctions J 1 and J 2 , remove all labellings of J 1 for which there is no labelling in J 2 which is compatible with it, and vice versa. <p> Better techniques exist: one of them is Waltz' procedure (sometimes referred to as AC-2), which has complexity O (n); other techniques are described in <ref> [18] </ref>. In our case the difference is of no consequence (most of the time is spent during the depth-first backtracking anyway), and we have therefore implemented the simpler and slower version. <p> product is related to the complexity of the worst-case complexity of the depth-first backtracking algorithm, which is O (E Q Q i n i ), where N is the number of junctions of the line drawing and E = O (N ) is the number of segments (see for example <ref> [18] </ref>). Also, O ( Q i n i 0 is the worst-case complexity of the trivial algorithm which tries every possible combination of legal labellings for each junction and stops whenever it finds one for which all segments are uniquely labelled.
Reference: [19] <author> L.M.Kirousis. </author> <title> Fast parallel constraint satisfaction. </title> <journal> Artificial Intelligence, </journal> <volume> 64 </volume> <pages> 147-160, </pages> <year> 1993. </year>
Reference-contexts: to line drawings of polyhedral as well as piecewise smooth curved line objects (see Malik [6]). 3 Although this approach is in general worst-case exponential, in several meaningful cases the constraints are of a kind which allows unique propagation rules for the constraints and efficient sequential and parallel algorithms (Kirousis <ref> [19] </ref>). In this paper we will use both the basic trihedral world introduced by Huffman and Clowes and a slight extension of it which is both more realistic and makes the problem less trivial in the case of random line drawings.
Reference: [20] <author> M.R.Garey and D.S.Johnson. </author> <title> Computers and Intractability. </title> <publisher> W.H.Freeman and co., </publisher> <address> New York, </address> <year> 1979. </year>
Reference-contexts: Secondly, notice that MTW is the special case of ETW where no four-degree junctions and six-degree junctions appear. Therefore, since MTW is NP-complete, ETW is also NP-complete by restriction (see for example <ref> [20] </ref> for a more detailed explanation of this kind of reduction). 2 3 Labeling random line drawings: a purely combinato rial standpoint Random line drawings are a very special case of planar graphs.
Reference: [21] <author> B.D.McKay and N.C.Wormald. </author> <title> Uniform generation of random regular graphs of moderate degree. </title> <type> manuscript. </type>
Reference-contexts: It is to be noticed that random planar graphs with a specified degree sequence can be generated with uniform distribution <ref> [21] </ref>. In a completely analogous fashion, we can generate random graphs having the same combinatorial properties as the line drawings of extended trihedral scenes, with nodes of degree 2, 3, 4, or 6. 5 graph on the left has 10 junctions, the other has 100 junctions. <p> Generate a random graph with the degree sequence found in Step 1. This can be done by using the algorithm described in <ref> [21] </ref>. 3. Label all two-degree nodes as L. Label at random the remaining three-degree nodes as T, Y, or E, with equal probability for the three types. In this way, all the types L, Y, T, E appear with the same probability.
Reference: [22] <author> B. Bollobas. </author> <title> Random Graphs. </title> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1985. </year>
Reference-contexts: It is not obvious, however, how to generalize this property to define uniformity for generators of more complex objects, such as polyhedra. Work on random graphs <ref> [22, 23] </ref> suggests that many different definitions may be adequate depending on our needs. As to polyhedra, it is first of all necessary to limit the region of space into which the polyhedra must be generated, therefore limiting also their size.
Reference: [23] <author> E.M. Palmer. </author> <title> Graphical Evolution. </title> <publisher> Wiley and Sons. </publisher>
Reference-contexts: It is not obvious, however, how to generalize this property to define uniformity for generators of more complex objects, such as polyhedra. Work on random graphs <ref> [22, 23] </ref> suggests that many different definitions may be adequate depending on our needs. As to polyhedra, it is first of all necessary to limit the region of space into which the polyhedra must be generated, therefore limiting also their size. <p> These two different choices correspond to different distributions of random graphs, with different behaviour with respect to such properties as connectivity <ref> [23] </ref>.
Reference: [24] <author> D.G.Mitchell and H.J.Levesque. </author> <title> Some pitfalls for experimenters with random SAT. </title> <journal> Artificial Intelligence, </journal> <volume> 81(1-2):111-125, </volume> <year> 1996. </year>
Reference-contexts: As it is well known for other problems (such as SAT <ref> [14, 24] </ref> and CSP [39, 15, 16]), hard instances of a problem are often elusive and can only be found with a careful tuning of some characteristic parameters. <p> It should be noted that this difficulty with generating useful random instances is very general and affects many other problems in AI, such as SAT and CSP (see for example <ref> [24] </ref> for the problem of generating genuinely random instances of SAT). Finally, if Property (c) were not satisfied, creating samples for any kind of statistical analysis of complexity or other features would be unbearably difficult for a large enough number of vertices.
Reference: [25] <author> A. Appel. </author> <title> The notion of quantitative invisibility and the machine rendering of solids. </title> <booktitle> In Proc. of the ACM National Conference, </booktitle> <pages> pages 387-393. </pages> <publisher> Thompson Books, </publisher> <address> Washington DC, </address> <year> 1967. </year>
Reference-contexts: All the hidden edges can be removed by one of the many existing techniques in computer graphics and computational geometry. We have used Appel's algorithm <ref> [25, 26] </ref>, which suits our case well. The algorithm has complexity O (N log N ). The overall complexity of the algorithm for obtaining the line drawings from the scene is therefore O (N log N ), where N is the number of vertices in the scene.
Reference: [26] <author> J. D. Foley, A. van Dam, S. K. Feiner, and J. F. Hughes. </author> <title> Computer Graphics: </title> <booktitle> Principles and Practice. </booktitle> <publisher> Addison-Wesley, Inc., </publisher> <year> 1990. </year>
Reference-contexts: All the hidden edges can be removed by one of the many existing techniques in computer graphics and computational geometry. We have used Appel's algorithm <ref> [25, 26] </ref>, which suits our case well. The algorithm has complexity O (N log N ). The overall complexity of the algorithm for obtaining the line drawings from the scene is therefore O (N log N ), where N is the number of vertices in the scene.
Reference: [27] <author> M.Straforini, C.Coelho, M.Campani, and V.Torre. </author> <title> The recovery and understanding of a line drawing from indoor scenes. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 14(2) </volume> <pages> 298-303, </pages> <year> 1992. </year>
Reference-contexts: It is a very simple world but it is often powerful enough to capture the main features of simple scenes in a man-made world. Legoland scenes have been widely discussed in the literature <ref> [10, 27, 28] </ref>, because of their simplicity and practical relevance. From the theoretical point of view, they represent one of the few examples for which the labelling problem is polynomial [10].
Reference: [28] <author> M. Straforini, C. Coelho, and M. Campani. </author> <title> Extraction of vanishing points of images of indoor and outdoor scenes. </title> <journal> Image Vision Computing, </journal> <volume> 11(2) </volume> <pages> 91-100, </pages> <year> 1993. </year>
Reference-contexts: It is a very simple world but it is often powerful enough to capture the main features of simple scenes in a man-made world. Legoland scenes have been widely discussed in the literature <ref> [10, 27, 28] </ref>, because of their simplicity and practical relevance. From the theoretical point of view, they represent one of the few examples for which the labelling problem is polynomial [10]. <p> Also, various methods were proposed <ref> [28, 30, 31, 32, 33, 34, 35, 36] </ref> for the automatic determination of the vanishing points themselves, and it would be interesting to test them against images of random polyhedral scenes.
Reference: [29] <author> J. Pearl. </author> <title> Heuristics. </title> <publisher> Addison-Wesley, Inc., </publisher> <year> 1984. </year>
Reference-contexts: From that point on one proceeds as in the usual case when the errors i on the T exp i 's are known. 34 track, junctions are chosen blindly as deeper and deeper layers of the depth-first search tree are explored. A more refined search method (see for example <ref> [29] </ref>) is the so-called best-first search, which exploits the fact that it is more convenient to label the junctions which have the smallest possible set of permissible labellings.
Reference: [30] <author> R. Collins and R. Weiss. </author> <title> An efficient and accurate method for computing vanishing points. </title> <booktitle> Proc. Opt. Soc. Amer., Workshop on Image Understanding and Machine Vision, </booktitle> <volume> 14 </volume> <pages> 92-94, </pages> <year> 1989. </year>
Reference-contexts: Also, various methods were proposed <ref> [28, 30, 31, 32, 33, 34, 35, 36] </ref> for the automatic determination of the vanishing points themselves, and it would be interesting to test them against images of random polyhedral scenes.
Reference: [31] <author> B. Brillault and O'Mahony. </author> <title> New method for vanishing points detection. CVGIP: </title> <booktitle> Image Understanding, </booktitle> <volume> 54(2) </volume> <pages> 289-300, </pages> <year> 1991. </year> <month> 44 </month>
Reference-contexts: Also, various methods were proposed <ref> [28, 30, 31, 32, 33, 34, 35, 36] </ref> for the automatic determination of the vanishing points themselves, and it would be interesting to test them against images of random polyhedral scenes.
Reference: [32] <author> H. Nakatani and T. Kitahashi. </author> <title> Determination of vanishing point in outdoor scene. </title> <journal> Trans. IEICE, </journal> <volume> 64(5) </volume> <pages> 357-358, </pages> <year> 1981. </year>
Reference-contexts: Also, various methods were proposed <ref> [28, 30, 31, 32, 33, 34, 35, 36] </ref> for the automatic determination of the vanishing points themselves, and it would be interesting to test them against images of random polyhedral scenes.
Reference: [33] <author> S. T. Barnard. </author> <title> Interpreting prospective images. </title> <journal> A.I. Journal, </journal> <volume> 21(4) </volume> <pages> 435-462, </pages> <year> 1983. </year>
Reference-contexts: Also, various methods were proposed <ref> [28, 30, 31, 32, 33, 34, 35, 36] </ref> for the automatic determination of the vanishing points themselves, and it would be interesting to test them against images of random polyhedral scenes.
Reference: [34] <author> Quan and R. Mohr. </author> <title> Determining perspective structures using hierarchical hough transformation. </title> <journal> Pattern Recognition Letters, </journal> <volume> 9 </volume> <pages> 279-286, </pages> <year> 1989. </year>
Reference-contexts: Also, various methods were proposed <ref> [28, 30, 31, 32, 33, 34, 35, 36] </ref> for the automatic determination of the vanishing points themselves, and it would be interesting to test them against images of random polyhedral scenes.
Reference: [35] <author> R. Horaud. </author> <title> New methods for matching 3D objects with single perspective views. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 9 </volume> <pages> 401-412, </pages> <year> 1987. </year>
Reference-contexts: Also, various methods were proposed <ref> [28, 30, 31, 32, 33, 34, 35, 36] </ref> for the automatic determination of the vanishing points themselves, and it would be interesting to test them against images of random polyhedral scenes.
Reference: [36] <author> M. J. Magee and J. K. Aggarwal. </author> <title> Determining vanishing points form perspective images. Computer Vision, </title> <journal> Graphics, and Image Processing, </journal> <volume> 26 </volume> <pages> 256-267, </pages> <year> 1984. </year>
Reference-contexts: Also, various methods were proposed <ref> [28, 30, 31, 32, 33, 34, 35, 36] </ref> for the automatic determination of the vanishing points themselves, and it would be interesting to test them against images of random polyhedral scenes.
Reference: [37] <author> P.Parodi and G.Piccioli. </author> <title> 3D shape reconstruction by using vanishing points. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 18(2) </volume> <pages> 211-217, </pages> <year> 1996. </year>
Reference-contexts: Finally, vanishing points have also been used in the quantitative stage of reconstructing the 3D structure of a scene from a line drawing (see Parodi & Piccioli <ref> [37] </ref>) and a method to generate random instances of scenes could be used to check how reliable and precise these methods are. Random CSP and random SAT. Several works have been published in the past about solving random instances of constraint satisfaction problems and SAT.
Reference: [38] <author> L.M.Kirousis. </author> <title> Effectively labeling planar projections of polyhedra. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 12(2) </volume> <pages> 123-130, </pages> <year> 1990. </year>
Reference: [39] <author> P.Cheeseman, B.Kanefsky, and W.M.Taylor. </author> <title> Where the really hard problems are. </title> <editor> In J.Mylopoulos and R.Reiter, editors, </editor> <booktitle> Proceedings of IJCAI-91, </booktitle> <pages> pages 331-337, </pages> <address> Sydney, Aus-tralia, </address> <year> 1991. </year> <month> 45 </month>
Reference-contexts: As it is well known for other problems (such as SAT [14, 24] and CSP <ref> [39, 15, 16] </ref>), hard instances of a problem are often elusive and can only be found with a careful tuning of some characteristic parameters.
References-found: 39

