URL: http://www.cs.cornell.edu/kozen/papers/anil.ps
Refering-URL: http://www.cs.cornell.edu/kozen/papers/papers.html
Root-URL: 
Email: kozen@cs.cornell.edu  
Title: Partial Automata and Finitely Generated Congruences: An Extension of Nerode's Theorem  
Author: Dexter Kozen J. N. Crossley, J. B. Remmel, R. A. Shore, and M. E. Sweedler, 
Date: June 4, 1992  
Note: For Anil Nerode, on the occasion of his 60 th birthday  in: Logical Methods: in Honor of Anil Nerode's Sixtieth Birthday, ed.  Birkhauser, Boston, 1993, 490-511.  
Address: Ithaca, New York 14853-7501, USA  
Affiliation: Computer Science Department Cornell University  
Abstract: Let T be the set of ground terms over a finite ranked alphabet . We define partial automata on T and prove that the finitely generated congruences on T are in one-to-one correspondence (up to iso-morphism) with the finite partial automata on T with no inaccessible and no inessential states. We give an application in term rewriting: every ground term rewrite system has a canonical equivalent system that can be constructed in polynomial time. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. A. Arbib and Y. Give'on. </author> <title> Algebra automata I: parallel programming as a prolegomenon to the categorical approach. </title> <journal> Infor. and Control, </journal> <volume> 12 </volume> <pages> 331-345, </pages> <year> 1968. </year>
Reference-contexts: This generalization first came to light in the late 2 1960s, ten years after Myhill and Nerode's work, and can be attributed to a combination of results of Brainerd [2, 3], Eilenberg and Wright [5], and Arbib and Give'on <ref> [1] </ref>, although one must also credit Thatcher and Wright [17] in this context with the development of the algebraic approach to automata on finite trees, which allows "conventional finite automata theory [to go] through for the generalization|and: : : quite neatly" [17]. <p> The relation R generalizes the relation on strings of the same name mentioned above. Myhill-Nerode Theorem for trees <ref> [3, 5, 1] </ref> Let R be an equivalence relation on T . The following three propositions are equivalent: (i) R is recognizable (ii) there exists a congruence on T of finite index refining R (iii) the relation R is of finite index.
Reference: [2] <author> W. S. Brainerd. </author> <title> Tree Generating Systems and Tree Automata. </title> <type> PhD thesis, </type> <institution> Purdue University, </institution> <year> 1967. </year>
Reference-contexts: The Myhill-Nerode Theorem generalizes in a straightforward way to automata on finite trees. This generalization first came to light in the late 2 1960s, ten years after Myhill and Nerode's work, and can be attributed to a combination of results of Brainerd <ref> [2, 3] </ref>, Eilenberg and Wright [5], and Arbib and Give'on [1], although one must also credit Thatcher and Wright [17] in this context with the development of the algebraic approach to automata on finite trees, which allows "conventional finite automata theory [to go] through for the generalization|and: : : quite neatly"
Reference: [3] <author> W. S. Brainerd. </author> <title> The minimalization of tree automata. </title> <journal> Infor. and Control, </journal> <volume> 13 </volume> <pages> 484-491, </pages> <year> 1968. </year>
Reference-contexts: The Myhill-Nerode Theorem generalizes in a straightforward way to automata on finite trees. This generalization first came to light in the late 2 1960s, ten years after Myhill and Nerode's work, and can be attributed to a combination of results of Brainerd <ref> [2, 3] </ref>, Eilenberg and Wright [5], and Arbib and Give'on [1], although one must also credit Thatcher and Wright [17] in this context with the development of the algebraic approach to automata on finite trees, which allows "conventional finite automata theory [to go] through for the generalization|and: : : quite neatly" <p> The relation R generalizes the relation on strings of the same name mentioned above. Myhill-Nerode Theorem for trees <ref> [3, 5, 1] </ref> Let R be an equivalence relation on T . The following three propositions are equivalent: (i) R is recognizable (ii) there exists a congruence on T of finite index refining R (iii) the relation R is of finite index.
Reference: [4] <author> N. Dershowitz and J.-P. Jouannaud. </author> <title> Rewrite systems. </title> <editor> In J. van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, </booktitle> <volume> volume B, </volume> <pages> pages 243-320. </pages> <publisher> North Holland, </publisher> <year> 1990. </year>
Reference-contexts: Given an algebra A, we can consider A as a ground term rewrite system on T [jAj in which the equations are ordered from right to left. This system is unambiguous (in the sense that there are no overlapping redexes) and terminating, thus normal forms exist and are unique <ref> [4] </ref>. By elementary considerations of term rewrite theory, the terms s and t are congruent modulo A iff they have the same normal form. For a total algebra A, the A -normal form of term t is ffi (t) 2 jAj. For an intruduction to term rewrite theory, see [4]. 3 <p> unique <ref> [4] </ref>. By elementary considerations of term rewrite theory, the terms s and t are congruent modulo A iff they have the same normal form. For a total algebra A, the A -normal form of term t is ffi (t) 2 jAj. For an intruduction to term rewrite theory, see [4]. 3 Free Total Extensions A partial automaton runs inductively on a ground term in the same way as a total automaton.
Reference: [5] <author> S. Eilenberg and J. B. Wright. </author> <title> Automata in general algebra. </title> <journal> Infor. and Control, </journal> <volume> 11 </volume> <pages> 452-470, </pages> <year> 1967. </year>
Reference-contexts: The Myhill-Nerode Theorem generalizes in a straightforward way to automata on finite trees. This generalization first came to light in the late 2 1960s, ten years after Myhill and Nerode's work, and can be attributed to a combination of results of Brainerd [2, 3], Eilenberg and Wright <ref> [5] </ref>, and Arbib and Give'on [1], although one must also credit Thatcher and Wright [17] in this context with the development of the algebraic approach to automata on finite trees, which allows "conventional finite automata theory [to go] through for the generalization|and: : : quite neatly" [17]. <p> The relation R generalizes the relation on strings of the same name mentioned above. Myhill-Nerode Theorem for trees <ref> [3, 5, 1] </ref> Let R be an equivalence relation on T . The following three propositions are equivalent: (i) R is recognizable (ii) there exists a congruence on T of finite index refining R (iii) the relation R is of finite index.
Reference: [6] <author> Z. Fulop and S. Vagvolgyi. </author> <title> Congruential tree languages are the same as recognizable tree languages|a proof for a theorem of D. Kozen. </title> <journal> Bull. Europ. Assoc. Theor. Comput. Sci., </journal> <volume> 39 </volume> <pages> 175-184, </pages> <month> October </month> <year> 1989. </year>
Reference-contexts: Equivalently, we can define tree automata as term rewrite systems. This is the approach taken for example in <ref> [6] </ref>. Given an algebra A, we can consider A as a ground term rewrite system on T [jAj in which the equations are ordered from right to left.
Reference: [7] <author> Z. Fulop and S. Vagvolgyi. </author> <title> Ground term rewriting rules for the word problem of ground term equations. </title> <journal> Bull. Europ. Assoc. Theor. Comput. Sci., </journal> <volume> 45 </volume> <pages> 186-201, </pages> <month> October </month> <year> 1991. </year>
Reference-contexts: Faster O (n log n) algorithms for this problem have recently been given by Snyder [16] and Fulop and Vagvolgyi <ref> [7] </ref>. Partial algebras are discussed in [8]. Nondeterministic partial automata have been considered previously in [15]. <p> This corollary appears in [10, 11] (Lemmas 24 and 25), although not stated in the language of term rewrite systems. Improved algorithms have recently been obtained by Snyder [16] and Fulop and Vagvolgyi <ref> [7] </ref>. These algorithms run in time O (n log n) and are the fastest known algorithms for this problem.
Reference: [8] <author> G. Gratzer. </author> <title> Universal Algebra. </title> <publisher> Springer-Verlag, </publisher> <address> second edition, </address> <year> 1979. </year>
Reference-contexts: Faster O (n log n) algorithms for this problem have recently been given by Snyder [16] and Fulop and Vagvolgyi [7]. Partial algebras are discussed in <ref> [8] </ref>. Nondeterministic partial automata have been considered previously in [15]. Although the approach is new, many 5 of the essential ideas behind the results of this paper are more or less implicit in [10, 11]. 2 Partial Algebras and Partial Automata Partial algebras, subalgebras, homomorphisms, and congruences are discussed in [8]. <p> <ref> [8] </ref>. Nondeterministic partial automata have been considered previously in [15]. Although the approach is new, many 5 of the essential ideas behind the results of this paper are more or less implicit in [10, 11]. 2 Partial Algebras and Partial Automata Partial algebras, subalgebras, homomorphisms, and congruences are discussed in [8]. Let be an arbitrary but fixed finite ranked alphabet. The rank of f 2 is called its arity. The set of n-ary elements of is denoted n . Nullary symbols c 2 0 are called constants. <p> An equivalence relation is of finite index if there are only finitely many -classes. An equivalence relation R refines another equivalence relation S if each S-class is a union of R-classes; equivalently, if sRt implies sSt. 2 Congruences on partial algebras are defined in <ref> [8] </ref>, but for the purposes of this paper we will only need to consider congruences on T [Q . Definition 2.3 Let A and B be two partial -algebras. <p> We emphasize that partial homomorphisms are always total functions. We write A v B and say that A is a partial subalgebra of B (or weak subalgebra in the terminology of <ref> [8] </ref>) and that B is an extension of A if jAj jBj and the inclusion map A ! B is a partial homomorphism. A partial subalgebra A of B is said to be the induced partial subalgebra of B on Q jBj (or relative subalgebra in the terminology of [8]) if <p> of <ref> [8] </ref>) and that B is an extension of A if jAj jBj and the inclusion map A ! B is a partial homomorphism. A partial subalgebra A of B is said to be the induced partial subalgebra of B on Q jBj (or relative subalgebra in the terminology of [8]) if jAj = Q and for all q 1 ; : : : ; q n 2 Q and f 2 n , whenever the right hand side is defined and in Q. 2 Definition 2.4 If A is a partial algebra, let T [jAj be the set of ground
Reference: [9] <author> J. E. Hopcroft and J. D. Ullman. </author> <title> Introduction to Automata Theory, Languages, and Computation. </title> <publisher> Addison-Wesley, </publisher> <year> 1979. </year>
Reference-contexts: Nevertheless, its statement and proof are elementary enough that it can be taught in introductory courses. The Myhill-Nerode Theorem exploits a fundamental connection between combinatorics and algebra to give a particularly satisfying characterization of the regular sets over a finite alphabet. As presented in a standard undergraduate text <ref> [9] </ref>, it states: Myhill-Nerode Theorem [13, 14] Let R be a set of strings over a finite alphabet . <p> A particularly easy proof of this generalization in the style of <ref> [9] </ref> can be found in [12]. In the Thatcher-Wright approach to automata on finite trees, the elements of are assigned finite arities, and instead of strings one works with the ground terms T over . <p> This definition includes the nullary case (n = 0), in which the function symbol is called a constant and interpreted as an element of jAj. By analogy with the combinatorial treatment of <ref> [9] </ref>, we call elements of jAj states.
Reference: [10] <author> D. Kozen. </author> <title> Complexity of Finitely Presented Algebras. </title> <type> PhD thesis, </type> <institution> Cornell University, </institution> <month> May </month> <year> 1977. </year> <month> 21 </month>
Reference-contexts: The correspondence is given by the quotient construction 7! T = ; in which it is readily observed that the quotient is finite iff the corresponding congruence is of finite index. In <ref> [10, 11] </ref>, we investigated the complexity of various decision problems in -algebras presented by finite sets of ground equations over T ; that is, quotients of T modulo finitely generated congruences on T . <p> This gives a method for testing the equivalence of ground term rewrite systems over a finite signature in polynomial time. A proof of the existence of the canonical system and a polynomial time algorithm for deriving it appeared in <ref> [10, 11] </ref> (Lemmas 24 and 25), although it was not stated in terms of term rewriting. Faster O (n log n) algorithms for this problem have recently been given by Snyder [16] and Fulop and Vagvolgyi [7]. Partial algebras are discussed in [8]. <p> Partial algebras are discussed in [8]. Nondeterministic partial automata have been considered previously in [15]. Although the approach is new, many 5 of the essential ideas behind the results of this paper are more or less implicit in <ref> [10, 11] </ref>. 2 Partial Algebras and Partial Automata Partial algebras, subalgebras, homomorphisms, and congruences are discussed in [8]. Let be an arbitrary but fixed finite ranked alphabet. The rank of f 2 is called its arity. The set of n-ary elements of is denoted n . <p> Thus s t () implies ffi (s) = ffi (t). By Theorem 4.4, the essential subalgebra E (T =) is contained in A and is therefore finite. 2 The following theorem was essentially proved in <ref> [10] </ref> and [11, Lemma 25], to which we refer the reader for the algorithm and proof of correctness. Theorem 5.2 ([10, 11]) Given any finite relation on T , the diagram E of E = E (T =) can be produced from in polynomial time. <p> Moreover, 0 can be constructed from in polynomial time. The system 0 is of course just E , where E is the essential subalgebra of T =. This corollary appears in <ref> [10, 11] </ref> (Lemmas 24 and 25), although not stated in the language of term rewrite systems. Improved algorithms have recently been obtained by Snyder [16] and Fulop and Vagvolgyi [7]. These algorithms run in time O (n log n) and are the fastest known algorithms for this problem. <p> These algorithms run in time O (n log n) and are the fastest known algorithms for this problem. It is decidable in polynomial time whether two -algebras presented by finite sets of ground equations over are isomorphic <ref> [10, 11] </ref>: one tests whether all the defining equations of one presentation are consequences of the defining equations of the other presentation, and vice versa. Corollary 4.6 gives an alternative method: construct the essential subalgebras and test whether they are isomorphic.
Reference: [11] <author> D. Kozen. </author> <title> Complexity of finitely presented algebras. </title> <booktitle> In Proc. 9th ACM Symp. Theory of Comput., </booktitle> <pages> pages 164-177, </pages> <month> May </month> <year> 1977. </year>
Reference-contexts: The correspondence is given by the quotient construction 7! T = ; in which it is readily observed that the quotient is finite iff the corresponding congruence is of finite index. In <ref> [10, 11] </ref>, we investigated the complexity of various decision problems in -algebras presented by finite sets of ground equations over T ; that is, quotients of T modulo finitely generated congruences on T . <p> This gives a method for testing the equivalence of ground term rewrite systems over a finite signature in polynomial time. A proof of the existence of the canonical system and a polynomial time algorithm for deriving it appeared in <ref> [10, 11] </ref> (Lemmas 24 and 25), although it was not stated in terms of term rewriting. Faster O (n log n) algorithms for this problem have recently been given by Snyder [16] and Fulop and Vagvolgyi [7]. Partial algebras are discussed in [8]. <p> Partial algebras are discussed in [8]. Nondeterministic partial automata have been considered previously in [15]. Although the approach is new, many 5 of the essential ideas behind the results of this paper are more or less implicit in <ref> [10, 11] </ref>. 2 Partial Algebras and Partial Automata Partial algebras, subalgebras, homomorphisms, and congruences are discussed in [8]. Let be an arbitrary but fixed finite ranked alphabet. The rank of f 2 is called its arity. The set of n-ary elements of is denoted n . <p> Thus s t () implies ffi (s) = ffi (t). By Theorem 4.4, the essential subalgebra E (T =) is contained in A and is therefore finite. 2 The following theorem was essentially proved in [10] and <ref> [11, Lemma 25] </ref>, to which we refer the reader for the algorithm and proof of correctness. Theorem 5.2 ([10, 11]) Given any finite relation on T , the diagram E of E = E (T =) can be produced from in polynomial time. <p> Moreover, 0 can be constructed from in polynomial time. The system 0 is of course just E , where E is the essential subalgebra of T =. This corollary appears in <ref> [10, 11] </ref> (Lemmas 24 and 25), although not stated in the language of term rewrite systems. Improved algorithms have recently been obtained by Snyder [16] and Fulop and Vagvolgyi [7]. These algorithms run in time O (n log n) and are the fastest known algorithms for this problem. <p> These algorithms run in time O (n log n) and are the fastest known algorithms for this problem. It is decidable in polynomial time whether two -algebras presented by finite sets of ground equations over are isomorphic <ref> [10, 11] </ref>: one tests whether all the defining equations of one presentation are consequences of the defining equations of the other presentation, and vice versa. Corollary 4.6 gives an alternative method: construct the essential subalgebras and test whether they are isomorphic.
Reference: [12] <author> D. Kozen. </author> <title> On the Myhill-Nerode theorem for trees. </title> <journal> Bull. Europ. Assoc. Theor. Comput. Sci., </journal> <volume> 47 </volume> <pages> 170-173, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: A particularly easy proof of this generalization in the style of [9] can be found in <ref> [12] </ref>. In the Thatcher-Wright approach to automata on finite trees, the elements of are assigned finite arities, and instead of strings one works with the ground terms T over .
Reference: [13] <author> J. Myhill. </author> <title> Finite automata and the representation of events. </title> <type> Technical Report 57-264, </type> <institution> WADC, </institution> <year> 1957. </year>
Reference-contexts: 1 Introduction The Myhill-Nerode Theorem is a classic result in the theory of finite automata. It dates to work of Myhill <ref> [13] </ref> and Nerode [14] in the late 1950s, but is still today considered one of the most important results in the subject. It has numerous applications, especially in showing that certain sets are regular or certain apparently stronger types of automata are really no more powerful than finite automata. <p> The Myhill-Nerode Theorem exploits a fundamental connection between combinatorics and algebra to give a particularly satisfying characterization of the regular sets over a finite alphabet. As presented in a standard undergraduate text [9], it states: Myhill-Nerode Theorem <ref> [13, 14] </ref> Let R be a set of strings over a finite alphabet .
Reference: [14] <author> A. Nerode. </author> <title> Linear automata transformations. </title> <journal> Proc. Amer. Math. Soc., </journal> <volume> 9 </volume> <pages> 541-544, </pages> <year> 1958. </year>
Reference-contexts: 1 Introduction The Myhill-Nerode Theorem is a classic result in the theory of finite automata. It dates to work of Myhill [13] and Nerode <ref> [14] </ref> in the late 1950s, but is still today considered one of the most important results in the subject. It has numerous applications, especially in showing that certain sets are regular or certain apparently stronger types of automata are really no more powerful than finite automata. <p> The Myhill-Nerode Theorem exploits a fundamental connection between combinatorics and algebra to give a particularly satisfying characterization of the regular sets over a finite alphabet. As presented in a standard undergraduate text [9], it states: Myhill-Nerode Theorem <ref> [13, 14] </ref> Let R be a set of strings over a finite alphabet .
Reference: [15] <author> A. Nerode, A. Yakhnis, and V. Yakhnis. </author> <title> Concurrent programs as strategies in games. </title> <editor> In Y. Moschovakis, editor, </editor> <booktitle> Logic from Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference-contexts: Faster O (n log n) algorithms for this problem have recently been given by Snyder [16] and Fulop and Vagvolgyi [7]. Partial algebras are discussed in [8]. Nondeterministic partial automata have been considered previously in <ref> [15] </ref>. Although the approach is new, many 5 of the essential ideas behind the results of this paper are more or less implicit in [10, 11]. 2 Partial Algebras and Partial Automata Partial algebras, subalgebras, homomorphisms, and congruences are discussed in [8].
Reference: [16] <author> W. Snyder. </author> <title> Fast ground completion: an O(n log n) algorithm for generating reduced sets of ground rewrite rules equivalent to a set of ground equations. </title> <editor> In Nachum Dershowitz, editor, </editor> <booktitle> Proc. Third Int. Conf. Rewriting Techniques and Applications, </booktitle> <pages> pages 419-433. </pages> <note> Springer-Verlag Lect. Notes in Comput. Sci. 355, </note> <year> 1989. </year>
Reference-contexts: Faster O (n log n) algorithms for this problem have recently been given by Snyder <ref> [16] </ref> and Fulop and Vagvolgyi [7]. Partial algebras are discussed in [8]. Nondeterministic partial automata have been considered previously in [15]. <p> The system 0 is of course just E , where E is the essential subalgebra of T =. This corollary appears in [10, 11] (Lemmas 24 and 25), although not stated in the language of term rewrite systems. Improved algorithms have recently been obtained by Snyder <ref> [16] </ref> and Fulop and Vagvolgyi [7]. These algorithms run in time O (n log n) and are the fastest known algorithms for this problem.
Reference: [17] <author> J. W. Thatcher and J. B. Wright. </author> <title> Generalized finite automata theory with an application to a decision problem of second order logic. </title> <journal> Math. Syst. Theory, </journal> <volume> 2 </volume> <pages> 57-81, </pages> <year> 1968. </year>
Reference-contexts: This generalization first came to light in the late 2 1960s, ten years after Myhill and Nerode's work, and can be attributed to a combination of results of Brainerd [2, 3], Eilenberg and Wright [5], and Arbib and Give'on [1], although one must also credit Thatcher and Wright <ref> [17] </ref> in this context with the development of the algebraic approach to automata on finite trees, which allows "conventional finite automata theory [to go] through for the generalization|and: : : quite neatly" [17]. A particularly easy proof of this generalization in the style of [9] can be found in [12]. <p> 3], Eilenberg and Wright [5], and Arbib and Give'on [1], although one must also credit Thatcher and Wright <ref> [17] </ref> in this context with the development of the algebraic approach to automata on finite trees, which allows "conventional finite automata theory [to go] through for the generalization|and: : : quite neatly" [17]. A particularly easy proof of this generalization in the style of [9] can be found in [12]. In the Thatcher-Wright approach to automata on finite trees, the elements of are assigned finite arities, and instead of strings one works with the ground terms T over .
References-found: 17

