URL: http://www.cs.gatech.edu/reverse/repository/software.ps
Refering-URL: http://www.cs.gatech.edu/reverse/repos.html
Root-URL: 
Title: RECOGNIZING DESIGN DECISIONS IN PROGRAMS  
Author: Richard J. LeBlanc, Jr. Stephen B. Ornburn Spencer Rugaber 
Address: Atlanta, Georgia 30332-0280  
Affiliation: School of Information and Computer Science and Software Engineering Research Center Georgia Institute of Technology  
Abstract: Software maintenance, reverse engineering, and software reuse rely on being able to recognize, comprehend, and manipulate design decisions in source code. But what is a design decision? This paper describes a characterization of design decisions based on the analysis of programming language constructs. The characterization underlies a framework for documenting and manipulating design information to facilitate maintenance and reuse activities. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Dallas E. Webster, </author> <title> "Mapping the Design Representation Terrain: A Survey," </title> <type> MCC Technical Report Number STP-093-87, </type> <month> July </month> <year> 1987. </year>
Reference: 2. <author> Robert Balzer, </author> <title> "A 15 Year Perspective on Automatic Programming," </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> Vol. SE-11, No. 11, </volume> <month> November </month> <year> 1985, </year> <pages> pp. 1257-1268. </pages>
Reference: 3. <author> Eliot Soloway, Jeannine Pinto, Stan Letovsky, David Littman and Robin Lamport, </author> <title> "Designing Documentation to Compensate for Delocalized Plans," </title> <journal> Communications of the ACM, </journal> <volume> Vol. 31, No. 11, </volume> <month> November </month> <year> 1988. </year>
Reference: 4. <author> D. L. Parnas, </author> <title> "On the Criteria To Be Used in Decomposing Systems into Modules," </title> <journal> Communications of the ACM, </journal> <volume> Vol. 15, No. 12, </volume> <month> December </month> <year> 1972, </year> <pages> pp. 1053-1058. </pages>
Reference: 5. <author> Martin S. Feather, </author> <title> "A Survey and Classification of Some Program Transformation Approaches and Techniques," </title> <booktitle> Program Specification and Transformation, </booktitle> <pages> pp. 165-195, </pages> <publisher> North Holland, </publisher> <year> 1987. </year>
Reference: 6. <author> Victor R. Basili and Harlan D. Mills, </author> <title> "Understanding and Documenting Programs," </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> Vol. SE-8, No. 3, </volume> <month> May </month> <year> 1982. </year>
Reference: 7. <author> Ted J. Biggerstaff, </author> <title> "Design Recovery for Maintenance and Reuse," </title> <booktitle> IEEE Computer, </booktitle> <month> July </month> <year> 1989. </year>
Reference: 8. <author> Mark R. Blackburn, </author> <title> "Toward a Theory of Software Reuse Based on Formal Methods," </title> <type> Software Productivity Consortium Technical Report, </type> <note> SPC-TR-88-010, Version 1.0, </note> <month> April </month> <year> 1988. </year>
Reference: 9. <author> Derek Coleman and Robin M. Gallimore, </author> <title> "A Framework for Program Development," </title> <journal> Hewlett-Packard Journal, </journal> <volume> Vol. 38, </volume> <month> October </month> <year> 1987, </year> <pages> pp. 37-40. 16 </pages>
References-found: 9

