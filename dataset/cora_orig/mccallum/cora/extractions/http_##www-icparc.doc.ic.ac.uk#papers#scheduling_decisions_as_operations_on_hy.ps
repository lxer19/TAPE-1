URL: http://www-icparc.doc.ic.ac.uk/papers/scheduling_decisions_as_operations_on_hy.ps
Refering-URL: http://www-icparc.doc.ic.ac.uk/papers.html
Root-URL: 
Email: E-mail: rodosek@dfd.dlr.de  
Phone: Fax: (+49) 8153 28 1448  
Title: Scheduling Decisions as Operations on Hypergraphs  
Author: Robert Rodosek 
Keyword: Content Areas: Scheduling, Constraint-Based Reasoning, Causal Reasoning, Graph Theory.  
Address: 82230 Oberpfaffenhofen, Germany  
Affiliation: German Aerospace Research Establishment  
Abstract: For a large class of scheduling problems, described in a CSP notation, we propose to use a hypergraph as an underlying structure. Using causal theories, based on the nature of constraints, we show that scheduling decisions can be realized as simple operations on hypergraphs. If a hypergraph can be reduced by these operations into the empty hypergraph, the scheduling problem is solved without backtracking. Finally, we present some experimental results. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. Berge, </author> <title> Hypergraphs, </title> <publisher> North Holland, </publisher> <address> Amsterdam, The Netherlands, </address> <year> 1989. </year>
Reference-contexts: To use these operations as scheduling decisions, an extension of the usual definition of hypergraphs (see <ref> [1] </ref>) by adding a labeling to vertices is needed. Definition 3.1 (Hypergraph).
Reference: [2] <author> R. Dechter and J. Pearl. </author> <title> Network-Based Heuristics for Constraint Satisfaction Problems. </title> <journal> Artificial Intelligence, </journal> <volume> 34, </volume> <year> 1988. </year>
Reference: [3] <author> R. Dechter and J. Pearl. </author> <title> Directed Constraint Networks: A relational Framework for Causal Modeling. </title> <booktitle> Proceedings of the International Joint Conference on Artificial Intelligence, </booktitle> <year> 1991. </year>
Reference-contexts: In [5] a hypergraph has been used with the emphasis on the decomposition. Some work has also been done on solving CSPs using a graph as a basis for causal theories (see <ref> [3] </ref>). The notion of causal theory on a hypergraph can be found in [9]. Scheduling decisions on a hypergraph have not been taken into consideration yet. The paper is organized as follows. First, the necessary terminology for scheduling problems and CSPs is introduced in Section 2. <p> For the remainder of this paper, we will only consider d-reduced scheduling problems. For an ordering of indices, i.e., a permutation of any subset of N , causal theory assures that imposing constraints on later indices of this ordering will not further constraint earlier indices (see [6]). In <ref> [3] </ref> it is stated that causal theory relative to an ordering of indices is a sufficient and necessary condition to describe backtrack-freeness along this ordering.
Reference: [4] <author> M. S. Fox and N. Sadeh. </author> <title> Why Is Scheduling Difficult? A CSP Perspective. </title> <booktitle> Proceedings of the National Conference on Artificial Intelligence, </booktitle> <year> 1990. </year>
Reference-contexts: 1 Introduction Solving scheduling problems have been considered lately by using a reductionist approach, based on constraint satisfaction techniques (see, e.g., <ref> [4] </ref>, [11]). Specific types of constraints of scheduling problems can be used to efficiently improve the search when a hypergraph is used as an underlying structure, and operations on the hypergraph are used as scheduling decisions. Mostly, however, this approach has not yet been considered. <p> Some experimental results of scheduling problems solved by the proposed technique are presented in the next section. Finally, Section 5 summarizes the paper. 2 Scheduling Problems and Constraint Satisfaction Problems 2.1 Scheduling Problems Scheduling problems <ref> [4] </ref> are generally defined by two basic sets, a set of activities and a set of resources, with some constraints over them. A solution of the scheduling problem is an assignment of a start time and a resource for each activity such that all specified constraints are satisfied.
Reference: [5] <author> P. Jeavons, D. Cohen and M. Gyssens. </author> <title> Decomposing Constraint Satisfaction Problems Using Database Techniques. </title> <journal> Artificial Intelligence, </journal> <volume> 65, </volume> <year> 1994. </year>
Reference-contexts: This feature of hypergraphs is useful to define good heuristics for scheduling problems. There already exist some techniques which use a hypergraph as an underlying structure or use causal theory to solve CSPs. In <ref> [5] </ref> a hypergraph has been used with the emphasis on the decomposition. Some work has also been done on solving CSPs using a graph as a basis for causal theories (see [3]). The notion of causal theory on a hypergraph can be found in [9].
Reference: [6] <author> J. de-Kleer and J. S. Brown. </author> <title> Theories of Causal Ordering. </title> <journal> Artificial Intelligence, </journal> <volume> 29, </volume> <year> 1986. </year>
Reference-contexts: For the remainder of this paper, we will only consider d-reduced scheduling problems. For an ordering of indices, i.e., a permutation of any subset of N , causal theory assures that imposing constraints on later indices of this ordering will not further constraint earlier indices (see <ref> [6] </ref>). In [3] it is stated that causal theory relative to an ordering of indices is a sufficient and necessary condition to describe backtrack-freeness along this ordering.
Reference: [7] <author> P. Meseguer. </author> <title> Constraint Satisfaction Problems: An Overview. </title> <journal> AICOM, </journal> <volume> Vol. 2, No. 1, </volume> <year> 1989. </year>
Reference-contexts: f (r 1 ; r 2 ); (r 1 ; r 3 ); (r 2 ; r 1 ); (r 2 ; r 3 )g, r (a; a 0 ) = R fi R for other pairs of activities a; a 0 2 A. -2.2 Constraint Satisfaction Problems A CSP <ref> [7] </ref> consists of a number of sets and a number of relations, i.e., constraints, on these sets. Each constraint specifies allowed combinations of values, one of each set. Finding a combination of values, namely a solution, which satisfies all constraints, is known to be an N P -complete problem. <p> In order to get a CSP where all constraints for each index i 2 N allow exactly the same values of the set D i , we reconsider the well-known definition of an arc-consistent CSP (see <ref> [7] </ref>) in our terminology: If = (D; C) is a CSP, then the arc-consistent CSP for is the CSP (( g D 1 ; :::; g D n ); fC " g D 1 fi ::: fi g D n j C 2 Cg) where f D i = "C # <p> An arc-consistent CSP is derived from a given CSP in polynomial time (see <ref> [7] </ref>). To illustrate these definitions, we give an example of an arc-consistent CSP, which will be used throughout the paper, and corresponds to the scheduling problem in Example 2.2. 4 Table 1: The domains, the constraints and their scope of the CSP in Example 2.5.
Reference: [8] <author> R. Rodosek. </author> <title> Complexity and Heuristics for the Scheduling Problem. </title> <booktitle> Proceedings IEEE Elec tronical and Comupter Science Conference, Portoroz, Slovenia, </booktitle> <year> 1993. </year>
Reference-contexts: A solution of the scheduling problem is an assignment of a start time and a resource for each activity such that all specified constraints are satisfied. We consider a large class of scheduling problems <ref> [8] </ref> where temporal and resource dependencies between any two activities are allowed. Definition 2.1 (Scheduling problem). <p> * any two activities do not run simultaneously on one resource, i.e., 8a; b 2 A : sr (a) = sr (b) ) (st (a) + d (a) st (b)) _ (st (b) + d (b) st (a)): The scheduling problems defined by this definition are N P -complete (see <ref> [8] </ref>). In order to get the resources which are available for an activity a 2 A, the following restriction of r is defined: r j a := T b2A fr j (r; r 0 ) 2 r (a; b)g. <p> The activities a 1 and a 4 , and a 3 and a 4 use different resources. The goal is to find a start time in time space <ref> [0; 8] </ref> and a resource for each activity such that the constraints are satisfied.
Reference: [9] <author> R. Rodosek. </author> <title> Combining Constraint Network and Causal Theory to Solve Scheduling Prob lems form a CSP Perspective. </title> <booktitle> To appear in Proceedings of 11th European Conference on Artificial Intelligence, </booktitle> <year> 1994. </year>
Reference-contexts: In [5] a hypergraph has been used with the emphasis on the decomposition. Some work has also been done on solving CSPs using a graph as a basis for causal theories (see [3]). The notion of causal theory on a hypergraph can be found in <ref> [9] </ref>. Scheduling decisions on a hypergraph have not been taken into consideration yet. The paper is organized as follows. First, the necessary terminology for scheduling problems and CSPs is introduced in Section 2. Afterwards, properties of constraints of scheduling problems assembled into CSPs are examined. <p> The simple condition on scheduling problems is that the duration of each activity is smaller or equal to 1 4 t max . Scheduling problems with this property are called d-reduced scheduling problems. Theorem 2.6 (see <ref> [9] </ref>). Let P be a d-reduced scheduling problem. <p> Removing an edge which contains a lonely vertex represents the first operation on hypergraphs: Operation 3.2 (Removing an edge which contains a lonely vertex). Input: A hypergraph (V; E; c) with a lonely vertex v 2 V . Output: The v-reduced hypergraph of (V; E; c). In <ref> [9] </ref> it is shown that Operation 3.2 preserves the solutions of an arc-consistent CSP where the constraints are subquadrangles. Therefore, each solution to the problem restricted by this operation can be extended to a solution to the original problem: Lemma 3.3 (see [9]). <p> In <ref> [9] </ref> it is shown that Operation 3.2 preserves the solutions of an arc-consistent CSP where the constraints are subquadrangles. Therefore, each solution to the problem restricted by this operation can be extended to a solution to the original problem: Lemma 3.3 (see [9]). Let be an arc-consistent CSP where the constraints are sub-quadrangles, and let G be the hypergraph for .
Reference: [10] <editor> K. R. Reischuk, Einfuhrung in die Komplexitatstheorie, B. G. </editor> <publisher> Teubner, </publisher> <address> Stuttgart, Germany, </address> <year> 1990. </year>
Reference-contexts: Since these variables are required to belong to a set with two elements, e.g., f"reduce to single edge with white vertices", "reduce to single edge with black vertices"g, the problem is N P -complete (see <ref> [10] </ref>). Surprisingly, for a class of hypergraphs with at most two non-single edges in every cycle a sequence of operations can be found efficiently, and hence, an ordering of indices to solve the scheduling problem without backtracking if such an ordering exists. <p> For two non-simple edges e i and e j in a cycle, accordingly to white and black vertices, one of the following inequalities is derived: v i + v j 1 or v i v j 1: This variant of integer programming is solved in polynomial time (see <ref> [10] </ref>). Hypergraphs with this property are called 2-non-simple-edges hypergraphs. Consider the hypergraph in Figure 1, there are two cycles, i.e., v 1 C 5 v 2 C 6 v 3 C 4 and v 5 C 1 v 8 C 2 v 7 C 6 v 6 C 5 .
Reference: [11] <author> J. E. Spragg and B. M. Smith. </author> <title> Application of Constraint Satisfaction to Scheduling Prob lems. </title> <booktitle> The Newsletter of the Society for the Study of Artificial Intelligence and Simulation of Behaviour, </booktitle> <volume> 83/84, </volume> <year> 1993. </year> <month> 12 </month>
Reference-contexts: 1 Introduction Solving scheduling problems have been considered lately by using a reductionist approach, based on constraint satisfaction techniques (see, e.g., [4], <ref> [11] </ref>). Specific types of constraints of scheduling problems can be used to efficiently improve the search when a hypergraph is used as an underlying structure, and operations on the hypergraph are used as scheduling decisions. Mostly, however, this approach has not yet been considered.
References-found: 11

