URL: http://ai.eecs.umich.edu/people/wrayre/pubs/CGF94.ps.gz
Refering-URL: http://ai.eecs.umich.edu/people/wrayre/pubs.html
Root-URL: http://www.cs.umich.edu
Email: vanlent@eecs.umich.edu and wrayre@eecs.umich.edu  
Title: A Very Low Cost System for Direct Human Control of Simulated Vehicles  
Author: Michael van Lent and Robert Wray 
Address: 1101 Beal Avenue Ann Arbor, MI 28109-2110  
Affiliation: Artificial Intelligence Laboratory University of Michigan  
Abstract: Testing and knowledge acquisition have been two of the most tedious and time consuming tasks in the development of IFOR agents in the TacAir-Soar (TAS) project. This paper presents some suggestions for a human control tool, similar to a simple flight simulator, that can be helpful in these two areas. Furthermore, we discuss some of the design considerations and implementation issues that are faced in developing such a tool. Such a tool, called the Human Instrument Panel (HIP) has been developed for use in the TacAir-Soar project. Some key features of HIP are how cheaply it has been developed, how quickly is was incorporated into the TacAir-Soar project, and how easily it can be adapted to similar domains. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Rosenbloom, P., Johnson, L., Jones, R., Koss, F., Laird, J., Lehman, J., Rubinoff, R., Schwamb, K., Tambe, M. </author> <title> Intelligent automated agents for tactical air simulation: a progress report. </title> <note> Manuscript submitted for publication. </note>
Reference-contexts: Since the Human Instrument Panel is meant to be a time-saving tool, one major design consideration is that the time and effort saved by HIP outweigh the time and effort spent on development and maintenance. The TacAir-Soar project <ref> [1] </ref> at the University of Michigan, ISI, and Carnegie Mellon University has combined Soar, a state of the art artificial intelligence architecture, and ModSAF, a sophisticated battlefield simulator, to create realistic, human-like computer agents in a beyond visual range air-to-air combat domain. <p> In considering the level of cockpit detail for the HIP interface, one key decision was made which affected the subsequent development of the tool. The TacAir-Soar agents use a cockpit abstraction <ref> [1] </ref> to interface with ModSAF. The agents send commands to ModSAF indicating flight parameters such as desired altitude and speed; Mod-SAF includes functions to convert these high-level commands into low-level flight surface, sensor and weapon controls.
Reference: [2] <author> Jones, R., Tambe, T., Laird, J., Rosenbloom, P. </author> <title> Intelligent automated agents for flight training simulators. </title> <booktitle> In Proceedings of the Third Conference on Computer Generated Forces and Behavioral Representation. </booktitle> <institution> Univ. of Central FL, IST-TR-93-07, </institution> <year> 1993. </year>
Reference-contexts: The development of these agents can be viewed as a repeated cycle through three phases <ref> [2] </ref>: 1. Knowledge Acquisition 2. Implementation 3. Testing Usually the majority of the development time in the TacAir-Soar project is spent in the knowledge acquisition and testing phases. It is for this reason that HIP has been developed specifically to assist in these two tasks.
Reference: [3] <author> Conway, M., Pausch, R., Passarella, K. </author> <note> The SUIT Version 2.3 Reference Manual. </note> <institution> University of Virginia, </institution> <year> 1992. </year>
Reference-contexts: A widget is simply a pre-defined graphics component with a specific functionality such as a menu or slide-bar. Examples of such widget design packages include X-Designer <ref> [3] </ref> (Imperial Software Technologies), Builder Xcessory [4] (Integrated Computer Solutions), and the Simple User Interface Toolkit [5] or SUIT (University of Virginia).
Reference: [4] <author> X-designer user's manual, </author> <type> release 3. </type> <institution> Imperial Software Technology, </institution> <year> 1993. </year>
Reference-contexts: A widget is simply a pre-defined graphics component with a specific functionality such as a menu or slide-bar. Examples of such widget design packages include X-Designer [3] (Imperial Software Technologies), Builder Xcessory <ref> [4] </ref> (Integrated Computer Solutions), and the Simple User Interface Toolkit [5] or SUIT (University of Virginia).
Reference: [5] <institution> Builder Xcessory user's manual. Integrated Computer Solutions, Incorporated. </institution> <address> Cam-bridge, MA, </address> <year> 1992. </year>
Reference-contexts: A widget is simply a pre-defined graphics component with a specific functionality such as a menu or slide-bar. Examples of such widget design packages include X-Designer [3] (Imperial Software Technologies), Builder Xcessory [4] (Integrated Computer Solutions), and the Simple User Interface Toolkit <ref> [5] </ref> or SUIT (University of Virginia). SUIT was chosen for this project because it was available to the university free-of-charge and it included the following needed features: a reasonable assortment of widgets, the ability to design widgets with specific functionality, and good documentation backed by a large user group.
Reference: [6] <editor> Brinkman, D., ed. Jane's Avionics, </editor> <booktitle> 12th Edition. Jane's Information Group, </booktitle> <publisher> Inc. </publisher> <year> 1993. </year>

References-found: 6

