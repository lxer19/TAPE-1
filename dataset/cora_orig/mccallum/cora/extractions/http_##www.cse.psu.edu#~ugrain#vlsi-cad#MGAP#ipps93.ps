URL: http://www.cse.psu.edu/~ugrain/vlsi-cad/MGAP/ipps93.ps
Refering-URL: http://www.cse.psu.edu/~ugrain/publications.html
Root-URL: 
Note: Copyright info.pub.permission@ieee.org. By choosing to view this document, you agree to all provisions of the copyright laws pro tecting it.  
Abstract: c fl1994 IEEE. All rights reserved. Personal use of this material is permitted. However, permission to reprint/republish this material for advertising or promotional purposes or for creating new collective works for resale or redistribution must be obtained from the IEEE. For information on obtaining permission, send a blank email message to
Abstract-found: 1
Intro-found: 1
Reference: [ANR74] <author> N. Ahmed, T. Natarajan, and K. R. Rao. </author> <title> Discrete Cosine Transform. </title> <journal> IEEE Trans. on Comps., </journal> <pages> pages 90-93, </pages> <month> Jan. </month> <year> 1974. </year>
Reference-contexts: The discrete cosine transform of m numbers can be computed in like fashion by using a size 2m FFT <ref> [ANR74] </ref>. 4 Architectural Alternatives It is clear that though the MGAP is suitable for a variety of image processing tasks, it can do still better if global communications can be improved. In [BOI93] a shift-register network was proposed as an addition to the array architecture.
Reference: [BOI93] <author> R. S. Bajwa, R. M. Owens, and M. J. Irwin. </author> <title> A Massively Parallel Micro-Grained, </title> <booktitle> VLSI Architecture. In VLSI Design'93, </booktitle> <address> Bombay, India, </address> <month> Jan. </month> <year> 1993. </year>
Reference-contexts: In <ref> [BOI93] </ref> a shift-register network was proposed as an addition to the array architecture. This network can be used to shift in/out a bit-plane of the image while the array performs other operations, similar to the S register in the MPP. The shift-register network of [BOI93] is modified so as to provide <p> In <ref> [BOI93] </ref> a shift-register network was proposed as an addition to the array architecture. This network can be used to shift in/out a bit-plane of the image while the array performs other operations, similar to the S register in the MPP. The shift-register network of [BOI93] is modified so as to provide shift registers of different lengths under program control as shown in figure 3, 10 Table 3 Performance figures for the MGAP Operation Effective array size No. of cycles Speed Results/s 15 fi 15 Convolution 8-bit integers 64 fi 64 37; 506 1:5ms 2:7 fi
Reference: [CEAA89] <author> C.Weems, E.Riseman, A.Hanson, and A.Rosenfeld. </author> <title> A Report on the Results of the DARPA Integrated Image Understanding Benchmark Exercise. </title> <booktitle> In Proceedings of the Image Understanding Workshop, </booktitle> <pages> pages 165-192, </pages> <month> May </month> <year> 1989. </year>
Reference-contexts: This benchmark has been criticised for not providing a good estimate of the performance of the image processing system and the interactions between different parts of the system <ref> [CEAA89] </ref>, but it is ideally suited for our purposes because we are studying the performance of the array and not that of an entire system.
Reference: [Fou86] <author> T. Fountain. </author> <title> An Evaluation of Some Chips for Image Processing. </title> <editor> In L. Uhr, K. Preston, S. Levialdi, and M. J. B. Duff, editors, </editor> <title> Evaluation of Multicomputers for Image Processing, chapter Four. </title> <publisher> Academic Press, </publisher> <year> 1986. </year>
Reference-contexts: The value of a device is a function of its performance as well as its cost, and the two can be combined to give some idea of the cost 2 effectiveness of the device. Using the numbers and measures proposed by <ref> [Fou86] </ref>, table 2 is constructed. The cost estimate for the MGAP is computed from what it cost us to fabricate it at MOSIS. Production costs will be much lower if produced in volume. <p> The data shown here spans a ten year period during which significant changes occured in technology. Estimates of costs based on the number of processors per chip (as used by <ref> [Fou86] </ref>) or even the number of transistors per processor vary with the technology used (i.e. will be different for NMOS and CMOS) and will still not factor in the all important costs resulting from wires.
Reference: [Ger83] <author> F. A. Gerritsen. </author> <title> A Comparison of the CLIP IV, DAP and MPP processor-array Implementations. </title> <editor> In M. J. B. Duff, editor, </editor> <title> Computing Structures for Image Processing, chapter Two. </title> <publisher> Academic Press, </publisher> <year> 1983. </year>
Reference-contexts: 1024 bits 100ns GAPP 96 fi 128 4 Near neighbor 128 bits 100ns GRID - 4 X; Y busses 64 bits 100ns MGAP 128 fi 128 4 Near neighbor 16 bits 40ns 2 Comparison of some processor architectures Table 1 lists some salient features of recent massively parallel array architectures <ref> [Hor90, Ger83] </ref>. Compared to MPP, DAP and the GAPP, the MGAP has very little memory per processor. Of these, only the CLIP4 has comparable amount of memory.
Reference: [Hor90] <author> R. Michael Hord. </author> <title> Parallel Supercomputing in SIMD Architectures. </title> <publisher> CRC Press, </publisher> <year> 1990. </year>
Reference-contexts: 1024 bits 100ns GAPP 96 fi 128 4 Near neighbor 128 bits 100ns GRID - 4 X; Y busses 64 bits 100ns MGAP 128 fi 128 4 Near neighbor 16 bits 40ns 2 Comparison of some processor architectures Table 1 lists some salient features of recent massively parallel array architectures <ref> [Hor90, Ger83] </ref>. Compared to MPP, DAP and the GAPP, the MGAP has very little memory per processor. Of these, only the CLIP4 has comparable amount of memory. <p> Furthermore, memory access is sequential, i.e. three memory accesses are needed to fetch three one-bit operands from memory. The DAP provides each processor with at least 32Kbits of memory (and upto 1M bit at most) <ref> [Hor90] </ref>. In contrast with these designs the MGAP processor is simpler and smaller, constructed in CMOS technology, with approximately 700 transistors per processor [IO92] including 16 bits of local memory.
Reference: [IO91] <author> M. J. Irwin and R. M. Owens. </author> <title> A Two-Dimensional, Distributed Logic Processor. </title> <journal> IEEE Trans. on Comps., </journal> <volume> 40(10) </volume> <pages> 1094-1101, </pages> <month> Oct. </month> <year> 1991. </year>
Reference-contexts: As the window size grows, at some point it becomes practical to use the FFT algorithm to compute the convolution. Using the algorithm described in <ref> [IO91] </ref>, the 2D-DFT of 32fi32, 32 bit integers represented in base-4 using 4 fi 4 subarrays as word cells can be computed in 53; 832 cycles or 2:15ms.
Reference: [IO92] <author> M. J. Irwin and R. M. Owens. </author> <title> A Micro-Grained VLSI Signal Processor. </title> <booktitle> In ICASSP-92, </booktitle> <pages> pages 641-644, </pages> <month> Mar. </month> <year> 1992. </year>
Reference-contexts: The array can be used in a subsystem configuration. The array design makes use of VLSI technology and an innovative architecture to provide high density of integration resulting in a single board design for the array, its controller and other peripherals <ref> [IO92, OIK + 92] </ref>. Section 2 analyses different array processors and their designs and elucidates the basic ideas behind the design decisions of the MGAP. <p> The DAP provides each processor with at least 32Kbits of memory (and upto 1M bit at most) [Hor90]. In contrast with these designs the MGAP processor is simpler and smaller, constructed in CMOS technology, with approximately 700 transistors per processor <ref> [IO92] </ref> including 16 bits of local memory. The MGAPs local memory has one read port and one read/write port allowing it to perform two reads and a write operation on its local memory every cycle [IO92]. <p> processor is simpler and smaller, constructed in CMOS technology, with approximately 700 transistors per processor <ref> [IO92] </ref> including 16 bits of local memory. The MGAPs local memory has one read port and one read/write port allowing it to perform two reads and a write operation on its local memory every cycle [IO92]. The MPP, the CLIP4 and the DAP are optimized for numerical operations due to the provision of a full adder and in case of the MPP a shift register for assisting multiplication in addition to the adder in each processor. <p> The processor cell architecture of the MGAP eschews long wires and uses a very small local memory <ref> [IO92, OIK + 92] </ref>. The use of external memory slows down the array as evinced in the case of the MPP and uses up precious board space adversely affecting performance. <p> To offset this drawback, a redundant number system and an innovative arrangment of processors to form a word cell is used in the MGAP, resulting in a flexible and powerful system. The processors are organised into subarrays known as word cells <ref> [IO92, OIK + 92] </ref>, unlike the CLIP4 which organizes words in a linear fashion along rows or columns. The two dimensional subarray arrangment of the word cell is advantageous because shifting words in any direction takes the same time. <p> Conventional number representation systems limit the scope of parallelism afforded by spreading numeric operands across PEs. The use of a fully redundant number system allows more efficient use of the parallelism as described in <ref> [IO92] </ref>. <p> Architecturally, the size of local memory, the innovative use of subarrays to form word cells coupled with a redundant number representation and a programmable local interconnect scheme <ref> [IO92] </ref> provides the MGAP with exceptional computational capabilities.
Reference: [JC92] <author> B. K. Jang and R. T. Chin. </author> <title> Analysis of thinning algorithms using Mathematical Morphology. </title> <journal> IEEE Trans. Pattern Analysis and Machine Intell, </journal> <volume> 12(6) </volume> <pages> 541-557, </pages> <year> 1992. </year>
Reference-contexts: Operations like erosion, dilation, opening, and closing are useful for performing applications like convex hull and thinning <ref> [JC92] </ref> among others.
Reference: [Jr.86] <author> K. Preston Jr. </author> <title> Benchmark results: The abingdon cross. </title> <editor> In L. Uhr, K. Preston, S. Levialdi, and M. J. B. Duff, editors, </editor> <title> Evaluation of Multicomputers for Image Processing, chapter Three. </title> <publisher> Academic Press, </publisher> <year> 1986. </year>
Reference-contexts: The provision of a dual-port local memory enhances memory to processor traffic speeding up computation. Finally we compare the performance of the MGAP to that of the others fo the Abingdon Cross benchmark <ref> [Jr.86] </ref>.
Reference: [Lei92] <author> F. Thomsom Leighton. </author> <title> Introduction to Parallel Algorithms and Architectures. </title> <publisher> Morgan Kaufmann, </publisher> <year> 1992. </year>
Reference-contexts: Figure 3 shows successive stages of the recursive doubling procedure along rows. For reduction operations the communication complexity is reduced to O (log (N )) from O (N ). This network can be used to provide an efficient simulation of algorithms designed for meshes-of-trees <ref> [Lei92] </ref>, by simulating successive levels of the tree in succession. A mesh-of-trees can efficiently simulate any pyramid algorithm [Lei92]. <p> This network can be used to provide an efficient simulation of algorithms designed for meshes-of-trees <ref> [Lei92] </ref>, by simulating successive levels of the tree in succession. A mesh-of-trees can efficiently simulate any pyramid algorithm [Lei92]. In [Sto86] the author analyses pyramid and mesh architectures for image processing applications and concludes that though the pyramid is theoretically better for many applications it is not clear how well it will do in practice as it is much harder to program compared to meshes.
Reference: [OIK + 92] <author> R. M. Owens, M. J. Irwin, T. P. Kelliher, M. Vishwanath, and R. S. Bajwa. </author> <title> Implementing a Family of High Performance, Micrograined Architectures. In Application Specific Array Processors, </title> <month> Aug. </month> <year> 1992. </year>
Reference-contexts: The array can be used in a subsystem configuration. The array design makes use of VLSI technology and an innovative architecture to provide high density of integration resulting in a single board design for the array, its controller and other peripherals <ref> [IO92, OIK + 92] </ref>. Section 2 analyses different array processors and their designs and elucidates the basic ideas behind the design decisions of the MGAP. <p> The processor cell architecture of the MGAP eschews long wires and uses a very small local memory <ref> [IO92, OIK + 92] </ref>. The use of external memory slows down the array as evinced in the case of the MPP and uses up precious board space adversely affecting performance. <p> To offset this drawback, a redundant number system and an innovative arrangment of processors to form a word cell is used in the MGAP, resulting in a flexible and powerful system. The processors are organised into subarrays known as word cells <ref> [IO92, OIK + 92] </ref>, unlike the CLIP4 which organizes words in a linear fashion along rows or columns. The two dimensional subarray arrangment of the word cell is advantageous because shifting words in any direction takes the same time.
Reference: [R.C92] <author> R.C.Gonzalez and R.E.Woods. </author> <title> Digital Image Processing. </title> <publisher> Addison-Wesley Publishing Company, </publisher> <year> 1992. </year>
Reference-contexts: Filtering operations in the frequency domain can be converted into spatial filtering or spatial convolution using small window operators that minimize error in the least square sense <ref> [R.C92] </ref>. 2. Point, line and edge detection: The window operator shown for high pass filtering can also be used for detecting isolated points. Lines can be detected by using similar operators figure 2c. In practice, point and line operators are less frequently used as 6 compared to edge detecting operators. <p> Combined detection of all three features can be done by using window operators which form a basis set for these features <ref> [R.C92] </ref>. 3. Morphological Operations: Basic morphological operations like dilation, erosion, opening, and closing on binary images can be used to implement higher level tasks like boundary detection, shape identification, thinning, computing the frequency distribution of different objects in an image among others [R.C92]. <p> which form a basis set for these features <ref> [R.C92] </ref>. 3. Morphological Operations: Basic morphological operations like dilation, erosion, opening, and closing on binary images can be used to implement higher level tasks like boundary detection, shape identification, thinning, computing the frequency distribution of different objects in an image among others [R.C92]. Gray scale images can be easily converted to binary images after performing simple filtering operations followed by thresholding. Convolution can be performed using windows of various sizes. <p> The so called flat pixel-parallel partition algorithm [Tan83] is faster but not as efficient in an AT sense as it needs significantly more memory. Thinning of objects in images employing the Medial Axis Transformation is also performed using spatial operators <ref> [R.C92, ZS84] </ref>. The basic idea is that the thinned version of the object are those points which are at the same distance from two or more boundary points. The procedure ensures that end-points are not removed, connectivity is maintained and excessive erosion is prevented. <p> In general one can expect the average number of iterations to be equal to half of the width (in pixels) of the broadest section of the object. The analysis of images using mathematical morpholgy has gained considerable interest in recent years <ref> [R.C92] </ref>. Morphological operations like erosion and dilation on binary images can be performed very efficiently on the MGAP. <p> If the shape of the objects in an image are known then the relative frequency of occurrence of objects of different sizes can be computed by computing the differences between the original image and a dilated version using successively larger structuring elements <ref> [R.C92] </ref>. 9 3.3 Image Statistics-Histograms Histogramming is used to gather spatially independent statistics about the image. The most common one being to find the frequency distribution of gray levels in an image.
Reference: [Sto86] <author> Q. F. Stout. </author> <title> An algorithmic comparison of meshes and pyramids. </title> <editor> In L. Uhr, K. Preston, S. Levialdi, and M. J. B. Duff, editors, </editor> <title> Evaluation of Multicomputers for Image Processing, chapter Seven. </title> <publisher> Academic Press, </publisher> <year> 1986. </year>
Reference-contexts: This network can be used to provide an efficient simulation of algorithms designed for meshes-of-trees [Lei92], by simulating successive levels of the tree in succession. A mesh-of-trees can efficiently simulate any pyramid algorithm [Lei92]. In <ref> [Sto86] </ref> the author analyses pyramid and mesh architectures for image processing applications and concludes that though the pyramid is theoretically better for many applications it is not clear how well it will do in practice as it is much harder to program compared to meshes.
Reference: [Tan83] <author> S. L. Tanimoto. </author> <title> Algorithms for median filtering of images on a pyramid machine. </title> <editor> In M. J. B. Duff, editor, </editor> <title> Computing Structures for Image Processing, chapter Nine. </title> <publisher> Academic Press, </publisher> <year> 1983. </year> <month> 14 </month>
Reference-contexts: For an image with 256 gray levels eight bits are needed per pixel. The algorithm looks at these bits sequentially for all pixels in a window to determine the median <ref> [Tan83] </ref>. The algorithm is as follows, variables GL [i] and F are initialized in each pixel, where GL [i] represents the gray level and F = 0 indicates that the relationship of that cell to the median is known. Variable temp is the product of GL [i] and F. <p> This algorithm is not the fastest, as it does not utilise all of the inherent parallelism of the problem. The so called flat pixel-parallel partition algorithm <ref> [Tan83] </ref> is faster but not as efficient in an AT sense as it needs significantly more memory. Thinning of objects in images employing the Medial Axis Transformation is also performed using spatial operators [R.C92, ZS84].
Reference: [UPLD86] <author> L. Uhr, K. Preston, S. Levialdi, and M. J. B. Duff. </author> <title> Evaluation of multicomputers for image processing. </title> <editor> In L. Uhr, K. Preston, S. Levialdi, and M. J. B. Duff, editors, </editor> <title> Evaluation of Multicomputers for Image Processing. </title> <publisher> Academic Press, </publisher> <year> 1986. </year>
Reference-contexts: The actual performance of these architectures for specific applications will, of course, depend on how the architecture and the overall system is customised for the respective applications and we shall see this in more detail in the following sections. 3 Image Processing Operations Researchers at the Tanque Verde Workshop <ref> [UPLD86] </ref>, put together a set of image processing operations that form a good benchmarking set for any image processing architecture. They break up the operations into high level tasks and low level standard utility operations, the latter being used as subtasks for a variety of image processing applications.
Reference: [ZS84] <author> T. Y. Zhang and C. Y. Suen. </author> <title> A Fast Parallel Algorithm for Thinning Digital Patterns. </title> <journal> Comm. of the ACM, </journal> <volume> 27(3) </volume> <pages> 236-239, </pages> <year> 1984. </year> <month> 15 </month>
Reference-contexts: The so called flat pixel-parallel partition algorithm [Tan83] is faster but not as efficient in an AT sense as it needs significantly more memory. Thinning of objects in images employing the Medial Axis Transformation is also performed using spatial operators <ref> [R.C92, ZS84] </ref>. The basic idea is that the thinned version of the object are those points which are at the same distance from two or more boundary points. The procedure ensures that end-points are not removed, connectivity is maintained and excessive erosion is prevented.
References-found: 17

