URL: http://www-path.eecs.berkeley.edu/~akash/oms.ps
Refering-URL: http://www-path.eecs.berkeley.edu/~akash/akash.html
Root-URL: 
Email: fakash,gollug@eclair.eecs.berkeley.edu  
Title: Object Management Systems Tool Set consists of a semantic data and process model called the
Author: Akash Deshpande and Aleks Gollu 
Note: The oms  
Address: Berkeley, CA 94720  
Affiliation: Department of Electrical Engineering and Computer Sciences University of California,  
Abstract: We describe a new approach for developing large-scale object-oriented software systems, which we call Object Management Systems (oms). oms are model-based distributed applications used for managing complex physical environments. The management functions supported by oms are configuration, fault, performance, accounting, access and security, resource, and planning management. Use of the oms Tool Set significantly alters the software engineering life-cycle of large-scale projects, reducing their risk, budget, and schedule. The oms-based development process consists of three stages: domain customization, system architecture, and application programming. Each stage produces software specifications and implementations integrated around the oms Tool Set. The oms approach achieves integrated models, tools, and processes by focusing on a specific, but large, class of applications and by following a model-based approach to system development. We believe that the oms approach meets an important need of today's software industry by providing standardized application-level development tools for object-oriented databases and software systems. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Atkinson et. al. </author> <title> "The Object-Oriented Database System Manifesto." </title> <booktitle> Proc. of 1st Intn. Conf. on Deductive and Object-Oriented Databases. </booktitle> <address> Kyoto, Japan. </address> <month> Dec. </month> <year> 1989. </year>
Reference-contexts: However, the generality of the model itself has precluded the development of a standardized set of widely applicable tools, and the object databases have failed to converge to a standard query language such as sql <ref> [16, 1] </ref>. The emerging object databases are of two types: those tied closely to the relational model and those tied closely to programming languages. The former provide enhanced relational databases with an object interface, while the latter provide programming languages with persistent objects.
Reference: [2] <author> K. Beck. et. al. </author> <title> "Can Structured Methods Be Objectified?" Panel discussion in Proceedings of OOPSLA '91. </title>
Reference-contexts: Most often, the output of the first phase is a design document and the output of the second phase is the software system. A strictly waterfall approach <ref> [2] </ref> to software development treats these as sequential stages.
Reference: [3] <author> G. Booch. </author> <title> Object-oriented analysis and design with applications. </title> <address> Benjamin/Cummings. </address> <year> 1994. </year>
Reference-contexts: A strictly waterfall approach [2] to software development treats these as sequential stages. In some object-oriented methodologies the stages within a phase and even the phases themselves are repeated cyclically to obtain the final software system. 2 Refer to the object-oriented methodologies described by Booch <ref> [3] </ref>, Coad [5], Rumbaugh [13], and Shlaer and Mellor [15]. While the software industry has gained a fair amount of expertise in managing and delivering such projects, this phased approach has inherent risks which must be analyzed carefully.
Reference: [4] <author> J. Case, K. McCloghrie, </author> <title> and M.T. Rose. "Introduction to Version 2 of the Simple Network Management Protocol." </title> <booktitle> Internet Society. </booktitle> <month> July </month> <year> 1993. </year>
Reference-contexts: Network elements: equipment, functions, modules, multiplexors, buffers, switches, terminals, and users. Process layers (following the osi reference model): physical, data link, network, transport, session, presentation, and application; Data and processing distribution based on geographical regions. Sensors and actuators based on snmp and osi nm/forum protocols <ref> [12, 4] </ref>. SmartPower| Links: three phase, two phase, and single phase high 4 voltage, medium voltage, and low voltage transmission lines.
Reference: [5] <author> P. Coad and E. Yourdon. </author> <title> Object-Oriented Analysis. </title> <publisher> Yourdon Press, </publisher> <address> Englewood Cliffs, NJ. </address> <year> 1991. </year>
Reference-contexts: A strictly waterfall approach [2] to software development treats these as sequential stages. In some object-oriented methodologies the stages within a phase and even the phases themselves are repeated cyclically to obtain the final software system. 2 Refer to the object-oriented methodologies described by Booch [3], Coad <ref> [5] </ref>, Rumbaugh [13], and Shlaer and Mellor [15]. While the software industry has gained a fair amount of expertise in managing and delivering such projects, this phased approach has inherent risks which must be analyzed carefully. Ensuring coordination between the large number of project stages leads to management overhead.
Reference: [6] <author> Chris J. Date. </author> <title> An Introduction to Database Systems. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Massachusetts. </address> <year> 1985. </year>
Reference-contexts: Typically, relational databases provide an end-to-end development platform which includes the core database engine, modeling tools such as form and report generators, and application development utilities. Further, the relational model has a powerful Structured Query Language (sql) with a sound mathematical basis <ref> [6] </ref>. A standardized set of tools with a wide applicability is possible in this approach because of the structural simplicity of the relational model consisting solely of a collection of flat, fixed-format tables. The popularity of this approach in today's applications can be attributed to the existence of these tools.
Reference: [7] <author> F. Eskafi, Delnaz Khorramabadi, and P. Varaiya, </author> <title> "An Automatic Highway SystemSimulator." </title> <journal> Transpn. </journal> <volume> Res.-C Vol. 3, No. 1, </volume> <pages> pp. 1-17, </pages> <year> 1995. </year>
Reference-contexts: The SmartPath oms is obtained when the path ahs architecture described above is implemented in SmartAHS <ref> [9, 7] </ref>. SmartAHS provides generic objects for modeling highway configuration, vehicles, control and communication agents, and performance monitors. SmartAHS also provides a sched-uler that simulates time- and event-driven object behaviors. The scheduler is configurable and it can simulate objects at different time scales.
Reference: [8] <editor> J-C Fernandez, et al. </editor> <booktitle> "A Toolbox for the Verification of LOTOS Programs" in Proceedings of the 14th International Conference on Software Engineering ICSE'14 (Melbourne, </booktitle> <address> Australia). </address> <year> 1992. </year>
Reference-contexts: This is so by design: formal tools are available for synthesis, verification, simulation, and testing in the case of regular languages and some context free and context sensitive languages <ref> [8, 11] </ref>. The restricted 3 expressive power of a stand-alone oms enables us to exploit such tools. However, a combination of two or more interacting oms can be used to obtain the full expressive power of recursively enumerable languages.
Reference: [9] <author> A. Gollu, A. Deshpande, P. Hingorani, P. Varaiya. "SmartDb: </author> <title> An Object Oriented Simulation Framework for Highway Systems." </title> <booktitle> Fifth Annual Conference on AI, Simulation and Planning in High Autonomy Systems. </booktitle> <address> Gainesville, Florida. </address> <year> 1994. </year>
Reference-contexts: The SmartPath oms is obtained when the path ahs architecture described above is implemented in SmartAHS <ref> [9, 7] </ref>. SmartAHS provides generic objects for modeling highway configuration, vehicles, control and communication agents, and performance monitors. SmartAHS also provides a sched-uler that simulates time- and event-driven object behaviors. The scheduler is configurable and it can simulate objects at different time scales.
Reference: [10] <author> A. Gollu. </author> <title> "Object Management Systems." </title> <type> Ph.D. Thesis, </type> <institution> University of California at Berkeley. </institution> <year> 1995. </year>
Reference-contexts: Such a combination can be used to realize distributed and hierarchical system architectures. For example, we use a hierarchy of three oms to implement time-and event-driven scheduling (see <ref> [10] </ref>). In addition to providing full expressive power, distributed and hierarchical systems can be used to enhance modularity and control complexity of the implemented systems. 2.2 SmartDB SmartDB is a software implementation of the oms Object Model.
Reference: [11] <author> R. P. Kurshan. </author> <title> Formal Verification of Coordinating Processes: The Automata-Theoretic Approach. </title> <publisher> Princeton University Press. </publisher> <year> 1994. </year>
Reference-contexts: This is so by design: formal tools are available for synthesis, verification, simulation, and testing in the case of regular languages and some context free and context sensitive languages <ref> [8, 11] </ref>. The restricted 3 expressive power of a stand-alone oms enables us to exploit such tools. However, a combination of two or more interacting oms can be used to obtain the full expressive power of recursively enumerable languages.
Reference: [12] <author> OSI/Network Management Forum. </author> <title> "OSI Basic Reference Model." </title> <type> ISO 7498-1. </type> <year> 1992. </year>
Reference-contexts: com plex physical environments: * The data and process models used for describing the physical environment; * The software tools used for implementing these models; and * The software engineering processes followed to realize the system. 1 These functions are based on the osi nm/Forum functional categories for network management <ref> [12] </ref>. 1 The data and process models capture the domain expertise re-quired for describing and managing the physical environment. Typical modeling approaches use relational databases for data modeling and programming languages for process modeling. In complex application domains, the object-oriented approach is gaining popularity due to its superior modeling power. <p> Network elements: equipment, functions, modules, multiplexors, buffers, switches, terminals, and users. Process layers (following the osi reference model): physical, data link, network, transport, session, presentation, and application; Data and processing distribution based on geographical regions. Sensors and actuators based on snmp and osi nm/forum protocols <ref> [12, 4] </ref>. SmartPower| Links: three phase, two phase, and single phase high 4 voltage, medium voltage, and low voltage transmission lines.
Reference: [13] <author> James Rumbaugh et. al. </author> <title> Object Oriented Modeling and Design. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, N.J. </address> <year> 1991. </year>
Reference-contexts: A strictly waterfall approach [2] to software development treats these as sequential stages. In some object-oriented methodologies the stages within a phase and even the phases themselves are repeated cyclically to obtain the final software system. 2 Refer to the object-oriented methodologies described by Booch [3], Coad [5], Rumbaugh <ref> [13] </ref>, and Shlaer and Mellor [15]. While the software industry has gained a fair amount of expertise in managing and delivering such projects, this phased approach has inherent risks which must be analyzed carefully. Ensuring coordination between the large number of project stages leads to management overhead.
Reference: [14] <author> Steve Shladover et al. </author> <title> "Automated Vehicle Control Developments in the path program." </title> <journal> IEEE Trans. Vehicular Tech. </journal> <volume> Vol. 40. </volume> <pages> pp. 114-130. </pages> <month> Feb. </month> <year> 1991. </year>
Reference-contexts: Nodes: generators, transformers (xx, xy, yx, yy), loads, serial capacitors, parallel capacitors, and switches (1-2, 2-1). 3 The AHS Application The concepts and tools for oms have emerged from research on the Automated Highway Systems project at the University of California at Berkeley <ref> [17, 14] </ref>. The ahs project at UC-Berkeley is part of a comprehensive program initiated by the U.S. government under the Intermodal Surface Transportation Efficiency Act of 1991 to improve safety and reduce congestion in the surface transportation system.
Reference: [15] <author> Sally Shlaer and Stephen Mellor. </author> <title> Object-Oriented Systems Analysis: Modeling the World in Data. </title> <publisher> Yourdon Press, </publisher> <address> Englewood Cliffs, N.J. </address> <year> 1988. </year>
Reference-contexts: In some object-oriented methodologies the stages within a phase and even the phases themselves are repeated cyclically to obtain the final software system. 2 Refer to the object-oriented methodologies described by Booch [3], Coad [5], Rumbaugh [13], and Shlaer and Mellor <ref> [15] </ref>. While the software industry has gained a fair amount of expertise in managing and delivering such projects, this phased approach has inherent risks which must be analyzed carefully. Ensuring coordination between the large number of project stages leads to management overhead.
Reference: [16] <author> M. Stonebraker et al. </author> <title> "Third Generation Data Base System Manifesto." </title> <booktitle> Proc. of IFIP DS-4 Workshop on Object-Oriented Databases. </booktitle> <address> Windermere, England, </address> <month> July </month> <year> 1990. </year>
Reference-contexts: However, the generality of the model itself has precluded the development of a standardized set of widely applicable tools, and the object databases have failed to converge to a standard query language such as sql <ref> [16, 1] </ref>. The emerging object databases are of two types: those tied closely to the relational model and those tied closely to programming languages. The former provide enhanced relational databases with an object interface, while the latter provide programming languages with persistent objects.
Reference: [17] <author> P. Varaiya. </author> <title> "Smart Cars on Smart Roads: Problems of Control." </title> <journal> IEEE Trans. Automatic Control. </journal> <volume> Vol. 38, No 2. </volume> <month> Feb. </month> <year> 1993. </year> <month> 6 </month>
Reference-contexts: Nodes: generators, transformers (xx, xy, yx, yy), loads, serial capacitors, parallel capacitors, and switches (1-2, 2-1). 3 The AHS Application The concepts and tools for oms have emerged from research on the Automated Highway Systems project at the University of California at Berkeley <ref> [17, 14] </ref>. The ahs project at UC-Berkeley is part of a comprehensive program initiated by the U.S. government under the Intermodal Surface Transportation Efficiency Act of 1991 to improve safety and reduce congestion in the surface transportation system.
References-found: 17

