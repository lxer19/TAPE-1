URL: file://ftp.cis.ohio-state.edu/pub/tech-report/1995/TR29.ps.gz
Refering-URL: ftp://ftp.cis.ohio-state.edu/pub/tech-report/TRList.html
Root-URL: 
Title: Constructing Piecewise Linear Homeomorphisms of Simple Polygons  
Author: Himanshu Gupta Rephael Wenger 
Date: December 6, 1995  
Abstract: Let P and Q be simple polygons with vertex sets fp 1 ; : : : ; p n g and fq 1 ; : : :, q n g, respectively. We present an algorithm to construct a piecewise linear homeomorphism between P and Q mapping each vertex p i 2 P to q i 2 Q by constructing isomorphic triangulations of P and Q. These isomorphic triangulations consist of O(M log n + n log 2 n) triangles where M is the size of the optimal (minimum size) solution. The algorithm runs in O(M log n + n log 2 n) time. We also give an O(n + L + k log k) algorithm for constructing k pairwise disjoint interior paths between k pairs of vertices in a simple polygon on n vertices using O(L + k log k) links. The number L is the sum of the interior link distances between the k pairs of vertices.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Aronov, B., Seidel, R., and Souvaine, D. </author> <title> On compatible triangulations of simple polygons. </title> <journal> Comput. Geom. Theory Appl. </journal> <volume> 3, 1 (1993), </volume> <pages> 27-35. </pages>
Reference-contexts: These algorithms work well for their particular applications but they are not guaranteed to succeed on all inputs and their running times are not bounded as a function of input size. This and related papers <ref> [1, 5, 9] </ref> apply computational geometry to construct and analyze correct, complete algorithms for the problem of constructing a particular type of homeomorphism, a piecewise linear homeomorphism. A piecewise linear homeomorphism induces a triangulation T Q of Q which is isomorphic to the triangulation T P of P . <p> Thus our original problem of constructing piecewise linear homeomorphisms reduces to the problem of constructing minimum size isomorphic triangulations of P and Q where p i 2 P is identified with q i 2 Q. Aronov, Seidel and Souvaine in <ref> [1] </ref> show that any two simple polygons P and Q on n vertices have isomorphic triangulations mapping p i to q i of size O (n 2 ). Their construction translates into an O (n 2 ) algorithm for finding such a triangulation. <p> The algorithms in <ref> [1] </ref> and [5] may add (n 2 ) interior points, when only O (n) are required. Aronov et al. ask whether there exists a polynomial time algorithm for finding the minimum size isomorphic triangulation between two simple polygons. <p> Aronov, Seidel and Souvaine in <ref> [1] </ref> observe that if one of the polygons, say Q, is convex, then any triangulation of P induces a corresponding triangulation of 11 q 1 p 1 q 5 q 7 q 9 p 3 p 5 p 7 p 9 p 10 Q.
Reference: [2] <author> Chazelle, B. </author> <title> Triangulating a simple polygon in linear time. </title> <journal> Discrete Comput. Geom. </journal> <volume> 6 (1991), </volume> <pages> 485-524. </pages>
Reference-contexts: The initial preprocessing is the triangulation of P and the calculation of m v for each vertex of P . These two steps are done only once in the entire algorithm, not once for each recursive call. Using Chazelle's algorithm from <ref> [2] </ref>, triangulating P takes linear time. Calculation of m v for each vertex of P also takes linear time. 8 Note there is no need to explicitly construct the sets R (c) or P (c) in the recursive calls. <p> The total number of new edges added is 4n 3. Note that this procedure does not add any new vertices to the boundary of P and Q. Triangulating P; P 0 and Q takes only linear time <ref> [2] </ref>. Perturbing the vertices and connecting them also takes linear time.
Reference: [3] <author> Guibas, L. J., Hershberger, J., Leven, D., Sharir, M., and Tar-jan, R. E. </author> <title> Linear-time algorithms for visibility and shortest path problems inside triangulated simple polygons. </title> <booktitle> Algorithmica 2 (1987), </booktitle> <pages> 209-233. </pages>
Reference-contexts: Guibas et al. in <ref> [3] </ref> give a linear time algorithm for constructing Vis (e). A point q may be visible from a point p or edge e, yet every open line segment connecting p and q or e and q may intersect the boundary of P . <p> Also see Figure 1 where s 0 is in Vis (e) but is not even on the boundary of ^ Vis (e).) The algorithm in <ref> [3] </ref> can be easily modified to construct ^ Vis (e) in linear time. Let T be a triangulation of polygon P using no vertices other than those of P . Let v and e be a vertex and an edge of P , respectively. <p> To construct C we need to construct polygons ^ Vis (c) in P (c) for each c 2 C. Guibas et al. give a linear time algorithm for constructing the visibility polygon from a line segment <ref> [3] </ref>. This would result in an O (n 2 ) algorithm for constructing C. However, Suri shows in [10] that by only processing triangles which intersect the visibility polygon and their neighbors, a polygon can be broken into weakly visible polygons in O (n) time.
Reference: [4] <author> Kent, J. R., Carlson, W. E., and Parent, R. E. </author> <title> Shape transformation for polyhedral objects. </title> <booktitle> In Computer Graphics Proceedings (1992), </booktitle> <pages> pp. 47-64. </pages>
Reference-contexts: Work done while at The Ohio State University, Columbus, Ohio 43210. y Ohio State University, Columbus OH 43210 (wenger@cis.ohio-state.edu). Supported in part by NSA grant MDA904-93-H-3026. 1 dynamics [11], and morphing in computer graphics and animation <ref> [4, 8] </ref>. Each of these areas has devised its own set of algorithms and heuristics for constructing homeomorphisms. These algorithms work well for their particular applications but they are not guaranteed to succeed on all inputs and their running times are not bounded as a function of input size.
Reference: [5] <author> Kranakis, E., and Urrutia, J. </author> <title> Isomorphic triangulations with small number of Steiner points. </title> <booktitle> In Proc. 7th Canad. Conf. </booktitle> <institution> Comput. Geom. </institution> <year> (1995), </year> <pages> pp. 291-296. </pages>
Reference-contexts: These algorithms work well for their particular applications but they are not guaranteed to succeed on all inputs and their running times are not bounded as a function of input size. This and related papers <ref> [1, 5, 9] </ref> apply computational geometry to construct and analyze correct, complete algorithms for the problem of constructing a particular type of homeomorphism, a piecewise linear homeomorphism. A piecewise linear homeomorphism induces a triangulation T Q of Q which is isomorphic to the triangulation T P of P . <p> Their construction translates into an O (n 2 ) algorithm for finding such a triangulation. This result is asymptotically worst-case optimal in the sense that there exist pairs of polygons which require at least quadratic number of additional vertices to produce isomorphic triangulations. Kranakis and Urrutia in <ref> [5] </ref> improved on the result by Aronov et al. with an algorithm which constructs isomorphic triangulations of size O (n + r 2 ) in time O (n + r 2 ) where r is the number of reflex vertices in P and Q. The algorithms in [1] and [5] may <p> in <ref> [5] </ref> improved on the result by Aronov et al. with an algorithm which constructs isomorphic triangulations of size O (n + r 2 ) in time O (n + r 2 ) where r is the number of reflex vertices in P and Q. The algorithms in [1] and [5] may add (n 2 ) interior points, when only O (n) are required. Aronov et al. ask whether there exists a polynomial time algorithm for finding the minimum size isomorphic triangulation between two simple polygons.
Reference: [6] <author> Pach, J., Shahrokhi, F., and Szegedy, M. </author> <title> Applications of the crossing number. </title> <booktitle> In Proc. 10th Annu. ACM Sympos. </booktitle> <institution> Comput. Geom. </institution> <year> (1994), </year> <pages> pp. 198-202. </pages>
Reference-contexts: Their homeomorphism uses only O (n 2 ) triangles. Pach, Shahrokhi and Szegedy prove that (n 2 ) triangles are sometimes required <ref> [6] </ref>. 2 Constructing Pairwise Disjoint Link Paths Let P be a simple polygon on a set of n vertices and let s and s 0 be two points in P .
Reference: [7] <author> Saalfeld, A. </author> <title> Joint triangulations and triangulation maps. </title> <booktitle> In Proc. 3rd Annu. ACM Sympos. </booktitle> <institution> Comput. Geom. </institution> <year> (1987), </year> <pages> pp. 195-204. </pages>
Reference-contexts: Moreover, we want to use as few "pieces" as possible in constructing our homeomorphism. Problems of constructing homeomorphisms and its variants arise in the process of combining cartographic maps <ref> [7] </ref>, mesh generation in computational fluid fl Stanford University, Stanford CA 94305 (hgupta@cs.stanford.edu). Work done while at The Ohio State University, Columbus, Ohio 43210. y Ohio State University, Columbus OH 43210 (wenger@cis.ohio-state.edu). <p> L is clearly a lower bound on the size of the optimal solution. The algorithm runs in O (n + L + k log k) time. In related research, Saalfeld in <ref> [7] </ref> considers the problem of constructing a piecewise linear homeomorphism between the convex hulls of two point sets P = fp 1 ; p 2 ; : : : ; p n g and Q = fq 1 ; q 2 ; : : : ; q n g where p
Reference: [8] <author> Shapira, M., and Rappoport, A. </author> <title> Shape blending using the star-skeleton representation. </title> <journal> IEEE Comput. Graph. Appl. </journal> <year> (1995), </year> <pages> 44-50. </pages>
Reference-contexts: Work done while at The Ohio State University, Columbus, Ohio 43210. y Ohio State University, Columbus OH 43210 (wenger@cis.ohio-state.edu). Supported in part by NSA grant MDA904-93-H-3026. 1 dynamics [11], and morphing in computer graphics and animation <ref> [4, 8] </ref>. Each of these areas has devised its own set of algorithms and heuristics for constructing homeomorphisms. These algorithms work well for their particular applications but they are not guaranteed to succeed on all inputs and their running times are not bounded as a function of input size.
Reference: [9] <author> Souvaine, D., and Wenger, R. </author> <title> Constructing piecewise linear home-omorphisms. </title> <type> Technical Report 94-52, </type> <institution> DIMACS, </institution> <address> New Brunswick, New Jersey, </address> <year> 1994. </year>
Reference-contexts: These algorithms work well for their particular applications but they are not guaranteed to succeed on all inputs and their running times are not bounded as a function of input size. This and related papers <ref> [1, 5, 9] </ref> apply computational geometry to construct and analyze correct, complete algorithms for the problem of constructing a particular type of homeomorphism, a piecewise linear homeomorphism. A piecewise linear homeomorphism induces a triangulation T Q of Q which is isomorphic to the triangulation T P of P . <p> He gives an algorithm for constructing such a homeomorphism but possibly using an exponential number of triangles. Souvaine and Wenger in <ref> [9] </ref> give an O (n 2 ) algorithm for constructing a homeomorphism between two rectangles with interior point sets P = fp 1 ; p 2 ; : : : ; p n g and Q = fq 1 ; q 2 ; : : : ; q n g where
Reference: [10] <author> Suri, S. </author> <title> A linear time algorithm for minimum link paths inside a simple polygon. Comput. Vision Graph. Image Process. </title> <booktitle> 35 (1986), </booktitle> <pages> 99-110. </pages>
Reference-contexts: There are an (uncountably) infinite number of different minimum link interior paths between s and s 0 . Suri in <ref> [10] </ref> gives a linear time algorithm for constructing a minimum link path between two points in a simple polygon which can be easily modified to construct a minimum link interior path. <p> This results in an O (n 2 ) bound on the running time of the algorithm. However, using a technique introduced by Suri in <ref> [10] </ref>, we can construct in time proportional to the size of T after some initial preprocessing. Let t be the set of triangles separating e from r fl . <p> The algorithms described in Lemma 2.2, Lemma 2.1 and Corollary 2.1 use coordinates whose precision is a fixed constant times the precision of the input. However, Suri's paper <ref> [10] </ref> on constructing minimum link paths assumes the less restrictive real RAM model of computation. The previous results can be improved under the real RAM model by constructing directly from ^ Vis (e) instead of from the triangles of T P intersected by ^ Vis (e). <p> Guibas et al. give a linear time algorithm for constructing the visibility polygon from a line segment [3]. This would result in an O (n 2 ) algorithm for constructing C. However, Suri shows in <ref> [10] </ref> that by only processing triangles which intersect the visibility polygon and their neighbors, a polygon can be broken into weakly visible polygons in O (n) time. A similar analysis and technique will construct C in linear time. <p> One open question is whether optimal solutions to these problems can be found in polynomial time. A less ambitious question is can solutions be found which are bounded by a constant instead of log n or log 2 n times the optimal? Suri's paper in <ref> [10] </ref> on finding the minimum link distance between a pair of vertices assumes a real RAM model of computation.
Reference: [11] <author> Thompson, J., Warsi, Z., and Mastin, C. </author> <title> Numerical Grid Generation: Foundations and Applications. </title> <publisher> Elsevier Science, </publisher> <year> 1991. </year> <month> 16 </month>
Reference-contexts: Work done while at The Ohio State University, Columbus, Ohio 43210. y Ohio State University, Columbus OH 43210 (wenger@cis.ohio-state.edu). Supported in part by NSA grant MDA904-93-H-3026. 1 dynamics <ref> [11] </ref>, and morphing in computer graphics and animation [4, 8]. Each of these areas has devised its own set of algorithms and heuristics for constructing homeomorphisms.
References-found: 11

