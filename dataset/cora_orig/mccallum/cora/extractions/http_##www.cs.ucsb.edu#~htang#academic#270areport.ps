URL: http://www.cs.ucsb.edu/~htang/academic/270areport.ps
Refering-URL: http://www.cs.ucsb.edu/~htang/academic/courses.html
Root-URL: http://www.cs.ucsb.edu
Title: The Impact of Hardware Architecture on Operating System Performance a brief summary of the difficulties
Author: Hong Tang 
Note: This report provides  
Address: Santa Barbara  
Affiliation: Department of Computer Science University of California at  
Abstract: This report is based on two old papers [1] and [2]. However, some conclusions of these two papers are proved again and again in recent research and are still guiding the operating system innovation. Beyond that, the methodology used in these papers, like how to choose proper micro benchmarks, how to interpret experiment results and how to identify performance bottlenecks, etc, still influences people in research on operating system performance evaluation/estimation. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> John Ousterhout, </author> <title> Why aren't operating systems getting faster as fast as hardware?, </title> <year> 1990 </year>
Reference-contexts: Context switching Purpose: test context switch cost. Approach: The two papers used different ways to measure context switch cost. In <ref> [1] </ref>, the benchmark operates by forking a child process and then passing one byte back and forth between parent and child using pipes. The context switch cost can be calculated by subtracting the pipe write/read cost. In [2], it is done by writing special system call. <p> Particularly in <ref> [1] </ref>, the author concluded that at least two reasons restrict the performance gain of operating system from underlying hardware: * On the hardware side, memory bandwidth has been allowed to slip to processor speed.
Reference: [2] <author> T. E. Anderson, H. M. Levy, B. N. Bershad and E. D. Lazowska, </author> <title> The interaction of Architecture and Operating System Design, </title> <year> 1990 </year> <month> 3 </month>
Reference-contexts: In [1], the benchmark operates by forking a child process and then passing one byte back and forth between parent and child using pipes. The context switch cost can be calculated by subtracting the pipe write/read cost. In <ref> [2] </ref>, it is done by writing special system call. <p> machines are likely to be limited in performance by overall memory bandwidth. * On the software side, if the coupling of file system and disk performance cannot be eliminated, a large class of file-intensive programs will receive little benefit from faster hardware. 3 High-level Operating System Functions The authors of <ref> [2] </ref> looked into the problem at a different granularity and tried to analysis the importance of the above primitives on the performance of the major operating system components. 1. Interprocess Communication Interprocess communication is central to modern operating system structure and performance.
References-found: 2

