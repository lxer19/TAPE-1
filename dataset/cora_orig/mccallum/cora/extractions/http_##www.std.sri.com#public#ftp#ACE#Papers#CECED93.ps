URL: http://www.std.sri.com/public/ftp/ACE/Papers/CECED93.ps
Refering-URL: http://www.std.sri.com/public/ftp/ACE/Papers/
Root-URL: 
Title: CECED: A System For Informal Multimedia Collaboration  
Author: Earl Craighill, Ruth Lang, Martin Fong, Keith Skinner 
Affiliation: SRI International  
Abstract: Engineering Design (CECED) 1 is presented, which provides mechanisms that facilitate communicating effectively using multiple media and capturing the history of the informal phase of the specification and design process. The networksupported collaboration technology being developed in CECED is designed to support collaboration among multiple users of existing tools with minimal intrusion into existing software or user interaction styles. It integrates voice with other media exchanged in a multimedia conference by multiplexing the media in the same multicast connection for transport across a network or internet. It separates private workspaces from shared ones. It uses a distributed activity-sensing floor control algorithm to guarantee a single stream of input to unmodified single-user applications. It extends the shared screen paradigm prevalent in multimedia conferencing to shared and coordinated control of client applications and server resources. Finally, it supports the replication of applications and databases at each site, quick feedback to all conferees, and the ability to conference over low bandwidth communication networks. 
Abstract-found: 1
Intro-found: 1
Reference: [APPL-91] <author> Apple Computer, Inc., </author> <title> "Inside Macintosh, Volume VI," </title> <publisher> Addison-Wesley Publishing Company, Inc., </publisher> <address> Reading, MA, </address> <month> June </month> <year> 1991. </year>
Reference-contexts: Examples of semantic information are tool invocations, high-level input commands provided to tools, and PTAA service and information directives. Our model for semantic information is based on the Apple Events Object Model <ref> [APPL-91] </ref>, in which transactions are represented by events that contain three components: an action to perform, a specified object to act upon, and qualifying information.
Reference: [CERC-92] <institution> Concurrent Engineering Research Center, Software Design Description for the MONET of DICE, </institution> <type> Technical Report for DARPA Contract MDA972-92-C-0047, </type> <institution> Concurrent Engineering Research Center, </institution> <address> Morgantown, WV, </address> <month> March </month> <year> 1992. </year>
Reference-contexts: In a centralized scheme, a central controller (e.g., conference chair) fields all floor requests and passes the floor (chalk) to the conferees accordingly. Chalk-passing mechanisms have been used in systems such as MERMAID [WATA-90] and MONET <ref> [CERC-92] </ref>. However, such schemes require additional user actions to explicitly request the floor, and also represent time and processor costs to maintain and broadcast complex distributed floor state and control information.
Reference: [CRAI-92] <author> E.J. Craighill, R. Lang, and J.J. Garcia-Luna, </author> " <title> E n v i r on m e n t s t o E n a b l e I n f o r m a l Collaborative Design Processes," </title> <booktitle> Proceedings of the CE & CALS Conference, </booktitle> <address> Washington, D.C., </address> <month> June, </month> <year> 1992. </year>
Reference-contexts: Tool Information Store Subsystem Private Tool X W indow Manager Session Manager X Server End-to-End Communication Services Collaboration Aware Tools Collaboration Management Agents FIGURE 2. MOSAIC/CECED ARCHITECTURE 3. CECED DESIGN The design of CECED follows from the Multimedia Open System for Augmented Interactive Collaboration (MOSAIC) architecture [GARC-87], <ref> [CRAI-92] </ref>. Several aspects of MOSAIC have evolved from the earlier description to better suit the demands of collaboration in situations such as concurrent engineering.
Reference: [CROW-90] <author> T. Crowley, P. Milazzo, E. Baker, H. Forsdick, and R. Tomlinson, MMConf: </author> <title> An Infrastructure for Building Shared Multimedia Applications, </title> <booktitle> CSCW90 Conference Proceedings, </booktitle> <address> Los Angeles, CA, </address> <month> October </month> <year> 1990. </year>
Reference-contexts: Finally, it supports the replication of applications and databases at each site, quick feedback to all conferees, and the ability to conference over low bandwidth communication networks. As such, CECED is unique and distinguished from all previous popular approaches to the provision of network-supported collaborative environments <ref> [CROW-90, PELA-90, GARF-91, SRIN-92] </ref>. Section 2 summarizes the system requirements and highlights the objectives of CECED which meet these requirements. Section 3 presents CECED's design and depicts the operation of CECED in terms of the functional modules. Section 4 states our conclusions. 2.
Reference: [FORG-80] <author> J. W. Forgie, </author> <title> Voice Conferencing in Packet Networks, </title> <booktitle> Conf. Rec. Int. Conf. Commun., </booktitle> <month> June </month> <year> 1980, </year> <pages> pp. </pages> <month> 21.3.1-21.3.4. </month>
Reference-contexts: It facilitates negotiation among participants regarding the configuration of the shared environment, and passes configuration and state information to CMAs and CATs that, in turn, provide multimedia services and support user interaction. 3 E.g., early experiments with packet audio over the ARPA wideband satellite network <ref> [FORG-80] </ref> showed that a forced one-at-a-time policy for audio encouraged speakers to keep the floor for extended periods of time to ensure that their input was heard. Session Manager Connection CMA Generic CAT Generic CMA UI Coordination Connection Coordination FIGURE 4.
Reference: [GARC-87] <author> J.J. Garcia-Luna-Aceves, E.J. Craighill, and R. Lang, </author> <title> MOSAICA Model for Computer Supported Collaborative Work, </title> <booktitle> Proceedings of IEEE MILCOM 87, </booktitle> <address> Washington, D.C., </address> <month> August </month> <year> 1987. </year>
Reference-contexts: Tool Information Store Subsystem Private Tool X W indow Manager Session Manager X Server End-to-End Communication Services Collaboration Aware Tools Collaboration Management Agents FIGURE 2. MOSAIC/CECED ARCHITECTURE 3. CECED DESIGN The design of CECED follows from the Multimedia Open System for Augmented Interactive Collaboration (MOSAIC) architecture <ref> [GARC-87] </ref>, [CRAI-92]. Several aspects of MOSAIC have evolved from the earlier description to better suit the demands of collaboration in situations such as concurrent engineering.
Reference: [GARC-89] <author> Garcia-Luna-Aceves, J. J., Craighill, E. J., and R. </author> <title> Lang,Floor Management and Control for Mul time dia Com puter C onfer encin g Proceedings of MULTIMEDIA 89 , 2nd IEE C o m s o c I n t e r n a t i o n a l M u l t i m e d i a Communications Workshop, </title> <address> Ottawa, Ontario, Canada, </address> <month> April </month> <year> 1989. </year>
Reference-contexts: By applying a floor control policy, so that input to a single-user unmodified application is generated by only one user at a time, the Shared Tool-Events CMA ensures that only unambiguous and intended results occur. Floor control policy may be enforced in either a centralized or distributed manner <ref> [GARC-89] </ref>. In a centralized scheme, a central controller (e.g., conference chair) fields all floor requests and passes the floor (chalk) to the conferees accordingly. Chalk-passing mechanisms have been used in systems such as MERMAID [WATA-90] and MONET [CERC-92]. <p> Human conversation is by nature dynamic and at time overlaps (e.g., interrupting to make a point). Enforcing a single-user-at-a-time floor control policy by the Audio CAT would inhibit the flow of conversation and introduce an unnatural dialog style. 3 However, floor control with limited feedback <ref> [GARC-89] </ref> can be used when audio bandwidth is limited. 3.5 Connection CMA The Connection CMA orchestrates and manages the establishment of multimedia multiparty connections among CMAs or CATs on other workstations.
Reference: [GARF-91] <author> D. Garfinkel and R. Branson, </author> <title> A Comparison of Application Sharing Architectures in the X Environment, </title> <booktitle> Xhibition 91 Conference Proceedings, </booktitle> <address> San Jose, CA, </address> <month> June, </month> <year> 1991. </year>
Reference-contexts: Finally, it supports the replication of applications and databases at each site, quick feedback to all conferees, and the ability to conference over low bandwidth communication networks. As such, CECED is unique and distinguished from all previous popular approaches to the provision of network-supported collaborative environments <ref> [CROW-90, PELA-90, GARF-91, SRIN-92] </ref>. Section 2 summarizes the system requirements and highlights the objectives of CECED which meet these requirements. Section 3 presents CECED's design and depicts the operation of CECED in terms of the functional modules. Section 4 states our conclusions. 2. <p> In choosing a design model for the Shared Tool-Events CMA, we evaluated four approaches for sharing in the X Window environment. These approaches include sharing between Xlibs, window managers, pseudo-servers, and X servers and are discussed in <ref> [GARF-91] </ref>. However, of these possibilities, we eliminated centralized pseudo-servers because they represent processing and communication bottlenecks, and their use requires that all applications for all participantsnot only those on a single workstationmust be configured to use the centralized server to be included in a conference.
Reference: [LANG-92] <author> R. Lang and E.J. Craighill, </author> <title> Software R eq ui re me nt s S pe ci fi ca ti on fo r t he Collaborative Environment for Concurrent Engineering Design of DICE, </title> <type> Technical Report for DARPA Contract MDA972-92-C-0023, </type> <institution> SRI International, </institution> <address> Menlo Park, CA, </address> <month> June </month> <year> 1992. </year>
Reference-contexts: Thus, because CECED requires a floor control mechanism that is responsive and whose use is transparent to the user <ref> [LANG-92] </ref>, the Shared Tool-Events CMA employs a distributed floor-control mechanism based on a distributed, dialog-activated, collisionsensing algorithm called COMET.
Reference: [LANT-87] <author> K.A. Lantz, P.P. Tanner, C. Binding, K. Huang, A. Dwelly, </author> <title> Reference Models, Window Systems, </title> <journal> and Concurrency," Computer Graphics, </journal> <volume> Vol. 21, No. 2, </volume> <month> April </month> <year> 1987, </year> <pages> pp. 87-97. </pages>
Reference-contexts: The CECED design allows the user to scale an actual configuration to the available resources (network bandwidth, shared file systems) by supporting any mixture of replicated and centralized applications <ref> [LANT-87] </ref>. CECED does this by supporting Shared Input from multiple users through the Shared Tool Event CMAs. Shared Input is used with both replicated and centralized applications. Shared Output supports the distribution of output presentations to multiple X servers from a single client.
Reference: [PELA-90] <author> B. Pelakh, "Cooperate/CSCW," </author> <title> DICE Architecture Team User Manual, </title> <institution> Section 11.1, Concurrent Engineering Research Center, West Virginia University, Morgantown, West Virginia, </institution> <month> July </month> <year> 1990. </year>
Reference-contexts: Finally, it supports the replication of applications and databases at each site, quick feedback to all conferees, and the ability to conference over low bandwidth communication networks. As such, CECED is unique and distinguished from all previous popular approaches to the provision of network-supported collaborative environments <ref> [CROW-90, PELA-90, GARF-91, SRIN-92] </ref>. Section 2 summarizes the system requirements and highlights the objectives of CECED which meet these requirements. Section 3 presents CECED's design and depicts the operation of CECED in terms of the functional modules. Section 4 states our conclusions. 2.
Reference: [SCHO-92a] <author> E. Schooler, </author> <title> The Connection Control Protocol: Specification, </title> <institution> USC/Information Sciences Institute, Marina del Rey, </institution> <address> CA, </address> <month> January </month> <year> 1992. </year>
Reference-contexts: Session Manager Connection CMA Generic CAT Generic CMA UI Coordination Connection Coordination FIGURE 4. CAT/CMA USER INTERACTION SUPPORT The design for the Connection CMA is based on the connection management architecture developed by Schooler <ref> [SCHO-92a] </ref>, [SCHO-92b]. In Schoolers connection management architecture, the Connection Manager provides services to media agents, which are collaboration-aware processes providing an interface to specific media devices [SCHO-92b]. In applying the connection management concepts to CECED, media agents may be either CATs or CMAs.
Reference: [SCHO-92b] <author> E. Schooler, </author> <title> The Connection Control Protocol: Architecture Overview, </title> <institution> USC/Information Sciences Institute, Marina del Rey, </institution> <address> CA, </address> <month> January </month> <year> 1992. </year>
Reference-contexts: Session Manager Connection CMA Generic CAT Generic CMA UI Coordination Connection Coordination FIGURE 4. CAT/CMA USER INTERACTION SUPPORT The design for the Connection CMA is based on the connection management architecture developed by Schooler [SCHO-92a], <ref> [SCHO-92b] </ref>. In Schoolers connection management architecture, the Connection Manager provides services to media agents, which are collaboration-aware processes providing an interface to specific media devices [SCHO-92b]. In applying the connection management concepts to CECED, media agents may be either CATs or CMAs. <p> CAT/CMA USER INTERACTION SUPPORT The design for the Connection CMA is based on the connection management architecture developed by Schooler [SCHO-92a], <ref> [SCHO-92b] </ref>. In Schoolers connection management architecture, the Connection Manager provides services to media agents, which are collaboration-aware processes providing an interface to specific media devices [SCHO-92b]. In applying the connection management concepts to CECED, media agents may be either CATs or CMAs. As exemplified by the Shared Tool-Events CMA, CMAs may support sharing over unmodified single-user applications that provide access to the shared workspace during a conference. <p> The need for a distributed locator service, which provides resource directory functions that would allow resources to be found throughout the Internet, is described in <ref> [SCHO-92b] </ref>.
Reference: [SRIN-92] <author> K. Srinivas, R. Reddy, A. Babadi, S. Kamana, V. Kumar, and Z. Dai, MONET: </author> <title> A Multi - media System for Conferencing and Application Sharing in Distributed Systems, </title> <institution> CERC-TN-RN-91-009, Concurrent Engineering Research Center, West Virginia University, Morgantown, West Virginia, </institution> <month> February </month> <year> 1992. </year>
Reference-contexts: Finally, it supports the replication of applications and databases at each site, quick feedback to all conferees, and the ability to conference over low bandwidth communication networks. As such, CECED is unique and distinguished from all previous popular approaches to the provision of network-supported collaborative environments <ref> [CROW-90, PELA-90, GARF-91, SRIN-92] </ref>. Section 2 summarizes the system requirements and highlights the objectives of CECED which meet these requirements. Section 3 presents CECED's design and depicts the operation of CECED in terms of the functional modules. Section 4 states our conclusions. 2.
Reference: [WATA-90] <author> K. Watabe, S. Sakata, K. Maeno, H. Fukuoka, T. Ohmori, </author> <title> Distributed Multiparty Desktop C o n f e r e n c i n g S y s t e m : M E R M A I D , Proceedings of the Conference on Computer - Supported Cooperative Work, </title> <address> Los Angeles, CA, </address> <month> October </month> <year> 1990. </year>
Reference-contexts: Floor control policy may be enforced in either a centralized or distributed manner [GARC-89]. In a centralized scheme, a central controller (e.g., conference chair) fields all floor requests and passes the floor (chalk) to the conferees accordingly. Chalk-passing mechanisms have been used in systems such as MERMAID <ref> [WATA-90] </ref> and MONET [CERC-92]. However, such schemes require additional user actions to explicitly request the floor, and also represent time and processor costs to maintain and broadcast complex distributed floor state and control information.
References-found: 15

