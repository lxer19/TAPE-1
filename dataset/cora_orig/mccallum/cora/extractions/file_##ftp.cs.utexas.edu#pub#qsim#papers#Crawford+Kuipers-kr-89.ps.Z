URL: file://ftp.cs.utexas.edu/pub/qsim/papers/Crawford+Kuipers-kr-89.ps.Z
Refering-URL: http://www.cs.utexas.edu/users/qr/algy/algernon.html
Root-URL: 
Email: jc@cs.utexas.edu kuipers@cs.utexas.edu  
Title: Towards a Theory of Access-Limited Logic for Knowledge Representation  
Author: J. M. Crawford and Benjamin Kuipers 
Address: Austin, Texas 78712  
Affiliation: Department of Computer Sciences The University of Texas At Austin  
Note: In Proceedings of the First International Conference on Principles of Knowledge Representation and Reasoning (KR-89) Los Altos, CA: Morgan Kaufmann, 1989.  
Abstract: One of the fundamental problems in the theory of knowledge representation is the difficulty of achieving both logical coherence and computational tractability. We present steps toward a theory of access-limited logic, in which access to assertions in the knowledge-base is constrained by semantic network style locality relations. Where a classical deductive method or logic programming language would retrieve all assertions that satisfy a given pattern, an access-limited logic retrieves all assertions reachable by following an available access path. The complexity of inference is thus independent of the size of the knowledge-base and depends only on its local connectivity. Access-Limited Logic, though incomplete, still has a well defined semantics and a weakened form of completeness (`Socratic Completeness') and is complete in some important special cases.
Abstract-found: 1
Intro-found: 1
Reference: [ Allen et al., 1984 ] <author> Allen, J. F., Giuliano, M., and Frisch A. M. </author> <title> The HORNE Reasoning System, </title> <type> TR 126, </type> <institution> Computer Science Department, University of Rochester, Rochester NY., </institution> <year> 1984. </year>
Reference: [ Apt, 1988 ] <author> Apt, Krzysztof, R. </author> <title> Introduction to Logic Programming. </title> <note> To appear in Handbook of Theoretical Computer Science, </note> <editor> ed. J. van Leeuwen., </editor> <publisher> North Holland. </publisher>
Reference-contexts: The tricky part is the base case. We map K to an equivalent logic program LP (K). We show that for any rule in K which would apply on the next iteration of T LP (K) (where T is the immediate consequence operator in logic programming | see <ref> [ Crawford and Kuipers, 1989, Apt, 1988, Lloyd, 1984 ] </ref> ) there exists a path in ALL the query of which causes the rule to fire. <p> The design of the inference mechanism in ALL has been heavily influenced by logic programming. In fact any function free logic program (without negation) can be written in ALL. Further, the notation, and the proofs of the completeness of logic programming <ref> [ Apt, 1988, Lloyd, 1984 ] </ref> , have been used extensively in the completeness proofs for ALL. 6 Discussion and Future Work. Ultimately we are working towards a formal theory which has the expressive power of predicate calculus, and is consistent and Socratically Complete, but still has polynomial time complexity.
Reference: [ Brachman and Levesque, 1985 ] <author> Brachman, Ronald J. and Levesque, Hector, J. </author> <title> Readings in Knowledge Representation, </title> <publisher> Morgan Kaufmann, Los Altos, Cal., </publisher> <year> 1985. </year>
Reference: [ Brachman et al., 1983 ] <author> Brachman, R.J., Fikes,R. E., and Levesque H. J. </author> <title> Krypton: a functional approach to knowledge representation, </title> <journal> Computer, </journal> <volume> 16 </volume> <pages> 67-73., </pages> <year> 1983. </year>
Reference-contexts: Past work has generally used the structure of the network only for special purpose reasoning (spreading activation, classification etc.), and has relied on a first-order logic theorem prover <ref> [ Brachman et al., 1983, Schubert et al., 1983 ] </ref> or a weaker deduction system [ Levesque, 1984, Patel-Schneider, 1985, Vilain, 1985 ] for general reasoning. A notable exception to this rule is the recent work of Schubert [ Schubert, 1979, Haan and Schubert, 1986 ] .
Reference: [ Bobrow and Winograd, 1985 ] <author> Bobrow, Daniel G., and Winograd, Terry. </author> <title> An Overview of KRL, a Knowledge Representation Language. </title> <note> In [ Brach-man and Levesque, 1985 ] , pp. 263-285. </note>
Reference: [ Crawford and Kuipers, 1989 ] <author> Crawford, J. M., and Kuipers, B. </author> <title> Access-Limited Logics. </title> <type> Forthcoming technical report. </type>
Reference-contexts: For a primitive operations O, we define O n (K; p) as the result of the operation O on the knowledge-base K, in some subset of C fi R, p, with rule chaining cut off at depth n (the full formal definition of O n is given in <ref> [ Crawford and Kuipers, 1989 ] </ref> ). We then define O in terms of O n as shown in figure 2. <p> Mapping ALL to predicate calculus is fairly straight forward. Propositions do not change at all. Paths become conjunctions. Rules become implications with all variables universally quantified (there are some complications in mapping rules associated with frames (as opposed to slots) | these are discussed in <ref> [ Crawford and Kuipers, 1989 ] </ref> ). Knowledge-bases become the conjunction of their rules and facts. <p> The tricky part is the base case. We map K to an equivalent logic program LP (K). We show that for any rule in K which would apply on the next iteration of T LP (K) (where T is the immediate consequence operator in logic programming | see <ref> [ Crawford and Kuipers, 1989, Apt, 1988, Lloyd, 1984 ] </ref> ) there exists a path in ALL the query of which causes the rule to fire. <p> knowledge-base K = hC; R; N r; Ar; F; P; Ai, and S is a set of rules from K then Sn p is the restriction of S to p (the set of rules from S which can apply to frame-slots in p | the formal definition is given in <ref> [ Crawford and Kuipers, 1989 ] </ref> ). If p is a union of several partitions then Sn p is just the union of S restricted to the partitions. <p> f 2 kb (query n (q)(K; par K (q)))) Which is shown by induction on n from the definition of O n and which again implies the result by a completeness result from logic programming (for the induction to go through, this lemma must actually be strengthened somewhat | see <ref> [ Crawford and Kuipers, 1989 ] </ref> for details). 2.7 About Partitions An important part of the claim that ALL is logically coherent is the claim that knowledge can be divided into semantically distinct segments. Fortunately, partitions are not a new idea. <p> which O could possibly put into frame-slots in change (O; K). * operations (O; K) | the set of all queries of frame-slots in reach (O; K) and assertions of frames in f rames (O; K) into frame-slots in change (O; K). (Formal definitions of these sets are given in <ref> [ Crawford and Kuipers, 1989 ] </ref> ). In a well partitioned knowledge-base these sets should be much smaller than the total size of the knowledge-base. For a set S, let j S j be the cardinality of S.
Reference: [ Findler, 1979 ] <author> Findler, </author> <title> N.V., Associative Networks: Representation and Use of Knowledge by Computer, </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1979. </year>
Reference: [ Haan and Schubert, 1986 ] <author> Haan, J., and Schubert, L. K. </author> <title> Inference in a topically organized semantic net. </title> <booktitle> In Proc. Natl. Conf. Am. Assoc. Artif. Intell., </booktitle> <address> Philadelphia, Pa., </address> <year> 1986, </year> <pages> pp. 334-338. </pages>
Reference-contexts: A notable exception to this rule is the recent work of Schubert <ref> [ Schubert, 1979, Haan and Schubert, 1986 ] </ref> . ALL and the networks of Schubert share several features including the use of access limitations to guide reasoning. <p> The solution used in ECOSYSTEM is to maintain a taxonomy of knowledge and use this taxonomy to guide reasoning <ref> [ Haan and Schubert, 1986 ] </ref> . The difference in ALL is that access is limited to known access paths, which may access facts many nodes away in the network, but do so in a controlled fashion.
Reference: [ Hanks and McDermott, 1986 ] <author> Hanks, Steve, and Mc-Dermott, Drew. </author> <title> Default Reasoning, Nonmono-tonic Logics, and the Frame Problem. </title> <booktitle> In Proc. Natl. Conf. Am. Assoc. Artif. Intell., </booktitle> <address> Philadel-phia, Pa., </address> <year> 1986, </year> <pages> pp. 328-333. </pages>
Reference: [ Hayes, 1985 ] <author> Hayes, Patrick J. </author> <title> The Second Naive Physics Manifesto. </title> <editor> In Hobbs, Jerry R. and Moore, Robert C., </editor> <title> Formal Theories of the Commonsense World, </title> <publisher> Ablex Publishing Co.: </publisher> <address> New Jersey, </address> <year> 1985, </year> <pages> pp. 18-30. </pages>
Reference-contexts: Fortunately, partitions are not a new idea. Among other places, similar ideas can be found in Hayes' clusters <ref> [ Hayes, 1985 ] </ref> . The related idea that reasoning can be done by separating rules into partitions is also not new.
Reference: [ Hayes-Roth, 1985 ] <author> Hayes-Roth, B. </author> <title> A Blackboard Architecture for Control. </title> <journal> In Artificial Intelligence Journal, </journal> <volume> 26 </volume> <pages> 251-321, </pages> <year> 1985. </year>
Reference-contexts: Fortunately, partitions are not a new idea. Among other places, similar ideas can be found in Hayes' clusters [ Hayes, 1985 ] . The related idea that reasoning can be done by separating rules into partitions is also not new. It is the idea behind, for example, blackboard architectures <ref> [ Hayes-Roth, 1985 ] </ref> (the difference between partitions in ALL and the similar limitations in blackboard architectures is the idea of access paths, which allow us to use the entire knowledge-base as our `blackboard'). 3 The Computational Tractability of ALL.
Reference: [ Kay, 1973 ] <author> Kay, M. </author> <title> The MIND system. In Natural Language Processing, </title> <editor> ed. R. Rustin., </editor> <address> New York: </address> <publisher> Algorithmics Press, </publisher> <year> 1973. </year>
Reference: [ Levesque, 1986 ] <author> Levesque, H. J. </author> <title> Knowledge representation and reasoning. </title> <journal> In Ann. Rev. Comput. Sci. </journal> <volume> 1 </volume> <pages> 255-87, </pages> <address> 1986. Palo Alto, California: </address> <publisher> Annual Reviews Inc. </publisher>
Reference-contexts: However, these approaches tend to be difficult to describe semantically and tend to place unnatural limits on an agent's reasoning ability <ref> [ Levesque, 1986 ] </ref> . Our primary interest is the development of a system for the representation of commonsense knowledge. People seem to be able to reason efficiently with a very large commonsense knowledge-base.
Reference: [ Levesque, 1984 ] <author> Levesque, H.J. </author> <title> A Logic of Implicit and Explicit Belief. </title> <booktitle> In Proc. Natl. Conf. Am. As-soc. Artif. Intell., </booktitle> <address> Austin, Texas, </address> <year> 1984, </year> <pages> pp. 198-202. </pages>
Reference-contexts: Past work has generally used the structure of the network only for special purpose reasoning (spreading activation, classification etc.), and has relied on a first-order logic theorem prover [ Brachman et al., 1983, Schubert et al., 1983 ] or a weaker deduction system <ref> [ Levesque, 1984, Patel-Schneider, 1985, Vilain, 1985 ] </ref> for general reasoning. A notable exception to this rule is the recent work of Schubert [ Schubert, 1979, Haan and Schubert, 1986 ] . ALL and the networks of Schubert share several features including the use of access limitations to guide reasoning.
Reference: [ Lloyd, 1984 ] <author> Lloyd, J.W. </author> <title> Foundations of Logic Programming, </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1984. </year>
Reference-contexts: The tricky part is the base case. We map K to an equivalent logic program LP (K). We show that for any rule in K which would apply on the next iteration of T LP (K) (where T is the immediate consequence operator in logic programming | see <ref> [ Crawford and Kuipers, 1989, Apt, 1988, Lloyd, 1984 ] </ref> ) there exists a path in ALL the query of which causes the rule to fire. <p> The design of the inference mechanism in ALL has been heavily influenced by logic programming. In fact any function free logic program (without negation) can be written in ALL. Further, the notation, and the proofs of the completeness of logic programming <ref> [ Apt, 1988, Lloyd, 1984 ] </ref> , have been used extensively in the completeness proofs for ALL. 6 Discussion and Future Work. Ultimately we are working towards a formal theory which has the expressive power of predicate calculus, and is consistent and Socratically Complete, but still has polynomial time complexity.
Reference: [ McCarthy, 1987 ] <author> McCarthy, J. </author> <booktitle> Generality in Artificial Intelligence. In Communications of the ACM 30 </booktitle> <pages> 1030-1035, </pages> <year> 1987. </year>
Reference: [ Minsky, 1985 ] <author> Minsky, Marvin. </author> <title> A Framework for Representing Knowledge. </title> <note> In [ Brachman and Levesque, 1985 ] , pp. 246-262. </note>
Reference-contexts: This has long been a key intuition behind semantic networks: "...the knowledge required to perform an intellectual task generally lies in the semantic vicinity of the concepts involved in the task." [ Schubert, 1979 ] . ALL also draws from semantic networks its frame based data structures <ref> [ Minsky, 1985 ] </ref> . ALL differs from past work on semantic networks in that it uses a single general purpose retrieval/reasoning mechanism which is guided by the structure of the network.
Reference: [ Patel-Schneider, 1985 ] <author> Patel-Schneider, P. </author> <title> A Decidable First-Order Logic for Knowledge Representation. </title> <booktitle> In Proc. Int. Jt. Conf. Artif. Intell., </booktitle> <address> Los Angeles, California, </address> <year> 1985, </year> <pages> pp. 455-458. </pages>
Reference-contexts: Past work has generally used the structure of the network only for special purpose reasoning (spreading activation, classification etc.), and has relied on a first-order logic theorem prover [ Brachman et al., 1983, Schubert et al., 1983 ] or a weaker deduction system <ref> [ Levesque, 1984, Patel-Schneider, 1985, Vilain, 1985 ] </ref> for general reasoning. A notable exception to this rule is the recent work of Schubert [ Schubert, 1979, Haan and Schubert, 1986 ] . ALL and the networks of Schubert share several features including the use of access limitations to guide reasoning.
Reference: [ Powers, 1987 ] <author> Powers, L. H. </author> <title> Knowledge by Deduction. </title> <journal> In The Philosophical Review, LXXXVII, </journal> <volume> No. 3, </volume> <year> 1978, </year> <pages> pp. 337-371. </pages>
Reference-contexts: Thus, access-limited logic has a property we call Socratic Completeness 2 | for any query of a proposition which is a consequence (in predicate calculus) of 2 The idea of Socratic Completeness was invented independently in <ref> [ Powers, 1987 ] </ref> where it is referred to as Socratic Adequacy. the knowledge-base, there exists a preliminary query after which the query succeeds.
Reference: [ Schubert, 1979 ] <author> Schubert, L.K., R.G. Goebel, and N.J. Cercone, </author> <title> "The Structure and Organization of a Semantic Net for Comprehension and Inference," </title> <booktitle> in [ Findler, 1979 ] , pp. </booktitle> <pages> 121-175. </pages>
Reference-contexts: This has long been a key intuition behind semantic networks: "...the knowledge required to perform an intellectual task generally lies in the semantic vicinity of the concepts involved in the task." <ref> [ Schubert, 1979 ] </ref> . ALL also draws from semantic networks its frame based data structures [ Minsky, 1985 ] . ALL differs from past work on semantic networks in that it uses a single general purpose retrieval/reasoning mechanism which is guided by the structure of the network. <p> A notable exception to this rule is the recent work of Schubert <ref> [ Schubert, 1979, Haan and Schubert, 1986 ] </ref> . ALL and the networks of Schubert share several features including the use of access limitations to guide reasoning.
Reference: [ Schubert et al., 1983 ] <author> Schubert, L.K., Papalaskaris, M.A., and Taugher, J. </author> <title> Determining Type, Part, Color, and Time Relationships. </title> <journal> In IEEE Computer, </journal> <volume> 16(10), </volume> <pages> 53-60, </pages> <year> 1983. </year>
Reference-contexts: Past work has generally used the structure of the network only for special purpose reasoning (spreading activation, classification etc.), and has relied on a first-order logic theorem prover <ref> [ Brachman et al., 1983, Schubert et al., 1983 ] </ref> or a weaker deduction system [ Levesque, 1984, Patel-Schneider, 1985, Vilain, 1985 ] for general reasoning. A notable exception to this rule is the recent work of Schubert [ Schubert, 1979, Haan and Schubert, 1986 ] .
Reference: [ Touretzky, 1986 ] <author> Touretzky, David S. </author> <title> The Mathematics of Inheritance Systems, </title> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos, California, </address> <year> 1986. </year>
Reference-contexts: We have built up a small knowledge-base of common-sense knowledge and have investigated several classes of problems: * We have written a version of the inferential distance rule of Touretzky <ref> [ Touretzky, 1986 ] </ref> ), and have looked at some standard examples of multiple inheritance (e.g. royal elephants and birds that are penguins) and at a Nixon diamond. * We have implemented a fairly standard solution to the Yale shooting problems [ Hanks and McDer mott, 1986 ] . * Using
Reference: [ Vilain, 1985 ] <author> Vilain, M. </author> <title> The restricted language architecture of a hybrid representation system. </title> <booktitle> In Proc. Int. Jt. Conf. Artif. Intell., </booktitle> <address> Los Angeles, California, </address> <year> 1985, </year> <pages> pp. 547-551. </pages>
Reference-contexts: Past work has generally used the structure of the network only for special purpose reasoning (spreading activation, classification etc.), and has relied on a first-order logic theorem prover [ Brachman et al., 1983, Schubert et al., 1983 ] or a weaker deduction system <ref> [ Levesque, 1984, Patel-Schneider, 1985, Vilain, 1985 ] </ref> for general reasoning. A notable exception to this rule is the recent work of Schubert [ Schubert, 1979, Haan and Schubert, 1986 ] . ALL and the networks of Schubert share several features including the use of access limitations to guide reasoning.
Reference: [ Woods, 1975 ] <author> Woods, W. </author> <title> What's in a link: foundations for semantic networks. In Representation and Understanding: Studies in Cognitive Science , ed. </title> <editor> Bobrow, D. and Collins, A., </editor> <address> New York: </address> <publisher> Academic, </publisher> <year> 1975, </year> <pages> pp. 35-82. </pages>
Reference: [ Wylie, 1957 ] <author> Wylie, C.R., Jr. </author> <title> /em 101 Puzzles in Thought & Logic, </title> <publisher> Dover Publications Inc, </publisher> <address> Mine-ola, New York, </address> <year> 1957. </year>
Reference-contexts: * Using our common-sense set theory we have implemented a solution to McCarthy's sterilization problem [1987] and other more complex problems involving sets of similar objects. * To demonstrate Socratic Completeness and the use of Reductio Ad Absurdum, we have implemented a solution to the following logical puzzle taken from <ref> [ Wylie, 1957 ] </ref> : In a certain bank the positions of cashier, manager, and teller are held by Brown, Jones and Smith, though not necessarily respectively. The teller, who was an only child, earns the least. Smith, who married Brown's sister, earns more than the manager.
References-found: 25

