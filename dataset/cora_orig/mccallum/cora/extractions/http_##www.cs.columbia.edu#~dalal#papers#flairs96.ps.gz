URL: http://www.cs.columbia.edu/~dalal/papers/flairs96.ps.gz
Refering-URL: http://www.cs.columbia.edu/~dalal/papers.html
Root-URL: http://www.cs.columbia.edu
Title: Semantics of an Efficient Propositional Reasoner Preliminary Report  
Author: Mukesh Dalal 
Address: New York, NY 10027  
Affiliation: Columbia University Department of Computer Science  
Abstract: We present two incomplete and tractable reasoners for clausal propositional logic. We prove that the efficient linear-time boolean constraint propagation is complete for one and refutation complete for the other. We also provide model-theoretic semantics for the two reasoners, in which atoms can be mapped to a real value between 0 and 1. We compare our rea-soners with some other previously-known incomplete and tractable reasoners. 
Abstract-found: 1
Intro-found: 1
Reference: [Bel77] <author> N. D. Belnap. </author> <title> A useful four-valued logic. </title> <editor> In G. Epstein and J. M. Dunn, editors, </editor> <booktitle> Modern Uses of Multiple-Valued Logics. </booktitle> <publisher> Reidel, </publisher> <year> 1977. </year>
Reference-contexts: Based on the earlier work of Belnap <ref> [Bel77] </ref> on relevance logic and Levesque [Lev84] on a a logic of implicit and explicit beliefs, Frisch [Fri87] presented a 3-valued model-theory for PC, whose entailment relation j= RP is the strongest propositional consequence relation that is sound but allows no chaining.
Reference: [BJL86] <author> C. E. Blair, R. G. Jeroslow, and J. K. Lowe. </author> <title> Some results and experiments in programming techniques for propositional logc. </title> <journal> Com-put. and Operations Research, </journal> <volume> 13(5) </volume> <pages> 633-645, </pages> <year> 1986. </year>
Reference-contexts: However, our rea-soner j is in linear-time and is strictly stronger than j= RP . For example, f (P ); (:P _ Q)g 6j= RP Q and f (P ); (:P _ Q)g j Q. After transforming the propositional satisfiabil-ity problem to integer programming problem, Blair, Jeroslow, and Lowe <ref> [BJL86] </ref> showed that clausal BCP is identical to the relaxed liner programming problem. Although their approach is similar in spirit to ours, they do not consider arbitrary grouping and multiple occurrences of literals. Cadoli and Schaerf [SC95] obtained several reason-ers by parameterizing j= RP by sets of propositions.
Reference: [CL73] <author> C. Chang and R.C. Lee. </author> <title> Symbolic Logic and Mechanical Theorem Proving. </title> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1973. </year>
Reference-contexts: Since S (f ) = ;, it follows that all valuations are counter-models of f . It also follows that re-ordering the literals in a clause produces an equivalent clause; for example, P _ :Q :Q _ P . BCP is a hyper-resolution variant of unit resolution <ref> [CL73] </ref>, which is also called unit-resulting resolution.
Reference: [Dal92a] <author> M. Dalal. </author> <title> Efficient propositional constraint propagation. </title> <booktitle> In Proceedings Tenth National Conference on Artificial Intelligence (AAAI-92), </booktitle> <pages> pages 409-414, </pages> <address> San Jose, California, </address> <year> 1992. </year> <journal> American Association for Artificial Intelligence. </journal>
Reference-contexts: By using term rewriting systems, we have also extended these reasoners to non-clausal formulas and theories <ref> [Dal92a, Dal92b] </ref>. 6 CONCLUSIONS We defined two notions of sound and incomplete entailment for restricted propositional theories using a new model-theoretic semantics, and proved that BCP is complete for one and refutation complete for the other.
Reference: [Dal92b] <author> M. Dalal. </author> <title> Tractable deduction in knowledge representation systems. </title> <editor> In B. Nebel, C. Rich, and W. Swartout, editors, </editor> <booktitle> Principles of Knowledge Representation and Reasoning: Proceedings of the Third International Conference (KR'92), </booktitle> <pages> pages 393-402, </pages> <address> Cam-bridge, Massachusetts, 1992. </address> <publisher> Morgan Kauf-mann Publishers. </publisher>
Reference-contexts: By using term rewriting systems, we have also extended these reasoners to non-clausal formulas and theories <ref> [Dal92a, Dal92b] </ref>. 6 CONCLUSIONS We defined two notions of sound and incomplete entailment for restricted propositional theories using a new model-theoretic semantics, and proved that BCP is complete for one and refutation complete for the other.
Reference: [Dal95] <author> M. Dalal. </author> <title> Tractable reasoning in knowledge representation systems. </title> <type> Technical Report CUCS-017-95, </type> <institution> Department of Computer Science, Columbia University, </institution> <address> New York, NY, </address> <month> July </month> <year> 1995. file://ftp.cs.columbia.edu/reports/reports-1995/cucs-017-95.ps.gz. </year>
Reference-contexts: Although their approach is similar in spirit to ours, they do not consider arbitrary grouping and multiple occurrences of literals. Cadoli and Schaerf [SC95] obtained several reason-ers by parameterizing j= RP by sets of propositions. However, we have shown <ref> [Dal95] </ref> that none of their incomplete reasoners is stronger than j .
Reference: [Dal96] <author> M. Dalal. </author> <title> Anytime families of tractable propositional reasoners. </title> <booktitle> In Fourth International Symposium on Artificial Intelligence and Mathematics (AI/MATH-96), </booktitle> <pages> pages 42-45, </pages> <address> Florida, </address> <year> 1996. </year>
Reference-contexts: Cadoli and Schaerf [SC95] obtained several reason-ers by parameterizing j= RP by sets of propositions. However, we have shown [Dal95] that none of their incomplete reasoners is stronger than j . In a related work <ref> [Dal96] </ref>, we have extended j to an anytime family ` 0 ; ` 1 ; : : : of reasoners such that each ` i is tractable, each ` i+1 is at least as complete as ` i , and each theory has a ` i complete for reasoning with it.
Reference: [de 90] <author> J. de Kleer. </author> <title> Exploiting locality in a TMS. </title> <booktitle> In Proceedings Eighth National Conference on Artificial Intelligence (AAAI-90), </booktitle> <pages> pages 264-271, </pages> <year> 1990. </year>
Reference-contexts: 1 INTRODUCTION Clausal Boolean Constraint Propagation (BCP) [McA80] is widely used in several AI systems and applications <ref> [McA90, de 90] </ref> for linear-time incomplete reasoning with clausal propositional theories.
Reference: [DG84] <author> W.F. Dowling and J.H. Gallier. </author> <title> Linear-time algorithms for testing the satisfiability of propositional Horn formulae. </title> <journal> Journal of Logic Programming, </journal> <volume> 1(3) </volume> <pages> 267-284, </pages> <year> 1984. </year>
Reference-contexts: BCP is incomplete, for example, it will not obtain f from the unsatisfiable theory fP _ Q; :P _ Q; P _ :Q; :P _ :Qg. However, it is known to be complete for several special classes of theories, for example, Horn theories. Using ideas similar to that in <ref> [DG84] </ref>, McAllester [McA90] presented an efficient algorithm for BCP, which runs in linear time if all the atoms of the input theory are known in advance. The algorithm maintains the count of literals in each clause and pointers to clauses containing the literal from each literal.
Reference: [Fit90] <author> M. </author> <title> Fitting. First-order logic and automated theorem proving. Texts and monographs in computer science. </title> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: Thus, j= is strictly stronger than j , since 3 j= R. 3 CLAUSAL BCP We review clausal BCP in this section. First, we define clauses by generalizing the disjunction connective by allowing arbitrary number of arguments (c.f. <ref> [Fit90] </ref>). Definition: A clause is a finite disjunction ff 1 _ : : : _ ff n of literals, where n 0. The empty clause, for n = 0, is denoted by f . A clausal theory is a finite set of clauses.
Reference: [Fri87] <author> A.M. Frisch. </author> <title> Inference without chaining. </title> <booktitle> In Proceedings Tenth International Joint Conference on Artificial Intelligence (IJCAI-87), </booktitle> <pages> pages 515-519, </pages> <year> 1987. </year>
Reference-contexts: Based on the earlier work of Belnap [Bel77] on relevance logic and Levesque [Lev84] on a a logic of implicit and explicit beliefs, Frisch <ref> [Fri87] </ref> presented a 3-valued model-theory for PC, whose entailment relation j= RP is the strongest propositional consequence relation that is sound but allows no chaining. Although intractable in general, the algorithm presented for j= RP takes quadratic-time in the worst-case for clausal theories.
Reference: [Gar88] <author> P. Gardenfors. </author> <title> Knowledge in flux : modeling the dynamics of epistemic states. </title> <publisher> MIT Press, </publisher> <address> Cambridge, Mass., </address> <year> 1988. </year>
Reference-contexts: For example, a valuation that maps both P and Q to 1, maps P _ Q to 2, and maps P _ P to 1. Although we do not exploit this feature in this paper, higher values may signify higher epistemic entrenchment, a notion useful for belief revision <ref> [Gar88] </ref>. Definition: Formulas 1 and 2 are equivalent, denoted by 1 2 , iff V ( 1 ) = V ( 2 ) for each valuation V . Note that if S ( 1 ) = S ( 2 ) then 1 2 .
Reference: [GJ79] <author> M. Garey and D. Johnson. </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness. </title> <editor> Freeman, W. H., </editor> <address> NY, </address> <year> 1979. </year>
Reference-contexts: We present two new tractable incomplete reasoners and prove that BCP is complete for one and refutation complete for the other. (For the purposes of this paper, a problem is considered tractable iff the corresponding decision problem is known to be in PTIME <ref> [GJ79] </ref>.) We also present model-theoretic semantics for the two reasoners. The importance of model-theoretic semantics for reasoners has been convincingly argued in several papers (c.f. [Lev84]). We restrict our attention to disjunctive propositional formulas and theories. Disjunctive formulas slightly generalize clauses by allowing arbitrary grouping and multiple occurrences of literals.
Reference: [Lev84] <author> H.J. Levesque. </author> <title> A logic of implicit and explicit belief. </title> <booktitle> Proceedings National Conference on Artificial Intelligence (AAAI-84), </booktitle> <pages> pages 198-202, </pages> <year> 1984. </year>
Reference-contexts: The importance of model-theoretic semantics for reasoners has been convincingly argued in several papers (c.f. <ref> [Lev84] </ref>). We restrict our attention to disjunctive propositional formulas and theories. Disjunctive formulas slightly generalize clauses by allowing arbitrary grouping and multiple occurrences of literals. We associate each formula with a set of literals called fl This work is partially supported by NSF Grant No. IRI-94-10117 and ARPA/ARL Contract No. <p> Based on the earlier work of Belnap [Bel77] on relevance logic and Levesque <ref> [Lev84] </ref> on a a logic of implicit and explicit beliefs, Frisch [Fri87] presented a 3-valued model-theory for PC, whose entailment relation j= RP is the strongest propositional consequence relation that is sound but allows no chaining.
Reference: [McA80] <author> D. McAllester. </author> <title> An outlook on truth maintenance. </title> <type> Memo 551, </type> <institution> MIT AI Lab, </institution> <month> August </month> <year> 1980. </year>
Reference-contexts: 1 INTRODUCTION Clausal Boolean Constraint Propagation (BCP) <ref> [McA80] </ref> is widely used in several AI systems and applications [McA90, de 90] for linear-time incomplete reasoning with clausal propositional theories.
Reference: [McA90] <author> D. McAllester. </author> <title> Truth maintenance. </title> <booktitle> In Proceedings Eighth National Conference on Artificial Intelligence (AAAI-90), </booktitle> <pages> pages 1109-1116, </pages> <year> 1990. </year>
Reference-contexts: 1 INTRODUCTION Clausal Boolean Constraint Propagation (BCP) [McA80] is widely used in several AI systems and applications <ref> [McA90, de 90] </ref> for linear-time incomplete reasoning with clausal propositional theories. <p> However, it is known to be complete for several special classes of theories, for example, Horn theories. Using ideas similar to that in [DG84], McAllester <ref> [McA90] </ref> presented an efficient algorithm for BCP, which runs in linear time if all the atoms of the input theory are known in advance. The algorithm maintains the count of literals in each clause and pointers to clauses containing the literal from each literal.
Reference: [Men64] <author> E. Mendelson. </author> <title> Introduction to Mathematical Logic. </title> <publisher> Van Nostrand, </publisher> <address> Princeton, N.J., </address> <year> 1964. </year>
Reference-contexts: A theory is a finite set of formulas; for example, f:P; P _ Q; (P _ :Q) _ Qg. Our notion of formulas is a slight generalization of the standard notion of clauses. In particular, the formulas of L are the formulas of the classical Propositional Calculus (PC) <ref> [Men64] </ref> in negation normal form, but without the conjunction connective ^. This allows us to use the standard notions of interpretation, equivalence (), entailment (j=), etc. Note that any theory in PC can be converted into an equivalent theory in L.
Reference: [SC95] <author> M. Schaerf and M. Cadoli. </author> <title> Tractable rea-sonong via approximation. </title> <journal> Artificial Intelligence, </journal> <volume> 74(2) </volume> <pages> 249-310, </pages> <year> 1995. </year>
Reference-contexts: Although their approach is similar in spirit to ours, they do not consider arbitrary grouping and multiple occurrences of literals. Cadoli and Schaerf <ref> [SC95] </ref> obtained several reason-ers by parameterizing j= RP by sets of propositions. However, we have shown [Dal95] that none of their incomplete reasoners is stronger than j .
References-found: 18

