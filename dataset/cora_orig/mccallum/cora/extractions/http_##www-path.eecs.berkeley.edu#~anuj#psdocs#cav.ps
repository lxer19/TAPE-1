URL: http://www-path.eecs.berkeley.edu/~anuj/psdocs/cav.ps
Refering-URL: http://www-path.eecs.berkeley.edu/~anuj/papers/papers.html
Root-URL: 
Title: Decidability of Hybrid Systems with Rectangular Differential Inclusions  
Author: Anuj Puri and Pravin Varaiya 
Address: Berkeley, CA-94720  
Affiliation: Department of Electrical Engineering and Computer Science, University of California,  
Abstract: A hybrid system is modeled with a finite set of locations and a differential inclusion associated with each location. We discuss a subclass of hybrid systems with constant rectangular differential inclusions. The continuous state of the system is x 2 IR n with x i evolving with differential inclusion _x i 2 [L i ; U i ] where L i ; U i are integers (i.e., the slope of trajectory of x i could be changing, but is restricted to remain within [L i ; U i ]). A transition from one location to another can be made provided the state satisfies the enabling condition for the transition. The state can also be initialized to a new value during the transition. The differential inclusion for x i can be changed when x i is an integer or when x i is initialized to a new value. We show that the verification problem for this class of hybrid systems is decidable. With this approach, systems with unsynchronized and drifting clocks can be modeled, a general differential equation can be abstracted by breaking the state space into regions with constant differential inclusions, and many previously presented hybrid system examples can be verified.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> R.Alur, C.Courcoubetis, T.A. Henzinger and P.-H. Ho, </author> <title> Hybrid automata: an algorithmic approach to the specification and analysis of hybrid systems,Workshop on Theory of Hybrid Systems, </title> <address> Lyngby, Denmark, </address> <month> October </month> <year> 1992. </year>
Reference-contexts: 1 Introduction Hybrid systems are modeled as automata with a finite set of locations and continuous state x 2 IR n . There is a differential inclusion at each location and the edges between locations have enabling conditions <ref> [1, 12, 13, 16] </ref>. The hybrid system starts in a specified location with an initial condition x 0 2 IR n . The continuous trajectory evolves according to the differential inclusion associated with that location. <p> With our approach, systems with unsynchronized or drifting clocks can be modeled, systems with differential equations can be abstracted by breaking the state space into regions with constant differential inclusions [16], and it follows that for many hybrid system examples <ref> [1, 13] </ref>, there is a decision procedure that will terminate. In Sect. 2, we introduce the sub-class of hybrid systems. In Sect. 3, we present the decidability results. 2 Hybrid Automata 2.1 Preliminaries Notation IR is the set of reals and ZZ is the set of integers.
Reference: 2. <author> R. Alur and D. Dill, </author> <title> Automata for modeling real-time systems, </title> <booktitle> Proc. 17th ICALP, Lecture Notes in Computer Science 443, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: In particular, we show that the languages generated by our hybrid automata are regular. Our model does not include integration graphs [10], since we permit the differential inclusion for x i to change only when x i is initialized, or when x i is an integer. Systems with clocks <ref> [6, 2, 3, 9, 8, 15] </ref>, where _x i = 1, are special cases of the hybrid systems we consider.
Reference: 3. <author> R.Alur and T.Henzinger, </author> <title> Logics and models of real-time: A survey, </title> <booktitle> Proc. REX Workshop Real-Time: Theory in Practice, Lecture Notes in Computer Science 600, </booktitle> <publisher> Springer-Verlag, </publisher> <address> The Netherlands, </address> <month> June </month> <year> 1991. </year>
Reference-contexts: In particular, we show that the languages generated by our hybrid automata are regular. Our model does not include integration graphs [10], since we permit the differential inclusion for x i to change only when x i is initialized, or when x i is an integer. Systems with clocks <ref> [6, 2, 3, 9, 8, 15] </ref>, where _x i = 1, are special cases of the hybrid systems we consider.
Reference: 4. <author> R. Alur, T.A. Henzinger and P.-H. Ho, </author> <title> Automatic symbolic verification of embedded systems, </title> <booktitle> Proc. of the 14th Annual Real-time Systems Symposium, </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1993. </year>
Reference-contexts: These are also called Bounded-Rate Automata in <ref> [4] </ref>. A transition from one location to another can be made provided the state satisfies the enabling condition for the transition. A transition to a new location with different differential inclusion can be made only when x i is an integer value or when x i is initialized.
Reference: 5. <author> R.Alur, A.Itai, R.Kurshan and M.Yannakakis, </author> <title> Timing Verification by Successive Approximation, </title> <booktitle> Proc. 4th Workshop Computer-Aided Verification, Lecture Notes in Computer Science 663, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference: 6. <author> D. Dill, </author> <title> Timing Assumptions and verification of finite-state concurrent systems, Automatic Verification Methods for Finite-State Systems, </title> <booktitle> Lecture Notes in Computer Science 407, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1989. </year>
Reference-contexts: In particular, we show that the languages generated by our hybrid automata are regular. Our model does not include integration graphs [10], since we permit the differential inclusion for x i to change only when x i is initialized, or when x i is an integer. Systems with clocks <ref> [6, 2, 3, 9, 8, 15] </ref>, where _x i = 1, are special cases of the hybrid systems we consider.
Reference: 7. <author> F.Balarin and A.Sangiovanni-Vincentelli, </author> <title> A Verification Strategy for Timing--Constrained Systems, </title> <booktitle> Proc. 4th Workshop Computer-Aided Verification, Lecture Notes in Computer Science 663, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference: 8. <author> T. Henzinger, Z. Manna and A. Pnueli, </author> <title> What Good are Digital Clocks ?,Proc. </title> <booktitle> 19th ICALP, Lecture Notes in Computer Science, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference-contexts: In particular, we show that the languages generated by our hybrid automata are regular. Our model does not include integration graphs [10], since we permit the differential inclusion for x i to change only when x i is initialized, or when x i is an integer. Systems with clocks <ref> [6, 2, 3, 9, 8, 15] </ref>, where _x i = 1, are special cases of the hybrid systems we consider. <p> To prove this, we follow an approach similar to <ref> [8, 15] </ref>. We first show that L (H C ) = L (H D ) and then prove that L (H D ) is regular.
Reference: 9. <author> T.A. Henzinger, X. Nicollin, J. Sifakis and S.Yovine, </author> <title> Symbolic model-checking for real-time systems, </title> <booktitle> Proc. 7th Symp. on Logics in Computer Science, </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1992. </year>
Reference-contexts: In particular, we show that the languages generated by our hybrid automata are regular. Our model does not include integration graphs [10], since we permit the differential inclusion for x i to change only when x i is initialized, or when x i is an integer. Systems with clocks <ref> [6, 2, 3, 9, 8, 15] </ref>, where _x i = 1, are special cases of the hybrid systems we consider.
Reference: 10. <author> Y. Kesten, A. Pnueli, J. Sifakis and S. Yovine, </author> <title> Integration graphs: a class of decidable hybrid systems, </title> <booktitle> Workshop on Theory of Hybrid Systems, </booktitle> <address> Lyngby, Denmark, </address> <month> October </month> <year> 1992. </year>
Reference-contexts: During the transition, the state can be initialized to a new value. We show that under these conditions, interesting verification problems for the hybrid system are decidable. In particular, we show that the languages generated by our hybrid automata are regular. Our model does not include integration graphs <ref> [10] </ref>, since we permit the differential inclusion for x i to change only when x i is initialized, or when x i is an integer. Systems with clocks [6, 2, 3, 9, 8, 15], where _x i = 1, are special cases of the hybrid systems we consider. <p> Hybrid Automata with Rectangular Differential Inclusions Fig. 2. Sample Trajectory being x (T i ) before the transition, and x (T 0 i ) after the transition. In Fig. 2, x is defined on [0; 4:8]; [4:8; 4:8]; <ref> [4:8; 10] </ref>, and it makes two successive transitions at time 4:8. We associate a language L (H) with our hybrid automaton.
Reference: 11. <author> O. Maler, Z. Manna and A. Pnueli, </author> <title> From Timed to Hybrid Systems, </title> <booktitle> Proc. REX Workshop on Real-Time: Theory in Practice, Lecture Notes in Computer Science 600, </booktitle> <publisher> Springer-Verlag, </publisher> <address> The Netherlands, </address> <month> June </month> <year> 1991. </year>
Reference: 12. <author> J. A. Mcmanis, </author> <title> Verification and Control of Real-Time Discrete Event Dynamical Systems, </title> <type> Ph.D Thesis, </type> <institution> Department of Electrical Engineering and Computer Science, University of California, Berkeley, </institution> <year> 1993. </year>
Reference-contexts: 1 Introduction Hybrid systems are modeled as automata with a finite set of locations and continuous state x 2 IR n . There is a differential inclusion at each location and the edges between locations have enabling conditions <ref> [1, 12, 13, 16] </ref>. The hybrid system starts in a specified location with an initial condition x 0 2 IR n . The continuous trajectory evolves according to the differential inclusion associated with that location.
Reference: 13. <author> X.Nicollin, A.Olivero, J. Sifakis and S. Yovine, </author> <title> An Approach to the Description and Analysis of Hybrid Systems, </title> <booktitle> Workshop on Theory of Hybrid Systems, </booktitle> <address> Lyngby, Denmark, </address> <month> October </month> <year> 1992. </year>
Reference-contexts: 1 Introduction Hybrid systems are modeled as automata with a finite set of locations and continuous state x 2 IR n . There is a differential inclusion at each location and the edges between locations have enabling conditions <ref> [1, 12, 13, 16] </ref>. The hybrid system starts in a specified location with an initial condition x 0 2 IR n . The continuous trajectory evolves according to the differential inclusion associated with that location. <p> With our approach, systems with unsynchronized or drifting clocks can be modeled, systems with differential equations can be abstracted by breaking the state space into regions with constant differential inclusions [16], and it follows that for many hybrid system examples <ref> [1, 13] </ref>, there is a decision procedure that will terminate. In Sect. 2, we introduce the sub-class of hybrid systems. In Sect. 3, we present the decidability results. 2 Hybrid Automata 2.1 Preliminaries Notation IR is the set of reals and ZZ is the set of integers.
Reference: 14. <author> X. Nicollin and J. Sifakis, </author> <title> An overview and synthesis on timed process algebras,Proc. </title> <booktitle> 3rd Workshop Computer-Aided Verification, </booktitle> <address> Denmark, </address> <month> July </month> <year> 1991. </year>
Reference-contexts: After the transition, the state is x 0 2 [x] and the new differential inclusion is D (l 0 ). The state trajectory x moves in two phase steps <ref> [14] </ref>. In the first phase, time progresses and x changes continuously. In the second phase, a sequence of transitions is made instantaneously (Fig. 2). Formally, x is a multiple-valued function.
Reference: 15. <author> A. Puri, </author> <title> Real-Time Systems: Discrete Time vs. Dense Time, </title> <type> Unpublished, </type> <month> May </month> <year> 1993. </year>
Reference-contexts: In particular, we show that the languages generated by our hybrid automata are regular. Our model does not include integration graphs [10], since we permit the differential inclusion for x i to change only when x i is initialized, or when x i is an integer. Systems with clocks <ref> [6, 2, 3, 9, 8, 15] </ref>, where _x i = 1, are special cases of the hybrid systems we consider. <p> To prove this, we follow an approach similar to <ref> [8, 15] </ref>. We first show that L (H C ) = L (H D ) and then prove that L (H D ) is regular.
Reference: 16. <author> A. Puri and P. Varaiya, </author> <title> Modeling and Verification of Hybrid Systems, </title> <type> Preprint. </type>
Reference-contexts: 1 Introduction Hybrid systems are modeled as automata with a finite set of locations and continuous state x 2 IR n . There is a differential inclusion at each location and the edges between locations have enabling conditions <ref> [1, 12, 13, 16] </ref>. The hybrid system starts in a specified location with an initial condition x 0 2 IR n . The continuous trajectory evolves according to the differential inclusion associated with that location. <p> With our approach, systems with unsynchronized or drifting clocks can be modeled, systems with differential equations can be abstracted by breaking the state space into regions with constant differential inclusions <ref> [16] </ref>, and it follows that for many hybrid system examples [1, 13], there is a decision procedure that will terminate. In Sect. 2, we introduce the sub-class of hybrid systems.
Reference: 17. <editor> Proc. </editor> <booktitle> REX Workshop on Real-Time: Theory in Practice, Lecture Notes in Computer Science 600, </booktitle> <publisher> Springer-Verlag, </publisher> <address> The Netherlands, </address> <month> June </month> <year> 1991. </year> <title> This article was processed using the L a T E X macro package with LLNCS style </title>
References-found: 17

