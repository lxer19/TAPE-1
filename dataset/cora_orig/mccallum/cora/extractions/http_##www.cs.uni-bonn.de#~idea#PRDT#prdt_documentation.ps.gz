URL: http://www.cs.uni-bonn.de/~idea/PRDT/prdt_documentation.ps.gz
Refering-URL: http://www.cs.uni-bonn.de/~idea/PRDT/publications.html
Root-URL: http://cs.uni-bonn.de
Phone: Tel. +49 228 73 4292  
Title: Intelligent Database Environment for Advanced Applications IDEA The Passive Rule Design Tool: Tool Documentation Summary:
Author: Author(s): Thomas Lemke, Rainer Manthey Contributor(s): Elmar Ascheid Issued by: Rainer Manthey Authorised by: Rainer Manthey 
Note: Issue number: 1 Status: DEFINITIVE Date of issue: 21.3.1997 Reference: IDEA.DE.22.O.010) Number of pages: 26 Copyright 1997 University of Bonn ESPRIT Project 6333 Page 1  
Address: Romerstr. 164; D-53117 Bonn; Germany  
Affiliation: University of Bonn Department of Computer Science III  
Abstract-found: 0
Intro-found: 1
Reference: [Asc97] <author> Elmar Ascheid. </author> <title> Ein Werkzeug zur Unterstutzung von Entwurf und Validierung deduktiver Regeln in Chimera. </title> <type> Diploma thesis, </type> <institution> University of Bonn, Germany, </institution> <year> 1997. </year>
Reference-contexts: Meanwhile PRDT has been integrated with the other tools (CPT, PROP and SEA) using a common graphical approach to schema visualisation and manipulation and is available in source form via WWW. PRDT has been developed within a master thesis project at Bonn <ref> [Asc97] </ref>. According to the application development process outlined in the IDEA Methodology [CF96], deductive concepts are identified and the resulting rules formulated during the design phase of the methodology.
Reference: [CF96] <author> Stefano Ceri and Piero Fraternali, </author> <title> editors. Designing Database Applications with Objects and Rules | The IDEA Methodology. </title> <publisher> Addison-Wesley, </publisher> <year> 1996. </year> <note> to appear. </note>
Reference-contexts: PRDT has been developed within a master thesis project at Bonn [Asc97]. According to the application development process outlined in the IDEA Methodology <ref> [CF96] </ref>, deductive concepts are identified and the resulting rules formulated during the design phase of the methodology. <p> Thus, these dependencies can already be found in the textual representation of a Chimera schema, although it might be a non-trivial task to find them. A more detailed discussion of these stratifiability problems and related examples can be found in the IDEA methodology <ref> [CF96] </ref>. 2.3.2 Using Self and Class So far, all dependencies have been explicitly introduced by the rule designer who refers to a concept within the body of a deductive rule.
Reference: [GBB94] <author> Giovanna Guerrini, Elisa Bertino, and Rene Bal. </author> <title> A formal definition of the Chimera object-oriented data model. IDEA deliverable IDEA.DE.2P.011.01, ESPRIT Project 6333, 1994. ESPRIT Project 6333 Page 25 Intelligent Database Environment for Advanced Applications IDEA </title>
Reference-contexts: the types of the field terms Selector Object.attribute Type of the attribute as defined for the class for which Object is typed Record.label Type of the field label as defined for the type of the Record Table 1: Types of terms Rules for type inference have also been given in <ref> [GBB94] </ref>. 2.1.2 Range Restriction The evaluation of formulas effectively results in the derivation of data only if the formula restricts the universe of discourse to a finite domain for its evaluation. Thus, the set of values which can be computed for each term of a formula has to be finite.
Reference: [GLM96] <author> Ulrike Griefahn, Thomas Lemke, and Rainer Manthey. </author> <title> CPT user manual. </title> <booktitle> IDEA deliverable IDEA.DE.22.O.006, ESPRIT Project 6333, </booktitle> <year> 1996. </year>
Reference-contexts: &lt; 30 end; 3.2 Integration into the Chimera Prototyping Tool While the rule analysis routines have been implemented in ECL i PS e Prolog, its graphical user interface, the PRDT/GUI, has been written in Tcl/Tk and tightly integrated into the graphical user interface of the Chimera Prototyping Tool, the CPT/GUI <ref> [GLM96] </ref>. In order to load the PRDT into CPT, the CPT configuration file .chimerarc has to be edited such that the shell variable CHIMERA LOAD PRDT is set to true. A CPT started afterwards offers a PRDT entry in its tools menu.
Reference: [Lem96] <author> Thomas Lemke. </author> <title> The Schema Evolution Assistant: Tool documentation. </title> <booktitle> IDEA deliverable IDEA.DE.22.O.008, ESPRIT Project 6333, </booktitle> <year> 1996. </year>
Reference-contexts: Database Environment for Advanced Applications IDEA ESPRIT Project 6333 Page 22 Intelligent Database Environment for Advanced Applications IDEA 4 REFLECTIVE PASSIVE RULE ANALYSIS Within the IDEA project, the Bonn team followed a reflective approach for schema management in the development of the first versions of the Schema Evolution Assistant (SEA <ref> [LM95, Lem96] </ref>). Because the reflective representation of Chimera schemas as instances of a Chimera meta schema turned out to be a very elegant and powerful modeling means, the analysis of passive rules was intended to take place in the meta schema as well. <p> We therefore decided to stop the development of a reflective PRDT and switched to a non-reflective version, implemented in Prolog and, for graphics, Tcl/Tk. This decision was made in correspondance with the decision to cancel the development of the reflective Schema Evolution Assistant in favor of a non-reflective version <ref> [Lem96] </ref>. 5 CONCLUSION With the Passive Rule Design Tool, we designed and implemented an analysis component which smoothly integrates into our Chimera Prototyping Tool, supporting the schema designer in detecting and repairing error in the design of the passive rules of a Chimera schema.
Reference: [LM95] <author> Thomas Lemke and Rainer Manthey. </author> <title> The Schema Evolution Assistant: Tool description. </title> <booktitle> IDEA deliverable IDEA.DE.22.O.004, ESPRIT Project 6333, </booktitle> <year> 1995. </year> <note> ESPRIT Project 6333 Page 26 </note>
Reference-contexts: Database Environment for Advanced Applications IDEA ESPRIT Project 6333 Page 22 Intelligent Database Environment for Advanced Applications IDEA 4 REFLECTIVE PASSIVE RULE ANALYSIS Within the IDEA project, the Bonn team followed a reflective approach for schema management in the development of the first versions of the Schema Evolution Assistant (SEA <ref> [LM95, Lem96] </ref>). Because the reflective representation of Chimera schemas as instances of a Chimera meta schema turned out to be a very elegant and powerful modeling means, the analysis of passive rules was intended to take place in the meta schema as well.
References-found: 6

