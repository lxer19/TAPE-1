URL: http://www.cs.man.ac.uk/~tessaris/DL/docs/PODS98/calv-degi-lenz-PODS-98.ps.gz
Refering-URL: http://www.cs.man.ac.uk/~tessaris/DL/papers.html
Root-URL: http://www.cs.man.ac.uk
Email: calvanese@dis.uniroma1.it  degiacomo@dis.uniroma1.it  lenzerini@dis.uniroma1.it  
Title: On the Decidability of Query Containment under Constraints  
Author: Diego Calvanese Giuseppe De Giacomo Maurizio Lenzerini 
Address: Via Salaria 113, 00198 Roma, Italy  Via Salaria 113, 00198 Roma, Italy  Via Salaria 113, 00198 Roma, Italy  
Affiliation: Dip. di Informatica e Sistemistica Universita di Roma "La Sapienza"  Dip. di Informatica e Sistemistica Universita di Roma "La Sapienza"  Dip. di Informatica e Sistemistica Universita di Roma "La Sapienza"  
Abstract: Query containment under constraints is the problem of checking whether for every database satisfying a given set of constraints, the result of one query is a subset of the result of another query. Recent research points out that this is a central problem in several database applications, and we address it within a setting where constraints are specified in the form of special inclusion dependencies over complex expressions, built by using intersection and difference of relations, special forms of quantification, regular expressions over binary relations, and cardinality constraints. These types of constraints capture a great variety of data models, including the relational, the entity-relational, and the object-oriented model. We study the problem of checking whether q is contained in q 0 with respect to the constraints specified in a schema S, where q and q 0 are nonrecursive Datalog programs whose atoms are complex expressions. We present the following results on query containment. For the case where q does not contain regular expressions, we provide a method for deciding query containment, and analyze its computational complexity. We do the same for the case where neither S nor q, q 0 contain number restrictions. To the best of our knowledge, this yields the first decidability result on containment of conjunctive queries with regular expressions. Finally, we prove that the problem is undecidable for the case where we admit inequalities in q 0 . 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Serge Abiteboul. </author> <title> Querying semi-structured data. </title> <booktitle> In Proc. of the 6th Int. Conf. on Database Theory (ICDT-97), </booktitle> <pages> pages 1-18, </pages> <year> 1997. </year>
Reference-contexts: Since complex expressions are the basic building blocks of queries, it is possible to specify queries whose atoms are regular expressions. Recent papers point out that this feature is important in modern query languages (see e.g. <ref> [1] </ref>). We observe that, given the form of constraints and queries allowed in our approach, none of the previous results can be applied to get decidability/undecidability of query containment.
Reference: [2] <author> Serge Abiteboul, Richard Hull, and Victor Vianu. </author> <title> Foundations of Databases. </title> <publisher> Addison Wesley Publ. Co., </publisher> <address> Reading, Massachussetts, </address> <year> 1995. </year>
Reference-contexts: 1 Introduction Query containment is the problem of checking whether for every database, the result of one query is a subset of the result of another query 1 . Many recent papers point out that this problem is important in several contexts, including information integration [33], query optimization <ref> [2, 3] </ref>, (mate 1 We refer to the set semantics of query containment. Bag semantics is studied, for example, in [25]. rialized) view maintenance [21], data warehousing [36], and constraint checking [22].
Reference: [3] <author> A.V. Aho, Y. Sagiv, and J.D. Ullman. </author> <title> Efficient optimization of a class of relational expressions. </title> <journal> ACM Trans. on Database Systems, </journal> <volume> 4 </volume> <pages> 297-314, </pages> <year> 1979. </year>
Reference-contexts: 1 Introduction Query containment is the problem of checking whether for every database, the result of one query is a subset of the result of another query 1 . Many recent papers point out that this problem is important in several contexts, including information integration [33], query optimization <ref> [2, 3] </ref>, (mate 1 We refer to the set semantics of query containment. Bag semantics is studied, for example, in [25]. rialized) view maintenance [21], data warehousing [36], and constraint checking [22].
Reference: [4] <author> A.V. Aho, Y. Sagiv, and J.D. Ullman. </author> <title> Equivalence among relational expressions. </title> <journal> SIAM J. on Computing, </journal> <volume> 8 </volume> <pages> 218-246, </pages> <year> 1979. </year>
Reference-contexts: For various classes of Datalog queries with inequalities, decidability and undecidability results were presented in [12] and [34], respectively. Query containment under constraints has also been the subject of several investigations. For example, decidability of conjunctive query containment was investigated in <ref> [4] </ref> under functional and multi-valued dependencies, in [14] under functional and inclusion dependencies, in [9, 28, 30] under constraints representing is-a hierarchies and complex objects, and in [17] in the case of constraints represented as Datalog programs.
Reference: [5] <author> R. Berger. </author> <title> The undecidability of the dominoe problem. Mem. </title> <journal> Amer. Math. Soc., </journal> <volume> 66 </volume> <pages> 1-72, </pages> <year> 1966. </year>
Reference-contexts: The proof of undecidability exploits a reduction from the unbounded tiling problem <ref> [5] </ref>, which consists in deciding whether (a portion of) the integer grid can be tiled using a finite set of square tile types (fixed in orientation and with colored edges) in such a way that adjacent tiles have the same color on the common edge.
Reference: [6] <author> Diego Calvanese, Giuseppe De Giacomo, and Maurizio Lenzerini. </author> <title> Structured objects: Modeling and reasoning. </title> <booktitle> In Proc. of the 4th Int. Conf. on Deductive and Object-Oriented Databases (DOOD-95), number 1013 in Lecture Notes in Computer Science, </booktitle> <pages> pages 229-246. </pages> <publisher> Springer-Verlag, </publisher> <year> 1995. </year>
Reference-contexts: In Sections 4, 5 and 6 we present the two decidability results, and the undecidability result, respectively. Finally, Section 7 concludes the paper. 2 Schemas and Queries in DLR reg We use the logical language DLR reg , inspired by <ref> [8, 6] </ref>, to specify database schemas and queries. <p> For example, we obtain the entity-relationship model (including is-a relations on both entities and relations) in a straightforward way <ref> [6] </ref>, and an object-oriented data model (extended with several types of constraints), by restricting the use of existential and universal quantifications in concept expressions, by restricting the attention to binary relations, and by eliminating negation, disjunction and regular expressions. <p> One of the distinguishing features of DLR reg is that it is equipped with a method for checking logical implication. Indeed, the method described in <ref> [6] </ref> allows one to verify in EXPTIME whether a given assertion is satisfied in every model of a schema.
Reference: [7] <author> Diego Calvanese, Giuseppe De Giacomo, Maurizio Lenzerini, Daniele Nardi, and Riccardo Rosati. </author> <title> Description logic framework for information integration. </title> <booktitle> In Proc. of the 6th Int. Conf. on the Principles of Knowledge Representation and Reasoning (KR-98), </booktitle> <year> 1998. </year>
Reference-contexts: In particular in the case of information integration, queries are to be compared relatively to (inter-schema) constraints, which are used to declaratively specify the "glue" between two source schemas, and between one source schema and the global schema <ref> [7, 24, 33, 8, 29] </ref>. The complexity of query containment in the absence of constraints has been studied in various settings. <p> Notably, views can be freely used in assertions (even with cyclic references), and, therefore, all the above discussed constraints can be imposed not only on atomic relations, but also on views. These features make our logic particularly suited for expressing inter-schema relationships in the context of information integration <ref> [7] </ref>, where it is crucial to be able to state that a certain concept of a schema corresponds (by means of inclu sion or equivalence) to a view in another schema. * Finally, regular expressions can be profitably used to represent in the schema inductively defined structures such as sequences and
Reference: [8] <author> Tiziana Catarci and Maurizio Lenzerini. </author> <title> Representing and using interschema knowledge in cooperative information systems. </title> <journal> J. of Intelligent and Cooperative Information Systems, </journal> <volume> 2(4) </volume> <pages> 375-398, </pages> <year> 1993. </year>
Reference-contexts: In particular in the case of information integration, queries are to be compared relatively to (inter-schema) constraints, which are used to declaratively specify the "glue" between two source schemas, and between one source schema and the global schema <ref> [7, 24, 33, 8, 29] </ref>. The complexity of query containment in the absence of constraints has been studied in various settings. <p> In Sections 4, 5 and 6 we present the two decidability results, and the undecidability result, respectively. Finally, Section 7 concludes the paper. 2 Schemas and Queries in DLR reg We use the logical language DLR reg , inspired by <ref> [8, 6] </ref>, to specify database schemas and queries.
Reference: [9] <author> Edward P. F. Chan. </author> <title> Containment and minimization of positive conjunctive queries in oodb's. </title> <booktitle> In Proc. of the 11th ACM SIGACT SIGMOD SIGART Sym. on Principles of Database Systems (PODS-92), </booktitle> <pages> pages 202-211, </pages> <year> 1992. </year>
Reference-contexts: Query containment under constraints has also been the subject of several investigations. For example, decidability of conjunctive query containment was investigated in [4] under functional and multi-valued dependencies, in [14] under functional and inclusion dependencies, in <ref> [9, 28, 30] </ref> under constraints representing is-a hierarchies and complex objects, and in [17] in the case of constraints represented as Datalog programs.
Reference: [10] <author> Ashok K. Chandra and Philip M. Merlin. </author> <title> Optimal implementation of conjunctive queries in relational data bases. </title> <booktitle> In Proc. of the 5th ACM Sym. on Theory of Computing (STOC-77), </booktitle> <pages> pages 77-90, </pages> <year> 1977. </year>
Reference-contexts: The complexity of query containment in the absence of constraints has been studied in various settings. In <ref> [10] </ref>, NP-completeness has been established for conjunctive queries, and in [13] a multi-parameter analysis has been performed for the same case, showing that the intractability is due to certain types of cycles in the queries.
Reference: [11] <author> Ashok K. Chandra and Moshe Y. Vardi. </author> <title> The implication problem for functional and inclusion dependencies is undecidable. </title> <journal> SIAM J. on Computing, </journal> <volume> 14(3) </volume> <pages> 671-677, </pages> <year> 1985. </year>
Reference-contexts: We point out that DLR reg supports only special forms of functional and inclusion dependencies. Hence the undecidability result of implication for (general) functional and inclusion dependencies taken together, shown independently in <ref> [31, 11] </ref>, does not apply. 2.2 Queries A query q for a DLR reg schema is a non-recursive Datalog query, written in the form: q ( ~ x) body 1 ( ~ x; ~ y 1 ; ~ c 1 ) _ _ body m ( ~ x; ~ y m
Reference: [12] <author> Surajit Chaudhuri and Moshe Y. Vardi. </author> <title> On the equivalence of recursive and nonrecursive Datalog programs. </title> <booktitle> In Proc. of the 11th ACM SIGACT SIGMOD SIGART Sym. on Principles of Database Systems (PODS-92), </booktitle> <pages> pages 55-66, </pages> <year> 1992. </year>
Reference-contexts: In [26, 34], p 2 - completeness of containment of conjunctive queries with inequalities was proved, and in [32] the case of queries with the union and difference operators was studied. For various classes of Datalog queries with inequalities, decidability and undecidability results were presented in <ref> [12] </ref> and [34], respectively. Query containment under constraints has also been the subject of several investigations.
Reference: [13] <author> Chandra Chekuri and Anand Rajaraman. </author> <title> Conjunc--tive query containment revisited. </title> <booktitle> In Proc. of the 6th Int. Conf. on Database Theory (ICDT-97), </booktitle> <pages> pages 56-70, </pages> <year> 1997. </year>
Reference-contexts: The complexity of query containment in the absence of constraints has been studied in various settings. In [10], NP-completeness has been established for conjunctive queries, and in <ref> [13] </ref> a multi-parameter analysis has been performed for the same case, showing that the intractability is due to certain types of cycles in the queries. <p> OE u the formula produced by visiting u): * If u = t, and has not already been visited then con struct OE u as the conjunction of: (i) every formula labeling the node t (including N t ); 3 The tuple graph is similar to the graph used in <ref> [13] </ref> to detect cyclic dependencies between variables. (ii) one formula hf i iOE for each non-marked edge ( ~ t; t) labeled by f i (i.e. t = t i in ~ t), where OE is the formula resulting by marking the edge ( ~ t; t) and visiting the node
Reference: [14] <author> Anthony C. Klug David S. Johnson. </author> <title> Testing containment of conjunctive queries under functional and inclusion dependencies. </title> <journal> J. of Computer and System Sciences, </journal> <volume> 28(1) </volume> <pages> 167-189, </pages> <year> 1984. </year>
Reference-contexts: For various classes of Datalog queries with inequalities, decidability and undecidability results were presented in [12] and [34], respectively. Query containment under constraints has also been the subject of several investigations. For example, decidability of conjunctive query containment was investigated in [4] under functional and multi-valued dependencies, in <ref> [14] </ref> under functional and inclusion dependencies, in [9, 28, 30] under constraints representing is-a hierarchies and complex objects, and in [17] in the case of constraints represented as Datalog programs.
Reference: [15] <author> Giuseppe De Giacomo and Maurizio Lenzerini. </author> <title> What's in an aggregate: Foundations for description logics with tuples and sets. </title> <booktitle> In Proc. of the 14th Int. Joint Conf. on Artificial Intelligence (IJCAI-95), </booktitle> <pages> pages 801-807, </pages> <year> 1995. </year>
Reference-contexts: We first prove that if is satisfiable it admits a tuple-admissible model in which each name-formula is true in exactly one state. Let M 0 = (S 0 ; M 0 ) be a model of and s root 2 M 0 . By the results in <ref> [15] </ref> we can assume without loss of generality that M 0 is tuple-admissible. We transform M 0 into a new model M = (S; M ) with S 0 S, which is still tuple-admissible and interprets name-formulae as singletons.
Reference: [16] <author> Giuseppe De Giacomo and Maurizio Lenzerini. </author> <title> TBox and ABox reasoning in expressive description logics. </title> <editor> In Luigia C. Aiello, John Doyle, and Stuart C. Shapiro, editors, </editor> <booktitle> Proc. of the 5th Int. Conf. on the Principles of Knowledge Representation and Reasoning (KR-96), </booktitle> <pages> pages 316-327. </pages> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos, </address> <year> 1996. </year>
Reference-contexts: The technique is justified by the fact that reasoning about the schema itself (without the queries) is optimally done within the framework of PDL <ref> [16] </ref>. We present the following results on checking whether a query q is contained in another query q 0 with respect to the constraints specified in a schema S: 1. <p> Since then PDLs have been studied extensively and extended in several ways (see e.g. [27] for a survey). Here, we make use of cpdl g (studied in <ref> [16] </ref> in the context of description logics), which is an extension of Converse PDL [27] with graded modalities [19]. <p> viewing it as a graph), the tree-model property (if a formula has a model, then it has one that is a tree when viewing it as an undirected graph), and EXPTIME decidability of checking satisfiability of a formula (with the assumption that numbers in graded modalities are represented in unary) <ref> [16] </ref>. 4 Queries without Regular Expressions In this section we study the problem of deciding whether S j= q q 0 , in the case where q does not contain regular expressions, i.e. atoms of the form E (t; t 0 ). <p> of S in which there is at least one tuple satisfying q and not q 0 , can be turned into a model of . 4 CL (OE) is the Fisher-Ladner closure of a cpdl g formula OE, and Pre (r) is the set of "prefixes" of a program r <ref> [16] </ref>. Completeness of the encoding: satisfiable implies S 6j= q q 0 . We need to consider tuple-admissible models, i.e. models where there is no pair of states that represent the same reified tuple. <p> M 0 for each atomic formula A except name formulae S = fs root g [ fs 2 S j (s root ; s) 2 create M 0 ffi ( p (p M 0 )) fl g To show that M is indeed a model one can proceed as in <ref> [16] </ref>. We now prove that if has a tuple-admissible model M in which each name-formula is true in exactly one state, then S 6j= q q 0 . <p> To show that M is indeed a model of we use the same technique as in <ref> [16] </ref>, although in this case the proof is much simpler.
Reference: [17] <author> Guozhu Dong and Jianwen Su. </author> <title> Conjunctive query containment with respect to views and constraints. </title> <journal> Information Processing Letters, </journal> <volume> 57(2) </volume> <pages> 95-102, </pages> <year> 1996. </year>
Reference-contexts: Query containment under constraints has also been the subject of several investigations. For example, decidability of conjunctive query containment was investigated in [4] under functional and multi-valued dependencies, in [14] under functional and inclusion dependencies, in [9, 28, 30] under constraints representing is-a hierarchies and complex objects, and in <ref> [17] </ref> in the case of constraints represented as Datalog programs. In this paper we address query containment in a setting where: * The schema is constituted by concepts (unary relations) and relations as basic elements, and by a set of constraints expressed in a logic-based formalism.
Reference: [18] <author> Francesco M. Donini, Maurizio Lenzerini, Daniele Nardi, and Andrea Schaerf. AL-log: </author> <title> integrating data-log and description logics. </title> <journal> J. of Intelligent Information Systems, </journal> <note> 1998. To appear. </note>
Reference-contexts: We observe that the atoms in the queries are arbitrary DLR reg relations and concepts, freely used in the assertions of the schema. This distinguishes our approach with respect to <ref> [18, 28] </ref>, where no constraints can be expressed in the schema on the relations that appear in the queries.
Reference: [19] <author> M. Fattorosi-Barnaba and F. De Caro. </author> <title> Graded modalities I. </title> <journal> Studia Logica, </journal> <volume> 44 </volume> <pages> 197-221, </pages> <year> 1985. </year>
Reference-contexts: Since then PDLs have been studied extensively and extended in several ways (see e.g. [27] for a survey). Here, we make use of cpdl g (studied in [16] in the context of description logics), which is an extension of Converse PDL [27] with graded modalities <ref> [19] </ref>.
Reference: [20] <author> Michael J. Fischer and Richard E. Ladner. </author> <title> Propositional dynamic logic of regular programs. </title> <journal> J. of Computer and System Sciences, </journal> <volume> 18 </volume> <pages> 194-211, </pages> <year> 1979. </year>
Reference-contexts: This holds even in the case where the schema does not contain regular expressions. Indeed, the formulas used in the EXPTIME-hardness proof of satisfiability in PDL <ref> [20] </ref>, can be expressed as assertions in DLR reg not involving regular expressions. We point out that DLR reg supports only special forms of functional and inclusion dependencies. <p> ) ^ :SOLD (y; w 1 ; w 2 ) ^ (CONTROLSj $1;$2 t CONTROLSj $2;$1 ) fl (x; y) which is unsatisfiable. 3 The Propositional Dynamic Logic cpdl g Propositional Dynamic Logics are specific modal logics orig inally proposed as a formal system for reasoning about computer program schemas <ref> [20] </ref>. Since then PDLs have been studied extensively and extended in several ways (see e.g. [27] for a survey). Here, we make use of cpdl g (studied in [16] in the context of description logics), which is an extension of Converse PDL [27] with graded modalities [19].
Reference: [21] <author> A. Gupta and I. S. Mumick. </author> <title> Maintenance of materialized views: Problems, techniques, </title> <journal> and applications. IEEE Bulletin of the Technical Committee on Data Engineering, </journal> <volume> 18(2) </volume> <pages> 3-18, </pages> <year> 1995. </year>
Reference-contexts: Many recent papers point out that this problem is important in several contexts, including information integration [33], query optimization [2, 3], (mate 1 We refer to the set semantics of query containment. Bag semantics is studied, for example, in [25]. rialized) view maintenance <ref> [21] </ref>, data warehousing [36], and constraint checking [22]. We deal with the problem of query containment under constraints, i.e. the one of checking whether containment between two queries holds for every database satisfying a given set of constraints.
Reference: [22] <author> A. Gupta, Y. Sagiv, J.D. Ullman, and J. Widom. </author> <title> Constraint checking with partial information. </title> <booktitle> In Proc. of the 13th ACM SIGACT SIGMOD SIGART Sym. on Principles of Database Systems (PODS-94), </booktitle> <year> 1994. </year>
Reference-contexts: Bag semantics is studied, for example, in [25]. rialized) view maintenance [21], data warehousing [36], and constraint checking <ref> [22] </ref>. We deal with the problem of query containment under constraints, i.e. the one of checking whether containment between two queries holds for every database satisfying a given set of constraints. This problem is relevant in every situation where the database schema is specified with a rich data definition language.
Reference: [23] <author> David Harel. </author> <title> Recurring dominoes: Making the highly undecidable highly understandable. </title> <journal> Annals of Discrete Mathematics, </journal> <volume> 24 </volume> <pages> 51-72, </pages> <year> 1985. </year>
Reference-contexts: As shown in <ref> [23] </ref>, the tiling problem is well suited to show undecidability of variants of modal and dynamic logics, and the difficult part of the proof usually consists in enforcing that the tiles lie on an integer grid. To this end we exploit a query containing one inequality.
Reference: [24] <author> Richard Hull. </author> <title> Managing semantic heterogeneity in databases: A theoretical perspective. </title> <booktitle> In Proc. of the 16th ACM SIGACT SIGMOD SIGART Sym. on Principles of Database Systems (PODS-97), </booktitle> <year> 1997. </year>
Reference-contexts: In particular in the case of information integration, queries are to be compared relatively to (inter-schema) constraints, which are used to declaratively specify the "glue" between two source schemas, and between one source schema and the global schema <ref> [7, 24, 33, 8, 29] </ref>. The complexity of query containment in the absence of constraints has been studied in various settings.
Reference: [25] <author> Yannis E. Ioannidis and Raghu Ramakrishnan. </author> <title> Containment of conjunctive queries: Beyond relations as sets. </title> <journal> ACM Trans. on Database Systems, </journal> <volume> 20(3) </volume> <pages> 288-324, </pages> <year> 1995. </year>
Reference-contexts: Many recent papers point out that this problem is important in several contexts, including information integration [33], query optimization [2, 3], (mate 1 We refer to the set semantics of query containment. Bag semantics is studied, for example, in <ref> [25] </ref>. rialized) view maintenance [21], data warehousing [36], and constraint checking [22]. We deal with the problem of query containment under constraints, i.e. the one of checking whether containment between two queries holds for every database satisfying a given set of constraints.
Reference: [26] <author> Anthony C. Klug. </author> <title> On conjunctive queries containing inequalities. </title> <journal> J. of the ACM, </journal> <volume> 35(1) </volume> <pages> 146-160, </pages> <year> 1988. </year>
Reference-contexts: In [10], NP-completeness has been established for conjunctive queries, and in [13] a multi-parameter analysis has been performed for the same case, showing that the intractability is due to certain types of cycles in the queries. In <ref> [26, 34] </ref>, p 2 - completeness of containment of conjunctive queries with inequalities was proved, and in [32] the case of queries with the union and difference operators was studied. For various classes of Datalog queries with inequalities, decidability and undecidability results were presented in [12] and [34], respectively.
Reference: [27] <author> Dexter Kozen and Jerzy Tiuryn. </author> <title> Logics of programs. </title> <editor> In J. Van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science Formal Models and Semantics, </booktitle> <pages> pages 789-840. </pages> <publisher> Elsevier Science Publishers (North-Holland), </publisher> <address> Amsterdam, </address> <year> 1990. </year>
Reference-contexts: Since then PDLs have been studied extensively and extended in several ways (see e.g. <ref> [27] </ref> for a survey). Here, we make use of cpdl g (studied in [16] in the context of description logics), which is an extension of Converse PDL [27] with graded modalities [19]. <p> Since then PDLs have been studied extensively and extended in several ways (see e.g. <ref> [27] </ref> for a survey). Here, we make use of cpdl g (studied in [16] in the context of description logics), which is an extension of Converse PDL [27] with graded modalities [19].
Reference: [28] <author> Alon Y. Levy and Marie-Christine Rousset. CARIN: </author> <title> A representation language combining Horn rules and description logics. </title> <booktitle> In Proc. of the 12th European Conf. on Artificial Intelligence (ECAI-96), </booktitle> <pages> pages 323-327, </pages> <year> 1996. </year>
Reference-contexts: Query containment under constraints has also been the subject of several investigations. For example, decidability of conjunctive query containment was investigated in [4] under functional and multi-valued dependencies, in [14] under functional and inclusion dependencies, in <ref> [9, 28, 30] </ref> under constraints representing is-a hierarchies and complex objects, and in [17] in the case of constraints represented as Datalog programs. <p> We observe that the atoms in the queries are arbitrary DLR reg relations and concepts, freely used in the assertions of the schema. This distinguishes our approach with respect to <ref> [18, 28] </ref>, where no constraints can be expressed in the schema on the relations that appear in the queries.
Reference: [29] <author> Alon Y. Levy, Divesh Srivastava, and Thomas Kirk. </author> <title> Data model and query evaluation in global information systems. </title> <journal> J. of Intelligent Information Systems, </journal> <volume> 5 </volume> <pages> 121-143, </pages> <year> 1995. </year>
Reference-contexts: In particular in the case of information integration, queries are to be compared relatively to (inter-schema) constraints, which are used to declaratively specify the "glue" between two source schemas, and between one source schema and the global schema <ref> [7, 24, 33, 8, 29] </ref>. The complexity of query containment in the absence of constraints has been studied in various settings.
Reference: [30] <author> Alon Y. Levy and Dan Suciu. </author> <title> Deciding containment for queries with complex objects. </title> <booktitle> In Proc. of the 16th ACM SIGACT SIGMOD SIGART Sym. on Principles of Database Systems (PODS-97), </booktitle> <pages> pages 20-31, </pages> <year> 1997. </year>
Reference-contexts: Query containment under constraints has also been the subject of several investigations. For example, decidability of conjunctive query containment was investigated in [4] under functional and multi-valued dependencies, in [14] under functional and inclusion dependencies, in <ref> [9, 28, 30] </ref> under constraints representing is-a hierarchies and complex objects, and in [17] in the case of constraints represented as Datalog programs.
Reference: [31] <author> John C. Mitchell. </author> <title> The implication problem for functional and inclusion dependencies. </title> <journal> Information and Control, </journal> <volume> 56 </volume> <pages> 154-173, </pages> <year> 1983. </year>
Reference-contexts: We point out that DLR reg supports only special forms of functional and inclusion dependencies. Hence the undecidability result of implication for (general) functional and inclusion dependencies taken together, shown independently in <ref> [31, 11] </ref>, does not apply. 2.2 Queries A query q for a DLR reg schema is a non-recursive Datalog query, written in the form: q ( ~ x) body 1 ( ~ x; ~ y 1 ; ~ c 1 ) _ _ body m ( ~ x; ~ y m
Reference: [32] <author> Y. Sagiv and M. Yannakakis. </author> <title> Equivalences among relational expressions with the union and difference operators. </title> <journal> J. of the ACM, </journal> <volume> 27(4) </volume> <pages> 633-655, </pages> <year> 1980. </year>
Reference-contexts: In [26, 34], p 2 - completeness of containment of conjunctive queries with inequalities was proved, and in <ref> [32] </ref> the case of queries with the union and difference operators was studied. For various classes of Datalog queries with inequalities, decidability and undecidability results were presented in [12] and [34], respectively. Query containment under constraints has also been the subject of several investigations.
Reference: [33] <author> Jeffrey D. Ullman. </author> <title> Information integration using logical views. </title> <booktitle> In Proc. of the 6th Int. Conf. on Database Theory (ICDT-97), number 1186 in Lecture Notes in Computer Science, </booktitle> <pages> pages 19-40. </pages> <publisher> Springer-Verlag, </publisher> <year> 1997. </year>
Reference-contexts: 1 Introduction Query containment is the problem of checking whether for every database, the result of one query is a subset of the result of another query 1 . Many recent papers point out that this problem is important in several contexts, including information integration <ref> [33] </ref>, query optimization [2, 3], (mate 1 We refer to the set semantics of query containment. Bag semantics is studied, for example, in [25]. rialized) view maintenance [21], data warehousing [36], and constraint checking [22]. <p> In particular in the case of information integration, queries are to be compared relatively to (inter-schema) constraints, which are used to declaratively specify the "glue" between two source schemas, and between one source schema and the global schema <ref> [7, 24, 33, 8, 29] </ref>. The complexity of query containment in the absence of constraints has been studied in various settings.
Reference: [34] <author> Ron van der Meyden. </author> <title> The Complexity of Querying Indefinite Information. </title> <type> PhD thesis, </type> <institution> Rutgers University, </institution> <year> 1992. </year>
Reference-contexts: In [10], NP-completeness has been established for conjunctive queries, and in [13] a multi-parameter analysis has been performed for the same case, showing that the intractability is due to certain types of cycles in the queries. In <ref> [26, 34] </ref>, p 2 - completeness of containment of conjunctive queries with inequalities was proved, and in [32] the case of queries with the union and difference operators was studied. For various classes of Datalog queries with inequalities, decidability and undecidability results were presented in [12] and [34], respectively. <p> In [26, 34], p 2 - completeness of containment of conjunctive queries with inequalities was proved, and in [32] the case of queries with the union and difference operators was studied. For various classes of Datalog queries with inequalities, decidability and undecidability results were presented in [12] and <ref> [34] </ref>, respectively. Query containment under constraints has also been the subject of several investigations.
Reference: [35] <author> Moshe Y. Vardi and Pierre Wolper. </author> <title> Automata-theoretic techniques for modal logics of programs. </title> <journal> J. of Computer and System Sciences, </journal> <volume> 32 </volume> <pages> 183-221, </pages> <year> 1986. </year> <note> A preliminary version appeared in Proc. of the 16th ACM SIGACT Symp. on Theory of Computing (STOC-84). </note>
Reference-contexts: Then deciding whether S j= q q 0 can be done in time O (2 p (jSj` ` 2 1 )) ), where jSj, ` 1 , and ` 2 are as in Theorem 1. 5 This means that can be viewed as a Converse Deterministic PDL formula <ref> [35] </ref>. Proof (sketch). Soundness of the encoding and complexity: As in Theorem 1. Completeness of the encoding: satisfiable implies S 6j= q q 0 . We first prove that if is satisfiable it admits a tuple-admissible model in which each name-formula is true in exactly one state.
Reference: [36] <author> Jennifer Widom. </author> <title> Special issue on materialized views and data warehousing. </title> <journal> IEEE Bulletin on Data Engineering, </journal> <volume> 18(2), </volume> <year> 1995. </year>
Reference-contexts: Many recent papers point out that this problem is important in several contexts, including information integration [33], query optimization [2, 3], (mate 1 We refer to the set semantics of query containment. Bag semantics is studied, for example, in [25]. rialized) view maintenance [21], data warehousing <ref> [36] </ref>, and constraint checking [22]. We deal with the problem of query containment under constraints, i.e. the one of checking whether containment between two queries holds for every database satisfying a given set of constraints.
References-found: 36

