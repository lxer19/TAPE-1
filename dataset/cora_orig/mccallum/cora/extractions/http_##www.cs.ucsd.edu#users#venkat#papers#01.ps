URL: http://www.cs.ucsd.edu/users/venkat/papers/01.ps
Refering-URL: http://www.cs.ucsd.edu/users/venkat/
Root-URL: http://www.cs.ucsd.edu
Email: E-mail: gemmell@cs.sfu.ca  E-mail: vin@cs.utexas.edu  E-mail: kandlur@watson.ibm.com  E-mail: venkat@cs.ucsd.edu  
Title: Multimedia Storage Servers: A Tutorial and Survey  
Author: D. James Gemmell Harrick M. Vin Dilip D. Kandlur P. Venkat Rangan 
Note: Citation: To appear in IEEE Computer, 1995 This research was supported in part by the National Science Foundation (Research Initiation Award CCR-9409666), NASA,  
Address: UT Austin  San Diego  
Affiliation: Department of Computer Science, Simon Fraser University  Department of Computer Sciences,  IBM T.J. Watson Research Center  Department of Computer Science and Engineering, UC  Mitsubishi Electric Research Laboratories (MERL), Sun Microsystems Inc., and the University of Texas at Austin.  
Abstract-found: 0
Intro-found: 1
Reference: [1] <institution> Microsoft Unveils Video Software. AP News, </institution> <month> May 17, </month> <year> 1994. </year>
Reference-contexts: The SHARK multimedia server is a stream server. It runs on the RS/6000 - AIX platform and uses its own file system [11] to ensure continuous throughput from the disk subsystem. Microsoft's TIGER video server uses a collection of PCs to construct a scalable server <ref> [1] </ref>. It uses striping to distribute segments of a movie across the collection of servers to balance the access load across the servers. It also uses replication at the segment level as a mechanism for fault-tolerance. Oracle's Media Server is based on the NCube massively parallel computer.
Reference: [2] <editor> IEEE Communications Magazine, </editor> <volume> vol. 32, no. 5, </volume> <month> May </month> <year> 1994. </year> <title> feature topic on video on demand. </title>
Reference-contexts: Similarly, the concept of an on-demand digital video server, which provides services similar to a neighborhood video tape rental store over a metropolitan area network, has attracted wide attention <ref> [2] </ref>. Consequently, low-level design of multimedia storage servers has become the focus of several research projects in the recent past [3, 8, 9, 24, 31, 35, 37].
Reference: [3] <author> D. Anderson, Y. Osawa, and R. Govindan. </author> <title> A File System for Continuous Media. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 10(4) </volume> <pages> 311-337, </pages> <month> November </month> <year> 1992. </year>
Reference-contexts: Similarly, the concept of an on-demand digital video server, which provides services similar to a neighborhood video tape rental store over a metropolitan area network, has attracted wide attention [2]. Consequently, low-level design of multimedia storage servers has become the focus of several research projects in the recent past <ref> [3, 8, 9, 24, 31, 35, 37] </ref>. The main goal of this paper is to provide an overview of the various issues involved in designing a digital multimedia storage server, and present algorithms for addressing the specific storage and retrieval requirements of digital multimedia. <p> Although semantically different, both of these operations have been shown to be mathematically equivalent with respect to their real-time performance requirements <ref> [3] </ref>. Consequently, for the sake of clarity, we will only discuss techniques for retrieving media information from disk for real-time playback. Analysis for real-time recording can be carried out similarly. <p> This means that on a round-by-round basis, the production of data never falls behind the consumption, and there is never a net decrease in the amount of buffered data. Algorithms having this property have been referred to as workahead-augmenting <ref> [3] </ref> or buffer-conserving [8]. It is also conceivable that an algorithm may be developed which proceeds in rounds, but is not buffer-conserving. Such an algorithm would allow production to fall behind consumption in one round, and then make up for it in a later round. <p> However, the major drawback of round robin scheduling is that it, like EDF, does not exploit the relative positions of the media blocks being retrieved during a round <ref> [3, 24] </ref>. For this reason, data placement algorithms which inherently reduce latencies are sometime used in conjunction with round-robin (e.g. contiguous or constrained placement).
Reference: [4] <author> M. Baugher et al. </author> <title> A multimedia client to the IBM LAN Server. </title> <booktitle> ACM Multimedia '93, </booktitle> <pages> pp. 105-112, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: They are designed for applications such as on-site training, information kiosks, etc. and the multimedia files consist of short video clips. They can also be used as small-scale video servers for environments such as hotels and conference centers. For example, the IBM LANServer Ultimedia product <ref> [4] </ref> can serve 40 clients at MPEG-1 rates. This product extends the capabilities of the LANServer file system to support for multimedia streams, using file-system oriented client interface. Other systems in this class include FluentLinks, ProtoComm, and Starworks [31] (which uses a stream-oriented client interface).
Reference: [5] <author> Ming-Syan Chen, Dilip D. Kandlur, and Philip S. Yu. </author> <title> Support For Fully Interactive Playout in a Disk-Array-Based Video Server. </title> <booktitle> In Proceedings of the ACM Multimedia'94, </booktitle> <address> San Francisco, </address> <month> October </month> <year> 1994. </year>
Reference-contexts: For example, the I and P frames of MPEG are much larger than the average frame size. These means that the data rate required during FF operation would be higher than the normal rate. Chen, Kandlur, and Yu <ref> [5] </ref> present a different solution for FF operations on MPEG video files. Their method performs block skipping using an intelligent arrangement of blocks (called segments) that takes into account the inter-frame dependencies of the compressed video.
Reference: [6] <author> R. L. Cruz. </author> <title> A Calculas for Network Delay and a Note on Topologies of Interconnection Networks. </title> <type> Ph.D. Dissertation, Report no. </type> <institution> UILU-ENG-87-2246, University of Illinois, </institution> <year> 1987. </year>
Reference-contexts: For instance, data Multimedia Storage Servers: A Tutorial and Survey 8 rate requirements of a continuous media stream can be modeled as a linear bounded arrival process <ref> [6] </ref>. It is also possible that when variable rate data is stored, a complete and accurate description of the rate changes could be computed, so that the server could use the information during playback to reserve only the required amount of server resources.
Reference: [7] <author> D. Ferrari and D. C. Verma. </author> <title> A Scheme for Real-Time Channel Establishment in Wide-Area Networks. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 8(3) </volume> <pages> 368-379, </pages> <month> April </month> <year> 1990. </year>
Reference-contexts: audio 1.4 Mbits/sec (2 channels, 16 bit samples at 44.1 kHz) NTSC quality video 8.7 MBytes/sec (640 X 480 pixels, 8 bits/pixel) HDTV quality video 351 MBytes/sec (1024 X 2000 pixels/frame, 24 bits/pixel) Table 1 : Storage space requirements for uncompressed digital multimedia data of media quanta are well documented <ref> [7, 13, 22] </ref>, in this paper, we will focus only on the design of multimedia storage servers. Traditionally, storage severs have been designed to provide efficient access to textual and numeric data. <p> Much of the work regarding exploiting statistical variations is intended for network congestion control. However, such work is equally applicable to statistical variations in server access times. Ferrari et al. have proposed three levels of quality of service (QOS) <ref> [7] </ref>: 1. Deterministic: all deadlines are guaranteed to be met. For this level of service the admission control algorithm considers worst-case scenarios in admitting new clients. 2. Statistical: deadlines are guaranteed to be met with a certain probability.
Reference: [8] <author> D. James Gemmell and Jiawei Han. </author> <title> Multimedia Network File Servers:Multi-Channel Delay Sensitive Data Retrieval. </title> <journal> Multimedia Systems, </journal> <volume> 1(6) </volume> <pages> 240-252, </pages> <year> 1994. </year> <title> Multimedia Storage Servers: A Tutorial and Survey 16 </title>
Reference-contexts: Similarly, the concept of an on-demand digital video server, which provides services similar to a neighborhood video tape rental store over a metropolitan area network, has attracted wide attention [2]. Consequently, low-level design of multimedia storage servers has become the focus of several research projects in the recent past <ref> [3, 8, 9, 24, 31, 35, 37] </ref>. The main goal of this paper is to provide an overview of the various issues involved in designing a digital multimedia storage server, and present algorithms for addressing the specific storage and retrieval requirements of digital multimedia. <p> This means that on a round-by-round basis, the production of data never falls behind the consumption, and there is never a net decrease in the amount of buffered data. Algorithms having this property have been referred to as workahead-augmenting [3] or buffer-conserving <ref> [8] </ref>. It is also conceivable that an algorithm may be developed which proceeds in rounds, but is not buffer-conserving. Such an algorithm would allow production to fall behind consumption in one round, and then make up for it in a later round. However, this would necessarily be more complex. <p> However, SCAN's rounds will be shorter, so there is a trade-off between round length and the number of rounds between successive service. To exploit this tradeoff, a generalization, referred to as the Grouped Sweeping Scheme (GSS), was developed by Yu et al. [38], and by Gemmell and Han <ref> [8] </ref>. The GSS algorithm partitions each round into a number of groups. Each client is assigned to a certain group, and the groups are serviced in a fixed order in each round. For each group, the SCAN disk scheduling algorithm is employed. <p> If an algorithm like SCAN is used, which orders blocks regardless of the stream they belong to, then the impact of constrained placement is marginal <ref> [8] </ref>. A form of constrained placement was studied by Yu et al. [36]. In their analysis, the separation between each pair of successive blocks was fixed in order to eliminate burstiness in data transfer from disk.
Reference: [9] <author> J. Gemmell and S. Christodoulakis. </author> <title> Principles of Delay Sensitive Multimedia Data Storage and Retrieval. </title> <journal> ACM Transactions on Information Systems, </journal> <volume> 10(1) </volume> <pages> 51-90, </pages> <year> 1992. </year>
Reference-contexts: Similarly, the concept of an on-demand digital video server, which provides services similar to a neighborhood video tape rental store over a metropolitan area network, has attracted wide attention [2]. Consequently, low-level design of multimedia storage servers has become the focus of several research projects in the recent past <ref> [3, 8, 9, 24, 31, 35, 37] </ref>. The main goal of this paper is to provide an overview of the various issues involved in designing a digital multimedia storage server, and present algorithms for addressing the specific storage and retrieval requirements of digital multimedia. <p> Consequently, information retrieved from the disk may have to be buffered prior to playback. Therefore, the challenge for the server is to keep enough data in client buffers at all times so as to ensure that the playback processes do not starve <ref> [9] </ref>. In the simplest case, continuous playback can be ensured by buffering the entire stream prior to initiating the playback. Such a scheme, however, will require very large buffer space and may also yield a very large latency for initiating playback. <p> It has been shown that these two minimization problems are, in fact, one and the same minimizing one will minimize the other <ref> [9] </ref>.
Reference: [10] <author> S. Gibbs, D. Tsichritzis, A. Fitas, D. Konstantas, and Y. Yeorgaroudakis. </author> <title> Muse: A Multi-Media Filing System. </title> <journal> IEEE Software, </journal> <volume> 4(2) </volume> <pages> 4-15, </pages> <month> March </month> <year> 1987. </year>
Reference-contexts: Traditionally, storage severs have been designed to provide efficient access to textual and numeric data. The first wave of multimedia research widened the scope of such storage servers to include documents containing images (e.g., the Diamond system [30] and the Muse system <ref> [10] </ref>). The next wave of multimedia research involved the addition of analog transmission and storage of audio and video.
Reference: [11] <author> R. Haskin. </author> <title> The SHARK continuous media file server. </title> <booktitle> Proc. CompCon, </booktitle> <pages> pp. 12-15, </pages> <year> 1993. </year>
Reference-contexts: High-end video servers are based on collections of powerful workstations (IBM, DEC, Silicon Graphics, Oracle/NCube) or mainframe computers (IBM). The SHARK multimedia server is a stream server. It runs on the RS/6000 - AIX platform and uses its own file system <ref> [11] </ref> to ensure continuous throughput from the disk subsystem. Microsoft's TIGER video server uses a collection of PCs to construct a scalable server [1]. It uses striping to distribute segments of a movie across the collection of servers to balance the access load across the servers.
Reference: [12] <author> M. G. Kienzle, D. Sitaram, and W. H. Tetzlaff. </author> <title> Using a storage hierarchy in movie-on-demand servers. </title>
Reference-contexts: A relatively small set of frequently Multimedia Storage Servers: A Tutorial and Survey 11 requested movies are placed on disks, and the large set of less frequently requested movies are stored in optical jukeboxes or tape libraries, which are used as the secondary storage devices <ref> [12] </ref>. In this storage hierarchy, the disk system may be used as a staging area (cache) for the secondary storage devices.
Reference: [13] <author> T.D.C. Little and A. Ghafoor. </author> <title> Spatio-Temporal Composition of Distributed Multimedia Objects for Value-Added Networks. </title> <journal> IEEE Computer Special Issue on Multimedia Information Systems, </journal> <volume> 24(10) </volume> <pages> 42-50, </pages> <month> October </month> <year> 1991. </year>
Reference-contexts: audio 1.4 Mbits/sec (2 channels, 16 bit samples at 44.1 kHz) NTSC quality video 8.7 MBytes/sec (640 X 480 pixels, 8 bits/pixel) HDTV quality video 351 MBytes/sec (1024 X 2000 pixels/frame, 24 bits/pixel) Table 1 : Storage space requirements for uncompressed digital multimedia data of media quanta are well documented <ref> [7, 13, 22] </ref>, in this paper, we will focus only on the design of multimedia storage servers. Traditionally, storage severs have been designed to provide efficient access to textual and numeric data.
Reference: [14] <author> C.L. Liu and J.W. Layland. </author> <title> Scheduling Algorithms for Multiprocessing in a Hard-Real Time Environment. </title> <journal> JACM, </journal> <volume> 20 </volume> <pages> 46-61, </pages> <month> January </month> <year> 1973. </year>
Reference-contexts: The addition of real-time constraints, however, make direct application of traditional disk scheduling algorithms inappropriate for multimedia servers. Techniques for scheduling real-time tasks have also been extensively studied in the literature <ref> [14, 21, 39] </ref>. The best known algorithm for real-time scheduling of tasks with deadlines is the Earliest Deadline First (EDF) algorithm. In this algorithm, after accessing a media block from disk, the media block with the earliest deadline is scheduled for retrieval.
Reference: [15] <author> Philip Lougher and Doug Shepherd. </author> <title> The Design of a Storage Server for Continuous Media. </title> <journal> The Computer Journal, </journal> <volume> 36(1) </volume> <pages> 32-42, </pages> <year> 1993. </year>
Reference-contexts: A different approach to the problem of seek reduction comes from the adaptation of log-structured file systems <ref> [15, 18] </ref>. When modifying blocks of data, log-structured systems do not store modified blocks in their original positions. Instead, all writes for all clients are performed sequentially in a large contiguous free space.
Reference: [16] <author> W. E. Mackay and G. Davenport. </author> <title> Virtual Video Editing in Interactive Multimedia Applications. </title> <journal> Communications of the ACM, </journal> <volume> 32(7) </volume> <pages> 802-810, </pages> <month> July </month> <year> 1989. </year>
Reference-contexts: Examples of these include the Etherphone project at Xerox PARC, which provided video recording and retrieval services using analog storage devices and cable-TV style distribution network [23], and the work by Mackay and Davenport which supports video filing on consumer electronic devices <ref> [16] </ref>. Experience with such systems, coupled with the recent breakthroughs in multimedia technology, has aroused tremendous interest in designing storage servers for digital multimedia.
Reference: [17] <author> G. Miller, G. Baber, and M. Gilliland. </author> <title> News On-Demand for Multimedia Networks. </title> <booktitle> In Proceedings of ACM Multimedia'93, </booktitle> <address> Anaheim, CA, </address> <pages> pages 383-392, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: The architecture of such services will consist of multimedia storage servers that are connected to client sites via high-speed networks <ref> [17] </ref>. Clients of such a service will be permitted to retrieve multimedia objects from the server for real-time playback at their respective sites.
Reference: [18] <author> John Ousterhout and Fred Douglis. </author> <title> Beating the I/O Bottleneck: A case for Log-Structured File Systems. </title> <journal> Operating Systems Review, </journal> <volume> 23(1) </volume> <pages> 11-28, </pages> <year> 1989. </year>
Reference-contexts: A different approach to the problem of seek reduction comes from the adaptation of log-structured file systems <ref> [15, 18] </ref>. When modifying blocks of data, log-structured systems do not store modified blocks in their original positions. Instead, all writes for all clients are performed sequentially in a large contiguous free space.
Reference: [19] <author> A. Park and P. </author> <title> English. A Variable Rate Strategy for Retrieving Audio Data From Secondary Storage. </title> <booktitle> In Proceedings of the International Conference on Multimedia Information Systems '91. </booktitle> <publisher> McGraw Hill, </publisher> <year> 1991. </year>
Reference-contexts: A significant departure from these simplistic schemes are techniques which dynamically vary the resolution levels so as to adjust to the overloaded system state. For instance, Park and English <ref> [19] </ref> have proposed that during heavy network congestion, the quality of audio being delivered can be degraded simply by transmitting only the higher order bits.
Reference: [20] <author> D. Patterson, G. Gibson, and R. Katz. </author> <title> A Case for Redundant Array of Inexpensive Disks (RAID). </title> <booktitle> ACM SIGMOD'88, </booktitle> <pages> pages 109-116, </pages> <month> June </month> <year> 1988. </year>
Reference-contexts: This scattering can be achieved using two techniques: data striping and data interleaving. Data Striping RAID (redundant array of inexpensive disks) technology has popularized the use of parallel access to an array of disks <ref> [20] </ref>. Under the RAID scheme, data is striped across each disk. Physical sector 1 of each disk is accessed in parallel as a large logical sector 1.
Reference: [21] <author> K. Ramamritham and J.A. Stankovic. </author> <title> Dynamic Task Scheduling in Distributed Real-Time Systems. </title> <journal> IEEE Software, </journal> <volume> 1, </volume> <month> July </month> <year> 1984. </year>
Reference-contexts: The addition of real-time constraints, however, make direct application of traditional disk scheduling algorithms inappropriate for multimedia servers. Techniques for scheduling real-time tasks have also been extensively studied in the literature <ref> [14, 21, 39] </ref>. The best known algorithm for real-time scheduling of tasks with deadlines is the Earliest Deadline First (EDF) algorithm. In this algorithm, after accessing a media block from disk, the media block with the earliest deadline is scheduled for retrieval.
Reference: [22] <author> Srinivas Ramanathan and P. Venkat Rangan. </author> <title> Adaptive Feedback Techniques for Synchronized Multimedia Retrieval over Integrated Networks. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 1(2) </volume> <pages> 246-260, </pages> <month> April </month> <year> 1993. </year>
Reference-contexts: audio 1.4 Mbits/sec (2 channels, 16 bit samples at 44.1 kHz) NTSC quality video 8.7 MBytes/sec (640 X 480 pixels, 8 bits/pixel) HDTV quality video 351 MBytes/sec (1024 X 2000 pixels/frame, 24 bits/pixel) Table 1 : Storage space requirements for uncompressed digital multimedia data of media quanta are well documented <ref> [7, 13, 22] </ref>, in this paper, we will focus only on the design of multimedia storage servers. Traditionally, storage severs have been designed to provide efficient access to textual and numeric data.
Reference: [23] <author> P. Venkat Rangan and D. C. Swinehart. </author> <title> Software Architecture for Integration of Video Services in the Etherphone Environment. </title> <journal> IEEE Journal on Selected Areas in Communication, </journal> <volume> 9(9) </volume> <pages> 1395-1404, </pages> <month> December </month> <year> 1991. </year>
Reference-contexts: The next wave of multimedia research involved the addition of analog transmission and storage of audio and video. Examples of these include the Etherphone project at Xerox PARC, which provided video recording and retrieval services using analog storage devices and cable-TV style distribution network <ref> [23] </ref>, and the work by Mackay and Davenport which supports video filing on consumer electronic devices [16]. Experience with such systems, coupled with the recent breakthroughs in multimedia technology, has aroused tremendous interest in designing storage servers for digital multimedia.
Reference: [24] <author> P. Venkat Rangan and Harrick M. Vin. </author> <title> Designing File Systems for Digital Video and Audio. </title> <booktitle> In Proceedings of the 13th Symposium on Operating Systems Principles (SOSP'91), Operating Systems Review, </booktitle> <volume> Vol. 25, No. 5, </volume> <pages> pages 81-94, </pages> <month> October </month> <year> 1991. </year> <title> Multimedia Storage Servers: A Tutorial and Survey 17 </title>
Reference-contexts: Similarly, the concept of an on-demand digital video server, which provides services similar to a neighborhood video tape rental store over a metropolitan area network, has attracted wide attention [2]. Consequently, low-level design of multimedia storage servers has become the focus of several research projects in the recent past <ref> [3, 8, 9, 24, 31, 35, 37] </ref>. The main goal of this paper is to provide an overview of the various issues involved in designing a digital multimedia storage server, and present algorithms for addressing the specific storage and retrieval requirements of digital multimedia. <p> However, the major drawback of round robin scheduling is that it, like EDF, does not exploit the relative positions of the media blocks being retrieved during a round <ref> [3, 24] </ref>. For this reason, data placement algorithms which inherently reduce latencies are sometime used in conjunction with round-robin (e.g. contiguous or constrained placement).
Reference: [25] <author> P. Venkat Rangan and Harrick M. Vin. </author> <title> Efficient Storage Techniques for Digital Continuous Multimedia. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 5(4) </volume> <pages> 564-573, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: If more than one block would be required to prevent starvation prior to the next read, then intra-file seeks are a necessity. Instead of avoiding intra-file seeks, another approach is to attempt to reduce them to a reasonable bound. This is referred to as the constrained placement approach <ref> [25] </ref>. Constrained placement systems ensure that the separation between successive blocks of a file are bounded. However, it does not do this for each pair of successive blocks, but only on average over a finite sequence of blocks. Thus, the latency due to intra-file seeks is constrained.
Reference: [26] <author> A.L. Narasimha Reddy and J. Wyllie. </author> <title> I/O Issues in a Multimedia System. </title> <journal> COMPUTER, </journal> <volume> 27(3) </volume> <pages> 69-74, </pages> <year> 1994. </year>
Reference-contexts: If SCAN scheduling is utilized during each round of retrieval, seek latencies can be minimized. One variant of this basic algorithm combines SCAN with EDF, and is referred to as the SCAN-EDF scheduling algorithm <ref> [26] </ref>. As per the SCAN-EDF algorithm, request with earliest deadlines are served first. However, if several requests have the same deadline, then their respective blocks are accessed using the SCAN disk scheduling algorithm. Clearly, the effectiveness of the SCAN-EDF technique is dependent on how many requests have the same deadline. <p> To address this limitation, Reddy and Wyllie have proposed a modification of SCAN-EDF, which enables the server to service non real-time requests immediately after the next real-time request <ref> [26] </ref>. With the GSS scheme, on the other hand, one or more groups may be dedicated to non real-time requests.
Reference: [27] <author> Richard Staehli and Jonathon Walpole. </author> <title> Constrained-Latency Storage Access. </title> <journal> COMPUTER, </journal> <volume> 26(3) </volume> <pages> 44-53, </pages> <month> March </month> <year> 1993. </year>
Reference-contexts: The use of models and descriptions of variable rate media is a subject of on-going research <ref> [27, 33] </ref>. For best effort traffic, there are different strategies for dealing with missed deadlines. For example, it may be desirable not to skip any blocks of data so as to ensure that the information received is intelligible.
Reference: [28] <author> T. Teorey and T. B. Pinkerton. </author> <title> A Comparative Analysis of Disk Scheduling Policies. </title> <journal> Communications of the ACM, </journal> <volume> 15(3) </volume> <pages> 177-184, </pages> <month> March </month> <year> 1972. </year>
Reference-contexts: during each round. 2.2 Disk Scheduling Algorithms Traditionally, disk scheduling algorithms (e.g., first come first served (FCFS), shortest seek time first (SSTF), SCAN, etc.) have been employed by servers to reduce the seek time and rotational latency, to achieve a high throughput, and to provide fair access to each client <ref> [28] </ref>. The addition of real-time constraints, however, make direct application of traditional disk scheduling algorithms inappropriate for multimedia servers. Techniques for scheduling real-time tasks have also been extensively studied in the literature [14, 21, 39].
Reference: [29] <author> D.B. Terry and D.C. Swinehart. </author> <title> Managing Stored Voice in the Etherphone System. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 6(1) </volume> <pages> 3-27, </pages> <month> February </month> <year> 1988. </year>
Reference-contexts: A media stream, no part of which is referred to by any multimedia object, can be deleted to reclaim its storage space. A garbage collection algorithm such as the one presented by Terry and Swinehart in the Etherphone system <ref> [29] </ref>, which uses a reference count mechanism called interests, can be used for this purpose. Additionally, a multimedia server must also support interactive control functions such as fast forward (FF) and rewind.
Reference: [30] <author> R.H. Thomas, H.C. Forsdick, T.R. Crowley, R.W. Schaaf, R.S. Tomlinsin, V.M. Travers, and G.G. Robertson. Diamond: </author> <title> A Multimedia Message System Built on a Distributed Architecture. </title> <journal> IEEE Computer, </journal> <volume> 18(12) </volume> <pages> 65-78, </pages> <month> December </month> <year> 1985. </year>
Reference-contexts: Traditionally, storage severs have been designed to provide efficient access to textual and numeric data. The first wave of multimedia research widened the scope of such storage servers to include documents containing images (e.g., the Diamond system <ref> [30] </ref> and the Muse system [10]). The next wave of multimedia research involved the addition of analog transmission and storage of audio and video.
Reference: [31] <author> F.A. Tobagi, J. Pang, R. Baird, and M. Gang. </author> <title> Streaming RAID: A Disk Storage System for Video and Audio Files. </title> <booktitle> In Proceedings of ACM Multimedia'93, </booktitle> <address> Anaheim, CA, </address> <pages> pages 393-400, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: Similarly, the concept of an on-demand digital video server, which provides services similar to a neighborhood video tape rental store over a metropolitan area network, has attracted wide attention [2]. Consequently, low-level design of multimedia storage servers has become the focus of several research projects in the recent past <ref> [3, 8, 9, 24, 31, 35, 37] </ref>. The main goal of this paper is to provide an overview of the various issues involved in designing a digital multimedia storage server, and present algorithms for addressing the specific storage and retrieval requirements of digital multimedia. <p> With staggering, all the streams still have the same round length, but each stream considers the round to begin at a different time, so that their requests are staggered rather than simultaneuous <ref> [31] </ref>. A combination of data striping and data interleaving can be used to scatter the media file across a large number of disks attached to a networked cluster of server machines. <p> For example, the IBM LANServer Ultimedia product [4] can serve 40 clients at MPEG-1 rates. This product extends the capabilities of the LANServer file system to support for multimedia streams, using file-system oriented client interface. Other systems in this class include FluentLinks, ProtoComm, and Starworks <ref> [31] </ref> (which uses a stream-oriented client interface). As the computing power of PCs increases with rapidly increasing processor speeds, the number of clients that these servers can support will also increase. Typically, these servers use disk arrays to obtain large storage capacity and throughput.
Reference: [32] <author> Shin-Yuan Tzou and David P. Anderson. </author> <title> A Performance Evaluation Of The DASH Message-Passing System. </title> <type> Technical Report UCB/CSD 88/452, </type> <institution> Computer Science Division, University of California, Berkeley, </institution> <address> California 94720, </address> <month> October </month> <year> 1988. </year>
Reference-contexts: For CM streams copying is unecessary, takes extra time, and produces extra traffic on the system bus. Because of the high throughput requirements of CM, it is desirable to share memory, or re-map the memory into another address space to avoid copying of data <ref> [32] </ref>. 4.2 File Structures A fundamental issue in implementing a file system is to keep track of which disk blocks belong to each file; keeping a map, as it were, of how to travel from block to block in a file.
Reference: [33] <author> Harrick M. Vin, Alok Goyal, Anshuman Goyal, and Pawan Goyal. </author> <title> An Observation-Based Admission Control Algorithm for Multimedia Servers. </title> <booktitle> In Proceedings of the IEEE International Conference on Multimedia Computing and Systems (ICMCS'94), </booktitle> <address> Boston, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: The use of models and descriptions of variable rate media is a subject of on-going research <ref> [27, 33] </ref>. For best effort traffic, there are different strategies for dealing with missed deadlines. For example, it may be desirable not to skip any blocks of data so as to ensure that the information received is intelligible.
Reference: [34] <author> Harrick M. Vin, Pawan Goyal, Alok Goyal, and Anshuman Goyal. </author> <title> A Statistical Admission Control Algorithm for Multimedia Servers. </title> <booktitle> In Proceedings of the ACM Multimedia'94, </booktitle> <address> San Francisco, </address> <month> October </month> <year> 1994. </year>
Reference-contexts: For example, a client may subscribe to a service that guarantees that 90% of deadlines will be met over an interval. To provide such guarantees, admission control algorithms must consider statistical behavior of the system while admitting new clients <ref> [34] </ref>. 3. Best Effort: no guarantees are given for meeting deadlines. The server just tries its best - i.e. it schedules such accesses only when there is time left over after servicing all guaranteed and statistical clients.
Reference: [35] <author> Harrick M. Vin and P. Venkat Rangan. </author> <title> Designing a Multi-User HDTV Storage Server. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 11(1) </volume> <pages> 153-164, </pages> <month> January </month> <year> 1993. </year>
Reference-contexts: Similarly, the concept of an on-demand digital video server, which provides services similar to a neighborhood video tape rental store over a metropolitan area network, has attracted wide attention [2]. Consequently, low-level design of multimedia storage servers has become the focus of several research projects in the recent past <ref> [3, 8, 9, 24, 31, 35, 37] </ref>. The main goal of this paper is to provide an overview of the various issues involved in designing a digital multimedia storage server, and present algorithms for addressing the specific storage and retrieval requirements of digital multimedia. <p> In fact, it can be shown that in order to enable a multimedia server to service the maximum number of clients simultaneously, the number of blocks retrieved for each client during each round should be proportional to its playback rate requirements <ref> [35] </ref>. The value of the proportionality constant, however, may depend on buffer space availability at the client and/or at the server.
Reference: [36] <author> C. Yu, W. Sun, D.Bitton, Q. Yang, R. Bruno, and J. Yus. </author> <title> Efficient Placement of Audio Data on Optical Disks for Real-Time Applications. </title> <journal> Communications of the ACM, </journal> <volume> 7(32) </volume> <pages> 862-871, </pages> <month> July </month> <year> 1989. </year>
Reference-contexts: If an algorithm like SCAN is used, which orders blocks regardless of the stream they belong to, then the impact of constrained placement is marginal [8]. A form of constrained placement was studied by Yu et al. <ref> [36] </ref>. In their analysis, the separation between each pair of successive blocks was fixed in order to eliminate burstiness in data transfer from disk.
Reference: [37] <author> P. Yu, M.S. Chen, and D.D. Kandlur. </author> <title> Design and Analysis of a Grouped Sweeping Scheme for Multimedia Storage Management. </title> <booktitle> Proceedings of Third International Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <address> San Diego, </address> <pages> pages 38-49, </pages> <month> November </month> <year> 1992. </year>
Reference-contexts: Similarly, the concept of an on-demand digital video server, which provides services similar to a neighborhood video tape rental store over a metropolitan area network, has attracted wide attention [2]. Consequently, low-level design of multimedia storage servers has become the focus of several research projects in the recent past <ref> [3, 8, 9, 24, 31, 35, 37] </ref>. The main goal of this paper is to provide an overview of the various issues involved in designing a digital multimedia storage server, and present algorithms for addressing the specific storage and retrieval requirements of digital multimedia.
Reference: [38] <author> P.S. Yu, M.S. Chen, and D.D. Kandlur. </author> <title> Grouped Sweeping Scheduling for DASD-based multimedia storage management. </title> <journal> Multimedia Systems Journal, </journal> <volume> 1 </volume> <pages> 99-109, </pages> <year> 1993. </year> <title> Multimedia Storage Servers: A Tutorial and Survey 18 </title>
Reference-contexts: However, SCAN's rounds will be shorter, so there is a trade-off between round length and the number of rounds between successive service. To exploit this tradeoff, a generalization, referred to as the Grouped Sweeping Scheme (GSS), was developed by Yu et al. <ref> [38] </ref>, and by Gemmell and Han [8]. The GSS algorithm partitions each round into a number of groups. Each client is assigned to a certain group, and the groups are serviced in a fixed order in each round. For each group, the SCAN disk scheduling algorithm is employed. <p> With the GSS scheme, on the other hand, one or more groups may be dedicated to non real-time requests. Furthermore, it is also possible to balance the load among groups in GSS to improve response time <ref> [38] </ref>. 2.3 Admission Control Algorithms Given the real-time performance requirements of each client, a multimedia server must employ admission control algorithms to determine whether a new client can be admitted without violating the performance requirements of the clients already being serviced.
Reference: [39] <author> W. Zhao, K. Ramamritham, and J.A. Stankovic. </author> <title> Preemptive Scheduling Under Time and Resource Constraints. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-36(8):949-960, </volume> <month> August </month> <year> 1987. </year>
Reference-contexts: The addition of real-time constraints, however, make direct application of traditional disk scheduling algorithms inappropriate for multimedia servers. Techniques for scheduling real-time tasks have also been extensively studied in the literature <ref> [14, 21, 39] </ref>. The best known algorithm for real-time scheduling of tasks with deadlines is the Earliest Deadline First (EDF) algorithm. In this algorithm, after accessing a media block from disk, the media block with the earliest deadline is scheduled for retrieval.
References-found: 39

