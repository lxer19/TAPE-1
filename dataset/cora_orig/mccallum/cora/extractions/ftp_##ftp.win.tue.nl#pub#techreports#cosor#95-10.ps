URL: ftp://ftp.win.tue.nl/pub/techreports/cosor/95-10.ps
Refering-URL: http://www.win.tue.nl/math/bs/cosor95.html
Root-URL: http://www.win.tue.nl
Title: Heuristic Methods for Machine Scheduling Problems with Processor Sets: A Computational Investigation  
Author: Roberto Lioce Carlo Martini 
Affiliation: Eindhoven University of Technology  University of Bologna  
Date: 95-10, 1995,  March 1995  
Pubnum: Memorandum COSOR  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> M. Dell'Amico, M. </author> <title> Trubian (1992). Applying taboo-search to the job shop scheduling problem. </title> <type> working paper, </type> <institution> Politecnico di Milano, </institution> <address> Italy 51, </address> <pages> 95-110. </pages>
Reference-contexts: The stopping criterion adopted is based on the max number of iteration, Maxiter. We adopted other strategies to improve the performances of our algorithm using the idea of Dell'Amico and Trubian <ref> [1] </ref>: 1. <p> Both limits are changed appling the following rule, every 30 iterations: a := b 3 p nc; minl := 4 + r fl a; maxl := minl + 25 fl m + r fl a where r is a random number 2 <ref> [0; 1] </ref>, m the number of machines and n the number of jobs. Let's now descibe the different features in the two procedures.
Reference: [2] <author> H. Br asel, T. Tautenhahn, F. </author> <title> Werner (1993). Constructive heuristic algorithms for the open shop problem. </title> <booktitle> Computing 51, </booktitle> <pages> 95-110. </pages>
Reference-contexts: We think that a finetuning of longest path algorithms for use in insertion algorithms is possible. Such a finetuning will decrease the time spent by all the procedures illustrated. The concept of beam search, successfully applied by Brasel et al. <ref> [2] </ref>, can be applied to the constructive algorithms to increase their performance. It seems worthwhile to investigate the possibilities of combining the speed of the swapping neighbourhood and the strength of the reinsertion neighbourhood.
Reference: [3] <author> R. </author> <title> Haupt (1989). A survey of priority rule-based scheduling. </title> <journal> OR Spectrum, </journal> <volume> 11, </volume> <pages> 3-16 </pages>
Reference-contexts: The large number of scheduling rules developed have persuaded researchers to make a classification in different categories (see Panwalkar and Iskander [5] and Haupt <ref> [3] </ref>). Our approach reflects this emphasis.
Reference: [4] <author> P.J.M. Van Laarhoven, E.H.L Aarts, J.K. </author> <title> Lenstra (1992). Job shop scheduling by simulated annealing. </title> <journal> Operations Research, </journal> <volume> Vol. 40, No.1, </volume> <pages> 45-60 </pages>
Reference-contexts: This means reverse the order in which the operations are performed on the common machines. The neighbourhood is supported by the following properties that are extendible to our generalization (see Van Laarhoven et al. <ref> [4] </ref>); 1. Reversing a machine arc on the critical path of a feasible solution s 2 S can never lead to an unfeasible solution, that is the resulting graph is acyclic. 2.
Reference: [5] <author> S. S. Panwalkar, W. </author> <title> Iskander (1977). A survey of scheduling rules. </title> <journal> Operations Research, </journal> <volume> Vol. 25, No.1, </volume> <pages> 45-60 </pages>
Reference-contexts: The large number of scheduling rules developed have persuaded researchers to make a classification in different categories (see Panwalkar and Iskander <ref> [5] </ref> and Haupt [3]). Our approach reflects this emphasis.
Reference: [6] <author> R.J.M. Vaessens, E.H.L. Aarts, J.K. </author> <title> Lenstra (1994). Job shop scheduling by local search. </title> <institution> memorandum COSOR 94-05 Eindhoven University of Technology, the Netherlands. </institution>
Reference-contexts: All these instances except TAIL 17, have been used by Vaessens et al <ref> [6] </ref> in their comparison of local search methods for the job shop problems. <p> Other techniques are genetic algorithms, that extends the concept of neighbourhood, and the taboo search. We adopt the taboo search technique because it proved to be fast and good for the Job Shop problems (see Vaessens et al. <ref> [6] </ref>).
Reference: [7] <author> R. Vaessens, M. </author> <month> Wennink </month> <year> (1995). </year> <title> An efficient insertion algorithm for a scheduling problem with processor sets. </title> <type> working paper, </type> <institution> Eindhoven University of Technology </institution>
Reference-contexts: Finding an optimal solution for this general problem is NP-hard. Therefore we consider heuristic methods which find sub-optimal solutions in reasonable time. Our objective is to compare the heuristic insertion strategy, based on the insertion algorithm developed by Wennink and Vaessens <ref> [7] </ref>, to other heuristic algorithms. In our research we discuss constructive and local search methods. We compare insertion as constructive method with the well known method of dispatching and the neighbourhood based on reinsertion with the much used swapping neighbourhood. <p> O (n). 1 This simple procedure produces, in short computational time, a schedule, the quality of which strongly depends on the priority rule adopted (see Section 3.4 ). 3.2 Insertion The core of our procedure for finding feasible starting solutions, based on insertion, uses an algorithm by Wennink and Vaessens <ref> [7] </ref> , by which one can efficiently compute the best 1 In fact the real implementation has higher complexity, due to the procedure that selects the most priority operation to be dispatched at each iteration. 7 insertion of an unscheduled operation in a partial schedule, where the makespan of the left
Reference: [8] <author> B. Veltman, B.J. Lageweg, J.K. </author> <title> Lenstra (1990). Multiprocessor scheduling with communication delays. </title> <booktitle> Parallel Computing 15, </booktitle> <pages> 173-182. </pages>
Reference-contexts: The objective is to find a feasible solution in which the maximum among the completion times 1 of the operations (makespan) is minimized. The problem is classified as P jf ix j ; precjC max in the three-field notation scheme of Veltman et al. <ref> [8] </ref>. It's easy to show that problems like job shop (JS), open shop (OS), flow shop (FS) are special cases of our problem.
Reference: [9] <author> F. Werner, A. </author> <title> Winkler (1995). Insertion techniques for the heuristic solution of the jobshop problem. </title> <note> To appear in Discrete Applied Mathematics. 31 </note>
References-found: 9

