URL: http://www.cl.cam.ac.uk:80/ftp/papers/reports/TR394-lcp-mutilated-chess-board.ps.gz
Refering-URL: http://www.cl.cam.ac.uk:80/ftp/papers/reports/
Root-URL: 
Title: A Simple Formalization and Proof for the Mutilated Chess Board  
Author: Lawrence C. Paulson 
Date: April 1996 Revised June 1997  
Address: Cambridge  
Affiliation: Computer Laboratory, University of  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> P. B. Andrews and M. Bishop. </author> <title> On sets, types, fixed points, </title> <editor> and checkerboards. In P. Miglioli, U. Moscato, D. Mundici, and M. Ornaghi, editors, </editor> <title> Theorem Proving with Analytic Tableaux and Related Methods, </title> <publisher> LNAI 1071, </publisher> <pages> pages 1-15. </pages> <publisher> Springer, </publisher> <year> 1996. </year> <booktitle> 5th International Workshop, TABLEAUX '96. </booktitle> <pages> 7 </pages>
Reference-contexts: Rudnicki's version [18] (also in Mizar) requires 300 lines. Andrews <ref> [1] </ref> reports a complex proof; it is not clear how much effort is needed to generate it. The inductive definition plays the same role as Subramanian's finite state machine [20].
Reference: [2] <author> G. Bancerek. </author> <title> The mutilated chessboard problem | checked by Mizar. </title> <note> In Boyer and Trybulec [3]. </note>
Reference-contexts: Several recent efforts <ref> [2, 18, 20] </ref> are in the same spirit as the present work: the chess board is formalized and impossibility of tiling proved following the intuitive argument about colours. Other work has used exhaustive search or radical reformulations of the problem. 6 The Isabelle formalization compares favourably with the others. <p> The def-initions are short, and in my view, easy to understand. The script is quite short at just over 200 lines, compared with over 500 for Subramanian [19]. (In terms of characters, which is more accurate, the ratio drops to 1.8.) According to McCarthy [10], Bancerek's mechanization <ref> [2] </ref> in Mizar requires 400 lines. Rudnicki's version [18] (also in Mizar) requires 300 lines. Andrews [1] reports a complex proof; it is not clear how much effort is needed to generate it. The inductive definition plays the same role as Subramanian's finite state machine [20].
Reference: [3] <editor> R. Boyer and A. Trybulec, editors. </editor> <booktitle> QED Workshop II. On the World Wide Web at http://www.mcs.anl.gov/qed/index.html, 1995. [4] 10th Computer Security Foundations Workshop. </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1997. </year>
Reference: [5] <author> G. Dowek et al. </author> <title> The Coq proof assistant user's guide. </title> <type> Technical Report 154, </type> <institution> INRIA-Rocquencourt, </institution> <year> 1993. </year> <note> Version 5.8. </note>
Reference-contexts: I have done this exercise using both Isa-belle/zf and Isabelle/hol. The definitions and proofs are similar in both systems. My formalization should be easy to mechanize in type theory provers, such as Coq <ref> [5] </ref> and HOL [6], that support inductive definitions. Type theory simplifies the presentation slightly, as type checking eliminates premises such as i 2 nat. implicitly by listing the desired introduction rules. An Isabelle package defines the appropriate least fixedpoint and proves the introduction and induction rules [12].
Reference: [6] <author> M. J. C. Gordon and T. F. Melham. </author> <title> Introduction to HOL: A Theorem Proving Environment for Higher Order Logic. </title> <publisher> Cambridge Univ. Press, </publisher> <year> 1993. </year>
Reference-contexts: I have done this exercise using both Isa-belle/zf and Isabelle/hol. The definitions and proofs are similar in both systems. My formalization should be easy to mechanize in type theory provers, such as Coq [5] and HOL <ref> [6] </ref>, that support inductive definitions. Type theory simplifies the presentation slightly, as type checking eliminates premises such as i 2 nat. implicitly by listing the desired introduction rules. An Isabelle package defines the appropriate least fixedpoint and proves the introduction and induction rules [12].
Reference: [7] <author> G. Huet. </author> <title> The Gallina specification language : A case study. </title> <booktitle> In Proceedings of 12th FST/TCS Conference, </booktitle> <address> New Delhi, </address> <publisher> LNCS 652. Springer, </publisher> <year> 1992. </year>
Reference-contexts: Their utility here suggests that they will find many further applications. Acknowledgements. I learned of the expressiveness of inductive definitions through participation in the ESPRIT project 6453 TYPES, and especially through the work of Gerard Huet <ref> [7, 8] </ref>. John Harrison commented on this paper.
Reference: [8] <author> G. Huet. </author> <title> Residual theory in -calculus: A formal development. </title> <journal> J. Func. Prog., </journal> <volume> 4(3) </volume> <pages> 371-394, </pages> <year> 1994. </year>
Reference-contexts: Their utility here suggests that they will find many further applications. Acknowledgements. I learned of the expressiveness of inductive definitions through participation in the ESPRIT project 6453 TYPES, and especially through the work of Gerard Huet <ref> [7, 8] </ref>. John Harrison commented on this paper.
Reference: [9] <author> J. McCarthy. </author> <title> A tough nut for proof procedures. </title> <type> Memo 16, </type> <institution> Stanford Artificial Intelligence Project, </institution> <month> July </month> <year> 1964. </year>
Reference-contexts: The mutilated board cannot be tiled because the two removed squares have the same colour. The mutilated chess board problem has stood as a challenge to the automated reasoning community since McCarthy <ref> [9] </ref> posed it in 1964. Robin-son [17] outlines the history of the problem, citing Max Black as its originator. Anybody can grasp the argument instantly, but even formalizing the problem seems hard, let alone proving it.
Reference: [10] <author> J. McCarthy. </author> <title> The mutilated checkerboard in set theory. </title> <note> In Boyer and Trybulec [3]. </note>
Reference-contexts: Anybody can grasp the argument instantly, but even formalizing the problem seems hard, let alone proving it. McCarthy has recently renewed his challenge, publishing a formalization that he claims is suitable for any "heavy duty set theory" prover <ref> [10] </ref>. Formalizations like this deny the simplicity of the original problem. They typically define complicated predicates to recognize objects. To recognize dominoes, a predicate checks whether its argument contains two adjacent squares. <p> The def-initions are short, and in my view, easy to understand. The script is quite short at just over 200 lines, compared with over 500 for Subramanian [19]. (In terms of characters, which is more accurate, the ratio drops to 1.8.) According to McCarthy <ref> [10] </ref>, Bancerek's mechanization [2] in Mizar requires 400 lines. Rudnicki's version [18] (also in Mizar) requires 300 lines. Andrews [1] reports a complex proof; it is not clear how much effort is needed to generate it. The inductive definition plays the same role as Subramanian's finite state machine [20].
Reference: [11] <author> J. S. Moore. Piton: </author> <title> A Mechanically Verified Assembly-Level Language. </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1996. </year>
Reference-contexts: Error states need not be formalized: they never occur. And many of the concepts expressed in pure Lisp can be expressed using library notions of Cartesian product, intersection, etc. The finite state machine approach that Subramanian describes has been applied to substantial system verifications <ref> [11] </ref>. The inductive approach described above is an effective means of verifying cryptographic protocols [15, 14]. It seems, therefore, that inductive definitions also scale up to serious problems. 6 Conclusions The mutilated chess board has no practical significance.
Reference: [12] <author> L. C. Paulson. </author> <title> A fixedpoint approach to implementing (co)inductive definitions. </title> <editor> In A. Bundy, editor, </editor> <booktitle> Automated Deduction | CADE-12 International Conference, LNAI 814, </booktitle> <pages> pages 148-161. </pages> <publisher> Springer, </publisher> <year> 1994. </year>
Reference-contexts: Type theory simplifies the presentation slightly, as type checking eliminates premises such as i 2 nat. implicitly by listing the desired introduction rules. An Isabelle package defines the appropriate least fixedpoint and proves the introduction and induction rules <ref> [12] </ref>.
Reference: [13] <author> L. C. Paulson. </author> <title> Isabelle: A Generic Theorem Prover. </title> <publisher> Springer, </publisher> <year> 1994. </year> <note> LNCS 828. </note>
Reference-contexts: The diagonally opposite squares (0; 0) and (2m 1; 2n 1) are both even; removing them results in a set that has fewer even squares than odd squares. 1 No such set, including the mutilated chess board, can be tiled using dominoes. 3 The formal definitions Isabelle <ref> [13] </ref> is a generic proof assistant, supporting many logics including zf set theory and higher-order logic. I have done this exercise using both Isa-belle/zf and Isabelle/hol. The definitions and proofs are similar in both systems.
Reference: [14] <author> L. C. Paulson. </author> <title> Mechanized proofs for a recursive authentication protocol. </title> <booktitle> In Computer Security Foundations Workshop [4], </booktitle> <pages> pages 84-95. </pages>
Reference-contexts: And many of the concepts expressed in pure Lisp can be expressed using library notions of Cartesian product, intersection, etc. The finite state machine approach that Subramanian describes has been applied to substantial system verifications [11]. The inductive approach described above is an effective means of verifying cryptographic protocols <ref> [15, 14] </ref>. It seems, therefore, that inductive definitions also scale up to serious problems. 6 Conclusions The mutilated chess board has no practical significance. But it is a telling example of the importance of formalizing the problem in a natural way.
Reference: [15] <author> L. C. Paulson. </author> <title> Proving properties of security protocols by induction. </title> <booktitle> In Computer Security Foundations Workshop [4], </booktitle> <pages> pages 70-83. </pages>
Reference-contexts: And many of the concepts expressed in pure Lisp can be expressed using library notions of Cartesian product, intersection, etc. The finite state machine approach that Subramanian describes has been applied to substantial system verifications [11]. The inductive approach described above is an effective means of verifying cryptographic protocols <ref> [15, 14] </ref>. It seems, therefore, that inductive definitions also scale up to serious problems. 6 Conclusions The mutilated chess board has no practical significance. But it is a telling example of the importance of formalizing the problem in a natural way.
Reference: [16] <author> L. C. Paulson and K. Gr~abczewski. </author> <title> Mechanizing set theory: Cardinal arithmetic and the axiom of choice. </title> <journal> J. Auto. Reas., </journal> <volume> 17(3) </volume> <pages> 291-323, </pages> <month> Dec. </month> <year> 1996. </year>
Reference-contexts: Finite cardinalities are tricky to reason about, as I have noted in previous work <ref> [16] </ref>. It took a couple of hours just to prove that a domino consists of one even square and one odd square; a richer library of arithmetic facts would have helped.
Reference: [17] <author> J. A. Robinson. </author> <title> Formal and informal proofs. </title> <editor> In R. S. Boyer, editor, </editor> <booktitle> Automated Reasoning: Essays in Honor of Woody Bledsoe, </booktitle> <pages> pages 267-281. </pages> <publisher> Kluwer Academic Publishers, </publisher> <year> 1991. </year>
Reference-contexts: The mutilated board cannot be tiled because the two removed squares have the same colour. The mutilated chess board problem has stood as a challenge to the automated reasoning community since McCarthy [9] posed it in 1964. Robin-son <ref> [17] </ref> outlines the history of the problem, citing Max Black as its originator. Anybody can grasp the argument instantly, but even formalizing the problem seems hard, let alone proving it.
Reference: [18] <author> P. Rudnicki. </author> <title> The mutilated checkerboard problem in the lightweight set theory of Mizar. On the World Wide Web at http://web.cs.ualberta.ca/~piotr/Mizar/Mutcheck, Nov. </title> <year> 1995. </year>
Reference-contexts: Several recent efforts <ref> [2, 18, 20] </ref> are in the same spirit as the present work: the chess board is formalized and impossibility of tiling proved following the intuitive argument about colours. Other work has used exhaustive search or radical reformulations of the problem. 6 The Isabelle formalization compares favourably with the others. <p> The script is quite short at just over 200 lines, compared with over 500 for Subramanian [19]. (In terms of characters, which is more accurate, the ratio drops to 1.8.) According to McCarthy [10], Bancerek's mechanization [2] in Mizar requires 400 lines. Rudnicki's version <ref> [18] </ref> (also in Mizar) requires 300 lines. Andrews [1] reports a complex proof; it is not clear how much effort is needed to generate it. The inductive definition plays the same role as Subramanian's finite state machine [20].
Reference: [19] <author> S. Subramanian. </author> <title> A mechanically checked proof of the mutilated checkerboard theorem. On the World Wide Web at http://www.cli.com/ftp/pub/nqthm/nqthm-1992/examples/subramanian/, 1994. </title>
Reference-contexts: Formalizations like this deny the simplicity of the original problem. They typically define complicated predicates to recognize objects. To recognize dominoes, a predicate checks whether its argument contains two adjacent squares. Subramanian defines "adjacent" by comparing co-ordinates <ref> [19, 20] </ref>: (defn adjp (s1 s2) (or (and (equal (car s1) (car s2)) (equal (plus 1 (cdr s1)) (cdr s2))) (and (equal (cdr s1) (cdr s2)) (equal (plus 1 (car s1)) (car s2))) )) Subramanian makes other definitions whose combined effect is to recognize a list of non-overlapping dominoes and to <p> Other work has used exhaustive search or radical reformulations of the problem. 6 The Isabelle formalization compares favourably with the others. The def-initions are short, and in my view, easy to understand. The script is quite short at just over 200 lines, compared with over 500 for Subramanian <ref> [19] </ref>. (In terms of characters, which is more accurate, the ratio drops to 1.8.) According to McCarthy [10], Bancerek's mechanization [2] in Mizar requires 400 lines. Rudnicki's version [18] (also in Mizar) requires 300 lines.
Reference: [20] <author> S. Subramanian. </author> <title> An interactive solution to the n fi n mutilated checkerboard problem. </title> <journal> J. Logic and Comput., </journal> <volume> 6(4), </volume> <year> 1996. </year> <note> In press. 8 </note>
Reference-contexts: Formalizations like this deny the simplicity of the original problem. They typically define complicated predicates to recognize objects. To recognize dominoes, a predicate checks whether its argument contains two adjacent squares. Subramanian defines "adjacent" by comparing co-ordinates <ref> [19, 20] </ref>: (defn adjp (s1 s2) (or (and (equal (car s1) (car s2)) (equal (plus 1 (cdr s1)) (cdr s2))) (and (equal (cdr s1) (cdr s2)) (equal (plus 1 (car s1)) (car s2))) )) Subramanian makes other definitions whose combined effect is to recognize a list of non-overlapping dominoes and to <p> Several recent efforts <ref> [2, 18, 20] </ref> are in the same spirit as the present work: the chess board is formalized and impossibility of tiling proved following the intuitive argument about colours. Other work has used exhaustive search or radical reformulations of the problem. 6 The Isabelle formalization compares favourably with the others. <p> Rudnicki's version [18] (also in Mizar) requires 300 lines. Andrews [1] reports a complex proof; it is not clear how much effort is needed to generate it. The inductive definition plays the same role as Subramanian's finite state machine <ref> [20] </ref>. The initial state is the empty board; next states are obtained by adding disjoint tiles; properties that hold of all reachable states are proved by induction. There are two reasons why the Isabelle mechanization is shorter. Error states need not be formalized: they never occur.
References-found: 19

