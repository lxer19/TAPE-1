URL: http://www.research.att.com/library/trs/TRs/96/96.15/96.15.1.body.ps
Refering-URL: http://www.research.att.com/library/trs/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: fmab,jf,presnickg@research.att.com  mstrauss@cs.iastate.edu  
Title: Managing Trust in an Information-Labeling System  
Author: M. Blaze J. Feigenbaum P. Resnick M. Strauss 
Date: November 4, 1996  
Address: Murray Hill, NJ 07974  Ames, IA 50010  
Affiliation: AT&T Laboratories  Iowa State University  
Abstract: We address the problem of trust management in information labeling. The Platform for Internet Content Selection (PICS), proposed by Resnick and Miller [12], establishes a flexible way to label documents according to various aspects of their contents, thus permitting a large and diverse group of potential viewers to make (automated) informed judgments about whether or not to view them. For some viewers, the relevant aspects may be quantity or quality of material in certain topical areas, and, for others, they may be the presence or absence of potentially offensive language or images. Thus PICS users need a language in which to specify their PICS profiles, i.e., the aspects according to which they want documents to be labeled, the acceptable values of those labels, and the parties whom they trust to do the labeling. Furthermore, PICS-compliant client software (e.g., a web browser) needs a mechanism for checking whether a document meets the requirements set forth in a viewer's profile. A trust management solution for the PICS information-labeling system must provide both a language for specifying profiles and a mechanism for checking whether a document meets the requirements given in a profile. This paper describes our design and implementation of a PICS profile language and our experience integrating the PolicyMaker trust management engine with a PICS-compliant browser to provide a checking mechanism. PolicyMaker was originally designed to address trust management problems in network services that process signed requests for action and use public-key cryptography [2]. Because information labeling is not inherently a cryptographically based service, and thus is outside the original scope of the PolicyMaker framework, our work on information labeling is evidence of PolicyMaker's power and adaptability.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. V. Aho, B. W. Kernighan, and P. J. Weinberger, </author> <title> The AWK Programming Language, </title> <publisher> Addison-Wesley, </publisher> <address> Reading, </address> <year> 1988. </year>
Reference-contexts: B is expressed as a filter, i.e., an interpreted program run on the action string within a safe wrapper. The PolicyMaker interpreter currently supports three filter languages: a regular expression system (similar to those used in Unix), a safe version of AWK <ref> [1] </ref>, called AWKWARD, and a macro language that preprocesses into AWKWARD. Other "safe" languages, such as Java [4] or Safe-TCL [11], are easily added as desired. In general, any language that can be safely interpreted can be used as a filter language.
Reference: [2] <author> M. Blaze, J. Feigenbaum, and J. Lacy, </author> <title> Decentralized Trust Management, </title> <booktitle> in Proceedings of the Symposium on Security and Privacy, </booktitle> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <year> 1996, </year> <pages> pp. 164-173. </pages>
Reference-contexts: Nonetheless, because they are popular, natural, and perhaps even appropriate for some classes of users, we must create a profile language that accommodates such strategies, and in any case they present an interesting trust management challenge. This paper shows how to use the PolicyMaker system <ref> [2] </ref> to solve the trust management problem in PICS. Although PolicyMaker was originally designed to address trust management problems in network services that process signed requests for action and use public-key cryptography, it is applicable mutatis mutandis to the trust management problem for information-labeling. <p> For example, the Simon Wiesenthal Center can label anti-semitic propaganda without the cooperation of neo-Nazi content providers. 3 Review of PolicyMaker This section provides a brief review, excerpted and adapted from <ref> [2] </ref> and [9], of the trust management approach of Blaze, Feigenbaum, and Lacy. Readers already familiar with [2] should skip to the next section. 3.1 Basic Elements of PolicyMaker The goal of trust management is to evaluate whether a particular query or proposed action is consistent with local policy. <p> For example, the Simon Wiesenthal Center can label anti-semitic propaganda without the cooperation of neo-Nazi content providers. 3 Review of PolicyMaker This section provides a brief review, excerpted and adapted from <ref> [2] </ref> and [9], of the trust management approach of Blaze, Feigenbaum, and Lacy. Readers already familiar with [2] should skip to the next section. 3.1 Basic Elements of PolicyMaker The goal of trust management is to evaluate whether a particular query or proposed action is consistent with local policy. In the PolicyMaker system, the action under consideration is represented by an action string. <p> Because the basic PolicyMaker model is monotonic, ignoring such assertions cannot cause the acceptance of an action that would otherwise be rejected, although it may cause the rejection of an otherwise acceptable action. 3.3 Summary To integrate PolicyMaker with an application, the basic approach of Blaze, Feigenbaum, and Lacy <ref> [2] </ref> thus requires one to construct translators for the application's actions and credentials. Generally, the following sequence of steps is taken for each request: 1. Generate an action string for the action to be considered. 2. Find the application-specific "credentials" that purport to justify the action string. 3.
Reference: [3] <author> D. Crocker, RFC-822: </author> <title> Standard for the Format of ARPA Internet Text Messages, </title> <note> http://ds.internic.net/rfc/rfc822.txt, August 1982. </note>
Reference-contexts: A label describes either a single document or a group of documents (e.g., a site.) A label may be digitally signed and may include a cryptographic hash of the associated document. * An embedding of labels (actually, lists of labels) into the RFC-822 transmission format <ref> [3] </ref> and the HTML document format [5]. * An extension of the HTTP protocol [6], which allows clients to request that labels be trans mitted with a document. * A query-syntax for an on-line database of labels (called a label bureau). 4 We now give an example of a PICS rating
Reference: [4] <author> J. Gosling and H. McGilton, </author> <title> The Java Language Environment, A White Paper, Sun Microsys-tems, </title> <publisher> Inc., </publisher> <address> Mountain View, </address> <year> 1995. </year>
Reference-contexts: The PolicyMaker interpreter currently supports three filter languages: a regular expression system (similar to those used in Unix), a safe version of AWK [1], called AWKWARD, and a macro language that preprocesses into AWKWARD. Other "safe" languages, such as Java <ref> [4] </ref> or Safe-TCL [11], are easily added as desired. In general, any language that can be safely interpreted can be used as a filter language. A dis 7 tinguishing feature of PolicyMaker is that filters are allowed the full complexity and expressiveness of general programs.
Reference: [5] <institution> HyperText Markup Language (HTML), </institution> <note> http://www.w3.org/pub/WWW/MarkUp. </note>
Reference-contexts: label describes either a single document or a group of documents (e.g., a site.) A label may be digitally signed and may include a cryptographic hash of the associated document. * An embedding of labels (actually, lists of labels) into the RFC-822 transmission format [3] and the HTML document format <ref> [5] </ref>. * An extension of the HTTP protocol [6], which allows clients to request that labels be trans mitted with a document. * A query-syntax for an on-line database of labels (called a label bureau). 4 We now give an example of a PICS rating service.
Reference: [6] <institution> HyperText Transfer Protocol (HTTP), http://www.w3.org/pub/WWW/Protocols. </institution>
Reference-contexts: group of documents (e.g., a site.) A label may be digitally signed and may include a cryptographic hash of the associated document. * An embedding of labels (actually, lists of labels) into the RFC-822 transmission format [3] and the HTML document format [5]. * An extension of the HTTP protocol <ref> [6] </ref>, which allows clients to request that labels be trans mitted with a document. * A query-syntax for an on-line database of labels (called a label bureau). 4 We now give an example of a PICS rating service. The initial section includes general infor-mation about the service.
Reference: [7] <institution> Information Technology Open Systems Interconnection The Directory:Authentication Framework, Recommendation X.509, </institution> <address> ISO/IEC 9594-8. </address>
Reference-contexts: By not interpreting signatures itself or insisting on a particular signature scheme or format, PolicyMaker makes it very easy to implement a certification authority that exploits existing infrastructure. For example, it is possible to have trust structures that consist of a mixture of X.509 certificates <ref> [7] </ref>, interpreted by a program that converts them into PolicyMaker credentials, and certificates consisting of simple text messages signed with a program such as PGP. In the PolicyMaker assertion "A allows B," A is a source of authority, and B is what A authorizes.
Reference: [8] <author> T. Krauskopf, J. Miller, P. Resnick, and G. W. Treese, </author> <title> Label Syntax and Communication Protocols, World Wide Web Consortium, </title> <note> http://w3.org/PICS/labels.html, May 1996. </note>
Reference-contexts: For example, the Simon Wiesenthal Center, which is concerned about Nazi propaganda and other hate speech, could label materials that are historically inaccurate or promote hate. 2.2 Elements of PICS Specifications There are two PICS specification documents <ref> [8, 10] </ref>. The most important components are: * A syntax for describing a rating service, which allows computer programs to present the service and its labels to users. * A syntax for labels, which allows computer programs to process them.
Reference: [9] <author> R. Levien, L. McCarthy, and M. </author> <title> Blaze, Transparent Internet E-mail Security, </title> <note> submitted for publication. </note>
Reference-contexts: For example, the Simon Wiesenthal Center can label anti-semitic propaganda without the cooperation of neo-Nazi content providers. 3 Review of PolicyMaker This section provides a brief review, excerpted and adapted from [2] and <ref> [9] </ref>, of the trust management approach of Blaze, Feigenbaum, and Lacy. Readers already familiar with [2] should skip to the next section. 3.1 Basic Elements of PolicyMaker The goal of trust management is to evaluate whether a particular query or proposed action is consistent with local policy.
Reference: [10] <author> J. Miller, P. Resnick, and D. Singer, </author> <title> Rating Services and Rating Systems (and Their Machine Readable Descriptions), World Wide Web Consortium, </title> <note> http://w3.org/PICS/services.html, May 1996. </note>
Reference-contexts: For example, the Simon Wiesenthal Center, which is concerned about Nazi propaganda and other hate speech, could label materials that are historically inaccurate or promote hate. 2.2 Elements of PICS Specifications There are two PICS specification documents <ref> [8, 10] </ref>. The most important components are: * A syntax for describing a rating service, which allows computer programs to present the service and its labels to users. * A syntax for labels, which allows computer programs to process them.
Reference: [11] <author> J. K. Ousterhout, </author> <title> TCL and the TK Toolkit, </title> <publisher> Addison-Wesley, </publisher> <address> Reading, </address> <year> 1994. </year>
Reference-contexts: The PolicyMaker interpreter currently supports three filter languages: a regular expression system (similar to those used in Unix), a safe version of AWK [1], called AWKWARD, and a macro language that preprocesses into AWKWARD. Other "safe" languages, such as Java [4] or Safe-TCL <ref> [11] </ref>, are easily added as desired. In general, any language that can be safely interpreted can be used as a filter language. A dis 7 tinguishing feature of PolicyMaker is that filters are allowed the full complexity and expressiveness of general programs.
Reference: [12] <author> P. Resnick and J. Miller, PICS: </author> <title> Internet Access Controls Without Censorship, </title> <journal> Communications of the ACM, </journal> <month> October </month> <year> 1996. </year>
Reference-contexts: Traditionally, broadcast media such as television and radio have been subject to more restrictions than print media, for exactly this reason. The PICS information-labeling system <ref> [12] </ref> provides a flexible approach to filtering information at the point of reception rather than at the point of distribution, thus holding out the possibility of avoiding government censorship in the process of controlling access to information on the Internet. <p> In Section 5, we conclude that our experience supports the view that trust management is an important component of network services, including services that do not involve cryptography in an apparent and essential way. 2 Review of PICS This section provides a brief review, excerpted and adapted from <ref> [12] </ref>, of the PICS information-labeling system put forth by Resnick and Miller. Readers already familiar with [12] should skip to the next section. 2.1 The PICS Approach PICS, the Platform for Internet Content Selection, establishes Internet conventions for label formats and distribution methods, while dictating neither a labeling vocabulary nor who <p> is an important component of network services, including services that do not involve cryptography in an apparent and essential way. 2 Review of PICS This section provides a brief review, excerpted and adapted from <ref> [12] </ref>, of the PICS information-labeling system put forth by Resnick and Miller. Readers already familiar with [12] should skip to the next section. 2.1 The PICS Approach PICS, the Platform for Internet Content Selection, establishes Internet conventions for label formats and distribution methods, while dictating neither a labeling vocabulary nor who should pay attention to which labels.
Reference: [13] <author> P. Zimmermann, </author> <title> PGP User's Guide, </title> <publisher> MIT Press, </publisher> <address> Cambridge, </address> <year> 1994. </year> <month> 17 </month>
Reference-contexts: As a simple example, an unconditional delegation credential states that its authorizer-id will accept all action strings that are accepted by another specific authorizer-id. PolicyMaker credentials thus differ in two important ways from application-specific notions of "credential" such as PGP signed keys <ref> [13] </ref> or PICS labels.
References-found: 13

